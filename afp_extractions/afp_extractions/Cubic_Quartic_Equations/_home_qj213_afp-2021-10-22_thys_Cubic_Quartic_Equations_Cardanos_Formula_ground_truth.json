{"file_name": "/home/qj213/afp-2021-10-22/thys/Cubic_Quartic_Equations/Cardanos_Formula.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Cubic_Quartic_Equations", "problem_names": ["lemma to_depressed_cubic: fixes a :: \"'a :: field_char_0\"\n  assumes a: \"a \\<noteq> 0\" \n  and xy: \"x = y - b / (3 * a)\" \n  and e: \"e = (c - b^2 / (3 * a)) / a\" \n  and f: \"f = (d + 2 * b^3 / (27 * a^2) - b * c / (3 * a)) / a\" \nshows \"(a * x ^ 3 + b * x\\<^sup>2 + c * x + d = 0) \\<longleftrightarrow> y^3 + e * y + f = 0\"", "lemma cubic_depressed: fixes e :: \"'a :: field_char_0\" \n  assumes yz: \"e \\<noteq> 0 \\<Longrightarrow> z^2 - y * z - e / 3 = 0\" \n  and u: \"e \\<noteq> 0 \\<Longrightarrow> u = z^3\" \n  and v: \"v = - (e ^ 3 / 27)\" \nshows \"y^3 + e * y + f = 0 \\<longleftrightarrow> (if e = 0 then y^3 = -f else u\\<^sup>2 + f * u + v = 0)\"", "lemma solve_cubic_depressed_Cardano_complex: fixes e :: complex \n  assumes e0: \"e \\<noteq> 0\" \n  and v: \"v = - (e ^ 3 / 27)\" \n  and u: \"u^2 + f * u + v = 0\" \nshows \"y^3 + e * y + f = 0 \\<longleftrightarrow> (\\<exists> z. z^3 = u \\<and> y = z - e / (3 * z))\"", "lemma discriminant_cubic_depressed: assumes \"[:-x,1:] * [:-y,1:] * [:-z,1:] = [:f,e,0,1:]\" \n  shows \"discriminant_cubic_depressed e f = (x-y)^2 * (x - z)^2 * (y - z)^2\"", "lemma solve_cubic_depressed_Cardano_real: fixes e f v u :: real \n  defines \"y1 \\<equiv> root 3 u - e / (3 * root 3 u)\" \n    and \"\\<Delta> \\<equiv> discriminant_cubic_depressed e f\" \n  assumes e0: \"e \\<noteq> 0\" \n  and v: \"v = - (e ^ 3 / 27)\" \n  and u: \"u\\<^sup>2 + f * u + v = 0\" (* this implies \\<Delta> \\<le> 0 *)\nshows \"y1^3 + e * y1 + f = 0\"\n  \"\\<Delta> \\<noteq> 0 \\<Longrightarrow> y^3 + e * y + f = 0 \\<Longrightarrow> y = y1\"", "lemma solve_cubic_depressed_Cardano_all_real_roots: fixes e f v :: real and y :: complex\n  defines \"\\<Delta> \\<equiv> discriminant_cubic_depressed e f\" \n  assumes Delta: \"\\<Delta> \\<ge> 0\" \n  and rt: \"y^3 + e * y + f = 0\"\nshows \"y \\<in> \\<real>\""], "translations": [["", "lemma to_depressed_cubic: fixes a :: \"'a :: field_char_0\"\n  assumes a: \"a \\<noteq> 0\" \n  and xy: \"x = y - b / (3 * a)\" \n  and e: \"e = (c - b^2 / (3 * a)) / a\" \n  and f: \"f = (d + 2 * b^3 / (27 * a^2) - b * c / (3 * a)) / a\" \nshows \"(a * x ^ 3 + b * x\\<^sup>2 + c * x + d = 0) \\<longleftrightarrow> y^3 + e * y + f = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a * x ^ 3 + b * x\\<^sup>2 + c * x + d = (0::'a)) =\n    (y ^ 3 + e * y + f = (0::'a))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (a * x ^ 3 + b * x\\<^sup>2 + c * x + d = (0::'a)) =\n    (y ^ 3 + e * y + f = (0::'a))", "let ?yexp = \"y^3 + e * y + f\""], ["proof (state)\ngoal (1 subgoal):\n 1. (a * x ^ 3 + b * x\\<^sup>2 + c * x + d = (0::'a)) =\n    (y ^ 3 + e * y + f = (0::'a))", "have \"a * x^3 + b * x^2 + c * x + d = 0 \\<longleftrightarrow> (a * x^3 + b * x^2 + c * x + d) / a = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a * x ^ 3 + b * x\\<^sup>2 + c * x + d = (0::'a)) =\n    ((a * x ^ 3 + b * x\\<^sup>2 + c * x + d) / a = (0::'a))", "using a"], ["proof (prove)\nusing this:\n  a \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. (a * x ^ 3 + b * x\\<^sup>2 + c * x + d = (0::'a)) =\n    ((a * x ^ 3 + b * x\\<^sup>2 + c * x + d) / a = (0::'a))", "by auto"], ["proof (state)\nthis:\n  (a * x ^ 3 + b * x\\<^sup>2 + c * x + d = (0::'a)) =\n  ((a * x ^ 3 + b * x\\<^sup>2 + c * x + d) / a = (0::'a))\n\ngoal (1 subgoal):\n 1. (a * x ^ 3 + b * x\\<^sup>2 + c * x + d = (0::'a)) =\n    (y ^ 3 + e * y + f = (0::'a))", "also"], ["proof (state)\nthis:\n  (a * x ^ 3 + b * x\\<^sup>2 + c * x + d = (0::'a)) =\n  ((a * x ^ 3 + b * x\\<^sup>2 + c * x + d) / a = (0::'a))\n\ngoal (1 subgoal):\n 1. (a * x ^ 3 + b * x\\<^sup>2 + c * x + d = (0::'a)) =\n    (y ^ 3 + e * y + f = (0::'a))", "have \"(a * x^3 + b * x^2 + c * x + d) / a = ?yexp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a * x ^ 3 + b * x\\<^sup>2 + c * x + d) / a = y ^ 3 + e * y + f", "unfolding xy e f power3_eq_cube power2_eq_square"], ["proof (prove)\ngoal (1 subgoal):\n 1. (a *\n     ((y - b / ((3::'a) * a)) * (y - b / ((3::'a) * a)) *\n      (y - b / ((3::'a) * a))) +\n     b * ((y - b / ((3::'a) * a)) * (y - b / ((3::'a) * a))) +\n     c * (y - b / ((3::'a) * a)) +\n     d) /\n    a =\n    y * y * y + (c - b * b / ((3::'a) * a)) / a * y +\n    (d + (2::'a) * (b * b * b) / ((27::'a) * (a * a)) -\n     b * c / ((3::'a) * a)) /\n    a", "using a"], ["proof (prove)\nusing this:\n  a \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. (a *\n     ((y - b / ((3::'a) * a)) * (y - b / ((3::'a) * a)) *\n      (y - b / ((3::'a) * a))) +\n     b * ((y - b / ((3::'a) * a)) * (y - b / ((3::'a) * a))) +\n     c * (y - b / ((3::'a) * a)) +\n     d) /\n    a =\n    y * y * y + (c - b * b / ((3::'a) * a)) / a * y +\n    (d + (2::'a) * (b * b * b) / ((27::'a) * (a * a)) -\n     b * c / ((3::'a) * a)) /\n    a", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  (a * x ^ 3 + b * x\\<^sup>2 + c * x + d) / a = y ^ 3 + e * y + f\n\ngoal (1 subgoal):\n 1. (a * x ^ 3 + b * x\\<^sup>2 + c * x + d = (0::'a)) =\n    (y ^ 3 + e * y + f = (0::'a))", "finally"], ["proof (chain)\npicking this:\n  (a * x ^ 3 + b * x\\<^sup>2 + c * x + d = (0::'a)) =\n  (y ^ 3 + e * y + f = (0::'a))", "show ?thesis"], ["proof (prove)\nusing this:\n  (a * x ^ 3 + b * x\\<^sup>2 + c * x + d = (0::'a)) =\n  (y ^ 3 + e * y + f = (0::'a))\n\ngoal (1 subgoal):\n 1. (a * x ^ 3 + b * x\\<^sup>2 + c * x + d = (0::'a)) =\n    (y ^ 3 + e * y + f = (0::'a))", "."], ["proof (state)\nthis:\n  (a * x ^ 3 + b * x\\<^sup>2 + c * x + d = (0::'a)) =\n  (y ^ 3 + e * y + f = (0::'a))\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Solving the depressed case in arbitrary fields\\<close>"], ["", "lemma cubic_depressed: fixes e :: \"'a :: field_char_0\" \n  assumes yz: \"e \\<noteq> 0 \\<Longrightarrow> z^2 - y * z - e / 3 = 0\" \n  and u: \"e \\<noteq> 0 \\<Longrightarrow> u = z^3\" \n  and v: \"v = - (e ^ 3 / 27)\" \nshows \"y^3 + e * y + f = 0 \\<longleftrightarrow> (if e = 0 then y^3 = -f else u\\<^sup>2 + f * u + v = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y ^ 3 + e * y + f = (0::'a)) =\n    (if e = (0::'a) then y ^ 3 = - f else u\\<^sup>2 + f * u + v = (0::'a))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (y ^ 3 + e * y + f = (0::'a)) =\n    (if e = (0::'a) then y ^ 3 = - f else u\\<^sup>2 + f * u + v = (0::'a))", "let ?yexp = \"y^3 + e * y + f\""], ["proof (state)\ngoal (1 subgoal):\n 1. (y ^ 3 + e * y + f = (0::'a)) =\n    (if e = (0::'a) then y ^ 3 = - f else u\\<^sup>2 + f * u + v = (0::'a))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (y ^ 3 + e * y + f = (0::'a)) =\n    (if e = (0::'a) then y ^ 3 = - f else u\\<^sup>2 + f * u + v = (0::'a))", "proof (cases \"e = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. e = (0::'a) \\<Longrightarrow>\n    (y ^ 3 + e * y + f = (0::'a)) =\n    (if e = (0::'a) then y ^ 3 = - f else u\\<^sup>2 + f * u + v = (0::'a))\n 2. e \\<noteq> (0::'a) \\<Longrightarrow>\n    (y ^ 3 + e * y + f = (0::'a)) =\n    (if e = (0::'a) then y ^ 3 = - f else u\\<^sup>2 + f * u + v = (0::'a))", "case False"], ["proof (state)\nthis:\n  e \\<noteq> (0::'a)\n\ngoal (2 subgoals):\n 1. e = (0::'a) \\<Longrightarrow>\n    (y ^ 3 + e * y + f = (0::'a)) =\n    (if e = (0::'a) then y ^ 3 = - f else u\\<^sup>2 + f * u + v = (0::'a))\n 2. e \\<noteq> (0::'a) \\<Longrightarrow>\n    (y ^ 3 + e * y + f = (0::'a)) =\n    (if e = (0::'a) then y ^ 3 = - f else u\\<^sup>2 + f * u + v = (0::'a))", "note yz = yz[OF False]"], ["proof (state)\nthis:\n  z\\<^sup>2 - y * z - e / (3::'a) = (0::'a)\n\ngoal (2 subgoals):\n 1. e = (0::'a) \\<Longrightarrow>\n    (y ^ 3 + e * y + f = (0::'a)) =\n    (if e = (0::'a) then y ^ 3 = - f else u\\<^sup>2 + f * u + v = (0::'a))\n 2. e \\<noteq> (0::'a) \\<Longrightarrow>\n    (y ^ 3 + e * y + f = (0::'a)) =\n    (if e = (0::'a) then y ^ 3 = - f else u\\<^sup>2 + f * u + v = (0::'a))", "from yz"], ["proof (chain)\npicking this:\n  z\\<^sup>2 - y * z - e / (3::'a) = (0::'a)", "have eyz: \"e = 3 * (z^2 - y * z)\""], ["proof (prove)\nusing this:\n  z\\<^sup>2 - y * z - e / (3::'a) = (0::'a)\n\ngoal (1 subgoal):\n 1. e = (3::'a) * (z\\<^sup>2 - y * z)", "by auto"], ["proof (state)\nthis:\n  e = (3::'a) * (z\\<^sup>2 - y * z)\n\ngoal (2 subgoals):\n 1. e = (0::'a) \\<Longrightarrow>\n    (y ^ 3 + e * y + f = (0::'a)) =\n    (if e = (0::'a) then y ^ 3 = - f else u\\<^sup>2 + f * u + v = (0::'a))\n 2. e \\<noteq> (0::'a) \\<Longrightarrow>\n    (y ^ 3 + e * y + f = (0::'a)) =\n    (if e = (0::'a) then y ^ 3 = - f else u\\<^sup>2 + f * u + v = (0::'a))", "from yz False"], ["proof (chain)\npicking this:\n  z\\<^sup>2 - y * z - e / (3::'a) = (0::'a)\n  e \\<noteq> (0::'a)", "have z0: \"z \\<noteq> 0\""], ["proof (prove)\nusing this:\n  z\\<^sup>2 - y * z - e / (3::'a) = (0::'a)\n  e \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. z \\<noteq> (0::'a)", "by auto"], ["proof (state)\nthis:\n  z \\<noteq> (0::'a)\n\ngoal (2 subgoals):\n 1. e = (0::'a) \\<Longrightarrow>\n    (y ^ 3 + e * y + f = (0::'a)) =\n    (if e = (0::'a) then y ^ 3 = - f else u\\<^sup>2 + f * u + v = (0::'a))\n 2. e \\<noteq> (0::'a) \\<Longrightarrow>\n    (y ^ 3 + e * y + f = (0::'a)) =\n    (if e = (0::'a) then y ^ 3 = - f else u\\<^sup>2 + f * u + v = (0::'a))", "have \"?yexp = 0 \\<longleftrightarrow> z^3 * ?yexp = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y ^ 3 + e * y + f = (0::'a)) = (z ^ 3 * (y ^ 3 + e * y + f) = (0::'a))", "using z0"], ["proof (prove)\nusing this:\n  z \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. (y ^ 3 + e * y + f = (0::'a)) = (z ^ 3 * (y ^ 3 + e * y + f) = (0::'a))", "by simp"], ["proof (state)\nthis:\n  (y ^ 3 + e * y + f = (0::'a)) = (z ^ 3 * (y ^ 3 + e * y + f) = (0::'a))\n\ngoal (2 subgoals):\n 1. e = (0::'a) \\<Longrightarrow>\n    (y ^ 3 + e * y + f = (0::'a)) =\n    (if e = (0::'a) then y ^ 3 = - f else u\\<^sup>2 + f * u + v = (0::'a))\n 2. e \\<noteq> (0::'a) \\<Longrightarrow>\n    (y ^ 3 + e * y + f = (0::'a)) =\n    (if e = (0::'a) then y ^ 3 = - f else u\\<^sup>2 + f * u + v = (0::'a))", "also"], ["proof (state)\nthis:\n  (y ^ 3 + e * y + f = (0::'a)) = (z ^ 3 * (y ^ 3 + e * y + f) = (0::'a))\n\ngoal (2 subgoals):\n 1. e = (0::'a) \\<Longrightarrow>\n    (y ^ 3 + e * y + f = (0::'a)) =\n    (if e = (0::'a) then y ^ 3 = - f else u\\<^sup>2 + f * u + v = (0::'a))\n 2. e \\<noteq> (0::'a) \\<Longrightarrow>\n    (y ^ 3 + e * y + f = (0::'a)) =\n    (if e = (0::'a) then y ^ 3 = - f else u\\<^sup>2 + f * u + v = (0::'a))", "have \"z^3 * ?yexp = z^6 + f * z^3 - e^3/27\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z ^ 3 * (y ^ 3 + e * y + f) = z ^ 6 + f * z ^ 3 - e ^ 3 / (27::'a)", "unfolding eyz"], ["proof (prove)\ngoal (1 subgoal):\n 1. z ^ 3 * (y ^ 3 + (3::'a) * (z\\<^sup>2 - y * z) * y + f) =\n    z ^ 6 + f * z ^ 3 - ((3::'a) * (z\\<^sup>2 - y * z)) ^ 3 / (27::'a)", "by algebra"], ["proof (state)\nthis:\n  z ^ 3 * (y ^ 3 + e * y + f) = z ^ 6 + f * z ^ 3 - e ^ 3 / (27::'a)\n\ngoal (2 subgoals):\n 1. e = (0::'a) \\<Longrightarrow>\n    (y ^ 3 + e * y + f = (0::'a)) =\n    (if e = (0::'a) then y ^ 3 = - f else u\\<^sup>2 + f * u + v = (0::'a))\n 2. e \\<noteq> (0::'a) \\<Longrightarrow>\n    (y ^ 3 + e * y + f = (0::'a)) =\n    (if e = (0::'a) then y ^ 3 = - f else u\\<^sup>2 + f * u + v = (0::'a))", "also"], ["proof (state)\nthis:\n  z ^ 3 * (y ^ 3 + e * y + f) = z ^ 6 + f * z ^ 3 - e ^ 3 / (27::'a)\n\ngoal (2 subgoals):\n 1. e = (0::'a) \\<Longrightarrow>\n    (y ^ 3 + e * y + f = (0::'a)) =\n    (if e = (0::'a) then y ^ 3 = - f else u\\<^sup>2 + f * u + v = (0::'a))\n 2. e \\<noteq> (0::'a) \\<Longrightarrow>\n    (y ^ 3 + e * y + f = (0::'a)) =\n    (if e = (0::'a) then y ^ 3 = - f else u\\<^sup>2 + f * u + v = (0::'a))", "have \"\\<dots> = u^2 + f * u + v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z ^ 6 + f * z ^ 3 - e ^ 3 / (27::'a) = u\\<^sup>2 + f * u + v", "unfolding u[OF False] v"], ["proof (prove)\ngoal (1 subgoal):\n 1. z ^ 6 + f * z ^ 3 - e ^ 3 / (27::'a) =\n    (z ^ 3)\\<^sup>2 + f * z ^ 3 + - (e ^ 3 / (27::'a))", "by algebra"], ["proof (state)\nthis:\n  z ^ 6 + f * z ^ 3 - e ^ 3 / (27::'a) = u\\<^sup>2 + f * u + v\n\ngoal (2 subgoals):\n 1. e = (0::'a) \\<Longrightarrow>\n    (y ^ 3 + e * y + f = (0::'a)) =\n    (if e = (0::'a) then y ^ 3 = - f else u\\<^sup>2 + f * u + v = (0::'a))\n 2. e \\<noteq> (0::'a) \\<Longrightarrow>\n    (y ^ 3 + e * y + f = (0::'a)) =\n    (if e = (0::'a) then y ^ 3 = - f else u\\<^sup>2 + f * u + v = (0::'a))", "finally"], ["proof (chain)\npicking this:\n  (y ^ 3 + e * y + f = (0::'a)) = (u\\<^sup>2 + f * u + v = (0::'a))", "show ?thesis"], ["proof (prove)\nusing this:\n  (y ^ 3 + e * y + f = (0::'a)) = (u\\<^sup>2 + f * u + v = (0::'a))\n\ngoal (1 subgoal):\n 1. (y ^ 3 + e * y + f = (0::'a)) =\n    (if e = (0::'a) then y ^ 3 = - f else u\\<^sup>2 + f * u + v = (0::'a))", "using False"], ["proof (prove)\nusing this:\n  (y ^ 3 + e * y + f = (0::'a)) = (u\\<^sup>2 + f * u + v = (0::'a))\n  e \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. (y ^ 3 + e * y + f = (0::'a)) =\n    (if e = (0::'a) then y ^ 3 = - f else u\\<^sup>2 + f * u + v = (0::'a))", "by auto"], ["proof (state)\nthis:\n  (y ^ 3 + e * y + f = (0::'a)) =\n  (if e = (0::'a) then y ^ 3 = - f else u\\<^sup>2 + f * u + v = (0::'a))\n\ngoal (1 subgoal):\n 1. e = (0::'a) \\<Longrightarrow>\n    (y ^ 3 + e * y + f = (0::'a)) =\n    (if e = (0::'a) then y ^ 3 = - f else u\\<^sup>2 + f * u + v = (0::'a))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. e = (0::'a) \\<Longrightarrow>\n    (y ^ 3 + e * y + f = (0::'a)) =\n    (if e = (0::'a) then y ^ 3 = - f else u\\<^sup>2 + f * u + v = (0::'a))", "case True"], ["proof (state)\nthis:\n  e = (0::'a)\n\ngoal (1 subgoal):\n 1. e = (0::'a) \\<Longrightarrow>\n    (y ^ 3 + e * y + f = (0::'a)) =\n    (if e = (0::'a) then y ^ 3 = - f else u\\<^sup>2 + f * u + v = (0::'a))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (y ^ 3 + e * y + f = (0::'a)) =\n    (if e = (0::'a) then y ^ 3 = - f else u\\<^sup>2 + f * u + v = (0::'a))", "unfolding True"], ["proof (prove)\ngoal (1 subgoal):\n 1. (y ^ 3 + (0::'a) * y + f = (0::'a)) =\n    (if (0::'a) = (0::'a) then y ^ 3 = - f\n     else u\\<^sup>2 + f * u + v = (0::'a))", "by (auto, algebra)"], ["proof (state)\nthis:\n  (y ^ 3 + e * y + f = (0::'a)) =\n  (if e = (0::'a) then y ^ 3 = - f else u\\<^sup>2 + f * u + v = (0::'a))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (y ^ 3 + e * y + f = (0::'a)) =\n  (if e = (0::'a) then y ^ 3 = - f else u\\<^sup>2 + f * u + v = (0::'a))\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Solving the depressed case for complex numbers\\<close>"], ["", "text \\<open>In the complex-numbers-case, the quadratic equation for u is always solvable,\n  and the main challenge here is prove that it does not matter which solution of \n  the quadratic equation is considered (this is the diff:False case in the proof below.)\\<close>"], ["", "lemma solve_cubic_depressed_Cardano_complex: fixes e :: complex \n  assumes e0: \"e \\<noteq> 0\" \n  and v: \"v = - (e ^ 3 / 27)\" \n  and u: \"u^2 + f * u + v = 0\" \nshows \"y^3 + e * y + f = 0 \\<longleftrightarrow> (\\<exists> z. z^3 = u \\<and> y = z - e / (3 * z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y ^ 3 + e * y + f = 0) =\n    (\\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (y ^ 3 + e * y + f = 0) =\n    (\\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z))", "from v e0"], ["proof (chain)\npicking this:\n  v = - (e ^ 3 / 27)\n  e \\<noteq> 0", "have v0: \"v \\<noteq> 0\""], ["proof (prove)\nusing this:\n  v = - (e ^ 3 / 27)\n  e \\<noteq> 0\n\ngoal (1 subgoal):\n 1. v \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  v \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (y ^ 3 + e * y + f = 0) =\n    (\\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z))", "from e0"], ["proof (chain)\npicking this:\n  e \\<noteq> 0", "have \"(if e = 0 then x else y) = y\" for x y :: bool"], ["proof (prove)\nusing this:\n  e \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (if e = 0 then x else y) = y", "by auto"], ["proof (state)\nthis:\n  (if e = 0 then ?x else ?y) = ?y\n\ngoal (1 subgoal):\n 1. (y ^ 3 + e * y + f = 0) =\n    (\\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z))", "note main = cubic_depressed[OF _ _ v, unfolded this]"], ["proof (state)\nthis:\n  \\<lbrakk>e \\<noteq> 0 \\<Longrightarrow> ?z\\<^sup>2 - ?y * ?z - e / 3 = 0;\n   e \\<noteq> 0 \\<Longrightarrow> ?u = ?z ^ 3\\<rbrakk>\n  \\<Longrightarrow> (?y ^ 3 + e * ?y + ?f = 0) =\n                    (?u\\<^sup>2 + ?f * ?u + v = 0)\n\ngoal (1 subgoal):\n 1. (y ^ 3 + e * y + f = 0) =\n    (\\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z))", "show ?thesis (is \"?l = ?r\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (y ^ 3 + e * y + f = 0) =\n    (\\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. y ^ 3 + e * y + f = 0 \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)\n 2. \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z) \\<Longrightarrow>\n    y ^ 3 + e * y + f = 0", "assume ?r"], ["proof (state)\nthis:\n  \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)\n\ngoal (2 subgoals):\n 1. y ^ 3 + e * y + f = 0 \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)\n 2. \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z) \\<Longrightarrow>\n    y ^ 3 + e * y + f = 0", "then"], ["proof (chain)\npicking this:\n  \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "obtain z where z: \"z^3 = u\" and y: \"y = z - e / (3 * z)\""], ["proof (prove)\nusing this:\n  \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        \\<lbrakk>z ^ 3 = u; y = z - e / (3 * z)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  z ^ 3 = u\n  y = z - e / (3 * z)\n\ngoal (2 subgoals):\n 1. y ^ 3 + e * y + f = 0 \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)\n 2. \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z) \\<Longrightarrow>\n    y ^ 3 + e * y + f = 0", "from u v0"], ["proof (chain)\npicking this:\n  u\\<^sup>2 + f * u + v = 0\n  v \\<noteq> 0", "have u0: \"u \\<noteq> 0\""], ["proof (prove)\nusing this:\n  u\\<^sup>2 + f * u + v = 0\n  v \\<noteq> 0\n\ngoal (1 subgoal):\n 1. u \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  u \\<noteq> 0\n\ngoal (2 subgoals):\n 1. y ^ 3 + e * y + f = 0 \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)\n 2. \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z) \\<Longrightarrow>\n    y ^ 3 + e * y + f = 0", "from z u0"], ["proof (chain)\npicking this:\n  z ^ 3 = u\n  u \\<noteq> 0", "have z0: \"z \\<noteq> 0\""], ["proof (prove)\nusing this:\n  z ^ 3 = u\n  u \\<noteq> 0\n\ngoal (1 subgoal):\n 1. z \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  z \\<noteq> 0\n\ngoal (2 subgoals):\n 1. y ^ 3 + e * y + f = 0 \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)\n 2. \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z) \\<Longrightarrow>\n    y ^ 3 + e * y + f = 0", "show ?l"], ["proof (prove)\ngoal (1 subgoal):\n 1. y ^ 3 + e * y + f = 0", "proof (subst main)"], ["proof (state)\ngoal (3 subgoals):\n 1. e \\<noteq> 0 \\<Longrightarrow> ?z\\<^sup>2 - y * ?z - e / 3 = 0\n 2. e \\<noteq> 0 \\<Longrightarrow> ?u = ?z ^ 3\n 3. ?u\\<^sup>2 + f * ?u + v = 0", "show \"u\\<^sup>2 + f * u + v = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u\\<^sup>2 + f * u + v = 0", "by fact"], ["proof (state)\nthis:\n  u\\<^sup>2 + f * u + v = 0\n\ngoal (2 subgoals):\n 1. e \\<noteq> 0 \\<Longrightarrow> ?z\\<^sup>2 - y * ?z - e / 3 = 0\n 2. e \\<noteq> 0 \\<Longrightarrow> u = ?z ^ 3", "show \"u = z^3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u = z ^ 3", "unfolding z"], ["proof (prove)\ngoal (1 subgoal):\n 1. u = u", "by simp"], ["proof (state)\nthis:\n  u = z ^ 3\n\ngoal (1 subgoal):\n 1. e \\<noteq> 0 \\<Longrightarrow> z\\<^sup>2 - y * z - e / 3 = 0", "show \"z\\<^sup>2 - y * z - e / 3 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z\\<^sup>2 - y * z - e / 3 = 0", "unfolding y"], ["proof (prove)\ngoal (1 subgoal):\n 1. z\\<^sup>2 - (z - e / (3 * z)) * z - e / 3 = 0", "using z0"], ["proof (prove)\nusing this:\n  z \\<noteq> 0\n\ngoal (1 subgoal):\n 1. z\\<^sup>2 - (z - e / (3 * z)) * z - e / 3 = 0", "by (auto simp: field_simps power2_eq_square)"], ["proof (state)\nthis:\n  z\\<^sup>2 - y * z - e / 3 = 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  y ^ 3 + e * y + f = 0\n\ngoal (1 subgoal):\n 1. y ^ 3 + e * y + f = 0 \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. y ^ 3 + e * y + f = 0 \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "assume ?l"], ["proof (state)\nthis:\n  y ^ 3 + e * y + f = 0\n\ngoal (1 subgoal):\n 1. y ^ 3 + e * y + f = 0 \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "let ?yexp = \"y^3 + e * y + f\""], ["proof (state)\ngoal (1 subgoal):\n 1. y ^ 3 + e * y + f = 0 \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "have y0: \"?yexp = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y ^ 3 + e * y + f = 0", "using \\<open>?l\\<close>"], ["proof (prove)\nusing this:\n  y ^ 3 + e * y + f = 0\n\ngoal (1 subgoal):\n 1. y ^ 3 + e * y + f = 0", "by auto"], ["proof (state)\nthis:\n  y ^ 3 + e * y + f = 0\n\ngoal (1 subgoal):\n 1. y ^ 3 + e * y + f = 0 \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "define p where \"p = [: -e/3, -y, 1:]\""], ["proof (state)\nthis:\n  p = [:- e / 3, - y, 1:]\n\ngoal (1 subgoal):\n 1. y ^ 3 + e * y + f = 0 \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "have deg: \"degree p = 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree p = 2", "unfolding p_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. degree [:- e / 3, - y, 1:] = 2", "by auto"], ["proof (state)\nthis:\n  degree p = 2\n\ngoal (1 subgoal):\n 1. y ^ 3 + e * y + f = 0 \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "define z where \"z = hd (croots2 p)\""], ["proof (state)\nthis:\n  z = hd (croots2 p)\n\ngoal (1 subgoal):\n 1. y ^ 3 + e * y + f = 0 \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "have \"z \\<in> set (croots2 p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<in> set (croots2 p)", "unfolding croots2_def Let_def z_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. hd (remdups\n         [- (coeff p 1 / (2 * coeff p 2)) +\n          csqrt\n           ((coeff p 1 / (2 * coeff p 2))\\<^sup>2 - coeff p 0 / coeff p 2),\n          - (coeff p 1 / (2 * coeff p 2)) -\n          csqrt\n           ((coeff p 1 / (2 * coeff p 2))\\<^sup>2 - coeff p 0 / coeff p 2)])\n    \\<in> set (remdups\n                [- (coeff p 1 / (2 * coeff p 2)) +\n                 csqrt\n                  ((coeff p 1 / (2 * coeff p 2))\\<^sup>2 -\n                   coeff p 0 / coeff p 2),\n                 - (coeff p 1 / (2 * coeff p 2)) -\n                 csqrt\n                  ((coeff p 1 / (2 * coeff p 2))\\<^sup>2 -\n                   coeff p 0 / coeff p 2)])", "by auto"], ["proof (state)\nthis:\n  z \\<in> set (croots2 p)\n\ngoal (1 subgoal):\n 1. y ^ 3 + e * y + f = 0 \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "with croots2[OF deg]"], ["proof (chain)\npicking this:\n  {x. poly p x = 0} = set (croots2 p)\n  z \\<in> set (croots2 p)", "have pz: \"poly p z = 0\""], ["proof (prove)\nusing this:\n  {x. poly p x = 0} = set (croots2 p)\n  z \\<in> set (croots2 p)\n\ngoal (1 subgoal):\n 1. poly p z = 0", "by auto"], ["proof (state)\nthis:\n  poly p z = 0\n\ngoal (1 subgoal):\n 1. y ^ 3 + e * y + f = 0 \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "from pz e0"], ["proof (chain)\npicking this:\n  poly p z = 0\n  e \\<noteq> 0", "have z0: \"z \\<noteq> 0\""], ["proof (prove)\nusing this:\n  poly p z = 0\n  e \\<noteq> 0\n\ngoal (1 subgoal):\n 1. z \\<noteq> 0", "unfolding p_def"], ["proof (prove)\nusing this:\n  poly [:- e / 3, - y, 1:] z = 0\n  e \\<noteq> 0\n\ngoal (1 subgoal):\n 1. z \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  z \\<noteq> 0\n\ngoal (1 subgoal):\n 1. y ^ 3 + e * y + f = 0 \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "from pz"], ["proof (chain)\npicking this:\n  poly p z = 0", "have yz: \"y * z = z * z - e / 3\""], ["proof (prove)\nusing this:\n  poly p z = 0\n\ngoal (1 subgoal):\n 1. y * z = z * z - e / 3", "unfolding p_def"], ["proof (prove)\nusing this:\n  poly [:- e / 3, - y, 1:] z = 0\n\ngoal (1 subgoal):\n 1. y * z = z * z - e / 3", "by (auto simp: field_simps)"], ["proof (state)\nthis:\n  y * z = z * z - e / 3\n\ngoal (1 subgoal):\n 1. y ^ 3 + e * y + f = 0 \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "from arg_cong[OF this, of \"\\<lambda> x. x / z\"] z0"], ["proof (chain)\npicking this:\n  y * z / z = (z * z - e / 3) / z\n  z \\<noteq> 0", "have \"y = z - e / (3 * z)\""], ["proof (prove)\nusing this:\n  y * z / z = (z * z - e / 3) / z\n  z \\<noteq> 0\n\ngoal (1 subgoal):\n 1. y = z - e / (3 * z)", "by (auto simp: field_simps)"], ["proof (state)\nthis:\n  y = z - e / (3 * z)\n\ngoal (1 subgoal):\n 1. y ^ 3 + e * y + f = 0 \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "have \"\\<exists> u z. u\\<^sup>2 + f * u + v = 0 \\<and> z^3 = u \\<and> y = z - e / (3 * z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>u z.\n       u\\<^sup>2 + f * u + v = 0 \\<and> z ^ 3 = u \\<and> y = z - e / (3 * z)", "proof (intro exI conjI)"], ["proof (state)\ngoal (3 subgoals):\n 1. ?u\\<^sup>2 + f * ?u + v = 0\n 2. ?z1 ^ 3 = ?u\n 3. y = ?z1 - e / (3 * ?z1)", "show \"y = z - e / (3 * z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y = z - e / (3 * z)", "by fact"], ["proof (state)\nthis:\n  y = z - e / (3 * z)\n\ngoal (2 subgoals):\n 1. ?u\\<^sup>2 + f * ?u + v = 0\n 2. z ^ 3 = ?u", "from y0"], ["proof (chain)\npicking this:\n  y ^ 3 + e * y + f = 0", "have \"0 = ?yexp * z^3\""], ["proof (prove)\nusing this:\n  y ^ 3 + e * y + f = 0\n\ngoal (1 subgoal):\n 1. 0 = (y ^ 3 + e * y + f) * z ^ 3", "by auto"], ["proof (state)\nthis:\n  0 = (y ^ 3 + e * y + f) * z ^ 3\n\ngoal (2 subgoals):\n 1. ?u\\<^sup>2 + f * ?u + v = 0\n 2. z ^ 3 = ?u", "also"], ["proof (state)\nthis:\n  0 = (y ^ 3 + e * y + f) * z ^ 3\n\ngoal (2 subgoals):\n 1. ?u\\<^sup>2 + f * ?u + v = 0\n 2. z ^ 3 = ?u", "have \"\\<dots> = (y * z)^3 + e * (y * z) * z^2 + f * z^3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y ^ 3 + e * y + f) * z ^ 3 =\n    (y * z) ^ 3 + e * (y * z) * z\\<^sup>2 + f * z ^ 3", "by algebra"], ["proof (state)\nthis:\n  (y ^ 3 + e * y + f) * z ^ 3 =\n  (y * z) ^ 3 + e * (y * z) * z\\<^sup>2 + f * z ^ 3\n\ngoal (2 subgoals):\n 1. ?u\\<^sup>2 + f * ?u + v = 0\n 2. z ^ 3 = ?u", "also"], ["proof (state)\nthis:\n  (y ^ 3 + e * y + f) * z ^ 3 =\n  (y * z) ^ 3 + e * (y * z) * z\\<^sup>2 + f * z ^ 3\n\ngoal (2 subgoals):\n 1. ?u\\<^sup>2 + f * ?u + v = 0\n 2. z ^ 3 = ?u", "have \"\\<dots> = (z^3)^2 + f * (z^3) + v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y * z) ^ 3 + e * (y * z) * z\\<^sup>2 + f * z ^ 3 =\n    (z ^ 3)\\<^sup>2 + f * z ^ 3 + v", "unfolding yz v"], ["proof (prove)\ngoal (1 subgoal):\n 1. (z * z - e / 3) ^ 3 + e * (z * z - e / 3) * z\\<^sup>2 + f * z ^ 3 =\n    (z ^ 3)\\<^sup>2 + f * z ^ 3 + - (e ^ 3 / 27)", "by algebra"], ["proof (state)\nthis:\n  (y * z) ^ 3 + e * (y * z) * z\\<^sup>2 + f * z ^ 3 =\n  (z ^ 3)\\<^sup>2 + f * z ^ 3 + v\n\ngoal (2 subgoals):\n 1. ?u\\<^sup>2 + f * ?u + v = 0\n 2. z ^ 3 = ?u", "finally"], ["proof (chain)\npicking this:\n  0 = (z ^ 3)\\<^sup>2 + f * z ^ 3 + v", "show \"(z^3)^2 + f * (z^3) + v = 0\""], ["proof (prove)\nusing this:\n  0 = (z ^ 3)\\<^sup>2 + f * z ^ 3 + v\n\ngoal (1 subgoal):\n 1. (z ^ 3)\\<^sup>2 + f * z ^ 3 + v = 0", "by simp"], ["proof (state)\nthis:\n  (z ^ 3)\\<^sup>2 + f * z ^ 3 + v = 0\n\ngoal (1 subgoal):\n 1. z ^ 3 = z ^ 3", "qed simp"], ["proof (state)\nthis:\n  \\<exists>u z.\n     u\\<^sup>2 + f * u + v = 0 \\<and> z ^ 3 = u \\<and> y = z - e / (3 * z)\n\ngoal (1 subgoal):\n 1. y ^ 3 + e * y + f = 0 \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "then"], ["proof (chain)\npicking this:\n  \\<exists>u z.\n     u\\<^sup>2 + f * u + v = 0 \\<and> z ^ 3 = u \\<and> y = z - e / (3 * z)", "obtain uu z where\n       *: \"uu\\<^sup>2 + f * uu + v = 0\" \"z ^ 3 = uu\" \"y = z - e / (3 * z)\""], ["proof (prove)\nusing this:\n  \\<exists>u z.\n     u\\<^sup>2 + f * u + v = 0 \\<and> z ^ 3 = u \\<and> y = z - e / (3 * z)\n\ngoal (1 subgoal):\n 1. (\\<And>uu z.\n        \\<lbrakk>uu\\<^sup>2 + f * uu + v = 0; z ^ 3 = uu;\n         y = z - e / (3 * z)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  uu\\<^sup>2 + f * uu + v = 0\n  z ^ 3 = uu\n  y = z - e / (3 * z)\n\ngoal (1 subgoal):\n 1. y ^ 3 + e * y + f = 0 \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "show ?r"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "proof (cases \"uu = u\")"], ["proof (state)\ngoal (2 subgoals):\n 1. uu = u \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)\n 2. uu \\<noteq> u \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "case True"], ["proof (state)\nthis:\n  uu = u\n\ngoal (2 subgoals):\n 1. uu = u \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)\n 2. uu \\<noteq> u \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "thus ?thesis"], ["proof (prove)\nusing this:\n  uu = u\n\ngoal (1 subgoal):\n 1. \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "using *"], ["proof (prove)\nusing this:\n  uu = u\n  uu\\<^sup>2 + f * uu + v = 0\n  z ^ 3 = uu\n  y = z - e / (3 * z)\n\ngoal (1 subgoal):\n 1. \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "by auto"], ["proof (state)\nthis:\n  \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)\n\ngoal (1 subgoal):\n 1. uu \\<noteq> u \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. uu \\<noteq> u \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "case diff: False"], ["proof (state)\nthis:\n  uu \\<noteq> u\n\ngoal (1 subgoal):\n 1. uu \\<noteq> u \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "define p where \"p = [:v,f,1:]\""], ["proof (state)\nthis:\n  p = [:v, f, 1:]\n\ngoal (1 subgoal):\n 1. uu \\<noteq> u \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "have p2: \"degree p = 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree p = 2", "unfolding p_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. degree [:v, f, 1:] = 2", "by auto"], ["proof (state)\nthis:\n  degree p = 2\n\ngoal (1 subgoal):\n 1. uu \\<noteq> u \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "have poly: \"poly p u = 0\" \"poly p uu = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poly p u = 0 &&& poly p uu = 0", "using u *(1)"], ["proof (prove)\nusing this:\n  u\\<^sup>2 + f * u + v = 0\n  uu\\<^sup>2 + f * uu + v = 0\n\ngoal (1 subgoal):\n 1. poly p u = 0 &&& poly p uu = 0", "unfolding p_def"], ["proof (prove)\nusing this:\n  u\\<^sup>2 + f * u + v = 0\n  uu\\<^sup>2 + f * uu + v = 0\n\ngoal (1 subgoal):\n 1. poly [:v, f, 1:] u = 0 &&& poly [:v, f, 1:] uu = 0", "by (auto simp: field_simps power2_eq_square)"], ["proof (state)\nthis:\n  poly p u = 0\n  poly p uu = 0\n\ngoal (1 subgoal):\n 1. uu \\<noteq> u \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "have u0: \"u \\<noteq> 0\" \"uu \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u \\<noteq> 0 &&& uu \\<noteq> 0", "using poly v0"], ["proof (prove)\nusing this:\n  poly p u = 0\n  poly p uu = 0\n  v \\<noteq> 0\n\ngoal (1 subgoal):\n 1. u \\<noteq> 0 &&& uu \\<noteq> 0", "unfolding p_def"], ["proof (prove)\nusing this:\n  poly [:v, f, 1:] u = 0\n  poly [:v, f, 1:] uu = 0\n  v \\<noteq> 0\n\ngoal (1 subgoal):\n 1. u \\<noteq> 0 &&& uu \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  u \\<noteq> 0\n  uu \\<noteq> 0\n\ngoal (1 subgoal):\n 1. uu \\<noteq> u \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "{"], ["proof (state)\nthis:\n  u \\<noteq> 0\n  uu \\<noteq> 0\n\ngoal (1 subgoal):\n 1. uu \\<noteq> u \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "from poly(1)"], ["proof (chain)\npicking this:\n  poly p u = 0", "have \"[:-u,1:] dvd p\""], ["proof (prove)\nusing this:\n  poly p u = 0\n\ngoal (1 subgoal):\n 1. [:- u, 1:] dvd p", "by (meson poly_eq_0_iff_dvd)"], ["proof (state)\nthis:\n  [:- u, 1:] dvd p\n\ngoal (1 subgoal):\n 1. uu \\<noteq> u \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "then"], ["proof (chain)\npicking this:\n  [:- u, 1:] dvd p", "obtain q where pq: \"p = q * [:-u,1:]\""], ["proof (prove)\nusing this:\n  [:- u, 1:] dvd p\n\ngoal (1 subgoal):\n 1. (\\<And>q. p = q * [:- u, 1:] \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  p = q * [:- u, 1:]\n\ngoal (1 subgoal):\n 1. uu \\<noteq> u \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "from poly(2)[unfolded pq poly_mult] diff"], ["proof (chain)\npicking this:\n  poly q uu * poly [:- u, 1:] uu = 0\n  uu \\<noteq> u", "have \"poly q uu = 0\""], ["proof (prove)\nusing this:\n  poly q uu * poly [:- u, 1:] uu = 0\n  uu \\<noteq> u\n\ngoal (1 subgoal):\n 1. poly q uu = 0", "by auto"], ["proof (state)\nthis:\n  poly q uu = 0\n\ngoal (1 subgoal):\n 1. uu \\<noteq> u \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "hence \"[:-uu,1:] dvd q\""], ["proof (prove)\nusing this:\n  poly q uu = 0\n\ngoal (1 subgoal):\n 1. [:- uu, 1:] dvd q", "by (meson poly_eq_0_iff_dvd)"], ["proof (state)\nthis:\n  [:- uu, 1:] dvd q\n\ngoal (1 subgoal):\n 1. uu \\<noteq> u \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "then"], ["proof (chain)\npicking this:\n  [:- uu, 1:] dvd q", "obtain q' where qq': \"q = q' * [:-uu,1:]\""], ["proof (prove)\nusing this:\n  [:- uu, 1:] dvd q\n\ngoal (1 subgoal):\n 1. (\\<And>q'.\n        q = q' * [:- uu, 1:] \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  q = q' * [:- uu, 1:]\n\ngoal (1 subgoal):\n 1. uu \\<noteq> u \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "with pq"], ["proof (chain)\npicking this:\n  p = q * [:- u, 1:]\n  q = q' * [:- uu, 1:]", "have pq: \"p = q' * [:-uu,1:] * [:-u,1:]\""], ["proof (prove)\nusing this:\n  p = q * [:- u, 1:]\n  q = q' * [:- uu, 1:]\n\ngoal (1 subgoal):\n 1. p = q' * [:- uu, 1:] * [:- u, 1:]", "by auto"], ["proof (state)\nthis:\n  p = q' * [:- uu, 1:] * [:- u, 1:]\n\ngoal (1 subgoal):\n 1. uu \\<noteq> u \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "from pq[unfolded p_def]"], ["proof (chain)\npicking this:\n  [:v, f, 1:] = q' * [:- uu, 1:] * [:- u, 1:]", "have q': \"q' \\<noteq> 0\""], ["proof (prove)\nusing this:\n  [:v, f, 1:] = q' * [:- uu, 1:] * [:- u, 1:]\n\ngoal (1 subgoal):\n 1. q' \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  q' \\<noteq> 0\n\ngoal (1 subgoal):\n 1. uu \\<noteq> u \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "from arg_cong[OF pq, of degree, unfolded p2]"], ["proof (chain)\npicking this:\n  2 = degree (q' * [:- uu, 1:] * [:- u, 1:])", "have \"2 = degree (q' * [:- uu, 1:] * [:- u, 1:])\""], ["proof (prove)\nusing this:\n  2 = degree (q' * [:- uu, 1:] * [:- u, 1:])\n\ngoal (1 subgoal):\n 1. 2 = degree (q' * [:- uu, 1:] * [:- u, 1:])", "."], ["proof (state)\nthis:\n  2 = degree (q' * [:- uu, 1:] * [:- u, 1:])\n\ngoal (1 subgoal):\n 1. uu \\<noteq> u \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "also"], ["proof (state)\nthis:\n  2 = degree (q' * [:- uu, 1:] * [:- u, 1:])\n\ngoal (1 subgoal):\n 1. uu \\<noteq> u \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "have \"\\<dots> = degree q' + degree [:- uu, 1:] + degree [:- u, 1:]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree (q' * [:- uu, 1:] * [:- u, 1:]) =\n    degree q' + degree [:- uu, 1:] + degree [:- u, 1:]", "apply (subst degree_mult_eq)"], ["proof (prove)\ngoal (3 subgoals):\n 1. q' * [:- uu, 1:] \\<noteq> 0\n 2. [:- u, 1:] \\<noteq> 0\n 3. degree (q' * [:- uu, 1:]) + degree [:- u, 1:] =\n    degree q' + degree [:- uu, 1:] + degree [:- u, 1:]", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. q' * [:- uu, 1:] \\<noteq> 0", "using q'"], ["proof (prove)\nusing this:\n  q' \\<noteq> 0\n\ngoal (1 subgoal):\n 1. q' * [:- uu, 1:] \\<noteq> 0", "by (metis mult_eq_0_iff pCons_eq_0_iff zero_neq_one)"], ["proof (prove)\ngoal (2 subgoals):\n 1. [:- u, 1:] \\<noteq> 0\n 2. degree (q' * [:- uu, 1:]) + degree [:- u, 1:] =\n    degree q' + degree [:- uu, 1:] + degree [:- u, 1:]", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. [:- u, 1:] \\<noteq> 0", "by force"], ["proof (prove)\ngoal (1 subgoal):\n 1. degree (q' * [:- uu, 1:]) + degree [:- u, 1:] =\n    degree q' + degree [:- uu, 1:] + degree [:- u, 1:]", "by (subst degree_mult_eq[OF q'], auto)"], ["proof (state)\nthis:\n  degree (q' * [:- uu, 1:] * [:- u, 1:]) =\n  degree q' + degree [:- uu, 1:] + degree [:- u, 1:]\n\ngoal (1 subgoal):\n 1. uu \\<noteq> u \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "also"], ["proof (state)\nthis:\n  degree (q' * [:- uu, 1:] * [:- u, 1:]) =\n  degree q' + degree [:- uu, 1:] + degree [:- u, 1:]\n\ngoal (1 subgoal):\n 1. uu \\<noteq> u \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "have \"\\<dots> = degree q' + 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree q' + degree [:- uu, 1:] + degree [:- u, 1:] = degree q' + 2", "by simp"], ["proof (state)\nthis:\n  degree q' + degree [:- uu, 1:] + degree [:- u, 1:] = degree q' + 2\n\ngoal (1 subgoal):\n 1. uu \\<noteq> u \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "finally"], ["proof (chain)\npicking this:\n  2 = degree q' + 2", "have dq: \"degree q' = 0\""], ["proof (prove)\nusing this:\n  2 = degree q' + 2\n\ngoal (1 subgoal):\n 1. degree q' = 0", "by simp"], ["proof (state)\nthis:\n  degree q' = 0\n\ngoal (1 subgoal):\n 1. uu \\<noteq> u \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "from dq"], ["proof (chain)\npicking this:\n  degree q' = 0", "obtain c where q': \"q' = [: c:]\""], ["proof (prove)\nusing this:\n  degree q' = 0\n\ngoal (1 subgoal):\n 1. (\\<And>c. q' = [:c:] \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (metis degree_eq_zeroE)"], ["proof (state)\nthis:\n  q' = [:c:]\n\ngoal (1 subgoal):\n 1. uu \\<noteq> u \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "from pq[unfolded q' p_def]"], ["proof (chain)\npicking this:\n  [:v, f, 1:] = [:c:] * [:- uu, 1:] * [:- u, 1:]", "have \"c = 1\""], ["proof (prove)\nusing this:\n  [:v, f, 1:] = [:c:] * [:- uu, 1:] * [:- u, 1:]\n\ngoal (1 subgoal):\n 1. c = 1", "by auto"], ["proof (state)\nthis:\n  c = 1\n\ngoal (1 subgoal):\n 1. uu \\<noteq> u \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "with q'"], ["proof (chain)\npicking this:\n  q' = [:c:]\n  c = 1", "have \"q' = 1\""], ["proof (prove)\nusing this:\n  q' = [:c:]\n  c = 1\n\ngoal (1 subgoal):\n 1. q' = 1", "by simp"], ["proof (state)\nthis:\n  q' = 1\n\ngoal (1 subgoal):\n 1. uu \\<noteq> u \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "with pq"], ["proof (chain)\npicking this:\n  p = q' * [:- uu, 1:] * [:- u, 1:]\n  q' = 1", "have \"[: -u, 1:] * [: -uu, 1 :] = p\""], ["proof (prove)\nusing this:\n  p = q' * [:- uu, 1:] * [:- u, 1:]\n  q' = 1\n\ngoal (1 subgoal):\n 1. [:- u, 1:] * [:- uu, 1:] = p", "by simp"], ["proof (state)\nthis:\n  [:- u, 1:] * [:- uu, 1:] = p\n\ngoal (1 subgoal):\n 1. uu \\<noteq> u \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "}"], ["proof (state)\nthis:\n  [:- u, 1:] * [:- uu, 1:] = p\n\ngoal (1 subgoal):\n 1. uu \\<noteq> u \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "from this[unfolded p_def, simplified]"], ["proof (chain)\npicking this:\n  uu * u = v \\<and> - uu - u = f", "have prod: \"uu * u = v\""], ["proof (prove)\nusing this:\n  uu * u = v \\<and> - uu - u = f\n\ngoal (1 subgoal):\n 1. uu * u = v", "by simp"], ["proof (state)\nthis:\n  uu * u = v\n\ngoal (1 subgoal):\n 1. uu \\<noteq> u \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "hence uu: \"u = v / uu\""], ["proof (prove)\nusing this:\n  uu * u = v\n\ngoal (1 subgoal):\n 1. u = v / uu", "using u0"], ["proof (prove)\nusing this:\n  uu * u = v\n  u \\<noteq> 0\n  uu \\<noteq> 0\n\ngoal (1 subgoal):\n 1. u = v / uu", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  u = v / uu\n\ngoal (1 subgoal):\n 1. uu \\<noteq> u \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "define zz where \"zz = - e / (3 * z)\""], ["proof (state)\nthis:\n  zz = - e / (3 * z)\n\ngoal (1 subgoal):\n 1. uu \\<noteq> u \\<Longrightarrow>\n    \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "show ?r"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "using *(2-) uu"], ["proof (prove)\nusing this:\n  z ^ 3 = uu\n  y = z - e / (3 * z)\n  u = v / uu\n\ngoal (1 subgoal):\n 1. \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "unfolding v"], ["proof (prove)\nusing this:\n  z ^ 3 = uu\n  y = z - e / (3 * z)\n  u = - (e ^ 3 / 27) / uu\n\ngoal (1 subgoal):\n 1. \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "using u0"], ["proof (prove)\nusing this:\n  z ^ 3 = uu\n  y = z - e / (3 * z)\n  u = - (e ^ 3 / 27) / uu\n  u \\<noteq> 0\n  uu \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)", "by (intro exI[of _ zz], auto simp: zz_def field_simps)"], ["proof (state)\nthis:\n  \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (y ^ 3 + e * y + f = 0) =\n  (\\<exists>z. z ^ 3 = u \\<and> y = z - e / (3 * z))\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Solving the depressed case for real numbers\\<close>"], ["", "definition discriminant_cubic_depressed :: \"'a :: comm_ring_1 \\<Rightarrow> 'a \\<Rightarrow> 'a\" where \n  \"discriminant_cubic_depressed e f = - (4 * e^3 + 27 * f^2)\""], ["", "lemma discriminant_cubic_depressed: assumes \"[:-x,1:] * [:-y,1:] * [:-z,1:] = [:f,e,0,1:]\" \n  shows \"discriminant_cubic_depressed e f = (x-y)^2 * (x - z)^2 * (y - z)^2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. discriminant_cubic_depressed e f =\n    (x - y)\\<^sup>2 * (x - z)\\<^sup>2 * (y - z)\\<^sup>2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. discriminant_cubic_depressed e f =\n    (x - y)\\<^sup>2 * (x - z)\\<^sup>2 * (y - z)\\<^sup>2", "from assms"], ["proof (chain)\npicking this:\n  [:- x, 1::'a:] * [:- y, 1::'a:] * [:- z, 1::'a:] = [:f, e, 0::'a, 1::'a:]", "have f: \"f = - (z * (y * x))\" and e: \"e = y * x - z * (- y - x)\" and \n      z: \"z = - y - x\""], ["proof (prove)\nusing this:\n  [:- x, 1::'a:] * [:- y, 1::'a:] * [:- z, 1::'a:] = [:f, e, 0::'a, 1::'a:]\n\ngoal (1 subgoal):\n 1. f = - (z * (y * x)) &&& e = y * x - z * (- y - x) &&& z = - y - x", "by auto"], ["proof (state)\nthis:\n  f = - (z * (y * x))\n  e = y * x - z * (- y - x)\n  z = - y - x\n\ngoal (1 subgoal):\n 1. discriminant_cubic_depressed e f =\n    (x - y)\\<^sup>2 * (x - z)\\<^sup>2 * (y - z)\\<^sup>2", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. discriminant_cubic_depressed e f =\n    (x - y)\\<^sup>2 * (x - z)\\<^sup>2 * (y - z)\\<^sup>2", "unfolding discriminant_cubic_depressed_def e f z"], ["proof (prove)\ngoal (1 subgoal):\n 1. - ((4::'a) * (y * x - (- y - x) * (- y - x)) ^ 3 +\n       (27::'a) * (- ((- y - x) * (y * x)))\\<^sup>2) =\n    (x - y)\\<^sup>2 * (x - (- y - x))\\<^sup>2 * (y - (- y - x))\\<^sup>2", "by (simp add: power2_eq_square power3_eq_cube field_simps)"], ["proof (state)\nthis:\n  discriminant_cubic_depressed e f =\n  (x - y)\\<^sup>2 * (x - z)\\<^sup>2 * (y - z)\\<^sup>2\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>If the discriminant is negative, then there is exactly one real root\\<close>"], ["", "lemma solve_cubic_depressed_Cardano_real: fixes e f v u :: real \n  defines \"y1 \\<equiv> root 3 u - e / (3 * root 3 u)\" \n    and \"\\<Delta> \\<equiv> discriminant_cubic_depressed e f\" \n  assumes e0: \"e \\<noteq> 0\" \n  and v: \"v = - (e ^ 3 / 27)\" \n  and u: \"u\\<^sup>2 + f * u + v = 0\" (* this implies \\<Delta> \\<le> 0 *)\nshows \"y1^3 + e * y1 + f = 0\"\n  \"\\<Delta> \\<noteq> 0 \\<Longrightarrow> y^3 + e * y + f = 0 \\<Longrightarrow> y = y1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y1 ^ 3 + e * y1 + f = 0 &&&\n    (\\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n     \\<Longrightarrow> y = y1)", "(* this is the case \\<Delta> < 0 *)"], ["proof (prove)\ngoal (1 subgoal):\n 1. y1 ^ 3 + e * y1 + f = 0 &&&\n    (\\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n     \\<Longrightarrow> y = y1)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. y1 ^ 3 + e * y1 + f = 0\n 2. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "let ?c = complex_of_real"], ["proof (state)\ngoal (2 subgoals):\n 1. y1 ^ 3 + e * y1 + f = 0\n 2. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "let ?y = \"?c y\""], ["proof (state)\ngoal (2 subgoals):\n 1. y1 ^ 3 + e * y1 + f = 0\n 2. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "let ?e = \"?c e\""], ["proof (state)\ngoal (2 subgoals):\n 1. y1 ^ 3 + e * y1 + f = 0\n 2. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "let ?u = \"?c u\""], ["proof (state)\ngoal (2 subgoals):\n 1. y1 ^ 3 + e * y1 + f = 0\n 2. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "let ?v = \"?c v\""], ["proof (state)\ngoal (2 subgoals):\n 1. y1 ^ 3 + e * y1 + f = 0\n 2. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "let ?f = \"?c f\""], ["proof (state)\ngoal (2 subgoals):\n 1. y1 ^ 3 + e * y1 + f = 0\n 2. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "{"], ["proof (state)\ngoal (2 subgoals):\n 1. y1 ^ 3 + e * y1 + f = 0\n 2. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "fix y :: real"], ["proof (state)\ngoal (2 subgoals):\n 1. y1 ^ 3 + e * y1 + f = 0\n 2. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "let ?y = \"?c y\""], ["proof (state)\ngoal (2 subgoals):\n 1. y1 ^ 3 + e * y1 + f = 0\n 2. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "have \"y^3 + e * y + f = 0 \\<longleftrightarrow> ?c (y^3 + e * y + f) = ?c 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y ^ 3 + e * y + f = 0) = (cor (y ^ 3 + e * y + f) = cor 0)", "using of_real_eq_iff"], ["proof (prove)\nusing this:\n  (of_real ?x = of_real ?y) = (?x = ?y)\n\ngoal (1 subgoal):\n 1. (y ^ 3 + e * y + f = 0) = (cor (y ^ 3 + e * y + f) = cor 0)", "by blast"], ["proof (state)\nthis:\n  (y ^ 3 + e * y + f = 0) = (cor (y ^ 3 + e * y + f) = cor 0)\n\ngoal (2 subgoals):\n 1. y1 ^ 3 + e * y1 + f = 0\n 2. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "also"], ["proof (state)\nthis:\n  (y ^ 3 + e * y + f = 0) = (cor (y ^ 3 + e * y + f) = cor 0)\n\ngoal (2 subgoals):\n 1. y1 ^ 3 + e * y1 + f = 0\n 2. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "have \"\\<dots> \\<longleftrightarrow> ?y^3 + ?e * ?y + ?f = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cor (y ^ 3 + e * y + f) = cor 0) =\n    (cor y ^ 3 + cor e * cor y + cor f = 0)", "by simp"], ["proof (state)\nthis:\n  (cor (y ^ 3 + e * y + f) = cor 0) =\n  (cor y ^ 3 + cor e * cor y + cor f = 0)\n\ngoal (2 subgoals):\n 1. y1 ^ 3 + e * y1 + f = 0\n 2. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "also"], ["proof (state)\nthis:\n  (cor (y ^ 3 + e * y + f) = cor 0) =\n  (cor y ^ 3 + cor e * cor y + cor f = 0)\n\ngoal (2 subgoals):\n 1. y1 ^ 3 + e * y1 + f = 0\n 2. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "have \"\\<dots> \\<longleftrightarrow> (\\<exists> z. z^3 = ?u \\<and> ?y = z - ?e / (3 * z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cor y ^ 3 + cor e * cor y + cor f = 0) =\n    (\\<exists>z. z ^ 3 = cor u \\<and> cor y = z - cor e / (3 * z))", "proof (rule solve_cubic_depressed_Cardano_complex)"], ["proof (state)\ngoal (3 subgoals):\n 1. cor e \\<noteq> 0\n 2. ?v = - (cor e ^ 3 / 27)\n 3. (cor u)\\<^sup>2 + cor f * cor u + ?v = 0", "show \"?e \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cor e \\<noteq> 0", "using e0"], ["proof (prove)\nusing this:\n  e \\<noteq> 0\n\ngoal (1 subgoal):\n 1. cor e \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  cor e \\<noteq> 0\n\ngoal (2 subgoals):\n 1. ?v = - (cor e ^ 3 / 27)\n 2. (cor u)\\<^sup>2 + cor f * cor u + ?v = 0", "show \"?v = - (?e ^ 3 / 27)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cor v = - (cor e ^ 3 / 27)", "unfolding v"], ["proof (prove)\ngoal (1 subgoal):\n 1. cor (- (e ^ 3 / 27)) = - (cor e ^ 3 / 27)", "by simp"], ["proof (state)\nthis:\n  cor v = - (cor e ^ 3 / 27)\n\ngoal (1 subgoal):\n 1. (cor u)\\<^sup>2 + cor f * cor u + cor v = 0", "show \"?u\\<^sup>2 + ?f * ?u + ?v = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cor u)\\<^sup>2 + cor f * cor u + cor v = 0", "using arg_cong[OF u, of ?c]"], ["proof (prove)\nusing this:\n  cor (u\\<^sup>2 + f * u + v) = cor 0\n\ngoal (1 subgoal):\n 1. (cor u)\\<^sup>2 + cor f * cor u + cor v = 0", "by simp"], ["proof (state)\nthis:\n  (cor u)\\<^sup>2 + cor f * cor u + cor v = 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (cor y ^ 3 + cor e * cor y + cor f = 0) =\n  (\\<exists>z. z ^ 3 = cor u \\<and> cor y = z - cor e / (3 * z))\n\ngoal (2 subgoals):\n 1. y1 ^ 3 + e * y1 + f = 0\n 2. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "finally"], ["proof (chain)\npicking this:\n  (y ^ 3 + e * y + f = 0) =\n  (\\<exists>z. z ^ 3 = cor u \\<and> cor y = z - cor e / (3 * z))", "have \"y^3 + e * y + f = 0 \\<longleftrightarrow> (\\<exists> z. z^3 = ?u \\<and> ?y = z - ?e / (3 * z))\""], ["proof (prove)\nusing this:\n  (y ^ 3 + e * y + f = 0) =\n  (\\<exists>z. z ^ 3 = cor u \\<and> cor y = z - cor e / (3 * z))\n\ngoal (1 subgoal):\n 1. (y ^ 3 + e * y + f = 0) =\n    (\\<exists>z. z ^ 3 = cor u \\<and> cor y = z - cor e / (3 * z))", "."], ["proof (state)\nthis:\n  (y ^ 3 + e * y + f = 0) =\n  (\\<exists>z. z ^ 3 = cor u \\<and> cor y = z - cor e / (3 * z))\n\ngoal (2 subgoals):\n 1. y1 ^ 3 + e * y1 + f = 0\n 2. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "}"], ["proof (state)\nthis:\n  (?ya2 ^ 3 + e * ?ya2 + f = 0) =\n  (\\<exists>z. z ^ 3 = cor u \\<and> cor ?ya2 = z - cor e / (3 * z))\n\ngoal (2 subgoals):\n 1. y1 ^ 3 + e * y1 + f = 0\n 2. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "note pre = this"], ["proof (state)\nthis:\n  (?ya2 ^ 3 + e * ?ya2 + f = 0) =\n  (\\<exists>z. z ^ 3 = cor u \\<and> cor ?ya2 = z - cor e / (3 * z))\n\ngoal (2 subgoals):\n 1. y1 ^ 3 + e * y1 + f = 0\n 2. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "show y1: \"y1^3 + e * y1 + f = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y1 ^ 3 + e * y1 + f = 0", "unfolding pre y1_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>z.\n       z ^ 3 = cor u \\<and>\n       cor (root 3 u - e / (3 * root 3 u)) = z - cor e / (3 * z)", "by (intro exI[of _ \"?c (root 3 u)\"], simp only: of_real_power[symmetric],\n        simp del: of_real_power add: odd_real_root_pow)"], ["proof (state)\nthis:\n  y1 ^ 3 + e * y1 + f = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "from u"], ["proof (chain)\npicking this:\n  u\\<^sup>2 + f * u + v = 0", "have \"{z. poly [:v,f,1:] z = 0} \\<noteq> {}\""], ["proof (prove)\nusing this:\n  u\\<^sup>2 + f * u + v = 0\n\ngoal (1 subgoal):\n 1. {z. poly [:v, f, 1:] z = 0} \\<noteq> {}", "by (auto simp add: field_simps power2_eq_square)"], ["proof (state)\nthis:\n  {z. poly [:v, f, 1:] z = 0} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "hence \"set (rroots2 [:v,f,1:]) \\<noteq> {}\""], ["proof (prove)\nusing this:\n  {z. poly [:v, f, 1:] z = 0} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. set (rroots2 [:v, f, 1:]) \\<noteq> {}", "by (subst rroots2[symmetric], auto)"], ["proof (state)\nthis:\n  set (rroots2 [:v, f, 1:]) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "hence \"rroots2 [:v,f,1:] \\<noteq> []\""], ["proof (prove)\nusing this:\n  set (rroots2 [:v, f, 1:]) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. rroots2 [:v, f, 1:] \\<noteq> []", "by simp"], ["proof (state)\nthis:\n  rroots2 [:v, f, 1:] \\<noteq> []\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "from this[unfolded rroots2_def Let_def, simplified]"], ["proof (chain)\npicking this:\n  (if (f / (2 * coeff [:v, f, 1:] 2))\\<^sup>2 = v / coeff [:v, f, 1:] 2\n   then [- (coeff [:v, f, 1:] 1 / (2 * coeff [:v, f, 1:] 2))]\n   else if (coeff [:v, f, 1:] 1 / (2 * coeff [:v, f, 1:] 2))\\<^sup>2 -\n           coeff [:v, f, 1:] 0 / coeff [:v, f, 1:] 2\n           < 0\n        then []\n        else [- (coeff [:v, f, 1:] 1 / (2 * coeff [:v, f, 1:] 2)) +\n              sqrt\n               ((coeff [:v, f, 1:] 1 / (2 * coeff [:v, f, 1:] 2))\\<^sup>2 -\n                coeff [:v, f, 1:] 0 / coeff [:v, f, 1:] 2),\n              - (coeff [:v, f, 1:] 1 / (2 * coeff [:v, f, 1:] 2)) -\n              sqrt\n               ((coeff [:v, f, 1:] 1 / (2 * coeff [:v, f, 1:] 2))\\<^sup>2 -\n                coeff [:v, f, 1:] 0 / coeff [:v, f, 1:] 2)]) \\<noteq>\n  []", "have \"f^2 - 4 * v \\<ge> 0\""], ["proof (prove)\nusing this:\n  (if (f / (2 * coeff [:v, f, 1:] 2))\\<^sup>2 = v / coeff [:v, f, 1:] 2\n   then [- (coeff [:v, f, 1:] 1 / (2 * coeff [:v, f, 1:] 2))]\n   else if (coeff [:v, f, 1:] 1 / (2 * coeff [:v, f, 1:] 2))\\<^sup>2 -\n           coeff [:v, f, 1:] 0 / coeff [:v, f, 1:] 2\n           < 0\n        then []\n        else [- (coeff [:v, f, 1:] 1 / (2 * coeff [:v, f, 1:] 2)) +\n              sqrt\n               ((coeff [:v, f, 1:] 1 / (2 * coeff [:v, f, 1:] 2))\\<^sup>2 -\n                coeff [:v, f, 1:] 0 / coeff [:v, f, 1:] 2),\n              - (coeff [:v, f, 1:] 1 / (2 * coeff [:v, f, 1:] 2)) -\n              sqrt\n               ((coeff [:v, f, 1:] 1 / (2 * coeff [:v, f, 1:] 2))\\<^sup>2 -\n                coeff [:v, f, 1:] 0 / coeff [:v, f, 1:] 2)]) \\<noteq>\n  []\n\ngoal (1 subgoal):\n 1. 0 \\<le> f\\<^sup>2 - 4 * v", "by (auto split: if_splits simp: numeral_2_eq_2 field_simps power2_eq_square)"], ["proof (state)\nthis:\n  0 \\<le> f\\<^sup>2 - 4 * v\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "hence delta_le_0: \"\\<Delta> \\<le> 0\""], ["proof (prove)\nusing this:\n  0 \\<le> f\\<^sup>2 - 4 * v\n\ngoal (1 subgoal):\n 1. \\<Delta> \\<le> 0", "unfolding \\<Delta>_def discriminant_cubic_depressed_def v"], ["proof (prove)\nusing this:\n  0 \\<le> f\\<^sup>2 - 4 * - (e ^ 3 / 27)\n\ngoal (1 subgoal):\n 1. - (4 * e ^ 3 + 27 * f\\<^sup>2) \\<le> 0", "by auto"], ["proof (state)\nthis:\n  \\<Delta> \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "assume Delta_non_0: \"\\<Delta> \\<noteq> 0\""], ["proof (state)\nthis:\n  \\<Delta> \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "with delta_le_0"], ["proof (chain)\npicking this:\n  \\<Delta> \\<le> 0\n  \\<Delta> \\<noteq> 0", "have delta_neg: \"\\<Delta> < 0\""], ["proof (prove)\nusing this:\n  \\<Delta> \\<le> 0\n  \\<Delta> \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<Delta> < 0", "by simp"], ["proof (state)\nthis:\n  \\<Delta> < 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "let ?p = \"[:f,e,0,1:]\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "have poly: \"poly ?p y = 0 \\<longleftrightarrow> y^3 + e * y + f = 0\" for y"], ["proof (prove)\ngoal (1 subgoal):\n 1. (poly [:f, e, 0, 1:] y = 0) = (y ^ 3 + e * y + f = 0)", "by (simp add: field_simps power2_eq_square power3_eq_cube)"], ["proof (state)\nthis:\n  (poly [:f, e, 0, 1:] ?y = 0) = (?y ^ 3 + e * ?y + f = 0)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "from y1"], ["proof (chain)\npicking this:\n  y1 ^ 3 + e * y1 + f = 0", "have \"poly ?p y1 = 0\""], ["proof (prove)\nusing this:\n  y1 ^ 3 + e * y1 + f = 0\n\ngoal (1 subgoal):\n 1. poly [:f, e, 0, 1:] y1 = 0", "unfolding poly"], ["proof (prove)\nusing this:\n  y1 ^ 3 + e * y1 + f = 0\n\ngoal (1 subgoal):\n 1. y1 ^ 3 + e * y1 + f = 0", "."], ["proof (state)\nthis:\n  poly [:f, e, 0, 1:] y1 = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "hence \"[:-y1,1:] dvd ?p\""], ["proof (prove)\nusing this:\n  poly [:f, e, 0, 1:] y1 = 0\n\ngoal (1 subgoal):\n 1. [:- y1, 1:] dvd [:f, e, 0, 1:]", "using poly_eq_0_iff_dvd"], ["proof (prove)\nusing this:\n  poly [:f, e, 0, 1:] y1 = 0\n  (poly ?p ?c = (0::?'a)) = ([:- ?c, 1::?'a:] dvd ?p)\n\ngoal (1 subgoal):\n 1. [:- y1, 1:] dvd [:f, e, 0, 1:]", "by blast"], ["proof (state)\nthis:\n  [:- y1, 1:] dvd [:f, e, 0, 1:]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "then"], ["proof (chain)\npicking this:\n  [:- y1, 1:] dvd [:f, e, 0, 1:]", "obtain q where pq: \"?p = [:-y1,1:] * q\""], ["proof (prove)\nusing this:\n  [:- y1, 1:] dvd [:f, e, 0, 1:]\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        [:f, e, 0, 1:] = [:- y1, 1:] * q \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  [:f, e, 0, 1:] = [:- y1, 1:] * q\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "{"], ["proof (state)\nthis:\n  [:f, e, 0, 1:] = [:- y1, 1:] * q\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "fix y2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "assume \"poly ?p y2 = 0\" \"y2 \\<noteq> y1\""], ["proof (state)\nthis:\n  poly [:f, e, 0, 1:] y2 = 0\n  y2 \\<noteq> y1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "from this[unfolded pq] poly_mult"], ["proof (chain)\npicking this:\n  poly ([:- y1, 1:] * q) y2 = 0\n  y2 \\<noteq> y1\n  poly (?p * ?q) ?x = poly ?p ?x * poly ?q ?x", "have \"poly q y2 = 0\""], ["proof (prove)\nusing this:\n  poly ([:- y1, 1:] * q) y2 = 0\n  y2 \\<noteq> y1\n  poly (?p * ?q) ?x = poly ?p ?x * poly ?q ?x\n\ngoal (1 subgoal):\n 1. poly q y2 = 0", "by auto"], ["proof (state)\nthis:\n  poly q y2 = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "from this[unfolded poly_eq_0_iff_dvd]"], ["proof (chain)\npicking this:\n  [:- y2, 1:] dvd q", "obtain r where qr: \"q = [:-y2,1:] * r\""], ["proof (prove)\nusing this:\n  [:- y2, 1:] dvd q\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        q = [:- y2, 1:] * r \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  q = [:- y2, 1:] * r\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "{"], ["proof (state)\nthis:\n  q = [:- y2, 1:] * r\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "have r0: \"r \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<noteq> 0", "using pq"], ["proof (prove)\nusing this:\n  [:f, e, 0, 1:] = [:- y1, 1:] * q\n\ngoal (1 subgoal):\n 1. r \\<noteq> 0", "unfolding qr poly_mult"], ["proof (prove)\nusing this:\n  [:f, e, 0, 1:] = [:- y1, 1:] * ([:- y2, 1:] * r)\n\ngoal (1 subgoal):\n 1. r \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  r \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "have \"3 = degree ?p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 3 = degree [:f, e, 0, 1:]", "by simp"], ["proof (state)\nthis:\n  3 = degree [:f, e, 0, 1:]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "also"], ["proof (state)\nthis:\n  3 = degree [:f, e, 0, 1:]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "have \"\\<dots> = 2 + degree r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree [:f, e, 0, 1:] = 2 + degree r", "unfolding pq qr"], ["proof (prove)\ngoal (1 subgoal):\n 1. degree ([:- y1, 1:] * ([:- y2, 1:] * r)) = 2 + degree r", "apply (subst degree_mult_eq, force)"], ["proof (prove)\ngoal (2 subgoals):\n 1. [:- y2, 1:] * r \\<noteq> 0\n 2. degree [:- y1, 1:] + degree ([:- y2, 1:] * r) = 2 + degree r", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. [:- y2, 1:] * r \\<noteq> 0", "using r0 pq qr"], ["proof (prove)\nusing this:\n  r \\<noteq> 0\n  [:f, e, 0, 1:] = [:- y1, 1:] * q\n  q = [:- y2, 1:] * r\n\ngoal (1 subgoal):\n 1. [:- y2, 1:] * r \\<noteq> 0", "by force"], ["proof (prove)\ngoal (1 subgoal):\n 1. degree [:- y1, 1:] + degree ([:- y2, 1:] * r) = 2 + degree r", "by (subst degree_mult_eq[OF _ r0], auto)"], ["proof (state)\nthis:\n  degree [:f, e, 0, 1:] = 2 + degree r\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "finally"], ["proof (chain)\npicking this:\n  3 = 2 + degree r", "have \"degree r = 1\""], ["proof (prove)\nusing this:\n  3 = 2 + degree r\n\ngoal (1 subgoal):\n 1. degree r = 1", "by simp"], ["proof (state)\nthis:\n  degree r = 1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "from degree1_coeffs[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>a b. r = [:b, a:] \\<and> a \\<noteq> 0", "obtain yy a where r: \"r = [:yy,a:]\""], ["proof (prove)\nusing this:\n  \\<exists>a b. r = [:b, a:] \\<and> a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>yy a. r = [:yy, a:] \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  r = [:yy, a:]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "define y3 where \"y3 = -yy\""], ["proof (state)\nthis:\n  y3 = - yy\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "with r"], ["proof (chain)\npicking this:\n  r = [:yy, a:]\n  y3 = - yy", "have r: \"r = [:-y3,a:]\""], ["proof (prove)\nusing this:\n  r = [:yy, a:]\n  y3 = - yy\n\ngoal (1 subgoal):\n 1. r = [:- y3, a:]", "by auto"], ["proof (state)\nthis:\n  r = [:- y3, a:]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "from pq[unfolded qr r]"], ["proof (chain)\npicking this:\n  [:f, e, 0, 1:] = [:- y1, 1:] * ([:- y2, 1:] * [:- y3, a:])", "have \"a = 1\""], ["proof (prove)\nusing this:\n  [:f, e, 0, 1:] = [:- y1, 1:] * ([:- y2, 1:] * [:- y3, a:])\n\ngoal (1 subgoal):\n 1. a = 1", "by auto"], ["proof (state)\nthis:\n  a = 1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "with r"], ["proof (chain)\npicking this:\n  r = [:- y3, a:]\n  a = 1", "have \"\\<exists> y3. r = [:-y3,1:]\""], ["proof (prove)\nusing this:\n  r = [:- y3, a:]\n  a = 1\n\ngoal (1 subgoal):\n 1. \\<exists>y3. r = [:- y3, 1:]", "by auto"], ["proof (state)\nthis:\n  \\<exists>y3. r = [:- y3, 1:]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "}"], ["proof (state)\nthis:\n  \\<exists>y3. r = [:- y3, 1:]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "then"], ["proof (chain)\npicking this:\n  \\<exists>y3. r = [:- y3, 1:]", "obtain y3 where r: \"r = [:-y3,1:]\""], ["proof (prove)\nusing this:\n  \\<exists>y3. r = [:- y3, 1:]\n\ngoal (1 subgoal):\n 1. (\\<And>y3. r = [:- y3, 1:] \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  r = [:- y3, 1:]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "have py: \"?p = [:-y1,1:] * [:-y2,1:] * [:-y3,1:]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [:f, e, 0, 1:] = [:- y1, 1:] * [:- y2, 1:] * [:- y3, 1:]", "unfolding pq qr r"], ["proof (prove)\ngoal (1 subgoal):\n 1. [:- y1, 1:] * ([:- y2, 1:] * [:- y3, 1:]) =\n    [:- y1, 1:] * [:- y2, 1:] * [:- y3, 1:]", "by algebra"], ["proof (state)\nthis:\n  [:f, e, 0, 1:] = [:- y1, 1:] * [:- y2, 1:] * [:- y3, 1:]\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "from discriminant_cubic_depressed[OF this[symmetric], folded \\<Delta>_def]"], ["proof (chain)\npicking this:\n  \\<Delta> = (y1 - y2)\\<^sup>2 * (y1 - y3)\\<^sup>2 * (y2 - y3)\\<^sup>2", "have delta: \"\\<Delta> = (y1 - y2)\\<^sup>2 * (y1 - y3)\\<^sup>2 * (y2 - y3)\\<^sup>2\""], ["proof (prove)\nusing this:\n  \\<Delta> = (y1 - y2)\\<^sup>2 * (y1 - y3)\\<^sup>2 * (y2 - y3)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<Delta> = (y1 - y2)\\<^sup>2 * (y1 - y3)\\<^sup>2 * (y2 - y3)\\<^sup>2", "."], ["proof (state)\nthis:\n  \\<Delta> = (y1 - y2)\\<^sup>2 * (y1 - y3)\\<^sup>2 * (y2 - y3)\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "have d0: \"\\<Delta> \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> \\<Delta>", "unfolding delta"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> (y1 - y2)\\<^sup>2 * (y1 - y3)\\<^sup>2 * (y2 - y3)\\<^sup>2", "by auto"], ["proof (state)\nthis:\n  0 \\<le> \\<Delta>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "with delta_neg"], ["proof (chain)\npicking this:\n  \\<Delta> < 0\n  0 \\<le> \\<Delta>", "have False"], ["proof (prove)\nusing this:\n  \\<Delta> < 0\n  0 \\<le> \\<Delta>\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "}"], ["proof (state)\nthis:\n  \\<lbrakk>poly [:f, e, 0, 1:] ?y2.2 = 0; ?y2.2 \\<noteq> y1\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<Delta> \\<noteq> 0; y ^ 3 + e * y + f = 0\\<rbrakk>\n    \\<Longrightarrow> y = y1", "with y1"], ["proof (chain)\npicking this:\n  y1 ^ 3 + e * y1 + f = 0\n  \\<lbrakk>poly [:f, e, 0, 1:] ?y2.2 = 0; ?y2.2 \\<noteq> y1\\<rbrakk>\n  \\<Longrightarrow> False", "show \"y^3 + e * y + f = 0 \\<Longrightarrow> y = y1\""], ["proof (prove)\nusing this:\n  y1 ^ 3 + e * y1 + f = 0\n  \\<lbrakk>poly [:f, e, 0, 1:] ?y2.2 = 0; ?y2.2 \\<noteq> y1\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. y ^ 3 + e * y + f = 0 \\<Longrightarrow> y = y1", "unfolding poly"], ["proof (prove)\nusing this:\n  y1 ^ 3 + e * y1 + f = 0\n  \\<lbrakk>?y2.2 ^ 3 + e * ?y2.2 + f = 0; ?y2.2 \\<noteq> y1\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. y ^ 3 + e * y + f = 0 \\<Longrightarrow> y = y1", "by auto"], ["proof (state)\nthis:\n  y ^ 3 + e * y + f = 0 \\<Longrightarrow> y = y1\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>If the discriminant is non-negative, then all roots are real\\<close>"], ["", "lemma solve_cubic_depressed_Cardano_all_real_roots: fixes e f v :: real and y :: complex\n  defines \"\\<Delta> \\<equiv> discriminant_cubic_depressed e f\" \n  assumes Delta: \"\\<Delta> \\<ge> 0\" \n  and rt: \"y^3 + e * y + f = 0\"\nshows \"y \\<in> \\<real>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> \\<real>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<in> \\<real>", "note powers = field_simps power3_eq_cube power2_eq_square"], ["proof (state)\nthis:\n  ?a + ?b + ?c = ?a + (?b + ?c)\n  ?a + ?b = ?b + ?a\n  ?b + (?a + ?c) = ?a + (?b + ?c)\n  ?a * ?b * ?c = ?a * (?b * ?c)\n  ?a * ?b = ?b * ?a\n  ?b * (?a * ?c) = ?a * (?b * ?c)\n  ?a - ?b - ?c = ?a - (?b + ?c)\n  ?a + (?b - ?c) = ?a + ?b - ?c\n  (?a - ?b = ?c) = (?a = ?c + ?b)\n  (?a = ?c - ?b) = (?a + ?b = ?c)\n  ?a - (?b - ?c) = ?a + ?c - ?b\n  ?a - ?b + ?c = ?a + ?c - ?b\n  (?a - ?b < ?c) = (?a < ?c + ?b)\n  (?a < ?c - ?b) = (?a + ?b < ?c)\n  (?a - ?b \\<le> ?c) = (?a \\<le> ?c + ?b)\n  (?a \\<le> ?c - ?b) = (?a + ?b \\<le> ?c)\n  NO_MATCH (?x div ?y) ?a \\<Longrightarrow>\n  ?a * (?b + ?c) = ?a * ?b + ?a * ?c\n  NO_MATCH (?x div ?y) ?c \\<Longrightarrow>\n  (?a + ?b) * ?c = ?a * ?c + ?b * ?c\n  NO_MATCH (?x div ?y) ?c \\<Longrightarrow>\n  (?a - ?b) * ?c = ?a * ?c - ?b * ?c\n  NO_MATCH (?x div ?y) ?a \\<Longrightarrow>\n  ?a * (?b - ?c) = ?a * ?b - ?a * ?c\n  inverse ?a = (1::?'a) / ?a\n  ?c \\<noteq> (0::?'a) \\<Longrightarrow> (?a = ?b / ?c) = (?a * ?c = ?b)\n  ?c \\<noteq> (0::?'a) \\<Longrightarrow> (?b / ?c = ?a) = (?b = ?a * ?c)\n  ?b \\<noteq> (0::?'a) \\<Longrightarrow>\n  (- (?a / ?b) = ?c) = (- ?a = ?c * ?b)\n  ?b \\<noteq> (0::?'a) \\<Longrightarrow>\n  (?c = - (?a / ?b)) = (?c * ?b = - ?a)\n  ?z \\<noteq> (0::?'a) \\<Longrightarrow> ?x + ?y / ?z = (?x * ?z + ?y) / ?z\n  ?z \\<noteq> (0::?'a) \\<Longrightarrow> ?x / ?z + ?y = (?x + ?y * ?z) / ?z\n  ?z \\<noteq> (0::?'a) \\<Longrightarrow> ?x - ?y / ?z = (?x * ?z - ?y) / ?z\n  ?z \\<noteq> (0::?'a) \\<Longrightarrow>\n  - (?x / ?z) + ?y = (- ?x + ?y * ?z) / ?z\n  ?z \\<noteq> (0::?'a) \\<Longrightarrow> ?x / ?z - ?y = (?x - ?y * ?z) / ?z\n  ?z \\<noteq> (0::?'a) \\<Longrightarrow>\n  - (?x / ?z) - ?y = (- ?x - ?y * ?z) / ?z\n  (0::?'a) < ?c \\<Longrightarrow> (?a \\<le> ?b / ?c) = (?a * ?c \\<le> ?b)\n  (0::?'a) < ?c \\<Longrightarrow> (?a < ?b / ?c) = (?a * ?c < ?b)\n  ?c < (0::?'a) \\<Longrightarrow> (?a < ?b / ?c) = (?b < ?a * ?c)\n  ?c < (0::?'a) \\<Longrightarrow> (?a \\<le> ?b / ?c) = (?b \\<le> ?a * ?c)\n  (0::?'a) < ?c \\<Longrightarrow> (?b / ?c \\<le> ?a) = (?b \\<le> ?a * ?c)\n  (0::?'a) < ?c \\<Longrightarrow> (?b / ?c < ?a) = (?b < ?a * ?c)\n  ?c < (0::?'a) \\<Longrightarrow> (?b / ?c \\<le> ?a) = (?a * ?c \\<le> ?b)\n  ?c < (0::?'a) \\<Longrightarrow> (?b / ?c < ?a) = (?a * ?c < ?b)\n  (0::?'a) < ?c \\<Longrightarrow>\n  (?a \\<le> - (?b / ?c)) = (?a * ?c \\<le> - ?b)\n  ?c < (0::?'a) \\<Longrightarrow>\n  (?a \\<le> - (?b / ?c)) = (- ?b \\<le> ?a * ?c)\n  (0::?'a) < ?c \\<Longrightarrow> (?a < - (?b / ?c)) = (?a * ?c < - ?b)\n  ?c < (0::?'a) \\<Longrightarrow> (?a < - (?b / ?c)) = (- ?b < ?a * ?c)\n  (0::?'a) < ?c \\<Longrightarrow> (- (?b / ?c) < ?a) = (- ?b < ?a * ?c)\n  ?c < (0::?'a) \\<Longrightarrow> (- (?b / ?c) < ?a) = (?a * ?c < - ?b)\n  (0::?'a) < ?c \\<Longrightarrow>\n  (- (?b / ?c) \\<le> ?a) = (- ?b \\<le> ?a * ?c)\n  ?c < (0::?'a) \\<Longrightarrow>\n  (- (?b / ?c) \\<le> ?a) = (?a * ?c \\<le> - ?b)\n  (?a * ?b) ^ ?n = ?a ^ ?n * ?b ^ ?n\n  inverse ?a ^ ?n = inverse (?a ^ ?n)\n  ((1::?'a) / ?a) ^ ?n = (1::?'a) / ?a ^ ?n\n  (?a / ?b) ^ ?n = ?a ^ ?n / ?b ^ ?n\n  inverse ?x powi ?n = inverse (?x powi ?n)\n  ((1::?'a) / ?x) powi ?n = (1::?'a) / ?x powi ?n\n  NO_MATCH (?x div ?y) ?c \\<Longrightarrow>\n  (?a + ?b) *\\<^sub>R ?x = ?a *\\<^sub>R ?x + ?b *\\<^sub>R ?x\n  NO_MATCH (?x div ?y) ?a \\<Longrightarrow>\n  ?a *\\<^sub>R (?x + ?y) = ?a *\\<^sub>R ?x + ?a *\\<^sub>R ?y\n  NO_MATCH (?x div ?y) ?c \\<Longrightarrow>\n  (?a - ?b) *\\<^sub>R ?x = ?a *\\<^sub>R ?x - ?b *\\<^sub>R ?x\n  NO_MATCH (?x div ?y) ?a \\<Longrightarrow>\n  ?a *\\<^sub>R (?x - ?y) = ?a *\\<^sub>R ?x - ?a *\\<^sub>R ?y\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  (?a = ?b /\\<^sub>R ?c) = (?c *\\<^sub>R ?a = ?b)\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  (?b /\\<^sub>R ?c = ?a) = (?b = ?c *\\<^sub>R ?a)\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  ?a + ?b /\\<^sub>R ?c = (?c *\\<^sub>R ?a + ?b) /\\<^sub>R ?c\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  ?a /\\<^sub>R ?c + ?b = (?a + ?c *\\<^sub>R ?b) /\\<^sub>R ?c\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  ?a - ?b /\\<^sub>R ?c = (?c *\\<^sub>R ?a - ?b) /\\<^sub>R ?c\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  ?a /\\<^sub>R ?c - ?b = (?a - ?c *\\<^sub>R ?b) /\\<^sub>R ?c\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  - (?a /\\<^sub>R ?c) + ?b = (- ?a + ?c *\\<^sub>R ?b) /\\<^sub>R ?c\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  - (?a /\\<^sub>R ?c) - ?b = (- ?a - ?c *\\<^sub>R ?b) /\\<^sub>R ?c\n  0 < ?c \\<Longrightarrow>\n  (?a \\<le> ?b /\\<^sub>R ?c) = (?c *\\<^sub>R ?a \\<le> ?b)\n  0 < ?c \\<Longrightarrow> (?a < ?b /\\<^sub>R ?c) = (?c *\\<^sub>R ?a < ?b)\n  0 < ?c \\<Longrightarrow>\n  (?b /\\<^sub>R ?c \\<le> ?a) = (?b \\<le> ?c *\\<^sub>R ?a)\n  0 < ?c \\<Longrightarrow> (?b /\\<^sub>R ?c < ?a) = (?b < ?c *\\<^sub>R ?a)\n  0 < ?c \\<Longrightarrow>\n  (?a \\<le> - (?b /\\<^sub>R ?c)) = (?c *\\<^sub>R ?a \\<le> - ?b)\n  0 < ?c \\<Longrightarrow>\n  (?a < - (?b /\\<^sub>R ?c)) = (?c *\\<^sub>R ?a < - ?b)\n  0 < ?c \\<Longrightarrow>\n  (- (?b /\\<^sub>R ?c) \\<le> ?a) = (- ?b \\<le> ?c *\\<^sub>R ?a)\n  0 < ?c \\<Longrightarrow>\n  (- (?b /\\<^sub>R ?c) < ?a) = (- ?b < ?c *\\<^sub>R ?a)\n  ?c < 0 \\<Longrightarrow>\n  (?a \\<le> ?b /\\<^sub>R ?c) = (?b \\<le> ?c *\\<^sub>R ?a)\n  ?c < 0 \\<Longrightarrow> (?a < ?b /\\<^sub>R ?c) = (?b < ?c *\\<^sub>R ?a)\n  ?c < 0 \\<Longrightarrow>\n  (?b /\\<^sub>R ?c \\<le> ?a) = (?c *\\<^sub>R ?a \\<le> ?b)\n  ?c < 0 \\<Longrightarrow> (?b /\\<^sub>R ?c < ?a) = (?c *\\<^sub>R ?a < ?b)\n  ?c < 0 \\<Longrightarrow>\n  (?a \\<le> - (?b /\\<^sub>R ?c)) = (- ?b \\<le> ?c *\\<^sub>R ?a)\n  ?c < 0 \\<Longrightarrow>\n  (?a < - (?b /\\<^sub>R ?c)) = (- ?b < ?c *\\<^sub>R ?a)\n  ?c < 0 \\<Longrightarrow>\n  (- (?b /\\<^sub>R ?c) \\<le> ?a) = (?c *\\<^sub>R ?a \\<le> - ?b)\n  ?c < 0 \\<Longrightarrow>\n  (- (?b /\\<^sub>R ?c) < ?a) = (?c *\\<^sub>R ?a < - ?b)\n  ?a ^ 3 = ?a * ?a * ?a\n  ?a\\<^sup>2 = ?a * ?a\n\ngoal (1 subgoal):\n 1. y \\<in> \\<real>", "let ?c = complex_of_real"], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<in> \\<real>", "let ?e = \"?c e\""], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<in> \\<real>", "let ?f = \"?c f\""], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<in> \\<real>", "let ?cp = \"[:?f,?e,0,1:]\""], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<in> \\<real>", "let ?p = \"[:f,e,0,1:]\""], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<in> \\<real>", "from odd_degree_imp_real_root[of ?p]"], ["proof (chain)\npicking this:\n  odd (degree [:f, e, 0, 1:]) \\<Longrightarrow>\n  \\<exists>x. poly [:f, e, 0, 1:] x = 0", "obtain x1 where \"poly ?p x1 = 0\""], ["proof (prove)\nusing this:\n  odd (degree [:f, e, 0, 1:]) \\<Longrightarrow>\n  \\<exists>x. poly [:f, e, 0, 1:] x = 0\n\ngoal (1 subgoal):\n 1. (\\<And>x1.\n        poly [:f, e, 0, 1:] x1 = 0 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  poly [:f, e, 0, 1:] x1 = 0\n\ngoal (1 subgoal):\n 1. y \\<in> \\<real>", "hence \"[:-x1,1:] dvd ?p\""], ["proof (prove)\nusing this:\n  poly [:f, e, 0, 1:] x1 = 0\n\ngoal (1 subgoal):\n 1. [:- x1, 1:] dvd [:f, e, 0, 1:]", "using poly_eq_0_iff_dvd"], ["proof (prove)\nusing this:\n  poly [:f, e, 0, 1:] x1 = 0\n  (poly ?p ?c = (0::?'a)) = ([:- ?c, 1::?'a:] dvd ?p)\n\ngoal (1 subgoal):\n 1. [:- x1, 1:] dvd [:f, e, 0, 1:]", "by blast"], ["proof (state)\nthis:\n  [:- x1, 1:] dvd [:f, e, 0, 1:]\n\ngoal (1 subgoal):\n 1. y \\<in> \\<real>", "then"], ["proof (chain)\npicking this:\n  [:- x1, 1:] dvd [:f, e, 0, 1:]", "obtain q where pq: \"?p = [:-x1,1:] * q\""], ["proof (prove)\nusing this:\n  [:- x1, 1:] dvd [:f, e, 0, 1:]\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        [:f, e, 0, 1:] = [:- x1, 1:] * q \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  [:f, e, 0, 1:] = [:- x1, 1:] * q\n\ngoal (1 subgoal):\n 1. y \\<in> \\<real>", "from arg_cong[OF pq, of degree]"], ["proof (chain)\npicking this:\n  degree [:f, e, 0, 1:] = degree ([:- x1, 1:] * q)", "have \"3 = degree ([:-x1,1:] * q)\""], ["proof (prove)\nusing this:\n  degree [:f, e, 0, 1:] = degree ([:- x1, 1:] * q)\n\ngoal (1 subgoal):\n 1. 3 = degree ([:- x1, 1:] * q)", "by simp"], ["proof (state)\nthis:\n  3 = degree ([:- x1, 1:] * q)\n\ngoal (1 subgoal):\n 1. y \\<in> \\<real>", "also"], ["proof (state)\nthis:\n  3 = degree ([:- x1, 1:] * q)\n\ngoal (1 subgoal):\n 1. y \\<in> \\<real>", "have \"\\<dots> = 1 + degree q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree ([:- x1, 1:] * q) = 1 + degree q", "by (subst degree_mult_eq, insert pq, auto)"], ["proof (state)\nthis:\n  degree ([:- x1, 1:] * q) = 1 + degree q\n\ngoal (1 subgoal):\n 1. y \\<in> \\<real>", "finally"], ["proof (chain)\npicking this:\n  3 = 1 + degree q", "have dq: \"degree q = 2\""], ["proof (prove)\nusing this:\n  3 = 1 + degree q\n\ngoal (1 subgoal):\n 1. degree q = 2", "by auto"], ["proof (state)\nthis:\n  degree q = 2\n\ngoal (1 subgoal):\n 1. y \\<in> \\<real>", "let ?cc = \"map_poly ?c\""], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<in> \\<real>", "let ?q = \"?cc q\""], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<in> \\<real>", "have cpq: \"?cc ?p = ?cc [:-x1,1:] * ?q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_poly cor [:f, e, 0, 1:] = map_poly cor [:- x1, 1:] * map_poly cor q", "unfolding pq hom_distribs"], ["proof (prove)\ngoal (1 subgoal):\n 1. pCons (- cor x1) (pCons (cor 1) (map_poly cor 0)) * map_poly cor q =\n    pCons (- cor x1) (pCons (cor 1) (map_poly cor 0)) * map_poly cor q", "by simp"], ["proof (state)\nthis:\n  map_poly cor [:f, e, 0, 1:] = map_poly cor [:- x1, 1:] * map_poly cor q\n\ngoal (1 subgoal):\n 1. y \\<in> \\<real>", "let ?x1 = \"?c x1\""], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<in> \\<real>", "have dq': \"degree ?q = 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree (map_poly cor q) = 2", "using dq"], ["proof (prove)\nusing this:\n  degree q = 2\n\ngoal (1 subgoal):\n 1. degree (map_poly cor q) = 2", "by simp"], ["proof (state)\nthis:\n  degree (map_poly cor q) = 2\n\ngoal (1 subgoal):\n 1. y \\<in> \\<real>", "have \"\\<not> constant (poly ?q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> constant (poly (map_poly cor q))", "using dq"], ["proof (prove)\nusing this:\n  degree q = 2\n\ngoal (1 subgoal):\n 1. \\<not> constant (poly (map_poly cor q))", "by (simp add: constant_degree)"], ["proof (state)\nthis:\n  \\<not> constant (poly (map_poly cor q))\n\ngoal (1 subgoal):\n 1. y \\<in> \\<real>", "from fundamental_theorem_of_algebra[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>z. poly (map_poly cor q) z = 0", "obtain x2 where x2: \"poly ?q x2 = 0\""], ["proof (prove)\nusing this:\n  \\<exists>z. poly (map_poly cor q) z = 0\n\ngoal (1 subgoal):\n 1. (\\<And>x2.\n        poly (map_poly cor q) x2 = 0 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  poly (map_poly cor q) x2 = 0\n\ngoal (1 subgoal):\n 1. y \\<in> \\<real>", "have \"x2 \\<in> \\<real>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x2 \\<in> \\<real>", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. x2 \\<notin> \\<real> \\<Longrightarrow> False", "assume x2r: \"x2 \\<notin> \\<real>\""], ["proof (state)\nthis:\n  x2 \\<notin> \\<real>\n\ngoal (1 subgoal):\n 1. x2 \\<notin> \\<real> \\<Longrightarrow> False", "define x3 where \"x3 = cnj x2\""], ["proof (state)\nthis:\n  x3 = cnj x2\n\ngoal (1 subgoal):\n 1. x2 \\<notin> \\<real> \\<Longrightarrow> False", "from x2r"], ["proof (chain)\npicking this:\n  x2 \\<notin> \\<real>", "have x23: \"x2 \\<noteq> x3\""], ["proof (prove)\nusing this:\n  x2 \\<notin> \\<real>\n\ngoal (1 subgoal):\n 1. x2 \\<noteq> x3", "unfolding x3_def"], ["proof (prove)\nusing this:\n  x2 \\<notin> \\<real>\n\ngoal (1 subgoal):\n 1. x2 \\<noteq> cnj x2", "using Reals_cnj_iff"], ["proof (prove)\nusing this:\n  x2 \\<notin> \\<real>\n  (?z \\<in> \\<real>) = (cnj ?z = ?z)\n\ngoal (1 subgoal):\n 1. x2 \\<noteq> cnj x2", "by force"], ["proof (state)\nthis:\n  x2 \\<noteq> x3\n\ngoal (1 subgoal):\n 1. x2 \\<notin> \\<real> \\<Longrightarrow> False", "have x3: \"poly ?q x3 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poly (map_poly cor q) x3 = 0", "unfolding x3_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. poly (map_poly cor q) (cnj x2) = 0", "by (rule complex_conjugate_root[OF _ x2], auto)"], ["proof (state)\nthis:\n  poly (map_poly cor q) x3 = 0\n\ngoal (1 subgoal):\n 1. x2 \\<notin> \\<real> \\<Longrightarrow> False", "from x2[unfolded poly_eq_0_iff_dvd]"], ["proof (chain)\npicking this:\n  [:- x2, 1:] dvd map_poly cor q", "obtain r where qr: \"?q = [:-x2,1:] * r\""], ["proof (prove)\nusing this:\n  [:- x2, 1:] dvd map_poly cor q\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        map_poly cor q = [:- x2, 1:] * r \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  map_poly cor q = [:- x2, 1:] * r\n\ngoal (1 subgoal):\n 1. x2 \\<notin> \\<real> \\<Longrightarrow> False", "from arg_cong[OF this[symmetric], of \"\\<lambda> x. poly x x3\", unfolded poly_mult x3 mult_eq_0_iff] x23"], ["proof (chain)\npicking this:\n  poly [:- x2, 1:] x3 = 0 \\<or> poly r x3 = 0\n  x2 \\<noteq> x3", "have x3: \"poly r x3 = 0\""], ["proof (prove)\nusing this:\n  poly [:- x2, 1:] x3 = 0 \\<or> poly r x3 = 0\n  x2 \\<noteq> x3\n\ngoal (1 subgoal):\n 1. poly r x3 = 0", "by auto"], ["proof (state)\nthis:\n  poly r x3 = 0\n\ngoal (1 subgoal):\n 1. x2 \\<notin> \\<real> \\<Longrightarrow> False", "from arg_cong[OF qr, of degree]"], ["proof (chain)\npicking this:\n  degree (map_poly cor q) = degree ([:- x2, 1:] * r)", "have \"2 = degree ([:-x2,1:] * r)\""], ["proof (prove)\nusing this:\n  degree (map_poly cor q) = degree ([:- x2, 1:] * r)\n\ngoal (1 subgoal):\n 1. 2 = degree ([:- x2, 1:] * r)", "using dq'"], ["proof (prove)\nusing this:\n  degree (map_poly cor q) = degree ([:- x2, 1:] * r)\n  degree (map_poly cor q) = 2\n\ngoal (1 subgoal):\n 1. 2 = degree ([:- x2, 1:] * r)", "by simp"], ["proof (state)\nthis:\n  2 = degree ([:- x2, 1:] * r)\n\ngoal (1 subgoal):\n 1. x2 \\<notin> \\<real> \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  2 = degree ([:- x2, 1:] * r)\n\ngoal (1 subgoal):\n 1. x2 \\<notin> \\<real> \\<Longrightarrow> False", "have \"\\<dots> = 1 + degree r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree ([:- x2, 1:] * r) = 1 + degree r", "by (subst degree_mult_eq, insert pq qr, auto)"], ["proof (state)\nthis:\n  degree ([:- x2, 1:] * r) = 1 + degree r\n\ngoal (1 subgoal):\n 1. x2 \\<notin> \\<real> \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  2 = 1 + degree r", "have \"degree r = 1\""], ["proof (prove)\nusing this:\n  2 = 1 + degree r\n\ngoal (1 subgoal):\n 1. degree r = 1", "by simp"], ["proof (state)\nthis:\n  degree r = 1\n\ngoal (1 subgoal):\n 1. x2 \\<notin> \\<real> \\<Longrightarrow> False", "from degree1_coeffs[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>a b. r = [:b, a:] \\<and> a \\<noteq> 0", "obtain a b where r: \"r = [:a,b:]\""], ["proof (prove)\nusing this:\n  \\<exists>a b. r = [:b, a:] \\<and> a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>a b. r = [:a, b:] \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  r = [:a, b:]\n\ngoal (1 subgoal):\n 1. x2 \\<notin> \\<real> \\<Longrightarrow> False", "from cpq[unfolded qr r]"], ["proof (chain)\npicking this:\n  map_poly cor [:f, e, 0, 1:] =\n  map_poly cor [:- x1, 1:] * ([:- x2, 1:] * [:a, b:])", "have b1: \"b = 1\""], ["proof (prove)\nusing this:\n  map_poly cor [:f, e, 0, 1:] =\n  map_poly cor [:- x1, 1:] * ([:- x2, 1:] * [:a, b:])\n\ngoal (1 subgoal):\n 1. b = 1", "by simp"], ["proof (state)\nthis:\n  b = 1\n\ngoal (1 subgoal):\n 1. x2 \\<notin> \\<real> \\<Longrightarrow> False", "with x3 r"], ["proof (chain)\npicking this:\n  poly r x3 = 0\n  r = [:a, b:]\n  b = 1", "have \"a + x3 = 0\""], ["proof (prove)\nusing this:\n  poly r x3 = 0\n  r = [:a, b:]\n  b = 1\n\ngoal (1 subgoal):\n 1. a + x3 = 0", "by simp"], ["proof (state)\nthis:\n  a + x3 = 0\n\ngoal (1 subgoal):\n 1. x2 \\<notin> \\<real> \\<Longrightarrow> False", "hence \"a = - x3\""], ["proof (prove)\nusing this:\n  a + x3 = 0\n\ngoal (1 subgoal):\n 1. a = - x3", "by algebra"], ["proof (state)\nthis:\n  a = - x3\n\ngoal (1 subgoal):\n 1. x2 \\<notin> \\<real> \\<Longrightarrow> False", "with b1 r"], ["proof (chain)\npicking this:\n  b = 1\n  r = [:a, b:]\n  a = - x3", "have r: \"r = [:-x3,1:]\""], ["proof (prove)\nusing this:\n  b = 1\n  r = [:a, b:]\n  a = - x3\n\ngoal (1 subgoal):\n 1. r = [:- x3, 1:]", "by auto"], ["proof (state)\nthis:\n  r = [:- x3, 1:]\n\ngoal (1 subgoal):\n 1. x2 \\<notin> \\<real> \\<Longrightarrow> False", "have \"?cc ?p = ?cc [:-x1,1:] * [:-x2,1:] * [:-x3,1:]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_poly cor [:f, e, 0, 1:] =\n    map_poly cor [:- x1, 1:] * [:- x2, 1:] * [:- x3, 1:]", "unfolding cpq qr r"], ["proof (prove)\ngoal (1 subgoal):\n 1. map_poly cor [:- x1, 1:] * ([:- x2, 1:] * [:- x3, 1:]) =\n    map_poly cor [:- x1, 1:] * [:- x2, 1:] * [:- x3, 1:]", "by algebra"], ["proof (state)\nthis:\n  map_poly cor [:f, e, 0, 1:] =\n  map_poly cor [:- x1, 1:] * [:- x2, 1:] * [:- x3, 1:]\n\ngoal (1 subgoal):\n 1. x2 \\<notin> \\<real> \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  map_poly cor [:f, e, 0, 1:] =\n  map_poly cor [:- x1, 1:] * [:- x2, 1:] * [:- x3, 1:]\n\ngoal (1 subgoal):\n 1. x2 \\<notin> \\<real> \\<Longrightarrow> False", "have \"?cc [:-x1,1:] = [:-?x1,1:]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_poly cor [:- x1, 1:] = [:- cor x1, 1:]", "by simp"], ["proof (state)\nthis:\n  map_poly cor [:- x1, 1:] = [:- cor x1, 1:]\n\ngoal (1 subgoal):\n 1. x2 \\<notin> \\<real> \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  map_poly cor [:- x1, 1:] = [:- cor x1, 1:]\n\ngoal (1 subgoal):\n 1. x2 \\<notin> \\<real> \\<Longrightarrow> False", "have \"?cc ?p = ?cp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_poly cor [:f, e, 0, 1:] = [:cor f, cor e, 0, 1:]", "by simp"], ["proof (state)\nthis:\n  map_poly cor [:f, e, 0, 1:] = [:cor f, cor e, 0, 1:]\n\ngoal (1 subgoal):\n 1. x2 \\<notin> \\<real> \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  [:cor f, cor e, 0, 1:] = [:- cor x1, 1:] * [:- x2, 1:] * [:- x3, 1:]", "have id: \"[:-?x1,1:] * [:-x2,1:] * [:-x3,1:] = ?cp\""], ["proof (prove)\nusing this:\n  [:cor f, cor e, 0, 1:] = [:- cor x1, 1:] * [:- x2, 1:] * [:- x3, 1:]\n\ngoal (1 subgoal):\n 1. [:- cor x1, 1:] * [:- x2, 1:] * [:- x3, 1:] = [:cor f, cor e, 0, 1:]", "by simp"], ["proof (state)\nthis:\n  [:- cor x1, 1:] * [:- x2, 1:] * [:- x3, 1:] = [:cor f, cor e, 0, 1:]\n\ngoal (1 subgoal):\n 1. x2 \\<notin> \\<real> \\<Longrightarrow> False", "define x23 where \"x23 = - 4 * (Im x2)^2\""], ["proof (state)\nthis:\n  x23 = - 4 * (Im x2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. x2 \\<notin> \\<real> \\<Longrightarrow> False", "define x12c where \"x12c = ?x1 - x2\""], ["proof (state)\nthis:\n  x12c = cor x1 - x2\n\ngoal (1 subgoal):\n 1. x2 \\<notin> \\<real> \\<Longrightarrow> False", "define x12 where \"x12 = (Re x12c) ^ 2 + (Im x12c)^2\""], ["proof (state)\nthis:\n  x12 = (Re x12c)\\<^sup>2 + (Im x12c)\\<^sup>2\n\ngoal (1 subgoal):\n 1. x2 \\<notin> \\<real> \\<Longrightarrow> False", "have x23_0: \"x23 < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x23 < 0", "unfolding x23_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. - 4 * (Im x2)\\<^sup>2 < 0", "using x2r"], ["proof (prove)\nusing this:\n  x2 \\<notin> \\<real>\n\ngoal (1 subgoal):\n 1. - 4 * (Im x2)\\<^sup>2 < 0", "using complex_is_Real_iff"], ["proof (prove)\nusing this:\n  x2 \\<notin> \\<real>\n  (?z \\<in> \\<real>) = is_real ?z\n\ngoal (1 subgoal):\n 1. - 4 * (Im x2)\\<^sup>2 < 0", "by force"], ["proof (state)\nthis:\n  x23 < 0\n\ngoal (1 subgoal):\n 1. x2 \\<notin> \\<real> \\<Longrightarrow> False", "have \"Im x12c \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Im x12c \\<noteq> 0", "unfolding x12c_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Im (cor x1 - x2) \\<noteq> 0", "using x2r"], ["proof (prove)\nusing this:\n  x2 \\<notin> \\<real>\n\ngoal (1 subgoal):\n 1. Im (cor x1 - x2) \\<noteq> 0", "using complex_is_Real_iff"], ["proof (prove)\nusing this:\n  x2 \\<notin> \\<real>\n  (?z \\<in> \\<real>) = is_real ?z\n\ngoal (1 subgoal):\n 1. Im (cor x1 - x2) \\<noteq> 0", "by force"], ["proof (state)\nthis:\n  Im x12c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. x2 \\<notin> \\<real> \\<Longrightarrow> False", "hence \"(Im x12c)^2 > 0\""], ["proof (prove)\nusing this:\n  Im x12c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < (Im x12c)\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  0 < (Im x12c)\\<^sup>2\n\ngoal (1 subgoal):\n 1. x2 \\<notin> \\<real> \\<Longrightarrow> False", "hence x12: \"x12 > 0\""], ["proof (prove)\nusing this:\n  0 < (Im x12c)\\<^sup>2\n\ngoal (1 subgoal):\n 1. 0 < x12", "unfolding x12_def"], ["proof (prove)\nusing this:\n  0 < (Im x12c)\\<^sup>2\n\ngoal (1 subgoal):\n 1. 0 < (Re x12c)\\<^sup>2 + (Im x12c)\\<^sup>2", "using sum_power2_gt_zero_iff"], ["proof (prove)\nusing this:\n  0 < (Im x12c)\\<^sup>2\n  ((0::?'a) < ?x\\<^sup>2 + ?y\\<^sup>2) =\n  (?x \\<noteq> (0::?'a) \\<or> ?y \\<noteq> (0::?'a))\n\ngoal (1 subgoal):\n 1. 0 < (Re x12c)\\<^sup>2 + (Im x12c)\\<^sup>2", "by auto"], ["proof (state)\nthis:\n  0 < x12\n\ngoal (1 subgoal):\n 1. x2 \\<notin> \\<real> \\<Longrightarrow> False", "from discriminant_cubic_depressed[OF id]"], ["proof (chain)\npicking this:\n  discriminant_cubic_depressed (cor e) (cor f) =\n  (cor x1 - x2)\\<^sup>2 * (cor x1 - x3)\\<^sup>2 * (x2 - x3)\\<^sup>2", "have \"?c \\<Delta> = ((?x1 - x2)\\<^sup>2 * (?x1 - x3)\\<^sup>2) * (x2 - x3)\\<^sup>2\""], ["proof (prove)\nusing this:\n  discriminant_cubic_depressed (cor e) (cor f) =\n  (cor x1 - x2)\\<^sup>2 * (cor x1 - x3)\\<^sup>2 * (x2 - x3)\\<^sup>2\n\ngoal (1 subgoal):\n 1. cor \\<Delta> =\n    (cor x1 - x2)\\<^sup>2 * (cor x1 - x3)\\<^sup>2 * (x2 - x3)\\<^sup>2", "unfolding \\<Delta>_def discriminant_cubic_depressed_def"], ["proof (prove)\nusing this:\n  - (4 * cor e ^ 3 + 27 * (cor f)\\<^sup>2) =\n  (cor x1 - x2)\\<^sup>2 * (cor x1 - x3)\\<^sup>2 * (x2 - x3)\\<^sup>2\n\ngoal (1 subgoal):\n 1. cor (- (4 * e ^ 3 + 27 * f\\<^sup>2)) =\n    (cor x1 - x2)\\<^sup>2 * (cor x1 - x3)\\<^sup>2 * (x2 - x3)\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  cor \\<Delta> =\n  (cor x1 - x2)\\<^sup>2 * (cor x1 - x3)\\<^sup>2 * (x2 - x3)\\<^sup>2\n\ngoal (1 subgoal):\n 1. x2 \\<notin> \\<real> \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  cor \\<Delta> =\n  (cor x1 - x2)\\<^sup>2 * (cor x1 - x3)\\<^sup>2 * (x2 - x3)\\<^sup>2\n\ngoal (1 subgoal):\n 1. x2 \\<notin> \\<real> \\<Longrightarrow> False", "have \"(x2 - x3)^2 = ?c x23\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x2 - x3)\\<^sup>2 = cor x23", "unfolding x3_def x23_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x2 - cnj x2)\\<^sup>2 = cor (- 4 * (Im x2)\\<^sup>2)", "by (simp add: complex_eq_iff power2_eq_square)"], ["proof (state)\nthis:\n  (x2 - x3)\\<^sup>2 = cor x23\n\ngoal (1 subgoal):\n 1. x2 \\<notin> \\<real> \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  (x2 - x3)\\<^sup>2 = cor x23\n\ngoal (1 subgoal):\n 1. x2 \\<notin> \\<real> \\<Longrightarrow> False", "have \"(?x1 - x2)\\<^sup>2 * (?x1 - x3)\\<^sup>2 = ((?x1 - x2) * (?x1 - x3))^2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cor x1 - x2)\\<^sup>2 * (cor x1 - x3)\\<^sup>2 =\n    ((cor x1 - x2) * (cor x1 - x3))\\<^sup>2", "by (simp add: power2_eq_square)"], ["proof (state)\nthis:\n  (cor x1 - x2)\\<^sup>2 * (cor x1 - x3)\\<^sup>2 =\n  ((cor x1 - x2) * (cor x1 - x3))\\<^sup>2\n\ngoal (1 subgoal):\n 1. x2 \\<notin> \\<real> \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  (cor x1 - x2)\\<^sup>2 * (cor x1 - x3)\\<^sup>2 =\n  ((cor x1 - x2) * (cor x1 - x3))\\<^sup>2\n\ngoal (1 subgoal):\n 1. x2 \\<notin> \\<real> \\<Longrightarrow> False", "have \"?x1 - x3 = cnj (?x1 - x2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cor x1 - x3 = cnj (cor x1 - x2)", "unfolding x3_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. cor x1 - cnj x2 = cnj (cor x1 - x2)", "by simp"], ["proof (state)\nthis:\n  cor x1 - x3 = cnj (cor x1 - x2)\n\ngoal (1 subgoal):\n 1. x2 \\<notin> \\<real> \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  cor x1 - x3 = cnj (cor x1 - x2)\n\ngoal (1 subgoal):\n 1. x2 \\<notin> \\<real> \\<Longrightarrow> False", "have \"(?x1 - x2) = x12c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cor x1 - x2 = x12c", "unfolding x12c_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. cor x1 - x2 = cor x1 - x2", ".."], ["proof (state)\nthis:\n  cor x1 - x2 = x12c\n\ngoal (1 subgoal):\n 1. x2 \\<notin> \\<real> \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  cor x1 - x2 = x12c\n\ngoal (1 subgoal):\n 1. x2 \\<notin> \\<real> \\<Longrightarrow> False", "have \"x12c * cnj x12c = ?c x12\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x12c * cnj x12c = cor x12", "by (simp add: x12_def complex_eq_iff power2_eq_square)"], ["proof (state)\nthis:\n  x12c * cnj x12c = cor x12\n\ngoal (1 subgoal):\n 1. x2 \\<notin> \\<real> \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  cor \\<Delta> = (cor x12)\\<^sup>2 * cor x23", "have \"?c \\<Delta> = ?c (x12^2 * x23)\""], ["proof (prove)\nusing this:\n  cor \\<Delta> = (cor x12)\\<^sup>2 * cor x23\n\ngoal (1 subgoal):\n 1. cor \\<Delta> = cor (x12\\<^sup>2 * x23)", "by simp"], ["proof (state)\nthis:\n  cor \\<Delta> = cor (x12\\<^sup>2 * x23)\n\ngoal (1 subgoal):\n 1. x2 \\<notin> \\<real> \\<Longrightarrow> False", "hence \"\\<Delta> = x12^2 * x23\""], ["proof (prove)\nusing this:\n  cor \\<Delta> = cor (x12\\<^sup>2 * x23)\n\ngoal (1 subgoal):\n 1. \\<Delta> = x12\\<^sup>2 * x23", "by (rule of_real_hom.injectivity)"], ["proof (state)\nthis:\n  \\<Delta> = x12\\<^sup>2 * x23\n\ngoal (1 subgoal):\n 1. x2 \\<notin> \\<real> \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  \\<Delta> = x12\\<^sup>2 * x23\n\ngoal (1 subgoal):\n 1. x2 \\<notin> \\<real> \\<Longrightarrow> False", "have \"\\<dots> < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x12\\<^sup>2 * x23 < 0", "using x12 x23_0"], ["proof (prove)\nusing this:\n  0 < x12\n  x23 < 0\n\ngoal (1 subgoal):\n 1. x12\\<^sup>2 * x23 < 0", "by (meson mult_pos_neg zero_less_power)"], ["proof (state)\nthis:\n  x12\\<^sup>2 * x23 < 0\n\ngoal (1 subgoal):\n 1. x2 \\<notin> \\<real> \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  \\<Delta> < 0", "show False"], ["proof (prove)\nusing this:\n  \\<Delta> < 0\n\ngoal (1 subgoal):\n 1. False", "using Delta"], ["proof (prove)\nusing this:\n  \\<Delta> < 0\n  0 \\<le> \\<Delta>\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x2 \\<in> \\<real>\n\ngoal (1 subgoal):\n 1. y \\<in> \\<real>", "with x2"], ["proof (chain)\npicking this:\n  poly (map_poly cor q) x2 = 0\n  x2 \\<in> \\<real>", "obtain x2 where \"poly ?q (?c x2) = 0\""], ["proof (prove)\nusing this:\n  poly (map_poly cor q) x2 = 0\n  x2 \\<in> \\<real>\n\ngoal (1 subgoal):\n 1. (\\<And>x2.\n        poly (map_poly cor q) (cor x2) = 0 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding Reals_def"], ["proof (prove)\nusing this:\n  poly (map_poly cor q) x2 = 0\n  x2 \\<in> range cor\n\ngoal (1 subgoal):\n 1. (\\<And>x2.\n        poly (map_poly cor q) (cor x2) = 0 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  poly (map_poly cor q) (cor x2) = 0\n\ngoal (1 subgoal):\n 1. y \\<in> \\<real>", "hence x2: \"poly q x2 = 0\""], ["proof (prove)\nusing this:\n  poly (map_poly cor q) (cor x2) = 0\n\ngoal (1 subgoal):\n 1. poly q x2 = 0", "by simp"], ["proof (state)\nthis:\n  poly q x2 = 0\n\ngoal (1 subgoal):\n 1. y \\<in> \\<real>", "from x2[unfolded poly_eq_0_iff_dvd]"], ["proof (chain)\npicking this:\n  [:- x2, 1:] dvd q", "obtain r where qr: \"q = [:-x2,1:] * r\""], ["proof (prove)\nusing this:\n  [:- x2, 1:] dvd q\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        q = [:- x2, 1:] * r \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  q = [:- x2, 1:] * r\n\ngoal (1 subgoal):\n 1. y \\<in> \\<real>", "from arg_cong[OF qr, of degree]"], ["proof (chain)\npicking this:\n  degree q = degree ([:- x2, 1:] * r)", "have \"2 = degree ([:-x2,1:] * r)\""], ["proof (prove)\nusing this:\n  degree q = degree ([:- x2, 1:] * r)\n\ngoal (1 subgoal):\n 1. 2 = degree ([:- x2, 1:] * r)", "using dq'"], ["proof (prove)\nusing this:\n  degree q = degree ([:- x2, 1:] * r)\n  degree (map_poly cor q) = 2\n\ngoal (1 subgoal):\n 1. 2 = degree ([:- x2, 1:] * r)", "by simp"], ["proof (state)\nthis:\n  2 = degree ([:- x2, 1:] * r)\n\ngoal (1 subgoal):\n 1. y \\<in> \\<real>", "also"], ["proof (state)\nthis:\n  2 = degree ([:- x2, 1:] * r)\n\ngoal (1 subgoal):\n 1. y \\<in> \\<real>", "have \"\\<dots> = 1 + degree r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree ([:- x2, 1:] * r) = 1 + degree r", "by (subst degree_mult_eq, insert pq qr, auto)"], ["proof (state)\nthis:\n  degree ([:- x2, 1:] * r) = 1 + degree r\n\ngoal (1 subgoal):\n 1. y \\<in> \\<real>", "finally"], ["proof (chain)\npicking this:\n  2 = 1 + degree r", "have \"degree r = 1\""], ["proof (prove)\nusing this:\n  2 = 1 + degree r\n\ngoal (1 subgoal):\n 1. degree r = 1", "by simp"], ["proof (state)\nthis:\n  degree r = 1\n\ngoal (1 subgoal):\n 1. y \\<in> \\<real>", "from degree1_coeffs[OF this]"], ["proof (chain)\npicking this:\n  \\<exists>a b. r = [:b, a:] \\<and> a \\<noteq> 0", "obtain a b where r: \"r = [:a,b:]\""], ["proof (prove)\nusing this:\n  \\<exists>a b. r = [:b, a:] \\<and> a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>a b. r = [:a, b:] \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  r = [:a, b:]\n\ngoal (1 subgoal):\n 1. y \\<in> \\<real>", "from pq[unfolded qr r]"], ["proof (chain)\npicking this:\n  [:f, e, 0, 1:] = [:- x1, 1:] * ([:- x2, 1:] * [:a, b:])", "have b1: \"b = 1\""], ["proof (prove)\nusing this:\n  [:f, e, 0, 1:] = [:- x1, 1:] * ([:- x2, 1:] * [:a, b:])\n\ngoal (1 subgoal):\n 1. b = 1", "by simp"], ["proof (state)\nthis:\n  b = 1\n\ngoal (1 subgoal):\n 1. y \\<in> \\<real>", "define x3 where \"x3 = -a\""], ["proof (state)\nthis:\n  x3 = - a\n\ngoal (1 subgoal):\n 1. y \\<in> \\<real>", "have r: \"r = [:-x3,1:]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r = [:- x3, 1:]", "unfolding r b1 x3_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. [:a, 1:] = [:- (- a), 1:]", "by simp"], ["proof (state)\nthis:\n  r = [:- x3, 1:]\n\ngoal (1 subgoal):\n 1. y \\<in> \\<real>", "let ?pp = \"[:-x1,1:] * [:-x2,1:] * [:-x3,1:]\""], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<in> \\<real>", "have id: \"?p = ?pp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [:f, e, 0, 1:] = [:- x1, 1:] * [:- x2, 1:] * [:- x3, 1:]", "unfolding pq qr r"], ["proof (prove)\ngoal (1 subgoal):\n 1. [:- x1, 1:] * ([:- x2, 1:] * [:- x3, 1:]) =\n    [:- x1, 1:] * [:- x2, 1:] * [:- x3, 1:]", "by linarith"], ["proof (state)\nthis:\n  [:f, e, 0, 1:] = [:- x1, 1:] * [:- x2, 1:] * [:- x3, 1:]\n\ngoal (1 subgoal):\n 1. y \\<in> \\<real>", "have \"True \\<longleftrightarrow> y^3 + e * y + f = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. True = (y ^ 3 + cor e * y + cor f = 0)", "using rt"], ["proof (prove)\nusing this:\n  y ^ 3 + cor e * y + cor f = 0\n\ngoal (1 subgoal):\n 1. True = (y ^ 3 + cor e * y + cor f = 0)", "by auto"], ["proof (state)\nthis:\n  True = (y ^ 3 + cor e * y + cor f = 0)\n\ngoal (1 subgoal):\n 1. y \\<in> \\<real>", "also"], ["proof (state)\nthis:\n  True = (y ^ 3 + cor e * y + cor f = 0)\n\ngoal (1 subgoal):\n 1. y \\<in> \\<real>", "have \"y^3 + e * y + f = poly (?cc ?p) y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y ^ 3 + cor e * y + cor f = poly (map_poly cor [:f, e, 0, 1:]) y", "by (simp add: powers)"], ["proof (state)\nthis:\n  y ^ 3 + cor e * y + cor f = poly (map_poly cor [:f, e, 0, 1:]) y\n\ngoal (1 subgoal):\n 1. y \\<in> \\<real>", "also"], ["proof (state)\nthis:\n  y ^ 3 + cor e * y + cor f = poly (map_poly cor [:f, e, 0, 1:]) y\n\ngoal (1 subgoal):\n 1. y \\<in> \\<real>", "have \"\\<dots> = poly (?cc ?pp) y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poly (map_poly cor [:f, e, 0, 1:]) y =\n    poly (map_poly cor ([:- x1, 1:] * [:- x2, 1:] * [:- x3, 1:])) y", "unfolding id"], ["proof (prove)\ngoal (1 subgoal):\n 1. poly (map_poly cor ([:- x1, 1:] * [:- x2, 1:] * [:- x3, 1:])) y =\n    poly (map_poly cor ([:- x1, 1:] * [:- x2, 1:] * [:- x3, 1:])) y", "by simp"], ["proof (state)\nthis:\n  poly (map_poly cor [:f, e, 0, 1:]) y =\n  poly (map_poly cor ([:- x1, 1:] * [:- x2, 1:] * [:- x3, 1:])) y\n\ngoal (1 subgoal):\n 1. y \\<in> \\<real>", "also"], ["proof (state)\nthis:\n  poly (map_poly cor [:f, e, 0, 1:]) y =\n  poly (map_poly cor ([:- x1, 1:] * [:- x2, 1:] * [:- x3, 1:])) y\n\ngoal (1 subgoal):\n 1. y \\<in> \\<real>", "have \"?cc ?pp = [:-?c x1, 1:] * [:-?c x2, 1:] * [:- ?c x3, 1:]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map_poly cor ([:- x1, 1:] * [:- x2, 1:] * [:- x3, 1:]) =\n    [:- cor x1, 1:] * [:- cor x2, 1:] * [:- cor x3, 1:]", "by simp"], ["proof (state)\nthis:\n  map_poly cor ([:- x1, 1:] * [:- x2, 1:] * [:- x3, 1:]) =\n  [:- cor x1, 1:] * [:- cor x2, 1:] * [:- cor x3, 1:]\n\ngoal (1 subgoal):\n 1. y \\<in> \\<real>", "also"], ["proof (state)\nthis:\n  map_poly cor ([:- x1, 1:] * [:- x2, 1:] * [:- x3, 1:]) =\n  [:- cor x1, 1:] * [:- cor x2, 1:] * [:- cor x3, 1:]\n\ngoal (1 subgoal):\n 1. y \\<in> \\<real>", "have \"poly \\<dots> y = 0 \\<longleftrightarrow> y = ?c x1 \\<or> y = ?c x2 \\<or> y = ?c x3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (poly ([:- cor x1, 1:] * [:- cor x2, 1:] * [:- cor x3, 1:]) y = 0) =\n    (y = cor x1 \\<or> y = cor x2 \\<or> y = cor x3)", "unfolding poly_mult mult_eq_0_iff"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((poly [:- cor x1, 1:] y = 0 \\<or> poly [:- cor x2, 1:] y = 0) \\<or>\n     poly [:- cor x3, 1:] y = 0) =\n    (y = cor x1 \\<or> y = cor x2 \\<or> y = cor x3)", "by auto"], ["proof (state)\nthis:\n  (poly ([:- cor x1, 1:] * [:- cor x2, 1:] * [:- cor x3, 1:]) y = 0) =\n  (y = cor x1 \\<or> y = cor x2 \\<or> y = cor x3)\n\ngoal (1 subgoal):\n 1. y \\<in> \\<real>", "finally"], ["proof (chain)\npicking this:\n  True = (y = cor x1 \\<or> y = cor x2 \\<or> y = cor x3)", "show \"y \\<in> \\<real>\""], ["proof (prove)\nusing this:\n  True = (y = cor x1 \\<or> y = cor x2 \\<or> y = cor x3)\n\ngoal (1 subgoal):\n 1. y \\<in> \\<real>", "by auto"], ["proof (state)\nthis:\n  y \\<in> \\<real>\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}