{"file_name": "/home/qj213/afp-2021-10-22/thys/Cubic_Quartic_Equations/Quartic_Polynomials.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Cubic_Quartic_Equations", "problem_names": ["lemma solve_depressed_quartic_complex: \"x \\<in> set (solve_depressed_quartic_complex p q r) \n  \\<longleftrightarrow> (x^4 + p * x^2 + q * x + r = 0)\"", "lemma solve_depressed_quartic_real: \"x \\<in> set (solve_depressed_quartic_real p q r) \n  \\<longleftrightarrow> (x^4 + p * x^2 + q * x + r = 0)\"", "lemma numeral_4_eq_4: \"4 = Suc (Suc (Suc (Suc 0)))\"", "lemma degree4_coeffs: \"degree p = 4 \\<Longrightarrow>\n  \\<exists> a b c d e. p = [: e, d, c, b, a :] \\<and> a \\<noteq> 0\"", "lemma roots4_generic: assumes deg: \"degree p = 4\" \n  and solver: \"\\<And> p q r y. y \\<in> set (depressed_solver p q r) \\<longleftrightarrow> y^4 + p * y^2 + q * y + r = 0\" \n  shows \"set (roots4_generic depressed_solver p) = {x. poly p x = 0}\"", "lemma croots4: assumes deg: \"degree p = 4\" \n  shows \"set (croots4 p) = { x. poly p x = 0}\"", "lemma rroots4: assumes deg: \"degree p = 4\" \n  shows \"set (rroots4 p) = { x. poly p x = 0}\""], "translations": [["", "lemma solve_depressed_quartic_complex: \"x \\<in> set (solve_depressed_quartic_complex p q r) \n  \\<longleftrightarrow> (x^4 + p * x^2 + q * x + r = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "note powers = field_simps power4_eq_xxxx power3_eq_cube power2_eq_square"], ["proof (state)\nthis:\n  ?a + ?b + ?c = ?a + (?b + ?c)\n  ?a + ?b = ?b + ?a\n  ?b + (?a + ?c) = ?a + (?b + ?c)\n  ?a * ?b * ?c = ?a * (?b * ?c)\n  ?a * ?b = ?b * ?a\n  ?b * (?a * ?c) = ?a * (?b * ?c)\n  ?a - ?b - ?c = ?a - (?b + ?c)\n  ?a + (?b - ?c) = ?a + ?b - ?c\n  (?a - ?b = ?c) = (?a = ?c + ?b)\n  (?a = ?c - ?b) = (?a + ?b = ?c)\n  ?a - (?b - ?c) = ?a + ?c - ?b\n  ?a - ?b + ?c = ?a + ?c - ?b\n  (?a - ?b < ?c) = (?a < ?c + ?b)\n  (?a < ?c - ?b) = (?a + ?b < ?c)\n  (?a - ?b \\<le> ?c) = (?a \\<le> ?c + ?b)\n  (?a \\<le> ?c - ?b) = (?a + ?b \\<le> ?c)\n  NO_MATCH (?x div ?y) ?a \\<Longrightarrow>\n  ?a * (?b + ?c) = ?a * ?b + ?a * ?c\n  NO_MATCH (?x div ?y) ?c \\<Longrightarrow>\n  (?a + ?b) * ?c = ?a * ?c + ?b * ?c\n  NO_MATCH (?x div ?y) ?c \\<Longrightarrow>\n  (?a - ?b) * ?c = ?a * ?c - ?b * ?c\n  NO_MATCH (?x div ?y) ?a \\<Longrightarrow>\n  ?a * (?b - ?c) = ?a * ?b - ?a * ?c\n  inverse ?a = (1::?'a) / ?a\n  ?c \\<noteq> (0::?'a) \\<Longrightarrow> (?a = ?b / ?c) = (?a * ?c = ?b)\n  ?c \\<noteq> (0::?'a) \\<Longrightarrow> (?b / ?c = ?a) = (?b = ?a * ?c)\n  ?b \\<noteq> (0::?'a) \\<Longrightarrow>\n  (- (?a / ?b) = ?c) = (- ?a = ?c * ?b)\n  ?b \\<noteq> (0::?'a) \\<Longrightarrow>\n  (?c = - (?a / ?b)) = (?c * ?b = - ?a)\n  ?z \\<noteq> (0::?'a) \\<Longrightarrow> ?x + ?y / ?z = (?x * ?z + ?y) / ?z\n  ?z \\<noteq> (0::?'a) \\<Longrightarrow> ?x / ?z + ?y = (?x + ?y * ?z) / ?z\n  ?z \\<noteq> (0::?'a) \\<Longrightarrow> ?x - ?y / ?z = (?x * ?z - ?y) / ?z\n  ?z \\<noteq> (0::?'a) \\<Longrightarrow>\n  - (?x / ?z) + ?y = (- ?x + ?y * ?z) / ?z\n  ?z \\<noteq> (0::?'a) \\<Longrightarrow> ?x / ?z - ?y = (?x - ?y * ?z) / ?z\n  ?z \\<noteq> (0::?'a) \\<Longrightarrow>\n  - (?x / ?z) - ?y = (- ?x - ?y * ?z) / ?z\n  (0::?'a) < ?c \\<Longrightarrow> (?a \\<le> ?b / ?c) = (?a * ?c \\<le> ?b)\n  (0::?'a) < ?c \\<Longrightarrow> (?a < ?b / ?c) = (?a * ?c < ?b)\n  ?c < (0::?'a) \\<Longrightarrow> (?a < ?b / ?c) = (?b < ?a * ?c)\n  ?c < (0::?'a) \\<Longrightarrow> (?a \\<le> ?b / ?c) = (?b \\<le> ?a * ?c)\n  (0::?'a) < ?c \\<Longrightarrow> (?b / ?c \\<le> ?a) = (?b \\<le> ?a * ?c)\n  (0::?'a) < ?c \\<Longrightarrow> (?b / ?c < ?a) = (?b < ?a * ?c)\n  ?c < (0::?'a) \\<Longrightarrow> (?b / ?c \\<le> ?a) = (?a * ?c \\<le> ?b)\n  ?c < (0::?'a) \\<Longrightarrow> (?b / ?c < ?a) = (?a * ?c < ?b)\n  (0::?'a) < ?c \\<Longrightarrow>\n  (?a \\<le> - (?b / ?c)) = (?a * ?c \\<le> - ?b)\n  ?c < (0::?'a) \\<Longrightarrow>\n  (?a \\<le> - (?b / ?c)) = (- ?b \\<le> ?a * ?c)\n  (0::?'a) < ?c \\<Longrightarrow> (?a < - (?b / ?c)) = (?a * ?c < - ?b)\n  ?c < (0::?'a) \\<Longrightarrow> (?a < - (?b / ?c)) = (- ?b < ?a * ?c)\n  (0::?'a) < ?c \\<Longrightarrow> (- (?b / ?c) < ?a) = (- ?b < ?a * ?c)\n  ?c < (0::?'a) \\<Longrightarrow> (- (?b / ?c) < ?a) = (?a * ?c < - ?b)\n  (0::?'a) < ?c \\<Longrightarrow>\n  (- (?b / ?c) \\<le> ?a) = (- ?b \\<le> ?a * ?c)\n  ?c < (0::?'a) \\<Longrightarrow>\n  (- (?b / ?c) \\<le> ?a) = (?a * ?c \\<le> - ?b)\n  (?a * ?b) ^ ?n = ?a ^ ?n * ?b ^ ?n\n  inverse ?a ^ ?n = inverse (?a ^ ?n)\n  ((1::?'a) / ?a) ^ ?n = (1::?'a) / ?a ^ ?n\n  (?a / ?b) ^ ?n = ?a ^ ?n / ?b ^ ?n\n  inverse ?x powi ?n = inverse (?x powi ?n)\n  ((1::?'a) / ?x) powi ?n = (1::?'a) / ?x powi ?n\n  NO_MATCH (?x div ?y) ?c \\<Longrightarrow>\n  (?a + ?b) *\\<^sub>R ?x = ?a *\\<^sub>R ?x + ?b *\\<^sub>R ?x\n  NO_MATCH (?x div ?y) ?a \\<Longrightarrow>\n  ?a *\\<^sub>R (?x + ?y) = ?a *\\<^sub>R ?x + ?a *\\<^sub>R ?y\n  NO_MATCH (?x div ?y) ?c \\<Longrightarrow>\n  (?a - ?b) *\\<^sub>R ?x = ?a *\\<^sub>R ?x - ?b *\\<^sub>R ?x\n  NO_MATCH (?x div ?y) ?a \\<Longrightarrow>\n  ?a *\\<^sub>R (?x - ?y) = ?a *\\<^sub>R ?x - ?a *\\<^sub>R ?y\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  (?a = ?b /\\<^sub>R ?c) = (?c *\\<^sub>R ?a = ?b)\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  (?b /\\<^sub>R ?c = ?a) = (?b = ?c *\\<^sub>R ?a)\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  ?a + ?b /\\<^sub>R ?c = (?c *\\<^sub>R ?a + ?b) /\\<^sub>R ?c\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  ?a /\\<^sub>R ?c + ?b = (?a + ?c *\\<^sub>R ?b) /\\<^sub>R ?c\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  ?a - ?b /\\<^sub>R ?c = (?c *\\<^sub>R ?a - ?b) /\\<^sub>R ?c\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  ?a /\\<^sub>R ?c - ?b = (?a - ?c *\\<^sub>R ?b) /\\<^sub>R ?c\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  - (?a /\\<^sub>R ?c) + ?b = (- ?a + ?c *\\<^sub>R ?b) /\\<^sub>R ?c\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  - (?a /\\<^sub>R ?c) - ?b = (- ?a - ?c *\\<^sub>R ?b) /\\<^sub>R ?c\n  0 < ?c \\<Longrightarrow>\n  (?a \\<le> ?b /\\<^sub>R ?c) = (?c *\\<^sub>R ?a \\<le> ?b)\n  0 < ?c \\<Longrightarrow> (?a < ?b /\\<^sub>R ?c) = (?c *\\<^sub>R ?a < ?b)\n  0 < ?c \\<Longrightarrow>\n  (?b /\\<^sub>R ?c \\<le> ?a) = (?b \\<le> ?c *\\<^sub>R ?a)\n  0 < ?c \\<Longrightarrow> (?b /\\<^sub>R ?c < ?a) = (?b < ?c *\\<^sub>R ?a)\n  0 < ?c \\<Longrightarrow>\n  (?a \\<le> - (?b /\\<^sub>R ?c)) = (?c *\\<^sub>R ?a \\<le> - ?b)\n  0 < ?c \\<Longrightarrow>\n  (?a < - (?b /\\<^sub>R ?c)) = (?c *\\<^sub>R ?a < - ?b)\n  0 < ?c \\<Longrightarrow>\n  (- (?b /\\<^sub>R ?c) \\<le> ?a) = (- ?b \\<le> ?c *\\<^sub>R ?a)\n  0 < ?c \\<Longrightarrow>\n  (- (?b /\\<^sub>R ?c) < ?a) = (- ?b < ?c *\\<^sub>R ?a)\n  ?c < 0 \\<Longrightarrow>\n  (?a \\<le> ?b /\\<^sub>R ?c) = (?b \\<le> ?c *\\<^sub>R ?a)\n  ?c < 0 \\<Longrightarrow> (?a < ?b /\\<^sub>R ?c) = (?b < ?c *\\<^sub>R ?a)\n  ?c < 0 \\<Longrightarrow>\n  (?b /\\<^sub>R ?c \\<le> ?a) = (?c *\\<^sub>R ?a \\<le> ?b)\n  ?c < 0 \\<Longrightarrow> (?b /\\<^sub>R ?c < ?a) = (?c *\\<^sub>R ?a < ?b)\n  ?c < 0 \\<Longrightarrow>\n  (?a \\<le> - (?b /\\<^sub>R ?c)) = (- ?b \\<le> ?c *\\<^sub>R ?a)\n  ?c < 0 \\<Longrightarrow>\n  (?a < - (?b /\\<^sub>R ?c)) = (- ?b < ?c *\\<^sub>R ?a)\n  ?c < 0 \\<Longrightarrow>\n  (- (?b /\\<^sub>R ?c) \\<le> ?a) = (?c *\\<^sub>R ?a \\<le> - ?b)\n  ?c < 0 \\<Longrightarrow>\n  (- (?b /\\<^sub>R ?c) < ?a) = (?c *\\<^sub>R ?a < - ?b)\n  ?x ^ 4 = ?x * ?x * ?x * ?x\n  ?a ^ 3 = ?a * ?a * ?a\n  ?a\\<^sup>2 = ?a * ?a\n\ngoal (1 subgoal):\n 1. (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "proof (cases \"q = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)\n 2. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "case True"], ["proof (state)\nthis:\n  q = 0\n\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)\n 2. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "have csqrt: \"z = x^2 \\<longleftrightarrow> (x = csqrt z \\<or> x = - csqrt z)\" for z"], ["proof (prove)\ngoal (1 subgoal):\n 1. (z = x\\<^sup>2) = (x = csqrt z \\<or> x = - csqrt z)", "by (metis power2_csqrt power2_eq_iff)"], ["proof (state)\nthis:\n  (?z = x\\<^sup>2) = (x = csqrt ?z \\<or> x = - csqrt ?z)\n\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)\n 2. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "have \"(x ^ 4 + p * x\\<^sup>2 + q * x + r = 0) \\<longleftrightarrow> (x ^ 4 + p * x\\<^sup>2 + r = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0) =\n    (x ^ 4 + p * x\\<^sup>2 + r = 0)", "unfolding True"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x ^ 4 + p * x\\<^sup>2 + 0 * x + r = 0) =\n    (x ^ 4 + p * x\\<^sup>2 + r = 0)", "by simp"], ["proof (state)\nthis:\n  (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0) = (x ^ 4 + p * x\\<^sup>2 + r = 0)\n\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)\n 2. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "also"], ["proof (state)\nthis:\n  (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0) = (x ^ 4 + p * x\\<^sup>2 + r = 0)\n\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)\n 2. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "have \"\\<dots> \\<longleftrightarrow> (\\<exists>z. z\\<^sup>2 + p * z + r = 0 \\<and> z = x\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x ^ 4 + p * x\\<^sup>2 + r = 0) =\n    (\\<exists>z. z\\<^sup>2 + p * z + r = 0 \\<and> z = x\\<^sup>2)", "unfolding biquadratic_solution"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>z. z\\<^sup>2 + p * z + r = 0 \\<and> z = x\\<^sup>2) =\n    (\\<exists>z. z\\<^sup>2 + p * z + r = 0 \\<and> z = x\\<^sup>2)", "by simp"], ["proof (state)\nthis:\n  (x ^ 4 + p * x\\<^sup>2 + r = 0) =\n  (\\<exists>z. z\\<^sup>2 + p * z + r = 0 \\<and> z = x\\<^sup>2)\n\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)\n 2. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "also"], ["proof (state)\nthis:\n  (x ^ 4 + p * x\\<^sup>2 + r = 0) =\n  (\\<exists>z. z\\<^sup>2 + p * z + r = 0 \\<and> z = x\\<^sup>2)\n\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)\n 2. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "have \"\\<dots> \\<longleftrightarrow> (\\<exists> z. poly [:r,p,1:] z = 0 \\<and> z = x^2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>z. z\\<^sup>2 + p * z + r = 0 \\<and> z = x\\<^sup>2) =\n    (\\<exists>z. poly [:r, p, 1:] z = 0 \\<and> z = x\\<^sup>2)", "by (simp add: powers)"], ["proof (state)\nthis:\n  (\\<exists>z. z\\<^sup>2 + p * z + r = 0 \\<and> z = x\\<^sup>2) =\n  (\\<exists>z. poly [:r, p, 1:] z = 0 \\<and> z = x\\<^sup>2)\n\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)\n 2. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "also"], ["proof (state)\nthis:\n  (\\<exists>z. z\\<^sup>2 + p * z + r = 0 \\<and> z = x\\<^sup>2) =\n  (\\<exists>z. poly [:r, p, 1:] z = 0 \\<and> z = x\\<^sup>2)\n\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)\n 2. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "have \"\\<dots> \\<longleftrightarrow> (\\<exists> z \\<in> set (croots2 [:r,p,1:]). z = x^2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>z. poly [:r, p, 1:] z = 0 \\<and> z = x\\<^sup>2) =\n    (\\<exists>z\\<in>set (croots2 [:r, p, 1:]). z = x\\<^sup>2)", "by (subst croots2[symmetric], auto)"], ["proof (state)\nthis:\n  (\\<exists>z. poly [:r, p, 1:] z = 0 \\<and> z = x\\<^sup>2) =\n  (\\<exists>z\\<in>set (croots2 [:r, p, 1:]). z = x\\<^sup>2)\n\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)\n 2. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "also"], ["proof (state)\nthis:\n  (\\<exists>z. poly [:r, p, 1:] z = 0 \\<and> z = x\\<^sup>2) =\n  (\\<exists>z\\<in>set (croots2 [:r, p, 1:]). z = x\\<^sup>2)\n\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)\n 2. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "have \"\\<dots> \\<longleftrightarrow> (\\<exists> z \\<in> set (croots2 [:r,p,1:]). x = csqrt z \\<or> x = - csqrt z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>z\\<in>set (croots2 [:r, p, 1:]). z = x\\<^sup>2) =\n    (\\<exists>z\\<in>set (croots2 [:r, p, 1:]).\n        x = csqrt z \\<or> x = - csqrt z)", "unfolding csqrt"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>z\\<in>set (croots2 [:r, p, 1:]).\n        x = csqrt z \\<or> x = - csqrt z) =\n    (\\<exists>z\\<in>set (croots2 [:r, p, 1:]).\n        x = csqrt z \\<or> x = - csqrt z)", ".."], ["proof (state)\nthis:\n  (\\<exists>z\\<in>set (croots2 [:r, p, 1:]). z = x\\<^sup>2) =\n  (\\<exists>z\\<in>set (croots2 [:r, p, 1:]).\n      x = csqrt z \\<or> x = - csqrt z)\n\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)\n 2. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "also"], ["proof (state)\nthis:\n  (\\<exists>z\\<in>set (croots2 [:r, p, 1:]). z = x\\<^sup>2) =\n  (\\<exists>z\\<in>set (croots2 [:r, p, 1:]).\n      x = csqrt z \\<or> x = - csqrt z)\n\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)\n 2. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "have \"\\<dots> \\<longleftrightarrow> (x \\<in> set (solve_depressed_quartic_complex p q r))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>z\\<in>set (croots2 [:r, p, 1:]).\n        x = csqrt z \\<or> x = - csqrt z) =\n    (x \\<in> set (solve_depressed_quartic_complex p q r))", "unfolding solve_depressed_quartic_complex_def id"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>z\\<in>set (croots2 [:r, p, 1:]).\n        x = csqrt z \\<or> x = - csqrt z) =\n    (x \\<in> set (remdups\n                   (if q = 0\n                    then concat\n                          (map (\\<lambda>z. let y = csqrt z in [y, - y])\n                            (croots2 [:r, p, 1:]))\n                    else let cubics =\n                               Cubic_Polynomials.croots3\n                                [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p,\n                                  8:];\n                             m = hd cubics; a = csqrt (2 * m);\n                             p2m = p / 2 + m; q2a = q / (2 * a);\n                             b1 = p2m - q2a; b2 = p2m + q2a\n                         in croots2 [:b1, a, 1:] @ croots2 [:b2, - a, 1:])))", "unfolding True Let_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>z\\<in>set (croots2 [:r, p, 1:]).\n        x = csqrt z \\<or> x = - csqrt z) =\n    (x \\<in> set (remdups\n                   (if 0 = 0\n                    then concat\n                          (map (\\<lambda>z. [csqrt z, - csqrt z])\n                            (croots2 [:r, p, 1:]))\n                    else croots2\n                          [:p / 2 +\n                            hd (Cubic_Polynomials.croots3\n                                 [:- 0\\<^sup>2, 2 * p\\<^sup>2 - 8 * r,\n                                   8 * p, 8:]) -\n                            0 /\n                            (2 *\n                             csqrt\n                              (2 *\n                               hd (Cubic_Polynomials.croots3\n                                    [:- 0\\<^sup>2, 2 * p\\<^sup>2 - 8 * r,\n8 * p, 8:]))),\n                            csqrt\n                             (2 *\n                              hd (Cubic_Polynomials.croots3\n                                   [:- 0\\<^sup>2, 2 * p\\<^sup>2 - 8 * r,\n                                     8 * p, 8:])),\n                            1:] @\n                         croots2\n                          [:p / 2 +\n                            hd (Cubic_Polynomials.croots3\n                                 [:- 0\\<^sup>2, 2 * p\\<^sup>2 - 8 * r,\n                                   8 * p, 8:]) +\n                            0 /\n                            (2 *\n                             csqrt\n                              (2 *\n                               hd (Cubic_Polynomials.croots3\n                                    [:- 0\\<^sup>2, 2 * p\\<^sup>2 - 8 * r,\n8 * p, 8:]))),\n                            - csqrt\n                               (2 *\n                                hd (Cubic_Polynomials.croots3\n                                     [:- 0\\<^sup>2, 2 * p\\<^sup>2 - 8 * r,\n 8 * p, 8:])),\n                            1:])))", "by auto"], ["proof (state)\nthis:\n  (\\<exists>z\\<in>set (croots2 [:r, p, 1:]).\n      x = csqrt z \\<or> x = - csqrt z) =\n  (x \\<in> set (solve_depressed_quartic_complex p q r))\n\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)\n 2. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "finally"], ["proof (chain)\npicking this:\n  (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0) =\n  (x \\<in> set (solve_depressed_quartic_complex p q r))", "show ?thesis"], ["proof (prove)\nusing this:\n  (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0) =\n  (x \\<in> set (solve_depressed_quartic_complex p q r))\n\ngoal (1 subgoal):\n 1. (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", ".."], ["proof (state)\nthis:\n  (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n  (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "case q0: False"], ["proof (state)\nthis:\n  q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "hence id: \"(if q = 0 then x else y) = y\" for x y :: \"complex list\""], ["proof (prove)\nusing this:\n  q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (if q = 0 then x else y) = y", "by auto"], ["proof (state)\nthis:\n  (if q = 0 then ?x else ?y) = ?y\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "note powers = field_simps power4_eq_xxxx power3_eq_cube power2_eq_square"], ["proof (state)\nthis:\n  ?a + ?b + ?c = ?a + (?b + ?c)\n  ?a + ?b = ?b + ?a\n  ?b + (?a + ?c) = ?a + (?b + ?c)\n  ?a * ?b * ?c = ?a * (?b * ?c)\n  ?a * ?b = ?b * ?a\n  ?b * (?a * ?c) = ?a * (?b * ?c)\n  ?a - ?b - ?c = ?a - (?b + ?c)\n  ?a + (?b - ?c) = ?a + ?b - ?c\n  (?a - ?b = ?c) = (?a = ?c + ?b)\n  (?a = ?c - ?b) = (?a + ?b = ?c)\n  ?a - (?b - ?c) = ?a + ?c - ?b\n  ?a - ?b + ?c = ?a + ?c - ?b\n  (?a - ?b < ?c) = (?a < ?c + ?b)\n  (?a < ?c - ?b) = (?a + ?b < ?c)\n  (?a - ?b \\<le> ?c) = (?a \\<le> ?c + ?b)\n  (?a \\<le> ?c - ?b) = (?a + ?b \\<le> ?c)\n  NO_MATCH (?x div ?y) ?a \\<Longrightarrow>\n  ?a * (?b + ?c) = ?a * ?b + ?a * ?c\n  NO_MATCH (?x div ?y) ?c \\<Longrightarrow>\n  (?a + ?b) * ?c = ?a * ?c + ?b * ?c\n  NO_MATCH (?x div ?y) ?c \\<Longrightarrow>\n  (?a - ?b) * ?c = ?a * ?c - ?b * ?c\n  NO_MATCH (?x div ?y) ?a \\<Longrightarrow>\n  ?a * (?b - ?c) = ?a * ?b - ?a * ?c\n  inverse ?a = (1::?'a) / ?a\n  ?c \\<noteq> (0::?'a) \\<Longrightarrow> (?a = ?b / ?c) = (?a * ?c = ?b)\n  ?c \\<noteq> (0::?'a) \\<Longrightarrow> (?b / ?c = ?a) = (?b = ?a * ?c)\n  ?b \\<noteq> (0::?'a) \\<Longrightarrow>\n  (- (?a / ?b) = ?c) = (- ?a = ?c * ?b)\n  ?b \\<noteq> (0::?'a) \\<Longrightarrow>\n  (?c = - (?a / ?b)) = (?c * ?b = - ?a)\n  ?z \\<noteq> (0::?'a) \\<Longrightarrow> ?x + ?y / ?z = (?x * ?z + ?y) / ?z\n  ?z \\<noteq> (0::?'a) \\<Longrightarrow> ?x / ?z + ?y = (?x + ?y * ?z) / ?z\n  ?z \\<noteq> (0::?'a) \\<Longrightarrow> ?x - ?y / ?z = (?x * ?z - ?y) / ?z\n  ?z \\<noteq> (0::?'a) \\<Longrightarrow>\n  - (?x / ?z) + ?y = (- ?x + ?y * ?z) / ?z\n  ?z \\<noteq> (0::?'a) \\<Longrightarrow> ?x / ?z - ?y = (?x - ?y * ?z) / ?z\n  ?z \\<noteq> (0::?'a) \\<Longrightarrow>\n  - (?x / ?z) - ?y = (- ?x - ?y * ?z) / ?z\n  (0::?'a) < ?c \\<Longrightarrow> (?a \\<le> ?b / ?c) = (?a * ?c \\<le> ?b)\n  (0::?'a) < ?c \\<Longrightarrow> (?a < ?b / ?c) = (?a * ?c < ?b)\n  ?c < (0::?'a) \\<Longrightarrow> (?a < ?b / ?c) = (?b < ?a * ?c)\n  ?c < (0::?'a) \\<Longrightarrow> (?a \\<le> ?b / ?c) = (?b \\<le> ?a * ?c)\n  (0::?'a) < ?c \\<Longrightarrow> (?b / ?c \\<le> ?a) = (?b \\<le> ?a * ?c)\n  (0::?'a) < ?c \\<Longrightarrow> (?b / ?c < ?a) = (?b < ?a * ?c)\n  ?c < (0::?'a) \\<Longrightarrow> (?b / ?c \\<le> ?a) = (?a * ?c \\<le> ?b)\n  ?c < (0::?'a) \\<Longrightarrow> (?b / ?c < ?a) = (?a * ?c < ?b)\n  (0::?'a) < ?c \\<Longrightarrow>\n  (?a \\<le> - (?b / ?c)) = (?a * ?c \\<le> - ?b)\n  ?c < (0::?'a) \\<Longrightarrow>\n  (?a \\<le> - (?b / ?c)) = (- ?b \\<le> ?a * ?c)\n  (0::?'a) < ?c \\<Longrightarrow> (?a < - (?b / ?c)) = (?a * ?c < - ?b)\n  ?c < (0::?'a) \\<Longrightarrow> (?a < - (?b / ?c)) = (- ?b < ?a * ?c)\n  (0::?'a) < ?c \\<Longrightarrow> (- (?b / ?c) < ?a) = (- ?b < ?a * ?c)\n  ?c < (0::?'a) \\<Longrightarrow> (- (?b / ?c) < ?a) = (?a * ?c < - ?b)\n  (0::?'a) < ?c \\<Longrightarrow>\n  (- (?b / ?c) \\<le> ?a) = (- ?b \\<le> ?a * ?c)\n  ?c < (0::?'a) \\<Longrightarrow>\n  (- (?b / ?c) \\<le> ?a) = (?a * ?c \\<le> - ?b)\n  (?a * ?b) ^ ?n = ?a ^ ?n * ?b ^ ?n\n  inverse ?a ^ ?n = inverse (?a ^ ?n)\n  ((1::?'a) / ?a) ^ ?n = (1::?'a) / ?a ^ ?n\n  (?a / ?b) ^ ?n = ?a ^ ?n / ?b ^ ?n\n  inverse ?x powi ?n = inverse (?x powi ?n)\n  ((1::?'a) / ?x) powi ?n = (1::?'a) / ?x powi ?n\n  NO_MATCH (?x div ?y) ?c \\<Longrightarrow>\n  (?a + ?b) *\\<^sub>R ?x = ?a *\\<^sub>R ?x + ?b *\\<^sub>R ?x\n  NO_MATCH (?x div ?y) ?a \\<Longrightarrow>\n  ?a *\\<^sub>R (?x + ?y) = ?a *\\<^sub>R ?x + ?a *\\<^sub>R ?y\n  NO_MATCH (?x div ?y) ?c \\<Longrightarrow>\n  (?a - ?b) *\\<^sub>R ?x = ?a *\\<^sub>R ?x - ?b *\\<^sub>R ?x\n  NO_MATCH (?x div ?y) ?a \\<Longrightarrow>\n  ?a *\\<^sub>R (?x - ?y) = ?a *\\<^sub>R ?x - ?a *\\<^sub>R ?y\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  (?a = ?b /\\<^sub>R ?c) = (?c *\\<^sub>R ?a = ?b)\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  (?b /\\<^sub>R ?c = ?a) = (?b = ?c *\\<^sub>R ?a)\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  ?a + ?b /\\<^sub>R ?c = (?c *\\<^sub>R ?a + ?b) /\\<^sub>R ?c\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  ?a /\\<^sub>R ?c + ?b = (?a + ?c *\\<^sub>R ?b) /\\<^sub>R ?c\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  ?a - ?b /\\<^sub>R ?c = (?c *\\<^sub>R ?a - ?b) /\\<^sub>R ?c\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  ?a /\\<^sub>R ?c - ?b = (?a - ?c *\\<^sub>R ?b) /\\<^sub>R ?c\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  - (?a /\\<^sub>R ?c) + ?b = (- ?a + ?c *\\<^sub>R ?b) /\\<^sub>R ?c\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  - (?a /\\<^sub>R ?c) - ?b = (- ?a - ?c *\\<^sub>R ?b) /\\<^sub>R ?c\n  0 < ?c \\<Longrightarrow>\n  (?a \\<le> ?b /\\<^sub>R ?c) = (?c *\\<^sub>R ?a \\<le> ?b)\n  0 < ?c \\<Longrightarrow> (?a < ?b /\\<^sub>R ?c) = (?c *\\<^sub>R ?a < ?b)\n  0 < ?c \\<Longrightarrow>\n  (?b /\\<^sub>R ?c \\<le> ?a) = (?b \\<le> ?c *\\<^sub>R ?a)\n  0 < ?c \\<Longrightarrow> (?b /\\<^sub>R ?c < ?a) = (?b < ?c *\\<^sub>R ?a)\n  0 < ?c \\<Longrightarrow>\n  (?a \\<le> - (?b /\\<^sub>R ?c)) = (?c *\\<^sub>R ?a \\<le> - ?b)\n  0 < ?c \\<Longrightarrow>\n  (?a < - (?b /\\<^sub>R ?c)) = (?c *\\<^sub>R ?a < - ?b)\n  0 < ?c \\<Longrightarrow>\n  (- (?b /\\<^sub>R ?c) \\<le> ?a) = (- ?b \\<le> ?c *\\<^sub>R ?a)\n  0 < ?c \\<Longrightarrow>\n  (- (?b /\\<^sub>R ?c) < ?a) = (- ?b < ?c *\\<^sub>R ?a)\n  ?c < 0 \\<Longrightarrow>\n  (?a \\<le> ?b /\\<^sub>R ?c) = (?b \\<le> ?c *\\<^sub>R ?a)\n  ?c < 0 \\<Longrightarrow> (?a < ?b /\\<^sub>R ?c) = (?b < ?c *\\<^sub>R ?a)\n  ?c < 0 \\<Longrightarrow>\n  (?b /\\<^sub>R ?c \\<le> ?a) = (?c *\\<^sub>R ?a \\<le> ?b)\n  ?c < 0 \\<Longrightarrow> (?b /\\<^sub>R ?c < ?a) = (?c *\\<^sub>R ?a < ?b)\n  ?c < 0 \\<Longrightarrow>\n  (?a \\<le> - (?b /\\<^sub>R ?c)) = (- ?b \\<le> ?c *\\<^sub>R ?a)\n  ?c < 0 \\<Longrightarrow>\n  (?a < - (?b /\\<^sub>R ?c)) = (- ?b < ?c *\\<^sub>R ?a)\n  ?c < 0 \\<Longrightarrow>\n  (- (?b /\\<^sub>R ?c) \\<le> ?a) = (?c *\\<^sub>R ?a \\<le> - ?b)\n  ?c < 0 \\<Longrightarrow>\n  (- (?b /\\<^sub>R ?c) < ?a) = (?c *\\<^sub>R ?a < - ?b)\n  ?x ^ 4 = ?x * ?x * ?x * ?x\n  ?a ^ 3 = ?a * ?a * ?a\n  ?a\\<^sup>2 = ?a * ?a\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "let ?poly = \"[:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:]\""], ["proof (state)\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "from croots3[of ?poly]"], ["proof (chain)\npicking this:\n  degree [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] =\n  3 \\<Longrightarrow>\n  set (Cubic_Polynomials.croots3\n        [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:]) =\n  {x. poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] x = 0}", "have croots: \"set (croots3 ?poly) = {x. poly ?poly x = 0}\""], ["proof (prove)\nusing this:\n  degree [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] =\n  3 \\<Longrightarrow>\n  set (Cubic_Polynomials.croots3\n        [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:]) =\n  {x. poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] x = 0}\n\ngoal (1 subgoal):\n 1. set (Cubic_Polynomials.croots3\n          [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:]) =\n    {x. poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] x = 0}", "by auto"], ["proof (state)\nthis:\n  set (Cubic_Polynomials.croots3\n        [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:]) =\n  {x. poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] x = 0}\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "from fundamental_theorem_of_algebra_alt[of ?poly]"], ["proof (chain)\npicking this:\n  \\<nexists>a l.\n     a \\<noteq> 0 \\<and>\n     l = 0 \\<and>\n     [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] =\n     pCons a l \\<Longrightarrow>\n  \\<exists>z. poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] z = 0", "have \"{x. poly ?poly x = 0} \\<noteq> {}\""], ["proof (prove)\nusing this:\n  \\<nexists>a l.\n     a \\<noteq> 0 \\<and>\n     l = 0 \\<and>\n     [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] =\n     pCons a l \\<Longrightarrow>\n  \\<exists>z. poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] z = 0\n\ngoal (1 subgoal):\n 1. {x. poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] x =\n        0} \\<noteq>\n    {}", "by auto"], ["proof (state)\nthis:\n  {x. poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] x = 0} \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "with croots"], ["proof (chain)\npicking this:\n  set (Cubic_Polynomials.croots3\n        [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:]) =\n  {x. poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] x = 0}\n  {x. poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] x = 0} \\<noteq>\n  {}", "have \"croots3 ?poly \\<noteq> []\""], ["proof (prove)\nusing this:\n  set (Cubic_Polynomials.croots3\n        [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:]) =\n  {x. poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] x = 0}\n  {x. poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] x = 0} \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. Cubic_Polynomials.croots3\n     [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] \\<noteq>\n    []", "by auto"], ["proof (state)\nthis:\n  Cubic_Polynomials.croots3\n   [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] \\<noteq>\n  []\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "then"], ["proof (chain)\npicking this:\n  Cubic_Polynomials.croots3\n   [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] \\<noteq>\n  []", "obtain m rest where rts: \"croots3 ?poly = m # rest\""], ["proof (prove)\nusing this:\n  Cubic_Polynomials.croots3\n   [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] \\<noteq>\n  []\n\ngoal (1 subgoal):\n 1. (\\<And>m rest.\n        Cubic_Polynomials.croots3\n         [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] =\n        m # rest \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (cases \"croots3 ?poly\", auto)"], ["proof (state)\nthis:\n  Cubic_Polynomials.croots3\n   [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] =\n  m # rest\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "hence hd: \"hd (croots3 ?poly) = m\""], ["proof (prove)\nusing this:\n  Cubic_Polynomials.croots3\n   [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] =\n  m # rest\n\ngoal (1 subgoal):\n 1. hd (Cubic_Polynomials.croots3\n         [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:]) =\n    m", "by auto"], ["proof (state)\nthis:\n  hd (Cubic_Polynomials.croots3\n       [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:]) =\n  m\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "from croots[unfolded rts]"], ["proof (chain)\npicking this:\n  set (m # rest) =\n  {x. poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] x = 0}", "have \"poly ?poly m = 0\""], ["proof (prove)\nusing this:\n  set (m # rest) =\n  {x. poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] x = 0}\n\ngoal (1 subgoal):\n 1. poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] m = 0", "by auto"], ["proof (state)\nthis:\n  poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] m = 0\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "hence mrt: \"8*m^3 + (8 * p) * m^2 + (2 * p^2 - 8 * r) * m - q^2 = 0\" \n      and m0: \"m \\<noteq> 0\""], ["proof (prove)\nusing this:\n  poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] m = 0\n\ngoal (1 subgoal):\n 1. 8 * m ^ 3 + 8 * p * m\\<^sup>2 + (2 * p\\<^sup>2 - 8 * r) * m -\n    q\\<^sup>2 =\n    0 &&&\n    m \\<noteq> 0", "using q0"], ["proof (prove)\nusing this:\n  poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] m = 0\n  q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 8 * m ^ 3 + 8 * p * m\\<^sup>2 + (2 * p\\<^sup>2 - 8 * r) * m -\n    q\\<^sup>2 =\n    0 &&&\n    m \\<noteq> 0", "by (auto simp: powers)"], ["proof (state)\nthis:\n  8 * m ^ 3 + 8 * p * m\\<^sup>2 + (2 * p\\<^sup>2 - 8 * r) * m - q\\<^sup>2 =\n  0\n  m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "define b1 where \"b1 = p / 2 + m - q / (2 * csqrt (2 * m))\""], ["proof (state)\nthis:\n  b1 = p / 2 + m - q / (2 * csqrt (2 * m))\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "define b2 where \"b2 = p / 2 + m + q / (2 * csqrt (2 * m))\""], ["proof (state)\nthis:\n  b2 = p / 2 + m + q / (2 * csqrt (2 * m))\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "have csqrt: \"csqrt x * csqrt x = x\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. csqrt x * csqrt x = x", "by (metis power2_csqrt power2_eq_square)"], ["proof (state)\nthis:\n  csqrt ?x * csqrt ?x = ?x\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "unfolding solve_depressed_quartic_complex_def id Let_def set_remdups set_append hd"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in> set (croots2\n                   [:p / 2 + m - q / (2 * csqrt (2 * m)), csqrt (2 * m),\n                     1:]) \\<union>\n             set (croots2\n                   [:p / 2 + m + q / (2 * csqrt (2 * m)), - csqrt (2 * m),\n                     1:])) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "unfolding b1_def[symmetric] b2_def[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in> set (croots2 [:b1, csqrt (2 * m), 1:]) \\<union>\n             set (croots2 [:b2, - csqrt (2 * m), 1:])) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "apply (subst depressed_quartic_Ferrari[OF mrt q0 csqrt b1_def b2_def])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in> set (croots2 [:b1, csqrt (2 * m), 1:]) \\<union>\n             set (croots2 [:b2, - csqrt (2 * m), 1:])) =\n    (poly [:b1, csqrt (2 * m), 1:] x = 0 \\<or>\n     poly [:b2, - csqrt (2 * m), 1:] x = 0)", "apply (subst (1 2) croots2[symmetric], auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n  (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (x \\<in> set (solve_depressed_quartic_complex p q r)) =\n  (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The main difference in the real case is that a specific cubic root has to be used, namely\n  a positive one. In the soundness proof we show that such a cubic root always exists.\\<close>"], ["", "definition solve_depressed_quartic_real :: \"real \\<Rightarrow> real \\<Rightarrow> real \\<Rightarrow> real list\" where\n  \"solve_depressed_quartic_real p q r = remdups (if q = 0 then \n     (concat (map (\\<lambda> z. rroots2 [:-z,0,1:]) (rroots2 [:r,p,1:]))) else\n     let cubics = rroots3 [: - (q^2), 2 * p^2 - 8 * r, 8 * p, 8:];\n         m = the (find (\\<lambda> m. m > 0) cubics);  \\<comment> \\<open>select any positive root of the cubic polynomial\\<close>\n         a = sqrt (2 * m); \n         p2m = p / 2 + m;\n         q2a = q / (2 * a);\n         b1 = p2m - q2a;\n         b2 = p2m + q2a\n       in (rroots2 [:b1,a,1:] @ rroots2 [:b2,-a,1:]))\""], ["", "lemma solve_depressed_quartic_real: \"x \\<in> set (solve_depressed_quartic_real p q r) \n  \\<longleftrightarrow> (x^4 + p * x^2 + q * x + r = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "note powers = field_simps power4_eq_xxxx power3_eq_cube power2_eq_square"], ["proof (state)\nthis:\n  ?a + ?b + ?c = ?a + (?b + ?c)\n  ?a + ?b = ?b + ?a\n  ?b + (?a + ?c) = ?a + (?b + ?c)\n  ?a * ?b * ?c = ?a * (?b * ?c)\n  ?a * ?b = ?b * ?a\n  ?b * (?a * ?c) = ?a * (?b * ?c)\n  ?a - ?b - ?c = ?a - (?b + ?c)\n  ?a + (?b - ?c) = ?a + ?b - ?c\n  (?a - ?b = ?c) = (?a = ?c + ?b)\n  (?a = ?c - ?b) = (?a + ?b = ?c)\n  ?a - (?b - ?c) = ?a + ?c - ?b\n  ?a - ?b + ?c = ?a + ?c - ?b\n  (?a - ?b < ?c) = (?a < ?c + ?b)\n  (?a < ?c - ?b) = (?a + ?b < ?c)\n  (?a - ?b \\<le> ?c) = (?a \\<le> ?c + ?b)\n  (?a \\<le> ?c - ?b) = (?a + ?b \\<le> ?c)\n  NO_MATCH (?x div ?y) ?a \\<Longrightarrow>\n  ?a * (?b + ?c) = ?a * ?b + ?a * ?c\n  NO_MATCH (?x div ?y) ?c \\<Longrightarrow>\n  (?a + ?b) * ?c = ?a * ?c + ?b * ?c\n  NO_MATCH (?x div ?y) ?c \\<Longrightarrow>\n  (?a - ?b) * ?c = ?a * ?c - ?b * ?c\n  NO_MATCH (?x div ?y) ?a \\<Longrightarrow>\n  ?a * (?b - ?c) = ?a * ?b - ?a * ?c\n  inverse ?a = (1::?'a) / ?a\n  ?c \\<noteq> (0::?'a) \\<Longrightarrow> (?a = ?b / ?c) = (?a * ?c = ?b)\n  ?c \\<noteq> (0::?'a) \\<Longrightarrow> (?b / ?c = ?a) = (?b = ?a * ?c)\n  ?b \\<noteq> (0::?'a) \\<Longrightarrow>\n  (- (?a / ?b) = ?c) = (- ?a = ?c * ?b)\n  ?b \\<noteq> (0::?'a) \\<Longrightarrow>\n  (?c = - (?a / ?b)) = (?c * ?b = - ?a)\n  ?z \\<noteq> (0::?'a) \\<Longrightarrow> ?x + ?y / ?z = (?x * ?z + ?y) / ?z\n  ?z \\<noteq> (0::?'a) \\<Longrightarrow> ?x / ?z + ?y = (?x + ?y * ?z) / ?z\n  ?z \\<noteq> (0::?'a) \\<Longrightarrow> ?x - ?y / ?z = (?x * ?z - ?y) / ?z\n  ?z \\<noteq> (0::?'a) \\<Longrightarrow>\n  - (?x / ?z) + ?y = (- ?x + ?y * ?z) / ?z\n  ?z \\<noteq> (0::?'a) \\<Longrightarrow> ?x / ?z - ?y = (?x - ?y * ?z) / ?z\n  ?z \\<noteq> (0::?'a) \\<Longrightarrow>\n  - (?x / ?z) - ?y = (- ?x - ?y * ?z) / ?z\n  (0::?'a) < ?c \\<Longrightarrow> (?a \\<le> ?b / ?c) = (?a * ?c \\<le> ?b)\n  (0::?'a) < ?c \\<Longrightarrow> (?a < ?b / ?c) = (?a * ?c < ?b)\n  ?c < (0::?'a) \\<Longrightarrow> (?a < ?b / ?c) = (?b < ?a * ?c)\n  ?c < (0::?'a) \\<Longrightarrow> (?a \\<le> ?b / ?c) = (?b \\<le> ?a * ?c)\n  (0::?'a) < ?c \\<Longrightarrow> (?b / ?c \\<le> ?a) = (?b \\<le> ?a * ?c)\n  (0::?'a) < ?c \\<Longrightarrow> (?b / ?c < ?a) = (?b < ?a * ?c)\n  ?c < (0::?'a) \\<Longrightarrow> (?b / ?c \\<le> ?a) = (?a * ?c \\<le> ?b)\n  ?c < (0::?'a) \\<Longrightarrow> (?b / ?c < ?a) = (?a * ?c < ?b)\n  (0::?'a) < ?c \\<Longrightarrow>\n  (?a \\<le> - (?b / ?c)) = (?a * ?c \\<le> - ?b)\n  ?c < (0::?'a) \\<Longrightarrow>\n  (?a \\<le> - (?b / ?c)) = (- ?b \\<le> ?a * ?c)\n  (0::?'a) < ?c \\<Longrightarrow> (?a < - (?b / ?c)) = (?a * ?c < - ?b)\n  ?c < (0::?'a) \\<Longrightarrow> (?a < - (?b / ?c)) = (- ?b < ?a * ?c)\n  (0::?'a) < ?c \\<Longrightarrow> (- (?b / ?c) < ?a) = (- ?b < ?a * ?c)\n  ?c < (0::?'a) \\<Longrightarrow> (- (?b / ?c) < ?a) = (?a * ?c < - ?b)\n  (0::?'a) < ?c \\<Longrightarrow>\n  (- (?b / ?c) \\<le> ?a) = (- ?b \\<le> ?a * ?c)\n  ?c < (0::?'a) \\<Longrightarrow>\n  (- (?b / ?c) \\<le> ?a) = (?a * ?c \\<le> - ?b)\n  (?a * ?b) ^ ?n = ?a ^ ?n * ?b ^ ?n\n  inverse ?a ^ ?n = inverse (?a ^ ?n)\n  ((1::?'a) / ?a) ^ ?n = (1::?'a) / ?a ^ ?n\n  (?a / ?b) ^ ?n = ?a ^ ?n / ?b ^ ?n\n  inverse ?x powi ?n = inverse (?x powi ?n)\n  ((1::?'a) / ?x) powi ?n = (1::?'a) / ?x powi ?n\n  NO_MATCH (?x div ?y) ?c \\<Longrightarrow>\n  (?a + ?b) *\\<^sub>R ?x = ?a *\\<^sub>R ?x + ?b *\\<^sub>R ?x\n  NO_MATCH (?x div ?y) ?a \\<Longrightarrow>\n  ?a *\\<^sub>R (?x + ?y) = ?a *\\<^sub>R ?x + ?a *\\<^sub>R ?y\n  NO_MATCH (?x div ?y) ?c \\<Longrightarrow>\n  (?a - ?b) *\\<^sub>R ?x = ?a *\\<^sub>R ?x - ?b *\\<^sub>R ?x\n  NO_MATCH (?x div ?y) ?a \\<Longrightarrow>\n  ?a *\\<^sub>R (?x - ?y) = ?a *\\<^sub>R ?x - ?a *\\<^sub>R ?y\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  (?a = ?b /\\<^sub>R ?c) = (?c *\\<^sub>R ?a = ?b)\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  (?b /\\<^sub>R ?c = ?a) = (?b = ?c *\\<^sub>R ?a)\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  ?a + ?b /\\<^sub>R ?c = (?c *\\<^sub>R ?a + ?b) /\\<^sub>R ?c\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  ?a /\\<^sub>R ?c + ?b = (?a + ?c *\\<^sub>R ?b) /\\<^sub>R ?c\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  ?a - ?b /\\<^sub>R ?c = (?c *\\<^sub>R ?a - ?b) /\\<^sub>R ?c\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  ?a /\\<^sub>R ?c - ?b = (?a - ?c *\\<^sub>R ?b) /\\<^sub>R ?c\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  - (?a /\\<^sub>R ?c) + ?b = (- ?a + ?c *\\<^sub>R ?b) /\\<^sub>R ?c\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  - (?a /\\<^sub>R ?c) - ?b = (- ?a - ?c *\\<^sub>R ?b) /\\<^sub>R ?c\n  0 < ?c \\<Longrightarrow>\n  (?a \\<le> ?b /\\<^sub>R ?c) = (?c *\\<^sub>R ?a \\<le> ?b)\n  0 < ?c \\<Longrightarrow> (?a < ?b /\\<^sub>R ?c) = (?c *\\<^sub>R ?a < ?b)\n  0 < ?c \\<Longrightarrow>\n  (?b /\\<^sub>R ?c \\<le> ?a) = (?b \\<le> ?c *\\<^sub>R ?a)\n  0 < ?c \\<Longrightarrow> (?b /\\<^sub>R ?c < ?a) = (?b < ?c *\\<^sub>R ?a)\n  0 < ?c \\<Longrightarrow>\n  (?a \\<le> - (?b /\\<^sub>R ?c)) = (?c *\\<^sub>R ?a \\<le> - ?b)\n  0 < ?c \\<Longrightarrow>\n  (?a < - (?b /\\<^sub>R ?c)) = (?c *\\<^sub>R ?a < - ?b)\n  0 < ?c \\<Longrightarrow>\n  (- (?b /\\<^sub>R ?c) \\<le> ?a) = (- ?b \\<le> ?c *\\<^sub>R ?a)\n  0 < ?c \\<Longrightarrow>\n  (- (?b /\\<^sub>R ?c) < ?a) = (- ?b < ?c *\\<^sub>R ?a)\n  ?c < 0 \\<Longrightarrow>\n  (?a \\<le> ?b /\\<^sub>R ?c) = (?b \\<le> ?c *\\<^sub>R ?a)\n  ?c < 0 \\<Longrightarrow> (?a < ?b /\\<^sub>R ?c) = (?b < ?c *\\<^sub>R ?a)\n  ?c < 0 \\<Longrightarrow>\n  (?b /\\<^sub>R ?c \\<le> ?a) = (?c *\\<^sub>R ?a \\<le> ?b)\n  ?c < 0 \\<Longrightarrow> (?b /\\<^sub>R ?c < ?a) = (?c *\\<^sub>R ?a < ?b)\n  ?c < 0 \\<Longrightarrow>\n  (?a \\<le> - (?b /\\<^sub>R ?c)) = (- ?b \\<le> ?c *\\<^sub>R ?a)\n  ?c < 0 \\<Longrightarrow>\n  (?a < - (?b /\\<^sub>R ?c)) = (- ?b < ?c *\\<^sub>R ?a)\n  ?c < 0 \\<Longrightarrow>\n  (- (?b /\\<^sub>R ?c) \\<le> ?a) = (?c *\\<^sub>R ?a \\<le> - ?b)\n  ?c < 0 \\<Longrightarrow>\n  (- (?b /\\<^sub>R ?c) < ?a) = (?c *\\<^sub>R ?a < - ?b)\n  ?x ^ 4 = ?x * ?x * ?x * ?x\n  ?a ^ 3 = ?a * ?a * ?a\n  ?a\\<^sup>2 = ?a * ?a\n\ngoal (1 subgoal):\n 1. (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "proof (cases \"q = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)\n 2. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "case True"], ["proof (state)\nthis:\n  q = 0\n\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)\n 2. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "have sqrt: \"z = x^2 \\<longleftrightarrow> (x \\<in> set (rroots2 [:-z,0,1:]))\" for z"], ["proof (prove)\ngoal (1 subgoal):\n 1. (z = x\\<^sup>2) = (x \\<in> set (rroots2 [:- z, 0, 1:]))", "by (subst rroots2[symmetric], auto simp: powers)"], ["proof (state)\nthis:\n  (?z = x\\<^sup>2) = (x \\<in> set (rroots2 [:- ?z, 0, 1:]))\n\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)\n 2. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "have \"(x ^ 4 + p * x\\<^sup>2 + q * x + r = 0) \\<longleftrightarrow> (x ^ 4 + p * x\\<^sup>2 + r = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0) =\n    (x ^ 4 + p * x\\<^sup>2 + r = 0)", "unfolding True"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x ^ 4 + p * x\\<^sup>2 + 0 * x + r = 0) =\n    (x ^ 4 + p * x\\<^sup>2 + r = 0)", "by simp"], ["proof (state)\nthis:\n  (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0) = (x ^ 4 + p * x\\<^sup>2 + r = 0)\n\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)\n 2. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "also"], ["proof (state)\nthis:\n  (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0) = (x ^ 4 + p * x\\<^sup>2 + r = 0)\n\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)\n 2. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "have \"\\<dots> \\<longleftrightarrow> (\\<exists>z. z\\<^sup>2 + p * z + r = 0 \\<and> z = x\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x ^ 4 + p * x\\<^sup>2 + r = 0) =\n    (\\<exists>z. z\\<^sup>2 + p * z + r = 0 \\<and> z = x\\<^sup>2)", "unfolding biquadratic_solution"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>z. z\\<^sup>2 + p * z + r = 0 \\<and> z = x\\<^sup>2) =\n    (\\<exists>z. z\\<^sup>2 + p * z + r = 0 \\<and> z = x\\<^sup>2)", "by simp"], ["proof (state)\nthis:\n  (x ^ 4 + p * x\\<^sup>2 + r = 0) =\n  (\\<exists>z. z\\<^sup>2 + p * z + r = 0 \\<and> z = x\\<^sup>2)\n\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)\n 2. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "also"], ["proof (state)\nthis:\n  (x ^ 4 + p * x\\<^sup>2 + r = 0) =\n  (\\<exists>z. z\\<^sup>2 + p * z + r = 0 \\<and> z = x\\<^sup>2)\n\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)\n 2. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "have \"\\<dots> \\<longleftrightarrow> (\\<exists> z. poly [:r,p,1:] z = 0 \\<and> z = x^2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>z. z\\<^sup>2 + p * z + r = 0 \\<and> z = x\\<^sup>2) =\n    (\\<exists>z. poly [:r, p, 1:] z = 0 \\<and> z = x\\<^sup>2)", "by (simp add: powers)"], ["proof (state)\nthis:\n  (\\<exists>z. z\\<^sup>2 + p * z + r = 0 \\<and> z = x\\<^sup>2) =\n  (\\<exists>z. poly [:r, p, 1:] z = 0 \\<and> z = x\\<^sup>2)\n\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)\n 2. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "also"], ["proof (state)\nthis:\n  (\\<exists>z. z\\<^sup>2 + p * z + r = 0 \\<and> z = x\\<^sup>2) =\n  (\\<exists>z. poly [:r, p, 1:] z = 0 \\<and> z = x\\<^sup>2)\n\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)\n 2. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "have \"\\<dots> \\<longleftrightarrow> (\\<exists> z \\<in> set (rroots2 [:r,p,1:]). z = x^2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>z. poly [:r, p, 1:] z = 0 \\<and> z = x\\<^sup>2) =\n    (\\<exists>z\\<in>set (rroots2 [:r, p, 1:]). z = x\\<^sup>2)", "by (subst rroots2[symmetric], auto)"], ["proof (state)\nthis:\n  (\\<exists>z. poly [:r, p, 1:] z = 0 \\<and> z = x\\<^sup>2) =\n  (\\<exists>z\\<in>set (rroots2 [:r, p, 1:]). z = x\\<^sup>2)\n\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)\n 2. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "also"], ["proof (state)\nthis:\n  (\\<exists>z. poly [:r, p, 1:] z = 0 \\<and> z = x\\<^sup>2) =\n  (\\<exists>z\\<in>set (rroots2 [:r, p, 1:]). z = x\\<^sup>2)\n\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)\n 2. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "have \"\\<dots> \\<longleftrightarrow> (\\<exists> z \\<in> set (rroots2 [:r,p,1:]). x \\<in> set (rroots2 [:-z,0,1:]))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>z\\<in>set (rroots2 [:r, p, 1:]). z = x\\<^sup>2) =\n    (\\<exists>z\\<in>set (rroots2 [:r, p, 1:]).\n        x \\<in> set (rroots2 [:- z, 0, 1:]))", "unfolding sqrt"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>z\\<in>set (rroots2 [:r, p, 1:]).\n        x \\<in> set (rroots2 [:- z, 0, 1:])) =\n    (\\<exists>z\\<in>set (rroots2 [:r, p, 1:]).\n        x \\<in> set (rroots2 [:- z, 0, 1:]))", ".."], ["proof (state)\nthis:\n  (\\<exists>z\\<in>set (rroots2 [:r, p, 1:]). z = x\\<^sup>2) =\n  (\\<exists>z\\<in>set (rroots2 [:r, p, 1:]).\n      x \\<in> set (rroots2 [:- z, 0, 1:]))\n\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)\n 2. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "also"], ["proof (state)\nthis:\n  (\\<exists>z\\<in>set (rroots2 [:r, p, 1:]). z = x\\<^sup>2) =\n  (\\<exists>z\\<in>set (rroots2 [:r, p, 1:]).\n      x \\<in> set (rroots2 [:- z, 0, 1:]))\n\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)\n 2. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "have \"\\<dots> \\<longleftrightarrow> (x \\<in> set (solve_depressed_quartic_real p q r))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>z\\<in>set (rroots2 [:r, p, 1:]).\n        x \\<in> set (rroots2 [:- z, 0, 1:])) =\n    (x \\<in> set (solve_depressed_quartic_real p q r))", "unfolding solve_depressed_quartic_real_def id"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>z\\<in>set (rroots2 [:r, p, 1:]).\n        x \\<in> set (rroots2 [:- z, 0, 1:])) =\n    (x \\<in> set (remdups\n                   (if q = 0\n                    then concat\n                          (map (\\<lambda>z. rroots2 [:- z, 0, 1:])\n                            (rroots2 [:r, p, 1:]))\n                    else let cubics =\n                               rroots3\n                                [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p,\n                                  8:];\n                             m = the (find ((<) 0) cubics);\n                             a = sqrt (2 * m); p2m = p / 2 + m;\n                             q2a = q / (2 * a); b1 = p2m - q2a;\n                             b2 = p2m + q2a\n                         in rroots2 [:b1, a, 1:] @ rroots2 [:b2, - a, 1:])))", "unfolding True Let_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>z\\<in>set (rroots2 [:r, p, 1:]).\n        x \\<in> set (rroots2 [:- z, 0, 1:])) =\n    (x \\<in> set (remdups\n                   (if 0 = 0\n                    then concat\n                          (map (\\<lambda>z. rroots2 [:- z, 0, 1:])\n                            (rroots2 [:r, p, 1:]))\n                    else rroots2\n                          [:p / 2 +\n                            the (find ((<) 0)\n                                  (rroots3\n                                    [:- 0\\<^sup>2, 2 * p\\<^sup>2 - 8 * r,\n8 * p, 8:])) -\n                            0 /\n                            (2 *\n                             sqrt\n                              (2 *\n                               the (find ((<) 0)\n                                     (rroots3\n [:- 0\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:])))),\n                            sqrt\n                             (2 *\n                              the (find ((<) 0)\n                                    (rroots3\n[:- 0\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:]))),\n                            1:] @\n                         rroots2\n                          [:p / 2 +\n                            the (find ((<) 0)\n                                  (rroots3\n                                    [:- 0\\<^sup>2, 2 * p\\<^sup>2 - 8 * r,\n8 * p, 8:])) +\n                            0 /\n                            (2 *\n                             sqrt\n                              (2 *\n                               the (find ((<) 0)\n                                     (rroots3\n [:- 0\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:])))),\n                            - sqrt\n                               (2 *\n                                the (find ((<) 0)\n(rroots3 [:- 0\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:]))),\n                            1:])))", "by auto"], ["proof (state)\nthis:\n  (\\<exists>z\\<in>set (rroots2 [:r, p, 1:]).\n      x \\<in> set (rroots2 [:- z, 0, 1:])) =\n  (x \\<in> set (solve_depressed_quartic_real p q r))\n\ngoal (2 subgoals):\n 1. q = 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)\n 2. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "finally"], ["proof (chain)\npicking this:\n  (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0) =\n  (x \\<in> set (solve_depressed_quartic_real p q r))", "show ?thesis"], ["proof (prove)\nusing this:\n  (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0) =\n  (x \\<in> set (solve_depressed_quartic_real p q r))\n\ngoal (1 subgoal):\n 1. (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", ".."], ["proof (state)\nthis:\n  (x \\<in> set (solve_depressed_quartic_real p q r)) =\n  (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "case q0: False"], ["proof (state)\nthis:\n  q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "hence id: \"(if q = 0 then x else y) = y\" for x y :: \"real list\""], ["proof (prove)\nusing this:\n  q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (if q = 0 then x else y) = y", "by auto"], ["proof (state)\nthis:\n  (if q = 0 then ?x else ?y) = ?y\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "note powers = field_simps power4_eq_xxxx power3_eq_cube power2_eq_square"], ["proof (state)\nthis:\n  ?a + ?b + ?c = ?a + (?b + ?c)\n  ?a + ?b = ?b + ?a\n  ?b + (?a + ?c) = ?a + (?b + ?c)\n  ?a * ?b * ?c = ?a * (?b * ?c)\n  ?a * ?b = ?b * ?a\n  ?b * (?a * ?c) = ?a * (?b * ?c)\n  ?a - ?b - ?c = ?a - (?b + ?c)\n  ?a + (?b - ?c) = ?a + ?b - ?c\n  (?a - ?b = ?c) = (?a = ?c + ?b)\n  (?a = ?c - ?b) = (?a + ?b = ?c)\n  ?a - (?b - ?c) = ?a + ?c - ?b\n  ?a - ?b + ?c = ?a + ?c - ?b\n  (?a - ?b < ?c) = (?a < ?c + ?b)\n  (?a < ?c - ?b) = (?a + ?b < ?c)\n  (?a - ?b \\<le> ?c) = (?a \\<le> ?c + ?b)\n  (?a \\<le> ?c - ?b) = (?a + ?b \\<le> ?c)\n  NO_MATCH (?x div ?y) ?a \\<Longrightarrow>\n  ?a * (?b + ?c) = ?a * ?b + ?a * ?c\n  NO_MATCH (?x div ?y) ?c \\<Longrightarrow>\n  (?a + ?b) * ?c = ?a * ?c + ?b * ?c\n  NO_MATCH (?x div ?y) ?c \\<Longrightarrow>\n  (?a - ?b) * ?c = ?a * ?c - ?b * ?c\n  NO_MATCH (?x div ?y) ?a \\<Longrightarrow>\n  ?a * (?b - ?c) = ?a * ?b - ?a * ?c\n  inverse ?a = (1::?'a) / ?a\n  ?c \\<noteq> (0::?'a) \\<Longrightarrow> (?a = ?b / ?c) = (?a * ?c = ?b)\n  ?c \\<noteq> (0::?'a) \\<Longrightarrow> (?b / ?c = ?a) = (?b = ?a * ?c)\n  ?b \\<noteq> (0::?'a) \\<Longrightarrow>\n  (- (?a / ?b) = ?c) = (- ?a = ?c * ?b)\n  ?b \\<noteq> (0::?'a) \\<Longrightarrow>\n  (?c = - (?a / ?b)) = (?c * ?b = - ?a)\n  ?z \\<noteq> (0::?'a) \\<Longrightarrow> ?x + ?y / ?z = (?x * ?z + ?y) / ?z\n  ?z \\<noteq> (0::?'a) \\<Longrightarrow> ?x / ?z + ?y = (?x + ?y * ?z) / ?z\n  ?z \\<noteq> (0::?'a) \\<Longrightarrow> ?x - ?y / ?z = (?x * ?z - ?y) / ?z\n  ?z \\<noteq> (0::?'a) \\<Longrightarrow>\n  - (?x / ?z) + ?y = (- ?x + ?y * ?z) / ?z\n  ?z \\<noteq> (0::?'a) \\<Longrightarrow> ?x / ?z - ?y = (?x - ?y * ?z) / ?z\n  ?z \\<noteq> (0::?'a) \\<Longrightarrow>\n  - (?x / ?z) - ?y = (- ?x - ?y * ?z) / ?z\n  (0::?'a) < ?c \\<Longrightarrow> (?a \\<le> ?b / ?c) = (?a * ?c \\<le> ?b)\n  (0::?'a) < ?c \\<Longrightarrow> (?a < ?b / ?c) = (?a * ?c < ?b)\n  ?c < (0::?'a) \\<Longrightarrow> (?a < ?b / ?c) = (?b < ?a * ?c)\n  ?c < (0::?'a) \\<Longrightarrow> (?a \\<le> ?b / ?c) = (?b \\<le> ?a * ?c)\n  (0::?'a) < ?c \\<Longrightarrow> (?b / ?c \\<le> ?a) = (?b \\<le> ?a * ?c)\n  (0::?'a) < ?c \\<Longrightarrow> (?b / ?c < ?a) = (?b < ?a * ?c)\n  ?c < (0::?'a) \\<Longrightarrow> (?b / ?c \\<le> ?a) = (?a * ?c \\<le> ?b)\n  ?c < (0::?'a) \\<Longrightarrow> (?b / ?c < ?a) = (?a * ?c < ?b)\n  (0::?'a) < ?c \\<Longrightarrow>\n  (?a \\<le> - (?b / ?c)) = (?a * ?c \\<le> - ?b)\n  ?c < (0::?'a) \\<Longrightarrow>\n  (?a \\<le> - (?b / ?c)) = (- ?b \\<le> ?a * ?c)\n  (0::?'a) < ?c \\<Longrightarrow> (?a < - (?b / ?c)) = (?a * ?c < - ?b)\n  ?c < (0::?'a) \\<Longrightarrow> (?a < - (?b / ?c)) = (- ?b < ?a * ?c)\n  (0::?'a) < ?c \\<Longrightarrow> (- (?b / ?c) < ?a) = (- ?b < ?a * ?c)\n  ?c < (0::?'a) \\<Longrightarrow> (- (?b / ?c) < ?a) = (?a * ?c < - ?b)\n  (0::?'a) < ?c \\<Longrightarrow>\n  (- (?b / ?c) \\<le> ?a) = (- ?b \\<le> ?a * ?c)\n  ?c < (0::?'a) \\<Longrightarrow>\n  (- (?b / ?c) \\<le> ?a) = (?a * ?c \\<le> - ?b)\n  (?a * ?b) ^ ?n = ?a ^ ?n * ?b ^ ?n\n  inverse ?a ^ ?n = inverse (?a ^ ?n)\n  ((1::?'a) / ?a) ^ ?n = (1::?'a) / ?a ^ ?n\n  (?a / ?b) ^ ?n = ?a ^ ?n / ?b ^ ?n\n  inverse ?x powi ?n = inverse (?x powi ?n)\n  ((1::?'a) / ?x) powi ?n = (1::?'a) / ?x powi ?n\n  NO_MATCH (?x div ?y) ?c \\<Longrightarrow>\n  (?a + ?b) *\\<^sub>R ?x = ?a *\\<^sub>R ?x + ?b *\\<^sub>R ?x\n  NO_MATCH (?x div ?y) ?a \\<Longrightarrow>\n  ?a *\\<^sub>R (?x + ?y) = ?a *\\<^sub>R ?x + ?a *\\<^sub>R ?y\n  NO_MATCH (?x div ?y) ?c \\<Longrightarrow>\n  (?a - ?b) *\\<^sub>R ?x = ?a *\\<^sub>R ?x - ?b *\\<^sub>R ?x\n  NO_MATCH (?x div ?y) ?a \\<Longrightarrow>\n  ?a *\\<^sub>R (?x - ?y) = ?a *\\<^sub>R ?x - ?a *\\<^sub>R ?y\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  (?a = ?b /\\<^sub>R ?c) = (?c *\\<^sub>R ?a = ?b)\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  (?b /\\<^sub>R ?c = ?a) = (?b = ?c *\\<^sub>R ?a)\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  ?a + ?b /\\<^sub>R ?c = (?c *\\<^sub>R ?a + ?b) /\\<^sub>R ?c\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  ?a /\\<^sub>R ?c + ?b = (?a + ?c *\\<^sub>R ?b) /\\<^sub>R ?c\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  ?a - ?b /\\<^sub>R ?c = (?c *\\<^sub>R ?a - ?b) /\\<^sub>R ?c\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  ?a /\\<^sub>R ?c - ?b = (?a - ?c *\\<^sub>R ?b) /\\<^sub>R ?c\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  - (?a /\\<^sub>R ?c) + ?b = (- ?a + ?c *\\<^sub>R ?b) /\\<^sub>R ?c\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  - (?a /\\<^sub>R ?c) - ?b = (- ?a - ?c *\\<^sub>R ?b) /\\<^sub>R ?c\n  0 < ?c \\<Longrightarrow>\n  (?a \\<le> ?b /\\<^sub>R ?c) = (?c *\\<^sub>R ?a \\<le> ?b)\n  0 < ?c \\<Longrightarrow> (?a < ?b /\\<^sub>R ?c) = (?c *\\<^sub>R ?a < ?b)\n  0 < ?c \\<Longrightarrow>\n  (?b /\\<^sub>R ?c \\<le> ?a) = (?b \\<le> ?c *\\<^sub>R ?a)\n  0 < ?c \\<Longrightarrow> (?b /\\<^sub>R ?c < ?a) = (?b < ?c *\\<^sub>R ?a)\n  0 < ?c \\<Longrightarrow>\n  (?a \\<le> - (?b /\\<^sub>R ?c)) = (?c *\\<^sub>R ?a \\<le> - ?b)\n  0 < ?c \\<Longrightarrow>\n  (?a < - (?b /\\<^sub>R ?c)) = (?c *\\<^sub>R ?a < - ?b)\n  0 < ?c \\<Longrightarrow>\n  (- (?b /\\<^sub>R ?c) \\<le> ?a) = (- ?b \\<le> ?c *\\<^sub>R ?a)\n  0 < ?c \\<Longrightarrow>\n  (- (?b /\\<^sub>R ?c) < ?a) = (- ?b < ?c *\\<^sub>R ?a)\n  ?c < 0 \\<Longrightarrow>\n  (?a \\<le> ?b /\\<^sub>R ?c) = (?b \\<le> ?c *\\<^sub>R ?a)\n  ?c < 0 \\<Longrightarrow> (?a < ?b /\\<^sub>R ?c) = (?b < ?c *\\<^sub>R ?a)\n  ?c < 0 \\<Longrightarrow>\n  (?b /\\<^sub>R ?c \\<le> ?a) = (?c *\\<^sub>R ?a \\<le> ?b)\n  ?c < 0 \\<Longrightarrow> (?b /\\<^sub>R ?c < ?a) = (?c *\\<^sub>R ?a < ?b)\n  ?c < 0 \\<Longrightarrow>\n  (?a \\<le> - (?b /\\<^sub>R ?c)) = (- ?b \\<le> ?c *\\<^sub>R ?a)\n  ?c < 0 \\<Longrightarrow>\n  (?a < - (?b /\\<^sub>R ?c)) = (- ?b < ?c *\\<^sub>R ?a)\n  ?c < 0 \\<Longrightarrow>\n  (- (?b /\\<^sub>R ?c) \\<le> ?a) = (?c *\\<^sub>R ?a \\<le> - ?b)\n  ?c < 0 \\<Longrightarrow>\n  (- (?b /\\<^sub>R ?c) < ?a) = (?c *\\<^sub>R ?a < - ?b)\n  ?x ^ 4 = ?x * ?x * ?x * ?x\n  ?a ^ 3 = ?a * ?a * ?a\n  ?a\\<^sup>2 = ?a * ?a\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "let ?poly = \"[:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:]\""], ["proof (state)\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "define cubics where \"cubics = rroots3 ?poly\""], ["proof (state)\nthis:\n  cubics = rroots3 [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:]\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "from rroots3[of ?poly, folded cubics_def]"], ["proof (chain)\npicking this:\n  degree [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] =\n  3 \\<Longrightarrow>\n  set cubics =\n  {x. poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] x = 0}", "have rroots: \"set cubics = {x. poly ?poly x = 0}\""], ["proof (prove)\nusing this:\n  degree [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] =\n  3 \\<Longrightarrow>\n  set cubics =\n  {x. poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] x = 0}\n\ngoal (1 subgoal):\n 1. set cubics =\n    {x. poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] x = 0}", "by auto"], ["proof (state)\nthis:\n  set cubics =\n  {x. poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] x = 0}\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "from odd_degree_imp_real_root[of ?poly]"], ["proof (chain)\npicking this:\n  odd (degree\n        [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:]) \\<Longrightarrow>\n  \\<exists>x. poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] x = 0", "have \"{x. poly ?poly x = 0} \\<noteq> {}\""], ["proof (prove)\nusing this:\n  odd (degree\n        [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:]) \\<Longrightarrow>\n  \\<exists>x. poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] x = 0\n\ngoal (1 subgoal):\n 1. {x. poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] x =\n        0} \\<noteq>\n    {}", "by auto"], ["proof (state)\nthis:\n  {x. poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] x = 0} \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "with rroots"], ["proof (chain)\npicking this:\n  set cubics =\n  {x. poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] x = 0}\n  {x. poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] x = 0} \\<noteq>\n  {}", "have \"cubics \\<noteq> []\""], ["proof (prove)\nusing this:\n  set cubics =\n  {x. poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] x = 0}\n  {x. poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] x = 0} \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. cubics \\<noteq> []", "by auto"], ["proof (state)\nthis:\n  cubics \\<noteq> []\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "have \"\\<exists> m. m \\<in> set cubics \\<and> m > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>m. m \\<in> set cubics \\<and> 0 < m", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<nexists>m. m \\<in> set cubics \\<and> 0 < m \\<Longrightarrow> False", "assume \"\\<not> ?thesis\""], ["proof (state)\nthis:\n  \\<nexists>m. m \\<in> set cubics \\<and> 0 < m\n\ngoal (1 subgoal):\n 1. \\<nexists>m. m \\<in> set cubics \\<and> 0 < m \\<Longrightarrow> False", "from this[unfolded rroots]"], ["proof (chain)\npicking this:\n  \\<nexists>m.\n     m \\<in> {x. poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] x =\n                 0} \\<and>\n     0 < m", "have rt: \"poly ?poly m = 0 \\<Longrightarrow> m \\<le> 0\" for m"], ["proof (prove)\nusing this:\n  \\<nexists>m.\n     m \\<in> {x. poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] x =\n                 0} \\<and>\n     0 < m\n\ngoal (1 subgoal):\n 1. poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] m =\n    0 \\<Longrightarrow>\n    m \\<le> 0", "by auto"], ["proof (state)\nthis:\n  poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] ?m =\n  0 \\<Longrightarrow>\n  ?m \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<nexists>m. m \\<in> set cubics \\<and> 0 < m \\<Longrightarrow> False", "have \"poly ?poly 0 = - (q^2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] 0 = - q\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] 0 = - q\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<nexists>m. m \\<in> set cubics \\<and> 0 < m \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] 0 = - q\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<nexists>m. m \\<in> set cubics \\<and> 0 < m \\<Longrightarrow> False", "have \"\\<dots> < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - q\\<^sup>2 < 0", "using q0"], ["proof (prove)\nusing this:\n  q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. - q\\<^sup>2 < 0", "by auto"], ["proof (state)\nthis:\n  - q\\<^sup>2 < 0\n\ngoal (1 subgoal):\n 1. \\<nexists>m. m \\<in> set cubics \\<and> 0 < m \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] 0 < 0", "have lt: \"poly ?poly 0 \\<le> 0\""], ["proof (prove)\nusing this:\n  poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] 0 < 0\n\ngoal (1 subgoal):\n 1. poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] 0 \\<le> 0", "by simp"], ["proof (state)\nthis:\n  poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] 0 \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<nexists>m. m \\<in> set cubics \\<and> 0 < m \\<Longrightarrow> False", "from poly_pinfty_gt_lc[of ?poly]"], ["proof (chain)\npicking this:\n  0 < Polynomial.lead_coeff\n       [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] \\<Longrightarrow>\n  \\<exists>n.\n     \\<forall>x\\<ge>n.\n        Polynomial.lead_coeff\n         [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:]\n        \\<le> poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] x", "obtain n0 where \"\\<And> n. n \\<ge> n0 \\<Longrightarrow> 8 \\<le> poly ?poly n\""], ["proof (prove)\nusing this:\n  0 < Polynomial.lead_coeff\n       [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] \\<Longrightarrow>\n  \\<exists>n.\n     \\<forall>x\\<ge>n.\n        Polynomial.lead_coeff\n         [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:]\n        \\<le> poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] x\n\ngoal (1 subgoal):\n 1. (\\<And>n0.\n        (\\<And>n.\n            n0 \\<le> n \\<Longrightarrow>\n            8 \\<le> poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:]\n                     n) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  n0 \\<le> ?n \\<Longrightarrow>\n  8 \\<le> poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] ?n\n\ngoal (1 subgoal):\n 1. \\<nexists>m. m \\<in> set cubics \\<and> 0 < m \\<Longrightarrow> False", "from this[of \"max n0 0\"]"], ["proof (chain)\npicking this:\n  n0 \\<le> max n0 0 \\<Longrightarrow>\n  8 \\<le> poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] (max n0 0)", "have \"poly ?poly (max n0 0) \\<ge> 0\""], ["proof (prove)\nusing this:\n  n0 \\<le> max n0 0 \\<Longrightarrow>\n  8 \\<le> poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] (max n0 0)\n\ngoal (1 subgoal):\n 1. 0 \\<le> poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] (max n0 0)", "by auto"], ["proof (state)\nthis:\n  0 \\<le> poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] (max n0 0)\n\ngoal (1 subgoal):\n 1. \\<nexists>m. m \\<in> set cubics \\<and> 0 < m \\<Longrightarrow> False", "from IVT[of \"poly ?poly\", OF lt this]"], ["proof (chain)\npicking this:\n  \\<lbrakk>0 \\<le> max n0 0;\n   \\<forall>x.\n      0 \\<le> x \\<and> x \\<le> max n0 0 \\<longrightarrow>\n      isCont (poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:])\n       x\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x\\<ge>0.\n                       x \\<le> max n0 0 \\<and>\n                       poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:]\n                        x =\n                       0", "obtain m where \"m \\<ge> 0\" and poly: \"poly ?poly m = 0\""], ["proof (prove)\nusing this:\n  \\<lbrakk>0 \\<le> max n0 0;\n   \\<forall>x.\n      0 \\<le> x \\<and> x \\<le> max n0 0 \\<longrightarrow>\n      isCont (poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:])\n       x\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x\\<ge>0.\n                       x \\<le> max n0 0 \\<and>\n                       poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:]\n                        x =\n                       0\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>0 \\<le> m;\n         poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] m =\n         0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 \\<le> m\n  poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] m = 0\n\ngoal (1 subgoal):\n 1. \\<nexists>m. m \\<in> set cubics \\<and> 0 < m \\<Longrightarrow> False", "from rt[OF this(2)] this(1)"], ["proof (chain)\npicking this:\n  m \\<le> 0\n  0 \\<le> m", "have \"m = 0\""], ["proof (prove)\nusing this:\n  m \\<le> 0\n  0 \\<le> m\n\ngoal (1 subgoal):\n 1. m = 0", "by auto"], ["proof (state)\nthis:\n  m = 0\n\ngoal (1 subgoal):\n 1. \\<nexists>m. m \\<in> set cubics \\<and> 0 < m \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  m = 0\n\ngoal (1 subgoal):\n 1. False", "using poly q0"], ["proof (prove)\nusing this:\n  m = 0\n  poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] m = 0\n  q \\<noteq> 0\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>m. m \\<in> set cubics \\<and> 0 < m\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "hence \"find (\\<lambda> m. m > 0) cubics \\<noteq> None\""], ["proof (prove)\nusing this:\n  \\<exists>m. m \\<in> set cubics \\<and> 0 < m\n\ngoal (1 subgoal):\n 1. find ((<) 0) cubics \\<noteq> None", "unfolding find_None_iff"], ["proof (prove)\nusing this:\n  \\<exists>m. m \\<in> set cubics \\<and> 0 < m\n\ngoal (1 subgoal):\n 1. \\<not> (\\<nexists>x. x \\<in> set cubics \\<and> 0 < x)", "by auto"], ["proof (state)\nthis:\n  find ((<) 0) cubics \\<noteq> None\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "then"], ["proof (chain)\npicking this:\n  find ((<) 0) cubics \\<noteq> None", "obtain m where find: \"find (\\<lambda> m. m > 0) cubics = Some m\""], ["proof (prove)\nusing this:\n  find ((<) 0) cubics \\<noteq> None\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        find ((<) 0) cubics = Some m \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  find ((<) 0) cubics = Some m\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "from find_Some_D[OF this]"], ["proof (chain)\npicking this:\n  m \\<in> set cubics \\<and> 0 < m", "have m: \"m \\<in> set cubics\" and m_0: \"m > 0\""], ["proof (prove)\nusing this:\n  m \\<in> set cubics \\<and> 0 < m\n\ngoal (1 subgoal):\n 1. m \\<in> set cubics &&& 0 < m", "by auto"], ["proof (state)\nthis:\n  m \\<in> set cubics\n  0 < m\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "with rroots"], ["proof (chain)\npicking this:\n  set cubics =\n  {x. poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] x = 0}\n  m \\<in> set cubics\n  0 < m", "have \"poly ?poly m = 0\""], ["proof (prove)\nusing this:\n  set cubics =\n  {x. poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] x = 0}\n  m \\<in> set cubics\n  0 < m\n\ngoal (1 subgoal):\n 1. poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] m = 0", "by auto"], ["proof (state)\nthis:\n  poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] m = 0\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "hence mrt: \"8*m^3 + (8 * p) * m^2 + (2 * p^2 - 8 * r) * m - q^2 = 0\""], ["proof (prove)\nusing this:\n  poly [:- q\\<^sup>2, 2 * p\\<^sup>2 - 8 * r, 8 * p, 8:] m = 0\n\ngoal (1 subgoal):\n 1. 8 * m ^ 3 + 8 * p * m\\<^sup>2 + (2 * p\\<^sup>2 - 8 * r) * m -\n    q\\<^sup>2 =\n    0", "by (auto simp: powers)"], ["proof (state)\nthis:\n  8 * m ^ 3 + 8 * p * m\\<^sup>2 + (2 * p\\<^sup>2 - 8 * r) * m - q\\<^sup>2 =\n  0\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "from m_0"], ["proof (chain)\npicking this:\n  0 < m", "have sqrt: \"sqrt (2 * m) * sqrt (2 * m) = 2 * m\""], ["proof (prove)\nusing this:\n  0 < m\n\ngoal (1 subgoal):\n 1. sqrt (2 * m) * sqrt (2 * m) = 2 * m", "by simp"], ["proof (state)\nthis:\n  sqrt (2 * m) * sqrt (2 * m) = 2 * m\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "define b1 where \"b1 = p / 2 + m - q / (2 * sqrt (2 * m))\""], ["proof (state)\nthis:\n  b1 = p / 2 + m - q / (2 * sqrt (2 * m))\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "define b2 where \"b2 = p / 2 + m + q / (2 * sqrt (2 * m))\""], ["proof (state)\nthis:\n  b2 = p / 2 + m + q / (2 * sqrt (2 * m))\n\ngoal (1 subgoal):\n 1. q \\<noteq> 0 \\<Longrightarrow>\n    (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in> set (solve_depressed_quartic_real p q r)) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "unfolding solve_depressed_quartic_real_def id Let_def set_remdups set_append \n        cubics_def[symmetric] find option.sel"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in> set (rroots2\n                   [:p / 2 + m - q / (2 * sqrt (2 * m)), sqrt (2 * m),\n                     1:]) \\<union>\n             set (rroots2\n                   [:p / 2 + m + q / (2 * sqrt (2 * m)), - sqrt (2 * m),\n                     1:])) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "unfolding b1_def[symmetric] b2_def[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in> set (rroots2 [:b1, sqrt (2 * m), 1:]) \\<union>\n             set (rroots2 [:b2, - sqrt (2 * m), 1:])) =\n    (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)", "apply (subst depressed_quartic_Ferrari[OF mrt q0 sqrt b1_def b2_def])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in> set (rroots2 [:b1, sqrt (2 * m), 1:]) \\<union>\n             set (rroots2 [:b2, - sqrt (2 * m), 1:])) =\n    (poly [:b1, sqrt (2 * m), 1:] x = 0 \\<or>\n     poly [:b2, - sqrt (2 * m), 1:] x = 0)", "apply (subst (1 2) rroots2[symmetric], auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (x \\<in> set (solve_depressed_quartic_real p q r)) =\n  (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (x \\<in> set (solve_depressed_quartic_real p q r)) =\n  (x ^ 4 + p * x\\<^sup>2 + q * x + r = 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Combining the various algorithms\\<close>"], ["", "lemma numeral_4_eq_4: \"4 = Suc (Suc (Suc (Suc 0)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 4 = Suc (Suc (Suc (Suc 0)))", "by (simp add: eval_nat_numeral)"], ["", "lemma degree4_coeffs: \"degree p = 4 \\<Longrightarrow>\n  \\<exists> a b c d e. p = [: e, d, c, b, a :] \\<and> a \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. degree p = 4 \\<Longrightarrow>\n    \\<exists>a b c d e. p = [:e, d, c, b, a:] \\<and> a \\<noteq> (0::'a)", "using degree3_coeffs degree_pCons_eq_if nat.inject numeral_3_eq_3 numeral_4_eq_4 pCons_cases zero_neq_numeral"], ["proof (prove)\nusing this:\n  degree ?p = 3 \\<Longrightarrow>\n  \\<exists>a b c d. ?p = [:d, c, b, a:] \\<and> a \\<noteq> (0::?'a)\n  degree (pCons ?a ?p) = (if ?p = 0 then 0 else Suc (degree ?p))\n  (Suc ?x2.0 = Suc ?y2.0) = (?x2.0 = ?y2.0)\n  3 = Suc (Suc (Suc 0))\n  4 = Suc (Suc (Suc (Suc 0)))\n  (\\<And>a q. ?p = pCons a q \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n  (0::?'a) \\<noteq> numeral ?n\n\ngoal (1 subgoal):\n 1. degree p = 4 \\<Longrightarrow>\n    \\<exists>a b c d e. p = [:e, d, c, b, a:] \\<and> a \\<noteq> (0::'a)", "by metis"], ["", "definition roots4_generic :: \"('a :: field_char_0 \\<Rightarrow> 'a \\<Rightarrow> 'a \\<Rightarrow> 'a list) \\<Rightarrow> 'a poly \\<Rightarrow> 'a list\" where\n  \"roots4_generic depressed_solver p = (let \n     cs = coeffs p; \n     cs = coeffs p; \n     a4 = cs ! 4; a3 = cs ! 3; a2 = cs ! 2; a1 = cs ! 1; a0 = cs ! 0;\n     b = a3 / a4;\n     c = a2 / a4;\n     d = a1 / a4;\n     e = a0 / a4;\n     b2 = b * b;\n     b3 = b2 * b;\n     b4 = b3 * b;\n     b4' = b / 4;\n     p = c - 3/8 * b2;\n     q = (b3 - 4*b*c + 8 * d) / 8;\n     r = ( -3 * b4 + 256 * e - 64 * b * d + 16 * b2 * c) / 256;\n     roots = depressed_solver p q r\n     in map (\\<lambda> y. y - b4') roots)\""], ["", "lemma roots4_generic: assumes deg: \"degree p = 4\" \n  and solver: \"\\<And> p q r y. y \\<in> set (depressed_solver p q r) \\<longleftrightarrow> y^4 + p * y^2 + q * y + r = 0\" \n  shows \"set (roots4_generic depressed_solver p) = {x. poly p x = 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (roots4_generic depressed_solver p) = {x. poly p x = (0::'a)}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. set (roots4_generic depressed_solver p) = {x. poly p x = (0::'a)}", "note powers = field_simps power4_eq_xxxx power3_eq_cube power2_eq_square"], ["proof (state)\nthis:\n  ?a + ?b + ?c = ?a + (?b + ?c)\n  ?a + ?b = ?b + ?a\n  ?b + (?a + ?c) = ?a + (?b + ?c)\n  ?a * ?b * ?c = ?a * (?b * ?c)\n  ?a * ?b = ?b * ?a\n  ?b * (?a * ?c) = ?a * (?b * ?c)\n  ?a - ?b - ?c = ?a - (?b + ?c)\n  ?a + (?b - ?c) = ?a + ?b - ?c\n  (?a - ?b = ?c) = (?a = ?c + ?b)\n  (?a = ?c - ?b) = (?a + ?b = ?c)\n  ?a - (?b - ?c) = ?a + ?c - ?b\n  ?a - ?b + ?c = ?a + ?c - ?b\n  (?a - ?b < ?c) = (?a < ?c + ?b)\n  (?a < ?c - ?b) = (?a + ?b < ?c)\n  (?a - ?b \\<le> ?c) = (?a \\<le> ?c + ?b)\n  (?a \\<le> ?c - ?b) = (?a + ?b \\<le> ?c)\n  NO_MATCH (?x div ?y) ?a \\<Longrightarrow>\n  ?a * (?b + ?c) = ?a * ?b + ?a * ?c\n  NO_MATCH (?x div ?y) ?c \\<Longrightarrow>\n  (?a + ?b) * ?c = ?a * ?c + ?b * ?c\n  NO_MATCH (?x div ?y) ?c \\<Longrightarrow>\n  (?a - ?b) * ?c = ?a * ?c - ?b * ?c\n  NO_MATCH (?x div ?y) ?a \\<Longrightarrow>\n  ?a * (?b - ?c) = ?a * ?b - ?a * ?c\n  inverse ?a = (1::?'a) / ?a\n  ?c \\<noteq> (0::?'a) \\<Longrightarrow> (?a = ?b / ?c) = (?a * ?c = ?b)\n  ?c \\<noteq> (0::?'a) \\<Longrightarrow> (?b / ?c = ?a) = (?b = ?a * ?c)\n  ?b \\<noteq> (0::?'a) \\<Longrightarrow>\n  (- (?a / ?b) = ?c) = (- ?a = ?c * ?b)\n  ?b \\<noteq> (0::?'a) \\<Longrightarrow>\n  (?c = - (?a / ?b)) = (?c * ?b = - ?a)\n  ?z \\<noteq> (0::?'a) \\<Longrightarrow> ?x + ?y / ?z = (?x * ?z + ?y) / ?z\n  ?z \\<noteq> (0::?'a) \\<Longrightarrow> ?x / ?z + ?y = (?x + ?y * ?z) / ?z\n  ?z \\<noteq> (0::?'a) \\<Longrightarrow> ?x - ?y / ?z = (?x * ?z - ?y) / ?z\n  ?z \\<noteq> (0::?'a) \\<Longrightarrow>\n  - (?x / ?z) + ?y = (- ?x + ?y * ?z) / ?z\n  ?z \\<noteq> (0::?'a) \\<Longrightarrow> ?x / ?z - ?y = (?x - ?y * ?z) / ?z\n  ?z \\<noteq> (0::?'a) \\<Longrightarrow>\n  - (?x / ?z) - ?y = (- ?x - ?y * ?z) / ?z\n  (0::?'a) < ?c \\<Longrightarrow> (?a \\<le> ?b / ?c) = (?a * ?c \\<le> ?b)\n  (0::?'a) < ?c \\<Longrightarrow> (?a < ?b / ?c) = (?a * ?c < ?b)\n  ?c < (0::?'a) \\<Longrightarrow> (?a < ?b / ?c) = (?b < ?a * ?c)\n  ?c < (0::?'a) \\<Longrightarrow> (?a \\<le> ?b / ?c) = (?b \\<le> ?a * ?c)\n  (0::?'a) < ?c \\<Longrightarrow> (?b / ?c \\<le> ?a) = (?b \\<le> ?a * ?c)\n  (0::?'a) < ?c \\<Longrightarrow> (?b / ?c < ?a) = (?b < ?a * ?c)\n  ?c < (0::?'a) \\<Longrightarrow> (?b / ?c \\<le> ?a) = (?a * ?c \\<le> ?b)\n  ?c < (0::?'a) \\<Longrightarrow> (?b / ?c < ?a) = (?a * ?c < ?b)\n  (0::?'a) < ?c \\<Longrightarrow>\n  (?a \\<le> - (?b / ?c)) = (?a * ?c \\<le> - ?b)\n  ?c < (0::?'a) \\<Longrightarrow>\n  (?a \\<le> - (?b / ?c)) = (- ?b \\<le> ?a * ?c)\n  (0::?'a) < ?c \\<Longrightarrow> (?a < - (?b / ?c)) = (?a * ?c < - ?b)\n  ?c < (0::?'a) \\<Longrightarrow> (?a < - (?b / ?c)) = (- ?b < ?a * ?c)\n  (0::?'a) < ?c \\<Longrightarrow> (- (?b / ?c) < ?a) = (- ?b < ?a * ?c)\n  ?c < (0::?'a) \\<Longrightarrow> (- (?b / ?c) < ?a) = (?a * ?c < - ?b)\n  (0::?'a) < ?c \\<Longrightarrow>\n  (- (?b / ?c) \\<le> ?a) = (- ?b \\<le> ?a * ?c)\n  ?c < (0::?'a) \\<Longrightarrow>\n  (- (?b / ?c) \\<le> ?a) = (?a * ?c \\<le> - ?b)\n  (?a * ?b) ^ ?n = ?a ^ ?n * ?b ^ ?n\n  inverse ?a ^ ?n = inverse (?a ^ ?n)\n  ((1::?'a) / ?a) ^ ?n = (1::?'a) / ?a ^ ?n\n  (?a / ?b) ^ ?n = ?a ^ ?n / ?b ^ ?n\n  inverse ?x powi ?n = inverse (?x powi ?n)\n  ((1::?'a) / ?x) powi ?n = (1::?'a) / ?x powi ?n\n  NO_MATCH (?x div ?y) ?c \\<Longrightarrow>\n  (?a + ?b) *\\<^sub>R ?x = ?a *\\<^sub>R ?x + ?b *\\<^sub>R ?x\n  NO_MATCH (?x div ?y) ?a \\<Longrightarrow>\n  ?a *\\<^sub>R (?x + ?y) = ?a *\\<^sub>R ?x + ?a *\\<^sub>R ?y\n  NO_MATCH (?x div ?y) ?c \\<Longrightarrow>\n  (?a - ?b) *\\<^sub>R ?x = ?a *\\<^sub>R ?x - ?b *\\<^sub>R ?x\n  NO_MATCH (?x div ?y) ?a \\<Longrightarrow>\n  ?a *\\<^sub>R (?x - ?y) = ?a *\\<^sub>R ?x - ?a *\\<^sub>R ?y\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  (?a = ?b /\\<^sub>R ?c) = (?c *\\<^sub>R ?a = ?b)\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  (?b /\\<^sub>R ?c = ?a) = (?b = ?c *\\<^sub>R ?a)\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  ?a + ?b /\\<^sub>R ?c = (?c *\\<^sub>R ?a + ?b) /\\<^sub>R ?c\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  ?a /\\<^sub>R ?c + ?b = (?a + ?c *\\<^sub>R ?b) /\\<^sub>R ?c\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  ?a - ?b /\\<^sub>R ?c = (?c *\\<^sub>R ?a - ?b) /\\<^sub>R ?c\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  ?a /\\<^sub>R ?c - ?b = (?a - ?c *\\<^sub>R ?b) /\\<^sub>R ?c\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  - (?a /\\<^sub>R ?c) + ?b = (- ?a + ?c *\\<^sub>R ?b) /\\<^sub>R ?c\n  ?c \\<noteq> 0 \\<Longrightarrow>\n  - (?a /\\<^sub>R ?c) - ?b = (- ?a - ?c *\\<^sub>R ?b) /\\<^sub>R ?c\n  0 < ?c \\<Longrightarrow>\n  (?a \\<le> ?b /\\<^sub>R ?c) = (?c *\\<^sub>R ?a \\<le> ?b)\n  0 < ?c \\<Longrightarrow> (?a < ?b /\\<^sub>R ?c) = (?c *\\<^sub>R ?a < ?b)\n  0 < ?c \\<Longrightarrow>\n  (?b /\\<^sub>R ?c \\<le> ?a) = (?b \\<le> ?c *\\<^sub>R ?a)\n  0 < ?c \\<Longrightarrow> (?b /\\<^sub>R ?c < ?a) = (?b < ?c *\\<^sub>R ?a)\n  0 < ?c \\<Longrightarrow>\n  (?a \\<le> - (?b /\\<^sub>R ?c)) = (?c *\\<^sub>R ?a \\<le> - ?b)\n  0 < ?c \\<Longrightarrow>\n  (?a < - (?b /\\<^sub>R ?c)) = (?c *\\<^sub>R ?a < - ?b)\n  0 < ?c \\<Longrightarrow>\n  (- (?b /\\<^sub>R ?c) \\<le> ?a) = (- ?b \\<le> ?c *\\<^sub>R ?a)\n  0 < ?c \\<Longrightarrow>\n  (- (?b /\\<^sub>R ?c) < ?a) = (- ?b < ?c *\\<^sub>R ?a)\n  ?c < 0 \\<Longrightarrow>\n  (?a \\<le> ?b /\\<^sub>R ?c) = (?b \\<le> ?c *\\<^sub>R ?a)\n  ?c < 0 \\<Longrightarrow> (?a < ?b /\\<^sub>R ?c) = (?b < ?c *\\<^sub>R ?a)\n  ?c < 0 \\<Longrightarrow>\n  (?b /\\<^sub>R ?c \\<le> ?a) = (?c *\\<^sub>R ?a \\<le> ?b)\n  ?c < 0 \\<Longrightarrow> (?b /\\<^sub>R ?c < ?a) = (?c *\\<^sub>R ?a < ?b)\n  ?c < 0 \\<Longrightarrow>\n  (?a \\<le> - (?b /\\<^sub>R ?c)) = (- ?b \\<le> ?c *\\<^sub>R ?a)\n  ?c < 0 \\<Longrightarrow>\n  (?a < - (?b /\\<^sub>R ?c)) = (- ?b < ?c *\\<^sub>R ?a)\n  ?c < 0 \\<Longrightarrow>\n  (- (?b /\\<^sub>R ?c) \\<le> ?a) = (?c *\\<^sub>R ?a \\<le> - ?b)\n  ?c < 0 \\<Longrightarrow>\n  (- (?b /\\<^sub>R ?c) < ?a) = (?c *\\<^sub>R ?a < - ?b)\n  ?x ^ 4 = ?x * ?x * ?x * ?x\n  ?a ^ 3 = ?a * ?a * ?a\n  ?a\\<^sup>2 = ?a * ?a\n\ngoal (1 subgoal):\n 1. set (roots4_generic depressed_solver p) = {x. poly p x = (0::'a)}", "from degree4_coeffs[OF deg]"], ["proof (chain)\npicking this:\n  \\<exists>a b c d e. p = [:e, d, c, b, a:] \\<and> a \\<noteq> (0::'a)", "obtain a4 a3 a2 a1 a0 where\n    p: \"p = [:a0,a1,a2,a3,a4:]\" and a4: \"a4 \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<exists>a b c d e. p = [:e, d, c, b, a:] \\<and> a \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<And>a0 a1 a2 a3 a4.\n        \\<lbrakk>p = [:a0, a1, a2, a3, a4:]; a4 \\<noteq> (0::'a)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  p = [:a0, a1, a2, a3, a4:]\n  a4 \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. set (roots4_generic depressed_solver p) = {x. poly p x = (0::'a)}", "have coeffs: \"coeffs p ! 4 = a4\" \"coeffs p ! 3 = a3\" \"coeffs p ! 2 = a2\" \"coeffs p ! 1 = a1\" \"coeffs p ! 0 = a0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (coeffs p ! 4 = a4 &&& coeffs p ! 3 = a3) &&&\n    coeffs p ! 2 = a2 &&& coeffs p ! 1 = a1 &&& coeffs p ! 0 = a0", "unfolding p"], ["proof (prove)\ngoal (1 subgoal):\n 1. (coeffs [:a0, a1, a2, a3, a4:] ! 4 = a4 &&&\n     coeffs [:a0, a1, a2, a3, a4:] ! 3 = a3) &&&\n    coeffs [:a0, a1, a2, a3, a4:] ! 2 = a2 &&&\n    coeffs [:a0, a1, a2, a3, a4:] ! 1 = a1 &&&\n    coeffs [:a0, a1, a2, a3, a4:] ! 0 = a0", "using a4"], ["proof (prove)\nusing this:\n  a4 \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. (coeffs [:a0, a1, a2, a3, a4:] ! 4 = a4 &&&\n     coeffs [:a0, a1, a2, a3, a4:] ! 3 = a3) &&&\n    coeffs [:a0, a1, a2, a3, a4:] ! 2 = a2 &&&\n    coeffs [:a0, a1, a2, a3, a4:] ! 1 = a1 &&&\n    coeffs [:a0, a1, a2, a3, a4:] ! 0 = a0", "by auto"], ["proof (state)\nthis:\n  coeffs p ! 4 = a4\n  coeffs p ! 3 = a3\n  coeffs p ! 2 = a2\n  coeffs p ! 1 = a1\n  coeffs p ! 0 = a0\n\ngoal (1 subgoal):\n 1. set (roots4_generic depressed_solver p) = {x. poly p x = (0::'a)}", "define b where \"b = a3 / a4\""], ["proof (state)\nthis:\n  b = a3 / a4\n\ngoal (1 subgoal):\n 1. set (roots4_generic depressed_solver p) = {x. poly p x = (0::'a)}", "define c where \"c = a2 / a4\""], ["proof (state)\nthis:\n  c = a2 / a4\n\ngoal (1 subgoal):\n 1. set (roots4_generic depressed_solver p) = {x. poly p x = (0::'a)}", "define d where \"d = a1 / a4\""], ["proof (state)\nthis:\n  d = a1 / a4\n\ngoal (1 subgoal):\n 1. set (roots4_generic depressed_solver p) = {x. poly p x = (0::'a)}", "define e where \"e = a0 / a4\""], ["proof (state)\nthis:\n  e = a0 / a4\n\ngoal (1 subgoal):\n 1. set (roots4_generic depressed_solver p) = {x. poly p x = (0::'a)}", "note def = roots4_generic_def[of depressed_solver p, unfolded Let_def coeffs, folded b_def c_def d_def e_def,\n      folded power4_eq_xxxx, folded power3_eq_cube, folded power2_eq_square]"], ["proof (state)\nthis:\n  roots4_generic depressed_solver p =\n  map (\\<lambda>y. y - b / (4::'a))\n   (depressed_solver (c - (3::'a) / (8::'a) * b\\<^sup>2)\n     ((b ^ 3 - (4::'a) * b * c + (8::'a) * d) / (8::'a))\n     ((- (3::'a) * b ^ 4 + (256::'a) * e - (64::'a) * b * d +\n       (16::'a) * b\\<^sup>2 * c) /\n      (256::'a)))\n\ngoal (1 subgoal):\n 1. set (roots4_generic depressed_solver p) = {x. poly p x = (0::'a)}", "let ?p = p"], ["proof (state)\ngoal (1 subgoal):\n 1. set (roots4_generic depressed_solver p) = {x. poly p x = (0::'a)}", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. set (roots4_generic depressed_solver p) = {x. poly p x = (0::'a)}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. set (roots4_generic depressed_solver p) = {x. poly p x = (0::'a)}", "define y where \"y = x + b / 4\""], ["proof (state)\nthis:\n  y = x + b / (4::'a)\n\ngoal (1 subgoal):\n 1. set (roots4_generic depressed_solver p) = {x. poly p x = (0::'a)}", "define p where \"p = c - (3/8) * b^2\""], ["proof (state)\nthis:\n  p = c - (3::'a) / (8::'a) * b\\<^sup>2\n\ngoal (1 subgoal):\n 1. set (roots4_generic depressed_solver p) = {x. poly p x = (0::'a)}", "define q where \"q = (b^3 - 4*b*c + 8 * d) / 8\""], ["proof (state)\nthis:\n  q = (b ^ 3 - (4::'a) * b * c + (8::'a) * d) / (8::'a)\n\ngoal (1 subgoal):\n 1. set (roots4_generic depressed_solver p) = {x. poly p x = (0::'a)}", "define r where \"r = ( -3 * b^4 + 256 * e - 64 * b * d + 16 * b^2 * c) / 256\""], ["proof (state)\nthis:\n  r =\n  (- (3::'a) * b ^ 4 + (256::'a) * e - (64::'a) * b * d +\n   (16::'a) * b\\<^sup>2 * c) /\n  (256::'a)\n\ngoal (1 subgoal):\n 1. set (roots4_generic depressed_solver p) = {x. poly p x = (0::'a)}", "note def = def[folded p_def q_def r_def]"], ["proof (state)\nthis:\n  roots4_generic depressed_solver p =\n  map (\\<lambda>y. y - b / (4::'a)) (depressed_solver p q r)\n\ngoal (1 subgoal):\n 1. set (roots4_generic depressed_solver p) = {x. poly p x = (0::'a)}", "have xy: \"x = y - b / 4\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = y - b / (4::'a)", "unfolding y_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x = x + b / (4::'a) - b / (4::'a)", "by auto"], ["proof (state)\nthis:\n  x = y - b / (4::'a)\n\ngoal (1 subgoal):\n 1. set (roots4_generic depressed_solver p) = {x. poly p x = (0::'a)}", "have \"poly ?p x = 0 \\<longleftrightarrow> a4 * x^4 + a3 * x^3 + a2 * x^2 + a1 * x + a0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (poly p x = (0::'a)) =\n    (a4 * x ^ 4 + a3 * x ^ 3 + a2 * x\\<^sup>2 + a1 * x + a0 = (0::'a))", "unfolding p"], ["proof (prove)\ngoal (1 subgoal):\n 1. (poly [:a0, a1, a2, a3, a4:] x = (0::'a)) =\n    (a4 * x ^ 4 + a3 * x ^ 3 + a2 * x\\<^sup>2 + a1 * x + a0 = (0::'a))", "by (simp add: powers)"], ["proof (state)\nthis:\n  (poly p x = (0::'a)) =\n  (a4 * x ^ 4 + a3 * x ^ 3 + a2 * x\\<^sup>2 + a1 * x + a0 = (0::'a))\n\ngoal (1 subgoal):\n 1. set (roots4_generic depressed_solver p) = {x. poly p x = (0::'a)}", "also"], ["proof (state)\nthis:\n  (poly p x = (0::'a)) =\n  (a4 * x ^ 4 + a3 * x ^ 3 + a2 * x\\<^sup>2 + a1 * x + a0 = (0::'a))\n\ngoal (1 subgoal):\n 1. set (roots4_generic depressed_solver p) = {x. poly p x = (0::'a)}", "have \"\\<dots> \\<longleftrightarrow> (y ^ 4 + p * y\\<^sup>2 + q * y + r = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a4 * x ^ 4 + a3 * x ^ 3 + a2 * x\\<^sup>2 + a1 * x + a0 = (0::'a)) =\n    (y ^ 4 + p * y\\<^sup>2 + q * y + r = (0::'a))", "unfolding to_depressed_quartic[OF a4 b_def c_def d_def e_def p_def q_def r_def xy]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (y ^ 4 + p * y\\<^sup>2 + q * y + r = (0::'a)) =\n    (y ^ 4 + p * y\\<^sup>2 + q * y + r = (0::'a))", ".."], ["proof (state)\nthis:\n  (a4 * x ^ 4 + a3 * x ^ 3 + a2 * x\\<^sup>2 + a1 * x + a0 = (0::'a)) =\n  (y ^ 4 + p * y\\<^sup>2 + q * y + r = (0::'a))\n\ngoal (1 subgoal):\n 1. set (roots4_generic depressed_solver p) = {x. poly p x = (0::'a)}", "also"], ["proof (state)\nthis:\n  (a4 * x ^ 4 + a3 * x ^ 3 + a2 * x\\<^sup>2 + a1 * x + a0 = (0::'a)) =\n  (y ^ 4 + p * y\\<^sup>2 + q * y + r = (0::'a))\n\ngoal (1 subgoal):\n 1. set (roots4_generic depressed_solver p) = {x. poly p x = (0::'a)}", "have \"\\<dots> \\<longleftrightarrow> y \\<in> set (depressed_solver p q r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y ^ 4 + p * y\\<^sup>2 + q * y + r = (0::'a)) =\n    (y \\<in> set (depressed_solver p q r))", "unfolding solver"], ["proof (prove)\ngoal (1 subgoal):\n 1. (y ^ 4 + p * y\\<^sup>2 + q * y + r = (0::'a)) =\n    (y ^ 4 + p * y\\<^sup>2 + q * y + r = (0::'a))", ".."], ["proof (state)\nthis:\n  (y ^ 4 + p * y\\<^sup>2 + q * y + r = (0::'a)) =\n  (y \\<in> set (depressed_solver p q r))\n\ngoal (1 subgoal):\n 1. set (roots4_generic depressed_solver p) = {x. poly p x = (0::'a)}", "also"], ["proof (state)\nthis:\n  (y ^ 4 + p * y\\<^sup>2 + q * y + r = (0::'a)) =\n  (y \\<in> set (depressed_solver p q r))\n\ngoal (1 subgoal):\n 1. set (roots4_generic depressed_solver p) = {x. poly p x = (0::'a)}", "have \"\\<dots> \\<longleftrightarrow> x \\<in> set (roots4_generic depressed_solver ?p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (y \\<in> set (depressed_solver p q r)) =\n    (x \\<in> set (roots4_generic depressed_solver p))", "unfolding xy def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (y \\<in> set (depressed_solver p q r)) =\n    (y - b / (4::'a)\n     \\<in> set (map (\\<lambda>y. y - b / (4::'a)) (depressed_solver p q r)))", "by auto"], ["proof (state)\nthis:\n  (y \\<in> set (depressed_solver p q r)) =\n  (x \\<in> set (roots4_generic depressed_solver p))\n\ngoal (1 subgoal):\n 1. set (roots4_generic depressed_solver p) = {x. poly p x = (0::'a)}", "finally"], ["proof (chain)\npicking this:\n  (poly p x = (0::'a)) = (x \\<in> set (roots4_generic depressed_solver p))", "have \"poly ?p x = 0 \\<longleftrightarrow> x \\<in> set (roots4_generic depressed_solver ?p)\""], ["proof (prove)\nusing this:\n  (poly p x = (0::'a)) = (x \\<in> set (roots4_generic depressed_solver p))\n\ngoal (1 subgoal):\n 1. (poly p x = (0::'a)) = (x \\<in> set (roots4_generic depressed_solver p))", "by auto"], ["proof (state)\nthis:\n  (poly p x = (0::'a)) = (x \\<in> set (roots4_generic depressed_solver p))\n\ngoal (1 subgoal):\n 1. set (roots4_generic depressed_solver p) = {x. poly p x = (0::'a)}", "}"], ["proof (state)\nthis:\n  (poly p ?x2 = (0::'a)) =\n  (?x2 \\<in> set (roots4_generic depressed_solver p))\n\ngoal (1 subgoal):\n 1. set (roots4_generic depressed_solver p) = {x. poly p x = (0::'a)}", "thus ?thesis"], ["proof (prove)\nusing this:\n  (poly p ?x2 = (0::'a)) =\n  (?x2 \\<in> set (roots4_generic depressed_solver p))\n\ngoal (1 subgoal):\n 1. set (roots4_generic depressed_solver p) = {x. poly p x = (0::'a)}", "by simp"], ["proof (state)\nthis:\n  set (roots4_generic depressed_solver p) = {x. poly p x = (0::'a)}\n\ngoal:\nNo subgoals!", "qed"], ["", "definition croots4 :: \"complex poly \\<Rightarrow> complex list\" where\n  \"croots4 = roots4_generic solve_depressed_quartic_complex\""], ["", "lemma croots4: assumes deg: \"degree p = 4\" \n  shows \"set (croots4 p) = { x. poly p x = 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (croots4 p) = {x. poly p x = 0}", "unfolding croots4_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. set (roots4_generic solve_depressed_quartic_complex p) =\n    {x. poly p x = 0}", "by (rule roots4_generic[OF deg solve_depressed_quartic_complex])"], ["", "definition rroots4 :: \"real poly \\<Rightarrow> real list\" where\n  \"rroots4 = roots4_generic solve_depressed_quartic_real\""], ["", "lemma rroots4: assumes deg: \"degree p = 4\" \n  shows \"set (rroots4 p) = { x. poly p x = 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (rroots4 p) = {x. poly p x = 0}", "unfolding rroots4_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. set (roots4_generic solve_depressed_quartic_real p) = {x. poly p x = 0}", "by (rule roots4_generic[OF deg solve_depressed_quartic_real])"], ["", "end"]]}