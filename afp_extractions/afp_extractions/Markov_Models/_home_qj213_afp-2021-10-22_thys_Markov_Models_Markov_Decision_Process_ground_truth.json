{"file_name": "/home/qj213/afp-2021-10-22/thys/Markov_Models/Markov_Decision_Process.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Markov_Models", "problem_names": ["lemma some_elem_ne: \"s \\<noteq> {} \\<Longrightarrow> some_elem s \\<in> s\"", "lemma equivp_rel_prod: \"equivp R \\<Longrightarrow> equivp Q \\<Longrightarrow> equivp (rel_prod R Q)\"", "lemma eq_scheduler_refl[intro]: \"eq_scheduler sc sc\"", "lemma state_cont[simp]: \"state (cont cfg s) = s\"", "lemma state_Cfg[simp]: \"state (Cfg s d' c') = s\"", "lemma action_Cfg[simp]: \"action (Cfg s d' c') = d'\"", "lemma cont_Cfg[simp]: \"t \\<in> set_pmf d' \\<Longrightarrow> state (c' t) = t \\<Longrightarrow> cont (Cfg s d' c') t = c' t\"", "lemma state_cfg_corec[simp]: \"state (cfg_corec s d c x) = s\"", "lemma action_cfg_corec[simp]: \"action (cfg_corec s d c x) = d x\"", "lemma cont_cfg_corec[simp]: \"t \\<in> set_pmf (d x) \\<Longrightarrow> cont (cfg_corec s d c x) t = cfg_corec t d c (c x t)\"", "lemma cfg_coinduct[consumes 1, case_names state action cont, coinduct pred]:\n  \"X c d \\<Longrightarrow> (\\<And>c d. X c d \\<Longrightarrow> state c = state d) \\<Longrightarrow> (\\<And>c d. X c d \\<Longrightarrow> action c = action d) \\<Longrightarrow>\n    (\\<And>c d t. X c d \\<Longrightarrow> t \\<in> set_pmf (action c) \\<Longrightarrow> X (cont c t) (cont d t)) \\<Longrightarrow> c = d\"", "lemma rel_cfg_state: \"rel_cfg P cfg1 cfg2 \\<Longrightarrow> P (state cfg1) (state cfg2)\"", "lemma rel_cfg_cont:\n  \"rel_cfg P cfg1 cfg2 \\<Longrightarrow>\n    rel_pmf (\\<lambda>s t. rel_cfg P (cont cfg1 s) (cont cfg2 t)) (action cfg1) (action cfg2)\"", "lemma rel_cfg_action:\n  assumes P: \"rel_cfg P cfg1 cfg2\" shows \"rel_pmf P (action cfg1) (action cfg2)\"", "lemma rel_cfg_eq: \"rel_cfg (=) cfg1 cfg2 \\<longleftrightarrow> cfg1 = cfg2\"", "lemma\n  shows state_memoryless_on[simp]: \"state (memoryless_on f s) = s\"\n    and action_memoryless_on[simp]: \"action (memoryless_on f s) = f s\"\n    and cont_memoryless_on[simp]: \"t \\<in> (f s) \\<Longrightarrow> cont (memoryless_on f s) t = memoryless_on f t\"", "lemma set_K_cfg: \"set_pmf (K_cfg cfg) = cont cfg ` set_pmf (action cfg)\"", "lemma nn_integral_K_cfg: \"(\\<integral>\\<^sup>+cfg. f cfg \\<partial>K_cfg cfg) = (\\<integral>\\<^sup>+s. f (cont cfg s) \\<partial>action cfg)\"", "lemma\n  shows cfg_onD_action[intro, simp]: \"cfg \\<in> cfg_on s \\<Longrightarrow> action cfg \\<in> K s\"\n    and cfg_onD_cont[intro, simp]: \"cfg \\<in> cfg_on s \\<Longrightarrow> t \\<in> action cfg \\<Longrightarrow> cont cfg t \\<in> cfg_on t\"\n    and cfg_onD_state[simp]: \"cfg \\<in> cfg_on s \\<Longrightarrow> state cfg = s\"\n    and cfg_onI: \"state cfg = s \\<Longrightarrow> action cfg \\<in> K s \\<Longrightarrow> (\\<And>t. t \\<in> action cfg \\<Longrightarrow> cont cfg t \\<in> cfg_on t) \\<Longrightarrow> cfg \\<in> cfg_on s\"", "lemma cfg_on_coinduct[coinduct set: cfg_on]:\n  assumes \"P s cfg\"\n  assumes \"\\<And>cfg s. P s cfg \\<Longrightarrow> state cfg = s\"\n  assumes \"\\<And>cfg s. P s cfg \\<Longrightarrow> action cfg \\<in> K s\"\n  assumes \"\\<And>cfg s t. P s cfg \\<Longrightarrow> t \\<in> action cfg \\<Longrightarrow> P t (cont cfg t)\"\n  shows \"cfg \\<in> cfg_on s\"", "lemma memoryless_on_cfg_onI:\n  assumes \"\\<And>s. f s \\<in> K s\"\n  shows \"memoryless_on f s \\<in> cfg_on s\"", "lemma cfg_of_cfg_onI:\n  \"D \\<in> K s \\<Longrightarrow> (\\<And>t. t \\<in> D \\<Longrightarrow> c t \\<in> cfg_on t) \\<Longrightarrow> Cfg s D c \\<in> cfg_on s\"", "lemma arb_actI[simp]: \"arb_act s \\<in> K s\"", "lemma cfg_on_not_empty[intro, simp]: \"cfg_on s \\<noteq> {}\"", "lemma space_T[simp]: \"space (T cfg) = space St\"", "lemma sets_T[simp]: \"sets (T cfg) = sets St\"", "lemma measurable_T1[simp]: \"measurable (T cfg) N = measurable St N\"", "lemma measurable_T2[simp]: \"measurable N (T cfg) = measurable N St\"", "lemma nn_integral_T:\n  assumes [measurable]: \"f \\<in> borel_measurable St\"\n  shows \"(\\<integral>\\<^sup>+X. f X \\<partial>T cfg) = (\\<integral>\\<^sup>+cfg'. (\\<integral>\\<^sup>+x. f (state cfg' ## x) \\<partial>T cfg') \\<partial>K_cfg cfg)\"", "lemma T_eq:\n  \"T cfg = (measure_pmf (K_cfg cfg) \\<bind> (\\<lambda>cfg'. distr (T cfg') St (\\<lambda>\\<omega>. state cfg' ## \\<omega>)))\"", "lemma T_memoryless_on: \"T (memoryless_on ct s) = MC_syntax.T ct s\"", "lemma nn_integral_T_lfp:\n  assumes [measurable]: \"case_prod g \\<in> borel_measurable (count_space UNIV \\<Otimes>\\<^sub>M borel)\"\n  assumes cont_g: \"\\<And>s. sup_continuous (g s)\"\n  assumes int_g: \"\\<And>f cfg. f \\<in> borel_measurable (stream_space (count_space UNIV)) \\<Longrightarrow>\n    (\\<integral>\\<^sup>+\\<omega>. g (state cfg) (f \\<omega>) \\<partial>T cfg) = g (state cfg) (\\<integral>\\<^sup>+\\<omega>. f \\<omega> \\<partial>T cfg)\"\n  shows \"(\\<integral>\\<^sup>+\\<omega>. lfp (\\<lambda>f \\<omega>. g (shd \\<omega>) (f (stl \\<omega>))) \\<omega> \\<partial>T cfg) =\n    lfp (\\<lambda>f cfg. \\<integral>\\<^sup>+t. g (state t) (f t) \\<partial>K_cfg cfg) cfg\"", "lemma emeasure_Collect_T:\n  assumes [measurable]: \"Measurable.pred St P\"\n  shows \"emeasure (T cfg) {x\\<in>space St. P x} =\n    (\\<integral>\\<^sup>+cfg'. emeasure (T cfg') {x\\<in>space St. P (state cfg' ## x)} \\<partial>K_cfg cfg)\"", "lemma E_sup_const: \"0 \\<le> c \\<Longrightarrow> E_sup s (\\<lambda>_. c) = c\"", "lemma E_sup_mult_right:\n  assumes [measurable]: \"f \\<in> borel_measurable St\" and [simp]: \"0 \\<le> c\"\n  shows \"E_sup s (\\<lambda>x. c * f x) = c * E_sup s f\"", "lemma E_sup_mono:\n  \"(\\<And>\\<omega>. f \\<omega> \\<le> g \\<omega>) \\<Longrightarrow> E_sup s f \\<le> E_sup s g\"", "lemma E_sup_add:\n  assumes [measurable]: \"f \\<in> borel_measurable St\" \"g \\<in> borel_measurable St\"\n  shows \"E_sup s (\\<lambda>x. f x + g x) \\<le> E_sup s f + E_sup s g\"", "lemma E_sup_add_left:\n  assumes [measurable]: \"f \\<in> borel_measurable St\"\n  shows \"E_sup s (\\<lambda>x. f x + c) = E_sup s f + c\"", "lemma E_sup_add_right:\n  \"f \\<in> borel_measurable St \\<Longrightarrow> E_sup s (\\<lambda>x. c + f x) = c + E_sup s f\"", "lemma E_sup_SUP:\n  assumes [measurable]: \"\\<And>i. f i \\<in> borel_measurable St\" and [simp]: \"incseq f\"\n  shows \"E_sup s (\\<lambda>x. \\<Squnion>i. f i x) = (\\<Squnion>i. E_sup s (f i))\"", "lemma E_sup_iterate:\n  assumes [measurable]: \"f \\<in> borel_measurable St\"\n  shows \"E_sup s f = (\\<Squnion>D\\<in>K s. \\<integral>\\<^sup>+ t. E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>)) \\<partial>measure_pmf D)\"", "lemma E_sup_bot: \"E_sup s \\<bottom> = 0\"", "lemma E_sup_lfp:\n  fixes g\n  defines \"l \\<equiv> \\<lambda>f \\<omega>. g (shd \\<omega>) (f (stl \\<omega>))\"\n  assumes measurable_g[measurable]: \"case_prod g \\<in> borel_measurable (count_space UNIV \\<Otimes>\\<^sub>M borel)\"\n  assumes cont_g: \"\\<And>s. sup_continuous (g s)\"\n  assumes int_g: \"\\<And>f cfg. f \\<in> borel_measurable St \\<Longrightarrow>\n     (\\<integral>\\<^sup>+ \\<omega>. g (state cfg) (f \\<omega>) \\<partial>T cfg) = g (state cfg) (integral\\<^sup>N (T cfg) f)\"\n  shows \"(\\<lambda>s. E_sup s (lfp l)) = lfp (\\<lambda>f s. \\<Squnion>D\\<in>K s. \\<integral>\\<^sup>+t. g t (f t) \\<partial>measure_pmf D)\"", "lemma P_sup_eq_E_sup:\n  assumes [measurable]: \"Measurable.pred St P\"\n  shows \"P_sup s P = E_sup s (indicator {x\\<in>space St. P x})\"", "lemma P_sup_True[simp]: \"P_sup t (\\<lambda>\\<omega>. True) = 1\"", "lemma P_sup_False[simp]: \"P_sup t (\\<lambda>\\<omega>. False) = 0\"", "lemma P_sup_SUP:\n  fixes P :: \"nat \\<Rightarrow> 's stream \\<Rightarrow> bool\"\n  assumes \"mono P\" and P[measurable]: \"\\<And>i. Measurable.pred St (P i)\"\n  shows \"P_sup s (\\<lambda>x. \\<exists>i. P i x) = (\\<Squnion>i. P_sup s (P i))\"", "lemma P_sup_lfp:\n  assumes Q: \"sup_continuous Q\"\n  assumes f: \"f \\<in> measurable St M\"\n  assumes Q_m: \"\\<And>P. Measurable.pred M P \\<Longrightarrow> Measurable.pred M (Q P)\"\n  shows \"P_sup s (\\<lambda>x. lfp Q (f x)) = (\\<Squnion>i. P_sup s (\\<lambda>x. (Q ^^ i) \\<bottom> (f x)))\"", "lemma P_sup_iterate:\n  assumes [measurable]: \"Measurable.pred St P\"\n  shows \"P_sup s P = (\\<Squnion>D\\<in>K s. \\<integral>\\<^sup>+ t. P_sup t (\\<lambda>\\<omega>. P (t ## \\<omega>)) \\<partial>measure_pmf D)\"", "lemma E_inf_const: \"0 \\<le> c \\<Longrightarrow> E_inf s (\\<lambda>_. c) = c\"", "lemma E_inf_mono:\n  \"(\\<And>\\<omega>. f \\<omega> \\<le> g \\<omega>) \\<Longrightarrow> E_inf s f \\<le> E_inf s g\"", "lemma E_inf_iterate:\n  assumes [measurable]: \"f \\<in> borel_measurable St\"\n  shows \"E_inf s f = (\\<Sqinter>D\\<in>K s. \\<integral>\\<^sup>+ t. E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>)) \\<partial>measure_pmf D)\"", "lemma emeasure_T_const[simp]: \"emeasure (T s) (space St) = 1\"", "lemma E_inf_greatest:\n  \"(\\<And>cfg. cfg \\<in> cfg_on s \\<Longrightarrow> x \\<le> (\\<integral>\\<^sup>+x. f x \\<partial>T cfg)) \\<Longrightarrow> x \\<le> E_inf s f\"", "lemma E_inf_lower2:\n  \"cfg \\<in> cfg_on s \\<Longrightarrow> (\\<integral>\\<^sup>+x. f x \\<partial>T cfg) \\<le> x \\<Longrightarrow> E_inf s f \\<le> x\"", "lemma E_inf_lfp:\n  fixes g\n  defines \"l \\<equiv> \\<lambda>f \\<omega>. g (shd \\<omega>) (f (stl \\<omega>))\"\n  assumes measurable_g[measurable]: \"case_prod g \\<in> borel_measurable (count_space UNIV \\<Otimes>\\<^sub>M borel)\"\n  assumes cont_g: \"\\<And>s. sup_continuous (g s)\"\n  assumes int_g: \"\\<And>f cfg. f \\<in> borel_measurable St \\<Longrightarrow>\n     (\\<integral>\\<^sup>+ \\<omega>. g (state cfg) (f \\<omega>) \\<partial>T cfg) = g (state cfg) (integral\\<^sup>N (T cfg) f)\"\n  assumes K_finite: \"\\<And>s. finite (K s)\"\n  shows \"(\\<lambda>s. E_inf s (lfp l)) = lfp (\\<lambda>f s. \\<Sqinter>D\\<in>K s. \\<integral>\\<^sup>+t. g t (f t) \\<partial>measure_pmf D)\"", "lemma P_inf_eq_E_inf:\n  assumes [measurable]: \"Measurable.pred St P\"\n  shows \"P_inf s P = E_inf s (indicator {x\\<in>space St. P x})\"", "lemma P_inf_True[simp]: \"P_inf t (\\<lambda>\\<omega>. True) = 1\"", "lemma P_inf_False[simp]: \"P_inf t (\\<lambda>\\<omega>. False) = 0\"", "lemma P_inf_INF:\n  fixes P :: \"nat \\<Rightarrow> 's stream \\<Rightarrow> bool\"\n  assumes \"decseq P\" and P[measurable]: \"\\<And>i. Measurable.pred St (P i)\"\n  shows \"P_inf s (\\<lambda>x. \\<forall>i. P i x) = (\\<Sqinter>i. P_inf s (P i))\"", "lemma P_inf_gfp:\n  assumes Q: \"inf_continuous Q\"\n  assumes f: \"f \\<in> measurable St M\"\n  assumes Q_m: \"\\<And>P. Measurable.pred M P \\<Longrightarrow> Measurable.pred M (Q P)\"\n  shows \"P_inf s (\\<lambda>x. gfp Q (f x)) = (\\<Sqinter>i. P_inf s (\\<lambda>x. (Q ^^ i) \\<top> (f x)))\"", "lemma P_inf_iterate:\n  assumes [measurable]: \"Measurable.pred St P\"\n  shows \"P_inf s P = (\\<Sqinter>D\\<in>K s. \\<integral>\\<^sup>+ t. P_inf t (\\<lambda>\\<omega>. P (t ## \\<omega>)) \\<partial>measure_pmf D)\"", "lemma action_closed: \"s \\<in> S \\<Longrightarrow> cfg \\<in> cfg_on s \\<Longrightarrow> t \\<in> action cfg \\<Longrightarrow> t \\<in> S\"", "lemma set_pmf_closed: \"s \\<in> S \\<Longrightarrow> D \\<in> K s \\<Longrightarrow> t \\<in> D \\<Longrightarrow> t \\<in> S\"", "lemma Pi_closed: \"ct \\<in> Pi S K \\<Longrightarrow> s \\<in> S \\<Longrightarrow> t \\<in> ct s \\<Longrightarrow> t \\<in> S\"", "lemma E_closed: \"s \\<in> S \\<Longrightarrow> (s, t) \\<in> E \\<Longrightarrow> t \\<in> S\"", "lemma set_pmf_finite: \"s \\<in> S \\<Longrightarrow> D \\<in> K s \\<Longrightarrow> finite D\"", "lemma valid_cfgI: \"s \\<in> S \\<Longrightarrow> cfg \\<in> cfg_on s \\<Longrightarrow> cfg \\<in> valid_cfg\"", "lemma valid_cfgD: \"cfg \\<in> valid_cfg \\<Longrightarrow> cfg \\<in> cfg_on (state cfg)\"", "lemma\n  shows valid_cfg_state_in_S: \"cfg \\<in> valid_cfg \\<Longrightarrow> state cfg \\<in> S\"\n    and valid_cfg_action: \"cfg \\<in> valid_cfg \\<Longrightarrow> s \\<in> action cfg \\<Longrightarrow> s \\<in> S\"\n    and valid_cfg_cont: \"cfg \\<in> valid_cfg \\<Longrightarrow> s \\<in> action cfg \\<Longrightarrow> cont cfg s \\<in> valid_cfg\"", "lemma valid_K_cfg[intro]: \"cfg \\<in> valid_cfg \\<Longrightarrow> cfg' \\<in> K_cfg cfg \\<Longrightarrow> cfg' \\<in> valid_cfg\"", "lemma simple_cfg_on[simp]: \"ct \\<in> Pi S K \\<Longrightarrow> simple ct s \\<in> cfg_on s\"", "lemma simple_valid_cfg[simp]: \"ct \\<in> Pi S K \\<Longrightarrow> s \\<in> S \\<Longrightarrow> simple ct s \\<in> valid_cfg\"", "lemma cont_simple[simp]: \"s \\<in> S \\<Longrightarrow> t \\<in> set_pmf (ct s) \\<Longrightarrow> cont (simple ct s) t = simple ct t\"", "lemma state_simple[simp]: \"state (simple ct s) = s\"", "lemma action_simple[simp]: \"s \\<in> S \\<Longrightarrow> action (simple ct s) = ct s\"", "lemma simple_valid_cfg_iff: \"ct \\<in> Pi S K \\<Longrightarrow> simple ct s \\<in> valid_cfg \\<longleftrightarrow> s \\<in> S\""], "translations": [["", "lemma some_elem_ne: \"s \\<noteq> {} \\<Longrightarrow> some_elem s \\<in> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<noteq> {} \\<Longrightarrow> some_elem s \\<in> s", "unfolding some_elem_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<noteq> {} \\<Longrightarrow> (SOME x. x \\<in> s) \\<in> s", "by (auto intro: someI)"], ["", "subsection \\<open>Configurations\\<close>"], ["", "text \\<open>\n\nWe want to construct a \\emph{non-free} codatatype\n  \\<open>'s cfg = Cfg (state: 's) (action: 's pmf) (cont: 's \\<Rightarrow> 's cfg)\\<close>.\nwith the restriction\n  @{term \"state (cont cfg s) = s\"}\n\n\\<close>"], ["", "hide_const cont"], ["", "codatatype 's scheduler = Scheduler (action_sch: \"'s pmf\") (cont_sch: \"'s \\<Rightarrow> 's scheduler\")"], ["", "lemma equivp_rel_prod: \"equivp R \\<Longrightarrow> equivp Q \\<Longrightarrow> equivp (rel_prod R Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>equivp R; equivp Q\\<rbrakk>\n    \\<Longrightarrow> equivp (rel_prod R Q)", "by (auto intro!: equivpI prod.rel_symp prod.rel_transp prod.rel_reflp elim: equivpE)"], ["", "coinductive eq_scheduler :: \"'s scheduler \\<Rightarrow> 's scheduler \\<Rightarrow> bool\"\nwhere\n  \"\\<And>D. action_sch sc1 = D \\<Longrightarrow> action_sch sc2 = D \\<Longrightarrow>\n    (\\<forall>s\\<in>D. eq_scheduler (cont_sch sc1 s) (cont_sch sc2 s)) \\<Longrightarrow> eq_scheduler sc1 sc2\""], ["", "lemma eq_scheduler_refl[intro]: \"eq_scheduler sc sc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eq_scheduler sc sc", "by (coinduction arbitrary: sc) auto"], ["", "quotient_type 's cfg = \"'s \\<times> 's scheduler\" / \"rel_prod (=) eq_scheduler\""], ["proof (prove)\ngoal (1 subgoal):\n 1. equivp (rel_prod (=) eq_scheduler)", "proof (intro equivp_rel_prod equivpI reflpI sympI transpI)"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>x. x = x\n 2. \\<And>a b. a = b \\<Longrightarrow> b = a\n 3. \\<And>x y z. \\<lbrakk>x = y; y = z\\<rbrakk> \\<Longrightarrow> x = z\n 4. \\<And>x. eq_scheduler x x\n 5. \\<And>a b. eq_scheduler a b \\<Longrightarrow> eq_scheduler b a\n 6. \\<And>x y z.\n       \\<lbrakk>eq_scheduler x y; eq_scheduler y z\\<rbrakk>\n       \\<Longrightarrow> eq_scheduler x z", "show \"eq_scheduler sc1 sc2 \\<Longrightarrow> eq_scheduler sc2 sc1\" for sc1 sc2 :: \"'s scheduler\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eq_scheduler sc1 sc2 \\<Longrightarrow> eq_scheduler sc2 sc1", "by (coinduction arbitrary: sc1 sc2) (auto elim: eq_scheduler.cases)"], ["proof (state)\nthis:\n  eq_scheduler ?sc1.0 ?sc2.0 \\<Longrightarrow> eq_scheduler ?sc2.0 ?sc1.0\n\ngoal (5 subgoals):\n 1. \\<And>x. x = x\n 2. \\<And>a b. a = b \\<Longrightarrow> b = a\n 3. \\<And>x y z. \\<lbrakk>x = y; y = z\\<rbrakk> \\<Longrightarrow> x = z\n 4. \\<And>x. eq_scheduler x x\n 5. \\<And>x y z.\n       \\<lbrakk>eq_scheduler x y; eq_scheduler y z\\<rbrakk>\n       \\<Longrightarrow> eq_scheduler x z", "show \"eq_scheduler sc1 sc2 \\<Longrightarrow> eq_scheduler sc2 sc3 \\<Longrightarrow> eq_scheduler sc1 sc3\"\n    for sc1 sc2 sc3 :: \"'s scheduler\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>eq_scheduler sc1 sc2; eq_scheduler sc2 sc3\\<rbrakk>\n    \\<Longrightarrow> eq_scheduler sc1 sc3", "by (coinduction arbitrary: sc1 sc2 sc3)\n       (subst (asm) (1 2) eq_scheduler.simps, auto)"], ["proof (state)\nthis:\n  \\<lbrakk>eq_scheduler ?sc1.0 ?sc2.0; eq_scheduler ?sc2.0 ?sc3.0\\<rbrakk>\n  \\<Longrightarrow> eq_scheduler ?sc1.0 ?sc3.0\n\ngoal (4 subgoals):\n 1. \\<And>x. x = x\n 2. \\<And>a b. a = b \\<Longrightarrow> b = a\n 3. \\<And>x y z. \\<lbrakk>x = y; y = z\\<rbrakk> \\<Longrightarrow> x = z\n 4. \\<And>x. eq_scheduler x x", "qed auto"], ["", "lift_definition state :: \"'s cfg \\<Rightarrow> 's\" is \"fst\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>prod1 prod2.\n       rel_prod (=) eq_scheduler prod1 prod2 \\<Longrightarrow>\n       fst prod1 = fst prod2", "by auto"], ["", "lift_definition action :: \"'s cfg \\<Rightarrow> 's pmf\" is \"\\<lambda>(s, sc). action_sch sc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>prod1 prod2.\n       rel_prod (=) eq_scheduler prod1 prod2 \\<Longrightarrow>\n       (case prod1 of (s, x) \\<Rightarrow> action_sch x) =\n       (case prod2 of (s, x) \\<Rightarrow> action_sch x)", "by (force elim: eq_scheduler.cases)"], ["", "lift_definition cont :: \"'s cfg \\<Rightarrow> 's \\<Rightarrow> 's cfg\" is\n  \"\\<lambda>(s, sc) t. if t \\<in> action_sch sc then (t, cont_sch sc t) else\n    (t, cont_sch sc (some_elem (action_sch sc)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>prod1 prod2 s.\n       rel_prod (=) eq_scheduler prod1 prod2 \\<Longrightarrow>\n       rel_prod (=) eq_scheduler\n        ((case prod1 of\n          (s, sc) \\<Rightarrow>\n            \\<lambda>t.\n               if t \\<in> set_pmf (action_sch sc) then (t, cont_sch sc t)\n               else (t, cont_sch sc (some_elem (set_pmf (action_sch sc)))))\n          s)\n        ((case prod2 of\n          (s, sc) \\<Rightarrow>\n            \\<lambda>t.\n               if t \\<in> set_pmf (action_sch sc) then (t, cont_sch sc t)\n               else (t, cont_sch sc (some_elem (set_pmf (action_sch sc)))))\n          s)", "apply (simp add: rel_prod_conv split: prod.splits)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>prod1 prod2 s x1 x2 x2a.\n       \\<lbrakk>prod1 = (x1, x2); prod2 = (x1, x2a);\n        eq_scheduler x2 x2a\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x1a x2b.\n                            (s \\<in> set_pmf\n(action_sch x2b) \\<longrightarrow>\n                             x1 = x1a \\<and> x2 = x2b \\<longrightarrow>\n                             (\\<forall>x1 x2.\n                                 (s \\<in> set_pmf\n     (action_sch x2) \\<longrightarrow>\n                                  x1a = x1 \\<and> x2a = x2 \\<longrightarrow>\n                                  eq_scheduler (cont_sch x2b s)\n                                   (cont_sch x2 s)) \\<and>\n                                 (s \\<notin> set_pmf\n        (action_sch x2) \\<longrightarrow>\n                                  x1a = x1 \\<and> x2a = x2 \\<longrightarrow>\n                                  eq_scheduler (cont_sch x2b s)\n                                   (cont_sch x2\n                                     (some_elem\n (set_pmf (action_sch x2))))))) \\<and>\n                            (s \\<notin> set_pmf\n   (action_sch x2b) \\<longrightarrow>\n                             x1 = x1a \\<and> x2 = x2b \\<longrightarrow>\n                             (\\<forall>x1 x2.\n                                 (s \\<in> set_pmf\n     (action_sch x2) \\<longrightarrow>\n                                  x1a = x1 \\<and> x2a = x2 \\<longrightarrow>\n                                  eq_scheduler\n                                   (cont_sch x2b\n                                     (some_elem (set_pmf (action_sch x2b))))\n                                   (cont_sch x2 s)) \\<and>\n                                 (s \\<notin> set_pmf\n        (action_sch x2) \\<longrightarrow>\n                                  x1a = x1 \\<and> x2a = x2 \\<longrightarrow>\n                                  eq_scheduler\n                                   (cont_sch x2b\n                                     (some_elem (set_pmf (action_sch x2b))))\n                                   (cont_sch x2\n                                     (some_elem\n (set_pmf (action_sch x2)))))))", "apply (subst (asm) eq_scheduler.simps)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>prod1 prod2 s x1 x2 x2a.\n       \\<lbrakk>prod1 = (x1, x2); prod2 = (x1, x2a);\n        \\<exists>sc1 sc2 D.\n           x2 = sc1 \\<and>\n           x2a = sc2 \\<and>\n           action_sch sc1 = D \\<and>\n           action_sch sc2 = D \\<and>\n           (\\<forall>s\\<in>set_pmf D.\n               eq_scheduler (cont_sch sc1 s) (cont_sch sc2 s))\\<rbrakk>\n       \\<Longrightarrow> \\<forall>x1a x2b.\n                            (s \\<in> set_pmf\n(action_sch x2b) \\<longrightarrow>\n                             x1 = x1a \\<and> x2 = x2b \\<longrightarrow>\n                             (\\<forall>x1 x2.\n                                 (s \\<in> set_pmf\n     (action_sch x2) \\<longrightarrow>\n                                  x1a = x1 \\<and> x2a = x2 \\<longrightarrow>\n                                  eq_scheduler (cont_sch x2b s)\n                                   (cont_sch x2 s)) \\<and>\n                                 (s \\<notin> set_pmf\n        (action_sch x2) \\<longrightarrow>\n                                  x1a = x1 \\<and> x2a = x2 \\<longrightarrow>\n                                  eq_scheduler (cont_sch x2b s)\n                                   (cont_sch x2\n                                     (some_elem\n (set_pmf (action_sch x2))))))) \\<and>\n                            (s \\<notin> set_pmf\n   (action_sch x2b) \\<longrightarrow>\n                             x1 = x1a \\<and> x2 = x2b \\<longrightarrow>\n                             (\\<forall>x1 x2.\n                                 (s \\<in> set_pmf\n     (action_sch x2) \\<longrightarrow>\n                                  x1a = x1 \\<and> x2a = x2 \\<longrightarrow>\n                                  eq_scheduler\n                                   (cont_sch x2b\n                                     (some_elem (set_pmf (action_sch x2b))))\n                                   (cont_sch x2 s)) \\<and>\n                                 (s \\<notin> set_pmf\n        (action_sch x2) \\<longrightarrow>\n                                  x1a = x1 \\<and> x2a = x2 \\<longrightarrow>\n                                  eq_scheduler\n                                   (cont_sch x2b\n                                     (some_elem (set_pmf (action_sch x2b))))\n                                   (cont_sch x2\n                                     (some_elem\n (set_pmf (action_sch x2)))))))", "apply (auto simp: Let_def set_pmf_not_empty[THEN some_elem_ne])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lift_definition Cfg :: \"'s \\<Rightarrow> 's pmf \\<Rightarrow> ('s \\<Rightarrow> 's cfg) \\<Rightarrow> 's cfg\" is\n  \"\\<lambda>s D c. (s, Scheduler D (\\<lambda>t. snd (c t)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s pmf fun1 fun2.\n       (\\<And>x.\n           rel_prod (=) eq_scheduler (fun1 x) (fun2 x)) \\<Longrightarrow>\n       rel_prod (=) eq_scheduler\n        (s, Scheduler pmf (\\<lambda>t. snd (fun1 t)))\n        (s, Scheduler pmf (\\<lambda>t. snd (fun2 t)))", "by (auto simp: rel_prod_conv split_beta' eq_scheduler.simps[of \"Scheduler _  _\"])"], ["", "lift_definition cfg_corec :: \"'s \\<Rightarrow> ('a \\<Rightarrow> 's pmf) \\<Rightarrow> ('a \\<Rightarrow> 's \\<Rightarrow> 'a)  \\<Rightarrow> 'a \\<Rightarrow> 's cfg\" is\n  \"\\<lambda>s D C x. (s, corec_scheduler D (\\<lambda>x s. Inr (C x s)) x)\""], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "lemma state_cont[simp]: \"state (cont cfg s) = s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. state (cont cfg s) = s", "by transfer (simp split: prod.split)"], ["", "lemma state_Cfg[simp]: \"state (Cfg s d' c') = s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. state (Cfg s d' c') = s", "by transfer simp"], ["", "lemma action_Cfg[simp]: \"action (Cfg s d' c') = d'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. action (Cfg s d' c') = d'", "by transfer simp"], ["", "lemma cont_Cfg[simp]: \"t \\<in> set_pmf d' \\<Longrightarrow> state (c' t) = t \\<Longrightarrow> cont (Cfg s d' c') t = c' t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t \\<in> set_pmf d'; state (c' t) = t\\<rbrakk>\n    \\<Longrightarrow> cont (Cfg s d' c') t = c' t", "by transfer (auto simp add: rel_prod_conv split: prod.split)"], ["", "lemma state_cfg_corec[simp]: \"state (cfg_corec s d c x) = s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. state (cfg_corec s d c x) = s", "by transfer auto"], ["", "lemma action_cfg_corec[simp]: \"action (cfg_corec s d c x) = d x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. action (cfg_corec s d c x) = d x", "by transfer auto"], ["", "lemma cont_cfg_corec[simp]: \"t \\<in> set_pmf (d x) \\<Longrightarrow> cont (cfg_corec s d c x) t = cfg_corec t d c (c x t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> set_pmf (d x) \\<Longrightarrow>\n    cont (cfg_corec s d c x) t = cfg_corec t d c (c x t)", "by transfer auto"], ["", "lemma cfg_coinduct[consumes 1, case_names state action cont, coinduct pred]:\n  \"X c d \\<Longrightarrow> (\\<And>c d. X c d \\<Longrightarrow> state c = state d) \\<Longrightarrow> (\\<And>c d. X c d \\<Longrightarrow> action c = action d) \\<Longrightarrow>\n    (\\<And>c d t. X c d \\<Longrightarrow> t \\<in> set_pmf (action c) \\<Longrightarrow> X (cont c t) (cont d t)) \\<Longrightarrow> c = d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>X c d; \\<And>c d. X c d \\<Longrightarrow> state c = state d;\n     \\<And>c d. X c d \\<Longrightarrow> action c = action d;\n     \\<And>c d t.\n        \\<lbrakk>X c d; t \\<in> set_pmf (action c)\\<rbrakk>\n        \\<Longrightarrow> X (cont c t) (cont d t)\\<rbrakk>\n    \\<Longrightarrow> c = d", "proof (transfer, clarsimp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X a b aa ba bb.\n       \\<lbrakk>X (a, b) (aa, ba);\n        \\<And>a b aa ba. X (a, b) (aa, ba) \\<Longrightarrow> a = aa;\n        \\<And>a b aa ba.\n           X (a, b) (aa, ba) \\<Longrightarrow> action_sch b = action_sch ba;\n        \\<And>a b aa ba t.\n           \\<lbrakk>X (a, b) (aa, ba);\n            t \\<in> set_pmf (action_sch ba)\\<rbrakk>\n           \\<Longrightarrow> X (t, cont_sch b t) (t, cont_sch ba t);\n        rel_fun cr_cfg (rel_fun cr_cfg (=)) X bb\\<rbrakk>\n       \\<Longrightarrow> eq_scheduler b ba", "fix X :: \"('a \\<times> 'a scheduler) \\<Rightarrow> ('a \\<times> 'a scheduler) \\<Rightarrow> bool\" and B s1 s2 sc1 sc2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>X a b aa ba bb.\n       \\<lbrakk>X (a, b) (aa, ba);\n        \\<And>a b aa ba. X (a, b) (aa, ba) \\<Longrightarrow> a = aa;\n        \\<And>a b aa ba.\n           X (a, b) (aa, ba) \\<Longrightarrow> action_sch b = action_sch ba;\n        \\<And>a b aa ba t.\n           \\<lbrakk>X (a, b) (aa, ba);\n            t \\<in> set_pmf (action_sch ba)\\<rbrakk>\n           \\<Longrightarrow> X (t, cont_sch b t) (t, cont_sch ba t);\n        rel_fun cr_cfg (rel_fun cr_cfg (=)) X bb\\<rbrakk>\n       \\<Longrightarrow> eq_scheduler b ba", "assume X: \"X (s1, sc1) (s2, sc2)\" and \"rel_fun cr_cfg (rel_fun cr_cfg (=)) X B\"\n    and 1: \"\\<And>s1 sc1 s2 sc2. X (s1, sc1) (s2, sc2) \\<Longrightarrow> s1 = s2\"\n    and 2: \"\\<And>s1 sc1 s2 sc2. X (s1, sc1) (s2, sc2) \\<Longrightarrow> action_sch sc1 = action_sch sc2\"\n    and 3: \"\\<And>s1 sc1 s2 sc2 t. X (s1, sc1) (s2, sc2) \\<Longrightarrow> t \\<in> set_pmf (action_sch sc2) \\<Longrightarrow>\n      X (t, cont_sch sc1 t) (t, cont_sch sc2 t)\""], ["proof (state)\nthis:\n  X (s1, sc1) (s2, sc2)\n  rel_fun cr_cfg (rel_fun cr_cfg (=)) X B\n  X (?s1.0, ?sc1.0) (?s2.0, ?sc2.0) \\<Longrightarrow> ?s1.0 = ?s2.0\n  X (?s1.0, ?sc1.0) (?s2.0, ?sc2.0) \\<Longrightarrow>\n  action_sch ?sc1.0 = action_sch ?sc2.0\n  \\<lbrakk>X (?s1.0, ?sc1.0) (?s2.0, ?sc2.0);\n   ?t \\<in> set_pmf (action_sch ?sc2.0)\\<rbrakk>\n  \\<Longrightarrow> X (?t, cont_sch ?sc1.0 ?t) (?t, cont_sch ?sc2.0 ?t)\n\ngoal (1 subgoal):\n 1. \\<And>X a b aa ba bb.\n       \\<lbrakk>X (a, b) (aa, ba);\n        \\<And>a b aa ba. X (a, b) (aa, ba) \\<Longrightarrow> a = aa;\n        \\<And>a b aa ba.\n           X (a, b) (aa, ba) \\<Longrightarrow> action_sch b = action_sch ba;\n        \\<And>a b aa ba t.\n           \\<lbrakk>X (a, b) (aa, ba);\n            t \\<in> set_pmf (action_sch ba)\\<rbrakk>\n           \\<Longrightarrow> X (t, cont_sch b t) (t, cont_sch ba t);\n        rel_fun cr_cfg (rel_fun cr_cfg (=)) X bb\\<rbrakk>\n       \\<Longrightarrow> eq_scheduler b ba", "from X"], ["proof (chain)\npicking this:\n  X (s1, sc1) (s2, sc2)", "show \"eq_scheduler sc1 sc2\""], ["proof (prove)\nusing this:\n  X (s1, sc1) (s2, sc2)\n\ngoal (1 subgoal):\n 1. eq_scheduler sc1 sc2", "by (coinduction arbitrary: s1 s2 sc1 sc2)\n       (blast dest: 2 3)"], ["proof (state)\nthis:\n  eq_scheduler sc1 sc2\n\ngoal:\nNo subgoals!", "qed"], ["", "coinductive rel_cfg :: \"('a \\<Rightarrow> 'b \\<Rightarrow> bool) \\<Rightarrow> 'a cfg \\<Rightarrow> 'b cfg \\<Rightarrow> bool\" for P :: \"'a \\<Rightarrow> 'b \\<Rightarrow> bool\"\nwhere\n  \"P (state cfg1) (state cfg2) \\<Longrightarrow>\n    rel_pmf (\\<lambda>s t. rel_cfg P (cont cfg1 s) (cont cfg2 t)) (action cfg1) (action cfg2) \\<Longrightarrow>\n    rel_cfg P cfg1 cfg2\""], ["", "lemma rel_cfg_state: \"rel_cfg P cfg1 cfg2 \\<Longrightarrow> P (state cfg1) (state cfg2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_cfg P cfg1 cfg2 \\<Longrightarrow> P (state cfg1) (state cfg2)", "by (auto elim: rel_cfg.cases)"], ["", "lemma rel_cfg_cont:\n  \"rel_cfg P cfg1 cfg2 \\<Longrightarrow>\n    rel_pmf (\\<lambda>s t. rel_cfg P (cont cfg1 s) (cont cfg2 t)) (action cfg1) (action cfg2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_cfg P cfg1 cfg2 \\<Longrightarrow>\n    rel_pmf (\\<lambda>s t. rel_cfg P (cont cfg1 s) (cont cfg2 t))\n     (action cfg1) (action cfg2)", "by (auto elim: rel_cfg.cases)"], ["", "lemma rel_cfg_action:\n  assumes P: \"rel_cfg P cfg1 cfg2\" shows \"rel_pmf P (action cfg1) (action cfg2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_pmf P (action cfg1) (action cfg2)", "proof (rule pmf.rel_mono_strong)"], ["proof (state)\ngoal (2 subgoals):\n 1. rel_pmf ?R (action cfg1) (action cfg2)\n 2. \\<And>z yb.\n       \\<lbrakk>z \\<in> set_pmf (action cfg1);\n        yb \\<in> set_pmf (action cfg2); ?R z yb\\<rbrakk>\n       \\<Longrightarrow> P z yb", "show \"rel_pmf (\\<lambda>s t. rel_cfg P (cont cfg1 s) (cont cfg2 t)) (action cfg1) (action cfg2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_pmf (\\<lambda>s t. rel_cfg P (cont cfg1 s) (cont cfg2 t))\n     (action cfg1) (action cfg2)", "using P"], ["proof (prove)\nusing this:\n  rel_cfg P cfg1 cfg2\n\ngoal (1 subgoal):\n 1. rel_pmf (\\<lambda>s t. rel_cfg P (cont cfg1 s) (cont cfg2 t))\n     (action cfg1) (action cfg2)", "by (rule rel_cfg_cont)"], ["proof (state)\nthis:\n  rel_pmf (\\<lambda>s t. rel_cfg P (cont cfg1 s) (cont cfg2 t))\n   (action cfg1) (action cfg2)\n\ngoal (1 subgoal):\n 1. \\<And>z yb.\n       \\<lbrakk>z \\<in> set_pmf (action cfg1);\n        yb \\<in> set_pmf (action cfg2);\n        rel_cfg P (cont cfg1 z) (cont cfg2 yb)\\<rbrakk>\n       \\<Longrightarrow> P z yb", "qed (auto dest: rel_cfg_state)"], ["", "lemma rel_cfg_eq: \"rel_cfg (=) cfg1 cfg2 \\<longleftrightarrow> cfg1 = cfg2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_cfg (=) cfg1 cfg2 = (cfg1 = cfg2)", "proof safe"], ["proof (state)\ngoal (2 subgoals):\n 1. rel_cfg (=) cfg1 cfg2 \\<Longrightarrow> cfg1 = cfg2\n 2. cfg1 = cfg2 \\<Longrightarrow> rel_cfg (=) cfg2 cfg2", "show \"rel_cfg (=) cfg1 cfg2 \\<Longrightarrow> cfg1 = cfg2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_cfg (=) cfg1 cfg2 \\<Longrightarrow> cfg1 = cfg2", "proof (coinduction arbitrary: cfg1 cfg2)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>cfg1 cfg2.\n       rel_cfg (=) cfg1 cfg2 \\<Longrightarrow> state cfg1 = state cfg2\n 2. \\<And>cfg1 cfg2.\n       rel_cfg (=) cfg1 cfg2 \\<Longrightarrow> action cfg1 = action cfg2\n 3. \\<And>t cfg1 cfg2.\n       \\<lbrakk>rel_cfg (=) cfg1 cfg2;\n        t \\<in> set_pmf (action cfg1)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>cfg1a cfg2a.\n                            cont cfg1 t = cfg1a \\<and>\n                            cont cfg2 t = cfg2a \\<and>\n                            rel_cfg (=) cfg1a cfg2a", "case cont"], ["proof (state)\nthis:\n  rel_cfg (=) cfg1 cfg2\n  t \\<in> set_pmf (action cfg1)\n\ngoal (3 subgoals):\n 1. \\<And>cfg1 cfg2.\n       rel_cfg (=) cfg1 cfg2 \\<Longrightarrow> state cfg1 = state cfg2\n 2. \\<And>cfg1 cfg2.\n       rel_cfg (=) cfg1 cfg2 \\<Longrightarrow> action cfg1 = action cfg2\n 3. \\<And>t cfg1 cfg2.\n       \\<lbrakk>rel_cfg (=) cfg1 cfg2;\n        t \\<in> set_pmf (action cfg1)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>cfg1a cfg2a.\n                            cont cfg1 t = cfg1a \\<and>\n                            cont cfg2 t = cfg2a \\<and>\n                            rel_cfg (=) cfg1a cfg2a", "have \"action cfg1 = action cfg2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. action cfg1 = action cfg2", "using \\<open>rel_cfg (=) cfg1 cfg2\\<close>"], ["proof (prove)\nusing this:\n  rel_cfg (=) cfg1 cfg2\n\ngoal (1 subgoal):\n 1. action cfg1 = action cfg2", "by (auto dest: rel_cfg_action simp: pmf.rel_eq)"], ["proof (state)\nthis:\n  action cfg1 = action cfg2\n\ngoal (3 subgoals):\n 1. \\<And>cfg1 cfg2.\n       rel_cfg (=) cfg1 cfg2 \\<Longrightarrow> state cfg1 = state cfg2\n 2. \\<And>cfg1 cfg2.\n       rel_cfg (=) cfg1 cfg2 \\<Longrightarrow> action cfg1 = action cfg2\n 3. \\<And>t cfg1 cfg2.\n       \\<lbrakk>rel_cfg (=) cfg1 cfg2;\n        t \\<in> set_pmf (action cfg1)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>cfg1a cfg2a.\n                            cont cfg1 t = cfg1a \\<and>\n                            cont cfg2 t = cfg2a \\<and>\n                            rel_cfg (=) cfg1a cfg2a", "then"], ["proof (chain)\npicking this:\n  action cfg1 = action cfg2", "have \"rel_pmf (\\<lambda>s t. rel_cfg (=) (cont cfg1 s) (cont cfg2 t)) (action cfg1) (action cfg1)\""], ["proof (prove)\nusing this:\n  action cfg1 = action cfg2\n\ngoal (1 subgoal):\n 1. rel_pmf (\\<lambda>s t. rel_cfg (=) (cont cfg1 s) (cont cfg2 t))\n     (action cfg1) (action cfg1)", "using cont"], ["proof (prove)\nusing this:\n  action cfg1 = action cfg2\n  rel_cfg (=) cfg1 cfg2\n  t \\<in> set_pmf (action cfg1)\n\ngoal (1 subgoal):\n 1. rel_pmf (\\<lambda>s t. rel_cfg (=) (cont cfg1 s) (cont cfg2 t))\n     (action cfg1) (action cfg1)", "by (auto dest: rel_cfg_cont)"], ["proof (state)\nthis:\n  rel_pmf (\\<lambda>s t. rel_cfg (=) (cont cfg1 s) (cont cfg2 t))\n   (action cfg1) (action cfg1)\n\ngoal (3 subgoals):\n 1. \\<And>cfg1 cfg2.\n       rel_cfg (=) cfg1 cfg2 \\<Longrightarrow> state cfg1 = state cfg2\n 2. \\<And>cfg1 cfg2.\n       rel_cfg (=) cfg1 cfg2 \\<Longrightarrow> action cfg1 = action cfg2\n 3. \\<And>t cfg1 cfg2.\n       \\<lbrakk>rel_cfg (=) cfg1 cfg2;\n        t \\<in> set_pmf (action cfg1)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>cfg1a cfg2a.\n                            cont cfg1 t = cfg1a \\<and>\n                            cont cfg2 t = cfg2a \\<and>\n                            rel_cfg (=) cfg1a cfg2a", "then"], ["proof (chain)\npicking this:\n  rel_pmf (\\<lambda>s t. rel_cfg (=) (cont cfg1 s) (cont cfg2 t))\n   (action cfg1) (action cfg1)", "have \"rel_pmf (\\<lambda>s t. rel_cfg (=) (cont cfg1 s) (cont cfg2 t) \\<and> s = t) (action cfg1) (action cfg1)\""], ["proof (prove)\nusing this:\n  rel_pmf (\\<lambda>s t. rel_cfg (=) (cont cfg1 s) (cont cfg2 t))\n   (action cfg1) (action cfg1)\n\ngoal (1 subgoal):\n 1. rel_pmf\n     (\\<lambda>s t. rel_cfg (=) (cont cfg1 s) (cont cfg2 t) \\<and> s = t)\n     (action cfg1) (action cfg1)", "by (rule pmf.rel_mono_strong) (auto dest: rel_cfg_state)"], ["proof (state)\nthis:\n  rel_pmf\n   (\\<lambda>s t. rel_cfg (=) (cont cfg1 s) (cont cfg2 t) \\<and> s = t)\n   (action cfg1) (action cfg1)\n\ngoal (3 subgoals):\n 1. \\<And>cfg1 cfg2.\n       rel_cfg (=) cfg1 cfg2 \\<Longrightarrow> state cfg1 = state cfg2\n 2. \\<And>cfg1 cfg2.\n       rel_cfg (=) cfg1 cfg2 \\<Longrightarrow> action cfg1 = action cfg2\n 3. \\<And>t cfg1 cfg2.\n       \\<lbrakk>rel_cfg (=) cfg1 cfg2;\n        t \\<in> set_pmf (action cfg1)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>cfg1a cfg2a.\n                            cont cfg1 t = cfg1a \\<and>\n                            cont cfg2 t = cfg2a \\<and>\n                            rel_cfg (=) cfg1a cfg2a", "then"], ["proof (chain)\npicking this:\n  rel_pmf\n   (\\<lambda>s t. rel_cfg (=) (cont cfg1 s) (cont cfg2 t) \\<and> s = t)\n   (action cfg1) (action cfg1)", "have \"pred_pmf (\\<lambda>s. rel_cfg (=) (cont cfg1 s) (cont cfg2 s)) (action cfg1)\""], ["proof (prove)\nusing this:\n  rel_pmf\n   (\\<lambda>s t. rel_cfg (=) (cont cfg1 s) (cont cfg2 t) \\<and> s = t)\n   (action cfg1) (action cfg1)\n\ngoal (1 subgoal):\n 1. pred_pmf (\\<lambda>s. rel_cfg (=) (cont cfg1 s) (cont cfg2 s))\n     (action cfg1)", "unfolding pmf.pred_rel"], ["proof (prove)\nusing this:\n  rel_pmf\n   (\\<lambda>s t. rel_cfg (=) (cont cfg1 s) (cont cfg2 t) \\<and> s = t)\n   (action cfg1) (action cfg1)\n\ngoal (1 subgoal):\n 1. rel_pmf (eq_onp (\\<lambda>s. rel_cfg (=) (cont cfg1 s) (cont cfg2 s)))\n     (action cfg1) (action cfg1)", "by (rule pmf.rel_mono_strong) (auto simp: eq_onp_def)"], ["proof (state)\nthis:\n  pred_pmf (\\<lambda>s. rel_cfg (=) (cont cfg1 s) (cont cfg2 s))\n   (action cfg1)\n\ngoal (3 subgoals):\n 1. \\<And>cfg1 cfg2.\n       rel_cfg (=) cfg1 cfg2 \\<Longrightarrow> state cfg1 = state cfg2\n 2. \\<And>cfg1 cfg2.\n       rel_cfg (=) cfg1 cfg2 \\<Longrightarrow> action cfg1 = action cfg2\n 3. \\<And>t cfg1 cfg2.\n       \\<lbrakk>rel_cfg (=) cfg1 cfg2;\n        t \\<in> set_pmf (action cfg1)\\<rbrakk>\n       \\<Longrightarrow> \\<exists>cfg1a cfg2a.\n                            cont cfg1 t = cfg1a \\<and>\n                            cont cfg2 t = cfg2a \\<and>\n                            rel_cfg (=) cfg1a cfg2a", "with \\<open>t \\<in> action cfg1\\<close>"], ["proof (chain)\npicking this:\n  t \\<in> set_pmf (action cfg1)\n  pred_pmf (\\<lambda>s. rel_cfg (=) (cont cfg1 s) (cont cfg2 s))\n   (action cfg1)", "show ?case"], ["proof (prove)\nusing this:\n  t \\<in> set_pmf (action cfg1)\n  pred_pmf (\\<lambda>s. rel_cfg (=) (cont cfg1 s) (cont cfg2 s))\n   (action cfg1)\n\ngoal (1 subgoal):\n 1. \\<exists>cfg1 cfg2.\n       cont cfg1 t = cfg1 \\<and>\n       cont cfg2 t = cfg2 \\<and> rel_cfg (=) cfg1 cfg2", "by (auto simp: pmf.pred_set)"], ["proof (state)\nthis:\n  \\<exists>cfg1 cfg2.\n     cont cfg1 t = cfg1 \\<and>\n     cont cfg2 t = cfg2 \\<and> rel_cfg (=) cfg1 cfg2\n\ngoal (2 subgoals):\n 1. \\<And>cfg1 cfg2.\n       rel_cfg (=) cfg1 cfg2 \\<Longrightarrow> state cfg1 = state cfg2\n 2. \\<And>cfg1 cfg2.\n       rel_cfg (=) cfg1 cfg2 \\<Longrightarrow> action cfg1 = action cfg2", "qed (auto dest: rel_cfg_state rel_cfg_action simp: pmf.rel_eq)"], ["proof (state)\nthis:\n  rel_cfg (=) cfg1 cfg2 \\<Longrightarrow> cfg1 = cfg2\n\ngoal (1 subgoal):\n 1. cfg1 = cfg2 \\<Longrightarrow> rel_cfg (=) cfg2 cfg2", "show \"rel_cfg (=) cfg2 cfg2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rel_cfg (=) cfg2 cfg2", "by (coinduction arbitrary: cfg2) (auto intro!: rel_pmf_reflI)"], ["proof (state)\nthis:\n  rel_cfg (=) cfg2 cfg2\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Configuration with Memoryless Scheduler\\<close>"], ["", "definition \"memoryless_on f s = cfg_corec s f (\\<lambda>_ t. t) s\""], ["", "lemma\n  shows state_memoryless_on[simp]: \"state (memoryless_on f s) = s\"\n    and action_memoryless_on[simp]: \"action (memoryless_on f s) = f s\"\n    and cont_memoryless_on[simp]: \"t \\<in> (f s) \\<Longrightarrow> cont (memoryless_on f s) t = memoryless_on f t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. state (memoryless_on f s) = s &&&\n    action (memoryless_on f s) = f s &&&\n    (t \\<in> set_pmf (f s) \\<Longrightarrow>\n     cont (memoryless_on f s) t = memoryless_on f t)", "by (simp_all add: memoryless_on_def)"], ["", "definition K_cfg :: \"'s cfg \\<Rightarrow> 's cfg pmf\" where\n  \"K_cfg cfg = map_pmf (cont cfg) (action cfg)\""], ["", "lemma set_K_cfg: \"set_pmf (K_cfg cfg) = cont cfg ` set_pmf (action cfg)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_pmf (K_cfg cfg) = cont cfg ` set_pmf (action cfg)", "by (simp add: K_cfg_def)"], ["", "lemma nn_integral_K_cfg: \"(\\<integral>\\<^sup>+cfg. f cfg \\<partial>K_cfg cfg) = (\\<integral>\\<^sup>+s. f (cont cfg s) \\<partial>action cfg)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral\\<^sup>N (measure_pmf (K_cfg cfg)) f =\n    \\<integral>\\<^sup>+ s. f (cont cfg s) \\<partial>measure_pmf (action cfg)", "by (simp add: K_cfg_def map_pmf_rep_eq nn_integral_distr)"], ["", "subsection \\<open>MDP Kernel and Induced Configurations\\<close>"], ["", "locale Markov_Decision_Process =\n  fixes K :: \"'s \\<Rightarrow> 's pmf set\"\n  assumes K_wf: \"\\<And>s. K s \\<noteq> {}\"\nbegin"], ["", "definition \"E = (SIGMA s:UNIV. \\<Union>D\\<in>K s. set_pmf D)\""], ["", "coinductive cfg_onp :: \"'s \\<Rightarrow> 's cfg \\<Rightarrow> bool\" where\n  \"\\<And>s. state cfg = s \\<Longrightarrow> action cfg \\<in> K s \\<Longrightarrow> (\\<And>t. t \\<in> action cfg \\<Longrightarrow> cfg_onp t (cont cfg t)) \\<Longrightarrow>\n    cfg_onp s cfg\""], ["", "definition \"cfg_on s = {cfg. cfg_onp s cfg}\""], ["", "lemma\n  shows cfg_onD_action[intro, simp]: \"cfg \\<in> cfg_on s \\<Longrightarrow> action cfg \\<in> K s\"\n    and cfg_onD_cont[intro, simp]: \"cfg \\<in> cfg_on s \\<Longrightarrow> t \\<in> action cfg \\<Longrightarrow> cont cfg t \\<in> cfg_on t\"\n    and cfg_onD_state[simp]: \"cfg \\<in> cfg_on s \\<Longrightarrow> state cfg = s\"\n    and cfg_onI: \"state cfg = s \\<Longrightarrow> action cfg \\<in> K s \\<Longrightarrow> (\\<And>t. t \\<in> action cfg \\<Longrightarrow> cont cfg t \\<in> cfg_on t) \\<Longrightarrow> cfg \\<in> cfg_on s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((cfg \\<in> cfg_on s \\<Longrightarrow> action cfg \\<in> K s) &&&\n     (\\<lbrakk>cfg \\<in> cfg_on s; t \\<in> set_pmf (action cfg)\\<rbrakk>\n      \\<Longrightarrow> cont cfg t \\<in> cfg_on t)) &&&\n    (cfg \\<in> cfg_on s \\<Longrightarrow> state cfg = s) &&&\n    (\\<lbrakk>state cfg = s; action cfg \\<in> K s;\n      \\<And>t.\n         t \\<in> set_pmf (action cfg) \\<Longrightarrow>\n         cont cfg t \\<in> cfg_on t\\<rbrakk>\n     \\<Longrightarrow> cfg \\<in> cfg_on s)", "by (auto simp: cfg_on_def intro: cfg_onp.intros elim: cfg_onp.cases)"], ["", "lemma cfg_on_coinduct[coinduct set: cfg_on]:\n  assumes \"P s cfg\"\n  assumes \"\\<And>cfg s. P s cfg \\<Longrightarrow> state cfg = s\"\n  assumes \"\\<And>cfg s. P s cfg \\<Longrightarrow> action cfg \\<in> K s\"\n  assumes \"\\<And>cfg s t. P s cfg \\<Longrightarrow> t \\<in> action cfg \\<Longrightarrow> P t (cont cfg t)\"\n  shows \"cfg \\<in> cfg_on s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cfg \\<in> cfg_on s", "using assms cfg_onp.coinduct[of P s cfg]"], ["proof (prove)\nusing this:\n  P s cfg\n  P ?s ?cfg \\<Longrightarrow> state ?cfg = ?s\n  P ?s ?cfg \\<Longrightarrow> action ?cfg \\<in> K ?s\n  \\<lbrakk>P ?s ?cfg; ?t \\<in> set_pmf (action ?cfg)\\<rbrakk>\n  \\<Longrightarrow> P ?t (cont ?cfg ?t)\n  \\<lbrakk>P s cfg;\n   \\<And>x1 x2.\n      P x1 x2 \\<Longrightarrow>\n      \\<exists>cfg s.\n         x1 = s \\<and>\n         x2 = cfg \\<and>\n         state cfg = s \\<and>\n         action cfg \\<in> K s \\<and>\n         (\\<forall>x.\n             x \\<in> set_pmf (action cfg) \\<longrightarrow>\n             P x (cont cfg x) \\<or> cfg_onp x (cont cfg x))\\<rbrakk>\n  \\<Longrightarrow> cfg_onp s cfg\n\ngoal (1 subgoal):\n 1. cfg \\<in> cfg_on s", "by (simp add: cfg_on_def)"], ["", "lemma memoryless_on_cfg_onI:\n  assumes \"\\<And>s. f s \\<in> K s\"\n  shows \"memoryless_on f s \\<in> cfg_on s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. memoryless_on f s \\<in> cfg_on s", "by (coinduction arbitrary: s) (auto intro: assms)"], ["", "lemma cfg_of_cfg_onI:\n  \"D \\<in> K s \\<Longrightarrow> (\\<And>t. t \\<in> D \\<Longrightarrow> c t \\<in> cfg_on t) \\<Longrightarrow> Cfg s D c \\<in> cfg_on s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>D \\<in> K s;\n     \\<And>t.\n        t \\<in> set_pmf D \\<Longrightarrow> c t \\<in> cfg_on t\\<rbrakk>\n    \\<Longrightarrow> Cfg s D c \\<in> cfg_on s", "by (rule cfg_onI) auto"], ["", "definition \"arb_act s = (SOME D. D \\<in> K s)\""], ["", "lemma arb_actI[simp]: \"arb_act s \\<in> K s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arb_act s \\<in> K s", "by (simp add: arb_act_def some_in_eq K_wf)"], ["", "lemma cfg_on_not_empty[intro, simp]: \"cfg_on s \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cfg_on s \\<noteq> {}", "by (auto intro: memoryless_on_cfg_onI arb_actI)"], ["", "sublocale MC: MC_syntax K_cfg"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "abbreviation St :: \"'s stream measure\" where\n  \"St \\<equiv> stream_space (count_space UNIV)\""], ["", "subsection \\<open>Trace Space\\<close>"], ["", "definition \"T cfg = distr (MC.T cfg) St (smap state)\""], ["", "sublocale T: prob_space \"T cfg\" for cfg"], ["proof (prove)\ngoal (1 subgoal):\n 1. prob_space (T cfg)", "by (simp add: T_def MC.T.prob_space_distr)"], ["", "lemma space_T[simp]: \"space (T cfg) = space St\""], ["proof (prove)\ngoal (1 subgoal):\n 1. space (T cfg) = space St", "by (simp add: T_def)"], ["", "lemma sets_T[simp]: \"sets (T cfg) = sets St\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T.events cfg = sets St", "by (simp add: T_def)"], ["", "lemma measurable_T1[simp]: \"measurable (T cfg) N = measurable St N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T cfg \\<rightarrow>\\<^sub>M N = St \\<rightarrow>\\<^sub>M N", "by (simp add: T_def)"], ["", "lemma measurable_T2[simp]: \"measurable N (T cfg) = measurable N St\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N \\<rightarrow>\\<^sub>M T cfg = N \\<rightarrow>\\<^sub>M St", "by (simp add: T_def)"], ["", "lemma nn_integral_T:\n  assumes [measurable]: \"f \\<in> borel_measurable St\"\n  shows \"(\\<integral>\\<^sup>+X. f X \\<partial>T cfg) = (\\<integral>\\<^sup>+cfg'. (\\<integral>\\<^sup>+x. f (state cfg' ## x) \\<partial>T cfg') \\<partial>K_cfg cfg)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral\\<^sup>N (T cfg) f =\n    \\<integral>\\<^sup>+ cfg'.\n                         \\<integral>\\<^sup>+ x. f (state cfg' ## x)\n      \\<partial>T cfg'\n                       \\<partial>measure_pmf (K_cfg cfg)", "by (simp add: T_def MC.nn_integral_T[of _ cfg] nn_integral_distr)"], ["", "lemma T_eq:\n  \"T cfg = (measure_pmf (K_cfg cfg) \\<bind> (\\<lambda>cfg'. distr (T cfg') St (\\<lambda>\\<omega>. state cfg' ## \\<omega>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T cfg =\n    measure_pmf (K_cfg cfg) \\<bind>\n    (\\<lambda>cfg'. distr (T cfg') St ((##) (state cfg')))", "proof (rule measure_eqI)"], ["proof (state)\ngoal (2 subgoals):\n 1. T.events cfg =\n    sets\n     (measure_pmf (K_cfg cfg) \\<bind>\n      (\\<lambda>cfg'. distr (T cfg') St ((##) (state cfg'))))\n 2. \\<And>A.\n       A \\<in> T.events cfg \\<Longrightarrow>\n       emeasure (T cfg) A =\n       emeasure\n        (measure_pmf (K_cfg cfg) \\<bind>\n         (\\<lambda>cfg'. distr (T cfg') St ((##) (state cfg'))))\n        A", "fix A"], ["proof (state)\ngoal (2 subgoals):\n 1. T.events cfg =\n    sets\n     (measure_pmf (K_cfg cfg) \\<bind>\n      (\\<lambda>cfg'. distr (T cfg') St ((##) (state cfg'))))\n 2. \\<And>A.\n       A \\<in> T.events cfg \\<Longrightarrow>\n       emeasure (T cfg) A =\n       emeasure\n        (measure_pmf (K_cfg cfg) \\<bind>\n         (\\<lambda>cfg'. distr (T cfg') St ((##) (state cfg'))))\n        A", "assume \"A \\<in> sets (T cfg)\""], ["proof (state)\nthis:\n  A \\<in> T.events cfg\n\ngoal (2 subgoals):\n 1. T.events cfg =\n    sets\n     (measure_pmf (K_cfg cfg) \\<bind>\n      (\\<lambda>cfg'. distr (T cfg') St ((##) (state cfg'))))\n 2. \\<And>A.\n       A \\<in> T.events cfg \\<Longrightarrow>\n       emeasure (T cfg) A =\n       emeasure\n        (measure_pmf (K_cfg cfg) \\<bind>\n         (\\<lambda>cfg'. distr (T cfg') St ((##) (state cfg'))))\n        A", "then"], ["proof (chain)\npicking this:\n  A \\<in> T.events cfg", "show \"emeasure (T cfg) A =\n    emeasure (measure_pmf (K_cfg cfg) \\<bind> (\\<lambda>cfg'. distr (T cfg') St (\\<lambda>\\<omega>. state cfg' ## \\<omega>))) A\""], ["proof (prove)\nusing this:\n  A \\<in> T.events cfg\n\ngoal (1 subgoal):\n 1. emeasure (T cfg) A =\n    emeasure\n     (measure_pmf (K_cfg cfg) \\<bind>\n      (\\<lambda>cfg'. distr (T cfg') St ((##) (state cfg'))))\n     A", "by (subst emeasure_bind[where N=St])\n       (auto simp: space_subprob_algebra nn_integral_distr nn_integral_indicator[symmetric] nn_integral_T[of _ cfg]\n             simp del: nn_integral_indicator intro!: prob_space_imp_subprob_space T.prob_space_distr)"], ["proof (state)\nthis:\n  emeasure (T cfg) A =\n  emeasure\n   (measure_pmf (K_cfg cfg) \\<bind>\n    (\\<lambda>cfg'. distr (T cfg') St ((##) (state cfg'))))\n   A\n\ngoal (1 subgoal):\n 1. T.events cfg =\n    sets\n     (measure_pmf (K_cfg cfg) \\<bind>\n      (\\<lambda>cfg'. distr (T cfg') St ((##) (state cfg'))))", "qed simp"], ["", "lemma T_memoryless_on: \"T (memoryless_on ct s) = MC_syntax.T ct s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T (memoryless_on ct s) = MC_syntax.T ct s", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. T (memoryless_on ct s) = MC_syntax.T ct s", "interpret ct: MC_syntax ct"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["proof (state)\ngoal (1 subgoal):\n 1. T (memoryless_on ct s) = ct.T s", "have \"T \\<circ> (memoryless_on ct) = MC_syntax.T ct\""], ["proof (prove)\ngoal (1 subgoal):\n 1. T \\<circ> memoryless_on ct = ct.T", "proof (rule ct.T_bisim[symmetric])"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x. prob_space ((T \\<circ> memoryless_on ct) x)\n 2. \\<And>x. sets ((T \\<circ> memoryless_on ct) x) = sets St\n 3. \\<And>x.\n       (T \\<circ> memoryless_on ct) x =\n       measure_pmf (ct x) \\<bind>\n       (\\<lambda>s. distr ((T \\<circ> memoryless_on ct) s) St ((##) s))", "fix s"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x. prob_space ((T \\<circ> memoryless_on ct) x)\n 2. \\<And>x. sets ((T \\<circ> memoryless_on ct) x) = sets St\n 3. \\<And>x.\n       (T \\<circ> memoryless_on ct) x =\n       measure_pmf (ct x) \\<bind>\n       (\\<lambda>s. distr ((T \\<circ> memoryless_on ct) s) St ((##) s))", "show \"(T \\<circ> memoryless_on ct) s =\n        measure_pmf (ct s) \\<bind> (\\<lambda>s. distr ((T \\<circ> memoryless_on ct) s) St ((##) s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (T \\<circ> memoryless_on ct) s =\n    measure_pmf (ct s) \\<bind>\n    (\\<lambda>s. distr ((T \\<circ> memoryless_on ct) s) St ((##) s))", "by (auto simp add: T_eq[of \"memoryless_on ct s\"] K_cfg_def map_pmf_rep_eq bind_distr[where K=St]\n                         space_subprob_algebra T.prob_space_distr prob_space_imp_subprob_space\n               intro!: bind_measure_pmf_cong)"], ["proof (state)\nthis:\n  (T \\<circ> memoryless_on ct) s =\n  measure_pmf (ct s) \\<bind>\n  (\\<lambda>s. distr ((T \\<circ> memoryless_on ct) s) St ((##) s))\n\ngoal (2 subgoals):\n 1. \\<And>x. prob_space ((T \\<circ> memoryless_on ct) x)\n 2. \\<And>x. sets ((T \\<circ> memoryless_on ct) x) = sets St", "qed (simp_all, intro_locales)"], ["proof (state)\nthis:\n  T \\<circ> memoryless_on ct = ct.T\n\ngoal (1 subgoal):\n 1. T (memoryless_on ct s) = ct.T s", "then"], ["proof (chain)\npicking this:\n  T \\<circ> memoryless_on ct = ct.T", "show ?thesis"], ["proof (prove)\nusing this:\n  T \\<circ> memoryless_on ct = ct.T\n\ngoal (1 subgoal):\n 1. T (memoryless_on ct s) = ct.T s", "by (simp add: fun_eq_iff)"], ["proof (state)\nthis:\n  T (memoryless_on ct s) = ct.T s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nn_integral_T_lfp:\n  assumes [measurable]: \"case_prod g \\<in> borel_measurable (count_space UNIV \\<Otimes>\\<^sub>M borel)\"\n  assumes cont_g: \"\\<And>s. sup_continuous (g s)\"\n  assumes int_g: \"\\<And>f cfg. f \\<in> borel_measurable (stream_space (count_space UNIV)) \\<Longrightarrow>\n    (\\<integral>\\<^sup>+\\<omega>. g (state cfg) (f \\<omega>) \\<partial>T cfg) = g (state cfg) (\\<integral>\\<^sup>+\\<omega>. f \\<omega> \\<partial>T cfg)\"\n  shows \"(\\<integral>\\<^sup>+\\<omega>. lfp (\\<lambda>f \\<omega>. g (shd \\<omega>) (f (stl \\<omega>))) \\<omega> \\<partial>T cfg) =\n    lfp (\\<lambda>f cfg. \\<integral>\\<^sup>+t. g (state t) (f t) \\<partial>K_cfg cfg) cfg\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral\\<^sup>N (T cfg)\n     (lfp (\\<lambda>f \\<omega>. g (shd \\<omega>) (f (stl \\<omega>)))) =\n    lfp (\\<lambda>f cfg.\n            \\<integral>\\<^sup>+ t. g (state t) (f t)\n                               \\<partial>measure_pmf (K_cfg cfg))\n     cfg", "proof (rule nn_integral_lfp)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>s. T.events s = sets ?N\n 2. sup_continuous (\\<lambda>a b. g (shd b) (a (stl b)))\n 3. sup_continuous\n     (\\<lambda>f cfg.\n         \\<integral>\\<^sup>+ t. g (state t) (f t)\n                            \\<partial>measure_pmf (K_cfg cfg))\n 4. \\<And>F.\n       F \\<in> borel_measurable ?N \\<Longrightarrow>\n       (\\<lambda>a. g (shd a) (F (stl a))) \\<in> borel_measurable ?N\n 5. \\<And>F s.\n       F \\<in> borel_measurable ?N \\<Longrightarrow>\n       \\<integral>\\<^sup>+ a. g (shd a) (F (stl a)) \\<partial>T s =\n       \\<integral>\\<^sup>+ t. g (state t) (integral\\<^sup>N (T t) F)\n                          \\<partial>measure_pmf (K_cfg s)", "show \"\\<And>s. sets (T s) = sets St\"\n      \"\\<And>F. F \\<in> borel_measurable St \\<Longrightarrow> (\\<lambda>a. g (shd a) (F (stl a))) \\<in> borel_measurable St\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s. T.events s = sets St) &&&\n    (\\<And>F.\n        F \\<in> borel_measurable St \\<Longrightarrow>\n        (\\<lambda>a. g (shd a) (F (stl a))) \\<in> borel_measurable St)", "by auto"], ["proof (state)\nthis:\n  T.events ?s1 = sets St\n  ?F1 \\<in> borel_measurable St \\<Longrightarrow>\n  (\\<lambda>a. g (shd a) (?F1 (stl a))) \\<in> borel_measurable St\n\ngoal (3 subgoals):\n 1. sup_continuous (\\<lambda>a b. g (shd b) (a (stl b)))\n 2. sup_continuous\n     (\\<lambda>f cfg.\n         \\<integral>\\<^sup>+ t. g (state t) (f t)\n                            \\<partial>measure_pmf (K_cfg cfg))\n 3. \\<And>F s.\n       F \\<in> borel_measurable St \\<Longrightarrow>\n       \\<integral>\\<^sup>+ a. g (shd a) (F (stl a)) \\<partial>T s =\n       \\<integral>\\<^sup>+ t. g (state t) (integral\\<^sup>N (T t) F)\n                          \\<partial>measure_pmf (K_cfg s)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. sup_continuous (\\<lambda>a b. g (shd b) (a (stl b)))\n 2. sup_continuous\n     (\\<lambda>f cfg.\n         \\<integral>\\<^sup>+ t. g (state t) (f t)\n                            \\<partial>measure_pmf (K_cfg cfg))\n 3. \\<And>F s.\n       F \\<in> borel_measurable St \\<Longrightarrow>\n       \\<integral>\\<^sup>+ a. g (shd a) (F (stl a)) \\<partial>T s =\n       \\<integral>\\<^sup>+ t. g (state t) (integral\\<^sup>N (T t) F)\n                          \\<partial>measure_pmf (K_cfg s)", "fix s and F :: \"'s stream \\<Rightarrow> ennreal\""], ["proof (state)\ngoal (3 subgoals):\n 1. sup_continuous (\\<lambda>a b. g (shd b) (a (stl b)))\n 2. sup_continuous\n     (\\<lambda>f cfg.\n         \\<integral>\\<^sup>+ t. g (state t) (f t)\n                            \\<partial>measure_pmf (K_cfg cfg))\n 3. \\<And>F s.\n       F \\<in> borel_measurable St \\<Longrightarrow>\n       \\<integral>\\<^sup>+ a. g (shd a) (F (stl a)) \\<partial>T s =\n       \\<integral>\\<^sup>+ t. g (state t) (integral\\<^sup>N (T t) F)\n                          \\<partial>measure_pmf (K_cfg s)", "assume \"F \\<in> borel_measurable St\""], ["proof (state)\nthis:\n  F \\<in> borel_measurable St\n\ngoal (3 subgoals):\n 1. sup_continuous (\\<lambda>a b. g (shd b) (a (stl b)))\n 2. sup_continuous\n     (\\<lambda>f cfg.\n         \\<integral>\\<^sup>+ t. g (state t) (f t)\n                            \\<partial>measure_pmf (K_cfg cfg))\n 3. \\<And>F s.\n       F \\<in> borel_measurable St \\<Longrightarrow>\n       \\<integral>\\<^sup>+ a. g (shd a) (F (stl a)) \\<partial>T s =\n       \\<integral>\\<^sup>+ t. g (state t) (integral\\<^sup>N (T t) F)\n                          \\<partial>measure_pmf (K_cfg s)", "then"], ["proof (chain)\npicking this:\n  F \\<in> borel_measurable St", "show \"(\\<integral>\\<^sup>+ a. g (shd a) (F (stl a)) \\<partial>T s) =\n           (\\<integral>\\<^sup>+ cfg. g (state cfg) (integral\\<^sup>N (T cfg) F) \\<partial>K_cfg s)\""], ["proof (prove)\nusing this:\n  F \\<in> borel_measurable St\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ a. g (shd a) (F (stl a)) \\<partial>T s =\n    \\<integral>\\<^sup>+ cfg. g (state cfg) (integral\\<^sup>N (T cfg) F)\n                       \\<partial>measure_pmf (K_cfg s)", "by (rewrite nn_integral_T) (simp_all add: int_g)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ a. g (shd a) (F (stl a)) \\<partial>T s =\n  \\<integral>\\<^sup>+ cfg. g (state cfg) (integral\\<^sup>N (T cfg) F)\n                     \\<partial>measure_pmf (K_cfg s)\n\ngoal (2 subgoals):\n 1. sup_continuous (\\<lambda>a b. g (shd b) (a (stl b)))\n 2. sup_continuous\n     (\\<lambda>f cfg.\n         \\<integral>\\<^sup>+ t. g (state t) (f t)\n                            \\<partial>measure_pmf (K_cfg cfg))", "qed (auto intro!: order_continuous_intros cont_g[THEN sup_continuous_compose])"], ["", "lemma emeasure_Collect_T:\n  assumes [measurable]: \"Measurable.pred St P\"\n  shows \"emeasure (T cfg) {x\\<in>space St. P x} =\n    (\\<integral>\\<^sup>+cfg'. emeasure (T cfg') {x\\<in>space St. P (state cfg' ## x)} \\<partial>K_cfg cfg)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure (T cfg) {x \\<in> space St. P x} =\n    \\<integral>\\<^sup>+ cfg'.\n                         emeasure (T cfg')\n                          {x \\<in> space St. P (state cfg' ## x)}\n                       \\<partial>measure_pmf (K_cfg cfg)", "using MC.emeasure_Collect_T[of \"\\<lambda>x. P (smap state x)\" cfg]"], ["proof (prove)\nusing this:\n  Measurable.pred (stream_space (count_space UNIV))\n   (\\<lambda>x. P (smap state x)) \\<Longrightarrow>\n  emeasure (MC.T cfg) {x \\<in> space (MC.T cfg). P (smap state x)} =\n  \\<integral>\\<^sup>+ t. emeasure (MC.T t)\n                          {x \\<in> space (MC.T t). P (smap state (t ## x))}\n                     \\<partial>measure_pmf (K_cfg cfg)\n\ngoal (1 subgoal):\n 1. emeasure (T cfg) {x \\<in> space St. P x} =\n    \\<integral>\\<^sup>+ cfg'.\n                         emeasure (T cfg')\n                          {x \\<in> space St. P (state cfg' ## x)}\n                       \\<partial>measure_pmf (K_cfg cfg)", "by (simp add: nn_integral_distr emeasure_Collect_distr T_def)"], ["", "definition E_sup :: \"'s \\<Rightarrow> ('s stream \\<Rightarrow> ennreal) \\<Rightarrow> ennreal\"\nwhere\n  \"E_sup s f = (\\<Squnion>cfg\\<in>cfg_on s. \\<integral>\\<^sup>+x. f x \\<partial>T cfg)\""], ["", "lemma E_sup_const: \"0 \\<le> c \\<Longrightarrow> E_sup s (\\<lambda>_. c) = c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> c \\<Longrightarrow> E_sup s (\\<lambda>_. c) = c", "using T.emeasure_space_1"], ["proof (prove)\nusing this:\n  emeasure (T ?cfg) (space (T ?cfg)) = 1\n\ngoal (1 subgoal):\n 1. 0 \\<le> c \\<Longrightarrow> E_sup s (\\<lambda>_. c) = c", "by (simp add: E_sup_def)"], ["", "lemma E_sup_mult_right:\n  assumes [measurable]: \"f \\<in> borel_measurable St\" and [simp]: \"0 \\<le> c\"\n  shows \"E_sup s (\\<lambda>x. c * f x) = c * E_sup s f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. E_sup s (\\<lambda>x. c * f x) = c * E_sup s f", "by (simp add: nn_integral_cmult E_sup_def SUP_mult_left_ennreal)"], ["", "lemma E_sup_mono:\n  \"(\\<And>\\<omega>. f \\<omega> \\<le> g \\<omega>) \\<Longrightarrow> E_sup s f \\<le> E_sup s g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<omega>. f \\<omega> \\<le> g \\<omega>) \\<Longrightarrow>\n    E_sup s f \\<le> E_sup s g", "unfolding E_sup_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<omega>. f \\<omega> \\<le> g \\<omega>) \\<Longrightarrow>\n    (\\<Squnion>cfg\\<in>cfg_on s. integral\\<^sup>N (T cfg) f)\n    \\<le> (\\<Squnion>cfg\\<in>cfg_on s. integral\\<^sup>N (T cfg) g)", "by (intro SUP_subset_mono order_refl nn_integral_mono)"], ["", "lemma E_sup_add:\n  assumes [measurable]: \"f \\<in> borel_measurable St\" \"g \\<in> borel_measurable St\"\n  shows \"E_sup s (\\<lambda>x. f x + g x) \\<le> E_sup s f + E_sup s g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. E_sup s (\\<lambda>x. f x + g x) \\<le> E_sup s f + E_sup s g", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. E_sup s (\\<lambda>x. f x + g x) \\<le> E_sup s f + E_sup s g", "have \"E_sup s (\\<lambda>x. f x + g x) = (\\<Squnion>cfg\\<in>cfg_on s. (\\<integral>\\<^sup>+x. f x \\<partial>T cfg) + (\\<integral>\\<^sup>+x. g x \\<partial>T cfg))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. E_sup s (\\<lambda>x. f x + g x) =\n    (\\<Squnion>cfg\\<in>cfg_on s.\n        integral\\<^sup>N (T cfg) f + integral\\<^sup>N (T cfg) g)", "by (simp add: E_sup_def nn_integral_add)"], ["proof (state)\nthis:\n  E_sup s (\\<lambda>x. f x + g x) =\n  (\\<Squnion>cfg\\<in>cfg_on s.\n      integral\\<^sup>N (T cfg) f + integral\\<^sup>N (T cfg) g)\n\ngoal (1 subgoal):\n 1. E_sup s (\\<lambda>x. f x + g x) \\<le> E_sup s f + E_sup s g", "also"], ["proof (state)\nthis:\n  E_sup s (\\<lambda>x. f x + g x) =\n  (\\<Squnion>cfg\\<in>cfg_on s.\n      integral\\<^sup>N (T cfg) f + integral\\<^sup>N (T cfg) g)\n\ngoal (1 subgoal):\n 1. E_sup s (\\<lambda>x. f x + g x) \\<le> E_sup s f + E_sup s g", "have \"\\<dots> \\<le> (\\<Squnion>cfg\\<in>cfg_on s. \\<integral>\\<^sup>+x. f x \\<partial>T cfg) + (\\<Squnion>cfg\\<in>cfg_on s. (\\<integral>\\<^sup>+x. g x \\<partial>T cfg))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Squnion>cfg\\<in>cfg_on s.\n        integral\\<^sup>N (T cfg) f + integral\\<^sup>N (T cfg) g)\n    \\<le> (\\<Squnion>cfg\\<in>cfg_on s. integral\\<^sup>N (T cfg) f) +\n          (\\<Squnion>cfg\\<in>cfg_on s. integral\\<^sup>N (T cfg) g)", "by (auto simp: SUP_le_iff intro!: add_mono SUP_upper)"], ["proof (state)\nthis:\n  (\\<Squnion>cfg\\<in>cfg_on s.\n      integral\\<^sup>N (T cfg) f + integral\\<^sup>N (T cfg) g)\n  \\<le> (\\<Squnion>cfg\\<in>cfg_on s. integral\\<^sup>N (T cfg) f) +\n        (\\<Squnion>cfg\\<in>cfg_on s. integral\\<^sup>N (T cfg) g)\n\ngoal (1 subgoal):\n 1. E_sup s (\\<lambda>x. f x + g x) \\<le> E_sup s f + E_sup s g", "finally"], ["proof (chain)\npicking this:\n  E_sup s (\\<lambda>x. f x + g x)\n  \\<le> (\\<Squnion>cfg\\<in>cfg_on s. integral\\<^sup>N (T cfg) f) +\n        (\\<Squnion>cfg\\<in>cfg_on s. integral\\<^sup>N (T cfg) g)", "show ?thesis"], ["proof (prove)\nusing this:\n  E_sup s (\\<lambda>x. f x + g x)\n  \\<le> (\\<Squnion>cfg\\<in>cfg_on s. integral\\<^sup>N (T cfg) f) +\n        (\\<Squnion>cfg\\<in>cfg_on s. integral\\<^sup>N (T cfg) g)\n\ngoal (1 subgoal):\n 1. E_sup s (\\<lambda>x. f x + g x) \\<le> E_sup s f + E_sup s g", "by (simp add: E_sup_def)"], ["proof (state)\nthis:\n  E_sup s (\\<lambda>x. f x + g x) \\<le> E_sup s f + E_sup s g\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma E_sup_add_left:\n  assumes [measurable]: \"f \\<in> borel_measurable St\"\n  shows \"E_sup s (\\<lambda>x. f x + c) = E_sup s f + c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. E_sup s (\\<lambda>x. f x + c) = E_sup s f + c", "by (simp add: nn_integral_add E_sup_def T.emeasure_space_1[simplified] ennreal_SUP_add_left)"], ["", "lemma E_sup_add_right:\n  \"f \\<in> borel_measurable St \\<Longrightarrow> E_sup s (\\<lambda>x. c + f x) = c + E_sup s f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> borel_measurable St \\<Longrightarrow>\n    E_sup s (\\<lambda>x. c + f x) = c + E_sup s f", "using E_sup_add_left[of f s c]"], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable St \\<Longrightarrow>\n  E_sup s (\\<lambda>x. f x + c) = E_sup s f + c\n\ngoal (1 subgoal):\n 1. f \\<in> borel_measurable St \\<Longrightarrow>\n    E_sup s (\\<lambda>x. c + f x) = c + E_sup s f", "by (simp add: add.commute)"], ["", "lemma E_sup_SUP:\n  assumes [measurable]: \"\\<And>i. f i \\<in> borel_measurable St\" and [simp]: \"incseq f\"\n  shows \"E_sup s (\\<lambda>x. \\<Squnion>i. f i x) = (\\<Squnion>i. E_sup s (f i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. E_sup s (\\<lambda>x. \\<Squnion>i. f i x) = (\\<Squnion>i. E_sup s (f i))", "by (auto simp add: E_sup_def nn_integral_monotone_convergence_SUP intro: SUP_commute)"], ["", "lemma E_sup_iterate:\n  assumes [measurable]: \"f \\<in> borel_measurable St\"\n  shows \"E_sup s f = (\\<Squnion>D\\<in>K s. \\<integral>\\<^sup>+ t. E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>)) \\<partial>measure_pmf D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. E_sup s f =\n    (\\<Squnion>D\\<in>K s.\n        \\<integral>\\<^sup>+ t. E_sup t\n                                (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                           \\<partial>measure_pmf D)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. E_sup s f =\n    (\\<Squnion>D\\<in>K s.\n        \\<integral>\\<^sup>+ t. E_sup t\n                                (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                           \\<partial>measure_pmf D)", "let ?v = \"\\<lambda>t. \\<integral>\\<^sup>+x. f (state t ## x) \\<partial>T t\""], ["proof (state)\ngoal (1 subgoal):\n 1. E_sup s f =\n    (\\<Squnion>D\\<in>K s.\n        \\<integral>\\<^sup>+ t. E_sup t\n                                (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                           \\<partial>measure_pmf D)", "let ?p = \"\\<lambda>t. E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\""], ["proof (state)\ngoal (1 subgoal):\n 1. E_sup s f =\n    (\\<Squnion>D\\<in>K s.\n        \\<integral>\\<^sup>+ t. E_sup t\n                                (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                           \\<partial>measure_pmf D)", "have \"E_sup s f = (\\<Squnion>cfg\\<in>cfg_on s. \\<integral>\\<^sup>+t. ?v t \\<partial>K_cfg cfg)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. E_sup s f =\n    (\\<Squnion>cfg\\<in>cfg_on s.\n        \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n            \\<partial>T t\n                           \\<partial>measure_pmf (K_cfg cfg))", "unfolding E_sup_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Squnion>cfg\\<in>cfg_on s. integral\\<^sup>N (T cfg) f) =\n    (\\<Squnion>cfg\\<in>cfg_on s.\n        \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n            \\<partial>T t\n                           \\<partial>measure_pmf (K_cfg cfg))", "by (intro SUP_cong refl) (subst nn_integral_T, simp_all add: cfg_on_def)"], ["proof (state)\nthis:\n  E_sup s f =\n  (\\<Squnion>cfg\\<in>cfg_on s.\n      \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n          \\<partial>T t\n                         \\<partial>measure_pmf (K_cfg cfg))\n\ngoal (1 subgoal):\n 1. E_sup s f =\n    (\\<Squnion>D\\<in>K s.\n        \\<integral>\\<^sup>+ t. E_sup t\n                                (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                           \\<partial>measure_pmf D)", "also"], ["proof (state)\nthis:\n  E_sup s f =\n  (\\<Squnion>cfg\\<in>cfg_on s.\n      \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n          \\<partial>T t\n                         \\<partial>measure_pmf (K_cfg cfg))\n\ngoal (1 subgoal):\n 1. E_sup s f =\n    (\\<Squnion>D\\<in>K s.\n        \\<integral>\\<^sup>+ t. E_sup t\n                                (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                           \\<partial>measure_pmf D)", "have \"\\<dots> = (\\<Squnion>D\\<in>K s. \\<integral>\\<^sup>+t. ?p t \\<partial>measure_pmf D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Squnion>cfg\\<in>cfg_on s.\n        \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n            \\<partial>T t\n                           \\<partial>measure_pmf (K_cfg cfg)) =\n    (\\<Squnion>D\\<in>K s.\n        \\<integral>\\<^sup>+ t. E_sup t\n                                (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                           \\<partial>measure_pmf D)", "proof (intro antisym SUP_least)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>cfg.\n       cfg \\<in> cfg_on s \\<Longrightarrow>\n       \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n           \\<partial>T t\n                          \\<partial>measure_pmf (K_cfg cfg)\n       \\<le> (\\<Squnion>D\\<in>K s.\n                 \\<integral>\\<^sup>+ t.\nE_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                                    \\<partial>measure_pmf D)\n 2. \\<And>D.\n       D \\<in> K s \\<Longrightarrow>\n       \\<integral>\\<^sup>+ t. E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                          \\<partial>measure_pmf D\n       \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n                 \\<integral>\\<^sup>+ t.\n\\<integral>\\<^sup>+ x. f (state t ## x) \\<partial>T t\n                                    \\<partial>measure_pmf (K_cfg cfg))", "fix cfg :: \"'s cfg\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>cfg.\n       cfg \\<in> cfg_on s \\<Longrightarrow>\n       \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n           \\<partial>T t\n                          \\<partial>measure_pmf (K_cfg cfg)\n       \\<le> (\\<Squnion>D\\<in>K s.\n                 \\<integral>\\<^sup>+ t.\nE_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                                    \\<partial>measure_pmf D)\n 2. \\<And>D.\n       D \\<in> K s \\<Longrightarrow>\n       \\<integral>\\<^sup>+ t. E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                          \\<partial>measure_pmf D\n       \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n                 \\<integral>\\<^sup>+ t.\n\\<integral>\\<^sup>+ x. f (state t ## x) \\<partial>T t\n                                    \\<partial>measure_pmf (K_cfg cfg))", "assume cfg: \"cfg \\<in> cfg_on s\""], ["proof (state)\nthis:\n  cfg \\<in> cfg_on s\n\ngoal (2 subgoals):\n 1. \\<And>cfg.\n       cfg \\<in> cfg_on s \\<Longrightarrow>\n       \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n           \\<partial>T t\n                          \\<partial>measure_pmf (K_cfg cfg)\n       \\<le> (\\<Squnion>D\\<in>K s.\n                 \\<integral>\\<^sup>+ t.\nE_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                                    \\<partial>measure_pmf D)\n 2. \\<And>D.\n       D \\<in> K s \\<Longrightarrow>\n       \\<integral>\\<^sup>+ t. E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                          \\<partial>measure_pmf D\n       \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n                 \\<integral>\\<^sup>+ t.\n\\<integral>\\<^sup>+ x. f (state t ## x) \\<partial>T t\n                                    \\<partial>measure_pmf (K_cfg cfg))", "then"], ["proof (chain)\npicking this:\n  cfg \\<in> cfg_on s", "show \"(\\<integral>\\<^sup>+ t. ?v t \\<partial>K_cfg cfg) \\<le> (SUP D\\<in>K s. \\<integral>\\<^sup>+t. ?p t \\<partial>measure_pmf D)\""], ["proof (prove)\nusing this:\n  cfg \\<in> cfg_on s\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n        \\<partial>T t\n                       \\<partial>measure_pmf (K_cfg cfg)\n    \\<le> (\\<Squnion>D\\<in>K s.\n              \\<integral>\\<^sup>+ t. E_sup t\n(\\<lambda>\\<omega>. f (t ## \\<omega>))\n                                 \\<partial>measure_pmf D)", "by (auto simp: E_sup_def nn_integral_K_cfg AE_measure_pmf_iff\n               intro!: nn_integral_mono_AE SUP_upper2)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n      \\<partial>T t\n                     \\<partial>measure_pmf (K_cfg cfg)\n  \\<le> (\\<Squnion>D\\<in>K s.\n            \\<integral>\\<^sup>+ t. E_sup t\n                                    (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                               \\<partial>measure_pmf D)\n\ngoal (1 subgoal):\n 1. \\<And>D.\n       D \\<in> K s \\<Longrightarrow>\n       \\<integral>\\<^sup>+ t. E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                          \\<partial>measure_pmf D\n       \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n                 \\<integral>\\<^sup>+ t.\n\\<integral>\\<^sup>+ x. f (state t ## x) \\<partial>T t\n                                    \\<partial>measure_pmf (K_cfg cfg))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>D.\n       D \\<in> K s \\<Longrightarrow>\n       \\<integral>\\<^sup>+ t. E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                          \\<partial>measure_pmf D\n       \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n                 \\<integral>\\<^sup>+ t.\n\\<integral>\\<^sup>+ x. f (state t ## x) \\<partial>T t\n                                    \\<partial>measure_pmf (K_cfg cfg))", "fix D"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>D.\n       D \\<in> K s \\<Longrightarrow>\n       \\<integral>\\<^sup>+ t. E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                          \\<partial>measure_pmf D\n       \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n                 \\<integral>\\<^sup>+ t.\n\\<integral>\\<^sup>+ x. f (state t ## x) \\<partial>T t\n                                    \\<partial>measure_pmf (K_cfg cfg))", "assume D: \"D \\<in> K s\""], ["proof (state)\nthis:\n  D \\<in> K s\n\ngoal (1 subgoal):\n 1. \\<And>D.\n       D \\<in> K s \\<Longrightarrow>\n       \\<integral>\\<^sup>+ t. E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                          \\<partial>measure_pmf D\n       \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n                 \\<integral>\\<^sup>+ t.\n\\<integral>\\<^sup>+ x. f (state t ## x) \\<partial>T t\n                                    \\<partial>measure_pmf (K_cfg cfg))", "show \"(\\<integral>\\<^sup>+t. ?p t \\<partial>D) \\<le> (SUP cfg \\<in> cfg_on s. \\<integral>\\<^sup>+ t. ?v t \\<partial>K_cfg cfg)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ t. E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                       \\<partial>measure_pmf D\n    \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n              \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n                  \\<partial>T t\n                                 \\<partial>measure_pmf (K_cfg cfg))", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<integral>\\<^sup>+ t. E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                       \\<partial>measure_pmf D\n    \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n              \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n                  \\<partial>T t\n                                 \\<partial>measure_pmf (K_cfg cfg))\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<integral>\\<^sup>+ t. E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                       \\<partial>measure_pmf D\n    \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n              \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n                  \\<partial>T t\n                                 \\<partial>measure_pmf (K_cfg cfg))", "assume p_finite: \"\\<forall>t\\<in>D. ?p t < \\<infinity>\""], ["proof (state)\nthis:\n  \\<forall>t\\<in>set_pmf D.\n     E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>)) < \\<infinity>\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<integral>\\<^sup>+ t. E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                       \\<partial>measure_pmf D\n    \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n              \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n                  \\<partial>T t\n                                 \\<partial>measure_pmf (K_cfg cfg))\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<integral>\\<^sup>+ t. E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                       \\<partial>measure_pmf D\n    \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n              \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n                  \\<partial>T t\n                                 \\<partial>measure_pmf (K_cfg cfg))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ t. E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                       \\<partial>measure_pmf D\n    \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n              \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n                  \\<partial>T t\n                                 \\<partial>measure_pmf (K_cfg cfg))", "proof (rule ennreal_le_epsilon)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>(\\<Squnion>cfg\\<in>cfg_on s.\n                    \\<integral>\\<^sup>+ t.\n   \\<integral>\\<^sup>+ x. f (state t ## x) \\<partial>T t\n \\<partial>measure_pmf (K_cfg cfg))\n                < \\<top>;\n        0 < e\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ t.\n        E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n      \\<partial>measure_pmf D\n                         \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n                                   \\<integral>\\<^sup>+ t.\n                  \\<integral>\\<^sup>+ x. f (state t ## x) \\<partial>T t\n                \\<partial>measure_pmf (K_cfg cfg)) +\n                               ennreal e", "fix e :: real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>(\\<Squnion>cfg\\<in>cfg_on s.\n                    \\<integral>\\<^sup>+ t.\n   \\<integral>\\<^sup>+ x. f (state t ## x) \\<partial>T t\n \\<partial>measure_pmf (K_cfg cfg))\n                < \\<top>;\n        0 < e\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ t.\n        E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n      \\<partial>measure_pmf D\n                         \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n                                   \\<integral>\\<^sup>+ t.\n                  \\<integral>\\<^sup>+ x. f (state t ## x) \\<partial>T t\n                \\<partial>measure_pmf (K_cfg cfg)) +\n                               ennreal e", "assume \"0 < e\""], ["proof (state)\nthis:\n  0 < e\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>(\\<Squnion>cfg\\<in>cfg_on s.\n                    \\<integral>\\<^sup>+ t.\n   \\<integral>\\<^sup>+ x. f (state t ## x) \\<partial>T t\n \\<partial>measure_pmf (K_cfg cfg))\n                < \\<top>;\n        0 < e\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ t.\n        E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n      \\<partial>measure_pmf D\n                         \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n                                   \\<integral>\\<^sup>+ t.\n                  \\<integral>\\<^sup>+ x. f (state t ## x) \\<partial>T t\n                \\<partial>measure_pmf (K_cfg cfg)) +\n                               ennreal e", "have \"\\<forall>t\\<in>D. \\<exists>cfg\\<in>cfg_on t. ?p t \\<le> ?v cfg + e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>t\\<in>set_pmf D.\n       \\<exists>cfg\\<in>cfg_on t.\n          E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n          \\<le> \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg +\n                ennreal e", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<in> set_pmf D \\<Longrightarrow>\n       \\<exists>cfg\\<in>cfg_on t.\n          E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n          \\<le> \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg +\n                ennreal e", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<in> set_pmf D \\<Longrightarrow>\n       \\<exists>cfg\\<in>cfg_on t.\n          E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n          \\<le> \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg +\n                ennreal e", "assume \"t \\<in> D\""], ["proof (state)\nthis:\n  t \\<in> set_pmf D\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<in> set_pmf D \\<Longrightarrow>\n       \\<exists>cfg\\<in>cfg_on t.\n          E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n          \\<le> \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg +\n                ennreal e", "moreover"], ["proof (state)\nthis:\n  t \\<in> set_pmf D\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<in> set_pmf D \\<Longrightarrow>\n       \\<exists>cfg\\<in>cfg_on t.\n          E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n          \\<le> \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg +\n                ennreal e", "have \"(SUP cfg \\<in> cfg_on t. ?v cfg) = ?p t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Squnion>cfg\\<in>cfg_on t.\n        \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg) =\n    E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))", "unfolding E_sup_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Squnion>cfg\\<in>cfg_on t.\n        \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg) =\n    (\\<Squnion>cfg\\<in>cfg_on t.\n        \\<integral>\\<^sup>+ \\<omega>. f (t ## \\<omega>) \\<partial>T cfg)", "by (simp add: cfg_on_def)"], ["proof (state)\nthis:\n  (\\<Squnion>cfg\\<in>cfg_on t.\n      \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg) =\n  E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<in> set_pmf D \\<Longrightarrow>\n       \\<exists>cfg\\<in>cfg_on t.\n          E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n          \\<le> \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg +\n                ennreal e", "ultimately"], ["proof (chain)\npicking this:\n  t \\<in> set_pmf D\n  (\\<Squnion>cfg\\<in>cfg_on t.\n      \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg) =\n  E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))", "have \"(SUP cfg \\<in> cfg_on t. ?v cfg) \\<noteq> \\<infinity>\""], ["proof (prove)\nusing this:\n  t \\<in> set_pmf D\n  (\\<Squnion>cfg\\<in>cfg_on t.\n      \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg) =\n  E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n\ngoal (1 subgoal):\n 1. (\\<Squnion>cfg\\<in>cfg_on t.\n        \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg) \\<noteq>\n    \\<infinity>", "using p_finite"], ["proof (prove)\nusing this:\n  t \\<in> set_pmf D\n  (\\<Squnion>cfg\\<in>cfg_on t.\n      \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg) =\n  E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n  \\<forall>t\\<in>set_pmf D.\n     E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>)) < \\<infinity>\n\ngoal (1 subgoal):\n 1. (\\<Squnion>cfg\\<in>cfg_on t.\n        \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg) \\<noteq>\n    \\<infinity>", "by auto"], ["proof (state)\nthis:\n  (\\<Squnion>cfg\\<in>cfg_on t.\n      \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg) \\<noteq>\n  \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<in> set_pmf D \\<Longrightarrow>\n       \\<exists>cfg\\<in>cfg_on t.\n          E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n          \\<le> \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg +\n                ennreal e", "from SUP_approx_ennreal[OF \\<open>0<e\\<close> _ refl this]"], ["proof (chain)\npicking this:\n  cfg_on t \\<noteq> {} \\<Longrightarrow>\n  \\<exists>i\\<in>cfg_on t.\n     (\\<Squnion>cfg\\<in>cfg_on t.\n         \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg)\n     < \\<integral>\\<^sup>+ x. f (state i ## x) \\<partial>T i + ennreal e", "show \"\\<exists>cfg\\<in>cfg_on t. ?p t \\<le> ?v cfg + e\""], ["proof (prove)\nusing this:\n  cfg_on t \\<noteq> {} \\<Longrightarrow>\n  \\<exists>i\\<in>cfg_on t.\n     (\\<Squnion>cfg\\<in>cfg_on t.\n         \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg)\n     < \\<integral>\\<^sup>+ x. f (state i ## x) \\<partial>T i + ennreal e\n\ngoal (1 subgoal):\n 1. \\<exists>cfg\\<in>cfg_on t.\n       E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n       \\<le> \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg +\n             ennreal e", "by (auto simp add: E_sup_def intro: less_imp_le)"], ["proof (state)\nthis:\n  \\<exists>cfg\\<in>cfg_on t.\n     E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n     \\<le> \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg +\n           ennreal e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>t\\<in>set_pmf D.\n     \\<exists>cfg\\<in>cfg_on t.\n        E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n        \\<le> \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg +\n              ennreal e\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>(\\<Squnion>cfg\\<in>cfg_on s.\n                    \\<integral>\\<^sup>+ t.\n   \\<integral>\\<^sup>+ x. f (state t ## x) \\<partial>T t\n \\<partial>measure_pmf (K_cfg cfg))\n                < \\<top>;\n        0 < e\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ t.\n        E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n      \\<partial>measure_pmf D\n                         \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n                                   \\<integral>\\<^sup>+ t.\n                  \\<integral>\\<^sup>+ x. f (state t ## x) \\<partial>T t\n                \\<partial>measure_pmf (K_cfg cfg)) +\n                               ennreal e", "then"], ["proof (chain)\npicking this:\n  \\<forall>t\\<in>set_pmf D.\n     \\<exists>cfg\\<in>cfg_on t.\n        E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n        \\<le> \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg +\n              ennreal e", "obtain cfg' where v_cfg': \"\\<And>t. t \\<in> D \\<Longrightarrow> ?p t \\<le> ?v (cfg' t) + e\" and\n          cfg_on_cfg': \"\\<And>t. t \\<in> D \\<Longrightarrow> cfg' t \\<in> cfg_on t\""], ["proof (prove)\nusing this:\n  \\<forall>t\\<in>set_pmf D.\n     \\<exists>cfg\\<in>cfg_on t.\n        E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n        \\<le> \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg +\n              ennreal e\n\ngoal (1 subgoal):\n 1. (\\<And>cfg'.\n        \\<lbrakk>\\<And>t.\n                    t \\<in> set_pmf D \\<Longrightarrow>\n                    E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                    \\<le> \\<integral>\\<^sup>+ x. f (state (cfg' t) ## x)\n       \\<partial>T (cfg' t) +\n                          ennreal e;\n         \\<And>t.\n            t \\<in> set_pmf D \\<Longrightarrow>\n            cfg' t \\<in> cfg_on t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding Bex_def bchoice_iff"], ["proof (prove)\nusing this:\n  \\<exists>fa.\n     \\<forall>t\\<in>set_pmf D.\n        fa t \\<in> cfg_on t \\<and>\n        E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n        \\<le> \\<integral>\\<^sup>+ x. f (state (fa t) ## x)\n                                 \\<partial>T (fa t) +\n              ennreal e\n\ngoal (1 subgoal):\n 1. (\\<And>cfg'.\n        \\<lbrakk>\\<And>t.\n                    t \\<in> set_pmf D \\<Longrightarrow>\n                    E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                    \\<le> \\<integral>\\<^sup>+ x. f (state (cfg' t) ## x)\n       \\<partial>T (cfg' t) +\n                          ennreal e;\n         \\<And>t.\n            t \\<in> set_pmf D \\<Longrightarrow>\n            cfg' t \\<in> cfg_on t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  ?t1 \\<in> set_pmf D \\<Longrightarrow>\n  E_sup ?t1 (\\<lambda>\\<omega>. f (?t1 ## \\<omega>))\n  \\<le> \\<integral>\\<^sup>+ x. f (state (cfg' ?t1) ## x)\n                           \\<partial>T (cfg' ?t1) +\n        ennreal e\n  ?t1 \\<in> set_pmf D \\<Longrightarrow> cfg' ?t1 \\<in> cfg_on ?t1\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>(\\<Squnion>cfg\\<in>cfg_on s.\n                    \\<integral>\\<^sup>+ t.\n   \\<integral>\\<^sup>+ x. f (state t ## x) \\<partial>T t\n \\<partial>measure_pmf (K_cfg cfg))\n                < \\<top>;\n        0 < e\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ t.\n        E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n      \\<partial>measure_pmf D\n                         \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n                                   \\<integral>\\<^sup>+ t.\n                  \\<integral>\\<^sup>+ x. f (state t ## x) \\<partial>T t\n                \\<partial>measure_pmf (K_cfg cfg)) +\n                               ennreal e", "let ?cfg = \"Cfg s D cfg'\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>(\\<Squnion>cfg\\<in>cfg_on s.\n                    \\<integral>\\<^sup>+ t.\n   \\<integral>\\<^sup>+ x. f (state t ## x) \\<partial>T t\n \\<partial>measure_pmf (K_cfg cfg))\n                < \\<top>;\n        0 < e\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ t.\n        E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n      \\<partial>measure_pmf D\n                         \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n                                   \\<integral>\\<^sup>+ t.\n                  \\<integral>\\<^sup>+ x. f (state t ## x) \\<partial>T t\n                \\<partial>measure_pmf (K_cfg cfg)) +\n                               ennreal e", "have cfg: \"K_cfg ?cfg = map_pmf cfg' D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. K_cfg (Cfg s D cfg') = map_pmf cfg' D", "by (auto simp add: K_cfg_def fun_eq_iff cfg_on_cfg' intro!: map_pmf_cong)"], ["proof (state)\nthis:\n  K_cfg (Cfg s D cfg') = map_pmf cfg' D\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>(\\<Squnion>cfg\\<in>cfg_on s.\n                    \\<integral>\\<^sup>+ t.\n   \\<integral>\\<^sup>+ x. f (state t ## x) \\<partial>T t\n \\<partial>measure_pmf (K_cfg cfg))\n                < \\<top>;\n        0 < e\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ t.\n        E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n      \\<partial>measure_pmf D\n                         \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n                                   \\<integral>\\<^sup>+ t.\n                  \\<integral>\\<^sup>+ x. f (state t ## x) \\<partial>T t\n                \\<partial>measure_pmf (K_cfg cfg)) +\n                               ennreal e", "have \"(\\<integral>\\<^sup>+ t. ?p t \\<partial>D) \\<le> (\\<integral>\\<^sup>+t. ?v (cfg' t) + e \\<partial>D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ t. E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                       \\<partial>measure_pmf D\n    \\<le> \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x.\n                f (state (cfg' t) ## x)\n              \\<partial>T (cfg' t) +\n                                 ennreal e\n                             \\<partial>measure_pmf D", "by (intro nn_integral_mono_AE) (simp add: v_cfg' AE_measure_pmf_iff)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ t. E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                     \\<partial>measure_pmf D\n  \\<le> \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x.\n              f (state (cfg' t) ## x)\n            \\<partial>T (cfg' t) +\n                               ennreal e\n                           \\<partial>measure_pmf D\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>(\\<Squnion>cfg\\<in>cfg_on s.\n                    \\<integral>\\<^sup>+ t.\n   \\<integral>\\<^sup>+ x. f (state t ## x) \\<partial>T t\n \\<partial>measure_pmf (K_cfg cfg))\n                < \\<top>;\n        0 < e\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ t.\n        E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n      \\<partial>measure_pmf D\n                         \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n                                   \\<integral>\\<^sup>+ t.\n                  \\<integral>\\<^sup>+ x. f (state t ## x) \\<partial>T t\n                \\<partial>measure_pmf (K_cfg cfg)) +\n                               ennreal e", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ t. E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                     \\<partial>measure_pmf D\n  \\<le> \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x.\n              f (state (cfg' t) ## x)\n            \\<partial>T (cfg' t) +\n                               ennreal e\n                           \\<partial>measure_pmf D\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>(\\<Squnion>cfg\\<in>cfg_on s.\n                    \\<integral>\\<^sup>+ t.\n   \\<integral>\\<^sup>+ x. f (state t ## x) \\<partial>T t\n \\<partial>measure_pmf (K_cfg cfg))\n                < \\<top>;\n        0 < e\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ t.\n        E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n      \\<partial>measure_pmf D\n                         \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n                                   \\<integral>\\<^sup>+ t.\n                  \\<integral>\\<^sup>+ x. f (state t ## x) \\<partial>T t\n                \\<partial>measure_pmf (K_cfg cfg)) +\n                               ennreal e", "have \"\\<dots> = (\\<integral>\\<^sup>+t. ?v (cfg' t) \\<partial>D) + e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state (cfg' t) ## x)\n        \\<partial>T (cfg' t) +\n                           ennreal e\n                       \\<partial>measure_pmf D =\n    \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state (cfg' t) ## x)\n        \\<partial>T (cfg' t)\n                       \\<partial>measure_pmf D +\n    ennreal e", "using \\<open>0 < e\\<close> measure_pmf.emeasure_space_1[of D]"], ["proof (prove)\nusing this:\n  0 < e\n  emeasure (measure_pmf D) (space (measure_pmf D)) = 1\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state (cfg' t) ## x)\n        \\<partial>T (cfg' t) +\n                           ennreal e\n                       \\<partial>measure_pmf D =\n    \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state (cfg' t) ## x)\n        \\<partial>T (cfg' t)\n                       \\<partial>measure_pmf D +\n    ennreal e", "by (subst nn_integral_add) (auto intro: cfg_on_cfg' )"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state (cfg' t) ## x)\n      \\<partial>T (cfg' t) +\n                         ennreal e\n                     \\<partial>measure_pmf D =\n  \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state (cfg' t) ## x)\n      \\<partial>T (cfg' t)\n                     \\<partial>measure_pmf D +\n  ennreal e\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>(\\<Squnion>cfg\\<in>cfg_on s.\n                    \\<integral>\\<^sup>+ t.\n   \\<integral>\\<^sup>+ x. f (state t ## x) \\<partial>T t\n \\<partial>measure_pmf (K_cfg cfg))\n                < \\<top>;\n        0 < e\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ t.\n        E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n      \\<partial>measure_pmf D\n                         \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n                                   \\<integral>\\<^sup>+ t.\n                  \\<integral>\\<^sup>+ x. f (state t ## x) \\<partial>T t\n                \\<partial>measure_pmf (K_cfg cfg)) +\n                               ennreal e", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state (cfg' t) ## x)\n      \\<partial>T (cfg' t) +\n                         ennreal e\n                     \\<partial>measure_pmf D =\n  \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state (cfg' t) ## x)\n      \\<partial>T (cfg' t)\n                     \\<partial>measure_pmf D +\n  ennreal e\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>(\\<Squnion>cfg\\<in>cfg_on s.\n                    \\<integral>\\<^sup>+ t.\n   \\<integral>\\<^sup>+ x. f (state t ## x) \\<partial>T t\n \\<partial>measure_pmf (K_cfg cfg))\n                < \\<top>;\n        0 < e\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ t.\n        E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n      \\<partial>measure_pmf D\n                         \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n                                   \\<integral>\\<^sup>+ t.\n                  \\<integral>\\<^sup>+ x. f (state t ## x) \\<partial>T t\n                \\<partial>measure_pmf (K_cfg cfg)) +\n                               ennreal e", "have \"(\\<integral>\\<^sup>+t. ?v (cfg' t) \\<partial>D) = (\\<integral>\\<^sup>+t. ?v t \\<partial>K_cfg ?cfg)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state (cfg' t) ## x)\n        \\<partial>T (cfg' t)\n                       \\<partial>measure_pmf D =\n    \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n        \\<partial>T t\n                       \\<partial>measure_pmf (K_cfg (Cfg s D cfg'))", "by (simp add: cfg map_pmf_rep_eq nn_integral_distr)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state (cfg' t) ## x)\n      \\<partial>T (cfg' t)\n                     \\<partial>measure_pmf D =\n  \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n      \\<partial>T t\n                     \\<partial>measure_pmf (K_cfg (Cfg s D cfg'))\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>(\\<Squnion>cfg\\<in>cfg_on s.\n                    \\<integral>\\<^sup>+ t.\n   \\<integral>\\<^sup>+ x. f (state t ## x) \\<partial>T t\n \\<partial>measure_pmf (K_cfg cfg))\n                < \\<top>;\n        0 < e\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ t.\n        E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n      \\<partial>measure_pmf D\n                         \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n                                   \\<integral>\\<^sup>+ t.\n                  \\<integral>\\<^sup>+ x. f (state t ## x) \\<partial>T t\n                \\<partial>measure_pmf (K_cfg cfg)) +\n                               ennreal e", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state (cfg' t) ## x)\n      \\<partial>T (cfg' t)\n                     \\<partial>measure_pmf D =\n  \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n      \\<partial>T t\n                     \\<partial>measure_pmf (K_cfg (Cfg s D cfg'))\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>(\\<Squnion>cfg\\<in>cfg_on s.\n                    \\<integral>\\<^sup>+ t.\n   \\<integral>\\<^sup>+ x. f (state t ## x) \\<partial>T t\n \\<partial>measure_pmf (K_cfg cfg))\n                < \\<top>;\n        0 < e\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ t.\n        E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n      \\<partial>measure_pmf D\n                         \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n                                   \\<integral>\\<^sup>+ t.\n                  \\<integral>\\<^sup>+ x. f (state t ## x) \\<partial>T t\n                \\<partial>measure_pmf (K_cfg cfg)) +\n                               ennreal e", "have \"\\<dots> \\<le> (SUP cfg\\<in>cfg_on s. (\\<integral>\\<^sup>+t. ?v t \\<partial>K_cfg cfg))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n        \\<partial>T t\n                       \\<partial>measure_pmf (K_cfg (Cfg s D cfg'))\n    \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n              \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n                  \\<partial>T t\n                                 \\<partial>measure_pmf (K_cfg cfg))", "by (auto intro!: SUP_upper intro!: cfg_of_cfg_onI D cfg_on_cfg')"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n      \\<partial>T t\n                     \\<partial>measure_pmf (K_cfg (Cfg s D cfg'))\n  \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n            \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n                \\<partial>T t\n                               \\<partial>measure_pmf (K_cfg cfg))\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>(\\<Squnion>cfg\\<in>cfg_on s.\n                    \\<integral>\\<^sup>+ t.\n   \\<integral>\\<^sup>+ x. f (state t ## x) \\<partial>T t\n \\<partial>measure_pmf (K_cfg cfg))\n                < \\<top>;\n        0 < e\\<rbrakk>\n       \\<Longrightarrow> \\<integral>\\<^sup>+ t.\n        E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n      \\<partial>measure_pmf D\n                         \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n                                   \\<integral>\\<^sup>+ t.\n                  \\<integral>\\<^sup>+ x. f (state t ## x) \\<partial>T t\n                \\<partial>measure_pmf (K_cfg cfg)) +\n                               ennreal e", "finally"], ["proof (chain)\npicking this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      x + ennreal e \\<le> y + ennreal e) \\<Longrightarrow>\n  \\<integral>\\<^sup>+ t. E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                     \\<partial>measure_pmf D\n  \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n            \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n                \\<partial>T t\n                               \\<partial>measure_pmf (K_cfg cfg)) +\n        ennreal e", "show \"(\\<integral>\\<^sup>+ t. ?p t \\<partial>D) \\<le> (SUP cfg \\<in> cfg_on s. \\<integral>\\<^sup>+ t. ?v t \\<partial>K_cfg cfg) + e\""], ["proof (prove)\nusing this:\n  (\\<And>x y.\n      x \\<le> y \\<Longrightarrow>\n      x + ennreal e \\<le> y + ennreal e) \\<Longrightarrow>\n  \\<integral>\\<^sup>+ t. E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                     \\<partial>measure_pmf D\n  \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n            \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n                \\<partial>T t\n                               \\<partial>measure_pmf (K_cfg cfg)) +\n        ennreal e\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ t. E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                       \\<partial>measure_pmf D\n    \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n              \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n                  \\<partial>T t\n                                 \\<partial>measure_pmf (K_cfg cfg)) +\n          ennreal e", "by (blast intro: add_mono)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ t. E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                     \\<partial>measure_pmf D\n  \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n            \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n                \\<partial>T t\n                               \\<partial>measure_pmf (K_cfg cfg)) +\n        ennreal e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ t. E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                     \\<partial>measure_pmf D\n  \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n            \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n                \\<partial>T t\n                               \\<partial>measure_pmf (K_cfg cfg))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>t\\<in>set_pmf D.\n               E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n               < \\<infinity>) \\<Longrightarrow>\n    \\<integral>\\<^sup>+ t. E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                       \\<partial>measure_pmf D\n    \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n              \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n                  \\<partial>T t\n                                 \\<partial>measure_pmf (K_cfg cfg))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>t\\<in>set_pmf D.\n               E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n               < \\<infinity>) \\<Longrightarrow>\n    \\<integral>\\<^sup>+ t. E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                       \\<partial>measure_pmf D\n    \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n              \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n                  \\<partial>T t\n                                 \\<partial>measure_pmf (K_cfg cfg))", "assume \"\\<not> (\\<forall>t\\<in>D. ?p t < \\<infinity>)\""], ["proof (state)\nthis:\n  \\<not> (\\<forall>t\\<in>set_pmf D.\n             E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>)) < \\<infinity>)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>t\\<in>set_pmf D.\n               E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n               < \\<infinity>) \\<Longrightarrow>\n    \\<integral>\\<^sup>+ t. E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                       \\<partial>measure_pmf D\n    \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n              \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n                  \\<partial>T t\n                                 \\<partial>measure_pmf (K_cfg cfg))", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<forall>t\\<in>set_pmf D.\n             E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>)) < \\<infinity>)", "obtain t where \"t \\<in> D\" \"?p t = \\<infinity>\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>t\\<in>set_pmf D.\n             E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>)) < \\<infinity>)\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>t \\<in> set_pmf D;\n         E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>)) =\n         \\<infinity>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: not_less top_unique)"], ["proof (state)\nthis:\n  t \\<in> set_pmf D\n  E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>)) = \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>t\\<in>set_pmf D.\n               E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n               < \\<infinity>) \\<Longrightarrow>\n    \\<integral>\\<^sup>+ t. E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                       \\<partial>measure_pmf D\n    \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n              \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n                  \\<partial>T t\n                                 \\<partial>measure_pmf (K_cfg cfg))", "then"], ["proof (chain)\npicking this:\n  t \\<in> set_pmf D\n  E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>)) = \\<infinity>", "have \"\\<infinity> = pmf (D) t * ?p t\""], ["proof (prove)\nusing this:\n  t \\<in> set_pmf D\n  E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>)) = \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<infinity> =\n    ennreal (pmf D t) * E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))", "by (auto simp: ennreal_mult_top set_pmf_iff)"], ["proof (state)\nthis:\n  \\<infinity> =\n  ennreal (pmf D t) * E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>t\\<in>set_pmf D.\n               E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n               < \\<infinity>) \\<Longrightarrow>\n    \\<integral>\\<^sup>+ t. E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                       \\<partial>measure_pmf D\n    \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n              \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n                  \\<partial>T t\n                                 \\<partial>measure_pmf (K_cfg cfg))", "also"], ["proof (state)\nthis:\n  \\<infinity> =\n  ennreal (pmf D t) * E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>t\\<in>set_pmf D.\n               E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n               < \\<infinity>) \\<Longrightarrow>\n    \\<integral>\\<^sup>+ t. E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                       \\<partial>measure_pmf D\n    \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n              \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n                  \\<partial>T t\n                                 \\<partial>measure_pmf (K_cfg cfg))", "have \"\\<dots> = (SUP cfg \\<in> cfg_on t. pmf (D) t * ?v cfg)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal (pmf D t) * E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>)) =\n    (\\<Squnion>cfg\\<in>cfg_on t.\n        ennreal (pmf D t) *\n        \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg)", "unfolding E_sup_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal (pmf D t) *\n    (\\<Squnion>cfg\\<in>cfg_on t.\n        \\<integral>\\<^sup>+ \\<omega>. f (t ## \\<omega>) \\<partial>T cfg) =\n    (\\<Squnion>cfg\\<in>cfg_on t.\n        ennreal (pmf D t) *\n        \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg)", "by (auto simp: SUP_mult_left_ennreal[symmetric])"], ["proof (state)\nthis:\n  ennreal (pmf D t) * E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>)) =\n  (\\<Squnion>cfg\\<in>cfg_on t.\n      ennreal (pmf D t) *\n      \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>t\\<in>set_pmf D.\n               E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n               < \\<infinity>) \\<Longrightarrow>\n    \\<integral>\\<^sup>+ t. E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                       \\<partial>measure_pmf D\n    \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n              \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n                  \\<partial>T t\n                                 \\<partial>measure_pmf (K_cfg cfg))", "also"], ["proof (state)\nthis:\n  ennreal (pmf D t) * E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>)) =\n  (\\<Squnion>cfg\\<in>cfg_on t.\n      ennreal (pmf D t) *\n      \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>t\\<in>set_pmf D.\n               E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n               < \\<infinity>) \\<Longrightarrow>\n    \\<integral>\\<^sup>+ t. E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                       \\<partial>measure_pmf D\n    \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n              \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n                  \\<partial>T t\n                                 \\<partial>measure_pmf (K_cfg cfg))", "have \"\\<dots> \\<le> (SUP cfg \\<in> cfg_on s. \\<integral>\\<^sup>+ t. ?v t \\<partial>K_cfg cfg)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Squnion>cfg\\<in>cfg_on t.\n        ennreal (pmf D t) *\n        \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg)\n    \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n              \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n                  \\<partial>T t\n                                 \\<partial>measure_pmf (K_cfg cfg))", "unfolding E_sup_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Squnion>cfg\\<in>cfg_on t.\n        ennreal (pmf D t) *\n        \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg)\n    \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n              \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n                  \\<partial>T t\n                                 \\<partial>measure_pmf (K_cfg cfg))", "proof (intro SUP_least SUP_upper2)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>cfg. cfg \\<in> cfg_on t \\<Longrightarrow> ?cfg1 cfg \\<in> cfg_on s\n 2. \\<And>cfg.\n       cfg \\<in> cfg_on t \\<Longrightarrow>\n       ennreal (pmf D t) *\n       \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg\n       \\<le> \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n                 \\<partial>T t\n                                \\<partial>measure_pmf (K_cfg (?cfg1 cfg))", "fix cfg :: \"'s cfg\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>cfg. cfg \\<in> cfg_on t \\<Longrightarrow> ?cfg1 cfg \\<in> cfg_on s\n 2. \\<And>cfg.\n       cfg \\<in> cfg_on t \\<Longrightarrow>\n       ennreal (pmf D t) *\n       \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg\n       \\<le> \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n                 \\<partial>T t\n                                \\<partial>measure_pmf (K_cfg (?cfg1 cfg))", "assume cfg: \"cfg \\<in> cfg_on t\""], ["proof (state)\nthis:\n  cfg \\<in> cfg_on t\n\ngoal (2 subgoals):\n 1. \\<And>cfg. cfg \\<in> cfg_on t \\<Longrightarrow> ?cfg1 cfg \\<in> cfg_on s\n 2. \\<And>cfg.\n       cfg \\<in> cfg_on t \\<Longrightarrow>\n       ennreal (pmf D t) *\n       \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg\n       \\<le> \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n                 \\<partial>T t\n                                \\<partial>measure_pmf (K_cfg (?cfg1 cfg))", "let ?cfg = \"Cfg s D ((memoryless_on arb_act) (t := cfg))\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>cfg. cfg \\<in> cfg_on t \\<Longrightarrow> ?cfg1 cfg \\<in> cfg_on s\n 2. \\<And>cfg.\n       cfg \\<in> cfg_on t \\<Longrightarrow>\n       ennreal (pmf D t) *\n       \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg\n       \\<le> \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n                 \\<partial>T t\n                                \\<partial>measure_pmf (K_cfg (?cfg1 cfg))", "have C: \"K_cfg ?cfg = map_pmf ((memoryless_on arb_act) (t := cfg)) D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. K_cfg (Cfg s D ((memoryless_on arb_act)(t := cfg))) =\n    map_pmf ((memoryless_on arb_act)(t := cfg)) D", "by (auto simp add: K_cfg_def fun_eq_iff intro!: map_pmf_cong simp: cfg)"], ["proof (state)\nthis:\n  K_cfg (Cfg s D ((memoryless_on arb_act)(t := cfg))) =\n  map_pmf ((memoryless_on arb_act)(t := cfg)) D\n\ngoal (2 subgoals):\n 1. \\<And>cfg. cfg \\<in> cfg_on t \\<Longrightarrow> ?cfg1 cfg \\<in> cfg_on s\n 2. \\<And>cfg.\n       cfg \\<in> cfg_on t \\<Longrightarrow>\n       ennreal (pmf D t) *\n       \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg\n       \\<le> \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n                 \\<partial>T t\n                                \\<partial>measure_pmf (K_cfg (?cfg1 cfg))", "show \"?cfg \\<in> cfg_on s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Cfg s D ((memoryless_on arb_act)(t := cfg)) \\<in> cfg_on s", "by (auto intro!: cfg_of_cfg_onI D cfg memoryless_on_cfg_onI)"], ["proof (state)\nthis:\n  Cfg s D ((memoryless_on arb_act)(t := cfg)) \\<in> cfg_on s\n\ngoal (1 subgoal):\n 1. \\<And>cfg.\n       cfg \\<in> cfg_on t \\<Longrightarrow>\n       ennreal (pmf D t) *\n       \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg\n       \\<le> \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n                 \\<partial>T t\n                                \\<partial>measure_pmf\n     (K_cfg (Cfg s D ((memoryless_on arb_act)(t := cfg))))", "have \"ennreal (pmf (D) t) * (\\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg) =\n          (\\<integral>\\<^sup>+t'. (\\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg) * indicator {t} t' \\<partial>D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal (pmf D t) *\n    \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg =\n    \\<integral>\\<^sup>+t'\\<in>{t}.\n                       \\<integral>\\<^sup>+ x. f (state cfg ## x)\n    \\<partial>T cfg\n    \\<partial>measure_pmf D", "by (auto simp add:  max_def emeasure_pmf_single intro: mult_ac)"], ["proof (state)\nthis:\n  ennreal (pmf D t) *\n  \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg =\n  \\<integral>\\<^sup>+t'\\<in>{t}.\n                     \\<integral>\\<^sup>+ x. f (state cfg ## x)\n  \\<partial>T cfg\n  \\<partial>measure_pmf D\n\ngoal (1 subgoal):\n 1. \\<And>cfg.\n       cfg \\<in> cfg_on t \\<Longrightarrow>\n       ennreal (pmf D t) *\n       \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg\n       \\<le> \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n                 \\<partial>T t\n                                \\<partial>measure_pmf\n     (K_cfg (Cfg s D ((memoryless_on arb_act)(t := cfg))))", "also"], ["proof (state)\nthis:\n  ennreal (pmf D t) *\n  \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg =\n  \\<integral>\\<^sup>+t'\\<in>{t}.\n                     \\<integral>\\<^sup>+ x. f (state cfg ## x)\n  \\<partial>T cfg\n  \\<partial>measure_pmf D\n\ngoal (1 subgoal):\n 1. \\<And>cfg.\n       cfg \\<in> cfg_on t \\<Longrightarrow>\n       ennreal (pmf D t) *\n       \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg\n       \\<le> \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n                 \\<partial>T t\n                                \\<partial>measure_pmf\n     (K_cfg (Cfg s D ((memoryless_on arb_act)(t := cfg))))", "have \"\\<dots> = (\\<integral>\\<^sup>+cfg. ?v cfg * indicator {t} (state cfg) \\<partial>K_cfg ?cfg)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+t'\\<in>{t}.\n                       \\<integral>\\<^sup>+ x. f (state cfg ## x)\n    \\<partial>T cfg\n    \\<partial>measure_pmf D =\n    \\<integral>\\<^sup>+ cfg.\n                         \\<integral>\\<^sup>+ x. f (state cfg ## x)\n      \\<partial>T cfg *\n                         indicator {t} (state cfg)\n                       \\<partial>measure_pmf\n                                  (K_cfg\n                                    (Cfg s D\n((memoryless_on arb_act)(t := cfg))))", "unfolding C"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+t'\\<in>{t}.\n                       \\<integral>\\<^sup>+ x. f (state cfg ## x)\n    \\<partial>T cfg\n    \\<partial>measure_pmf D =\n    \\<integral>\\<^sup>+ cfg.\n                         \\<integral>\\<^sup>+ x. f (state cfg ## x)\n      \\<partial>T cfg *\n                         indicator {t} (state cfg)\n                       \\<partial>measure_pmf\n                                  (map_pmf\n                                    ((memoryless_on arb_act)(t := cfg)) D)", "using cfg"], ["proof (prove)\nusing this:\n  cfg \\<in> cfg_on t\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+t'\\<in>{t}.\n                       \\<integral>\\<^sup>+ x. f (state cfg ## x)\n    \\<partial>T cfg\n    \\<partial>measure_pmf D =\n    \\<integral>\\<^sup>+ cfg.\n                         \\<integral>\\<^sup>+ x. f (state cfg ## x)\n      \\<partial>T cfg *\n                         indicator {t} (state cfg)\n                       \\<partial>measure_pmf\n                                  (map_pmf\n                                    ((memoryless_on arb_act)(t := cfg)) D)", "by (auto simp add: nn_integral_distr map_pmf_rep_eq split: split_indicator\n                   simp del: nn_integral_indicator_singleton\n                   intro!: nn_integral_cong)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+t'\\<in>{t}.\n                     \\<integral>\\<^sup>+ x. f (state cfg ## x)\n  \\<partial>T cfg\n  \\<partial>measure_pmf D =\n  \\<integral>\\<^sup>+ cfg.\n                       \\<integral>\\<^sup>+ x. f (state cfg ## x)\n    \\<partial>T cfg *\n                       indicator {t} (state cfg)\n                     \\<partial>measure_pmf\n                                (K_cfg\n                                  (Cfg s D\n                                    ((memoryless_on arb_act)(t := cfg))))\n\ngoal (1 subgoal):\n 1. \\<And>cfg.\n       cfg \\<in> cfg_on t \\<Longrightarrow>\n       ennreal (pmf D t) *\n       \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg\n       \\<le> \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n                 \\<partial>T t\n                                \\<partial>measure_pmf\n     (K_cfg (Cfg s D ((memoryless_on arb_act)(t := cfg))))", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+t'\\<in>{t}.\n                     \\<integral>\\<^sup>+ x. f (state cfg ## x)\n  \\<partial>T cfg\n  \\<partial>measure_pmf D =\n  \\<integral>\\<^sup>+ cfg.\n                       \\<integral>\\<^sup>+ x. f (state cfg ## x)\n    \\<partial>T cfg *\n                       indicator {t} (state cfg)\n                     \\<partial>measure_pmf\n                                (K_cfg\n                                  (Cfg s D\n                                    ((memoryless_on arb_act)(t := cfg))))\n\ngoal (1 subgoal):\n 1. \\<And>cfg.\n       cfg \\<in> cfg_on t \\<Longrightarrow>\n       ennreal (pmf D t) *\n       \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg\n       \\<le> \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n                 \\<partial>T t\n                                \\<partial>measure_pmf\n     (K_cfg (Cfg s D ((memoryless_on arb_act)(t := cfg))))", "have \"\\<dots> \\<le> (\\<integral>\\<^sup>+cfg. ?v cfg \\<partial>K_cfg ?cfg)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ cfg.\n                         \\<integral>\\<^sup>+ x. f (state cfg ## x)\n      \\<partial>T cfg *\n                         indicator {t} (state cfg)\n                       \\<partial>measure_pmf\n                                  (K_cfg\n                                    (Cfg s D\n((memoryless_on arb_act)(t := cfg))))\n    \\<le> \\<integral>\\<^sup>+ cfg.\n                               \\<integral>\\<^sup>+ x. f (state cfg ## x)\n            \\<partial>T cfg\n                             \\<partial>measure_pmf\n  (K_cfg (Cfg s D ((memoryless_on arb_act)(t := cfg))))", "by (auto intro!: nn_integral_mono  split: split_indicator)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ cfg.\n                       \\<integral>\\<^sup>+ x. f (state cfg ## x)\n    \\<partial>T cfg *\n                       indicator {t} (state cfg)\n                     \\<partial>measure_pmf\n                                (K_cfg\n                                  (Cfg s D\n                                    ((memoryless_on arb_act)(t := cfg))))\n  \\<le> \\<integral>\\<^sup>+ cfg.\n                             \\<integral>\\<^sup>+ x. f (state cfg ## x)\n          \\<partial>T cfg\n                           \\<partial>measure_pmf\n(K_cfg (Cfg s D ((memoryless_on arb_act)(t := cfg))))\n\ngoal (1 subgoal):\n 1. \\<And>cfg.\n       cfg \\<in> cfg_on t \\<Longrightarrow>\n       ennreal (pmf D t) *\n       \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg\n       \\<le> \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n                 \\<partial>T t\n                                \\<partial>measure_pmf\n     (K_cfg (Cfg s D ((memoryless_on arb_act)(t := cfg))))", "finally"], ["proof (chain)\npicking this:\n  ennreal (pmf D t) *\n  \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg\n  \\<le> \\<integral>\\<^sup>+ cfg.\n                             \\<integral>\\<^sup>+ x. f (state cfg ## x)\n          \\<partial>T cfg\n                           \\<partial>measure_pmf\n(K_cfg (Cfg s D ((memoryless_on arb_act)(t := cfg))))", "show \"ennreal (pmf (D) t) * (\\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg)\n           \\<le> (\\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x) \\<partial>T t \\<partial>K_cfg ?cfg)\""], ["proof (prove)\nusing this:\n  ennreal (pmf D t) *\n  \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg\n  \\<le> \\<integral>\\<^sup>+ cfg.\n                             \\<integral>\\<^sup>+ x. f (state cfg ## x)\n          \\<partial>T cfg\n                           \\<partial>measure_pmf\n(K_cfg (Cfg s D ((memoryless_on arb_act)(t := cfg))))\n\ngoal (1 subgoal):\n 1. ennreal (pmf D t) *\n    \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg\n    \\<le> \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n              \\<partial>T t\n                             \\<partial>measure_pmf\n  (K_cfg (Cfg s D ((memoryless_on arb_act)(t := cfg))))", "."], ["proof (state)\nthis:\n  ennreal (pmf D t) *\n  \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg\n  \\<le> \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n            \\<partial>T t\n                           \\<partial>measure_pmf\n(K_cfg (Cfg s D ((memoryless_on arb_act)(t := cfg))))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Squnion>cfg\\<in>cfg_on t.\n      ennreal (pmf D t) *\n      \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg)\n  \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n            \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n                \\<partial>T t\n                               \\<partial>measure_pmf (K_cfg cfg))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>t\\<in>set_pmf D.\n               E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n               < \\<infinity>) \\<Longrightarrow>\n    \\<integral>\\<^sup>+ t. E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                       \\<partial>measure_pmf D\n    \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n              \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n                  \\<partial>T t\n                                 \\<partial>measure_pmf (K_cfg cfg))", "finally"], ["proof (chain)\npicking this:\n  \\<infinity>\n  \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n            \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n                \\<partial>T t\n                               \\<partial>measure_pmf (K_cfg cfg))", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<infinity>\n  \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n            \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n                \\<partial>T t\n                               \\<partial>measure_pmf (K_cfg cfg))\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ t. E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                       \\<partial>measure_pmf D\n    \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n              \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n                  \\<partial>T t\n                                 \\<partial>measure_pmf (K_cfg cfg))", "by (simp add: top_unique del: Sup_eq_top_iff SUP_eq_top_iff)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ t. E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                     \\<partial>measure_pmf D\n  \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n            \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n                \\<partial>T t\n                               \\<partial>measure_pmf (K_cfg cfg))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ t. E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                     \\<partial>measure_pmf D\n  \\<le> (\\<Squnion>cfg\\<in>cfg_on s.\n            \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n                \\<partial>T t\n                               \\<partial>measure_pmf (K_cfg cfg))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Squnion>cfg\\<in>cfg_on s.\n      \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n          \\<partial>T t\n                         \\<partial>measure_pmf (K_cfg cfg)) =\n  (\\<Squnion>D\\<in>K s.\n      \\<integral>\\<^sup>+ t. E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                         \\<partial>measure_pmf D)\n\ngoal (1 subgoal):\n 1. E_sup s f =\n    (\\<Squnion>D\\<in>K s.\n        \\<integral>\\<^sup>+ t. E_sup t\n                                (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                           \\<partial>measure_pmf D)", "finally"], ["proof (chain)\npicking this:\n  E_sup s f =\n  (\\<Squnion>D\\<in>K s.\n      \\<integral>\\<^sup>+ t. E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                         \\<partial>measure_pmf D)", "show ?thesis"], ["proof (prove)\nusing this:\n  E_sup s f =\n  (\\<Squnion>D\\<in>K s.\n      \\<integral>\\<^sup>+ t. E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                         \\<partial>measure_pmf D)\n\ngoal (1 subgoal):\n 1. E_sup s f =\n    (\\<Squnion>D\\<in>K s.\n        \\<integral>\\<^sup>+ t. E_sup t\n                                (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                           \\<partial>measure_pmf D)", "."], ["proof (state)\nthis:\n  E_sup s f =\n  (\\<Squnion>D\\<in>K s.\n      \\<integral>\\<^sup>+ t. E_sup t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                         \\<partial>measure_pmf D)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma E_sup_bot: \"E_sup s \\<bottom> = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. E_sup s \\<bottom> = 0", "by (auto simp add: E_sup_def bot_ennreal)"], ["", "lemma E_sup_lfp:\n  fixes g\n  defines \"l \\<equiv> \\<lambda>f \\<omega>. g (shd \\<omega>) (f (stl \\<omega>))\"\n  assumes measurable_g[measurable]: \"case_prod g \\<in> borel_measurable (count_space UNIV \\<Otimes>\\<^sub>M borel)\"\n  assumes cont_g: \"\\<And>s. sup_continuous (g s)\"\n  assumes int_g: \"\\<And>f cfg. f \\<in> borel_measurable St \\<Longrightarrow>\n     (\\<integral>\\<^sup>+ \\<omega>. g (state cfg) (f \\<omega>) \\<partial>T cfg) = g (state cfg) (integral\\<^sup>N (T cfg) f)\"\n  shows \"(\\<lambda>s. E_sup s (lfp l)) = lfp (\\<lambda>f s. \\<Squnion>D\\<in>K s. \\<integral>\\<^sup>+t. g t (f t) \\<partial>measure_pmf D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. E_sup s (lfp l)) =\n    lfp (\\<lambda>f s.\n            \\<Squnion>D\\<in>K s.\n               \\<integral>\\<^sup>+ t. g t (f t) \\<partial>measure_pmf D)", "proof (rule lfp_transfer_bounded[where \\<alpha>=\"\\<lambda>F s. E_sup s F\" and f=l and P=\"\\<lambda>f. f \\<in> borel_measurable St\"])"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<bottom> \\<in> borel_measurable St\n 2. \\<And>x.\n       x \\<in> borel_measurable St \\<Longrightarrow>\n       l x \\<in> borel_measurable St\n 3. \\<And>M.\n       (\\<And>i. M i \\<in> borel_measurable St) \\<Longrightarrow>\n       \\<Squnion> range M \\<in> borel_measurable St\n 4. \\<And>M.\n       \\<lbrakk>incseq M; \\<And>i. M i \\<in> borel_measurable St\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>s. E_sup s (\\<Squnion> range M)) =\n                         (\\<Squnion>i. (\\<lambda>s. E_sup s (M i)))\n 5. sup_continuous l\n 6. sup_continuous\n     (\\<lambda>f s.\n         \\<Squnion>D\\<in>K s.\n            \\<integral>\\<^sup>+ t. g t (f t) \\<partial>measure_pmf D)\n 7. \\<And>x.\n       \\<lbrakk>x \\<in> borel_measurable St; x \\<le> lfp l\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>s. E_sup s (l x)) =\n                         (\\<lambda>s.\n                             \\<Squnion>D\\<in>K s.\n                                \\<integral>\\<^sup>+ t. g t (E_sup t x)\n             \\<partial>measure_pmf D)\n 8. \\<And>x.\n       (\\<lambda>s. E_sup s \\<bottom>)\n       \\<le> (\\<lambda>s.\n                 \\<Squnion>D\\<in>K s.\n                    \\<integral>\\<^sup>+ t. g t (x t)\n \\<partial>measure_pmf D)", "show \"sup_continuous (\\<lambda>f s. \\<Squnion>x\\<in>K s. \\<integral>\\<^sup>+ t. g t (f t) \\<partial>measure_pmf x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_continuous\n     (\\<lambda>f s.\n         \\<Squnion>x\\<in>K s.\n            \\<integral>\\<^sup>+ t. g t (f t) \\<partial>measure_pmf x)", "using cont_g[THEN sup_continuous_compose]"], ["proof (prove)\nusing this:\n  sup_continuous ?g \\<Longrightarrow>\n  sup_continuous (\\<lambda>x. g ?s2 (?g x))\n\ngoal (1 subgoal):\n 1. sup_continuous\n     (\\<lambda>f s.\n         \\<Squnion>x\\<in>K s.\n            \\<integral>\\<^sup>+ t. g t (f t) \\<partial>measure_pmf x)", "by (auto intro!: order_continuous_intros)"], ["proof (state)\nthis:\n  sup_continuous\n   (\\<lambda>f s.\n       \\<Squnion>x\\<in>K s.\n          \\<integral>\\<^sup>+ t. g t (f t) \\<partial>measure_pmf x)\n\ngoal (7 subgoals):\n 1. \\<bottom> \\<in> borel_measurable St\n 2. \\<And>x.\n       x \\<in> borel_measurable St \\<Longrightarrow>\n       l x \\<in> borel_measurable St\n 3. \\<And>M.\n       (\\<And>i. M i \\<in> borel_measurable St) \\<Longrightarrow>\n       \\<Squnion> range M \\<in> borel_measurable St\n 4. \\<And>M.\n       \\<lbrakk>incseq M; \\<And>i. M i \\<in> borel_measurable St\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>s. E_sup s (\\<Squnion> range M)) =\n                         (\\<Squnion>i. (\\<lambda>s. E_sup s (M i)))\n 5. sup_continuous l\n 6. \\<And>x.\n       \\<lbrakk>x \\<in> borel_measurable St; x \\<le> lfp l\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>s. E_sup s (l x)) =\n                         (\\<lambda>s.\n                             \\<Squnion>D\\<in>K s.\n                                \\<integral>\\<^sup>+ t. g t (E_sup t x)\n             \\<partial>measure_pmf D)\n 7. \\<And>x.\n       (\\<lambda>s. E_sup s \\<bottom>)\n       \\<le> (\\<lambda>s.\n                 \\<Squnion>D\\<in>K s.\n                    \\<integral>\\<^sup>+ t. g t (x t)\n \\<partial>measure_pmf D)", "show \"sup_continuous l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_continuous l", "using cont_g[THEN sup_continuous_compose]"], ["proof (prove)\nusing this:\n  sup_continuous ?g \\<Longrightarrow>\n  sup_continuous (\\<lambda>x. g ?s2 (?g x))\n\ngoal (1 subgoal):\n 1. sup_continuous l", "by (auto intro!: order_continuous_intros simp: l_def)"], ["proof (state)\nthis:\n  sup_continuous l\n\ngoal (6 subgoals):\n 1. \\<bottom> \\<in> borel_measurable St\n 2. \\<And>x.\n       x \\<in> borel_measurable St \\<Longrightarrow>\n       l x \\<in> borel_measurable St\n 3. \\<And>M.\n       (\\<And>i. M i \\<in> borel_measurable St) \\<Longrightarrow>\n       \\<Squnion> range M \\<in> borel_measurable St\n 4. \\<And>M.\n       \\<lbrakk>incseq M; \\<And>i. M i \\<in> borel_measurable St\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>s. E_sup s (\\<Squnion> range M)) =\n                         (\\<Squnion>i. (\\<lambda>s. E_sup s (M i)))\n 5. \\<And>x.\n       \\<lbrakk>x \\<in> borel_measurable St; x \\<le> lfp l\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>s. E_sup s (l x)) =\n                         (\\<lambda>s.\n                             \\<Squnion>D\\<in>K s.\n                                \\<integral>\\<^sup>+ t. g t (E_sup t x)\n             \\<partial>measure_pmf D)\n 6. \\<And>x.\n       (\\<lambda>s. E_sup s \\<bottom>)\n       \\<le> (\\<lambda>s.\n                 \\<Squnion>D\\<in>K s.\n                    \\<integral>\\<^sup>+ t. g t (x t)\n \\<partial>measure_pmf D)", "show \"\\<And>F. (\\<lambda>s. E_sup s \\<bottom>) \\<le> (\\<lambda>s. \\<Squnion>D\\<in>K s. \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>F.\n       (\\<lambda>s. E_sup s \\<bottom>)\n       \\<le> (\\<lambda>s.\n                 \\<Squnion>D\\<in>K s.\n                    \\<integral>\\<^sup>+ t. g t (F t)\n \\<partial>measure_pmf D)", "using K_wf"], ["proof (prove)\nusing this:\n  K ?s \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>F.\n       (\\<lambda>s. E_sup s \\<bottom>)\n       \\<le> (\\<lambda>s.\n                 \\<Squnion>D\\<in>K s.\n                    \\<integral>\\<^sup>+ t. g t (F t)\n \\<partial>measure_pmf D)", "by (auto simp: E_sup_bot le_fun_def intro: SUP_upper2 )"], ["proof (state)\nthis:\n  (\\<lambda>s. E_sup s \\<bottom>)\n  \\<le> (\\<lambda>s.\n            \\<Squnion>D\\<in>K s.\n               \\<integral>\\<^sup>+ t. g t (?F1 t) \\<partial>measure_pmf D)\n\ngoal (5 subgoals):\n 1. \\<bottom> \\<in> borel_measurable St\n 2. \\<And>x.\n       x \\<in> borel_measurable St \\<Longrightarrow>\n       l x \\<in> borel_measurable St\n 3. \\<And>M.\n       (\\<And>i. M i \\<in> borel_measurable St) \\<Longrightarrow>\n       \\<Squnion> range M \\<in> borel_measurable St\n 4. \\<And>M.\n       \\<lbrakk>incseq M; \\<And>i. M i \\<in> borel_measurable St\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>s. E_sup s (\\<Squnion> range M)) =\n                         (\\<Squnion>i. (\\<lambda>s. E_sup s (M i)))\n 5. \\<And>x.\n       \\<lbrakk>x \\<in> borel_measurable St; x \\<le> lfp l\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>s. E_sup s (l x)) =\n                         (\\<lambda>s.\n                             \\<Squnion>D\\<in>K s.\n                                \\<integral>\\<^sup>+ t. g t (E_sup t x)\n             \\<partial>measure_pmf D)", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<bottom> \\<in> borel_measurable St\n 2. \\<And>x.\n       x \\<in> borel_measurable St \\<Longrightarrow>\n       l x \\<in> borel_measurable St\n 3. \\<And>M.\n       (\\<And>i. M i \\<in> borel_measurable St) \\<Longrightarrow>\n       \\<Squnion> range M \\<in> borel_measurable St\n 4. \\<And>M.\n       \\<lbrakk>incseq M; \\<And>i. M i \\<in> borel_measurable St\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>s. E_sup s (\\<Squnion> range M)) =\n                         (\\<Squnion>i. (\\<lambda>s. E_sup s (M i)))\n 5. \\<And>x.\n       \\<lbrakk>x \\<in> borel_measurable St; x \\<le> lfp l\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>s. E_sup s (l x)) =\n                         (\\<lambda>s.\n                             \\<Squnion>D\\<in>K s.\n                                \\<integral>\\<^sup>+ t. g t (E_sup t x)\n             \\<partial>measure_pmf D)", "fix f :: \"'s stream \\<Rightarrow> ennreal\""], ["proof (state)\ngoal (5 subgoals):\n 1. \\<bottom> \\<in> borel_measurable St\n 2. \\<And>x.\n       x \\<in> borel_measurable St \\<Longrightarrow>\n       l x \\<in> borel_measurable St\n 3. \\<And>M.\n       (\\<And>i. M i \\<in> borel_measurable St) \\<Longrightarrow>\n       \\<Squnion> range M \\<in> borel_measurable St\n 4. \\<And>M.\n       \\<lbrakk>incseq M; \\<And>i. M i \\<in> borel_measurable St\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>s. E_sup s (\\<Squnion> range M)) =\n                         (\\<Squnion>i. (\\<lambda>s. E_sup s (M i)))\n 5. \\<And>x.\n       \\<lbrakk>x \\<in> borel_measurable St; x \\<le> lfp l\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>s. E_sup s (l x)) =\n                         (\\<lambda>s.\n                             \\<Squnion>D\\<in>K s.\n                                \\<integral>\\<^sup>+ t. g t (E_sup t x)\n             \\<partial>measure_pmf D)", "assume f: \"f \\<in> borel_measurable St\""], ["proof (state)\nthis:\n  f \\<in> borel_measurable St\n\ngoal (5 subgoals):\n 1. \\<bottom> \\<in> borel_measurable St\n 2. \\<And>x.\n       x \\<in> borel_measurable St \\<Longrightarrow>\n       l x \\<in> borel_measurable St\n 3. \\<And>M.\n       (\\<And>i. M i \\<in> borel_measurable St) \\<Longrightarrow>\n       \\<Squnion> range M \\<in> borel_measurable St\n 4. \\<And>M.\n       \\<lbrakk>incseq M; \\<And>i. M i \\<in> borel_measurable St\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>s. E_sup s (\\<Squnion> range M)) =\n                         (\\<Squnion>i. (\\<lambda>s. E_sup s (M i)))\n 5. \\<And>x.\n       \\<lbrakk>x \\<in> borel_measurable St; x \\<le> lfp l\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>s. E_sup s (l x)) =\n                         (\\<lambda>s.\n                             \\<Squnion>D\\<in>K s.\n                                \\<integral>\\<^sup>+ t. g t (E_sup t x)\n             \\<partial>measure_pmf D)", "moreover"], ["proof (state)\nthis:\n  f \\<in> borel_measurable St\n\ngoal (5 subgoals):\n 1. \\<bottom> \\<in> borel_measurable St\n 2. \\<And>x.\n       x \\<in> borel_measurable St \\<Longrightarrow>\n       l x \\<in> borel_measurable St\n 3. \\<And>M.\n       (\\<And>i. M i \\<in> borel_measurable St) \\<Longrightarrow>\n       \\<Squnion> range M \\<in> borel_measurable St\n 4. \\<And>M.\n       \\<lbrakk>incseq M; \\<And>i. M i \\<in> borel_measurable St\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>s. E_sup s (\\<Squnion> range M)) =\n                         (\\<Squnion>i. (\\<lambda>s. E_sup s (M i)))\n 5. \\<And>x.\n       \\<lbrakk>x \\<in> borel_measurable St; x \\<le> lfp l\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>s. E_sup s (l x)) =\n                         (\\<lambda>s.\n                             \\<Squnion>D\\<in>K s.\n                                \\<integral>\\<^sup>+ t. g t (E_sup t x)\n             \\<partial>measure_pmf D)", "have \"E_sup s (\\<lambda>\\<omega>. g s (f \\<omega>)) = g s (E_sup s f)\" for s"], ["proof (prove)\ngoal (1 subgoal):\n 1. E_sup s (\\<lambda>\\<omega>. g s (f \\<omega>)) = g s (E_sup s f)", "unfolding E_sup_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Squnion>cfg\\<in>cfg_on s.\n        \\<integral>\\<^sup>+ \\<omega>. g s (f \\<omega>) \\<partial>T cfg) =\n    g s (\\<Squnion>cfg\\<in>cfg_on s. integral\\<^sup>N (T cfg) f)", "using int_g[OF f]"], ["proof (prove)\nusing this:\n  \\<integral>\\<^sup>+ \\<omega>. g (state ?cfg1) (f \\<omega>)\n                     \\<partial>T ?cfg1 =\n  g (state ?cfg1) (integral\\<^sup>N (T ?cfg1) f)\n\ngoal (1 subgoal):\n 1. (\\<Squnion>cfg\\<in>cfg_on s.\n        \\<integral>\\<^sup>+ \\<omega>. g s (f \\<omega>) \\<partial>T cfg) =\n    g s (\\<Squnion>cfg\\<in>cfg_on s. integral\\<^sup>N (T cfg) f)", "by (subst SUP_sup_continuous_ennreal[OF cont_g, symmetric])\n       (auto intro!: SUP_cong simp del: cfg_onD_state dest: cfg_onD_state[symmetric])"], ["proof (state)\nthis:\n  E_sup ?s1 (\\<lambda>\\<omega>. g ?s1 (f \\<omega>)) = g ?s1 (E_sup ?s1 f)\n\ngoal (5 subgoals):\n 1. \\<bottom> \\<in> borel_measurable St\n 2. \\<And>x.\n       x \\<in> borel_measurable St \\<Longrightarrow>\n       l x \\<in> borel_measurable St\n 3. \\<And>M.\n       (\\<And>i. M i \\<in> borel_measurable St) \\<Longrightarrow>\n       \\<Squnion> range M \\<in> borel_measurable St\n 4. \\<And>M.\n       \\<lbrakk>incseq M; \\<And>i. M i \\<in> borel_measurable St\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>s. E_sup s (\\<Squnion> range M)) =\n                         (\\<Squnion>i. (\\<lambda>s. E_sup s (M i)))\n 5. \\<And>x.\n       \\<lbrakk>x \\<in> borel_measurable St; x \\<le> lfp l\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>s. E_sup s (l x)) =\n                         (\\<lambda>s.\n                             \\<Squnion>D\\<in>K s.\n                                \\<integral>\\<^sup>+ t. g t (E_sup t x)\n             \\<partial>measure_pmf D)", "ultimately"], ["proof (chain)\npicking this:\n  f \\<in> borel_measurable St\n  E_sup ?s1 (\\<lambda>\\<omega>. g ?s1 (f \\<omega>)) = g ?s1 (E_sup ?s1 f)", "show \"(\\<lambda>s. E_sup s (l f)) = (\\<lambda>s. \\<Squnion>D\\<in>K s. \\<integral>\\<^sup>+ t. g t (E_sup t f) \\<partial>measure_pmf D)\""], ["proof (prove)\nusing this:\n  f \\<in> borel_measurable St\n  E_sup ?s1 (\\<lambda>\\<omega>. g ?s1 (f \\<omega>)) = g ?s1 (E_sup ?s1 f)\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. E_sup s (l f)) =\n    (\\<lambda>s.\n        \\<Squnion>D\\<in>K s.\n           \\<integral>\\<^sup>+ t. g t (E_sup t f) \\<partial>measure_pmf D)", "by (subst E_sup_iterate) (auto simp: l_def int_g fun_eq_iff intro!: SUP_cong nn_integral_cong)"], ["proof (state)\nthis:\n  (\\<lambda>s. E_sup s (l f)) =\n  (\\<lambda>s.\n      \\<Squnion>D\\<in>K s.\n         \\<integral>\\<^sup>+ t. g t (E_sup t f) \\<partial>measure_pmf D)\n\ngoal (4 subgoals):\n 1. \\<bottom> \\<in> borel_measurable St\n 2. \\<And>x.\n       x \\<in> borel_measurable St \\<Longrightarrow>\n       l x \\<in> borel_measurable St\n 3. \\<And>M.\n       (\\<And>i. M i \\<in> borel_measurable St) \\<Longrightarrow>\n       \\<Squnion> range M \\<in> borel_measurable St\n 4. \\<And>M.\n       \\<lbrakk>incseq M; \\<And>i. M i \\<in> borel_measurable St\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>s. E_sup s (\\<Squnion> range M)) =\n                         (\\<Squnion>i. (\\<lambda>s. E_sup s (M i)))", "qed (auto simp: bot_fun_def l_def SUP_apply[abs_def] E_sup_SUP)"], ["", "definition \"P_sup s P = (\\<Squnion>cfg\\<in>cfg_on s. emeasure (T cfg) {x\\<in>space St. P x})\""], ["", "lemma P_sup_eq_E_sup:\n  assumes [measurable]: \"Measurable.pred St P\"\n  shows \"P_sup s P = E_sup s (indicator {x\\<in>space St. P x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P_sup s P = E_sup s (indicator {x \\<in> space St. P x})", "by (auto simp add: P_sup_def E_sup_def intro!: SUP_cong nn_integral_cong)"], ["", "lemma P_sup_True[simp]: \"P_sup t (\\<lambda>\\<omega>. True) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P_sup t (\\<lambda>\\<omega>. True) = 1", "using T.emeasure_space_1"], ["proof (prove)\nusing this:\n  emeasure (T ?cfg) (space (T ?cfg)) = 1\n\ngoal (1 subgoal):\n 1. P_sup t (\\<lambda>\\<omega>. True) = 1", "by (auto simp add: P_sup_def SUP_constant)"], ["", "lemma P_sup_False[simp]: \"P_sup t (\\<lambda>\\<omega>. False) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P_sup t (\\<lambda>\\<omega>. False) = 0", "by (auto simp add: P_sup_def SUP_constant)"], ["", "lemma P_sup_SUP:\n  fixes P :: \"nat \\<Rightarrow> 's stream \\<Rightarrow> bool\"\n  assumes \"mono P\" and P[measurable]: \"\\<And>i. Measurable.pred St (P i)\"\n  shows \"P_sup s (\\<lambda>x. \\<exists>i. P i x) = (\\<Squnion>i. P_sup s (P i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P_sup s (\\<lambda>x. \\<exists>i. P i x) = (\\<Squnion>i. P_sup s (P i))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P_sup s (\\<lambda>x. \\<exists>i. P i x) = (\\<Squnion>i. P_sup s (P i))", "have \"P_sup s (\\<lambda>x. \\<Squnion>i. P i x) = (\\<Squnion>cfg\\<in>cfg_on s. emeasure (T cfg) (\\<Union>i. {x\\<in>space St. P i x}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P_sup s (\\<lambda>x. \\<Squnion>i. P i x) =\n    (\\<Squnion>cfg\\<in>cfg_on s.\n        emeasure (T cfg) (\\<Union>i. {x \\<in> space St. P i x}))", "by (auto simp: P_sup_def intro!: SUP_cong arg_cong2[where f=emeasure])"], ["proof (state)\nthis:\n  P_sup s (\\<lambda>x. \\<Squnion>i. P i x) =\n  (\\<Squnion>cfg\\<in>cfg_on s.\n      emeasure (T cfg) (\\<Union>i. {x \\<in> space St. P i x}))\n\ngoal (1 subgoal):\n 1. P_sup s (\\<lambda>x. \\<exists>i. P i x) = (\\<Squnion>i. P_sup s (P i))", "also"], ["proof (state)\nthis:\n  P_sup s (\\<lambda>x. \\<Squnion>i. P i x) =\n  (\\<Squnion>cfg\\<in>cfg_on s.\n      emeasure (T cfg) (\\<Union>i. {x \\<in> space St. P i x}))\n\ngoal (1 subgoal):\n 1. P_sup s (\\<lambda>x. \\<exists>i. P i x) = (\\<Squnion>i. P_sup s (P i))", "have \"\\<dots> = (\\<Squnion>cfg\\<in>cfg_on s. \\<Squnion>i. emeasure (T cfg) {x\\<in>space St. P i x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Squnion>cfg\\<in>cfg_on s.\n        emeasure (T cfg) (\\<Union>i. {x \\<in> space St. P i x})) =\n    (\\<Squnion>cfg\\<in>cfg_on s.\n        \\<Squnion>i. emeasure (T cfg) {x \\<in> space St. P i x})", "using \\<open>mono P\\<close>"], ["proof (prove)\nusing this:\n  incseq P\n\ngoal (1 subgoal):\n 1. (\\<Squnion>cfg\\<in>cfg_on s.\n        emeasure (T cfg) (\\<Union>i. {x \\<in> space St. P i x})) =\n    (\\<Squnion>cfg\\<in>cfg_on s.\n        \\<Squnion>i. emeasure (T cfg) {x \\<in> space St. P i x})", "by (auto intro!: SUP_cong SUP_emeasure_incseq[symmetric] simp: mono_def le_fun_def)"], ["proof (state)\nthis:\n  (\\<Squnion>cfg\\<in>cfg_on s.\n      emeasure (T cfg) (\\<Union>i. {x \\<in> space St. P i x})) =\n  (\\<Squnion>cfg\\<in>cfg_on s.\n      \\<Squnion>i. emeasure (T cfg) {x \\<in> space St. P i x})\n\ngoal (1 subgoal):\n 1. P_sup s (\\<lambda>x. \\<exists>i. P i x) = (\\<Squnion>i. P_sup s (P i))", "also"], ["proof (state)\nthis:\n  (\\<Squnion>cfg\\<in>cfg_on s.\n      emeasure (T cfg) (\\<Union>i. {x \\<in> space St. P i x})) =\n  (\\<Squnion>cfg\\<in>cfg_on s.\n      \\<Squnion>i. emeasure (T cfg) {x \\<in> space St. P i x})\n\ngoal (1 subgoal):\n 1. P_sup s (\\<lambda>x. \\<exists>i. P i x) = (\\<Squnion>i. P_sup s (P i))", "have \"\\<dots> = (\\<Squnion>i. P_sup s (P i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Squnion>cfg\\<in>cfg_on s.\n        \\<Squnion>i. emeasure (T cfg) {x \\<in> space St. P i x}) =\n    (\\<Squnion>i. P_sup s (P i))", "by (subst SUP_commute) (simp add: P_sup_def)"], ["proof (state)\nthis:\n  (\\<Squnion>cfg\\<in>cfg_on s.\n      \\<Squnion>i. emeasure (T cfg) {x \\<in> space St. P i x}) =\n  (\\<Squnion>i. P_sup s (P i))\n\ngoal (1 subgoal):\n 1. P_sup s (\\<lambda>x. \\<exists>i. P i x) = (\\<Squnion>i. P_sup s (P i))", "finally"], ["proof (chain)\npicking this:\n  P_sup s (\\<lambda>x. \\<Squnion>i. P i x) = (\\<Squnion>i. P_sup s (P i))", "show ?thesis"], ["proof (prove)\nusing this:\n  P_sup s (\\<lambda>x. \\<Squnion>i. P i x) = (\\<Squnion>i. P_sup s (P i))\n\ngoal (1 subgoal):\n 1. P_sup s (\\<lambda>x. \\<exists>i. P i x) = (\\<Squnion>i. P_sup s (P i))", "by simp"], ["proof (state)\nthis:\n  P_sup s (\\<lambda>x. \\<exists>i. P i x) = (\\<Squnion>i. P_sup s (P i))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma P_sup_lfp:\n  assumes Q: \"sup_continuous Q\"\n  assumes f: \"f \\<in> measurable St M\"\n  assumes Q_m: \"\\<And>P. Measurable.pred M P \\<Longrightarrow> Measurable.pred M (Q P)\"\n  shows \"P_sup s (\\<lambda>x. lfp Q (f x)) = (\\<Squnion>i. P_sup s (\\<lambda>x. (Q ^^ i) \\<bottom> (f x)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P_sup s (\\<lambda>x. lfp Q (f x)) =\n    (\\<Squnion>i. P_sup s (\\<lambda>x. (Q ^^ i) \\<bottom> (f x)))", "unfolding sup_continuous_lfp[OF Q]"], ["proof (prove)\ngoal (1 subgoal):\n 1. P_sup s (\\<lambda>x. (\\<Squnion>i. (Q ^^ i) \\<bottom>) (f x)) =\n    (\\<Squnion>i. P_sup s (\\<lambda>x. (Q ^^ i) \\<bottom> (f x)))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. P_sup s (\\<lambda>x. \\<exists>fa. (Q ^^ fa) \\<bottom> (f x)) =\n    (\\<Squnion>i. P_sup s (\\<lambda>x. (Q ^^ i) \\<bottom> (f x)))", "proof (rule P_sup_SUP)"], ["proof (state)\ngoal (2 subgoals):\n 1. incseq (\\<lambda>i x. (Q ^^ i) \\<bottom> (f x))\n 2. \\<And>fa. Measurable.pred St (\\<lambda>x. (Q ^^ fa) \\<bottom> (f x))", "fix i"], ["proof (state)\ngoal (2 subgoals):\n 1. incseq (\\<lambda>i x. (Q ^^ i) \\<bottom> (f x))\n 2. \\<And>fa. Measurable.pred St (\\<lambda>x. (Q ^^ fa) \\<bottom> (f x))", "show \"Measurable.pred St (\\<lambda>x. (Q ^^ i) \\<bottom> (f x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Measurable.pred St (\\<lambda>x. (Q ^^ i) \\<bottom> (f x))", "apply (intro measurable_compose[OF f])"], ["proof (prove)\ngoal (1 subgoal):\n 1. Measurable.pred M ((Q ^^ i) \\<bottom>)", "by (induct i) (auto intro!: Q_m)"], ["proof (state)\nthis:\n  Measurable.pred St (\\<lambda>x. (Q ^^ i) \\<bottom> (f x))\n\ngoal (1 subgoal):\n 1. incseq (\\<lambda>i x. (Q ^^ i) \\<bottom> (f x))", "qed (intro mono_funpow sup_continuous_mono[OF Q] mono_compose[where f=f])"], ["", "lemma P_sup_iterate:\n  assumes [measurable]: \"Measurable.pred St P\"\n  shows \"P_sup s P = (\\<Squnion>D\\<in>K s. \\<integral>\\<^sup>+ t. P_sup t (\\<lambda>\\<omega>. P (t ## \\<omega>)) \\<partial>measure_pmf D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P_sup s P =\n    (\\<Squnion>D\\<in>K s.\n        \\<integral>\\<^sup>+ t. P_sup t\n                                (\\<lambda>\\<omega>. P (t ## \\<omega>))\n                           \\<partial>measure_pmf D)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P_sup s P =\n    (\\<Squnion>D\\<in>K s.\n        \\<integral>\\<^sup>+ t. P_sup t\n                                (\\<lambda>\\<omega>. P (t ## \\<omega>))\n                           \\<partial>measure_pmf D)", "have [simp]: \"\\<And>x s. indicator {x \\<in> space St. P x} (x ## s) = indicator {s \\<in> space St. P (x ## s)} s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x s.\n       indicator {x \\<in> space St. P x} (x ## s) =\n       indicator {s \\<in> space St. P (x ## s)} s", "by (auto simp: space_stream_space split: split_indicator)"], ["proof (state)\nthis:\n  indicator {x \\<in> space St. P x} (?x1 ## ?s1) =\n  indicator {s \\<in> space St. P (?x1 ## s)} ?s1\n\ngoal (1 subgoal):\n 1. P_sup s P =\n    (\\<Squnion>D\\<in>K s.\n        \\<integral>\\<^sup>+ t. P_sup t\n                                (\\<lambda>\\<omega>. P (t ## \\<omega>))\n                           \\<partial>measure_pmf D)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. P_sup s P =\n    (\\<Squnion>D\\<in>K s.\n        \\<integral>\\<^sup>+ t. P_sup t\n                                (\\<lambda>\\<omega>. P (t ## \\<omega>))\n                           \\<partial>measure_pmf D)", "using E_sup_iterate[of \"indicator {x\\<in>space St. P x}\" s]"], ["proof (prove)\nusing this:\n  indicator {x \\<in> space St. P x}\n  \\<in> borel_measurable St \\<Longrightarrow>\n  E_sup s (indicator {x \\<in> space St. P x}) =\n  (\\<Squnion>D\\<in>K s.\n      \\<integral>\\<^sup>+ t. E_sup t\n                              (\\<lambda>\\<omega>.\n                                  indicator {x \\<in> space St. P x}\n                                   (t ## \\<omega>))\n                         \\<partial>measure_pmf D)\n\ngoal (1 subgoal):\n 1. P_sup s P =\n    (\\<Squnion>D\\<in>K s.\n        \\<integral>\\<^sup>+ t. P_sup t\n                                (\\<lambda>\\<omega>. P (t ## \\<omega>))\n                           \\<partial>measure_pmf D)", "by (auto simp: P_sup_eq_E_sup)"], ["proof (state)\nthis:\n  P_sup s P =\n  (\\<Squnion>D\\<in>K s.\n      \\<integral>\\<^sup>+ t. P_sup t (\\<lambda>\\<omega>. P (t ## \\<omega>))\n                         \\<partial>measure_pmf D)\n\ngoal:\nNo subgoals!", "qed"], ["", "definition \"E_inf s f = (\\<Sqinter>cfg\\<in>cfg_on s. \\<integral>\\<^sup>+x. f x \\<partial>T cfg)\""], ["", "lemma E_inf_const: \"0 \\<le> c \\<Longrightarrow> E_inf s (\\<lambda>_. c) = c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> c \\<Longrightarrow> E_inf s (\\<lambda>_. c) = c", "using T.emeasure_space_1"], ["proof (prove)\nusing this:\n  emeasure (T ?cfg) (space (T ?cfg)) = 1\n\ngoal (1 subgoal):\n 1. 0 \\<le> c \\<Longrightarrow> E_inf s (\\<lambda>_. c) = c", "by (simp add: E_inf_def)"], ["", "lemma E_inf_mono:\n  \"(\\<And>\\<omega>. f \\<omega> \\<le> g \\<omega>) \\<Longrightarrow> E_inf s f \\<le> E_inf s g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<omega>. f \\<omega> \\<le> g \\<omega>) \\<Longrightarrow>\n    E_inf s f \\<le> E_inf s g", "unfolding E_inf_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<omega>. f \\<omega> \\<le> g \\<omega>) \\<Longrightarrow>\n    (\\<Sqinter>cfg\\<in>cfg_on s. integral\\<^sup>N (T cfg) f)\n    \\<le> (\\<Sqinter>cfg\\<in>cfg_on s. integral\\<^sup>N (T cfg) g)", "by (intro INF_superset_mono order_refl nn_integral_mono)"], ["", "lemma E_inf_iterate:\n  assumes [measurable]: \"f \\<in> borel_measurable St\"\n  shows \"E_inf s f = (\\<Sqinter>D\\<in>K s. \\<integral>\\<^sup>+ t. E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>)) \\<partial>measure_pmf D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. E_inf s f =\n    (\\<Sqinter>D\\<in>K s.\n        \\<integral>\\<^sup>+ t. E_inf t\n                                (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                           \\<partial>measure_pmf D)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. E_inf s f =\n    (\\<Sqinter>D\\<in>K s.\n        \\<integral>\\<^sup>+ t. E_inf t\n                                (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                           \\<partial>measure_pmf D)", "let ?v = \"\\<lambda>t. \\<integral>\\<^sup>+x. f (state t ## x) \\<partial>T t\""], ["proof (state)\ngoal (1 subgoal):\n 1. E_inf s f =\n    (\\<Sqinter>D\\<in>K s.\n        \\<integral>\\<^sup>+ t. E_inf t\n                                (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                           \\<partial>measure_pmf D)", "let ?p = \"\\<lambda>t. E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>))\""], ["proof (state)\ngoal (1 subgoal):\n 1. E_inf s f =\n    (\\<Sqinter>D\\<in>K s.\n        \\<integral>\\<^sup>+ t. E_inf t\n                                (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                           \\<partial>measure_pmf D)", "have \"E_inf s f = (\\<Sqinter>cfg\\<in>cfg_on s. \\<integral>\\<^sup>+t. ?v t \\<partial>K_cfg cfg)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. E_inf s f =\n    (\\<Sqinter>cfg\\<in>cfg_on s.\n        \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n            \\<partial>T t\n                           \\<partial>measure_pmf (K_cfg cfg))", "unfolding E_inf_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sqinter>cfg\\<in>cfg_on s. integral\\<^sup>N (T cfg) f) =\n    (\\<Sqinter>cfg\\<in>cfg_on s.\n        \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n            \\<partial>T t\n                           \\<partial>measure_pmf (K_cfg cfg))", "by (intro INF_cong refl) (subst nn_integral_T, simp_all add: cfg_on_def)"], ["proof (state)\nthis:\n  E_inf s f =\n  (\\<Sqinter>cfg\\<in>cfg_on s.\n      \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n          \\<partial>T t\n                         \\<partial>measure_pmf (K_cfg cfg))\n\ngoal (1 subgoal):\n 1. E_inf s f =\n    (\\<Sqinter>D\\<in>K s.\n        \\<integral>\\<^sup>+ t. E_inf t\n                                (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                           \\<partial>measure_pmf D)", "also"], ["proof (state)\nthis:\n  E_inf s f =\n  (\\<Sqinter>cfg\\<in>cfg_on s.\n      \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n          \\<partial>T t\n                         \\<partial>measure_pmf (K_cfg cfg))\n\ngoal (1 subgoal):\n 1. E_inf s f =\n    (\\<Sqinter>D\\<in>K s.\n        \\<integral>\\<^sup>+ t. E_inf t\n                                (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                           \\<partial>measure_pmf D)", "have \"\\<dots> = (\\<Sqinter>D\\<in>K s. \\<integral>\\<^sup>+t. ?p t \\<partial>measure_pmf D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sqinter>cfg\\<in>cfg_on s.\n        \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n            \\<partial>T t\n                           \\<partial>measure_pmf (K_cfg cfg)) =\n    (\\<Sqinter>D\\<in>K s.\n        \\<integral>\\<^sup>+ t. E_inf t\n                                (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                           \\<partial>measure_pmf D)", "proof (intro antisym INF_greatest)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>D.\n       D \\<in> K s \\<Longrightarrow>\n       (\\<Sqinter>cfg\\<in>cfg_on s.\n           \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n               \\<partial>T t\n                              \\<partial>measure_pmf (K_cfg cfg))\n       \\<le> \\<integral>\\<^sup>+ t. E_inf t\n                                     (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                                \\<partial>measure_pmf D\n 2. \\<And>cfg.\n       cfg \\<in> cfg_on s \\<Longrightarrow>\n       (\\<Sqinter>D\\<in>K s.\n           \\<integral>\\<^sup>+ t. E_inf t\n                                   (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                              \\<partial>measure_pmf D)\n       \\<le> \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n                 \\<partial>T t\n                                \\<partial>measure_pmf (K_cfg cfg)", "fix cfg :: \"'s cfg\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>D.\n       D \\<in> K s \\<Longrightarrow>\n       (\\<Sqinter>cfg\\<in>cfg_on s.\n           \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n               \\<partial>T t\n                              \\<partial>measure_pmf (K_cfg cfg))\n       \\<le> \\<integral>\\<^sup>+ t. E_inf t\n                                     (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                                \\<partial>measure_pmf D\n 2. \\<And>cfg.\n       cfg \\<in> cfg_on s \\<Longrightarrow>\n       (\\<Sqinter>D\\<in>K s.\n           \\<integral>\\<^sup>+ t. E_inf t\n                                   (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                              \\<partial>measure_pmf D)\n       \\<le> \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n                 \\<partial>T t\n                                \\<partial>measure_pmf (K_cfg cfg)", "assume cfg: \"cfg \\<in> cfg_on s\""], ["proof (state)\nthis:\n  cfg \\<in> cfg_on s\n\ngoal (2 subgoals):\n 1. \\<And>D.\n       D \\<in> K s \\<Longrightarrow>\n       (\\<Sqinter>cfg\\<in>cfg_on s.\n           \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n               \\<partial>T t\n                              \\<partial>measure_pmf (K_cfg cfg))\n       \\<le> \\<integral>\\<^sup>+ t. E_inf t\n                                     (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                                \\<partial>measure_pmf D\n 2. \\<And>cfg.\n       cfg \\<in> cfg_on s \\<Longrightarrow>\n       (\\<Sqinter>D\\<in>K s.\n           \\<integral>\\<^sup>+ t. E_inf t\n                                   (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                              \\<partial>measure_pmf D)\n       \\<le> \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n                 \\<partial>T t\n                                \\<partial>measure_pmf (K_cfg cfg)", "then"], ["proof (chain)\npicking this:\n  cfg \\<in> cfg_on s", "show \"(INF D\\<in>K s. \\<integral>\\<^sup>+t. ?p t \\<partial>measure_pmf D) \\<le> (\\<integral>\\<^sup>+ t. ?v t \\<partial>K_cfg cfg)\""], ["proof (prove)\nusing this:\n  cfg \\<in> cfg_on s\n\ngoal (1 subgoal):\n 1. (\\<Sqinter>D\\<in>K s.\n        \\<integral>\\<^sup>+ t. E_inf t\n                                (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                           \\<partial>measure_pmf D)\n    \\<le> \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n              \\<partial>T t\n                             \\<partial>measure_pmf (K_cfg cfg)", "by (auto simp add: E_inf_def nn_integral_K_cfg AE_measure_pmf_iff intro!: nn_integral_mono_AE INF_lower2)"], ["proof (state)\nthis:\n  (\\<Sqinter>D\\<in>K s.\n      \\<integral>\\<^sup>+ t. E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                         \\<partial>measure_pmf D)\n  \\<le> \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n            \\<partial>T t\n                           \\<partial>measure_pmf (K_cfg cfg)\n\ngoal (1 subgoal):\n 1. \\<And>D.\n       D \\<in> K s \\<Longrightarrow>\n       (\\<Sqinter>cfg\\<in>cfg_on s.\n           \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n               \\<partial>T t\n                              \\<partial>measure_pmf (K_cfg cfg))\n       \\<le> \\<integral>\\<^sup>+ t. E_inf t\n                                     (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                                \\<partial>measure_pmf D", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>D.\n       D \\<in> K s \\<Longrightarrow>\n       (\\<Sqinter>cfg\\<in>cfg_on s.\n           \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n               \\<partial>T t\n                              \\<partial>measure_pmf (K_cfg cfg))\n       \\<le> \\<integral>\\<^sup>+ t. E_inf t\n                                     (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                                \\<partial>measure_pmf D", "fix D"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>D.\n       D \\<in> K s \\<Longrightarrow>\n       (\\<Sqinter>cfg\\<in>cfg_on s.\n           \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n               \\<partial>T t\n                              \\<partial>measure_pmf (K_cfg cfg))\n       \\<le> \\<integral>\\<^sup>+ t. E_inf t\n                                     (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                                \\<partial>measure_pmf D", "assume D: \"D \\<in> K s\""], ["proof (state)\nthis:\n  D \\<in> K s\n\ngoal (1 subgoal):\n 1. \\<And>D.\n       D \\<in> K s \\<Longrightarrow>\n       (\\<Sqinter>cfg\\<in>cfg_on s.\n           \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n               \\<partial>T t\n                              \\<partial>measure_pmf (K_cfg cfg))\n       \\<le> \\<integral>\\<^sup>+ t. E_inf t\n                                     (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                                \\<partial>measure_pmf D", "show \"(INF cfg \\<in> cfg_on s. \\<integral>\\<^sup>+ t. ?v t \\<partial>K_cfg cfg) \\<le> (\\<integral>\\<^sup>+t. ?p t \\<partial>D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sqinter>cfg\\<in>cfg_on s.\n        \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n            \\<partial>T t\n                           \\<partial>measure_pmf (K_cfg cfg))\n    \\<le> \\<integral>\\<^sup>+ t. E_inf t\n                                  (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                             \\<partial>measure_pmf D", "proof (rule ennreal_le_epsilon)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>\\<integral>\\<^sup>+ t. E_inf t\n  (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                                   \\<partial>measure_pmf D\n                < \\<top>;\n        0 < e\\<rbrakk>\n       \\<Longrightarrow> (\\<Sqinter>cfg\\<in>cfg_on s.\n                             \\<integral>\\<^sup>+ t.\n            \\<integral>\\<^sup>+ x. f (state t ## x) \\<partial>T t\n          \\<partial>measure_pmf (K_cfg cfg))\n                         \\<le> \\<integral>\\<^sup>+ t.\n              E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n            \\<partial>measure_pmf D +\n                               ennreal e", "fix e :: real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>\\<integral>\\<^sup>+ t. E_inf t\n  (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                                   \\<partial>measure_pmf D\n                < \\<top>;\n        0 < e\\<rbrakk>\n       \\<Longrightarrow> (\\<Sqinter>cfg\\<in>cfg_on s.\n                             \\<integral>\\<^sup>+ t.\n            \\<integral>\\<^sup>+ x. f (state t ## x) \\<partial>T t\n          \\<partial>measure_pmf (K_cfg cfg))\n                         \\<le> \\<integral>\\<^sup>+ t.\n              E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n            \\<partial>measure_pmf D +\n                               ennreal e", "assume \"0 < e\""], ["proof (state)\nthis:\n  0 < e\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>\\<integral>\\<^sup>+ t. E_inf t\n  (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                                   \\<partial>measure_pmf D\n                < \\<top>;\n        0 < e\\<rbrakk>\n       \\<Longrightarrow> (\\<Sqinter>cfg\\<in>cfg_on s.\n                             \\<integral>\\<^sup>+ t.\n            \\<integral>\\<^sup>+ x. f (state t ## x) \\<partial>T t\n          \\<partial>measure_pmf (K_cfg cfg))\n                         \\<le> \\<integral>\\<^sup>+ t.\n              E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n            \\<partial>measure_pmf D +\n                               ennreal e", "have \"\\<forall>t\\<in>D. \\<exists>cfg\\<in>cfg_on t. ?v cfg \\<le> ?p t + e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>t\\<in>set_pmf D.\n       \\<exists>cfg\\<in>cfg_on t.\n          \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg\n          \\<le> E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>)) + ennreal e", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<in> set_pmf D \\<Longrightarrow>\n       \\<exists>cfg\\<in>cfg_on t.\n          \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg\n          \\<le> E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>)) + ennreal e", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<in> set_pmf D \\<Longrightarrow>\n       \\<exists>cfg\\<in>cfg_on t.\n          \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg\n          \\<le> E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>)) + ennreal e", "assume \"t \\<in> D\""], ["proof (state)\nthis:\n  t \\<in> set_pmf D\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<in> set_pmf D \\<Longrightarrow>\n       \\<exists>cfg\\<in>cfg_on t.\n          \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg\n          \\<le> E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>)) + ennreal e", "show \"\\<exists>cfg\\<in>cfg_on t. ?v cfg \\<le> ?p t + e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>cfg\\<in>cfg_on t.\n       \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg\n       \\<le> E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>)) + ennreal e", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>cfg\\<in>cfg_on t.\n       \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg\n       \\<le> E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>)) + ennreal e\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>cfg\\<in>cfg_on t.\n       \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg\n       \\<le> E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>)) + ennreal e", "assume \"?p t = \\<infinity>\""], ["proof (state)\nthis:\n  E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>)) = \\<infinity>\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>cfg\\<in>cfg_on t.\n       \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg\n       \\<le> E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>)) + ennreal e\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>cfg\\<in>cfg_on t.\n       \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg\n       \\<le> E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>)) + ennreal e", "with cfg_on_not_empty[of t]"], ["proof (chain)\npicking this:\n  cfg_on t \\<noteq> {}\n  E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>)) = \\<infinity>", "show ?thesis"], ["proof (prove)\nusing this:\n  cfg_on t \\<noteq> {}\n  E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>)) = \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<exists>cfg\\<in>cfg_on t.\n       \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg\n       \\<le> E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>)) + ennreal e", "by (auto simp: top_add simp del: cfg_on_not_empty)"], ["proof (state)\nthis:\n  \\<exists>cfg\\<in>cfg_on t.\n     \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg\n     \\<le> E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>)) + ennreal e\n\ngoal (1 subgoal):\n 1. E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>)) \\<noteq>\n    \\<infinity> \\<Longrightarrow>\n    \\<exists>cfg\\<in>cfg_on t.\n       \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg\n       \\<le> E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>)) + ennreal e", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>)) \\<noteq>\n    \\<infinity> \\<Longrightarrow>\n    \\<exists>cfg\\<in>cfg_on t.\n       \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg\n       \\<le> E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>)) + ennreal e", "assume p_finite: \"?p t \\<noteq> \\<infinity>\""], ["proof (state)\nthis:\n  E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>)) \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>)) \\<noteq>\n    \\<infinity> \\<Longrightarrow>\n    \\<exists>cfg\\<in>cfg_on t.\n       \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg\n       \\<le> E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>)) + ennreal e", "note \\<open>t \\<in> D\\<close>"], ["proof (state)\nthis:\n  t \\<in> set_pmf D\n\ngoal (1 subgoal):\n 1. E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>)) \\<noteq>\n    \\<infinity> \\<Longrightarrow>\n    \\<exists>cfg\\<in>cfg_on t.\n       \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg\n       \\<le> E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>)) + ennreal e", "moreover"], ["proof (state)\nthis:\n  t \\<in> set_pmf D\n\ngoal (1 subgoal):\n 1. E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>)) \\<noteq>\n    \\<infinity> \\<Longrightarrow>\n    \\<exists>cfg\\<in>cfg_on t.\n       \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg\n       \\<le> E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>)) + ennreal e", "have \"(INF cfg \\<in> cfg_on t. ?v cfg) = ?p t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sqinter>cfg\\<in>cfg_on t.\n        \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg) =\n    E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>))", "unfolding E_inf_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sqinter>cfg\\<in>cfg_on t.\n        \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg) =\n    (\\<Sqinter>cfg\\<in>cfg_on t.\n        \\<integral>\\<^sup>+ \\<omega>. f (t ## \\<omega>) \\<partial>T cfg)", "by (simp add: cfg_on_def)"], ["proof (state)\nthis:\n  (\\<Sqinter>cfg\\<in>cfg_on t.\n      \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg) =\n  E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n\ngoal (1 subgoal):\n 1. E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>)) \\<noteq>\n    \\<infinity> \\<Longrightarrow>\n    \\<exists>cfg\\<in>cfg_on t.\n       \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg\n       \\<le> E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>)) + ennreal e", "ultimately"], ["proof (chain)\npicking this:\n  t \\<in> set_pmf D\n  (\\<Sqinter>cfg\\<in>cfg_on t.\n      \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg) =\n  E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>))", "have \"(INF cfg \\<in> cfg_on t. ?v cfg) \\<noteq> \\<infinity>\""], ["proof (prove)\nusing this:\n  t \\<in> set_pmf D\n  (\\<Sqinter>cfg\\<in>cfg_on t.\n      \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg) =\n  E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n\ngoal (1 subgoal):\n 1. (\\<Sqinter>cfg\\<in>cfg_on t.\n        \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg) \\<noteq>\n    \\<infinity>", "using p_finite"], ["proof (prove)\nusing this:\n  t \\<in> set_pmf D\n  (\\<Sqinter>cfg\\<in>cfg_on t.\n      \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg) =\n  E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n  E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>)) \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. (\\<Sqinter>cfg\\<in>cfg_on t.\n        \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg) \\<noteq>\n    \\<infinity>", "by auto"], ["proof (state)\nthis:\n  (\\<Sqinter>cfg\\<in>cfg_on t.\n      \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg) \\<noteq>\n  \\<infinity>\n\ngoal (1 subgoal):\n 1. E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>)) \\<noteq>\n    \\<infinity> \\<Longrightarrow>\n    \\<exists>cfg\\<in>cfg_on t.\n       \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg\n       \\<le> E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>)) + ennreal e", "from INF_approx_ennreal[OF \\<open>0 < e\\<close> refl this]"], ["proof (chain)\npicking this:\n  \\<exists>i\\<in>cfg_on t.\n     \\<integral>\\<^sup>+ x. f (state i ## x) \\<partial>T i\n     < (\\<Sqinter>cfg\\<in>cfg_on t.\n           \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg) +\n       ennreal e", "show \"\\<exists>cfg\\<in>cfg_on t. ?v cfg \\<le> ?p t + e\""], ["proof (prove)\nusing this:\n  \\<exists>i\\<in>cfg_on t.\n     \\<integral>\\<^sup>+ x. f (state i ## x) \\<partial>T i\n     < (\\<Sqinter>cfg\\<in>cfg_on t.\n           \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg) +\n       ennreal e\n\ngoal (1 subgoal):\n 1. \\<exists>cfg\\<in>cfg_on t.\n       \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg\n       \\<le> E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>)) + ennreal e", "by (auto simp: E_inf_def intro: less_imp_le)"], ["proof (state)\nthis:\n  \\<exists>cfg\\<in>cfg_on t.\n     \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg\n     \\<le> E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>)) + ennreal e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>cfg\\<in>cfg_on t.\n     \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg\n     \\<le> E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>)) + ennreal e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>t\\<in>set_pmf D.\n     \\<exists>cfg\\<in>cfg_on t.\n        \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg\n        \\<le> E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>)) + ennreal e\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>\\<integral>\\<^sup>+ t. E_inf t\n  (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                                   \\<partial>measure_pmf D\n                < \\<top>;\n        0 < e\\<rbrakk>\n       \\<Longrightarrow> (\\<Sqinter>cfg\\<in>cfg_on s.\n                             \\<integral>\\<^sup>+ t.\n            \\<integral>\\<^sup>+ x. f (state t ## x) \\<partial>T t\n          \\<partial>measure_pmf (K_cfg cfg))\n                         \\<le> \\<integral>\\<^sup>+ t.\n              E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n            \\<partial>measure_pmf D +\n                               ennreal e", "then"], ["proof (chain)\npicking this:\n  \\<forall>t\\<in>set_pmf D.\n     \\<exists>cfg\\<in>cfg_on t.\n        \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg\n        \\<le> E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>)) + ennreal e", "obtain cfg' where v_cfg': \"\\<And>t. t \\<in> D \\<Longrightarrow> ?v (cfg' t) \\<le> ?p t + e\" and\n        cfg_on_cfg': \"\\<And>t. t \\<in> D \\<Longrightarrow> cfg' t \\<in> cfg_on t\""], ["proof (prove)\nusing this:\n  \\<forall>t\\<in>set_pmf D.\n     \\<exists>cfg\\<in>cfg_on t.\n        \\<integral>\\<^sup>+ x. f (state cfg ## x) \\<partial>T cfg\n        \\<le> E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>)) + ennreal e\n\ngoal (1 subgoal):\n 1. (\\<And>cfg'.\n        \\<lbrakk>\\<And>t.\n                    t \\<in> set_pmf D \\<Longrightarrow>\n                    \\<integral>\\<^sup>+ x. f (state (cfg' t) ## x)\n \\<partial>T (cfg' t)\n                    \\<le> E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>)) +\n                          ennreal e;\n         \\<And>t.\n            t \\<in> set_pmf D \\<Longrightarrow>\n            cfg' t \\<in> cfg_on t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding Bex_def bchoice_iff"], ["proof (prove)\nusing this:\n  \\<exists>fa.\n     \\<forall>t\\<in>set_pmf D.\n        fa t \\<in> cfg_on t \\<and>\n        \\<integral>\\<^sup>+ x. f (state (fa t) ## x) \\<partial>T (fa t)\n        \\<le> E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>)) + ennreal e\n\ngoal (1 subgoal):\n 1. (\\<And>cfg'.\n        \\<lbrakk>\\<And>t.\n                    t \\<in> set_pmf D \\<Longrightarrow>\n                    \\<integral>\\<^sup>+ x. f (state (cfg' t) ## x)\n \\<partial>T (cfg' t)\n                    \\<le> E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>)) +\n                          ennreal e;\n         \\<And>t.\n            t \\<in> set_pmf D \\<Longrightarrow>\n            cfg' t \\<in> cfg_on t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  ?t1 \\<in> set_pmf D \\<Longrightarrow>\n  \\<integral>\\<^sup>+ x. f (state (cfg' ?t1) ## x) \\<partial>T (cfg' ?t1)\n  \\<le> E_inf ?t1 (\\<lambda>\\<omega>. f (?t1 ## \\<omega>)) + ennreal e\n  ?t1 \\<in> set_pmf D \\<Longrightarrow> cfg' ?t1 \\<in> cfg_on ?t1\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>\\<integral>\\<^sup>+ t. E_inf t\n  (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                                   \\<partial>measure_pmf D\n                < \\<top>;\n        0 < e\\<rbrakk>\n       \\<Longrightarrow> (\\<Sqinter>cfg\\<in>cfg_on s.\n                             \\<integral>\\<^sup>+ t.\n            \\<integral>\\<^sup>+ x. f (state t ## x) \\<partial>T t\n          \\<partial>measure_pmf (K_cfg cfg))\n                         \\<le> \\<integral>\\<^sup>+ t.\n              E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n            \\<partial>measure_pmf D +\n                               ennreal e", "let ?cfg = \"Cfg s D cfg'\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>\\<integral>\\<^sup>+ t. E_inf t\n  (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                                   \\<partial>measure_pmf D\n                < \\<top>;\n        0 < e\\<rbrakk>\n       \\<Longrightarrow> (\\<Sqinter>cfg\\<in>cfg_on s.\n                             \\<integral>\\<^sup>+ t.\n            \\<integral>\\<^sup>+ x. f (state t ## x) \\<partial>T t\n          \\<partial>measure_pmf (K_cfg cfg))\n                         \\<le> \\<integral>\\<^sup>+ t.\n              E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n            \\<partial>measure_pmf D +\n                               ennreal e", "have cfg: \"K_cfg ?cfg = map_pmf cfg' D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. K_cfg (Cfg s D cfg') = map_pmf cfg' D", "by (auto simp add: K_cfg_def cfg_on_cfg' intro!: map_pmf_cong)"], ["proof (state)\nthis:\n  K_cfg (Cfg s D cfg') = map_pmf cfg' D\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>\\<integral>\\<^sup>+ t. E_inf t\n  (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                                   \\<partial>measure_pmf D\n                < \\<top>;\n        0 < e\\<rbrakk>\n       \\<Longrightarrow> (\\<Sqinter>cfg\\<in>cfg_on s.\n                             \\<integral>\\<^sup>+ t.\n            \\<integral>\\<^sup>+ x. f (state t ## x) \\<partial>T t\n          \\<partial>measure_pmf (K_cfg cfg))\n                         \\<le> \\<integral>\\<^sup>+ t.\n              E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n            \\<partial>measure_pmf D +\n                               ennreal e", "have \"?cfg \\<in> cfg_on s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Cfg s D cfg' \\<in> cfg_on s", "by (auto intro: D cfg_on_cfg' cfg_of_cfg_onI)"], ["proof (state)\nthis:\n  Cfg s D cfg' \\<in> cfg_on s\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>\\<integral>\\<^sup>+ t. E_inf t\n  (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                                   \\<partial>measure_pmf D\n                < \\<top>;\n        0 < e\\<rbrakk>\n       \\<Longrightarrow> (\\<Sqinter>cfg\\<in>cfg_on s.\n                             \\<integral>\\<^sup>+ t.\n            \\<integral>\\<^sup>+ x. f (state t ## x) \\<partial>T t\n          \\<partial>measure_pmf (K_cfg cfg))\n                         \\<le> \\<integral>\\<^sup>+ t.\n              E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n            \\<partial>measure_pmf D +\n                               ennreal e", "then"], ["proof (chain)\npicking this:\n  Cfg s D cfg' \\<in> cfg_on s", "have \"(INF cfg \\<in> cfg_on s. \\<integral>\\<^sup>+ t. ?v t \\<partial>K_cfg cfg) \\<le> (\\<integral>\\<^sup>+ t. ?p t + e \\<partial>D)\""], ["proof (prove)\nusing this:\n  Cfg s D cfg' \\<in> cfg_on s\n\ngoal (1 subgoal):\n 1. (\\<Sqinter>cfg\\<in>cfg_on s.\n        \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n            \\<partial>T t\n                           \\<partial>measure_pmf (K_cfg cfg))\n    \\<le> \\<integral>\\<^sup>+ t. E_inf t\n                                  (\\<lambda>\\<omega>. f (t ## \\<omega>)) +\n                                 ennreal e\n                             \\<partial>measure_pmf D", "by (rule INF_lower2) (auto simp: cfg map_pmf_rep_eq nn_integral_distr v_cfg' AE_measure_pmf_iff intro!: nn_integral_mono_AE)"], ["proof (state)\nthis:\n  (\\<Sqinter>cfg\\<in>cfg_on s.\n      \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n          \\<partial>T t\n                         \\<partial>measure_pmf (K_cfg cfg))\n  \\<le> \\<integral>\\<^sup>+ t. E_inf t\n                                (\\<lambda>\\<omega>. f (t ## \\<omega>)) +\n                               ennreal e\n                           \\<partial>measure_pmf D\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>\\<integral>\\<^sup>+ t. E_inf t\n  (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                                   \\<partial>measure_pmf D\n                < \\<top>;\n        0 < e\\<rbrakk>\n       \\<Longrightarrow> (\\<Sqinter>cfg\\<in>cfg_on s.\n                             \\<integral>\\<^sup>+ t.\n            \\<integral>\\<^sup>+ x. f (state t ## x) \\<partial>T t\n          \\<partial>measure_pmf (K_cfg cfg))\n                         \\<le> \\<integral>\\<^sup>+ t.\n              E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n            \\<partial>measure_pmf D +\n                               ennreal e", "also"], ["proof (state)\nthis:\n  (\\<Sqinter>cfg\\<in>cfg_on s.\n      \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n          \\<partial>T t\n                         \\<partial>measure_pmf (K_cfg cfg))\n  \\<le> \\<integral>\\<^sup>+ t. E_inf t\n                                (\\<lambda>\\<omega>. f (t ## \\<omega>)) +\n                               ennreal e\n                           \\<partial>measure_pmf D\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>\\<integral>\\<^sup>+ t. E_inf t\n  (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                                   \\<partial>measure_pmf D\n                < \\<top>;\n        0 < e\\<rbrakk>\n       \\<Longrightarrow> (\\<Sqinter>cfg\\<in>cfg_on s.\n                             \\<integral>\\<^sup>+ t.\n            \\<integral>\\<^sup>+ x. f (state t ## x) \\<partial>T t\n          \\<partial>measure_pmf (K_cfg cfg))\n                         \\<le> \\<integral>\\<^sup>+ t.\n              E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n            \\<partial>measure_pmf D +\n                               ennreal e", "have \"\\<dots> = (\\<integral>\\<^sup>+ t. ?p t \\<partial>D) + e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ t. E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>)) +\n                           ennreal e\n                       \\<partial>measure_pmf D =\n    \\<integral>\\<^sup>+ t. E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                       \\<partial>measure_pmf D +\n    ennreal e", "using \\<open>0 < e\\<close>"], ["proof (prove)\nusing this:\n  0 < e\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ t. E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>)) +\n                           ennreal e\n                       \\<partial>measure_pmf D =\n    \\<integral>\\<^sup>+ t. E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                       \\<partial>measure_pmf D +\n    ennreal e", "by (simp add: nn_integral_add measure_pmf.emeasure_space_1[simplified])"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ t. E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>)) +\n                         ennreal e\n                     \\<partial>measure_pmf D =\n  \\<integral>\\<^sup>+ t. E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                     \\<partial>measure_pmf D +\n  ennreal e\n\ngoal (1 subgoal):\n 1. \\<And>e.\n       \\<lbrakk>\\<integral>\\<^sup>+ t. E_inf t\n  (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                                   \\<partial>measure_pmf D\n                < \\<top>;\n        0 < e\\<rbrakk>\n       \\<Longrightarrow> (\\<Sqinter>cfg\\<in>cfg_on s.\n                             \\<integral>\\<^sup>+ t.\n            \\<integral>\\<^sup>+ x. f (state t ## x) \\<partial>T t\n          \\<partial>measure_pmf (K_cfg cfg))\n                         \\<le> \\<integral>\\<^sup>+ t.\n              E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n            \\<partial>measure_pmf D +\n                               ennreal e", "finally"], ["proof (chain)\npicking this:\n  (\\<Sqinter>cfg\\<in>cfg_on s.\n      \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n          \\<partial>T t\n                         \\<partial>measure_pmf (K_cfg cfg))\n  \\<le> \\<integral>\\<^sup>+ t. E_inf t\n                                (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                           \\<partial>measure_pmf D +\n        ennreal e", "show \"(INF cfg \\<in> cfg_on s. \\<integral>\\<^sup>+ t. ?v t \\<partial>K_cfg cfg) \\<le> (\\<integral>\\<^sup>+ t. ?p t \\<partial>D) + e\""], ["proof (prove)\nusing this:\n  (\\<Sqinter>cfg\\<in>cfg_on s.\n      \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n          \\<partial>T t\n                         \\<partial>measure_pmf (K_cfg cfg))\n  \\<le> \\<integral>\\<^sup>+ t. E_inf t\n                                (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                           \\<partial>measure_pmf D +\n        ennreal e\n\ngoal (1 subgoal):\n 1. (\\<Sqinter>cfg\\<in>cfg_on s.\n        \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n            \\<partial>T t\n                           \\<partial>measure_pmf (K_cfg cfg))\n    \\<le> \\<integral>\\<^sup>+ t. E_inf t\n                                  (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                             \\<partial>measure_pmf D +\n          ennreal e", "."], ["proof (state)\nthis:\n  (\\<Sqinter>cfg\\<in>cfg_on s.\n      \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n          \\<partial>T t\n                         \\<partial>measure_pmf (K_cfg cfg))\n  \\<le> \\<integral>\\<^sup>+ t. E_inf t\n                                (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                           \\<partial>measure_pmf D +\n        ennreal e\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sqinter>cfg\\<in>cfg_on s.\n      \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n          \\<partial>T t\n                         \\<partial>measure_pmf (K_cfg cfg))\n  \\<le> \\<integral>\\<^sup>+ t. E_inf t\n                                (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                           \\<partial>measure_pmf D\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sqinter>cfg\\<in>cfg_on s.\n      \\<integral>\\<^sup>+ t. \\<integral>\\<^sup>+ x. f (state t ## x)\n          \\<partial>T t\n                         \\<partial>measure_pmf (K_cfg cfg)) =\n  (\\<Sqinter>D\\<in>K s.\n      \\<integral>\\<^sup>+ t. E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                         \\<partial>measure_pmf D)\n\ngoal (1 subgoal):\n 1. E_inf s f =\n    (\\<Sqinter>D\\<in>K s.\n        \\<integral>\\<^sup>+ t. E_inf t\n                                (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                           \\<partial>measure_pmf D)", "finally"], ["proof (chain)\npicking this:\n  E_inf s f =\n  (\\<Sqinter>D\\<in>K s.\n      \\<integral>\\<^sup>+ t. E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                         \\<partial>measure_pmf D)", "show ?thesis"], ["proof (prove)\nusing this:\n  E_inf s f =\n  (\\<Sqinter>D\\<in>K s.\n      \\<integral>\\<^sup>+ t. E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                         \\<partial>measure_pmf D)\n\ngoal (1 subgoal):\n 1. E_inf s f =\n    (\\<Sqinter>D\\<in>K s.\n        \\<integral>\\<^sup>+ t. E_inf t\n                                (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                           \\<partial>measure_pmf D)", "."], ["proof (state)\nthis:\n  E_inf s f =\n  (\\<Sqinter>D\\<in>K s.\n      \\<integral>\\<^sup>+ t. E_inf t (\\<lambda>\\<omega>. f (t ## \\<omega>))\n                         \\<partial>measure_pmf D)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma emeasure_T_const[simp]: \"emeasure (T s) (space St) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure (T s) (space St) = 1", "using T.emeasure_space_1[of s]"], ["proof (prove)\nusing this:\n  emeasure (T s) (space (T s)) = 1\n\ngoal (1 subgoal):\n 1. emeasure (T s) (space St) = 1", "by simp"], ["", "lemma E_inf_greatest:\n  \"(\\<And>cfg. cfg \\<in> cfg_on s \\<Longrightarrow> x \\<le> (\\<integral>\\<^sup>+x. f x \\<partial>T cfg)) \\<Longrightarrow> x \\<le> E_inf s f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>cfg.\n        cfg \\<in> cfg_on s \\<Longrightarrow>\n        x \\<le> integral\\<^sup>N (T cfg) f) \\<Longrightarrow>\n    x \\<le> E_inf s f", "unfolding E_inf_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>cfg.\n        cfg \\<in> cfg_on s \\<Longrightarrow>\n        x \\<le> integral\\<^sup>N (T cfg) f) \\<Longrightarrow>\n    x \\<le> (\\<Sqinter>cfg\\<in>cfg_on s. integral\\<^sup>N (T cfg) f)", "by (rule INF_greatest)"], ["", "lemma E_inf_lower2:\n  \"cfg \\<in> cfg_on s \\<Longrightarrow> (\\<integral>\\<^sup>+x. f x \\<partial>T cfg) \\<le> x \\<Longrightarrow> E_inf s f \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>cfg \\<in> cfg_on s; integral\\<^sup>N (T cfg) f \\<le> x\\<rbrakk>\n    \\<Longrightarrow> E_inf s f \\<le> x", "unfolding E_inf_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>cfg \\<in> cfg_on s; integral\\<^sup>N (T cfg) f \\<le> x\\<rbrakk>\n    \\<Longrightarrow> (\\<Sqinter>cfg\\<in>cfg_on s.\n                          integral\\<^sup>N (T cfg) f)\n                      \\<le> x", "by (rule INF_lower2)"], ["", "text \\<open>\n  Maybe the following statement can be generalized to infinite @{term \"K s\"}.\n\\<close>"], ["", "lemma E_inf_lfp:\n  fixes g\n  defines \"l \\<equiv> \\<lambda>f \\<omega>. g (shd \\<omega>) (f (stl \\<omega>))\"\n  assumes measurable_g[measurable]: \"case_prod g \\<in> borel_measurable (count_space UNIV \\<Otimes>\\<^sub>M borel)\"\n  assumes cont_g: \"\\<And>s. sup_continuous (g s)\"\n  assumes int_g: \"\\<And>f cfg. f \\<in> borel_measurable St \\<Longrightarrow>\n     (\\<integral>\\<^sup>+ \\<omega>. g (state cfg) (f \\<omega>) \\<partial>T cfg) = g (state cfg) (integral\\<^sup>N (T cfg) f)\"\n  assumes K_finite: \"\\<And>s. finite (K s)\"\n  shows \"(\\<lambda>s. E_inf s (lfp l)) = lfp (\\<lambda>f s. \\<Sqinter>D\\<in>K s. \\<integral>\\<^sup>+t. g t (f t) \\<partial>measure_pmf D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. E_inf s (lfp l)) =\n    lfp (\\<lambda>f s.\n            \\<Sqinter>D\\<in>K s.\n               \\<integral>\\<^sup>+ t. g t (f t) \\<partial>measure_pmf D)", "proof (rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>s. E_inf s (lfp l))\n    \\<le> lfp (\\<lambda>f s.\n                  \\<Sqinter>D\\<in>K s.\n                     \\<integral>\\<^sup>+ t. g t (f t)\n  \\<partial>measure_pmf D)\n 2. lfp (\\<lambda>f s.\n            \\<Sqinter>D\\<in>K s.\n               \\<integral>\\<^sup>+ t. g t (f t) \\<partial>measure_pmf D)\n    \\<le> (\\<lambda>s. E_inf s (lfp l))", "let ?F = \"\\<lambda>F s. \\<Sqinter>D\\<in>K s. \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D\""], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>s. E_inf s (lfp l))\n    \\<le> lfp (\\<lambda>f s.\n                  \\<Sqinter>D\\<in>K s.\n                     \\<integral>\\<^sup>+ t. g t (f t)\n  \\<partial>measure_pmf D)\n 2. lfp (\\<lambda>f s.\n            \\<Sqinter>D\\<in>K s.\n               \\<integral>\\<^sup>+ t. g t (f t) \\<partial>measure_pmf D)\n    \\<le> (\\<lambda>s. E_inf s (lfp l))", "let ?I = \"\\<lambda>D. (\\<integral>\\<^sup>+t. g t (lfp ?F t) \\<partial>measure_pmf D)\""], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>s. E_inf s (lfp l))\n    \\<le> lfp (\\<lambda>f s.\n                  \\<Sqinter>D\\<in>K s.\n                     \\<integral>\\<^sup>+ t. g t (f t)\n  \\<partial>measure_pmf D)\n 2. lfp (\\<lambda>f s.\n            \\<Sqinter>D\\<in>K s.\n               \\<integral>\\<^sup>+ t. g t (f t) \\<partial>measure_pmf D)\n    \\<le> (\\<lambda>s. E_inf s (lfp l))", "have mono_F: \"mono ?F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mono\n     (\\<lambda>F s.\n         \\<Sqinter>D\\<in>K s.\n            \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)", "using sup_continuous_mono[OF cont_g]"], ["proof (prove)\nusing this:\n  mono (g ?s2)\n\ngoal (1 subgoal):\n 1. mono\n     (\\<lambda>F s.\n         \\<Sqinter>D\\<in>K s.\n            \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)", "by (force intro!: INF_mono nn_integral_mono monoI simp: mono_def le_fun_def)"], ["proof (state)\nthis:\n  mono\n   (\\<lambda>F s.\n       \\<Sqinter>D\\<in>K s.\n          \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n\ngoal (2 subgoals):\n 1. (\\<lambda>s. E_inf s (lfp l))\n    \\<le> lfp (\\<lambda>f s.\n                  \\<Sqinter>D\\<in>K s.\n                     \\<integral>\\<^sup>+ t. g t (f t)\n  \\<partial>measure_pmf D)\n 2. lfp (\\<lambda>f s.\n            \\<Sqinter>D\\<in>K s.\n               \\<integral>\\<^sup>+ t. g t (f t) \\<partial>measure_pmf D)\n    \\<le> (\\<lambda>s. E_inf s (lfp l))", "define ct where \"ct s = (SOME D. D \\<in> K s \\<and> (lfp ?F s = ?I D))\" for s"], ["proof (state)\nthis:\n  ct ?s =\n  (SOME D.\n      D \\<in> K ?s \\<and>\n      lfp (\\<lambda>F s.\n              \\<Sqinter>D\\<in>K s.\n                 \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n       ?s =\n      \\<integral>\\<^sup>+ t. g t (lfp (\\<lambda>F s.\n    \\<Sqinter>D\\<in>K s.\n       \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n                                   t)\n                         \\<partial>measure_pmf D)\n\ngoal (2 subgoals):\n 1. (\\<lambda>s. E_inf s (lfp l))\n    \\<le> lfp (\\<lambda>f s.\n                  \\<Sqinter>D\\<in>K s.\n                     \\<integral>\\<^sup>+ t. g t (f t)\n  \\<partial>measure_pmf D)\n 2. lfp (\\<lambda>f s.\n            \\<Sqinter>D\\<in>K s.\n               \\<integral>\\<^sup>+ t. g t (f t) \\<partial>measure_pmf D)\n    \\<le> (\\<lambda>s. E_inf s (lfp l))", "{"], ["proof (state)\nthis:\n  ct ?s =\n  (SOME D.\n      D \\<in> K ?s \\<and>\n      lfp (\\<lambda>F s.\n              \\<Sqinter>D\\<in>K s.\n                 \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n       ?s =\n      \\<integral>\\<^sup>+ t. g t (lfp (\\<lambda>F s.\n    \\<Sqinter>D\\<in>K s.\n       \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n                                   t)\n                         \\<partial>measure_pmf D)\n\ngoal (2 subgoals):\n 1. (\\<lambda>s. E_inf s (lfp l))\n    \\<le> lfp (\\<lambda>f s.\n                  \\<Sqinter>D\\<in>K s.\n                     \\<integral>\\<^sup>+ t. g t (f t)\n  \\<partial>measure_pmf D)\n 2. lfp (\\<lambda>f s.\n            \\<Sqinter>D\\<in>K s.\n               \\<integral>\\<^sup>+ t. g t (f t) \\<partial>measure_pmf D)\n    \\<le> (\\<lambda>s. E_inf s (lfp l))", "fix s"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>s. E_inf s (lfp l))\n    \\<le> lfp (\\<lambda>f s.\n                  \\<Sqinter>D\\<in>K s.\n                     \\<integral>\\<^sup>+ t. g t (f t)\n  \\<partial>measure_pmf D)\n 2. lfp (\\<lambda>f s.\n            \\<Sqinter>D\\<in>K s.\n               \\<integral>\\<^sup>+ t. g t (f t) \\<partial>measure_pmf D)\n    \\<le> (\\<lambda>s. E_inf s (lfp l))", "have \"finite (?I ` K s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     ((\\<lambda>D.\n          \\<integral>\\<^sup>+ t. g t (lfp\n (\\<lambda>F s.\n     \\<Sqinter>D\\<in>K s.\n        \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n t)\n                             \\<partial>measure_pmf D) `\n      K s)", "by (auto intro: K_finite)"], ["proof (state)\nthis:\n  finite\n   ((\\<lambda>D.\n        \\<integral>\\<^sup>+ t. g t (lfp (\\<lambda>F s.\n      \\<Sqinter>D\\<in>K s.\n         \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n                                     t)\n                           \\<partial>measure_pmf D) `\n    K s)\n\ngoal (2 subgoals):\n 1. (\\<lambda>s. E_inf s (lfp l))\n    \\<le> lfp (\\<lambda>f s.\n                  \\<Sqinter>D\\<in>K s.\n                     \\<integral>\\<^sup>+ t. g t (f t)\n  \\<partial>measure_pmf D)\n 2. lfp (\\<lambda>f s.\n            \\<Sqinter>D\\<in>K s.\n               \\<integral>\\<^sup>+ t. g t (f t) \\<partial>measure_pmf D)\n    \\<le> (\\<lambda>s. E_inf s (lfp l))", "then"], ["proof (chain)\npicking this:\n  finite\n   ((\\<lambda>D.\n        \\<integral>\\<^sup>+ t. g t (lfp (\\<lambda>F s.\n      \\<Sqinter>D\\<in>K s.\n         \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n                                     t)\n                           \\<partial>measure_pmf D) `\n    K s)", "obtain D where \"D \\<in> K s\" \"?I D = Min (?I ` K s)\""], ["proof (prove)\nusing this:\n  finite\n   ((\\<lambda>D.\n        \\<integral>\\<^sup>+ t. g t (lfp (\\<lambda>F s.\n      \\<Sqinter>D\\<in>K s.\n         \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n                                     t)\n                           \\<partial>measure_pmf D) `\n    K s)\n\ngoal (1 subgoal):\n 1. (\\<And>D.\n        \\<lbrakk>D \\<in> K s;\n         \\<integral>\\<^sup>+ t. g t (lfp\n(\\<lambda>F s.\n    \\<Sqinter>D\\<in>K s.\n       \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\nt)\n                            \\<partial>measure_pmf D =\n         (MIN D\\<in>K s.\n             \\<integral>\\<^sup>+ t. g t (lfp\n    (\\<lambda>F s.\n        \\<Sqinter>D\\<in>K s.\n           \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n    t)\n                                \\<partial>measure_pmf D)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: K_wf dest!: Min_in)"], ["proof (state)\nthis:\n  D \\<in> K s\n  \\<integral>\\<^sup>+ t. g t (lfp (\\<lambda>F s.\n\\<Sqinter>D\\<in>K s.\n   \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n                               t)\n                     \\<partial>measure_pmf D =\n  (MIN D\\<in>K s.\n      \\<integral>\\<^sup>+ t. g t (lfp (\\<lambda>F s.\n    \\<Sqinter>D\\<in>K s.\n       \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n                                   t)\n                         \\<partial>measure_pmf D)\n\ngoal (2 subgoals):\n 1. (\\<lambda>s. E_inf s (lfp l))\n    \\<le> lfp (\\<lambda>f s.\n                  \\<Sqinter>D\\<in>K s.\n                     \\<integral>\\<^sup>+ t. g t (f t)\n  \\<partial>measure_pmf D)\n 2. lfp (\\<lambda>f s.\n            \\<Sqinter>D\\<in>K s.\n               \\<integral>\\<^sup>+ t. g t (f t) \\<partial>measure_pmf D)\n    \\<le> (\\<lambda>s. E_inf s (lfp l))", "note this(2)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ t. g t (lfp (\\<lambda>F s.\n\\<Sqinter>D\\<in>K s.\n   \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n                               t)\n                     \\<partial>measure_pmf D =\n  (MIN D\\<in>K s.\n      \\<integral>\\<^sup>+ t. g t (lfp (\\<lambda>F s.\n    \\<Sqinter>D\\<in>K s.\n       \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n                                   t)\n                         \\<partial>measure_pmf D)\n\ngoal (2 subgoals):\n 1. (\\<lambda>s. E_inf s (lfp l))\n    \\<le> lfp (\\<lambda>f s.\n                  \\<Sqinter>D\\<in>K s.\n                     \\<integral>\\<^sup>+ t. g t (f t)\n  \\<partial>measure_pmf D)\n 2. lfp (\\<lambda>f s.\n            \\<Sqinter>D\\<in>K s.\n               \\<integral>\\<^sup>+ t. g t (f t) \\<partial>measure_pmf D)\n    \\<le> (\\<lambda>s. E_inf s (lfp l))", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ t. g t (lfp (\\<lambda>F s.\n\\<Sqinter>D\\<in>K s.\n   \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n                               t)\n                     \\<partial>measure_pmf D =\n  (MIN D\\<in>K s.\n      \\<integral>\\<^sup>+ t. g t (lfp (\\<lambda>F s.\n    \\<Sqinter>D\\<in>K s.\n       \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n                                   t)\n                         \\<partial>measure_pmf D)\n\ngoal (2 subgoals):\n 1. (\\<lambda>s. E_inf s (lfp l))\n    \\<le> lfp (\\<lambda>f s.\n                  \\<Sqinter>D\\<in>K s.\n                     \\<integral>\\<^sup>+ t. g t (f t)\n  \\<partial>measure_pmf D)\n 2. lfp (\\<lambda>f s.\n            \\<Sqinter>D\\<in>K s.\n               \\<integral>\\<^sup>+ t. g t (f t) \\<partial>measure_pmf D)\n    \\<le> (\\<lambda>s. E_inf s (lfp l))", "have \"\\<dots> = (INF D \\<in> K s. ?I D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (MIN D\\<in>K s.\n        \\<integral>\\<^sup>+ t. g t (lfp (\\<lambda>F s.\n      \\<Sqinter>D\\<in>K s.\n         \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n                                     t)\n                           \\<partial>measure_pmf D) =\n    (\\<Sqinter>D\\<in>K s.\n        \\<integral>\\<^sup>+ t. g t (lfp (\\<lambda>F s.\n      \\<Sqinter>D\\<in>K s.\n         \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n                                     t)\n                           \\<partial>measure_pmf D)", "using K_wf"], ["proof (prove)\nusing this:\n  K ?s \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (MIN D\\<in>K s.\n        \\<integral>\\<^sup>+ t. g t (lfp (\\<lambda>F s.\n      \\<Sqinter>D\\<in>K s.\n         \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n                                     t)\n                           \\<partial>measure_pmf D) =\n    (\\<Sqinter>D\\<in>K s.\n        \\<integral>\\<^sup>+ t. g t (lfp (\\<lambda>F s.\n      \\<Sqinter>D\\<in>K s.\n         \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n                                     t)\n                           \\<partial>measure_pmf D)", "by (subst Min_Inf) (auto intro: K_finite)"], ["proof (state)\nthis:\n  (MIN D\\<in>K s.\n      \\<integral>\\<^sup>+ t. g t (lfp (\\<lambda>F s.\n    \\<Sqinter>D\\<in>K s.\n       \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n                                   t)\n                         \\<partial>measure_pmf D) =\n  (\\<Sqinter>D\\<in>K s.\n      \\<integral>\\<^sup>+ t. g t (lfp (\\<lambda>F s.\n    \\<Sqinter>D\\<in>K s.\n       \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n                                   t)\n                         \\<partial>measure_pmf D)\n\ngoal (2 subgoals):\n 1. (\\<lambda>s. E_inf s (lfp l))\n    \\<le> lfp (\\<lambda>f s.\n                  \\<Sqinter>D\\<in>K s.\n                     \\<integral>\\<^sup>+ t. g t (f t)\n  \\<partial>measure_pmf D)\n 2. lfp (\\<lambda>f s.\n            \\<Sqinter>D\\<in>K s.\n               \\<integral>\\<^sup>+ t. g t (f t) \\<partial>measure_pmf D)\n    \\<le> (\\<lambda>s. E_inf s (lfp l))", "also"], ["proof (state)\nthis:\n  (MIN D\\<in>K s.\n      \\<integral>\\<^sup>+ t. g t (lfp (\\<lambda>F s.\n    \\<Sqinter>D\\<in>K s.\n       \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n                                   t)\n                         \\<partial>measure_pmf D) =\n  (\\<Sqinter>D\\<in>K s.\n      \\<integral>\\<^sup>+ t. g t (lfp (\\<lambda>F s.\n    \\<Sqinter>D\\<in>K s.\n       \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n                                   t)\n                         \\<partial>measure_pmf D)\n\ngoal (2 subgoals):\n 1. (\\<lambda>s. E_inf s (lfp l))\n    \\<le> lfp (\\<lambda>f s.\n                  \\<Sqinter>D\\<in>K s.\n                     \\<integral>\\<^sup>+ t. g t (f t)\n  \\<partial>measure_pmf D)\n 2. lfp (\\<lambda>f s.\n            \\<Sqinter>D\\<in>K s.\n               \\<integral>\\<^sup>+ t. g t (f t) \\<partial>measure_pmf D)\n    \\<le> (\\<lambda>s. E_inf s (lfp l))", "have \"\\<dots> = lfp ?F s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sqinter>D\\<in>K s.\n        \\<integral>\\<^sup>+ t. g t (lfp (\\<lambda>F s.\n      \\<Sqinter>D\\<in>K s.\n         \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n                                     t)\n                           \\<partial>measure_pmf D) =\n    lfp (\\<lambda>F s.\n            \\<Sqinter>D\\<in>K s.\n               \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n     s", "by (rewrite in \"_ = \\<hole>\" lfp_unfold[OF mono_F]) auto"], ["proof (state)\nthis:\n  (\\<Sqinter>D\\<in>K s.\n      \\<integral>\\<^sup>+ t. g t (lfp (\\<lambda>F s.\n    \\<Sqinter>D\\<in>K s.\n       \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n                                   t)\n                         \\<partial>measure_pmf D) =\n  lfp (\\<lambda>F s.\n          \\<Sqinter>D\\<in>K s.\n             \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n   s\n\ngoal (2 subgoals):\n 1. (\\<lambda>s. E_inf s (lfp l))\n    \\<le> lfp (\\<lambda>f s.\n                  \\<Sqinter>D\\<in>K s.\n                     \\<integral>\\<^sup>+ t. g t (f t)\n  \\<partial>measure_pmf D)\n 2. lfp (\\<lambda>f s.\n            \\<Sqinter>D\\<in>K s.\n               \\<integral>\\<^sup>+ t. g t (f t) \\<partial>measure_pmf D)\n    \\<le> (\\<lambda>s. E_inf s (lfp l))", "finally"], ["proof (chain)\npicking this:\n  \\<integral>\\<^sup>+ t. g t (lfp (\\<lambda>F s.\n\\<Sqinter>D\\<in>K s.\n   \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n                               t)\n                     \\<partial>measure_pmf D =\n  lfp (\\<lambda>F s.\n          \\<Sqinter>D\\<in>K s.\n             \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n   s", "have \"\\<exists>D. D \\<in> K s \\<and> (lfp ?F s = ?I D)\""], ["proof (prove)\nusing this:\n  \\<integral>\\<^sup>+ t. g t (lfp (\\<lambda>F s.\n\\<Sqinter>D\\<in>K s.\n   \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n                               t)\n                     \\<partial>measure_pmf D =\n  lfp (\\<lambda>F s.\n          \\<Sqinter>D\\<in>K s.\n             \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n   s\n\ngoal (1 subgoal):\n 1. \\<exists>D.\n       D \\<in> K s \\<and>\n       lfp (\\<lambda>F s.\n               \\<Sqinter>D\\<in>K s.\n                  \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n        s =\n       \\<integral>\\<^sup>+ t. g t (lfp (\\<lambda>F s.\n     \\<Sqinter>D\\<in>K s.\n        \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n                                    t)\n                          \\<partial>measure_pmf D", "using \\<open>D \\<in> K s\\<close>"], ["proof (prove)\nusing this:\n  \\<integral>\\<^sup>+ t. g t (lfp (\\<lambda>F s.\n\\<Sqinter>D\\<in>K s.\n   \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n                               t)\n                     \\<partial>measure_pmf D =\n  lfp (\\<lambda>F s.\n          \\<Sqinter>D\\<in>K s.\n             \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n   s\n  D \\<in> K s\n\ngoal (1 subgoal):\n 1. \\<exists>D.\n       D \\<in> K s \\<and>\n       lfp (\\<lambda>F s.\n               \\<Sqinter>D\\<in>K s.\n                  \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n        s =\n       \\<integral>\\<^sup>+ t. g t (lfp (\\<lambda>F s.\n     \\<Sqinter>D\\<in>K s.\n        \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n                                    t)\n                          \\<partial>measure_pmf D", "by auto"], ["proof (state)\nthis:\n  \\<exists>D.\n     D \\<in> K s \\<and>\n     lfp (\\<lambda>F s.\n             \\<Sqinter>D\\<in>K s.\n                \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n      s =\n     \\<integral>\\<^sup>+ t. g t (lfp (\\<lambda>F s.\n   \\<Sqinter>D\\<in>K s.\n      \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n                                  t)\n                        \\<partial>measure_pmf D\n\ngoal (2 subgoals):\n 1. (\\<lambda>s. E_inf s (lfp l))\n    \\<le> lfp (\\<lambda>f s.\n                  \\<Sqinter>D\\<in>K s.\n                     \\<integral>\\<^sup>+ t. g t (f t)\n  \\<partial>measure_pmf D)\n 2. lfp (\\<lambda>f s.\n            \\<Sqinter>D\\<in>K s.\n               \\<integral>\\<^sup>+ t. g t (f t) \\<partial>measure_pmf D)\n    \\<le> (\\<lambda>s. E_inf s (lfp l))", "then"], ["proof (chain)\npicking this:\n  \\<exists>D.\n     D \\<in> K s \\<and>\n     lfp (\\<lambda>F s.\n             \\<Sqinter>D\\<in>K s.\n                \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n      s =\n     \\<integral>\\<^sup>+ t. g t (lfp (\\<lambda>F s.\n   \\<Sqinter>D\\<in>K s.\n      \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n                                  t)\n                        \\<partial>measure_pmf D", "have \"ct s \\<in> K s \\<and> (lfp ?F s = ?I (ct s))\""], ["proof (prove)\nusing this:\n  \\<exists>D.\n     D \\<in> K s \\<and>\n     lfp (\\<lambda>F s.\n             \\<Sqinter>D\\<in>K s.\n                \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n      s =\n     \\<integral>\\<^sup>+ t. g t (lfp (\\<lambda>F s.\n   \\<Sqinter>D\\<in>K s.\n      \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n                                  t)\n                        \\<partial>measure_pmf D\n\ngoal (1 subgoal):\n 1. ct s \\<in> K s \\<and>\n    lfp (\\<lambda>F s.\n            \\<Sqinter>D\\<in>K s.\n               \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n     s =\n    \\<integral>\\<^sup>+ t. g t (lfp (\\<lambda>F s.\n  \\<Sqinter>D\\<in>K s.\n     \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n                                 t)\n                       \\<partial>measure_pmf (ct s)", "unfolding ct_def"], ["proof (prove)\nusing this:\n  \\<exists>D.\n     D \\<in> K s \\<and>\n     lfp (\\<lambda>F s.\n             \\<Sqinter>D\\<in>K s.\n                \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n      s =\n     \\<integral>\\<^sup>+ t. g t (lfp (\\<lambda>F s.\n   \\<Sqinter>D\\<in>K s.\n      \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n                                  t)\n                        \\<partial>measure_pmf D\n\ngoal (1 subgoal):\n 1. (SOME D.\n        D \\<in> K s \\<and>\n        lfp (\\<lambda>F s.\n                \\<Sqinter>D\\<in>K s.\n                   \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n         s =\n        \\<integral>\\<^sup>+ t. g t (lfp (\\<lambda>F s.\n      \\<Sqinter>D\\<in>K s.\n         \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n                                     t)\n                           \\<partial>measure_pmf D)\n    \\<in> K s \\<and>\n    lfp (\\<lambda>F s.\n            \\<Sqinter>D\\<in>K s.\n               \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n     s =\n    \\<integral>\\<^sup>+ t. g t (lfp (\\<lambda>F s.\n  \\<Sqinter>D\\<in>K s.\n     \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n                                 t)\n                       \\<partial>measure_pmf\n                                  (SOME D.\nD \\<in> K s \\<and>\nlfp (\\<lambda>F s.\n        \\<Sqinter>D\\<in>K s.\n           \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n s =\n\\<integral>\\<^sup>+ t. g t (lfp (\\<lambda>F s.\n                                    \\<Sqinter>D\\<in>K s.\n \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n                             t)\n                   \\<partial>measure_pmf D)", "by (rule someI_ex)"], ["proof (state)\nthis:\n  ct s \\<in> K s \\<and>\n  lfp (\\<lambda>F s.\n          \\<Sqinter>D\\<in>K s.\n             \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n   s =\n  \\<integral>\\<^sup>+ t. g t (lfp (\\<lambda>F s.\n\\<Sqinter>D\\<in>K s.\n   \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n                               t)\n                     \\<partial>measure_pmf (ct s)\n\ngoal (2 subgoals):\n 1. (\\<lambda>s. E_inf s (lfp l))\n    \\<le> lfp (\\<lambda>f s.\n                  \\<Sqinter>D\\<in>K s.\n                     \\<integral>\\<^sup>+ t. g t (f t)\n  \\<partial>measure_pmf D)\n 2. lfp (\\<lambda>f s.\n            \\<Sqinter>D\\<in>K s.\n               \\<integral>\\<^sup>+ t. g t (f t) \\<partial>measure_pmf D)\n    \\<le> (\\<lambda>s. E_inf s (lfp l))", "then"], ["proof (chain)\npicking this:\n  ct s \\<in> K s \\<and>\n  lfp (\\<lambda>F s.\n          \\<Sqinter>D\\<in>K s.\n             \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n   s =\n  \\<integral>\\<^sup>+ t. g t (lfp (\\<lambda>F s.\n\\<Sqinter>D\\<in>K s.\n   \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n                               t)\n                     \\<partial>measure_pmf (ct s)", "have \"ct s \\<in> K s\" \"lfp ?F s = ?I (ct s)\""], ["proof (prove)\nusing this:\n  ct s \\<in> K s \\<and>\n  lfp (\\<lambda>F s.\n          \\<Sqinter>D\\<in>K s.\n             \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n   s =\n  \\<integral>\\<^sup>+ t. g t (lfp (\\<lambda>F s.\n\\<Sqinter>D\\<in>K s.\n   \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n                               t)\n                     \\<partial>measure_pmf (ct s)\n\ngoal (1 subgoal):\n 1. ct s \\<in> K s &&&\n    lfp (\\<lambda>F s.\n            \\<Sqinter>D\\<in>K s.\n               \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n     s =\n    \\<integral>\\<^sup>+ t. g t (lfp (\\<lambda>F s.\n  \\<Sqinter>D\\<in>K s.\n     \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n                                 t)\n                       \\<partial>measure_pmf (ct s)", "by auto"], ["proof (state)\nthis:\n  ct s \\<in> K s\n  lfp (\\<lambda>F s.\n          \\<Sqinter>D\\<in>K s.\n             \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n   s =\n  \\<integral>\\<^sup>+ t. g t (lfp (\\<lambda>F s.\n\\<Sqinter>D\\<in>K s.\n   \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n                               t)\n                     \\<partial>measure_pmf (ct s)\n\ngoal (2 subgoals):\n 1. (\\<lambda>s. E_inf s (lfp l))\n    \\<le> lfp (\\<lambda>f s.\n                  \\<Sqinter>D\\<in>K s.\n                     \\<integral>\\<^sup>+ t. g t (f t)\n  \\<partial>measure_pmf D)\n 2. lfp (\\<lambda>f s.\n            \\<Sqinter>D\\<in>K s.\n               \\<integral>\\<^sup>+ t. g t (f t) \\<partial>measure_pmf D)\n    \\<le> (\\<lambda>s. E_inf s (lfp l))", "}"], ["proof (state)\nthis:\n  ct ?s3 \\<in> K ?s3\n  lfp (\\<lambda>F s.\n          \\<Sqinter>D\\<in>K s.\n             \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n   ?s3 =\n  \\<integral>\\<^sup>+ t. g t (lfp (\\<lambda>F s.\n\\<Sqinter>D\\<in>K s.\n   \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n                               t)\n                     \\<partial>measure_pmf (ct ?s3)\n\ngoal (2 subgoals):\n 1. (\\<lambda>s. E_inf s (lfp l))\n    \\<le> lfp (\\<lambda>f s.\n                  \\<Sqinter>D\\<in>K s.\n                     \\<integral>\\<^sup>+ t. g t (f t)\n  \\<partial>measure_pmf D)\n 2. lfp (\\<lambda>f s.\n            \\<Sqinter>D\\<in>K s.\n               \\<integral>\\<^sup>+ t. g t (f t) \\<partial>measure_pmf D)\n    \\<le> (\\<lambda>s. E_inf s (lfp l))", "note ct = this"], ["proof (state)\nthis:\n  ct ?s3 \\<in> K ?s3\n  lfp (\\<lambda>F s.\n          \\<Sqinter>D\\<in>K s.\n             \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n   ?s3 =\n  \\<integral>\\<^sup>+ t. g t (lfp (\\<lambda>F s.\n\\<Sqinter>D\\<in>K s.\n   \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n                               t)\n                     \\<partial>measure_pmf (ct ?s3)\n\ngoal (2 subgoals):\n 1. (\\<lambda>s. E_inf s (lfp l))\n    \\<le> lfp (\\<lambda>f s.\n                  \\<Sqinter>D\\<in>K s.\n                     \\<integral>\\<^sup>+ t. g t (f t)\n  \\<partial>measure_pmf D)\n 2. lfp (\\<lambda>f s.\n            \\<Sqinter>D\\<in>K s.\n               \\<integral>\\<^sup>+ t. g t (f t) \\<partial>measure_pmf D)\n    \\<le> (\\<lambda>s. E_inf s (lfp l))", "then"], ["proof (chain)\npicking this:\n  ct ?s3 \\<in> K ?s3\n  lfp (\\<lambda>F s.\n          \\<Sqinter>D\\<in>K s.\n             \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n   ?s3 =\n  \\<integral>\\<^sup>+ t. g t (lfp (\\<lambda>F s.\n\\<Sqinter>D\\<in>K s.\n   \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n                               t)\n                     \\<partial>measure_pmf (ct ?s3)", "have ct_cfg_on[simp]: \"\\<And>s. memoryless_on ct s \\<in> cfg_on s\""], ["proof (prove)\nusing this:\n  ct ?s3 \\<in> K ?s3\n  lfp (\\<lambda>F s.\n          \\<Sqinter>D\\<in>K s.\n             \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n   ?s3 =\n  \\<integral>\\<^sup>+ t. g t (lfp (\\<lambda>F s.\n\\<Sqinter>D\\<in>K s.\n   \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n                               t)\n                     \\<partial>measure_pmf (ct ?s3)\n\ngoal (1 subgoal):\n 1. \\<And>s. memoryless_on ct s \\<in> cfg_on s", "by (intro memoryless_on_cfg_onI) simp"], ["proof (state)\nthis:\n  memoryless_on ct ?s1 \\<in> cfg_on ?s1\n\ngoal (2 subgoals):\n 1. (\\<lambda>s. E_inf s (lfp l))\n    \\<le> lfp (\\<lambda>f s.\n                  \\<Sqinter>D\\<in>K s.\n                     \\<integral>\\<^sup>+ t. g t (f t)\n  \\<partial>measure_pmf D)\n 2. lfp (\\<lambda>f s.\n            \\<Sqinter>D\\<in>K s.\n               \\<integral>\\<^sup>+ t. g t (f t) \\<partial>measure_pmf D)\n    \\<le> (\\<lambda>s. E_inf s (lfp l))", "then"], ["proof (chain)\npicking this:\n  memoryless_on ct ?s1 \\<in> cfg_on ?s1", "show \"(\\<lambda>s. E_inf s (lfp l)) \\<le> lfp ?F\""], ["proof (prove)\nusing this:\n  memoryless_on ct ?s1 \\<in> cfg_on ?s1\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. E_inf s (lfp l))\n    \\<le> lfp (\\<lambda>F s.\n                  \\<Sqinter>D\\<in>K s.\n                     \\<integral>\\<^sup>+ t. g t (F t)\n  \\<partial>measure_pmf D)", "proof (intro le_funI, rule E_inf_lower2)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<And>s. memoryless_on ct s \\<in> cfg_on s) \\<Longrightarrow>\n       integral\\<^sup>N (T (memoryless_on ct x)) (lfp l)\n       \\<le> lfp (\\<lambda>F s.\n                     \\<Sqinter>D\\<in>K s.\n                        \\<integral>\\<^sup>+ t. g t (F t)\n     \\<partial>measure_pmf D)\n              x", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<And>s. memoryless_on ct s \\<in> cfg_on s) \\<Longrightarrow>\n       integral\\<^sup>N (T (memoryless_on ct x)) (lfp l)\n       \\<le> lfp (\\<lambda>F s.\n                     \\<Sqinter>D\\<in>K s.\n                        \\<integral>\\<^sup>+ t. g t (F t)\n     \\<partial>measure_pmf D)\n              x", "define P where \"P f cfg = \\<integral>\\<^sup>+ t. g (state t) (f t) \\<partial>K_cfg cfg\" for f cfg"], ["proof (state)\nthis:\n  P ?f ?cfg =\n  \\<integral>\\<^sup>+ t. g (state t) (?f t)\n                     \\<partial>measure_pmf (K_cfg ?cfg)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<And>s. memoryless_on ct s \\<in> cfg_on s) \\<Longrightarrow>\n       integral\\<^sup>N (T (memoryless_on ct x)) (lfp l)\n       \\<le> lfp (\\<lambda>F s.\n                     \\<Sqinter>D\\<in>K s.\n                        \\<integral>\\<^sup>+ t. g t (F t)\n     \\<partial>measure_pmf D)\n              x", "have \"integral\\<^sup>N (T (memoryless_on ct s)) (lfp l) = lfp P (memoryless_on ct s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral\\<^sup>N (T (memoryless_on ct s)) (lfp l) =\n    lfp P (memoryless_on ct s)", "unfolding P_def l_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. integral\\<^sup>N (T (memoryless_on ct s))\n     (lfp (\\<lambda>f \\<omega>. g (shd \\<omega>) (f (stl \\<omega>)))) =\n    lfp (\\<lambda>f cfg.\n            \\<integral>\\<^sup>+ t. g (state t) (f t)\n                               \\<partial>measure_pmf (K_cfg cfg))\n     (memoryless_on ct s)", "using measurable_g cont_g int_g"], ["proof (prove)\nusing this:\n  (\\<lambda>(x, y). g x y)\n  \\<in> borel_measurable (count_space UNIV \\<Otimes>\\<^sub>M borel)\n  sup_continuous (g ?s1)\n  ?f1 \\<in> borel_measurable St \\<Longrightarrow>\n  \\<integral>\\<^sup>+ \\<omega>. g (state ?cfg1) (?f1 \\<omega>)\n                     \\<partial>T ?cfg1 =\n  g (state ?cfg1) (integral\\<^sup>N (T ?cfg1) ?f1)\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N (T (memoryless_on ct s))\n     (lfp (\\<lambda>f \\<omega>. g (shd \\<omega>) (f (stl \\<omega>)))) =\n    lfp (\\<lambda>f cfg.\n            \\<integral>\\<^sup>+ t. g (state t) (f t)\n                               \\<partial>measure_pmf (K_cfg cfg))\n     (memoryless_on ct s)", "by (rule nn_integral_T_lfp)"], ["proof (state)\nthis:\n  integral\\<^sup>N (T (memoryless_on ct s)) (lfp l) =\n  lfp P (memoryless_on ct s)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<And>s. memoryless_on ct s \\<in> cfg_on s) \\<Longrightarrow>\n       integral\\<^sup>N (T (memoryless_on ct x)) (lfp l)\n       \\<le> lfp (\\<lambda>F s.\n                     \\<Sqinter>D\\<in>K s.\n                        \\<integral>\\<^sup>+ t. g t (F t)\n     \\<partial>measure_pmf D)\n              x", "also"], ["proof (state)\nthis:\n  integral\\<^sup>N (T (memoryless_on ct s)) (lfp l) =\n  lfp P (memoryless_on ct s)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<And>s. memoryless_on ct s \\<in> cfg_on s) \\<Longrightarrow>\n       integral\\<^sup>N (T (memoryless_on ct x)) (lfp l)\n       \\<le> lfp (\\<lambda>F s.\n                     \\<Sqinter>D\\<in>K s.\n                        \\<integral>\\<^sup>+ t. g t (F t)\n     \\<partial>measure_pmf D)\n              x", "have \"\\<dots> = (SUP i. (P ^^ i) \\<bottom>) (memoryless_on ct s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lfp P (memoryless_on ct s) =\n    (\\<Squnion>i. (P ^^ i) \\<bottom>) (memoryless_on ct s)", "by (rewrite sup_continuous_lfp)\n         (auto intro!: order_continuous_intros cont_g[THEN sup_continuous_compose] simp: P_def)"], ["proof (state)\nthis:\n  lfp P (memoryless_on ct s) =\n  (\\<Squnion>i. (P ^^ i) \\<bottom>) (memoryless_on ct s)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<And>s. memoryless_on ct s \\<in> cfg_on s) \\<Longrightarrow>\n       integral\\<^sup>N (T (memoryless_on ct x)) (lfp l)\n       \\<le> lfp (\\<lambda>F s.\n                     \\<Sqinter>D\\<in>K s.\n                        \\<integral>\\<^sup>+ t. g t (F t)\n     \\<partial>measure_pmf D)\n              x", "also"], ["proof (state)\nthis:\n  lfp P (memoryless_on ct s) =\n  (\\<Squnion>i. (P ^^ i) \\<bottom>) (memoryless_on ct s)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<And>s. memoryless_on ct s \\<in> cfg_on s) \\<Longrightarrow>\n       integral\\<^sup>N (T (memoryless_on ct x)) (lfp l)\n       \\<le> lfp (\\<lambda>F s.\n                     \\<Sqinter>D\\<in>K s.\n                        \\<integral>\\<^sup>+ t. g t (F t)\n     \\<partial>measure_pmf D)\n              x", "have \"\\<dots> = (SUP i. (P ^^ i) \\<bottom> (memoryless_on ct s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Squnion>i. (P ^^ i) \\<bottom>) (memoryless_on ct s) =\n    (\\<Squnion>i. (P ^^ i) \\<bottom> (memoryless_on ct s))", "by (simp add: image_comp)"], ["proof (state)\nthis:\n  (\\<Squnion>i. (P ^^ i) \\<bottom>) (memoryless_on ct s) =\n  (\\<Squnion>i. (P ^^ i) \\<bottom> (memoryless_on ct s))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<And>s. memoryless_on ct s \\<in> cfg_on s) \\<Longrightarrow>\n       integral\\<^sup>N (T (memoryless_on ct x)) (lfp l)\n       \\<le> lfp (\\<lambda>F s.\n                     \\<Sqinter>D\\<in>K s.\n                        \\<integral>\\<^sup>+ t. g t (F t)\n     \\<partial>measure_pmf D)\n              x", "also"], ["proof (state)\nthis:\n  (\\<Squnion>i. (P ^^ i) \\<bottom>) (memoryless_on ct s) =\n  (\\<Squnion>i. (P ^^ i) \\<bottom> (memoryless_on ct s))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<And>s. memoryless_on ct s \\<in> cfg_on s) \\<Longrightarrow>\n       integral\\<^sup>N (T (memoryless_on ct x)) (lfp l)\n       \\<le> lfp (\\<lambda>F s.\n                     \\<Sqinter>D\\<in>K s.\n                        \\<integral>\\<^sup>+ t. g t (F t)\n     \\<partial>measure_pmf D)\n              x", "have \"\\<dots> \\<le> lfp ?F s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Squnion>i. (P ^^ i) \\<bottom> (memoryless_on ct s))\n    \\<le> lfp (\\<lambda>F s.\n                  \\<Sqinter>D\\<in>K s.\n                     \\<integral>\\<^sup>+ t. g t (F t)\n  \\<partial>measure_pmf D)\n           s", "proof (rule SUP_least)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> UNIV \\<Longrightarrow>\n       (P ^^ i) \\<bottom> (memoryless_on ct s)\n       \\<le> lfp (\\<lambda>F s.\n                     \\<Sqinter>D\\<in>K s.\n                        \\<integral>\\<^sup>+ t. g t (F t)\n     \\<partial>measure_pmf D)\n              s", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> UNIV \\<Longrightarrow>\n       (P ^^ i) \\<bottom> (memoryless_on ct s)\n       \\<le> lfp (\\<lambda>F s.\n                     \\<Sqinter>D\\<in>K s.\n                        \\<integral>\\<^sup>+ t. g t (F t)\n     \\<partial>measure_pmf D)\n              s", "show \"(P ^^ i) \\<bottom> (memoryless_on ct s) \\<le> lfp ?F s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P ^^ i) \\<bottom> (memoryless_on ct s)\n    \\<le> lfp (\\<lambda>F s.\n                  \\<Sqinter>D\\<in>K s.\n                     \\<integral>\\<^sup>+ t. g t (F t)\n  \\<partial>measure_pmf D)\n           s", "proof (induction i arbitrary: s)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s.\n       (P ^^ 0) \\<bottom> (memoryless_on ct s)\n       \\<le> lfp (\\<lambda>F s.\n                     \\<Sqinter>D\\<in>K s.\n                        \\<integral>\\<^sup>+ t. g t (F t)\n     \\<partial>measure_pmf D)\n              s\n 2. \\<And>i s.\n       (\\<And>s.\n           (P ^^ i) \\<bottom> (memoryless_on ct s)\n           \\<le> lfp (\\<lambda>F s.\n                         \\<Sqinter>D\\<in>K s.\n                            \\<integral>\\<^sup>+ t. g t (F t)\n         \\<partial>measure_pmf D)\n                  s) \\<Longrightarrow>\n       (P ^^ Suc i) \\<bottom> (memoryless_on ct s)\n       \\<le> lfp (\\<lambda>F s.\n                     \\<Sqinter>D\\<in>K s.\n                        \\<integral>\\<^sup>+ t. g t (F t)\n     \\<partial>measure_pmf D)\n              s", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>s.\n       (P ^^ 0) \\<bottom> (memoryless_on ct s)\n       \\<le> lfp (\\<lambda>F s.\n                     \\<Sqinter>D\\<in>K s.\n                        \\<integral>\\<^sup>+ t. g t (F t)\n     \\<partial>measure_pmf D)\n              s\n 2. \\<And>i s.\n       (\\<And>s.\n           (P ^^ i) \\<bottom> (memoryless_on ct s)\n           \\<le> lfp (\\<lambda>F s.\n                         \\<Sqinter>D\\<in>K s.\n                            \\<integral>\\<^sup>+ t. g t (F t)\n         \\<partial>measure_pmf D)\n                  s) \\<Longrightarrow>\n       (P ^^ Suc i) \\<bottom> (memoryless_on ct s)\n       \\<le> lfp (\\<lambda>F s.\n                     \\<Sqinter>D\\<in>K s.\n                        \\<integral>\\<^sup>+ t. g t (F t)\n     \\<partial>measure_pmf D)\n              s", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (P ^^ 0) \\<bottom> (memoryless_on ct s)\n    \\<le> lfp (\\<lambda>F s.\n                  \\<Sqinter>D\\<in>K s.\n                     \\<integral>\\<^sup>+ t. g t (F t)\n  \\<partial>measure_pmf D)\n           s", "by simp"], ["proof (state)\nthis:\n  (P ^^ 0) \\<bottom> (memoryless_on ct s)\n  \\<le> lfp (\\<lambda>F s.\n                \\<Sqinter>D\\<in>K s.\n                   \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n         s\n\ngoal (1 subgoal):\n 1. \\<And>i s.\n       (\\<And>s.\n           (P ^^ i) \\<bottom> (memoryless_on ct s)\n           \\<le> lfp (\\<lambda>F s.\n                         \\<Sqinter>D\\<in>K s.\n                            \\<integral>\\<^sup>+ t. g t (F t)\n         \\<partial>measure_pmf D)\n                  s) \\<Longrightarrow>\n       (P ^^ Suc i) \\<bottom> (memoryless_on ct s)\n       \\<le> lfp (\\<lambda>F s.\n                     \\<Sqinter>D\\<in>K s.\n                        \\<integral>\\<^sup>+ t. g t (F t)\n     \\<partial>measure_pmf D)\n              s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i s.\n       (\\<And>s.\n           (P ^^ i) \\<bottom> (memoryless_on ct s)\n           \\<le> lfp (\\<lambda>F s.\n                         \\<Sqinter>D\\<in>K s.\n                            \\<integral>\\<^sup>+ t. g t (F t)\n         \\<partial>measure_pmf D)\n                  s) \\<Longrightarrow>\n       (P ^^ Suc i) \\<bottom> (memoryless_on ct s)\n       \\<le> lfp (\\<lambda>F s.\n                     \\<Sqinter>D\\<in>K s.\n                        \\<integral>\\<^sup>+ t. g t (F t)\n     \\<partial>measure_pmf D)\n              s", "case (Suc n)"], ["proof (state)\nthis:\n  (P ^^ n) \\<bottom> (memoryless_on ct ?s1)\n  \\<le> lfp (\\<lambda>F s.\n                \\<Sqinter>D\\<in>K s.\n                   \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n         ?s1\n\ngoal (1 subgoal):\n 1. \\<And>i s.\n       (\\<And>s.\n           (P ^^ i) \\<bottom> (memoryless_on ct s)\n           \\<le> lfp (\\<lambda>F s.\n                         \\<Sqinter>D\\<in>K s.\n                            \\<integral>\\<^sup>+ t. g t (F t)\n         \\<partial>measure_pmf D)\n                  s) \\<Longrightarrow>\n       (P ^^ Suc i) \\<bottom> (memoryless_on ct s)\n       \\<le> lfp (\\<lambda>F s.\n                     \\<Sqinter>D\\<in>K s.\n                        \\<integral>\\<^sup>+ t. g t (F t)\n     \\<partial>measure_pmf D)\n              s", "have \"(P ^^ Suc n) \\<bottom> (memoryless_on ct s) =\n          (\\<integral>\\<^sup>+ t. g t ((P ^^ n) \\<bottom> (memoryless_on ct t)) \\<partial>ct s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P ^^ Suc n) \\<bottom> (memoryless_on ct s) =\n    \\<integral>\\<^sup>+ t. g t ((P ^^ n) \\<bottom> (memoryless_on ct t))\n                       \\<partial>measure_pmf (ct s)", "by (auto simp add: P_def K_cfg_def AE_measure_pmf_iff intro!: nn_integral_cong_AE)"], ["proof (state)\nthis:\n  (P ^^ Suc n) \\<bottom> (memoryless_on ct s) =\n  \\<integral>\\<^sup>+ t. g t ((P ^^ n) \\<bottom> (memoryless_on ct t))\n                     \\<partial>measure_pmf (ct s)\n\ngoal (1 subgoal):\n 1. \\<And>i s.\n       (\\<And>s.\n           (P ^^ i) \\<bottom> (memoryless_on ct s)\n           \\<le> lfp (\\<lambda>F s.\n                         \\<Sqinter>D\\<in>K s.\n                            \\<integral>\\<^sup>+ t. g t (F t)\n         \\<partial>measure_pmf D)\n                  s) \\<Longrightarrow>\n       (P ^^ Suc i) \\<bottom> (memoryless_on ct s)\n       \\<le> lfp (\\<lambda>F s.\n                     \\<Sqinter>D\\<in>K s.\n                        \\<integral>\\<^sup>+ t. g t (F t)\n     \\<partial>measure_pmf D)\n              s", "also"], ["proof (state)\nthis:\n  (P ^^ Suc n) \\<bottom> (memoryless_on ct s) =\n  \\<integral>\\<^sup>+ t. g t ((P ^^ n) \\<bottom> (memoryless_on ct t))\n                     \\<partial>measure_pmf (ct s)\n\ngoal (1 subgoal):\n 1. \\<And>i s.\n       (\\<And>s.\n           (P ^^ i) \\<bottom> (memoryless_on ct s)\n           \\<le> lfp (\\<lambda>F s.\n                         \\<Sqinter>D\\<in>K s.\n                            \\<integral>\\<^sup>+ t. g t (F t)\n         \\<partial>measure_pmf D)\n                  s) \\<Longrightarrow>\n       (P ^^ Suc i) \\<bottom> (memoryless_on ct s)\n       \\<le> lfp (\\<lambda>F s.\n                     \\<Sqinter>D\\<in>K s.\n                        \\<integral>\\<^sup>+ t. g t (F t)\n     \\<partial>measure_pmf D)\n              s", "have \"\\<dots> \\<le> (\\<integral>\\<^sup>+ t. g t (lfp ?F t) \\<partial>ct s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ t. g t ((P ^^ n) \\<bottom> (memoryless_on ct t))\n                       \\<partial>measure_pmf (ct s)\n    \\<le> \\<integral>\\<^sup>+ t. g t (lfp\n (\\<lambda>F s.\n     \\<Sqinter>D\\<in>K s.\n        \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n t)\n                             \\<partial>measure_pmf (ct s)", "by (intro nn_integral_mono sup_continuous_mono[OF cont_g, THEN monoD] Suc)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ t. g t ((P ^^ n) \\<bottom> (memoryless_on ct t))\n                     \\<partial>measure_pmf (ct s)\n  \\<le> \\<integral>\\<^sup>+ t. g t (lfp (\\<lambda>F s.\n      \\<Sqinter>D\\<in>K s.\n         \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n                                     t)\n                           \\<partial>measure_pmf (ct s)\n\ngoal (1 subgoal):\n 1. \\<And>i s.\n       (\\<And>s.\n           (P ^^ i) \\<bottom> (memoryless_on ct s)\n           \\<le> lfp (\\<lambda>F s.\n                         \\<Sqinter>D\\<in>K s.\n                            \\<integral>\\<^sup>+ t. g t (F t)\n         \\<partial>measure_pmf D)\n                  s) \\<Longrightarrow>\n       (P ^^ Suc i) \\<bottom> (memoryless_on ct s)\n       \\<le> lfp (\\<lambda>F s.\n                     \\<Sqinter>D\\<in>K s.\n                        \\<integral>\\<^sup>+ t. g t (F t)\n     \\<partial>measure_pmf D)\n              s", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ t. g t ((P ^^ n) \\<bottom> (memoryless_on ct t))\n                     \\<partial>measure_pmf (ct s)\n  \\<le> \\<integral>\\<^sup>+ t. g t (lfp (\\<lambda>F s.\n      \\<Sqinter>D\\<in>K s.\n         \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n                                     t)\n                           \\<partial>measure_pmf (ct s)\n\ngoal (1 subgoal):\n 1. \\<And>i s.\n       (\\<And>s.\n           (P ^^ i) \\<bottom> (memoryless_on ct s)\n           \\<le> lfp (\\<lambda>F s.\n                         \\<Sqinter>D\\<in>K s.\n                            \\<integral>\\<^sup>+ t. g t (F t)\n         \\<partial>measure_pmf D)\n                  s) \\<Longrightarrow>\n       (P ^^ Suc i) \\<bottom> (memoryless_on ct s)\n       \\<le> lfp (\\<lambda>F s.\n                     \\<Sqinter>D\\<in>K s.\n                        \\<integral>\\<^sup>+ t. g t (F t)\n     \\<partial>measure_pmf D)\n              s", "have \"\\<dots> = lfp ?F s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ t. g t (lfp (\\<lambda>F s.\n  \\<Sqinter>D\\<in>K s.\n     \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n                                 t)\n                       \\<partial>measure_pmf (ct s) =\n    lfp (\\<lambda>F s.\n            \\<Sqinter>D\\<in>K s.\n               \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n     s", "by (rule  ct(2) [symmetric])"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ t. g t (lfp (\\<lambda>F s.\n\\<Sqinter>D\\<in>K s.\n   \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n                               t)\n                     \\<partial>measure_pmf (ct s) =\n  lfp (\\<lambda>F s.\n          \\<Sqinter>D\\<in>K s.\n             \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n   s\n\ngoal (1 subgoal):\n 1. \\<And>i s.\n       (\\<And>s.\n           (P ^^ i) \\<bottom> (memoryless_on ct s)\n           \\<le> lfp (\\<lambda>F s.\n                         \\<Sqinter>D\\<in>K s.\n                            \\<integral>\\<^sup>+ t. g t (F t)\n         \\<partial>measure_pmf D)\n                  s) \\<Longrightarrow>\n       (P ^^ Suc i) \\<bottom> (memoryless_on ct s)\n       \\<le> lfp (\\<lambda>F s.\n                     \\<Sqinter>D\\<in>K s.\n                        \\<integral>\\<^sup>+ t. g t (F t)\n     \\<partial>measure_pmf D)\n              s", "finally"], ["proof (chain)\npicking this:\n  (P ^^ Suc n) \\<bottom> (memoryless_on ct s)\n  \\<le> lfp (\\<lambda>F s.\n                \\<Sqinter>D\\<in>K s.\n                   \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n         s", "show ?case"], ["proof (prove)\nusing this:\n  (P ^^ Suc n) \\<bottom> (memoryless_on ct s)\n  \\<le> lfp (\\<lambda>F s.\n                \\<Sqinter>D\\<in>K s.\n                   \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n         s\n\ngoal (1 subgoal):\n 1. (P ^^ Suc n) \\<bottom> (memoryless_on ct s)\n    \\<le> lfp (\\<lambda>F s.\n                  \\<Sqinter>D\\<in>K s.\n                     \\<integral>\\<^sup>+ t. g t (F t)\n  \\<partial>measure_pmf D)\n           s", "."], ["proof (state)\nthis:\n  (P ^^ Suc n) \\<bottom> (memoryless_on ct s)\n  \\<le> lfp (\\<lambda>F s.\n                \\<Sqinter>D\\<in>K s.\n                   \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n         s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (P ^^ i) \\<bottom> (memoryless_on ct s)\n  \\<le> lfp (\\<lambda>F s.\n                \\<Sqinter>D\\<in>K s.\n                   \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n         s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Squnion>i. (P ^^ i) \\<bottom> (memoryless_on ct s))\n  \\<le> lfp (\\<lambda>F s.\n                \\<Sqinter>D\\<in>K s.\n                   \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n         s\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<And>s. memoryless_on ct s \\<in> cfg_on s) \\<Longrightarrow>\n       integral\\<^sup>N (T (memoryless_on ct x)) (lfp l)\n       \\<le> lfp (\\<lambda>F s.\n                     \\<Sqinter>D\\<in>K s.\n                        \\<integral>\\<^sup>+ t. g t (F t)\n     \\<partial>measure_pmf D)\n              x", "finally"], ["proof (chain)\npicking this:\n  integral\\<^sup>N (T (memoryless_on ct s)) (lfp l)\n  \\<le> lfp (\\<lambda>F s.\n                \\<Sqinter>D\\<in>K s.\n                   \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n         s", "show \"integral\\<^sup>N (T (memoryless_on ct s)) (lfp l) \\<le> lfp ?F s\""], ["proof (prove)\nusing this:\n  integral\\<^sup>N (T (memoryless_on ct s)) (lfp l)\n  \\<le> lfp (\\<lambda>F s.\n                \\<Sqinter>D\\<in>K s.\n                   \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n         s\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N (T (memoryless_on ct s)) (lfp l)\n    \\<le> lfp (\\<lambda>F s.\n                  \\<Sqinter>D\\<in>K s.\n                     \\<integral>\\<^sup>+ t. g t (F t)\n  \\<partial>measure_pmf D)\n           s", "."], ["proof (state)\nthis:\n  integral\\<^sup>N (T (memoryless_on ct s)) (lfp l)\n  \\<le> lfp (\\<lambda>F s.\n                \\<Sqinter>D\\<in>K s.\n                   \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n         s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>s. E_inf s (lfp l))\n  \\<le> lfp (\\<lambda>F s.\n                \\<Sqinter>D\\<in>K s.\n                   \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n\ngoal (1 subgoal):\n 1. lfp (\\<lambda>f s.\n            \\<Sqinter>D\\<in>K s.\n               \\<integral>\\<^sup>+ t. g t (f t) \\<partial>measure_pmf D)\n    \\<le> (\\<lambda>s. E_inf s (lfp l))", "have cont_l: \"sup_continuous l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_continuous l", "by (auto simp: l_def intro!: order_continuous_intros cont_g[THEN sup_continuous_compose])"], ["proof (state)\nthis:\n  sup_continuous l\n\ngoal (1 subgoal):\n 1. lfp (\\<lambda>f s.\n            \\<Sqinter>D\\<in>K s.\n               \\<integral>\\<^sup>+ t. g t (f t) \\<partial>measure_pmf D)\n    \\<le> (\\<lambda>s. E_inf s (lfp l))", "show \"lfp ?F \\<le> (\\<lambda>s. E_inf s (lfp l))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lfp (\\<lambda>F s.\n            \\<Sqinter>D\\<in>K s.\n               \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n    \\<le> (\\<lambda>s. E_inf s (lfp l))", "proof (intro lfp_lowerbound le_funI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<Sqinter>D\\<in>K x.\n           \\<integral>\\<^sup>+ t. g t (E_inf t (lfp l))\n                              \\<partial>measure_pmf D)\n       \\<le> E_inf x (lfp l)", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<Sqinter>D\\<in>K x.\n           \\<integral>\\<^sup>+ t. g t (E_inf t (lfp l))\n                              \\<partial>measure_pmf D)\n       \\<le> E_inf x (lfp l)", "show \"(\\<Sqinter>x\\<in>K s. \\<integral>\\<^sup>+ t. g t (E_inf t (lfp l)) \\<partial>measure_pmf x) \\<le> E_inf s (lfp l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sqinter>x\\<in>K s.\n        \\<integral>\\<^sup>+ t. g t (E_inf t (lfp l))\n                           \\<partial>measure_pmf x)\n    \\<le> E_inf s (lfp l)", "proof (rewrite in \"_ \\<le> \\<hole>\" E_inf_iterate)"], ["proof (state)\ngoal (2 subgoals):\n 1. lfp l \\<in> borel_measurable St\n 2. (\\<Sqinter>x\\<in>K s.\n        \\<integral>\\<^sup>+ t. g t (E_inf t (lfp l))\n                           \\<partial>measure_pmf x)\n    \\<le> (\\<Sqinter>D\\<in>K s.\n              \\<integral>\\<^sup>+ t. E_inf t\n(\\<lambda>\\<omega>. lfp l (t ## \\<omega>))\n                                 \\<partial>measure_pmf D)", "show l: \"lfp l \\<in> borel_measurable St\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lfp l \\<in> borel_measurable St", "using cont_l"], ["proof (prove)\nusing this:\n  sup_continuous l\n\ngoal (1 subgoal):\n 1. lfp l \\<in> borel_measurable St", "by (rule borel_measurable_lfp) (simp add: l_def)"], ["proof (state)\nthis:\n  lfp l \\<in> borel_measurable St\n\ngoal (1 subgoal):\n 1. (\\<Sqinter>x\\<in>K s.\n        \\<integral>\\<^sup>+ t. g t (E_inf t (lfp l))\n                           \\<partial>measure_pmf x)\n    \\<le> (\\<Sqinter>D\\<in>K s.\n              \\<integral>\\<^sup>+ t. E_inf t\n(\\<lambda>\\<omega>. lfp l (t ## \\<omega>))\n                                 \\<partial>measure_pmf D)", "show \"(\\<Sqinter>D\\<in>K s. \\<integral>\\<^sup>+ t. g t (E_inf t (lfp l)) \\<partial>measure_pmf D) \\<le>\n        (\\<Sqinter>D\\<in>K s. \\<integral>\\<^sup>+ t. E_inf t (\\<lambda>\\<omega>. lfp l (t ## \\<omega>)) \\<partial>measure_pmf D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sqinter>D\\<in>K s.\n        \\<integral>\\<^sup>+ t. g t (E_inf t (lfp l))\n                           \\<partial>measure_pmf D)\n    \\<le> (\\<Sqinter>D\\<in>K s.\n              \\<integral>\\<^sup>+ t. E_inf t\n(\\<lambda>\\<omega>. lfp l (t ## \\<omega>))\n                                 \\<partial>measure_pmf D)", "proof (rule INF_mono nn_integral_mono bexI)+"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>m x.\n       \\<lbrakk>m \\<in> K s; x \\<in> space (measure_pmf m)\\<rbrakk>\n       \\<Longrightarrow> g x (E_inf x (lfp l))\n                         \\<le> E_inf x\n                                (\\<lambda>\\<omega>. lfp l (x ## \\<omega>))\n 2. \\<And>m. m \\<in> K s \\<Longrightarrow> m \\<in> K s", "fix t D"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>m x.\n       \\<lbrakk>m \\<in> K s; x \\<in> space (measure_pmf m)\\<rbrakk>\n       \\<Longrightarrow> g x (E_inf x (lfp l))\n                         \\<le> E_inf x\n                                (\\<lambda>\\<omega>. lfp l (x ## \\<omega>))\n 2. \\<And>m. m \\<in> K s \\<Longrightarrow> m \\<in> K s", "assume \"D \\<in> K s\""], ["proof (state)\nthis:\n  D \\<in> K s\n\ngoal (2 subgoals):\n 1. \\<And>m x.\n       \\<lbrakk>m \\<in> K s; x \\<in> space (measure_pmf m)\\<rbrakk>\n       \\<Longrightarrow> g x (E_inf x (lfp l))\n                         \\<le> E_inf x\n                                (\\<lambda>\\<omega>. lfp l (x ## \\<omega>))\n 2. \\<And>m. m \\<in> K s \\<Longrightarrow> m \\<in> K s", "{"], ["proof (state)\nthis:\n  D \\<in> K s\n\ngoal (2 subgoals):\n 1. \\<And>m x.\n       \\<lbrakk>m \\<in> K s; x \\<in> space (measure_pmf m)\\<rbrakk>\n       \\<Longrightarrow> g x (E_inf x (lfp l))\n                         \\<le> E_inf x\n                                (\\<lambda>\\<omega>. lfp l (x ## \\<omega>))\n 2. \\<And>m. m \\<in> K s \\<Longrightarrow> m \\<in> K s", "fix cfg"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>m x.\n       \\<lbrakk>m \\<in> K s; x \\<in> space (measure_pmf m)\\<rbrakk>\n       \\<Longrightarrow> g x (E_inf x (lfp l))\n                         \\<le> E_inf x\n                                (\\<lambda>\\<omega>. lfp l (x ## \\<omega>))\n 2. \\<And>m. m \\<in> K s \\<Longrightarrow> m \\<in> K s", "assume \"cfg \\<in> cfg_on t\""], ["proof (state)\nthis:\n  cfg \\<in> cfg_on t\n\ngoal (2 subgoals):\n 1. \\<And>m x.\n       \\<lbrakk>m \\<in> K s; x \\<in> space (measure_pmf m)\\<rbrakk>\n       \\<Longrightarrow> g x (E_inf x (lfp l))\n                         \\<le> E_inf x\n                                (\\<lambda>\\<omega>. lfp l (x ## \\<omega>))\n 2. \\<And>m. m \\<in> K s \\<Longrightarrow> m \\<in> K s", "have \"(\\<integral>\\<^sup>+ \\<omega>. g (state cfg) (lfp l \\<omega>) \\<partial>T cfg) = g (state cfg) (\\<integral>\\<^sup>+ \\<omega>. (lfp l \\<omega>) \\<partial>T cfg)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ \\<omega>. g (state cfg) (lfp l \\<omega>)\n                       \\<partial>T cfg =\n    g (state cfg) (integral\\<^sup>N (T cfg) (lfp l))", "using l"], ["proof (prove)\nusing this:\n  lfp l \\<in> borel_measurable St\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ \\<omega>. g (state cfg) (lfp l \\<omega>)\n                       \\<partial>T cfg =\n    g (state cfg) (integral\\<^sup>N (T cfg) (lfp l))", "by (rule int_g)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ \\<omega>. g (state cfg) (lfp l \\<omega>)\n                     \\<partial>T cfg =\n  g (state cfg) (integral\\<^sup>N (T cfg) (lfp l))\n\ngoal (2 subgoals):\n 1. \\<And>m x.\n       \\<lbrakk>m \\<in> K s; x \\<in> space (measure_pmf m)\\<rbrakk>\n       \\<Longrightarrow> g x (E_inf x (lfp l))\n                         \\<le> E_inf x\n                                (\\<lambda>\\<omega>. lfp l (x ## \\<omega>))\n 2. \\<And>m. m \\<in> K s \\<Longrightarrow> m \\<in> K s", "with \\<open>cfg \\<in> cfg_on t\\<close>"], ["proof (chain)\npicking this:\n  cfg \\<in> cfg_on t\n  \\<integral>\\<^sup>+ \\<omega>. g (state cfg) (lfp l \\<omega>)\n                     \\<partial>T cfg =\n  g (state cfg) (integral\\<^sup>N (T cfg) (lfp l))", "have *: \"(\\<integral>\\<^sup>+ \\<omega>. g t (lfp l \\<omega>) \\<partial>T cfg) = g t (\\<integral>\\<^sup>+ \\<omega>. (lfp l \\<omega>) \\<partial>T cfg)\""], ["proof (prove)\nusing this:\n  cfg \\<in> cfg_on t\n  \\<integral>\\<^sup>+ \\<omega>. g (state cfg) (lfp l \\<omega>)\n                     \\<partial>T cfg =\n  g (state cfg) (integral\\<^sup>N (T cfg) (lfp l))\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ \\<omega>. g t (lfp l \\<omega>) \\<partial>T cfg =\n    g t (integral\\<^sup>N (T cfg) (lfp l))", "by simp"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ \\<omega>. g t (lfp l \\<omega>) \\<partial>T cfg =\n  g t (integral\\<^sup>N (T cfg) (lfp l))\n\ngoal (2 subgoals):\n 1. \\<And>m x.\n       \\<lbrakk>m \\<in> K s; x \\<in> space (measure_pmf m)\\<rbrakk>\n       \\<Longrightarrow> g x (E_inf x (lfp l))\n                         \\<le> E_inf x\n                                (\\<lambda>\\<omega>. lfp l (x ## \\<omega>))\n 2. \\<And>m. m \\<in> K s \\<Longrightarrow> m \\<in> K s", "}"], ["proof (state)\nthis:\n  ?cfg3 \\<in> cfg_on t \\<Longrightarrow>\n  \\<integral>\\<^sup>+ \\<omega>. g t (lfp l \\<omega>) \\<partial>T ?cfg3 =\n  g t (integral\\<^sup>N (T ?cfg3) (lfp l))\n\ngoal (2 subgoals):\n 1. \\<And>m x.\n       \\<lbrakk>m \\<in> K s; x \\<in> space (measure_pmf m)\\<rbrakk>\n       \\<Longrightarrow> g x (E_inf x (lfp l))\n                         \\<le> E_inf x\n                                (\\<lambda>\\<omega>. lfp l (x ## \\<omega>))\n 2. \\<And>m. m \\<in> K s \\<Longrightarrow> m \\<in> K s", "then"], ["proof (chain)\npicking this:\n  ?cfg3 \\<in> cfg_on t \\<Longrightarrow>\n  \\<integral>\\<^sup>+ \\<omega>. g t (lfp l \\<omega>) \\<partial>T ?cfg3 =\n  g t (integral\\<^sup>N (T ?cfg3) (lfp l))", "have *: \"g t (\\<Sqinter>cfg\\<in>cfg_on t. integral\\<^sup>N (T cfg) (lfp l)) \\<le> (\\<Sqinter>cfg\\<in>cfg_on t. \\<integral>\\<^sup>+ \\<omega>. g t (lfp l \\<omega>) \\<partial>T cfg)\""], ["proof (prove)\nusing this:\n  ?cfg3 \\<in> cfg_on t \\<Longrightarrow>\n  \\<integral>\\<^sup>+ \\<omega>. g t (lfp l \\<omega>) \\<partial>T ?cfg3 =\n  g t (integral\\<^sup>N (T ?cfg3) (lfp l))\n\ngoal (1 subgoal):\n 1. g t (\\<Sqinter>cfg\\<in>cfg_on t. integral\\<^sup>N (T cfg) (lfp l))\n    \\<le> (\\<Sqinter>cfg\\<in>cfg_on t.\n              \\<integral>\\<^sup>+ \\<omega>. g t (lfp l \\<omega>)\n                                 \\<partial>T cfg)", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>cfg.\n        cfg \\<in> cfg_on t \\<Longrightarrow>\n        \\<integral>\\<^sup>+ \\<omega>. g t (lfp l \\<omega>) \\<partial>T cfg =\n        g t (integral\\<^sup>N (T cfg) (lfp l))) \\<Longrightarrow>\n    g t (\\<Sqinter>cfg\\<in>cfg_on t. integral\\<^sup>N (T cfg) (lfp l))\n    \\<le> (\\<Sqinter>x\\<in>cfg_on t. g t (integral\\<^sup>N (T x) (lfp l)))", "apply (rule INF_greatest)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>cfg.\n                   cfg \\<in> cfg_on t \\<Longrightarrow>\n                   \\<integral>\\<^sup>+ \\<omega>. g t (lfp l \\<omega>)\n\\<partial>T cfg =\n                   g t (integral\\<^sup>N (T cfg) (lfp l));\n        x \\<in> cfg_on t\\<rbrakk>\n       \\<Longrightarrow> g t (\\<Sqinter>cfg\\<in>cfg_on t.\n                                 integral\\<^sup>N (T cfg) (lfp l))\n                         \\<le> g t (integral\\<^sup>N (T x) (lfp l))", "apply (rule sup_continuous_mono[OF cont_g, THEN monoD])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>cfg.\n                   cfg \\<in> cfg_on t \\<Longrightarrow>\n                   \\<integral>\\<^sup>+ \\<omega>. g t (lfp l \\<omega>)\n\\<partial>T cfg =\n                   g t (integral\\<^sup>N (T cfg) (lfp l));\n        x \\<in> cfg_on t\\<rbrakk>\n       \\<Longrightarrow> (\\<Sqinter>cfg\\<in>cfg_on t.\n                             integral\\<^sup>N (T cfg) (lfp l))\n                         \\<le> integral\\<^sup>N (T x) (lfp l)", "apply (rule INF_lower)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>cfg.\n                   cfg \\<in> cfg_on t \\<Longrightarrow>\n                   \\<integral>\\<^sup>+ \\<omega>. g t (lfp l \\<omega>)\n\\<partial>T cfg =\n                   g t (integral\\<^sup>N (T cfg) (lfp l));\n        x \\<in> cfg_on t\\<rbrakk>\n       \\<Longrightarrow> x \\<in> cfg_on t", "apply assumption"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  g t (\\<Sqinter>cfg\\<in>cfg_on t. integral\\<^sup>N (T cfg) (lfp l))\n  \\<le> (\\<Sqinter>cfg\\<in>cfg_on t.\n            \\<integral>\\<^sup>+ \\<omega>. g t (lfp l \\<omega>)\n                               \\<partial>T cfg)\n\ngoal (2 subgoals):\n 1. \\<And>m x.\n       \\<lbrakk>m \\<in> K s; x \\<in> space (measure_pmf m)\\<rbrakk>\n       \\<Longrightarrow> g x (E_inf x (lfp l))\n                         \\<le> E_inf x\n                                (\\<lambda>\\<omega>. lfp l (x ## \\<omega>))\n 2. \\<And>m. m \\<in> K s \\<Longrightarrow> m \\<in> K s", "show \"g t (E_inf t (lfp l)) \\<le> E_inf t (\\<lambda>\\<omega>. lfp l (t ## \\<omega>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g t (E_inf t (lfp l))\n    \\<le> E_inf t (\\<lambda>\\<omega>. lfp l (t ## \\<omega>))", "apply (rewrite in \"_ \\<le> \\<hole>\" lfp_unfold[OF sup_continuous_mono[OF cont_l]])"], ["proof (prove)\ngoal (1 subgoal):\n 1. g t (E_inf t (lfp l))\n    \\<le> E_inf t (\\<lambda>\\<omega>. l (lfp l) (t ## \\<omega>))", "apply (rewrite in \"_ \\<le> \\<hole>\" l_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. g t (E_inf t (lfp l))\n    \\<le> E_inf t\n           (\\<lambda>\\<omega>.\n               g (shd (t ## \\<omega>)) (lfp l (stl (t ## \\<omega>))))", "apply (simp add: E_inf_def *)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  g t (E_inf t (lfp l))\n  \\<le> E_inf t (\\<lambda>\\<omega>. lfp l (t ## \\<omega>))\n\ngoal (1 subgoal):\n 1. \\<And>m. m \\<in> K s \\<Longrightarrow> m \\<in> K s", "qed"], ["proof (state)\nthis:\n  (\\<Sqinter>D\\<in>K s.\n      \\<integral>\\<^sup>+ t. g t (E_inf t (lfp l)) \\<partial>measure_pmf D)\n  \\<le> (\\<Sqinter>D\\<in>K s.\n            \\<integral>\\<^sup>+ t. E_inf t\n                                    (\\<lambda>\\<omega>.\n  lfp l (t ## \\<omega>))\n                               \\<partial>measure_pmf D)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sqinter>x\\<in>K s.\n      \\<integral>\\<^sup>+ t. g t (E_inf t (lfp l)) \\<partial>measure_pmf x)\n  \\<le> E_inf s (lfp l)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lfp (\\<lambda>F s.\n          \\<Sqinter>D\\<in>K s.\n             \\<integral>\\<^sup>+ t. g t (F t) \\<partial>measure_pmf D)\n  \\<le> (\\<lambda>s. E_inf s (lfp l))\n\ngoal:\nNo subgoals!", "qed"], ["", "definition \"P_inf s P = (\\<Sqinter>cfg\\<in>cfg_on s. emeasure (T cfg) {x\\<in>space St. P x})\""], ["", "lemma P_inf_eq_E_inf:\n  assumes [measurable]: \"Measurable.pred St P\"\n  shows \"P_inf s P = E_inf s (indicator {x\\<in>space St. P x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P_inf s P = E_inf s (indicator {x \\<in> space St. P x})", "by (auto simp add: P_inf_def E_inf_def intro!: SUP_cong nn_integral_cong)"], ["", "lemma P_inf_True[simp]: \"P_inf t (\\<lambda>\\<omega>. True) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P_inf t (\\<lambda>\\<omega>. True) = 1", "using T.emeasure_space_1"], ["proof (prove)\nusing this:\n  emeasure (T ?cfg) (space (T ?cfg)) = 1\n\ngoal (1 subgoal):\n 1. P_inf t (\\<lambda>\\<omega>. True) = 1", "by (auto simp add: P_inf_def SUP_constant)"], ["", "lemma P_inf_False[simp]: \"P_inf t (\\<lambda>\\<omega>. False) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P_inf t (\\<lambda>\\<omega>. False) = 0", "by (auto simp add: P_inf_def SUP_constant)"], ["", "lemma P_inf_INF:\n  fixes P :: \"nat \\<Rightarrow> 's stream \\<Rightarrow> bool\"\n  assumes \"decseq P\" and P[measurable]: \"\\<And>i. Measurable.pred St (P i)\"\n  shows \"P_inf s (\\<lambda>x. \\<forall>i. P i x) = (\\<Sqinter>i. P_inf s (P i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P_inf s (\\<lambda>x. \\<forall>i. P i x) = (\\<Sqinter>i. P_inf s (P i))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P_inf s (\\<lambda>x. \\<forall>i. P i x) = (\\<Sqinter>i. P_inf s (P i))", "have \"P_inf s (\\<lambda>x. \\<Sqinter>i. P i x) = (\\<Sqinter>cfg\\<in>cfg_on s. emeasure (T cfg) (\\<Inter>i. {x\\<in>space St. P i x}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P_inf s (\\<lambda>x. \\<Sqinter>i. P i x) =\n    (\\<Sqinter>cfg\\<in>cfg_on s.\n        emeasure (T cfg) (\\<Inter>i. {x \\<in> space St. P i x}))", "by (auto simp: P_inf_def intro!: INF_cong arg_cong2[where f=emeasure])"], ["proof (state)\nthis:\n  P_inf s (\\<lambda>x. \\<Sqinter>i. P i x) =\n  (\\<Sqinter>cfg\\<in>cfg_on s.\n      emeasure (T cfg) (\\<Inter>i. {x \\<in> space St. P i x}))\n\ngoal (1 subgoal):\n 1. P_inf s (\\<lambda>x. \\<forall>i. P i x) = (\\<Sqinter>i. P_inf s (P i))", "also"], ["proof (state)\nthis:\n  P_inf s (\\<lambda>x. \\<Sqinter>i. P i x) =\n  (\\<Sqinter>cfg\\<in>cfg_on s.\n      emeasure (T cfg) (\\<Inter>i. {x \\<in> space St. P i x}))\n\ngoal (1 subgoal):\n 1. P_inf s (\\<lambda>x. \\<forall>i. P i x) = (\\<Sqinter>i. P_inf s (P i))", "have \"\\<dots> = (\\<Sqinter>cfg\\<in>cfg_on s. \\<Sqinter>i. emeasure (T cfg) {x\\<in>space St. P i x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sqinter>cfg\\<in>cfg_on s.\n        emeasure (T cfg) (\\<Inter>i. {x \\<in> space St. P i x})) =\n    (\\<Sqinter>cfg\\<in>cfg_on s.\n        \\<Sqinter>i. emeasure (T cfg) {x \\<in> space St. P i x})", "using \\<open>decseq P\\<close>"], ["proof (prove)\nusing this:\n  decseq P\n\ngoal (1 subgoal):\n 1. (\\<Sqinter>cfg\\<in>cfg_on s.\n        emeasure (T cfg) (\\<Inter>i. {x \\<in> space St. P i x})) =\n    (\\<Sqinter>cfg\\<in>cfg_on s.\n        \\<Sqinter>i. emeasure (T cfg) {x \\<in> space St. P i x})", "by (auto intro!: INF_cong INF_emeasure_decseq[symmetric] simp: decseq_def le_fun_def)"], ["proof (state)\nthis:\n  (\\<Sqinter>cfg\\<in>cfg_on s.\n      emeasure (T cfg) (\\<Inter>i. {x \\<in> space St. P i x})) =\n  (\\<Sqinter>cfg\\<in>cfg_on s.\n      \\<Sqinter>i. emeasure (T cfg) {x \\<in> space St. P i x})\n\ngoal (1 subgoal):\n 1. P_inf s (\\<lambda>x. \\<forall>i. P i x) = (\\<Sqinter>i. P_inf s (P i))", "also"], ["proof (state)\nthis:\n  (\\<Sqinter>cfg\\<in>cfg_on s.\n      emeasure (T cfg) (\\<Inter>i. {x \\<in> space St. P i x})) =\n  (\\<Sqinter>cfg\\<in>cfg_on s.\n      \\<Sqinter>i. emeasure (T cfg) {x \\<in> space St. P i x})\n\ngoal (1 subgoal):\n 1. P_inf s (\\<lambda>x. \\<forall>i. P i x) = (\\<Sqinter>i. P_inf s (P i))", "have \"\\<dots> = (\\<Sqinter>i. P_inf s (P i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sqinter>cfg\\<in>cfg_on s.\n        \\<Sqinter>i. emeasure (T cfg) {x \\<in> space St. P i x}) =\n    (\\<Sqinter>i. P_inf s (P i))", "by (subst INF_commute) (simp add: P_inf_def)"], ["proof (state)\nthis:\n  (\\<Sqinter>cfg\\<in>cfg_on s.\n      \\<Sqinter>i. emeasure (T cfg) {x \\<in> space St. P i x}) =\n  (\\<Sqinter>i. P_inf s (P i))\n\ngoal (1 subgoal):\n 1. P_inf s (\\<lambda>x. \\<forall>i. P i x) = (\\<Sqinter>i. P_inf s (P i))", "finally"], ["proof (chain)\npicking this:\n  P_inf s (\\<lambda>x. \\<Sqinter>i. P i x) = (\\<Sqinter>i. P_inf s (P i))", "show ?thesis"], ["proof (prove)\nusing this:\n  P_inf s (\\<lambda>x. \\<Sqinter>i. P i x) = (\\<Sqinter>i. P_inf s (P i))\n\ngoal (1 subgoal):\n 1. P_inf s (\\<lambda>x. \\<forall>i. P i x) = (\\<Sqinter>i. P_inf s (P i))", "by simp"], ["proof (state)\nthis:\n  P_inf s (\\<lambda>x. \\<forall>i. P i x) = (\\<Sqinter>i. P_inf s (P i))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma P_inf_gfp:\n  assumes Q: \"inf_continuous Q\"\n  assumes f: \"f \\<in> measurable St M\"\n  assumes Q_m: \"\\<And>P. Measurable.pred M P \\<Longrightarrow> Measurable.pred M (Q P)\"\n  shows \"P_inf s (\\<lambda>x. gfp Q (f x)) = (\\<Sqinter>i. P_inf s (\\<lambda>x. (Q ^^ i) \\<top> (f x)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P_inf s (\\<lambda>x. gfp Q (f x)) =\n    (\\<Sqinter>i. P_inf s (\\<lambda>x. (Q ^^ i) \\<top> (f x)))", "unfolding inf_continuous_gfp[OF Q]"], ["proof (prove)\ngoal (1 subgoal):\n 1. P_inf s (\\<lambda>x. (\\<Sqinter>i. (Q ^^ i) \\<top>) (f x)) =\n    (\\<Sqinter>i. P_inf s (\\<lambda>x. (Q ^^ i) \\<top> (f x)))", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. P_inf s (\\<lambda>x. \\<forall>fa. (Q ^^ fa) \\<top> (f x)) =\n    (\\<Sqinter>i. P_inf s (\\<lambda>x. (Q ^^ i) \\<top> (f x)))", "proof (rule P_inf_INF)"], ["proof (state)\ngoal (2 subgoals):\n 1. decseq (\\<lambda>i x. (Q ^^ i) \\<top> (f x))\n 2. \\<And>fa. Measurable.pred St (\\<lambda>x. (Q ^^ fa) \\<top> (f x))", "fix i"], ["proof (state)\ngoal (2 subgoals):\n 1. decseq (\\<lambda>i x. (Q ^^ i) \\<top> (f x))\n 2. \\<And>fa. Measurable.pred St (\\<lambda>x. (Q ^^ fa) \\<top> (f x))", "show \"Measurable.pred St (\\<lambda>x. (Q ^^ i) \\<top> (f x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Measurable.pred St (\\<lambda>x. (Q ^^ i) \\<top> (f x))", "apply (intro measurable_compose[OF f])"], ["proof (prove)\ngoal (1 subgoal):\n 1. Measurable.pred M ((Q ^^ i) \\<top>)", "by (induct i) (auto intro!: Q_m)"], ["proof (state)\nthis:\n  Measurable.pred St (\\<lambda>x. (Q ^^ i) \\<top> (f x))\n\ngoal (1 subgoal):\n 1. decseq (\\<lambda>i x. (Q ^^ i) \\<top> (f x))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. decseq (\\<lambda>i x. (Q ^^ i) \\<top> (f x))", "show \"decseq (\\<lambda>i x. (Q ^^ i) \\<top> (f x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. decseq (\\<lambda>i x. (Q ^^ i) \\<top> (f x))", "using inf_continuous_mono[OF Q, THEN funpow_increasing[rotated]]"], ["proof (prove)\nusing this:\n  ?m \\<le> ?n \\<Longrightarrow> (Q ^^ ?n) \\<top> \\<le> (Q ^^ ?m) \\<top>\n\ngoal (1 subgoal):\n 1. decseq (\\<lambda>i x. (Q ^^ i) \\<top> (f x))", "unfolding decseq_def le_fun_def"], ["proof (prove)\nusing this:\n  ?m \\<le> ?n \\<Longrightarrow>\n  \\<forall>x. (Q ^^ ?n) \\<top> x \\<le> (Q ^^ ?m) \\<top> x\n\ngoal (1 subgoal):\n 1. \\<forall>m n.\n       m \\<le> n \\<longrightarrow>\n       (\\<forall>x. (Q ^^ n) \\<top> (f x) \\<le> (Q ^^ m) \\<top> (f x))", "by auto"], ["proof (state)\nthis:\n  decseq (\\<lambda>i x. (Q ^^ i) \\<top> (f x))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma P_inf_iterate:\n  assumes [measurable]: \"Measurable.pred St P\"\n  shows \"P_inf s P = (\\<Sqinter>D\\<in>K s. \\<integral>\\<^sup>+ t. P_inf t (\\<lambda>\\<omega>. P (t ## \\<omega>)) \\<partial>measure_pmf D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P_inf s P =\n    (\\<Sqinter>D\\<in>K s.\n        \\<integral>\\<^sup>+ t. P_inf t\n                                (\\<lambda>\\<omega>. P (t ## \\<omega>))\n                           \\<partial>measure_pmf D)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P_inf s P =\n    (\\<Sqinter>D\\<in>K s.\n        \\<integral>\\<^sup>+ t. P_inf t\n                                (\\<lambda>\\<omega>. P (t ## \\<omega>))\n                           \\<partial>measure_pmf D)", "have [simp]: \"\\<And>x s. indicator {x \\<in> space St. P x} (x ## s) = indicator {s \\<in> space St. P (x ## s)} s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x s.\n       indicator {x \\<in> space St. P x} (x ## s) =\n       indicator {s \\<in> space St. P (x ## s)} s", "by (auto simp: space_stream_space split: split_indicator)"], ["proof (state)\nthis:\n  indicator {x \\<in> space St. P x} (?x1 ## ?s1) =\n  indicator {s \\<in> space St. P (?x1 ## s)} ?s1\n\ngoal (1 subgoal):\n 1. P_inf s P =\n    (\\<Sqinter>D\\<in>K s.\n        \\<integral>\\<^sup>+ t. P_inf t\n                                (\\<lambda>\\<omega>. P (t ## \\<omega>))\n                           \\<partial>measure_pmf D)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. P_inf s P =\n    (\\<Sqinter>D\\<in>K s.\n        \\<integral>\\<^sup>+ t. P_inf t\n                                (\\<lambda>\\<omega>. P (t ## \\<omega>))\n                           \\<partial>measure_pmf D)", "using E_inf_iterate[of \"indicator {x\\<in>space St. P x}\" s]"], ["proof (prove)\nusing this:\n  indicator {x \\<in> space St. P x}\n  \\<in> borel_measurable St \\<Longrightarrow>\n  E_inf s (indicator {x \\<in> space St. P x}) =\n  (\\<Sqinter>D\\<in>K s.\n      \\<integral>\\<^sup>+ t. E_inf t\n                              (\\<lambda>\\<omega>.\n                                  indicator {x \\<in> space St. P x}\n                                   (t ## \\<omega>))\n                         \\<partial>measure_pmf D)\n\ngoal (1 subgoal):\n 1. P_inf s P =\n    (\\<Sqinter>D\\<in>K s.\n        \\<integral>\\<^sup>+ t. P_inf t\n                                (\\<lambda>\\<omega>. P (t ## \\<omega>))\n                           \\<partial>measure_pmf D)", "by (auto simp: P_inf_eq_E_inf)"], ["proof (state)\nthis:\n  P_inf s P =\n  (\\<Sqinter>D\\<in>K s.\n      \\<integral>\\<^sup>+ t. P_inf t (\\<lambda>\\<omega>. P (t ## \\<omega>))\n                         \\<partial>measure_pmf D)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subsection \\<open>Finite MDPs\\<close>"], ["", "locale Finite_Markov_Decision_Process = Markov_Decision_Process K for K :: \"'s \\<Rightarrow> 's pmf set\" +\n  fixes S :: \"'s set\"\n  assumes S_not_empty: \"S \\<noteq> {}\"\n  assumes S_finite: \"finite S\"\n  assumes K_closed: \"\\<And>s. s \\<in> S \\<Longrightarrow> (\\<Union>D\\<in>K s. set_pmf D) \\<subseteq> S\"\n  assumes K_finite: \"\\<And>s. s \\<in> S \\<Longrightarrow> finite (K s)\"\nbegin"], ["", "lemma action_closed: \"s \\<in> S \\<Longrightarrow> cfg \\<in> cfg_on s \\<Longrightarrow> t \\<in> action cfg \\<Longrightarrow> t \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<in> S; cfg \\<in> cfg_on s;\n     t \\<in> set_pmf (action cfg)\\<rbrakk>\n    \\<Longrightarrow> t \\<in> S", "using cfg_onD_action[of cfg s] K_closed[of s]"], ["proof (prove)\nusing this:\n  cfg \\<in> cfg_on s \\<Longrightarrow> action cfg \\<in> K s\n  s \\<in> S \\<Longrightarrow> \\<Union> (set_pmf ` K s) \\<subseteq> S\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<in> S; cfg \\<in> cfg_on s;\n     t \\<in> set_pmf (action cfg)\\<rbrakk>\n    \\<Longrightarrow> t \\<in> S", "by auto"], ["", "lemma set_pmf_closed: \"s \\<in> S \\<Longrightarrow> D \\<in> K s \\<Longrightarrow> t \\<in> D \\<Longrightarrow> t \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<in> S; D \\<in> K s; t \\<in> set_pmf D\\<rbrakk>\n    \\<Longrightarrow> t \\<in> S", "using K_closed"], ["proof (prove)\nusing this:\n  ?s \\<in> S \\<Longrightarrow> \\<Union> (set_pmf ` K ?s) \\<subseteq> S\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<in> S; D \\<in> K s; t \\<in> set_pmf D\\<rbrakk>\n    \\<Longrightarrow> t \\<in> S", "by auto"], ["", "lemma Pi_closed: \"ct \\<in> Pi S K \\<Longrightarrow> s \\<in> S \\<Longrightarrow> t \\<in> ct s \\<Longrightarrow> t \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ct \\<in> Pi S K; s \\<in> S; t \\<in> set_pmf (ct s)\\<rbrakk>\n    \\<Longrightarrow> t \\<in> S", "using set_pmf_closed"], ["proof (prove)\nusing this:\n  \\<lbrakk>?s \\<in> S; ?D \\<in> K ?s; ?t \\<in> set_pmf ?D\\<rbrakk>\n  \\<Longrightarrow> ?t \\<in> S\n\ngoal (1 subgoal):\n 1. \\<lbrakk>ct \\<in> Pi S K; s \\<in> S; t \\<in> set_pmf (ct s)\\<rbrakk>\n    \\<Longrightarrow> t \\<in> S", "by auto"], ["", "lemma E_closed: \"s \\<in> S \\<Longrightarrow> (s, t) \\<in> E \\<Longrightarrow> t \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<in> S; (s, t) \\<in> E\\<rbrakk> \\<Longrightarrow> t \\<in> S", "using K_closed"], ["proof (prove)\nusing this:\n  ?s \\<in> S \\<Longrightarrow> \\<Union> (set_pmf ` K ?s) \\<subseteq> S\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<in> S; (s, t) \\<in> E\\<rbrakk> \\<Longrightarrow> t \\<in> S", "by (auto simp: E_def)"], ["", "lemma set_pmf_finite: \"s \\<in> S \\<Longrightarrow> D \\<in> K s \\<Longrightarrow> finite D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<in> S; D \\<in> K s\\<rbrakk>\n    \\<Longrightarrow> finite (set_pmf D)", "using K_closed"], ["proof (prove)\nusing this:\n  ?s \\<in> S \\<Longrightarrow> \\<Union> (set_pmf ` K ?s) \\<subseteq> S\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<in> S; D \\<in> K s\\<rbrakk>\n    \\<Longrightarrow> finite (set_pmf D)", "by (intro finite_subset[OF _ S_finite]) auto"], ["", "definition \"valid_cfg = (\\<Union>s\\<in>S. cfg_on s)\""], ["", "lemma valid_cfgI: \"s \\<in> S \\<Longrightarrow> cfg \\<in> cfg_on s \\<Longrightarrow> cfg \\<in> valid_cfg\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<in> S; cfg \\<in> cfg_on s\\<rbrakk>\n    \\<Longrightarrow> cfg \\<in> valid_cfg", "by (auto simp: valid_cfg_def)"], ["", "lemma valid_cfgD: \"cfg \\<in> valid_cfg \\<Longrightarrow> cfg \\<in> cfg_on (state cfg)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cfg \\<in> valid_cfg \\<Longrightarrow> cfg \\<in> cfg_on (state cfg)", "by (auto simp: valid_cfg_def)"], ["", "lemma\n  shows valid_cfg_state_in_S: \"cfg \\<in> valid_cfg \\<Longrightarrow> state cfg \\<in> S\"\n    and valid_cfg_action: \"cfg \\<in> valid_cfg \\<Longrightarrow> s \\<in> action cfg \\<Longrightarrow> s \\<in> S\"\n    and valid_cfg_cont: \"cfg \\<in> valid_cfg \\<Longrightarrow> s \\<in> action cfg \\<Longrightarrow> cont cfg s \\<in> valid_cfg\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (cfg \\<in> valid_cfg \\<Longrightarrow> state cfg \\<in> S) &&&\n    (\\<lbrakk>cfg \\<in> valid_cfg; s \\<in> set_pmf (action cfg)\\<rbrakk>\n     \\<Longrightarrow> s \\<in> S) &&&\n    (\\<lbrakk>cfg \\<in> valid_cfg; s \\<in> set_pmf (action cfg)\\<rbrakk>\n     \\<Longrightarrow> cont cfg s \\<in> valid_cfg)", "by (auto simp: valid_cfg_def intro!: bexI[of _ s] intro: action_closed)"], ["", "lemma valid_K_cfg[intro]: \"cfg \\<in> valid_cfg \\<Longrightarrow> cfg' \\<in> K_cfg cfg \\<Longrightarrow> cfg' \\<in> valid_cfg\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>cfg \\<in> valid_cfg; cfg' \\<in> set_pmf (K_cfg cfg)\\<rbrakk>\n    \\<Longrightarrow> cfg' \\<in> valid_cfg", "by (auto simp add: K_cfg_def valid_cfg_cont)"], ["", "definition \"simple ct = memoryless_on (\\<lambda>s. if s \\<in> S then ct s else arb_act s)\""], ["", "lemma simple_cfg_on[simp]: \"ct \\<in> Pi S K \\<Longrightarrow> simple ct s \\<in> cfg_on s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ct \\<in> Pi S K \\<Longrightarrow> simple ct s \\<in> cfg_on s", "by (auto simp: simple_def intro!: memoryless_on_cfg_onI)"], ["", "lemma simple_valid_cfg[simp]: \"ct \\<in> Pi S K \\<Longrightarrow> s \\<in> S \\<Longrightarrow> simple ct s \\<in> valid_cfg\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ct \\<in> Pi S K; s \\<in> S\\<rbrakk>\n    \\<Longrightarrow> simple ct s \\<in> valid_cfg", "by (auto intro: valid_cfgI)"], ["", "lemma cont_simple[simp]: \"s \\<in> S \\<Longrightarrow> t \\<in> set_pmf (ct s) \\<Longrightarrow> cont (simple ct s) t = simple ct t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<in> S; t \\<in> set_pmf (ct s)\\<rbrakk>\n    \\<Longrightarrow> cont (simple ct s) t = simple ct t", "by (simp add: simple_def)"], ["", "lemma state_simple[simp]: \"state (simple ct s) = s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. state (simple ct s) = s", "by (simp add: simple_def)"], ["", "lemma action_simple[simp]: \"s \\<in> S \\<Longrightarrow> action (simple ct s) = ct s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> S \\<Longrightarrow> action (simple ct s) = ct s", "by (simp add: simple_def)"], ["", "lemma simple_valid_cfg_iff: \"ct \\<in> Pi S K \\<Longrightarrow> simple ct s \\<in> valid_cfg \\<longleftrightarrow> s \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ct \\<in> Pi S K \\<Longrightarrow>\n    (simple ct s \\<in> valid_cfg) = (s \\<in> S)", "using cfg_onD_state[of \"simple ct s\"]"], ["proof (prove)\nusing this:\n  simple ct s \\<in> cfg_on ?s \\<Longrightarrow> state (simple ct s) = ?s\n\ngoal (1 subgoal):\n 1. ct \\<in> Pi S K \\<Longrightarrow>\n    (simple ct s \\<in> valid_cfg) = (s \\<in> S)", "by (auto simp add: valid_cfg_def intro!: bexI[of _ s])"], ["", "end"], ["", "end"]]}