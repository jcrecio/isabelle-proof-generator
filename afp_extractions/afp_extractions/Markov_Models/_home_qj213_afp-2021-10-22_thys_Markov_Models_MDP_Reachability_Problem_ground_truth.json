{"file_name": "/home/qj213/afp-2021-10-22/thys/Markov_Models/MDP_Reachability_Problem.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Markov_Models", "problem_names": ["lemma directed_towards_mono:\n  assumes \"s \\<in> directed_towards A F\" \"F \\<subseteq> G\" shows \"s \\<in> directed_towards A G\"", "lemma directed_eq_rtrancl: \"x \\<in> directed_towards A r \\<longleftrightarrow> (\\<exists>a\\<in>A. (x, a) \\<in> r\\<^sup>*)\"", "lemma directed_eq_rtrancl_Image: \"directed_towards A r = (r\\<^sup>*)\\<inverse> `` A\"", "lemma [measurable]:\n  \"S \\<in> sets (count_space UNIV)\" \"S1 \\<in> sets (count_space UNIV)\" \"S2 \\<in> sets (count_space UNIV)\"", "lemma v_eq: \"cfg \\<in> valid_cfg \\<Longrightarrow>\n    v cfg = emeasure (T cfg) {x\\<in>space St. (HLD S1 suntil HLD S2) (state cfg ## x)}\"", "lemma real_v: \"cfg \\<in> valid_cfg \\<Longrightarrow> enn2real (v cfg) = \\<P>(\\<omega> in T cfg. (HLD S1 suntil HLD S2) (state cfg ## \\<omega>))\"", "lemma v_le_1: \"cfg \\<in> valid_cfg \\<Longrightarrow> v cfg \\<le> 1\"", "lemma v_neq_Pinf[simp]: \"cfg \\<in> valid_cfg \\<Longrightarrow> v cfg \\<noteq> top\"", "lemma v_1_AE: \"cfg \\<in> valid_cfg \\<Longrightarrow> v cfg = 1 \\<longleftrightarrow> (AE \\<omega> in T cfg. (HLD S1 suntil HLD S2) (state cfg ## \\<omega>))\"", "lemma v_0_AE: \"cfg \\<in> valid_cfg \\<Longrightarrow> v cfg = 0 \\<longleftrightarrow> (AE x in T cfg. not (HLD S1 suntil HLD S2) (state cfg ## x))\"", "lemma v_S2[simp]: \"cfg \\<in> valid_cfg \\<Longrightarrow> state cfg \\<in> S2 \\<Longrightarrow> v cfg = 1\"", "lemma v_nS12[simp]: \"cfg \\<in> valid_cfg \\<Longrightarrow> state cfg \\<notin> S1 \\<Longrightarrow> state cfg \\<notin> S2 \\<Longrightarrow> v cfg = 0\"", "lemma v_nS[simp]: \"cfg \\<notin> valid_cfg \\<Longrightarrow> v cfg = undefined\"", "lemma v_S1:\n  assumes cfg[simp, intro]: \"cfg \\<in> valid_cfg\" and cfg_S1[simp]: \"state cfg \\<in> S1\"\n  shows \"v cfg = (\\<integral>\\<^sup>+s. v (cont cfg s) \\<partial>action cfg)\"", "lemma real_v_integrable:\n  \"integrable (action cfg) (\\<lambda>s. enn2real (v (cont cfg s)))\"", "lemma real_v_integral_eq:\n  assumes cfg[simp]: \"cfg \\<in> valid_cfg\"\n  shows \"enn2real (\\<integral>\\<^sup>+ s. v (cont cfg s) \\<partial>action cfg) = \\<integral> s. enn2real (v (cont cfg s)) \\<partial>action cfg\"", "lemma v_eq_0_coinduct[consumes 3, case_names valid nS2 cont]:\n  assumes *: \"P cfg\"\n  assumes valid: \"\\<And>cfg. P cfg \\<Longrightarrow> cfg \\<in> valid_cfg\"\n  assumes nS2: \"\\<And>cfg. P cfg \\<Longrightarrow> state cfg \\<notin> S2\"\n  assumes cont: \"\\<And>cfg cfg'. P cfg \\<Longrightarrow> state cfg \\<in> S1 \\<Longrightarrow> cfg' \\<in> K_cfg cfg \\<Longrightarrow> P cfg' \\<or> v cfg' = 0\"\n  shows \"v cfg = 0\"", "lemma p_eq_SUP_v: \"s \\<in> S \\<Longrightarrow> p s = \\<Squnion> (v ` cfg_on s)\"", "lemma v_le_p: \"cfg \\<in> valid_cfg \\<Longrightarrow> v cfg \\<le> p (state cfg)\"", "lemma p_eq_0_imp: \"cfg \\<in> valid_cfg \\<Longrightarrow> p (state cfg) = 0 \\<Longrightarrow> v cfg = 0\"", "lemma p_eq_0_iff: \"s \\<in> S \\<Longrightarrow> p s = 0 \\<longleftrightarrow> (\\<forall>cfg\\<in>cfg_on s. v cfg = 0)\"", "lemma p_le_1: \"s \\<in> S \\<Longrightarrow> p s \\<le> 1\"", "lemma p_undefined[simp]: \"s \\<notin> S \\<Longrightarrow> p s = undefined\"", "lemma p_not_inf[simp]: \"s \\<in> S \\<Longrightarrow> p s \\<noteq> top\"", "lemma p_S1: \"s \\<in> S1 \\<Longrightarrow> p s = (\\<Squnion>D\\<in>K s. \\<integral>\\<^sup>+ t. p t \\<partial>measure_pmf D)\"", "lemma p_S2[simp]: \"s \\<in> S2 \\<Longrightarrow> p s = 1\"", "lemma p_nS12: \"s \\<in> S \\<Longrightarrow> s \\<notin> S1 \\<Longrightarrow> s \\<notin> S2 \\<Longrightarrow> p s = 0\"", "lemma p_pos:\n  assumes \"(s, t) \\<in> (SIGMA s:S1. \\<Union>D\\<in>K s. set_pmf D)\\<^sup>*\" \"t \\<in> S2\" shows \"0 < p s\"", "lemma F_sup_cong: \"(\\<And>s. s \\<in> S \\<Longrightarrow> f s = g s) \\<Longrightarrow> F_sup f s = F_sup g s\"", "lemma continuous_F_sup: \"sup_continuous F_sup\"", "lemma mono_F_sup: \"mono F_sup\"", "lemma lfp_F_sup_iterate: \"lfp F_sup = (SUP i. (F_sup ^^ i) (\\<lambda>x\\<in>S. 0))\"", "lemma p_eq_lfp_F_sup: \"p = lfp F_sup\"", "lemma S\\<^sub>e: \"S\\<^sub>e \\<subseteq> S\"", "lemma v_S\\<^sub>e: \"cfg \\<in> valid_cfg \\<Longrightarrow> state cfg \\<in> S\\<^sub>e \\<Longrightarrow> v cfg = 0\"", "lemma S\\<^sub>e_nS2: \"S\\<^sub>e \\<inter> S2 = {}\"", "lemma S\\<^sub>e_E1: \"s \\<in> S\\<^sub>e \\<inter> S1 \\<Longrightarrow> (s, t) \\<in> E \\<Longrightarrow> t \\<in> S\\<^sub>e\"", "lemma S\\<^sub>e_E2: \"s \\<in> S1 \\<Longrightarrow> (\\<And>t. (s, t) \\<in> E \\<Longrightarrow> t \\<in> S\\<^sub>e) \\<Longrightarrow> s \\<in> S\\<^sub>e\"", "lemma S\\<^sub>e_E_iff: \"s \\<in> S1 \\<Longrightarrow> s \\<in> S\\<^sub>e \\<longleftrightarrow> (\\<forall>t. (s, t) \\<in> E \\<longrightarrow> t \\<in> S\\<^sub>e)\"", "lemma S\\<^sub>r: \"S\\<^sub>r \\<subseteq> S\"", "lemma S\\<^sub>r_S1: \"S\\<^sub>r \\<subseteq> S1\"", "lemma S\\<^sub>r_eq: \"S\\<^sub>r = S1 - S\\<^sub>e\"", "lemma v_neq_0_imp: \"cfg \\<in> valid_cfg \\<Longrightarrow> v cfg \\<noteq> 0 \\<Longrightarrow> state cfg \\<in> S\\<^sub>r \\<union> S2\"", "lemma valid_cfg_action_in_K: \"cfg \\<in> valid_cfg \\<Longrightarrow> action cfg \\<in> K (state cfg)\"", "lemma K_cfg_E: \"cfg \\<in> valid_cfg \\<Longrightarrow> cfg' \\<in> K_cfg cfg \\<Longrightarrow> (state cfg, state cfg') \\<in> E\"", "lemma S\\<^sub>r_directed_towards_S2:\n  assumes s: \"s \\<in> S\\<^sub>r\"\n  shows \"s \\<in> directed_towards S2 {(s, t) | s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E}\" (is \"s \\<in> ?D\")", "lemma S\\<^sub>r_nS2: \"s \\<in> S\\<^sub>r \\<Longrightarrow> s \\<notin> S2\"", "lemma properD1: \"proper ct \\<Longrightarrow> ct \\<in> Pi\\<^sub>E S K\"", "lemma proper_eq:\n  assumes ct[simp, intro]: \"ct \\<in> Pi\\<^sub>E S K\"\n  shows \"proper ct \\<longleftrightarrow> S\\<^sub>r \\<subseteq> directed_towards S2 (SIGMA s:S\\<^sub>r. ct s)\"\n    (is \"_ \\<longleftrightarrow> _ \\<subseteq> ?D\")", "lemma exists_proper:\n  obtains ct where \"proper ct\"", "lemma exists_l_desc:\n  assumes ct: \"proper ct\"\n  shows \"\\<exists>l\\<in>S\\<^sub>r \\<rightarrow> S\\<^sub>r \\<union> S2. \\<forall>s\\<in>S\\<^sub>r. l_desc S\\<^sub>r ct l s\"", "lemma F_v_memoryless:\n  obtains ct where \"ct \\<in> Pi\\<^sub>E S K\" \"v\\<circ>simple ct = F_sup (v\\<circ>simple ct)\"", "lemma p_v_memoryless:\n  obtains ct where \"ct \\<in> Pi\\<^sub>E S K\" \"p = v\\<circ>simple ct\"", "lemma n_eq_INF_v: \"s \\<in> S \\<Longrightarrow> n s = (\\<Sqinter>cfg\\<in>cfg_on s. v cfg)\"", "lemma n_le_v: \"s \\<in> S \\<Longrightarrow> cfg \\<in> cfg_on s \\<Longrightarrow> n s \\<le> v cfg\"", "lemma n_eq_1_imp: \"s \\<in> S \\<Longrightarrow> cfg \\<in> cfg_on s \\<Longrightarrow> n s = 1 \\<Longrightarrow> v cfg = 1\"", "lemma n_eq_1_iff: \"s \\<in> S \\<Longrightarrow> n s = 1 \\<longleftrightarrow> (\\<forall>cfg\\<in>cfg_on s. v cfg = 1)\"", "lemma n_le_1: \"s \\<in> S \\<Longrightarrow> n s \\<le> 1\"", "lemma n_undefined[simp]: \"s \\<notin> S \\<Longrightarrow> n s = undefined\"", "lemma n_eq_0: \"s \\<in> S \\<Longrightarrow> cfg \\<in> cfg_on s \\<Longrightarrow> v cfg = 0 \\<Longrightarrow> n s = 0\"", "lemma n_not_inf[simp]: \"s \\<in> S \\<Longrightarrow> n s \\<noteq> top\"", "lemma n_S1: \"s \\<in> S1 \\<Longrightarrow> n s = (\\<Sqinter>D\\<in>K s. \\<integral>\\<^sup>+ t. n t \\<partial>measure_pmf D)\"", "lemma n_S2[simp]: \"s \\<in> S2 \\<Longrightarrow> n s = 1\"", "lemma n_nS12: \"s \\<in> S \\<Longrightarrow> s \\<notin> S1 \\<Longrightarrow> s \\<notin> S2 \\<Longrightarrow> n s = 0\"", "lemma n_pos:\n  assumes \"P s\" \"s \\<in> S1\" \"wf R\"\n  assumes cont: \"\\<And>s D. P s \\<Longrightarrow> s \\<in> S1 \\<Longrightarrow> D \\<in> K s \\<Longrightarrow> \\<exists>w\\<in>D. ((w, s) \\<in> R \\<and> w \\<in> S1 \\<and> P w) \\<or> 0 < n w\"\n  shows \"0 < n s\"", "lemma F_inf_n: \"F_inf n = n\"", "lemma F_inf_nS[simp]: \"s \\<notin> S \\<Longrightarrow> F_inf f s = undefined\"", "lemma mono_F_inf: \"mono F_inf\"", "lemma S1_nS2: \"s \\<in> S1 \\<Longrightarrow> s \\<notin> S2\"", "lemma n_eq_lfp_F_inf: \"n = lfp F_inf\"", "lemma real_n: \"s \\<in> S \\<Longrightarrow> ennreal (enn2real (n s)) = n s\"", "lemma real_p: \"s \\<in> S \\<Longrightarrow> ennreal (enn2real (p s)) = p s\"", "lemma p_ub:\n  fixes x\n  assumes \"s \\<in> S\"\n  assumes solution: \"\\<And>s D. s \\<in> S1 \\<Longrightarrow> D \\<in> K s \\<Longrightarrow> (\\<Sum>t\\<in>S. pmf D t * x t) \\<le> x s\"\n  assumes solution_0: \"\\<And>s. s \\<in> S \\<Longrightarrow> p s = 0 \\<Longrightarrow> x s = 0\"\n  assumes solution_S2: \"\\<And>s. s \\<in> S2 \\<Longrightarrow> x s = 1\"\n  shows \"enn2real (p s) \\<le> x s\" (is \"?y s \\<le> _\")", "lemma n_lb:\n  fixes x\n  assumes \"s \\<in> S\"\n  assumes solution: \"\\<And>s D. s \\<in> S1 \\<Longrightarrow> D \\<in> K s \\<Longrightarrow> x s \\<le> (\\<Sum>t\\<in>S. pmf D t * x t)\"\n  assumes solution_n0: \"\\<And>s. s \\<in> S \\<Longrightarrow> n s = 0 \\<Longrightarrow> x s = 0\"\n  assumes solution_S2: \"\\<And>s. s \\<in> S2 \\<Longrightarrow> x s = 1\"\n  shows \"x s \\<le> enn2real (n s)\" (is \"_ \\<le> ?y s\")"], "translations": [["", "lemma directed_towards_mono:\n  assumes \"s \\<in> directed_towards A F\" \"F \\<subseteq> G\" shows \"s \\<in> directed_towards A G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> directed_towards A G", "using assms"], ["proof (prove)\nusing this:\n  s \\<in> directed_towards A F\n  F \\<subseteq> G\n\ngoal (1 subgoal):\n 1. s \\<in> directed_towards A G", "by induct (auto intro: directed_towards.intros)"], ["", "lemma directed_eq_rtrancl: \"x \\<in> directed_towards A r \\<longleftrightarrow> (\\<exists>a\\<in>A. (x, a) \\<in> r\\<^sup>*)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in> directed_towards A r) =\n    (\\<exists>a\\<in>A. (x, a) \\<in> r\\<^sup>*)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<in> directed_towards A r \\<Longrightarrow>\n    \\<exists>a\\<in>A. (x, a) \\<in> r\\<^sup>*\n 2. \\<exists>a\\<in>A. (x, a) \\<in> r\\<^sup>* \\<Longrightarrow>\n    x \\<in> directed_towards A r", "assume \"x \\<in> directed_towards A r\""], ["proof (state)\nthis:\n  x \\<in> directed_towards A r\n\ngoal (2 subgoals):\n 1. x \\<in> directed_towards A r \\<Longrightarrow>\n    \\<exists>a\\<in>A. (x, a) \\<in> r\\<^sup>*\n 2. \\<exists>a\\<in>A. (x, a) \\<in> r\\<^sup>* \\<Longrightarrow>\n    x \\<in> directed_towards A r", "then"], ["proof (chain)\npicking this:\n  x \\<in> directed_towards A r", "show \"\\<exists>a\\<in>A. (x, a) \\<in> r\\<^sup>*\""], ["proof (prove)\nusing this:\n  x \\<in> directed_towards A r\n\ngoal (1 subgoal):\n 1. \\<exists>a\\<in>A. (x, a) \\<in> r\\<^sup>*", "by induction (auto intro: converse_rtrancl_into_rtrancl)"], ["proof (state)\nthis:\n  \\<exists>a\\<in>A. (x, a) \\<in> r\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<exists>a\\<in>A. (x, a) \\<in> r\\<^sup>* \\<Longrightarrow>\n    x \\<in> directed_towards A r", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>a\\<in>A. (x, a) \\<in> r\\<^sup>* \\<Longrightarrow>\n    x \\<in> directed_towards A r", "assume \"\\<exists>a\\<in>A. (x, a) \\<in> r\\<^sup>*\""], ["proof (state)\nthis:\n  \\<exists>a\\<in>A. (x, a) \\<in> r\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<exists>a\\<in>A. (x, a) \\<in> r\\<^sup>* \\<Longrightarrow>\n    x \\<in> directed_towards A r", "then"], ["proof (chain)\npicking this:\n  \\<exists>a\\<in>A. (x, a) \\<in> r\\<^sup>*", "obtain a where \"(x, a) \\<in> r\\<^sup>*\" \"a \\<in> A\""], ["proof (prove)\nusing this:\n  \\<exists>a\\<in>A. (x, a) \\<in> r\\<^sup>*\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>(x, a) \\<in> r\\<^sup>*; a \\<in> A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (x, a) \\<in> r\\<^sup>*\n  a \\<in> A\n\ngoal (1 subgoal):\n 1. \\<exists>a\\<in>A. (x, a) \\<in> r\\<^sup>* \\<Longrightarrow>\n    x \\<in> directed_towards A r", "then"], ["proof (chain)\npicking this:\n  (x, a) \\<in> r\\<^sup>*\n  a \\<in> A", "show \"x \\<in> directed_towards A r\""], ["proof (prove)\nusing this:\n  (x, a) \\<in> r\\<^sup>*\n  a \\<in> A\n\ngoal (1 subgoal):\n 1. x \\<in> directed_towards A r", "by (induction rule: converse_rtrancl_induct)\n       (auto intro: directed_towards.start directed_towards.step)"], ["proof (state)\nthis:\n  x \\<in> directed_towards A r\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma directed_eq_rtrancl_Image: \"directed_towards A r = (r\\<^sup>*)\\<inverse> `` A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. directed_towards A r = (r\\<^sup>*)\\<inverse> `` A", "unfolding set_eq_iff directed_eq_rtrancl Image_iff"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       (\\<exists>a\\<in>A. (x, a) \\<in> r\\<^sup>*) =\n       (\\<exists>xa\\<in>A. (xa, x) \\<in> (r\\<^sup>*)\\<inverse>)", "by simp"], ["", "locale Reachability_Problem = Finite_Markov_Decision_Process K S for K :: \"'s \\<Rightarrow> 's pmf set\" and S +\n  fixes S1 S2 :: \"'s set\"\n  assumes S1: \"S1 \\<subseteq> S\" and S2: \"S2 \\<subseteq> S\" and S1_S2: \"S1 \\<inter> S2 = {}\"\nbegin"], ["", "lemma [measurable]:\n  \"S \\<in> sets (count_space UNIV)\" \"S1 \\<in> sets (count_space UNIV)\" \"S2 \\<in> sets (count_space UNIV)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S \\<in> sets (count_space UNIV) &&&\n    S1 \\<in> sets (count_space UNIV) &&& S2 \\<in> sets (count_space UNIV)", "by auto"], ["", "definition\n  \"v = (\\<lambda>cfg\\<in>valid_cfg. emeasure (T cfg) {x\\<in>space St. (HLD S1 suntil HLD S2) (state cfg ## x)})\""], ["", "lemma v_eq: \"cfg \\<in> valid_cfg \\<Longrightarrow>\n    v cfg = emeasure (T cfg) {x\\<in>space St. (HLD S1 suntil HLD S2) (state cfg ## x)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cfg \\<in> valid_cfg \\<Longrightarrow>\n    v cfg =\n    emeasure (T cfg)\n     {x \\<in> space St. (HLD S1 suntil HLD S2) (state cfg ## x)}", "by (auto simp add: v_def)"], ["", "lemma real_v: \"cfg \\<in> valid_cfg \\<Longrightarrow> enn2real (v cfg) = \\<P>(\\<omega> in T cfg. (HLD S1 suntil HLD S2) (state cfg ## \\<omega>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cfg \\<in> valid_cfg \\<Longrightarrow>\n    enn2real (v cfg) =\n    T.prob cfg\n     {\\<omega> \\<in> space (T cfg).\n      (HLD S1 suntil HLD S2) (state cfg ## \\<omega>)}", "by (auto simp add: v_def T.emeasure_eq_measure)"], ["", "lemma v_le_1: \"cfg \\<in> valid_cfg \\<Longrightarrow> v cfg \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cfg \\<in> valid_cfg \\<Longrightarrow> v cfg \\<le> 1", "by (auto simp add: v_def T.emeasure_eq_measure)"], ["", "lemma v_neq_Pinf[simp]: \"cfg \\<in> valid_cfg \\<Longrightarrow> v cfg \\<noteq> top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cfg \\<in> valid_cfg \\<Longrightarrow> v cfg \\<noteq> \\<top>", "by (auto simp add: v_def)"], ["", "lemma v_1_AE: \"cfg \\<in> valid_cfg \\<Longrightarrow> v cfg = 1 \\<longleftrightarrow> (AE \\<omega> in T cfg. (HLD S1 suntil HLD S2) (state cfg ## \\<omega>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cfg \\<in> valid_cfg \\<Longrightarrow>\n    (v cfg = 1) =\n    (AE \\<omega> in T cfg. (HLD S1 suntil HLD S2) (state cfg ## \\<omega>))", "unfolding v_eq T.emeasure_eq_measure ennreal_eq_1 space_T[symmetric, of cfg]"], ["proof (prove)\ngoal (1 subgoal):\n 1. cfg \\<in> valid_cfg \\<Longrightarrow>\n    (T.prob cfg\n      {x \\<in> space (T cfg). (HLD S1 suntil HLD S2) (state cfg ## x)} =\n     1) =\n    (AE \\<omega> in T cfg. (HLD S1 suntil HLD S2) (state cfg ## \\<omega>))", "by (rule T.prob_Collect_eq_1) simp"], ["", "lemma v_0_AE: \"cfg \\<in> valid_cfg \\<Longrightarrow> v cfg = 0 \\<longleftrightarrow> (AE x in T cfg. not (HLD S1 suntil HLD S2) (state cfg ## x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cfg \\<in> valid_cfg \\<Longrightarrow>\n    (v cfg = 0) =\n    (AE x in T cfg. \\<not> (HLD S1 suntil HLD S2) (state cfg ## x))", "unfolding v_eq T.emeasure_eq_measure space_T[symmetric, of cfg] ennreal_eq_zero_iff[OF measure_nonneg]"], ["proof (prove)\ngoal (1 subgoal):\n 1. cfg \\<in> valid_cfg \\<Longrightarrow>\n    (T.prob cfg\n      {x \\<in> space (T cfg). (HLD S1 suntil HLD S2) (state cfg ## x)} =\n     0) =\n    (AE x in T cfg. \\<not> (HLD S1 suntil HLD S2) (state cfg ## x))", "by (rule T.prob_Collect_eq_0) simp"], ["", "lemma v_S2[simp]: \"cfg \\<in> valid_cfg \\<Longrightarrow> state cfg \\<in> S2 \\<Longrightarrow> v cfg = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>cfg \\<in> valid_cfg; state cfg \\<in> S2\\<rbrakk>\n    \\<Longrightarrow> v cfg = 1", "using S2"], ["proof (prove)\nusing this:\n  S2 \\<subseteq> S\n\ngoal (1 subgoal):\n 1. \\<lbrakk>cfg \\<in> valid_cfg; state cfg \\<in> S2\\<rbrakk>\n    \\<Longrightarrow> v cfg = 1", "by (subst v_1_AE) (auto simp: suntil_Stream)"], ["", "lemma v_nS12[simp]: \"cfg \\<in> valid_cfg \\<Longrightarrow> state cfg \\<notin> S1 \\<Longrightarrow> state cfg \\<notin> S2 \\<Longrightarrow> v cfg = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>cfg \\<in> valid_cfg; state cfg \\<notin> S1;\n     state cfg \\<notin> S2\\<rbrakk>\n    \\<Longrightarrow> v cfg = 0", "by (subst v_0_AE) (auto simp: suntil_Stream)"], ["", "lemma v_nS[simp]: \"cfg \\<notin> valid_cfg \\<Longrightarrow> v cfg = undefined\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cfg \\<notin> valid_cfg \\<Longrightarrow> v cfg = undefined", "by (auto simp add: v_def)"], ["", "lemma v_S1:\n  assumes cfg[simp, intro]: \"cfg \\<in> valid_cfg\" and cfg_S1[simp]: \"state cfg \\<in> S1\"\n  shows \"v cfg = (\\<integral>\\<^sup>+s. v (cont cfg s) \\<partial>action cfg)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v cfg =\n    \\<integral>\\<^sup>+ s. v (cont cfg s) \\<partial>measure_pmf (action cfg)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. v cfg =\n    \\<integral>\\<^sup>+ s. v (cont cfg s) \\<partial>measure_pmf (action cfg)", "have [simp]: \"state cfg \\<notin> S2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. state cfg \\<notin> S2", "using cfg_S1 S1_S2 S1"], ["proof (prove)\nusing this:\n  state cfg \\<in> S1\n  S1 \\<inter> S2 = {}\n  S1 \\<subseteq> S\n\ngoal (1 subgoal):\n 1. state cfg \\<notin> S2", "by blast"], ["proof (state)\nthis:\n  state cfg \\<notin> S2\n\ngoal (1 subgoal):\n 1. v cfg =\n    \\<integral>\\<^sup>+ s. v (cont cfg s) \\<partial>measure_pmf (action cfg)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. v cfg =\n    \\<integral>\\<^sup>+ s. v (cont cfg s) \\<partial>measure_pmf (action cfg)", "by (auto simp: v_eq emeasure_Collect_T[of _ cfg] K_cfg_def map_pmf_rep_eq nn_integral_distr\n                   AE_measure_pmf_iff suntil_Stream[of _ _ \"state cfg\"]\n                   valid_cfg_cont\n             intro!: nn_integral_cong_AE)"], ["proof (state)\nthis:\n  v cfg =\n  \\<integral>\\<^sup>+ s. v (cont cfg s) \\<partial>measure_pmf (action cfg)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma real_v_integrable:\n  \"integrable (action cfg) (\\<lambda>s. enn2real (v (cont cfg s)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable (measure_pmf (action cfg))\n     (\\<lambda>s. enn2real (v (cont cfg s)))", "by (rule measure_pmf.integrable_const_bound[where B=\"max 1 (enn2real undefined)\"])\n     (auto simp add: v_def measure_def[symmetric] le_max_iff_disj)"], ["", "lemma real_v_integral_eq:\n  assumes cfg[simp]: \"cfg \\<in> valid_cfg\"\n  shows \"enn2real (\\<integral>\\<^sup>+ s. v (cont cfg s) \\<partial>action cfg) = \\<integral> s. enn2real (v (cont cfg s)) \\<partial>action cfg\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enn2real\n     (\\<integral>\\<^sup>+ s. v (cont cfg s)\n                         \\<partial>measure_pmf (action cfg)) =\n    measure_pmf.expectation (action cfg)\n     (\\<lambda>s. enn2real (v (cont cfg s)))", "by (subst integral_eq_nn_integral)\n    (auto simp: AE_measure_pmf_iff v_eq T.emeasure_eq_measure valid_cfg_cont\n          intro!: arg_cong[where f=enn2real] nn_integral_cong_AE)"], ["", "lemma v_eq_0_coinduct[consumes 3, case_names valid nS2 cont]:\n  assumes *: \"P cfg\"\n  assumes valid: \"\\<And>cfg. P cfg \\<Longrightarrow> cfg \\<in> valid_cfg\"\n  assumes nS2: \"\\<And>cfg. P cfg \\<Longrightarrow> state cfg \\<notin> S2\"\n  assumes cont: \"\\<And>cfg cfg'. P cfg \\<Longrightarrow> state cfg \\<in> S1 \\<Longrightarrow> cfg' \\<in> K_cfg cfg \\<Longrightarrow> P cfg' \\<or> v cfg' = 0\"\n  shows \"v cfg = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v cfg = 0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. v cfg = 0", "from * valid[OF *]"], ["proof (chain)\npicking this:\n  P cfg\n  cfg \\<in> valid_cfg", "have \"AE x in MC_syntax.T K_cfg cfg. \\<not> (HLD S1 suntil HLD S2) (state cfg ## smap state x)\""], ["proof (prove)\nusing this:\n  P cfg\n  cfg \\<in> valid_cfg\n\ngoal (1 subgoal):\n 1. AE x in MC.T\n             cfg. \\<not> (HLD S1 suntil HLD S2) (state cfg ## smap state x)", "unfolding stream.map[symmetric] suntil_smap hld_smap'"], ["proof (prove)\nusing this:\n  P cfg\n  cfg \\<in> valid_cfg\n\ngoal (1 subgoal):\n 1. AE x in MC.T\n             cfg. \\<not> (HLD (state -` S1) suntil HLD (state -` S2))\n                          (cfg ## x)", "proof (coinduction arbitrary: cfg rule: MC.AE_not_suntil_coinduct_strong)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>cfg.\n       \\<lbrakk>P cfg; cfg \\<in> valid_cfg\\<rbrakk>\n       \\<Longrightarrow> cfg \\<notin> state -` S2\n 2. \\<And>t cfg.\n       \\<lbrakk>P cfg; cfg \\<in> valid_cfg; cfg \\<in> state -` S1;\n        t \\<in> set_pmf (K_cfg cfg)\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>cfg.\n                             t = cfg \\<and>\n                             P cfg \\<and> cfg \\<in> valid_cfg) \\<or>\n                         (AE x in MC.T\n                                   t. \\<not> (HLD (state -` S1) suntil\n        HLD (state -` S2))\n        (t ## x))", "case (\\<psi> cfg)"], ["proof (state)\nthis:\n  P cfg\n  cfg \\<in> valid_cfg\n\ngoal (2 subgoals):\n 1. \\<And>cfg.\n       \\<lbrakk>P cfg; cfg \\<in> valid_cfg\\<rbrakk>\n       \\<Longrightarrow> cfg \\<notin> state -` S2\n 2. \\<And>t cfg.\n       \\<lbrakk>P cfg; cfg \\<in> valid_cfg; cfg \\<in> state -` S1;\n        t \\<in> set_pmf (K_cfg cfg)\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>cfg.\n                             t = cfg \\<and>\n                             P cfg \\<and> cfg \\<in> valid_cfg) \\<or>\n                         (AE x in MC.T\n                                   t. \\<not> (HLD (state -` S1) suntil\n        HLD (state -` S2))\n        (t ## x))", "then"], ["proof (chain)\npicking this:\n  P cfg\n  cfg \\<in> valid_cfg", "show ?case"], ["proof (prove)\nusing this:\n  P cfg\n  cfg \\<in> valid_cfg\n\ngoal (1 subgoal):\n 1. cfg \\<notin> state -` S2", "by (auto simp del: cfg_onD_state dest: nS2)"], ["proof (state)\nthis:\n  cfg \\<notin> state -` S2\n\ngoal (1 subgoal):\n 1. \\<And>t cfg.\n       \\<lbrakk>P cfg; cfg \\<in> valid_cfg; cfg \\<in> state -` S1;\n        t \\<in> set_pmf (K_cfg cfg)\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>cfg.\n                             t = cfg \\<and>\n                             P cfg \\<and> cfg \\<in> valid_cfg) \\<or>\n                         (AE x in MC.T\n                                   t. \\<not> (HLD (state -` S1) suntil\n        HLD (state -` S2))\n        (t ## x))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t cfg.\n       \\<lbrakk>P cfg; cfg \\<in> valid_cfg; cfg \\<in> state -` S1;\n        t \\<in> set_pmf (K_cfg cfg)\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>cfg.\n                             t = cfg \\<and>\n                             P cfg \\<and> cfg \\<in> valid_cfg) \\<or>\n                         (AE x in MC.T\n                                   t. \\<not> (HLD (state -` S1) suntil\n        HLD (state -` S2))\n        (t ## x))", "case (\\<phi> cfg' cfg)"], ["proof (state)\nthis:\n  P cfg\n  cfg \\<in> valid_cfg\n  cfg \\<in> state -` S1\n  cfg' \\<in> set_pmf (K_cfg cfg)\n\ngoal (1 subgoal):\n 1. \\<And>t cfg.\n       \\<lbrakk>P cfg; cfg \\<in> valid_cfg; cfg \\<in> state -` S1;\n        t \\<in> set_pmf (K_cfg cfg)\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>cfg.\n                             t = cfg \\<and>\n                             P cfg \\<and> cfg \\<in> valid_cfg) \\<or>\n                         (AE x in MC.T\n                                   t. \\<not> (HLD (state -` S1) suntil\n        HLD (state -` S2))\n        (t ## x))", "then"], ["proof (chain)\npicking this:\n  P cfg\n  cfg \\<in> valid_cfg\n  cfg \\<in> state -` S1\n  cfg' \\<in> set_pmf (K_cfg cfg)", "have *: \"P cfg\" \"state cfg \\<in> S1\" \"cfg' \\<in> K_cfg cfg\" and [simp, intro]: \"cfg \\<in> valid_cfg\""], ["proof (prove)\nusing this:\n  P cfg\n  cfg \\<in> valid_cfg\n  cfg \\<in> state -` S1\n  cfg' \\<in> set_pmf (K_cfg cfg)\n\ngoal (1 subgoal):\n 1. (P cfg &&& state cfg \\<in> S1 &&& cfg' \\<in> set_pmf (K_cfg cfg)) &&&\n    cfg \\<in> valid_cfg", "by auto"], ["proof (state)\nthis:\n  P cfg\n  state cfg \\<in> S1\n  cfg' \\<in> set_pmf (K_cfg cfg)\n  cfg \\<in> valid_cfg\n\ngoal (1 subgoal):\n 1. \\<And>t cfg.\n       \\<lbrakk>P cfg; cfg \\<in> valid_cfg; cfg \\<in> state -` S1;\n        t \\<in> set_pmf (K_cfg cfg)\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>cfg.\n                             t = cfg \\<and>\n                             P cfg \\<and> cfg \\<in> valid_cfg) \\<or>\n                         (AE x in MC.T\n                                   t. \\<not> (HLD (state -` S1) suntil\n        HLD (state -` S2))\n        (t ## x))", "with cont[OF *]"], ["proof (chain)\npicking this:\n  P cfg' \\<or> v cfg' = 0\n  P cfg\n  state cfg \\<in> S1\n  cfg' \\<in> set_pmf (K_cfg cfg)\n  cfg \\<in> valid_cfg", "show ?case"], ["proof (prove)\nusing this:\n  P cfg' \\<or> v cfg' = 0\n  P cfg\n  state cfg \\<in> S1\n  cfg' \\<in> set_pmf (K_cfg cfg)\n  cfg \\<in> valid_cfg\n\ngoal (1 subgoal):\n 1. (\\<exists>cfg. cfg' = cfg \\<and> P cfg \\<and> cfg \\<in> valid_cfg) \\<or>\n    (AE x in MC.T\n              cfg'. \\<not> (HLD (state -` S1) suntil HLD (state -` S2))\n                            (cfg' ## x))", "by (subst (asm) v_0_AE)\n         (auto simp: suntil_Stream T_def AE_distr_iff suntil_smap hld_smap' cong del: AE_cong)"], ["proof (state)\nthis:\n  (\\<exists>cfg. cfg' = cfg \\<and> P cfg \\<and> cfg \\<in> valid_cfg) \\<or>\n  (AE x in MC.T\n            cfg'. \\<not> (HLD (state -` S1) suntil HLD (state -` S2))\n                          (cfg' ## x))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  AE x in MC.T\n           cfg. \\<not> (HLD S1 suntil HLD S2) (state cfg ## smap state x)\n\ngoal (1 subgoal):\n 1. v cfg = 0", "then"], ["proof (chain)\npicking this:\n  AE x in MC.T\n           cfg. \\<not> (HLD S1 suntil HLD S2) (state cfg ## smap state x)", "have \"AE \\<omega> in T cfg. \\<not> (HLD S1 suntil HLD S2) (state cfg ## \\<omega>)\""], ["proof (prove)\nusing this:\n  AE x in MC.T\n           cfg. \\<not> (HLD S1 suntil HLD S2) (state cfg ## smap state x)\n\ngoal (1 subgoal):\n 1. AE \\<omega> in T cfg. \\<not> (HLD S1 suntil HLD S2)\n                                  (state cfg ## \\<omega>)", "unfolding T_def"], ["proof (prove)\nusing this:\n  AE x in MC.T\n           cfg. \\<not> (HLD S1 suntil HLD S2) (state cfg ## smap state x)\n\ngoal (1 subgoal):\n 1. AE \\<omega> in distr (MC.T cfg) St\n                    (smap\n                      state). \\<not> (HLD S1 suntil HLD S2)\n(state cfg ## \\<omega>)", "by (subst AE_distr_iff) simp_all"], ["proof (state)\nthis:\n  AE \\<omega> in T cfg. \\<not> (HLD S1 suntil HLD S2)\n                                (state cfg ## \\<omega>)\n\ngoal (1 subgoal):\n 1. v cfg = 0", "with valid[OF *]"], ["proof (chain)\npicking this:\n  cfg \\<in> valid_cfg\n  AE \\<omega> in T cfg. \\<not> (HLD S1 suntil HLD S2)\n                                (state cfg ## \\<omega>)", "show ?thesis"], ["proof (prove)\nusing this:\n  cfg \\<in> valid_cfg\n  AE \\<omega> in T cfg. \\<not> (HLD S1 suntil HLD S2)\n                                (state cfg ## \\<omega>)\n\ngoal (1 subgoal):\n 1. v cfg = 0", "by (simp add: v_0_AE)"], ["proof (state)\nthis:\n  v cfg = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "definition \"p = (\\<lambda>s\\<in>S. P_sup s (\\<lambda>\\<omega>. (HLD S1 suntil HLD S2) (s ## \\<omega>)))\""], ["", "lemma p_eq_SUP_v: \"s \\<in> S \\<Longrightarrow> p s = \\<Squnion> (v ` cfg_on s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> S \\<Longrightarrow> p s = \\<Squnion> (v ` cfg_on s)", "by (auto simp add: p_def v_def P_sup_def T.emeasure_eq_measure intro: valid_cfgI intro!: SUP_cong cong: SUP_cong_simp)"], ["", "lemma v_le_p: \"cfg \\<in> valid_cfg \\<Longrightarrow> v cfg \\<le> p (state cfg)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cfg \\<in> valid_cfg \\<Longrightarrow> v cfg \\<le> p (state cfg)", "by (subst p_eq_SUP_v) (auto intro!: SUP_upper dest: valid_cfgD valid_cfg_state_in_S)"], ["", "lemma p_eq_0_imp: \"cfg \\<in> valid_cfg \\<Longrightarrow> p (state cfg) = 0 \\<Longrightarrow> v cfg = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>cfg \\<in> valid_cfg; p (state cfg) = 0\\<rbrakk>\n    \\<Longrightarrow> v cfg = 0", "using v_le_p[of cfg]"], ["proof (prove)\nusing this:\n  cfg \\<in> valid_cfg \\<Longrightarrow> v cfg \\<le> p (state cfg)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>cfg \\<in> valid_cfg; p (state cfg) = 0\\<rbrakk>\n    \\<Longrightarrow> v cfg = 0", "by (auto intro: antisym)"], ["", "lemma p_eq_0_iff: \"s \\<in> S \\<Longrightarrow> p s = 0 \\<longleftrightarrow> (\\<forall>cfg\\<in>cfg_on s. v cfg = 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> S \\<Longrightarrow>\n    (p s = 0) = (\\<forall>cfg\\<in>cfg_on s. v cfg = 0)", "unfolding p_eq_SUP_v"], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> S \\<Longrightarrow>\n    (\\<Squnion> (v ` cfg_on s) = 0) = (\\<forall>cfg\\<in>cfg_on s. v cfg = 0)", "by (subst SUP_eq_iff) auto"], ["", "lemma p_le_1: \"s \\<in> S \\<Longrightarrow> p s \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> S \\<Longrightarrow> p s \\<le> 1", "by (auto simp: p_eq_SUP_v intro!: SUP_least v_le_1 intro: valid_cfgI)"], ["", "lemma p_undefined[simp]: \"s \\<notin> S \\<Longrightarrow> p s = undefined\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<notin> S \\<Longrightarrow> p s = undefined", "by (simp add: p_def)"], ["", "lemma p_not_inf[simp]: \"s \\<in> S \\<Longrightarrow> p s \\<noteq> top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> S \\<Longrightarrow> p s \\<noteq> \\<top>", "using p_le_1[of s]"], ["proof (prove)\nusing this:\n  s \\<in> S \\<Longrightarrow> p s \\<le> 1\n\ngoal (1 subgoal):\n 1. s \\<in> S \\<Longrightarrow> p s \\<noteq> \\<top>", "by (auto simp: top_unique)"], ["", "lemma p_S1: \"s \\<in> S1 \\<Longrightarrow> p s = (\\<Squnion>D\\<in>K s. \\<integral>\\<^sup>+ t. p t \\<partial>measure_pmf D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> S1 \\<Longrightarrow>\n    p s = (\\<Squnion>D\\<in>K s. integral\\<^sup>N (measure_pmf D) p)", "using S1 S1_S2 K_closed[of s]"], ["proof (prove)\nusing this:\n  S1 \\<subseteq> S\n  S1 \\<inter> S2 = {}\n  s \\<in> S \\<Longrightarrow> \\<Union> (set_pmf ` K s) \\<subseteq> S\n\ngoal (1 subgoal):\n 1. s \\<in> S1 \\<Longrightarrow>\n    p s = (\\<Squnion>D\\<in>K s. integral\\<^sup>N (measure_pmf D) p)", "unfolding p_def"], ["proof (prove)\nusing this:\n  S1 \\<subseteq> S\n  S1 \\<inter> S2 = {}\n  s \\<in> S \\<Longrightarrow> \\<Union> (set_pmf ` K s) \\<subseteq> S\n\ngoal (1 subgoal):\n 1. s \\<in> S1 \\<Longrightarrow>\n    (\\<lambda>s\\<in>S.\n        P_sup s (\\<lambda>\\<omega>. (HLD S1 suntil HLD S2) (s ## \\<omega>)))\n     s =\n    (\\<Squnion>D\\<in>K s.\n        integral\\<^sup>N (measure_pmf D)\n         (\\<lambda>s\\<in>S.\n             P_sup s\n              (\\<lambda>\\<omega>. (HLD S1 suntil HLD S2) (s ## \\<omega>))))", "by (simp add: P_sup_iterate[of _ s] subset_eq set_eq_iff suntil_Stream[of _ _ s])\n     (auto intro!: SUP_cong nn_integral_cong_AE simp add: AE_measure_pmf_iff)"], ["", "lemma p_S2[simp]: \"s \\<in> S2 \\<Longrightarrow> p s = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> S2 \\<Longrightarrow> p s = 1", "using S2"], ["proof (prove)\nusing this:\n  S2 \\<subseteq> S\n\ngoal (1 subgoal):\n 1. s \\<in> S2 \\<Longrightarrow> p s = 1", "by (auto simp: v_S2[OF valid_cfgI] p_eq_SUP_v)"], ["", "lemma p_nS12: \"s \\<in> S \\<Longrightarrow> s \\<notin> S1 \\<Longrightarrow> s \\<notin> S2 \\<Longrightarrow> p s = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<in> S; s \\<notin> S1; s \\<notin> S2\\<rbrakk>\n    \\<Longrightarrow> p s = 0", "by (auto simp: p_eq_SUP_v v_nS12[OF valid_cfgI])"], ["", "lemma p_pos:\n  assumes \"(s, t) \\<in> (SIGMA s:S1. \\<Union>D\\<in>K s. set_pmf D)\\<^sup>*\" \"t \\<in> S2\" shows \"0 < p s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < p s", "using assms"], ["proof (prove)\nusing this:\n  (s, t) \\<in> (SIGMA s:S1. \\<Union> (set_pmf ` K s))\\<^sup>*\n  t \\<in> S2\n\ngoal (1 subgoal):\n 1. 0 < p s", "proof (induction rule: converse_rtrancl_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. t \\<in> S2 \\<Longrightarrow> 0 < p t\n 2. \\<And>y z.\n       \\<lbrakk>(y, z) \\<in> (SIGMA s:S1. \\<Union> (set_pmf ` K s));\n        (z, t) \\<in> (SIGMA s:S1. \\<Union> (set_pmf ` K s))\\<^sup>*;\n        t \\<in> S2 \\<Longrightarrow> 0 < p z; t \\<in> S2\\<rbrakk>\n       \\<Longrightarrow> 0 < p y", "case (step s t')"], ["proof (state)\nthis:\n  (s, t') \\<in> (SIGMA s:S1. \\<Union> (set_pmf ` K s))\n  (t', t) \\<in> (SIGMA s:S1. \\<Union> (set_pmf ` K s))\\<^sup>*\n  t \\<in> S2 \\<Longrightarrow> 0 < p t'\n  t \\<in> S2\n\ngoal (2 subgoals):\n 1. t \\<in> S2 \\<Longrightarrow> 0 < p t\n 2. \\<And>y z.\n       \\<lbrakk>(y, z) \\<in> (SIGMA s:S1. \\<Union> (set_pmf ` K s));\n        (z, t) \\<in> (SIGMA s:S1. \\<Union> (set_pmf ` K s))\\<^sup>*;\n        t \\<in> S2 \\<Longrightarrow> 0 < p z; t \\<in> S2\\<rbrakk>\n       \\<Longrightarrow> 0 < p y", "then"], ["proof (chain)\npicking this:\n  (s, t') \\<in> (SIGMA s:S1. \\<Union> (set_pmf ` K s))\n  (t', t) \\<in> (SIGMA s:S1. \\<Union> (set_pmf ` K s))\\<^sup>*\n  t \\<in> S2 \\<Longrightarrow> 0 < p t'\n  t \\<in> S2", "obtain D where \"s \\<in> S1\" \"D \\<in> K s\" \"t' \\<in> D\" \"0 < p t'\""], ["proof (prove)\nusing this:\n  (s, t') \\<in> (SIGMA s:S1. \\<Union> (set_pmf ` K s))\n  (t', t) \\<in> (SIGMA s:S1. \\<Union> (set_pmf ` K s))\\<^sup>*\n  t \\<in> S2 \\<Longrightarrow> 0 < p t'\n  t \\<in> S2\n\ngoal (1 subgoal):\n 1. (\\<And>D.\n        \\<lbrakk>s \\<in> S1; D \\<in> K s; t' \\<in> set_pmf D;\n         0 < p t'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s \\<in> S1\n  D \\<in> K s\n  t' \\<in> set_pmf D\n  0 < p t'\n\ngoal (2 subgoals):\n 1. t \\<in> S2 \\<Longrightarrow> 0 < p t\n 2. \\<And>y z.\n       \\<lbrakk>(y, z) \\<in> (SIGMA s:S1. \\<Union> (set_pmf ` K s));\n        (z, t) \\<in> (SIGMA s:S1. \\<Union> (set_pmf ` K s))\\<^sup>*;\n        t \\<in> S2 \\<Longrightarrow> 0 < p z; t \\<in> S2\\<rbrakk>\n       \\<Longrightarrow> 0 < p y", "with S1 set_pmf_closed[of s D]"], ["proof (chain)\npicking this:\n  S1 \\<subseteq> S\n  \\<lbrakk>s \\<in> S; D \\<in> K s; ?t \\<in> set_pmf D\\<rbrakk>\n  \\<Longrightarrow> ?t \\<in> S\n  s \\<in> S1\n  D \\<in> K s\n  t' \\<in> set_pmf D\n  0 < p t'", "have in_S: \"\\<And>t. t \\<in> D \\<Longrightarrow> t \\<in> S\""], ["proof (prove)\nusing this:\n  S1 \\<subseteq> S\n  \\<lbrakk>s \\<in> S; D \\<in> K s; ?t \\<in> set_pmf D\\<rbrakk>\n  \\<Longrightarrow> ?t \\<in> S\n  s \\<in> S1\n  D \\<in> K s\n  t' \\<in> set_pmf D\n  0 < p t'\n\ngoal (1 subgoal):\n 1. \\<And>t. t \\<in> set_pmf D \\<Longrightarrow> t \\<in> S", "by auto"], ["proof (state)\nthis:\n  ?t1 \\<in> set_pmf D \\<Longrightarrow> ?t1 \\<in> S\n\ngoal (2 subgoals):\n 1. t \\<in> S2 \\<Longrightarrow> 0 < p t\n 2. \\<And>y z.\n       \\<lbrakk>(y, z) \\<in> (SIGMA s:S1. \\<Union> (set_pmf ` K s));\n        (z, t) \\<in> (SIGMA s:S1. \\<Union> (set_pmf ` K s))\\<^sup>*;\n        t \\<in> S2 \\<Longrightarrow> 0 < p z; t \\<in> S2\\<rbrakk>\n       \\<Longrightarrow> 0 < p y", "from \\<open>t' \\<in> D\\<close> \\<open>0 < p t'\\<close>"], ["proof (chain)\npicking this:\n  t' \\<in> set_pmf D\n  0 < p t'", "have \"0 < pmf D t' * p t'\""], ["proof (prove)\nusing this:\n  t' \\<in> set_pmf D\n  0 < p t'\n\ngoal (1 subgoal):\n 1. 0 < ennreal (pmf D t') * p t'", "by (auto simp add: ennreal_zero_less_mult_iff pmf_positive)"], ["proof (state)\nthis:\n  0 < ennreal (pmf D t') * p t'\n\ngoal (2 subgoals):\n 1. t \\<in> S2 \\<Longrightarrow> 0 < p t\n 2. \\<And>y z.\n       \\<lbrakk>(y, z) \\<in> (SIGMA s:S1. \\<Union> (set_pmf ` K s));\n        (z, t) \\<in> (SIGMA s:S1. \\<Union> (set_pmf ` K s))\\<^sup>*;\n        t \\<in> S2 \\<Longrightarrow> 0 < p z; t \\<in> S2\\<rbrakk>\n       \\<Longrightarrow> 0 < p y", "also"], ["proof (state)\nthis:\n  0 < ennreal (pmf D t') * p t'\n\ngoal (2 subgoals):\n 1. t \\<in> S2 \\<Longrightarrow> 0 < p t\n 2. \\<And>y z.\n       \\<lbrakk>(y, z) \\<in> (SIGMA s:S1. \\<Union> (set_pmf ` K s));\n        (z, t) \\<in> (SIGMA s:S1. \\<Union> (set_pmf ` K s))\\<^sup>*;\n        t \\<in> S2 \\<Longrightarrow> 0 < p z; t \\<in> S2\\<rbrakk>\n       \\<Longrightarrow> 0 < p y", "have \"\\<dots> \\<le> (\\<integral>\\<^sup>+t. p t' * indicator {t'} t\\<partial>D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal (pmf D t') * p t'\n    \\<le> \\<integral>\\<^sup>+t\\<in>{t'}. p t'\\<partial>measure_pmf D", "using in_S[OF \\<open>t' \\<in> D\\<close>]"], ["proof (prove)\nusing this:\n  t' \\<in> S\n\ngoal (1 subgoal):\n 1. ennreal (pmf D t') * p t'\n    \\<le> \\<integral>\\<^sup>+t\\<in>{t'}. p t'\\<partial>measure_pmf D", "by (subst nn_integral_cmult_indicator) (auto simp: ac_simps emeasure_pmf_single)"], ["proof (state)\nthis:\n  ennreal (pmf D t') * p t'\n  \\<le> \\<integral>\\<^sup>+t\\<in>{t'}. p t'\\<partial>measure_pmf D\n\ngoal (2 subgoals):\n 1. t \\<in> S2 \\<Longrightarrow> 0 < p t\n 2. \\<And>y z.\n       \\<lbrakk>(y, z) \\<in> (SIGMA s:S1. \\<Union> (set_pmf ` K s));\n        (z, t) \\<in> (SIGMA s:S1. \\<Union> (set_pmf ` K s))\\<^sup>*;\n        t \\<in> S2 \\<Longrightarrow> 0 < p z; t \\<in> S2\\<rbrakk>\n       \\<Longrightarrow> 0 < p y", "also"], ["proof (state)\nthis:\n  ennreal (pmf D t') * p t'\n  \\<le> \\<integral>\\<^sup>+t\\<in>{t'}. p t'\\<partial>measure_pmf D\n\ngoal (2 subgoals):\n 1. t \\<in> S2 \\<Longrightarrow> 0 < p t\n 2. \\<And>y z.\n       \\<lbrakk>(y, z) \\<in> (SIGMA s:S1. \\<Union> (set_pmf ` K s));\n        (z, t) \\<in> (SIGMA s:S1. \\<Union> (set_pmf ` K s))\\<^sup>*;\n        t \\<in> S2 \\<Longrightarrow> 0 < p z; t \\<in> S2\\<rbrakk>\n       \\<Longrightarrow> 0 < p y", "have \"\\<dots> \\<le> (\\<integral>\\<^sup>+t. p t \\<partial>D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+t\\<in>{t'}. p t'\\<partial>measure_pmf D\n    \\<le> integral\\<^sup>N (measure_pmf D) p", "by (auto intro!: nn_integral_mono_AE split: split_indicator simp: in_S AE_measure_pmf_iff\n      simp del: nn_integral_indicator_singleton)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+t\\<in>{t'}. p t'\\<partial>measure_pmf D\n  \\<le> integral\\<^sup>N (measure_pmf D) p\n\ngoal (2 subgoals):\n 1. t \\<in> S2 \\<Longrightarrow> 0 < p t\n 2. \\<And>y z.\n       \\<lbrakk>(y, z) \\<in> (SIGMA s:S1. \\<Union> (set_pmf ` K s));\n        (z, t) \\<in> (SIGMA s:S1. \\<Union> (set_pmf ` K s))\\<^sup>*;\n        t \\<in> S2 \\<Longrightarrow> 0 < p z; t \\<in> S2\\<rbrakk>\n       \\<Longrightarrow> 0 < p y", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+t\\<in>{t'}. p t'\\<partial>measure_pmf D\n  \\<le> integral\\<^sup>N (measure_pmf D) p\n\ngoal (2 subgoals):\n 1. t \\<in> S2 \\<Longrightarrow> 0 < p t\n 2. \\<And>y z.\n       \\<lbrakk>(y, z) \\<in> (SIGMA s:S1. \\<Union> (set_pmf ` K s));\n        (z, t) \\<in> (SIGMA s:S1. \\<Union> (set_pmf ` K s))\\<^sup>*;\n        t \\<in> S2 \\<Longrightarrow> 0 < p z; t \\<in> S2\\<rbrakk>\n       \\<Longrightarrow> 0 < p y", "have \"\\<dots> \\<le> p s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral\\<^sup>N (measure_pmf D) p \\<le> p s", "using \\<open>s \\<in> S1\\<close> \\<open>D \\<in> K s\\<close>"], ["proof (prove)\nusing this:\n  s \\<in> S1\n  D \\<in> K s\n\ngoal (1 subgoal):\n 1. integral\\<^sup>N (measure_pmf D) p \\<le> p s", "by (auto intro: SUP_upper simp add: p_S1)"], ["proof (state)\nthis:\n  integral\\<^sup>N (measure_pmf D) p \\<le> p s\n\ngoal (2 subgoals):\n 1. t \\<in> S2 \\<Longrightarrow> 0 < p t\n 2. \\<And>y z.\n       \\<lbrakk>(y, z) \\<in> (SIGMA s:S1. \\<Union> (set_pmf ` K s));\n        (z, t) \\<in> (SIGMA s:S1. \\<Union> (set_pmf ` K s))\\<^sup>*;\n        t \\<in> S2 \\<Longrightarrow> 0 < p z; t \\<in> S2\\<rbrakk>\n       \\<Longrightarrow> 0 < p y", "finally"], ["proof (chain)\npicking this:\n  0 < p s", "show ?case"], ["proof (prove)\nusing this:\n  0 < p s\n\ngoal (1 subgoal):\n 1. 0 < p s", "."], ["proof (state)\nthis:\n  0 < p s\n\ngoal (1 subgoal):\n 1. t \\<in> S2 \\<Longrightarrow> 0 < p t", "qed simp"], ["", "definition F_sup :: \"('s \\<Rightarrow> ennreal) \\<Rightarrow> 's \\<Rightarrow> ennreal\" where\n  \"F_sup f = (\\<lambda>s\\<in>S. if s \\<in> S2 then 1 else if s \\<in> S1 then SUP D\\<in>K s. \\<integral>\\<^sup>+t. f t \\<partial>measure_pmf D else 0)\""], ["", "lemma F_sup_cong: \"(\\<And>s. s \\<in> S \\<Longrightarrow> f s = g s) \\<Longrightarrow> F_sup f s = F_sup g s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s. s \\<in> S \\<Longrightarrow> f s = g s) \\<Longrightarrow>\n    F_sup f s = F_sup g s", "using K_closed[of s]"], ["proof (prove)\nusing this:\n  s \\<in> S \\<Longrightarrow> \\<Union> (set_pmf ` K s) \\<subseteq> S\n\ngoal (1 subgoal):\n 1. (\\<And>s. s \\<in> S \\<Longrightarrow> f s = g s) \\<Longrightarrow>\n    F_sup f s = F_sup g s", "by (auto simp: F_sup_def AE_measure_pmf_iff subset_eq\n              intro!: SUP_cong nn_integral_cong_AE)"], ["", "lemma continuous_F_sup: \"sup_continuous F_sup\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sup_continuous F_sup", "unfolding sup_continuous_def fun_eq_iff F_sup_def[abs_def]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>M.\n       incseq M \\<longrightarrow>\n       (\\<forall>x.\n           (\\<lambda>s\\<in>S.\n               if s \\<in> S2 then 1\n               else if s \\<in> S1\n                    then \\<Squnion>D\\<in>K s.\n                            integral\\<^sup>N (measure_pmf D)\n                             (\\<Squnion> range M)\n                    else 0)\n            x =\n           (\\<Squnion>i.\n               (\\<lambda>s\\<in>S.\n                   if s \\<in> S2 then 1\n                   else if s \\<in> S1\n                        then \\<Squnion>D\\<in>K s.\n                                integral\\<^sup>N (measure_pmf D) (M i)\n                        else 0))\n            x)", "by (auto simp:  SUP_apply[abs_def] nn_integral_monotone_convergence_SUP intro: SUP_commute)"], ["", "lemma mono_F_sup: \"mono F_sup\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mono F_sup", "by (intro sup_continuous_mono continuous_F_sup)"], ["", "lemma lfp_F_sup_iterate: \"lfp F_sup = (SUP i. (F_sup ^^ i) (\\<lambda>x\\<in>S. 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lfp F_sup = (\\<Squnion>i. (F_sup ^^ i) (\\<lambda>x\\<in>S. 0))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. lfp F_sup = (\\<Squnion>i. (F_sup ^^ i) (\\<lambda>x\\<in>S. 0))", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. lfp F_sup = (\\<Squnion>i. (F_sup ^^ i) (\\<lambda>x\\<in>S. 0))", "have \"(SUP i. (F_sup ^^ i) \\<bottom>) = (SUP i. (F_sup ^^ i) (\\<lambda>x\\<in>S. 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Squnion>i. (F_sup ^^ i) \\<bottom>) =\n    (\\<Squnion>i. (F_sup ^^ i) (\\<lambda>x\\<in>S. 0))", "proof (rule SUP_eq)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       i \\<in> UNIV \\<Longrightarrow>\n       \\<exists>j\\<in>UNIV.\n          (F_sup ^^ i) \\<bottom> \\<le> (F_sup ^^ j) (\\<lambda>x\\<in>S. 0)\n 2. \\<And>j.\n       j \\<in> UNIV \\<Longrightarrow>\n       \\<exists>i\\<in>UNIV.\n          (F_sup ^^ j) (\\<lambda>x\\<in>S. 0) \\<le> (F_sup ^^ i) \\<bottom>", "fix i"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       i \\<in> UNIV \\<Longrightarrow>\n       \\<exists>j\\<in>UNIV.\n          (F_sup ^^ i) \\<bottom> \\<le> (F_sup ^^ j) (\\<lambda>x\\<in>S. 0)\n 2. \\<And>j.\n       j \\<in> UNIV \\<Longrightarrow>\n       \\<exists>i\\<in>UNIV.\n          (F_sup ^^ j) (\\<lambda>x\\<in>S. 0) \\<le> (F_sup ^^ i) \\<bottom>", "show \"\\<exists>j\\<in>UNIV. (F_sup ^^ i) \\<bottom> \\<le> (F_sup ^^ j) (\\<lambda>x\\<in>S. 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>j\\<in>UNIV.\n       (F_sup ^^ i) \\<bottom> \\<le> (F_sup ^^ j) (\\<lambda>x\\<in>S. 0)", "by (intro bexI[of _ i] funpow_mono mono_F_sup) auto"], ["proof (state)\nthis:\n  \\<exists>j\\<in>UNIV.\n     (F_sup ^^ i) \\<bottom> \\<le> (F_sup ^^ j) (\\<lambda>x\\<in>S. 0)\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> UNIV \\<Longrightarrow>\n       \\<exists>i\\<in>UNIV.\n          (F_sup ^^ j) (\\<lambda>x\\<in>S. 0) \\<le> (F_sup ^^ i) \\<bottom>", "have *: \"(\\<lambda>x\\<in>S. 0) \\<le> F_sup \\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>S. 0) \\<le> F_sup \\<bottom>", "using K_wf"], ["proof (prove)\nusing this:\n  K ?s \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<lambda>x\\<in>S. 0) \\<le> F_sup \\<bottom>", "by (auto simp: F_sup_def le_fun_def)"], ["proof (state)\nthis:\n  (\\<lambda>x\\<in>S. 0) \\<le> F_sup \\<bottom>\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       j \\<in> UNIV \\<Longrightarrow>\n       \\<exists>i\\<in>UNIV.\n          (F_sup ^^ j) (\\<lambda>x\\<in>S. 0) \\<le> (F_sup ^^ i) \\<bottom>", "show \"\\<exists>j\\<in>UNIV. (F_sup ^^ i) (\\<lambda>x\\<in>S. 0) \\<le> (F_sup ^^ j) \\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>j\\<in>UNIV.\n       (F_sup ^^ i) (\\<lambda>x\\<in>S. 0) \\<le> (F_sup ^^ j) \\<bottom>", "by (auto intro!: exI[of _ \"Suc i\"] funpow_mono mono_F_sup  *\n                 simp del: funpow.simps simp add: funpow_Suc_right le_funI)"], ["proof (state)\nthis:\n  \\<exists>j\\<in>UNIV.\n     (F_sup ^^ i) (\\<lambda>x\\<in>S. 0) \\<le> (F_sup ^^ j) \\<bottom>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Squnion>i. (F_sup ^^ i) \\<bottom>) =\n  (\\<Squnion>i. (F_sup ^^ i) (\\<lambda>x\\<in>S. 0))\n\ngoal (1 subgoal):\n 1. lfp F_sup = (\\<Squnion>i. (F_sup ^^ i) (\\<lambda>x\\<in>S. 0))", "}"], ["proof (state)\nthis:\n  (\\<Squnion>i. (F_sup ^^ i) \\<bottom>) =\n  (\\<Squnion>i. (F_sup ^^ i) (\\<lambda>x\\<in>S. 0))\n\ngoal (1 subgoal):\n 1. lfp F_sup = (\\<Squnion>i. (F_sup ^^ i) (\\<lambda>x\\<in>S. 0))", "then"], ["proof (chain)\npicking this:\n  (\\<Squnion>i. (F_sup ^^ i) \\<bottom>) =\n  (\\<Squnion>i. (F_sup ^^ i) (\\<lambda>x\\<in>S. 0))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Squnion>i. (F_sup ^^ i) \\<bottom>) =\n  (\\<Squnion>i. (F_sup ^^ i) (\\<lambda>x\\<in>S. 0))\n\ngoal (1 subgoal):\n 1. lfp F_sup = (\\<Squnion>i. (F_sup ^^ i) (\\<lambda>x\\<in>S. 0))", "by (auto simp: sup_continuous_lfp continuous_F_sup)"], ["proof (state)\nthis:\n  lfp F_sup = (\\<Squnion>i. (F_sup ^^ i) (\\<lambda>x\\<in>S. 0))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma p_eq_lfp_F_sup: \"p = lfp F_sup\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p = lfp F_sup", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. p = lfp F_sup", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. p = lfp F_sup", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. p = lfp F_sup", "assume \"s \\<in> S\""], ["proof (state)\nthis:\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. p = lfp F_sup", "let ?F = \"\\<lambda>P. HLD S2 or (HLD S1 aand nxt P)\""], ["proof (state)\ngoal (1 subgoal):\n 1. p = lfp F_sup", "have \"P_sup s (\\<lambda>\\<omega>. (HLD S1 suntil HLD S2) (s ## \\<omega>)) = (\\<Squnion>i. P_sup s (\\<lambda>\\<omega>. (?F ^^ i) \\<bottom> (s ## \\<omega>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P_sup s (\\<lambda>\\<omega>. (HLD S1 suntil HLD S2) (s ## \\<omega>)) =\n    (\\<Squnion>i.\n        P_sup s\n         (\\<lambda>\\<omega>.\n             ((\\<lambda>P xs. HLD S2 xs \\<or> HLD S1 xs \\<and> nxt P xs) ^^\n              i)\n              \\<bottom> (s ## \\<omega>)))", "proof (simp add: suntil_def, rule P_sup_lfp)"], ["proof (state)\ngoal (3 subgoals):\n 1. sup_continuous (\\<lambda>p x. HLD S2 x \\<or> HLD S1 x \\<and> p (stl x))\n 2. (##) s \\<in> St \\<rightarrow>\\<^sub>M ?M6\n 3. \\<And>P.\n       Measurable.pred ?M6 P \\<Longrightarrow>\n       Measurable.pred ?M6\n        (\\<lambda>x. HLD S2 x \\<or> HLD S1 x \\<and> P (stl x))", "show \"(##) s \\<in> measurable St St\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (##) s \\<in> St \\<rightarrow>\\<^sub>M St", "by simp"], ["proof (state)\nthis:\n  (##) s \\<in> St \\<rightarrow>\\<^sub>M St\n\ngoal (2 subgoals):\n 1. sup_continuous (\\<lambda>p x. HLD S2 x \\<or> HLD S1 x \\<and> p (stl x))\n 2. \\<And>P.\n       Measurable.pred St P \\<Longrightarrow>\n       Measurable.pred St\n        (\\<lambda>x. HLD S2 x \\<or> HLD S1 x \\<and> P (stl x))", "(* This proof should work automatically *)"], ["proof (state)\nthis:\n  (##) s \\<in> St \\<rightarrow>\\<^sub>M St\n\ngoal (2 subgoals):\n 1. sup_continuous (\\<lambda>p x. HLD S2 x \\<or> HLD S1 x \\<and> p (stl x))\n 2. \\<And>P.\n       Measurable.pred St P \\<Longrightarrow>\n       Measurable.pred St\n        (\\<lambda>x. HLD S2 x \\<or> HLD S1 x \\<and> P (stl x))", "fix P"], ["proof (state)\ngoal (2 subgoals):\n 1. sup_continuous (\\<lambda>p x. HLD S2 x \\<or> HLD S1 x \\<and> p (stl x))\n 2. \\<And>P.\n       Measurable.pred St P \\<Longrightarrow>\n       Measurable.pred St\n        (\\<lambda>x. HLD S2 x \\<or> HLD S1 x \\<and> P (stl x))", "assume P: \"Measurable.pred St P\""], ["proof (state)\nthis:\n  Measurable.pred St P\n\ngoal (2 subgoals):\n 1. sup_continuous (\\<lambda>p x. HLD S2 x \\<or> HLD S1 x \\<and> p (stl x))\n 2. \\<And>P.\n       Measurable.pred St P \\<Longrightarrow>\n       Measurable.pred St\n        (\\<lambda>x. HLD S2 x \\<or> HLD S1 x \\<and> P (stl x))", "show \"Measurable.pred St (HLD S2 or (HLD S1 aand (\\<lambda>\\<omega>. P (stl \\<omega>))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Measurable.pred St\n     (\\<lambda>xs. HLD S2 xs \\<or> HLD S1 xs \\<and> P (stl xs))", "by (intro pred_intros_logic measurable_compose[OF _ P] measurable_compose[OF measurable_shd]) auto"], ["proof (state)\nthis:\n  Measurable.pred St\n   (\\<lambda>xs. HLD S2 xs \\<or> HLD S1 xs \\<and> P (stl xs))\n\ngoal (1 subgoal):\n 1. sup_continuous (\\<lambda>p x. HLD S2 x \\<or> HLD S1 x \\<and> p (stl x))", "qed (auto simp: sup_continuous_def)"], ["proof (state)\nthis:\n  P_sup s (\\<lambda>\\<omega>. (HLD S1 suntil HLD S2) (s ## \\<omega>)) =\n  (\\<Squnion>i.\n      P_sup s\n       (\\<lambda>\\<omega>.\n           ((\\<lambda>P xs. HLD S2 xs \\<or> HLD S1 xs \\<and> nxt P xs) ^^ i)\n            \\<bottom> (s ## \\<omega>)))\n\ngoal (1 subgoal):\n 1. p = lfp F_sup", "also"], ["proof (state)\nthis:\n  P_sup s (\\<lambda>\\<omega>. (HLD S1 suntil HLD S2) (s ## \\<omega>)) =\n  (\\<Squnion>i.\n      P_sup s\n       (\\<lambda>\\<omega>.\n           ((\\<lambda>P xs. HLD S2 xs \\<or> HLD S1 xs \\<and> nxt P xs) ^^ i)\n            \\<bottom> (s ## \\<omega>)))\n\ngoal (1 subgoal):\n 1. p = lfp F_sup", "have \"\\<dots> = (SUP i. (F_sup ^^ i) (\\<lambda>x\\<in>S. 0) s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Squnion>i.\n        P_sup s\n         (\\<lambda>\\<omega>.\n             ((\\<lambda>P xs. HLD S2 xs \\<or> HLD S1 xs \\<and> nxt P xs) ^^\n              i)\n              \\<bottom> (s ## \\<omega>))) =\n    (\\<Squnion>i. (F_sup ^^ i) (\\<lambda>x\\<in>S. 0) s)", "proof (rule SUP_cong)"], ["proof (state)\ngoal (2 subgoals):\n 1. UNIV = UNIV\n 2. \\<And>x.\n       x \\<in> UNIV \\<Longrightarrow>\n       P_sup s\n        (\\<lambda>\\<omega>.\n            ((\\<lambda>P xs. HLD S2 xs \\<or> HLD S1 xs \\<and> nxt P xs) ^^\n             x)\n             \\<bottom> (s ## \\<omega>)) =\n       (F_sup ^^ x) (\\<lambda>x\\<in>S. 0) s", "fix i"], ["proof (state)\ngoal (2 subgoals):\n 1. UNIV = UNIV\n 2. \\<And>x.\n       x \\<in> UNIV \\<Longrightarrow>\n       P_sup s\n        (\\<lambda>\\<omega>.\n            ((\\<lambda>P xs. HLD S2 xs \\<or> HLD S1 xs \\<and> nxt P xs) ^^\n             x)\n             \\<bottom> (s ## \\<omega>)) =\n       (F_sup ^^ x) (\\<lambda>x\\<in>S. 0) s", "from \\<open>s \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  s \\<in> S", "show \"P_sup s (\\<lambda>\\<omega>. (?F ^^ i) \\<bottom> (s##\\<omega>)) = (F_sup ^^ i) (\\<lambda>x\\<in>S. 0) s\""], ["proof (prove)\nusing this:\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. P_sup s\n     (\\<lambda>\\<omega>.\n         ((\\<lambda>P xs. HLD S2 xs \\<or> HLD S1 xs \\<and> nxt P xs) ^^ i)\n          \\<bottom> (s ## \\<omega>)) =\n    (F_sup ^^ i) (\\<lambda>x\\<in>S. 0) s", "proof (induct i arbitrary: s)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s.\n       s \\<in> S \\<Longrightarrow>\n       P_sup s\n        (\\<lambda>\\<omega>.\n            ((\\<lambda>P xs. HLD S2 xs \\<or> HLD S1 xs \\<and> nxt P xs) ^^\n             0)\n             \\<bottom> (s ## \\<omega>)) =\n       (F_sup ^^ 0) (\\<lambda>x\\<in>S. 0) s\n 2. \\<And>i s.\n       \\<lbrakk>\\<And>s.\n                   s \\<in> S \\<Longrightarrow>\n                   P_sup s\n                    (\\<lambda>\\<omega>.\n                        ((\\<lambda>P xs.\n                             HLD S2 xs \\<or> HLD S1 xs \\<and> nxt P xs) ^^\n                         i)\n                         \\<bottom> (s ## \\<omega>)) =\n                   (F_sup ^^ i) (\\<lambda>x\\<in>S. 0) s;\n        s \\<in> S\\<rbrakk>\n       \\<Longrightarrow> P_sup s\n                          (\\<lambda>\\<omega>.\n                              ((\\<lambda>P xs.\n                                   HLD S2 xs \\<or>\n                                   HLD S1 xs \\<and> nxt P xs) ^^\n                               Suc i)\n                               \\<bottom> (s ## \\<omega>)) =\n                         (F_sup ^^ Suc i) (\\<lambda>x\\<in>S. 0) s", "case (Suc n)"], ["proof (state)\nthis:\n  ?s1 \\<in> S \\<Longrightarrow>\n  P_sup ?s1\n   (\\<lambda>\\<omega>.\n       ((\\<lambda>P xs. HLD S2 xs \\<or> HLD S1 xs \\<and> nxt P xs) ^^ n)\n        \\<bottom> (?s1 ## \\<omega>)) =\n  (F_sup ^^ n) (\\<lambda>x\\<in>S. 0) ?s1\n  s \\<in> S\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       s \\<in> S \\<Longrightarrow>\n       P_sup s\n        (\\<lambda>\\<omega>.\n            ((\\<lambda>P xs. HLD S2 xs \\<or> HLD S1 xs \\<and> nxt P xs) ^^\n             0)\n             \\<bottom> (s ## \\<omega>)) =\n       (F_sup ^^ 0) (\\<lambda>x\\<in>S. 0) s\n 2. \\<And>i s.\n       \\<lbrakk>\\<And>s.\n                   s \\<in> S \\<Longrightarrow>\n                   P_sup s\n                    (\\<lambda>\\<omega>.\n                        ((\\<lambda>P xs.\n                             HLD S2 xs \\<or> HLD S1 xs \\<and> nxt P xs) ^^\n                         i)\n                         \\<bottom> (s ## \\<omega>)) =\n                   (F_sup ^^ i) (\\<lambda>x\\<in>S. 0) s;\n        s \\<in> S\\<rbrakk>\n       \\<Longrightarrow> P_sup s\n                          (\\<lambda>\\<omega>.\n                              ((\\<lambda>P xs.\n                                   HLD S2 xs \\<or>\n                                   HLD S1 xs \\<and> nxt P xs) ^^\n                               Suc i)\n                               \\<bottom> (s ## \\<omega>)) =\n                         (F_sup ^^ Suc i) (\\<lambda>x\\<in>S. 0) s", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. P_sup s\n     (\\<lambda>\\<omega>.\n         ((\\<lambda>P xs. HLD S2 xs \\<or> HLD S1 xs \\<and> nxt P xs) ^^\n          Suc n)\n          \\<bottom> (s ## \\<omega>)) =\n    (F_sup ^^ Suc n) (\\<lambda>x\\<in>S. 0) s", "proof (subst P_sup_iterate)"], ["proof (state)\ngoal (2 subgoals):\n 1. Measurable.pred St\n     (\\<lambda>\\<omega>.\n         ((\\<lambda>P xs. HLD S2 xs \\<or> HLD S1 xs \\<and> nxt P xs) ^^\n          Suc n)\n          \\<bottom> (s ## \\<omega>))\n 2. (\\<Squnion>D\\<in>K s.\n        \\<integral>\\<^sup>+ t. P_sup t\n                                (\\<lambda>\\<omega>.\n                                    ((\\<lambda>P xs.\n   HLD S2 xs \\<or> HLD S1 xs \\<and> nxt P xs) ^^\n                                     Suc n)\n                                     \\<bottom> (s ## t ## \\<omega>))\n                           \\<partial>measure_pmf D) =\n    (F_sup ^^ Suc n) (\\<lambda>x\\<in>S. 0) s", "(* This proof should work automatically *)"], ["proof (state)\ngoal (2 subgoals):\n 1. Measurable.pred St\n     (\\<lambda>\\<omega>.\n         ((\\<lambda>P xs. HLD S2 xs \\<or> HLD S1 xs \\<and> nxt P xs) ^^\n          Suc n)\n          \\<bottom> (s ## \\<omega>))\n 2. (\\<Squnion>D\\<in>K s.\n        \\<integral>\\<^sup>+ t. P_sup t\n                                (\\<lambda>\\<omega>.\n                                    ((\\<lambda>P xs.\n   HLD S2 xs \\<or> HLD S1 xs \\<and> nxt P xs) ^^\n                                     Suc n)\n                                     \\<bottom> (s ## t ## \\<omega>))\n                           \\<partial>measure_pmf D) =\n    (F_sup ^^ Suc n) (\\<lambda>x\\<in>S. 0) s", "show \"Measurable.pred St (\\<lambda>\\<omega>. (?F ^^ Suc n) \\<bottom> (s ## \\<omega>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Measurable.pred St\n     (\\<lambda>\\<omega>.\n         ((\\<lambda>P xs. HLD S2 xs \\<or> HLD S1 xs \\<and> nxt P xs) ^^\n          Suc n)\n          \\<bottom> (s ## \\<omega>))", "apply (intro measurable_compose[OF measurable_Stream[OF measurable_const measurable_ident_sets[OF refl]] measurable_predpow])"], ["proof (prove)\ngoal (3 subgoals):\n 1. s \\<in> space (count_space UNIV)\n 2. Measurable.pred St \\<bottom>\n 3. \\<And>Q.\n       Measurable.pred St Q \\<Longrightarrow>\n       Measurable.pred St\n        (\\<lambda>xs. HLD S2 xs \\<or> HLD S1 xs \\<and> nxt Q xs)", "apply simp"], ["proof (prove)\ngoal (2 subgoals):\n 1. Measurable.pred St \\<bottom>\n 2. \\<And>Q.\n       Measurable.pred St Q \\<Longrightarrow>\n       Measurable.pred St\n        (\\<lambda>xs. HLD S2 xs \\<or> HLD S1 xs \\<and> nxt Q xs)", "apply (simp add: bot_fun_def[abs_def])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Q.\n       Measurable.pred St Q \\<Longrightarrow>\n       Measurable.pred St\n        (\\<lambda>xs. HLD S2 xs \\<or> HLD S1 xs \\<and> nxt Q xs)", "apply (intro pred_intros_logic measurable_compose[OF measurable_stl]  measurable_compose[OF measurable_shd])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>Q.\n       Measurable.pred St Q \\<Longrightarrow> Measurable.pred St (HLD S2)\n 2. \\<And>Q.\n       Measurable.pred St Q \\<Longrightarrow> Measurable.pred St (HLD S1)\n 3. \\<And>Q.\n       Measurable.pred St Q \\<Longrightarrow> Measurable.pred St (nxt Q)", "apply auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  Measurable.pred St\n   (\\<lambda>\\<omega>.\n       ((\\<lambda>P xs. HLD S2 xs \\<or> HLD S1 xs \\<and> nxt P xs) ^^ Suc n)\n        \\<bottom> (s ## \\<omega>))\n\ngoal (1 subgoal):\n 1. (\\<Squnion>D\\<in>K s.\n        \\<integral>\\<^sup>+ t. P_sup t\n                                (\\<lambda>\\<omega>.\n                                    ((\\<lambda>P xs.\n   HLD S2 xs \\<or> HLD S1 xs \\<and> nxt P xs) ^^\n                                     Suc n)\n                                     \\<bottom> (s ## t ## \\<omega>))\n                           \\<partial>measure_pmf D) =\n    (F_sup ^^ Suc n) (\\<lambda>x\\<in>S. 0) s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Squnion>D\\<in>K s.\n        \\<integral>\\<^sup>+ t. P_sup t\n                                (\\<lambda>\\<omega>.\n                                    ((\\<lambda>P xs.\n   HLD S2 xs \\<or> HLD S1 xs \\<and> nxt P xs) ^^\n                                     Suc n)\n                                     \\<bottom> (s ## t ## \\<omega>))\n                           \\<partial>measure_pmf D) =\n    (F_sup ^^ Suc n) (\\<lambda>x\\<in>S. 0) s", "show \"(\\<Squnion>D\\<in>K s. \\<integral>\\<^sup>+ t. P_sup t (\\<lambda>\\<omega>. (?F ^^ Suc n) \\<bottom> (s ## t ## \\<omega>)) \\<partial>measure_pmf D) =\n            (F_sup ^^ Suc n) (\\<lambda>x\\<in>S. 0) s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Squnion>D\\<in>K s.\n        \\<integral>\\<^sup>+ t. P_sup t\n                                (\\<lambda>\\<omega>.\n                                    ((\\<lambda>P xs.\n   HLD S2 xs \\<or> HLD S1 xs \\<and> nxt P xs) ^^\n                                     Suc n)\n                                     \\<bottom> (s ## t ## \\<omega>))\n                           \\<partial>measure_pmf D) =\n    (F_sup ^^ Suc n) (\\<lambda>x\\<in>S. 0) s", "unfolding funpow.simps comp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Squnion>D\\<in>K s.\n        \\<integral>\\<^sup>+ t. P_sup t\n                                (\\<lambda>\\<omega>.\n                                    HLD S2 (s ## t ## \\<omega>) \\<or>\n                                    HLD S1 (s ## t ## \\<omega>) \\<and>\n                                    nxt (((\\<lambda>P xs.\n        HLD S2 xs \\<or> HLD S1 xs \\<and> nxt P xs) ^^\n    n)\n    \\<bottom>)\n                                     (s ## t ## \\<omega>))\n                           \\<partial>measure_pmf D) =\n    F_sup ((F_sup ^^ n) (\\<lambda>x\\<in>S. 0)) s", "using S1 S2 \\<open>s \\<in> S\\<close>"], ["proof (prove)\nusing this:\n  S1 \\<subseteq> S\n  S2 \\<subseteq> S\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. (\\<Squnion>D\\<in>K s.\n        \\<integral>\\<^sup>+ t. P_sup t\n                                (\\<lambda>\\<omega>.\n                                    HLD S2 (s ## t ## \\<omega>) \\<or>\n                                    HLD S1 (s ## t ## \\<omega>) \\<and>\n                                    nxt (((\\<lambda>P xs.\n        HLD S2 xs \\<or> HLD S1 xs \\<and> nxt P xs) ^^\n    n)\n    \\<bottom>)\n                                     (s ## t ## \\<omega>))\n                           \\<partial>measure_pmf D) =\n    F_sup ((F_sup ^^ n) (\\<lambda>x\\<in>S. 0)) s", "by (subst F_sup_cong[OF Suc(1)[symmetric]])\n               (auto simp add: F_sup_def measure_pmf.emeasure_space_1[simplified] K_wf subset_eq)"], ["proof (state)\nthis:\n  (\\<Squnion>D\\<in>K s.\n      \\<integral>\\<^sup>+ t. P_sup t\n                              (\\<lambda>\\<omega>.\n                                  ((\\<lambda>P xs.\n HLD S2 xs \\<or> HLD S1 xs \\<and> nxt P xs) ^^\n                                   Suc n)\n                                   \\<bottom> (s ## t ## \\<omega>))\n                         \\<partial>measure_pmf D) =\n  (F_sup ^^ Suc n) (\\<lambda>x\\<in>S. 0) s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P_sup s\n   (\\<lambda>\\<omega>.\n       ((\\<lambda>P xs. HLD S2 xs \\<or> HLD S1 xs \\<and> nxt P xs) ^^ Suc n)\n        \\<bottom> (s ## \\<omega>)) =\n  (F_sup ^^ Suc n) (\\<lambda>x\\<in>S. 0) s\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> S \\<Longrightarrow>\n       P_sup s\n        (\\<lambda>\\<omega>.\n            ((\\<lambda>P xs. HLD S2 xs \\<or> HLD S1 xs \\<and> nxt P xs) ^^\n             0)\n             \\<bottom> (s ## \\<omega>)) =\n       (F_sup ^^ 0) (\\<lambda>x\\<in>S. 0) s", "qed simp"], ["proof (state)\nthis:\n  P_sup s\n   (\\<lambda>\\<omega>.\n       ((\\<lambda>P xs. HLD S2 xs \\<or> HLD S1 xs \\<and> nxt P xs) ^^ i)\n        \\<bottom> (s ## \\<omega>)) =\n  (F_sup ^^ i) (\\<lambda>x\\<in>S. 0) s\n\ngoal (1 subgoal):\n 1. UNIV = UNIV", "qed simp"], ["proof (state)\nthis:\n  (\\<Squnion>i.\n      P_sup s\n       (\\<lambda>\\<omega>.\n           ((\\<lambda>P xs. HLD S2 xs \\<or> HLD S1 xs \\<and> nxt P xs) ^^ i)\n            \\<bottom> (s ## \\<omega>))) =\n  (\\<Squnion>i. (F_sup ^^ i) (\\<lambda>x\\<in>S. 0) s)\n\ngoal (1 subgoal):\n 1. p = lfp F_sup", "finally"], ["proof (chain)\npicking this:\n  P_sup s (\\<lambda>\\<omega>. (HLD S1 suntil HLD S2) (s ## \\<omega>)) =\n  (\\<Squnion>i. (F_sup ^^ i) (\\<lambda>x\\<in>S. 0) s)", "have \"lfp F_sup s = P_sup s (\\<lambda>\\<omega>. (HLD S1 suntil HLD S2) (s ## \\<omega>))\""], ["proof (prove)\nusing this:\n  P_sup s (\\<lambda>\\<omega>. (HLD S1 suntil HLD S2) (s ## \\<omega>)) =\n  (\\<Squnion>i. (F_sup ^^ i) (\\<lambda>x\\<in>S. 0) s)\n\ngoal (1 subgoal):\n 1. lfp F_sup s =\n    P_sup s (\\<lambda>\\<omega>. (HLD S1 suntil HLD S2) (s ## \\<omega>))", "by (simp add: lfp_F_sup_iterate image_comp)"], ["proof (state)\nthis:\n  lfp F_sup s =\n  P_sup s (\\<lambda>\\<omega>. (HLD S1 suntil HLD S2) (s ## \\<omega>))\n\ngoal (1 subgoal):\n 1. p = lfp F_sup", "}"], ["proof (state)\nthis:\n  ?s3 \\<in> S \\<Longrightarrow>\n  lfp F_sup ?s3 =\n  P_sup ?s3 (\\<lambda>\\<omega>. (HLD S1 suntil HLD S2) (?s3 ## \\<omega>))\n\ngoal (1 subgoal):\n 1. p = lfp F_sup", "moreover"], ["proof (state)\nthis:\n  ?s3 \\<in> S \\<Longrightarrow>\n  lfp F_sup ?s3 =\n  P_sup ?s3 (\\<lambda>\\<omega>. (HLD S1 suntil HLD S2) (?s3 ## \\<omega>))\n\ngoal (1 subgoal):\n 1. p = lfp F_sup", "have \"\\<And>s. s \\<notin> S \\<Longrightarrow> lfp F_sup s = undefined\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s. s \\<notin> S \\<Longrightarrow> lfp F_sup s = undefined", "by (subst lfp_unfold[OF mono_F_sup]) (auto simp add: F_sup_def)"], ["proof (state)\nthis:\n  ?s1 \\<notin> S \\<Longrightarrow> lfp F_sup ?s1 = undefined\n\ngoal (1 subgoal):\n 1. p = lfp F_sup", "ultimately"], ["proof (chain)\npicking this:\n  ?s3 \\<in> S \\<Longrightarrow>\n  lfp F_sup ?s3 =\n  P_sup ?s3 (\\<lambda>\\<omega>. (HLD S1 suntil HLD S2) (?s3 ## \\<omega>))\n  ?s1 \\<notin> S \\<Longrightarrow> lfp F_sup ?s1 = undefined", "show ?thesis"], ["proof (prove)\nusing this:\n  ?s3 \\<in> S \\<Longrightarrow>\n  lfp F_sup ?s3 =\n  P_sup ?s3 (\\<lambda>\\<omega>. (HLD S1 suntil HLD S2) (?s3 ## \\<omega>))\n  ?s1 \\<notin> S \\<Longrightarrow> lfp F_sup ?s1 = undefined\n\ngoal (1 subgoal):\n 1. p = lfp F_sup", "by (auto simp: p_def)"], ["proof (state)\nthis:\n  p = lfp F_sup\n\ngoal:\nNo subgoals!", "qed"], ["", "definition \"S\\<^sub>e = {s\\<in>S. p s = 0}\""], ["", "lemma S\\<^sub>e: \"S\\<^sub>e \\<subseteq> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S\\<^sub>e \\<subseteq> S", "by (auto simp add: S\\<^sub>e_def)"], ["", "lemma v_S\\<^sub>e: \"cfg \\<in> valid_cfg \\<Longrightarrow> state cfg \\<in> S\\<^sub>e \\<Longrightarrow> v cfg = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>cfg \\<in> valid_cfg; state cfg \\<in> S\\<^sub>e\\<rbrakk>\n    \\<Longrightarrow> v cfg = 0", "using p_eq_0_imp[of cfg]"], ["proof (prove)\nusing this:\n  \\<lbrakk>cfg \\<in> valid_cfg; p (state cfg) = 0\\<rbrakk>\n  \\<Longrightarrow> v cfg = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>cfg \\<in> valid_cfg; state cfg \\<in> S\\<^sub>e\\<rbrakk>\n    \\<Longrightarrow> v cfg = 0", "by (auto simp: S\\<^sub>e_def)"], ["", "lemma S\\<^sub>e_nS2: \"S\\<^sub>e \\<inter> S2 = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S\\<^sub>e \\<inter> S2 = {}", "by (auto simp: S\\<^sub>e_def)"], ["", "lemma S\\<^sub>e_E1: \"s \\<in> S\\<^sub>e \\<inter> S1 \\<Longrightarrow> (s, t) \\<in> E \\<Longrightarrow> t \\<in> S\\<^sub>e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<in> S\\<^sub>e \\<inter> S1; (s, t) \\<in> E\\<rbrakk>\n    \\<Longrightarrow> t \\<in> S\\<^sub>e", "unfolding S\\<^sub>e_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<in> {s \\<in> S. p s = 0} \\<inter> S1;\n     (s, t) \\<in> E\\<rbrakk>\n    \\<Longrightarrow> t \\<in> {s \\<in> S. p s = 0}", "using S1"], ["proof (prove)\nusing this:\n  S1 \\<subseteq> S\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<in> {s \\<in> S. p s = 0} \\<inter> S1;\n     (s, t) \\<in> E\\<rbrakk>\n    \\<Longrightarrow> t \\<in> {s \\<in> S. p s = 0}", "by (auto simp: p_S1 SUP_eq_iff K_wf nn_integral_0_iff_AE AE_measure_pmf_iff E_def\n           intro: set_pmf_closed antisym\n           cong: rev_conj_cong)"], ["", "lemma S\\<^sub>e_E2: \"s \\<in> S1 \\<Longrightarrow> (\\<And>t. (s, t) \\<in> E \\<Longrightarrow> t \\<in> S\\<^sub>e) \\<Longrightarrow> s \\<in> S\\<^sub>e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<in> S1;\n     \\<And>t. (s, t) \\<in> E \\<Longrightarrow> t \\<in> S\\<^sub>e\\<rbrakk>\n    \\<Longrightarrow> s \\<in> S\\<^sub>e", "unfolding S\\<^sub>e_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<in> S1;\n     \\<And>t.\n        (s, t) \\<in> E \\<Longrightarrow>\n        t \\<in> {s \\<in> S. p s = 0}\\<rbrakk>\n    \\<Longrightarrow> s \\<in> {s \\<in> S. p s = 0}", "using S1 S1_S2"], ["proof (prove)\nusing this:\n  S1 \\<subseteq> S\n  S1 \\<inter> S2 = {}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<in> S1;\n     \\<And>t.\n        (s, t) \\<in> E \\<Longrightarrow>\n        t \\<in> {s \\<in> S. p s = 0}\\<rbrakk>\n    \\<Longrightarrow> s \\<in> {s \\<in> S. p s = 0}", "by (force simp: p_S1 SUP_eq_iff K_wf nn_integral_0_iff_AE AE_measure_pmf_iff E_def\n            cong: rev_conj_cong)"], ["", "lemma S\\<^sub>e_E_iff: \"s \\<in> S1 \\<Longrightarrow> s \\<in> S\\<^sub>e \\<longleftrightarrow> (\\<forall>t. (s, t) \\<in> E \\<longrightarrow> t \\<in> S\\<^sub>e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> S1 \\<Longrightarrow>\n    (s \\<in> S\\<^sub>e) =\n    (\\<forall>t. (s, t) \\<in> E \\<longrightarrow> t \\<in> S\\<^sub>e)", "using S\\<^sub>e_E1[of s] S\\<^sub>e_E2[of s]"], ["proof (prove)\nusing this:\n  \\<lbrakk>s \\<in> S\\<^sub>e \\<inter> S1; (s, ?t) \\<in> E\\<rbrakk>\n  \\<Longrightarrow> ?t \\<in> S\\<^sub>e\n  \\<lbrakk>s \\<in> S1;\n   \\<And>t. (s, t) \\<in> E \\<Longrightarrow> t \\<in> S\\<^sub>e\\<rbrakk>\n  \\<Longrightarrow> s \\<in> S\\<^sub>e\n\ngoal (1 subgoal):\n 1. s \\<in> S1 \\<Longrightarrow>\n    (s \\<in> S\\<^sub>e) =\n    (\\<forall>t. (s, t) \\<in> E \\<longrightarrow> t \\<in> S\\<^sub>e)", "by blast"], ["", "definition \"S\\<^sub>r = S - (S\\<^sub>e \\<union> S2)\""], ["", "lemma S\\<^sub>r: \"S\\<^sub>r \\<subseteq> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S\\<^sub>r \\<subseteq> S", "by (auto simp: S\\<^sub>r_def)"], ["", "lemma S\\<^sub>r_S1: \"S\\<^sub>r \\<subseteq> S1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S\\<^sub>r \\<subseteq> S1", "by (auto simp: p_nS12 S\\<^sub>r_def S\\<^sub>e_def)"], ["", "lemma S\\<^sub>r_eq: \"S\\<^sub>r = S1 - S\\<^sub>e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S\\<^sub>r = S1 - S\\<^sub>e", "using S1_S2 S1 S2"], ["proof (prove)\nusing this:\n  S1 \\<inter> S2 = {}\n  S1 \\<subseteq> S\n  S2 \\<subseteq> S\n\ngoal (1 subgoal):\n 1. S\\<^sub>r = S1 - S\\<^sub>e", "by (auto simp add: S\\<^sub>r_def S\\<^sub>e_def p_nS12)"], ["", "lemma v_neq_0_imp: \"cfg \\<in> valid_cfg \\<Longrightarrow> v cfg \\<noteq> 0 \\<Longrightarrow> state cfg \\<in> S\\<^sub>r \\<union> S2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>cfg \\<in> valid_cfg; v cfg \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> state cfg \\<in> S\\<^sub>r \\<union> S2", "using p_eq_0_imp[of cfg]"], ["proof (prove)\nusing this:\n  \\<lbrakk>cfg \\<in> valid_cfg; p (state cfg) = 0\\<rbrakk>\n  \\<Longrightarrow> v cfg = 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>cfg \\<in> valid_cfg; v cfg \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> state cfg \\<in> S\\<^sub>r \\<union> S2", "by (auto simp add: S\\<^sub>r_def S\\<^sub>e_def valid_cfg_state_in_S)"], ["", "lemma valid_cfg_action_in_K: \"cfg \\<in> valid_cfg \\<Longrightarrow> action cfg \\<in> K (state cfg)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cfg \\<in> valid_cfg \\<Longrightarrow> action cfg \\<in> K (state cfg)", "by (auto dest!: valid_cfgD)"], ["", "lemma K_cfg_E: \"cfg \\<in> valid_cfg \\<Longrightarrow> cfg' \\<in> K_cfg cfg \\<Longrightarrow> (state cfg, state cfg') \\<in> E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>cfg \\<in> valid_cfg; cfg' \\<in> set_pmf (K_cfg cfg)\\<rbrakk>\n    \\<Longrightarrow> (state cfg, state cfg') \\<in> E", "by (auto simp: E_def K_cfg_def valid_cfg_action_in_K)"], ["", "lemma S\\<^sub>r_directed_towards_S2:\n  assumes s: \"s \\<in> S\\<^sub>r\"\n  shows \"s \\<in> directed_towards S2 {(s, t) | s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E}\" (is \"s \\<in> ?D\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> directed_towards S2\n             {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. s \\<in> directed_towards S2\n             {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E}", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. s \\<in> directed_towards S2\n             {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E}", "fix cfg"], ["proof (state)\ngoal (1 subgoal):\n 1. s \\<in> directed_towards S2\n             {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E}", "assume \"s \\<notin> ?D\" \"cfg \\<in> cfg_on s\""], ["proof (state)\nthis:\n  s \\<notin> directed_towards S2\n              {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E}\n  cfg \\<in> cfg_on s\n\ngoal (1 subgoal):\n 1. s \\<in> directed_towards S2\n             {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E}", "with s S\\<^sub>r"], ["proof (chain)\npicking this:\n  s \\<in> S\\<^sub>r\n  S\\<^sub>r \\<subseteq> S\n  s \\<notin> directed_towards S2\n              {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E}\n  cfg \\<in> cfg_on s", "have \"state cfg \\<in> S\\<^sub>r\" \"state cfg \\<notin> ?D\" \"cfg \\<in> valid_cfg\""], ["proof (prove)\nusing this:\n  s \\<in> S\\<^sub>r\n  S\\<^sub>r \\<subseteq> S\n  s \\<notin> directed_towards S2\n              {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E}\n  cfg \\<in> cfg_on s\n\ngoal (1 subgoal):\n 1. state cfg \\<in> S\\<^sub>r &&&\n    state cfg\n    \\<notin> directed_towards S2\n              {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E} &&&\n    cfg \\<in> valid_cfg", "by (auto intro: valid_cfgI)"], ["proof (state)\nthis:\n  state cfg \\<in> S\\<^sub>r\n  state cfg\n  \\<notin> directed_towards S2\n            {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E}\n  cfg \\<in> valid_cfg\n\ngoal (1 subgoal):\n 1. s \\<in> directed_towards S2\n             {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E}", "then"], ["proof (chain)\npicking this:\n  state cfg \\<in> S\\<^sub>r\n  state cfg\n  \\<notin> directed_towards S2\n            {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E}\n  cfg \\<in> valid_cfg", "have \"v cfg = 0\""], ["proof (prove)\nusing this:\n  state cfg \\<in> S\\<^sub>r\n  state cfg\n  \\<notin> directed_towards S2\n            {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E}\n  cfg \\<in> valid_cfg\n\ngoal (1 subgoal):\n 1. v cfg = 0", "proof (coinduction arbitrary: cfg rule: v_eq_0_coinduct)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>cfga.\n       \\<lbrakk>state cfg \\<in> S\\<^sub>r;\n        state cfg\n        \\<notin> directed_towards S2\n                  {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E};\n        cfg \\<in> valid_cfg;\n        \\<exists>cfg__.\n           cfga = cfg__ \\<and>\n           state cfg__ \\<in> S\\<^sub>r \\<and>\n           state cfg__\n           \\<notin> directed_towards S2\n                     {(s, t) |s t.\n                      s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E} \\<and>\n           cfg__ \\<in> valid_cfg\\<rbrakk>\n       \\<Longrightarrow> cfga \\<in> valid_cfg\n 2. \\<And>cfga.\n       \\<lbrakk>state cfg \\<in> S\\<^sub>r;\n        state cfg\n        \\<notin> directed_towards S2\n                  {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E};\n        cfg \\<in> valid_cfg;\n        \\<exists>cfg__.\n           cfga = cfg__ \\<and>\n           state cfg__ \\<in> S\\<^sub>r \\<and>\n           state cfg__\n           \\<notin> directed_towards S2\n                     {(s, t) |s t.\n                      s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E} \\<and>\n           cfg__ \\<in> valid_cfg\\<rbrakk>\n       \\<Longrightarrow> state cfga \\<notin> S2\n 3. \\<And>cfg' cfga__.\n       \\<lbrakk>state cfga__ \\<in> S\\<^sub>r;\n        state cfga__\n        \\<notin> directed_towards S2\n                  {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E};\n        cfga__ \\<in> valid_cfg; state cfga__ \\<in> S1;\n        cfg' \\<in> set_pmf (K_cfg cfga__)\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>cfg__.\n                             cfg' = cfg__ \\<and>\n                             state cfg__ \\<in> S\\<^sub>r \\<and>\n                             state cfg__\n                             \\<notin> directed_towards S2\n {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E} \\<and>\n                             cfg__ \\<in> valid_cfg) \\<or>\n                         v cfg' = 0", "case (cont cfg' cfg)"], ["proof (state)\nthis:\n  state cfg \\<in> S\\<^sub>r\n  state cfg\n  \\<notin> directed_towards S2\n            {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E}\n  cfg \\<in> valid_cfg\n  state cfg \\<in> S1\n  cfg' \\<in> set_pmf (K_cfg cfg)\n\ngoal (3 subgoals):\n 1. \\<And>cfga.\n       \\<lbrakk>state cfg__ \\<in> S\\<^sub>r;\n        state cfg__\n        \\<notin> directed_towards S2\n                  {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E};\n        cfg__ \\<in> valid_cfg;\n        \\<exists>cfg__.\n           cfga = cfg__ \\<and>\n           state cfg__ \\<in> S\\<^sub>r \\<and>\n           state cfg__\n           \\<notin> directed_towards S2\n                     {(s, t) |s t.\n                      s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E} \\<and>\n           cfg__ \\<in> valid_cfg\\<rbrakk>\n       \\<Longrightarrow> cfga \\<in> valid_cfg\n 2. \\<And>cfga.\n       \\<lbrakk>state cfg__ \\<in> S\\<^sub>r;\n        state cfg__\n        \\<notin> directed_towards S2\n                  {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E};\n        cfg__ \\<in> valid_cfg;\n        \\<exists>cfg__.\n           cfga = cfg__ \\<and>\n           state cfg__ \\<in> S\\<^sub>r \\<and>\n           state cfg__\n           \\<notin> directed_towards S2\n                     {(s, t) |s t.\n                      s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E} \\<and>\n           cfg__ \\<in> valid_cfg\\<rbrakk>\n       \\<Longrightarrow> state cfga \\<notin> S2\n 3. \\<And>cfg' cfga__.\n       \\<lbrakk>state cfga__ \\<in> S\\<^sub>r;\n        state cfga__\n        \\<notin> directed_towards S2\n                  {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E};\n        cfga__ \\<in> valid_cfg; state cfga__ \\<in> S1;\n        cfg' \\<in> set_pmf (K_cfg cfga__)\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>cfg__.\n                             cfg' = cfg__ \\<and>\n                             state cfg__ \\<in> S\\<^sub>r \\<and>\n                             state cfg__\n                             \\<notin> directed_towards S2\n {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E} \\<and>\n                             cfg__ \\<in> valid_cfg) \\<or>\n                         v cfg' = 0", "with v_neq_0_imp[of cfg']"], ["proof (chain)\npicking this:\n  \\<lbrakk>cfg' \\<in> valid_cfg; v cfg' \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> state cfg' \\<in> S\\<^sub>r \\<union> S2\n  state cfg \\<in> S\\<^sub>r\n  state cfg\n  \\<notin> directed_towards S2\n            {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E}\n  cfg \\<in> valid_cfg\n  state cfg \\<in> S1\n  cfg' \\<in> set_pmf (K_cfg cfg)", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>cfg' \\<in> valid_cfg; v cfg' \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> state cfg' \\<in> S\\<^sub>r \\<union> S2\n  state cfg \\<in> S\\<^sub>r\n  state cfg\n  \\<notin> directed_towards S2\n            {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E}\n  cfg \\<in> valid_cfg\n  state cfg \\<in> S1\n  cfg' \\<in> set_pmf (K_cfg cfg)\n\ngoal (1 subgoal):\n 1. (\\<exists>cfg__.\n        cfg' = cfg__ \\<and>\n        state cfg__ \\<in> S\\<^sub>r \\<and>\n        state cfg__\n        \\<notin> directed_towards S2\n                  {(s, t) |s t.\n                   s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E} \\<and>\n        cfg__ \\<in> valid_cfg) \\<or>\n    v cfg' = 0", "by (auto intro: directed_towards.intros K_cfg_E)"], ["proof (state)\nthis:\n  (\\<exists>cfg__.\n      cfg' = cfg__ \\<and>\n      state cfg__ \\<in> S\\<^sub>r \\<and>\n      state cfg__\n      \\<notin> directed_towards S2\n                {(s, t) |s t.\n                 s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E} \\<and>\n      cfg__ \\<in> valid_cfg) \\<or>\n  v cfg' = 0\n\ngoal (2 subgoals):\n 1. \\<And>cfga.\n       \\<lbrakk>state cfg__ \\<in> S\\<^sub>r;\n        state cfg__\n        \\<notin> directed_towards S2\n                  {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E};\n        cfg__ \\<in> valid_cfg;\n        \\<exists>cfg__.\n           cfga = cfg__ \\<and>\n           state cfg__ \\<in> S\\<^sub>r \\<and>\n           state cfg__\n           \\<notin> directed_towards S2\n                     {(s, t) |s t.\n                      s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E} \\<and>\n           cfg__ \\<in> valid_cfg\\<rbrakk>\n       \\<Longrightarrow> cfga \\<in> valid_cfg\n 2. \\<And>cfga.\n       \\<lbrakk>state cfg__ \\<in> S\\<^sub>r;\n        state cfg__\n        \\<notin> directed_towards S2\n                  {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E};\n        cfg__ \\<in> valid_cfg;\n        \\<exists>cfg__.\n           cfga = cfg__ \\<and>\n           state cfg__ \\<in> S\\<^sub>r \\<and>\n           state cfg__\n           \\<notin> directed_towards S2\n                     {(s, t) |s t.\n                      s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E} \\<and>\n           cfg__ \\<in> valid_cfg\\<rbrakk>\n       \\<Longrightarrow> state cfga \\<notin> S2", "qed (auto intro: directed_towards.intros)"], ["proof (state)\nthis:\n  v cfg = 0\n\ngoal (1 subgoal):\n 1. s \\<in> directed_towards S2\n             {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E}", "}"], ["proof (state)\nthis:\n  \\<lbrakk>s \\<notin> directed_towards S2\n                       {(s, t) |s t.\n                        s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E};\n   ?cfg3 \\<in> cfg_on s\\<rbrakk>\n  \\<Longrightarrow> v ?cfg3 = 0\n\ngoal (1 subgoal):\n 1. s \\<in> directed_towards S2\n             {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E}", "with p_eq_0_iff[of s] s"], ["proof (chain)\npicking this:\n  s \\<in> S \\<Longrightarrow>\n  (p s = 0) = (\\<forall>cfg\\<in>cfg_on s. v cfg = 0)\n  s \\<in> S\\<^sub>r\n  \\<lbrakk>s \\<notin> directed_towards S2\n                       {(s, t) |s t.\n                        s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E};\n   ?cfg3 \\<in> cfg_on s\\<rbrakk>\n  \\<Longrightarrow> v ?cfg3 = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  s \\<in> S \\<Longrightarrow>\n  (p s = 0) = (\\<forall>cfg\\<in>cfg_on s. v cfg = 0)\n  s \\<in> S\\<^sub>r\n  \\<lbrakk>s \\<notin> directed_towards S2\n                       {(s, t) |s t.\n                        s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E};\n   ?cfg3 \\<in> cfg_on s\\<rbrakk>\n  \\<Longrightarrow> v ?cfg3 = 0\n\ngoal (1 subgoal):\n 1. s \\<in> directed_towards S2\n             {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E}", "unfolding S\\<^sub>r_def S\\<^sub>e_def"], ["proof (prove)\nusing this:\n  s \\<in> S \\<Longrightarrow>\n  (p s = 0) = (\\<forall>cfg\\<in>cfg_on s. v cfg = 0)\n  s \\<in> S - ({s \\<in> S. p s = 0} \\<union> S2)\n  \\<lbrakk>s \\<notin> directed_towards S2\n                       {(s, t) |s t.\n                        s \\<in> S -\n                                ({s \\<in> S. p s = 0} \\<union> S2) \\<and>\n                        (s, t) \\<in> E};\n   ?cfg3 \\<in> cfg_on s\\<rbrakk>\n  \\<Longrightarrow> v ?cfg3 = 0\n\ngoal (1 subgoal):\n 1. s \\<in> directed_towards S2\n             {(s, t) |s t.\n              s \\<in> S - ({s \\<in> S. p s = 0} \\<union> S2) \\<and>\n              (s, t) \\<in> E}", "by blast"], ["proof (state)\nthis:\n  s \\<in> directed_towards S2\n           {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E}\n\ngoal:\nNo subgoals!", "qed"], ["", "definition \"proper ct \\<longleftrightarrow> ct \\<in> Pi\\<^sub>E S K \\<and> (\\<forall>s\\<in>S\\<^sub>r. v (simple ct s) > 0)\""], ["", "lemma S\\<^sub>r_nS2: \"s \\<in> S\\<^sub>r \\<Longrightarrow> s \\<notin> S2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> S\\<^sub>r \\<Longrightarrow> s \\<notin> S2", "by (auto simp: S\\<^sub>r_def)"], ["", "lemma properD1: \"proper ct \\<Longrightarrow> ct \\<in> Pi\\<^sub>E S K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proper ct \\<Longrightarrow> ct \\<in> Pi\\<^sub>E S K", "by (auto simp: proper_def)"], ["", "lemma proper_eq:\n  assumes ct[simp, intro]: \"ct \\<in> Pi\\<^sub>E S K\"\n  shows \"proper ct \\<longleftrightarrow> S\\<^sub>r \\<subseteq> directed_towards S2 (SIGMA s:S\\<^sub>r. ct s)\"\n    (is \"_ \\<longleftrightarrow> _ \\<subseteq> ?D\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. proper ct =\n    (S\\<^sub>r\n     \\<subseteq> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. proper ct =\n    (S\\<^sub>r\n     \\<subseteq> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x)))", "have *[simp]: \"\\<And>s. s \\<in> S\\<^sub>r \\<Longrightarrow> s \\<in> S\" and ct': \"ct \\<in> Pi S K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s. s \\<in> S\\<^sub>r \\<Longrightarrow> s \\<in> S) &&&\n    ct \\<in> Pi S K", "using ct"], ["proof (prove)\nusing this:\n  ct \\<in> Pi\\<^sub>E S K\n\ngoal (1 subgoal):\n 1. (\\<And>s. s \\<in> S\\<^sub>r \\<Longrightarrow> s \\<in> S) &&&\n    ct \\<in> Pi S K", "by (auto simp: S\\<^sub>r_def simp del: ct)"], ["proof (state)\nthis:\n  ?s1 \\<in> S\\<^sub>r \\<Longrightarrow> ?s1 \\<in> S\n  ct \\<in> Pi S K\n\ngoal (1 subgoal):\n 1. proper ct =\n    (S\\<^sub>r\n     \\<subseteq> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x)))", "{"], ["proof (state)\nthis:\n  ?s1 \\<in> S\\<^sub>r \\<Longrightarrow> ?s1 \\<in> S\n  ct \\<in> Pi S K\n\ngoal (1 subgoal):\n 1. proper ct =\n    (S\\<^sub>r\n     \\<subseteq> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x)))", "fix s t"], ["proof (state)\ngoal (1 subgoal):\n 1. proper ct =\n    (S\\<^sub>r\n     \\<subseteq> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x)))", "have \"s \\<in> S \\<Longrightarrow> t \\<in> ct s \\<Longrightarrow> t \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<in> S; t \\<in> set_pmf (ct s)\\<rbrakk>\n    \\<Longrightarrow> t \\<in> S", "using K_closed[of s] ct'"], ["proof (prove)\nusing this:\n  s \\<in> S \\<Longrightarrow> \\<Union> (set_pmf ` K s) \\<subseteq> S\n  ct \\<in> Pi S K\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<in> S; t \\<in> set_pmf (ct s)\\<rbrakk>\n    \\<Longrightarrow> t \\<in> S", "by (auto simp add: subset_eq)"], ["proof (state)\nthis:\n  \\<lbrakk>s \\<in> S; t \\<in> set_pmf (ct s)\\<rbrakk>\n  \\<Longrightarrow> t \\<in> S\n\ngoal (1 subgoal):\n 1. proper ct =\n    (S\\<^sub>r\n     \\<subseteq> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x)))", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?s3 \\<in> S; ?t3 \\<in> set_pmf (ct ?s3)\\<rbrakk>\n  \\<Longrightarrow> ?t3 \\<in> S\n\ngoal (1 subgoal):\n 1. proper ct =\n    (S\\<^sub>r\n     \\<subseteq> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x)))", "note ct_closed = this"], ["proof (state)\nthis:\n  \\<lbrakk>?s3 \\<in> S; ?t3 \\<in> set_pmf (ct ?s3)\\<rbrakk>\n  \\<Longrightarrow> ?t3 \\<in> S\n\ngoal (1 subgoal):\n 1. proper ct =\n    (S\\<^sub>r\n     \\<subseteq> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x)))", "let ?C = \"simple ct\""], ["proof (state)\ngoal (1 subgoal):\n 1. proper ct =\n    (S\\<^sub>r\n     \\<subseteq> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x)))", "from ct"], ["proof (chain)\npicking this:\n  ct \\<in> Pi\\<^sub>E S K", "have valid_C[simp]: \"\\<And>s. s \\<in> S \\<Longrightarrow> ?C s \\<in> valid_cfg\""], ["proof (prove)\nusing this:\n  ct \\<in> Pi\\<^sub>E S K\n\ngoal (1 subgoal):\n 1. \\<And>s. s \\<in> S \\<Longrightarrow> simple ct s \\<in> valid_cfg", "by (auto simp add: PiE_def)"], ["proof (state)\nthis:\n  ?s1 \\<in> S \\<Longrightarrow> simple ct ?s1 \\<in> valid_cfg\n\ngoal (1 subgoal):\n 1. proper ct =\n    (S\\<^sub>r\n     \\<subseteq> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x)))", "{"], ["proof (state)\nthis:\n  ?s1 \\<in> S \\<Longrightarrow> simple ct ?s1 \\<in> valid_cfg\n\ngoal (1 subgoal):\n 1. proper ct =\n    (S\\<^sub>r\n     \\<subseteq> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x)))", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. proper ct =\n    (S\\<^sub>r\n     \\<subseteq> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x)))", "assume \"s \\<in> ?D\""], ["proof (state)\nthis:\n  s \\<in> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x))\n\ngoal (1 subgoal):\n 1. proper ct =\n    (S\\<^sub>r\n     \\<subseteq> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x)))", "then"], ["proof (chain)\npicking this:\n  s \\<in> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x))", "have \"0 < v (?C s)\""], ["proof (prove)\nusing this:\n  s \\<in> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x))\n\ngoal (1 subgoal):\n 1. 0 < v (simple ct s)", "proof induct"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> S2 \\<Longrightarrow> 0 < v (simple ct x)\n 2. \\<And>x y.\n       \\<lbrakk>y \\<in> directed_towards S2\n                         (SIGMA x:S\\<^sub>r. set_pmf (ct x));\n        0 < v (simple ct y);\n        (x, y) \\<in> (SIGMA x:S\\<^sub>r. set_pmf (ct x))\\<rbrakk>\n       \\<Longrightarrow> 0 < v (simple ct x)", "case (step s t)"], ["proof (state)\nthis:\n  t \\<in> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x))\n  0 < v (simple ct t)\n  (s, t) \\<in> (SIGMA x:S\\<^sub>r. set_pmf (ct x))\n\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> S2 \\<Longrightarrow> 0 < v (simple ct x)\n 2. \\<And>x y.\n       \\<lbrakk>y \\<in> directed_towards S2\n                         (SIGMA x:S\\<^sub>r. set_pmf (ct x));\n        0 < v (simple ct y);\n        (x, y) \\<in> (SIGMA x:S\\<^sub>r. set_pmf (ct x))\\<rbrakk>\n       \\<Longrightarrow> 0 < v (simple ct x)", "then"], ["proof (chain)\npicking this:\n  t \\<in> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x))\n  0 < v (simple ct t)\n  (s, t) \\<in> (SIGMA x:S\\<^sub>r. set_pmf (ct x))", "have s: \"s \\<in> S\\<^sub>r\" and t: \"t \\<in> ct s\" and [simp]: \"s \\<in> S\""], ["proof (prove)\nusing this:\n  t \\<in> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x))\n  0 < v (simple ct t)\n  (s, t) \\<in> (SIGMA x:S\\<^sub>r. set_pmf (ct x))\n\ngoal (1 subgoal):\n 1. s \\<in> S\\<^sub>r &&& t \\<in> set_pmf (ct s) &&& s \\<in> S", "by auto"], ["proof (state)\nthis:\n  s \\<in> S\\<^sub>r\n  t \\<in> set_pmf (ct s)\n  s \\<in> S\n\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> S2 \\<Longrightarrow> 0 < v (simple ct x)\n 2. \\<And>x y.\n       \\<lbrakk>y \\<in> directed_towards S2\n                         (SIGMA x:S\\<^sub>r. set_pmf (ct x));\n        0 < v (simple ct y);\n        (x, y) \\<in> (SIGMA x:S\\<^sub>r. set_pmf (ct x))\\<rbrakk>\n       \\<Longrightarrow> 0 < v (simple ct x)", "with S\\<^sub>r_S1 ct"], ["proof (chain)\npicking this:\n  S\\<^sub>r \\<subseteq> S1\n  ct \\<in> Pi\\<^sub>E S K\n  s \\<in> S\\<^sub>r\n  t \\<in> set_pmf (ct s)\n  s \\<in> S", "have \"v (?C s) = (\\<integral>\\<^sup>+t. v (?C t) \\<partial>ct s)\""], ["proof (prove)\nusing this:\n  S\\<^sub>r \\<subseteq> S1\n  ct \\<in> Pi\\<^sub>E S K\n  s \\<in> S\\<^sub>r\n  t \\<in> set_pmf (ct s)\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. v (simple ct s) =\n    \\<integral>\\<^sup>+ t. v (simple ct t) \\<partial>measure_pmf (ct s)", "by (subst v_S1) (auto intro!: nn_integral_cong_AE AE_pmfI)"], ["proof (state)\nthis:\n  v (simple ct s) =\n  \\<integral>\\<^sup>+ t. v (simple ct t) \\<partial>measure_pmf (ct s)\n\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> S2 \\<Longrightarrow> 0 < v (simple ct x)\n 2. \\<And>x y.\n       \\<lbrakk>y \\<in> directed_towards S2\n                         (SIGMA x:S\\<^sub>r. set_pmf (ct x));\n        0 < v (simple ct y);\n        (x, y) \\<in> (SIGMA x:S\\<^sub>r. set_pmf (ct x))\\<rbrakk>\n       \\<Longrightarrow> 0 < v (simple ct x)", "also"], ["proof (state)\nthis:\n  v (simple ct s) =\n  \\<integral>\\<^sup>+ t. v (simple ct t) \\<partial>measure_pmf (ct s)\n\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> S2 \\<Longrightarrow> 0 < v (simple ct x)\n 2. \\<And>x y.\n       \\<lbrakk>y \\<in> directed_towards S2\n                         (SIGMA x:S\\<^sub>r. set_pmf (ct x));\n        0 < v (simple ct y);\n        (x, y) \\<in> (SIGMA x:S\\<^sub>r. set_pmf (ct x))\\<rbrakk>\n       \\<Longrightarrow> 0 < v (simple ct x)", "have \"\\<dots> \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ t. v (simple ct t)\n                       \\<partial>measure_pmf (ct s) \\<noteq>\n    0", "using ct t step"], ["proof (prove)\nusing this:\n  ct \\<in> Pi\\<^sub>E S K\n  t \\<in> set_pmf (ct s)\n  t \\<in> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x))\n  0 < v (simple ct t)\n  (s, t) \\<in> (SIGMA x:S\\<^sub>r. set_pmf (ct x))\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ t. v (simple ct t)\n                       \\<partial>measure_pmf (ct s) \\<noteq>\n    0", "by (subst nn_integral_0_iff_AE) (auto simp add: AE_measure_pmf_iff zero_less_iff_neq_zero)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ t. v (simple ct t)\n                     \\<partial>measure_pmf (ct s) \\<noteq>\n  0\n\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> S2 \\<Longrightarrow> 0 < v (simple ct x)\n 2. \\<And>x y.\n       \\<lbrakk>y \\<in> directed_towards S2\n                         (SIGMA x:S\\<^sub>r. set_pmf (ct x));\n        0 < v (simple ct y);\n        (x, y) \\<in> (SIGMA x:S\\<^sub>r. set_pmf (ct x))\\<rbrakk>\n       \\<Longrightarrow> 0 < v (simple ct x)", "finally"], ["proof (chain)\npicking this:\n  v (simple ct s) \\<noteq> 0", "show ?case"], ["proof (prove)\nusing this:\n  v (simple ct s) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < v (simple ct s)", "using ct"], ["proof (prove)\nusing this:\n  v (simple ct s) \\<noteq> 0\n  ct \\<in> Pi\\<^sub>E S K\n\ngoal (1 subgoal):\n 1. 0 < v (simple ct s)", "by (auto simp add: less_le)"], ["proof (state)\nthis:\n  0 < v (simple ct s)\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> S2 \\<Longrightarrow> 0 < v (simple ct x)", "qed (subst v_S2, insert S2, auto)"], ["proof (state)\nthis:\n  0 < v (simple ct s)\n\ngoal (1 subgoal):\n 1. proper ct =\n    (S\\<^sub>r\n     \\<subseteq> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x)))", "}"], ["proof (state)\nthis:\n  ?s3\n  \\<in> directed_towards S2\n         (SIGMA x:S\\<^sub>r. set_pmf (ct x)) \\<Longrightarrow>\n  0 < v (simple ct ?s3)\n\ngoal (1 subgoal):\n 1. proper ct =\n    (S\\<^sub>r\n     \\<subseteq> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x)))", "moreover"], ["proof (state)\nthis:\n  ?s3\n  \\<in> directed_towards S2\n         (SIGMA x:S\\<^sub>r. set_pmf (ct x)) \\<Longrightarrow>\n  0 < v (simple ct ?s3)\n\ngoal (1 subgoal):\n 1. proper ct =\n    (S\\<^sub>r\n     \\<subseteq> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x)))", "{"], ["proof (state)\nthis:\n  ?s3\n  \\<in> directed_towards S2\n         (SIGMA x:S\\<^sub>r. set_pmf (ct x)) \\<Longrightarrow>\n  0 < v (simple ct ?s3)\n\ngoal (1 subgoal):\n 1. proper ct =\n    (S\\<^sub>r\n     \\<subseteq> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x)))", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. proper ct =\n    (S\\<^sub>r\n     \\<subseteq> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x)))", "assume s: \"s \\<notin> ?D\" \"s \\<in> S\\<^sub>r\""], ["proof (state)\nthis:\n  s \\<notin> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x))\n  s \\<in> S\\<^sub>r\n\ngoal (1 subgoal):\n 1. proper ct =\n    (S\\<^sub>r\n     \\<subseteq> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x)))", "with ct'"], ["proof (chain)\npicking this:\n  ct \\<in> Pi S K\n  s \\<notin> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x))\n  s \\<in> S\\<^sub>r", "have C: \"?C s \\<in> cfg_on s\" and [simp]: \"s \\<in> S\""], ["proof (prove)\nusing this:\n  ct \\<in> Pi S K\n  s \\<notin> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x))\n  s \\<in> S\\<^sub>r\n\ngoal (1 subgoal):\n 1. simple ct s \\<in> cfg_on s &&& s \\<in> S", "by auto"], ["proof (state)\nthis:\n  simple ct s \\<in> cfg_on s\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. proper ct =\n    (S\\<^sub>r\n     \\<subseteq> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x)))", "from s"], ["proof (chain)\npicking this:\n  s \\<notin> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x))\n  s \\<in> S\\<^sub>r", "have \"v (?C s) = 0\""], ["proof (prove)\nusing this:\n  s \\<notin> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x))\n  s \\<in> S\\<^sub>r\n\ngoal (1 subgoal):\n 1. v (simple ct s) = 0", "proof (coinduction arbitrary: s rule: v_eq_0_coinduct)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>cfg.\n       \\<lbrakk>s \\<notin> directed_towards S2\n                            (SIGMA x:S\\<^sub>r. set_pmf (ct x));\n        s \\<in> S\\<^sub>r;\n        \\<exists>s.\n           cfg = simple ct s \\<and>\n           s \\<notin> directed_towards S2\n                       (SIGMA x:S\\<^sub>r. set_pmf (ct x)) \\<and>\n           s \\<in> S\\<^sub>r\\<rbrakk>\n       \\<Longrightarrow> cfg \\<in> valid_cfg\n 2. \\<And>cfg.\n       \\<lbrakk>s \\<notin> directed_towards S2\n                            (SIGMA x:S\\<^sub>r. set_pmf (ct x));\n        s \\<in> S\\<^sub>r;\n        \\<exists>s.\n           cfg = simple ct s \\<and>\n           s \\<notin> directed_towards S2\n                       (SIGMA x:S\\<^sub>r. set_pmf (ct x)) \\<and>\n           s \\<in> S\\<^sub>r\\<rbrakk>\n       \\<Longrightarrow> state cfg \\<notin> S2\n 3. \\<And>cfg' s.\n       \\<lbrakk>s \\<notin> directed_towards S2\n                            (SIGMA x:S\\<^sub>r. set_pmf (ct x));\n        s \\<in> S\\<^sub>r; state (simple ct s) \\<in> S1;\n        cfg' \\<in> set_pmf (K_cfg (simple ct s))\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>s.\n                             cfg' = simple ct s \\<and>\n                             s \\<notin> directed_towards S2\n   (SIGMA x:S\\<^sub>r. set_pmf (ct x)) \\<and>\n                             s \\<in> S\\<^sub>r) \\<or>\n                         v cfg' = 0", "case (cont cfg s)"], ["proof (state)\nthis:\n  s \\<notin> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x))\n  s \\<in> S\\<^sub>r\n  state (simple ct s) \\<in> S1\n  cfg \\<in> set_pmf (K_cfg (simple ct s))\n\ngoal (3 subgoals):\n 1. \\<And>cfg.\n       \\<lbrakk>s__\n                \\<notin> directed_towards S2\n                          (SIGMA x:S\\<^sub>r. set_pmf (ct x));\n        s__ \\<in> S\\<^sub>r;\n        \\<exists>s.\n           cfg = simple ct s \\<and>\n           s \\<notin> directed_towards S2\n                       (SIGMA x:S\\<^sub>r. set_pmf (ct x)) \\<and>\n           s \\<in> S\\<^sub>r\\<rbrakk>\n       \\<Longrightarrow> cfg \\<in> valid_cfg\n 2. \\<And>cfg.\n       \\<lbrakk>s__\n                \\<notin> directed_towards S2\n                          (SIGMA x:S\\<^sub>r. set_pmf (ct x));\n        s__ \\<in> S\\<^sub>r;\n        \\<exists>s.\n           cfg = simple ct s \\<and>\n           s \\<notin> directed_towards S2\n                       (SIGMA x:S\\<^sub>r. set_pmf (ct x)) \\<and>\n           s \\<in> S\\<^sub>r\\<rbrakk>\n       \\<Longrightarrow> state cfg \\<notin> S2\n 3. \\<And>cfg' s.\n       \\<lbrakk>s \\<notin> directed_towards S2\n                            (SIGMA x:S\\<^sub>r. set_pmf (ct x));\n        s \\<in> S\\<^sub>r; state (simple ct s) \\<in> S1;\n        cfg' \\<in> set_pmf (K_cfg (simple ct s))\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>s.\n                             cfg' = simple ct s \\<and>\n                             s \\<notin> directed_towards S2\n   (SIGMA x:S\\<^sub>r. set_pmf (ct x)) \\<and>\n                             s \\<in> S\\<^sub>r) \\<or>\n                         v cfg' = 0", "with S1"], ["proof (chain)\npicking this:\n  S1 \\<subseteq> S\n  s \\<notin> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x))\n  s \\<in> S\\<^sub>r\n  state (simple ct s) \\<in> S1\n  cfg \\<in> set_pmf (K_cfg (simple ct s))", "obtain t where \"cfg = ?C t\" \"t \\<in> ct s\" \"s \\<in> S\""], ["proof (prove)\nusing this:\n  S1 \\<subseteq> S\n  s \\<notin> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x))\n  s \\<in> S\\<^sub>r\n  state (simple ct s) \\<in> S1\n  cfg \\<in> set_pmf (K_cfg (simple ct s))\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>cfg = simple ct t; t \\<in> set_pmf (ct s);\n         s \\<in> S\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: set_K_cfg subset_eq)"], ["proof (state)\nthis:\n  cfg = simple ct t\n  t \\<in> set_pmf (ct s)\n  s \\<in> S\n\ngoal (3 subgoals):\n 1. \\<And>cfg.\n       \\<lbrakk>s__\n                \\<notin> directed_towards S2\n                          (SIGMA x:S\\<^sub>r. set_pmf (ct x));\n        s__ \\<in> S\\<^sub>r;\n        \\<exists>s.\n           cfg = simple ct s \\<and>\n           s \\<notin> directed_towards S2\n                       (SIGMA x:S\\<^sub>r. set_pmf (ct x)) \\<and>\n           s \\<in> S\\<^sub>r\\<rbrakk>\n       \\<Longrightarrow> cfg \\<in> valid_cfg\n 2. \\<And>cfg.\n       \\<lbrakk>s__\n                \\<notin> directed_towards S2\n                          (SIGMA x:S\\<^sub>r. set_pmf (ct x));\n        s__ \\<in> S\\<^sub>r;\n        \\<exists>s.\n           cfg = simple ct s \\<and>\n           s \\<notin> directed_towards S2\n                       (SIGMA x:S\\<^sub>r. set_pmf (ct x)) \\<and>\n           s \\<in> S\\<^sub>r\\<rbrakk>\n       \\<Longrightarrow> state cfg \\<notin> S2\n 3. \\<And>cfg' s.\n       \\<lbrakk>s \\<notin> directed_towards S2\n                            (SIGMA x:S\\<^sub>r. set_pmf (ct x));\n        s \\<in> S\\<^sub>r; state (simple ct s) \\<in> S1;\n        cfg' \\<in> set_pmf (K_cfg (simple ct s))\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>s.\n                             cfg' = simple ct s \\<and>\n                             s \\<notin> directed_towards S2\n   (SIGMA x:S\\<^sub>r. set_pmf (ct x)) \\<and>\n                             s \\<in> S\\<^sub>r) \\<or>\n                         v cfg' = 0", "with cont(1,2) v_neq_0_imp[of \"?C t\"] ct_closed[of s t]"], ["proof (chain)\npicking this:\n  s \\<notin> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x))\n  s \\<in> S\\<^sub>r\n  \\<lbrakk>simple ct t \\<in> valid_cfg; v (simple ct t) \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> state (simple ct t) \\<in> S\\<^sub>r \\<union> S2\n  \\<lbrakk>s \\<in> S; t \\<in> set_pmf (ct s)\\<rbrakk>\n  \\<Longrightarrow> t \\<in> S\n  cfg = simple ct t\n  t \\<in> set_pmf (ct s)\n  s \\<in> S", "show ?case"], ["proof (prove)\nusing this:\n  s \\<notin> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x))\n  s \\<in> S\\<^sub>r\n  \\<lbrakk>simple ct t \\<in> valid_cfg; v (simple ct t) \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> state (simple ct t) \\<in> S\\<^sub>r \\<union> S2\n  \\<lbrakk>s \\<in> S; t \\<in> set_pmf (ct s)\\<rbrakk>\n  \\<Longrightarrow> t \\<in> S\n  cfg = simple ct t\n  t \\<in> set_pmf (ct s)\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. (\\<exists>s.\n        cfg = simple ct s \\<and>\n        s \\<notin> directed_towards S2\n                    (SIGMA x:S\\<^sub>r. set_pmf (ct x)) \\<and>\n        s \\<in> S\\<^sub>r) \\<or>\n    v cfg = 0", "by (intro exI[of _ t] disjCI) (auto intro: directed_towards.intros)"], ["proof (state)\nthis:\n  (\\<exists>s.\n      cfg = simple ct s \\<and>\n      s \\<notin> directed_towards S2\n                  (SIGMA x:S\\<^sub>r. set_pmf (ct x)) \\<and>\n      s \\<in> S\\<^sub>r) \\<or>\n  v cfg = 0\n\ngoal (2 subgoals):\n 1. \\<And>cfg.\n       \\<lbrakk>s__\n                \\<notin> directed_towards S2\n                          (SIGMA x:S\\<^sub>r. set_pmf (ct x));\n        s__ \\<in> S\\<^sub>r;\n        \\<exists>s.\n           cfg = simple ct s \\<and>\n           s \\<notin> directed_towards S2\n                       (SIGMA x:S\\<^sub>r. set_pmf (ct x)) \\<and>\n           s \\<in> S\\<^sub>r\\<rbrakk>\n       \\<Longrightarrow> cfg \\<in> valid_cfg\n 2. \\<And>cfg.\n       \\<lbrakk>s__\n                \\<notin> directed_towards S2\n                          (SIGMA x:S\\<^sub>r. set_pmf (ct x));\n        s__ \\<in> S\\<^sub>r;\n        \\<exists>s.\n           cfg = simple ct s \\<and>\n           s \\<notin> directed_towards S2\n                       (SIGMA x:S\\<^sub>r. set_pmf (ct x)) \\<and>\n           s \\<in> S\\<^sub>r\\<rbrakk>\n       \\<Longrightarrow> state cfg \\<notin> S2", "qed (auto simp: S\\<^sub>r_nS2)"], ["proof (state)\nthis:\n  v (simple ct s) = 0\n\ngoal (1 subgoal):\n 1. proper ct =\n    (S\\<^sub>r\n     \\<subseteq> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x)))", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?s3\n           \\<notin> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x));\n   ?s3 \\<in> S\\<^sub>r\\<rbrakk>\n  \\<Longrightarrow> v (simple ct ?s3) = 0\n\ngoal (1 subgoal):\n 1. proper ct =\n    (S\\<^sub>r\n     \\<subseteq> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x)))", "ultimately"], ["proof (chain)\npicking this:\n  ?s3\n  \\<in> directed_towards S2\n         (SIGMA x:S\\<^sub>r. set_pmf (ct x)) \\<Longrightarrow>\n  0 < v (simple ct ?s3)\n  \\<lbrakk>?s3\n           \\<notin> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x));\n   ?s3 \\<in> S\\<^sub>r\\<rbrakk>\n  \\<Longrightarrow> v (simple ct ?s3) = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  ?s3\n  \\<in> directed_towards S2\n         (SIGMA x:S\\<^sub>r. set_pmf (ct x)) \\<Longrightarrow>\n  0 < v (simple ct ?s3)\n  \\<lbrakk>?s3\n           \\<notin> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x));\n   ?s3 \\<in> S\\<^sub>r\\<rbrakk>\n  \\<Longrightarrow> v (simple ct ?s3) = 0\n\ngoal (1 subgoal):\n 1. proper ct =\n    (S\\<^sub>r\n     \\<subseteq> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x)))", "unfolding proper_def"], ["proof (prove)\nusing this:\n  ?s3\n  \\<in> directed_towards S2\n         (SIGMA x:S\\<^sub>r. set_pmf (ct x)) \\<Longrightarrow>\n  0 < v (simple ct ?s3)\n  \\<lbrakk>?s3\n           \\<notin> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x));\n   ?s3 \\<in> S\\<^sub>r\\<rbrakk>\n  \\<Longrightarrow> v (simple ct ?s3) = 0\n\ngoal (1 subgoal):\n 1. (ct \\<in> Pi\\<^sub>E S K \\<and>\n     (\\<forall>s\\<in>S\\<^sub>r. 0 < v (simple ct s))) =\n    (S\\<^sub>r\n     \\<subseteq> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x)))", "using ct"], ["proof (prove)\nusing this:\n  ?s3\n  \\<in> directed_towards S2\n         (SIGMA x:S\\<^sub>r. set_pmf (ct x)) \\<Longrightarrow>\n  0 < v (simple ct ?s3)\n  \\<lbrakk>?s3\n           \\<notin> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x));\n   ?s3 \\<in> S\\<^sub>r\\<rbrakk>\n  \\<Longrightarrow> v (simple ct ?s3) = 0\n  ct \\<in> Pi\\<^sub>E S K\n\ngoal (1 subgoal):\n 1. (ct \\<in> Pi\\<^sub>E S K \\<and>\n     (\\<forall>s\\<in>S\\<^sub>r. 0 < v (simple ct s))) =\n    (S\\<^sub>r\n     \\<subseteq> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x)))", "by (force simp del: v_nS v_S2 v_nS12 ct)"], ["proof (state)\nthis:\n  proper ct =\n  (S\\<^sub>r\n   \\<subseteq> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x)))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma exists_proper:\n  obtains ct where \"proper ct\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>ct. proper ct \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "proof atomize_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. Ex proper", "define r where \"r = rec_nat S2 (\\<lambda>_ S'. {s\\<in>S\\<^sub>r. \\<exists>t\\<in>S'. (s, t) \\<in> E})\""], ["proof (state)\nthis:\n  r =\n  rec_nat S2\n   (\\<lambda>_ S'. {s \\<in> S\\<^sub>r. \\<exists>t\\<in>S'. (s, t) \\<in> E})\n\ngoal (1 subgoal):\n 1. Ex proper", "then"], ["proof (chain)\npicking this:\n  r =\n  rec_nat S2\n   (\\<lambda>_ S'. {s \\<in> S\\<^sub>r. \\<exists>t\\<in>S'. (s, t) \\<in> E})", "have [simp]: \"r 0 = S2\" \"\\<And>n. r (Suc n) = {s\\<in>S\\<^sub>r. \\<exists>t\\<in>r n. (s, t) \\<in> E}\""], ["proof (prove)\nusing this:\n  r =\n  rec_nat S2\n   (\\<lambda>_ S'. {s \\<in> S\\<^sub>r. \\<exists>t\\<in>S'. (s, t) \\<in> E})\n\ngoal (1 subgoal):\n 1. r 0 = S2 &&&\n    (\\<And>n.\n        r (Suc n) = {s \\<in> S\\<^sub>r. \\<exists>t\\<in>r n. (s, t) \\<in> E})", "by simp_all"], ["proof (state)\nthis:\n  r 0 = S2\n  r (Suc ?n1) = {s \\<in> S\\<^sub>r. \\<exists>t\\<in>r ?n1. (s, t) \\<in> E}\n\ngoal (1 subgoal):\n 1. Ex proper", "{"], ["proof (state)\nthis:\n  r 0 = S2\n  r (Suc ?n1) = {s \\<in> S\\<^sub>r. \\<exists>t\\<in>r ?n1. (s, t) \\<in> E}\n\ngoal (1 subgoal):\n 1. Ex proper", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. Ex proper", "assume \"s \\<in> S\\<^sub>r\""], ["proof (state)\nthis:\n  s \\<in> S\\<^sub>r\n\ngoal (1 subgoal):\n 1. Ex proper", "then"], ["proof (chain)\npicking this:\n  s \\<in> S\\<^sub>r", "have \"s \\<in> directed_towards S2 {(s, t) | s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E}\""], ["proof (prove)\nusing this:\n  s \\<in> S\\<^sub>r\n\ngoal (1 subgoal):\n 1. s \\<in> directed_towards S2\n             {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E}", "by (rule S\\<^sub>r_directed_towards_S2)"], ["proof (state)\nthis:\n  s \\<in> directed_towards S2\n           {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E}\n\ngoal (1 subgoal):\n 1. Ex proper", "from this \\<open>s\\<in>S\\<^sub>r\\<close>"], ["proof (chain)\npicking this:\n  s \\<in> directed_towards S2\n           {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E}\n  s \\<in> S\\<^sub>r", "have \"\\<exists>n. s \\<in> r n\""], ["proof (prove)\nusing this:\n  s \\<in> directed_towards S2\n           {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E}\n  s \\<in> S\\<^sub>r\n\ngoal (1 subgoal):\n 1. \\<exists>n. s \\<in> r n", "proof induction"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> S2; x \\<in> S\\<^sub>r\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. x \\<in> r n\n 2. \\<And>x y.\n       \\<lbrakk>y \\<in> directed_towards S2\n                         {(s, t) |s t.\n                          s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E};\n        y \\<in> S\\<^sub>r \\<Longrightarrow> \\<exists>n. y \\<in> r n;\n        (x, y) \\<in> {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E};\n        x \\<in> S\\<^sub>r\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. x \\<in> r n", "case (step s t)"], ["proof (state)\nthis:\n  t \\<in> directed_towards S2\n           {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E}\n  (s, t) \\<in> {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E}\n  t \\<in> S\\<^sub>r \\<Longrightarrow> \\<exists>n. t \\<in> r n\n  s \\<in> S\\<^sub>r\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> S2; x \\<in> S\\<^sub>r\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. x \\<in> r n\n 2. \\<And>x y.\n       \\<lbrakk>y \\<in> directed_towards S2\n                         {(s, t) |s t.\n                          s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E};\n        y \\<in> S\\<^sub>r \\<Longrightarrow> \\<exists>n. y \\<in> r n;\n        (x, y) \\<in> {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E};\n        x \\<in> S\\<^sub>r\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. x \\<in> r n", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n. s \\<in> r n", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> \\<exists>n. s \\<in> r n\n 2. \\<not> ?P \\<Longrightarrow> \\<exists>n. s \\<in> r n", "assume \"t \\<in> S2\""], ["proof (state)\nthis:\n  t \\<in> S2\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> \\<exists>n. s \\<in> r n\n 2. \\<not> ?P \\<Longrightarrow> \\<exists>n. s \\<in> r n", "with step.prems step.hyps"], ["proof (chain)\npicking this:\n  s \\<in> S\\<^sub>r\n  t \\<in> directed_towards S2\n           {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E}\n  (s, t) \\<in> {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E}\n  t \\<in> S2", "show ?thesis"], ["proof (prove)\nusing this:\n  s \\<in> S\\<^sub>r\n  t \\<in> directed_towards S2\n           {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E}\n  (s, t) \\<in> {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E}\n  t \\<in> S2\n\ngoal (1 subgoal):\n 1. \\<exists>n. s \\<in> r n", "by (intro exI[of _ \"Suc 0\"]) force"], ["proof (state)\nthis:\n  \\<exists>n. s \\<in> r n\n\ngoal (1 subgoal):\n 1. t \\<notin> S2 \\<Longrightarrow> \\<exists>n. s \\<in> r n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. t \\<notin> S2 \\<Longrightarrow> \\<exists>n. s \\<in> r n", "assume \"t \\<notin> S2\""], ["proof (state)\nthis:\n  t \\<notin> S2\n\ngoal (1 subgoal):\n 1. t \\<notin> S2 \\<Longrightarrow> \\<exists>n. s \\<in> r n", "with step"], ["proof (chain)\npicking this:\n  t \\<in> directed_towards S2\n           {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E}\n  (s, t) \\<in> {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E}\n  t \\<in> S\\<^sub>r \\<Longrightarrow> \\<exists>n. t \\<in> r n\n  s \\<in> S\\<^sub>r\n  t \\<notin> S2", "obtain n where \"t \\<in> r n\" \"t \\<in> S\\<^sub>r\""], ["proof (prove)\nusing this:\n  t \\<in> directed_towards S2\n           {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E}\n  (s, t) \\<in> {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E}\n  t \\<in> S\\<^sub>r \\<Longrightarrow> \\<exists>n. t \\<in> r n\n  s \\<in> S\\<^sub>r\n  t \\<notin> S2\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        \\<lbrakk>t \\<in> r n; t \\<in> S\\<^sub>r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto elim: directed_towards.cases)"], ["proof (state)\nthis:\n  t \\<in> r n\n  t \\<in> S\\<^sub>r\n\ngoal (1 subgoal):\n 1. t \\<notin> S2 \\<Longrightarrow> \\<exists>n. s \\<in> r n", "with \\<open>t\\<in>S\\<^sub>r\\<close> step.hyps"], ["proof (chain)\npicking this:\n  t \\<in> S\\<^sub>r\n  t \\<in> directed_towards S2\n           {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E}\n  (s, t) \\<in> {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E}\n  t \\<in> r n\n  t \\<in> S\\<^sub>r", "show ?thesis"], ["proof (prove)\nusing this:\n  t \\<in> S\\<^sub>r\n  t \\<in> directed_towards S2\n           {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E}\n  (s, t) \\<in> {(s, t) |s t. s \\<in> S\\<^sub>r \\<and> (s, t) \\<in> E}\n  t \\<in> r n\n  t \\<in> S\\<^sub>r\n\ngoal (1 subgoal):\n 1. \\<exists>n. s \\<in> r n", "by (intro exI[of _ \"Suc n\"]) force"], ["proof (state)\nthis:\n  \\<exists>n. s \\<in> r n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>n. s \\<in> r n\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> S2; x \\<in> S\\<^sub>r\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n. x \\<in> r n", "qed (simp add: S\\<^sub>r_def)"], ["proof (state)\nthis:\n  \\<exists>n. s \\<in> r n\n\ngoal (1 subgoal):\n 1. Ex proper", "}"], ["proof (state)\nthis:\n  ?s3 \\<in> S\\<^sub>r \\<Longrightarrow> \\<exists>n. ?s3 \\<in> r n\n\ngoal (1 subgoal):\n 1. Ex proper", "note r = this"], ["proof (state)\nthis:\n  ?s3 \\<in> S\\<^sub>r \\<Longrightarrow> \\<exists>n. ?s3 \\<in> r n\n\ngoal (1 subgoal):\n 1. Ex proper", "{"], ["proof (state)\nthis:\n  ?s3 \\<in> S\\<^sub>r \\<Longrightarrow> \\<exists>n. ?s3 \\<in> r n\n\ngoal (1 subgoal):\n 1. Ex proper", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. Ex proper", "assume \"s \\<in> S\""], ["proof (state)\nthis:\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. Ex proper", "have \"\\<exists>D\\<in>K s. s \\<in> S\\<^sub>r \\<longrightarrow> (\\<exists>t\\<in>D. \\<exists>n. t \\<in> r n \\<and> (\\<forall>m. s \\<in> r m \\<longrightarrow> n < m))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>K s.\n       s \\<in> S\\<^sub>r \\<longrightarrow>\n       (\\<exists>t\\<in>set_pmf x.\n           \\<exists>n.\n              t \\<in> r n \\<and>\n              (\\<forall>m. s \\<in> r m \\<longrightarrow> n < m))", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>x\\<in>K s.\n       s \\<in> S\\<^sub>r \\<longrightarrow>\n       (\\<exists>t\\<in>set_pmf x.\n           \\<exists>n.\n              t \\<in> r n \\<and>\n              (\\<forall>m. s \\<in> r m \\<longrightarrow> n < m))\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>x\\<in>K s.\n       s \\<in> S\\<^sub>r \\<longrightarrow>\n       (\\<exists>t\\<in>set_pmf x.\n           \\<exists>n.\n              t \\<in> r n \\<and>\n              (\\<forall>m. s \\<in> r m \\<longrightarrow> n < m))", "assume s: \"s \\<in> S\\<^sub>r\""], ["proof (state)\nthis:\n  s \\<in> S\\<^sub>r\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>x\\<in>K s.\n       s \\<in> S\\<^sub>r \\<longrightarrow>\n       (\\<exists>t\\<in>set_pmf x.\n           \\<exists>n.\n              t \\<in> r n \\<and>\n              (\\<forall>m. s \\<in> r m \\<longrightarrow> n < m))\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>x\\<in>K s.\n       s \\<in> S\\<^sub>r \\<longrightarrow>\n       (\\<exists>t\\<in>set_pmf x.\n           \\<exists>n.\n              t \\<in> r n \\<and>\n              (\\<forall>m. s \\<in> r m \\<longrightarrow> n < m))", "define n where \"n = (LEAST n. s \\<in> r n)\""], ["proof (state)\nthis:\n  n = (LEAST n. s \\<in> r n)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>x\\<in>K s.\n       s \\<in> S\\<^sub>r \\<longrightarrow>\n       (\\<exists>t\\<in>set_pmf x.\n           \\<exists>n.\n              t \\<in> r n \\<and>\n              (\\<forall>m. s \\<in> r m \\<longrightarrow> n < m))\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>x\\<in>K s.\n       s \\<in> S\\<^sub>r \\<longrightarrow>\n       (\\<exists>t\\<in>set_pmf x.\n           \\<exists>n.\n              t \\<in> r n \\<and>\n              (\\<forall>m. s \\<in> r m \\<longrightarrow> n < m))", "then"], ["proof (chain)\npicking this:\n  n = (LEAST n. s \\<in> r n)", "have \"s \\<in> r n\" and n: \"\\<And>i. i < n \\<Longrightarrow> s \\<notin> r i\""], ["proof (prove)\nusing this:\n  n = (LEAST n. s \\<in> r n)\n\ngoal (1 subgoal):\n 1. s \\<in> r n &&& (\\<And>i. i < n \\<Longrightarrow> s \\<notin> r i)", "using r s"], ["proof (prove)\nusing this:\n  n = (LEAST n. s \\<in> r n)\n  ?s3 \\<in> S\\<^sub>r \\<Longrightarrow> \\<exists>n. ?s3 \\<in> r n\n  s \\<in> S\\<^sub>r\n\ngoal (1 subgoal):\n 1. s \\<in> r n &&& (\\<And>i. i < n \\<Longrightarrow> s \\<notin> r i)", "by (auto intro: LeastI_ex dest: not_less_Least)"], ["proof (state)\nthis:\n  s \\<in> r n\n  ?i1 < n \\<Longrightarrow> s \\<notin> r ?i1\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>x\\<in>K s.\n       s \\<in> S\\<^sub>r \\<longrightarrow>\n       (\\<exists>t\\<in>set_pmf x.\n           \\<exists>n.\n              t \\<in> r n \\<and>\n              (\\<forall>m. s \\<in> r m \\<longrightarrow> n < m))\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>x\\<in>K s.\n       s \\<in> S\\<^sub>r \\<longrightarrow>\n       (\\<exists>t\\<in>set_pmf x.\n           \\<exists>n.\n              t \\<in> r n \\<and>\n              (\\<forall>m. s \\<in> r m \\<longrightarrow> n < m))", "with s"], ["proof (chain)\npicking this:\n  s \\<in> S\\<^sub>r\n  s \\<in> r n\n  ?i1 < n \\<Longrightarrow> s \\<notin> r ?i1", "have \"n \\<noteq> 0\""], ["proof (prove)\nusing this:\n  s \\<in> S\\<^sub>r\n  s \\<in> r n\n  ?i1 < n \\<Longrightarrow> s \\<notin> r ?i1\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0", "by (intro notI) (auto simp: S\\<^sub>r_def)"], ["proof (state)\nthis:\n  n \\<noteq> 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>x\\<in>K s.\n       s \\<in> S\\<^sub>r \\<longrightarrow>\n       (\\<exists>t\\<in>set_pmf x.\n           \\<exists>n.\n              t \\<in> r n \\<and>\n              (\\<forall>m. s \\<in> r m \\<longrightarrow> n < m))\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>x\\<in>K s.\n       s \\<in> S\\<^sub>r \\<longrightarrow>\n       (\\<exists>t\\<in>set_pmf x.\n           \\<exists>n.\n              t \\<in> r n \\<and>\n              (\\<forall>m. s \\<in> r m \\<longrightarrow> n < m))", "then"], ["proof (chain)\npicking this:\n  n \\<noteq> 0", "obtain n' where \"n = Suc n'\""], ["proof (prove)\nusing this:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>n'. n = Suc n' \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (cases n) auto"], ["proof (state)\nthis:\n  n = Suc n'\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>x\\<in>K s.\n       s \\<in> S\\<^sub>r \\<longrightarrow>\n       (\\<exists>t\\<in>set_pmf x.\n           \\<exists>n.\n              t \\<in> r n \\<and>\n              (\\<forall>m. s \\<in> r m \\<longrightarrow> n < m))\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>x\\<in>K s.\n       s \\<in> S\\<^sub>r \\<longrightarrow>\n       (\\<exists>t\\<in>set_pmf x.\n           \\<exists>n.\n              t \\<in> r n \\<and>\n              (\\<forall>m. s \\<in> r m \\<longrightarrow> n < m))", "with \\<open>s \\<in> r n\\<close>"], ["proof (chain)\npicking this:\n  s \\<in> r n\n  n = Suc n'", "obtain t D where \"D \\<in> K s\" \"t \\<in> D\" \"t \\<in> r n'\""], ["proof (prove)\nusing this:\n  s \\<in> r n\n  n = Suc n'\n\ngoal (1 subgoal):\n 1. (\\<And>D t.\n        \\<lbrakk>D \\<in> K s; t \\<in> set_pmf D; t \\<in> r n'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: E_def)"], ["proof (state)\nthis:\n  D \\<in> K s\n  t \\<in> set_pmf D\n  t \\<in> r n'\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>x\\<in>K s.\n       s \\<in> S\\<^sub>r \\<longrightarrow>\n       (\\<exists>t\\<in>set_pmf x.\n           \\<exists>n.\n              t \\<in> r n \\<and>\n              (\\<forall>m. s \\<in> r m \\<longrightarrow> n < m))\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>x\\<in>K s.\n       s \\<in> S\\<^sub>r \\<longrightarrow>\n       (\\<exists>t\\<in>set_pmf x.\n           \\<exists>n.\n              t \\<in> r n \\<and>\n              (\\<forall>m. s \\<in> r m \\<longrightarrow> n < m))", "with n \\<open>n = Suc n'\\<close> s"], ["proof (chain)\npicking this:\n  ?i1 < n \\<Longrightarrow> s \\<notin> r ?i1\n  n = Suc n'\n  s \\<in> S\\<^sub>r\n  D \\<in> K s\n  t \\<in> set_pmf D\n  t \\<in> r n'", "show ?thesis"], ["proof (prove)\nusing this:\n  ?i1 < n \\<Longrightarrow> s \\<notin> r ?i1\n  n = Suc n'\n  s \\<in> S\\<^sub>r\n  D \\<in> K s\n  t \\<in> set_pmf D\n  t \\<in> r n'\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>K s.\n       s \\<in> S\\<^sub>r \\<longrightarrow>\n       (\\<exists>t\\<in>set_pmf x.\n           \\<exists>n.\n              t \\<in> r n \\<and>\n              (\\<forall>m. s \\<in> r m \\<longrightarrow> n < m))", "by (auto intro!: bexI[of _ D] bexI[of _ t] exI[of _ n'] simp: not_less_eq[symmetric])"], ["proof (state)\nthis:\n  \\<exists>x\\<in>K s.\n     s \\<in> S\\<^sub>r \\<longrightarrow>\n     (\\<exists>t\\<in>set_pmf x.\n         \\<exists>n.\n            t \\<in> r n \\<and>\n            (\\<forall>m. s \\<in> r m \\<longrightarrow> n < m))\n\ngoal (1 subgoal):\n 1. s \\<notin> S\\<^sub>r \\<Longrightarrow>\n    \\<exists>x\\<in>K s.\n       s \\<in> S\\<^sub>r \\<longrightarrow>\n       (\\<exists>t\\<in>set_pmf x.\n           \\<exists>n.\n              t \\<in> r n \\<and>\n              (\\<forall>m. s \\<in> r m \\<longrightarrow> n < m))", "qed (insert K_wf \\<open>s\\<in>S\\<close>, auto)"], ["proof (state)\nthis:\n  \\<exists>x\\<in>K s.\n     s \\<in> S\\<^sub>r \\<longrightarrow>\n     (\\<exists>t\\<in>set_pmf x.\n         \\<exists>n.\n            t \\<in> r n \\<and>\n            (\\<forall>m. s \\<in> r m \\<longrightarrow> n < m))\n\ngoal (1 subgoal):\n 1. Ex proper", "}"], ["proof (state)\nthis:\n  ?s3 \\<in> S \\<Longrightarrow>\n  \\<exists>x\\<in>K ?s3.\n     ?s3 \\<in> S\\<^sub>r \\<longrightarrow>\n     (\\<exists>t\\<in>set_pmf x.\n         \\<exists>n.\n            t \\<in> r n \\<and>\n            (\\<forall>m. ?s3 \\<in> r m \\<longrightarrow> n < m))\n\ngoal (1 subgoal):\n 1. Ex proper", "then"], ["proof (chain)\npicking this:\n  ?s3 \\<in> S \\<Longrightarrow>\n  \\<exists>x\\<in>K ?s3.\n     ?s3 \\<in> S\\<^sub>r \\<longrightarrow>\n     (\\<exists>t\\<in>set_pmf x.\n         \\<exists>n.\n            t \\<in> r n \\<and>\n            (\\<forall>m. ?s3 \\<in> r m \\<longrightarrow> n < m))", "obtain ct where ct: \"\\<And>s. s \\<in> S \\<Longrightarrow> ct s \\<in> K s\"\n    \"\\<And>s. s \\<in> S \\<Longrightarrow> s \\<in> S\\<^sub>r \\<Longrightarrow> \\<exists>t\\<in>ct s. \\<exists>n. t \\<in> r n \\<and> (\\<forall>m. s \\<in> r m \\<longrightarrow> n < m)\""], ["proof (prove)\nusing this:\n  ?s3 \\<in> S \\<Longrightarrow>\n  \\<exists>x\\<in>K ?s3.\n     ?s3 \\<in> S\\<^sub>r \\<longrightarrow>\n     (\\<exists>t\\<in>set_pmf x.\n         \\<exists>n.\n            t \\<in> r n \\<and>\n            (\\<forall>m. ?s3 \\<in> r m \\<longrightarrow> n < m))\n\ngoal (1 subgoal):\n 1. (\\<And>ct.\n        \\<lbrakk>\\<And>s. s \\<in> S \\<Longrightarrow> ct s \\<in> K s;\n         \\<And>s.\n            \\<lbrakk>s \\<in> S; s \\<in> S\\<^sub>r\\<rbrakk>\n            \\<Longrightarrow> \\<exists>t\\<in>set_pmf (ct s).\n                                 \\<exists>n.\n                                    t \\<in> r n \\<and>\n                                    (\\<forall>m.\n  s \\<in> r m \\<longrightarrow> n < m)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  ?s1 \\<in> S \\<Longrightarrow> ct ?s1 \\<in> K ?s1\n  \\<lbrakk>?s1 \\<in> S; ?s1 \\<in> S\\<^sub>r\\<rbrakk>\n  \\<Longrightarrow> \\<exists>t\\<in>set_pmf (ct ?s1).\n                       \\<exists>n.\n                          t \\<in> r n \\<and>\n                          (\\<forall>m.\n                              ?s1 \\<in> r m \\<longrightarrow> n < m)\n\ngoal (1 subgoal):\n 1. Ex proper", "then"], ["proof (chain)\npicking this:\n  ?s1 \\<in> S \\<Longrightarrow> ct ?s1 \\<in> K ?s1\n  \\<lbrakk>?s1 \\<in> S; ?s1 \\<in> S\\<^sub>r\\<rbrakk>\n  \\<Longrightarrow> \\<exists>t\\<in>set_pmf (ct ?s1).\n                       \\<exists>n.\n                          t \\<in> r n \\<and>\n                          (\\<forall>m.\n                              ?s1 \\<in> r m \\<longrightarrow> n < m)", "have *: \"restrict ct S \\<in> Pi\\<^sub>E S K\""], ["proof (prove)\nusing this:\n  ?s1 \\<in> S \\<Longrightarrow> ct ?s1 \\<in> K ?s1\n  \\<lbrakk>?s1 \\<in> S; ?s1 \\<in> S\\<^sub>r\\<rbrakk>\n  \\<Longrightarrow> \\<exists>t\\<in>set_pmf (ct ?s1).\n                       \\<exists>n.\n                          t \\<in> r n \\<and>\n                          (\\<forall>m.\n                              ?s1 \\<in> r m \\<longrightarrow> n < m)\n\ngoal (1 subgoal):\n 1. restrict ct S \\<in> Pi\\<^sub>E S K", "by auto"], ["proof (state)\nthis:\n  restrict ct S \\<in> Pi\\<^sub>E S K\n\ngoal (1 subgoal):\n 1. Ex proper", "moreover"], ["proof (state)\nthis:\n  restrict ct S \\<in> Pi\\<^sub>E S K\n\ngoal (1 subgoal):\n 1. Ex proper", "{"], ["proof (state)\nthis:\n  restrict ct S \\<in> Pi\\<^sub>E S K\n\ngoal (1 subgoal):\n 1. Ex proper", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. Ex proper", "assume \"s \\<in> S\\<^sub>r\""], ["proof (state)\nthis:\n  s \\<in> S\\<^sub>r\n\ngoal (1 subgoal):\n 1. Ex proper", "then"], ["proof (chain)\npicking this:\n  s \\<in> S\\<^sub>r", "obtain n where \"s \\<in> r n\""], ["proof (prove)\nusing this:\n  s \\<in> S\\<^sub>r\n\ngoal (1 subgoal):\n 1. (\\<And>n. s \\<in> r n \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (metis r)"], ["proof (state)\nthis:\n  s \\<in> r n\n\ngoal (1 subgoal):\n 1. Ex proper", "with \\<open>s \\<in> S\\<^sub>r\\<close>"], ["proof (chain)\npicking this:\n  s \\<in> S\\<^sub>r\n  s \\<in> r n", "have \"s \\<in> directed_towards S2 (SIGMA s : S\\<^sub>r. ct s)\""], ["proof (prove)\nusing this:\n  s \\<in> S\\<^sub>r\n  s \\<in> r n\n\ngoal (1 subgoal):\n 1. s \\<in> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x))", "proof (induction n arbitrary: s rule: less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>y s.\n                   \\<lbrakk>y < x; s \\<in> S\\<^sub>r; s \\<in> r y\\<rbrakk>\n                   \\<Longrightarrow> s \\<in> directed_towards S2\n        (SIGMA x:S\\<^sub>r. set_pmf (ct x));\n        s \\<in> S\\<^sub>r; s \\<in> r x\\<rbrakk>\n       \\<Longrightarrow> s \\<in> directed_towards S2\n                                  (SIGMA x:S\\<^sub>r. set_pmf (ct x))", "case (less n s)"], ["proof (state)\nthis:\n  \\<lbrakk>?y1 < n; ?s1 \\<in> S\\<^sub>r; ?s1 \\<in> r ?y1\\<rbrakk>\n  \\<Longrightarrow> ?s1\n                    \\<in> directed_towards S2\n                           (SIGMA x:S\\<^sub>r. set_pmf (ct x))\n  s \\<in> S\\<^sub>r\n  s \\<in> r n\n\ngoal (1 subgoal):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>y s.\n                   \\<lbrakk>y < x; s \\<in> S\\<^sub>r; s \\<in> r y\\<rbrakk>\n                   \\<Longrightarrow> s \\<in> directed_towards S2\n        (SIGMA x:S\\<^sub>r. set_pmf (ct x));\n        s \\<in> S\\<^sub>r; s \\<in> r x\\<rbrakk>\n       \\<Longrightarrow> s \\<in> directed_towards S2\n                                  (SIGMA x:S\\<^sub>r. set_pmf (ct x))", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>?y1 < n; ?s1 \\<in> S\\<^sub>r; ?s1 \\<in> r ?y1\\<rbrakk>\n  \\<Longrightarrow> ?s1\n                    \\<in> directed_towards S2\n                           (SIGMA x:S\\<^sub>r. set_pmf (ct x))\n  s \\<in> S\\<^sub>r\n  s \\<in> r n\n\ngoal (1 subgoal):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>y s.\n                   \\<lbrakk>y < x; s \\<in> S\\<^sub>r; s \\<in> r y\\<rbrakk>\n                   \\<Longrightarrow> s \\<in> directed_towards S2\n        (SIGMA x:S\\<^sub>r. set_pmf (ct x));\n        s \\<in> S\\<^sub>r; s \\<in> r x\\<rbrakk>\n       \\<Longrightarrow> s \\<in> directed_towards S2\n                                  (SIGMA x:S\\<^sub>r. set_pmf (ct x))", "with S\\<^sub>r"], ["proof (chain)\npicking this:\n  S\\<^sub>r \\<subseteq> S\n  \\<lbrakk>?y1 < n; ?s1 \\<in> S\\<^sub>r; ?s1 \\<in> r ?y1\\<rbrakk>\n  \\<Longrightarrow> ?s1\n                    \\<in> directed_towards S2\n                           (SIGMA x:S\\<^sub>r. set_pmf (ct x))\n  s \\<in> S\\<^sub>r\n  s \\<in> r n", "have \"s \\<in> S\""], ["proof (prove)\nusing this:\n  S\\<^sub>r \\<subseteq> S\n  \\<lbrakk>?y1 < n; ?s1 \\<in> S\\<^sub>r; ?s1 \\<in> r ?y1\\<rbrakk>\n  \\<Longrightarrow> ?s1\n                    \\<in> directed_towards S2\n                           (SIGMA x:S\\<^sub>r. set_pmf (ct x))\n  s \\<in> S\\<^sub>r\n  s \\<in> r n\n\ngoal (1 subgoal):\n 1. s \\<in> S", "by auto"], ["proof (state)\nthis:\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>y s.\n                   \\<lbrakk>y < x; s \\<in> S\\<^sub>r; s \\<in> r y\\<rbrakk>\n                   \\<Longrightarrow> s \\<in> directed_towards S2\n        (SIGMA x:S\\<^sub>r. set_pmf (ct x));\n        s \\<in> S\\<^sub>r; s \\<in> r x\\<rbrakk>\n       \\<Longrightarrow> s \\<in> directed_towards S2\n                                  (SIGMA x:S\\<^sub>r. set_pmf (ct x))", "ultimately"], ["proof (chain)\npicking this:\n  \\<lbrakk>?y1 < n; ?s1 \\<in> S\\<^sub>r; ?s1 \\<in> r ?y1\\<rbrakk>\n  \\<Longrightarrow> ?s1\n                    \\<in> directed_towards S2\n                           (SIGMA x:S\\<^sub>r. set_pmf (ct x))\n  s \\<in> S\\<^sub>r\n  s \\<in> r n\n  s \\<in> S", "obtain t m where \"t \\<in> ct s\" \"t \\<in> r m\" \"m < n\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?y1 < n; ?s1 \\<in> S\\<^sub>r; ?s1 \\<in> r ?y1\\<rbrakk>\n  \\<Longrightarrow> ?s1\n                    \\<in> directed_towards S2\n                           (SIGMA x:S\\<^sub>r. set_pmf (ct x))\n  s \\<in> S\\<^sub>r\n  s \\<in> r n\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. (\\<And>t m.\n        \\<lbrakk>t \\<in> set_pmf (ct s); t \\<in> r m; m < n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using ct[of s]"], ["proof (prove)\nusing this:\n  \\<lbrakk>?y1 < n; ?s1 \\<in> S\\<^sub>r; ?s1 \\<in> r ?y1\\<rbrakk>\n  \\<Longrightarrow> ?s1\n                    \\<in> directed_towards S2\n                           (SIGMA x:S\\<^sub>r. set_pmf (ct x))\n  s \\<in> S\\<^sub>r\n  s \\<in> r n\n  s \\<in> S\n  s \\<in> S \\<Longrightarrow> ct s \\<in> K s\n  \\<lbrakk>s \\<in> S; s \\<in> S\\<^sub>r\\<rbrakk>\n  \\<Longrightarrow> \\<exists>t\\<in>set_pmf (ct s).\n                       \\<exists>n.\n                          t \\<in> r n \\<and>\n                          (\\<forall>m. s \\<in> r m \\<longrightarrow> n < m)\n\ngoal (1 subgoal):\n 1. (\\<And>t m.\n        \\<lbrakk>t \\<in> set_pmf (ct s); t \\<in> r m; m < n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: E_def)"], ["proof (state)\nthis:\n  t \\<in> set_pmf (ct s)\n  t \\<in> r m\n  m < n\n\ngoal (1 subgoal):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>y s.\n                   \\<lbrakk>y < x; s \\<in> S\\<^sub>r; s \\<in> r y\\<rbrakk>\n                   \\<Longrightarrow> s \\<in> directed_towards S2\n        (SIGMA x:S\\<^sub>r. set_pmf (ct x));\n        s \\<in> S\\<^sub>r; s \\<in> r x\\<rbrakk>\n       \\<Longrightarrow> s \\<in> directed_towards S2\n                                  (SIGMA x:S\\<^sub>r. set_pmf (ct x))", "with less.IH[of m t] \\<open>s \\<in> S\\<^sub>r\\<close>"], ["proof (chain)\npicking this:\n  \\<lbrakk>m < n; t \\<in> S\\<^sub>r; t \\<in> r m\\<rbrakk>\n  \\<Longrightarrow> t \\<in> directed_towards S2\n                             (SIGMA x:S\\<^sub>r. set_pmf (ct x))\n  s \\<in> S\\<^sub>r\n  t \\<in> set_pmf (ct s)\n  t \\<in> r m\n  m < n", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>m < n; t \\<in> S\\<^sub>r; t \\<in> r m\\<rbrakk>\n  \\<Longrightarrow> t \\<in> directed_towards S2\n                             (SIGMA x:S\\<^sub>r. set_pmf (ct x))\n  s \\<in> S\\<^sub>r\n  t \\<in> set_pmf (ct s)\n  t \\<in> r m\n  m < n\n\ngoal (1 subgoal):\n 1. s \\<in> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x))", "by (cases m) (auto intro: directed_towards.intros)"], ["proof (state)\nthis:\n  s \\<in> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  s \\<in> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x))\n\ngoal (1 subgoal):\n 1. Ex proper", "}"], ["proof (state)\nthis:\n  ?s3 \\<in> S\\<^sub>r \\<Longrightarrow>\n  ?s3 \\<in> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x))\n\ngoal (1 subgoal):\n 1. Ex proper", "ultimately"], ["proof (chain)\npicking this:\n  restrict ct S \\<in> Pi\\<^sub>E S K\n  ?s3 \\<in> S\\<^sub>r \\<Longrightarrow>\n  ?s3 \\<in> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x))", "show \"\\<exists>ct. proper ct\""], ["proof (prove)\nusing this:\n  restrict ct S \\<in> Pi\\<^sub>E S K\n  ?s3 \\<in> S\\<^sub>r \\<Longrightarrow>\n  ?s3 \\<in> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x))\n\ngoal (1 subgoal):\n 1. Ex proper", "using S\\<^sub>r S2"], ["proof (prove)\nusing this:\n  restrict ct S \\<in> Pi\\<^sub>E S K\n  ?s3 \\<in> S\\<^sub>r \\<Longrightarrow>\n  ?s3 \\<in> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct x))\n  S\\<^sub>r \\<subseteq> S\n  S2 \\<subseteq> S\n\ngoal (1 subgoal):\n 1. Ex proper", "by (auto simp: proper_eq[OF *] subset_eq\n             intro!: exI[of _ \"restrict ct S\"]\n             cong: Sigma_cong)"], ["proof (state)\nthis:\n  Ex proper\n\ngoal:\nNo subgoals!", "qed"], ["", "definition \"l_desc X ct l s \\<longleftrightarrow>\n    s \\<in> directed_towards S2 (SIGMA s : X. {l s}) \\<and>\n    v (simple ct s) \\<le> v (simple ct (l s)) \\<and>\n    l s \\<in> maximal (\\<lambda>s. v (simple ct s)) (ct s)\""], ["", "lemma exists_l_desc:\n  assumes ct: \"proper ct\"\n  shows \"\\<exists>l\\<in>S\\<^sub>r \\<rightarrow> S\\<^sub>r \\<union> S2. \\<forall>s\\<in>S\\<^sub>r. l_desc S\\<^sub>r ct l s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>l\\<in>S\\<^sub>r \\<rightarrow> S\\<^sub>r \\<union> S2.\n       \\<forall>s\\<in>S\\<^sub>r. l_desc S\\<^sub>r ct l s", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>l\\<in>S\\<^sub>r \\<rightarrow> S\\<^sub>r \\<union> S2.\n       \\<forall>s\\<in>S\\<^sub>r. l_desc S\\<^sub>r ct l s", "have ct_closed: \"\\<And>s t. s \\<in> S \\<Longrightarrow> t \\<in> ct s \\<Longrightarrow> t \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s t.\n       \\<lbrakk>s \\<in> S; t \\<in> set_pmf (ct s)\\<rbrakk>\n       \\<Longrightarrow> t \\<in> S", "using ct K_closed"], ["proof (prove)\nusing this:\n  proper ct\n  ?s \\<in> S \\<Longrightarrow> \\<Union> (set_pmf ` K ?s) \\<subseteq> S\n\ngoal (1 subgoal):\n 1. \\<And>s t.\n       \\<lbrakk>s \\<in> S; t \\<in> set_pmf (ct s)\\<rbrakk>\n       \\<Longrightarrow> t \\<in> S", "by (auto simp: proper_def PiE_iff)"], ["proof (state)\nthis:\n  \\<lbrakk>?s1 \\<in> S; ?t1 \\<in> set_pmf (ct ?s1)\\<rbrakk>\n  \\<Longrightarrow> ?t1 \\<in> S\n\ngoal (1 subgoal):\n 1. \\<exists>l\\<in>S\\<^sub>r \\<rightarrow> S\\<^sub>r \\<union> S2.\n       \\<forall>s\\<in>S\\<^sub>r. l_desc S\\<^sub>r ct l s", "have ct_Pi: \"ct \\<in> Pi S K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ct \\<in> Pi S K", "using ct"], ["proof (prove)\nusing this:\n  proper ct\n\ngoal (1 subgoal):\n 1. ct \\<in> Pi S K", "by (auto simp: proper_def)"], ["proof (state)\nthis:\n  ct \\<in> Pi S K\n\ngoal (1 subgoal):\n 1. \\<exists>l\\<in>S\\<^sub>r \\<rightarrow> S\\<^sub>r \\<union> S2.\n       \\<forall>s\\<in>S\\<^sub>r. l_desc S\\<^sub>r ct l s", "have \"finite S\\<^sub>r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite S\\<^sub>r", "using S_finite"], ["proof (prove)\nusing this:\n  finite S\n\ngoal (1 subgoal):\n 1. finite S\\<^sub>r", "by (auto simp: S\\<^sub>r_def)"], ["proof (state)\nthis:\n  finite S\\<^sub>r\n\ngoal (1 subgoal):\n 1. \\<exists>l\\<in>S\\<^sub>r \\<rightarrow> S\\<^sub>r \\<union> S2.\n       \\<forall>s\\<in>S\\<^sub>r. l_desc S\\<^sub>r ct l s", "then"], ["proof (chain)\npicking this:\n  finite S\\<^sub>r", "show ?thesis"], ["proof (prove)\nusing this:\n  finite S\\<^sub>r\n\ngoal (1 subgoal):\n 1. \\<exists>l\\<in>S\\<^sub>r \\<rightarrow> S\\<^sub>r \\<union> S2.\n       \\<forall>s\\<in>S\\<^sub>r. l_desc S\\<^sub>r ct l s", "proof (induct rule: finite_induct_select)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>l\\<in>{} \\<rightarrow> {} \\<union> S2.\n       \\<forall>s\\<in>{}. l_desc {} ct l s\n 2. \\<And>T.\n       \\<lbrakk>T \\<subset> S\\<^sub>r;\n        \\<exists>l\\<in>T \\<rightarrow> T \\<union> S2.\n           \\<forall>s\\<in>T. l_desc T ct l s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s\\<in>S\\<^sub>r - T.\n                            \\<exists>l\\<in>insert s T \\<rightarrow>\n     insert s T \\<union> S2.\n                               \\<forall>sa\\<in>insert s T.\n                                  l_desc (insert s T) ct l sa", "case (select X)"], ["proof (state)\nthis:\n  X \\<subset> S\\<^sub>r\n  \\<exists>l\\<in>X \\<rightarrow> X \\<union> S2.\n     \\<forall>s\\<in>X. l_desc X ct l s\n\ngoal (2 subgoals):\n 1. \\<exists>l\\<in>{} \\<rightarrow> {} \\<union> S2.\n       \\<forall>s\\<in>{}. l_desc {} ct l s\n 2. \\<And>T.\n       \\<lbrakk>T \\<subset> S\\<^sub>r;\n        \\<exists>l\\<in>T \\<rightarrow> T \\<union> S2.\n           \\<forall>s\\<in>T. l_desc T ct l s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s\\<in>S\\<^sub>r - T.\n                            \\<exists>l\\<in>insert s T \\<rightarrow>\n     insert s T \\<union> S2.\n                               \\<forall>sa\\<in>insert s T.\n                                  l_desc (insert s T) ct l sa", "then"], ["proof (chain)\npicking this:\n  X \\<subset> S\\<^sub>r\n  \\<exists>l\\<in>X \\<rightarrow> X \\<union> S2.\n     \\<forall>s\\<in>X. l_desc X ct l s", "obtain l where l: \"l \\<in> X \\<rightarrow> X \\<union> S2\" and desc: \"\\<And>s. s \\<in> X \\<Longrightarrow> l_desc X ct l s\""], ["proof (prove)\nusing this:\n  X \\<subset> S\\<^sub>r\n  \\<exists>l\\<in>X \\<rightarrow> X \\<union> S2.\n     \\<forall>s\\<in>X. l_desc X ct l s\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>l \\<in> X \\<rightarrow> X \\<union> S2;\n         \\<And>s. s \\<in> X \\<Longrightarrow> l_desc X ct l s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  l \\<in> X \\<rightarrow> X \\<union> S2\n  ?s1 \\<in> X \\<Longrightarrow> l_desc X ct l ?s1\n\ngoal (2 subgoals):\n 1. \\<exists>l\\<in>{} \\<rightarrow> {} \\<union> S2.\n       \\<forall>s\\<in>{}. l_desc {} ct l s\n 2. \\<And>T.\n       \\<lbrakk>T \\<subset> S\\<^sub>r;\n        \\<exists>l\\<in>T \\<rightarrow> T \\<union> S2.\n           \\<forall>s\\<in>T. l_desc T ct l s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s\\<in>S\\<^sub>r - T.\n                            \\<exists>l\\<in>insert s T \\<rightarrow>\n     insert s T \\<union> S2.\n                               \\<forall>sa\\<in>insert s T.\n                                  l_desc (insert s T) ct l sa", "obtain x where x: \"x \\<in> S\\<^sub>r - X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x.\n        x \\<in> S\\<^sub>r - X \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using \\<open>X \\<subset> S\\<^sub>r\\<close>"], ["proof (prove)\nusing this:\n  X \\<subset> S\\<^sub>r\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        x \\<in> S\\<^sub>r - X \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> S\\<^sub>r - X\n\ngoal (2 subgoals):\n 1. \\<exists>l\\<in>{} \\<rightarrow> {} \\<union> S2.\n       \\<forall>s\\<in>{}. l_desc {} ct l s\n 2. \\<And>T.\n       \\<lbrakk>T \\<subset> S\\<^sub>r;\n        \\<exists>l\\<in>T \\<rightarrow> T \\<union> S2.\n           \\<forall>s\\<in>T. l_desc T ct l s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s\\<in>S\\<^sub>r - T.\n                            \\<exists>l\\<in>insert s T \\<rightarrow>\n     insert s T \\<union> S2.\n                               \\<forall>sa\\<in>insert s T.\n                                  l_desc (insert s T) ct l sa", "then"], ["proof (chain)\npicking this:\n  x \\<in> S\\<^sub>r - X", "have \"x \\<in> S\""], ["proof (prove)\nusing this:\n  x \\<in> S\\<^sub>r - X\n\ngoal (1 subgoal):\n 1. x \\<in> S", "by (auto simp: S\\<^sub>r_def)"], ["proof (state)\nthis:\n  x \\<in> S\n\ngoal (2 subgoals):\n 1. \\<exists>l\\<in>{} \\<rightarrow> {} \\<union> S2.\n       \\<forall>s\\<in>{}. l_desc {} ct l s\n 2. \\<And>T.\n       \\<lbrakk>T \\<subset> S\\<^sub>r;\n        \\<exists>l\\<in>T \\<rightarrow> T \\<union> S2.\n           \\<forall>s\\<in>T. l_desc T ct l s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s\\<in>S\\<^sub>r - T.\n                            \\<exists>l\\<in>insert s T \\<rightarrow>\n     insert s T \\<union> S2.\n                               \\<forall>sa\\<in>insert s T.\n                                  l_desc (insert s T) ct l sa", "let ?C = \"simple ct\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>l\\<in>{} \\<rightarrow> {} \\<union> S2.\n       \\<forall>s\\<in>{}. l_desc {} ct l s\n 2. \\<And>T.\n       \\<lbrakk>T \\<subset> S\\<^sub>r;\n        \\<exists>l\\<in>T \\<rightarrow> T \\<union> S2.\n           \\<forall>s\\<in>T. l_desc T ct l s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s\\<in>S\\<^sub>r - T.\n                            \\<exists>l\\<in>insert s T \\<rightarrow>\n     insert s T \\<union> S2.\n                               \\<forall>sa\\<in>insert s T.\n                                  l_desc (insert s T) ct l sa", "let ?v = \"\\<lambda>s. v (?C s)\" and ?E = \"\\<lambda>s. set_pmf (ct s)\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>l\\<in>{} \\<rightarrow> {} \\<union> S2.\n       \\<forall>s\\<in>{}. l_desc {} ct l s\n 2. \\<And>T.\n       \\<lbrakk>T \\<subset> S\\<^sub>r;\n        \\<exists>l\\<in>T \\<rightarrow> T \\<union> S2.\n           \\<forall>s\\<in>T. l_desc T ct l s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s\\<in>S\\<^sub>r - T.\n                            \\<exists>l\\<in>insert s T \\<rightarrow>\n     insert s T \\<union> S2.\n                               \\<forall>sa\\<in>insert s T.\n                                  l_desc (insert s T) ct l sa", "let ?M = \"\\<lambda>s. maximal ?v (?E s)\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>l\\<in>{} \\<rightarrow> {} \\<union> S2.\n       \\<forall>s\\<in>{}. l_desc {} ct l s\n 2. \\<And>T.\n       \\<lbrakk>T \\<subset> S\\<^sub>r;\n        \\<exists>l\\<in>T \\<rightarrow> T \\<union> S2.\n           \\<forall>s\\<in>T. l_desc T ct l s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s\\<in>S\\<^sub>r - T.\n                            \\<exists>l\\<in>insert s T \\<rightarrow>\n     insert s T \\<union> S2.\n                               \\<forall>sa\\<in>insert s T.\n                                  l_desc (insert s T) ct l sa", "have finite_E[simp]: \"\\<And>s. s \\<in> S \\<Longrightarrow> finite (?E s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s. s \\<in> S \\<Longrightarrow> finite (set_pmf (ct s))", "using K_closed ct"], ["proof (prove)\nusing this:\n  ?s \\<in> S \\<Longrightarrow> \\<Union> (set_pmf ` K ?s) \\<subseteq> S\n  proper ct\n\ngoal (1 subgoal):\n 1. \\<And>s. s \\<in> S \\<Longrightarrow> finite (set_pmf (ct s))", "by (intro finite_subset[OF _ S_finite]) (auto simp: proper_def subset_eq)"], ["proof (state)\nthis:\n  ?s1 \\<in> S \\<Longrightarrow> finite (set_pmf (ct ?s1))\n\ngoal (2 subgoals):\n 1. \\<exists>l\\<in>{} \\<rightarrow> {} \\<union> S2.\n       \\<forall>s\\<in>{}. l_desc {} ct l s\n 2. \\<And>T.\n       \\<lbrakk>T \\<subset> S\\<^sub>r;\n        \\<exists>l\\<in>T \\<rightarrow> T \\<union> S2.\n           \\<forall>s\\<in>T. l_desc T ct l s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s\\<in>S\\<^sub>r - T.\n                            \\<exists>l\\<in>insert s T \\<rightarrow>\n     insert s T \\<union> S2.\n                               \\<forall>sa\\<in>insert s T.\n                                  l_desc (insert s T) ct l sa", "have valid_C[simp]: \"\\<And>s. s \\<in> S \\<Longrightarrow> ?C s \\<in> valid_cfg\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s. s \\<in> S \\<Longrightarrow> simple ct s \\<in> valid_cfg", "using ct"], ["proof (prove)\nusing this:\n  proper ct\n\ngoal (1 subgoal):\n 1. \\<And>s. s \\<in> S \\<Longrightarrow> simple ct s \\<in> valid_cfg", "by (auto simp: proper_def intro!: simple_valid_cfg)"], ["proof (state)\nthis:\n  ?s1 \\<in> S \\<Longrightarrow> simple ct ?s1 \\<in> valid_cfg\n\ngoal (2 subgoals):\n 1. \\<exists>l\\<in>{} \\<rightarrow> {} \\<union> S2.\n       \\<forall>s\\<in>{}. l_desc {} ct l s\n 2. \\<And>T.\n       \\<lbrakk>T \\<subset> S\\<^sub>r;\n        \\<exists>l\\<in>T \\<rightarrow> T \\<union> S2.\n           \\<forall>s\\<in>T. l_desc T ct l s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s\\<in>S\\<^sub>r - T.\n                            \\<exists>l\\<in>insert s T \\<rightarrow>\n     insert s T \\<union> S2.\n                               \\<forall>sa\\<in>insert s T.\n                                  l_desc (insert s T) ct l sa", "have E_ne[simp]: \"\\<And>s. ?E s \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s. set_pmf (ct s) \\<noteq> {}", "by (rule set_pmf_not_empty)"], ["proof (state)\nthis:\n  set_pmf (ct ?s1) \\<noteq> {}\n\ngoal (2 subgoals):\n 1. \\<exists>l\\<in>{} \\<rightarrow> {} \\<union> S2.\n       \\<forall>s\\<in>{}. l_desc {} ct l s\n 2. \\<And>T.\n       \\<lbrakk>T \\<subset> S\\<^sub>r;\n        \\<exists>l\\<in>T \\<rightarrow> T \\<union> S2.\n           \\<forall>s\\<in>T. l_desc T ct l s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s\\<in>S\\<^sub>r - T.\n                            \\<exists>l\\<in>insert s T \\<rightarrow>\n     insert s T \\<union> S2.\n                               \\<forall>sa\\<in>insert s T.\n                                  l_desc (insert s T) ct l sa", "have \"\\<exists>s\\<in>S\\<^sub>r - X. \\<exists>t\\<in>?M s. t \\<in> S2 \\<union> X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>s\\<in>S\\<^sub>r - X.\n       \\<exists>t\\<in>maximal (\\<lambda>s. v (simple ct s))\n                       (set_pmf (ct s)).\n          t \\<in> S2 \\<union> X", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>s\\<in>S\\<^sub>r - X.\n               \\<exists>t\\<in>maximal (\\<lambda>s. v (simple ct s))\n                               (set_pmf (ct s)).\n                  t \\<in> S2 \\<union> X) \\<Longrightarrow>\n    False", "assume \"\\<not> ?thesis\""], ["proof (state)\nthis:\n  \\<not> (\\<exists>s\\<in>S\\<^sub>r - X.\n             \\<exists>t\\<in>maximal (\\<lambda>s. v (simple ct s))\n                             (set_pmf (ct s)).\n                t \\<in> S2 \\<union> X)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>s\\<in>S\\<^sub>r - X.\n               \\<exists>t\\<in>maximal (\\<lambda>s. v (simple ct s))\n                               (set_pmf (ct s)).\n                  t \\<in> S2 \\<union> X) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<exists>s\\<in>S\\<^sub>r - X.\n             \\<exists>t\\<in>maximal (\\<lambda>s. v (simple ct s))\n                             (set_pmf (ct s)).\n                t \\<in> S2 \\<union> X)", "have not_M: \"\\<And>s. s \\<in> S\\<^sub>r - X \\<Longrightarrow> ?M s \\<inter> (S2 \\<union> X) = {}\""], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>s\\<in>S\\<^sub>r - X.\n             \\<exists>t\\<in>maximal (\\<lambda>s. v (simple ct s))\n                             (set_pmf (ct s)).\n                t \\<in> S2 \\<union> X)\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> S\\<^sub>r - X \\<Longrightarrow>\n       maximal (\\<lambda>s. v (simple ct s)) (set_pmf (ct s)) \\<inter>\n       (S2 \\<union> X) =\n       {}", "by auto"], ["proof (state)\nthis:\n  ?s1 \\<in> S\\<^sub>r - X \\<Longrightarrow>\n  maximal (\\<lambda>s. v (simple ct s)) (set_pmf (ct ?s1)) \\<inter>\n  (S2 \\<union> X) =\n  {}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>s\\<in>S\\<^sub>r - X.\n               \\<exists>t\\<in>maximal (\\<lambda>s. v (simple ct s))\n                               (set_pmf (ct s)).\n                  t \\<in> S2 \\<union> X) \\<Longrightarrow>\n    False", "let ?S\\<^sub>m = \"maximal ?v (S\\<^sub>r - X)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>s\\<in>S\\<^sub>r - X.\n               \\<exists>t\\<in>maximal (\\<lambda>s. v (simple ct s))\n                               (set_pmf (ct s)).\n                  t \\<in> S2 \\<union> X) \\<Longrightarrow>\n    False", "have \"finite (S\\<^sub>r - X)\" \"S\\<^sub>r - X \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (S\\<^sub>r - X) &&& S\\<^sub>r - X \\<noteq> {}", "using \\<open>X \\<subset> S\\<^sub>r\\<close>"], ["proof (prove)\nusing this:\n  X \\<subset> S\\<^sub>r\n\ngoal (1 subgoal):\n 1. finite (S\\<^sub>r - X) &&& S\\<^sub>r - X \\<noteq> {}", "by (auto intro!: finite_subset[OF _ S_finite] simp: S\\<^sub>r_def)"], ["proof (state)\nthis:\n  finite (S\\<^sub>r - X)\n  S\\<^sub>r - X \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>s\\<in>S\\<^sub>r - X.\n               \\<exists>t\\<in>maximal (\\<lambda>s. v (simple ct s))\n                               (set_pmf (ct s)).\n                  t \\<in> S2 \\<union> X) \\<Longrightarrow>\n    False", "from maximal_ne[OF this]"], ["proof (chain)\npicking this:\n  maximal ?f (S\\<^sub>r - X) \\<noteq> {}", "obtain s\\<^sub>m where s\\<^sub>m: \"s\\<^sub>m \\<in> ?S\\<^sub>m\""], ["proof (prove)\nusing this:\n  maximal ?f (S\\<^sub>r - X) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>s\\<^sub>m.\n        s\\<^sub>m\n        \\<in> maximal (\\<lambda>s. v (simple ct s))\n               (S\\<^sub>r - X) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  s\\<^sub>m \\<in> maximal (\\<lambda>s. v (simple ct s)) (S\\<^sub>r - X)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>s\\<in>S\\<^sub>r - X.\n               \\<exists>t\\<in>maximal (\\<lambda>s. v (simple ct s))\n                               (set_pmf (ct s)).\n                  t \\<in> S2 \\<union> X) \\<Longrightarrow>\n    False", "have \"\\<exists>s\\<^sub>0\\<in>?S\\<^sub>m. \\<exists>t\\<in>?E s\\<^sub>0. t \\<notin> ?S\\<^sub>m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>s\\<^sub>0\n             \\<in>maximal (\\<lambda>s. v (simple ct s)) (S\\<^sub>r - X).\n       \\<exists>t\\<in>set_pmf (ct s\\<^sub>0).\n          t \\<notin> maximal (\\<lambda>s. v (simple ct s)) (S\\<^sub>r - X)", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>s\\<^sub>0\n                     \\<in>maximal (\\<lambda>s. v (simple ct s))\n                           (S\\<^sub>r - X).\n               \\<exists>t\\<in>set_pmf (ct s\\<^sub>0).\n                  t \\<notin> maximal (\\<lambda>s. v (simple ct s))\n                              (S\\<^sub>r - X)) \\<Longrightarrow>\n    False", "assume \"\\<not> ?thesis\""], ["proof (state)\nthis:\n  \\<not> (\\<exists>s\\<^sub>0\n                   \\<in>maximal (\\<lambda>s. v (simple ct s))\n                         (S\\<^sub>r - X).\n             \\<exists>t\\<in>set_pmf (ct s\\<^sub>0).\n                t \\<notin> maximal (\\<lambda>s. v (simple ct s))\n                            (S\\<^sub>r - X))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>s\\<^sub>0\n                     \\<in>maximal (\\<lambda>s. v (simple ct s))\n                           (S\\<^sub>r - X).\n               \\<exists>t\\<in>set_pmf (ct s\\<^sub>0).\n                  t \\<notin> maximal (\\<lambda>s. v (simple ct s))\n                              (S\\<^sub>r - X)) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<exists>s\\<^sub>0\n                   \\<in>maximal (\\<lambda>s. v (simple ct s))\n                         (S\\<^sub>r - X).\n             \\<exists>t\\<in>set_pmf (ct s\\<^sub>0).\n                t \\<notin> maximal (\\<lambda>s. v (simple ct s))\n                            (S\\<^sub>r - X))", "have S\\<^sub>m: \"\\<And>s\\<^sub>0 t. s\\<^sub>0 \\<in> ?S\\<^sub>m \\<Longrightarrow> t \\<in> ?E s\\<^sub>0 \\<Longrightarrow> t \\<in> ?S\\<^sub>m\""], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>s\\<^sub>0\n                   \\<in>maximal (\\<lambda>s. v (simple ct s))\n                         (S\\<^sub>r - X).\n             \\<exists>t\\<in>set_pmf (ct s\\<^sub>0).\n                t \\<notin> maximal (\\<lambda>s. v (simple ct s))\n                            (S\\<^sub>r - X))\n\ngoal (1 subgoal):\n 1. \\<And>s\\<^sub>0 t.\n       \\<lbrakk>s\\<^sub>0\n                \\<in> maximal (\\<lambda>s. v (simple ct s)) (S\\<^sub>r - X);\n        t \\<in> set_pmf (ct s\\<^sub>0)\\<rbrakk>\n       \\<Longrightarrow> t \\<in> maximal (\\<lambda>s. v (simple ct s))\n                                  (S\\<^sub>r - X)", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>?s\\<^sub>01\n           \\<in> maximal (\\<lambda>s. v (simple ct s)) (S\\<^sub>r - X);\n   ?t1 \\<in> set_pmf (ct ?s\\<^sub>01)\\<rbrakk>\n  \\<Longrightarrow> ?t1\n                    \\<in> maximal (\\<lambda>s. v (simple ct s))\n                           (S\\<^sub>r - X)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>s\\<^sub>0\n                     \\<in>maximal (\\<lambda>s. v (simple ct s))\n                           (S\\<^sub>r - X).\n               \\<exists>t\\<in>set_pmf (ct s\\<^sub>0).\n                  t \\<notin> maximal (\\<lambda>s. v (simple ct s))\n                              (S\\<^sub>r - X)) \\<Longrightarrow>\n    False", "from \\<open>s\\<^sub>m \\<in> ?S\\<^sub>m\\<close>"], ["proof (chain)\npicking this:\n  s\\<^sub>m \\<in> maximal (\\<lambda>s. v (simple ct s)) (S\\<^sub>r - X)", "have [simp]: \"s\\<^sub>m \\<in> S\" and \"s\\<^sub>m \\<in> S\\<^sub>r\""], ["proof (prove)\nusing this:\n  s\\<^sub>m \\<in> maximal (\\<lambda>s. v (simple ct s)) (S\\<^sub>r - X)\n\ngoal (1 subgoal):\n 1. s\\<^sub>m \\<in> S &&& s\\<^sub>m \\<in> S\\<^sub>r", "by (auto simp: S\\<^sub>r_def dest: maximalD1)"], ["proof (state)\nthis:\n  s\\<^sub>m \\<in> S\n  s\\<^sub>m \\<in> S\\<^sub>r\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>s\\<^sub>0\n                     \\<in>maximal (\\<lambda>s. v (simple ct s))\n                           (S\\<^sub>r - X).\n               \\<exists>t\\<in>set_pmf (ct s\\<^sub>0).\n                  t \\<notin> maximal (\\<lambda>s. v (simple ct s))\n                              (S\\<^sub>r - X)) \\<Longrightarrow>\n    False", "from \\<open>s\\<^sub>m \\<in> ?S\\<^sub>m\\<close>"], ["proof (chain)\npicking this:\n  s\\<^sub>m \\<in> maximal (\\<lambda>s. v (simple ct s)) (S\\<^sub>r - X)", "have \"v (?C s\\<^sub>m) = 0\""], ["proof (prove)\nusing this:\n  s\\<^sub>m \\<in> maximal (\\<lambda>s. v (simple ct s)) (S\\<^sub>r - X)\n\ngoal (1 subgoal):\n 1. v (simple ct s\\<^sub>m) = 0", "proof (coinduction arbitrary: s\\<^sub>m rule: v_eq_0_coinduct)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>cfg.\n       \\<lbrakk>s\\<^sub>m\n                \\<in> maximal (\\<lambda>s. v (simple ct s)) (S\\<^sub>r - X);\n        \\<exists>s\\<^sub>m.\n           cfg = simple ct s\\<^sub>m \\<and>\n           s\\<^sub>m\n           \\<in> maximal (\\<lambda>s. v (simple ct s))\n                  (S\\<^sub>r - X)\\<rbrakk>\n       \\<Longrightarrow> cfg \\<in> valid_cfg\n 2. \\<And>cfg.\n       \\<lbrakk>s\\<^sub>m\n                \\<in> maximal (\\<lambda>s. v (simple ct s)) (S\\<^sub>r - X);\n        \\<exists>s\\<^sub>m.\n           cfg = simple ct s\\<^sub>m \\<and>\n           s\\<^sub>m\n           \\<in> maximal (\\<lambda>s. v (simple ct s))\n                  (S\\<^sub>r - X)\\<rbrakk>\n       \\<Longrightarrow> state cfg \\<notin> S2\n 3. \\<And>cfg' s\\<^sub>m.\n       \\<lbrakk>s\\<^sub>m\n                \\<in> maximal (\\<lambda>s. v (simple ct s)) (S\\<^sub>r - X);\n        state (simple ct s\\<^sub>m) \\<in> S1;\n        cfg' \\<in> set_pmf (K_cfg (simple ct s\\<^sub>m))\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>s\\<^sub>m.\n                             cfg' = simple ct s\\<^sub>m \\<and>\n                             s\\<^sub>m\n                             \\<in> maximal (\\<lambda>s. v (simple ct s))\n                                    (S\\<^sub>r - X)) \\<or>\n                         v cfg' = 0", "case (cont t s\\<^sub>m)"], ["proof (state)\nthis:\n  s\\<^sub>m \\<in> maximal (\\<lambda>s. v (simple ct s)) (S\\<^sub>r - X)\n  state (simple ct s\\<^sub>m) \\<in> S1\n  t \\<in> set_pmf (K_cfg (simple ct s\\<^sub>m))\n\ngoal (3 subgoals):\n 1. \\<And>cfg.\n       \\<lbrakk>s\\<^sub>m__\n                \\<in> maximal (\\<lambda>s. v (simple ct s)) (S\\<^sub>r - X);\n        \\<exists>s\\<^sub>m.\n           cfg = simple ct s\\<^sub>m \\<and>\n           s\\<^sub>m\n           \\<in> maximal (\\<lambda>s. v (simple ct s))\n                  (S\\<^sub>r - X)\\<rbrakk>\n       \\<Longrightarrow> cfg \\<in> valid_cfg\n 2. \\<And>cfg.\n       \\<lbrakk>s\\<^sub>m__\n                \\<in> maximal (\\<lambda>s. v (simple ct s)) (S\\<^sub>r - X);\n        \\<exists>s\\<^sub>m.\n           cfg = simple ct s\\<^sub>m \\<and>\n           s\\<^sub>m\n           \\<in> maximal (\\<lambda>s. v (simple ct s))\n                  (S\\<^sub>r - X)\\<rbrakk>\n       \\<Longrightarrow> state cfg \\<notin> S2\n 3. \\<And>cfg' s\\<^sub>m.\n       \\<lbrakk>s\\<^sub>m\n                \\<in> maximal (\\<lambda>s. v (simple ct s)) (S\\<^sub>r - X);\n        state (simple ct s\\<^sub>m) \\<in> S1;\n        cfg' \\<in> set_pmf (K_cfg (simple ct s\\<^sub>m))\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>s\\<^sub>m.\n                             cfg' = simple ct s\\<^sub>m \\<and>\n                             s\\<^sub>m\n                             \\<in> maximal (\\<lambda>s. v (simple ct s))\n                                    (S\\<^sub>r - X)) \\<or>\n                         v cfg' = 0", "with S1"], ["proof (chain)\npicking this:\n  S1 \\<subseteq> S\n  s\\<^sub>m \\<in> maximal (\\<lambda>s. v (simple ct s)) (S\\<^sub>r - X)\n  state (simple ct s\\<^sub>m) \\<in> S1\n  t \\<in> set_pmf (K_cfg (simple ct s\\<^sub>m))", "show ?case"], ["proof (prove)\nusing this:\n  S1 \\<subseteq> S\n  s\\<^sub>m \\<in> maximal (\\<lambda>s. v (simple ct s)) (S\\<^sub>r - X)\n  state (simple ct s\\<^sub>m) \\<in> S1\n  t \\<in> set_pmf (K_cfg (simple ct s\\<^sub>m))\n\ngoal (1 subgoal):\n 1. (\\<exists>s\\<^sub>m.\n        t = simple ct s\\<^sub>m \\<and>\n        s\\<^sub>m\n        \\<in> maximal (\\<lambda>s. v (simple ct s)) (S\\<^sub>r - X)) \\<or>\n    v t = 0", "by (intro exI[of _ \"state t\"] disjCI conjI S\\<^sub>m[of s\\<^sub>m \"state t\"])\n               (auto simp: set_K_cfg)"], ["proof (state)\nthis:\n  (\\<exists>s\\<^sub>m.\n      t = simple ct s\\<^sub>m \\<and>\n      s\\<^sub>m\n      \\<in> maximal (\\<lambda>s. v (simple ct s)) (S\\<^sub>r - X)) \\<or>\n  v t = 0\n\ngoal (2 subgoals):\n 1. \\<And>cfg.\n       \\<lbrakk>s\\<^sub>m__\n                \\<in> maximal (\\<lambda>s. v (simple ct s)) (S\\<^sub>r - X);\n        \\<exists>s\\<^sub>m.\n           cfg = simple ct s\\<^sub>m \\<and>\n           s\\<^sub>m\n           \\<in> maximal (\\<lambda>s. v (simple ct s))\n                  (S\\<^sub>r - X)\\<rbrakk>\n       \\<Longrightarrow> cfg \\<in> valid_cfg\n 2. \\<And>cfg.\n       \\<lbrakk>s\\<^sub>m__\n                \\<in> maximal (\\<lambda>s. v (simple ct s)) (S\\<^sub>r - X);\n        \\<exists>s\\<^sub>m.\n           cfg = simple ct s\\<^sub>m \\<and>\n           s\\<^sub>m\n           \\<in> maximal (\\<lambda>s. v (simple ct s))\n                  (S\\<^sub>r - X)\\<rbrakk>\n       \\<Longrightarrow> state cfg \\<notin> S2", "qed (auto simp: S\\<^sub>r_def ct_Pi dest!: maximalD1)"], ["proof (state)\nthis:\n  v (simple ct s\\<^sub>m) = 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>s\\<^sub>0\n                     \\<in>maximal (\\<lambda>s. v (simple ct s))\n                           (S\\<^sub>r - X).\n               \\<exists>t\\<in>set_pmf (ct s\\<^sub>0).\n                  t \\<notin> maximal (\\<lambda>s. v (simple ct s))\n                              (S\\<^sub>r - X)) \\<Longrightarrow>\n    False", "with \\<open>s\\<^sub>m \\<in> S\\<^sub>r\\<close> \\<open>proper ct\\<close>"], ["proof (chain)\npicking this:\n  s\\<^sub>m \\<in> S\\<^sub>r\n  proper ct\n  v (simple ct s\\<^sub>m) = 0", "show False"], ["proof (prove)\nusing this:\n  s\\<^sub>m \\<in> S\\<^sub>r\n  proper ct\n  v (simple ct s\\<^sub>m) = 0\n\ngoal (1 subgoal):\n 1. False", "by (auto simp: proper_def)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>s\\<^sub>0\n           \\<in>maximal (\\<lambda>s. v (simple ct s)) (S\\<^sub>r - X).\n     \\<exists>t\\<in>set_pmf (ct s\\<^sub>0).\n        t \\<notin> maximal (\\<lambda>s. v (simple ct s)) (S\\<^sub>r - X)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>s\\<in>S\\<^sub>r - X.\n               \\<exists>t\\<in>maximal (\\<lambda>s. v (simple ct s))\n                               (set_pmf (ct s)).\n                  t \\<in> S2 \\<union> X) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<exists>s\\<^sub>0\n           \\<in>maximal (\\<lambda>s. v (simple ct s)) (S\\<^sub>r - X).\n     \\<exists>t\\<in>set_pmf (ct s\\<^sub>0).\n        t \\<notin> maximal (\\<lambda>s. v (simple ct s)) (S\\<^sub>r - X)", "obtain s\\<^sub>0 t where \"s\\<^sub>0 \\<in> ?S\\<^sub>m\" and t: \"t \\<in> ?E s\\<^sub>0\" \"t \\<notin> ?S\\<^sub>m\""], ["proof (prove)\nusing this:\n  \\<exists>s\\<^sub>0\n           \\<in>maximal (\\<lambda>s. v (simple ct s)) (S\\<^sub>r - X).\n     \\<exists>t\\<in>set_pmf (ct s\\<^sub>0).\n        t \\<notin> maximal (\\<lambda>s. v (simple ct s)) (S\\<^sub>r - X)\n\ngoal (1 subgoal):\n 1. (\\<And>s\\<^sub>0 t.\n        \\<lbrakk>s\\<^sub>0\n                 \\<in> maximal (\\<lambda>s. v (simple ct s))\n                        (S\\<^sub>r - X);\n         t \\<in> set_pmf (ct s\\<^sub>0);\n         t \\<notin> maximal (\\<lambda>s. v (simple ct s))\n                     (S\\<^sub>r - X)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  s\\<^sub>0 \\<in> maximal (\\<lambda>s. v (simple ct s)) (S\\<^sub>r - X)\n  t \\<in> set_pmf (ct s\\<^sub>0)\n  t \\<notin> maximal (\\<lambda>s. v (simple ct s)) (S\\<^sub>r - X)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>s\\<in>S\\<^sub>r - X.\n               \\<exists>t\\<in>maximal (\\<lambda>s. v (simple ct s))\n                               (set_pmf (ct s)).\n                  t \\<in> S2 \\<union> X) \\<Longrightarrow>\n    False", "with S\\<^sub>r_S1"], ["proof (chain)\npicking this:\n  S\\<^sub>r \\<subseteq> S1\n  s\\<^sub>0 \\<in> maximal (\\<lambda>s. v (simple ct s)) (S\\<^sub>r - X)\n  t \\<in> set_pmf (ct s\\<^sub>0)\n  t \\<notin> maximal (\\<lambda>s. v (simple ct s)) (S\\<^sub>r - X)", "have s\\<^sub>0: \"s\\<^sub>0 \\<in> S\\<^sub>r - X\" and [simp]: \"s\\<^sub>0 \\<in> S\" and \"s\\<^sub>0 \\<in> S1\""], ["proof (prove)\nusing this:\n  S\\<^sub>r \\<subseteq> S1\n  s\\<^sub>0 \\<in> maximal (\\<lambda>s. v (simple ct s)) (S\\<^sub>r - X)\n  t \\<in> set_pmf (ct s\\<^sub>0)\n  t \\<notin> maximal (\\<lambda>s. v (simple ct s)) (S\\<^sub>r - X)\n\ngoal (1 subgoal):\n 1. s\\<^sub>0 \\<in> S\\<^sub>r - X &&&\n    s\\<^sub>0 \\<in> S &&& s\\<^sub>0 \\<in> S1", "by (auto simp: S\\<^sub>r_def dest: maximalD1)"], ["proof (state)\nthis:\n  s\\<^sub>0 \\<in> S\\<^sub>r - X\n  s\\<^sub>0 \\<in> S\n  s\\<^sub>0 \\<in> S1\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>s\\<in>S\\<^sub>r - X.\n               \\<exists>t\\<in>maximal (\\<lambda>s. v (simple ct s))\n                               (set_pmf (ct s)).\n                  t \\<in> S2 \\<union> X) \\<Longrightarrow>\n    False", "from \\<open>proper ct\\<close> \\<open>s\\<^sub>0 \\<in> S\\<close> s\\<^sub>0"], ["proof (chain)\npicking this:\n  proper ct\n  s\\<^sub>0 \\<in> S\n  s\\<^sub>0 \\<in> S\\<^sub>r - X", "have \"?v s\\<^sub>0 \\<noteq> 0\""], ["proof (prove)\nusing this:\n  proper ct\n  s\\<^sub>0 \\<in> S\n  s\\<^sub>0 \\<in> S\\<^sub>r - X\n\ngoal (1 subgoal):\n 1. v (simple ct s\\<^sub>0) \\<noteq> 0", "by (auto simp add: proper_def)"], ["proof (state)\nthis:\n  v (simple ct s\\<^sub>0) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>s\\<in>S\\<^sub>r - X.\n               \\<exists>t\\<in>maximal (\\<lambda>s. v (simple ct s))\n                               (set_pmf (ct s)).\n                  t \\<in> S2 \\<union> X) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  v (simple ct s\\<^sub>0) \\<noteq> 0", "have \"0 < ?v s\\<^sub>0\""], ["proof (prove)\nusing this:\n  v (simple ct s\\<^sub>0) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < v (simple ct s\\<^sub>0)", "by (simp add: zero_less_iff_neq_zero)"], ["proof (state)\nthis:\n  0 < v (simple ct s\\<^sub>0)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>s\\<in>S\\<^sub>r - X.\n               \\<exists>t\\<in>maximal (\\<lambda>s. v (simple ct s))\n                               (set_pmf (ct s)).\n                  t \\<in> S2 \\<union> X) \\<Longrightarrow>\n    False", "{"], ["proof (state)\nthis:\n  0 < v (simple ct s\\<^sub>0)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>s\\<in>S\\<^sub>r - X.\n               \\<exists>t\\<in>maximal (\\<lambda>s. v (simple ct s))\n                               (set_pmf (ct s)).\n                  t \\<in> S2 \\<union> X) \\<Longrightarrow>\n    False", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>s\\<in>S\\<^sub>r - X.\n               \\<exists>t\\<in>maximal (\\<lambda>s. v (simple ct s))\n                               (set_pmf (ct s)).\n                  t \\<in> S2 \\<union> X) \\<Longrightarrow>\n    False", "assume \"t \\<in> S\\<^sub>e \\<union> S2 \\<union> X\" \"t \\<in> ?E s\\<^sub>0\" and \"?v s\\<^sub>0 \\<le> ?v t\""], ["proof (state)\nthis:\n  t \\<in> S\\<^sub>e \\<union> S2 \\<union> X\n  t \\<in> set_pmf (ct s\\<^sub>0)\n  v (simple ct s\\<^sub>0) \\<le> v (simple ct t)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>s\\<in>S\\<^sub>r - X.\n               \\<exists>t\\<in>maximal (\\<lambda>s. v (simple ct s))\n                               (set_pmf (ct s)).\n                  t \\<in> S2 \\<union> X) \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  t \\<in> S\\<^sub>e \\<union> S2 \\<union> X\n  t \\<in> set_pmf (ct s\\<^sub>0)\n  v (simple ct s\\<^sub>0) \\<le> v (simple ct t)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>s\\<in>S\\<^sub>r - X.\n               \\<exists>t\\<in>maximal (\\<lambda>s. v (simple ct s))\n                               (set_pmf (ct s)).\n                  t \\<in> S2 \\<union> X) \\<Longrightarrow>\n    False", "have \"t \\<in> S\\<^sub>e \\<Longrightarrow> ?v t = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> S\\<^sub>e \\<Longrightarrow> v (simple ct t) = 0", "by (simp add: p_eq_0_imp S\\<^sub>e_def ct_Pi)"], ["proof (state)\nthis:\n  t \\<in> S\\<^sub>e \\<Longrightarrow> v (simple ct t) = 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>s\\<in>S\\<^sub>r - X.\n               \\<exists>t\\<in>maximal (\\<lambda>s. v (simple ct s))\n                               (set_pmf (ct s)).\n                  t \\<in> S2 \\<union> X) \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  t \\<in> S\\<^sub>e \\<union> S2 \\<union> X\n  t \\<in> set_pmf (ct s\\<^sub>0)\n  v (simple ct s\\<^sub>0) \\<le> v (simple ct t)\n  t \\<in> S\\<^sub>e \\<Longrightarrow> v (simple ct t) = 0", "have t: \"t \\<in> S2 \\<union> X\" \"t \\<in> ?E s\\<^sub>0\""], ["proof (prove)\nusing this:\n  t \\<in> S\\<^sub>e \\<union> S2 \\<union> X\n  t \\<in> set_pmf (ct s\\<^sub>0)\n  v (simple ct s\\<^sub>0) \\<le> v (simple ct t)\n  t \\<in> S\\<^sub>e \\<Longrightarrow> v (simple ct t) = 0\n\ngoal (1 subgoal):\n 1. t \\<in> S2 \\<union> X &&& t \\<in> set_pmf (ct s\\<^sub>0)", "using \\<open>0 < ?v s\\<^sub>0\\<close>"], ["proof (prove)\nusing this:\n  t \\<in> S\\<^sub>e \\<union> S2 \\<union> X\n  t \\<in> set_pmf (ct s\\<^sub>0)\n  v (simple ct s\\<^sub>0) \\<le> v (simple ct t)\n  t \\<in> S\\<^sub>e \\<Longrightarrow> v (simple ct t) = 0\n  0 < v (simple ct s\\<^sub>0)\n\ngoal (1 subgoal):\n 1. t \\<in> S2 \\<union> X &&& t \\<in> set_pmf (ct s\\<^sub>0)", "by (auto simp: S\\<^sub>e_def)"], ["proof (state)\nthis:\n  t \\<in> S2 \\<union> X\n  t \\<in> set_pmf (ct s\\<^sub>0)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>s\\<in>S\\<^sub>r - X.\n               \\<exists>t\\<in>maximal (\\<lambda>s. v (simple ct s))\n                               (set_pmf (ct s)).\n                  t \\<in> S2 \\<union> X) \\<Longrightarrow>\n    False", "have \"maximal ?v (?E s\\<^sub>0 \\<inter> (S2 \\<union> X)) \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. maximal (\\<lambda>s. v (simple ct s))\n     (set_pmf (ct s\\<^sub>0) \\<inter> (S2 \\<union> X)) \\<noteq>\n    {}", "using finite_E t"], ["proof (prove)\nusing this:\n  ?s1 \\<in> S \\<Longrightarrow> finite (set_pmf (ct ?s1))\n  t \\<in> S2 \\<union> X\n  t \\<in> set_pmf (ct s\\<^sub>0)\n\ngoal (1 subgoal):\n 1. maximal (\\<lambda>s. v (simple ct s))\n     (set_pmf (ct s\\<^sub>0) \\<inter> (S2 \\<union> X)) \\<noteq>\n    {}", "by (intro maximal_ne) auto"], ["proof (state)\nthis:\n  maximal (\\<lambda>s. v (simple ct s))\n   (set_pmf (ct s\\<^sub>0) \\<inter> (S2 \\<union> X)) \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>s\\<in>S\\<^sub>r - X.\n               \\<exists>t\\<in>maximal (\\<lambda>s. v (simple ct s))\n                               (set_pmf (ct s)).\n                  t \\<in> S2 \\<union> X) \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  maximal (\\<lambda>s. v (simple ct s))\n   (set_pmf (ct s\\<^sub>0) \\<inter> (S2 \\<union> X)) \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>s\\<in>S\\<^sub>r - X.\n               \\<exists>t\\<in>maximal (\\<lambda>s. v (simple ct s))\n                               (set_pmf (ct s)).\n                  t \\<in> S2 \\<union> X) \\<Longrightarrow>\n    False", "{"], ["proof (state)\nthis:\n  maximal (\\<lambda>s. v (simple ct s))\n   (set_pmf (ct s\\<^sub>0) \\<inter> (S2 \\<union> X)) \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>s\\<in>S\\<^sub>r - X.\n               \\<exists>t\\<in>maximal (\\<lambda>s. v (simple ct s))\n                               (set_pmf (ct s)).\n                  t \\<in> S2 \\<union> X) \\<Longrightarrow>\n    False", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>s\\<in>S\\<^sub>r - X.\n               \\<exists>t\\<in>maximal (\\<lambda>s. v (simple ct s))\n                               (set_pmf (ct s)).\n                  t \\<in> S2 \\<union> X) \\<Longrightarrow>\n    False", "assume x: \"x \\<in> S2 \\<union> X\" \"x \\<in> ?E s\\<^sub>0\"\n            and *: \"\\<forall>y\\<in>?E s\\<^sub>0 \\<inter> (S2 \\<union> X). ?v y \\<le> ?v x\" and y: \"y \\<in> ?E s\\<^sub>0\""], ["proof (state)\nthis:\n  x \\<in> S2 \\<union> X\n  x \\<in> set_pmf (ct s\\<^sub>0)\n  \\<forall>y\\<in>set_pmf (ct s\\<^sub>0) \\<inter> (S2 \\<union> X).\n     v (simple ct y) \\<le> v (simple ct x)\n  y \\<in> set_pmf (ct s\\<^sub>0)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>s\\<in>S\\<^sub>r - X.\n               \\<exists>t\\<in>maximal (\\<lambda>s. v (simple ct s))\n                               (set_pmf (ct s)).\n                  t \\<in> S2 \\<union> X) \\<Longrightarrow>\n    False", "with S2 \\<open>s\\<^sub>0 \\<in> S\\<close>[THEN ct_closed]"], ["proof (chain)\npicking this:\n  S2 \\<subseteq> S\n  ?t1 \\<in> set_pmf (ct s\\<^sub>0) \\<Longrightarrow> ?t1 \\<in> S\n  x \\<in> S2 \\<union> X\n  x \\<in> set_pmf (ct s\\<^sub>0)\n  \\<forall>y\\<in>set_pmf (ct s\\<^sub>0) \\<inter> (S2 \\<union> X).\n     v (simple ct y) \\<le> v (simple ct x)\n  y \\<in> set_pmf (ct s\\<^sub>0)", "have [simp]: \"x \\<in> S\" \"y \\<in> S\""], ["proof (prove)\nusing this:\n  S2 \\<subseteq> S\n  ?t1 \\<in> set_pmf (ct s\\<^sub>0) \\<Longrightarrow> ?t1 \\<in> S\n  x \\<in> S2 \\<union> X\n  x \\<in> set_pmf (ct s\\<^sub>0)\n  \\<forall>y\\<in>set_pmf (ct s\\<^sub>0) \\<inter> (S2 \\<union> X).\n     v (simple ct y) \\<le> v (simple ct x)\n  y \\<in> set_pmf (ct s\\<^sub>0)\n\ngoal (1 subgoal):\n 1. x \\<in> S &&& y \\<in> S", "by auto"], ["proof (state)\nthis:\n  x \\<in> S\n  y \\<in> S\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>s\\<in>S\\<^sub>r - X.\n               \\<exists>t\\<in>maximal (\\<lambda>s. v (simple ct s))\n                               (set_pmf (ct s)).\n                  t \\<in> S2 \\<union> X) \\<Longrightarrow>\n    False", "have \"?v y \\<le> ?v x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v (simple ct y) \\<le> v (simple ct x)", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> v (simple ct y) \\<le> v (simple ct x)\n 2. \\<not> ?P \\<Longrightarrow> v (simple ct y) \\<le> v (simple ct x)", "assume \"y \\<in> S\\<^sub>r - X\""], ["proof (state)\nthis:\n  y \\<in> S\\<^sub>r - X\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> v (simple ct y) \\<le> v (simple ct x)\n 2. \\<not> ?P \\<Longrightarrow> v (simple ct y) \\<le> v (simple ct x)", "then"], ["proof (chain)\npicking this:\n  y \\<in> S\\<^sub>r - X", "have \"?v y \\<le> ?v s\\<^sub>0\""], ["proof (prove)\nusing this:\n  y \\<in> S\\<^sub>r - X\n\ngoal (1 subgoal):\n 1. v (simple ct y) \\<le> v (simple ct s\\<^sub>0)", "using \\<open>s\\<^sub>0 \\<in> ?S\\<^sub>m\\<close>"], ["proof (prove)\nusing this:\n  y \\<in> S\\<^sub>r - X\n  s\\<^sub>0 \\<in> maximal (\\<lambda>s. v (simple ct s)) (S\\<^sub>r - X)\n\ngoal (1 subgoal):\n 1. v (simple ct y) \\<le> v (simple ct s\\<^sub>0)", "by (auto intro: maximalD2)"], ["proof (state)\nthis:\n  v (simple ct y) \\<le> v (simple ct s\\<^sub>0)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> v (simple ct y) \\<le> v (simple ct x)\n 2. \\<not> ?P \\<Longrightarrow> v (simple ct y) \\<le> v (simple ct x)", "also"], ["proof (state)\nthis:\n  v (simple ct y) \\<le> v (simple ct s\\<^sub>0)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> v (simple ct y) \\<le> v (simple ct x)\n 2. \\<not> ?P \\<Longrightarrow> v (simple ct y) \\<le> v (simple ct x)", "note \\<open>?v s\\<^sub>0 \\<le> ?v t\\<close>"], ["proof (state)\nthis:\n  v (simple ct s\\<^sub>0) \\<le> v (simple ct t)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> v (simple ct y) \\<le> v (simple ct x)\n 2. \\<not> ?P \\<Longrightarrow> v (simple ct y) \\<le> v (simple ct x)", "also"], ["proof (state)\nthis:\n  v (simple ct s\\<^sub>0) \\<le> v (simple ct t)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> v (simple ct y) \\<le> v (simple ct x)\n 2. \\<not> ?P \\<Longrightarrow> v (simple ct y) \\<le> v (simple ct x)", "have \"?v t \\<le> ?v x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v (simple ct t) \\<le> v (simple ct x)", "using * t"], ["proof (prove)\nusing this:\n  \\<forall>y\\<in>set_pmf (ct s\\<^sub>0) \\<inter> (S2 \\<union> X).\n     v (simple ct y) \\<le> v (simple ct x)\n  t \\<in> S2 \\<union> X\n  t \\<in> set_pmf (ct s\\<^sub>0)\n\ngoal (1 subgoal):\n 1. v (simple ct t) \\<le> v (simple ct x)", "by auto"], ["proof (state)\nthis:\n  v (simple ct t) \\<le> v (simple ct x)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> v (simple ct y) \\<le> v (simple ct x)\n 2. \\<not> ?P \\<Longrightarrow> v (simple ct y) \\<le> v (simple ct x)", "finally"], ["proof (chain)\npicking this:\n  v (simple ct y) \\<le> v (simple ct x)", "show ?thesis"], ["proof (prove)\nusing this:\n  v (simple ct y) \\<le> v (simple ct x)\n\ngoal (1 subgoal):\n 1. v (simple ct y) \\<le> v (simple ct x)", "."], ["proof (state)\nthis:\n  v (simple ct y) \\<le> v (simple ct x)\n\ngoal (1 subgoal):\n 1. y \\<notin> S\\<^sub>r - X \\<Longrightarrow>\n    v (simple ct y) \\<le> v (simple ct x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. y \\<notin> S\\<^sub>r - X \\<Longrightarrow>\n    v (simple ct y) \\<le> v (simple ct x)", "assume \"y \\<notin> S\\<^sub>r - X\""], ["proof (state)\nthis:\n  y \\<notin> S\\<^sub>r - X\n\ngoal (1 subgoal):\n 1. y \\<notin> S\\<^sub>r - X \\<Longrightarrow>\n    v (simple ct y) \\<le> v (simple ct x)", "with y *"], ["proof (chain)\npicking this:\n  y \\<in> set_pmf (ct s\\<^sub>0)\n  \\<forall>y\\<in>set_pmf (ct s\\<^sub>0) \\<inter> (S2 \\<union> X).\n     v (simple ct y) \\<le> v (simple ct x)\n  y \\<notin> S\\<^sub>r - X", "show ?thesis"], ["proof (prove)\nusing this:\n  y \\<in> set_pmf (ct s\\<^sub>0)\n  \\<forall>y\\<in>set_pmf (ct s\\<^sub>0) \\<inter> (S2 \\<union> X).\n     v (simple ct y) \\<le> v (simple ct x)\n  y \\<notin> S\\<^sub>r - X\n\ngoal (1 subgoal):\n 1. v (simple ct y) \\<le> v (simple ct x)", "by (auto simp: S\\<^sub>r_def v_S\\<^sub>e[of \"?C y\"] ct_Pi)"], ["proof (state)\nthis:\n  v (simple ct y) \\<le> v (simple ct x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  v (simple ct y) \\<le> v (simple ct x)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>s\\<in>S\\<^sub>r - X.\n               \\<exists>t\\<in>maximal (\\<lambda>s. v (simple ct s))\n                               (set_pmf (ct s)).\n                  t \\<in> S2 \\<union> X) \\<Longrightarrow>\n    False", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?xa3 \\<in> S2 \\<union> X; ?xa3 \\<in> set_pmf (ct s\\<^sub>0);\n   \\<forall>y\\<in>set_pmf (ct s\\<^sub>0) \\<inter> (S2 \\<union> X).\n      v (simple ct y) \\<le> v (simple ct ?xa3);\n   ?y3 \\<in> set_pmf (ct s\\<^sub>0)\\<rbrakk>\n  \\<Longrightarrow> v (simple ct ?y3) \\<le> v (simple ct ?xa3)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>s\\<in>S\\<^sub>r - X.\n               \\<exists>t\\<in>maximal (\\<lambda>s. v (simple ct s))\n                               (set_pmf (ct s)).\n                  t \\<in> S2 \\<union> X) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?xa3 \\<in> S2 \\<union> X; ?xa3 \\<in> set_pmf (ct s\\<^sub>0);\n   \\<forall>y\\<in>set_pmf (ct s\\<^sub>0) \\<inter> (S2 \\<union> X).\n      v (simple ct y) \\<le> v (simple ct ?xa3);\n   ?y3 \\<in> set_pmf (ct s\\<^sub>0)\\<rbrakk>\n  \\<Longrightarrow> v (simple ct ?y3) \\<le> v (simple ct ?xa3)", "have \"maximal ?v (?E s\\<^sub>0 \\<inter> (S2 \\<union> X)) \\<subseteq> maximal ?v (?E s\\<^sub>0)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?xa3 \\<in> S2 \\<union> X; ?xa3 \\<in> set_pmf (ct s\\<^sub>0);\n   \\<forall>y\\<in>set_pmf (ct s\\<^sub>0) \\<inter> (S2 \\<union> X).\n      v (simple ct y) \\<le> v (simple ct ?xa3);\n   ?y3 \\<in> set_pmf (ct s\\<^sub>0)\\<rbrakk>\n  \\<Longrightarrow> v (simple ct ?y3) \\<le> v (simple ct ?xa3)\n\ngoal (1 subgoal):\n 1. maximal (\\<lambda>s. v (simple ct s))\n     (set_pmf (ct s\\<^sub>0) \\<inter> (S2 \\<union> X))\n    \\<subseteq> maximal (\\<lambda>s. v (simple ct s))\n                 (set_pmf (ct s\\<^sub>0))", "by (auto simp: maximal_def)"], ["proof (state)\nthis:\n  maximal (\\<lambda>s. v (simple ct s))\n   (set_pmf (ct s\\<^sub>0) \\<inter> (S2 \\<union> X))\n  \\<subseteq> maximal (\\<lambda>s. v (simple ct s)) (set_pmf (ct s\\<^sub>0))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>s\\<in>S\\<^sub>r - X.\n               \\<exists>t\\<in>maximal (\\<lambda>s. v (simple ct s))\n                               (set_pmf (ct s)).\n                  t \\<in> S2 \\<union> X) \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  maximal (\\<lambda>s. v (simple ct s))\n   (set_pmf (ct s\\<^sub>0) \\<inter> (S2 \\<union> X))\n  \\<subseteq> maximal (\\<lambda>s. v (simple ct s)) (set_pmf (ct s\\<^sub>0))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>s\\<in>S\\<^sub>r - X.\n               \\<exists>t\\<in>maximal (\\<lambda>s. v (simple ct s))\n                               (set_pmf (ct s)).\n                  t \\<in> S2 \\<union> X) \\<Longrightarrow>\n    False", "note not_M[OF s\\<^sub>0]"], ["proof (state)\nthis:\n  maximal (\\<lambda>s. v (simple ct s)) (set_pmf (ct s\\<^sub>0)) \\<inter>\n  (S2 \\<union> X) =\n  {}\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>s\\<in>S\\<^sub>r - X.\n               \\<exists>t\\<in>maximal (\\<lambda>s. v (simple ct s))\n                               (set_pmf (ct s)).\n                  t \\<in> S2 \\<union> X) \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  maximal (\\<lambda>s. v (simple ct s))\n   (set_pmf (ct s\\<^sub>0) \\<inter> (S2 \\<union> X)) \\<noteq>\n  {}\n  maximal (\\<lambda>s. v (simple ct s))\n   (set_pmf (ct s\\<^sub>0) \\<inter> (S2 \\<union> X))\n  \\<subseteq> maximal (\\<lambda>s. v (simple ct s)) (set_pmf (ct s\\<^sub>0))\n  maximal (\\<lambda>s. v (simple ct s)) (set_pmf (ct s\\<^sub>0)) \\<inter>\n  (S2 \\<union> X) =\n  {}", "have False"], ["proof (prove)\nusing this:\n  maximal (\\<lambda>s. v (simple ct s))\n   (set_pmf (ct s\\<^sub>0) \\<inter> (S2 \\<union> X)) \\<noteq>\n  {}\n  maximal (\\<lambda>s. v (simple ct s))\n   (set_pmf (ct s\\<^sub>0) \\<inter> (S2 \\<union> X))\n  \\<subseteq> maximal (\\<lambda>s. v (simple ct s)) (set_pmf (ct s\\<^sub>0))\n  maximal (\\<lambda>s. v (simple ct s)) (set_pmf (ct s\\<^sub>0)) \\<inter>\n  (S2 \\<union> X) =\n  {}\n\ngoal (1 subgoal):\n 1. False", "by (blast dest: maximalD1)"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>s\\<in>S\\<^sub>r - X.\n               \\<exists>t\\<in>maximal (\\<lambda>s. v (simple ct s))\n                               (set_pmf (ct s)).\n                  t \\<in> S2 \\<union> X) \\<Longrightarrow>\n    False", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?ta3 \\<in> S\\<^sub>e \\<union> S2 \\<union> X;\n   ?ta3 \\<in> set_pmf (ct s\\<^sub>0);\n   v (simple ct s\\<^sub>0) \\<le> v (simple ct ?ta3)\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>s\\<in>S\\<^sub>r - X.\n               \\<exists>t\\<in>maximal (\\<lambda>s. v (simple ct s))\n                               (set_pmf (ct s)).\n                  t \\<in> S2 \\<union> X) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?ta3 \\<in> S\\<^sub>e \\<union> S2 \\<union> X;\n   ?ta3 \\<in> set_pmf (ct s\\<^sub>0);\n   v (simple ct s\\<^sub>0) \\<le> v (simple ct ?ta3)\\<rbrakk>\n  \\<Longrightarrow> False", "have less_s\\<^sub>0: \"\\<And>t. t \\<in> S\\<^sub>e \\<union> S2 \\<union> X \\<Longrightarrow> t \\<in> ?E s\\<^sub>0 \\<Longrightarrow> ?v t < ?v s\\<^sub>0\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?ta3 \\<in> S\\<^sub>e \\<union> S2 \\<union> X;\n   ?ta3 \\<in> set_pmf (ct s\\<^sub>0);\n   v (simple ct s\\<^sub>0) \\<le> v (simple ct ?ta3)\\<rbrakk>\n  \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>t \\<in> S\\<^sub>e \\<union> S2 \\<union> X;\n        t \\<in> set_pmf (ct s\\<^sub>0)\\<rbrakk>\n       \\<Longrightarrow> v (simple ct t) < v (simple ct s\\<^sub>0)", "by (auto simp add: not_le[symmetric])"], ["proof (state)\nthis:\n  \\<lbrakk>?t1 \\<in> S\\<^sub>e \\<union> S2 \\<union> X;\n   ?t1 \\<in> set_pmf (ct s\\<^sub>0)\\<rbrakk>\n  \\<Longrightarrow> v (simple ct ?t1) < v (simple ct s\\<^sub>0)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>s\\<in>S\\<^sub>r - X.\n               \\<exists>t\\<in>maximal (\\<lambda>s. v (simple ct s))\n                               (set_pmf (ct s)).\n                  t \\<in> S2 \\<union> X) \\<Longrightarrow>\n    False", "let ?K = \"ct s\\<^sub>0\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>s\\<in>S\\<^sub>r - X.\n               \\<exists>t\\<in>maximal (\\<lambda>s. v (simple ct s))\n                               (set_pmf (ct s)).\n                  t \\<in> S2 \\<union> X) \\<Longrightarrow>\n    False", "have \"?v s\\<^sub>0 = (\\<integral>\\<^sup>+ x. ?v x \\<partial>?K)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v (simple ct s\\<^sub>0) =\n    \\<integral>\\<^sup>+ x. v (simple ct x)\n                       \\<partial>measure_pmf (ct s\\<^sub>0)", "using v_S1[of \"?C s\\<^sub>0\"] \\<open>s\\<^sub>0 \\<in> S1\\<close> \\<open>s\\<^sub>0 \\<in> S\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>simple ct s\\<^sub>0 \\<in> valid_cfg;\n   state (simple ct s\\<^sub>0) \\<in> S1\\<rbrakk>\n  \\<Longrightarrow> v (simple ct s\\<^sub>0) =\n                    \\<integral>\\<^sup>+ s. v (cont (simple ct s\\<^sub>0) s)\n \\<partial>measure_pmf (action (simple ct s\\<^sub>0))\n  s\\<^sub>0 \\<in> S1\n  s\\<^sub>0 \\<in> S\n\ngoal (1 subgoal):\n 1. v (simple ct s\\<^sub>0) =\n    \\<integral>\\<^sup>+ x. v (simple ct x)\n                       \\<partial>measure_pmf (ct s\\<^sub>0)", "by (auto simp add: ct_Pi intro!: nn_integral_cong_AE AE_pmfI)"], ["proof (state)\nthis:\n  v (simple ct s\\<^sub>0) =\n  \\<integral>\\<^sup>+ x. v (simple ct x)\n                     \\<partial>measure_pmf (ct s\\<^sub>0)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>s\\<in>S\\<^sub>r - X.\n               \\<exists>t\\<in>maximal (\\<lambda>s. v (simple ct s))\n                               (set_pmf (ct s)).\n                  t \\<in> S2 \\<union> X) \\<Longrightarrow>\n    False", "also"], ["proof (state)\nthis:\n  v (simple ct s\\<^sub>0) =\n  \\<integral>\\<^sup>+ x. v (simple ct x)\n                     \\<partial>measure_pmf (ct s\\<^sub>0)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>s\\<in>S\\<^sub>r - X.\n               \\<exists>t\\<in>maximal (\\<lambda>s. v (simple ct s))\n                               (set_pmf (ct s)).\n                  t \\<in> S2 \\<union> X) \\<Longrightarrow>\n    False", "have \"\\<dots> < (\\<integral>\\<^sup>+x. ?v s\\<^sub>0 \\<partial>?K)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. v (simple ct x)\n                       \\<partial>measure_pmf (ct s\\<^sub>0)\n    < \\<integral>\\<^sup>+ x. v (simple ct s\\<^sub>0)\n                         \\<partial>measure_pmf (ct s\\<^sub>0)", "proof (intro nn_integral_less)"], ["proof (state)\ngoal (5 subgoals):\n 1. measure_pmf.random_variable (ct s\\<^sub>0) borel\n     (\\<lambda>x. v (simple ct x))\n 2. measure_pmf.random_variable (ct s\\<^sub>0) borel\n     (\\<lambda>x. v (simple ct s\\<^sub>0))\n 3. \\<integral>\\<^sup>+ x. v (simple ct x)\n                       \\<partial>measure_pmf (ct s\\<^sub>0) \\<noteq>\n    \\<infinity>\n 4. AE x in measure_pmf\n             (ct s\\<^sub>0). v (simple ct x) \\<le> v (simple ct s\\<^sub>0)\n 5. \\<not> (AE x in measure_pmf\n                     (ct s\\<^sub>0). v (simple ct s\\<^sub>0)\n                                     \\<le> v (simple ct x))", "have \"(\\<integral>\\<^sup>+x. ?v x \\<partial>?K) \\<le> (\\<integral>\\<^sup>+x. 1 \\<partial>?K)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. v (simple ct x)\n                       \\<partial>measure_pmf (ct s\\<^sub>0)\n    \\<le> \\<integral>\\<^sup>+ x. 1 \\<partial>measure_pmf (ct s\\<^sub>0)", "using ct ct_closed[of s\\<^sub>0]"], ["proof (prove)\nusing this:\n  proper ct\n  \\<lbrakk>s\\<^sub>0 \\<in> S; ?t1 \\<in> set_pmf (ct s\\<^sub>0)\\<rbrakk>\n  \\<Longrightarrow> ?t1 \\<in> S\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. v (simple ct x)\n                       \\<partial>measure_pmf (ct s\\<^sub>0)\n    \\<le> \\<integral>\\<^sup>+ x. 1 \\<partial>measure_pmf (ct s\\<^sub>0)", "by (intro nn_integral_mono_AE)\n             (auto intro!: v_le_1 simp: AE_measure_pmf_iff proper_def ct_Pi)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. v (simple ct x)\n                     \\<partial>measure_pmf (ct s\\<^sub>0)\n  \\<le> \\<integral>\\<^sup>+ x. 1 \\<partial>measure_pmf (ct s\\<^sub>0)\n\ngoal (5 subgoals):\n 1. measure_pmf.random_variable (ct s\\<^sub>0) borel\n     (\\<lambda>x. v (simple ct x))\n 2. measure_pmf.random_variable (ct s\\<^sub>0) borel\n     (\\<lambda>x. v (simple ct s\\<^sub>0))\n 3. \\<integral>\\<^sup>+ x. v (simple ct x)\n                       \\<partial>measure_pmf (ct s\\<^sub>0) \\<noteq>\n    \\<infinity>\n 4. AE x in measure_pmf\n             (ct s\\<^sub>0). v (simple ct x) \\<le> v (simple ct s\\<^sub>0)\n 5. \\<not> (AE x in measure_pmf\n                     (ct s\\<^sub>0). v (simple ct s\\<^sub>0)\n                                     \\<le> v (simple ct x))", "then"], ["proof (chain)\npicking this:\n  \\<integral>\\<^sup>+ x. v (simple ct x)\n                     \\<partial>measure_pmf (ct s\\<^sub>0)\n  \\<le> \\<integral>\\<^sup>+ x. 1 \\<partial>measure_pmf (ct s\\<^sub>0)", "show \"(\\<integral>\\<^sup>+x. ?v x \\<partial>?K) \\<noteq> \\<infinity>\""], ["proof (prove)\nusing this:\n  \\<integral>\\<^sup>+ x. v (simple ct x)\n                     \\<partial>measure_pmf (ct s\\<^sub>0)\n  \\<le> \\<integral>\\<^sup>+ x. 1 \\<partial>measure_pmf (ct s\\<^sub>0)\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. v (simple ct x)\n                       \\<partial>measure_pmf (ct s\\<^sub>0) \\<noteq>\n    \\<infinity>", "by (auto simp: top_unique)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. v (simple ct x)\n                     \\<partial>measure_pmf (ct s\\<^sub>0) \\<noteq>\n  \\<infinity>\n\ngoal (4 subgoals):\n 1. measure_pmf.random_variable (ct s\\<^sub>0) borel\n     (\\<lambda>x. v (simple ct x))\n 2. measure_pmf.random_variable (ct s\\<^sub>0) borel\n     (\\<lambda>x. v (simple ct s\\<^sub>0))\n 3. AE x in measure_pmf\n             (ct s\\<^sub>0). v (simple ct x) \\<le> v (simple ct s\\<^sub>0)\n 4. \\<not> (AE x in measure_pmf\n                     (ct s\\<^sub>0). v (simple ct s\\<^sub>0)\n                                     \\<le> v (simple ct x))", "have \"?v t < ?v s\\<^sub>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v (simple ct t) < v (simple ct s\\<^sub>0)", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> v (simple ct t) < v (simple ct s\\<^sub>0)\n 2. \\<not> ?P \\<Longrightarrow> v (simple ct t) < v (simple ct s\\<^sub>0)", "assume \"t \\<in> S\\<^sub>e \\<union> S2 \\<union> X\""], ["proof (state)\nthis:\n  t \\<in> S\\<^sub>e \\<union> S2 \\<union> X\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> v (simple ct t) < v (simple ct s\\<^sub>0)\n 2. \\<not> ?P \\<Longrightarrow> v (simple ct t) < v (simple ct s\\<^sub>0)", "then"], ["proof (chain)\npicking this:\n  t \\<in> S\\<^sub>e \\<union> S2 \\<union> X", "show ?thesis"], ["proof (prove)\nusing this:\n  t \\<in> S\\<^sub>e \\<union> S2 \\<union> X\n\ngoal (1 subgoal):\n 1. v (simple ct t) < v (simple ct s\\<^sub>0)", "using less_s\\<^sub>0[of t] t"], ["proof (prove)\nusing this:\n  t \\<in> S\\<^sub>e \\<union> S2 \\<union> X\n  \\<lbrakk>t \\<in> S\\<^sub>e \\<union> S2 \\<union> X;\n   t \\<in> set_pmf (ct s\\<^sub>0)\\<rbrakk>\n  \\<Longrightarrow> v (simple ct t) < v (simple ct s\\<^sub>0)\n  t \\<in> set_pmf (ct s\\<^sub>0)\n  t \\<notin> maximal (\\<lambda>s. v (simple ct s)) (S\\<^sub>r - X)\n\ngoal (1 subgoal):\n 1. v (simple ct t) < v (simple ct s\\<^sub>0)", "by simp"], ["proof (state)\nthis:\n  v (simple ct t) < v (simple ct s\\<^sub>0)\n\ngoal (1 subgoal):\n 1. t \\<notin> S\\<^sub>e \\<union> S2 \\<union> X \\<Longrightarrow>\n    v (simple ct t) < v (simple ct s\\<^sub>0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. t \\<notin> S\\<^sub>e \\<union> S2 \\<union> X \\<Longrightarrow>\n    v (simple ct t) < v (simple ct s\\<^sub>0)", "assume \"t \\<notin> S\\<^sub>e \\<union> S2 \\<union> X\""], ["proof (state)\nthis:\n  t \\<notin> S\\<^sub>e \\<union> S2 \\<union> X\n\ngoal (1 subgoal):\n 1. t \\<notin> S\\<^sub>e \\<union> S2 \\<union> X \\<Longrightarrow>\n    v (simple ct t) < v (simple ct s\\<^sub>0)", "with t(1) ct_closed[of s\\<^sub>0 t]"], ["proof (chain)\npicking this:\n  t \\<in> set_pmf (ct s\\<^sub>0)\n  \\<lbrakk>s\\<^sub>0 \\<in> S; t \\<in> set_pmf (ct s\\<^sub>0)\\<rbrakk>\n  \\<Longrightarrow> t \\<in> S\n  t \\<notin> S\\<^sub>e \\<union> S2 \\<union> X", "have \"t \\<in> S\\<^sub>r - X\""], ["proof (prove)\nusing this:\n  t \\<in> set_pmf (ct s\\<^sub>0)\n  \\<lbrakk>s\\<^sub>0 \\<in> S; t \\<in> set_pmf (ct s\\<^sub>0)\\<rbrakk>\n  \\<Longrightarrow> t \\<in> S\n  t \\<notin> S\\<^sub>e \\<union> S2 \\<union> X\n\ngoal (1 subgoal):\n 1. t \\<in> S\\<^sub>r - X", "unfolding S\\<^sub>r_def"], ["proof (prove)\nusing this:\n  t \\<in> set_pmf (ct s\\<^sub>0)\n  \\<lbrakk>s\\<^sub>0 \\<in> S; t \\<in> set_pmf (ct s\\<^sub>0)\\<rbrakk>\n  \\<Longrightarrow> t \\<in> S\n  t \\<notin> S\\<^sub>e \\<union> S2 \\<union> X\n\ngoal (1 subgoal):\n 1. t \\<in> S - (S\\<^sub>e \\<union> S2) - X", "by (auto simp: E_def)"], ["proof (state)\nthis:\n  t \\<in> S\\<^sub>r - X\n\ngoal (1 subgoal):\n 1. t \\<notin> S\\<^sub>e \\<union> S2 \\<union> X \\<Longrightarrow>\n    v (simple ct t) < v (simple ct s\\<^sub>0)", "with t(2)"], ["proof (chain)\npicking this:\n  t \\<notin> maximal (\\<lambda>s. v (simple ct s)) (S\\<^sub>r - X)\n  t \\<in> S\\<^sub>r - X", "show ?thesis"], ["proof (prove)\nusing this:\n  t \\<notin> maximal (\\<lambda>s. v (simple ct s)) (S\\<^sub>r - X)\n  t \\<in> S\\<^sub>r - X\n\ngoal (1 subgoal):\n 1. v (simple ct t) < v (simple ct s\\<^sub>0)", "using \\<open>s\\<^sub>0 \\<in> ?S\\<^sub>m\\<close>"], ["proof (prove)\nusing this:\n  t \\<notin> maximal (\\<lambda>s. v (simple ct s)) (S\\<^sub>r - X)\n  t \\<in> S\\<^sub>r - X\n  s\\<^sub>0 \\<in> maximal (\\<lambda>s. v (simple ct s)) (S\\<^sub>r - X)\n\ngoal (1 subgoal):\n 1. v (simple ct t) < v (simple ct s\\<^sub>0)", "by (auto simp: maximal_def not_le intro: less_le_trans)"], ["proof (state)\nthis:\n  v (simple ct t) < v (simple ct s\\<^sub>0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  v (simple ct t) < v (simple ct s\\<^sub>0)\n\ngoal (4 subgoals):\n 1. measure_pmf.random_variable (ct s\\<^sub>0) borel\n     (\\<lambda>x. v (simple ct x))\n 2. measure_pmf.random_variable (ct s\\<^sub>0) borel\n     (\\<lambda>x. v (simple ct s\\<^sub>0))\n 3. AE x in measure_pmf\n             (ct s\\<^sub>0). v (simple ct x) \\<le> v (simple ct s\\<^sub>0)\n 4. \\<not> (AE x in measure_pmf\n                     (ct s\\<^sub>0). v (simple ct s\\<^sub>0)\n                                     \\<le> v (simple ct x))", "then"], ["proof (chain)\npicking this:\n  v (simple ct t) < v (simple ct s\\<^sub>0)", "show \"\\<not> (AE x in ?K. ?v s\\<^sub>0 \\<le> ?v x)\""], ["proof (prove)\nusing this:\n  v (simple ct t) < v (simple ct s\\<^sub>0)\n\ngoal (1 subgoal):\n 1. \\<not> (AE x in measure_pmf\n                     (ct s\\<^sub>0). v (simple ct s\\<^sub>0)\n                                     \\<le> v (simple ct x))", "using t"], ["proof (prove)\nusing this:\n  v (simple ct t) < v (simple ct s\\<^sub>0)\n  t \\<in> set_pmf (ct s\\<^sub>0)\n  t \\<notin> maximal (\\<lambda>s. v (simple ct s)) (S\\<^sub>r - X)\n\ngoal (1 subgoal):\n 1. \\<not> (AE x in measure_pmf\n                     (ct s\\<^sub>0). v (simple ct s\\<^sub>0)\n                                     \\<le> v (simple ct x))", "by (auto simp: not_le AE_measure_pmf_iff E_def cong del: AE_cong intro!: exI[of _ \"t\"])"], ["proof (state)\nthis:\n  \\<not> (AE x in measure_pmf\n                   (ct s\\<^sub>0). v (simple ct s\\<^sub>0)\n                                   \\<le> v (simple ct x))\n\ngoal (3 subgoals):\n 1. measure_pmf.random_variable (ct s\\<^sub>0) borel\n     (\\<lambda>x. v (simple ct x))\n 2. measure_pmf.random_variable (ct s\\<^sub>0) borel\n     (\\<lambda>x. v (simple ct s\\<^sub>0))\n 3. AE x in measure_pmf\n             (ct s\\<^sub>0). v (simple ct x) \\<le> v (simple ct s\\<^sub>0)", "show \"AE x in ?K. ?v x \\<le> ?v s\\<^sub>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE x in measure_pmf\n             (ct s\\<^sub>0). v (simple ct x) \\<le> v (simple ct s\\<^sub>0)", "proof (subst AE_measure_pmf_iff, safe)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> set_pmf (ct s\\<^sub>0) \\<Longrightarrow>\n       v (simple ct y) \\<le> v (simple ct s\\<^sub>0)", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> set_pmf (ct s\\<^sub>0) \\<Longrightarrow>\n       v (simple ct y) \\<le> v (simple ct s\\<^sub>0)", "assume t: \"t \\<in> ?E s\\<^sub>0\""], ["proof (state)\nthis:\n  t \\<in> set_pmf (ct s\\<^sub>0)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> set_pmf (ct s\\<^sub>0) \\<Longrightarrow>\n       v (simple ct y) \\<le> v (simple ct s\\<^sub>0)", "show \"?v t \\<le> ?v s\\<^sub>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v (simple ct t) \\<le> v (simple ct s\\<^sub>0)", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> v (simple ct t) \\<le> v (simple ct s\\<^sub>0)\n 2. \\<not> ?P \\<Longrightarrow>\n    v (simple ct t) \\<le> v (simple ct s\\<^sub>0)", "assume \"t \\<in> S\\<^sub>e \\<union> S2 \\<union> X\""], ["proof (state)\nthis:\n  t \\<in> S\\<^sub>e \\<union> S2 \\<union> X\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> v (simple ct t) \\<le> v (simple ct s\\<^sub>0)\n 2. \\<not> ?P \\<Longrightarrow>\n    v (simple ct t) \\<le> v (simple ct s\\<^sub>0)", "then"], ["proof (chain)\npicking this:\n  t \\<in> S\\<^sub>e \\<union> S2 \\<union> X", "show ?thesis"], ["proof (prove)\nusing this:\n  t \\<in> S\\<^sub>e \\<union> S2 \\<union> X\n\ngoal (1 subgoal):\n 1. v (simple ct t) \\<le> v (simple ct s\\<^sub>0)", "using less_s\\<^sub>0[of t] t"], ["proof (prove)\nusing this:\n  t \\<in> S\\<^sub>e \\<union> S2 \\<union> X\n  \\<lbrakk>t \\<in> S\\<^sub>e \\<union> S2 \\<union> X;\n   t \\<in> set_pmf (ct s\\<^sub>0)\\<rbrakk>\n  \\<Longrightarrow> v (simple ct t) < v (simple ct s\\<^sub>0)\n  t \\<in> set_pmf (ct s\\<^sub>0)\n\ngoal (1 subgoal):\n 1. v (simple ct t) \\<le> v (simple ct s\\<^sub>0)", "by simp"], ["proof (state)\nthis:\n  v (simple ct t) \\<le> v (simple ct s\\<^sub>0)\n\ngoal (1 subgoal):\n 1. t \\<notin> S\\<^sub>e \\<union> S2 \\<union> X \\<Longrightarrow>\n    v (simple ct t) \\<le> v (simple ct s\\<^sub>0)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. t \\<notin> S\\<^sub>e \\<union> S2 \\<union> X \\<Longrightarrow>\n    v (simple ct t) \\<le> v (simple ct s\\<^sub>0)", "assume \"t \\<notin> S\\<^sub>e \\<union> S2 \\<union> X\""], ["proof (state)\nthis:\n  t \\<notin> S\\<^sub>e \\<union> S2 \\<union> X\n\ngoal (1 subgoal):\n 1. t \\<notin> S\\<^sub>e \\<union> S2 \\<union> X \\<Longrightarrow>\n    v (simple ct t) \\<le> v (simple ct s\\<^sub>0)", "with t \\<open>s\\<^sub>0 \\<in> ?S\\<^sub>m\\<close> \\<open>s\\<^sub>0 \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  t \\<in> set_pmf (ct s\\<^sub>0)\n  s\\<^sub>0 \\<in> maximal (\\<lambda>s. v (simple ct s)) (S\\<^sub>r - X)\n  s\\<^sub>0 \\<in> S\n  t \\<notin> S\\<^sub>e \\<union> S2 \\<union> X", "show ?thesis"], ["proof (prove)\nusing this:\n  t \\<in> set_pmf (ct s\\<^sub>0)\n  s\\<^sub>0 \\<in> maximal (\\<lambda>s. v (simple ct s)) (S\\<^sub>r - X)\n  s\\<^sub>0 \\<in> S\n  t \\<notin> S\\<^sub>e \\<union> S2 \\<union> X\n\ngoal (1 subgoal):\n 1. v (simple ct t) \\<le> v (simple ct s\\<^sub>0)", "by (elim maximalD2) (auto simp: S\\<^sub>r_def intro!: ct_closed[of _ t])"], ["proof (state)\nthis:\n  v (simple ct t) \\<le> v (simple ct s\\<^sub>0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  v (simple ct t) \\<le> v (simple ct s\\<^sub>0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  AE x in measure_pmf\n           (ct s\\<^sub>0). v (simple ct x) \\<le> v (simple ct s\\<^sub>0)\n\ngoal (2 subgoals):\n 1. measure_pmf.random_variable (ct s\\<^sub>0) borel\n     (\\<lambda>x. v (simple ct x))\n 2. measure_pmf.random_variable (ct s\\<^sub>0) borel\n     (\\<lambda>x. v (simple ct s\\<^sub>0))", "qed (insert ct_closed[of s\\<^sub>0], auto simp: AE_measure_pmf_iff)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. v (simple ct x)\n                     \\<partial>measure_pmf (ct s\\<^sub>0)\n  < \\<integral>\\<^sup>+ x. v (simple ct s\\<^sub>0)\n                       \\<partial>measure_pmf (ct s\\<^sub>0)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>s\\<in>S\\<^sub>r - X.\n               \\<exists>t\\<in>maximal (\\<lambda>s. v (simple ct s))\n                               (set_pmf (ct s)).\n                  t \\<in> S2 \\<union> X) \\<Longrightarrow>\n    False", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. v (simple ct x)\n                     \\<partial>measure_pmf (ct s\\<^sub>0)\n  < \\<integral>\\<^sup>+ x. v (simple ct s\\<^sub>0)\n                       \\<partial>measure_pmf (ct s\\<^sub>0)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>s\\<in>S\\<^sub>r - X.\n               \\<exists>t\\<in>maximal (\\<lambda>s. v (simple ct s))\n                               (set_pmf (ct s)).\n                  t \\<in> S2 \\<union> X) \\<Longrightarrow>\n    False", "have \"\\<dots> = ?v s\\<^sub>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. v (simple ct s\\<^sub>0)\n                       \\<partial>measure_pmf (ct s\\<^sub>0) =\n    v (simple ct s\\<^sub>0)", "using \\<open>s\\<^sub>0 \\<in> S\\<close> measure_pmf.emeasure_space_1[of \"ct s\\<^sub>0\"]"], ["proof (prove)\nusing this:\n  s\\<^sub>0 \\<in> S\n  emeasure (measure_pmf (ct s\\<^sub>0))\n   (space (measure_pmf (ct s\\<^sub>0))) =\n  1\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ x. v (simple ct s\\<^sub>0)\n                       \\<partial>measure_pmf (ct s\\<^sub>0) =\n    v (simple ct s\\<^sub>0)", "by simp"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ x. v (simple ct s\\<^sub>0)\n                     \\<partial>measure_pmf (ct s\\<^sub>0) =\n  v (simple ct s\\<^sub>0)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>s\\<in>S\\<^sub>r - X.\n               \\<exists>t\\<in>maximal (\\<lambda>s. v (simple ct s))\n                               (set_pmf (ct s)).\n                  t \\<in> S2 \\<union> X) \\<Longrightarrow>\n    False", "finally"], ["proof (chain)\npicking this:\n  v (simple ct s\\<^sub>0) < v (simple ct s\\<^sub>0)", "show False"], ["proof (prove)\nusing this:\n  v (simple ct s\\<^sub>0) < v (simple ct s\\<^sub>0)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>s\\<in>S\\<^sub>r - X.\n     \\<exists>t\\<in>maximal (\\<lambda>s. v (simple ct s)) (set_pmf (ct s)).\n        t \\<in> S2 \\<union> X\n\ngoal (2 subgoals):\n 1. \\<exists>l\\<in>{} \\<rightarrow> {} \\<union> S2.\n       \\<forall>s\\<in>{}. l_desc {} ct l s\n 2. \\<And>T.\n       \\<lbrakk>T \\<subset> S\\<^sub>r;\n        \\<exists>l\\<in>T \\<rightarrow> T \\<union> S2.\n           \\<forall>s\\<in>T. l_desc T ct l s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s\\<in>S\\<^sub>r - T.\n                            \\<exists>l\\<in>insert s T \\<rightarrow>\n     insert s T \\<union> S2.\n                               \\<forall>sa\\<in>insert s T.\n                                  l_desc (insert s T) ct l sa", "then"], ["proof (chain)\npicking this:\n  \\<exists>s\\<in>S\\<^sub>r - X.\n     \\<exists>t\\<in>maximal (\\<lambda>s. v (simple ct s)) (set_pmf (ct s)).\n        t \\<in> S2 \\<union> X", "obtain s t where s: \"s \\<in> S\\<^sub>r - X\" and t: \"t \\<in> S2 \\<union> X\" \"t \\<in> ?M s\""], ["proof (prove)\nusing this:\n  \\<exists>s\\<in>S\\<^sub>r - X.\n     \\<exists>t\\<in>maximal (\\<lambda>s. v (simple ct s)) (set_pmf (ct s)).\n        t \\<in> S2 \\<union> X\n\ngoal (1 subgoal):\n 1. (\\<And>s t.\n        \\<lbrakk>s \\<in> S\\<^sub>r - X; t \\<in> S2 \\<union> X;\n         t \\<in> maximal (\\<lambda>s. v (simple ct s))\n                  (set_pmf (ct s))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s \\<in> S\\<^sub>r - X\n  t \\<in> S2 \\<union> X\n  t \\<in> maximal (\\<lambda>s. v (simple ct s)) (set_pmf (ct s))\n\ngoal (2 subgoals):\n 1. \\<exists>l\\<in>{} \\<rightarrow> {} \\<union> S2.\n       \\<forall>s\\<in>{}. l_desc {} ct l s\n 2. \\<And>T.\n       \\<lbrakk>T \\<subset> S\\<^sub>r;\n        \\<exists>l\\<in>T \\<rightarrow> T \\<union> S2.\n           \\<forall>s\\<in>T. l_desc T ct l s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s\\<in>S\\<^sub>r - T.\n                            \\<exists>l\\<in>insert s T \\<rightarrow>\n     insert s T \\<union> S2.\n                               \\<forall>sa\\<in>insert s T.\n                                  l_desc (insert s T) ct l sa", "with S2 \\<open>X \\<subset> S\\<^sub>r\\<close>"], ["proof (chain)\npicking this:\n  S2 \\<subseteq> S\n  X \\<subset> S\\<^sub>r\n  s \\<in> S\\<^sub>r - X\n  t \\<in> S2 \\<union> X\n  t \\<in> maximal (\\<lambda>s. v (simple ct s)) (set_pmf (ct s))", "have \"s \\<notin> S2\" and \"s \\<in> S \\<and> s \\<notin> S2\" and \"s \\<notin> X\"and [simp]: \"t \\<in> S\""], ["proof (prove)\nusing this:\n  S2 \\<subseteq> S\n  X \\<subset> S\\<^sub>r\n  s \\<in> S\\<^sub>r - X\n  t \\<in> S2 \\<union> X\n  t \\<in> maximal (\\<lambda>s. v (simple ct s)) (set_pmf (ct s))\n\ngoal (1 subgoal):\n 1. (s \\<notin> S2 &&& s \\<in> S \\<and> s \\<notin> S2) &&&\n    s \\<notin> X &&& t \\<in> S", "by (auto simp add: S\\<^sub>r_def)"], ["proof (state)\nthis:\n  s \\<notin> S2\n  s \\<in> S \\<and> s \\<notin> S2\n  s \\<notin> X\n  t \\<in> S\n\ngoal (2 subgoals):\n 1. \\<exists>l\\<in>{} \\<rightarrow> {} \\<union> S2.\n       \\<forall>s\\<in>{}. l_desc {} ct l s\n 2. \\<And>T.\n       \\<lbrakk>T \\<subset> S\\<^sub>r;\n        \\<exists>l\\<in>T \\<rightarrow> T \\<union> S2.\n           \\<forall>s\\<in>T. l_desc T ct l s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s\\<in>S\\<^sub>r - T.\n                            \\<exists>l\\<in>insert s T \\<rightarrow>\n     insert s T \\<union> S2.\n                               \\<forall>sa\\<in>insert s T.\n                                  l_desc (insert s T) ct l sa", "define l' where \"l' = l(s := t)\""], ["proof (state)\nthis:\n  l' = l(s := t)\n\ngoal (2 subgoals):\n 1. \\<exists>l\\<in>{} \\<rightarrow> {} \\<union> S2.\n       \\<forall>s\\<in>{}. l_desc {} ct l s\n 2. \\<And>T.\n       \\<lbrakk>T \\<subset> S\\<^sub>r;\n        \\<exists>l\\<in>T \\<rightarrow> T \\<union> S2.\n           \\<forall>s\\<in>T. l_desc T ct l s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s\\<in>S\\<^sub>r - T.\n                            \\<exists>l\\<in>insert s T \\<rightarrow>\n     insert s T \\<union> S2.\n                               \\<forall>sa\\<in>insert s T.\n                                  l_desc (insert s T) ct l sa", "then"], ["proof (chain)\npicking this:\n  l' = l(s := t)", "have l'_s[simp, intro]: \"l' s = t\""], ["proof (prove)\nusing this:\n  l' = l(s := t)\n\ngoal (1 subgoal):\n 1. l' s = t", "by simp"], ["proof (state)\nthis:\n  l' s = t\n\ngoal (2 subgoals):\n 1. \\<exists>l\\<in>{} \\<rightarrow> {} \\<union> S2.\n       \\<forall>s\\<in>{}. l_desc {} ct l s\n 2. \\<And>T.\n       \\<lbrakk>T \\<subset> S\\<^sub>r;\n        \\<exists>l\\<in>T \\<rightarrow> T \\<union> S2.\n           \\<forall>s\\<in>T. l_desc T ct l s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s\\<in>S\\<^sub>r - T.\n                            \\<exists>l\\<in>insert s T \\<rightarrow>\n     insert s T \\<union> S2.\n                               \\<forall>sa\\<in>insert s T.\n                                  l_desc (insert s T) ct l sa", "let ?D = \"\\<lambda>X l. directed_towards S2 (SIGMA s : X. {l s})\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>l\\<in>{} \\<rightarrow> {} \\<union> S2.\n       \\<forall>s\\<in>{}. l_desc {} ct l s\n 2. \\<And>T.\n       \\<lbrakk>T \\<subset> S\\<^sub>r;\n        \\<exists>l\\<in>T \\<rightarrow> T \\<union> S2.\n           \\<forall>s\\<in>T. l_desc T ct l s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s\\<in>S\\<^sub>r - T.\n                            \\<exists>l\\<in>insert s T \\<rightarrow>\n     insert s T \\<union> S2.\n                               \\<forall>sa\\<in>insert s T.\n                                  l_desc (insert s T) ct l sa", "{"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>l\\<in>{} \\<rightarrow> {} \\<union> S2.\n       \\<forall>s\\<in>{}. l_desc {} ct l s\n 2. \\<And>T.\n       \\<lbrakk>T \\<subset> S\\<^sub>r;\n        \\<exists>l\\<in>T \\<rightarrow> T \\<union> S2.\n           \\<forall>s\\<in>T. l_desc T ct l s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s\\<in>S\\<^sub>r - T.\n                            \\<exists>l\\<in>insert s T \\<rightarrow>\n     insert s T \\<union> S2.\n                               \\<forall>sa\\<in>insert s T.\n                                  l_desc (insert s T) ct l sa", "fix s'"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>l\\<in>{} \\<rightarrow> {} \\<union> S2.\n       \\<forall>s\\<in>{}. l_desc {} ct l s\n 2. \\<And>T.\n       \\<lbrakk>T \\<subset> S\\<^sub>r;\n        \\<exists>l\\<in>T \\<rightarrow> T \\<union> S2.\n           \\<forall>s\\<in>T. l_desc T ct l s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s\\<in>S\\<^sub>r - T.\n                            \\<exists>l\\<in>insert s T \\<rightarrow>\n     insert s T \\<union> S2.\n                               \\<forall>sa\\<in>insert s T.\n                                  l_desc (insert s T) ct l sa", "assume \"s' \\<in> ?D X l\" \"s' \\<in> X\""], ["proof (state)\nthis:\n  s' \\<in> directed_towards S2 (SIGMA s:X. {l s})\n  s' \\<in> X\n\ngoal (2 subgoals):\n 1. \\<exists>l\\<in>{} \\<rightarrow> {} \\<union> S2.\n       \\<forall>s\\<in>{}. l_desc {} ct l s\n 2. \\<And>T.\n       \\<lbrakk>T \\<subset> S\\<^sub>r;\n        \\<exists>l\\<in>T \\<rightarrow> T \\<union> S2.\n           \\<forall>s\\<in>T. l_desc T ct l s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s\\<in>S\\<^sub>r - T.\n                            \\<exists>l\\<in>insert s T \\<rightarrow>\n     insert s T \\<union> S2.\n                               \\<forall>sa\\<in>insert s T.\n                                  l_desc (insert s T) ct l sa", "from this(1)"], ["proof (chain)\npicking this:\n  s' \\<in> directed_towards S2 (SIGMA s:X. {l s})", "have \"s' \\<in> ?D (insert s X) l'\""], ["proof (prove)\nusing this:\n  s' \\<in> directed_towards S2 (SIGMA s:X. {l s})\n\ngoal (1 subgoal):\n 1. s' \\<in> directed_towards S2 (SIGMA s:insert s X. {l' s})", "by (rule directed_towards_mono) (auto simp: l'_def \\<open>s \\<notin> X\\<close>)"], ["proof (state)\nthis:\n  s' \\<in> directed_towards S2 (SIGMA s:insert s X. {l' s})\n\ngoal (2 subgoals):\n 1. \\<exists>l\\<in>{} \\<rightarrow> {} \\<union> S2.\n       \\<forall>s\\<in>{}. l_desc {} ct l s\n 2. \\<And>T.\n       \\<lbrakk>T \\<subset> S\\<^sub>r;\n        \\<exists>l\\<in>T \\<rightarrow> T \\<union> S2.\n           \\<forall>s\\<in>T. l_desc T ct l s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s\\<in>S\\<^sub>r - T.\n                            \\<exists>l\\<in>insert s T \\<rightarrow>\n     insert s T \\<union> S2.\n                               \\<forall>sa\\<in>insert s T.\n                                  l_desc (insert s T) ct l sa", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?s'3 \\<in> directed_towards S2 (SIGMA s:X. {l s});\n   ?s'3 \\<in> X\\<rbrakk>\n  \\<Longrightarrow> ?s'3\n                    \\<in> directed_towards S2 (SIGMA s:insert s X. {l' s})\n\ngoal (2 subgoals):\n 1. \\<exists>l\\<in>{} \\<rightarrow> {} \\<union> S2.\n       \\<forall>s\\<in>{}. l_desc {} ct l s\n 2. \\<And>T.\n       \\<lbrakk>T \\<subset> S\\<^sub>r;\n        \\<exists>l\\<in>T \\<rightarrow> T \\<union> S2.\n           \\<forall>s\\<in>T. l_desc T ct l s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s\\<in>S\\<^sub>r - T.\n                            \\<exists>l\\<in>insert s T \\<rightarrow>\n     insert s T \\<union> S2.\n                               \\<forall>sa\\<in>insert s T.\n                                  l_desc (insert s T) ct l sa", "note directed_towards_l' = this"], ["proof (state)\nthis:\n  \\<lbrakk>?s'3 \\<in> directed_towards S2 (SIGMA s:X. {l s});\n   ?s'3 \\<in> X\\<rbrakk>\n  \\<Longrightarrow> ?s'3\n                    \\<in> directed_towards S2 (SIGMA s:insert s X. {l' s})\n\ngoal (2 subgoals):\n 1. \\<exists>l\\<in>{} \\<rightarrow> {} \\<union> S2.\n       \\<forall>s\\<in>{}. l_desc {} ct l s\n 2. \\<And>T.\n       \\<lbrakk>T \\<subset> S\\<^sub>r;\n        \\<exists>l\\<in>T \\<rightarrow> T \\<union> S2.\n           \\<forall>s\\<in>T. l_desc T ct l s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s\\<in>S\\<^sub>r - T.\n                            \\<exists>l\\<in>insert s T \\<rightarrow>\n     insert s T \\<union> S2.\n                               \\<forall>sa\\<in>insert s T.\n                                  l_desc (insert s T) ct l sa", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>s\\<in>S\\<^sub>r - X.\n       \\<exists>l\\<in>insert s X \\<rightarrow> insert s X \\<union> S2.\n          \\<forall>sa\\<in>insert s X. l_desc (insert s X) ct l sa", "proof (intro bexI ballI, elim insertE)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>s. s = ?s \\<Longrightarrow> l_desc (insert ?s X) ct ?l1 s\n 2. \\<And>s. s \\<in> X \\<Longrightarrow> l_desc (insert ?s X) ct ?l1 s\n 3. ?l1 \\<in> insert ?s X \\<rightarrow> insert ?s X \\<union> S2\n 4. ?s \\<in> S\\<^sub>r - X", "show \"s \\<in> S\\<^sub>r - X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> S\\<^sub>r - X", "by fact"], ["proof (state)\nthis:\n  s \\<in> S\\<^sub>r - X\n\ngoal (3 subgoals):\n 1. \\<And>sa. sa = s \\<Longrightarrow> l_desc (insert s X) ct ?l1 sa\n 2. \\<And>sa. sa \\<in> X \\<Longrightarrow> l_desc (insert s X) ct ?l1 sa\n 3. ?l1 \\<in> insert s X \\<rightarrow> insert s X \\<union> S2", "show \"l' \\<in> insert s X \\<rightarrow> insert s X \\<union> S2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l' \\<in> insert s X \\<rightarrow> insert s X \\<union> S2", "using s t l"], ["proof (prove)\nusing this:\n  s \\<in> S\\<^sub>r - X\n  t \\<in> S2 \\<union> X\n  t \\<in> maximal (\\<lambda>s. v (simple ct s)) (set_pmf (ct s))\n  l \\<in> X \\<rightarrow> X \\<union> S2\n\ngoal (1 subgoal):\n 1. l' \\<in> insert s X \\<rightarrow> insert s X \\<union> S2", "by (auto simp: l'_def)"], ["proof (state)\nthis:\n  l' \\<in> insert s X \\<rightarrow> insert s X \\<union> S2\n\ngoal (2 subgoals):\n 1. \\<And>sa. sa = s \\<Longrightarrow> l_desc (insert s X) ct l' sa\n 2. \\<And>sa. sa \\<in> X \\<Longrightarrow> l_desc (insert s X) ct l' sa", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>sa. sa = s \\<Longrightarrow> l_desc (insert s X) ct l' sa\n 2. \\<And>sa. sa \\<in> X \\<Longrightarrow> l_desc (insert s X) ct l' sa", "fix s'"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>sa. sa = s \\<Longrightarrow> l_desc (insert s X) ct l' sa\n 2. \\<And>sa. sa \\<in> X \\<Longrightarrow> l_desc (insert s X) ct l' sa", "assume s': \"s' \\<in> X\""], ["proof (state)\nthis:\n  s' \\<in> X\n\ngoal (2 subgoals):\n 1. \\<And>sa. sa = s \\<Longrightarrow> l_desc (insert s X) ct l' sa\n 2. \\<And>sa. sa \\<in> X \\<Longrightarrow> l_desc (insert s X) ct l' sa", "moreover"], ["proof (state)\nthis:\n  s' \\<in> X\n\ngoal (2 subgoals):\n 1. \\<And>sa. sa = s \\<Longrightarrow> l_desc (insert s X) ct l' sa\n 2. \\<And>sa. sa \\<in> X \\<Longrightarrow> l_desc (insert s X) ct l' sa", "from desc[OF s']"], ["proof (chain)\npicking this:\n  l_desc X ct l s'", "have \"s' \\<in> ?D X l\" and *: \"?v s' \\<le> ?v (l s')\" \"l s' \\<in> ?M s'\""], ["proof (prove)\nusing this:\n  l_desc X ct l s'\n\ngoal (1 subgoal):\n 1. s' \\<in> directed_towards S2 (SIGMA s:X. {l s}) &&&\n    v (simple ct s') \\<le> v (simple ct (l s')) &&&\n    l s' \\<in> maximal (\\<lambda>s. v (simple ct s)) (set_pmf (ct s'))", "by (auto simp: l_desc_def)"], ["proof (state)\nthis:\n  s' \\<in> directed_towards S2 (SIGMA s:X. {l s})\n  v (simple ct s') \\<le> v (simple ct (l s'))\n  l s' \\<in> maximal (\\<lambda>s. v (simple ct s)) (set_pmf (ct s'))\n\ngoal (2 subgoals):\n 1. \\<And>sa. sa = s \\<Longrightarrow> l_desc (insert s X) ct l' sa\n 2. \\<And>sa. sa \\<in> X \\<Longrightarrow> l_desc (insert s X) ct l' sa", "moreover"], ["proof (state)\nthis:\n  s' \\<in> directed_towards S2 (SIGMA s:X. {l s})\n  v (simple ct s') \\<le> v (simple ct (l s'))\n  l s' \\<in> maximal (\\<lambda>s. v (simple ct s)) (set_pmf (ct s'))\n\ngoal (2 subgoals):\n 1. \\<And>sa. sa = s \\<Longrightarrow> l_desc (insert s X) ct l' sa\n 2. \\<And>sa. sa \\<in> X \\<Longrightarrow> l_desc (insert s X) ct l' sa", "have \"l' s' = l s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l' s' = l s'", "using \\<open>s' \\<in> X\\<close> s"], ["proof (prove)\nusing this:\n  s' \\<in> X\n  s \\<in> S\\<^sub>r - X\n\ngoal (1 subgoal):\n 1. l' s' = l s'", "by (auto simp add: l'_def)"], ["proof (state)\nthis:\n  l' s' = l s'\n\ngoal (2 subgoals):\n 1. \\<And>sa. sa = s \\<Longrightarrow> l_desc (insert s X) ct l' sa\n 2. \\<And>sa. sa \\<in> X \\<Longrightarrow> l_desc (insert s X) ct l' sa", "ultimately"], ["proof (chain)\npicking this:\n  s' \\<in> X\n  s' \\<in> directed_towards S2 (SIGMA s:X. {l s})\n  v (simple ct s') \\<le> v (simple ct (l s'))\n  l s' \\<in> maximal (\\<lambda>s. v (simple ct s)) (set_pmf (ct s'))\n  l' s' = l s'", "show \"l_desc (insert s X) ct l' s'\""], ["proof (prove)\nusing this:\n  s' \\<in> X\n  s' \\<in> directed_towards S2 (SIGMA s:X. {l s})\n  v (simple ct s') \\<le> v (simple ct (l s'))\n  l s' \\<in> maximal (\\<lambda>s. v (simple ct s)) (set_pmf (ct s'))\n  l' s' = l s'\n\ngoal (1 subgoal):\n 1. l_desc (insert s X) ct l' s'", "by (auto simp: l_desc_def intro!: directed_towards_l')"], ["proof (state)\nthis:\n  l_desc (insert s X) ct l' s'\n\ngoal (1 subgoal):\n 1. \\<And>sa. sa = s \\<Longrightarrow> l_desc (insert s X) ct l' sa", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>sa. sa = s \\<Longrightarrow> l_desc (insert s X) ct l' sa", "fix s'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>sa. sa = s \\<Longrightarrow> l_desc (insert s X) ct l' sa", "assume \"s' = s\""], ["proof (state)\nthis:\n  s' = s\n\ngoal (1 subgoal):\n 1. \\<And>sa. sa = s \\<Longrightarrow> l_desc (insert s X) ct l' sa", "show \"l_desc (insert s X) ct l' s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l_desc (insert s X) ct l' s'", "unfolding \\<open>s' = s\\<close> l_desc_def l'_s"], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> directed_towards S2 (SIGMA s:insert s X. {l' s}) \\<and>\n    v (simple ct s) \\<le> v (simple ct t) \\<and>\n    t \\<in> maximal (\\<lambda>s. v (simple ct s)) (set_pmf (ct s))", "proof (intro conjI)"], ["proof (state)\ngoal (3 subgoals):\n 1. s \\<in> directed_towards S2 (SIGMA s:insert s X. {l' s})\n 2. v (simple ct s) \\<le> v (simple ct t)\n 3. t \\<in> maximal (\\<lambda>s. v (simple ct s)) (set_pmf (ct s))", "show \"s \\<in> ?D (insert s X) l'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> directed_towards S2 (SIGMA s:insert s X. {l' s})", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    s \\<in> directed_towards S2 (SIGMA s:insert s X. {l' s})\n 2. \\<not> ?P \\<Longrightarrow>\n    s \\<in> directed_towards S2 (SIGMA s:insert s X. {l' s})", "assume \"t \\<notin> S2\""], ["proof (state)\nthis:\n  t \\<notin> S2\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    s \\<in> directed_towards S2 (SIGMA s:insert s X. {l' s})\n 2. \\<not> ?P \\<Longrightarrow>\n    s \\<in> directed_towards S2 (SIGMA s:insert s X. {l' s})", "with t"], ["proof (chain)\npicking this:\n  t \\<in> S2 \\<union> X\n  t \\<in> maximal (\\<lambda>s. v (simple ct s)) (set_pmf (ct s))\n  t \\<notin> S2", "have \"t \\<in> X\""], ["proof (prove)\nusing this:\n  t \\<in> S2 \\<union> X\n  t \\<in> maximal (\\<lambda>s. v (simple ct s)) (set_pmf (ct s))\n  t \\<notin> S2\n\ngoal (1 subgoal):\n 1. t \\<in> X", "by auto"], ["proof (state)\nthis:\n  t \\<in> X\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    s \\<in> directed_towards S2 (SIGMA s:insert s X. {l' s})\n 2. \\<not> ?P \\<Longrightarrow>\n    s \\<in> directed_towards S2 (SIGMA s:insert s X. {l' s})", "with desc"], ["proof (chain)\npicking this:\n  ?s1 \\<in> X \\<Longrightarrow> l_desc X ct l ?s1\n  t \\<in> X", "have \"t \\<in> ?D X l\""], ["proof (prove)\nusing this:\n  ?s1 \\<in> X \\<Longrightarrow> l_desc X ct l ?s1\n  t \\<in> X\n\ngoal (1 subgoal):\n 1. t \\<in> directed_towards S2 (SIGMA s:X. {l s})", "by (simp add: l_desc_def)"], ["proof (state)\nthis:\n  t \\<in> directed_towards S2 (SIGMA s:X. {l s})\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    s \\<in> directed_towards S2 (SIGMA s:insert s X. {l' s})\n 2. \\<not> ?P \\<Longrightarrow>\n    s \\<in> directed_towards S2 (SIGMA s:insert s X. {l' s})", "then"], ["proof (chain)\npicking this:\n  t \\<in> directed_towards S2 (SIGMA s:X. {l s})", "show ?thesis"], ["proof (prove)\nusing this:\n  t \\<in> directed_towards S2 (SIGMA s:X. {l s})\n\ngoal (1 subgoal):\n 1. s \\<in> directed_towards S2 (SIGMA s:insert s X. {l' s})", "by (force intro: directed_towards.step[OF directed_towards_l'] \\<open>t \\<in> X\\<close>)"], ["proof (state)\nthis:\n  s \\<in> directed_towards S2 (SIGMA s:insert s X. {l' s})\n\ngoal (1 subgoal):\n 1. \\<not> t \\<notin> S2 \\<Longrightarrow>\n    s \\<in> directed_towards S2 (SIGMA s:insert s X. {l' s})", "qed (force intro: directed_towards.step directed_towards.start)"], ["proof (state)\nthis:\n  s \\<in> directed_towards S2 (SIGMA s:insert s X. {l' s})\n\ngoal (2 subgoals):\n 1. v (simple ct s) \\<le> v (simple ct t)\n 2. t \\<in> maximal (\\<lambda>s. v (simple ct s)) (set_pmf (ct s))", "from \\<open>s \\<in> S\\<^sub>r - X\\<close> S\\<^sub>r_S1"], ["proof (chain)\npicking this:\n  s \\<in> S\\<^sub>r - X\n  S\\<^sub>r \\<subseteq> S1", "have [simp]: \"s \\<in> S1\" \"s \\<in> S\""], ["proof (prove)\nusing this:\n  s \\<in> S\\<^sub>r - X\n  S\\<^sub>r \\<subseteq> S1\n\ngoal (1 subgoal):\n 1. s \\<in> S1 &&& s \\<in> S", "by (auto simp: S\\<^sub>r_def)"], ["proof (state)\nthis:\n  s \\<in> S1\n  s \\<in> S\n\ngoal (2 subgoals):\n 1. v (simple ct s) \\<le> v (simple ct t)\n 2. t \\<in> maximal (\\<lambda>s. v (simple ct s)) (set_pmf (ct s))", "show \"?v s \\<le> ?v t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v (simple ct s) \\<le> v (simple ct t)", "using t(2)[THEN maximalD2] ct"], ["proof (prove)\nusing this:\n  ?y \\<in> set_pmf (ct s) \\<Longrightarrow>\n  v (simple ct ?y) \\<le> v (simple ct t)\n  proper ct\n\ngoal (1 subgoal):\n 1. v (simple ct s) \\<le> v (simple ct t)", "by (auto simp add: v_S1 AE_measure_pmf_iff proper_def Pi_iff PiE_def\n                   intro!: measure_pmf.nn_integral_le_const)"], ["proof (state)\nthis:\n  v (simple ct s) \\<le> v (simple ct t)\n\ngoal (1 subgoal):\n 1. t \\<in> maximal (\\<lambda>s. v (simple ct s)) (set_pmf (ct s))", "qed fact"], ["proof (state)\nthis:\n  l_desc (insert s X) ct l' s'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>s\\<in>S\\<^sub>r - X.\n     \\<exists>l\\<in>insert s X \\<rightarrow> insert s X \\<union> S2.\n        \\<forall>sa\\<in>insert s X. l_desc (insert s X) ct l sa\n\ngoal (1 subgoal):\n 1. \\<exists>l\\<in>{} \\<rightarrow> {} \\<union> S2.\n       \\<forall>s\\<in>{}. l_desc {} ct l s", "qed simp"], ["proof (state)\nthis:\n  \\<exists>l\\<in>S\\<^sub>r \\<rightarrow> S\\<^sub>r \\<union> S2.\n     \\<forall>s\\<in>S\\<^sub>r. l_desc S\\<^sub>r ct l s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma F_v_memoryless:\n  obtains ct where \"ct \\<in> Pi\\<^sub>E S K\" \"v\\<circ>simple ct = F_sup (v\\<circ>simple ct)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>ct.\n        \\<lbrakk>ct \\<in> Pi\\<^sub>E S K;\n         v \\<circ> simple ct = F_sup (v \\<circ> simple ct)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof atomize_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>ct.\n       ct \\<in> Pi\\<^sub>E S K \\<and>\n       v \\<circ> simple ct = F_sup (v \\<circ> simple ct)", "define R where \"R = {(ct(s := D), ct) | ct s D.\n    ct \\<in> Pi\\<^sub>E S K \\<and> proper ct \\<and> s \\<in> S\\<^sub>r \\<and> D \\<in> K s \\<and> v (simple ct s) < (\\<integral>\\<^sup>+t. v (simple ct t) \\<partial>D) }\""], ["proof (state)\nthis:\n  R =\n  {(ct(s := D), ct) |ct s D.\n   ct \\<in> Pi\\<^sub>E S K \\<and>\n   proper ct \\<and>\n   s \\<in> S\\<^sub>r \\<and>\n   D \\<in> K s \\<and>\n   v (simple ct s)\n   < \\<integral>\\<^sup>+ t. v (simple ct t) \\<partial>measure_pmf D}\n\ngoal (1 subgoal):\n 1. \\<exists>ct.\n       ct \\<in> Pi\\<^sub>E S K \\<and>\n       v \\<circ> simple ct = F_sup (v \\<circ> simple ct)", "{"], ["proof (state)\nthis:\n  R =\n  {(ct(s := D), ct) |ct s D.\n   ct \\<in> Pi\\<^sub>E S K \\<and>\n   proper ct \\<and>\n   s \\<in> S\\<^sub>r \\<and>\n   D \\<in> K s \\<and>\n   v (simple ct s)\n   < \\<integral>\\<^sup>+ t. v (simple ct t) \\<partial>measure_pmf D}\n\ngoal (1 subgoal):\n 1. \\<exists>ct.\n       ct \\<in> Pi\\<^sub>E S K \\<and>\n       v \\<circ> simple ct = F_sup (v \\<circ> simple ct)", "fix ct ct'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>ct.\n       ct \\<in> Pi\\<^sub>E S K \\<and>\n       v \\<circ> simple ct = F_sup (v \\<circ> simple ct)", "assume ct_ct': \"(ct', ct) \\<in> R\""], ["proof (state)\nthis:\n  (ct', ct) \\<in> R\n\ngoal (1 subgoal):\n 1. \\<exists>ct.\n       ct \\<in> Pi\\<^sub>E S K \\<and>\n       v \\<circ> simple ct = F_sup (v \\<circ> simple ct)", "let ?v = \"\\<lambda>s. v (simple ct s)\" and ?v' = \"\\<lambda>s. v (simple ct' s)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>ct.\n       ct \\<in> Pi\\<^sub>E S K \\<and>\n       v \\<circ> simple ct = F_sup (v \\<circ> simple ct)", "from ct_ct'"], ["proof (chain)\npicking this:\n  (ct', ct) \\<in> R", "obtain s D where \"ct \\<in> Pi\\<^sub>E S K\" \"proper ct\" and s: \"s \\<in> S\\<^sub>r\" and D: \"D \\<in> K s\"\n      and not_maximal: \"?v s < (\\<integral>\\<^sup>+t. ?v t \\<partial>D)\" and ct'_eq: \"ct' = ct(s := D)\""], ["proof (prove)\nusing this:\n  (ct', ct) \\<in> R\n\ngoal (1 subgoal):\n 1. (\\<And>s D.\n        \\<lbrakk>ct \\<in> Pi\\<^sub>E S K; proper ct; s \\<in> S\\<^sub>r;\n         D \\<in> K s;\n         v (simple ct s)\n         < \\<integral>\\<^sup>+ t. v (simple ct t) \\<partial>measure_pmf D;\n         ct' = ct(s := D)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: R_def)"], ["proof (state)\nthis:\n  ct \\<in> Pi\\<^sub>E S K\n  proper ct\n  s \\<in> S\\<^sub>r\n  D \\<in> K s\n  v (simple ct s)\n  < \\<integral>\\<^sup>+ t. v (simple ct t) \\<partial>measure_pmf D\n  ct' = ct(s := D)\n\ngoal (1 subgoal):\n 1. \\<exists>ct.\n       ct \\<in> Pi\\<^sub>E S K \\<and>\n       v \\<circ> simple ct = F_sup (v \\<circ> simple ct)", "with S\\<^sub>r_S1"], ["proof (chain)\npicking this:\n  S\\<^sub>r \\<subseteq> S1\n  ct \\<in> Pi\\<^sub>E S K\n  proper ct\n  s \\<in> S\\<^sub>r\n  D \\<in> K s\n  v (simple ct s)\n  < \\<integral>\\<^sup>+ t. v (simple ct t) \\<partial>measure_pmf D\n  ct' = ct(s := D)", "have ct: \"ct \\<in> Pi S K\" and \"s \\<in> S\" and \"s \\<in> S1\""], ["proof (prove)\nusing this:\n  S\\<^sub>r \\<subseteq> S1\n  ct \\<in> Pi\\<^sub>E S K\n  proper ct\n  s \\<in> S\\<^sub>r\n  D \\<in> K s\n  v (simple ct s)\n  < \\<integral>\\<^sup>+ t. v (simple ct t) \\<partial>measure_pmf D\n  ct' = ct(s := D)\n\ngoal (1 subgoal):\n 1. ct \\<in> Pi S K &&& s \\<in> S &&& s \\<in> S1", "by (auto simp: S\\<^sub>r_def)"], ["proof (state)\nthis:\n  ct \\<in> Pi S K\n  s \\<in> S\n  s \\<in> S1\n\ngoal (1 subgoal):\n 1. \\<exists>ct.\n       ct \\<in> Pi\\<^sub>E S K \\<and>\n       v \\<circ> simple ct = F_sup (v \\<circ> simple ct)", "then"], ["proof (chain)\npicking this:\n  ct \\<in> Pi S K\n  s \\<in> S\n  s \\<in> S1", "have valid_ct[simp]: \"\\<And>s. s \\<in> S \\<Longrightarrow> simple ct s \\<in> cfg_on s\""], ["proof (prove)\nusing this:\n  ct \\<in> Pi S K\n  s \\<in> S\n  s \\<in> S1\n\ngoal (1 subgoal):\n 1. \\<And>s. s \\<in> S \\<Longrightarrow> simple ct s \\<in> cfg_on s", "by simp"], ["proof (state)\nthis:\n  ?s1 \\<in> S \\<Longrightarrow> simple ct ?s1 \\<in> cfg_on ?s1\n\ngoal (1 subgoal):\n 1. \\<exists>ct.\n       ct \\<in> Pi\\<^sub>E S K \\<and>\n       v \\<circ> simple ct = F_sup (v \\<circ> simple ct)", "from ct'_eq"], ["proof (chain)\npicking this:\n  ct' = ct(s := D)", "have [simp]: \"ct' s = D\" \"\\<And>t. t \\<noteq> s \\<Longrightarrow> ct' t = ct t\""], ["proof (prove)\nusing this:\n  ct' = ct(s := D)\n\ngoal (1 subgoal):\n 1. ct' s = D &&& (\\<And>t. t \\<noteq> s \\<Longrightarrow> ct' t = ct t)", "by simp_all"], ["proof (state)\nthis:\n  ct' s = D\n  ?t1 \\<noteq> s \\<Longrightarrow> ct' ?t1 = ct ?t1\n\ngoal (1 subgoal):\n 1. \\<exists>ct.\n       ct \\<in> Pi\\<^sub>E S K \\<and>\n       v \\<circ> simple ct = F_sup (v \\<circ> simple ct)", "from ct_ct' S\\<^sub>r"], ["proof (chain)\npicking this:\n  (ct', ct) \\<in> R\n  S\\<^sub>r \\<subseteq> S", "have ct'_E: \"ct' \\<in> Pi\\<^sub>E S K\""], ["proof (prove)\nusing this:\n  (ct', ct) \\<in> R\n  S\\<^sub>r \\<subseteq> S\n\ngoal (1 subgoal):\n 1. ct' \\<in> Pi\\<^sub>E S K", "by (auto simp: ct'_eq R_def)"], ["proof (state)\nthis:\n  ct' \\<in> Pi\\<^sub>E S K\n\ngoal (1 subgoal):\n 1. \\<exists>ct.\n       ct \\<in> Pi\\<^sub>E S K \\<and>\n       v \\<circ> simple ct = F_sup (v \\<circ> simple ct)", "from ct s D"], ["proof (chain)\npicking this:\n  ct \\<in> Pi S K\n  s \\<in> S\\<^sub>r\n  D \\<in> K s", "have ct': \"ct' \\<in> Pi S K\""], ["proof (prove)\nusing this:\n  ct \\<in> Pi S K\n  s \\<in> S\\<^sub>r\n  D \\<in> K s\n\ngoal (1 subgoal):\n 1. ct' \\<in> Pi S K", "by (auto simp: ct'_eq)"], ["proof (state)\nthis:\n  ct' \\<in> Pi S K\n\ngoal (1 subgoal):\n 1. \\<exists>ct.\n       ct \\<in> Pi\\<^sub>E S K \\<and>\n       v \\<circ> simple ct = F_sup (v \\<circ> simple ct)", "then"], ["proof (chain)\npicking this:\n  ct' \\<in> Pi S K", "have valid_ct'[simp]: \"\\<And>s. s \\<in> S \\<Longrightarrow> simple ct' s \\<in> cfg_on s\""], ["proof (prove)\nusing this:\n  ct' \\<in> Pi S K\n\ngoal (1 subgoal):\n 1. \\<And>s. s \\<in> S \\<Longrightarrow> simple ct' s \\<in> cfg_on s", "by simp"], ["proof (state)\nthis:\n  ?s1 \\<in> S \\<Longrightarrow> simple ct' ?s1 \\<in> cfg_on ?s1\n\ngoal (1 subgoal):\n 1. \\<exists>ct.\n       ct \\<in> Pi\\<^sub>E S K \\<and>\n       v \\<circ> simple ct = F_sup (v \\<circ> simple ct)", "from exists_l_desc[OF \\<open>proper ct\\<close>]"], ["proof (chain)\npicking this:\n  \\<exists>l\\<in>S\\<^sub>r \\<rightarrow> S\\<^sub>r \\<union> S2.\n     \\<forall>s\\<in>S\\<^sub>r. l_desc S\\<^sub>r ct l s", "obtain l where l: \"l \\<in> S\\<^sub>r \\<rightarrow> S\\<^sub>r \\<union> S2\" and \"\\<And>s. s \\<in> S\\<^sub>r \\<Longrightarrow> l_desc S\\<^sub>r ct l s\""], ["proof (prove)\nusing this:\n  \\<exists>l\\<in>S\\<^sub>r \\<rightarrow> S\\<^sub>r \\<union> S2.\n     \\<forall>s\\<in>S\\<^sub>r. l_desc S\\<^sub>r ct l s\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>l \\<in> S\\<^sub>r \\<rightarrow> S\\<^sub>r \\<union> S2;\n         \\<And>s.\n            s \\<in> S\\<^sub>r \\<Longrightarrow>\n            l_desc S\\<^sub>r ct l s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  l \\<in> S\\<^sub>r \\<rightarrow> S\\<^sub>r \\<union> S2\n  ?s1 \\<in> S\\<^sub>r \\<Longrightarrow> l_desc S\\<^sub>r ct l ?s1\n\ngoal (1 subgoal):\n 1. \\<exists>ct.\n       ct \\<in> Pi\\<^sub>E S K \\<and>\n       v \\<circ> simple ct = F_sup (v \\<circ> simple ct)", "then"], ["proof (chain)\npicking this:\n  l \\<in> S\\<^sub>r \\<rightarrow> S\\<^sub>r \\<union> S2\n  ?s1 \\<in> S\\<^sub>r \\<Longrightarrow> l_desc S\\<^sub>r ct l ?s1", "have directed_l: \"\\<And>s. s \\<in> S\\<^sub>r \\<Longrightarrow> s \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. {l s})\"\n      and v_l_mono: \"\\<And>s. s \\<in> S\\<^sub>r \\<Longrightarrow> ?v s \\<le> ?v (l s)\"\n      and l_in_Ea: \"\\<And>s. s \\<in> S\\<^sub>r \\<Longrightarrow> l s \\<in> ct s\""], ["proof (prove)\nusing this:\n  l \\<in> S\\<^sub>r \\<rightarrow> S\\<^sub>r \\<union> S2\n  ?s1 \\<in> S\\<^sub>r \\<Longrightarrow> l_desc S\\<^sub>r ct l ?s1\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        s \\<in> S\\<^sub>r \\<Longrightarrow>\n        s \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. {l s})) &&&\n    (\\<And>s.\n        s \\<in> S\\<^sub>r \\<Longrightarrow>\n        v (simple ct s) \\<le> v (simple ct (l s))) &&&\n    (\\<And>s. s \\<in> S\\<^sub>r \\<Longrightarrow> l s \\<in> set_pmf (ct s))", "by (auto simp: l_desc_def dest!: maximalD1)"], ["proof (state)\nthis:\n  ?s1 \\<in> S\\<^sub>r \\<Longrightarrow>\n  ?s1 \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. {l s})\n  ?s1 \\<in> S\\<^sub>r \\<Longrightarrow>\n  v (simple ct ?s1) \\<le> v (simple ct (l ?s1))\n  ?s1 \\<in> S\\<^sub>r \\<Longrightarrow> l ?s1 \\<in> set_pmf (ct ?s1)\n\ngoal (1 subgoal):\n 1. \\<exists>ct.\n       ct \\<in> Pi\\<^sub>E S K \\<and>\n       v \\<circ> simple ct = F_sup (v \\<circ> simple ct)", "let ?E = \"\\<lambda>ct. SIGMA s:S\\<^sub>r. ct s\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>ct.\n       ct \\<in> Pi\\<^sub>E S K \\<and>\n       v \\<circ> simple ct = F_sup (v \\<circ> simple ct)", "let ?D = \"\\<lambda>ct. directed_towards S2 (?E ct)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>ct.\n       ct \\<in> Pi\\<^sub>E S K \\<and>\n       v \\<circ> simple ct = F_sup (v \\<circ> simple ct)", "have finite_E[simp]: \"\\<And>s. s \\<in> S \\<Longrightarrow> finite (ct' s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s. s \\<in> S \\<Longrightarrow> finite (set_pmf (ct' s))", "using ct' K_closed"], ["proof (prove)\nusing this:\n  ct' \\<in> Pi S K\n  ?s \\<in> S \\<Longrightarrow> \\<Union> (set_pmf ` K ?s) \\<subseteq> S\n\ngoal (1 subgoal):\n 1. \\<And>s. s \\<in> S \\<Longrightarrow> finite (set_pmf (ct' s))", "by (intro rev_finite_subset[OF S_finite]) auto"], ["proof (state)\nthis:\n  ?s2 \\<in> S \\<Longrightarrow> finite (set_pmf (ct' ?s2))\n\ngoal (1 subgoal):\n 1. \\<exists>ct.\n       ct \\<in> Pi\\<^sub>E S K \\<and>\n       v \\<circ> simple ct = F_sup (v \\<circ> simple ct)", "have \"maximal ?v (ct' s) \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. maximal (\\<lambda>s. v (simple ct s)) (set_pmf (ct' s)) \\<noteq> {}", "using ct' D \\<open>s\\<in>S\\<close> finite_E[of s]"], ["proof (prove)\nusing this:\n  ct' \\<in> Pi S K\n  D \\<in> K s\n  s \\<in> S\n  s \\<in> S \\<Longrightarrow> finite (set_pmf (ct' s))\n\ngoal (1 subgoal):\n 1. maximal (\\<lambda>s. v (simple ct s)) (set_pmf (ct' s)) \\<noteq> {}", "by (intro maximal_ne set_pmf_not_empty) (auto simp del: finite_E)"], ["proof (state)\nthis:\n  maximal (\\<lambda>s. v (simple ct s)) (set_pmf (ct' s)) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>ct.\n       ct \\<in> Pi\\<^sub>E S K \\<and>\n       v \\<circ> simple ct = F_sup (v \\<circ> simple ct)", "then"], ["proof (chain)\npicking this:\n  maximal (\\<lambda>s. v (simple ct s)) (set_pmf (ct' s)) \\<noteq> {}", "obtain s' where s': \"s' \\<in> maximal ?v (ct' s)\""], ["proof (prove)\nusing this:\n  maximal (\\<lambda>s. v (simple ct s)) (set_pmf (ct' s)) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>s'.\n        s' \\<in> maximal (\\<lambda>s. v (simple ct s))\n                  (set_pmf (ct' s)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  s' \\<in> maximal (\\<lambda>s. v (simple ct s)) (set_pmf (ct' s))\n\ngoal (1 subgoal):\n 1. \\<exists>ct.\n       ct \\<in> Pi\\<^sub>E S K \\<and>\n       v \\<circ> simple ct = F_sup (v \\<circ> simple ct)", "with K_closed[OF \\<open>s \\<in> S\\<close>] D"], ["proof (chain)\npicking this:\n  \\<Union> (set_pmf ` K s) \\<subseteq> S\n  D \\<in> K s\n  s' \\<in> maximal (\\<lambda>s. v (simple ct s)) (set_pmf (ct' s))", "have \"s' \\<in> S\""], ["proof (prove)\nusing this:\n  \\<Union> (set_pmf ` K s) \\<subseteq> S\n  D \\<in> K s\n  s' \\<in> maximal (\\<lambda>s. v (simple ct s)) (set_pmf (ct' s))\n\ngoal (1 subgoal):\n 1. s' \\<in> S", "by (auto dest!: maximalD1)"], ["proof (state)\nthis:\n  s' \\<in> S\n\ngoal (1 subgoal):\n 1. \\<exists>ct.\n       ct \\<in> Pi\\<^sub>E S K \\<and>\n       v \\<circ> simple ct = F_sup (v \\<circ> simple ct)", "have \"s' \\<noteq> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s' \\<noteq> s", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. s' = s \\<Longrightarrow> False", "assume [simp]: \"s' = s\""], ["proof (state)\nthis:\n  s' = s\n\ngoal (1 subgoal):\n 1. s' = s \\<Longrightarrow> False", "have \"?v s < (\\<integral>\\<^sup>+t. ?v t \\<partial>D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v (simple ct s)\n    < \\<integral>\\<^sup>+ t. v (simple ct t) \\<partial>measure_pmf D", "by fact"], ["proof (state)\nthis:\n  v (simple ct s)\n  < \\<integral>\\<^sup>+ t. v (simple ct t) \\<partial>measure_pmf D\n\ngoal (1 subgoal):\n 1. s' = s \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  v (simple ct s)\n  < \\<integral>\\<^sup>+ t. v (simple ct t) \\<partial>measure_pmf D\n\ngoal (1 subgoal):\n 1. s' = s \\<Longrightarrow> False", "have \"\\<dots> \\<le> (\\<integral>\\<^sup>+t. ?v s \\<partial>D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ t. v (simple ct t) \\<partial>measure_pmf D\n    \\<le> \\<integral>\\<^sup>+ t. v (simple ct s) \\<partial>measure_pmf D", "using \\<open>s \\<in> S\\<close> s' D"], ["proof (prove)\nusing this:\n  s \\<in> S\n  s' \\<in> maximal (\\<lambda>s. v (simple ct s)) (set_pmf (ct' s))\n  D \\<in> K s\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ t. v (simple ct t) \\<partial>measure_pmf D\n    \\<le> \\<integral>\\<^sup>+ t. v (simple ct s) \\<partial>measure_pmf D", "by (intro nn_integral_mono_AE) (auto simp: AE_measure_pmf_iff intro: maximalD2)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ t. v (simple ct t) \\<partial>measure_pmf D\n  \\<le> \\<integral>\\<^sup>+ t. v (simple ct s) \\<partial>measure_pmf D\n\ngoal (1 subgoal):\n 1. s' = s \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  v (simple ct s)\n  < \\<integral>\\<^sup>+ t. v (simple ct s) \\<partial>measure_pmf D", "show False"], ["proof (prove)\nusing this:\n  v (simple ct s)\n  < \\<integral>\\<^sup>+ t. v (simple ct s) \\<partial>measure_pmf D\n\ngoal (1 subgoal):\n 1. False", "using measure_pmf.emeasure_space_1[of D]"], ["proof (prove)\nusing this:\n  v (simple ct s)\n  < \\<integral>\\<^sup>+ t. v (simple ct s) \\<partial>measure_pmf D\n  emeasure (measure_pmf D) (space (measure_pmf D)) = 1\n\ngoal (1 subgoal):\n 1. False", "by (simp add: \\<open>s \\<in> S\\<close> ct)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  s' \\<noteq> s\n\ngoal (1 subgoal):\n 1. \\<exists>ct.\n       ct \\<in> Pi\\<^sub>E S K \\<and>\n       v \\<circ> simple ct = F_sup (v \\<circ> simple ct)", "have \"p s' \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p s' \\<noteq> 0", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. p s' = 0 \\<Longrightarrow> False", "assume \"p s' = 0\""], ["proof (state)\nthis:\n  p s' = 0\n\ngoal (1 subgoal):\n 1. p s' = 0 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  p s' = 0", "have \"?v s' = 0\""], ["proof (prove)\nusing this:\n  p s' = 0\n\ngoal (1 subgoal):\n 1. v (simple ct s') = 0", "using v_le_p[of \"simple ct s'\"] ct \\<open>s' \\<in> S\\<close>"], ["proof (prove)\nusing this:\n  p s' = 0\n  simple ct s' \\<in> valid_cfg \\<Longrightarrow>\n  v (simple ct s') \\<le> p (state (simple ct s'))\n  ct \\<in> Pi S K\n  s' \\<in> S\n\ngoal (1 subgoal):\n 1. v (simple ct s') = 0", "by (auto intro!: antisym ct)"], ["proof (state)\nthis:\n  v (simple ct s') = 0\n\ngoal (1 subgoal):\n 1. p s' = 0 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  v (simple ct s') = 0", "have \"(\\<integral>\\<^sup>+t. ?v t \\<partial>D) = 0\""], ["proof (prove)\nusing this:\n  v (simple ct s') = 0\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ t. v (simple ct t) \\<partial>measure_pmf D = 0", "using maximalD2[OF s']"], ["proof (prove)\nusing this:\n  v (simple ct s') = 0\n  ?y \\<in> set_pmf (ct' s) \\<Longrightarrow>\n  v (simple ct ?y) \\<le> v (simple ct s')\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ t. v (simple ct t) \\<partial>measure_pmf D = 0", "by (subst nn_integral_0_iff_AE) (auto simp: \\<open>s\\<in>S\\<close> D AE_measure_pmf_iff)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ t. v (simple ct t) \\<partial>measure_pmf D = 0\n\ngoal (1 subgoal):\n 1. p s' = 0 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<integral>\\<^sup>+ t. v (simple ct t) \\<partial>measure_pmf D = 0", "have \"?v s < 0\""], ["proof (prove)\nusing this:\n  \\<integral>\\<^sup>+ t. v (simple ct t) \\<partial>measure_pmf D = 0\n\ngoal (1 subgoal):\n 1. v (simple ct s) < 0", "using not_maximal"], ["proof (prove)\nusing this:\n  \\<integral>\\<^sup>+ t. v (simple ct t) \\<partial>measure_pmf D = 0\n  v (simple ct s)\n  < \\<integral>\\<^sup>+ t. v (simple ct t) \\<partial>measure_pmf D\n\ngoal (1 subgoal):\n 1. v (simple ct s) < 0", "by auto"], ["proof (state)\nthis:\n  v (simple ct s) < 0\n\ngoal (1 subgoal):\n 1. p s' = 0 \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  v (simple ct s) < 0", "show False"], ["proof (prove)\nusing this:\n  v (simple ct s) < 0\n\ngoal (1 subgoal):\n 1. False", "using \\<open>s\\<in>S\\<close>"], ["proof (prove)\nusing this:\n  v (simple ct s) < 0\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. False", "by (simp add: ct)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p s' \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>ct.\n       ct \\<in> Pi\\<^sub>E S K \\<and>\n       v \\<circ> simple ct = F_sup (v \\<circ> simple ct)", "with \\<open>s' \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  s' \\<in> S\n  p s' \\<noteq> 0", "have \"s' \\<in> S2 \\<union> S\\<^sub>r\""], ["proof (prove)\nusing this:\n  s' \\<in> S\n  p s' \\<noteq> 0\n\ngoal (1 subgoal):\n 1. s' \\<in> S2 \\<union> S\\<^sub>r", "by (auto simp: S\\<^sub>r_def S\\<^sub>e_def)"], ["proof (state)\nthis:\n  s' \\<in> S2 \\<union> S\\<^sub>r\n\ngoal (1 subgoal):\n 1. \\<exists>ct.\n       ct \\<in> Pi\\<^sub>E S K \\<and>\n       v \\<circ> simple ct = F_sup (v \\<circ> simple ct)", "have l_acyclic: \"(s', s) \\<notin> (SIGMA s:S\\<^sub>r. {l s})^+\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s', s) \\<notin> (SIGMA s:S\\<^sub>r. {l s})\\<^sup>+", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. (s', s) \\<in> (SIGMA s:S\\<^sub>r. {l s})\\<^sup>+ \\<Longrightarrow> False", "assume \"(s', s) \\<in> (SIGMA s:S\\<^sub>r. {l s})^+\""], ["proof (state)\nthis:\n  (s', s) \\<in> (SIGMA s:S\\<^sub>r. {l s})\\<^sup>+\n\ngoal (1 subgoal):\n 1. (s', s) \\<in> (SIGMA s:S\\<^sub>r. {l s})\\<^sup>+ \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  (s', s) \\<in> (SIGMA s:S\\<^sub>r. {l s})\\<^sup>+", "have \"?v s' \\<le> ?v s\""], ["proof (prove)\nusing this:\n  (s', s) \\<in> (SIGMA s:S\\<^sub>r. {l s})\\<^sup>+\n\ngoal (1 subgoal):\n 1. v (simple ct s') \\<le> v (simple ct s)", "by induct (blast intro: order_trans v_l_mono)+"], ["proof (state)\nthis:\n  v (simple ct s') \\<le> v (simple ct s)\n\ngoal (1 subgoal):\n 1. (s', s) \\<in> (SIGMA s:S\\<^sub>r. {l s})\\<^sup>+ \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  v (simple ct s') \\<le> v (simple ct s)\n\ngoal (1 subgoal):\n 1. (s', s) \\<in> (SIGMA s:S\\<^sub>r. {l s})\\<^sup>+ \\<Longrightarrow> False", "have \"\\<dots> < (\\<integral>\\<^sup>+t. ?v t \\<partial>D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v (simple ct s)\n    < \\<integral>\\<^sup>+ t. v (simple ct t) \\<partial>measure_pmf D", "using not_maximal"], ["proof (prove)\nusing this:\n  v (simple ct s)\n  < \\<integral>\\<^sup>+ t. v (simple ct t) \\<partial>measure_pmf D\n\ngoal (1 subgoal):\n 1. v (simple ct s)\n    < \\<integral>\\<^sup>+ t. v (simple ct t) \\<partial>measure_pmf D", "."], ["proof (state)\nthis:\n  v (simple ct s)\n  < \\<integral>\\<^sup>+ t. v (simple ct t) \\<partial>measure_pmf D\n\ngoal (1 subgoal):\n 1. (s', s) \\<in> (SIGMA s:S\\<^sub>r. {l s})\\<^sup>+ \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  v (simple ct s)\n  < \\<integral>\\<^sup>+ t. v (simple ct t) \\<partial>measure_pmf D\n\ngoal (1 subgoal):\n 1. (s', s) \\<in> (SIGMA s:S\\<^sub>r. {l s})\\<^sup>+ \\<Longrightarrow> False", "have \"\\<dots> \\<le> (\\<integral>\\<^sup>+t. ?v s' \\<partial>D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ t. v (simple ct t) \\<partial>measure_pmf D\n    \\<le> \\<integral>\\<^sup>+ t. v (simple ct s') \\<partial>measure_pmf D", "using s'"], ["proof (prove)\nusing this:\n  s' \\<in> maximal (\\<lambda>s. v (simple ct s)) (set_pmf (ct' s))\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ t. v (simple ct t) \\<partial>measure_pmf D\n    \\<le> \\<integral>\\<^sup>+ t. v (simple ct s') \\<partial>measure_pmf D", "by (intro nn_integral_mono_AE) (auto simp: \\<open>s \\<in> S\\<close> D AE_measure_pmf_iff intro: maximalD2)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ t. v (simple ct t) \\<partial>measure_pmf D\n  \\<le> \\<integral>\\<^sup>+ t. v (simple ct s') \\<partial>measure_pmf D\n\ngoal (1 subgoal):\n 1. (s', s) \\<in> (SIGMA s:S\\<^sub>r. {l s})\\<^sup>+ \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  v (simple ct s')\n  < \\<integral>\\<^sup>+ t. v (simple ct s') \\<partial>measure_pmf D", "show False"], ["proof (prove)\nusing this:\n  v (simple ct s')\n  < \\<integral>\\<^sup>+ t. v (simple ct s') \\<partial>measure_pmf D\n\ngoal (1 subgoal):\n 1. False", "using measure_pmf.emeasure_space_1[of D]"], ["proof (prove)\nusing this:\n  v (simple ct s')\n  < \\<integral>\\<^sup>+ t. v (simple ct s') \\<partial>measure_pmf D\n  emeasure (measure_pmf D) (space (measure_pmf D)) = 1\n\ngoal (1 subgoal):\n 1. False", "by (simp add:\\<open>s' \\<in> S\\<close> ct)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (s', s) \\<notin> (SIGMA s:S\\<^sub>r. {l s})\\<^sup>+\n\ngoal (1 subgoal):\n 1. \\<exists>ct.\n       ct \\<in> Pi\\<^sub>E S K \\<and>\n       v \\<circ> simple ct = F_sup (v \\<circ> simple ct)", "from \\<open>s' \\<in> S2 \\<union> S\\<^sub>r\\<close>"], ["proof (chain)\npicking this:\n  s' \\<in> S2 \\<union> S\\<^sub>r", "have \"s' \\<in> ?D ct'\""], ["proof (prove)\nusing this:\n  s' \\<in> S2 \\<union> S\\<^sub>r\n\ngoal (1 subgoal):\n 1. s' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. s' \\<in> S2 \\<Longrightarrow>\n    s' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n 2. s' \\<in> S\\<^sub>r \\<Longrightarrow>\n    s' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))", "assume \"s' \\<in> S\\<^sub>r\""], ["proof (state)\nthis:\n  s' \\<in> S\\<^sub>r\n\ngoal (2 subgoals):\n 1. s' \\<in> S2 \\<Longrightarrow>\n    s' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n 2. s' \\<in> S\\<^sub>r \\<Longrightarrow>\n    s' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))", "then"], ["proof (chain)\npicking this:\n  s' \\<in> S\\<^sub>r", "have \"l s' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. {l s})\""], ["proof (prove)\nusing this:\n  s' \\<in> S\\<^sub>r\n\ngoal (1 subgoal):\n 1. l s' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. {l s})", "using l directed_l[of \"l s'\"]"], ["proof (prove)\nusing this:\n  s' \\<in> S\\<^sub>r\n  l \\<in> S\\<^sub>r \\<rightarrow> S\\<^sub>r \\<union> S2\n  l s' \\<in> S\\<^sub>r \\<Longrightarrow>\n  l s' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. {l s})\n\ngoal (1 subgoal):\n 1. l s' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. {l s})", "by (auto intro: directed_towards.start)"], ["proof (state)\nthis:\n  l s' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. {l s})\n\ngoal (2 subgoals):\n 1. s' \\<in> S2 \\<Longrightarrow>\n    s' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n 2. s' \\<in> S\\<^sub>r \\<Longrightarrow>\n    s' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))", "moreover"], ["proof (state)\nthis:\n  l s' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. {l s})\n\ngoal (2 subgoals):\n 1. s' \\<in> S2 \\<Longrightarrow>\n    s' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n 2. s' \\<in> S\\<^sub>r \\<Longrightarrow>\n    s' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))", "from \\<open>s' \\<in> S\\<^sub>r\\<close>"], ["proof (chain)\npicking this:\n  s' \\<in> S\\<^sub>r", "have \"(s', l s') \\<in> (SIGMA s:S\\<^sub>r. {l s})^+\""], ["proof (prove)\nusing this:\n  s' \\<in> S\\<^sub>r\n\ngoal (1 subgoal):\n 1. (s', l s') \\<in> (SIGMA s:S\\<^sub>r. {l s})\\<^sup>+", "by auto"], ["proof (state)\nthis:\n  (s', l s') \\<in> (SIGMA s:S\\<^sub>r. {l s})\\<^sup>+\n\ngoal (2 subgoals):\n 1. s' \\<in> S2 \\<Longrightarrow>\n    s' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n 2. s' \\<in> S\\<^sub>r \\<Longrightarrow>\n    s' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))", "ultimately"], ["proof (chain)\npicking this:\n  l s' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. {l s})\n  (s', l s') \\<in> (SIGMA s:S\\<^sub>r. {l s})\\<^sup>+", "have \"l s' \\<in> ?D ct'\""], ["proof (prove)\nusing this:\n  l s' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. {l s})\n  (s', l s') \\<in> (SIGMA s:S\\<^sub>r. {l s})\\<^sup>+\n\ngoal (1 subgoal):\n 1. l s' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))", "proof induct"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> S2;\n        (s', x) \\<in> (SIGMA s:S\\<^sub>r. {l s})\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> x \\<in> directed_towards S2\n                                  (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n 2. \\<And>x y.\n       \\<lbrakk>y \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. {l s});\n        (s', y) \\<in> (SIGMA s:S\\<^sub>r. {l s})\\<^sup>+ \\<Longrightarrow>\n        y \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s));\n        (x, y) \\<in> (SIGMA s:S\\<^sub>r. {l s});\n        (s', x) \\<in> (SIGMA s:S\\<^sub>r. {l s})\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> x \\<in> directed_towards S2\n                                  (SIGMA s:S\\<^sub>r. set_pmf (ct' s))", "case (step t t')"], ["proof (state)\nthis:\n  t' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. {l s})\n  (s', t') \\<in> (SIGMA s:S\\<^sub>r. {l s})\\<^sup>+ \\<Longrightarrow>\n  t' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n  (t, t') \\<in> (SIGMA s:S\\<^sub>r. {l s})\n  (s', t) \\<in> (SIGMA s:S\\<^sub>r. {l s})\\<^sup>+\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> S2;\n        (s', x) \\<in> (SIGMA s:S\\<^sub>r. {l s})\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> x \\<in> directed_towards S2\n                                  (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n 2. \\<And>x y.\n       \\<lbrakk>y \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. {l s});\n        (s', y) \\<in> (SIGMA s:S\\<^sub>r. {l s})\\<^sup>+ \\<Longrightarrow>\n        y \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s));\n        (x, y) \\<in> (SIGMA s:S\\<^sub>r. {l s});\n        (s', x) \\<in> (SIGMA s:S\\<^sub>r. {l s})\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> x \\<in> directed_towards S2\n                                  (SIGMA s:S\\<^sub>r. set_pmf (ct' s))", "then"], ["proof (chain)\npicking this:\n  t' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. {l s})\n  (s', t') \\<in> (SIGMA s:S\\<^sub>r. {l s})\\<^sup>+ \\<Longrightarrow>\n  t' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n  (t, t') \\<in> (SIGMA s:S\\<^sub>r. {l s})\n  (s', t) \\<in> (SIGMA s:S\\<^sub>r. {l s})\\<^sup>+", "have t: \"t \\<noteq> s\" \"t \\<in> S\\<^sub>r\" \"t' = l t\""], ["proof (prove)\nusing this:\n  t' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. {l s})\n  (s', t') \\<in> (SIGMA s:S\\<^sub>r. {l s})\\<^sup>+ \\<Longrightarrow>\n  t' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n  (t, t') \\<in> (SIGMA s:S\\<^sub>r. {l s})\n  (s', t) \\<in> (SIGMA s:S\\<^sub>r. {l s})\\<^sup>+\n\ngoal (1 subgoal):\n 1. t \\<noteq> s &&& t \\<in> S\\<^sub>r &&& t' = l t", "using l_acyclic"], ["proof (prove)\nusing this:\n  t' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. {l s})\n  (s', t') \\<in> (SIGMA s:S\\<^sub>r. {l s})\\<^sup>+ \\<Longrightarrow>\n  t' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n  (t, t') \\<in> (SIGMA s:S\\<^sub>r. {l s})\n  (s', t) \\<in> (SIGMA s:S\\<^sub>r. {l s})\\<^sup>+\n  (s', s) \\<notin> (SIGMA s:S\\<^sub>r. {l s})\\<^sup>+\n\ngoal (1 subgoal):\n 1. t \\<noteq> s &&& t \\<in> S\\<^sub>r &&& t' = l t", "by auto"], ["proof (state)\nthis:\n  t \\<noteq> s\n  t \\<in> S\\<^sub>r\n  t' = l t\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> S2;\n        (s', x) \\<in> (SIGMA s:S\\<^sub>r. {l s})\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> x \\<in> directed_towards S2\n                                  (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n 2. \\<And>x y.\n       \\<lbrakk>y \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. {l s});\n        (s', y) \\<in> (SIGMA s:S\\<^sub>r. {l s})\\<^sup>+ \\<Longrightarrow>\n        y \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s));\n        (x, y) \\<in> (SIGMA s:S\\<^sub>r. {l s});\n        (s', x) \\<in> (SIGMA s:S\\<^sub>r. {l s})\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> x \\<in> directed_towards S2\n                                  (SIGMA s:S\\<^sub>r. set_pmf (ct' s))", "from step"], ["proof (chain)\npicking this:\n  t' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. {l s})\n  (s', t') \\<in> (SIGMA s:S\\<^sub>r. {l s})\\<^sup>+ \\<Longrightarrow>\n  t' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n  (t, t') \\<in> (SIGMA s:S\\<^sub>r. {l s})\n  (s', t) \\<in> (SIGMA s:S\\<^sub>r. {l s})\\<^sup>+", "have \"(s', t') \\<in> (SIGMA s:S\\<^sub>r. {l s})\\<^sup>+\""], ["proof (prove)\nusing this:\n  t' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. {l s})\n  (s', t') \\<in> (SIGMA s:S\\<^sub>r. {l s})\\<^sup>+ \\<Longrightarrow>\n  t' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n  (t, t') \\<in> (SIGMA s:S\\<^sub>r. {l s})\n  (s', t) \\<in> (SIGMA s:S\\<^sub>r. {l s})\\<^sup>+\n\ngoal (1 subgoal):\n 1. (s', t') \\<in> (SIGMA s:S\\<^sub>r. {l s})\\<^sup>+", "by (blast intro: trancl_into_trancl)"], ["proof (state)\nthis:\n  (s', t') \\<in> (SIGMA s:S\\<^sub>r. {l s})\\<^sup>+\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> S2;\n        (s', x) \\<in> (SIGMA s:S\\<^sub>r. {l s})\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> x \\<in> directed_towards S2\n                                  (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n 2. \\<And>x y.\n       \\<lbrakk>y \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. {l s});\n        (s', y) \\<in> (SIGMA s:S\\<^sub>r. {l s})\\<^sup>+ \\<Longrightarrow>\n        y \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s));\n        (x, y) \\<in> (SIGMA s:S\\<^sub>r. {l s});\n        (s', x) \\<in> (SIGMA s:S\\<^sub>r. {l s})\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> x \\<in> directed_towards S2\n                                  (SIGMA s:S\\<^sub>r. set_pmf (ct' s))", "from step(2)[OF this]"], ["proof (chain)\npicking this:\n  t' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))", "show ?case"], ["proof (prove)\nusing this:\n  t' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n\ngoal (1 subgoal):\n 1. t \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))", "by (rule directed_towards.step) (simp add: l_in_Ea t)"], ["proof (state)\nthis:\n  t \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> S2;\n        (s', x) \\<in> (SIGMA s:S\\<^sub>r. {l s})\\<^sup>+\\<rbrakk>\n       \\<Longrightarrow> x \\<in> directed_towards S2\n                                  (SIGMA s:S\\<^sub>r. set_pmf (ct' s))", "qed (rule directed_towards.start)"], ["proof (state)\nthis:\n  l s' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n\ngoal (2 subgoals):\n 1. s' \\<in> S2 \\<Longrightarrow>\n    s' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n 2. s' \\<in> S\\<^sub>r \\<Longrightarrow>\n    s' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))", "then"], ["proof (chain)\npicking this:\n  l s' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))", "show \"s' \\<in> ?D ct'\""], ["proof (prove)\nusing this:\n  l s' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n\ngoal (1 subgoal):\n 1. s' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))", "by (rule directed_towards.step)\n           (simp add: l_in_Ea \\<open>s' \\<in> S\\<^sub>r\\<close> \\<open>s \\<in> S\\<^sub>r\\<close> \\<open>s' \\<noteq> s\\<close>)"], ["proof (state)\nthis:\n  s' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n\ngoal (1 subgoal):\n 1. s' \\<in> S2 \\<Longrightarrow>\n    s' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))", "qed (rule directed_towards.start)"], ["proof (state)\nthis:\n  s' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n\ngoal (1 subgoal):\n 1. \\<exists>ct.\n       ct \\<in> Pi\\<^sub>E S K \\<and>\n       v \\<circ> simple ct = F_sup (v \\<circ> simple ct)", "have proper: \"proper ct'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. proper ct'", "unfolding proper_eq[OF ct'_E]"], ["proof (prove)\ngoal (1 subgoal):\n 1. S\\<^sub>r\n    \\<subseteq> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct' x))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> S\\<^sub>r \\<Longrightarrow>\n       x \\<in> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct' x))", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> S\\<^sub>r \\<Longrightarrow>\n       x \\<in> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct' x))", "assume \"t \\<in> S\\<^sub>r\""], ["proof (state)\nthis:\n  t \\<in> S\\<^sub>r\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> S\\<^sub>r \\<Longrightarrow>\n       x \\<in> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct' x))", "from directed_l[OF this]"], ["proof (chain)\npicking this:\n  t \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. {l s})", "show \"t \\<in> ?D ct'\""], ["proof (prove)\nusing this:\n  t \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. {l s})\n\ngoal (1 subgoal):\n 1. t \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))", "proof induct"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> S2 \\<Longrightarrow>\n       x \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n 2. \\<And>x y.\n       \\<lbrakk>y \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. {l s});\n        y \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s));\n        (x, y) \\<in> (SIGMA s:S\\<^sub>r. {l s})\\<rbrakk>\n       \\<Longrightarrow> x \\<in> directed_towards S2\n                                  (SIGMA s:S\\<^sub>r. set_pmf (ct' s))", "case (step t t')"], ["proof (state)\nthis:\n  t' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. {l s})\n  t' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n  (t, t') \\<in> (SIGMA s:S\\<^sub>r. {l s})\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> S2 \\<Longrightarrow>\n       x \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n 2. \\<And>x y.\n       \\<lbrakk>y \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. {l s});\n        y \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s));\n        (x, y) \\<in> (SIGMA s:S\\<^sub>r. {l s})\\<rbrakk>\n       \\<Longrightarrow> x \\<in> directed_towards S2\n                                  (SIGMA s:S\\<^sub>r. set_pmf (ct' s))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    t \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n 2. \\<not> ?P \\<Longrightarrow>\n    t \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))", "assume \"t = s\""], ["proof (state)\nthis:\n  t = s\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    t \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n 2. \\<not> ?P \\<Longrightarrow>\n    t \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))", "with \\<open>s \\<in> S\\<^sub>r\\<close> s'[THEN maximalD1]"], ["proof (chain)\npicking this:\n  s \\<in> S\\<^sub>r\n  s' \\<in> set_pmf (ct' s)\n  t = s", "have \"(t, s') \\<in> ?E ct'\""], ["proof (prove)\nusing this:\n  s \\<in> S\\<^sub>r\n  s' \\<in> set_pmf (ct' s)\n  t = s\n\ngoal (1 subgoal):\n 1. (t, s') \\<in> (SIGMA s:S\\<^sub>r. set_pmf (ct' s))", "by auto"], ["proof (state)\nthis:\n  (t, s') \\<in> (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    t \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n 2. \\<not> ?P \\<Longrightarrow>\n    t \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))", "with \\<open>s' \\<in> ?D ct'\\<close>"], ["proof (chain)\npicking this:\n  s' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n  (t, s') \\<in> (SIGMA s:S\\<^sub>r. set_pmf (ct' s))", "show ?thesis"], ["proof (prove)\nusing this:\n  s' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n  (t, s') \\<in> (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n\ngoal (1 subgoal):\n 1. t \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))", "by (rule directed_towards.step)"], ["proof (state)\nthis:\n  t \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n\ngoal (1 subgoal):\n 1. t \\<noteq> s \\<Longrightarrow>\n    t \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. t \\<noteq> s \\<Longrightarrow>\n    t \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))", "assume \"t \\<noteq> s\""], ["proof (state)\nthis:\n  t \\<noteq> s\n\ngoal (1 subgoal):\n 1. t \\<noteq> s \\<Longrightarrow>\n    t \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))", "with step"], ["proof (chain)\npicking this:\n  t' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. {l s})\n  t' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n  (t, t') \\<in> (SIGMA s:S\\<^sub>r. {l s})\n  t \\<noteq> s", "have \"(t, t') \\<in> ?E ct'\""], ["proof (prove)\nusing this:\n  t' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. {l s})\n  t' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n  (t, t') \\<in> (SIGMA s:S\\<^sub>r. {l s})\n  t \\<noteq> s\n\ngoal (1 subgoal):\n 1. (t, t') \\<in> (SIGMA s:S\\<^sub>r. set_pmf (ct' s))", "by (auto simp: l_in_Ea)"], ["proof (state)\nthis:\n  (t, t') \\<in> (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n\ngoal (1 subgoal):\n 1. t \\<noteq> s \\<Longrightarrow>\n    t \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))", "with step.hyps(2)"], ["proof (chain)\npicking this:\n  t' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n  (t, t') \\<in> (SIGMA s:S\\<^sub>r. set_pmf (ct' s))", "show ?thesis"], ["proof (prove)\nusing this:\n  t' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n  (t, t') \\<in> (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n\ngoal (1 subgoal):\n 1. t \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))", "by (rule directed_towards.step)"], ["proof (state)\nthis:\n  t \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  t \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> S2 \\<Longrightarrow>\n       x \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))", "qed (rule directed_towards.start)"], ["proof (state)\nthis:\n  t \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  proper ct'\n\ngoal (1 subgoal):\n 1. \\<exists>ct.\n       ct \\<in> Pi\\<^sub>E S K \\<and>\n       v \\<circ> simple ct = F_sup (v \\<circ> simple ct)", "have \"?v \\<le> ?v'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. v (simple ct s)) \\<le> (\\<lambda>s. v (simple ct' s))", "proof (intro le_funI leI notI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. v (simple ct' x) < v (simple ct x) \\<Longrightarrow> False", "fix t'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. v (simple ct' x) < v (simple ct x) \\<Longrightarrow> False", "assume *: \"?v' t' < ?v t'\""], ["proof (state)\nthis:\n  v (simple ct' t') < v (simple ct t')\n\ngoal (1 subgoal):\n 1. \\<And>x. v (simple ct' x) < v (simple ct x) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  v (simple ct' t') < v (simple ct t')", "have \"t' \\<in> S\""], ["proof (prove)\nusing this:\n  v (simple ct' t') < v (simple ct t')\n\ngoal (1 subgoal):\n 1. t' \\<in> S", "by (metis v_nS simple_valid_cfg_iff ct' ct order.irrefl)"], ["proof (state)\nthis:\n  t' \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>x. v (simple ct' x) < v (simple ct x) \\<Longrightarrow> False", "define \\<Delta> where \"\\<Delta> t = enn2real (?v t) - enn2real (?v' t)\" for t"], ["proof (state)\nthis:\n  \\<Delta> ?t = enn2real (v (simple ct ?t)) - enn2real (v (simple ct' ?t))\n\ngoal (1 subgoal):\n 1. \\<And>x. v (simple ct' x) < v (simple ct x) \\<Longrightarrow> False", "with * \\<open>t' \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  v (simple ct' t') < v (simple ct t')\n  t' \\<in> S\n  \\<Delta> ?t = enn2real (v (simple ct ?t)) - enn2real (v (simple ct' ?t))", "have \"0 < \\<Delta> t'\""], ["proof (prove)\nusing this:\n  v (simple ct' t') < v (simple ct t')\n  t' \\<in> S\n  \\<Delta> ?t = enn2real (v (simple ct ?t)) - enn2real (v (simple ct' ?t))\n\ngoal (1 subgoal):\n 1. 0 < \\<Delta> t'", "by (cases \"?v t'\" \"?v' t'\" rule: ennreal2_cases) (auto simp add: ct' ct ennreal_less_iff)"], ["proof (state)\nthis:\n  0 < \\<Delta> t'\n\ngoal (1 subgoal):\n 1. \\<And>x. v (simple ct' x) < v (simple ct x) \\<Longrightarrow> False", "{"], ["proof (state)\nthis:\n  0 < \\<Delta> t'\n\ngoal (1 subgoal):\n 1. \\<And>x. v (simple ct' x) < v (simple ct x) \\<Longrightarrow> False", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. v (simple ct' x) < v (simple ct x) \\<Longrightarrow> False", "assume t: \"t \\<in> maximal \\<Delta> S\""], ["proof (state)\nthis:\n  t \\<in> maximal \\<Delta> S\n\ngoal (1 subgoal):\n 1. \\<And>x. v (simple ct' x) < v (simple ct x) \\<Longrightarrow> False", "with \\<open>t' \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  t' \\<in> S\n  t \\<in> maximal \\<Delta> S", "have \"\\<Delta> t' \\<le> \\<Delta> t\""], ["proof (prove)\nusing this:\n  t' \\<in> S\n  t \\<in> maximal \\<Delta> S\n\ngoal (1 subgoal):\n 1. \\<Delta> t' \\<le> \\<Delta> t", "by (auto intro: maximalD2)"], ["proof (state)\nthis:\n  \\<Delta> t' \\<le> \\<Delta> t\n\ngoal (1 subgoal):\n 1. \\<And>x. v (simple ct' x) < v (simple ct x) \\<Longrightarrow> False", "with \\<open>0 < \\<Delta> t'\\<close>"], ["proof (chain)\npicking this:\n  0 < \\<Delta> t'\n  \\<Delta> t' \\<le> \\<Delta> t", "have \"0 < \\<Delta> t\""], ["proof (prove)\nusing this:\n  0 < \\<Delta> t'\n  \\<Delta> t' \\<le> \\<Delta> t\n\ngoal (1 subgoal):\n 1. 0 < \\<Delta> t", "by simp"], ["proof (state)\nthis:\n  0 < \\<Delta> t\n\ngoal (1 subgoal):\n 1. \\<And>x. v (simple ct' x) < v (simple ct x) \\<Longrightarrow> False", "with t"], ["proof (chain)\npicking this:\n  t \\<in> maximal \\<Delta> S\n  0 < \\<Delta> t", "have \"t \\<in> S\\<^sub>r\""], ["proof (prove)\nusing this:\n  t \\<in> maximal \\<Delta> S\n  0 < \\<Delta> t\n\ngoal (1 subgoal):\n 1. t \\<in> S\\<^sub>r", "by (auto simp add: S\\<^sub>r_def v_S\\<^sub>e ct ct' \\<Delta>_def dest!: maximalD1)"], ["proof (state)\nthis:\n  t \\<in> S\\<^sub>r\n\ngoal (1 subgoal):\n 1. \\<And>x. v (simple ct' x) < v (simple ct x) \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  ?t4 \\<in> maximal \\<Delta> S \\<Longrightarrow> ?t4 \\<in> S\\<^sub>r\n\ngoal (1 subgoal):\n 1. \\<And>x. v (simple ct' x) < v (simple ct x) \\<Longrightarrow> False", "note max_is_S\\<^sub>r = this"], ["proof (state)\nthis:\n  ?t4 \\<in> maximal \\<Delta> S \\<Longrightarrow> ?t4 \\<in> S\\<^sub>r\n\ngoal (1 subgoal):\n 1. \\<And>x. v (simple ct' x) < v (simple ct x) \\<Longrightarrow> False", "{"], ["proof (state)\nthis:\n  ?t4 \\<in> maximal \\<Delta> S \\<Longrightarrow> ?t4 \\<in> S\\<^sub>r\n\ngoal (1 subgoal):\n 1. \\<And>x. v (simple ct' x) < v (simple ct x) \\<Longrightarrow> False", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. v (simple ct' x) < v (simple ct x) \\<Longrightarrow> False", "assume \"s \\<in> S\""], ["proof (state)\nthis:\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>x. v (simple ct' x) < v (simple ct x) \\<Longrightarrow> False", "with v_le_1[of \"simple ct' s\"] v_le_1[of \"simple ct s\"]"], ["proof (chain)\npicking this:\n  simple ct' s \\<in> valid_cfg \\<Longrightarrow> v (simple ct' s) \\<le> 1\n  simple ct s \\<in> valid_cfg \\<Longrightarrow> v (simple ct s) \\<le> 1\n  s \\<in> S", "have \"\\<bar>\\<Delta> s\\<bar> \\<le> 1\""], ["proof (prove)\nusing this:\n  simple ct' s \\<in> valid_cfg \\<Longrightarrow> v (simple ct' s) \\<le> 1\n  simple ct s \\<in> valid_cfg \\<Longrightarrow> v (simple ct s) \\<le> 1\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. \\<bar>\\<Delta> s\\<bar> \\<le> 1", "by (cases \"?v s\" \"?v' s\" rule: ennreal2_cases) (auto simp: \\<Delta>_def ct ct')"], ["proof (state)\nthis:\n  \\<bar>\\<Delta> s\\<bar> \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<And>x. v (simple ct' x) < v (simple ct x) \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  ?sa4 \\<in> S \\<Longrightarrow> \\<bar>\\<Delta> ?sa4\\<bar> \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<And>x. v (simple ct' x) < v (simple ct x) \\<Longrightarrow> False", "note \\<Delta>_le_1[simp] = this"], ["proof (state)\nthis:\n  ?sa4 \\<in> S \\<Longrightarrow> \\<bar>\\<Delta> ?sa4\\<bar> \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<And>x. v (simple ct' x) < v (simple ct x) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  ?sa4 \\<in> S \\<Longrightarrow> \\<bar>\\<Delta> ?sa4\\<bar> \\<le> 1", "have ennreal_\\<Delta>: \"\\<And>s. s \\<in> S \\<Longrightarrow> \\<Delta> s = ?v s - ?v' s\""], ["proof (prove)\nusing this:\n  ?sa4 \\<in> S \\<Longrightarrow> \\<bar>\\<Delta> ?sa4\\<bar> \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> S \\<Longrightarrow>\n       ennreal (\\<Delta> s) = v (simple ct s) - v (simple ct' s)", "by (auto simp add: \\<Delta>_def v_def T.emeasure_eq_measure ct ct' ennreal_minus)"], ["proof (state)\nthis:\n  ?s2 \\<in> S \\<Longrightarrow>\n  ennreal (\\<Delta> ?s2) = v (simple ct ?s2) - v (simple ct' ?s2)\n\ngoal (1 subgoal):\n 1. \\<And>x. v (simple ct' x) < v (simple ct x) \\<Longrightarrow> False", "from \\<open>s \\<in> S\\<close> S_finite"], ["proof (chain)\npicking this:\n  s \\<in> S\n  finite S", "have \"maximal \\<Delta> S \\<noteq> {}\""], ["proof (prove)\nusing this:\n  s \\<in> S\n  finite S\n\ngoal (1 subgoal):\n 1. maximal \\<Delta> S \\<noteq> {}", "by (intro maximal_ne) auto"], ["proof (state)\nthis:\n  maximal \\<Delta> S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>x. v (simple ct' x) < v (simple ct x) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  maximal \\<Delta> S \\<noteq> {}", "obtain t where \"t \\<in> maximal \\<Delta> S\""], ["proof (prove)\nusing this:\n  maximal \\<Delta> S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        t \\<in> maximal \\<Delta> S \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  t \\<in> maximal \\<Delta> S\n\ngoal (1 subgoal):\n 1. \\<And>x. v (simple ct' x) < v (simple ct x) \\<Longrightarrow> False", "from max_is_S\\<^sub>r[OF this] proper"], ["proof (chain)\npicking this:\n  t \\<in> S\\<^sub>r\n  proper ct'", "have \"t \\<in> ?D ct'\""], ["proof (prove)\nusing this:\n  t \\<in> S\\<^sub>r\n  proper ct'\n\ngoal (1 subgoal):\n 1. t \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))", "unfolding proper_eq[OF ct'_E]"], ["proof (prove)\nusing this:\n  t \\<in> S\\<^sub>r\n  S\\<^sub>r\n  \\<subseteq> directed_towards S2 (SIGMA x:S\\<^sub>r. set_pmf (ct' x))\n\ngoal (1 subgoal):\n 1. t \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))", "by auto"], ["proof (state)\nthis:\n  t \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n\ngoal (1 subgoal):\n 1. \\<And>x. v (simple ct' x) < v (simple ct x) \\<Longrightarrow> False", "from this \\<open>t \\<in> maximal \\<Delta> S\\<close>"], ["proof (chain)\npicking this:\n  t \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n  t \\<in> maximal \\<Delta> S", "show False"], ["proof (prove)\nusing this:\n  t \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n  t \\<in> maximal \\<Delta> S\n\ngoal (1 subgoal):\n 1. False", "proof induct"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> S2; x \\<in> maximal \\<Delta> S\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x y.\n       \\<lbrakk>y \\<in> directed_towards S2\n                         (SIGMA s:S\\<^sub>r. set_pmf (ct' s));\n        y \\<in> maximal \\<Delta> S \\<Longrightarrow> False;\n        (x, y) \\<in> (SIGMA s:S\\<^sub>r. set_pmf (ct' s));\n        x \\<in> maximal \\<Delta> S\\<rbrakk>\n       \\<Longrightarrow> False", "case (start t)"], ["proof (state)\nthis:\n  t \\<in> S2\n  t \\<in> maximal \\<Delta> S\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> S2; x \\<in> maximal \\<Delta> S\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x y.\n       \\<lbrakk>y \\<in> directed_towards S2\n                         (SIGMA s:S\\<^sub>r. set_pmf (ct' s));\n        y \\<in> maximal \\<Delta> S \\<Longrightarrow> False;\n        (x, y) \\<in> (SIGMA s:S\\<^sub>r. set_pmf (ct' s));\n        x \\<in> maximal \\<Delta> S\\<rbrakk>\n       \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  t \\<in> S2\n  t \\<in> maximal \\<Delta> S", "have \"t \\<in> S\\<^sub>r\""], ["proof (prove)\nusing this:\n  t \\<in> S2\n  t \\<in> maximal \\<Delta> S\n\ngoal (1 subgoal):\n 1. t \\<in> S\\<^sub>r", "by (intro max_is_S\\<^sub>r)"], ["proof (state)\nthis:\n  t \\<in> S\\<^sub>r\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> S2; x \\<in> maximal \\<Delta> S\\<rbrakk>\n       \\<Longrightarrow> False\n 2. \\<And>x y.\n       \\<lbrakk>y \\<in> directed_towards S2\n                         (SIGMA s:S\\<^sub>r. set_pmf (ct' s));\n        y \\<in> maximal \\<Delta> S \\<Longrightarrow> False;\n        (x, y) \\<in> (SIGMA s:S\\<^sub>r. set_pmf (ct' s));\n        x \\<in> maximal \\<Delta> S\\<rbrakk>\n       \\<Longrightarrow> False", "with \\<open>t \\<in> S2\\<close>"], ["proof (chain)\npicking this:\n  t \\<in> S2\n  t \\<in> S\\<^sub>r", "show False"], ["proof (prove)\nusing this:\n  t \\<in> S2\n  t \\<in> S\\<^sub>r\n\ngoal (1 subgoal):\n 1. False", "by (auto simp: S\\<^sub>r_def)"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>y \\<in> directed_towards S2\n                         (SIGMA s:S\\<^sub>r. set_pmf (ct' s));\n        y \\<in> maximal \\<Delta> S \\<Longrightarrow> False;\n        (x, y) \\<in> (SIGMA s:S\\<^sub>r. set_pmf (ct' s));\n        x \\<in> maximal \\<Delta> S\\<rbrakk>\n       \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>y \\<in> directed_towards S2\n                         (SIGMA s:S\\<^sub>r. set_pmf (ct' s));\n        y \\<in> maximal \\<Delta> S \\<Longrightarrow> False;\n        (x, y) \\<in> (SIGMA s:S\\<^sub>r. set_pmf (ct' s));\n        x \\<in> maximal \\<Delta> S\\<rbrakk>\n       \\<Longrightarrow> False", "case (step t t')"], ["proof (state)\nthis:\n  t' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n  t' \\<in> maximal \\<Delta> S \\<Longrightarrow> False\n  (t, t') \\<in> (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n  t \\<in> maximal \\<Delta> S\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>y \\<in> directed_towards S2\n                         (SIGMA s:S\\<^sub>r. set_pmf (ct' s));\n        y \\<in> maximal \\<Delta> S \\<Longrightarrow> False;\n        (x, y) \\<in> (SIGMA s:S\\<^sub>r. set_pmf (ct' s));\n        x \\<in> maximal \\<Delta> S\\<rbrakk>\n       \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  t' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n  t' \\<in> maximal \\<Delta> S \\<Longrightarrow> False\n  (t, t') \\<in> (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n  t \\<in> maximal \\<Delta> S", "have t': \"t' \\<in> ct' t\" and \"t \\<in> S\\<^sub>r\" and t: \"t \\<in> maximal \\<Delta> S\""], ["proof (prove)\nusing this:\n  t' \\<in> directed_towards S2 (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n  t' \\<in> maximal \\<Delta> S \\<Longrightarrow> False\n  (t, t') \\<in> (SIGMA s:S\\<^sub>r. set_pmf (ct' s))\n  t \\<in> maximal \\<Delta> S\n\ngoal (1 subgoal):\n 1. t' \\<in> set_pmf (ct' t) &&&\n    t \\<in> S\\<^sub>r &&& t \\<in> maximal \\<Delta> S", "by (auto intro: max_is_S\\<^sub>r simp: comp_def)"], ["proof (state)\nthis:\n  t' \\<in> set_pmf (ct' t)\n  t \\<in> S\\<^sub>r\n  t \\<in> maximal \\<Delta> S\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>y \\<in> directed_towards S2\n                         (SIGMA s:S\\<^sub>r. set_pmf (ct' s));\n        y \\<in> maximal \\<Delta> S \\<Longrightarrow> False;\n        (x, y) \\<in> (SIGMA s:S\\<^sub>r. set_pmf (ct' s));\n        x \\<in> maximal \\<Delta> S\\<rbrakk>\n       \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  t' \\<in> set_pmf (ct' t)\n  t \\<in> S\\<^sub>r\n  t \\<in> maximal \\<Delta> S", "have \"t' \\<in> S\" \"t \\<in> S1\" \"t \\<in> S\""], ["proof (prove)\nusing this:\n  t' \\<in> set_pmf (ct' t)\n  t \\<in> S\\<^sub>r\n  t \\<in> maximal \\<Delta> S\n\ngoal (1 subgoal):\n 1. t' \\<in> S &&& t \\<in> S1 &&& t \\<in> S", "using S\\<^sub>r_S1 S1"], ["proof (prove)\nusing this:\n  t' \\<in> set_pmf (ct' t)\n  t \\<in> S\\<^sub>r\n  t \\<in> maximal \\<Delta> S\n  S\\<^sub>r \\<subseteq> S1\n  S1 \\<subseteq> S\n\ngoal (1 subgoal):\n 1. t' \\<in> S &&& t \\<in> S1 &&& t \\<in> S", "by (auto simp: Pi_closed[OF ct'])"], ["proof (state)\nthis:\n  t' \\<in> S\n  t \\<in> S1\n  t \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>y \\<in> directed_towards S2\n                         (SIGMA s:S\\<^sub>r. set_pmf (ct' s));\n        y \\<in> maximal \\<Delta> S \\<Longrightarrow> False;\n        (x, y) \\<in> (SIGMA s:S\\<^sub>r. set_pmf (ct' s));\n        x \\<in> maximal \\<Delta> S\\<rbrakk>\n       \\<Longrightarrow> False", "have \"\\<Delta> t \\<le> \\<Delta> t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Delta> t \\<le> \\<Delta> t'", "proof (intro leI notI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Delta> t' < \\<Delta> t \\<Longrightarrow> False", "assume less: \"\\<Delta> t' < \\<Delta> t\""], ["proof (state)\nthis:\n  \\<Delta> t' < \\<Delta> t\n\ngoal (1 subgoal):\n 1. \\<Delta> t' < \\<Delta> t \\<Longrightarrow> False", "have \"(\\<integral>s. \\<Delta> s \\<partial>ct' t) < (\\<integral>s. \\<Delta> t \\<partial>ct' t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. measure_pmf.expectation (ct' t) \\<Delta>\n    < measure_pmf.expectation (ct' t) (\\<lambda>s. \\<Delta> t)", "proof (intro measure_pmf.integral_less_AE)"], ["proof (state)\ngoal (6 subgoals):\n 1. integrable (measure_pmf (ct' t)) \\<Delta>\n 2. integrable (measure_pmf (ct' t)) (\\<lambda>s. \\<Delta> t)\n 3. emeasure (measure_pmf (ct' t)) ?A \\<noteq> 0\n 4. ?A \\<in> measure_pmf.events (ct' t)\n 5. AE x\\<in>?A in measure_pmf (ct' t). \\<Delta> x \\<noteq> \\<Delta> t\n 6. AE x in measure_pmf (ct' t). \\<Delta> x \\<le> \\<Delta> t", "show \"emeasure (ct' t) {t'} \\<noteq> 0\" \"{t'} \\<in> sets (ct' t)\"\n              \"AE s in ct' t. s\\<in>{t'} \\<longrightarrow> \\<Delta> s \\<noteq> \\<Delta> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure (measure_pmf (ct' t)) {t'} \\<noteq> 0 &&&\n    {t'} \\<in> measure_pmf.events (ct' t) &&&\n    AE s\\<in>{t'} in measure_pmf (ct' t). \\<Delta> s \\<noteq> \\<Delta> t", "using t' less"], ["proof (prove)\nusing this:\n  t' \\<in> set_pmf (ct' t)\n  \\<Delta> t' < \\<Delta> t\n\ngoal (1 subgoal):\n 1. emeasure (measure_pmf (ct' t)) {t'} \\<noteq> 0 &&&\n    {t'} \\<in> measure_pmf.events (ct' t) &&&\n    AE s\\<in>{t'} in measure_pmf (ct' t). \\<Delta> s \\<noteq> \\<Delta> t", "by (auto simp add: emeasure_pmf_single_eq_zero_iff)"], ["proof (state)\nthis:\n  emeasure (measure_pmf (ct' t)) {t'} \\<noteq> 0\n  {t'} \\<in> measure_pmf.events (ct' t)\n  AE s\\<in>{t'} in measure_pmf (ct' t). \\<Delta> s \\<noteq> \\<Delta> t\n\ngoal (3 subgoals):\n 1. integrable (measure_pmf (ct' t)) \\<Delta>\n 2. integrable (measure_pmf (ct' t)) (\\<lambda>s. \\<Delta> t)\n 3. AE x in measure_pmf (ct' t). \\<Delta> x \\<le> \\<Delta> t", "show \"AE s in ct' t. \\<Delta> s \\<le> \\<Delta> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE s in measure_pmf (ct' t). \\<Delta> s \\<le> \\<Delta> t", "using ct' ct t D"], ["proof (prove)\nusing this:\n  ct' \\<in> Pi S K\n  ct \\<in> Pi S K\n  t \\<in> maximal \\<Delta> S\n  D \\<in> K s\n\ngoal (1 subgoal):\n 1. AE s in measure_pmf (ct' t). \\<Delta> s \\<le> \\<Delta> t", "by (auto simp add: AE_measure_pmf_iff ct \\<open>t\\<in>S\\<close> Pi_iff E_def Pi_closed[OF ct']\n                       intro!: maximalD2[of t \\<Delta>] intro: Pi_closed[OF ct'] maximalD1)"], ["proof (state)\nthis:\n  AE s in measure_pmf (ct' t). \\<Delta> s \\<le> \\<Delta> t\n\ngoal (2 subgoals):\n 1. integrable (measure_pmf (ct' t)) \\<Delta>\n 2. integrable (measure_pmf (ct' t)) (\\<lambda>s. \\<Delta> t)", "show \"integrable (ct' t) (\\<lambda>_. \\<Delta> t)\" \"integrable (ct' t) \\<Delta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integrable (measure_pmf (ct' t)) (\\<lambda>_. \\<Delta> t) &&&\n    integrable (measure_pmf (ct' t)) \\<Delta>", "using ct ct' \\<open>t \\<in> S\\<close> D"], ["proof (prove)\nusing this:\n  ct \\<in> Pi S K\n  ct' \\<in> Pi S K\n  t \\<in> S\n  D \\<in> K s\n\ngoal (1 subgoal):\n 1. integrable (measure_pmf (ct' t)) (\\<lambda>_. \\<Delta> t) &&&\n    integrable (measure_pmf (ct' t)) \\<Delta>", "by (auto intro!: measure_pmf.integrable_const_bound[where B=1] \\<Delta>_le_1\n                       simp: AE_measure_pmf_iff dest: Pi_closed)"], ["proof (state)\nthis:\n  integrable (measure_pmf (ct' t)) (\\<lambda>_. \\<Delta> t)\n  integrable (measure_pmf (ct' t)) \\<Delta>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  measure_pmf.expectation (ct' t) \\<Delta>\n  < measure_pmf.expectation (ct' t) (\\<lambda>s. \\<Delta> t)\n\ngoal (1 subgoal):\n 1. \\<Delta> t' < \\<Delta> t \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  measure_pmf.expectation (ct' t) \\<Delta>\n  < measure_pmf.expectation (ct' t) (\\<lambda>s. \\<Delta> t)\n\ngoal (1 subgoal):\n 1. \\<Delta> t' < \\<Delta> t \\<Longrightarrow> False", "have \"\\<dots> = \\<Delta> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. measure_pmf.expectation (ct' t) (\\<lambda>s. \\<Delta> t) = \\<Delta> t", "using measure_pmf.prob_space[of \"ct' t\"]"], ["proof (prove)\nusing this:\n  measure_pmf.prob (ct' t) (space (measure_pmf (ct' t))) = 1\n\ngoal (1 subgoal):\n 1. measure_pmf.expectation (ct' t) (\\<lambda>s. \\<Delta> t) = \\<Delta> t", "by simp"], ["proof (state)\nthis:\n  measure_pmf.expectation (ct' t) (\\<lambda>s. \\<Delta> t) = \\<Delta> t\n\ngoal (1 subgoal):\n 1. \\<Delta> t' < \\<Delta> t \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  measure_pmf.expectation (ct' t) (\\<lambda>s. \\<Delta> t) = \\<Delta> t\n\ngoal (1 subgoal):\n 1. \\<Delta> t' < \\<Delta> t \\<Longrightarrow> False", "have \"\\<Delta> t \\<le> (\\<integral>s. enn2real (?v s) \\<partial>ct' t) - (\\<integral>s. enn2real (?v' s) \\<partial>ct' t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Delta> t\n    \\<le> measure_pmf.expectation (ct' t)\n           (\\<lambda>s. enn2real (v (simple ct s))) -\n          measure_pmf.expectation (ct' t)\n           (\\<lambda>s. enn2real (v (simple ct' s)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Delta> t\n    \\<le> measure_pmf.expectation (ct' t)\n           (\\<lambda>s. enn2real (v (simple ct s))) -\n          measure_pmf.expectation (ct' t)\n           (\\<lambda>s. enn2real (v (simple ct' s)))", "have \"?v t \\<le> (\\<integral>\\<^sup>+s. ?v s \\<partial>ct' t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v (simple ct t)\n    \\<le> \\<integral>\\<^sup>+ s. v (simple ct s)\n                             \\<partial>measure_pmf (ct' t)", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    v (simple ct t)\n    \\<le> \\<integral>\\<^sup>+ s. v (simple ct s)\n                             \\<partial>measure_pmf (ct' t)\n 2. \\<not> ?P \\<Longrightarrow>\n    v (simple ct t)\n    \\<le> \\<integral>\\<^sup>+ s. v (simple ct s)\n                             \\<partial>measure_pmf (ct' t)", "assume \"t = s\""], ["proof (state)\nthis:\n  t = s\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    v (simple ct t)\n    \\<le> \\<integral>\\<^sup>+ s. v (simple ct s)\n                             \\<partial>measure_pmf (ct' t)\n 2. \\<not> ?P \\<Longrightarrow>\n    v (simple ct t)\n    \\<le> \\<integral>\\<^sup>+ s. v (simple ct s)\n                             \\<partial>measure_pmf (ct' t)", "with not_maximal"], ["proof (chain)\npicking this:\n  v (simple ct s)\n  < \\<integral>\\<^sup>+ t. v (simple ct t) \\<partial>measure_pmf D\n  t = s", "show ?thesis"], ["proof (prove)\nusing this:\n  v (simple ct s)\n  < \\<integral>\\<^sup>+ t. v (simple ct t) \\<partial>measure_pmf D\n  t = s\n\ngoal (1 subgoal):\n 1. v (simple ct t)\n    \\<le> \\<integral>\\<^sup>+ s. v (simple ct s)\n                             \\<partial>measure_pmf (ct' t)", "by simp"], ["proof (state)\nthis:\n  v (simple ct t)\n  \\<le> \\<integral>\\<^sup>+ s. v (simple ct s) \\<partial>measure_pmf (ct' t)\n\ngoal (1 subgoal):\n 1. t \\<noteq> s \\<Longrightarrow>\n    v (simple ct t)\n    \\<le> \\<integral>\\<^sup>+ s. v (simple ct s)\n                             \\<partial>measure_pmf (ct' t)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. t \\<noteq> s \\<Longrightarrow>\n    v (simple ct t)\n    \\<le> \\<integral>\\<^sup>+ s. v (simple ct s)\n                             \\<partial>measure_pmf (ct' t)", "assume \"t \\<noteq> s\""], ["proof (state)\nthis:\n  t \\<noteq> s\n\ngoal (1 subgoal):\n 1. t \\<noteq> s \\<Longrightarrow>\n    v (simple ct t)\n    \\<le> \\<integral>\\<^sup>+ s. v (simple ct s)\n                             \\<partial>measure_pmf (ct' t)", "with S1 \\<open>t\\<in>S1\\<close> \\<open>t \\<in> S\\<close> ct ct'"], ["proof (chain)\npicking this:\n  S1 \\<subseteq> S\n  t \\<in> S1\n  t \\<in> S\n  ct \\<in> Pi S K\n  ct' \\<in> Pi S K\n  t \\<noteq> s", "show ?thesis"], ["proof (prove)\nusing this:\n  S1 \\<subseteq> S\n  t \\<in> S1\n  t \\<in> S\n  ct \\<in> Pi S K\n  ct' \\<in> Pi S K\n  t \\<noteq> s\n\ngoal (1 subgoal):\n 1. v (simple ct t)\n    \\<le> \\<integral>\\<^sup>+ s. v (simple ct s)\n                             \\<partial>measure_pmf (ct' t)", "by (subst v_S1) (auto intro!: nn_integral_mono_AE AE_pmfI)"], ["proof (state)\nthis:\n  v (simple ct t)\n  \\<le> \\<integral>\\<^sup>+ s. v (simple ct s) \\<partial>measure_pmf (ct' t)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  v (simple ct t)\n  \\<le> \\<integral>\\<^sup>+ s. v (simple ct s) \\<partial>measure_pmf (ct' t)\n\ngoal (1 subgoal):\n 1. \\<Delta> t\n    \\<le> measure_pmf.expectation (ct' t)\n           (\\<lambda>s. enn2real (v (simple ct s))) -\n          measure_pmf.expectation (ct' t)\n           (\\<lambda>s. enn2real (v (simple ct' s)))", "also"], ["proof (state)\nthis:\n  v (simple ct t)\n  \\<le> \\<integral>\\<^sup>+ s. v (simple ct s) \\<partial>measure_pmf (ct' t)\n\ngoal (1 subgoal):\n 1. \\<Delta> t\n    \\<le> measure_pmf.expectation (ct' t)\n           (\\<lambda>s. enn2real (v (simple ct s))) -\n          measure_pmf.expectation (ct' t)\n           (\\<lambda>s. enn2real (v (simple ct' s)))", "have \"\\<dots> = ennreal (\\<integral>s. enn2real (?v s) \\<partial>ct' t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ s. v (simple ct s) \\<partial>measure_pmf (ct' t) =\n    ennreal\n     (measure_pmf.expectation (ct' t)\n       (\\<lambda>s. enn2real (v (simple ct s))))", "using ct ct' \\<open>t\\<in>S\\<close>"], ["proof (prove)\nusing this:\n  ct \\<in> Pi S K\n  ct' \\<in> Pi S K\n  t \\<in> S\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ s. v (simple ct s) \\<partial>measure_pmf (ct' t) =\n    ennreal\n     (measure_pmf.expectation (ct' t)\n       (\\<lambda>s. enn2real (v (simple ct s))))", "by (intro measure_pmf.ennreal_integral_real[symmetric, where B=1])\n                 (auto simp: AE_measure_pmf_iff one_ennreal_def[symmetric]\n                       intro!: v_le_1 simple_valid_cfg intro: Pi_closed)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ s. v (simple ct s) \\<partial>measure_pmf (ct' t) =\n  ennreal\n   (measure_pmf.expectation (ct' t)\n     (\\<lambda>s. enn2real (v (simple ct s))))\n\ngoal (1 subgoal):\n 1. \\<Delta> t\n    \\<le> measure_pmf.expectation (ct' t)\n           (\\<lambda>s. enn2real (v (simple ct s))) -\n          measure_pmf.expectation (ct' t)\n           (\\<lambda>s. enn2real (v (simple ct' s)))", "finally"], ["proof (chain)\npicking this:\n  v (simple ct t)\n  \\<le> ennreal\n         (measure_pmf.expectation (ct' t)\n           (\\<lambda>s. enn2real (v (simple ct s))))", "have \"enn2real (?v t) \\<le> (\\<integral>s. enn2real (?v s) \\<partial>ct' t)\""], ["proof (prove)\nusing this:\n  v (simple ct t)\n  \\<le> ennreal\n         (measure_pmf.expectation (ct' t)\n           (\\<lambda>s. enn2real (v (simple ct s))))\n\ngoal (1 subgoal):\n 1. enn2real (v (simple ct t))\n    \\<le> measure_pmf.expectation (ct' t)\n           (\\<lambda>s. enn2real (v (simple ct s)))", "using ct \\<open>t\\<in>S\\<close>"], ["proof (prove)\nusing this:\n  v (simple ct t)\n  \\<le> ennreal\n         (measure_pmf.expectation (ct' t)\n           (\\<lambda>s. enn2real (v (simple ct s))))\n  ct \\<in> Pi S K\n  t \\<in> S\n\ngoal (1 subgoal):\n 1. enn2real (v (simple ct t))\n    \\<le> measure_pmf.expectation (ct' t)\n           (\\<lambda>s. enn2real (v (simple ct s)))", "by (simp add: v_def T.emeasure_eq_measure)"], ["proof (state)\nthis:\n  enn2real (v (simple ct t))\n  \\<le> measure_pmf.expectation (ct' t)\n         (\\<lambda>s. enn2real (v (simple ct s)))\n\ngoal (1 subgoal):\n 1. \\<Delta> t\n    \\<le> measure_pmf.expectation (ct' t)\n           (\\<lambda>s. enn2real (v (simple ct s))) -\n          measure_pmf.expectation (ct' t)\n           (\\<lambda>s. enn2real (v (simple ct' s)))", "moreover"], ["proof (state)\nthis:\n  enn2real (v (simple ct t))\n  \\<le> measure_pmf.expectation (ct' t)\n         (\\<lambda>s. enn2real (v (simple ct s)))\n\ngoal (1 subgoal):\n 1. \\<Delta> t\n    \\<le> measure_pmf.expectation (ct' t)\n           (\\<lambda>s. enn2real (v (simple ct s))) -\n          measure_pmf.expectation (ct' t)\n           (\\<lambda>s. enn2real (v (simple ct' s)))", "{"], ["proof (state)\nthis:\n  enn2real (v (simple ct t))\n  \\<le> measure_pmf.expectation (ct' t)\n         (\\<lambda>s. enn2real (v (simple ct s)))\n\ngoal (1 subgoal):\n 1. \\<Delta> t\n    \\<le> measure_pmf.expectation (ct' t)\n           (\\<lambda>s. enn2real (v (simple ct s))) -\n          measure_pmf.expectation (ct' t)\n           (\\<lambda>s. enn2real (v (simple ct' s)))", "have \"?v' t = (\\<integral>\\<^sup>+s. ?v' s \\<partial>ct' t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v (simple ct' t) =\n    \\<integral>\\<^sup>+ s. v (simple ct' s) \\<partial>measure_pmf (ct' t)", "using ct ct' \\<open>t \\<in> S\\<close> \\<open>t \\<in> S1\\<close> S1"], ["proof (prove)\nusing this:\n  ct \\<in> Pi S K\n  ct' \\<in> Pi S K\n  t \\<in> S\n  t \\<in> S1\n  S1 \\<subseteq> S\n\ngoal (1 subgoal):\n 1. v (simple ct' t) =\n    \\<integral>\\<^sup>+ s. v (simple ct' s) \\<partial>measure_pmf (ct' t)", "by (subst v_S1) (auto intro!: nn_integral_cong_AE AE_pmfI)"], ["proof (state)\nthis:\n  v (simple ct' t) =\n  \\<integral>\\<^sup>+ s. v (simple ct' s) \\<partial>measure_pmf (ct' t)\n\ngoal (1 subgoal):\n 1. \\<Delta> t\n    \\<le> measure_pmf.expectation (ct' t)\n           (\\<lambda>s. enn2real (v (simple ct s))) -\n          measure_pmf.expectation (ct' t)\n           (\\<lambda>s. enn2real (v (simple ct' s)))", "also"], ["proof (state)\nthis:\n  v (simple ct' t) =\n  \\<integral>\\<^sup>+ s. v (simple ct' s) \\<partial>measure_pmf (ct' t)\n\ngoal (1 subgoal):\n 1. \\<Delta> t\n    \\<le> measure_pmf.expectation (ct' t)\n           (\\<lambda>s. enn2real (v (simple ct s))) -\n          measure_pmf.expectation (ct' t)\n           (\\<lambda>s. enn2real (v (simple ct' s)))", "have \"\\<dots> = ennreal (\\<integral>s. enn2real (?v' s) \\<partial>ct' t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ s. v (simple ct' s) \\<partial>measure_pmf (ct' t) =\n    ennreal\n     (measure_pmf.expectation (ct' t)\n       (\\<lambda>s. enn2real (v (simple ct' s))))", "using ct' \\<open>t\\<in>S\\<close>"], ["proof (prove)\nusing this:\n  ct' \\<in> Pi S K\n  t \\<in> S\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ s. v (simple ct' s) \\<partial>measure_pmf (ct' t) =\n    ennreal\n     (measure_pmf.expectation (ct' t)\n       (\\<lambda>s. enn2real (v (simple ct' s))))", "by (intro measure_pmf.ennreal_integral_real[symmetric, where B=1])\n                   (auto simp: AE_measure_pmf_iff one_ennreal_def[symmetric]\n                         intro!:  v_le_1 simple_valid_cfg intro: Pi_closed)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ s. v (simple ct' s) \\<partial>measure_pmf (ct' t) =\n  ennreal\n   (measure_pmf.expectation (ct' t)\n     (\\<lambda>s. enn2real (v (simple ct' s))))\n\ngoal (1 subgoal):\n 1. \\<Delta> t\n    \\<le> measure_pmf.expectation (ct' t)\n           (\\<lambda>s. enn2real (v (simple ct s))) -\n          measure_pmf.expectation (ct' t)\n           (\\<lambda>s. enn2real (v (simple ct' s)))", "finally"], ["proof (chain)\npicking this:\n  v (simple ct' t) =\n  ennreal\n   (measure_pmf.expectation (ct' t)\n     (\\<lambda>s. enn2real (v (simple ct' s))))", "have \"enn2real (?v' t) = (\\<integral>s. enn2real (?v' s) \\<partial>ct' t)\""], ["proof (prove)\nusing this:\n  v (simple ct' t) =\n  ennreal\n   (measure_pmf.expectation (ct' t)\n     (\\<lambda>s. enn2real (v (simple ct' s))))\n\ngoal (1 subgoal):\n 1. enn2real (v (simple ct' t)) =\n    measure_pmf.expectation (ct' t)\n     (\\<lambda>s. enn2real (v (simple ct' s)))", "using ct' \\<open>t\\<in>S\\<close>"], ["proof (prove)\nusing this:\n  v (simple ct' t) =\n  ennreal\n   (measure_pmf.expectation (ct' t)\n     (\\<lambda>s. enn2real (v (simple ct' s))))\n  ct' \\<in> Pi S K\n  t \\<in> S\n\ngoal (1 subgoal):\n 1. enn2real (v (simple ct' t)) =\n    measure_pmf.expectation (ct' t)\n     (\\<lambda>s. enn2real (v (simple ct' s)))", "by (simp add: v_def T.emeasure_eq_measure)"], ["proof (state)\nthis:\n  enn2real (v (simple ct' t)) =\n  measure_pmf.expectation (ct' t) (\\<lambda>s. enn2real (v (simple ct' s)))\n\ngoal (1 subgoal):\n 1. \\<Delta> t\n    \\<le> measure_pmf.expectation (ct' t)\n           (\\<lambda>s. enn2real (v (simple ct s))) -\n          measure_pmf.expectation (ct' t)\n           (\\<lambda>s. enn2real (v (simple ct' s)))", "}"], ["proof (state)\nthis:\n  enn2real (v (simple ct' t)) =\n  measure_pmf.expectation (ct' t) (\\<lambda>s. enn2real (v (simple ct' s)))\n\ngoal (1 subgoal):\n 1. \\<Delta> t\n    \\<le> measure_pmf.expectation (ct' t)\n           (\\<lambda>s. enn2real (v (simple ct s))) -\n          measure_pmf.expectation (ct' t)\n           (\\<lambda>s. enn2real (v (simple ct' s)))", "ultimately"], ["proof (chain)\npicking this:\n  enn2real (v (simple ct t))\n  \\<le> measure_pmf.expectation (ct' t)\n         (\\<lambda>s. enn2real (v (simple ct s)))\n  enn2real (v (simple ct' t)) =\n  measure_pmf.expectation (ct' t) (\\<lambda>s. enn2real (v (simple ct' s)))", "show ?thesis"], ["proof (prove)\nusing this:\n  enn2real (v (simple ct t))\n  \\<le> measure_pmf.expectation (ct' t)\n         (\\<lambda>s. enn2real (v (simple ct s)))\n  enn2real (v (simple ct' t)) =\n  measure_pmf.expectation (ct' t) (\\<lambda>s. enn2real (v (simple ct' s)))\n\ngoal (1 subgoal):\n 1. \\<Delta> t\n    \\<le> measure_pmf.expectation (ct' t)\n           (\\<lambda>s. enn2real (v (simple ct s))) -\n          measure_pmf.expectation (ct' t)\n           (\\<lambda>s. enn2real (v (simple ct' s)))", "using \\<open>t \\<in> S\\<close>"], ["proof (prove)\nusing this:\n  enn2real (v (simple ct t))\n  \\<le> measure_pmf.expectation (ct' t)\n         (\\<lambda>s. enn2real (v (simple ct s)))\n  enn2real (v (simple ct' t)) =\n  measure_pmf.expectation (ct' t) (\\<lambda>s. enn2real (v (simple ct' s)))\n  t \\<in> S\n\ngoal (1 subgoal):\n 1. \\<Delta> t\n    \\<le> measure_pmf.expectation (ct' t)\n           (\\<lambda>s. enn2real (v (simple ct s))) -\n          measure_pmf.expectation (ct' t)\n           (\\<lambda>s. enn2real (v (simple ct' s)))", "by (simp add: \\<Delta>_def ennreal_minus_mono)"], ["proof (state)\nthis:\n  \\<Delta> t\n  \\<le> measure_pmf.expectation (ct' t)\n         (\\<lambda>s. enn2real (v (simple ct s))) -\n        measure_pmf.expectation (ct' t)\n         (\\<lambda>s. enn2real (v (simple ct' s)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Delta> t\n  \\<le> measure_pmf.expectation (ct' t)\n         (\\<lambda>s. enn2real (v (simple ct s))) -\n        measure_pmf.expectation (ct' t)\n         (\\<lambda>s. enn2real (v (simple ct' s)))\n\ngoal (1 subgoal):\n 1. \\<Delta> t' < \\<Delta> t \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  \\<Delta> t\n  \\<le> measure_pmf.expectation (ct' t)\n         (\\<lambda>s. enn2real (v (simple ct s))) -\n        measure_pmf.expectation (ct' t)\n         (\\<lambda>s. enn2real (v (simple ct' s)))\n\ngoal (1 subgoal):\n 1. \\<Delta> t' < \\<Delta> t \\<Longrightarrow> False", "have \"\\<dots> = (\\<integral>s. \\<Delta> s \\<partial>ct' t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. measure_pmf.expectation (ct' t)\n     (\\<lambda>s. enn2real (v (simple ct s))) -\n    measure_pmf.expectation (ct' t)\n     (\\<lambda>s. enn2real (v (simple ct' s))) =\n    measure_pmf.expectation (ct' t) \\<Delta>", "unfolding \\<Delta>_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. measure_pmf.expectation (ct' t)\n     (\\<lambda>s. enn2real (v (simple ct s))) -\n    measure_pmf.expectation (ct' t)\n     (\\<lambda>s. enn2real (v (simple ct' s))) =\n    measure_pmf.expectation (ct' t)\n     (\\<lambda>s. enn2real (v (simple ct s)) - enn2real (v (simple ct' s)))", "using Pi_closed[OF ct \\<open>t\\<in>S\\<close>] Pi_closed[OF ct' \\<open>t\\<in>S\\<close>] ct ct'"], ["proof (prove)\nusing this:\n  ?t \\<in> set_pmf (ct t) \\<Longrightarrow> ?t \\<in> S\n  ?t \\<in> set_pmf (ct' t) \\<Longrightarrow> ?t \\<in> S\n  ct \\<in> Pi S K\n  ct' \\<in> Pi S K\n\ngoal (1 subgoal):\n 1. measure_pmf.expectation (ct' t)\n     (\\<lambda>s. enn2real (v (simple ct s))) -\n    measure_pmf.expectation (ct' t)\n     (\\<lambda>s. enn2real (v (simple ct' s))) =\n    measure_pmf.expectation (ct' t)\n     (\\<lambda>s. enn2real (v (simple ct s)) - enn2real (v (simple ct' s)))", "by (intro Bochner_Integration.integral_diff[symmetric] measure_pmf.integrable_const_bound[where B=1])\n               (auto simp: AE_measure_pmf_iff real_v)"], ["proof (state)\nthis:\n  measure_pmf.expectation (ct' t) (\\<lambda>s. enn2real (v (simple ct s))) -\n  measure_pmf.expectation (ct' t)\n   (\\<lambda>s. enn2real (v (simple ct' s))) =\n  measure_pmf.expectation (ct' t) \\<Delta>\n\ngoal (1 subgoal):\n 1. \\<Delta> t' < \\<Delta> t \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  measure_pmf.expectation (ct' t) \\<Delta>\n  < measure_pmf.expectation (ct' t) \\<Delta>", "show False"], ["proof (prove)\nusing this:\n  measure_pmf.expectation (ct' t) \\<Delta>\n  < measure_pmf.expectation (ct' t) \\<Delta>\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Delta> t \\<le> \\<Delta> t'\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>y \\<in> directed_towards S2\n                         (SIGMA s:S\\<^sub>r. set_pmf (ct' s));\n        y \\<in> maximal \\<Delta> S \\<Longrightarrow> False;\n        (x, y) \\<in> (SIGMA s:S\\<^sub>r. set_pmf (ct' s));\n        x \\<in> maximal \\<Delta> S\\<rbrakk>\n       \\<Longrightarrow> False", "with t[THEN  maximalD2] \\<open>t \\<in> S\\<close> \\<open>t' \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  ?y \\<in> S \\<Longrightarrow> \\<Delta> ?y \\<le> \\<Delta> t\n  t \\<in> S\n  t' \\<in> S\n  \\<Delta> t \\<le> \\<Delta> t'", "have \"\\<Delta> t = \\<Delta> t'\""], ["proof (prove)\nusing this:\n  ?y \\<in> S \\<Longrightarrow> \\<Delta> ?y \\<le> \\<Delta> t\n  t \\<in> S\n  t' \\<in> S\n  \\<Delta> t \\<le> \\<Delta> t'\n\ngoal (1 subgoal):\n 1. \\<Delta> t = \\<Delta> t'", "by (auto intro: antisym)"], ["proof (state)\nthis:\n  \\<Delta> t = \\<Delta> t'\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>y \\<in> directed_towards S2\n                         (SIGMA s:S\\<^sub>r. set_pmf (ct' s));\n        y \\<in> maximal \\<Delta> S \\<Longrightarrow> False;\n        (x, y) \\<in> (SIGMA s:S\\<^sub>r. set_pmf (ct' s));\n        x \\<in> maximal \\<Delta> S\\<rbrakk>\n       \\<Longrightarrow> False", "with t \\<open>t' \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  t \\<in> maximal \\<Delta> S\n  t' \\<in> S\n  \\<Delta> t = \\<Delta> t'", "have \"t' \\<in> maximal \\<Delta> S\""], ["proof (prove)\nusing this:\n  t \\<in> maximal \\<Delta> S\n  t' \\<in> S\n  \\<Delta> t = \\<Delta> t'\n\ngoal (1 subgoal):\n 1. t' \\<in> maximal \\<Delta> S", "by (auto simp: maximal_def)"], ["proof (state)\nthis:\n  t' \\<in> maximal \\<Delta> S\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>y \\<in> directed_towards S2\n                         (SIGMA s:S\\<^sub>r. set_pmf (ct' s));\n        y \\<in> maximal \\<Delta> S \\<Longrightarrow> False;\n        (x, y) \\<in> (SIGMA s:S\\<^sub>r. set_pmf (ct' s));\n        x \\<in> maximal \\<Delta> S\\<rbrakk>\n       \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  t' \\<in> maximal \\<Delta> S", "show ?case"], ["proof (prove)\nusing this:\n  t' \\<in> maximal \\<Delta> S\n\ngoal (1 subgoal):\n 1. False", "by fact"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>s. v (simple ct s)) \\<le> (\\<lambda>s. v (simple ct' s))\n\ngoal (1 subgoal):\n 1. \\<exists>ct.\n       ct \\<in> Pi\\<^sub>E S K \\<and>\n       v \\<circ> simple ct = F_sup (v \\<circ> simple ct)", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>s. v (simple ct s)) \\<le> (\\<lambda>s. v (simple ct' s))\n\ngoal (1 subgoal):\n 1. \\<exists>ct.\n       ct \\<in> Pi\\<^sub>E S K \\<and>\n       v \\<circ> simple ct = F_sup (v \\<circ> simple ct)", "have \"?v s < ?v' s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v (simple ct s) < v (simple ct' s)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. v (simple ct s) < v (simple ct' s)", "have \"?v s < (\\<integral>\\<^sup>+t. ?v t \\<partial>D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v (simple ct s)\n    < \\<integral>\\<^sup>+ t. v (simple ct t) \\<partial>measure_pmf D", "by fact"], ["proof (state)\nthis:\n  v (simple ct s)\n  < \\<integral>\\<^sup>+ t. v (simple ct t) \\<partial>measure_pmf D\n\ngoal (1 subgoal):\n 1. v (simple ct s) < v (simple ct' s)", "also"], ["proof (state)\nthis:\n  v (simple ct s)\n  < \\<integral>\\<^sup>+ t. v (simple ct t) \\<partial>measure_pmf D\n\ngoal (1 subgoal):\n 1. v (simple ct s) < v (simple ct' s)", "have \"\\<dots> \\<le> (\\<integral>\\<^sup>+t. ?v' t \\<partial>D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ t. v (simple ct t) \\<partial>measure_pmf D\n    \\<le> \\<integral>\\<^sup>+ t. v (simple ct' t) \\<partial>measure_pmf D", "using \\<open>?v \\<le> ?v'\\<close> \\<open>s\\<in>S\\<close> D ct ct'"], ["proof (prove)\nusing this:\n  (\\<lambda>s. v (simple ct s)) \\<le> (\\<lambda>s. v (simple ct' s))\n  s \\<in> S\n  D \\<in> K s\n  ct \\<in> Pi S K\n  ct' \\<in> Pi S K\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ t. v (simple ct t) \\<partial>measure_pmf D\n    \\<le> \\<integral>\\<^sup>+ t. v (simple ct' t) \\<partial>measure_pmf D", "by (intro nn_integral_mono) (auto simp: le_fun_def)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ t. v (simple ct t) \\<partial>measure_pmf D\n  \\<le> \\<integral>\\<^sup>+ t. v (simple ct' t) \\<partial>measure_pmf D\n\ngoal (1 subgoal):\n 1. v (simple ct s) < v (simple ct' s)", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ t. v (simple ct t) \\<partial>measure_pmf D\n  \\<le> \\<integral>\\<^sup>+ t. v (simple ct' t) \\<partial>measure_pmf D\n\ngoal (1 subgoal):\n 1. v (simple ct s) < v (simple ct' s)", "have \"\\<dots> = ?v' s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ t. v (simple ct' t) \\<partial>measure_pmf D =\n    v (simple ct' s)", "using \\<open>s\\<in>S1\\<close> S1 ct' \\<open>s \\<in> S\\<close>"], ["proof (prove)\nusing this:\n  s \\<in> S1\n  S1 \\<subseteq> S\n  ct' \\<in> Pi S K\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ t. v (simple ct' t) \\<partial>measure_pmf D =\n    v (simple ct' s)", "by (subst (2) v_S1) (auto intro!: nn_integral_cong_AE AE_pmfI)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ t. v (simple ct' t) \\<partial>measure_pmf D =\n  v (simple ct' s)\n\ngoal (1 subgoal):\n 1. v (simple ct s) < v (simple ct' s)", "finally"], ["proof (chain)\npicking this:\n  v (simple ct s) < v (simple ct' s)", "show ?thesis"], ["proof (prove)\nusing this:\n  v (simple ct s) < v (simple ct' s)\n\ngoal (1 subgoal):\n 1. v (simple ct s) < v (simple ct' s)", "."], ["proof (state)\nthis:\n  v (simple ct s) < v (simple ct' s)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  v (simple ct s) < v (simple ct' s)\n\ngoal (1 subgoal):\n 1. \\<exists>ct.\n       ct \\<in> Pi\\<^sub>E S K \\<and>\n       v \\<circ> simple ct = F_sup (v \\<circ> simple ct)", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>s. v (simple ct s)) \\<le> (\\<lambda>s. v (simple ct' s))\n  v (simple ct s) < v (simple ct' s)", "have \"?v < ?v'\""], ["proof (prove)\nusing this:\n  (\\<lambda>s. v (simple ct s)) \\<le> (\\<lambda>s. v (simple ct' s))\n  v (simple ct s) < v (simple ct' s)\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. v (simple ct s)) < (\\<lambda>s. v (simple ct' s))", "by (auto simp: less_le le_fun_def fun_eq_iff)"], ["proof (state)\nthis:\n  (\\<lambda>s. v (simple ct s)) < (\\<lambda>s. v (simple ct' s))\n\ngoal (1 subgoal):\n 1. \\<exists>ct.\n       ct \\<in> Pi\\<^sub>E S K \\<and>\n       v \\<circ> simple ct = F_sup (v \\<circ> simple ct)", "note this proper ct'"], ["proof (state)\nthis:\n  (\\<lambda>s. v (simple ct s)) < (\\<lambda>s. v (simple ct' s))\n  proper ct'\n  ct' \\<in> Pi S K\n\ngoal (1 subgoal):\n 1. \\<exists>ct.\n       ct \\<in> Pi\\<^sub>E S K \\<and>\n       v \\<circ> simple ct = F_sup (v \\<circ> simple ct)", "}"], ["proof (state)\nthis:\n  (?ct'3, ?ct3) \\<in> R \\<Longrightarrow>\n  (\\<lambda>s. v (simple ?ct3 s)) < (\\<lambda>s. v (simple ?ct'3 s))\n  (?ct'3, ?ct3) \\<in> R \\<Longrightarrow> proper ?ct'3\n  (?ct'3, ?ct3) \\<in> R \\<Longrightarrow> ?ct'3 \\<in> Pi S K\n\ngoal (1 subgoal):\n 1. \\<exists>ct.\n       ct \\<in> Pi\\<^sub>E S K \\<and>\n       v \\<circ> simple ct = F_sup (v \\<circ> simple ct)", "note v_strict = this(1) and proper = this(2) and sc'_R = this(3)"], ["proof (state)\nthis:\n  (?ct'3, ?ct3) \\<in> R \\<Longrightarrow>\n  (\\<lambda>s. v (simple ?ct3 s)) < (\\<lambda>s. v (simple ?ct'3 s))\n  (?ct'3, ?ct3) \\<in> R \\<Longrightarrow> proper ?ct'3\n  (?ct'3, ?ct3) \\<in> R \\<Longrightarrow> ?ct'3 \\<in> Pi S K\n\ngoal (1 subgoal):\n 1. \\<exists>ct.\n       ct \\<in> Pi\\<^sub>E S K \\<and>\n       v \\<circ> simple ct = F_sup (v \\<circ> simple ct)", "have \"finite (Pi\\<^sub>E S K \\<times> Pi\\<^sub>E S K)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (Pi\\<^sub>E S K \\<times> Pi\\<^sub>E S K)", "by (intro finite_PiE S_finite K_finite finite_SigmaI)"], ["proof (state)\nthis:\n  finite (Pi\\<^sub>E S K \\<times> Pi\\<^sub>E S K)\n\ngoal (1 subgoal):\n 1. \\<exists>ct.\n       ct \\<in> Pi\\<^sub>E S K \\<and>\n       v \\<circ> simple ct = F_sup (v \\<circ> simple ct)", "then"], ["proof (chain)\npicking this:\n  finite (Pi\\<^sub>E S K \\<times> Pi\\<^sub>E S K)", "have \"finite R\""], ["proof (prove)\nusing this:\n  finite (Pi\\<^sub>E S K \\<times> Pi\\<^sub>E S K)\n\ngoal (1 subgoal):\n 1. finite R", "by (rule rev_finite_subset) (auto simp add: PiE_iff S\\<^sub>r_def R_def intro: extensional_arb)"], ["proof (state)\nthis:\n  finite R\n\ngoal (1 subgoal):\n 1. \\<exists>ct.\n       ct \\<in> Pi\\<^sub>E S K \\<and>\n       v \\<circ> simple ct = F_sup (v \\<circ> simple ct)", "moreover"], ["proof (state)\nthis:\n  finite R\n\ngoal (1 subgoal):\n 1. \\<exists>ct.\n       ct \\<in> Pi\\<^sub>E S K \\<and>\n       v \\<circ> simple ct = F_sup (v \\<circ> simple ct)", "from v_strict"], ["proof (chain)\npicking this:\n  (?ct'3, ?ct3) \\<in> R \\<Longrightarrow>\n  (\\<lambda>s. v (simple ?ct3 s)) < (\\<lambda>s. v (simple ?ct'3 s))", "have \"acyclic R\""], ["proof (prove)\nusing this:\n  (?ct'3, ?ct3) \\<in> R \\<Longrightarrow>\n  (\\<lambda>s. v (simple ?ct3 s)) < (\\<lambda>s. v (simple ?ct'3 s))\n\ngoal (1 subgoal):\n 1. acyclic R", "by (rule acyclicI_order)"], ["proof (state)\nthis:\n  acyclic R\n\ngoal (1 subgoal):\n 1. \\<exists>ct.\n       ct \\<in> Pi\\<^sub>E S K \\<and>\n       v \\<circ> simple ct = F_sup (v \\<circ> simple ct)", "ultimately"], ["proof (chain)\npicking this:\n  finite R\n  acyclic R", "have \"wf R\""], ["proof (prove)\nusing this:\n  finite R\n  acyclic R\n\ngoal (1 subgoal):\n 1. wf R", "by (rule finite_acyclic_wf)"], ["proof (state)\nthis:\n  wf R\n\ngoal (1 subgoal):\n 1. \\<exists>ct.\n       ct \\<in> Pi\\<^sub>E S K \\<and>\n       v \\<circ> simple ct = F_sup (v \\<circ> simple ct)", "from exists_proper"], ["proof (chain)\npicking this:\n  (\\<And>ct. proper ct \\<Longrightarrow> ?thesis) \\<Longrightarrow> ?thesis", "obtain ct' where ct': \"proper ct'\""], ["proof (prove)\nusing this:\n  (\\<And>ct. proper ct \\<Longrightarrow> ?thesis) \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>ct'. proper ct' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "."], ["proof (state)\nthis:\n  proper ct'\n\ngoal (1 subgoal):\n 1. \\<exists>ct.\n       ct \\<in> Pi\\<^sub>E S K \\<and>\n       v \\<circ> simple ct = F_sup (v \\<circ> simple ct)", "define ct where \"ct = restrict ct' S\""], ["proof (state)\nthis:\n  ct = restrict ct' S\n\ngoal (1 subgoal):\n 1. \\<exists>ct.\n       ct \\<in> Pi\\<^sub>E S K \\<and>\n       v \\<circ> simple ct = F_sup (v \\<circ> simple ct)", "with ct'"], ["proof (chain)\npicking this:\n  proper ct'\n  ct = restrict ct' S", "have sc_Pi: \"ct \\<in> Pi S K\" and \"ct' \\<in> Pi S K\""], ["proof (prove)\nusing this:\n  proper ct'\n  ct = restrict ct' S\n\ngoal (1 subgoal):\n 1. ct \\<in> Pi S K &&& ct' \\<in> Pi S K", "by (auto simp: proper_def)"], ["proof (state)\nthis:\n  ct \\<in> Pi S K\n  ct' \\<in> Pi S K\n\ngoal (1 subgoal):\n 1. \\<exists>ct.\n       ct \\<in> Pi\\<^sub>E S K \\<and>\n       v \\<circ> simple ct = F_sup (v \\<circ> simple ct)", "then"], ["proof (chain)\npicking this:\n  ct \\<in> Pi S K\n  ct' \\<in> Pi S K", "have ct: \"ct \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct}\""], ["proof (prove)\nusing this:\n  ct \\<in> Pi S K\n  ct' \\<in> Pi S K\n\ngoal (1 subgoal):\n 1. ct \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct}", "using ct' directed_towards_mono[where F=\"SIGMA s:S\\<^sub>r. ct' s\" and G=\"SIGMA s:S\\<^sub>r. ct s\"]"], ["proof (prove)\nusing this:\n  ct \\<in> Pi S K\n  ct' \\<in> Pi S K\n  proper ct'\n  \\<lbrakk>?s \\<in> directed_towards ?A\n                     (SIGMA x:S\\<^sub>r. set_pmf (ct' x));\n   (SIGMA x:S\\<^sub>r. set_pmf (ct' x))\n   \\<subseteq> (SIGMA x:S\\<^sub>r. set_pmf (ct x))\\<rbrakk>\n  \\<Longrightarrow> ?s \\<in> directed_towards ?A\n                              (SIGMA x:S\\<^sub>r. set_pmf (ct x))\n\ngoal (1 subgoal):\n 1. ct \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct}", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ct \\<in> Pi S K; ct' \\<in> Pi S K; proper ct';\n     \\<And>s A.\n        \\<lbrakk>s \\<in> directed_towards A\n                          (SIGMA x:S\\<^sub>r. set_pmf (ct' x));\n         (SIGMA x:S\\<^sub>r. set_pmf (ct' x))\n         \\<subseteq> (SIGMA x:S\\<^sub>r. set_pmf (ct x))\\<rbrakk>\n        \\<Longrightarrow> s \\<in> directed_towards A\n                                   (SIGMA x:S\\<^sub>r.\n set_pmf (ct x))\\<rbrakk>\n    \\<Longrightarrow> ct \\<in> Pi\\<^sub>E S K \\<and> proper ct", "apply (subst proper_eq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>ct \\<in> Pi S K; ct' \\<in> Pi S K; proper ct';\n     \\<And>s A.\n        \\<lbrakk>s \\<in> directed_towards A\n                          (SIGMA x:S\\<^sub>r. set_pmf (ct' x));\n         (SIGMA x:S\\<^sub>r. set_pmf (ct' x))\n         \\<subseteq> (SIGMA x:S\\<^sub>r. set_pmf (ct x))\\<rbrakk>\n        \\<Longrightarrow> s \\<in> directed_towards A\n                                   (SIGMA x:S\\<^sub>r.\n set_pmf (ct x))\\<rbrakk>\n    \\<Longrightarrow> ct \\<in> Pi\\<^sub>E S K\n 2. \\<lbrakk>ct \\<in> Pi S K; ct' \\<in> Pi S K; proper ct';\n     \\<And>s A.\n        \\<lbrakk>s \\<in> directed_towards A\n                          (SIGMA x:S\\<^sub>r. set_pmf (ct' x));\n         (SIGMA x:S\\<^sub>r. set_pmf (ct' x))\n         \\<subseteq> (SIGMA x:S\\<^sub>r. set_pmf (ct x))\\<rbrakk>\n        \\<Longrightarrow> s \\<in> directed_towards A\n                                   (SIGMA x:S\\<^sub>r.\n set_pmf (ct x))\\<rbrakk>\n    \\<Longrightarrow> ct \\<in> Pi\\<^sub>E S K \\<and>\n                      S\\<^sub>r\n                      \\<subseteq> directed_towards S2\n                                   (SIGMA x:S\\<^sub>r. set_pmf (ct x))", "by (auto simp: ct_def proper_eq[OF properD1[OF ct']] subset_eq S\\<^sub>r_def)"], ["proof (state)\nthis:\n  ct \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct}\n\ngoal (1 subgoal):\n 1. \\<exists>ct.\n       ct \\<in> Pi\\<^sub>E S K \\<and>\n       v \\<circ> simple ct = F_sup (v \\<circ> simple ct)", "show \"\\<exists>ct. ct \\<in> Pi\\<^sub>E S K \\<and> v\\<circ>simple ct = F_sup (v\\<circ>simple ct)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>ct.\n       ct \\<in> Pi\\<^sub>E S K \\<and>\n       v \\<circ> simple ct = F_sup (v \\<circ> simple ct)", "proof (rule wfE_min[OF \\<open>wf R\\<close> ct])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<lbrakk>z \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct};\n        \\<And>y.\n           (y, z) \\<in> R \\<Longrightarrow>\n           y \\<notin> {ct \\<in> Pi\\<^sub>E S K. proper ct}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ct.\n                            ct \\<in> Pi\\<^sub>E S K \\<and>\n                            v \\<circ> simple ct =\n                            F_sup (v \\<circ> simple ct)", "fix ct"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<lbrakk>z \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct};\n        \\<And>y.\n           (y, z) \\<in> R \\<Longrightarrow>\n           y \\<notin> {ct \\<in> Pi\\<^sub>E S K. proper ct}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ct.\n                            ct \\<in> Pi\\<^sub>E S K \\<and>\n                            v \\<circ> simple ct =\n                            F_sup (v \\<circ> simple ct)", "assume ct: \"ct \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct}\""], ["proof (state)\nthis:\n  ct \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct}\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<lbrakk>z \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct};\n        \\<And>y.\n           (y, z) \\<in> R \\<Longrightarrow>\n           y \\<notin> {ct \\<in> Pi\\<^sub>E S K. proper ct}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ct.\n                            ct \\<in> Pi\\<^sub>E S K \\<and>\n                            v \\<circ> simple ct =\n                            F_sup (v \\<circ> simple ct)", "then"], ["proof (chain)\npicking this:\n  ct \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct}", "have \"ct \\<in> Pi S K\" \"proper ct\""], ["proof (prove)\nusing this:\n  ct \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct}\n\ngoal (1 subgoal):\n 1. ct \\<in> Pi S K &&& proper ct", "by (auto simp: proper_def)"], ["proof (state)\nthis:\n  ct \\<in> Pi S K\n  proper ct\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<lbrakk>z \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct};\n        \\<And>y.\n           (y, z) \\<in> R \\<Longrightarrow>\n           y \\<notin> {ct \\<in> Pi\\<^sub>E S K. proper ct}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ct.\n                            ct \\<in> Pi\\<^sub>E S K \\<and>\n                            v \\<circ> simple ct =\n                            F_sup (v \\<circ> simple ct)", "assume min: \"\\<And>ct'. (ct', ct) \\<in> R \\<Longrightarrow> ct' \\<notin> {ct \\<in> Pi\\<^sub>E S K. proper ct}\""], ["proof (state)\nthis:\n  (?ct'1, ct) \\<in> R \\<Longrightarrow>\n  ?ct'1 \\<notin> {ct \\<in> Pi\\<^sub>E S K. proper ct}\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<lbrakk>z \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct};\n        \\<And>y.\n           (y, z) \\<in> R \\<Longrightarrow>\n           y \\<notin> {ct \\<in> Pi\\<^sub>E S K. proper ct}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ct.\n                            ct \\<in> Pi\\<^sub>E S K \\<and>\n                            v \\<circ> simple ct =\n                            F_sup (v \\<circ> simple ct)", "let ?v = \"\\<lambda>s. v (simple ct s)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<lbrakk>z \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct};\n        \\<And>y.\n           (y, z) \\<in> R \\<Longrightarrow>\n           y \\<notin> {ct \\<in> Pi\\<^sub>E S K. proper ct}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ct.\n                            ct \\<in> Pi\\<^sub>E S K \\<and>\n                            v \\<circ> simple ct =\n                            F_sup (v \\<circ> simple ct)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<lbrakk>z \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct};\n        \\<And>y.\n           (y, z) \\<in> R \\<Longrightarrow>\n           y \\<notin> {ct \\<in> Pi\\<^sub>E S K. proper ct}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ct.\n                            ct \\<in> Pi\\<^sub>E S K \\<and>\n                            v \\<circ> simple ct =\n                            F_sup (v \\<circ> simple ct)", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<lbrakk>z \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct};\n        \\<And>y.\n           (y, z) \\<in> R \\<Longrightarrow>\n           y \\<notin> {ct \\<in> Pi\\<^sub>E S K. proper ct}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ct.\n                            ct \\<in> Pi\\<^sub>E S K \\<and>\n                            v \\<circ> simple ct =\n                            F_sup (v \\<circ> simple ct)", "assume \"s \\<in> S\" \"s \\<in> S1\" \"s \\<notin> S2\""], ["proof (state)\nthis:\n  s \\<in> S\n  s \\<in> S1\n  s \\<notin> S2\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<lbrakk>z \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct};\n        \\<And>y.\n           (y, z) \\<in> R \\<Longrightarrow>\n           y \\<notin> {ct \\<in> Pi\\<^sub>E S K. proper ct}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ct.\n                            ct \\<in> Pi\\<^sub>E S K \\<and>\n                            v \\<circ> simple ct =\n                            F_sup (v \\<circ> simple ct)", "with ct"], ["proof (chain)\npicking this:\n  ct \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct}\n  s \\<in> S\n  s \\<in> S1\n  s \\<notin> S2", "have \"ct s \\<in> K s\" \"?v s \\<le> integral\\<^sup>N (ct s) ?v\""], ["proof (prove)\nusing this:\n  ct \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct}\n  s \\<in> S\n  s \\<in> S1\n  s \\<notin> S2\n\ngoal (1 subgoal):\n 1. ct s \\<in> K s &&&\n    v (simple ct s)\n    \\<le> \\<integral>\\<^sup>+ s. v (simple ct s)\n                             \\<partial>measure_pmf (ct s)", "by (auto simp: v_S1 PiE_def intro!: nn_integral_mono_AE AE_pmfI)"], ["proof (state)\nthis:\n  ct s \\<in> K s\n  v (simple ct s)\n  \\<le> \\<integral>\\<^sup>+ s. v (simple ct s) \\<partial>measure_pmf (ct s)\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<lbrakk>z \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct};\n        \\<And>y.\n           (y, z) \\<in> R \\<Longrightarrow>\n           y \\<notin> {ct \\<in> Pi\\<^sub>E S K. proper ct}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ct.\n                            ct \\<in> Pi\\<^sub>E S K \\<and>\n                            v \\<circ> simple ct =\n                            F_sup (v \\<circ> simple ct)", "moreover"], ["proof (state)\nthis:\n  ct s \\<in> K s\n  v (simple ct s)\n  \\<le> \\<integral>\\<^sup>+ s. v (simple ct s) \\<partial>measure_pmf (ct s)\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<lbrakk>z \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct};\n        \\<And>y.\n           (y, z) \\<in> R \\<Longrightarrow>\n           y \\<notin> {ct \\<in> Pi\\<^sub>E S K. proper ct}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ct.\n                            ct \\<in> Pi\\<^sub>E S K \\<and>\n                            v \\<circ> simple ct =\n                            F_sup (v \\<circ> simple ct)", "{"], ["proof (state)\nthis:\n  ct s \\<in> K s\n  v (simple ct s)\n  \\<le> \\<integral>\\<^sup>+ s. v (simple ct s) \\<partial>measure_pmf (ct s)\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<lbrakk>z \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct};\n        \\<And>y.\n           (y, z) \\<in> R \\<Longrightarrow>\n           y \\<notin> {ct \\<in> Pi\\<^sub>E S K. proper ct}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ct.\n                            ct \\<in> Pi\\<^sub>E S K \\<and>\n                            v \\<circ> simple ct =\n                            F_sup (v \\<circ> simple ct)", "have \"0 \\<le> ?v s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> v (simple ct s)", "using \\<open>s\\<in>S\\<close> ct"], ["proof (prove)\nusing this:\n  s \\<in> S\n  ct \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct}\n\ngoal (1 subgoal):\n 1. 0 \\<le> v (simple ct s)", "by (simp add: PiE_def)"], ["proof (state)\nthis:\n  0 \\<le> v (simple ct s)\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<lbrakk>z \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct};\n        \\<And>y.\n           (y, z) \\<in> R \\<Longrightarrow>\n           y \\<notin> {ct \\<in> Pi\\<^sub>E S K. proper ct}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ct.\n                            ct \\<in> Pi\\<^sub>E S K \\<and>\n                            v \\<circ> simple ct =\n                            F_sup (v \\<circ> simple ct)", "also"], ["proof (state)\nthis:\n  0 \\<le> v (simple ct s)\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<lbrakk>z \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct};\n        \\<And>y.\n           (y, z) \\<in> R \\<Longrightarrow>\n           y \\<notin> {ct \\<in> Pi\\<^sub>E S K. proper ct}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ct.\n                            ct \\<in> Pi\\<^sub>E S K \\<and>\n                            v \\<circ> simple ct =\n                            F_sup (v \\<circ> simple ct)", "assume v_less: \"?v s < (\\<Squnion>D\\<in>K s. \\<integral>\\<^sup>+ s. v (simple ct s) \\<partial>measure_pmf D)\""], ["proof (state)\nthis:\n  v (simple ct s)\n  < (\\<Squnion>D\\<in>K s.\n        \\<integral>\\<^sup>+ s. v (simple ct s) \\<partial>measure_pmf D)\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<lbrakk>z \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct};\n        \\<And>y.\n           (y, z) \\<in> R \\<Longrightarrow>\n           y \\<notin> {ct \\<in> Pi\\<^sub>E S K. proper ct}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ct.\n                            ct \\<in> Pi\\<^sub>E S K \\<and>\n                            v \\<circ> simple ct =\n                            F_sup (v \\<circ> simple ct)", "also"], ["proof (state)\nthis:\n  v (simple ct s)\n  < (\\<Squnion>D\\<in>K s.\n        \\<integral>\\<^sup>+ s. v (simple ct s) \\<partial>measure_pmf D)\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<lbrakk>z \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct};\n        \\<And>y.\n           (y, z) \\<in> R \\<Longrightarrow>\n           y \\<notin> {ct \\<in> Pi\\<^sub>E S K. proper ct}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ct.\n                            ct \\<in> Pi\\<^sub>E S K \\<and>\n                            v \\<circ> simple ct =\n                            F_sup (v \\<circ> simple ct)", "have \"\\<dots> \\<le> p s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Squnion>D\\<in>K s.\n        \\<integral>\\<^sup>+ s. v (simple ct s) \\<partial>measure_pmf D)\n    \\<le> p s", "unfolding p_S1[OF \\<open>s\\<in>S1\\<close>]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Squnion>D\\<in>K s.\n        \\<integral>\\<^sup>+ s. v (simple ct s) \\<partial>measure_pmf D)\n    \\<le> (\\<Squnion>D\\<in>K s. integral\\<^sup>N (measure_pmf D) p)", "using \\<open>s\\<in>S\\<close> ct v_le_p[OF simple_valid_cfg, OF \\<open>ct \\<in> Pi S K\\<close>]"], ["proof (prove)\nusing this:\n  s \\<in> S\n  ct \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct}\n  ?s1 \\<in> S \\<Longrightarrow>\n  v (simple ct ?s1) \\<le> p (state (simple ct ?s1))\n\ngoal (1 subgoal):\n 1. (\\<Squnion>D\\<in>K s.\n        \\<integral>\\<^sup>+ s. v (simple ct s) \\<partial>measure_pmf D)\n    \\<le> (\\<Squnion>D\\<in>K s. integral\\<^sup>N (measure_pmf D) p)", "by (auto intro!: SUP_mono nn_integral_mono_AE bexI\n                   simp: PiE_def AE_measure_pmf_iff set_pmf_closed)"], ["proof (state)\nthis:\n  (\\<Squnion>D\\<in>K s.\n      \\<integral>\\<^sup>+ s. v (simple ct s) \\<partial>measure_pmf D)\n  \\<le> p s\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<lbrakk>z \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct};\n        \\<And>y.\n           (y, z) \\<in> R \\<Longrightarrow>\n           y \\<notin> {ct \\<in> Pi\\<^sub>E S K. proper ct}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ct.\n                            ct \\<in> Pi\\<^sub>E S K \\<and>\n                            v \\<circ> simple ct =\n                            F_sup (v \\<circ> simple ct)", "finally"], ["proof (chain)\npicking this:\n  0 < p s", "have \"s \\<in> S\\<^sub>r\""], ["proof (prove)\nusing this:\n  0 < p s\n\ngoal (1 subgoal):\n 1. s \\<in> S\\<^sub>r", "using \\<open>s\\<in>S\\<close> \\<open>s\\<notin>S2\\<close>"], ["proof (prove)\nusing this:\n  0 < p s\n  s \\<in> S\n  s \\<notin> S2\n\ngoal (1 subgoal):\n 1. s \\<in> S\\<^sub>r", "by (simp add: S\\<^sub>r_def S\\<^sub>e_def)"], ["proof (state)\nthis:\n  s \\<in> S\\<^sub>r\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<lbrakk>z \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct};\n        \\<And>y.\n           (y, z) \\<in> R \\<Longrightarrow>\n           y \\<notin> {ct \\<in> Pi\\<^sub>E S K. proper ct}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ct.\n                            ct \\<in> Pi\\<^sub>E S K \\<and>\n                            v \\<circ> simple ct =\n                            F_sup (v \\<circ> simple ct)", "from v_less"], ["proof (chain)\npicking this:\n  v (simple ct s)\n  < (\\<Squnion>D\\<in>K s.\n        \\<integral>\\<^sup>+ s. v (simple ct s) \\<partial>measure_pmf D)", "obtain D where \"D \\<in> K s\" \"?v s < integral\\<^sup>N D ?v\""], ["proof (prove)\nusing this:\n  v (simple ct s)\n  < (\\<Squnion>D\\<in>K s.\n        \\<integral>\\<^sup>+ s. v (simple ct s) \\<partial>measure_pmf D)\n\ngoal (1 subgoal):\n 1. (\\<And>D.\n        \\<lbrakk>D \\<in> K s;\n         v (simple ct s)\n         < \\<integral>\\<^sup>+ s. v (simple ct s)\n                              \\<partial>measure_pmf D\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: less_SUP_iff)"], ["proof (state)\nthis:\n  D \\<in> K s\n  v (simple ct s)\n  < \\<integral>\\<^sup>+ s. v (simple ct s) \\<partial>measure_pmf D\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<lbrakk>z \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct};\n        \\<And>y.\n           (y, z) \\<in> R \\<Longrightarrow>\n           y \\<notin> {ct \\<in> Pi\\<^sub>E S K. proper ct}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ct.\n                            ct \\<in> Pi\\<^sub>E S K \\<and>\n                            v \\<circ> simple ct =\n                            F_sup (v \\<circ> simple ct)", "with ct \\<open>s\\<in>S\\<close> \\<open>s\\<in>S\\<^sub>r\\<close>"], ["proof (chain)\npicking this:\n  ct \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct}\n  s \\<in> S\n  s \\<in> S\\<^sub>r\n  D \\<in> K s\n  v (simple ct s)\n  < \\<integral>\\<^sup>+ s. v (simple ct s) \\<partial>measure_pmf D", "have \"(ct(s:=D), ct) \\<in> R\" \"ct(s:=D) \\<in> Pi\\<^sub>E S K\""], ["proof (prove)\nusing this:\n  ct \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct}\n  s \\<in> S\n  s \\<in> S\\<^sub>r\n  D \\<in> K s\n  v (simple ct s)\n  < \\<integral>\\<^sup>+ s. v (simple ct s) \\<partial>measure_pmf D\n\ngoal (1 subgoal):\n 1. (ct(s := D), ct) \\<in> R &&& ct(s := D) \\<in> Pi\\<^sub>E S K", "unfolding R_def"], ["proof (prove)\nusing this:\n  ct \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct}\n  s \\<in> S\n  s \\<in> S\\<^sub>r\n  D \\<in> K s\n  v (simple ct s)\n  < \\<integral>\\<^sup>+ s. v (simple ct s) \\<partial>measure_pmf D\n\ngoal (1 subgoal):\n 1. (ct(s := D), ct)\n    \\<in> {(ct(s := D), ct) |ct s D.\n           ct \\<in> Pi\\<^sub>E S K \\<and>\n           proper ct \\<and>\n           s \\<in> S\\<^sub>r \\<and>\n           D \\<in> K s \\<and>\n           v (simple ct s)\n           < \\<integral>\\<^sup>+ t. v (simple ct t)\n                                \\<partial>measure_pmf D} &&&\n    ct(s := D) \\<in> Pi\\<^sub>E S K", "by (auto simp: PiE_def extensional_def)"], ["proof (state)\nthis:\n  (ct(s := D), ct) \\<in> R\n  ct(s := D) \\<in> Pi\\<^sub>E S K\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<lbrakk>z \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct};\n        \\<And>y.\n           (y, z) \\<in> R \\<Longrightarrow>\n           y \\<notin> {ct \\<in> Pi\\<^sub>E S K. proper ct}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ct.\n                            ct \\<in> Pi\\<^sub>E S K \\<and>\n                            v \\<circ> simple ct =\n                            F_sup (v \\<circ> simple ct)", "from proper[OF this(1)] min[OF this(1)] ct \\<open>D \\<in> K s\\<close> \\<open>s\\<in>S\\<close> this(2)"], ["proof (chain)\npicking this:\n  proper (ct(s := D))\n  ct(s := D) \\<notin> {ct \\<in> Pi\\<^sub>E S K. proper ct}\n  ct \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct}\n  D \\<in> K s\n  s \\<in> S\n  ct(s := D) \\<in> Pi\\<^sub>E S K", "have False"], ["proof (prove)\nusing this:\n  proper (ct(s := D))\n  ct(s := D) \\<notin> {ct \\<in> Pi\\<^sub>E S K. proper ct}\n  ct \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct}\n  D \\<in> K s\n  s \\<in> S\n  ct(s := D) \\<in> Pi\\<^sub>E S K\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<lbrakk>z \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct};\n        \\<And>y.\n           (y, z) \\<in> R \\<Longrightarrow>\n           y \\<notin> {ct \\<in> Pi\\<^sub>E S K. proper ct}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ct.\n                            ct \\<in> Pi\\<^sub>E S K \\<and>\n                            v \\<circ> simple ct =\n                            F_sup (v \\<circ> simple ct)", "}"], ["proof (state)\nthis:\n  v (simple ct s)\n  < (\\<Squnion>D\\<in>K s.\n        \\<integral>\\<^sup>+ s. v (simple ct s)\n                           \\<partial>measure_pmf D) \\<Longrightarrow>\n  False\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<lbrakk>z \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct};\n        \\<And>y.\n           (y, z) \\<in> R \\<Longrightarrow>\n           y \\<notin> {ct \\<in> Pi\\<^sub>E S K. proper ct}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ct.\n                            ct \\<in> Pi\\<^sub>E S K \\<and>\n                            v \\<circ> simple ct =\n                            F_sup (v \\<circ> simple ct)", "ultimately"], ["proof (chain)\npicking this:\n  ct s \\<in> K s\n  v (simple ct s)\n  \\<le> \\<integral>\\<^sup>+ s. v (simple ct s) \\<partial>measure_pmf (ct s)\n  v (simple ct s)\n  < (\\<Squnion>D\\<in>K s.\n        \\<integral>\\<^sup>+ s. v (simple ct s)\n                           \\<partial>measure_pmf D) \\<Longrightarrow>\n  False", "have \"?v s = (\\<Squnion>D\\<in>K s. \\<integral>\\<^sup>+ s. ?v s \\<partial>measure_pmf D)\""], ["proof (prove)\nusing this:\n  ct s \\<in> K s\n  v (simple ct s)\n  \\<le> \\<integral>\\<^sup>+ s. v (simple ct s) \\<partial>measure_pmf (ct s)\n  v (simple ct s)\n  < (\\<Squnion>D\\<in>K s.\n        \\<integral>\\<^sup>+ s. v (simple ct s)\n                           \\<partial>measure_pmf D) \\<Longrightarrow>\n  False\n\ngoal (1 subgoal):\n 1. v (simple ct s) =\n    (\\<Squnion>D\\<in>K s.\n        \\<integral>\\<^sup>+ s. v (simple ct s) \\<partial>measure_pmf D)", "by (auto intro: antisym SUP_upper2[where i=\"ct s\"] leI)"], ["proof (state)\nthis:\n  v (simple ct s) =\n  (\\<Squnion>D\\<in>K s.\n      \\<integral>\\<^sup>+ s. v (simple ct s) \\<partial>measure_pmf D)\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<lbrakk>z \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct};\n        \\<And>y.\n           (y, z) \\<in> R \\<Longrightarrow>\n           y \\<notin> {ct \\<in> Pi\\<^sub>E S K. proper ct}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ct.\n                            ct \\<in> Pi\\<^sub>E S K \\<and>\n                            v \\<circ> simple ct =\n                            F_sup (v \\<circ> simple ct)", "also"], ["proof (state)\nthis:\n  v (simple ct s) =\n  (\\<Squnion>D\\<in>K s.\n      \\<integral>\\<^sup>+ s. v (simple ct s) \\<partial>measure_pmf D)\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<lbrakk>z \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct};\n        \\<And>y.\n           (y, z) \\<in> R \\<Longrightarrow>\n           y \\<notin> {ct \\<in> Pi\\<^sub>E S K. proper ct}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ct.\n                            ct \\<in> Pi\\<^sub>E S K \\<and>\n                            v \\<circ> simple ct =\n                            F_sup (v \\<circ> simple ct)", "have \"\\<dots> = (\\<Squnion>D\\<in>K s. integral\\<^sup>N (measure_pmf D) (\\<lambda>s\\<in>S. ?v s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Squnion>D\\<in>K s.\n        \\<integral>\\<^sup>+ s. v (simple ct s) \\<partial>measure_pmf D) =\n    (\\<Squnion>D\\<in>K s.\n        integral\\<^sup>N (measure_pmf D)\n         (\\<lambda>s\\<in>S. v (simple ct s)))", "using \\<open>s\\<in>S\\<close>"], ["proof (prove)\nusing this:\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. (\\<Squnion>D\\<in>K s.\n        \\<integral>\\<^sup>+ s. v (simple ct s) \\<partial>measure_pmf D) =\n    (\\<Squnion>D\\<in>K s.\n        integral\\<^sup>N (measure_pmf D)\n         (\\<lambda>s\\<in>S. v (simple ct s)))", "by (auto intro!: SUP_cong nn_integral_cong v_nS simp: ct simple_valid_cfg_iff \\<open>ct \\<in> Pi S K\\<close>)"], ["proof (state)\nthis:\n  (\\<Squnion>D\\<in>K s.\n      \\<integral>\\<^sup>+ s. v (simple ct s) \\<partial>measure_pmf D) =\n  (\\<Squnion>D\\<in>K s.\n      integral\\<^sup>N (measure_pmf D) (\\<lambda>s\\<in>S. v (simple ct s)))\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<lbrakk>z \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct};\n        \\<And>y.\n           (y, z) \\<in> R \\<Longrightarrow>\n           y \\<notin> {ct \\<in> Pi\\<^sub>E S K. proper ct}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ct.\n                            ct \\<in> Pi\\<^sub>E S K \\<and>\n                            v \\<circ> simple ct =\n                            F_sup (v \\<circ> simple ct)", "finally"], ["proof (chain)\npicking this:\n  v (simple ct s) =\n  (\\<Squnion>D\\<in>K s.\n      integral\\<^sup>N (measure_pmf D) (\\<lambda>s\\<in>S. v (simple ct s)))", "have \"?v s = (\\<Squnion>D\\<in>K s. integral\\<^sup>N (measure_pmf D) (\\<lambda>s\\<in>S. ?v s))\""], ["proof (prove)\nusing this:\n  v (simple ct s) =\n  (\\<Squnion>D\\<in>K s.\n      integral\\<^sup>N (measure_pmf D) (\\<lambda>s\\<in>S. v (simple ct s)))\n\ngoal (1 subgoal):\n 1. v (simple ct s) =\n    (\\<Squnion>D\\<in>K s.\n        integral\\<^sup>N (measure_pmf D)\n         (\\<lambda>s\\<in>S. v (simple ct s)))", "."], ["proof (state)\nthis:\n  v (simple ct s) =\n  (\\<Squnion>D\\<in>K s.\n      integral\\<^sup>N (measure_pmf D) (\\<lambda>s\\<in>S. v (simple ct s)))\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<lbrakk>z \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct};\n        \\<And>y.\n           (y, z) \\<in> R \\<Longrightarrow>\n           y \\<notin> {ct \\<in> Pi\\<^sub>E S K. proper ct}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ct.\n                            ct \\<in> Pi\\<^sub>E S K \\<and>\n                            v \\<circ> simple ct =\n                            F_sup (v \\<circ> simple ct)", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?s3 \\<in> S; ?s3 \\<in> S1; ?s3 \\<notin> S2\\<rbrakk>\n  \\<Longrightarrow> v (simple ct ?s3) =\n                    (\\<Squnion>D\\<in>K ?s3.\n                        integral\\<^sup>N (measure_pmf D)\n                         (\\<lambda>s\\<in>S. v (simple ct s)))\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<lbrakk>z \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct};\n        \\<And>y.\n           (y, z) \\<in> R \\<Longrightarrow>\n           y \\<notin> {ct \\<in> Pi\\<^sub>E S K. proper ct}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ct.\n                            ct \\<in> Pi\\<^sub>E S K \\<and>\n                            v \\<circ> simple ct =\n                            F_sup (v \\<circ> simple ct)", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?s3 \\<in> S; ?s3 \\<in> S1; ?s3 \\<notin> S2\\<rbrakk>\n  \\<Longrightarrow> v (simple ct ?s3) =\n                    (\\<Squnion>D\\<in>K ?s3.\n                        integral\\<^sup>N (measure_pmf D)\n                         (\\<lambda>s\\<in>S. v (simple ct s)))", "have \"?v = F_sup ?v\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?s3 \\<in> S; ?s3 \\<in> S1; ?s3 \\<notin> S2\\<rbrakk>\n  \\<Longrightarrow> v (simple ct ?s3) =\n                    (\\<Squnion>D\\<in>K ?s3.\n                        integral\\<^sup>N (measure_pmf D)\n                         (\\<lambda>s\\<in>S. v (simple ct s)))\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. v (simple ct s)) = F_sup (\\<lambda>s. v (simple ct s))", "unfolding F_sup_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?s3 \\<in> S; ?s3 \\<in> S1; ?s3 \\<notin> S2\\<rbrakk>\n  \\<Longrightarrow> v (simple ct ?s3) =\n                    (\\<Squnion>D\\<in>K ?s3.\n                        integral\\<^sup>N (measure_pmf D)\n                         (\\<lambda>s\\<in>S. v (simple ct s)))\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. v (simple ct s)) =\n    (\\<lambda>s\\<in>S.\n        if s \\<in> S2 then 1\n        else if s \\<in> S1\n             then \\<Squnion>D\\<in>K s.\n                     \\<integral>\\<^sup>+ s. v (simple ct s)\n  \\<partial>measure_pmf D\n             else 0)", "using ct"], ["proof (prove)\nusing this:\n  \\<lbrakk>?s3 \\<in> S; ?s3 \\<in> S1; ?s3 \\<notin> S2\\<rbrakk>\n  \\<Longrightarrow> v (simple ct ?s3) =\n                    (\\<Squnion>D\\<in>K ?s3.\n                        integral\\<^sup>N (measure_pmf D)\n                         (\\<lambda>s\\<in>S. v (simple ct s)))\n  ct \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct}\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. v (simple ct s)) =\n    (\\<lambda>s\\<in>S.\n        if s \\<in> S2 then 1\n        else if s \\<in> S1\n             then \\<Squnion>D\\<in>K s.\n                     \\<integral>\\<^sup>+ s. v (simple ct s)\n  \\<partial>measure_pmf D\n             else 0)", "by (auto intro!: ext v_S2 simple_cfg_on v_nS v_nS12 SUP_cong nn_integral_cong\n               simp: PiE_def simple_valid_cfg_iff)"], ["proof (state)\nthis:\n  (\\<lambda>s. v (simple ct s)) = F_sup (\\<lambda>s. v (simple ct s))\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<lbrakk>z \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct};\n        \\<And>y.\n           (y, z) \\<in> R \\<Longrightarrow>\n           y \\<notin> {ct \\<in> Pi\\<^sub>E S K. proper ct}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>ct.\n                            ct \\<in> Pi\\<^sub>E S K \\<and>\n                            v \\<circ> simple ct =\n                            F_sup (v \\<circ> simple ct)", "with ct"], ["proof (chain)\npicking this:\n  ct \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct}\n  (\\<lambda>s. v (simple ct s)) = F_sup (\\<lambda>s. v (simple ct s))", "show ?thesis"], ["proof (prove)\nusing this:\n  ct \\<in> {ct \\<in> Pi\\<^sub>E S K. proper ct}\n  (\\<lambda>s. v (simple ct s)) = F_sup (\\<lambda>s. v (simple ct s))\n\ngoal (1 subgoal):\n 1. \\<exists>ct.\n       ct \\<in> Pi\\<^sub>E S K \\<and>\n       v \\<circ> simple ct = F_sup (v \\<circ> simple ct)", "by (auto simp: comp_def)"], ["proof (state)\nthis:\n  \\<exists>ct.\n     ct \\<in> Pi\\<^sub>E S K \\<and>\n     v \\<circ> simple ct = F_sup (v \\<circ> simple ct)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>ct.\n     ct \\<in> Pi\\<^sub>E S K \\<and>\n     v \\<circ> simple ct = F_sup (v \\<circ> simple ct)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma p_v_memoryless:\n  obtains ct where \"ct \\<in> Pi\\<^sub>E S K\" \"p = v\\<circ>simple ct\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>ct.\n        \\<lbrakk>ct \\<in> Pi\\<^sub>E S K; p = v \\<circ> simple ct\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>ct.\n        \\<lbrakk>ct \\<in> Pi\\<^sub>E S K; p = v \\<circ> simple ct\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain ct where ct_PiE: \"ct \\<in> Pi\\<^sub>E S K\" and eq: \"v\\<circ>simple ct = F_sup (v\\<circ>simple ct)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>ct.\n        \\<lbrakk>ct \\<in> Pi\\<^sub>E S K;\n         v \\<circ> simple ct = F_sup (v \\<circ> simple ct)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (rule F_v_memoryless)"], ["proof (state)\nthis:\n  ct \\<in> Pi\\<^sub>E S K\n  v \\<circ> simple ct = F_sup (v \\<circ> simple ct)\n\ngoal (1 subgoal):\n 1. (\\<And>ct.\n        \\<lbrakk>ct \\<in> Pi\\<^sub>E S K; p = v \\<circ> simple ct\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  ct \\<in> Pi\\<^sub>E S K\n  v \\<circ> simple ct = F_sup (v \\<circ> simple ct)", "have ct: \"ct \\<in> Pi S K\""], ["proof (prove)\nusing this:\n  ct \\<in> Pi\\<^sub>E S K\n  v \\<circ> simple ct = F_sup (v \\<circ> simple ct)\n\ngoal (1 subgoal):\n 1. ct \\<in> Pi S K", "by (simp add: PiE_def)"], ["proof (state)\nthis:\n  ct \\<in> Pi S K\n\ngoal (1 subgoal):\n 1. (\\<And>ct.\n        \\<lbrakk>ct \\<in> Pi\\<^sub>E S K; p = v \\<circ> simple ct\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"p = v\\<circ>simple ct\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p = v \\<circ> simple ct", "proof (rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. p \\<le> v \\<circ> simple ct\n 2. v \\<circ> simple ct \\<le> p", "show \"p \\<le> v\\<circ>simple ct\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<le> v \\<circ> simple ct", "unfolding p_eq_lfp_F_sup"], ["proof (prove)\ngoal (1 subgoal):\n 1. lfp F_sup \\<le> v \\<circ> simple ct", "by (rule lfp_lowerbound) (metis order_refl eq)"], ["proof (state)\nthis:\n  p \\<le> v \\<circ> simple ct\n\ngoal (1 subgoal):\n 1. v \\<circ> simple ct \\<le> p", "show \"v\\<circ>simple ct \\<le> p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v \\<circ> simple ct \\<le> p", "proof (rule le_funI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. (v \\<circ> simple ct) x \\<le> p x", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. (v \\<circ> simple ct) x \\<le> p x", "show \"(v\\<circ>simple ct) s \\<le> p s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (v \\<circ> simple ct) s \\<le> p s", "using v_le_p[of \"simple ct s\"]"], ["proof (prove)\nusing this:\n  simple ct s \\<in> valid_cfg \\<Longrightarrow>\n  v (simple ct s) \\<le> p (state (simple ct s))\n\ngoal (1 subgoal):\n 1. (v \\<circ> simple ct) s \\<le> p s", "by (cases \"s \\<in> S\") (auto simp del: simp add: v_def ct)"], ["proof (state)\nthis:\n  (v \\<circ> simple ct) s \\<le> p s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  v \\<circ> simple ct \\<le> p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p = v \\<circ> simple ct\n\ngoal (1 subgoal):\n 1. (\\<And>ct.\n        \\<lbrakk>ct \\<in> Pi\\<^sub>E S K; p = v \\<circ> simple ct\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with ct_PiE that"], ["proof (chain)\npicking this:\n  ct \\<in> Pi\\<^sub>E S K\n  \\<lbrakk>?ct1 \\<in> Pi\\<^sub>E S K; p = v \\<circ> simple ?ct1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  p = v \\<circ> simple ct", "show thesis"], ["proof (prove)\nusing this:\n  ct \\<in> Pi\\<^sub>E S K\n  \\<lbrakk>?ct1 \\<in> Pi\\<^sub>E S K; p = v \\<circ> simple ?ct1\\<rbrakk>\n  \\<Longrightarrow> thesis\n  p = v \\<circ> simple ct\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "definition \"n = (\\<lambda>s\\<in>S. P_inf s (\\<lambda>\\<omega>. (HLD S1 suntil HLD S2) (s ## \\<omega>)))\""], ["", "lemma n_eq_INF_v: \"s \\<in> S \\<Longrightarrow> n s = (\\<Sqinter>cfg\\<in>cfg_on s. v cfg)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> S \\<Longrightarrow> n s = \\<Sqinter> (v ` cfg_on s)", "by (auto simp add: n_def v_def P_inf_def T.emeasure_eq_measure valid_cfgI intro!: INF_cong)"], ["", "lemma n_le_v: \"s \\<in> S \\<Longrightarrow> cfg \\<in> cfg_on s \\<Longrightarrow> n s \\<le> v cfg\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<in> S; cfg \\<in> cfg_on s\\<rbrakk>\n    \\<Longrightarrow> n s \\<le> v cfg", "by (subst n_eq_INF_v) (blast intro!: INF_lower)+"], ["", "lemma n_eq_1_imp: \"s \\<in> S \\<Longrightarrow> cfg \\<in> cfg_on s \\<Longrightarrow> n s = 1 \\<Longrightarrow> v cfg = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<in> S; cfg \\<in> cfg_on s; n s = 1\\<rbrakk>\n    \\<Longrightarrow> v cfg = 1", "using n_le_v[of s cfg] v_le_1[of cfg]"], ["proof (prove)\nusing this:\n  \\<lbrakk>s \\<in> S; cfg \\<in> cfg_on s\\<rbrakk>\n  \\<Longrightarrow> n s \\<le> v cfg\n  cfg \\<in> valid_cfg \\<Longrightarrow> v cfg \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<in> S; cfg \\<in> cfg_on s; n s = 1\\<rbrakk>\n    \\<Longrightarrow> v cfg = 1", "by (auto intro: antisym valid_cfgI)"], ["", "lemma n_eq_1_iff: \"s \\<in> S \\<Longrightarrow> n s = 1 \\<longleftrightarrow> (\\<forall>cfg\\<in>cfg_on s. v cfg = 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> S \\<Longrightarrow>\n    (n s = 1) = (\\<forall>cfg\\<in>cfg_on s. v cfg = 1)", "apply rule"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>s \\<in> S; n s = 1\\<rbrakk>\n    \\<Longrightarrow> \\<forall>cfg\\<in>cfg_on s. v cfg = 1\n 2. \\<lbrakk>s \\<in> S; \\<forall>cfg\\<in>cfg_on s. v cfg = 1\\<rbrakk>\n    \\<Longrightarrow> n s = 1", "apply (metis n_eq_1_imp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<in> S; \\<forall>cfg\\<in>cfg_on s. v cfg = 1\\<rbrakk>\n    \\<Longrightarrow> n s = 1", "apply (auto simp: n_eq_INF_v intro!: INF_eqI)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma n_le_1: \"s \\<in> S \\<Longrightarrow> n s \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> S \\<Longrightarrow> n s \\<le> 1", "by (auto simp: n_eq_INF_v intro!: INF_lower2[OF simple_cfg_on[of arb_act]] v_le_1)"], ["", "lemma n_undefined[simp]: \"s \\<notin> S \\<Longrightarrow> n s = undefined\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<notin> S \\<Longrightarrow> n s = undefined", "by (simp add: n_def)"], ["", "lemma n_eq_0: \"s \\<in> S \\<Longrightarrow> cfg \\<in> cfg_on s \\<Longrightarrow> v cfg = 0 \\<Longrightarrow> n s = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<in> S; cfg \\<in> cfg_on s; v cfg = 0\\<rbrakk>\n    \\<Longrightarrow> n s = 0", "using n_le_v[of s cfg]"], ["proof (prove)\nusing this:\n  \\<lbrakk>s \\<in> S; cfg \\<in> cfg_on s\\<rbrakk>\n  \\<Longrightarrow> n s \\<le> v cfg\n\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<in> S; cfg \\<in> cfg_on s; v cfg = 0\\<rbrakk>\n    \\<Longrightarrow> n s = 0", "by auto"], ["", "lemma n_not_inf[simp]: \"s \\<in> S \\<Longrightarrow> n s \\<noteq> top\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> S \\<Longrightarrow> n s \\<noteq> \\<top>", "using n_le_1[of s]"], ["proof (prove)\nusing this:\n  s \\<in> S \\<Longrightarrow> n s \\<le> 1\n\ngoal (1 subgoal):\n 1. s \\<in> S \\<Longrightarrow> n s \\<noteq> \\<top>", "by (auto simp: top_unique)"], ["", "lemma n_S1: \"s \\<in> S1 \\<Longrightarrow> n s = (\\<Sqinter>D\\<in>K s. \\<integral>\\<^sup>+ t. n t \\<partial>measure_pmf D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> S1 \\<Longrightarrow>\n    n s = (\\<Sqinter>D\\<in>K s. integral\\<^sup>N (measure_pmf D) n)", "using S1 S1_S2"], ["proof (prove)\nusing this:\n  S1 \\<subseteq> S\n  S1 \\<inter> S2 = {}\n\ngoal (1 subgoal):\n 1. s \\<in> S1 \\<Longrightarrow>\n    n s = (\\<Sqinter>D\\<in>K s. integral\\<^sup>N (measure_pmf D) n)", "unfolding n_def"], ["proof (prove)\nusing this:\n  S1 \\<subseteq> S\n  S1 \\<inter> S2 = {}\n\ngoal (1 subgoal):\n 1. s \\<in> S1 \\<Longrightarrow>\n    (\\<lambda>s\\<in>S.\n        P_inf s (\\<lambda>\\<omega>. (HLD S1 suntil HLD S2) (s ## \\<omega>)))\n     s =\n    (\\<Sqinter>D\\<in>K s.\n        integral\\<^sup>N (measure_pmf D)\n         (\\<lambda>s\\<in>S.\n             P_inf s\n              (\\<lambda>\\<omega>. (HLD S1 suntil HLD S2) (s ## \\<omega>))))", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<in> S1; S1 \\<subseteq> S; S1 \\<inter> S2 = {};\n     s \\<in> S\\<rbrakk>\n    \\<Longrightarrow> P_inf s\n                       (\\<lambda>\\<omega>.\n                           (HLD S1 suntil HLD S2) (s ## \\<omega>)) =\n                      (\\<Sqinter>x\\<in>K s.\n                          \\<integral>\\<^sup>+ t.\n         (if t \\<in> S\n          then P_inf t\n                (\\<lambda>\\<omega>. (HLD S1 suntil HLD S2) (t ## \\<omega>))\n          else undefined)\n       \\<partial>measure_pmf x)", "apply (subst P_inf_iterate)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>s \\<in> S1; S1 \\<subseteq> S; S1 \\<inter> S2 = {};\n     s \\<in> S\\<rbrakk>\n    \\<Longrightarrow> Measurable.pred St\n                       (\\<lambda>\\<omega>.\n                           (HLD S1 suntil HLD S2) (s ## \\<omega>))\n 2. \\<lbrakk>s \\<in> S1; S1 \\<subseteq> S; S1 \\<inter> S2 = {};\n     s \\<in> S\\<rbrakk>\n    \\<Longrightarrow> (\\<Sqinter>D\\<in>K s.\n                          \\<integral>\\<^sup>+ t.\n         P_inf t\n          (\\<lambda>\\<omega>. (HLD S1 suntil HLD S2) (s ## t ## \\<omega>))\n       \\<partial>measure_pmf D) =\n                      (\\<Sqinter>x\\<in>K s.\n                          \\<integral>\\<^sup>+ t.\n         (if t \\<in> S\n          then P_inf t\n                (\\<lambda>\\<omega>. (HLD S1 suntil HLD S2) (t ## \\<omega>))\n          else undefined)\n       \\<partial>measure_pmf x)", "apply (auto intro!: nn_integral_cong_AE INF_cong intro: set_pmf_closed\n              simp: AE_measure_pmf_iff suntil_Stream set_eq_iff)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma n_S2[simp]: \"s \\<in> S2 \\<Longrightarrow> n s = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> S2 \\<Longrightarrow> n s = 1", "using S2"], ["proof (prove)\nusing this:\n  S2 \\<subseteq> S\n\ngoal (1 subgoal):\n 1. s \\<in> S2 \\<Longrightarrow> n s = 1", "by (auto simp add: n_eq_INF_v valid_cfgI)"], ["", "lemma n_nS12: \"s \\<in> S \\<Longrightarrow> s \\<notin> S1 \\<Longrightarrow> s \\<notin> S2 \\<Longrightarrow> n s = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<in> S; s \\<notin> S1; s \\<notin> S2\\<rbrakk>\n    \\<Longrightarrow> n s = 0", "by (auto simp add: n_eq_INF_v valid_cfgI)"], ["", "lemma n_pos:\n  assumes \"P s\" \"s \\<in> S1\" \"wf R\"\n  assumes cont: \"\\<And>s D. P s \\<Longrightarrow> s \\<in> S1 \\<Longrightarrow> D \\<in> K s \\<Longrightarrow> \\<exists>w\\<in>D. ((w, s) \\<in> R \\<and> w \\<in> S1 \\<and> P w) \\<or> 0 < n w\"\n  shows \"0 < n s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < n s", "using \\<open>wf R\\<close> \\<open>P s\\<close> \\<open>s\\<in>S1\\<close>"], ["proof (prove)\nusing this:\n  wf R\n  P s\n  s \\<in> S1\n\ngoal (1 subgoal):\n 1. 0 < n s", "proof (induction s)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>(y, x) \\<in> R; P y; y \\<in> S1\\<rbrakk>\n                   \\<Longrightarrow> 0 < n y;\n        P x; x \\<in> S1\\<rbrakk>\n       \\<Longrightarrow> 0 < n x", "case (less s)"], ["proof (state)\nthis:\n  \\<lbrakk>(?y1, s) \\<in> R; P ?y1; ?y1 \\<in> S1\\<rbrakk>\n  \\<Longrightarrow> 0 < n ?y1\n  P s\n  s \\<in> S1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>(y, x) \\<in> R; P y; y \\<in> S1\\<rbrakk>\n                   \\<Longrightarrow> 0 < n y;\n        P x; x \\<in> S1\\<rbrakk>\n       \\<Longrightarrow> 0 < n x", "with S1"], ["proof (chain)\npicking this:\n  S1 \\<subseteq> S\n  \\<lbrakk>(?y1, s) \\<in> R; P ?y1; ?y1 \\<in> S1\\<rbrakk>\n  \\<Longrightarrow> 0 < n ?y1\n  P s\n  s \\<in> S1", "have [simp]: \"s \\<in> S\""], ["proof (prove)\nusing this:\n  S1 \\<subseteq> S\n  \\<lbrakk>(?y1, s) \\<in> R; P ?y1; ?y1 \\<in> S1\\<rbrakk>\n  \\<Longrightarrow> 0 < n ?y1\n  P s\n  s \\<in> S1\n\ngoal (1 subgoal):\n 1. s \\<in> S", "by auto"], ["proof (state)\nthis:\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>(y, x) \\<in> R; P y; y \\<in> S1\\<rbrakk>\n                   \\<Longrightarrow> 0 < n y;\n        P x; x \\<in> S1\\<rbrakk>\n       \\<Longrightarrow> 0 < n x", "let ?I = \"\\<lambda>D::'s pmf. \\<integral>\\<^sup>+t. n t \\<partial>D\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>(y, x) \\<in> R; P y; y \\<in> S1\\<rbrakk>\n                   \\<Longrightarrow> 0 < n y;\n        P x; x \\<in> S1\\<rbrakk>\n       \\<Longrightarrow> 0 < n x", "have \"0 < Min (?I`K s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < (MIN x\\<in>K s. integral\\<^sup>N (measure_pmf x) n)", "proof (safe intro!: Min_gr_iff [THEN iffD2])"], ["proof (state)\ngoal (3 subgoals):\n 1. finite ((\\<lambda>x. integral\\<^sup>N (measure_pmf x) n) ` K s)\n 2. K s = {} \\<Longrightarrow> False\n 3. \\<And>a x.\n       x \\<in> K s \\<Longrightarrow> 0 < integral\\<^sup>N (measure_pmf x) n", "fix D"], ["proof (state)\ngoal (3 subgoals):\n 1. finite ((\\<lambda>x. integral\\<^sup>N (measure_pmf x) n) ` K s)\n 2. K s = {} \\<Longrightarrow> False\n 3. \\<And>a x.\n       x \\<in> K s \\<Longrightarrow> 0 < integral\\<^sup>N (measure_pmf x) n", "assume [simp]: \"D \\<in> K s\""], ["proof (state)\nthis:\n  D \\<in> K s\n\ngoal (3 subgoals):\n 1. finite ((\\<lambda>x. integral\\<^sup>N (measure_pmf x) n) ` K s)\n 2. K s = {} \\<Longrightarrow> False\n 3. \\<And>a x.\n       x \\<in> K s \\<Longrightarrow> 0 < integral\\<^sup>N (measure_pmf x) n", "from cont[OF \\<open>P s\\<close> \\<open>s \\<in> S1\\<close> \\<open>D \\<in> K s\\<close>]"], ["proof (chain)\npicking this:\n  \\<exists>w\\<in>set_pmf D.\n     (w, s) \\<in> R \\<and> w \\<in> S1 \\<and> P w \\<or> 0 < n w", "obtain w where w: \"w \\<in> D\" \"0 < n w\""], ["proof (prove)\nusing this:\n  \\<exists>w\\<in>set_pmf D.\n     (w, s) \\<in> R \\<and> w \\<in> S1 \\<and> P w \\<or> 0 < n w\n\ngoal (1 subgoal):\n 1. (\\<And>w.\n        \\<lbrakk>w \\<in> set_pmf D; 0 < n w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (force intro: less.IH)"], ["proof (state)\nthis:\n  w \\<in> set_pmf D\n  0 < n w\n\ngoal (3 subgoals):\n 1. finite ((\\<lambda>x. integral\\<^sup>N (measure_pmf x) n) ` K s)\n 2. K s = {} \\<Longrightarrow> False\n 3. \\<And>a x.\n       x \\<in> K s \\<Longrightarrow> 0 < integral\\<^sup>N (measure_pmf x) n", "have in_S: \"\\<And>t. t \\<in> D \\<Longrightarrow> t \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t. t \\<in> set_pmf D \\<Longrightarrow> t \\<in> S", "using set_pmf_closed[OF \\<open>s \\<in> S\\<close> \\<open>D \\<in> K s\\<close>]"], ["proof (prove)\nusing this:\n  ?t \\<in> set_pmf D \\<Longrightarrow> ?t \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>t. t \\<in> set_pmf D \\<Longrightarrow> t \\<in> S", "by auto"], ["proof (state)\nthis:\n  ?t1 \\<in> set_pmf D \\<Longrightarrow> ?t1 \\<in> S\n\ngoal (3 subgoals):\n 1. finite ((\\<lambda>x. integral\\<^sup>N (measure_pmf x) n) ` K s)\n 2. K s = {} \\<Longrightarrow> False\n 3. \\<And>a x.\n       x \\<in> K s \\<Longrightarrow> 0 < integral\\<^sup>N (measure_pmf x) n", "from w"], ["proof (chain)\npicking this:\n  w \\<in> set_pmf D\n  0 < n w", "have \"0 < pmf D w * n w\""], ["proof (prove)\nusing this:\n  w \\<in> set_pmf D\n  0 < n w\n\ngoal (1 subgoal):\n 1. 0 < ennreal (pmf D w) * n w", "by (simp add: pmf_positive ennreal_zero_less_mult_iff)"], ["proof (state)\nthis:\n  0 < ennreal (pmf D w) * n w\n\ngoal (3 subgoals):\n 1. finite ((\\<lambda>x. integral\\<^sup>N (measure_pmf x) n) ` K s)\n 2. K s = {} \\<Longrightarrow> False\n 3. \\<And>a x.\n       x \\<in> K s \\<Longrightarrow> 0 < integral\\<^sup>N (measure_pmf x) n", "also"], ["proof (state)\nthis:\n  0 < ennreal (pmf D w) * n w\n\ngoal (3 subgoals):\n 1. finite ((\\<lambda>x. integral\\<^sup>N (measure_pmf x) n) ` K s)\n 2. K s = {} \\<Longrightarrow> False\n 3. \\<And>a x.\n       x \\<in> K s \\<Longrightarrow> 0 < integral\\<^sup>N (measure_pmf x) n", "have \"\\<dots> = (\\<integral>\\<^sup>+t. n w * indicator {w} t \\<partial>D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal (pmf D w) * n w =\n    \\<integral>\\<^sup>+t\\<in>{w}. n w\\<partial>measure_pmf D", "by (subst nn_integral_cmult_indicator)\n         (auto simp: ac_simps emeasure_pmf_single in_S \\<open>w \\<in> D\\<close>)"], ["proof (state)\nthis:\n  ennreal (pmf D w) * n w =\n  \\<integral>\\<^sup>+t\\<in>{w}. n w\\<partial>measure_pmf D\n\ngoal (3 subgoals):\n 1. finite ((\\<lambda>x. integral\\<^sup>N (measure_pmf x) n) ` K s)\n 2. K s = {} \\<Longrightarrow> False\n 3. \\<And>a x.\n       x \\<in> K s \\<Longrightarrow> 0 < integral\\<^sup>N (measure_pmf x) n", "also"], ["proof (state)\nthis:\n  ennreal (pmf D w) * n w =\n  \\<integral>\\<^sup>+t\\<in>{w}. n w\\<partial>measure_pmf D\n\ngoal (3 subgoals):\n 1. finite ((\\<lambda>x. integral\\<^sup>N (measure_pmf x) n) ` K s)\n 2. K s = {} \\<Longrightarrow> False\n 3. \\<And>a x.\n       x \\<in> K s \\<Longrightarrow> 0 < integral\\<^sup>N (measure_pmf x) n", "have \"\\<dots> \\<le> (\\<integral>\\<^sup>+t. n t \\<partial>D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+t\\<in>{w}. n w\\<partial>measure_pmf D\n    \\<le> integral\\<^sup>N (measure_pmf D) n", "by (intro nn_integral_mono_AE) (auto split: split_indicator simp: AE_measure_pmf_iff in_S)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+t\\<in>{w}. n w\\<partial>measure_pmf D\n  \\<le> integral\\<^sup>N (measure_pmf D) n\n\ngoal (3 subgoals):\n 1. finite ((\\<lambda>x. integral\\<^sup>N (measure_pmf x) n) ` K s)\n 2. K s = {} \\<Longrightarrow> False\n 3. \\<And>a x.\n       x \\<in> K s \\<Longrightarrow> 0 < integral\\<^sup>N (measure_pmf x) n", "finally"], ["proof (chain)\npicking this:\n  0 < integral\\<^sup>N (measure_pmf D) n", "show \"0 < (\\<integral>\\<^sup>+t. n t \\<partial>D)\""], ["proof (prove)\nusing this:\n  0 < integral\\<^sup>N (measure_pmf D) n\n\ngoal (1 subgoal):\n 1. 0 < integral\\<^sup>N (measure_pmf D) n", "."], ["proof (state)\nthis:\n  0 < integral\\<^sup>N (measure_pmf D) n\n\ngoal (2 subgoals):\n 1. finite ((\\<lambda>x. integral\\<^sup>N (measure_pmf x) n) ` K s)\n 2. K s = {} \\<Longrightarrow> False", "qed (insert K_wf K_finite \\<open>s\\<in>S\\<close>, auto)"], ["proof (state)\nthis:\n  0 < (MIN x\\<in>K s. integral\\<^sup>N (measure_pmf x) n)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>(y, x) \\<in> R; P y; y \\<in> S1\\<rbrakk>\n                   \\<Longrightarrow> 0 < n y;\n        P x; x \\<in> S1\\<rbrakk>\n       \\<Longrightarrow> 0 < n x", "also"], ["proof (state)\nthis:\n  0 < (MIN x\\<in>K s. integral\\<^sup>N (measure_pmf x) n)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>(y, x) \\<in> R; P y; y \\<in> S1\\<rbrakk>\n                   \\<Longrightarrow> 0 < n y;\n        P x; x \\<in> S1\\<rbrakk>\n       \\<Longrightarrow> 0 < n x", "have \"\\<dots> = n s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (MIN x\\<in>K s. integral\\<^sup>N (measure_pmf x) n) = n s", "unfolding n_S1[OF \\<open>s \\<in> S1\\<close>]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (MIN x\\<in>K s. integral\\<^sup>N (measure_pmf x) n) =\n    (\\<Sqinter>D\\<in>K s. integral\\<^sup>N (measure_pmf D) n)", "using K_wf K_finite \\<open>s\\<in>S\\<close>"], ["proof (prove)\nusing this:\n  K ?s \\<noteq> {}\n  ?s \\<in> S \\<Longrightarrow> finite (K ?s)\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. (MIN x\\<in>K s. integral\\<^sup>N (measure_pmf x) n) =\n    (\\<Sqinter>D\\<in>K s. integral\\<^sup>N (measure_pmf D) n)", "by (intro Min_Inf) auto"], ["proof (state)\nthis:\n  (MIN x\\<in>K s. integral\\<^sup>N (measure_pmf x) n) = n s\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>(y, x) \\<in> R; P y; y \\<in> S1\\<rbrakk>\n                   \\<Longrightarrow> 0 < n y;\n        P x; x \\<in> S1\\<rbrakk>\n       \\<Longrightarrow> 0 < n x", "finally"], ["proof (chain)\npicking this:\n  0 < n s", "show \"0 < n s\""], ["proof (prove)\nusing this:\n  0 < n s\n\ngoal (1 subgoal):\n 1. 0 < n s", "."], ["proof (state)\nthis:\n  0 < n s\n\ngoal:\nNo subgoals!", "qed"], ["", "definition F_inf :: \"('s \\<Rightarrow> ennreal) \\<Rightarrow> ('s \\<Rightarrow> ennreal)\" where\n  \"F_inf f = (\\<lambda>s\\<in>S. if s \\<in> S2 then 1 else if s \\<in> S1 then (\\<Sqinter>D\\<in>K s. \\<integral>\\<^sup>+ t. f t \\<partial>measure_pmf D) else 0)\""], ["", "lemma F_inf_n: \"F_inf n = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F_inf n = n", "by (simp add: F_inf_def n_nS12 n_S1 fun_eq_iff)"], ["", "lemma F_inf_nS[simp]: \"s \\<notin> S \\<Longrightarrow> F_inf f s = undefined\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<notin> S \\<Longrightarrow> F_inf f s = undefined", "by (simp add: F_inf_def)"], ["", "lemma mono_F_inf: \"mono F_inf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mono F_inf", "by (auto intro!: INF_superset_mono nn_integral_mono simp: mono_def F_inf_def le_fun_def)"], ["", "lemma S1_nS2: \"s \\<in> S1 \\<Longrightarrow> s \\<notin> S2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> S1 \\<Longrightarrow> s \\<notin> S2", "using S1_S2"], ["proof (prove)\nusing this:\n  S1 \\<inter> S2 = {}\n\ngoal (1 subgoal):\n 1. s \\<in> S1 \\<Longrightarrow> s \\<notin> S2", "by auto"], ["", "lemma n_eq_lfp_F_inf: \"n = lfp F_inf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n = lfp F_inf", "proof (intro antisym lfp_lowerbound le_funI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. n x \\<le> lfp F_inf x\n 2. \\<And>x. F_inf n x \\<le> n x", "fix s"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. n x \\<le> lfp F_inf x\n 2. \\<And>x. F_inf n x \\<le> n x", "let ?I = \"\\<lambda>D. (\\<integral>\\<^sup>+t. lfp F_inf t \\<partial>measure_pmf D)\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. n x \\<le> lfp F_inf x\n 2. \\<And>x. F_inf n x \\<le> n x", "define ct where \"ct s = (SOME D. D \\<in> K s \\<and> (s \\<in> S1 \\<longrightarrow> lfp F_inf s = ?I D))\" for s"], ["proof (state)\nthis:\n  ct ?s =\n  (SOME D.\n      D \\<in> K ?s \\<and>\n      (?s \\<in> S1 \\<longrightarrow>\n       lfp F_inf ?s = integral\\<^sup>N (measure_pmf D) (lfp F_inf)))\n\ngoal (2 subgoals):\n 1. \\<And>x. n x \\<le> lfp F_inf x\n 2. \\<And>x. F_inf n x \\<le> n x", "{"], ["proof (state)\nthis:\n  ct ?s =\n  (SOME D.\n      D \\<in> K ?s \\<and>\n      (?s \\<in> S1 \\<longrightarrow>\n       lfp F_inf ?s = integral\\<^sup>N (measure_pmf D) (lfp F_inf)))\n\ngoal (2 subgoals):\n 1. \\<And>x. n x \\<le> lfp F_inf x\n 2. \\<And>x. F_inf n x \\<le> n x", "fix s"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. n x \\<le> lfp F_inf x\n 2. \\<And>x. F_inf n x \\<le> n x", "assume s: \"s \\<in> S\""], ["proof (state)\nthis:\n  s \\<in> S\n\ngoal (2 subgoals):\n 1. \\<And>x. n x \\<le> lfp F_inf x\n 2. \\<And>x. F_inf n x \\<le> n x", "then"], ["proof (chain)\npicking this:\n  s \\<in> S", "have \"finite (?I ` K s)\""], ["proof (prove)\nusing this:\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. finite\n     ((\\<lambda>D. integral\\<^sup>N (measure_pmf D) (lfp F_inf)) ` K s)", "by (auto intro: K_finite)"], ["proof (state)\nthis:\n  finite ((\\<lambda>D. integral\\<^sup>N (measure_pmf D) (lfp F_inf)) ` K s)\n\ngoal (2 subgoals):\n 1. \\<And>x. n x \\<le> lfp F_inf x\n 2. \\<And>x. F_inf n x \\<le> n x", "with s"], ["proof (chain)\npicking this:\n  s \\<in> S\n  finite ((\\<lambda>D. integral\\<^sup>N (measure_pmf D) (lfp F_inf)) ` K s)", "obtain D where \"D \\<in> K s\" \"(\\<integral>\\<^sup>+t. lfp F_inf t \\<partial>D) = Min (?I ` K s)\""], ["proof (prove)\nusing this:\n  s \\<in> S\n  finite ((\\<lambda>D. integral\\<^sup>N (measure_pmf D) (lfp F_inf)) ` K s)\n\ngoal (1 subgoal):\n 1. (\\<And>D.\n        \\<lbrakk>D \\<in> K s;\n         integral\\<^sup>N (measure_pmf D) (lfp F_inf) =\n         (MIN D\\<in>K s.\n             integral\\<^sup>N (measure_pmf D) (lfp F_inf))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: K_wf dest!: Min_in)"], ["proof (state)\nthis:\n  D \\<in> K s\n  integral\\<^sup>N (measure_pmf D) (lfp F_inf) =\n  (MIN D\\<in>K s. integral\\<^sup>N (measure_pmf D) (lfp F_inf))\n\ngoal (2 subgoals):\n 1. \\<And>x. n x \\<le> lfp F_inf x\n 2. \\<And>x. F_inf n x \\<le> n x", "note this(2)"], ["proof (state)\nthis:\n  integral\\<^sup>N (measure_pmf D) (lfp F_inf) =\n  (MIN D\\<in>K s. integral\\<^sup>N (measure_pmf D) (lfp F_inf))\n\ngoal (2 subgoals):\n 1. \\<And>x. n x \\<le> lfp F_inf x\n 2. \\<And>x. F_inf n x \\<le> n x", "also"], ["proof (state)\nthis:\n  integral\\<^sup>N (measure_pmf D) (lfp F_inf) =\n  (MIN D\\<in>K s. integral\\<^sup>N (measure_pmf D) (lfp F_inf))\n\ngoal (2 subgoals):\n 1. \\<And>x. n x \\<le> lfp F_inf x\n 2. \\<And>x. F_inf n x \\<le> n x", "have \"\\<dots> = (INF D \\<in> K s. ?I D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (MIN D\\<in>K s. integral\\<^sup>N (measure_pmf D) (lfp F_inf)) =\n    (\\<Sqinter>D\\<in>K s. integral\\<^sup>N (measure_pmf D) (lfp F_inf))", "using s K_wf"], ["proof (prove)\nusing this:\n  s \\<in> S\n  K ?s \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (MIN D\\<in>K s. integral\\<^sup>N (measure_pmf D) (lfp F_inf)) =\n    (\\<Sqinter>D\\<in>K s. integral\\<^sup>N (measure_pmf D) (lfp F_inf))", "by (subst Min_Inf) (auto intro: K_finite)"], ["proof (state)\nthis:\n  (MIN D\\<in>K s. integral\\<^sup>N (measure_pmf D) (lfp F_inf)) =\n  (\\<Sqinter>D\\<in>K s. integral\\<^sup>N (measure_pmf D) (lfp F_inf))\n\ngoal (2 subgoals):\n 1. \\<And>x. n x \\<le> lfp F_inf x\n 2. \\<And>x. F_inf n x \\<le> n x", "also"], ["proof (state)\nthis:\n  (MIN D\\<in>K s. integral\\<^sup>N (measure_pmf D) (lfp F_inf)) =\n  (\\<Sqinter>D\\<in>K s. integral\\<^sup>N (measure_pmf D) (lfp F_inf))\n\ngoal (2 subgoals):\n 1. \\<And>x. n x \\<le> lfp F_inf x\n 2. \\<And>x. F_inf n x \\<le> n x", "have \"s \\<in> S1 \\<Longrightarrow> \\<dots> = lfp F_inf s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> S1 \\<Longrightarrow>\n    (\\<Sqinter>D\\<in>K s. integral\\<^sup>N (measure_pmf D) (lfp F_inf)) =\n    lfp F_inf s", "using s S1_S2"], ["proof (prove)\nusing this:\n  s \\<in> S\n  S1 \\<inter> S2 = {}\n\ngoal (1 subgoal):\n 1. s \\<in> S1 \\<Longrightarrow>\n    (\\<Sqinter>D\\<in>K s. integral\\<^sup>N (measure_pmf D) (lfp F_inf)) =\n    lfp F_inf s", "by (subst (3) lfp_unfold[OF mono_F_inf]) (auto simp add: F_inf_def)"], ["proof (state)\nthis:\n  s \\<in> S1 \\<Longrightarrow>\n  (\\<Sqinter>D\\<in>K s. integral\\<^sup>N (measure_pmf D) (lfp F_inf)) =\n  lfp F_inf s\n\ngoal (2 subgoals):\n 1. \\<And>x. n x \\<le> lfp F_inf x\n 2. \\<And>x. F_inf n x \\<le> n x", "finally"], ["proof (chain)\npicking this:\n  s \\<in> S1 \\<Longrightarrow>\n  integral\\<^sup>N (measure_pmf D) (lfp F_inf) = lfp F_inf s", "have \"\\<exists>D. D \\<in> K s \\<and> (s \\<in> S1 \\<longrightarrow> lfp F_inf s = ?I D)\""], ["proof (prove)\nusing this:\n  s \\<in> S1 \\<Longrightarrow>\n  integral\\<^sup>N (measure_pmf D) (lfp F_inf) = lfp F_inf s\n\ngoal (1 subgoal):\n 1. \\<exists>D.\n       D \\<in> K s \\<and>\n       (s \\<in> S1 \\<longrightarrow>\n        lfp F_inf s = integral\\<^sup>N (measure_pmf D) (lfp F_inf))", "using \\<open>D \\<in> K s\\<close>"], ["proof (prove)\nusing this:\n  s \\<in> S1 \\<Longrightarrow>\n  integral\\<^sup>N (measure_pmf D) (lfp F_inf) = lfp F_inf s\n  D \\<in> K s\n\ngoal (1 subgoal):\n 1. \\<exists>D.\n       D \\<in> K s \\<and>\n       (s \\<in> S1 \\<longrightarrow>\n        lfp F_inf s = integral\\<^sup>N (measure_pmf D) (lfp F_inf))", "by auto"], ["proof (state)\nthis:\n  \\<exists>D.\n     D \\<in> K s \\<and>\n     (s \\<in> S1 \\<longrightarrow>\n      lfp F_inf s = integral\\<^sup>N (measure_pmf D) (lfp F_inf))\n\ngoal (2 subgoals):\n 1. \\<And>x. n x \\<le> lfp F_inf x\n 2. \\<And>x. F_inf n x \\<le> n x", "then"], ["proof (chain)\npicking this:\n  \\<exists>D.\n     D \\<in> K s \\<and>\n     (s \\<in> S1 \\<longrightarrow>\n      lfp F_inf s = integral\\<^sup>N (measure_pmf D) (lfp F_inf))", "have \"ct s \\<in> K s \\<and> (s \\<in> S1 \\<longrightarrow> lfp F_inf s = ?I (ct s))\""], ["proof (prove)\nusing this:\n  \\<exists>D.\n     D \\<in> K s \\<and>\n     (s \\<in> S1 \\<longrightarrow>\n      lfp F_inf s = integral\\<^sup>N (measure_pmf D) (lfp F_inf))\n\ngoal (1 subgoal):\n 1. ct s \\<in> K s \\<and>\n    (s \\<in> S1 \\<longrightarrow>\n     lfp F_inf s = integral\\<^sup>N (measure_pmf (ct s)) (lfp F_inf))", "unfolding ct_def"], ["proof (prove)\nusing this:\n  \\<exists>D.\n     D \\<in> K s \\<and>\n     (s \\<in> S1 \\<longrightarrow>\n      lfp F_inf s = integral\\<^sup>N (measure_pmf D) (lfp F_inf))\n\ngoal (1 subgoal):\n 1. (SOME D.\n        D \\<in> K s \\<and>\n        (s \\<in> S1 \\<longrightarrow>\n         lfp F_inf s = integral\\<^sup>N (measure_pmf D) (lfp F_inf)))\n    \\<in> K s \\<and>\n    (s \\<in> S1 \\<longrightarrow>\n     lfp F_inf s =\n     integral\\<^sup>N\n      (measure_pmf\n        (SOME D.\n            D \\<in> K s \\<and>\n            (s \\<in> S1 \\<longrightarrow>\n             lfp F_inf s = integral\\<^sup>N (measure_pmf D) (lfp F_inf))))\n      (lfp F_inf))", "by (rule someI_ex)"], ["proof (state)\nthis:\n  ct s \\<in> K s \\<and>\n  (s \\<in> S1 \\<longrightarrow>\n   lfp F_inf s = integral\\<^sup>N (measure_pmf (ct s)) (lfp F_inf))\n\ngoal (2 subgoals):\n 1. \\<And>x. n x \\<le> lfp F_inf x\n 2. \\<And>x. F_inf n x \\<le> n x", "then"], ["proof (chain)\npicking this:\n  ct s \\<in> K s \\<and>\n  (s \\<in> S1 \\<longrightarrow>\n   lfp F_inf s = integral\\<^sup>N (measure_pmf (ct s)) (lfp F_inf))", "have \"ct s \\<in> K s\" \"s \\<in> S1 \\<Longrightarrow> lfp F_inf s = ?I (ct s)\""], ["proof (prove)\nusing this:\n  ct s \\<in> K s \\<and>\n  (s \\<in> S1 \\<longrightarrow>\n   lfp F_inf s = integral\\<^sup>N (measure_pmf (ct s)) (lfp F_inf))\n\ngoal (1 subgoal):\n 1. ct s \\<in> K s &&&\n    (s \\<in> S1 \\<Longrightarrow>\n     lfp F_inf s = integral\\<^sup>N (measure_pmf (ct s)) (lfp F_inf))", "by auto"], ["proof (state)\nthis:\n  ct s \\<in> K s\n  s \\<in> S1 \\<Longrightarrow>\n  lfp F_inf s = integral\\<^sup>N (measure_pmf (ct s)) (lfp F_inf)\n\ngoal (2 subgoals):\n 1. \\<And>x. n x \\<le> lfp F_inf x\n 2. \\<And>x. F_inf n x \\<le> n x", "}"], ["proof (state)\nthis:\n  ?sa3 \\<in> S \\<Longrightarrow> ct ?sa3 \\<in> K ?sa3\n  \\<lbrakk>?sa3 \\<in> S; ?sa3 \\<in> S1\\<rbrakk>\n  \\<Longrightarrow> lfp F_inf ?sa3 =\n                    integral\\<^sup>N (measure_pmf (ct ?sa3)) (lfp F_inf)\n\ngoal (2 subgoals):\n 1. \\<And>x. n x \\<le> lfp F_inf x\n 2. \\<And>x. F_inf n x \\<le> n x", "note ct = this"], ["proof (state)\nthis:\n  ?sa3 \\<in> S \\<Longrightarrow> ct ?sa3 \\<in> K ?sa3\n  \\<lbrakk>?sa3 \\<in> S; ?sa3 \\<in> S1\\<rbrakk>\n  \\<Longrightarrow> lfp F_inf ?sa3 =\n                    integral\\<^sup>N (measure_pmf (ct ?sa3)) (lfp F_inf)\n\ngoal (2 subgoals):\n 1. \\<And>x. n x \\<le> lfp F_inf x\n 2. \\<And>x. F_inf n x \\<le> n x", "then"], ["proof (chain)\npicking this:\n  ?sa3 \\<in> S \\<Longrightarrow> ct ?sa3 \\<in> K ?sa3\n  \\<lbrakk>?sa3 \\<in> S; ?sa3 \\<in> S1\\<rbrakk>\n  \\<Longrightarrow> lfp F_inf ?sa3 =\n                    integral\\<^sup>N (measure_pmf (ct ?sa3)) (lfp F_inf)", "have Pi_ct: \"ct \\<in> Pi S K\""], ["proof (prove)\nusing this:\n  ?sa3 \\<in> S \\<Longrightarrow> ct ?sa3 \\<in> K ?sa3\n  \\<lbrakk>?sa3 \\<in> S; ?sa3 \\<in> S1\\<rbrakk>\n  \\<Longrightarrow> lfp F_inf ?sa3 =\n                    integral\\<^sup>N (measure_pmf (ct ?sa3)) (lfp F_inf)\n\ngoal (1 subgoal):\n 1. ct \\<in> Pi S K", "by auto"], ["proof (state)\nthis:\n  ct \\<in> Pi S K\n\ngoal (2 subgoals):\n 1. \\<And>x. n x \\<le> lfp F_inf x\n 2. \\<And>x. F_inf n x \\<le> n x", "then"], ["proof (chain)\npicking this:\n  ct \\<in> Pi S K", "have valid_ct[simp]: \"\\<And>s. s \\<in> S \\<Longrightarrow> simple ct s \\<in> valid_cfg\""], ["proof (prove)\nusing this:\n  ct \\<in> Pi S K\n\ngoal (1 subgoal):\n 1. \\<And>s. s \\<in> S \\<Longrightarrow> simple ct s \\<in> valid_cfg", "by simp"], ["proof (state)\nthis:\n  ?s1 \\<in> S \\<Longrightarrow> simple ct ?s1 \\<in> valid_cfg\n\ngoal (2 subgoals):\n 1. \\<And>x. n x \\<le> lfp F_inf x\n 2. \\<And>x. F_inf n x \\<le> n x", "let ?F = \"\\<lambda>P. HLD S2 or (HLD S1 aand nxt P)\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. n x \\<le> lfp F_inf x\n 2. \\<And>x. F_inf n x \\<le> n x", "define P where \"P s n =\n      emeasure (T (simple ct s)) {x\\<in>space (T (simple ct s)). (?F ^^ n) (\\<lambda>x. False) (s ## x)}\"\n    for s n"], ["proof (state)\nthis:\n  P ?s ?n =\n  emeasure (T (simple ct ?s))\n   {x \\<in> space (T (simple ct ?s)).\n    ((\\<lambda>P xs. HLD S2 xs \\<or> HLD S1 xs \\<and> nxt P xs) ^^ ?n)\n     (\\<lambda>x. False) (?s ## x)}\n\ngoal (2 subgoals):\n 1. \\<And>x. n x \\<le> lfp F_inf x\n 2. \\<And>x. F_inf n x \\<le> n x", "{"], ["proof (state)\nthis:\n  P ?s ?n =\n  emeasure (T (simple ct ?s))\n   {x \\<in> space (T (simple ct ?s)).\n    ((\\<lambda>P xs. HLD S2 xs \\<or> HLD S1 xs \\<and> nxt P xs) ^^ ?n)\n     (\\<lambda>x. False) (?s ## x)}\n\ngoal (2 subgoals):\n 1. \\<And>x. n x \\<le> lfp F_inf x\n 2. \\<And>x. F_inf n x \\<le> n x", "assume \"s \\<in> S\""], ["proof (state)\nthis:\n  s \\<in> S\n\ngoal (2 subgoals):\n 1. \\<And>x. n x \\<le> lfp F_inf x\n 2. \\<And>x. F_inf n x \\<le> n x", "with S1"], ["proof (chain)\npicking this:\n  S1 \\<subseteq> S\n  s \\<in> S", "have [simp, measurable]: \"s \\<in> S\""], ["proof (prove)\nusing this:\n  S1 \\<subseteq> S\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. s \\<in> S", "by auto"], ["proof (state)\nthis:\n  s \\<in> S\n\ngoal (2 subgoals):\n 1. \\<And>x. n x \\<le> lfp F_inf x\n 2. \\<And>x. F_inf n x \\<le> n x", "then"], ["proof (chain)\npicking this:\n  s \\<in> S", "have \"n s \\<le> v (simple ct s)\""], ["proof (prove)\nusing this:\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. n s \\<le> v (simple ct s)", "by (intro n_le_v) (auto intro: simple_cfg_on[OF Pi_ct])"], ["proof (state)\nthis:\n  n s \\<le> v (simple ct s)\n\ngoal (2 subgoals):\n 1. \\<And>x. n x \\<le> lfp F_inf x\n 2. \\<And>x. F_inf n x \\<le> n x", "also"], ["proof (state)\nthis:\n  n s \\<le> v (simple ct s)\n\ngoal (2 subgoals):\n 1. \\<And>x. n x \\<le> lfp F_inf x\n 2. \\<And>x. F_inf n x \\<le> n x", "have \"\\<dots> = emeasure (T (simple ct s)) {x\\<in>space (T (simple ct s)). lfp ?F (s ## x)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v (simple ct s) =\n    emeasure (T (simple ct s))\n     {x \\<in> space (T (simple ct s)).\n      lfp (\\<lambda>P xs. HLD S2 xs \\<or> HLD S1 xs \\<and> nxt P xs)\n       (s ## x)}", "using S1_S2"], ["proof (prove)\nusing this:\n  S1 \\<inter> S2 = {}\n\ngoal (1 subgoal):\n 1. v (simple ct s) =\n    emeasure (T (simple ct s))\n     {x \\<in> space (T (simple ct s)).\n      lfp (\\<lambda>P xs. HLD S2 xs \\<or> HLD S1 xs \\<and> nxt P xs)\n       (s ## x)}", "by (simp add: v_eq[OF simple_valid_cfg[OF Pi_ct \\<open>s\\<in>S\\<close>]])\n         (simp add: suntil_lfp space_T[symmetric, of \"simple ct s\"] del: space_T)"], ["proof (state)\nthis:\n  v (simple ct s) =\n  emeasure (T (simple ct s))\n   {x \\<in> space (T (simple ct s)).\n    lfp (\\<lambda>P xs. HLD S2 xs \\<or> HLD S1 xs \\<and> nxt P xs) (s ## x)}\n\ngoal (2 subgoals):\n 1. \\<And>x. n x \\<le> lfp F_inf x\n 2. \\<And>x. F_inf n x \\<le> n x", "also"], ["proof (state)\nthis:\n  v (simple ct s) =\n  emeasure (T (simple ct s))\n   {x \\<in> space (T (simple ct s)).\n    lfp (\\<lambda>P xs. HLD S2 xs \\<or> HLD S1 xs \\<and> nxt P xs) (s ## x)}\n\ngoal (2 subgoals):\n 1. \\<And>x. n x \\<le> lfp F_inf x\n 2. \\<And>x. F_inf n x \\<le> n x", "have \"\\<dots> = (\\<Squnion>n. P s n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure (T (simple ct s))\n     {x \\<in> space (T (simple ct s)).\n      lfp (\\<lambda>P xs. HLD S2 xs \\<or> HLD S1 xs \\<and> nxt P xs)\n       (s ## x)} =\n    \\<Squnion> range (P s)", "unfolding P_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure (T (simple ct s))\n     {x \\<in> space (T (simple ct s)).\n      lfp (\\<lambda>P xs. HLD S2 xs \\<or> HLD S1 xs \\<and> nxt P xs)\n       (s ## x)} =\n    (\\<Squnion>n.\n        emeasure (T (simple ct s))\n         {x \\<in> space (T (simple ct s)).\n          ((\\<lambda>P xs. HLD S2 xs \\<or> HLD S1 xs \\<and> nxt P xs) ^^ n)\n           (\\<lambda>x. False) (s ## x)})", "apply (rule emeasure_lfp2[where P=\"\\<lambda>M. \\<exists>s. M = T (simple ct s)\" and M=\"T (simple ct s)\"])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<exists>sa. T (simple ct s) = T (simple ct sa)\n 2. sup_continuous\n     (\\<lambda>P xs. HLD S2 xs \\<or> HLD S1 xs \\<and> nxt P xs)\n 3. \\<And>M.\n       \\<exists>s. M = T (simple ct s) \\<Longrightarrow>\n       T.random_variable (simple ct s) M ((##) s)\n 4. \\<And>M A.\n       \\<lbrakk>\\<exists>s. M = T (simple ct s);\n        \\<And>N.\n           \\<exists>s. N = T (simple ct s) \\<Longrightarrow>\n           Measurable.pred N A\\<rbrakk>\n       \\<Longrightarrow> Measurable.pred M\n                          (\\<lambda>xs.\n                              HLD S2 xs \\<or> HLD S1 xs \\<and> nxt A xs)", "apply (intro exI[of _ s] refl)"], ["proof (prove)\ngoal (3 subgoals):\n 1. sup_continuous\n     (\\<lambda>P xs. HLD S2 xs \\<or> HLD S1 xs \\<and> nxt P xs)\n 2. \\<And>M.\n       \\<exists>s. M = T (simple ct s) \\<Longrightarrow>\n       T.random_variable (simple ct s) M ((##) s)\n 3. \\<And>M A.\n       \\<lbrakk>\\<exists>s. M = T (simple ct s);\n        \\<And>N.\n           \\<exists>s. N = T (simple ct s) \\<Longrightarrow>\n           Measurable.pred N A\\<rbrakk>\n       \\<Longrightarrow> Measurable.pred M\n                          (\\<lambda>xs.\n                              HLD S2 xs \\<or> HLD S1 xs \\<and> nxt A xs)", "apply (auto simp: sup_continuous_def) []"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>M.\n       \\<exists>s. M = T (simple ct s) \\<Longrightarrow>\n       T.random_variable (simple ct s) M ((##) s)\n 2. \\<And>M A.\n       \\<lbrakk>\\<exists>s. M = T (simple ct s);\n        \\<And>N.\n           \\<exists>s. N = T (simple ct s) \\<Longrightarrow>\n           Measurable.pred N A\\<rbrakk>\n       \\<Longrightarrow> Measurable.pred M\n                          (\\<lambda>xs.\n                              HLD S2 xs \\<or> HLD S1 xs \\<and> nxt A xs)", "apply auto []"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>M A.\n       \\<lbrakk>\\<exists>s. M = T (simple ct s);\n        \\<And>N.\n           \\<exists>s. N = T (simple ct s) \\<Longrightarrow>\n           Measurable.pred N A\\<rbrakk>\n       \\<Longrightarrow> Measurable.pred M\n                          (\\<lambda>xs.\n                              HLD S2 xs \\<or> HLD S1 xs \\<and> nxt A xs)", "proof safe"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M A s.\n       (\\<And>N.\n           \\<exists>s. N = T (simple ct s) \\<Longrightarrow>\n           Measurable.pred N A) \\<Longrightarrow>\n       T.random_variable (simple ct s) (count_space UNIV)\n        (\\<lambda>xs. HLD S2 xs \\<or> HLD S1 xs \\<and> nxt A xs)", "fix A s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>M A s.\n       (\\<And>N.\n           \\<exists>s. N = T (simple ct s) \\<Longrightarrow>\n           Measurable.pred N A) \\<Longrightarrow>\n       T.random_variable (simple ct s) (count_space UNIV)\n        (\\<lambda>xs. HLD S2 xs \\<or> HLD S1 xs \\<and> nxt A xs)", "assume \"\\<And>N. \\<exists>s. N = T (simple ct s) \\<Longrightarrow> Measurable.pred N A\""], ["proof (state)\nthis:\n  \\<exists>s. ?N1 = T (simple ct s) \\<Longrightarrow> Measurable.pred ?N1 A\n\ngoal (1 subgoal):\n 1. \\<And>M A s.\n       (\\<And>N.\n           \\<exists>s. N = T (simple ct s) \\<Longrightarrow>\n           Measurable.pred N A) \\<Longrightarrow>\n       T.random_variable (simple ct s) (count_space UNIV)\n        (\\<lambda>xs. HLD S2 xs \\<or> HLD S1 xs \\<and> nxt A xs)", "then"], ["proof (chain)\npicking this:\n  \\<exists>s. ?N1 = T (simple ct s) \\<Longrightarrow> Measurable.pred ?N1 A", "have \"\\<And>s. Measurable.pred (T (simple ct s)) A\""], ["proof (prove)\nusing this:\n  \\<exists>s. ?N1 = T (simple ct s) \\<Longrightarrow> Measurable.pred ?N1 A\n\ngoal (1 subgoal):\n 1. \\<And>s. T.random_variable (simple ct s) (count_space UNIV) A", "by metis"], ["proof (state)\nthis:\n  T.random_variable (simple ct ?s1) (count_space UNIV) A\n\ngoal (1 subgoal):\n 1. \\<And>M A s.\n       (\\<And>N.\n           \\<exists>s. N = T (simple ct s) \\<Longrightarrow>\n           Measurable.pred N A) \\<Longrightarrow>\n       T.random_variable (simple ct s) (count_space UNIV)\n        (\\<lambda>xs. HLD S2 xs \\<or> HLD S1 xs \\<and> nxt A xs)", "then"], ["proof (chain)\npicking this:\n  T.random_variable (simple ct ?s1) (count_space UNIV) A", "have \"\\<And>s. Measurable.pred St A\""], ["proof (prove)\nusing this:\n  T.random_variable (simple ct ?s1) (count_space UNIV) A\n\ngoal (1 subgoal):\n 1. \\<And>s. Measurable.pred St A", "by simp"], ["proof (state)\nthis:\n  Measurable.pred St A\n\ngoal (1 subgoal):\n 1. \\<And>M A s.\n       (\\<And>N.\n           \\<exists>s. N = T (simple ct s) \\<Longrightarrow>\n           Measurable.pred N A) \\<Longrightarrow>\n       T.random_variable (simple ct s) (count_space UNIV)\n        (\\<lambda>xs. HLD S2 xs \\<or> HLD S1 xs \\<and> nxt A xs)", "then"], ["proof (chain)\npicking this:\n  Measurable.pred St A", "show \"Measurable.pred (T (simple ct s)) (\\<lambda>xs. HLD S2 xs \\<or> HLD S1 xs \\<and> nxt A xs)\""], ["proof (prove)\nusing this:\n  Measurable.pred St A\n\ngoal (1 subgoal):\n 1. T.random_variable (simple ct s) (count_space UNIV)\n     (\\<lambda>xs. HLD S2 xs \\<or> HLD S1 xs \\<and> nxt A xs)", "by simp"], ["proof (state)\nthis:\n  T.random_variable (simple ct s) (count_space UNIV)\n   (\\<lambda>xs. HLD S2 xs \\<or> HLD S1 xs \\<and> nxt A xs)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  emeasure (T (simple ct s))\n   {x \\<in> space (T (simple ct s)).\n    lfp (\\<lambda>P xs. HLD S2 xs \\<or> HLD S1 xs \\<and> nxt P xs)\n     (s ## x)} =\n  \\<Squnion> range (P s)\n\ngoal (2 subgoals):\n 1. \\<And>x. n x \\<le> lfp F_inf x\n 2. \\<And>x. F_inf n x \\<le> n x", "also"], ["proof (state)\nthis:\n  emeasure (T (simple ct s))\n   {x \\<in> space (T (simple ct s)).\n    lfp (\\<lambda>P xs. HLD S2 xs \\<or> HLD S1 xs \\<and> nxt P xs)\n     (s ## x)} =\n  \\<Squnion> range (P s)\n\ngoal (2 subgoals):\n 1. \\<And>x. n x \\<le> lfp F_inf x\n 2. \\<And>x. F_inf n x \\<le> n x", "have \"\\<dots> \\<le> lfp F_inf s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Squnion> range (P s) \\<le> lfp F_inf s", "proof (intro SUP_least)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. n \\<in> UNIV \\<Longrightarrow> P s n \\<le> lfp F_inf s", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n. n \\<in> UNIV \\<Longrightarrow> P s n \\<le> lfp F_inf s", "from \\<open>s\\<in>S\\<close>"], ["proof (chain)\npicking this:\n  s \\<in> S", "show \"P s n \\<le> lfp F_inf s\""], ["proof (prove)\nusing this:\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. P s n \\<le> lfp F_inf s", "proof (induct n arbitrary: s)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s. s \\<in> S \\<Longrightarrow> P s 0 \\<le> lfp F_inf s\n 2. \\<And>n s.\n       \\<lbrakk>\\<And>s.\n                   s \\<in> S \\<Longrightarrow> P s n \\<le> lfp F_inf s;\n        s \\<in> S\\<rbrakk>\n       \\<Longrightarrow> P s (Suc n) \\<le> lfp F_inf s", "case 0"], ["proof (state)\nthis:\n  s \\<in> S\n\ngoal (2 subgoals):\n 1. \\<And>s. s \\<in> S \\<Longrightarrow> P s 0 \\<le> lfp F_inf s\n 2. \\<And>n s.\n       \\<lbrakk>\\<And>s.\n                   s \\<in> S \\<Longrightarrow> P s n \\<le> lfp F_inf s;\n        s \\<in> S\\<rbrakk>\n       \\<Longrightarrow> P s (Suc n) \\<le> lfp F_inf s", "with S1"], ["proof (chain)\npicking this:\n  S1 \\<subseteq> S\n  s \\<in> S", "show ?case"], ["proof (prove)\nusing this:\n  S1 \\<subseteq> S\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. P s 0 \\<le> lfp F_inf s", "by (subst lfp_unfold[OF mono_F_inf]) (auto simp: P_def)"], ["proof (state)\nthis:\n  P s 0 \\<le> lfp F_inf s\n\ngoal (1 subgoal):\n 1. \\<And>n s.\n       \\<lbrakk>\\<And>s.\n                   s \\<in> S \\<Longrightarrow> P s n \\<le> lfp F_inf s;\n        s \\<in> S\\<rbrakk>\n       \\<Longrightarrow> P s (Suc n) \\<le> lfp F_inf s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n s.\n       \\<lbrakk>\\<And>s.\n                   s \\<in> S \\<Longrightarrow> P s n \\<le> lfp F_inf s;\n        s \\<in> S\\<rbrakk>\n       \\<Longrightarrow> P s (Suc n) \\<le> lfp F_inf s", "case (Suc n)"], ["proof (state)\nthis:\n  ?s1 \\<in> S \\<Longrightarrow> P ?s1 n \\<le> lfp F_inf ?s1\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>n s.\n       \\<lbrakk>\\<And>s.\n                   s \\<in> S \\<Longrightarrow> P s n \\<le> lfp F_inf s;\n        s \\<in> S\\<rbrakk>\n       \\<Longrightarrow> P s (Suc n) \\<le> lfp F_inf s", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. P s (Suc n) \\<le> lfp F_inf s", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> P s (Suc n) \\<le> lfp F_inf s\n 2. \\<not> ?P \\<Longrightarrow> P s (Suc n) \\<le> lfp F_inf s", "assume \"s \\<in> S1\""], ["proof (state)\nthis:\n  s \\<in> S1\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> P s (Suc n) \\<le> lfp F_inf s\n 2. \\<not> ?P \\<Longrightarrow> P s (Suc n) \\<le> lfp F_inf s", "with S1_S2 S1"], ["proof (chain)\npicking this:\n  S1 \\<inter> S2 = {}\n  S1 \\<subseteq> S\n  s \\<in> S1", "have s[simp]: \"s \\<notin> S2\" \"s \\<in> S\" \"s \\<in> S1\""], ["proof (prove)\nusing this:\n  S1 \\<inter> S2 = {}\n  S1 \\<subseteq> S\n  s \\<in> S1\n\ngoal (1 subgoal):\n 1. s \\<notin> S2 &&& s \\<in> S &&& s \\<in> S1", "by auto"], ["proof (state)\nthis:\n  s \\<notin> S2\n  s \\<in> S\n  s \\<in> S1\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> P s (Suc n) \\<le> lfp F_inf s\n 2. \\<not> ?P \\<Longrightarrow> P s (Suc n) \\<le> lfp F_inf s", "have \"P s (Suc n) = (\\<integral>\\<^sup>+t. P t n \\<partial>ct s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P s (Suc n) = \\<integral>\\<^sup>+ t. P t n \\<partial>measure_pmf (ct s)", "unfolding P_def space_T"], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure (T (simple ct s))\n     {x \\<in> space St.\n      ((\\<lambda>P xs. HLD S2 xs \\<or> HLD S1 xs \\<and> nxt P xs) ^^ Suc n)\n       (\\<lambda>x. False) (s ## x)} =\n    \\<integral>\\<^sup>+ t. emeasure (T (simple ct t))\n                            {x \\<in> space St.\n                             ((\\<lambda>P xs.\n                                  HLD S2 xs \\<or>\n                                  HLD S1 xs \\<and> nxt P xs) ^^\n                              n)\n                              (\\<lambda>x. False) (t ## x)}\n                       \\<partial>measure_pmf (ct s)", "apply (subst emeasure_Collect_T)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Measurable.pred St\n     (\\<lambda>x.\n         ((\\<lambda>P xs. HLD S2 xs \\<or> HLD S1 xs \\<and> nxt P xs) ^^\n          Suc n)\n          (\\<lambda>x. False) (s ## x))\n 2. \\<integral>\\<^sup>+ cfg'.\n                         emeasure (T cfg')\n                          {x \\<in> space St.\n                           ((\\<lambda>P xs.\n                                HLD S2 xs \\<or>\n                                HLD S1 xs \\<and> nxt P xs) ^^\n                            Suc n)\n                            (\\<lambda>x. False) (s ## state cfg' ## x)}\n                       \\<partial>measure_pmf (K_cfg (simple ct s)) =\n    \\<integral>\\<^sup>+ t. emeasure (T (simple ct t))\n                            {x \\<in> space St.\n                             ((\\<lambda>P xs.\n                                  HLD S2 xs \\<or>\n                                  HLD S1 xs \\<and> nxt P xs) ^^\n                              n)\n                              (\\<lambda>x. False) (t ## x)}\n                       \\<partial>measure_pmf (ct s)", "apply (rule measurable_compose[OF measurable_Stream[OF measurable_const measurable_ident_sets[OF refl]]])"], ["proof (prove)\ngoal (3 subgoals):\n 1. s \\<in> space (count_space UNIV)\n 2. Measurable.pred St\n     (((\\<lambda>P xs. HLD S2 xs \\<or> HLD S1 xs \\<and> nxt P xs) ^^ Suc n)\n       (\\<lambda>x. False))\n 3. \\<integral>\\<^sup>+ cfg'.\n                         emeasure (T cfg')\n                          {x \\<in> space St.\n                           ((\\<lambda>P xs.\n                                HLD S2 xs \\<or>\n                                HLD S1 xs \\<and> nxt P xs) ^^\n                            Suc n)\n                            (\\<lambda>x. False) (s ## state cfg' ## x)}\n                       \\<partial>measure_pmf (K_cfg (simple ct s)) =\n    \\<integral>\\<^sup>+ t. emeasure (T (simple ct t))\n                            {x \\<in> space St.\n                             ((\\<lambda>P xs.\n                                  HLD S2 xs \\<or>\n                                  HLD S1 xs \\<and> nxt P xs) ^^\n                              n)\n                              (\\<lambda>x. False) (t ## x)}\n                       \\<partial>measure_pmf (ct s)", "apply (measurable, assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ cfg'.\n                         emeasure (T cfg')\n                          {x \\<in> space St.\n                           ((\\<lambda>P xs.\n                                HLD S2 xs \\<or>\n                                HLD S1 xs \\<and> nxt P xs) ^^\n                            Suc n)\n                            (\\<lambda>x. False) (s ## state cfg' ## x)}\n                       \\<partial>measure_pmf (K_cfg (simple ct s)) =\n    \\<integral>\\<^sup>+ t. emeasure (T (simple ct t))\n                            {x \\<in> space St.\n                             ((\\<lambda>P xs.\n                                  HLD S2 xs \\<or>\n                                  HLD S1 xs \\<and> nxt P xs) ^^\n                              n)\n                              (\\<lambda>x. False) (t ## x)}\n                       \\<partial>measure_pmf (ct s)", "apply (auto simp: K_cfg_def map_pmf_rep_eq nn_integral_distr\n                        intro!: nn_integral_cong_AE AE_pmfI)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  P s (Suc n) = \\<integral>\\<^sup>+ t. P t n \\<partial>measure_pmf (ct s)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> P s (Suc n) \\<le> lfp F_inf s\n 2. \\<not> ?P \\<Longrightarrow> P s (Suc n) \\<le> lfp F_inf s", "also"], ["proof (state)\nthis:\n  P s (Suc n) = \\<integral>\\<^sup>+ t. P t n \\<partial>measure_pmf (ct s)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> P s (Suc n) \\<le> lfp F_inf s\n 2. \\<not> ?P \\<Longrightarrow> P s (Suc n) \\<le> lfp F_inf s", "have \"\\<dots> \\<le> (\\<integral>\\<^sup>+t. lfp F_inf t \\<partial>ct s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ t. P t n \\<partial>measure_pmf (ct s)\n    \\<le> integral\\<^sup>N (measure_pmf (ct s)) (lfp F_inf)", "using Pi_closed[OF Pi_ct \\<open>s \\<in> S\\<close>]"], ["proof (prove)\nusing this:\n  ?t \\<in> set_pmf (ct s) \\<Longrightarrow> ?t \\<in> S\n\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ t. P t n \\<partial>measure_pmf (ct s)\n    \\<le> integral\\<^sup>N (measure_pmf (ct s)) (lfp F_inf)", "by (auto intro!: nn_integral_mono_AE Suc simp: AE_measure_pmf_iff)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ t. P t n \\<partial>measure_pmf (ct s)\n  \\<le> integral\\<^sup>N (measure_pmf (ct s)) (lfp F_inf)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> P s (Suc n) \\<le> lfp F_inf s\n 2. \\<not> ?P \\<Longrightarrow> P s (Suc n) \\<le> lfp F_inf s", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ t. P t n \\<partial>measure_pmf (ct s)\n  \\<le> integral\\<^sup>N (measure_pmf (ct s)) (lfp F_inf)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> P s (Suc n) \\<le> lfp F_inf s\n 2. \\<not> ?P \\<Longrightarrow> P s (Suc n) \\<le> lfp F_inf s", "have \"\\<dots> = lfp F_inf s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. integral\\<^sup>N (measure_pmf (ct s)) (lfp F_inf) = lfp F_inf s", "by (intro ct(2)[symmetric]) auto"], ["proof (state)\nthis:\n  integral\\<^sup>N (measure_pmf (ct s)) (lfp F_inf) = lfp F_inf s\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> P s (Suc n) \\<le> lfp F_inf s\n 2. \\<not> ?P \\<Longrightarrow> P s (Suc n) \\<le> lfp F_inf s", "finally"], ["proof (chain)\npicking this:\n  P s (Suc n) \\<le> lfp F_inf s", "show ?thesis"], ["proof (prove)\nusing this:\n  P s (Suc n) \\<le> lfp F_inf s\n\ngoal (1 subgoal):\n 1. P s (Suc n) \\<le> lfp F_inf s", "."], ["proof (state)\nthis:\n  P s (Suc n) \\<le> lfp F_inf s\n\ngoal (1 subgoal):\n 1. s \\<notin> S1 \\<Longrightarrow> P s (Suc n) \\<le> lfp F_inf s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. s \\<notin> S1 \\<Longrightarrow> P s (Suc n) \\<le> lfp F_inf s", "assume \"s \\<notin> S1\""], ["proof (state)\nthis:\n  s \\<notin> S1\n\ngoal (1 subgoal):\n 1. s \\<notin> S1 \\<Longrightarrow> P s (Suc n) \\<le> lfp F_inf s", "with S2 \\<open>s \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  S2 \\<subseteq> S\n  s \\<in> S\n  s \\<notin> S1", "show ?case"], ["proof (prove)\nusing this:\n  S2 \\<subseteq> S\n  s \\<in> S\n  s \\<notin> S1\n\ngoal (1 subgoal):\n 1. P s (Suc n) \\<le> lfp F_inf s", "using T.emeasure_space_1[of \"simple ct s\"]"], ["proof (prove)\nusing this:\n  S2 \\<subseteq> S\n  s \\<in> S\n  s \\<notin> S1\n  emeasure (T (simple ct s)) (space (T (simple ct s))) = 1\n\ngoal (1 subgoal):\n 1. P s (Suc n) \\<le> lfp F_inf s", "by (subst lfp_unfold[OF mono_F_inf]) (auto simp: F_inf_def P_def)"], ["proof (state)\nthis:\n  P s (Suc n) \\<le> lfp F_inf s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P s (Suc n) \\<le> lfp F_inf s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P s n \\<le> lfp F_inf s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Squnion> range (P s) \\<le> lfp F_inf s\n\ngoal (2 subgoals):\n 1. \\<And>x. n x \\<le> lfp F_inf x\n 2. \\<And>x. F_inf n x \\<le> n x", "finally"], ["proof (chain)\npicking this:\n  n s \\<le> lfp F_inf s", "have \"n s \\<le> lfp F_inf s\""], ["proof (prove)\nusing this:\n  n s \\<le> lfp F_inf s\n\ngoal (1 subgoal):\n 1. n s \\<le> lfp F_inf s", "."], ["proof (state)\nthis:\n  n s \\<le> lfp F_inf s\n\ngoal (2 subgoals):\n 1. \\<And>x. n x \\<le> lfp F_inf x\n 2. \\<And>x. F_inf n x \\<le> n x", "}"], ["proof (state)\nthis:\n  s \\<in> S \\<Longrightarrow> n s \\<le> lfp F_inf s\n\ngoal (2 subgoals):\n 1. \\<And>x. n x \\<le> lfp F_inf x\n 2. \\<And>x. F_inf n x \\<le> n x", "moreover"], ["proof (state)\nthis:\n  s \\<in> S \\<Longrightarrow> n s \\<le> lfp F_inf s\n\ngoal (2 subgoals):\n 1. \\<And>x. n x \\<le> lfp F_inf x\n 2. \\<And>x. F_inf n x \\<le> n x", "have \"s \\<notin> S \\<Longrightarrow> n s \\<le> lfp F_inf s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<notin> S \\<Longrightarrow> n s \\<le> lfp F_inf s", "by (subst lfp_unfold[OF mono_F_inf]) (simp add: n_def F_inf_def)"], ["proof (state)\nthis:\n  s \\<notin> S \\<Longrightarrow> n s \\<le> lfp F_inf s\n\ngoal (2 subgoals):\n 1. \\<And>x. n x \\<le> lfp F_inf x\n 2. \\<And>x. F_inf n x \\<le> n x", "ultimately"], ["proof (chain)\npicking this:\n  s \\<in> S \\<Longrightarrow> n s \\<le> lfp F_inf s\n  s \\<notin> S \\<Longrightarrow> n s \\<le> lfp F_inf s", "show \"n s \\<le> lfp F_inf s\""], ["proof (prove)\nusing this:\n  s \\<in> S \\<Longrightarrow> n s \\<le> lfp F_inf s\n  s \\<notin> S \\<Longrightarrow> n s \\<le> lfp F_inf s\n\ngoal (1 subgoal):\n 1. n s \\<le> lfp F_inf s", "by blast"], ["proof (state)\nthis:\n  n s \\<le> lfp F_inf s\n\ngoal (1 subgoal):\n 1. \\<And>x. F_inf n x \\<le> n x", "qed (simp add: F_inf_n)"], ["", "lemma real_n: \"s \\<in> S \\<Longrightarrow> ennreal (enn2real (n s)) = n s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> S \\<Longrightarrow> ennreal (enn2real (n s)) = n s", "by (cases \"n s\") simp_all"], ["", "lemma real_p: \"s \\<in> S \\<Longrightarrow> ennreal (enn2real (p s)) = p s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> S \\<Longrightarrow> ennreal (enn2real (p s)) = p s", "by (cases \"p s\") simp_all"], ["", "lemma p_ub:\n  fixes x\n  assumes \"s \\<in> S\"\n  assumes solution: \"\\<And>s D. s \\<in> S1 \\<Longrightarrow> D \\<in> K s \\<Longrightarrow> (\\<Sum>t\\<in>S. pmf D t * x t) \\<le> x s\"\n  assumes solution_0: \"\\<And>s. s \\<in> S \\<Longrightarrow> p s = 0 \\<Longrightarrow> x s = 0\"\n  assumes solution_S2: \"\\<And>s. s \\<in> S2 \\<Longrightarrow> x s = 1\"\n  shows \"enn2real (p s) \\<le> x s\" (is \"?y s \\<le> _\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. enn2real (p s) \\<le> x s", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. enn2real (p s) \\<le> x s", "let ?p = \"\\<lambda>s. enn2real (p s)\""], ["proof (state)\ngoal (1 subgoal):\n 1. enn2real (p s) \\<le> x s", "from p_v_memoryless"], ["proof (chain)\npicking this:\n  (\\<And>ct.\n      \\<lbrakk>ct \\<in> Pi\\<^sub>E S K; p = v \\<circ> simple ct\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain sc where \"sc \\<in> Pi\\<^sub>E S K\" and p_eq: \"p = v \\<circ> simple sc\""], ["proof (prove)\nusing this:\n  (\\<And>ct.\n      \\<lbrakk>ct \\<in> Pi\\<^sub>E S K; p = v \\<circ> simple ct\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>sc.\n        \\<lbrakk>sc \\<in> Pi\\<^sub>E S K; p = v \\<circ> simple sc\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  sc \\<in> Pi\\<^sub>E S K\n  p = v \\<circ> simple sc\n\ngoal (1 subgoal):\n 1. enn2real (p s) \\<le> x s", "then"], ["proof (chain)\npicking this:\n  sc \\<in> Pi\\<^sub>E S K\n  p = v \\<circ> simple sc", "have sch: \"\\<And>s. s \\<in> S \\<Longrightarrow> sc s \\<in> K s\" and sc_Pi: \"sc \\<in> Pi S K\""], ["proof (prove)\nusing this:\n  sc \\<in> Pi\\<^sub>E S K\n  p = v \\<circ> simple sc\n\ngoal (1 subgoal):\n 1. (\\<And>s. s \\<in> S \\<Longrightarrow> sc s \\<in> K s) &&&\n    sc \\<in> Pi S K", "by (auto simp: PiE_iff)"], ["proof (state)\nthis:\n  ?s1 \\<in> S \\<Longrightarrow> sc ?s1 \\<in> K ?s1\n  sc \\<in> Pi S K\n\ngoal (1 subgoal):\n 1. enn2real (p s) \\<le> x s", "interpret sc: MC_syntax sc"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["proof (state)\ngoal (1 subgoal):\n 1. enn2real (p s) \\<le> x s", "define N where \"N = {s\\<in>S. p s = 0} \\<union> S2\""], ["proof (state)\nthis:\n  N = {s \\<in> S. p s = 0} \\<union> S2\n\ngoal (1 subgoal):\n 1. enn2real (p s) \\<le> x s", "{"], ["proof (state)\nthis:\n  N = {s \\<in> S. p s = 0} \\<union> S2\n\ngoal (1 subgoal):\n 1. enn2real (p s) \\<le> x s", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. enn2real (p s) \\<le> x s", "assume \"s \\<in> S\" \"s \\<notin> N\""], ["proof (state)\nthis:\n  s \\<in> S\n  s \\<notin> N\n\ngoal (1 subgoal):\n 1. enn2real (p s) \\<le> x s", "with p_nS12"], ["proof (chain)\npicking this:\n  \\<lbrakk>?s \\<in> S; ?s \\<notin> S1; ?s \\<notin> S2\\<rbrakk>\n  \\<Longrightarrow> p ?s = 0\n  s \\<in> S\n  s \\<notin> N", "have \"s \\<in> S1\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?s \\<in> S; ?s \\<notin> S1; ?s \\<notin> S2\\<rbrakk>\n  \\<Longrightarrow> p ?s = 0\n  s \\<in> S\n  s \\<notin> N\n\ngoal (1 subgoal):\n 1. s \\<in> S1", "by (auto simp add: N_def)"], ["proof (state)\nthis:\n  s \\<in> S1\n\ngoal (1 subgoal):\n 1. enn2real (p s) \\<le> x s", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?sa3 \\<in> S; ?sa3 \\<notin> N\\<rbrakk>\n  \\<Longrightarrow> ?sa3 \\<in> S1\n\ngoal (1 subgoal):\n 1. enn2real (p s) \\<le> x s", "note N = this"], ["proof (state)\nthis:\n  \\<lbrakk>?sa3 \\<in> S; ?sa3 \\<notin> N\\<rbrakk>\n  \\<Longrightarrow> ?sa3 \\<in> S1\n\ngoal (1 subgoal):\n 1. enn2real (p s) \\<le> x s", "have N_S: \"N \\<subseteq> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. N \\<subseteq> S", "using S2"], ["proof (prove)\nusing this:\n  S2 \\<subseteq> S\n\ngoal (1 subgoal):\n 1. N \\<subseteq> S", "by (auto simp: N_def)"], ["proof (state)\nthis:\n  N \\<subseteq> S\n\ngoal (1 subgoal):\n 1. enn2real (p s) \\<le> x s", "have finite_sc[intro]: \"s \\<in> S \\<Longrightarrow> finite (sc s)\" for s"], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> S \\<Longrightarrow> finite (set_pmf (sc s))", "using \\<open>sc \\<in> Pi\\<^sub>E S K\\<close>"], ["proof (prove)\nusing this:\n  sc \\<in> Pi\\<^sub>E S K\n\ngoal (1 subgoal):\n 1. s \\<in> S \\<Longrightarrow> finite (set_pmf (sc s))", "by (auto simp: PiE_iff intro: set_pmf_finite)"], ["proof (state)\nthis:\n  ?s1 \\<in> S \\<Longrightarrow> finite (set_pmf (sc ?s1))\n\ngoal (1 subgoal):\n 1. enn2real (p s) \\<le> x s", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. enn2real (p s) \\<le> x s", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> enn2real (p s) \\<le> x s\n 2. \\<not> ?P \\<Longrightarrow> enn2real (p s) \\<le> x s", "assume \"s \\<in> S - N\""], ["proof (state)\nthis:\n  s \\<in> S - N\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> enn2real (p s) \\<le> x s\n 2. \\<not> ?P \\<Longrightarrow> enn2real (p s) \\<le> x s", "then"], ["proof (chain)\npicking this:\n  s \\<in> S - N", "show ?thesis"], ["proof (prove)\nusing this:\n  s \\<in> S - N\n\ngoal (1 subgoal):\n 1. enn2real (p s) \\<le> x s", "proof (rule mono_les)"], ["proof (state)\ngoal (8 subgoals):\n 1. (\\<Union>s\\<in>S - N. set_pmf (?K s)) \\<subseteq> S - N \\<union> ?N\n 2. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow> integrable (measure_pmf (?K s)) x\n 3. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       integrable (measure_pmf (?K s)) (\\<lambda>a. enn2real (p a))\n 4. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       \\<exists>t\\<in>?N.\n          (s, t) \\<in> (SIGMA x:UNIV. set_pmf (?K x))\\<^sup>*\n 5. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       measure_pmf.expectation (?K s) x + ?c s \\<le> x s\n 6. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       enn2real (p s)\n       \\<le> measure_pmf.expectation (?K s) (\\<lambda>t. enn2real (p t)) +\n             ?c s\n 7. \\<And>s. s \\<in> ?N \\<Longrightarrow> enn2real (p s) \\<le> x s\n 8. finite ((\\<lambda>xa. enn2real (p xa) - x xa) ` (S - N \\<union> ?N))", "show \"(\\<Union>x\\<in>S - N. set_pmf (sc x)) \\<subseteq> S - N \\<union> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>x\\<in>S - N. set_pmf (sc x)) \\<subseteq> S - N \\<union> N", "using Pi_closed[OF sc_Pi]"], ["proof (prove)\nusing this:\n  \\<lbrakk>?s \\<in> S; ?t \\<in> set_pmf (sc ?s)\\<rbrakk>\n  \\<Longrightarrow> ?t \\<in> S\n\ngoal (1 subgoal):\n 1. (\\<Union>x\\<in>S - N. set_pmf (sc x)) \\<subseteq> S - N \\<union> N", "by auto"], ["proof (state)\nthis:\n  (\\<Union>x\\<in>S - N. set_pmf (sc x)) \\<subseteq> S - N \\<union> N\n\ngoal (7 subgoals):\n 1. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow> integrable (measure_pmf (sc s)) x\n 2. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       integrable (measure_pmf (sc s)) (\\<lambda>a. enn2real (p a))\n 3. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow> \\<exists>t\\<in>N. (s, t) \\<in> sc.acc\n 4. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       measure_pmf.expectation (sc s) x + ?c s \\<le> x s\n 5. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       enn2real (p s)\n       \\<le> measure_pmf.expectation (sc s) (\\<lambda>t. enn2real (p t)) +\n             ?c s\n 6. \\<And>s. s \\<in> N \\<Longrightarrow> enn2real (p s) \\<le> x s\n 7. finite ((\\<lambda>xa. enn2real (p xa) - x xa) ` (S - N \\<union> N))", "show \"finite ((\\<lambda>s. ?p s - x s) ` (S - N \\<union> N))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite ((\\<lambda>s. enn2real (p s) - x s) ` (S - N \\<union> N))", "using N_S"], ["proof (prove)\nusing this:\n  N \\<subseteq> S\n\ngoal (1 subgoal):\n 1. finite ((\\<lambda>s. enn2real (p s) - x s) ` (S - N \\<union> N))", "by (intro finite_imageI finite_subset[OF _ S_finite]) auto"], ["proof (state)\nthis:\n  finite ((\\<lambda>s. enn2real (p s) - x s) ` (S - N \\<union> N))\n\ngoal (6 subgoals):\n 1. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow> integrable (measure_pmf (sc s)) x\n 2. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       integrable (measure_pmf (sc s)) (\\<lambda>a. enn2real (p a))\n 3. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow> \\<exists>t\\<in>N. (s, t) \\<in> sc.acc\n 4. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       measure_pmf.expectation (sc s) x + ?c s \\<le> x s\n 5. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       enn2real (p s)\n       \\<le> measure_pmf.expectation (sc s) (\\<lambda>t. enn2real (p t)) +\n             ?c s\n 6. \\<And>s. s \\<in> N \\<Longrightarrow> enn2real (p s) \\<le> x s", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow> integrable (measure_pmf (sc s)) x\n 2. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       integrable (measure_pmf (sc s)) (\\<lambda>a. enn2real (p a))\n 3. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow> \\<exists>t\\<in>N. (s, t) \\<in> sc.acc\n 4. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       measure_pmf.expectation (sc s) x + ?c s \\<le> x s\n 5. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       enn2real (p s)\n       \\<le> measure_pmf.expectation (sc s) (\\<lambda>t. enn2real (p t)) +\n             ?c s\n 6. \\<And>s. s \\<in> N \\<Longrightarrow> enn2real (p s) \\<le> x s", "fix s"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow> integrable (measure_pmf (sc s)) x\n 2. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       integrable (measure_pmf (sc s)) (\\<lambda>a. enn2real (p a))\n 3. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow> \\<exists>t\\<in>N. (s, t) \\<in> sc.acc\n 4. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       measure_pmf.expectation (sc s) x + ?c s \\<le> x s\n 5. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       enn2real (p s)\n       \\<le> measure_pmf.expectation (sc s) (\\<lambda>t. enn2real (p t)) +\n             ?c s\n 6. \\<And>s. s \\<in> N \\<Longrightarrow> enn2real (p s) \\<le> x s", "assume \"s \\<in> N\""], ["proof (state)\nthis:\n  s \\<in> N\n\ngoal (6 subgoals):\n 1. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow> integrable (measure_pmf (sc s)) x\n 2. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       integrable (measure_pmf (sc s)) (\\<lambda>a. enn2real (p a))\n 3. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow> \\<exists>t\\<in>N. (s, t) \\<in> sc.acc\n 4. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       measure_pmf.expectation (sc s) x + ?c s \\<le> x s\n 5. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       enn2real (p s)\n       \\<le> measure_pmf.expectation (sc s) (\\<lambda>t. enn2real (p t)) +\n             ?c s\n 6. \\<And>s. s \\<in> N \\<Longrightarrow> enn2real (p s) \\<le> x s", "then"], ["proof (chain)\npicking this:\n  s \\<in> N", "show \"?p s \\<le> x s\""], ["proof (prove)\nusing this:\n  s \\<in> N\n\ngoal (1 subgoal):\n 1. enn2real (p s) \\<le> x s", "by (auto simp: N_def solution_S2 solution_0)"], ["proof (state)\nthis:\n  enn2real (p s) \\<le> x s\n\ngoal (5 subgoals):\n 1. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow> integrable (measure_pmf (sc s)) x\n 2. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       integrable (measure_pmf (sc s)) (\\<lambda>a. enn2real (p a))\n 3. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow> \\<exists>t\\<in>N. (s, t) \\<in> sc.acc\n 4. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       measure_pmf.expectation (sc s) x + ?c s \\<le> x s\n 5. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       enn2real (p s)\n       \\<le> measure_pmf.expectation (sc s) (\\<lambda>t. enn2real (p t)) +\n             ?c s", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow> integrable (measure_pmf (sc s)) x\n 2. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       integrable (measure_pmf (sc s)) (\\<lambda>a. enn2real (p a))\n 3. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow> \\<exists>t\\<in>N. (s, t) \\<in> sc.acc\n 4. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       measure_pmf.expectation (sc s) x + ?c s \\<le> x s\n 5. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       enn2real (p s)\n       \\<le> measure_pmf.expectation (sc s) (\\<lambda>t. enn2real (p t)) +\n             ?c s", "fix s"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow> integrable (measure_pmf (sc s)) x\n 2. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       integrable (measure_pmf (sc s)) (\\<lambda>a. enn2real (p a))\n 3. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow> \\<exists>t\\<in>N. (s, t) \\<in> sc.acc\n 4. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       measure_pmf.expectation (sc s) x + ?c s \\<le> x s\n 5. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       enn2real (p s)\n       \\<le> measure_pmf.expectation (sc s) (\\<lambda>t. enn2real (p t)) +\n             ?c s", "assume s: \"s \\<in> S - N\""], ["proof (state)\nthis:\n  s \\<in> S - N\n\ngoal (5 subgoals):\n 1. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow> integrable (measure_pmf (sc s)) x\n 2. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       integrable (measure_pmf (sc s)) (\\<lambda>a. enn2real (p a))\n 3. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow> \\<exists>t\\<in>N. (s, t) \\<in> sc.acc\n 4. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       measure_pmf.expectation (sc s) x + ?c s \\<le> x s\n 5. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       enn2real (p s)\n       \\<le> measure_pmf.expectation (sc s) (\\<lambda>t. enn2real (p t)) +\n             ?c s", "then"], ["proof (chain)\npicking this:\n  s \\<in> S - N", "show \"integrable (sc s) x\" \"integrable (sc s) ?p\""], ["proof (prove)\nusing this:\n  s \\<in> S - N\n\ngoal (1 subgoal):\n 1. integrable (measure_pmf (sc s)) x &&&\n    integrable (measure_pmf (sc s)) (\\<lambda>s. enn2real (p s))", "by (auto intro!: integrable_measure_pmf_finite set_pmf_finite sch)"], ["proof (state)\nthis:\n  integrable (measure_pmf (sc s)) x\n  integrable (measure_pmf (sc s)) (\\<lambda>s. enn2real (p s))\n\ngoal (3 subgoals):\n 1. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow> \\<exists>t\\<in>N. (s, t) \\<in> sc.acc\n 2. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       measure_pmf.expectation (sc s) x + ?c s \\<le> x s\n 3. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       enn2real (p s)\n       \\<le> measure_pmf.expectation (sc s) (\\<lambda>t. enn2real (p t)) +\n             ?c s", "from s"], ["proof (chain)\npicking this:\n  s \\<in> S - N", "have \"s \\<in> S1\" \"s \\<in> S\""], ["proof (prove)\nusing this:\n  s \\<in> S - N\n\ngoal (1 subgoal):\n 1. s \\<in> S1 &&& s \\<in> S", "using p_nS12[of s]"], ["proof (prove)\nusing this:\n  s \\<in> S - N\n  \\<lbrakk>s \\<in> S; s \\<notin> S1; s \\<notin> S2\\<rbrakk>\n  \\<Longrightarrow> p s = 0\n\ngoal (1 subgoal):\n 1. s \\<in> S1 &&& s \\<in> S", "by (auto simp: N_def)"], ["proof (state)\nthis:\n  s \\<in> S1\n  s \\<in> S\n\ngoal (3 subgoals):\n 1. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow> \\<exists>t\\<in>N. (s, t) \\<in> sc.acc\n 2. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       measure_pmf.expectation (sc s) x + ?c s \\<le> x s\n 3. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       enn2real (p s)\n       \\<le> measure_pmf.expectation (sc s) (\\<lambda>t. enn2real (p t)) +\n             ?c s", "then"], ["proof (chain)\npicking this:\n  s \\<in> S1\n  s \\<in> S", "show \"?p s \\<le> (\\<integral> t. ?p t \\<partial>sc s) + 0\""], ["proof (prove)\nusing this:\n  s \\<in> S1\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. enn2real (p s)\n    \\<le> measure_pmf.expectation (sc s) (\\<lambda>t. enn2real (p t)) + 0", "unfolding p_eq"], ["proof (prove)\nusing this:\n  s \\<in> S1\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. enn2real ((v \\<circ> simple sc) s)\n    \\<le> measure_pmf.expectation (sc s)\n           (\\<lambda>t. enn2real ((v \\<circ> simple sc) t)) +\n          0", "using real_v_integral_eq[of \"simple sc s\"]"], ["proof (prove)\nusing this:\n  s \\<in> S1\n  s \\<in> S\n  simple sc s \\<in> valid_cfg \\<Longrightarrow>\n  enn2real\n   (\\<integral>\\<^sup>+ s. v (cont (simple sc s) s)\n                       \\<partial>measure_pmf (action (simple sc s))) =\n  measure_pmf.expectation (action (simple sc s))\n   (\\<lambda>s. enn2real (v (cont (simple sc s) s)))\n\ngoal (1 subgoal):\n 1. enn2real ((v \\<circ> simple sc) s)\n    \\<le> measure_pmf.expectation (sc s)\n           (\\<lambda>t. enn2real ((v \\<circ> simple sc) t)) +\n          0", "by (auto simp add: v_S1 sc_Pi intro!: integral_mono_AE integrable_measure_pmf_finite AE_pmfI)"], ["proof (state)\nthis:\n  enn2real (p s)\n  \\<le> measure_pmf.expectation (sc s) (\\<lambda>t. enn2real (p t)) + 0\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow> \\<exists>t\\<in>N. (s, t) \\<in> sc.acc\n 2. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       measure_pmf.expectation (sc s) x + 0 \\<le> x s", "show \"(\\<integral> t. x t \\<partial>sc s) + 0 \\<le> x s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. measure_pmf.expectation (sc s) x + 0 \\<le> x s", "using solution[OF \\<open>s \\<in> S1\\<close> sch[OF \\<open>s \\<in> S\\<close>]]"], ["proof (prove)\nusing this:\n  (\\<Sum>t\\<in>S. pmf (sc s) t * x t) \\<le> x s\n\ngoal (1 subgoal):\n 1. measure_pmf.expectation (sc s) x + 0 \\<le> x s", "by (subst integral_measure_pmf[where A=S])\n           (auto intro: S_finite Pi_closed[OF sc_Pi] \\<open>s \\<in> S\\<close> simp: ac_simps)"], ["proof (state)\nthis:\n  measure_pmf.expectation (sc s) x + 0 \\<le> x s\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow> \\<exists>t\\<in>N. (s, t) \\<in> sc.acc", "define X where \"X = (SIGMA x:UNIV. sc x)\""], ["proof (state)\nthis:\n  X = (SIGMA x:UNIV. set_pmf (sc x))\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow> \\<exists>t\\<in>N. (s, t) \\<in> sc.acc", "show \"\\<exists>t\\<in>N. (s, t) \\<in> X\\<^sup>*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t\\<in>N. (s, t) \\<in> X\\<^sup>*", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>t\\<in>N. (s, t) \\<in> X\\<^sup>*) \\<Longrightarrow>\n    False", "assume \"\\<not> ?thesis\""], ["proof (state)\nthis:\n  \\<not> (\\<exists>t\\<in>N. (s, t) \\<in> X\\<^sup>*)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>t\\<in>N. (s, t) \\<in> X\\<^sup>*) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<exists>t\\<in>N. (s, t) \\<in> X\\<^sup>*)", "have *: \"\\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*\""], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>t\\<in>N. (s, t) \\<in> X\\<^sup>*)\n\ngoal (1 subgoal):\n 1. \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*", "by auto"], ["proof (state)\nthis:\n  \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>t\\<in>N. (s, t) \\<in> X\\<^sup>*) \\<Longrightarrow>\n    False", "with \\<open>s\\<in>S\\<close>"], ["proof (chain)\npicking this:\n  s \\<in> S\n  \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*", "have \"v (simple sc s) = 0\""], ["proof (prove)\nusing this:\n  s \\<in> S\n  \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*\n\ngoal (1 subgoal):\n 1. v (simple sc s) = 0", "proof (coinduction arbitrary: s rule: v_eq_0_coinduct)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>cfg.\n       \\<lbrakk>s \\<in> S; \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*;\n        \\<exists>s.\n           cfg = simple sc s \\<and>\n           s \\<in> S \\<and>\n           (\\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*)\\<rbrakk>\n       \\<Longrightarrow> cfg \\<in> valid_cfg\n 2. \\<And>cfg.\n       \\<lbrakk>s \\<in> S; \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*;\n        \\<exists>s.\n           cfg = simple sc s \\<and>\n           s \\<in> S \\<and>\n           (\\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*)\\<rbrakk>\n       \\<Longrightarrow> state cfg \\<notin> S2\n 3. \\<And>cfg' s.\n       \\<lbrakk>s \\<in> S; \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*;\n        state (simple sc s) \\<in> S1;\n        cfg' \\<in> set_pmf (K_cfg (simple sc s))\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>s.\n                             cfg' = simple sc s \\<and>\n                             s \\<in> S \\<and>\n                             (\\<forall>t\\<in>N.\n                                 (s, t) \\<notin> X\\<^sup>*)) \\<or>\n                         v cfg' = 0", "case (valid t)"], ["proof (state)\nthis:\n  s \\<in> S\n  \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*\n  \\<exists>s.\n     t = simple sc s \\<and>\n     s \\<in> S \\<and> (\\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*)\n\ngoal (3 subgoals):\n 1. \\<And>cfg.\n       \\<lbrakk>s \\<in> S; \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*;\n        \\<exists>s.\n           cfg = simple sc s \\<and>\n           s \\<in> S \\<and>\n           (\\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*)\\<rbrakk>\n       \\<Longrightarrow> cfg \\<in> valid_cfg\n 2. \\<And>cfg.\n       \\<lbrakk>s \\<in> S; \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*;\n        \\<exists>s.\n           cfg = simple sc s \\<and>\n           s \\<in> S \\<and>\n           (\\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*)\\<rbrakk>\n       \\<Longrightarrow> state cfg \\<notin> S2\n 3. \\<And>cfg' s.\n       \\<lbrakk>s \\<in> S; \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*;\n        state (simple sc s) \\<in> S1;\n        cfg' \\<in> set_pmf (K_cfg (simple sc s))\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>s.\n                             cfg' = simple sc s \\<and>\n                             s \\<in> S \\<and>\n                             (\\<forall>t\\<in>N.\n                                 (s, t) \\<notin> X\\<^sup>*)) \\<or>\n                         v cfg' = 0", "with sch"], ["proof (chain)\npicking this:\n  ?s1 \\<in> S \\<Longrightarrow> sc ?s1 \\<in> K ?s1\n  s \\<in> S\n  \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*\n  \\<exists>s.\n     t = simple sc s \\<and>\n     s \\<in> S \\<and> (\\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*)", "show ?case"], ["proof (prove)\nusing this:\n  ?s1 \\<in> S \\<Longrightarrow> sc ?s1 \\<in> K ?s1\n  s \\<in> S\n  \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*\n  \\<exists>s.\n     t = simple sc s \\<and>\n     s \\<in> S \\<and> (\\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*)\n\ngoal (1 subgoal):\n 1. t \\<in> valid_cfg", "by auto"], ["proof (state)\nthis:\n  t \\<in> valid_cfg\n\ngoal (2 subgoals):\n 1. \\<And>cfg.\n       \\<lbrakk>s \\<in> S; \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*;\n        \\<exists>s.\n           cfg = simple sc s \\<and>\n           s \\<in> S \\<and>\n           (\\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*)\\<rbrakk>\n       \\<Longrightarrow> state cfg \\<notin> S2\n 2. \\<And>cfg' s.\n       \\<lbrakk>s \\<in> S; \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*;\n        state (simple sc s) \\<in> S1;\n        cfg' \\<in> set_pmf (K_cfg (simple sc s))\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>s.\n                             cfg' = simple sc s \\<and>\n                             s \\<in> S \\<and>\n                             (\\<forall>t\\<in>N.\n                                 (s, t) \\<notin> X\\<^sup>*)) \\<or>\n                         v cfg' = 0", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>cfg.\n       \\<lbrakk>s \\<in> S; \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*;\n        \\<exists>s.\n           cfg = simple sc s \\<and>\n           s \\<in> S \\<and>\n           (\\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*)\\<rbrakk>\n       \\<Longrightarrow> state cfg \\<notin> S2\n 2. \\<And>cfg' s.\n       \\<lbrakk>s \\<in> S; \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*;\n        state (simple sc s) \\<in> S1;\n        cfg' \\<in> set_pmf (K_cfg (simple sc s))\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>s.\n                             cfg' = simple sc s \\<and>\n                             s \\<in> S \\<and>\n                             (\\<forall>t\\<in>N.\n                                 (s, t) \\<notin> X\\<^sup>*)) \\<or>\n                         v cfg' = 0", "case (nS2 s)"], ["proof (state)\nthis:\n  sa__ \\<in> S\n  \\<forall>t\\<in>N. (sa__, t) \\<notin> X\\<^sup>*\n  \\<exists>s.\n     s = simple sc s \\<and>\n     s \\<in> S \\<and> (\\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*)\n\ngoal (2 subgoals):\n 1. \\<And>cfg.\n       \\<lbrakk>sa__ \\<in> S;\n        \\<forall>t\\<in>N. (sa__, t) \\<notin> X\\<^sup>*;\n        \\<exists>s.\n           cfg = simple sc s \\<and>\n           s \\<in> S \\<and>\n           (\\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*)\\<rbrakk>\n       \\<Longrightarrow> state cfg \\<notin> S2\n 2. \\<And>cfg' s.\n       \\<lbrakk>s \\<in> S; \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*;\n        state (simple sc s) \\<in> S1;\n        cfg' \\<in> set_pmf (K_cfg (simple sc s))\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>s.\n                             cfg' = simple sc s \\<and>\n                             s \\<in> S \\<and>\n                             (\\<forall>t\\<in>N.\n                                 (s, t) \\<notin> X\\<^sup>*)) \\<or>\n                         v cfg' = 0", "then"], ["proof (chain)\npicking this:\n  sa__ \\<in> S\n  \\<forall>t\\<in>N. (sa__, t) \\<notin> X\\<^sup>*\n  \\<exists>s.\n     s = simple sc s \\<and>\n     s \\<in> S \\<and> (\\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*)", "show ?case"], ["proof (prove)\nusing this:\n  sa__ \\<in> S\n  \\<forall>t\\<in>N. (sa__, t) \\<notin> X\\<^sup>*\n  \\<exists>s.\n     s = simple sc s \\<and>\n     s \\<in> S \\<and> (\\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*)\n\ngoal (1 subgoal):\n 1. state s \\<notin> S2", "by (auto simp: N_def)"], ["proof (state)\nthis:\n  state s \\<notin> S2\n\ngoal (1 subgoal):\n 1. \\<And>cfg' s.\n       \\<lbrakk>s \\<in> S; \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*;\n        state (simple sc s) \\<in> S1;\n        cfg' \\<in> set_pmf (K_cfg (simple sc s))\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>s.\n                             cfg' = simple sc s \\<and>\n                             s \\<in> S \\<and>\n                             (\\<forall>t\\<in>N.\n                                 (s, t) \\<notin> X\\<^sup>*)) \\<or>\n                         v cfg' = 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>cfg' s.\n       \\<lbrakk>s \\<in> S; \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*;\n        state (simple sc s) \\<in> S1;\n        cfg' \\<in> set_pmf (K_cfg (simple sc s))\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>s.\n                             cfg' = simple sc s \\<and>\n                             s \\<in> S \\<and>\n                             (\\<forall>t\\<in>N.\n                                 (s, t) \\<notin> X\\<^sup>*)) \\<or>\n                         v cfg' = 0", "case (cont cfg s)"], ["proof (state)\nthis:\n  s \\<in> S\n  \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*\n  state (simple sc s) \\<in> S1\n  cfg \\<in> set_pmf (K_cfg (simple sc s))\n\ngoal (1 subgoal):\n 1. \\<And>cfg' s.\n       \\<lbrakk>s \\<in> S; \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*;\n        state (simple sc s) \\<in> S1;\n        cfg' \\<in> set_pmf (K_cfg (simple sc s))\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>s.\n                             cfg' = simple sc s \\<and>\n                             s \\<in> S \\<and>\n                             (\\<forall>t\\<in>N.\n                                 (s, t) \\<notin> X\\<^sup>*)) \\<or>\n                         v cfg' = 0", "then"], ["proof (chain)\npicking this:\n  s \\<in> S\n  \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*\n  state (simple sc s) \\<in> S1\n  cfg \\<in> set_pmf (K_cfg (simple sc s))", "have \"(s, state cfg) \\<in> X\\<^sup>*\""], ["proof (prove)\nusing this:\n  s \\<in> S\n  \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*\n  state (simple sc s) \\<in> S1\n  cfg \\<in> set_pmf (K_cfg (simple sc s))\n\ngoal (1 subgoal):\n 1. (s, state cfg) \\<in> X\\<^sup>*", "by (auto simp: X_def set_K_cfg)"], ["proof (state)\nthis:\n  (s, state cfg) \\<in> X\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>cfg' s.\n       \\<lbrakk>s \\<in> S; \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*;\n        state (simple sc s) \\<in> S1;\n        cfg' \\<in> set_pmf (K_cfg (simple sc s))\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>s.\n                             cfg' = simple sc s \\<and>\n                             s \\<in> S \\<and>\n                             (\\<forall>t\\<in>N.\n                                 (s, t) \\<notin> X\\<^sup>*)) \\<or>\n                         v cfg' = 0", "with cont"], ["proof (chain)\npicking this:\n  s \\<in> S\n  \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*\n  state (simple sc s) \\<in> S1\n  cfg \\<in> set_pmf (K_cfg (simple sc s))\n  (s, state cfg) \\<in> X\\<^sup>*", "show ?case"], ["proof (prove)\nusing this:\n  s \\<in> S\n  \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*\n  state (simple sc s) \\<in> S1\n  cfg \\<in> set_pmf (K_cfg (simple sc s))\n  (s, state cfg) \\<in> X\\<^sup>*\n\ngoal (1 subgoal):\n 1. (\\<exists>s.\n        cfg = simple sc s \\<and>\n        s \\<in> S \\<and>\n        (\\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*)) \\<or>\n    v cfg = 0", "by (auto simp: set_K_cfg intro!: exI intro: Pi_closed[OF sc_Pi])\n               (blast intro: rtrancl_trans)"], ["proof (state)\nthis:\n  (\\<exists>s.\n      cfg = simple sc s \\<and>\n      s \\<in> S \\<and> (\\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*)) \\<or>\n  v cfg = 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  v (simple sc s) = 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>t\\<in>N. (s, t) \\<in> X\\<^sup>*) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  v (simple sc s) = 0", "have \"p s = 0\""], ["proof (prove)\nusing this:\n  v (simple sc s) = 0\n\ngoal (1 subgoal):\n 1. p s = 0", "unfolding p_eq"], ["proof (prove)\nusing this:\n  v (simple sc s) = 0\n\ngoal (1 subgoal):\n 1. (v \\<circ> simple sc) s = 0", "by simp"], ["proof (state)\nthis:\n  p s = 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>t\\<in>N. (s, t) \\<in> X\\<^sup>*) \\<Longrightarrow>\n    False", "with \\<open>s\\<in>S\\<close>"], ["proof (chain)\npicking this:\n  s \\<in> S\n  p s = 0", "have \"s\\<in>N\""], ["proof (prove)\nusing this:\n  s \\<in> S\n  p s = 0\n\ngoal (1 subgoal):\n 1. s \\<in> N", "by (auto simp: N_def)"], ["proof (state)\nthis:\n  s \\<in> N\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>t\\<in>N. (s, t) \\<in> X\\<^sup>*) \\<Longrightarrow>\n    False", "with *"], ["proof (chain)\npicking this:\n  \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*\n  s \\<in> N", "show False"], ["proof (prove)\nusing this:\n  \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*\n  s \\<in> N\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>t\\<in>N. (s, t) \\<in> X\\<^sup>*\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  enn2real (p s) \\<le> x s\n\ngoal (1 subgoal):\n 1. s \\<notin> S - N \\<Longrightarrow> enn2real (p s) \\<le> x s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. s \\<notin> S - N \\<Longrightarrow> enn2real (p s) \\<le> x s", "assume \"s \\<notin> S - N\""], ["proof (state)\nthis:\n  s \\<notin> S - N\n\ngoal (1 subgoal):\n 1. s \\<notin> S - N \\<Longrightarrow> enn2real (p s) \\<le> x s", "with \\<open>s \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  s \\<in> S\n  s \\<notin> S - N", "show \"?p s \\<le> x s\""], ["proof (prove)\nusing this:\n  s \\<in> S\n  s \\<notin> S - N\n\ngoal (1 subgoal):\n 1. enn2real (p s) \\<le> x s", "by (auto simp: N_def solution_0 solution_S2)"], ["proof (state)\nthis:\n  enn2real (p s) \\<le> x s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  enn2real (p s) \\<le> x s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma n_lb:\n  fixes x\n  assumes \"s \\<in> S\"\n  assumes solution: \"\\<And>s D. s \\<in> S1 \\<Longrightarrow> D \\<in> K s \\<Longrightarrow> x s \\<le> (\\<Sum>t\\<in>S. pmf D t * x t)\"\n  assumes solution_n0: \"\\<And>s. s \\<in> S \\<Longrightarrow> n s = 0 \\<Longrightarrow> x s = 0\"\n  assumes solution_S2: \"\\<And>s. s \\<in> S2 \\<Longrightarrow> x s = 1\"\n  shows \"x s \\<le> enn2real (n s)\" (is \"_ \\<le> ?y s\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. x s \\<le> enn2real (n s)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x s \\<le> enn2real (n s)", "let ?I = \"\\<lambda>D::'s pmf. \\<integral>\\<^sup>+x. n x \\<partial>D\""], ["proof (state)\ngoal (1 subgoal):\n 1. x s \\<le> enn2real (n s)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. x s \\<le> enn2real (n s)", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. x s \\<le> enn2real (n s)", "assume \"s \\<in> S1\""], ["proof (state)\nthis:\n  s \\<in> S1\n\ngoal (1 subgoal):\n 1. x s \\<le> enn2real (n s)", "with S1 S1_S2"], ["proof (chain)\npicking this:\n  S1 \\<subseteq> S\n  S1 \\<inter> S2 = {}\n  s \\<in> S1", "have \"n s = (\\<Sqinter>D\\<in>K s. ?I D)\""], ["proof (prove)\nusing this:\n  S1 \\<subseteq> S\n  S1 \\<inter> S2 = {}\n  s \\<in> S1\n\ngoal (1 subgoal):\n 1. n s = (\\<Sqinter>D\\<in>K s. integral\\<^sup>N (measure_pmf D) n)", "by (subst n_eq_lfp_F_inf, subst lfp_unfold[OF mono_F_inf])\n         (auto simp add: F_inf_def n_eq_lfp_F_inf)"], ["proof (state)\nthis:\n  n s = (\\<Sqinter>D\\<in>K s. integral\\<^sup>N (measure_pmf D) n)\n\ngoal (1 subgoal):\n 1. x s \\<le> enn2real (n s)", "moreover"], ["proof (state)\nthis:\n  n s = (\\<Sqinter>D\\<in>K s. integral\\<^sup>N (measure_pmf D) n)\n\ngoal (1 subgoal):\n 1. x s \\<le> enn2real (n s)", "have \"(\\<Sqinter>D\\<in>K s. \\<integral>\\<^sup>+x. n x \\<partial>measure_pmf D) = Min (?I`K s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sqinter>D\\<in>K s. integral\\<^sup>N (measure_pmf D) n) =\n    (MIN x\\<in>K s. integral\\<^sup>N (measure_pmf x) n)", "using \\<open>s \\<in> S1\\<close> S1 K_wf"], ["proof (prove)\nusing this:\n  s \\<in> S1\n  S1 \\<subseteq> S\n  K ?s \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<Sqinter>D\\<in>K s. integral\\<^sup>N (measure_pmf D) n) =\n    (MIN x\\<in>K s. integral\\<^sup>N (measure_pmf x) n)", "by (intro cInf_eq_Min finite_imageI K_finite) auto"], ["proof (state)\nthis:\n  (\\<Sqinter>D\\<in>K s. integral\\<^sup>N (measure_pmf D) n) =\n  (MIN x\\<in>K s. integral\\<^sup>N (measure_pmf x) n)\n\ngoal (1 subgoal):\n 1. x s \\<le> enn2real (n s)", "moreover"], ["proof (state)\nthis:\n  (\\<Sqinter>D\\<in>K s. integral\\<^sup>N (measure_pmf D) n) =\n  (MIN x\\<in>K s. integral\\<^sup>N (measure_pmf x) n)\n\ngoal (1 subgoal):\n 1. x s \\<le> enn2real (n s)", "have \"Min (?I`K s) \\<in> ?I`K s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (MIN x\\<in>K s. integral\\<^sup>N (measure_pmf x) n)\n    \\<in> (\\<lambda>x. integral\\<^sup>N (measure_pmf x) n) ` K s", "using \\<open>s \\<in> S1\\<close> S1 K_wf"], ["proof (prove)\nusing this:\n  s \\<in> S1\n  S1 \\<subseteq> S\n  K ?s \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (MIN x\\<in>K s. integral\\<^sup>N (measure_pmf x) n)\n    \\<in> (\\<lambda>x. integral\\<^sup>N (measure_pmf x) n) ` K s", "by (intro Min_in finite_imageI K_finite) auto"], ["proof (state)\nthis:\n  (MIN x\\<in>K s. integral\\<^sup>N (measure_pmf x) n)\n  \\<in> (\\<lambda>x. integral\\<^sup>N (measure_pmf x) n) ` K s\n\ngoal (1 subgoal):\n 1. x s \\<le> enn2real (n s)", "ultimately"], ["proof (chain)\npicking this:\n  n s = (\\<Sqinter>D\\<in>K s. integral\\<^sup>N (measure_pmf D) n)\n  (\\<Sqinter>D\\<in>K s. integral\\<^sup>N (measure_pmf D) n) =\n  (MIN x\\<in>K s. integral\\<^sup>N (measure_pmf x) n)\n  (MIN x\\<in>K s. integral\\<^sup>N (measure_pmf x) n)\n  \\<in> (\\<lambda>x. integral\\<^sup>N (measure_pmf x) n) ` K s", "have \"\\<exists>D\\<in>K s. (\\<integral>\\<^sup>+x. n x \\<partial>D) = n s\""], ["proof (prove)\nusing this:\n  n s = (\\<Sqinter>D\\<in>K s. integral\\<^sup>N (measure_pmf D) n)\n  (\\<Sqinter>D\\<in>K s. integral\\<^sup>N (measure_pmf D) n) =\n  (MIN x\\<in>K s. integral\\<^sup>N (measure_pmf x) n)\n  (MIN x\\<in>K s. integral\\<^sup>N (measure_pmf x) n)\n  \\<in> (\\<lambda>x. integral\\<^sup>N (measure_pmf x) n) ` K s\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>K s. integral\\<^sup>N (measure_pmf x) n = n s", "by auto"], ["proof (state)\nthis:\n  \\<exists>x\\<in>K s. integral\\<^sup>N (measure_pmf x) n = n s\n\ngoal (1 subgoal):\n 1. x s \\<le> enn2real (n s)", "}"], ["proof (state)\nthis:\n  ?sa3 \\<in> S1 \\<Longrightarrow>\n  \\<exists>x\\<in>K ?sa3. integral\\<^sup>N (measure_pmf x) n = n ?sa3\n\ngoal (1 subgoal):\n 1. x s \\<le> enn2real (n s)", "then"], ["proof (chain)\npicking this:\n  ?sa3 \\<in> S1 \\<Longrightarrow>\n  \\<exists>x\\<in>K ?sa3. integral\\<^sup>N (measure_pmf x) n = n ?sa3", "have \"\\<And>s. s \\<in> S \\<Longrightarrow> \\<exists>D\\<in>K s. s \\<in> S1 \\<longrightarrow> (\\<integral>\\<^sup>+x. n x \\<partial>D) = n s\""], ["proof (prove)\nusing this:\n  ?sa3 \\<in> S1 \\<Longrightarrow>\n  \\<exists>x\\<in>K ?sa3. integral\\<^sup>N (measure_pmf x) n = n ?sa3\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> S \\<Longrightarrow>\n       \\<exists>x\\<in>K s.\n          s \\<in> S1 \\<longrightarrow>\n          integral\\<^sup>N (measure_pmf x) n = n s", "using K_wf"], ["proof (prove)\nusing this:\n  ?sa3 \\<in> S1 \\<Longrightarrow>\n  \\<exists>x\\<in>K ?sa3. integral\\<^sup>N (measure_pmf x) n = n ?sa3\n  K ?s \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> S \\<Longrightarrow>\n       \\<exists>x\\<in>K s.\n          s \\<in> S1 \\<longrightarrow>\n          integral\\<^sup>N (measure_pmf x) n = n s", "by auto"], ["proof (state)\nthis:\n  ?s1 \\<in> S \\<Longrightarrow>\n  \\<exists>x\\<in>K ?s1.\n     ?s1 \\<in> S1 \\<longrightarrow>\n     integral\\<^sup>N (measure_pmf x) n = n ?s1\n\ngoal (1 subgoal):\n 1. x s \\<le> enn2real (n s)", "then"], ["proof (chain)\npicking this:\n  ?s1 \\<in> S \\<Longrightarrow>\n  \\<exists>x\\<in>K ?s1.\n     ?s1 \\<in> S1 \\<longrightarrow>\n     integral\\<^sup>N (measure_pmf x) n = n ?s1", "obtain sc where sch: \"\\<And>s. s \\<in> S \\<Longrightarrow> sc s \\<in> K s\"\n    and n_sc: \"\\<And>s. s \\<in> S1 \\<Longrightarrow> (\\<integral>\\<^sup>+x. n x \\<partial>sc s) = n s\""], ["proof (prove)\nusing this:\n  ?s1 \\<in> S \\<Longrightarrow>\n  \\<exists>x\\<in>K ?s1.\n     ?s1 \\<in> S1 \\<longrightarrow>\n     integral\\<^sup>N (measure_pmf x) n = n ?s1\n\ngoal (1 subgoal):\n 1. (\\<And>sc.\n        \\<lbrakk>\\<And>s. s \\<in> S \\<Longrightarrow> sc s \\<in> K s;\n         \\<And>s.\n            s \\<in> S1 \\<Longrightarrow>\n            integral\\<^sup>N (measure_pmf (sc s)) n = n s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis S1 subsetD)"], ["proof (state)\nthis:\n  ?s1 \\<in> S \\<Longrightarrow> sc ?s1 \\<in> K ?s1\n  ?s1 \\<in> S1 \\<Longrightarrow>\n  integral\\<^sup>N (measure_pmf (sc ?s1)) n = n ?s1\n\ngoal (1 subgoal):\n 1. x s \\<le> enn2real (n s)", "then"], ["proof (chain)\npicking this:\n  ?s1 \\<in> S \\<Longrightarrow> sc ?s1 \\<in> K ?s1\n  ?s1 \\<in> S1 \\<Longrightarrow>\n  integral\\<^sup>N (measure_pmf (sc ?s1)) n = n ?s1", "have sc_Pi: \"sc \\<in> Pi S K\""], ["proof (prove)\nusing this:\n  ?s1 \\<in> S \\<Longrightarrow> sc ?s1 \\<in> K ?s1\n  ?s1 \\<in> S1 \\<Longrightarrow>\n  integral\\<^sup>N (measure_pmf (sc ?s1)) n = n ?s1\n\ngoal (1 subgoal):\n 1. sc \\<in> Pi S K", "by auto"], ["proof (state)\nthis:\n  sc \\<in> Pi S K\n\ngoal (1 subgoal):\n 1. x s \\<le> enn2real (n s)", "define N where \"N = {s\\<in>S. n s = 0} \\<union> S2\""], ["proof (state)\nthis:\n  N = {s \\<in> S. n s = 0} \\<union> S2\n\ngoal (1 subgoal):\n 1. x s \\<le> enn2real (n s)", "with S2"], ["proof (chain)\npicking this:\n  S2 \\<subseteq> S\n  N = {s \\<in> S. n s = 0} \\<union> S2", "have N_S: \"N \\<subseteq> S\""], ["proof (prove)\nusing this:\n  S2 \\<subseteq> S\n  N = {s \\<in> S. n s = 0} \\<union> S2\n\ngoal (1 subgoal):\n 1. N \\<subseteq> S", "by auto"], ["proof (state)\nthis:\n  N \\<subseteq> S\n\ngoal (1 subgoal):\n 1. x s \\<le> enn2real (n s)", "{"], ["proof (state)\nthis:\n  N \\<subseteq> S\n\ngoal (1 subgoal):\n 1. x s \\<le> enn2real (n s)", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. x s \\<le> enn2real (n s)", "assume \"s \\<in> S\" \"s \\<notin> N\""], ["proof (state)\nthis:\n  s \\<in> S\n  s \\<notin> N\n\ngoal (1 subgoal):\n 1. x s \\<le> enn2real (n s)", "with n_nS12"], ["proof (chain)\npicking this:\n  \\<lbrakk>?s \\<in> S; ?s \\<notin> S1; ?s \\<notin> S2\\<rbrakk>\n  \\<Longrightarrow> n ?s = 0\n  s \\<in> S\n  s \\<notin> N", "have \"s \\<in> S1\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?s \\<in> S; ?s \\<notin> S1; ?s \\<notin> S2\\<rbrakk>\n  \\<Longrightarrow> n ?s = 0\n  s \\<in> S\n  s \\<notin> N\n\ngoal (1 subgoal):\n 1. s \\<in> S1", "by (auto simp add: N_def)"], ["proof (state)\nthis:\n  s \\<in> S1\n\ngoal (1 subgoal):\n 1. x s \\<le> enn2real (n s)", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?sa3 \\<in> S; ?sa3 \\<notin> N\\<rbrakk>\n  \\<Longrightarrow> ?sa3 \\<in> S1\n\ngoal (1 subgoal):\n 1. x s \\<le> enn2real (n s)", "note N = this"], ["proof (state)\nthis:\n  \\<lbrakk>?sa3 \\<in> S; ?sa3 \\<notin> N\\<rbrakk>\n  \\<Longrightarrow> ?sa3 \\<in> S1\n\ngoal (1 subgoal):\n 1. x s \\<le> enn2real (n s)", "let ?n = \"\\<lambda>s. enn2real (n s)\""], ["proof (state)\ngoal (1 subgoal):\n 1. x s \\<le> enn2real (n s)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. x s \\<le> enn2real (n s)", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> x s \\<le> enn2real (n s)\n 2. \\<not> ?P \\<Longrightarrow> x s \\<le> enn2real (n s)", "assume \"s \\<in> S - N\""], ["proof (state)\nthis:\n  s \\<in> S - N\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> x s \\<le> enn2real (n s)\n 2. \\<not> ?P \\<Longrightarrow> x s \\<le> enn2real (n s)", "then"], ["proof (chain)\npicking this:\n  s \\<in> S - N", "show ?thesis"], ["proof (prove)\nusing this:\n  s \\<in> S - N\n\ngoal (1 subgoal):\n 1. x s \\<le> enn2real (n s)", "proof (rule mono_les)"], ["proof (state)\ngoal (8 subgoals):\n 1. (\\<Union>s\\<in>S - N. set_pmf (?K s)) \\<subseteq> S - N \\<union> ?N\n 2. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       integrable (measure_pmf (?K s)) (\\<lambda>a. enn2real (n a))\n 3. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow> integrable (measure_pmf (?K s)) x\n 4. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       \\<exists>t\\<in>?N.\n          (s, t) \\<in> (SIGMA x:UNIV. set_pmf (?K x))\\<^sup>*\n 5. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       measure_pmf.expectation (?K s) (\\<lambda>t. enn2real (n t)) + ?c s\n       \\<le> enn2real (n s)\n 6. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       x s \\<le> measure_pmf.expectation (?K s) x + ?c s\n 7. \\<And>s. s \\<in> ?N \\<Longrightarrow> x s \\<le> enn2real (n s)\n 8. finite ((\\<lambda>xa. x xa - enn2real (n xa)) ` (S - N \\<union> ?N))", "show \"(\\<Union>x\\<in>S - N. set_pmf (sc x)) \\<subseteq> S - N \\<union> N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>x\\<in>S - N. set_pmf (sc x)) \\<subseteq> S - N \\<union> N", "using Pi_closed[OF sc_Pi]"], ["proof (prove)\nusing this:\n  \\<lbrakk>?s \\<in> S; ?t \\<in> set_pmf (sc ?s)\\<rbrakk>\n  \\<Longrightarrow> ?t \\<in> S\n\ngoal (1 subgoal):\n 1. (\\<Union>x\\<in>S - N. set_pmf (sc x)) \\<subseteq> S - N \\<union> N", "by auto"], ["proof (state)\nthis:\n  (\\<Union>x\\<in>S - N. set_pmf (sc x)) \\<subseteq> S - N \\<union> N\n\ngoal (7 subgoals):\n 1. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       integrable (measure_pmf (sc s)) (\\<lambda>a. enn2real (n a))\n 2. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow> integrable (measure_pmf (sc s)) x\n 3. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       \\<exists>t\\<in>N. (s, t) \\<in> (SIGMA x:UNIV. set_pmf (sc x))\\<^sup>*\n 4. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       measure_pmf.expectation (sc s) (\\<lambda>t. enn2real (n t)) + ?c s\n       \\<le> enn2real (n s)\n 5. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       x s \\<le> measure_pmf.expectation (sc s) x + ?c s\n 6. \\<And>s. s \\<in> N \\<Longrightarrow> x s \\<le> enn2real (n s)\n 7. finite ((\\<lambda>xa. x xa - enn2real (n xa)) ` (S - N \\<union> N))", "show \"finite ((\\<lambda>s. x s - ?n s) ` (S - N \\<union> N))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite ((\\<lambda>s. x s - enn2real (n s)) ` (S - N \\<union> N))", "using N_S"], ["proof (prove)\nusing this:\n  N \\<subseteq> S\n\ngoal (1 subgoal):\n 1. finite ((\\<lambda>s. x s - enn2real (n s)) ` (S - N \\<union> N))", "by (intro finite_imageI finite_subset[OF _ S_finite]) auto"], ["proof (state)\nthis:\n  finite ((\\<lambda>s. x s - enn2real (n s)) ` (S - N \\<union> N))\n\ngoal (6 subgoals):\n 1. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       integrable (measure_pmf (sc s)) (\\<lambda>a. enn2real (n a))\n 2. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow> integrable (measure_pmf (sc s)) x\n 3. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       \\<exists>t\\<in>N. (s, t) \\<in> (SIGMA x:UNIV. set_pmf (sc x))\\<^sup>*\n 4. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       measure_pmf.expectation (sc s) (\\<lambda>t. enn2real (n t)) + ?c s\n       \\<le> enn2real (n s)\n 5. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       x s \\<le> measure_pmf.expectation (sc s) x + ?c s\n 6. \\<And>s. s \\<in> N \\<Longrightarrow> x s \\<le> enn2real (n s)", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       integrable (measure_pmf (sc s)) (\\<lambda>a. enn2real (n a))\n 2. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow> integrable (measure_pmf (sc s)) x\n 3. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       \\<exists>t\\<in>N. (s, t) \\<in> (SIGMA x:UNIV. set_pmf (sc x))\\<^sup>*\n 4. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       measure_pmf.expectation (sc s) (\\<lambda>t. enn2real (n t)) + ?c s\n       \\<le> enn2real (n s)\n 5. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       x s \\<le> measure_pmf.expectation (sc s) x + ?c s\n 6. \\<And>s. s \\<in> N \\<Longrightarrow> x s \\<le> enn2real (n s)", "fix s"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       integrable (measure_pmf (sc s)) (\\<lambda>a. enn2real (n a))\n 2. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow> integrable (measure_pmf (sc s)) x\n 3. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       \\<exists>t\\<in>N. (s, t) \\<in> (SIGMA x:UNIV. set_pmf (sc x))\\<^sup>*\n 4. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       measure_pmf.expectation (sc s) (\\<lambda>t. enn2real (n t)) + ?c s\n       \\<le> enn2real (n s)\n 5. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       x s \\<le> measure_pmf.expectation (sc s) x + ?c s\n 6. \\<And>s. s \\<in> N \\<Longrightarrow> x s \\<le> enn2real (n s)", "assume \"s \\<in> N\""], ["proof (state)\nthis:\n  s \\<in> N\n\ngoal (6 subgoals):\n 1. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       integrable (measure_pmf (sc s)) (\\<lambda>a. enn2real (n a))\n 2. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow> integrable (measure_pmf (sc s)) x\n 3. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       \\<exists>t\\<in>N. (s, t) \\<in> (SIGMA x:UNIV. set_pmf (sc x))\\<^sup>*\n 4. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       measure_pmf.expectation (sc s) (\\<lambda>t. enn2real (n t)) + ?c s\n       \\<le> enn2real (n s)\n 5. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       x s \\<le> measure_pmf.expectation (sc s) x + ?c s\n 6. \\<And>s. s \\<in> N \\<Longrightarrow> x s \\<le> enn2real (n s)", "then"], ["proof (chain)\npicking this:\n  s \\<in> N", "show \"x s \\<le> ?n s\""], ["proof (prove)\nusing this:\n  s \\<in> N\n\ngoal (1 subgoal):\n 1. x s \\<le> enn2real (n s)", "by (auto simp: N_def solution_S2 solution_n0)"], ["proof (state)\nthis:\n  x s \\<le> enn2real (n s)\n\ngoal (5 subgoals):\n 1. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       integrable (measure_pmf (sc s)) (\\<lambda>a. enn2real (n a))\n 2. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow> integrable (measure_pmf (sc s)) x\n 3. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       \\<exists>t\\<in>N. (s, t) \\<in> (SIGMA x:UNIV. set_pmf (sc x))\\<^sup>*\n 4. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       measure_pmf.expectation (sc s) (\\<lambda>t. enn2real (n t)) + ?c s\n       \\<le> enn2real (n s)\n 5. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       x s \\<le> measure_pmf.expectation (sc s) x + ?c s", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       integrable (measure_pmf (sc s)) (\\<lambda>a. enn2real (n a))\n 2. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow> integrable (measure_pmf (sc s)) x\n 3. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       \\<exists>t\\<in>N. (s, t) \\<in> (SIGMA x:UNIV. set_pmf (sc x))\\<^sup>*\n 4. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       measure_pmf.expectation (sc s) (\\<lambda>t. enn2real (n t)) + ?c s\n       \\<le> enn2real (n s)\n 5. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       x s \\<le> measure_pmf.expectation (sc s) x + ?c s", "fix s"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       integrable (measure_pmf (sc s)) (\\<lambda>a. enn2real (n a))\n 2. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow> integrable (measure_pmf (sc s)) x\n 3. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       \\<exists>t\\<in>N. (s, t) \\<in> (SIGMA x:UNIV. set_pmf (sc x))\\<^sup>*\n 4. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       measure_pmf.expectation (sc s) (\\<lambda>t. enn2real (n t)) + ?c s\n       \\<le> enn2real (n s)\n 5. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       x s \\<le> measure_pmf.expectation (sc s) x + ?c s", "assume s: \"s \\<in> S - N\""], ["proof (state)\nthis:\n  s \\<in> S - N\n\ngoal (5 subgoals):\n 1. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       integrable (measure_pmf (sc s)) (\\<lambda>a. enn2real (n a))\n 2. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow> integrable (measure_pmf (sc s)) x\n 3. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       \\<exists>t\\<in>N. (s, t) \\<in> (SIGMA x:UNIV. set_pmf (sc x))\\<^sup>*\n 4. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       measure_pmf.expectation (sc s) (\\<lambda>t. enn2real (n t)) + ?c s\n       \\<le> enn2real (n s)\n 5. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       x s \\<le> measure_pmf.expectation (sc s) x + ?c s", "then"], ["proof (chain)\npicking this:\n  s \\<in> S - N", "show \"integrable (sc s) x\" \"integrable (sc s) ?n\""], ["proof (prove)\nusing this:\n  s \\<in> S - N\n\ngoal (1 subgoal):\n 1. integrable (measure_pmf (sc s)) x &&&\n    integrable (measure_pmf (sc s)) (\\<lambda>s. enn2real (n s))", "by (auto intro!: integrable_measure_pmf_finite set_pmf_finite sch)"], ["proof (state)\nthis:\n  integrable (measure_pmf (sc s)) x\n  integrable (measure_pmf (sc s)) (\\<lambda>s. enn2real (n s))\n\ngoal (3 subgoals):\n 1. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       \\<exists>t\\<in>N. (s, t) \\<in> (SIGMA x:UNIV. set_pmf (sc x))\\<^sup>*\n 2. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       measure_pmf.expectation (sc s) (\\<lambda>t. enn2real (n t)) + ?c s\n       \\<le> enn2real (n s)\n 3. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       x s \\<le> measure_pmf.expectation (sc s) x + ?c s", "from s"], ["proof (chain)\npicking this:\n  s \\<in> S - N", "have \"s \\<in> S1\" \"s \\<in> S\""], ["proof (prove)\nusing this:\n  s \\<in> S - N\n\ngoal (1 subgoal):\n 1. s \\<in> S1 &&& s \\<in> S", "using n_nS12[of s]"], ["proof (prove)\nusing this:\n  s \\<in> S - N\n  \\<lbrakk>s \\<in> S; s \\<notin> S1; s \\<notin> S2\\<rbrakk>\n  \\<Longrightarrow> n s = 0\n\ngoal (1 subgoal):\n 1. s \\<in> S1 &&& s \\<in> S", "by (auto simp: N_def)"], ["proof (state)\nthis:\n  s \\<in> S1\n  s \\<in> S\n\ngoal (3 subgoals):\n 1. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       \\<exists>t\\<in>N. (s, t) \\<in> (SIGMA x:UNIV. set_pmf (sc x))\\<^sup>*\n 2. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       measure_pmf.expectation (sc s) (\\<lambda>t. enn2real (n t)) + ?c s\n       \\<le> enn2real (n s)\n 3. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       x s \\<le> measure_pmf.expectation (sc s) x + ?c s", "then"], ["proof (chain)\npicking this:\n  s \\<in> S1\n  s \\<in> S", "have \"(\\<integral> t. ?n t \\<partial>sc s) = ?n s\""], ["proof (prove)\nusing this:\n  s \\<in> S1\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. measure_pmf.expectation (sc s) (\\<lambda>t. enn2real (n t)) =\n    enn2real (n s)", "apply (subst n_sc[symmetric, of s])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>s \\<in> S1; s \\<in> S\\<rbrakk> \\<Longrightarrow> s \\<in> S1\n 2. \\<lbrakk>s \\<in> S1; s \\<in> S\\<rbrakk>\n    \\<Longrightarrow> measure_pmf.expectation (sc s)\n                       (\\<lambda>t. enn2real (n t)) =\n                      enn2real (integral\\<^sup>N (measure_pmf (sc s)) n)", "apply simp_all"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<in> S1; s \\<in> S\\<rbrakk>\n    \\<Longrightarrow> measure_pmf.expectation (sc s)\n                       (\\<lambda>t. enn2real (n t)) =\n                      enn2real (integral\\<^sup>N (measure_pmf (sc s)) n)", "apply (subst integral_eq_nn_integral)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>s \\<in> S1; s \\<in> S\\<rbrakk>\n    \\<Longrightarrow> measure_pmf.random_variable (sc s) borel\n                       (\\<lambda>t. enn2real (n t))\n 2. \\<lbrakk>s \\<in> S1; s \\<in> S\\<rbrakk>\n    \\<Longrightarrow> AE x in measure_pmf (sc s). 0 \\<le> enn2real (n x)\n 3. \\<lbrakk>s \\<in> S1; s \\<in> S\\<rbrakk>\n    \\<Longrightarrow> enn2real\n                       (\\<integral>\\<^sup>+ x. ennreal (enn2real (n x))\n     \\<partial>measure_pmf (sc s)) =\n                      enn2real (integral\\<^sup>N (measure_pmf (sc s)) n)", "apply (auto simp: Pi_closed[OF sc_Pi] AE_measure_pmf_iff\n                    intro!: arg_cong[where f=enn2real] nn_integral_cong_AE real_n)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  measure_pmf.expectation (sc s) (\\<lambda>t. enn2real (n t)) =\n  enn2real (n s)\n\ngoal (3 subgoals):\n 1. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       \\<exists>t\\<in>N. (s, t) \\<in> (SIGMA x:UNIV. set_pmf (sc x))\\<^sup>*\n 2. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       measure_pmf.expectation (sc s) (\\<lambda>t. enn2real (n t)) + ?c s\n       \\<le> enn2real (n s)\n 3. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       x s \\<le> measure_pmf.expectation (sc s) x + ?c s", "then"], ["proof (chain)\npicking this:\n  measure_pmf.expectation (sc s) (\\<lambda>t. enn2real (n t)) =\n  enn2real (n s)", "show \"(\\<integral> t. ?n t \\<partial>sc s) + 0 \\<le> ?n s\""], ["proof (prove)\nusing this:\n  measure_pmf.expectation (sc s) (\\<lambda>t. enn2real (n t)) =\n  enn2real (n s)\n\ngoal (1 subgoal):\n 1. measure_pmf.expectation (sc s) (\\<lambda>t. enn2real (n t)) + 0\n    \\<le> enn2real (n s)", "by simp"], ["proof (state)\nthis:\n  measure_pmf.expectation (sc s) (\\<lambda>t. enn2real (n t)) + 0\n  \\<le> enn2real (n s)\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       \\<exists>t\\<in>N. (s, t) \\<in> (SIGMA x:UNIV. set_pmf (sc x))\\<^sup>*\n 2. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       x s \\<le> measure_pmf.expectation (sc s) x + 0", "show \"x s \\<le> (\\<integral> t. x t \\<partial>sc s) + 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x s \\<le> measure_pmf.expectation (sc s) x + 0", "using solution[OF \\<open>s \\<in> S1\\<close> sch[OF \\<open>s \\<in> S\\<close>]]"], ["proof (prove)\nusing this:\n  x s \\<le> (\\<Sum>t\\<in>S. pmf (sc s) t * x t)\n\ngoal (1 subgoal):\n 1. x s \\<le> measure_pmf.expectation (sc s) x + 0", "by (subst integral_measure_pmf[where A=S])\n           (auto intro: S_finite Pi_closed[OF sc_Pi] \\<open>s \\<in> S\\<close> simp: ac_simps)"], ["proof (state)\nthis:\n  x s \\<le> measure_pmf.expectation (sc s) x + 0\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       \\<exists>t\\<in>N. (s, t) \\<in> (SIGMA x:UNIV. set_pmf (sc x))\\<^sup>*", "define X where \"X = (SIGMA x:UNIV. sc x)\""], ["proof (state)\nthis:\n  X = (SIGMA x:UNIV. set_pmf (sc x))\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       s \\<in> S - N \\<Longrightarrow>\n       \\<exists>t\\<in>N. (s, t) \\<in> (SIGMA x:UNIV. set_pmf (sc x))\\<^sup>*", "show \"\\<exists>t\\<in>N. (s, t) \\<in> X\\<^sup>*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t\\<in>N. (s, t) \\<in> X\\<^sup>*", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>t\\<in>N. (s, t) \\<in> X\\<^sup>*) \\<Longrightarrow>\n    False", "assume \"\\<not> ?thesis\""], ["proof (state)\nthis:\n  \\<not> (\\<exists>t\\<in>N. (s, t) \\<in> X\\<^sup>*)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>t\\<in>N. (s, t) \\<in> X\\<^sup>*) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<exists>t\\<in>N. (s, t) \\<in> X\\<^sup>*)", "have *: \"\\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*\""], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>t\\<in>N. (s, t) \\<in> X\\<^sup>*)\n\ngoal (1 subgoal):\n 1. \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*", "by auto"], ["proof (state)\nthis:\n  \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>t\\<in>N. (s, t) \\<in> X\\<^sup>*) \\<Longrightarrow>\n    False", "with \\<open>s\\<in>S\\<close>"], ["proof (chain)\npicking this:\n  s \\<in> S\n  \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*", "have \"v (simple sc s) = 0\""], ["proof (prove)\nusing this:\n  s \\<in> S\n  \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*\n\ngoal (1 subgoal):\n 1. v (simple sc s) = 0", "proof (coinduction arbitrary: s rule: v_eq_0_coinduct)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>cfg.\n       \\<lbrakk>s \\<in> S; \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*;\n        \\<exists>s.\n           cfg = simple sc s \\<and>\n           s \\<in> S \\<and>\n           (\\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*)\\<rbrakk>\n       \\<Longrightarrow> cfg \\<in> valid_cfg\n 2. \\<And>cfg.\n       \\<lbrakk>s \\<in> S; \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*;\n        \\<exists>s.\n           cfg = simple sc s \\<and>\n           s \\<in> S \\<and>\n           (\\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*)\\<rbrakk>\n       \\<Longrightarrow> state cfg \\<notin> S2\n 3. \\<And>cfg' s.\n       \\<lbrakk>s \\<in> S; \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*;\n        state (simple sc s) \\<in> S1;\n        cfg' \\<in> set_pmf (K_cfg (simple sc s))\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>s.\n                             cfg' = simple sc s \\<and>\n                             s \\<in> S \\<and>\n                             (\\<forall>t\\<in>N.\n                                 (s, t) \\<notin> X\\<^sup>*)) \\<or>\n                         v cfg' = 0", "case (valid t)"], ["proof (state)\nthis:\n  s \\<in> S\n  \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*\n  \\<exists>s.\n     t = simple sc s \\<and>\n     s \\<in> S \\<and> (\\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*)\n\ngoal (3 subgoals):\n 1. \\<And>cfg.\n       \\<lbrakk>s \\<in> S; \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*;\n        \\<exists>s.\n           cfg = simple sc s \\<and>\n           s \\<in> S \\<and>\n           (\\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*)\\<rbrakk>\n       \\<Longrightarrow> cfg \\<in> valid_cfg\n 2. \\<And>cfg.\n       \\<lbrakk>s \\<in> S; \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*;\n        \\<exists>s.\n           cfg = simple sc s \\<and>\n           s \\<in> S \\<and>\n           (\\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*)\\<rbrakk>\n       \\<Longrightarrow> state cfg \\<notin> S2\n 3. \\<And>cfg' s.\n       \\<lbrakk>s \\<in> S; \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*;\n        state (simple sc s) \\<in> S1;\n        cfg' \\<in> set_pmf (K_cfg (simple sc s))\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>s.\n                             cfg' = simple sc s \\<and>\n                             s \\<in> S \\<and>\n                             (\\<forall>t\\<in>N.\n                                 (s, t) \\<notin> X\\<^sup>*)) \\<or>\n                         v cfg' = 0", "with sch"], ["proof (chain)\npicking this:\n  ?s1 \\<in> S \\<Longrightarrow> sc ?s1 \\<in> K ?s1\n  s \\<in> S\n  \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*\n  \\<exists>s.\n     t = simple sc s \\<and>\n     s \\<in> S \\<and> (\\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*)", "show ?case"], ["proof (prove)\nusing this:\n  ?s1 \\<in> S \\<Longrightarrow> sc ?s1 \\<in> K ?s1\n  s \\<in> S\n  \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*\n  \\<exists>s.\n     t = simple sc s \\<and>\n     s \\<in> S \\<and> (\\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*)\n\ngoal (1 subgoal):\n 1. t \\<in> valid_cfg", "by auto"], ["proof (state)\nthis:\n  t \\<in> valid_cfg\n\ngoal (2 subgoals):\n 1. \\<And>cfg.\n       \\<lbrakk>s \\<in> S; \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*;\n        \\<exists>s.\n           cfg = simple sc s \\<and>\n           s \\<in> S \\<and>\n           (\\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*)\\<rbrakk>\n       \\<Longrightarrow> state cfg \\<notin> S2\n 2. \\<And>cfg' s.\n       \\<lbrakk>s \\<in> S; \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*;\n        state (simple sc s) \\<in> S1;\n        cfg' \\<in> set_pmf (K_cfg (simple sc s))\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>s.\n                             cfg' = simple sc s \\<and>\n                             s \\<in> S \\<and>\n                             (\\<forall>t\\<in>N.\n                                 (s, t) \\<notin> X\\<^sup>*)) \\<or>\n                         v cfg' = 0", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>cfg.\n       \\<lbrakk>s \\<in> S; \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*;\n        \\<exists>s.\n           cfg = simple sc s \\<and>\n           s \\<in> S \\<and>\n           (\\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*)\\<rbrakk>\n       \\<Longrightarrow> state cfg \\<notin> S2\n 2. \\<And>cfg' s.\n       \\<lbrakk>s \\<in> S; \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*;\n        state (simple sc s) \\<in> S1;\n        cfg' \\<in> set_pmf (K_cfg (simple sc s))\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>s.\n                             cfg' = simple sc s \\<and>\n                             s \\<in> S \\<and>\n                             (\\<forall>t\\<in>N.\n                                 (s, t) \\<notin> X\\<^sup>*)) \\<or>\n                         v cfg' = 0", "case (nS2 s)"], ["proof (state)\nthis:\n  sa__ \\<in> S\n  \\<forall>t\\<in>N. (sa__, t) \\<notin> X\\<^sup>*\n  \\<exists>s.\n     s = simple sc s \\<and>\n     s \\<in> S \\<and> (\\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*)\n\ngoal (2 subgoals):\n 1. \\<And>cfg.\n       \\<lbrakk>sa__ \\<in> S;\n        \\<forall>t\\<in>N. (sa__, t) \\<notin> X\\<^sup>*;\n        \\<exists>s.\n           cfg = simple sc s \\<and>\n           s \\<in> S \\<and>\n           (\\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*)\\<rbrakk>\n       \\<Longrightarrow> state cfg \\<notin> S2\n 2. \\<And>cfg' s.\n       \\<lbrakk>s \\<in> S; \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*;\n        state (simple sc s) \\<in> S1;\n        cfg' \\<in> set_pmf (K_cfg (simple sc s))\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>s.\n                             cfg' = simple sc s \\<and>\n                             s \\<in> S \\<and>\n                             (\\<forall>t\\<in>N.\n                                 (s, t) \\<notin> X\\<^sup>*)) \\<or>\n                         v cfg' = 0", "then"], ["proof (chain)\npicking this:\n  sa__ \\<in> S\n  \\<forall>t\\<in>N. (sa__, t) \\<notin> X\\<^sup>*\n  \\<exists>s.\n     s = simple sc s \\<and>\n     s \\<in> S \\<and> (\\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*)", "show ?case"], ["proof (prove)\nusing this:\n  sa__ \\<in> S\n  \\<forall>t\\<in>N. (sa__, t) \\<notin> X\\<^sup>*\n  \\<exists>s.\n     s = simple sc s \\<and>\n     s \\<in> S \\<and> (\\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*)\n\ngoal (1 subgoal):\n 1. state s \\<notin> S2", "by (auto simp: N_def)"], ["proof (state)\nthis:\n  state s \\<notin> S2\n\ngoal (1 subgoal):\n 1. \\<And>cfg' s.\n       \\<lbrakk>s \\<in> S; \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*;\n        state (simple sc s) \\<in> S1;\n        cfg' \\<in> set_pmf (K_cfg (simple sc s))\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>s.\n                             cfg' = simple sc s \\<and>\n                             s \\<in> S \\<and>\n                             (\\<forall>t\\<in>N.\n                                 (s, t) \\<notin> X\\<^sup>*)) \\<or>\n                         v cfg' = 0", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>cfg' s.\n       \\<lbrakk>s \\<in> S; \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*;\n        state (simple sc s) \\<in> S1;\n        cfg' \\<in> set_pmf (K_cfg (simple sc s))\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>s.\n                             cfg' = simple sc s \\<and>\n                             s \\<in> S \\<and>\n                             (\\<forall>t\\<in>N.\n                                 (s, t) \\<notin> X\\<^sup>*)) \\<or>\n                         v cfg' = 0", "case (cont cfg s)"], ["proof (state)\nthis:\n  s \\<in> S\n  \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*\n  state (simple sc s) \\<in> S1\n  cfg \\<in> set_pmf (K_cfg (simple sc s))\n\ngoal (1 subgoal):\n 1. \\<And>cfg' s.\n       \\<lbrakk>s \\<in> S; \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*;\n        state (simple sc s) \\<in> S1;\n        cfg' \\<in> set_pmf (K_cfg (simple sc s))\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>s.\n                             cfg' = simple sc s \\<and>\n                             s \\<in> S \\<and>\n                             (\\<forall>t\\<in>N.\n                                 (s, t) \\<notin> X\\<^sup>*)) \\<or>\n                         v cfg' = 0", "then"], ["proof (chain)\npicking this:\n  s \\<in> S\n  \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*\n  state (simple sc s) \\<in> S1\n  cfg \\<in> set_pmf (K_cfg (simple sc s))", "have \"(s, state cfg) \\<in> X\\<^sup>*\""], ["proof (prove)\nusing this:\n  s \\<in> S\n  \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*\n  state (simple sc s) \\<in> S1\n  cfg \\<in> set_pmf (K_cfg (simple sc s))\n\ngoal (1 subgoal):\n 1. (s, state cfg) \\<in> X\\<^sup>*", "by (auto simp: X_def set_K_cfg)"], ["proof (state)\nthis:\n  (s, state cfg) \\<in> X\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>cfg' s.\n       \\<lbrakk>s \\<in> S; \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*;\n        state (simple sc s) \\<in> S1;\n        cfg' \\<in> set_pmf (K_cfg (simple sc s))\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>s.\n                             cfg' = simple sc s \\<and>\n                             s \\<in> S \\<and>\n                             (\\<forall>t\\<in>N.\n                                 (s, t) \\<notin> X\\<^sup>*)) \\<or>\n                         v cfg' = 0", "with cont"], ["proof (chain)\npicking this:\n  s \\<in> S\n  \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*\n  state (simple sc s) \\<in> S1\n  cfg \\<in> set_pmf (K_cfg (simple sc s))\n  (s, state cfg) \\<in> X\\<^sup>*", "show ?case"], ["proof (prove)\nusing this:\n  s \\<in> S\n  \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*\n  state (simple sc s) \\<in> S1\n  cfg \\<in> set_pmf (K_cfg (simple sc s))\n  (s, state cfg) \\<in> X\\<^sup>*\n\ngoal (1 subgoal):\n 1. (\\<exists>s.\n        cfg = simple sc s \\<and>\n        s \\<in> S \\<and>\n        (\\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*)) \\<or>\n    v cfg = 0", "by (auto simp: set_K_cfg intro!: exI intro: Pi_closed[OF sc_Pi])\n               (blast intro: rtrancl_trans)"], ["proof (state)\nthis:\n  (\\<exists>s.\n      cfg = simple sc s \\<and>\n      s \\<in> S \\<and> (\\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*)) \\<or>\n  v cfg = 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  v (simple sc s) = 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>t\\<in>N. (s, t) \\<in> X\\<^sup>*) \\<Longrightarrow>\n    False", "from n_eq_0[OF \\<open>s \\<in> S\\<close> simple_cfg_on this]"], ["proof (chain)\npicking this:\n  sc \\<in> Pi S K \\<Longrightarrow> n s = 0", "have \"n s = 0\""], ["proof (prove)\nusing this:\n  sc \\<in> Pi S K \\<Longrightarrow> n s = 0\n\ngoal (1 subgoal):\n 1. n s = 0", "by (auto simp: sc_Pi)"], ["proof (state)\nthis:\n  n s = 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>t\\<in>N. (s, t) \\<in> X\\<^sup>*) \\<Longrightarrow>\n    False", "with \\<open>s\\<in>S\\<close>"], ["proof (chain)\npicking this:\n  s \\<in> S\n  n s = 0", "have \"s\\<in>N\""], ["proof (prove)\nusing this:\n  s \\<in> S\n  n s = 0\n\ngoal (1 subgoal):\n 1. s \\<in> N", "by (auto simp: N_def)"], ["proof (state)\nthis:\n  s \\<in> N\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>t\\<in>N. (s, t) \\<in> X\\<^sup>*) \\<Longrightarrow>\n    False", "with *"], ["proof (chain)\npicking this:\n  \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*\n  s \\<in> N", "show False"], ["proof (prove)\nusing this:\n  \\<forall>t\\<in>N. (s, t) \\<notin> X\\<^sup>*\n  s \\<in> N\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>t\\<in>N. (s, t) \\<in> X\\<^sup>*\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x s \\<le> enn2real (n s)\n\ngoal (1 subgoal):\n 1. s \\<notin> S - N \\<Longrightarrow> x s \\<le> enn2real (n s)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. s \\<notin> S - N \\<Longrightarrow> x s \\<le> enn2real (n s)", "assume \"s \\<notin> S - N\""], ["proof (state)\nthis:\n  s \\<notin> S - N\n\ngoal (1 subgoal):\n 1. s \\<notin> S - N \\<Longrightarrow> x s \\<le> enn2real (n s)", "with \\<open>s \\<in> S\\<close>"], ["proof (chain)\npicking this:\n  s \\<in> S\n  s \\<notin> S - N", "show \"x s \\<le> ?n s\""], ["proof (prove)\nusing this:\n  s \\<in> S\n  s \\<notin> S - N\n\ngoal (1 subgoal):\n 1. x s \\<le> enn2real (n s)", "by (auto simp: N_def solution_n0 solution_S2)"], ["proof (state)\nthis:\n  x s \\<le> enn2real (n s)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x s \\<le> enn2real (n s)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}