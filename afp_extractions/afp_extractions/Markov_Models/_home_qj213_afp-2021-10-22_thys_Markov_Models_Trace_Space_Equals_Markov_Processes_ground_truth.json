{"file_name": "/home/qj213/afp-2021-10-22/thys/Markov_Models/Trace_Space_Equals_Markov_Processes.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Markov_Models", "problem_names": ["lemma I_in_S:\n  assumes \"pmf I s \\<noteq> 0\" shows \"s \\<in> S\"", "lemma pmf_K:\n  assumes n: \"0 < \\<P>(\\<omega> in M. X n \\<omega> = s)\"\n  shows \"pmf (K s) t = \\<P>(\\<omega> in M. X (Suc n) \\<omega> = t \\<bar> X n \\<omega> = s)\"", "lemma pmf_K2:\n  \"(\\<And>n. \\<P>(\\<omega> in M. X n \\<omega> = s) = 0) \\<Longrightarrow> pmf (K s) t = indicator {t} s\"", "lemma bind_I_K_eq_M: \"K.T' I = distr M K.S (\\<lambda>\\<omega>. to_stream (\\<lambda>n. X n \\<omega>))\" (is \"_ = ?D\")", "lemma (in MC_syntax) is_THDTMC:\n  fixes I :: \"'s pmf\"\n  defines \"U \\<equiv> (SIGMA s:UNIV. K s)\\<^sup>* `` I\"\n  shows \"Time_Homogeneous_Discrete_Markov_Process (T' I) U (\\<lambda>n \\<omega>. \\<omega> !! n)\""], "translations": [["", "lemma I_in_S:\n  assumes \"pmf I s \\<noteq> 0\" shows \"s \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> S", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. s \\<in> S", "from \\<open>pmf I s \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  pmf I s \\<noteq> 0", "have \"0 \\<noteq> \\<P>(x in M. X 0 x = s)\""], ["proof (prove)\nusing this:\n  pmf I s \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 \\<noteq> prob {x \\<in> space M. X 0 x = s}", "by transfer (auto simp: measure_distr vimage_def Int_def conj_commute)"], ["proof (state)\nthis:\n  0 \\<noteq> prob {x \\<in> space M. X 0 x = s}\n\ngoal (1 subgoal):\n 1. s \\<in> S", "also"], ["proof (state)\nthis:\n  0 \\<noteq> prob {x \\<in> space M. X 0 x = s}\n\ngoal (1 subgoal):\n 1. s \\<in> S", "have \"\\<P>(x in M. X 0 x = s) = \\<P>(x in M. X 0 x = s \\<and> s \\<in> S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob {x \\<in> space M. X 0 x = s} =\n    prob {x \\<in> space M. X 0 x = s \\<and> s \\<in> S}", "using S(2)[of 0]"], ["proof (prove)\nusing this:\n  AE x in M. X 0 x \\<in> S\n\ngoal (1 subgoal):\n 1. prob {x \\<in> space M. X 0 x = s} =\n    prob {x \\<in> space M. X 0 x = s \\<and> s \\<in> S}", "by (intro M.finite_measure_eq_AE) auto"], ["proof (state)\nthis:\n  prob {x \\<in> space M. X 0 x = s} =\n  prob {x \\<in> space M. X 0 x = s \\<and> s \\<in> S}\n\ngoal (1 subgoal):\n 1. s \\<in> S", "finally"], ["proof (chain)\npicking this:\n  0 \\<noteq> prob {x \\<in> space M. X 0 x = s \\<and> s \\<in> S}", "show ?thesis"], ["proof (prove)\nusing this:\n  0 \\<noteq> prob {x \\<in> space M. X 0 x = s \\<and> s \\<in> S}\n\ngoal (1 subgoal):\n 1. s \\<in> S", "by (cases \"s \\<in> S\") auto"], ["proof (state)\nthis:\n  s \\<in> S\n\ngoal:\nNo subgoals!", "qed"], ["", "lift_definition K :: \"'s \\<Rightarrow> 's pmf\" is\n  \"\\<lambda>s. with (\\<lambda>n. \\<P>(\\<omega> in M. X n \\<omega> = s) \\<noteq> 0)\n     (\\<lambda>n. distr (uniform_measure M {\\<omega>\\<in>space M. X n \\<omega> = s}) (count_space UNIV) (X (Suc n)))\n     (uniform_measure (count_space UNIV) {s})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       prob_space\n        (with\n          (\\<lambda>n.\n              prob {\\<omega> \\<in> space M. X n \\<omega> = s} \\<noteq> 0)\n          (\\<lambda>n.\n              distr\n               (uniform_measure M\n                 {\\<omega> \\<in> space M. X n \\<omega> = s})\n               (count_space UNIV) (X (Suc n)))\n          (uniform_measure (count_space UNIV) {s})) \\<and>\n       sets\n        (with\n          (\\<lambda>n.\n              prob {\\<omega> \\<in> space M. X n \\<omega> = s} \\<noteq> 0)\n          (\\<lambda>n.\n              distr\n               (uniform_measure M\n                 {\\<omega> \\<in> space M. X n \\<omega> = s})\n               (count_space UNIV) (X (Suc n)))\n          (uniform_measure (count_space UNIV) {s})) =\n       UNIV \\<and>\n       (AE x in with\n                 (\\<lambda>n.\n                     prob\n                      {\\<omega> \\<in> space M. X n \\<omega> = s} \\<noteq>\n                     0)\n                 (\\<lambda>n.\n                     distr\n                      (uniform_measure M\n                        {\\<omega> \\<in> space M. X n \\<omega> = s})\n                      (count_space UNIV) (X (Suc n)))\n                 (uniform_measure (count_space UNIV)\n                   {s}). Sigma_Algebra.measure\n                          (with\n                            (\\<lambda>n.\n                                prob\n                                 {\\<omega> \\<in> space M.\n                                  X n \\<omega> = s} \\<noteq>\n                                0)\n                            (\\<lambda>n.\n                                distr\n                                 (uniform_measure M\n                                   {\\<omega> \\<in> space M.\n                                    X n \\<omega> = s})\n                                 (count_space UNIV) (X (Suc n)))\n                            (uniform_measure (count_space UNIV) {s}))\n                          {x} \\<noteq>\n                         0)", "proof (rule withI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s.\n       (\\<And>x.\n           \\<not> prob {\\<omega> \\<in> space M. X x \\<omega> = s} \\<noteq>\n                  0) \\<Longrightarrow>\n       prob_space (uniform_measure (count_space UNIV) {s}) \\<and>\n       sets (uniform_measure (count_space UNIV) {s}) = UNIV \\<and>\n       (AE x in uniform_measure (count_space UNIV)\n                 {s}. Sigma_Algebra.measure\n                       (uniform_measure (count_space UNIV) {s}) {x} \\<noteq>\n                      0)\n 2. \\<And>s x.\n       prob {\\<omega> \\<in> space M. X x \\<omega> = s} \\<noteq>\n       0 \\<Longrightarrow>\n       prob_space\n        (distr\n          (uniform_measure M {\\<omega> \\<in> space M. X x \\<omega> = s})\n          (count_space UNIV) (X (Suc x))) \\<and>\n       sets\n        (distr\n          (uniform_measure M {\\<omega> \\<in> space M. X x \\<omega> = s})\n          (count_space UNIV) (X (Suc x))) =\n       UNIV \\<and>\n       (AE xa in distr\n                  (uniform_measure M\n                    {\\<omega> \\<in> space M. X x \\<omega> = s})\n                  (count_space UNIV)\n                  (X (Suc x)). Sigma_Algebra.measure\n                                (distr\n                                  (uniform_measure M\n                                    {\\<omega> \\<in> space M.\n                                     X x \\<omega> = s})\n                                  (count_space UNIV) (X (Suc x)))\n                                {xa} \\<noteq>\n                               0)", "fix s n"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s.\n       (\\<And>x.\n           \\<not> prob {\\<omega> \\<in> space M. X x \\<omega> = s} \\<noteq>\n                  0) \\<Longrightarrow>\n       prob_space (uniform_measure (count_space UNIV) {s}) \\<and>\n       sets (uniform_measure (count_space UNIV) {s}) = UNIV \\<and>\n       (AE x in uniform_measure (count_space UNIV)\n                 {s}. Sigma_Algebra.measure\n                       (uniform_measure (count_space UNIV) {s}) {x} \\<noteq>\n                      0)\n 2. \\<And>s x.\n       prob {\\<omega> \\<in> space M. X x \\<omega> = s} \\<noteq>\n       0 \\<Longrightarrow>\n       prob_space\n        (distr\n          (uniform_measure M {\\<omega> \\<in> space M. X x \\<omega> = s})\n          (count_space UNIV) (X (Suc x))) \\<and>\n       sets\n        (distr\n          (uniform_measure M {\\<omega> \\<in> space M. X x \\<omega> = s})\n          (count_space UNIV) (X (Suc x))) =\n       UNIV \\<and>\n       (AE xa in distr\n                  (uniform_measure M\n                    {\\<omega> \\<in> space M. X x \\<omega> = s})\n                  (count_space UNIV)\n                  (X (Suc x)). Sigma_Algebra.measure\n                                (distr\n                                  (uniform_measure M\n                                    {\\<omega> \\<in> space M.\n                                     X x \\<omega> = s})\n                                  (count_space UNIV) (X (Suc x)))\n                                {xa} \\<noteq>\n                               0)", "assume *: \"\\<P>(\\<omega> in M. X n \\<omega> = s) \\<noteq> 0\""], ["proof (state)\nthis:\n  prob {\\<omega> \\<in> space M. X n \\<omega> = s} \\<noteq> 0\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       (\\<And>x.\n           \\<not> prob {\\<omega> \\<in> space M. X x \\<omega> = s} \\<noteq>\n                  0) \\<Longrightarrow>\n       prob_space (uniform_measure (count_space UNIV) {s}) \\<and>\n       sets (uniform_measure (count_space UNIV) {s}) = UNIV \\<and>\n       (AE x in uniform_measure (count_space UNIV)\n                 {s}. Sigma_Algebra.measure\n                       (uniform_measure (count_space UNIV) {s}) {x} \\<noteq>\n                      0)\n 2. \\<And>s x.\n       prob {\\<omega> \\<in> space M. X x \\<omega> = s} \\<noteq>\n       0 \\<Longrightarrow>\n       prob_space\n        (distr\n          (uniform_measure M {\\<omega> \\<in> space M. X x \\<omega> = s})\n          (count_space UNIV) (X (Suc x))) \\<and>\n       sets\n        (distr\n          (uniform_measure M {\\<omega> \\<in> space M. X x \\<omega> = s})\n          (count_space UNIV) (X (Suc x))) =\n       UNIV \\<and>\n       (AE xa in distr\n                  (uniform_measure M\n                    {\\<omega> \\<in> space M. X x \\<omega> = s})\n                  (count_space UNIV)\n                  (X (Suc x)). Sigma_Algebra.measure\n                                (distr\n                                  (uniform_measure M\n                                    {\\<omega> \\<in> space M.\n                                     X x \\<omega> = s})\n                                  (count_space UNIV) (X (Suc x)))\n                                {xa} \\<noteq>\n                               0)", "let ?D = \"distr (uniform_measure M {\\<omega>\\<in>space M. X n \\<omega> = s}) (count_space UNIV) (X (Suc n))\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s.\n       (\\<And>x.\n           \\<not> prob {\\<omega> \\<in> space M. X x \\<omega> = s} \\<noteq>\n                  0) \\<Longrightarrow>\n       prob_space (uniform_measure (count_space UNIV) {s}) \\<and>\n       sets (uniform_measure (count_space UNIV) {s}) = UNIV \\<and>\n       (AE x in uniform_measure (count_space UNIV)\n                 {s}. Sigma_Algebra.measure\n                       (uniform_measure (count_space UNIV) {s}) {x} \\<noteq>\n                      0)\n 2. \\<And>s x.\n       prob {\\<omega> \\<in> space M. X x \\<omega> = s} \\<noteq>\n       0 \\<Longrightarrow>\n       prob_space\n        (distr\n          (uniform_measure M {\\<omega> \\<in> space M. X x \\<omega> = s})\n          (count_space UNIV) (X (Suc x))) \\<and>\n       sets\n        (distr\n          (uniform_measure M {\\<omega> \\<in> space M. X x \\<omega> = s})\n          (count_space UNIV) (X (Suc x))) =\n       UNIV \\<and>\n       (AE xa in distr\n                  (uniform_measure M\n                    {\\<omega> \\<in> space M. X x \\<omega> = s})\n                  (count_space UNIV)\n                  (X (Suc x)). Sigma_Algebra.measure\n                                (distr\n                                  (uniform_measure M\n                                    {\\<omega> \\<in> space M.\n                                     X x \\<omega> = s})\n                                  (count_space UNIV) (X (Suc x)))\n                                {xa} \\<noteq>\n                               0)", "have D: \"prob_space ?D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob_space\n     (distr (uniform_measure M {\\<omega> \\<in> space M. X n \\<omega> = s})\n       (count_space UNIV) (X (Suc n)))", "by (intro prob_space.prob_space_distr prob_space_uniform_measure)\n       (auto simp: M.emeasure_eq_measure *)"], ["proof (state)\nthis:\n  prob_space\n   (distr (uniform_measure M {\\<omega> \\<in> space M. X n \\<omega> = s})\n     (count_space UNIV) (X (Suc n)))\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       (\\<And>x.\n           \\<not> prob {\\<omega> \\<in> space M. X x \\<omega> = s} \\<noteq>\n                  0) \\<Longrightarrow>\n       prob_space (uniform_measure (count_space UNIV) {s}) \\<and>\n       sets (uniform_measure (count_space UNIV) {s}) = UNIV \\<and>\n       (AE x in uniform_measure (count_space UNIV)\n                 {s}. Sigma_Algebra.measure\n                       (uniform_measure (count_space UNIV) {s}) {x} \\<noteq>\n                      0)\n 2. \\<And>s x.\n       prob {\\<omega> \\<in> space M. X x \\<omega> = s} \\<noteq>\n       0 \\<Longrightarrow>\n       prob_space\n        (distr\n          (uniform_measure M {\\<omega> \\<in> space M. X x \\<omega> = s})\n          (count_space UNIV) (X (Suc x))) \\<and>\n       sets\n        (distr\n          (uniform_measure M {\\<omega> \\<in> space M. X x \\<omega> = s})\n          (count_space UNIV) (X (Suc x))) =\n       UNIV \\<and>\n       (AE xa in distr\n                  (uniform_measure M\n                    {\\<omega> \\<in> space M. X x \\<omega> = s})\n                  (count_space UNIV)\n                  (X (Suc x)). Sigma_Algebra.measure\n                                (distr\n                                  (uniform_measure M\n                                    {\\<omega> \\<in> space M.\n                                     X x \\<omega> = s})\n                                  (count_space UNIV) (X (Suc x)))\n                                {xa} \\<noteq>\n                               0)", "then"], ["proof (chain)\npicking this:\n  prob_space\n   (distr (uniform_measure M {\\<omega> \\<in> space M. X n \\<omega> = s})\n     (count_space UNIV) (X (Suc n)))", "interpret D: prob_space ?D"], ["proof (prove)\nusing this:\n  prob_space\n   (distr (uniform_measure M {\\<omega> \\<in> space M. X n \\<omega> = s})\n     (count_space UNIV) (X (Suc n)))\n\ngoal (1 subgoal):\n 1. prob_space\n     (distr (uniform_measure M {\\<omega> \\<in> space M. X n \\<omega> = s})\n       (count_space UNIV) (X (Suc n)))", "."], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s.\n       (\\<And>x.\n           \\<not> prob {\\<omega> \\<in> space M. X x \\<omega> = s} \\<noteq>\n                  0) \\<Longrightarrow>\n       prob_space (uniform_measure (count_space UNIV) {s}) \\<and>\n       sets (uniform_measure (count_space UNIV) {s}) = UNIV \\<and>\n       (AE x in uniform_measure (count_space UNIV)\n                 {s}. Sigma_Algebra.measure\n                       (uniform_measure (count_space UNIV) {s}) {x} \\<noteq>\n                      0)\n 2. \\<And>s x.\n       prob {\\<omega> \\<in> space M. X x \\<omega> = s} \\<noteq>\n       0 \\<Longrightarrow>\n       prob_space\n        (distr\n          (uniform_measure M {\\<omega> \\<in> space M. X x \\<omega> = s})\n          (count_space UNIV) (X (Suc x))) \\<and>\n       sets\n        (distr\n          (uniform_measure M {\\<omega> \\<in> space M. X x \\<omega> = s})\n          (count_space UNIV) (X (Suc x))) =\n       UNIV \\<and>\n       (AE xa in distr\n                  (uniform_measure M\n                    {\\<omega> \\<in> space M. X x \\<omega> = s})\n                  (count_space UNIV)\n                  (X (Suc x)). Sigma_Algebra.measure\n                                (distr\n                                  (uniform_measure M\n                                    {\\<omega> \\<in> space M.\n                                     X x \\<omega> = s})\n                                  (count_space UNIV) (X (Suc x)))\n                                {xa} \\<noteq>\n                               0)", "have sets_D: \"sets ?D = UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D.events = UNIV", "by simp"], ["proof (state)\nthis:\n  D.events = UNIV\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       (\\<And>x.\n           \\<not> prob {\\<omega> \\<in> space M. X x \\<omega> = s} \\<noteq>\n                  0) \\<Longrightarrow>\n       prob_space (uniform_measure (count_space UNIV) {s}) \\<and>\n       sets (uniform_measure (count_space UNIV) {s}) = UNIV \\<and>\n       (AE x in uniform_measure (count_space UNIV)\n                 {s}. Sigma_Algebra.measure\n                       (uniform_measure (count_space UNIV) {s}) {x} \\<noteq>\n                      0)\n 2. \\<And>s x.\n       prob {\\<omega> \\<in> space M. X x \\<omega> = s} \\<noteq>\n       0 \\<Longrightarrow>\n       prob_space\n        (distr\n          (uniform_measure M {\\<omega> \\<in> space M. X x \\<omega> = s})\n          (count_space UNIV) (X (Suc x))) \\<and>\n       sets\n        (distr\n          (uniform_measure M {\\<omega> \\<in> space M. X x \\<omega> = s})\n          (count_space UNIV) (X (Suc x))) =\n       UNIV \\<and>\n       (AE xa in distr\n                  (uniform_measure M\n                    {\\<omega> \\<in> space M. X x \\<omega> = s})\n                  (count_space UNIV)\n                  (X (Suc x)). Sigma_Algebra.measure\n                                (distr\n                                  (uniform_measure M\n                                    {\\<omega> \\<in> space M.\n                                     X x \\<omega> = s})\n                                  (count_space UNIV) (X (Suc x)))\n                                {xa} \\<noteq>\n                               0)", "moreover"], ["proof (state)\nthis:\n  D.events = UNIV\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       (\\<And>x.\n           \\<not> prob {\\<omega> \\<in> space M. X x \\<omega> = s} \\<noteq>\n                  0) \\<Longrightarrow>\n       prob_space (uniform_measure (count_space UNIV) {s}) \\<and>\n       sets (uniform_measure (count_space UNIV) {s}) = UNIV \\<and>\n       (AE x in uniform_measure (count_space UNIV)\n                 {s}. Sigma_Algebra.measure\n                       (uniform_measure (count_space UNIV) {s}) {x} \\<noteq>\n                      0)\n 2. \\<And>s x.\n       prob {\\<omega> \\<in> space M. X x \\<omega> = s} \\<noteq>\n       0 \\<Longrightarrow>\n       prob_space\n        (distr\n          (uniform_measure M {\\<omega> \\<in> space M. X x \\<omega> = s})\n          (count_space UNIV) (X (Suc x))) \\<and>\n       sets\n        (distr\n          (uniform_measure M {\\<omega> \\<in> space M. X x \\<omega> = s})\n          (count_space UNIV) (X (Suc x))) =\n       UNIV \\<and>\n       (AE xa in distr\n                  (uniform_measure M\n                    {\\<omega> \\<in> space M. X x \\<omega> = s})\n                  (count_space UNIV)\n                  (X (Suc x)). Sigma_Algebra.measure\n                                (distr\n                                  (uniform_measure M\n                                    {\\<omega> \\<in> space M.\n                                     X x \\<omega> = s})\n                                  (count_space UNIV) (X (Suc x)))\n                                {xa} \\<noteq>\n                               0)", "have \"AE x in ?D. measure ?D {x} \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE x in distr\n             (uniform_measure M {\\<omega> \\<in> space M. X n \\<omega> = s})\n             (count_space UNIV) (X (Suc n)). D.prob {x} \\<noteq> 0", "unfolding D.AE_support_countable[OF sets_D]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>S.\n       countable S \\<and>\n       (AE x in distr\n                 (uniform_measure M\n                   {\\<omega> \\<in> space M. X n \\<omega> = s})\n                 (count_space UNIV) (X (Suc n)). x \\<in> S)", "proof (intro exI[of _ S] conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. countable S\n 2. AE x in distr\n             (uniform_measure M {\\<omega> \\<in> space M. X n \\<omega> = s})\n             (count_space UNIV) (X (Suc n)). x \\<in> S", "show \"countable S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. countable S", "by (rule S)"], ["proof (state)\nthis:\n  countable S\n\ngoal (1 subgoal):\n 1. AE x in distr\n             (uniform_measure M {\\<omega> \\<in> space M. X n \\<omega> = s})\n             (count_space UNIV) (X (Suc n)). x \\<in> S", "show \"AE x in ?D. x \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE x in distr\n             (uniform_measure M {\\<omega> \\<in> space M. X n \\<omega> = s})\n             (count_space UNIV) (X (Suc n)). x \\<in> S", "using * S(2)[of \"Suc n\"]"], ["proof (prove)\nusing this:\n  prob {\\<omega> \\<in> space M. X n \\<omega> = s} \\<noteq> 0\n  AE x in M. X (Suc n) x \\<in> S\n\ngoal (1 subgoal):\n 1. AE x in distr\n             (uniform_measure M {\\<omega> \\<in> space M. X n \\<omega> = s})\n             (count_space UNIV) (X (Suc n)). x \\<in> S", "by (auto simp add: AE_distr_iff AE_uniform_measure M.emeasure_eq_measure)"], ["proof (state)\nthis:\n  AE x in distr\n           (uniform_measure M {\\<omega> \\<in> space M. X n \\<omega> = s})\n           (count_space UNIV) (X (Suc n)). x \\<in> S\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  AE x in distr\n           (uniform_measure M {\\<omega> \\<in> space M. X n \\<omega> = s})\n           (count_space UNIV) (X (Suc n)). D.prob {x} \\<noteq> 0\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       (\\<And>x.\n           \\<not> prob {\\<omega> \\<in> space M. X x \\<omega> = s} \\<noteq>\n                  0) \\<Longrightarrow>\n       prob_space (uniform_measure (count_space UNIV) {s}) \\<and>\n       sets (uniform_measure (count_space UNIV) {s}) = UNIV \\<and>\n       (AE x in uniform_measure (count_space UNIV)\n                 {s}. Sigma_Algebra.measure\n                       (uniform_measure (count_space UNIV) {s}) {x} \\<noteq>\n                      0)\n 2. \\<And>s x.\n       prob {\\<omega> \\<in> space M. X x \\<omega> = s} \\<noteq>\n       0 \\<Longrightarrow>\n       prob_space\n        (distr\n          (uniform_measure M {\\<omega> \\<in> space M. X x \\<omega> = s})\n          (count_space UNIV) (X (Suc x))) \\<and>\n       sets\n        (distr\n          (uniform_measure M {\\<omega> \\<in> space M. X x \\<omega> = s})\n          (count_space UNIV) (X (Suc x))) =\n       UNIV \\<and>\n       (AE xa in distr\n                  (uniform_measure M\n                    {\\<omega> \\<in> space M. X x \\<omega> = s})\n                  (count_space UNIV)\n                  (X (Suc x)). Sigma_Algebra.measure\n                                (distr\n                                  (uniform_measure M\n                                    {\\<omega> \\<in> space M.\n                                     X x \\<omega> = s})\n                                  (count_space UNIV) (X (Suc x)))\n                                {xa} \\<noteq>\n                               0)", "ultimately"], ["proof (chain)\npicking this:\n  D.events = UNIV\n  AE x in distr\n           (uniform_measure M {\\<omega> \\<in> space M. X n \\<omega> = s})\n           (count_space UNIV) (X (Suc n)). D.prob {x} \\<noteq> 0", "show \"prob_space ?D \\<and> sets ?D = UNIV \\<and> (AE x in ?D. measure ?D {x} \\<noteq> 0)\""], ["proof (prove)\nusing this:\n  D.events = UNIV\n  AE x in distr\n           (uniform_measure M {\\<omega> \\<in> space M. X n \\<omega> = s})\n           (count_space UNIV) (X (Suc n)). D.prob {x} \\<noteq> 0\n\ngoal (1 subgoal):\n 1. prob_space\n     (distr (uniform_measure M {\\<omega> \\<in> space M. X n \\<omega> = s})\n       (count_space UNIV) (X (Suc n))) \\<and>\n    D.events = UNIV \\<and>\n    (AE x in distr\n              (uniform_measure M {\\<omega> \\<in> space M. X n \\<omega> = s})\n              (count_space UNIV) (X (Suc n)). D.prob {x} \\<noteq> 0)", "using D"], ["proof (prove)\nusing this:\n  D.events = UNIV\n  AE x in distr\n           (uniform_measure M {\\<omega> \\<in> space M. X n \\<omega> = s})\n           (count_space UNIV) (X (Suc n)). D.prob {x} \\<noteq> 0\n  prob_space\n   (distr (uniform_measure M {\\<omega> \\<in> space M. X n \\<omega> = s})\n     (count_space UNIV) (X (Suc n)))\n\ngoal (1 subgoal):\n 1. prob_space\n     (distr (uniform_measure M {\\<omega> \\<in> space M. X n \\<omega> = s})\n       (count_space UNIV) (X (Suc n))) \\<and>\n    D.events = UNIV \\<and>\n    (AE x in distr\n              (uniform_measure M {\\<omega> \\<in> space M. X n \\<omega> = s})\n              (count_space UNIV) (X (Suc n)). D.prob {x} \\<noteq> 0)", "by blast"], ["proof (state)\nthis:\n  prob_space\n   (distr (uniform_measure M {\\<omega> \\<in> space M. X n \\<omega> = s})\n     (count_space UNIV) (X (Suc n))) \\<and>\n  D.events = UNIV \\<and>\n  (AE x in distr\n            (uniform_measure M {\\<omega> \\<in> space M. X n \\<omega> = s})\n            (count_space UNIV) (X (Suc n)). D.prob {x} \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       (\\<And>x.\n           \\<not> prob {\\<omega> \\<in> space M. X x \\<omega> = s} \\<noteq>\n                  0) \\<Longrightarrow>\n       prob_space (uniform_measure (count_space UNIV) {s}) \\<and>\n       sets (uniform_measure (count_space UNIV) {s}) = UNIV \\<and>\n       (AE x in uniform_measure (count_space UNIV)\n                 {s}. Sigma_Algebra.measure\n                       (uniform_measure (count_space UNIV) {s}) {x} \\<noteq>\n                      0)", "qed (auto intro!: prob_space_uniform_measure AE_uniform_measureI)"], ["", "lemma pmf_K:\n  assumes n: \"0 < \\<P>(\\<omega> in M. X n \\<omega> = s)\"\n  shows \"pmf (K s) t = \\<P>(\\<omega> in M. X (Suc n) \\<omega> = t \\<bar> X n \\<omega> = s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmf (K s) t =\n    cond_prob M (\\<lambda>\\<omega>. X (Suc n) \\<omega> = t)\n     (\\<lambda>\\<omega>. X n \\<omega> = s)", "proof (transfer fixing: n s t)"], ["proof (state)\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure\n     (with\n       (\\<lambda>n.\n           prob {\\<omega> \\<in> space M. X n \\<omega> = s} \\<noteq> 0)\n       (\\<lambda>n.\n           distr\n            (uniform_measure M {\\<omega> \\<in> space M. X n \\<omega> = s})\n            (count_space UNIV) (X (Suc n)))\n       (uniform_measure (count_space UNIV) {s}))\n     {t} =\n    cond_prob M (\\<lambda>\\<omega>. X (Suc n) \\<omega> = t)\n     (\\<lambda>\\<omega>. X n \\<omega> = s)", "let ?P = \"\\<lambda>n. \\<P>(\\<omega> in M. X n \\<omega> = s) \\<noteq> 0\""], ["proof (state)\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure\n     (with\n       (\\<lambda>n.\n           prob {\\<omega> \\<in> space M. X n \\<omega> = s} \\<noteq> 0)\n       (\\<lambda>n.\n           distr\n            (uniform_measure M {\\<omega> \\<in> space M. X n \\<omega> = s})\n            (count_space UNIV) (X (Suc n)))\n       (uniform_measure (count_space UNIV) {s}))\n     {t} =\n    cond_prob M (\\<lambda>\\<omega>. X (Suc n) \\<omega> = t)\n     (\\<lambda>\\<omega>. X n \\<omega> = s)", "let ?D = \"\\<lambda>n. distr (uniform_measure M {\\<omega>\\<in>space M. X n \\<omega> = s}) (count_space UNIV) (X (Suc n))\""], ["proof (state)\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure\n     (with\n       (\\<lambda>n.\n           prob {\\<omega> \\<in> space M. X n \\<omega> = s} \\<noteq> 0)\n       (\\<lambda>n.\n           distr\n            (uniform_measure M {\\<omega> \\<in> space M. X n \\<omega> = s})\n            (count_space UNIV) (X (Suc n)))\n       (uniform_measure (count_space UNIV) {s}))\n     {t} =\n    cond_prob M (\\<lambda>\\<omega>. X (Suc n) \\<omega> = t)\n     (\\<lambda>\\<omega>. X n \\<omega> = s)", "let ?U = \"uniform_measure (count_space UNIV) {s}\""], ["proof (state)\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure\n     (with\n       (\\<lambda>n.\n           prob {\\<omega> \\<in> space M. X n \\<omega> = s} \\<noteq> 0)\n       (\\<lambda>n.\n           distr\n            (uniform_measure M {\\<omega> \\<in> space M. X n \\<omega> = s})\n            (count_space UNIV) (X (Suc n)))\n       (uniform_measure (count_space UNIV) {s}))\n     {t} =\n    cond_prob M (\\<lambda>\\<omega>. X (Suc n) \\<omega> = t)\n     (\\<lambda>\\<omega>. X n \\<omega> = s)", "show \"measure (with ?P ?D ?U) {t} = \\<P>(\\<omega> in M. X (Suc n) \\<omega> = t \\<bar> X n \\<omega> = s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure\n     (with\n       (\\<lambda>n.\n           prob {\\<omega> \\<in> space M. X n \\<omega> = s} \\<noteq> 0)\n       (\\<lambda>n.\n           distr\n            (uniform_measure M {\\<omega> \\<in> space M. X n \\<omega> = s})\n            (count_space UNIV) (X (Suc n)))\n       (uniform_measure (count_space UNIV) {s}))\n     {t} =\n    cond_prob M (\\<lambda>\\<omega>. X (Suc n) \\<omega> = t)\n     (\\<lambda>\\<omega>. X n \\<omega> = s)", "proof (rule withI)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<And>x.\n        \\<not> prob {\\<omega> \\<in> space M. X x \\<omega> = s} \\<noteq>\n               0) \\<Longrightarrow>\n    Sigma_Algebra.measure (uniform_measure (count_space UNIV) {s}) {t} =\n    cond_prob M (\\<lambda>\\<omega>. X (Suc n) \\<omega> = t)\n     (\\<lambda>\\<omega>. X n \\<omega> = s)\n 2. \\<And>x.\n       prob {\\<omega> \\<in> space M. X x \\<omega> = s} \\<noteq>\n       0 \\<Longrightarrow>\n       Sigma_Algebra.measure\n        (distr\n          (uniform_measure M {\\<omega> \\<in> space M. X x \\<omega> = s})\n          (count_space UNIV) (X (Suc x)))\n        {t} =\n       cond_prob M (\\<lambda>\\<omega>. X (Suc n) \\<omega> = t)\n        (\\<lambda>\\<omega>. X n \\<omega> = s)", "fix n'"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<And>x.\n        \\<not> prob {\\<omega> \\<in> space M. X x \\<omega> = s} \\<noteq>\n               0) \\<Longrightarrow>\n    Sigma_Algebra.measure (uniform_measure (count_space UNIV) {s}) {t} =\n    cond_prob M (\\<lambda>\\<omega>. X (Suc n) \\<omega> = t)\n     (\\<lambda>\\<omega>. X n \\<omega> = s)\n 2. \\<And>x.\n       prob {\\<omega> \\<in> space M. X x \\<omega> = s} \\<noteq>\n       0 \\<Longrightarrow>\n       Sigma_Algebra.measure\n        (distr\n          (uniform_measure M {\\<omega> \\<in> space M. X x \\<omega> = s})\n          (count_space UNIV) (X (Suc x)))\n        {t} =\n       cond_prob M (\\<lambda>\\<omega>. X (Suc n) \\<omega> = t)\n        (\\<lambda>\\<omega>. X n \\<omega> = s)", "assume \"?P n'\""], ["proof (state)\nthis:\n  prob {\\<omega> \\<in> space M. X n' \\<omega> = s} \\<noteq> 0\n\ngoal (2 subgoals):\n 1. (\\<And>x.\n        \\<not> prob {\\<omega> \\<in> space M. X x \\<omega> = s} \\<noteq>\n               0) \\<Longrightarrow>\n    Sigma_Algebra.measure (uniform_measure (count_space UNIV) {s}) {t} =\n    cond_prob M (\\<lambda>\\<omega>. X (Suc n) \\<omega> = t)\n     (\\<lambda>\\<omega>. X n \\<omega> = s)\n 2. \\<And>x.\n       prob {\\<omega> \\<in> space M. X x \\<omega> = s} \\<noteq>\n       0 \\<Longrightarrow>\n       Sigma_Algebra.measure\n        (distr\n          (uniform_measure M {\\<omega> \\<in> space M. X x \\<omega> = s})\n          (count_space UNIV) (X (Suc x)))\n        {t} =\n       cond_prob M (\\<lambda>\\<omega>. X (Suc n) \\<omega> = t)\n        (\\<lambda>\\<omega>. X n \\<omega> = s)", "moreover"], ["proof (state)\nthis:\n  prob {\\<omega> \\<in> space M. X n' \\<omega> = s} \\<noteq> 0\n\ngoal (2 subgoals):\n 1. (\\<And>x.\n        \\<not> prob {\\<omega> \\<in> space M. X x \\<omega> = s} \\<noteq>\n               0) \\<Longrightarrow>\n    Sigma_Algebra.measure (uniform_measure (count_space UNIV) {s}) {t} =\n    cond_prob M (\\<lambda>\\<omega>. X (Suc n) \\<omega> = t)\n     (\\<lambda>\\<omega>. X n \\<omega> = s)\n 2. \\<And>x.\n       prob {\\<omega> \\<in> space M. X x \\<omega> = s} \\<noteq>\n       0 \\<Longrightarrow>\n       Sigma_Algebra.measure\n        (distr\n          (uniform_measure M {\\<omega> \\<in> space M. X x \\<omega> = s})\n          (count_space UNIV) (X (Suc x)))\n        {t} =\n       cond_prob M (\\<lambda>\\<omega>. X (Suc n) \\<omega> = t)\n        (\\<lambda>\\<omega>. X n \\<omega> = s)", "have \"X (Suc n') -` {t} \\<inter> space M = {x\\<in>space M. X (Suc n') x = t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X (Suc n') -` {t} \\<inter> space M = {x \\<in> space M. X (Suc n') x = t}", "by auto"], ["proof (state)\nthis:\n  X (Suc n') -` {t} \\<inter> space M = {x \\<in> space M. X (Suc n') x = t}\n\ngoal (2 subgoals):\n 1. (\\<And>x.\n        \\<not> prob {\\<omega> \\<in> space M. X x \\<omega> = s} \\<noteq>\n               0) \\<Longrightarrow>\n    Sigma_Algebra.measure (uniform_measure (count_space UNIV) {s}) {t} =\n    cond_prob M (\\<lambda>\\<omega>. X (Suc n) \\<omega> = t)\n     (\\<lambda>\\<omega>. X n \\<omega> = s)\n 2. \\<And>x.\n       prob {\\<omega> \\<in> space M. X x \\<omega> = s} \\<noteq>\n       0 \\<Longrightarrow>\n       Sigma_Algebra.measure\n        (distr\n          (uniform_measure M {\\<omega> \\<in> space M. X x \\<omega> = s})\n          (count_space UNIV) (X (Suc x)))\n        {t} =\n       cond_prob M (\\<lambda>\\<omega>. X (Suc n) \\<omega> = t)\n        (\\<lambda>\\<omega>. X n \\<omega> = s)", "ultimately"], ["proof (chain)\npicking this:\n  prob {\\<omega> \\<in> space M. X n' \\<omega> = s} \\<noteq> 0\n  X (Suc n') -` {t} \\<inter> space M = {x \\<in> space M. X (Suc n') x = t}", "show \"measure (?D n') {t} = \\<P>(\\<omega> in M. X (Suc n) \\<omega> = t \\<bar> X n \\<omega> = s)\""], ["proof (prove)\nusing this:\n  prob {\\<omega> \\<in> space M. X n' \\<omega> = s} \\<noteq> 0\n  X (Suc n') -` {t} \\<inter> space M = {x \\<in> space M. X (Suc n') x = t}\n\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure\n     (distr (uniform_measure M {\\<omega> \\<in> space M. X n' \\<omega> = s})\n       (count_space UNIV) (X (Suc n')))\n     {t} =\n    cond_prob M (\\<lambda>\\<omega>. X (Suc n) \\<omega> = t)\n     (\\<lambda>\\<omega>. X n \\<omega> = s)", "using n M.measure_uniform_measure_eq_cond_prob[of \"\\<lambda>x. X (Suc n') x = t\" \"\\<lambda>x. X n' x = s\"]"], ["proof (prove)\nusing this:\n  prob {\\<omega> \\<in> space M. X n' \\<omega> = s} \\<noteq> 0\n  X (Suc n') -` {t} \\<inter> space M = {x \\<in> space M. X (Suc n') x = t}\n  0 < prob {\\<omega> \\<in> space M. X n \\<omega> = s}\n  \\<lbrakk>random_variable (count_space UNIV)\n            (\\<lambda>x. X (Suc n') x = t);\n   random_variable (count_space UNIV) (\\<lambda>x. X n' x = s)\\<rbrakk>\n  \\<Longrightarrow> \\<P>(x in uniform_measure M\n                               {x \\<in> space M. X n' x = s}.\n                         X (Suc n') x = t) =\n                    cond_prob M (\\<lambda>x. X (Suc n') x = t)\n                     (\\<lambda>x. X n' x = s)\n\ngoal (1 subgoal):\n 1. Sigma_Algebra.measure\n     (distr (uniform_measure M {\\<omega> \\<in> space M. X n' \\<omega> = s})\n       (count_space UNIV) (X (Suc n')))\n     {t} =\n    cond_prob M (\\<lambda>\\<omega>. X (Suc n) \\<omega> = t)\n     (\\<lambda>\\<omega>. X n \\<omega> = s)", "by (auto simp: measure_distr M.emeasure_eq_measure simp del: measure_uniform_measure intro!: TH)"], ["proof (state)\nthis:\n  Sigma_Algebra.measure\n   (distr (uniform_measure M {\\<omega> \\<in> space M. X n' \\<omega> = s})\n     (count_space UNIV) (X (Suc n')))\n   {t} =\n  cond_prob M (\\<lambda>\\<omega>. X (Suc n) \\<omega> = t)\n   (\\<lambda>\\<omega>. X n \\<omega> = s)\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<not> prob {\\<omega> \\<in> space M. X x \\<omega> = s} \\<noteq>\n               0) \\<Longrightarrow>\n    Sigma_Algebra.measure (uniform_measure (count_space UNIV) {s}) {t} =\n    cond_prob M (\\<lambda>\\<omega>. X (Suc n) \\<omega> = t)\n     (\\<lambda>\\<omega>. X n \\<omega> = s)", "qed (insert n, simp)"], ["proof (state)\nthis:\n  Sigma_Algebra.measure\n   (with\n     (\\<lambda>n.\n         prob {\\<omega> \\<in> space M. X n \\<omega> = s} \\<noteq> 0)\n     (\\<lambda>n.\n         distr\n          (uniform_measure M {\\<omega> \\<in> space M. X n \\<omega> = s})\n          (count_space UNIV) (X (Suc n)))\n     (uniform_measure (count_space UNIV) {s}))\n   {t} =\n  cond_prob M (\\<lambda>\\<omega>. X (Suc n) \\<omega> = t)\n   (\\<lambda>\\<omega>. X n \\<omega> = s)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pmf_K2:\n  \"(\\<And>n. \\<P>(\\<omega> in M. X n \\<omega> = s) = 0) \\<Longrightarrow> pmf (K s) t = indicator {t} s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n.\n        prob {\\<omega> \\<in> space M. X n \\<omega> = s} =\n        0) \\<Longrightarrow>\n    pmf (K s) t = indicat_real {t} s", "apply (transfer fixing: s t)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n.\n        prob {\\<omega> \\<in> space M. X n \\<omega> = s} =\n        0) \\<Longrightarrow>\n    Sigma_Algebra.measure\n     (with\n       (\\<lambda>n.\n           prob {\\<omega> \\<in> space M. X n \\<omega> = s} \\<noteq> 0)\n       (\\<lambda>n.\n           distr\n            (uniform_measure M {\\<omega> \\<in> space M. X n \\<omega> = s})\n            (count_space UNIV) (X (Suc n)))\n       (uniform_measure (count_space UNIV) {s}))\n     {t} =\n    indicat_real {t} s", "apply (rule withI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>n. prob {\\<omega> \\<in> space M. X n \\<omega> = s} = 0;\n     \\<And>x.\n        \\<not> prob {\\<omega> \\<in> space M. X x \\<omega> = s} \\<noteq>\n               0\\<rbrakk>\n    \\<Longrightarrow> Sigma_Algebra.measure\n                       (uniform_measure (count_space UNIV) {s}) {t} =\n                      indicat_real {t} s\n 2. \\<And>x.\n       \\<lbrakk>\\<And>n.\n                   prob {\\<omega> \\<in> space M. X n \\<omega> = s} = 0;\n        prob {\\<omega> \\<in> space M. X x \\<omega> = s} \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> Sigma_Algebra.measure\n                          (distr\n                            (uniform_measure M\n                              {\\<omega> \\<in> space M. X x \\<omega> = s})\n                            (count_space UNIV) (X (Suc x)))\n                          {t} =\n                         indicat_real {t} s", "apply (auto split: split_indicator)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"], ["", "sublocale K: MC_syntax K"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "lemma bind_I_K_eq_M: \"K.T' I = distr M K.S (\\<lambda>\\<omega>. to_stream (\\<lambda>n. X n \\<omega>))\" (is \"_ = ?D\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. K.T' I =\n    distr M (stream_space (count_space UNIV))\n     (\\<lambda>\\<omega>. to_stream (\\<lambda>n. X n \\<omega>))", "proof (rule stream_space_eq_sstart)"], ["proof (state)\ngoal (8 subgoals):\n 1. countable ?S\n 2. prob_space (K.T' I)\n 3. prob_space\n     (distr M (stream_space (count_space UNIV))\n       (\\<lambda>\\<omega>. to_stream (\\<lambda>n. X n \\<omega>)))\n 4. AE x in K.T' I. x \\<in> streams ?S\n 5. AE x in distr M (stream_space (count_space UNIV))\n             (\\<lambda>\\<omega>.\n                 to_stream (\\<lambda>n. X n \\<omega>)). x \\<in> streams ?S\n 6. sets (K.T' I) = sets (stream_space (count_space UNIV))\n 7. sets\n     (distr M (stream_space (count_space UNIV))\n       (\\<lambda>\\<omega>. to_stream (\\<lambda>n. X n \\<omega>))) =\n    sets (stream_space (count_space UNIV))\n 8. \\<And>xs.\n       \\<lbrakk>xs \\<noteq> []; xs \\<in> lists ?S\\<rbrakk>\n       \\<Longrightarrow> emeasure (K.T' I) (sstart ?S xs) =\n                         emeasure\n                          (distr M (stream_space (count_space UNIV))\n                            (\\<lambda>\\<omega>.\n                                to_stream (\\<lambda>n. X n \\<omega>)))\n                          (sstart ?S xs)", "note streams_sets[measurable]"], ["proof (state)\nthis:\n  ?X \\<in> sets ?M \\<Longrightarrow> streams ?X \\<in> sets (stream_space ?M)\n\ngoal (8 subgoals):\n 1. countable ?S\n 2. prob_space (K.T' I)\n 3. prob_space\n     (distr M (stream_space (count_space UNIV))\n       (\\<lambda>\\<omega>. to_stream (\\<lambda>n. X n \\<omega>)))\n 4. AE x in K.T' I. x \\<in> streams ?S\n 5. AE x in distr M (stream_space (count_space UNIV))\n             (\\<lambda>\\<omega>.\n                 to_stream (\\<lambda>n. X n \\<omega>)). x \\<in> streams ?S\n 6. sets (K.T' I) = sets (stream_space (count_space UNIV))\n 7. sets\n     (distr M (stream_space (count_space UNIV))\n       (\\<lambda>\\<omega>. to_stream (\\<lambda>n. X n \\<omega>))) =\n    sets (stream_space (count_space UNIV))\n 8. \\<And>xs.\n       \\<lbrakk>xs \\<noteq> []; xs \\<in> lists ?S\\<rbrakk>\n       \\<Longrightarrow> emeasure (K.T' I) (sstart ?S xs) =\n                         emeasure\n                          (distr M (stream_space (count_space UNIV))\n                            (\\<lambda>\\<omega>.\n                                to_stream (\\<lambda>n. X n \\<omega>)))\n                          (sstart ?S xs)", "note measurable_abs_UNIV[measurable (raw)]"], ["proof (state)\nthis:\n  (\\<And>n. ?f n \\<in> ?M \\<rightarrow>\\<^sub>M ?N n) \\<Longrightarrow>\n  (\\<lambda>\\<omega> n. ?f n \\<omega>)\n  \\<in> ?M \\<rightarrow>\\<^sub>M Pi\\<^sub>M UNIV ?N\n\ngoal (8 subgoals):\n 1. countable ?S\n 2. prob_space (K.T' I)\n 3. prob_space\n     (distr M (stream_space (count_space UNIV))\n       (\\<lambda>\\<omega>. to_stream (\\<lambda>n. X n \\<omega>)))\n 4. AE x in K.T' I. x \\<in> streams ?S\n 5. AE x in distr M (stream_space (count_space UNIV))\n             (\\<lambda>\\<omega>.\n                 to_stream (\\<lambda>n. X n \\<omega>)). x \\<in> streams ?S\n 6. sets (K.T' I) = sets (stream_space (count_space UNIV))\n 7. sets\n     (distr M (stream_space (count_space UNIV))\n       (\\<lambda>\\<omega>. to_stream (\\<lambda>n. X n \\<omega>))) =\n    sets (stream_space (count_space UNIV))\n 8. \\<And>xs.\n       \\<lbrakk>xs \\<noteq> []; xs \\<in> lists ?S\\<rbrakk>\n       \\<Longrightarrow> emeasure (K.T' I) (sstart ?S xs) =\n                         emeasure\n                          (distr M (stream_space (count_space UNIV))\n                            (\\<lambda>\\<omega>.\n                                to_stream (\\<lambda>n. X n \\<omega>)))\n                          (sstart ?S xs)", "note sstart_sets[measurable]"], ["proof (state)\nthis:\n  sstart ?S ?xs \\<in> sets (stream_space (count_space UNIV))\n\ngoal (8 subgoals):\n 1. countable ?S\n 2. prob_space (K.T' I)\n 3. prob_space\n     (distr M (stream_space (count_space UNIV))\n       (\\<lambda>\\<omega>. to_stream (\\<lambda>n. X n \\<omega>)))\n 4. AE x in K.T' I. x \\<in> streams ?S\n 5. AE x in distr M (stream_space (count_space UNIV))\n             (\\<lambda>\\<omega>.\n                 to_stream (\\<lambda>n. X n \\<omega>)). x \\<in> streams ?S\n 6. sets (K.T' I) = sets (stream_space (count_space UNIV))\n 7. sets\n     (distr M (stream_space (count_space UNIV))\n       (\\<lambda>\\<omega>. to_stream (\\<lambda>n. X n \\<omega>))) =\n    sets (stream_space (count_space UNIV))\n 8. \\<And>xs.\n       \\<lbrakk>xs \\<noteq> []; xs \\<in> lists ?S\\<rbrakk>\n       \\<Longrightarrow> emeasure (K.T' I) (sstart ?S xs) =\n                         emeasure\n                          (distr M (stream_space (count_space UNIV))\n                            (\\<lambda>\\<omega>.\n                                to_stream (\\<lambda>n. X n \\<omega>)))\n                          (sstart ?S xs)", "{"], ["proof (state)\nthis:\n  sstart ?S ?xs \\<in> sets (stream_space (count_space UNIV))\n\ngoal (8 subgoals):\n 1. countable ?S\n 2. prob_space (K.T' I)\n 3. prob_space\n     (distr M (stream_space (count_space UNIV))\n       (\\<lambda>\\<omega>. to_stream (\\<lambda>n. X n \\<omega>)))\n 4. AE x in K.T' I. x \\<in> streams ?S\n 5. AE x in distr M (stream_space (count_space UNIV))\n             (\\<lambda>\\<omega>.\n                 to_stream (\\<lambda>n. X n \\<omega>)). x \\<in> streams ?S\n 6. sets (K.T' I) = sets (stream_space (count_space UNIV))\n 7. sets\n     (distr M (stream_space (count_space UNIV))\n       (\\<lambda>\\<omega>. to_stream (\\<lambda>n. X n \\<omega>))) =\n    sets (stream_space (count_space UNIV))\n 8. \\<And>xs.\n       \\<lbrakk>xs \\<noteq> []; xs \\<in> lists ?S\\<rbrakk>\n       \\<Longrightarrow> emeasure (K.T' I) (sstart ?S xs) =\n                         emeasure\n                          (distr M (stream_space (count_space UNIV))\n                            (\\<lambda>\\<omega>.\n                                to_stream (\\<lambda>n. X n \\<omega>)))\n                          (sstart ?S xs)", "fix s"], ["proof (state)\ngoal (8 subgoals):\n 1. countable ?S\n 2. prob_space (K.T' I)\n 3. prob_space\n     (distr M (stream_space (count_space UNIV))\n       (\\<lambda>\\<omega>. to_stream (\\<lambda>n. X n \\<omega>)))\n 4. AE x in K.T' I. x \\<in> streams ?S\n 5. AE x in distr M (stream_space (count_space UNIV))\n             (\\<lambda>\\<omega>.\n                 to_stream (\\<lambda>n. X n \\<omega>)). x \\<in> streams ?S\n 6. sets (K.T' I) = sets (stream_space (count_space UNIV))\n 7. sets\n     (distr M (stream_space (count_space UNIV))\n       (\\<lambda>\\<omega>. to_stream (\\<lambda>n. X n \\<omega>))) =\n    sets (stream_space (count_space UNIV))\n 8. \\<And>xs.\n       \\<lbrakk>xs \\<noteq> []; xs \\<in> lists ?S\\<rbrakk>\n       \\<Longrightarrow> emeasure (K.T' I) (sstart ?S xs) =\n                         emeasure\n                          (distr M (stream_space (count_space UNIV))\n                            (\\<lambda>\\<omega>.\n                                to_stream (\\<lambda>n. X n \\<omega>)))\n                          (sstart ?S xs)", "assume \"s \\<in> S\""], ["proof (state)\nthis:\n  s \\<in> S\n\ngoal (8 subgoals):\n 1. countable ?S\n 2. prob_space (K.T' I)\n 3. prob_space\n     (distr M (stream_space (count_space UNIV))\n       (\\<lambda>\\<omega>. to_stream (\\<lambda>n. X n \\<omega>)))\n 4. AE x in K.T' I. x \\<in> streams ?S\n 5. AE x in distr M (stream_space (count_space UNIV))\n             (\\<lambda>\\<omega>.\n                 to_stream (\\<lambda>n. X n \\<omega>)). x \\<in> streams ?S\n 6. sets (K.T' I) = sets (stream_space (count_space UNIV))\n 7. sets\n     (distr M (stream_space (count_space UNIV))\n       (\\<lambda>\\<omega>. to_stream (\\<lambda>n. X n \\<omega>))) =\n    sets (stream_space (count_space UNIV))\n 8. \\<And>xs.\n       \\<lbrakk>xs \\<noteq> []; xs \\<in> lists ?S\\<rbrakk>\n       \\<Longrightarrow> emeasure (K.T' I) (sstart ?S xs) =\n                         emeasure\n                          (distr M (stream_space (count_space UNIV))\n                            (\\<lambda>\\<omega>.\n                                to_stream (\\<lambda>n. X n \\<omega>)))\n                          (sstart ?S xs)", "from K.AE_T_enabled[of s]"], ["proof (chain)\npicking this:\n  almost_everywhere (K.T s) (K.enabled s)", "have \"AE \\<omega> in K.T s. \\<omega> \\<in> streams S\""], ["proof (prove)\nusing this:\n  almost_everywhere (K.T s) (K.enabled s)\n\ngoal (1 subgoal):\n 1. AE \\<omega> in K.T s. \\<omega> \\<in> streams S", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<omega>.\n       K.enabled s \\<omega> \\<Longrightarrow> \\<omega> \\<in> streams S", "fix \\<omega>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>\\<omega>.\n       K.enabled s \\<omega> \\<Longrightarrow> \\<omega> \\<in> streams S", "assume \"K.enabled s \\<omega>\""], ["proof (state)\nthis:\n  K.enabled s \\<omega>\n\ngoal (1 subgoal):\n 1. \\<And>\\<omega>.\n       K.enabled s \\<omega> \\<Longrightarrow> \\<omega> \\<in> streams S", "from this \\<open>s\\<in>S\\<close>"], ["proof (chain)\npicking this:\n  K.enabled s \\<omega>\n  s \\<in> S", "show \"\\<omega> \\<in> streams S\""], ["proof (prove)\nusing this:\n  K.enabled s \\<omega>\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. \\<omega> \\<in> streams S", "proof (coinduction arbitrary: s \\<omega>)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s \\<omega>.\n       \\<lbrakk>K.enabled s \\<omega>; s \\<in> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a s.\n                            \\<omega> = a ## s \\<and>\n                            a \\<in> S \\<and>\n                            ((\\<exists>sa \\<omega>.\n                                 s = \\<omega> \\<and>\n                                 K.enabled sa \\<omega> \\<and>\n                                 sa \\<in> S) \\<or>\n                             s \\<in> streams S)", "case streams"], ["proof (state)\nthis:\n  K.enabled s \\<omega>\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>s \\<omega>.\n       \\<lbrakk>K.enabled s \\<omega>; s \\<in> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a s.\n                            \\<omega> = a ## s \\<and>\n                            a \\<in> S \\<and>\n                            ((\\<exists>sa \\<omega>.\n                                 s = \\<omega> \\<and>\n                                 K.enabled sa \\<omega> \\<and>\n                                 sa \\<in> S) \\<or>\n                             s \\<in> streams S)", "then"], ["proof (chain)\npicking this:\n  K.enabled s \\<omega>\n  s \\<in> S", "have 1: \"pmf (K s) (shd \\<omega>) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  K.enabled s \\<omega>\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. pmf (K s) (shd \\<omega>) \\<noteq> 0", "by (simp add: K.enabled.simps[of s] set_pmf_iff)"], ["proof (state)\nthis:\n  pmf (K s) (shd \\<omega>) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>s \\<omega>.\n       \\<lbrakk>K.enabled s \\<omega>; s \\<in> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a s.\n                            \\<omega> = a ## s \\<and>\n                            a \\<in> S \\<and>\n                            ((\\<exists>sa \\<omega>.\n                                 s = \\<omega> \\<and>\n                                 K.enabled sa \\<omega> \\<and>\n                                 sa \\<in> S) \\<or>\n                             s \\<in> streams S)", "have \"shd \\<omega> \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. shd \\<omega> \\<in> S", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> shd \\<omega> \\<in> S\n 2. \\<not> ?P \\<Longrightarrow> shd \\<omega> \\<in> S", "assume \"\\<exists>n. 0 < \\<P>(\\<omega> in M. X n \\<omega> = s)\""], ["proof (state)\nthis:\n  \\<exists>n. 0 < prob {\\<omega> \\<in> space M. X n \\<omega> = s}\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> shd \\<omega> \\<in> S\n 2. \\<not> ?P \\<Longrightarrow> shd \\<omega> \\<in> S", "then"], ["proof (chain)\npicking this:\n  \\<exists>n. 0 < prob {\\<omega> \\<in> space M. X n \\<omega> = s}", "obtain n where \"0 < \\<P>(\\<omega> in M. X n \\<omega> = s)\""], ["proof (prove)\nusing this:\n  \\<exists>n. 0 < prob {\\<omega> \\<in> space M. X n \\<omega> = s}\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        0 < prob\n             {\\<omega> \\<in> space M. X n \\<omega> = s} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  0 < prob {\\<omega> \\<in> space M. X n \\<omega> = s}\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> shd \\<omega> \\<in> S\n 2. \\<not> ?P \\<Longrightarrow> shd \\<omega> \\<in> S", "with 1"], ["proof (chain)\npicking this:\n  pmf (K s) (shd \\<omega>) \\<noteq> 0\n  0 < prob {\\<omega> \\<in> space M. X n \\<omega> = s}", "have 2: \"\\<P>(\\<omega>' in M. X (Suc n) \\<omega>' = shd \\<omega> \\<and> X n \\<omega>' = s) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  pmf (K s) (shd \\<omega>) \\<noteq> 0\n  0 < prob {\\<omega> \\<in> space M. X n \\<omega> = s}\n\ngoal (1 subgoal):\n 1. prob\n     {\\<omega>'' \\<in> space M.\n      X (Suc n) \\<omega>'' = shd \\<omega> \\<and>\n      X n \\<omega>'' = s} \\<noteq>\n    0", "by (simp add: pmf_K cond_prob_def)"], ["proof (state)\nthis:\n  prob\n   {\\<omega>'' \\<in> space M.\n    X (Suc n) \\<omega>'' = shd \\<omega> \\<and> X n \\<omega>'' = s} \\<noteq>\n  0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> shd \\<omega> \\<in> S\n 2. \\<not> ?P \\<Longrightarrow> shd \\<omega> \\<in> S", "show \"shd \\<omega> \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. shd \\<omega> \\<in> S", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. shd \\<omega> \\<notin> S \\<Longrightarrow> False", "assume \"shd \\<omega> \\<notin> S\""], ["proof (state)\nthis:\n  shd \\<omega> \\<notin> S\n\ngoal (1 subgoal):\n 1. shd \\<omega> \\<notin> S \\<Longrightarrow> False", "with S(2)[of \"Suc n\"]"], ["proof (chain)\npicking this:\n  AE x in M. X (Suc n) x \\<in> S\n  shd \\<omega> \\<notin> S", "have \"\\<P>(\\<omega>' in M. X (Suc n) \\<omega>' = shd \\<omega> \\<and> X n \\<omega>' = s) = 0\""], ["proof (prove)\nusing this:\n  AE x in M. X (Suc n) x \\<in> S\n  shd \\<omega> \\<notin> S\n\ngoal (1 subgoal):\n 1. prob\n     {\\<omega>'' \\<in> space M.\n      X (Suc n) \\<omega>'' = shd \\<omega> \\<and> X n \\<omega>'' = s} =\n    0", "by (intro M.prob_eq_0_AE) auto"], ["proof (state)\nthis:\n  prob\n   {\\<omega>'' \\<in> space M.\n    X (Suc n) \\<omega>'' = shd \\<omega> \\<and> X n \\<omega>'' = s} =\n  0\n\ngoal (1 subgoal):\n 1. shd \\<omega> \\<notin> S \\<Longrightarrow> False", "with 2"], ["proof (chain)\npicking this:\n  prob\n   {\\<omega>'' \\<in> space M.\n    X (Suc n) \\<omega>'' = shd \\<omega> \\<and> X n \\<omega>'' = s} \\<noteq>\n  0\n  prob\n   {\\<omega>'' \\<in> space M.\n    X (Suc n) \\<omega>'' = shd \\<omega> \\<and> X n \\<omega>'' = s} =\n  0", "show False"], ["proof (prove)\nusing this:\n  prob\n   {\\<omega>'' \\<in> space M.\n    X (Suc n) \\<omega>'' = shd \\<omega> \\<and> X n \\<omega>'' = s} \\<noteq>\n  0\n  prob\n   {\\<omega>'' \\<in> space M.\n    X (Suc n) \\<omega>'' = shd \\<omega> \\<and> X n \\<omega>'' = s} =\n  0\n\ngoal (1 subgoal):\n 1. False", "by contradiction"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  shd \\<omega> \\<in> S\n\ngoal (1 subgoal):\n 1. \\<nexists>n.\n       0 < prob {\\<omega> \\<in> space M. X n \\<omega> = s} \\<Longrightarrow>\n    shd \\<omega> \\<in> S", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<nexists>n.\n       0 < prob {\\<omega> \\<in> space M. X n \\<omega> = s} \\<Longrightarrow>\n    shd \\<omega> \\<in> S", "assume \"\\<not> (\\<exists>n. 0 < \\<P>(\\<omega> in M. X n \\<omega> = s))\""], ["proof (state)\nthis:\n  \\<nexists>n. 0 < prob {\\<omega> \\<in> space M. X n \\<omega> = s}\n\ngoal (1 subgoal):\n 1. \\<nexists>n.\n       0 < prob {\\<omega> \\<in> space M. X n \\<omega> = s} \\<Longrightarrow>\n    shd \\<omega> \\<in> S", "then"], ["proof (chain)\npicking this:\n  \\<nexists>n. 0 < prob {\\<omega> \\<in> space M. X n \\<omega> = s}", "have \"pmf (K s) (shd \\<omega>) = indicator {shd \\<omega>} s\""], ["proof (prove)\nusing this:\n  \\<nexists>n. 0 < prob {\\<omega> \\<in> space M. X n \\<omega> = s}\n\ngoal (1 subgoal):\n 1. pmf (K s) (shd \\<omega>) = indicat_real {shd \\<omega>} s", "by (intro pmf_K2) (auto simp: not_less measure_le_0_iff)"], ["proof (state)\nthis:\n  pmf (K s) (shd \\<omega>) = indicat_real {shd \\<omega>} s\n\ngoal (1 subgoal):\n 1. \\<nexists>n.\n       0 < prob {\\<omega> \\<in> space M. X n \\<omega> = s} \\<Longrightarrow>\n    shd \\<omega> \\<in> S", "with 1 \\<open>s\\<in>S\\<close>"], ["proof (chain)\npicking this:\n  pmf (K s) (shd \\<omega>) \\<noteq> 0\n  s \\<in> S\n  pmf (K s) (shd \\<omega>) = indicat_real {shd \\<omega>} s", "show ?thesis"], ["proof (prove)\nusing this:\n  pmf (K s) (shd \\<omega>) \\<noteq> 0\n  s \\<in> S\n  pmf (K s) (shd \\<omega>) = indicat_real {shd \\<omega>} s\n\ngoal (1 subgoal):\n 1. shd \\<omega> \\<in> S", "by (auto split: split_indicator_asm)"], ["proof (state)\nthis:\n  shd \\<omega> \\<in> S\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  shd \\<omega> \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>s \\<omega>.\n       \\<lbrakk>K.enabled s \\<omega>; s \\<in> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a s.\n                            \\<omega> = a ## s \\<and>\n                            a \\<in> S \\<and>\n                            ((\\<exists>sa \\<omega>.\n                                 s = \\<omega> \\<and>\n                                 K.enabled sa \\<omega> \\<and>\n                                 sa \\<in> S) \\<or>\n                             s \\<in> streams S)", "with streams"], ["proof (chain)\npicking this:\n  K.enabled s \\<omega>\n  s \\<in> S\n  shd \\<omega> \\<in> S", "show ?case"], ["proof (prove)\nusing this:\n  K.enabled s \\<omega>\n  s \\<in> S\n  shd \\<omega> \\<in> S\n\ngoal (1 subgoal):\n 1. \\<exists>a s.\n       \\<omega> = a ## s \\<and>\n       a \\<in> S \\<and>\n       ((\\<exists>sa \\<omega>.\n            s = \\<omega> \\<and>\n            K.enabled sa \\<omega> \\<and> sa \\<in> S) \\<or>\n        s \\<in> streams S)", "by (cases \\<omega>) (auto simp: K.enabled.simps[of s])"], ["proof (state)\nthis:\n  \\<exists>a s.\n     \\<omega> = a ## s \\<and>\n     a \\<in> S \\<and>\n     ((\\<exists>sa \\<omega>.\n          s = \\<omega> \\<and> K.enabled sa \\<omega> \\<and> sa \\<in> S) \\<or>\n      s \\<in> streams S)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<omega> \\<in> streams S\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  AE \\<omega> in K.T s. \\<omega> \\<in> streams S\n\ngoal (8 subgoals):\n 1. countable ?S\n 2. prob_space (K.T' I)\n 3. prob_space\n     (distr M (stream_space (count_space UNIV))\n       (\\<lambda>\\<omega>. to_stream (\\<lambda>n. X n \\<omega>)))\n 4. AE x in K.T' I. x \\<in> streams ?S\n 5. AE x in distr M (stream_space (count_space UNIV))\n             (\\<lambda>\\<omega>.\n                 to_stream (\\<lambda>n. X n \\<omega>)). x \\<in> streams ?S\n 6. sets (K.T' I) = sets (stream_space (count_space UNIV))\n 7. sets\n     (distr M (stream_space (count_space UNIV))\n       (\\<lambda>\\<omega>. to_stream (\\<lambda>n. X n \\<omega>))) =\n    sets (stream_space (count_space UNIV))\n 8. \\<And>xs.\n       \\<lbrakk>xs \\<noteq> []; xs \\<in> lists ?S\\<rbrakk>\n       \\<Longrightarrow> emeasure (K.T' I) (sstart ?S xs) =\n                         emeasure\n                          (distr M (stream_space (count_space UNIV))\n                            (\\<lambda>\\<omega>.\n                                to_stream (\\<lambda>n. X n \\<omega>)))\n                          (sstart ?S xs)", "}"], ["proof (state)\nthis:\n  ?s14 \\<in> S \\<Longrightarrow>\n  AE \\<omega> in K.T ?s14. \\<omega> \\<in> streams S\n\ngoal (8 subgoals):\n 1. countable ?S\n 2. prob_space (K.T' I)\n 3. prob_space\n     (distr M (stream_space (count_space UNIV))\n       (\\<lambda>\\<omega>. to_stream (\\<lambda>n. X n \\<omega>)))\n 4. AE x in K.T' I. x \\<in> streams ?S\n 5. AE x in distr M (stream_space (count_space UNIV))\n             (\\<lambda>\\<omega>.\n                 to_stream (\\<lambda>n. X n \\<omega>)). x \\<in> streams ?S\n 6. sets (K.T' I) = sets (stream_space (count_space UNIV))\n 7. sets\n     (distr M (stream_space (count_space UNIV))\n       (\\<lambda>\\<omega>. to_stream (\\<lambda>n. X n \\<omega>))) =\n    sets (stream_space (count_space UNIV))\n 8. \\<And>xs.\n       \\<lbrakk>xs \\<noteq> []; xs \\<in> lists ?S\\<rbrakk>\n       \\<Longrightarrow> emeasure (K.T' I) (sstart ?S xs) =\n                         emeasure\n                          (distr M (stream_space (count_space UNIV))\n                            (\\<lambda>\\<omega>.\n                                to_stream (\\<lambda>n. X n \\<omega>)))\n                          (sstart ?S xs)", "note AE_streams = this"], ["proof (state)\nthis:\n  ?s14 \\<in> S \\<Longrightarrow>\n  AE \\<omega> in K.T ?s14. \\<omega> \\<in> streams S\n\ngoal (8 subgoals):\n 1. countable ?S\n 2. prob_space (K.T' I)\n 3. prob_space\n     (distr M (stream_space (count_space UNIV))\n       (\\<lambda>\\<omega>. to_stream (\\<lambda>n. X n \\<omega>)))\n 4. AE x in K.T' I. x \\<in> streams ?S\n 5. AE x in distr M (stream_space (count_space UNIV))\n             (\\<lambda>\\<omega>.\n                 to_stream (\\<lambda>n. X n \\<omega>)). x \\<in> streams ?S\n 6. sets (K.T' I) = sets (stream_space (count_space UNIV))\n 7. sets\n     (distr M (stream_space (count_space UNIV))\n       (\\<lambda>\\<omega>. to_stream (\\<lambda>n. X n \\<omega>))) =\n    sets (stream_space (count_space UNIV))\n 8. \\<And>xs.\n       \\<lbrakk>xs \\<noteq> []; xs \\<in> lists ?S\\<rbrakk>\n       \\<Longrightarrow> emeasure (K.T' I) (sstart ?S xs) =\n                         emeasure\n                          (distr M (stream_space (count_space UNIV))\n                            (\\<lambda>\\<omega>.\n                                to_stream (\\<lambda>n. X n \\<omega>)))\n                          (sstart ?S xs)", "show \"prob_space (K.T' I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob_space (K.T' I)", "by (rule K.prob_space_T')"], ["proof (state)\nthis:\n  prob_space (K.T' I)\n\ngoal (7 subgoals):\n 1. countable ?S\n 2. prob_space\n     (distr M (stream_space (count_space UNIV))\n       (\\<lambda>\\<omega>. to_stream (\\<lambda>n. X n \\<omega>)))\n 3. AE x in K.T' I. x \\<in> streams ?S\n 4. AE x in distr M (stream_space (count_space UNIV))\n             (\\<lambda>\\<omega>.\n                 to_stream (\\<lambda>n. X n \\<omega>)). x \\<in> streams ?S\n 5. sets (K.T' I) = sets (stream_space (count_space UNIV))\n 6. sets\n     (distr M (stream_space (count_space UNIV))\n       (\\<lambda>\\<omega>. to_stream (\\<lambda>n. X n \\<omega>))) =\n    sets (stream_space (count_space UNIV))\n 7. \\<And>xs.\n       \\<lbrakk>xs \\<noteq> []; xs \\<in> lists ?S\\<rbrakk>\n       \\<Longrightarrow> emeasure (K.T' I) (sstart ?S xs) =\n                         emeasure\n                          (distr M (stream_space (count_space UNIV))\n                            (\\<lambda>\\<omega>.\n                                to_stream (\\<lambda>n. X n \\<omega>)))\n                          (sstart ?S xs)", "show \"prob_space ?D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob_space\n     (distr M (stream_space (count_space UNIV))\n       (\\<lambda>\\<omega>. to_stream (\\<lambda>n. X n \\<omega>)))", "by (rule M.prob_space_distr) simp"], ["proof (state)\nthis:\n  prob_space\n   (distr M (stream_space (count_space UNIV))\n     (\\<lambda>\\<omega>. to_stream (\\<lambda>n. X n \\<omega>)))\n\ngoal (6 subgoals):\n 1. countable ?S\n 2. AE x in K.T' I. x \\<in> streams ?S\n 3. AE x in distr M (stream_space (count_space UNIV))\n             (\\<lambda>\\<omega>.\n                 to_stream (\\<lambda>n. X n \\<omega>)). x \\<in> streams ?S\n 4. sets (K.T' I) = sets (stream_space (count_space UNIV))\n 5. sets\n     (distr M (stream_space (count_space UNIV))\n       (\\<lambda>\\<omega>. to_stream (\\<lambda>n. X n \\<omega>))) =\n    sets (stream_space (count_space UNIV))\n 6. \\<And>xs.\n       \\<lbrakk>xs \\<noteq> []; xs \\<in> lists ?S\\<rbrakk>\n       \\<Longrightarrow> emeasure (K.T' I) (sstart ?S xs) =\n                         emeasure\n                          (distr M (stream_space (count_space UNIV))\n                            (\\<lambda>\\<omega>.\n                                to_stream (\\<lambda>n. X n \\<omega>)))\n                          (sstart ?S xs)", "show \"AE x in K.T' I. x \\<in> streams S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE x in K.T' I. x \\<in> streams S", "by (auto simp add: K.AE_T' set_pmf_iff I_in_S AE_distr_iff streams_Stream intro!: AE_streams)"], ["proof (state)\nthis:\n  AE x in K.T' I. x \\<in> streams S\n\ngoal (5 subgoals):\n 1. countable S\n 2. AE x in distr M (stream_space (count_space UNIV))\n             (\\<lambda>\\<omega>.\n                 to_stream (\\<lambda>n. X n \\<omega>)). x \\<in> streams S\n 3. sets (K.T' I) = sets (stream_space (count_space UNIV))\n 4. sets\n     (distr M (stream_space (count_space UNIV))\n       (\\<lambda>\\<omega>. to_stream (\\<lambda>n. X n \\<omega>))) =\n    sets (stream_space (count_space UNIV))\n 5. \\<And>xs.\n       \\<lbrakk>xs \\<noteq> []; xs \\<in> lists S\\<rbrakk>\n       \\<Longrightarrow> emeasure (K.T' I) (sstart S xs) =\n                         emeasure\n                          (distr M (stream_space (count_space UNIV))\n                            (\\<lambda>\\<omega>.\n                                to_stream (\\<lambda>n. X n \\<omega>)))\n                          (sstart S xs)", "show \"AE x in ?D. x \\<in> streams S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE x in distr M (stream_space (count_space UNIV))\n             (\\<lambda>\\<omega>.\n                 to_stream (\\<lambda>n. X n \\<omega>)). x \\<in> streams S", "by (simp add: AE_distr_iff to_stream_in_streams AE_all_countable S)"], ["proof (state)\nthis:\n  AE x in distr M (stream_space (count_space UNIV))\n           (\\<lambda>\\<omega>.\n               to_stream (\\<lambda>n. X n \\<omega>)). x \\<in> streams S\n\ngoal (4 subgoals):\n 1. countable S\n 2. sets (K.T' I) = sets (stream_space (count_space UNIV))\n 3. sets\n     (distr M (stream_space (count_space UNIV))\n       (\\<lambda>\\<omega>. to_stream (\\<lambda>n. X n \\<omega>))) =\n    sets (stream_space (count_space UNIV))\n 4. \\<And>xs.\n       \\<lbrakk>xs \\<noteq> []; xs \\<in> lists S\\<rbrakk>\n       \\<Longrightarrow> emeasure (K.T' I) (sstart S xs) =\n                         emeasure\n                          (distr M (stream_space (count_space UNIV))\n                            (\\<lambda>\\<omega>.\n                                to_stream (\\<lambda>n. X n \\<omega>)))\n                          (sstart S xs)", "show \"sets (K.T' I) = sets (stream_space (count_space UNIV))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sets (K.T' I) = sets (stream_space (count_space UNIV))", "by (simp add: K.sets_T')"], ["proof (state)\nthis:\n  sets (K.T' I) = sets (stream_space (count_space UNIV))\n\ngoal (3 subgoals):\n 1. countable S\n 2. sets\n     (distr M (stream_space (count_space UNIV))\n       (\\<lambda>\\<omega>. to_stream (\\<lambda>n. X n \\<omega>))) =\n    sets (stream_space (count_space UNIV))\n 3. \\<And>xs.\n       \\<lbrakk>xs \\<noteq> []; xs \\<in> lists S\\<rbrakk>\n       \\<Longrightarrow> emeasure (K.T' I) (sstart S xs) =\n                         emeasure\n                          (distr M (stream_space (count_space UNIV))\n                            (\\<lambda>\\<omega>.\n                                to_stream (\\<lambda>n. X n \\<omega>)))\n                          (sstart S xs)", "show \"sets ?D = sets (stream_space (count_space UNIV))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sets\n     (distr M (stream_space (count_space UNIV))\n       (\\<lambda>\\<omega>. to_stream (\\<lambda>n. X n \\<omega>))) =\n    sets (stream_space (count_space UNIV))", "by simp"], ["proof (state)\nthis:\n  sets\n   (distr M (stream_space (count_space UNIV))\n     (\\<lambda>\\<omega>. to_stream (\\<lambda>n. X n \\<omega>))) =\n  sets (stream_space (count_space UNIV))\n\ngoal (2 subgoals):\n 1. countable S\n 2. \\<And>xs.\n       \\<lbrakk>xs \\<noteq> []; xs \\<in> lists S\\<rbrakk>\n       \\<Longrightarrow> emeasure (K.T' I) (sstart S xs) =\n                         emeasure\n                          (distr M (stream_space (count_space UNIV))\n                            (\\<lambda>\\<omega>.\n                                to_stream (\\<lambda>n. X n \\<omega>)))\n                          (sstart S xs)", "fix xs'"], ["proof (state)\ngoal (2 subgoals):\n 1. countable S\n 2. \\<And>xs.\n       \\<lbrakk>xs \\<noteq> []; xs \\<in> lists S\\<rbrakk>\n       \\<Longrightarrow> emeasure (K.T' I) (sstart S xs) =\n                         emeasure\n                          (distr M (stream_space (count_space UNIV))\n                            (\\<lambda>\\<omega>.\n                                to_stream (\\<lambda>n. X n \\<omega>)))\n                          (sstart S xs)", "assume \"xs' \\<noteq> []\" \"xs' \\<in> lists S\""], ["proof (state)\nthis:\n  xs' \\<noteq> []\n  xs' \\<in> lists S\n\ngoal (2 subgoals):\n 1. countable S\n 2. \\<And>xs.\n       \\<lbrakk>xs \\<noteq> []; xs \\<in> lists S\\<rbrakk>\n       \\<Longrightarrow> emeasure (K.T' I) (sstart S xs) =\n                         emeasure\n                          (distr M (stream_space (count_space UNIV))\n                            (\\<lambda>\\<omega>.\n                                to_stream (\\<lambda>n. X n \\<omega>)))\n                          (sstart S xs)", "then"], ["proof (chain)\npicking this:\n  xs' \\<noteq> []\n  xs' \\<in> lists S", "obtain s xs where xs': \"xs' = s # xs\" and s: \"s \\<in> S\" and xs: \"xs \\<in> lists S\""], ["proof (prove)\nusing this:\n  xs' \\<noteq> []\n  xs' \\<in> lists S\n\ngoal (1 subgoal):\n 1. (\\<And>s xs.\n        \\<lbrakk>xs' = s # xs; s \\<in> S; xs \\<in> lists S\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: neq_Nil_conv del: in_listsD)"], ["proof (state)\nthis:\n  xs' = s # xs\n  s \\<in> S\n  xs \\<in> lists S\n\ngoal (2 subgoals):\n 1. countable S\n 2. \\<And>xs.\n       \\<lbrakk>xs \\<noteq> []; xs \\<in> lists S\\<rbrakk>\n       \\<Longrightarrow> emeasure (K.T' I) (sstart S xs) =\n                         emeasure\n                          (distr M (stream_space (count_space UNIV))\n                            (\\<lambda>\\<omega>.\n                                to_stream (\\<lambda>n. X n \\<omega>)))\n                          (sstart S xs)", "have \"emeasure (K.T' I) (sstart S xs') = (\\<integral>\\<^sup>+s. emeasure (K.T s) {\\<omega>\\<in>space K.S. s ## \\<omega> \\<in> sstart S xs'} \\<partial>I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure (K.T' I) (sstart S xs') =\n    \\<integral>\\<^sup>+ s. emeasure (K.T s)\n                            {\\<omega>\n                             \\<in> space (stream_space (count_space UNIV)).\n                             s ## \\<omega> \\<in> sstart S xs'}\n                       \\<partial>measure_pmf I", "by (rule K.emeasure_T') measurable"], ["proof (state)\nthis:\n  emeasure (K.T' I) (sstart S xs') =\n  \\<integral>\\<^sup>+ s. emeasure (K.T s)\n                          {\\<omega>\n                           \\<in> space (stream_space (count_space UNIV)).\n                           s ## \\<omega> \\<in> sstart S xs'}\n                     \\<partial>measure_pmf I\n\ngoal (2 subgoals):\n 1. countable S\n 2. \\<And>xs.\n       \\<lbrakk>xs \\<noteq> []; xs \\<in> lists S\\<rbrakk>\n       \\<Longrightarrow> emeasure (K.T' I) (sstart S xs) =\n                         emeasure\n                          (distr M (stream_space (count_space UNIV))\n                            (\\<lambda>\\<omega>.\n                                to_stream (\\<lambda>n. X n \\<omega>)))\n                          (sstart S xs)", "also"], ["proof (state)\nthis:\n  emeasure (K.T' I) (sstart S xs') =\n  \\<integral>\\<^sup>+ s. emeasure (K.T s)\n                          {\\<omega>\n                           \\<in> space (stream_space (count_space UNIV)).\n                           s ## \\<omega> \\<in> sstart S xs'}\n                     \\<partial>measure_pmf I\n\ngoal (2 subgoals):\n 1. countable S\n 2. \\<And>xs.\n       \\<lbrakk>xs \\<noteq> []; xs \\<in> lists S\\<rbrakk>\n       \\<Longrightarrow> emeasure (K.T' I) (sstart S xs) =\n                         emeasure\n                          (distr M (stream_space (count_space UNIV))\n                            (\\<lambda>\\<omega>.\n                                to_stream (\\<lambda>n. X n \\<omega>)))\n                          (sstart S xs)", "have \"\\<dots> = (\\<integral>\\<^sup>+s'. emeasure (K.T s) (sstart S xs) * indicator {s} s' \\<partial>I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ s. emeasure (K.T s)\n                            {\\<omega>\n                             \\<in> space (stream_space (count_space UNIV)).\n                             s ## \\<omega> \\<in> sstart S xs'}\n                       \\<partial>measure_pmf I =\n    \\<integral>\\<^sup>+s'\\<in>{s}. emeasure (K.T s) (sstart S xs)\n    \\<partial>measure_pmf I", "by (intro arg_cong2[where f=emeasure] nn_integral_cong)\n       (auto split: split_indicator simp: emeasure_distr vimage_def space_stream_space neq_Nil_conv xs')"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ s. emeasure (K.T s)\n                          {\\<omega>\n                           \\<in> space (stream_space (count_space UNIV)).\n                           s ## \\<omega> \\<in> sstart S xs'}\n                     \\<partial>measure_pmf I =\n  \\<integral>\\<^sup>+s'\\<in>{s}. emeasure (K.T s) (sstart S xs)\n  \\<partial>measure_pmf I\n\ngoal (2 subgoals):\n 1. countable S\n 2. \\<And>xs.\n       \\<lbrakk>xs \\<noteq> []; xs \\<in> lists S\\<rbrakk>\n       \\<Longrightarrow> emeasure (K.T' I) (sstart S xs) =\n                         emeasure\n                          (distr M (stream_space (count_space UNIV))\n                            (\\<lambda>\\<omega>.\n                                to_stream (\\<lambda>n. X n \\<omega>)))\n                          (sstart S xs)", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ s. emeasure (K.T s)\n                          {\\<omega>\n                           \\<in> space (stream_space (count_space UNIV)).\n                           s ## \\<omega> \\<in> sstart S xs'}\n                     \\<partial>measure_pmf I =\n  \\<integral>\\<^sup>+s'\\<in>{s}. emeasure (K.T s) (sstart S xs)\n  \\<partial>measure_pmf I\n\ngoal (2 subgoals):\n 1. countable S\n 2. \\<And>xs.\n       \\<lbrakk>xs \\<noteq> []; xs \\<in> lists S\\<rbrakk>\n       \\<Longrightarrow> emeasure (K.T' I) (sstart S xs) =\n                         emeasure\n                          (distr M (stream_space (count_space UNIV))\n                            (\\<lambda>\\<omega>.\n                                to_stream (\\<lambda>n. X n \\<omega>)))\n                          (sstart S xs)", "have \"\\<dots> = pmf I s * emeasure (K.T s) (sstart S xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+s'\\<in>{s}. emeasure (K.T s) (sstart S xs)\n    \\<partial>measure_pmf I =\n    ennreal (pmf I s) * emeasure (K.T s) (sstart S xs)", "by (auto simp add: max_def emeasure_pmf_single intro: mult_ac)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+s'\\<in>{s}. emeasure (K.T s) (sstart S xs)\n  \\<partial>measure_pmf I =\n  ennreal (pmf I s) * emeasure (K.T s) (sstart S xs)\n\ngoal (2 subgoals):\n 1. countable S\n 2. \\<And>xs.\n       \\<lbrakk>xs \\<noteq> []; xs \\<in> lists S\\<rbrakk>\n       \\<Longrightarrow> emeasure (K.T' I) (sstart S xs) =\n                         emeasure\n                          (distr M (stream_space (count_space UNIV))\n                            (\\<lambda>\\<omega>.\n                                to_stream (\\<lambda>n. X n \\<omega>)))\n                          (sstart S xs)", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+s'\\<in>{s}. emeasure (K.T s) (sstart S xs)\n  \\<partial>measure_pmf I =\n  ennreal (pmf I s) * emeasure (K.T s) (sstart S xs)\n\ngoal (2 subgoals):\n 1. countable S\n 2. \\<And>xs.\n       \\<lbrakk>xs \\<noteq> []; xs \\<in> lists S\\<rbrakk>\n       \\<Longrightarrow> emeasure (K.T' I) (sstart S xs) =\n                         emeasure\n                          (distr M (stream_space (count_space UNIV))\n                            (\\<lambda>\\<omega>.\n                                to_stream (\\<lambda>n. X n \\<omega>)))\n                          (sstart S xs)", "have \"emeasure (K.T s) (sstart S xs) = ennreal (\\<Prod>i<length xs. pmf (K ((s#xs)!i)) (xs!i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure (K.T s) (sstart S xs) =\n    ennreal (\\<Prod>i<length xs. pmf (K ((s # xs) ! i)) (xs ! i))", "using xs s"], ["proof (prove)\nusing this:\n  xs \\<in> lists S\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. emeasure (K.T s) (sstart S xs) =\n    ennreal (\\<Prod>i<length xs. pmf (K ((s # xs) ! i)) (xs ! i))", "proof (induction arbitrary: s)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s.\n       s \\<in> S \\<Longrightarrow>\n       emeasure (K.T s) (sstart S []) =\n       ennreal (\\<Prod>i<length []. pmf (K ([s] ! i)) ([] ! i))\n 2. \\<And>a l s.\n       \\<lbrakk>a \\<in> S; l \\<in> lists S;\n        \\<And>s.\n           s \\<in> S \\<Longrightarrow>\n           emeasure (K.T s) (sstart S l) =\n           ennreal (\\<Prod>i<length l. pmf (K ((s # l) ! i)) (l ! i));\n        s \\<in> S\\<rbrakk>\n       \\<Longrightarrow> emeasure (K.T s) (sstart S (a # l)) =\n                         ennreal\n                          (\\<Prod>i<length (a # l).\n                              pmf (K ((s # a # l) ! i)) ((a # l) ! i))", "case Nil"], ["proof (state)\nthis:\n  s \\<in> S\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       s \\<in> S \\<Longrightarrow>\n       emeasure (K.T s) (sstart S []) =\n       ennreal (\\<Prod>i<length []. pmf (K ([s] ! i)) ([] ! i))\n 2. \\<And>a l s.\n       \\<lbrakk>a \\<in> S; l \\<in> lists S;\n        \\<And>s.\n           s \\<in> S \\<Longrightarrow>\n           emeasure (K.T s) (sstart S l) =\n           ennreal (\\<Prod>i<length l. pmf (K ((s # l) ! i)) (l ! i));\n        s \\<in> S\\<rbrakk>\n       \\<Longrightarrow> emeasure (K.T s) (sstart S (a # l)) =\n                         ennreal\n                          (\\<Prod>i<length (a # l).\n                              pmf (K ((s # a # l) ! i)) ((a # l) ! i))", "then"], ["proof (chain)\npicking this:\n  s \\<in> S", "show ?case"], ["proof (prove)\nusing this:\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. emeasure (K.T s) (sstart S []) =\n    ennreal (\\<Prod>i<length []. pmf (K ([s] ! i)) ([] ! i))", "by (simp add: K.T.emeasure_eq_1_AE AE_streams)"], ["proof (state)\nthis:\n  emeasure (K.T s) (sstart S []) =\n  ennreal (\\<Prod>i<length []. pmf (K ([s] ! i)) ([] ! i))\n\ngoal (1 subgoal):\n 1. \\<And>a l s.\n       \\<lbrakk>a \\<in> S; l \\<in> lists S;\n        \\<And>s.\n           s \\<in> S \\<Longrightarrow>\n           emeasure (K.T s) (sstart S l) =\n           ennreal (\\<Prod>i<length l. pmf (K ((s # l) ! i)) (l ! i));\n        s \\<in> S\\<rbrakk>\n       \\<Longrightarrow> emeasure (K.T s) (sstart S (a # l)) =\n                         ennreal\n                          (\\<Prod>i<length (a # l).\n                              pmf (K ((s # a # l) ! i)) ((a # l) ! i))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a l s.\n       \\<lbrakk>a \\<in> S; l \\<in> lists S;\n        \\<And>s.\n           s \\<in> S \\<Longrightarrow>\n           emeasure (K.T s) (sstart S l) =\n           ennreal (\\<Prod>i<length l. pmf (K ((s # l) ! i)) (l ! i));\n        s \\<in> S\\<rbrakk>\n       \\<Longrightarrow> emeasure (K.T s) (sstart S (a # l)) =\n                         ennreal\n                          (\\<Prod>i<length (a # l).\n                              pmf (K ((s # a # l) ! i)) ((a # l) ! i))", "case (Cons t xs)"], ["proof (state)\nthis:\n  t \\<in> S\n  xs \\<in> lists S\n  ?s12 \\<in> S \\<Longrightarrow>\n  emeasure (K.T ?s12) (sstart S xs) =\n  ennreal (\\<Prod>i<length xs. pmf (K ((?s12 # xs) ! i)) (xs ! i))\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>a l s.\n       \\<lbrakk>a \\<in> S; l \\<in> lists S;\n        \\<And>s.\n           s \\<in> S \\<Longrightarrow>\n           emeasure (K.T s) (sstart S l) =\n           ennreal (\\<Prod>i<length l. pmf (K ((s # l) ! i)) (l ! i));\n        s \\<in> S\\<rbrakk>\n       \\<Longrightarrow> emeasure (K.T s) (sstart S (a # l)) =\n                         ennreal\n                          (\\<Prod>i<length (a # l).\n                              pmf (K ((s # a # l) ! i)) ((a # l) ! i))", "have \"emeasure (K.T s) (sstart S (t # xs)) =\n      emeasure (K.T s) {x\\<in>space (K.T s). shd x = t \\<and> stl x \\<in> sstart S xs}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure (K.T s) (sstart S (t # xs)) =\n    emeasure (K.T s)\n     {x \\<in> space (K.T s). shd x = t \\<and> stl x \\<in> sstart S xs}", "by (intro arg_cong2[where f=emeasure]) (auto simp: space_stream_space)"], ["proof (state)\nthis:\n  emeasure (K.T s) (sstart S (t # xs)) =\n  emeasure (K.T s)\n   {x \\<in> space (K.T s). shd x = t \\<and> stl x \\<in> sstart S xs}\n\ngoal (1 subgoal):\n 1. \\<And>a l s.\n       \\<lbrakk>a \\<in> S; l \\<in> lists S;\n        \\<And>s.\n           s \\<in> S \\<Longrightarrow>\n           emeasure (K.T s) (sstart S l) =\n           ennreal (\\<Prod>i<length l. pmf (K ((s # l) ! i)) (l ! i));\n        s \\<in> S\\<rbrakk>\n       \\<Longrightarrow> emeasure (K.T s) (sstart S (a # l)) =\n                         ennreal\n                          (\\<Prod>i<length (a # l).\n                              pmf (K ((s # a # l) ! i)) ((a # l) ! i))", "also"], ["proof (state)\nthis:\n  emeasure (K.T s) (sstart S (t # xs)) =\n  emeasure (K.T s)\n   {x \\<in> space (K.T s). shd x = t \\<and> stl x \\<in> sstart S xs}\n\ngoal (1 subgoal):\n 1. \\<And>a l s.\n       \\<lbrakk>a \\<in> S; l \\<in> lists S;\n        \\<And>s.\n           s \\<in> S \\<Longrightarrow>\n           emeasure (K.T s) (sstart S l) =\n           ennreal (\\<Prod>i<length l. pmf (K ((s # l) ! i)) (l ! i));\n        s \\<in> S\\<rbrakk>\n       \\<Longrightarrow> emeasure (K.T s) (sstart S (a # l)) =\n                         ennreal\n                          (\\<Prod>i<length (a # l).\n                              pmf (K ((s # a # l) ! i)) ((a # l) ! i))", "have \"\\<dots> = (\\<integral>\\<^sup>+t'. emeasure (K.T t') {x\\<in>space K.S. t' = t \\<and> x \\<in> sstart S xs} \\<partial>K s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. emeasure (K.T s)\n     {x \\<in> space (K.T s). shd x = t \\<and> stl x \\<in> sstart S xs} =\n    \\<integral>\\<^sup>+ t'. emeasure (K.T t')\n                             {x \\<in> space\n (stream_space (count_space UNIV)).\n                              t' = t \\<and> x \\<in> sstart S xs}\n                       \\<partial>measure_pmf (K s)", "by (subst K.emeasure_Collect_T) auto"], ["proof (state)\nthis:\n  emeasure (K.T s)\n   {x \\<in> space (K.T s). shd x = t \\<and> stl x \\<in> sstart S xs} =\n  \\<integral>\\<^sup>+ t'. emeasure (K.T t')\n                           {x \\<in> space (stream_space (count_space UNIV)).\n                            t' = t \\<and> x \\<in> sstart S xs}\n                     \\<partial>measure_pmf (K s)\n\ngoal (1 subgoal):\n 1. \\<And>a l s.\n       \\<lbrakk>a \\<in> S; l \\<in> lists S;\n        \\<And>s.\n           s \\<in> S \\<Longrightarrow>\n           emeasure (K.T s) (sstart S l) =\n           ennreal (\\<Prod>i<length l. pmf (K ((s # l) ! i)) (l ! i));\n        s \\<in> S\\<rbrakk>\n       \\<Longrightarrow> emeasure (K.T s) (sstart S (a # l)) =\n                         ennreal\n                          (\\<Prod>i<length (a # l).\n                              pmf (K ((s # a # l) ! i)) ((a # l) ! i))", "also"], ["proof (state)\nthis:\n  emeasure (K.T s)\n   {x \\<in> space (K.T s). shd x = t \\<and> stl x \\<in> sstart S xs} =\n  \\<integral>\\<^sup>+ t'. emeasure (K.T t')\n                           {x \\<in> space (stream_space (count_space UNIV)).\n                            t' = t \\<and> x \\<in> sstart S xs}\n                     \\<partial>measure_pmf (K s)\n\ngoal (1 subgoal):\n 1. \\<And>a l s.\n       \\<lbrakk>a \\<in> S; l \\<in> lists S;\n        \\<And>s.\n           s \\<in> S \\<Longrightarrow>\n           emeasure (K.T s) (sstart S l) =\n           ennreal (\\<Prod>i<length l. pmf (K ((s # l) ! i)) (l ! i));\n        s \\<in> S\\<rbrakk>\n       \\<Longrightarrow> emeasure (K.T s) (sstart S (a # l)) =\n                         ennreal\n                          (\\<Prod>i<length (a # l).\n                              pmf (K ((s # a # l) ! i)) ((a # l) ! i))", "have \"\\<dots> = (\\<integral>\\<^sup>+t'. emeasure (K.T t) (sstart S xs) * indicator {t} t' \\<partial>K s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+ t'. emeasure (K.T t')\n                             {x \\<in> space\n (stream_space (count_space UNIV)).\n                              t' = t \\<and> x \\<in> sstart S xs}\n                       \\<partial>measure_pmf (K s) =\n    \\<integral>\\<^sup>+t'\\<in>{t}. emeasure (K.T t) (sstart S xs)\n    \\<partial>measure_pmf (K s)", "by (intro nn_integral_cong) (auto split: split_indicator simp: space_stream_space)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ t'. emeasure (K.T t')\n                           {x \\<in> space (stream_space (count_space UNIV)).\n                            t' = t \\<and> x \\<in> sstart S xs}\n                     \\<partial>measure_pmf (K s) =\n  \\<integral>\\<^sup>+t'\\<in>{t}. emeasure (K.T t) (sstart S xs)\n  \\<partial>measure_pmf (K s)\n\ngoal (1 subgoal):\n 1. \\<And>a l s.\n       \\<lbrakk>a \\<in> S; l \\<in> lists S;\n        \\<And>s.\n           s \\<in> S \\<Longrightarrow>\n           emeasure (K.T s) (sstart S l) =\n           ennreal (\\<Prod>i<length l. pmf (K ((s # l) ! i)) (l ! i));\n        s \\<in> S\\<rbrakk>\n       \\<Longrightarrow> emeasure (K.T s) (sstart S (a # l)) =\n                         ennreal\n                          (\\<Prod>i<length (a # l).\n                              pmf (K ((s # a # l) ! i)) ((a # l) ! i))", "also"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+ t'. emeasure (K.T t')\n                           {x \\<in> space (stream_space (count_space UNIV)).\n                            t' = t \\<and> x \\<in> sstart S xs}\n                     \\<partial>measure_pmf (K s) =\n  \\<integral>\\<^sup>+t'\\<in>{t}. emeasure (K.T t) (sstart S xs)\n  \\<partial>measure_pmf (K s)\n\ngoal (1 subgoal):\n 1. \\<And>a l s.\n       \\<lbrakk>a \\<in> S; l \\<in> lists S;\n        \\<And>s.\n           s \\<in> S \\<Longrightarrow>\n           emeasure (K.T s) (sstart S l) =\n           ennreal (\\<Prod>i<length l. pmf (K ((s # l) ! i)) (l ! i));\n        s \\<in> S\\<rbrakk>\n       \\<Longrightarrow> emeasure (K.T s) (sstart S (a # l)) =\n                         ennreal\n                          (\\<Prod>i<length (a # l).\n                              pmf (K ((s # a # l) ! i)) ((a # l) ! i))", "have \"\\<dots> = emeasure (K.T t) (sstart S xs) * pmf (K s) t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<integral>\\<^sup>+t'\\<in>{t}. emeasure (K.T t) (sstart S xs)\n    \\<partial>measure_pmf (K s) =\n    emeasure (K.T t) (sstart S xs) * ennreal (pmf (K s) t)", "by (simp add: emeasure_pmf_single max_def)"], ["proof (state)\nthis:\n  \\<integral>\\<^sup>+t'\\<in>{t}. emeasure (K.T t) (sstart S xs)\n  \\<partial>measure_pmf (K s) =\n  emeasure (K.T t) (sstart S xs) * ennreal (pmf (K s) t)\n\ngoal (1 subgoal):\n 1. \\<And>a l s.\n       \\<lbrakk>a \\<in> S; l \\<in> lists S;\n        \\<And>s.\n           s \\<in> S \\<Longrightarrow>\n           emeasure (K.T s) (sstart S l) =\n           ennreal (\\<Prod>i<length l. pmf (K ((s # l) ! i)) (l ! i));\n        s \\<in> S\\<rbrakk>\n       \\<Longrightarrow> emeasure (K.T s) (sstart S (a # l)) =\n                         ennreal\n                          (\\<Prod>i<length (a # l).\n                              pmf (K ((s # a # l) ! i)) ((a # l) ! i))", "finally"], ["proof (chain)\npicking this:\n  emeasure (K.T s) (sstart S (t # xs)) =\n  emeasure (K.T t) (sstart S xs) * ennreal (pmf (K s) t)", "show ?case"], ["proof (prove)\nusing this:\n  emeasure (K.T s) (sstart S (t # xs)) =\n  emeasure (K.T t) (sstart S xs) * ennreal (pmf (K s) t)\n\ngoal (1 subgoal):\n 1. emeasure (K.T s) (sstart S (t # xs)) =\n    ennreal\n     (\\<Prod>i<length (t # xs). pmf (K ((s # t # xs) ! i)) ((t # xs) ! i))", "by (simp add: lessThan_Suc_eq_insert_0 zero_notin_Suc_image prod.reindex Cons\n        prod_nonneg ennreal_mult[symmetric])"], ["proof (state)\nthis:\n  emeasure (K.T s) (sstart S (t # xs)) =\n  ennreal\n   (\\<Prod>i<length (t # xs). pmf (K ((s # t # xs) ! i)) ((t # xs) ! i))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  emeasure (K.T s) (sstart S xs) =\n  ennreal (\\<Prod>i<length xs. pmf (K ((s # xs) ! i)) (xs ! i))\n\ngoal (2 subgoals):\n 1. countable S\n 2. \\<And>xs.\n       \\<lbrakk>xs \\<noteq> []; xs \\<in> lists S\\<rbrakk>\n       \\<Longrightarrow> emeasure (K.T' I) (sstart S xs) =\n                         emeasure\n                          (distr M (stream_space (count_space UNIV))\n                            (\\<lambda>\\<omega>.\n                                to_stream (\\<lambda>n. X n \\<omega>)))\n                          (sstart S xs)", "also"], ["proof (state)\nthis:\n  emeasure (K.T s) (sstart S xs) =\n  ennreal (\\<Prod>i<length xs. pmf (K ((s # xs) ! i)) (xs ! i))\n\ngoal (2 subgoals):\n 1. countable S\n 2. \\<And>xs.\n       \\<lbrakk>xs \\<noteq> []; xs \\<in> lists S\\<rbrakk>\n       \\<Longrightarrow> emeasure (K.T' I) (sstart S xs) =\n                         emeasure\n                          (distr M (stream_space (count_space UNIV))\n                            (\\<lambda>\\<omega>.\n                                to_stream (\\<lambda>n. X n \\<omega>)))\n                          (sstart S xs)", "have \"pmf I s * ennreal (\\<Prod>i<length xs. pmf (K ((s#xs)!i)) (xs!i)) =\n    \\<P>(x in M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal (pmf I s) *\n    ennreal (\\<Prod>i<length xs. pmf (K ((s # xs) ! i)) (xs ! i)) =\n    ennreal\n     (prob\n       {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i})", "using xs s"], ["proof (prove)\nusing this:\n  xs \\<in> lists S\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. ennreal (pmf I s) *\n    ennreal (\\<Prod>i<length xs. pmf (K ((s # xs) ! i)) (xs ! i)) =\n    ennreal\n     (prob\n       {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i})", "proof (induction xs rule: rev_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>[] \\<in> lists S; s \\<in> S\\<rbrakk>\n    \\<Longrightarrow> ennreal (pmf I s) *\n                      ennreal\n                       (\\<Prod>i<length []. pmf (K ([s] ! i)) ([] ! i)) =\n                      ennreal\n                       (prob\n                         {x \\<in> space M.\n                          \\<forall>i\\<le>length []. X i x = [s] ! i})\n 2. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>xs \\<in> lists S; s \\<in> S\\<rbrakk>\n                \\<Longrightarrow> ennreal (pmf I s) *\n                                  ennreal\n                                   (\\<Prod>i<length xs.\n pmf (K ((s # xs) ! i)) (xs ! i)) =\n                                  ennreal\n                                   (prob\n                                     {x \\<in> space M.\n\\<forall>i\\<le>length xs. X i x = (s # xs) ! i});\n        xs @ [x] \\<in> lists S; s \\<in> S\\<rbrakk>\n       \\<Longrightarrow> ennreal (pmf I s) *\n                         ennreal\n                          (\\<Prod>i<length (xs @ [x]).\n                              pmf (K ((s # xs @ [x]) ! i))\n                               ((xs @ [x]) ! i)) =\n                         ennreal\n                          (prob\n                            {xa \\<in> space M.\n                             \\<forall>i\\<le>length (xs @ [x]).\n                                X i xa = (s # xs @ [x]) ! i})", "case Nil"], ["proof (state)\nthis:\n  [] \\<in> lists S\n  s \\<in> S\n\ngoal (2 subgoals):\n 1. \\<lbrakk>[] \\<in> lists S; s \\<in> S\\<rbrakk>\n    \\<Longrightarrow> ennreal (pmf I s) *\n                      ennreal\n                       (\\<Prod>i<length []. pmf (K ([s] ! i)) ([] ! i)) =\n                      ennreal\n                       (prob\n                         {x \\<in> space M.\n                          \\<forall>i\\<le>length []. X i x = [s] ! i})\n 2. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>xs \\<in> lists S; s \\<in> S\\<rbrakk>\n                \\<Longrightarrow> ennreal (pmf I s) *\n                                  ennreal\n                                   (\\<Prod>i<length xs.\n pmf (K ((s # xs) ! i)) (xs ! i)) =\n                                  ennreal\n                                   (prob\n                                     {x \\<in> space M.\n\\<forall>i\\<le>length xs. X i x = (s # xs) ! i});\n        xs @ [x] \\<in> lists S; s \\<in> S\\<rbrakk>\n       \\<Longrightarrow> ennreal (pmf I s) *\n                         ennreal\n                          (\\<Prod>i<length (xs @ [x]).\n                              pmf (K ((s # xs @ [x]) ! i))\n                               ((xs @ [x]) ! i)) =\n                         ennreal\n                          (prob\n                            {xa \\<in> space M.\n                             \\<forall>i\\<le>length (xs @ [x]).\n                                X i xa = (s # xs @ [x]) ! i})", "have \"pmf I s = prob {x \\<in> space M. X 0 x = s}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pmf I s = prob {x \\<in> space M. X 0 x = s}", "by transfer (simp add: vimage_def Int_def measure_distr conj_commute)"], ["proof (state)\nthis:\n  pmf I s = prob {x \\<in> space M. X 0 x = s}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>[] \\<in> lists S; s \\<in> S\\<rbrakk>\n    \\<Longrightarrow> ennreal (pmf I s) *\n                      ennreal\n                       (\\<Prod>i<length []. pmf (K ([s] ! i)) ([] ! i)) =\n                      ennreal\n                       (prob\n                         {x \\<in> space M.\n                          \\<forall>i\\<le>length []. X i x = [s] ! i})\n 2. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>xs \\<in> lists S; s \\<in> S\\<rbrakk>\n                \\<Longrightarrow> ennreal (pmf I s) *\n                                  ennreal\n                                   (\\<Prod>i<length xs.\n pmf (K ((s # xs) ! i)) (xs ! i)) =\n                                  ennreal\n                                   (prob\n                                     {x \\<in> space M.\n\\<forall>i\\<le>length xs. X i x = (s # xs) ! i});\n        xs @ [x] \\<in> lists S; s \\<in> S\\<rbrakk>\n       \\<Longrightarrow> ennreal (pmf I s) *\n                         ennreal\n                          (\\<Prod>i<length (xs @ [x]).\n                              pmf (K ((s # xs @ [x]) ! i))\n                               ((xs @ [x]) ! i)) =\n                         ennreal\n                          (prob\n                            {xa \\<in> space M.\n                             \\<forall>i\\<le>length (xs @ [x]).\n                                X i xa = (s # xs @ [x]) ! i})", "then"], ["proof (chain)\npicking this:\n  pmf I s = prob {x \\<in> space M. X 0 x = s}", "show ?case"], ["proof (prove)\nusing this:\n  pmf I s = prob {x \\<in> space M. X 0 x = s}\n\ngoal (1 subgoal):\n 1. ennreal (pmf I s) *\n    ennreal (\\<Prod>i<length []. pmf (K ([s] ! i)) ([] ! i)) =\n    ennreal\n     (prob {x \\<in> space M. \\<forall>i\\<le>length []. X i x = [s] ! i})", "by simp"], ["proof (state)\nthis:\n  ennreal (pmf I s) *\n  ennreal (\\<Prod>i<length []. pmf (K ([s] ! i)) ([] ! i)) =\n  ennreal\n   (prob {x \\<in> space M. \\<forall>i\\<le>length []. X i x = [s] ! i})\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>xs \\<in> lists S; s \\<in> S\\<rbrakk>\n                \\<Longrightarrow> ennreal (pmf I s) *\n                                  ennreal\n                                   (\\<Prod>i<length xs.\n pmf (K ((s # xs) ! i)) (xs ! i)) =\n                                  ennreal\n                                   (prob\n                                     {x \\<in> space M.\n\\<forall>i\\<le>length xs. X i x = (s # xs) ! i});\n        xs @ [x] \\<in> lists S; s \\<in> S\\<rbrakk>\n       \\<Longrightarrow> ennreal (pmf I s) *\n                         ennreal\n                          (\\<Prod>i<length (xs @ [x]).\n                              pmf (K ((s # xs @ [x]) ! i))\n                               ((xs @ [x]) ! i)) =\n                         ennreal\n                          (prob\n                            {xa \\<in> space M.\n                             \\<forall>i\\<le>length (xs @ [x]).\n                                X i xa = (s # xs @ [x]) ! i})", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>xs \\<in> lists S; s \\<in> S\\<rbrakk>\n                \\<Longrightarrow> ennreal (pmf I s) *\n                                  ennreal\n                                   (\\<Prod>i<length xs.\n pmf (K ((s # xs) ! i)) (xs ! i)) =\n                                  ennreal\n                                   (prob\n                                     {x \\<in> space M.\n\\<forall>i\\<le>length xs. X i x = (s # xs) ! i});\n        xs @ [x] \\<in> lists S; s \\<in> S\\<rbrakk>\n       \\<Longrightarrow> ennreal (pmf I s) *\n                         ennreal\n                          (\\<Prod>i<length (xs @ [x]).\n                              pmf (K ((s # xs @ [x]) ! i))\n                               ((xs @ [x]) ! i)) =\n                         ennreal\n                          (prob\n                            {xa \\<in> space M.\n                             \\<forall>i\\<le>length (xs @ [x]).\n                                X i xa = (s # xs @ [x]) ! i})", "case (snoc t xs)"], ["proof (state)\nthis:\n  \\<lbrakk>xs \\<in> lists S; s \\<in> S\\<rbrakk>\n  \\<Longrightarrow> ennreal (pmf I s) *\n                    ennreal\n                     (\\<Prod>i<length xs. pmf (K ((s # xs) ! i)) (xs ! i)) =\n                    ennreal\n                     (prob\n                       {x \\<in> space M.\n                        \\<forall>i\\<le>length xs. X i x = (s # xs) ! i})\n  xs @ [t] \\<in> lists S\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>xs \\<in> lists S; s \\<in> S\\<rbrakk>\n                \\<Longrightarrow> ennreal (pmf I s) *\n                                  ennreal\n                                   (\\<Prod>i<length xs.\n pmf (K ((s # xs) ! i)) (xs ! i)) =\n                                  ennreal\n                                   (prob\n                                     {x \\<in> space M.\n\\<forall>i\\<le>length xs. X i x = (s # xs) ! i});\n        xs @ [x] \\<in> lists S; s \\<in> S\\<rbrakk>\n       \\<Longrightarrow> ennreal (pmf I s) *\n                         ennreal\n                          (\\<Prod>i<length (xs @ [x]).\n                              pmf (K ((s # xs @ [x]) ! i))\n                               ((xs @ [x]) ! i)) =\n                         ennreal\n                          (prob\n                            {xa \\<in> space M.\n                             \\<forall>i\\<le>length (xs @ [x]).\n                                X i xa = (s # xs @ [x]) ! i})", "let ?l = \"length xs\" and ?lt = \"length (xs @ [t])\" and ?xs' = \"s # xs @ [t]\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>xs \\<in> lists S; s \\<in> S\\<rbrakk>\n                \\<Longrightarrow> ennreal (pmf I s) *\n                                  ennreal\n                                   (\\<Prod>i<length xs.\n pmf (K ((s # xs) ! i)) (xs ! i)) =\n                                  ennreal\n                                   (prob\n                                     {x \\<in> space M.\n\\<forall>i\\<le>length xs. X i x = (s # xs) ! i});\n        xs @ [x] \\<in> lists S; s \\<in> S\\<rbrakk>\n       \\<Longrightarrow> ennreal (pmf I s) *\n                         ennreal\n                          (\\<Prod>i<length (xs @ [x]).\n                              pmf (K ((s # xs @ [x]) ! i))\n                               ((xs @ [x]) ! i)) =\n                         ennreal\n                          (prob\n                            {xa \\<in> space M.\n                             \\<forall>i\\<le>length (xs @ [x]).\n                                X i xa = (s # xs @ [x]) ! i})", "have \"ennreal (pmf I s) * (\\<Prod>i<?lt. pmf (K ((?xs') ! i)) ((xs @ [t]) ! i)) =\n      (ennreal (pmf I s) * (\\<Prod>i<?l. pmf (K ((s # xs) ! i)) (xs ! i))) * pmf (K ((s # xs) ! ?l)) t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal (pmf I s) *\n    ennreal\n     (\\<Prod>i<length (xs @ [t]).\n         pmf (K ((s # xs @ [t]) ! i)) ((xs @ [t]) ! i)) =\n    ennreal (pmf I s) *\n    ennreal (\\<Prod>i<length xs. pmf (K ((s # xs) ! i)) (xs ! i)) *\n    ennreal (pmf (K ((s # xs) ! length xs)) t)", "by (simp add: lessThan_Suc mult_ac nth_append append_Cons[symmetric] prod_nonneg ennreal_mult[symmetric]\n               del: append_Cons)"], ["proof (state)\nthis:\n  ennreal (pmf I s) *\n  ennreal\n   (\\<Prod>i<length (xs @ [t]).\n       pmf (K ((s # xs @ [t]) ! i)) ((xs @ [t]) ! i)) =\n  ennreal (pmf I s) *\n  ennreal (\\<Prod>i<length xs. pmf (K ((s # xs) ! i)) (xs ! i)) *\n  ennreal (pmf (K ((s # xs) ! length xs)) t)\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>xs \\<in> lists S; s \\<in> S\\<rbrakk>\n                \\<Longrightarrow> ennreal (pmf I s) *\n                                  ennreal\n                                   (\\<Prod>i<length xs.\n pmf (K ((s # xs) ! i)) (xs ! i)) =\n                                  ennreal\n                                   (prob\n                                     {x \\<in> space M.\n\\<forall>i\\<le>length xs. X i x = (s # xs) ! i});\n        xs @ [x] \\<in> lists S; s \\<in> S\\<rbrakk>\n       \\<Longrightarrow> ennreal (pmf I s) *\n                         ennreal\n                          (\\<Prod>i<length (xs @ [x]).\n                              pmf (K ((s # xs @ [x]) ! i))\n                               ((xs @ [x]) ! i)) =\n                         ennreal\n                          (prob\n                            {xa \\<in> space M.\n                             \\<forall>i\\<le>length (xs @ [x]).\n                                X i xa = (s # xs @ [x]) ! i})", "also"], ["proof (state)\nthis:\n  ennreal (pmf I s) *\n  ennreal\n   (\\<Prod>i<length (xs @ [t]).\n       pmf (K ((s # xs @ [t]) ! i)) ((xs @ [t]) ! i)) =\n  ennreal (pmf I s) *\n  ennreal (\\<Prod>i<length xs. pmf (K ((s # xs) ! i)) (xs ! i)) *\n  ennreal (pmf (K ((s # xs) ! length xs)) t)\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>xs \\<in> lists S; s \\<in> S\\<rbrakk>\n                \\<Longrightarrow> ennreal (pmf I s) *\n                                  ennreal\n                                   (\\<Prod>i<length xs.\n pmf (K ((s # xs) ! i)) (xs ! i)) =\n                                  ennreal\n                                   (prob\n                                     {x \\<in> space M.\n\\<forall>i\\<le>length xs. X i x = (s # xs) ! i});\n        xs @ [x] \\<in> lists S; s \\<in> S\\<rbrakk>\n       \\<Longrightarrow> ennreal (pmf I s) *\n                         ennreal\n                          (\\<Prod>i<length (xs @ [x]).\n                              pmf (K ((s # xs @ [x]) ! i))\n                               ((xs @ [x]) ! i)) =\n                         ennreal\n                          (prob\n                            {xa \\<in> space M.\n                             \\<forall>i\\<le>length (xs @ [x]).\n                                X i xa = (s # xs @ [x]) ! i})", "have \"\\<dots> = \\<P>(x in M. \\<forall>i\\<le>?l. X i x = (s # xs) ! i) * pmf (K ((s # xs) ! ?l)) t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal (pmf I s) *\n    ennreal (\\<Prod>i<length xs. pmf (K ((s # xs) ! i)) (xs ! i)) *\n    ennreal (pmf (K ((s # xs) ! length xs)) t) =\n    ennreal\n     (prob\n       {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i} *\n      pmf (K ((s # xs) ! length xs)) t)", "using snoc"], ["proof (prove)\nusing this:\n  \\<lbrakk>xs \\<in> lists S; s \\<in> S\\<rbrakk>\n  \\<Longrightarrow> ennreal (pmf I s) *\n                    ennreal\n                     (\\<Prod>i<length xs. pmf (K ((s # xs) ! i)) (xs ! i)) =\n                    ennreal\n                     (prob\n                       {x \\<in> space M.\n                        \\<forall>i\\<le>length xs. X i x = (s # xs) ! i})\n  xs @ [t] \\<in> lists S\n  s \\<in> S\n\ngoal (1 subgoal):\n 1. ennreal (pmf I s) *\n    ennreal (\\<Prod>i<length xs. pmf (K ((s # xs) ! i)) (xs ! i)) *\n    ennreal (pmf (K ((s # xs) ! length xs)) t) =\n    ennreal\n     (prob\n       {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i} *\n      pmf (K ((s # xs) ! length xs)) t)", "by (simp add: ennreal_mult[symmetric])"], ["proof (state)\nthis:\n  ennreal (pmf I s) *\n  ennreal (\\<Prod>i<length xs. pmf (K ((s # xs) ! i)) (xs ! i)) *\n  ennreal (pmf (K ((s # xs) ! length xs)) t) =\n  ennreal\n   (prob {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i} *\n    pmf (K ((s # xs) ! length xs)) t)\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>xs \\<in> lists S; s \\<in> S\\<rbrakk>\n                \\<Longrightarrow> ennreal (pmf I s) *\n                                  ennreal\n                                   (\\<Prod>i<length xs.\n pmf (K ((s # xs) ! i)) (xs ! i)) =\n                                  ennreal\n                                   (prob\n                                     {x \\<in> space M.\n\\<forall>i\\<le>length xs. X i x = (s # xs) ! i});\n        xs @ [x] \\<in> lists S; s \\<in> S\\<rbrakk>\n       \\<Longrightarrow> ennreal (pmf I s) *\n                         ennreal\n                          (\\<Prod>i<length (xs @ [x]).\n                              pmf (K ((s # xs @ [x]) ! i))\n                               ((xs @ [x]) ! i)) =\n                         ennreal\n                          (prob\n                            {xa \\<in> space M.\n                             \\<forall>i\\<le>length (xs @ [x]).\n                                X i xa = (s # xs @ [x]) ! i})", "also"], ["proof (state)\nthis:\n  ennreal (pmf I s) *\n  ennreal (\\<Prod>i<length xs. pmf (K ((s # xs) ! i)) (xs ! i)) *\n  ennreal (pmf (K ((s # xs) ! length xs)) t) =\n  ennreal\n   (prob {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i} *\n    pmf (K ((s # xs) ! length xs)) t)\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>xs \\<in> lists S; s \\<in> S\\<rbrakk>\n                \\<Longrightarrow> ennreal (pmf I s) *\n                                  ennreal\n                                   (\\<Prod>i<length xs.\n pmf (K ((s # xs) ! i)) (xs ! i)) =\n                                  ennreal\n                                   (prob\n                                     {x \\<in> space M.\n\\<forall>i\\<le>length xs. X i x = (s # xs) ! i});\n        xs @ [x] \\<in> lists S; s \\<in> S\\<rbrakk>\n       \\<Longrightarrow> ennreal (pmf I s) *\n                         ennreal\n                          (\\<Prod>i<length (xs @ [x]).\n                              pmf (K ((s # xs @ [x]) ! i))\n                               ((xs @ [x]) ! i)) =\n                         ennreal\n                          (prob\n                            {xa \\<in> space M.\n                             \\<forall>i\\<le>length (xs @ [x]).\n                                X i xa = (s # xs @ [x]) ! i})", "have \"\\<dots> = \\<P>(x in M. \\<forall>i\\<le>?lt. X i x = (?xs') ! i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal\n     (prob\n       {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i} *\n      pmf (K ((s # xs) ! length xs)) t) =\n    ennreal\n     (prob\n       {x \\<in> space M.\n        \\<forall>i\\<le>length (xs @ [t]). X i x = (s # xs @ [t]) ! i})", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    ennreal\n     (prob\n       {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i} *\n      pmf (K ((s # xs) ! length xs)) t) =\n    ennreal\n     (prob\n       {x \\<in> space M.\n        \\<forall>i\\<le>length (xs @ [t]). X i x = (s # xs @ [t]) ! i})\n 2. \\<not> ?P \\<Longrightarrow>\n    ennreal\n     (prob\n       {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i} *\n      pmf (K ((s # xs) ! length xs)) t) =\n    ennreal\n     (prob\n       {x \\<in> space M.\n        \\<forall>i\\<le>length (xs @ [t]). X i x = (s # xs @ [t]) ! i})", "assume \"\\<P>(\\<omega> in M. \\<forall>i\\<le>?l. X i \\<omega> = (s # xs) ! i) = 0\""], ["proof (state)\nthis:\n  prob\n   {\\<omega> \\<in> space M.\n    \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i} =\n  0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    ennreal\n     (prob\n       {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i} *\n      pmf (K ((s # xs) ! length xs)) t) =\n    ennreal\n     (prob\n       {x \\<in> space M.\n        \\<forall>i\\<le>length (xs @ [t]). X i x = (s # xs @ [t]) ! i})\n 2. \\<not> ?P \\<Longrightarrow>\n    ennreal\n     (prob\n       {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i} *\n      pmf (K ((s # xs) ! length xs)) t) =\n    ennreal\n     (prob\n       {x \\<in> space M.\n        \\<forall>i\\<le>length (xs @ [t]). X i x = (s # xs @ [t]) ! i})", "moreover"], ["proof (state)\nthis:\n  prob\n   {\\<omega> \\<in> space M.\n    \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i} =\n  0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    ennreal\n     (prob\n       {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i} *\n      pmf (K ((s # xs) ! length xs)) t) =\n    ennreal\n     (prob\n       {x \\<in> space M.\n        \\<forall>i\\<le>length (xs @ [t]). X i x = (s # xs @ [t]) ! i})\n 2. \\<not> ?P \\<Longrightarrow>\n    ennreal\n     (prob\n       {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i} *\n      pmf (K ((s # xs) ! length xs)) t) =\n    ennreal\n     (prob\n       {x \\<in> space M.\n        \\<forall>i\\<le>length (xs @ [t]). X i x = (s # xs @ [t]) ! i})", "have \"\\<P>(x in M. \\<forall>i\\<le>?lt. X i x = (?xs') ! i) \\<le> \\<P>(\\<omega> in M. \\<forall>i\\<le>?l. X i \\<omega> = (s # xs) ! i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob\n     {x \\<in> space M.\n      \\<forall>i\\<le>length (xs @ [t]). X i x = (s # xs @ [t]) ! i}\n    \\<le> prob\n           {\\<omega> \\<in> space M.\n            \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i}", "by (intro M.finite_measure_mono) (auto simp: nth_append nth_Cons split: nat.split)"], ["proof (state)\nthis:\n  prob\n   {x \\<in> space M.\n    \\<forall>i\\<le>length (xs @ [t]). X i x = (s # xs @ [t]) ! i}\n  \\<le> prob\n         {\\<omega> \\<in> space M.\n          \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i}\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    ennreal\n     (prob\n       {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i} *\n      pmf (K ((s # xs) ! length xs)) t) =\n    ennreal\n     (prob\n       {x \\<in> space M.\n        \\<forall>i\\<le>length (xs @ [t]). X i x = (s # xs @ [t]) ! i})\n 2. \\<not> ?P \\<Longrightarrow>\n    ennreal\n     (prob\n       {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i} *\n      pmf (K ((s # xs) ! length xs)) t) =\n    ennreal\n     (prob\n       {x \\<in> space M.\n        \\<forall>i\\<le>length (xs @ [t]). X i x = (s # xs @ [t]) ! i})", "moreover"], ["proof (state)\nthis:\n  prob\n   {x \\<in> space M.\n    \\<forall>i\\<le>length (xs @ [t]). X i x = (s # xs @ [t]) ! i}\n  \\<le> prob\n         {\\<omega> \\<in> space M.\n          \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i}\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    ennreal\n     (prob\n       {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i} *\n      pmf (K ((s # xs) ! length xs)) t) =\n    ennreal\n     (prob\n       {x \\<in> space M.\n        \\<forall>i\\<le>length (xs @ [t]). X i x = (s # xs @ [t]) ! i})\n 2. \\<not> ?P \\<Longrightarrow>\n    ennreal\n     (prob\n       {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i} *\n      pmf (K ((s # xs) ! length xs)) t) =\n    ennreal\n     (prob\n       {x \\<in> space M.\n        \\<forall>i\\<le>length (xs @ [t]). X i x = (s # xs @ [t]) ! i})", "have \"\\<P>(x in M. \\<forall>i\\<le>?l. X i x = (s # xs) ! i) \\<le> \\<P>(\\<omega> in M. \\<forall>i\\<le>?l. X i \\<omega> = (s # xs) ! i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i}\n    \\<le> prob\n           {\\<omega> \\<in> space M.\n            \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i}", "by (intro M.finite_measure_mono) (auto simp: nth_append nth_Cons split: nat.split)"], ["proof (state)\nthis:\n  prob {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i}\n  \\<le> prob\n         {\\<omega> \\<in> space M.\n          \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i}\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    ennreal\n     (prob\n       {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i} *\n      pmf (K ((s # xs) ! length xs)) t) =\n    ennreal\n     (prob\n       {x \\<in> space M.\n        \\<forall>i\\<le>length (xs @ [t]). X i x = (s # xs @ [t]) ! i})\n 2. \\<not> ?P \\<Longrightarrow>\n    ennreal\n     (prob\n       {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i} *\n      pmf (K ((s # xs) ! length xs)) t) =\n    ennreal\n     (prob\n       {x \\<in> space M.\n        \\<forall>i\\<le>length (xs @ [t]). X i x = (s # xs @ [t]) ! i})", "ultimately"], ["proof (chain)\npicking this:\n  prob\n   {\\<omega> \\<in> space M.\n    \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i} =\n  0\n  prob\n   {x \\<in> space M.\n    \\<forall>i\\<le>length (xs @ [t]). X i x = (s # xs @ [t]) ! i}\n  \\<le> prob\n         {\\<omega> \\<in> space M.\n          \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i}\n  prob {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i}\n  \\<le> prob\n         {\\<omega> \\<in> space M.\n          \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i}", "show ?thesis"], ["proof (prove)\nusing this:\n  prob\n   {\\<omega> \\<in> space M.\n    \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i} =\n  0\n  prob\n   {x \\<in> space M.\n    \\<forall>i\\<le>length (xs @ [t]). X i x = (s # xs @ [t]) ! i}\n  \\<le> prob\n         {\\<omega> \\<in> space M.\n          \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i}\n  prob {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i}\n  \\<le> prob\n         {\\<omega> \\<in> space M.\n          \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i}\n\ngoal (1 subgoal):\n 1. ennreal\n     (prob\n       {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i} *\n      pmf (K ((s # xs) ! length xs)) t) =\n    ennreal\n     (prob\n       {x \\<in> space M.\n        \\<forall>i\\<le>length (xs @ [t]). X i x = (s # xs @ [t]) ! i})", "by (simp add: measure_le_0_iff)"], ["proof (state)\nthis:\n  ennreal\n   (prob {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i} *\n    pmf (K ((s # xs) ! length xs)) t) =\n  ennreal\n   (prob\n     {x \\<in> space M.\n      \\<forall>i\\<le>length (xs @ [t]). X i x = (s # xs @ [t]) ! i})\n\ngoal (1 subgoal):\n 1. prob\n     {\\<omega> \\<in> space M.\n      \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i} \\<noteq>\n    0 \\<Longrightarrow>\n    ennreal\n     (prob\n       {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i} *\n      pmf (K ((s # xs) ! length xs)) t) =\n    ennreal\n     (prob\n       {x \\<in> space M.\n        \\<forall>i\\<le>length (xs @ [t]). X i x = (s # xs @ [t]) ! i})", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. prob\n     {\\<omega> \\<in> space M.\n      \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i} \\<noteq>\n    0 \\<Longrightarrow>\n    ennreal\n     (prob\n       {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i} *\n      pmf (K ((s # xs) ! length xs)) t) =\n    ennreal\n     (prob\n       {x \\<in> space M.\n        \\<forall>i\\<le>length (xs @ [t]). X i x = (s # xs @ [t]) ! i})", "assume \"\\<P>(\\<omega> in M. \\<forall>i\\<le>?l. X i \\<omega> = (s # xs) ! i) \\<noteq> 0\""], ["proof (state)\nthis:\n  prob\n   {\\<omega> \\<in> space M.\n    \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i} \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. prob\n     {\\<omega> \\<in> space M.\n      \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i} \\<noteq>\n    0 \\<Longrightarrow>\n    ennreal\n     (prob\n       {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i} *\n      pmf (K ((s # xs) ! length xs)) t) =\n    ennreal\n     (prob\n       {x \\<in> space M.\n        \\<forall>i\\<le>length (xs @ [t]). X i x = (s # xs @ [t]) ! i})", "then"], ["proof (chain)\npicking this:\n  prob\n   {\\<omega> \\<in> space M.\n    \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i} \\<noteq>\n  0", "have *: \"0 < \\<P>(\\<omega> in M. \\<forall>i\\<le>?l. X i \\<omega> = (s # xs) ! i)\""], ["proof (prove)\nusing this:\n  prob\n   {\\<omega> \\<in> space M.\n    \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i} \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. 0 < prob\n         {\\<omega> \\<in> space M.\n          \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i}", "unfolding less_le"], ["proof (prove)\nusing this:\n  prob\n   {\\<omega> \\<in> space M.\n    \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i} \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. 0 \\<le> prob\n             {\\<omega> \\<in> space M.\n              \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i} \\<and>\n    0 \\<noteq>\n    prob\n     {\\<omega> \\<in> space M.\n      \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i}", "by simp"], ["proof (state)\nthis:\n  0 < prob\n       {\\<omega> \\<in> space M.\n        \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i}\n\ngoal (1 subgoal):\n 1. prob\n     {\\<omega> \\<in> space M.\n      \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i} \\<noteq>\n    0 \\<Longrightarrow>\n    ennreal\n     (prob\n       {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i} *\n      pmf (K ((s # xs) ! length xs)) t) =\n    ennreal\n     (prob\n       {x \\<in> space M.\n        \\<forall>i\\<le>length (xs @ [t]). X i x = (s # xs @ [t]) ! i})", "moreover"], ["proof (state)\nthis:\n  0 < prob\n       {\\<omega> \\<in> space M.\n        \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i}\n\ngoal (1 subgoal):\n 1. prob\n     {\\<omega> \\<in> space M.\n      \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i} \\<noteq>\n    0 \\<Longrightarrow>\n    ennreal\n     (prob\n       {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i} *\n      pmf (K ((s # xs) ! length xs)) t) =\n    ennreal\n     (prob\n       {x \\<in> space M.\n        \\<forall>i\\<le>length (xs @ [t]). X i x = (s # xs @ [t]) ! i})", "have \"\\<P>(\\<omega> in M. \\<forall>i\\<le>?l. X i \\<omega> = (s # xs) ! i) \\<le> \\<P>(\\<omega> in M. X ?l \\<omega> = (s # xs) ! ?l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob\n     {\\<omega> \\<in> space M.\n      \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i}\n    \\<le> prob\n           {\\<omega> \\<in> space M.\n            X (length xs) \\<omega> = (s # xs) ! length xs}", "by (intro M.finite_measure_mono) (auto simp: nth_append nth_Cons split: nat.split)"], ["proof (state)\nthis:\n  prob\n   {\\<omega> \\<in> space M.\n    \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i}\n  \\<le> prob\n         {\\<omega> \\<in> space M.\n          X (length xs) \\<omega> = (s # xs) ! length xs}\n\ngoal (1 subgoal):\n 1. prob\n     {\\<omega> \\<in> space M.\n      \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i} \\<noteq>\n    0 \\<Longrightarrow>\n    ennreal\n     (prob\n       {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i} *\n      pmf (K ((s # xs) ! length xs)) t) =\n    ennreal\n     (prob\n       {x \\<in> space M.\n        \\<forall>i\\<le>length (xs @ [t]). X i x = (s # xs @ [t]) ! i})", "ultimately"], ["proof (chain)\npicking this:\n  0 < prob\n       {\\<omega> \\<in> space M.\n        \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i}\n  prob\n   {\\<omega> \\<in> space M.\n    \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i}\n  \\<le> prob\n         {\\<omega> \\<in> space M.\n          X (length xs) \\<omega> = (s # xs) ! length xs}", "have \"\\<P>(\\<omega> in M. X ?l \\<omega> = (s # xs) ! ?l) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  0 < prob\n       {\\<omega> \\<in> space M.\n        \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i}\n  prob\n   {\\<omega> \\<in> space M.\n    \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i}\n  \\<le> prob\n         {\\<omega> \\<in> space M.\n          X (length xs) \\<omega> = (s # xs) ! length xs}\n\ngoal (1 subgoal):\n 1. prob\n     {\\<omega> \\<in> space M.\n      X (length xs) \\<omega> = (s # xs) ! length xs} \\<noteq>\n    0", "by auto"], ["proof (state)\nthis:\n  prob\n   {\\<omega> \\<in> space M.\n    X (length xs) \\<omega> = (s # xs) ! length xs} \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. prob\n     {\\<omega> \\<in> space M.\n      \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i} \\<noteq>\n    0 \\<Longrightarrow>\n    ennreal\n     (prob\n       {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i} *\n      pmf (K ((s # xs) ! length xs)) t) =\n    ennreal\n     (prob\n       {x \\<in> space M.\n        \\<forall>i\\<le>length (xs @ [t]). X i x = (s # xs @ [t]) ! i})", "then"], ["proof (chain)\npicking this:\n  prob\n   {\\<omega> \\<in> space M.\n    X (length xs) \\<omega> = (s # xs) ! length xs} \\<noteq>\n  0", "have \"pmf (K ((s # xs) ! ?l)) t = \\<P>(\\<omega> in M. X ?lt \\<omega> = ?xs' ! ?lt \\<bar> X ?l \\<omega> = (s # xs) ! ?l)\""], ["proof (prove)\nusing this:\n  prob\n   {\\<omega> \\<in> space M.\n    X (length xs) \\<omega> = (s # xs) ! length xs} \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. pmf (K ((s # xs) ! length xs)) t =\n    cond_prob M\n     (\\<lambda>\\<omega>.\n         X (length (xs @ [t])) \\<omega> =\n         (s # xs @ [t]) ! length (xs @ [t]))\n     (\\<lambda>\\<omega>. X (length xs) \\<omega> = (s # xs) ! length xs)", "by (subst pmf_K) (auto simp: less_le)"], ["proof (state)\nthis:\n  pmf (K ((s # xs) ! length xs)) t =\n  cond_prob M\n   (\\<lambda>\\<omega>.\n       X (length (xs @ [t])) \\<omega> = (s # xs @ [t]) ! length (xs @ [t]))\n   (\\<lambda>\\<omega>. X (length xs) \\<omega> = (s # xs) ! length xs)\n\ngoal (1 subgoal):\n 1. prob\n     {\\<omega> \\<in> space M.\n      \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i} \\<noteq>\n    0 \\<Longrightarrow>\n    ennreal\n     (prob\n       {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i} *\n      pmf (K ((s # xs) ! length xs)) t) =\n    ennreal\n     (prob\n       {x \\<in> space M.\n        \\<forall>i\\<le>length (xs @ [t]). X i x = (s # xs @ [t]) ! i})", "also"], ["proof (state)\nthis:\n  pmf (K ((s # xs) ! length xs)) t =\n  cond_prob M\n   (\\<lambda>\\<omega>.\n       X (length (xs @ [t])) \\<omega> = (s # xs @ [t]) ! length (xs @ [t]))\n   (\\<lambda>\\<omega>. X (length xs) \\<omega> = (s # xs) ! length xs)\n\ngoal (1 subgoal):\n 1. prob\n     {\\<omega> \\<in> space M.\n      \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i} \\<noteq>\n    0 \\<Longrightarrow>\n    ennreal\n     (prob\n       {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i} *\n      pmf (K ((s # xs) ! length xs)) t) =\n    ennreal\n     (prob\n       {x \\<in> space M.\n        \\<forall>i\\<le>length (xs @ [t]). X i x = (s # xs @ [t]) ! i})", "have \"\\<dots> = \\<P>(\\<omega> in M. X ?lt \\<omega> = ?xs' ! ?lt \\<bar> \\<forall>i\\<le>?l. X i \\<omega> = (s # xs) ! i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cond_prob M\n     (\\<lambda>\\<omega>.\n         X (length (xs @ [t])) \\<omega> =\n         (s # xs @ [t]) ! length (xs @ [t]))\n     (\\<lambda>\\<omega>. X (length xs) \\<omega> = (s # xs) ! length xs) =\n    cond_prob M\n     (\\<lambda>\\<omega>.\n         X (length (xs @ [t])) \\<omega> =\n         (s # xs @ [t]) ! length (xs @ [t]))\n     (\\<lambda>\\<omega>.\n         \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i)", "using * MC[of ?l \"\\<lambda>i. (s # xs) ! i\" \"?xs' ! ?lt\"]"], ["proof (prove)\nusing this:\n  0 < prob\n       {\\<omega> \\<in> space M.\n        \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i}\n  prob\n   {\\<omega> \\<in> space M.\n    \\<forall>t\\<le>length xs. X t \\<omega> = (s # xs) ! t} \\<noteq>\n  0 \\<Longrightarrow>\n  cond_prob M\n   (\\<lambda>\\<omega>.\n       X (Suc (length xs)) \\<omega> = (s # xs @ [t]) ! length (xs @ [t]))\n   (\\<lambda>\\<omega>.\n       \\<forall>t\\<le>length xs. X t \\<omega> = (s # xs) ! t) =\n  cond_prob M\n   (\\<lambda>\\<omega>.\n       X (Suc (length xs)) \\<omega> = (s # xs @ [t]) ! length (xs @ [t]))\n   (\\<lambda>\\<omega>. X (length xs) \\<omega> = (s # xs) ! length xs)\n\ngoal (1 subgoal):\n 1. cond_prob M\n     (\\<lambda>\\<omega>.\n         X (length (xs @ [t])) \\<omega> =\n         (s # xs @ [t]) ! length (xs @ [t]))\n     (\\<lambda>\\<omega>. X (length xs) \\<omega> = (s # xs) ! length xs) =\n    cond_prob M\n     (\\<lambda>\\<omega>.\n         X (length (xs @ [t])) \\<omega> =\n         (s # xs @ [t]) ! length (xs @ [t]))\n     (\\<lambda>\\<omega>.\n         \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i)", "by simp"], ["proof (state)\nthis:\n  cond_prob M\n   (\\<lambda>\\<omega>.\n       X (length (xs @ [t])) \\<omega> = (s # xs @ [t]) ! length (xs @ [t]))\n   (\\<lambda>\\<omega>. X (length xs) \\<omega> = (s # xs) ! length xs) =\n  cond_prob M\n   (\\<lambda>\\<omega>.\n       X (length (xs @ [t])) \\<omega> = (s # xs @ [t]) ! length (xs @ [t]))\n   (\\<lambda>\\<omega>.\n       \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i)\n\ngoal (1 subgoal):\n 1. prob\n     {\\<omega> \\<in> space M.\n      \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i} \\<noteq>\n    0 \\<Longrightarrow>\n    ennreal\n     (prob\n       {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i} *\n      pmf (K ((s # xs) ! length xs)) t) =\n    ennreal\n     (prob\n       {x \\<in> space M.\n        \\<forall>i\\<le>length (xs @ [t]). X i x = (s # xs @ [t]) ! i})", "also"], ["proof (state)\nthis:\n  cond_prob M\n   (\\<lambda>\\<omega>.\n       X (length (xs @ [t])) \\<omega> = (s # xs @ [t]) ! length (xs @ [t]))\n   (\\<lambda>\\<omega>. X (length xs) \\<omega> = (s # xs) ! length xs) =\n  cond_prob M\n   (\\<lambda>\\<omega>.\n       X (length (xs @ [t])) \\<omega> = (s # xs @ [t]) ! length (xs @ [t]))\n   (\\<lambda>\\<omega>.\n       \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i)\n\ngoal (1 subgoal):\n 1. prob\n     {\\<omega> \\<in> space M.\n      \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i} \\<noteq>\n    0 \\<Longrightarrow>\n    ennreal\n     (prob\n       {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i} *\n      pmf (K ((s # xs) ! length xs)) t) =\n    ennreal\n     (prob\n       {x \\<in> space M.\n        \\<forall>i\\<le>length (xs @ [t]). X i x = (s # xs @ [t]) ! i})", "have \"\\<dots> = \\<P>(\\<omega> in M. \\<forall>i\\<le>?lt. X i \\<omega> = ?xs' ! i) / \\<P>(\\<omega> in M. \\<forall>i\\<le>?l. X i \\<omega> = (s # xs) ! i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cond_prob M\n     (\\<lambda>\\<omega>.\n         X (length (xs @ [t])) \\<omega> =\n         (s # xs @ [t]) ! length (xs @ [t]))\n     (\\<lambda>\\<omega>.\n         \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i) =\n    prob\n     {\\<omega> \\<in> space M.\n      \\<forall>i\\<le>length (xs @ [t]). X i \\<omega> = (s # xs @ [t]) ! i} /\n    prob\n     {\\<omega> \\<in> space M.\n      \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i}", "unfolding cond_prob_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. prob\n     {\\<omega> \\<in> space M.\n      X (length (xs @ [t])) \\<omega> =\n      (s # xs @ [t]) ! length (xs @ [t]) \\<and>\n      (\\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i)} /\n    prob\n     {\\<omega> \\<in> space M.\n      \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i} =\n    prob\n     {\\<omega> \\<in> space M.\n      \\<forall>i\\<le>length (xs @ [t]). X i \\<omega> = (s # xs @ [t]) ! i} /\n    prob\n     {\\<omega> \\<in> space M.\n      \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i}", "by (intro arg_cong2[where f=\"(/)\"] arg_cong2[where f=measure]) (auto simp: nth_Cons nth_append split: nat.splits)"], ["proof (state)\nthis:\n  cond_prob M\n   (\\<lambda>\\<omega>.\n       X (length (xs @ [t])) \\<omega> = (s # xs @ [t]) ! length (xs @ [t]))\n   (\\<lambda>\\<omega>.\n       \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i) =\n  prob\n   {\\<omega> \\<in> space M.\n    \\<forall>i\\<le>length (xs @ [t]). X i \\<omega> = (s # xs @ [t]) ! i} /\n  prob\n   {\\<omega> \\<in> space M.\n    \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i}\n\ngoal (1 subgoal):\n 1. prob\n     {\\<omega> \\<in> space M.\n      \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i} \\<noteq>\n    0 \\<Longrightarrow>\n    ennreal\n     (prob\n       {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i} *\n      pmf (K ((s # xs) ! length xs)) t) =\n    ennreal\n     (prob\n       {x \\<in> space M.\n        \\<forall>i\\<le>length (xs @ [t]). X i x = (s # xs @ [t]) ! i})", "finally"], ["proof (chain)\npicking this:\n  pmf (K ((s # xs) ! length xs)) t =\n  prob\n   {\\<omega> \\<in> space M.\n    \\<forall>i\\<le>length (xs @ [t]). X i \\<omega> = (s # xs @ [t]) ! i} /\n  prob\n   {\\<omega> \\<in> space M.\n    \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i}", "show ?thesis"], ["proof (prove)\nusing this:\n  pmf (K ((s # xs) ! length xs)) t =\n  prob\n   {\\<omega> \\<in> space M.\n    \\<forall>i\\<le>length (xs @ [t]). X i \\<omega> = (s # xs @ [t]) ! i} /\n  prob\n   {\\<omega> \\<in> space M.\n    \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i}\n\ngoal (1 subgoal):\n 1. ennreal\n     (prob\n       {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i} *\n      pmf (K ((s # xs) ! length xs)) t) =\n    ennreal\n     (prob\n       {x \\<in> space M.\n        \\<forall>i\\<le>length (xs @ [t]). X i x = (s # xs @ [t]) ! i})", "using *"], ["proof (prove)\nusing this:\n  pmf (K ((s # xs) ! length xs)) t =\n  prob\n   {\\<omega> \\<in> space M.\n    \\<forall>i\\<le>length (xs @ [t]). X i \\<omega> = (s # xs @ [t]) ! i} /\n  prob\n   {\\<omega> \\<in> space M.\n    \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i}\n  0 < prob\n       {\\<omega> \\<in> space M.\n        \\<forall>i\\<le>length xs. X i \\<omega> = (s # xs) ! i}\n\ngoal (1 subgoal):\n 1. ennreal\n     (prob\n       {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i} *\n      pmf (K ((s # xs) ! length xs)) t) =\n    ennreal\n     (prob\n       {x \\<in> space M.\n        \\<forall>i\\<le>length (xs @ [t]). X i x = (s # xs @ [t]) ! i})", "by simp"], ["proof (state)\nthis:\n  ennreal\n   (prob {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i} *\n    pmf (K ((s # xs) ! length xs)) t) =\n  ennreal\n   (prob\n     {x \\<in> space M.\n      \\<forall>i\\<le>length (xs @ [t]). X i x = (s # xs @ [t]) ! i})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ennreal\n   (prob {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i} *\n    pmf (K ((s # xs) ! length xs)) t) =\n  ennreal\n   (prob\n     {x \\<in> space M.\n      \\<forall>i\\<le>length (xs @ [t]). X i x = (s # xs @ [t]) ! i})\n\ngoal (1 subgoal):\n 1. \\<And>x xs.\n       \\<lbrakk>\\<lbrakk>xs \\<in> lists S; s \\<in> S\\<rbrakk>\n                \\<Longrightarrow> ennreal (pmf I s) *\n                                  ennreal\n                                   (\\<Prod>i<length xs.\n pmf (K ((s # xs) ! i)) (xs ! i)) =\n                                  ennreal\n                                   (prob\n                                     {x \\<in> space M.\n\\<forall>i\\<le>length xs. X i x = (s # xs) ! i});\n        xs @ [x] \\<in> lists S; s \\<in> S\\<rbrakk>\n       \\<Longrightarrow> ennreal (pmf I s) *\n                         ennreal\n                          (\\<Prod>i<length (xs @ [x]).\n                              pmf (K ((s # xs @ [x]) ! i))\n                               ((xs @ [x]) ! i)) =\n                         ennreal\n                          (prob\n                            {xa \\<in> space M.\n                             \\<forall>i\\<le>length (xs @ [x]).\n                                X i xa = (s # xs @ [x]) ! i})", "finally"], ["proof (chain)\npicking this:\n  ennreal (pmf I s) *\n  ennreal\n   (\\<Prod>i<length (xs @ [t]).\n       pmf (K ((s # xs @ [t]) ! i)) ((xs @ [t]) ! i)) =\n  ennreal\n   (prob\n     {x \\<in> space M.\n      \\<forall>i\\<le>length (xs @ [t]). X i x = (s # xs @ [t]) ! i})", "show ?case"], ["proof (prove)\nusing this:\n  ennreal (pmf I s) *\n  ennreal\n   (\\<Prod>i<length (xs @ [t]).\n       pmf (K ((s # xs @ [t]) ! i)) ((xs @ [t]) ! i)) =\n  ennreal\n   (prob\n     {x \\<in> space M.\n      \\<forall>i\\<le>length (xs @ [t]). X i x = (s # xs @ [t]) ! i})\n\ngoal (1 subgoal):\n 1. ennreal (pmf I s) *\n    ennreal\n     (\\<Prod>i<length (xs @ [t]).\n         pmf (K ((s # xs @ [t]) ! i)) ((xs @ [t]) ! i)) =\n    ennreal\n     (prob\n       {x \\<in> space M.\n        \\<forall>i\\<le>length (xs @ [t]). X i x = (s # xs @ [t]) ! i})", "."], ["proof (state)\nthis:\n  ennreal (pmf I s) *\n  ennreal\n   (\\<Prod>i<length (xs @ [t]).\n       pmf (K ((s # xs @ [t]) ! i)) ((xs @ [t]) ! i)) =\n  ennreal\n   (prob\n     {x \\<in> space M.\n      \\<forall>i\\<le>length (xs @ [t]). X i x = (s # xs @ [t]) ! i})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ennreal (pmf I s) *\n  ennreal (\\<Prod>i<length xs. pmf (K ((s # xs) ! i)) (xs ! i)) =\n  ennreal\n   (prob {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i})\n\ngoal (2 subgoals):\n 1. countable S\n 2. \\<And>xs.\n       \\<lbrakk>xs \\<noteq> []; xs \\<in> lists S\\<rbrakk>\n       \\<Longrightarrow> emeasure (K.T' I) (sstart S xs) =\n                         emeasure\n                          (distr M (stream_space (count_space UNIV))\n                            (\\<lambda>\\<omega>.\n                                to_stream (\\<lambda>n. X n \\<omega>)))\n                          (sstart S xs)", "also"], ["proof (state)\nthis:\n  ennreal (pmf I s) *\n  ennreal (\\<Prod>i<length xs. pmf (K ((s # xs) ! i)) (xs ! i)) =\n  ennreal\n   (prob {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i})\n\ngoal (2 subgoals):\n 1. countable S\n 2. \\<And>xs.\n       \\<lbrakk>xs \\<noteq> []; xs \\<in> lists S\\<rbrakk>\n       \\<Longrightarrow> emeasure (K.T' I) (sstart S xs) =\n                         emeasure\n                          (distr M (stream_space (count_space UNIV))\n                            (\\<lambda>\\<omega>.\n                                to_stream (\\<lambda>n. X n \\<omega>)))\n                          (sstart S xs)", "have \"\\<dots> = emeasure ?D (sstart S xs')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ennreal\n     (prob\n       {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i}) =\n    emeasure\n     (distr M (stream_space (count_space UNIV))\n       (\\<lambda>\\<omega>. to_stream (\\<lambda>n. X n \\<omega>)))\n     (sstart S xs')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ennreal\n     (prob\n       {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i}) =\n    emeasure\n     (distr M (stream_space (count_space UNIV))\n       (\\<lambda>\\<omega>. to_stream (\\<lambda>n. X n \\<omega>)))\n     (sstart S xs')", "have \"AE x in M. \\<forall>i. X i x \\<in> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE x in M. \\<forall>i. X i x \\<in> S", "using S(2)"], ["proof (prove)\nusing this:\n  AE x in M. X ?n x \\<in> S\n\ngoal (1 subgoal):\n 1. AE x in M. \\<forall>i. X i x \\<in> S", "by (simp add: AE_all_countable)"], ["proof (state)\nthis:\n  AE x in M. \\<forall>i. X i x \\<in> S\n\ngoal (1 subgoal):\n 1. ennreal\n     (prob\n       {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i}) =\n    emeasure\n     (distr M (stream_space (count_space UNIV))\n       (\\<lambda>\\<omega>. to_stream (\\<lambda>n. X n \\<omega>)))\n     (sstart S xs')", "then"], ["proof (chain)\npicking this:\n  AE x in M. \\<forall>i. X i x \\<in> S", "have \"AE x in M. (\\<forall>i\\<le>length xs. X i x = (s # xs) ! i) = (to_stream (\\<lambda>n. X n x) \\<in> sstart S xs')\""], ["proof (prove)\nusing this:\n  AE x in M. \\<forall>i. X i x \\<in> S\n\ngoal (1 subgoal):\n 1. AE x in M. (\\<forall>i\\<le>length xs. X i x = (s # xs) ! i) =\n               (to_stream (\\<lambda>n. X n x) \\<in> sstart S xs')", "proof eventually_elim"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>i. X i x \\<in> S \\<Longrightarrow>\n       (\\<forall>i\\<le>length xs. X i x = (s # xs) ! i) =\n       (to_stream (\\<lambda>n. X n x) \\<in> sstart S xs')", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>i. X i x \\<in> S \\<Longrightarrow>\n       (\\<forall>i\\<le>length xs. X i x = (s # xs) ! i) =\n       (to_stream (\\<lambda>n. X n x) \\<in> sstart S xs')", "assume \"\\<forall>i. X i x \\<in> S\""], ["proof (state)\nthis:\n  \\<forall>i. X i x \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>i. X i x \\<in> S \\<Longrightarrow>\n       (\\<forall>i\\<le>length xs. X i x = (s # xs) ! i) =\n       (to_stream (\\<lambda>n. X n x) \\<in> sstart S xs')", "then"], ["proof (chain)\npicking this:\n  \\<forall>i. X i x \\<in> S", "have \"to_stream (\\<lambda>n. X n x) \\<in> streams S\""], ["proof (prove)\nusing this:\n  \\<forall>i. X i x \\<in> S\n\ngoal (1 subgoal):\n 1. to_stream (\\<lambda>n. X n x) \\<in> streams S", "by (auto simp: streams_iff_snth to_stream_def)"], ["proof (state)\nthis:\n  to_stream (\\<lambda>n. X n x) \\<in> streams S\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>i. X i x \\<in> S \\<Longrightarrow>\n       (\\<forall>i\\<le>length xs. X i x = (s # xs) ! i) =\n       (to_stream (\\<lambda>n. X n x) \\<in> sstart S xs')", "then"], ["proof (chain)\npicking this:\n  to_stream (\\<lambda>n. X n x) \\<in> streams S", "show \"(\\<forall>i\\<le>length xs. X i x = (s # xs) ! i) = (to_stream (\\<lambda>n. X n x) \\<in> sstart S xs')\""], ["proof (prove)\nusing this:\n  to_stream (\\<lambda>n. X n x) \\<in> streams S\n\ngoal (1 subgoal):\n 1. (\\<forall>i\\<le>length xs. X i x = (s # xs) ! i) =\n    (to_stream (\\<lambda>n. X n x) \\<in> sstart S xs')", "by (simp add: sstart_eq xs' to_stream_def less_Suc_eq_le del: sstart.simps(1) in_sstart)"], ["proof (state)\nthis:\n  (\\<forall>i\\<le>length xs. X i x = (s # xs) ! i) =\n  (to_stream (\\<lambda>n. X n x) \\<in> sstart S xs')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  AE x in M. (\\<forall>i\\<le>length xs. X i x = (s # xs) ! i) =\n             (to_stream (\\<lambda>n. X n x) \\<in> sstart S xs')\n\ngoal (1 subgoal):\n 1. ennreal\n     (prob\n       {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i}) =\n    emeasure\n     (distr M (stream_space (count_space UNIV))\n       (\\<lambda>\\<omega>. to_stream (\\<lambda>n. X n \\<omega>)))\n     (sstart S xs')", "then"], ["proof (chain)\npicking this:\n  AE x in M. (\\<forall>i\\<le>length xs. X i x = (s # xs) ! i) =\n             (to_stream (\\<lambda>n. X n x) \\<in> sstart S xs')", "show ?thesis"], ["proof (prove)\nusing this:\n  AE x in M. (\\<forall>i\\<le>length xs. X i x = (s # xs) ! i) =\n             (to_stream (\\<lambda>n. X n x) \\<in> sstart S xs')\n\ngoal (1 subgoal):\n 1. ennreal\n     (prob\n       {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i}) =\n    emeasure\n     (distr M (stream_space (count_space UNIV))\n       (\\<lambda>\\<omega>. to_stream (\\<lambda>n. X n \\<omega>)))\n     (sstart S xs')", "by (auto simp: emeasure_distr M.emeasure_eq_measure intro!: M.finite_measure_eq_AE)"], ["proof (state)\nthis:\n  ennreal\n   (prob\n     {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i}) =\n  emeasure\n   (distr M (stream_space (count_space UNIV))\n     (\\<lambda>\\<omega>. to_stream (\\<lambda>n. X n \\<omega>)))\n   (sstart S xs')\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ennreal\n   (prob\n     {x \\<in> space M. \\<forall>i\\<le>length xs. X i x = (s # xs) ! i}) =\n  emeasure\n   (distr M (stream_space (count_space UNIV))\n     (\\<lambda>\\<omega>. to_stream (\\<lambda>n. X n \\<omega>)))\n   (sstart S xs')\n\ngoal (2 subgoals):\n 1. countable S\n 2. \\<And>xs.\n       \\<lbrakk>xs \\<noteq> []; xs \\<in> lists S\\<rbrakk>\n       \\<Longrightarrow> emeasure (K.T' I) (sstart S xs) =\n                         emeasure\n                          (distr M (stream_space (count_space UNIV))\n                            (\\<lambda>\\<omega>.\n                                to_stream (\\<lambda>n. X n \\<omega>)))\n                          (sstart S xs)", "finally"], ["proof (chain)\npicking this:\n  emeasure (K.T' I) (sstart S xs') =\n  emeasure\n   (distr M (stream_space (count_space UNIV))\n     (\\<lambda>\\<omega>. to_stream (\\<lambda>n. X n \\<omega>)))\n   (sstart S xs')", "show \"emeasure (K.T' I) (sstart S xs') = emeasure ?D (sstart S xs')\""], ["proof (prove)\nusing this:\n  emeasure (K.T' I) (sstart S xs') =\n  emeasure\n   (distr M (stream_space (count_space UNIV))\n     (\\<lambda>\\<omega>. to_stream (\\<lambda>n. X n \\<omega>)))\n   (sstart S xs')\n\ngoal (1 subgoal):\n 1. emeasure (K.T' I) (sstart S xs') =\n    emeasure\n     (distr M (stream_space (count_space UNIV))\n       (\\<lambda>\\<omega>. to_stream (\\<lambda>n. X n \\<omega>)))\n     (sstart S xs')", "."], ["proof (state)\nthis:\n  emeasure (K.T' I) (sstart S xs') =\n  emeasure\n   (distr M (stream_space (count_space UNIV))\n     (\\<lambda>\\<omega>. to_stream (\\<lambda>n. X n \\<omega>)))\n   (sstart S xs')\n\ngoal (1 subgoal):\n 1. countable S", "qed (rule S)"], ["", "end"], ["", "lemma (in MC_syntax) is_THDTMC:\n  fixes I :: \"'s pmf\"\n  defines \"U \\<equiv> (SIGMA s:UNIV. K s)\\<^sup>* `` I\"\n  shows \"Time_Homogeneous_Discrete_Markov_Process (T' I) U (\\<lambda>n \\<omega>. \\<omega> !! n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Time_Homogeneous_Discrete_Markov_Process (T' I) U\n     (\\<lambda>n \\<omega>. \\<omega> !! n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Time_Homogeneous_Discrete_Markov_Process (T' I) U\n     (\\<lambda>n \\<omega>. \\<omega> !! n)", "have [measurable]: \"U \\<in> sets (count_space UNIV)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U \\<in> sets (count_space UNIV)", "by auto"], ["proof (state)\nthis:\n  U \\<in> sets (count_space UNIV)\n\ngoal (1 subgoal):\n 1. Time_Homogeneous_Discrete_Markov_Process (T' I) U\n     (\\<lambda>n \\<omega>. \\<omega> !! n)", "interpret prob_space \"T' I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob_space (T' I)", "by (rule prob_space_T')"], ["proof (state)\ngoal (1 subgoal):\n 1. Time_Homogeneous_Discrete_Markov_Process (T' I) U\n     (\\<lambda>n \\<omega>. \\<omega> !! n)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. Time_Homogeneous_Discrete_Markov_Process (T' I) U\n     (\\<lambda>n \\<omega>. \\<omega> !! n)", "fix s t I"], ["proof (state)\ngoal (1 subgoal):\n 1. Time_Homogeneous_Discrete_Markov_Process (T' I) U\n     (\\<lambda>n \\<omega>. \\<omega> !! n)", "have \"\\<And>t s. \\<P>(\\<omega> in T s. s = t) = indicator {t} s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t s.\n       T.prob s {\\<omega> \\<in> space (T s). s = t} = indicat_real {t} s", "using T.prob_space"], ["proof (prove)\nusing this:\n  T.prob ?s (space (T ?s)) = 1\n\ngoal (1 subgoal):\n 1. \\<And>t s.\n       T.prob s {\\<omega> \\<in> space (T s). s = t} = indicat_real {t} s", "by (auto split: split_indicator)"], ["proof (state)\nthis:\n  T.prob ?s1 {\\<omega> \\<in> space (T ?s1). ?s1 = ?t1} =\n  indicat_real {?t1} ?s1\n\ngoal (1 subgoal):\n 1. Time_Homogeneous_Discrete_Markov_Process (T' I) U\n     (\\<lambda>n \\<omega>. \\<omega> !! n)", "moreover"], ["proof (state)\nthis:\n  T.prob ?s1 {\\<omega> \\<in> space (T ?s1). ?s1 = ?t1} =\n  indicat_real {?t1} ?s1\n\ngoal (1 subgoal):\n 1. Time_Homogeneous_Discrete_Markov_Process (T' I) U\n     (\\<lambda>n \\<omega>. \\<omega> !! n)", "then"], ["proof (chain)\npicking this:\n  T.prob ?s1 {\\<omega> \\<in> space (T ?s1). ?s1 = ?t1} =\n  indicat_real {?t1} ?s1", "have \"\\<And>t t' s. \\<P>(\\<omega> in T s. shd \\<omega> = t' \\<and> s = t) = pmf (K t) t' * indicator {t} s\""], ["proof (prove)\nusing this:\n  T.prob ?s1 {\\<omega> \\<in> space (T ?s1). ?s1 = ?t1} =\n  indicat_real {?t1} ?s1\n\ngoal (1 subgoal):\n 1. \\<And>t t' s.\n       T.prob s\n        {\\<omega> \\<in> space (T s). shd \\<omega> = t' \\<and> s = t} =\n       pmf (K t) t' * indicat_real {t} s", "by (subst prob_T) (auto split: split_indicator simp: pmf.rep_eq)"], ["proof (state)\nthis:\n  T.prob ?s1\n   {\\<omega> \\<in> space (T ?s1). shd \\<omega> = ?t'1 \\<and> ?s1 = ?t1} =\n  pmf (K ?t1) ?t'1 * indicat_real {?t1} ?s1\n\ngoal (1 subgoal):\n 1. Time_Homogeneous_Discrete_Markov_Process (T' I) U\n     (\\<lambda>n \\<omega>. \\<omega> !! n)", "ultimately"], ["proof (chain)\npicking this:\n  T.prob ?s1 {\\<omega> \\<in> space (T ?s1). ?s1 = ?t1} =\n  indicat_real {?t1} ?s1\n  T.prob ?s1\n   {\\<omega> \\<in> space (T ?s1). shd \\<omega> = ?t'1 \\<and> ?s1 = ?t1} =\n  pmf (K ?t1) ?t'1 * indicat_real {?t1} ?s1", "have \"\\<P>(\\<omega> in T' I. shd (stl \\<omega>) = t \\<and> shd \\<omega> = s) = \\<P>(\\<omega> in T' I. shd \\<omega> = s) * pmf (K s) t\""], ["proof (prove)\nusing this:\n  T.prob ?s1 {\\<omega> \\<in> space (T ?s1). ?s1 = ?t1} =\n  indicat_real {?t1} ?s1\n  T.prob ?s1\n   {\\<omega> \\<in> space (T ?s1). shd \\<omega> = ?t'1 \\<and> ?s1 = ?t1} =\n  pmf (K ?t1) ?t'1 * indicat_real {?t1} ?s1\n\ngoal (1 subgoal):\n 1. \\<P>(\\<omega> in T' I. shd (stl \\<omega>) = t \\<and> shd \\<omega> = s) =\n    \\<P>(\\<omega> in T' I. shd \\<omega> = s) * pmf (K s) t", "by (simp add: prob_T' pmf.rep_eq)"], ["proof (state)\nthis:\n  \\<P>(\\<omega> in T' I. shd (stl \\<omega>) = t \\<and> shd \\<omega> = s) =\n  \\<P>(\\<omega> in T' I. shd \\<omega> = s) * pmf (K s) t\n\ngoal (1 subgoal):\n 1. Time_Homogeneous_Discrete_Markov_Process (T' I) U\n     (\\<lambda>n \\<omega>. \\<omega> !! n)", "}"], ["proof (state)\nthis:\n  \\<P>(\\<omega> in T' ?Ia3.\n       shd (stl \\<omega>) = ?t3 \\<and> shd \\<omega> = ?s3) =\n  \\<P>(\\<omega> in T' ?Ia3. shd \\<omega> = ?s3) * pmf (K ?s3) ?t3\n\ngoal (1 subgoal):\n 1. Time_Homogeneous_Discrete_Markov_Process (T' I) U\n     (\\<lambda>n \\<omega>. \\<omega> !! n)", "note start_eq = this"], ["proof (state)\nthis:\n  \\<P>(\\<omega> in T' ?Ia3.\n       shd (stl \\<omega>) = ?t3 \\<and> shd \\<omega> = ?s3) =\n  \\<P>(\\<omega> in T' ?Ia3. shd \\<omega> = ?s3) * pmf (K ?s3) ?t3\n\ngoal (1 subgoal):\n 1. Time_Homogeneous_Discrete_Markov_Process (T' I) U\n     (\\<lambda>n \\<omega>. \\<omega> !! n)", "{"], ["proof (state)\nthis:\n  \\<P>(\\<omega> in T' ?Ia3.\n       shd (stl \\<omega>) = ?t3 \\<and> shd \\<omega> = ?s3) =\n  \\<P>(\\<omega> in T' ?Ia3. shd \\<omega> = ?s3) * pmf (K ?s3) ?t3\n\ngoal (1 subgoal):\n 1. Time_Homogeneous_Discrete_Markov_Process (T' I) U\n     (\\<lambda>n \\<omega>. \\<omega> !! n)", "fix n s t"], ["proof (state)\ngoal (1 subgoal):\n 1. Time_Homogeneous_Discrete_Markov_Process (T' I) U\n     (\\<lambda>n \\<omega>. \\<omega> !! n)", "assume \"\\<P>(\\<omega> in T' I. \\<omega> !! n = s) \\<noteq> 0\""], ["proof (state)\nthis:\n  prob {\\<omega> \\<in> space (T' I). \\<omega> !! n = s} \\<noteq> 0\n\ngoal (1 subgoal):\n 1. Time_Homogeneous_Discrete_Markov_Process (T' I) U\n     (\\<lambda>n \\<omega>. \\<omega> !! n)", "moreover"], ["proof (state)\nthis:\n  prob {\\<omega> \\<in> space (T' I). \\<omega> !! n = s} \\<noteq> 0\n\ngoal (1 subgoal):\n 1. Time_Homogeneous_Discrete_Markov_Process (T' I) U\n     (\\<lambda>n \\<omega>. \\<omega> !! n)", "have \"\\<P>(\\<omega> in T' I. \\<omega> !! (Suc n) = t \\<and> \\<omega> !! n = s) = \\<P>(\\<omega> in T' I. \\<omega> !! n = s) * pmf (K s) t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob\n     {\\<omega> \\<in> space (T' I).\n      \\<omega> !! Suc n = t \\<and> \\<omega> !! n = s} =\n    prob {\\<omega> \\<in> space (T' I). \\<omega> !! n = s} * pmf (K s) t", "proof (induction n arbitrary: I)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>I.\n       \\<P>(\\<omega> in T' I.\n            \\<omega> !! Suc 0 = t \\<and> \\<omega> !! 0 = s) =\n       \\<P>(\\<omega> in T' I. \\<omega> !! 0 = s) * pmf (K s) t\n 2. \\<And>n I.\n       (\\<And>I.\n           \\<P>(\\<omega> in T' I.\n                \\<omega> !! Suc n = t \\<and> \\<omega> !! n = s) =\n           \\<P>(\\<omega> in T' I. \\<omega> !! n = s) *\n           pmf (K s) t) \\<Longrightarrow>\n       \\<P>(\\<omega> in T' I.\n            \\<omega> !! Suc (Suc n) = t \\<and> \\<omega> !! Suc n = s) =\n       \\<P>(\\<omega> in T' I. \\<omega> !! Suc n = s) * pmf (K s) t", "case (Suc n)"], ["proof (state)\nthis:\n  \\<P>(\\<omega> in T' ?I1. \\<omega> !! Suc n = t \\<and> \\<omega> !! n = s) =\n  \\<P>(\\<omega> in T' ?I1. \\<omega> !! n = s) * pmf (K s) t\n\ngoal (2 subgoals):\n 1. \\<And>I.\n       \\<P>(\\<omega> in T' I.\n            \\<omega> !! Suc 0 = t \\<and> \\<omega> !! 0 = s) =\n       \\<P>(\\<omega> in T' I. \\<omega> !! 0 = s) * pmf (K s) t\n 2. \\<And>n I.\n       (\\<And>I.\n           \\<P>(\\<omega> in T' I.\n                \\<omega> !! Suc n = t \\<and> \\<omega> !! n = s) =\n           \\<P>(\\<omega> in T' I. \\<omega> !! n = s) *\n           pmf (K s) t) \\<Longrightarrow>\n       \\<P>(\\<omega> in T' I.\n            \\<omega> !! Suc (Suc n) = t \\<and> \\<omega> !! Suc n = s) =\n       \\<P>(\\<omega> in T' I. \\<omega> !! Suc n = s) * pmf (K s) t", "then"], ["proof (chain)\npicking this:\n  \\<P>(\\<omega> in T' ?I1. \\<omega> !! Suc n = t \\<and> \\<omega> !! n = s) =\n  \\<P>(\\<omega> in T' ?I1. \\<omega> !! n = s) * pmf (K s) t", "show ?case"], ["proof (prove)\nusing this:\n  \\<P>(\\<omega> in T' ?I1. \\<omega> !! Suc n = t \\<and> \\<omega> !! n = s) =\n  \\<P>(\\<omega> in T' ?I1. \\<omega> !! n = s) * pmf (K s) t\n\ngoal (1 subgoal):\n 1. \\<P>(\\<omega> in T' I.\n         \\<omega> !! Suc (Suc n) = t \\<and> \\<omega> !! Suc n = s) =\n    \\<P>(\\<omega> in T' I. \\<omega> !! Suc n = s) * pmf (K s) t", "by (subst (1 2) prob_T') (simp_all del: space_T add: T_eq_T')"], ["proof (state)\nthis:\n  \\<P>(\\<omega> in T' I.\n       \\<omega> !! Suc (Suc n) = t \\<and> \\<omega> !! Suc n = s) =\n  \\<P>(\\<omega> in T' I. \\<omega> !! Suc n = s) * pmf (K s) t\n\ngoal (1 subgoal):\n 1. \\<And>I.\n       \\<P>(\\<omega> in T' I.\n            \\<omega> !! Suc 0 = t \\<and> \\<omega> !! 0 = s) =\n       \\<P>(\\<omega> in T' I. \\<omega> !! 0 = s) * pmf (K s) t", "qed (simp add: start_eq)"], ["proof (state)\nthis:\n  prob\n   {\\<omega> \\<in> space (T' I).\n    \\<omega> !! Suc n = t \\<and> \\<omega> !! n = s} =\n  prob {\\<omega> \\<in> space (T' I). \\<omega> !! n = s} * pmf (K s) t\n\ngoal (1 subgoal):\n 1. Time_Homogeneous_Discrete_Markov_Process (T' I) U\n     (\\<lambda>n \\<omega>. \\<omega> !! n)", "ultimately"], ["proof (chain)\npicking this:\n  prob {\\<omega> \\<in> space (T' I). \\<omega> !! n = s} \\<noteq> 0\n  prob\n   {\\<omega> \\<in> space (T' I).\n    \\<omega> !! Suc n = t \\<and> \\<omega> !! n = s} =\n  prob {\\<omega> \\<in> space (T' I). \\<omega> !! n = s} * pmf (K s) t", "have \"\\<P>(\\<omega> in T' I. stl \\<omega> !! n = t \\<bar> \\<omega> !! n = s) = pmf (K s) t\""], ["proof (prove)\nusing this:\n  prob {\\<omega> \\<in> space (T' I). \\<omega> !! n = s} \\<noteq> 0\n  prob\n   {\\<omega> \\<in> space (T' I).\n    \\<omega> !! Suc n = t \\<and> \\<omega> !! n = s} =\n  prob {\\<omega> \\<in> space (T' I). \\<omega> !! n = s} * pmf (K s) t\n\ngoal (1 subgoal):\n 1. cond_prob (T' I) (\\<lambda>\\<omega>. stl \\<omega> !! n = t)\n     (\\<lambda>\\<omega>. \\<omega> !! n = s) =\n    pmf (K s) t", "by (simp add: cond_prob_def field_simps)"], ["proof (state)\nthis:\n  cond_prob (T' I) (\\<lambda>\\<omega>. stl \\<omega> !! n = t)\n   (\\<lambda>\\<omega>. \\<omega> !! n = s) =\n  pmf (K s) t\n\ngoal (1 subgoal):\n 1. Time_Homogeneous_Discrete_Markov_Process (T' I) U\n     (\\<lambda>n \\<omega>. \\<omega> !! n)", "}"], ["proof (state)\nthis:\n  prob {\\<omega> \\<in> space (T' I). \\<omega> !! ?n3 = ?s3} \\<noteq>\n  0 \\<Longrightarrow>\n  cond_prob (T' I) (\\<lambda>\\<omega>. stl \\<omega> !! ?n3 = ?t3)\n   (\\<lambda>\\<omega>. \\<omega> !! ?n3 = ?s3) =\n  pmf (K ?s3) ?t3\n\ngoal (1 subgoal):\n 1. Time_Homogeneous_Discrete_Markov_Process (T' I) U\n     (\\<lambda>n \\<omega>. \\<omega> !! n)", "note TH = this"], ["proof (state)\nthis:\n  prob {\\<omega> \\<in> space (T' I). \\<omega> !! ?n3 = ?s3} \\<noteq>\n  0 \\<Longrightarrow>\n  cond_prob (T' I) (\\<lambda>\\<omega>. stl \\<omega> !! ?n3 = ?t3)\n   (\\<lambda>\\<omega>. \\<omega> !! ?n3 = ?s3) =\n  pmf (K ?s3) ?t3\n\ngoal (1 subgoal):\n 1. Time_Homogeneous_Discrete_Markov_Process (T' I) U\n     (\\<lambda>n \\<omega>. \\<omega> !! n)", "{"], ["proof (state)\nthis:\n  prob {\\<omega> \\<in> space (T' I). \\<omega> !! ?n3 = ?s3} \\<noteq>\n  0 \\<Longrightarrow>\n  cond_prob (T' I) (\\<lambda>\\<omega>. stl \\<omega> !! ?n3 = ?t3)\n   (\\<lambda>\\<omega>. \\<omega> !! ?n3 = ?s3) =\n  pmf (K ?s3) ?t3\n\ngoal (1 subgoal):\n 1. Time_Homogeneous_Discrete_Markov_Process (T' I) U\n     (\\<lambda>n \\<omega>. \\<omega> !! n)", "fix n \\<omega>' t"], ["proof (state)\ngoal (1 subgoal):\n 1. Time_Homogeneous_Discrete_Markov_Process (T' I) U\n     (\\<lambda>n \\<omega>. \\<omega> !! n)", "assume \"\\<P>(\\<omega> in T' I. \\<forall>i\\<le>n. \\<omega> !! i = \\<omega>' i) \\<noteq> 0\""], ["proof (state)\nthis:\n  prob\n   {\\<omega> \\<in> space (T' I).\n    \\<forall>i\\<le>n. \\<omega> !! i = \\<omega>' i} \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. Time_Homogeneous_Discrete_Markov_Process (T' I) U\n     (\\<lambda>n \\<omega>. \\<omega> !! n)", "moreover"], ["proof (state)\nthis:\n  prob\n   {\\<omega> \\<in> space (T' I).\n    \\<forall>i\\<le>n. \\<omega> !! i = \\<omega>' i} \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. Time_Homogeneous_Discrete_Markov_Process (T' I) U\n     (\\<lambda>n \\<omega>. \\<omega> !! n)", "have \"\\<P>(\\<omega> in T' I. \\<omega> !! (Suc n) = t \\<and> (\\<forall>i\\<le>n. \\<omega> !! i = \\<omega>' i)) =\n      \\<P>(\\<omega> in T' I. \\<forall>i\\<le>n. \\<omega> !! i = \\<omega>' i) * pmf (K (\\<omega>' n)) t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob\n     {\\<omega> \\<in> space (T' I).\n      \\<omega> !! Suc n = t \\<and>\n      (\\<forall>i\\<le>n. \\<omega> !! i = \\<omega>' i)} =\n    prob\n     {\\<omega> \\<in> space (T' I).\n      \\<forall>i\\<le>n. \\<omega> !! i = \\<omega>' i} *\n    pmf (K (\\<omega>' n)) t", "proof (induction n arbitrary: I \\<omega>')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>I \\<omega>'.\n       \\<P>(\\<omega> in T' I.\n            \\<omega> !! Suc 0 = t \\<and>\n            (\\<forall>i\\<le>0. \\<omega> !! i = \\<omega>' i)) =\n       \\<P>(\\<omega> in T' I.\n            \\<forall>i\\<le>0. \\<omega> !! i = \\<omega>' i) *\n       pmf (K (\\<omega>' 0)) t\n 2. \\<And>n I \\<omega>'.\n       (\\<And>I \\<omega>'.\n           \\<P>(\\<omega> in T' I.\n                \\<omega> !! Suc n = t \\<and>\n                (\\<forall>i\\<le>n. \\<omega> !! i = \\<omega>' i)) =\n           \\<P>(\\<omega> in T' I.\n                \\<forall>i\\<le>n. \\<omega> !! i = \\<omega>' i) *\n           pmf (K (\\<omega>' n)) t) \\<Longrightarrow>\n       \\<P>(\\<omega> in T' I.\n            \\<omega> !! Suc (Suc n) = t \\<and>\n            (\\<forall>i\\<le>Suc n. \\<omega> !! i = \\<omega>' i)) =\n       \\<P>(\\<omega> in T' I.\n            \\<forall>i\\<le>Suc n. \\<omega> !! i = \\<omega>' i) *\n       pmf (K (\\<omega>' (Suc n))) t", "case (Suc n)"], ["proof (state)\nthis:\n  \\<P>(\\<omega> in T' ?I1.\n       \\<omega> !! Suc n = t \\<and>\n       (\\<forall>i\\<le>n. \\<omega> !! i = ?\\<omega>'1 i)) =\n  \\<P>(\\<omega> in T' ?I1.\n       \\<forall>i\\<le>n. \\<omega> !! i = ?\\<omega>'1 i) *\n  pmf (K (?\\<omega>'1 n)) t\n\ngoal (2 subgoals):\n 1. \\<And>I \\<omega>'.\n       \\<P>(\\<omega> in T' I.\n            \\<omega> !! Suc 0 = t \\<and>\n            (\\<forall>i\\<le>0. \\<omega> !! i = \\<omega>' i)) =\n       \\<P>(\\<omega> in T' I.\n            \\<forall>i\\<le>0. \\<omega> !! i = \\<omega>' i) *\n       pmf (K (\\<omega>' 0)) t\n 2. \\<And>n I \\<omega>'.\n       (\\<And>I \\<omega>'.\n           \\<P>(\\<omega> in T' I.\n                \\<omega> !! Suc n = t \\<and>\n                (\\<forall>i\\<le>n. \\<omega> !! i = \\<omega>' i)) =\n           \\<P>(\\<omega> in T' I.\n                \\<forall>i\\<le>n. \\<omega> !! i = \\<omega>' i) *\n           pmf (K (\\<omega>' n)) t) \\<Longrightarrow>\n       \\<P>(\\<omega> in T' I.\n            \\<omega> !! Suc (Suc n) = t \\<and>\n            (\\<forall>i\\<le>Suc n. \\<omega> !! i = \\<omega>' i)) =\n       \\<P>(\\<omega> in T' I.\n            \\<forall>i\\<le>Suc n. \\<omega> !! i = \\<omega>' i) *\n       pmf (K (\\<omega>' (Suc n))) t", "have *[simp]: \"\\<And>s P. measure (T' (K s)) {x. s = \\<omega>' 0 \\<and> P x} =\n        measure (T' (K (\\<omega>' 0))) {x. P x} * indicator {\\<omega>' 0} s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s P.\n       Sigma_Algebra.measure (T' (K s)) {x. s = \\<omega>' 0 \\<and> P x} =\n       Sigma_Algebra.measure (T' (K (\\<omega>' 0))) {x. P x} *\n       indicat_real {\\<omega>' 0} s", "by (auto split: split_indicator)"], ["proof (state)\nthis:\n  Sigma_Algebra.measure (T' (K ?s1)) {x. ?s1 = \\<omega>' 0 \\<and> ?P1 x} =\n  Sigma_Algebra.measure (T' (K (\\<omega>' 0))) {x. ?P1 x} *\n  indicat_real {\\<omega>' 0} ?s1\n\ngoal (2 subgoals):\n 1. \\<And>I \\<omega>'.\n       \\<P>(\\<omega> in T' I.\n            \\<omega> !! Suc 0 = t \\<and>\n            (\\<forall>i\\<le>0. \\<omega> !! i = \\<omega>' i)) =\n       \\<P>(\\<omega> in T' I.\n            \\<forall>i\\<le>0. \\<omega> !! i = \\<omega>' i) *\n       pmf (K (\\<omega>' 0)) t\n 2. \\<And>n I \\<omega>'.\n       (\\<And>I \\<omega>'.\n           \\<P>(\\<omega> in T' I.\n                \\<omega> !! Suc n = t \\<and>\n                (\\<forall>i\\<le>n. \\<omega> !! i = \\<omega>' i)) =\n           \\<P>(\\<omega> in T' I.\n                \\<forall>i\\<le>n. \\<omega> !! i = \\<omega>' i) *\n           pmf (K (\\<omega>' n)) t) \\<Longrightarrow>\n       \\<P>(\\<omega> in T' I.\n            \\<omega> !! Suc (Suc n) = t \\<and>\n            (\\<forall>i\\<le>Suc n. \\<omega> !! i = \\<omega>' i)) =\n       \\<P>(\\<omega> in T' I.\n            \\<forall>i\\<le>Suc n. \\<omega> !! i = \\<omega>' i) *\n       pmf (K (\\<omega>' (Suc n))) t", "from Suc[of _ \"\\<lambda>i. \\<omega>' (Suc i)\"]"], ["proof (chain)\npicking this:\n  \\<P>(\\<omega> in T' ?I1.\n       \\<omega> !! Suc n = t \\<and>\n       (\\<forall>i\\<le>n. \\<omega> !! i = \\<omega>' (Suc i))) =\n  \\<P>(\\<omega> in T' ?I1.\n       \\<forall>i\\<le>n. \\<omega> !! i = \\<omega>' (Suc i)) *\n  pmf (K (\\<omega>' (Suc n))) t", "show ?case"], ["proof (prove)\nusing this:\n  \\<P>(\\<omega> in T' ?I1.\n       \\<omega> !! Suc n = t \\<and>\n       (\\<forall>i\\<le>n. \\<omega> !! i = \\<omega>' (Suc i))) =\n  \\<P>(\\<omega> in T' ?I1.\n       \\<forall>i\\<le>n. \\<omega> !! i = \\<omega>' (Suc i)) *\n  pmf (K (\\<omega>' (Suc n))) t\n\ngoal (1 subgoal):\n 1. \\<P>(\\<omega> in T' I.\n         \\<omega> !! Suc (Suc n) = t \\<and>\n         (\\<forall>i\\<le>Suc n. \\<omega> !! i = \\<omega>' i)) =\n    \\<P>(\\<omega> in T' I.\n         \\<forall>i\\<le>Suc n. \\<omega> !! i = \\<omega>' i) *\n    pmf (K (\\<omega>' (Suc n))) t", "by (subst (1 2) prob_T')\n           (simp_all add: T_eq_T' all_Suc_split[where P=\"\\<lambda>i. i \\<le> Suc n \\<longrightarrow> Q i\" for n Q] conj_commute conj_left_commute sets_eq_imp_space_eq[OF sets_T'])"], ["proof (state)\nthis:\n  \\<P>(\\<omega> in T' I.\n       \\<omega> !! Suc (Suc n) = t \\<and>\n       (\\<forall>i\\<le>Suc n. \\<omega> !! i = \\<omega>' i)) =\n  \\<P>(\\<omega> in T' I.\n       \\<forall>i\\<le>Suc n. \\<omega> !! i = \\<omega>' i) *\n  pmf (K (\\<omega>' (Suc n))) t\n\ngoal (1 subgoal):\n 1. \\<And>I \\<omega>'.\n       \\<P>(\\<omega> in T' I.\n            \\<omega> !! Suc 0 = t \\<and>\n            (\\<forall>i\\<le>0. \\<omega> !! i = \\<omega>' i)) =\n       \\<P>(\\<omega> in T' I.\n            \\<forall>i\\<le>0. \\<omega> !! i = \\<omega>' i) *\n       pmf (K (\\<omega>' 0)) t", "qed (simp add: start_eq)"], ["proof (state)\nthis:\n  prob\n   {\\<omega> \\<in> space (T' I).\n    \\<omega> !! Suc n = t \\<and>\n    (\\<forall>i\\<le>n. \\<omega> !! i = \\<omega>' i)} =\n  prob\n   {\\<omega> \\<in> space (T' I).\n    \\<forall>i\\<le>n. \\<omega> !! i = \\<omega>' i} *\n  pmf (K (\\<omega>' n)) t\n\ngoal (1 subgoal):\n 1. Time_Homogeneous_Discrete_Markov_Process (T' I) U\n     (\\<lambda>n \\<omega>. \\<omega> !! n)", "ultimately"], ["proof (chain)\npicking this:\n  prob\n   {\\<omega> \\<in> space (T' I).\n    \\<forall>i\\<le>n. \\<omega> !! i = \\<omega>' i} \\<noteq>\n  0\n  prob\n   {\\<omega> \\<in> space (T' I).\n    \\<omega> !! Suc n = t \\<and>\n    (\\<forall>i\\<le>n. \\<omega> !! i = \\<omega>' i)} =\n  prob\n   {\\<omega> \\<in> space (T' I).\n    \\<forall>i\\<le>n. \\<omega> !! i = \\<omega>' i} *\n  pmf (K (\\<omega>' n)) t", "have \"\\<P>(\\<omega> in T' I. stl \\<omega> !! n = t \\<bar> \\<forall>i\\<le>n. \\<omega> !! i = \\<omega>' i) = pmf (K (\\<omega>' n)) t\""], ["proof (prove)\nusing this:\n  prob\n   {\\<omega> \\<in> space (T' I).\n    \\<forall>i\\<le>n. \\<omega> !! i = \\<omega>' i} \\<noteq>\n  0\n  prob\n   {\\<omega> \\<in> space (T' I).\n    \\<omega> !! Suc n = t \\<and>\n    (\\<forall>i\\<le>n. \\<omega> !! i = \\<omega>' i)} =\n  prob\n   {\\<omega> \\<in> space (T' I).\n    \\<forall>i\\<le>n. \\<omega> !! i = \\<omega>' i} *\n  pmf (K (\\<omega>' n)) t\n\ngoal (1 subgoal):\n 1. cond_prob (T' I) (\\<lambda>\\<omega>. stl \\<omega> !! n = t)\n     (\\<lambda>\\<omega>. \\<forall>i\\<le>n. \\<omega> !! i = \\<omega>' i) =\n    pmf (K (\\<omega>' n)) t", "by (simp add: cond_prob_def field_simps)"], ["proof (state)\nthis:\n  cond_prob (T' I) (\\<lambda>\\<omega>. stl \\<omega> !! n = t)\n   (\\<lambda>\\<omega>. \\<forall>i\\<le>n. \\<omega> !! i = \\<omega>' i) =\n  pmf (K (\\<omega>' n)) t\n\ngoal (1 subgoal):\n 1. Time_Homogeneous_Discrete_Markov_Process (T' I) U\n     (\\<lambda>n \\<omega>. \\<omega> !! n)", "}"], ["proof (state)\nthis:\n  prob\n   {\\<omega> \\<in> space (T' I).\n    \\<forall>i\\<le>?n3. \\<omega> !! i = ?\\<omega>'3 i} \\<noteq>\n  0 \\<Longrightarrow>\n  cond_prob (T' I) (\\<lambda>\\<omega>. stl \\<omega> !! ?n3 = ?t3)\n   (\\<lambda>\\<omega>. \\<forall>i\\<le>?n3. \\<omega> !! i = ?\\<omega>'3 i) =\n  pmf (K (?\\<omega>'3 ?n3)) ?t3\n\ngoal (1 subgoal):\n 1. Time_Homogeneous_Discrete_Markov_Process (T' I) U\n     (\\<lambda>n \\<omega>. \\<omega> !! n)", "note MC = this"], ["proof (state)\nthis:\n  prob\n   {\\<omega> \\<in> space (T' I).\n    \\<forall>i\\<le>?n3. \\<omega> !! i = ?\\<omega>'3 i} \\<noteq>\n  0 \\<Longrightarrow>\n  cond_prob (T' I) (\\<lambda>\\<omega>. stl \\<omega> !! ?n3 = ?t3)\n   (\\<lambda>\\<omega>. \\<forall>i\\<le>?n3. \\<omega> !! i = ?\\<omega>'3 i) =\n  pmf (K (?\\<omega>'3 ?n3)) ?t3\n\ngoal (1 subgoal):\n 1. Time_Homogeneous_Discrete_Markov_Process (T' I) U\n     (\\<lambda>n \\<omega>. \\<omega> !! n)", "{"], ["proof (state)\nthis:\n  prob\n   {\\<omega> \\<in> space (T' I).\n    \\<forall>i\\<le>?n3. \\<omega> !! i = ?\\<omega>'3 i} \\<noteq>\n  0 \\<Longrightarrow>\n  cond_prob (T' I) (\\<lambda>\\<omega>. stl \\<omega> !! ?n3 = ?t3)\n   (\\<lambda>\\<omega>. \\<forall>i\\<le>?n3. \\<omega> !! i = ?\\<omega>'3 i) =\n  pmf (K (?\\<omega>'3 ?n3)) ?t3\n\ngoal (1 subgoal):\n 1. Time_Homogeneous_Discrete_Markov_Process (T' I) U\n     (\\<lambda>n \\<omega>. \\<omega> !! n)", "fix n \\<omega>'"], ["proof (state)\ngoal (1 subgoal):\n 1. Time_Homogeneous_Discrete_Markov_Process (T' I) U\n     (\\<lambda>n \\<omega>. \\<omega> !! n)", "assume \"\\<P>(\\<omega> in T' I. \\<forall>t\\<le>n. \\<omega> !! t = \\<omega>' t) \\<noteq> 0\""], ["proof (state)\nthis:\n  prob\n   {\\<omega> \\<in> space (T' I).\n    \\<forall>t\\<le>n. \\<omega> !! t = \\<omega>' t} \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. Time_Homogeneous_Discrete_Markov_Process (T' I) U\n     (\\<lambda>n \\<omega>. \\<omega> !! n)", "moreover"], ["proof (state)\nthis:\n  prob\n   {\\<omega> \\<in> space (T' I).\n    \\<forall>t\\<le>n. \\<omega> !! t = \\<omega>' t} \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. Time_Homogeneous_Discrete_Markov_Process (T' I) U\n     (\\<lambda>n \\<omega>. \\<omega> !! n)", "have \"\\<P>(\\<omega> in T' I. \\<forall>t\\<le>n. \\<omega> !! t = \\<omega>' t) \\<le> \\<P>(\\<omega> in T' I. \\<omega> !! n = \\<omega>' n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prob\n     {\\<omega> \\<in> space (T' I).\n      \\<forall>t\\<le>n. \\<omega> !! t = \\<omega>' t}\n    \\<le> prob {\\<omega> \\<in> space (T' I). \\<omega> !! n = \\<omega>' n}", "by (auto intro!: finite_measure_mono_AE simp: sets_T' sets_eq_imp_space_eq[OF sets_T'])"], ["proof (state)\nthis:\n  prob\n   {\\<omega> \\<in> space (T' I).\n    \\<forall>t\\<le>n. \\<omega> !! t = \\<omega>' t}\n  \\<le> prob {\\<omega> \\<in> space (T' I). \\<omega> !! n = \\<omega>' n}\n\ngoal (1 subgoal):\n 1. Time_Homogeneous_Discrete_Markov_Process (T' I) U\n     (\\<lambda>n \\<omega>. \\<omega> !! n)", "ultimately"], ["proof (chain)\npicking this:\n  prob\n   {\\<omega> \\<in> space (T' I).\n    \\<forall>t\\<le>n. \\<omega> !! t = \\<omega>' t} \\<noteq>\n  0\n  prob\n   {\\<omega> \\<in> space (T' I).\n    \\<forall>t\\<le>n. \\<omega> !! t = \\<omega>' t}\n  \\<le> prob {\\<omega> \\<in> space (T' I). \\<omega> !! n = \\<omega>' n}", "have \"\\<P>(\\<omega> in T' I. \\<omega> !! n = \\<omega>' n) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  prob\n   {\\<omega> \\<in> space (T' I).\n    \\<forall>t\\<le>n. \\<omega> !! t = \\<omega>' t} \\<noteq>\n  0\n  prob\n   {\\<omega> \\<in> space (T' I).\n    \\<forall>t\\<le>n. \\<omega> !! t = \\<omega>' t}\n  \\<le> prob {\\<omega> \\<in> space (T' I). \\<omega> !! n = \\<omega>' n}\n\ngoal (1 subgoal):\n 1. prob {\\<omega> \\<in> space (T' I). \\<omega> !! n = \\<omega>' n} \\<noteq>\n    0", "by (auto simp: neq_iff not_less measure_le_0_iff)"], ["proof (state)\nthis:\n  prob {\\<omega> \\<in> space (T' I). \\<omega> !! n = \\<omega>' n} \\<noteq> 0\n\ngoal (1 subgoal):\n 1. Time_Homogeneous_Discrete_Markov_Process (T' I) U\n     (\\<lambda>n \\<omega>. \\<omega> !! n)", "}"], ["proof (state)\nthis:\n  prob\n   {\\<omega> \\<in> space (T' I).\n    \\<forall>t\\<le>?n3. \\<omega> !! t = ?\\<omega>'3 t} \\<noteq>\n  0 \\<Longrightarrow>\n  prob\n   {\\<omega> \\<in> space (T' I). \\<omega> !! ?n3 = ?\\<omega>'3 ?n3} \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. Time_Homogeneous_Discrete_Markov_Process (T' I) U\n     (\\<lambda>n \\<omega>. \\<omega> !! n)", "note MC' = this"], ["proof (state)\nthis:\n  prob\n   {\\<omega> \\<in> space (T' I).\n    \\<forall>t\\<le>?n3. \\<omega> !! t = ?\\<omega>'3 t} \\<noteq>\n  0 \\<Longrightarrow>\n  prob\n   {\\<omega> \\<in> space (T' I). \\<omega> !! ?n3 = ?\\<omega>'3 ?n3} \\<noteq>\n  0\n\ngoal (1 subgoal):\n 1. Time_Homogeneous_Discrete_Markov_Process (T' I) U\n     (\\<lambda>n \\<omega>. \\<omega> !! n)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Time_Homogeneous_Discrete_Markov_Process (T' I) U\n     (\\<lambda>n \\<omega>. \\<omega> !! n)", "proof"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>t.\n       random_variable (count_space UNIV) (\\<lambda>\\<omega>. \\<omega> !! t)\n 2. countable U\n 3. \\<And>n. AE x in T' I. x !! n \\<in> U\n 4. \\<And>n s s'.\n       prob\n        {\\<omega> \\<in> space (T' I).\n         \\<forall>t\\<le>n. \\<omega> !! t = s t} \\<noteq>\n       0 \\<Longrightarrow>\n       cond_prob (T' I) (\\<lambda>\\<omega>. \\<omega> !! Suc n = s')\n        (\\<lambda>\\<omega>. \\<forall>t\\<le>n. \\<omega> !! t = s t) =\n       cond_prob (T' I) (\\<lambda>\\<omega>. \\<omega> !! Suc n = s')\n        (\\<lambda>\\<omega>. \\<omega> !! n = s n)\n 5. \\<And>n m s t.\n       \\<lbrakk>prob\n                 {\\<omega> \\<in> space (T' I). \\<omega> !! n = t} \\<noteq>\n                0;\n        prob {\\<omega> \\<in> space (T' I). \\<omega> !! m = t} \\<noteq>\n        0\\<rbrakk>\n       \\<Longrightarrow> cond_prob (T' I)\n                          (\\<lambda>\\<omega>. \\<omega> !! Suc n = s)\n                          (\\<lambda>\\<omega>. \\<omega> !! n = t) =\n                         cond_prob (T' I)\n                          (\\<lambda>\\<omega>. \\<omega> !! Suc m = s)\n                          (\\<lambda>\\<omega>. \\<omega> !! m = t)", "show \"countable U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. countable U", "unfolding U_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. countable (acc `` set_pmf I)", "by (rule countable_reachable countable_Image countable_set_pmf)+"], ["proof (state)\nthis:\n  countable U\n\ngoal (4 subgoals):\n 1. \\<And>t.\n       random_variable (count_space UNIV) (\\<lambda>\\<omega>. \\<omega> !! t)\n 2. \\<And>n. AE x in T' I. x !! n \\<in> U\n 3. \\<And>n s s'.\n       prob\n        {\\<omega> \\<in> space (T' I).\n         \\<forall>t\\<le>n. \\<omega> !! t = s t} \\<noteq>\n       0 \\<Longrightarrow>\n       cond_prob (T' I) (\\<lambda>\\<omega>. \\<omega> !! Suc n = s')\n        (\\<lambda>\\<omega>. \\<forall>t\\<le>n. \\<omega> !! t = s t) =\n       cond_prob (T' I) (\\<lambda>\\<omega>. \\<omega> !! Suc n = s')\n        (\\<lambda>\\<omega>. \\<omega> !! n = s n)\n 4. \\<And>n m s t.\n       \\<lbrakk>prob\n                 {\\<omega> \\<in> space (T' I). \\<omega> !! n = t} \\<noteq>\n                0;\n        prob {\\<omega> \\<in> space (T' I). \\<omega> !! m = t} \\<noteq>\n        0\\<rbrakk>\n       \\<Longrightarrow> cond_prob (T' I)\n                          (\\<lambda>\\<omega>. \\<omega> !! Suc n = s)\n                          (\\<lambda>\\<omega>. \\<omega> !! n = t) =\n                         cond_prob (T' I)\n                          (\\<lambda>\\<omega>. \\<omega> !! Suc m = s)\n                          (\\<lambda>\\<omega>. \\<omega> !! m = t)", "show \"\\<And>t. (\\<lambda>\\<omega>. \\<omega> !! t) \\<in> measurable (T' I) (count_space UNIV)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t.\n       random_variable (count_space UNIV) (\\<lambda>\\<omega>. \\<omega> !! t)", "by (subst measurable_cong_sets[OF sets_T' refl]) simp"], ["proof (state)\nthis:\n  random_variable (count_space UNIV) (\\<lambda>\\<omega>. \\<omega> !! ?t1)\n\ngoal (3 subgoals):\n 1. \\<And>n. AE x in T' I. x !! n \\<in> U\n 2. \\<And>n s s'.\n       prob\n        {\\<omega> \\<in> space (T' I).\n         \\<forall>t\\<le>n. \\<omega> !! t = s t} \\<noteq>\n       0 \\<Longrightarrow>\n       cond_prob (T' I) (\\<lambda>\\<omega>. \\<omega> !! Suc n = s')\n        (\\<lambda>\\<omega>. \\<forall>t\\<le>n. \\<omega> !! t = s t) =\n       cond_prob (T' I) (\\<lambda>\\<omega>. \\<omega> !! Suc n = s')\n        (\\<lambda>\\<omega>. \\<omega> !! n = s n)\n 3. \\<And>n m s t.\n       \\<lbrakk>prob\n                 {\\<omega> \\<in> space (T' I). \\<omega> !! n = t} \\<noteq>\n                0;\n        prob {\\<omega> \\<in> space (T' I). \\<omega> !! m = t} \\<noteq>\n        0\\<rbrakk>\n       \\<Longrightarrow> cond_prob (T' I)\n                          (\\<lambda>\\<omega>. \\<omega> !! Suc n = s)\n                          (\\<lambda>\\<omega>. \\<omega> !! n = t) =\n                         cond_prob (T' I)\n                          (\\<lambda>\\<omega>. \\<omega> !! Suc m = s)\n                          (\\<lambda>\\<omega>. \\<omega> !! m = t)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>n. AE x in T' I. x !! n \\<in> U\n 2. \\<And>n s s'.\n       prob\n        {\\<omega> \\<in> space (T' I).\n         \\<forall>t\\<le>n. \\<omega> !! t = s t} \\<noteq>\n       0 \\<Longrightarrow>\n       cond_prob (T' I) (\\<lambda>\\<omega>. \\<omega> !! Suc n = s')\n        (\\<lambda>\\<omega>. \\<forall>t\\<le>n. \\<omega> !! t = s t) =\n       cond_prob (T' I) (\\<lambda>\\<omega>. \\<omega> !! Suc n = s')\n        (\\<lambda>\\<omega>. \\<omega> !! n = s n)\n 3. \\<And>n m s t.\n       \\<lbrakk>prob\n                 {\\<omega> \\<in> space (T' I). \\<omega> !! n = t} \\<noteq>\n                0;\n        prob {\\<omega> \\<in> space (T' I). \\<omega> !! m = t} \\<noteq>\n        0\\<rbrakk>\n       \\<Longrightarrow> cond_prob (T' I)\n                          (\\<lambda>\\<omega>. \\<omega> !! Suc n = s)\n                          (\\<lambda>\\<omega>. \\<omega> !! n = t) =\n                         cond_prob (T' I)\n                          (\\<lambda>\\<omega>. \\<omega> !! Suc m = s)\n                          (\\<lambda>\\<omega>. \\<omega> !! m = t)", "fix n"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>n. AE x in T' I. x !! n \\<in> U\n 2. \\<And>n s s'.\n       prob\n        {\\<omega> \\<in> space (T' I).\n         \\<forall>t\\<le>n. \\<omega> !! t = s t} \\<noteq>\n       0 \\<Longrightarrow>\n       cond_prob (T' I) (\\<lambda>\\<omega>. \\<omega> !! Suc n = s')\n        (\\<lambda>\\<omega>. \\<forall>t\\<le>n. \\<omega> !! t = s t) =\n       cond_prob (T' I) (\\<lambda>\\<omega>. \\<omega> !! Suc n = s')\n        (\\<lambda>\\<omega>. \\<omega> !! n = s n)\n 3. \\<And>n m s t.\n       \\<lbrakk>prob\n                 {\\<omega> \\<in> space (T' I). \\<omega> !! n = t} \\<noteq>\n                0;\n        prob {\\<omega> \\<in> space (T' I). \\<omega> !! m = t} \\<noteq>\n        0\\<rbrakk>\n       \\<Longrightarrow> cond_prob (T' I)\n                          (\\<lambda>\\<omega>. \\<omega> !! Suc n = s)\n                          (\\<lambda>\\<omega>. \\<omega> !! n = t) =\n                         cond_prob (T' I)\n                          (\\<lambda>\\<omega>. \\<omega> !! Suc m = s)\n                          (\\<lambda>\\<omega>. \\<omega> !! m = t)", "have \"\\<forall>x\\<in>I. AE y in T x. (x ## y) !! n \\<in> U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>set_pmf I. AE y in T x. (x ## y) !! n \\<in> U", "unfolding U_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>set_pmf I.\n       AE y in T x. (x ## y) !! n \\<in> acc `` set_pmf I", "proof (induction n arbitrary: I)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>I.\n       \\<forall>x\\<in>set_pmf I.\n          AE y in T x. (x ## y) !! 0 \\<in> acc `` set_pmf I\n 2. \\<And>n I.\n       (\\<And>I.\n           \\<forall>x\\<in>set_pmf I.\n              AE y in T x. (x ## y) !! n\n                           \\<in> acc `` set_pmf I) \\<Longrightarrow>\n       \\<forall>x\\<in>set_pmf I.\n          AE y in T x. (x ## y) !! Suc n \\<in> acc `` set_pmf I", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>I.\n       \\<forall>x\\<in>set_pmf I.\n          AE y in T x. (x ## y) !! 0 \\<in> acc `` set_pmf I\n 2. \\<And>n I.\n       (\\<And>I.\n           \\<forall>x\\<in>set_pmf I.\n              AE y in T x. (x ## y) !! n\n                           \\<in> acc `` set_pmf I) \\<Longrightarrow>\n       \\<forall>x\\<in>set_pmf I.\n          AE y in T x. (x ## y) !! Suc n \\<in> acc `` set_pmf I", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>set_pmf I.\n       AE y in T x. (x ## y) !! 0 \\<in> acc `` set_pmf I", "by auto"], ["proof (state)\nthis:\n  \\<forall>x\\<in>set_pmf I.\n     AE y in T x. (x ## y) !! 0 \\<in> acc `` set_pmf I\n\ngoal (1 subgoal):\n 1. \\<And>n I.\n       (\\<And>I.\n           \\<forall>x\\<in>set_pmf I.\n              AE y in T x. (x ## y) !! n\n                           \\<in> acc `` set_pmf I) \\<Longrightarrow>\n       \\<forall>x\\<in>set_pmf I.\n          AE y in T x. (x ## y) !! Suc n \\<in> acc `` set_pmf I", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n I.\n       (\\<And>I.\n           \\<forall>x\\<in>set_pmf I.\n              AE y in T x. (x ## y) !! n\n                           \\<in> acc `` set_pmf I) \\<Longrightarrow>\n       \\<forall>x\\<in>set_pmf I.\n          AE y in T x. (x ## y) !! Suc n \\<in> acc `` set_pmf I", "case (Suc n)"], ["proof (state)\nthis:\n  \\<forall>x\\<in>set_pmf ?I1.\n     AE y in T x. (x ## y) !! n \\<in> acc `` set_pmf ?I1\n\ngoal (1 subgoal):\n 1. \\<And>n I.\n       (\\<And>I.\n           \\<forall>x\\<in>set_pmf I.\n              AE y in T x. (x ## y) !! n\n                           \\<in> acc `` set_pmf I) \\<Longrightarrow>\n       \\<forall>x\\<in>set_pmf I.\n          AE y in T x. (x ## y) !! Suc n \\<in> acc `` set_pmf I", "{"], ["proof (state)\nthis:\n  \\<forall>x\\<in>set_pmf ?I1.\n     AE y in T x. (x ## y) !! n \\<in> acc `` set_pmf ?I1\n\ngoal (1 subgoal):\n 1. \\<And>n I.\n       (\\<And>I.\n           \\<forall>x\\<in>set_pmf I.\n              AE y in T x. (x ## y) !! n\n                           \\<in> acc `` set_pmf I) \\<Longrightarrow>\n       \\<forall>x\\<in>set_pmf I.\n          AE y in T x. (x ## y) !! Suc n \\<in> acc `` set_pmf I", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n I.\n       (\\<And>I.\n           \\<forall>x\\<in>set_pmf I.\n              AE y in T x. (x ## y) !! n\n                           \\<in> acc `` set_pmf I) \\<Longrightarrow>\n       \\<forall>x\\<in>set_pmf I.\n          AE y in T x. (x ## y) !! Suc n \\<in> acc `` set_pmf I", "assume \"x \\<in> I\""], ["proof (state)\nthis:\n  x \\<in> set_pmf I\n\ngoal (1 subgoal):\n 1. \\<And>n I.\n       (\\<And>I.\n           \\<forall>x\\<in>set_pmf I.\n              AE y in T x. (x ## y) !! n\n                           \\<in> acc `` set_pmf I) \\<Longrightarrow>\n       \\<forall>x\\<in>set_pmf I.\n          AE y in T x. (x ## y) !! Suc n \\<in> acc `` set_pmf I", "have \"AE y in T x. y !! n \\<in> (SIGMA x:UNIV. K x)\\<^sup>* `` K x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. AE y in T x. y !! n \\<in> acc `` set_pmf (K x)", "apply (subst AE_T_iff)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Measurable.pred (stream_space (count_space UNIV))\n     (\\<lambda>y. y !! n \\<in> acc `` set_pmf (K x))\n 2. \\<forall>y\\<in>set_pmf (K x).\n       AE \\<omega> in T y. (y ## \\<omega>) !! n \\<in> acc `` set_pmf (K x)", "apply (rule measurable_compose[OF measurable_snth], simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>set_pmf (K x).\n       AE \\<omega> in T y. (y ## \\<omega>) !! n \\<in> acc `` set_pmf (K x)", "apply (rule Suc)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  AE y in T x. y !! n \\<in> acc `` set_pmf (K x)\n\ngoal (1 subgoal):\n 1. \\<And>n I.\n       (\\<And>I.\n           \\<forall>x\\<in>set_pmf I.\n              AE y in T x. (x ## y) !! n\n                           \\<in> acc `` set_pmf I) \\<Longrightarrow>\n       \\<forall>x\\<in>set_pmf I.\n          AE y in T x. (x ## y) !! Suc n \\<in> acc `` set_pmf I", "moreover"], ["proof (state)\nthis:\n  AE y in T x. y !! n \\<in> acc `` set_pmf (K x)\n\ngoal (1 subgoal):\n 1. \\<And>n I.\n       (\\<And>I.\n           \\<forall>x\\<in>set_pmf I.\n              AE y in T x. (x ## y) !! n\n                           \\<in> acc `` set_pmf I) \\<Longrightarrow>\n       \\<forall>x\\<in>set_pmf I.\n          AE y in T x. (x ## y) !! Suc n \\<in> acc `` set_pmf I", "have \"(SIGMA x:UNIV. K x)\\<^sup>* `` K x \\<subseteq> (SIGMA x:UNIV. K x)\\<^sup>* `` I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. acc `` set_pmf (K x) \\<subseteq> acc `` set_pmf I", "using \\<open>x \\<in> I\\<close>"], ["proof (prove)\nusing this:\n  x \\<in> set_pmf I\n\ngoal (1 subgoal):\n 1. acc `` set_pmf (K x) \\<subseteq> acc `` set_pmf I", "by (auto intro: converse_rtrancl_into_rtrancl)"], ["proof (state)\nthis:\n  acc `` set_pmf (K x) \\<subseteq> acc `` set_pmf I\n\ngoal (1 subgoal):\n 1. \\<And>n I.\n       (\\<And>I.\n           \\<forall>x\\<in>set_pmf I.\n              AE y in T x. (x ## y) !! n\n                           \\<in> acc `` set_pmf I) \\<Longrightarrow>\n       \\<forall>x\\<in>set_pmf I.\n          AE y in T x. (x ## y) !! Suc n \\<in> acc `` set_pmf I", "ultimately"], ["proof (chain)\npicking this:\n  AE y in T x. y !! n \\<in> acc `` set_pmf (K x)\n  acc `` set_pmf (K x) \\<subseteq> acc `` set_pmf I", "have \"AE y in T x. y !! n \\<in> (SIGMA x:UNIV. K x)\\<^sup>* `` I\""], ["proof (prove)\nusing this:\n  AE y in T x. y !! n \\<in> acc `` set_pmf (K x)\n  acc `` set_pmf (K x) \\<subseteq> acc `` set_pmf I\n\ngoal (1 subgoal):\n 1. AE y in T x. y !! n \\<in> acc `` set_pmf I", "by (auto simp: subset_eq)"], ["proof (state)\nthis:\n  AE y in T x. y !! n \\<in> acc `` set_pmf I\n\ngoal (1 subgoal):\n 1. \\<And>n I.\n       (\\<And>I.\n           \\<forall>x\\<in>set_pmf I.\n              AE y in T x. (x ## y) !! n\n                           \\<in> acc `` set_pmf I) \\<Longrightarrow>\n       \\<forall>x\\<in>set_pmf I.\n          AE y in T x. (x ## y) !! Suc n \\<in> acc `` set_pmf I", "}"], ["proof (state)\nthis:\n  ?x3 \\<in> set_pmf I \\<Longrightarrow>\n  AE y in T ?x3. y !! n \\<in> acc `` set_pmf I\n\ngoal (1 subgoal):\n 1. \\<And>n I.\n       (\\<And>I.\n           \\<forall>x\\<in>set_pmf I.\n              AE y in T x. (x ## y) !! n\n                           \\<in> acc `` set_pmf I) \\<Longrightarrow>\n       \\<forall>x\\<in>set_pmf I.\n          AE y in T x. (x ## y) !! Suc n \\<in> acc `` set_pmf I", "then"], ["proof (chain)\npicking this:\n  ?x3 \\<in> set_pmf I \\<Longrightarrow>\n  AE y in T ?x3. y !! n \\<in> acc `` set_pmf I", "show ?case"], ["proof (prove)\nusing this:\n  ?x3 \\<in> set_pmf I \\<Longrightarrow>\n  AE y in T ?x3. y !! n \\<in> acc `` set_pmf I\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>set_pmf I.\n       AE y in T x. (x ## y) !! Suc n \\<in> acc `` set_pmf I", "by simp"], ["proof (state)\nthis:\n  \\<forall>x\\<in>set_pmf I.\n     AE y in T x. (x ## y) !! Suc n \\<in> acc `` set_pmf I\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x\\<in>set_pmf I. AE y in T x. (x ## y) !! n \\<in> U\n\ngoal (3 subgoals):\n 1. \\<And>n. AE x in T' I. x !! n \\<in> U\n 2. \\<And>n s s'.\n       prob\n        {\\<omega> \\<in> space (T' I).\n         \\<forall>t\\<le>n. \\<omega> !! t = s t} \\<noteq>\n       0 \\<Longrightarrow>\n       cond_prob (T' I) (\\<lambda>\\<omega>. \\<omega> !! Suc n = s')\n        (\\<lambda>\\<omega>. \\<forall>t\\<le>n. \\<omega> !! t = s t) =\n       cond_prob (T' I) (\\<lambda>\\<omega>. \\<omega> !! Suc n = s')\n        (\\<lambda>\\<omega>. \\<omega> !! n = s n)\n 3. \\<And>n m s t.\n       \\<lbrakk>prob\n                 {\\<omega> \\<in> space (T' I). \\<omega> !! n = t} \\<noteq>\n                0;\n        prob {\\<omega> \\<in> space (T' I). \\<omega> !! m = t} \\<noteq>\n        0\\<rbrakk>\n       \\<Longrightarrow> cond_prob (T' I)\n                          (\\<lambda>\\<omega>. \\<omega> !! Suc n = s)\n                          (\\<lambda>\\<omega>. \\<omega> !! n = t) =\n                         cond_prob (T' I)\n                          (\\<lambda>\\<omega>. \\<omega> !! Suc m = s)\n                          (\\<lambda>\\<omega>. \\<omega> !! m = t)", "then"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>set_pmf I. AE y in T x. (x ## y) !! n \\<in> U", "show \"AE x in T' I. x !! n \\<in> U\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>set_pmf I. AE y in T x. (x ## y) !! n \\<in> U\n\ngoal (1 subgoal):\n 1. AE x in T' I. x !! n \\<in> U", "by (simp add: AE_T')"], ["proof (state)\nthis:\n  AE x in T' I. x !! n \\<in> U\n\ngoal (2 subgoals):\n 1. \\<And>n s s'.\n       prob\n        {\\<omega> \\<in> space (T' I).\n         \\<forall>t\\<le>n. \\<omega> !! t = s t} \\<noteq>\n       0 \\<Longrightarrow>\n       cond_prob (T' I) (\\<lambda>\\<omega>. \\<omega> !! Suc n = s')\n        (\\<lambda>\\<omega>. \\<forall>t\\<le>n. \\<omega> !! t = s t) =\n       cond_prob (T' I) (\\<lambda>\\<omega>. \\<omega> !! Suc n = s')\n        (\\<lambda>\\<omega>. \\<omega> !! n = s n)\n 2. \\<And>n m s t.\n       \\<lbrakk>prob\n                 {\\<omega> \\<in> space (T' I). \\<omega> !! n = t} \\<noteq>\n                0;\n        prob {\\<omega> \\<in> space (T' I). \\<omega> !! m = t} \\<noteq>\n        0\\<rbrakk>\n       \\<Longrightarrow> cond_prob (T' I)\n                          (\\<lambda>\\<omega>. \\<omega> !! Suc n = s)\n                          (\\<lambda>\\<omega>. \\<omega> !! n = t) =\n                         cond_prob (T' I)\n                          (\\<lambda>\\<omega>. \\<omega> !! Suc m = s)\n                          (\\<lambda>\\<omega>. \\<omega> !! m = t)", "qed (simp_all add: TH MC MC')"], ["proof (state)\nthis:\n  Time_Homogeneous_Discrete_Markov_Process (T' I) U\n   (\\<lambda>n \\<omega>. \\<omega> !! n)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}