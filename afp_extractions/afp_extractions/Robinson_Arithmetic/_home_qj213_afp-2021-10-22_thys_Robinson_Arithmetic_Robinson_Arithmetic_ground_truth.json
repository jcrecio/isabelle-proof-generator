{"file_name": "/home/qj213/afp-2021-10-22/thys/Robinson_Arithmetic/Robinson_Arithmetic.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Robinson_Arithmetic", "problem_names": ["lemma supp_name [simp]: fixes i::name shows \"supp i = {atom i}\"", "lemma fresh_subst_if [simp]:\n  \"j \\<sharp> subst i x t \\<longleftrightarrow> (atom i \\<sharp> t \\<and> j \\<sharp> t) \\<or> (j \\<sharp> x \\<and> (j \\<sharp> t \\<or> j = atom i))\"", "lemma forget_subst_trm [simp]: \"atom a \\<sharp> trm \\<Longrightarrow> subst a x trm = trm\"", "lemma subst_trm_id [simp]: \"subst a (Var a) trm = trm\"", "lemma subst_trm_commute [simp]:\n  \"atom j \\<sharp> trm \\<Longrightarrow> subst j u (subst i t trm) = subst i (subst j u t) trm\"", "lemma subst_trm_commute2 [simp]:\n  \"atom j \\<sharp> t \\<Longrightarrow> atom i \\<sharp> u \\<Longrightarrow> i \\<noteq> j \\<Longrightarrow> subst j u (subst i t trm) = subst i t (subst j u trm)\"", "lemma repeat_subst_trm [simp]: \"subst i u (subst i t trm) = subst i (subst i u t) trm\"", "lemma size_subst_fmla [simp]: \"size (A(i::=x)) = size A\"", "lemma forget_subst_fmla [simp]: \"atom a \\<sharp> A \\<Longrightarrow> A(a::=x) = A\"", "lemma subst_fmla_id [simp]: \"A(a::=Var a) = A\"", "lemma fresh_subst_fmla_if [simp]:\n  \"j \\<sharp> (A(i::=x)) \\<longleftrightarrow> (atom i \\<sharp> A \\<and> j \\<sharp> A) \\<or> (j \\<sharp> x \\<and> (j \\<sharp> A \\<or> j = atom i))\"", "lemma subst_fmla_commute [simp]:\n  \"atom j \\<sharp> A \\<Longrightarrow> (A(i::=t))(j::=u) = A(i ::= subst j u t)\"", "lemma repeat_subst_fmla [simp]: \"(A(i::=t))(i::=u) = A(i ::= subst i u t)\"", "lemma subst_fmla_exi_with_renaming:\n  \"atom i' \\<sharp> (A, i, j, t) \\<Longrightarrow> (exi i A)(j ::= t) = exi i' (((i \\<leftrightarrow> i') \\<bullet> A)(j ::= t))\"", "lemma flip_subst_trm: \"atom y \\<sharp> t \\<Longrightarrow> (x \\<leftrightarrow> y) \\<bullet> t = subst x (Var y) t\"", "lemma flip_subst_fmla: \"atom y \\<sharp> \\<phi> \\<Longrightarrow> (x \\<leftrightarrow> y) \\<bullet> \\<phi> = \\<phi>(x::=Var y)\"", "lemma exi_ren_subst_fresh: \"atom y \\<sharp> \\<phi> \\<Longrightarrow> exi x \\<phi> = exi y (\\<phi>(x::=Var y))\"", "lemma eval_trm_rename:\n  assumes \"atom k' \\<sharp> t\"\n  shows \"eval_trm (finfun_update e k x) t =\n         eval_trm (finfun_update e k' x) ((k' \\<leftrightarrow> k) \\<bullet> t)\"", "lemma eval_fmla_rename:\n  assumes \"atom k' \\<sharp> A\"\n  shows \"eval_fmla (finfun_update e k x) A = eval_fmla (finfun_update e k' x) ((k' \\<leftrightarrow> k) \\<bullet> A)\"", "lemma better_ex_eval_fmla[simp]:\n  \"eval_fmla e (exi k A) \\<longleftrightarrow> (\\<exists>x. eval_fmla (finfun_update e k x) A)\"", "lemma forget_eval_trm [simp]: \"atom i \\<sharp> t \\<Longrightarrow>\n    eval_trm (finfun_update e i x) t = eval_trm e t\"", "lemma forget_eval_fmla [simp]:\n   \"atom k \\<sharp> A \\<Longrightarrow> eval_fmla (finfun_update e k x) A = eval_fmla e A\"", "lemma eval_subst_trm: \"eval_trm e (subst i t u) =\n   eval_trm (finfun_update e i (eval_trm e t)) u\"", "lemma eval_subst_fmla: \"eval_fmla e (fmla(i::= t)) =\n   eval_fmla (finfun_update e i (eval_trm e t)) fmla\"", "lemma cnj_eqvt [eqvt]: \"p \\<bullet> (A AND B) = (p \\<bullet> A) AND (p \\<bullet> B)\"", "lemma fresh_cnj [simp]: \"a \\<sharp> A AND B \\<longleftrightarrow> (a \\<sharp> A \\<and> a \\<sharp> B)\"", "lemma supp_cnj [simp]: \"supp (A AND B) = supp A \\<union> supp B\"", "lemma size_cnj [simp]: \"size (A AND B) = size A + size B + 4\"", "lemma cnj_injective_iff [iff]: \"(A AND B) = (A' AND B') \\<longleftrightarrow> (A = A' \\<and> B = B')\"", "lemma subst_fmla_cnj [simp]: \"(A AND B)(i::=x) = (A(i::=x)) AND (B(i::=x))\"", "lemma eval_fmla_cnj [simp]: \"eval_fmla e (cnj A B) \\<longleftrightarrow> (eval_fmla e A \\<and> eval_fmla e B)\"", "lemma Iff_eqvt [eqvt]: \"p \\<bullet> (A IFF B) = (p \\<bullet> A) IFF (p \\<bullet> B)\"", "lemma fresh_Iff [simp]: \"a \\<sharp> A IFF B \\<longleftrightarrow> (a \\<sharp> A \\<and> a \\<sharp> B)\"", "lemma size_Iff [simp]: \"size (A IFF B) = 2*(size A + size B) + 8\"", "lemma Iff_injective_iff [iff]: \"(A IFF B) = (A' IFF B') \\<longleftrightarrow> (A = A' \\<and> B = B')\"", "lemma subst_fmla_Iff [simp]: \"(A IFF B)(i::=x) = (A(i::=x)) IFF (B(i::=x))\"", "lemma eval_fmla_Iff [simp]: \"eval_fmla e (Iff A B) \\<longleftrightarrow> (eval_fmla e A  \\<longleftrightarrow>  eval_fmla e B)\"", "lemma fls_eqvt [eqvt]: \"(p \\<bullet> fls) = fls\"", "lemma fls_fresh [simp]: \"a \\<sharp> fls\"", "lemma boolean_axioms_hold: \"A \\<in> boolean_axioms \\<Longrightarrow> eval_fmla e A\"", "lemma special_axioms_hold: \"A \\<in> special_axioms \\<Longrightarrow> eval_fmla e A\"", "lemma twist_forget_eval_fmla [simp]:\n   \"atom j \\<sharp> (i, A)\n    \\<Longrightarrow> eval_fmla (finfun_update (finfun_update (finfun_update e i x) j y) i z) A =\n        eval_fmla (finfun_update e i z) A\"", "lemma refl_ax_holds: \"eval_fmla e refl_ax\"", "lemma eq_cong_ax_holds: \"eval_fmla e eq_cong_ax\"", "lemma syc_cong_ax_holds: \"eval_fmla e syc_cong_ax\"", "lemma pls_cong_ax_holds: \"eval_fmla e pls_cong_ax\"", "lemma tms_cong_ax_holds: \"eval_fmla e tms_cong_ax\"", "lemma equality_axioms_hold: \"A \\<in> equality_axioms \\<Longrightarrow> eval_fmla e A\"", "lemma contraction: \"insert A (insert A H) \\<turnstile> B \\<Longrightarrow> insert A H \\<turnstile> B\"", "lemma thin_Un: \"H \\<turnstile> A \\<Longrightarrow> H \\<union> H' \\<turnstile> A\"", "lemma thin: \"H \\<turnstile> A \\<Longrightarrow> H \\<subseteq> H' \\<Longrightarrow> H' \\<turnstile> A\"", "lemma thin0: \"{} \\<turnstile> A \\<Longrightarrow> H \\<turnstile> A\"", "lemma thin1: \"H \\<turnstile> B \\<Longrightarrow> insert A H \\<turnstile> B\"", "lemma thin2: \"insert A1 H \\<turnstile> B \\<Longrightarrow> insert A1 (insert A2 H) \\<turnstile> B\"", "lemma thin3: \"insert A1 (insert A2 H) \\<turnstile> B \\<Longrightarrow> insert A1 (insert A2 (insert A3 H)) \\<turnstile> B\"", "lemma thin4:\n  \"insert A1 (insert A2 (insert A3 H)) \\<turnstile> B\n   \\<Longrightarrow> insert A1 (insert A2 (insert A3 (insert A4 H))) \\<turnstile> B\"", "lemma rotate2: \"insert A2 (insert A1 H) \\<turnstile> B \\<Longrightarrow> insert A1 (insert A2 H) \\<turnstile> B\"", "lemma rotate3: \"insert A3 (insert A1 (insert A2 H)) \\<turnstile> B \\<Longrightarrow> insert A1 (insert A2 (insert A3 H)) \\<turnstile> B\"", "lemma rotate4:\n  \"insert A4 (insert A1 (insert A2 (insert A3 H))) \\<turnstile> B\n   \\<Longrightarrow> insert A1 (insert A2 (insert A3 (insert A4 H))) \\<turnstile> B\"", "lemma rotate5:\n  \"insert A5 (insert A1 (insert A2 (insert A3 (insert A4 H)))) \\<turnstile> B\n   \\<Longrightarrow> insert A1 (insert A2 (insert A3 (insert A4 (insert A5 H)))) \\<turnstile> B\"", "lemma rotate6:\n  \"insert A6 (insert A1 (insert A2 (insert A3 (insert A4 (insert A5 H))))) \\<turnstile> B\n   \\<Longrightarrow> insert A1 (insert A2 (insert A3 (insert A4 (insert A5 (insert A6 H))))) \\<turnstile> B\"", "lemma rotate7:\n  \"insert A7 (insert A1 (insert A2 (insert A3 (insert A4 (insert A5 (insert A6 H)))))) \\<turnstile> B\n   \\<Longrightarrow> insert A1 (insert A2 (insert A3 (insert A4 (insert A5 (insert A6 (insert A7 H)))))) \\<turnstile> B\"", "lemma rotate8:\n  \"insert A8 (insert A1 (insert A2 (insert A3 (insert A4 (insert A5 (insert A6 (insert A7 H))))))) \\<turnstile> B\n   \\<Longrightarrow> insert A1 (insert A2 (insert A3 (insert A4 (insert A5 (insert A6 (insert A7 (insert A8 H))))))) \\<turnstile> B\"", "lemma rotate9:\n  \"insert A9 (insert A1 (insert A2 (insert A3 (insert A4 (insert A5 (insert A6 (insert A7 (insert A8 H)))))))) \\<turnstile> B\n   \\<Longrightarrow> insert A1 (insert A2 (insert A3 (insert A4 (insert A5 (insert A6 (insert A7 (insert A8 (insert A9 H)))))))) \\<turnstile> B\"", "lemma rotate10:\n  \"insert A10 (insert A1 (insert A2 (insert A3 (insert A4 (insert A5 (insert A6 (insert A7 (insert A8 (insert A9 H))))))))) \\<turnstile> B\n   \\<Longrightarrow> insert A1 (insert A2 (insert A3 (insert A4 (insert A5 (insert A6 (insert A7 (insert A8 (insert A9 (insert A10 H))))))))) \\<turnstile> B\"", "lemma rotate11:\n  \"insert A11 (insert A1 (insert A2 (insert A3 (insert A4 (insert A5 (insert A6 (insert A7 (insert A8 (insert A9 (insert A10 H)))))))))) \\<turnstile> B\n   \\<Longrightarrow> insert A1 (insert A2 (insert A3 (insert A4 (insert A5 (insert A6 (insert A7 (insert A8 (insert A9 (insert A10 (insert A11 H)))))))))) \\<turnstile> B\"", "lemma rotate12:\n  \"insert A12 (insert A1 (insert A2 (insert A3 (insert A4 (insert A5 (insert A6 (insert A7 (insert A8 (insert A9 (insert A10 (insert A11 H))))))))))) \\<turnstile> B\n   \\<Longrightarrow> insert A1 (insert A2 (insert A3 (insert A4 (insert A5 (insert A6 (insert A7 (insert A8 (insert A9 (insert A10 (insert A11 (insert A12 H))))))))))) \\<turnstile> B\"", "lemma rotate13:\n  \"insert A13 (insert A1 (insert A2 (insert A3 (insert A4 (insert A5 (insert A6 (insert A7 (insert A8 (insert A9 (insert A10 (insert A11 (insert A12 H)))))))))))) \\<turnstile> B\n   \\<Longrightarrow> insert A1 (insert A2 (insert A3 (insert A4 (insert A5 (insert A6 (insert A7 (insert A8 (insert A9 (insert A10 (insert A11 (insert A12 (insert A13 H)))))))))))) \\<turnstile> B\"", "lemma rotate14:\n  \"insert A14 (insert A1 (insert A2 (insert A3 (insert A4 (insert A5 (insert A6 (insert A7 (insert A8 (insert A9 (insert A10 (insert A11 (insert A12 (insert A13 H))))))))))))) \\<turnstile> B\n   \\<Longrightarrow> insert A1 (insert A2 (insert A3 (insert A4 (insert A5 (insert A6 (insert A7 (insert A8 (insert A9 (insert A10 (insert A11 (insert A12 (insert A13 (insert A14 H))))))))))))) \\<turnstile> B\"", "lemma rotate15:\n  \"insert A15 (insert A1 (insert A2 (insert A3 (insert A4 (insert A5 (insert A6 (insert A7 (insert A8 (insert A9 (insert A10 (insert A11 (insert A12 (insert A13 (insert A14 H)))))))))))))) \\<turnstile> B\n   \\<Longrightarrow> insert A1 (insert A2 (insert A3 (insert A4 (insert A5 (insert A6 (insert A7 (insert A8 (insert A9 (insert A10 (insert A11 (insert A12 (insert A13 (insert A14 (insert A15 H)))))))))))))) \\<turnstile> B\"", "lemma MP_same: \"H \\<turnstile> A IMP B \\<Longrightarrow> H \\<turnstile> A \\<Longrightarrow> H \\<turnstile> B\"", "lemma MP_thin: \"HA \\<turnstile> A IMP B \\<Longrightarrow> HB \\<turnstile> A \\<Longrightarrow> HA \\<union> HB \\<subseteq> H \\<Longrightarrow> H \\<turnstile> B\"", "lemma MP_null: \"{} \\<turnstile> A IMP B \\<Longrightarrow> H \\<turnstile> A \\<Longrightarrow> H \\<turnstile> B\"", "lemma dsj_commute: \"H \\<turnstile> B OR A \\<Longrightarrow> H \\<turnstile> A OR B\"", "lemma S: assumes  \"H \\<turnstile> A IMP (B IMP C)\" \"H' \\<turnstile> A IMP B\" shows \"H \\<union> H' \\<turnstile> A IMP C\"", "lemma Assume: \"insert A H \\<turnstile> A\"", "lemmas AssumeH = Assume Assume [THEN rotate2] Assume [THEN rotate3] Assume [THEN rotate4] Assume [THEN rotate5]\n                 Assume [THEN rotate6] Assume [THEN rotate7] Assume [THEN rotate8] Assume [THEN rotate9] Assume [THEN rotate10]\n                 Assume [THEN rotate11] Assume [THEN rotate12]", "lemma imp_triv_I: \"H \\<turnstile> B \\<Longrightarrow> H \\<turnstile> A IMP B\"", "lemma dsjAssoc1: \"H \\<turnstile> A OR (B OR C) \\<Longrightarrow> H \\<turnstile> (A OR B) OR C\"", "lemma dsjAssoc2: \"H \\<turnstile> (A OR B) OR C \\<Longrightarrow> H \\<turnstile> A OR (B OR C)\"", "lemma dsj_commute_imp: \"H \\<turnstile> (B OR A) IMP (A OR B)\"", "lemma dsj_Semicong_1: \"H \\<turnstile> A OR C \\<Longrightarrow> H \\<turnstile> A IMP B \\<Longrightarrow> H \\<turnstile> B OR C\"", "lemma imp_imp_commute: \"H \\<turnstile> B IMP (A IMP C) \\<Longrightarrow> H \\<turnstile> A IMP (B IMP C)\"", "lemma deduction_Diff: assumes \"H \\<turnstile> B\" shows \"H - {C} \\<turnstile> C IMP B\"", "theorem imp_I [intro!]: \"insert A H \\<turnstile> B \\<Longrightarrow> H \\<turnstile> A IMP B\"", "lemma anti_deduction: \"H \\<turnstile> A IMP B \\<Longrightarrow> insert A H \\<turnstile> B\"", "lemma cut:  \"H \\<turnstile> A \\<Longrightarrow> insert A H' \\<turnstile> B \\<Longrightarrow> H \\<union> H' \\<turnstile> B\"", "lemma cut_same: \"H \\<turnstile> A \\<Longrightarrow> insert A H \\<turnstile> B \\<Longrightarrow> H \\<turnstile> B\"", "lemma cut_thin: \"HA \\<turnstile> A \\<Longrightarrow> insert A HB \\<turnstile> B \\<Longrightarrow> HA \\<union> HB \\<subseteq> H \\<Longrightarrow> H \\<turnstile> B\"", "lemma cut0: \"{} \\<turnstile> A \\<Longrightarrow> insert A H \\<turnstile> B \\<Longrightarrow> H \\<turnstile> B\"", "lemma cut1: \"{A} \\<turnstile> B \\<Longrightarrow> H \\<turnstile> A \\<Longrightarrow> H \\<turnstile> B\"", "lemma rcut1: \"{A} \\<turnstile> B \\<Longrightarrow> insert B H \\<turnstile> C \\<Longrightarrow> insert A H \\<turnstile> C\"", "lemma cut2: \"\\<lbrakk>{A,B} \\<turnstile> C; H \\<turnstile> A; H \\<turnstile> B\\<rbrakk> \\<Longrightarrow> H \\<turnstile> C\"", "lemma rcut2: \"{A,B} \\<turnstile> C \\<Longrightarrow> insert C H \\<turnstile> D \\<Longrightarrow> H \\<turnstile> B \\<Longrightarrow> insert A H \\<turnstile> D\"", "lemma cut3: \"\\<lbrakk>{A,B,C} \\<turnstile> D; H \\<turnstile> A; H \\<turnstile> B; H \\<turnstile> C\\<rbrakk> \\<Longrightarrow> H \\<turnstile> D\"", "lemma cut4: \"\\<lbrakk>{A,B,C,D} \\<turnstile> E; H \\<turnstile> A; H \\<turnstile> B; H \\<turnstile> C; H \\<turnstile> D\\<rbrakk> \\<Longrightarrow> H \\<turnstile> E\"", "lemma dsj_I1: \"H \\<turnstile> A \\<Longrightarrow> H \\<turnstile> A OR B\"", "lemma dsj_I2: \"H \\<turnstile> B \\<Longrightarrow> H \\<turnstile> A OR B\"", "lemma Peirce: \"H \\<turnstile> (neg A) IMP A \\<Longrightarrow> H \\<turnstile> A\"", "lemma Contra: \"insert (neg A) H \\<turnstile> A \\<Longrightarrow> H \\<turnstile> A\"", "lemma imp_neg_I: \"H \\<turnstile> A IMP B \\<Longrightarrow> H \\<turnstile> A IMP (neg B) \\<Longrightarrow> H \\<turnstile> neg A\"", "lemma negneg_I: \"H \\<turnstile> A \\<Longrightarrow> H \\<turnstile> neg (neg A)\"", "lemma negneg_D: \"H \\<turnstile> neg (neg A) \\<Longrightarrow> H \\<turnstile> A\"", "lemma neg_D: \"H \\<turnstile> neg A \\<Longrightarrow> H \\<turnstile> A \\<Longrightarrow> H \\<turnstile> B\"", "lemma dsj_neg_1: \"H \\<turnstile> A OR B \\<Longrightarrow> H \\<turnstile> neg B \\<Longrightarrow> H \\<turnstile> A\"", "lemma dsj_neg_2: \"H \\<turnstile> A OR B \\<Longrightarrow> H \\<turnstile> neg A \\<Longrightarrow> H \\<turnstile> B\"", "lemma neg_dsj_I: \"H \\<turnstile> neg A \\<Longrightarrow> H \\<turnstile> neg B \\<Longrightarrow> H \\<turnstile> neg (A OR B)\"", "lemma cnj_I [intro!]: \"H \\<turnstile> A \\<Longrightarrow> H \\<turnstile> B \\<Longrightarrow> H \\<turnstile> A AND B\"", "lemma cnj_E1: \"H \\<turnstile> A AND B \\<Longrightarrow> H \\<turnstile> A\"", "lemma cnj_E2: \"H \\<turnstile> A AND B \\<Longrightarrow> H \\<turnstile> B\"", "lemma cnj_commute: \"H \\<turnstile> B AND A \\<Longrightarrow> H \\<turnstile> A AND B\"", "lemma cnj_E: assumes \"insert A (insert B H) \\<turnstile> C\" shows \"insert (A AND B) H \\<turnstile> C\"", "lemmas cnj_EH = cnj_E cnj_E [THEN rotate2] cnj_E [THEN rotate3] cnj_E [THEN rotate4] cnj_E [THEN rotate5]\n                 cnj_E [THEN rotate6] cnj_E [THEN rotate7] cnj_E [THEN rotate8] cnj_E [THEN rotate9] cnj_E [THEN rotate10]", "lemma neg_I0: assumes \"(\\<And>B. atom i \\<sharp> B \\<Longrightarrow> insert A H \\<turnstile> B)\" shows \"H \\<turnstile> neg A\"", "lemma neg_mono: \"insert A H \\<turnstile> B \\<Longrightarrow> insert (neg B) H \\<turnstile> neg A\"", "lemma cnj_mono: \"insert A H \\<turnstile> B \\<Longrightarrow> insert C H \\<turnstile> D \\<Longrightarrow> insert (A AND C) H \\<turnstile> B AND D\"", "lemma dsj_mono:\n  assumes \"insert A H \\<turnstile> B\" \"insert C H \\<turnstile> D\" shows \"insert (A OR C) H \\<turnstile> B OR D\"", "lemma dsj_E:\n  assumes A: \"insert A H \\<turnstile> C\" and B: \"insert B H \\<turnstile> C\" shows \"insert (A OR B) H \\<turnstile> C\"", "lemmas dsj_EH = dsj_E dsj_E [THEN rotate2] dsj_E [THEN rotate3] dsj_E [THEN rotate4] dsj_E [THEN rotate5]\n                 dsj_E [THEN rotate6] dsj_E [THEN rotate7] dsj_E [THEN rotate8] dsj_E [THEN rotate9] dsj_E [THEN rotate10]", "lemma Contra': \"insert A H \\<turnstile> neg A \\<Longrightarrow> H \\<turnstile> neg A\"", "lemma negneg_E [intro!]: \"insert A H \\<turnstile> B \\<Longrightarrow> insert (neg (neg A)) H \\<turnstile> B\"", "lemma imp_E:\n  assumes A: \"H \\<turnstile> A\" and B: \"insert B H \\<turnstile> C\" shows \"insert (A IMP B) H \\<turnstile> C\"", "lemma imp_cut:\n  assumes \"insert C H \\<turnstile> A IMP B\" \"{A} \\<turnstile> C\"\n    shows \"H \\<turnstile> A IMP B\"", "lemma Iff_I [intro!]: \"insert A H \\<turnstile> B \\<Longrightarrow> insert B H \\<turnstile> A \\<Longrightarrow> H \\<turnstile> A IFF B\"", "lemma Iff_MP_same: \"H \\<turnstile> A IFF B \\<Longrightarrow> H \\<turnstile> A \\<Longrightarrow> H \\<turnstile> B\"", "lemma Iff_MP2_same: \"H \\<turnstile> A IFF B \\<Longrightarrow> H \\<turnstile> B \\<Longrightarrow> H \\<turnstile> A\"", "lemma Iff_refl [intro!]: \"H \\<turnstile> A IFF A\"", "lemma Iff_sym: \"H \\<turnstile> A IFF B \\<Longrightarrow> H \\<turnstile> B IFF A\"", "lemma Iff_trans: \"H \\<turnstile> A IFF B \\<Longrightarrow> H \\<turnstile> B IFF C \\<Longrightarrow> H \\<turnstile> A IFF C\"", "lemma Iff_E:\n  \"insert A (insert B H) \\<turnstile> C \\<Longrightarrow> insert (neg A) (insert (neg B) H) \\<turnstile> C \\<Longrightarrow> insert (A IFF B) H \\<turnstile> C\"", "lemma Iff_E1:\n  assumes A: \"H \\<turnstile> A\" and B: \"insert B H \\<turnstile> C\" shows \"insert (A IFF B) H \\<turnstile> C\"", "lemma Iff_E2:\n  assumes A: \"H \\<turnstile> A\" and B: \"insert B H \\<turnstile> C\" shows \"insert (B IFF A) H \\<turnstile> C\"", "lemma Iff_MP_left: \"H \\<turnstile> A IFF B \\<Longrightarrow> insert A H \\<turnstile> C \\<Longrightarrow> insert B H \\<turnstile> C\"", "lemma Iff_MP_left': \"H \\<turnstile> A IFF B \\<Longrightarrow> insert B H \\<turnstile> C \\<Longrightarrow> insert A H \\<turnstile> C\"", "lemma Swap: \"insert (neg B) H \\<turnstile> A \\<Longrightarrow> insert (neg A) H \\<turnstile> B\"", "lemma Cases: \"insert A H \\<turnstile> B \\<Longrightarrow> insert (neg A) H \\<turnstile> B \\<Longrightarrow> H \\<turnstile> B\"", "lemma neg_cnj_E: \"H \\<turnstile> B \\<Longrightarrow> insert (neg A) H \\<turnstile> C \\<Longrightarrow> insert (neg (A AND B)) H \\<turnstile> C\"", "lemma dsj_CI: \"insert (neg B) H \\<turnstile> A \\<Longrightarrow> H \\<turnstile> A OR B\"", "lemma dsj_3I: \"insert (neg A) (insert (neg C) H) \\<turnstile> B \\<Longrightarrow> H \\<turnstile> A OR B OR C\"", "lemma Contrapos1: \"H \\<turnstile> A IMP B \\<Longrightarrow> H \\<turnstile> neg B IMP neg A\"", "lemma Contrapos2: \"H \\<turnstile> (neg B) IMP (neg A) \\<Longrightarrow> H \\<turnstile> A IMP B\"", "lemma ContraAssumeN [intro]: \"B \\<in> H \\<Longrightarrow> insert (neg B) H \\<turnstile> A\"", "lemma ContraAssume: \"neg B \\<in> H \\<Longrightarrow> insert B H \\<turnstile> A\"", "lemma ContraProve: \"H \\<turnstile> B \\<Longrightarrow> insert (neg B) H \\<turnstile> A\"", "lemma dsj_IE1: \"insert B H \\<turnstile> C \\<Longrightarrow> insert (A OR B) H \\<turnstile> A OR C\"", "lemmas dsj_IE1H = dsj_IE1 dsj_IE1 [THEN rotate2] dsj_IE1 [THEN rotate3] dsj_IE1 [THEN rotate4] dsj_IE1 [THEN rotate5]\n                 dsj_IE1 [THEN rotate6] dsj_IE1 [THEN rotate7] dsj_IE1 [THEN rotate8]", "lemma exi_I: \"H \\<turnstile> A(i::=x) \\<Longrightarrow> H \\<turnstile> exi i A\"", "lemma exi_E:\n  assumes \"insert A H \\<turnstile> B\" \"atom i \\<sharp> B\" \"\\<forall>C \\<in> H. atom i \\<sharp> C\"\n  shows \"insert (exi i A) H \\<turnstile> B\"", "lemma exi_E_with_renaming:\n  assumes \"insert ((i \\<leftrightarrow> i') \\<bullet> A) H \\<turnstile> B\" \"atom i' \\<sharp> (A,i,B)\" \"\\<forall>C \\<in> H. atom i' \\<sharp> C\"\n  shows \"insert (exi i A) H \\<turnstile> B\"", "lemmas exi_EH = exi_E exi_E [THEN rotate2] exi_E [THEN rotate3] exi_E [THEN rotate4] exi_E [THEN rotate5]\n                 exi_E [THEN rotate6] exi_E [THEN rotate7] exi_E [THEN rotate8] exi_E [THEN rotate9] exi_E [THEN rotate10]", "lemma exi_mono: \"insert A H \\<turnstile> B \\<Longrightarrow> \\<forall>C \\<in> H. atom i \\<sharp> C \\<Longrightarrow> insert (exi i A) H \\<turnstile> (exi i B)\"", "lemma all_I [intro!]: \"H \\<turnstile> A \\<Longrightarrow> \\<forall>C \\<in> H. atom i \\<sharp> C \\<Longrightarrow> H \\<turnstile> all i A\"", "lemma all_D: \"H \\<turnstile> all i A \\<Longrightarrow> H \\<turnstile> A(i::=x)\"", "lemma all_E: \"insert (A(i::=x)) H \\<turnstile> B \\<Longrightarrow> insert (all i A) H \\<turnstile> B\"", "lemma all_E': \"H \\<turnstile> all i A \\<Longrightarrow> insert (A(i::=x)) H \\<turnstile> B \\<Longrightarrow> H \\<turnstile> B\"", "lemma neg_cong: \"H \\<turnstile> A IFF A' \\<Longrightarrow> H \\<turnstile> neg A IFF neg A'\"", "lemma dsj_cong: \"H \\<turnstile> A IFF A' \\<Longrightarrow> H \\<turnstile> B IFF B' \\<Longrightarrow> H \\<turnstile> A OR B IFF A' OR B'\"", "lemma cnj_cong: \"H \\<turnstile> A IFF A' \\<Longrightarrow> H \\<turnstile> B IFF B' \\<Longrightarrow> H \\<turnstile> A AND B IFF A' AND B'\"", "lemma imp_cong: \"H \\<turnstile> A IFF A' \\<Longrightarrow> H \\<turnstile> B IFF B' \\<Longrightarrow> H \\<turnstile> (A IMP B) IFF (A' IMP B')\"", "lemma Iff_cong: \"H \\<turnstile> A IFF A' \\<Longrightarrow> H \\<turnstile> B IFF B' \\<Longrightarrow> H \\<turnstile> (A IFF B) IFF (A' IFF B')\"", "lemma exi_cong: \"H \\<turnstile> A IFF A' \\<Longrightarrow> \\<forall>C \\<in> H. atom i \\<sharp> C \\<Longrightarrow> H \\<turnstile> (exi i A) IFF (exi i A')\"", "lemma all_cong: \"H \\<turnstile> A IFF A' \\<Longrightarrow> \\<forall>C \\<in> H. atom i \\<sharp> C \\<Longrightarrow> H \\<turnstile> (all i A) IFF (all i A')\"", "lemma Subst: \"H \\<turnstile> A \\<Longrightarrow> \\<forall>B \\<in> H. atom i \\<sharp> B \\<Longrightarrow> H \\<turnstile> A (i::=x)\"", "lemma eql_cong1: \"{} \\<turnstile> (t EQ t' AND u EQ u') IMP (t EQ u IMP t' EQ u')\"", "lemma Refl [iff]: \"H \\<turnstile> t EQ t\"", "lemma Sym: assumes \"H \\<turnstile> t EQ u\" shows \"H \\<turnstile> u EQ t\"", "lemma Sym_L: \"insert (t EQ u) H \\<turnstile> A \\<Longrightarrow> insert (u EQ t) H \\<turnstile> A\"", "lemma Trans: assumes \"H \\<turnstile> x EQ y\" \"H \\<turnstile> y EQ z\" shows \"H \\<turnstile> x EQ z\"", "lemma eql_cong:\n  assumes \"H \\<turnstile> t EQ t'\" \"H \\<turnstile> u EQ u'\" shows \"H \\<turnstile> t EQ u IFF t' EQ u'\"", "lemma eql_Trans_E: \"H \\<turnstile> x EQ u \\<Longrightarrow> insert (t EQ u) H \\<turnstile> A \\<Longrightarrow> insert (x EQ t) H \\<turnstile> A\"", "lemma suc_cong1: \"{} \\<turnstile> (t EQ t') IMP (suc t EQ suc t')\"", "lemma suc_cong: \"\\<lbrakk>H \\<turnstile> t EQ t'\\<rbrakk> \\<Longrightarrow> H \\<turnstile> suc t EQ suc t'\"", "lemma pls_cong1: \"{} \\<turnstile> (t EQ t' AND u EQ u') IMP (pls t u EQ pls t' u')\"", "lemma pls_cong: \"\\<lbrakk>H \\<turnstile> t EQ t'; H \\<turnstile> u EQ u'\\<rbrakk> \\<Longrightarrow> H \\<turnstile> pls t u EQ pls t' u'\"", "lemma tms_cong1: \"{} \\<turnstile> (t EQ t' AND u EQ u') IMP (tms t u EQ tms t' u')\"", "lemma tms_cong: \"\\<lbrakk>H \\<turnstile> t EQ t'; H \\<turnstile> u EQ u'\\<rbrakk> \\<Longrightarrow> H \\<turnstile> tms t u EQ tms t' u'\"", "lemma eql_subst_trm_Iff: \"{t EQ u} \\<turnstile> subst i t trm EQ subst i u trm\"", "lemma eql_subst_fmla_Iff: \"insert (t EQ u) H \\<turnstile> A(i::=t) IFF A(i::=u)\"", "lemma Var_eql_subst_Iff: \"insert (Var i EQ t) H \\<turnstile> A(i::=t) IFF A\"", "lemma Var_eql_imp_subst_Iff: \"H \\<turnstile> Var i EQ t \\<Longrightarrow> H \\<turnstile> A(i::=t) IFF A\"", "lemma P1_cong:\n  fixes tms :: \"trm list\"\n  assumes \"\\<And>i t x. atom i \\<sharp> tms \\<Longrightarrow> (P t)(i::=x) = P (subst i x t)\" and \"H \\<turnstile> x EQ x'\"\n  shows \"H \\<turnstile> P x IFF P x'\"", "lemma P2_cong:\n  fixes tms :: \"trm list\"\n  assumes sub: \"\\<And>i t u x. atom i \\<sharp> tms \\<Longrightarrow> (P t u)(i::=x) = P (subst i x t) (subst i x u)\"\n      and eq:  \"H \\<turnstile> x EQ x'\" \"H \\<turnstile> y EQ y'\"\n  shows \"H \\<turnstile> P x y IFF P x' y'\"", "lemma P3_cong:\n  fixes tms :: \"trm list\"\n  assumes sub: \"\\<And>i t u v x. atom i \\<sharp> tms \\<Longrightarrow>\n                   (P t u v)(i::=x) = P (subst i x t) (subst i x u) (subst i x v)\"\n      and eq:  \"H \\<turnstile> x EQ x'\" \"H \\<turnstile> y EQ y'\" \"H \\<turnstile> z EQ z'\"\n  shows \"H \\<turnstile> P x y z IFF P x' y' z'\"", "lemma P4_cong:\n  fixes tms :: \"trm list\"\n  assumes sub: \"\\<And>i t1 t2 t3 t4 x. atom i \\<sharp> tms \\<Longrightarrow>\n                 (P t1 t2 t3 t4)(i::=x) = P (subst i x t1) (subst i x t2) (subst i x t3) (subst i x t4)\"\n      and eq:  \"H \\<turnstile> x1 EQ x1'\" \"H \\<turnstile> x2 EQ x2'\" \"H \\<turnstile> x3 EQ x3'\" \"H \\<turnstile> x4 EQ x4'\"\n  shows \"H \\<turnstile> P x1 x2 x3 x4 IFF P x1' x2' x3' x4'\"", "lemma neg_I [intro!]: \"insert A H \\<turnstile> fls \\<Longrightarrow> H \\<turnstile> neg A\"", "lemma neg_E [intro!]: \"H \\<turnstile> A \\<Longrightarrow> insert (neg A) H \\<turnstile> fls\"", "lemma neg_imp_I [intro!]: \"H \\<turnstile> A \\<Longrightarrow> insert B H \\<turnstile> fls \\<Longrightarrow> H \\<turnstile> neg (A IMP B)\"", "lemma neg_imp_E [intro!]: \"insert (neg B) (insert A H) \\<turnstile> C \\<Longrightarrow> insert (neg (A IMP B)) H \\<turnstile> C\"", "lemma fls_E [intro!]: \"insert fls H \\<turnstile> A\"", "lemma truth_provable: \"H \\<turnstile> (neg fls)\"", "lemma exFalso: \"H \\<turnstile> fls \\<Longrightarrow> H \\<turnstile> A\"", "theorem nprv_sound: assumes \"H \\<turnstile> A\" shows \"(\\<forall>B\\<in>H. eval_fmla e B) \\<Longrightarrow> eval_fmla e A\""], "translations": [["", "lemma supp_name [simp]: fixes i::name shows \"supp i = {atom i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. supp i = {atom i}", "by (rule supp_at_base)"], ["", "subsection \\<open>The datatypes\\<close>"], ["", "nominal_datatype trm = zer | Var name | suc trm | pls trm trm | tms trm trm"], ["", "nominal_datatype fmla =\n    eql trm trm     (infixr \"EQ\" 150)\n  | dsj fmla fmla   (infixr \"OR\" 130)\n  | neg fmla\n  | exi x::name f::fmla binds x in f"], ["", "text \\<open>eql are atomic formulas; dsj, neg, exi are non-atomic\\<close>"], ["", "declare trm.supp [simp] fmla.supp [simp]"], ["", "subsection \\<open>Substitution\\<close>"], ["", "nominal_function subst :: \"name \\<Rightarrow> trm \\<Rightarrow> trm \\<Rightarrow> trm\"\n  where\n   \"subst i x zer       = zer\"\n | \"subst i x (Var k)    = (if i=k then x else Var k)\"\n | \"subst i x (suc t) = suc (subst i x t)\"\n | \"subst i x (pls t u) = pls (subst i x t) (subst i x u)\"\n | \"subst i x (tms t u) = tms (subst i x t) (subst i x u)\""], ["proof (prove)\ngoal (18 subgoals):\n 1. eqvt subst_graph_aux\n 2. \\<And>x y. subst_graph x y \\<Longrightarrow> True\n 3. \\<And>P x.\n       \\<lbrakk>\\<And>i xa. x = (i, xa, zer) \\<Longrightarrow> P;\n        \\<And>i xa k. x = (i, xa, Var k) \\<Longrightarrow> P;\n        \\<And>i xa t. x = (i, xa, suc t) \\<Longrightarrow> P;\n        \\<And>i xa t u. x = (i, xa, pls t u) \\<Longrightarrow> P;\n        \\<And>i xa t u. x = (i, xa, tms t u) \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>i x ia xa. (i, x, zer) = (ia, xa, zer) \\<Longrightarrow> zer = zer\n 5. \\<And>i x ia xa k.\n       (i, x, zer) = (ia, xa, Var k) \\<Longrightarrow>\n       zer = (if ia = k then xa else Var k)\n 6. \\<And>i x ia xa t.\n       \\<lbrakk>eqvt_at subst_sumC (ia, xa, t); True;\n        (i, x, zer) = (ia, xa, suc t)\\<rbrakk>\n       \\<Longrightarrow> zer = suc (subst_sumC (ia, xa, t))\n 7. \\<And>i x ia xa t u.\n       \\<lbrakk>eqvt_at subst_sumC (ia, xa, t);\n        eqvt_at subst_sumC (ia, xa, u); True; True;\n        (i, x, zer) = (ia, xa, pls t u)\\<rbrakk>\n       \\<Longrightarrow> zer =\n                         pls (subst_sumC (ia, xa, t))\n                          (subst_sumC (ia, xa, u))\n 8. \\<And>i x ia xa t u.\n       \\<lbrakk>eqvt_at subst_sumC (ia, xa, t);\n        eqvt_at subst_sumC (ia, xa, u); True; True;\n        (i, x, zer) = (ia, xa, tms t u)\\<rbrakk>\n       \\<Longrightarrow> zer =\n                         tms (subst_sumC (ia, xa, t))\n                          (subst_sumC (ia, xa, u))\n 9. \\<And>i x k ia xa ka.\n       (i, x, Var k) = (ia, xa, Var ka) \\<Longrightarrow>\n       (if i = k then x else Var k) = (if ia = ka then xa else Var ka)\n 10. \\<And>i x k ia xa t.\n        \\<lbrakk>eqvt_at subst_sumC (ia, xa, t); True;\n         (i, x, Var k) = (ia, xa, suc t)\\<rbrakk>\n        \\<Longrightarrow> (if i = k then x else Var k) =\n                          suc (subst_sumC (ia, xa, t))\nA total of 18 subgoals...", "by (auto simp: eqvt_def subst_graph_aux_def) (metis trm.strong_exhaust)"], ["", "nominal_termination (eqvt)"], ["proof (prove)\ngoal (1 subgoal):\n 1. All subst_dom", "by lexicographic_order"], ["", "lemma fresh_subst_if [simp]:\n  \"j \\<sharp> subst i x t \\<longleftrightarrow> (atom i \\<sharp> t \\<and> j \\<sharp> t) \\<or> (j \\<sharp> x \\<and> (j \\<sharp> t \\<or> j = atom i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j \\<sharp> subst i x t =\n    (atom i \\<sharp> t \\<and> j \\<sharp> t \\<or>\n     j \\<sharp> x \\<and> (j \\<sharp> t \\<or> j = atom i))", "by (induct t rule: trm.induct) (auto simp: fresh_at_base)"], ["", "lemma forget_subst_trm [simp]: \"atom a \\<sharp> trm \\<Longrightarrow> subst a x trm = trm\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom a \\<sharp> trm \\<Longrightarrow> subst a x trm = trm", "by (induct trm rule: trm.induct) (simp_all add: fresh_at_base)"], ["", "lemma subst_trm_id [simp]: \"subst a (Var a) trm = trm\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subst a (Var a) trm = trm", "by (induct trm rule: trm.induct) simp_all"], ["", "lemma subst_trm_commute [simp]:\n  \"atom j \\<sharp> trm \\<Longrightarrow> subst j u (subst i t trm) = subst i (subst j u t) trm\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom j \\<sharp> trm \\<Longrightarrow>\n    subst j u (subst i t trm) = subst i (subst j u t) trm", "by (induct trm rule: trm.induct) (auto simp: fresh_Pair)"], ["", "lemma subst_trm_commute2 [simp]:\n  \"atom j \\<sharp> t \\<Longrightarrow> atom i \\<sharp> u \\<Longrightarrow> i \\<noteq> j \\<Longrightarrow> subst j u (subst i t trm) = subst i t (subst j u trm)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>atom j \\<sharp> t; atom i \\<sharp> u; i \\<noteq> j\\<rbrakk>\n    \\<Longrightarrow> subst j u (subst i t trm) = subst i t (subst j u trm)", "by (induct trm rule: trm.induct) auto"], ["", "lemma repeat_subst_trm [simp]: \"subst i u (subst i t trm) = subst i (subst i u t) trm\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subst i u (subst i t trm) = subst i (subst i u t) trm", "by (induct trm rule: trm.induct) auto"], ["", "nominal_function  subst_fmla :: \"fmla \\<Rightarrow> name \\<Rightarrow> trm \\<Rightarrow> fmla\" (\"_'(_::=_')\" [1000, 0, 0] 200)\n  where\n    eql:   \"(eql t u)(i::=x)   = eql  (subst i x t) (subst i x u)\"\n  | dsj: \"(dsj A B)(i::=x) = dsj (A(i::=x)) (B(i::=x))\"\n  | neg:  \"(neg A)(i::=x)    = neg  (A(i::=x))\"\n  | exi:   \"atom j \\<sharp> (i, x) \\<Longrightarrow> (exi j A)(i::=x) = exi j (A(i::=x))\""], ["proof (prove)\ngoal (13 subgoals):\n 1. eqvt subst_fmla_graph_aux\n 2. \\<And>x y. subst_fmla_graph x y \\<Longrightarrow> True\n 3. \\<And>P x.\n       \\<lbrakk>\\<And>t u i xa. x = (t EQ u, i, xa) \\<Longrightarrow> P;\n        \\<And>A B i xa. x = (A OR B, i, xa) \\<Longrightarrow> P;\n        \\<And>A i xa. x = (neg A, i, xa) \\<Longrightarrow> P;\n        \\<And>j i xa A.\n           \\<lbrakk>atom j \\<sharp> (i, xa); x = (exi j A, i, xa)\\<rbrakk>\n           \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>t u i x ta ua ia xa.\n       (t EQ u, i, x) = (ta EQ ua, ia, xa) \\<Longrightarrow>\n       subst i x t EQ subst i x u = subst ia xa ta EQ subst ia xa ua\n 5. \\<And>t u i x A B ia xa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, ia, xa);\n        eqvt_at subst_fmla_sumC (B, ia, xa); True; True;\n        (t EQ u, i, x) = (A OR B, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> subst i x t EQ subst i x u =\n                         subst_fmla_sumC (A, ia, xa) OR\n                         subst_fmla_sumC (B, ia, xa)\n 6. \\<And>t u i x A ia xa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, ia, xa); True;\n        (t EQ u, i, x) = (neg A, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> subst i x t EQ subst i x u =\n                         neg (subst_fmla_sumC (A, ia, xa))\n 7. \\<And>t u i x j ia xa A.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, ia, xa); True;\n        atom j \\<sharp> (ia, xa);\n        (t EQ u, i, x) = (exi j A, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> subst i x t EQ subst i x u =\n                         exi j (subst_fmla_sumC (A, ia, xa))\n 8. \\<And>A B i x Aa Ba ia xa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (B, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa);\n        eqvt_at subst_fmla_sumC (Ba, ia, xa); True; True; True; True;\n        (A OR B, i, x) = (Aa OR Ba, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> subst_fmla_sumC (A, i, x) OR\n                         subst_fmla_sumC (B, i, x) =\n                         subst_fmla_sumC (Aa, ia, xa) OR\n                         subst_fmla_sumC (Ba, ia, xa)\n 9. \\<And>A B i x Aa ia xa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (B, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True; True;\n        (A OR B, i, x) = (neg Aa, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> subst_fmla_sumC (A, i, x) OR\n                         subst_fmla_sumC (B, i, x) =\n                         neg (subst_fmla_sumC (Aa, ia, xa))\n 10. \\<And>A B i x j ia xa Aa.\n        \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n         eqvt_at subst_fmla_sumC (B, i, x);\n         eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True; True;\n         atom j \\<sharp> (ia, xa);\n         (A OR B, i, x) = (exi j Aa, ia, xa)\\<rbrakk>\n        \\<Longrightarrow> subst_fmla_sumC (A, i, x) OR\n                          subst_fmla_sumC (B, i, x) =\n                          exi j (subst_fmla_sumC (Aa, ia, xa))\nA total of 13 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. eqvt subst_fmla_graph_aux", "by (simp add: eqvt_def subst_fmla_graph_aux_def)"], ["proof (prove)\ngoal (12 subgoals):\n 1. \\<And>x y. subst_fmla_graph x y \\<Longrightarrow> True\n 2. \\<And>P x.\n       \\<lbrakk>\\<And>t u i xa. x = (t EQ u, i, xa) \\<Longrightarrow> P;\n        \\<And>A B i xa. x = (A OR B, i, xa) \\<Longrightarrow> P;\n        \\<And>A i xa. x = (neg A, i, xa) \\<Longrightarrow> P;\n        \\<And>j i xa A.\n           \\<lbrakk>atom j \\<sharp> (i, xa); x = (exi j A, i, xa)\\<rbrakk>\n           \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>t u i x ta ua ia xa.\n       (t EQ u, i, x) = (ta EQ ua, ia, xa) \\<Longrightarrow>\n       subst i x t EQ subst i x u = subst ia xa ta EQ subst ia xa ua\n 4. \\<And>t u i x A B ia xa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, ia, xa);\n        eqvt_at subst_fmla_sumC (B, ia, xa); True; True;\n        (t EQ u, i, x) = (A OR B, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> subst i x t EQ subst i x u =\n                         subst_fmla_sumC (A, ia, xa) OR\n                         subst_fmla_sumC (B, ia, xa)\n 5. \\<And>t u i x A ia xa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, ia, xa); True;\n        (t EQ u, i, x) = (neg A, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> subst i x t EQ subst i x u =\n                         neg (subst_fmla_sumC (A, ia, xa))\n 6. \\<And>t u i x j ia xa A.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, ia, xa); True;\n        atom j \\<sharp> (ia, xa);\n        (t EQ u, i, x) = (exi j A, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> subst i x t EQ subst i x u =\n                         exi j (subst_fmla_sumC (A, ia, xa))\n 7. \\<And>A B i x Aa Ba ia xa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (B, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa);\n        eqvt_at subst_fmla_sumC (Ba, ia, xa); True; True; True; True;\n        (A OR B, i, x) = (Aa OR Ba, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> subst_fmla_sumC (A, i, x) OR\n                         subst_fmla_sumC (B, i, x) =\n                         subst_fmla_sumC (Aa, ia, xa) OR\n                         subst_fmla_sumC (Ba, ia, xa)\n 8. \\<And>A B i x Aa ia xa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (B, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True; True;\n        (A OR B, i, x) = (neg Aa, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> subst_fmla_sumC (A, i, x) OR\n                         subst_fmla_sumC (B, i, x) =\n                         neg (subst_fmla_sumC (Aa, ia, xa))\n 9. \\<And>A B i x j ia xa Aa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (B, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True; True;\n        atom j \\<sharp> (ia, xa);\n        (A OR B, i, x) = (exi j Aa, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> subst_fmla_sumC (A, i, x) OR\n                         subst_fmla_sumC (B, i, x) =\n                         exi j (subst_fmla_sumC (Aa, ia, xa))\n 10. \\<And>A i x Aa ia xa.\n        \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n         eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True;\n         (neg A, i, x) = (neg Aa, ia, xa)\\<rbrakk>\n        \\<Longrightarrow> neg (subst_fmla_sumC (A, i, x)) =\n                          neg (subst_fmla_sumC (Aa, ia, xa))\nA total of 12 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. subst_fmla_graph x_ y_ \\<Longrightarrow> True", "by auto"], ["proof (prove)\ngoal (11 subgoals):\n 1. \\<And>P x.\n       \\<lbrakk>\\<And>t u i xa. x = (t EQ u, i, xa) \\<Longrightarrow> P;\n        \\<And>A B i xa. x = (A OR B, i, xa) \\<Longrightarrow> P;\n        \\<And>A i xa. x = (neg A, i, xa) \\<Longrightarrow> P;\n        \\<And>j i xa A.\n           \\<lbrakk>atom j \\<sharp> (i, xa); x = (exi j A, i, xa)\\<rbrakk>\n           \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t u i x ta ua ia xa.\n       (t EQ u, i, x) = (ta EQ ua, ia, xa) \\<Longrightarrow>\n       subst i x t EQ subst i x u = subst ia xa ta EQ subst ia xa ua\n 3. \\<And>t u i x A B ia xa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, ia, xa);\n        eqvt_at subst_fmla_sumC (B, ia, xa); True; True;\n        (t EQ u, i, x) = (A OR B, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> subst i x t EQ subst i x u =\n                         subst_fmla_sumC (A, ia, xa) OR\n                         subst_fmla_sumC (B, ia, xa)\n 4. \\<And>t u i x A ia xa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, ia, xa); True;\n        (t EQ u, i, x) = (neg A, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> subst i x t EQ subst i x u =\n                         neg (subst_fmla_sumC (A, ia, xa))\n 5. \\<And>t u i x j ia xa A.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, ia, xa); True;\n        atom j \\<sharp> (ia, xa);\n        (t EQ u, i, x) = (exi j A, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> subst i x t EQ subst i x u =\n                         exi j (subst_fmla_sumC (A, ia, xa))\n 6. \\<And>A B i x Aa Ba ia xa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (B, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa);\n        eqvt_at subst_fmla_sumC (Ba, ia, xa); True; True; True; True;\n        (A OR B, i, x) = (Aa OR Ba, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> subst_fmla_sumC (A, i, x) OR\n                         subst_fmla_sumC (B, i, x) =\n                         subst_fmla_sumC (Aa, ia, xa) OR\n                         subst_fmla_sumC (Ba, ia, xa)\n 7. \\<And>A B i x Aa ia xa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (B, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True; True;\n        (A OR B, i, x) = (neg Aa, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> subst_fmla_sumC (A, i, x) OR\n                         subst_fmla_sumC (B, i, x) =\n                         neg (subst_fmla_sumC (Aa, ia, xa))\n 8. \\<And>A B i x j ia xa Aa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (B, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True; True;\n        atom j \\<sharp> (ia, xa);\n        (A OR B, i, x) = (exi j Aa, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> subst_fmla_sumC (A, i, x) OR\n                         subst_fmla_sumC (B, i, x) =\n                         exi j (subst_fmla_sumC (Aa, ia, xa))\n 9. \\<And>A i x Aa ia xa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True;\n        (neg A, i, x) = (neg Aa, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> neg (subst_fmla_sumC (A, i, x)) =\n                         neg (subst_fmla_sumC (Aa, ia, xa))\n 10. \\<And>A i x j ia xa Aa.\n        \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n         eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True;\n         atom j \\<sharp> (ia, xa);\n         (neg A, i, x) = (exi j Aa, ia, xa)\\<rbrakk>\n        \\<Longrightarrow> neg (subst_fmla_sumC (A, i, x)) =\n                          exi j (subst_fmla_sumC (Aa, ia, xa))\nA total of 11 subgoals...", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>t u i xa. x_ = (t EQ u, i, xa) \\<Longrightarrow> P_;\n     \\<And>A B i xa. x_ = (A OR B, i, xa) \\<Longrightarrow> P_;\n     \\<And>A i xa. x_ = (neg A, i, xa) \\<Longrightarrow> P_;\n     \\<And>j i xa A.\n        \\<lbrakk>atom j \\<sharp> (i, xa); x_ = (exi j A, i, xa)\\<rbrakk>\n        \\<Longrightarrow> P_\\<rbrakk>\n    \\<Longrightarrow> P_", "by (metis fmla.strong_exhaust fresh_star_insert old.prod.exhaust)"], ["proof (prove)\ngoal (10 subgoals):\n 1. \\<And>t u i x ta ua ia xa.\n       (t EQ u, i, x) = (ta EQ ua, ia, xa) \\<Longrightarrow>\n       subst i x t EQ subst i x u = subst ia xa ta EQ subst ia xa ua\n 2. \\<And>t u i x A B ia xa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, ia, xa);\n        eqvt_at subst_fmla_sumC (B, ia, xa); True; True;\n        (t EQ u, i, x) = (A OR B, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> subst i x t EQ subst i x u =\n                         subst_fmla_sumC (A, ia, xa) OR\n                         subst_fmla_sumC (B, ia, xa)\n 3. \\<And>t u i x A ia xa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, ia, xa); True;\n        (t EQ u, i, x) = (neg A, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> subst i x t EQ subst i x u =\n                         neg (subst_fmla_sumC (A, ia, xa))\n 4. \\<And>t u i x j ia xa A.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, ia, xa); True;\n        atom j \\<sharp> (ia, xa);\n        (t EQ u, i, x) = (exi j A, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> subst i x t EQ subst i x u =\n                         exi j (subst_fmla_sumC (A, ia, xa))\n 5. \\<And>A B i x Aa Ba ia xa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (B, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa);\n        eqvt_at subst_fmla_sumC (Ba, ia, xa); True; True; True; True;\n        (A OR B, i, x) = (Aa OR Ba, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> subst_fmla_sumC (A, i, x) OR\n                         subst_fmla_sumC (B, i, x) =\n                         subst_fmla_sumC (Aa, ia, xa) OR\n                         subst_fmla_sumC (Ba, ia, xa)\n 6. \\<And>A B i x Aa ia xa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (B, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True; True;\n        (A OR B, i, x) = (neg Aa, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> subst_fmla_sumC (A, i, x) OR\n                         subst_fmla_sumC (B, i, x) =\n                         neg (subst_fmla_sumC (Aa, ia, xa))\n 7. \\<And>A B i x j ia xa Aa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (B, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True; True;\n        atom j \\<sharp> (ia, xa);\n        (A OR B, i, x) = (exi j Aa, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> subst_fmla_sumC (A, i, x) OR\n                         subst_fmla_sumC (B, i, x) =\n                         exi j (subst_fmla_sumC (Aa, ia, xa))\n 8. \\<And>A i x Aa ia xa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True;\n        (neg A, i, x) = (neg Aa, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> neg (subst_fmla_sumC (A, i, x)) =\n                         neg (subst_fmla_sumC (Aa, ia, xa))\n 9. \\<And>A i x j ia xa Aa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True;\n        atom j \\<sharp> (ia, xa);\n        (neg A, i, x) = (exi j Aa, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> neg (subst_fmla_sumC (A, i, x)) =\n                         exi j (subst_fmla_sumC (Aa, ia, xa))\n 10. \\<And>j i x A ja ia xa Aa.\n        \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n         eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True;\n         atom j \\<sharp> (i, x); atom ja \\<sharp> (ia, xa);\n         (exi j A, i, x) = (exi ja Aa, ia, xa)\\<rbrakk>\n        \\<Longrightarrow> exi j (subst_fmla_sumC (A, i, x)) =\n                          exi ja (subst_fmla_sumC (Aa, ia, xa))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. (t_ EQ u_, i_, x_) = (ta_ EQ ua_, ia_, xa_) \\<Longrightarrow>\n    subst i_ x_ t_ EQ subst i_ x_ u_ =\n    subst ia_ xa_ ta_ EQ subst ia_ xa_ ua_", "by auto"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>t u i x A B ia xa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, ia, xa);\n        eqvt_at subst_fmla_sumC (B, ia, xa); True; True;\n        (t EQ u, i, x) = (A OR B, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> subst i x t EQ subst i x u =\n                         subst_fmla_sumC (A, ia, xa) OR\n                         subst_fmla_sumC (B, ia, xa)\n 2. \\<And>t u i x A ia xa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, ia, xa); True;\n        (t EQ u, i, x) = (neg A, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> subst i x t EQ subst i x u =\n                         neg (subst_fmla_sumC (A, ia, xa))\n 3. \\<And>t u i x j ia xa A.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, ia, xa); True;\n        atom j \\<sharp> (ia, xa);\n        (t EQ u, i, x) = (exi j A, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> subst i x t EQ subst i x u =\n                         exi j (subst_fmla_sumC (A, ia, xa))\n 4. \\<And>A B i x Aa Ba ia xa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (B, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa);\n        eqvt_at subst_fmla_sumC (Ba, ia, xa); True; True; True; True;\n        (A OR B, i, x) = (Aa OR Ba, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> subst_fmla_sumC (A, i, x) OR\n                         subst_fmla_sumC (B, i, x) =\n                         subst_fmla_sumC (Aa, ia, xa) OR\n                         subst_fmla_sumC (Ba, ia, xa)\n 5. \\<And>A B i x Aa ia xa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (B, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True; True;\n        (A OR B, i, x) = (neg Aa, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> subst_fmla_sumC (A, i, x) OR\n                         subst_fmla_sumC (B, i, x) =\n                         neg (subst_fmla_sumC (Aa, ia, xa))\n 6. \\<And>A B i x j ia xa Aa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (B, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True; True;\n        atom j \\<sharp> (ia, xa);\n        (A OR B, i, x) = (exi j Aa, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> subst_fmla_sumC (A, i, x) OR\n                         subst_fmla_sumC (B, i, x) =\n                         exi j (subst_fmla_sumC (Aa, ia, xa))\n 7. \\<And>A i x Aa ia xa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True;\n        (neg A, i, x) = (neg Aa, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> neg (subst_fmla_sumC (A, i, x)) =\n                         neg (subst_fmla_sumC (Aa, ia, xa))\n 8. \\<And>A i x j ia xa Aa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True;\n        atom j \\<sharp> (ia, xa);\n        (neg A, i, x) = (exi j Aa, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> neg (subst_fmla_sumC (A, i, x)) =\n                         exi j (subst_fmla_sumC (Aa, ia, xa))\n 9. \\<And>j i x A ja ia xa Aa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True;\n        atom j \\<sharp> (i, x); atom ja \\<sharp> (ia, xa);\n        (exi j A, i, x) = (exi ja Aa, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> exi j (subst_fmla_sumC (A, i, x)) =\n                         exi ja (subst_fmla_sumC (Aa, ia, xa))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>eqvt_at subst_fmla_sumC (A_, ia_, xa_);\n     eqvt_at subst_fmla_sumC (B_, ia_, xa_); True; True;\n     (t_ EQ u_, i_, x_) = (A_ OR B_, ia_, xa_)\\<rbrakk>\n    \\<Longrightarrow> subst i_ x_ t_ EQ subst i_ x_ u_ =\n                      subst_fmla_sumC (A_, ia_, xa_) OR\n                      subst_fmla_sumC (B_, ia_, xa_)", "by auto"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>t u i x A ia xa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, ia, xa); True;\n        (t EQ u, i, x) = (neg A, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> subst i x t EQ subst i x u =\n                         neg (subst_fmla_sumC (A, ia, xa))\n 2. \\<And>t u i x j ia xa A.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, ia, xa); True;\n        atom j \\<sharp> (ia, xa);\n        (t EQ u, i, x) = (exi j A, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> subst i x t EQ subst i x u =\n                         exi j (subst_fmla_sumC (A, ia, xa))\n 3. \\<And>A B i x Aa Ba ia xa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (B, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa);\n        eqvt_at subst_fmla_sumC (Ba, ia, xa); True; True; True; True;\n        (A OR B, i, x) = (Aa OR Ba, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> subst_fmla_sumC (A, i, x) OR\n                         subst_fmla_sumC (B, i, x) =\n                         subst_fmla_sumC (Aa, ia, xa) OR\n                         subst_fmla_sumC (Ba, ia, xa)\n 4. \\<And>A B i x Aa ia xa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (B, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True; True;\n        (A OR B, i, x) = (neg Aa, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> subst_fmla_sumC (A, i, x) OR\n                         subst_fmla_sumC (B, i, x) =\n                         neg (subst_fmla_sumC (Aa, ia, xa))\n 5. \\<And>A B i x j ia xa Aa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (B, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True; True;\n        atom j \\<sharp> (ia, xa);\n        (A OR B, i, x) = (exi j Aa, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> subst_fmla_sumC (A, i, x) OR\n                         subst_fmla_sumC (B, i, x) =\n                         exi j (subst_fmla_sumC (Aa, ia, xa))\n 6. \\<And>A i x Aa ia xa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True;\n        (neg A, i, x) = (neg Aa, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> neg (subst_fmla_sumC (A, i, x)) =\n                         neg (subst_fmla_sumC (Aa, ia, xa))\n 7. \\<And>A i x j ia xa Aa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True;\n        atom j \\<sharp> (ia, xa);\n        (neg A, i, x) = (exi j Aa, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> neg (subst_fmla_sumC (A, i, x)) =\n                         exi j (subst_fmla_sumC (Aa, ia, xa))\n 8. \\<And>j i x A ja ia xa Aa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True;\n        atom j \\<sharp> (i, x); atom ja \\<sharp> (ia, xa);\n        (exi j A, i, x) = (exi ja Aa, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> exi j (subst_fmla_sumC (A, i, x)) =\n                         exi ja (subst_fmla_sumC (Aa, ia, xa))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>eqvt_at subst_fmla_sumC (A_, ia_, xa_); True;\n     (t_ EQ u_, i_, x_) = (neg A_, ia_, xa_)\\<rbrakk>\n    \\<Longrightarrow> subst i_ x_ t_ EQ subst i_ x_ u_ =\n                      neg (subst_fmla_sumC (A_, ia_, xa_))", "by auto"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>t u i x j ia xa A.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, ia, xa); True;\n        atom j \\<sharp> (ia, xa);\n        (t EQ u, i, x) = (exi j A, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> subst i x t EQ subst i x u =\n                         exi j (subst_fmla_sumC (A, ia, xa))\n 2. \\<And>A B i x Aa Ba ia xa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (B, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa);\n        eqvt_at subst_fmla_sumC (Ba, ia, xa); True; True; True; True;\n        (A OR B, i, x) = (Aa OR Ba, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> subst_fmla_sumC (A, i, x) OR\n                         subst_fmla_sumC (B, i, x) =\n                         subst_fmla_sumC (Aa, ia, xa) OR\n                         subst_fmla_sumC (Ba, ia, xa)\n 3. \\<And>A B i x Aa ia xa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (B, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True; True;\n        (A OR B, i, x) = (neg Aa, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> subst_fmla_sumC (A, i, x) OR\n                         subst_fmla_sumC (B, i, x) =\n                         neg (subst_fmla_sumC (Aa, ia, xa))\n 4. \\<And>A B i x j ia xa Aa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (B, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True; True;\n        atom j \\<sharp> (ia, xa);\n        (A OR B, i, x) = (exi j Aa, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> subst_fmla_sumC (A, i, x) OR\n                         subst_fmla_sumC (B, i, x) =\n                         exi j (subst_fmla_sumC (Aa, ia, xa))\n 5. \\<And>A i x Aa ia xa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True;\n        (neg A, i, x) = (neg Aa, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> neg (subst_fmla_sumC (A, i, x)) =\n                         neg (subst_fmla_sumC (Aa, ia, xa))\n 6. \\<And>A i x j ia xa Aa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True;\n        atom j \\<sharp> (ia, xa);\n        (neg A, i, x) = (exi j Aa, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> neg (subst_fmla_sumC (A, i, x)) =\n                         exi j (subst_fmla_sumC (Aa, ia, xa))\n 7. \\<And>j i x A ja ia xa Aa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True;\n        atom j \\<sharp> (i, x); atom ja \\<sharp> (ia, xa);\n        (exi j A, i, x) = (exi ja Aa, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> exi j (subst_fmla_sumC (A, i, x)) =\n                         exi ja (subst_fmla_sumC (Aa, ia, xa))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>eqvt_at subst_fmla_sumC (A_, ia_, xa_); True;\n     atom j_ \\<sharp> (ia_, xa_);\n     (t_ EQ u_, i_, x_) = (exi j_ A_, ia_, xa_)\\<rbrakk>\n    \\<Longrightarrow> subst i_ x_ t_ EQ subst i_ x_ u_ =\n                      exi j_ (subst_fmla_sumC (A_, ia_, xa_))", "by auto"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>A B i x Aa Ba ia xa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (B, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa);\n        eqvt_at subst_fmla_sumC (Ba, ia, xa); True; True; True; True;\n        (A OR B, i, x) = (Aa OR Ba, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> subst_fmla_sumC (A, i, x) OR\n                         subst_fmla_sumC (B, i, x) =\n                         subst_fmla_sumC (Aa, ia, xa) OR\n                         subst_fmla_sumC (Ba, ia, xa)\n 2. \\<And>A B i x Aa ia xa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (B, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True; True;\n        (A OR B, i, x) = (neg Aa, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> subst_fmla_sumC (A, i, x) OR\n                         subst_fmla_sumC (B, i, x) =\n                         neg (subst_fmla_sumC (Aa, ia, xa))\n 3. \\<And>A B i x j ia xa Aa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (B, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True; True;\n        atom j \\<sharp> (ia, xa);\n        (A OR B, i, x) = (exi j Aa, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> subst_fmla_sumC (A, i, x) OR\n                         subst_fmla_sumC (B, i, x) =\n                         exi j (subst_fmla_sumC (Aa, ia, xa))\n 4. \\<And>A i x Aa ia xa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True;\n        (neg A, i, x) = (neg Aa, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> neg (subst_fmla_sumC (A, i, x)) =\n                         neg (subst_fmla_sumC (Aa, ia, xa))\n 5. \\<And>A i x j ia xa Aa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True;\n        atom j \\<sharp> (ia, xa);\n        (neg A, i, x) = (exi j Aa, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> neg (subst_fmla_sumC (A, i, x)) =\n                         exi j (subst_fmla_sumC (Aa, ia, xa))\n 6. \\<And>j i x A ja ia xa Aa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True;\n        atom j \\<sharp> (i, x); atom ja \\<sharp> (ia, xa);\n        (exi j A, i, x) = (exi ja Aa, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> exi j (subst_fmla_sumC (A, i, x)) =\n                         exi ja (subst_fmla_sumC (Aa, ia, xa))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>eqvt_at subst_fmla_sumC (A_, i_, x_);\n     eqvt_at subst_fmla_sumC (B_, i_, x_);\n     eqvt_at subst_fmla_sumC (Aa_, ia_, xa_);\n     eqvt_at subst_fmla_sumC (Ba_, ia_, xa_); True; True; True; True;\n     (A_ OR B_, i_, x_) = (Aa_ OR Ba_, ia_, xa_)\\<rbrakk>\n    \\<Longrightarrow> subst_fmla_sumC (A_, i_, x_) OR\n                      subst_fmla_sumC (B_, i_, x_) =\n                      subst_fmla_sumC (Aa_, ia_, xa_) OR\n                      subst_fmla_sumC (Ba_, ia_, xa_)", "by auto"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>A B i x Aa ia xa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (B, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True; True;\n        (A OR B, i, x) = (neg Aa, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> subst_fmla_sumC (A, i, x) OR\n                         subst_fmla_sumC (B, i, x) =\n                         neg (subst_fmla_sumC (Aa, ia, xa))\n 2. \\<And>A B i x j ia xa Aa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (B, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True; True;\n        atom j \\<sharp> (ia, xa);\n        (A OR B, i, x) = (exi j Aa, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> subst_fmla_sumC (A, i, x) OR\n                         subst_fmla_sumC (B, i, x) =\n                         exi j (subst_fmla_sumC (Aa, ia, xa))\n 3. \\<And>A i x Aa ia xa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True;\n        (neg A, i, x) = (neg Aa, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> neg (subst_fmla_sumC (A, i, x)) =\n                         neg (subst_fmla_sumC (Aa, ia, xa))\n 4. \\<And>A i x j ia xa Aa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True;\n        atom j \\<sharp> (ia, xa);\n        (neg A, i, x) = (exi j Aa, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> neg (subst_fmla_sumC (A, i, x)) =\n                         exi j (subst_fmla_sumC (Aa, ia, xa))\n 5. \\<And>j i x A ja ia xa Aa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True;\n        atom j \\<sharp> (i, x); atom ja \\<sharp> (ia, xa);\n        (exi j A, i, x) = (exi ja Aa, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> exi j (subst_fmla_sumC (A, i, x)) =\n                         exi ja (subst_fmla_sumC (Aa, ia, xa))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>eqvt_at subst_fmla_sumC (A_, i_, x_);\n     eqvt_at subst_fmla_sumC (B_, i_, x_);\n     eqvt_at subst_fmla_sumC (Aa_, ia_, xa_); True; True; True;\n     (A_ OR B_, i_, x_) = (neg Aa_, ia_, xa_)\\<rbrakk>\n    \\<Longrightarrow> subst_fmla_sumC (A_, i_, x_) OR\n                      subst_fmla_sumC (B_, i_, x_) =\n                      neg (subst_fmla_sumC (Aa_, ia_, xa_))", "by auto"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>A B i x j ia xa Aa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (B, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True; True;\n        atom j \\<sharp> (ia, xa);\n        (A OR B, i, x) = (exi j Aa, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> subst_fmla_sumC (A, i, x) OR\n                         subst_fmla_sumC (B, i, x) =\n                         exi j (subst_fmla_sumC (Aa, ia, xa))\n 2. \\<And>A i x Aa ia xa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True;\n        (neg A, i, x) = (neg Aa, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> neg (subst_fmla_sumC (A, i, x)) =\n                         neg (subst_fmla_sumC (Aa, ia, xa))\n 3. \\<And>A i x j ia xa Aa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True;\n        atom j \\<sharp> (ia, xa);\n        (neg A, i, x) = (exi j Aa, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> neg (subst_fmla_sumC (A, i, x)) =\n                         exi j (subst_fmla_sumC (Aa, ia, xa))\n 4. \\<And>j i x A ja ia xa Aa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True;\n        atom j \\<sharp> (i, x); atom ja \\<sharp> (ia, xa);\n        (exi j A, i, x) = (exi ja Aa, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> exi j (subst_fmla_sumC (A, i, x)) =\n                         exi ja (subst_fmla_sumC (Aa, ia, xa))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>eqvt_at subst_fmla_sumC (A_, i_, x_);\n     eqvt_at subst_fmla_sumC (B_, i_, x_);\n     eqvt_at subst_fmla_sumC (Aa_, ia_, xa_); True; True; True;\n     atom j_ \\<sharp> (ia_, xa_);\n     (A_ OR B_, i_, x_) = (exi j_ Aa_, ia_, xa_)\\<rbrakk>\n    \\<Longrightarrow> subst_fmla_sumC (A_, i_, x_) OR\n                      subst_fmla_sumC (B_, i_, x_) =\n                      exi j_ (subst_fmla_sumC (Aa_, ia_, xa_))", "by auto"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>A i x Aa ia xa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True;\n        (neg A, i, x) = (neg Aa, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> neg (subst_fmla_sumC (A, i, x)) =\n                         neg (subst_fmla_sumC (Aa, ia, xa))\n 2. \\<And>A i x j ia xa Aa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True;\n        atom j \\<sharp> (ia, xa);\n        (neg A, i, x) = (exi j Aa, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> neg (subst_fmla_sumC (A, i, x)) =\n                         exi j (subst_fmla_sumC (Aa, ia, xa))\n 3. \\<And>j i x A ja ia xa Aa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True;\n        atom j \\<sharp> (i, x); atom ja \\<sharp> (ia, xa);\n        (exi j A, i, x) = (exi ja Aa, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> exi j (subst_fmla_sumC (A, i, x)) =\n                         exi ja (subst_fmla_sumC (Aa, ia, xa))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>eqvt_at subst_fmla_sumC (A_, i_, x_);\n     eqvt_at subst_fmla_sumC (Aa_, ia_, xa_); True; True;\n     (neg A_, i_, x_) = (neg Aa_, ia_, xa_)\\<rbrakk>\n    \\<Longrightarrow> neg (subst_fmla_sumC (A_, i_, x_)) =\n                      neg (subst_fmla_sumC (Aa_, ia_, xa_))", "by auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>A i x j ia xa Aa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True;\n        atom j \\<sharp> (ia, xa);\n        (neg A, i, x) = (exi j Aa, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> neg (subst_fmla_sumC (A, i, x)) =\n                         exi j (subst_fmla_sumC (Aa, ia, xa))\n 2. \\<And>j i x A ja ia xa Aa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True;\n        atom j \\<sharp> (i, x); atom ja \\<sharp> (ia, xa);\n        (exi j A, i, x) = (exi ja Aa, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> exi j (subst_fmla_sumC (A, i, x)) =\n                         exi ja (subst_fmla_sumC (Aa, ia, xa))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>eqvt_at subst_fmla_sumC (A_, i_, x_);\n     eqvt_at subst_fmla_sumC (Aa_, ia_, xa_); True; True;\n     atom j_ \\<sharp> (ia_, xa_);\n     (neg A_, i_, x_) = (exi j_ Aa_, ia_, xa_)\\<rbrakk>\n    \\<Longrightarrow> neg (subst_fmla_sumC (A_, i_, x_)) =\n                      exi j_ (subst_fmla_sumC (Aa_, ia_, xa_))", "by auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>j i x A ja ia xa Aa.\n       \\<lbrakk>eqvt_at subst_fmla_sumC (A, i, x);\n        eqvt_at subst_fmla_sumC (Aa, ia, xa); True; True;\n        atom j \\<sharp> (i, x); atom ja \\<sharp> (ia, xa);\n        (exi j A, i, x) = (exi ja Aa, ia, xa)\\<rbrakk>\n       \\<Longrightarrow> exi j (subst_fmla_sumC (A, i, x)) =\n                         exi ja (subst_fmla_sumC (Aa, ia, xa))", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>eqvt_at subst_fmla_sumC (A_, i_, x_);\n     eqvt_at subst_fmla_sumC (Aa_, ia_, xa_); True; True;\n     atom j_ \\<sharp> (i_, x_); atom ja_ \\<sharp> (ia_, xa_);\n     (exi j_ A_, i_, x_) = (exi ja_ Aa_, ia_, xa_)\\<rbrakk>\n    \\<Longrightarrow> exi j_ (subst_fmla_sumC (A_, i_, x_)) =\n                      exi ja_ (subst_fmla_sumC (Aa_, ia_, xa_))", "by (simp add: eqvt_at_def fresh_star_def fresh_Pair fresh_at_base)\n     (metis flip_at_base_simps(3) flip_fresh_fresh)"], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "nominal_termination (eqvt)"], ["proof (prove)\ngoal (1 subgoal):\n 1. All subst_fmla_dom", "by lexicographic_order"], ["", "lemma size_subst_fmla [simp]: \"size (A(i::=x)) = size A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. size (A(i::=x)) = size A", "by (nominal_induct A avoiding: i x rule: fmla.strong_induct) auto"], ["", "lemma forget_subst_fmla [simp]: \"atom a \\<sharp> A \\<Longrightarrow> A(a::=x) = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom a \\<sharp> A \\<Longrightarrow> A(a::=x) = A", "by (nominal_induct A avoiding: a x rule: fmla.strong_induct) (auto simp: fresh_at_base)"], ["", "lemma subst_fmla_id [simp]: \"A(a::=Var a) = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A(a::=Var a) = A", "by (nominal_induct A avoiding: a rule: fmla.strong_induct) (auto simp: fresh_at_base)"], ["", "lemma fresh_subst_fmla_if [simp]:\n  \"j \\<sharp> (A(i::=x)) \\<longleftrightarrow> (atom i \\<sharp> A \\<and> j \\<sharp> A) \\<or> (j \\<sharp> x \\<and> (j \\<sharp> A \\<or> j = atom i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j \\<sharp> A(i::=x) =\n    (atom i \\<sharp> A \\<and> j \\<sharp> A \\<or>\n     j \\<sharp> x \\<and> (j \\<sharp> A \\<or> j = atom i))", "by (nominal_induct A avoiding: i x rule: fmla.strong_induct) (auto simp: fresh_at_base)"], ["", "lemma subst_fmla_commute [simp]:\n  \"atom j \\<sharp> A \\<Longrightarrow> (A(i::=t))(j::=u) = A(i ::= subst j u t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom j \\<sharp> A \\<Longrightarrow>\n    (A(i::=t))(j::=u) = A(i::=subst j u t)", "by (nominal_induct A avoiding: i j t u rule: fmla.strong_induct) (auto simp: fresh_at_base)"], ["", "lemma repeat_subst_fmla [simp]: \"(A(i::=t))(i::=u) = A(i ::= subst i u t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A(i::=t))(i::=u) = A(i::=subst i u t)", "by (nominal_induct A avoiding: i t u rule: fmla.strong_induct) auto"], ["", "lemma subst_fmla_exi_with_renaming:\n  \"atom i' \\<sharp> (A, i, j, t) \\<Longrightarrow> (exi i A)(j ::= t) = exi i' (((i \\<leftrightarrow> i') \\<bullet> A)(j ::= t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom i' \\<sharp> (A, i, j, t) \\<Longrightarrow>\n    (exi i A)(j::=t) =\n    exi i' (((i \\<leftrightarrow> i') \\<bullet> A)(j::=t))", "by (rule subst [of \"exi i' ((i \\<leftrightarrow> i') \\<bullet> A)\" \"exi i A\"])\n     (auto simp: Abs1_eq_iff flip_def swap_commute)"], ["", "text \\<open>the simplifier cannot apply the rule above, because\nit introduces a new variable at the right hand side.\\<close>"], ["", "lemma flip_subst_trm: \"atom y \\<sharp> t \\<Longrightarrow> (x \\<leftrightarrow> y) \\<bullet> t = subst x (Var y) t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom y \\<sharp> t \\<Longrightarrow>\n    (x \\<leftrightarrow> y) \\<bullet> t = subst x (Var y) t", "apply(nominal_induct t avoiding: x y rule: trm.strong_induct)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x y.\n       atom y \\<sharp> zer \\<Longrightarrow>\n       (x \\<leftrightarrow> y) \\<bullet> zer = subst x (Var y) zer\n 2. \\<And>x xa y.\n       atom y \\<sharp> Var x \\<Longrightarrow>\n       (xa \\<leftrightarrow> y) \\<bullet> Var x = subst xa (Var y) (Var x)\n 3. \\<And>x xa y.\n       \\<lbrakk>\\<And>b ba.\n                   atom ba \\<sharp> x \\<Longrightarrow>\n                   (b \\<leftrightarrow> ba) \\<bullet> x =\n                   subst b (Var ba) x;\n        atom y \\<sharp> suc x\\<rbrakk>\n       \\<Longrightarrow> (xa \\<leftrightarrow> y) \\<bullet> suc x =\n                         subst xa (Var y) (suc x)\n 4. \\<And>x1 x2a x y.\n       \\<lbrakk>\\<And>b ba.\n                   atom ba \\<sharp> x1 \\<Longrightarrow>\n                   (b \\<leftrightarrow> ba) \\<bullet> x1 =\n                   subst b (Var ba) x1;\n        \\<And>b ba.\n           atom ba \\<sharp> x2a \\<Longrightarrow>\n           (b \\<leftrightarrow> ba) \\<bullet> x2a = subst b (Var ba) x2a;\n        atom y \\<sharp> pls x1 x2a\\<rbrakk>\n       \\<Longrightarrow> (x \\<leftrightarrow> y) \\<bullet> pls x1 x2a =\n                         subst x (Var y) (pls x1 x2a)\n 5. \\<And>x1 x2a x y.\n       \\<lbrakk>\\<And>b ba.\n                   atom ba \\<sharp> x1 \\<Longrightarrow>\n                   (b \\<leftrightarrow> ba) \\<bullet> x1 =\n                   subst b (Var ba) x1;\n        \\<And>b ba.\n           atom ba \\<sharp> x2a \\<Longrightarrow>\n           (b \\<leftrightarrow> ba) \\<bullet> x2a = subst b (Var ba) x2a;\n        atom y \\<sharp> tms x1 x2a\\<rbrakk>\n       \\<Longrightarrow> (x \\<leftrightarrow> y) \\<bullet> tms x1 x2a =\n                         subst x (Var y) (tms x1 x2a)", "by auto"], ["", "lemma flip_subst_fmla: \"atom y \\<sharp> \\<phi> \\<Longrightarrow> (x \\<leftrightarrow> y) \\<bullet> \\<phi> = \\<phi>(x::=Var y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom y \\<sharp> \\<phi> \\<Longrightarrow>\n    (x \\<leftrightarrow> y) \\<bullet> \\<phi> = \\<phi>(x::=Var y)", "apply(nominal_induct \\<phi> avoiding: x y rule: fmla.strong_induct)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x1 x2 x y.\n       atom y \\<sharp> x1 EQ x2 \\<Longrightarrow>\n       (x \\<leftrightarrow> y) \\<bullet> x1 EQ x2 = (x1 EQ x2)(x::=Var y)\n 2. \\<And>x1 x2 x y.\n       \\<lbrakk>\\<And>b ba.\n                   atom ba \\<sharp> x1 \\<Longrightarrow>\n                   (b \\<leftrightarrow> ba) \\<bullet> x1 = x1(b::=Var ba);\n        \\<And>b ba.\n           atom ba \\<sharp> x2 \\<Longrightarrow>\n           (b \\<leftrightarrow> ba) \\<bullet> x2 = x2(b::=Var ba);\n        atom y \\<sharp> x1 OR x2\\<rbrakk>\n       \\<Longrightarrow> (x \\<leftrightarrow> y) \\<bullet> x1 OR x2 =\n                         (x1 OR x2)(x::=Var y)\n 3. \\<And>x xa y.\n       \\<lbrakk>\\<And>b ba.\n                   atom ba \\<sharp> x \\<Longrightarrow>\n                   (b \\<leftrightarrow> ba) \\<bullet> x = x(b::=Var ba);\n        atom y \\<sharp> neg x\\<rbrakk>\n       \\<Longrightarrow> (xa \\<leftrightarrow> y) \\<bullet> neg x =\n                         (neg x)(xa::=Var y)\n 4. \\<And>x1 x2 x y.\n       \\<lbrakk>atom x1 \\<sharp> x; atom x1 \\<sharp> y;\n        \\<And>b ba.\n           atom ba \\<sharp> x2 \\<Longrightarrow>\n           (b \\<leftrightarrow> ba) \\<bullet> x2 = x2(b::=Var ba);\n        atom y \\<sharp> exi x1 x2\\<rbrakk>\n       \\<Longrightarrow> (x \\<leftrightarrow> y) \\<bullet> exi x1 x2 =\n                         (exi x1 x2)(x::=Var y)", "apply (auto simp: flip_subst_trm)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1 x2 x c.\n       \\<lbrakk>atom x1 \\<sharp> x; atom x1 \\<sharp> x1;\n        \\<And>b ba.\n           atom ba \\<sharp> x2 \\<Longrightarrow>\n           (b \\<leftrightarrow> ba) \\<bullet> x2 = x2(b::=Var ba);\n        atom c \\<sharp> (x1, x, x2);\n        atom\n         c \\<sharp> (x1, x1, (x \\<leftrightarrow> x1) \\<bullet> x2,\n                     x2(x::=Var x1))\\<rbrakk>\n       \\<Longrightarrow> (x1 \\<leftrightarrow> c) \\<bullet> (x \\<leftrightarrow> x1) \\<bullet> x2 =\n                         (x2(x1::=Var c))(x::=Var x1)", "using fresh_at_base(2)"], ["proof (prove)\nusing this:\n  ?a \\<sharp> ?b = (?a \\<noteq> atom ?b)\n\ngoal (1 subgoal):\n 1. \\<And>x1 x2 x c.\n       \\<lbrakk>atom x1 \\<sharp> x; atom x1 \\<sharp> x1;\n        \\<And>b ba.\n           atom ba \\<sharp> x2 \\<Longrightarrow>\n           (b \\<leftrightarrow> ba) \\<bullet> x2 = x2(b::=Var ba);\n        atom c \\<sharp> (x1, x, x2);\n        atom\n         c \\<sharp> (x1, x1, (x \\<leftrightarrow> x1) \\<bullet> x2,\n                     x2(x::=Var x1))\\<rbrakk>\n       \\<Longrightarrow> (x1 \\<leftrightarrow> c) \\<bullet> (x \\<leftrightarrow> x1) \\<bullet> x2 =\n                         (x2(x1::=Var c))(x::=Var x1)", "by blast"], ["", "lemma exi_ren_subst_fresh: \"atom y \\<sharp> \\<phi> \\<Longrightarrow> exi x \\<phi> = exi y (\\<phi>(x::=Var y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom y \\<sharp> \\<phi> \\<Longrightarrow>\n    exi x \\<phi> = exi y (\\<phi>(x::=Var y))", "using flip_subst_fmla"], ["proof (prove)\nusing this:\n  atom ?y \\<sharp> ?\\<phi> \\<Longrightarrow>\n  (?x \\<leftrightarrow> ?y) \\<bullet> ?\\<phi> = ?\\<phi>(?x::=Var ?y)\n\ngoal (1 subgoal):\n 1. atom y \\<sharp> \\<phi> \\<Longrightarrow>\n    exi x \\<phi> = exi y (\\<phi>(x::=Var y))", "by auto"], ["", "subsection\\<open>Semantics\\<close>"], ["", "definition e0 :: \"(name, nat) finfun\"    \\<comment> \\<open>the null environment\\<close>\n  where \"e0 \\<equiv> finfun_const 0\""], ["", "nominal_function eval_trm :: \"(name, nat) finfun \\<Rightarrow> trm \\<Rightarrow> nat\"\n  where\n   \"eval_trm e zer = 0\"\n | \"eval_trm e (Var k) = finfun_apply e k\"\n | \"eval_trm e (suc t) = Suc (eval_trm e t)\"\n | \"eval_trm e (pls t u) = eval_trm e t + eval_trm e u\"\n | \"eval_trm e (tms t u) = eval_trm e t * eval_trm e u\""], ["proof (prove)\ngoal (18 subgoals):\n 1. eqvt eval_trm_graph_aux\n 2. \\<And>x y. eval_trm_graph x y \\<Longrightarrow> True\n 3. \\<And>P x.\n       \\<lbrakk>\\<And>e. x = (e, zer) \\<Longrightarrow> P;\n        \\<And>e k. x = (e, Var k) \\<Longrightarrow> P;\n        \\<And>e t. x = (e, suc t) \\<Longrightarrow> P;\n        \\<And>e t u. x = (e, pls t u) \\<Longrightarrow> P;\n        \\<And>e t u. x = (e, tms t u) \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>e ea. (e, zer) = (ea, zer) \\<Longrightarrow> 0 = 0\n 5. \\<And>e ea k.\n       (e, zer) = (ea, Var k) \\<Longrightarrow> 0 = finfun_apply ea k\n 6. \\<And>e ea t.\n       \\<lbrakk>eqvt_at eval_trm_sumC (ea, t); True;\n        (e, zer) = (ea, suc t)\\<rbrakk>\n       \\<Longrightarrow> 0 = Suc (eval_trm_sumC (ea, t))\n 7. \\<And>e ea t u.\n       \\<lbrakk>eqvt_at eval_trm_sumC (ea, t);\n        eqvt_at eval_trm_sumC (ea, u); True; True;\n        (e, zer) = (ea, pls t u)\\<rbrakk>\n       \\<Longrightarrow> 0 = eval_trm_sumC (ea, t) + eval_trm_sumC (ea, u)\n 8. \\<And>e ea t u.\n       \\<lbrakk>eqvt_at eval_trm_sumC (ea, t);\n        eqvt_at eval_trm_sumC (ea, u); True; True;\n        (e, zer) = (ea, tms t u)\\<rbrakk>\n       \\<Longrightarrow> 0 = eval_trm_sumC (ea, t) * eval_trm_sumC (ea, u)\n 9. \\<And>e k ea ka.\n       (e, Var k) = (ea, Var ka) \\<Longrightarrow>\n       finfun_apply e k = finfun_apply ea ka\n 10. \\<And>e k ea t.\n        \\<lbrakk>eqvt_at eval_trm_sumC (ea, t); True;\n         (e, Var k) = (ea, suc t)\\<rbrakk>\n        \\<Longrightarrow> finfun_apply e k = Suc (eval_trm_sumC (ea, t))\nA total of 18 subgoals...", "by (auto simp: eqvt_def eval_trm_graph_aux_def) (metis trm.strong_exhaust)"], ["", "nominal_termination (eqvt)"], ["proof (prove)\ngoal (1 subgoal):\n 1. All eval_trm_dom", "by lexicographic_order"], ["", "nominal_function eval_fmla :: \"(name, nat) finfun \\<Rightarrow> fmla \\<Rightarrow> bool\"\n  where\n   \"eval_fmla e (t EQ u) \\<longleftrightarrow> eval_trm e t = eval_trm e u\"\n | \"eval_fmla e (A OR B) \\<longleftrightarrow> eval_fmla e A \\<or> eval_fmla e B\"\n | \"eval_fmla e (neg A) \\<longleftrightarrow> (~ eval_fmla e A)\"\n | \"atom k \\<sharp> e \\<Longrightarrow> eval_fmla e (exi k A) \\<longleftrightarrow> (\\<exists>x. eval_fmla (finfun_update e k x) A)\""], ["proof (prove)\ngoal (13 subgoals):\n 1. eqvt eval_fmla_graph_aux\n 2. \\<And>x y. eval_fmla_graph x y \\<Longrightarrow> True\n 3. \\<And>P x.\n       \\<lbrakk>\\<And>e t u. x = (e, t EQ u) \\<Longrightarrow> P;\n        \\<And>e A B. x = (e, A OR B) \\<Longrightarrow> P;\n        \\<And>e A. x = (e, neg A) \\<Longrightarrow> P;\n        \\<And>k e A.\n           \\<lbrakk>atom k \\<sharp> e; x = (e, exi k A)\\<rbrakk>\n           \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>e t u ea ta ua.\n       (e, t EQ u) = (ea, ta EQ ua) \\<Longrightarrow>\n       (eval_trm e t = eval_trm e u) = (eval_trm ea ta = eval_trm ea ua)\n 5. \\<And>e t u ea A B.\n       \\<lbrakk>eqvt_at eval_fmla_sumC (ea, A);\n        eqvt_at eval_fmla_sumC (ea, B); True; True;\n        (e, t EQ u) = (ea, A OR B)\\<rbrakk>\n       \\<Longrightarrow> (eval_trm e t = eval_trm e u) =\n                         (eval_fmla_sumC (ea, A) \\<or>\n                          eval_fmla_sumC (ea, B))\n 6. \\<And>e t u ea A.\n       \\<lbrakk>eqvt_at eval_fmla_sumC (ea, A); True;\n        (e, t EQ u) = (ea, neg A)\\<rbrakk>\n       \\<Longrightarrow> (eval_trm e t = eval_trm e u) =\n                         (\\<not> eval_fmla_sumC (ea, A))\n 7. \\<And>e t u k ea A.\n       \\<lbrakk>\\<And>x. eqvt_at eval_fmla_sumC (finfun_update ea k x, A);\n        \\<And>x. True; atom k \\<sharp> ea;\n        (e, t EQ u) = (ea, exi k A)\\<rbrakk>\n       \\<Longrightarrow> (eval_trm e t = eval_trm e u) =\n                         (\\<exists>x.\n                             eval_fmla_sumC (finfun_update ea k x, A))\n 8. \\<And>e A B ea Aa Ba.\n       \\<lbrakk>eqvt_at eval_fmla_sumC (e, A);\n        eqvt_at eval_fmla_sumC (e, B); eqvt_at eval_fmla_sumC (ea, Aa);\n        eqvt_at eval_fmla_sumC (ea, Ba); True; True; True; True;\n        (e, A OR B) = (ea, Aa OR Ba)\\<rbrakk>\n       \\<Longrightarrow> (eval_fmla_sumC (e, A) \\<or>\n                          eval_fmla_sumC (e, B)) =\n                         (eval_fmla_sumC (ea, Aa) \\<or>\n                          eval_fmla_sumC (ea, Ba))\n 9. \\<And>e A B ea Aa.\n       \\<lbrakk>eqvt_at eval_fmla_sumC (e, A);\n        eqvt_at eval_fmla_sumC (e, B); eqvt_at eval_fmla_sumC (ea, Aa);\n        True; True; True; (e, A OR B) = (ea, neg Aa)\\<rbrakk>\n       \\<Longrightarrow> (eval_fmla_sumC (e, A) \\<or>\n                          eval_fmla_sumC (e, B)) =\n                         (\\<not> eval_fmla_sumC (ea, Aa))\n 10. \\<And>e A B k ea Aa.\n        \\<lbrakk>eqvt_at eval_fmla_sumC (e, A);\n         eqvt_at eval_fmla_sumC (e, B);\n         \\<And>x. eqvt_at eval_fmla_sumC (finfun_update ea k x, Aa); True;\n         True; \\<And>x. True; atom k \\<sharp> ea;\n         (e, A OR B) = (ea, exi k Aa)\\<rbrakk>\n        \\<Longrightarrow> (eval_fmla_sumC (e, A) \\<or>\n                           eval_fmla_sumC (e, B)) =\n                          (\\<exists>x.\n                              eval_fmla_sumC (finfun_update ea k x, Aa))\nA total of 13 subgoals...", "supply [[simproc del: defined_all]]"], ["proof (prove)\ngoal (13 subgoals):\n 1. eqvt eval_fmla_graph_aux\n 2. \\<And>x y. eval_fmla_graph x y \\<Longrightarrow> True\n 3. \\<And>P x.\n       \\<lbrakk>\\<And>e t u. x = (e, t EQ u) \\<Longrightarrow> P;\n        \\<And>e A B. x = (e, A OR B) \\<Longrightarrow> P;\n        \\<And>e A. x = (e, neg A) \\<Longrightarrow> P;\n        \\<And>k e A.\n           \\<lbrakk>atom k \\<sharp> e; x = (e, exi k A)\\<rbrakk>\n           \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>e t u ea ta ua.\n       (e, t EQ u) = (ea, ta EQ ua) \\<Longrightarrow>\n       (eval_trm e t = eval_trm e u) = (eval_trm ea ta = eval_trm ea ua)\n 5. \\<And>e t u ea A B.\n       \\<lbrakk>eqvt_at eval_fmla_sumC (ea, A);\n        eqvt_at eval_fmla_sumC (ea, B); True; True;\n        (e, t EQ u) = (ea, A OR B)\\<rbrakk>\n       \\<Longrightarrow> (eval_trm e t = eval_trm e u) =\n                         (eval_fmla_sumC (ea, A) \\<or>\n                          eval_fmla_sumC (ea, B))\n 6. \\<And>e t u ea A.\n       \\<lbrakk>eqvt_at eval_fmla_sumC (ea, A); True;\n        (e, t EQ u) = (ea, neg A)\\<rbrakk>\n       \\<Longrightarrow> (eval_trm e t = eval_trm e u) =\n                         (\\<not> eval_fmla_sumC (ea, A))\n 7. \\<And>e t u k ea A.\n       \\<lbrakk>\\<And>x. eqvt_at eval_fmla_sumC (finfun_update ea k x, A);\n        \\<And>x. True; atom k \\<sharp> ea;\n        (e, t EQ u) = (ea, exi k A)\\<rbrakk>\n       \\<Longrightarrow> (eval_trm e t = eval_trm e u) =\n                         (\\<exists>x.\n                             eval_fmla_sumC (finfun_update ea k x, A))\n 8. \\<And>e A B ea Aa Ba.\n       \\<lbrakk>eqvt_at eval_fmla_sumC (e, A);\n        eqvt_at eval_fmla_sumC (e, B); eqvt_at eval_fmla_sumC (ea, Aa);\n        eqvt_at eval_fmla_sumC (ea, Ba); True; True; True; True;\n        (e, A OR B) = (ea, Aa OR Ba)\\<rbrakk>\n       \\<Longrightarrow> (eval_fmla_sumC (e, A) \\<or>\n                          eval_fmla_sumC (e, B)) =\n                         (eval_fmla_sumC (ea, Aa) \\<or>\n                          eval_fmla_sumC (ea, Ba))\n 9. \\<And>e A B ea Aa.\n       \\<lbrakk>eqvt_at eval_fmla_sumC (e, A);\n        eqvt_at eval_fmla_sumC (e, B); eqvt_at eval_fmla_sumC (ea, Aa);\n        True; True; True; (e, A OR B) = (ea, neg Aa)\\<rbrakk>\n       \\<Longrightarrow> (eval_fmla_sumC (e, A) \\<or>\n                          eval_fmla_sumC (e, B)) =\n                         (\\<not> eval_fmla_sumC (ea, Aa))\n 10. \\<And>e A B k ea Aa.\n        \\<lbrakk>eqvt_at eval_fmla_sumC (e, A);\n         eqvt_at eval_fmla_sumC (e, B);\n         \\<And>x. eqvt_at eval_fmla_sumC (finfun_update ea k x, Aa); True;\n         True; \\<And>x. True; atom k \\<sharp> ea;\n         (e, A OR B) = (ea, exi k Aa)\\<rbrakk>\n        \\<Longrightarrow> (eval_fmla_sumC (e, A) \\<or>\n                           eval_fmla_sumC (e, B)) =\n                          (\\<exists>x.\n                              eval_fmla_sumC (finfun_update ea k x, Aa))\nA total of 13 subgoals...", "apply(simp add: eqvt_def eval_fmla_graph_aux_def)"], ["proof (prove)\ngoal (12 subgoals):\n 1. \\<And>x y. eval_fmla_graph x y \\<Longrightarrow> True\n 2. \\<And>P x.\n       \\<lbrakk>\\<And>e t u. x = (e, t EQ u) \\<Longrightarrow> P;\n        \\<And>e A B. x = (e, A OR B) \\<Longrightarrow> P;\n        \\<And>e A. x = (e, neg A) \\<Longrightarrow> P;\n        \\<And>k e A.\n           \\<lbrakk>atom k \\<sharp> e; x = (e, exi k A)\\<rbrakk>\n           \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>e t u ea ta ua.\n       (e, t EQ u) = (ea, ta EQ ua) \\<Longrightarrow>\n       (eval_trm e t = eval_trm e u) = (eval_trm ea ta = eval_trm ea ua)\n 4. \\<And>e t u ea A B.\n       \\<lbrakk>eqvt_at eval_fmla_sumC (ea, A);\n        eqvt_at eval_fmla_sumC (ea, B); True; True;\n        (e, t EQ u) = (ea, A OR B)\\<rbrakk>\n       \\<Longrightarrow> (eval_trm e t = eval_trm e u) =\n                         (eval_fmla_sumC (ea, A) \\<or>\n                          eval_fmla_sumC (ea, B))\n 5. \\<And>e t u ea A.\n       \\<lbrakk>eqvt_at eval_fmla_sumC (ea, A); True;\n        (e, t EQ u) = (ea, neg A)\\<rbrakk>\n       \\<Longrightarrow> (eval_trm e t = eval_trm e u) =\n                         (\\<not> eval_fmla_sumC (ea, A))\n 6. \\<And>e t u k ea A.\n       \\<lbrakk>\\<And>x. eqvt_at eval_fmla_sumC (finfun_update ea k x, A);\n        \\<And>x. True; atom k \\<sharp> ea;\n        (e, t EQ u) = (ea, exi k A)\\<rbrakk>\n       \\<Longrightarrow> (eval_trm e t = eval_trm e u) =\n                         (\\<exists>x.\n                             eval_fmla_sumC (finfun_update ea k x, A))\n 7. \\<And>e A B ea Aa Ba.\n       \\<lbrakk>eqvt_at eval_fmla_sumC (e, A);\n        eqvt_at eval_fmla_sumC (e, B); eqvt_at eval_fmla_sumC (ea, Aa);\n        eqvt_at eval_fmla_sumC (ea, Ba); True; True; True; True;\n        (e, A OR B) = (ea, Aa OR Ba)\\<rbrakk>\n       \\<Longrightarrow> (eval_fmla_sumC (e, A) \\<or>\n                          eval_fmla_sumC (e, B)) =\n                         (eval_fmla_sumC (ea, Aa) \\<or>\n                          eval_fmla_sumC (ea, Ba))\n 8. \\<And>e A B ea Aa.\n       \\<lbrakk>eqvt_at eval_fmla_sumC (e, A);\n        eqvt_at eval_fmla_sumC (e, B); eqvt_at eval_fmla_sumC (ea, Aa);\n        True; True; True; (e, A OR B) = (ea, neg Aa)\\<rbrakk>\n       \\<Longrightarrow> (eval_fmla_sumC (e, A) \\<or>\n                          eval_fmla_sumC (e, B)) =\n                         (\\<not> eval_fmla_sumC (ea, Aa))\n 9. \\<And>e A B k ea Aa.\n       \\<lbrakk>eqvt_at eval_fmla_sumC (e, A);\n        eqvt_at eval_fmla_sumC (e, B);\n        \\<And>x. eqvt_at eval_fmla_sumC (finfun_update ea k x, Aa); True;\n        True; \\<And>x. True; atom k \\<sharp> ea;\n        (e, A OR B) = (ea, exi k Aa)\\<rbrakk>\n       \\<Longrightarrow> (eval_fmla_sumC (e, A) \\<or>\n                          eval_fmla_sumC (e, B)) =\n                         (\\<exists>x.\n                             eval_fmla_sumC (finfun_update ea k x, Aa))\n 10. \\<And>e A ea Aa.\n        \\<lbrakk>eqvt_at eval_fmla_sumC (e, A);\n         eqvt_at eval_fmla_sumC (ea, Aa); True; True;\n         (e, neg A) = (ea, neg Aa)\\<rbrakk>\n        \\<Longrightarrow> (\\<not> eval_fmla_sumC (e, A)) =\n                          (\\<not> eval_fmla_sumC (ea, Aa))\nA total of 12 subgoals...", "apply(auto del: iffI) [11]"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>P a b.\n       \\<lbrakk>\\<And>e t u. a = e \\<and> b = t EQ u \\<Longrightarrow> P;\n        \\<And>e A B. a = e \\<and> b = A OR B \\<Longrightarrow> P;\n        \\<And>e A. a = e \\<and> b = neg A \\<Longrightarrow> P;\n        \\<And>k e A.\n           \\<lbrakk>atom k \\<sharp> e; a = e \\<and> b = exi k A\\<rbrakk>\n           \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>k e A ka ea Aa.\n       \\<lbrakk>\\<And>x. eqvt_at eval_fmla_sumC (finfun_update e k x, A);\n        \\<And>x. eqvt_at eval_fmla_sumC (finfun_update ea ka x, Aa);\n        \\<And>x. True; \\<And>x. True; atom k \\<sharp> e;\n        atom ka \\<sharp> ea; (e, exi k A) = (ea, exi ka Aa)\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>x.\n                             eval_fmla_sumC (finfun_update e k x, A)) =\n                         (\\<exists>x.\n                             eval_fmla_sumC (finfun_update ea ka x, Aa))", "apply(rule_tac y=b and c=\"(a)\" in fmla.strong_exhaust)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>P a b x11 x12.\n       \\<lbrakk>\\<And>e t u. a = e \\<and> b = t EQ u \\<Longrightarrow> P;\n        \\<And>e A B. a = e \\<and> b = A OR B \\<Longrightarrow> P;\n        \\<And>e A. a = e \\<and> b = neg A \\<Longrightarrow> P;\n        \\<And>k e A.\n           \\<lbrakk>atom k \\<sharp> e; a = e \\<and> b = exi k A\\<rbrakk>\n           \\<Longrightarrow> P;\n        b = x11 EQ x12\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>P a b x21 x22.\n       \\<lbrakk>\\<And>e t u. a = e \\<and> b = t EQ u \\<Longrightarrow> P;\n        \\<And>e A B. a = e \\<and> b = A OR B \\<Longrightarrow> P;\n        \\<And>e A. a = e \\<and> b = neg A \\<Longrightarrow> P;\n        \\<And>k e A.\n           \\<lbrakk>atom k \\<sharp> e; a = e \\<and> b = exi k A\\<rbrakk>\n           \\<Longrightarrow> P;\n        b = x21 OR x22\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>P a b x3.\n       \\<lbrakk>\\<And>e t u. a = e \\<and> b = t EQ u \\<Longrightarrow> P;\n        \\<And>e A B. a = e \\<and> b = A OR B \\<Longrightarrow> P;\n        \\<And>e A. a = e \\<and> b = neg A \\<Longrightarrow> P;\n        \\<And>k e A.\n           \\<lbrakk>atom k \\<sharp> e; a = e \\<and> b = exi k A\\<rbrakk>\n           \\<Longrightarrow> P;\n        b = neg x3\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>P a b x41 x42.\n       \\<lbrakk>\\<And>e t u. a = e \\<and> b = t EQ u \\<Longrightarrow> P;\n        \\<And>e A B. a = e \\<and> b = A OR B \\<Longrightarrow> P;\n        \\<And>e A. a = e \\<and> b = neg A \\<Longrightarrow> P;\n        \\<And>k e A.\n           \\<lbrakk>atom k \\<sharp> e; a = e \\<and> b = exi k A\\<rbrakk>\n           \\<Longrightarrow> P;\n        {atom x41} \\<sharp>* a; b = exi x41 x42\\<rbrakk>\n       \\<Longrightarrow> P\n 5. \\<And>k e A ka ea Aa.\n       \\<lbrakk>\\<And>x. eqvt_at eval_fmla_sumC (finfun_update e k x, A);\n        \\<And>x. eqvt_at eval_fmla_sumC (finfun_update ea ka x, Aa);\n        \\<And>x. True; \\<And>x. True; atom k \\<sharp> e;\n        atom ka \\<sharp> ea; (e, exi k A) = (ea, exi ka Aa)\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>x.\n                             eval_fmla_sumC (finfun_update e k x, A)) =\n                         (\\<exists>x.\n                             eval_fmla_sumC (finfun_update ea ka x, Aa))", "apply(auto simp: fresh_star_def)[4]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k e A ka ea Aa.\n       \\<lbrakk>\\<And>x. eqvt_at eval_fmla_sumC (finfun_update e k x, A);\n        \\<And>x. eqvt_at eval_fmla_sumC (finfun_update ea ka x, Aa);\n        \\<And>x. True; \\<And>x. True; atom k \\<sharp> e;\n        atom ka \\<sharp> ea; (e, exi k A) = (ea, exi ka Aa)\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>x.\n                             eval_fmla_sumC (finfun_update e k x, A)) =\n                         (\\<exists>x.\n                             eval_fmla_sumC (finfun_update ea ka x, Aa))", "using [[simproc del: alpha_lst]]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k e A ka ea Aa.\n       \\<lbrakk>\\<And>x. eqvt_at eval_fmla_sumC (finfun_update e k x, A);\n        \\<And>x. eqvt_at eval_fmla_sumC (finfun_update ea ka x, Aa);\n        \\<And>x. True; \\<And>x. True; atom k \\<sharp> e;\n        atom ka \\<sharp> ea; (e, exi k A) = (ea, exi ka Aa)\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>x.\n                             eval_fmla_sumC (finfun_update e k x, A)) =\n                         (\\<exists>x.\n                             eval_fmla_sumC (finfun_update ea ka x, Aa))", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k A ka ea Aa.\n       \\<lbrakk>\\<And>x. eqvt_at eval_fmla_sumC (finfun_update ea k x, A);\n        \\<And>x. eqvt_at eval_fmla_sumC (finfun_update ea ka x, Aa);\n        atom k \\<sharp> ea; atom ka \\<sharp> ea;\n        [[atom k]]lst. A = [[atom ka]]lst. Aa\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>x.\n                             eval_fmla_sumC (finfun_update ea k x, A)) =\n                         (\\<exists>x.\n                             eval_fmla_sumC (finfun_update ea ka x, Aa))", "apply(erule_tac c=\"(ea)\" in Abs_lst1_fcb2')"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>k A ka ea Aa.\n       \\<lbrakk>\\<And>x. eqvt_at eval_fmla_sumC (finfun_update ea k x, A);\n        \\<And>x. eqvt_at eval_fmla_sumC (finfun_update ea ka x, Aa);\n        atom k \\<sharp> ea; atom ka \\<sharp> ea\\<rbrakk>\n       \\<Longrightarrow> atom\n                          k \\<sharp> (\\<exists>x.\n   eval_fmla_sumC (finfun_update ea k x, A))\n 2. \\<And>k A ka ea Aa.\n       \\<lbrakk>\\<And>x. eqvt_at eval_fmla_sumC (finfun_update ea k x, A);\n        \\<And>x. eqvt_at eval_fmla_sumC (finfun_update ea ka x, Aa);\n        atom k \\<sharp> ea; atom ka \\<sharp> ea\\<rbrakk>\n       \\<Longrightarrow> {atom k, atom ka} \\<sharp>* ea\n 3. \\<And>k A ka ea Aa p.\n       \\<lbrakk>\\<And>x. eqvt_at eval_fmla_sumC (finfun_update ea k x, A);\n        \\<And>x. eqvt_at eval_fmla_sumC (finfun_update ea ka x, Aa);\n        atom k \\<sharp> ea; atom ka \\<sharp> ea;\n        supp p \\<sharp>* ea\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> (\\<exists>x.\n   eval_fmla_sumC (finfun_update ea k x, A)) =\n                         (\\<exists>x.\n                             eval_fmla_sumC\n                              (finfun_update ea (p \\<bullet> k) x,\n                               p \\<bullet> A))\n 4. \\<And>k A ka ea Aa p.\n       \\<lbrakk>\\<And>x. eqvt_at eval_fmla_sumC (finfun_update ea k x, A);\n        \\<And>x. eqvt_at eval_fmla_sumC (finfun_update ea ka x, Aa);\n        atom k \\<sharp> ea; atom ka \\<sharp> ea;\n        supp p \\<sharp>* ea\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> (\\<exists>x.\n   eval_fmla_sumC (finfun_update ea ka x, Aa)) =\n                         (\\<exists>x.\n                             eval_fmla_sumC\n                              (finfun_update ea (p \\<bullet> ka) x,\n                               p \\<bullet> Aa))", "apply(rule pure_fresh)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>k A ka ea Aa.\n       \\<lbrakk>\\<And>x. eqvt_at eval_fmla_sumC (finfun_update ea k x, A);\n        \\<And>x. eqvt_at eval_fmla_sumC (finfun_update ea ka x, Aa);\n        atom k \\<sharp> ea; atom ka \\<sharp> ea\\<rbrakk>\n       \\<Longrightarrow> {atom k, atom ka} \\<sharp>* ea\n 2. \\<And>k A ka ea Aa p.\n       \\<lbrakk>\\<And>x. eqvt_at eval_fmla_sumC (finfun_update ea k x, A);\n        \\<And>x. eqvt_at eval_fmla_sumC (finfun_update ea ka x, Aa);\n        atom k \\<sharp> ea; atom ka \\<sharp> ea;\n        supp p \\<sharp>* ea\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> (\\<exists>x.\n   eval_fmla_sumC (finfun_update ea k x, A)) =\n                         (\\<exists>x.\n                             eval_fmla_sumC\n                              (finfun_update ea (p \\<bullet> k) x,\n                               p \\<bullet> A))\n 3. \\<And>k A ka ea Aa p.\n       \\<lbrakk>\\<And>x. eqvt_at eval_fmla_sumC (finfun_update ea k x, A);\n        \\<And>x. eqvt_at eval_fmla_sumC (finfun_update ea ka x, Aa);\n        atom k \\<sharp> ea; atom ka \\<sharp> ea;\n        supp p \\<sharp>* ea\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> (\\<exists>x.\n   eval_fmla_sumC (finfun_update ea ka x, Aa)) =\n                         (\\<exists>x.\n                             eval_fmla_sumC\n                              (finfun_update ea (p \\<bullet> ka) x,\n                               p \\<bullet> Aa))", "apply(simp add: fresh_star_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k A ka ea Aa p.\n       \\<lbrakk>\\<And>x. eqvt_at eval_fmla_sumC (finfun_update ea k x, A);\n        \\<And>x. eqvt_at eval_fmla_sumC (finfun_update ea ka x, Aa);\n        atom k \\<sharp> ea; atom ka \\<sharp> ea;\n        supp p \\<sharp>* ea\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> (\\<exists>x.\n   eval_fmla_sumC (finfun_update ea k x, A)) =\n                         (\\<exists>x.\n                             eval_fmla_sumC\n                              (finfun_update ea (p \\<bullet> k) x,\n                               p \\<bullet> A))\n 2. \\<And>k A ka ea Aa p.\n       \\<lbrakk>\\<And>x. eqvt_at eval_fmla_sumC (finfun_update ea k x, A);\n        \\<And>x. eqvt_at eval_fmla_sumC (finfun_update ea ka x, Aa);\n        atom k \\<sharp> ea; atom ka \\<sharp> ea;\n        supp p \\<sharp>* ea\\<rbrakk>\n       \\<Longrightarrow> p \\<bullet> (\\<exists>x.\n   eval_fmla_sumC (finfun_update ea ka x, Aa)) =\n                         (\\<exists>x.\n                             eval_fmla_sumC\n                              (finfun_update ea (p \\<bullet> ka) x,\n                               p \\<bullet> Aa))", "apply (simp_all add: eqvt_at_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>k A ka ea Aa p.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>p.\n                      (p \\<bullet> eval_fmla_sumC)\n                       (finfun_update (p \\<bullet> ea) (p \\<bullet> k) x,\n                        p \\<bullet> A) =\n                      eval_fmla_sumC\n                       (finfun_update (p \\<bullet> ea) (p \\<bullet> k) x,\n                        p \\<bullet> A);\n        \\<And>x.\n           \\<forall>p.\n              (p \\<bullet> eval_fmla_sumC)\n               (finfun_update (p \\<bullet> ea) (p \\<bullet> ka) x,\n                p \\<bullet> Aa) =\n              eval_fmla_sumC\n               (finfun_update (p \\<bullet> ea) (p \\<bullet> ka) x,\n                p \\<bullet> Aa);\n        atom k \\<sharp> ea; atom ka \\<sharp> ea;\n        supp p \\<sharp>* ea\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>x.\n                             eval_fmla_sumC\n                              (finfun_update (p \\<bullet> ea)\n                                (p \\<bullet> k) x,\n                               p \\<bullet> A)) =\n                         (\\<exists>x.\n                             eval_fmla_sumC\n                              (finfun_update ea (p \\<bullet> k) x,\n                               p \\<bullet> A))\n 2. \\<And>k A ka ea Aa p.\n       \\<lbrakk>\\<And>x.\n                   \\<forall>p.\n                      (p \\<bullet> eval_fmla_sumC)\n                       (finfun_update (p \\<bullet> ea) (p \\<bullet> k) x,\n                        p \\<bullet> A) =\n                      eval_fmla_sumC\n                       (finfun_update (p \\<bullet> ea) (p \\<bullet> k) x,\n                        p \\<bullet> A);\n        \\<And>x.\n           \\<forall>p.\n              (p \\<bullet> eval_fmla_sumC)\n               (finfun_update (p \\<bullet> ea) (p \\<bullet> ka) x,\n                p \\<bullet> Aa) =\n              eval_fmla_sumC\n               (finfun_update (p \\<bullet> ea) (p \\<bullet> ka) x,\n                p \\<bullet> Aa);\n        atom k \\<sharp> ea; atom ka \\<sharp> ea;\n        supp p \\<sharp>* ea\\<rbrakk>\n       \\<Longrightarrow> (\\<exists>x.\n                             eval_fmla_sumC\n                              (finfun_update (p \\<bullet> ea)\n                                (p \\<bullet> ka) x,\n                               p \\<bullet> Aa)) =\n                         (\\<exists>x.\n                             eval_fmla_sumC\n                              (finfun_update ea (p \\<bullet> ka) x,\n                               p \\<bullet> Aa))", "apply (simp_all add: perm_supp_eq)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "nominal_termination (eqvt)"], ["proof (prove)\ngoal (1 subgoal):\n 1. All eval_fmla_dom", "by lexicographic_order"], ["", "lemma eval_trm_rename:\n  assumes \"atom k' \\<sharp> t\"\n  shows \"eval_trm (finfun_update e k x) t =\n         eval_trm (finfun_update e k' x) ((k' \\<leftrightarrow> k) \\<bullet> t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eval_trm (finfun_update e k x) t =\n    eval_trm (finfun_update e k' x) ((k' \\<leftrightarrow> k) \\<bullet> t)", "using assms"], ["proof (prove)\nusing this:\n  atom k' \\<sharp> t\n\ngoal (1 subgoal):\n 1. eval_trm (finfun_update e k x) t =\n    eval_trm (finfun_update e k' x) ((k' \\<leftrightarrow> k) \\<bullet> t)", "by (induct t rule: trm.induct) (auto simp: permute_flip_at)"], ["", "lemma eval_fmla_rename:\n  assumes \"atom k' \\<sharp> A\"\n  shows \"eval_fmla (finfun_update e k x) A = eval_fmla (finfun_update e k' x) ((k' \\<leftrightarrow> k) \\<bullet> A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eval_fmla (finfun_update e k x) A =\n    eval_fmla (finfun_update e k' x) ((k' \\<leftrightarrow> k) \\<bullet> A)", "using assms"], ["proof (prove)\nusing this:\n  atom k' \\<sharp> A\n\ngoal (1 subgoal):\n 1. eval_fmla (finfun_update e k x) A =\n    eval_fmla (finfun_update e k' x) ((k' \\<leftrightarrow> k) \\<bullet> A)", "apply (nominal_induct A avoiding: e k k' x rule: fmla.strong_induct)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>x1 x2 e k k' x.\n       atom k' \\<sharp> x1 EQ x2 \\<Longrightarrow>\n       eval_fmla (finfun_update e k x) (x1 EQ x2) =\n       eval_fmla (finfun_update e k' x)\n        ((k' \\<leftrightarrow> k) \\<bullet> x1 EQ x2)\n 2. \\<And>x1 x2 e k k' x.\n       \\<lbrakk>\\<And>b ba bb bc.\n                   atom bb \\<sharp> x1 \\<Longrightarrow>\n                   eval_fmla (finfun_update b ba bc) x1 =\n                   eval_fmla (finfun_update b bb bc)\n                    ((bb \\<leftrightarrow> ba) \\<bullet> x1);\n        \\<And>b ba bb bc.\n           atom bb \\<sharp> x2 \\<Longrightarrow>\n           eval_fmla (finfun_update b ba bc) x2 =\n           eval_fmla (finfun_update b bb bc)\n            ((bb \\<leftrightarrow> ba) \\<bullet> x2);\n        atom k' \\<sharp> x1 OR x2\\<rbrakk>\n       \\<Longrightarrow> eval_fmla (finfun_update e k x) (x1 OR x2) =\n                         eval_fmla (finfun_update e k' x)\n                          ((k' \\<leftrightarrow> k) \\<bullet> x1 OR x2)\n 3. \\<And>x e k k' xa.\n       \\<lbrakk>\\<And>b ba bb bc.\n                   atom bb \\<sharp> x \\<Longrightarrow>\n                   eval_fmla (finfun_update b ba bc) x =\n                   eval_fmla (finfun_update b bb bc)\n                    ((bb \\<leftrightarrow> ba) \\<bullet> x);\n        atom k' \\<sharp> neg x\\<rbrakk>\n       \\<Longrightarrow> eval_fmla (finfun_update e k xa) (neg x) =\n                         eval_fmla (finfun_update e k' xa)\n                          ((k' \\<leftrightarrow> k) \\<bullet> neg x)\n 4. \\<And>x1 x2 e k k' x.\n       \\<lbrakk>atom x1 \\<sharp> e; atom x1 \\<sharp> k; atom x1 \\<sharp> k';\n        atom x1 \\<sharp> x;\n        \\<And>b ba bb bc.\n           atom bb \\<sharp> x2 \\<Longrightarrow>\n           eval_fmla (finfun_update b ba bc) x2 =\n           eval_fmla (finfun_update b bb bc)\n            ((bb \\<leftrightarrow> ba) \\<bullet> x2);\n        atom k' \\<sharp> exi x1 x2\\<rbrakk>\n       \\<Longrightarrow> eval_fmla (finfun_update e k x) (exi x1 x2) =\n                         eval_fmla (finfun_update e k' x)\n                          ((k' \\<leftrightarrow> k) \\<bullet> exi x1 x2)", "apply (simp_all add: eval_trm_rename[symmetric], metis)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1 x2 e k k' x.\n       \\<lbrakk>atom x1 \\<sharp> e; atom x1 \\<sharp> k; atom x1 \\<sharp> k';\n        atom x1 \\<sharp> x;\n        \\<And>b ba bb bc.\n           atom bb \\<sharp> x2 \\<Longrightarrow>\n           eval_fmla (finfun_update b ba bc) x2 =\n           eval_fmla (finfun_update b bb bc)\n            ((bb \\<leftrightarrow> ba) \\<bullet> x2);\n        atom k' \\<sharp> x2 \\<or> k' = x1\\<rbrakk>\n       \\<Longrightarrow> eval_fmla (finfun_update e k x) (exi x1 x2) =\n                         eval_fmla (finfun_update e k' x)\n                          (exi x1 ((k' \\<leftrightarrow> k) \\<bullet> x2))", "apply (simp add: fresh_finfun_update fresh_at_base finfun_update_twist)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma better_ex_eval_fmla[simp]:\n  \"eval_fmla e (exi k A) \\<longleftrightarrow> (\\<exists>x. eval_fmla (finfun_update e k x) A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eval_fmla e (exi k A) = (\\<exists>x. eval_fmla (finfun_update e k x) A)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. eval_fmla e (exi k A) = (\\<exists>x. eval_fmla (finfun_update e k x) A)", "obtain k'::name where k': \"atom k' \\<sharp> (k, e, A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k'.\n        atom k' \\<sharp> (k, e, A) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (rule obtain_fresh)"], ["proof (state)\nthis:\n  atom k' \\<sharp> (k, e, A)\n\ngoal (1 subgoal):\n 1. eval_fmla e (exi k A) = (\\<exists>x. eval_fmla (finfun_update e k x) A)", "then"], ["proof (chain)\npicking this:\n  atom k' \\<sharp> (k, e, A)", "have eq: \"exi k' ((k' \\<leftrightarrow> k) \\<bullet> A) = exi k A\""], ["proof (prove)\nusing this:\n  atom k' \\<sharp> (k, e, A)\n\ngoal (1 subgoal):\n 1. exi k' ((k' \\<leftrightarrow> k) \\<bullet> A) = exi k A", "by (simp add: Abs1_eq_iff flip_def)"], ["proof (state)\nthis:\n  exi k' ((k' \\<leftrightarrow> k) \\<bullet> A) = exi k A\n\ngoal (1 subgoal):\n 1. eval_fmla e (exi k A) = (\\<exists>x. eval_fmla (finfun_update e k x) A)", "have \"eval_fmla e (exi k' ((k' \\<leftrightarrow> k) \\<bullet> A)) = (\\<exists>x. eval_fmla (finfun_update e k' x) ((k' \\<leftrightarrow> k) \\<bullet> A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eval_fmla e (exi k' ((k' \\<leftrightarrow> k) \\<bullet> A)) =\n    (\\<exists>x.\n        eval_fmla (finfun_update e k' x)\n         ((k' \\<leftrightarrow> k) \\<bullet> A))", "using k'"], ["proof (prove)\nusing this:\n  atom k' \\<sharp> (k, e, A)\n\ngoal (1 subgoal):\n 1. eval_fmla e (exi k' ((k' \\<leftrightarrow> k) \\<bullet> A)) =\n    (\\<exists>x.\n        eval_fmla (finfun_update e k' x)\n         ((k' \\<leftrightarrow> k) \\<bullet> A))", "by simp"], ["proof (state)\nthis:\n  eval_fmla e (exi k' ((k' \\<leftrightarrow> k) \\<bullet> A)) =\n  (\\<exists>x.\n      eval_fmla (finfun_update e k' x)\n       ((k' \\<leftrightarrow> k) \\<bullet> A))\n\ngoal (1 subgoal):\n 1. eval_fmla e (exi k A) = (\\<exists>x. eval_fmla (finfun_update e k x) A)", "also"], ["proof (state)\nthis:\n  eval_fmla e (exi k' ((k' \\<leftrightarrow> k) \\<bullet> A)) =\n  (\\<exists>x.\n      eval_fmla (finfun_update e k' x)\n       ((k' \\<leftrightarrow> k) \\<bullet> A))\n\ngoal (1 subgoal):\n 1. eval_fmla e (exi k A) = (\\<exists>x. eval_fmla (finfun_update e k x) A)", "have \"... = (\\<exists>x. eval_fmla (finfun_update e k x) A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>x.\n        eval_fmla (finfun_update e k' x)\n         ((k' \\<leftrightarrow> k) \\<bullet> A)) =\n    (\\<exists>x. eval_fmla (finfun_update e k x) A)", "by (metis eval_fmla_rename k' fresh_Pair)"], ["proof (state)\nthis:\n  (\\<exists>x.\n      eval_fmla (finfun_update e k' x)\n       ((k' \\<leftrightarrow> k) \\<bullet> A)) =\n  (\\<exists>x. eval_fmla (finfun_update e k x) A)\n\ngoal (1 subgoal):\n 1. eval_fmla e (exi k A) = (\\<exists>x. eval_fmla (finfun_update e k x) A)", "finally"], ["proof (chain)\npicking this:\n  eval_fmla e (exi k' ((k' \\<leftrightarrow> k) \\<bullet> A)) =\n  (\\<exists>x. eval_fmla (finfun_update e k x) A)", "show ?thesis"], ["proof (prove)\nusing this:\n  eval_fmla e (exi k' ((k' \\<leftrightarrow> k) \\<bullet> A)) =\n  (\\<exists>x. eval_fmla (finfun_update e k x) A)\n\ngoal (1 subgoal):\n 1. eval_fmla e (exi k A) = (\\<exists>x. eval_fmla (finfun_update e k x) A)", "by (metis eq)"], ["proof (state)\nthis:\n  eval_fmla e (exi k A) = (\\<exists>x. eval_fmla (finfun_update e k x) A)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma forget_eval_trm [simp]: \"atom i \\<sharp> t \\<Longrightarrow>\n    eval_trm (finfun_update e i x) t = eval_trm e t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom i \\<sharp> t \\<Longrightarrow>\n    eval_trm (finfun_update e i x) t = eval_trm e t", "by (induct t rule: trm.induct) (simp_all add: fresh_at_base)"], ["", "lemma forget_eval_fmla [simp]:\n   \"atom k \\<sharp> A \\<Longrightarrow> eval_fmla (finfun_update e k x) A = eval_fmla e A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom k \\<sharp> A \\<Longrightarrow>\n    eval_fmla (finfun_update e k x) A = eval_fmla e A", "by (nominal_induct A avoiding: k e rule: fmla.strong_induct)\n     (simp_all add: fresh_at_base finfun_update_twist)"], ["", "lemma eval_subst_trm: \"eval_trm e (subst i t u) =\n   eval_trm (finfun_update e i (eval_trm e t)) u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eval_trm e (subst i t u) = eval_trm (finfun_update e i (eval_trm e t)) u", "by (induct u rule: trm.induct) (auto)"], ["", "lemma eval_subst_fmla: \"eval_fmla e (fmla(i::= t)) =\n   eval_fmla (finfun_update e i (eval_trm e t)) fmla\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eval_fmla e (fmla(i::=t)) =\n    eval_fmla (finfun_update e i (eval_trm e t)) fmla", "by (nominal_induct fmla avoiding: i t e rule: fmla.strong_induct)\n     (simp_all add: eval_subst_trm finfun_update_twist fresh_at_base)"], ["", "subsection \\<open>Derived logical connectives\\<close>"], ["", "abbreviation imp :: \"fmla \\<Rightarrow> fmla \\<Rightarrow> fmla\"   (infixr \"IMP\" 125)\n  where \"imp A B \\<equiv> dsj (neg A) B\""], ["", "abbreviation all :: \"name \\<Rightarrow> fmla \\<Rightarrow> fmla\"\n  where \"all i A \\<equiv> neg (exi i (neg A))\""], ["", "subsubsection \\<open>Conjunction\\<close>"], ["", "definition cnj :: \"fmla \\<Rightarrow> fmla \\<Rightarrow> fmla\"   (infixr \"AND\" 135)\n  where \"cnj A B \\<equiv> neg (dsj (neg A) (neg B))\""], ["", "lemma cnj_eqvt [eqvt]: \"p \\<bullet> (A AND B) = (p \\<bullet> A) AND (p \\<bullet> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<bullet> A AND B = (p \\<bullet> A) AND (p \\<bullet> B)", "by (simp add: cnj_def)"], ["", "lemma fresh_cnj [simp]: \"a \\<sharp> A AND B \\<longleftrightarrow> (a \\<sharp> A \\<and> a \\<sharp> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<sharp> A AND B = (a \\<sharp> A \\<and> a \\<sharp> B)", "by (auto simp: cnj_def)"], ["", "lemma supp_cnj [simp]: \"supp (A AND B) = supp A \\<union> supp B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. supp (A AND B) = supp A \\<union> supp B", "by (auto simp: cnj_def)"], ["", "lemma size_cnj [simp]: \"size (A AND B) = size A + size B + 4\""], ["proof (prove)\ngoal (1 subgoal):\n 1. size (A AND B) = size A + size B + 4", "by (simp add: cnj_def)"], ["", "lemma cnj_injective_iff [iff]: \"(A AND B) = (A' AND B') \\<longleftrightarrow> (A = A' \\<and> B = B')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A AND B = A' AND B') = (A = A' \\<and> B = B')", "by (auto simp: cnj_def)"], ["", "lemma subst_fmla_cnj [simp]: \"(A AND B)(i::=x) = (A(i::=x)) AND (B(i::=x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A AND B)(i::=x) = A(i::=x) AND B(i::=x)", "by (auto simp: cnj_def)"], ["", "lemma eval_fmla_cnj [simp]: \"eval_fmla e (cnj A B) \\<longleftrightarrow> (eval_fmla e A \\<and> eval_fmla e B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eval_fmla e (A AND B) = (eval_fmla e A \\<and> eval_fmla e B)", "by (auto simp: cnj_def)"], ["", "subsubsection \\<open>If and only if\\<close>"], ["", "definition Iff :: \"fmla \\<Rightarrow> fmla \\<Rightarrow> fmla\"   (infixr \"IFF\" 125)\n  where \"Iff A B = cnj (imp A B) (imp B A)\""], ["", "lemma Iff_eqvt [eqvt]: \"p \\<bullet> (A IFF B) = (p \\<bullet> A) IFF (p \\<bullet> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<bullet> A IFF B = (p \\<bullet> A) IFF (p \\<bullet> B)", "by (simp add: Iff_def)"], ["", "lemma fresh_Iff [simp]: \"a \\<sharp> A IFF B \\<longleftrightarrow> (a \\<sharp> A \\<and> a \\<sharp> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<sharp> A IFF B = (a \\<sharp> A \\<and> a \\<sharp> B)", "by (auto simp: cnj_def Iff_def)"], ["", "lemma size_Iff [simp]: \"size (A IFF B) = 2*(size A + size B) + 8\""], ["proof (prove)\ngoal (1 subgoal):\n 1. size (A IFF B) = 2 * (size A + size B) + 8", "by (simp add: Iff_def)"], ["", "lemma Iff_injective_iff [iff]: \"(A IFF B) = (A' IFF B') \\<longleftrightarrow> (A = A' \\<and> B = B')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A IFF B = A' IFF B') = (A = A' \\<and> B = B')", "by (auto simp: Iff_def)"], ["", "lemma subst_fmla_Iff [simp]: \"(A IFF B)(i::=x) = (A(i::=x)) IFF (B(i::=x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A IFF B)(i::=x) = A(i::=x) IFF B(i::=x)", "by (auto simp: Iff_def)"], ["", "lemma eval_fmla_Iff [simp]: \"eval_fmla e (Iff A B) \\<longleftrightarrow> (eval_fmla e A  \\<longleftrightarrow>  eval_fmla e B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eval_fmla e (A IFF B) = (eval_fmla e A = eval_fmla e B)", "by (auto simp: Iff_def)"], ["", "subsubsection \\<open>False\\<close>"], ["", "definition fls  where \"fls \\<equiv> neg (zer EQ zer)\""], ["", "lemma fls_eqvt [eqvt]: \"(p \\<bullet> fls) = fls\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<bullet> fls = fls", "by (simp add: fls_def)"], ["", "lemma fls_fresh [simp]: \"a \\<sharp> fls\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<sharp> fls", "by (simp add: fls_def)"], ["", "section \\<open>Axioms and Theorems\\<close>"], ["", "subsection \\<open>Logical axioms\\<close>"], ["", "inductive_set boolean_axioms :: \"fmla set\"\n  where\n    Ident:     \"A IMP A \\<in> boolean_axioms\"\n  | dsjI1:    \"A IMP (A OR B) \\<in> boolean_axioms\"\n  | dsjCont:  \"(A OR A) IMP A \\<in> boolean_axioms\"\n  | dsjAssoc: \"(A OR (B OR C)) IMP ((A OR B) OR C) \\<in> boolean_axioms\"\n  | dsjcnj:  \"(C OR A) IMP (((neg C) OR B) IMP (A OR B)) \\<in> boolean_axioms\""], ["", "lemma boolean_axioms_hold: \"A \\<in> boolean_axioms \\<Longrightarrow> eval_fmla e A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<in> boolean_axioms \\<Longrightarrow> eval_fmla e A", "by (induct rule: boolean_axioms.induct, auto)"], ["", "inductive_set special_axioms :: \"fmla set\" where\n  I: \"A(i::=x) IMP (exi i A) \\<in> special_axioms\""], ["", "lemma special_axioms_hold: \"A \\<in> special_axioms \\<Longrightarrow> eval_fmla e A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<in> special_axioms \\<Longrightarrow> eval_fmla e A", "by (induct rule: special_axioms.induct, auto) (metis eval_subst_fmla)"], ["", "lemma twist_forget_eval_fmla [simp]:\n   \"atom j \\<sharp> (i, A)\n    \\<Longrightarrow> eval_fmla (finfun_update (finfun_update (finfun_update e i x) j y) i z) A =\n        eval_fmla (finfun_update e i z) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. atom j \\<sharp> (i, A) \\<Longrightarrow>\n    eval_fmla (finfun_update (finfun_update (finfun_update e i x) j y) i z)\n     A =\n    eval_fmla (finfun_update e i z) A", "by (metis finfun_update_twice finfun_update_twist forget_eval_fmla fresh_Pair)"], ["", "subsection \\<open>Concrete variables\\<close>"], ["", "declare Abs_name_inject[simp]"], ["", "abbreviation\n  \"X0 \\<equiv> Abs_name (Atom (Sort ''Theory_Syntax_Q.name'' []) 0)\""], ["", "abbreviation\n  \"X1 \\<equiv> Abs_name (Atom (Sort ''Robinson_Arithmetic.name'' []) (Suc 0))\"\n   \\<comment> \\<open>We prefer @{term \"Suc 0\"} because simplification will transform 1 to that form anyway.\\<close>"], ["", "abbreviation\n  \"X2 \\<equiv> Abs_name (Atom (Sort ''Robinson_Arithmetic.name'' []) 2)\""], ["", "abbreviation\n  \"X3 \\<equiv> Abs_name (Atom (Sort ''Robinson_Arithmetic.name'' []) 3)\""], ["", "abbreviation\n  \"X4 \\<equiv> Abs_name (Atom (Sort ''Robinson_Arithmetic.name'' []) 4)\""], ["", "subsection \\<open>Equality axioms\\<close>"], ["", "definition refl_ax :: fmla where\n  \"refl_ax = Var X1 EQ Var X1\""], ["", "lemma refl_ax_holds: \"eval_fmla e refl_ax\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eval_fmla e refl_ax", "by (auto simp: refl_ax_def)"], ["", "definition eq_cong_ax :: fmla where\n  \"eq_cong_ax = ((Var X1 EQ Var X2) AND (Var X3 EQ Var X4)) IMP\n                ((Var X1 EQ Var X3) IMP (Var X2 EQ Var X4))\""], ["", "lemma eq_cong_ax_holds: \"eval_fmla e eq_cong_ax\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eval_fmla e eq_cong_ax", "by (auto simp: cnj_def eq_cong_ax_def)"], ["", "definition syc_cong_ax :: fmla where\n  \"syc_cong_ax = ((Var X1 EQ Var X2)) IMP\n                ((suc (Var X1)) EQ (suc (Var X2)))\""], ["", "lemma syc_cong_ax_holds: \"eval_fmla e syc_cong_ax\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eval_fmla e syc_cong_ax", "by (auto simp: cnj_def syc_cong_ax_def)"], ["", "definition pls_cong_ax :: fmla where\n  \"pls_cong_ax = ((Var X1 EQ Var X2) AND (Var X3 EQ Var X4)) IMP\n                  ((pls (Var X1) (Var X3)) EQ (pls (Var X2) (Var X4)))\""], ["", "lemma pls_cong_ax_holds: \"eval_fmla e pls_cong_ax\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eval_fmla e pls_cong_ax", "by (auto simp: cnj_def pls_cong_ax_def)"], ["", "definition tms_cong_ax :: fmla where\n  \"tms_cong_ax = ((Var X1 EQ Var X2) AND (Var X3 EQ Var X4)) IMP\n                  ((tms (Var X1) (Var X3)) EQ (tms (Var X2) (Var X4)))\""], ["", "lemma tms_cong_ax_holds: \"eval_fmla e tms_cong_ax\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eval_fmla e tms_cong_ax", "by (auto simp: cnj_def tms_cong_ax_def)"], ["", "definition equality_axioms :: \"fmla set\" where\n  \"equality_axioms = {refl_ax, eq_cong_ax, syc_cong_ax, pls_cong_ax, tms_cong_ax}\""], ["", "lemma equality_axioms_hold: \"A \\<in> equality_axioms \\<Longrightarrow> eval_fmla e A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<in> equality_axioms \\<Longrightarrow> eval_fmla e A", "by (auto simp: equality_axioms_def refl_ax_holds eq_cong_ax_holds\n       syc_cong_ax_holds pls_cong_ax_holds tms_cong_ax_holds)"], ["", "subsection \\<open>The Q (Robinson-arithmetic-specific) axioms\\<close>"], ["", "definition \"Q_axioms \\<equiv>\n {A | A X1 X2.\n   X1 \\<noteq> X2 \\<and>\n   (A = neg (zer EQ suc (Var X1)) \\<or>\n    A = suc (Var X1) EQ suc (Var X2) IMP Var X1 EQ Var X2 \\<or>\n    A = Var X2 EQ zer OR exi X1 (Var X2 EQ suc (Var X1)) \\<or>\n    A = pls (Var X1) zer EQ Var X1 \\<or>\n    A = pls (Var X1) (suc (Var X2)) EQ suc (pls (Var X1) (Var X2)) \\<or>\n    A = tms (Var X1) zer EQ zer \\<or>\n    A = tms (Var X1) (suc (Var X2)) EQ pls (tms (Var X1) (Var X2)) (Var X1))}\""], ["", "subsection \\<open>The proof system\\<close>"], ["", "inductive nprv :: \"fmla set \\<Rightarrow> fmla \\<Rightarrow> bool\" (infixl \"\\<turnstile>\" 55)\n  where\n    Hyp:    \"A \\<in> H \\<Longrightarrow> H \\<turnstile> A\"\n  | Q:  \"A \\<in> Q_axioms \\<Longrightarrow> H \\<turnstile> A\"\n  | Bool:   \"A \\<in> boolean_axioms \\<Longrightarrow> H \\<turnstile> A\"\n  | eql:     \"A \\<in> equality_axioms \\<Longrightarrow> H \\<turnstile> A\"\n  | Spec:   \"A \\<in> special_axioms \\<Longrightarrow> H \\<turnstile> A\"\n  | MP:     \"H \\<turnstile> A IMP B \\<Longrightarrow> H' \\<turnstile> A \\<Longrightarrow> H \\<union> H' \\<turnstile> B\"\n  | exiists: \"H \\<turnstile> A IMP B \\<Longrightarrow> atom i \\<sharp> B \\<Longrightarrow> \\<forall>C \\<in> H. atom i \\<sharp> C \\<Longrightarrow> H \\<turnstile> (exi i A) IMP B\""], ["", "subsection\\<open>Derived rules of inference\\<close>"], ["", "lemma contraction: \"insert A (insert A H) \\<turnstile> B \\<Longrightarrow> insert A H \\<turnstile> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert A (insert A H) \\<turnstile> B \\<Longrightarrow>\n    insert A H \\<turnstile> B", "by (metis insert_absorb2)"], ["", "lemma thin_Un: \"H \\<turnstile> A \\<Longrightarrow> H \\<union> H' \\<turnstile> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<turnstile> A \\<Longrightarrow> H \\<union> H' \\<turnstile> A", "by (metis Bool MP boolean_axioms.Ident sup_commute)"], ["", "lemma thin: \"H \\<turnstile> A \\<Longrightarrow> H \\<subseteq> H' \\<Longrightarrow> H' \\<turnstile> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<turnstile> A; H \\<subseteq> H'\\<rbrakk>\n    \\<Longrightarrow> H' \\<turnstile> A", "by (metis Un_absorb1 thin_Un)"], ["", "lemma thin0: \"{} \\<turnstile> A \\<Longrightarrow> H \\<turnstile> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<turnstile> A \\<Longrightarrow> H \\<turnstile> A", "by (metis sup_bot_left thin_Un)"], ["", "lemma thin1: \"H \\<turnstile> B \\<Longrightarrow> insert A H \\<turnstile> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<turnstile> B \\<Longrightarrow> insert A H \\<turnstile> B", "by (metis subset_insertI thin)"], ["", "lemma thin2: \"insert A1 H \\<turnstile> B \\<Longrightarrow> insert A1 (insert A2 H) \\<turnstile> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert A1 H \\<turnstile> B \\<Longrightarrow>\n    insert A1 (insert A2 H) \\<turnstile> B", "by (blast intro: thin)"], ["", "lemma thin3: \"insert A1 (insert A2 H) \\<turnstile> B \\<Longrightarrow> insert A1 (insert A2 (insert A3 H)) \\<turnstile> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert A1 (insert A2 H) \\<turnstile> B \\<Longrightarrow>\n    insert A1 (insert A2 (insert A3 H)) \\<turnstile> B", "by (blast intro: thin)"], ["", "lemma thin4:\n  \"insert A1 (insert A2 (insert A3 H)) \\<turnstile> B\n   \\<Longrightarrow> insert A1 (insert A2 (insert A3 (insert A4 H))) \\<turnstile> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert A1 (insert A2 (insert A3 H)) \\<turnstile> B \\<Longrightarrow>\n    insert A1 (insert A2 (insert A3 (insert A4 H))) \\<turnstile> B", "by (blast intro: thin)"], ["", "lemma rotate2: \"insert A2 (insert A1 H) \\<turnstile> B \\<Longrightarrow> insert A1 (insert A2 H) \\<turnstile> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert A2 (insert A1 H) \\<turnstile> B \\<Longrightarrow>\n    insert A1 (insert A2 H) \\<turnstile> B", "by (blast intro: thin)"], ["", "lemma rotate3: \"insert A3 (insert A1 (insert A2 H)) \\<turnstile> B \\<Longrightarrow> insert A1 (insert A2 (insert A3 H)) \\<turnstile> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert A3 (insert A1 (insert A2 H)) \\<turnstile> B \\<Longrightarrow>\n    insert A1 (insert A2 (insert A3 H)) \\<turnstile> B", "by (blast intro: thin)"], ["", "lemma rotate4:\n  \"insert A4 (insert A1 (insert A2 (insert A3 H))) \\<turnstile> B\n   \\<Longrightarrow> insert A1 (insert A2 (insert A3 (insert A4 H))) \\<turnstile> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert A4 (insert A1 (insert A2 (insert A3 H))) \\<turnstile>\n    B \\<Longrightarrow>\n    insert A1 (insert A2 (insert A3 (insert A4 H))) \\<turnstile> B", "by (blast intro: thin)"], ["", "lemma rotate5:\n  \"insert A5 (insert A1 (insert A2 (insert A3 (insert A4 H)))) \\<turnstile> B\n   \\<Longrightarrow> insert A1 (insert A2 (insert A3 (insert A4 (insert A5 H)))) \\<turnstile> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert A5 (insert A1 (insert A2 (insert A3 (insert A4 H)))) \\<turnstile>\n    B \\<Longrightarrow>\n    insert A1 (insert A2 (insert A3 (insert A4 (insert A5 H)))) \\<turnstile>\n    B", "by (blast intro: thin)"], ["", "lemma rotate6:\n  \"insert A6 (insert A1 (insert A2 (insert A3 (insert A4 (insert A5 H))))) \\<turnstile> B\n   \\<Longrightarrow> insert A1 (insert A2 (insert A3 (insert A4 (insert A5 (insert A6 H))))) \\<turnstile> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert A6\n     (insert A1\n       (insert A2 (insert A3 (insert A4 (insert A5 H))))) \\<turnstile>\n    B \\<Longrightarrow>\n    insert A1\n     (insert A2\n       (insert A3 (insert A4 (insert A5 (insert A6 H))))) \\<turnstile>\n    B", "by (blast intro: thin)"], ["", "lemma rotate7:\n  \"insert A7 (insert A1 (insert A2 (insert A3 (insert A4 (insert A5 (insert A6 H)))))) \\<turnstile> B\n   \\<Longrightarrow> insert A1 (insert A2 (insert A3 (insert A4 (insert A5 (insert A6 (insert A7 H)))))) \\<turnstile> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert A7\n     (insert A1\n       (insert A2\n         (insert A3 (insert A4 (insert A5 (insert A6 H)))))) \\<turnstile>\n    B \\<Longrightarrow>\n    insert A1\n     (insert A2\n       (insert A3\n         (insert A4 (insert A5 (insert A6 (insert A7 H)))))) \\<turnstile>\n    B", "by (blast intro: thin)"], ["", "lemma rotate8:\n  \"insert A8 (insert A1 (insert A2 (insert A3 (insert A4 (insert A5 (insert A6 (insert A7 H))))))) \\<turnstile> B\n   \\<Longrightarrow> insert A1 (insert A2 (insert A3 (insert A4 (insert A5 (insert A6 (insert A7 (insert A8 H))))))) \\<turnstile> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert A8\n     (insert A1\n       (insert A2\n         (insert A3\n           (insert A4 (insert A5 (insert A6 (insert A7 H))))))) \\<turnstile>\n    B \\<Longrightarrow>\n    insert A1\n     (insert A2\n       (insert A3\n         (insert A4\n           (insert A5 (insert A6 (insert A7 (insert A8 H))))))) \\<turnstile>\n    B", "by (blast intro: thin)"], ["", "lemma rotate9:\n  \"insert A9 (insert A1 (insert A2 (insert A3 (insert A4 (insert A5 (insert A6 (insert A7 (insert A8 H)))))))) \\<turnstile> B\n   \\<Longrightarrow> insert A1 (insert A2 (insert A3 (insert A4 (insert A5 (insert A6 (insert A7 (insert A8 (insert A9 H)))))))) \\<turnstile> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert A9\n     (insert A1\n       (insert A2\n         (insert A3\n           (insert A4\n             (insert A5\n               (insert A6 (insert A7 (insert A8 H)))))))) \\<turnstile>\n    B \\<Longrightarrow>\n    insert A1\n     (insert A2\n       (insert A3\n         (insert A4\n           (insert A5\n             (insert A6\n               (insert A7 (insert A8 (insert A9 H)))))))) \\<turnstile>\n    B", "by (blast intro: thin)"], ["", "lemma rotate10:\n  \"insert A10 (insert A1 (insert A2 (insert A3 (insert A4 (insert A5 (insert A6 (insert A7 (insert A8 (insert A9 H))))))))) \\<turnstile> B\n   \\<Longrightarrow> insert A1 (insert A2 (insert A3 (insert A4 (insert A5 (insert A6 (insert A7 (insert A8 (insert A9 (insert A10 H))))))))) \\<turnstile> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert A10\n     (insert A1\n       (insert A2\n         (insert A3\n           (insert A4\n             (insert A5\n               (insert A6\n                 (insert A7 (insert A8 (insert A9 H))))))))) \\<turnstile>\n    B \\<Longrightarrow>\n    insert A1\n     (insert A2\n       (insert A3\n         (insert A4\n           (insert A5\n             (insert A6\n               (insert A7\n                 (insert A8 (insert A9 (insert A10 H))))))))) \\<turnstile>\n    B", "by (blast intro: thin)"], ["", "lemma rotate11:\n  \"insert A11 (insert A1 (insert A2 (insert A3 (insert A4 (insert A5 (insert A6 (insert A7 (insert A8 (insert A9 (insert A10 H)))))))))) \\<turnstile> B\n   \\<Longrightarrow> insert A1 (insert A2 (insert A3 (insert A4 (insert A5 (insert A6 (insert A7 (insert A8 (insert A9 (insert A10 (insert A11 H)))))))))) \\<turnstile> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert A11\n     (insert A1\n       (insert A2\n         (insert A3\n           (insert A4\n             (insert A5\n               (insert A6\n                 (insert A7\n                   (insert A8\n                     (insert A9 (insert A10 H)))))))))) \\<turnstile>\n    B \\<Longrightarrow>\n    insert A1\n     (insert A2\n       (insert A3\n         (insert A4\n           (insert A5\n             (insert A6\n               (insert A7\n                 (insert A8\n                   (insert A9\n                     (insert A10 (insert A11 H)))))))))) \\<turnstile>\n    B", "by (blast intro: thin)"], ["", "lemma rotate12:\n  \"insert A12 (insert A1 (insert A2 (insert A3 (insert A4 (insert A5 (insert A6 (insert A7 (insert A8 (insert A9 (insert A10 (insert A11 H))))))))))) \\<turnstile> B\n   \\<Longrightarrow> insert A1 (insert A2 (insert A3 (insert A4 (insert A5 (insert A6 (insert A7 (insert A8 (insert A9 (insert A10 (insert A11 (insert A12 H))))))))))) \\<turnstile> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert A12\n     (insert A1\n       (insert A2\n         (insert A3\n           (insert A4\n             (insert A5\n               (insert A6\n                 (insert A7\n                   (insert A8\n                     (insert A9\n                       (insert A10 (insert A11 H))))))))))) \\<turnstile>\n    B \\<Longrightarrow>\n    insert A1\n     (insert A2\n       (insert A3\n         (insert A4\n           (insert A5\n             (insert A6\n               (insert A7\n                 (insert A8\n                   (insert A9\n                     (insert A10\n                       (insert A11 (insert A12 H))))))))))) \\<turnstile>\n    B", "by (blast intro: thin)"], ["", "lemma rotate13:\n  \"insert A13 (insert A1 (insert A2 (insert A3 (insert A4 (insert A5 (insert A6 (insert A7 (insert A8 (insert A9 (insert A10 (insert A11 (insert A12 H)))))))))))) \\<turnstile> B\n   \\<Longrightarrow> insert A1 (insert A2 (insert A3 (insert A4 (insert A5 (insert A6 (insert A7 (insert A8 (insert A9 (insert A10 (insert A11 (insert A12 (insert A13 H)))))))))))) \\<turnstile> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert A13\n     (insert A1\n       (insert A2\n         (insert A3\n           (insert A4\n             (insert A5\n               (insert A6\n                 (insert A7\n                   (insert A8\n                     (insert A9\n                       (insert A10\n                         (insert A11 (insert A12 H)))))))))))) \\<turnstile>\n    B \\<Longrightarrow>\n    insert A1\n     (insert A2\n       (insert A3\n         (insert A4\n           (insert A5\n             (insert A6\n               (insert A7\n                 (insert A8\n                   (insert A9\n                     (insert A10\n                       (insert A11\n                         (insert A12 (insert A13 H)))))))))))) \\<turnstile>\n    B", "by (blast intro: thin)"], ["", "lemma rotate14:\n  \"insert A14 (insert A1 (insert A2 (insert A3 (insert A4 (insert A5 (insert A6 (insert A7 (insert A8 (insert A9 (insert A10 (insert A11 (insert A12 (insert A13 H))))))))))))) \\<turnstile> B\n   \\<Longrightarrow> insert A1 (insert A2 (insert A3 (insert A4 (insert A5 (insert A6 (insert A7 (insert A8 (insert A9 (insert A10 (insert A11 (insert A12 (insert A13 (insert A14 H))))))))))))) \\<turnstile> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert A14\n     (insert A1\n       (insert A2\n         (insert A3\n           (insert A4\n             (insert A5\n               (insert A6\n                 (insert A7\n                   (insert A8\n                     (insert A9\n                       (insert A10\n                         (insert A11\n                           (insert A12\n                             (insert A13 H))))))))))))) \\<turnstile>\n    B \\<Longrightarrow>\n    insert A1\n     (insert A2\n       (insert A3\n         (insert A4\n           (insert A5\n             (insert A6\n               (insert A7\n                 (insert A8\n                   (insert A9\n                     (insert A10\n                       (insert A11\n                         (insert A12\n                           (insert A13\n                             (insert A14 H))))))))))))) \\<turnstile>\n    B", "by (blast intro: thin)"], ["", "lemma rotate15:\n  \"insert A15 (insert A1 (insert A2 (insert A3 (insert A4 (insert A5 (insert A6 (insert A7 (insert A8 (insert A9 (insert A10 (insert A11 (insert A12 (insert A13 (insert A14 H)))))))))))))) \\<turnstile> B\n   \\<Longrightarrow> insert A1 (insert A2 (insert A3 (insert A4 (insert A5 (insert A6 (insert A7 (insert A8 (insert A9 (insert A10 (insert A11 (insert A12 (insert A13 (insert A14 (insert A15 H)))))))))))))) \\<turnstile> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert A15\n     (insert A1\n       (insert A2\n         (insert A3\n           (insert A4\n             (insert A5\n               (insert A6\n                 (insert A7\n                   (insert A8\n                     (insert A9\n                       (insert A10\n                         (insert A11\n                           (insert A12\n                             (insert A13\n                               (insert A14 H)))))))))))))) \\<turnstile>\n    B \\<Longrightarrow>\n    insert A1\n     (insert A2\n       (insert A3\n         (insert A4\n           (insert A5\n             (insert A6\n               (insert A7\n                 (insert A8\n                   (insert A9\n                     (insert A10\n                       (insert A11\n                         (insert A12\n                           (insert A13\n                             (insert A14\n                               (insert A15 H)))))))))))))) \\<turnstile>\n    B", "by (blast intro: thin)"], ["", "lemma MP_same: \"H \\<turnstile> A IMP B \\<Longrightarrow> H \\<turnstile> A \\<Longrightarrow> H \\<turnstile> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<turnstile> A IMP B; H \\<turnstile> A\\<rbrakk>\n    \\<Longrightarrow> H \\<turnstile> B", "by (metis MP Un_absorb)"], ["", "lemma MP_thin: \"HA \\<turnstile> A IMP B \\<Longrightarrow> HB \\<turnstile> A \\<Longrightarrow> HA \\<union> HB \\<subseteq> H \\<Longrightarrow> H \\<turnstile> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>HA \\<turnstile> A IMP B; HB \\<turnstile> A;\n     HA \\<union> HB \\<subseteq> H\\<rbrakk>\n    \\<Longrightarrow> H \\<turnstile> B", "by (metis MP_same le_sup_iff thin)"], ["", "lemma MP_null: \"{} \\<turnstile> A IMP B \\<Longrightarrow> H \\<turnstile> A \\<Longrightarrow> H \\<turnstile> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>{} \\<turnstile> A IMP B; H \\<turnstile> A\\<rbrakk>\n    \\<Longrightarrow> H \\<turnstile> B", "by (metis MP_same thin0)"], ["", "lemma dsj_commute: \"H \\<turnstile> B OR A \\<Longrightarrow> H \\<turnstile> A OR B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<turnstile> B OR A \\<Longrightarrow> H \\<turnstile> A OR B", "using dsjcnj [of B A B] Ident [of B]"], ["proof (prove)\nusing this:\n  B OR A IMP (B IMP B) IMP A OR B \\<in> boolean_axioms\n  B IMP B \\<in> boolean_axioms\n\ngoal (1 subgoal):\n 1. H \\<turnstile> B OR A \\<Longrightarrow> H \\<turnstile> A OR B", "by (metis Bool MP_same)"], ["", "lemma S: assumes  \"H \\<turnstile> A IMP (B IMP C)\" \"H' \\<turnstile> A IMP B\" shows \"H \\<union> H' \\<turnstile> A IMP C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<union> H' \\<turnstile> A IMP C", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. H \\<union> H' \\<turnstile> A IMP C", "have \"H' \\<union> H \\<turnstile> (neg A) OR (C OR (neg A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H' \\<union> H \\<turnstile> A IMP C OR neg A", "by (metis Bool MP MP_same boolean_axioms.dsjcnj dsj_commute dsjAssoc assms)"], ["proof (state)\nthis:\n  H' \\<union> H \\<turnstile> A IMP C OR neg A\n\ngoal (1 subgoal):\n 1. H \\<union> H' \\<turnstile> A IMP C", "thus ?thesis"], ["proof (prove)\nusing this:\n  H' \\<union> H \\<turnstile> A IMP C OR neg A\n\ngoal (1 subgoal):\n 1. H \\<union> H' \\<turnstile> A IMP C", "by (metis Bool dsj_commute Un_commute MP_same dsjAssoc dsjCont dsjI1)"], ["proof (state)\nthis:\n  H \\<union> H' \\<turnstile> A IMP C\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Assume: \"insert A H \\<turnstile> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert A H \\<turnstile> A", "by (metis Hyp insertI1)"], ["", "lemmas AssumeH = Assume Assume [THEN rotate2] Assume [THEN rotate3] Assume [THEN rotate4] Assume [THEN rotate5]\n                 Assume [THEN rotate6] Assume [THEN rotate7] Assume [THEN rotate8] Assume [THEN rotate9] Assume [THEN rotate10]\n                 Assume [THEN rotate11] Assume [THEN rotate12]"], ["", "declare AssumeH [intro!]"], ["", "lemma imp_triv_I: \"H \\<turnstile> B \\<Longrightarrow> H \\<turnstile> A IMP B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<turnstile> B \\<Longrightarrow> H \\<turnstile> A IMP B", "by (metis Bool dsj_commute MP_same boolean_axioms.dsjI1)"], ["", "lemma dsjAssoc1: \"H \\<turnstile> A OR (B OR C) \\<Longrightarrow> H \\<turnstile> (A OR B) OR C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<turnstile> A OR B OR C \\<Longrightarrow>\n    H \\<turnstile> (A OR B) OR C", "by (metis Bool MP_same boolean_axioms.dsjAssoc)"], ["", "lemma dsjAssoc2: \"H \\<turnstile> (A OR B) OR C \\<Longrightarrow> H \\<turnstile> A OR (B OR C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<turnstile> (A OR B) OR C \\<Longrightarrow>\n    H \\<turnstile> A OR B OR C", "by (metis dsjAssoc1 dsj_commute)"], ["", "lemma dsj_commute_imp: \"H \\<turnstile> (B OR A) IMP (A OR B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<turnstile> B OR A IMP A OR B", "using dsjcnj [of B A B] Ident [of B]"], ["proof (prove)\nusing this:\n  B OR A IMP (B IMP B) IMP A OR B \\<in> boolean_axioms\n  B IMP B \\<in> boolean_axioms\n\ngoal (1 subgoal):\n 1. H \\<turnstile> B OR A IMP A OR B", "by (metis Bool dsjAssoc2 dsj_commute MP_same)"], ["", "lemma dsj_Semicong_1: \"H \\<turnstile> A OR C \\<Longrightarrow> H \\<turnstile> A IMP B \\<Longrightarrow> H \\<turnstile> B OR C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<turnstile> A OR C; H \\<turnstile> A IMP B\\<rbrakk>\n    \\<Longrightarrow> H \\<turnstile> B OR C", "using dsjcnj [of A C B]"], ["proof (prove)\nusing this:\n  A OR C IMP (A IMP B) IMP C OR B \\<in> boolean_axioms\n\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<turnstile> A OR C; H \\<turnstile> A IMP B\\<rbrakk>\n    \\<Longrightarrow> H \\<turnstile> B OR C", "by (metis Bool dsj_commute MP_same)"], ["", "lemma imp_imp_commute: \"H \\<turnstile> B IMP (A IMP C) \\<Longrightarrow> H \\<turnstile> A IMP (B IMP C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<turnstile> B IMP A IMP C \\<Longrightarrow>\n    H \\<turnstile> A IMP B IMP C", "by (metis dsjAssoc1 dsjAssoc2 dsj_Semicong_1 dsj_commute_imp)"], ["", "subsection\\<open>The deduction theorem\\<close>"], ["", "lemma deduction_Diff: assumes \"H \\<turnstile> B\" shows \"H - {C} \\<turnstile> C IMP B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H - {C} \\<turnstile> C IMP B", "using assms"], ["proof (prove)\nusing this:\n  H \\<turnstile> B\n\ngoal (1 subgoal):\n 1. H - {C} \\<turnstile> C IMP B", "proof (induct)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>A H. A \\<in> H \\<Longrightarrow> H - {C} \\<turnstile> C IMP A\n 2. \\<And>A H.\n       A \\<in> Q_axioms \\<Longrightarrow> H - {C} \\<turnstile> C IMP A\n 3. \\<And>A H.\n       A \\<in> boolean_axioms \\<Longrightarrow> H - {C} \\<turnstile> C IMP A\n 4. \\<And>A H.\n       A \\<in> equality_axioms \\<Longrightarrow>\n       H - {C} \\<turnstile> C IMP A\n 5. \\<And>A H.\n       A \\<in> special_axioms \\<Longrightarrow> H - {C} \\<turnstile> C IMP A\n 6. \\<And>H A B H'.\n       \\<lbrakk>H \\<turnstile> A IMP B; H - {C} \\<turnstile> C IMP A IMP B;\n        H' \\<turnstile> A; H' - {C} \\<turnstile> C IMP A\\<rbrakk>\n       \\<Longrightarrow> H \\<union> H' - {C} \\<turnstile> C IMP B\n 7. \\<And>H A B i.\n       \\<lbrakk>H \\<turnstile> A IMP B; H - {C} \\<turnstile> C IMP A IMP B;\n        atom i \\<sharp> B; \\<forall>C\\<in>H. atom i \\<sharp> C\\<rbrakk>\n       \\<Longrightarrow> H - {C} \\<turnstile> C IMP exi i A IMP B", "case (Hyp A H)"], ["proof (state)\nthis:\n  A \\<in> H\n\ngoal (7 subgoals):\n 1. \\<And>A H. A \\<in> H \\<Longrightarrow> H - {C} \\<turnstile> C IMP A\n 2. \\<And>A H.\n       A \\<in> Q_axioms \\<Longrightarrow> H - {C} \\<turnstile> C IMP A\n 3. \\<And>A H.\n       A \\<in> boolean_axioms \\<Longrightarrow> H - {C} \\<turnstile> C IMP A\n 4. \\<And>A H.\n       A \\<in> equality_axioms \\<Longrightarrow>\n       H - {C} \\<turnstile> C IMP A\n 5. \\<And>A H.\n       A \\<in> special_axioms \\<Longrightarrow> H - {C} \\<turnstile> C IMP A\n 6. \\<And>H A B H'.\n       \\<lbrakk>H \\<turnstile> A IMP B; H - {C} \\<turnstile> C IMP A IMP B;\n        H' \\<turnstile> A; H' - {C} \\<turnstile> C IMP A\\<rbrakk>\n       \\<Longrightarrow> H \\<union> H' - {C} \\<turnstile> C IMP B\n 7. \\<And>H A B i.\n       \\<lbrakk>H \\<turnstile> A IMP B; H - {C} \\<turnstile> C IMP A IMP B;\n        atom i \\<sharp> B; \\<forall>C\\<in>H. atom i \\<sharp> C\\<rbrakk>\n       \\<Longrightarrow> H - {C} \\<turnstile> C IMP exi i A IMP B", "thus ?case"], ["proof (prove)\nusing this:\n  A \\<in> H\n\ngoal (1 subgoal):\n 1. H - {C} \\<turnstile> C IMP A", "by (metis Bool imp_triv_I boolean_axioms.Ident nprv.Hyp member_remove remove_def)"], ["proof (state)\nthis:\n  H - {C} \\<turnstile> C IMP A\n\ngoal (6 subgoals):\n 1. \\<And>A H.\n       A \\<in> Q_axioms \\<Longrightarrow> H - {C} \\<turnstile> C IMP A\n 2. \\<And>A H.\n       A \\<in> boolean_axioms \\<Longrightarrow> H - {C} \\<turnstile> C IMP A\n 3. \\<And>A H.\n       A \\<in> equality_axioms \\<Longrightarrow>\n       H - {C} \\<turnstile> C IMP A\n 4. \\<And>A H.\n       A \\<in> special_axioms \\<Longrightarrow> H - {C} \\<turnstile> C IMP A\n 5. \\<And>H A B H'.\n       \\<lbrakk>H \\<turnstile> A IMP B; H - {C} \\<turnstile> C IMP A IMP B;\n        H' \\<turnstile> A; H' - {C} \\<turnstile> C IMP A\\<rbrakk>\n       \\<Longrightarrow> H \\<union> H' - {C} \\<turnstile> C IMP B\n 6. \\<And>H A B i.\n       \\<lbrakk>H \\<turnstile> A IMP B; H - {C} \\<turnstile> C IMP A IMP B;\n        atom i \\<sharp> B; \\<forall>C\\<in>H. atom i \\<sharp> C\\<rbrakk>\n       \\<Longrightarrow> H - {C} \\<turnstile> C IMP exi i A IMP B", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>A H.\n       A \\<in> Q_axioms \\<Longrightarrow> H - {C} \\<turnstile> C IMP A\n 2. \\<And>A H.\n       A \\<in> boolean_axioms \\<Longrightarrow> H - {C} \\<turnstile> C IMP A\n 3. \\<And>A H.\n       A \\<in> equality_axioms \\<Longrightarrow>\n       H - {C} \\<turnstile> C IMP A\n 4. \\<And>A H.\n       A \\<in> special_axioms \\<Longrightarrow> H - {C} \\<turnstile> C IMP A\n 5. \\<And>H A B H'.\n       \\<lbrakk>H \\<turnstile> A IMP B; H - {C} \\<turnstile> C IMP A IMP B;\n        H' \\<turnstile> A; H' - {C} \\<turnstile> C IMP A\\<rbrakk>\n       \\<Longrightarrow> H \\<union> H' - {C} \\<turnstile> C IMP B\n 6. \\<And>H A B i.\n       \\<lbrakk>H \\<turnstile> A IMP B; H - {C} \\<turnstile> C IMP A IMP B;\n        atom i \\<sharp> B; \\<forall>C\\<in>H. atom i \\<sharp> C\\<rbrakk>\n       \\<Longrightarrow> H - {C} \\<turnstile> C IMP exi i A IMP B", "case (Q H)"], ["proof (state)\nthis:\n  H \\<in> Q_axioms\n\ngoal (6 subgoals):\n 1. \\<And>A H.\n       A \\<in> Q_axioms \\<Longrightarrow> H - {C} \\<turnstile> C IMP A\n 2. \\<And>A H.\n       A \\<in> boolean_axioms \\<Longrightarrow> H - {C} \\<turnstile> C IMP A\n 3. \\<And>A H.\n       A \\<in> equality_axioms \\<Longrightarrow>\n       H - {C} \\<turnstile> C IMP A\n 4. \\<And>A H.\n       A \\<in> special_axioms \\<Longrightarrow> H - {C} \\<turnstile> C IMP A\n 5. \\<And>H A B H'.\n       \\<lbrakk>H \\<turnstile> A IMP B; H - {C} \\<turnstile> C IMP A IMP B;\n        H' \\<turnstile> A; H' - {C} \\<turnstile> C IMP A\\<rbrakk>\n       \\<Longrightarrow> H \\<union> H' - {C} \\<turnstile> C IMP B\n 6. \\<And>H A B i.\n       \\<lbrakk>H \\<turnstile> A IMP B; H - {C} \\<turnstile> C IMP A IMP B;\n        atom i \\<sharp> B; \\<forall>C\\<in>H. atom i \\<sharp> C\\<rbrakk>\n       \\<Longrightarrow> H - {C} \\<turnstile> C IMP exi i A IMP B", "thus ?case"], ["proof (prove)\nusing this:\n  H \\<in> Q_axioms\n\ngoal (1 subgoal):\n 1. H_ - {C} \\<turnstile> C IMP H", "by (metis imp_triv_I nprv.Q)"], ["proof (state)\nthis:\n  H_ - {C} \\<turnstile> C IMP H\n\ngoal (5 subgoals):\n 1. \\<And>A H.\n       A \\<in> boolean_axioms \\<Longrightarrow> H - {C} \\<turnstile> C IMP A\n 2. \\<And>A H.\n       A \\<in> equality_axioms \\<Longrightarrow>\n       H - {C} \\<turnstile> C IMP A\n 3. \\<And>A H.\n       A \\<in> special_axioms \\<Longrightarrow> H - {C} \\<turnstile> C IMP A\n 4. \\<And>H A B H'.\n       \\<lbrakk>H \\<turnstile> A IMP B; H - {C} \\<turnstile> C IMP A IMP B;\n        H' \\<turnstile> A; H' - {C} \\<turnstile> C IMP A\\<rbrakk>\n       \\<Longrightarrow> H \\<union> H' - {C} \\<turnstile> C IMP B\n 5. \\<And>H A B i.\n       \\<lbrakk>H \\<turnstile> A IMP B; H - {C} \\<turnstile> C IMP A IMP B;\n        atom i \\<sharp> B; \\<forall>C\\<in>H. atom i \\<sharp> C\\<rbrakk>\n       \\<Longrightarrow> H - {C} \\<turnstile> C IMP exi i A IMP B", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>A H.\n       A \\<in> boolean_axioms \\<Longrightarrow> H - {C} \\<turnstile> C IMP A\n 2. \\<And>A H.\n       A \\<in> equality_axioms \\<Longrightarrow>\n       H - {C} \\<turnstile> C IMP A\n 3. \\<And>A H.\n       A \\<in> special_axioms \\<Longrightarrow> H - {C} \\<turnstile> C IMP A\n 4. \\<And>H A B H'.\n       \\<lbrakk>H \\<turnstile> A IMP B; H - {C} \\<turnstile> C IMP A IMP B;\n        H' \\<turnstile> A; H' - {C} \\<turnstile> C IMP A\\<rbrakk>\n       \\<Longrightarrow> H \\<union> H' - {C} \\<turnstile> C IMP B\n 5. \\<And>H A B i.\n       \\<lbrakk>H \\<turnstile> A IMP B; H - {C} \\<turnstile> C IMP A IMP B;\n        atom i \\<sharp> B; \\<forall>C\\<in>H. atom i \\<sharp> C\\<rbrakk>\n       \\<Longrightarrow> H - {C} \\<turnstile> C IMP exi i A IMP B", "case (Bool A H)"], ["proof (state)\nthis:\n  A \\<in> boolean_axioms\n\ngoal (5 subgoals):\n 1. \\<And>A H.\n       A \\<in> boolean_axioms \\<Longrightarrow> H - {C} \\<turnstile> C IMP A\n 2. \\<And>A H.\n       A \\<in> equality_axioms \\<Longrightarrow>\n       H - {C} \\<turnstile> C IMP A\n 3. \\<And>A H.\n       A \\<in> special_axioms \\<Longrightarrow> H - {C} \\<turnstile> C IMP A\n 4. \\<And>H A B H'.\n       \\<lbrakk>H \\<turnstile> A IMP B; H - {C} \\<turnstile> C IMP A IMP B;\n        H' \\<turnstile> A; H' - {C} \\<turnstile> C IMP A\\<rbrakk>\n       \\<Longrightarrow> H \\<union> H' - {C} \\<turnstile> C IMP B\n 5. \\<And>H A B i.\n       \\<lbrakk>H \\<turnstile> A IMP B; H - {C} \\<turnstile> C IMP A IMP B;\n        atom i \\<sharp> B; \\<forall>C\\<in>H. atom i \\<sharp> C\\<rbrakk>\n       \\<Longrightarrow> H - {C} \\<turnstile> C IMP exi i A IMP B", "thus ?case"], ["proof (prove)\nusing this:\n  A \\<in> boolean_axioms\n\ngoal (1 subgoal):\n 1. H - {C} \\<turnstile> C IMP A", "by (metis imp_triv_I nprv.Bool)"], ["proof (state)\nthis:\n  H - {C} \\<turnstile> C IMP A\n\ngoal (4 subgoals):\n 1. \\<And>A H.\n       A \\<in> equality_axioms \\<Longrightarrow>\n       H - {C} \\<turnstile> C IMP A\n 2. \\<And>A H.\n       A \\<in> special_axioms \\<Longrightarrow> H - {C} \\<turnstile> C IMP A\n 3. \\<And>H A B H'.\n       \\<lbrakk>H \\<turnstile> A IMP B; H - {C} \\<turnstile> C IMP A IMP B;\n        H' \\<turnstile> A; H' - {C} \\<turnstile> C IMP A\\<rbrakk>\n       \\<Longrightarrow> H \\<union> H' - {C} \\<turnstile> C IMP B\n 4. \\<And>H A B i.\n       \\<lbrakk>H \\<turnstile> A IMP B; H - {C} \\<turnstile> C IMP A IMP B;\n        atom i \\<sharp> B; \\<forall>C\\<in>H. atom i \\<sharp> C\\<rbrakk>\n       \\<Longrightarrow> H - {C} \\<turnstile> C IMP exi i A IMP B", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>A H.\n       A \\<in> equality_axioms \\<Longrightarrow>\n       H - {C} \\<turnstile> C IMP A\n 2. \\<And>A H.\n       A \\<in> special_axioms \\<Longrightarrow> H - {C} \\<turnstile> C IMP A\n 3. \\<And>H A B H'.\n       \\<lbrakk>H \\<turnstile> A IMP B; H - {C} \\<turnstile> C IMP A IMP B;\n        H' \\<turnstile> A; H' - {C} \\<turnstile> C IMP A\\<rbrakk>\n       \\<Longrightarrow> H \\<union> H' - {C} \\<turnstile> C IMP B\n 4. \\<And>H A B i.\n       \\<lbrakk>H \\<turnstile> A IMP B; H - {C} \\<turnstile> C IMP A IMP B;\n        atom i \\<sharp> B; \\<forall>C\\<in>H. atom i \\<sharp> C\\<rbrakk>\n       \\<Longrightarrow> H - {C} \\<turnstile> C IMP exi i A IMP B", "case (eql A H)"], ["proof (state)\nthis:\n  A \\<in> equality_axioms\n\ngoal (4 subgoals):\n 1. \\<And>A H.\n       A \\<in> equality_axioms \\<Longrightarrow>\n       H - {C} \\<turnstile> C IMP A\n 2. \\<And>A H.\n       A \\<in> special_axioms \\<Longrightarrow> H - {C} \\<turnstile> C IMP A\n 3. \\<And>H A B H'.\n       \\<lbrakk>H \\<turnstile> A IMP B; H - {C} \\<turnstile> C IMP A IMP B;\n        H' \\<turnstile> A; H' - {C} \\<turnstile> C IMP A\\<rbrakk>\n       \\<Longrightarrow> H \\<union> H' - {C} \\<turnstile> C IMP B\n 4. \\<And>H A B i.\n       \\<lbrakk>H \\<turnstile> A IMP B; H - {C} \\<turnstile> C IMP A IMP B;\n        atom i \\<sharp> B; \\<forall>C\\<in>H. atom i \\<sharp> C\\<rbrakk>\n       \\<Longrightarrow> H - {C} \\<turnstile> C IMP exi i A IMP B", "thus ?case"], ["proof (prove)\nusing this:\n  A \\<in> equality_axioms\n\ngoal (1 subgoal):\n 1. H - {C} \\<turnstile> C IMP A", "by (metis imp_triv_I nprv.eql)"], ["proof (state)\nthis:\n  H - {C} \\<turnstile> C IMP A\n\ngoal (3 subgoals):\n 1. \\<And>A H.\n       A \\<in> special_axioms \\<Longrightarrow> H - {C} \\<turnstile> C IMP A\n 2. \\<And>H A B H'.\n       \\<lbrakk>H \\<turnstile> A IMP B; H - {C} \\<turnstile> C IMP A IMP B;\n        H' \\<turnstile> A; H' - {C} \\<turnstile> C IMP A\\<rbrakk>\n       \\<Longrightarrow> H \\<union> H' - {C} \\<turnstile> C IMP B\n 3. \\<And>H A B i.\n       \\<lbrakk>H \\<turnstile> A IMP B; H - {C} \\<turnstile> C IMP A IMP B;\n        atom i \\<sharp> B; \\<forall>C\\<in>H. atom i \\<sharp> C\\<rbrakk>\n       \\<Longrightarrow> H - {C} \\<turnstile> C IMP exi i A IMP B", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>A H.\n       A \\<in> special_axioms \\<Longrightarrow> H - {C} \\<turnstile> C IMP A\n 2. \\<And>H A B H'.\n       \\<lbrakk>H \\<turnstile> A IMP B; H - {C} \\<turnstile> C IMP A IMP B;\n        H' \\<turnstile> A; H' - {C} \\<turnstile> C IMP A\\<rbrakk>\n       \\<Longrightarrow> H \\<union> H' - {C} \\<turnstile> C IMP B\n 3. \\<And>H A B i.\n       \\<lbrakk>H \\<turnstile> A IMP B; H - {C} \\<turnstile> C IMP A IMP B;\n        atom i \\<sharp> B; \\<forall>C\\<in>H. atom i \\<sharp> C\\<rbrakk>\n       \\<Longrightarrow> H - {C} \\<turnstile> C IMP exi i A IMP B", "case (Spec A H)"], ["proof (state)\nthis:\n  A \\<in> special_axioms\n\ngoal (3 subgoals):\n 1. \\<And>A H.\n       A \\<in> special_axioms \\<Longrightarrow> H - {C} \\<turnstile> C IMP A\n 2. \\<And>H A B H'.\n       \\<lbrakk>H \\<turnstile> A IMP B; H - {C} \\<turnstile> C IMP A IMP B;\n        H' \\<turnstile> A; H' - {C} \\<turnstile> C IMP A\\<rbrakk>\n       \\<Longrightarrow> H \\<union> H' - {C} \\<turnstile> C IMP B\n 3. \\<And>H A B i.\n       \\<lbrakk>H \\<turnstile> A IMP B; H - {C} \\<turnstile> C IMP A IMP B;\n        atom i \\<sharp> B; \\<forall>C\\<in>H. atom i \\<sharp> C\\<rbrakk>\n       \\<Longrightarrow> H - {C} \\<turnstile> C IMP exi i A IMP B", "thus ?case"], ["proof (prove)\nusing this:\n  A \\<in> special_axioms\n\ngoal (1 subgoal):\n 1. H - {C} \\<turnstile> C IMP A", "by (metis imp_triv_I nprv.Spec)"], ["proof (state)\nthis:\n  H - {C} \\<turnstile> C IMP A\n\ngoal (2 subgoals):\n 1. \\<And>H A B H'.\n       \\<lbrakk>H \\<turnstile> A IMP B; H - {C} \\<turnstile> C IMP A IMP B;\n        H' \\<turnstile> A; H' - {C} \\<turnstile> C IMP A\\<rbrakk>\n       \\<Longrightarrow> H \\<union> H' - {C} \\<turnstile> C IMP B\n 2. \\<And>H A B i.\n       \\<lbrakk>H \\<turnstile> A IMP B; H - {C} \\<turnstile> C IMP A IMP B;\n        atom i \\<sharp> B; \\<forall>C\\<in>H. atom i \\<sharp> C\\<rbrakk>\n       \\<Longrightarrow> H - {C} \\<turnstile> C IMP exi i A IMP B", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>H A B H'.\n       \\<lbrakk>H \\<turnstile> A IMP B; H - {C} \\<turnstile> C IMP A IMP B;\n        H' \\<turnstile> A; H' - {C} \\<turnstile> C IMP A\\<rbrakk>\n       \\<Longrightarrow> H \\<union> H' - {C} \\<turnstile> C IMP B\n 2. \\<And>H A B i.\n       \\<lbrakk>H \\<turnstile> A IMP B; H - {C} \\<turnstile> C IMP A IMP B;\n        atom i \\<sharp> B; \\<forall>C\\<in>H. atom i \\<sharp> C\\<rbrakk>\n       \\<Longrightarrow> H - {C} \\<turnstile> C IMP exi i A IMP B", "case (MP H A B H')"], ["proof (state)\nthis:\n  H \\<turnstile> A IMP B\n  H - {C} \\<turnstile> C IMP A IMP B\n  H' \\<turnstile> A\n  H' - {C} \\<turnstile> C IMP A\n\ngoal (2 subgoals):\n 1. \\<And>H A B H'.\n       \\<lbrakk>H \\<turnstile> A IMP B; H - {C} \\<turnstile> C IMP A IMP B;\n        H' \\<turnstile> A; H' - {C} \\<turnstile> C IMP A\\<rbrakk>\n       \\<Longrightarrow> H \\<union> H' - {C} \\<turnstile> C IMP B\n 2. \\<And>H A B i.\n       \\<lbrakk>H \\<turnstile> A IMP B; H - {C} \\<turnstile> C IMP A IMP B;\n        atom i \\<sharp> B; \\<forall>C\\<in>H. atom i \\<sharp> C\\<rbrakk>\n       \\<Longrightarrow> H - {C} \\<turnstile> C IMP exi i A IMP B", "hence \"(H-{C}) \\<union> (H'-{C}) \\<turnstile> imp C B\""], ["proof (prove)\nusing this:\n  H \\<turnstile> A IMP B\n  H - {C} \\<turnstile> C IMP A IMP B\n  H' \\<turnstile> A\n  H' - {C} \\<turnstile> C IMP A\n\ngoal (1 subgoal):\n 1. H - {C} \\<union> (H' - {C}) \\<turnstile> C IMP B", "by (simp add: S)"], ["proof (state)\nthis:\n  H - {C} \\<union> (H' - {C}) \\<turnstile> C IMP B\n\ngoal (2 subgoals):\n 1. \\<And>H A B H'.\n       \\<lbrakk>H \\<turnstile> A IMP B; H - {C} \\<turnstile> C IMP A IMP B;\n        H' \\<turnstile> A; H' - {C} \\<turnstile> C IMP A\\<rbrakk>\n       \\<Longrightarrow> H \\<union> H' - {C} \\<turnstile> C IMP B\n 2. \\<And>H A B i.\n       \\<lbrakk>H \\<turnstile> A IMP B; H - {C} \\<turnstile> C IMP A IMP B;\n        atom i \\<sharp> B; \\<forall>C\\<in>H. atom i \\<sharp> C\\<rbrakk>\n       \\<Longrightarrow> H - {C} \\<turnstile> C IMP exi i A IMP B", "thus ?case"], ["proof (prove)\nusing this:\n  H - {C} \\<union> (H' - {C}) \\<turnstile> C IMP B\n\ngoal (1 subgoal):\n 1. H \\<union> H' - {C} \\<turnstile> C IMP B", "by (metis Un_Diff)"], ["proof (state)\nthis:\n  H \\<union> H' - {C} \\<turnstile> C IMP B\n\ngoal (1 subgoal):\n 1. \\<And>H A B i.\n       \\<lbrakk>H \\<turnstile> A IMP B; H - {C} \\<turnstile> C IMP A IMP B;\n        atom i \\<sharp> B; \\<forall>C\\<in>H. atom i \\<sharp> C\\<rbrakk>\n       \\<Longrightarrow> H - {C} \\<turnstile> C IMP exi i A IMP B", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H A B i.\n       \\<lbrakk>H \\<turnstile> A IMP B; H - {C} \\<turnstile> C IMP A IMP B;\n        atom i \\<sharp> B; \\<forall>C\\<in>H. atom i \\<sharp> C\\<rbrakk>\n       \\<Longrightarrow> H - {C} \\<turnstile> C IMP exi i A IMP B", "case (exiists H A B i)"], ["proof (state)\nthis:\n  H \\<turnstile> A IMP B\n  H - {C} \\<turnstile> C IMP A IMP B\n  atom i \\<sharp> B\n  \\<forall>C\\<in>H. atom i \\<sharp> C\n\ngoal (1 subgoal):\n 1. \\<And>H A B i.\n       \\<lbrakk>H \\<turnstile> A IMP B; H - {C} \\<turnstile> C IMP A IMP B;\n        atom i \\<sharp> B; \\<forall>C\\<in>H. atom i \\<sharp> C\\<rbrakk>\n       \\<Longrightarrow> H - {C} \\<turnstile> C IMP exi i A IMP B", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. H - {C} \\<turnstile> C IMP exi i A IMP B", "proof (cases \"C \\<in> H\")"], ["proof (state)\ngoal (2 subgoals):\n 1. C \\<in> H \\<Longrightarrow> H - {C} \\<turnstile> C IMP exi i A IMP B\n 2. C \\<notin> H \\<Longrightarrow> H - {C} \\<turnstile> C IMP exi i A IMP B", "case True"], ["proof (state)\nthis:\n  C \\<in> H\n\ngoal (2 subgoals):\n 1. C \\<in> H \\<Longrightarrow> H - {C} \\<turnstile> C IMP exi i A IMP B\n 2. C \\<notin> H \\<Longrightarrow> H - {C} \\<turnstile> C IMP exi i A IMP B", "hence \"atom i \\<sharp> C\""], ["proof (prove)\nusing this:\n  C \\<in> H\n\ngoal (1 subgoal):\n 1. atom i \\<sharp> C", "using exiists"], ["proof (prove)\nusing this:\n  C \\<in> H\n  H \\<turnstile> A IMP B\n  H - {C} \\<turnstile> C IMP A IMP B\n  atom i \\<sharp> B\n  \\<forall>C\\<in>H. atom i \\<sharp> C\n\ngoal (1 subgoal):\n 1. atom i \\<sharp> C", "by auto"], ["proof (state)\nthis:\n  atom i \\<sharp> C\n\ngoal (2 subgoals):\n 1. C \\<in> H \\<Longrightarrow> H - {C} \\<turnstile> C IMP exi i A IMP B\n 2. C \\<notin> H \\<Longrightarrow> H - {C} \\<turnstile> C IMP exi i A IMP B", "moreover"], ["proof (state)\nthis:\n  atom i \\<sharp> C\n\ngoal (2 subgoals):\n 1. C \\<in> H \\<Longrightarrow> H - {C} \\<turnstile> C IMP exi i A IMP B\n 2. C \\<notin> H \\<Longrightarrow> H - {C} \\<turnstile> C IMP exi i A IMP B", "have \"H - {C} \\<turnstile> A IMP C IMP B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H - {C} \\<turnstile> A IMP C IMP B", "using exiists"], ["proof (prove)\nusing this:\n  H \\<turnstile> A IMP B\n  H - {C} \\<turnstile> C IMP A IMP B\n  atom i \\<sharp> B\n  \\<forall>C\\<in>H. atom i \\<sharp> C\n\ngoal (1 subgoal):\n 1. H - {C} \\<turnstile> A IMP C IMP B", "by (metis imp_imp_commute)"], ["proof (state)\nthis:\n  H - {C} \\<turnstile> A IMP C IMP B\n\ngoal (2 subgoals):\n 1. C \\<in> H \\<Longrightarrow> H - {C} \\<turnstile> C IMP exi i A IMP B\n 2. C \\<notin> H \\<Longrightarrow> H - {C} \\<turnstile> C IMP exi i A IMP B", "ultimately"], ["proof (chain)\npicking this:\n  atom i \\<sharp> C\n  H - {C} \\<turnstile> A IMP C IMP B", "have \"H - {C} \\<turnstile> (exi i A) IMP C IMP B\""], ["proof (prove)\nusing this:\n  atom i \\<sharp> C\n  H - {C} \\<turnstile> A IMP C IMP B\n\ngoal (1 subgoal):\n 1. H - {C} \\<turnstile> exi i A IMP C IMP B", "using exiists"], ["proof (prove)\nusing this:\n  atom i \\<sharp> C\n  H - {C} \\<turnstile> A IMP C IMP B\n  H \\<turnstile> A IMP B\n  H - {C} \\<turnstile> C IMP A IMP B\n  atom i \\<sharp> B\n  \\<forall>C\\<in>H. atom i \\<sharp> C\n\ngoal (1 subgoal):\n 1. H - {C} \\<turnstile> exi i A IMP C IMP B", "using nprv.eql"], ["proof (prove)\nusing this:\n  atom i \\<sharp> C\n  H - {C} \\<turnstile> A IMP C IMP B\n  H \\<turnstile> A IMP B\n  H - {C} \\<turnstile> C IMP A IMP B\n  atom i \\<sharp> B\n  \\<forall>C\\<in>H. atom i \\<sharp> C\n  ?A \\<in> equality_axioms \\<Longrightarrow> ?H \\<turnstile> ?A\n\ngoal (1 subgoal):\n 1. H - {C} \\<turnstile> exi i A IMP C IMP B", "by (simp add: nprv.exiists)"], ["proof (state)\nthis:\n  H - {C} \\<turnstile> exi i A IMP C IMP B\n\ngoal (2 subgoals):\n 1. C \\<in> H \\<Longrightarrow> H - {C} \\<turnstile> C IMP exi i A IMP B\n 2. C \\<notin> H \\<Longrightarrow> H - {C} \\<turnstile> C IMP exi i A IMP B", "thus ?thesis"], ["proof (prove)\nusing this:\n  H - {C} \\<turnstile> exi i A IMP C IMP B\n\ngoal (1 subgoal):\n 1. H - {C} \\<turnstile> C IMP exi i A IMP B", "by (metis imp_imp_commute)"], ["proof (state)\nthis:\n  H - {C} \\<turnstile> C IMP exi i A IMP B\n\ngoal (1 subgoal):\n 1. C \\<notin> H \\<Longrightarrow> H - {C} \\<turnstile> C IMP exi i A IMP B", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. C \\<notin> H \\<Longrightarrow> H - {C} \\<turnstile> C IMP exi i A IMP B", "case False"], ["proof (state)\nthis:\n  C \\<notin> H\n\ngoal (1 subgoal):\n 1. C \\<notin> H \\<Longrightarrow> H - {C} \\<turnstile> C IMP exi i A IMP B", "hence \"H - {C} = H\""], ["proof (prove)\nusing this:\n  C \\<notin> H\n\ngoal (1 subgoal):\n 1. H - {C} = H", "by auto"], ["proof (state)\nthis:\n  H - {C} = H\n\ngoal (1 subgoal):\n 1. C \\<notin> H \\<Longrightarrow> H - {C} \\<turnstile> C IMP exi i A IMP B", "thus ?thesis"], ["proof (prove)\nusing this:\n  H - {C} = H\n\ngoal (1 subgoal):\n 1. H - {C} \\<turnstile> C IMP exi i A IMP B", "using exiists"], ["proof (prove)\nusing this:\n  H - {C} = H\n  H \\<turnstile> A IMP B\n  H - {C} \\<turnstile> C IMP A IMP B\n  atom i \\<sharp> B\n  \\<forall>C\\<in>H. atom i \\<sharp> C\n\ngoal (1 subgoal):\n 1. H - {C} \\<turnstile> C IMP exi i A IMP B", "by (metis imp_triv_I nprv.exiists)"], ["proof (state)\nthis:\n  H - {C} \\<turnstile> C IMP exi i A IMP B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  H - {C} \\<turnstile> C IMP exi i A IMP B\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem imp_I [intro!]: \"insert A H \\<turnstile> B \\<Longrightarrow> H \\<turnstile> A IMP B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert A H \\<turnstile> B \\<Longrightarrow> H \\<turnstile> A IMP B", "by (metis Diff_insert_absorb imp_triv_I deduction_Diff insert_absorb)"], ["", "lemma anti_deduction: \"H \\<turnstile> A IMP B \\<Longrightarrow> insert A H \\<turnstile> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<turnstile> A IMP B \\<Longrightarrow> insert A H \\<turnstile> B", "by (metis Assume MP_same thin1)"], ["", "subsection\\<open>Cut rules\\<close>"], ["", "lemma cut:  \"H \\<turnstile> A \\<Longrightarrow> insert A H' \\<turnstile> B \\<Longrightarrow> H \\<union> H' \\<turnstile> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<turnstile> A; insert A H' \\<turnstile> B\\<rbrakk>\n    \\<Longrightarrow> H \\<union> H' \\<turnstile> B", "by (metis MP Un_commute imp_I)"], ["", "lemma cut_same: \"H \\<turnstile> A \\<Longrightarrow> insert A H \\<turnstile> B \\<Longrightarrow> H \\<turnstile> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<turnstile> A; insert A H \\<turnstile> B\\<rbrakk>\n    \\<Longrightarrow> H \\<turnstile> B", "by (metis Un_absorb cut)"], ["", "lemma cut_thin: \"HA \\<turnstile> A \\<Longrightarrow> insert A HB \\<turnstile> B \\<Longrightarrow> HA \\<union> HB \\<subseteq> H \\<Longrightarrow> H \\<turnstile> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>HA \\<turnstile> A; insert A HB \\<turnstile> B;\n     HA \\<union> HB \\<subseteq> H\\<rbrakk>\n    \\<Longrightarrow> H \\<turnstile> B", "by (metis thin cut)"], ["", "lemma cut0: \"{} \\<turnstile> A \\<Longrightarrow> insert A H \\<turnstile> B \\<Longrightarrow> H \\<turnstile> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>{} \\<turnstile> A; insert A H \\<turnstile> B\\<rbrakk>\n    \\<Longrightarrow> H \\<turnstile> B", "by (metis cut_same thin0)"], ["", "lemma cut1: \"{A} \\<turnstile> B \\<Longrightarrow> H \\<turnstile> A \\<Longrightarrow> H \\<turnstile> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>{A} \\<turnstile> B; H \\<turnstile> A\\<rbrakk>\n    \\<Longrightarrow> H \\<turnstile> B", "by (metis cut sup_bot_right)"], ["", "lemma rcut1: \"{A} \\<turnstile> B \\<Longrightarrow> insert B H \\<turnstile> C \\<Longrightarrow> insert A H \\<turnstile> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>{A} \\<turnstile> B; insert B H \\<turnstile> C\\<rbrakk>\n    \\<Longrightarrow> insert A H \\<turnstile> C", "by (metis Assume cut1 cut_same rotate2 thin1)"], ["", "lemma cut2: \"\\<lbrakk>{A,B} \\<turnstile> C; H \\<turnstile> A; H \\<turnstile> B\\<rbrakk> \\<Longrightarrow> H \\<turnstile> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>{A, B} \\<turnstile> C; H \\<turnstile> A;\n     H \\<turnstile> B\\<rbrakk>\n    \\<Longrightarrow> H \\<turnstile> C", "by (metis Un_empty_right Un_insert_right cut cut_same)"], ["", "lemma rcut2: \"{A,B} \\<turnstile> C \\<Longrightarrow> insert C H \\<turnstile> D \\<Longrightarrow> H \\<turnstile> B \\<Longrightarrow> insert A H \\<turnstile> D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>{A, B} \\<turnstile> C; insert C H \\<turnstile> D;\n     H \\<turnstile> B\\<rbrakk>\n    \\<Longrightarrow> insert A H \\<turnstile> D", "by (metis Assume cut2 cut_same insert_commute thin1)"], ["", "lemma cut3: \"\\<lbrakk>{A,B,C} \\<turnstile> D; H \\<turnstile> A; H \\<turnstile> B; H \\<turnstile> C\\<rbrakk> \\<Longrightarrow> H \\<turnstile> D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>{A, B, C} \\<turnstile> D; H \\<turnstile> A; H \\<turnstile> B;\n     H \\<turnstile> C\\<rbrakk>\n    \\<Longrightarrow> H \\<turnstile> D", "by (metis MP_same cut2 imp_I)"], ["", "lemma cut4: \"\\<lbrakk>{A,B,C,D} \\<turnstile> E; H \\<turnstile> A; H \\<turnstile> B; H \\<turnstile> C; H \\<turnstile> D\\<rbrakk> \\<Longrightarrow> H \\<turnstile> E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>{A, B, C, D} \\<turnstile> E; H \\<turnstile> A;\n     H \\<turnstile> B; H \\<turnstile> C; H \\<turnstile> D\\<rbrakk>\n    \\<Longrightarrow> H \\<turnstile> E", "by (metis MP_same cut3 [of B C D] imp_I)"], ["", "section\\<open>Miscellaneous Logical Rules\\<close>"], ["", "lemma dsj_I1: \"H \\<turnstile> A \\<Longrightarrow> H \\<turnstile> A OR B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<turnstile> A \\<Longrightarrow> H \\<turnstile> A OR B", "by (metis Bool MP_same boolean_axioms.dsjI1)"], ["", "lemma dsj_I2: \"H \\<turnstile> B \\<Longrightarrow> H \\<turnstile> A OR B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<turnstile> B \\<Longrightarrow> H \\<turnstile> A OR B", "by (metis dsj_commute dsj_I1)"], ["", "lemma Peirce: \"H \\<turnstile> (neg A) IMP A \\<Longrightarrow> H \\<turnstile> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<turnstile> neg A IMP A \\<Longrightarrow> H \\<turnstile> A", "using dsjcnj [of \"neg A\" A A]  dsjCont [of A]"], ["proof (prove)\nusing this:\n  (A IMP A) IMP (neg A IMP A) IMP A OR A \\<in> boolean_axioms\n  A OR A IMP A \\<in> boolean_axioms\n\ngoal (1 subgoal):\n 1. H \\<turnstile> neg A IMP A \\<Longrightarrow> H \\<turnstile> A", "by (metis Bool MP_same boolean_axioms.Ident)"], ["", "lemma Contra: \"insert (neg A) H \\<turnstile> A \\<Longrightarrow> H \\<turnstile> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (neg A) H \\<turnstile> A \\<Longrightarrow> H \\<turnstile> A", "by (metis Peirce imp_I)"], ["", "lemma imp_neg_I: \"H \\<turnstile> A IMP B \\<Longrightarrow> H \\<turnstile> A IMP (neg B) \\<Longrightarrow> H \\<turnstile> neg A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<turnstile> A IMP B; H \\<turnstile> A IMP neg B\\<rbrakk>\n    \\<Longrightarrow> H \\<turnstile> neg A", "by (metis dsjcnj [of B \"neg A\" \"neg A\"] dsjCont Bool dsj_commute MP_same)"], ["", "lemma negneg_I: \"H \\<turnstile> A \\<Longrightarrow> H \\<turnstile> neg (neg A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<turnstile> A \\<Longrightarrow> H \\<turnstile> neg (neg A)", "using dsjcnj [of \"neg (neg A)\" \"neg A\" \"neg (neg A)\"]"], ["proof (prove)\nusing this:\n  (neg A IMP neg A) IMP (neg (neg A) IMP neg (neg A)) IMP A IMP neg (neg A)\n  \\<in> boolean_axioms\n\ngoal (1 subgoal):\n 1. H \\<turnstile> A \\<Longrightarrow> H \\<turnstile> neg (neg A)", "by (metis Bool Ident MP_same)"], ["", "lemma negneg_D: \"H \\<turnstile> neg (neg A) \\<Longrightarrow> H \\<turnstile> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<turnstile> neg (neg A) \\<Longrightarrow> H \\<turnstile> A", "by (metis dsj_I1 Peirce)"], ["", "lemma neg_D: \"H \\<turnstile> neg A \\<Longrightarrow> H \\<turnstile> A \\<Longrightarrow> H \\<turnstile> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<turnstile> neg A; H \\<turnstile> A\\<rbrakk>\n    \\<Longrightarrow> H \\<turnstile> B", "by (metis imp_neg_I imp_triv_I negneg_D)"], ["", "lemma dsj_neg_1: \"H \\<turnstile> A OR B \\<Longrightarrow> H \\<turnstile> neg B \\<Longrightarrow> H \\<turnstile> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<turnstile> A OR B; H \\<turnstile> neg B\\<rbrakk>\n    \\<Longrightarrow> H \\<turnstile> A", "by (metis dsj_I1 dsj_Semicong_1 dsj_commute Peirce)"], ["", "lemma dsj_neg_2: \"H \\<turnstile> A OR B \\<Longrightarrow> H \\<turnstile> neg A \\<Longrightarrow> H \\<turnstile> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<turnstile> A OR B; H \\<turnstile> neg A\\<rbrakk>\n    \\<Longrightarrow> H \\<turnstile> B", "by (metis dsj_neg_1 dsj_commute)"], ["", "lemma neg_dsj_I: \"H \\<turnstile> neg A \\<Longrightarrow> H \\<turnstile> neg B \\<Longrightarrow> H \\<turnstile> neg (A OR B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<turnstile> neg A; H \\<turnstile> neg B\\<rbrakk>\n    \\<Longrightarrow> H \\<turnstile> neg (A OR B)", "by (metis Bool dsj_neg_1 MP_same boolean_axioms.Ident dsjAssoc)"], ["", "lemma cnj_I [intro!]: \"H \\<turnstile> A \\<Longrightarrow> H \\<turnstile> B \\<Longrightarrow> H \\<turnstile> A AND B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<turnstile> A; H \\<turnstile> B\\<rbrakk>\n    \\<Longrightarrow> H \\<turnstile> A AND B", "by (metis cnj_def negneg_I neg_dsj_I)"], ["", "lemma cnj_E1: \"H \\<turnstile> A AND B \\<Longrightarrow> H \\<turnstile> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<turnstile> A AND B \\<Longrightarrow> H \\<turnstile> A", "by (metis cnj_def Bool dsj_neg_1 negneg_D boolean_axioms.dsjI1)"], ["", "lemma cnj_E2: \"H \\<turnstile> A AND B \\<Longrightarrow> H \\<turnstile> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<turnstile> A AND B \\<Longrightarrow> H \\<turnstile> B", "by (metis cnj_def Bool dsj_I2 dsj_neg_2 MP_same dsjAssoc Ident)"], ["", "lemma cnj_commute: \"H \\<turnstile> B AND A \\<Longrightarrow> H \\<turnstile> A AND B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<turnstile> B AND A \\<Longrightarrow> H \\<turnstile> A AND B", "by (metis cnj_E1 cnj_E2 cnj_I)"], ["", "lemma cnj_E: assumes \"insert A (insert B H) \\<turnstile> C\" shows \"insert (A AND B) H \\<turnstile> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (A AND B) H \\<turnstile> C", "apply (rule cut_same [where A=A], metis cnj_E1 Hyp insertI1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. insert A (insert (A AND B) H) \\<turnstile> C", "by (metis (full_types) AssumeH(2) cnj_E2 assms cut_same [where A=B] insert_commute thin2)"], ["", "lemmas cnj_EH = cnj_E cnj_E [THEN rotate2] cnj_E [THEN rotate3] cnj_E [THEN rotate4] cnj_E [THEN rotate5]\n                 cnj_E [THEN rotate6] cnj_E [THEN rotate7] cnj_E [THEN rotate8] cnj_E [THEN rotate9] cnj_E [THEN rotate10]"], ["", "declare cnj_EH [intro!]"], ["", "lemma neg_I0: assumes \"(\\<And>B. atom i \\<sharp> B \\<Longrightarrow> insert A H \\<turnstile> B)\" shows \"H \\<turnstile> neg A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<turnstile> neg A", "by (meson fls_fresh imp_I imp_neg_I assms fmla.fresh(3))"], ["", "lemma neg_mono: \"insert A H \\<turnstile> B \\<Longrightarrow> insert (neg B) H \\<turnstile> neg A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert A H \\<turnstile> B \\<Longrightarrow>\n    insert (neg B) H \\<turnstile> neg A", "by (rule neg_I0) (metis Hyp neg_D insert_commute insertI1 thin1)"], ["", "lemma cnj_mono: \"insert A H \\<turnstile> B \\<Longrightarrow> insert C H \\<turnstile> D \\<Longrightarrow> insert (A AND C) H \\<turnstile> B AND D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>insert A H \\<turnstile> B; insert C H \\<turnstile> D\\<rbrakk>\n    \\<Longrightarrow> insert (A AND C) H \\<turnstile> B AND D", "by (metis cnj_E1 cnj_E2 cnj_I Hyp Un_absorb2 cut insertI1 subset_insertI)"], ["", "lemma dsj_mono:\n  assumes \"insert A H \\<turnstile> B\" \"insert C H \\<turnstile> D\" shows \"insert (A OR C) H \\<turnstile> B OR D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (A OR C) H \\<turnstile> B OR D", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. insert (A OR C) H \\<turnstile> B OR D", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. insert (A OR C) H \\<turnstile> B OR D", "fix A B C H"], ["proof (state)\ngoal (1 subgoal):\n 1. insert (A OR C) H \\<turnstile> B OR D", "have \"insert (A OR C) H \\<turnstile> (A IMP B) IMP C OR B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (A OR C) H \\<turnstile> (A IMP B) IMP C OR B", "by (metis Bool Hyp MP_same boolean_axioms.dsjcnj insertI1)"], ["proof (state)\nthis:\n  insert (A OR C) H \\<turnstile> (A IMP B) IMP C OR B\n\ngoal (1 subgoal):\n 1. insert (A OR C) H \\<turnstile> B OR D", "hence \"insert A H \\<turnstile> B \\<Longrightarrow> insert (A OR C) H \\<turnstile> C OR B\""], ["proof (prove)\nusing this:\n  insert (A OR C) H \\<turnstile> (A IMP B) IMP C OR B\n\ngoal (1 subgoal):\n 1. insert A H \\<turnstile> B \\<Longrightarrow>\n    insert (A OR C) H \\<turnstile> C OR B", "by (metis MP_same Un_absorb Un_insert_right imp_I thin_Un)"], ["proof (state)\nthis:\n  insert A H \\<turnstile> B \\<Longrightarrow>\n  insert (A OR C) H \\<turnstile> C OR B\n\ngoal (1 subgoal):\n 1. insert (A OR C) H \\<turnstile> B OR D", "}"], ["proof (state)\nthis:\n  insert ?Aa2 ?Ha2 \\<turnstile> ?Ba2 \\<Longrightarrow>\n  insert (?Aa2 OR ?Ca2) ?Ha2 \\<turnstile> ?Ca2 OR ?Ba2\n\ngoal (1 subgoal):\n 1. insert (A OR C) H \\<turnstile> B OR D", "thus ?thesis"], ["proof (prove)\nusing this:\n  insert ?Aa2 ?Ha2 \\<turnstile> ?Ba2 \\<Longrightarrow>\n  insert (?Aa2 OR ?Ca2) ?Ha2 \\<turnstile> ?Ca2 OR ?Ba2\n\ngoal (1 subgoal):\n 1. insert (A OR C) H \\<turnstile> B OR D", "by (metis cut_same assms thin2)"], ["proof (state)\nthis:\n  insert (A OR C) H \\<turnstile> B OR D\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dsj_E:\n  assumes A: \"insert A H \\<turnstile> C\" and B: \"insert B H \\<turnstile> C\" shows \"insert (A OR B) H \\<turnstile> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (A OR B) H \\<turnstile> C", "by (metis A B dsj_mono negneg_I Peirce)"], ["", "lemmas dsj_EH = dsj_E dsj_E [THEN rotate2] dsj_E [THEN rotate3] dsj_E [THEN rotate4] dsj_E [THEN rotate5]\n                 dsj_E [THEN rotate6] dsj_E [THEN rotate7] dsj_E [THEN rotate8] dsj_E [THEN rotate9] dsj_E [THEN rotate10]"], ["", "declare dsj_EH [intro!]"], ["", "lemma Contra': \"insert A H \\<turnstile> neg A \\<Longrightarrow> H \\<turnstile> neg A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert A H \\<turnstile> neg A \\<Longrightarrow> H \\<turnstile> neg A", "by (metis Contra neg_mono)"], ["", "lemma negneg_E [intro!]: \"insert A H \\<turnstile> B \\<Longrightarrow> insert (neg (neg A)) H \\<turnstile> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert A H \\<turnstile> B \\<Longrightarrow>\n    insert (neg (neg A)) H \\<turnstile> B", "by (metis negneg_D neg_mono)"], ["", "declare negneg_E [THEN rotate2, intro!]"], ["", "declare negneg_E [THEN rotate3, intro!]"], ["", "declare negneg_E [THEN rotate4, intro!]"], ["", "declare negneg_E [THEN rotate5, intro!]"], ["", "declare negneg_E [THEN rotate6, intro!]"], ["", "declare negneg_E [THEN rotate7, intro!]"], ["", "declare negneg_E [THEN rotate8, intro!]"], ["", "lemma imp_E:\n  assumes A: \"H \\<turnstile> A\" and B: \"insert B H \\<turnstile> C\" shows \"insert (A IMP B) H \\<turnstile> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (A IMP B) H \\<turnstile> C", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. insert (A IMP B) H \\<turnstile> C", "have \"insert (A IMP B) H \\<turnstile> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (A IMP B) H \\<turnstile> B", "by (metis Hyp A thin1 MP_same insertI1)"], ["proof (state)\nthis:\n  insert (A IMP B) H \\<turnstile> B\n\ngoal (1 subgoal):\n 1. insert (A IMP B) H \\<turnstile> C", "thus ?thesis"], ["proof (prove)\nusing this:\n  insert (A IMP B) H \\<turnstile> B\n\ngoal (1 subgoal):\n 1. insert (A IMP B) H \\<turnstile> C", "by (metis cut [where B=C] Un_insert_right sup_commute sup_idem B)"], ["proof (state)\nthis:\n  insert (A IMP B) H \\<turnstile> C\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma imp_cut:\n  assumes \"insert C H \\<turnstile> A IMP B\" \"{A} \\<turnstile> C\"\n    shows \"H \\<turnstile> A IMP B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<turnstile> A IMP B", "by (metis Contra dsj_I1 neg_mono assms rcut1)"], ["", "lemma Iff_I [intro!]: \"insert A H \\<turnstile> B \\<Longrightarrow> insert B H \\<turnstile> A \\<Longrightarrow> H \\<turnstile> A IFF B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>insert A H \\<turnstile> B; insert B H \\<turnstile> A\\<rbrakk>\n    \\<Longrightarrow> H \\<turnstile> A IFF B", "by (metis Iff_def cnj_I imp_I)"], ["", "lemma Iff_MP_same: \"H \\<turnstile> A IFF B \\<Longrightarrow> H \\<turnstile> A \\<Longrightarrow> H \\<turnstile> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<turnstile> A IFF B; H \\<turnstile> A\\<rbrakk>\n    \\<Longrightarrow> H \\<turnstile> B", "by (metis Iff_def cnj_E1 MP_same)"], ["", "lemma Iff_MP2_same: \"H \\<turnstile> A IFF B \\<Longrightarrow> H \\<turnstile> B \\<Longrightarrow> H \\<turnstile> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<turnstile> A IFF B; H \\<turnstile> B\\<rbrakk>\n    \\<Longrightarrow> H \\<turnstile> A", "by (metis Iff_def cnj_E2 MP_same)"], ["", "lemma Iff_refl [intro!]: \"H \\<turnstile> A IFF A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<turnstile> A IFF A", "by (metis Hyp Iff_I insertI1)"], ["", "lemma Iff_sym: \"H \\<turnstile> A IFF B \\<Longrightarrow> H \\<turnstile> B IFF A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<turnstile> A IFF B \\<Longrightarrow> H \\<turnstile> B IFF A", "by (metis Iff_def cnj_commute)"], ["", "lemma Iff_trans: \"H \\<turnstile> A IFF B \\<Longrightarrow> H \\<turnstile> B IFF C \\<Longrightarrow> H \\<turnstile> A IFF C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<turnstile> A IFF B; H \\<turnstile> B IFF C\\<rbrakk>\n    \\<Longrightarrow> H \\<turnstile> A IFF C", "unfolding Iff_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<turnstile> (A IMP B) AND (B IMP A);\n     H \\<turnstile> (B IMP C) AND (C IMP B)\\<rbrakk>\n    \\<Longrightarrow> H \\<turnstile> (A IMP C) AND (C IMP A)", "by (metis cnj_E1 cnj_E2 cnj_I dsj_Semicong_1 dsj_commute)"], ["", "lemma Iff_E:\n  \"insert A (insert B H) \\<turnstile> C \\<Longrightarrow> insert (neg A) (insert (neg B) H) \\<turnstile> C \\<Longrightarrow> insert (A IFF B) H \\<turnstile> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>insert A (insert B H) \\<turnstile> C;\n     insert (neg A) (insert (neg B) H) \\<turnstile> C\\<rbrakk>\n    \\<Longrightarrow> insert (A IFF B) H \\<turnstile> C", "by (simp add: Assume Iff_def anti_deduction cnj_E dsj_EH(2) dsj_I1 insert_commute)"], ["", "lemma Iff_E1:\n  assumes A: \"H \\<turnstile> A\" and B: \"insert B H \\<turnstile> C\" shows \"insert (A IFF B) H \\<turnstile> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (A IFF B) H \\<turnstile> C", "by (metis Iff_def A B cnj_E imp_E insert_commute thin1)"], ["", "lemma Iff_E2:\n  assumes A: \"H \\<turnstile> A\" and B: \"insert B H \\<turnstile> C\" shows \"insert (B IFF A) H \\<turnstile> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (B IFF A) H \\<turnstile> C", "by (metis Iff_def A B Bool cnj_E2 cnj_mono imp_E boolean_axioms.Ident)"], ["", "lemma Iff_MP_left: \"H \\<turnstile> A IFF B \\<Longrightarrow> insert A H \\<turnstile> C \\<Longrightarrow> insert B H \\<turnstile> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<turnstile> A IFF B; insert A H \\<turnstile> C\\<rbrakk>\n    \\<Longrightarrow> insert B H \\<turnstile> C", "by (metis Hyp Iff_E2 cut_same insertI1 insert_commute thin1)"], ["", "lemma Iff_MP_left': \"H \\<turnstile> A IFF B \\<Longrightarrow> insert B H \\<turnstile> C \\<Longrightarrow> insert A H \\<turnstile> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<turnstile> A IFF B; insert B H \\<turnstile> C\\<rbrakk>\n    \\<Longrightarrow> insert A H \\<turnstile> C", "by (metis Iff_MP_left Iff_sym)"], ["", "lemma Swap: \"insert (neg B) H \\<turnstile> A \\<Longrightarrow> insert (neg A) H \\<turnstile> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (neg B) H \\<turnstile> A \\<Longrightarrow>\n    insert (neg A) H \\<turnstile> B", "by (metis negneg_D neg_mono)"], ["", "lemma Cases: \"insert A H \\<turnstile> B \\<Longrightarrow> insert (neg A) H \\<turnstile> B \\<Longrightarrow> H \\<turnstile> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>insert A H \\<turnstile> B;\n     insert (neg A) H \\<turnstile> B\\<rbrakk>\n    \\<Longrightarrow> H \\<turnstile> B", "by (metis Contra neg_D neg_mono)"], ["", "lemma neg_cnj_E: \"H \\<turnstile> B \\<Longrightarrow> insert (neg A) H \\<turnstile> C \\<Longrightarrow> insert (neg (A AND B)) H \\<turnstile> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<turnstile> B; insert (neg A) H \\<turnstile> C\\<rbrakk>\n    \\<Longrightarrow> insert (neg (A AND B)) H \\<turnstile> C", "by (metis cnj_I Swap thin1)"], ["", "lemma dsj_CI: \"insert (neg B) H \\<turnstile> A \\<Longrightarrow> H \\<turnstile> A OR B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (neg B) H \\<turnstile> A \\<Longrightarrow> H \\<turnstile> A OR B", "by (metis Contra dsj_I1 dsj_I2 Swap)"], ["", "lemma dsj_3I: \"insert (neg A) (insert (neg C) H) \\<turnstile> B \\<Longrightarrow> H \\<turnstile> A OR B OR C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (neg A) (insert (neg C) H) \\<turnstile> B \\<Longrightarrow>\n    H \\<turnstile> A OR B OR C", "by (metis dsj_CI dsj_commute insert_commute)"], ["", "lemma Contrapos1: \"H \\<turnstile> A IMP B \\<Longrightarrow> H \\<turnstile> neg B IMP neg A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<turnstile> A IMP B \\<Longrightarrow> H \\<turnstile> neg B IMP neg A", "by (metis Bool MP_same boolean_axioms.dsjcnj boolean_axioms.Ident)"], ["", "lemma Contrapos2: \"H \\<turnstile> (neg B) IMP (neg A) \\<Longrightarrow> H \\<turnstile> A IMP B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<turnstile> neg B IMP neg A \\<Longrightarrow> H \\<turnstile> A IMP B", "by (metis Bool MP_same boolean_axioms.dsjcnj boolean_axioms.Ident)"], ["", "lemma ContraAssumeN [intro]: \"B \\<in> H \\<Longrightarrow> insert (neg B) H \\<turnstile> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<in> H \\<Longrightarrow> insert (neg B) H \\<turnstile> A", "by (metis Hyp Swap thin1)"], ["", "lemma ContraAssume: \"neg B \\<in> H \\<Longrightarrow> insert B H \\<turnstile> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. neg B \\<in> H \\<Longrightarrow> insert B H \\<turnstile> A", "by (metis dsj_I1 Hyp anti_deduction)"], ["", "lemma ContraProve: \"H \\<turnstile> B \\<Longrightarrow> insert (neg B) H \\<turnstile> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<turnstile> B \\<Longrightarrow> insert (neg B) H \\<turnstile> A", "by (metis Swap thin1)"], ["", "lemma dsj_IE1: \"insert B H \\<turnstile> C \\<Longrightarrow> insert (A OR B) H \\<turnstile> A OR C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert B H \\<turnstile> C \\<Longrightarrow>\n    insert (A OR B) H \\<turnstile> A OR C", "by (metis Assume dsj_mono)"], ["", "lemmas dsj_IE1H = dsj_IE1 dsj_IE1 [THEN rotate2] dsj_IE1 [THEN rotate3] dsj_IE1 [THEN rotate4] dsj_IE1 [THEN rotate5]\n                 dsj_IE1 [THEN rotate6] dsj_IE1 [THEN rotate7] dsj_IE1 [THEN rotate8]"], ["", "declare dsj_IE1H [intro!]"], ["", "subsection\\<open>Quantifier reasoning\\<close>"], ["", "lemma exi_I: \"H \\<turnstile> A(i::=x) \\<Longrightarrow> H \\<turnstile> exi i A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<turnstile> A(i::=x) \\<Longrightarrow> H \\<turnstile> exi i A", "by (metis MP_same Spec special_axioms.intros)"], ["", "lemma exi_E:\n  assumes \"insert A H \\<turnstile> B\" \"atom i \\<sharp> B\" \"\\<forall>C \\<in> H. atom i \\<sharp> C\"\n  shows \"insert (exi i A) H \\<turnstile> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (exi i A) H \\<turnstile> B", "by (metis exiists imp_I anti_deduction assms)"], ["", "lemma exi_E_with_renaming:\n  assumes \"insert ((i \\<leftrightarrow> i') \\<bullet> A) H \\<turnstile> B\" \"atom i' \\<sharp> (A,i,B)\" \"\\<forall>C \\<in> H. atom i' \\<sharp> C\"\n  shows \"insert (exi i A) H \\<turnstile> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (exi i A) H \\<turnstile> B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. insert (exi i A) H \\<turnstile> B", "have \"exi i A = exi i' ((i \\<leftrightarrow> i') \\<bullet> A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exi i A = exi i' ((i \\<leftrightarrow> i') \\<bullet> A)", "using assms"], ["proof (prove)\nusing this:\n  insert ((i \\<leftrightarrow> i') \\<bullet> A) H \\<turnstile> B\n  atom i' \\<sharp> (A, i, B)\n  \\<forall>C\\<in>H. atom i' \\<sharp> C\n\ngoal (1 subgoal):\n 1. exi i A = exi i' ((i \\<leftrightarrow> i') \\<bullet> A)", "using flip_subst_fmla"], ["proof (prove)\nusing this:\n  insert ((i \\<leftrightarrow> i') \\<bullet> A) H \\<turnstile> B\n  atom i' \\<sharp> (A, i, B)\n  \\<forall>C\\<in>H. atom i' \\<sharp> C\n  atom ?y \\<sharp> ?\\<phi> \\<Longrightarrow>\n  (?x \\<leftrightarrow> ?y) \\<bullet> ?\\<phi> = ?\\<phi>(?x::=Var ?y)\n\ngoal (1 subgoal):\n 1. exi i A = exi i' ((i \\<leftrightarrow> i') \\<bullet> A)", "by auto"], ["proof (state)\nthis:\n  exi i A = exi i' ((i \\<leftrightarrow> i') \\<bullet> A)\n\ngoal (1 subgoal):\n 1. insert (exi i A) H \\<turnstile> B", "thus ?thesis"], ["proof (prove)\nusing this:\n  exi i A = exi i' ((i \\<leftrightarrow> i') \\<bullet> A)\n\ngoal (1 subgoal):\n 1. insert (exi i A) H \\<turnstile> B", "by (metis exi_E assms fresh_Pair)"], ["proof (state)\nthis:\n  insert (exi i A) H \\<turnstile> B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas exi_EH = exi_E exi_E [THEN rotate2] exi_E [THEN rotate3] exi_E [THEN rotate4] exi_E [THEN rotate5]\n                 exi_E [THEN rotate6] exi_E [THEN rotate7] exi_E [THEN rotate8] exi_E [THEN rotate9] exi_E [THEN rotate10]"], ["", "declare exi_EH [intro!]"], ["", "lemma exi_mono: \"insert A H \\<turnstile> B \\<Longrightarrow> \\<forall>C \\<in> H. atom i \\<sharp> C \\<Longrightarrow> insert (exi i A) H \\<turnstile> (exi i B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>insert A H \\<turnstile> B;\n     \\<forall>C\\<in>H. atom i \\<sharp> C\\<rbrakk>\n    \\<Longrightarrow> insert (exi i A) H \\<turnstile> exi i B", "by (auto simp add: intro: exi_I [where x=\"Var i\"])"], ["", "lemma all_I [intro!]: \"H \\<turnstile> A \\<Longrightarrow> \\<forall>C \\<in> H. atom i \\<sharp> C \\<Longrightarrow> H \\<turnstile> all i A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<turnstile> A; \\<forall>C\\<in>H. atom i \\<sharp> C\\<rbrakk>\n    \\<Longrightarrow> H \\<turnstile> all i A", "by (auto intro: ContraProve neg_I0)"], ["", "lemma all_D: \"H \\<turnstile> all i A \\<Longrightarrow> H \\<turnstile> A(i::=x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<turnstile> all i A \\<Longrightarrow> H \\<turnstile> A(i::=x)", "by (metis Assume exi_I negneg_D neg_mono neg cut_same)"], ["", "lemma all_E: \"insert (A(i::=x)) H \\<turnstile> B \\<Longrightarrow> insert (all i A) H \\<turnstile> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (A(i::=x)) H \\<turnstile> B \\<Longrightarrow>\n    insert (all i A) H \\<turnstile> B", "by (metis exi_I negneg_D neg_mono neg)"], ["", "lemma all_E': \"H \\<turnstile> all i A \\<Longrightarrow> insert (A(i::=x)) H \\<turnstile> B \\<Longrightarrow> H \\<turnstile> B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<turnstile> all i A;\n     insert (A(i::=x)) H \\<turnstile> B\\<rbrakk>\n    \\<Longrightarrow> H \\<turnstile> B", "by (metis all_D cut_same)"], ["", "subsection\\<open>Congruence rules\\<close>"], ["", "lemma neg_cong: \"H \\<turnstile> A IFF A' \\<Longrightarrow> H \\<turnstile> neg A IFF neg A'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<turnstile> A IFF A' \\<Longrightarrow>\n    H \\<turnstile> neg A IFF neg A'", "by (metis Iff_def cnj_E1 cnj_E2 cnj_I Contrapos1)"], ["", "lemma dsj_cong: \"H \\<turnstile> A IFF A' \\<Longrightarrow> H \\<turnstile> B IFF B' \\<Longrightarrow> H \\<turnstile> A OR B IFF A' OR B'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<turnstile> A IFF A'; H \\<turnstile> B IFF B'\\<rbrakk>\n    \\<Longrightarrow> H \\<turnstile> A OR B IFF A' OR B'", "by (metis cnj_E1 cnj_E2 dsj_mono Iff_I Iff_def anti_deduction)"], ["", "lemma cnj_cong: \"H \\<turnstile> A IFF A' \\<Longrightarrow> H \\<turnstile> B IFF B' \\<Longrightarrow> H \\<turnstile> A AND B IFF A' AND B'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<turnstile> A IFF A'; H \\<turnstile> B IFF B'\\<rbrakk>\n    \\<Longrightarrow> H \\<turnstile> A AND B IFF A' AND B'", "by (metis cnj_def dsj_cong neg_cong)"], ["", "lemma imp_cong: \"H \\<turnstile> A IFF A' \\<Longrightarrow> H \\<turnstile> B IFF B' \\<Longrightarrow> H \\<turnstile> (A IMP B) IFF (A' IMP B')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<turnstile> A IFF A'; H \\<turnstile> B IFF B'\\<rbrakk>\n    \\<Longrightarrow> H \\<turnstile> (A IMP B) IFF A' IMP B'", "by (metis dsj_cong neg_cong)"], ["", "lemma Iff_cong: \"H \\<turnstile> A IFF A' \\<Longrightarrow> H \\<turnstile> B IFF B' \\<Longrightarrow> H \\<turnstile> (A IFF B) IFF (A' IFF B')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<turnstile> A IFF A'; H \\<turnstile> B IFF B'\\<rbrakk>\n    \\<Longrightarrow> H \\<turnstile> (A IFF B) IFF A' IFF B'", "by (metis Iff_def cnj_cong imp_cong)"], ["", "lemma exi_cong: \"H \\<turnstile> A IFF A' \\<Longrightarrow> \\<forall>C \\<in> H. atom i \\<sharp> C \\<Longrightarrow> H \\<turnstile> (exi i A) IFF (exi i A')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<turnstile> A IFF A';\n     \\<forall>C\\<in>H. atom i \\<sharp> C\\<rbrakk>\n    \\<Longrightarrow> H \\<turnstile> exi i A IFF exi i A'", "apply (rule Iff_I)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>H \\<turnstile> A IFF A';\n     \\<forall>C\\<in>H. atom i \\<sharp> C\\<rbrakk>\n    \\<Longrightarrow> insert (exi i A) H \\<turnstile> exi i A'\n 2. \\<lbrakk>H \\<turnstile> A IFF A';\n     \\<forall>C\\<in>H. atom i \\<sharp> C\\<rbrakk>\n    \\<Longrightarrow> insert (exi i A') H \\<turnstile> exi i A", "apply (metis exi_mono Hyp Iff_MP_same Un_absorb Un_insert_right insertI1 thin_Un)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<turnstile> A IFF A';\n     \\<forall>C\\<in>H. atom i \\<sharp> C\\<rbrakk>\n    \\<Longrightarrow> insert (exi i A') H \\<turnstile> exi i A", "apply (metis exi_mono Hyp Iff_MP2_same Un_absorb Un_insert_right insertI1 thin_Un)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma all_cong: \"H \\<turnstile> A IFF A' \\<Longrightarrow> \\<forall>C \\<in> H. atom i \\<sharp> C \\<Longrightarrow> H \\<turnstile> (all i A) IFF (all i A')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<turnstile> A IFF A';\n     \\<forall>C\\<in>H. atom i \\<sharp> C\\<rbrakk>\n    \\<Longrightarrow> H \\<turnstile> all i A IFF all i A'", "by (metis exi_cong neg_cong)"], ["", "lemma Subst: \"H \\<turnstile> A \\<Longrightarrow> \\<forall>B \\<in> H. atom i \\<sharp> B \\<Longrightarrow> H \\<turnstile> A (i::=x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<turnstile> A; \\<forall>B\\<in>H. atom i \\<sharp> B\\<rbrakk>\n    \\<Longrightarrow> H \\<turnstile> A(i::=x)", "by (metis all_D all_I)"], ["", "section\\<open>Eqluality Reasoning\\<close>"], ["", "subsection\\<open>The congruence property for @{term eql}, and other basic properties of equality\\<close>"], ["", "lemma eql_cong1: \"{} \\<turnstile> (t EQ t' AND u EQ u') IMP (t EQ u IMP t' EQ u')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' AND u EQ u' IMP t EQ u IMP t' EQ u'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' AND u EQ u' IMP t EQ u IMP t' EQ u'", "obtain v2::name and v3::name and v4::name\n    where v2: \"atom v2 \\<sharp> (t,X1,X3,X4)\"\n      and v3: \"atom v3 \\<sharp> (t,t',X1,v2,X4)\"\n      and v4: \"atom v4 \\<sharp> (t,t',u,X1,v2,v3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>v2 v3 v4.\n        \\<lbrakk>atom v2 \\<sharp> (t, X1, X3, X4);\n         atom v3 \\<sharp> (t, t', X1, v2, X4);\n         atom v4 \\<sharp> (t, t', u, X1, v2, v3)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis obtain_fresh)"], ["proof (state)\nthis:\n  atom v2 \\<sharp> (t, X1, X3, X4)\n  atom v3 \\<sharp> (t, t', X1, v2, X4)\n  atom v4 \\<sharp> (t, t', u, X1, v2, v3)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' AND u EQ u' IMP t EQ u IMP t' EQ u'", "have \"{} \\<turnstile> (Var X1 EQ Var X2 AND Var X3 EQ Var X4) IMP (Var X1 EQ Var X3 IMP Var X2 EQ Var X4)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<turnstile>\n    Var X1 EQ Var X2 AND Var X3 EQ Var X4 IMP\n    Var X1 EQ Var X3 IMP Var X2 EQ Var X4", "by (rule eql) (simp add: eq_cong_ax_def equality_axioms_def)"], ["proof (state)\nthis:\n  {} \\<turnstile>\n  Var X1 EQ Var X2 AND Var X3 EQ Var X4 IMP\n  Var X1 EQ Var X3 IMP Var X2 EQ Var X4\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' AND u EQ u' IMP t EQ u IMP t' EQ u'", "hence \"{} \\<turnstile> (Var X1 EQ Var X2 AND Var X3 EQ Var X4) IMP (Var X1 EQ Var X3 IMP Var X2 EQ Var X4)\""], ["proof (prove)\nusing this:\n  {} \\<turnstile>\n  Var X1 EQ Var X2 AND Var X3 EQ Var X4 IMP\n  Var X1 EQ Var X3 IMP Var X2 EQ Var X4\n\ngoal (1 subgoal):\n 1. {} \\<turnstile>\n    Var X1 EQ Var X2 AND Var X3 EQ Var X4 IMP\n    Var X1 EQ Var X3 IMP Var X2 EQ Var X4", "by (drule_tac i=X1 and x=\"Var X1\" in Subst) simp_all"], ["proof (state)\nthis:\n  {} \\<turnstile>\n  Var X1 EQ Var X2 AND Var X3 EQ Var X4 IMP\n  Var X1 EQ Var X3 IMP Var X2 EQ Var X4\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' AND u EQ u' IMP t EQ u IMP t' EQ u'", "hence \"{} \\<turnstile> (Var X1 EQ Var v2 AND Var X3 EQ Var X4) IMP (Var X1 EQ Var X3 IMP Var v2 EQ Var X4)\""], ["proof (prove)\nusing this:\n  {} \\<turnstile>\n  Var X1 EQ Var X2 AND Var X3 EQ Var X4 IMP\n  Var X1 EQ Var X3 IMP Var X2 EQ Var X4\n\ngoal (1 subgoal):\n 1. {} \\<turnstile>\n    Var X1 EQ Var v2 AND Var X3 EQ Var X4 IMP\n    Var X1 EQ Var X3 IMP Var v2 EQ Var X4", "by (drule_tac i=X2 and x=\"Var v2\" in Subst) simp_all"], ["proof (state)\nthis:\n  {} \\<turnstile>\n  Var X1 EQ Var v2 AND Var X3 EQ Var X4 IMP\n  Var X1 EQ Var X3 IMP Var v2 EQ Var X4\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' AND u EQ u' IMP t EQ u IMP t' EQ u'", "hence \"{} \\<turnstile> (Var X1 EQ Var v2 AND Var v3 EQ Var X4) IMP (Var X1 EQ Var v3 IMP Var v2 EQ Var X4)\""], ["proof (prove)\nusing this:\n  {} \\<turnstile>\n  Var X1 EQ Var v2 AND Var X3 EQ Var X4 IMP\n  Var X1 EQ Var X3 IMP Var v2 EQ Var X4\n\ngoal (1 subgoal):\n 1. {} \\<turnstile>\n    Var X1 EQ Var v2 AND Var v3 EQ Var X4 IMP\n    Var X1 EQ Var v3 IMP Var v2 EQ Var X4", "using v2"], ["proof (prove)\nusing this:\n  {} \\<turnstile>\n  Var X1 EQ Var v2 AND Var X3 EQ Var X4 IMP\n  Var X1 EQ Var X3 IMP Var v2 EQ Var X4\n  atom v2 \\<sharp> (t, X1, X3, X4)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile>\n    Var X1 EQ Var v2 AND Var v3 EQ Var X4 IMP\n    Var X1 EQ Var v3 IMP Var v2 EQ Var X4", "by (drule_tac i=X3 and x=\"Var v3\" in Subst) simp_all"], ["proof (state)\nthis:\n  {} \\<turnstile>\n  Var X1 EQ Var v2 AND Var v3 EQ Var X4 IMP\n  Var X1 EQ Var v3 IMP Var v2 EQ Var X4\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' AND u EQ u' IMP t EQ u IMP t' EQ u'", "hence \"{} \\<turnstile> (Var X1 EQ Var v2 AND Var v3 EQ Var v4) IMP (Var X1 EQ Var v3 IMP Var v2 EQ Var v4)\""], ["proof (prove)\nusing this:\n  {} \\<turnstile>\n  Var X1 EQ Var v2 AND Var v3 EQ Var X4 IMP\n  Var X1 EQ Var v3 IMP Var v2 EQ Var X4\n\ngoal (1 subgoal):\n 1. {} \\<turnstile>\n    Var X1 EQ Var v2 AND Var v3 EQ Var v4 IMP\n    Var X1 EQ Var v3 IMP Var v2 EQ Var v4", "using v2 v3"], ["proof (prove)\nusing this:\n  {} \\<turnstile>\n  Var X1 EQ Var v2 AND Var v3 EQ Var X4 IMP\n  Var X1 EQ Var v3 IMP Var v2 EQ Var X4\n  atom v2 \\<sharp> (t, X1, X3, X4)\n  atom v3 \\<sharp> (t, t', X1, v2, X4)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile>\n    Var X1 EQ Var v2 AND Var v3 EQ Var v4 IMP\n    Var X1 EQ Var v3 IMP Var v2 EQ Var v4", "by (drule_tac i=X4 and x=\"Var v4\" in Subst) simp_all"], ["proof (state)\nthis:\n  {} \\<turnstile>\n  Var X1 EQ Var v2 AND Var v3 EQ Var v4 IMP\n  Var X1 EQ Var v3 IMP Var v2 EQ Var v4\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' AND u EQ u' IMP t EQ u IMP t' EQ u'", "hence \"{} \\<turnstile> (t EQ Var v2 AND Var v3 EQ Var v4) IMP (t EQ Var v3 IMP Var v2 EQ Var v4)\""], ["proof (prove)\nusing this:\n  {} \\<turnstile>\n  Var X1 EQ Var v2 AND Var v3 EQ Var v4 IMP\n  Var X1 EQ Var v3 IMP Var v2 EQ Var v4\n\ngoal (1 subgoal):\n 1. {} \\<turnstile>\n    t EQ Var v2 AND Var v3 EQ Var v4 IMP t EQ Var v3 IMP Var v2 EQ Var v4", "using v2 v3 v4"], ["proof (prove)\nusing this:\n  {} \\<turnstile>\n  Var X1 EQ Var v2 AND Var v3 EQ Var v4 IMP\n  Var X1 EQ Var v3 IMP Var v2 EQ Var v4\n  atom v2 \\<sharp> (t, X1, X3, X4)\n  atom v3 \\<sharp> (t, t', X1, v2, X4)\n  atom v4 \\<sharp> (t, t', u, X1, v2, v3)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile>\n    t EQ Var v2 AND Var v3 EQ Var v4 IMP t EQ Var v3 IMP Var v2 EQ Var v4", "by (drule_tac i=X1 and x=t in Subst) simp_all"], ["proof (state)\nthis:\n  {} \\<turnstile>\n  t EQ Var v2 AND Var v3 EQ Var v4 IMP t EQ Var v3 IMP Var v2 EQ Var v4\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' AND u EQ u' IMP t EQ u IMP t' EQ u'", "hence \"{} \\<turnstile> (t EQ t' AND Var v3 EQ Var v4) IMP (t EQ Var v3 IMP t' EQ Var v4)\""], ["proof (prove)\nusing this:\n  {} \\<turnstile>\n  t EQ Var v2 AND Var v3 EQ Var v4 IMP t EQ Var v3 IMP Var v2 EQ Var v4\n\ngoal (1 subgoal):\n 1. {} \\<turnstile>\n    t EQ t' AND Var v3 EQ Var v4 IMP t EQ Var v3 IMP t' EQ Var v4", "using v2 v3 v4"], ["proof (prove)\nusing this:\n  {} \\<turnstile>\n  t EQ Var v2 AND Var v3 EQ Var v4 IMP t EQ Var v3 IMP Var v2 EQ Var v4\n  atom v2 \\<sharp> (t, X1, X3, X4)\n  atom v3 \\<sharp> (t, t', X1, v2, X4)\n  atom v4 \\<sharp> (t, t', u, X1, v2, v3)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile>\n    t EQ t' AND Var v3 EQ Var v4 IMP t EQ Var v3 IMP t' EQ Var v4", "by (drule_tac i=v2 and x=\"t'\" in Subst) simp_all"], ["proof (state)\nthis:\n  {} \\<turnstile>\n  t EQ t' AND Var v3 EQ Var v4 IMP t EQ Var v3 IMP t' EQ Var v4\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' AND u EQ u' IMP t EQ u IMP t' EQ u'", "hence \"{} \\<turnstile> (t EQ t' AND u EQ Var v4) IMP (t EQ u IMP t' EQ Var v4)\""], ["proof (prove)\nusing this:\n  {} \\<turnstile>\n  t EQ t' AND Var v3 EQ Var v4 IMP t EQ Var v3 IMP t' EQ Var v4\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' AND u EQ Var v4 IMP t EQ u IMP t' EQ Var v4", "using v3 v4"], ["proof (prove)\nusing this:\n  {} \\<turnstile>\n  t EQ t' AND Var v3 EQ Var v4 IMP t EQ Var v3 IMP t' EQ Var v4\n  atom v3 \\<sharp> (t, t', X1, v2, X4)\n  atom v4 \\<sharp> (t, t', u, X1, v2, v3)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' AND u EQ Var v4 IMP t EQ u IMP t' EQ Var v4", "by (drule_tac i=v3 and x=u in Subst) simp_all"], ["proof (state)\nthis:\n  {} \\<turnstile> t EQ t' AND u EQ Var v4 IMP t EQ u IMP t' EQ Var v4\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' AND u EQ u' IMP t EQ u IMP t' EQ u'", "thus ?thesis"], ["proof (prove)\nusing this:\n  {} \\<turnstile> t EQ t' AND u EQ Var v4 IMP t EQ u IMP t' EQ Var v4\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' AND u EQ u' IMP t EQ u IMP t' EQ u'", "using v4"], ["proof (prove)\nusing this:\n  {} \\<turnstile> t EQ t' AND u EQ Var v4 IMP t EQ u IMP t' EQ Var v4\n  atom v4 \\<sharp> (t, t', u, X1, v2, v3)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' AND u EQ u' IMP t EQ u IMP t' EQ u'", "by (drule_tac i=v4 and x=\"u'\" in Subst) simp_all"], ["proof (state)\nthis:\n  {} \\<turnstile> t EQ t' AND u EQ u' IMP t EQ u IMP t' EQ u'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Refl [iff]: \"H \\<turnstile> t EQ t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<turnstile> t EQ t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. H \\<turnstile> t EQ t", "have \"{} \\<turnstile> Var X1 EQ Var X1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<turnstile> Var X1 EQ Var X1", "by (rule eql) (simp add: equality_axioms_def refl_ax_def)"], ["proof (state)\nthis:\n  {} \\<turnstile> Var X1 EQ Var X1\n\ngoal (1 subgoal):\n 1. H \\<turnstile> t EQ t", "hence \"{} \\<turnstile> t EQ t\""], ["proof (prove)\nusing this:\n  {} \\<turnstile> Var X1 EQ Var X1\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t", "by (drule_tac i=X1 and x=t in Subst) simp_all"], ["proof (state)\nthis:\n  {} \\<turnstile> t EQ t\n\ngoal (1 subgoal):\n 1. H \\<turnstile> t EQ t", "thus ?thesis"], ["proof (prove)\nusing this:\n  {} \\<turnstile> t EQ t\n\ngoal (1 subgoal):\n 1. H \\<turnstile> t EQ t", "by (metis empty_subsetI thin)"], ["proof (state)\nthis:\n  H \\<turnstile> t EQ t\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>Apparently necessary in order to prove the congruence property.\\<close>"], ["", "lemma Sym: assumes \"H \\<turnstile> t EQ u\" shows \"H \\<turnstile> u EQ t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<turnstile> u EQ t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. H \\<turnstile> u EQ t", "have \"{} \\<turnstile>  (t EQ u AND t EQ t) IMP (t EQ t IMP u EQ t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ u AND t EQ t IMP t EQ t IMP u EQ t", "by (rule eql_cong1)"], ["proof (state)\nthis:\n  {} \\<turnstile> t EQ u AND t EQ t IMP t EQ t IMP u EQ t\n\ngoal (1 subgoal):\n 1. H \\<turnstile> u EQ t", "moreover"], ["proof (state)\nthis:\n  {} \\<turnstile> t EQ u AND t EQ t IMP t EQ t IMP u EQ t\n\ngoal (1 subgoal):\n 1. H \\<turnstile> u EQ t", "have \"{t EQ u} \\<turnstile> t EQ u AND t EQ t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {t EQ u} \\<turnstile> t EQ u AND t EQ t", "by (metis Assume cnj_I Refl)"], ["proof (state)\nthis:\n  {t EQ u} \\<turnstile> t EQ u AND t EQ t\n\ngoal (1 subgoal):\n 1. H \\<turnstile> u EQ t", "ultimately"], ["proof (chain)\npicking this:\n  {} \\<turnstile> t EQ u AND t EQ t IMP t EQ t IMP u EQ t\n  {t EQ u} \\<turnstile> t EQ u AND t EQ t", "have \"{t EQ u} \\<turnstile> u EQ t\""], ["proof (prove)\nusing this:\n  {} \\<turnstile> t EQ u AND t EQ t IMP t EQ t IMP u EQ t\n  {t EQ u} \\<turnstile> t EQ u AND t EQ t\n\ngoal (1 subgoal):\n 1. {t EQ u} \\<turnstile> u EQ t", "by (metis MP_same MP Refl sup_bot_left)"], ["proof (state)\nthis:\n  {t EQ u} \\<turnstile> u EQ t\n\ngoal (1 subgoal):\n 1. H \\<turnstile> u EQ t", "thus \"H \\<turnstile> u EQ t\""], ["proof (prove)\nusing this:\n  {t EQ u} \\<turnstile> u EQ t\n\ngoal (1 subgoal):\n 1. H \\<turnstile> u EQ t", "by (metis assms cut1)"], ["proof (state)\nthis:\n  H \\<turnstile> u EQ t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Sym_L: \"insert (t EQ u) H \\<turnstile> A \\<Longrightarrow> insert (u EQ t) H \\<turnstile> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (t EQ u) H \\<turnstile> A \\<Longrightarrow>\n    insert (u EQ t) H \\<turnstile> A", "by (metis Assume Sym Un_empty_left Un_insert_left cut)"], ["", "lemma Trans: assumes \"H \\<turnstile> x EQ y\" \"H \\<turnstile> y EQ z\" shows \"H \\<turnstile> x EQ z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<turnstile> x EQ z", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. H \\<turnstile> x EQ z", "have \"\\<And>H. H \\<turnstile> (x EQ x AND y EQ z) IMP (x EQ y IMP x EQ z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>H. H \\<turnstile> x EQ x AND y EQ z IMP x EQ y IMP x EQ z", "by (metis eql_cong1 bot_least thin)"], ["proof (state)\nthis:\n  ?H \\<turnstile> x EQ x AND y EQ z IMP x EQ y IMP x EQ z\n\ngoal (1 subgoal):\n 1. H \\<turnstile> x EQ z", "moreover"], ["proof (state)\nthis:\n  ?H \\<turnstile> x EQ x AND y EQ z IMP x EQ y IMP x EQ z\n\ngoal (1 subgoal):\n 1. H \\<turnstile> x EQ z", "have \"{x EQ y, y EQ z} \\<turnstile> x EQ x AND y EQ z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x EQ y, y EQ z} \\<turnstile> x EQ x AND y EQ z", "by (metis Assume cnj_I Refl thin1)"], ["proof (state)\nthis:\n  {x EQ y, y EQ z} \\<turnstile> x EQ x AND y EQ z\n\ngoal (1 subgoal):\n 1. H \\<turnstile> x EQ z", "ultimately"], ["proof (chain)\npicking this:\n  ?H \\<turnstile> x EQ x AND y EQ z IMP x EQ y IMP x EQ z\n  {x EQ y, y EQ z} \\<turnstile> x EQ x AND y EQ z", "have \"{x EQ y, y EQ z} \\<turnstile> x EQ z\""], ["proof (prove)\nusing this:\n  ?H \\<turnstile> x EQ x AND y EQ z IMP x EQ y IMP x EQ z\n  {x EQ y, y EQ z} \\<turnstile> x EQ x AND y EQ z\n\ngoal (1 subgoal):\n 1. {x EQ y, y EQ z} \\<turnstile> x EQ z", "by (metis Hyp MP_same insertI1)"], ["proof (state)\nthis:\n  {x EQ y, y EQ z} \\<turnstile> x EQ z\n\ngoal (1 subgoal):\n 1. H \\<turnstile> x EQ z", "thus ?thesis"], ["proof (prove)\nusing this:\n  {x EQ y, y EQ z} \\<turnstile> x EQ z\n\ngoal (1 subgoal):\n 1. H \\<turnstile> x EQ z", "by (metis assms cut2)"], ["proof (state)\nthis:\n  H \\<turnstile> x EQ z\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma eql_cong:\n  assumes \"H \\<turnstile> t EQ t'\" \"H \\<turnstile> u EQ u'\" shows \"H \\<turnstile> t EQ u IFF t' EQ u'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<turnstile> t EQ u IFF t' EQ u'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. H \\<turnstile> t EQ u IFF t' EQ u'", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. H \\<turnstile> t EQ u IFF t' EQ u'", "fix t t' u u'"], ["proof (state)\ngoal (1 subgoal):\n 1. H \\<turnstile> t EQ u IFF t' EQ u'", "assume  \"H \\<turnstile> t EQ t'\" \"H \\<turnstile> u EQ u'\""], ["proof (state)\nthis:\n  H \\<turnstile> t EQ t'\n  H \\<turnstile> u EQ u'\n\ngoal (1 subgoal):\n 1. H \\<turnstile> t EQ u IFF t' EQ u'", "moreover"], ["proof (state)\nthis:\n  H \\<turnstile> t EQ t'\n  H \\<turnstile> u EQ u'\n\ngoal (1 subgoal):\n 1. H \\<turnstile> t EQ u IFF t' EQ u'", "have \"{t EQ t', u EQ u'} \\<turnstile> t EQ u IMP t' EQ u'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {t EQ t', u EQ u'} \\<turnstile> t EQ u IMP t' EQ u'", "using eql_cong1"], ["proof (prove)\nusing this:\n  {} \\<turnstile> ?t EQ ?t' AND ?u EQ ?u' IMP ?t EQ ?u IMP ?t' EQ ?u'\n\ngoal (1 subgoal):\n 1. {t EQ t', u EQ u'} \\<turnstile> t EQ u IMP t' EQ u'", "by (metis Assume cnj_I MP_null insert_commute)"], ["proof (state)\nthis:\n  {t EQ t', u EQ u'} \\<turnstile> t EQ u IMP t' EQ u'\n\ngoal (1 subgoal):\n 1. H \\<turnstile> t EQ u IFF t' EQ u'", "ultimately"], ["proof (chain)\npicking this:\n  H \\<turnstile> t EQ t'\n  H \\<turnstile> u EQ u'\n  {t EQ t', u EQ u'} \\<turnstile> t EQ u IMP t' EQ u'", "have \"H \\<turnstile> t EQ u IMP t' EQ u'\""], ["proof (prove)\nusing this:\n  H \\<turnstile> t EQ t'\n  H \\<turnstile> u EQ u'\n  {t EQ t', u EQ u'} \\<turnstile> t EQ u IMP t' EQ u'\n\ngoal (1 subgoal):\n 1. H \\<turnstile> t EQ u IMP t' EQ u'", "by (metis cut2)"], ["proof (state)\nthis:\n  H \\<turnstile> t EQ u IMP t' EQ u'\n\ngoal (1 subgoal):\n 1. H \\<turnstile> t EQ u IFF t' EQ u'", "}"], ["proof (state)\nthis:\n  \\<lbrakk>H \\<turnstile> ?ta2 EQ ?t'a2;\n   H \\<turnstile> ?ua2 EQ ?u'a2\\<rbrakk>\n  \\<Longrightarrow> H \\<turnstile> ?ta2 EQ ?ua2 IMP ?t'a2 EQ ?u'a2\n\ngoal (1 subgoal):\n 1. H \\<turnstile> t EQ u IFF t' EQ u'", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>H \\<turnstile> ?ta2 EQ ?t'a2;\n   H \\<turnstile> ?ua2 EQ ?u'a2\\<rbrakk>\n  \\<Longrightarrow> H \\<turnstile> ?ta2 EQ ?ua2 IMP ?t'a2 EQ ?u'a2\n\ngoal (1 subgoal):\n 1. H \\<turnstile> t EQ u IFF t' EQ u'", "by (metis Iff_def cnj_I assms Sym)"], ["proof (state)\nthis:\n  H \\<turnstile> t EQ u IFF t' EQ u'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma eql_Trans_E: \"H \\<turnstile> x EQ u \\<Longrightarrow> insert (t EQ u) H \\<turnstile> A \\<Longrightarrow> insert (x EQ t) H \\<turnstile> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<turnstile> x EQ u;\n     insert (t EQ u) H \\<turnstile> A\\<rbrakk>\n    \\<Longrightarrow> insert (x EQ t) H \\<turnstile> A", "by (metis Assume Sym_L Trans cut_same thin1 thin2)"], ["", "subsection\\<open>The congruence properties for @{term suc}, @{term pls} and @{term tms}\\<close>"], ["", "lemma suc_cong1: \"{} \\<turnstile> (t EQ t') IMP (suc t EQ suc t')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' IMP suc t EQ suc t'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' IMP suc t EQ suc t'", "obtain v2::name and v3::name and v4::name\n    where v2: \"atom v2 \\<sharp> (t,X1,X3,X4)\"\n      and v3: \"atom v3 \\<sharp> (t,t',X1,v2,X4)\"\n      and v4: \"atom v4 \\<sharp> (t,t',X1,v2,v3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>v2 v3 v4.\n        \\<lbrakk>atom v2 \\<sharp> (t, X1, X3, X4);\n         atom v3 \\<sharp> (t, t', X1, v2, X4);\n         atom v4 \\<sharp> (t, t', X1, v2, v3)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis obtain_fresh)"], ["proof (state)\nthis:\n  atom v2 \\<sharp> (t, X1, X3, X4)\n  atom v3 \\<sharp> (t, t', X1, v2, X4)\n  atom v4 \\<sharp> (t, t', X1, v2, v3)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' IMP suc t EQ suc t'", "have \"{} \\<turnstile> (Var X1 EQ Var X2) IMP (suc (Var X1) EQ suc (Var X2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<turnstile> Var X1 EQ Var X2 IMP suc (Var X1) EQ suc (Var X2)", "by (metis syc_cong_ax_def equality_axioms_def insert_iff eql)"], ["proof (state)\nthis:\n  {} \\<turnstile> Var X1 EQ Var X2 IMP suc (Var X1) EQ suc (Var X2)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' IMP suc t EQ suc t'", "hence \"{} \\<turnstile> (Var X1 EQ Var v2) IMP (suc (Var X1) EQ suc (Var v2))\""], ["proof (prove)\nusing this:\n  {} \\<turnstile> Var X1 EQ Var X2 IMP suc (Var X1) EQ suc (Var X2)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> Var X1 EQ Var v2 IMP suc (Var X1) EQ suc (Var v2)", "by (drule_tac i=X2 and x=\"Var v2\" in Subst) simp_all"], ["proof (state)\nthis:\n  {} \\<turnstile> Var X1 EQ Var v2 IMP suc (Var X1) EQ suc (Var v2)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' IMP suc t EQ suc t'", "hence \"{} \\<turnstile> (t EQ Var v2) IMP (suc t EQ suc (Var v2))\""], ["proof (prove)\nusing this:\n  {} \\<turnstile> Var X1 EQ Var v2 IMP suc (Var X1) EQ suc (Var v2)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ Var v2 IMP suc t EQ suc (Var v2)", "using v2 v3 v4"], ["proof (prove)\nusing this:\n  {} \\<turnstile> Var X1 EQ Var v2 IMP suc (Var X1) EQ suc (Var v2)\n  atom v2 \\<sharp> (t, X1, X3, X4)\n  atom v3 \\<sharp> (t, t', X1, v2, X4)\n  atom v4 \\<sharp> (t, t', X1, v2, v3)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ Var v2 IMP suc t EQ suc (Var v2)", "by (drule_tac i=X1 and x=t in Subst) simp_all"], ["proof (state)\nthis:\n  {} \\<turnstile> t EQ Var v2 IMP suc t EQ suc (Var v2)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' IMP suc t EQ suc t'", "hence \"{} \\<turnstile> (t EQ t') IMP (suc t EQ suc t')\""], ["proof (prove)\nusing this:\n  {} \\<turnstile> t EQ Var v2 IMP suc t EQ suc (Var v2)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' IMP suc t EQ suc t'", "using v2 v3 v4"], ["proof (prove)\nusing this:\n  {} \\<turnstile> t EQ Var v2 IMP suc t EQ suc (Var v2)\n  atom v2 \\<sharp> (t, X1, X3, X4)\n  atom v3 \\<sharp> (t, t', X1, v2, X4)\n  atom v4 \\<sharp> (t, t', X1, v2, v3)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' IMP suc t EQ suc t'", "by (drule_tac i=v2 and x=t' in Subst) simp_all"], ["proof (state)\nthis:\n  {} \\<turnstile> t EQ t' IMP suc t EQ suc t'\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' IMP suc t EQ suc t'", "thus ?thesis"], ["proof (prove)\nusing this:\n  {} \\<turnstile> t EQ t' IMP suc t EQ suc t'\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' IMP suc t EQ suc t'", "using v4"], ["proof (prove)\nusing this:\n  {} \\<turnstile> t EQ t' IMP suc t EQ suc t'\n  atom v4 \\<sharp> (t, t', X1, v2, v3)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' IMP suc t EQ suc t'", "by (drule_tac i=v4 in Subst) simp_all"], ["proof (state)\nthis:\n  {} \\<turnstile> t EQ t' IMP suc t EQ suc t'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma suc_cong: \"\\<lbrakk>H \\<turnstile> t EQ t'\\<rbrakk> \\<Longrightarrow> H \\<turnstile> suc t EQ suc t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<turnstile> t EQ t' \\<Longrightarrow> H \\<turnstile> suc t EQ suc t'", "by (metis anti_deduction suc_cong1 cut1)"], ["", "lemma pls_cong1: \"{} \\<turnstile> (t EQ t' AND u EQ u') IMP (pls t u EQ pls t' u')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' AND u EQ u' IMP pls t u EQ pls t' u'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' AND u EQ u' IMP pls t u EQ pls t' u'", "obtain v2::name and v3::name and v4::name\n    where v2: \"atom v2 \\<sharp> (t,X1,X3,X4)\"\n      and v3: \"atom v3 \\<sharp> (t,t',X1,v2,X4)\"\n      and v4: \"atom v4 \\<sharp> (t,t',u,X1,v2,v3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>v2 v3 v4.\n        \\<lbrakk>atom v2 \\<sharp> (t, X1, X3, X4);\n         atom v3 \\<sharp> (t, t', X1, v2, X4);\n         atom v4 \\<sharp> (t, t', u, X1, v2, v3)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis obtain_fresh)"], ["proof (state)\nthis:\n  atom v2 \\<sharp> (t, X1, X3, X4)\n  atom v3 \\<sharp> (t, t', X1, v2, X4)\n  atom v4 \\<sharp> (t, t', u, X1, v2, v3)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' AND u EQ u' IMP pls t u EQ pls t' u'", "have \"{} \\<turnstile> (Var X1 EQ Var X2 AND Var X3 EQ Var X4) IMP (pls (Var X1) (Var X3) EQ pls (Var X2) (Var X4))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<turnstile>\n    Var X1 EQ Var X2 AND Var X3 EQ Var X4 IMP\n    pls (Var X1) (Var X3) EQ pls (Var X2) (Var X4)", "by (metis pls_cong_ax_def equality_axioms_def insert_iff eql)"], ["proof (state)\nthis:\n  {} \\<turnstile>\n  Var X1 EQ Var X2 AND Var X3 EQ Var X4 IMP\n  pls (Var X1) (Var X3) EQ pls (Var X2) (Var X4)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' AND u EQ u' IMP pls t u EQ pls t' u'", "hence \"{} \\<turnstile> (Var X1 EQ Var v2 AND Var X3 EQ Var X4) IMP (pls (Var X1) (Var X3) EQ pls (Var v2) (Var X4))\""], ["proof (prove)\nusing this:\n  {} \\<turnstile>\n  Var X1 EQ Var X2 AND Var X3 EQ Var X4 IMP\n  pls (Var X1) (Var X3) EQ pls (Var X2) (Var X4)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile>\n    Var X1 EQ Var v2 AND Var X3 EQ Var X4 IMP\n    pls (Var X1) (Var X3) EQ pls (Var v2) (Var X4)", "by (drule_tac i=X2 and x=\"Var v2\" in Subst) simp_all"], ["proof (state)\nthis:\n  {} \\<turnstile>\n  Var X1 EQ Var v2 AND Var X3 EQ Var X4 IMP\n  pls (Var X1) (Var X3) EQ pls (Var v2) (Var X4)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' AND u EQ u' IMP pls t u EQ pls t' u'", "hence \"{} \\<turnstile> (Var X1 EQ Var v2 AND Var v3 EQ Var X4) IMP (pls (Var X1) (Var v3) EQ pls (Var v2) (Var X4))\""], ["proof (prove)\nusing this:\n  {} \\<turnstile>\n  Var X1 EQ Var v2 AND Var X3 EQ Var X4 IMP\n  pls (Var X1) (Var X3) EQ pls (Var v2) (Var X4)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile>\n    Var X1 EQ Var v2 AND Var v3 EQ Var X4 IMP\n    pls (Var X1) (Var v3) EQ pls (Var v2) (Var X4)", "using v2"], ["proof (prove)\nusing this:\n  {} \\<turnstile>\n  Var X1 EQ Var v2 AND Var X3 EQ Var X4 IMP\n  pls (Var X1) (Var X3) EQ pls (Var v2) (Var X4)\n  atom v2 \\<sharp> (t, X1, X3, X4)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile>\n    Var X1 EQ Var v2 AND Var v3 EQ Var X4 IMP\n    pls (Var X1) (Var v3) EQ pls (Var v2) (Var X4)", "by (drule_tac i=X3 and x=\"Var v3\" in Subst) simp_all"], ["proof (state)\nthis:\n  {} \\<turnstile>\n  Var X1 EQ Var v2 AND Var v3 EQ Var X4 IMP\n  pls (Var X1) (Var v3) EQ pls (Var v2) (Var X4)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' AND u EQ u' IMP pls t u EQ pls t' u'", "hence \"{} \\<turnstile> (Var X1 EQ Var v2 AND Var v3 EQ Var v4) IMP (pls (Var X1) (Var v3) EQ pls (Var v2) (Var v4))\""], ["proof (prove)\nusing this:\n  {} \\<turnstile>\n  Var X1 EQ Var v2 AND Var v3 EQ Var X4 IMP\n  pls (Var X1) (Var v3) EQ pls (Var v2) (Var X4)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile>\n    Var X1 EQ Var v2 AND Var v3 EQ Var v4 IMP\n    pls (Var X1) (Var v3) EQ pls (Var v2) (Var v4)", "using v2 v3"], ["proof (prove)\nusing this:\n  {} \\<turnstile>\n  Var X1 EQ Var v2 AND Var v3 EQ Var X4 IMP\n  pls (Var X1) (Var v3) EQ pls (Var v2) (Var X4)\n  atom v2 \\<sharp> (t, X1, X3, X4)\n  atom v3 \\<sharp> (t, t', X1, v2, X4)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile>\n    Var X1 EQ Var v2 AND Var v3 EQ Var v4 IMP\n    pls (Var X1) (Var v3) EQ pls (Var v2) (Var v4)", "by (drule_tac i=X4 and x=\"Var v4\" in Subst) simp_all"], ["proof (state)\nthis:\n  {} \\<turnstile>\n  Var X1 EQ Var v2 AND Var v3 EQ Var v4 IMP\n  pls (Var X1) (Var v3) EQ pls (Var v2) (Var v4)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' AND u EQ u' IMP pls t u EQ pls t' u'", "hence \"{} \\<turnstile> (t EQ Var v2 AND Var v3 EQ Var v4) IMP (pls t (Var v3) EQ pls (Var v2) (Var v4))\""], ["proof (prove)\nusing this:\n  {} \\<turnstile>\n  Var X1 EQ Var v2 AND Var v3 EQ Var v4 IMP\n  pls (Var X1) (Var v3) EQ pls (Var v2) (Var v4)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile>\n    t EQ Var v2 AND Var v3 EQ Var v4 IMP\n    pls t (Var v3) EQ pls (Var v2) (Var v4)", "using v2 v3 v4"], ["proof (prove)\nusing this:\n  {} \\<turnstile>\n  Var X1 EQ Var v2 AND Var v3 EQ Var v4 IMP\n  pls (Var X1) (Var v3) EQ pls (Var v2) (Var v4)\n  atom v2 \\<sharp> (t, X1, X3, X4)\n  atom v3 \\<sharp> (t, t', X1, v2, X4)\n  atom v4 \\<sharp> (t, t', u, X1, v2, v3)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile>\n    t EQ Var v2 AND Var v3 EQ Var v4 IMP\n    pls t (Var v3) EQ pls (Var v2) (Var v4)", "by (drule_tac i=X1 and x=t in Subst) simp_all"], ["proof (state)\nthis:\n  {} \\<turnstile>\n  t EQ Var v2 AND Var v3 EQ Var v4 IMP\n  pls t (Var v3) EQ pls (Var v2) (Var v4)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' AND u EQ u' IMP pls t u EQ pls t' u'", "hence \"{} \\<turnstile> (t EQ t' AND Var v3 EQ Var v4) IMP (pls t (Var v3) EQ pls t' (Var v4))\""], ["proof (prove)\nusing this:\n  {} \\<turnstile>\n  t EQ Var v2 AND Var v3 EQ Var v4 IMP\n  pls t (Var v3) EQ pls (Var v2) (Var v4)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile>\n    t EQ t' AND Var v3 EQ Var v4 IMP pls t (Var v3) EQ pls t' (Var v4)", "using v2 v3 v4"], ["proof (prove)\nusing this:\n  {} \\<turnstile>\n  t EQ Var v2 AND Var v3 EQ Var v4 IMP\n  pls t (Var v3) EQ pls (Var v2) (Var v4)\n  atom v2 \\<sharp> (t, X1, X3, X4)\n  atom v3 \\<sharp> (t, t', X1, v2, X4)\n  atom v4 \\<sharp> (t, t', u, X1, v2, v3)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile>\n    t EQ t' AND Var v3 EQ Var v4 IMP pls t (Var v3) EQ pls t' (Var v4)", "by (drule_tac i=v2 and x=t' in Subst) simp_all"], ["proof (state)\nthis:\n  {} \\<turnstile>\n  t EQ t' AND Var v3 EQ Var v4 IMP pls t (Var v3) EQ pls t' (Var v4)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' AND u EQ u' IMP pls t u EQ pls t' u'", "hence \"{} \\<turnstile> (t EQ t' AND u EQ Var v4) IMP (pls t u EQ pls t' (Var v4))\""], ["proof (prove)\nusing this:\n  {} \\<turnstile>\n  t EQ t' AND Var v3 EQ Var v4 IMP pls t (Var v3) EQ pls t' (Var v4)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' AND u EQ Var v4 IMP pls t u EQ pls t' (Var v4)", "using v3 v4"], ["proof (prove)\nusing this:\n  {} \\<turnstile>\n  t EQ t' AND Var v3 EQ Var v4 IMP pls t (Var v3) EQ pls t' (Var v4)\n  atom v3 \\<sharp> (t, t', X1, v2, X4)\n  atom v4 \\<sharp> (t, t', u, X1, v2, v3)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' AND u EQ Var v4 IMP pls t u EQ pls t' (Var v4)", "by (drule_tac i=v3 and x=u in Subst) simp_all"], ["proof (state)\nthis:\n  {} \\<turnstile> t EQ t' AND u EQ Var v4 IMP pls t u EQ pls t' (Var v4)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' AND u EQ u' IMP pls t u EQ pls t' u'", "thus ?thesis"], ["proof (prove)\nusing this:\n  {} \\<turnstile> t EQ t' AND u EQ Var v4 IMP pls t u EQ pls t' (Var v4)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' AND u EQ u' IMP pls t u EQ pls t' u'", "using v4"], ["proof (prove)\nusing this:\n  {} \\<turnstile> t EQ t' AND u EQ Var v4 IMP pls t u EQ pls t' (Var v4)\n  atom v4 \\<sharp> (t, t', u, X1, v2, v3)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' AND u EQ u' IMP pls t u EQ pls t' u'", "by (drule_tac i=v4 and x=u' in Subst) simp_all"], ["proof (state)\nthis:\n  {} \\<turnstile> t EQ t' AND u EQ u' IMP pls t u EQ pls t' u'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pls_cong: \"\\<lbrakk>H \\<turnstile> t EQ t'; H \\<turnstile> u EQ u'\\<rbrakk> \\<Longrightarrow> H \\<turnstile> pls t u EQ pls t' u'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<turnstile> t EQ t'; H \\<turnstile> u EQ u'\\<rbrakk>\n    \\<Longrightarrow> H \\<turnstile> pls t u EQ pls t' u'", "by (metis cnj_I anti_deduction pls_cong1 cut1)"], ["", "lemma tms_cong1: \"{} \\<turnstile> (t EQ t' AND u EQ u') IMP (tms t u EQ tms t' u')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' AND u EQ u' IMP tms t u EQ tms t' u'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' AND u EQ u' IMP tms t u EQ tms t' u'", "obtain v2::name and v3::name and v4::name\n    where v2: \"atom v2 \\<sharp> (t,X1,X3,X4)\"\n      and v3: \"atom v3 \\<sharp> (t,t',X1,v2,X4)\"\n      and v4: \"atom v4 \\<sharp> (t,t',u,X1,v2,v3)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>v2 v3 v4.\n        \\<lbrakk>atom v2 \\<sharp> (t, X1, X3, X4);\n         atom v3 \\<sharp> (t, t', X1, v2, X4);\n         atom v4 \\<sharp> (t, t', u, X1, v2, v3)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis obtain_fresh)"], ["proof (state)\nthis:\n  atom v2 \\<sharp> (t, X1, X3, X4)\n  atom v3 \\<sharp> (t, t', X1, v2, X4)\n  atom v4 \\<sharp> (t, t', u, X1, v2, v3)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' AND u EQ u' IMP tms t u EQ tms t' u'", "have \"{} \\<turnstile> (Var X1 EQ Var X2 AND Var X3 EQ Var X4) IMP (tms (Var X1) (Var X3) EQ tms (Var X2) (Var X4))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {} \\<turnstile>\n    Var X1 EQ Var X2 AND Var X3 EQ Var X4 IMP\n    tms (Var X1) (Var X3) EQ tms (Var X2) (Var X4)", "by (metis tms_cong_ax_def equality_axioms_def insert_iff eql)"], ["proof (state)\nthis:\n  {} \\<turnstile>\n  Var X1 EQ Var X2 AND Var X3 EQ Var X4 IMP\n  tms (Var X1) (Var X3) EQ tms (Var X2) (Var X4)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' AND u EQ u' IMP tms t u EQ tms t' u'", "hence \"{} \\<turnstile> (Var X1 EQ Var v2 AND Var X3 EQ Var X4) IMP (tms (Var X1) (Var X3) EQ tms (Var v2) (Var X4))\""], ["proof (prove)\nusing this:\n  {} \\<turnstile>\n  Var X1 EQ Var X2 AND Var X3 EQ Var X4 IMP\n  tms (Var X1) (Var X3) EQ tms (Var X2) (Var X4)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile>\n    Var X1 EQ Var v2 AND Var X3 EQ Var X4 IMP\n    tms (Var X1) (Var X3) EQ tms (Var v2) (Var X4)", "by (drule_tac i=X2 and x=\"Var v2\" in Subst) simp_all"], ["proof (state)\nthis:\n  {} \\<turnstile>\n  Var X1 EQ Var v2 AND Var X3 EQ Var X4 IMP\n  tms (Var X1) (Var X3) EQ tms (Var v2) (Var X4)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' AND u EQ u' IMP tms t u EQ tms t' u'", "hence \"{} \\<turnstile> (Var X1 EQ Var v2 AND Var v3 EQ Var X4) IMP (tms (Var X1) (Var v3) EQ tms (Var v2) (Var X4))\""], ["proof (prove)\nusing this:\n  {} \\<turnstile>\n  Var X1 EQ Var v2 AND Var X3 EQ Var X4 IMP\n  tms (Var X1) (Var X3) EQ tms (Var v2) (Var X4)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile>\n    Var X1 EQ Var v2 AND Var v3 EQ Var X4 IMP\n    tms (Var X1) (Var v3) EQ tms (Var v2) (Var X4)", "using v2"], ["proof (prove)\nusing this:\n  {} \\<turnstile>\n  Var X1 EQ Var v2 AND Var X3 EQ Var X4 IMP\n  tms (Var X1) (Var X3) EQ tms (Var v2) (Var X4)\n  atom v2 \\<sharp> (t, X1, X3, X4)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile>\n    Var X1 EQ Var v2 AND Var v3 EQ Var X4 IMP\n    tms (Var X1) (Var v3) EQ tms (Var v2) (Var X4)", "by (drule_tac i=X3 and x=\"Var v3\" in Subst) simp_all"], ["proof (state)\nthis:\n  {} \\<turnstile>\n  Var X1 EQ Var v2 AND Var v3 EQ Var X4 IMP\n  tms (Var X1) (Var v3) EQ tms (Var v2) (Var X4)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' AND u EQ u' IMP tms t u EQ tms t' u'", "hence \"{} \\<turnstile> (Var X1 EQ Var v2 AND Var v3 EQ Var v4) IMP (tms (Var X1) (Var v3) EQ tms (Var v2) (Var v4))\""], ["proof (prove)\nusing this:\n  {} \\<turnstile>\n  Var X1 EQ Var v2 AND Var v3 EQ Var X4 IMP\n  tms (Var X1) (Var v3) EQ tms (Var v2) (Var X4)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile>\n    Var X1 EQ Var v2 AND Var v3 EQ Var v4 IMP\n    tms (Var X1) (Var v3) EQ tms (Var v2) (Var v4)", "using v2 v3"], ["proof (prove)\nusing this:\n  {} \\<turnstile>\n  Var X1 EQ Var v2 AND Var v3 EQ Var X4 IMP\n  tms (Var X1) (Var v3) EQ tms (Var v2) (Var X4)\n  atom v2 \\<sharp> (t, X1, X3, X4)\n  atom v3 \\<sharp> (t, t', X1, v2, X4)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile>\n    Var X1 EQ Var v2 AND Var v3 EQ Var v4 IMP\n    tms (Var X1) (Var v3) EQ tms (Var v2) (Var v4)", "by (drule_tac i=X4 and x=\"Var v4\" in Subst) simp_all"], ["proof (state)\nthis:\n  {} \\<turnstile>\n  Var X1 EQ Var v2 AND Var v3 EQ Var v4 IMP\n  tms (Var X1) (Var v3) EQ tms (Var v2) (Var v4)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' AND u EQ u' IMP tms t u EQ tms t' u'", "hence \"{} \\<turnstile> (t EQ Var v2 AND Var v3 EQ Var v4) IMP (tms t (Var v3) EQ tms (Var v2) (Var v4))\""], ["proof (prove)\nusing this:\n  {} \\<turnstile>\n  Var X1 EQ Var v2 AND Var v3 EQ Var v4 IMP\n  tms (Var X1) (Var v3) EQ tms (Var v2) (Var v4)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile>\n    t EQ Var v2 AND Var v3 EQ Var v4 IMP\n    tms t (Var v3) EQ tms (Var v2) (Var v4)", "using v2 v3 v4"], ["proof (prove)\nusing this:\n  {} \\<turnstile>\n  Var X1 EQ Var v2 AND Var v3 EQ Var v4 IMP\n  tms (Var X1) (Var v3) EQ tms (Var v2) (Var v4)\n  atom v2 \\<sharp> (t, X1, X3, X4)\n  atom v3 \\<sharp> (t, t', X1, v2, X4)\n  atom v4 \\<sharp> (t, t', u, X1, v2, v3)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile>\n    t EQ Var v2 AND Var v3 EQ Var v4 IMP\n    tms t (Var v3) EQ tms (Var v2) (Var v4)", "by (drule_tac i=X1 and x=t in Subst) simp_all"], ["proof (state)\nthis:\n  {} \\<turnstile>\n  t EQ Var v2 AND Var v3 EQ Var v4 IMP\n  tms t (Var v3) EQ tms (Var v2) (Var v4)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' AND u EQ u' IMP tms t u EQ tms t' u'", "hence \"{} \\<turnstile> (t EQ t' AND Var v3 EQ Var v4) IMP (tms t (Var v3) EQ tms t' (Var v4))\""], ["proof (prove)\nusing this:\n  {} \\<turnstile>\n  t EQ Var v2 AND Var v3 EQ Var v4 IMP\n  tms t (Var v3) EQ tms (Var v2) (Var v4)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile>\n    t EQ t' AND Var v3 EQ Var v4 IMP tms t (Var v3) EQ tms t' (Var v4)", "using v2 v3 v4"], ["proof (prove)\nusing this:\n  {} \\<turnstile>\n  t EQ Var v2 AND Var v3 EQ Var v4 IMP\n  tms t (Var v3) EQ tms (Var v2) (Var v4)\n  atom v2 \\<sharp> (t, X1, X3, X4)\n  atom v3 \\<sharp> (t, t', X1, v2, X4)\n  atom v4 \\<sharp> (t, t', u, X1, v2, v3)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile>\n    t EQ t' AND Var v3 EQ Var v4 IMP tms t (Var v3) EQ tms t' (Var v4)", "by (drule_tac i=v2 and x=t' in Subst) simp_all"], ["proof (state)\nthis:\n  {} \\<turnstile>\n  t EQ t' AND Var v3 EQ Var v4 IMP tms t (Var v3) EQ tms t' (Var v4)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' AND u EQ u' IMP tms t u EQ tms t' u'", "hence \"{} \\<turnstile> (t EQ t' AND u EQ Var v4) IMP (tms t u EQ tms t' (Var v4))\""], ["proof (prove)\nusing this:\n  {} \\<turnstile>\n  t EQ t' AND Var v3 EQ Var v4 IMP tms t (Var v3) EQ tms t' (Var v4)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' AND u EQ Var v4 IMP tms t u EQ tms t' (Var v4)", "using v3 v4"], ["proof (prove)\nusing this:\n  {} \\<turnstile>\n  t EQ t' AND Var v3 EQ Var v4 IMP tms t (Var v3) EQ tms t' (Var v4)\n  atom v3 \\<sharp> (t, t', X1, v2, X4)\n  atom v4 \\<sharp> (t, t', u, X1, v2, v3)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' AND u EQ Var v4 IMP tms t u EQ tms t' (Var v4)", "by (drule_tac i=v3 and x=u in Subst) simp_all"], ["proof (state)\nthis:\n  {} \\<turnstile> t EQ t' AND u EQ Var v4 IMP tms t u EQ tms t' (Var v4)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' AND u EQ u' IMP tms t u EQ tms t' u'", "thus ?thesis"], ["proof (prove)\nusing this:\n  {} \\<turnstile> t EQ t' AND u EQ Var v4 IMP tms t u EQ tms t' (Var v4)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' AND u EQ u' IMP tms t u EQ tms t' u'", "using v4"], ["proof (prove)\nusing this:\n  {} \\<turnstile> t EQ t' AND u EQ Var v4 IMP tms t u EQ tms t' (Var v4)\n  atom v4 \\<sharp> (t, t', u, X1, v2, v3)\n\ngoal (1 subgoal):\n 1. {} \\<turnstile> t EQ t' AND u EQ u' IMP tms t u EQ tms t' u'", "by (drule_tac i=v4 and x=u' in Subst) simp_all"], ["proof (state)\nthis:\n  {} \\<turnstile> t EQ t' AND u EQ u' IMP tms t u EQ tms t' u'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma tms_cong: \"\\<lbrakk>H \\<turnstile> t EQ t'; H \\<turnstile> u EQ u'\\<rbrakk> \\<Longrightarrow> H \\<turnstile> tms t u EQ tms t' u'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<turnstile> t EQ t'; H \\<turnstile> u EQ u'\\<rbrakk>\n    \\<Longrightarrow> H \\<turnstile> tms t u EQ tms t' u'", "by (metis cnj_I anti_deduction tms_cong1 cut1)"], ["", "subsection\\<open>Substitution for eqlualities\\<close>"], ["", "lemma eql_subst_trm_Iff: \"{t EQ u} \\<turnstile> subst i t trm EQ subst i u trm\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {t EQ u} \\<turnstile> subst i t trm EQ subst i u trm", "by (induct trm rule: trm.induct) (auto simp: suc_cong pls_cong tms_cong)"], ["", "lemma eql_subst_fmla_Iff: \"insert (t EQ u) H \\<turnstile> A(i::=t) IFF A(i::=u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (t EQ u) H \\<turnstile> A(i::=t) IFF A(i::=u)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. insert (t EQ u) H \\<turnstile> A(i::=t) IFF A(i::=u)", "have \"{ t EQ u } \\<turnstile> A(i::=t) IFF A(i::=u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {t EQ u} \\<turnstile> A(i::=t) IFF A(i::=u)", "by (nominal_induct A avoiding: i t u rule: fmla.strong_induct)\n       (auto simp: dsj_cong neg_cong exi_cong eql_cong eql_subst_trm_Iff)"], ["proof (state)\nthis:\n  {t EQ u} \\<turnstile> A(i::=t) IFF A(i::=u)\n\ngoal (1 subgoal):\n 1. insert (t EQ u) H \\<turnstile> A(i::=t) IFF A(i::=u)", "thus ?thesis"], ["proof (prove)\nusing this:\n  {t EQ u} \\<turnstile> A(i::=t) IFF A(i::=u)\n\ngoal (1 subgoal):\n 1. insert (t EQ u) H \\<turnstile> A(i::=t) IFF A(i::=u)", "by (metis Assume cut1)"], ["proof (state)\nthis:\n  insert (t EQ u) H \\<turnstile> A(i::=t) IFF A(i::=u)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Var_eql_subst_Iff: \"insert (Var i EQ t) H \\<turnstile> A(i::=t) IFF A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (Var i EQ t) H \\<turnstile> A(i::=t) IFF A", "by (metis eql_subst_fmla_Iff Iff_sym subst_fmla_id)"], ["", "lemma Var_eql_imp_subst_Iff: \"H \\<turnstile> Var i EQ t \\<Longrightarrow> H \\<turnstile> A(i::=t) IFF A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<turnstile> Var i EQ t \\<Longrightarrow>\n    H \\<turnstile> A(i::=t) IFF A", "by (metis Var_eql_subst_Iff cut_same)"], ["", "subsection\\<open>Congruence rules for predicates\\<close>"], ["", "lemma P1_cong:\n  fixes tms :: \"trm list\"\n  assumes \"\\<And>i t x. atom i \\<sharp> tms \\<Longrightarrow> (P t)(i::=x) = P (subst i x t)\" and \"H \\<turnstile> x EQ x'\"\n  shows \"H \\<turnstile> P x IFF P x'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<turnstile> P x IFF P x'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. H \\<turnstile> P x IFF P x'", "obtain i::name where i: \"atom i \\<sharp> tms\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i.\n        atom i \\<sharp> tms \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis obtain_fresh)"], ["proof (state)\nthis:\n  atom i \\<sharp> tms\n\ngoal (1 subgoal):\n 1. H \\<turnstile> P x IFF P x'", "have \"insert (x EQ x') H  \\<turnstile> (P (Var i))(i::=x) IFF (P(Var i))(i::=x')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (x EQ x') H \\<turnstile>\n    (P (Var i))(i::=x) IFF (P (Var i))(i::=x')", "by (rule eql_subst_fmla_Iff)"], ["proof (state)\nthis:\n  insert (x EQ x') H \\<turnstile> (P (Var i))(i::=x) IFF (P (Var i))(i::=x')\n\ngoal (1 subgoal):\n 1. H \\<turnstile> P x IFF P x'", "thus ?thesis"], ["proof (prove)\nusing this:\n  insert (x EQ x') H \\<turnstile> (P (Var i))(i::=x) IFF (P (Var i))(i::=x')\n\ngoal (1 subgoal):\n 1. H \\<turnstile> P x IFF P x'", "using assms i"], ["proof (prove)\nusing this:\n  insert (x EQ x') H \\<turnstile> (P (Var i))(i::=x) IFF (P (Var i))(i::=x')\n  atom ?i \\<sharp> tms \\<Longrightarrow>\n  (P ?t)(?i::=?x) = P (subst ?i ?x ?t)\n  H \\<turnstile> x EQ x'\n  atom i \\<sharp> tms\n\ngoal (1 subgoal):\n 1. H \\<turnstile> P x IFF P x'", "by (metis cut_same subst.simps(2))"], ["proof (state)\nthis:\n  H \\<turnstile> P x IFF P x'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma P2_cong:\n  fixes tms :: \"trm list\"\n  assumes sub: \"\\<And>i t u x. atom i \\<sharp> tms \\<Longrightarrow> (P t u)(i::=x) = P (subst i x t) (subst i x u)\"\n      and eq:  \"H \\<turnstile> x EQ x'\" \"H \\<turnstile> y EQ y'\"\n  shows \"H \\<turnstile> P x y IFF P x' y'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<turnstile> P x y IFF P x' y'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. H \\<turnstile> P x y IFF P x' y'", "have yy': \"{ y EQ y' } \\<turnstile> P x' y IFF P x' y'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {y EQ y'} \\<turnstile> P x' y IFF P x' y'", "by (rule P1_cong [where tms=\"[y,x']@tms\"]) (auto simp: fresh_Cons sub)"], ["proof (state)\nthis:\n  {y EQ y'} \\<turnstile> P x' y IFF P x' y'\n\ngoal (1 subgoal):\n 1. H \\<turnstile> P x y IFF P x' y'", "have \"{ x EQ x' } \\<turnstile> P x y IFF P x' y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x EQ x'} \\<turnstile> P x y IFF P x' y", "by (rule P1_cong [where tms=\"[y,x']@tms\"]) (auto simp: fresh_Cons sub)"], ["proof (state)\nthis:\n  {x EQ x'} \\<turnstile> P x y IFF P x' y\n\ngoal (1 subgoal):\n 1. H \\<turnstile> P x y IFF P x' y'", "hence \"{x EQ x', y EQ y'} \\<turnstile> P x y IFF P x' y'\""], ["proof (prove)\nusing this:\n  {x EQ x'} \\<turnstile> P x y IFF P x' y\n\ngoal (1 subgoal):\n 1. {x EQ x', y EQ y'} \\<turnstile> P x y IFF P x' y'", "by (metis Assume Iff_trans cut1 rotate2 yy')"], ["proof (state)\nthis:\n  {x EQ x', y EQ y'} \\<turnstile> P x y IFF P x' y'\n\ngoal (1 subgoal):\n 1. H \\<turnstile> P x y IFF P x' y'", "thus ?thesis"], ["proof (prove)\nusing this:\n  {x EQ x', y EQ y'} \\<turnstile> P x y IFF P x' y'\n\ngoal (1 subgoal):\n 1. H \\<turnstile> P x y IFF P x' y'", "by (metis cut2 eq)"], ["proof (state)\nthis:\n  H \\<turnstile> P x y IFF P x' y'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma P3_cong:\n  fixes tms :: \"trm list\"\n  assumes sub: \"\\<And>i t u v x. atom i \\<sharp> tms \\<Longrightarrow>\n                   (P t u v)(i::=x) = P (subst i x t) (subst i x u) (subst i x v)\"\n      and eq:  \"H \\<turnstile> x EQ x'\" \"H \\<turnstile> y EQ y'\" \"H \\<turnstile> z EQ z'\"\n  shows \"H \\<turnstile> P x y z IFF P x' y' z'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<turnstile> P x y z IFF P x' y' z'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. H \\<turnstile> P x y z IFF P x' y' z'", "obtain i::name where i: \"atom i \\<sharp> (z,z',y,y',x,x')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i.\n        atom i \\<sharp> (z, z', y, y', x, x') \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis obtain_fresh)"], ["proof (state)\nthis:\n  atom i \\<sharp> (z, z', y, y', x, x')\n\ngoal (1 subgoal):\n 1. H \\<turnstile> P x y z IFF P x' y' z'", "have tl: \"{ y EQ y', z EQ z' } \\<turnstile> P x' y z IFF P x' y' z'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {y EQ y', z EQ z'} \\<turnstile> P x' y z IFF P x' y' z'", "by (rule P2_cong [where tms=\"[z,z',y,y',x,x']@tms\"]) (auto simp: fresh_Cons sub)"], ["proof (state)\nthis:\n  {y EQ y', z EQ z'} \\<turnstile> P x' y z IFF P x' y' z'\n\ngoal (1 subgoal):\n 1. H \\<turnstile> P x y z IFF P x' y' z'", "have hd: \"{ x EQ x' } \\<turnstile> P x y z IFF P x' y z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x EQ x'} \\<turnstile> P x y z IFF P x' y z", "by (rule P1_cong [where tms=\"[z,y,x']@tms\"]) (auto simp: fresh_Cons sub)"], ["proof (state)\nthis:\n  {x EQ x'} \\<turnstile> P x y z IFF P x' y z\n\ngoal (1 subgoal):\n 1. H \\<turnstile> P x y z IFF P x' y' z'", "have \"{x EQ x', y EQ y', z EQ z'} \\<turnstile> P x y z IFF P x' y' z'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x EQ x', y EQ y', z EQ z'} \\<turnstile> P x y z IFF P x' y' z'", "by (metis Assume thin1 hd [THEN cut1] tl Iff_trans)"], ["proof (state)\nthis:\n  {x EQ x', y EQ y', z EQ z'} \\<turnstile> P x y z IFF P x' y' z'\n\ngoal (1 subgoal):\n 1. H \\<turnstile> P x y z IFF P x' y' z'", "thus ?thesis"], ["proof (prove)\nusing this:\n  {x EQ x', y EQ y', z EQ z'} \\<turnstile> P x y z IFF P x' y' z'\n\ngoal (1 subgoal):\n 1. H \\<turnstile> P x y z IFF P x' y' z'", "by (rule cut3) (rule eq)+"], ["proof (state)\nthis:\n  H \\<turnstile> P x y z IFF P x' y' z'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma P4_cong:\n  fixes tms :: \"trm list\"\n  assumes sub: \"\\<And>i t1 t2 t3 t4 x. atom i \\<sharp> tms \\<Longrightarrow>\n                 (P t1 t2 t3 t4)(i::=x) = P (subst i x t1) (subst i x t2) (subst i x t3) (subst i x t4)\"\n      and eq:  \"H \\<turnstile> x1 EQ x1'\" \"H \\<turnstile> x2 EQ x2'\" \"H \\<turnstile> x3 EQ x3'\" \"H \\<turnstile> x4 EQ x4'\"\n  shows \"H \\<turnstile> P x1 x2 x3 x4 IFF P x1' x2' x3' x4'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<turnstile> P x1 x2 x3 x4 IFF P x1' x2' x3' x4'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. H \\<turnstile> P x1 x2 x3 x4 IFF P x1' x2' x3' x4'", "obtain i::name where i: \"atom i \\<sharp> (x4,x4',x3,x3',x2,x2',x1,x1')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i.\n        atom\n         i \\<sharp> (x4, x4', x3, x3', x2, x2', x1, x1') \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis obtain_fresh)"], ["proof (state)\nthis:\n  atom i \\<sharp> (x4, x4', x3, x3', x2, x2', x1, x1')\n\ngoal (1 subgoal):\n 1. H \\<turnstile> P x1 x2 x3 x4 IFF P x1' x2' x3' x4'", "have tl: \"{ x2 EQ x2', x3 EQ x3', x4 EQ x4' } \\<turnstile> P x1' x2 x3 x4 IFF P x1' x2' x3' x4'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x2 EQ x2', x3 EQ x3', x4 EQ x4'} \\<turnstile>\n    P x1' x2 x3 x4 IFF P x1' x2' x3' x4'", "by (rule P3_cong [where tms=\"[x4,x4',x3,x3',x2,x2',x1,x1']@tms\"]) (auto simp: fresh_Cons sub)"], ["proof (state)\nthis:\n  {x2 EQ x2', x3 EQ x3', x4 EQ x4'} \\<turnstile>\n  P x1' x2 x3 x4 IFF P x1' x2' x3' x4'\n\ngoal (1 subgoal):\n 1. H \\<turnstile> P x1 x2 x3 x4 IFF P x1' x2' x3' x4'", "have hd: \"{ x1 EQ x1' } \\<turnstile> P x1 x2 x3 x4 IFF P x1' x2 x3 x4\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x1 EQ x1'} \\<turnstile> P x1 x2 x3 x4 IFF P x1' x2 x3 x4", "by (auto simp: fresh_Cons sub intro!: P1_cong [where tms=\"[x4,x3,x2,x1']@tms\"])"], ["proof (state)\nthis:\n  {x1 EQ x1'} \\<turnstile> P x1 x2 x3 x4 IFF P x1' x2 x3 x4\n\ngoal (1 subgoal):\n 1. H \\<turnstile> P x1 x2 x3 x4 IFF P x1' x2' x3' x4'", "have \"{x1 EQ x1', x2 EQ x2', x3 EQ x3', x4 EQ x4'} \\<turnstile> P x1 x2 x3 x4 IFF P x1' x2' x3' x4'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {x1 EQ x1', x2 EQ x2', x3 EQ x3', x4 EQ x4'} \\<turnstile>\n    P x1 x2 x3 x4 IFF P x1' x2' x3' x4'", "by (metis Assume thin1 hd [THEN cut1] tl Iff_trans)"], ["proof (state)\nthis:\n  {x1 EQ x1', x2 EQ x2', x3 EQ x3', x4 EQ x4'} \\<turnstile>\n  P x1 x2 x3 x4 IFF P x1' x2' x3' x4'\n\ngoal (1 subgoal):\n 1. H \\<turnstile> P x1 x2 x3 x4 IFF P x1' x2' x3' x4'", "thus ?thesis"], ["proof (prove)\nusing this:\n  {x1 EQ x1', x2 EQ x2', x3 EQ x3', x4 EQ x4'} \\<turnstile>\n  P x1 x2 x3 x4 IFF P x1' x2' x3' x4'\n\ngoal (1 subgoal):\n 1. H \\<turnstile> P x1 x2 x3 x4 IFF P x1' x2' x3' x4'", "by (rule cut4) (rule eq)+"], ["proof (state)\nthis:\n  H \\<turnstile> P x1 x2 x3 x4 IFF P x1' x2' x3' x4'\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>The formula @{term fls}\\<close>"], ["", "lemma neg_I [intro!]: \"insert A H \\<turnstile> fls \\<Longrightarrow> H \\<turnstile> neg A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert A H \\<turnstile> fls \\<Longrightarrow> H \\<turnstile> neg A", "unfolding fls_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. insert A H \\<turnstile> neg (zer EQ zer) \\<Longrightarrow>\n    H \\<turnstile> neg A", "by (meson neg_D neg_I0 Refl)"], ["", "lemma neg_E [intro!]: \"H \\<turnstile> A \\<Longrightarrow> insert (neg A) H \\<turnstile> fls\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<turnstile> A \\<Longrightarrow> insert (neg A) H \\<turnstile> fls", "by (rule ContraProve)"], ["", "declare neg_E [THEN rotate2, intro!]"], ["", "declare neg_E [THEN rotate3, intro!]"], ["", "declare neg_E [THEN rotate4, intro!]"], ["", "declare neg_E [THEN rotate5, intro!]"], ["", "declare neg_E [THEN rotate6, intro!]"], ["", "declare neg_E [THEN rotate7, intro!]"], ["", "declare neg_E [THEN rotate8, intro!]"], ["", "lemma neg_imp_I [intro!]: \"H \\<turnstile> A \\<Longrightarrow> insert B H \\<turnstile> fls \\<Longrightarrow> H \\<turnstile> neg (A IMP B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>H \\<turnstile> A; insert B H \\<turnstile> fls\\<rbrakk>\n    \\<Longrightarrow> H \\<turnstile> neg (A IMP B)", "by (metis negneg_I neg_dsj_I neg_I)"], ["", "lemma neg_imp_E [intro!]: \"insert (neg B) (insert A H) \\<turnstile> C \\<Longrightarrow> insert (neg (A IMP B)) H \\<turnstile> C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (neg B) (insert A H) \\<turnstile> C \\<Longrightarrow>\n    insert (neg (A IMP B)) H \\<turnstile> C", "apply (rule cut_same [where A=A])"], ["proof (prove)\ngoal (2 subgoals):\n 1. insert (neg B) (insert A H) \\<turnstile> C \\<Longrightarrow>\n    insert (neg (A IMP B)) H \\<turnstile> A\n 2. insert (neg B) (insert A H) \\<turnstile> C \\<Longrightarrow>\n    insert A (insert (neg (A IMP B)) H) \\<turnstile> C", "apply (metis Assume dsj_I1 negneg_D neg_mono)"], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (neg B) (insert A H) \\<turnstile> C \\<Longrightarrow>\n    insert A (insert (neg (A IMP B)) H) \\<turnstile> C", "apply (metis Swap imp_I rotate2 thin1)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "declare neg_imp_E [THEN rotate2, intro!]"], ["", "declare neg_imp_E [THEN rotate3, intro!]"], ["", "declare neg_imp_E [THEN rotate4, intro!]"], ["", "declare neg_imp_E [THEN rotate5, intro!]"], ["", "declare neg_imp_E [THEN rotate6, intro!]"], ["", "declare neg_imp_E [THEN rotate7, intro!]"], ["", "declare neg_imp_E [THEN rotate8, intro!]"], ["", "lemma fls_E [intro!]: \"insert fls H \\<turnstile> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert fls H \\<turnstile> A", "by (simp add: ContraProve fls_def)"], ["", "declare fls_E [THEN rotate2, intro!]"], ["", "declare fls_E [THEN rotate3, intro!]"], ["", "declare fls_E [THEN rotate4, intro!]"], ["", "declare fls_E [THEN rotate5, intro!]"], ["", "declare fls_E [THEN rotate6, intro!]"], ["", "declare fls_E [THEN rotate7, intro!]"], ["", "declare fls_E [THEN rotate8, intro!]"], ["", "lemma truth_provable: \"H \\<turnstile> (neg fls)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<turnstile> neg fls", "by (metis fls_E neg_I)"], ["", "lemma exFalso: \"H \\<turnstile> fls \\<Longrightarrow> H \\<turnstile> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H \\<turnstile> fls \\<Longrightarrow> H \\<turnstile> A", "by (metis neg_D truth_provable)"], ["", "text\\<open>Soundness of the provability relation\\<close>"], ["", "theorem nprv_sound: assumes \"H \\<turnstile> A\" shows \"(\\<forall>B\\<in>H. eval_fmla e B) \\<Longrightarrow> eval_fmla e A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>B\\<in>H. eval_fmla e B \\<Longrightarrow> eval_fmla e A", "using assms"], ["proof (prove)\nusing this:\n  H \\<turnstile> A\n\ngoal (1 subgoal):\n 1. \\<forall>B\\<in>H. eval_fmla e B \\<Longrightarrow> eval_fmla e A", "proof (induct arbitrary: e)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>A H e.\n       \\<lbrakk>A \\<in> H; Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e A\n 2. \\<And>A H e.\n       \\<lbrakk>A \\<in> Q_axioms; Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e A\n 3. \\<And>A H e.\n       \\<lbrakk>A \\<in> boolean_axioms; Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e A\n 4. \\<And>A H e.\n       \\<lbrakk>A \\<in> equality_axioms; Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e A\n 5. \\<And>A H e.\n       \\<lbrakk>A \\<in> special_axioms; Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e A\n 6. \\<And>H A B H' e.\n       \\<lbrakk>H \\<turnstile> A IMP B;\n        \\<And>e.\n           Ball H (eval_fmla e) \\<Longrightarrow> eval_fmla e (A IMP B);\n        H' \\<turnstile> A;\n        \\<And>e. Ball H' (eval_fmla e) \\<Longrightarrow> eval_fmla e A;\n        Ball (H \\<union> H') (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e B\n 7. \\<And>H A B i e.\n       \\<lbrakk>H \\<turnstile> A IMP B;\n        \\<And>e.\n           Ball H (eval_fmla e) \\<Longrightarrow> eval_fmla e (A IMP B);\n        atom i \\<sharp> B; \\<forall>C\\<in>H. atom i \\<sharp> C;\n        Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e (exi i A IMP B)", "case (Hyp A H)"], ["proof (state)\nthis:\n  A \\<in> H\n  \\<forall>a\\<in>H. eval_fmla e a\n\ngoal (7 subgoals):\n 1. \\<And>A H e.\n       \\<lbrakk>A \\<in> H; Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e A\n 2. \\<And>A H e.\n       \\<lbrakk>A \\<in> Q_axioms; Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e A\n 3. \\<And>A H e.\n       \\<lbrakk>A \\<in> boolean_axioms; Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e A\n 4. \\<And>A H e.\n       \\<lbrakk>A \\<in> equality_axioms; Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e A\n 5. \\<And>A H e.\n       \\<lbrakk>A \\<in> special_axioms; Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e A\n 6. \\<And>H A B H' e.\n       \\<lbrakk>H \\<turnstile> A IMP B;\n        \\<And>e.\n           Ball H (eval_fmla e) \\<Longrightarrow> eval_fmla e (A IMP B);\n        H' \\<turnstile> A;\n        \\<And>e. Ball H' (eval_fmla e) \\<Longrightarrow> eval_fmla e A;\n        Ball (H \\<union> H') (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e B\n 7. \\<And>H A B i e.\n       \\<lbrakk>H \\<turnstile> A IMP B;\n        \\<And>e.\n           Ball H (eval_fmla e) \\<Longrightarrow> eval_fmla e (A IMP B);\n        atom i \\<sharp> B; \\<forall>C\\<in>H. atom i \\<sharp> C;\n        Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e (exi i A IMP B)", "thus ?case"], ["proof (prove)\nusing this:\n  A \\<in> H\n  \\<forall>a\\<in>H. eval_fmla e a\n\ngoal (1 subgoal):\n 1. eval_fmla e A", "by auto"], ["proof (state)\nthis:\n  eval_fmla e A\n\ngoal (6 subgoals):\n 1. \\<And>A H e.\n       \\<lbrakk>A \\<in> Q_axioms; Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e A\n 2. \\<And>A H e.\n       \\<lbrakk>A \\<in> boolean_axioms; Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e A\n 3. \\<And>A H e.\n       \\<lbrakk>A \\<in> equality_axioms; Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e A\n 4. \\<And>A H e.\n       \\<lbrakk>A \\<in> special_axioms; Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e A\n 5. \\<And>H A B H' e.\n       \\<lbrakk>H \\<turnstile> A IMP B;\n        \\<And>e.\n           Ball H (eval_fmla e) \\<Longrightarrow> eval_fmla e (A IMP B);\n        H' \\<turnstile> A;\n        \\<And>e. Ball H' (eval_fmla e) \\<Longrightarrow> eval_fmla e A;\n        Ball (H \\<union> H') (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e B\n 6. \\<And>H A B i e.\n       \\<lbrakk>H \\<turnstile> A IMP B;\n        \\<And>e.\n           Ball H (eval_fmla e) \\<Longrightarrow> eval_fmla e (A IMP B);\n        atom i \\<sharp> B; \\<forall>C\\<in>H. atom i \\<sharp> C;\n        Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e (exi i A IMP B)", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>A H e.\n       \\<lbrakk>A \\<in> Q_axioms; Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e A\n 2. \\<And>A H e.\n       \\<lbrakk>A \\<in> boolean_axioms; Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e A\n 3. \\<And>A H e.\n       \\<lbrakk>A \\<in> equality_axioms; Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e A\n 4. \\<And>A H e.\n       \\<lbrakk>A \\<in> special_axioms; Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e A\n 5. \\<And>H A B H' e.\n       \\<lbrakk>H \\<turnstile> A IMP B;\n        \\<And>e.\n           Ball H (eval_fmla e) \\<Longrightarrow> eval_fmla e (A IMP B);\n        H' \\<turnstile> A;\n        \\<And>e. Ball H' (eval_fmla e) \\<Longrightarrow> eval_fmla e A;\n        Ball (H \\<union> H') (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e B\n 6. \\<And>H A B i e.\n       \\<lbrakk>H \\<turnstile> A IMP B;\n        \\<And>e.\n           Ball H (eval_fmla e) \\<Longrightarrow> eval_fmla e (A IMP B);\n        atom i \\<sharp> B; \\<forall>C\\<in>H. atom i \\<sharp> C;\n        Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e (exi i A IMP B)", "case (Q H)"], ["proof (state)\nthis:\n  H \\<in> Q_axioms\n  \\<forall>a\\<in>H_. eval_fmla e a\n\ngoal (6 subgoals):\n 1. \\<And>A H e.\n       \\<lbrakk>A \\<in> Q_axioms; Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e A\n 2. \\<And>A H e.\n       \\<lbrakk>A \\<in> boolean_axioms; Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e A\n 3. \\<And>A H e.\n       \\<lbrakk>A \\<in> equality_axioms; Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e A\n 4. \\<And>A H e.\n       \\<lbrakk>A \\<in> special_axioms; Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e A\n 5. \\<And>H A B H' e.\n       \\<lbrakk>H \\<turnstile> A IMP B;\n        \\<And>e.\n           Ball H (eval_fmla e) \\<Longrightarrow> eval_fmla e (A IMP B);\n        H' \\<turnstile> A;\n        \\<And>e. Ball H' (eval_fmla e) \\<Longrightarrow> eval_fmla e A;\n        Ball (H \\<union> H') (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e B\n 6. \\<And>H A B i e.\n       \\<lbrakk>H \\<turnstile> A IMP B;\n        \\<And>e.\n           Ball H (eval_fmla e) \\<Longrightarrow> eval_fmla e (A IMP B);\n        atom i \\<sharp> B; \\<forall>C\\<in>H. atom i \\<sharp> C;\n        Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e (exi i A IMP B)", "thus ?case"], ["proof (prove)\nusing this:\n  H \\<in> Q_axioms\n  \\<forall>a\\<in>H_. eval_fmla e a\n\ngoal (1 subgoal):\n 1. eval_fmla e H", "unfolding Q_axioms_def"], ["proof (prove)\nusing this:\n  H \\<in> {uu_.\n           \\<exists>A X1 X2.\n              uu_ = A \\<and>\n              X1 \\<noteq> X2 \\<and>\n              (A = neg (zer EQ suc (Var X1)) \\<or>\n               A = suc (Var X1) EQ suc (Var X2) IMP Var X1 EQ Var X2 \\<or>\n               A = Var X2 EQ zer OR exi X1 (Var X2 EQ suc (Var X1)) \\<or>\n               A = pls (Var X1) zer EQ Var X1 \\<or>\n               A =\n               pls (Var X1) (suc (Var X2)) EQ\n               suc (pls (Var X1) (Var X2)) \\<or>\n               A = tms (Var X1) zer EQ zer \\<or>\n               A =\n               tms (Var X1) (suc (Var X2)) EQ\n               pls (tms (Var X1) (Var X2)) (Var X1))}\n  \\<forall>a\\<in>H_. eval_fmla e a\n\ngoal (1 subgoal):\n 1. eval_fmla e H", "using not0_implies_Suc"], ["proof (prove)\nusing this:\n  H \\<in> {uu_.\n           \\<exists>A X1 X2.\n              uu_ = A \\<and>\n              X1 \\<noteq> X2 \\<and>\n              (A = neg (zer EQ suc (Var X1)) \\<or>\n               A = suc (Var X1) EQ suc (Var X2) IMP Var X1 EQ Var X2 \\<or>\n               A = Var X2 EQ zer OR exi X1 (Var X2 EQ suc (Var X1)) \\<or>\n               A = pls (Var X1) zer EQ Var X1 \\<or>\n               A =\n               pls (Var X1) (suc (Var X2)) EQ\n               suc (pls (Var X1) (Var X2)) \\<or>\n               A = tms (Var X1) zer EQ zer \\<or>\n               A =\n               tms (Var X1) (suc (Var X2)) EQ\n               pls (tms (Var X1) (Var X2)) (Var X1))}\n  \\<forall>a\\<in>H_. eval_fmla e a\n  ?n \\<noteq> 0 \\<Longrightarrow> \\<exists>m. ?n = Suc m\n\ngoal (1 subgoal):\n 1. eval_fmla e H", "by fastforce"], ["proof (state)\nthis:\n  eval_fmla e H\n\ngoal (5 subgoals):\n 1. \\<And>A H e.\n       \\<lbrakk>A \\<in> boolean_axioms; Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e A\n 2. \\<And>A H e.\n       \\<lbrakk>A \\<in> equality_axioms; Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e A\n 3. \\<And>A H e.\n       \\<lbrakk>A \\<in> special_axioms; Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e A\n 4. \\<And>H A B H' e.\n       \\<lbrakk>H \\<turnstile> A IMP B;\n        \\<And>e.\n           Ball H (eval_fmla e) \\<Longrightarrow> eval_fmla e (A IMP B);\n        H' \\<turnstile> A;\n        \\<And>e. Ball H' (eval_fmla e) \\<Longrightarrow> eval_fmla e A;\n        Ball (H \\<union> H') (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e B\n 5. \\<And>H A B i e.\n       \\<lbrakk>H \\<turnstile> A IMP B;\n        \\<And>e.\n           Ball H (eval_fmla e) \\<Longrightarrow> eval_fmla e (A IMP B);\n        atom i \\<sharp> B; \\<forall>C\\<in>H. atom i \\<sharp> C;\n        Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e (exi i A IMP B)", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>A H e.\n       \\<lbrakk>A \\<in> boolean_axioms; Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e A\n 2. \\<And>A H e.\n       \\<lbrakk>A \\<in> equality_axioms; Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e A\n 3. \\<And>A H e.\n       \\<lbrakk>A \\<in> special_axioms; Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e A\n 4. \\<And>H A B H' e.\n       \\<lbrakk>H \\<turnstile> A IMP B;\n        \\<And>e.\n           Ball H (eval_fmla e) \\<Longrightarrow> eval_fmla e (A IMP B);\n        H' \\<turnstile> A;\n        \\<And>e. Ball H' (eval_fmla e) \\<Longrightarrow> eval_fmla e A;\n        Ball (H \\<union> H') (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e B\n 5. \\<And>H A B i e.\n       \\<lbrakk>H \\<turnstile> A IMP B;\n        \\<And>e.\n           Ball H (eval_fmla e) \\<Longrightarrow> eval_fmla e (A IMP B);\n        atom i \\<sharp> B; \\<forall>C\\<in>H. atom i \\<sharp> C;\n        Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e (exi i A IMP B)", "case (Bool A H)"], ["proof (state)\nthis:\n  A \\<in> boolean_axioms\n  \\<forall>a\\<in>H. eval_fmla e a\n\ngoal (5 subgoals):\n 1. \\<And>A H e.\n       \\<lbrakk>A \\<in> boolean_axioms; Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e A\n 2. \\<And>A H e.\n       \\<lbrakk>A \\<in> equality_axioms; Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e A\n 3. \\<And>A H e.\n       \\<lbrakk>A \\<in> special_axioms; Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e A\n 4. \\<And>H A B H' e.\n       \\<lbrakk>H \\<turnstile> A IMP B;\n        \\<And>e.\n           Ball H (eval_fmla e) \\<Longrightarrow> eval_fmla e (A IMP B);\n        H' \\<turnstile> A;\n        \\<And>e. Ball H' (eval_fmla e) \\<Longrightarrow> eval_fmla e A;\n        Ball (H \\<union> H') (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e B\n 5. \\<And>H A B i e.\n       \\<lbrakk>H \\<turnstile> A IMP B;\n        \\<And>e.\n           Ball H (eval_fmla e) \\<Longrightarrow> eval_fmla e (A IMP B);\n        atom i \\<sharp> B; \\<forall>C\\<in>H. atom i \\<sharp> C;\n        Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e (exi i A IMP B)", "thus ?case"], ["proof (prove)\nusing this:\n  A \\<in> boolean_axioms\n  \\<forall>a\\<in>H. eval_fmla e a\n\ngoal (1 subgoal):\n 1. eval_fmla e A", "by (metis boolean_axioms_hold)"], ["proof (state)\nthis:\n  eval_fmla e A\n\ngoal (4 subgoals):\n 1. \\<And>A H e.\n       \\<lbrakk>A \\<in> equality_axioms; Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e A\n 2. \\<And>A H e.\n       \\<lbrakk>A \\<in> special_axioms; Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e A\n 3. \\<And>H A B H' e.\n       \\<lbrakk>H \\<turnstile> A IMP B;\n        \\<And>e.\n           Ball H (eval_fmla e) \\<Longrightarrow> eval_fmla e (A IMP B);\n        H' \\<turnstile> A;\n        \\<And>e. Ball H' (eval_fmla e) \\<Longrightarrow> eval_fmla e A;\n        Ball (H \\<union> H') (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e B\n 4. \\<And>H A B i e.\n       \\<lbrakk>H \\<turnstile> A IMP B;\n        \\<And>e.\n           Ball H (eval_fmla e) \\<Longrightarrow> eval_fmla e (A IMP B);\n        atom i \\<sharp> B; \\<forall>C\\<in>H. atom i \\<sharp> C;\n        Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e (exi i A IMP B)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>A H e.\n       \\<lbrakk>A \\<in> equality_axioms; Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e A\n 2. \\<And>A H e.\n       \\<lbrakk>A \\<in> special_axioms; Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e A\n 3. \\<And>H A B H' e.\n       \\<lbrakk>H \\<turnstile> A IMP B;\n        \\<And>e.\n           Ball H (eval_fmla e) \\<Longrightarrow> eval_fmla e (A IMP B);\n        H' \\<turnstile> A;\n        \\<And>e. Ball H' (eval_fmla e) \\<Longrightarrow> eval_fmla e A;\n        Ball (H \\<union> H') (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e B\n 4. \\<And>H A B i e.\n       \\<lbrakk>H \\<turnstile> A IMP B;\n        \\<And>e.\n           Ball H (eval_fmla e) \\<Longrightarrow> eval_fmla e (A IMP B);\n        atom i \\<sharp> B; \\<forall>C\\<in>H. atom i \\<sharp> C;\n        Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e (exi i A IMP B)", "case (eql A H)"], ["proof (state)\nthis:\n  A \\<in> equality_axioms\n  \\<forall>a\\<in>H. eval_fmla e a\n\ngoal (4 subgoals):\n 1. \\<And>A H e.\n       \\<lbrakk>A \\<in> equality_axioms; Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e A\n 2. \\<And>A H e.\n       \\<lbrakk>A \\<in> special_axioms; Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e A\n 3. \\<And>H A B H' e.\n       \\<lbrakk>H \\<turnstile> A IMP B;\n        \\<And>e.\n           Ball H (eval_fmla e) \\<Longrightarrow> eval_fmla e (A IMP B);\n        H' \\<turnstile> A;\n        \\<And>e. Ball H' (eval_fmla e) \\<Longrightarrow> eval_fmla e A;\n        Ball (H \\<union> H') (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e B\n 4. \\<And>H A B i e.\n       \\<lbrakk>H \\<turnstile> A IMP B;\n        \\<And>e.\n           Ball H (eval_fmla e) \\<Longrightarrow> eval_fmla e (A IMP B);\n        atom i \\<sharp> B; \\<forall>C\\<in>H. atom i \\<sharp> C;\n        Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e (exi i A IMP B)", "thus ?case"], ["proof (prove)\nusing this:\n  A \\<in> equality_axioms\n  \\<forall>a\\<in>H. eval_fmla e a\n\ngoal (1 subgoal):\n 1. eval_fmla e A", "by (metis equality_axioms_hold)"], ["proof (state)\nthis:\n  eval_fmla e A\n\ngoal (3 subgoals):\n 1. \\<And>A H e.\n       \\<lbrakk>A \\<in> special_axioms; Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e A\n 2. \\<And>H A B H' e.\n       \\<lbrakk>H \\<turnstile> A IMP B;\n        \\<And>e.\n           Ball H (eval_fmla e) \\<Longrightarrow> eval_fmla e (A IMP B);\n        H' \\<turnstile> A;\n        \\<And>e. Ball H' (eval_fmla e) \\<Longrightarrow> eval_fmla e A;\n        Ball (H \\<union> H') (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e B\n 3. \\<And>H A B i e.\n       \\<lbrakk>H \\<turnstile> A IMP B;\n        \\<And>e.\n           Ball H (eval_fmla e) \\<Longrightarrow> eval_fmla e (A IMP B);\n        atom i \\<sharp> B; \\<forall>C\\<in>H. atom i \\<sharp> C;\n        Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e (exi i A IMP B)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>A H e.\n       \\<lbrakk>A \\<in> special_axioms; Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e A\n 2. \\<And>H A B H' e.\n       \\<lbrakk>H \\<turnstile> A IMP B;\n        \\<And>e.\n           Ball H (eval_fmla e) \\<Longrightarrow> eval_fmla e (A IMP B);\n        H' \\<turnstile> A;\n        \\<And>e. Ball H' (eval_fmla e) \\<Longrightarrow> eval_fmla e A;\n        Ball (H \\<union> H') (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e B\n 3. \\<And>H A B i e.\n       \\<lbrakk>H \\<turnstile> A IMP B;\n        \\<And>e.\n           Ball H (eval_fmla e) \\<Longrightarrow> eval_fmla e (A IMP B);\n        atom i \\<sharp> B; \\<forall>C\\<in>H. atom i \\<sharp> C;\n        Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e (exi i A IMP B)", "case (Spec A H)"], ["proof (state)\nthis:\n  A \\<in> special_axioms\n  \\<forall>a\\<in>H. eval_fmla e a\n\ngoal (3 subgoals):\n 1. \\<And>A H e.\n       \\<lbrakk>A \\<in> special_axioms; Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e A\n 2. \\<And>H A B H' e.\n       \\<lbrakk>H \\<turnstile> A IMP B;\n        \\<And>e.\n           Ball H (eval_fmla e) \\<Longrightarrow> eval_fmla e (A IMP B);\n        H' \\<turnstile> A;\n        \\<And>e. Ball H' (eval_fmla e) \\<Longrightarrow> eval_fmla e A;\n        Ball (H \\<union> H') (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e B\n 3. \\<And>H A B i e.\n       \\<lbrakk>H \\<turnstile> A IMP B;\n        \\<And>e.\n           Ball H (eval_fmla e) \\<Longrightarrow> eval_fmla e (A IMP B);\n        atom i \\<sharp> B; \\<forall>C\\<in>H. atom i \\<sharp> C;\n        Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e (exi i A IMP B)", "thus ?case"], ["proof (prove)\nusing this:\n  A \\<in> special_axioms\n  \\<forall>a\\<in>H. eval_fmla e a\n\ngoal (1 subgoal):\n 1. eval_fmla e A", "by (metis special_axioms_hold)"], ["proof (state)\nthis:\n  eval_fmla e A\n\ngoal (2 subgoals):\n 1. \\<And>H A B H' e.\n       \\<lbrakk>H \\<turnstile> A IMP B;\n        \\<And>e.\n           Ball H (eval_fmla e) \\<Longrightarrow> eval_fmla e (A IMP B);\n        H' \\<turnstile> A;\n        \\<And>e. Ball H' (eval_fmla e) \\<Longrightarrow> eval_fmla e A;\n        Ball (H \\<union> H') (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e B\n 2. \\<And>H A B i e.\n       \\<lbrakk>H \\<turnstile> A IMP B;\n        \\<And>e.\n           Ball H (eval_fmla e) \\<Longrightarrow> eval_fmla e (A IMP B);\n        atom i \\<sharp> B; \\<forall>C\\<in>H. atom i \\<sharp> C;\n        Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e (exi i A IMP B)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>H A B H' e.\n       \\<lbrakk>H \\<turnstile> A IMP B;\n        \\<And>e.\n           Ball H (eval_fmla e) \\<Longrightarrow> eval_fmla e (A IMP B);\n        H' \\<turnstile> A;\n        \\<And>e. Ball H' (eval_fmla e) \\<Longrightarrow> eval_fmla e A;\n        Ball (H \\<union> H') (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e B\n 2. \\<And>H A B i e.\n       \\<lbrakk>H \\<turnstile> A IMP B;\n        \\<And>e.\n           Ball H (eval_fmla e) \\<Longrightarrow> eval_fmla e (A IMP B);\n        atom i \\<sharp> B; \\<forall>C\\<in>H. atom i \\<sharp> C;\n        Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e (exi i A IMP B)", "case (MP H A B H')"], ["proof (state)\nthis:\n  H \\<turnstile> A IMP B\n  \\<forall>a\\<in>H. eval_fmla ?e a \\<Longrightarrow> eval_fmla ?e (A IMP B)\n  H' \\<turnstile> A\n  \\<forall>a\\<in>H'. eval_fmla ?e a \\<Longrightarrow> eval_fmla ?e A\n  \\<forall>a\\<in>H \\<union> H'. eval_fmla e a\n\ngoal (2 subgoals):\n 1. \\<And>H A B H' e.\n       \\<lbrakk>H \\<turnstile> A IMP B;\n        \\<And>e.\n           Ball H (eval_fmla e) \\<Longrightarrow> eval_fmla e (A IMP B);\n        H' \\<turnstile> A;\n        \\<And>e. Ball H' (eval_fmla e) \\<Longrightarrow> eval_fmla e A;\n        Ball (H \\<union> H') (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e B\n 2. \\<And>H A B i e.\n       \\<lbrakk>H \\<turnstile> A IMP B;\n        \\<And>e.\n           Ball H (eval_fmla e) \\<Longrightarrow> eval_fmla e (A IMP B);\n        atom i \\<sharp> B; \\<forall>C\\<in>H. atom i \\<sharp> C;\n        Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e (exi i A IMP B)", "thus ?case"], ["proof (prove)\nusing this:\n  H \\<turnstile> A IMP B\n  \\<forall>a\\<in>H. eval_fmla ?e a \\<Longrightarrow> eval_fmla ?e (A IMP B)\n  H' \\<turnstile> A\n  \\<forall>a\\<in>H'. eval_fmla ?e a \\<Longrightarrow> eval_fmla ?e A\n  \\<forall>a\\<in>H \\<union> H'. eval_fmla e a\n\ngoal (1 subgoal):\n 1. eval_fmla e B", "by auto"], ["proof (state)\nthis:\n  eval_fmla e B\n\ngoal (1 subgoal):\n 1. \\<And>H A B i e.\n       \\<lbrakk>H \\<turnstile> A IMP B;\n        \\<And>e.\n           Ball H (eval_fmla e) \\<Longrightarrow> eval_fmla e (A IMP B);\n        atom i \\<sharp> B; \\<forall>C\\<in>H. atom i \\<sharp> C;\n        Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e (exi i A IMP B)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>H A B i e.\n       \\<lbrakk>H \\<turnstile> A IMP B;\n        \\<And>e.\n           Ball H (eval_fmla e) \\<Longrightarrow> eval_fmla e (A IMP B);\n        atom i \\<sharp> B; \\<forall>C\\<in>H. atom i \\<sharp> C;\n        Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e (exi i A IMP B)", "case (exiists H A B i e)"], ["proof (state)\nthis:\n  H \\<turnstile> A IMP B\n  \\<forall>a\\<in>H. eval_fmla ?e a \\<Longrightarrow> eval_fmla ?e (A IMP B)\n  atom i \\<sharp> B\n  \\<forall>C\\<in>H. atom i \\<sharp> C\n  \\<forall>a\\<in>H. eval_fmla e a\n\ngoal (1 subgoal):\n 1. \\<And>H A B i e.\n       \\<lbrakk>H \\<turnstile> A IMP B;\n        \\<And>e.\n           Ball H (eval_fmla e) \\<Longrightarrow> eval_fmla e (A IMP B);\n        atom i \\<sharp> B; \\<forall>C\\<in>H. atom i \\<sharp> C;\n        Ball H (eval_fmla e)\\<rbrakk>\n       \\<Longrightarrow> eval_fmla e (exi i A IMP B)", "thus ?case"], ["proof (prove)\nusing this:\n  H \\<turnstile> A IMP B\n  \\<forall>a\\<in>H. eval_fmla ?e a \\<Longrightarrow> eval_fmla ?e (A IMP B)\n  atom i \\<sharp> B\n  \\<forall>C\\<in>H. atom i \\<sharp> C\n  \\<forall>a\\<in>H. eval_fmla e a\n\ngoal (1 subgoal):\n 1. eval_fmla e (exi i A IMP B)", "by auto (metis forget_eval_fmla)"], ["proof (state)\nthis:\n  eval_fmla e (exi i A IMP B)\n\ngoal:\nNo subgoals!", "qed"], ["", "(*<*)"], ["", "end"], ["", "(*>*)"]]}