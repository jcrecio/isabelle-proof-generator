{"file_name": "/home/qj213/afp-2021-10-22/thys/Rewriting_Z/CL_Z.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Rewriting_Z", "problem_names": ["lemma App_mono:\n  \"(t, t') \\<in> red\\<^sup>* \\<Longrightarrow> (u, u') \\<in> red\\<^sup>* \\<Longrightarrow> (` t u, ` t' u') \\<in> red\\<^sup>*\"", "lemma bullet_app_red:\n  \"(` t u, bullet_app t u) \\<in> red\\<^sup>=\"", "lemma bullet_app_redsI:\n  \"(s, ` t u) \\<in> red\\<^sup>* \\<Longrightarrow> (s, bullet_app t u) \\<in> red\\<^sup>*\"", "lemma bullet_app_redL:\n  \"(t, t') \\<in> red \\<Longrightarrow> (bullet_app t u, bullet_app t' u) \\<in> red\\<^sup>*\"", "lemma bullet_app_redR:\n  \"(u, u') \\<in> red \\<Longrightarrow> (bullet_app t u, bullet_app t u') \\<in> red\\<^sup>*\"", "lemma bullet_app_mono:\n  assumes \"(t, t') \\<in> red\\<^sup>*\" \"(u, u') \\<in> red\\<^sup>*\" shows \"(bullet_app t u, bullet_app t' u') \\<in> red\\<^sup>*\"", "lemma bullet_incremental:\n  \"(t, bullet t) \\<in> red\\<^sup>*\"", "lemmas CR_red = CL.CR"], "translations": [["", "lemma App_mono:\n  \"(t, t') \\<in> red\\<^sup>* \\<Longrightarrow> (u, u') \\<in> red\\<^sup>* \\<Longrightarrow> (` t u, ` t' u') \\<in> red\\<^sup>*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(t, t') \\<in> red\\<^sup>*; (u, u') \\<in> red\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> (` t u, ` t' u') \\<in> red\\<^sup>*", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>(t, t') \\<in> red\\<^sup>*; (u, u') \\<in> red\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> (` t u, ` t' u') \\<in> red\\<^sup>*", "assume \"(t, t') \\<in> red\\<^sup>*\""], ["proof (state)\nthis:\n  (t, t') \\<in> red\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(t, t') \\<in> red\\<^sup>*; (u, u') \\<in> red\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> (` t u, ` t' u') \\<in> red\\<^sup>*", "hence \"(` t u, ` t' u) \\<in> red\\<^sup>*\""], ["proof (prove)\nusing this:\n  (t, t') \\<in> red\\<^sup>*\n\ngoal (1 subgoal):\n 1. (` t u, ` t' u) \\<in> red\\<^sup>*", "by (induct t' rule: rtrancl_induct) (auto intro: rtrancl_into_rtrancl red.intros)"], ["proof (state)\nthis:\n  (` t u, ` t' u) \\<in> red\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(t, t') \\<in> red\\<^sup>*; (u, u') \\<in> red\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> (` t u, ` t' u') \\<in> red\\<^sup>*", "moreover"], ["proof (state)\nthis:\n  (` t u, ` t' u) \\<in> red\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(t, t') \\<in> red\\<^sup>*; (u, u') \\<in> red\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> (` t u, ` t' u') \\<in> red\\<^sup>*", "assume \"(u, u') \\<in> red\\<^sup>*\""], ["proof (state)\nthis:\n  (u, u') \\<in> red\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(t, t') \\<in> red\\<^sup>*; (u, u') \\<in> red\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> (` t u, ` t' u') \\<in> red\\<^sup>*", "hence \"(` t' u, ` t' u') \\<in> red\\<^sup>*\""], ["proof (prove)\nusing this:\n  (u, u') \\<in> red\\<^sup>*\n\ngoal (1 subgoal):\n 1. (` t' u, ` t' u') \\<in> red\\<^sup>*", "by (induct u' rule: rtrancl_induct) (auto intro: rtrancl_into_rtrancl red.intros)"], ["proof (state)\nthis:\n  (` t' u, ` t' u') \\<in> red\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(t, t') \\<in> red\\<^sup>*; (u, u') \\<in> red\\<^sup>*\\<rbrakk>\n    \\<Longrightarrow> (` t u, ` t' u') \\<in> red\\<^sup>*", "ultimately"], ["proof (chain)\npicking this:\n  (` t u, ` t' u) \\<in> red\\<^sup>*\n  (` t' u, ` t' u') \\<in> red\\<^sup>*", "show ?thesis"], ["proof (prove)\nusing this:\n  (` t u, ` t' u) \\<in> red\\<^sup>*\n  (` t' u, ` t' u') \\<in> red\\<^sup>*\n\ngoal (1 subgoal):\n 1. (` t u, ` t' u') \\<in> red\\<^sup>*", "by auto"], ["proof (state)\nthis:\n  (` t u, ` t' u') \\<in> red\\<^sup>*\n\ngoal:\nNo subgoals!", "qed"], ["", "fun bullet_app :: \"CL \\<Rightarrow> CL \\<Rightarrow> CL\" where\n  \"bullet_app (` ` S x y) z = ` ` x z ` y z\"\n| \"bullet_app (` K x) y = x\"\n| \"bullet_app I x = x\"\n| \"bullet_app t u = ` t u\""], ["", "lemma bullet_app_red:\n  \"(` t u, bullet_app t u) \\<in> red\\<^sup>=\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (` t u, bullet_app t u) \\<in> red\\<^sup>=", "by (induct t u rule: bullet_app.induct) (auto intro: red.intros)"], ["", "lemma bullet_app_redsI:\n  \"(s, ` t u) \\<in> red\\<^sup>* \\<Longrightarrow> (s, bullet_app t u) \\<in> red\\<^sup>*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s, ` t u) \\<in> red\\<^sup>* \\<Longrightarrow>\n    (s, bullet_app t u) \\<in> red\\<^sup>*", "using bullet_app_red[of t u]"], ["proof (prove)\nusing this:\n  (` t u, bullet_app t u) \\<in> red\\<^sup>=\n\ngoal (1 subgoal):\n 1. (s, ` t u) \\<in> red\\<^sup>* \\<Longrightarrow>\n    (s, bullet_app t u) \\<in> red\\<^sup>*", "by auto"], ["", "lemma bullet_app_redL:\n  \"(t, t') \\<in> red \\<Longrightarrow> (bullet_app t u, bullet_app t' u) \\<in> red\\<^sup>*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (t, t') \\<in> red \\<Longrightarrow>\n    (bullet_app t u, bullet_app t' u) \\<in> red\\<^sup>*", "by (induct t u rule: bullet_app.induct)\n   (auto 0 6 intro: App_mono bullet_app_redsI elim: red.cases simp only: bullet_app.simps)"], ["", "lemma bullet_app_redR:\n  \"(u, u') \\<in> red \\<Longrightarrow> (bullet_app t u, bullet_app t u') \\<in> red\\<^sup>*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u, u') \\<in> red \\<Longrightarrow>\n    (bullet_app t u, bullet_app t u') \\<in> red\\<^sup>*", "by (induct t u rule: bullet_app.induct) (auto intro: App_mono)"], ["", "lemma bullet_app_mono:\n  assumes \"(t, t') \\<in> red\\<^sup>*\" \"(u, u') \\<in> red\\<^sup>*\" shows \"(bullet_app t u, bullet_app t' u') \\<in> red\\<^sup>*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (bullet_app t u, bullet_app t' u') \\<in> red\\<^sup>*", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (bullet_app t u, bullet_app t' u') \\<in> red\\<^sup>*", "have \"(bullet_app t u, bullet_app t' u) \\<in> red\\<^sup>*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (bullet_app t u, bullet_app t' u) \\<in> red\\<^sup>*", "using assms(1)"], ["proof (prove)\nusing this:\n  (t, t') \\<in> red\\<^sup>*\n\ngoal (1 subgoal):\n 1. (bullet_app t u, bullet_app t' u) \\<in> red\\<^sup>*", "by (induct t' rule: rtrancl_induct) (auto intro: rtrancl_trans bullet_app_redL)"], ["proof (state)\nthis:\n  (bullet_app t u, bullet_app t' u) \\<in> red\\<^sup>*\n\ngoal (1 subgoal):\n 1. (bullet_app t u, bullet_app t' u') \\<in> red\\<^sup>*", "moreover"], ["proof (state)\nthis:\n  (bullet_app t u, bullet_app t' u) \\<in> red\\<^sup>*\n\ngoal (1 subgoal):\n 1. (bullet_app t u, bullet_app t' u') \\<in> red\\<^sup>*", "have \"(bullet_app t' u, bullet_app t' u') \\<in> red\\<^sup>*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (bullet_app t' u, bullet_app t' u') \\<in> red\\<^sup>*", "using assms(2)"], ["proof (prove)\nusing this:\n  (u, u') \\<in> red\\<^sup>*\n\ngoal (1 subgoal):\n 1. (bullet_app t' u, bullet_app t' u') \\<in> red\\<^sup>*", "by (induct u' rule: rtrancl_induct) (auto intro: rtrancl_trans bullet_app_redR)"], ["proof (state)\nthis:\n  (bullet_app t' u, bullet_app t' u') \\<in> red\\<^sup>*\n\ngoal (1 subgoal):\n 1. (bullet_app t u, bullet_app t' u') \\<in> red\\<^sup>*", "ultimately"], ["proof (chain)\npicking this:\n  (bullet_app t u, bullet_app t' u) \\<in> red\\<^sup>*\n  (bullet_app t' u, bullet_app t' u') \\<in> red\\<^sup>*", "show ?thesis"], ["proof (prove)\nusing this:\n  (bullet_app t u, bullet_app t' u) \\<in> red\\<^sup>*\n  (bullet_app t' u, bullet_app t' u') \\<in> red\\<^sup>*\n\ngoal (1 subgoal):\n 1. (bullet_app t u, bullet_app t' u') \\<in> red\\<^sup>*", "by auto"], ["proof (state)\nthis:\n  (bullet_app t u, bullet_app t' u') \\<in> red\\<^sup>*\n\ngoal:\nNo subgoals!", "qed"], ["", "fun bullet :: \"CL \\<Rightarrow> CL\" where\n  \"bullet (` t u) = bullet_app (bullet t) (bullet u)\"\n| \"bullet t = t\""], ["", "lemma bullet_incremental:\n  \"(t, bullet t) \\<in> red\\<^sup>*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (t, bullet t) \\<in> red\\<^sup>*", "by (induct t rule: bullet.induct) (auto intro: App_mono bullet_app_redsI)"], ["", "interpretation CL:z_property bullet red"], ["proof (prove)\ngoal (1 subgoal):\n 1. z_property bullet red", "proof (unfold_locales, intro conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> red \\<Longrightarrow> (b, bullet a) \\<in> red\\<^sup>*\n 2. \\<And>a b.\n       (a, b) \\<in> red \\<Longrightarrow>\n       (bullet a, bullet b) \\<in> red\\<^sup>*", "fix t u"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> red \\<Longrightarrow> (b, bullet a) \\<in> red\\<^sup>*\n 2. \\<And>a b.\n       (a, b) \\<in> red \\<Longrightarrow>\n       (bullet a, bullet b) \\<in> red\\<^sup>*", "assume \"(t, u) \\<in> red\""], ["proof (state)\nthis:\n  (t, u) \\<in> red\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b) \\<in> red \\<Longrightarrow> (b, bullet a) \\<in> red\\<^sup>*\n 2. \\<And>a b.\n       (a, b) \\<in> red \\<Longrightarrow>\n       (bullet a, bullet b) \\<in> red\\<^sup>*", "thus \"(u, bullet t) \\<in> red\\<^sup>*\""], ["proof (prove)\nusing this:\n  (t, u) \\<in> red\n\ngoal (1 subgoal):\n 1. (u, bullet t) \\<in> red\\<^sup>*", "proof (induct t arbitrary: u rule: bullet.induct)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>t u ua.\n       \\<lbrakk>\\<And>u.\n                   (t, u) \\<in> red \\<Longrightarrow>\n                   (u, bullet t) \\<in> red\\<^sup>*;\n        \\<And>ua.\n           (u, ua) \\<in> red \\<Longrightarrow>\n           (ua, bullet u) \\<in> red\\<^sup>*;\n        (` t u, ua) \\<in> red\\<rbrakk>\n       \\<Longrightarrow> (ua, bullet (` t u)) \\<in> red\\<^sup>*\n 2. \\<And>u.\n       (S, u) \\<in> red \\<Longrightarrow> (u, bullet S) \\<in> red\\<^sup>*\n 3. \\<And>u.\n       (K, u) \\<in> red \\<Longrightarrow> (u, bullet K) \\<in> red\\<^sup>*\n 4. \\<And>u.\n       (I, u) \\<in> red \\<Longrightarrow> (u, bullet I) \\<in> red\\<^sup>*", "case (1 t1 t2)"], ["proof (state)\nthis:\n  (t1, ?u) \\<in> red \\<Longrightarrow> (?u, bullet t1) \\<in> red\\<^sup>*\n  (t2, ?u) \\<in> red \\<Longrightarrow> (?u, bullet t2) \\<in> red\\<^sup>*\n  (` t1 t2, u) \\<in> red\n\ngoal (4 subgoals):\n 1. \\<And>t u ua.\n       \\<lbrakk>\\<And>u.\n                   (t, u) \\<in> red \\<Longrightarrow>\n                   (u, bullet t) \\<in> red\\<^sup>*;\n        \\<And>ua.\n           (u, ua) \\<in> red \\<Longrightarrow>\n           (ua, bullet u) \\<in> red\\<^sup>*;\n        (` t u, ua) \\<in> red\\<rbrakk>\n       \\<Longrightarrow> (ua, bullet (` t u)) \\<in> red\\<^sup>*\n 2. \\<And>u.\n       (S, u) \\<in> red \\<Longrightarrow> (u, bullet S) \\<in> red\\<^sup>*\n 3. \\<And>u.\n       (K, u) \\<in> red \\<Longrightarrow> (u, bullet K) \\<in> red\\<^sup>*\n 4. \\<And>u.\n       (I, u) \\<in> red \\<Longrightarrow> (u, bullet I) \\<in> red\\<^sup>*", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (u, bullet (` t1 t2)) \\<in> red\\<^sup>*", "using 1(3)"], ["proof (prove)\nusing this:\n  (` t1 t2, u) \\<in> red\n\ngoal (1 subgoal):\n 1. (u, bullet (` t1 t2)) \\<in> red\\<^sup>*", "by (cases) (auto intro: 1 App_mono bullet_app_redsI bullet_incremental)"], ["proof (state)\nthis:\n  (u, bullet (` t1 t2)) \\<in> red\\<^sup>*\n\ngoal (3 subgoals):\n 1. \\<And>u.\n       (S, u) \\<in> red \\<Longrightarrow> (u, bullet S) \\<in> red\\<^sup>*\n 2. \\<And>u.\n       (K, u) \\<in> red \\<Longrightarrow> (u, bullet K) \\<in> red\\<^sup>*\n 3. \\<And>u.\n       (I, u) \\<in> red \\<Longrightarrow> (u, bullet I) \\<in> red\\<^sup>*", "qed (auto elim: red.cases)"], ["proof (state)\nthis:\n  (u, bullet t) \\<in> red\\<^sup>*\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (a, b) \\<in> red \\<Longrightarrow>\n       (bullet a, bullet b) \\<in> red\\<^sup>*", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (a, b) \\<in> red \\<Longrightarrow>\n       (bullet a, bullet b) \\<in> red\\<^sup>*", "fix t u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (a, b) \\<in> red \\<Longrightarrow>\n       (bullet a, bullet b) \\<in> red\\<^sup>*", "assume \"(t, u) \\<in> red\""], ["proof (state)\nthis:\n  (t, u) \\<in> red\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (a, b) \\<in> red \\<Longrightarrow>\n       (bullet a, bullet b) \\<in> red\\<^sup>*", "thus \"(bullet t, bullet u) \\<in> red\\<^sup>*\""], ["proof (prove)\nusing this:\n  (t, u) \\<in> red\n\ngoal (1 subgoal):\n 1. (bullet t, bullet u) \\<in> red\\<^sup>*", "by (induct t u rule: red.induct) (auto intro: App_mono bullet_app_mono bullet_app_redsI)"], ["proof (state)\nthis:\n  (bullet t, bullet u) \\<in> red\\<^sup>*\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas CR_red = CL.CR"], ["", "end"]]}