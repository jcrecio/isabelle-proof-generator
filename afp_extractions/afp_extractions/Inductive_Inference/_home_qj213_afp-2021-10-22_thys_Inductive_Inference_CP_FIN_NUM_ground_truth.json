{"file_name": "/home/qj213/afp-2021-10-22/thys/Inductive_Inference/CP_FIN_NUM.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Inductive_Inference", "problem_names": ["lemma nonempty_FIN_wrt_impl_CP:\n  assumes \"U \\<noteq> {}\" and \"U \\<in> FIN_wrt \\<psi>\"\n  shows \"U \\<in> CP_wrt \\<psi>\"", "lemma FIN_wrt_impl_CP:\n  assumes \"U \\<in> FIN_wrt \\<psi>\"\n  shows \"U \\<in> CP_wrt \\<psi>\"", "lemma findr_total: \"findr e \\<down>\"", "lemma findr_ex:\n  assumes \"\\<exists>i<e_length e. e_nth e i \\<noteq> 0\"\n  shows \"the (findr e) < e_length e\"\n    and \"e_nth e (the (findr e)) \\<noteq> 0\"\n    and \"\\<forall>i. the (findr e) < i \\<and> i < e_length e \\<longrightarrow> e_nth e i = 0\"", "lemma r_findr_prim [simp]: \"prim_recfn 1 r_findr\"", "lemma r_findr [simp]: \"eval r_findr [e] = findr e\"", "lemma U0_in_CP: \"U\\<^sub>0 \\<in> CP\"", "lemma CP_not_closed_subseteq: \"\\<exists>V U. V \\<subseteq> U \\<and> U \\<in> CP \\<and> V \\<notin> CP\"", "lemma U0_not_in_FIN: \"U\\<^sub>0 \\<notin> FIN\"", "theorem FIN_subset_CP: \"FIN \\<subset> CP\"", "lemma V0_altdef: \"V\\<^sub>0 = {[i] \\<odot> f| i f. f \\<in> \\<R> \\<and> \\<phi> i = [i] \\<odot> f}\"\n  (is \"V\\<^sub>0 = ?W\")", "lemma V0_in_FIN: \"V\\<^sub>0 \\<in> FIN\"", "lemma prepend_goedel:\n  assumes \"f \\<in> \\<R>\"\n  shows \"\\<exists>i. \\<phi> i = [i] \\<odot> f\"", "lemma V0_in_FIN_minus_NUM: \"V\\<^sub>0 \\<in> FIN - NUM\"", "theorem CP_not_subseteq_NUM: \"\\<not> CP \\<subseteq> NUM\"", "theorem NUM_not_subseteq_CP: \"\\<not> NUM \\<subseteq> CP\"", "lemma r_consist_upto_recfn: \"recfn 2 r_psi \\<Longrightarrow> recfn 3 (r_consist_upto r_psi)\"", "lemma r_consist_upto:\n  assumes \"recfn 2 r_psi\"\n  shows \"\\<forall>k<j. eval r_psi [i, k] \\<down> \\<Longrightarrow>\n      eval (r_consist_upto r_psi) [j, i, e] =\n        (if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k then Some 0 else Some 1)\"\n    and \"\\<not> (\\<forall>k<j. eval r_psi [i, k] \\<down>) \\<Longrightarrow> eval (r_consist_upto r_psi) [j, i, e] \\<up>\"", "lemma r_consistent_recfn [simp]: \"recfn 2 r_psi \\<Longrightarrow> recfn 2 (r_consistent r_psi)\"", "lemma r_consistent_converg:\n  assumes \"recfn 2 r_psi\" and \"\\<forall>k<e_length e. eval r_psi [i, k] \\<down>\"\n  shows \"eval (r_consistent r_psi) [i, e] \\<down>=\n    (if \\<forall>k<e_length e. eval r_psi [i, k] \\<down>= e_nth e k then 0 else 1)\"", "lemma r_consistent_diverg:\n  assumes \"recfn 2 r_psi\" and \"\\<exists>k<e_length e. eval r_psi [i, k] \\<up>\"\n  shows \"eval (r_consistent r_psi) [i, e] \\<up>\"", "lemma r_consistent:\n  assumes \"recfn 2 r_psi\" and \"\\<forall>x y. eval r_psi [x, y] = \\<psi> x y\"\n  shows \"eval (r_consistent r_psi) [i, e] = consistent \\<psi> i e\"", "lemma consistent_in_P2:\n  assumes \"\\<psi> \\<in> \\<P>\\<^sup>2\"\n  shows \"consistent \\<psi> \\<in> \\<P>\\<^sup>2\"", "lemma consistent_for_R2:\n  assumes \"\\<psi> \\<in> \\<R>\\<^sup>2\"\n  shows \"consistent \\<psi> i e =\n    (if \\<forall>j<e_length e. \\<psi> i j \\<down>= e_nth e j then Some 0 else Some 1)\"", "lemma consistent_init:\n  assumes \"\\<psi> \\<in> \\<R>\\<^sup>2\" and \"f \\<in> \\<R>\"\n  shows \"consistent \\<psi> i (f \\<triangleright> n) = (if \\<psi> i \\<triangleright> n = f \\<triangleright> n then Some 0 else Some 1)\"", "lemma consistent_in_R2:\n  assumes \"\\<psi> \\<in> \\<R>\\<^sup>2\"\n  shows \"consistent \\<psi> \\<in> \\<R>\\<^sup>2\"", "lemma min_cons_hyp_in_P1:\n  assumes \"\\<psi> \\<in> \\<R>\\<^sup>2\"\n  shows \"min_cons_hyp \\<psi> \\<in> \\<P>\"", "lemma NUM_imp_learn_total:\n  assumes \"\\<psi> \\<in> \\<R>\\<^sup>2\" and \"U \\<in> NUM_wrt \\<psi>\"\n  shows \"learn_total \\<psi> U (min_cons_hyp \\<psi>)\"", "theorem NUM_subset_TOTAL: \"NUM \\<subset> TOTAL\""], "translations": [["", "lemma nonempty_FIN_wrt_impl_CP:\n  assumes \"U \\<noteq> {}\" and \"U \\<in> FIN_wrt \\<psi>\"\n  shows \"U \\<in> CP_wrt \\<psi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U \\<in> CP_wrt \\<psi>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. U \\<in> CP_wrt \\<psi>", "obtain s where \"learn_fin \\<psi> U s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s.\n        learn_fin \\<psi> U s \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms(2) FIN_wrt_def"], ["proof (prove)\nusing this:\n  U \\<in> FIN_wrt \\<psi>\n  FIN_wrt ?\\<psi> \\<equiv> {U. \\<exists>s. learn_fin ?\\<psi> U s}\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        learn_fin \\<psi> U s \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  learn_fin \\<psi> U s\n\ngoal (1 subgoal):\n 1. U \\<in> CP_wrt \\<psi>", "then"], ["proof (chain)\npicking this:\n  learn_fin \\<psi> U s", "have env: \"environment \\<psi> U s\" and\n    fin: \"\\<And>f. f \\<in> U \\<Longrightarrow>\n      \\<exists>i n\\<^sub>0. \\<psi> i = f \\<and> (\\<forall>n<n\\<^sub>0. s (f \\<triangleright> n) \\<down>= 0) \\<and> (\\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= Suc i)\""], ["proof (prove)\nusing this:\n  learn_fin \\<psi> U s\n\ngoal (1 subgoal):\n 1. environment \\<psi> U s &&&\n    (\\<And>f.\n        f \\<in> U \\<Longrightarrow>\n        \\<exists>i n\\<^sub>0.\n           \\<psi> i = f \\<and>\n           (\\<forall>n<n\\<^sub>0.\n               s (f \\<triangleright> n) \\<down>= 0) \\<and>\n           (\\<forall>n\\<ge>n\\<^sub>0.\n               s (f \\<triangleright> n) \\<down>= Suc i))", "using learn_finE"], ["proof (prove)\nusing this:\n  learn_fin \\<psi> U s\n  learn_fin ?\\<psi> ?U ?s \\<Longrightarrow> environment ?\\<psi> ?U ?s\n  \\<lbrakk>learn_fin ?\\<psi> ?U ?s; ?f \\<in> ?U\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i n\\<^sub>0.\n                       ?\\<psi> i = ?f \\<and>\n                       (\\<forall>n<n\\<^sub>0.\n                           ?s (?f \\<triangleright> n) \\<down>= 0) \\<and>\n                       (\\<forall>n\\<ge>n\\<^sub>0.\n                           ?s (?f \\<triangleright> n) \\<down>= Suc i)\n\ngoal (1 subgoal):\n 1. environment \\<psi> U s &&&\n    (\\<And>f.\n        f \\<in> U \\<Longrightarrow>\n        \\<exists>i n\\<^sub>0.\n           \\<psi> i = f \\<and>\n           (\\<forall>n<n\\<^sub>0.\n               s (f \\<triangleright> n) \\<down>= 0) \\<and>\n           (\\<forall>n\\<ge>n\\<^sub>0.\n               s (f \\<triangleright> n) \\<down>= Suc i))", "by auto"], ["proof (state)\nthis:\n  environment \\<psi> U s\n  ?f \\<in> U \\<Longrightarrow>\n  \\<exists>i n\\<^sub>0.\n     \\<psi> i = ?f \\<and>\n     (\\<forall>n<n\\<^sub>0. s (?f \\<triangleright> n) \\<down>= 0) \\<and>\n     (\\<forall>n\\<ge>n\\<^sub>0. s (?f \\<triangleright> n) \\<down>= Suc i)\n\ngoal (1 subgoal):\n 1. U \\<in> CP_wrt \\<psi>", "from assms(1)"], ["proof (chain)\npicking this:\n  U \\<noteq> {}", "obtain f\\<^sub>0 where \"f\\<^sub>0 \\<in> U\""], ["proof (prove)\nusing this:\n  U \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>f\\<^sub>0.\n        f\\<^sub>0 \\<in> U \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  f\\<^sub>0 \\<in> U\n\ngoal (1 subgoal):\n 1. U \\<in> CP_wrt \\<psi>", "with fin"], ["proof (chain)\npicking this:\n  ?f \\<in> U \\<Longrightarrow>\n  \\<exists>i n\\<^sub>0.\n     \\<psi> i = ?f \\<and>\n     (\\<forall>n<n\\<^sub>0. s (?f \\<triangleright> n) \\<down>= 0) \\<and>\n     (\\<forall>n\\<ge>n\\<^sub>0. s (?f \\<triangleright> n) \\<down>= Suc i)\n  f\\<^sub>0 \\<in> U", "obtain i\\<^sub>0 where \"\\<psi> i\\<^sub>0 = f\\<^sub>0\""], ["proof (prove)\nusing this:\n  ?f \\<in> U \\<Longrightarrow>\n  \\<exists>i n\\<^sub>0.\n     \\<psi> i = ?f \\<and>\n     (\\<forall>n<n\\<^sub>0. s (?f \\<triangleright> n) \\<down>= 0) \\<and>\n     (\\<forall>n\\<ge>n\\<^sub>0. s (?f \\<triangleright> n) \\<down>= Suc i)\n  f\\<^sub>0 \\<in> U\n\ngoal (1 subgoal):\n 1. (\\<And>i\\<^sub>0.\n        \\<psi> i\\<^sub>0 = f\\<^sub>0 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<psi> i\\<^sub>0 = f\\<^sub>0\n\ngoal (1 subgoal):\n 1. U \\<in> CP_wrt \\<psi>", "define t where \"t x \\<equiv>\n    (if s x \\<up> then None else if s x \\<down>= 0 then Some i\\<^sub>0 else Some (the (s x) - 1))\"\n    for x"], ["proof (state)\nthis:\n  t ?x \\<equiv>\n  if s ?x \\<up> then None\n  else if s ?x \\<down>= 0 then Some i\\<^sub>0 else Some (the (s ?x) - 1)\n\ngoal (1 subgoal):\n 1. U \\<in> CP_wrt \\<psi>", "have \"t \\<in> \\<P>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> \\<P>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. t \\<in> \\<P>", "from env"], ["proof (chain)\npicking this:\n  environment \\<psi> U s", "obtain rs where rs: \"recfn 1 rs\" \"\\<And>x. eval rs [x] = s x\""], ["proof (prove)\nusing this:\n  environment \\<psi> U s\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>recfn 1 rs; \\<And>x. eval rs [x] = s x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  recfn 1 rs\n  eval rs [?x] = s ?x\n\ngoal (1 subgoal):\n 1. t \\<in> \\<P>", "define rt where \"rt = Cn 1 r_ifz [rs, r_const i\\<^sub>0, Cn 1 r_dec [rs]]\""], ["proof (state)\nthis:\n  rt = Cn 1 r_ifz [rs, r_const i\\<^sub>0, Cn 1 r_dec [rs]]\n\ngoal (1 subgoal):\n 1. t \\<in> \\<P>", "then"], ["proof (chain)\npicking this:\n  rt = Cn 1 r_ifz [rs, r_const i\\<^sub>0, Cn 1 r_dec [rs]]", "have \"recfn 1 rt\""], ["proof (prove)\nusing this:\n  rt = Cn 1 r_ifz [rs, r_const i\\<^sub>0, Cn 1 r_dec [rs]]\n\ngoal (1 subgoal):\n 1. recfn 1 rt", "using rs(1)"], ["proof (prove)\nusing this:\n  rt = Cn 1 r_ifz [rs, r_const i\\<^sub>0, Cn 1 r_dec [rs]]\n  recfn 1 rs\n\ngoal (1 subgoal):\n 1. recfn 1 rt", "by simp"], ["proof (state)\nthis:\n  recfn 1 rt\n\ngoal (1 subgoal):\n 1. t \\<in> \\<P>", "then"], ["proof (chain)\npicking this:\n  recfn 1 rt", "have \"eval rt [x] \\<down>= (if s x \\<down>= 0 then i\\<^sub>0 else (the (s x)) - 1)\" if \"s x \\<down>\" for x"], ["proof (prove)\nusing this:\n  recfn 1 rt\n\ngoal (1 subgoal):\n 1. eval rt [x] \\<down>=\n    (if s x \\<down>= 0 then i\\<^sub>0 else the (s x) - 1)", "using rs rt_def that"], ["proof (prove)\nusing this:\n  recfn 1 rt\n  recfn 1 rs\n  eval rs [?x] = s ?x\n  rt = Cn 1 r_ifz [rs, r_const i\\<^sub>0, Cn 1 r_dec [rs]]\n  s x \\<down>\n\ngoal (1 subgoal):\n 1. eval rt [x] \\<down>=\n    (if s x \\<down>= 0 then i\\<^sub>0 else the (s x) - 1)", "by auto"], ["proof (state)\nthis:\n  s ?x \\<down> \\<Longrightarrow>\n  eval rt [?x] \\<down>=\n  (if s ?x \\<down>= 0 then i\\<^sub>0 else the (s ?x) - 1)\n\ngoal (1 subgoal):\n 1. t \\<in> \\<P>", "moreover"], ["proof (state)\nthis:\n  s ?x \\<down> \\<Longrightarrow>\n  eval rt [?x] \\<down>=\n  (if s ?x \\<down>= 0 then i\\<^sub>0 else the (s ?x) - 1)\n\ngoal (1 subgoal):\n 1. t \\<in> \\<P>", "have \"eval rt [x] \\<up>\" if \"eval rs [x] \\<up>\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. eval rt [x] \\<up>", "using rs rt_def that"], ["proof (prove)\nusing this:\n  recfn 1 rs\n  eval rs [?x] = s ?x\n  rt = Cn 1 r_ifz [rs, r_const i\\<^sub>0, Cn 1 r_dec [rs]]\n  eval rs [x] \\<up>\n\ngoal (1 subgoal):\n 1. eval rt [x] \\<up>", "by simp"], ["proof (state)\nthis:\n  eval rs [?x] \\<up> \\<Longrightarrow> eval rt [?x] \\<up>\n\ngoal (1 subgoal):\n 1. t \\<in> \\<P>", "ultimately"], ["proof (chain)\npicking this:\n  s ?x \\<down> \\<Longrightarrow>\n  eval rt [?x] \\<down>=\n  (if s ?x \\<down>= 0 then i\\<^sub>0 else the (s ?x) - 1)\n  eval rs [?x] \\<up> \\<Longrightarrow> eval rt [?x] \\<up>", "have \"eval rt [x] = t x\" for x"], ["proof (prove)\nusing this:\n  s ?x \\<down> \\<Longrightarrow>\n  eval rt [?x] \\<down>=\n  (if s ?x \\<down>= 0 then i\\<^sub>0 else the (s ?x) - 1)\n  eval rs [?x] \\<up> \\<Longrightarrow> eval rt [?x] \\<up>\n\ngoal (1 subgoal):\n 1. eval rt [x] = t x", "using rs(2) t_def"], ["proof (prove)\nusing this:\n  s ?x \\<down> \\<Longrightarrow>\n  eval rt [?x] \\<down>=\n  (if s ?x \\<down>= 0 then i\\<^sub>0 else the (s ?x) - 1)\n  eval rs [?x] \\<up> \\<Longrightarrow> eval rt [?x] \\<up>\n  eval rs [?x] = s ?x\n  t ?x \\<equiv>\n  if s ?x \\<up> then None\n  else if s ?x \\<down>= 0 then Some i\\<^sub>0 else Some (the (s ?x) - 1)\n\ngoal (1 subgoal):\n 1. eval rt [x] = t x", "by simp"], ["proof (state)\nthis:\n  eval rt [?x] = t ?x\n\ngoal (1 subgoal):\n 1. t \\<in> \\<P>", "with \\<open>recfn 1 rt\\<close>"], ["proof (chain)\npicking this:\n  recfn 1 rt\n  eval rt [?x] = t ?x", "show ?thesis"], ["proof (prove)\nusing this:\n  recfn 1 rt\n  eval rt [?x] = t ?x\n\ngoal (1 subgoal):\n 1. t \\<in> \\<P>", "by auto"], ["proof (state)\nthis:\n  t \\<in> \\<P>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  t \\<in> \\<P>\n\ngoal (1 subgoal):\n 1. U \\<in> CP_wrt \\<psi>", "have \"learn_cp \\<psi> U t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. learn_cp \\<psi> U t", "proof (rule learn_cpI)"], ["proof (state)\ngoal (3 subgoals):\n 1. environment \\<psi> U t\n 2. \\<And>f.\n       f \\<in> U \\<Longrightarrow>\n       \\<exists>i.\n          \\<psi> i = f \\<and>\n          (\\<exists>n\\<^sub>0.\n              \\<forall>n\\<ge>n\\<^sub>0. t (f \\<triangleright> n) \\<down>= i)\n 3. \\<And>f n.\n       f \\<in> U \\<Longrightarrow>\n       \\<psi> (the (t (f \\<triangleright> n))) \\<in> U", "show \"environment \\<psi> U t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. environment \\<psi> U t", "using env t_def \\<open>t \\<in> \\<P>\\<close>"], ["proof (prove)\nusing this:\n  environment \\<psi> U s\n  t ?x \\<equiv>\n  if s ?x \\<up> then None\n  else if s ?x \\<down>= 0 then Some i\\<^sub>0 else Some (the (s ?x) - 1)\n  t \\<in> \\<P>\n\ngoal (1 subgoal):\n 1. environment \\<psi> U t", "by simp"], ["proof (state)\nthis:\n  environment \\<psi> U t\n\ngoal (2 subgoals):\n 1. \\<And>f.\n       f \\<in> U \\<Longrightarrow>\n       \\<exists>i.\n          \\<psi> i = f \\<and>\n          (\\<exists>n\\<^sub>0.\n              \\<forall>n\\<ge>n\\<^sub>0. t (f \\<triangleright> n) \\<down>= i)\n 2. \\<And>f n.\n       f \\<in> U \\<Longrightarrow>\n       \\<psi> (the (t (f \\<triangleright> n))) \\<in> U", "show \"\\<exists>i. \\<psi> i = f \\<and> (\\<forall>\\<^sup>\\<infinity>n. t (f \\<triangleright> n) \\<down>= i)\" if \"f \\<in> U\" for f"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i.\n       \\<psi> i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0. t (f \\<triangleright> n) \\<down>= i)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i.\n       \\<psi> i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0. t (f \\<triangleright> n) \\<down>= i)", "from that fin"], ["proof (chain)\npicking this:\n  f \\<in> U\n  ?f \\<in> U \\<Longrightarrow>\n  \\<exists>i n\\<^sub>0.\n     \\<psi> i = ?f \\<and>\n     (\\<forall>n<n\\<^sub>0. s (?f \\<triangleright> n) \\<down>= 0) \\<and>\n     (\\<forall>n\\<ge>n\\<^sub>0. s (?f \\<triangleright> n) \\<down>= Suc i)", "obtain i n\\<^sub>0 where\n        i: \"\\<psi> i = f\" \"\\<forall>n<n\\<^sub>0. s (f \\<triangleright> n) \\<down>= 0\" \"\\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= Suc i\""], ["proof (prove)\nusing this:\n  f \\<in> U\n  ?f \\<in> U \\<Longrightarrow>\n  \\<exists>i n\\<^sub>0.\n     \\<psi> i = ?f \\<and>\n     (\\<forall>n<n\\<^sub>0. s (?f \\<triangleright> n) \\<down>= 0) \\<and>\n     (\\<forall>n\\<ge>n\\<^sub>0. s (?f \\<triangleright> n) \\<down>= Suc i)\n\ngoal (1 subgoal):\n 1. (\\<And>i n\\<^sub>0.\n        \\<lbrakk>\\<psi> i = f;\n         \\<forall>n<n\\<^sub>0. s (f \\<triangleright> n) \\<down>= 0;\n         \\<forall>n\\<ge>n\\<^sub>0.\n            s (f \\<triangleright> n) \\<down>= Suc i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<psi> i = f\n  \\<forall>n<n\\<^sub>0. s (f \\<triangleright> n) \\<down>= 0\n  \\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= Suc i\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       \\<psi> i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0. t (f \\<triangleright> n) \\<down>= i)", "moreover"], ["proof (state)\nthis:\n  \\<psi> i = f\n  \\<forall>n<n\\<^sub>0. s (f \\<triangleright> n) \\<down>= 0\n  \\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= Suc i\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       \\<psi> i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0. t (f \\<triangleright> n) \\<down>= i)", "have \"\\<forall>n\\<ge>n\\<^sub>0. t (f \\<triangleright> n) \\<down>= i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n\\<ge>n\\<^sub>0. t (f \\<triangleright> n) \\<down>= i", "using that t_def i(3)"], ["proof (prove)\nusing this:\n  f \\<in> U\n  t ?x \\<equiv>\n  if s ?x \\<up> then None\n  else if s ?x \\<down>= 0 then Some i\\<^sub>0 else Some (the (s ?x) - 1)\n  \\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= Suc i\n\ngoal (1 subgoal):\n 1. \\<forall>n\\<ge>n\\<^sub>0. t (f \\<triangleright> n) \\<down>= i", "by simp"], ["proof (state)\nthis:\n  \\<forall>n\\<ge>n\\<^sub>0. t (f \\<triangleright> n) \\<down>= i\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       \\<psi> i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0. t (f \\<triangleright> n) \\<down>= i)", "ultimately"], ["proof (chain)\npicking this:\n  \\<psi> i = f\n  \\<forall>n<n\\<^sub>0. s (f \\<triangleright> n) \\<down>= 0\n  \\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= Suc i\n  \\<forall>n\\<ge>n\\<^sub>0. t (f \\<triangleright> n) \\<down>= i", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<psi> i = f\n  \\<forall>n<n\\<^sub>0. s (f \\<triangleright> n) \\<down>= 0\n  \\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= Suc i\n  \\<forall>n\\<ge>n\\<^sub>0. t (f \\<triangleright> n) \\<down>= i\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       \\<psi> i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0. t (f \\<triangleright> n) \\<down>= i)", "by auto"], ["proof (state)\nthis:\n  \\<exists>i.\n     \\<psi> i = f \\<and>\n     (\\<exists>n\\<^sub>0.\n         \\<forall>n\\<ge>n\\<^sub>0. t (f \\<triangleright> n) \\<down>= i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?f \\<in> U \\<Longrightarrow>\n  \\<exists>i.\n     \\<psi> i = ?f \\<and>\n     (\\<exists>n\\<^sub>0.\n         \\<forall>n\\<ge>n\\<^sub>0. t (?f \\<triangleright> n) \\<down>= i)\n\ngoal (1 subgoal):\n 1. \\<And>f n.\n       f \\<in> U \\<Longrightarrow>\n       \\<psi> (the (t (f \\<triangleright> n))) \\<in> U", "show \"\\<psi> (the (t (f \\<triangleright> n))) \\<in> U\" if \"f \\<in> U\" for f n"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<psi> (the (t (f \\<triangleright> n))) \\<in> U", "using \\<open>\\<psi> i\\<^sub>0 = f\\<^sub>0\\<close> \\<open>f\\<^sub>0 \\<in> U\\<close> t_def fin env that"], ["proof (prove)\nusing this:\n  \\<psi> i\\<^sub>0 = f\\<^sub>0\n  f\\<^sub>0 \\<in> U\n  t ?x \\<equiv>\n  if s ?x \\<up> then None\n  else if s ?x \\<down>= 0 then Some i\\<^sub>0 else Some (the (s ?x) - 1)\n  ?f \\<in> U \\<Longrightarrow>\n  \\<exists>i n\\<^sub>0.\n     \\<psi> i = ?f \\<and>\n     (\\<forall>n<n\\<^sub>0. s (?f \\<triangleright> n) \\<down>= 0) \\<and>\n     (\\<forall>n\\<ge>n\\<^sub>0. s (?f \\<triangleright> n) \\<down>= Suc i)\n  environment \\<psi> U s\n  f \\<in> U\n\ngoal (1 subgoal):\n 1. \\<psi> (the (t (f \\<triangleright> n))) \\<in> U", "by (metis (no_types, lifting) diff_Suc_1 not_less option.sel)"], ["proof (state)\nthis:\n  ?f \\<in> U \\<Longrightarrow>\n  \\<psi> (the (t (?f \\<triangleright> ?n))) \\<in> U\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  learn_cp \\<psi> U t\n\ngoal (1 subgoal):\n 1. U \\<in> CP_wrt \\<psi>", "then"], ["proof (chain)\npicking this:\n  learn_cp \\<psi> U t", "show ?thesis"], ["proof (prove)\nusing this:\n  learn_cp \\<psi> U t\n\ngoal (1 subgoal):\n 1. U \\<in> CP_wrt \\<psi>", "using CP_wrt_def env"], ["proof (prove)\nusing this:\n  learn_cp \\<psi> U t\n  CP_wrt ?\\<psi> \\<equiv> {U. \\<exists>s. learn_cp ?\\<psi> U s}\n  environment \\<psi> U s\n\ngoal (1 subgoal):\n 1. U \\<in> CP_wrt \\<psi>", "by auto"], ["proof (state)\nthis:\n  U \\<in> CP_wrt \\<psi>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma FIN_wrt_impl_CP:\n  assumes \"U \\<in> FIN_wrt \\<psi>\"\n  shows \"U \\<in> CP_wrt \\<psi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U \\<in> CP_wrt \\<psi>", "proof (cases \"U = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. U = {} \\<Longrightarrow> U \\<in> CP_wrt \\<psi>\n 2. U \\<noteq> {} \\<Longrightarrow> U \\<in> CP_wrt \\<psi>", "case True"], ["proof (state)\nthis:\n  U = {}\n\ngoal (2 subgoals):\n 1. U = {} \\<Longrightarrow> U \\<in> CP_wrt \\<psi>\n 2. U \\<noteq> {} \\<Longrightarrow> U \\<in> CP_wrt \\<psi>", "then"], ["proof (chain)\npicking this:\n  U = {}", "have \"\\<psi> \\<in> \\<P>\\<^sup>2 \\<Longrightarrow> U \\<in> CP_wrt \\<psi>\""], ["proof (prove)\nusing this:\n  U = {}\n\ngoal (1 subgoal):\n 1. \\<psi> \\<in> \\<P>\\<^sup>2 \\<Longrightarrow> U \\<in> CP_wrt \\<psi>", "using CP_wrt_def learn_cpI[of \\<psi> \"{}\" \"\\<lambda>x. Some 0\"] const_in_Prim1"], ["proof (prove)\nusing this:\n  U = {}\n  CP_wrt ?\\<psi> \\<equiv> {U. \\<exists>s. learn_cp ?\\<psi> U s}\n  \\<lbrakk>\\<psi> \\<in> \\<P>\\<^sup>2 \\<and>\n           {} \\<subseteq> \\<R> \\<and>\n           0\\<^sup>\\<infinity> \\<in> \\<P> \\<and>\n           (\\<forall>f\\<in>{}. \\<forall>n. Some 0 \\<down>);\n   \\<And>f.\n      f \\<in> {} \\<Longrightarrow>\n      \\<exists>i.\n         \\<psi> i = f \\<and>\n         (\\<exists>n\\<^sub>0. \\<forall>n\\<ge>n\\<^sub>0. Some 0 \\<down>= i);\n   \\<And>f n.\n      f \\<in> {} \\<Longrightarrow> \\<psi> (the (Some 0)) \\<in> {}\\<rbrakk>\n  \\<Longrightarrow> learn_cp \\<psi> {} 0\\<^sup>\\<infinity>\n  (\\<lambda>_. Some ?c) \\<in> Prim1\n\ngoal (1 subgoal):\n 1. \\<psi> \\<in> \\<P>\\<^sup>2 \\<Longrightarrow> U \\<in> CP_wrt \\<psi>", "by auto"], ["proof (state)\nthis:\n  \\<psi> \\<in> \\<P>\\<^sup>2 \\<Longrightarrow> U \\<in> CP_wrt \\<psi>\n\ngoal (2 subgoals):\n 1. U = {} \\<Longrightarrow> U \\<in> CP_wrt \\<psi>\n 2. U \\<noteq> {} \\<Longrightarrow> U \\<in> CP_wrt \\<psi>", "moreover"], ["proof (state)\nthis:\n  \\<psi> \\<in> \\<P>\\<^sup>2 \\<Longrightarrow> U \\<in> CP_wrt \\<psi>\n\ngoal (2 subgoals):\n 1. U = {} \\<Longrightarrow> U \\<in> CP_wrt \\<psi>\n 2. U \\<noteq> {} \\<Longrightarrow> U \\<in> CP_wrt \\<psi>", "have \"\\<psi> \\<in> \\<P>\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<psi> \\<in> \\<P>\\<^sup>2", "using assms FIN_wrt_def learn_finE"], ["proof (prove)\nusing this:\n  U \\<in> FIN_wrt \\<psi>\n  FIN_wrt ?\\<psi> \\<equiv> {U. \\<exists>s. learn_fin ?\\<psi> U s}\n  learn_fin ?\\<psi> ?U ?s \\<Longrightarrow> environment ?\\<psi> ?U ?s\n  \\<lbrakk>learn_fin ?\\<psi> ?U ?s; ?f \\<in> ?U\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i n\\<^sub>0.\n                       ?\\<psi> i = ?f \\<and>\n                       (\\<forall>n<n\\<^sub>0.\n                           ?s (?f \\<triangleright> n) \\<down>= 0) \\<and>\n                       (\\<forall>n\\<ge>n\\<^sub>0.\n                           ?s (?f \\<triangleright> n) \\<down>= Suc i)\n\ngoal (1 subgoal):\n 1. \\<psi> \\<in> \\<P>\\<^sup>2", "by auto"], ["proof (state)\nthis:\n  \\<psi> \\<in> \\<P>\\<^sup>2\n\ngoal (2 subgoals):\n 1. U = {} \\<Longrightarrow> U \\<in> CP_wrt \\<psi>\n 2. U \\<noteq> {} \\<Longrightarrow> U \\<in> CP_wrt \\<psi>", "ultimately"], ["proof (chain)\npicking this:\n  \\<psi> \\<in> \\<P>\\<^sup>2 \\<Longrightarrow> U \\<in> CP_wrt \\<psi>\n  \\<psi> \\<in> \\<P>\\<^sup>2", "show \"U \\<in> CP_wrt \\<psi>\""], ["proof (prove)\nusing this:\n  \\<psi> \\<in> \\<P>\\<^sup>2 \\<Longrightarrow> U \\<in> CP_wrt \\<psi>\n  \\<psi> \\<in> \\<P>\\<^sup>2\n\ngoal (1 subgoal):\n 1. U \\<in> CP_wrt \\<psi>", "by simp"], ["proof (state)\nthis:\n  U \\<in> CP_wrt \\<psi>\n\ngoal (1 subgoal):\n 1. U \\<noteq> {} \\<Longrightarrow> U \\<in> CP_wrt \\<psi>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. U \\<noteq> {} \\<Longrightarrow> U \\<in> CP_wrt \\<psi>", "case False"], ["proof (state)\nthis:\n  U \\<noteq> {}\n\ngoal (1 subgoal):\n 1. U \\<noteq> {} \\<Longrightarrow> U \\<in> CP_wrt \\<psi>", "with nonempty_FIN_wrt_impl_CP assms"], ["proof (chain)\npicking this:\n  \\<lbrakk>?U \\<noteq> {}; ?U \\<in> FIN_wrt ?\\<psi>\\<rbrakk>\n  \\<Longrightarrow> ?U \\<in> CP_wrt ?\\<psi>\n  U \\<in> FIN_wrt \\<psi>\n  U \\<noteq> {}", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?U \\<noteq> {}; ?U \\<in> FIN_wrt ?\\<psi>\\<rbrakk>\n  \\<Longrightarrow> ?U \\<in> CP_wrt ?\\<psi>\n  U \\<in> FIN_wrt \\<psi>\n  U \\<noteq> {}\n\ngoal (1 subgoal):\n 1. U \\<in> CP_wrt \\<psi>", "by simp"], ["proof (state)\nthis:\n  U \\<in> CP_wrt \\<psi>\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary FIN_subseteq_CP: \"FIN \\<subseteq> CP\""], ["proof (prove)\ngoal (1 subgoal):\n 1. FIN \\<subseteq> CP", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> FIN \\<Longrightarrow> x \\<in> CP", "fix U"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> FIN \\<Longrightarrow> x \\<in> CP", "assume \"U \\<in> FIN\""], ["proof (state)\nthis:\n  U \\<in> FIN\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> FIN \\<Longrightarrow> x \\<in> CP", "then"], ["proof (chain)\npicking this:\n  U \\<in> FIN", "have \"\\<exists>\\<psi>. U \\<in> FIN_wrt \\<psi>\""], ["proof (prove)\nusing this:\n  U \\<in> FIN\n\ngoal (1 subgoal):\n 1. \\<exists>\\<psi>. U \\<in> FIN_wrt \\<psi>", "using FIN_def FIN_wrt_def"], ["proof (prove)\nusing this:\n  U \\<in> FIN\n  FIN \\<equiv> {U. \\<exists>\\<psi> s. learn_fin \\<psi> U s}\n  FIN_wrt ?\\<psi> \\<equiv> {U. \\<exists>s. learn_fin ?\\<psi> U s}\n\ngoal (1 subgoal):\n 1. \\<exists>\\<psi>. U \\<in> FIN_wrt \\<psi>", "by auto"], ["proof (state)\nthis:\n  \\<exists>\\<psi>. U \\<in> FIN_wrt \\<psi>\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> FIN \\<Longrightarrow> x \\<in> CP", "then"], ["proof (chain)\npicking this:\n  \\<exists>\\<psi>. U \\<in> FIN_wrt \\<psi>", "have \"\\<exists>\\<psi>. U \\<in> CP_wrt \\<psi>\""], ["proof (prove)\nusing this:\n  \\<exists>\\<psi>. U \\<in> FIN_wrt \\<psi>\n\ngoal (1 subgoal):\n 1. \\<exists>\\<psi>. U \\<in> CP_wrt \\<psi>", "using FIN_wrt_impl_CP"], ["proof (prove)\nusing this:\n  \\<exists>\\<psi>. U \\<in> FIN_wrt \\<psi>\n  ?U \\<in> FIN_wrt ?\\<psi> \\<Longrightarrow> ?U \\<in> CP_wrt ?\\<psi>\n\ngoal (1 subgoal):\n 1. \\<exists>\\<psi>. U \\<in> CP_wrt \\<psi>", "by auto"], ["proof (state)\nthis:\n  \\<exists>\\<psi>. U \\<in> CP_wrt \\<psi>\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> FIN \\<Longrightarrow> x \\<in> CP", "then"], ["proof (chain)\npicking this:\n  \\<exists>\\<psi>. U \\<in> CP_wrt \\<psi>", "show \"U \\<in> CP\""], ["proof (prove)\nusing this:\n  \\<exists>\\<psi>. U \\<in> CP_wrt \\<psi>\n\ngoal (1 subgoal):\n 1. U \\<in> CP", "by (simp add: CP_def CP_wrt_def)"], ["proof (state)\nthis:\n  U \\<in> CP\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>In order to show the \\emph{proper} inclusion, we show @{term\n\"U\\<^sub>0 \\<in> CP - FIN\"}. A CP strategy for @{term \"U\\<^sub>0\"} simply\nhypothesizes the function in @{term U0} with the longest prefix of $f^n$ not\nending in zero. For that we define a function computing the index of the\nrightmost non-zero value in a list, returning the length of the list if there\nis no such value.\\<close>"], ["", "definition findr :: partial1 where\n  \"findr e \\<equiv>\n    if \\<exists>i<e_length e. e_nth e i \\<noteq> 0\n    then Some (GREATEST i. i < e_length e \\<and> e_nth e i \\<noteq> 0)\n    else Some (e_length e)\""], ["", "lemma findr_total: \"findr e \\<down>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. findr e \\<down>", "unfolding findr_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if \\<exists>i<e_length e. e_nth e i \\<noteq> 0\n     then Some (GREATEST i. i < e_length e \\<and> e_nth e i \\<noteq> 0)\n     else Some (e_length e)) \\<down>", "by simp"], ["", "lemma findr_ex:\n  assumes \"\\<exists>i<e_length e. e_nth e i \\<noteq> 0\"\n  shows \"the (findr e) < e_length e\"\n    and \"e_nth e (the (findr e)) \\<noteq> 0\"\n    and \"\\<forall>i. the (findr e) < i \\<and> i < e_length e \\<longrightarrow> e_nth e i = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. the (findr e) < e_length e &&&\n    e_nth e (the (findr e)) \\<noteq> 0 &&&\n    \\<forall>i.\n       the (findr e) < i \\<and> i < e_length e \\<longrightarrow>\n       e_nth e i = 0", "proof -"], ["proof (state)\ngoal (3 subgoals):\n 1. the (findr e) < e_length e\n 2. e_nth e (the (findr e)) \\<noteq> 0\n 3. \\<forall>i.\n       the (findr e) < i \\<and> i < e_length e \\<longrightarrow>\n       e_nth e i = 0", "let ?P = \"\\<lambda>i. i < e_length e \\<and> e_nth e i \\<noteq> 0\""], ["proof (state)\ngoal (3 subgoals):\n 1. the (findr e) < e_length e\n 2. e_nth e (the (findr e)) \\<noteq> 0\n 3. \\<forall>i.\n       the (findr e) < i \\<and> i < e_length e \\<longrightarrow>\n       e_nth e i = 0", "from assms"], ["proof (chain)\npicking this:\n  \\<exists>i<e_length e. e_nth e i \\<noteq> 0", "have \"\\<exists>i. ?P i\""], ["proof (prove)\nusing this:\n  \\<exists>i<e_length e. e_nth e i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>i<e_length e. e_nth e i \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  \\<exists>i<e_length e. e_nth e i \\<noteq> 0\n\ngoal (3 subgoals):\n 1. the (findr e) < e_length e\n 2. e_nth e (the (findr e)) \\<noteq> 0\n 3. \\<forall>i.\n       the (findr e) < i \\<and> i < e_length e \\<longrightarrow>\n       e_nth e i = 0", "then"], ["proof (chain)\npicking this:\n  \\<exists>i<e_length e. e_nth e i \\<noteq> 0", "have \"?P (Greatest ?P)\""], ["proof (prove)\nusing this:\n  \\<exists>i<e_length e. e_nth e i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (GREATEST i. i < e_length e \\<and> e_nth e i \\<noteq> 0)\n    < e_length e \\<and>\n    e_nth e\n     (GREATEST i. i < e_length e \\<and> e_nth e i \\<noteq> 0) \\<noteq>\n    0", "using GreatestI_ex_nat[of ?P \"e_length e\"]"], ["proof (prove)\nusing this:\n  \\<exists>i<e_length e. e_nth e i \\<noteq> 0\n  \\<lbrakk>\\<exists>k<e_length e. e_nth e k \\<noteq> 0;\n   \\<And>y.\n      y < e_length e \\<and> e_nth e y \\<noteq> 0 \\<Longrightarrow>\n      y \\<le> e_length e\\<rbrakk>\n  \\<Longrightarrow> (GREATEST i. i < e_length e \\<and> e_nth e i \\<noteq> 0)\n                    < e_length e \\<and>\n                    e_nth e\n                     (GREATEST i.\n                         i < e_length e \\<and>\n                         e_nth e i \\<noteq> 0) \\<noteq>\n                    0\n\ngoal (1 subgoal):\n 1. (GREATEST i. i < e_length e \\<and> e_nth e i \\<noteq> 0)\n    < e_length e \\<and>\n    e_nth e\n     (GREATEST i. i < e_length e \\<and> e_nth e i \\<noteq> 0) \\<noteq>\n    0", "by fastforce"], ["proof (state)\nthis:\n  (GREATEST i. i < e_length e \\<and> e_nth e i \\<noteq> 0)\n  < e_length e \\<and>\n  e_nth e (GREATEST i. i < e_length e \\<and> e_nth e i \\<noteq> 0) \\<noteq>\n  0\n\ngoal (3 subgoals):\n 1. the (findr e) < e_length e\n 2. e_nth e (the (findr e)) \\<noteq> 0\n 3. \\<forall>i.\n       the (findr e) < i \\<and> i < e_length e \\<longrightarrow>\n       e_nth e i = 0", "moreover"], ["proof (state)\nthis:\n  (GREATEST i. i < e_length e \\<and> e_nth e i \\<noteq> 0)\n  < e_length e \\<and>\n  e_nth e (GREATEST i. i < e_length e \\<and> e_nth e i \\<noteq> 0) \\<noteq>\n  0\n\ngoal (3 subgoals):\n 1. the (findr e) < e_length e\n 2. e_nth e (the (findr e)) \\<noteq> 0\n 3. \\<forall>i.\n       the (findr e) < i \\<and> i < e_length e \\<longrightarrow>\n       e_nth e i = 0", "have *: \"findr e = Some (Greatest ?P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. findr e \\<down>=\n    (GREATEST i. i < e_length e \\<and> e_nth e i \\<noteq> 0)", "using assms findr_def"], ["proof (prove)\nusing this:\n  \\<exists>i<e_length e. e_nth e i \\<noteq> 0\n  findr ?e \\<equiv>\n  if \\<exists>i<e_length ?e. e_nth ?e i \\<noteq> 0\n  then Some (GREATEST i. i < e_length ?e \\<and> e_nth ?e i \\<noteq> 0)\n  else Some (e_length ?e)\n\ngoal (1 subgoal):\n 1. findr e \\<down>=\n    (GREATEST i. i < e_length e \\<and> e_nth e i \\<noteq> 0)", "by simp"], ["proof (state)\nthis:\n  findr e \\<down>= (GREATEST i. i < e_length e \\<and> e_nth e i \\<noteq> 0)\n\ngoal (3 subgoals):\n 1. the (findr e) < e_length e\n 2. e_nth e (the (findr e)) \\<noteq> 0\n 3. \\<forall>i.\n       the (findr e) < i \\<and> i < e_length e \\<longrightarrow>\n       e_nth e i = 0", "ultimately"], ["proof (chain)\npicking this:\n  (GREATEST i. i < e_length e \\<and> e_nth e i \\<noteq> 0)\n  < e_length e \\<and>\n  e_nth e (GREATEST i. i < e_length e \\<and> e_nth e i \\<noteq> 0) \\<noteq>\n  0\n  findr e \\<down>= (GREATEST i. i < e_length e \\<and> e_nth e i \\<noteq> 0)", "show \"the (findr e) < e_length e\" and \"e_nth e (the (findr e)) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  (GREATEST i. i < e_length e \\<and> e_nth e i \\<noteq> 0)\n  < e_length e \\<and>\n  e_nth e (GREATEST i. i < e_length e \\<and> e_nth e i \\<noteq> 0) \\<noteq>\n  0\n  findr e \\<down>= (GREATEST i. i < e_length e \\<and> e_nth e i \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. the (findr e) < e_length e &&& e_nth e (the (findr e)) \\<noteq> 0", "by fastforce+"], ["proof (state)\nthis:\n  the (findr e) < e_length e\n  e_nth e (the (findr e)) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       the (findr e) < i \\<and> i < e_length e \\<longrightarrow>\n       e_nth e i = 0", "show \"\\<forall>i. the (findr e) < i \\<and> i < e_length e \\<longrightarrow> e_nth e i = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i.\n       the (findr e) < i \\<and> i < e_length e \\<longrightarrow>\n       e_nth e i = 0", "using * Greatest_le_nat[of ?P _ \"e_length e\"]"], ["proof (prove)\nusing this:\n  findr e \\<down>= (GREATEST i. i < e_length e \\<and> e_nth e i \\<noteq> 0)\n  \\<lbrakk>?k < e_length e \\<and> e_nth e ?k \\<noteq> 0;\n   \\<And>y.\n      y < e_length e \\<and> e_nth e y \\<noteq> 0 \\<Longrightarrow>\n      y \\<le> e_length e\\<rbrakk>\n  \\<Longrightarrow> ?k \\<le> (GREATEST i.\n                                 i < e_length e \\<and> e_nth e i \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       the (findr e) < i \\<and> i < e_length e \\<longrightarrow>\n       e_nth e i = 0", "by fastforce"], ["proof (state)\nthis:\n  \\<forall>i.\n     the (findr e) < i \\<and> i < e_length e \\<longrightarrow> e_nth e i = 0\n\ngoal:\nNo subgoals!", "qed"], ["", "definition \"r_findr \\<equiv>\n  let g =\n    Cn 3 r_ifz\n     [Cn 3 r_nth [Id 3 2, Id 3 0],\n      Cn 3 r_ifeq [Id 3 0, Id 3 1, Cn 3 S [Id 3 0], Id 3 1],\n      Id 3 0]\n  in Cn 1 (Pr 1 Z g) [Cn 1 r_length [Id 1 0], Id 1 0]\""], ["", "lemma r_findr_prim [simp]: \"prim_recfn 1 r_findr\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prim_recfn 1 r_findr", "unfolding r_findr_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. prim_recfn 1\n     (let g = Cn 3 r_ifz\n               [Cn 3 r_nth [recf.Id 3 2, recf.Id 3 0],\n                Cn 3 r_ifeq\n                 [recf.Id 3 0, recf.Id 3 1, Cn 3 S [recf.Id 3 0],\n                  recf.Id 3 1],\n                recf.Id 3 0]\n      in Cn 1 (Pr 1 Z g) [Cn 1 r_length [recf.Id 1 0], recf.Id 1 0])", "by simp"], ["", "lemma r_findr [simp]: \"eval r_findr [e] = findr e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eval r_findr [e] = findr e", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. eval r_findr [e] = findr e", "define g where \"g =\n    Cn 3 r_ifz\n     [Cn 3 r_nth [Id 3 2, Id 3 0],\n      Cn 3 r_ifeq [Id 3 0, Id 3 1, Cn 3 S [Id 3 0], Id 3 1],\n      Id 3 0]\""], ["proof (state)\nthis:\n  g =\n  Cn 3 r_ifz\n   [Cn 3 r_nth [recf.Id 3 2, recf.Id 3 0],\n    Cn 3 r_ifeq\n     [recf.Id 3 0, recf.Id 3 1, Cn 3 S [recf.Id 3 0], recf.Id 3 1],\n    recf.Id 3 0]\n\ngoal (1 subgoal):\n 1. eval r_findr [e] = findr e", "then"], ["proof (chain)\npicking this:\n  g =\n  Cn 3 r_ifz\n   [Cn 3 r_nth [recf.Id 3 2, recf.Id 3 0],\n    Cn 3 r_ifeq\n     [recf.Id 3 0, recf.Id 3 1, Cn 3 S [recf.Id 3 0], recf.Id 3 1],\n    recf.Id 3 0]", "have \"recfn 3 g\""], ["proof (prove)\nusing this:\n  g =\n  Cn 3 r_ifz\n   [Cn 3 r_nth [recf.Id 3 2, recf.Id 3 0],\n    Cn 3 r_ifeq\n     [recf.Id 3 0, recf.Id 3 1, Cn 3 S [recf.Id 3 0], recf.Id 3 1],\n    recf.Id 3 0]\n\ngoal (1 subgoal):\n 1. recfn 3 g", "by simp"], ["proof (state)\nthis:\n  recfn 3 g\n\ngoal (1 subgoal):\n 1. eval r_findr [e] = findr e", "with g_def"], ["proof (chain)\npicking this:\n  g =\n  Cn 3 r_ifz\n   [Cn 3 r_nth [recf.Id 3 2, recf.Id 3 0],\n    Cn 3 r_ifeq\n     [recf.Id 3 0, recf.Id 3 1, Cn 3 S [recf.Id 3 0], recf.Id 3 1],\n    recf.Id 3 0]\n  recfn 3 g", "have g: \"eval g [j, r, e] \\<down>=\n      (if e_nth e j \\<noteq> 0 then j else if j = r then Suc j else r)\" for j r e"], ["proof (prove)\nusing this:\n  g =\n  Cn 3 r_ifz\n   [Cn 3 r_nth [recf.Id 3 2, recf.Id 3 0],\n    Cn 3 r_ifeq\n     [recf.Id 3 0, recf.Id 3 1, Cn 3 S [recf.Id 3 0], recf.Id 3 1],\n    recf.Id 3 0]\n  recfn 3 g\n\ngoal (1 subgoal):\n 1. eval g [j, r, e] \\<down>=\n    (if e_nth e j \\<noteq> 0 then j else if j = r then Suc j else r)", "by simp"], ["proof (state)\nthis:\n  eval g [?j, ?r, ?e] \\<down>=\n  (if e_nth ?e ?j \\<noteq> 0 then ?j else if ?j = ?r then Suc ?j else ?r)\n\ngoal (1 subgoal):\n 1. eval r_findr [e] = findr e", "let ?h = \"Pr 1 Z g\""], ["proof (state)\ngoal (1 subgoal):\n 1. eval r_findr [e] = findr e", "have \"recfn 2 ?h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. recfn 2 (Pr 1 Z g)", "by (simp add: \\<open>recfn 3 g\\<close>)"], ["proof (state)\nthis:\n  recfn 2 (Pr 1 Z g)\n\ngoal (1 subgoal):\n 1. eval r_findr [e] = findr e", "let ?P = \"\\<lambda>e j i. i < j \\<and> e_nth e i \\<noteq> 0\""], ["proof (state)\ngoal (1 subgoal):\n 1. eval r_findr [e] = findr e", "let ?G = \"\\<lambda>e j. Greatest (?P e j)\""], ["proof (state)\ngoal (1 subgoal):\n 1. eval r_findr [e] = findr e", "have h: \"eval ?h [j, e] =\n    (if \\<forall>i<j. e_nth e i = 0 then Some j else Some (?G e j))\" for j e"], ["proof (prove)\ngoal (1 subgoal):\n 1. eval (Pr 1 Z g) [j, e] =\n    (if \\<forall>i<j. e_nth e i = 0 then Some j\n     else Some (GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0))", "proof (induction j)"], ["proof (state)\ngoal (2 subgoals):\n 1. eval (Pr 1 Z g) [0, e] =\n    (if \\<forall>i<0. e_nth e i = 0 then Some 0\n     else Some (GREATEST i. i < 0 \\<and> e_nth e i \\<noteq> 0))\n 2. \\<And>j.\n       eval (Pr 1 Z g) [j, e] =\n       (if \\<forall>i<j. e_nth e i = 0 then Some j\n        else Some\n              (GREATEST i.\n                  i < j \\<and> e_nth e i \\<noteq> 0)) \\<Longrightarrow>\n       eval (Pr 1 Z g) [Suc j, e] =\n       (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n        else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. eval (Pr 1 Z g) [0, e] =\n    (if \\<forall>i<0. e_nth e i = 0 then Some 0\n     else Some (GREATEST i. i < 0 \\<and> e_nth e i \\<noteq> 0))\n 2. \\<And>j.\n       eval (Pr 1 Z g) [j, e] =\n       (if \\<forall>i<j. e_nth e i = 0 then Some j\n        else Some\n              (GREATEST i.\n                  i < j \\<and> e_nth e i \\<noteq> 0)) \\<Longrightarrow>\n       eval (Pr 1 Z g) [Suc j, e] =\n       (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n        else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. eval (Pr 1 Z g) [0, e] =\n    (if \\<forall>i<0. e_nth e i = 0 then Some 0\n     else Some (GREATEST i. i < 0 \\<and> e_nth e i \\<noteq> 0))", "using \\<open>recfn 2 ?h\\<close>"], ["proof (prove)\nusing this:\n  recfn 2 (Pr 1 Z g)\n\ngoal (1 subgoal):\n 1. eval (Pr 1 Z g) [0, e] =\n    (if \\<forall>i<0. e_nth e i = 0 then Some 0\n     else Some (GREATEST i. i < 0 \\<and> e_nth e i \\<noteq> 0))", "by auto"], ["proof (state)\nthis:\n  eval (Pr 1 Z g) [0, e] =\n  (if \\<forall>i<0. e_nth e i = 0 then Some 0\n   else Some (GREATEST i. i < 0 \\<and> e_nth e i \\<noteq> 0))\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       eval (Pr 1 Z g) [j, e] =\n       (if \\<forall>i<j. e_nth e i = 0 then Some j\n        else Some\n              (GREATEST i.\n                  i < j \\<and> e_nth e i \\<noteq> 0)) \\<Longrightarrow>\n       eval (Pr 1 Z g) [Suc j, e] =\n       (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n        else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       eval (Pr 1 Z g) [j, e] =\n       (if \\<forall>i<j. e_nth e i = 0 then Some j\n        else Some\n              (GREATEST i.\n                  i < j \\<and> e_nth e i \\<noteq> 0)) \\<Longrightarrow>\n       eval (Pr 1 Z g) [Suc j, e] =\n       (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n        else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))", "case (Suc j)"], ["proof (state)\nthis:\n  eval (Pr 1 Z g) [j, e] =\n  (if \\<forall>i<j. e_nth e i = 0 then Some j\n   else Some (GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0))\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       eval (Pr 1 Z g) [j, e] =\n       (if \\<forall>i<j. e_nth e i = 0 then Some j\n        else Some\n              (GREATEST i.\n                  i < j \\<and> e_nth e i \\<noteq> 0)) \\<Longrightarrow>\n       eval (Pr 1 Z g) [Suc j, e] =\n       (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n        else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))", "then"], ["proof (chain)\npicking this:\n  eval (Pr 1 Z g) [j, e] =\n  (if \\<forall>i<j. e_nth e i = 0 then Some j\n   else Some (GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0))", "have \"eval ?h [Suc j, e] = eval g [j, the (eval ?h [j, e]), e]\""], ["proof (prove)\nusing this:\n  eval (Pr 1 Z g) [j, e] =\n  (if \\<forall>i<j. e_nth e i = 0 then Some j\n   else Some (GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0))\n\ngoal (1 subgoal):\n 1. eval (Pr 1 Z g) [Suc j, e] = eval g [j, the (eval (Pr 1 Z g) [j, e]), e]", "using \\<open>recfn 2 ?h\\<close>"], ["proof (prove)\nusing this:\n  eval (Pr 1 Z g) [j, e] =\n  (if \\<forall>i<j. e_nth e i = 0 then Some j\n   else Some (GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0))\n  recfn 2 (Pr 1 Z g)\n\ngoal (1 subgoal):\n 1. eval (Pr 1 Z g) [Suc j, e] = eval g [j, the (eval (Pr 1 Z g) [j, e]), e]", "by auto"], ["proof (state)\nthis:\n  eval (Pr 1 Z g) [Suc j, e] = eval g [j, the (eval (Pr 1 Z g) [j, e]), e]\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       eval (Pr 1 Z g) [j, e] =\n       (if \\<forall>i<j. e_nth e i = 0 then Some j\n        else Some\n              (GREATEST i.\n                  i < j \\<and> e_nth e i \\<noteq> 0)) \\<Longrightarrow>\n       eval (Pr 1 Z g) [Suc j, e] =\n       (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n        else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))", "then"], ["proof (chain)\npicking this:\n  eval (Pr 1 Z g) [Suc j, e] = eval g [j, the (eval (Pr 1 Z g) [j, e]), e]", "have \"eval ?h [Suc j, e] =\n        eval g [j, if \\<forall>i<j. e_nth e i = 0 then j else ?G e j, e]\""], ["proof (prove)\nusing this:\n  eval (Pr 1 Z g) [Suc j, e] = eval g [j, the (eval (Pr 1 Z g) [j, e]), e]\n\ngoal (1 subgoal):\n 1. eval (Pr 1 Z g) [Suc j, e] =\n    eval g\n     [j, if \\<forall>i<j. e_nth e i = 0 then j\n         else GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0,\n      e]", "using Suc"], ["proof (prove)\nusing this:\n  eval (Pr 1 Z g) [Suc j, e] = eval g [j, the (eval (Pr 1 Z g) [j, e]), e]\n  eval (Pr 1 Z g) [j, e] =\n  (if \\<forall>i<j. e_nth e i = 0 then Some j\n   else Some (GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0))\n\ngoal (1 subgoal):\n 1. eval (Pr 1 Z g) [Suc j, e] =\n    eval g\n     [j, if \\<forall>i<j. e_nth e i = 0 then j\n         else GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0,\n      e]", "by auto"], ["proof (state)\nthis:\n  eval (Pr 1 Z g) [Suc j, e] =\n  eval g\n   [j, if \\<forall>i<j. e_nth e i = 0 then j\n       else GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0,\n    e]\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       eval (Pr 1 Z g) [j, e] =\n       (if \\<forall>i<j. e_nth e i = 0 then Some j\n        else Some\n              (GREATEST i.\n                  i < j \\<and> e_nth e i \\<noteq> 0)) \\<Longrightarrow>\n       eval (Pr 1 Z g) [Suc j, e] =\n       (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n        else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))", "then"], ["proof (chain)\npicking this:\n  eval (Pr 1 Z g) [Suc j, e] =\n  eval g\n   [j, if \\<forall>i<j. e_nth e i = 0 then j\n       else GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0,\n    e]", "have *: \"eval ?h [Suc j, e] \\<down>=\n      (if e_nth e j \\<noteq> 0 then j\n       else if j = (if \\<forall>i<j. e_nth e i = 0 then j else ?G e j)\n            then Suc j\n            else (if \\<forall>i<j. e_nth e i = 0 then j else ?G e j))\""], ["proof (prove)\nusing this:\n  eval (Pr 1 Z g) [Suc j, e] =\n  eval g\n   [j, if \\<forall>i<j. e_nth e i = 0 then j\n       else GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0,\n    e]\n\ngoal (1 subgoal):\n 1. eval (Pr 1 Z g) [Suc j, e] \\<down>=\n    (if e_nth e j \\<noteq> 0 then j\n     else if j =\n             (if \\<forall>i<j. e_nth e i = 0 then j\n              else GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0)\n          then Suc j\n          else if \\<forall>i<j. e_nth e i = 0 then j\n               else GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0)", "using g"], ["proof (prove)\nusing this:\n  eval (Pr 1 Z g) [Suc j, e] =\n  eval g\n   [j, if \\<forall>i<j. e_nth e i = 0 then j\n       else GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0,\n    e]\n  eval g [?j, ?r, ?e] \\<down>=\n  (if e_nth ?e ?j \\<noteq> 0 then ?j else if ?j = ?r then Suc ?j else ?r)\n\ngoal (1 subgoal):\n 1. eval (Pr 1 Z g) [Suc j, e] \\<down>=\n    (if e_nth e j \\<noteq> 0 then j\n     else if j =\n             (if \\<forall>i<j. e_nth e i = 0 then j\n              else GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0)\n          then Suc j\n          else if \\<forall>i<j. e_nth e i = 0 then j\n               else GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0)", "by simp"], ["proof (state)\nthis:\n  eval (Pr 1 Z g) [Suc j, e] \\<down>=\n  (if e_nth e j \\<noteq> 0 then j\n   else if j =\n           (if \\<forall>i<j. e_nth e i = 0 then j\n            else GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0)\n        then Suc j\n        else if \\<forall>i<j. e_nth e i = 0 then j\n             else GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       eval (Pr 1 Z g) [j, e] =\n       (if \\<forall>i<j. e_nth e i = 0 then Some j\n        else Some\n              (GREATEST i.\n                  i < j \\<and> e_nth e i \\<noteq> 0)) \\<Longrightarrow>\n       eval (Pr 1 Z g) [Suc j, e] =\n       (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n        else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. eval (Pr 1 Z g) [Suc j, e] =\n    (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n     else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))", "proof (cases \"\\<forall>i<Suc j. e_nth e i = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>i<Suc j. e_nth e i = 0 \\<Longrightarrow>\n    eval (Pr 1 Z g) [Suc j, e] =\n    (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n     else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))\n 2. \\<not> (\\<forall>i<Suc j. e_nth e i = 0) \\<Longrightarrow>\n    eval (Pr 1 Z g) [Suc j, e] =\n    (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n     else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))", "case True"], ["proof (state)\nthis:\n  \\<forall>i<Suc j. e_nth e i = 0\n\ngoal (2 subgoals):\n 1. \\<forall>i<Suc j. e_nth e i = 0 \\<Longrightarrow>\n    eval (Pr 1 Z g) [Suc j, e] =\n    (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n     else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))\n 2. \\<not> (\\<forall>i<Suc j. e_nth e i = 0) \\<Longrightarrow>\n    eval (Pr 1 Z g) [Suc j, e] =\n    (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n     else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))", "then"], ["proof (chain)\npicking this:\n  \\<forall>i<Suc j. e_nth e i = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>i<Suc j. e_nth e i = 0\n\ngoal (1 subgoal):\n 1. eval (Pr 1 Z g) [Suc j, e] =\n    (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n     else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))", "using *"], ["proof (prove)\nusing this:\n  \\<forall>i<Suc j. e_nth e i = 0\n  eval (Pr 1 Z g) [Suc j, e] \\<down>=\n  (if e_nth e j \\<noteq> 0 then j\n   else if j =\n           (if \\<forall>i<j. e_nth e i = 0 then j\n            else GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0)\n        then Suc j\n        else if \\<forall>i<j. e_nth e i = 0 then j\n             else GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. eval (Pr 1 Z g) [Suc j, e] =\n    (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n     else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))", "by simp"], ["proof (state)\nthis:\n  eval (Pr 1 Z g) [Suc j, e] =\n  (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n   else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i<Suc j. e_nth e i = 0) \\<Longrightarrow>\n    eval (Pr 1 Z g) [Suc j, e] =\n    (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n     else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i<Suc j. e_nth e i = 0) \\<Longrightarrow>\n    eval (Pr 1 Z g) [Suc j, e] =\n    (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n     else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))", "case False"], ["proof (state)\nthis:\n  \\<not> (\\<forall>i<Suc j. e_nth e i = 0)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i<Suc j. e_nth e i = 0) \\<Longrightarrow>\n    eval (Pr 1 Z g) [Suc j, e] =\n    (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n     else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<forall>i<Suc j. e_nth e i = 0)", "have ex: \"\\<exists>i<Suc j. e_nth e i \\<noteq> 0\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>i<Suc j. e_nth e i = 0)\n\ngoal (1 subgoal):\n 1. \\<exists>i<Suc j. e_nth e i \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  \\<exists>i<Suc j. e_nth e i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>i<Suc j. e_nth e i = 0) \\<Longrightarrow>\n    eval (Pr 1 Z g) [Suc j, e] =\n    (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n     else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. eval (Pr 1 Z g) [Suc j, e] =\n    (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n     else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))", "proof (cases \"e_nth e j = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. e_nth e j = 0 \\<Longrightarrow>\n    eval (Pr 1 Z g) [Suc j, e] =\n    (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n     else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))\n 2. e_nth e j \\<noteq> 0 \\<Longrightarrow>\n    eval (Pr 1 Z g) [Suc j, e] =\n    (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n     else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))", "case True"], ["proof (state)\nthis:\n  e_nth e j = 0\n\ngoal (2 subgoals):\n 1. e_nth e j = 0 \\<Longrightarrow>\n    eval (Pr 1 Z g) [Suc j, e] =\n    (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n     else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))\n 2. e_nth e j \\<noteq> 0 \\<Longrightarrow>\n    eval (Pr 1 Z g) [Suc j, e] =\n    (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n     else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))", "then"], ["proof (chain)\npicking this:\n  e_nth e j = 0", "have ex': \"\\<exists>i<j. e_nth e i \\<noteq> 0\""], ["proof (prove)\nusing this:\n  e_nth e j = 0\n\ngoal (1 subgoal):\n 1. \\<exists>i<j. e_nth e i \\<noteq> 0", "using ex less_Suc_eq"], ["proof (prove)\nusing this:\n  e_nth e j = 0\n  \\<exists>i<Suc j. e_nth e i \\<noteq> 0\n  (?m < Suc ?n) = (?m < ?n \\<or> ?m = ?n)\n\ngoal (1 subgoal):\n 1. \\<exists>i<j. e_nth e i \\<noteq> 0", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>i<j. e_nth e i \\<noteq> 0\n\ngoal (2 subgoals):\n 1. e_nth e j = 0 \\<Longrightarrow>\n    eval (Pr 1 Z g) [Suc j, e] =\n    (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n     else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))\n 2. e_nth e j \\<noteq> 0 \\<Longrightarrow>\n    eval (Pr 1 Z g) [Suc j, e] =\n    (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n     else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))", "then"], ["proof (chain)\npicking this:\n  \\<exists>i<j. e_nth e i \\<noteq> 0", "have \"(if \\<forall>i<j. e_nth e i = 0 then j else ?G e j) = ?G e j\""], ["proof (prove)\nusing this:\n  \\<exists>i<j. e_nth e i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (if \\<forall>i<j. e_nth e i = 0 then j\n     else GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0) =\n    (GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0)", "by metis"], ["proof (state)\nthis:\n  (if \\<forall>i<j. e_nth e i = 0 then j\n   else GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0) =\n  (GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0)\n\ngoal (2 subgoals):\n 1. e_nth e j = 0 \\<Longrightarrow>\n    eval (Pr 1 Z g) [Suc j, e] =\n    (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n     else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))\n 2. e_nth e j \\<noteq> 0 \\<Longrightarrow>\n    eval (Pr 1 Z g) [Suc j, e] =\n    (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n     else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))", "moreover"], ["proof (state)\nthis:\n  (if \\<forall>i<j. e_nth e i = 0 then j\n   else GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0) =\n  (GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0)\n\ngoal (2 subgoals):\n 1. e_nth e j = 0 \\<Longrightarrow>\n    eval (Pr 1 Z g) [Suc j, e] =\n    (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n     else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))\n 2. e_nth e j \\<noteq> 0 \\<Longrightarrow>\n    eval (Pr 1 Z g) [Suc j, e] =\n    (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n     else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))", "have \"?G e j < j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0) < j", "using ex' GreatestI_nat[of \"?P e j\"] less_imp_le_nat"], ["proof (prove)\nusing this:\n  \\<exists>i<j. e_nth e i \\<noteq> 0\n  \\<lbrakk>?k < j \\<and> e_nth e ?k \\<noteq> 0;\n   \\<And>y.\n      y < j \\<and> e_nth e y \\<noteq> 0 \\<Longrightarrow>\n      y \\<le> ?b\\<rbrakk>\n  \\<Longrightarrow> (GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0)\n                    < j \\<and>\n                    e_nth e\n                     (GREATEST i.\n                         i < j \\<and> e_nth e i \\<noteq> 0) \\<noteq>\n                    0\n  ?m < ?n \\<Longrightarrow> ?m \\<le> ?n\n\ngoal (1 subgoal):\n 1. (GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0) < j", "by blast"], ["proof (state)\nthis:\n  (GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0) < j\n\ngoal (2 subgoals):\n 1. e_nth e j = 0 \\<Longrightarrow>\n    eval (Pr 1 Z g) [Suc j, e] =\n    (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n     else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))\n 2. e_nth e j \\<noteq> 0 \\<Longrightarrow>\n    eval (Pr 1 Z g) [Suc j, e] =\n    (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n     else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))", "ultimately"], ["proof (chain)\npicking this:\n  (if \\<forall>i<j. e_nth e i = 0 then j\n   else GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0) =\n  (GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0)\n  (GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0) < j", "have \"eval ?h [Suc j, e] \\<down>= ?G e j\""], ["proof (prove)\nusing this:\n  (if \\<forall>i<j. e_nth e i = 0 then j\n   else GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0) =\n  (GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0)\n  (GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0) < j\n\ngoal (1 subgoal):\n 1. eval (Pr 1 Z g) [Suc j, e] \\<down>=\n    (GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0)", "using * True"], ["proof (prove)\nusing this:\n  (if \\<forall>i<j. e_nth e i = 0 then j\n   else GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0) =\n  (GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0)\n  (GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0) < j\n  eval (Pr 1 Z g) [Suc j, e] \\<down>=\n  (if e_nth e j \\<noteq> 0 then j\n   else if j =\n           (if \\<forall>i<j. e_nth e i = 0 then j\n            else GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0)\n        then Suc j\n        else if \\<forall>i<j. e_nth e i = 0 then j\n             else GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0)\n  e_nth e j = 0\n\ngoal (1 subgoal):\n 1. eval (Pr 1 Z g) [Suc j, e] \\<down>=\n    (GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0)", "by simp"], ["proof (state)\nthis:\n  eval (Pr 1 Z g) [Suc j, e] \\<down>=\n  (GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0)\n\ngoal (2 subgoals):\n 1. e_nth e j = 0 \\<Longrightarrow>\n    eval (Pr 1 Z g) [Suc j, e] =\n    (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n     else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))\n 2. e_nth e j \\<noteq> 0 \\<Longrightarrow>\n    eval (Pr 1 Z g) [Suc j, e] =\n    (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n     else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))", "moreover"], ["proof (state)\nthis:\n  eval (Pr 1 Z g) [Suc j, e] \\<down>=\n  (GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0)\n\ngoal (2 subgoals):\n 1. e_nth e j = 0 \\<Longrightarrow>\n    eval (Pr 1 Z g) [Suc j, e] =\n    (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n     else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))\n 2. e_nth e j \\<noteq> 0 \\<Longrightarrow>\n    eval (Pr 1 Z g) [Suc j, e] =\n    (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n     else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))", "have \"?G e j = ?G e (Suc j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0) =\n    (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0)", "using True"], ["proof (prove)\nusing this:\n  e_nth e j = 0\n\ngoal (1 subgoal):\n 1. (GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0) =\n    (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0)", "by (metis less_SucI less_Suc_eq)"], ["proof (state)\nthis:\n  (GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0) =\n  (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0)\n\ngoal (2 subgoals):\n 1. e_nth e j = 0 \\<Longrightarrow>\n    eval (Pr 1 Z g) [Suc j, e] =\n    (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n     else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))\n 2. e_nth e j \\<noteq> 0 \\<Longrightarrow>\n    eval (Pr 1 Z g) [Suc j, e] =\n    (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n     else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))", "ultimately"], ["proof (chain)\npicking this:\n  eval (Pr 1 Z g) [Suc j, e] \\<down>=\n  (GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0)\n  (GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0) =\n  (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0)", "show ?thesis"], ["proof (prove)\nusing this:\n  eval (Pr 1 Z g) [Suc j, e] \\<down>=\n  (GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0)\n  (GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0) =\n  (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. eval (Pr 1 Z g) [Suc j, e] =\n    (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n     else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))", "using ex"], ["proof (prove)\nusing this:\n  eval (Pr 1 Z g) [Suc j, e] \\<down>=\n  (GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0)\n  (GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0) =\n  (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0)\n  \\<exists>i<Suc j. e_nth e i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. eval (Pr 1 Z g) [Suc j, e] =\n    (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n     else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))", "by metis"], ["proof (state)\nthis:\n  eval (Pr 1 Z g) [Suc j, e] =\n  (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n   else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))\n\ngoal (1 subgoal):\n 1. e_nth e j \\<noteq> 0 \\<Longrightarrow>\n    eval (Pr 1 Z g) [Suc j, e] =\n    (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n     else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. e_nth e j \\<noteq> 0 \\<Longrightarrow>\n    eval (Pr 1 Z g) [Suc j, e] =\n    (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n     else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))", "case False"], ["proof (state)\nthis:\n  e_nth e j \\<noteq> 0\n\ngoal (1 subgoal):\n 1. e_nth e j \\<noteq> 0 \\<Longrightarrow>\n    eval (Pr 1 Z g) [Suc j, e] =\n    (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n     else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))", "then"], ["proof (chain)\npicking this:\n  e_nth e j \\<noteq> 0", "have \"eval ?h [Suc j, e] \\<down>= j\""], ["proof (prove)\nusing this:\n  e_nth e j \\<noteq> 0\n\ngoal (1 subgoal):\n 1. eval (Pr 1 Z g) [Suc j, e] \\<down>= j", "using *"], ["proof (prove)\nusing this:\n  e_nth e j \\<noteq> 0\n  eval (Pr 1 Z g) [Suc j, e] \\<down>=\n  (if e_nth e j \\<noteq> 0 then j\n   else if j =\n           (if \\<forall>i<j. e_nth e i = 0 then j\n            else GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0)\n        then Suc j\n        else if \\<forall>i<j. e_nth e i = 0 then j\n             else GREATEST i. i < j \\<and> e_nth e i \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. eval (Pr 1 Z g) [Suc j, e] \\<down>= j", "by simp"], ["proof (state)\nthis:\n  eval (Pr 1 Z g) [Suc j, e] \\<down>= j\n\ngoal (1 subgoal):\n 1. e_nth e j \\<noteq> 0 \\<Longrightarrow>\n    eval (Pr 1 Z g) [Suc j, e] =\n    (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n     else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))", "moreover"], ["proof (state)\nthis:\n  eval (Pr 1 Z g) [Suc j, e] \\<down>= j\n\ngoal (1 subgoal):\n 1. e_nth e j \\<noteq> 0 \\<Longrightarrow>\n    eval (Pr 1 Z g) [Suc j, e] =\n    (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n     else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))", "have \"?G e (Suc j) = j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0) = j", "using ex False Greatest_equality[of \"?P e (Suc j)\"]"], ["proof (prove)\nusing this:\n  \\<exists>i<Suc j. e_nth e i \\<noteq> 0\n  e_nth e j \\<noteq> 0\n  \\<lbrakk>?x < Suc j \\<and> e_nth e ?x \\<noteq> 0;\n   \\<And>y.\n      y < Suc j \\<and> e_nth e y \\<noteq> 0 \\<Longrightarrow>\n      y \\<le> ?x\\<rbrakk>\n  \\<Longrightarrow> (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0) = ?x\n\ngoal (1 subgoal):\n 1. (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0) = j", "by simp"], ["proof (state)\nthis:\n  (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0) = j\n\ngoal (1 subgoal):\n 1. e_nth e j \\<noteq> 0 \\<Longrightarrow>\n    eval (Pr 1 Z g) [Suc j, e] =\n    (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n     else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))", "ultimately"], ["proof (chain)\npicking this:\n  eval (Pr 1 Z g) [Suc j, e] \\<down>= j\n  (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0) = j", "show ?thesis"], ["proof (prove)\nusing this:\n  eval (Pr 1 Z g) [Suc j, e] \\<down>= j\n  (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0) = j\n\ngoal (1 subgoal):\n 1. eval (Pr 1 Z g) [Suc j, e] =\n    (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n     else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))", "using ex"], ["proof (prove)\nusing this:\n  eval (Pr 1 Z g) [Suc j, e] \\<down>= j\n  (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0) = j\n  \\<exists>i<Suc j. e_nth e i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. eval (Pr 1 Z g) [Suc j, e] =\n    (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n     else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))", "by simp"], ["proof (state)\nthis:\n  eval (Pr 1 Z g) [Suc j, e] =\n  (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n   else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  eval (Pr 1 Z g) [Suc j, e] =\n  (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n   else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  eval (Pr 1 Z g) [Suc j, e] =\n  (if \\<forall>i<Suc j. e_nth e i = 0 then Some (Suc j)\n   else Some (GREATEST i. i < Suc j \\<and> e_nth e i \\<noteq> 0))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  eval (Pr 1 Z g) [?j, ?e] =\n  (if \\<forall>i<?j. e_nth ?e i = 0 then Some ?j\n   else Some (GREATEST i. i < ?j \\<and> e_nth ?e i \\<noteq> 0))\n\ngoal (1 subgoal):\n 1. eval r_findr [e] = findr e", "let ?hh = \"Cn 1 ?h [Cn 1 r_length [Id 1 0], Id 1 0]\""], ["proof (state)\ngoal (1 subgoal):\n 1. eval r_findr [e] = findr e", "have \"recfn 1 ?hh\""], ["proof (prove)\ngoal (1 subgoal):\n 1. recfn 1 (Cn 1 (Pr 1 Z g) [Cn 1 r_length [recf.Id 1 0], recf.Id 1 0])", "using \\<open>recfn 2 ?h\\<close>"], ["proof (prove)\nusing this:\n  recfn 2 (Pr 1 Z g)\n\ngoal (1 subgoal):\n 1. recfn 1 (Cn 1 (Pr 1 Z g) [Cn 1 r_length [recf.Id 1 0], recf.Id 1 0])", "by simp"], ["proof (state)\nthis:\n  recfn 1 (Cn 1 (Pr 1 Z g) [Cn 1 r_length [recf.Id 1 0], recf.Id 1 0])\n\ngoal (1 subgoal):\n 1. eval r_findr [e] = findr e", "with h"], ["proof (chain)\npicking this:\n  eval (Pr 1 Z g) [?j, ?e] =\n  (if \\<forall>i<?j. e_nth ?e i = 0 then Some ?j\n   else Some (GREATEST i. i < ?j \\<and> e_nth ?e i \\<noteq> 0))\n  recfn 1 (Cn 1 (Pr 1 Z g) [Cn 1 r_length [recf.Id 1 0], recf.Id 1 0])", "have hh: \"eval ?hh [e] \\<down>=\n      (if \\<forall>i<e_length e. e_nth e i = 0 then e_length e else ?G e (e_length e))\" for e"], ["proof (prove)\nusing this:\n  eval (Pr 1 Z g) [?j, ?e] =\n  (if \\<forall>i<?j. e_nth ?e i = 0 then Some ?j\n   else Some (GREATEST i. i < ?j \\<and> e_nth ?e i \\<noteq> 0))\n  recfn 1 (Cn 1 (Pr 1 Z g) [Cn 1 r_length [recf.Id 1 0], recf.Id 1 0])\n\ngoal (1 subgoal):\n 1. eval (Cn 1 (Pr 1 Z g) [Cn 1 r_length [recf.Id 1 0], recf.Id 1 0])\n     [e] \\<down>=\n    (if \\<forall>i<e_length e. e_nth e i = 0 then e_length e\n     else GREATEST i. i < e_length e \\<and> e_nth e i \\<noteq> 0)", "by auto"], ["proof (state)\nthis:\n  eval (Cn 1 (Pr 1 Z g) [Cn 1 r_length [recf.Id 1 0], recf.Id 1 0])\n   [?e] \\<down>=\n  (if \\<forall>i<e_length ?e. e_nth ?e i = 0 then e_length ?e\n   else GREATEST i. i < e_length ?e \\<and> e_nth ?e i \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. eval r_findr [e] = findr e", "then"], ["proof (chain)\npicking this:\n  eval (Cn 1 (Pr 1 Z g) [Cn 1 r_length [recf.Id 1 0], recf.Id 1 0])\n   [?e] \\<down>=\n  (if \\<forall>i<e_length ?e. e_nth ?e i = 0 then e_length ?e\n   else GREATEST i. i < e_length ?e \\<and> e_nth ?e i \\<noteq> 0)", "have \"eval ?hh [e] = findr e\" for e"], ["proof (prove)\nusing this:\n  eval (Cn 1 (Pr 1 Z g) [Cn 1 r_length [recf.Id 1 0], recf.Id 1 0])\n   [?e] \\<down>=\n  (if \\<forall>i<e_length ?e. e_nth ?e i = 0 then e_length ?e\n   else GREATEST i. i < e_length ?e \\<and> e_nth ?e i \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. eval (Cn 1 (Pr 1 Z g) [Cn 1 r_length [recf.Id 1 0], recf.Id 1 0]) [e] =\n    findr e", "unfolding findr_def"], ["proof (prove)\nusing this:\n  eval (Cn 1 (Pr 1 Z g) [Cn 1 r_length [recf.Id 1 0], recf.Id 1 0])\n   [?e] \\<down>=\n  (if \\<forall>i<e_length ?e. e_nth ?e i = 0 then e_length ?e\n   else GREATEST i. i < e_length ?e \\<and> e_nth ?e i \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. eval (Cn 1 (Pr 1 Z g) [Cn 1 r_length [recf.Id 1 0], recf.Id 1 0]) [e] =\n    (if \\<exists>i<e_length e. e_nth e i \\<noteq> 0\n     then Some (GREATEST i. i < e_length e \\<and> e_nth e i \\<noteq> 0)\n     else Some (e_length e))", "by auto"], ["proof (state)\nthis:\n  eval (Cn 1 (Pr 1 Z g) [Cn 1 r_length [recf.Id 1 0], recf.Id 1 0]) [?e] =\n  findr ?e\n\ngoal (1 subgoal):\n 1. eval r_findr [e] = findr e", "moreover"], ["proof (state)\nthis:\n  eval (Cn 1 (Pr 1 Z g) [Cn 1 r_length [recf.Id 1 0], recf.Id 1 0]) [?e] =\n  findr ?e\n\ngoal (1 subgoal):\n 1. eval r_findr [e] = findr e", "have \"total ?hh\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Partial_Recursive.total\n     (Cn 1 (Pr 1 Z g) [Cn 1 r_length [recf.Id 1 0], recf.Id 1 0])", "using hh totalI1 \\<open>recfn 1 ?hh\\<close>"], ["proof (prove)\nusing this:\n  eval (Cn 1 (Pr 1 Z g) [Cn 1 r_length [recf.Id 1 0], recf.Id 1 0])\n   [?e] \\<down>=\n  (if \\<forall>i<e_length ?e. e_nth ?e i = 0 then e_length ?e\n   else GREATEST i. i < e_length ?e \\<and> e_nth ?e i \\<noteq> 0)\n  \\<lbrakk>recfn 1 ?f; \\<And>x. eval ?f [x] \\<down>\\<rbrakk>\n  \\<Longrightarrow> Partial_Recursive.total ?f\n  recfn 1 (Cn 1 (Pr 1 Z g) [Cn 1 r_length [recf.Id 1 0], recf.Id 1 0])\n\ngoal (1 subgoal):\n 1. Partial_Recursive.total\n     (Cn 1 (Pr 1 Z g) [Cn 1 r_length [recf.Id 1 0], recf.Id 1 0])", "by simp"], ["proof (state)\nthis:\n  Partial_Recursive.total\n   (Cn 1 (Pr 1 Z g) [Cn 1 r_length [recf.Id 1 0], recf.Id 1 0])\n\ngoal (1 subgoal):\n 1. eval r_findr [e] = findr e", "ultimately"], ["proof (chain)\npicking this:\n  eval (Cn 1 (Pr 1 Z g) [Cn 1 r_length [recf.Id 1 0], recf.Id 1 0]) [?e] =\n  findr ?e\n  Partial_Recursive.total\n   (Cn 1 (Pr 1 Z g) [Cn 1 r_length [recf.Id 1 0], recf.Id 1 0])", "show ?thesis"], ["proof (prove)\nusing this:\n  eval (Cn 1 (Pr 1 Z g) [Cn 1 r_length [recf.Id 1 0], recf.Id 1 0]) [?e] =\n  findr ?e\n  Partial_Recursive.total\n   (Cn 1 (Pr 1 Z g) [Cn 1 r_length [recf.Id 1 0], recf.Id 1 0])\n\ngoal (1 subgoal):\n 1. eval r_findr [e] = findr e", "using \\<open>recfn 1 ?hh\\<close> g_def r_findr_def findr_def"], ["proof (prove)\nusing this:\n  eval (Cn 1 (Pr 1 Z g) [Cn 1 r_length [recf.Id 1 0], recf.Id 1 0]) [?e] =\n  findr ?e\n  Partial_Recursive.total\n   (Cn 1 (Pr 1 Z g) [Cn 1 r_length [recf.Id 1 0], recf.Id 1 0])\n  recfn 1 (Cn 1 (Pr 1 Z g) [Cn 1 r_length [recf.Id 1 0], recf.Id 1 0])\n  g =\n  Cn 3 r_ifz\n   [Cn 3 r_nth [recf.Id 3 2, recf.Id 3 0],\n    Cn 3 r_ifeq\n     [recf.Id 3 0, recf.Id 3 1, Cn 3 S [recf.Id 3 0], recf.Id 3 1],\n    recf.Id 3 0]\n  r_findr \\<equiv>\n  let g = Cn 3 r_ifz\n           [Cn 3 r_nth [recf.Id 3 2, recf.Id 3 0],\n            Cn 3 r_ifeq\n             [recf.Id 3 0, recf.Id 3 1, Cn 3 S [recf.Id 3 0], recf.Id 3 1],\n            recf.Id 3 0]\n  in Cn 1 (Pr 1 Z g) [Cn 1 r_length [recf.Id 1 0], recf.Id 1 0]\n  findr ?e \\<equiv>\n  if \\<exists>i<e_length ?e. e_nth ?e i \\<noteq> 0\n  then Some (GREATEST i. i < e_length ?e \\<and> e_nth ?e i \\<noteq> 0)\n  else Some (e_length ?e)\n\ngoal (1 subgoal):\n 1. eval r_findr [e] = findr e", "by metis"], ["proof (state)\nthis:\n  eval r_findr [e] = findr e\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma U0_in_CP: \"U\\<^sub>0 \\<in> CP\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U\\<^sub>0 \\<in> CP", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. U\\<^sub>0 \\<in> CP", "define s where\n    \"s \\<equiv> \\<lambda>x. if findr x \\<down>= e_length x then Some 0 else Some (e_take (Suc (the (findr x))) x)\""], ["proof (state)\nthis:\n  s \\<equiv>\n  \\<lambda>x.\n     if findr x \\<down>= e_length x then Some 0\n     else Some (e_take (Suc (the (findr x))) x)\n\ngoal (1 subgoal):\n 1. U\\<^sub>0 \\<in> CP", "have \"s \\<in> \\<P>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> \\<P>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. s \\<in> \\<P>", "define r where\n      \"r \\<equiv> Cn 1 r_ifeq [r_findr, r_length, Z, Cn 1 r_take [Cn 1 S [r_findr], Id 1 0]]\""], ["proof (state)\nthis:\n  r \\<equiv>\n  Cn 1 r_ifeq\n   [r_findr, r_length, Z, Cn 1 r_take [Cn 1 S [r_findr], recf.Id 1 0]]\n\ngoal (1 subgoal):\n 1. s \\<in> \\<P>", "then"], ["proof (chain)\npicking this:\n  r \\<equiv>\n  Cn 1 r_ifeq\n   [r_findr, r_length, Z, Cn 1 r_take [Cn 1 S [r_findr], recf.Id 1 0]]", "have \"\\<And>x. eval r [x] = s x\""], ["proof (prove)\nusing this:\n  r \\<equiv>\n  Cn 1 r_ifeq\n   [r_findr, r_length, Z, Cn 1 r_take [Cn 1 S [r_findr], recf.Id 1 0]]\n\ngoal (1 subgoal):\n 1. \\<And>x. eval r [x] = s x", "using s_def findr_total"], ["proof (prove)\nusing this:\n  r \\<equiv>\n  Cn 1 r_ifeq\n   [r_findr, r_length, Z, Cn 1 r_take [Cn 1 S [r_findr], recf.Id 1 0]]\n  s \\<equiv>\n  \\<lambda>x.\n     if findr x \\<down>= e_length x then Some 0\n     else Some (e_take (Suc (the (findr x))) x)\n  findr ?e \\<down>\n\ngoal (1 subgoal):\n 1. \\<And>x. eval r [x] = s x", "by fastforce"], ["proof (state)\nthis:\n  eval r [?x] = s ?x\n\ngoal (1 subgoal):\n 1. s \\<in> \\<P>", "moreover"], ["proof (state)\nthis:\n  eval r [?x] = s ?x\n\ngoal (1 subgoal):\n 1. s \\<in> \\<P>", "have \"recfn 1 r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. recfn 1 r", "using r_def"], ["proof (prove)\nusing this:\n  r \\<equiv>\n  Cn 1 r_ifeq\n   [r_findr, r_length, Z, Cn 1 r_take [Cn 1 S [r_findr], recf.Id 1 0]]\n\ngoal (1 subgoal):\n 1. recfn 1 r", "by simp"], ["proof (state)\nthis:\n  recfn 1 r\n\ngoal (1 subgoal):\n 1. s \\<in> \\<P>", "ultimately"], ["proof (chain)\npicking this:\n  eval r [?x] = s ?x\n  recfn 1 r", "show ?thesis"], ["proof (prove)\nusing this:\n  eval r [?x] = s ?x\n  recfn 1 r\n\ngoal (1 subgoal):\n 1. s \\<in> \\<P>", "by auto"], ["proof (state)\nthis:\n  s \\<in> \\<P>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  s \\<in> \\<P>\n\ngoal (1 subgoal):\n 1. U\\<^sub>0 \\<in> CP", "moreover"], ["proof (state)\nthis:\n  s \\<in> \\<P>\n\ngoal (1 subgoal):\n 1. U\\<^sub>0 \\<in> CP", "have \"learn_cp prenum U\\<^sub>0 s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. learn_cp prenum U\\<^sub>0 s", "proof (rule learn_cpI)"], ["proof (state)\ngoal (3 subgoals):\n 1. environment prenum U\\<^sub>0 s\n 2. \\<And>f.\n       f \\<in> U\\<^sub>0 \\<Longrightarrow>\n       \\<exists>i.\n          prenum i = f \\<and>\n          (\\<exists>n\\<^sub>0.\n              \\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i)\n 3. \\<And>f n.\n       f \\<in> U\\<^sub>0 \\<Longrightarrow>\n       prenum (the (s (f \\<triangleright> n))) \\<in> U\\<^sub>0", "show \"environment prenum U\\<^sub>0 s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. environment prenum U\\<^sub>0 s", "using \\<open>s \\<in> \\<P>\\<close> s_def prenum_in_R2 U0_in_NUM"], ["proof (prove)\nusing this:\n  s \\<in> \\<P>\n  s \\<equiv>\n  \\<lambda>x.\n     if findr x \\<down>= e_length x then Some 0\n     else Some (e_take (Suc (the (findr x))) x)\n  prenum \\<in> \\<R>\\<^sup>2\n  U\\<^sub>0 \\<in> NUM\n\ngoal (1 subgoal):\n 1. environment prenum U\\<^sub>0 s", "by auto"], ["proof (state)\nthis:\n  environment prenum U\\<^sub>0 s\n\ngoal (2 subgoals):\n 1. \\<And>f.\n       f \\<in> U\\<^sub>0 \\<Longrightarrow>\n       \\<exists>i.\n          prenum i = f \\<and>\n          (\\<exists>n\\<^sub>0.\n              \\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i)\n 2. \\<And>f n.\n       f \\<in> U\\<^sub>0 \\<Longrightarrow>\n       prenum (the (s (f \\<triangleright> n))) \\<in> U\\<^sub>0", "show \"\\<exists>i. prenum i = f \\<and> (\\<forall>\\<^sup>\\<infinity>n. s (f \\<triangleright> n) \\<down>= i)\" if \"f \\<in> U\\<^sub>0\" for f"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i.\n       prenum i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i)", "proof (cases \"f = (\\<lambda>_. Some 0)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. f = 0\\<^sup>\\<infinity> \\<Longrightarrow>\n    \\<exists>i.\n       prenum i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i)\n 2. f \\<noteq> 0\\<^sup>\\<infinity> \\<Longrightarrow>\n    \\<exists>i.\n       prenum i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i)", "case True"], ["proof (state)\nthis:\n  f = 0\\<^sup>\\<infinity>\n\ngoal (2 subgoals):\n 1. f = 0\\<^sup>\\<infinity> \\<Longrightarrow>\n    \\<exists>i.\n       prenum i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i)\n 2. f \\<noteq> 0\\<^sup>\\<infinity> \\<Longrightarrow>\n    \\<exists>i.\n       prenum i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i)", "then"], ["proof (chain)\npicking this:\n  f = 0\\<^sup>\\<infinity>", "have \"s (f \\<triangleright> n) \\<down>= 0\" for n"], ["proof (prove)\nusing this:\n  f = 0\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. s (f \\<triangleright> n) \\<down>= 0", "using findr_def s_def"], ["proof (prove)\nusing this:\n  f = 0\\<^sup>\\<infinity>\n  findr ?e \\<equiv>\n  if \\<exists>i<e_length ?e. e_nth ?e i \\<noteq> 0\n  then Some (GREATEST i. i < e_length ?e \\<and> e_nth ?e i \\<noteq> 0)\n  else Some (e_length ?e)\n  s \\<equiv>\n  \\<lambda>x.\n     if findr x \\<down>= e_length x then Some 0\n     else Some (e_take (Suc (the (findr x))) x)\n\ngoal (1 subgoal):\n 1. s (f \\<triangleright> n) \\<down>= 0", "by simp"], ["proof (state)\nthis:\n  s (f \\<triangleright> ?n) \\<down>= 0\n\ngoal (2 subgoals):\n 1. f = 0\\<^sup>\\<infinity> \\<Longrightarrow>\n    \\<exists>i.\n       prenum i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i)\n 2. f \\<noteq> 0\\<^sup>\\<infinity> \\<Longrightarrow>\n    \\<exists>i.\n       prenum i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i)", "then"], ["proof (chain)\npicking this:\n  s (f \\<triangleright> ?n) \\<down>= 0", "have \"\\<forall>n\\<ge>0. s (f \\<triangleright> n) \\<down>= 0\""], ["proof (prove)\nusing this:\n  s (f \\<triangleright> ?n) \\<down>= 0\n\ngoal (1 subgoal):\n 1. \\<forall>n\\<ge>0. s (f \\<triangleright> n) \\<down>= 0", "by simp"], ["proof (state)\nthis:\n  \\<forall>n\\<ge>0. s (f \\<triangleright> n) \\<down>= 0\n\ngoal (2 subgoals):\n 1. f = 0\\<^sup>\\<infinity> \\<Longrightarrow>\n    \\<exists>i.\n       prenum i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i)\n 2. f \\<noteq> 0\\<^sup>\\<infinity> \\<Longrightarrow>\n    \\<exists>i.\n       prenum i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i)", "moreover"], ["proof (state)\nthis:\n  \\<forall>n\\<ge>0. s (f \\<triangleright> n) \\<down>= 0\n\ngoal (2 subgoals):\n 1. f = 0\\<^sup>\\<infinity> \\<Longrightarrow>\n    \\<exists>i.\n       prenum i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i)\n 2. f \\<noteq> 0\\<^sup>\\<infinity> \\<Longrightarrow>\n    \\<exists>i.\n       prenum i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i)", "have \"prenum 0 = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prenum 0 = f", "using True"], ["proof (prove)\nusing this:\n  f = 0\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. prenum 0 = f", "by auto"], ["proof (state)\nthis:\n  prenum 0 = f\n\ngoal (2 subgoals):\n 1. f = 0\\<^sup>\\<infinity> \\<Longrightarrow>\n    \\<exists>i.\n       prenum i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i)\n 2. f \\<noteq> 0\\<^sup>\\<infinity> \\<Longrightarrow>\n    \\<exists>i.\n       prenum i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i)", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>n\\<ge>0. s (f \\<triangleright> n) \\<down>= 0\n  prenum 0 = f", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>n\\<ge>0. s (f \\<triangleright> n) \\<down>= 0\n  prenum 0 = f\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       prenum i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i)", "by auto"], ["proof (state)\nthis:\n  \\<exists>i.\n     prenum i = f \\<and>\n     (\\<exists>n\\<^sub>0.\n         \\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i)\n\ngoal (1 subgoal):\n 1. f \\<noteq> 0\\<^sup>\\<infinity> \\<Longrightarrow>\n    \\<exists>i.\n       prenum i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<noteq> 0\\<^sup>\\<infinity> \\<Longrightarrow>\n    \\<exists>i.\n       prenum i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i)", "case False"], ["proof (state)\nthis:\n  f \\<noteq> 0\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. f \\<noteq> 0\\<^sup>\\<infinity> \\<Longrightarrow>\n    \\<exists>i.\n       prenum i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i)", "then"], ["proof (chain)\npicking this:\n  f \\<noteq> 0\\<^sup>\\<infinity>", "obtain ws where ws: \"length ws > 0\" \"last ws \\<noteq> 0\" \"f = ws \\<odot> 0\\<^sup>\\<infinity>\""], ["proof (prove)\nusing this:\n  f \\<noteq> 0\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. (\\<And>ws.\n        \\<lbrakk>0 < length ws; last ws \\<noteq> 0;\n         f = ws \\<odot> 0\\<^sup>\\<infinity>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using U0_def \\<open>f \\<in> U\\<^sub>0\\<close> almost0_canonical"], ["proof (prove)\nusing this:\n  f \\<noteq> 0\\<^sup>\\<infinity>\n  U\\<^sub>0 \\<equiv> {vs \\<odot> 0\\<^sup>\\<infinity> |vs. vs \\<in> UNIV}\n  f \\<in> U\\<^sub>0\n  \\<lbrakk>?f = ?vs \\<odot> 0\\<^sup>\\<infinity>;\n   ?f \\<noteq> 0\\<^sup>\\<infinity>;\n   \\<And>ws.\n      \\<lbrakk>0 < length ws; last ws \\<noteq> 0;\n       ?f = ws \\<odot> 0\\<^sup>\\<infinity>\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>ws.\n        \\<lbrakk>0 < length ws; last ws \\<noteq> 0;\n         f = ws \\<odot> 0\\<^sup>\\<infinity>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  0 < length ws\n  last ws \\<noteq> 0\n  f = ws \\<odot> 0\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. f \\<noteq> 0\\<^sup>\\<infinity> \\<Longrightarrow>\n    \\<exists>i.\n       prenum i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i)", "let ?m = \"length ws - 1\""], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<noteq> 0\\<^sup>\\<infinity> \\<Longrightarrow>\n    \\<exists>i.\n       prenum i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i)", "let ?i = \"list_encode ws\""], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<noteq> 0\\<^sup>\\<infinity> \\<Longrightarrow>\n    \\<exists>i.\n       prenum i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i)", "have \"prenum ?i = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prenum (Partial_Recursive.list_encode ws) = f", "using ws"], ["proof (prove)\nusing this:\n  0 < length ws\n  last ws \\<noteq> 0\n  f = ws \\<odot> 0\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. prenum (Partial_Recursive.list_encode ws) = f", "by auto"], ["proof (state)\nthis:\n  prenum (Partial_Recursive.list_encode ws) = f\n\ngoal (1 subgoal):\n 1. f \\<noteq> 0\\<^sup>\\<infinity> \\<Longrightarrow>\n    \\<exists>i.\n       prenum i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i)", "moreover"], ["proof (state)\nthis:\n  prenum (Partial_Recursive.list_encode ws) = f\n\ngoal (1 subgoal):\n 1. f \\<noteq> 0\\<^sup>\\<infinity> \\<Longrightarrow>\n    \\<exists>i.\n       prenum i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i)", "have \"s (f \\<triangleright> n) \\<down>= ?i\" if \"n \\<ge> ?m\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. s (f \\<triangleright> n) \\<down>= Partial_Recursive.list_encode ws", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. s (f \\<triangleright> n) \\<down>= Partial_Recursive.list_encode ws", "have \"e_nth (f \\<triangleright> n) ?m \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e_nth (f \\<triangleright> n) (length ws - 1) \\<noteq> 0", "using ws that"], ["proof (prove)\nusing this:\n  0 < length ws\n  last ws \\<noteq> 0\n  f = ws \\<odot> 0\\<^sup>\\<infinity>\n  length ws - 1 \\<le> n\n\ngoal (1 subgoal):\n 1. e_nth (f \\<triangleright> n) (length ws - 1) \\<noteq> 0", "by (simp add: last_conv_nth)"], ["proof (state)\nthis:\n  e_nth (f \\<triangleright> n) (length ws - 1) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. s (f \\<triangleright> n) \\<down>= Partial_Recursive.list_encode ws", "then"], ["proof (chain)\npicking this:\n  e_nth (f \\<triangleright> n) (length ws - 1) \\<noteq> 0", "have \"\\<exists>k<Suc n. e_nth (f \\<triangleright> n) k \\<noteq> 0\""], ["proof (prove)\nusing this:\n  e_nth (f \\<triangleright> n) (length ws - 1) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>k<Suc n. e_nth (f \\<triangleright> n) k \\<noteq> 0", "using le_imp_less_Suc that"], ["proof (prove)\nusing this:\n  e_nth (f \\<triangleright> n) (length ws - 1) \\<noteq> 0\n  ?m \\<le> ?n \\<Longrightarrow> ?m < Suc ?n\n  length ws - 1 \\<le> n\n\ngoal (1 subgoal):\n 1. \\<exists>k<Suc n. e_nth (f \\<triangleright> n) k \\<noteq> 0", "by blast"], ["proof (state)\nthis:\n  \\<exists>k<Suc n. e_nth (f \\<triangleright> n) k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. s (f \\<triangleright> n) \\<down>= Partial_Recursive.list_encode ws", "moreover"], ["proof (state)\nthis:\n  \\<exists>k<Suc n. e_nth (f \\<triangleright> n) k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. s (f \\<triangleright> n) \\<down>= Partial_Recursive.list_encode ws", "have\n          \"(GREATEST k. k < e_length (f \\<triangleright> n) \\<and> e_nth (f \\<triangleright> n) k \\<noteq> 0) = ?m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (GREATEST k.\n        k < e_length (f \\<triangleright> n) \\<and>\n        e_nth (f \\<triangleright> n) k \\<noteq> 0) =\n    length ws - 1", "proof (rule Greatest_equality)"], ["proof (state)\ngoal (2 subgoals):\n 1. length ws - 1 < e_length (f \\<triangleright> n) \\<and>\n    e_nth (f \\<triangleright> n) (length ws - 1) \\<noteq> 0\n 2. \\<And>y.\n       y < e_length (f \\<triangleright> n) \\<and>\n       e_nth (f \\<triangleright> n) y \\<noteq> 0 \\<Longrightarrow>\n       y \\<le> length ws - 1", "show \"?m < e_length (f \\<triangleright> n) \\<and> e_nth (f \\<triangleright> n) ?m \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length ws - 1 < e_length (f \\<triangleright> n) \\<and>\n    e_nth (f \\<triangleright> n) (length ws - 1) \\<noteq> 0", "using \\<open>e_nth (f \\<triangleright> n) ?m \\<noteq> 0\\<close> that"], ["proof (prove)\nusing this:\n  e_nth (f \\<triangleright> n) (length ws - 1) \\<noteq> 0\n  length ws - 1 \\<le> n\n\ngoal (1 subgoal):\n 1. length ws - 1 < e_length (f \\<triangleright> n) \\<and>\n    e_nth (f \\<triangleright> n) (length ws - 1) \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  length ws - 1 < e_length (f \\<triangleright> n) \\<and>\n  e_nth (f \\<triangleright> n) (length ws - 1) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y < e_length (f \\<triangleright> n) \\<and>\n       e_nth (f \\<triangleright> n) y \\<noteq> 0 \\<Longrightarrow>\n       y \\<le> length ws - 1", "show \"\\<And>y. y < e_length (f \\<triangleright> n) \\<and> e_nth (f \\<triangleright> n) y \\<noteq> 0 \\<Longrightarrow> y \\<le> ?m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       y < e_length (f \\<triangleright> n) \\<and>\n       e_nth (f \\<triangleright> n) y \\<noteq> 0 \\<Longrightarrow>\n       y \\<le> length ws - 1", "using ws less_Suc_eq_le"], ["proof (prove)\nusing this:\n  0 < length ws\n  last ws \\<noteq> 0\n  f = ws \\<odot> 0\\<^sup>\\<infinity>\n  (?m < Suc ?n) = (?m \\<le> ?n)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y < e_length (f \\<triangleright> n) \\<and>\n       e_nth (f \\<triangleright> n) y \\<noteq> 0 \\<Longrightarrow>\n       y \\<le> length ws - 1", "by fastforce"], ["proof (state)\nthis:\n  ?y < e_length (f \\<triangleright> n) \\<and>\n  e_nth (f \\<triangleright> n) ?y \\<noteq> 0 \\<Longrightarrow>\n  ?y \\<le> length ws - 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (GREATEST k.\n      k < e_length (f \\<triangleright> n) \\<and>\n      e_nth (f \\<triangleright> n) k \\<noteq> 0) =\n  length ws - 1\n\ngoal (1 subgoal):\n 1. s (f \\<triangleright> n) \\<down>= Partial_Recursive.list_encode ws", "ultimately"], ["proof (chain)\npicking this:\n  \\<exists>k<Suc n. e_nth (f \\<triangleright> n) k \\<noteq> 0\n  (GREATEST k.\n      k < e_length (f \\<triangleright> n) \\<and>\n      e_nth (f \\<triangleright> n) k \\<noteq> 0) =\n  length ws - 1", "have \"findr (f \\<triangleright> n) \\<down>= ?m\""], ["proof (prove)\nusing this:\n  \\<exists>k<Suc n. e_nth (f \\<triangleright> n) k \\<noteq> 0\n  (GREATEST k.\n      k < e_length (f \\<triangleright> n) \\<and>\n      e_nth (f \\<triangleright> n) k \\<noteq> 0) =\n  length ws - 1\n\ngoal (1 subgoal):\n 1. findr (f \\<triangleright> n) \\<down>= length ws - 1", "using that findr_def"], ["proof (prove)\nusing this:\n  \\<exists>k<Suc n. e_nth (f \\<triangleright> n) k \\<noteq> 0\n  (GREATEST k.\n      k < e_length (f \\<triangleright> n) \\<and>\n      e_nth (f \\<triangleright> n) k \\<noteq> 0) =\n  length ws - 1\n  length ws - 1 \\<le> n\n  findr ?e \\<equiv>\n  if \\<exists>i<e_length ?e. e_nth ?e i \\<noteq> 0\n  then Some (GREATEST i. i < e_length ?e \\<and> e_nth ?e i \\<noteq> 0)\n  else Some (e_length ?e)\n\ngoal (1 subgoal):\n 1. findr (f \\<triangleright> n) \\<down>= length ws - 1", "by simp"], ["proof (state)\nthis:\n  findr (f \\<triangleright> n) \\<down>= length ws - 1\n\ngoal (1 subgoal):\n 1. s (f \\<triangleright> n) \\<down>= Partial_Recursive.list_encode ws", "moreover"], ["proof (state)\nthis:\n  findr (f \\<triangleright> n) \\<down>= length ws - 1\n\ngoal (1 subgoal):\n 1. s (f \\<triangleright> n) \\<down>= Partial_Recursive.list_encode ws", "have \"?m < e_length (f \\<triangleright> n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length ws - 1 < e_length (f \\<triangleright> n)", "using that"], ["proof (prove)\nusing this:\n  length ws - 1 \\<le> n\n\ngoal (1 subgoal):\n 1. length ws - 1 < e_length (f \\<triangleright> n)", "by simp"], ["proof (state)\nthis:\n  length ws - 1 < e_length (f \\<triangleright> n)\n\ngoal (1 subgoal):\n 1. s (f \\<triangleright> n) \\<down>= Partial_Recursive.list_encode ws", "ultimately"], ["proof (chain)\npicking this:\n  findr (f \\<triangleright> n) \\<down>= length ws - 1\n  length ws - 1 < e_length (f \\<triangleright> n)", "have \"s (f \\<triangleright> n) \\<down>= e_take (Suc ?m) (f \\<triangleright> n)\""], ["proof (prove)\nusing this:\n  findr (f \\<triangleright> n) \\<down>= length ws - 1\n  length ws - 1 < e_length (f \\<triangleright> n)\n\ngoal (1 subgoal):\n 1. s (f \\<triangleright> n) \\<down>=\n    e_take (Suc (length ws - 1)) (f \\<triangleright> n)", "using s_def"], ["proof (prove)\nusing this:\n  findr (f \\<triangleright> n) \\<down>= length ws - 1\n  length ws - 1 < e_length (f \\<triangleright> n)\n  s \\<equiv>\n  \\<lambda>x.\n     if findr x \\<down>= e_length x then Some 0\n     else Some (e_take (Suc (the (findr x))) x)\n\ngoal (1 subgoal):\n 1. s (f \\<triangleright> n) \\<down>=\n    e_take (Suc (length ws - 1)) (f \\<triangleright> n)", "by simp"], ["proof (state)\nthis:\n  s (f \\<triangleright> n) \\<down>=\n  e_take (Suc (length ws - 1)) (f \\<triangleright> n)\n\ngoal (1 subgoal):\n 1. s (f \\<triangleright> n) \\<down>= Partial_Recursive.list_encode ws", "moreover"], ["proof (state)\nthis:\n  s (f \\<triangleright> n) \\<down>=\n  e_take (Suc (length ws - 1)) (f \\<triangleright> n)\n\ngoal (1 subgoal):\n 1. s (f \\<triangleright> n) \\<down>= Partial_Recursive.list_encode ws", "have \"e_take (Suc ?m) (f \\<triangleright> n) = list_encode ws\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e_take (Suc (length ws - 1)) (f \\<triangleright> n) =\n    Partial_Recursive.list_encode ws", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. e_take (Suc (length ws - 1)) (f \\<triangleright> n) =\n    Partial_Recursive.list_encode ws", "have \"take (Suc ?m) (prefix f n) = prefix f ?m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. take (Suc (length ws - 1)) (prefix f n) = prefix f (length ws - 1)", "using take_prefix[of f ?m n] ws that"], ["proof (prove)\nusing this:\n  \\<lbrakk>f \\<in> \\<R>; length ws - 1 \\<le> n\\<rbrakk>\n  \\<Longrightarrow> prefix f (length ws - 1) =\n                    take (Suc (length ws - 1)) (prefix f n)\n  0 < length ws\n  last ws \\<noteq> 0\n  f = ws \\<odot> 0\\<^sup>\\<infinity>\n  length ws - 1 \\<le> n\n\ngoal (1 subgoal):\n 1. take (Suc (length ws - 1)) (prefix f n) = prefix f (length ws - 1)", "by (simp add: almost0_in_R1)"], ["proof (state)\nthis:\n  take (Suc (length ws - 1)) (prefix f n) = prefix f (length ws - 1)\n\ngoal (1 subgoal):\n 1. e_take (Suc (length ws - 1)) (f \\<triangleright> n) =\n    Partial_Recursive.list_encode ws", "then"], ["proof (chain)\npicking this:\n  take (Suc (length ws - 1)) (prefix f n) = prefix f (length ws - 1)", "have \"take (Suc ?m) (prefix f n) = ws\""], ["proof (prove)\nusing this:\n  take (Suc (length ws - 1)) (prefix f n) = prefix f (length ws - 1)\n\ngoal (1 subgoal):\n 1. take (Suc (length ws - 1)) (prefix f n) = ws", "using ws prefixI"], ["proof (prove)\nusing this:\n  take (Suc (length ws - 1)) (prefix f n) = prefix f (length ws - 1)\n  0 < length ws\n  last ws \\<noteq> 0\n  f = ws \\<odot> 0\\<^sup>\\<infinity>\n  \\<lbrakk>0 < length ?vs;\n   \\<And>x. x < length ?vs \\<Longrightarrow> ?f x \\<down>= ?vs ! x\\<rbrakk>\n  \\<Longrightarrow> prefix ?f (length ?vs - 1) = ?vs\n\ngoal (1 subgoal):\n 1. take (Suc (length ws - 1)) (prefix f n) = ws", "by auto"], ["proof (state)\nthis:\n  take (Suc (length ws - 1)) (prefix f n) = ws\n\ngoal (1 subgoal):\n 1. e_take (Suc (length ws - 1)) (f \\<triangleright> n) =\n    Partial_Recursive.list_encode ws", "then"], ["proof (chain)\npicking this:\n  take (Suc (length ws - 1)) (prefix f n) = ws", "show ?thesis"], ["proof (prove)\nusing this:\n  take (Suc (length ws - 1)) (prefix f n) = ws\n\ngoal (1 subgoal):\n 1. e_take (Suc (length ws - 1)) (f \\<triangleright> n) =\n    Partial_Recursive.list_encode ws", "by simp"], ["proof (state)\nthis:\n  e_take (Suc (length ws - 1)) (f \\<triangleright> n) =\n  Partial_Recursive.list_encode ws\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  e_take (Suc (length ws - 1)) (f \\<triangleright> n) =\n  Partial_Recursive.list_encode ws\n\ngoal (1 subgoal):\n 1. s (f \\<triangleright> n) \\<down>= Partial_Recursive.list_encode ws", "ultimately"], ["proof (chain)\npicking this:\n  s (f \\<triangleright> n) \\<down>=\n  e_take (Suc (length ws - 1)) (f \\<triangleright> n)\n  e_take (Suc (length ws - 1)) (f \\<triangleright> n) =\n  Partial_Recursive.list_encode ws", "show ?thesis"], ["proof (prove)\nusing this:\n  s (f \\<triangleright> n) \\<down>=\n  e_take (Suc (length ws - 1)) (f \\<triangleright> n)\n  e_take (Suc (length ws - 1)) (f \\<triangleright> n) =\n  Partial_Recursive.list_encode ws\n\ngoal (1 subgoal):\n 1. s (f \\<triangleright> n) \\<down>= Partial_Recursive.list_encode ws", "by simp"], ["proof (state)\nthis:\n  s (f \\<triangleright> n) \\<down>= Partial_Recursive.list_encode ws\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  length ws - 1 \\<le> ?n \\<Longrightarrow>\n  s (f \\<triangleright> ?n) \\<down>= Partial_Recursive.list_encode ws\n\ngoal (1 subgoal):\n 1. f \\<noteq> 0\\<^sup>\\<infinity> \\<Longrightarrow>\n    \\<exists>i.\n       prenum i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i)", "ultimately"], ["proof (chain)\npicking this:\n  prenum (Partial_Recursive.list_encode ws) = f\n  length ws - 1 \\<le> ?n \\<Longrightarrow>\n  s (f \\<triangleright> ?n) \\<down>= Partial_Recursive.list_encode ws", "show ?thesis"], ["proof (prove)\nusing this:\n  prenum (Partial_Recursive.list_encode ws) = f\n  length ws - 1 \\<le> ?n \\<Longrightarrow>\n  s (f \\<triangleright> ?n) \\<down>= Partial_Recursive.list_encode ws\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       prenum i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i)", "by auto"], ["proof (state)\nthis:\n  \\<exists>i.\n     prenum i = f \\<and>\n     (\\<exists>n\\<^sub>0.\n         \\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?f \\<in> U\\<^sub>0 \\<Longrightarrow>\n  \\<exists>i.\n     prenum i = ?f \\<and>\n     (\\<exists>n\\<^sub>0.\n         \\<forall>n\\<ge>n\\<^sub>0. s (?f \\<triangleright> n) \\<down>= i)\n\ngoal (1 subgoal):\n 1. \\<And>f n.\n       f \\<in> U\\<^sub>0 \\<Longrightarrow>\n       prenum (the (s (f \\<triangleright> n))) \\<in> U\\<^sub>0", "show \"\\<And>f n. f \\<in> U\\<^sub>0 \\<Longrightarrow> prenum (the (s (f \\<triangleright> n))) \\<in> U\\<^sub>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f n.\n       f \\<in> U\\<^sub>0 \\<Longrightarrow>\n       prenum (the (s (f \\<triangleright> n))) \\<in> U\\<^sub>0", "using U0_def"], ["proof (prove)\nusing this:\n  U\\<^sub>0 \\<equiv> {vs \\<odot> 0\\<^sup>\\<infinity> |vs. vs \\<in> UNIV}\n\ngoal (1 subgoal):\n 1. \\<And>f n.\n       f \\<in> U\\<^sub>0 \\<Longrightarrow>\n       prenum (the (s (f \\<triangleright> n))) \\<in> U\\<^sub>0", "by fastforce"], ["proof (state)\nthis:\n  ?f \\<in> U\\<^sub>0 \\<Longrightarrow>\n  prenum (the (s (?f \\<triangleright> ?n))) \\<in> U\\<^sub>0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  learn_cp prenum U\\<^sub>0 s\n\ngoal (1 subgoal):\n 1. U\\<^sub>0 \\<in> CP", "ultimately"], ["proof (chain)\npicking this:\n  s \\<in> \\<P>\n  learn_cp prenum U\\<^sub>0 s", "show ?thesis"], ["proof (prove)\nusing this:\n  s \\<in> \\<P>\n  learn_cp prenum U\\<^sub>0 s\n\ngoal (1 subgoal):\n 1. U\\<^sub>0 \\<in> CP", "using CP_def"], ["proof (prove)\nusing this:\n  s \\<in> \\<P>\n  learn_cp prenum U\\<^sub>0 s\n  CP \\<equiv> {U. \\<exists>\\<psi> s. learn_cp \\<psi> U s}\n\ngoal (1 subgoal):\n 1. U\\<^sub>0 \\<in> CP", "by blast"], ["proof (state)\nthis:\n  U\\<^sub>0 \\<in> CP\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>As a bit of an interlude, we can now show that CP is not\nclosed under the subset relation. This works by removing functions from\n@{term \"U\\<^sub>0\"} in a ``noncomputable'' way such that a strategy cannot ensure\nthat every intermediate hypothesis is in that new class.\\<close>"], ["", "lemma CP_not_closed_subseteq: \"\\<exists>V U. V \\<subseteq> U \\<and> U \\<in> CP \\<and> V \\<notin> CP\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>V U. V \\<subseteq> U \\<and> U \\<in> CP \\<and> V \\<notin> CP", "proof -\n  \\<comment> \\<open>The numbering $g\\in\\mathcal{R}^2$ enumerates all\n  functions $i0^\\infty \\in U_0$.\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>V U. V \\<subseteq> U \\<and> U \\<in> CP \\<and> V \\<notin> CP", "define g where \"g \\<equiv> \\<lambda>i. [i] \\<odot>  0\\<^sup>\\<infinity>\""], ["proof (state)\nthis:\n  g \\<equiv> \\<lambda>i. [i] \\<odot> 0\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. \\<exists>V U. V \\<subseteq> U \\<and> U \\<in> CP \\<and> V \\<notin> CP", "have g_inj: \"i = j\" if \"g i = g j\" for i j"], ["proof (prove)\ngoal (1 subgoal):\n 1. i = j", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. i = j", "have \"g i 0 \\<down>= i\" and \"g j 0 \\<down>= j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g i 0 \\<down>= i &&& g j 0 \\<down>= j", "by (simp_all add: g_def)"], ["proof (state)\nthis:\n  g i 0 \\<down>= i\n  g j 0 \\<down>= j\n\ngoal (1 subgoal):\n 1. i = j", "with that"], ["proof (chain)\npicking this:\n  g i = g j\n  g i 0 \\<down>= i\n  g j 0 \\<down>= j", "show \"i = j\""], ["proof (prove)\nusing this:\n  g i = g j\n  g i 0 \\<down>= i\n  g j 0 \\<down>= j\n\ngoal (1 subgoal):\n 1. i = j", "by (metis option.inject)"], ["proof (state)\nthis:\n  i = j\n\ngoal:\nNo subgoals!", "qed\n\n  \\<comment> \\<open>Define a class $V$. If the strategy $\\varphi_i$ learns\n  $g_i$, it outputs a hypothesis for $g_i$ on some shortest prefix $g_i^m$.\n  Then the function $g_i^m10^\\infty$ is included in the class $V$; otherwise\n  $g_i$ is included.\\<close>"], ["proof (state)\nthis:\n  g ?i = g ?j \\<Longrightarrow> ?i = ?j\n\ngoal (1 subgoal):\n 1. \\<exists>V U. V \\<subseteq> U \\<and> U \\<in> CP \\<and> V \\<notin> CP", "define V where \"V \\<equiv>\n    {if learn_lim \\<phi> {g i} (\\<phi> i)\n     then (prefix (g i) (LEAST n. \\<phi> (the (\\<phi> i ((g i) \\<triangleright> n))) = g i)) @ [1] \\<odot> 0\\<^sup>\\<infinity>\n     else g i |\n     i. i \\<in> UNIV}\""], ["proof (state)\nthis:\n  V \\<equiv>\n  {if learn_lim \\<phi> {g i} (\\<phi> i)\n   then prefix (g i)\n         (LEAST n. \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i) @\n        [1] \\<odot>\n        0\\<^sup>\\<infinity>\n   else g i |\n   i. i \\<in> UNIV}\n\ngoal (1 subgoal):\n 1. \\<exists>V U. V \\<subseteq> U \\<and> U \\<in> CP \\<and> V \\<notin> CP", "have \"V \\<notin> CP_wrt \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. V \\<notin> CP_wrt \\<phi>", "proof\n    \\<comment> \\<open>Assuming $V \\in CP_\\varphi$, there is a CP strategy\n    $\\varphi_i$ for $V$.\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. V \\<in> CP_wrt \\<phi> \\<Longrightarrow> False", "assume \"V \\<in> CP_wrt \\<phi>\""], ["proof (state)\nthis:\n  V \\<in> CP_wrt \\<phi>\n\ngoal (1 subgoal):\n 1. V \\<in> CP_wrt \\<phi> \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  V \\<in> CP_wrt \\<phi>", "obtain s where s: \"s \\<in> \\<P>\" \"learn_cp \\<phi> V s\""], ["proof (prove)\nusing this:\n  V \\<in> CP_wrt \\<phi>\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>s \\<in> \\<P>; learn_cp \\<phi> V s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using CP_wrt_def learn_cpE(1)"], ["proof (prove)\nusing this:\n  V \\<in> CP_wrt \\<phi>\n  CP_wrt ?\\<psi> \\<equiv> {U. \\<exists>s. learn_cp ?\\<psi> U s}\n  learn_cp ?\\<psi> ?U ?s \\<Longrightarrow> environment ?\\<psi> ?U ?s\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>s \\<in> \\<P>; learn_cp \\<phi> V s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  s \\<in> \\<P>\n  learn_cp \\<phi> V s\n\ngoal (1 subgoal):\n 1. V \\<in> CP_wrt \\<phi> \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  s \\<in> \\<P>\n  learn_cp \\<phi> V s", "obtain i where i: \"\\<phi> i = s\""], ["proof (prove)\nusing this:\n  s \\<in> \\<P>\n  learn_cp \\<phi> V s\n\ngoal (1 subgoal):\n 1. (\\<And>i. \\<phi> i = s \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using phi_universal"], ["proof (prove)\nusing this:\n  s \\<in> \\<P>\n  learn_cp \\<phi> V s\n  \\<lbrakk>?f \\<in> \\<P>;\n   \\<And>i. \\<phi> i = ?f \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>i. \\<phi> i = s \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<phi> i = s\n\ngoal (1 subgoal):\n 1. V \\<in> CP_wrt \\<phi> \\<Longrightarrow> False", "show False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof (cases \"learn_lim \\<phi> {g i} (\\<phi> i)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. learn_lim \\<phi> {g i} (\\<phi> i) \\<Longrightarrow> False\n 2. \\<not> learn_lim \\<phi> {g i} (\\<phi> i) \\<Longrightarrow> False", "case learn: True\n      \\<comment> \\<open>If $\\varphi_i$ learns $g_i$, it hypothesizes $g_i$ on\n      some shortest prefix $g_i^m$. Thus it hypothesizes $g_i$ on some prefix\n      of $g_i^m10^\\infty \\in V$, too. But $g_i$ is not a class-preserving\n      hypothesis because $g_i \\notin V$.\\<close>"], ["proof (state)\nthis:\n  learn_lim \\<phi> {g i} (\\<phi> i)\n\ngoal (2 subgoals):\n 1. learn_lim \\<phi> {g i} (\\<phi> i) \\<Longrightarrow> False\n 2. \\<not> learn_lim \\<phi> {g i} (\\<phi> i) \\<Longrightarrow> False", "let ?P = \"\\<lambda>n. \\<phi> (the (\\<phi> i ((g i) \\<triangleright>  n))) = g i\""], ["proof (state)\ngoal (2 subgoals):\n 1. learn_lim \\<phi> {g i} (\\<phi> i) \\<Longrightarrow> False\n 2. \\<not> learn_lim \\<phi> {g i} (\\<phi> i) \\<Longrightarrow> False", "let ?m = \"Least ?P\""], ["proof (state)\ngoal (2 subgoals):\n 1. learn_lim \\<phi> {g i} (\\<phi> i) \\<Longrightarrow> False\n 2. \\<not> learn_lim \\<phi> {g i} (\\<phi> i) \\<Longrightarrow> False", "have \"\\<exists>n. ?P n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n. \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i", "using i s"], ["proof (prove)\nusing this:\n  \\<phi> i = s\n  s \\<in> \\<P>\n  learn_cp \\<phi> V s\n\ngoal (1 subgoal):\n 1. \\<exists>n. \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i", "by (meson learn infinite_hyp_wrong_not_Lim insertI1 lessI)"], ["proof (state)\nthis:\n  \\<exists>n. \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i\n\ngoal (2 subgoals):\n 1. learn_lim \\<phi> {g i} (\\<phi> i) \\<Longrightarrow> False\n 2. \\<not> learn_lim \\<phi> {g i} (\\<phi> i) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>n. \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i", "have \"?P ?m\""], ["proof (prove)\nusing this:\n  \\<exists>n. \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i\n\ngoal (1 subgoal):\n 1. \\<phi>\n     (the (\\<phi> i\n            (g i \\<triangleright>\n             (LEAST n.\n                 \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) =\n                 g i)))) =\n    g i", "using LeastI_ex[of ?P]"], ["proof (prove)\nusing this:\n  \\<exists>n. \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i\n  \\<exists>x.\n     \\<phi> (the (\\<phi> i (g i \\<triangleright> x))) =\n     g i \\<Longrightarrow>\n  \\<phi>\n   (the (\\<phi> i\n          (g i \\<triangleright>\n           (LEAST n.\n               \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i)))) =\n  g i\n\ngoal (1 subgoal):\n 1. \\<phi>\n     (the (\\<phi> i\n            (g i \\<triangleright>\n             (LEAST n.\n                 \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) =\n                 g i)))) =\n    g i", "by simp"], ["proof (state)\nthis:\n  \\<phi>\n   (the (\\<phi> i\n          (g i \\<triangleright>\n           (LEAST n.\n               \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i)))) =\n  g i\n\ngoal (2 subgoals):\n 1. learn_lim \\<phi> {g i} (\\<phi> i) \\<Longrightarrow> False\n 2. \\<not> learn_lim \\<phi> {g i} (\\<phi> i) \\<Longrightarrow> False", "define h where \"h = (prefix (g i) ?m) @ [1] \\<odot> 0\\<^sup>\\<infinity>\""], ["proof (state)\nthis:\n  h =\n  prefix (g i)\n   (LEAST n. \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i) @\n  [1] \\<odot>\n  0\\<^sup>\\<infinity>\n\ngoal (2 subgoals):\n 1. learn_lim \\<phi> {g i} (\\<phi> i) \\<Longrightarrow> False\n 2. \\<not> learn_lim \\<phi> {g i} (\\<phi> i) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  h =\n  prefix (g i)\n   (LEAST n. \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i) @\n  [1] \\<odot>\n  0\\<^sup>\\<infinity>", "have \"h \\<in> V\""], ["proof (prove)\nusing this:\n  h =\n  prefix (g i)\n   (LEAST n. \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i) @\n  [1] \\<odot>\n  0\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. h \\<in> V", "using V_def learn"], ["proof (prove)\nusing this:\n  h =\n  prefix (g i)\n   (LEAST n. \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i) @\n  [1] \\<odot>\n  0\\<^sup>\\<infinity>\n  V \\<equiv>\n  {if learn_lim \\<phi> {g i} (\\<phi> i)\n   then prefix (g i)\n         (LEAST n. \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i) @\n        [1] \\<odot>\n        0\\<^sup>\\<infinity>\n   else g i |\n   i. i \\<in> UNIV}\n  learn_lim \\<phi> {g i} (\\<phi> i)\n\ngoal (1 subgoal):\n 1. h \\<in> V", "by auto"], ["proof (state)\nthis:\n  h \\<in> V\n\ngoal (2 subgoals):\n 1. learn_lim \\<phi> {g i} (\\<phi> i) \\<Longrightarrow> False\n 2. \\<not> learn_lim \\<phi> {g i} (\\<phi> i) \\<Longrightarrow> False", "have \"(g i) \\<triangleright>  ?m = h \\<triangleright>  ?m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g i \\<triangleright>\n    (LEAST n. \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i) =\n    h \\<triangleright>\n    (LEAST n. \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. g i \\<triangleright>\n    (LEAST n. \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i) =\n    h \\<triangleright>\n    (LEAST n. \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i)", "have \"prefix (g i) ?m = prefix h ?m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prefix (g i)\n     (LEAST n. \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i) =\n    prefix h\n     (LEAST n. \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i)", "unfolding h_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. prefix (g i)\n     (LEAST n. \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i) =\n    prefix\n     (prefix (g i)\n       (LEAST n. \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i) @\n      [1] \\<odot>\n      0\\<^sup>\\<infinity>)\n     (LEAST n. \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i)", "by (simp add: prefix_prepend_less)"], ["proof (state)\nthis:\n  prefix (g i)\n   (LEAST n. \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i) =\n  prefix h (LEAST n. \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i)\n\ngoal (1 subgoal):\n 1. g i \\<triangleright>\n    (LEAST n. \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i) =\n    h \\<triangleright>\n    (LEAST n. \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i)", "then"], ["proof (chain)\npicking this:\n  prefix (g i)\n   (LEAST n. \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i) =\n  prefix h (LEAST n. \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i)", "show ?thesis"], ["proof (prove)\nusing this:\n  prefix (g i)\n   (LEAST n. \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i) =\n  prefix h (LEAST n. \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i)\n\ngoal (1 subgoal):\n 1. g i \\<triangleright>\n    (LEAST n. \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i) =\n    h \\<triangleright>\n    (LEAST n. \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i)", "by auto"], ["proof (state)\nthis:\n  g i \\<triangleright>\n  (LEAST n. \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i) =\n  h \\<triangleright>\n  (LEAST n. \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  g i \\<triangleright>\n  (LEAST n. \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i) =\n  h \\<triangleright>\n  (LEAST n. \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i)\n\ngoal (2 subgoals):\n 1. learn_lim \\<phi> {g i} (\\<phi> i) \\<Longrightarrow> False\n 2. \\<not> learn_lim \\<phi> {g i} (\\<phi> i) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  g i \\<triangleright>\n  (LEAST n. \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i) =\n  h \\<triangleright>\n  (LEAST n. \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i)", "have \"\\<phi> (the (\\<phi> i (h \\<triangleright>  ?m))) = g i\""], ["proof (prove)\nusing this:\n  g i \\<triangleright>\n  (LEAST n. \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i) =\n  h \\<triangleright>\n  (LEAST n. \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i)\n\ngoal (1 subgoal):\n 1. \\<phi>\n     (the (\\<phi> i\n            (h \\<triangleright>\n             (LEAST n.\n                 \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) =\n                 g i)))) =\n    g i", "using \\<open>?P ?m\\<close>"], ["proof (prove)\nusing this:\n  g i \\<triangleright>\n  (LEAST n. \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i) =\n  h \\<triangleright>\n  (LEAST n. \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i)\n  \\<phi>\n   (the (\\<phi> i\n          (g i \\<triangleright>\n           (LEAST n.\n               \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i)))) =\n  g i\n\ngoal (1 subgoal):\n 1. \\<phi>\n     (the (\\<phi> i\n            (h \\<triangleright>\n             (LEAST n.\n                 \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) =\n                 g i)))) =\n    g i", "by simp"], ["proof (state)\nthis:\n  \\<phi>\n   (the (\\<phi> i\n          (h \\<triangleright>\n           (LEAST n.\n               \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i)))) =\n  g i\n\ngoal (2 subgoals):\n 1. learn_lim \\<phi> {g i} (\\<phi> i) \\<Longrightarrow> False\n 2. \\<not> learn_lim \\<phi> {g i} (\\<phi> i) \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  \\<phi>\n   (the (\\<phi> i\n          (h \\<triangleright>\n           (LEAST n.\n               \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i)))) =\n  g i\n\ngoal (2 subgoals):\n 1. learn_lim \\<phi> {g i} (\\<phi> i) \\<Longrightarrow> False\n 2. \\<not> learn_lim \\<phi> {g i} (\\<phi> i) \\<Longrightarrow> False", "have \"g i \\<notin> V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g i \\<notin> V", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. g i \\<in> V \\<Longrightarrow> False", "assume \"g i \\<in> V\""], ["proof (state)\nthis:\n  g i \\<in> V\n\ngoal (1 subgoal):\n 1. g i \\<in> V \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  g i \\<in> V", "obtain j where j: \"g i =\n          (if learn_lim \\<phi> {g j} (\\<phi> j)\n           then (prefix (g j) (LEAST n. \\<phi> (the (\\<phi> j ((g j) \\<triangleright>  n))) = g j)) @ [1] \\<odot> 0\\<^sup>\\<infinity>\n           else g j)\""], ["proof (prove)\nusing this:\n  g i \\<in> V\n\ngoal (1 subgoal):\n 1. (\\<And>j.\n        g i =\n        (if learn_lim \\<phi> {g j} (\\<phi> j)\n         then prefix (g j)\n               (LEAST n.\n                   \\<phi> (the (\\<phi> j (g j \\<triangleright> n))) = g j) @\n              [1] \\<odot>\n              0\\<^sup>\\<infinity>\n         else g j) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using V_def"], ["proof (prove)\nusing this:\n  g i \\<in> V\n  V \\<equiv>\n  {if learn_lim \\<phi> {g i} (\\<phi> i)\n   then prefix (g i)\n         (LEAST n. \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i) @\n        [1] \\<odot>\n        0\\<^sup>\\<infinity>\n   else g i |\n   i. i \\<in> UNIV}\n\ngoal (1 subgoal):\n 1. (\\<And>j.\n        g i =\n        (if learn_lim \\<phi> {g j} (\\<phi> j)\n         then prefix (g j)\n               (LEAST n.\n                   \\<phi> (the (\\<phi> j (g j \\<triangleright> n))) = g j) @\n              [1] \\<odot>\n              0\\<^sup>\\<infinity>\n         else g j) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  g i =\n  (if learn_lim \\<phi> {g j} (\\<phi> j)\n   then prefix (g j)\n         (LEAST n. \\<phi> (the (\\<phi> j (g j \\<triangleright> n))) = g j) @\n        [1] \\<odot>\n        0\\<^sup>\\<infinity>\n   else g j)\n\ngoal (1 subgoal):\n 1. g i \\<in> V \\<Longrightarrow> False", "show False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof (cases \"learn_lim \\<phi> {g j} (\\<phi> j)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. learn_lim \\<phi> {g j} (\\<phi> j) \\<Longrightarrow> False\n 2. \\<not> learn_lim \\<phi> {g j} (\\<phi> j) \\<Longrightarrow> False", "case True"], ["proof (state)\nthis:\n  learn_lim \\<phi> {g j} (\\<phi> j)\n\ngoal (2 subgoals):\n 1. learn_lim \\<phi> {g j} (\\<phi> j) \\<Longrightarrow> False\n 2. \\<not> learn_lim \\<phi> {g j} (\\<phi> j) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  learn_lim \\<phi> {g j} (\\<phi> j)", "have \"g i =\n              (prefix (g j) (LEAST n. \\<phi> (the (\\<phi> j ((g j) \\<triangleright>  n))) = g j)) @ [1] \\<odot> 0\\<^sup>\\<infinity>\"\n              (is \"g i = ?vs @ [1] \\<odot> 0\\<^sup>\\<infinity>\")"], ["proof (prove)\nusing this:\n  learn_lim \\<phi> {g j} (\\<phi> j)\n\ngoal (1 subgoal):\n 1. g i =\n    prefix (g j)\n     (LEAST n. \\<phi> (the (\\<phi> j (g j \\<triangleright> n))) = g j) @\n    [1] \\<odot>\n    0\\<^sup>\\<infinity>", "using j"], ["proof (prove)\nusing this:\n  learn_lim \\<phi> {g j} (\\<phi> j)\n  g i =\n  (if learn_lim \\<phi> {g j} (\\<phi> j)\n   then prefix (g j)\n         (LEAST n. \\<phi> (the (\\<phi> j (g j \\<triangleright> n))) = g j) @\n        [1] \\<odot>\n        0\\<^sup>\\<infinity>\n   else g j)\n\ngoal (1 subgoal):\n 1. g i =\n    prefix (g j)\n     (LEAST n. \\<phi> (the (\\<phi> j (g j \\<triangleright> n))) = g j) @\n    [1] \\<odot>\n    0\\<^sup>\\<infinity>", "by simp"], ["proof (state)\nthis:\n  g i =\n  prefix (g j)\n   (LEAST n. \\<phi> (the (\\<phi> j (g j \\<triangleright> n))) = g j) @\n  [1] \\<odot>\n  0\\<^sup>\\<infinity>\n\ngoal (2 subgoals):\n 1. learn_lim \\<phi> {g j} (\\<phi> j) \\<Longrightarrow> False\n 2. \\<not> learn_lim \\<phi> {g j} (\\<phi> j) \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  g i =\n  prefix (g j)\n   (LEAST n. \\<phi> (the (\\<phi> j (g j \\<triangleright> n))) = g j) @\n  [1] \\<odot>\n  0\\<^sup>\\<infinity>\n\ngoal (2 subgoals):\n 1. learn_lim \\<phi> {g j} (\\<phi> j) \\<Longrightarrow> False\n 2. \\<not> learn_lim \\<phi> {g j} (\\<phi> j) \\<Longrightarrow> False", "have len: \"length ?vs > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < length\n         (prefix (g j)\n           (LEAST n.\n               \\<phi> (the (\\<phi> j (g j \\<triangleright> n))) = g j))", "by simp"], ["proof (state)\nthis:\n  0 < length\n       (prefix (g j)\n         (LEAST n. \\<phi> (the (\\<phi> j (g j \\<triangleright> n))) = g j))\n\ngoal (2 subgoals):\n 1. learn_lim \\<phi> {g j} (\\<phi> j) \\<Longrightarrow> False\n 2. \\<not> learn_lim \\<phi> {g j} (\\<phi> j) \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  g i =\n  prefix (g j)\n   (LEAST n. \\<phi> (the (\\<phi> j (g j \\<triangleright> n))) = g j) @\n  [1] \\<odot>\n  0\\<^sup>\\<infinity>\n  0 < length\n       (prefix (g j)\n         (LEAST n. \\<phi> (the (\\<phi> j (g j \\<triangleright> n))) = g j))", "have \"g i (length ?vs) \\<down>= 1\""], ["proof (prove)\nusing this:\n  g i =\n  prefix (g j)\n   (LEAST n. \\<phi> (the (\\<phi> j (g j \\<triangleright> n))) = g j) @\n  [1] \\<odot>\n  0\\<^sup>\\<infinity>\n  0 < length\n       (prefix (g j)\n         (LEAST n. \\<phi> (the (\\<phi> j (g j \\<triangleright> n))) = g j))\n\ngoal (1 subgoal):\n 1. g i (length\n          (prefix (g j)\n            (LEAST n.\n                \\<phi> (the (\\<phi> j (g j \\<triangleright> n))) =\n                g j))) \\<down>=\n    1", "by (simp add: prepend_associative)"], ["proof (state)\nthis:\n  g i (length\n        (prefix (g j)\n          (LEAST n.\n              \\<phi> (the (\\<phi> j (g j \\<triangleright> n))) =\n              g j))) \\<down>=\n  1\n\ngoal (2 subgoals):\n 1. learn_lim \\<phi> {g j} (\\<phi> j) \\<Longrightarrow> False\n 2. \\<not> learn_lim \\<phi> {g j} (\\<phi> j) \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  g i (length\n        (prefix (g j)\n          (LEAST n.\n              \\<phi> (the (\\<phi> j (g j \\<triangleright> n))) =\n              g j))) \\<down>=\n  1\n\ngoal (2 subgoals):\n 1. learn_lim \\<phi> {g j} (\\<phi> j) \\<Longrightarrow> False\n 2. \\<not> learn_lim \\<phi> {g j} (\\<phi> j) \\<Longrightarrow> False", "have \"g i (length ?vs) \\<down>= 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g i (length\n          (prefix (g j)\n            (LEAST n.\n                \\<phi> (the (\\<phi> j (g j \\<triangleright> n))) =\n                g j))) \\<down>=\n    0", "using g_def len"], ["proof (prove)\nusing this:\n  g \\<equiv> \\<lambda>i. [i] \\<odot> 0\\<^sup>\\<infinity>\n  0 < length\n       (prefix (g j)\n         (LEAST n. \\<phi> (the (\\<phi> j (g j \\<triangleright> n))) = g j))\n\ngoal (1 subgoal):\n 1. g i (length\n          (prefix (g j)\n            (LEAST n.\n                \\<phi> (the (\\<phi> j (g j \\<triangleright> n))) =\n                g j))) \\<down>=\n    0", "by simp"], ["proof (state)\nthis:\n  g i (length\n        (prefix (g j)\n          (LEAST n.\n              \\<phi> (the (\\<phi> j (g j \\<triangleright> n))) =\n              g j))) \\<down>=\n  0\n\ngoal (2 subgoals):\n 1. learn_lim \\<phi> {g j} (\\<phi> j) \\<Longrightarrow> False\n 2. \\<not> learn_lim \\<phi> {g j} (\\<phi> j) \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  g i (length\n        (prefix (g j)\n          (LEAST n.\n              \\<phi> (the (\\<phi> j (g j \\<triangleright> n))) =\n              g j))) \\<down>=\n  1\n  g i (length\n        (prefix (g j)\n          (LEAST n.\n              \\<phi> (the (\\<phi> j (g j \\<triangleright> n))) =\n              g j))) \\<down>=\n  0", "show ?thesis"], ["proof (prove)\nusing this:\n  g i (length\n        (prefix (g j)\n          (LEAST n.\n              \\<phi> (the (\\<phi> j (g j \\<triangleright> n))) =\n              g j))) \\<down>=\n  1\n  g i (length\n        (prefix (g j)\n          (LEAST n.\n              \\<phi> (the (\\<phi> j (g j \\<triangleright> n))) =\n              g j))) \\<down>=\n  0\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> learn_lim \\<phi> {g j} (\\<phi> j) \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> learn_lim \\<phi> {g j} (\\<phi> j) \\<Longrightarrow> False", "case False"], ["proof (state)\nthis:\n  \\<not> learn_lim \\<phi> {g j} (\\<phi> j)\n\ngoal (1 subgoal):\n 1. \\<not> learn_lim \\<phi> {g j} (\\<phi> j) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> learn_lim \\<phi> {g j} (\\<phi> j)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> learn_lim \\<phi> {g j} (\\<phi> j)\n\ngoal (1 subgoal):\n 1. False", "using j g_inj learn"], ["proof (prove)\nusing this:\n  \\<not> learn_lim \\<phi> {g j} (\\<phi> j)\n  g i =\n  (if learn_lim \\<phi> {g j} (\\<phi> j)\n   then prefix (g j)\n         (LEAST n. \\<phi> (the (\\<phi> j (g j \\<triangleright> n))) = g j) @\n        [1] \\<odot>\n        0\\<^sup>\\<infinity>\n   else g j)\n  g ?i = g ?j \\<Longrightarrow> ?i = ?j\n  learn_lim \\<phi> {g i} (\\<phi> i)\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  g i \\<notin> V\n\ngoal (2 subgoals):\n 1. learn_lim \\<phi> {g i} (\\<phi> i) \\<Longrightarrow> False\n 2. \\<not> learn_lim \\<phi> {g i} (\\<phi> i) \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  \\<phi>\n   (the (\\<phi> i\n          (h \\<triangleright>\n           (LEAST n.\n               \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i)))) =\n  g i\n  g i \\<notin> V", "have \"\\<phi> (the (\\<phi> i (h \\<triangleright>  ?m))) \\<notin> V\""], ["proof (prove)\nusing this:\n  \\<phi>\n   (the (\\<phi> i\n          (h \\<triangleright>\n           (LEAST n.\n               \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i)))) =\n  g i\n  g i \\<notin> V\n\ngoal (1 subgoal):\n 1. \\<phi>\n     (the (\\<phi> i\n            (h \\<triangleright>\n             (LEAST n.\n                 \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i))))\n    \\<notin> V", "by simp"], ["proof (state)\nthis:\n  \\<phi>\n   (the (\\<phi> i\n          (h \\<triangleright>\n           (LEAST n.\n               \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i))))\n  \\<notin> V\n\ngoal (2 subgoals):\n 1. learn_lim \\<phi> {g i} (\\<phi> i) \\<Longrightarrow> False\n 2. \\<not> learn_lim \\<phi> {g i} (\\<phi> i) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<phi>\n   (the (\\<phi> i\n          (h \\<triangleright>\n           (LEAST n.\n               \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i))))\n  \\<notin> V", "have \"\\<not> learn_cp \\<phi> V (\\<phi> i)\""], ["proof (prove)\nusing this:\n  \\<phi>\n   (the (\\<phi> i\n          (h \\<triangleright>\n           (LEAST n.\n               \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i))))\n  \\<notin> V\n\ngoal (1 subgoal):\n 1. \\<not> learn_cp \\<phi> V (\\<phi> i)", "using \\<open>h \\<in> V\\<close> learn_cpE(3)"], ["proof (prove)\nusing this:\n  \\<phi>\n   (the (\\<phi> i\n          (h \\<triangleright>\n           (LEAST n.\n               \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i))))\n  \\<notin> V\n  h \\<in> V\n  \\<lbrakk>learn_cp ?\\<psi> ?U ?s; ?f \\<in> ?U\\<rbrakk>\n  \\<Longrightarrow> ?\\<psi> (the (?s (?f \\<triangleright> ?n))) \\<in> ?U\n\ngoal (1 subgoal):\n 1. \\<not> learn_cp \\<phi> V (\\<phi> i)", "by auto"], ["proof (state)\nthis:\n  \\<not> learn_cp \\<phi> V (\\<phi> i)\n\ngoal (2 subgoals):\n 1. learn_lim \\<phi> {g i} (\\<phi> i) \\<Longrightarrow> False\n 2. \\<not> learn_lim \\<phi> {g i} (\\<phi> i) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> learn_cp \\<phi> V (\\<phi> i)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> learn_cp \\<phi> V (\\<phi> i)\n\ngoal (1 subgoal):\n 1. False", "by (simp add: i s(2))"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> learn_lim \\<phi> {g i} (\\<phi> i) \\<Longrightarrow> False", "next\n      \\<comment> \\<open>If $\\varphi_i$ does not learn $g_i$, then $g_i\\in V$.\n      Hence $\\varphi_i$ does not learn $V$.\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> learn_lim \\<phi> {g i} (\\<phi> i) \\<Longrightarrow> False", "case False"], ["proof (state)\nthis:\n  \\<not> learn_lim \\<phi> {g i} (\\<phi> i)\n\ngoal (1 subgoal):\n 1. \\<not> learn_lim \\<phi> {g i} (\\<phi> i) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> learn_lim \\<phi> {g i} (\\<phi> i)", "have \"g i \\<in> V\""], ["proof (prove)\nusing this:\n  \\<not> learn_lim \\<phi> {g i} (\\<phi> i)\n\ngoal (1 subgoal):\n 1. g i \\<in> V", "using V_def"], ["proof (prove)\nusing this:\n  \\<not> learn_lim \\<phi> {g i} (\\<phi> i)\n  V \\<equiv>\n  {if learn_lim \\<phi> {g i} (\\<phi> i)\n   then prefix (g i)\n         (LEAST n. \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i) @\n        [1] \\<odot>\n        0\\<^sup>\\<infinity>\n   else g i |\n   i. i \\<in> UNIV}\n\ngoal (1 subgoal):\n 1. g i \\<in> V", "by auto"], ["proof (state)\nthis:\n  g i \\<in> V\n\ngoal (1 subgoal):\n 1. \\<not> learn_lim \\<phi> {g i} (\\<phi> i) \\<Longrightarrow> False", "with False"], ["proof (chain)\npicking this:\n  \\<not> learn_lim \\<phi> {g i} (\\<phi> i)\n  g i \\<in> V", "have \"\\<not> learn_lim \\<phi> V (\\<phi> i)\""], ["proof (prove)\nusing this:\n  \\<not> learn_lim \\<phi> {g i} (\\<phi> i)\n  g i \\<in> V\n\ngoal (1 subgoal):\n 1. \\<not> learn_lim \\<phi> V (\\<phi> i)", "using learn_lim_closed_subseteq"], ["proof (prove)\nusing this:\n  \\<not> learn_lim \\<phi> {g i} (\\<phi> i)\n  g i \\<in> V\n  \\<lbrakk>learn_lim ?\\<psi> ?U ?s; ?V \\<subseteq> ?U\\<rbrakk>\n  \\<Longrightarrow> learn_lim ?\\<psi> ?V ?s\n\ngoal (1 subgoal):\n 1. \\<not> learn_lim \\<phi> V (\\<phi> i)", "by auto"], ["proof (state)\nthis:\n  \\<not> learn_lim \\<phi> V (\\<phi> i)\n\ngoal (1 subgoal):\n 1. \\<not> learn_lim \\<phi> {g i} (\\<phi> i) \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> learn_lim \\<phi> V (\\<phi> i)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> learn_lim \\<phi> V (\\<phi> i)\n\ngoal (1 subgoal):\n 1. False", "using s(2) i"], ["proof (prove)\nusing this:\n  \\<not> learn_lim \\<phi> V (\\<phi> i)\n  learn_cp \\<phi> V s\n  \\<phi> i = s\n\ngoal (1 subgoal):\n 1. False", "by (simp add: learn_cp_def)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  V \\<notin> CP_wrt \\<phi>\n\ngoal (1 subgoal):\n 1. \\<exists>V U. V \\<subseteq> U \\<and> U \\<in> CP \\<and> V \\<notin> CP", "then"], ["proof (chain)\npicking this:\n  V \\<notin> CP_wrt \\<phi>", "have \"V \\<notin> CP\""], ["proof (prove)\nusing this:\n  V \\<notin> CP_wrt \\<phi>\n\ngoal (1 subgoal):\n 1. V \\<notin> CP", "using CP_wrt_phi"], ["proof (prove)\nusing this:\n  V \\<notin> CP_wrt \\<phi>\n  CP = CP_wrt \\<phi>\n\ngoal (1 subgoal):\n 1. V \\<notin> CP", "by simp"], ["proof (state)\nthis:\n  V \\<notin> CP\n\ngoal (1 subgoal):\n 1. \\<exists>V U. V \\<subseteq> U \\<and> U \\<in> CP \\<and> V \\<notin> CP", "moreover"], ["proof (state)\nthis:\n  V \\<notin> CP\n\ngoal (1 subgoal):\n 1. \\<exists>V U. V \\<subseteq> U \\<and> U \\<in> CP \\<and> V \\<notin> CP", "have \"V \\<subseteq> U\\<^sub>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. V \\<subseteq> U\\<^sub>0", "using V_def g_def U0_def"], ["proof (prove)\nusing this:\n  V \\<equiv>\n  {if learn_lim \\<phi> {g i} (\\<phi> i)\n   then prefix (g i)\n         (LEAST n. \\<phi> (the (\\<phi> i (g i \\<triangleright> n))) = g i) @\n        [1] \\<odot>\n        0\\<^sup>\\<infinity>\n   else g i |\n   i. i \\<in> UNIV}\n  g \\<equiv> \\<lambda>i. [i] \\<odot> 0\\<^sup>\\<infinity>\n  U\\<^sub>0 \\<equiv> {vs \\<odot> 0\\<^sup>\\<infinity> |vs. vs \\<in> UNIV}\n\ngoal (1 subgoal):\n 1. V \\<subseteq> U\\<^sub>0", "by auto"], ["proof (state)\nthis:\n  V \\<subseteq> U\\<^sub>0\n\ngoal (1 subgoal):\n 1. \\<exists>V U. V \\<subseteq> U \\<and> U \\<in> CP \\<and> V \\<notin> CP", "ultimately"], ["proof (chain)\npicking this:\n  V \\<notin> CP\n  V \\<subseteq> U\\<^sub>0", "show ?thesis"], ["proof (prove)\nusing this:\n  V \\<notin> CP\n  V \\<subseteq> U\\<^sub>0\n\ngoal (1 subgoal):\n 1. \\<exists>V U. V \\<subseteq> U \\<and> U \\<in> CP \\<and> V \\<notin> CP", "using U0_in_CP"], ["proof (prove)\nusing this:\n  V \\<notin> CP\n  V \\<subseteq> U\\<^sub>0\n  U\\<^sub>0 \\<in> CP\n\ngoal (1 subgoal):\n 1. \\<exists>V U. V \\<subseteq> U \\<and> U \\<in> CP \\<and> V \\<notin> CP", "by auto"], ["proof (state)\nthis:\n  \\<exists>V U. V \\<subseteq> U \\<and> U \\<in> CP \\<and> V \\<notin> CP\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Continuing with the main result of this section, we show that\n@{term \"U\\<^sub>0\"} cannot be learned finitely. Any FIN strategy would have\nto output a hypothesis for the constant zero function on some prefix. But\n@{term \"U\\<^sub>0\"} contains infinitely many other functions starting with\nthe same prefix, which the strategy then would not learn finitely.\\<close>"], ["", "lemma U0_not_in_FIN: \"U\\<^sub>0 \\<notin> FIN\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U\\<^sub>0 \\<notin> FIN", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. U\\<^sub>0 \\<in> FIN \\<Longrightarrow> False", "assume \"U\\<^sub>0 \\<in> FIN\""], ["proof (state)\nthis:\n  U\\<^sub>0 \\<in> FIN\n\ngoal (1 subgoal):\n 1. U\\<^sub>0 \\<in> FIN \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  U\\<^sub>0 \\<in> FIN", "obtain \\<psi> s where \"learn_fin \\<psi> U\\<^sub>0 s\""], ["proof (prove)\nusing this:\n  U\\<^sub>0 \\<in> FIN\n\ngoal (1 subgoal):\n 1. (\\<And>\\<psi> s.\n        learn_fin \\<psi> U\\<^sub>0 s \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using FIN_def"], ["proof (prove)\nusing this:\n  U\\<^sub>0 \\<in> FIN\n  FIN \\<equiv> {U. \\<exists>\\<psi> s. learn_fin \\<psi> U s}\n\ngoal (1 subgoal):\n 1. (\\<And>\\<psi> s.\n        learn_fin \\<psi> U\\<^sub>0 s \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  learn_fin \\<psi> U\\<^sub>0 s\n\ngoal (1 subgoal):\n 1. U\\<^sub>0 \\<in> FIN \\<Longrightarrow> False", "with learn_finE"], ["proof (chain)\npicking this:\n  learn_fin ?\\<psi> ?U ?s \\<Longrightarrow> environment ?\\<psi> ?U ?s\n  \\<lbrakk>learn_fin ?\\<psi> ?U ?s; ?f \\<in> ?U\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i n\\<^sub>0.\n                       ?\\<psi> i = ?f \\<and>\n                       (\\<forall>n<n\\<^sub>0.\n                           ?s (?f \\<triangleright> n) \\<down>= 0) \\<and>\n                       (\\<forall>n\\<ge>n\\<^sub>0.\n                           ?s (?f \\<triangleright> n) \\<down>= Suc i)\n  learn_fin \\<psi> U\\<^sub>0 s", "have cp: \"\\<And>f. f \\<in> U\\<^sub>0 \\<Longrightarrow>\n      \\<exists>i n\\<^sub>0. \\<psi> i = f \\<and> (\\<forall>n<n\\<^sub>0. s (f \\<triangleright> n) \\<down>= 0) \\<and> (\\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= Suc i)\""], ["proof (prove)\nusing this:\n  learn_fin ?\\<psi> ?U ?s \\<Longrightarrow> environment ?\\<psi> ?U ?s\n  \\<lbrakk>learn_fin ?\\<psi> ?U ?s; ?f \\<in> ?U\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i n\\<^sub>0.\n                       ?\\<psi> i = ?f \\<and>\n                       (\\<forall>n<n\\<^sub>0.\n                           ?s (?f \\<triangleright> n) \\<down>= 0) \\<and>\n                       (\\<forall>n\\<ge>n\\<^sub>0.\n                           ?s (?f \\<triangleright> n) \\<down>= Suc i)\n  learn_fin \\<psi> U\\<^sub>0 s\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> U\\<^sub>0 \\<Longrightarrow>\n       \\<exists>i n\\<^sub>0.\n          \\<psi> i = f \\<and>\n          (\\<forall>n<n\\<^sub>0. s (f \\<triangleright> n) \\<down>= 0) \\<and>\n          (\\<forall>n\\<ge>n\\<^sub>0.\n              s (f \\<triangleright> n) \\<down>= Suc i)", "by simp_all"], ["proof (state)\nthis:\n  ?f \\<in> U\\<^sub>0 \\<Longrightarrow>\n  \\<exists>i n\\<^sub>0.\n     \\<psi> i = ?f \\<and>\n     (\\<forall>n<n\\<^sub>0. s (?f \\<triangleright> n) \\<down>= 0) \\<and>\n     (\\<forall>n\\<ge>n\\<^sub>0. s (?f \\<triangleright> n) \\<down>= Suc i)\n\ngoal (1 subgoal):\n 1. U\\<^sub>0 \\<in> FIN \\<Longrightarrow> False", "define z where \"z = [] \\<odot> 0\\<^sup>\\<infinity>\""], ["proof (state)\nthis:\n  z = [] \\<odot> 0\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. U\\<^sub>0 \\<in> FIN \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  z = [] \\<odot> 0\\<^sup>\\<infinity>", "have \"z \\<in> U\\<^sub>0\""], ["proof (prove)\nusing this:\n  z = [] \\<odot> 0\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. z \\<in> U\\<^sub>0", "using U0_def"], ["proof (prove)\nusing this:\n  z = [] \\<odot> 0\\<^sup>\\<infinity>\n  U\\<^sub>0 \\<equiv> {vs \\<odot> 0\\<^sup>\\<infinity> |vs. vs \\<in> UNIV}\n\ngoal (1 subgoal):\n 1. z \\<in> U\\<^sub>0", "by auto"], ["proof (state)\nthis:\n  z \\<in> U\\<^sub>0\n\ngoal (1 subgoal):\n 1. U\\<^sub>0 \\<in> FIN \\<Longrightarrow> False", "with cp"], ["proof (chain)\npicking this:\n  ?f \\<in> U\\<^sub>0 \\<Longrightarrow>\n  \\<exists>i n\\<^sub>0.\n     \\<psi> i = ?f \\<and>\n     (\\<forall>n<n\\<^sub>0. s (?f \\<triangleright> n) \\<down>= 0) \\<and>\n     (\\<forall>n\\<ge>n\\<^sub>0. s (?f \\<triangleright> n) \\<down>= Suc i)\n  z \\<in> U\\<^sub>0", "obtain i n\\<^sub>0 where i: \"\\<psi> i = z\" and n0: \"\\<forall>n\\<ge>n\\<^sub>0. s (z \\<triangleright> n) \\<down>= Suc i\""], ["proof (prove)\nusing this:\n  ?f \\<in> U\\<^sub>0 \\<Longrightarrow>\n  \\<exists>i n\\<^sub>0.\n     \\<psi> i = ?f \\<and>\n     (\\<forall>n<n\\<^sub>0. s (?f \\<triangleright> n) \\<down>= 0) \\<and>\n     (\\<forall>n\\<ge>n\\<^sub>0. s (?f \\<triangleright> n) \\<down>= Suc i)\n  z \\<in> U\\<^sub>0\n\ngoal (1 subgoal):\n 1. (\\<And>i n\\<^sub>0.\n        \\<lbrakk>\\<psi> i = z;\n         \\<forall>n\\<ge>n\\<^sub>0.\n            s (z \\<triangleright> n) \\<down>= Suc i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<psi> i = z\n  \\<forall>n\\<ge>n\\<^sub>0. s (z \\<triangleright> n) \\<down>= Suc i\n\ngoal (1 subgoal):\n 1. U\\<^sub>0 \\<in> FIN \\<Longrightarrow> False", "define w where \"w = replicate (Suc n\\<^sub>0) 0 @ [1] \\<odot> 0\\<^sup>\\<infinity>\""], ["proof (state)\nthis:\n  w = replicate (Suc n\\<^sub>0) 0 @ [1] \\<odot> 0\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. U\\<^sub>0 \\<in> FIN \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  w = replicate (Suc n\\<^sub>0) 0 @ [1] \\<odot> 0\\<^sup>\\<infinity>", "have \"prefix w n\\<^sub>0 = replicate (Suc n\\<^sub>0) 0\""], ["proof (prove)\nusing this:\n  w = replicate (Suc n\\<^sub>0) 0 @ [1] \\<odot> 0\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. prefix w n\\<^sub>0 = replicate (Suc n\\<^sub>0) 0", "by (simp add: prefix_prepend_less)"], ["proof (state)\nthis:\n  prefix w n\\<^sub>0 = replicate (Suc n\\<^sub>0) 0\n\ngoal (1 subgoal):\n 1. U\\<^sub>0 \\<in> FIN \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  prefix w n\\<^sub>0 = replicate (Suc n\\<^sub>0) 0\n\ngoal (1 subgoal):\n 1. U\\<^sub>0 \\<in> FIN \\<Longrightarrow> False", "have \"prefix z n\\<^sub>0 = replicate (Suc n\\<^sub>0) 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prefix z n\\<^sub>0 = replicate (Suc n\\<^sub>0) 0", "using prefixI[of \"replicate (Suc n\\<^sub>0) 0\" z] less_Suc_eq_0_disj"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < length (replicate (Suc n\\<^sub>0) 0);\n   \\<And>x.\n      x < length (replicate (Suc n\\<^sub>0) 0) \\<Longrightarrow>\n      z x \\<down>= replicate (Suc n\\<^sub>0) 0 ! x\\<rbrakk>\n  \\<Longrightarrow> prefix z (length (replicate (Suc n\\<^sub>0) 0) - 1) =\n                    replicate (Suc n\\<^sub>0) 0\n  (?m < Suc ?n) = (?m = 0 \\<or> (\\<exists>j. ?m = Suc j \\<and> j < ?n))\n\ngoal (1 subgoal):\n 1. prefix z n\\<^sub>0 = replicate (Suc n\\<^sub>0) 0", "unfolding z_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < length (replicate (Suc n\\<^sub>0) 0);\n   \\<And>x.\n      x < length (replicate (Suc n\\<^sub>0) 0) \\<Longrightarrow>\n      ([] \\<odot> 0\\<^sup>\\<infinity>) x \\<down>=\n      replicate (Suc n\\<^sub>0) 0 ! x\\<rbrakk>\n  \\<Longrightarrow> prefix ([] \\<odot> 0\\<^sup>\\<infinity>)\n                     (length (replicate (Suc n\\<^sub>0) 0) - 1) =\n                    replicate (Suc n\\<^sub>0) 0\n  (?m < Suc ?n) = (?m = 0 \\<or> (\\<exists>j. ?m = Suc j \\<and> j < ?n))\n\ngoal (1 subgoal):\n 1. prefix ([] \\<odot> 0\\<^sup>\\<infinity>) n\\<^sub>0 =\n    replicate (Suc n\\<^sub>0) 0", "by fastforce"], ["proof (state)\nthis:\n  prefix z n\\<^sub>0 = replicate (Suc n\\<^sub>0) 0\n\ngoal (1 subgoal):\n 1. U\\<^sub>0 \\<in> FIN \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  prefix w n\\<^sub>0 = replicate (Suc n\\<^sub>0) 0\n  prefix z n\\<^sub>0 = replicate (Suc n\\<^sub>0) 0", "have \"z \\<triangleright>  n\\<^sub>0 = w \\<triangleright> n\\<^sub>0\""], ["proof (prove)\nusing this:\n  prefix w n\\<^sub>0 = replicate (Suc n\\<^sub>0) 0\n  prefix z n\\<^sub>0 = replicate (Suc n\\<^sub>0) 0\n\ngoal (1 subgoal):\n 1. z \\<triangleright> n\\<^sub>0 = w \\<triangleright> n\\<^sub>0", "by (simp add: init_prefixE)"], ["proof (state)\nthis:\n  z \\<triangleright> n\\<^sub>0 = w \\<triangleright> n\\<^sub>0\n\ngoal (1 subgoal):\n 1. U\\<^sub>0 \\<in> FIN \\<Longrightarrow> False", "with n0"], ["proof (chain)\npicking this:\n  \\<forall>n\\<ge>n\\<^sub>0. s (z \\<triangleright> n) \\<down>= Suc i\n  z \\<triangleright> n\\<^sub>0 = w \\<triangleright> n\\<^sub>0", "have *: \"s (w \\<triangleright> n\\<^sub>0) \\<down>= Suc i\""], ["proof (prove)\nusing this:\n  \\<forall>n\\<ge>n\\<^sub>0. s (z \\<triangleright> n) \\<down>= Suc i\n  z \\<triangleright> n\\<^sub>0 = w \\<triangleright> n\\<^sub>0\n\ngoal (1 subgoal):\n 1. s (w \\<triangleright> n\\<^sub>0) \\<down>= Suc i", "by auto"], ["proof (state)\nthis:\n  s (w \\<triangleright> n\\<^sub>0) \\<down>= Suc i\n\ngoal (1 subgoal):\n 1. U\\<^sub>0 \\<in> FIN \\<Longrightarrow> False", "have \"w \\<in> U\\<^sub>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w \\<in> U\\<^sub>0", "using w_def U0_def"], ["proof (prove)\nusing this:\n  w = replicate (Suc n\\<^sub>0) 0 @ [1] \\<odot> 0\\<^sup>\\<infinity>\n  U\\<^sub>0 \\<equiv> {vs \\<odot> 0\\<^sup>\\<infinity> |vs. vs \\<in> UNIV}\n\ngoal (1 subgoal):\n 1. w \\<in> U\\<^sub>0", "by auto"], ["proof (state)\nthis:\n  w \\<in> U\\<^sub>0\n\ngoal (1 subgoal):\n 1. U\\<^sub>0 \\<in> FIN \\<Longrightarrow> False", "with cp"], ["proof (chain)\npicking this:\n  ?f \\<in> U\\<^sub>0 \\<Longrightarrow>\n  \\<exists>i n\\<^sub>0.\n     \\<psi> i = ?f \\<and>\n     (\\<forall>n<n\\<^sub>0. s (?f \\<triangleright> n) \\<down>= 0) \\<and>\n     (\\<forall>n\\<ge>n\\<^sub>0. s (?f \\<triangleright> n) \\<down>= Suc i)\n  w \\<in> U\\<^sub>0", "obtain i' n\\<^sub>0' where i': \"\\<psi> i' = w\"\n    and n0': \"\\<forall>n<n\\<^sub>0'. s (w \\<triangleright> n) \\<down>= 0\" \"\\<forall>n\\<ge>n\\<^sub>0'. s (w \\<triangleright> n) \\<down>= Suc i'\""], ["proof (prove)\nusing this:\n  ?f \\<in> U\\<^sub>0 \\<Longrightarrow>\n  \\<exists>i n\\<^sub>0.\n     \\<psi> i = ?f \\<and>\n     (\\<forall>n<n\\<^sub>0. s (?f \\<triangleright> n) \\<down>= 0) \\<and>\n     (\\<forall>n\\<ge>n\\<^sub>0. s (?f \\<triangleright> n) \\<down>= Suc i)\n  w \\<in> U\\<^sub>0\n\ngoal (1 subgoal):\n 1. (\\<And>i' n\\<^sub>0'.\n        \\<lbrakk>\\<psi> i' = w;\n         \\<forall>n<n\\<^sub>0'. s (w \\<triangleright> n) \\<down>= 0;\n         \\<forall>n\\<ge>n\\<^sub>0'.\n            s (w \\<triangleright> n) \\<down>= Suc i'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<psi> i' = w\n  \\<forall>n<n\\<^sub>0'. s (w \\<triangleright> n) \\<down>= 0\n  \\<forall>n\\<ge>n\\<^sub>0'. s (w \\<triangleright> n) \\<down>= Suc i'\n\ngoal (1 subgoal):\n 1. U\\<^sub>0 \\<in> FIN \\<Longrightarrow> False", "have \"i \\<noteq> i'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<noteq> i'", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. i = i' \\<Longrightarrow> False", "assume \"i = i'\""], ["proof (state)\nthis:\n  i = i'\n\ngoal (1 subgoal):\n 1. i = i' \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  i = i'", "have \"w = z\""], ["proof (prove)\nusing this:\n  i = i'\n\ngoal (1 subgoal):\n 1. w = z", "using i i'"], ["proof (prove)\nusing this:\n  i = i'\n  \\<psi> i = z\n  \\<psi> i' = w\n\ngoal (1 subgoal):\n 1. w = z", "by simp"], ["proof (state)\nthis:\n  w = z\n\ngoal (1 subgoal):\n 1. i = i' \\<Longrightarrow> False", "have \"w (Suc n\\<^sub>0) \\<down>= 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w (Suc n\\<^sub>0) \\<down>= 1", "using w_def prepend[of \"replicate (Suc n\\<^sub>0) 0 @ [1]\" \"0\\<^sup>\\<infinity>\" \"Suc n\\<^sub>0\"]"], ["proof (prove)\nusing this:\n  w = replicate (Suc n\\<^sub>0) 0 @ [1] \\<odot> 0\\<^sup>\\<infinity>\n  (replicate (Suc n\\<^sub>0) 0 @ [1] \\<odot> 0\\<^sup>\\<infinity>)\n   (Suc n\\<^sub>0) =\n  (if Suc n\\<^sub>0 < length (replicate (Suc n\\<^sub>0) 0 @ [1])\n   then Some ((replicate (Suc n\\<^sub>0) 0 @ [1]) ! Suc n\\<^sub>0)\n   else Some 0)\n\ngoal (1 subgoal):\n 1. w (Suc n\\<^sub>0) \\<down>= 1", "by (metis length_append_singleton length_replicate lessI nth_append_length)"], ["proof (state)\nthis:\n  w (Suc n\\<^sub>0) \\<down>= 1\n\ngoal (1 subgoal):\n 1. i = i' \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  w (Suc n\\<^sub>0) \\<down>= 1\n\ngoal (1 subgoal):\n 1. i = i' \\<Longrightarrow> False", "have \"z (Suc n\\<^sub>0) \\<down>= 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z (Suc n\\<^sub>0) \\<down>= 0", "using z_def"], ["proof (prove)\nusing this:\n  z = [] \\<odot> 0\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. z (Suc n\\<^sub>0) \\<down>= 0", "by simp"], ["proof (state)\nthis:\n  z (Suc n\\<^sub>0) \\<down>= 0\n\ngoal (1 subgoal):\n 1. i = i' \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  w (Suc n\\<^sub>0) \\<down>= 1\n  z (Suc n\\<^sub>0) \\<down>= 0", "show False"], ["proof (prove)\nusing this:\n  w (Suc n\\<^sub>0) \\<down>= 1\n  z (Suc n\\<^sub>0) \\<down>= 0\n\ngoal (1 subgoal):\n 1. False", "using \\<open>w = z\\<close>"], ["proof (prove)\nusing this:\n  w (Suc n\\<^sub>0) \\<down>= 1\n  z (Suc n\\<^sub>0) \\<down>= 0\n  w = z\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  i \\<noteq> i'\n\ngoal (1 subgoal):\n 1. U\\<^sub>0 \\<in> FIN \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  i \\<noteq> i'", "have \"s (w \\<triangleright> n\\<^sub>0) \\<down>\\<noteq> Suc i\""], ["proof (prove)\nusing this:\n  i \\<noteq> i'\n\ngoal (1 subgoal):\n 1. s (w \\<triangleright> n\\<^sub>0) \\<down>\\<noteq> Suc i", "using n0'"], ["proof (prove)\nusing this:\n  i \\<noteq> i'\n  \\<forall>n<n\\<^sub>0'. s (w \\<triangleright> n) \\<down>= 0\n  \\<forall>n\\<ge>n\\<^sub>0'. s (w \\<triangleright> n) \\<down>= Suc i'\n\ngoal (1 subgoal):\n 1. s (w \\<triangleright> n\\<^sub>0) \\<down>\\<noteq> Suc i", "by (cases \"n\\<^sub>0 < n\\<^sub>0'\") simp_all"], ["proof (state)\nthis:\n  s (w \\<triangleright> n\\<^sub>0) \\<down>\\<noteq> Suc i\n\ngoal (1 subgoal):\n 1. U\\<^sub>0 \\<in> FIN \\<Longrightarrow> False", "with *"], ["proof (chain)\npicking this:\n  s (w \\<triangleright> n\\<^sub>0) \\<down>= Suc i\n  s (w \\<triangleright> n\\<^sub>0) \\<down>\\<noteq> Suc i", "show False"], ["proof (prove)\nusing this:\n  s (w \\<triangleright> n\\<^sub>0) \\<down>= Suc i\n  s (w \\<triangleright> n\\<^sub>0) \\<down>\\<noteq> Suc i\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem FIN_subset_CP: \"FIN \\<subset> CP\""], ["proof (prove)\ngoal (1 subgoal):\n 1. FIN \\<subset> CP", "using U0_in_CP U0_not_in_FIN FIN_subseteq_CP"], ["proof (prove)\nusing this:\n  U\\<^sub>0 \\<in> CP\n  U\\<^sub>0 \\<notin> FIN\n  FIN \\<subseteq> CP\n\ngoal (1 subgoal):\n 1. FIN \\<subset> CP", "by auto"], ["", "section \\<open>NUM and FIN are incomparable\\label{s:num_fin}\\<close>"], ["", "text \\<open>The class $V_0$ of all total recursive functions $f$ where $f(0)$\nis a G?del number of $f$ can be learned finitely by always hypothesizing\n$f(0)$. The class is not in NUM and therefore serves to separate NUM and\nFIN.\\<close>"], ["", "definition V0 :: \"partial1 set\" (\"V\\<^sub>0\") where\n  \"V\\<^sub>0 = {f. f \\<in> \\<R> \\<and> \\<phi> (the (f 0)) = f}\""], ["", "lemma V0_altdef: \"V\\<^sub>0 = {[i] \\<odot> f| i f. f \\<in> \\<R> \\<and> \\<phi> i = [i] \\<odot> f}\"\n  (is \"V\\<^sub>0 = ?W\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. V\\<^sub>0 =\n    {[i] \\<odot> f |i f. f \\<in> \\<R> \\<and> \\<phi> i = [i] \\<odot> f}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. V\\<^sub>0\n    \\<subseteq> {[i] \\<odot> f |i f.\n                 f \\<in> \\<R> \\<and> \\<phi> i = [i] \\<odot> f}\n 2. {[i] \\<odot> f |i f. f \\<in> \\<R> \\<and> \\<phi> i = [i] \\<odot> f}\n    \\<subseteq> V\\<^sub>0", "show \"V\\<^sub>0 \\<subseteq> ?W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. V\\<^sub>0\n    \\<subseteq> {[i] \\<odot> f |i f.\n                 f \\<in> \\<R> \\<and> \\<phi> i = [i] \\<odot> f}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> V\\<^sub>0 \\<Longrightarrow>\n       x \\<in> {[i] \\<odot> f |i f.\n                f \\<in> \\<R> \\<and> \\<phi> i = [i] \\<odot> f}", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> V\\<^sub>0 \\<Longrightarrow>\n       x \\<in> {[i] \\<odot> f |i f.\n                f \\<in> \\<R> \\<and> \\<phi> i = [i] \\<odot> f}", "assume \"f \\<in> V\\<^sub>0\""], ["proof (state)\nthis:\n  f \\<in> V\\<^sub>0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> V\\<^sub>0 \\<Longrightarrow>\n       x \\<in> {[i] \\<odot> f |i f.\n                f \\<in> \\<R> \\<and> \\<phi> i = [i] \\<odot> f}", "then"], ["proof (chain)\npicking this:\n  f \\<in> V\\<^sub>0", "have \"f \\<in> \\<R>\""], ["proof (prove)\nusing this:\n  f \\<in> V\\<^sub>0\n\ngoal (1 subgoal):\n 1. f \\<in> \\<R>", "unfolding V0_def"], ["proof (prove)\nusing this:\n  f \\<in> {f \\<in> \\<R>. \\<phi> (the (f 0)) = f}\n\ngoal (1 subgoal):\n 1. f \\<in> \\<R>", "by simp"], ["proof (state)\nthis:\n  f \\<in> \\<R>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> V\\<^sub>0 \\<Longrightarrow>\n       x \\<in> {[i] \\<odot> f |i f.\n                f \\<in> \\<R> \\<and> \\<phi> i = [i] \\<odot> f}", "then"], ["proof (chain)\npicking this:\n  f \\<in> \\<R>", "obtain i where i: \"f 0 \\<down>= i\""], ["proof (prove)\nusing this:\n  f \\<in> \\<R>\n\ngoal (1 subgoal):\n 1. (\\<And>i. f 0 \\<down>= i \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  f 0 \\<down>= i\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> V\\<^sub>0 \\<Longrightarrow>\n       x \\<in> {[i] \\<odot> f |i f.\n                f \\<in> \\<R> \\<and> \\<phi> i = [i] \\<odot> f}", "define g where \"g = (\\<lambda>x. f (x + 1))\""], ["proof (state)\nthis:\n  g = (\\<lambda>x. f (x + 1))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> V\\<^sub>0 \\<Longrightarrow>\n       x \\<in> {[i] \\<odot> f |i f.\n                f \\<in> \\<R> \\<and> \\<phi> i = [i] \\<odot> f}", "then"], ["proof (chain)\npicking this:\n  g = (\\<lambda>x. f (x + 1))", "have \"g \\<in> \\<R>\""], ["proof (prove)\nusing this:\n  g = (\\<lambda>x. f (x + 1))\n\ngoal (1 subgoal):\n 1. g \\<in> \\<R>", "using skip_R1[OF \\<open>f \\<in> \\<R>\\<close>]"], ["proof (prove)\nusing this:\n  g = (\\<lambda>x. f (x + 1))\n  (\\<lambda>x. f (x + ?n)) \\<in> \\<R>\n\ngoal (1 subgoal):\n 1. g \\<in> \\<R>", "by blast"], ["proof (state)\nthis:\n  g \\<in> \\<R>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> V\\<^sub>0 \\<Longrightarrow>\n       x \\<in> {[i] \\<odot> f |i f.\n                f \\<in> \\<R> \\<and> \\<phi> i = [i] \\<odot> f}", "moreover"], ["proof (state)\nthis:\n  g \\<in> \\<R>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> V\\<^sub>0 \\<Longrightarrow>\n       x \\<in> {[i] \\<odot> f |i f.\n                f \\<in> \\<R> \\<and> \\<phi> i = [i] \\<odot> f}", "have \"[i] \\<odot> g = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [i] \\<odot> g = f", "using g_def i"], ["proof (prove)\nusing this:\n  g = (\\<lambda>x. f (x + 1))\n  f 0 \\<down>= i\n\ngoal (1 subgoal):\n 1. [i] \\<odot> g = f", "by auto"], ["proof (state)\nthis:\n  [i] \\<odot> g = f\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> V\\<^sub>0 \\<Longrightarrow>\n       x \\<in> {[i] \\<odot> f |i f.\n                f \\<in> \\<R> \\<and> \\<phi> i = [i] \\<odot> f}", "moreover"], ["proof (state)\nthis:\n  [i] \\<odot> g = f\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> V\\<^sub>0 \\<Longrightarrow>\n       x \\<in> {[i] \\<odot> f |i f.\n                f \\<in> \\<R> \\<and> \\<phi> i = [i] \\<odot> f}", "have \"\\<phi> i = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<phi> i = f", "using \\<open>f \\<in> V\\<^sub>0\\<close> V0_def i"], ["proof (prove)\nusing this:\n  f \\<in> V\\<^sub>0\n  V\\<^sub>0 = {f \\<in> \\<R>. \\<phi> (the (f 0)) = f}\n  f 0 \\<down>= i\n\ngoal (1 subgoal):\n 1. \\<phi> i = f", "by force"], ["proof (state)\nthis:\n  \\<phi> i = f\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> V\\<^sub>0 \\<Longrightarrow>\n       x \\<in> {[i] \\<odot> f |i f.\n                f \\<in> \\<R> \\<and> \\<phi> i = [i] \\<odot> f}", "ultimately"], ["proof (chain)\npicking this:\n  g \\<in> \\<R>\n  [i] \\<odot> g = f\n  \\<phi> i = f", "show \"f \\<in> ?W\""], ["proof (prove)\nusing this:\n  g \\<in> \\<R>\n  [i] \\<odot> g = f\n  \\<phi> i = f\n\ngoal (1 subgoal):\n 1. f \\<in> {[i] \\<odot> f |i f.\n             f \\<in> \\<R> \\<and> \\<phi> i = [i] \\<odot> f}", "by auto"], ["proof (state)\nthis:\n  f \\<in> {[i] \\<odot> f |i f. f \\<in> \\<R> \\<and> \\<phi> i = [i] \\<odot> f}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  V\\<^sub>0\n  \\<subseteq> {[i] \\<odot> f |i f.\n               f \\<in> \\<R> \\<and> \\<phi> i = [i] \\<odot> f}\n\ngoal (1 subgoal):\n 1. {[i] \\<odot> f |i f. f \\<in> \\<R> \\<and> \\<phi> i = [i] \\<odot> f}\n    \\<subseteq> V\\<^sub>0", "show \"?W \\<subseteq> V\\<^sub>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {[i] \\<odot> f |i f. f \\<in> \\<R> \\<and> \\<phi> i = [i] \\<odot> f}\n    \\<subseteq> V\\<^sub>0", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {[i] \\<odot> f |i f.\n                f \\<in> \\<R> \\<and>\n                \\<phi> i = [i] \\<odot> f} \\<Longrightarrow>\n       x \\<in> V\\<^sub>0", "fix g"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {[i] \\<odot> f |i f.\n                f \\<in> \\<R> \\<and>\n                \\<phi> i = [i] \\<odot> f} \\<Longrightarrow>\n       x \\<in> V\\<^sub>0", "assume \"g \\<in> ?W\""], ["proof (state)\nthis:\n  g \\<in> {[i] \\<odot> f |i f. f \\<in> \\<R> \\<and> \\<phi> i = [i] \\<odot> f}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {[i] \\<odot> f |i f.\n                f \\<in> \\<R> \\<and>\n                \\<phi> i = [i] \\<odot> f} \\<Longrightarrow>\n       x \\<in> V\\<^sub>0", "then"], ["proof (chain)\npicking this:\n  g \\<in> {[i] \\<odot> f |i f. f \\<in> \\<R> \\<and> \\<phi> i = [i] \\<odot> f}", "have \"\\<phi> (the (g 0)) = g\""], ["proof (prove)\nusing this:\n  g \\<in> {[i] \\<odot> f |i f. f \\<in> \\<R> \\<and> \\<phi> i = [i] \\<odot> f}\n\ngoal (1 subgoal):\n 1. \\<phi> (the (g 0)) = g", "by auto"], ["proof (state)\nthis:\n  \\<phi> (the (g 0)) = g\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {[i] \\<odot> f |i f.\n                f \\<in> \\<R> \\<and>\n                \\<phi> i = [i] \\<odot> f} \\<Longrightarrow>\n       x \\<in> V\\<^sub>0", "moreover"], ["proof (state)\nthis:\n  \\<phi> (the (g 0)) = g\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {[i] \\<odot> f |i f.\n                f \\<in> \\<R> \\<and>\n                \\<phi> i = [i] \\<odot> f} \\<Longrightarrow>\n       x \\<in> V\\<^sub>0", "have \"g \\<in> \\<R>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<in> \\<R>", "using prepend_in_R1 \\<open>g \\<in> ?W\\<close>"], ["proof (prove)\nusing this:\n  ?f \\<in> \\<R> \\<Longrightarrow> ?vs \\<odot> ?f \\<in> \\<R>\n  g \\<in> {[i] \\<odot> f |i f. f \\<in> \\<R> \\<and> \\<phi> i = [i] \\<odot> f}\n\ngoal (1 subgoal):\n 1. g \\<in> \\<R>", "by auto"], ["proof (state)\nthis:\n  g \\<in> \\<R>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {[i] \\<odot> f |i f.\n                f \\<in> \\<R> \\<and>\n                \\<phi> i = [i] \\<odot> f} \\<Longrightarrow>\n       x \\<in> V\\<^sub>0", "ultimately"], ["proof (chain)\npicking this:\n  \\<phi> (the (g 0)) = g\n  g \\<in> \\<R>", "show \"g \\<in> V\\<^sub>0\""], ["proof (prove)\nusing this:\n  \\<phi> (the (g 0)) = g\n  g \\<in> \\<R>\n\ngoal (1 subgoal):\n 1. g \\<in> V\\<^sub>0", "by (simp add: V0_def)"], ["proof (state)\nthis:\n  g \\<in> V\\<^sub>0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {[i] \\<odot> f |i f. f \\<in> \\<R> \\<and> \\<phi> i = [i] \\<odot> f}\n  \\<subseteq> V\\<^sub>0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma V0_in_FIN: \"V\\<^sub>0 \\<in> FIN\""], ["proof (prove)\ngoal (1 subgoal):\n 1. V\\<^sub>0 \\<in> FIN", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. V\\<^sub>0 \\<in> FIN", "define s where \"s = (\\<lambda>x. Some (Suc (e_hd x)))\""], ["proof (state)\nthis:\n  s = (\\<lambda>x. Some (Suc (e_hd x)))\n\ngoal (1 subgoal):\n 1. V\\<^sub>0 \\<in> FIN", "have \"s \\<in> \\<P>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> \\<P>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. s \\<in> \\<P>", "define r where \"r = Cn 1 S [r_hd]\""], ["proof (state)\nthis:\n  r = Cn 1 S [r_hd]\n\ngoal (1 subgoal):\n 1. s \\<in> \\<P>", "then"], ["proof (chain)\npicking this:\n  r = Cn 1 S [r_hd]", "have \"recfn 1 r\""], ["proof (prove)\nusing this:\n  r = Cn 1 S [r_hd]\n\ngoal (1 subgoal):\n 1. recfn 1 r", "by simp"], ["proof (state)\nthis:\n  recfn 1 r\n\ngoal (1 subgoal):\n 1. s \\<in> \\<P>", "moreover"], ["proof (state)\nthis:\n  recfn 1 r\n\ngoal (1 subgoal):\n 1. s \\<in> \\<P>", "have \"eval r [x] \\<down>= Suc (e_hd x)\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. eval r [x] \\<down>= Suc (e_hd x)", "unfolding r_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. eval (Cn 1 S [r_hd]) [x] \\<down>= Suc (e_hd x)", "by simp"], ["proof (state)\nthis:\n  eval r [?x] \\<down>= Suc (e_hd ?x)\n\ngoal (1 subgoal):\n 1. s \\<in> \\<P>", "ultimately"], ["proof (chain)\npicking this:\n  recfn 1 r\n  eval r [?x] \\<down>= Suc (e_hd ?x)", "show ?thesis"], ["proof (prove)\nusing this:\n  recfn 1 r\n  eval r [?x] \\<down>= Suc (e_hd ?x)\n\ngoal (1 subgoal):\n 1. s \\<in> \\<P>", "using s_def"], ["proof (prove)\nusing this:\n  recfn 1 r\n  eval r [?x] \\<down>= Suc (e_hd ?x)\n  s = (\\<lambda>x. Some (Suc (e_hd x)))\n\ngoal (1 subgoal):\n 1. s \\<in> \\<P>", "by blast"], ["proof (state)\nthis:\n  s \\<in> \\<P>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  s \\<in> \\<P>\n\ngoal (1 subgoal):\n 1. V\\<^sub>0 \\<in> FIN", "have s: \"s (f \\<triangleright> n) \\<down>= Suc (the (f 0))\" for f n"], ["proof (prove)\ngoal (1 subgoal):\n 1. s (f \\<triangleright> n) \\<down>= Suc (the (f 0))", "unfolding s_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Some (Suc (e_hd (f \\<triangleright> n))) \\<down>= Suc (the (f 0))", "by simp"], ["proof (state)\nthis:\n  s (?f \\<triangleright> ?n) \\<down>= Suc (the (?f 0))\n\ngoal (1 subgoal):\n 1. V\\<^sub>0 \\<in> FIN", "have \"learn_fin \\<phi> V\\<^sub>0 s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. learn_fin \\<phi> V\\<^sub>0 s", "proof (rule learn_finI)"], ["proof (state)\ngoal (2 subgoals):\n 1. environment \\<phi> V\\<^sub>0 s\n 2. \\<And>f.\n       f \\<in> V\\<^sub>0 \\<Longrightarrow>\n       \\<exists>i n\\<^sub>0.\n          \\<phi> i = f \\<and>\n          (\\<forall>n<n\\<^sub>0. s (f \\<triangleright> n) \\<down>= 0) \\<and>\n          (\\<forall>n\\<ge>n\\<^sub>0.\n              s (f \\<triangleright> n) \\<down>= Suc i)", "show \"environment \\<phi> V\\<^sub>0 s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. environment \\<phi> V\\<^sub>0 s", "using s_def \\<open>s \\<in> \\<P>\\<close> phi_in_P2 V0_def"], ["proof (prove)\nusing this:\n  s = (\\<lambda>x. Some (Suc (e_hd x)))\n  s \\<in> \\<P>\n  \\<phi> \\<in> \\<P>\\<^sup>2\n  V\\<^sub>0 = {f \\<in> \\<R>. \\<phi> (the (f 0)) = f}\n\ngoal (1 subgoal):\n 1. environment \\<phi> V\\<^sub>0 s", "by auto"], ["proof (state)\nthis:\n  environment \\<phi> V\\<^sub>0 s\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> V\\<^sub>0 \\<Longrightarrow>\n       \\<exists>i n\\<^sub>0.\n          \\<phi> i = f \\<and>\n          (\\<forall>n<n\\<^sub>0. s (f \\<triangleright> n) \\<down>= 0) \\<and>\n          (\\<forall>n\\<ge>n\\<^sub>0.\n              s (f \\<triangleright> n) \\<down>= Suc i)", "show \"\\<exists>i n\\<^sub>0. \\<phi> i = f \\<and> (\\<forall>n<n\\<^sub>0. s (f \\<triangleright> n) \\<down>= 0) \\<and> (\\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= Suc i)\"\n        if \"f \\<in> V\\<^sub>0\" for f"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i n\\<^sub>0.\n       \\<phi> i = f \\<and>\n       (\\<forall>n<n\\<^sub>0. s (f \\<triangleright> n) \\<down>= 0) \\<and>\n       (\\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= Suc i)", "using that V0_def s"], ["proof (prove)\nusing this:\n  f \\<in> V\\<^sub>0\n  V\\<^sub>0 = {f \\<in> \\<R>. \\<phi> (the (f 0)) = f}\n  s (?f \\<triangleright> ?n) \\<down>= Suc (the (?f 0))\n\ngoal (1 subgoal):\n 1. \\<exists>i n\\<^sub>0.\n       \\<phi> i = f \\<and>\n       (\\<forall>n<n\\<^sub>0. s (f \\<triangleright> n) \\<down>= 0) \\<and>\n       (\\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= Suc i)", "by auto"], ["proof (state)\nthis:\n  ?f \\<in> V\\<^sub>0 \\<Longrightarrow>\n  \\<exists>i n\\<^sub>0.\n     \\<phi> i = ?f \\<and>\n     (\\<forall>n<n\\<^sub>0. s (?f \\<triangleright> n) \\<down>= 0) \\<and>\n     (\\<forall>n\\<ge>n\\<^sub>0. s (?f \\<triangleright> n) \\<down>= Suc i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  learn_fin \\<phi> V\\<^sub>0 s\n\ngoal (1 subgoal):\n 1. V\\<^sub>0 \\<in> FIN", "then"], ["proof (chain)\npicking this:\n  learn_fin \\<phi> V\\<^sub>0 s", "show ?thesis"], ["proof (prove)\nusing this:\n  learn_fin \\<phi> V\\<^sub>0 s\n\ngoal (1 subgoal):\n 1. V\\<^sub>0 \\<in> FIN", "using FIN_def"], ["proof (prove)\nusing this:\n  learn_fin \\<phi> V\\<^sub>0 s\n  FIN \\<equiv> {U. \\<exists>\\<psi> s. learn_fin \\<psi> U s}\n\ngoal (1 subgoal):\n 1. V\\<^sub>0 \\<in> FIN", "by auto"], ["proof (state)\nthis:\n  V\\<^sub>0 \\<in> FIN\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>To every @{term \"f \\<in> \\<R>\"} a number can be prepended that is\na G?del number of the resulting function. Such a function is then in $V_0$.\n\nIf $V_0$ was in NUM, it would be embedded in a total numbering. Shifting this\nnumbering to the left, essentially discarding the values at point $0$, would\nyield a total numbering for @{term \"\\<R>\"}, which contradicts @{thm[source]\nR1_not_in_NUM}. This proves @{prop \"V\\<^sub>0 \\<notin> NUM\"}.\\<close>"], ["", "lemma prepend_goedel:\n  assumes \"f \\<in> \\<R>\"\n  shows \"\\<exists>i. \\<phi> i = [i] \\<odot> f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i. \\<phi> i = [i] \\<odot> f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i. \\<phi> i = [i] \\<odot> f", "obtain r where r: \"recfn 1 r\" \"total r\" \"\\<And>x. eval r [x] = f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>recfn 1 r; Partial_Recursive.total r;\n         \\<And>x. eval r [x] = f x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> \\<R>\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>recfn 1 r; Partial_Recursive.total r;\n         \\<And>x. eval r [x] = f x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  recfn 1 r\n  Partial_Recursive.total r\n  eval r [?x] = f ?x\n\ngoal (1 subgoal):\n 1. \\<exists>i. \\<phi> i = [i] \\<odot> f", "define r_psi where \"r_psi = Cn 2 r_ifz [Id 2 1, Id 2 0, Cn 2 r [Cn 2 r_dec [Id 2 1]]]\""], ["proof (state)\nthis:\n  r_psi =\n  Cn 2 r_ifz [recf.Id 2 1, recf.Id 2 0, Cn 2 r [Cn 2 r_dec [recf.Id 2 1]]]\n\ngoal (1 subgoal):\n 1. \\<exists>i. \\<phi> i = [i] \\<odot> f", "then"], ["proof (chain)\npicking this:\n  r_psi =\n  Cn 2 r_ifz [recf.Id 2 1, recf.Id 2 0, Cn 2 r [Cn 2 r_dec [recf.Id 2 1]]]", "have \"recfn 2 r_psi\""], ["proof (prove)\nusing this:\n  r_psi =\n  Cn 2 r_ifz [recf.Id 2 1, recf.Id 2 0, Cn 2 r [Cn 2 r_dec [recf.Id 2 1]]]\n\ngoal (1 subgoal):\n 1. recfn 2 r_psi", "using r(1)"], ["proof (prove)\nusing this:\n  r_psi =\n  Cn 2 r_ifz [recf.Id 2 1, recf.Id 2 0, Cn 2 r [Cn 2 r_dec [recf.Id 2 1]]]\n  recfn 1 r\n\ngoal (1 subgoal):\n 1. recfn 2 r_psi", "by simp"], ["proof (state)\nthis:\n  recfn 2 r_psi\n\ngoal (1 subgoal):\n 1. \\<exists>i. \\<phi> i = [i] \\<odot> f", "have \"eval r_psi [i, x] = (if x = 0 then Some i else f (x - 1))\" for i x"], ["proof (prove)\ngoal (1 subgoal):\n 1. eval r_psi [i, x] = (if x = 0 then Some i else f (x - 1))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. eval r_psi [i, x] = (if x = 0 then Some i else f (x - 1))", "have \"eval (Cn 2 r [Cn 2 r_dec [Id 2 1]]) [i, x] = f (x - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eval (Cn 2 r [Cn 2 r_dec [recf.Id 2 1]]) [i, x] = f (x - 1)", "using r"], ["proof (prove)\nusing this:\n  recfn 1 r\n  Partial_Recursive.total r\n  eval r [?x] = f ?x\n\ngoal (1 subgoal):\n 1. eval (Cn 2 r [Cn 2 r_dec [recf.Id 2 1]]) [i, x] = f (x - 1)", "by simp"], ["proof (state)\nthis:\n  eval (Cn 2 r [Cn 2 r_dec [recf.Id 2 1]]) [i, x] = f (x - 1)\n\ngoal (1 subgoal):\n 1. eval r_psi [i, x] = (if x = 0 then Some i else f (x - 1))", "then"], ["proof (chain)\npicking this:\n  eval (Cn 2 r [Cn 2 r_dec [recf.Id 2 1]]) [i, x] = f (x - 1)", "have \"eval r_psi [i, x] = eval r_ifz [x, i, the (f (x - 1))]\""], ["proof (prove)\nusing this:\n  eval (Cn 2 r [Cn 2 r_dec [recf.Id 2 1]]) [i, x] = f (x - 1)\n\ngoal (1 subgoal):\n 1. eval r_psi [i, x] = eval r_ifz [x, i, the (f (x - 1))]", "unfolding r_psi_def"], ["proof (prove)\nusing this:\n  eval (Cn 2 r [Cn 2 r_dec [recf.Id 2 1]]) [i, x] = f (x - 1)\n\ngoal (1 subgoal):\n 1. eval\n     (Cn 2 r_ifz\n       [recf.Id 2 1, recf.Id 2 0, Cn 2 r [Cn 2 r_dec [recf.Id 2 1]]])\n     [i, x] =\n    eval r_ifz [x, i, the (f (x - 1))]", "using \\<open>recfn 2 r_psi\\<close> r R1_imp_total1[OF assms]"], ["proof (prove)\nusing this:\n  eval (Cn 2 r [Cn 2 r_dec [recf.Id 2 1]]) [i, x] = f (x - 1)\n  recfn 2 r_psi\n  recfn 1 r\n  Partial_Recursive.total r\n  eval r [?x] = f ?x\n  total1 f\n\ngoal (1 subgoal):\n 1. eval\n     (Cn 2 r_ifz\n       [recf.Id 2 1, recf.Id 2 0, Cn 2 r [Cn 2 r_dec [recf.Id 2 1]]])\n     [i, x] =\n    eval r_ifz [x, i, the (f (x - 1))]", "by auto"], ["proof (state)\nthis:\n  eval r_psi [i, x] = eval r_ifz [x, i, the (f (x - 1))]\n\ngoal (1 subgoal):\n 1. eval r_psi [i, x] = (if x = 0 then Some i else f (x - 1))", "then"], ["proof (chain)\npicking this:\n  eval r_psi [i, x] = eval r_ifz [x, i, the (f (x - 1))]", "show ?thesis"], ["proof (prove)\nusing this:\n  eval r_psi [i, x] = eval r_ifz [x, i, the (f (x - 1))]\n\ngoal (1 subgoal):\n 1. eval r_psi [i, x] = (if x = 0 then Some i else f (x - 1))", "using assms"], ["proof (prove)\nusing this:\n  eval r_psi [i, x] = eval r_ifz [x, i, the (f (x - 1))]\n  f \\<in> \\<R>\n\ngoal (1 subgoal):\n 1. eval r_psi [i, x] = (if x = 0 then Some i else f (x - 1))", "by simp"], ["proof (state)\nthis:\n  eval r_psi [i, x] = (if x = 0 then Some i else f (x - 1))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  eval r_psi [?i, ?x] = (if ?x = 0 then Some ?i else f (?x - 1))\n\ngoal (1 subgoal):\n 1. \\<exists>i. \\<phi> i = [i] \\<odot> f", "with \\<open>recfn 2 r_psi\\<close>"], ["proof (chain)\npicking this:\n  recfn 2 r_psi\n  eval r_psi [?i, ?x] = (if ?x = 0 then Some ?i else f (?x - 1))", "have \"(\\<lambda>i x. if x = 0 then Some i else f (x - 1)) \\<in> \\<P>\\<^sup>2\""], ["proof (prove)\nusing this:\n  recfn 2 r_psi\n  eval r_psi [?i, ?x] = (if ?x = 0 then Some ?i else f (?x - 1))\n\ngoal (1 subgoal):\n 1. (\\<lambda>i x. if x = 0 then Some i else f (x - 1)) \\<in> \\<P>\\<^sup>2", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>i x. if x = 0 then Some i else f (x - 1)) \\<in> \\<P>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<exists>i. \\<phi> i = [i] \\<odot> f", "with kleene_fixed_point"], ["proof (chain)\npicking this:\n  \\<lbrakk>?\\<psi> \\<in> \\<P>\\<^sup>2;\n   \\<And>i.\n      \\<lbrakk>?k \\<le> i; \\<phi> i = ?\\<psi> i\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  (\\<lambda>i x. if x = 0 then Some i else f (x - 1)) \\<in> \\<P>\\<^sup>2", "obtain i where\n    \"\\<phi> i = (\\<lambda>x. if x = 0 then Some i else f (x - 1))\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?\\<psi> \\<in> \\<P>\\<^sup>2;\n   \\<And>i.\n      \\<lbrakk>?k \\<le> i; \\<phi> i = ?\\<psi> i\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  (\\<lambda>i x. if x = 0 then Some i else f (x - 1)) \\<in> \\<P>\\<^sup>2\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<phi> i =\n        (\\<lambda>x. if x = 0 then Some i else f (x - 1)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<phi> i = (\\<lambda>x. if x = 0 then Some i else f (x - 1))\n\ngoal (1 subgoal):\n 1. \\<exists>i. \\<phi> i = [i] \\<odot> f", "then"], ["proof (chain)\npicking this:\n  \\<phi> i = (\\<lambda>x. if x = 0 then Some i else f (x - 1))", "have \"\\<phi> i = [i] \\<odot> f\""], ["proof (prove)\nusing this:\n  \\<phi> i = (\\<lambda>x. if x = 0 then Some i else f (x - 1))\n\ngoal (1 subgoal):\n 1. \\<phi> i = [i] \\<odot> f", "by auto"], ["proof (state)\nthis:\n  \\<phi> i = [i] \\<odot> f\n\ngoal (1 subgoal):\n 1. \\<exists>i. \\<phi> i = [i] \\<odot> f", "then"], ["proof (chain)\npicking this:\n  \\<phi> i = [i] \\<odot> f", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<phi> i = [i] \\<odot> f\n\ngoal (1 subgoal):\n 1. \\<exists>i. \\<phi> i = [i] \\<odot> f", "by auto"], ["proof (state)\nthis:\n  \\<exists>i. \\<phi> i = [i] \\<odot> f\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma V0_in_FIN_minus_NUM: \"V\\<^sub>0 \\<in> FIN - NUM\""], ["proof (prove)\ngoal (1 subgoal):\n 1. V\\<^sub>0 \\<in> FIN - NUM", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. V\\<^sub>0 \\<in> FIN - NUM", "have \"V\\<^sub>0 \\<notin> NUM\""], ["proof (prove)\ngoal (1 subgoal):\n 1. V\\<^sub>0 \\<notin> NUM", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. V\\<^sub>0 \\<in> NUM \\<Longrightarrow> False", "assume \"V\\<^sub>0 \\<in> NUM\""], ["proof (state)\nthis:\n  V\\<^sub>0 \\<in> NUM\n\ngoal (1 subgoal):\n 1. V\\<^sub>0 \\<in> NUM \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  V\\<^sub>0 \\<in> NUM", "obtain \\<psi> where \\<psi>: \"\\<psi> \\<in> \\<R>\\<^sup>2\" \"\\<And>f. f \\<in> V\\<^sub>0 \\<Longrightarrow> \\<exists>i. \\<psi> i = f\""], ["proof (prove)\nusing this:\n  V\\<^sub>0 \\<in> NUM\n\ngoal (1 subgoal):\n 1. (\\<And>\\<psi>.\n        \\<lbrakk>\\<psi> \\<in> \\<R>\\<^sup>2;\n         \\<And>f.\n            f \\<in> V\\<^sub>0 \\<Longrightarrow>\n            \\<exists>i. \\<psi> i = f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<psi> \\<in> \\<R>\\<^sup>2\n  ?f \\<in> V\\<^sub>0 \\<Longrightarrow> \\<exists>i. \\<psi> i = ?f\n\ngoal (1 subgoal):\n 1. V\\<^sub>0 \\<in> NUM \\<Longrightarrow> False", "define \\<psi>' where \"\\<psi>' i x = \\<psi> i (Suc x)\" for i x"], ["proof (state)\nthis:\n  \\<psi>' ?i ?x = \\<psi> ?i (Suc ?x)\n\ngoal (1 subgoal):\n 1. V\\<^sub>0 \\<in> NUM \\<Longrightarrow> False", "have \"\\<psi>' \\<in> \\<R>\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<psi>' \\<in> \\<R>\\<^sup>2", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<psi>' \\<in> \\<P>\\<^sup>2\n 2. total2 \\<psi>'", "from \\<psi>(1)"], ["proof (chain)\npicking this:\n  \\<psi> \\<in> \\<R>\\<^sup>2", "obtain r_psi where\n        r_psi: \"recfn 2 r_psi\" \"total r_psi\" \"\\<And>i x. eval r_psi [i, x] = \\<psi> i x\""], ["proof (prove)\nusing this:\n  \\<psi> \\<in> \\<R>\\<^sup>2\n\ngoal (1 subgoal):\n 1. (\\<And>r_psi.\n        \\<lbrakk>recfn 2 r_psi; Partial_Recursive.total r_psi;\n         \\<And>i x. eval r_psi [i, x] = \\<psi> i x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  recfn 2 r_psi\n  Partial_Recursive.total r_psi\n  eval r_psi [?i, ?x] = \\<psi> ?i ?x\n\ngoal (2 subgoals):\n 1. \\<psi>' \\<in> \\<P>\\<^sup>2\n 2. total2 \\<psi>'", "define r_psi' where \"r_psi' = Cn 2 r_psi [Id 2 0, Cn 2 S [Id 2 1]]\""], ["proof (state)\nthis:\n  r_psi' = Cn 2 r_psi [recf.Id 2 0, Cn 2 S [recf.Id 2 1]]\n\ngoal (2 subgoals):\n 1. \\<psi>' \\<in> \\<P>\\<^sup>2\n 2. total2 \\<psi>'", "then"], ["proof (chain)\npicking this:\n  r_psi' = Cn 2 r_psi [recf.Id 2 0, Cn 2 S [recf.Id 2 1]]", "have \"recfn 2 r_psi'\" and \"\\<And>i x. eval r_psi' [i, x] = \\<psi>' i x\""], ["proof (prove)\nusing this:\n  r_psi' = Cn 2 r_psi [recf.Id 2 0, Cn 2 S [recf.Id 2 1]]\n\ngoal (1 subgoal):\n 1. recfn 2 r_psi' &&& (\\<And>i x. eval r_psi' [i, x] = \\<psi>' i x)", "unfolding r_psi'_def \\<psi>'_def"], ["proof (prove)\nusing this:\n  Cn 2 r_psi [recf.Id 2 0, Cn 2 S [recf.Id 2 1]] =\n  Cn 2 r_psi [recf.Id 2 0, Cn 2 S [recf.Id 2 1]]\n\ngoal (1 subgoal):\n 1. recfn 2 (Cn 2 r_psi [recf.Id 2 0, Cn 2 S [recf.Id 2 1]]) &&&\n    (\\<And>i x.\n        eval (Cn 2 r_psi [recf.Id 2 0, Cn 2 S [recf.Id 2 1]]) [i, x] =\n        \\<psi> i (Suc x))", "using r_psi"], ["proof (prove)\nusing this:\n  Cn 2 r_psi [recf.Id 2 0, Cn 2 S [recf.Id 2 1]] =\n  Cn 2 r_psi [recf.Id 2 0, Cn 2 S [recf.Id 2 1]]\n  recfn 2 r_psi\n  Partial_Recursive.total r_psi\n  eval r_psi [?i, ?x] = \\<psi> ?i ?x\n\ngoal (1 subgoal):\n 1. recfn 2 (Cn 2 r_psi [recf.Id 2 0, Cn 2 S [recf.Id 2 1]]) &&&\n    (\\<And>i x.\n        eval (Cn 2 r_psi [recf.Id 2 0, Cn 2 S [recf.Id 2 1]]) [i, x] =\n        \\<psi> i (Suc x))", "by simp_all"], ["proof (state)\nthis:\n  recfn 2 r_psi'\n  eval r_psi' [?i, ?x] = \\<psi>' ?i ?x\n\ngoal (2 subgoals):\n 1. \\<psi>' \\<in> \\<P>\\<^sup>2\n 2. total2 \\<psi>'", "then"], ["proof (chain)\npicking this:\n  recfn 2 r_psi'\n  eval r_psi' [?i, ?x] = \\<psi>' ?i ?x", "show \"\\<psi>' \\<in> \\<P>\\<^sup>2\""], ["proof (prove)\nusing this:\n  recfn 2 r_psi'\n  eval r_psi' [?i, ?x] = \\<psi>' ?i ?x\n\ngoal (1 subgoal):\n 1. \\<psi>' \\<in> \\<P>\\<^sup>2", "by blast"], ["proof (state)\nthis:\n  \\<psi>' \\<in> \\<P>\\<^sup>2\n\ngoal (1 subgoal):\n 1. total2 \\<psi>'", "show \"total2 \\<psi>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. total2 \\<psi>'", "using \\<psi>'_def \\<psi>(1)"], ["proof (prove)\nusing this:\n  \\<psi>' ?i ?x = \\<psi> ?i (Suc ?x)\n  \\<psi> \\<in> \\<R>\\<^sup>2\n\ngoal (1 subgoal):\n 1. total2 \\<psi>'", "by (simp add: total2I)"], ["proof (state)\nthis:\n  total2 \\<psi>'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<psi>' \\<in> \\<R>\\<^sup>2\n\ngoal (1 subgoal):\n 1. V\\<^sub>0 \\<in> NUM \\<Longrightarrow> False", "have \"\\<exists>i. \\<psi>' i = f\" if \"f \\<in> \\<R>\" for f"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i. \\<psi>' i = f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i. \\<psi>' i = f", "from that"], ["proof (chain)\npicking this:\n  f \\<in> \\<R>", "obtain j where j: \"\\<phi> j = [j] \\<odot> f\""], ["proof (prove)\nusing this:\n  f \\<in> \\<R>\n\ngoal (1 subgoal):\n 1. (\\<And>j.\n        \\<phi> j = [j] \\<odot> f \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using prepend_goedel"], ["proof (prove)\nusing this:\n  f \\<in> \\<R>\n  ?f \\<in> \\<R> \\<Longrightarrow> \\<exists>i. \\<phi> i = [i] \\<odot> ?f\n\ngoal (1 subgoal):\n 1. (\\<And>j.\n        \\<phi> j = [j] \\<odot> f \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<phi> j = [j] \\<odot> f\n\ngoal (1 subgoal):\n 1. \\<exists>i. \\<psi>' i = f", "then"], ["proof (chain)\npicking this:\n  \\<phi> j = [j] \\<odot> f", "have \"\\<phi> j \\<in> V\\<^sub>0\""], ["proof (prove)\nusing this:\n  \\<phi> j = [j] \\<odot> f\n\ngoal (1 subgoal):\n 1. \\<phi> j \\<in> V\\<^sub>0", "using that V0_altdef"], ["proof (prove)\nusing this:\n  \\<phi> j = [j] \\<odot> f\n  f \\<in> \\<R>\n  V\\<^sub>0 =\n  {[i] \\<odot> f |i f. f \\<in> \\<R> \\<and> \\<phi> i = [i] \\<odot> f}\n\ngoal (1 subgoal):\n 1. \\<phi> j \\<in> V\\<^sub>0", "by auto"], ["proof (state)\nthis:\n  \\<phi> j \\<in> V\\<^sub>0\n\ngoal (1 subgoal):\n 1. \\<exists>i. \\<psi>' i = f", "with \\<psi>"], ["proof (chain)\npicking this:\n  \\<psi> \\<in> \\<R>\\<^sup>2\n  ?f \\<in> V\\<^sub>0 \\<Longrightarrow> \\<exists>i. \\<psi> i = ?f\n  \\<phi> j \\<in> V\\<^sub>0", "obtain i where \"\\<psi> i = \\<phi> j\""], ["proof (prove)\nusing this:\n  \\<psi> \\<in> \\<R>\\<^sup>2\n  ?f \\<in> V\\<^sub>0 \\<Longrightarrow> \\<exists>i. \\<psi> i = ?f\n  \\<phi> j \\<in> V\\<^sub>0\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<psi> i = \\<phi> j \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<psi> i = \\<phi> j\n\ngoal (1 subgoal):\n 1. \\<exists>i. \\<psi>' i = f", "then"], ["proof (chain)\npicking this:\n  \\<psi> i = \\<phi> j", "have \"\\<psi>' i = f\""], ["proof (prove)\nusing this:\n  \\<psi> i = \\<phi> j\n\ngoal (1 subgoal):\n 1. \\<psi>' i = f", "using \\<psi>'_def j"], ["proof (prove)\nusing this:\n  \\<psi> i = \\<phi> j\n  \\<psi>' ?i ?x = \\<psi> ?i (Suc ?x)\n  \\<phi> j = [j] \\<odot> f\n\ngoal (1 subgoal):\n 1. \\<psi>' i = f", "by (auto simp add: prepend_at_ge)"], ["proof (state)\nthis:\n  \\<psi>' i = f\n\ngoal (1 subgoal):\n 1. \\<exists>i. \\<psi>' i = f", "then"], ["proof (chain)\npicking this:\n  \\<psi>' i = f", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<psi>' i = f\n\ngoal (1 subgoal):\n 1. \\<exists>i. \\<psi>' i = f", "by auto"], ["proof (state)\nthis:\n  \\<exists>i. \\<psi>' i = f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?f \\<in> \\<R> \\<Longrightarrow> \\<exists>i. \\<psi>' i = ?f\n\ngoal (1 subgoal):\n 1. V\\<^sub>0 \\<in> NUM \\<Longrightarrow> False", "with \\<open>\\<psi>' \\<in> \\<R>\\<^sup>2\\<close>"], ["proof (chain)\npicking this:\n  \\<psi>' \\<in> \\<R>\\<^sup>2\n  ?f \\<in> \\<R> \\<Longrightarrow> \\<exists>i. \\<psi>' i = ?f", "have \"\\<R> \\<in> NUM\""], ["proof (prove)\nusing this:\n  \\<psi>' \\<in> \\<R>\\<^sup>2\n  ?f \\<in> \\<R> \\<Longrightarrow> \\<exists>i. \\<psi>' i = ?f\n\ngoal (1 subgoal):\n 1. \\<R> \\<in> NUM", "by auto"], ["proof (state)\nthis:\n  \\<R> \\<in> NUM\n\ngoal (1 subgoal):\n 1. V\\<^sub>0 \\<in> NUM \\<Longrightarrow> False", "with R1_not_in_NUM"], ["proof (chain)\npicking this:\n  \\<R> \\<notin> NUM\n  \\<R> \\<in> NUM", "show False"], ["proof (prove)\nusing this:\n  \\<R> \\<notin> NUM\n  \\<R> \\<in> NUM\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  V\\<^sub>0 \\<notin> NUM\n\ngoal (1 subgoal):\n 1. V\\<^sub>0 \\<in> FIN - NUM", "then"], ["proof (chain)\npicking this:\n  V\\<^sub>0 \\<notin> NUM", "show ?thesis"], ["proof (prove)\nusing this:\n  V\\<^sub>0 \\<notin> NUM\n\ngoal (1 subgoal):\n 1. V\\<^sub>0 \\<in> FIN - NUM", "using V0_in_FIN"], ["proof (prove)\nusing this:\n  V\\<^sub>0 \\<notin> NUM\n  V\\<^sub>0 \\<in> FIN\n\ngoal (1 subgoal):\n 1. V\\<^sub>0 \\<in> FIN - NUM", "by auto"], ["proof (state)\nthis:\n  V\\<^sub>0 \\<in> FIN - NUM\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary FIN_not_subseteq_NUM: \"\\<not> FIN \\<subseteq> NUM\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> FIN \\<subseteq> NUM", "using V0_in_FIN_minus_NUM"], ["proof (prove)\nusing this:\n  V\\<^sub>0 \\<in> FIN - NUM\n\ngoal (1 subgoal):\n 1. \\<not> FIN \\<subseteq> NUM", "by auto"], ["", "section \\<open>NUM and CP are incomparable\\label{s:num_cp}\\<close>"], ["", "text \\<open>There are FIN classes outside of NUM, and CP encompasses FIN.\nHence there are CP classes outside of NUM, too.\\<close>"], ["", "theorem CP_not_subseteq_NUM: \"\\<not> CP \\<subseteq> NUM\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> CP \\<subseteq> NUM", "using FIN_subseteq_CP FIN_not_subseteq_NUM"], ["proof (prove)\nusing this:\n  FIN \\<subseteq> CP\n  \\<not> FIN \\<subseteq> NUM\n\ngoal (1 subgoal):\n 1. \\<not> CP \\<subseteq> NUM", "by blast"], ["", "text \\<open>Conversely there is a subclass of @{term \"U\\<^sub>0\"} that\nis in NUM but cannot be learned in a class-preserving way. The following\nproof is due to Jantke and Beick~\\cite{jb-cpnii-81}. The idea is to\ndiagonalize against all strategies, that is, all partial recursive\nfunctions.\\<close>"], ["", "theorem NUM_not_subseteq_CP: \"\\<not> NUM \\<subseteq> CP\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> NUM \\<subseteq> CP", "proof-\n  \\<comment> \\<open>Define a family of functions $f_k$.\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> NUM \\<subseteq> CP", "define f where \"f \\<equiv> \\<lambda>k. [k] \\<odot> 0\\<^sup>\\<infinity>\""], ["proof (state)\nthis:\n  f \\<equiv> \\<lambda>k. [k] \\<odot> 0\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. \\<not> NUM \\<subseteq> CP", "then"], ["proof (chain)\npicking this:\n  f \\<equiv> \\<lambda>k. [k] \\<odot> 0\\<^sup>\\<infinity>", "have \"f k \\<in> \\<R>\" for k"], ["proof (prove)\nusing this:\n  f \\<equiv> \\<lambda>k. [k] \\<odot> 0\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. f k \\<in> \\<R>", "using almost0_in_R1"], ["proof (prove)\nusing this:\n  f \\<equiv> \\<lambda>k. [k] \\<odot> 0\\<^sup>\\<infinity>\n  ?vs \\<odot> 0\\<^sup>\\<infinity> \\<in> \\<R>\n\ngoal (1 subgoal):\n 1. f k \\<in> \\<R>", "by auto\n\n  \\<comment> \\<open>If the strategy $\\varphi_k$ learns $f_k$ it hypothesizes\n  $f_k$ for some shortest prefix $f_k^{a_k}$. Define functions $f'_k =\n  k0^{a_k}10^\\infty$.\\<close>"], ["proof (state)\nthis:\n  f ?k \\<in> \\<R>\n\ngoal (1 subgoal):\n 1. \\<not> NUM \\<subseteq> CP", "define a where\n    \"a \\<equiv> \\<lambda>k. LEAST x. (\\<phi> (the ((\\<phi> k) ((f k) \\<triangleright> x)))) = f k\""], ["proof (state)\nthis:\n  a \\<equiv>\n  \\<lambda>k.\n     LEAST x. \\<phi> (the (\\<phi> k (f k \\<triangleright> x))) = f k\n\ngoal (1 subgoal):\n 1. \\<not> NUM \\<subseteq> CP", "define f' where \"f' \\<equiv> \\<lambda>k. (k # (replicate (a k) 0) @ [1]) \\<odot> 0\\<^sup>\\<infinity>\""], ["proof (state)\nthis:\n  f' \\<equiv>\n  \\<lambda>k. k # replicate (a k) 0 @ [1] \\<odot> 0\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. \\<not> NUM \\<subseteq> CP", "then"], ["proof (chain)\npicking this:\n  f' \\<equiv>\n  \\<lambda>k. k # replicate (a k) 0 @ [1] \\<odot> 0\\<^sup>\\<infinity>", "have \"f' k \\<in> \\<R>\" for k"], ["proof (prove)\nusing this:\n  f' \\<equiv>\n  \\<lambda>k. k # replicate (a k) 0 @ [1] \\<odot> 0\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. f' k \\<in> \\<R>", "using almost0_in_R1"], ["proof (prove)\nusing this:\n  f' \\<equiv>\n  \\<lambda>k. k # replicate (a k) 0 @ [1] \\<odot> 0\\<^sup>\\<infinity>\n  ?vs \\<odot> 0\\<^sup>\\<infinity> \\<in> \\<R>\n\ngoal (1 subgoal):\n 1. f' k \\<in> \\<R>", "by auto\n\n  \\<comment> \\<open>Although $f_k$ and $f'_k$ differ, they share the prefix of length $a_k + 1$.\\<close>"], ["proof (state)\nthis:\n  f' ?k \\<in> \\<R>\n\ngoal (1 subgoal):\n 1. \\<not> NUM \\<subseteq> CP", "have init_eq: \"(f' k) \\<triangleright> (a k) = (f k) \\<triangleright> (a k)\" for k"], ["proof (prove)\ngoal (1 subgoal):\n 1. f' k \\<triangleright> a k = f k \\<triangleright> a k", "proof (rule init_eqI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<le> a k \\<Longrightarrow> f' k x = f k x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<le> a k \\<Longrightarrow> f' k x = f k x", "assume \"x \\<le> a k\""], ["proof (state)\nthis:\n  x \\<le> a k\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<le> a k \\<Longrightarrow> f' k x = f k x", "then"], ["proof (chain)\npicking this:\n  x \\<le> a k", "show \"f' k x = f k x\""], ["proof (prove)\nusing this:\n  x \\<le> a k\n\ngoal (1 subgoal):\n 1. f' k x = f k x", "by (cases \"x = 0\") (simp_all add: nth_append f'_def f_def)"], ["proof (state)\nthis:\n  f' k x = f k x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f' ?k \\<triangleright> a ?k = f ?k \\<triangleright> a ?k\n\ngoal (1 subgoal):\n 1. \\<not> NUM \\<subseteq> CP", "have \"f k \\<noteq> f' k\" for k"], ["proof (prove)\ngoal (1 subgoal):\n 1. f k \\<noteq> f' k", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f k \\<noteq> f' k", "have \"f k (Suc (a k)) \\<down>= 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f k (Suc (a k)) \\<down>= 0", "using f_def"], ["proof (prove)\nusing this:\n  f \\<equiv> \\<lambda>k. [k] \\<odot> 0\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. f k (Suc (a k)) \\<down>= 0", "by auto"], ["proof (state)\nthis:\n  f k (Suc (a k)) \\<down>= 0\n\ngoal (1 subgoal):\n 1. f k \\<noteq> f' k", "moreover"], ["proof (state)\nthis:\n  f k (Suc (a k)) \\<down>= 0\n\ngoal (1 subgoal):\n 1. f k \\<noteq> f' k", "have \"f' k (Suc (a k)) \\<down>= 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f' k (Suc (a k)) \\<down>= 1", "using f'_def prepend[of \"(k # (replicate (a k) 0) @ [1])\" \"0\\<^sup>\\<infinity>\" \"Suc (a k)\"]"], ["proof (prove)\nusing this:\n  f' \\<equiv>\n  \\<lambda>k. k # replicate (a k) 0 @ [1] \\<odot> 0\\<^sup>\\<infinity>\n  (k # replicate (a k) 0 @ [1] \\<odot> 0\\<^sup>\\<infinity>) (Suc (a k)) =\n  (if Suc (a k) < length (k # replicate (a k) 0 @ [1])\n   then Some ((k # replicate (a k) 0 @ [1]) ! Suc (a k)) else Some 0)\n\ngoal (1 subgoal):\n 1. f' k (Suc (a k)) \\<down>= 1", "by (metis length_Cons length_append_singleton length_replicate lessI nth_Cons_Suc\n        nth_append_length)"], ["proof (state)\nthis:\n  f' k (Suc (a k)) \\<down>= 1\n\ngoal (1 subgoal):\n 1. f k \\<noteq> f' k", "ultimately"], ["proof (chain)\npicking this:\n  f k (Suc (a k)) \\<down>= 0\n  f' k (Suc (a k)) \\<down>= 1", "show ?thesis"], ["proof (prove)\nusing this:\n  f k (Suc (a k)) \\<down>= 0\n  f' k (Suc (a k)) \\<down>= 1\n\ngoal (1 subgoal):\n 1. f k \\<noteq> f' k", "by auto"], ["proof (state)\nthis:\n  f k \\<noteq> f' k\n\ngoal:\nNo subgoals!", "qed\n\n  \\<comment> \\<open>The separating class $U$ contains $f'_k$ if $\\varphi_k$\n  learns $f_k$; otherwise it contains $f_k$.\\<close>"], ["proof (state)\nthis:\n  f ?k \\<noteq> f' ?k\n\ngoal (1 subgoal):\n 1. \\<not> NUM \\<subseteq> CP", "define U where\n    \"U \\<equiv> {if learn_lim \\<phi> {f k} (\\<phi> k) then f' k else f k |k. k \\<in> UNIV}\""], ["proof (state)\nthis:\n  U \\<equiv>\n  {if learn_lim \\<phi> {f k} (\\<phi> k) then f' k else f k |k. k \\<in> UNIV}\n\ngoal (1 subgoal):\n 1. \\<not> NUM \\<subseteq> CP", "have \"U \\<notin> CP\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U \\<notin> CP", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. U \\<in> CP \\<Longrightarrow> False", "assume \"U \\<in> CP\""], ["proof (state)\nthis:\n  U \\<in> CP\n\ngoal (1 subgoal):\n 1. U \\<in> CP \\<Longrightarrow> False", "have \"\\<exists>k. learn_cp \\<phi> U (\\<phi> k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k. learn_cp \\<phi> U (\\<phi> k)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>k. learn_cp \\<phi> U (\\<phi> k)", "have \"\\<exists>\\<psi> s. learn_cp \\<psi> U s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<psi> s. learn_cp \\<psi> U s", "using CP_def \\<open>U \\<in> CP\\<close>"], ["proof (prove)\nusing this:\n  CP \\<equiv> {U. \\<exists>\\<psi> s. learn_cp \\<psi> U s}\n  U \\<in> CP\n\ngoal (1 subgoal):\n 1. \\<exists>\\<psi> s. learn_cp \\<psi> U s", "by auto"], ["proof (state)\nthis:\n  \\<exists>\\<psi> s. learn_cp \\<psi> U s\n\ngoal (1 subgoal):\n 1. \\<exists>k. learn_cp \\<phi> U (\\<phi> k)", "then"], ["proof (chain)\npicking this:\n  \\<exists>\\<psi> s. learn_cp \\<psi> U s", "obtain s where s: \"learn_cp \\<phi> U s\""], ["proof (prove)\nusing this:\n  \\<exists>\\<psi> s. learn_cp \\<psi> U s\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        learn_cp \\<phi> U s \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using learn_cp_wrt_goedel[OF goedel_numbering_phi]"], ["proof (prove)\nusing this:\n  \\<exists>\\<psi> s. learn_cp \\<psi> U s\n  learn_cp ?\\<psi> ?U ?s \\<Longrightarrow> \\<exists>t. learn_cp \\<phi> ?U t\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        learn_cp \\<phi> U s \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  learn_cp \\<phi> U s\n\ngoal (1 subgoal):\n 1. \\<exists>k. learn_cp \\<phi> U (\\<phi> k)", "then"], ["proof (chain)\npicking this:\n  learn_cp \\<phi> U s", "obtain k where \"\\<phi> k = s\""], ["proof (prove)\nusing this:\n  learn_cp \\<phi> U s\n\ngoal (1 subgoal):\n 1. (\\<And>k. \\<phi> k = s \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using phi_universal learn_cp_def learn_lim_def"], ["proof (prove)\nusing this:\n  learn_cp \\<phi> U s\n  \\<lbrakk>?f \\<in> \\<P>;\n   \\<And>i. \\<phi> i = ?f \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  learn_cp ?\\<psi> ?U ?s \\<equiv>\n  learn_lim ?\\<psi> ?U ?s \\<and>\n  (\\<forall>f\\<in>?U.\n      \\<forall>n. ?\\<psi> (the (?s (f \\<triangleright> n))) \\<in> ?U)\n  learn_lim ?\\<psi> ?U ?s \\<equiv>\n  environment ?\\<psi> ?U ?s \\<and>\n  (\\<forall>f\\<in>?U.\n      \\<exists>i.\n         ?\\<psi> i = f \\<and>\n         (\\<exists>n\\<^sub>0.\n             \\<forall>n\\<ge>n\\<^sub>0.\n                ?s (f \\<triangleright> n) \\<down>= i))\n\ngoal (1 subgoal):\n 1. (\\<And>k. \\<phi> k = s \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<phi> k = s\n\ngoal (1 subgoal):\n 1. \\<exists>k. learn_cp \\<phi> U (\\<phi> k)", "then"], ["proof (chain)\npicking this:\n  \\<phi> k = s", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<phi> k = s\n\ngoal (1 subgoal):\n 1. \\<exists>k. learn_cp \\<phi> U (\\<phi> k)", "using s"], ["proof (prove)\nusing this:\n  \\<phi> k = s\n  learn_cp \\<phi> U s\n\ngoal (1 subgoal):\n 1. \\<exists>k. learn_cp \\<phi> U (\\<phi> k)", "by auto"], ["proof (state)\nthis:\n  \\<exists>k. learn_cp \\<phi> U (\\<phi> k)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>k. learn_cp \\<phi> U (\\<phi> k)\n\ngoal (1 subgoal):\n 1. U \\<in> CP \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>k. learn_cp \\<phi> U (\\<phi> k)", "obtain k where k: \"learn_cp \\<phi> U (\\<phi> k)\""], ["proof (prove)\nusing this:\n  \\<exists>k. learn_cp \\<phi> U (\\<phi> k)\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        learn_cp \\<phi> U (\\<phi> k) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  learn_cp \\<phi> U (\\<phi> k)\n\ngoal (1 subgoal):\n 1. U \\<in> CP \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  learn_cp \\<phi> U (\\<phi> k)", "have learn: \"learn_lim \\<phi> U (\\<phi> k)\""], ["proof (prove)\nusing this:\n  learn_cp \\<phi> U (\\<phi> k)\n\ngoal (1 subgoal):\n 1. learn_lim \\<phi> U (\\<phi> k)", "using learn_cp_def"], ["proof (prove)\nusing this:\n  learn_cp \\<phi> U (\\<phi> k)\n  learn_cp ?\\<psi> ?U ?s \\<equiv>\n  learn_lim ?\\<psi> ?U ?s \\<and>\n  (\\<forall>f\\<in>?U.\n      \\<forall>n. ?\\<psi> (the (?s (f \\<triangleright> n))) \\<in> ?U)\n\ngoal (1 subgoal):\n 1. learn_lim \\<phi> U (\\<phi> k)", "by simp\n    \\<comment> \\<open>If $f_k$ was in $U$, $\\varphi_k$ would learn it. But then,\n    by definition of $U$, $f_k$ would not be in $U$. Hence $f_k \\notin U$.\\<close>"], ["proof (state)\nthis:\n  learn_lim \\<phi> U (\\<phi> k)\n\ngoal (1 subgoal):\n 1. U \\<in> CP \\<Longrightarrow> False", "have \"f k \\<notin> U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f k \\<notin> U", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. f k \\<in> U \\<Longrightarrow> False", "assume \"f k \\<in> U\""], ["proof (state)\nthis:\n  f k \\<in> U\n\ngoal (1 subgoal):\n 1. f k \\<in> U \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  f k \\<in> U", "obtain m where m: \"f k = (if learn_lim \\<phi> {f m} (\\<phi> m) then f' m else f m)\""], ["proof (prove)\nusing this:\n  f k \\<in> U\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        f k =\n        (if learn_lim \\<phi> {f m} (\\<phi> m) then f' m\n         else f m) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using U_def"], ["proof (prove)\nusing this:\n  f k \\<in> U\n  U \\<equiv>\n  {if learn_lim \\<phi> {f k} (\\<phi> k) then f' k else f k |k. k \\<in> UNIV}\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        f k =\n        (if learn_lim \\<phi> {f m} (\\<phi> m) then f' m\n         else f m) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  f k = (if learn_lim \\<phi> {f m} (\\<phi> m) then f' m else f m)\n\ngoal (1 subgoal):\n 1. f k \\<in> U \\<Longrightarrow> False", "have \"f k 0 \\<down>= m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f k 0 \\<down>= m", "using f_def f'_def m"], ["proof (prove)\nusing this:\n  f \\<equiv> \\<lambda>k. [k] \\<odot> 0\\<^sup>\\<infinity>\n  f' \\<equiv>\n  \\<lambda>k. k # replicate (a k) 0 @ [1] \\<odot> 0\\<^sup>\\<infinity>\n  f k = (if learn_lim \\<phi> {f m} (\\<phi> m) then f' m else f m)\n\ngoal (1 subgoal):\n 1. f k 0 \\<down>= m", "by simp"], ["proof (state)\nthis:\n  f k 0 \\<down>= m\n\ngoal (1 subgoal):\n 1. f k \\<in> U \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  f k 0 \\<down>= m\n\ngoal (1 subgoal):\n 1. f k \\<in> U \\<Longrightarrow> False", "have \"f k 0 \\<down>= k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f k 0 \\<down>= k", "by (simp add: f_def)"], ["proof (state)\nthis:\n  f k 0 \\<down>= k\n\ngoal (1 subgoal):\n 1. f k \\<in> U \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  f k 0 \\<down>= m\n  f k 0 \\<down>= k", "have \"m = k\""], ["proof (prove)\nusing this:\n  f k 0 \\<down>= m\n  f k 0 \\<down>= k\n\ngoal (1 subgoal):\n 1. m = k", "by simp"], ["proof (state)\nthis:\n  m = k\n\ngoal (1 subgoal):\n 1. f k \\<in> U \\<Longrightarrow> False", "with m"], ["proof (chain)\npicking this:\n  f k = (if learn_lim \\<phi> {f m} (\\<phi> m) then f' m else f m)\n  m = k", "have \"f k = (if learn_lim \\<phi> {f k} (\\<phi> k) then f' k else f k)\""], ["proof (prove)\nusing this:\n  f k = (if learn_lim \\<phi> {f m} (\\<phi> m) then f' m else f m)\n  m = k\n\ngoal (1 subgoal):\n 1. f k = (if learn_lim \\<phi> {f k} (\\<phi> k) then f' k else f k)", "by auto"], ["proof (state)\nthis:\n  f k = (if learn_lim \\<phi> {f k} (\\<phi> k) then f' k else f k)\n\ngoal (1 subgoal):\n 1. f k \\<in> U \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  f k = (if learn_lim \\<phi> {f k} (\\<phi> k) then f' k else f k)\n\ngoal (1 subgoal):\n 1. f k \\<in> U \\<Longrightarrow> False", "have \"learn_lim \\<phi> {f k} (\\<phi> k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. learn_lim \\<phi> {f k} (\\<phi> k)", "using \\<open>f k \\<in> U\\<close> learn_lim_closed_subseteq[OF learn]"], ["proof (prove)\nusing this:\n  f k \\<in> U\n  ?V \\<subseteq> U \\<Longrightarrow> learn_lim \\<phi> ?V (\\<phi> k)\n\ngoal (1 subgoal):\n 1. learn_lim \\<phi> {f k} (\\<phi> k)", "by simp"], ["proof (state)\nthis:\n  learn_lim \\<phi> {f k} (\\<phi> k)\n\ngoal (1 subgoal):\n 1. f k \\<in> U \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  f k = (if learn_lim \\<phi> {f k} (\\<phi> k) then f' k else f k)\n  learn_lim \\<phi> {f k} (\\<phi> k)", "have \"f k = f' k\""], ["proof (prove)\nusing this:\n  f k = (if learn_lim \\<phi> {f k} (\\<phi> k) then f' k else f k)\n  learn_lim \\<phi> {f k} (\\<phi> k)\n\ngoal (1 subgoal):\n 1. f k = f' k", "by simp"], ["proof (state)\nthis:\n  f k = f' k\n\ngoal (1 subgoal):\n 1. f k \\<in> U \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  f k = f' k", "show False"], ["proof (prove)\nusing this:\n  f k = f' k\n\ngoal (1 subgoal):\n 1. False", "using \\<open>f k \\<noteq> f' k\\<close>"], ["proof (prove)\nusing this:\n  f k = f' k\n  f k \\<noteq> f' k\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f k \\<notin> U\n\ngoal (1 subgoal):\n 1. U \\<in> CP \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  f k \\<notin> U", "have \"f' k \\<in> U\""], ["proof (prove)\nusing this:\n  f k \\<notin> U\n\ngoal (1 subgoal):\n 1. f' k \\<in> U", "using U_def"], ["proof (prove)\nusing this:\n  f k \\<notin> U\n  U \\<equiv>\n  {if learn_lim \\<phi> {f k} (\\<phi> k) then f' k else f k |k. k \\<in> UNIV}\n\ngoal (1 subgoal):\n 1. f' k \\<in> U", "by fastforce"], ["proof (state)\nthis:\n  f' k \\<in> U\n\ngoal (1 subgoal):\n 1. U \\<in> CP \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  f' k \\<in> U", "have in_U: \"\\<forall>n. \\<phi> (the ((\\<phi> k) ((f' k) \\<triangleright> n))) \\<in> U\""], ["proof (prove)\nusing this:\n  f' k \\<in> U\n\ngoal (1 subgoal):\n 1. \\<forall>n. \\<phi> (the (\\<phi> k (f' k \\<triangleright> n))) \\<in> U", "using learn_cpE(3)[OF k]"], ["proof (prove)\nusing this:\n  f' k \\<in> U\n  ?f \\<in> U \\<Longrightarrow>\n  \\<phi> (the (\\<phi> k (?f \\<triangleright> ?n))) \\<in> U\n\ngoal (1 subgoal):\n 1. \\<forall>n. \\<phi> (the (\\<phi> k (f' k \\<triangleright> n))) \\<in> U", "by simp\n\n    \\<comment> \\<open>Since $f'_k \\in U$, the strategy $\\varphi_k$ learns $f_k$.\n    Then $a_k$ is well-defined, $f'^{a_k} = f^{a_k}$, and $\\varphi_k$\n    hypothesizes $f_k$ on $f'^{a_k}$, which is not a class-preserving\n    hypothesis.\\<close>"], ["proof (state)\nthis:\n  \\<forall>n. \\<phi> (the (\\<phi> k (f' k \\<triangleright> n))) \\<in> U\n\ngoal (1 subgoal):\n 1. U \\<in> CP \\<Longrightarrow> False", "have \"learn_lim \\<phi> {f k} (\\<phi> k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. learn_lim \\<phi> {f k} (\\<phi> k)", "using U_def \\<open>f k \\<notin> U\\<close>"], ["proof (prove)\nusing this:\n  U \\<equiv>\n  {if learn_lim \\<phi> {f k} (\\<phi> k) then f' k else f k |k. k \\<in> UNIV}\n  f k \\<notin> U\n\ngoal (1 subgoal):\n 1. learn_lim \\<phi> {f k} (\\<phi> k)", "by fastforce"], ["proof (state)\nthis:\n  learn_lim \\<phi> {f k} (\\<phi> k)\n\ngoal (1 subgoal):\n 1. U \\<in> CP \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  learn_lim \\<phi> {f k} (\\<phi> k)", "have \"\\<exists>i n\\<^sub>0. \\<phi> i = f k \\<and> (\\<forall>n\\<ge>n\\<^sub>0. \\<phi> k ((f k) \\<triangleright> n) \\<down>= i)\""], ["proof (prove)\nusing this:\n  learn_lim \\<phi> {f k} (\\<phi> k)\n\ngoal (1 subgoal):\n 1. \\<exists>i n\\<^sub>0.\n       \\<phi> i = f k \\<and>\n       (\\<forall>n\\<ge>n\\<^sub>0.\n           \\<phi> k (f k \\<triangleright> n) \\<down>= i)", "using learn_limE(2)"], ["proof (prove)\nusing this:\n  learn_lim \\<phi> {f k} (\\<phi> k)\n  \\<lbrakk>learn_lim ?\\<psi> ?U ?s; ?f \\<in> ?U\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i.\n                       ?\\<psi> i = ?f \\<and>\n                       (\\<exists>n\\<^sub>0.\n                           \\<forall>n\\<ge>n\\<^sub>0.\n                              ?s (?f \\<triangleright> n) \\<down>= i)\n\ngoal (1 subgoal):\n 1. \\<exists>i n\\<^sub>0.\n       \\<phi> i = f k \\<and>\n       (\\<forall>n\\<ge>n\\<^sub>0.\n           \\<phi> k (f k \\<triangleright> n) \\<down>= i)", "by simp"], ["proof (state)\nthis:\n  \\<exists>i n\\<^sub>0.\n     \\<phi> i = f k \\<and>\n     (\\<forall>n\\<ge>n\\<^sub>0.\n         \\<phi> k (f k \\<triangleright> n) \\<down>= i)\n\ngoal (1 subgoal):\n 1. U \\<in> CP \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<exists>i n\\<^sub>0.\n     \\<phi> i = f k \\<and>\n     (\\<forall>n\\<ge>n\\<^sub>0.\n         \\<phi> k (f k \\<triangleright> n) \\<down>= i)", "obtain i n\\<^sub>0 where \"\\<phi> i = f k \\<and> (\\<forall>n\\<ge>n\\<^sub>0. \\<phi> k ((f k) \\<triangleright> n) \\<down>= i)\""], ["proof (prove)\nusing this:\n  \\<exists>i n\\<^sub>0.\n     \\<phi> i = f k \\<and>\n     (\\<forall>n\\<ge>n\\<^sub>0.\n         \\<phi> k (f k \\<triangleright> n) \\<down>= i)\n\ngoal (1 subgoal):\n 1. (\\<And>i n\\<^sub>0.\n        \\<phi> i = f k \\<and>\n        (\\<forall>n\\<ge>n\\<^sub>0.\n            \\<phi> k (f k \\<triangleright> n) \\<down>= i) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<phi> i = f k \\<and>\n  (\\<forall>n\\<ge>n\\<^sub>0. \\<phi> k (f k \\<triangleright> n) \\<down>= i)\n\ngoal (1 subgoal):\n 1. U \\<in> CP \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<phi> i = f k \\<and>\n  (\\<forall>n\\<ge>n\\<^sub>0. \\<phi> k (f k \\<triangleright> n) \\<down>= i)", "have \"\\<phi> (the (\\<phi> k ((f k) \\<triangleright> (a k)))) = f k\""], ["proof (prove)\nusing this:\n  \\<phi> i = f k \\<and>\n  (\\<forall>n\\<ge>n\\<^sub>0. \\<phi> k (f k \\<triangleright> n) \\<down>= i)\n\ngoal (1 subgoal):\n 1. \\<phi> (the (\\<phi> k (f k \\<triangleright> a k))) = f k", "using a_def LeastI[of \"\\<lambda>x. (\\<phi> (the ((\\<phi> k) ((f k) \\<triangleright> x)))) = f k\" n\\<^sub>0]"], ["proof (prove)\nusing this:\n  \\<phi> i = f k \\<and>\n  (\\<forall>n\\<ge>n\\<^sub>0. \\<phi> k (f k \\<triangleright> n) \\<down>= i)\n  a \\<equiv>\n  \\<lambda>k.\n     LEAST x. \\<phi> (the (\\<phi> k (f k \\<triangleright> x))) = f k\n  \\<phi> (the (\\<phi> k (f k \\<triangleright> n\\<^sub>0))) =\n  f k \\<Longrightarrow>\n  \\<phi>\n   (the (\\<phi> k\n          (f k \\<triangleright>\n           (LEAST x.\n               \\<phi> (the (\\<phi> k (f k \\<triangleright> x))) = f k)))) =\n  f k\n\ngoal (1 subgoal):\n 1. \\<phi> (the (\\<phi> k (f k \\<triangleright> a k))) = f k", "by simp"], ["proof (state)\nthis:\n  \\<phi> (the (\\<phi> k (f k \\<triangleright> a k))) = f k\n\ngoal (1 subgoal):\n 1. U \\<in> CP \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<phi> (the (\\<phi> k (f k \\<triangleright> a k))) = f k", "have \"\\<phi> (the ((\\<phi> k) ((f' k) \\<triangleright> (a k)))) = f k\""], ["proof (prove)\nusing this:\n  \\<phi> (the (\\<phi> k (f k \\<triangleright> a k))) = f k\n\ngoal (1 subgoal):\n 1. \\<phi> (the (\\<phi> k (f' k \\<triangleright> a k))) = f k", "using init_eq"], ["proof (prove)\nusing this:\n  \\<phi> (the (\\<phi> k (f k \\<triangleright> a k))) = f k\n  f' ?k \\<triangleright> a ?k = f ?k \\<triangleright> a ?k\n\ngoal (1 subgoal):\n 1. \\<phi> (the (\\<phi> k (f' k \\<triangleright> a k))) = f k", "by simp"], ["proof (state)\nthis:\n  \\<phi> (the (\\<phi> k (f' k \\<triangleright> a k))) = f k\n\ngoal (1 subgoal):\n 1. U \\<in> CP \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<phi> (the (\\<phi> k (f' k \\<triangleright> a k))) = f k", "show False"], ["proof (prove)\nusing this:\n  \\<phi> (the (\\<phi> k (f' k \\<triangleright> a k))) = f k\n\ngoal (1 subgoal):\n 1. False", "using \\<open>f k \\<notin> U\\<close> in_U"], ["proof (prove)\nusing this:\n  \\<phi> (the (\\<phi> k (f' k \\<triangleright> a k))) = f k\n  f k \\<notin> U\n  \\<forall>n. \\<phi> (the (\\<phi> k (f' k \\<triangleright> n))) \\<in> U\n\ngoal (1 subgoal):\n 1. False", "by metis"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  U \\<notin> CP\n\ngoal (1 subgoal):\n 1. \\<not> NUM \\<subseteq> CP", "moreover"], ["proof (state)\nthis:\n  U \\<notin> CP\n\ngoal (1 subgoal):\n 1. \\<not> NUM \\<subseteq> CP", "have \"U \\<in> NUM\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U \\<in> NUM", "using NUM_closed_subseteq[OF U0_in_NUM, of U] f_def f'_def U0_def U_def"], ["proof (prove)\nusing this:\n  U \\<subseteq> U\\<^sub>0 \\<Longrightarrow> U \\<in> NUM\n  f \\<equiv> \\<lambda>k. [k] \\<odot> 0\\<^sup>\\<infinity>\n  f' \\<equiv>\n  \\<lambda>k. k # replicate (a k) 0 @ [1] \\<odot> 0\\<^sup>\\<infinity>\n  U\\<^sub>0 \\<equiv> {vs \\<odot> 0\\<^sup>\\<infinity> |vs. vs \\<in> UNIV}\n  U \\<equiv>\n  {if learn_lim \\<phi> {f k} (\\<phi> k) then f' k else f k |k. k \\<in> UNIV}\n\ngoal (1 subgoal):\n 1. U \\<in> NUM", "by fastforce"], ["proof (state)\nthis:\n  U \\<in> NUM\n\ngoal (1 subgoal):\n 1. \\<not> NUM \\<subseteq> CP", "ultimately"], ["proof (chain)\npicking this:\n  U \\<notin> CP\n  U \\<in> NUM", "show ?thesis"], ["proof (prove)\nusing this:\n  U \\<notin> CP\n  U \\<in> NUM\n\ngoal (1 subgoal):\n 1. \\<not> NUM \\<subseteq> CP", "by auto"], ["proof (state)\nthis:\n  \\<not> NUM \\<subseteq> CP\n\ngoal:\nNo subgoals!", "qed"], ["", "section \\<open>NUM is a proper subset of TOTAL\\label{s:num_total}\\<close>"], ["", "text \\<open>A NUM class $U$ is embedded in a total numbering @{term \\<psi>}.\nThe strategy $S$ with $S(f^n) = \\min \\{i \\mid \\forall k \\le n: \\psi_i(k) =\nf(k)\\}$ for $f \\in U$ converges to the least index of $f$ in @{term \\<psi>},\nand thus learns $f$ in the limit. Moreover it will be a TOTAL strategy\nbecause @{term \\<psi>} contains only total functions. This shows @{prop \"NUM\n\\<subseteq> TOTAL\"}.\\<close>"], ["", "text \\<open>First we define, for every hypothesis space $\\psi$, a\nfunction that tries to determine for a given list $e$ and index $i$ whether\n$e$ is a prefix of $\\psi_i$. In other words it tries to decide whether $i$ is\na consistent hypothesis for $e$. ``Tries'' refers to the fact that the\nfunction will diverge if $\\psi_i(x)\\uparrow$ for any $x \\le |e|$. We start\nwith a version that checks the list only up to a given length.\\<close>"], ["", "definition r_consist_upto :: \"recf \\<Rightarrow> recf\" where\n  \"r_consist_upto r_psi \\<equiv>\n    let g = Cn 4 r_ifeq\n      [Cn 4 r_psi [Id 4 2, Id 4 0], Cn 4 r_nth [Id 4 3, Id 4 0], Id 4 1, r_constn 3 1]\n    in Pr 2 (r_constn 1 0) g\""], ["", "lemma r_consist_upto_recfn: \"recfn 2 r_psi \\<Longrightarrow> recfn 3 (r_consist_upto r_psi)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. recfn 2 r_psi \\<Longrightarrow> recfn 3 (r_consist_upto r_psi)", "using r_consist_upto_def"], ["proof (prove)\nusing this:\n  r_consist_upto ?r_psi \\<equiv>\n  Let (Cn 4 r_ifeq\n        [Cn 4 ?r_psi [recf.Id 4 2, recf.Id 4 0],\n         Cn 4 r_nth [recf.Id 4 3, recf.Id 4 0], recf.Id 4 1, r_constn 3 1])\n   (Pr 2 (r_constn 1 0))\n\ngoal (1 subgoal):\n 1. recfn 2 r_psi \\<Longrightarrow> recfn 3 (r_consist_upto r_psi)", "by simp"], ["", "lemma r_consist_upto:\n  assumes \"recfn 2 r_psi\"\n  shows \"\\<forall>k<j. eval r_psi [i, k] \\<down> \\<Longrightarrow>\n      eval (r_consist_upto r_psi) [j, i, e] =\n        (if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k then Some 0 else Some 1)\"\n    and \"\\<not> (\\<forall>k<j. eval r_psi [i, k] \\<down>) \\<Longrightarrow> eval (r_consist_upto r_psi) [j, i, e] \\<up>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>k<j. eval r_psi [i, k] \\<down> \\<Longrightarrow>\n     eval (r_consist_upto r_psi) [j, i, e] =\n     (if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k then Some 0\n      else Some 1)) &&&\n    (\\<not> (\\<forall>k<j. eval r_psi [i, k] \\<down>) \\<Longrightarrow>\n     eval (r_consist_upto r_psi) [j, i, e] \\<up>)", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>k<j. eval r_psi [i, k] \\<down> \\<Longrightarrow>\n    eval (r_consist_upto r_psi) [j, i, e] =\n    (if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k then Some 0\n     else Some 1)\n 2. \\<not> (\\<forall>k<j. eval r_psi [i, k] \\<down>) \\<Longrightarrow>\n    eval (r_consist_upto r_psi) [j, i, e] \\<up>", "define g where \"g =\n    Cn 4 r_ifeq\n     [Cn 4 r_psi [Id 4 2, Id 4 0], Cn 4 r_nth [Id 4 3, Id 4 0], Id 4 1, r_constn 3 1]\""], ["proof (state)\nthis:\n  g =\n  Cn 4 r_ifeq\n   [Cn 4 r_psi [recf.Id 4 2, recf.Id 4 0],\n    Cn 4 r_nth [recf.Id 4 3, recf.Id 4 0], recf.Id 4 1, r_constn 3 1]\n\ngoal (2 subgoals):\n 1. \\<forall>k<j. eval r_psi [i, k] \\<down> \\<Longrightarrow>\n    eval (r_consist_upto r_psi) [j, i, e] =\n    (if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k then Some 0\n     else Some 1)\n 2. \\<not> (\\<forall>k<j. eval r_psi [i, k] \\<down>) \\<Longrightarrow>\n    eval (r_consist_upto r_psi) [j, i, e] \\<up>", "then"], ["proof (chain)\npicking this:\n  g =\n  Cn 4 r_ifeq\n   [Cn 4 r_psi [recf.Id 4 2, recf.Id 4 0],\n    Cn 4 r_nth [recf.Id 4 3, recf.Id 4 0], recf.Id 4 1, r_constn 3 1]", "have \"recfn 4 g\""], ["proof (prove)\nusing this:\n  g =\n  Cn 4 r_ifeq\n   [Cn 4 r_psi [recf.Id 4 2, recf.Id 4 0],\n    Cn 4 r_nth [recf.Id 4 3, recf.Id 4 0], recf.Id 4 1, r_constn 3 1]\n\ngoal (1 subgoal):\n 1. recfn 4 g", "using assms"], ["proof (prove)\nusing this:\n  g =\n  Cn 4 r_ifeq\n   [Cn 4 r_psi [recf.Id 4 2, recf.Id 4 0],\n    Cn 4 r_nth [recf.Id 4 3, recf.Id 4 0], recf.Id 4 1, r_constn 3 1]\n  recfn 2 r_psi\n\ngoal (1 subgoal):\n 1. recfn 4 g", "by simp"], ["proof (state)\nthis:\n  recfn 4 g\n\ngoal (2 subgoals):\n 1. \\<forall>k<j. eval r_psi [i, k] \\<down> \\<Longrightarrow>\n    eval (r_consist_upto r_psi) [j, i, e] =\n    (if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k then Some 0\n     else Some 1)\n 2. \\<not> (\\<forall>k<j. eval r_psi [i, k] \\<down>) \\<Longrightarrow>\n    eval (r_consist_upto r_psi) [j, i, e] \\<up>", "moreover"], ["proof (state)\nthis:\n  recfn 4 g\n\ngoal (2 subgoals):\n 1. \\<forall>k<j. eval r_psi [i, k] \\<down> \\<Longrightarrow>\n    eval (r_consist_upto r_psi) [j, i, e] =\n    (if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k then Some 0\n     else Some 1)\n 2. \\<not> (\\<forall>k<j. eval r_psi [i, k] \\<down>) \\<Longrightarrow>\n    eval (r_consist_upto r_psi) [j, i, e] \\<up>", "have \"eval (Cn 4 r_nth [Id 4 3, Id 4 0]) [j, r, i, e] \\<down>= e_nth e j\" for j r i e"], ["proof (prove)\ngoal (1 subgoal):\n 1. eval (Cn 4 r_nth [recf.Id 4 3, recf.Id 4 0]) [j, r, i, e] \\<down>=\n    e_nth e j", "by simp"], ["proof (state)\nthis:\n  eval (Cn 4 r_nth [recf.Id 4 3, recf.Id 4 0]) [?j, ?r, ?i, ?e] \\<down>=\n  e_nth ?e ?j\n\ngoal (2 subgoals):\n 1. \\<forall>k<j. eval r_psi [i, k] \\<down> \\<Longrightarrow>\n    eval (r_consist_upto r_psi) [j, i, e] =\n    (if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k then Some 0\n     else Some 1)\n 2. \\<not> (\\<forall>k<j. eval r_psi [i, k] \\<down>) \\<Longrightarrow>\n    eval (r_consist_upto r_psi) [j, i, e] \\<up>", "moreover"], ["proof (state)\nthis:\n  eval (Cn 4 r_nth [recf.Id 4 3, recf.Id 4 0]) [?j, ?r, ?i, ?e] \\<down>=\n  e_nth ?e ?j\n\ngoal (2 subgoals):\n 1. \\<forall>k<j. eval r_psi [i, k] \\<down> \\<Longrightarrow>\n    eval (r_consist_upto r_psi) [j, i, e] =\n    (if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k then Some 0\n     else Some 1)\n 2. \\<not> (\\<forall>k<j. eval r_psi [i, k] \\<down>) \\<Longrightarrow>\n    eval (r_consist_upto r_psi) [j, i, e] \\<up>", "have \"eval (r_constn 3 1) [j, r, i, e] \\<down>= 1\" for j r i e"], ["proof (prove)\ngoal (1 subgoal):\n 1. eval (r_constn 3 1) [j, r, i, e] \\<down>= 1", "by simp"], ["proof (state)\nthis:\n  eval (r_constn 3 1) [?j, ?r, ?i, ?e] \\<down>= 1\n\ngoal (2 subgoals):\n 1. \\<forall>k<j. eval r_psi [i, k] \\<down> \\<Longrightarrow>\n    eval (r_consist_upto r_psi) [j, i, e] =\n    (if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k then Some 0\n     else Some 1)\n 2. \\<not> (\\<forall>k<j. eval r_psi [i, k] \\<down>) \\<Longrightarrow>\n    eval (r_consist_upto r_psi) [j, i, e] \\<up>", "moreover"], ["proof (state)\nthis:\n  eval (r_constn 3 1) [?j, ?r, ?i, ?e] \\<down>= 1\n\ngoal (2 subgoals):\n 1. \\<forall>k<j. eval r_psi [i, k] \\<down> \\<Longrightarrow>\n    eval (r_consist_upto r_psi) [j, i, e] =\n    (if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k then Some 0\n     else Some 1)\n 2. \\<not> (\\<forall>k<j. eval r_psi [i, k] \\<down>) \\<Longrightarrow>\n    eval (r_consist_upto r_psi) [j, i, e] \\<up>", "have \"eval (Cn 4 r_psi [Id 4 2, Id 4 0]) [j, r, i, e] = eval r_psi [i, j]\" for j r i e"], ["proof (prove)\ngoal (1 subgoal):\n 1. eval (Cn 4 r_psi [recf.Id 4 2, recf.Id 4 0]) [j, r, i, e] =\n    eval r_psi [i, j]", "using assms(1)"], ["proof (prove)\nusing this:\n  recfn 2 r_psi\n\ngoal (1 subgoal):\n 1. eval (Cn 4 r_psi [recf.Id 4 2, recf.Id 4 0]) [j, r, i, e] =\n    eval r_psi [i, j]", "by simp"], ["proof (state)\nthis:\n  eval (Cn 4 r_psi [recf.Id 4 2, recf.Id 4 0]) [?j, ?r, ?i, ?e] =\n  eval r_psi [?i, ?j]\n\ngoal (2 subgoals):\n 1. \\<forall>k<j. eval r_psi [i, k] \\<down> \\<Longrightarrow>\n    eval (r_consist_upto r_psi) [j, i, e] =\n    (if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k then Some 0\n     else Some 1)\n 2. \\<not> (\\<forall>k<j. eval r_psi [i, k] \\<down>) \\<Longrightarrow>\n    eval (r_consist_upto r_psi) [j, i, e] \\<up>", "ultimately"], ["proof (chain)\npicking this:\n  recfn 4 g\n  eval (Cn 4 r_nth [recf.Id 4 3, recf.Id 4 0]) [?j, ?r, ?i, ?e] \\<down>=\n  e_nth ?e ?j\n  eval (r_constn 3 1) [?j, ?r, ?i, ?e] \\<down>= 1\n  eval (Cn 4 r_psi [recf.Id 4 2, recf.Id 4 0]) [?j, ?r, ?i, ?e] =\n  eval r_psi [?i, ?j]", "have g: \"eval g [j, r, i, e] =\n    (if eval r_psi [i, j] \\<up> then None\n     else if eval r_psi [i, j] \\<down>= e_nth e j then Some r else Some 1)\"\n    for j r i e"], ["proof (prove)\nusing this:\n  recfn 4 g\n  eval (Cn 4 r_nth [recf.Id 4 3, recf.Id 4 0]) [?j, ?r, ?i, ?e] \\<down>=\n  e_nth ?e ?j\n  eval (r_constn 3 1) [?j, ?r, ?i, ?e] \\<down>= 1\n  eval (Cn 4 r_psi [recf.Id 4 2, recf.Id 4 0]) [?j, ?r, ?i, ?e] =\n  eval r_psi [?i, ?j]\n\ngoal (1 subgoal):\n 1. eval g [j, r, i, e] =\n    (if eval r_psi [i, j] \\<up> then None\n     else if eval r_psi [i, j] \\<down>= e_nth e j then Some r else Some 1)", "using \\<open>recfn 4 g\\<close> g_def assms"], ["proof (prove)\nusing this:\n  recfn 4 g\n  eval (Cn 4 r_nth [recf.Id 4 3, recf.Id 4 0]) [?j, ?r, ?i, ?e] \\<down>=\n  e_nth ?e ?j\n  eval (r_constn 3 1) [?j, ?r, ?i, ?e] \\<down>= 1\n  eval (Cn 4 r_psi [recf.Id 4 2, recf.Id 4 0]) [?j, ?r, ?i, ?e] =\n  eval r_psi [?i, ?j]\n  recfn 4 g\n  g =\n  Cn 4 r_ifeq\n   [Cn 4 r_psi [recf.Id 4 2, recf.Id 4 0],\n    Cn 4 r_nth [recf.Id 4 3, recf.Id 4 0], recf.Id 4 1, r_constn 3 1]\n  recfn 2 r_psi\n\ngoal (1 subgoal):\n 1. eval g [j, r, i, e] =\n    (if eval r_psi [i, j] \\<up> then None\n     else if eval r_psi [i, j] \\<down>= e_nth e j then Some r else Some 1)", "by auto"], ["proof (state)\nthis:\n  eval g [?j, ?r, ?i, ?e] =\n  (if eval r_psi [?i, ?j] \\<up> then None\n   else if eval r_psi [?i, ?j] \\<down>= e_nth ?e ?j then Some ?r\n        else Some 1)\n\ngoal (2 subgoals):\n 1. \\<forall>k<j. eval r_psi [i, k] \\<down> \\<Longrightarrow>\n    eval (r_consist_upto r_psi) [j, i, e] =\n    (if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k then Some 0\n     else Some 1)\n 2. \\<not> (\\<forall>k<j. eval r_psi [i, k] \\<down>) \\<Longrightarrow>\n    eval (r_consist_upto r_psi) [j, i, e] \\<up>", "have goal1: \"\\<forall>k<j. eval r_psi [i, k] \\<down> \\<Longrightarrow>\n    eval (r_consist_upto r_psi) [j, i, e] =\n      (if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k then Some 0 else Some 1)\"\n    for j i e"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>k<j. eval r_psi [i, k] \\<down> \\<Longrightarrow>\n    eval (r_consist_upto r_psi) [j, i, e] =\n    (if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k then Some 0\n     else Some 1)", "proof (induction j)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>k<0. eval r_psi [i, k] \\<down> \\<Longrightarrow>\n    eval (r_consist_upto r_psi) [0, i, e] =\n    (if \\<forall>k<0. eval r_psi [i, k] \\<down>= e_nth e k then Some 0\n     else Some 1)\n 2. \\<And>j.\n       \\<lbrakk>\\<forall>k<j. eval r_psi [i, k] \\<down> \\<Longrightarrow>\n                eval (r_consist_upto r_psi) [j, i, e] =\n                (if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k\n                 then Some 0 else Some 1);\n        \\<forall>k<Suc j. eval r_psi [i, k] \\<down>\\<rbrakk>\n       \\<Longrightarrow> eval (r_consist_upto r_psi) [Suc j, i, e] =\n                         (if \\<forall>k<Suc j.\n                                eval r_psi [i, k] \\<down>= e_nth e k\n                          then Some 0 else Some 1)", "case 0"], ["proof (state)\nthis:\n  \\<forall>k<0. eval r_psi [i, k] \\<down>\n\ngoal (2 subgoals):\n 1. \\<forall>k<0. eval r_psi [i, k] \\<down> \\<Longrightarrow>\n    eval (r_consist_upto r_psi) [0, i, e] =\n    (if \\<forall>k<0. eval r_psi [i, k] \\<down>= e_nth e k then Some 0\n     else Some 1)\n 2. \\<And>j.\n       \\<lbrakk>\\<forall>k<j. eval r_psi [i, k] \\<down> \\<Longrightarrow>\n                eval (r_consist_upto r_psi) [j, i, e] =\n                (if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k\n                 then Some 0 else Some 1);\n        \\<forall>k<Suc j. eval r_psi [i, k] \\<down>\\<rbrakk>\n       \\<Longrightarrow> eval (r_consist_upto r_psi) [Suc j, i, e] =\n                         (if \\<forall>k<Suc j.\n                                eval r_psi [i, k] \\<down>= e_nth e k\n                          then Some 0 else Some 1)", "then"], ["proof (chain)\npicking this:\n  \\<forall>k<0. eval r_psi [i, k] \\<down>", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>k<0. eval r_psi [i, k] \\<down>\n\ngoal (1 subgoal):\n 1. eval (r_consist_upto r_psi) [0, i, e] =\n    (if \\<forall>k<0. eval r_psi [i, k] \\<down>= e_nth e k then Some 0\n     else Some 1)", "using r_consist_upto_def r_consist_upto_recfn assms eval_Pr_0"], ["proof (prove)\nusing this:\n  \\<forall>k<0. eval r_psi [i, k] \\<down>\n  r_consist_upto ?r_psi \\<equiv>\n  Let (Cn 4 r_ifeq\n        [Cn 4 ?r_psi [recf.Id 4 2, recf.Id 4 0],\n         Cn 4 r_nth [recf.Id 4 3, recf.Id 4 0], recf.Id 4 1, r_constn 3 1])\n   (Pr 2 (r_constn 1 0))\n  recfn 2 ?r_psi \\<Longrightarrow> recfn 3 (r_consist_upto ?r_psi)\n  recfn 2 r_psi\n  \\<lbrakk>recfn (Suc ?n) (Pr ?n ?f ?g); ?n = length ?xs\\<rbrakk>\n  \\<Longrightarrow> eval (Pr ?n ?f ?g) (0 # ?xs) = eval ?f ?xs\n\ngoal (1 subgoal):\n 1. eval (r_consist_upto r_psi) [0, i, e] =\n    (if \\<forall>k<0. eval r_psi [i, k] \\<down>= e_nth e k then Some 0\n     else Some 1)", "by simp"], ["proof (state)\nthis:\n  eval (r_consist_upto r_psi) [0, i, e] =\n  (if \\<forall>k<0. eval r_psi [i, k] \\<down>= e_nth e k then Some 0\n   else Some 1)\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<forall>k<j. eval r_psi [i, k] \\<down> \\<Longrightarrow>\n                eval (r_consist_upto r_psi) [j, i, e] =\n                (if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k\n                 then Some 0 else Some 1);\n        \\<forall>k<Suc j. eval r_psi [i, k] \\<down>\\<rbrakk>\n       \\<Longrightarrow> eval (r_consist_upto r_psi) [Suc j, i, e] =\n                         (if \\<forall>k<Suc j.\n                                eval r_psi [i, k] \\<down>= e_nth e k\n                          then Some 0 else Some 1)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<forall>k<j. eval r_psi [i, k] \\<down> \\<Longrightarrow>\n                eval (r_consist_upto r_psi) [j, i, e] =\n                (if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k\n                 then Some 0 else Some 1);\n        \\<forall>k<Suc j. eval r_psi [i, k] \\<down>\\<rbrakk>\n       \\<Longrightarrow> eval (r_consist_upto r_psi) [Suc j, i, e] =\n                         (if \\<forall>k<Suc j.\n                                eval r_psi [i, k] \\<down>= e_nth e k\n                          then Some 0 else Some 1)", "case (Suc j)"], ["proof (state)\nthis:\n  \\<forall>k<j. eval r_psi [i, k] \\<down> \\<Longrightarrow>\n  eval (r_consist_upto r_psi) [j, i, e] =\n  (if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k then Some 0\n   else Some 1)\n  \\<forall>k<Suc j. eval r_psi [i, k] \\<down>\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<forall>k<j. eval r_psi [i, k] \\<down> \\<Longrightarrow>\n                eval (r_consist_upto r_psi) [j, i, e] =\n                (if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k\n                 then Some 0 else Some 1);\n        \\<forall>k<Suc j. eval r_psi [i, k] \\<down>\\<rbrakk>\n       \\<Longrightarrow> eval (r_consist_upto r_psi) [Suc j, i, e] =\n                         (if \\<forall>k<Suc j.\n                                eval r_psi [i, k] \\<down>= e_nth e k\n                          then Some 0 else Some 1)", "then"], ["proof (chain)\npicking this:\n  \\<forall>k<j. eval r_psi [i, k] \\<down> \\<Longrightarrow>\n  eval (r_consist_upto r_psi) [j, i, e] =\n  (if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k then Some 0\n   else Some 1)\n  \\<forall>k<Suc j. eval r_psi [i, k] \\<down>", "have \"eval (r_consist_upto r_psi) [Suc j, i, e] =\n        eval g [j, the (eval (r_consist_upto r_psi) [j, i, e]), i, e]\""], ["proof (prove)\nusing this:\n  \\<forall>k<j. eval r_psi [i, k] \\<down> \\<Longrightarrow>\n  eval (r_consist_upto r_psi) [j, i, e] =\n  (if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k then Some 0\n   else Some 1)\n  \\<forall>k<Suc j. eval r_psi [i, k] \\<down>\n\ngoal (1 subgoal):\n 1. eval (r_consist_upto r_psi) [Suc j, i, e] =\n    eval g [j, the (eval (r_consist_upto r_psi) [j, i, e]), i, e]", "using assms eval_Pr_converg_Suc g_def r_consist_upto_def r_consist_upto_recfn"], ["proof (prove)\nusing this:\n  \\<forall>k<j. eval r_psi [i, k] \\<down> \\<Longrightarrow>\n  eval (r_consist_upto r_psi) [j, i, e] =\n  (if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k then Some 0\n   else Some 1)\n  \\<forall>k<Suc j. eval r_psi [i, k] \\<down>\n  recfn 2 r_psi\n  \\<lbrakk>recfn (Suc ?n) (Pr ?n ?f ?g); ?n = length ?xs;\n   eval (Pr ?n ?f ?g) (?x # ?xs) \\<down>\\<rbrakk>\n  \\<Longrightarrow> eval (Pr ?n ?f ?g) (Suc ?x # ?xs) =\n                    eval ?g (?x # the (eval (Pr ?n ?f ?g) (?x # ?xs)) # ?xs)\n  g =\n  Cn 4 r_ifeq\n   [Cn 4 r_psi [recf.Id 4 2, recf.Id 4 0],\n    Cn 4 r_nth [recf.Id 4 3, recf.Id 4 0], recf.Id 4 1, r_constn 3 1]\n  r_consist_upto ?r_psi \\<equiv>\n  Let (Cn 4 r_ifeq\n        [Cn 4 ?r_psi [recf.Id 4 2, recf.Id 4 0],\n         Cn 4 r_nth [recf.Id 4 3, recf.Id 4 0], recf.Id 4 1, r_constn 3 1])\n   (Pr 2 (r_constn 1 0))\n  recfn 2 ?r_psi \\<Longrightarrow> recfn 3 (r_consist_upto ?r_psi)\n\ngoal (1 subgoal):\n 1. eval (r_consist_upto r_psi) [Suc j, i, e] =\n    eval g [j, the (eval (r_consist_upto r_psi) [j, i, e]), i, e]", "by simp"], ["proof (state)\nthis:\n  eval (r_consist_upto r_psi) [Suc j, i, e] =\n  eval g [j, the (eval (r_consist_upto r_psi) [j, i, e]), i, e]\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<forall>k<j. eval r_psi [i, k] \\<down> \\<Longrightarrow>\n                eval (r_consist_upto r_psi) [j, i, e] =\n                (if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k\n                 then Some 0 else Some 1);\n        \\<forall>k<Suc j. eval r_psi [i, k] \\<down>\\<rbrakk>\n       \\<Longrightarrow> eval (r_consist_upto r_psi) [Suc j, i, e] =\n                         (if \\<forall>k<Suc j.\n                                eval r_psi [i, k] \\<down>= e_nth e k\n                          then Some 0 else Some 1)", "also"], ["proof (state)\nthis:\n  eval (r_consist_upto r_psi) [Suc j, i, e] =\n  eval g [j, the (eval (r_consist_upto r_psi) [j, i, e]), i, e]\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<forall>k<j. eval r_psi [i, k] \\<down> \\<Longrightarrow>\n                eval (r_consist_upto r_psi) [j, i, e] =\n                (if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k\n                 then Some 0 else Some 1);\n        \\<forall>k<Suc j. eval r_psi [i, k] \\<down>\\<rbrakk>\n       \\<Longrightarrow> eval (r_consist_upto r_psi) [Suc j, i, e] =\n                         (if \\<forall>k<Suc j.\n                                eval r_psi [i, k] \\<down>= e_nth e k\n                          then Some 0 else Some 1)", "have \"... = eval g [j, if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k then 0 else 1, i, e]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eval g [j, the (eval (r_consist_upto r_psi) [j, i, e]), i, e] =\n    eval g\n     [j, if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k then 0\n         else 1,\n      i, e]", "using Suc"], ["proof (prove)\nusing this:\n  \\<forall>k<j. eval r_psi [i, k] \\<down> \\<Longrightarrow>\n  eval (r_consist_upto r_psi) [j, i, e] =\n  (if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k then Some 0\n   else Some 1)\n  \\<forall>k<Suc j. eval r_psi [i, k] \\<down>\n\ngoal (1 subgoal):\n 1. eval g [j, the (eval (r_consist_upto r_psi) [j, i, e]), i, e] =\n    eval g\n     [j, if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k then 0\n         else 1,\n      i, e]", "by auto"], ["proof (state)\nthis:\n  eval g [j, the (eval (r_consist_upto r_psi) [j, i, e]), i, e] =\n  eval g\n   [j, if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k then 0 else 1,\n    i, e]\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<forall>k<j. eval r_psi [i, k] \\<down> \\<Longrightarrow>\n                eval (r_consist_upto r_psi) [j, i, e] =\n                (if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k\n                 then Some 0 else Some 1);\n        \\<forall>k<Suc j. eval r_psi [i, k] \\<down>\\<rbrakk>\n       \\<Longrightarrow> eval (r_consist_upto r_psi) [Suc j, i, e] =\n                         (if \\<forall>k<Suc j.\n                                eval r_psi [i, k] \\<down>= e_nth e k\n                          then Some 0 else Some 1)", "also"], ["proof (state)\nthis:\n  eval g [j, the (eval (r_consist_upto r_psi) [j, i, e]), i, e] =\n  eval g\n   [j, if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k then 0 else 1,\n    i, e]\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<forall>k<j. eval r_psi [i, k] \\<down> \\<Longrightarrow>\n                eval (r_consist_upto r_psi) [j, i, e] =\n                (if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k\n                 then Some 0 else Some 1);\n        \\<forall>k<Suc j. eval r_psi [i, k] \\<down>\\<rbrakk>\n       \\<Longrightarrow> eval (r_consist_upto r_psi) [Suc j, i, e] =\n                         (if \\<forall>k<Suc j.\n                                eval r_psi [i, k] \\<down>= e_nth e k\n                          then Some 0 else Some 1)", "have \"... \\<down>= (if eval r_psi [i, j] \\<down>= e_nth e j\n        then if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k then 0 else 1 else 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eval g\n     [j, if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k then 0\n         else 1,\n      i, e] \\<down>=\n    (if eval r_psi [i, j] \\<down>= e_nth e j\n     then if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k then 0\n          else 1\n     else 1)", "using g"], ["proof (prove)\nusing this:\n  eval g [?j, ?r, ?i, ?e] =\n  (if eval r_psi [?i, ?j] \\<up> then None\n   else if eval r_psi [?i, ?j] \\<down>= e_nth ?e ?j then Some ?r\n        else Some 1)\n\ngoal (1 subgoal):\n 1. eval g\n     [j, if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k then 0\n         else 1,\n      i, e] \\<down>=\n    (if eval r_psi [i, j] \\<down>= e_nth e j\n     then if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k then 0\n          else 1\n     else 1)", "by (simp add: Suc.prems)"], ["proof (state)\nthis:\n  eval g\n   [j, if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k then 0 else 1,\n    i, e] \\<down>=\n  (if eval r_psi [i, j] \\<down>= e_nth e j\n   then if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k then 0 else 1\n   else 1)\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<forall>k<j. eval r_psi [i, k] \\<down> \\<Longrightarrow>\n                eval (r_consist_upto r_psi) [j, i, e] =\n                (if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k\n                 then Some 0 else Some 1);\n        \\<forall>k<Suc j. eval r_psi [i, k] \\<down>\\<rbrakk>\n       \\<Longrightarrow> eval (r_consist_upto r_psi) [Suc j, i, e] =\n                         (if \\<forall>k<Suc j.\n                                eval r_psi [i, k] \\<down>= e_nth e k\n                          then Some 0 else Some 1)", "also"], ["proof (state)\nthis:\n  eval g\n   [j, if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k then 0 else 1,\n    i, e] \\<down>=\n  (if eval r_psi [i, j] \\<down>= e_nth e j\n   then if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k then 0 else 1\n   else 1)\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<forall>k<j. eval r_psi [i, k] \\<down> \\<Longrightarrow>\n                eval (r_consist_upto r_psi) [j, i, e] =\n                (if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k\n                 then Some 0 else Some 1);\n        \\<forall>k<Suc j. eval r_psi [i, k] \\<down>\\<rbrakk>\n       \\<Longrightarrow> eval (r_consist_upto r_psi) [Suc j, i, e] =\n                         (if \\<forall>k<Suc j.\n                                eval r_psi [i, k] \\<down>= e_nth e k\n                          then Some 0 else Some 1)", "have \"... \\<down>= (if \\<forall>k<Suc j. eval r_psi [i, k] \\<down>= e_nth e k then 0 else 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Some\n     (if eval r_psi [i, j] \\<down>= e_nth e j\n      then if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k then 0\n           else 1\n      else 1) \\<down>=\n    (if \\<forall>k<Suc j. eval r_psi [i, k] \\<down>= e_nth e k then 0\n     else 1)", "by (simp add: less_Suc_eq)"], ["proof (state)\nthis:\n  Some\n   (if eval r_psi [i, j] \\<down>= e_nth e j\n    then if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k then 0 else 1\n    else 1) \\<down>=\n  (if \\<forall>k<Suc j. eval r_psi [i, k] \\<down>= e_nth e k then 0 else 1)\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>\\<forall>k<j. eval r_psi [i, k] \\<down> \\<Longrightarrow>\n                eval (r_consist_upto r_psi) [j, i, e] =\n                (if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k\n                 then Some 0 else Some 1);\n        \\<forall>k<Suc j. eval r_psi [i, k] \\<down>\\<rbrakk>\n       \\<Longrightarrow> eval (r_consist_upto r_psi) [Suc j, i, e] =\n                         (if \\<forall>k<Suc j.\n                                eval r_psi [i, k] \\<down>= e_nth e k\n                          then Some 0 else Some 1)", "finally"], ["proof (chain)\npicking this:\n  eval (r_consist_upto r_psi) [Suc j, i, e] \\<down>=\n  (if \\<forall>k<Suc j. eval r_psi [i, k] \\<down>= e_nth e k then 0 else 1)", "show ?case"], ["proof (prove)\nusing this:\n  eval (r_consist_upto r_psi) [Suc j, i, e] \\<down>=\n  (if \\<forall>k<Suc j. eval r_psi [i, k] \\<down>= e_nth e k then 0 else 1)\n\ngoal (1 subgoal):\n 1. eval (r_consist_upto r_psi) [Suc j, i, e] =\n    (if \\<forall>k<Suc j. eval r_psi [i, k] \\<down>= e_nth e k then Some 0\n     else Some 1)", "by simp"], ["proof (state)\nthis:\n  eval (r_consist_upto r_psi) [Suc j, i, e] =\n  (if \\<forall>k<Suc j. eval r_psi [i, k] \\<down>= e_nth e k then Some 0\n   else Some 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>k<?j. eval r_psi [?i, k] \\<down> \\<Longrightarrow>\n  eval (r_consist_upto r_psi) [?j, ?i, ?e] =\n  (if \\<forall>k<?j. eval r_psi [?i, k] \\<down>= e_nth ?e k then Some 0\n   else Some 1)\n\ngoal (2 subgoals):\n 1. \\<forall>k<j. eval r_psi [i, k] \\<down> \\<Longrightarrow>\n    eval (r_consist_upto r_psi) [j, i, e] =\n    (if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k then Some 0\n     else Some 1)\n 2. \\<not> (\\<forall>k<j. eval r_psi [i, k] \\<down>) \\<Longrightarrow>\n    eval (r_consist_upto r_psi) [j, i, e] \\<up>", "then"], ["proof (chain)\npicking this:\n  \\<forall>k<?j. eval r_psi [?i, k] \\<down> \\<Longrightarrow>\n  eval (r_consist_upto r_psi) [?j, ?i, ?e] =\n  (if \\<forall>k<?j. eval r_psi [?i, k] \\<down>= e_nth ?e k then Some 0\n   else Some 1)", "show \"\\<forall>k<j. eval r_psi [i, k] \\<down> \\<Longrightarrow>\n    eval (r_consist_upto r_psi) [j, i, e] =\n    (if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k then Some 0 else Some 1)\""], ["proof (prove)\nusing this:\n  \\<forall>k<?j. eval r_psi [?i, k] \\<down> \\<Longrightarrow>\n  eval (r_consist_upto r_psi) [?j, ?i, ?e] =\n  (if \\<forall>k<?j. eval r_psi [?i, k] \\<down>= e_nth ?e k then Some 0\n   else Some 1)\n\ngoal (1 subgoal):\n 1. \\<forall>k<j. eval r_psi [i, k] \\<down> \\<Longrightarrow>\n    eval (r_consist_upto r_psi) [j, i, e] =\n    (if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k then Some 0\n     else Some 1)", "by simp"], ["proof (state)\nthis:\n  \\<forall>k<j. eval r_psi [i, k] \\<down> \\<Longrightarrow>\n  eval (r_consist_upto r_psi) [j, i, e] =\n  (if \\<forall>k<j. eval r_psi [i, k] \\<down>= e_nth e k then Some 0\n   else Some 1)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k<j. eval r_psi [i, k] \\<down>) \\<Longrightarrow>\n    eval (r_consist_upto r_psi) [j, i, e] \\<up>", "show \"\\<not> (\\<forall>k<j. eval r_psi [i, k] \\<down>) \\<Longrightarrow> eval (r_consist_upto r_psi) [j, i, e] \\<up>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k<j. eval r_psi [i, k] \\<down>) \\<Longrightarrow>\n    eval (r_consist_upto r_psi) [j, i, e] \\<up>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k<j. eval r_psi [i, k] \\<down>) \\<Longrightarrow>\n    eval (r_consist_upto r_psi) [j, i, e] \\<up>", "assume \"\\<not> (\\<forall>k<j. eval r_psi [i, k] \\<down>)\""], ["proof (state)\nthis:\n  \\<not> (\\<forall>k<j. eval r_psi [i, k] \\<down>)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k<j. eval r_psi [i, k] \\<down>) \\<Longrightarrow>\n    eval (r_consist_upto r_psi) [j, i, e] \\<up>", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<forall>k<j. eval r_psi [i, k] \\<down>)", "have \"\\<exists>k<j. eval r_psi [i, k] \\<up>\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>k<j. eval r_psi [i, k] \\<down>)\n\ngoal (1 subgoal):\n 1. \\<exists>k<j. eval r_psi [i, k] \\<up>", "by simp"], ["proof (state)\nthis:\n  \\<exists>k<j. eval r_psi [i, k] \\<up>\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k<j. eval r_psi [i, k] \\<down>) \\<Longrightarrow>\n    eval (r_consist_upto r_psi) [j, i, e] \\<up>", "let ?P = \"\\<lambda>k. k < j \\<and> eval r_psi [i, k] \\<up>\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k<j. eval r_psi [i, k] \\<down>) \\<Longrightarrow>\n    eval (r_consist_upto r_psi) [j, i, e] \\<up>", "define kmin where \"kmin = Least ?P\""], ["proof (state)\nthis:\n  kmin = (LEAST k. k < j \\<and> eval r_psi [i, k] \\<up>)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k<j. eval r_psi [i, k] \\<down>) \\<Longrightarrow>\n    eval (r_consist_upto r_psi) [j, i, e] \\<up>", "then"], ["proof (chain)\npicking this:\n  kmin = (LEAST k. k < j \\<and> eval r_psi [i, k] \\<up>)", "have \"?P kmin\""], ["proof (prove)\nusing this:\n  kmin = (LEAST k. k < j \\<and> eval r_psi [i, k] \\<up>)\n\ngoal (1 subgoal):\n 1. kmin < j \\<and> eval r_psi [i, kmin] \\<up>", "using LeastI_ex[of ?P] \\<open>\\<exists>k<j. eval r_psi [i, k] \\<up>\\<close>"], ["proof (prove)\nusing this:\n  kmin = (LEAST k. k < j \\<and> eval r_psi [i, k] \\<up>)\n  \\<exists>x<j. eval r_psi [i, x] \\<up> \\<Longrightarrow>\n  (LEAST k. k < j \\<and> eval r_psi [i, k] \\<up>) < j \\<and>\n  eval r_psi [i, LEAST k. k < j \\<and> eval r_psi [i, k] \\<up>] \\<up>\n  \\<exists>k<j. eval r_psi [i, k] \\<up>\n\ngoal (1 subgoal):\n 1. kmin < j \\<and> eval r_psi [i, kmin] \\<up>", "by auto"], ["proof (state)\nthis:\n  kmin < j \\<and> eval r_psi [i, kmin] \\<up>\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k<j. eval r_psi [i, k] \\<down>) \\<Longrightarrow>\n    eval (r_consist_upto r_psi) [j, i, e] \\<up>", "from kmin_def"], ["proof (chain)\npicking this:\n  kmin = (LEAST k. k < j \\<and> eval r_psi [i, k] \\<up>)", "have \"\\<And>k. k < kmin \\<Longrightarrow> \\<not> ?P k\""], ["proof (prove)\nusing this:\n  kmin = (LEAST k. k < j \\<and> eval r_psi [i, k] \\<up>)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k < kmin \\<Longrightarrow>\n       \\<not> (k < j \\<and> eval r_psi [i, k] \\<up>)", "using kmin_def not_less_Least[of _ ?P]"], ["proof (prove)\nusing this:\n  kmin = (LEAST k. k < j \\<and> eval r_psi [i, k] \\<up>)\n  kmin = (LEAST k. k < j \\<and> eval r_psi [i, k] \\<up>)\n  ?k < (LEAST x. x < j \\<and> eval r_psi [i, x] \\<up>) \\<Longrightarrow>\n  \\<not> (?k < j \\<and> eval r_psi [i, ?k] \\<up>)\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       k < kmin \\<Longrightarrow>\n       \\<not> (k < j \\<and> eval r_psi [i, k] \\<up>)", "by blast"], ["proof (state)\nthis:\n  ?k < kmin \\<Longrightarrow>\n  \\<not> (?k < j \\<and> eval r_psi [i, ?k] \\<up>)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k<j. eval r_psi [i, k] \\<down>) \\<Longrightarrow>\n    eval (r_consist_upto r_psi) [j, i, e] \\<up>", "then"], ["proof (chain)\npicking this:\n  ?k < kmin \\<Longrightarrow>\n  \\<not> (?k < j \\<and> eval r_psi [i, ?k] \\<up>)", "have \"\\<forall>k < kmin. eval r_psi [i, k] \\<down>\""], ["proof (prove)\nusing this:\n  ?k < kmin \\<Longrightarrow>\n  \\<not> (?k < j \\<and> eval r_psi [i, ?k] \\<up>)\n\ngoal (1 subgoal):\n 1. \\<forall>k<kmin. eval r_psi [i, k] \\<down>", "using \\<open>?P kmin\\<close>"], ["proof (prove)\nusing this:\n  ?k < kmin \\<Longrightarrow>\n  \\<not> (?k < j \\<and> eval r_psi [i, ?k] \\<up>)\n  kmin < j \\<and> eval r_psi [i, kmin] \\<up>\n\ngoal (1 subgoal):\n 1. \\<forall>k<kmin. eval r_psi [i, k] \\<down>", "by simp"], ["proof (state)\nthis:\n  \\<forall>k<kmin. eval r_psi [i, k] \\<down>\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k<j. eval r_psi [i, k] \\<down>) \\<Longrightarrow>\n    eval (r_consist_upto r_psi) [j, i, e] \\<up>", "then"], ["proof (chain)\npicking this:\n  \\<forall>k<kmin. eval r_psi [i, k] \\<down>", "have \"eval (r_consist_upto r_psi) [kmin, i, e] =\n        (if \\<forall>k<kmin. eval r_psi [i, k] \\<down>= e_nth e k then Some 0 else Some 1)\""], ["proof (prove)\nusing this:\n  \\<forall>k<kmin. eval r_psi [i, k] \\<down>\n\ngoal (1 subgoal):\n 1. eval (r_consist_upto r_psi) [kmin, i, e] =\n    (if \\<forall>k<kmin. eval r_psi [i, k] \\<down>= e_nth e k then Some 0\n     else Some 1)", "using goal1"], ["proof (prove)\nusing this:\n  \\<forall>k<kmin. eval r_psi [i, k] \\<down>\n  \\<forall>k<?j. eval r_psi [?i, k] \\<down> \\<Longrightarrow>\n  eval (r_consist_upto r_psi) [?j, ?i, ?e] =\n  (if \\<forall>k<?j. eval r_psi [?i, k] \\<down>= e_nth ?e k then Some 0\n   else Some 1)\n\ngoal (1 subgoal):\n 1. eval (r_consist_upto r_psi) [kmin, i, e] =\n    (if \\<forall>k<kmin. eval r_psi [i, k] \\<down>= e_nth e k then Some 0\n     else Some 1)", "by simp"], ["proof (state)\nthis:\n  eval (r_consist_upto r_psi) [kmin, i, e] =\n  (if \\<forall>k<kmin. eval r_psi [i, k] \\<down>= e_nth e k then Some 0\n   else Some 1)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k<j. eval r_psi [i, k] \\<down>) \\<Longrightarrow>\n    eval (r_consist_upto r_psi) [j, i, e] \\<up>", "moreover"], ["proof (state)\nthis:\n  eval (r_consist_upto r_psi) [kmin, i, e] =\n  (if \\<forall>k<kmin. eval r_psi [i, k] \\<down>= e_nth e k then Some 0\n   else Some 1)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k<j. eval r_psi [i, k] \\<down>) \\<Longrightarrow>\n    eval (r_consist_upto r_psi) [j, i, e] \\<up>", "have \"eval r_psi [i, kmin] \\<up>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eval r_psi [i, kmin] \\<up>", "using \\<open>?P kmin\\<close>"], ["proof (prove)\nusing this:\n  kmin < j \\<and> eval r_psi [i, kmin] \\<up>\n\ngoal (1 subgoal):\n 1. eval r_psi [i, kmin] \\<up>", "by simp"], ["proof (state)\nthis:\n  eval r_psi [i, kmin] \\<up>\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k<j. eval r_psi [i, k] \\<down>) \\<Longrightarrow>\n    eval (r_consist_upto r_psi) [j, i, e] \\<up>", "ultimately"], ["proof (chain)\npicking this:\n  eval (r_consist_upto r_psi) [kmin, i, e] =\n  (if \\<forall>k<kmin. eval r_psi [i, k] \\<down>= e_nth e k then Some 0\n   else Some 1)\n  eval r_psi [i, kmin] \\<up>", "have \"eval (r_consist_upto r_psi) [Suc kmin, i, e] \\<up>\""], ["proof (prove)\nusing this:\n  eval (r_consist_upto r_psi) [kmin, i, e] =\n  (if \\<forall>k<kmin. eval r_psi [i, k] \\<down>= e_nth e k then Some 0\n   else Some 1)\n  eval r_psi [i, kmin] \\<up>\n\ngoal (1 subgoal):\n 1. eval (r_consist_upto r_psi) [Suc kmin, i, e] \\<up>", "using r_consist_upto_def g assms"], ["proof (prove)\nusing this:\n  eval (r_consist_upto r_psi) [kmin, i, e] =\n  (if \\<forall>k<kmin. eval r_psi [i, k] \\<down>= e_nth e k then Some 0\n   else Some 1)\n  eval r_psi [i, kmin] \\<up>\n  r_consist_upto ?r_psi \\<equiv>\n  Let (Cn 4 r_ifeq\n        [Cn 4 ?r_psi [recf.Id 4 2, recf.Id 4 0],\n         Cn 4 r_nth [recf.Id 4 3, recf.Id 4 0], recf.Id 4 1, r_constn 3 1])\n   (Pr 2 (r_constn 1 0))\n  eval g [?j, ?r, ?i, ?e] =\n  (if eval r_psi [?i, ?j] \\<up> then None\n   else if eval r_psi [?i, ?j] \\<down>= e_nth ?e ?j then Some ?r\n        else Some 1)\n  recfn 2 r_psi\n\ngoal (1 subgoal):\n 1. eval (r_consist_upto r_psi) [Suc kmin, i, e] \\<up>", "by simp"], ["proof (state)\nthis:\n  eval (r_consist_upto r_psi) [Suc kmin, i, e] \\<up>\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k<j. eval r_psi [i, k] \\<down>) \\<Longrightarrow>\n    eval (r_consist_upto r_psi) [j, i, e] \\<up>", "moreover"], ["proof (state)\nthis:\n  eval (r_consist_upto r_psi) [Suc kmin, i, e] \\<up>\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k<j. eval r_psi [i, k] \\<down>) \\<Longrightarrow>\n    eval (r_consist_upto r_psi) [j, i, e] \\<up>", "have \"j \\<ge> kmin\""], ["proof (prove)\ngoal (1 subgoal):\n 1. kmin \\<le> j", "using \\<open>?P kmin\\<close>"], ["proof (prove)\nusing this:\n  kmin < j \\<and> eval r_psi [i, kmin] \\<up>\n\ngoal (1 subgoal):\n 1. kmin \\<le> j", "by simp"], ["proof (state)\nthis:\n  kmin \\<le> j\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k<j. eval r_psi [i, k] \\<down>) \\<Longrightarrow>\n    eval (r_consist_upto r_psi) [j, i, e] \\<up>", "ultimately"], ["proof (chain)\npicking this:\n  eval (r_consist_upto r_psi) [Suc kmin, i, e] \\<up>\n  kmin \\<le> j", "show \"eval (r_consist_upto r_psi) [j, i, e] \\<up>\""], ["proof (prove)\nusing this:\n  eval (r_consist_upto r_psi) [Suc kmin, i, e] \\<up>\n  kmin \\<le> j\n\ngoal (1 subgoal):\n 1. eval (r_consist_upto r_psi) [j, i, e] \\<up>", "using r_consist_upto_def r_consist_upto_recfn \\<open>?P kmin\\<close> eval_Pr_converg_le assms"], ["proof (prove)\nusing this:\n  eval (r_consist_upto r_psi) [Suc kmin, i, e] \\<up>\n  kmin \\<le> j\n  r_consist_upto ?r_psi \\<equiv>\n  Let (Cn 4 r_ifeq\n        [Cn 4 ?r_psi [recf.Id 4 2, recf.Id 4 0],\n         Cn 4 r_nth [recf.Id 4 3, recf.Id 4 0], recf.Id 4 1, r_constn 3 1])\n   (Pr 2 (r_constn 1 0))\n  recfn 2 ?r_psi \\<Longrightarrow> recfn 3 (r_consist_upto ?r_psi)\n  kmin < j \\<and> eval r_psi [i, kmin] \\<up>\n  \\<lbrakk>recfn (Suc ?n) (Pr ?n ?f ?g); ?n = length ?xs;\n   eval (Pr ?n ?f ?g) (?x # ?xs) \\<down>; ?y \\<le> ?x\\<rbrakk>\n  \\<Longrightarrow> eval (Pr ?n ?f ?g) (?y # ?xs) \\<down>\n  recfn 2 r_psi\n\ngoal (1 subgoal):\n 1. eval (r_consist_upto r_psi) [j, i, e] \\<up>", "by (metis (full_types) Suc_leI length_Cons list.size(3) numeral_2_eq_2 numeral_3_eq_3)"], ["proof (state)\nthis:\n  eval (r_consist_upto r_psi) [j, i, e] \\<up>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> (\\<forall>k<j. eval r_psi [i, k] \\<down>) \\<Longrightarrow>\n  eval (r_consist_upto r_psi) [j, i, e] \\<up>\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The next function provides the consistency decision functions we\nneed.\\<close>"], ["", "definition consistent :: \"partial2 \\<Rightarrow> partial2\" where\n  \"consistent \\<psi> i e \\<equiv>\n    if \\<forall>k<e_length e. \\<psi> i k \\<down>\n    then if \\<forall>k<e_length e. \\<psi> i k \\<down>= e_nth e k\n         then Some 0 else Some 1\n    else None\""], ["", "text \\<open>Given $i$ and $e$, @{term \"consistent \\<psi>\"} decides whether $e$\nis a prefix of $\\psi_i$, provided $\\psi_i$ is defined for the length of\n$e$.\\<close>"], ["", "definition r_consistent :: \"recf \\<Rightarrow> recf\" where\n  \"r_consistent r_psi \\<equiv>\n     Cn 2 (r_consist_upto r_psi) [Cn 2 r_length [Id 2 1], Id 2 0, Id 2 1]\""], ["", "lemma r_consistent_recfn [simp]: \"recfn 2 r_psi \\<Longrightarrow> recfn 2 (r_consistent r_psi)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. recfn 2 r_psi \\<Longrightarrow> recfn 2 (r_consistent r_psi)", "using r_consistent_def r_consist_upto_recfn"], ["proof (prove)\nusing this:\n  r_consistent ?r_psi \\<equiv>\n  Cn 2 (r_consist_upto ?r_psi)\n   [Cn 2 r_length [recf.Id 2 1], recf.Id 2 0, recf.Id 2 1]\n  recfn 2 ?r_psi \\<Longrightarrow> recfn 3 (r_consist_upto ?r_psi)\n\ngoal (1 subgoal):\n 1. recfn 2 r_psi \\<Longrightarrow> recfn 2 (r_consistent r_psi)", "by simp"], ["", "lemma r_consistent_converg:\n  assumes \"recfn 2 r_psi\" and \"\\<forall>k<e_length e. eval r_psi [i, k] \\<down>\"\n  shows \"eval (r_consistent r_psi) [i, e] \\<down>=\n    (if \\<forall>k<e_length e. eval r_psi [i, k] \\<down>= e_nth e k then 0 else 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eval (r_consistent r_psi) [i, e] \\<down>=\n    (if \\<forall>k<e_length e. eval r_psi [i, k] \\<down>= e_nth e k then 0\n     else 1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. eval (r_consistent r_psi) [i, e] \\<down>=\n    (if \\<forall>k<e_length e. eval r_psi [i, k] \\<down>= e_nth e k then 0\n     else 1)", "have \"eval (r_consistent r_psi) [i, e] = eval (r_consist_upto r_psi) [e_length e, i, e]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eval (r_consistent r_psi) [i, e] =\n    eval (r_consist_upto r_psi) [e_length e, i, e]", "using r_consistent_def r_consist_upto_recfn assms(1)"], ["proof (prove)\nusing this:\n  r_consistent ?r_psi \\<equiv>\n  Cn 2 (r_consist_upto ?r_psi)\n   [Cn 2 r_length [recf.Id 2 1], recf.Id 2 0, recf.Id 2 1]\n  recfn 2 ?r_psi \\<Longrightarrow> recfn 3 (r_consist_upto ?r_psi)\n  recfn 2 r_psi\n\ngoal (1 subgoal):\n 1. eval (r_consistent r_psi) [i, e] =\n    eval (r_consist_upto r_psi) [e_length e, i, e]", "by simp"], ["proof (state)\nthis:\n  eval (r_consistent r_psi) [i, e] =\n  eval (r_consist_upto r_psi) [e_length e, i, e]\n\ngoal (1 subgoal):\n 1. eval (r_consistent r_psi) [i, e] \\<down>=\n    (if \\<forall>k<e_length e. eval r_psi [i, k] \\<down>= e_nth e k then 0\n     else 1)", "then"], ["proof (chain)\npicking this:\n  eval (r_consistent r_psi) [i, e] =\n  eval (r_consist_upto r_psi) [e_length e, i, e]", "show ?thesis"], ["proof (prove)\nusing this:\n  eval (r_consistent r_psi) [i, e] =\n  eval (r_consist_upto r_psi) [e_length e, i, e]\n\ngoal (1 subgoal):\n 1. eval (r_consistent r_psi) [i, e] \\<down>=\n    (if \\<forall>k<e_length e. eval r_psi [i, k] \\<down>= e_nth e k then 0\n     else 1)", "using assms r_consist_upto(1)"], ["proof (prove)\nusing this:\n  eval (r_consistent r_psi) [i, e] =\n  eval (r_consist_upto r_psi) [e_length e, i, e]\n  recfn 2 r_psi\n  \\<forall>k<e_length e. eval r_psi [i, k] \\<down>\n  \\<lbrakk>recfn 2 ?r_psi;\n   \\<forall>k<?j. eval ?r_psi [?i, k] \\<down>\\<rbrakk>\n  \\<Longrightarrow> eval (r_consist_upto ?r_psi) [?j, ?i, ?e] =\n                    (if \\<forall>k<?j.\n                           eval ?r_psi [?i, k] \\<down>= e_nth ?e k\n                     then Some 0 else Some 1)\n\ngoal (1 subgoal):\n 1. eval (r_consistent r_psi) [i, e] \\<down>=\n    (if \\<forall>k<e_length e. eval r_psi [i, k] \\<down>= e_nth e k then 0\n     else 1)", "by simp"], ["proof (state)\nthis:\n  eval (r_consistent r_psi) [i, e] \\<down>=\n  (if \\<forall>k<e_length e. eval r_psi [i, k] \\<down>= e_nth e k then 0\n   else 1)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma r_consistent_diverg:\n  assumes \"recfn 2 r_psi\" and \"\\<exists>k<e_length e. eval r_psi [i, k] \\<up>\"\n  shows \"eval (r_consistent r_psi) [i, e] \\<up>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eval (r_consistent r_psi) [i, e] \\<up>", "unfolding r_consistent_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. eval\n     (Cn 2 (r_consist_upto r_psi)\n       [Cn 2 r_length [recf.Id 2 1], recf.Id 2 0, recf.Id 2 1])\n     [i, e] \\<up>", "using r_consist_upto_recfn[OF assms(1)] r_consist_upto[OF assms(1)] assms(2)"], ["proof (prove)\nusing this:\n  recfn 3 (r_consist_upto r_psi)\n  \\<forall>k<?j. eval r_psi [?i, k] \\<down> \\<Longrightarrow>\n  eval (r_consist_upto r_psi) [?j, ?i, ?e] =\n  (if \\<forall>k<?j. eval r_psi [?i, k] \\<down>= e_nth ?e k then Some 0\n   else Some 1)\n  \\<not> (\\<forall>k<?j. eval r_psi [?i, k] \\<down>) \\<Longrightarrow>\n  eval (r_consist_upto r_psi) [?j, ?i, ?e] \\<up>\n  \\<exists>k<e_length e. eval r_psi [i, k] \\<up>\n\ngoal (1 subgoal):\n 1. eval\n     (Cn 2 (r_consist_upto r_psi)\n       [Cn 2 r_length [recf.Id 2 1], recf.Id 2 0, recf.Id 2 1])\n     [i, e] \\<up>", "by simp"], ["", "lemma r_consistent:\n  assumes \"recfn 2 r_psi\" and \"\\<forall>x y. eval r_psi [x, y] = \\<psi> x y\"\n  shows \"eval (r_consistent r_psi) [i, e] = consistent \\<psi> i e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eval (r_consistent r_psi) [i, e] = consistent \\<psi> i e", "proof (cases \"\\<forall>k<e_length e. \\<psi> i k \\<down>\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>k<e_length e. \\<psi> i k \\<down> \\<Longrightarrow>\n    eval (r_consistent r_psi) [i, e] = consistent \\<psi> i e\n 2. \\<not> (\\<forall>k<e_length e. \\<psi> i k \\<down>) \\<Longrightarrow>\n    eval (r_consistent r_psi) [i, e] = consistent \\<psi> i e", "case True"], ["proof (state)\nthis:\n  \\<forall>k<e_length e. \\<psi> i k \\<down>\n\ngoal (2 subgoals):\n 1. \\<forall>k<e_length e. \\<psi> i k \\<down> \\<Longrightarrow>\n    eval (r_consistent r_psi) [i, e] = consistent \\<psi> i e\n 2. \\<not> (\\<forall>k<e_length e. \\<psi> i k \\<down>) \\<Longrightarrow>\n    eval (r_consistent r_psi) [i, e] = consistent \\<psi> i e", "then"], ["proof (chain)\npicking this:\n  \\<forall>k<e_length e. \\<psi> i k \\<down>", "have \"\\<forall>k<e_length e. eval r_psi [i, k] \\<down>\""], ["proof (prove)\nusing this:\n  \\<forall>k<e_length e. \\<psi> i k \\<down>\n\ngoal (1 subgoal):\n 1. \\<forall>k<e_length e. eval r_psi [i, k] \\<down>", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>k<e_length e. \\<psi> i k \\<down>\n  recfn 2 r_psi\n  \\<forall>x y. eval r_psi [x, y] = \\<psi> x y\n\ngoal (1 subgoal):\n 1. \\<forall>k<e_length e. eval r_psi [i, k] \\<down>", "by simp"], ["proof (state)\nthis:\n  \\<forall>k<e_length e. eval r_psi [i, k] \\<down>\n\ngoal (2 subgoals):\n 1. \\<forall>k<e_length e. \\<psi> i k \\<down> \\<Longrightarrow>\n    eval (r_consistent r_psi) [i, e] = consistent \\<psi> i e\n 2. \\<not> (\\<forall>k<e_length e. \\<psi> i k \\<down>) \\<Longrightarrow>\n    eval (r_consistent r_psi) [i, e] = consistent \\<psi> i e", "then"], ["proof (chain)\npicking this:\n  \\<forall>k<e_length e. eval r_psi [i, k] \\<down>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>k<e_length e. eval r_psi [i, k] \\<down>\n\ngoal (1 subgoal):\n 1. eval (r_consistent r_psi) [i, e] = consistent \\<psi> i e", "unfolding consistent_def"], ["proof (prove)\nusing this:\n  \\<forall>k<e_length e. eval r_psi [i, k] \\<down>\n\ngoal (1 subgoal):\n 1. eval (r_consistent r_psi) [i, e] =\n    (if \\<forall>k<e_length e. \\<psi> i k \\<down>\n     then if \\<forall>k<e_length e. \\<psi> i k \\<down>= e_nth e k\n          then Some 0 else Some 1\n     else None)", "using True"], ["proof (prove)\nusing this:\n  \\<forall>k<e_length e. eval r_psi [i, k] \\<down>\n  \\<forall>k<e_length e. \\<psi> i k \\<down>\n\ngoal (1 subgoal):\n 1. eval (r_consistent r_psi) [i, e] =\n    (if \\<forall>k<e_length e. \\<psi> i k \\<down>\n     then if \\<forall>k<e_length e. \\<psi> i k \\<down>= e_nth e k\n          then Some 0 else Some 1\n     else None)", "by (simp add: assms r_consistent_converg)"], ["proof (state)\nthis:\n  eval (r_consistent r_psi) [i, e] = consistent \\<psi> i e\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k<e_length e. \\<psi> i k \\<down>) \\<Longrightarrow>\n    eval (r_consistent r_psi) [i, e] = consistent \\<psi> i e", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k<e_length e. \\<psi> i k \\<down>) \\<Longrightarrow>\n    eval (r_consistent r_psi) [i, e] = consistent \\<psi> i e", "case False"], ["proof (state)\nthis:\n  \\<not> (\\<forall>k<e_length e. \\<psi> i k \\<down>)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k<e_length e. \\<psi> i k \\<down>) \\<Longrightarrow>\n    eval (r_consistent r_psi) [i, e] = consistent \\<psi> i e", "then"], ["proof (chain)\npicking this:\n  \\<not> (\\<forall>k<e_length e. \\<psi> i k \\<down>)", "have \"consistent \\<psi> i e \\<up>\""], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>k<e_length e. \\<psi> i k \\<down>)\n\ngoal (1 subgoal):\n 1. consistent \\<psi> i e \\<up>", "unfolding consistent_def"], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>k<e_length e. \\<psi> i k \\<down>)\n\ngoal (1 subgoal):\n 1. (if \\<forall>k<e_length e. \\<psi> i k \\<down>\n     then if \\<forall>k<e_length e. \\<psi> i k \\<down>= e_nth e k\n          then Some 0 else Some 1\n     else None) \\<up>", "by auto"], ["proof (state)\nthis:\n  consistent \\<psi> i e \\<up>\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k<e_length e. \\<psi> i k \\<down>) \\<Longrightarrow>\n    eval (r_consistent r_psi) [i, e] = consistent \\<psi> i e", "moreover"], ["proof (state)\nthis:\n  consistent \\<psi> i e \\<up>\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k<e_length e. \\<psi> i k \\<down>) \\<Longrightarrow>\n    eval (r_consistent r_psi) [i, e] = consistent \\<psi> i e", "have \"eval (r_consistent r_psi) [i, e] \\<up>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eval (r_consistent r_psi) [i, e] \\<up>", "using r_consistent_diverg[OF assms(1)] assms False"], ["proof (prove)\nusing this:\n  \\<exists>k<e_length ?e. eval r_psi [?i, k] \\<up> \\<Longrightarrow>\n  eval (r_consistent r_psi) [?i, ?e] \\<up>\n  recfn 2 r_psi\n  \\<forall>x y. eval r_psi [x, y] = \\<psi> x y\n  \\<not> (\\<forall>k<e_length e. \\<psi> i k \\<down>)\n\ngoal (1 subgoal):\n 1. eval (r_consistent r_psi) [i, e] \\<up>", "by simp"], ["proof (state)\nthis:\n  eval (r_consistent r_psi) [i, e] \\<up>\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>k<e_length e. \\<psi> i k \\<down>) \\<Longrightarrow>\n    eval (r_consistent r_psi) [i, e] = consistent \\<psi> i e", "ultimately"], ["proof (chain)\npicking this:\n  consistent \\<psi> i e \\<up>\n  eval (r_consistent r_psi) [i, e] \\<up>", "show ?thesis"], ["proof (prove)\nusing this:\n  consistent \\<psi> i e \\<up>\n  eval (r_consistent r_psi) [i, e] \\<up>\n\ngoal (1 subgoal):\n 1. eval (r_consistent r_psi) [i, e] = consistent \\<psi> i e", "by simp"], ["proof (state)\nthis:\n  eval (r_consistent r_psi) [i, e] = consistent \\<psi> i e\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma consistent_in_P2:\n  assumes \"\\<psi> \\<in> \\<P>\\<^sup>2\"\n  shows \"consistent \\<psi> \\<in> \\<P>\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. consistent \\<psi> \\<in> \\<P>\\<^sup>2", "using assms r_consistent P2E[OF assms(1)] P2I r_consistent_recfn"], ["proof (prove)\nusing this:\n  \\<psi> \\<in> \\<P>\\<^sup>2\n  \\<lbrakk>recfn 2 ?r_psi;\n   \\<forall>x y. eval ?r_psi [x, y] = ?\\<psi> x y\\<rbrakk>\n  \\<Longrightarrow> eval (r_consistent ?r_psi) [?i, ?e] =\n                    consistent ?\\<psi> ?i ?e\n  (\\<And>r.\n      \\<lbrakk>recfn 2 r; \\<forall>x y. eval r [x, y] = \\<psi> x y\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n  \\<lbrakk>recfn 2 ?r; \\<And>x y. eval ?r [x, y] = ?f x y\\<rbrakk>\n  \\<Longrightarrow> ?f \\<in> \\<P>\\<^sup>2\n  recfn 2 ?r_psi \\<Longrightarrow> recfn 2 (r_consistent ?r_psi)\n\ngoal (1 subgoal):\n 1. consistent \\<psi> \\<in> \\<P>\\<^sup>2", "by metis"], ["", "lemma consistent_for_R2:\n  assumes \"\\<psi> \\<in> \\<R>\\<^sup>2\"\n  shows \"consistent \\<psi> i e =\n    (if \\<forall>j<e_length e. \\<psi> i j \\<down>= e_nth e j then Some 0 else Some 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. consistent \\<psi> i e =\n    (if \\<forall>j<e_length e. \\<psi> i j \\<down>= e_nth e j then Some 0\n     else Some 1)", "using assms"], ["proof (prove)\nusing this:\n  \\<psi> \\<in> \\<R>\\<^sup>2\n\ngoal (1 subgoal):\n 1. consistent \\<psi> i e =\n    (if \\<forall>j<e_length e. \\<psi> i j \\<down>= e_nth e j then Some 0\n     else Some 1)", "by (simp add: consistent_def)"], ["", "lemma consistent_init:\n  assumes \"\\<psi> \\<in> \\<R>\\<^sup>2\" and \"f \\<in> \\<R>\"\n  shows \"consistent \\<psi> i (f \\<triangleright> n) = (if \\<psi> i \\<triangleright> n = f \\<triangleright> n then Some 0 else Some 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. consistent \\<psi> i (f \\<triangleright> n) =\n    (if \\<psi> i \\<triangleright> n = f \\<triangleright> n then Some 0\n     else Some 1)", "using consistent_def[of _ _ \"init f n\"] assms  init_eq_iff_eq_upto"], ["proof (prove)\nusing this:\n  consistent ?\\<psi> ?i (f \\<triangleright> n) \\<equiv>\n  if \\<forall>k<e_length (f \\<triangleright> n). ?\\<psi> ?i k \\<down>\n  then if \\<forall>k<e_length (f \\<triangleright> n).\n             ?\\<psi> ?i k \\<down>= e_nth (f \\<triangleright> n) k\n       then Some 0 else Some 1\n  else None\n  \\<psi> \\<in> \\<R>\\<^sup>2\n  f \\<in> \\<R>\n  \\<lbrakk>?g \\<in> \\<R>; ?f \\<in> \\<R>\\<rbrakk>\n  \\<Longrightarrow> (\\<forall>j<Suc ?n. ?g j = ?f j) =\n                    (?g \\<triangleright> ?n = ?f \\<triangleright> ?n)\n\ngoal (1 subgoal):\n 1. consistent \\<psi> i (f \\<triangleright> n) =\n    (if \\<psi> i \\<triangleright> n = f \\<triangleright> n then Some 0\n     else Some 1)", "by simp"], ["", "lemma consistent_in_R2:\n  assumes \"\\<psi> \\<in> \\<R>\\<^sup>2\"\n  shows \"consistent \\<psi> \\<in> \\<R>\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. consistent \\<psi> \\<in> \\<R>\\<^sup>2", "using total2I consistent_in_P2 consistent_for_R2[OF assms] P2_total_imp_R2 R2_imp_P2 assms"], ["proof (prove)\nusing this:\n  (\\<And>x y. ?f x y \\<down>) \\<Longrightarrow> total2 ?f\n  ?\\<psi> \\<in> \\<P>\\<^sup>2 \\<Longrightarrow>\n  consistent ?\\<psi> \\<in> \\<P>\\<^sup>2\n  consistent \\<psi> ?i ?e =\n  (if \\<forall>j<e_length ?e. \\<psi> ?i j \\<down>= e_nth ?e j then Some 0\n   else Some 1)\n  \\<lbrakk>?f \\<in> \\<P>\\<^sup>2; total2 ?f\\<rbrakk>\n  \\<Longrightarrow> ?f \\<in> \\<R>\\<^sup>2\n  ?f \\<in> \\<R>\\<^sup>2 \\<Longrightarrow> ?f \\<in> \\<P>\\<^sup>2\n  \\<psi> \\<in> \\<R>\\<^sup>2\n\ngoal (1 subgoal):\n 1. consistent \\<psi> \\<in> \\<R>\\<^sup>2", "by (metis option.simps(3))"], ["", "text \\<open>For total hypothesis spaces the next function computes the\nminimum hypothesis consistent with a given prefix. It diverges if no such\nhypothesis exists.\\<close>"], ["", "definition min_cons_hyp :: \"partial2 \\<Rightarrow> partial1\" where\n  \"min_cons_hyp \\<psi> e \\<equiv>\n    if \\<exists>i. consistent \\<psi> i e \\<down>= 0 then Some (LEAST i. consistent \\<psi> i e \\<down>= 0) else None\""], ["", "lemma min_cons_hyp_in_P1:\n  assumes \"\\<psi> \\<in> \\<R>\\<^sup>2\"\n  shows \"min_cons_hyp \\<psi> \\<in> \\<P>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. min_cons_hyp \\<psi> \\<in> \\<P>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. min_cons_hyp \\<psi> \\<in> \\<P>", "from assms consistent_in_R2"], ["proof (chain)\npicking this:\n  \\<psi> \\<in> \\<R>\\<^sup>2\n  ?\\<psi> \\<in> \\<R>\\<^sup>2 \\<Longrightarrow>\n  consistent ?\\<psi> \\<in> \\<R>\\<^sup>2", "obtain rc where\n    rc: \"recfn 2 rc\" \"total rc\" \"\\<And>i e. eval rc [i, e] = consistent \\<psi> i e\""], ["proof (prove)\nusing this:\n  \\<psi> \\<in> \\<R>\\<^sup>2\n  ?\\<psi> \\<in> \\<R>\\<^sup>2 \\<Longrightarrow>\n  consistent ?\\<psi> \\<in> \\<R>\\<^sup>2\n\ngoal (1 subgoal):\n 1. (\\<And>rc.\n        \\<lbrakk>recfn 2 rc; Partial_Recursive.total rc;\n         \\<And>i e. eval rc [i, e] = consistent \\<psi> i e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using R2E[of \"consistent \\<psi>\"]"], ["proof (prove)\nusing this:\n  \\<psi> \\<in> \\<R>\\<^sup>2\n  ?\\<psi> \\<in> \\<R>\\<^sup>2 \\<Longrightarrow>\n  consistent ?\\<psi> \\<in> \\<R>\\<^sup>2\n  \\<lbrakk>consistent \\<psi> \\<in> \\<R>\\<^sup>2;\n   \\<And>r.\n      \\<lbrakk>recfn 2 r; Partial_Recursive.total r;\n       consistent \\<psi> =\n       (\\<lambda>x\\<^sub>1 x\\<^sub>2.\n           eval r [x\\<^sub>1, x\\<^sub>2])\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>rc.\n        \\<lbrakk>recfn 2 rc; Partial_Recursive.total rc;\n         \\<And>i e. eval rc [i, e] = consistent \\<psi> i e\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  recfn 2 rc\n  Partial_Recursive.total rc\n  eval rc [?i, ?e] = consistent \\<psi> ?i ?e\n\ngoal (1 subgoal):\n 1. min_cons_hyp \\<psi> \\<in> \\<P>", "define r where \"r = Mn 1 rc\""], ["proof (state)\nthis:\n  r = Mn 1 rc\n\ngoal (1 subgoal):\n 1. min_cons_hyp \\<psi> \\<in> \\<P>", "then"], ["proof (chain)\npicking this:\n  r = Mn 1 rc", "have \"recfn 1 r\""], ["proof (prove)\nusing this:\n  r = Mn 1 rc\n\ngoal (1 subgoal):\n 1. recfn 1 r", "using rc(1)"], ["proof (prove)\nusing this:\n  r = Mn 1 rc\n  recfn 2 rc\n\ngoal (1 subgoal):\n 1. recfn 1 r", "by simp"], ["proof (state)\nthis:\n  recfn 1 r\n\ngoal (1 subgoal):\n 1. min_cons_hyp \\<psi> \\<in> \\<P>", "moreover"], ["proof (state)\nthis:\n  recfn 1 r\n\ngoal (1 subgoal):\n 1. min_cons_hyp \\<psi> \\<in> \\<P>", "from this"], ["proof (chain)\npicking this:\n  recfn 1 r", "have \"eval r [e] = min_cons_hyp \\<psi> e\" for e"], ["proof (prove)\nusing this:\n  recfn 1 r\n\ngoal (1 subgoal):\n 1. eval r [e] = min_cons_hyp \\<psi> e", "using r_def eval_Mn'[of 1 rc \"[e]\"] rc min_cons_hyp_def assms"], ["proof (prove)\nusing this:\n  recfn 1 r\n  r = Mn 1 rc\n  recfn (length [e]) (Mn 1 rc) \\<Longrightarrow>\n  eval (Mn 1 rc) [e] =\n  (if \\<exists>z.\n         eval rc [z, e] \\<down>= 0 \\<and>\n         (\\<forall>y<z. eval rc [y, e] \\<down>)\n   then Some (LEAST z. eval rc [z, e] \\<down>= 0) else None)\n  recfn 2 rc\n  Partial_Recursive.total rc\n  eval rc [?i, ?e] = consistent \\<psi> ?i ?e\n  min_cons_hyp ?\\<psi> ?e \\<equiv>\n  if \\<exists>i. consistent ?\\<psi> i ?e \\<down>= 0\n  then Some (LEAST i. consistent ?\\<psi> i ?e \\<down>= 0) else None\n  \\<psi> \\<in> \\<R>\\<^sup>2\n\ngoal (1 subgoal):\n 1. eval r [e] = min_cons_hyp \\<psi> e", "by (auto simp add: consistent_in_R2)"], ["proof (state)\nthis:\n  eval r [?e] = min_cons_hyp \\<psi> ?e\n\ngoal (1 subgoal):\n 1. min_cons_hyp \\<psi> \\<in> \\<P>", "ultimately"], ["proof (chain)\npicking this:\n  recfn 1 r\n  eval r [?e] = min_cons_hyp \\<psi> ?e", "show ?thesis"], ["proof (prove)\nusing this:\n  recfn 1 r\n  eval r [?e] = min_cons_hyp \\<psi> ?e\n\ngoal (1 subgoal):\n 1. min_cons_hyp \\<psi> \\<in> \\<P>", "by auto"], ["proof (state)\nthis:\n  min_cons_hyp \\<psi> \\<in> \\<P>\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The function @{term \"min_cons_hyp \\<psi>\"} is a strategy for\nlearning all NUM classes embedded in @{term \\<psi>}. It is an example of an\n``identification-by-enumeration'' strategy.\\<close>"], ["", "lemma NUM_imp_learn_total:\n  assumes \"\\<psi> \\<in> \\<R>\\<^sup>2\" and \"U \\<in> NUM_wrt \\<psi>\"\n  shows \"learn_total \\<psi> U (min_cons_hyp \\<psi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. learn_total \\<psi> U (min_cons_hyp \\<psi>)", "proof (rule learn_totalI)"], ["proof (state)\ngoal (3 subgoals):\n 1. environment \\<psi> U (min_cons_hyp \\<psi>)\n 2. \\<And>f.\n       f \\<in> U \\<Longrightarrow>\n       \\<exists>i.\n          \\<psi> i = f \\<and>\n          (\\<exists>n\\<^sub>0.\n              \\<forall>n\\<ge>n\\<^sub>0.\n                 min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= i)\n 3. \\<And>f n.\n       f \\<in> U \\<Longrightarrow>\n       \\<psi> (the (min_cons_hyp \\<psi> (f \\<triangleright> n))) \\<in> \\<R>", "have ex_psi_i_f: \"\\<exists>i. \\<psi> i = f\" if \"f \\<in> U\" for f"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i. \\<psi> i = f", "using assms that NUM_wrt_def"], ["proof (prove)\nusing this:\n  \\<psi> \\<in> \\<R>\\<^sup>2\n  U \\<in> NUM_wrt \\<psi>\n  f \\<in> U\n  ?\\<psi> \\<in> \\<R>\\<^sup>2 \\<Longrightarrow>\n  NUM_wrt ?\\<psi> \\<equiv> {U. \\<forall>f\\<in>U. \\<exists>i. ?\\<psi> i = f}\n\ngoal (1 subgoal):\n 1. \\<exists>i. \\<psi> i = f", "by simp"], ["proof (state)\nthis:\n  ?f \\<in> U \\<Longrightarrow> \\<exists>i. \\<psi> i = ?f\n\ngoal (3 subgoals):\n 1. environment \\<psi> U (min_cons_hyp \\<psi>)\n 2. \\<And>f.\n       f \\<in> U \\<Longrightarrow>\n       \\<exists>i.\n          \\<psi> i = f \\<and>\n          (\\<exists>n\\<^sub>0.\n              \\<forall>n\\<ge>n\\<^sub>0.\n                 min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= i)\n 3. \\<And>f n.\n       f \\<in> U \\<Longrightarrow>\n       \\<psi> (the (min_cons_hyp \\<psi> (f \\<triangleright> n))) \\<in> \\<R>", "moreover"], ["proof (state)\nthis:\n  ?f \\<in> U \\<Longrightarrow> \\<exists>i. \\<psi> i = ?f\n\ngoal (3 subgoals):\n 1. environment \\<psi> U (min_cons_hyp \\<psi>)\n 2. \\<And>f.\n       f \\<in> U \\<Longrightarrow>\n       \\<exists>i.\n          \\<psi> i = f \\<and>\n          (\\<exists>n\\<^sub>0.\n              \\<forall>n\\<ge>n\\<^sub>0.\n                 min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= i)\n 3. \\<And>f n.\n       f \\<in> U \\<Longrightarrow>\n       \\<psi> (the (min_cons_hyp \\<psi> (f \\<triangleright> n))) \\<in> \\<R>", "have consistent_eq_0: \"consistent \\<psi> i ((\\<psi> i) \\<triangleright> n) \\<down>= 0\" for i n"], ["proof (prove)\ngoal (1 subgoal):\n 1. consistent \\<psi> i (\\<psi> i \\<triangleright> n) \\<down>= 0", "using assms"], ["proof (prove)\nusing this:\n  \\<psi> \\<in> \\<R>\\<^sup>2\n  U \\<in> NUM_wrt \\<psi>\n\ngoal (1 subgoal):\n 1. consistent \\<psi> i (\\<psi> i \\<triangleright> n) \\<down>= 0", "by (simp add: consistent_init)"], ["proof (state)\nthis:\n  consistent \\<psi> ?i (\\<psi> ?i \\<triangleright> ?n) \\<down>= 0\n\ngoal (3 subgoals):\n 1. environment \\<psi> U (min_cons_hyp \\<psi>)\n 2. \\<And>f.\n       f \\<in> U \\<Longrightarrow>\n       \\<exists>i.\n          \\<psi> i = f \\<and>\n          (\\<exists>n\\<^sub>0.\n              \\<forall>n\\<ge>n\\<^sub>0.\n                 min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= i)\n 3. \\<And>f n.\n       f \\<in> U \\<Longrightarrow>\n       \\<psi> (the (min_cons_hyp \\<psi> (f \\<triangleright> n))) \\<in> \\<R>", "ultimately"], ["proof (chain)\npicking this:\n  ?f \\<in> U \\<Longrightarrow> \\<exists>i. \\<psi> i = ?f\n  consistent \\<psi> ?i (\\<psi> ?i \\<triangleright> ?n) \\<down>= 0", "have \"\\<And>f n. f \\<in> U \\<Longrightarrow> min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>\""], ["proof (prove)\nusing this:\n  ?f \\<in> U \\<Longrightarrow> \\<exists>i. \\<psi> i = ?f\n  consistent \\<psi> ?i (\\<psi> ?i \\<triangleright> ?n) \\<down>= 0\n\ngoal (1 subgoal):\n 1. \\<And>f n.\n       f \\<in> U \\<Longrightarrow>\n       min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>", "using min_cons_hyp_def assms(1)"], ["proof (prove)\nusing this:\n  ?f \\<in> U \\<Longrightarrow> \\<exists>i. \\<psi> i = ?f\n  consistent \\<psi> ?i (\\<psi> ?i \\<triangleright> ?n) \\<down>= 0\n  min_cons_hyp ?\\<psi> ?e \\<equiv>\n  if \\<exists>i. consistent ?\\<psi> i ?e \\<down>= 0\n  then Some (LEAST i. consistent ?\\<psi> i ?e \\<down>= 0) else None\n  \\<psi> \\<in> \\<R>\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<And>f n.\n       f \\<in> U \\<Longrightarrow>\n       min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>", "by fastforce"], ["proof (state)\nthis:\n  ?f \\<in> U \\<Longrightarrow>\n  min_cons_hyp \\<psi> (?f \\<triangleright> ?n) \\<down>\n\ngoal (3 subgoals):\n 1. environment \\<psi> U (min_cons_hyp \\<psi>)\n 2. \\<And>f.\n       f \\<in> U \\<Longrightarrow>\n       \\<exists>i.\n          \\<psi> i = f \\<and>\n          (\\<exists>n\\<^sub>0.\n              \\<forall>n\\<ge>n\\<^sub>0.\n                 min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= i)\n 3. \\<And>f n.\n       f \\<in> U \\<Longrightarrow>\n       \\<psi> (the (min_cons_hyp \\<psi> (f \\<triangleright> n))) \\<in> \\<R>", "then"], ["proof (chain)\npicking this:\n  ?f \\<in> U \\<Longrightarrow>\n  min_cons_hyp \\<psi> (?f \\<triangleright> ?n) \\<down>", "show env: \"environment \\<psi> U (min_cons_hyp \\<psi>)\""], ["proof (prove)\nusing this:\n  ?f \\<in> U \\<Longrightarrow>\n  min_cons_hyp \\<psi> (?f \\<triangleright> ?n) \\<down>\n\ngoal (1 subgoal):\n 1. environment \\<psi> U (min_cons_hyp \\<psi>)", "using assms NUM_wrt_def min_cons_hyp_in_P1 NUM_E(1) NUM_I"], ["proof (prove)\nusing this:\n  ?f \\<in> U \\<Longrightarrow>\n  min_cons_hyp \\<psi> (?f \\<triangleright> ?n) \\<down>\n  \\<psi> \\<in> \\<R>\\<^sup>2\n  U \\<in> NUM_wrt \\<psi>\n  ?\\<psi> \\<in> \\<R>\\<^sup>2 \\<Longrightarrow>\n  NUM_wrt ?\\<psi> \\<equiv> {U. \\<forall>f\\<in>U. \\<exists>i. ?\\<psi> i = f}\n  ?\\<psi> \\<in> \\<R>\\<^sup>2 \\<Longrightarrow>\n  min_cons_hyp ?\\<psi> \\<in> \\<P>\n  ?U \\<in> NUM \\<Longrightarrow> ?U \\<subseteq> \\<R>\n  \\<lbrakk>?\\<psi> \\<in> \\<R>\\<^sup>2;\n   \\<And>f. f \\<in> ?U \\<Longrightarrow> \\<exists>i. ?\\<psi> i = f\\<rbrakk>\n  \\<Longrightarrow> ?U \\<in> NUM\n\ngoal (1 subgoal):\n 1. environment \\<psi> U (min_cons_hyp \\<psi>)", "by auto"], ["proof (state)\nthis:\n  environment \\<psi> U (min_cons_hyp \\<psi>)\n\ngoal (2 subgoals):\n 1. \\<And>f.\n       f \\<in> U \\<Longrightarrow>\n       \\<exists>i.\n          \\<psi> i = f \\<and>\n          (\\<exists>n\\<^sub>0.\n              \\<forall>n\\<ge>n\\<^sub>0.\n                 min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= i)\n 2. \\<And>f n.\n       f \\<in> U \\<Longrightarrow>\n       \\<psi> (the (min_cons_hyp \\<psi> (f \\<triangleright> n))) \\<in> \\<R>", "show \"\\<And>f n. f \\<in> U \\<Longrightarrow> \\<psi> (the (min_cons_hyp \\<psi> (f \\<triangleright> n))) \\<in> \\<R>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f n.\n       f \\<in> U \\<Longrightarrow>\n       \\<psi> (the (min_cons_hyp \\<psi> (f \\<triangleright> n))) \\<in> \\<R>", "using assms"], ["proof (prove)\nusing this:\n  \\<psi> \\<in> \\<R>\\<^sup>2\n  U \\<in> NUM_wrt \\<psi>\n\ngoal (1 subgoal):\n 1. \\<And>f n.\n       f \\<in> U \\<Longrightarrow>\n       \\<psi> (the (min_cons_hyp \\<psi> (f \\<triangleright> n))) \\<in> \\<R>", "by (simp)"], ["proof (state)\nthis:\n  ?f \\<in> U \\<Longrightarrow>\n  \\<psi> (the (min_cons_hyp \\<psi> (?f \\<triangleright> ?n))) \\<in> \\<R>\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> U \\<Longrightarrow>\n       \\<exists>i.\n          \\<psi> i = f \\<and>\n          (\\<exists>n\\<^sub>0.\n              \\<forall>n\\<ge>n\\<^sub>0.\n                 min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= i)", "show \"\\<exists>i. \\<psi> i = f \\<and> (\\<forall>\\<^sup>\\<infinity>n. min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= i)\" if \"f \\<in> U\" for f"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i.\n       \\<psi> i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0.\n              min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= i)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i.\n       \\<psi> i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0.\n              min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= i)", "from that env"], ["proof (chain)\npicking this:\n  f \\<in> U\n  environment \\<psi> U (min_cons_hyp \\<psi>)", "have \"f \\<in> \\<R>\""], ["proof (prove)\nusing this:\n  f \\<in> U\n  environment \\<psi> U (min_cons_hyp \\<psi>)\n\ngoal (1 subgoal):\n 1. f \\<in> \\<R>", "by auto"], ["proof (state)\nthis:\n  f \\<in> \\<R>\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       \\<psi> i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0.\n              min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= i)", "let ?P = \"\\<lambda>i. \\<psi> i = f\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i.\n       \\<psi> i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0.\n              min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= i)", "define imin where \"imin \\<equiv> Least ?P\""], ["proof (state)\nthis:\n  imin \\<equiv> LEAST i. \\<psi> i = f\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       \\<psi> i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0.\n              min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= i)", "with ex_psi_i_f that"], ["proof (chain)\npicking this:\n  ?f \\<in> U \\<Longrightarrow> \\<exists>i. \\<psi> i = ?f\n  f \\<in> U\n  imin \\<equiv> LEAST i. \\<psi> i = f", "have imin: \"?P imin\" \"\\<And>j. ?P j \\<Longrightarrow> j \\<ge> imin\""], ["proof (prove)\nusing this:\n  ?f \\<in> U \\<Longrightarrow> \\<exists>i. \\<psi> i = ?f\n  f \\<in> U\n  imin \\<equiv> LEAST i. \\<psi> i = f\n\ngoal (1 subgoal):\n 1. \\<psi> imin = f &&&\n    (\\<And>j. \\<psi> j = f \\<Longrightarrow> imin \\<le> j)", "using LeastI_ex[of ?P] Least_le[of ?P]"], ["proof (prove)\nusing this:\n  ?f \\<in> U \\<Longrightarrow> \\<exists>i. \\<psi> i = ?f\n  f \\<in> U\n  imin \\<equiv> LEAST i. \\<psi> i = f\n  \\<exists>x. \\<psi> x = f \\<Longrightarrow>\n  \\<psi> (LEAST i. \\<psi> i = f) = f\n  \\<psi> ?k = f \\<Longrightarrow> (LEAST x. \\<psi> x = f) \\<le> ?k\n\ngoal (1 subgoal):\n 1. \\<psi> imin = f &&&\n    (\\<And>j. \\<psi> j = f \\<Longrightarrow> imin \\<le> j)", "by simp_all"], ["proof (state)\nthis:\n  \\<psi> imin = f\n  \\<psi> ?j = f \\<Longrightarrow> imin \\<le> ?j\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       \\<psi> i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0.\n              min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= i)", "then"], ["proof (chain)\npicking this:\n  \\<psi> imin = f\n  \\<psi> ?j = f \\<Longrightarrow> imin \\<le> ?j", "have f_neq: \"\\<psi> i \\<noteq> f\" if \"i < imin\" for i"], ["proof (prove)\nusing this:\n  \\<psi> imin = f\n  \\<psi> ?j = f \\<Longrightarrow> imin \\<le> ?j\n\ngoal (1 subgoal):\n 1. \\<psi> i \\<noteq> f", "using leD that"], ["proof (prove)\nusing this:\n  \\<psi> imin = f\n  \\<psi> ?j = f \\<Longrightarrow> imin \\<le> ?j\n  ?y \\<le> ?x \\<Longrightarrow> \\<not> ?x < ?y\n  i < imin\n\ngoal (1 subgoal):\n 1. \\<psi> i \\<noteq> f", "by auto"], ["proof (state)\nthis:\n  ?i < imin \\<Longrightarrow> \\<psi> ?i \\<noteq> f\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       \\<psi> i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0.\n              min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= i)", "let ?Q = \"\\<lambda>i n. \\<psi> i \\<triangleright> n \\<noteq> f \\<triangleright> n\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i.\n       \\<psi> i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0.\n              min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= i)", "define nu :: \"nat \\<Rightarrow> nat\" where \"nu = (\\<lambda>i. SOME n. ?Q i n)\""], ["proof (state)\nthis:\n  nu =\n  (\\<lambda>i.\n      SOME n. \\<psi> i \\<triangleright> n \\<noteq> f \\<triangleright> n)\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       \\<psi> i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0.\n              min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= i)", "have nu_neq: \"\\<psi> i \\<triangleright> (nu i) \\<noteq> f \\<triangleright> (nu i)\" if \"i < imin\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<psi> i \\<triangleright> nu i \\<noteq> f \\<triangleright> nu i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<psi> i \\<triangleright> nu i \\<noteq> f \\<triangleright> nu i", "from assms"], ["proof (chain)\npicking this:\n  \\<psi> \\<in> \\<R>\\<^sup>2\n  U \\<in> NUM_wrt \\<psi>", "have \"\\<psi> i \\<in> \\<R>\""], ["proof (prove)\nusing this:\n  \\<psi> \\<in> \\<R>\\<^sup>2\n  U \\<in> NUM_wrt \\<psi>\n\ngoal (1 subgoal):\n 1. \\<psi> i \\<in> \\<R>", "by simp"], ["proof (state)\nthis:\n  \\<psi> i \\<in> \\<R>\n\ngoal (1 subgoal):\n 1. \\<psi> i \\<triangleright> nu i \\<noteq> f \\<triangleright> nu i", "moreover"], ["proof (state)\nthis:\n  \\<psi> i \\<in> \\<R>\n\ngoal (1 subgoal):\n 1. \\<psi> i \\<triangleright> nu i \\<noteq> f \\<triangleright> nu i", "from assms imin(1)"], ["proof (chain)\npicking this:\n  \\<psi> \\<in> \\<R>\\<^sup>2\n  U \\<in> NUM_wrt \\<psi>\n  \\<psi> imin = f", "have \"f \\<in> \\<R>\""], ["proof (prove)\nusing this:\n  \\<psi> \\<in> \\<R>\\<^sup>2\n  U \\<in> NUM_wrt \\<psi>\n  \\<psi> imin = f\n\ngoal (1 subgoal):\n 1. f \\<in> \\<R>", "by auto"], ["proof (state)\nthis:\n  f \\<in> \\<R>\n\ngoal (1 subgoal):\n 1. \\<psi> i \\<triangleright> nu i \\<noteq> f \\<triangleright> nu i", "moreover"], ["proof (state)\nthis:\n  f \\<in> \\<R>\n\ngoal (1 subgoal):\n 1. \\<psi> i \\<triangleright> nu i \\<noteq> f \\<triangleright> nu i", "have \"f \\<noteq> \\<psi> i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<noteq> \\<psi> i", "using that f_neq"], ["proof (prove)\nusing this:\n  i < imin\n  ?i < imin \\<Longrightarrow> \\<psi> ?i \\<noteq> f\n\ngoal (1 subgoal):\n 1. f \\<noteq> \\<psi> i", "by auto"], ["proof (state)\nthis:\n  f \\<noteq> \\<psi> i\n\ngoal (1 subgoal):\n 1. \\<psi> i \\<triangleright> nu i \\<noteq> f \\<triangleright> nu i", "ultimately"], ["proof (chain)\npicking this:\n  \\<psi> i \\<in> \\<R>\n  f \\<in> \\<R>\n  f \\<noteq> \\<psi> i", "have \"\\<exists>n. f \\<triangleright> n \\<noteq> (\\<psi> i) \\<triangleright> n\""], ["proof (prove)\nusing this:\n  \\<psi> i \\<in> \\<R>\n  f \\<in> \\<R>\n  f \\<noteq> \\<psi> i\n\ngoal (1 subgoal):\n 1. \\<exists>n. f \\<triangleright> n \\<noteq> \\<psi> i \\<triangleright> n", "using neq_fun_neq_init"], ["proof (prove)\nusing this:\n  \\<psi> i \\<in> \\<R>\n  f \\<in> \\<R>\n  f \\<noteq> \\<psi> i\n  \\<lbrakk>?f \\<in> \\<R>; ?g \\<in> \\<R>; ?f \\<noteq> ?g\\<rbrakk>\n  \\<Longrightarrow> \\<exists>n.\n                       ?f \\<triangleright> n \\<noteq> ?g \\<triangleright> n\n\ngoal (1 subgoal):\n 1. \\<exists>n. f \\<triangleright> n \\<noteq> \\<psi> i \\<triangleright> n", "by simp"], ["proof (state)\nthis:\n  \\<exists>n. f \\<triangleright> n \\<noteq> \\<psi> i \\<triangleright> n\n\ngoal (1 subgoal):\n 1. \\<psi> i \\<triangleright> nu i \\<noteq> f \\<triangleright> nu i", "then"], ["proof (chain)\npicking this:\n  \\<exists>n. f \\<triangleright> n \\<noteq> \\<psi> i \\<triangleright> n", "show \"?Q i (nu i)\""], ["proof (prove)\nusing this:\n  \\<exists>n. f \\<triangleright> n \\<noteq> \\<psi> i \\<triangleright> n\n\ngoal (1 subgoal):\n 1. \\<psi> i \\<triangleright> nu i \\<noteq> f \\<triangleright> nu i", "unfolding nu_def"], ["proof (prove)\nusing this:\n  \\<exists>n. f \\<triangleright> n \\<noteq> \\<psi> i \\<triangleright> n\n\ngoal (1 subgoal):\n 1. \\<psi> i \\<triangleright>\n    (SOME n.\n        \\<psi> i \\<triangleright> n \\<noteq> f \\<triangleright> n) \\<noteq>\n    f \\<triangleright>\n    (SOME n. \\<psi> i \\<triangleright> n \\<noteq> f \\<triangleright> n)", "using someI_ex[of \"\\<lambda>n. ?Q i n\"]"], ["proof (prove)\nusing this:\n  \\<exists>n. f \\<triangleright> n \\<noteq> \\<psi> i \\<triangleright> n\n  \\<exists>x.\n     \\<psi> i \\<triangleright> x \\<noteq>\n     f \\<triangleright> x \\<Longrightarrow>\n  \\<psi> i \\<triangleright>\n  (SOME x.\n      \\<psi> i \\<triangleright> x \\<noteq> f \\<triangleright> x) \\<noteq>\n  f \\<triangleright>\n  (SOME x. \\<psi> i \\<triangleright> x \\<noteq> f \\<triangleright> x)\n\ngoal (1 subgoal):\n 1. \\<psi> i \\<triangleright>\n    (SOME n.\n        \\<psi> i \\<triangleright> n \\<noteq> f \\<triangleright> n) \\<noteq>\n    f \\<triangleright>\n    (SOME n. \\<psi> i \\<triangleright> n \\<noteq> f \\<triangleright> n)", "by metis"], ["proof (state)\nthis:\n  \\<psi> i \\<triangleright> nu i \\<noteq> f \\<triangleright> nu i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?i < imin \\<Longrightarrow>\n  \\<psi> ?i \\<triangleright> nu ?i \\<noteq> f \\<triangleright> nu ?i\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       \\<psi> i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0.\n              min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= i)", "have \"\\<exists>n\\<^sub>0. \\<forall>n\\<ge>n\\<^sub>0. min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= imin\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n\\<^sub>0.\n       \\<forall>n\\<ge>n\\<^sub>0.\n          min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= imin", "proof (cases \"imin = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. imin = 0 \\<Longrightarrow>\n    \\<exists>n\\<^sub>0.\n       \\<forall>n\\<ge>n\\<^sub>0.\n          min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= imin\n 2. imin \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>n\\<^sub>0.\n       \\<forall>n\\<ge>n\\<^sub>0.\n          min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= imin", "case True"], ["proof (state)\nthis:\n  imin = 0\n\ngoal (2 subgoals):\n 1. imin = 0 \\<Longrightarrow>\n    \\<exists>n\\<^sub>0.\n       \\<forall>n\\<ge>n\\<^sub>0.\n          min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= imin\n 2. imin \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>n\\<^sub>0.\n       \\<forall>n\\<ge>n\\<^sub>0.\n          min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= imin", "then"], ["proof (chain)\npicking this:\n  imin = 0", "have \"\\<forall>n. min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= imin\""], ["proof (prove)\nusing this:\n  imin = 0\n\ngoal (1 subgoal):\n 1. \\<forall>n. min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= imin", "using consistent_eq_0 assms(1) imin(1) min_cons_hyp_def"], ["proof (prove)\nusing this:\n  imin = 0\n  consistent \\<psi> ?i (\\<psi> ?i \\<triangleright> ?n) \\<down>= 0\n  \\<psi> \\<in> \\<R>\\<^sup>2\n  \\<psi> imin = f\n  min_cons_hyp ?\\<psi> ?e \\<equiv>\n  if \\<exists>i. consistent ?\\<psi> i ?e \\<down>= 0\n  then Some (LEAST i. consistent ?\\<psi> i ?e \\<down>= 0) else None\n\ngoal (1 subgoal):\n 1. \\<forall>n. min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= imin", "by auto"], ["proof (state)\nthis:\n  \\<forall>n. min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= imin\n\ngoal (2 subgoals):\n 1. imin = 0 \\<Longrightarrow>\n    \\<exists>n\\<^sub>0.\n       \\<forall>n\\<ge>n\\<^sub>0.\n          min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= imin\n 2. imin \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>n\\<^sub>0.\n       \\<forall>n\\<ge>n\\<^sub>0.\n          min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= imin", "then"], ["proof (chain)\npicking this:\n  \\<forall>n. min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= imin", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>n. min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= imin\n\ngoal (1 subgoal):\n 1. \\<exists>n\\<^sub>0.\n       \\<forall>n\\<ge>n\\<^sub>0.\n          min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= imin", "by simp"], ["proof (state)\nthis:\n  \\<exists>n\\<^sub>0.\n     \\<forall>n\\<ge>n\\<^sub>0.\n        min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= imin\n\ngoal (1 subgoal):\n 1. imin \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>n\\<^sub>0.\n       \\<forall>n\\<ge>n\\<^sub>0.\n          min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= imin", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. imin \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>n\\<^sub>0.\n       \\<forall>n\\<ge>n\\<^sub>0.\n          min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= imin", "case False"], ["proof (state)\nthis:\n  imin \\<noteq> 0\n\ngoal (1 subgoal):\n 1. imin \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>n\\<^sub>0.\n       \\<forall>n\\<ge>n\\<^sub>0.\n          min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= imin", "define n\\<^sub>0 where \"n\\<^sub>0 = Max (set (map nu [0..<imin]))\" (is \"_ = Max ?N\")"], ["proof (state)\nthis:\n  n\\<^sub>0 = Max (set (map nu [0..<imin]))\n\ngoal (1 subgoal):\n 1. imin \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>n\\<^sub>0.\n       \\<forall>n\\<ge>n\\<^sub>0.\n          min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= imin", "have \"nu i \\<le> n\\<^sub>0\" if \"i < imin\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. nu i \\<le> n\\<^sub>0", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. nu i \\<le> n\\<^sub>0", "have \"finite ?N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (set (map nu [0..<imin]))", "using n\\<^sub>0_def"], ["proof (prove)\nusing this:\n  n\\<^sub>0 = Max (set (map nu [0..<imin]))\n\ngoal (1 subgoal):\n 1. finite (set (map nu [0..<imin]))", "by simp"], ["proof (state)\nthis:\n  finite (set (map nu [0..<imin]))\n\ngoal (1 subgoal):\n 1. nu i \\<le> n\\<^sub>0", "moreover"], ["proof (state)\nthis:\n  finite (set (map nu [0..<imin]))\n\ngoal (1 subgoal):\n 1. nu i \\<le> n\\<^sub>0", "have \"?N \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (map nu [0..<imin]) \\<noteq> {}", "using False n\\<^sub>0_def"], ["proof (prove)\nusing this:\n  imin \\<noteq> 0\n  n\\<^sub>0 = Max (set (map nu [0..<imin]))\n\ngoal (1 subgoal):\n 1. set (map nu [0..<imin]) \\<noteq> {}", "by simp"], ["proof (state)\nthis:\n  set (map nu [0..<imin]) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. nu i \\<le> n\\<^sub>0", "moreover"], ["proof (state)\nthis:\n  set (map nu [0..<imin]) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. nu i \\<le> n\\<^sub>0", "have \"nu i \\<in> ?N\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nu i \\<in> set (map nu [0..<imin])", "using that"], ["proof (prove)\nusing this:\n  i < imin\n\ngoal (1 subgoal):\n 1. nu i \\<in> set (map nu [0..<imin])", "by simp"], ["proof (state)\nthis:\n  nu i \\<in> set (map nu [0..<imin])\n\ngoal (1 subgoal):\n 1. nu i \\<le> n\\<^sub>0", "ultimately"], ["proof (chain)\npicking this:\n  finite (set (map nu [0..<imin]))\n  set (map nu [0..<imin]) \\<noteq> {}\n  nu i \\<in> set (map nu [0..<imin])", "show ?thesis"], ["proof (prove)\nusing this:\n  finite (set (map nu [0..<imin]))\n  set (map nu [0..<imin]) \\<noteq> {}\n  nu i \\<in> set (map nu [0..<imin])\n\ngoal (1 subgoal):\n 1. nu i \\<le> n\\<^sub>0", "using that Max_ge n\\<^sub>0_def"], ["proof (prove)\nusing this:\n  finite (set (map nu [0..<imin]))\n  set (map nu [0..<imin]) \\<noteq> {}\n  nu i \\<in> set (map nu [0..<imin])\n  i < imin\n  \\<lbrakk>finite ?A; ?x \\<in> ?A\\<rbrakk> \\<Longrightarrow> ?x \\<le> Max ?A\n  n\\<^sub>0 = Max (set (map nu [0..<imin]))\n\ngoal (1 subgoal):\n 1. nu i \\<le> n\\<^sub>0", "by blast"], ["proof (state)\nthis:\n  nu i \\<le> n\\<^sub>0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?i < imin \\<Longrightarrow> nu ?i \\<le> n\\<^sub>0\n\ngoal (1 subgoal):\n 1. imin \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>n\\<^sub>0.\n       \\<forall>n\\<ge>n\\<^sub>0.\n          min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= imin", "then"], ["proof (chain)\npicking this:\n  ?i < imin \\<Longrightarrow> nu ?i \\<le> n\\<^sub>0", "have \"\\<psi> i \\<triangleright> n\\<^sub>0 \\<noteq> f \\<triangleright> n\\<^sub>0\" if \"i < imin\" for i"], ["proof (prove)\nusing this:\n  ?i < imin \\<Longrightarrow> nu ?i \\<le> n\\<^sub>0\n\ngoal (1 subgoal):\n 1. \\<psi> i \\<triangleright> n\\<^sub>0 \\<noteq>\n    f \\<triangleright> n\\<^sub>0", "using nu_neq neq_init_forall_ge that"], ["proof (prove)\nusing this:\n  ?i < imin \\<Longrightarrow> nu ?i \\<le> n\\<^sub>0\n  ?i < imin \\<Longrightarrow>\n  \\<psi> ?i \\<triangleright> nu ?i \\<noteq> f \\<triangleright> nu ?i\n  \\<lbrakk>?f \\<triangleright> ?n \\<noteq> ?g \\<triangleright> ?n;\n   ?n \\<le> ?m\\<rbrakk>\n  \\<Longrightarrow> ?f \\<triangleright> ?m \\<noteq> ?g \\<triangleright> ?m\n  i < imin\n\ngoal (1 subgoal):\n 1. \\<psi> i \\<triangleright> n\\<^sub>0 \\<noteq>\n    f \\<triangleright> n\\<^sub>0", "by blast"], ["proof (state)\nthis:\n  ?i < imin \\<Longrightarrow>\n  \\<psi> ?i \\<triangleright> n\\<^sub>0 \\<noteq> f \\<triangleright> n\\<^sub>0\n\ngoal (1 subgoal):\n 1. imin \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>n\\<^sub>0.\n       \\<forall>n\\<ge>n\\<^sub>0.\n          min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= imin", "then"], ["proof (chain)\npicking this:\n  ?i < imin \\<Longrightarrow>\n  \\<psi> ?i \\<triangleright> n\\<^sub>0 \\<noteq> f \\<triangleright> n\\<^sub>0", "have *: \"\\<psi> i \\<triangleright> n \\<noteq> f \\<triangleright> n\" if \"i < imin\" and \"n \\<ge> n\\<^sub>0\" for i n"], ["proof (prove)\nusing this:\n  ?i < imin \\<Longrightarrow>\n  \\<psi> ?i \\<triangleright> n\\<^sub>0 \\<noteq> f \\<triangleright> n\\<^sub>0\n\ngoal (1 subgoal):\n 1. \\<psi> i \\<triangleright> n \\<noteq> f \\<triangleright> n", "using nu_neq neq_init_forall_ge that"], ["proof (prove)\nusing this:\n  ?i < imin \\<Longrightarrow>\n  \\<psi> ?i \\<triangleright> n\\<^sub>0 \\<noteq> f \\<triangleright> n\\<^sub>0\n  ?i < imin \\<Longrightarrow>\n  \\<psi> ?i \\<triangleright> nu ?i \\<noteq> f \\<triangleright> nu ?i\n  \\<lbrakk>?f \\<triangleright> ?n \\<noteq> ?g \\<triangleright> ?n;\n   ?n \\<le> ?m\\<rbrakk>\n  \\<Longrightarrow> ?f \\<triangleright> ?m \\<noteq> ?g \\<triangleright> ?m\n  i < imin\n  n\\<^sub>0 \\<le> n\n\ngoal (1 subgoal):\n 1. \\<psi> i \\<triangleright> n \\<noteq> f \\<triangleright> n", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>?i < imin; n\\<^sub>0 \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> \\<psi> ?i \\<triangleright> ?n \\<noteq>\n                    f \\<triangleright> ?n\n\ngoal (1 subgoal):\n 1. imin \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>n\\<^sub>0.\n       \\<forall>n\\<ge>n\\<^sub>0.\n          min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= imin", "have \"\\<psi> imin \\<triangleright> n = f \\<triangleright> n\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<psi> imin \\<triangleright> n = f \\<triangleright> n", "using imin(1)"], ["proof (prove)\nusing this:\n  \\<psi> imin = f\n\ngoal (1 subgoal):\n 1. \\<psi> imin \\<triangleright> n = f \\<triangleright> n", "by simp"], ["proof (state)\nthis:\n  \\<psi> imin \\<triangleright> ?n = f \\<triangleright> ?n\n\ngoal (1 subgoal):\n 1. imin \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>n\\<^sub>0.\n       \\<forall>n\\<ge>n\\<^sub>0.\n          min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= imin", "moreover"], ["proof (state)\nthis:\n  \\<psi> imin \\<triangleright> ?n = f \\<triangleright> ?n\n\ngoal (1 subgoal):\n 1. imin \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>n\\<^sub>0.\n       \\<forall>n\\<ge>n\\<^sub>0.\n          min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= imin", "have \"(consistent \\<psi> i (f \\<triangleright> n) \\<down>= 0) = (\\<psi> i \\<triangleright> n = f \\<triangleright> n)\" for i n"], ["proof (prove)\ngoal (1 subgoal):\n 1. (consistent \\<psi> i (f \\<triangleright> n) \\<down>= 0) =\n    (\\<psi> i \\<triangleright> n = f \\<triangleright> n)", "by (simp add: \\<open>f \\<in> \\<R>\\<close> assms(1) consistent_init)"], ["proof (state)\nthis:\n  (consistent \\<psi> ?i (f \\<triangleright> ?n) \\<down>= 0) =\n  (\\<psi> ?i \\<triangleright> ?n = f \\<triangleright> ?n)\n\ngoal (1 subgoal):\n 1. imin \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>n\\<^sub>0.\n       \\<forall>n\\<ge>n\\<^sub>0.\n          min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= imin", "ultimately"], ["proof (chain)\npicking this:\n  \\<psi> imin \\<triangleright> ?n = f \\<triangleright> ?n\n  (consistent \\<psi> ?i (f \\<triangleright> ?n) \\<down>= 0) =\n  (\\<psi> ?i \\<triangleright> ?n = f \\<triangleright> ?n)", "have \"min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= (LEAST i. \\<psi> i \\<triangleright> n = f \\<triangleright> n)\" for n"], ["proof (prove)\nusing this:\n  \\<psi> imin \\<triangleright> ?n = f \\<triangleright> ?n\n  (consistent \\<psi> ?i (f \\<triangleright> ?n) \\<down>= 0) =\n  (\\<psi> ?i \\<triangleright> ?n = f \\<triangleright> ?n)\n\ngoal (1 subgoal):\n 1. min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>=\n    (LEAST i. \\<psi> i \\<triangleright> n = f \\<triangleright> n)", "using min_cons_hyp_def[of \\<psi> \"f \\<triangleright> n\"]"], ["proof (prove)\nusing this:\n  \\<psi> imin \\<triangleright> ?n = f \\<triangleright> ?n\n  (consistent \\<psi> ?i (f \\<triangleright> ?n) \\<down>= 0) =\n  (\\<psi> ?i \\<triangleright> ?n = f \\<triangleright> ?n)\n  min_cons_hyp \\<psi> (f \\<triangleright> n) \\<equiv>\n  if \\<exists>i. consistent \\<psi> i (f \\<triangleright> n) \\<down>= 0\n  then Some (LEAST i. consistent \\<psi> i (f \\<triangleright> n) \\<down>= 0)\n  else None\n\ngoal (1 subgoal):\n 1. min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>=\n    (LEAST i. \\<psi> i \\<triangleright> n = f \\<triangleright> n)", "by auto"], ["proof (state)\nthis:\n  min_cons_hyp \\<psi> (f \\<triangleright> ?n) \\<down>=\n  (LEAST i. \\<psi> i \\<triangleright> ?n = f \\<triangleright> ?n)\n\ngoal (1 subgoal):\n 1. imin \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>n\\<^sub>0.\n       \\<forall>n\\<ge>n\\<^sub>0.\n          min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= imin", "moreover"], ["proof (state)\nthis:\n  min_cons_hyp \\<psi> (f \\<triangleright> ?n) \\<down>=\n  (LEAST i. \\<psi> i \\<triangleright> ?n = f \\<triangleright> ?n)\n\ngoal (1 subgoal):\n 1. imin \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>n\\<^sub>0.\n       \\<forall>n\\<ge>n\\<^sub>0.\n          min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= imin", "have \"(LEAST i. \\<psi> i \\<triangleright> n = f \\<triangleright> n) = imin\" if \"n \\<ge> n\\<^sub>0\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. (LEAST i. \\<psi> i \\<triangleright> n = f \\<triangleright> n) = imin", "proof (rule Least_equality)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<psi> imin \\<triangleright> n = f \\<triangleright> n\n 2. \\<And>y.\n       \\<psi> y \\<triangleright> n = f \\<triangleright> n \\<Longrightarrow>\n       imin \\<le> y", "show \"\\<psi> imin \\<triangleright> n = f \\<triangleright> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<psi> imin \\<triangleright> n = f \\<triangleright> n", "using imin(1)"], ["proof (prove)\nusing this:\n  \\<psi> imin = f\n\ngoal (1 subgoal):\n 1. \\<psi> imin \\<triangleright> n = f \\<triangleright> n", "by simp"], ["proof (state)\nthis:\n  \\<psi> imin \\<triangleright> n = f \\<triangleright> n\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<psi> y \\<triangleright> n = f \\<triangleright> n \\<Longrightarrow>\n       imin \\<le> y", "show \"\\<And>y. \\<psi> y \\<triangleright> n = f \\<triangleright> n \\<Longrightarrow> imin \\<le> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<psi> y \\<triangleright> n = f \\<triangleright> n \\<Longrightarrow>\n       imin \\<le> y", "using imin * leI that"], ["proof (prove)\nusing this:\n  \\<psi> imin = f\n  \\<psi> ?j = f \\<Longrightarrow> imin \\<le> ?j\n  \\<lbrakk>?i < imin; n\\<^sub>0 \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> \\<psi> ?i \\<triangleright> ?n \\<noteq>\n                    f \\<triangleright> ?n\n  \\<not> ?x < ?y \\<Longrightarrow> ?y \\<le> ?x\n  n\\<^sub>0 \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       \\<psi> y \\<triangleright> n = f \\<triangleright> n \\<Longrightarrow>\n       imin \\<le> y", "by blast"], ["proof (state)\nthis:\n  \\<psi> ?y \\<triangleright> n = f \\<triangleright> n \\<Longrightarrow>\n  imin \\<le> ?y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  n\\<^sub>0 \\<le> ?n \\<Longrightarrow>\n  (LEAST i. \\<psi> i \\<triangleright> ?n = f \\<triangleright> ?n) = imin\n\ngoal (1 subgoal):\n 1. imin \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>n\\<^sub>0.\n       \\<forall>n\\<ge>n\\<^sub>0.\n          min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= imin", "ultimately"], ["proof (chain)\npicking this:\n  min_cons_hyp \\<psi> (f \\<triangleright> ?n) \\<down>=\n  (LEAST i. \\<psi> i \\<triangleright> ?n = f \\<triangleright> ?n)\n  n\\<^sub>0 \\<le> ?n \\<Longrightarrow>\n  (LEAST i. \\<psi> i \\<triangleright> ?n = f \\<triangleright> ?n) = imin", "have \"min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= imin\" if \"n \\<ge> n\\<^sub>0\" for n"], ["proof (prove)\nusing this:\n  min_cons_hyp \\<psi> (f \\<triangleright> ?n) \\<down>=\n  (LEAST i. \\<psi> i \\<triangleright> ?n = f \\<triangleright> ?n)\n  n\\<^sub>0 \\<le> ?n \\<Longrightarrow>\n  (LEAST i. \\<psi> i \\<triangleright> ?n = f \\<triangleright> ?n) = imin\n\ngoal (1 subgoal):\n 1. min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= imin", "using that"], ["proof (prove)\nusing this:\n  min_cons_hyp \\<psi> (f \\<triangleright> ?n) \\<down>=\n  (LEAST i. \\<psi> i \\<triangleright> ?n = f \\<triangleright> ?n)\n  n\\<^sub>0 \\<le> ?n \\<Longrightarrow>\n  (LEAST i. \\<psi> i \\<triangleright> ?n = f \\<triangleright> ?n) = imin\n  n\\<^sub>0 \\<le> n\n\ngoal (1 subgoal):\n 1. min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= imin", "by blast"], ["proof (state)\nthis:\n  n\\<^sub>0 \\<le> ?n \\<Longrightarrow>\n  min_cons_hyp \\<psi> (f \\<triangleright> ?n) \\<down>= imin\n\ngoal (1 subgoal):\n 1. imin \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>n\\<^sub>0.\n       \\<forall>n\\<ge>n\\<^sub>0.\n          min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= imin", "then"], ["proof (chain)\npicking this:\n  n\\<^sub>0 \\<le> ?n \\<Longrightarrow>\n  min_cons_hyp \\<psi> (f \\<triangleright> ?n) \\<down>= imin", "show ?thesis"], ["proof (prove)\nusing this:\n  n\\<^sub>0 \\<le> ?n \\<Longrightarrow>\n  min_cons_hyp \\<psi> (f \\<triangleright> ?n) \\<down>= imin\n\ngoal (1 subgoal):\n 1. \\<exists>n\\<^sub>0.\n       \\<forall>n\\<ge>n\\<^sub>0.\n          min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= imin", "by auto"], ["proof (state)\nthis:\n  \\<exists>n\\<^sub>0.\n     \\<forall>n\\<ge>n\\<^sub>0.\n        min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= imin\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>n\\<^sub>0.\n     \\<forall>n\\<ge>n\\<^sub>0.\n        min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= imin\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       \\<psi> i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0.\n              min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= i)", "with imin(1)"], ["proof (chain)\npicking this:\n  \\<psi> imin = f\n  \\<exists>n\\<^sub>0.\n     \\<forall>n\\<ge>n\\<^sub>0.\n        min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= imin", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<psi> imin = f\n  \\<exists>n\\<^sub>0.\n     \\<forall>n\\<ge>n\\<^sub>0.\n        min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= imin\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       \\<psi> i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0.\n              min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= i)", "by auto"], ["proof (state)\nthis:\n  \\<exists>i.\n     \\<psi> i = f \\<and>\n     (\\<exists>n\\<^sub>0.\n         \\<forall>n\\<ge>n\\<^sub>0.\n            min_cons_hyp \\<psi> (f \\<triangleright> n) \\<down>= i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?f \\<in> U \\<Longrightarrow>\n  \\<exists>i.\n     \\<psi> i = ?f \\<and>\n     (\\<exists>n\\<^sub>0.\n         \\<forall>n\\<ge>n\\<^sub>0.\n            min_cons_hyp \\<psi> (?f \\<triangleright> n) \\<down>= i)\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary NUM_subseteq_TOTAL: \"NUM \\<subseteq> TOTAL\""], ["proof (prove)\ngoal (1 subgoal):\n 1. NUM \\<subseteq> TOTAL", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> NUM \\<Longrightarrow> x \\<in> TOTAL", "fix U"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> NUM \\<Longrightarrow> x \\<in> TOTAL", "assume \"U \\<in> NUM\""], ["proof (state)\nthis:\n  U \\<in> NUM\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> NUM \\<Longrightarrow> x \\<in> TOTAL", "then"], ["proof (chain)\npicking this:\n  U \\<in> NUM", "have \"\\<exists>\\<psi>\\<in>\\<R>\\<^sup>2. \\<forall>f\\<in>U. \\<exists>i. \\<psi> i = f\""], ["proof (prove)\nusing this:\n  U \\<in> NUM\n\ngoal (1 subgoal):\n 1. \\<exists>\\<psi>\\<in>\\<R>\\<^sup>2.\n       \\<forall>f\\<in>U. \\<exists>i. \\<psi> i = f", "by auto"], ["proof (state)\nthis:\n  \\<exists>\\<psi>\\<in>\\<R>\\<^sup>2.\n     \\<forall>f\\<in>U. \\<exists>i. \\<psi> i = f\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> NUM \\<Longrightarrow> x \\<in> TOTAL", "then"], ["proof (chain)\npicking this:\n  \\<exists>\\<psi>\\<in>\\<R>\\<^sup>2.\n     \\<forall>f\\<in>U. \\<exists>i. \\<psi> i = f", "have \"\\<exists>\\<psi>\\<in>\\<R>\\<^sup>2. U \\<in> NUM_wrt \\<psi>\""], ["proof (prove)\nusing this:\n  \\<exists>\\<psi>\\<in>\\<R>\\<^sup>2.\n     \\<forall>f\\<in>U. \\<exists>i. \\<psi> i = f\n\ngoal (1 subgoal):\n 1. \\<exists>\\<psi>\\<in>\\<R>\\<^sup>2. U \\<in> NUM_wrt \\<psi>", "using NUM_wrt_def"], ["proof (prove)\nusing this:\n  \\<exists>\\<psi>\\<in>\\<R>\\<^sup>2.\n     \\<forall>f\\<in>U. \\<exists>i. \\<psi> i = f\n  ?\\<psi> \\<in> \\<R>\\<^sup>2 \\<Longrightarrow>\n  NUM_wrt ?\\<psi> \\<equiv> {U. \\<forall>f\\<in>U. \\<exists>i. ?\\<psi> i = f}\n\ngoal (1 subgoal):\n 1. \\<exists>\\<psi>\\<in>\\<R>\\<^sup>2. U \\<in> NUM_wrt \\<psi>", "by simp"], ["proof (state)\nthis:\n  \\<exists>\\<psi>\\<in>\\<R>\\<^sup>2. U \\<in> NUM_wrt \\<psi>\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> NUM \\<Longrightarrow> x \\<in> TOTAL", "then"], ["proof (chain)\npicking this:\n  \\<exists>\\<psi>\\<in>\\<R>\\<^sup>2. U \\<in> NUM_wrt \\<psi>", "have \"\\<exists>\\<psi> s. learn_total \\<psi> U s\""], ["proof (prove)\nusing this:\n  \\<exists>\\<psi>\\<in>\\<R>\\<^sup>2. U \\<in> NUM_wrt \\<psi>\n\ngoal (1 subgoal):\n 1. \\<exists>\\<psi> s. learn_total \\<psi> U s", "using NUM_imp_learn_total"], ["proof (prove)\nusing this:\n  \\<exists>\\<psi>\\<in>\\<R>\\<^sup>2. U \\<in> NUM_wrt \\<psi>\n  \\<lbrakk>?\\<psi> \\<in> \\<R>\\<^sup>2; ?U \\<in> NUM_wrt ?\\<psi>\\<rbrakk>\n  \\<Longrightarrow> learn_total ?\\<psi> ?U (min_cons_hyp ?\\<psi>)\n\ngoal (1 subgoal):\n 1. \\<exists>\\<psi> s. learn_total \\<psi> U s", "by auto"], ["proof (state)\nthis:\n  \\<exists>\\<psi> s. learn_total \\<psi> U s\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> NUM \\<Longrightarrow> x \\<in> TOTAL", "then"], ["proof (chain)\npicking this:\n  \\<exists>\\<psi> s. learn_total \\<psi> U s", "show \"U \\<in> TOTAL\""], ["proof (prove)\nusing this:\n  \\<exists>\\<psi> s. learn_total \\<psi> U s\n\ngoal (1 subgoal):\n 1. U \\<in> TOTAL", "using TOTAL_def"], ["proof (prove)\nusing this:\n  \\<exists>\\<psi> s. learn_total \\<psi> U s\n  TOTAL \\<equiv> {U. \\<exists>\\<psi> s. learn_total \\<psi> U s}\n\ngoal (1 subgoal):\n 1. U \\<in> TOTAL", "by auto"], ["proof (state)\nthis:\n  U \\<in> TOTAL\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The class @{term V0} is in @{term \"TOTAL - NUM\"}. \\<close>"], ["", "theorem NUM_subset_TOTAL: \"NUM \\<subset> TOTAL\""], ["proof (prove)\ngoal (1 subgoal):\n 1. NUM \\<subset> TOTAL", "using CP_subseteq_TOTAL FIN_not_subseteq_NUM FIN_subseteq_CP NUM_subseteq_TOTAL"], ["proof (prove)\nusing this:\n  CP \\<subseteq> TOTAL\n  \\<not> FIN \\<subseteq> NUM\n  FIN \\<subseteq> CP\n  NUM \\<subseteq> TOTAL\n\ngoal (1 subgoal):\n 1. NUM \\<subset> TOTAL", "by auto"], ["", "end"]]}