{"file_name": "/home/qj213/afp-2021-10-22/thys/Inductive_Inference/Inductive_Inference_Basics.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Inductive_Inference", "problem_names": ["lemma length_prefix [simp]: \"length (prefix f n) = Suc n\"", "lemma prefix_nth [simp]:\n  assumes \"k < Suc n\"\n  shows \"prefix f n ! k = the (f k)\"", "lemma prefixI:\n  assumes \"length vs > 0\" and \"\\<And>x. x < length vs \\<Longrightarrow> f x \\<down>= vs ! x\"\n  shows \"prefix f (length vs - 1) = vs\"", "lemma prefixI':\n  assumes \"length vs = Suc n\" and \"\\<And>x. x < Suc n \\<Longrightarrow> f x \\<down>= vs ! x\"\n  shows \"prefix f n = vs\"", "lemma prefixE:\n  assumes \"prefix f (length vs - 1) = vs\"\n    and \"f \\<in> \\<R>\"\n    and \"length vs > 0\"\n    and \"x < length vs\"\n  shows \"f x \\<down>= vs ! x\"", "lemma prefix_eqI:\n  assumes \"\\<And>x. x \\<le> n \\<Longrightarrow> f x = g x\"\n  shows \"prefix f n = prefix g n\"", "lemma prefix_0: \"prefix f 0 = [the (f 0)]\"", "lemma prefix_Suc: \"prefix f (Suc n) = prefix f n @ [the (f (Suc n))]\"", "lemma take_prefix:\n  assumes \"f \\<in> \\<R>\" and \"k \\<le> n\"\n  shows \"prefix f k = take (Suc k) (prefix f n)\"", "lemma init_neq_zero: \"f \\<triangleright> n \\<noteq> 0\"", "lemma init_prefixE [elim]: \"prefix f n = prefix g n \\<Longrightarrow> f \\<triangleright> n = g \\<triangleright> n\"", "lemma init_eqI:\n  assumes \"\\<And>x. x \\<le> n \\<Longrightarrow> f x = g x\"\n  shows \"f \\<triangleright> n = g \\<triangleright> n\"", "lemma initI:\n  assumes \"e_length e > 0\" and \"\\<And>x. x < e_length e \\<Longrightarrow> f x \\<down>= e_nth e x\"\n  shows \"f \\<triangleright> (e_length e - 1) = e\"", "lemma initI':\n  assumes \"e_length e = Suc n\" and \"\\<And>x. x <  Suc n \\<Longrightarrow> f x \\<down>= e_nth e x\"\n  shows \"f \\<triangleright> n = e\"", "lemma init_iff_list_eq_upto:\n  assumes \"f \\<in> \\<R>\" and \"e_length vs > 0\"\n  shows \"(\\<forall>x<e_length vs. f x \\<down>= e_nth vs x) \\<longleftrightarrow> prefix f (e_length vs - 1) = list_decode vs\"", "lemma length_init [simp]: \"e_length (f \\<triangleright> n) = Suc n\"", "lemma init_Suc_snoc: \"f \\<triangleright> (Suc n) = e_snoc (f \\<triangleright> n) (the (f (Suc n)))\"", "lemma nth_init: \"i < Suc n \\<Longrightarrow> e_nth (f \\<triangleright> n) i = the (f i)\"", "lemma hd_init [simp]: \"e_hd (f \\<triangleright> n) = the (f 0)\"", "lemma list_decode_init [simp]: \"list_decode (f \\<triangleright> n) = prefix f n\"", "lemma init_eq_iff_eq_upto:\n  assumes \"g \\<in> \\<R>\" and \"f \\<in> \\<R>\"\n  shows \"(\\<forall>j<Suc n. g j = f j) \\<longleftrightarrow> g \\<triangleright> n = f \\<triangleright> n\"", "lemma not_initial_imp_not_eq:\n  assumes \"\\<And>x. x < Suc n \\<Longrightarrow> f x \\<down>\" and \"\\<not> (is_init_of (f \\<triangleright> n) g)\"\n  shows \"f \\<noteq> g\"", "lemma all_init_eq_imp_fun_eq:\n  assumes \"f \\<in> \\<R>\" and \"g \\<in> \\<R>\" and \"\\<And>n. f \\<triangleright> n = g \\<triangleright> n\"\n  shows \"f = g\"", "lemma eq_init_forall_le:\n  assumes \"f \\<triangleright> n = g \\<triangleright> n\" and \"m \\<le> n\"\n  shows \"f \\<triangleright> m = g \\<triangleright> m\"", "lemma e_take_init:\n  assumes \"f \\<in> \\<R>\" and \"k < Suc n\"\n  shows \"e_take (Suc k) (f \\<triangleright> n) = f \\<triangleright> k\"", "lemma init_butlast_init:\n  assumes \"total1 f\" and \"f \\<triangleright> n = e\" and \"n > 0\"\n  shows \"f \\<triangleright> (n - 1) = e_butlast e\"", "lemma RPred1_subseteq_R1: \"\\<R>\\<^sub>0\\<^sub>1 \\<subseteq> \\<R>\"", "lemma const0_in_RPred1: \"(\\<lambda>_. Some 0) \\<in> \\<R>\\<^sub>0\\<^sub>1\"", "lemma RPred1_altdef: \"\\<R>\\<^sub>0\\<^sub>1 = {f. f \\<in> \\<R> \\<and> (\\<forall>x. the (f x) \\<le> 1)}\"\n  (is \"\\<R>\\<^sub>0\\<^sub>1 = ?S\")", "lemma NUM_I [intro]:\n  assumes \"\\<psi> \\<in> \\<R>\\<^sup>2\" and \"\\<And>f. f \\<in> U \\<Longrightarrow> \\<exists>i. \\<psi> i = f\"\n  shows \"U \\<in> NUM\"", "lemma NUM_E [dest]:\n  assumes \"U \\<in> NUM\"\n  shows \"U \\<subseteq> \\<R>\"\n    and \"\\<exists>\\<psi>\\<in>\\<R>\\<^sup>2. \\<forall>f\\<in>U. \\<exists>i. \\<psi> i = f\"", "lemma NUM_closed_subseteq:\n  assumes \"U \\<in> NUM\" and \"V \\<subseteq> U\"\n  shows \"V \\<in> NUM\"", "lemma R1_not_in_NUM: \"\\<R> \\<notin> NUM\"", "lemma r_prenum_prim [simp]: \"prim_recfn 2 r_prenum\"", "lemma r_prenum [simp]:\n  \"eval r_prenum [e, x] \\<down>= (if x < e_length e then e_nth e x else 0)\"", "lemma prenum_in_R2: \"prenum \\<in> \\<R>\\<^sup>2\"", "lemma prenum [simp]: \"prenum e x \\<down>= (if x < e_length e then e_nth e x else 0)\"", "lemma prenum_encode:\n  \"prenum (list_encode vs) x \\<down>= (if x < length vs then vs ! x else 0)\"", "lemma prepend [simp]:\n  \"(vs \\<odot> f) x = (if x < length vs then Some (vs ! x) else f (x - length vs))\"", "lemma prepend_total: \"total1 f \\<Longrightarrow> total1 (vs \\<odot> f)\"", "lemma prepend_at_less:\n  assumes \"n < length vs\"\n  shows \"(vs \\<odot> f) n \\<down>= vs ! n\"", "lemma prepend_at_ge:\n  assumes \"n \\<ge> length vs\"\n  shows \"(vs \\<odot> f) n = f (n - length vs)\"", "lemma prefix_prepend_less:\n  assumes \"n < length vs\"\n  shows \"prefix (vs \\<odot> f) n = take (Suc n) vs\"", "lemma prepend_eqI:\n  assumes \"\\<And>x. x < length vs \\<Longrightarrow> g x \\<down>= vs ! x\"\n    and \"\\<And>x. g (length vs + x) = f x\"\n  shows \"g = vs \\<odot> f\"", "lemma r_prepend_recfn:\n  assumes \"recfn 1 r\"\n  shows \"recfn 1 (r_prepend vs r)\"", "lemma r_prepend:\n  assumes \"recfn 1 r\"\n  shows \"eval (r_prepend vs r) [x] =\n    (if x < length vs then Some (vs ! x) else eval r [x - length vs])\"", "lemma r_prepend_total:\n  assumes \"recfn 1 r\" and \"total r\"\n  shows \"eval (r_prepend vs r) [x] \\<down>=\n    (if x < length vs then vs ! x else the (eval r [x - length vs]))\"", "lemma prepend_in_P1:\n  assumes \"f \\<in> \\<P>\"\n  shows \"vs \\<odot> f \\<in> \\<P>\"", "lemma prepend_in_R1:\n  assumes \"f \\<in> \\<R>\"\n  shows \"vs \\<odot> f \\<in> \\<R>\"", "lemma prepend_associative: \"(us @ vs) \\<odot> f = us \\<odot> vs \\<odot> f\" (is \"?lhs = ?rhs\")", "lemma almost0_in_R1: \"vs \\<odot> 0\\<^sup>\\<infinity> \\<in> \\<R>\"", "lemma U0_altdef: \"U\\<^sub>0 = {prenum e| e. e \\<in> UNIV}\" (is \"U\\<^sub>0 = ?W\")", "lemma U0_in_NUM: \"U\\<^sub>0 \\<in> NUM\"", "lemma almost0_canonical:\n  assumes \"f = vs \\<odot> 0\\<^sup>\\<infinity>\" and \"f \\<noteq> 0\\<^sup>\\<infinity>\"\n  obtains ws where \"length ws > 0\" and \"last ws \\<noteq> 0\" and \"f = ws \\<odot> 0\\<^sup>\\<infinity>\"", "lemma learn_limE:\n  assumes \"learn_lim \\<psi> U s\"\n  shows \"environment \\<psi> U s\"\n    and \"\\<And>f. f \\<in> U \\<Longrightarrow> \\<exists>i. \\<psi> i = f \\<and> (\\<forall>\\<^sup>\\<infinity>n. s (f \\<triangleright> n) \\<down>= i)\"", "lemma learn_limI:\n  assumes \"environment \\<psi> U s\"\n    and \"\\<And>f. f \\<in> U \\<Longrightarrow> \\<exists>i. \\<psi> i = f \\<and> (\\<forall>\\<^sup>\\<infinity>n. s (f \\<triangleright> n) \\<down>= i)\"\n  shows \"learn_lim \\<psi> U s\"", "lemma learn_lim_closed_subseteq:\n  assumes \"learn_lim \\<psi> U s\" and \"V \\<subseteq> U\"\n  shows \"learn_lim \\<psi> V s\"", "lemma infinite_hyp_changes_not_Lim:\n  assumes \"f \\<in> U\" and \"\\<forall>n. \\<exists>m\\<^sub>1>n. \\<exists>m\\<^sub>2>n. s (f \\<triangleright> m\\<^sub>1) \\<noteq> s (f \\<triangleright> m\\<^sub>2)\"\n  shows \"\\<not> learn_lim \\<psi> U s\"", "lemma always_hyp_change_not_Lim:\n  assumes \"\\<And>x. s (f \\<triangleright> (Suc x)) \\<noteq> s (f \\<triangleright> x)\"\n  shows \"\\<not> learn_lim \\<psi> {f} s\"", "lemma infinite_hyp_wrong_not_Lim:\n  assumes \"f \\<in> U\" and \"\\<forall>n. \\<exists>m>n. \\<psi> (the (s (f \\<triangleright> m))) \\<noteq> f\"\n  shows \"\\<not> learn_lim \\<psi> U s\"", "lemma same_hyp_for_two_not_Lim:\n  assumes \"f\\<^sub>1 \\<in> U\"\n    and \"f\\<^sub>2 \\<in> U\"\n    and \"f\\<^sub>1 \\<noteq> f\\<^sub>2\"\n    and \"\\<forall>n\\<ge>n\\<^sub>1. s (f\\<^sub>1 \\<triangleright> n) = h\"\n    and \"\\<forall>n\\<ge>n\\<^sub>2. s (f\\<^sub>2 \\<triangleright> n) = h\"\n  shows \"\\<not> learn_lim \\<psi> U s\"", "lemma learn_lim_extra_wrt_goedel:\n  fixes extra :: \"(partial1 set) \\<Rightarrow> partial1 \\<Rightarrow> nat \\<Rightarrow> partial1 \\<Rightarrow> bool\"\n  assumes \"goedel_numbering \\<chi>\"\n    and \"learn_lim \\<psi> U s\"\n    and \"\\<And>f n. f \\<in> U \\<Longrightarrow> extra U f n (\\<psi> (the (s (f \\<triangleright> n))))\"\n  shows \"\\<exists>t. learn_lim \\<chi> U t \\<and> (\\<forall>f\\<in>U. \\<forall>n. extra U f n (\\<chi> (the (t (f \\<triangleright> n)))))\"", "lemma learn_lim_wrt_goedel:\n  assumes \"goedel_numbering \\<chi>\" and \"learn_lim \\<psi> U s\"\n  shows \"\\<exists>t. learn_lim \\<chi> U t\"", "lemma LIM_wrt_phi_eq_Lim: \"LIM_wrt \\<phi> = LIM\"", "lemma learn_bcE:\n  assumes \"learn_bc \\<psi> U s\"\n  shows \"environment \\<psi> U s\"\n    and \"\\<And>f. f \\<in> U \\<Longrightarrow> \\<forall>\\<^sup>\\<infinity>n. \\<psi> (the (s (f \\<triangleright> n))) = f\"", "lemma learn_bcI:\n  assumes \"environment \\<psi> U s\"\n    and \"\\<And>f. f \\<in> U \\<Longrightarrow> \\<forall>\\<^sup>\\<infinity>n. \\<psi> (the (s (f \\<triangleright> n))) = f\"\n  shows \"learn_bc \\<psi> U s\"", "lemma learn_lim_imp_BC: \"learn_lim \\<psi> U s \\<Longrightarrow> learn_bc \\<psi> U s\"", "lemma Lim_subseteq_BC: \"LIM \\<subseteq> BC\"", "lemma learn_bc_closed_subseteq:\n  assumes \"learn_bc \\<psi> U s\" and \"V \\<subseteq> U\"\n  shows \"learn_bc \\<psi> V s\"", "lemma infinite_hyp_wrong_not_BC:\n  assumes \"f \\<in> U\" and \"\\<forall>n. \\<exists>m>n. \\<psi> (the (s (f \\<triangleright> m))) \\<noteq> f\"\n  shows \"\\<not> learn_bc \\<psi> U s\"", "lemma learn_bc_extra_wrt_goedel:\n  fixes extra :: \"(partial1 set) \\<Rightarrow> partial1 \\<Rightarrow> nat \\<Rightarrow> partial1 \\<Rightarrow> bool\"\n  assumes \"goedel_numbering \\<chi>\"\n    and \"learn_bc \\<psi> U s\"\n    and \"\\<And>f n. f \\<in> U \\<Longrightarrow> extra U f n (\\<psi> (the (s (f \\<triangleright> n))))\"\n  shows \"\\<exists>t. learn_bc \\<chi> U t \\<and> (\\<forall>f\\<in>U. \\<forall>n. extra U f n (\\<chi> (the (t (f \\<triangleright> n)))))\"", "lemma CONS_subseteq_Lim: \"CONS \\<subseteq> LIM\"", "lemma learn_consI:\n  assumes \"environment \\<psi> U s\"\n    and \"\\<And>f. f \\<in> U \\<Longrightarrow> \\<exists>i. \\<psi> i = f \\<and> (\\<forall>\\<^sup>\\<infinity>n. s (f \\<triangleright> n) \\<down>= i)\"\n    and \"\\<And>f n. f \\<in> U \\<Longrightarrow> \\<forall>k\\<le>n. \\<psi> (the (s (f \\<triangleright> n))) k = f k\"\n  shows \"learn_cons \\<psi> U s\"", "lemma learn_consI2:\n  assumes \"environment \\<psi> U s\"\n    and \"\\<And>f. f \\<in> U \\<Longrightarrow> \\<exists>i. \\<forall>\\<^sup>\\<infinity>n. s (f \\<triangleright> n) \\<down>= i\"\n    and \"\\<And>f n. f \\<in> U \\<Longrightarrow> \\<forall>k\\<le>n. \\<psi> (the (s (f \\<triangleright> n))) k = f k\"\n  shows \"learn_cons \\<psi> U s\"", "lemma learn_consE:\n  assumes \"learn_cons \\<psi> U s\"\n  shows \"environment \\<psi> U s\"\n    and \"\\<And>f. f \\<in> U \\<Longrightarrow> \\<exists>i n\\<^sub>0. \\<psi> i = f \\<and> (\\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i)\"\n    and \"\\<And>f n. f \\<in> U \\<Longrightarrow> \\<forall>k\\<le>n. \\<psi> (the (s (f \\<triangleright> n))) k = f k\"", "lemma learn_cons_wrt_goedel:\n  assumes \"goedel_numbering \\<chi>\" and \"learn_cons \\<psi> U s\"\n  shows \"\\<exists>t. learn_cons \\<chi> U t\"", "lemma CONS_wrt_phi_eq_CONS: \"CONS_wrt \\<phi> = CONS\"", "lemma learn_cons_closed_subseteq:\n  assumes \"learn_cons \\<psi> U s\" and \"V \\<subseteq> U\"\n  shows \"learn_cons \\<psi> V s\"", "lemma CONS_closed_subseteq:\n  assumes \"U \\<in> CONS\" and \"V \\<subseteq> U\"\n  shows \"V \\<in> CONS\"", "lemma same_hyp_different_init_not_cons:\n  assumes \"f \\<in> U\"\n    and \"g \\<in> U\"\n    and \"f \\<triangleright> n \\<noteq> g \\<triangleright> n\"\n    and \"s (f \\<triangleright> n) = s (g \\<triangleright> n)\"\n  shows \"\\<not> learn_cons \\<phi> U s\"", "lemma TOTAL_subseteq_LIM: \"TOTAL \\<subseteq> LIM\"", "lemma learn_totalI:\n  assumes \"environment \\<psi> U s\"\n    and \"\\<And>f. f \\<in> U \\<Longrightarrow> \\<exists>i. \\<psi> i = f \\<and> (\\<forall>\\<^sup>\\<infinity>n. s (f \\<triangleright> n) \\<down>= i)\"\n    and \"\\<And>f n. f \\<in> U \\<Longrightarrow> \\<psi> (the (s (f \\<triangleright> n))) \\<in> \\<R>\"\n  shows \"learn_total \\<psi> U s\"", "lemma learn_totalE:\n  assumes \"learn_total \\<psi> U s\"\n  shows \"environment \\<psi> U s\"\n    and \"\\<And>f. f \\<in> U \\<Longrightarrow> \\<exists>i n\\<^sub>0. \\<psi> i = f \\<and> (\\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i)\"\n    and \"\\<And>f n. f \\<in> U \\<Longrightarrow> \\<psi> (the (s (f \\<triangleright> n))) \\<in> \\<R>\"", "lemma learn_total_wrt_goedel:\n  assumes \"goedel_numbering \\<chi>\" and \"learn_total \\<psi> U s\"\n  shows \"\\<exists>t. learn_total \\<chi> U t\"", "lemma TOTAL_wrt_phi_eq_TOTAL: \"TOTAL_wrt \\<phi> = TOTAL\"", "lemma learn_total_closed_subseteq:\n  assumes \"learn_total \\<psi> U s\" and \"V \\<subseteq> U\"\n  shows \"learn_total \\<psi> V s\"", "lemma TOTAL_closed_subseteq:\n  assumes \"U \\<in> TOTAL\" and \"V \\<subseteq> U\"\n  shows \"V \\<in> TOTAL\"", "lemma learn_cp_wrt_goedel:\n  assumes \"goedel_numbering \\<chi>\" and \"learn_cp \\<psi> U s\"\n  shows \"\\<exists>t. learn_cp \\<chi> U t\"", "lemma learn_cpI:\n  assumes \"environment \\<psi> U s\"\n    and \"\\<And>f. f \\<in> U \\<Longrightarrow> \\<exists>i. \\<psi> i = f \\<and> (\\<forall>\\<^sup>\\<infinity>n. s (f \\<triangleright> n) \\<down>= i)\"\n    and \"\\<And>f n. f \\<in> U \\<Longrightarrow> \\<psi> (the (s (f \\<triangleright> n))) \\<in> U\"\n  shows \"learn_cp \\<psi> U s\"", "lemma learn_cpE:\n  assumes \"learn_cp \\<psi> U s\"\n  shows \"environment \\<psi> U s\"\n    and \"\\<And>f. f \\<in>  U \\<Longrightarrow> \\<exists>i n\\<^sub>0. \\<psi> i = f \\<and> (\\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i)\"\n    and \"\\<And>f n. f \\<in> U \\<Longrightarrow> \\<psi> (the (s (f \\<triangleright> n))) \\<in> U\"", "lemma learn_cp_imp_total: \"learn_cp \\<psi> U s \\<Longrightarrow> learn_total \\<psi> U s\"", "lemma CP_subseteq_TOTAL: \"CP \\<subseteq> TOTAL\"", "lemma learn_finI:\n  assumes \"environment \\<psi> U s\"\n    and \"\\<And>f. f \\<in> U \\<Longrightarrow>\n      \\<exists>i n\\<^sub>0. \\<psi> i = f \\<and> (\\<forall>n<n\\<^sub>0. s (f \\<triangleright> n) \\<down>= 0) \\<and> (\\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= Suc i)\"\n  shows \"learn_fin \\<psi> U s\"", "lemma learn_finE:\n  assumes \"learn_fin \\<psi> U s\"\n  shows \"environment \\<psi> U s\"\n    and \"\\<And>f. f \\<in> U \\<Longrightarrow>\n      \\<exists>i n\\<^sub>0. \\<psi> i = f \\<and> (\\<forall>n<n\\<^sub>0. s (f \\<triangleright> n) \\<down>= 0) \\<and> (\\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= Suc i)\"", "lemma learn_fin_closed_subseteq:\n  assumes \"learn_fin \\<psi> U s\" and \"V \\<subseteq> U\"\n  shows \"learn_fin \\<psi> V s\"", "lemma learn_fin_wrt_goedel:\n  assumes \"goedel_numbering \\<chi>\" and \"learn_fin \\<psi> U s\"\n  shows \"\\<exists>t. learn_fin \\<chi> U t\""], "translations": [["", "lemma length_prefix [simp]: \"length (prefix f n) = Suc n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length (prefix f n) = Suc n", "unfolding prefix_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. length (map (\\<lambda>x. the (f x)) [0..<Suc n]) = Suc n", "by simp"], ["", "lemma prefix_nth [simp]:\n  assumes \"k < Suc n\"\n  shows \"prefix f n ! k = the (f k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prefix f n ! k = the (f k)", "unfolding prefix_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. map (\\<lambda>x. the (f x)) [0..<Suc n] ! k = the (f k)", "using assms nth_map_upt[of k \"Suc n\" 0 \"\\<lambda>x. the (f x)\"]"], ["proof (prove)\nusing this:\n  k < Suc n\n  k < Suc n - 0 \\<Longrightarrow>\n  map (\\<lambda>x. the (f x)) [0..<Suc n] ! k = the (f (0 + k))\n\ngoal (1 subgoal):\n 1. map (\\<lambda>x. the (f x)) [0..<Suc n] ! k = the (f k)", "by simp"], ["", "lemma prefixI:\n  assumes \"length vs > 0\" and \"\\<And>x. x < length vs \\<Longrightarrow> f x \\<down>= vs ! x\"\n  shows \"prefix f (length vs - 1) = vs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prefix f (length vs - 1) = vs", "using assms nth_equalityI[of \"prefix f (length vs - 1)\" vs]"], ["proof (prove)\nusing this:\n  0 < length vs\n  ?x < length vs \\<Longrightarrow> f ?x \\<down>= vs ! ?x\n  \\<lbrakk>length (prefix f (length vs - 1)) = length vs;\n   \\<And>i.\n      i < length (prefix f (length vs - 1)) \\<Longrightarrow>\n      prefix f (length vs - 1) ! i = vs ! i\\<rbrakk>\n  \\<Longrightarrow> prefix f (length vs - 1) = vs\n\ngoal (1 subgoal):\n 1. prefix f (length vs - 1) = vs", "by simp"], ["", "lemma prefixI':\n  assumes \"length vs = Suc n\" and \"\\<And>x. x < Suc n \\<Longrightarrow> f x \\<down>= vs ! x\"\n  shows \"prefix f n = vs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prefix f n = vs", "using assms nth_equalityI[of \"prefix f (length vs - 1)\" vs]"], ["proof (prove)\nusing this:\n  length vs = Suc n\n  ?x < Suc n \\<Longrightarrow> f ?x \\<down>= vs ! ?x\n  \\<lbrakk>length (prefix f (length vs - 1)) = length vs;\n   \\<And>i.\n      i < length (prefix f (length vs - 1)) \\<Longrightarrow>\n      prefix f (length vs - 1) ! i = vs ! i\\<rbrakk>\n  \\<Longrightarrow> prefix f (length vs - 1) = vs\n\ngoal (1 subgoal):\n 1. prefix f n = vs", "by simp"], ["", "lemma prefixE:\n  assumes \"prefix f (length vs - 1) = vs\"\n    and \"f \\<in> \\<R>\"\n    and \"length vs > 0\"\n    and \"x < length vs\"\n  shows \"f x \\<down>= vs ! x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f x \\<down>= vs ! x", "using assms length_prefix prefix_nth[of x \"length vs - 1\" f]"], ["proof (prove)\nusing this:\n  prefix f (length vs - 1) = vs\n  f \\<in> \\<R>\n  0 < length vs\n  x < length vs\n  length (prefix ?f ?n) = Suc ?n\n  x < Suc (length vs - 1) \\<Longrightarrow>\n  prefix f (length vs - 1) ! x = the (f x)\n\ngoal (1 subgoal):\n 1. f x \\<down>= vs ! x", "by simp"], ["", "lemma prefix_eqI:\n  assumes \"\\<And>x. x \\<le> n \\<Longrightarrow> f x = g x\"\n  shows \"prefix f n = prefix g n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prefix f n = prefix g n", "using assms prefix_def"], ["proof (prove)\nusing this:\n  ?x \\<le> n \\<Longrightarrow> f ?x = g ?x\n  prefix ?f ?n \\<equiv> map (\\<lambda>x. the (?f x)) [0..<Suc ?n]\n\ngoal (1 subgoal):\n 1. prefix f n = prefix g n", "by simp"], ["", "lemma prefix_0: \"prefix f 0 = [the (f 0)]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prefix f 0 = [the (f 0)]", "using prefix_def"], ["proof (prove)\nusing this:\n  prefix ?f ?n \\<equiv> map (\\<lambda>x. the (?f x)) [0..<Suc ?n]\n\ngoal (1 subgoal):\n 1. prefix f 0 = [the (f 0)]", "by simp"], ["", "lemma prefix_Suc: \"prefix f (Suc n) = prefix f n @ [the (f (Suc n))]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prefix f (Suc n) = prefix f n @ [the (f (Suc n))]", "unfolding prefix_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. map (\\<lambda>x. the (f x)) [0..<Suc (Suc n)] =\n    map (\\<lambda>x. the (f x)) [0..<Suc n] @ [the (f (Suc n))]", "by simp"], ["", "lemma take_prefix:\n  assumes \"f \\<in> \\<R>\" and \"k \\<le> n\"\n  shows \"prefix f k = take (Suc k) (prefix f n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prefix f k = take (Suc k) (prefix f n)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. prefix f k = take (Suc k) (prefix f n)", "let ?vs = \"take (Suc k) (prefix f n)\""], ["proof (state)\ngoal (1 subgoal):\n 1. prefix f k = take (Suc k) (prefix f n)", "have \"length ?vs = Suc k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length (take (Suc k) (prefix f n)) = Suc k", "using assms(2)"], ["proof (prove)\nusing this:\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. length (take (Suc k) (prefix f n)) = Suc k", "by simp"], ["proof (state)\nthis:\n  length (take (Suc k) (prefix f n)) = Suc k\n\ngoal (1 subgoal):\n 1. prefix f k = take (Suc k) (prefix f n)", "then"], ["proof (chain)\npicking this:\n  length (take (Suc k) (prefix f n)) = Suc k", "have \"\\<And>x. x < length ?vs \\<Longrightarrow> f x \\<down>= ?vs ! x\""], ["proof (prove)\nusing this:\n  length (take (Suc k) (prefix f n)) = Suc k\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x < length (take (Suc k) (prefix f n)) \\<Longrightarrow>\n       f x \\<down>= take (Suc k) (prefix f n) ! x", "using assms"], ["proof (prove)\nusing this:\n  length (take (Suc k) (prefix f n)) = Suc k\n  f \\<in> \\<R>\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x < length (take (Suc k) (prefix f n)) \\<Longrightarrow>\n       f x \\<down>= take (Suc k) (prefix f n) ! x", "by auto"], ["proof (state)\nthis:\n  ?x < length (take (Suc k) (prefix f n)) \\<Longrightarrow>\n  f ?x \\<down>= take (Suc k) (prefix f n) ! ?x\n\ngoal (1 subgoal):\n 1. prefix f k = take (Suc k) (prefix f n)", "then"], ["proof (chain)\npicking this:\n  ?x < length (take (Suc k) (prefix f n)) \\<Longrightarrow>\n  f ?x \\<down>= take (Suc k) (prefix f n) ! ?x", "show ?thesis"], ["proof (prove)\nusing this:\n  ?x < length (take (Suc k) (prefix f n)) \\<Longrightarrow>\n  f ?x \\<down>= take (Suc k) (prefix f n) ! ?x\n\ngoal (1 subgoal):\n 1. prefix f k = take (Suc k) (prefix f n)", "using prefixI[where ?vs=\"?vs\"] \\<open>length ?vs = Suc k\\<close>"], ["proof (prove)\nusing this:\n  ?x < length (take (Suc k) (prefix f n)) \\<Longrightarrow>\n  f ?x \\<down>= take (Suc k) (prefix f n) ! ?x\n  \\<lbrakk>0 < length (take (Suc k) (prefix f n));\n   \\<And>x.\n      x < length (take (Suc k) (prefix f n)) \\<Longrightarrow>\n      ?f x \\<down>= take (Suc k) (prefix f n) ! x\\<rbrakk>\n  \\<Longrightarrow> prefix ?f (length (take (Suc k) (prefix f n)) - 1) =\n                    take (Suc k) (prefix f n)\n  length (take (Suc k) (prefix f n)) = Suc k\n\ngoal (1 subgoal):\n 1. prefix f k = take (Suc k) (prefix f n)", "by simp"], ["proof (state)\nthis:\n  prefix f k = take (Suc k) (prefix f n)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Strategies receive prefixes in the form of encoded lists. The\nterm ``prefix'' refers to both encoded and unencoded lists. We use the\nnotation @{text \"f \\<triangleright> n\"} for the prefix $f^n$.\\<close>"], ["", "definition init :: \"partial1 \\<Rightarrow> nat \\<Rightarrow> nat\" (infix \"\\<triangleright>\" 110) where\n  \"f \\<triangleright> n \\<equiv> list_encode (prefix f n)\""], ["", "lemma init_neq_zero: \"f \\<triangleright> n \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<triangleright> n \\<noteq> 0", "unfolding init_def prefix_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Partial_Recursive.list_encode\n     (map (\\<lambda>x. the (f x)) [0..<Suc n]) \\<noteq>\n    0", "using list_encode_0"], ["proof (prove)\nusing this:\n  Partial_Recursive.list_encode ?xs = 0 \\<Longrightarrow> ?xs = []\n\ngoal (1 subgoal):\n 1. Partial_Recursive.list_encode\n     (map (\\<lambda>x. the (f x)) [0..<Suc n]) \\<noteq>\n    0", "by fastforce"], ["", "lemma init_prefixE [elim]: \"prefix f n = prefix g n \\<Longrightarrow> f \\<triangleright> n = g \\<triangleright> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prefix f n = prefix g n \\<Longrightarrow>\n    f \\<triangleright> n = g \\<triangleright> n", "unfolding init_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. prefix f n = prefix g n \\<Longrightarrow>\n    Partial_Recursive.list_encode (prefix f n) =\n    Partial_Recursive.list_encode (prefix g n)", "by simp"], ["", "lemma init_eqI:\n  assumes \"\\<And>x. x \\<le> n \\<Longrightarrow> f x = g x\"\n  shows \"f \\<triangleright> n = g \\<triangleright> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<triangleright> n = g \\<triangleright> n", "unfolding init_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Partial_Recursive.list_encode (prefix f n) =\n    Partial_Recursive.list_encode (prefix g n)", "using prefix_eqI[OF assms]"], ["proof (prove)\nusing this:\n  (\\<And>x. x \\<le> ?n \\<Longrightarrow> ?x1 x \\<le> n) \\<Longrightarrow>\n  prefix (\\<lambda>x. f (?x1 x)) ?n = prefix (\\<lambda>x. g (?x1 x)) ?n\n\ngoal (1 subgoal):\n 1. Partial_Recursive.list_encode (prefix f n) =\n    Partial_Recursive.list_encode (prefix g n)", "by simp"], ["", "lemma initI:\n  assumes \"e_length e > 0\" and \"\\<And>x. x < e_length e \\<Longrightarrow> f x \\<down>= e_nth e x\"\n  shows \"f \\<triangleright> (e_length e - 1) = e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<triangleright> (e_length e - 1) = e", "unfolding init_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Partial_Recursive.list_encode (prefix f (e_length e - 1)) = e", "using assms prefixI"], ["proof (prove)\nusing this:\n  0 < e_length e\n  ?x < e_length e \\<Longrightarrow> f ?x \\<down>= e_nth e ?x\n  \\<lbrakk>0 < length ?vs;\n   \\<And>x. x < length ?vs \\<Longrightarrow> ?f x \\<down>= ?vs ! x\\<rbrakk>\n  \\<Longrightarrow> prefix ?f (length ?vs - 1) = ?vs\n\ngoal (1 subgoal):\n 1. Partial_Recursive.list_encode (prefix f (e_length e - 1)) = e", "by simp"], ["", "lemma initI':\n  assumes \"e_length e = Suc n\" and \"\\<And>x. x <  Suc n \\<Longrightarrow> f x \\<down>= e_nth e x\"\n  shows \"f \\<triangleright> n = e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<triangleright> n = e", "unfolding init_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Partial_Recursive.list_encode (prefix f n) = e", "using assms prefixI'"], ["proof (prove)\nusing this:\n  e_length e = Suc n\n  ?x < Suc n \\<Longrightarrow> f ?x \\<down>= e_nth e ?x\n  \\<lbrakk>length ?vs = Suc ?n;\n   \\<And>x. x < Suc ?n \\<Longrightarrow> ?f x \\<down>= ?vs ! x\\<rbrakk>\n  \\<Longrightarrow> prefix ?f ?n = ?vs\n\ngoal (1 subgoal):\n 1. Partial_Recursive.list_encode (prefix f n) = e", "by simp"], ["", "lemma init_iff_list_eq_upto:\n  assumes \"f \\<in> \\<R>\" and \"e_length vs > 0\"\n  shows \"(\\<forall>x<e_length vs. f x \\<down>= e_nth vs x) \\<longleftrightarrow> prefix f (e_length vs - 1) = list_decode vs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x<e_length vs. f x \\<down>= e_nth vs x) =\n    (prefix f (e_length vs - 1) = Partial_Recursive.list_decode vs)", "using prefixI[OF assms(2)] prefixE[OF _ assms]"], ["proof (prove)\nusing this:\n  (\\<And>x.\n      x < e_length vs \\<Longrightarrow>\n      ?f x \\<down>= Partial_Recursive.list_decode vs ! x) \\<Longrightarrow>\n  prefix ?f (e_length vs - 1) = Partial_Recursive.list_decode vs\n  \\<lbrakk>prefix f (e_length vs - 1) = Partial_Recursive.list_decode vs;\n   ?x < e_length vs\\<rbrakk>\n  \\<Longrightarrow> f ?x \\<down>= Partial_Recursive.list_decode vs ! ?x\n\ngoal (1 subgoal):\n 1. (\\<forall>x<e_length vs. f x \\<down>= e_nth vs x) =\n    (prefix f (e_length vs - 1) = Partial_Recursive.list_decode vs)", "by auto"], ["", "lemma length_init [simp]: \"e_length (f \\<triangleright> n) = Suc n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e_length (f \\<triangleright> n) = Suc n", "unfolding init_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. e_length (Partial_Recursive.list_encode (prefix f n)) = Suc n", "by simp"], ["", "lemma init_Suc_snoc: \"f \\<triangleright> (Suc n) = e_snoc (f \\<triangleright> n) (the (f (Suc n)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<triangleright> Suc n =\n    e_snoc (f \\<triangleright> n) (the (f (Suc n)))", "unfolding init_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Partial_Recursive.list_encode (prefix f (Suc n)) =\n    e_snoc (Partial_Recursive.list_encode (prefix f n)) (the (f (Suc n)))", "by (simp add: prefix_Suc)"], ["", "lemma nth_init: \"i < Suc n \\<Longrightarrow> e_nth (f \\<triangleright> n) i = the (f i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < Suc n \\<Longrightarrow> e_nth (f \\<triangleright> n) i = the (f i)", "unfolding init_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. i < Suc n \\<Longrightarrow>\n    e_nth (Partial_Recursive.list_encode (prefix f n)) i = the (f i)", "using prefix_nth"], ["proof (prove)\nusing this:\n  ?k < Suc ?n \\<Longrightarrow> prefix ?f ?n ! ?k = the (?f ?k)\n\ngoal (1 subgoal):\n 1. i < Suc n \\<Longrightarrow>\n    e_nth (Partial_Recursive.list_encode (prefix f n)) i = the (f i)", "by auto"], ["", "lemma hd_init [simp]: \"e_hd (f \\<triangleright> n) = the (f 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e_hd (f \\<triangleright> n) = the (f 0)", "unfolding init_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. e_hd (Partial_Recursive.list_encode (prefix f n)) = the (f 0)", "using init_neq_zero"], ["proof (prove)\nusing this:\n  ?f \\<triangleright> ?n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. e_hd (Partial_Recursive.list_encode (prefix f n)) = the (f 0)", "by (simp add: e_hd_nth0)"], ["", "lemma list_decode_init [simp]: \"list_decode (f \\<triangleright> n) = prefix f n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Partial_Recursive.list_decode (f \\<triangleright> n) = prefix f n", "unfolding init_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Partial_Recursive.list_decode\n     (Partial_Recursive.list_encode (prefix f n)) =\n    prefix f n", "by simp"], ["", "lemma init_eq_iff_eq_upto:\n  assumes \"g \\<in> \\<R>\" and \"f \\<in> \\<R>\"\n  shows \"(\\<forall>j<Suc n. g j = f j) \\<longleftrightarrow> g \\<triangleright> n = f \\<triangleright> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>j<Suc n. g j = f j) =\n    (g \\<triangleright> n = f \\<triangleright> n)", "using assms initI' init_iff_list_eq_upto length_init list_decode_init"], ["proof (prove)\nusing this:\n  g \\<in> \\<R>\n  f \\<in> \\<R>\n  \\<lbrakk>e_length ?e = Suc ?n;\n   \\<And>x. x < Suc ?n \\<Longrightarrow> ?f x \\<down>= e_nth ?e x\\<rbrakk>\n  \\<Longrightarrow> ?f \\<triangleright> ?n = ?e\n  \\<lbrakk>?f \\<in> \\<R>; 0 < e_length ?vs\\<rbrakk>\n  \\<Longrightarrow> (\\<forall>x<e_length ?vs. ?f x \\<down>= e_nth ?vs x) =\n                    (prefix ?f (e_length ?vs - 1) =\n                     Partial_Recursive.list_decode ?vs)\n  e_length (?f \\<triangleright> ?n) = Suc ?n\n  Partial_Recursive.list_decode (?f \\<triangleright> ?n) = prefix ?f ?n\n\ngoal (1 subgoal):\n 1. (\\<forall>j<Suc n. g j = f j) =\n    (g \\<triangleright> n = f \\<triangleright> n)", "by (metis diff_Suc_1 zero_less_Suc)"], ["", "definition is_init_of :: \"nat \\<Rightarrow> partial1 \\<Rightarrow> bool\" where\n  \"is_init_of t f \\<equiv> \\<forall>i<e_length t. f i \\<down>= e_nth t i\""], ["", "lemma not_initial_imp_not_eq:\n  assumes \"\\<And>x. x < Suc n \\<Longrightarrow> f x \\<down>\" and \"\\<not> (is_init_of (f \\<triangleright> n) g)\"\n  shows \"f \\<noteq> g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<noteq> g", "using is_init_of_def assms"], ["proof (prove)\nusing this:\n  is_init_of ?t ?f \\<equiv> \\<forall>i<e_length ?t. ?f i \\<down>= e_nth ?t i\n  ?x < Suc n \\<Longrightarrow> f ?x \\<down>\n  \\<not> is_init_of (f \\<triangleright> n) g\n\ngoal (1 subgoal):\n 1. f \\<noteq> g", "by auto"], ["", "lemma all_init_eq_imp_fun_eq:\n  assumes \"f \\<in> \\<R>\" and \"g \\<in> \\<R>\" and \"\\<And>n. f \\<triangleright> n = g \\<triangleright> n\"\n  shows \"f = g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f = g", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. f x = g x", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. f x = g x", "from assms"], ["proof (chain)\npicking this:\n  f \\<in> \\<R>\n  g \\<in> \\<R>\n  f \\<triangleright> ?n = g \\<triangleright> ?n", "have \"prefix f n = prefix g n\""], ["proof (prove)\nusing this:\n  f \\<in> \\<R>\n  g \\<in> \\<R>\n  f \\<triangleright> ?n = g \\<triangleright> ?n\n\ngoal (1 subgoal):\n 1. prefix f n = prefix g n", "by (metis init_def list_decode_encode)"], ["proof (state)\nthis:\n  prefix f n = prefix g n\n\ngoal (1 subgoal):\n 1. \\<And>x. f x = g x", "then"], ["proof (chain)\npicking this:\n  prefix f n = prefix g n", "have \"the (f n) = the (g n)\""], ["proof (prove)\nusing this:\n  prefix f n = prefix g n\n\ngoal (1 subgoal):\n 1. the (f n) = the (g n)", "unfolding init_def prefix_def"], ["proof (prove)\nusing this:\n  map (\\<lambda>x. the (f x)) [0..<Suc n] =\n  map (\\<lambda>x. the (g x)) [0..<Suc n]\n\ngoal (1 subgoal):\n 1. the (f n) = the (g n)", "by simp"], ["proof (state)\nthis:\n  the (f n) = the (g n)\n\ngoal (1 subgoal):\n 1. \\<And>x. f x = g x", "then"], ["proof (chain)\npicking this:\n  the (f n) = the (g n)", "show \"f n = g n\""], ["proof (prove)\nusing this:\n  the (f n) = the (g n)\n\ngoal (1 subgoal):\n 1. f n = g n", "using assms(1,2)"], ["proof (prove)\nusing this:\n  the (f n) = the (g n)\n  f \\<in> \\<R>\n  g \\<in> \\<R>\n\ngoal (1 subgoal):\n 1. f n = g n", "by (meson R1_imp_total1 option.expand total1E)"], ["proof (state)\nthis:\n  f n = g n\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary neq_fun_neq_init:\n  assumes \"f \\<in> \\<R>\" and \"g \\<in> \\<R>\" and \"f \\<noteq> g\"\n  shows \"\\<exists>n. f \\<triangleright> n \\<noteq> g \\<triangleright> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n. f \\<triangleright> n \\<noteq> g \\<triangleright> n", "using assms all_init_eq_imp_fun_eq"], ["proof (prove)\nusing this:\n  f \\<in> \\<R>\n  g \\<in> \\<R>\n  f \\<noteq> g\n  \\<lbrakk>?f \\<in> \\<R>; ?g \\<in> \\<R>;\n   \\<And>n. ?f \\<triangleright> n = ?g \\<triangleright> n\\<rbrakk>\n  \\<Longrightarrow> ?f = ?g\n\ngoal (1 subgoal):\n 1. \\<exists>n. f \\<triangleright> n \\<noteq> g \\<triangleright> n", "by auto"], ["", "lemma eq_init_forall_le:\n  assumes \"f \\<triangleright> n = g \\<triangleright> n\" and \"m \\<le> n\"\n  shows \"f \\<triangleright> m = g \\<triangleright> m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<triangleright> m = g \\<triangleright> m", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<triangleright> m = g \\<triangleright> m", "from assms(1)"], ["proof (chain)\npicking this:\n  f \\<triangleright> n = g \\<triangleright> n", "have \"prefix f n = prefix g n\""], ["proof (prove)\nusing this:\n  f \\<triangleright> n = g \\<triangleright> n\n\ngoal (1 subgoal):\n 1. prefix f n = prefix g n", "by (metis init_def list_decode_encode)"], ["proof (state)\nthis:\n  prefix f n = prefix g n\n\ngoal (1 subgoal):\n 1. f \\<triangleright> m = g \\<triangleright> m", "then"], ["proof (chain)\npicking this:\n  prefix f n = prefix g n", "have \"the (f k) = the (g k)\" if \"k \\<le> n\" for k"], ["proof (prove)\nusing this:\n  prefix f n = prefix g n\n\ngoal (1 subgoal):\n 1. the (f k) = the (g k)", "using prefix_def that"], ["proof (prove)\nusing this:\n  prefix f n = prefix g n\n  prefix ?f ?n \\<equiv> map (\\<lambda>x. the (?f x)) [0..<Suc ?n]\n  k \\<le> n\n\ngoal (1 subgoal):\n 1. the (f k) = the (g k)", "by auto"], ["proof (state)\nthis:\n  ?k \\<le> n \\<Longrightarrow> the (f ?k) = the (g ?k)\n\ngoal (1 subgoal):\n 1. f \\<triangleright> m = g \\<triangleright> m", "then"], ["proof (chain)\npicking this:\n  ?k \\<le> n \\<Longrightarrow> the (f ?k) = the (g ?k)", "have \"the (f k) = the (g k)\" if \"k \\<le> m\" for k"], ["proof (prove)\nusing this:\n  ?k \\<le> n \\<Longrightarrow> the (f ?k) = the (g ?k)\n\ngoal (1 subgoal):\n 1. the (f k) = the (g k)", "using assms(2) that"], ["proof (prove)\nusing this:\n  ?k \\<le> n \\<Longrightarrow> the (f ?k) = the (g ?k)\n  m \\<le> n\n  k \\<le> m\n\ngoal (1 subgoal):\n 1. the (f k) = the (g k)", "by simp"], ["proof (state)\nthis:\n  ?k \\<le> m \\<Longrightarrow> the (f ?k) = the (g ?k)\n\ngoal (1 subgoal):\n 1. f \\<triangleright> m = g \\<triangleright> m", "then"], ["proof (chain)\npicking this:\n  ?k \\<le> m \\<Longrightarrow> the (f ?k) = the (g ?k)", "have \"prefix f m = prefix g m\""], ["proof (prove)\nusing this:\n  ?k \\<le> m \\<Longrightarrow> the (f ?k) = the (g ?k)\n\ngoal (1 subgoal):\n 1. prefix f m = prefix g m", "using prefix_def"], ["proof (prove)\nusing this:\n  ?k \\<le> m \\<Longrightarrow> the (f ?k) = the (g ?k)\n  prefix ?f ?n \\<equiv> map (\\<lambda>x. the (?f x)) [0..<Suc ?n]\n\ngoal (1 subgoal):\n 1. prefix f m = prefix g m", "by simp"], ["proof (state)\nthis:\n  prefix f m = prefix g m\n\ngoal (1 subgoal):\n 1. f \\<triangleright> m = g \\<triangleright> m", "then"], ["proof (chain)\npicking this:\n  prefix f m = prefix g m", "show ?thesis"], ["proof (prove)\nusing this:\n  prefix f m = prefix g m\n\ngoal (1 subgoal):\n 1. f \\<triangleright> m = g \\<triangleright> m", "by (simp add: init_def)"], ["proof (state)\nthis:\n  f \\<triangleright> m = g \\<triangleright> m\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary neq_init_forall_ge:\n  assumes \"f \\<triangleright> n \\<noteq> g \\<triangleright> n\" and \"m \\<ge> n\"\n  shows \"f \\<triangleright> m \\<noteq> g \\<triangleright> m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<triangleright> m \\<noteq> g \\<triangleright> m", "using eq_init_forall_le assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?f \\<triangleright> ?n = ?g \\<triangleright> ?n;\n   ?m \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> ?f \\<triangleright> ?m = ?g \\<triangleright> ?m\n  f \\<triangleright> n \\<noteq> g \\<triangleright> n\n  n \\<le> m\n\ngoal (1 subgoal):\n 1. f \\<triangleright> m \\<noteq> g \\<triangleright> m", "by blast"], ["", "lemma e_take_init:\n  assumes \"f \\<in> \\<R>\" and \"k < Suc n\"\n  shows \"e_take (Suc k) (f \\<triangleright> n) = f \\<triangleright> k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e_take (Suc k) (f \\<triangleright> n) = f \\<triangleright> k", "using assms take_prefix"], ["proof (prove)\nusing this:\n  f \\<in> \\<R>\n  k < Suc n\n  \\<lbrakk>?f \\<in> \\<R>; ?k \\<le> ?n\\<rbrakk>\n  \\<Longrightarrow> prefix ?f ?k = take (Suc ?k) (prefix ?f ?n)\n\ngoal (1 subgoal):\n 1. e_take (Suc k) (f \\<triangleright> n) = f \\<triangleright> k", "by (simp add: init_def less_Suc_eq_le)"], ["", "lemma init_butlast_init:\n  assumes \"total1 f\" and \"f \\<triangleright> n = e\" and \"n > 0\"\n  shows \"f \\<triangleright> (n - 1) = e_butlast e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<triangleright> (n - 1) = e_butlast e", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<triangleright> (n - 1) = e_butlast e", "let ?e = \"e_butlast e\""], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<triangleright> (n - 1) = e_butlast e", "have \"e_length e = Suc n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e_length e = Suc n", "using assms(2)"], ["proof (prove)\nusing this:\n  f \\<triangleright> n = e\n\ngoal (1 subgoal):\n 1. e_length e = Suc n", "by auto"], ["proof (state)\nthis:\n  e_length e = Suc n\n\ngoal (1 subgoal):\n 1. f \\<triangleright> (n - 1) = e_butlast e", "then"], ["proof (chain)\npicking this:\n  e_length e = Suc n", "have len: \"e_length ?e = n\""], ["proof (prove)\nusing this:\n  e_length e = Suc n\n\ngoal (1 subgoal):\n 1. e_length (e_butlast e) = n", "by simp"], ["proof (state)\nthis:\n  e_length (e_butlast e) = n\n\ngoal (1 subgoal):\n 1. f \\<triangleright> (n - 1) = e_butlast e", "have \"f \\<triangleright> (e_length ?e - 1) = ?e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<triangleright> (e_length (e_butlast e) - 1) = e_butlast e", "proof (rule initI)"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < e_length (e_butlast e)\n 2. \\<And>x.\n       x < e_length (e_butlast e) \\<Longrightarrow>\n       f x \\<down>= e_nth (e_butlast e) x", "show \"0 < e_length ?e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < e_length (e_butlast e)", "using assms(3) len"], ["proof (prove)\nusing this:\n  0 < n\n  e_length (e_butlast e) = n\n\ngoal (1 subgoal):\n 1. 0 < e_length (e_butlast e)", "by simp"], ["proof (state)\nthis:\n  0 < e_length (e_butlast e)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x < e_length (e_butlast e) \\<Longrightarrow>\n       f x \\<down>= e_nth (e_butlast e) x", "have \"\\<And>x. x < e_length e \\<Longrightarrow> f x \\<down>= e_nth e x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. x < e_length e \\<Longrightarrow> f x \\<down>= e_nth e x", "using assms(1,2) total1_def \\<open>e_length e = Suc n\\<close>"], ["proof (prove)\nusing this:\n  total1 f\n  f \\<triangleright> n = e\n  total1 ?f \\<equiv> \\<forall>x. ?f x \\<down>\n  e_length e = Suc n\n\ngoal (1 subgoal):\n 1. \\<And>x. x < e_length e \\<Longrightarrow> f x \\<down>= e_nth e x", "by auto"], ["proof (state)\nthis:\n  ?x < e_length e \\<Longrightarrow> f ?x \\<down>= e_nth e ?x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x < e_length (e_butlast e) \\<Longrightarrow>\n       f x \\<down>= e_nth (e_butlast e) x", "then"], ["proof (chain)\npicking this:\n  ?x < e_length e \\<Longrightarrow> f ?x \\<down>= e_nth e ?x", "show \"\\<And>x. x < e_length ?e \\<Longrightarrow> f x \\<down>= e_nth ?e x\""], ["proof (prove)\nusing this:\n  ?x < e_length e \\<Longrightarrow> f ?x \\<down>= e_nth e ?x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x < e_length (e_butlast e) \\<Longrightarrow>\n       f x \\<down>= e_nth (e_butlast e) x", "by (simp add: butlast_conv_take)"], ["proof (state)\nthis:\n  ?x < e_length (e_butlast e) \\<Longrightarrow>\n  f ?x \\<down>= e_nth (e_butlast e) ?x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f \\<triangleright> (e_length (e_butlast e) - 1) = e_butlast e\n\ngoal (1 subgoal):\n 1. f \\<triangleright> (n - 1) = e_butlast e", "with len"], ["proof (chain)\npicking this:\n  e_length (e_butlast e) = n\n  f \\<triangleright> (e_length (e_butlast e) - 1) = e_butlast e", "show ?thesis"], ["proof (prove)\nusing this:\n  e_length (e_butlast e) = n\n  f \\<triangleright> (e_length (e_butlast e) - 1) = e_butlast e\n\ngoal (1 subgoal):\n 1. f \\<triangleright> (n - 1) = e_butlast e", "by simp"], ["proof (state)\nthis:\n  f \\<triangleright> (n - 1) = e_butlast e\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Some definitions make use of recursive predicates, that is,\n$01$-valued functions.\\<close>"], ["", "definition RPred1 :: \"partial1 set\" (\"\\<R>\\<^sub>0\\<^sub>1\") where\n  \"\\<R>\\<^sub>0\\<^sub>1 \\<equiv> {f. f \\<in> \\<R> \\<and> (\\<forall>x. f x \\<down>= 0 \\<or> f x \\<down>= 1)}\""], ["", "lemma RPred1_subseteq_R1: \"\\<R>\\<^sub>0\\<^sub>1 \\<subseteq> \\<R>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>0\\<^sub>1 \\<subseteq> \\<R>", "unfolding RPred1_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {f \\<in> \\<R>. \\<forall>x. f x \\<down>= 0 \\<or> f x \\<down>= 1}\n    \\<subseteq> \\<R>", "by auto"], ["", "lemma const0_in_RPred1: \"(\\<lambda>_. Some 0) \\<in> \\<R>\\<^sub>0\\<^sub>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>_. Some 0) \\<in> \\<R>\\<^sub>0\\<^sub>1", "using RPred1_def const_in_Prim1"], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>0\\<^sub>1 \\<equiv>\n  {f \\<in> \\<R>. \\<forall>x. f x \\<down>= 0 \\<or> f x \\<down>= 1}\n  (\\<lambda>_. Some ?c) \\<in> Prim1\n\ngoal (1 subgoal):\n 1. (\\<lambda>_. Some 0) \\<in> \\<R>\\<^sub>0\\<^sub>1", "by fast"], ["", "lemma RPred1_altdef: \"\\<R>\\<^sub>0\\<^sub>1 = {f. f \\<in> \\<R> \\<and> (\\<forall>x. the (f x) \\<le> 1)}\"\n  (is \"\\<R>\\<^sub>0\\<^sub>1 = ?S\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>0\\<^sub>1 = {f \\<in> \\<R>. \\<forall>x. the (f x) \\<le> 1}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<R>\\<^sub>0\\<^sub>1\n    \\<subseteq> {f \\<in> \\<R>. \\<forall>x. the (f x) \\<le> 1}\n 2. {f \\<in> \\<R>. \\<forall>x. the (f x) \\<le> 1}\n    \\<subseteq> \\<R>\\<^sub>0\\<^sub>1", "show \"\\<R>\\<^sub>0\\<^sub>1 \\<subseteq> ?S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R>\\<^sub>0\\<^sub>1\n    \\<subseteq> {f \\<in> \\<R>. \\<forall>x. the (f x) \\<le> 1}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<R>\\<^sub>0\\<^sub>1 \\<Longrightarrow>\n       x \\<in> {f \\<in> \\<R>. \\<forall>x. the (f x) \\<le> 1}", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<R>\\<^sub>0\\<^sub>1 \\<Longrightarrow>\n       x \\<in> {f \\<in> \\<R>. \\<forall>x. the (f x) \\<le> 1}", "assume f: \"f \\<in> \\<R>\\<^sub>0\\<^sub>1\""], ["proof (state)\nthis:\n  f \\<in> \\<R>\\<^sub>0\\<^sub>1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<R>\\<^sub>0\\<^sub>1 \\<Longrightarrow>\n       x \\<in> {f \\<in> \\<R>. \\<forall>x. the (f x) \\<le> 1}", "with RPred1_def"], ["proof (chain)\npicking this:\n  \\<R>\\<^sub>0\\<^sub>1 \\<equiv>\n  {f \\<in> \\<R>. \\<forall>x. f x \\<down>= 0 \\<or> f x \\<down>= 1}\n  f \\<in> \\<R>\\<^sub>0\\<^sub>1", "have \"f \\<in> \\<R>\""], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>0\\<^sub>1 \\<equiv>\n  {f \\<in> \\<R>. \\<forall>x. f x \\<down>= 0 \\<or> f x \\<down>= 1}\n  f \\<in> \\<R>\\<^sub>0\\<^sub>1\n\ngoal (1 subgoal):\n 1. f \\<in> \\<R>", "by auto"], ["proof (state)\nthis:\n  f \\<in> \\<R>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<R>\\<^sub>0\\<^sub>1 \\<Longrightarrow>\n       x \\<in> {f \\<in> \\<R>. \\<forall>x. the (f x) \\<le> 1}", "from f"], ["proof (chain)\npicking this:\n  f \\<in> \\<R>\\<^sub>0\\<^sub>1", "have \"\\<forall>x. f x \\<down>= 0 \\<or> f x \\<down>= 1\""], ["proof (prove)\nusing this:\n  f \\<in> \\<R>\\<^sub>0\\<^sub>1\n\ngoal (1 subgoal):\n 1. \\<forall>x. f x \\<down>= 0 \\<or> f x \\<down>= 1", "by (simp add: RPred1_def)"], ["proof (state)\nthis:\n  \\<forall>x. f x \\<down>= 0 \\<or> f x \\<down>= 1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<R>\\<^sub>0\\<^sub>1 \\<Longrightarrow>\n       x \\<in> {f \\<in> \\<R>. \\<forall>x. the (f x) \\<le> 1}", "then"], ["proof (chain)\npicking this:\n  \\<forall>x. f x \\<down>= 0 \\<or> f x \\<down>= 1", "have \"\\<forall>x. the (f x) \\<le> 1\""], ["proof (prove)\nusing this:\n  \\<forall>x. f x \\<down>= 0 \\<or> f x \\<down>= 1\n\ngoal (1 subgoal):\n 1. \\<forall>x. the (f x) \\<le> 1", "by (metis eq_refl less_Suc_eq_le zero_less_Suc option.sel)"], ["proof (state)\nthis:\n  \\<forall>x. the (f x) \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> \\<R>\\<^sub>0\\<^sub>1 \\<Longrightarrow>\n       x \\<in> {f \\<in> \\<R>. \\<forall>x. the (f x) \\<le> 1}", "with \\<open>f \\<in> \\<R>\\<close>"], ["proof (chain)\npicking this:\n  f \\<in> \\<R>\n  \\<forall>x. the (f x) \\<le> 1", "show \"f \\<in> ?S\""], ["proof (prove)\nusing this:\n  f \\<in> \\<R>\n  \\<forall>x. the (f x) \\<le> 1\n\ngoal (1 subgoal):\n 1. f \\<in> {f \\<in> \\<R>. \\<forall>x. the (f x) \\<le> 1}", "by simp"], ["proof (state)\nthis:\n  f \\<in> {f \\<in> \\<R>. \\<forall>x. the (f x) \\<le> 1}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<R>\\<^sub>0\\<^sub>1\n  \\<subseteq> {f \\<in> \\<R>. \\<forall>x. the (f x) \\<le> 1}\n\ngoal (1 subgoal):\n 1. {f \\<in> \\<R>. \\<forall>x. the (f x) \\<le> 1}\n    \\<subseteq> \\<R>\\<^sub>0\\<^sub>1", "show \"?S \\<subseteq> \\<R>\\<^sub>0\\<^sub>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {f \\<in> \\<R>. \\<forall>x. the (f x) \\<le> 1}\n    \\<subseteq> \\<R>\\<^sub>0\\<^sub>1", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {f \\<in> \\<R>.\n                \\<forall>x. the (f x) \\<le> 1} \\<Longrightarrow>\n       x \\<in> \\<R>\\<^sub>0\\<^sub>1", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {f \\<in> \\<R>.\n                \\<forall>x. the (f x) \\<le> 1} \\<Longrightarrow>\n       x \\<in> \\<R>\\<^sub>0\\<^sub>1", "assume f: \"f \\<in> ?S\""], ["proof (state)\nthis:\n  f \\<in> {f \\<in> \\<R>. \\<forall>x. the (f x) \\<le> 1}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {f \\<in> \\<R>.\n                \\<forall>x. the (f x) \\<le> 1} \\<Longrightarrow>\n       x \\<in> \\<R>\\<^sub>0\\<^sub>1", "then"], ["proof (chain)\npicking this:\n  f \\<in> {f \\<in> \\<R>. \\<forall>x. the (f x) \\<le> 1}", "have \"f \\<in> \\<R>\""], ["proof (prove)\nusing this:\n  f \\<in> {f \\<in> \\<R>. \\<forall>x. the (f x) \\<le> 1}\n\ngoal (1 subgoal):\n 1. f \\<in> \\<R>", "by simp"], ["proof (state)\nthis:\n  f \\<in> \\<R>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {f \\<in> \\<R>.\n                \\<forall>x. the (f x) \\<le> 1} \\<Longrightarrow>\n       x \\<in> \\<R>\\<^sub>0\\<^sub>1", "then"], ["proof (chain)\npicking this:\n  f \\<in> \\<R>", "have total: \"\\<And>x. f x \\<down>\""], ["proof (prove)\nusing this:\n  f \\<in> \\<R>\n\ngoal (1 subgoal):\n 1. \\<And>x. f x \\<down>", "by auto"], ["proof (state)\nthis:\n  f ?x \\<down>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {f \\<in> \\<R>.\n                \\<forall>x. the (f x) \\<le> 1} \\<Longrightarrow>\n       x \\<in> \\<R>\\<^sub>0\\<^sub>1", "from f"], ["proof (chain)\npicking this:\n  f \\<in> {f \\<in> \\<R>. \\<forall>x. the (f x) \\<le> 1}", "have \"\\<forall>x. the (f x) = 0 \\<or> the (f x) = 1\""], ["proof (prove)\nusing this:\n  f \\<in> {f \\<in> \\<R>. \\<forall>x. the (f x) \\<le> 1}\n\ngoal (1 subgoal):\n 1. \\<forall>x. the (f x) = 0 \\<or> the (f x) = 1", "by (simp add: le_eq_less_or_eq)"], ["proof (state)\nthis:\n  \\<forall>x. the (f x) = 0 \\<or> the (f x) = 1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {f \\<in> \\<R>.\n                \\<forall>x. the (f x) \\<le> 1} \\<Longrightarrow>\n       x \\<in> \\<R>\\<^sub>0\\<^sub>1", "with total"], ["proof (chain)\npicking this:\n  f ?x \\<down>\n  \\<forall>x. the (f x) = 0 \\<or> the (f x) = 1", "have \"\\<forall>x. f x \\<down>= 0 \\<or> f x \\<down>= 1\""], ["proof (prove)\nusing this:\n  f ?x \\<down>\n  \\<forall>x. the (f x) = 0 \\<or> the (f x) = 1\n\ngoal (1 subgoal):\n 1. \\<forall>x. f x \\<down>= 0 \\<or> f x \\<down>= 1", "by (metis option.collapse)"], ["proof (state)\nthis:\n  \\<forall>x. f x \\<down>= 0 \\<or> f x \\<down>= 1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {f \\<in> \\<R>.\n                \\<forall>x. the (f x) \\<le> 1} \\<Longrightarrow>\n       x \\<in> \\<R>\\<^sub>0\\<^sub>1", "then"], ["proof (chain)\npicking this:\n  \\<forall>x. f x \\<down>= 0 \\<or> f x \\<down>= 1", "show \"f \\<in> \\<R>\\<^sub>0\\<^sub>1\""], ["proof (prove)\nusing this:\n  \\<forall>x. f x \\<down>= 0 \\<or> f x \\<down>= 1\n\ngoal (1 subgoal):\n 1. f \\<in> \\<R>\\<^sub>0\\<^sub>1", "using \\<open>f \\<in> \\<R>\\<close> RPred1_def"], ["proof (prove)\nusing this:\n  \\<forall>x. f x \\<down>= 0 \\<or> f x \\<down>= 1\n  f \\<in> \\<R>\n  \\<R>\\<^sub>0\\<^sub>1 \\<equiv>\n  {f \\<in> \\<R>. \\<forall>x. f x \\<down>= 0 \\<or> f x \\<down>= 1}\n\ngoal (1 subgoal):\n 1. f \\<in> \\<R>\\<^sub>0\\<^sub>1", "by auto"], ["proof (state)\nthis:\n  f \\<in> \\<R>\\<^sub>0\\<^sub>1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {f \\<in> \\<R>. \\<forall>x. the (f x) \\<le> 1}\n  \\<subseteq> \\<R>\\<^sub>0\\<^sub>1\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>NUM\\<close>"], ["", "text \\<open>A class of recursive functions is in NUM if it can be\nembedded in a total numbering. Thus, for learning such classes there is\nalways a total hypothesis space available.\\<close>"], ["", "definition NUM :: \"partial1 set set\" where\n  \"NUM \\<equiv> {U. \\<exists>\\<psi>\\<in>\\<R>\\<^sup>2. \\<forall>f\\<in>U. \\<exists>i. \\<psi> i = f}\""], ["", "definition NUM_wrt :: \"partial2 \\<Rightarrow> partial1 set set\" where\n  \"\\<psi> \\<in> \\<R>\\<^sup>2 \\<Longrightarrow> NUM_wrt \\<psi> \\<equiv> {U. \\<forall>f\\<in>U. \\<exists>i. \\<psi> i = f}\""], ["", "lemma NUM_I [intro]:\n  assumes \"\\<psi> \\<in> \\<R>\\<^sup>2\" and \"\\<And>f. f \\<in> U \\<Longrightarrow> \\<exists>i. \\<psi> i = f\"\n  shows \"U \\<in> NUM\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U \\<in> NUM", "using assms NUM_def"], ["proof (prove)\nusing this:\n  \\<psi> \\<in> \\<R>\\<^sup>2\n  ?f \\<in> U \\<Longrightarrow> \\<exists>i. \\<psi> i = ?f\n  NUM \\<equiv>\n  {U. \\<exists>\\<psi>\\<in>\\<R>\\<^sup>2.\n         \\<forall>f\\<in>U. \\<exists>i. \\<psi> i = f}\n\ngoal (1 subgoal):\n 1. U \\<in> NUM", "by blast"], ["", "lemma NUM_E [dest]:\n  assumes \"U \\<in> NUM\"\n  shows \"U \\<subseteq> \\<R>\"\n    and \"\\<exists>\\<psi>\\<in>\\<R>\\<^sup>2. \\<forall>f\\<in>U. \\<exists>i. \\<psi> i = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U \\<subseteq> \\<R> &&&\n    \\<exists>\\<psi>\\<in>\\<R>\\<^sup>2.\n       \\<forall>f\\<in>U. \\<exists>i. \\<psi> i = f", "using NUM_def assms"], ["proof (prove)\nusing this:\n  NUM \\<equiv>\n  {U. \\<exists>\\<psi>\\<in>\\<R>\\<^sup>2.\n         \\<forall>f\\<in>U. \\<exists>i. \\<psi> i = f}\n  U \\<in> NUM\n\ngoal (1 subgoal):\n 1. U \\<subseteq> \\<R> &&&\n    \\<exists>\\<psi>\\<in>\\<R>\\<^sup>2.\n       \\<forall>f\\<in>U. \\<exists>i. \\<psi> i = f", "by (force, auto)"], ["", "lemma NUM_closed_subseteq:\n  assumes \"U \\<in> NUM\" and \"V \\<subseteq> U\"\n  shows \"V \\<in> NUM\""], ["proof (prove)\ngoal (1 subgoal):\n 1. V \\<in> NUM", "using assms subset_eq[of V U] NUM_I"], ["proof (prove)\nusing this:\n  U \\<in> NUM\n  V \\<subseteq> U\n  (V \\<subseteq> U) = (\\<forall>x\\<in>V. x \\<in> U)\n  \\<lbrakk>?\\<psi> \\<in> \\<R>\\<^sup>2;\n   \\<And>f. f \\<in> ?U \\<Longrightarrow> \\<exists>i. ?\\<psi> i = f\\<rbrakk>\n  \\<Longrightarrow> ?U \\<in> NUM\n\ngoal (1 subgoal):\n 1. V \\<in> NUM", "by auto"], ["", "text \\<open>This is the classical diagonalization proof showing that there is\nno total numbering containing all total recursive functions.\\<close>"], ["", "lemma R1_not_in_NUM: \"\\<R> \\<notin> NUM\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<R> \\<notin> NUM", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<R> \\<in> NUM \\<Longrightarrow> False", "assume \"\\<R> \\<in> NUM\""], ["proof (state)\nthis:\n  \\<R> \\<in> NUM\n\ngoal (1 subgoal):\n 1. \\<R> \\<in> NUM \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<R> \\<in> NUM", "obtain \\<psi> where num: \"\\<psi> \\<in> \\<R>\\<^sup>2\" \"\\<forall>f\\<in>\\<R>. \\<exists>i. \\<psi> i = f\""], ["proof (prove)\nusing this:\n  \\<R> \\<in> NUM\n\ngoal (1 subgoal):\n 1. (\\<And>\\<psi>.\n        \\<lbrakk>\\<psi> \\<in> \\<R>\\<^sup>2;\n         \\<forall>f\\<in>\\<R>. \\<exists>i. \\<psi> i = f\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<psi> \\<in> \\<R>\\<^sup>2\n  \\<forall>f\\<in>\\<R>. \\<exists>i. \\<psi> i = f\n\ngoal (1 subgoal):\n 1. \\<R> \\<in> NUM \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<psi> \\<in> \\<R>\\<^sup>2\n  \\<forall>f\\<in>\\<R>. \\<exists>i. \\<psi> i = f", "obtain psi where psi: \"recfn 2 psi\" \"total psi\" \"eval psi [i, x] = \\<psi> i x\" for i x"], ["proof (prove)\nusing this:\n  \\<psi> \\<in> \\<R>\\<^sup>2\n  \\<forall>f\\<in>\\<R>. \\<exists>i. \\<psi> i = f\n\ngoal (1 subgoal):\n 1. (\\<And>psi.\n        \\<lbrakk>recfn 2 psi; Partial_Recursive.total psi;\n         \\<And>i x. eval psi [i, x] = \\<psi> i x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  recfn 2 psi\n  Partial_Recursive.total psi\n  eval psi [?i, ?x] = \\<psi> ?i ?x\n\ngoal (1 subgoal):\n 1. \\<R> \\<in> NUM \\<Longrightarrow> False", "define d where \"d = Cn 1 S [Cn 1 psi [Id 1 0, Id 1 0]]\""], ["proof (state)\nthis:\n  d = Cn 1 S [Cn 1 psi [recf.Id 1 0, recf.Id 1 0]]\n\ngoal (1 subgoal):\n 1. \\<R> \\<in> NUM \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  d = Cn 1 S [Cn 1 psi [recf.Id 1 0, recf.Id 1 0]]", "have \"recfn 1 d\""], ["proof (prove)\nusing this:\n  d = Cn 1 S [Cn 1 psi [recf.Id 1 0, recf.Id 1 0]]\n\ngoal (1 subgoal):\n 1. recfn 1 d", "using psi(1)"], ["proof (prove)\nusing this:\n  d = Cn 1 S [Cn 1 psi [recf.Id 1 0, recf.Id 1 0]]\n  recfn 2 psi\n\ngoal (1 subgoal):\n 1. recfn 1 d", "by simp"], ["proof (state)\nthis:\n  recfn 1 d\n\ngoal (1 subgoal):\n 1. \\<R> \\<in> NUM \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  recfn 1 d\n\ngoal (1 subgoal):\n 1. \\<R> \\<in> NUM \\<Longrightarrow> False", "have d: \"eval d [x] \\<down>= Suc (the (\\<psi> x x))\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. eval d [x] \\<down>= Suc (the (\\<psi> x x))", "unfolding d_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. eval (Cn 1 S [Cn 1 psi [recf.Id 1 0, recf.Id 1 0]]) [x] \\<down>=\n    Suc (the (\\<psi> x x))", "using num psi"], ["proof (prove)\nusing this:\n  \\<psi> \\<in> \\<R>\\<^sup>2\n  \\<forall>f\\<in>\\<R>. \\<exists>i. \\<psi> i = f\n  recfn 2 psi\n  Partial_Recursive.total psi\n  eval psi [?i, ?x] = \\<psi> ?i ?x\n\ngoal (1 subgoal):\n 1. eval (Cn 1 S [Cn 1 psi [recf.Id 1 0, recf.Id 1 0]]) [x] \\<down>=\n    Suc (the (\\<psi> x x))", "by simp"], ["proof (state)\nthis:\n  eval d [?x] \\<down>= Suc (the (\\<psi> ?x ?x))\n\ngoal (1 subgoal):\n 1. \\<R> \\<in> NUM \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  recfn 1 d\n  eval d [?x] \\<down>= Suc (the (\\<psi> ?x ?x))", "have \"(\\<lambda>x. eval d [x]) \\<in> \\<R>\""], ["proof (prove)\nusing this:\n  recfn 1 d\n  eval d [?x] \\<down>= Suc (the (\\<psi> ?x ?x))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. eval d [x]) \\<in> \\<R>", "using R1I"], ["proof (prove)\nusing this:\n  recfn 1 d\n  eval d [?x] \\<down>= Suc (the (\\<psi> ?x ?x))\n  \\<lbrakk>recfn 1 ?r; Partial_Recursive.total ?r;\n   \\<And>x. eval ?r [x] = ?f x\\<rbrakk>\n  \\<Longrightarrow> ?f \\<in> \\<R>\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. eval d [x]) \\<in> \\<R>", "by blast"], ["proof (state)\nthis:\n  (\\<lambda>x. eval d [x]) \\<in> \\<R>\n\ngoal (1 subgoal):\n 1. \\<R> \\<in> NUM \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>x. eval d [x]) \\<in> \\<R>", "obtain i where \"\\<psi> i = (\\<lambda>x. eval d [x])\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. eval d [x]) \\<in> \\<R>\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<psi> i = (\\<lambda>x. eval d [x]) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using num(2)"], ["proof (prove)\nusing this:\n  (\\<lambda>x. eval d [x]) \\<in> \\<R>\n  \\<forall>f\\<in>\\<R>. \\<exists>i. \\<psi> i = f\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<psi> i = (\\<lambda>x. eval d [x]) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<psi> i = (\\<lambda>x. eval d [x])\n\ngoal (1 subgoal):\n 1. \\<R> \\<in> NUM \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<psi> i = (\\<lambda>x. eval d [x])", "have \"\\<psi> i i = eval d [i]\""], ["proof (prove)\nusing this:\n  \\<psi> i = (\\<lambda>x. eval d [x])\n\ngoal (1 subgoal):\n 1. \\<psi> i i = eval d [i]", "by simp"], ["proof (state)\nthis:\n  \\<psi> i i = eval d [i]\n\ngoal (1 subgoal):\n 1. \\<R> \\<in> NUM \\<Longrightarrow> False", "with d"], ["proof (chain)\npicking this:\n  eval d [?x] \\<down>= Suc (the (\\<psi> ?x ?x))\n  \\<psi> i i = eval d [i]", "have \"\\<psi> i i \\<down>= Suc (the (\\<psi> i i))\""], ["proof (prove)\nusing this:\n  eval d [?x] \\<down>= Suc (the (\\<psi> ?x ?x))\n  \\<psi> i i = eval d [i]\n\ngoal (1 subgoal):\n 1. \\<psi> i i \\<down>= Suc (the (\\<psi> i i))", "by simp"], ["proof (state)\nthis:\n  \\<psi> i i \\<down>= Suc (the (\\<psi> i i))\n\ngoal (1 subgoal):\n 1. \\<R> \\<in> NUM \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<psi> i i \\<down>= Suc (the (\\<psi> i i))", "show False"], ["proof (prove)\nusing this:\n  \\<psi> i i \\<down>= Suc (the (\\<psi> i i))\n\ngoal (1 subgoal):\n 1. False", "using option.sel[of \"Suc (the (\\<psi> i i))\"]"], ["proof (prove)\nusing this:\n  \\<psi> i i \\<down>= Suc (the (\\<psi> i i))\n  the (Some (Suc (the (\\<psi> i i)))) = Suc (the (\\<psi> i i))\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>A hypothesis space that contains a function for every prefix will\ncome in handy. The following is a total numbering with this property.\\<close>"], ["", "definition \"r_prenum \\<equiv>\n  Cn 2 r_ifless [Id 2 1, Cn 2 r_length [Id 2 0], Cn 2 r_nth [Id 2 0, Id 2 1], r_constn 1 0]\""], ["", "lemma r_prenum_prim [simp]: \"prim_recfn 2 r_prenum\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prim_recfn 2 r_prenum", "unfolding r_prenum_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. prim_recfn 2\n     (Cn 2 r_ifless\n       [recf.Id 2 1, Cn 2 r_length [recf.Id 2 0],\n        Cn 2 r_nth [recf.Id 2 0, recf.Id 2 1], r_constn 1 0])", "by simp_all"], ["", "lemma r_prenum [simp]:\n  \"eval r_prenum [e, x] \\<down>= (if x < e_length e then e_nth e x else 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eval r_prenum [e, x] \\<down>= (if x < e_length e then e_nth e x else 0)", "by (simp add: r_prenum_def)"], ["", "definition prenum :: partial2 where\n  \"prenum e x \\<equiv> Some (if x < e_length e then e_nth e x else 0)\""], ["", "lemma prenum_in_R2: \"prenum \\<in> \\<R>\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prenum \\<in> \\<R>\\<^sup>2", "using prenum_def Prim2I[OF r_prenum_prim, of prenum]"], ["proof (prove)\nusing this:\n  prenum ?e ?x \\<equiv> Some (if ?x < e_length ?e then e_nth ?e ?x else 0)\n  (\\<And>x y. prenum x y = eval r_prenum [x, y]) \\<Longrightarrow>\n  prenum \\<in> Prim2\n\ngoal (1 subgoal):\n 1. prenum \\<in> \\<R>\\<^sup>2", "by simp"], ["", "lemma prenum [simp]: \"prenum e x \\<down>= (if x < e_length e then e_nth e x else 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prenum e x \\<down>= (if x < e_length e then e_nth e x else 0)", "unfolding prenum_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Some (if x < e_length e then e_nth e x else 0) \\<down>=\n    (if x < e_length e then e_nth e x else 0)", ".."], ["", "lemma prenum_encode:\n  \"prenum (list_encode vs) x \\<down>= (if x < length vs then vs ! x else 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prenum (Partial_Recursive.list_encode vs) x \\<down>=\n    (if x < length vs then vs ! x else 0)", "using prenum_def"], ["proof (prove)\nusing this:\n  prenum ?e ?x \\<equiv> Some (if ?x < e_length ?e then e_nth ?e ?x else 0)\n\ngoal (1 subgoal):\n 1. prenum (Partial_Recursive.list_encode vs) x \\<down>=\n    (if x < length vs then vs ! x else 0)", "by (cases \"x < length vs\") simp_all"], ["", "text \\<open>Prepending a list of numbers to a function:\\<close>"], ["", "definition prepend :: \"nat list \\<Rightarrow> partial1 \\<Rightarrow> partial1\" (infixr \"\\<odot>\" 64) where\n  \"vs \\<odot> f \\<equiv> \\<lambda>x. if x < length vs then Some (vs ! x) else f (x - length vs)\""], ["", "lemma prepend [simp]:\n  \"(vs \\<odot> f) x = (if x < length vs then Some (vs ! x) else f (x - length vs))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (vs \\<odot> f) x =\n    (if x < length vs then Some (vs ! x) else f (x - length vs))", "unfolding prepend_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if x < length vs then Some (vs ! x) else f (x - length vs)) =\n    (if x < length vs then Some (vs ! x) else f (x - length vs))", ".."], ["", "lemma prepend_total: \"total1 f \\<Longrightarrow> total1 (vs \\<odot> f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. total1 f \\<Longrightarrow> total1 (vs \\<odot> f)", "unfolding total1_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. f x \\<down> \\<Longrightarrow>\n    \\<forall>x. (vs \\<odot> f) x \\<down>", "by simp"], ["", "lemma prepend_at_less:\n  assumes \"n < length vs\"\n  shows \"(vs \\<odot> f) n \\<down>= vs ! n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (vs \\<odot> f) n \\<down>= vs ! n", "using assms"], ["proof (prove)\nusing this:\n  n < length vs\n\ngoal (1 subgoal):\n 1. (vs \\<odot> f) n \\<down>= vs ! n", "by simp"], ["", "lemma prepend_at_ge:\n  assumes \"n \\<ge> length vs\"\n  shows \"(vs \\<odot> f) n = f (n - length vs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (vs \\<odot> f) n = f (n - length vs)", "using assms"], ["proof (prove)\nusing this:\n  length vs \\<le> n\n\ngoal (1 subgoal):\n 1. (vs \\<odot> f) n = f (n - length vs)", "by simp"], ["", "lemma prefix_prepend_less:\n  assumes \"n < length vs\"\n  shows \"prefix (vs \\<odot> f) n = take (Suc n) vs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prefix (vs \\<odot> f) n = take (Suc n) vs", "using assms length_prefix"], ["proof (prove)\nusing this:\n  n < length vs\n  length (prefix ?f ?n) = Suc ?n\n\ngoal (1 subgoal):\n 1. prefix (vs \\<odot> f) n = take (Suc n) vs", "by (intro nth_equalityI) simp_all"], ["", "lemma prepend_eqI:\n  assumes \"\\<And>x. x < length vs \\<Longrightarrow> g x \\<down>= vs ! x\"\n    and \"\\<And>x. g (length vs + x) = f x\"\n  shows \"g = vs \\<odot> f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g = vs \\<odot> f", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. g x = (vs \\<odot> f) x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. g x = (vs \\<odot> f) x", "show \"g x = (vs \\<odot> f) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g x = (vs \\<odot> f) x", "proof (cases \"x < length vs\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x < length vs \\<Longrightarrow> g x = (vs \\<odot> f) x\n 2. \\<not> x < length vs \\<Longrightarrow> g x = (vs \\<odot> f) x", "case True"], ["proof (state)\nthis:\n  x < length vs\n\ngoal (2 subgoals):\n 1. x < length vs \\<Longrightarrow> g x = (vs \\<odot> f) x\n 2. \\<not> x < length vs \\<Longrightarrow> g x = (vs \\<odot> f) x", "then"], ["proof (chain)\npicking this:\n  x < length vs", "show ?thesis"], ["proof (prove)\nusing this:\n  x < length vs\n\ngoal (1 subgoal):\n 1. g x = (vs \\<odot> f) x", "using assms"], ["proof (prove)\nusing this:\n  x < length vs\n  ?x < length vs \\<Longrightarrow> g ?x \\<down>= vs ! ?x\n  g (length vs + ?x) = f ?x\n\ngoal (1 subgoal):\n 1. g x = (vs \\<odot> f) x", "by simp"], ["proof (state)\nthis:\n  g x = (vs \\<odot> f) x\n\ngoal (1 subgoal):\n 1. \\<not> x < length vs \\<Longrightarrow> g x = (vs \\<odot> f) x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> x < length vs \\<Longrightarrow> g x = (vs \\<odot> f) x", "case False"], ["proof (state)\nthis:\n  \\<not> x < length vs\n\ngoal (1 subgoal):\n 1. \\<not> x < length vs \\<Longrightarrow> g x = (vs \\<odot> f) x", "then"], ["proof (chain)\npicking this:\n  \\<not> x < length vs", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> x < length vs\n\ngoal (1 subgoal):\n 1. g x = (vs \\<odot> f) x", "using assms prepend"], ["proof (prove)\nusing this:\n  \\<not> x < length vs\n  ?x < length vs \\<Longrightarrow> g ?x \\<down>= vs ! ?x\n  g (length vs + ?x) = f ?x\n  (?vs \\<odot> ?f) ?x =\n  (if ?x < length ?vs then Some (?vs ! ?x) else ?f (?x - length ?vs))\n\ngoal (1 subgoal):\n 1. g x = (vs \\<odot> f) x", "by (metis add_diff_inverse_nat)"], ["proof (state)\nthis:\n  g x = (vs \\<odot> f) x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  g x = (vs \\<odot> f) x\n\ngoal:\nNo subgoals!", "qed"], ["", "fun r_prepend :: \"nat list \\<Rightarrow> recf \\<Rightarrow> recf\" where\n  \"r_prepend [] r = r\"\n| \"r_prepend (v # vs) r =\n     Cn 1 (r_lifz (r_const v) (Cn 1 (r_prepend vs r) [r_dec])) [Id 1 0, Id 1 0]\""], ["", "lemma r_prepend_recfn:\n  assumes \"recfn 1 r\"\n  shows \"recfn 1 (r_prepend vs r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. recfn 1 (r_prepend vs r)", "using assms"], ["proof (prove)\nusing this:\n  recfn 1 r\n\ngoal (1 subgoal):\n 1. recfn 1 (r_prepend vs r)", "by (induction vs) simp_all"], ["", "lemma r_prepend:\n  assumes \"recfn 1 r\"\n  shows \"eval (r_prepend vs r) [x] =\n    (if x < length vs then Some (vs ! x) else eval r [x - length vs])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eval (r_prepend vs r) [x] =\n    (if x < length vs then Some (vs ! x) else eval r [x - length vs])", "proof (induction vs arbitrary: x)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       eval (r_prepend [] r) [x] =\n       (if x < length [] then Some ([] ! x) else eval r [x - length []])\n 2. \\<And>a vs x.\n       (\\<And>x.\n           eval (r_prepend vs r) [x] =\n           (if x < length vs then Some (vs ! x)\n            else eval r [x - length vs])) \\<Longrightarrow>\n       eval (r_prepend (a # vs) r) [x] =\n       (if x < length (a # vs) then Some ((a # vs) ! x)\n        else eval r [x - length (a # vs)])", "case Nil"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>x.\n       eval (r_prepend [] r) [x] =\n       (if x < length [] then Some ([] ! x) else eval r [x - length []])\n 2. \\<And>a vs x.\n       (\\<And>x.\n           eval (r_prepend vs r) [x] =\n           (if x < length vs then Some (vs ! x)\n            else eval r [x - length vs])) \\<Longrightarrow>\n       eval (r_prepend (a # vs) r) [x] =\n       (if x < length (a # vs) then Some ((a # vs) ! x)\n        else eval r [x - length (a # vs)])", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. eval (r_prepend [] r) [x] =\n    (if x < length [] then Some ([] ! x) else eval r [x - length []])", "using assms"], ["proof (prove)\nusing this:\n  recfn 1 r\n\ngoal (1 subgoal):\n 1. eval (r_prepend [] r) [x] =\n    (if x < length [] then Some ([] ! x) else eval r [x - length []])", "by simp"], ["proof (state)\nthis:\n  eval (r_prepend [] r) [x] =\n  (if x < length [] then Some ([] ! x) else eval r [x - length []])\n\ngoal (1 subgoal):\n 1. \\<And>a vs x.\n       (\\<And>x.\n           eval (r_prepend vs r) [x] =\n           (if x < length vs then Some (vs ! x)\n            else eval r [x - length vs])) \\<Longrightarrow>\n       eval (r_prepend (a # vs) r) [x] =\n       (if x < length (a # vs) then Some ((a # vs) ! x)\n        else eval r [x - length (a # vs)])", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a vs x.\n       (\\<And>x.\n           eval (r_prepend vs r) [x] =\n           (if x < length vs then Some (vs ! x)\n            else eval r [x - length vs])) \\<Longrightarrow>\n       eval (r_prepend (a # vs) r) [x] =\n       (if x < length (a # vs) then Some ((a # vs) ! x)\n        else eval r [x - length (a # vs)])", "case (Cons v vs)"], ["proof (state)\nthis:\n  eval (r_prepend vs r) [?x] =\n  (if ?x < length vs then Some (vs ! ?x) else eval r [?x - length vs])\n\ngoal (1 subgoal):\n 1. \\<And>a vs x.\n       (\\<And>x.\n           eval (r_prepend vs r) [x] =\n           (if x < length vs then Some (vs ! x)\n            else eval r [x - length vs])) \\<Longrightarrow>\n       eval (r_prepend (a # vs) r) [x] =\n       (if x < length (a # vs) then Some ((a # vs) ! x)\n        else eval r [x - length (a # vs)])", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. eval (r_prepend (v # vs) r) [x] =\n    (if x < length (v # vs) then Some ((v # vs) ! x)\n     else eval r [x - length (v # vs)])", "using assms Cons"], ["proof (prove)\nusing this:\n  recfn 1 r\n  eval (r_prepend vs r) [?x] =\n  (if ?x < length vs then Some (vs ! ?x) else eval r [?x - length vs])\n\ngoal (1 subgoal):\n 1. eval (r_prepend (v # vs) r) [x] =\n    (if x < length (v # vs) then Some ((v # vs) ! x)\n     else eval r [x - length (v # vs)])", "by (cases \"x = 0\") (auto simp add: r_prepend_recfn)"], ["proof (state)\nthis:\n  eval (r_prepend (v # vs) r) [x] =\n  (if x < length (v # vs) then Some ((v # vs) ! x)\n   else eval r [x - length (v # vs)])\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma r_prepend_total:\n  assumes \"recfn 1 r\" and \"total r\"\n  shows \"eval (r_prepend vs r) [x] \\<down>=\n    (if x < length vs then vs ! x else the (eval r [x - length vs]))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. eval (r_prepend vs r) [x] \\<down>=\n    (if x < length vs then vs ! x else the (eval r [x - length vs]))", "proof (induction vs arbitrary: x)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       eval (r_prepend [] r) [x] \\<down>=\n       (if x < length [] then [] ! x else the (eval r [x - length []]))\n 2. \\<And>a vs x.\n       (\\<And>x.\n           eval (r_prepend vs r) [x] \\<down>=\n           (if x < length vs then vs ! x\n            else the (eval r [x - length vs]))) \\<Longrightarrow>\n       eval (r_prepend (a # vs) r) [x] \\<down>=\n       (if x < length (a # vs) then (a # vs) ! x\n        else the (eval r [x - length (a # vs)]))", "case Nil"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>x.\n       eval (r_prepend [] r) [x] \\<down>=\n       (if x < length [] then [] ! x else the (eval r [x - length []]))\n 2. \\<And>a vs x.\n       (\\<And>x.\n           eval (r_prepend vs r) [x] \\<down>=\n           (if x < length vs then vs ! x\n            else the (eval r [x - length vs]))) \\<Longrightarrow>\n       eval (r_prepend (a # vs) r) [x] \\<down>=\n       (if x < length (a # vs) then (a # vs) ! x\n        else the (eval r [x - length (a # vs)]))", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. eval (r_prepend [] r) [x] \\<down>=\n    (if x < length [] then [] ! x else the (eval r [x - length []]))", "using assms"], ["proof (prove)\nusing this:\n  recfn 1 r\n  Partial_Recursive.total r\n\ngoal (1 subgoal):\n 1. eval (r_prepend [] r) [x] \\<down>=\n    (if x < length [] then [] ! x else the (eval r [x - length []]))", "by simp"], ["proof (state)\nthis:\n  eval (r_prepend [] r) [x] \\<down>=\n  (if x < length [] then [] ! x else the (eval r [x - length []]))\n\ngoal (1 subgoal):\n 1. \\<And>a vs x.\n       (\\<And>x.\n           eval (r_prepend vs r) [x] \\<down>=\n           (if x < length vs then vs ! x\n            else the (eval r [x - length vs]))) \\<Longrightarrow>\n       eval (r_prepend (a # vs) r) [x] \\<down>=\n       (if x < length (a # vs) then (a # vs) ! x\n        else the (eval r [x - length (a # vs)]))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a vs x.\n       (\\<And>x.\n           eval (r_prepend vs r) [x] \\<down>=\n           (if x < length vs then vs ! x\n            else the (eval r [x - length vs]))) \\<Longrightarrow>\n       eval (r_prepend (a # vs) r) [x] \\<down>=\n       (if x < length (a # vs) then (a # vs) ! x\n        else the (eval r [x - length (a # vs)]))", "case (Cons v vs)"], ["proof (state)\nthis:\n  eval (r_prepend vs r) [?x] \\<down>=\n  (if ?x < length vs then vs ! ?x else the (eval r [?x - length vs]))\n\ngoal (1 subgoal):\n 1. \\<And>a vs x.\n       (\\<And>x.\n           eval (r_prepend vs r) [x] \\<down>=\n           (if x < length vs then vs ! x\n            else the (eval r [x - length vs]))) \\<Longrightarrow>\n       eval (r_prepend (a # vs) r) [x] \\<down>=\n       (if x < length (a # vs) then (a # vs) ! x\n        else the (eval r [x - length (a # vs)]))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. eval (r_prepend (v # vs) r) [x] \\<down>=\n    (if x < length (v # vs) then (v # vs) ! x\n     else the (eval r [x - length (v # vs)]))", "using assms Cons"], ["proof (prove)\nusing this:\n  recfn 1 r\n  Partial_Recursive.total r\n  eval (r_prepend vs r) [?x] \\<down>=\n  (if ?x < length vs then vs ! ?x else the (eval r [?x - length vs]))\n\ngoal (1 subgoal):\n 1. eval (r_prepend (v # vs) r) [x] \\<down>=\n    (if x < length (v # vs) then (v # vs) ! x\n     else the (eval r [x - length (v # vs)]))", "by (cases \"x = 0\") (auto simp add: r_prepend_recfn)"], ["proof (state)\nthis:\n  eval (r_prepend (v # vs) r) [x] \\<down>=\n  (if x < length (v # vs) then (v # vs) ! x\n   else the (eval r [x - length (v # vs)]))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prepend_in_P1:\n  assumes \"f \\<in> \\<P>\"\n  shows \"vs \\<odot> f \\<in> \\<P>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vs \\<odot> f \\<in> \\<P>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. vs \\<odot> f \\<in> \\<P>", "obtain r where r: \"recfn 1 r\"  \"\\<And>x. eval r [x] = f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>recfn 1 r; \\<And>x. eval r [x] = f x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> \\<P>\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>recfn 1 r; \\<And>x. eval r [x] = f x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  recfn 1 r\n  eval r [?x] = f ?x\n\ngoal (1 subgoal):\n 1. vs \\<odot> f \\<in> \\<P>", "moreover"], ["proof (state)\nthis:\n  recfn 1 r\n  eval r [?x] = f ?x\n\ngoal (1 subgoal):\n 1. vs \\<odot> f \\<in> \\<P>", "have \"recfn 1 (r_prepend vs r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. recfn 1 (r_prepend vs r)", "using r r_prepend_recfn"], ["proof (prove)\nusing this:\n  recfn 1 r\n  eval r [?x] = f ?x\n  recfn 1 ?r \\<Longrightarrow> recfn 1 (r_prepend ?vs ?r)\n\ngoal (1 subgoal):\n 1. recfn 1 (r_prepend vs r)", "by simp"], ["proof (state)\nthis:\n  recfn 1 (r_prepend vs r)\n\ngoal (1 subgoal):\n 1. vs \\<odot> f \\<in> \\<P>", "moreover"], ["proof (state)\nthis:\n  recfn 1 (r_prepend vs r)\n\ngoal (1 subgoal):\n 1. vs \\<odot> f \\<in> \\<P>", "have \"eval (r_prepend vs r) [x] = (vs \\<odot> f) x\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. eval (r_prepend vs r) [x] = (vs \\<odot> f) x", "using r r_prepend"], ["proof (prove)\nusing this:\n  recfn 1 r\n  eval r [?x] = f ?x\n  recfn 1 ?r \\<Longrightarrow>\n  eval (r_prepend ?vs ?r) [?x] =\n  (if ?x < length ?vs then Some (?vs ! ?x) else eval ?r [?x - length ?vs])\n\ngoal (1 subgoal):\n 1. eval (r_prepend vs r) [x] = (vs \\<odot> f) x", "by simp"], ["proof (state)\nthis:\n  eval (r_prepend vs r) [?x] = (vs \\<odot> f) ?x\n\ngoal (1 subgoal):\n 1. vs \\<odot> f \\<in> \\<P>", "ultimately"], ["proof (chain)\npicking this:\n  recfn 1 r\n  eval r [?x] = f ?x\n  recfn 1 (r_prepend vs r)\n  eval (r_prepend vs r) [?x] = (vs \\<odot> f) ?x", "show ?thesis"], ["proof (prove)\nusing this:\n  recfn 1 r\n  eval r [?x] = f ?x\n  recfn 1 (r_prepend vs r)\n  eval (r_prepend vs r) [?x] = (vs \\<odot> f) ?x\n\ngoal (1 subgoal):\n 1. vs \\<odot> f \\<in> \\<P>", "by blast"], ["proof (state)\nthis:\n  vs \\<odot> f \\<in> \\<P>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prepend_in_R1:\n  assumes \"f \\<in> \\<R>\"\n  shows \"vs \\<odot> f \\<in> \\<R>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vs \\<odot> f \\<in> \\<R>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. vs \\<odot> f \\<in> \\<R>", "obtain r where r: \"recfn 1 r\" \"total r\" \"\\<And>x. eval r [x] = f x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>recfn 1 r; Partial_Recursive.total r;\n         \\<And>x. eval r [x] = f x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> \\<R>\n\ngoal (1 subgoal):\n 1. (\\<And>r.\n        \\<lbrakk>recfn 1 r; Partial_Recursive.total r;\n         \\<And>x. eval r [x] = f x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  recfn 1 r\n  Partial_Recursive.total r\n  eval r [?x] = f ?x\n\ngoal (1 subgoal):\n 1. vs \\<odot> f \\<in> \\<R>", "then"], ["proof (chain)\npicking this:\n  recfn 1 r\n  Partial_Recursive.total r\n  eval r [?x] = f ?x", "have \"total1 f\""], ["proof (prove)\nusing this:\n  recfn 1 r\n  Partial_Recursive.total r\n  eval r [?x] = f ?x\n\ngoal (1 subgoal):\n 1. total1 f", "using R1_imp_total1[OF assms]"], ["proof (prove)\nusing this:\n  recfn 1 r\n  Partial_Recursive.total r\n  eval r [?x] = f ?x\n  total1 f\n\ngoal (1 subgoal):\n 1. total1 f", "by simp"], ["proof (state)\nthis:\n  total1 f\n\ngoal (1 subgoal):\n 1. vs \\<odot> f \\<in> \\<R>", "have \"total (r_prepend vs r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Partial_Recursive.total (r_prepend vs r)", "using r r_prepend_total r_prepend_recfn totalI1[of \"r_prepend vs r\"]"], ["proof (prove)\nusing this:\n  recfn 1 r\n  Partial_Recursive.total r\n  eval r [?x] = f ?x\n  \\<lbrakk>recfn 1 ?r; Partial_Recursive.total ?r\\<rbrakk>\n  \\<Longrightarrow> eval (r_prepend ?vs ?r) [?x] \\<down>=\n                    (if ?x < length ?vs then ?vs ! ?x\n                     else the (eval ?r [?x - length ?vs]))\n  recfn 1 ?r \\<Longrightarrow> recfn 1 (r_prepend ?vs ?r)\n  \\<lbrakk>recfn 1 (r_prepend vs r);\n   \\<And>x. eval (r_prepend vs r) [x] \\<down>\\<rbrakk>\n  \\<Longrightarrow> Partial_Recursive.total (r_prepend vs r)\n\ngoal (1 subgoal):\n 1. Partial_Recursive.total (r_prepend vs r)", "by simp"], ["proof (state)\nthis:\n  Partial_Recursive.total (r_prepend vs r)\n\ngoal (1 subgoal):\n 1. vs \\<odot> f \\<in> \\<R>", "with r"], ["proof (chain)\npicking this:\n  recfn 1 r\n  Partial_Recursive.total r\n  eval r [?x] = f ?x\n  Partial_Recursive.total (r_prepend vs r)", "have \"total (r_prepend vs r)\""], ["proof (prove)\nusing this:\n  recfn 1 r\n  Partial_Recursive.total r\n  eval r [?x] = f ?x\n  Partial_Recursive.total (r_prepend vs r)\n\ngoal (1 subgoal):\n 1. Partial_Recursive.total (r_prepend vs r)", "by simp"], ["proof (state)\nthis:\n  Partial_Recursive.total (r_prepend vs r)\n\ngoal (1 subgoal):\n 1. vs \\<odot> f \\<in> \\<R>", "moreover"], ["proof (state)\nthis:\n  Partial_Recursive.total (r_prepend vs r)\n\ngoal (1 subgoal):\n 1. vs \\<odot> f \\<in> \\<R>", "have \"recfn 1 (r_prepend vs r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. recfn 1 (r_prepend vs r)", "using r r_prepend_recfn"], ["proof (prove)\nusing this:\n  recfn 1 r\n  Partial_Recursive.total r\n  eval r [?x] = f ?x\n  recfn 1 ?r \\<Longrightarrow> recfn 1 (r_prepend ?vs ?r)\n\ngoal (1 subgoal):\n 1. recfn 1 (r_prepend vs r)", "by simp"], ["proof (state)\nthis:\n  recfn 1 (r_prepend vs r)\n\ngoal (1 subgoal):\n 1. vs \\<odot> f \\<in> \\<R>", "moreover"], ["proof (state)\nthis:\n  recfn 1 (r_prepend vs r)\n\ngoal (1 subgoal):\n 1. vs \\<odot> f \\<in> \\<R>", "have \"eval (r_prepend vs r) [x] = (vs \\<odot> f) x\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. eval (r_prepend vs r) [x] = (vs \\<odot> f) x", "using r r_prepend \\<open>total1 f\\<close> total1E"], ["proof (prove)\nusing this:\n  recfn 1 r\n  Partial_Recursive.total r\n  eval r [?x] = f ?x\n  recfn 1 ?r \\<Longrightarrow>\n  eval (r_prepend ?vs ?r) [?x] =\n  (if ?x < length ?vs then Some (?vs ! ?x) else eval ?r [?x - length ?vs])\n  total1 f\n  total1 ?f \\<Longrightarrow> ?f ?x \\<down>\n\ngoal (1 subgoal):\n 1. eval (r_prepend vs r) [x] = (vs \\<odot> f) x", "by simp"], ["proof (state)\nthis:\n  eval (r_prepend vs r) [?x] = (vs \\<odot> f) ?x\n\ngoal (1 subgoal):\n 1. vs \\<odot> f \\<in> \\<R>", "ultimately"], ["proof (chain)\npicking this:\n  Partial_Recursive.total (r_prepend vs r)\n  recfn 1 (r_prepend vs r)\n  eval (r_prepend vs r) [?x] = (vs \\<odot> f) ?x", "show ?thesis"], ["proof (prove)\nusing this:\n  Partial_Recursive.total (r_prepend vs r)\n  recfn 1 (r_prepend vs r)\n  eval (r_prepend vs r) [?x] = (vs \\<odot> f) ?x\n\ngoal (1 subgoal):\n 1. vs \\<odot> f \\<in> \\<R>", "by auto"], ["proof (state)\nthis:\n  vs \\<odot> f \\<in> \\<R>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prepend_associative: \"(us @ vs) \\<odot> f = us \\<odot> vs \\<odot> f\" (is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. us @ vs \\<odot> f = us \\<odot> vs \\<odot> f", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. (us @ vs \\<odot> f) x = (us \\<odot> vs \\<odot> f) x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. (us @ vs \\<odot> f) x = (us \\<odot> vs \\<odot> f) x", "consider\n      \"x < length us\"\n    | \"x \\<ge> length us \\<and> x < length (us @ vs)\"\n    | \"x \\<ge> length (us @ vs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x < length us \\<Longrightarrow> thesis;\n     length us \\<le> x \\<and> x < length (us @ vs) \\<Longrightarrow> thesis;\n     length (us @ vs) \\<le> x \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by linarith"], ["proof (state)\nthis:\n  \\<lbrakk>x < length us \\<Longrightarrow> ?thesis;\n   length us \\<le> x \\<and> x < length (us @ vs) \\<Longrightarrow> ?thesis;\n   length (us @ vs) \\<le> x \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>x. (us @ vs \\<odot> f) x = (us \\<odot> vs \\<odot> f) x", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>x < length us \\<Longrightarrow> ?thesis;\n   length us \\<le> x \\<and> x < length (us @ vs) \\<Longrightarrow> ?thesis;\n   length (us @ vs) \\<le> x \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis", "show \"?lhs x = ?rhs x\""], ["proof (prove)\nusing this:\n  \\<lbrakk>x < length us \\<Longrightarrow> ?thesis;\n   length us \\<le> x \\<and> x < length (us @ vs) \\<Longrightarrow> ?thesis;\n   length (us @ vs) \\<le> x \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (us @ vs \\<odot> f) x = (us \\<odot> vs \\<odot> f) x", "proof (cases)"], ["proof (state)\ngoal (3 subgoals):\n 1. x < length us \\<Longrightarrow>\n    (us @ vs \\<odot> f) x = (us \\<odot> vs \\<odot> f) x\n 2. length us \\<le> x \\<and> x < length (us @ vs) \\<Longrightarrow>\n    (us @ vs \\<odot> f) x = (us \\<odot> vs \\<odot> f) x\n 3. length (us @ vs) \\<le> x \\<Longrightarrow>\n    (us @ vs \\<odot> f) x = (us \\<odot> vs \\<odot> f) x", "case 1"], ["proof (state)\nthis:\n  x < length us\n\ngoal (3 subgoals):\n 1. x < length us \\<Longrightarrow>\n    (us @ vs \\<odot> f) x = (us \\<odot> vs \\<odot> f) x\n 2. length us \\<le> x \\<and> x < length (us @ vs) \\<Longrightarrow>\n    (us @ vs \\<odot> f) x = (us \\<odot> vs \\<odot> f) x\n 3. length (us @ vs) \\<le> x \\<Longrightarrow>\n    (us @ vs \\<odot> f) x = (us \\<odot> vs \\<odot> f) x", "then"], ["proof (chain)\npicking this:\n  x < length us", "show ?thesis"], ["proof (prove)\nusing this:\n  x < length us\n\ngoal (1 subgoal):\n 1. (us @ vs \\<odot> f) x = (us \\<odot> vs \\<odot> f) x", "by (metis le_add1 length_append less_le_trans nth_append prepend_at_less)"], ["proof (state)\nthis:\n  (us @ vs \\<odot> f) x = (us \\<odot> vs \\<odot> f) x\n\ngoal (2 subgoals):\n 1. length us \\<le> x \\<and> x < length (us @ vs) \\<Longrightarrow>\n    (us @ vs \\<odot> f) x = (us \\<odot> vs \\<odot> f) x\n 2. length (us @ vs) \\<le> x \\<Longrightarrow>\n    (us @ vs \\<odot> f) x = (us \\<odot> vs \\<odot> f) x", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. length us \\<le> x \\<and> x < length (us @ vs) \\<Longrightarrow>\n    (us @ vs \\<odot> f) x = (us \\<odot> vs \\<odot> f) x\n 2. length (us @ vs) \\<le> x \\<Longrightarrow>\n    (us @ vs \\<odot> f) x = (us \\<odot> vs \\<odot> f) x", "case 2"], ["proof (state)\nthis:\n  length us \\<le> x \\<and> x < length (us @ vs)\n\ngoal (2 subgoals):\n 1. length us \\<le> x \\<and> x < length (us @ vs) \\<Longrightarrow>\n    (us @ vs \\<odot> f) x = (us \\<odot> vs \\<odot> f) x\n 2. length (us @ vs) \\<le> x \\<Longrightarrow>\n    (us @ vs \\<odot> f) x = (us \\<odot> vs \\<odot> f) x", "then"], ["proof (chain)\npicking this:\n  length us \\<le> x \\<and> x < length (us @ vs)", "show ?thesis"], ["proof (prove)\nusing this:\n  length us \\<le> x \\<and> x < length (us @ vs)\n\ngoal (1 subgoal):\n 1. (us @ vs \\<odot> f) x = (us \\<odot> vs \\<odot> f) x", "by (smt add_diff_inverse_nat add_less_cancel_left length_append nth_append prepend)"], ["proof (state)\nthis:\n  (us @ vs \\<odot> f) x = (us \\<odot> vs \\<odot> f) x\n\ngoal (1 subgoal):\n 1. length (us @ vs) \\<le> x \\<Longrightarrow>\n    (us @ vs \\<odot> f) x = (us \\<odot> vs \\<odot> f) x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. length (us @ vs) \\<le> x \\<Longrightarrow>\n    (us @ vs \\<odot> f) x = (us \\<odot> vs \\<odot> f) x", "case 3"], ["proof (state)\nthis:\n  length (us @ vs) \\<le> x\n\ngoal (1 subgoal):\n 1. length (us @ vs) \\<le> x \\<Longrightarrow>\n    (us @ vs \\<odot> f) x = (us \\<odot> vs \\<odot> f) x", "then"], ["proof (chain)\npicking this:\n  length (us @ vs) \\<le> x", "show ?thesis"], ["proof (prove)\nusing this:\n  length (us @ vs) \\<le> x\n\ngoal (1 subgoal):\n 1. (us @ vs \\<odot> f) x = (us \\<odot> vs \\<odot> f) x", "using prepend_at_ge"], ["proof (prove)\nusing this:\n  length (us @ vs) \\<le> x\n  length ?vs \\<le> ?n \\<Longrightarrow>\n  (?vs \\<odot> ?f) ?n = ?f (?n - length ?vs)\n\ngoal (1 subgoal):\n 1. (us @ vs \\<odot> f) x = (us \\<odot> vs \\<odot> f) x", "by auto"], ["proof (state)\nthis:\n  (us @ vs \\<odot> f) x = (us \\<odot> vs \\<odot> f) x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (us @ vs \\<odot> f) x = (us \\<odot> vs \\<odot> f) x\n\ngoal:\nNo subgoals!", "qed"], ["", "abbreviation constant_divergent :: partial1 (\"\\<up>\\<^sup>\\<infinity>\") where\n  \"\\<up>\\<^sup>\\<infinity> \\<equiv> \\<lambda>_. None\""], ["", "abbreviation constant_zero :: partial1 (\"0\\<^sup>\\<infinity>\") where\n  \"0\\<^sup>\\<infinity> \\<equiv> \\<lambda>_. Some 0\""], ["", "lemma almost0_in_R1: \"vs \\<odot> 0\\<^sup>\\<infinity> \\<in> \\<R>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vs \\<odot> 0\\<^sup>\\<infinity> \\<in> \\<R>", "using RPred1_subseteq_R1 const0_in_RPred1 prepend_in_R1"], ["proof (prove)\nusing this:\n  \\<R>\\<^sub>0\\<^sub>1 \\<subseteq> \\<R>\n  0\\<^sup>\\<infinity> \\<in> \\<R>\\<^sub>0\\<^sub>1\n  ?f \\<in> \\<R> \\<Longrightarrow> ?vs \\<odot> ?f \\<in> \\<R>\n\ngoal (1 subgoal):\n 1. vs \\<odot> 0\\<^sup>\\<infinity> \\<in> \\<R>", "by auto"], ["", "text \\<open>The class $U_0$ of all total recursive functions that are almost\neverywhere zero will be used several times to construct\n(counter-)examples.\\<close>"], ["", "definition U0 :: \"partial1 set\" (\"U\\<^sub>0\") where\n  \"U\\<^sub>0 \\<equiv> {vs \\<odot> 0\\<^sup>\\<infinity> |vs. vs \\<in> UNIV}\""], ["", "text \\<open>The class @{term U0} contains exactly the functions in the\nnumbering @{term prenum}.\\<close>"], ["", "lemma U0_altdef: \"U\\<^sub>0 = {prenum e| e. e \\<in> UNIV}\" (is \"U\\<^sub>0 = ?W\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. U\\<^sub>0 = {prenum e |e. e \\<in> UNIV}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. U\\<^sub>0 \\<subseteq> {prenum e |e. e \\<in> UNIV}\n 2. {prenum e |e. e \\<in> UNIV} \\<subseteq> U\\<^sub>0", "show \"U\\<^sub>0 \\<subseteq> ?W\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U\\<^sub>0 \\<subseteq> {prenum e |e. e \\<in> UNIV}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> U\\<^sub>0 \\<Longrightarrow>\n       x \\<in> {prenum e |e. e \\<in> UNIV}", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> U\\<^sub>0 \\<Longrightarrow>\n       x \\<in> {prenum e |e. e \\<in> UNIV}", "assume \"f \\<in> U\\<^sub>0\""], ["proof (state)\nthis:\n  f \\<in> U\\<^sub>0\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> U\\<^sub>0 \\<Longrightarrow>\n       x \\<in> {prenum e |e. e \\<in> UNIV}", "with U0_def"], ["proof (chain)\npicking this:\n  U\\<^sub>0 \\<equiv> {vs \\<odot> 0\\<^sup>\\<infinity> |vs. vs \\<in> UNIV}\n  f \\<in> U\\<^sub>0", "obtain vs where \"f = vs \\<odot> 0\\<^sup>\\<infinity>\""], ["proof (prove)\nusing this:\n  U\\<^sub>0 \\<equiv> {vs \\<odot> 0\\<^sup>\\<infinity> |vs. vs \\<in> UNIV}\n  f \\<in> U\\<^sub>0\n\ngoal (1 subgoal):\n 1. (\\<And>vs.\n        f = vs \\<odot> 0\\<^sup>\\<infinity> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  f = vs \\<odot> 0\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> U\\<^sub>0 \\<Longrightarrow>\n       x \\<in> {prenum e |e. e \\<in> UNIV}", "then"], ["proof (chain)\npicking this:\n  f = vs \\<odot> 0\\<^sup>\\<infinity>", "have \"f = prenum (list_encode vs)\""], ["proof (prove)\nusing this:\n  f = vs \\<odot> 0\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. f = prenum (Partial_Recursive.list_encode vs)", "using prenum_encode"], ["proof (prove)\nusing this:\n  f = vs \\<odot> 0\\<^sup>\\<infinity>\n  prenum (Partial_Recursive.list_encode ?vs) ?x \\<down>=\n  (if ?x < length ?vs then ?vs ! ?x else 0)\n\ngoal (1 subgoal):\n 1. f = prenum (Partial_Recursive.list_encode vs)", "by auto"], ["proof (state)\nthis:\n  f = prenum (Partial_Recursive.list_encode vs)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> U\\<^sub>0 \\<Longrightarrow>\n       x \\<in> {prenum e |e. e \\<in> UNIV}", "then"], ["proof (chain)\npicking this:\n  f = prenum (Partial_Recursive.list_encode vs)", "show \"f \\<in> ?W\""], ["proof (prove)\nusing this:\n  f = prenum (Partial_Recursive.list_encode vs)\n\ngoal (1 subgoal):\n 1. f \\<in> {prenum e |e. e \\<in> UNIV}", "by auto"], ["proof (state)\nthis:\n  f \\<in> {prenum e |e. e \\<in> UNIV}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  U\\<^sub>0 \\<subseteq> {prenum e |e. e \\<in> UNIV}\n\ngoal (1 subgoal):\n 1. {prenum e |e. e \\<in> UNIV} \\<subseteq> U\\<^sub>0", "show \"?W \\<subseteq> U\\<^sub>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {prenum e |e. e \\<in> UNIV} \\<subseteq> U\\<^sub>0", "unfolding U0_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {prenum e |e. e \\<in> UNIV}\n    \\<subseteq> {vs \\<odot> 0\\<^sup>\\<infinity> |vs. vs \\<in> UNIV}", "by fastforce"], ["proof (state)\nthis:\n  {prenum e |e. e \\<in> UNIV} \\<subseteq> U\\<^sub>0\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma U0_in_NUM: \"U\\<^sub>0 \\<in> NUM\""], ["proof (prove)\ngoal (1 subgoal):\n 1. U\\<^sub>0 \\<in> NUM", "using prenum_in_R2 U0_altdef"], ["proof (prove)\nusing this:\n  prenum \\<in> \\<R>\\<^sup>2\n  U\\<^sub>0 = {prenum e |e. e \\<in> UNIV}\n\ngoal (1 subgoal):\n 1. U\\<^sub>0 \\<in> NUM", "by (intro NUM_I[of prenum]; force)"], ["", "text \\<open>Every almost-zero function can be represented by $v0^\\infty$ for\na list $v$ not ending in zero.\\<close>"], ["", "lemma almost0_canonical:\n  assumes \"f = vs \\<odot> 0\\<^sup>\\<infinity>\" and \"f \\<noteq> 0\\<^sup>\\<infinity>\"\n  obtains ws where \"length ws > 0\" and \"last ws \\<noteq> 0\" and \"f = ws \\<odot> 0\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>ws.\n        \\<lbrakk>0 < length ws; last ws \\<noteq> 0;\n         f = ws \\<odot> 0\\<^sup>\\<infinity>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>ws.\n        \\<lbrakk>0 < length ws; last ws \\<noteq> 0;\n         f = ws \\<odot> 0\\<^sup>\\<infinity>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "let ?P = \"\\<lambda>k. k < length vs \\<and> vs ! k \\<noteq> 0\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>ws.\n        \\<lbrakk>0 < length ws; last ws \\<noteq> 0;\n         f = ws \\<odot> 0\\<^sup>\\<infinity>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from assms"], ["proof (chain)\npicking this:\n  f = vs \\<odot> 0\\<^sup>\\<infinity>\n  f \\<noteq> 0\\<^sup>\\<infinity>", "have \"vs \\<noteq> []\""], ["proof (prove)\nusing this:\n  f = vs \\<odot> 0\\<^sup>\\<infinity>\n  f \\<noteq> 0\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. vs \\<noteq> []", "by auto"], ["proof (state)\nthis:\n  vs \\<noteq> []\n\ngoal (1 subgoal):\n 1. (\\<And>ws.\n        \\<lbrakk>0 < length ws; last ws \\<noteq> 0;\n         f = ws \\<odot> 0\\<^sup>\\<infinity>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  vs \\<noteq> []", "have ex: \"\\<exists>k<length vs. vs ! k \\<noteq> 0\""], ["proof (prove)\nusing this:\n  vs \\<noteq> []\n\ngoal (1 subgoal):\n 1. \\<exists>k<length vs. vs ! k \\<noteq> 0", "using assms"], ["proof (prove)\nusing this:\n  vs \\<noteq> []\n  f = vs \\<odot> 0\\<^sup>\\<infinity>\n  f \\<noteq> 0\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. \\<exists>k<length vs. vs ! k \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  \\<exists>k<length vs. vs ! k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>ws.\n        \\<lbrakk>0 < length ws; last ws \\<noteq> 0;\n         f = ws \\<odot> 0\\<^sup>\\<infinity>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define m where \"m = Greatest ?P\""], ["proof (state)\nthis:\n  m = (GREATEST k. k < length vs \\<and> vs ! k \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. (\\<And>ws.\n        \\<lbrakk>0 < length ws; last ws \\<noteq> 0;\n         f = ws \\<odot> 0\\<^sup>\\<infinity>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  m = (GREATEST k. k < length vs \\<and> vs ! k \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. (\\<And>ws.\n        \\<lbrakk>0 < length ws; last ws \\<noteq> 0;\n         f = ws \\<odot> 0\\<^sup>\\<infinity>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have le: \"\\<forall>y. ?P y \\<longrightarrow> y \\<le> length vs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y.\n       y < length vs \\<and> vs ! y \\<noteq> 0 \\<longrightarrow>\n       y \\<le> length vs", "by simp"], ["proof (state)\nthis:\n  \\<forall>y.\n     y < length vs \\<and> vs ! y \\<noteq> 0 \\<longrightarrow>\n     y \\<le> length vs\n\ngoal (1 subgoal):\n 1. (\\<And>ws.\n        \\<lbrakk>0 < length ws; last ws \\<noteq> 0;\n         f = ws \\<odot> 0\\<^sup>\\<infinity>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  m = (GREATEST k. k < length vs \\<and> vs ! k \\<noteq> 0)\n  \\<forall>y.\n     y < length vs \\<and> vs ! y \\<noteq> 0 \\<longrightarrow>\n     y \\<le> length vs", "have \"?P m\""], ["proof (prove)\nusing this:\n  m = (GREATEST k. k < length vs \\<and> vs ! k \\<noteq> 0)\n  \\<forall>y.\n     y < length vs \\<and> vs ! y \\<noteq> 0 \\<longrightarrow>\n     y \\<le> length vs\n\ngoal (1 subgoal):\n 1. m < length vs \\<and> vs ! m \\<noteq> 0", "using ex GreatestI_ex_nat[of ?P \"length vs\"]"], ["proof (prove)\nusing this:\n  m = (GREATEST k. k < length vs \\<and> vs ! k \\<noteq> 0)\n  \\<forall>y.\n     y < length vs \\<and> vs ! y \\<noteq> 0 \\<longrightarrow>\n     y \\<le> length vs\n  \\<exists>k<length vs. vs ! k \\<noteq> 0\n  \\<lbrakk>\\<exists>k<length vs. vs ! k \\<noteq> 0;\n   \\<And>y.\n      y < length vs \\<and> vs ! y \\<noteq> 0 \\<Longrightarrow>\n      y \\<le> length vs\\<rbrakk>\n  \\<Longrightarrow> (GREATEST k. k < length vs \\<and> vs ! k \\<noteq> 0)\n                    < length vs \\<and>\n                    vs !\n                    (GREATEST k.\n                        k < length vs \\<and> vs ! k \\<noteq> 0) \\<noteq>\n                    0\n\ngoal (1 subgoal):\n 1. m < length vs \\<and> vs ! m \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  m < length vs \\<and> vs ! m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>ws.\n        \\<lbrakk>0 < length ws; last ws \\<noteq> 0;\n         f = ws \\<odot> 0\\<^sup>\\<infinity>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have not_gr: \"\\<not> ?P k\" if \"k > m\" for k"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (k < length vs \\<and> vs ! k \\<noteq> 0)", "using Greatest_le_nat[of ?P _ \"length vs\"] m_def ex le not_less that"], ["proof (prove)\nusing this:\n  \\<lbrakk>?k < length vs \\<and> vs ! ?k \\<noteq> 0;\n   \\<And>y.\n      y < length vs \\<and> vs ! y \\<noteq> 0 \\<Longrightarrow>\n      y \\<le> length vs\\<rbrakk>\n  \\<Longrightarrow> ?k \\<le> (GREATEST k.\n                                 k < length vs \\<and> vs ! k \\<noteq> 0)\n  m = (GREATEST k. k < length vs \\<and> vs ! k \\<noteq> 0)\n  \\<exists>k<length vs. vs ! k \\<noteq> 0\n  \\<forall>y.\n     y < length vs \\<and> vs ! y \\<noteq> 0 \\<longrightarrow>\n     y \\<le> length vs\n  (\\<not> ?x < ?y) = (?y \\<le> ?x)\n  m < k\n\ngoal (1 subgoal):\n 1. \\<not> (k < length vs \\<and> vs ! k \\<noteq> 0)", "by blast"], ["proof (state)\nthis:\n  m < ?k \\<Longrightarrow> \\<not> (?k < length vs \\<and> vs ! ?k \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. (\\<And>ws.\n        \\<lbrakk>0 < length ws; last ws \\<noteq> 0;\n         f = ws \\<odot> 0\\<^sup>\\<infinity>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "let ?ws = \"take (Suc m) vs\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>ws.\n        \\<lbrakk>0 < length ws; last ws \\<noteq> 0;\n         f = ws \\<odot> 0\\<^sup>\\<infinity>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"vs \\<odot> 0\\<^sup>\\<infinity> = ?ws \\<odot> 0\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vs \\<odot> 0\\<^sup>\\<infinity> =\n    take (Suc m) vs \\<odot> 0\\<^sup>\\<infinity>", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (vs \\<odot> 0\\<^sup>\\<infinity>) x =\n       (take (Suc m) vs \\<odot> 0\\<^sup>\\<infinity>) x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (vs \\<odot> 0\\<^sup>\\<infinity>) x =\n       (take (Suc m) vs \\<odot> 0\\<^sup>\\<infinity>) x", "show \"(vs \\<odot> 0\\<^sup>\\<infinity>) x = (?ws \\<odot> 0\\<^sup>\\<infinity>) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (vs \\<odot> 0\\<^sup>\\<infinity>) x =\n    (take (Suc m) vs \\<odot> 0\\<^sup>\\<infinity>) x", "proof (cases \"x < Suc m\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x < Suc m \\<Longrightarrow>\n    (vs \\<odot> 0\\<^sup>\\<infinity>) x =\n    (take (Suc m) vs \\<odot> 0\\<^sup>\\<infinity>) x\n 2. \\<not> x < Suc m \\<Longrightarrow>\n    (vs \\<odot> 0\\<^sup>\\<infinity>) x =\n    (take (Suc m) vs \\<odot> 0\\<^sup>\\<infinity>) x", "case True"], ["proof (state)\nthis:\n  x < Suc m\n\ngoal (2 subgoals):\n 1. x < Suc m \\<Longrightarrow>\n    (vs \\<odot> 0\\<^sup>\\<infinity>) x =\n    (take (Suc m) vs \\<odot> 0\\<^sup>\\<infinity>) x\n 2. \\<not> x < Suc m \\<Longrightarrow>\n    (vs \\<odot> 0\\<^sup>\\<infinity>) x =\n    (take (Suc m) vs \\<odot> 0\\<^sup>\\<infinity>) x", "then"], ["proof (chain)\npicking this:\n  x < Suc m", "show ?thesis"], ["proof (prove)\nusing this:\n  x < Suc m\n\ngoal (1 subgoal):\n 1. (vs \\<odot> 0\\<^sup>\\<infinity>) x =\n    (take (Suc m) vs \\<odot> 0\\<^sup>\\<infinity>) x", "using \\<open>?P m\\<close>"], ["proof (prove)\nusing this:\n  x < Suc m\n  m < length vs \\<and> vs ! m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (vs \\<odot> 0\\<^sup>\\<infinity>) x =\n    (take (Suc m) vs \\<odot> 0\\<^sup>\\<infinity>) x", "by simp"], ["proof (state)\nthis:\n  (vs \\<odot> 0\\<^sup>\\<infinity>) x =\n  (take (Suc m) vs \\<odot> 0\\<^sup>\\<infinity>) x\n\ngoal (1 subgoal):\n 1. \\<not> x < Suc m \\<Longrightarrow>\n    (vs \\<odot> 0\\<^sup>\\<infinity>) x =\n    (take (Suc m) vs \\<odot> 0\\<^sup>\\<infinity>) x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> x < Suc m \\<Longrightarrow>\n    (vs \\<odot> 0\\<^sup>\\<infinity>) x =\n    (take (Suc m) vs \\<odot> 0\\<^sup>\\<infinity>) x", "case False"], ["proof (state)\nthis:\n  \\<not> x < Suc m\n\ngoal (1 subgoal):\n 1. \\<not> x < Suc m \\<Longrightarrow>\n    (vs \\<odot> 0\\<^sup>\\<infinity>) x =\n    (take (Suc m) vs \\<odot> 0\\<^sup>\\<infinity>) x", "moreover"], ["proof (state)\nthis:\n  \\<not> x < Suc m\n\ngoal (1 subgoal):\n 1. \\<not> x < Suc m \\<Longrightarrow>\n    (vs \\<odot> 0\\<^sup>\\<infinity>) x =\n    (take (Suc m) vs \\<odot> 0\\<^sup>\\<infinity>) x", "from this"], ["proof (chain)\npicking this:\n  \\<not> x < Suc m", "have \"(?ws \\<odot> 0\\<^sup>\\<infinity>) x \\<down>= 0\""], ["proof (prove)\nusing this:\n  \\<not> x < Suc m\n\ngoal (1 subgoal):\n 1. (take (Suc m) vs \\<odot> 0\\<^sup>\\<infinity>) x \\<down>= 0", "by simp"], ["proof (state)\nthis:\n  (take (Suc m) vs \\<odot> 0\\<^sup>\\<infinity>) x \\<down>= 0\n\ngoal (1 subgoal):\n 1. \\<not> x < Suc m \\<Longrightarrow>\n    (vs \\<odot> 0\\<^sup>\\<infinity>) x =\n    (take (Suc m) vs \\<odot> 0\\<^sup>\\<infinity>) x", "ultimately"], ["proof (chain)\npicking this:\n  \\<not> x < Suc m\n  (take (Suc m) vs \\<odot> 0\\<^sup>\\<infinity>) x \\<down>= 0", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> x < Suc m\n  (take (Suc m) vs \\<odot> 0\\<^sup>\\<infinity>) x \\<down>= 0\n\ngoal (1 subgoal):\n 1. (vs \\<odot> 0\\<^sup>\\<infinity>) x =\n    (take (Suc m) vs \\<odot> 0\\<^sup>\\<infinity>) x", "using not_gr"], ["proof (prove)\nusing this:\n  \\<not> x < Suc m\n  (take (Suc m) vs \\<odot> 0\\<^sup>\\<infinity>) x \\<down>= 0\n  m < ?k \\<Longrightarrow> \\<not> (?k < length vs \\<and> vs ! ?k \\<noteq> 0)\n\ngoal (1 subgoal):\n 1. (vs \\<odot> 0\\<^sup>\\<infinity>) x =\n    (take (Suc m) vs \\<odot> 0\\<^sup>\\<infinity>) x", "by (cases \"x < length vs\") simp_all"], ["proof (state)\nthis:\n  (vs \\<odot> 0\\<^sup>\\<infinity>) x =\n  (take (Suc m) vs \\<odot> 0\\<^sup>\\<infinity>) x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (vs \\<odot> 0\\<^sup>\\<infinity>) x =\n  (take (Suc m) vs \\<odot> 0\\<^sup>\\<infinity>) x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  vs \\<odot> 0\\<^sup>\\<infinity> =\n  take (Suc m) vs \\<odot> 0\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. (\\<And>ws.\n        \\<lbrakk>0 < length ws; last ws \\<noteq> 0;\n         f = ws \\<odot> 0\\<^sup>\\<infinity>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  vs \\<odot> 0\\<^sup>\\<infinity> =\n  take (Suc m) vs \\<odot> 0\\<^sup>\\<infinity>", "have \"f = ?ws \\<odot> 0\\<^sup>\\<infinity>\""], ["proof (prove)\nusing this:\n  vs \\<odot> 0\\<^sup>\\<infinity> =\n  take (Suc m) vs \\<odot> 0\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. f = take (Suc m) vs \\<odot> 0\\<^sup>\\<infinity>", "using assms(1)"], ["proof (prove)\nusing this:\n  vs \\<odot> 0\\<^sup>\\<infinity> =\n  take (Suc m) vs \\<odot> 0\\<^sup>\\<infinity>\n  f = vs \\<odot> 0\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. f = take (Suc m) vs \\<odot> 0\\<^sup>\\<infinity>", "by simp"], ["proof (state)\nthis:\n  f = take (Suc m) vs \\<odot> 0\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. (\\<And>ws.\n        \\<lbrakk>0 < length ws; last ws \\<noteq> 0;\n         f = ws \\<odot> 0\\<^sup>\\<infinity>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  f = take (Suc m) vs \\<odot> 0\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. (\\<And>ws.\n        \\<lbrakk>0 < length ws; last ws \\<noteq> 0;\n         f = ws \\<odot> 0\\<^sup>\\<infinity>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"length ?ws > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < length (take (Suc m) vs)", "by (simp add: \\<open>vs \\<noteq> []\\<close>)"], ["proof (state)\nthis:\n  0 < length (take (Suc m) vs)\n\ngoal (1 subgoal):\n 1. (\\<And>ws.\n        \\<lbrakk>0 < length ws; last ws \\<noteq> 0;\n         f = ws \\<odot> 0\\<^sup>\\<infinity>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  0 < length (take (Suc m) vs)\n\ngoal (1 subgoal):\n 1. (\\<And>ws.\n        \\<lbrakk>0 < length ws; last ws \\<noteq> 0;\n         f = ws \\<odot> 0\\<^sup>\\<infinity>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"last ?ws \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. last (take (Suc m) vs) \\<noteq> 0", "by (simp add: \\<open>?P m\\<close> take_Suc_conv_app_nth)"], ["proof (state)\nthis:\n  last (take (Suc m) vs) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>ws.\n        \\<lbrakk>0 < length ws; last ws \\<noteq> 0;\n         f = ws \\<odot> 0\\<^sup>\\<infinity>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  f = take (Suc m) vs \\<odot> 0\\<^sup>\\<infinity>\n  0 < length (take (Suc m) vs)\n  last (take (Suc m) vs) \\<noteq> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  f = take (Suc m) vs \\<odot> 0\\<^sup>\\<infinity>\n  0 < length (take (Suc m) vs)\n  last (take (Suc m) vs) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. thesis", "using that"], ["proof (prove)\nusing this:\n  f = take (Suc m) vs \\<odot> 0\\<^sup>\\<infinity>\n  0 < length (take (Suc m) vs)\n  last (take (Suc m) vs) \\<noteq> 0\n  \\<lbrakk>0 < length ?ws; last ?ws \\<noteq> 0;\n   f = ?ws \\<odot> 0\\<^sup>\\<infinity>\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "section \\<open>Types of inference\\label{s:inference_types}\\<close>"], ["", "text \\<open>This section introduces all inference types that we are going to\nconsider together with some of their simple properties. All these inference\ntypes share the following condition, which essentially says that everything\nmust be computable:\\<close>"], ["", "abbreviation environment :: \"partial2 \\<Rightarrow> (partial1 set) \\<Rightarrow> partial1 \\<Rightarrow> bool\" where\n  \"environment \\<psi> U s \\<equiv> \\<psi> \\<in> \\<P>\\<^sup>2 \\<and> U \\<subseteq> \\<R> \\<and> s \\<in> \\<P> \\<and> (\\<forall>f\\<in>U. \\<forall>n. s (f \\<triangleright> n) \\<down>)\""], ["", "subsection \\<open>LIM: Learning in the limit\\<close>"], ["", "text \\<open>A strategy $S$ learns a class $U$ in the limit with respect to a\nhypothesis space @{term \"\\<psi> \\<in> \\<P>\\<^sup>2\"} if for all $f\\in U$, the\nsequence $(S(f^n))_{n\\in\\mathbb{N}}$ converges to an $i$ with $\\psi_i = f$.\nConvergence for a sequence of natural numbers means that almost all elements\nare the same. We express this with the following notation.\\<close>"], ["", "abbreviation Almost_All :: \"(nat \\<Rightarrow> bool) \\<Rightarrow> bool\" (binder \"\\<forall>\\<^sup>\\<infinity>\" 10) where\n  \"\\<forall>\\<^sup>\\<infinity>n. P n \\<equiv> \\<exists>n\\<^sub>0. \\<forall>n\\<ge>n\\<^sub>0. P n\""], ["", "definition learn_lim :: \"partial2 \\<Rightarrow> (partial1 set) \\<Rightarrow> partial1 \\<Rightarrow> bool\" where\n  \"learn_lim \\<psi> U s \\<equiv>\n     environment \\<psi> U s \\<and>\n     (\\<forall>f\\<in>U. \\<exists>i. \\<psi> i = f \\<and> (\\<forall>\\<^sup>\\<infinity>n. s (f \\<triangleright> n) \\<down>= i))\""], ["", "lemma learn_limE:\n  assumes \"learn_lim \\<psi> U s\"\n  shows \"environment \\<psi> U s\"\n    and \"\\<And>f. f \\<in> U \\<Longrightarrow> \\<exists>i. \\<psi> i = f \\<and> (\\<forall>\\<^sup>\\<infinity>n. s (f \\<triangleright> n) \\<down>= i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. environment \\<psi> U s &&&\n    (\\<And>f.\n        f \\<in> U \\<Longrightarrow>\n        \\<exists>i.\n           \\<psi> i = f \\<and>\n           (\\<exists>n\\<^sub>0.\n               \\<forall>n\\<ge>n\\<^sub>0.\n                  s (f \\<triangleright> n) \\<down>= i))", "using assms learn_lim_def"], ["proof (prove)\nusing this:\n  learn_lim \\<psi> U s\n  learn_lim ?\\<psi> ?U ?s \\<equiv>\n  environment ?\\<psi> ?U ?s \\<and>\n  (\\<forall>f\\<in>?U.\n      \\<exists>i.\n         ?\\<psi> i = f \\<and>\n         (\\<exists>n\\<^sub>0.\n             \\<forall>n\\<ge>n\\<^sub>0.\n                ?s (f \\<triangleright> n) \\<down>= i))\n\ngoal (1 subgoal):\n 1. environment \\<psi> U s &&&\n    (\\<And>f.\n        f \\<in> U \\<Longrightarrow>\n        \\<exists>i.\n           \\<psi> i = f \\<and>\n           (\\<exists>n\\<^sub>0.\n               \\<forall>n\\<ge>n\\<^sub>0.\n                  s (f \\<triangleright> n) \\<down>= i))", "by auto"], ["", "lemma learn_limI:\n  assumes \"environment \\<psi> U s\"\n    and \"\\<And>f. f \\<in> U \\<Longrightarrow> \\<exists>i. \\<psi> i = f \\<and> (\\<forall>\\<^sup>\\<infinity>n. s (f \\<triangleright> n) \\<down>= i)\"\n  shows \"learn_lim \\<psi> U s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. learn_lim \\<psi> U s", "using assms learn_lim_def"], ["proof (prove)\nusing this:\n  environment \\<psi> U s\n  ?f \\<in> U \\<Longrightarrow>\n  \\<exists>i.\n     \\<psi> i = ?f \\<and>\n     (\\<exists>n\\<^sub>0.\n         \\<forall>n\\<ge>n\\<^sub>0. s (?f \\<triangleright> n) \\<down>= i)\n  learn_lim ?\\<psi> ?U ?s \\<equiv>\n  environment ?\\<psi> ?U ?s \\<and>\n  (\\<forall>f\\<in>?U.\n      \\<exists>i.\n         ?\\<psi> i = f \\<and>\n         (\\<exists>n\\<^sub>0.\n             \\<forall>n\\<ge>n\\<^sub>0.\n                ?s (f \\<triangleright> n) \\<down>= i))\n\ngoal (1 subgoal):\n 1. learn_lim \\<psi> U s", "by auto"], ["", "definition LIM_wrt :: \"partial2 \\<Rightarrow> partial1 set set\" where\n  \"LIM_wrt \\<psi> \\<equiv> {U. \\<exists>s. learn_lim \\<psi> U s}\""], ["", "definition Lim :: \"partial1 set set\" (\"LIM\") where\n  \"LIM \\<equiv> {U. \\<exists>\\<psi> s. learn_lim \\<psi> U s}\""], ["", "text \\<open>LIM is closed under the the subset relation.\\<close>"], ["", "lemma learn_lim_closed_subseteq:\n  assumes \"learn_lim \\<psi> U s\" and \"V \\<subseteq> U\"\n  shows \"learn_lim \\<psi> V s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. learn_lim \\<psi> V s", "using assms learn_lim_def"], ["proof (prove)\nusing this:\n  learn_lim \\<psi> U s\n  V \\<subseteq> U\n  learn_lim ?\\<psi> ?U ?s \\<equiv>\n  environment ?\\<psi> ?U ?s \\<and>\n  (\\<forall>f\\<in>?U.\n      \\<exists>i.\n         ?\\<psi> i = f \\<and>\n         (\\<exists>n\\<^sub>0.\n             \\<forall>n\\<ge>n\\<^sub>0.\n                ?s (f \\<triangleright> n) \\<down>= i))\n\ngoal (1 subgoal):\n 1. learn_lim \\<psi> V s", "by auto"], ["", "corollary LIM_closed_subseteq:\n  assumes \"U \\<in> LIM\" and \"V \\<subseteq> U\"\n  shows \"V \\<in> LIM\""], ["proof (prove)\ngoal (1 subgoal):\n 1. V \\<in> LIM", "using assms learn_lim_closed_subseteq"], ["proof (prove)\nusing this:\n  U \\<in> LIM\n  V \\<subseteq> U\n  \\<lbrakk>learn_lim ?\\<psi> ?U ?s; ?V \\<subseteq> ?U\\<rbrakk>\n  \\<Longrightarrow> learn_lim ?\\<psi> ?V ?s\n\ngoal (1 subgoal):\n 1. V \\<in> LIM", "by (smt Lim_def mem_Collect_eq)"], ["", "text \\<open>Changing the hypothesis infinitely often precludes learning in\nthe limit.\\<close>"], ["", "lemma infinite_hyp_changes_not_Lim:\n  assumes \"f \\<in> U\" and \"\\<forall>n. \\<exists>m\\<^sub>1>n. \\<exists>m\\<^sub>2>n. s (f \\<triangleright> m\\<^sub>1) \\<noteq> s (f \\<triangleright> m\\<^sub>2)\"\n  shows \"\\<not> learn_lim \\<psi> U s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> learn_lim \\<psi> U s", "using assms learn_lim_def"], ["proof (prove)\nusing this:\n  f \\<in> U\n  \\<forall>n.\n     \\<exists>m\\<^sub>1>n.\n        \\<exists>m\\<^sub>2>n.\n           s (f \\<triangleright> m\\<^sub>1) \\<noteq>\n           s (f \\<triangleright> m\\<^sub>2)\n  learn_lim ?\\<psi> ?U ?s \\<equiv>\n  environment ?\\<psi> ?U ?s \\<and>\n  (\\<forall>f\\<in>?U.\n      \\<exists>i.\n         ?\\<psi> i = f \\<and>\n         (\\<exists>n\\<^sub>0.\n             \\<forall>n\\<ge>n\\<^sub>0.\n                ?s (f \\<triangleright> n) \\<down>= i))\n\ngoal (1 subgoal):\n 1. \\<not> learn_lim \\<psi> U s", "by (metis less_imp_le)"], ["", "lemma always_hyp_change_not_Lim:\n  assumes \"\\<And>x. s (f \\<triangleright> (Suc x)) \\<noteq> s (f \\<triangleright> x)\"\n  shows \"\\<not> learn_lim \\<psi> {f} s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> learn_lim \\<psi> {f} s", "using assms learn_limE"], ["proof (prove)\nusing this:\n  s (f \\<triangleright> Suc ?x) \\<noteq> s (f \\<triangleright> ?x)\n  learn_lim ?\\<psi> ?U ?s \\<Longrightarrow> environment ?\\<psi> ?U ?s\n  \\<lbrakk>learn_lim ?\\<psi> ?U ?s; ?f \\<in> ?U\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i.\n                       ?\\<psi> i = ?f \\<and>\n                       (\\<exists>n\\<^sub>0.\n                           \\<forall>n\\<ge>n\\<^sub>0.\n                              ?s (?f \\<triangleright> n) \\<down>= i)\n\ngoal (1 subgoal):\n 1. \\<not> learn_lim \\<psi> {f} s", "by (metis le_SucI order_refl singletonI)"], ["", "text \\<open>Guessing a wrong hypothesis infinitely often precludes learning\nin the limit.\\<close>"], ["", "lemma infinite_hyp_wrong_not_Lim:\n  assumes \"f \\<in> U\" and \"\\<forall>n. \\<exists>m>n. \\<psi> (the (s (f \\<triangleright> m))) \\<noteq> f\"\n  shows \"\\<not> learn_lim \\<psi> U s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> learn_lim \\<psi> U s", "using assms learn_limE"], ["proof (prove)\nusing this:\n  f \\<in> U\n  \\<forall>n.\n     \\<exists>m>n. \\<psi> (the (s (f \\<triangleright> m))) \\<noteq> f\n  learn_lim ?\\<psi> ?U ?s \\<Longrightarrow> environment ?\\<psi> ?U ?s\n  \\<lbrakk>learn_lim ?\\<psi> ?U ?s; ?f \\<in> ?U\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i.\n                       ?\\<psi> i = ?f \\<and>\n                       (\\<exists>n\\<^sub>0.\n                           \\<forall>n\\<ge>n\\<^sub>0.\n                              ?s (?f \\<triangleright> n) \\<down>= i)\n\ngoal (1 subgoal):\n 1. \\<not> learn_lim \\<psi> U s", "by (metis less_imp_le option.sel)"], ["", "text \\<open>Converging to the same hypothesis on two functions precludes\nlearning in the limit.\\<close>"], ["", "lemma same_hyp_for_two_not_Lim:\n  assumes \"f\\<^sub>1 \\<in> U\"\n    and \"f\\<^sub>2 \\<in> U\"\n    and \"f\\<^sub>1 \\<noteq> f\\<^sub>2\"\n    and \"\\<forall>n\\<ge>n\\<^sub>1. s (f\\<^sub>1 \\<triangleright> n) = h\"\n    and \"\\<forall>n\\<ge>n\\<^sub>2. s (f\\<^sub>2 \\<triangleright> n) = h\"\n  shows \"\\<not> learn_lim \\<psi> U s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> learn_lim \\<psi> U s", "using assms learn_limE"], ["proof (prove)\nusing this:\n  f\\<^sub>1 \\<in> U\n  f\\<^sub>2 \\<in> U\n  f\\<^sub>1 \\<noteq> f\\<^sub>2\n  \\<forall>n\\<ge>n\\<^sub>1. s (f\\<^sub>1 \\<triangleright> n) = h\n  \\<forall>n\\<ge>n\\<^sub>2. s (f\\<^sub>2 \\<triangleright> n) = h\n  learn_lim ?\\<psi> ?U ?s \\<Longrightarrow> environment ?\\<psi> ?U ?s\n  \\<lbrakk>learn_lim ?\\<psi> ?U ?s; ?f \\<in> ?U\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i.\n                       ?\\<psi> i = ?f \\<and>\n                       (\\<exists>n\\<^sub>0.\n                           \\<forall>n\\<ge>n\\<^sub>0.\n                              ?s (?f \\<triangleright> n) \\<down>= i)\n\ngoal (1 subgoal):\n 1. \\<not> learn_lim \\<psi> U s", "by (metis le_cases option.sel)"], ["", "text \\<open>Every class that can be learned in the limit can be learned in\nthe limit with respect to any G?del numbering. We prove a generalization in\nwhich hypotheses may have to satisfy an extra condition, so we can re-use it\nfor other inference types later.\\<close>"], ["", "lemma learn_lim_extra_wrt_goedel:\n  fixes extra :: \"(partial1 set) \\<Rightarrow> partial1 \\<Rightarrow> nat \\<Rightarrow> partial1 \\<Rightarrow> bool\"\n  assumes \"goedel_numbering \\<chi>\"\n    and \"learn_lim \\<psi> U s\"\n    and \"\\<And>f n. f \\<in> U \\<Longrightarrow> extra U f n (\\<psi> (the (s (f \\<triangleright> n))))\"\n  shows \"\\<exists>t. learn_lim \\<chi> U t \\<and> (\\<forall>f\\<in>U. \\<forall>n. extra U f n (\\<chi> (the (t (f \\<triangleright> n)))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t.\n       learn_lim \\<chi> U t \\<and>\n       (\\<forall>f\\<in>U.\n           \\<forall>n.\n              extra U f n (\\<chi> (the (t (f \\<triangleright> n)))))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>t.\n       learn_lim \\<chi> U t \\<and>\n       (\\<forall>f\\<in>U.\n           \\<forall>n.\n              extra U f n (\\<chi> (the (t (f \\<triangleright> n)))))", "have env: \"environment \\<psi> U s\"\n    and lim: \"learn_lim \\<psi> U s\"\n    and extra: \"\\<forall>f\\<in>U. \\<forall>n. extra U f n (\\<psi> (the (s (f \\<triangleright> n))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. environment \\<psi> U s &&&\n    learn_lim \\<psi> U s &&&\n    \\<forall>f\\<in>U.\n       \\<forall>n. extra U f n (\\<psi> (the (s (f \\<triangleright> n))))", "using assms learn_limE"], ["proof (prove)\nusing this:\n  goedel_numbering \\<chi>\n  learn_lim \\<psi> U s\n  ?f \\<in> U \\<Longrightarrow>\n  extra U ?f ?n (\\<psi> (the (s (?f \\<triangleright> ?n))))\n  learn_lim ?\\<psi> ?U ?s \\<Longrightarrow> environment ?\\<psi> ?U ?s\n  \\<lbrakk>learn_lim ?\\<psi> ?U ?s; ?f \\<in> ?U\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i.\n                       ?\\<psi> i = ?f \\<and>\n                       (\\<exists>n\\<^sub>0.\n                           \\<forall>n\\<ge>n\\<^sub>0.\n                              ?s (?f \\<triangleright> n) \\<down>= i)\n\ngoal (1 subgoal):\n 1. environment \\<psi> U s &&&\n    learn_lim \\<psi> U s &&&\n    \\<forall>f\\<in>U.\n       \\<forall>n. extra U f n (\\<psi> (the (s (f \\<triangleright> n))))", "by auto"], ["proof (state)\nthis:\n  environment \\<psi> U s\n  learn_lim \\<psi> U s\n  \\<forall>f\\<in>U.\n     \\<forall>n. extra U f n (\\<psi> (the (s (f \\<triangleright> n))))\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       learn_lim \\<chi> U t \\<and>\n       (\\<forall>f\\<in>U.\n           \\<forall>n.\n              extra U f n (\\<chi> (the (t (f \\<triangleright> n)))))", "obtain c where c: \"c \\<in> \\<R>\" \"\\<forall>i. \\<psi> i = \\<chi> (the (c i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> \\<R>;\n         \\<forall>i. \\<psi> i = \\<chi> (the (c i))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using env goedel_numberingE[OF assms(1), of \\<psi>]"], ["proof (prove)\nusing this:\n  environment \\<psi> U s\n  \\<lbrakk>\\<psi> \\<in> \\<P>\\<^sup>2;\n   \\<And>c.\n      \\<lbrakk>c \\<in> \\<R>;\n       \\<forall>i. \\<psi> i = \\<chi> (the (c i))\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> \\<R>;\n         \\<forall>i. \\<psi> i = \\<chi> (the (c i))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  c \\<in> \\<R>\n  \\<forall>i. \\<psi> i = \\<chi> (the (c i))\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       learn_lim \\<chi> U t \\<and>\n       (\\<forall>f\\<in>U.\n           \\<forall>n.\n              extra U f n (\\<chi> (the (t (f \\<triangleright> n)))))", "define t where \"t \\<equiv>\n    (\\<lambda>x. if s x \\<down> \\<and> c (the (s x)) \\<down> then Some (the (c (the (s x)))) else None)\""], ["proof (state)\nthis:\n  t \\<equiv>\n  \\<lambda>x.\n     if s x \\<down> \\<and> c (the (s x)) \\<down>\n     then Some (the (c (the (s x)))) else None\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       learn_lim \\<chi> U t \\<and>\n       (\\<forall>f\\<in>U.\n           \\<forall>n.\n              extra U f n (\\<chi> (the (t (f \\<triangleright> n)))))", "have \"t \\<in> \\<P>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> \\<P>", "unfolding t_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        if s x \\<down> \\<and> c (the (s x)) \\<down>\n        then Some (the (c (the (s x)))) else None)\n    \\<in> \\<P>", "using env c concat_P1_P1[of c s]"], ["proof (prove)\nusing this:\n  environment \\<psi> U s\n  c \\<in> \\<R>\n  \\<forall>i. \\<psi> i = \\<chi> (the (c i))\n  \\<lbrakk>c \\<in> \\<P>; s \\<in> \\<P>\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>x.\n                        if s x \\<down> \\<and> c (the (s x)) \\<down>\n                        then Some (the (c (the (s x)))) else None)\n                    \\<in> \\<P>\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        if s x \\<down> \\<and> c (the (s x)) \\<down>\n        then Some (the (c (the (s x)))) else None)\n    \\<in> \\<P>", "by auto"], ["proof (state)\nthis:\n  t \\<in> \\<P>\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       learn_lim \\<chi> U t \\<and>\n       (\\<forall>f\\<in>U.\n           \\<forall>n.\n              extra U f n (\\<chi> (the (t (f \\<triangleright> n)))))", "have \"t x = (if s x \\<down> then Some (the (c (the (s x)))) else None)\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. t x = (if s x \\<down> then Some (the (c (the (s x)))) else None)", "using t_def c(1) R1_imp_total1"], ["proof (prove)\nusing this:\n  t \\<equiv>\n  \\<lambda>x.\n     if s x \\<down> \\<and> c (the (s x)) \\<down>\n     then Some (the (c (the (s x)))) else None\n  c \\<in> \\<R>\n  ?f \\<in> \\<R> \\<Longrightarrow> total1 ?f\n\ngoal (1 subgoal):\n 1. t x = (if s x \\<down> then Some (the (c (the (s x)))) else None)", "by auto"], ["proof (state)\nthis:\n  t ?x = (if s ?x \\<down> then Some (the (c (the (s ?x)))) else None)\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       learn_lim \\<chi> U t \\<and>\n       (\\<forall>f\\<in>U.\n           \\<forall>n.\n              extra U f n (\\<chi> (the (t (f \\<triangleright> n)))))", "then"], ["proof (chain)\npicking this:\n  t ?x = (if s ?x \\<down> then Some (the (c (the (s ?x)))) else None)", "have t: \"t (f \\<triangleright> n) \\<down>= the (c (the (s (f \\<triangleright> n))))\" if \"f \\<in> U\" for f n"], ["proof (prove)\nusing this:\n  t ?x = (if s ?x \\<down> then Some (the (c (the (s ?x)))) else None)\n\ngoal (1 subgoal):\n 1. t (f \\<triangleright> n) \\<down>=\n    the (c (the (s (f \\<triangleright> n))))", "using lim learn_limE that"], ["proof (prove)\nusing this:\n  t ?x = (if s ?x \\<down> then Some (the (c (the (s ?x)))) else None)\n  learn_lim \\<psi> U s\n  learn_lim ?\\<psi> ?U ?s \\<Longrightarrow> environment ?\\<psi> ?U ?s\n  \\<lbrakk>learn_lim ?\\<psi> ?U ?s; ?f \\<in> ?U\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i.\n                       ?\\<psi> i = ?f \\<and>\n                       (\\<exists>n\\<^sub>0.\n                           \\<forall>n\\<ge>n\\<^sub>0.\n                              ?s (?f \\<triangleright> n) \\<down>= i)\n  f \\<in> U\n\ngoal (1 subgoal):\n 1. t (f \\<triangleright> n) \\<down>=\n    the (c (the (s (f \\<triangleright> n))))", "by simp"], ["proof (state)\nthis:\n  ?f \\<in> U \\<Longrightarrow>\n  t (?f \\<triangleright> ?n) \\<down>=\n  the (c (the (s (?f \\<triangleright> ?n))))\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       learn_lim \\<chi> U t \\<and>\n       (\\<forall>f\\<in>U.\n           \\<forall>n.\n              extra U f n (\\<chi> (the (t (f \\<triangleright> n)))))", "have \"learn_lim \\<chi> U t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. learn_lim \\<chi> U t", "proof (rule learn_limI)"], ["proof (state)\ngoal (2 subgoals):\n 1. environment \\<chi> U t\n 2. \\<And>f.\n       f \\<in> U \\<Longrightarrow>\n       \\<exists>i.\n          \\<chi> i = f \\<and>\n          (\\<exists>n\\<^sub>0.\n              \\<forall>n\\<ge>n\\<^sub>0. t (f \\<triangleright> n) \\<down>= i)", "show \"environment \\<chi> U t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. environment \\<chi> U t", "using t"], ["proof (prove)\nusing this:\n  ?f \\<in> U \\<Longrightarrow>\n  t (?f \\<triangleright> ?n) \\<down>=\n  the (c (the (s (?f \\<triangleright> ?n))))\n\ngoal (1 subgoal):\n 1. environment \\<chi> U t", "by (simp add: \\<open>t \\<in> \\<P>\\<close> env goedel_numbering_P2[OF assms(1)])"], ["proof (state)\nthis:\n  environment \\<chi> U t\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> U \\<Longrightarrow>\n       \\<exists>i.\n          \\<chi> i = f \\<and>\n          (\\<exists>n\\<^sub>0.\n              \\<forall>n\\<ge>n\\<^sub>0. t (f \\<triangleright> n) \\<down>= i)", "show \"\\<exists>i. \\<chi> i = f \\<and> (\\<forall>\\<^sup>\\<infinity>n. t (f \\<triangleright> n) \\<down>= i)\" if \"f \\<in> U\" for f"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i.\n       \\<chi> i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0. t (f \\<triangleright> n) \\<down>= i)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i.\n       \\<chi> i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0. t (f \\<triangleright> n) \\<down>= i)", "from lim learn_limE(2)"], ["proof (chain)\npicking this:\n  learn_lim \\<psi> U s\n  \\<lbrakk>learn_lim ?\\<psi> ?U ?s; ?f \\<in> ?U\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i.\n                       ?\\<psi> i = ?f \\<and>\n                       (\\<exists>n\\<^sub>0.\n                           \\<forall>n\\<ge>n\\<^sub>0.\n                              ?s (?f \\<triangleright> n) \\<down>= i)", "obtain i n\\<^sub>0 where\n        i: \"\\<psi> i = f \\<and> (\\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i)\""], ["proof (prove)\nusing this:\n  learn_lim \\<psi> U s\n  \\<lbrakk>learn_lim ?\\<psi> ?U ?s; ?f \\<in> ?U\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i.\n                       ?\\<psi> i = ?f \\<and>\n                       (\\<exists>n\\<^sub>0.\n                           \\<forall>n\\<ge>n\\<^sub>0.\n                              ?s (?f \\<triangleright> n) \\<down>= i)\n\ngoal (1 subgoal):\n 1. (\\<And>i n\\<^sub>0.\n        \\<psi> i = f \\<and>\n        (\\<forall>n\\<ge>n\\<^sub>0.\n            s (f \\<triangleright> n) \\<down>= i) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using \\<open>f \\<in> U\\<close>"], ["proof (prove)\nusing this:\n  learn_lim \\<psi> U s\n  \\<lbrakk>learn_lim ?\\<psi> ?U ?s; ?f \\<in> ?U\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i.\n                       ?\\<psi> i = ?f \\<and>\n                       (\\<exists>n\\<^sub>0.\n                           \\<forall>n\\<ge>n\\<^sub>0.\n                              ?s (?f \\<triangleright> n) \\<down>= i)\n  f \\<in> U\n\ngoal (1 subgoal):\n 1. (\\<And>i n\\<^sub>0.\n        \\<psi> i = f \\<and>\n        (\\<forall>n\\<ge>n\\<^sub>0.\n            s (f \\<triangleright> n) \\<down>= i) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<psi> i = f \\<and>\n  (\\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i)\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       \\<chi> i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0. t (f \\<triangleright> n) \\<down>= i)", "let ?j = \"the (c i)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i.\n       \\<chi> i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0. t (f \\<triangleright> n) \\<down>= i)", "have \"\\<chi> ?j = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<chi> (the (c i)) = f", "using c(2) i"], ["proof (prove)\nusing this:\n  \\<forall>i. \\<psi> i = \\<chi> (the (c i))\n  \\<psi> i = f \\<and>\n  (\\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i)\n\ngoal (1 subgoal):\n 1. \\<chi> (the (c i)) = f", "by simp"], ["proof (state)\nthis:\n  \\<chi> (the (c i)) = f\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       \\<chi> i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0. t (f \\<triangleright> n) \\<down>= i)", "moreover"], ["proof (state)\nthis:\n  \\<chi> (the (c i)) = f\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       \\<chi> i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0. t (f \\<triangleright> n) \\<down>= i)", "have \"t (f \\<triangleright> n) \\<down>= ?j\" if \"n \\<ge> n\\<^sub>0\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. t (f \\<triangleright> n) \\<down>= the (c i)", "by (simp add: \\<open>f \\<in> U\\<close> i t that)"], ["proof (state)\nthis:\n  n\\<^sub>0 \\<le> ?n \\<Longrightarrow>\n  t (f \\<triangleright> ?n) \\<down>= the (c i)\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       \\<chi> i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0. t (f \\<triangleright> n) \\<down>= i)", "ultimately"], ["proof (chain)\npicking this:\n  \\<chi> (the (c i)) = f\n  n\\<^sub>0 \\<le> ?n \\<Longrightarrow>\n  t (f \\<triangleright> ?n) \\<down>= the (c i)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<chi> (the (c i)) = f\n  n\\<^sub>0 \\<le> ?n \\<Longrightarrow>\n  t (f \\<triangleright> ?n) \\<down>= the (c i)\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       \\<chi> i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0. t (f \\<triangleright> n) \\<down>= i)", "by auto"], ["proof (state)\nthis:\n  \\<exists>i.\n     \\<chi> i = f \\<and>\n     (\\<exists>n\\<^sub>0.\n         \\<forall>n\\<ge>n\\<^sub>0. t (f \\<triangleright> n) \\<down>= i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?f \\<in> U \\<Longrightarrow>\n  \\<exists>i.\n     \\<chi> i = ?f \\<and>\n     (\\<exists>n\\<^sub>0.\n         \\<forall>n\\<ge>n\\<^sub>0. t (?f \\<triangleright> n) \\<down>= i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  learn_lim \\<chi> U t\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       learn_lim \\<chi> U t \\<and>\n       (\\<forall>f\\<in>U.\n           \\<forall>n.\n              extra U f n (\\<chi> (the (t (f \\<triangleright> n)))))", "moreover"], ["proof (state)\nthis:\n  learn_lim \\<chi> U t\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       learn_lim \\<chi> U t \\<and>\n       (\\<forall>f\\<in>U.\n           \\<forall>n.\n              extra U f n (\\<chi> (the (t (f \\<triangleright> n)))))", "have \"extra U f n (\\<chi> (the (t (f \\<triangleright> n))))\" if \"f \\<in> U\" for f n"], ["proof (prove)\ngoal (1 subgoal):\n 1. extra U f n (\\<chi> (the (t (f \\<triangleright> n))))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. extra U f n (\\<chi> (the (t (f \\<triangleright> n))))", "from t"], ["proof (chain)\npicking this:\n  ?f \\<in> U \\<Longrightarrow>\n  t (?f \\<triangleright> ?n) \\<down>=\n  the (c (the (s (?f \\<triangleright> ?n))))", "have \"the (t (f \\<triangleright> n)) = the (c (the (s (f \\<triangleright> n))))\""], ["proof (prove)\nusing this:\n  ?f \\<in> U \\<Longrightarrow>\n  t (?f \\<triangleright> ?n) \\<down>=\n  the (c (the (s (?f \\<triangleright> ?n))))\n\ngoal (1 subgoal):\n 1. the (t (f \\<triangleright> n)) =\n    the (c (the (s (f \\<triangleright> n))))", "by (simp add: that)"], ["proof (state)\nthis:\n  the (t (f \\<triangleright> n)) = the (c (the (s (f \\<triangleright> n))))\n\ngoal (1 subgoal):\n 1. extra U f n (\\<chi> (the (t (f \\<triangleright> n))))", "then"], ["proof (chain)\npicking this:\n  the (t (f \\<triangleright> n)) = the (c (the (s (f \\<triangleright> n))))", "have \"\\<chi> (the (t (f \\<triangleright> n))) = \\<psi> (the (s (f \\<triangleright> n)))\""], ["proof (prove)\nusing this:\n  the (t (f \\<triangleright> n)) = the (c (the (s (f \\<triangleright> n))))\n\ngoal (1 subgoal):\n 1. \\<chi> (the (t (f \\<triangleright> n))) =\n    \\<psi> (the (s (f \\<triangleright> n)))", "using c(2)"], ["proof (prove)\nusing this:\n  the (t (f \\<triangleright> n)) = the (c (the (s (f \\<triangleright> n))))\n  \\<forall>i. \\<psi> i = \\<chi> (the (c i))\n\ngoal (1 subgoal):\n 1. \\<chi> (the (t (f \\<triangleright> n))) =\n    \\<psi> (the (s (f \\<triangleright> n)))", "by simp"], ["proof (state)\nthis:\n  \\<chi> (the (t (f \\<triangleright> n))) =\n  \\<psi> (the (s (f \\<triangleright> n)))\n\ngoal (1 subgoal):\n 1. extra U f n (\\<chi> (the (t (f \\<triangleright> n))))", "with extra"], ["proof (chain)\npicking this:\n  \\<forall>f\\<in>U.\n     \\<forall>n. extra U f n (\\<psi> (the (s (f \\<triangleright> n))))\n  \\<chi> (the (t (f \\<triangleright> n))) =\n  \\<psi> (the (s (f \\<triangleright> n)))", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>f\\<in>U.\n     \\<forall>n. extra U f n (\\<psi> (the (s (f \\<triangleright> n))))\n  \\<chi> (the (t (f \\<triangleright> n))) =\n  \\<psi> (the (s (f \\<triangleright> n)))\n\ngoal (1 subgoal):\n 1. extra U f n (\\<chi> (the (t (f \\<triangleright> n))))", "using that"], ["proof (prove)\nusing this:\n  \\<forall>f\\<in>U.\n     \\<forall>n. extra U f n (\\<psi> (the (s (f \\<triangleright> n))))\n  \\<chi> (the (t (f \\<triangleright> n))) =\n  \\<psi> (the (s (f \\<triangleright> n)))\n  f \\<in> U\n\ngoal (1 subgoal):\n 1. extra U f n (\\<chi> (the (t (f \\<triangleright> n))))", "by simp"], ["proof (state)\nthis:\n  extra U f n (\\<chi> (the (t (f \\<triangleright> n))))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?f \\<in> U \\<Longrightarrow>\n  extra U ?f ?n (\\<chi> (the (t (?f \\<triangleright> ?n))))\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       learn_lim \\<chi> U t \\<and>\n       (\\<forall>f\\<in>U.\n           \\<forall>n.\n              extra U f n (\\<chi> (the (t (f \\<triangleright> n)))))", "ultimately"], ["proof (chain)\npicking this:\n  learn_lim \\<chi> U t\n  ?f \\<in> U \\<Longrightarrow>\n  extra U ?f ?n (\\<chi> (the (t (?f \\<triangleright> ?n))))", "show ?thesis"], ["proof (prove)\nusing this:\n  learn_lim \\<chi> U t\n  ?f \\<in> U \\<Longrightarrow>\n  extra U ?f ?n (\\<chi> (the (t (?f \\<triangleright> ?n))))\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       learn_lim \\<chi> U t \\<and>\n       (\\<forall>f\\<in>U.\n           \\<forall>n.\n              extra U f n (\\<chi> (the (t (f \\<triangleright> n)))))", "by auto"], ["proof (state)\nthis:\n  \\<exists>t.\n     learn_lim \\<chi> U t \\<and>\n     (\\<forall>f\\<in>U.\n         \\<forall>n. extra U f n (\\<chi> (the (t (f \\<triangleright> n)))))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma learn_lim_wrt_goedel:\n  assumes \"goedel_numbering \\<chi>\" and \"learn_lim \\<psi> U s\"\n  shows \"\\<exists>t. learn_lim \\<chi> U t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t. learn_lim \\<chi> U t", "using assms learn_lim_extra_wrt_goedel[where ?extra=\"\\<lambda>U f n h. True\"]"], ["proof (prove)\nusing this:\n  goedel_numbering \\<chi>\n  learn_lim \\<psi> U s\n  \\<lbrakk>goedel_numbering ?\\<chi>; learn_lim ?\\<psi> ?U ?s;\n   \\<And>f n. f \\<in> ?U \\<Longrightarrow> True\\<rbrakk>\n  \\<Longrightarrow> \\<exists>t.\n                       learn_lim ?\\<chi> ?U t \\<and>\n                       (\\<forall>f\\<in>?U. \\<forall>n. True)\n\ngoal (1 subgoal):\n 1. \\<exists>t. learn_lim \\<chi> U t", "by simp"], ["", "lemma LIM_wrt_phi_eq_Lim: \"LIM_wrt \\<phi> = LIM\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LIM_wrt \\<phi> = LIM", "using LIM_wrt_def Lim_def learn_lim_wrt_goedel[OF goedel_numbering_phi]"], ["proof (prove)\nusing this:\n  LIM_wrt ?\\<psi> \\<equiv> {U. \\<exists>s. learn_lim ?\\<psi> U s}\n  LIM \\<equiv> {U. \\<exists>\\<psi> s. learn_lim \\<psi> U s}\n  learn_lim ?\\<psi> ?U ?s \\<Longrightarrow>\n  \\<exists>t. learn_lim \\<phi> ?U t\n\ngoal (1 subgoal):\n 1. LIM_wrt \\<phi> = LIM", "by blast"], ["", "subsection \\<open>BC: Behaviorally correct learning in the limit\\<close>"], ["", "text \\<open>Behaviorally correct learning in the limit relaxes LIM by\nrequiring that the strategy almost always output an index for the target\nfunction, but not necessarily the same index. In other words convergence of\n$(S(f^n))_{n\\in\\mathbb{N}}$ is replaced by convergence of\n$(\\psi_{S(f^n)})_{n\\in\\mathbb{N}}$.\\<close>"], ["", "definition learn_bc :: \"partial2 \\<Rightarrow> (partial1 set) \\<Rightarrow> partial1 \\<Rightarrow> bool\" where\n  \"learn_bc \\<psi> U s \\<equiv> \n     environment \\<psi> U s \\<and>\n     (\\<forall>f\\<in>U. \\<forall>\\<^sup>\\<infinity>n. \\<psi> (the (s (f \\<triangleright> n))) = f)\""], ["", "lemma learn_bcE:\n  assumes \"learn_bc \\<psi> U s\"\n  shows \"environment \\<psi> U s\"\n    and \"\\<And>f. f \\<in> U \\<Longrightarrow> \\<forall>\\<^sup>\\<infinity>n. \\<psi> (the (s (f \\<triangleright> n))) = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. environment \\<psi> U s &&&\n    (\\<And>f.\n        f \\<in> U \\<Longrightarrow>\n        \\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0.\n              \\<psi> (the (s (f \\<triangleright> n))) = f)", "using assms learn_bc_def"], ["proof (prove)\nusing this:\n  learn_bc \\<psi> U s\n  learn_bc ?\\<psi> ?U ?s \\<equiv>\n  environment ?\\<psi> ?U ?s \\<and>\n  (\\<forall>f\\<in>?U.\n      \\<exists>n\\<^sub>0.\n         \\<forall>n\\<ge>n\\<^sub>0.\n            ?\\<psi> (the (?s (f \\<triangleright> n))) = f)\n\ngoal (1 subgoal):\n 1. environment \\<psi> U s &&&\n    (\\<And>f.\n        f \\<in> U \\<Longrightarrow>\n        \\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0.\n              \\<psi> (the (s (f \\<triangleright> n))) = f)", "by auto"], ["", "lemma learn_bcI:\n  assumes \"environment \\<psi> U s\"\n    and \"\\<And>f. f \\<in> U \\<Longrightarrow> \\<forall>\\<^sup>\\<infinity>n. \\<psi> (the (s (f \\<triangleright> n))) = f\"\n  shows \"learn_bc \\<psi> U s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. learn_bc \\<psi> U s", "using assms learn_bc_def"], ["proof (prove)\nusing this:\n  environment \\<psi> U s\n  ?f \\<in> U \\<Longrightarrow>\n  \\<exists>n\\<^sub>0.\n     \\<forall>n\\<ge>n\\<^sub>0. \\<psi> (the (s (?f \\<triangleright> n))) = ?f\n  learn_bc ?\\<psi> ?U ?s \\<equiv>\n  environment ?\\<psi> ?U ?s \\<and>\n  (\\<forall>f\\<in>?U.\n      \\<exists>n\\<^sub>0.\n         \\<forall>n\\<ge>n\\<^sub>0.\n            ?\\<psi> (the (?s (f \\<triangleright> n))) = f)\n\ngoal (1 subgoal):\n 1. learn_bc \\<psi> U s", "by auto"], ["", "definition BC_wrt :: \"partial2 \\<Rightarrow> partial1 set set\" where\n  \"BC_wrt \\<psi> \\<equiv> {U. \\<exists>s. learn_bc \\<psi> U s}\""], ["", "definition BC :: \"partial1 set set\" where\n  \"BC \\<equiv> {U. \\<exists>\\<psi> s. learn_bc \\<psi> U s}\""], ["", "text \\<open>BC is a superset of LIM and closed under the subset relation.\\<close>"], ["", "lemma learn_lim_imp_BC: \"learn_lim \\<psi> U s \\<Longrightarrow> learn_bc \\<psi> U s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. learn_lim \\<psi> U s \\<Longrightarrow> learn_bc \\<psi> U s", "using learn_limE learn_bcI[of \\<psi> U s]"], ["proof (prove)\nusing this:\n  learn_lim ?\\<psi> ?U ?s \\<Longrightarrow> environment ?\\<psi> ?U ?s\n  \\<lbrakk>learn_lim ?\\<psi> ?U ?s; ?f \\<in> ?U\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i.\n                       ?\\<psi> i = ?f \\<and>\n                       (\\<exists>n\\<^sub>0.\n                           \\<forall>n\\<ge>n\\<^sub>0.\n                              ?s (?f \\<triangleright> n) \\<down>= i)\n  \\<lbrakk>environment \\<psi> U s;\n   \\<And>f.\n      f \\<in> U \\<Longrightarrow>\n      \\<exists>n\\<^sub>0.\n         \\<forall>n\\<ge>n\\<^sub>0.\n            \\<psi> (the (s (f \\<triangleright> n))) = f\\<rbrakk>\n  \\<Longrightarrow> learn_bc \\<psi> U s\n\ngoal (1 subgoal):\n 1. learn_lim \\<psi> U s \\<Longrightarrow> learn_bc \\<psi> U s", "by fastforce"], ["", "lemma Lim_subseteq_BC: \"LIM \\<subseteq> BC\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LIM \\<subseteq> BC", "using learn_lim_imp_BC Lim_def BC_def"], ["proof (prove)\nusing this:\n  learn_lim ?\\<psi> ?U ?s \\<Longrightarrow> learn_bc ?\\<psi> ?U ?s\n  LIM \\<equiv> {U. \\<exists>\\<psi> s. learn_lim \\<psi> U s}\n  BC \\<equiv> {U. \\<exists>\\<psi> s. learn_bc \\<psi> U s}\n\ngoal (1 subgoal):\n 1. LIM \\<subseteq> BC", "by blast"], ["", "lemma learn_bc_closed_subseteq:\n  assumes \"learn_bc \\<psi> U s\" and \"V \\<subseteq> U\"\n  shows \"learn_bc \\<psi> V s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. learn_bc \\<psi> V s", "using assms learn_bc_def"], ["proof (prove)\nusing this:\n  learn_bc \\<psi> U s\n  V \\<subseteq> U\n  learn_bc ?\\<psi> ?U ?s \\<equiv>\n  environment ?\\<psi> ?U ?s \\<and>\n  (\\<forall>f\\<in>?U.\n      \\<exists>n\\<^sub>0.\n         \\<forall>n\\<ge>n\\<^sub>0.\n            ?\\<psi> (the (?s (f \\<triangleright> n))) = f)\n\ngoal (1 subgoal):\n 1. learn_bc \\<psi> V s", "by auto"], ["", "corollary BC_closed_subseteq:\n  assumes \"U \\<in> BC\" and \"V \\<subseteq> U\"\n  shows \"V \\<in> BC\""], ["proof (prove)\ngoal (1 subgoal):\n 1. V \\<in> BC", "using assms"], ["proof (prove)\nusing this:\n  U \\<in> BC\n  V \\<subseteq> U\n\ngoal (1 subgoal):\n 1. V \\<in> BC", "by (smt BC_def learn_bc_closed_subseteq mem_Collect_eq)"], ["", "text \\<open>Just like with LIM, guessing a wrong hypothesis infinitely often\nprecludes BC-style learning.\\<close>"], ["", "lemma infinite_hyp_wrong_not_BC:\n  assumes \"f \\<in> U\" and \"\\<forall>n. \\<exists>m>n. \\<psi> (the (s (f \\<triangleright> m))) \\<noteq> f\"\n  shows \"\\<not> learn_bc \\<psi> U s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> learn_bc \\<psi> U s", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. learn_bc \\<psi> U s \\<Longrightarrow> False", "assume \"learn_bc \\<psi> U s\""], ["proof (state)\nthis:\n  learn_bc \\<psi> U s\n\ngoal (1 subgoal):\n 1. learn_bc \\<psi> U s \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  learn_bc \\<psi> U s", "obtain n\\<^sub>0 where \"\\<forall>n\\<ge>n\\<^sub>0. \\<psi> (the (s (f \\<triangleright> n))) = f\""], ["proof (prove)\nusing this:\n  learn_bc \\<psi> U s\n\ngoal (1 subgoal):\n 1. (\\<And>n\\<^sub>0.\n        \\<forall>n\\<ge>n\\<^sub>0.\n           \\<psi> (the (s (f \\<triangleright> n))) = f \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using learn_bcE assms(1)"], ["proof (prove)\nusing this:\n  learn_bc \\<psi> U s\n  learn_bc ?\\<psi> ?U ?s \\<Longrightarrow> environment ?\\<psi> ?U ?s\n  \\<lbrakk>learn_bc ?\\<psi> ?U ?s; ?f \\<in> ?U\\<rbrakk>\n  \\<Longrightarrow> \\<exists>n\\<^sub>0.\n                       \\<forall>n\\<ge>n\\<^sub>0.\n                          ?\\<psi> (the (?s (?f \\<triangleright> n))) = ?f\n  f \\<in> U\n\ngoal (1 subgoal):\n 1. (\\<And>n\\<^sub>0.\n        \\<forall>n\\<ge>n\\<^sub>0.\n           \\<psi> (the (s (f \\<triangleright> n))) = f \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  \\<forall>n\\<ge>n\\<^sub>0. \\<psi> (the (s (f \\<triangleright> n))) = f\n\ngoal (1 subgoal):\n 1. learn_bc \\<psi> U s \\<Longrightarrow> False", "with assms(2)"], ["proof (chain)\npicking this:\n  \\<forall>n.\n     \\<exists>m>n. \\<psi> (the (s (f \\<triangleright> m))) \\<noteq> f\n  \\<forall>n\\<ge>n\\<^sub>0. \\<psi> (the (s (f \\<triangleright> n))) = f", "show False"], ["proof (prove)\nusing this:\n  \\<forall>n.\n     \\<exists>m>n. \\<psi> (the (s (f \\<triangleright> m))) \\<noteq> f\n  \\<forall>n\\<ge>n\\<^sub>0. \\<psi> (the (s (f \\<triangleright> n))) = f\n\ngoal (1 subgoal):\n 1. False", "using less_imp_le"], ["proof (prove)\nusing this:\n  \\<forall>n.\n     \\<exists>m>n. \\<psi> (the (s (f \\<triangleright> m))) \\<noteq> f\n  \\<forall>n\\<ge>n\\<^sub>0. \\<psi> (the (s (f \\<triangleright> n))) = f\n  ?x < ?y \\<Longrightarrow> ?x \\<le> ?y\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The proof that G?del numberings suffice as hypothesis spaces for\nBC is similar to the one for @{thm[source] learn_lim_extra_wrt_goedel}. We do\nnot need the @{term extra} part for BC, but we get it for free.\\<close>"], ["", "lemma learn_bc_extra_wrt_goedel:\n  fixes extra :: \"(partial1 set) \\<Rightarrow> partial1 \\<Rightarrow> nat \\<Rightarrow> partial1 \\<Rightarrow> bool\"\n  assumes \"goedel_numbering \\<chi>\"\n    and \"learn_bc \\<psi> U s\"\n    and \"\\<And>f n. f \\<in> U \\<Longrightarrow> extra U f n (\\<psi> (the (s (f \\<triangleright> n))))\"\n  shows \"\\<exists>t. learn_bc \\<chi> U t \\<and> (\\<forall>f\\<in>U. \\<forall>n. extra U f n (\\<chi> (the (t (f \\<triangleright> n)))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t.\n       learn_bc \\<chi> U t \\<and>\n       (\\<forall>f\\<in>U.\n           \\<forall>n.\n              extra U f n (\\<chi> (the (t (f \\<triangleright> n)))))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>t.\n       learn_bc \\<chi> U t \\<and>\n       (\\<forall>f\\<in>U.\n           \\<forall>n.\n              extra U f n (\\<chi> (the (t (f \\<triangleright> n)))))", "have env: \"environment \\<psi> U s\"\n    and lim: \"learn_bc \\<psi> U s\"\n    and extra: \"\\<forall>f\\<in>U. \\<forall>n. extra U f n (\\<psi> (the (s (f \\<triangleright> n))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. environment \\<psi> U s &&&\n    learn_bc \\<psi> U s &&&\n    \\<forall>f\\<in>U.\n       \\<forall>n. extra U f n (\\<psi> (the (s (f \\<triangleright> n))))", "using assms learn_bc_def"], ["proof (prove)\nusing this:\n  goedel_numbering \\<chi>\n  learn_bc \\<psi> U s\n  ?f \\<in> U \\<Longrightarrow>\n  extra U ?f ?n (\\<psi> (the (s (?f \\<triangleright> ?n))))\n  learn_bc ?\\<psi> ?U ?s \\<equiv>\n  environment ?\\<psi> ?U ?s \\<and>\n  (\\<forall>f\\<in>?U.\n      \\<exists>n\\<^sub>0.\n         \\<forall>n\\<ge>n\\<^sub>0.\n            ?\\<psi> (the (?s (f \\<triangleright> n))) = f)\n\ngoal (1 subgoal):\n 1. environment \\<psi> U s &&&\n    learn_bc \\<psi> U s &&&\n    \\<forall>f\\<in>U.\n       \\<forall>n. extra U f n (\\<psi> (the (s (f \\<triangleright> n))))", "by auto"], ["proof (state)\nthis:\n  environment \\<psi> U s\n  learn_bc \\<psi> U s\n  \\<forall>f\\<in>U.\n     \\<forall>n. extra U f n (\\<psi> (the (s (f \\<triangleright> n))))\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       learn_bc \\<chi> U t \\<and>\n       (\\<forall>f\\<in>U.\n           \\<forall>n.\n              extra U f n (\\<chi> (the (t (f \\<triangleright> n)))))", "obtain c where c: \"c \\<in> \\<R>\" \"\\<forall>i. \\<psi> i = \\<chi> (the (c i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> \\<R>;\n         \\<forall>i. \\<psi> i = \\<chi> (the (c i))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using env goedel_numberingE[OF assms(1), of \\<psi>]"], ["proof (prove)\nusing this:\n  environment \\<psi> U s\n  \\<lbrakk>\\<psi> \\<in> \\<P>\\<^sup>2;\n   \\<And>c.\n      \\<lbrakk>c \\<in> \\<R>;\n       \\<forall>i. \\<psi> i = \\<chi> (the (c i))\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> \\<R>;\n         \\<forall>i. \\<psi> i = \\<chi> (the (c i))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  c \\<in> \\<R>\n  \\<forall>i. \\<psi> i = \\<chi> (the (c i))\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       learn_bc \\<chi> U t \\<and>\n       (\\<forall>f\\<in>U.\n           \\<forall>n.\n              extra U f n (\\<chi> (the (t (f \\<triangleright> n)))))", "define t where\n    \"t = (\\<lambda>x. if s x \\<down> \\<and> c (the (s x)) \\<down> then Some (the (c (the (s x)))) else None)\""], ["proof (state)\nthis:\n  t =\n  (\\<lambda>x.\n      if s x \\<down> \\<and> c (the (s x)) \\<down>\n      then Some (the (c (the (s x)))) else None)\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       learn_bc \\<chi> U t \\<and>\n       (\\<forall>f\\<in>U.\n           \\<forall>n.\n              extra U f n (\\<chi> (the (t (f \\<triangleright> n)))))", "have \"t \\<in> \\<P>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> \\<P>", "unfolding t_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        if s x \\<down> \\<and> c (the (s x)) \\<down>\n        then Some (the (c (the (s x)))) else None)\n    \\<in> \\<P>", "using env c concat_P1_P1[of c s]"], ["proof (prove)\nusing this:\n  environment \\<psi> U s\n  c \\<in> \\<R>\n  \\<forall>i. \\<psi> i = \\<chi> (the (c i))\n  \\<lbrakk>c \\<in> \\<P>; s \\<in> \\<P>\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>x.\n                        if s x \\<down> \\<and> c (the (s x)) \\<down>\n                        then Some (the (c (the (s x)))) else None)\n                    \\<in> \\<P>\n\ngoal (1 subgoal):\n 1. (\\<lambda>x.\n        if s x \\<down> \\<and> c (the (s x)) \\<down>\n        then Some (the (c (the (s x)))) else None)\n    \\<in> \\<P>", "by auto"], ["proof (state)\nthis:\n  t \\<in> \\<P>\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       learn_bc \\<chi> U t \\<and>\n       (\\<forall>f\\<in>U.\n           \\<forall>n.\n              extra U f n (\\<chi> (the (t (f \\<triangleright> n)))))", "have \"t x = (if s x \\<down> then Some (the (c (the (s x)))) else None)\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. t x = (if s x \\<down> then Some (the (c (the (s x)))) else None)", "using t_def c(1) R1_imp_total1"], ["proof (prove)\nusing this:\n  t =\n  (\\<lambda>x.\n      if s x \\<down> \\<and> c (the (s x)) \\<down>\n      then Some (the (c (the (s x)))) else None)\n  c \\<in> \\<R>\n  ?f \\<in> \\<R> \\<Longrightarrow> total1 ?f\n\ngoal (1 subgoal):\n 1. t x = (if s x \\<down> then Some (the (c (the (s x)))) else None)", "by auto"], ["proof (state)\nthis:\n  t ?x = (if s ?x \\<down> then Some (the (c (the (s ?x)))) else None)\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       learn_bc \\<chi> U t \\<and>\n       (\\<forall>f\\<in>U.\n           \\<forall>n.\n              extra U f n (\\<chi> (the (t (f \\<triangleright> n)))))", "then"], ["proof (chain)\npicking this:\n  t ?x = (if s ?x \\<down> then Some (the (c (the (s ?x)))) else None)", "have t: \"t (f \\<triangleright> n) \\<down>= the (c (the (s (f \\<triangleright> n))))\" if \"f \\<in> U\" for f n"], ["proof (prove)\nusing this:\n  t ?x = (if s ?x \\<down> then Some (the (c (the (s ?x)))) else None)\n\ngoal (1 subgoal):\n 1. t (f \\<triangleright> n) \\<down>=\n    the (c (the (s (f \\<triangleright> n))))", "using lim learn_bcE(1) that"], ["proof (prove)\nusing this:\n  t ?x = (if s ?x \\<down> then Some (the (c (the (s ?x)))) else None)\n  learn_bc \\<psi> U s\n  learn_bc ?\\<psi> ?U ?s \\<Longrightarrow> environment ?\\<psi> ?U ?s\n  f \\<in> U\n\ngoal (1 subgoal):\n 1. t (f \\<triangleright> n) \\<down>=\n    the (c (the (s (f \\<triangleright> n))))", "by simp"], ["proof (state)\nthis:\n  ?f \\<in> U \\<Longrightarrow>\n  t (?f \\<triangleright> ?n) \\<down>=\n  the (c (the (s (?f \\<triangleright> ?n))))\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       learn_bc \\<chi> U t \\<and>\n       (\\<forall>f\\<in>U.\n           \\<forall>n.\n              extra U f n (\\<chi> (the (t (f \\<triangleright> n)))))", "have \"learn_bc \\<chi> U t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. learn_bc \\<chi> U t", "proof (rule learn_bcI)"], ["proof (state)\ngoal (2 subgoals):\n 1. environment \\<chi> U t\n 2. \\<And>f.\n       f \\<in> U \\<Longrightarrow>\n       \\<exists>n\\<^sub>0.\n          \\<forall>n\\<ge>n\\<^sub>0.\n             \\<chi> (the (t (f \\<triangleright> n))) = f", "show \"environment \\<chi> U t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. environment \\<chi> U t", "using t"], ["proof (prove)\nusing this:\n  ?f \\<in> U \\<Longrightarrow>\n  t (?f \\<triangleright> ?n) \\<down>=\n  the (c (the (s (?f \\<triangleright> ?n))))\n\ngoal (1 subgoal):\n 1. environment \\<chi> U t", "by (simp add: \\<open>t \\<in> \\<P>\\<close> env goedel_numbering_P2[OF assms(1)])"], ["proof (state)\nthis:\n  environment \\<chi> U t\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> U \\<Longrightarrow>\n       \\<exists>n\\<^sub>0.\n          \\<forall>n\\<ge>n\\<^sub>0.\n             \\<chi> (the (t (f \\<triangleright> n))) = f", "show \"\\<forall>\\<^sup>\\<infinity>n. \\<chi> (the (t (f \\<triangleright> n))) = f\" if \"f \\<in> U\" for f"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n\\<^sub>0.\n       \\<forall>n\\<ge>n\\<^sub>0. \\<chi> (the (t (f \\<triangleright> n))) = f", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>n\\<^sub>0.\n       \\<forall>n\\<ge>n\\<^sub>0. \\<chi> (the (t (f \\<triangleright> n))) = f", "obtain n\\<^sub>0 where \"\\<forall>n\\<ge>n\\<^sub>0. \\<psi> (the (s (f \\<triangleright> n))) = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n\\<^sub>0.\n        \\<forall>n\\<ge>n\\<^sub>0.\n           \\<psi> (the (s (f \\<triangleright> n))) = f \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using lim learn_bcE(2) \\<open>f \\<in> U\\<close>"], ["proof (prove)\nusing this:\n  learn_bc \\<psi> U s\n  \\<lbrakk>learn_bc ?\\<psi> ?U ?s; ?f \\<in> ?U\\<rbrakk>\n  \\<Longrightarrow> \\<exists>n\\<^sub>0.\n                       \\<forall>n\\<ge>n\\<^sub>0.\n                          ?\\<psi> (the (?s (?f \\<triangleright> n))) = ?f\n  f \\<in> U\n\ngoal (1 subgoal):\n 1. (\\<And>n\\<^sub>0.\n        \\<forall>n\\<ge>n\\<^sub>0.\n           \\<psi> (the (s (f \\<triangleright> n))) = f \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<forall>n\\<ge>n\\<^sub>0. \\<psi> (the (s (f \\<triangleright> n))) = f\n\ngoal (1 subgoal):\n 1. \\<exists>n\\<^sub>0.\n       \\<forall>n\\<ge>n\\<^sub>0. \\<chi> (the (t (f \\<triangleright> n))) = f", "then"], ["proof (chain)\npicking this:\n  \\<forall>n\\<ge>n\\<^sub>0. \\<psi> (the (s (f \\<triangleright> n))) = f", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>n\\<ge>n\\<^sub>0. \\<psi> (the (s (f \\<triangleright> n))) = f\n\ngoal (1 subgoal):\n 1. \\<exists>n\\<^sub>0.\n       \\<forall>n\\<ge>n\\<^sub>0. \\<chi> (the (t (f \\<triangleright> n))) = f", "using that t c(2)"], ["proof (prove)\nusing this:\n  \\<forall>n\\<ge>n\\<^sub>0. \\<psi> (the (s (f \\<triangleright> n))) = f\n  f \\<in> U\n  ?f \\<in> U \\<Longrightarrow>\n  t (?f \\<triangleright> ?n) \\<down>=\n  the (c (the (s (?f \\<triangleright> ?n))))\n  \\<forall>i. \\<psi> i = \\<chi> (the (c i))\n\ngoal (1 subgoal):\n 1. \\<exists>n\\<^sub>0.\n       \\<forall>n\\<ge>n\\<^sub>0. \\<chi> (the (t (f \\<triangleright> n))) = f", "by auto"], ["proof (state)\nthis:\n  \\<exists>n\\<^sub>0.\n     \\<forall>n\\<ge>n\\<^sub>0. \\<chi> (the (t (f \\<triangleright> n))) = f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?f \\<in> U \\<Longrightarrow>\n  \\<exists>n\\<^sub>0.\n     \\<forall>n\\<ge>n\\<^sub>0. \\<chi> (the (t (?f \\<triangleright> n))) = ?f\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  learn_bc \\<chi> U t\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       learn_bc \\<chi> U t \\<and>\n       (\\<forall>f\\<in>U.\n           \\<forall>n.\n              extra U f n (\\<chi> (the (t (f \\<triangleright> n)))))", "moreover"], ["proof (state)\nthis:\n  learn_bc \\<chi> U t\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       learn_bc \\<chi> U t \\<and>\n       (\\<forall>f\\<in>U.\n           \\<forall>n.\n              extra U f n (\\<chi> (the (t (f \\<triangleright> n)))))", "have \"extra U f n (\\<chi> (the (t (f \\<triangleright> n))))\" if \"f \\<in> U\" for f n"], ["proof (prove)\ngoal (1 subgoal):\n 1. extra U f n (\\<chi> (the (t (f \\<triangleright> n))))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. extra U f n (\\<chi> (the (t (f \\<triangleright> n))))", "from t"], ["proof (chain)\npicking this:\n  ?f \\<in> U \\<Longrightarrow>\n  t (?f \\<triangleright> ?n) \\<down>=\n  the (c (the (s (?f \\<triangleright> ?n))))", "have \"the (t (f \\<triangleright> n)) = the (c (the (s (f \\<triangleright> n))))\""], ["proof (prove)\nusing this:\n  ?f \\<in> U \\<Longrightarrow>\n  t (?f \\<triangleright> ?n) \\<down>=\n  the (c (the (s (?f \\<triangleright> ?n))))\n\ngoal (1 subgoal):\n 1. the (t (f \\<triangleright> n)) =\n    the (c (the (s (f \\<triangleright> n))))", "by (simp add: that)"], ["proof (state)\nthis:\n  the (t (f \\<triangleright> n)) = the (c (the (s (f \\<triangleright> n))))\n\ngoal (1 subgoal):\n 1. extra U f n (\\<chi> (the (t (f \\<triangleright> n))))", "then"], ["proof (chain)\npicking this:\n  the (t (f \\<triangleright> n)) = the (c (the (s (f \\<triangleright> n))))", "have \"\\<chi> (the (t (f \\<triangleright> n))) = \\<psi> (the (s (f \\<triangleright> n)))\""], ["proof (prove)\nusing this:\n  the (t (f \\<triangleright> n)) = the (c (the (s (f \\<triangleright> n))))\n\ngoal (1 subgoal):\n 1. \\<chi> (the (t (f \\<triangleright> n))) =\n    \\<psi> (the (s (f \\<triangleright> n)))", "using c(2)"], ["proof (prove)\nusing this:\n  the (t (f \\<triangleright> n)) = the (c (the (s (f \\<triangleright> n))))\n  \\<forall>i. \\<psi> i = \\<chi> (the (c i))\n\ngoal (1 subgoal):\n 1. \\<chi> (the (t (f \\<triangleright> n))) =\n    \\<psi> (the (s (f \\<triangleright> n)))", "by simp"], ["proof (state)\nthis:\n  \\<chi> (the (t (f \\<triangleright> n))) =\n  \\<psi> (the (s (f \\<triangleright> n)))\n\ngoal (1 subgoal):\n 1. extra U f n (\\<chi> (the (t (f \\<triangleright> n))))", "with extra"], ["proof (chain)\npicking this:\n  \\<forall>f\\<in>U.\n     \\<forall>n. extra U f n (\\<psi> (the (s (f \\<triangleright> n))))\n  \\<chi> (the (t (f \\<triangleright> n))) =\n  \\<psi> (the (s (f \\<triangleright> n)))", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>f\\<in>U.\n     \\<forall>n. extra U f n (\\<psi> (the (s (f \\<triangleright> n))))\n  \\<chi> (the (t (f \\<triangleright> n))) =\n  \\<psi> (the (s (f \\<triangleright> n)))\n\ngoal (1 subgoal):\n 1. extra U f n (\\<chi> (the (t (f \\<triangleright> n))))", "using that"], ["proof (prove)\nusing this:\n  \\<forall>f\\<in>U.\n     \\<forall>n. extra U f n (\\<psi> (the (s (f \\<triangleright> n))))\n  \\<chi> (the (t (f \\<triangleright> n))) =\n  \\<psi> (the (s (f \\<triangleright> n)))\n  f \\<in> U\n\ngoal (1 subgoal):\n 1. extra U f n (\\<chi> (the (t (f \\<triangleright> n))))", "by simp"], ["proof (state)\nthis:\n  extra U f n (\\<chi> (the (t (f \\<triangleright> n))))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?f \\<in> U \\<Longrightarrow>\n  extra U ?f ?n (\\<chi> (the (t (?f \\<triangleright> ?n))))\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       learn_bc \\<chi> U t \\<and>\n       (\\<forall>f\\<in>U.\n           \\<forall>n.\n              extra U f n (\\<chi> (the (t (f \\<triangleright> n)))))", "ultimately"], ["proof (chain)\npicking this:\n  learn_bc \\<chi> U t\n  ?f \\<in> U \\<Longrightarrow>\n  extra U ?f ?n (\\<chi> (the (t (?f \\<triangleright> ?n))))", "show ?thesis"], ["proof (prove)\nusing this:\n  learn_bc \\<chi> U t\n  ?f \\<in> U \\<Longrightarrow>\n  extra U ?f ?n (\\<chi> (the (t (?f \\<triangleright> ?n))))\n\ngoal (1 subgoal):\n 1. \\<exists>t.\n       learn_bc \\<chi> U t \\<and>\n       (\\<forall>f\\<in>U.\n           \\<forall>n.\n              extra U f n (\\<chi> (the (t (f \\<triangleright> n)))))", "by auto"], ["proof (state)\nthis:\n  \\<exists>t.\n     learn_bc \\<chi> U t \\<and>\n     (\\<forall>f\\<in>U.\n         \\<forall>n. extra U f n (\\<chi> (the (t (f \\<triangleright> n)))))\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary learn_bc_wrt_goedel:\n  assumes \"goedel_numbering \\<chi>\" and \"learn_bc \\<psi> U s\"\n  shows \"\\<exists>t. learn_bc \\<chi> U t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t. learn_bc \\<chi> U t", "using assms learn_bc_extra_wrt_goedel[where ?extra=\"\\<lambda>_ _ _ _. True\"]"], ["proof (prove)\nusing this:\n  goedel_numbering \\<chi>\n  learn_bc \\<psi> U s\n  \\<lbrakk>goedel_numbering ?\\<chi>; learn_bc ?\\<psi> ?U ?s;\n   \\<And>f n. f \\<in> ?U \\<Longrightarrow> True\\<rbrakk>\n  \\<Longrightarrow> \\<exists>t.\n                       learn_bc ?\\<chi> ?U t \\<and>\n                       (\\<forall>f\\<in>?U. \\<forall>n. True)\n\ngoal (1 subgoal):\n 1. \\<exists>t. learn_bc \\<chi> U t", "by simp"], ["", "corollary BC_wrt_phi_eq_BC: \"BC_wrt \\<phi> = BC\""], ["proof (prove)\ngoal (1 subgoal):\n 1. BC_wrt \\<phi> = BC", "using learn_bc_wrt_goedel goedel_numbering_phi BC_def BC_wrt_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>goedel_numbering ?\\<chi>; learn_bc ?\\<psi> ?U ?s\\<rbrakk>\n  \\<Longrightarrow> \\<exists>t. learn_bc ?\\<chi> ?U t\n  goedel_numbering \\<phi>\n  BC \\<equiv> {U. \\<exists>\\<psi> s. learn_bc \\<psi> U s}\n  BC_wrt ?\\<psi> \\<equiv> {U. \\<exists>s. learn_bc ?\\<psi> U s}\n\ngoal (1 subgoal):\n 1. BC_wrt \\<phi> = BC", "by blast"], ["", "subsection \\<open>CONS: Learning in the limit with consistent hypotheses\\<close>"], ["", "text \\<open>A hypothesis is \\emph{consistent} if it matches all values in the\nprefix given to the strategy. Consistent learning in the limit requires the\nstrategy to output only consistent hypotheses for prefixes from the class.\\<close>"], ["", "definition learn_cons :: \"partial2 \\<Rightarrow> (partial1 set) \\<Rightarrow> partial1 \\<Rightarrow> bool\" where\n  \"learn_cons \\<psi> U s \\<equiv>\n     learn_lim \\<psi> U s \\<and>\n     (\\<forall>f\\<in>U. \\<forall>n. \\<forall>k\\<le>n. \\<psi> (the (s (f \\<triangleright> n))) k = f k)\""], ["", "definition CONS_wrt :: \"partial2 \\<Rightarrow> partial1 set set\" where\n  \"CONS_wrt \\<psi> \\<equiv> {U. \\<exists>s. learn_cons \\<psi> U s}\""], ["", "definition CONS :: \"partial1 set set\" where\n  \"CONS \\<equiv> {U. \\<exists>\\<psi> s. learn_cons \\<psi> U s}\""], ["", "lemma CONS_subseteq_Lim: \"CONS \\<subseteq> LIM\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CONS \\<subseteq> LIM", "using CONS_def Lim_def learn_cons_def"], ["proof (prove)\nusing this:\n  CONS \\<equiv> {U. \\<exists>\\<psi> s. learn_cons \\<psi> U s}\n  LIM \\<equiv> {U. \\<exists>\\<psi> s. learn_lim \\<psi> U s}\n  learn_cons ?\\<psi> ?U ?s \\<equiv>\n  learn_lim ?\\<psi> ?U ?s \\<and>\n  (\\<forall>f\\<in>?U.\n      \\<forall>n k.\n         k \\<le> n \\<longrightarrow>\n         ?\\<psi> (the (?s (f \\<triangleright> n))) k = f k)\n\ngoal (1 subgoal):\n 1. CONS \\<subseteq> LIM", "by blast"], ["", "lemma learn_consI:\n  assumes \"environment \\<psi> U s\"\n    and \"\\<And>f. f \\<in> U \\<Longrightarrow> \\<exists>i. \\<psi> i = f \\<and> (\\<forall>\\<^sup>\\<infinity>n. s (f \\<triangleright> n) \\<down>= i)\"\n    and \"\\<And>f n. f \\<in> U \\<Longrightarrow> \\<forall>k\\<le>n. \\<psi> (the (s (f \\<triangleright> n))) k = f k\"\n  shows \"learn_cons \\<psi> U s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. learn_cons \\<psi> U s", "using assms learn_lim_def learn_cons_def"], ["proof (prove)\nusing this:\n  environment \\<psi> U s\n  ?f \\<in> U \\<Longrightarrow>\n  \\<exists>i.\n     \\<psi> i = ?f \\<and>\n     (\\<exists>n\\<^sub>0.\n         \\<forall>n\\<ge>n\\<^sub>0. s (?f \\<triangleright> n) \\<down>= i)\n  ?f \\<in> U \\<Longrightarrow>\n  \\<forall>k\\<le>?n. \\<psi> (the (s (?f \\<triangleright> ?n))) k = ?f k\n  learn_lim ?\\<psi> ?U ?s \\<equiv>\n  environment ?\\<psi> ?U ?s \\<and>\n  (\\<forall>f\\<in>?U.\n      \\<exists>i.\n         ?\\<psi> i = f \\<and>\n         (\\<exists>n\\<^sub>0.\n             \\<forall>n\\<ge>n\\<^sub>0.\n                ?s (f \\<triangleright> n) \\<down>= i))\n  learn_cons ?\\<psi> ?U ?s \\<equiv>\n  learn_lim ?\\<psi> ?U ?s \\<and>\n  (\\<forall>f\\<in>?U.\n      \\<forall>n k.\n         k \\<le> n \\<longrightarrow>\n         ?\\<psi> (the (?s (f \\<triangleright> n))) k = f k)\n\ngoal (1 subgoal):\n 1. learn_cons \\<psi> U s", "by simp"], ["", "text \\<open>If a consistent strategy converges, it automatically converges to\na correct hypothesis. Thus we can remove @{term \"\\<psi> i = f\"} from the second\nassumption in the previous lemma.\\<close>"], ["", "lemma learn_consI2:\n  assumes \"environment \\<psi> U s\"\n    and \"\\<And>f. f \\<in> U \\<Longrightarrow> \\<exists>i. \\<forall>\\<^sup>\\<infinity>n. s (f \\<triangleright> n) \\<down>= i\"\n    and \"\\<And>f n. f \\<in> U \\<Longrightarrow> \\<forall>k\\<le>n. \\<psi> (the (s (f \\<triangleright> n))) k = f k\"\n  shows \"learn_cons \\<psi> U s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. learn_cons \\<psi> U s", "proof (rule learn_consI)"], ["proof (state)\ngoal (3 subgoals):\n 1. environment \\<psi> U s\n 2. \\<And>f.\n       f \\<in> U \\<Longrightarrow>\n       \\<exists>i.\n          \\<psi> i = f \\<and>\n          (\\<exists>n\\<^sub>0.\n              \\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i)\n 3. \\<And>f n.\n       f \\<in> U \\<Longrightarrow>\n       \\<forall>k\\<le>n. \\<psi> (the (s (f \\<triangleright> n))) k = f k", "show \"environment \\<psi> U s\"\n    and cons: \"\\<And>f n. f \\<in> U \\<Longrightarrow> \\<forall>k\\<le>n. \\<psi> (the (s (f \\<triangleright> n))) k = f k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. environment \\<psi> U s &&&\n    (\\<And>f n.\n        f \\<in> U \\<Longrightarrow>\n        \\<forall>k\\<le>n. \\<psi> (the (s (f \\<triangleright> n))) k = f k)", "using assms"], ["proof (prove)\nusing this:\n  environment \\<psi> U s\n  ?f \\<in> U \\<Longrightarrow>\n  \\<exists>i n\\<^sub>0.\n     \\<forall>n\\<ge>n\\<^sub>0. s (?f \\<triangleright> n) \\<down>= i\n  ?f \\<in> U \\<Longrightarrow>\n  \\<forall>k\\<le>?n. \\<psi> (the (s (?f \\<triangleright> ?n))) k = ?f k\n\ngoal (1 subgoal):\n 1. environment \\<psi> U s &&&\n    (\\<And>f n.\n        f \\<in> U \\<Longrightarrow>\n        \\<forall>k\\<le>n. \\<psi> (the (s (f \\<triangleright> n))) k = f k)", "by simp_all"], ["proof (state)\nthis:\n  environment \\<psi> U s\n  ?f \\<in> U \\<Longrightarrow>\n  \\<forall>k\\<le>?n. \\<psi> (the (s (?f \\<triangleright> ?n))) k = ?f k\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> U \\<Longrightarrow>\n       \\<exists>i.\n          \\<psi> i = f \\<and>\n          (\\<exists>n\\<^sub>0.\n              \\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i)", "show \"\\<exists>i. \\<psi> i = f \\<and> (\\<forall>\\<^sup>\\<infinity>n. s (f \\<triangleright> n) \\<down>= i)\" if \"f \\<in> U\" for f"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i.\n       \\<psi> i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i.\n       \\<psi> i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i)", "from that assms(2)"], ["proof (chain)\npicking this:\n  f \\<in> U\n  ?f \\<in> U \\<Longrightarrow>\n  \\<exists>i n\\<^sub>0.\n     \\<forall>n\\<ge>n\\<^sub>0. s (?f \\<triangleright> n) \\<down>= i", "obtain i n\\<^sub>0 where i_n0: \"\\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i\""], ["proof (prove)\nusing this:\n  f \\<in> U\n  ?f \\<in> U \\<Longrightarrow>\n  \\<exists>i n\\<^sub>0.\n     \\<forall>n\\<ge>n\\<^sub>0. s (?f \\<triangleright> n) \\<down>= i\n\ngoal (1 subgoal):\n 1. (\\<And>n\\<^sub>0 i.\n        \\<forall>n\\<ge>n\\<^sub>0.\n           s (f \\<triangleright> n) \\<down>= i \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       \\<psi> i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i)", "have \"\\<psi> i x = f x\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<psi> i x = f x", "proof (cases \"x \\<le> n\\<^sub>0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<le> n\\<^sub>0 \\<Longrightarrow> \\<psi> i x = f x\n 2. \\<not> x \\<le> n\\<^sub>0 \\<Longrightarrow> \\<psi> i x = f x", "case True"], ["proof (state)\nthis:\n  x \\<le> n\\<^sub>0\n\ngoal (2 subgoals):\n 1. x \\<le> n\\<^sub>0 \\<Longrightarrow> \\<psi> i x = f x\n 2. \\<not> x \\<le> n\\<^sub>0 \\<Longrightarrow> \\<psi> i x = f x", "then"], ["proof (chain)\npicking this:\n  x \\<le> n\\<^sub>0", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<le> n\\<^sub>0\n\ngoal (1 subgoal):\n 1. \\<psi> i x = f x", "using i_n0 cons that"], ["proof (prove)\nusing this:\n  x \\<le> n\\<^sub>0\n  \\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i\n  ?f \\<in> U \\<Longrightarrow>\n  \\<forall>k\\<le>?n. \\<psi> (the (s (?f \\<triangleright> ?n))) k = ?f k\n  f \\<in> U\n\ngoal (1 subgoal):\n 1. \\<psi> i x = f x", "by fastforce"], ["proof (state)\nthis:\n  \\<psi> i x = f x\n\ngoal (1 subgoal):\n 1. \\<not> x \\<le> n\\<^sub>0 \\<Longrightarrow> \\<psi> i x = f x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> x \\<le> n\\<^sub>0 \\<Longrightarrow> \\<psi> i x = f x", "case False"], ["proof (state)\nthis:\n  \\<not> x \\<le> n\\<^sub>0\n\ngoal (1 subgoal):\n 1. \\<not> x \\<le> n\\<^sub>0 \\<Longrightarrow> \\<psi> i x = f x", "moreover"], ["proof (state)\nthis:\n  \\<not> x \\<le> n\\<^sub>0\n\ngoal (1 subgoal):\n 1. \\<not> x \\<le> n\\<^sub>0 \\<Longrightarrow> \\<psi> i x = f x", "have \"\\<forall>k\\<le>x. \\<psi> (the (s (f \\<triangleright> x))) k = f k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>k\\<le>x. \\<psi> (the (s (f \\<triangleright> x))) k = f k", "using cons that"], ["proof (prove)\nusing this:\n  ?f \\<in> U \\<Longrightarrow>\n  \\<forall>k\\<le>?n. \\<psi> (the (s (?f \\<triangleright> ?n))) k = ?f k\n  f \\<in> U\n\ngoal (1 subgoal):\n 1. \\<forall>k\\<le>x. \\<psi> (the (s (f \\<triangleright> x))) k = f k", "by simp"], ["proof (state)\nthis:\n  \\<forall>k\\<le>x. \\<psi> (the (s (f \\<triangleright> x))) k = f k\n\ngoal (1 subgoal):\n 1. \\<not> x \\<le> n\\<^sub>0 \\<Longrightarrow> \\<psi> i x = f x", "ultimately"], ["proof (chain)\npicking this:\n  \\<not> x \\<le> n\\<^sub>0\n  \\<forall>k\\<le>x. \\<psi> (the (s (f \\<triangleright> x))) k = f k", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> x \\<le> n\\<^sub>0\n  \\<forall>k\\<le>x. \\<psi> (the (s (f \\<triangleright> x))) k = f k\n\ngoal (1 subgoal):\n 1. \\<psi> i x = f x", "using i_n0"], ["proof (prove)\nusing this:\n  \\<not> x \\<le> n\\<^sub>0\n  \\<forall>k\\<le>x. \\<psi> (the (s (f \\<triangleright> x))) k = f k\n  \\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i\n\ngoal (1 subgoal):\n 1. \\<psi> i x = f x", "by simp"], ["proof (state)\nthis:\n  \\<psi> i x = f x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<psi> i ?x = f ?x\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       \\<psi> i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i)", "with i_n0"], ["proof (chain)\npicking this:\n  \\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i\n  \\<psi> i ?x = f ?x", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i\n  \\<psi> i ?x = f ?x\n\ngoal (1 subgoal):\n 1. \\<exists>i.\n       \\<psi> i = f \\<and>\n       (\\<exists>n\\<^sub>0.\n           \\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i)", "by auto"], ["proof (state)\nthis:\n  \\<exists>i.\n     \\<psi> i = f \\<and>\n     (\\<exists>n\\<^sub>0.\n         \\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?f \\<in> U \\<Longrightarrow>\n  \\<exists>i.\n     \\<psi> i = ?f \\<and>\n     (\\<exists>n\\<^sub>0.\n         \\<forall>n\\<ge>n\\<^sub>0. s (?f \\<triangleright> n) \\<down>= i)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma learn_consE:\n  assumes \"learn_cons \\<psi> U s\"\n  shows \"environment \\<psi> U s\"\n    and \"\\<And>f. f \\<in> U \\<Longrightarrow> \\<exists>i n\\<^sub>0. \\<psi> i = f \\<and> (\\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i)\"\n    and \"\\<And>f n. f \\<in> U \\<Longrightarrow> \\<forall>k\\<le>n. \\<psi> (the (s (f \\<triangleright> n))) k = f k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. environment \\<psi> U s &&&\n    (\\<And>f.\n        f \\<in> U \\<Longrightarrow>\n        \\<exists>i n\\<^sub>0.\n           \\<psi> i = f \\<and>\n           (\\<forall>n\\<ge>n\\<^sub>0.\n               s (f \\<triangleright> n) \\<down>= i)) &&&\n    (\\<And>f n.\n        f \\<in> U \\<Longrightarrow>\n        \\<forall>k\\<le>n. \\<psi> (the (s (f \\<triangleright> n))) k = f k)", "using assms learn_cons_def learn_lim_def"], ["proof (prove)\nusing this:\n  learn_cons \\<psi> U s\n  learn_cons ?\\<psi> ?U ?s \\<equiv>\n  learn_lim ?\\<psi> ?U ?s \\<and>\n  (\\<forall>f\\<in>?U.\n      \\<forall>n k.\n         k \\<le> n \\<longrightarrow>\n         ?\\<psi> (the (?s (f \\<triangleright> n))) k = f k)\n  learn_lim ?\\<psi> ?U ?s \\<equiv>\n  environment ?\\<psi> ?U ?s \\<and>\n  (\\<forall>f\\<in>?U.\n      \\<exists>i.\n         ?\\<psi> i = f \\<and>\n         (\\<exists>n\\<^sub>0.\n             \\<forall>n\\<ge>n\\<^sub>0.\n                ?s (f \\<triangleright> n) \\<down>= i))\n\ngoal (1 subgoal):\n 1. environment \\<psi> U s &&&\n    (\\<And>f.\n        f \\<in> U \\<Longrightarrow>\n        \\<exists>i n\\<^sub>0.\n           \\<psi> i = f \\<and>\n           (\\<forall>n\\<ge>n\\<^sub>0.\n               s (f \\<triangleright> n) \\<down>= i)) &&&\n    (\\<And>f n.\n        f \\<in> U \\<Longrightarrow>\n        \\<forall>k\\<le>n. \\<psi> (the (s (f \\<triangleright> n))) k = f k)", "by auto"], ["", "lemma learn_cons_wrt_goedel:\n  assumes \"goedel_numbering \\<chi>\" and \"learn_cons \\<psi> U s\"\n  shows \"\\<exists>t. learn_cons \\<chi> U t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t. learn_cons \\<chi> U t", "using learn_cons_def assms\n    learn_lim_extra_wrt_goedel[where ?extra=\"\\<lambda>U f n h. \\<forall>k\\<le>n. h k = f k\"]"], ["proof (prove)\nusing this:\n  learn_cons ?\\<psi> ?U ?s \\<equiv>\n  learn_lim ?\\<psi> ?U ?s \\<and>\n  (\\<forall>f\\<in>?U.\n      \\<forall>n k.\n         k \\<le> n \\<longrightarrow>\n         ?\\<psi> (the (?s (f \\<triangleright> n))) k = f k)\n  goedel_numbering \\<chi>\n  learn_cons \\<psi> U s\n  \\<lbrakk>goedel_numbering ?\\<chi>; learn_lim ?\\<psi> ?U ?s;\n   \\<And>f n.\n      f \\<in> ?U \\<Longrightarrow>\n      \\<forall>k\\<le>n.\n         ?\\<psi> (the (?s (f \\<triangleright> n))) k = f k\\<rbrakk>\n  \\<Longrightarrow> \\<exists>t.\n                       learn_lim ?\\<chi> ?U t \\<and>\n                       (\\<forall>f\\<in>?U.\n                           \\<forall>n k.\n                              k \\<le> n \\<longrightarrow>\n                              ?\\<chi> (the (t (f \\<triangleright> n))) k =\n                              f k)\n\ngoal (1 subgoal):\n 1. \\<exists>t. learn_cons \\<chi> U t", "by auto"], ["", "lemma CONS_wrt_phi_eq_CONS: \"CONS_wrt \\<phi> = CONS\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CONS_wrt \\<phi> = CONS", "using CONS_wrt_def CONS_def learn_cons_wrt_goedel goedel_numbering_phi"], ["proof (prove)\nusing this:\n  CONS_wrt ?\\<psi> \\<equiv> {U. \\<exists>s. learn_cons ?\\<psi> U s}\n  CONS \\<equiv> {U. \\<exists>\\<psi> s. learn_cons \\<psi> U s}\n  \\<lbrakk>goedel_numbering ?\\<chi>; learn_cons ?\\<psi> ?U ?s\\<rbrakk>\n  \\<Longrightarrow> \\<exists>t. learn_cons ?\\<chi> ?U t\n  goedel_numbering \\<phi>\n\ngoal (1 subgoal):\n 1. CONS_wrt \\<phi> = CONS", "by blast"], ["", "lemma learn_cons_closed_subseteq:\n  assumes \"learn_cons \\<psi> U s\" and \"V \\<subseteq> U\"\n  shows \"learn_cons \\<psi> V s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. learn_cons \\<psi> V s", "using assms learn_cons_def learn_lim_closed_subseteq"], ["proof (prove)\nusing this:\n  learn_cons \\<psi> U s\n  V \\<subseteq> U\n  learn_cons ?\\<psi> ?U ?s \\<equiv>\n  learn_lim ?\\<psi> ?U ?s \\<and>\n  (\\<forall>f\\<in>?U.\n      \\<forall>n k.\n         k \\<le> n \\<longrightarrow>\n         ?\\<psi> (the (?s (f \\<triangleright> n))) k = f k)\n  \\<lbrakk>learn_lim ?\\<psi> ?U ?s; ?V \\<subseteq> ?U\\<rbrakk>\n  \\<Longrightarrow> learn_lim ?\\<psi> ?V ?s\n\ngoal (1 subgoal):\n 1. learn_cons \\<psi> V s", "by auto"], ["", "lemma CONS_closed_subseteq:\n  assumes \"U \\<in> CONS\" and \"V \\<subseteq> U\"\n  shows \"V \\<in> CONS\""], ["proof (prove)\ngoal (1 subgoal):\n 1. V \\<in> CONS", "using assms learn_cons_closed_subseteq"], ["proof (prove)\nusing this:\n  U \\<in> CONS\n  V \\<subseteq> U\n  \\<lbrakk>learn_cons ?\\<psi> ?U ?s; ?V \\<subseteq> ?U\\<rbrakk>\n  \\<Longrightarrow> learn_cons ?\\<psi> ?V ?s\n\ngoal (1 subgoal):\n 1. V \\<in> CONS", "by (smt CONS_def mem_Collect_eq)"], ["", "text \\<open>A consistent strategy cannot output the same hypothesis for two\ndifferent prefixes from the class to be learned.\\<close>"], ["", "lemma same_hyp_different_init_not_cons:\n  assumes \"f \\<in> U\"\n    and \"g \\<in> U\"\n    and \"f \\<triangleright> n \\<noteq> g \\<triangleright> n\"\n    and \"s (f \\<triangleright> n) = s (g \\<triangleright> n)\"\n  shows \"\\<not> learn_cons \\<phi> U s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> learn_cons \\<phi> U s", "unfolding learn_cons_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (learn_lim \\<phi> U s \\<and>\n            (\\<forall>f\\<in>U.\n                \\<forall>n k.\n                   k \\<le> n \\<longrightarrow>\n                   \\<phi> (the (s (f \\<triangleright> n))) k = f k))", "by (auto, metis assms init_eqI)"], ["", "subsection \\<open>TOTAL: Learning in the limit with total hypotheses\\<close>"], ["", "text \\<open>Total learning in the limit requires the strategy to hypothesize\nonly total functions for prefixes from the class.\\<close>"], ["", "definition learn_total :: \"partial2 \\<Rightarrow> (partial1 set) \\<Rightarrow> partial1 \\<Rightarrow> bool\" where\n  \"learn_total \\<psi> U s \\<equiv>\n     learn_lim \\<psi> U s \\<and>\n     (\\<forall>f\\<in>U. \\<forall>n. \\<psi> (the (s (f \\<triangleright> n))) \\<in> \\<R>)\""], ["", "definition TOTAL_wrt :: \"partial2 \\<Rightarrow> partial1 set set\" where\n  \"TOTAL_wrt \\<psi> \\<equiv> {U. \\<exists>s. learn_total \\<psi> U s}\""], ["", "definition TOTAL :: \"partial1 set set\" where\n  \"TOTAL \\<equiv> {U. \\<exists>\\<psi> s. learn_total \\<psi> U s}\""], ["", "lemma TOTAL_subseteq_LIM: \"TOTAL \\<subseteq> LIM\""], ["proof (prove)\ngoal (1 subgoal):\n 1. TOTAL \\<subseteq> LIM", "unfolding TOTAL_def Lim_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {U. \\<exists>\\<psi> s. learn_total \\<psi> U s}\n    \\<subseteq> {U. \\<exists>\\<psi> s. learn_lim \\<psi> U s}", "using learn_total_def"], ["proof (prove)\nusing this:\n  learn_total ?\\<psi> ?U ?s \\<equiv>\n  learn_lim ?\\<psi> ?U ?s \\<and>\n  (\\<forall>f\\<in>?U.\n      \\<forall>n. ?\\<psi> (the (?s (f \\<triangleright> n))) \\<in> \\<R>)\n\ngoal (1 subgoal):\n 1. {U. \\<exists>\\<psi> s. learn_total \\<psi> U s}\n    \\<subseteq> {U. \\<exists>\\<psi> s. learn_lim \\<psi> U s}", "by auto"], ["", "lemma learn_totalI:\n  assumes \"environment \\<psi> U s\"\n    and \"\\<And>f. f \\<in> U \\<Longrightarrow> \\<exists>i. \\<psi> i = f \\<and> (\\<forall>\\<^sup>\\<infinity>n. s (f \\<triangleright> n) \\<down>= i)\"\n    and \"\\<And>f n. f \\<in> U \\<Longrightarrow> \\<psi> (the (s (f \\<triangleright> n))) \\<in> \\<R>\"\n  shows \"learn_total \\<psi> U s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. learn_total \\<psi> U s", "using assms learn_lim_def learn_total_def"], ["proof (prove)\nusing this:\n  environment \\<psi> U s\n  ?f \\<in> U \\<Longrightarrow>\n  \\<exists>i.\n     \\<psi> i = ?f \\<and>\n     (\\<exists>n\\<^sub>0.\n         \\<forall>n\\<ge>n\\<^sub>0. s (?f \\<triangleright> n) \\<down>= i)\n  ?f \\<in> U \\<Longrightarrow>\n  \\<psi> (the (s (?f \\<triangleright> ?n))) \\<in> \\<R>\n  learn_lim ?\\<psi> ?U ?s \\<equiv>\n  environment ?\\<psi> ?U ?s \\<and>\n  (\\<forall>f\\<in>?U.\n      \\<exists>i.\n         ?\\<psi> i = f \\<and>\n         (\\<exists>n\\<^sub>0.\n             \\<forall>n\\<ge>n\\<^sub>0.\n                ?s (f \\<triangleright> n) \\<down>= i))\n  learn_total ?\\<psi> ?U ?s \\<equiv>\n  learn_lim ?\\<psi> ?U ?s \\<and>\n  (\\<forall>f\\<in>?U.\n      \\<forall>n. ?\\<psi> (the (?s (f \\<triangleright> n))) \\<in> \\<R>)\n\ngoal (1 subgoal):\n 1. learn_total \\<psi> U s", "by auto"], ["", "lemma learn_totalE:\n  assumes \"learn_total \\<psi> U s\"\n  shows \"environment \\<psi> U s\"\n    and \"\\<And>f. f \\<in> U \\<Longrightarrow> \\<exists>i n\\<^sub>0. \\<psi> i = f \\<and> (\\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i)\"\n    and \"\\<And>f n. f \\<in> U \\<Longrightarrow> \\<psi> (the (s (f \\<triangleright> n))) \\<in> \\<R>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. environment \\<psi> U s &&&\n    (\\<And>f.\n        f \\<in> U \\<Longrightarrow>\n        \\<exists>i n\\<^sub>0.\n           \\<psi> i = f \\<and>\n           (\\<forall>n\\<ge>n\\<^sub>0.\n               s (f \\<triangleright> n) \\<down>= i)) &&&\n    (\\<And>f n.\n        f \\<in> U \\<Longrightarrow>\n        \\<psi> (the (s (f \\<triangleright> n))) \\<in> \\<R>)", "using assms learn_lim_def learn_total_def"], ["proof (prove)\nusing this:\n  learn_total \\<psi> U s\n  learn_lim ?\\<psi> ?U ?s \\<equiv>\n  environment ?\\<psi> ?U ?s \\<and>\n  (\\<forall>f\\<in>?U.\n      \\<exists>i.\n         ?\\<psi> i = f \\<and>\n         (\\<exists>n\\<^sub>0.\n             \\<forall>n\\<ge>n\\<^sub>0.\n                ?s (f \\<triangleright> n) \\<down>= i))\n  learn_total ?\\<psi> ?U ?s \\<equiv>\n  learn_lim ?\\<psi> ?U ?s \\<and>\n  (\\<forall>f\\<in>?U.\n      \\<forall>n. ?\\<psi> (the (?s (f \\<triangleright> n))) \\<in> \\<R>)\n\ngoal (1 subgoal):\n 1. environment \\<psi> U s &&&\n    (\\<And>f.\n        f \\<in> U \\<Longrightarrow>\n        \\<exists>i n\\<^sub>0.\n           \\<psi> i = f \\<and>\n           (\\<forall>n\\<ge>n\\<^sub>0.\n               s (f \\<triangleright> n) \\<down>= i)) &&&\n    (\\<And>f n.\n        f \\<in> U \\<Longrightarrow>\n        \\<psi> (the (s (f \\<triangleright> n))) \\<in> \\<R>)", "by auto"], ["", "lemma learn_total_wrt_goedel:\n  assumes \"goedel_numbering \\<chi>\" and \"learn_total \\<psi> U s\"\n  shows \"\\<exists>t. learn_total \\<chi> U t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t. learn_total \\<chi> U t", "using learn_total_def assms learn_lim_extra_wrt_goedel[where ?extra=\"\\<lambda>U f n h. h \\<in> \\<R>\"]"], ["proof (prove)\nusing this:\n  learn_total ?\\<psi> ?U ?s \\<equiv>\n  learn_lim ?\\<psi> ?U ?s \\<and>\n  (\\<forall>f\\<in>?U.\n      \\<forall>n. ?\\<psi> (the (?s (f \\<triangleright> n))) \\<in> \\<R>)\n  goedel_numbering \\<chi>\n  learn_total \\<psi> U s\n  \\<lbrakk>goedel_numbering ?\\<chi>; learn_lim ?\\<psi> ?U ?s;\n   \\<And>f n.\n      f \\<in> ?U \\<Longrightarrow>\n      ?\\<psi> (the (?s (f \\<triangleright> n))) \\<in> \\<R>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>t.\n                       learn_lim ?\\<chi> ?U t \\<and>\n                       (\\<forall>f\\<in>?U.\n                           \\<forall>n.\n                              ?\\<chi> (the (t (f \\<triangleright> n)))\n                              \\<in> \\<R>)\n\ngoal (1 subgoal):\n 1. \\<exists>t. learn_total \\<chi> U t", "by auto"], ["", "lemma TOTAL_wrt_phi_eq_TOTAL: \"TOTAL_wrt \\<phi> = TOTAL\""], ["proof (prove)\ngoal (1 subgoal):\n 1. TOTAL_wrt \\<phi> = TOTAL", "using TOTAL_wrt_def TOTAL_def learn_total_wrt_goedel goedel_numbering_phi"], ["proof (prove)\nusing this:\n  TOTAL_wrt ?\\<psi> \\<equiv> {U. \\<exists>s. learn_total ?\\<psi> U s}\n  TOTAL \\<equiv> {U. \\<exists>\\<psi> s. learn_total \\<psi> U s}\n  \\<lbrakk>goedel_numbering ?\\<chi>; learn_total ?\\<psi> ?U ?s\\<rbrakk>\n  \\<Longrightarrow> \\<exists>t. learn_total ?\\<chi> ?U t\n  goedel_numbering \\<phi>\n\ngoal (1 subgoal):\n 1. TOTAL_wrt \\<phi> = TOTAL", "by blast"], ["", "lemma learn_total_closed_subseteq:\n  assumes \"learn_total \\<psi> U s\" and \"V \\<subseteq> U\"\n  shows \"learn_total \\<psi> V s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. learn_total \\<psi> V s", "using assms learn_total_def learn_lim_closed_subseteq"], ["proof (prove)\nusing this:\n  learn_total \\<psi> U s\n  V \\<subseteq> U\n  learn_total ?\\<psi> ?U ?s \\<equiv>\n  learn_lim ?\\<psi> ?U ?s \\<and>\n  (\\<forall>f\\<in>?U.\n      \\<forall>n. ?\\<psi> (the (?s (f \\<triangleright> n))) \\<in> \\<R>)\n  \\<lbrakk>learn_lim ?\\<psi> ?U ?s; ?V \\<subseteq> ?U\\<rbrakk>\n  \\<Longrightarrow> learn_lim ?\\<psi> ?V ?s\n\ngoal (1 subgoal):\n 1. learn_total \\<psi> V s", "by auto"], ["", "lemma TOTAL_closed_subseteq:\n  assumes \"U \\<in> TOTAL\" and \"V \\<subseteq> U\"\n  shows \"V \\<in> TOTAL\""], ["proof (prove)\ngoal (1 subgoal):\n 1. V \\<in> TOTAL", "using assms learn_total_closed_subseteq"], ["proof (prove)\nusing this:\n  U \\<in> TOTAL\n  V \\<subseteq> U\n  \\<lbrakk>learn_total ?\\<psi> ?U ?s; ?V \\<subseteq> ?U\\<rbrakk>\n  \\<Longrightarrow> learn_total ?\\<psi> ?V ?s\n\ngoal (1 subgoal):\n 1. V \\<in> TOTAL", "by (smt TOTAL_def mem_Collect_eq)"], ["", "subsection \\<open>CP: Learning in the limit with class-preserving hypotheses\\<close>"], ["", "text \\<open>Class-preserving learning in the limit requires all hypotheses\nfor prefixes from the class to be functions from the class.\\<close>"], ["", "definition learn_cp :: \"partial2 \\<Rightarrow> (partial1 set) \\<Rightarrow> partial1 \\<Rightarrow> bool\" where\n  \"learn_cp \\<psi> U s \\<equiv>\n     learn_lim \\<psi> U s \\<and>\n     (\\<forall>f\\<in>U. \\<forall>n. \\<psi> (the (s (f \\<triangleright> n))) \\<in> U)\""], ["", "definition CP_wrt :: \"partial2 \\<Rightarrow> partial1 set set\" where\n  \"CP_wrt \\<psi> \\<equiv> {U. \\<exists>s. learn_cp \\<psi> U s}\""], ["", "definition CP :: \"partial1 set set\" where\n  \"CP \\<equiv> {U. \\<exists>\\<psi> s. learn_cp \\<psi> U s}\""], ["", "lemma learn_cp_wrt_goedel:\n  assumes \"goedel_numbering \\<chi>\" and \"learn_cp \\<psi> U s\"\n  shows \"\\<exists>t. learn_cp \\<chi> U t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t. learn_cp \\<chi> U t", "using learn_cp_def assms learn_lim_extra_wrt_goedel[where ?extra=\"\\<lambda>U f n h. h \\<in> U\"]"], ["proof (prove)\nusing this:\n  learn_cp ?\\<psi> ?U ?s \\<equiv>\n  learn_lim ?\\<psi> ?U ?s \\<and>\n  (\\<forall>f\\<in>?U.\n      \\<forall>n. ?\\<psi> (the (?s (f \\<triangleright> n))) \\<in> ?U)\n  goedel_numbering \\<chi>\n  learn_cp \\<psi> U s\n  \\<lbrakk>goedel_numbering ?\\<chi>; learn_lim ?\\<psi> ?U ?s;\n   \\<And>f n.\n      f \\<in> ?U \\<Longrightarrow>\n      ?\\<psi> (the (?s (f \\<triangleright> n))) \\<in> ?U\\<rbrakk>\n  \\<Longrightarrow> \\<exists>t.\n                       learn_lim ?\\<chi> ?U t \\<and>\n                       (\\<forall>f\\<in>?U.\n                           \\<forall>n.\n                              ?\\<chi> (the (t (f \\<triangleright> n)))\n                              \\<in> ?U)\n\ngoal (1 subgoal):\n 1. \\<exists>t. learn_cp \\<chi> U t", "by auto"], ["", "corollary CP_wrt_phi: \"CP = CP_wrt \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CP = CP_wrt \\<phi>", "using learn_cp_wrt_goedel[OF goedel_numbering_phi]"], ["proof (prove)\nusing this:\n  learn_cp ?\\<psi> ?U ?s \\<Longrightarrow> \\<exists>t. learn_cp \\<phi> ?U t\n\ngoal (1 subgoal):\n 1. CP = CP_wrt \\<phi>", "by (smt CP_def CP_wrt_def Collect_cong)"], ["", "lemma learn_cpI:\n  assumes \"environment \\<psi> U s\"\n    and \"\\<And>f. f \\<in> U \\<Longrightarrow> \\<exists>i. \\<psi> i = f \\<and> (\\<forall>\\<^sup>\\<infinity>n. s (f \\<triangleright> n) \\<down>= i)\"\n    and \"\\<And>f n. f \\<in> U \\<Longrightarrow> \\<psi> (the (s (f \\<triangleright> n))) \\<in> U\"\n  shows \"learn_cp \\<psi> U s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. learn_cp \\<psi> U s", "using assms learn_cp_def learn_lim_def"], ["proof (prove)\nusing this:\n  environment \\<psi> U s\n  ?f \\<in> U \\<Longrightarrow>\n  \\<exists>i.\n     \\<psi> i = ?f \\<and>\n     (\\<exists>n\\<^sub>0.\n         \\<forall>n\\<ge>n\\<^sub>0. s (?f \\<triangleright> n) \\<down>= i)\n  ?f \\<in> U \\<Longrightarrow>\n  \\<psi> (the (s (?f \\<triangleright> ?n))) \\<in> U\n  learn_cp ?\\<psi> ?U ?s \\<equiv>\n  learn_lim ?\\<psi> ?U ?s \\<and>\n  (\\<forall>f\\<in>?U.\n      \\<forall>n. ?\\<psi> (the (?s (f \\<triangleright> n))) \\<in> ?U)\n  learn_lim ?\\<psi> ?U ?s \\<equiv>\n  environment ?\\<psi> ?U ?s \\<and>\n  (\\<forall>f\\<in>?U.\n      \\<exists>i.\n         ?\\<psi> i = f \\<and>\n         (\\<exists>n\\<^sub>0.\n             \\<forall>n\\<ge>n\\<^sub>0.\n                ?s (f \\<triangleright> n) \\<down>= i))\n\ngoal (1 subgoal):\n 1. learn_cp \\<psi> U s", "by auto"], ["", "lemma learn_cpE:\n  assumes \"learn_cp \\<psi> U s\"\n  shows \"environment \\<psi> U s\"\n    and \"\\<And>f. f \\<in>  U \\<Longrightarrow> \\<exists>i n\\<^sub>0. \\<psi> i = f \\<and> (\\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= i)\"\n    and \"\\<And>f n. f \\<in> U \\<Longrightarrow> \\<psi> (the (s (f \\<triangleright> n))) \\<in> U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. environment \\<psi> U s &&&\n    (\\<And>f.\n        f \\<in> U \\<Longrightarrow>\n        \\<exists>i n\\<^sub>0.\n           \\<psi> i = f \\<and>\n           (\\<forall>n\\<ge>n\\<^sub>0.\n               s (f \\<triangleright> n) \\<down>= i)) &&&\n    (\\<And>f n.\n        f \\<in> U \\<Longrightarrow>\n        \\<psi> (the (s (f \\<triangleright> n))) \\<in> U)", "using assms learn_lim_def learn_cp_def"], ["proof (prove)\nusing this:\n  learn_cp \\<psi> U s\n  learn_lim ?\\<psi> ?U ?s \\<equiv>\n  environment ?\\<psi> ?U ?s \\<and>\n  (\\<forall>f\\<in>?U.\n      \\<exists>i.\n         ?\\<psi> i = f \\<and>\n         (\\<exists>n\\<^sub>0.\n             \\<forall>n\\<ge>n\\<^sub>0.\n                ?s (f \\<triangleright> n) \\<down>= i))\n  learn_cp ?\\<psi> ?U ?s \\<equiv>\n  learn_lim ?\\<psi> ?U ?s \\<and>\n  (\\<forall>f\\<in>?U.\n      \\<forall>n. ?\\<psi> (the (?s (f \\<triangleright> n))) \\<in> ?U)\n\ngoal (1 subgoal):\n 1. environment \\<psi> U s &&&\n    (\\<And>f.\n        f \\<in> U \\<Longrightarrow>\n        \\<exists>i n\\<^sub>0.\n           \\<psi> i = f \\<and>\n           (\\<forall>n\\<ge>n\\<^sub>0.\n               s (f \\<triangleright> n) \\<down>= i)) &&&\n    (\\<And>f n.\n        f \\<in> U \\<Longrightarrow>\n        \\<psi> (the (s (f \\<triangleright> n))) \\<in> U)", "by auto"], ["", "text \\<open>Since classes contain only total functions, a CP strategy is also\na TOTAL strategy.\\<close>"], ["", "lemma learn_cp_imp_total: \"learn_cp \\<psi> U s \\<Longrightarrow> learn_total \\<psi> U s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. learn_cp \\<psi> U s \\<Longrightarrow> learn_total \\<psi> U s", "using learn_cp_def learn_total_def learn_lim_def"], ["proof (prove)\nusing this:\n  learn_cp ?\\<psi> ?U ?s \\<equiv>\n  learn_lim ?\\<psi> ?U ?s \\<and>\n  (\\<forall>f\\<in>?U.\n      \\<forall>n. ?\\<psi> (the (?s (f \\<triangleright> n))) \\<in> ?U)\n  learn_total ?\\<psi> ?U ?s \\<equiv>\n  learn_lim ?\\<psi> ?U ?s \\<and>\n  (\\<forall>f\\<in>?U.\n      \\<forall>n. ?\\<psi> (the (?s (f \\<triangleright> n))) \\<in> \\<R>)\n  learn_lim ?\\<psi> ?U ?s \\<equiv>\n  environment ?\\<psi> ?U ?s \\<and>\n  (\\<forall>f\\<in>?U.\n      \\<exists>i.\n         ?\\<psi> i = f \\<and>\n         (\\<exists>n\\<^sub>0.\n             \\<forall>n\\<ge>n\\<^sub>0.\n                ?s (f \\<triangleright> n) \\<down>= i))\n\ngoal (1 subgoal):\n 1. learn_cp \\<psi> U s \\<Longrightarrow> learn_total \\<psi> U s", "by auto"], ["", "lemma CP_subseteq_TOTAL: \"CP \\<subseteq> TOTAL\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CP \\<subseteq> TOTAL", "using learn_cp_imp_total CP_def TOTAL_def"], ["proof (prove)\nusing this:\n  learn_cp ?\\<psi> ?U ?s \\<Longrightarrow> learn_total ?\\<psi> ?U ?s\n  CP \\<equiv> {U. \\<exists>\\<psi> s. learn_cp \\<psi> U s}\n  TOTAL \\<equiv> {U. \\<exists>\\<psi> s. learn_total \\<psi> U s}\n\ngoal (1 subgoal):\n 1. CP \\<subseteq> TOTAL", "by blast"], ["", "subsection \\<open>FIN: Finite learning\\<close>"], ["", "text \\<open>In general it is undecidable whether a LIM strategy has reached\nits final hypothesis. By contrast, in finite learning (also called ``one-shot\nlearning'') the strategy signals when it is ready to output a hypothesis. Up\nuntil then it outputs a ``don't know yet'' value. This value is represented\nby zero and the actual hypothesis $i$ by $i + 1$.\\<close>"], ["", "definition learn_fin :: \"partial2 \\<Rightarrow> partial1 set \\<Rightarrow> partial1 \\<Rightarrow> bool\" where\n  \"learn_fin \\<psi> U s \\<equiv>\n     environment \\<psi> U s \\<and>\n     (\\<forall>f \\<in> U. \\<exists>i n\\<^sub>0. \\<psi> i = f \\<and> (\\<forall>n<n\\<^sub>0. s (f \\<triangleright> n) \\<down>= 0) \\<and> (\\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= Suc i))\""], ["", "definition FIN_wrt :: \"partial2 \\<Rightarrow> partial1 set set\" where\n  \"FIN_wrt \\<psi> \\<equiv> {U. \\<exists>s. learn_fin \\<psi> U s}\""], ["", "definition FIN :: \"partial1 set set\" where\n  \"FIN \\<equiv> {U. \\<exists>\\<psi> s. learn_fin \\<psi> U s}\""], ["", "lemma learn_finI:\n  assumes \"environment \\<psi> U s\"\n    and \"\\<And>f. f \\<in> U \\<Longrightarrow>\n      \\<exists>i n\\<^sub>0. \\<psi> i = f \\<and> (\\<forall>n<n\\<^sub>0. s (f \\<triangleright> n) \\<down>= 0) \\<and> (\\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= Suc i)\"\n  shows \"learn_fin \\<psi> U s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. learn_fin \\<psi> U s", "using assms learn_fin_def"], ["proof (prove)\nusing this:\n  environment \\<psi> U s\n  ?f \\<in> U \\<Longrightarrow>\n  \\<exists>i n\\<^sub>0.\n     \\<psi> i = ?f \\<and>\n     (\\<forall>n<n\\<^sub>0. s (?f \\<triangleright> n) \\<down>= 0) \\<and>\n     (\\<forall>n\\<ge>n\\<^sub>0. s (?f \\<triangleright> n) \\<down>= Suc i)\n  learn_fin ?\\<psi> ?U ?s \\<equiv>\n  environment ?\\<psi> ?U ?s \\<and>\n  (\\<forall>f\\<in>?U.\n      \\<exists>i n\\<^sub>0.\n         ?\\<psi> i = f \\<and>\n         (\\<forall>n<n\\<^sub>0. ?s (f \\<triangleright> n) \\<down>= 0) \\<and>\n         (\\<forall>n\\<ge>n\\<^sub>0.\n             ?s (f \\<triangleright> n) \\<down>= Suc i))\n\ngoal (1 subgoal):\n 1. learn_fin \\<psi> U s", "by auto"], ["", "lemma learn_finE:\n  assumes \"learn_fin \\<psi> U s\"\n  shows \"environment \\<psi> U s\"\n    and \"\\<And>f. f \\<in> U \\<Longrightarrow>\n      \\<exists>i n\\<^sub>0. \\<psi> i = f \\<and> (\\<forall>n<n\\<^sub>0. s (f \\<triangleright> n) \\<down>= 0) \\<and> (\\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= Suc i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. environment \\<psi> U s &&&\n    (\\<And>f.\n        f \\<in> U \\<Longrightarrow>\n        \\<exists>i n\\<^sub>0.\n           \\<psi> i = f \\<and>\n           (\\<forall>n<n\\<^sub>0.\n               s (f \\<triangleright> n) \\<down>= 0) \\<and>\n           (\\<forall>n\\<ge>n\\<^sub>0.\n               s (f \\<triangleright> n) \\<down>= Suc i))", "using assms learn_fin_def"], ["proof (prove)\nusing this:\n  learn_fin \\<psi> U s\n  learn_fin ?\\<psi> ?U ?s \\<equiv>\n  environment ?\\<psi> ?U ?s \\<and>\n  (\\<forall>f\\<in>?U.\n      \\<exists>i n\\<^sub>0.\n         ?\\<psi> i = f \\<and>\n         (\\<forall>n<n\\<^sub>0. ?s (f \\<triangleright> n) \\<down>= 0) \\<and>\n         (\\<forall>n\\<ge>n\\<^sub>0.\n             ?s (f \\<triangleright> n) \\<down>= Suc i))\n\ngoal (1 subgoal):\n 1. environment \\<psi> U s &&&\n    (\\<And>f.\n        f \\<in> U \\<Longrightarrow>\n        \\<exists>i n\\<^sub>0.\n           \\<psi> i = f \\<and>\n           (\\<forall>n<n\\<^sub>0.\n               s (f \\<triangleright> n) \\<down>= 0) \\<and>\n           (\\<forall>n\\<ge>n\\<^sub>0.\n               s (f \\<triangleright> n) \\<down>= Suc i))", "by auto"], ["", "lemma learn_fin_closed_subseteq:\n  assumes \"learn_fin \\<psi> U s\" and \"V \\<subseteq> U\"\n  shows \"learn_fin \\<psi> V s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. learn_fin \\<psi> V s", "using assms learn_fin_def"], ["proof (prove)\nusing this:\n  learn_fin \\<psi> U s\n  V \\<subseteq> U\n  learn_fin ?\\<psi> ?U ?s \\<equiv>\n  environment ?\\<psi> ?U ?s \\<and>\n  (\\<forall>f\\<in>?U.\n      \\<exists>i n\\<^sub>0.\n         ?\\<psi> i = f \\<and>\n         (\\<forall>n<n\\<^sub>0. ?s (f \\<triangleright> n) \\<down>= 0) \\<and>\n         (\\<forall>n\\<ge>n\\<^sub>0.\n             ?s (f \\<triangleright> n) \\<down>= Suc i))\n\ngoal (1 subgoal):\n 1. learn_fin \\<psi> V s", "by auto"], ["", "lemma learn_fin_wrt_goedel:\n  assumes \"goedel_numbering \\<chi>\" and \"learn_fin \\<psi> U s\"\n  shows \"\\<exists>t. learn_fin \\<chi> U t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>t. learn_fin \\<chi> U t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>t. learn_fin \\<chi> U t", "have env: \"environment \\<psi> U s\"\n    and fin: \"\\<And>f. f \\<in> U \\<Longrightarrow>\n      \\<exists>i n\\<^sub>0. \\<psi> i = f \\<and> (\\<forall>n<n\\<^sub>0. s (f \\<triangleright> n) \\<down>= 0) \\<and> (\\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= Suc i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. environment \\<psi> U s &&&\n    (\\<And>f.\n        f \\<in> U \\<Longrightarrow>\n        \\<exists>i n\\<^sub>0.\n           \\<psi> i = f \\<and>\n           (\\<forall>n<n\\<^sub>0.\n               s (f \\<triangleright> n) \\<down>= 0) \\<and>\n           (\\<forall>n\\<ge>n\\<^sub>0.\n               s (f \\<triangleright> n) \\<down>= Suc i))", "using assms(2) learn_finE"], ["proof (prove)\nusing this:\n  learn_fin \\<psi> U s\n  learn_fin ?\\<psi> ?U ?s \\<Longrightarrow> environment ?\\<psi> ?U ?s\n  \\<lbrakk>learn_fin ?\\<psi> ?U ?s; ?f \\<in> ?U\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i n\\<^sub>0.\n                       ?\\<psi> i = ?f \\<and>\n                       (\\<forall>n<n\\<^sub>0.\n                           ?s (?f \\<triangleright> n) \\<down>= 0) \\<and>\n                       (\\<forall>n\\<ge>n\\<^sub>0.\n                           ?s (?f \\<triangleright> n) \\<down>= Suc i)\n\ngoal (1 subgoal):\n 1. environment \\<psi> U s &&&\n    (\\<And>f.\n        f \\<in> U \\<Longrightarrow>\n        \\<exists>i n\\<^sub>0.\n           \\<psi> i = f \\<and>\n           (\\<forall>n<n\\<^sub>0.\n               s (f \\<triangleright> n) \\<down>= 0) \\<and>\n           (\\<forall>n\\<ge>n\\<^sub>0.\n               s (f \\<triangleright> n) \\<down>= Suc i))", "by auto"], ["proof (state)\nthis:\n  environment \\<psi> U s\n  ?f \\<in> U \\<Longrightarrow>\n  \\<exists>i n\\<^sub>0.\n     \\<psi> i = ?f \\<and>\n     (\\<forall>n<n\\<^sub>0. s (?f \\<triangleright> n) \\<down>= 0) \\<and>\n     (\\<forall>n\\<ge>n\\<^sub>0. s (?f \\<triangleright> n) \\<down>= Suc i)\n\ngoal (1 subgoal):\n 1. \\<exists>t. learn_fin \\<chi> U t", "obtain c where c: \"c \\<in> \\<R>\" \"\\<forall>i. \\<psi> i = \\<chi> (the (c i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> \\<R>;\n         \\<forall>i. \\<psi> i = \\<chi> (the (c i))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using env goedel_numberingE[OF assms(1), of \\<psi>]"], ["proof (prove)\nusing this:\n  environment \\<psi> U s\n  \\<lbrakk>\\<psi> \\<in> \\<P>\\<^sup>2;\n   \\<And>c.\n      \\<lbrakk>c \\<in> \\<R>;\n       \\<forall>i. \\<psi> i = \\<chi> (the (c i))\\<rbrakk>\n      \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c \\<in> \\<R>;\n         \\<forall>i. \\<psi> i = \\<chi> (the (c i))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  c \\<in> \\<R>\n  \\<forall>i. \\<psi> i = \\<chi> (the (c i))\n\ngoal (1 subgoal):\n 1. \\<exists>t. learn_fin \\<chi> U t", "define t where \"t \\<equiv>\n    \\<lambda>x. if s x \\<up> then None\n         else if s x = Some 0 then Some 0\n              else Some (Suc (the (c (the (s x) - 1))))\""], ["proof (state)\nthis:\n  t \\<equiv>\n  \\<lambda>x.\n     if s x \\<up> then None\n     else if s x \\<down>= 0 then Some 0\n          else Some (Suc (the (c (the (s x) - 1))))\n\ngoal (1 subgoal):\n 1. \\<exists>t. learn_fin \\<chi> U t", "have \"t \\<in> \\<P>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> \\<P>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. t \\<in> \\<P>", "from c"], ["proof (chain)\npicking this:\n  c \\<in> \\<R>\n  \\<forall>i. \\<psi> i = \\<chi> (the (c i))", "obtain rc where rc:\n      \"recfn 1 rc\"\n      \"total rc\"\n      \"\\<forall>x. c x = eval rc [x]\""], ["proof (prove)\nusing this:\n  c \\<in> \\<R>\n  \\<forall>i. \\<psi> i = \\<chi> (the (c i))\n\ngoal (1 subgoal):\n 1. (\\<And>rc.\n        \\<lbrakk>recfn 1 rc; Partial_Recursive.total rc;\n         \\<forall>x. c x = eval rc [x]\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  recfn 1 rc\n  Partial_Recursive.total rc\n  \\<forall>x. c x = eval rc [x]\n\ngoal (1 subgoal):\n 1. t \\<in> \\<P>", "from env"], ["proof (chain)\npicking this:\n  environment \\<psi> U s", "obtain rs where rs: \"recfn 1 rs\" \"\\<forall>x. s x = eval rs [x]\""], ["proof (prove)\nusing this:\n  environment \\<psi> U s\n\ngoal (1 subgoal):\n 1. (\\<And>rs.\n        \\<lbrakk>recfn 1 rs; \\<forall>x. s x = eval rs [x]\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  recfn 1 rs\n  \\<forall>x. s x = eval rs [x]\n\ngoal (1 subgoal):\n 1. t \\<in> \\<P>", "then"], ["proof (chain)\npicking this:\n  recfn 1 rs\n  \\<forall>x. s x = eval rs [x]", "have \"eval rs [f \\<triangleright> n] \\<down>\" if \"f \\<in> U\" for f n"], ["proof (prove)\nusing this:\n  recfn 1 rs\n  \\<forall>x. s x = eval rs [x]\n\ngoal (1 subgoal):\n 1. eval rs [f \\<triangleright> n] \\<down>", "using env that"], ["proof (prove)\nusing this:\n  recfn 1 rs\n  \\<forall>x. s x = eval rs [x]\n  environment \\<psi> U s\n  f \\<in> U\n\ngoal (1 subgoal):\n 1. eval rs [f \\<triangleright> n] \\<down>", "by simp"], ["proof (state)\nthis:\n  ?f \\<in> U \\<Longrightarrow> eval rs [?f \\<triangleright> ?n] \\<down>\n\ngoal (1 subgoal):\n 1. t \\<in> \\<P>", "define rt where \"rt = Cn 1 r_ifz [rs, Z, Cn 1 S [Cn 1 rc [Cn 1 r_dec [rs]]]]\""], ["proof (state)\nthis:\n  rt = Cn 1 r_ifz [rs, Z, Cn 1 S [Cn 1 rc [Cn 1 r_dec [rs]]]]\n\ngoal (1 subgoal):\n 1. t \\<in> \\<P>", "then"], ["proof (chain)\npicking this:\n  rt = Cn 1 r_ifz [rs, Z, Cn 1 S [Cn 1 rc [Cn 1 r_dec [rs]]]]", "have \"recfn 1 rt\""], ["proof (prove)\nusing this:\n  rt = Cn 1 r_ifz [rs, Z, Cn 1 S [Cn 1 rc [Cn 1 r_dec [rs]]]]\n\ngoal (1 subgoal):\n 1. recfn 1 rt", "using rc(1) rs(1)"], ["proof (prove)\nusing this:\n  rt = Cn 1 r_ifz [rs, Z, Cn 1 S [Cn 1 rc [Cn 1 r_dec [rs]]]]\n  recfn 1 rc\n  recfn 1 rs\n\ngoal (1 subgoal):\n 1. recfn 1 rt", "by simp"], ["proof (state)\nthis:\n  recfn 1 rt\n\ngoal (1 subgoal):\n 1. t \\<in> \\<P>", "have \"eval rt [x] \\<up>\" if \"eval rs [x] \\<up>\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. eval rt [x] \\<up>", "using rc(1) rs(1) rt_def that"], ["proof (prove)\nusing this:\n  recfn 1 rc\n  recfn 1 rs\n  rt = Cn 1 r_ifz [rs, Z, Cn 1 S [Cn 1 rc [Cn 1 r_dec [rs]]]]\n  eval rs [x] \\<up>\n\ngoal (1 subgoal):\n 1. eval rt [x] \\<up>", "by auto"], ["proof (state)\nthis:\n  eval rs [?x] \\<up> \\<Longrightarrow> eval rt [?x] \\<up>\n\ngoal (1 subgoal):\n 1. t \\<in> \\<P>", "moreover"], ["proof (state)\nthis:\n  eval rs [?x] \\<up> \\<Longrightarrow> eval rt [?x] \\<up>\n\ngoal (1 subgoal):\n 1. t \\<in> \\<P>", "have \"eval rt [x] \\<down>= 0\" if \"eval rs [x] \\<down>= 0\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. eval rt [x] \\<down>= 0", "using rt_def that rc(1,2) rs(1)"], ["proof (prove)\nusing this:\n  rt = Cn 1 r_ifz [rs, Z, Cn 1 S [Cn 1 rc [Cn 1 r_dec [rs]]]]\n  eval rs [x] \\<down>= 0\n  recfn 1 rc\n  Partial_Recursive.total rc\n  recfn 1 rs\n\ngoal (1 subgoal):\n 1. eval rt [x] \\<down>= 0", "by simp"], ["proof (state)\nthis:\n  eval rs [?x] \\<down>= 0 \\<Longrightarrow> eval rt [?x] \\<down>= 0\n\ngoal (1 subgoal):\n 1. t \\<in> \\<P>", "moreover"], ["proof (state)\nthis:\n  eval rs [?x] \\<down>= 0 \\<Longrightarrow> eval rt [?x] \\<down>= 0\n\ngoal (1 subgoal):\n 1. t \\<in> \\<P>", "have \"eval rt [x] \\<down>= Suc (the (c (the (s x) - 1)))\" if \"eval rs [x] \\<down>\\<noteq> 0\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. eval rt [x] \\<down>= Suc (the (c (the (s x) - 1)))", "using rt_def that rc rs"], ["proof (prove)\nusing this:\n  rt = Cn 1 r_ifz [rs, Z, Cn 1 S [Cn 1 rc [Cn 1 r_dec [rs]]]]\n  eval rs [x] \\<down>\\<noteq> 0\n  recfn 1 rc\n  Partial_Recursive.total rc\n  \\<forall>x. c x = eval rc [x]\n  recfn 1 rs\n  \\<forall>x. s x = eval rs [x]\n\ngoal (1 subgoal):\n 1. eval rt [x] \\<down>= Suc (the (c (the (s x) - 1)))", "by auto"], ["proof (state)\nthis:\n  eval rs [?x] \\<down>\\<noteq> 0 \\<Longrightarrow>\n  eval rt [?x] \\<down>= Suc (the (c (the (s ?x) - 1)))\n\ngoal (1 subgoal):\n 1. t \\<in> \\<P>", "ultimately"], ["proof (chain)\npicking this:\n  eval rs [?x] \\<up> \\<Longrightarrow> eval rt [?x] \\<up>\n  eval rs [?x] \\<down>= 0 \\<Longrightarrow> eval rt [?x] \\<down>= 0\n  eval rs [?x] \\<down>\\<noteq> 0 \\<Longrightarrow>\n  eval rt [?x] \\<down>= Suc (the (c (the (s ?x) - 1)))", "have \"eval rt [x] = t x\" for x"], ["proof (prove)\nusing this:\n  eval rs [?x] \\<up> \\<Longrightarrow> eval rt [?x] \\<up>\n  eval rs [?x] \\<down>= 0 \\<Longrightarrow> eval rt [?x] \\<down>= 0\n  eval rs [?x] \\<down>\\<noteq> 0 \\<Longrightarrow>\n  eval rt [?x] \\<down>= Suc (the (c (the (s ?x) - 1)))\n\ngoal (1 subgoal):\n 1. eval rt [x] = t x", "by (simp add: rs(2) t_def)"], ["proof (state)\nthis:\n  eval rt [?x] = t ?x\n\ngoal (1 subgoal):\n 1. t \\<in> \\<P>", "with \\<open>recfn 1 rt\\<close>"], ["proof (chain)\npicking this:\n  recfn 1 rt\n  eval rt [?x] = t ?x", "show ?thesis"], ["proof (prove)\nusing this:\n  recfn 1 rt\n  eval rt [?x] = t ?x\n\ngoal (1 subgoal):\n 1. t \\<in> \\<P>", "by auto"], ["proof (state)\nthis:\n  t \\<in> \\<P>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  t \\<in> \\<P>\n\ngoal (1 subgoal):\n 1. \\<exists>t. learn_fin \\<chi> U t", "have t: \"t (f \\<triangleright> n) \\<down>=\n      (if s (f \\<triangleright> n) = Some 0 then 0 else Suc (the (c (the (s (f \\<triangleright> n)) - 1))))\"\n    if \"f \\<in> U\" for f n"], ["proof (prove)\ngoal (1 subgoal):\n 1. t (f \\<triangleright> n) \\<down>=\n    (if s (f \\<triangleright> n) \\<down>= 0 then 0\n     else Suc (the (c (the (s (f \\<triangleright> n)) - 1))))", "using that env"], ["proof (prove)\nusing this:\n  f \\<in> U\n  environment \\<psi> U s\n\ngoal (1 subgoal):\n 1. t (f \\<triangleright> n) \\<down>=\n    (if s (f \\<triangleright> n) \\<down>= 0 then 0\n     else Suc (the (c (the (s (f \\<triangleright> n)) - 1))))", "by (simp add: t_def)"], ["proof (state)\nthis:\n  ?f \\<in> U \\<Longrightarrow>\n  t (?f \\<triangleright> ?n) \\<down>=\n  (if s (?f \\<triangleright> ?n) \\<down>= 0 then 0\n   else Suc (the (c (the (s (?f \\<triangleright> ?n)) - 1))))\n\ngoal (1 subgoal):\n 1. \\<exists>t. learn_fin \\<chi> U t", "have \"learn_fin \\<chi> U t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. learn_fin \\<chi> U t", "proof (rule learn_finI)"], ["proof (state)\ngoal (2 subgoals):\n 1. environment \\<chi> U t\n 2. \\<And>f.\n       f \\<in> U \\<Longrightarrow>\n       \\<exists>i n\\<^sub>0.\n          \\<chi> i = f \\<and>\n          (\\<forall>n<n\\<^sub>0. t (f \\<triangleright> n) \\<down>= 0) \\<and>\n          (\\<forall>n\\<ge>n\\<^sub>0.\n              t (f \\<triangleright> n) \\<down>= Suc i)", "show \"environment \\<chi> U t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. environment \\<chi> U t", "using t"], ["proof (prove)\nusing this:\n  ?f \\<in> U \\<Longrightarrow>\n  t (?f \\<triangleright> ?n) \\<down>=\n  (if s (?f \\<triangleright> ?n) \\<down>= 0 then 0\n   else Suc (the (c (the (s (?f \\<triangleright> ?n)) - 1))))\n\ngoal (1 subgoal):\n 1. environment \\<chi> U t", "by (simp add: \\<open>t \\<in> \\<P>\\<close> env goedel_numbering_P2[OF assms(1)])"], ["proof (state)\nthis:\n  environment \\<chi> U t\n\ngoal (1 subgoal):\n 1. \\<And>f.\n       f \\<in> U \\<Longrightarrow>\n       \\<exists>i n\\<^sub>0.\n          \\<chi> i = f \\<and>\n          (\\<forall>n<n\\<^sub>0. t (f \\<triangleright> n) \\<down>= 0) \\<and>\n          (\\<forall>n\\<ge>n\\<^sub>0.\n              t (f \\<triangleright> n) \\<down>= Suc i)", "show \"\\<exists>i n\\<^sub>0. \\<chi> i = f \\<and> (\\<forall>n<n\\<^sub>0. t (f \\<triangleright> n) \\<down>= 0) \\<and> (\\<forall>n\\<ge>n\\<^sub>0. t (f \\<triangleright> n) \\<down>= Suc i)\"\n      if \"f \\<in> U\" for f"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>i n\\<^sub>0.\n       \\<chi> i = f \\<and>\n       (\\<forall>n<n\\<^sub>0. t (f \\<triangleright> n) \\<down>= 0) \\<and>\n       (\\<forall>n\\<ge>n\\<^sub>0. t (f \\<triangleright> n) \\<down>= Suc i)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i n\\<^sub>0.\n       \\<chi> i = f \\<and>\n       (\\<forall>n<n\\<^sub>0. t (f \\<triangleright> n) \\<down>= 0) \\<and>\n       (\\<forall>n\\<ge>n\\<^sub>0. t (f \\<triangleright> n) \\<down>= Suc i)", "from fin"], ["proof (chain)\npicking this:\n  ?f \\<in> U \\<Longrightarrow>\n  \\<exists>i n\\<^sub>0.\n     \\<psi> i = ?f \\<and>\n     (\\<forall>n<n\\<^sub>0. s (?f \\<triangleright> n) \\<down>= 0) \\<and>\n     (\\<forall>n\\<ge>n\\<^sub>0. s (?f \\<triangleright> n) \\<down>= Suc i)", "obtain i n\\<^sub>0 where\n        i: \"\\<psi> i = f \\<and> (\\<forall>n<n\\<^sub>0. s (f \\<triangleright> n) \\<down>= 0) \\<and> (\\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= Suc i)\""], ["proof (prove)\nusing this:\n  ?f \\<in> U \\<Longrightarrow>\n  \\<exists>i n\\<^sub>0.\n     \\<psi> i = ?f \\<and>\n     (\\<forall>n<n\\<^sub>0. s (?f \\<triangleright> n) \\<down>= 0) \\<and>\n     (\\<forall>n\\<ge>n\\<^sub>0. s (?f \\<triangleright> n) \\<down>= Suc i)\n\ngoal (1 subgoal):\n 1. (\\<And>i n\\<^sub>0.\n        \\<psi> i = f \\<and>\n        (\\<forall>n<n\\<^sub>0. s (f \\<triangleright> n) \\<down>= 0) \\<and>\n        (\\<forall>n\\<ge>n\\<^sub>0.\n            s (f \\<triangleright> n) \\<down>= Suc i) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using \\<open>f \\<in> U\\<close>"], ["proof (prove)\nusing this:\n  ?f \\<in> U \\<Longrightarrow>\n  \\<exists>i n\\<^sub>0.\n     \\<psi> i = ?f \\<and>\n     (\\<forall>n<n\\<^sub>0. s (?f \\<triangleright> n) \\<down>= 0) \\<and>\n     (\\<forall>n\\<ge>n\\<^sub>0. s (?f \\<triangleright> n) \\<down>= Suc i)\n  f \\<in> U\n\ngoal (1 subgoal):\n 1. (\\<And>i n\\<^sub>0.\n        \\<psi> i = f \\<and>\n        (\\<forall>n<n\\<^sub>0. s (f \\<triangleright> n) \\<down>= 0) \\<and>\n        (\\<forall>n\\<ge>n\\<^sub>0.\n            s (f \\<triangleright> n) \\<down>= Suc i) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<psi> i = f \\<and>\n  (\\<forall>n<n\\<^sub>0. s (f \\<triangleright> n) \\<down>= 0) \\<and>\n  (\\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= Suc i)\n\ngoal (1 subgoal):\n 1. \\<exists>i n\\<^sub>0.\n       \\<chi> i = f \\<and>\n       (\\<forall>n<n\\<^sub>0. t (f \\<triangleright> n) \\<down>= 0) \\<and>\n       (\\<forall>n\\<ge>n\\<^sub>0. t (f \\<triangleright> n) \\<down>= Suc i)", "let ?j = \"the (c i)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>i n\\<^sub>0.\n       \\<chi> i = f \\<and>\n       (\\<forall>n<n\\<^sub>0. t (f \\<triangleright> n) \\<down>= 0) \\<and>\n       (\\<forall>n\\<ge>n\\<^sub>0. t (f \\<triangleright> n) \\<down>= Suc i)", "have \"\\<chi> ?j = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<chi> (the (c i)) = f", "using c(2) i"], ["proof (prove)\nusing this:\n  \\<forall>i. \\<psi> i = \\<chi> (the (c i))\n  \\<psi> i = f \\<and>\n  (\\<forall>n<n\\<^sub>0. s (f \\<triangleright> n) \\<down>= 0) \\<and>\n  (\\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= Suc i)\n\ngoal (1 subgoal):\n 1. \\<chi> (the (c i)) = f", "by simp"], ["proof (state)\nthis:\n  \\<chi> (the (c i)) = f\n\ngoal (1 subgoal):\n 1. \\<exists>i n\\<^sub>0.\n       \\<chi> i = f \\<and>\n       (\\<forall>n<n\\<^sub>0. t (f \\<triangleright> n) \\<down>= 0) \\<and>\n       (\\<forall>n\\<ge>n\\<^sub>0. t (f \\<triangleright> n) \\<down>= Suc i)", "moreover"], ["proof (state)\nthis:\n  \\<chi> (the (c i)) = f\n\ngoal (1 subgoal):\n 1. \\<exists>i n\\<^sub>0.\n       \\<chi> i = f \\<and>\n       (\\<forall>n<n\\<^sub>0. t (f \\<triangleright> n) \\<down>= 0) \\<and>\n       (\\<forall>n\\<ge>n\\<^sub>0. t (f \\<triangleright> n) \\<down>= Suc i)", "have \"\\<forall>n<n\\<^sub>0. t (f \\<triangleright> n) \\<down>= 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n<n\\<^sub>0. t (f \\<triangleright> n) \\<down>= 0", "using t[OF that] i"], ["proof (prove)\nusing this:\n  t (f \\<triangleright> ?n) \\<down>=\n  (if s (f \\<triangleright> ?n) \\<down>= 0 then 0\n   else Suc (the (c (the (s (f \\<triangleright> ?n)) - 1))))\n  \\<psi> i = f \\<and>\n  (\\<forall>n<n\\<^sub>0. s (f \\<triangleright> n) \\<down>= 0) \\<and>\n  (\\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= Suc i)\n\ngoal (1 subgoal):\n 1. \\<forall>n<n\\<^sub>0. t (f \\<triangleright> n) \\<down>= 0", "by simp"], ["proof (state)\nthis:\n  \\<forall>n<n\\<^sub>0. t (f \\<triangleright> n) \\<down>= 0\n\ngoal (1 subgoal):\n 1. \\<exists>i n\\<^sub>0.\n       \\<chi> i = f \\<and>\n       (\\<forall>n<n\\<^sub>0. t (f \\<triangleright> n) \\<down>= 0) \\<and>\n       (\\<forall>n\\<ge>n\\<^sub>0. t (f \\<triangleright> n) \\<down>= Suc i)", "moreover"], ["proof (state)\nthis:\n  \\<forall>n<n\\<^sub>0. t (f \\<triangleright> n) \\<down>= 0\n\ngoal (1 subgoal):\n 1. \\<exists>i n\\<^sub>0.\n       \\<chi> i = f \\<and>\n       (\\<forall>n<n\\<^sub>0. t (f \\<triangleright> n) \\<down>= 0) \\<and>\n       (\\<forall>n\\<ge>n\\<^sub>0. t (f \\<triangleright> n) \\<down>= Suc i)", "have \"t (f \\<triangleright> n) \\<down>= Suc ?j\" if \"n \\<ge> n\\<^sub>0\" for n"], ["proof (prove)\ngoal (1 subgoal):\n 1. t (f \\<triangleright> n) \\<down>= Suc (the (c i))", "using that i t[OF \\<open>f \\<in> U\\<close>]"], ["proof (prove)\nusing this:\n  n\\<^sub>0 \\<le> n\n  \\<psi> i = f \\<and>\n  (\\<forall>n<n\\<^sub>0. s (f \\<triangleright> n) \\<down>= 0) \\<and>\n  (\\<forall>n\\<ge>n\\<^sub>0. s (f \\<triangleright> n) \\<down>= Suc i)\n  t (f \\<triangleright> ?n) \\<down>=\n  (if s (f \\<triangleright> ?n) \\<down>= 0 then 0\n   else Suc (the (c (the (s (f \\<triangleright> ?n)) - 1))))\n\ngoal (1 subgoal):\n 1. t (f \\<triangleright> n) \\<down>= Suc (the (c i))", "by simp"], ["proof (state)\nthis:\n  n\\<^sub>0 \\<le> ?n \\<Longrightarrow>\n  t (f \\<triangleright> ?n) \\<down>= Suc (the (c i))\n\ngoal (1 subgoal):\n 1. \\<exists>i n\\<^sub>0.\n       \\<chi> i = f \\<and>\n       (\\<forall>n<n\\<^sub>0. t (f \\<triangleright> n) \\<down>= 0) \\<and>\n       (\\<forall>n\\<ge>n\\<^sub>0. t (f \\<triangleright> n) \\<down>= Suc i)", "ultimately"], ["proof (chain)\npicking this:\n  \\<chi> (the (c i)) = f\n  \\<forall>n<n\\<^sub>0. t (f \\<triangleright> n) \\<down>= 0\n  n\\<^sub>0 \\<le> ?n \\<Longrightarrow>\n  t (f \\<triangleright> ?n) \\<down>= Suc (the (c i))", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<chi> (the (c i)) = f\n  \\<forall>n<n\\<^sub>0. t (f \\<triangleright> n) \\<down>= 0\n  n\\<^sub>0 \\<le> ?n \\<Longrightarrow>\n  t (f \\<triangleright> ?n) \\<down>= Suc (the (c i))\n\ngoal (1 subgoal):\n 1. \\<exists>i n\\<^sub>0.\n       \\<chi> i = f \\<and>\n       (\\<forall>n<n\\<^sub>0. t (f \\<triangleright> n) \\<down>= 0) \\<and>\n       (\\<forall>n\\<ge>n\\<^sub>0. t (f \\<triangleright> n) \\<down>= Suc i)", "by auto"], ["proof (state)\nthis:\n  \\<exists>i n\\<^sub>0.\n     \\<chi> i = f \\<and>\n     (\\<forall>n<n\\<^sub>0. t (f \\<triangleright> n) \\<down>= 0) \\<and>\n     (\\<forall>n\\<ge>n\\<^sub>0. t (f \\<triangleright> n) \\<down>= Suc i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?f \\<in> U \\<Longrightarrow>\n  \\<exists>i n\\<^sub>0.\n     \\<chi> i = ?f \\<and>\n     (\\<forall>n<n\\<^sub>0. t (?f \\<triangleright> n) \\<down>= 0) \\<and>\n     (\\<forall>n\\<ge>n\\<^sub>0. t (?f \\<triangleright> n) \\<down>= Suc i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  learn_fin \\<chi> U t\n\ngoal (1 subgoal):\n 1. \\<exists>t. learn_fin \\<chi> U t", "then"], ["proof (chain)\npicking this:\n  learn_fin \\<chi> U t", "show ?thesis"], ["proof (prove)\nusing this:\n  learn_fin \\<chi> U t\n\ngoal (1 subgoal):\n 1. \\<exists>t. learn_fin \\<chi> U t", "by auto"], ["proof (state)\nthis:\n  \\<exists>t. learn_fin \\<chi> U t\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}