{"file_name": "/home/qj213/afp-2021-10-22/thys/Lazy-Lists-II/LList2.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Lazy-Lists-II", "problem_names": ["lemmas llistE = llist.exhaust", "lemma alllsts_UNIV [iff]:\n  \"s \\<in> UNIV\\<^sup>\\<infinity>\"", "lemma alllsts_empty [simp]: \"{}\\<^sup>\\<infinity> = {LNil}\"", "lemma alllsts_mono:\n  assumes asubb: \"A \\<subseteq> B\"\n  shows \"A\\<^sup>\\<infinity> \\<subseteq> B\\<^sup>\\<infinity>\"", "lemmas alllstsp_mono [mono] = alllsts_mono [to_pred pred_subset_eq]", "lemma LConsE [iff]: \"x##xs \\<in> A\\<^sup>\\<infinity> = (x\\<in>A \\<and> xs \\<in> A\\<^sup>\\<infinity>)\"", "lemma poslsts_iff [iff]:\n  \"(s \\<in> A\\<^sup>\\<spadesuit>) = (s \\<in> A\\<^sup>\\<infinity> \\<and> s \\<noteq> LNil)\"", "lemma poslsts_UNIV [iff]:\n  \"s \\<in> UNIV\\<^sup>\\<spadesuit> = (s \\<noteq> LNil)\"", "lemma poslsts_empty [simp]: \"{}\\<^sup>\\<spadesuit> = {}\"", "lemma poslsts_mono:\n  \"A \\<subseteq> B \\<Longrightarrow> A\\<^sup>\\<spadesuit> \\<subseteq> B\\<^sup>\\<spadesuit>\"", "lemma finlsts_empty [simp]: \"{}\\<^sup>\\<star> = {LNil}\"", "lemma finsubsetall: \"x \\<in> A\\<^sup>\\<star> \\<Longrightarrow> x \\<in> A\\<^sup>\\<infinity>\"", "lemma finlsts_mono:\n\"A\\<subseteq>B \\<Longrightarrow> A\\<^sup>\\<star> \\<subseteq> B\\<^sup>\\<star>\"", "lemmas finlstsp_mono [mono] = finlsts_mono [to_pred pred_subset_eq]", "lemma finlsts_induct\n  [case_names LNil_fin LCons_fin, induct set: finlsts, consumes 1]:\n  assumes xA: \"x \\<in> A\\<^sup>\\<star>\"\n  and lnil: \"\\<And>l. l = LNil \\<Longrightarrow> P l\"\n  and lcons: \"\\<And>a l. \\<lbrakk>l \\<in> A\\<^sup>\\<star>; P l; a \\<in> A\\<rbrakk> \\<Longrightarrow> P (a ## l)\"\n  shows \"P x\"", "lemma finite_lemma:\n  assumes \"x \\<in> A\\<^sup>\\<star>\"\n  shows \"x \\<in> B\\<^sup>\\<infinity> \\<Longrightarrow> x \\<in> B\\<^sup>\\<star>\"", "lemma fin_finite [dest]:\nassumes \"r \\<in> A\\<^sup>\\<star>\" \"r \\<notin> UNIV\\<^sup>\\<star>\"\n  shows \"False\"", "lemma finT_simp [simp]:\n  \"r \\<in> A\\<^sup>\\<star> \\<Longrightarrow> r\\<in>UNIV\\<^sup>\\<star>\"", "lemma finlsts_predI: \"r \\<in> A\\<^sup>\\<star> \\<Longrightarrow> (r, a##r) \\<in> finlsts_pred\"", "lemma wf_finlsts_pred: \"wf finlsts_pred\"", "lemma finlsts_rec_LNil: \"finlsts_rec c d LNil = c\"", "lemma finlsts_rec_LCons:\n \"r \\<in> A\\<^sup>\\<star> \\<Longrightarrow> finlsts_rec c d (a ## r) = d a r (finlsts_rec c d r)\"", "lemma finlsts_rec_LNil_def:\n  \"f \\<equiv> finlsts_rec c d \\<Longrightarrow> f LNil = c\"", "lemma finlsts_rec_LCons_def:\n  \"\\<lbrakk> f \\<equiv> finlsts_rec c d; r \\<in> A\\<^sup>\\<star> \\<rbrakk> \\<Longrightarrow> f (a ## r) = d a r (f r)\"", "lemma fpslsts_iff [iff]:\n  \"(s \\<in> A\\<^sup>\\<clubsuit>) = (s \\<in> A\\<^sup>\\<star> \\<and> s \\<noteq> LNil)\"", "lemma fpslsts_empty [simp]: \"{}\\<^sup>\\<clubsuit> = {}\"", "lemma fpslsts_mono:\n  \"A \\<subseteq> B \\<Longrightarrow> A\\<^sup>\\<clubsuit> \\<subseteq> B\\<^sup>\\<clubsuit>\"", "lemma fpslsts_cases [case_names LCons, cases set: fpslsts]:\nassumes rfps: \"r \\<in> A\\<^sup>\\<clubsuit>\"\n  and H: \"\\<And> a rs. \\<lbrakk> r = a ## rs; a\\<in>A; rs \\<in> A\\<^sup>\\<star> \\<rbrakk> \\<Longrightarrow> R\"\n  shows \"R\"", "lemma inflstsI [intro]:\n  \"\\<lbrakk> x \\<in> A\\<^sup>\\<infinity>; x \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow> False \\<rbrakk> \\<Longrightarrow> x \\<in> A\\<^sup>\\<omega>\"", "lemma inflstsE [elim]:\n  \"\\<lbrakk> x \\<in> A\\<^sup>\\<omega>; \\<lbrakk> x \\<in> A\\<^sup>\\<infinity>; x \\<notin> UNIV\\<^sup>\\<star> \\<rbrakk> \\<Longrightarrow> R \\<rbrakk> \\<Longrightarrow> R\"", "lemma inflsts_empty [simp]: \"{}\\<^sup>\\<omega> = {}\"", "lemma infsubsetall: \"x \\<in> A\\<^sup>\\<omega> \\<Longrightarrow> x \\<in> A\\<^sup>\\<infinity>\"", "lemma inflsts_mono:\n  \"A \\<subseteq> B \\<Longrightarrow> A\\<^sup>\\<omega> \\<subseteq> B\\<^sup>\\<omega>\"", "lemma inflsts_cases [case_names LCons, cases set: inflsts, consumes 1]:\n  assumes sinf: \"s \\<in> A\\<^sup>\\<omega>\"\n  and R: \"\\<And>a l. \\<lbrakk> l \\<in> A\\<^sup>\\<omega>; a \\<in> A; s = a ## l \\<rbrakk> \\<Longrightarrow> R\"\n  shows \"R\"", "lemma inflstsI2: \"\\<lbrakk>a \\<in> A; t \\<in> A\\<^sup>\\<omega>\\<rbrakk> \\<Longrightarrow> a ## t \\<in> A\\<^sup>\\<omega>\"", "lemma infT_simp [simp]:\n  \"r \\<in> A\\<^sup>\\<omega> \\<Longrightarrow> r\\<in>UNIV\\<^sup>\\<omega>\"", "lemma  alllstsE [consumes 1, case_names finite infinite]:\n  \"\\<lbrakk> x\\<in>A\\<^sup>\\<infinity>; x \\<in> A\\<^sup>\\<star> \\<Longrightarrow> P; x \\<in> A\\<^sup>\\<omega> \\<Longrightarrow> P \\<rbrakk> \\<Longrightarrow> P\"", "lemma fin_inf_cases [case_names finite infinite]:\n  \"\\<lbrakk> r\\<in>UNIV\\<^sup>\\<star> \\<Longrightarrow> P; r \\<in> UNIV\\<^sup>\\<omega> \\<Longrightarrow> P \\<rbrakk> \\<Longrightarrow> P\"", "lemma  fin_Int_inf: \"A\\<^sup>\\<star> \\<inter> A\\<^sup>\\<omega> = {}\"\n  and   fin_Un_inf: \"A\\<^sup>\\<star> \\<union> A\\<^sup>\\<omega> = A\\<^sup>\\<infinity>\"", "lemma notfin_inf [iff]: \"(x \\<notin> UNIV\\<^sup>\\<star>) = (x \\<in> UNIV\\<^sup>\\<omega>)\"", "lemma notinf_fin [iff]: \"(x \\<notin> UNIV\\<^sup>\\<omega>) = (x \\<in> UNIV\\<^sup>\\<star>)\"", "lemma lapp_inf [simp]:\n  assumes \"s \\<in> A\\<^sup>\\<omega>\"\n  shows \"s @@ t = s\"", "lemma LNil_is_lappend_conv [iff]:\n\"(LNil = s @@ t) = (s = LNil \\<and> t = LNil)\"", "lemma lappend_is_LNil_conv [iff]:\n  \"(s @@ t = LNil) = (s = LNil \\<and> t = LNil)\"", "lemma same_lappend_eq [iff]:\n \"r \\<in> A\\<^sup>\\<star> \\<Longrightarrow> (r @@ s = r @@ t) = (s = t)\"", "lemma lappT: \n  assumes sllist: \"s \\<in> A\\<^sup>\\<infinity>\"\n  and tllist: \"t \\<in> A\\<^sup>\\<infinity>\"\n  shows \"s@@t \\<in> A\\<^sup>\\<infinity>\"", "lemma lappfin_finT: \"\\<lbrakk> s \\<in> A\\<^sup>\\<star>; t \\<in> A\\<^sup>\\<star> \\<rbrakk> \\<Longrightarrow> s@@t \\<in> A\\<^sup>\\<star>\"", "lemma lapp_fin_fin_lemma:\n  assumes rsA: \"r @@ s \\<in> A\\<^sup>\\<star>\"\n  shows \"r \\<in> A\\<^sup>\\<star>\"", "lemma lapp_fin_fin_iff [iff]: \"(r @@ s \\<in> A\\<^sup>\\<star>) = (r \\<in> A\\<^sup>\\<star> \\<and> s \\<in> A\\<^sup>\\<star>)\"", "lemma lapp_all_invT:\nassumes rs: \"r@@s \\<in> A\\<^sup>\\<infinity>\"\n  shows \"r \\<in> A\\<^sup>\\<infinity>\"", "lemma lapp_fin_infT: \"\\<lbrakk>s \\<in> A\\<^sup>\\<star>; t \\<in> A\\<^sup>\\<omega>\\<rbrakk> \\<Longrightarrow> s @@ t \\<in> A\\<^sup>\\<omega>\"", "lemma app_invT:\n  assumes \"r \\<in> A\\<^sup>\\<star>\" shows \"r @@ s \\<in> A\\<^sup>\\<omega> \\<Longrightarrow> s \\<in> A\\<^sup>\\<omega>\"", "lemma lapp_inv2T:\n  assumes rsinf: \"r @@ s \\<in> A\\<^sup>\\<omega>\"\n  shows \"r \\<in> A\\<^sup>\\<star> \\<and> s \\<in> A\\<^sup>\\<omega> \\<or> r \\<in> A\\<^sup>\\<omega>\"", "lemma lapp_infT:\n  \"(r @@ s \\<in> A\\<^sup>\\<omega>) = (r \\<in> A\\<^sup>\\<star> \\<and> s \\<in> A\\<^sup>\\<omega> \\<or> r \\<in> A\\<^sup>\\<omega>)\"", "lemma lapp_allT_iff:\n  \"(r @@ s \\<in> A\\<^sup>\\<infinity>) = (r \\<in> A\\<^sup>\\<star> \\<and> s \\<in> A\\<^sup>\\<infinity> \\<or> r \\<in> A\\<^sup>\\<omega>)\"\n  (is \"?L = ?R\")", "lemmas llength_LNil  = llength_def [THEN finlsts_rec_LNil_def]\n  and  llength_LCons = llength_def [THEN finlsts_rec_LCons_def]", "lemmas llength_simps [simp] = llength_LNil llength_LCons", "lemmas llast_LNil  = llast_def [THEN finlsts_rec_LNil_def]\n  and  llast_LCons = llast_def [THEN finlsts_rec_LCons_def]", "lemmas llast_simps [simp] = llast_LNil llast_LCons", "lemmas lbutlast_LNil = lbutlast_def [THEN finlsts_rec_LNil_def]\n  and lbutlast_LCons = lbutlast_def [THEN finlsts_rec_LCons_def]", "lemmas lbutlast_simps [simp] = lbutlast_LNil lbutlast_LCons", "lemmas lrev_LNil = lrev_def [THEN finlsts_rec_LNil_def]\n  and lrev_LCons = lrev_def [THEN finlsts_rec_LCons_def]", "lemmas lrev_simps [simp] = lrev_LNil lrev_LCons", "lemma lrevT [simp, intro!]:\n  \"xs \\<in> A\\<^sup>\\<star> \\<Longrightarrow> lrev xs \\<in> A\\<^sup>\\<star>\"", "lemma lrev_lappend [simp]:\n  assumes fin: \"xs \\<in> UNIV\\<^sup>\\<star>\" \"ys \\<in> UNIV\\<^sup>\\<star>\"\n  shows \"lrev (xs @@ ys) = (lrev ys) @@ (lrev xs)\"", "lemma lrev_lrev_ident [simp]:\n  assumes fin: \"xs \\<in> UNIV\\<^sup>\\<star>\"\n  shows \"lrev (lrev xs) = xs\"", "lemma lrev_is_LNil_conv [iff]:\n  \"xs \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow> (lrev xs = LNil) = (xs = LNil)\"", "lemma LNil_is_lrev_conv [iff]: \n\"xs \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow> (LNil = lrev xs) = (xs = LNil)\"", "lemma lrev_is_lrev_conv [iff]:\nassumes fin: \"xs \\<in> UNIV\\<^sup>\\<star>\" \"ys \\<in> UNIV\\<^sup>\\<star>\"\n  shows \"(lrev xs = lrev ys) = (xs = ys)\"\n  (is \"?L = ?R\")", "lemma lrev_induct [case_names LNil snocl, consumes 1]:\n  assumes fin: \"xs \\<in> A\\<^sup>\\<star>\"\n  and init: \"P LNil\"\n  and step: \"\\<And>x xs. \\<lbrakk> xs \\<in> A\\<^sup>\\<star>; P xs; x \\<in> A \\<rbrakk> \\<Longrightarrow> P (xs @@ x##LNil)\"\n  shows \"P xs\"", "lemma finlsts_rev_cases:\n  assumes tfin: \"t \\<in> A\\<^sup>\\<star>\"\n  obtains (LNil) \"t = LNil\"\n    |    (snocl) a l where \"l \\<in> A\\<^sup>\\<star>\" \"a \\<in> A\" \"t = l @@ a ## LNil\"", "lemma ll2f_LNil [simp]: \"LNil!!x = None\"", "lemma None_lfinite: \"t!!i = None \\<Longrightarrow> t \\<in> UNIV\\<^sup>\\<star>\"", "lemma infinite_Some: \"t \\<in> A\\<^sup>\\<omega> \\<Longrightarrow> \\<exists>a. t!!i = Some a\"", "lemmas infinite_idx_SomeE = exE [OF infinite_Some]", "lemma Least_True [simp]:\n  \"(LEAST (n::nat). True) = 0\"", "lemma  ll2f_llength [simp]: \"r \\<in> A\\<^sup>\\<star> \\<Longrightarrow> r!!(llength r) = None\"", "lemma llength_least_None:\n  assumes rA: \"r \\<in> A\\<^sup>\\<star>\"\n  shows \"llength r = (LEAST i. r!!i = None)\"", "lemma ll2f_lem1:\n \"t !! (Suc i) = Some x \\<Longrightarrow> \\<exists> y. t !! i = Some y\"", "lemmas ll2f_Suc_Some = ll2f_lem1 [THEN exE]", "lemma ll2f_None_Suc: \"t !! i = None \\<Longrightarrow> t !! Suc i = None\"", "lemma ll2f_None_le:\n  \"\\<lbrakk> t!!j = None; j \\<le> i \\<rbrakk> \\<Longrightarrow> t!!i = None\"", "lemma ll2f_Some_le:\n  assumes jlei: \"j \\<le> i\"\n  and tisome: \"t !! i = Some x\"\n  and H: \"\\<And> y. t !! j = Some y \\<Longrightarrow> Q\"\n  shows \"Q\"", "lemma ltake_LNil [simp]: \"LNil \\<down> i = LNil\"", "lemma ltake_LCons_Suc: \"(a ## l) \\<down> (Suc i) = a ## l \\<down> i\"", "lemma take_fin [iff]: \"t \\<in> A\\<^sup>\\<infinity> \\<Longrightarrow> t\\<down>i \\<in> A\\<^sup>\\<star>\"", "lemma ltake_fin [iff]:\n  \"r \\<down> i \\<in> UNIV\\<^sup>\\<star>\"", "lemma llength_take [simp]: \"t \\<in> A\\<^sup>\\<omega> \\<Longrightarrow> llength (t\\<down>i) = i\"", "lemma ltake_ldrop_id: \"(x \\<down> i) @@ (x \\<up> i) = x\"", "lemma ltake_ldrop: \n  \"(xs \\<up> m) \\<down> n =(xs \\<down> (n + m)) \\<up> m\"", "lemma ldrop_LNil [simp]: \"LNil \\<up> i = LNil\"", "lemma ldrop_add: \"t \\<up> (i + k) = t \\<up> i \\<up> k\"", "lemma ldrop_fun: \"t \\<up> i !! j = t!!(i + j)\"", "lemma ldropT[simp]: \"t \\<in> A\\<^sup>\\<infinity> \\<Longrightarrow> t \\<up> i \\<in> A\\<^sup>\\<infinity>\"", "lemma ldrop_finT[simp]: \"t \\<in> A\\<^sup>\\<star> \\<Longrightarrow> t \\<up> i \\<in> A\\<^sup>\\<star>\"", "lemma ldrop_infT[simp]: \"t \\<in> A\\<^sup>\\<omega> \\<Longrightarrow> t \\<up> i \\<in> A\\<^sup>\\<omega>\"", "lemma lapp_suff_llength: \"r \\<in> A\\<^sup>\\<star> \\<Longrightarrow> (r@@s) \\<up> llength r = s\"", "lemma ltake_lappend_llength [simp]:\n  \"r \\<in> A\\<^sup>\\<star> \\<Longrightarrow> (r @@ s) \\<down> llength r = r\"", "lemma ldrop_LNil_less:\n  \"\\<lbrakk>j \\<le> i; t \\<up> j = LNil\\<rbrakk> \\<Longrightarrow> t \\<up> i = LNil\"", "lemma ldrop_inf_iffT [iff]: \"(t \\<up> i \\<in> UNIV\\<^sup>\\<omega>)  =  (t \\<in> UNIV\\<^sup>\\<omega>)\"", "lemma ldrop_fin_iffT [iff]: \"(t \\<up> i \\<in> UNIV\\<^sup>\\<star>) = (t \\<in> UNIV\\<^sup>\\<star>)\"", "lemma drop_nonLNil: \"t\\<up>i \\<noteq> LNil \\<Longrightarrow> t \\<noteq> LNil\"", "lemma llength_drop_take:\n  \"t\\<up>i \\<noteq> LNil \\<Longrightarrow> llength (t\\<down>i) = i\"", "lemma fps_induct [case_names LNil LCons, induct set: fpslsts, consumes 1]:\n  assumes fps: \"l \\<in> A\\<^sup>\\<clubsuit>\"\n  and    init: \"\\<And>a. a \\<in> A \\<Longrightarrow> P (a##LNil)\"\n  and    step: \"\\<And>a l. \\<lbrakk> l \\<in> A\\<^sup>\\<clubsuit>; P l; a \\<in> A \\<rbrakk> \\<Longrightarrow> P (a ## l)\"\n  shows \"P l\"", "lemma lbutlast_lapp_llast:\nassumes \"l \\<in> A\\<^sup>\\<clubsuit>\"\n  shows \"l = lbutlast l @@ (llast l ## LNil)\"", "lemma llast_snoc [simp]:\n  assumes fin: \"xs \\<in> A\\<^sup>\\<star>\"\n  shows \"llast (xs @@ x ## LNil) = x\"", "lemma lbutlast_snoc [simp]:\n  assumes fin: \"xs \\<in> A\\<^sup>\\<star>\"\n  shows \"lbutlast (xs @@ x ## LNil) = xs\"", "lemma llast_lappend [simp]:\n\"\\<lbrakk> x \\<in> UNIV\\<^sup>\\<star>; y \\<in> UNIV\\<^sup>\\<star> \\<rbrakk> \\<Longrightarrow> llast (x @@ a ## y) = llast (a ## y)\"", "lemma llast_llength:\n  assumes tfin: \"t \\<in> UNIV\\<^sup>\\<star>\"\n  shows \"t \\<noteq> LNil \\<Longrightarrow> t !! (llength t - (Suc 0)) = Some (llast t)\"", "lemma lconst_unfold: \"lconst a = a ## lconst a\"", "lemma lconst_LNil [iff]: \"lconst a \\<noteq> LNil\"", "lemma lconstT:\n  assumes aA: \"a \\<in> A\"\n  shows \"lconst a \\<in> A\\<^sup>\\<omega>\"", "lemma not_LCons_le_LNil [iff]:\n  \"\\<not> (a##l) \\<le> LNil\"", "lemma LNil_le [iff]:\"LNil \\<le> s\"", "lemma le_LNil [iff]: \"(s \\<le> LNil) = (s = LNil)\"", "lemma llist_inf_le:\n  \"s \\<in> A\\<^sup>\\<omega>  \\<Longrightarrow> (s\\<le>t) = (s=t)\"", "lemma le_LCons [iff]: \"(x ## xs \\<le> y ## ys) = (x = y \\<and> xs \\<le> ys)\"", "lemma llist_le_refl [iff]:\n  \"(s:: 'a llist) \\<le> s\"", "lemma llist_le_trans [trans]:\n  fixes r:: \"'a llist\"\n  shows \"r \\<le> s \\<Longrightarrow> s \\<le> t \\<Longrightarrow> r \\<le> t\"", "lemma llist_le_anti_sym:\n  fixes s:: \"'a llist\"\n  assumes st: \"s \\<le> t\"\n  and ts: \"t \\<le> s\"\n  shows \"s = t\"", "lemma llist_less_le_not_le:\n  fixes s :: \"'a llist\"\n  shows \"(s < t) = (s \\<le> t \\<and> \\<not> t \\<le> s)\"", "lemma llist_le_finT [simp]:\n \"r\\<le>s \\<Longrightarrow> s \\<in> A\\<^sup>\\<star> \\<Longrightarrow> r \\<in> A\\<^sup>\\<star>\"", "lemma llist_less_finT [iff]:\n \"r<s \\<Longrightarrow> s \\<in> A\\<^sup>\\<star> \\<Longrightarrow> r \\<in> A\\<^sup>\\<star>\"", "lemma LNil_less_LCons [iff]: \"LNil < a ## t\"", "lemma not_less_LNil [iff]:\n  \"\\<not> r < LNil\"", "lemma less_LCons [iff]:\n  \" (a ## r < b ## t) = (a = b \\<and> r < t)\"", "lemma llength_mono [iff]:\n  assumes\"r \\<in> A\\<^sup>\\<star>\"\n  shows \"s<r \\<Longrightarrow> llength s < llength r\"", "lemma le_lappend [iff]: \"r \\<le> r @@ s\"", "lemma take_inf_less:\n  \"t \\<in> UNIV\\<^sup>\\<omega> \\<Longrightarrow> t \\<down> i < t\"", "lemma lapp_take_less:\n  assumes iless: \"i < llength r\"\n  shows \"(r @@ s) \\<down> i < r\"", "lemma finpref_LNil [simp]:\n  \"finpref A LNil = {LNil}\"", "lemma finpref_fin: \"x \\<in> finpref A s \\<Longrightarrow> x \\<in> A\\<^sup>\\<star>\"", "lemma finpref_mono2: \"s \\<le> t \\<Longrightarrow> finpref A s \\<subseteq> finpref A t\"", "lemma suff_LNil [simp]:\n  \"suff A LNil = A\\<^sup>\\<infinity>\"", "lemma suff_all: \"x \\<in> suff A s \\<Longrightarrow> x \\<in> A\\<^sup>\\<infinity>\"", "lemma suff_mono2: \"s \\<le> t \\<Longrightarrow> suff A t \\<subseteq> suff A s\"", "lemma suff_appE:\n  assumes rA: \"r \\<in> A\\<^sup>\\<star>\"\n  and  tsuff: \"t \\<in> suff A r\"\n  obtains s where \"s \\<in> A\\<^sup>\\<infinity>\" \"t = r@@s\"", "lemma LNil_suff [iff]: \"(LNil \\<in> suff A s) = (s = LNil)\"", "lemma finpref_suff [dest]:\n  \"\\<lbrakk> r \\<in> finpref A t; t\\<in>A\\<^sup>\\<infinity> \\<rbrakk> \\<Longrightarrow> t \\<in> suff A r\"", "lemma suff_finpref:\n  \"\\<lbrakk> t \\<in> suff A r; r\\<in>A\\<^sup>\\<star> \\<rbrakk> \\<Longrightarrow> r \\<in> finpref A t\"", "lemma suff_finpref_iff:\n  \"\\<lbrakk> r\\<in>A\\<^sup>\\<star>; t\\<in>A\\<^sup>\\<infinity> \\<rbrakk> \\<Longrightarrow> (r \\<in> finpref A t) = (t \\<in> suff A r)\"", "lemma infsuff_LNil [simp]:\n  \"infsuff A LNil = A\\<^sup>\\<omega>\"", "lemma infsuff_inf: \"x \\<in> infsuff A s \\<Longrightarrow> x \\<in> A\\<^sup>\\<omega>\"", "lemma infsuff_mono2: \"s \\<le> t \\<Longrightarrow> infsuff A t \\<subseteq> infsuff A s\"", "lemma infsuff_appE:\n  assumes   rA: \"r \\<in> A\\<^sup>\\<star>\"\n  and tinfsuff: \"t \\<in> infsuff A r\"\n  obtains s where \"s \\<in> A\\<^sup>\\<omega>\" \"t = r@@s\"", "lemma finpref_infsuff [dest]:\n  \"\\<lbrakk> r \\<in> finpref A t; t\\<in>A\\<^sup>\\<omega> \\<rbrakk> \\<Longrightarrow> t \\<in> infsuff A r\"", "lemma infsuff_finpref:\n  \"\\<lbrakk> t \\<in> infsuff A r; r\\<in>A\\<^sup>\\<star> \\<rbrakk> \\<Longrightarrow> r \\<in> finpref A t\"", "lemma infsuff_finpref_iff [iff]:\n  \"\\<lbrakk> r\\<in>A\\<^sup>\\<star>; t\\<in>A\\<^sup>\\<omega> \\<rbrakk> \\<Longrightarrow> (t \\<in> finpref A r) = (r \\<in> infsuff A t)\"", "lemma prefix_lemma:\n  assumes xinf: \"x \\<in> A\\<^sup>\\<omega>\"\n  and yinf: \"y \\<in> A\\<^sup>\\<omega>\"\n  and R: \"\\<And> s. \\<lbrakk> s \\<in> A\\<^sup>\\<star>; s \\<le> x\\<rbrakk> \\<Longrightarrow> s \\<le> y\"\n  shows \"x = y\"", "lemma inf_neqE:\n\"\\<lbrakk> x \\<in>  A\\<^sup>\\<omega>; y \\<in> A\\<^sup>\\<omega>; x \\<noteq> y;\n  \\<And>s. \\<lbrakk> s\\<in>A\\<^sup>\\<star>; s \\<le> x; \\<not> s \\<le> y\\<rbrakk> \\<Longrightarrow> R \\<rbrakk> \\<Longrightarrow> R\"", "lemma pref_locally_linear:\n  fixes s::\"'a llist\"\n  assumes sx: \"s \\<le> x\"\n  and   tx: \"t \\<le> x\"\n  shows \"s \\<le> t \\<or> t \\<le> s\"", "lemma pfinpref_iff [iff]:\n  \"(x \\<in> pfinpref A s) = (x \\<in> finpref A s \\<and> x \\<noteq> LNil)\"", "lemma safetyI:\n  \"(\\<And>t. \\<lbrakk>t \\<in>  A\\<^sup>\\<infinity>; \\<forall> r \\<in> finpref A t. \\<exists> s \\<in> A\\<^sup>\\<infinity>. r @@ s \\<in> P\\<rbrakk> \\<Longrightarrow> t \\<in> P)\n  \\<Longrightarrow> safety A P\"", "lemma safetyD:\n  \"\\<lbrakk> safety A P;  t \\<in> A\\<^sup>\\<infinity>;\n    \\<And>r. r \\<in> finpref A t \\<Longrightarrow> \\<exists> s \\<in> A\\<^sup>\\<infinity>. r @@ s \\<in> P\n  \\<rbrakk> \\<Longrightarrow> t \\<in> P\"", "lemma safetyE:\n  \"\\<lbrakk> safety A P;\n    \\<forall> t \\<in> A\\<^sup>\\<infinity>. (\\<forall> r \\<in> finpref A t. \\<exists> s \\<in> A\\<^sup>\\<infinity>. r @@ s \\<in> P) \\<longrightarrow> t \\<in> P \\<Longrightarrow> R\n   \\<rbrakk> \\<Longrightarrow> R\"", "lemma safety_prefix_closed:\n  \"safety UNIV P \\<Longrightarrow> prefix_closed P\"", "lemma livenessI:\n  \"(\\<And>s. s\\<in> A\\<^sup>\\<star> \\<Longrightarrow> \\<exists> t \\<in> A\\<^sup>\\<infinity>. s @@ t \\<in> P) \\<Longrightarrow> liveness A P\"", "lemma livenessE:\n  \"\\<lbrakk> liveness A P; \\<And>t. \\<lbrakk>  t \\<in> A\\<^sup>\\<infinity>; s @@ t \\<in> P\\<rbrakk> \\<Longrightarrow> R; s \\<notin> A\\<^sup>\\<star> \\<Longrightarrow> R\\<rbrakk> \\<Longrightarrow> R\"", "lemma possafetyI:\n  \"(\\<And>t. \\<lbrakk>t \\<in>  A\\<^sup>\\<spadesuit>; \\<forall> r \\<in> pfinpref A t. \\<exists> s \\<in> A\\<^sup>\\<infinity>. r @@ s \\<in> P\\<rbrakk> \\<Longrightarrow> t \\<in> P)\n  \\<Longrightarrow> possafety A P\"", "lemma possafetyD:\n  \"\\<lbrakk> possafety A P;  t \\<in> A\\<^sup>\\<spadesuit>;\n    \\<And>r. r \\<in> pfinpref A t \\<Longrightarrow> \\<exists> s \\<in> A\\<^sup>\\<infinity>. r @@ s \\<in> P\n  \\<rbrakk> \\<Longrightarrow> t \\<in> P\"", "lemma possafetyE:\n  \"\\<lbrakk> possafety A P;\n    \\<forall> t \\<in> A\\<^sup>\\<spadesuit>. (\\<forall> r \\<in> pfinpref A t. \\<exists> s \\<in> A\\<^sup>\\<infinity>. r @@ s \\<in> P) \\<longrightarrow> t \\<in> P \\<Longrightarrow> R\n   \\<rbrakk> \\<Longrightarrow> R\"", "lemma possafety_pprefix_closed:\n  assumes psafety: \"possafety UNIV P\"\n  shows \"pprefix_closed P\"", "lemma poslivenessI:\n  \"(\\<And>s. s\\<in> A\\<^sup>\\<clubsuit> \\<Longrightarrow> \\<exists> t \\<in> A\\<^sup>\\<infinity>. s @@ t \\<in> P) \\<Longrightarrow> posliveness A P\"", "lemma poslivenessE:\n  \"\\<lbrakk> posliveness A P; \\<And>t. \\<lbrakk>  t \\<in> A\\<^sup>\\<infinity>; s @@ t \\<in> P\\<rbrakk> \\<Longrightarrow> R; s \\<notin> A\\<^sup>\\<clubsuit> \\<Longrightarrow> R\\<rbrakk> \\<Longrightarrow> R\""], "translations": [["", "lemmas llistE = llist.exhaust"], ["", "subsection\\<open>Finite and infinite llists over an alphabet\\<close>"], ["", "inductive_set\n  finlsts :: \"'a set \\<Rightarrow> 'a llist set\" (\"(_\\<^sup>\\<star>)\" [1000] 999)\n  for A :: \"'a set\"\nwhere\n  LNil_fin [iff]: \"LNil \\<in>  A\\<^sup>\\<star>\"\n| LCons_fin [intro!]: \"\\<lbrakk> l \\<in> A\\<^sup>\\<star>; a \\<in> A \\<rbrakk> \\<Longrightarrow>  a ## l \\<in> A\\<^sup>\\<star>\""], ["", "coinductive_set\n  alllsts :: \"'a set \\<Rightarrow> 'a llist set\" (\"(_\\<^sup>\\<infinity>)\" [1000] 999)\n  for A :: \"'a set\"\nwhere\n  LNil_all [iff]: \"LNil \\<in> A\\<^sup>\\<infinity>\"\n| LCons_all [intro!]: \"\\<lbrakk> l \\<in> A\\<^sup>\\<infinity>; a \\<in> A \\<rbrakk> \\<Longrightarrow>  a ## l \\<in> A\\<^sup>\\<infinity>\""], ["", "declare alllsts.cases [case_names LNil LCons, cases set: alllsts]"], ["", "definition inflsts :: \"'a set \\<Rightarrow> 'a llist set\"  (\"(_\\<^sup>\\<omega>)\" [1000] 999)\nwhere \"A\\<^sup>\\<omega> \\<equiv>  A\\<^sup>\\<infinity> - UNIV\\<^sup>\\<star>\""], ["", "definition fpslsts :: \"'a set \\<Rightarrow> 'a llist set\"  (\"(_\\<^sup>\\<clubsuit>)\" [1000] 999)\nwhere \"A\\<^sup>\\<clubsuit> \\<equiv> A\\<^sup>\\<star> - {LNil}\""], ["", "definition poslsts :: \"'a set \\<Rightarrow> 'a llist set\"  (\"(_\\<^sup>\\<spadesuit>)\" [1000] 999)\nwhere \"A\\<^sup>\\<spadesuit> \\<equiv> A\\<^sup>\\<infinity> - {LNil}\""], ["", "subsubsection\\<open>Facts about all llists\\<close>"], ["", "lemma alllsts_UNIV [iff]:\n  \"s \\<in> UNIV\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> UNIV\\<^sup>\\<infinity>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. s \\<in> UNIV\\<^sup>\\<infinity>", "have \"s \\<in> UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> UNIV", "by blast"], ["proof (state)\nthis:\n  s \\<in> UNIV\n\ngoal (1 subgoal):\n 1. s \\<in> UNIV\\<^sup>\\<infinity>", "thus ?thesis"], ["proof (prove)\nusing this:\n  s \\<in> UNIV\n\ngoal (1 subgoal):\n 1. s \\<in> UNIV\\<^sup>\\<infinity>", "proof coinduct"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> UNIV \\<Longrightarrow>\n       x = LNil \\<or>\n       (\\<exists>l a.\n           x = a ## l \\<and>\n           (l \\<in> UNIV \\<or> l \\<in> UNIV\\<^sup>\\<infinity>) \\<and>\n           a \\<in> UNIV)", "case (alllsts z)"], ["proof (state)\nthis:\n  z \\<in> UNIV\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> UNIV \\<Longrightarrow>\n       x = LNil \\<or>\n       (\\<exists>l a.\n           x = a ## l \\<and>\n           (l \\<in> UNIV \\<or> l \\<in> UNIV\\<^sup>\\<infinity>) \\<and>\n           a \\<in> UNIV)", "thus ?case"], ["proof (prove)\nusing this:\n  z \\<in> UNIV\n\ngoal (1 subgoal):\n 1. z = LNil \\<or>\n    (\\<exists>l a.\n        z = a ## l \\<and>\n        (l \\<in> UNIV \\<or> l \\<in> UNIV\\<^sup>\\<infinity>) \\<and>\n        a \\<in> UNIV)", "by(cases z) auto"], ["proof (state)\nthis:\n  z = LNil \\<or>\n  (\\<exists>l a.\n      z = a ## l \\<and>\n      (l \\<in> UNIV \\<or> l \\<in> UNIV\\<^sup>\\<infinity>) \\<and>\n      a \\<in> UNIV)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  s \\<in> UNIV\\<^sup>\\<infinity>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma alllsts_empty [simp]: \"{}\\<^sup>\\<infinity> = {LNil}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {}\\<^sup>\\<infinity> = {LNil}", "by (auto elim: alllsts.cases)"], ["", "lemma alllsts_mono:\n  assumes asubb: \"A \\<subseteq> B\"\n  shows \"A\\<^sup>\\<infinity> \\<subseteq> B\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A\\<^sup>\\<infinity> \\<subseteq> B\\<^sup>\\<infinity>", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A\\<^sup>\\<infinity> \\<Longrightarrow>\n       x \\<in> B\\<^sup>\\<infinity>", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A\\<^sup>\\<infinity> \\<Longrightarrow>\n       x \\<in> B\\<^sup>\\<infinity>", "assume \"x \\<in> A\\<^sup>\\<infinity>\""], ["proof (state)\nthis:\n  x \\<in> A\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A\\<^sup>\\<infinity> \\<Longrightarrow>\n       x \\<in> B\\<^sup>\\<infinity>", "thus \"x \\<in> B\\<^sup>\\<infinity>\""], ["proof (prove)\nusing this:\n  x \\<in> A\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. x \\<in> B\\<^sup>\\<infinity>", "proof coinduct"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A\\<^sup>\\<infinity> \\<Longrightarrow>\n       x = LNil \\<or>\n       (\\<exists>l a.\n           x = a ## l \\<and>\n           (l \\<in> A\\<^sup>\\<infinity> \\<or>\n            l \\<in> B\\<^sup>\\<infinity>) \\<and>\n           a \\<in> B)", "case (alllsts z)"], ["proof (state)\nthis:\n  z \\<in> A\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A\\<^sup>\\<infinity> \\<Longrightarrow>\n       x = LNil \\<or>\n       (\\<exists>l a.\n           x = a ## l \\<and>\n           (l \\<in> A\\<^sup>\\<infinity> \\<or>\n            l \\<in> B\\<^sup>\\<infinity>) \\<and>\n           a \\<in> B)", "thus ?case"], ["proof (prove)\nusing this:\n  z \\<in> A\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. z = LNil \\<or>\n    (\\<exists>l a.\n        z = a ## l \\<and>\n        (l \\<in> A\\<^sup>\\<infinity> \\<or>\n         l \\<in> B\\<^sup>\\<infinity>) \\<and>\n        a \\<in> B)", "using asubb"], ["proof (prove)\nusing this:\n  z \\<in> A\\<^sup>\\<infinity>\n  A \\<subseteq> B\n\ngoal (1 subgoal):\n 1. z = LNil \\<or>\n    (\\<exists>l a.\n        z = a ## l \\<and>\n        (l \\<in> A\\<^sup>\\<infinity> \\<or>\n         l \\<in> B\\<^sup>\\<infinity>) \\<and>\n        a \\<in> B)", "by(cases z) auto"], ["proof (state)\nthis:\n  z = LNil \\<or>\n  (\\<exists>l a.\n      z = a ## l \\<and>\n      (l \\<in> A\\<^sup>\\<infinity> \\<or> l \\<in> B\\<^sup>\\<infinity>) \\<and>\n      a \\<in> B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> B\\<^sup>\\<infinity>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas alllstsp_mono [mono] = alllsts_mono [to_pred pred_subset_eq]"], ["", "lemma LConsE [iff]: \"x##xs \\<in> A\\<^sup>\\<infinity> = (x\\<in>A \\<and> xs \\<in> A\\<^sup>\\<infinity>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x ## xs \\<in> A\\<^sup>\\<infinity>) =\n    (x \\<in> A \\<and> xs \\<in> A\\<^sup>\\<infinity>)", "by (auto elim: alllsts.cases)"], ["", "subsubsection\\<open>Facts about non-empty (positive) llists\\<close>"], ["", "lemma poslsts_iff [iff]:\n  \"(s \\<in> A\\<^sup>\\<spadesuit>) = (s \\<in> A\\<^sup>\\<infinity> \\<and> s \\<noteq> LNil)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s \\<in> A\\<^sup>\\<spadesuit>) =\n    (s \\<in> A\\<^sup>\\<infinity> \\<and> s \\<noteq> LNil)", "by (simp add: poslsts_def)"], ["", "lemma poslsts_UNIV [iff]:\n  \"s \\<in> UNIV\\<^sup>\\<spadesuit> = (s \\<noteq> LNil)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s \\<in> UNIV\\<^sup>\\<spadesuit>) = (s \\<noteq> LNil)", "by auto"], ["", "lemma poslsts_empty [simp]: \"{}\\<^sup>\\<spadesuit> = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {}\\<^sup>\\<spadesuit> = {}", "by auto"], ["", "lemma poslsts_mono:\n  \"A \\<subseteq> B \\<Longrightarrow> A\\<^sup>\\<spadesuit> \\<subseteq> B\\<^sup>\\<spadesuit>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> B \\<Longrightarrow>\n    A\\<^sup>\\<spadesuit> \\<subseteq> B\\<^sup>\\<spadesuit>", "by (auto dest: alllsts_mono)"], ["", "subsubsection\\<open>Facts about finite llists\\<close>"], ["", "lemma finlsts_empty [simp]: \"{}\\<^sup>\\<star> = {LNil}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {}\\<^sup>\\<star> = {LNil}", "by (auto elim: finlsts.cases)"], ["", "lemma finsubsetall: \"x \\<in> A\\<^sup>\\<star> \\<Longrightarrow> x \\<in> A\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> A\\<^sup>\\<star> \\<Longrightarrow> x \\<in> A\\<^sup>\\<infinity>", "by (induct rule: finlsts.induct) auto"], ["", "lemma finlsts_mono:\n\"A\\<subseteq>B \\<Longrightarrow> A\\<^sup>\\<star> \\<subseteq> B\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> B \\<Longrightarrow>\n    A\\<^sup>\\<star> \\<subseteq> B\\<^sup>\\<star>", "by (auto, erule finlsts.induct) auto"], ["", "lemmas finlstsp_mono [mono] = finlsts_mono [to_pred pred_subset_eq]"], ["", "lemma finlsts_induct\n  [case_names LNil_fin LCons_fin, induct set: finlsts, consumes 1]:\n  assumes xA: \"x \\<in> A\\<^sup>\\<star>\"\n  and lnil: \"\\<And>l. l = LNil \\<Longrightarrow> P l\"\n  and lcons: \"\\<And>a l. \\<lbrakk>l \\<in> A\\<^sup>\\<star>; P l; a \\<in> A\\<rbrakk> \\<Longrightarrow> P (a ## l)\"\n  shows \"P x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P x", "using xA"], ["proof (prove)\nusing this:\n  x \\<in> A\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. P x", "by (induct \"x\") (auto intro: lnil lcons)"], ["", "lemma finite_lemma:\n  assumes \"x \\<in> A\\<^sup>\\<star>\"\n  shows \"x \\<in> B\\<^sup>\\<infinity> \\<Longrightarrow> x \\<in> B\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> B\\<^sup>\\<infinity> \\<Longrightarrow> x \\<in> B\\<^sup>\\<star>", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> A\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. x \\<in> B\\<^sup>\\<infinity> \\<Longrightarrow> x \\<in> B\\<^sup>\\<star>", "proof (induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>l = LNil; l \\<in> B\\<^sup>\\<infinity>\\<rbrakk>\n       \\<Longrightarrow> l \\<in> B\\<^sup>\\<star>\n 2. \\<And>a l.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>;\n        l \\<in> B\\<^sup>\\<infinity> \\<Longrightarrow>\n        l \\<in> B\\<^sup>\\<star>;\n        a \\<in> A; a ## l \\<in> B\\<^sup>\\<infinity>\\<rbrakk>\n       \\<Longrightarrow> a ## l \\<in> B\\<^sup>\\<star>", "case LNil_fin"], ["proof (state)\nthis:\n  l_ = LNil\n  l_ \\<in> B\\<^sup>\\<infinity>\n\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>l = LNil; l \\<in> B\\<^sup>\\<infinity>\\<rbrakk>\n       \\<Longrightarrow> l \\<in> B\\<^sup>\\<star>\n 2. \\<And>a l.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>;\n        l \\<in> B\\<^sup>\\<infinity> \\<Longrightarrow>\n        l \\<in> B\\<^sup>\\<star>;\n        a \\<in> A; a ## l \\<in> B\\<^sup>\\<infinity>\\<rbrakk>\n       \\<Longrightarrow> a ## l \\<in> B\\<^sup>\\<star>", "thus ?case"], ["proof (prove)\nusing this:\n  l_ = LNil\n  l_ \\<in> B\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. l_ \\<in> B\\<^sup>\\<star>", "by auto"], ["proof (state)\nthis:\n  l_ \\<in> B\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. \\<And>a l.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>;\n        l \\<in> B\\<^sup>\\<infinity> \\<Longrightarrow>\n        l \\<in> B\\<^sup>\\<star>;\n        a \\<in> A; a ## l \\<in> B\\<^sup>\\<infinity>\\<rbrakk>\n       \\<Longrightarrow> a ## l \\<in> B\\<^sup>\\<star>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a l.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>;\n        l \\<in> B\\<^sup>\\<infinity> \\<Longrightarrow>\n        l \\<in> B\\<^sup>\\<star>;\n        a \\<in> A; a ## l \\<in> B\\<^sup>\\<infinity>\\<rbrakk>\n       \\<Longrightarrow> a ## l \\<in> B\\<^sup>\\<star>", "case (LCons_fin a l)"], ["proof (state)\nthis:\n  l \\<in> A\\<^sup>\\<star>\n  l \\<in> B\\<^sup>\\<infinity> \\<Longrightarrow> l \\<in> B\\<^sup>\\<star>\n  a \\<in> A\n  a ## l \\<in> B\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. \\<And>a l.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>;\n        l \\<in> B\\<^sup>\\<infinity> \\<Longrightarrow>\n        l \\<in> B\\<^sup>\\<star>;\n        a \\<in> A; a ## l \\<in> B\\<^sup>\\<infinity>\\<rbrakk>\n       \\<Longrightarrow> a ## l \\<in> B\\<^sup>\\<star>", "thus ?case"], ["proof (prove)\nusing this:\n  l \\<in> A\\<^sup>\\<star>\n  l \\<in> B\\<^sup>\\<infinity> \\<Longrightarrow> l \\<in> B\\<^sup>\\<star>\n  a \\<in> A\n  a ## l \\<in> B\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. a ## l \\<in> B\\<^sup>\\<star>", "using LCons_fin"], ["proof (prove)\nusing this:\n  l \\<in> A\\<^sup>\\<star>\n  l \\<in> B\\<^sup>\\<infinity> \\<Longrightarrow> l \\<in> B\\<^sup>\\<star>\n  a \\<in> A\n  a ## l \\<in> B\\<^sup>\\<infinity>\n  l \\<in> A\\<^sup>\\<star>\n  l \\<in> B\\<^sup>\\<infinity> \\<Longrightarrow> l \\<in> B\\<^sup>\\<star>\n  a \\<in> A\n  a ## l \\<in> B\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. a ## l \\<in> B\\<^sup>\\<star>", "by (cases \"a##l\") auto"], ["proof (state)\nthis:\n  a ## l \\<in> B\\<^sup>\\<star>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fin_finite [dest]:\nassumes \"r \\<in> A\\<^sup>\\<star>\" \"r \\<notin> UNIV\\<^sup>\\<star>\"\n  shows \"False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. False", "have \"A \\<subseteq> UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> UNIV", "by auto"], ["proof (state)\nthis:\n  A \\<subseteq> UNIV\n\ngoal (1 subgoal):\n 1. False", "hence \"A\\<^sup>\\<star> \\<subseteq> UNIV\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  A \\<subseteq> UNIV\n\ngoal (1 subgoal):\n 1. A\\<^sup>\\<star> \\<subseteq> UNIV\\<^sup>\\<star>", "by (rule finlsts_mono)"], ["proof (state)\nthis:\n  A\\<^sup>\\<star> \\<subseteq> UNIV\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. False", "thus ?thesis"], ["proof (prove)\nusing this:\n  A\\<^sup>\\<star> \\<subseteq> UNIV\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. False", "using assms"], ["proof (prove)\nusing this:\n  A\\<^sup>\\<star> \\<subseteq> UNIV\\<^sup>\\<star>\n  r \\<in> A\\<^sup>\\<star>\n  r \\<notin> UNIV\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma finT_simp [simp]:\n  \"r \\<in> A\\<^sup>\\<star> \\<Longrightarrow> r\\<in>UNIV\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> A\\<^sup>\\<star> \\<Longrightarrow> r \\<in> UNIV\\<^sup>\\<star>", "by auto"], ["", "subsubsection\\<open>A recursion operator for finite llists\\<close>"], ["", "definition finlsts_pred :: \"('a llist \\<times> 'a llist) set\"\nwhere \"finlsts_pred \\<equiv> {(r,s). r \\<in> UNIV\\<^sup>\\<star> \\<and> (\\<exists>a. a##r = s)}\""], ["", "definition finlsts_rec :: \"['b, ['a, 'a llist, 'b] \\<Rightarrow> 'b] \\<Rightarrow> 'a llist \\<Rightarrow> 'b\"\nwhere\n  \"finlsts_rec c d r \\<equiv> if r \\<in> UNIV\\<^sup>\\<star>\n  then (wfrec finlsts_pred (%f. case_llist c (%a r. d a r (f r))) r)\n  else undefined\""], ["", "lemma finlsts_predI: \"r \\<in> A\\<^sup>\\<star> \\<Longrightarrow> (r, a##r) \\<in> finlsts_pred\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> A\\<^sup>\\<star> \\<Longrightarrow> (r, a ## r) \\<in> finlsts_pred", "by (auto simp: finlsts_pred_def)"], ["", "lemma wf_finlsts_pred: \"wf finlsts_pred\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf finlsts_pred", "proof (rule wfI [of _ \"UNIV\\<^sup>\\<star>\"])"], ["proof (state)\ngoal (2 subgoals):\n 1. finlsts_pred \\<subseteq> UNIV\\<^sup>\\<star> \\<times> ?B\n 2. \\<And>x P.\n       \\<lbrakk>\\<forall>x.\n                   (\\<forall>y.\n                       (y, x) \\<in> finlsts_pred \\<longrightarrow>\n                       P y) \\<longrightarrow>\n                   P x;\n        x \\<in> UNIV\\<^sup>\\<star>; x \\<in> ?B\\<rbrakk>\n       \\<Longrightarrow> P x", "show \"finlsts_pred \\<subseteq> UNIV\\<^sup>\\<star> \\<times> UNIV\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finlsts_pred \\<subseteq> UNIV\\<^sup>\\<star> \\<times> UNIV\\<^sup>\\<star>", "by (auto simp: finlsts_pred_def elim: finlsts.cases)"], ["proof (state)\nthis:\n  finlsts_pred \\<subseteq> UNIV\\<^sup>\\<star> \\<times> UNIV\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. \\<And>x P.\n       \\<lbrakk>\\<forall>x.\n                   (\\<forall>y.\n                       (y, x) \\<in> finlsts_pred \\<longrightarrow>\n                       P y) \\<longrightarrow>\n                   P x;\n        x \\<in> UNIV\\<^sup>\\<star>; x \\<in> UNIV\\<^sup>\\<star>\\<rbrakk>\n       \\<Longrightarrow> P x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x P.\n       \\<lbrakk>\\<forall>x.\n                   (\\<forall>y.\n                       (y, x) \\<in> finlsts_pred \\<longrightarrow>\n                       P y) \\<longrightarrow>\n                   P x;\n        x \\<in> UNIV\\<^sup>\\<star>; x \\<in> UNIV\\<^sup>\\<star>\\<rbrakk>\n       \\<Longrightarrow> P x", "fix x::\"'a llist\" and P::\"'a llist \\<Rightarrow> bool\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x P.\n       \\<lbrakk>\\<forall>x.\n                   (\\<forall>y.\n                       (y, x) \\<in> finlsts_pred \\<longrightarrow>\n                       P y) \\<longrightarrow>\n                   P x;\n        x \\<in> UNIV\\<^sup>\\<star>; x \\<in> UNIV\\<^sup>\\<star>\\<rbrakk>\n       \\<Longrightarrow> P x", "assume xfin: \"x \\<in> UNIV\\<^sup>\\<star>\" and H [unfolded finlsts_pred_def]:\n    \"(\\<forall>x. (\\<forall>y. (y, x) \\<in> finlsts_pred \\<longrightarrow> P y) \\<longrightarrow> P x)\""], ["proof (state)\nthis:\n  x \\<in> UNIV\\<^sup>\\<star>\n  \\<forall>x.\n     (\\<forall>y.\n         (y, x)\n         \\<in> {(r, s).\n                r \\<in> UNIV\\<^sup>\\<star> \\<and>\n                (\\<exists>a. a ## r = s)} \\<longrightarrow>\n         P y) \\<longrightarrow>\n     P x\n\ngoal (1 subgoal):\n 1. \\<And>x P.\n       \\<lbrakk>\\<forall>x.\n                   (\\<forall>y.\n                       (y, x) \\<in> finlsts_pred \\<longrightarrow>\n                       P y) \\<longrightarrow>\n                   P x;\n        x \\<in> UNIV\\<^sup>\\<star>; x \\<in> UNIV\\<^sup>\\<star>\\<rbrakk>\n       \\<Longrightarrow> P x", "from  xfin"], ["proof (chain)\npicking this:\n  x \\<in> UNIV\\<^sup>\\<star>", "show \"P x\""], ["proof (prove)\nusing this:\n  x \\<in> UNIV\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. P x", "proof(induct x)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>l. l = LNil \\<Longrightarrow> P l\n 2. \\<And>a l.\n       \\<lbrakk>l \\<in> UNIV\\<^sup>\\<star>; P l; a \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> P (a ## l)", "case LNil_fin"], ["proof (state)\nthis:\n  l_ = LNil\n\ngoal (2 subgoals):\n 1. \\<And>l. l = LNil \\<Longrightarrow> P l\n 2. \\<And>a l.\n       \\<lbrakk>l \\<in> UNIV\\<^sup>\\<star>; P l; a \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> P (a ## l)", "with H"], ["proof (chain)\npicking this:\n  \\<forall>x.\n     (\\<forall>y.\n         (y, x)\n         \\<in> {(r, s).\n                r \\<in> UNIV\\<^sup>\\<star> \\<and>\n                (\\<exists>a. a ## r = s)} \\<longrightarrow>\n         P y) \\<longrightarrow>\n     P x\n  l_ = LNil", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>x.\n     (\\<forall>y.\n         (y, x)\n         \\<in> {(r, s).\n                r \\<in> UNIV\\<^sup>\\<star> \\<and>\n                (\\<exists>a. a ## r = s)} \\<longrightarrow>\n         P y) \\<longrightarrow>\n     P x\n  l_ = LNil\n\ngoal (1 subgoal):\n 1. P l_", "by blast"], ["proof (state)\nthis:\n  P l_\n\ngoal (1 subgoal):\n 1. \\<And>a l.\n       \\<lbrakk>l \\<in> UNIV\\<^sup>\\<star>; P l; a \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> P (a ## l)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a l.\n       \\<lbrakk>l \\<in> UNIV\\<^sup>\\<star>; P l; a \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> P (a ## l)", "case (LCons_fin a l)"], ["proof (state)\nthis:\n  l \\<in> UNIV\\<^sup>\\<star>\n  P l\n  a \\<in> UNIV\n\ngoal (1 subgoal):\n 1. \\<And>a l.\n       \\<lbrakk>l \\<in> UNIV\\<^sup>\\<star>; P l; a \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> P (a ## l)", "with H"], ["proof (chain)\npicking this:\n  \\<forall>x.\n     (\\<forall>y.\n         (y, x)\n         \\<in> {(r, s).\n                r \\<in> UNIV\\<^sup>\\<star> \\<and>\n                (\\<exists>a. a ## r = s)} \\<longrightarrow>\n         P y) \\<longrightarrow>\n     P x\n  l \\<in> UNIV\\<^sup>\\<star>\n  P l\n  a \\<in> UNIV", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>x.\n     (\\<forall>y.\n         (y, x)\n         \\<in> {(r, s).\n                r \\<in> UNIV\\<^sup>\\<star> \\<and>\n                (\\<exists>a. a ## r = s)} \\<longrightarrow>\n         P y) \\<longrightarrow>\n     P x\n  l \\<in> UNIV\\<^sup>\\<star>\n  P l\n  a \\<in> UNIV\n\ngoal (1 subgoal):\n 1. P (a ## l)", "by blast"], ["proof (state)\nthis:\n  P (a ## l)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma finlsts_rec_LNil: \"finlsts_rec c d LNil = c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finlsts_rec c d LNil = c", "by (auto simp: wf_finlsts_pred finlsts_rec_def wfrec)"], ["", "lemma finlsts_rec_LCons:\n \"r \\<in> A\\<^sup>\\<star> \\<Longrightarrow> finlsts_rec c d (a ## r) = d a r (finlsts_rec c d r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> A\\<^sup>\\<star> \\<Longrightarrow>\n    finlsts_rec c d (a ## r) = d a r (finlsts_rec c d r)", "by (auto simp: wf_finlsts_pred finlsts_rec_def wfrec cut_def intro: finlsts_predI)"], ["", "lemma finlsts_rec_LNil_def:\n  \"f \\<equiv> finlsts_rec c d \\<Longrightarrow> f LNil = c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<equiv> finlsts_rec c d \\<Longrightarrow> f LNil = c", "by (auto simp: finlsts_rec_LNil)"], ["", "lemma finlsts_rec_LCons_def:\n  \"\\<lbrakk> f \\<equiv> finlsts_rec c d; r \\<in> A\\<^sup>\\<star> \\<rbrakk> \\<Longrightarrow> f (a ## r) = d a r (f r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>f \\<equiv> finlsts_rec c d; r \\<in> A\\<^sup>\\<star>\\<rbrakk>\n    \\<Longrightarrow> f (a ## r) = d a r (f r)", "by (auto simp: finlsts_rec_LCons)"], ["", "subsubsection\\<open>Facts about non-empty (positive) finite llists\\<close>"], ["", "lemma fpslsts_iff [iff]:\n  \"(s \\<in> A\\<^sup>\\<clubsuit>) = (s \\<in> A\\<^sup>\\<star> \\<and> s \\<noteq> LNil)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s \\<in> A\\<^sup>\\<clubsuit>) =\n    (s \\<in> A\\<^sup>\\<star> \\<and> s \\<noteq> LNil)", "by (auto simp: fpslsts_def)"], ["", "lemma fpslsts_empty [simp]: \"{}\\<^sup>\\<clubsuit> = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {}\\<^sup>\\<clubsuit> = {}", "by auto"], ["", "lemma fpslsts_mono:\n  \"A \\<subseteq> B \\<Longrightarrow> A\\<^sup>\\<clubsuit> \\<subseteq> B\\<^sup>\\<clubsuit>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> B \\<Longrightarrow>\n    A\\<^sup>\\<clubsuit> \\<subseteq> B\\<^sup>\\<clubsuit>", "by (auto dest: finlsts_mono)"], ["", "lemma fpslsts_cases [case_names LCons, cases set: fpslsts]:\nassumes rfps: \"r \\<in> A\\<^sup>\\<clubsuit>\"\n  and H: \"\\<And> a rs. \\<lbrakk> r = a ## rs; a\\<in>A; rs \\<in> A\\<^sup>\\<star> \\<rbrakk> \\<Longrightarrow> R\"\n  shows \"R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. R", "from rfps"], ["proof (chain)\npicking this:\n  r \\<in> A\\<^sup>\\<clubsuit>", "have \"r \\<in> A\\<^sup>\\<star>\" and \"r \\<noteq> LNil\""], ["proof (prove)\nusing this:\n  r \\<in> A\\<^sup>\\<clubsuit>\n\ngoal (1 subgoal):\n 1. r \\<in> A\\<^sup>\\<star> &&& r \\<noteq> LNil", "by auto"], ["proof (state)\nthis:\n  r \\<in> A\\<^sup>\\<star>\n  r \\<noteq> LNil\n\ngoal (1 subgoal):\n 1. R", "thus ?thesis"], ["proof (prove)\nusing this:\n  r \\<in> A\\<^sup>\\<star>\n  r \\<noteq> LNil\n\ngoal (1 subgoal):\n 1. R", "by (cases r, simp) (blast intro!: H)"], ["proof (state)\nthis:\n  R\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>Facts about infinite llists\\<close>"], ["", "lemma inflstsI [intro]:\n  \"\\<lbrakk> x \\<in> A\\<^sup>\\<infinity>; x \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow> False \\<rbrakk> \\<Longrightarrow> x \\<in> A\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> A\\<^sup>\\<infinity>;\n     x \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow> False\\<rbrakk>\n    \\<Longrightarrow> x \\<in> A\\<^sup>\\<omega>", "unfolding inflsts_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> A\\<^sup>\\<infinity>;\n     x \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow> False\\<rbrakk>\n    \\<Longrightarrow> x \\<in> A\\<^sup>\\<infinity> - UNIV\\<^sup>\\<star>", "by clarsimp"], ["", "lemma inflstsE [elim]:\n  \"\\<lbrakk> x \\<in> A\\<^sup>\\<omega>; \\<lbrakk> x \\<in> A\\<^sup>\\<infinity>; x \\<notin> UNIV\\<^sup>\\<star> \\<rbrakk> \\<Longrightarrow> R \\<rbrakk> \\<Longrightarrow> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> A\\<^sup>\\<omega>;\n     \\<lbrakk>x \\<in> A\\<^sup>\\<infinity>;\n      x \\<notin> UNIV\\<^sup>\\<star>\\<rbrakk>\n     \\<Longrightarrow> R\\<rbrakk>\n    \\<Longrightarrow> R", "by (unfold inflsts_def) auto"], ["", "lemma inflsts_empty [simp]: \"{}\\<^sup>\\<omega> = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {}\\<^sup>\\<omega> = {}", "by auto"], ["", "lemma infsubsetall: \"x \\<in> A\\<^sup>\\<omega> \\<Longrightarrow> x \\<in> A\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> A\\<^sup>\\<omega> \\<Longrightarrow> x \\<in> A\\<^sup>\\<infinity>", "by (auto intro: finite_lemma finsubsetall)"], ["", "lemma inflsts_mono:\n  \"A \\<subseteq> B \\<Longrightarrow> A\\<^sup>\\<omega> \\<subseteq> B\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> B \\<Longrightarrow>\n    A\\<^sup>\\<omega> \\<subseteq> B\\<^sup>\\<omega>", "by (blast dest: alllsts_mono infsubsetall)"], ["", "lemma inflsts_cases [case_names LCons, cases set: inflsts, consumes 1]:\n  assumes sinf: \"s \\<in> A\\<^sup>\\<omega>\"\n  and R: \"\\<And>a l. \\<lbrakk> l \\<in> A\\<^sup>\\<omega>; a \\<in> A; s = a ## l \\<rbrakk> \\<Longrightarrow> R\"\n  shows \"R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. R", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. R", "from sinf"], ["proof (chain)\npicking this:\n  s \\<in> A\\<^sup>\\<omega>", "have \"s \\<in> A\\<^sup>\\<infinity>\" \"s \\<notin> UNIV\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  s \\<in> A\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. s \\<in> A\\<^sup>\\<infinity> &&& s \\<notin> UNIV\\<^sup>\\<star>", "by auto"], ["proof (state)\nthis:\n  s \\<in> A\\<^sup>\\<infinity>\n  s \\<notin> UNIV\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. R", "then"], ["proof (chain)\npicking this:\n  s \\<in> A\\<^sup>\\<infinity>\n  s \\<notin> UNIV\\<^sup>\\<star>", "obtain a l where \"l \\<in> A\\<^sup>\\<omega>\" and \"a\\<in>A\" and \"s = a ## l\""], ["proof (prove)\nusing this:\n  s \\<in> A\\<^sup>\\<infinity>\n  s \\<notin> UNIV\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. (\\<And>l a.\n        \\<lbrakk>l \\<in> A\\<^sup>\\<omega>; a \\<in> A; s = a ## l\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (cases \"s\") auto"], ["proof (state)\nthis:\n  l \\<in> A\\<^sup>\\<omega>\n  a \\<in> A\n  s = a ## l\n\ngoal (1 subgoal):\n 1. R", "thus ?thesis"], ["proof (prove)\nusing this:\n  l \\<in> A\\<^sup>\\<omega>\n  a \\<in> A\n  s = a ## l\n\ngoal (1 subgoal):\n 1. R", "by (rule R)"], ["proof (state)\nthis:\n  R\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inflstsI2: \"\\<lbrakk>a \\<in> A; t \\<in> A\\<^sup>\\<omega>\\<rbrakk> \\<Longrightarrow> a ## t \\<in> A\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>a \\<in> A; t \\<in> A\\<^sup>\\<omega>\\<rbrakk>\n    \\<Longrightarrow> a ## t \\<in> A\\<^sup>\\<omega>", "by  (auto elim: finlsts.cases)"], ["", "lemma infT_simp [simp]:\n  \"r \\<in> A\\<^sup>\\<omega> \\<Longrightarrow> r\\<in>UNIV\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> A\\<^sup>\\<omega> \\<Longrightarrow> r \\<in> UNIV\\<^sup>\\<omega>", "by auto"], ["", "lemma  alllstsE [consumes 1, case_names finite infinite]:\n  \"\\<lbrakk> x\\<in>A\\<^sup>\\<infinity>; x \\<in> A\\<^sup>\\<star> \\<Longrightarrow> P; x \\<in> A\\<^sup>\\<omega> \\<Longrightarrow> P \\<rbrakk> \\<Longrightarrow> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> A\\<^sup>\\<infinity>;\n     x \\<in> A\\<^sup>\\<star> \\<Longrightarrow> P;\n     x \\<in> A\\<^sup>\\<omega> \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> P", "by (auto intro: finite_lemma simp: inflsts_def)"], ["", "lemma fin_inf_cases [case_names finite infinite]:\n  \"\\<lbrakk> r\\<in>UNIV\\<^sup>\\<star> \\<Longrightarrow> P; r \\<in> UNIV\\<^sup>\\<omega> \\<Longrightarrow> P \\<rbrakk> \\<Longrightarrow> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow> P;\n     r \\<in> UNIV\\<^sup>\\<omega> \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> P", "by auto"], ["", "lemma  fin_Int_inf: \"A\\<^sup>\\<star> \\<inter> A\\<^sup>\\<omega> = {}\"\n  and   fin_Un_inf: \"A\\<^sup>\\<star> \\<union> A\\<^sup>\\<omega> = A\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A\\<^sup>\\<star> \\<inter> A\\<^sup>\\<omega> = {} &&&\n    A\\<^sup>\\<star> \\<union> A\\<^sup>\\<omega> = A\\<^sup>\\<infinity>", "by (auto intro: finite_lemma finsubsetall)"], ["", "lemma notfin_inf [iff]: \"(x \\<notin> UNIV\\<^sup>\\<star>) = (x \\<in> UNIV\\<^sup>\\<omega>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<notin> UNIV\\<^sup>\\<star>) = (x \\<in> UNIV\\<^sup>\\<omega>)", "by auto"], ["", "lemma notinf_fin [iff]: \"(x \\<notin> UNIV\\<^sup>\\<omega>) = (x \\<in> UNIV\\<^sup>\\<star>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<notin> UNIV\\<^sup>\\<omega>) = (x \\<in> UNIV\\<^sup>\\<star>)", "by auto"], ["", "subsection\\<open>Lappend\\<close>"], ["", "subsubsection\\<open>Simplification\\<close>"], ["", "lemma lapp_inf [simp]:\n  assumes \"s \\<in> A\\<^sup>\\<omega>\"\n  shows \"s @@ t = s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s @@ t = s", "using assms"], ["proof (prove)\nusing this:\n  s \\<in> A\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. s @@ t = s", "by(coinduction arbitrary: s)(auto elim: inflsts_cases)"], ["", "lemma LNil_is_lappend_conv [iff]:\n\"(LNil = s @@ t) = (s = LNil \\<and> t = LNil)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (LNil = s @@ t) = (s = LNil \\<and> t = LNil)", "by (cases \"s\") auto"], ["", "lemma lappend_is_LNil_conv [iff]:\n  \"(s @@ t = LNil) = (s = LNil \\<and> t = LNil)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s @@ t = LNil) = (s = LNil \\<and> t = LNil)", "by (cases \"s\") auto"], ["", "lemma same_lappend_eq [iff]:\n \"r \\<in> A\\<^sup>\\<star> \\<Longrightarrow> (r @@ s = r @@ t) = (s = t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> A\\<^sup>\\<star> \\<Longrightarrow> (r @@ s = r @@ t) = (s = t)", "by (erule finlsts.induct) simp+"], ["", "subsubsection\\<open>Typing rules\\<close>"], ["", "lemma lappT: \n  assumes sllist: \"s \\<in> A\\<^sup>\\<infinity>\"\n  and tllist: \"t \\<in> A\\<^sup>\\<infinity>\"\n  shows \"s@@t \\<in> A\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s @@ t \\<in> A\\<^sup>\\<infinity>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. s @@ t \\<in> A\\<^sup>\\<infinity>", "from assms"], ["proof (chain)\npicking this:\n  s \\<in> A\\<^sup>\\<infinity>\n  t \\<in> A\\<^sup>\\<infinity>", "have \"lappend s t \\<in> (\\<Union>u\\<in>A\\<^sup>\\<infinity>. \\<Union>v\\<in>A\\<^sup>\\<infinity>. {lappend u v})\""], ["proof (prove)\nusing this:\n  s \\<in> A\\<^sup>\\<infinity>\n  t \\<in> A\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. s @@ t\n    \\<in> (\\<Union>u\\<in>A\\<^sup>\\<infinity>.\n              \\<Union>v\\<in>A\\<^sup>\\<infinity>. {u @@ v})", "by fast"], ["proof (state)\nthis:\n  s @@ t\n  \\<in> (\\<Union>u\\<in>A\\<^sup>\\<infinity>.\n            \\<Union>v\\<in>A\\<^sup>\\<infinity>. {u @@ v})\n\ngoal (1 subgoal):\n 1. s @@ t \\<in> A\\<^sup>\\<infinity>", "thus ?thesis"], ["proof (prove)\nusing this:\n  s @@ t\n  \\<in> (\\<Union>u\\<in>A\\<^sup>\\<infinity>.\n            \\<Union>v\\<in>A\\<^sup>\\<infinity>. {u @@ v})\n\ngoal (1 subgoal):\n 1. s @@ t \\<in> A\\<^sup>\\<infinity>", "proof coinduct"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Union>u\\<in>A\\<^sup>\\<infinity>.\n                   \\<Union>v\\<in>A\\<^sup>\\<infinity>.\n                      {u @@ v}) \\<Longrightarrow>\n       x = LNil \\<or>\n       (\\<exists>l a.\n           x = a ## l \\<and>\n           (l \\<in> (\\<Union>u\\<in>A\\<^sup>\\<infinity>.\n                        \\<Union>v\\<in>A\\<^sup>\\<infinity>. {u @@ v}) \\<or>\n            l \\<in> A\\<^sup>\\<infinity>) \\<and>\n           a \\<in> A)", "case (alllsts z)"], ["proof (state)\nthis:\n  z \\<in> (\\<Union>u\\<in>A\\<^sup>\\<infinity>.\n              \\<Union>v\\<in>A\\<^sup>\\<infinity>. {u @@ v})\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Union>u\\<in>A\\<^sup>\\<infinity>.\n                   \\<Union>v\\<in>A\\<^sup>\\<infinity>.\n                      {u @@ v}) \\<Longrightarrow>\n       x = LNil \\<or>\n       (\\<exists>l a.\n           x = a ## l \\<and>\n           (l \\<in> (\\<Union>u\\<in>A\\<^sup>\\<infinity>.\n                        \\<Union>v\\<in>A\\<^sup>\\<infinity>. {u @@ v}) \\<or>\n            l \\<in> A\\<^sup>\\<infinity>) \\<and>\n           a \\<in> A)", "then"], ["proof (chain)\npicking this:\n  z \\<in> (\\<Union>u\\<in>A\\<^sup>\\<infinity>.\n              \\<Union>v\\<in>A\\<^sup>\\<infinity>. {u @@ v})", "obtain u v where ullist: \"u\\<in>A\\<^sup>\\<infinity>\" and vllist: \"v\\<in>A\\<^sup>\\<infinity>\"\n      and zapp: \"z=u @@ v\""], ["proof (prove)\nusing this:\n  z \\<in> (\\<Union>u\\<in>A\\<^sup>\\<infinity>.\n              \\<Union>v\\<in>A\\<^sup>\\<infinity>. {u @@ v})\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>u \\<in> A\\<^sup>\\<infinity>; v \\<in> A\\<^sup>\\<infinity>;\n         z = u @@ v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  u \\<in> A\\<^sup>\\<infinity>\n  v \\<in> A\\<^sup>\\<infinity>\n  z = u @@ v\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<Union>u\\<in>A\\<^sup>\\<infinity>.\n                   \\<Union>v\\<in>A\\<^sup>\\<infinity>.\n                      {u @@ v}) \\<Longrightarrow>\n       x = LNil \\<or>\n       (\\<exists>l a.\n           x = a ## l \\<and>\n           (l \\<in> (\\<Union>u\\<in>A\\<^sup>\\<infinity>.\n                        \\<Union>v\\<in>A\\<^sup>\\<infinity>. {u @@ v}) \\<or>\n            l \\<in> A\\<^sup>\\<infinity>) \\<and>\n           a \\<in> A)", "thus ?case"], ["proof (prove)\nusing this:\n  u \\<in> A\\<^sup>\\<infinity>\n  v \\<in> A\\<^sup>\\<infinity>\n  z = u @@ v\n\ngoal (1 subgoal):\n 1. z = LNil \\<or>\n    (\\<exists>l a.\n        z = a ## l \\<and>\n        (l \\<in> (\\<Union>u\\<in>A\\<^sup>\\<infinity>.\n                     \\<Union>v\\<in>A\\<^sup>\\<infinity>. {u @@ v}) \\<or>\n         l \\<in> A\\<^sup>\\<infinity>) \\<and>\n        a \\<in> A)", "by (cases \"u\") (auto elim: alllsts.cases)"], ["proof (state)\nthis:\n  z = LNil \\<or>\n  (\\<exists>l a.\n      z = a ## l \\<and>\n      (l \\<in> (\\<Union>u\\<in>A\\<^sup>\\<infinity>.\n                   \\<Union>v\\<in>A\\<^sup>\\<infinity>. {u @@ v}) \\<or>\n       l \\<in> A\\<^sup>\\<infinity>) \\<and>\n      a \\<in> A)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  s @@ t \\<in> A\\<^sup>\\<infinity>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lappfin_finT: \"\\<lbrakk> s \\<in> A\\<^sup>\\<star>; t \\<in> A\\<^sup>\\<star> \\<rbrakk> \\<Longrightarrow> s@@t \\<in> A\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<in> A\\<^sup>\\<star>; t \\<in> A\\<^sup>\\<star>\\<rbrakk>\n    \\<Longrightarrow> s @@ t \\<in> A\\<^sup>\\<star>", "by (induct rule: finlsts.induct) auto"], ["", "lemma lapp_fin_fin_lemma:\n  assumes rsA: \"r @@ s \\<in> A\\<^sup>\\<star>\"\n  shows \"r \\<in> A\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> A\\<^sup>\\<star>", "using rsA"], ["proof (prove)\nusing this:\n  r @@ s \\<in> A\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. r \\<in> A\\<^sup>\\<star>", "proof(induct l\\<equiv>\"r@@s\" arbitrary: r)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>r. r @@ s = LNil \\<Longrightarrow> r \\<in> A\\<^sup>\\<star>\n 2. \\<And>a l r.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>;\n        \\<And>r. l = r @@ s \\<Longrightarrow> r \\<in> A\\<^sup>\\<star>;\n        a \\<in> A; a ## l = r @@ s\\<rbrakk>\n       \\<Longrightarrow> r \\<in> A\\<^sup>\\<star>", "case LNil_fin"], ["proof (state)\nthis:\n  r @@ s = LNil\n\ngoal (2 subgoals):\n 1. \\<And>r. r @@ s = LNil \\<Longrightarrow> r \\<in> A\\<^sup>\\<star>\n 2. \\<And>a l r.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>;\n        \\<And>r. l = r @@ s \\<Longrightarrow> r \\<in> A\\<^sup>\\<star>;\n        a \\<in> A; a ## l = r @@ s\\<rbrakk>\n       \\<Longrightarrow> r \\<in> A\\<^sup>\\<star>", "thus ?case"], ["proof (prove)\nusing this:\n  r @@ s = LNil\n\ngoal (1 subgoal):\n 1. r \\<in> A\\<^sup>\\<star>", "by auto"], ["proof (state)\nthis:\n  r \\<in> A\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. \\<And>a l r.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>;\n        \\<And>r. l = r @@ s \\<Longrightarrow> r \\<in> A\\<^sup>\\<star>;\n        a \\<in> A; a ## l = r @@ s\\<rbrakk>\n       \\<Longrightarrow> r \\<in> A\\<^sup>\\<star>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a l r.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>;\n        \\<And>r. l = r @@ s \\<Longrightarrow> r \\<in> A\\<^sup>\\<star>;\n        a \\<in> A; a ## l = r @@ s\\<rbrakk>\n       \\<Longrightarrow> r \\<in> A\\<^sup>\\<star>", "case (LCons_fin a l')"], ["proof (state)\nthis:\n  l' \\<in> A\\<^sup>\\<star>\n  l' = ?r @@ s \\<Longrightarrow> ?r \\<in> A\\<^sup>\\<star>\n  a \\<in> A\n  a ## l' = r @@ s\n\ngoal (1 subgoal):\n 1. \\<And>a l r.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>;\n        \\<And>r. l = r @@ s \\<Longrightarrow> r \\<in> A\\<^sup>\\<star>;\n        a \\<in> A; a ## l = r @@ s\\<rbrakk>\n       \\<Longrightarrow> r \\<in> A\\<^sup>\\<star>", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> A\\<^sup>\\<star>", "proof (cases \"r\")"], ["proof (state)\ngoal (2 subgoals):\n 1. r = LNil \\<Longrightarrow> r \\<in> A\\<^sup>\\<star>\n 2. \\<And>x21 x22. r = x21 ## x22 \\<Longrightarrow> r \\<in> A\\<^sup>\\<star>", "case LNil"], ["proof (state)\nthis:\n  r = LNil\n\ngoal (2 subgoals):\n 1. r = LNil \\<Longrightarrow> r \\<in> A\\<^sup>\\<star>\n 2. \\<And>x21 x22. r = x21 ## x22 \\<Longrightarrow> r \\<in> A\\<^sup>\\<star>", "thus ?thesis"], ["proof (prove)\nusing this:\n  r = LNil\n\ngoal (1 subgoal):\n 1. r \\<in> A\\<^sup>\\<star>", "by auto"], ["proof (state)\nthis:\n  r \\<in> A\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22. r = x21 ## x22 \\<Longrightarrow> r \\<in> A\\<^sup>\\<star>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x21 x22. r = x21 ## x22 \\<Longrightarrow> r \\<in> A\\<^sup>\\<star>", "case (LCons x xs)"], ["proof (state)\nthis:\n  r = x ## xs\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22. r = x21 ## x22 \\<Longrightarrow> r \\<in> A\\<^sup>\\<star>", "with \\<open>a##l' = r @@ s\\<close>"], ["proof (chain)\npicking this:\n  a ## l' = r @@ s\n  r = x ## xs", "have \"a = x\" and \"l' = xs @@ s\""], ["proof (prove)\nusing this:\n  a ## l' = r @@ s\n  r = x ## xs\n\ngoal (1 subgoal):\n 1. a = x &&& l' = xs @@ s", "by auto"], ["proof (state)\nthis:\n  a = x\n  l' = xs @@ s\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22. r = x21 ## x22 \\<Longrightarrow> r \\<in> A\\<^sup>\\<star>", "with LCons_fin LCons"], ["proof (chain)\npicking this:\n  l' \\<in> A\\<^sup>\\<star>\n  l' = ?r @@ s \\<Longrightarrow> ?r \\<in> A\\<^sup>\\<star>\n  a \\<in> A\n  a ## l' = r @@ s\n  r = x ## xs\n  a = x\n  l' = xs @@ s", "show ?thesis"], ["proof (prove)\nusing this:\n  l' \\<in> A\\<^sup>\\<star>\n  l' = ?r @@ s \\<Longrightarrow> ?r \\<in> A\\<^sup>\\<star>\n  a \\<in> A\n  a ## l' = r @@ s\n  r = x ## xs\n  a = x\n  l' = xs @@ s\n\ngoal (1 subgoal):\n 1. r \\<in> A\\<^sup>\\<star>", "by auto"], ["proof (state)\nthis:\n  r \\<in> A\\<^sup>\\<star>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  r \\<in> A\\<^sup>\\<star>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lapp_fin_fin_iff [iff]: \"(r @@ s \\<in> A\\<^sup>\\<star>) = (r \\<in> A\\<^sup>\\<star> \\<and> s \\<in> A\\<^sup>\\<star>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (r @@ s \\<in> A\\<^sup>\\<star>) =\n    (r \\<in> A\\<^sup>\\<star> \\<and> s \\<in> A\\<^sup>\\<star>)", "proof (auto intro: lappfin_finT lapp_fin_fin_lemma)"], ["proof (state)\ngoal (1 subgoal):\n 1. r @@ s \\<in> A\\<^sup>\\<star> \\<Longrightarrow> s \\<in> A\\<^sup>\\<star>", "assume rsA: \"r @@ s \\<in> A\\<^sup>\\<star>\""], ["proof (state)\nthis:\n  r @@ s \\<in> A\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. r @@ s \\<in> A\\<^sup>\\<star> \\<Longrightarrow> s \\<in> A\\<^sup>\\<star>", "hence \"r \\<in> A\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  r @@ s \\<in> A\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. r \\<in> A\\<^sup>\\<star>", "by (rule lapp_fin_fin_lemma)"], ["proof (state)\nthis:\n  r \\<in> A\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. r @@ s \\<in> A\\<^sup>\\<star> \\<Longrightarrow> s \\<in> A\\<^sup>\\<star>", "hence \"r @@ s \\<in> A\\<^sup>\\<star> \\<longrightarrow> s \\<in> A\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  r \\<in> A\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. r @@ s \\<in> A\\<^sup>\\<star> \\<longrightarrow> s \\<in> A\\<^sup>\\<star>", "by (induct \"r\", simp) (auto elim: finlsts.cases)"], ["proof (state)\nthis:\n  r @@ s \\<in> A\\<^sup>\\<star> \\<longrightarrow> s \\<in> A\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. r @@ s \\<in> A\\<^sup>\\<star> \\<Longrightarrow> s \\<in> A\\<^sup>\\<star>", "with rsA"], ["proof (chain)\npicking this:\n  r @@ s \\<in> A\\<^sup>\\<star>\n  r @@ s \\<in> A\\<^sup>\\<star> \\<longrightarrow> s \\<in> A\\<^sup>\\<star>", "show \"s \\<in> A\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  r @@ s \\<in> A\\<^sup>\\<star>\n  r @@ s \\<in> A\\<^sup>\\<star> \\<longrightarrow> s \\<in> A\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. s \\<in> A\\<^sup>\\<star>", "by auto"], ["proof (state)\nthis:\n  s \\<in> A\\<^sup>\\<star>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lapp_all_invT:\nassumes rs: \"r@@s \\<in> A\\<^sup>\\<infinity>\"\n  shows \"r \\<in> A\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> A\\<^sup>\\<infinity>", "proof (cases \"r \\<in> UNIV\\<^sup>\\<star>\")"], ["proof (state)\ngoal (2 subgoals):\n 1. r \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow> r \\<in> A\\<^sup>\\<infinity>\n 2. r \\<notin> UNIV\\<^sup>\\<star> \\<Longrightarrow>\n    r \\<in> A\\<^sup>\\<infinity>", "case False"], ["proof (state)\nthis:\n  r \\<notin> UNIV\\<^sup>\\<star>\n\ngoal (2 subgoals):\n 1. r \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow> r \\<in> A\\<^sup>\\<infinity>\n 2. r \\<notin> UNIV\\<^sup>\\<star> \\<Longrightarrow>\n    r \\<in> A\\<^sup>\\<infinity>", "with rs"], ["proof (chain)\npicking this:\n  r @@ s \\<in> A\\<^sup>\\<infinity>\n  r \\<notin> UNIV\\<^sup>\\<star>", "show ?thesis"], ["proof (prove)\nusing this:\n  r @@ s \\<in> A\\<^sup>\\<infinity>\n  r \\<notin> UNIV\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. r \\<in> A\\<^sup>\\<infinity>", "by simp"], ["proof (state)\nthis:\n  r \\<in> A\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. r \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow> r \\<in> A\\<^sup>\\<infinity>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. r \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow> r \\<in> A\\<^sup>\\<infinity>", "case True"], ["proof (state)\nthis:\n  r \\<in> UNIV\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. r \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow> r \\<in> A\\<^sup>\\<infinity>", "thus ?thesis"], ["proof (prove)\nusing this:\n  r \\<in> UNIV\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. r \\<in> A\\<^sup>\\<infinity>", "using rs"], ["proof (prove)\nusing this:\n  r \\<in> UNIV\\<^sup>\\<star>\n  r @@ s \\<in> A\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. r \\<in> A\\<^sup>\\<infinity>", "by (induct \"r\") auto"], ["proof (state)\nthis:\n  r \\<in> A\\<^sup>\\<infinity>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lapp_fin_infT: \"\\<lbrakk>s \\<in> A\\<^sup>\\<star>; t \\<in> A\\<^sup>\\<omega>\\<rbrakk> \\<Longrightarrow> s @@ t \\<in> A\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>s \\<in> A\\<^sup>\\<star>; t \\<in> A\\<^sup>\\<omega>\\<rbrakk>\n    \\<Longrightarrow> s @@ t \\<in> A\\<^sup>\\<omega>", "by (induct rule: finlsts.induct)\n     (auto intro: inflstsI2)"], ["", "lemma app_invT:\n  assumes \"r \\<in> A\\<^sup>\\<star>\" shows \"r @@ s \\<in> A\\<^sup>\\<omega> \\<Longrightarrow> s \\<in> A\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r @@ s \\<in> A\\<^sup>\\<omega> \\<Longrightarrow> s \\<in> A\\<^sup>\\<omega>", "using assms"], ["proof (prove)\nusing this:\n  r \\<in> A\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. r @@ s \\<in> A\\<^sup>\\<omega> \\<Longrightarrow> s \\<in> A\\<^sup>\\<omega>", "proof (induct arbitrary: s)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>l s.\n       \\<lbrakk>l = LNil; l @@ s \\<in> A\\<^sup>\\<omega>\\<rbrakk>\n       \\<Longrightarrow> s \\<in> A\\<^sup>\\<omega>\n 2. \\<And>a l s.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>;\n        \\<And>s.\n           l @@ s \\<in> A\\<^sup>\\<omega> \\<Longrightarrow>\n           s \\<in> A\\<^sup>\\<omega>;\n        a \\<in> A; (a ## l) @@ s \\<in> A\\<^sup>\\<omega>\\<rbrakk>\n       \\<Longrightarrow> s \\<in> A\\<^sup>\\<omega>", "case LNil_fin"], ["proof (state)\nthis:\n  l_ = LNil\n  l_ @@ s \\<in> A\\<^sup>\\<omega>\n\ngoal (2 subgoals):\n 1. \\<And>l s.\n       \\<lbrakk>l = LNil; l @@ s \\<in> A\\<^sup>\\<omega>\\<rbrakk>\n       \\<Longrightarrow> s \\<in> A\\<^sup>\\<omega>\n 2. \\<And>a l s.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>;\n        \\<And>s.\n           l @@ s \\<in> A\\<^sup>\\<omega> \\<Longrightarrow>\n           s \\<in> A\\<^sup>\\<omega>;\n        a \\<in> A; (a ## l) @@ s \\<in> A\\<^sup>\\<omega>\\<rbrakk>\n       \\<Longrightarrow> s \\<in> A\\<^sup>\\<omega>", "thus ?case"], ["proof (prove)\nusing this:\n  l_ = LNil\n  l_ @@ s \\<in> A\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. s \\<in> A\\<^sup>\\<omega>", "by simp"], ["proof (state)\nthis:\n  s \\<in> A\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. \\<And>a l s.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>;\n        \\<And>s.\n           l @@ s \\<in> A\\<^sup>\\<omega> \\<Longrightarrow>\n           s \\<in> A\\<^sup>\\<omega>;\n        a \\<in> A; (a ## l) @@ s \\<in> A\\<^sup>\\<omega>\\<rbrakk>\n       \\<Longrightarrow> s \\<in> A\\<^sup>\\<omega>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a l s.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>;\n        \\<And>s.\n           l @@ s \\<in> A\\<^sup>\\<omega> \\<Longrightarrow>\n           s \\<in> A\\<^sup>\\<omega>;\n        a \\<in> A; (a ## l) @@ s \\<in> A\\<^sup>\\<omega>\\<rbrakk>\n       \\<Longrightarrow> s \\<in> A\\<^sup>\\<omega>", "case (LCons_fin a l)"], ["proof (state)\nthis:\n  l \\<in> A\\<^sup>\\<star>\n  l @@ ?s \\<in> A\\<^sup>\\<omega> \\<Longrightarrow> ?s \\<in> A\\<^sup>\\<omega>\n  a \\<in> A\n  (a ## l) @@ s \\<in> A\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. \\<And>a l s.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>;\n        \\<And>s.\n           l @@ s \\<in> A\\<^sup>\\<omega> \\<Longrightarrow>\n           s \\<in> A\\<^sup>\\<omega>;\n        a \\<in> A; (a ## l) @@ s \\<in> A\\<^sup>\\<omega>\\<rbrakk>\n       \\<Longrightarrow> s \\<in> A\\<^sup>\\<omega>", "from \\<open>(a ## l) @@ s \\<in> A\\<^sup>\\<omega>\\<close>"], ["proof (chain)\npicking this:\n  (a ## l) @@ s \\<in> A\\<^sup>\\<omega>", "have \"a ## (l @@ s) \\<in> A\\<^sup>\\<omega>\""], ["proof (prove)\nusing this:\n  (a ## l) @@ s \\<in> A\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. a ## l @@ s \\<in> A\\<^sup>\\<omega>", "by simp"], ["proof (state)\nthis:\n  a ## l @@ s \\<in> A\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. \\<And>a l s.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>;\n        \\<And>s.\n           l @@ s \\<in> A\\<^sup>\\<omega> \\<Longrightarrow>\n           s \\<in> A\\<^sup>\\<omega>;\n        a \\<in> A; (a ## l) @@ s \\<in> A\\<^sup>\\<omega>\\<rbrakk>\n       \\<Longrightarrow> s \\<in> A\\<^sup>\\<omega>", "hence \"l @@ s \\<in> A\\<^sup>\\<omega>\""], ["proof (prove)\nusing this:\n  a ## l @@ s \\<in> A\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. l @@ s \\<in> A\\<^sup>\\<omega>", "by (auto elim: inflsts_cases)"], ["proof (state)\nthis:\n  l @@ s \\<in> A\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. \\<And>a l s.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>;\n        \\<And>s.\n           l @@ s \\<in> A\\<^sup>\\<omega> \\<Longrightarrow>\n           s \\<in> A\\<^sup>\\<omega>;\n        a \\<in> A; (a ## l) @@ s \\<in> A\\<^sup>\\<omega>\\<rbrakk>\n       \\<Longrightarrow> s \\<in> A\\<^sup>\\<omega>", "with LCons_fin"], ["proof (chain)\npicking this:\n  l \\<in> A\\<^sup>\\<star>\n  l @@ ?s \\<in> A\\<^sup>\\<omega> \\<Longrightarrow> ?s \\<in> A\\<^sup>\\<omega>\n  a \\<in> A\n  (a ## l) @@ s \\<in> A\\<^sup>\\<omega>\n  l @@ s \\<in> A\\<^sup>\\<omega>", "show \"s \\<in> A\\<^sup>\\<omega>\""], ["proof (prove)\nusing this:\n  l \\<in> A\\<^sup>\\<star>\n  l @@ ?s \\<in> A\\<^sup>\\<omega> \\<Longrightarrow> ?s \\<in> A\\<^sup>\\<omega>\n  a \\<in> A\n  (a ## l) @@ s \\<in> A\\<^sup>\\<omega>\n  l @@ s \\<in> A\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. s \\<in> A\\<^sup>\\<omega>", "by blast"], ["proof (state)\nthis:\n  s \\<in> A\\<^sup>\\<omega>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lapp_inv2T:\n  assumes rsinf: \"r @@ s \\<in> A\\<^sup>\\<omega>\"\n  shows \"r \\<in> A\\<^sup>\\<star> \\<and> s \\<in> A\\<^sup>\\<omega> \\<or> r \\<in> A\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> A\\<^sup>\\<star> \\<and> s \\<in> A\\<^sup>\\<omega> \\<or>\n    r \\<in> A\\<^sup>\\<omega>", "proof (rule disjCI)"], ["proof (state)\ngoal (1 subgoal):\n 1. r \\<notin> A\\<^sup>\\<omega> \\<Longrightarrow>\n    r \\<in> A\\<^sup>\\<star> \\<and> s \\<in> A\\<^sup>\\<omega>", "assume rnotinf: \"r \\<notin> A\\<^sup>\\<omega>\""], ["proof (state)\nthis:\n  r \\<notin> A\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. r \\<notin> A\\<^sup>\\<omega> \\<Longrightarrow>\n    r \\<in> A\\<^sup>\\<star> \\<and> s \\<in> A\\<^sup>\\<omega>", "moreover"], ["proof (state)\nthis:\n  r \\<notin> A\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. r \\<notin> A\\<^sup>\\<omega> \\<Longrightarrow>\n    r \\<in> A\\<^sup>\\<star> \\<and> s \\<in> A\\<^sup>\\<omega>", "from rsinf"], ["proof (chain)\npicking this:\n  r @@ s \\<in> A\\<^sup>\\<omega>", "have rsall: \"r@@s \\<in> A\\<^sup>\\<infinity>\""], ["proof (prove)\nusing this:\n  r @@ s \\<in> A\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. r @@ s \\<in> A\\<^sup>\\<infinity>", "by auto"], ["proof (state)\nthis:\n  r @@ s \\<in> A\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. r \\<notin> A\\<^sup>\\<omega> \\<Longrightarrow>\n    r \\<in> A\\<^sup>\\<star> \\<and> s \\<in> A\\<^sup>\\<omega>", "hence \"r \\<in> A\\<^sup>\\<infinity>\""], ["proof (prove)\nusing this:\n  r @@ s \\<in> A\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. r \\<in> A\\<^sup>\\<infinity>", "by (rule lapp_all_invT)"], ["proof (state)\nthis:\n  r \\<in> A\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. r \\<notin> A\\<^sup>\\<omega> \\<Longrightarrow>\n    r \\<in> A\\<^sup>\\<star> \\<and> s \\<in> A\\<^sup>\\<omega>", "hence \"r \\<in> A\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  r \\<in> A\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. r \\<in> A\\<^sup>\\<star>", "using rnotinf"], ["proof (prove)\nusing this:\n  r \\<in> A\\<^sup>\\<infinity>\n  r \\<notin> A\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. r \\<in> A\\<^sup>\\<star>", "by (auto elim: alllstsE)"], ["proof (state)\nthis:\n  r \\<in> A\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. r \\<notin> A\\<^sup>\\<omega> \\<Longrightarrow>\n    r \\<in> A\\<^sup>\\<star> \\<and> s \\<in> A\\<^sup>\\<omega>", "ultimately"], ["proof (chain)\npicking this:\n  r \\<notin> A\\<^sup>\\<omega>\n  r \\<in> A\\<^sup>\\<star>", "show \"r \\<in> A\\<^sup>\\<star> \\<and> s \\<in> A\\<^sup>\\<omega>\""], ["proof (prove)\nusing this:\n  r \\<notin> A\\<^sup>\\<omega>\n  r \\<in> A\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. r \\<in> A\\<^sup>\\<star> \\<and> s \\<in> A\\<^sup>\\<omega>", "using rsinf"], ["proof (prove)\nusing this:\n  r \\<notin> A\\<^sup>\\<omega>\n  r \\<in> A\\<^sup>\\<star>\n  r @@ s \\<in> A\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. r \\<in> A\\<^sup>\\<star> \\<and> s \\<in> A\\<^sup>\\<omega>", "by (auto  intro: app_invT)"], ["proof (state)\nthis:\n  r \\<in> A\\<^sup>\\<star> \\<and> s \\<in> A\\<^sup>\\<omega>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lapp_infT:\n  \"(r @@ s \\<in> A\\<^sup>\\<omega>) = (r \\<in> A\\<^sup>\\<star> \\<and> s \\<in> A\\<^sup>\\<omega> \\<or> r \\<in> A\\<^sup>\\<omega>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (r @@ s \\<in> A\\<^sup>\\<omega>) =\n    (r \\<in> A\\<^sup>\\<star> \\<and> s \\<in> A\\<^sup>\\<omega> \\<or>\n     r \\<in> A\\<^sup>\\<omega>)", "by (auto dest: lapp_inv2T intro: lapp_fin_infT)"], ["", "lemma lapp_allT_iff:\n  \"(r @@ s \\<in> A\\<^sup>\\<infinity>) = (r \\<in> A\\<^sup>\\<star> \\<and> s \\<in> A\\<^sup>\\<infinity> \\<or> r \\<in> A\\<^sup>\\<omega>)\"\n  (is \"?L = ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (r @@ s \\<in> A\\<^sup>\\<infinity>) =\n    (r \\<in> A\\<^sup>\\<star> \\<and> s \\<in> A\\<^sup>\\<infinity> \\<or>\n     r \\<in> A\\<^sup>\\<omega>)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. r @@ s \\<in> A\\<^sup>\\<infinity> \\<Longrightarrow>\n    r \\<in> A\\<^sup>\\<star> \\<and> s \\<in> A\\<^sup>\\<infinity> \\<or>\n    r \\<in> A\\<^sup>\\<omega>\n 2. r \\<in> A\\<^sup>\\<star> \\<and> s \\<in> A\\<^sup>\\<infinity> \\<or>\n    r \\<in> A\\<^sup>\\<omega> \\<Longrightarrow>\n    r @@ s \\<in> A\\<^sup>\\<infinity>", "assume ?L"], ["proof (state)\nthis:\n  r @@ s \\<in> A\\<^sup>\\<infinity>\n\ngoal (2 subgoals):\n 1. r @@ s \\<in> A\\<^sup>\\<infinity> \\<Longrightarrow>\n    r \\<in> A\\<^sup>\\<star> \\<and> s \\<in> A\\<^sup>\\<infinity> \\<or>\n    r \\<in> A\\<^sup>\\<omega>\n 2. r \\<in> A\\<^sup>\\<star> \\<and> s \\<in> A\\<^sup>\\<infinity> \\<or>\n    r \\<in> A\\<^sup>\\<omega> \\<Longrightarrow>\n    r @@ s \\<in> A\\<^sup>\\<infinity>", "thus ?R"], ["proof (prove)\nusing this:\n  r @@ s \\<in> A\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. r \\<in> A\\<^sup>\\<star> \\<and> s \\<in> A\\<^sup>\\<infinity> \\<or>\n    r \\<in> A\\<^sup>\\<omega>", "by (cases rule: alllstsE) (auto simp: lapp_infT intro: finsubsetall)"], ["proof (state)\nthis:\n  r \\<in> A\\<^sup>\\<star> \\<and> s \\<in> A\\<^sup>\\<infinity> \\<or>\n  r \\<in> A\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. r \\<in> A\\<^sup>\\<star> \\<and> s \\<in> A\\<^sup>\\<infinity> \\<or>\n    r \\<in> A\\<^sup>\\<omega> \\<Longrightarrow>\n    r @@ s \\<in> A\\<^sup>\\<infinity>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. r \\<in> A\\<^sup>\\<star> \\<and> s \\<in> A\\<^sup>\\<infinity> \\<or>\n    r \\<in> A\\<^sup>\\<omega> \\<Longrightarrow>\n    r @@ s \\<in> A\\<^sup>\\<infinity>", "assume ?R"], ["proof (state)\nthis:\n  r \\<in> A\\<^sup>\\<star> \\<and> s \\<in> A\\<^sup>\\<infinity> \\<or>\n  r \\<in> A\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. r \\<in> A\\<^sup>\\<star> \\<and> s \\<in> A\\<^sup>\\<infinity> \\<or>\n    r \\<in> A\\<^sup>\\<omega> \\<Longrightarrow>\n    r @@ s \\<in> A\\<^sup>\\<infinity>", "thus ?L"], ["proof (prove)\nusing this:\n  r \\<in> A\\<^sup>\\<star> \\<and> s \\<in> A\\<^sup>\\<infinity> \\<or>\n  r \\<in> A\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. r @@ s \\<in> A\\<^sup>\\<infinity>", "by (auto dest: finsubsetall intro: lappT)"], ["proof (state)\nthis:\n  r @@ s \\<in> A\\<^sup>\\<infinity>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Length, indexing, prefixes, and suffixes of llists\\<close>"], ["", "primrec ll2f :: \"'a llist \\<Rightarrow> nat \\<Rightarrow> 'a option\" (infix \"!!\" 100)\nwhere\n  \"l!!0 = (case l of LNil \\<Rightarrow> None | x ## xs \\<Rightarrow> Some x)\"\n| \"l!!(Suc i) = (case l of LNil \\<Rightarrow> None | x ## xs \\<Rightarrow> xs!!i)\""], ["", "primrec ltake :: \"'a llist \\<Rightarrow> nat \\<Rightarrow> 'a llist\"  (infixl \"\\<down>\" 110)\nwhere\n  \"l \\<down> 0     = LNil\"\n| \"l \\<down> Suc i = (case l of LNil \\<Rightarrow> LNil | x ## xs \\<Rightarrow> x ## ltake xs i)\""], ["", "primrec ldrop :: \"'a llist \\<Rightarrow> nat \\<Rightarrow> 'a llist\"  (infixl \"\\<up>\" 110)\nwhere\n  \"l \\<up> 0     = l\"\n| \"l \\<up> Suc i = (case l of LNil \\<Rightarrow> LNil | x ## xs \\<Rightarrow> ldrop xs i)\""], ["", "definition lset :: \"'a llist \\<Rightarrow> 'a set\"\nwhere \"lset l \\<equiv> ran (ll2f l)\""], ["", "definition llength :: \"'a llist \\<Rightarrow> nat\"\nwhere \"llength \\<equiv> finlsts_rec 0 (\\<lambda> a r n. Suc n)\""], ["", "definition llast :: \"'a llist \\<Rightarrow> 'a\"\nwhere \"llast \\<equiv> finlsts_rec undefined (\\<lambda> x xs l. if xs = LNil then x else l)\""], ["", "definition lbutlast :: \"'a llist \\<Rightarrow> 'a llist\"\nwhere \"lbutlast \\<equiv> finlsts_rec LNil (\\<lambda> x xs l. if xs = LNil then LNil else x##l)\""], ["", "definition lrev :: \"'a llist \\<Rightarrow> 'a llist\"\nwhere \"lrev \\<equiv> finlsts_rec LNil (\\<lambda> x xs l. l @@ x ## LNil)\""], ["", "lemmas llength_LNil  = llength_def [THEN finlsts_rec_LNil_def]\n  and  llength_LCons = llength_def [THEN finlsts_rec_LCons_def]"], ["", "lemmas llength_simps [simp] = llength_LNil llength_LCons"], ["", "lemmas llast_LNil  = llast_def [THEN finlsts_rec_LNil_def]\n  and  llast_LCons = llast_def [THEN finlsts_rec_LCons_def]"], ["", "lemmas llast_simps [simp] = llast_LNil llast_LCons"], ["", "lemmas lbutlast_LNil = lbutlast_def [THEN finlsts_rec_LNil_def]\n  and lbutlast_LCons = lbutlast_def [THEN finlsts_rec_LCons_def]"], ["", "lemmas lbutlast_simps [simp] = lbutlast_LNil lbutlast_LCons"], ["", "lemmas lrev_LNil = lrev_def [THEN finlsts_rec_LNil_def]\n  and lrev_LCons = lrev_def [THEN finlsts_rec_LCons_def]"], ["", "lemmas lrev_simps [simp] = lrev_LNil lrev_LCons"], ["", "lemma lrevT [simp, intro!]:\n  \"xs \\<in> A\\<^sup>\\<star> \\<Longrightarrow> lrev xs \\<in> A\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs \\<in> A\\<^sup>\\<star> \\<Longrightarrow> lrev xs \\<in> A\\<^sup>\\<star>", "by (induct rule: finlsts.induct) auto"], ["", "lemma lrev_lappend [simp]:\n  assumes fin: \"xs \\<in> UNIV\\<^sup>\\<star>\" \"ys \\<in> UNIV\\<^sup>\\<star>\"\n  shows \"lrev (xs @@ ys) = (lrev ys) @@ (lrev xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lrev (xs @@ ys) = lrev ys @@ lrev xs", "using fin"], ["proof (prove)\nusing this:\n  xs \\<in> UNIV\\<^sup>\\<star>\n  ys \\<in> UNIV\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. lrev (xs @@ ys) = lrev ys @@ lrev xs", "by induct (auto simp: lrev_LCons [of _ UNIV] lappend_assoc)"], ["", "lemma lrev_lrev_ident [simp]:\n  assumes fin: \"xs \\<in> UNIV\\<^sup>\\<star>\"\n  shows \"lrev (lrev xs) = xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lrev (lrev xs) = xs", "using fin"], ["proof (prove)\nusing this:\n  xs \\<in> UNIV\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. lrev (lrev xs) = xs", "proof (induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>l. l = LNil \\<Longrightarrow> lrev (lrev l) = l\n 2. \\<And>a l.\n       \\<lbrakk>l \\<in> UNIV\\<^sup>\\<star>; lrev (lrev l) = l;\n        a \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> lrev (lrev (a ## l)) = a ## l", "case (LCons_fin a l)"], ["proof (state)\nthis:\n  l \\<in> UNIV\\<^sup>\\<star>\n  lrev (lrev l) = l\n  a \\<in> UNIV\n\ngoal (2 subgoals):\n 1. \\<And>l. l = LNil \\<Longrightarrow> lrev (lrev l) = l\n 2. \\<And>a l.\n       \\<lbrakk>l \\<in> UNIV\\<^sup>\\<star>; lrev (lrev l) = l;\n        a \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> lrev (lrev (a ## l)) = a ## l", "have \"a ## LNil \\<in> UNIV\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a ## LNil \\<in> UNIV\\<^sup>\\<star>", "by auto"], ["proof (state)\nthis:\n  a ## LNil \\<in> UNIV\\<^sup>\\<star>\n\ngoal (2 subgoals):\n 1. \\<And>l. l = LNil \\<Longrightarrow> lrev (lrev l) = l\n 2. \\<And>a l.\n       \\<lbrakk>l \\<in> UNIV\\<^sup>\\<star>; lrev (lrev l) = l;\n        a \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> lrev (lrev (a ## l)) = a ## l", "thus ?case"], ["proof (prove)\nusing this:\n  a ## LNil \\<in> UNIV\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. lrev (lrev (a ## l)) = a ## l", "using LCons_fin"], ["proof (prove)\nusing this:\n  a ## LNil \\<in> UNIV\\<^sup>\\<star>\n  l \\<in> UNIV\\<^sup>\\<star>\n  lrev (lrev l) = l\n  a \\<in> UNIV\n\ngoal (1 subgoal):\n 1. lrev (lrev (a ## l)) = a ## l", "by auto"], ["proof (state)\nthis:\n  lrev (lrev (a ## l)) = a ## l\n\ngoal (1 subgoal):\n 1. \\<And>l. l = LNil \\<Longrightarrow> lrev (lrev l) = l", "qed simp"], ["", "lemma lrev_is_LNil_conv [iff]:\n  \"xs \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow> (lrev xs = LNil) = (xs = LNil)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow>\n    (lrev xs = LNil) = (xs = LNil)", "by (induct rule: finlsts.induct) auto"], ["", "lemma LNil_is_lrev_conv [iff]: \n\"xs \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow> (LNil = lrev xs) = (xs = LNil)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow>\n    (LNil = lrev xs) = (xs = LNil)", "by (induct rule: finlsts.induct) auto"], ["", "lemma lrev_is_lrev_conv [iff]:\nassumes fin: \"xs \\<in> UNIV\\<^sup>\\<star>\" \"ys \\<in> UNIV\\<^sup>\\<star>\"\n  shows \"(lrev xs = lrev ys) = (xs = ys)\"\n  (is \"?L = ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (lrev xs = lrev ys) = (xs = ys)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. lrev xs = lrev ys \\<Longrightarrow> xs = ys\n 2. xs = ys \\<Longrightarrow> lrev xs = lrev ys", "assume L: ?L"], ["proof (state)\nthis:\n  lrev xs = lrev ys\n\ngoal (2 subgoals):\n 1. lrev xs = lrev ys \\<Longrightarrow> xs = ys\n 2. xs = ys \\<Longrightarrow> lrev xs = lrev ys", "hence \"lrev (lrev xs) = lrev (lrev ys)\""], ["proof (prove)\nusing this:\n  lrev xs = lrev ys\n\ngoal (1 subgoal):\n 1. lrev (lrev xs) = lrev (lrev ys)", "by simp"], ["proof (state)\nthis:\n  lrev (lrev xs) = lrev (lrev ys)\n\ngoal (2 subgoals):\n 1. lrev xs = lrev ys \\<Longrightarrow> xs = ys\n 2. xs = ys \\<Longrightarrow> lrev xs = lrev ys", "thus ?R"], ["proof (prove)\nusing this:\n  lrev (lrev xs) = lrev (lrev ys)\n\ngoal (1 subgoal):\n 1. xs = ys", "using fin"], ["proof (prove)\nusing this:\n  lrev (lrev xs) = lrev (lrev ys)\n  xs \\<in> UNIV\\<^sup>\\<star>\n  ys \\<in> UNIV\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. xs = ys", "by simp"], ["proof (state)\nthis:\n  xs = ys\n\ngoal (1 subgoal):\n 1. xs = ys \\<Longrightarrow> lrev xs = lrev ys", "qed simp"], ["", "lemma lrev_induct [case_names LNil snocl, consumes 1]:\n  assumes fin: \"xs \\<in> A\\<^sup>\\<star>\"\n  and init: \"P LNil\"\n  and step: \"\\<And>x xs. \\<lbrakk> xs \\<in> A\\<^sup>\\<star>; P xs; x \\<in> A \\<rbrakk> \\<Longrightarrow> P (xs @@ x##LNil)\"\n  shows \"P xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P xs", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. P xs", "define l where \"l = lrev xs\""], ["proof (state)\nthis:\n  l = lrev xs\n\ngoal (1 subgoal):\n 1. P xs", "with fin"], ["proof (chain)\npicking this:\n  xs \\<in> A\\<^sup>\\<star>\n  l = lrev xs", "have \"l \\<in> A\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  xs \\<in> A\\<^sup>\\<star>\n  l = lrev xs\n\ngoal (1 subgoal):\n 1. l \\<in> A\\<^sup>\\<star>", "by simp"], ["proof (state)\nthis:\n  l \\<in> A\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. P xs", "hence \"P (lrev l)\""], ["proof (prove)\nusing this:\n  l \\<in> A\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. P (lrev l)", "proof (induct l)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>l. l = LNil \\<Longrightarrow> P (lrev l)\n 2. \\<And>a l.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>; P (lrev l); a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> P (lrev (a ## l))", "case LNil_fin"], ["proof (state)\nthis:\n  l_ = LNil\n\ngoal (2 subgoals):\n 1. \\<And>l. l = LNil \\<Longrightarrow> P (lrev l)\n 2. \\<And>a l.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>; P (lrev l); a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> P (lrev (a ## l))", "with init"], ["proof (chain)\npicking this:\n  P LNil\n  l_ = LNil", "show ?case"], ["proof (prove)\nusing this:\n  P LNil\n  l_ = LNil\n\ngoal (1 subgoal):\n 1. P (lrev l_)", "by simp"], ["proof (state)\nthis:\n  P (lrev l_)\n\ngoal (1 subgoal):\n 1. \\<And>a l.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>; P (lrev l); a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> P (lrev (a ## l))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a l.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>; P (lrev l); a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> P (lrev (a ## l))", "case (LCons_fin a l)"], ["proof (state)\nthis:\n  l \\<in> A\\<^sup>\\<star>\n  P (lrev l)\n  a \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>a l.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>; P (lrev l); a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> P (lrev (a ## l))", "thus ?case"], ["proof (prove)\nusing this:\n  l \\<in> A\\<^sup>\\<star>\n  P (lrev l)\n  a \\<in> A\n\ngoal (1 subgoal):\n 1. P (lrev (a ## l))", "by (auto intro: step)"], ["proof (state)\nthis:\n  P (lrev (a ## l))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P (lrev l)\n\ngoal (1 subgoal):\n 1. P xs", "thus ?thesis"], ["proof (prove)\nusing this:\n  P (lrev l)\n\ngoal (1 subgoal):\n 1. P xs", "using fin l_def"], ["proof (prove)\nusing this:\n  P (lrev l)\n  xs \\<in> A\\<^sup>\\<star>\n  l = lrev xs\n\ngoal (1 subgoal):\n 1. P xs", "by simp"], ["proof (state)\nthis:\n  P xs\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma finlsts_rev_cases:\n  assumes tfin: \"t \\<in> A\\<^sup>\\<star>\"\n  obtains (LNil) \"t = LNil\"\n    |    (snocl) a l where \"l \\<in> A\\<^sup>\\<star>\" \"a \\<in> A\" \"t = l @@ a ## LNil\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t = LNil \\<Longrightarrow> thesis;\n     \\<And>l a.\n        \\<lbrakk>l \\<in> A\\<^sup>\\<star>; a \\<in> A;\n         t = l @@ a ## LNil\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using assms"], ["proof (prove)\nusing this:\n  t \\<in> A\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>t = LNil \\<Longrightarrow> thesis;\n     \\<And>l a.\n        \\<lbrakk>l \\<in> A\\<^sup>\\<star>; a \\<in> A;\n         t = l @@ a ## LNil\\<rbrakk>\n        \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by (induct rule: lrev_induct) auto"], ["", "lemma ll2f_LNil [simp]: \"LNil!!x = None\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LNil !! x = None", "by (cases \"x\") auto"], ["", "lemma None_lfinite: \"t!!i = None \\<Longrightarrow> t \\<in> UNIV\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t !! i = None \\<Longrightarrow> t \\<in> UNIV\\<^sup>\\<star>", "proof (induct \"i\" arbitrary: t)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t. t !! 0 = None \\<Longrightarrow> t \\<in> UNIV\\<^sup>\\<star>\n 2. \\<And>i t.\n       \\<lbrakk>\\<And>t.\n                   t !! i = None \\<Longrightarrow>\n                   t \\<in> UNIV\\<^sup>\\<star>;\n        t !! Suc i = None\\<rbrakk>\n       \\<Longrightarrow> t \\<in> UNIV\\<^sup>\\<star>", "case 0"], ["proof (state)\nthis:\n  t !! 0 = None\n\ngoal (2 subgoals):\n 1. \\<And>t. t !! 0 = None \\<Longrightarrow> t \\<in> UNIV\\<^sup>\\<star>\n 2. \\<And>i t.\n       \\<lbrakk>\\<And>t.\n                   t !! i = None \\<Longrightarrow>\n                   t \\<in> UNIV\\<^sup>\\<star>;\n        t !! Suc i = None\\<rbrakk>\n       \\<Longrightarrow> t \\<in> UNIV\\<^sup>\\<star>", "thus ?case"], ["proof (prove)\nusing this:\n  t !! 0 = None\n\ngoal (1 subgoal):\n 1. t \\<in> UNIV\\<^sup>\\<star>", "by(cases t) auto"], ["proof (state)\nthis:\n  t \\<in> UNIV\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. \\<And>i t.\n       \\<lbrakk>\\<And>t.\n                   t !! i = None \\<Longrightarrow>\n                   t \\<in> UNIV\\<^sup>\\<star>;\n        t !! Suc i = None\\<rbrakk>\n       \\<Longrightarrow> t \\<in> UNIV\\<^sup>\\<star>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i t.\n       \\<lbrakk>\\<And>t.\n                   t !! i = None \\<Longrightarrow>\n                   t \\<in> UNIV\\<^sup>\\<star>;\n        t !! Suc i = None\\<rbrakk>\n       \\<Longrightarrow> t \\<in> UNIV\\<^sup>\\<star>", "case (Suc n)"], ["proof (state)\nthis:\n  ?t !! n = None \\<Longrightarrow> ?t \\<in> UNIV\\<^sup>\\<star>\n  t !! Suc n = None\n\ngoal (1 subgoal):\n 1. \\<And>i t.\n       \\<lbrakk>\\<And>t.\n                   t !! i = None \\<Longrightarrow>\n                   t \\<in> UNIV\\<^sup>\\<star>;\n        t !! Suc i = None\\<rbrakk>\n       \\<Longrightarrow> t \\<in> UNIV\\<^sup>\\<star>", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> UNIV\\<^sup>\\<star>", "proof(cases t)"], ["proof (state)\ngoal (2 subgoals):\n 1. t = LNil \\<Longrightarrow> t \\<in> UNIV\\<^sup>\\<star>\n 2. \\<And>x21 x22.\n       t = x21 ## x22 \\<Longrightarrow> t \\<in> UNIV\\<^sup>\\<star>", "case LNil"], ["proof (state)\nthis:\n  t = LNil\n\ngoal (2 subgoals):\n 1. t = LNil \\<Longrightarrow> t \\<in> UNIV\\<^sup>\\<star>\n 2. \\<And>x21 x22.\n       t = x21 ## x22 \\<Longrightarrow> t \\<in> UNIV\\<^sup>\\<star>", "thus ?thesis"], ["proof (prove)\nusing this:\n  t = LNil\n\ngoal (1 subgoal):\n 1. t \\<in> UNIV\\<^sup>\\<star>", "by auto"], ["proof (state)\nthis:\n  t \\<in> UNIV\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22.\n       t = x21 ## x22 \\<Longrightarrow> t \\<in> UNIV\\<^sup>\\<star>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x21 x22.\n       t = x21 ## x22 \\<Longrightarrow> t \\<in> UNIV\\<^sup>\\<star>", "case (LCons x l')"], ["proof (state)\nthis:\n  t = x ## l'\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22.\n       t = x21 ## x22 \\<Longrightarrow> t \\<in> UNIV\\<^sup>\\<star>", "with \\<open>l' !! n = None \\<Longrightarrow> l' \\<in> UNIV\\<^sup>\\<star>\\<close> \\<open>t !! Suc n = None\\<close>"], ["proof (chain)\npicking this:\n  l' !! n = None \\<Longrightarrow> l' \\<in> UNIV\\<^sup>\\<star>\n  t !! Suc n = None\n  t = x ## l'", "show ?thesis"], ["proof (prove)\nusing this:\n  l' !! n = None \\<Longrightarrow> l' \\<in> UNIV\\<^sup>\\<star>\n  t !! Suc n = None\n  t = x ## l'\n\ngoal (1 subgoal):\n 1. t \\<in> UNIV\\<^sup>\\<star>", "by auto"], ["proof (state)\nthis:\n  t \\<in> UNIV\\<^sup>\\<star>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  t \\<in> UNIV\\<^sup>\\<star>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma infinite_Some: \"t \\<in> A\\<^sup>\\<omega> \\<Longrightarrow> \\<exists>a. t!!i = Some a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> A\\<^sup>\\<omega> \\<Longrightarrow> \\<exists>a. t !! i = Some a", "by (rule ccontr) (auto dest: None_lfinite)"], ["", "lemmas infinite_idx_SomeE = exE [OF infinite_Some]"], ["", "lemma Least_True [simp]:\n  \"(LEAST (n::nat). True) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (LEAST n. True) = 0", "by (auto simp: Least_def)"], ["", "lemma  ll2f_llength [simp]: \"r \\<in> A\\<^sup>\\<star> \\<Longrightarrow> r!!(llength r) = None\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> A\\<^sup>\\<star> \\<Longrightarrow> r !! LList2.llength r = None", "by (erule finlsts.induct) auto"], ["", "lemma llength_least_None:\n  assumes rA: \"r \\<in> A\\<^sup>\\<star>\"\n  shows \"llength r = (LEAST i. r!!i = None)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LList2.llength r = (LEAST i. r !! i = None)", "using rA"], ["proof (prove)\nusing this:\n  r \\<in> A\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. LList2.llength r = (LEAST i. r !! i = None)", "proof induct"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>l.\n       l = LNil \\<Longrightarrow>\n       LList2.llength l = (LEAST i. l !! i = None)\n 2. \\<And>a l.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>;\n        LList2.llength l = (LEAST i. l !! i = None); a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> LList2.llength (a ## l) =\n                         (LEAST i. (a ## l) !! i = None)", "case LNil_fin"], ["proof (state)\nthis:\n  l_ = LNil\n\ngoal (2 subgoals):\n 1. \\<And>l.\n       l = LNil \\<Longrightarrow>\n       LList2.llength l = (LEAST i. l !! i = None)\n 2. \\<And>a l.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>;\n        LList2.llength l = (LEAST i. l !! i = None); a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> LList2.llength (a ## l) =\n                         (LEAST i. (a ## l) !! i = None)", "thus ?case"], ["proof (prove)\nusing this:\n  l_ = LNil\n\ngoal (1 subgoal):\n 1. LList2.llength l_ = (LEAST i. l_ !! i = None)", "by simp"], ["proof (state)\nthis:\n  LList2.llength l_ = (LEAST i. l_ !! i = None)\n\ngoal (1 subgoal):\n 1. \\<And>a l.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>;\n        LList2.llength l = (LEAST i. l !! i = None); a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> LList2.llength (a ## l) =\n                         (LEAST i. (a ## l) !! i = None)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a l.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>;\n        LList2.llength l = (LEAST i. l !! i = None); a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> LList2.llength (a ## l) =\n                         (LEAST i. (a ## l) !! i = None)", "case (LCons_fin a l)"], ["proof (state)\nthis:\n  l \\<in> A\\<^sup>\\<star>\n  LList2.llength l = (LEAST i. l !! i = None)\n  a \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>a l.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>;\n        LList2.llength l = (LEAST i. l !! i = None); a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> LList2.llength (a ## l) =\n                         (LEAST i. (a ## l) !! i = None)", "hence \"(LEAST i. (a ## l) !! i = None) = llength (a ## l)\""], ["proof (prove)\nusing this:\n  l \\<in> A\\<^sup>\\<star>\n  LList2.llength l = (LEAST i. l !! i = None)\n  a \\<in> A\n\ngoal (1 subgoal):\n 1. (LEAST i. (a ## l) !! i = None) = LList2.llength (a ## l)", "by (auto intro!: ll2f_llength Least_Suc2)"], ["proof (state)\nthis:\n  (LEAST i. (a ## l) !! i = None) = LList2.llength (a ## l)\n\ngoal (1 subgoal):\n 1. \\<And>a l.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>;\n        LList2.llength l = (LEAST i. l !! i = None); a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> LList2.llength (a ## l) =\n                         (LEAST i. (a ## l) !! i = None)", "thus ?case"], ["proof (prove)\nusing this:\n  (LEAST i. (a ## l) !! i = None) = LList2.llength (a ## l)\n\ngoal (1 subgoal):\n 1. LList2.llength (a ## l) = (LEAST i. (a ## l) !! i = None)", "by rule"], ["proof (state)\nthis:\n  LList2.llength (a ## l) = (LEAST i. (a ## l) !! i = None)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ll2f_lem1:\n \"t !! (Suc i) = Some x \\<Longrightarrow> \\<exists> y. t !! i = Some y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t !! Suc i = Some x \\<Longrightarrow> \\<exists>y. t !! i = Some y", "proof (induct i arbitrary: x t)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x t.\n       t !! Suc 0 = Some x \\<Longrightarrow> \\<exists>y. t !! 0 = Some y\n 2. \\<And>i x t.\n       \\<lbrakk>\\<And>x t.\n                   t !! Suc i = Some x \\<Longrightarrow>\n                   \\<exists>y. t !! i = Some y;\n        t !! Suc (Suc i) = Some x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. t !! Suc i = Some y", "case 0"], ["proof (state)\nthis:\n  t !! Suc 0 = Some x\n\ngoal (2 subgoals):\n 1. \\<And>x t.\n       t !! Suc 0 = Some x \\<Longrightarrow> \\<exists>y. t !! 0 = Some y\n 2. \\<And>i x t.\n       \\<lbrakk>\\<And>x t.\n                   t !! Suc i = Some x \\<Longrightarrow>\n                   \\<exists>y. t !! i = Some y;\n        t !! Suc (Suc i) = Some x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. t !! Suc i = Some y", "thus ?case"], ["proof (prove)\nusing this:\n  t !! Suc 0 = Some x\n\ngoal (1 subgoal):\n 1. \\<exists>y. t !! 0 = Some y", "by (auto split: llist.splits)"], ["proof (state)\nthis:\n  \\<exists>y. t !! 0 = Some y\n\ngoal (1 subgoal):\n 1. \\<And>i x t.\n       \\<lbrakk>\\<And>x t.\n                   t !! Suc i = Some x \\<Longrightarrow>\n                   \\<exists>y. t !! i = Some y;\n        t !! Suc (Suc i) = Some x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. t !! Suc i = Some y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i x t.\n       \\<lbrakk>\\<And>x t.\n                   t !! Suc i = Some x \\<Longrightarrow>\n                   \\<exists>y. t !! i = Some y;\n        t !! Suc (Suc i) = Some x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. t !! Suc i = Some y", "case (Suc k)"], ["proof (state)\nthis:\n  ?t !! Suc k = Some ?x \\<Longrightarrow> \\<exists>y. ?t !! k = Some y\n  t !! Suc (Suc k) = Some x\n\ngoal (1 subgoal):\n 1. \\<And>i x t.\n       \\<lbrakk>\\<And>x t.\n                   t !! Suc i = Some x \\<Longrightarrow>\n                   \\<exists>y. t !! i = Some y;\n        t !! Suc (Suc i) = Some x\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. t !! Suc i = Some y", "thus ?case"], ["proof (prove)\nusing this:\n  ?t !! Suc k = Some ?x \\<Longrightarrow> \\<exists>y. ?t !! k = Some y\n  t !! Suc (Suc k) = Some x\n\ngoal (1 subgoal):\n 1. \\<exists>y. t !! Suc k = Some y", "by (cases t) auto"], ["proof (state)\nthis:\n  \\<exists>y. t !! Suc k = Some y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas ll2f_Suc_Some = ll2f_lem1 [THEN exE]"], ["", "lemma ll2f_None_Suc: \"t !! i = None \\<Longrightarrow> t !! Suc i = None\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t !! i = None \\<Longrightarrow> t !! Suc i = None", "proof (induct i arbitrary: t)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t. t !! 0 = None \\<Longrightarrow> t !! Suc 0 = None\n 2. \\<And>i t.\n       \\<lbrakk>\\<And>t. t !! i = None \\<Longrightarrow> t !! Suc i = None;\n        t !! Suc i = None\\<rbrakk>\n       \\<Longrightarrow> t !! Suc (Suc i) = None", "case 0"], ["proof (state)\nthis:\n  t !! 0 = None\n\ngoal (2 subgoals):\n 1. \\<And>t. t !! 0 = None \\<Longrightarrow> t !! Suc 0 = None\n 2. \\<And>i t.\n       \\<lbrakk>\\<And>t. t !! i = None \\<Longrightarrow> t !! Suc i = None;\n        t !! Suc i = None\\<rbrakk>\n       \\<Longrightarrow> t !! Suc (Suc i) = None", "thus ?case"], ["proof (prove)\nusing this:\n  t !! 0 = None\n\ngoal (1 subgoal):\n 1. t !! Suc 0 = None", "by (auto split: llist.split)"], ["proof (state)\nthis:\n  t !! Suc 0 = None\n\ngoal (1 subgoal):\n 1. \\<And>i t.\n       \\<lbrakk>\\<And>t. t !! i = None \\<Longrightarrow> t !! Suc i = None;\n        t !! Suc i = None\\<rbrakk>\n       \\<Longrightarrow> t !! Suc (Suc i) = None", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i t.\n       \\<lbrakk>\\<And>t. t !! i = None \\<Longrightarrow> t !! Suc i = None;\n        t !! Suc i = None\\<rbrakk>\n       \\<Longrightarrow> t !! Suc (Suc i) = None", "case (Suc k)"], ["proof (state)\nthis:\n  ?t !! k = None \\<Longrightarrow> ?t !! Suc k = None\n  t !! Suc k = None\n\ngoal (1 subgoal):\n 1. \\<And>i t.\n       \\<lbrakk>\\<And>t. t !! i = None \\<Longrightarrow> t !! Suc i = None;\n        t !! Suc i = None\\<rbrakk>\n       \\<Longrightarrow> t !! Suc (Suc i) = None", "thus ?case"], ["proof (prove)\nusing this:\n  ?t !! k = None \\<Longrightarrow> ?t !! Suc k = None\n  t !! Suc k = None\n\ngoal (1 subgoal):\n 1. t !! Suc (Suc k) = None", "by (cases t) auto"], ["proof (state)\nthis:\n  t !! Suc (Suc k) = None\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ll2f_None_le:\n  \"\\<lbrakk> t!!j = None; j \\<le> i \\<rbrakk> \\<Longrightarrow> t!!i = None\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t !! j = None; j \\<le> i\\<rbrakk>\n    \\<Longrightarrow> t !! i = None", "proof (induct i arbitrary: t j)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t j.\n       \\<lbrakk>t !! j = None; j \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> t !! 0 = None\n 2. \\<And>i t j.\n       \\<lbrakk>\\<And>t j.\n                   \\<lbrakk>t !! j = None; j \\<le> i\\<rbrakk>\n                   \\<Longrightarrow> t !! i = None;\n        t !! j = None; j \\<le> Suc i\\<rbrakk>\n       \\<Longrightarrow> t !! Suc i = None", "case 0"], ["proof (state)\nthis:\n  t !! j = None\n  j \\<le> 0\n\ngoal (2 subgoals):\n 1. \\<And>t j.\n       \\<lbrakk>t !! j = None; j \\<le> 0\\<rbrakk>\n       \\<Longrightarrow> t !! 0 = None\n 2. \\<And>i t j.\n       \\<lbrakk>\\<And>t j.\n                   \\<lbrakk>t !! j = None; j \\<le> i\\<rbrakk>\n                   \\<Longrightarrow> t !! i = None;\n        t !! j = None; j \\<le> Suc i\\<rbrakk>\n       \\<Longrightarrow> t !! Suc i = None", "thus ?case"], ["proof (prove)\nusing this:\n  t !! j = None\n  j \\<le> 0\n\ngoal (1 subgoal):\n 1. t !! 0 = None", "by simp"], ["proof (state)\nthis:\n  t !! 0 = None\n\ngoal (1 subgoal):\n 1. \\<And>i t j.\n       \\<lbrakk>\\<And>t j.\n                   \\<lbrakk>t !! j = None; j \\<le> i\\<rbrakk>\n                   \\<Longrightarrow> t !! i = None;\n        t !! j = None; j \\<le> Suc i\\<rbrakk>\n       \\<Longrightarrow> t !! Suc i = None", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i t j.\n       \\<lbrakk>\\<And>t j.\n                   \\<lbrakk>t !! j = None; j \\<le> i\\<rbrakk>\n                   \\<Longrightarrow> t !! i = None;\n        t !! j = None; j \\<le> Suc i\\<rbrakk>\n       \\<Longrightarrow> t !! Suc i = None", "case (Suc k)"], ["proof (state)\nthis:\n  \\<lbrakk>?t !! ?j = None; ?j \\<le> k\\<rbrakk>\n  \\<Longrightarrow> ?t !! k = None\n  t !! j = None\n  j \\<le> Suc k\n\ngoal (1 subgoal):\n 1. \\<And>i t j.\n       \\<lbrakk>\\<And>t j.\n                   \\<lbrakk>t !! j = None; j \\<le> i\\<rbrakk>\n                   \\<Longrightarrow> t !! i = None;\n        t !! j = None; j \\<le> Suc i\\<rbrakk>\n       \\<Longrightarrow> t !! Suc i = None", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>?t !! ?j = None; ?j \\<le> k\\<rbrakk>\n  \\<Longrightarrow> ?t !! k = None\n  t !! j = None\n  j \\<le> Suc k\n\ngoal (1 subgoal):\n 1. t !! Suc k = None", "by (cases j) (auto split: llist.split)"], ["proof (state)\nthis:\n  t !! Suc k = None\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ll2f_Some_le:\n  assumes jlei: \"j \\<le> i\"\n  and tisome: \"t !! i = Some x\"\n  and H: \"\\<And> y. t !! j = Some y \\<Longrightarrow> Q\"\n  shows \"Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Q", "have  \"\\<exists> y. t !! j = Some y\" (is \"?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>y. t !! j = Some y", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<nexists>y. t !! j = Some y \\<Longrightarrow> False", "assume \"\\<not> ?R\""], ["proof (state)\nthis:\n  \\<nexists>y. t !! j = Some y\n\ngoal (1 subgoal):\n 1. \\<nexists>y. t !! j = Some y \\<Longrightarrow> False", "hence \"t !! j = None\""], ["proof (prove)\nusing this:\n  \\<nexists>y. t !! j = Some y\n\ngoal (1 subgoal):\n 1. t !! j = None", "by auto"], ["proof (state)\nthis:\n  t !! j = None\n\ngoal (1 subgoal):\n 1. \\<nexists>y. t !! j = Some y \\<Longrightarrow> False", "with tisome jlei"], ["proof (chain)\npicking this:\n  t !! i = Some x\n  j \\<le> i\n  t !! j = None", "show False"], ["proof (prove)\nusing this:\n  t !! i = Some x\n  j \\<le> i\n  t !! j = None\n\ngoal (1 subgoal):\n 1. False", "by (auto dest:  ll2f_None_le)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>y. t !! j = Some y\n\ngoal (1 subgoal):\n 1. Q", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>y. t !! j = Some y\n\ngoal (1 subgoal):\n 1. Q", "using H"], ["proof (prove)\nusing this:\n  \\<exists>y. t !! j = Some y\n  t !! j = Some ?y \\<Longrightarrow> Q\n\ngoal (1 subgoal):\n 1. Q", "by auto"], ["proof (state)\nthis:\n  Q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ltake_LNil [simp]: \"LNil \\<down> i = LNil\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LNil \\<down> i = LNil", "by (cases \"i\") auto"], ["", "lemma ltake_LCons_Suc: \"(a ## l) \\<down> (Suc i) = a ## l \\<down> i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a ## l) \\<down> Suc i = a ## l \\<down> i", "by simp"], ["", "lemma take_fin [iff]: \"t \\<in> A\\<^sup>\\<infinity> \\<Longrightarrow> t\\<down>i \\<in> A\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> A\\<^sup>\\<infinity> \\<Longrightarrow>\n    t \\<down> i \\<in> A\\<^sup>\\<star>", "proof (induct i arbitrary: t)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t.\n       t \\<in> A\\<^sup>\\<infinity> \\<Longrightarrow>\n       t \\<down> 0 \\<in> A\\<^sup>\\<star>\n 2. \\<And>i t.\n       \\<lbrakk>\\<And>t.\n                   t \\<in> A\\<^sup>\\<infinity> \\<Longrightarrow>\n                   t \\<down> i \\<in> A\\<^sup>\\<star>;\n        t \\<in> A\\<^sup>\\<infinity>\\<rbrakk>\n       \\<Longrightarrow> t \\<down> Suc i \\<in> A\\<^sup>\\<star>", "case 0"], ["proof (state)\nthis:\n  t \\<in> A\\<^sup>\\<infinity>\n\ngoal (2 subgoals):\n 1. \\<And>t.\n       t \\<in> A\\<^sup>\\<infinity> \\<Longrightarrow>\n       t \\<down> 0 \\<in> A\\<^sup>\\<star>\n 2. \\<And>i t.\n       \\<lbrakk>\\<And>t.\n                   t \\<in> A\\<^sup>\\<infinity> \\<Longrightarrow>\n                   t \\<down> i \\<in> A\\<^sup>\\<star>;\n        t \\<in> A\\<^sup>\\<infinity>\\<rbrakk>\n       \\<Longrightarrow> t \\<down> Suc i \\<in> A\\<^sup>\\<star>", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<down> 0 \\<in> A\\<^sup>\\<star>", "by auto"], ["proof (state)\nthis:\n  t \\<down> 0 \\<in> A\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. \\<And>i t.\n       \\<lbrakk>\\<And>t.\n                   t \\<in> A\\<^sup>\\<infinity> \\<Longrightarrow>\n                   t \\<down> i \\<in> A\\<^sup>\\<star>;\n        t \\<in> A\\<^sup>\\<infinity>\\<rbrakk>\n       \\<Longrightarrow> t \\<down> Suc i \\<in> A\\<^sup>\\<star>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i t.\n       \\<lbrakk>\\<And>t.\n                   t \\<in> A\\<^sup>\\<infinity> \\<Longrightarrow>\n                   t \\<down> i \\<in> A\\<^sup>\\<star>;\n        t \\<in> A\\<^sup>\\<infinity>\\<rbrakk>\n       \\<Longrightarrow> t \\<down> Suc i \\<in> A\\<^sup>\\<star>", "case (Suc j)"], ["proof (state)\nthis:\n  ?t \\<in> A\\<^sup>\\<infinity> \\<Longrightarrow>\n  ?t \\<down> j \\<in> A\\<^sup>\\<star>\n  t \\<in> A\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. \\<And>i t.\n       \\<lbrakk>\\<And>t.\n                   t \\<in> A\\<^sup>\\<infinity> \\<Longrightarrow>\n                   t \\<down> i \\<in> A\\<^sup>\\<star>;\n        t \\<in> A\\<^sup>\\<infinity>\\<rbrakk>\n       \\<Longrightarrow> t \\<down> Suc i \\<in> A\\<^sup>\\<star>", "thus ?case"], ["proof (prove)\nusing this:\n  ?t \\<in> A\\<^sup>\\<infinity> \\<Longrightarrow>\n  ?t \\<down> j \\<in> A\\<^sup>\\<star>\n  t \\<in> A\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. t \\<down> Suc j \\<in> A\\<^sup>\\<star>", "by (cases \"t\") auto"], ["proof (state)\nthis:\n  t \\<down> Suc j \\<in> A\\<^sup>\\<star>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ltake_fin [iff]:\n  \"r \\<down> i \\<in> UNIV\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<down> i \\<in> UNIV\\<^sup>\\<star>", "by simp"], ["", "lemma llength_take [simp]: \"t \\<in> A\\<^sup>\\<omega> \\<Longrightarrow> llength (t\\<down>i) = i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> A\\<^sup>\\<omega> \\<Longrightarrow>\n    LList2.llength (t \\<down> i) = i", "proof (induct \"i\" arbitrary: t)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t.\n       t \\<in> A\\<^sup>\\<omega> \\<Longrightarrow>\n       LList2.llength (t \\<down> 0) = 0\n 2. \\<And>i t.\n       \\<lbrakk>\\<And>t.\n                   t \\<in> A\\<^sup>\\<omega> \\<Longrightarrow>\n                   LList2.llength (t \\<down> i) = i;\n        t \\<in> A\\<^sup>\\<omega>\\<rbrakk>\n       \\<Longrightarrow> LList2.llength (t \\<down> Suc i) = Suc i", "case 0"], ["proof (state)\nthis:\n  t \\<in> A\\<^sup>\\<omega>\n\ngoal (2 subgoals):\n 1. \\<And>t.\n       t \\<in> A\\<^sup>\\<omega> \\<Longrightarrow>\n       LList2.llength (t \\<down> 0) = 0\n 2. \\<And>i t.\n       \\<lbrakk>\\<And>t.\n                   t \\<in> A\\<^sup>\\<omega> \\<Longrightarrow>\n                   LList2.llength (t \\<down> i) = i;\n        t \\<in> A\\<^sup>\\<omega>\\<rbrakk>\n       \\<Longrightarrow> LList2.llength (t \\<down> Suc i) = Suc i", "thus ?case"], ["proof (prove)\nusing this:\n  t \\<in> A\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. LList2.llength (t \\<down> 0) = 0", "by simp"], ["proof (state)\nthis:\n  LList2.llength (t \\<down> 0) = 0\n\ngoal (1 subgoal):\n 1. \\<And>i t.\n       \\<lbrakk>\\<And>t.\n                   t \\<in> A\\<^sup>\\<omega> \\<Longrightarrow>\n                   LList2.llength (t \\<down> i) = i;\n        t \\<in> A\\<^sup>\\<omega>\\<rbrakk>\n       \\<Longrightarrow> LList2.llength (t \\<down> Suc i) = Suc i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i t.\n       \\<lbrakk>\\<And>t.\n                   t \\<in> A\\<^sup>\\<omega> \\<Longrightarrow>\n                   LList2.llength (t \\<down> i) = i;\n        t \\<in> A\\<^sup>\\<omega>\\<rbrakk>\n       \\<Longrightarrow> LList2.llength (t \\<down> Suc i) = Suc i", "case (Suc j)"], ["proof (state)\nthis:\n  ?t \\<in> A\\<^sup>\\<omega> \\<Longrightarrow>\n  LList2.llength (?t \\<down> j) = j\n  t \\<in> A\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. \\<And>i t.\n       \\<lbrakk>\\<And>t.\n                   t \\<in> A\\<^sup>\\<omega> \\<Longrightarrow>\n                   LList2.llength (t \\<down> i) = i;\n        t \\<in> A\\<^sup>\\<omega>\\<rbrakk>\n       \\<Longrightarrow> LList2.llength (t \\<down> Suc i) = Suc i", "from \\<open>t \\<in> A\\<^sup>\\<omega>\\<close> \\<open>\\<And>t. t \\<in> A\\<^sup>\\<omega> \\<Longrightarrow> llength (t \\<down> j) = j\\<close>"], ["proof (chain)\npicking this:\n  t \\<in> A\\<^sup>\\<omega>\n  ?t \\<in> A\\<^sup>\\<omega> \\<Longrightarrow>\n  LList2.llength (?t \\<down> j) = j", "show ?case"], ["proof (prove)\nusing this:\n  t \\<in> A\\<^sup>\\<omega>\n  ?t \\<in> A\\<^sup>\\<omega> \\<Longrightarrow>\n  LList2.llength (?t \\<down> j) = j\n\ngoal (1 subgoal):\n 1. LList2.llength (t \\<down> Suc j) = Suc j", "by(cases) (auto simp: llength_LCons [of _ UNIV])"], ["proof (state)\nthis:\n  LList2.llength (t \\<down> Suc j) = Suc j\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ltake_ldrop_id: \"(x \\<down> i) @@ (x \\<up> i) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<down> i @@ x \\<up> i = x", "proof (induct \"i\" arbitrary: x)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. x \\<down> 0 @@ x \\<up> 0 = x\n 2. \\<And>i x.\n       (\\<And>x. x \\<down> i @@ x \\<up> i = x) \\<Longrightarrow>\n       x \\<down> Suc i @@ x \\<up> Suc i = x", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>x. x \\<down> 0 @@ x \\<up> 0 = x\n 2. \\<And>i x.\n       (\\<And>x. x \\<down> i @@ x \\<up> i = x) \\<Longrightarrow>\n       x \\<down> Suc i @@ x \\<up> Suc i = x", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<down> 0 @@ x \\<up> 0 = x", "by simp"], ["proof (state)\nthis:\n  x \\<down> 0 @@ x \\<up> 0 = x\n\ngoal (1 subgoal):\n 1. \\<And>i x.\n       (\\<And>x. x \\<down> i @@ x \\<up> i = x) \\<Longrightarrow>\n       x \\<down> Suc i @@ x \\<up> Suc i = x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i x.\n       (\\<And>x. x \\<down> i @@ x \\<up> i = x) \\<Longrightarrow>\n       x \\<down> Suc i @@ x \\<up> Suc i = x", "case (Suc j)"], ["proof (state)\nthis:\n  ?x \\<down> j @@ ?x \\<up> j = ?x\n\ngoal (1 subgoal):\n 1. \\<And>i x.\n       (\\<And>x. x \\<down> i @@ x \\<up> i = x) \\<Longrightarrow>\n       x \\<down> Suc i @@ x \\<up> Suc i = x", "thus ?case"], ["proof (prove)\nusing this:\n  ?x \\<down> j @@ ?x \\<up> j = ?x\n\ngoal (1 subgoal):\n 1. x \\<down> Suc j @@ x \\<up> Suc j = x", "by (cases x) auto"], ["proof (state)\nthis:\n  x \\<down> Suc j @@ x \\<up> Suc j = x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ltake_ldrop: \n  \"(xs \\<up> m) \\<down> n =(xs \\<down> (n + m)) \\<up> m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs \\<up> m \\<down> n = xs \\<down> (n + m) \\<up> m", "proof (induct \"m\" arbitrary: xs)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xs. xs \\<up> 0 \\<down> n = xs \\<down> (n + 0) \\<up> 0\n 2. \\<And>m xs.\n       (\\<And>xs.\n           xs \\<up> m \\<down> n =\n           xs \\<down> (n + m) \\<up> m) \\<Longrightarrow>\n       xs \\<up> Suc m \\<down> n = xs \\<down> (n + Suc m) \\<up> Suc m", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>xs. xs \\<up> 0 \\<down> n = xs \\<down> (n + 0) \\<up> 0\n 2. \\<And>m xs.\n       (\\<And>xs.\n           xs \\<up> m \\<down> n =\n           xs \\<down> (n + m) \\<up> m) \\<Longrightarrow>\n       xs \\<up> Suc m \\<down> n = xs \\<down> (n + Suc m) \\<up> Suc m", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. xs \\<up> 0 \\<down> n = xs \\<down> (n + 0) \\<up> 0", "by simp"], ["proof (state)\nthis:\n  xs \\<up> 0 \\<down> n = xs \\<down> (n + 0) \\<up> 0\n\ngoal (1 subgoal):\n 1. \\<And>m xs.\n       (\\<And>xs.\n           xs \\<up> m \\<down> n =\n           xs \\<down> (n + m) \\<up> m) \\<Longrightarrow>\n       xs \\<up> Suc m \\<down> n = xs \\<down> (n + Suc m) \\<up> Suc m", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>m xs.\n       (\\<And>xs.\n           xs \\<up> m \\<down> n =\n           xs \\<down> (n + m) \\<up> m) \\<Longrightarrow>\n       xs \\<up> Suc m \\<down> n = xs \\<down> (n + Suc m) \\<up> Suc m", "case (Suc l)"], ["proof (state)\nthis:\n  ?xs \\<up> l \\<down> n = ?xs \\<down> (n + l) \\<up> l\n\ngoal (1 subgoal):\n 1. \\<And>m xs.\n       (\\<And>xs.\n           xs \\<up> m \\<down> n =\n           xs \\<down> (n + m) \\<up> m) \\<Longrightarrow>\n       xs \\<up> Suc m \\<down> n = xs \\<down> (n + Suc m) \\<up> Suc m", "thus ?case"], ["proof (prove)\nusing this:\n  ?xs \\<up> l \\<down> n = ?xs \\<down> (n + l) \\<up> l\n\ngoal (1 subgoal):\n 1. xs \\<up> Suc l \\<down> n = xs \\<down> (n + Suc l) \\<up> Suc l", "by (cases \"xs\") auto"], ["proof (state)\nthis:\n  xs \\<up> Suc l \\<down> n = xs \\<down> (n + Suc l) \\<up> Suc l\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ldrop_LNil [simp]: \"LNil \\<up> i = LNil\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LNil \\<up> i = LNil", "by (cases \"i\") auto"], ["", "lemma ldrop_add: \"t \\<up> (i + k) = t \\<up> i \\<up> k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<up> (i + k) = t \\<up> i \\<up> k", "proof (induct \"i\" arbitrary: t)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t. t \\<up> (0 + k) = t \\<up> 0 \\<up> k\n 2. \\<And>i t.\n       (\\<And>t. t \\<up> (i + k) = t \\<up> i \\<up> k) \\<Longrightarrow>\n       t \\<up> (Suc i + k) = t \\<up> Suc i \\<up> k", "case (Suc j)"], ["proof (state)\nthis:\n  ?t \\<up> (j + k) = ?t \\<up> j \\<up> k\n\ngoal (2 subgoals):\n 1. \\<And>t. t \\<up> (0 + k) = t \\<up> 0 \\<up> k\n 2. \\<And>i t.\n       (\\<And>t. t \\<up> (i + k) = t \\<up> i \\<up> k) \\<Longrightarrow>\n       t \\<up> (Suc i + k) = t \\<up> Suc i \\<up> k", "thus ?case"], ["proof (prove)\nusing this:\n  ?t \\<up> (j + k) = ?t \\<up> j \\<up> k\n\ngoal (1 subgoal):\n 1. t \\<up> (Suc j + k) = t \\<up> Suc j \\<up> k", "by (cases \"t\") auto"], ["proof (state)\nthis:\n  t \\<up> (Suc j + k) = t \\<up> Suc j \\<up> k\n\ngoal (1 subgoal):\n 1. \\<And>t. t \\<up> (0 + k) = t \\<up> 0 \\<up> k", "qed simp"], ["", "lemma ldrop_fun: \"t \\<up> i !! j = t!!(i + j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<up> i !! j = t !! (i + j)", "proof (induct i arbitrary: t)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t. t \\<up> 0 !! j = t !! (0 + j)\n 2. \\<And>i t.\n       (\\<And>t. t \\<up> i !! j = t !! (i + j)) \\<Longrightarrow>\n       t \\<up> Suc i !! j = t !! (Suc i + j)", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>t. t \\<up> 0 !! j = t !! (0 + j)\n 2. \\<And>i t.\n       (\\<And>t. t \\<up> i !! j = t !! (i + j)) \\<Longrightarrow>\n       t \\<up> Suc i !! j = t !! (Suc i + j)", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<up> 0 !! j = t !! (0 + j)", "by simp"], ["proof (state)\nthis:\n  t \\<up> 0 !! j = t !! (0 + j)\n\ngoal (1 subgoal):\n 1. \\<And>i t.\n       (\\<And>t. t \\<up> i !! j = t !! (i + j)) \\<Longrightarrow>\n       t \\<up> Suc i !! j = t !! (Suc i + j)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i t.\n       (\\<And>t. t \\<up> i !! j = t !! (i + j)) \\<Longrightarrow>\n       t \\<up> Suc i !! j = t !! (Suc i + j)", "case (Suc k)"], ["proof (state)\nthis:\n  ?t \\<up> k !! j = ?t !! (k + j)\n\ngoal (1 subgoal):\n 1. \\<And>i t.\n       (\\<And>t. t \\<up> i !! j = t !! (i + j)) \\<Longrightarrow>\n       t \\<up> Suc i !! j = t !! (Suc i + j)", "then"], ["proof (chain)\npicking this:\n  ?t \\<up> k !! j = ?t !! (k + j)", "show ?case"], ["proof (prove)\nusing this:\n  ?t \\<up> k !! j = ?t !! (k + j)\n\ngoal (1 subgoal):\n 1. t \\<up> Suc k !! j = t !! (Suc k + j)", "by (cases \"t\") auto"], ["proof (state)\nthis:\n  t \\<up> Suc k !! j = t !! (Suc k + j)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ldropT[simp]: \"t \\<in> A\\<^sup>\\<infinity> \\<Longrightarrow> t \\<up> i \\<in> A\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> A\\<^sup>\\<infinity> \\<Longrightarrow>\n    t \\<up> i \\<in> A\\<^sup>\\<infinity>", "proof (induct i arbitrary: t)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t.\n       t \\<in> A\\<^sup>\\<infinity> \\<Longrightarrow>\n       t \\<up> 0 \\<in> A\\<^sup>\\<infinity>\n 2. \\<And>i t.\n       \\<lbrakk>\\<And>t.\n                   t \\<in> A\\<^sup>\\<infinity> \\<Longrightarrow>\n                   t \\<up> i \\<in> A\\<^sup>\\<infinity>;\n        t \\<in> A\\<^sup>\\<infinity>\\<rbrakk>\n       \\<Longrightarrow> t \\<up> Suc i \\<in> A\\<^sup>\\<infinity>", "case 0"], ["proof (state)\nthis:\n  t \\<in> A\\<^sup>\\<infinity>\n\ngoal (2 subgoals):\n 1. \\<And>t.\n       t \\<in> A\\<^sup>\\<infinity> \\<Longrightarrow>\n       t \\<up> 0 \\<in> A\\<^sup>\\<infinity>\n 2. \\<And>i t.\n       \\<lbrakk>\\<And>t.\n                   t \\<in> A\\<^sup>\\<infinity> \\<Longrightarrow>\n                   t \\<up> i \\<in> A\\<^sup>\\<infinity>;\n        t \\<in> A\\<^sup>\\<infinity>\\<rbrakk>\n       \\<Longrightarrow> t \\<up> Suc i \\<in> A\\<^sup>\\<infinity>", "thus ?case"], ["proof (prove)\nusing this:\n  t \\<in> A\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. t \\<up> 0 \\<in> A\\<^sup>\\<infinity>", "by simp"], ["proof (state)\nthis:\n  t \\<up> 0 \\<in> A\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. \\<And>i t.\n       \\<lbrakk>\\<And>t.\n                   t \\<in> A\\<^sup>\\<infinity> \\<Longrightarrow>\n                   t \\<up> i \\<in> A\\<^sup>\\<infinity>;\n        t \\<in> A\\<^sup>\\<infinity>\\<rbrakk>\n       \\<Longrightarrow> t \\<up> Suc i \\<in> A\\<^sup>\\<infinity>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i t.\n       \\<lbrakk>\\<And>t.\n                   t \\<in> A\\<^sup>\\<infinity> \\<Longrightarrow>\n                   t \\<up> i \\<in> A\\<^sup>\\<infinity>;\n        t \\<in> A\\<^sup>\\<infinity>\\<rbrakk>\n       \\<Longrightarrow> t \\<up> Suc i \\<in> A\\<^sup>\\<infinity>", "case (Suc j)"], ["proof (state)\nthis:\n  ?t \\<in> A\\<^sup>\\<infinity> \\<Longrightarrow>\n  ?t \\<up> j \\<in> A\\<^sup>\\<infinity>\n  t \\<in> A\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. \\<And>i t.\n       \\<lbrakk>\\<And>t.\n                   t \\<in> A\\<^sup>\\<infinity> \\<Longrightarrow>\n                   t \\<up> i \\<in> A\\<^sup>\\<infinity>;\n        t \\<in> A\\<^sup>\\<infinity>\\<rbrakk>\n       \\<Longrightarrow> t \\<up> Suc i \\<in> A\\<^sup>\\<infinity>", "thus ?case"], ["proof (prove)\nusing this:\n  ?t \\<in> A\\<^sup>\\<infinity> \\<Longrightarrow>\n  ?t \\<up> j \\<in> A\\<^sup>\\<infinity>\n  t \\<in> A\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. t \\<up> Suc j \\<in> A\\<^sup>\\<infinity>", "by (cases \"t\") auto"], ["proof (state)\nthis:\n  t \\<up> Suc j \\<in> A\\<^sup>\\<infinity>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ldrop_finT[simp]: \"t \\<in> A\\<^sup>\\<star> \\<Longrightarrow> t \\<up> i \\<in> A\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> A\\<^sup>\\<star> \\<Longrightarrow>\n    t \\<up> i \\<in> A\\<^sup>\\<star>", "proof (induct i arbitrary: t)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t.\n       t \\<in> A\\<^sup>\\<star> \\<Longrightarrow>\n       t \\<up> 0 \\<in> A\\<^sup>\\<star>\n 2. \\<And>i t.\n       \\<lbrakk>\\<And>t.\n                   t \\<in> A\\<^sup>\\<star> \\<Longrightarrow>\n                   t \\<up> i \\<in> A\\<^sup>\\<star>;\n        t \\<in> A\\<^sup>\\<star>\\<rbrakk>\n       \\<Longrightarrow> t \\<up> Suc i \\<in> A\\<^sup>\\<star>", "case 0"], ["proof (state)\nthis:\n  t \\<in> A\\<^sup>\\<star>\n\ngoal (2 subgoals):\n 1. \\<And>t.\n       t \\<in> A\\<^sup>\\<star> \\<Longrightarrow>\n       t \\<up> 0 \\<in> A\\<^sup>\\<star>\n 2. \\<And>i t.\n       \\<lbrakk>\\<And>t.\n                   t \\<in> A\\<^sup>\\<star> \\<Longrightarrow>\n                   t \\<up> i \\<in> A\\<^sup>\\<star>;\n        t \\<in> A\\<^sup>\\<star>\\<rbrakk>\n       \\<Longrightarrow> t \\<up> Suc i \\<in> A\\<^sup>\\<star>", "thus ?case"], ["proof (prove)\nusing this:\n  t \\<in> A\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. t \\<up> 0 \\<in> A\\<^sup>\\<star>", "by simp"], ["proof (state)\nthis:\n  t \\<up> 0 \\<in> A\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. \\<And>i t.\n       \\<lbrakk>\\<And>t.\n                   t \\<in> A\\<^sup>\\<star> \\<Longrightarrow>\n                   t \\<up> i \\<in> A\\<^sup>\\<star>;\n        t \\<in> A\\<^sup>\\<star>\\<rbrakk>\n       \\<Longrightarrow> t \\<up> Suc i \\<in> A\\<^sup>\\<star>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i t.\n       \\<lbrakk>\\<And>t.\n                   t \\<in> A\\<^sup>\\<star> \\<Longrightarrow>\n                   t \\<up> i \\<in> A\\<^sup>\\<star>;\n        t \\<in> A\\<^sup>\\<star>\\<rbrakk>\n       \\<Longrightarrow> t \\<up> Suc i \\<in> A\\<^sup>\\<star>", "fix n t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i t.\n       \\<lbrakk>\\<And>t.\n                   t \\<in> A\\<^sup>\\<star> \\<Longrightarrow>\n                   t \\<up> i \\<in> A\\<^sup>\\<star>;\n        t \\<in> A\\<^sup>\\<star>\\<rbrakk>\n       \\<Longrightarrow> t \\<up> Suc i \\<in> A\\<^sup>\\<star>", "assume \"t \\<in> A\\<^sup>\\<star>\" and \n    \"\\<And>t::'a llist. t \\<in> A\\<^sup>\\<star> \\<Longrightarrow> t \\<up> n \\<in> A\\<^sup>\\<star>\""], ["proof (state)\nthis:\n  t \\<in> A\\<^sup>\\<star>\n  ?t \\<in> A\\<^sup>\\<star> \\<Longrightarrow>\n  ?t \\<up> n \\<in> A\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. \\<And>i t.\n       \\<lbrakk>\\<And>t.\n                   t \\<in> A\\<^sup>\\<star> \\<Longrightarrow>\n                   t \\<up> i \\<in> A\\<^sup>\\<star>;\n        t \\<in> A\\<^sup>\\<star>\\<rbrakk>\n       \\<Longrightarrow> t \\<up> Suc i \\<in> A\\<^sup>\\<star>", "thus \"t \\<up> Suc n \\<in> A\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  t \\<in> A\\<^sup>\\<star>\n  ?t \\<in> A\\<^sup>\\<star> \\<Longrightarrow>\n  ?t \\<up> n \\<in> A\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. t \\<up> Suc n \\<in> A\\<^sup>\\<star>", "by (cases \"t\") auto"], ["proof (state)\nthis:\n  t \\<up> Suc n \\<in> A\\<^sup>\\<star>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ldrop_infT[simp]: \"t \\<in> A\\<^sup>\\<omega> \\<Longrightarrow> t \\<up> i \\<in> A\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> A\\<^sup>\\<omega> \\<Longrightarrow>\n    t \\<up> i \\<in> A\\<^sup>\\<omega>", "proof (induct i arbitrary: t)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t.\n       t \\<in> A\\<^sup>\\<omega> \\<Longrightarrow>\n       t \\<up> 0 \\<in> A\\<^sup>\\<omega>\n 2. \\<And>i t.\n       \\<lbrakk>\\<And>t.\n                   t \\<in> A\\<^sup>\\<omega> \\<Longrightarrow>\n                   t \\<up> i \\<in> A\\<^sup>\\<omega>;\n        t \\<in> A\\<^sup>\\<omega>\\<rbrakk>\n       \\<Longrightarrow> t \\<up> Suc i \\<in> A\\<^sup>\\<omega>", "case 0"], ["proof (state)\nthis:\n  t \\<in> A\\<^sup>\\<omega>\n\ngoal (2 subgoals):\n 1. \\<And>t.\n       t \\<in> A\\<^sup>\\<omega> \\<Longrightarrow>\n       t \\<up> 0 \\<in> A\\<^sup>\\<omega>\n 2. \\<And>i t.\n       \\<lbrakk>\\<And>t.\n                   t \\<in> A\\<^sup>\\<omega> \\<Longrightarrow>\n                   t \\<up> i \\<in> A\\<^sup>\\<omega>;\n        t \\<in> A\\<^sup>\\<omega>\\<rbrakk>\n       \\<Longrightarrow> t \\<up> Suc i \\<in> A\\<^sup>\\<omega>", "thus ?case"], ["proof (prove)\nusing this:\n  t \\<in> A\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. t \\<up> 0 \\<in> A\\<^sup>\\<omega>", "by simp"], ["proof (state)\nthis:\n  t \\<up> 0 \\<in> A\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. \\<And>i t.\n       \\<lbrakk>\\<And>t.\n                   t \\<in> A\\<^sup>\\<omega> \\<Longrightarrow>\n                   t \\<up> i \\<in> A\\<^sup>\\<omega>;\n        t \\<in> A\\<^sup>\\<omega>\\<rbrakk>\n       \\<Longrightarrow> t \\<up> Suc i \\<in> A\\<^sup>\\<omega>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i t.\n       \\<lbrakk>\\<And>t.\n                   t \\<in> A\\<^sup>\\<omega> \\<Longrightarrow>\n                   t \\<up> i \\<in> A\\<^sup>\\<omega>;\n        t \\<in> A\\<^sup>\\<omega>\\<rbrakk>\n       \\<Longrightarrow> t \\<up> Suc i \\<in> A\\<^sup>\\<omega>", "case (Suc n)"], ["proof (state)\nthis:\n  ?t \\<in> A\\<^sup>\\<omega> \\<Longrightarrow>\n  ?t \\<up> n \\<in> A\\<^sup>\\<omega>\n  t \\<in> A\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. \\<And>i t.\n       \\<lbrakk>\\<And>t.\n                   t \\<in> A\\<^sup>\\<omega> \\<Longrightarrow>\n                   t \\<up> i \\<in> A\\<^sup>\\<omega>;\n        t \\<in> A\\<^sup>\\<omega>\\<rbrakk>\n       \\<Longrightarrow> t \\<up> Suc i \\<in> A\\<^sup>\\<omega>", "from \\<open>t \\<in> A\\<^sup>\\<omega>\\<close> \\<open>\\<And>t. t \\<in> A\\<^sup>\\<omega> \\<Longrightarrow> t \\<up> n \\<in> A\\<^sup>\\<omega>\\<close>"], ["proof (chain)\npicking this:\n  t \\<in> A\\<^sup>\\<omega>\n  ?t \\<in> A\\<^sup>\\<omega> \\<Longrightarrow>\n  ?t \\<up> n \\<in> A\\<^sup>\\<omega>", "show ?case"], ["proof (prove)\nusing this:\n  t \\<in> A\\<^sup>\\<omega>\n  ?t \\<in> A\\<^sup>\\<omega> \\<Longrightarrow>\n  ?t \\<up> n \\<in> A\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. t \\<up> Suc n \\<in> A\\<^sup>\\<omega>", "by (cases \"t\") auto"], ["proof (state)\nthis:\n  t \\<up> Suc n \\<in> A\\<^sup>\\<omega>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lapp_suff_llength: \"r \\<in> A\\<^sup>\\<star> \\<Longrightarrow> (r@@s) \\<up> llength r = s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> A\\<^sup>\\<star> \\<Longrightarrow>\n    (r @@ s) \\<up> LList2.llength r = s", "by (induct rule: finlsts.induct) auto"], ["", "lemma ltake_lappend_llength [simp]:\n  \"r \\<in> A\\<^sup>\\<star> \\<Longrightarrow> (r @@ s) \\<down> llength r = r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<in> A\\<^sup>\\<star> \\<Longrightarrow>\n    (r @@ s) \\<down> LList2.llength r = r", "by (induct rule: finlsts.induct) auto"], ["", "lemma ldrop_LNil_less:\n  \"\\<lbrakk>j \\<le> i; t \\<up> j = LNil\\<rbrakk> \\<Longrightarrow> t \\<up> i = LNil\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>j \\<le> i; t \\<up> j = LNil\\<rbrakk>\n    \\<Longrightarrow> t \\<up> i = LNil", "proof (induct i arbitrary: j t)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>j t.\n       \\<lbrakk>j \\<le> 0; t \\<up> j = LNil\\<rbrakk>\n       \\<Longrightarrow> t \\<up> 0 = LNil\n 2. \\<And>i j t.\n       \\<lbrakk>\\<And>j t.\n                   \\<lbrakk>j \\<le> i; t \\<up> j = LNil\\<rbrakk>\n                   \\<Longrightarrow> t \\<up> i = LNil;\n        j \\<le> Suc i; t \\<up> j = LNil\\<rbrakk>\n       \\<Longrightarrow> t \\<up> Suc i = LNil", "case 0"], ["proof (state)\nthis:\n  j \\<le> 0\n  t \\<up> j = LNil\n\ngoal (2 subgoals):\n 1. \\<And>j t.\n       \\<lbrakk>j \\<le> 0; t \\<up> j = LNil\\<rbrakk>\n       \\<Longrightarrow> t \\<up> 0 = LNil\n 2. \\<And>i j t.\n       \\<lbrakk>\\<And>j t.\n                   \\<lbrakk>j \\<le> i; t \\<up> j = LNil\\<rbrakk>\n                   \\<Longrightarrow> t \\<up> i = LNil;\n        j \\<le> Suc i; t \\<up> j = LNil\\<rbrakk>\n       \\<Longrightarrow> t \\<up> Suc i = LNil", "thus ?case"], ["proof (prove)\nusing this:\n  j \\<le> 0\n  t \\<up> j = LNil\n\ngoal (1 subgoal):\n 1. t \\<up> 0 = LNil", "by auto"], ["proof (state)\nthis:\n  t \\<up> 0 = LNil\n\ngoal (1 subgoal):\n 1. \\<And>i j t.\n       \\<lbrakk>\\<And>j t.\n                   \\<lbrakk>j \\<le> i; t \\<up> j = LNil\\<rbrakk>\n                   \\<Longrightarrow> t \\<up> i = LNil;\n        j \\<le> Suc i; t \\<up> j = LNil\\<rbrakk>\n       \\<Longrightarrow> t \\<up> Suc i = LNil", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j t.\n       \\<lbrakk>\\<And>j t.\n                   \\<lbrakk>j \\<le> i; t \\<up> j = LNil\\<rbrakk>\n                   \\<Longrightarrow> t \\<up> i = LNil;\n        j \\<le> Suc i; t \\<up> j = LNil\\<rbrakk>\n       \\<Longrightarrow> t \\<up> Suc i = LNil", "case (Suc n)"], ["proof (state)\nthis:\n  \\<lbrakk>?j \\<le> n; ?t \\<up> ?j = LNil\\<rbrakk>\n  \\<Longrightarrow> ?t \\<up> n = LNil\n  j \\<le> Suc n\n  t \\<up> j = LNil\n\ngoal (1 subgoal):\n 1. \\<And>i j t.\n       \\<lbrakk>\\<And>j t.\n                   \\<lbrakk>j \\<le> i; t \\<up> j = LNil\\<rbrakk>\n                   \\<Longrightarrow> t \\<up> i = LNil;\n        j \\<le> Suc i; t \\<up> j = LNil\\<rbrakk>\n       \\<Longrightarrow> t \\<up> Suc i = LNil", "thus ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>?j \\<le> n; ?t \\<up> ?j = LNil\\<rbrakk>\n  \\<Longrightarrow> ?t \\<up> n = LNil\n  j \\<le> Suc n\n  t \\<up> j = LNil\n\ngoal (1 subgoal):\n 1. t \\<up> Suc n = LNil", "by (cases j, simp) (cases t, simp_all)"], ["proof (state)\nthis:\n  t \\<up> Suc n = LNil\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ldrop_inf_iffT [iff]: \"(t \\<up> i \\<in> UNIV\\<^sup>\\<omega>)  =  (t \\<in> UNIV\\<^sup>\\<omega>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (t \\<up> i \\<in> UNIV\\<^sup>\\<omega>) = (t \\<in> UNIV\\<^sup>\\<omega>)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. t \\<up> i \\<in> UNIV\\<^sup>\\<omega> \\<Longrightarrow>\n    t \\<in> UNIV\\<^sup>\\<omega>\n 2. t \\<in> UNIV\\<^sup>\\<omega> \\<Longrightarrow>\n    t \\<up> i \\<in> UNIV\\<^sup>\\<omega>", "show \"t\\<up>i \\<in> UNIV\\<^sup>\\<omega> \\<Longrightarrow> t \\<in> UNIV\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<up> i \\<in> UNIV\\<^sup>\\<omega> \\<Longrightarrow>\n    t \\<in> UNIV\\<^sup>\\<omega>", "by (rule ccontr) (auto dest: ldrop_finT)"], ["proof (state)\nthis:\n  t \\<up> i \\<in> UNIV\\<^sup>\\<omega> \\<Longrightarrow>\n  t \\<in> UNIV\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. t \\<in> UNIV\\<^sup>\\<omega> \\<Longrightarrow>\n    t \\<up> i \\<in> UNIV\\<^sup>\\<omega>", "qed auto"], ["", "lemma ldrop_fin_iffT [iff]: \"(t \\<up> i \\<in> UNIV\\<^sup>\\<star>) = (t \\<in> UNIV\\<^sup>\\<star>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (t \\<up> i \\<in> UNIV\\<^sup>\\<star>) = (t \\<in> UNIV\\<^sup>\\<star>)", "by auto"], ["", "lemma drop_nonLNil: \"t\\<up>i \\<noteq> LNil \\<Longrightarrow> t \\<noteq> LNil\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<up> i \\<noteq> LNil \\<Longrightarrow> t \\<noteq> LNil", "by (auto)"], ["", "lemma llength_drop_take:\n  \"t\\<up>i \\<noteq> LNil \\<Longrightarrow> llength (t\\<down>i) = i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<up> i \\<noteq> LNil \\<Longrightarrow>\n    LList2.llength (t \\<down> i) = i", "proof (induct i arbitrary: t)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t.\n       t \\<up> 0 \\<noteq> LNil \\<Longrightarrow>\n       LList2.llength (t \\<down> 0) = 0\n 2. \\<And>i t.\n       \\<lbrakk>\\<And>t.\n                   t \\<up> i \\<noteq> LNil \\<Longrightarrow>\n                   LList2.llength (t \\<down> i) = i;\n        t \\<up> Suc i \\<noteq> LNil\\<rbrakk>\n       \\<Longrightarrow> LList2.llength (t \\<down> Suc i) = Suc i", "case 0"], ["proof (state)\nthis:\n  t \\<up> 0 \\<noteq> LNil\n\ngoal (2 subgoals):\n 1. \\<And>t.\n       t \\<up> 0 \\<noteq> LNil \\<Longrightarrow>\n       LList2.llength (t \\<down> 0) = 0\n 2. \\<And>i t.\n       \\<lbrakk>\\<And>t.\n                   t \\<up> i \\<noteq> LNil \\<Longrightarrow>\n                   LList2.llength (t \\<down> i) = i;\n        t \\<up> Suc i \\<noteq> LNil\\<rbrakk>\n       \\<Longrightarrow> LList2.llength (t \\<down> Suc i) = Suc i", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. LList2.llength (t \\<down> 0) = 0", "by simp"], ["proof (state)\nthis:\n  LList2.llength (t \\<down> 0) = 0\n\ngoal (1 subgoal):\n 1. \\<And>i t.\n       \\<lbrakk>\\<And>t.\n                   t \\<up> i \\<noteq> LNil \\<Longrightarrow>\n                   LList2.llength (t \\<down> i) = i;\n        t \\<up> Suc i \\<noteq> LNil\\<rbrakk>\n       \\<Longrightarrow> LList2.llength (t \\<down> Suc i) = Suc i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i t.\n       \\<lbrakk>\\<And>t.\n                   t \\<up> i \\<noteq> LNil \\<Longrightarrow>\n                   LList2.llength (t \\<down> i) = i;\n        t \\<up> Suc i \\<noteq> LNil\\<rbrakk>\n       \\<Longrightarrow> LList2.llength (t \\<down> Suc i) = Suc i", "case (Suc j)"], ["proof (state)\nthis:\n  ?t \\<up> j \\<noteq> LNil \\<Longrightarrow>\n  LList2.llength (?t \\<down> j) = j\n  t \\<up> Suc j \\<noteq> LNil\n\ngoal (1 subgoal):\n 1. \\<And>i t.\n       \\<lbrakk>\\<And>t.\n                   t \\<up> i \\<noteq> LNil \\<Longrightarrow>\n                   LList2.llength (t \\<down> i) = i;\n        t \\<up> Suc i \\<noteq> LNil\\<rbrakk>\n       \\<Longrightarrow> LList2.llength (t \\<down> Suc i) = Suc i", "thus ?case"], ["proof (prove)\nusing this:\n  ?t \\<up> j \\<noteq> LNil \\<Longrightarrow>\n  LList2.llength (?t \\<down> j) = j\n  t \\<up> Suc j \\<noteq> LNil\n\ngoal (1 subgoal):\n 1. LList2.llength (t \\<down> Suc j) = Suc j", "by (cases t) (auto simp: llength_LCons [of _ UNIV])"], ["proof (state)\nthis:\n  LList2.llength (t \\<down> Suc j) = Suc j\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fps_induct [case_names LNil LCons, induct set: fpslsts, consumes 1]:\n  assumes fps: \"l \\<in> A\\<^sup>\\<clubsuit>\"\n  and    init: \"\\<And>a. a \\<in> A \\<Longrightarrow> P (a##LNil)\"\n  and    step: \"\\<And>a l. \\<lbrakk> l \\<in> A\\<^sup>\\<clubsuit>; P l; a \\<in> A \\<rbrakk> \\<Longrightarrow> P (a ## l)\"\n  shows \"P l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P l", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. P l", "from fps"], ["proof (chain)\npicking this:\n  l \\<in> A\\<^sup>\\<clubsuit>", "have \"l \\<in> A\\<^sup>\\<star>\" and \"l \\<noteq> LNil\""], ["proof (prove)\nusing this:\n  l \\<in> A\\<^sup>\\<clubsuit>\n\ngoal (1 subgoal):\n 1. l \\<in> A\\<^sup>\\<star> &&& l \\<noteq> LNil", "by auto"], ["proof (state)\nthis:\n  l \\<in> A\\<^sup>\\<star>\n  l \\<noteq> LNil\n\ngoal (1 subgoal):\n 1. P l", "thus ?thesis"], ["proof (prove)\nusing this:\n  l \\<in> A\\<^sup>\\<star>\n  l \\<noteq> LNil\n\ngoal (1 subgoal):\n 1. P l", "by (induct, simp) (cases, auto intro: init step)"], ["proof (state)\nthis:\n  P l\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lbutlast_lapp_llast:\nassumes \"l \\<in> A\\<^sup>\\<clubsuit>\"\n  shows \"l = lbutlast l @@ (llast l ## LNil)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. l = lbutlast l @@ LList2.llast l ## LNil", "using assms"], ["proof (prove)\nusing this:\n  l \\<in> A\\<^sup>\\<clubsuit>\n\ngoal (1 subgoal):\n 1. l = lbutlast l @@ LList2.llast l ## LNil", "by induct auto"], ["", "lemma llast_snoc [simp]:\n  assumes fin: \"xs \\<in> A\\<^sup>\\<star>\"\n  shows \"llast (xs @@ x ## LNil) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LList2.llast (xs @@ x ## LNil) = x", "using fin"], ["proof (prove)\nusing this:\n  xs \\<in> A\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. LList2.llast (xs @@ x ## LNil) = x", "proof induct"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>l. l = LNil \\<Longrightarrow> LList2.llast (l @@ x ## LNil) = x\n 2. \\<And>a l.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>; LList2.llast (l @@ x ## LNil) = x;\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> LList2.llast ((a ## l) @@ x ## LNil) = x", "case LNil_fin"], ["proof (state)\nthis:\n  l_ = LNil\n\ngoal (2 subgoals):\n 1. \\<And>l. l = LNil \\<Longrightarrow> LList2.llast (l @@ x ## LNil) = x\n 2. \\<And>a l.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>; LList2.llast (l @@ x ## LNil) = x;\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> LList2.llast ((a ## l) @@ x ## LNil) = x", "thus ?case"], ["proof (prove)\nusing this:\n  l_ = LNil\n\ngoal (1 subgoal):\n 1. LList2.llast (l_ @@ x ## LNil) = x", "by simp"], ["proof (state)\nthis:\n  LList2.llast (l_ @@ x ## LNil) = x\n\ngoal (1 subgoal):\n 1. \\<And>a l.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>; LList2.llast (l @@ x ## LNil) = x;\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> LList2.llast ((a ## l) @@ x ## LNil) = x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a l.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>; LList2.llast (l @@ x ## LNil) = x;\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> LList2.llast ((a ## l) @@ x ## LNil) = x", "case (LCons_fin a l)"], ["proof (state)\nthis:\n  l \\<in> A\\<^sup>\\<star>\n  LList2.llast (l @@ x ## LNil) = x\n  a \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>a l.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>; LList2.llast (l @@ x ## LNil) = x;\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> LList2.llast ((a ## l) @@ x ## LNil) = x", "have \"x ## LNil \\<in> UNIV\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ## LNil \\<in> UNIV\\<^sup>\\<star>", "by auto"], ["proof (state)\nthis:\n  x ## LNil \\<in> UNIV\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. \\<And>a l.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>; LList2.llast (l @@ x ## LNil) = x;\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> LList2.llast ((a ## l) @@ x ## LNil) = x", "with LCons_fin"], ["proof (chain)\npicking this:\n  l \\<in> A\\<^sup>\\<star>\n  LList2.llast (l @@ x ## LNil) = x\n  a \\<in> A\n  x ## LNil \\<in> UNIV\\<^sup>\\<star>", "show ?case"], ["proof (prove)\nusing this:\n  l \\<in> A\\<^sup>\\<star>\n  LList2.llast (l @@ x ## LNil) = x\n  a \\<in> A\n  x ## LNil \\<in> UNIV\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. LList2.llast ((a ## l) @@ x ## LNil) = x", "by (auto simp: llast_LCons [of _ UNIV])"], ["proof (state)\nthis:\n  LList2.llast ((a ## l) @@ x ## LNil) = x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lbutlast_snoc [simp]:\n  assumes fin: \"xs \\<in> A\\<^sup>\\<star>\"\n  shows \"lbutlast (xs @@ x ## LNil) = xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lbutlast (xs @@ x ## LNil) = xs", "using fin"], ["proof (prove)\nusing this:\n  xs \\<in> A\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. lbutlast (xs @@ x ## LNil) = xs", "proof induct"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>l. l = LNil \\<Longrightarrow> lbutlast (l @@ x ## LNil) = l\n 2. \\<And>a l.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>; lbutlast (l @@ x ## LNil) = l;\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> lbutlast ((a ## l) @@ x ## LNil) = a ## l", "case LNil_fin"], ["proof (state)\nthis:\n  l_ = LNil\n\ngoal (2 subgoals):\n 1. \\<And>l. l = LNil \\<Longrightarrow> lbutlast (l @@ x ## LNil) = l\n 2. \\<And>a l.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>; lbutlast (l @@ x ## LNil) = l;\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> lbutlast ((a ## l) @@ x ## LNil) = a ## l", "thus ?case"], ["proof (prove)\nusing this:\n  l_ = LNil\n\ngoal (1 subgoal):\n 1. lbutlast (l_ @@ x ## LNil) = l_", "by simp"], ["proof (state)\nthis:\n  lbutlast (l_ @@ x ## LNil) = l_\n\ngoal (1 subgoal):\n 1. \\<And>a l.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>; lbutlast (l @@ x ## LNil) = l;\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> lbutlast ((a ## l) @@ x ## LNil) = a ## l", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a l.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>; lbutlast (l @@ x ## LNil) = l;\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> lbutlast ((a ## l) @@ x ## LNil) = a ## l", "case (LCons_fin a l)"], ["proof (state)\nthis:\n  l \\<in> A\\<^sup>\\<star>\n  lbutlast (l @@ x ## LNil) = l\n  a \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>a l.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>; lbutlast (l @@ x ## LNil) = l;\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> lbutlast ((a ## l) @@ x ## LNil) = a ## l", "have \"x ## LNil \\<in> UNIV\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ## LNil \\<in> UNIV\\<^sup>\\<star>", "by auto"], ["proof (state)\nthis:\n  x ## LNil \\<in> UNIV\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. \\<And>a l.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>; lbutlast (l @@ x ## LNil) = l;\n        a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> lbutlast ((a ## l) @@ x ## LNil) = a ## l", "with LCons_fin"], ["proof (chain)\npicking this:\n  l \\<in> A\\<^sup>\\<star>\n  lbutlast (l @@ x ## LNil) = l\n  a \\<in> A\n  x ## LNil \\<in> UNIV\\<^sup>\\<star>", "show ?case"], ["proof (prove)\nusing this:\n  l \\<in> A\\<^sup>\\<star>\n  lbutlast (l @@ x ## LNil) = l\n  a \\<in> A\n  x ## LNil \\<in> UNIV\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. lbutlast ((a ## l) @@ x ## LNil) = a ## l", "by (auto simp: lbutlast_LCons [of _ UNIV])"], ["proof (state)\nthis:\n  lbutlast ((a ## l) @@ x ## LNil) = a ## l\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma llast_lappend [simp]:\n\"\\<lbrakk> x \\<in> UNIV\\<^sup>\\<star>; y \\<in> UNIV\\<^sup>\\<star> \\<rbrakk> \\<Longrightarrow> llast (x @@ a ## y) = llast (a ## y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> UNIV\\<^sup>\\<star>; y \\<in> UNIV\\<^sup>\\<star>\\<rbrakk>\n    \\<Longrightarrow> LList2.llast (x @@ a ## y) = LList2.llast (a ## y)", "proof (induct rule: finlsts.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. y \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow>\n    LList2.llast (LNil @@ a ## y) = LList2.llast (a ## y)\n 2. \\<And>l aa.\n       \\<lbrakk>l \\<in> UNIV\\<^sup>\\<star>;\n        y \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow>\n        LList2.llast (l @@ a ## y) = LList2.llast (a ## y);\n        aa \\<in> UNIV; y \\<in> UNIV\\<^sup>\\<star>\\<rbrakk>\n       \\<Longrightarrow> LList2.llast ((aa ## l) @@ a ## y) =\n                         LList2.llast (a ## y)", "case LNil_fin"], ["proof (state)\nthis:\n  y \\<in> UNIV\\<^sup>\\<star>\n\ngoal (2 subgoals):\n 1. y \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow>\n    LList2.llast (LNil @@ a ## y) = LList2.llast (a ## y)\n 2. \\<And>l aa.\n       \\<lbrakk>l \\<in> UNIV\\<^sup>\\<star>;\n        y \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow>\n        LList2.llast (l @@ a ## y) = LList2.llast (a ## y);\n        aa \\<in> UNIV; y \\<in> UNIV\\<^sup>\\<star>\\<rbrakk>\n       \\<Longrightarrow> LList2.llast ((aa ## l) @@ a ## y) =\n                         LList2.llast (a ## y)", "thus ?case"], ["proof (prove)\nusing this:\n  y \\<in> UNIV\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. LList2.llast (LNil @@ a ## y) = LList2.llast (a ## y)", "by simp"], ["proof (state)\nthis:\n  LList2.llast (LNil @@ a ## y) = LList2.llast (a ## y)\n\ngoal (1 subgoal):\n 1. \\<And>l aa.\n       \\<lbrakk>l \\<in> UNIV\\<^sup>\\<star>;\n        y \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow>\n        LList2.llast (l @@ a ## y) = LList2.llast (a ## y);\n        aa \\<in> UNIV; y \\<in> UNIV\\<^sup>\\<star>\\<rbrakk>\n       \\<Longrightarrow> LList2.llast ((aa ## l) @@ a ## y) =\n                         LList2.llast (a ## y)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l aa.\n       \\<lbrakk>l \\<in> UNIV\\<^sup>\\<star>;\n        y \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow>\n        LList2.llast (l @@ a ## y) = LList2.llast (a ## y);\n        aa \\<in> UNIV; y \\<in> UNIV\\<^sup>\\<star>\\<rbrakk>\n       \\<Longrightarrow> LList2.llast ((aa ## l) @@ a ## y) =\n                         LList2.llast (a ## y)", "case (LCons_fin l b)"], ["proof (state)\nthis:\n  l \\<in> UNIV\\<^sup>\\<star>\n  y \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow>\n  LList2.llast (l @@ a ## y) = LList2.llast (a ## y)\n  b \\<in> UNIV\n  y \\<in> UNIV\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. \\<And>l aa.\n       \\<lbrakk>l \\<in> UNIV\\<^sup>\\<star>;\n        y \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow>\n        LList2.llast (l @@ a ## y) = LList2.llast (a ## y);\n        aa \\<in> UNIV; y \\<in> UNIV\\<^sup>\\<star>\\<rbrakk>\n       \\<Longrightarrow> LList2.llast ((aa ## l) @@ a ## y) =\n                         LList2.llast (a ## y)", "hence \"l @@ a ## y \\<in> UNIV\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  l \\<in> UNIV\\<^sup>\\<star>\n  y \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow>\n  LList2.llast (l @@ a ## y) = LList2.llast (a ## y)\n  b \\<in> UNIV\n  y \\<in> UNIV\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. l @@ a ## y \\<in> UNIV\\<^sup>\\<star>", "by auto"], ["proof (state)\nthis:\n  l @@ a ## y \\<in> UNIV\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. \\<And>l aa.\n       \\<lbrakk>l \\<in> UNIV\\<^sup>\\<star>;\n        y \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow>\n        LList2.llast (l @@ a ## y) = LList2.llast (a ## y);\n        aa \\<in> UNIV; y \\<in> UNIV\\<^sup>\\<star>\\<rbrakk>\n       \\<Longrightarrow> LList2.llast ((aa ## l) @@ a ## y) =\n                         LList2.llast (a ## y)", "thus ?case"], ["proof (prove)\nusing this:\n  l @@ a ## y \\<in> UNIV\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. LList2.llast ((b ## l) @@ a ## y) = LList2.llast (a ## y)", "using LCons_fin"], ["proof (prove)\nusing this:\n  l @@ a ## y \\<in> UNIV\\<^sup>\\<star>\n  l \\<in> UNIV\\<^sup>\\<star>\n  y \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow>\n  LList2.llast (l @@ a ## y) = LList2.llast (a ## y)\n  b \\<in> UNIV\n  y \\<in> UNIV\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. LList2.llast ((b ## l) @@ a ## y) = LList2.llast (a ## y)", "by (auto simp: llast_LCons [of _ UNIV])"], ["proof (state)\nthis:\n  LList2.llast ((b ## l) @@ a ## y) = LList2.llast (a ## y)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma llast_llength:\n  assumes tfin: \"t \\<in> UNIV\\<^sup>\\<star>\"\n  shows \"t \\<noteq> LNil \\<Longrightarrow> t !! (llength t - (Suc 0)) = Some (llast t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<noteq> LNil \\<Longrightarrow>\n    t !! (LList2.llength t - Suc 0) = Some (LList2.llast t)", "using tfin"], ["proof (prove)\nusing this:\n  t \\<in> UNIV\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. t \\<noteq> LNil \\<Longrightarrow>\n    t !! (LList2.llength t - Suc 0) = Some (LList2.llast t)", "proof induct"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>l = LNil; l \\<noteq> LNil\\<rbrakk>\n       \\<Longrightarrow> l !! (LList2.llength l - Suc 0) =\n                         Some (LList2.llast l)\n 2. \\<And>a l.\n       \\<lbrakk>l \\<in> UNIV\\<^sup>\\<star>;\n        l \\<noteq> LNil \\<Longrightarrow>\n        l !! (LList2.llength l - Suc 0) = Some (LList2.llast l);\n        a \\<in> UNIV; a ## l \\<noteq> LNil\\<rbrakk>\n       \\<Longrightarrow> (a ## l) !! (LList2.llength (a ## l) - Suc 0) =\n                         Some (LList2.llast (a ## l))", "case (LNil_fin l)"], ["proof (state)\nthis:\n  l = LNil\n  l \\<noteq> LNil\n\ngoal (2 subgoals):\n 1. \\<And>l.\n       \\<lbrakk>l = LNil; l \\<noteq> LNil\\<rbrakk>\n       \\<Longrightarrow> l !! (LList2.llength l - Suc 0) =\n                         Some (LList2.llast l)\n 2. \\<And>a l.\n       \\<lbrakk>l \\<in> UNIV\\<^sup>\\<star>;\n        l \\<noteq> LNil \\<Longrightarrow>\n        l !! (LList2.llength l - Suc 0) = Some (LList2.llast l);\n        a \\<in> UNIV; a ## l \\<noteq> LNil\\<rbrakk>\n       \\<Longrightarrow> (a ## l) !! (LList2.llength (a ## l) - Suc 0) =\n                         Some (LList2.llast (a ## l))", "thus ?case"], ["proof (prove)\nusing this:\n  l = LNil\n  l \\<noteq> LNil\n\ngoal (1 subgoal):\n 1. l !! (LList2.llength l - Suc 0) = Some (LList2.llast l)", "by auto"], ["proof (state)\nthis:\n  l !! (LList2.llength l - Suc 0) = Some (LList2.llast l)\n\ngoal (1 subgoal):\n 1. \\<And>a l.\n       \\<lbrakk>l \\<in> UNIV\\<^sup>\\<star>;\n        l \\<noteq> LNil \\<Longrightarrow>\n        l !! (LList2.llength l - Suc 0) = Some (LList2.llast l);\n        a \\<in> UNIV; a ## l \\<noteq> LNil\\<rbrakk>\n       \\<Longrightarrow> (a ## l) !! (LList2.llength (a ## l) - Suc 0) =\n                         Some (LList2.llast (a ## l))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a l.\n       \\<lbrakk>l \\<in> UNIV\\<^sup>\\<star>;\n        l \\<noteq> LNil \\<Longrightarrow>\n        l !! (LList2.llength l - Suc 0) = Some (LList2.llast l);\n        a \\<in> UNIV; a ## l \\<noteq> LNil\\<rbrakk>\n       \\<Longrightarrow> (a ## l) !! (LList2.llength (a ## l) - Suc 0) =\n                         Some (LList2.llast (a ## l))", "case (LCons_fin a l)"], ["proof (state)\nthis:\n  l \\<in> UNIV\\<^sup>\\<star>\n  l \\<noteq> LNil \\<Longrightarrow>\n  l !! (LList2.llength l - Suc 0) = Some (LList2.llast l)\n  a \\<in> UNIV\n  a ## l \\<noteq> LNil\n\ngoal (1 subgoal):\n 1. \\<And>a l.\n       \\<lbrakk>l \\<in> UNIV\\<^sup>\\<star>;\n        l \\<noteq> LNil \\<Longrightarrow>\n        l !! (LList2.llength l - Suc 0) = Some (LList2.llast l);\n        a \\<in> UNIV; a ## l \\<noteq> LNil\\<rbrakk>\n       \\<Longrightarrow> (a ## l) !! (LList2.llength (a ## l) - Suc 0) =\n                         Some (LList2.llast (a ## l))", "note consal = this"], ["proof (state)\nthis:\n  l \\<in> UNIV\\<^sup>\\<star>\n  l \\<noteq> LNil \\<Longrightarrow>\n  l !! (LList2.llength l - Suc 0) = Some (LList2.llast l)\n  a \\<in> UNIV\n  a ## l \\<noteq> LNil\n\ngoal (1 subgoal):\n 1. \\<And>a l.\n       \\<lbrakk>l \\<in> UNIV\\<^sup>\\<star>;\n        l \\<noteq> LNil \\<Longrightarrow>\n        l !! (LList2.llength l - Suc 0) = Some (LList2.llast l);\n        a \\<in> UNIV; a ## l \\<noteq> LNil\\<rbrakk>\n       \\<Longrightarrow> (a ## l) !! (LList2.llength (a ## l) - Suc 0) =\n                         Some (LList2.llast (a ## l))", "thus ?case"], ["proof (prove)\nusing this:\n  l \\<in> UNIV\\<^sup>\\<star>\n  l \\<noteq> LNil \\<Longrightarrow>\n  l !! (LList2.llength l - Suc 0) = Some (LList2.llast l)\n  a \\<in> UNIV\n  a ## l \\<noteq> LNil\n\ngoal (1 subgoal):\n 1. (a ## l) !! (LList2.llength (a ## l) - Suc 0) =\n    Some (LList2.llast (a ## l))", "proof (cases l)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>l \\<noteq> LNil \\<Longrightarrow>\n             l !! (LList2.llength l - Suc 0) = Some (LList2.llast l);\n     a \\<in> UNIV; a ## l \\<noteq> LNil; l = LNil\\<rbrakk>\n    \\<Longrightarrow> (a ## l) !! (LList2.llength (a ## l) - Suc 0) =\n                      Some (LList2.llast (a ## l))\n 2. \\<And>la aa.\n       \\<lbrakk>l \\<noteq> LNil \\<Longrightarrow>\n                l !! (LList2.llength l - Suc 0) = Some (LList2.llast l);\n        a \\<in> UNIV; a ## l \\<noteq> LNil; l = aa ## la;\n        la \\<in> UNIV\\<^sup>\\<star>; aa \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> (a ## l) !! (LList2.llength (a ## l) - Suc 0) =\n                         Some (LList2.llast (a ## l))", "case LNil_fin"], ["proof (state)\nthis:\n  l = LNil\n\ngoal (2 subgoals):\n 1. \\<lbrakk>l \\<noteq> LNil \\<Longrightarrow>\n             l !! (LList2.llength l - Suc 0) = Some (LList2.llast l);\n     a \\<in> UNIV; a ## l \\<noteq> LNil; l = LNil\\<rbrakk>\n    \\<Longrightarrow> (a ## l) !! (LList2.llength (a ## l) - Suc 0) =\n                      Some (LList2.llast (a ## l))\n 2. \\<And>la aa.\n       \\<lbrakk>l \\<noteq> LNil \\<Longrightarrow>\n                l !! (LList2.llength l - Suc 0) = Some (LList2.llast l);\n        a \\<in> UNIV; a ## l \\<noteq> LNil; l = aa ## la;\n        la \\<in> UNIV\\<^sup>\\<star>; aa \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> (a ## l) !! (LList2.llength (a ## l) - Suc 0) =\n                         Some (LList2.llast (a ## l))", "thus ?thesis"], ["proof (prove)\nusing this:\n  l = LNil\n\ngoal (1 subgoal):\n 1. (a ## l) !! (LList2.llength (a ## l) - Suc 0) =\n    Some (LList2.llast (a ## l))", "using consal"], ["proof (prove)\nusing this:\n  l = LNil\n  l \\<in> UNIV\\<^sup>\\<star>\n  l \\<noteq> LNil \\<Longrightarrow>\n  l !! (LList2.llength l - Suc 0) = Some (LList2.llast l)\n  a \\<in> UNIV\n  a ## l \\<noteq> LNil\n\ngoal (1 subgoal):\n 1. (a ## l) !! (LList2.llength (a ## l) - Suc 0) =\n    Some (LList2.llast (a ## l))", "by simp"], ["proof (state)\nthis:\n  (a ## l) !! (LList2.llength (a ## l) - Suc 0) =\n  Some (LList2.llast (a ## l))\n\ngoal (1 subgoal):\n 1. \\<And>la aa.\n       \\<lbrakk>l \\<noteq> LNil \\<Longrightarrow>\n                l !! (LList2.llength l - Suc 0) = Some (LList2.llast l);\n        a \\<in> UNIV; a ## l \\<noteq> LNil; l = aa ## la;\n        la \\<in> UNIV\\<^sup>\\<star>; aa \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> (a ## l) !! (LList2.llength (a ## l) - Suc 0) =\n                         Some (LList2.llast (a ## l))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>la aa.\n       \\<lbrakk>l \\<noteq> LNil \\<Longrightarrow>\n                l !! (LList2.llength l - Suc 0) = Some (LList2.llast l);\n        a \\<in> UNIV; a ## l \\<noteq> LNil; l = aa ## la;\n        la \\<in> UNIV\\<^sup>\\<star>; aa \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> (a ## l) !! (LList2.llength (a ## l) - Suc 0) =\n                         Some (LList2.llast (a ## l))", "case (LCons_fin aa la)"], ["proof (state)\nthis:\n  l = la ## aa\n  aa \\<in> UNIV\\<^sup>\\<star>\n  la \\<in> UNIV\n\ngoal (1 subgoal):\n 1. \\<And>la aa.\n       \\<lbrakk>l \\<noteq> LNil \\<Longrightarrow>\n                l !! (LList2.llength l - Suc 0) = Some (LList2.llast l);\n        a \\<in> UNIV; a ## l \\<noteq> LNil; l = aa ## la;\n        la \\<in> UNIV\\<^sup>\\<star>; aa \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> (a ## l) !! (LList2.llength (a ## l) - Suc 0) =\n                         Some (LList2.llast (a ## l))", "thus ?thesis"], ["proof (prove)\nusing this:\n  l = la ## aa\n  aa \\<in> UNIV\\<^sup>\\<star>\n  la \\<in> UNIV\n\ngoal (1 subgoal):\n 1. (a ## l) !! (LList2.llength (a ## l) - Suc 0) =\n    Some (LList2.llast (a ## l))", "using consal"], ["proof (prove)\nusing this:\n  l = la ## aa\n  aa \\<in> UNIV\\<^sup>\\<star>\n  la \\<in> UNIV\n  l \\<in> UNIV\\<^sup>\\<star>\n  l \\<noteq> LNil \\<Longrightarrow>\n  l !! (LList2.llength l - Suc 0) = Some (LList2.llast l)\n  a \\<in> UNIV\n  a ## l \\<noteq> LNil\n\ngoal (1 subgoal):\n 1. (a ## l) !! (LList2.llength (a ## l) - Suc 0) =\n    Some (LList2.llast (a ## l))", "by simp"], ["proof (state)\nthis:\n  (a ## l) !! (LList2.llength (a ## l) - Suc 0) =\n  Some (LList2.llast (a ## l))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (a ## l) !! (LList2.llength (a ## l) - Suc 0) =\n  Some (LList2.llast (a ## l))\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>The constant llist\\<close>"], ["", "definition lconst :: \"'a \\<Rightarrow> 'a llist\" where\n  \"lconst a \\<equiv> iterates (\\<lambda>x. x) a\""], ["", "lemma lconst_unfold: \"lconst a = a ## lconst a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lconst a = a ## lconst a", "by (auto simp: lconst_def intro: iterates)"], ["", "lemma lconst_LNil [iff]: \"lconst a \\<noteq> LNil\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lconst a \\<noteq> LNil", "by (clarify,frule subst [OF lconst_unfold]) simp"], ["", "lemma lconstT:\n  assumes aA: \"a \\<in> A\"\n  shows \"lconst a \\<in> A\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lconst a \\<in> A\\<^sup>\\<omega>", "proof (rule inflstsI)"], ["proof (state)\ngoal (2 subgoals):\n 1. lconst a \\<in> A\\<^sup>\\<infinity>\n 2. lconst a \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow> False", "show \"lconst a \\<in> A\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lconst a \\<in> A\\<^sup>\\<infinity>", "proof (rule alllsts.coinduct [of \"\\<lambda>x. x = lconst a\"], simp_all)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>l aa.\n       lconst a = aa ## l \\<and>\n       (l = lconst a \\<or> l \\<in> A\\<^sup>\\<infinity>) \\<and> aa \\<in> A", "have \"lconst a = a ## lconst a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lconst a = a ## lconst a", "by (rule lconst_unfold)"], ["proof (state)\nthis:\n  lconst a = a ## lconst a\n\ngoal (1 subgoal):\n 1. \\<exists>l aa.\n       lconst a = aa ## l \\<and>\n       (l = lconst a \\<or> l \\<in> A\\<^sup>\\<infinity>) \\<and> aa \\<in> A", "with aA"], ["proof (chain)\npicking this:\n  a \\<in> A\n  lconst a = a ## lconst a", "show \"\\<exists>l aa. lconst a = aa ## l \\<and> (l = lconst a \\<or> l \\<in> A\\<^sup>\\<infinity>) \\<and> aa \\<in> A\""], ["proof (prove)\nusing this:\n  a \\<in> A\n  lconst a = a ## lconst a\n\ngoal (1 subgoal):\n 1. \\<exists>l aa.\n       lconst a = aa ## l \\<and>\n       (l = lconst a \\<or> l \\<in> A\\<^sup>\\<infinity>) \\<and> aa \\<in> A", "by blast"], ["proof (state)\nthis:\n  \\<exists>l aa.\n     lconst a = aa ## l \\<and>\n     (l = lconst a \\<or> l \\<in> A\\<^sup>\\<infinity>) \\<and> aa \\<in> A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lconst a \\<in> A\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. lconst a \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. lconst a \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow> False", "assume lconst: \"lconst a \\<in> UNIV\\<^sup>\\<star>\""], ["proof (state)\nthis:\n  lconst a \\<in> UNIV\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. lconst a \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  lconst a \\<in> UNIV\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. lconst a \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow> False", "have \"\\<And>l. l \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow> lconst a \\<noteq> l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>l.\n       l \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow> lconst a \\<noteq> l", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l.\n       l \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow> lconst a \\<noteq> l", "fix l::\"'a llist\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l.\n       l \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow> lconst a \\<noteq> l", "assume \"l\\<in>UNIV\\<^sup>\\<star>\""], ["proof (state)\nthis:\n  l \\<in> UNIV\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. \\<And>l.\n       l \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow> lconst a \\<noteq> l", "thus \"lconst a \\<noteq> l\""], ["proof (prove)\nusing this:\n  l \\<in> UNIV\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. lconst a \\<noteq> l", "proof (rule finlsts_induct, simp_all)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>aa la.\n       \\<lbrakk>la \\<in> UNIV\\<^sup>\\<star>; lconst a \\<noteq> la;\n        l \\<in> UNIV\\<^sup>\\<star>\\<rbrakk>\n       \\<Longrightarrow> lconst a \\<noteq> aa ## la", "fix a' l'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>aa la.\n       \\<lbrakk>la \\<in> UNIV\\<^sup>\\<star>; lconst a \\<noteq> la;\n        l \\<in> UNIV\\<^sup>\\<star>\\<rbrakk>\n       \\<Longrightarrow> lconst a \\<noteq> aa ## la", "assume \n        al': \"lconst a \\<noteq> l'\" and\n        l'A: \"l' \\<in> UNIV\\<^sup>\\<star>\""], ["proof (state)\nthis:\n  lconst a \\<noteq> l'\n  l' \\<in> UNIV\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. \\<And>aa la.\n       \\<lbrakk>la \\<in> UNIV\\<^sup>\\<star>; lconst a \\<noteq> la;\n        l \\<in> UNIV\\<^sup>\\<star>\\<rbrakk>\n       \\<Longrightarrow> lconst a \\<noteq> aa ## la", "from al'"], ["proof (chain)\npicking this:\n  lconst a \\<noteq> l'", "show  \"lconst a \\<noteq> a' ## l'\""], ["proof (prove)\nusing this:\n  lconst a \\<noteq> l'\n\ngoal (1 subgoal):\n 1. lconst a \\<noteq> a' ## l'", "proof (rule contrapos_np)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> lconst a \\<noteq> a' ## l' \\<Longrightarrow> lconst a = l'", "assume notal: \"\\<not> lconst a \\<noteq> a' ## l'\""], ["proof (state)\nthis:\n  \\<not> lconst a \\<noteq> a' ## l'\n\ngoal (1 subgoal):\n 1. \\<not> lconst a \\<noteq> a' ## l' \\<Longrightarrow> lconst a = l'", "hence \"lconst a = a' ## l'\""], ["proof (prove)\nusing this:\n  \\<not> lconst a \\<noteq> a' ## l'\n\ngoal (1 subgoal):\n 1. lconst a = a' ## l'", "by simp"], ["proof (state)\nthis:\n  lconst a = a' ## l'\n\ngoal (1 subgoal):\n 1. \\<not> lconst a \\<noteq> a' ## l' \\<Longrightarrow> lconst a = l'", "hence \"a ## lconst a = a' ## l'\""], ["proof (prove)\nusing this:\n  lconst a = a' ## l'\n\ngoal (1 subgoal):\n 1. a ## lconst a = a' ## l'", "by (rule subst [OF lconst_unfold])"], ["proof (state)\nthis:\n  a ## lconst a = a' ## l'\n\ngoal (1 subgoal):\n 1. \\<not> lconst a \\<noteq> a' ## l' \\<Longrightarrow> lconst a = l'", "thus \"lconst a = l'\""], ["proof (prove)\nusing this:\n  a ## lconst a = a' ## l'\n\ngoal (1 subgoal):\n 1. lconst a = l'", "by auto"], ["proof (state)\nthis:\n  lconst a = l'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lconst a \\<noteq> a' ## l'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lconst a \\<noteq> l\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?l \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow> lconst a \\<noteq> ?l\n\ngoal (1 subgoal):\n 1. lconst a \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  lconst a \\<in> UNIV\\<^sup>\\<star>\n  ?l \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow> lconst a \\<noteq> ?l", "show \"False\""], ["proof (prove)\nusing this:\n  lconst a \\<in> UNIV\\<^sup>\\<star>\n  ?l \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow> lconst a \\<noteq> ?l\n\ngoal (1 subgoal):\n 1. False", "using aA"], ["proof (prove)\nusing this:\n  lconst a \\<in> UNIV\\<^sup>\\<star>\n  ?l \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow> lconst a \\<noteq> ?l\n  a \\<in> A\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>The prefix order of llists\\<close>"], ["", "instantiation llist :: (type) order\nbegin"], ["", "definition\n  llist_le_def: \"(s :: 'a llist) \\<le> t \\<longleftrightarrow> (\\<exists>d. t = s @@ d)\""], ["", "definition\n  llist_less_def: \"(s :: 'a llist) < t \\<longleftrightarrow> (s \\<le> t \\<and> s \\<noteq> t)\""], ["", "lemma not_LCons_le_LNil [iff]:\n  \"\\<not> (a##l) \\<le> LNil\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> a ## l \\<le> LNil", "by (unfold llist_le_def) auto"], ["", "lemma LNil_le [iff]:\"LNil \\<le> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LNil \\<le> s", "by (auto simp: llist_le_def)"], ["", "lemma le_LNil [iff]: \"(s \\<le> LNil) = (s = LNil)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s \\<le> LNil) = (s = LNil)", "by (auto simp: llist_le_def)"], ["", "lemma llist_inf_le:\n  \"s \\<in> A\\<^sup>\\<omega>  \\<Longrightarrow> (s\\<le>t) = (s=t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> A\\<^sup>\\<omega> \\<Longrightarrow> (s \\<le> t) = (s = t)", "by (unfold llist_le_def) auto"], ["", "lemma le_LCons [iff]: \"(x ## xs \\<le> y ## ys) = (x = y \\<and> xs \\<le> ys)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x ## xs \\<le> y ## ys) = (x = y \\<and> xs \\<le> ys)", "by (unfold llist_le_def) auto"], ["", "lemma llist_le_refl [iff]:\n  \"(s:: 'a llist) \\<le> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<le> s", "by (unfold llist_le_def) (rule exI [of _ \"LNil\"], simp)"], ["", "lemma llist_le_trans [trans]:\n  fixes r:: \"'a llist\"\n  shows \"r \\<le> s \\<Longrightarrow> s \\<le> t \\<Longrightarrow> r \\<le> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<le> s; s \\<le> t\\<rbrakk> \\<Longrightarrow> r \\<le> t", "by (auto simp: llist_le_def lappend_assoc)"], ["", "lemma llist_le_anti_sym:\n  fixes s:: \"'a llist\"\n  assumes st: \"s \\<le> t\"\n  and ts: \"t \\<le> s\"\n  shows \"s = t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s = t", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. s = t", "have \"s \\<in> UNIV\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> UNIV\\<^sup>\\<infinity>", "by auto"], ["proof (state)\nthis:\n  s \\<in> UNIV\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. s = t", "thus ?thesis"], ["proof (prove)\nusing this:\n  s \\<in> UNIV\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. s = t", "proof (cases rule: alllstsE)"], ["proof (state)\ngoal (2 subgoals):\n 1. s \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow> s = t\n 2. s \\<in> UNIV\\<^sup>\\<omega> \\<Longrightarrow> s = t", "case finite"], ["proof (state)\nthis:\n  s \\<in> UNIV\\<^sup>\\<star>\n\ngoal (2 subgoals):\n 1. s \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow> s = t\n 2. s \\<in> UNIV\\<^sup>\\<omega> \\<Longrightarrow> s = t", "hence \"\\<forall> t.  s \\<le> t \\<and> t \\<le> s \\<longrightarrow> s = t\""], ["proof (prove)\nusing this:\n  s \\<in> UNIV\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. \\<forall>t. s \\<le> t \\<and> t \\<le> s \\<longrightarrow> s = t", "proof (induct rule: finlsts.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>t. LNil \\<le> t \\<and> t \\<le> LNil \\<longrightarrow> LNil = t\n 2. \\<And>l a.\n       \\<lbrakk>l \\<in> UNIV\\<^sup>\\<star>;\n        \\<forall>t. l \\<le> t \\<and> t \\<le> l \\<longrightarrow> l = t;\n        a \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> \\<forall>t.\n                            a ## l \\<le> t \\<and>\n                            t \\<le> a ## l \\<longrightarrow>\n                            a ## l = t", "case LNil_fin"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<forall>t. LNil \\<le> t \\<and> t \\<le> LNil \\<longrightarrow> LNil = t\n 2. \\<And>l a.\n       \\<lbrakk>l \\<in> UNIV\\<^sup>\\<star>;\n        \\<forall>t. l \\<le> t \\<and> t \\<le> l \\<longrightarrow> l = t;\n        a \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> \\<forall>t.\n                            a ## l \\<le> t \\<and>\n                            t \\<le> a ## l \\<longrightarrow>\n                            a ## l = t", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>t. LNil \\<le> t \\<and> t \\<le> LNil \\<longrightarrow> LNil = t", "by auto"], ["proof (state)\nthis:\n  \\<forall>t. LNil \\<le> t \\<and> t \\<le> LNil \\<longrightarrow> LNil = t\n\ngoal (1 subgoal):\n 1. \\<And>l a.\n       \\<lbrakk>l \\<in> UNIV\\<^sup>\\<star>;\n        \\<forall>t. l \\<le> t \\<and> t \\<le> l \\<longrightarrow> l = t;\n        a \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> \\<forall>t.\n                            a ## l \\<le> t \\<and>\n                            t \\<le> a ## l \\<longrightarrow>\n                            a ## l = t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>l a.\n       \\<lbrakk>l \\<in> UNIV\\<^sup>\\<star>;\n        \\<forall>t. l \\<le> t \\<and> t \\<le> l \\<longrightarrow> l = t;\n        a \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> \\<forall>t.\n                            a ## l \\<le> t \\<and>\n                            t \\<le> a ## l \\<longrightarrow>\n                            a ## l = t", "case (LCons_fin l a)"], ["proof (state)\nthis:\n  l \\<in> UNIV\\<^sup>\\<star>\n  \\<forall>t. l \\<le> t \\<and> t \\<le> l \\<longrightarrow> l = t\n  a \\<in> UNIV\n\ngoal (1 subgoal):\n 1. \\<And>l a.\n       \\<lbrakk>l \\<in> UNIV\\<^sup>\\<star>;\n        \\<forall>t. l \\<le> t \\<and> t \\<le> l \\<longrightarrow> l = t;\n        a \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow> \\<forall>t.\n                            a ## l \\<le> t \\<and>\n                            t \\<le> a ## l \\<longrightarrow>\n                            a ## l = t", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>t.\n       a ## l \\<le> t \\<and> t \\<le> a ## l \\<longrightarrow> a ## l = t", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t.\n       a ## l \\<le> t \\<and> t \\<le> a ## l \\<longrightarrow> a ## l = t", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t.\n       a ## l \\<le> t \\<and> t \\<le> a ## l \\<longrightarrow> a ## l = t", "from LCons_fin"], ["proof (chain)\npicking this:\n  l \\<in> UNIV\\<^sup>\\<star>\n  \\<forall>t. l \\<le> t \\<and> t \\<le> l \\<longrightarrow> l = t\n  a \\<in> UNIV", "show  \"a ## l \\<le> t \\<and> t \\<le> a ## l \\<longrightarrow> a ## l = t\""], ["proof (prove)\nusing this:\n  l \\<in> UNIV\\<^sup>\\<star>\n  \\<forall>t. l \\<le> t \\<and> t \\<le> l \\<longrightarrow> l = t\n  a \\<in> UNIV\n\ngoal (1 subgoal):\n 1. a ## l \\<le> t \\<and> t \\<le> a ## l \\<longrightarrow> a ## l = t", "by (cases \"t\") blast+"], ["proof (state)\nthis:\n  a ## l \\<le> t \\<and> t \\<le> a ## l \\<longrightarrow> a ## l = t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>t.\n     a ## l \\<le> t \\<and> t \\<le> a ## l \\<longrightarrow> a ## l = t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>t. s \\<le> t \\<and> t \\<le> s \\<longrightarrow> s = t\n\ngoal (2 subgoals):\n 1. s \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow> s = t\n 2. s \\<in> UNIV\\<^sup>\\<omega> \\<Longrightarrow> s = t", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>t. s \\<le> t \\<and> t \\<le> s \\<longrightarrow> s = t\n\ngoal (1 subgoal):\n 1. s = t", "using st ts"], ["proof (prove)\nusing this:\n  \\<forall>t. s \\<le> t \\<and> t \\<le> s \\<longrightarrow> s = t\n  s \\<le> t\n  t \\<le> s\n\ngoal (1 subgoal):\n 1. s = t", "by blast"], ["proof (state)\nthis:\n  s = t\n\ngoal (1 subgoal):\n 1. s \\<in> UNIV\\<^sup>\\<omega> \\<Longrightarrow> s = t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. s \\<in> UNIV\\<^sup>\\<omega> \\<Longrightarrow> s = t", "case infinite"], ["proof (state)\nthis:\n  s \\<in> UNIV\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. s \\<in> UNIV\\<^sup>\\<omega> \\<Longrightarrow> s = t", "thus ?thesis"], ["proof (prove)\nusing this:\n  s \\<in> UNIV\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. s = t", "using st"], ["proof (prove)\nusing this:\n  s \\<in> UNIV\\<^sup>\\<omega>\n  s \\<le> t\n\ngoal (1 subgoal):\n 1. s = t", "by (simp add: llist_inf_le)"], ["proof (state)\nthis:\n  s = t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  s = t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma llist_less_le_not_le:\n  fixes s :: \"'a llist\"\n  shows \"(s < t) = (s \\<le> t \\<and> \\<not> t \\<le> s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s < t) = (s \\<le> t \\<and> \\<not> t \\<le> s)", "by (auto simp add: llist_less_def dest: llist_le_anti_sym)"], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS('a llist, order_class)", "by standard\n    (assumption | rule llist_le_refl\n      llist_le_trans llist_le_anti_sym llist_less_le_not_le)+"], ["", "end"], ["", "subsubsection\\<open>Typing rules\\<close>"], ["", "lemma llist_le_finT [simp]:\n \"r\\<le>s \\<Longrightarrow> s \\<in> A\\<^sup>\\<star> \\<Longrightarrow> r \\<in> A\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<le> s; s \\<in> A\\<^sup>\\<star>\\<rbrakk>\n    \\<Longrightarrow> r \\<in> A\\<^sup>\\<star>", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<le> s; s \\<in> A\\<^sup>\\<star>\\<rbrakk>\n    \\<Longrightarrow> r \\<in> A\\<^sup>\\<star>", "assume rs: \"r\\<le>s\" and sfin: \"s \\<in> A\\<^sup>\\<star>\""], ["proof (state)\nthis:\n  r \\<le> s\n  s \\<in> A\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<le> s; s \\<in> A\\<^sup>\\<star>\\<rbrakk>\n    \\<Longrightarrow> r \\<in> A\\<^sup>\\<star>", "from sfin"], ["proof (chain)\npicking this:\n  s \\<in> A\\<^sup>\\<star>", "have \"\\<forall>r. r\\<le>s \\<longrightarrow> r\\<in>A\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  s \\<in> A\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. \\<forall>r\\<le>s. r \\<in> A\\<^sup>\\<star>", "proof (induct \"s\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>l.\n       l = LNil \\<Longrightarrow> \\<forall>r\\<le>l. r \\<in> A\\<^sup>\\<star>\n 2. \\<And>a l.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>;\n        \\<forall>r\\<le>l. r \\<in> A\\<^sup>\\<star>; a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r\\<le>a ## l. r \\<in> A\\<^sup>\\<star>", "case LNil_fin"], ["proof (state)\nthis:\n  l_ = LNil\n\ngoal (2 subgoals):\n 1. \\<And>l.\n       l = LNil \\<Longrightarrow> \\<forall>r\\<le>l. r \\<in> A\\<^sup>\\<star>\n 2. \\<And>a l.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>;\n        \\<forall>r\\<le>l. r \\<in> A\\<^sup>\\<star>; a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r\\<le>a ## l. r \\<in> A\\<^sup>\\<star>", "thus ?case"], ["proof (prove)\nusing this:\n  l_ = LNil\n\ngoal (1 subgoal):\n 1. \\<forall>r\\<le>l_. r \\<in> A\\<^sup>\\<star>", "by auto"], ["proof (state)\nthis:\n  \\<forall>r\\<le>l_. r \\<in> A\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. \\<And>a l.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>;\n        \\<forall>r\\<le>l. r \\<in> A\\<^sup>\\<star>; a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r\\<le>a ## l. r \\<in> A\\<^sup>\\<star>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a l.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>;\n        \\<forall>r\\<le>l. r \\<in> A\\<^sup>\\<star>; a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r\\<le>a ## l. r \\<in> A\\<^sup>\\<star>", "case (LCons_fin a l)"], ["proof (state)\nthis:\n  l \\<in> A\\<^sup>\\<star>\n  \\<forall>r\\<le>l. r \\<in> A\\<^sup>\\<star>\n  a \\<in> A\n\ngoal (1 subgoal):\n 1. \\<And>a l.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>;\n        \\<forall>r\\<le>l. r \\<in> A\\<^sup>\\<star>; a \\<in> A\\<rbrakk>\n       \\<Longrightarrow> \\<forall>r\\<le>a ## l. r \\<in> A\\<^sup>\\<star>", "show  ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>r\\<le>a ## l. r \\<in> A\\<^sup>\\<star>", "proof (clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r. r \\<le> a ## l \\<Longrightarrow> r \\<in> A\\<^sup>\\<star>", "fix r"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r. r \\<le> a ## l \\<Longrightarrow> r \\<in> A\\<^sup>\\<star>", "assume ral: \"r \\<le> a ## l\""], ["proof (state)\nthis:\n  r \\<le> a ## l\n\ngoal (1 subgoal):\n 1. \\<And>r. r \\<le> a ## l \\<Longrightarrow> r \\<in> A\\<^sup>\\<star>", "thus \"r \\<in> A\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  r \\<le> a ## l\n\ngoal (1 subgoal):\n 1. r \\<in> A\\<^sup>\\<star>", "using LCons_fin"], ["proof (prove)\nusing this:\n  r \\<le> a ## l\n  l \\<in> A\\<^sup>\\<star>\n  \\<forall>r\\<le>l. r \\<in> A\\<^sup>\\<star>\n  a \\<in> A\n\ngoal (1 subgoal):\n 1. r \\<in> A\\<^sup>\\<star>", "by (cases r) auto"], ["proof (state)\nthis:\n  r \\<in> A\\<^sup>\\<star>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>r\\<le>a ## l. r \\<in> A\\<^sup>\\<star>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>r\\<le>s. r \\<in> A\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<le> s; s \\<in> A\\<^sup>\\<star>\\<rbrakk>\n    \\<Longrightarrow> r \\<in> A\\<^sup>\\<star>", "with rs"], ["proof (chain)\npicking this:\n  r \\<le> s\n  \\<forall>r\\<le>s. r \\<in> A\\<^sup>\\<star>", "show ?thesis"], ["proof (prove)\nusing this:\n  r \\<le> s\n  \\<forall>r\\<le>s. r \\<in> A\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. r \\<in> A\\<^sup>\\<star>", "by auto"], ["proof (state)\nthis:\n  r \\<in> A\\<^sup>\\<star>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma llist_less_finT [iff]:\n \"r<s \\<Longrightarrow> s \\<in> A\\<^sup>\\<star> \\<Longrightarrow> r \\<in> A\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>r < s; s \\<in> A\\<^sup>\\<star>\\<rbrakk>\n    \\<Longrightarrow> r \\<in> A\\<^sup>\\<star>", "by (auto simp: less_le)"], ["", "subsubsection\\<open>More simplification rules\\<close>"], ["", "lemma LNil_less_LCons [iff]: \"LNil < a ## t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LNil < a ## t", "by (simp add: less_le)"], ["", "lemma not_less_LNil [iff]:\n  \"\\<not> r < LNil\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> r < LNil", "by (auto simp: less_le)"], ["", "lemma less_LCons [iff]:\n  \" (a ## r < b ## t) = (a = b \\<and> r < t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a ## r < b ## t) = (a = b \\<and> r < t)", "by (auto simp: less_le)"], ["", "lemma llength_mono [iff]:\n  assumes\"r \\<in> A\\<^sup>\\<star>\"\n  shows \"s<r \\<Longrightarrow> llength s < llength r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s < r \\<Longrightarrow> LList2.llength s < LList2.llength r", "using assms"], ["proof (prove)\nusing this:\n  r \\<in> A\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. s < r \\<Longrightarrow> LList2.llength s < LList2.llength r", "proof(induct \"r\" arbitrary: s)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>l s.\n       \\<lbrakk>l = LNil; s < l\\<rbrakk>\n       \\<Longrightarrow> LList2.llength s < LList2.llength l\n 2. \\<And>a l s.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>;\n        \\<And>s.\n           s < l \\<Longrightarrow> LList2.llength s < LList2.llength l;\n        a \\<in> A; s < a ## l\\<rbrakk>\n       \\<Longrightarrow> LList2.llength s < LList2.llength (a ## l)", "case LNil_fin"], ["proof (state)\nthis:\n  l_ = LNil\n  s < l_\n\ngoal (2 subgoals):\n 1. \\<And>l s.\n       \\<lbrakk>l = LNil; s < l\\<rbrakk>\n       \\<Longrightarrow> LList2.llength s < LList2.llength l\n 2. \\<And>a l s.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>;\n        \\<And>s.\n           s < l \\<Longrightarrow> LList2.llength s < LList2.llength l;\n        a \\<in> A; s < a ## l\\<rbrakk>\n       \\<Longrightarrow> LList2.llength s < LList2.llength (a ## l)", "thus ?case"], ["proof (prove)\nusing this:\n  l_ = LNil\n  s < l_\n\ngoal (1 subgoal):\n 1. LList2.llength s < LList2.llength l_", "by simp"], ["proof (state)\nthis:\n  LList2.llength s < LList2.llength l_\n\ngoal (1 subgoal):\n 1. \\<And>a l s.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>;\n        \\<And>s.\n           s < l \\<Longrightarrow> LList2.llength s < LList2.llength l;\n        a \\<in> A; s < a ## l\\<rbrakk>\n       \\<Longrightarrow> LList2.llength s < LList2.llength (a ## l)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a l s.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>;\n        \\<And>s.\n           s < l \\<Longrightarrow> LList2.llength s < LList2.llength l;\n        a \\<in> A; s < a ## l\\<rbrakk>\n       \\<Longrightarrow> LList2.llength s < LList2.llength (a ## l)", "case (LCons_fin a l)"], ["proof (state)\nthis:\n  l \\<in> A\\<^sup>\\<star>\n  ?s < l \\<Longrightarrow> LList2.llength ?s < LList2.llength l\n  a \\<in> A\n  s < a ## l\n\ngoal (1 subgoal):\n 1. \\<And>a l s.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<star>;\n        \\<And>s.\n           s < l \\<Longrightarrow> LList2.llength s < LList2.llength l;\n        a \\<in> A; s < a ## l\\<rbrakk>\n       \\<Longrightarrow> LList2.llength s < LList2.llength (a ## l)", "thus ?case"], ["proof (prove)\nusing this:\n  l \\<in> A\\<^sup>\\<star>\n  ?s < l \\<Longrightarrow> LList2.llength ?s < LList2.llength l\n  a \\<in> A\n  s < a ## l\n\ngoal (1 subgoal):\n 1. LList2.llength s < LList2.llength (a ## l)", "by (cases s) (auto simp: llength_LCons [of _ UNIV])"], ["proof (state)\nthis:\n  LList2.llength s < LList2.llength (a ## l)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma le_lappend [iff]: \"r \\<le> r @@ s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r \\<le> r @@ s", "by (auto simp: llist_le_def)"], ["", "lemma take_inf_less:\n  \"t \\<in> UNIV\\<^sup>\\<omega> \\<Longrightarrow> t \\<down> i < t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> UNIV\\<^sup>\\<omega> \\<Longrightarrow> t \\<down> i < t", "proof (induct i arbitrary: t)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t. t \\<in> UNIV\\<^sup>\\<omega> \\<Longrightarrow> t \\<down> 0 < t\n 2. \\<And>i t.\n       \\<lbrakk>\\<And>t.\n                   t \\<in> UNIV\\<^sup>\\<omega> \\<Longrightarrow>\n                   t \\<down> i < t;\n        t \\<in> UNIV\\<^sup>\\<omega>\\<rbrakk>\n       \\<Longrightarrow> t \\<down> Suc i < t", "case 0"], ["proof (state)\nthis:\n  t \\<in> UNIV\\<^sup>\\<omega>\n\ngoal (2 subgoals):\n 1. \\<And>t. t \\<in> UNIV\\<^sup>\\<omega> \\<Longrightarrow> t \\<down> 0 < t\n 2. \\<And>i t.\n       \\<lbrakk>\\<And>t.\n                   t \\<in> UNIV\\<^sup>\\<omega> \\<Longrightarrow>\n                   t \\<down> i < t;\n        t \\<in> UNIV\\<^sup>\\<omega>\\<rbrakk>\n       \\<Longrightarrow> t \\<down> Suc i < t", "thus ?case"], ["proof (prove)\nusing this:\n  t \\<in> UNIV\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. t \\<down> 0 < t", "by (auto elim: inflsts_cases)"], ["proof (state)\nthis:\n  t \\<down> 0 < t\n\ngoal (1 subgoal):\n 1. \\<And>i t.\n       \\<lbrakk>\\<And>t.\n                   t \\<in> UNIV\\<^sup>\\<omega> \\<Longrightarrow>\n                   t \\<down> i < t;\n        t \\<in> UNIV\\<^sup>\\<omega>\\<rbrakk>\n       \\<Longrightarrow> t \\<down> Suc i < t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i t.\n       \\<lbrakk>\\<And>t.\n                   t \\<in> UNIV\\<^sup>\\<omega> \\<Longrightarrow>\n                   t \\<down> i < t;\n        t \\<in> UNIV\\<^sup>\\<omega>\\<rbrakk>\n       \\<Longrightarrow> t \\<down> Suc i < t", "case (Suc i)"], ["proof (state)\nthis:\n  ?t \\<in> UNIV\\<^sup>\\<omega> \\<Longrightarrow> ?t \\<down> i < ?t\n  t \\<in> UNIV\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. \\<And>i t.\n       \\<lbrakk>\\<And>t.\n                   t \\<in> UNIV\\<^sup>\\<omega> \\<Longrightarrow>\n                   t \\<down> i < t;\n        t \\<in> UNIV\\<^sup>\\<omega>\\<rbrakk>\n       \\<Longrightarrow> t \\<down> Suc i < t", "from \\<open>t \\<in> UNIV\\<^sup>\\<omega>\\<close>"], ["proof (chain)\npicking this:\n  t \\<in> UNIV\\<^sup>\\<omega>", "show ?case"], ["proof (prove)\nusing this:\n  t \\<in> UNIV\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. t \\<down> Suc i < t", "proof (cases \"t\")"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a l.\n       \\<lbrakk>l \\<in> UNIV\\<^sup>\\<omega>; a \\<in> UNIV;\n        t = a ## l\\<rbrakk>\n       \\<Longrightarrow> t \\<down> Suc i < t", "case (LCons a l)"], ["proof (state)\nthis:\n  l \\<in> UNIV\\<^sup>\\<omega>\n  a \\<in> UNIV\n  t = a ## l\n\ngoal (1 subgoal):\n 1. \\<And>a l.\n       \\<lbrakk>l \\<in> UNIV\\<^sup>\\<omega>; a \\<in> UNIV;\n        t = a ## l\\<rbrakk>\n       \\<Longrightarrow> t \\<down> Suc i < t", "with Suc"], ["proof (chain)\npicking this:\n  ?t \\<in> UNIV\\<^sup>\\<omega> \\<Longrightarrow> ?t \\<down> i < ?t\n  t \\<in> UNIV\\<^sup>\\<omega>\n  l \\<in> UNIV\\<^sup>\\<omega>\n  a \\<in> UNIV\n  t = a ## l", "show ?thesis"], ["proof (prove)\nusing this:\n  ?t \\<in> UNIV\\<^sup>\\<omega> \\<Longrightarrow> ?t \\<down> i < ?t\n  t \\<in> UNIV\\<^sup>\\<omega>\n  l \\<in> UNIV\\<^sup>\\<omega>\n  a \\<in> UNIV\n  t = a ## l\n\ngoal (1 subgoal):\n 1. t \\<down> Suc i < t", "by auto"], ["proof (state)\nthis:\n  t \\<down> Suc i < t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  t \\<down> Suc i < t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lapp_take_less:\n  assumes iless: \"i < llength r\"\n  shows \"(r @@ s) \\<down> i < r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (r @@ s) \\<down> i < r", "proof (cases \"r \\<in> UNIV\\<^sup>\\<star>\")"], ["proof (state)\ngoal (2 subgoals):\n 1. r \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow> (r @@ s) \\<down> i < r\n 2. r \\<notin> UNIV\\<^sup>\\<star> \\<Longrightarrow> (r @@ s) \\<down> i < r", "case True"], ["proof (state)\nthis:\n  r \\<in> UNIV\\<^sup>\\<star>\n\ngoal (2 subgoals):\n 1. r \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow> (r @@ s) \\<down> i < r\n 2. r \\<notin> UNIV\\<^sup>\\<star> \\<Longrightarrow> (r @@ s) \\<down> i < r", "thus ?thesis"], ["proof (prove)\nusing this:\n  r \\<in> UNIV\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. (r @@ s) \\<down> i < r", "using iless"], ["proof (prove)\nusing this:\n  r \\<in> UNIV\\<^sup>\\<star>\n  i < LList2.llength r\n\ngoal (1 subgoal):\n 1. (r @@ s) \\<down> i < r", "proof(induct i arbitrary: r)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>r.\n       \\<lbrakk>r \\<in> UNIV\\<^sup>\\<star>; 0 < LList2.llength r\\<rbrakk>\n       \\<Longrightarrow> (r @@ s) \\<down> 0 < r\n 2. \\<And>i r.\n       \\<lbrakk>\\<And>r.\n                   \\<lbrakk>r \\<in> UNIV\\<^sup>\\<star>;\n                    i < LList2.llength r\\<rbrakk>\n                   \\<Longrightarrow> (r @@ s) \\<down> i < r;\n        r \\<in> UNIV\\<^sup>\\<star>; Suc i < LList2.llength r\\<rbrakk>\n       \\<Longrightarrow> (r @@ s) \\<down> Suc i < r", "case 0"], ["proof (state)\nthis:\n  r \\<in> UNIV\\<^sup>\\<star>\n  0 < LList2.llength r\n\ngoal (2 subgoals):\n 1. \\<And>r.\n       \\<lbrakk>r \\<in> UNIV\\<^sup>\\<star>; 0 < LList2.llength r\\<rbrakk>\n       \\<Longrightarrow> (r @@ s) \\<down> 0 < r\n 2. \\<And>i r.\n       \\<lbrakk>\\<And>r.\n                   \\<lbrakk>r \\<in> UNIV\\<^sup>\\<star>;\n                    i < LList2.llength r\\<rbrakk>\n                   \\<Longrightarrow> (r @@ s) \\<down> i < r;\n        r \\<in> UNIV\\<^sup>\\<star>; Suc i < LList2.llength r\\<rbrakk>\n       \\<Longrightarrow> (r @@ s) \\<down> Suc i < r", "thus ?case"], ["proof (prove)\nusing this:\n  r \\<in> UNIV\\<^sup>\\<star>\n  0 < LList2.llength r\n\ngoal (1 subgoal):\n 1. (r @@ s) \\<down> 0 < r", "by (cases \"r\") auto"], ["proof (state)\nthis:\n  (r @@ s) \\<down> 0 < r\n\ngoal (1 subgoal):\n 1. \\<And>i r.\n       \\<lbrakk>\\<And>r.\n                   \\<lbrakk>r \\<in> UNIV\\<^sup>\\<star>;\n                    i < LList2.llength r\\<rbrakk>\n                   \\<Longrightarrow> (r @@ s) \\<down> i < r;\n        r \\<in> UNIV\\<^sup>\\<star>; Suc i < LList2.llength r\\<rbrakk>\n       \\<Longrightarrow> (r @@ s) \\<down> Suc i < r", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i r.\n       \\<lbrakk>\\<And>r.\n                   \\<lbrakk>r \\<in> UNIV\\<^sup>\\<star>;\n                    i < LList2.llength r\\<rbrakk>\n                   \\<Longrightarrow> (r @@ s) \\<down> i < r;\n        r \\<in> UNIV\\<^sup>\\<star>; Suc i < LList2.llength r\\<rbrakk>\n       \\<Longrightarrow> (r @@ s) \\<down> Suc i < r", "case (Suc j)"], ["proof (state)\nthis:\n  \\<lbrakk>?r \\<in> UNIV\\<^sup>\\<star>; j < LList2.llength ?r\\<rbrakk>\n  \\<Longrightarrow> (?r @@ s) \\<down> j < ?r\n  r \\<in> UNIV\\<^sup>\\<star>\n  Suc j < LList2.llength r\n\ngoal (1 subgoal):\n 1. \\<And>i r.\n       \\<lbrakk>\\<And>r.\n                   \\<lbrakk>r \\<in> UNIV\\<^sup>\\<star>;\n                    i < LList2.llength r\\<rbrakk>\n                   \\<Longrightarrow> (r @@ s) \\<down> i < r;\n        r \\<in> UNIV\\<^sup>\\<star>; Suc i < LList2.llength r\\<rbrakk>\n       \\<Longrightarrow> (r @@ s) \\<down> Suc i < r", "from \\<open>r \\<in> UNIV\\<^sup>\\<star>\\<close> \\<open>Suc j < llength r\\<close> \\<open>\\<And>r. \\<lbrakk>r \\<in> UNIV\\<^sup>\\<star>; j < llength r\\<rbrakk> \\<Longrightarrow> lappend r s \\<down> j < r\\<close>"], ["proof (chain)\npicking this:\n  r \\<in> UNIV\\<^sup>\\<star>\n  Suc j < LList2.llength r\n  \\<lbrakk>?r \\<in> UNIV\\<^sup>\\<star>; j < LList2.llength ?r\\<rbrakk>\n  \\<Longrightarrow> (?r @@ s) \\<down> j < ?r", "show ?case"], ["proof (prove)\nusing this:\n  r \\<in> UNIV\\<^sup>\\<star>\n  Suc j < LList2.llength r\n  \\<lbrakk>?r \\<in> UNIV\\<^sup>\\<star>; j < LList2.llength ?r\\<rbrakk>\n  \\<Longrightarrow> (?r @@ s) \\<down> j < ?r\n\ngoal (1 subgoal):\n 1. (r @@ s) \\<down> Suc j < r", "by (cases) auto"], ["proof (state)\nthis:\n  (r @@ s) \\<down> Suc j < r\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (r @@ s) \\<down> i < r\n\ngoal (1 subgoal):\n 1. r \\<notin> UNIV\\<^sup>\\<star> \\<Longrightarrow> (r @@ s) \\<down> i < r", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. r \\<notin> UNIV\\<^sup>\\<star> \\<Longrightarrow> (r @@ s) \\<down> i < r", "case False"], ["proof (state)\nthis:\n  r \\<notin> UNIV\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. r \\<notin> UNIV\\<^sup>\\<star> \\<Longrightarrow> (r @@ s) \\<down> i < r", "thus ?thesis"], ["proof (prove)\nusing this:\n  r \\<notin> UNIV\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. (r @@ s) \\<down> i < r", "by (simp add: take_inf_less)"], ["proof (state)\nthis:\n  (r @@ s) \\<down> i < r\n\ngoal:\nNo subgoals!", "qed"], ["", "subsubsection\\<open>Finite prefixes and infinite suffixes\\<close>"], ["", "definition finpref :: \"'a set \\<Rightarrow> 'a llist \\<Rightarrow> 'a llist set\"\nwhere \"finpref A s \\<equiv> {r. r \\<in> A\\<^sup>\\<star> \\<and> r \\<le> s}\""], ["", "definition suff :: \"'a set \\<Rightarrow> 'a llist \\<Rightarrow> 'a llist set\"\nwhere \"suff A s \\<equiv> {r. r \\<in> A\\<^sup>\\<infinity> \\<and> s \\<le> r}\""], ["", "definition infsuff :: \"'a set \\<Rightarrow> 'a llist \\<Rightarrow> 'a llist set\"\nwhere \"infsuff A s \\<equiv> {r. r \\<in> A\\<^sup>\\<omega> \\<and> s \\<le> r}\""], ["", "definition prefix_closed :: \"'a llist set \\<Rightarrow> bool\"\nwhere \"prefix_closed A \\<equiv> \\<forall> t \\<in> A. \\<forall> s \\<le> t. s \\<in> A\""], ["", "definition pprefix_closed :: \"'a llist set \\<Rightarrow> bool\"\nwhere \"pprefix_closed A \\<equiv> \\<forall> t \\<in> A. \\<forall> s. s \\<le> t \\<and> s \\<noteq> LNil \\<longrightarrow> s \\<in> A\""], ["", "definition suffix_closed :: \"'a llist set \\<Rightarrow> bool\"\nwhere \"suffix_closed A \\<equiv> \\<forall> t \\<in> A. \\<forall> s. t \\<le> s \\<longrightarrow> s \\<in> A\""], ["", "lemma finpref_LNil [simp]:\n  \"finpref A LNil = {LNil}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finpref A LNil = {LNil}", "by (auto simp: finpref_def)"], ["", "lemma finpref_fin: \"x \\<in> finpref A s \\<Longrightarrow> x \\<in> A\\<^sup>\\<star>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> finpref A s \\<Longrightarrow> x \\<in> A\\<^sup>\\<star>", "by (auto simp: finpref_def)"], ["", "lemma finpref_mono2: \"s \\<le> t \\<Longrightarrow> finpref A s \\<subseteq> finpref A t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<le> t \\<Longrightarrow> finpref A s \\<subseteq> finpref A t", "by (unfold finpref_def) (auto dest: llist_le_trans)"], ["", "lemma suff_LNil [simp]:\n  \"suff A LNil = A\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. suff A LNil = A\\<^sup>\\<infinity>", "by (simp add: suff_def)"], ["", "lemma suff_all: \"x \\<in> suff A s \\<Longrightarrow> x \\<in> A\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> suff A s \\<Longrightarrow> x \\<in> A\\<^sup>\\<infinity>", "by (auto simp: suff_def)"], ["", "lemma suff_mono2: \"s \\<le> t \\<Longrightarrow> suff A t \\<subseteq> suff A s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<le> t \\<Longrightarrow> suff A t \\<subseteq> suff A s", "by (unfold suff_def) (auto dest: llist_le_trans)"], ["", "lemma suff_appE:\n  assumes rA: \"r \\<in> A\\<^sup>\\<star>\"\n  and  tsuff: \"t \\<in> suff A r\"\n  obtains s where \"s \\<in> A\\<^sup>\\<infinity>\" \"t = r@@s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>s \\<in> A\\<^sup>\\<infinity>; t = r @@ s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>s \\<in> A\\<^sup>\\<infinity>; t = r @@ s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from tsuff"], ["proof (chain)\npicking this:\n  t \\<in> suff A r", "obtain s where\n    tA: \"t \\<in> A\\<^sup>\\<infinity>\" and trs: \"t = r @@ s\""], ["proof (prove)\nusing this:\n  t \\<in> suff A r\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>t \\<in> A\\<^sup>\\<infinity>; t = r @@ s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: suff_def llist_le_def)"], ["proof (state)\nthis:\n  t \\<in> A\\<^sup>\\<infinity>\n  t = r @@ s\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>s \\<in> A\\<^sup>\\<infinity>; t = r @@ s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from rA trs tA"], ["proof (chain)\npicking this:\n  r \\<in> A\\<^sup>\\<star>\n  t = r @@ s\n  t \\<in> A\\<^sup>\\<infinity>", "have \"s \\<in> A\\<^sup>\\<infinity>\""], ["proof (prove)\nusing this:\n  r \\<in> A\\<^sup>\\<star>\n  t = r @@ s\n  t \\<in> A\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. s \\<in> A\\<^sup>\\<infinity>", "by (auto simp: lapp_allT_iff)"], ["proof (state)\nthis:\n  s \\<in> A\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>s \\<in> A\\<^sup>\\<infinity>; t = r @@ s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  s \\<in> A\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. thesis", "using trs"], ["proof (prove)\nusing this:\n  s \\<in> A\\<^sup>\\<infinity>\n  t = r @@ s\n\ngoal (1 subgoal):\n 1. thesis", "by (rule that)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma LNil_suff [iff]: \"(LNil \\<in> suff A s) = (s = LNil)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (LNil \\<in> suff A s) = (s = LNil)", "by (auto simp: suff_def)"], ["", "lemma finpref_suff [dest]:\n  \"\\<lbrakk> r \\<in> finpref A t; t\\<in>A\\<^sup>\\<infinity> \\<rbrakk> \\<Longrightarrow> t \\<in> suff A r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> finpref A t; t \\<in> A\\<^sup>\\<infinity>\\<rbrakk>\n    \\<Longrightarrow> t \\<in> suff A r", "by (auto simp: finpref_def suff_def)"], ["", "lemma suff_finpref:\n  \"\\<lbrakk> t \\<in> suff A r; r\\<in>A\\<^sup>\\<star> \\<rbrakk> \\<Longrightarrow> r \\<in> finpref A t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t \\<in> suff A r; r \\<in> A\\<^sup>\\<star>\\<rbrakk>\n    \\<Longrightarrow> r \\<in> finpref A t", "by (auto simp: finpref_def suff_def)"], ["", "lemma suff_finpref_iff:\n  \"\\<lbrakk> r\\<in>A\\<^sup>\\<star>; t\\<in>A\\<^sup>\\<infinity> \\<rbrakk> \\<Longrightarrow> (r \\<in> finpref A t) = (t \\<in> suff A r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> A\\<^sup>\\<star>; t \\<in> A\\<^sup>\\<infinity>\\<rbrakk>\n    \\<Longrightarrow> (r \\<in> finpref A t) = (t \\<in> suff A r)", "by (auto simp: finpref_def suff_def)"], ["", "lemma infsuff_LNil [simp]:\n  \"infsuff A LNil = A\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. infsuff A LNil = A\\<^sup>\\<omega>", "by (simp add: infsuff_def)"], ["", "lemma infsuff_inf: \"x \\<in> infsuff A s \\<Longrightarrow> x \\<in> A\\<^sup>\\<omega>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> infsuff A s \\<Longrightarrow> x \\<in> A\\<^sup>\\<omega>", "by (auto simp: infsuff_def)"], ["", "lemma infsuff_mono2: \"s \\<le> t \\<Longrightarrow> infsuff A t \\<subseteq> infsuff A s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<le> t \\<Longrightarrow> infsuff A t \\<subseteq> infsuff A s", "by (unfold infsuff_def) (auto dest: llist_le_trans)"], ["", "lemma infsuff_appE:\n  assumes   rA: \"r \\<in> A\\<^sup>\\<star>\"\n  and tinfsuff: \"t \\<in> infsuff A r\"\n  obtains s where \"s \\<in> A\\<^sup>\\<omega>\" \"t = r@@s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>s \\<in> A\\<^sup>\\<omega>; t = r @@ s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>s \\<in> A\\<^sup>\\<omega>; t = r @@ s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from tinfsuff"], ["proof (chain)\npicking this:\n  t \\<in> infsuff A r", "obtain s where\n    tA: \"t \\<in> A\\<^sup>\\<omega>\" and trs: \"t = r @@ s\""], ["proof (prove)\nusing this:\n  t \\<in> infsuff A r\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>t \\<in> A\\<^sup>\\<omega>; t = r @@ s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: infsuff_def llist_le_def)"], ["proof (state)\nthis:\n  t \\<in> A\\<^sup>\\<omega>\n  t = r @@ s\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>s \\<in> A\\<^sup>\\<omega>; t = r @@ s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from rA trs tA"], ["proof (chain)\npicking this:\n  r \\<in> A\\<^sup>\\<star>\n  t = r @@ s\n  t \\<in> A\\<^sup>\\<omega>", "have \"s \\<in> A\\<^sup>\\<omega>\""], ["proof (prove)\nusing this:\n  r \\<in> A\\<^sup>\\<star>\n  t = r @@ s\n  t \\<in> A\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. s \\<in> A\\<^sup>\\<omega>", "by (auto dest: app_invT)"], ["proof (state)\nthis:\n  s \\<in> A\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<lbrakk>s \\<in> A\\<^sup>\\<omega>; t = r @@ s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  s \\<in> A\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. thesis", "using trs"], ["proof (prove)\nusing this:\n  s \\<in> A\\<^sup>\\<omega>\n  t = r @@ s\n\ngoal (1 subgoal):\n 1. thesis", "by (rule that)"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma finpref_infsuff [dest]:\n  \"\\<lbrakk> r \\<in> finpref A t; t\\<in>A\\<^sup>\\<omega> \\<rbrakk> \\<Longrightarrow> t \\<in> infsuff A r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> finpref A t; t \\<in> A\\<^sup>\\<omega>\\<rbrakk>\n    \\<Longrightarrow> t \\<in> infsuff A r", "by (auto simp: finpref_def infsuff_def)"], ["", "lemma infsuff_finpref:\n  \"\\<lbrakk> t \\<in> infsuff A r; r\\<in>A\\<^sup>\\<star> \\<rbrakk> \\<Longrightarrow> r \\<in> finpref A t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t \\<in> infsuff A r; r \\<in> A\\<^sup>\\<star>\\<rbrakk>\n    \\<Longrightarrow> r \\<in> finpref A t", "by (auto simp: finpref_def infsuff_def)"], ["", "lemma infsuff_finpref_iff [iff]:\n  \"\\<lbrakk> r\\<in>A\\<^sup>\\<star>; t\\<in>A\\<^sup>\\<omega> \\<rbrakk> \\<Longrightarrow> (t \\<in> finpref A r) = (r \\<in> infsuff A t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>r \\<in> A\\<^sup>\\<star>; t \\<in> A\\<^sup>\\<omega>\\<rbrakk>\n    \\<Longrightarrow> (t \\<in> finpref A r) = (r \\<in> infsuff A t)", "by (auto simp: finpref_def infsuff_def)"], ["", "lemma prefix_lemma:\n  assumes xinf: \"x \\<in> A\\<^sup>\\<omega>\"\n  and yinf: \"y \\<in> A\\<^sup>\\<omega>\"\n  and R: \"\\<And> s. \\<lbrakk> s \\<in> A\\<^sup>\\<star>; s \\<le> x\\<rbrakk> \\<Longrightarrow> s \\<le> y\"\n  shows \"x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = y", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. x = y", "let ?r = \"\\<lambda>x y. x\\<in>A\\<^sup>\\<omega> \\<and> y\\<in>A\\<^sup>\\<omega> \\<and> finpref A x \\<subseteq> finpref A y\""], ["proof (state)\ngoal (1 subgoal):\n 1. x = y", "have \"?r x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> A\\<^sup>\\<omega> \\<and>\n    y \\<in> A\\<^sup>\\<omega> \\<and> finpref A x \\<subseteq> finpref A y", "using xinf yinf"], ["proof (prove)\nusing this:\n  x \\<in> A\\<^sup>\\<omega>\n  y \\<in> A\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. x \\<in> A\\<^sup>\\<omega> \\<and>\n    y \\<in> A\\<^sup>\\<omega> \\<and> finpref A x \\<subseteq> finpref A y", "by (auto simp: finpref_def intro: R)"], ["proof (state)\nthis:\n  x \\<in> A\\<^sup>\\<omega> \\<and>\n  y \\<in> A\\<^sup>\\<omega> \\<and> finpref A x \\<subseteq> finpref A y\n\ngoal (1 subgoal):\n 1. x = y", "thus ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> A\\<^sup>\\<omega> \\<and>\n  y \\<in> A\\<^sup>\\<omega> \\<and> finpref A x \\<subseteq> finpref A y\n\ngoal (1 subgoal):\n 1. x = y", "proof (coinduct rule: llist.coinduct_strong)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>llist llist'.\n       llist \\<in> A\\<^sup>\\<omega> \\<and>\n       llist' \\<in> A\\<^sup>\\<omega> \\<and>\n       finpref A llist \\<subseteq> finpref A llist' \\<Longrightarrow>\n       lnull llist = lnull llist' \\<and>\n       (\\<not> lnull llist \\<longrightarrow>\n        \\<not> lnull llist' \\<longrightarrow>\n        lhd llist = lhd llist' \\<and>\n        (ltl llist \\<in> A\\<^sup>\\<omega> \\<and>\n         ltl llist' \\<in> A\\<^sup>\\<omega> \\<and>\n         finpref A (ltl llist) \\<subseteq> finpref A (ltl llist') \\<or>\n         ltl llist = ltl llist'))", "case (Eq_llist a b)"], ["proof (state)\nthis:\n  a \\<in> A\\<^sup>\\<omega> \\<and>\n  b \\<in> A\\<^sup>\\<omega> \\<and> finpref A a \\<subseteq> finpref A b\n\ngoal (1 subgoal):\n 1. \\<And>llist llist'.\n       llist \\<in> A\\<^sup>\\<omega> \\<and>\n       llist' \\<in> A\\<^sup>\\<omega> \\<and>\n       finpref A llist \\<subseteq> finpref A llist' \\<Longrightarrow>\n       lnull llist = lnull llist' \\<and>\n       (\\<not> lnull llist \\<longrightarrow>\n        \\<not> lnull llist' \\<longrightarrow>\n        lhd llist = lhd llist' \\<and>\n        (ltl llist \\<in> A\\<^sup>\\<omega> \\<and>\n         ltl llist' \\<in> A\\<^sup>\\<omega> \\<and>\n         finpref A (ltl llist) \\<subseteq> finpref A (ltl llist') \\<or>\n         ltl llist = ltl llist'))", "hence ainf: \"a \\<in> A\\<^sup>\\<omega>\"\n      and binf: \"b \\<in> A\\<^sup>\\<omega>\" and pref: \"finpref A a \\<subseteq> finpref A b\""], ["proof (prove)\nusing this:\n  a \\<in> A\\<^sup>\\<omega> \\<and>\n  b \\<in> A\\<^sup>\\<omega> \\<and> finpref A a \\<subseteq> finpref A b\n\ngoal (1 subgoal):\n 1. a \\<in> A\\<^sup>\\<omega> &&&\n    b \\<in> A\\<^sup>\\<omega> &&& finpref A a \\<subseteq> finpref A b", "by auto"], ["proof (state)\nthis:\n  a \\<in> A\\<^sup>\\<omega>\n  b \\<in> A\\<^sup>\\<omega>\n  finpref A a \\<subseteq> finpref A b\n\ngoal (1 subgoal):\n 1. \\<And>llist llist'.\n       llist \\<in> A\\<^sup>\\<omega> \\<and>\n       llist' \\<in> A\\<^sup>\\<omega> \\<and>\n       finpref A llist \\<subseteq> finpref A llist' \\<Longrightarrow>\n       lnull llist = lnull llist' \\<and>\n       (\\<not> lnull llist \\<longrightarrow>\n        \\<not> lnull llist' \\<longrightarrow>\n        lhd llist = lhd llist' \\<and>\n        (ltl llist \\<in> A\\<^sup>\\<omega> \\<and>\n         ltl llist' \\<in> A\\<^sup>\\<omega> \\<and>\n         finpref A (ltl llist) \\<subseteq> finpref A (ltl llist') \\<or>\n         ltl llist = ltl llist'))", "from ainf"], ["proof (chain)\npicking this:\n  a \\<in> A\\<^sup>\\<omega>", "show ?case"], ["proof (prove)\nusing this:\n  a \\<in> A\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. lnull a = lnull b \\<and>\n    (\\<not> lnull a \\<longrightarrow>\n     \\<not> lnull b \\<longrightarrow>\n     lhd a = lhd b \\<and>\n     (ltl a \\<in> A\\<^sup>\\<omega> \\<and>\n      ltl b \\<in> A\\<^sup>\\<omega> \\<and>\n      finpref A (ltl a) \\<subseteq> finpref A (ltl b) \\<or>\n      ltl a = ltl b))", "proof cases"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>aa l.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<omega>; aa \\<in> A; a = aa ## l\\<rbrakk>\n       \\<Longrightarrow> lnull a = lnull b \\<and>\n                         (\\<not> lnull a \\<longrightarrow>\n                          \\<not> lnull b \\<longrightarrow>\n                          lhd a = lhd b \\<and>\n                          (ltl a \\<in> A\\<^sup>\\<omega> \\<and>\n                           ltl b \\<in> A\\<^sup>\\<omega> \\<and>\n                           finpref A (ltl a)\n                           \\<subseteq> finpref A (ltl b) \\<or>\n                           ltl a = ltl b))", "case (LCons a' l')"], ["proof (state)\nthis:\n  l' \\<in> A\\<^sup>\\<omega>\n  a' \\<in> A\n  a = a' ## l'\n\ngoal (1 subgoal):\n 1. \\<And>aa l.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<omega>; aa \\<in> A; a = aa ## l\\<rbrakk>\n       \\<Longrightarrow> lnull a = lnull b \\<and>\n                         (\\<not> lnull a \\<longrightarrow>\n                          \\<not> lnull b \\<longrightarrow>\n                          lhd a = lhd b \\<and>\n                          (ltl a \\<in> A\\<^sup>\\<omega> \\<and>\n                           ltl b \\<in> A\\<^sup>\\<omega> \\<and>\n                           finpref A (ltl a)\n                           \\<subseteq> finpref A (ltl b) \\<or>\n                           ltl a = ltl b))", "note acons = this"], ["proof (state)\nthis:\n  l' \\<in> A\\<^sup>\\<omega>\n  a' \\<in> A\n  a = a' ## l'\n\ngoal (1 subgoal):\n 1. \\<And>aa l.\n       \\<lbrakk>l \\<in> A\\<^sup>\\<omega>; aa \\<in> A; a = aa ## l\\<rbrakk>\n       \\<Longrightarrow> lnull a = lnull b \\<and>\n                         (\\<not> lnull a \\<longrightarrow>\n                          \\<not> lnull b \\<longrightarrow>\n                          lhd a = lhd b \\<and>\n                          (ltl a \\<in> A\\<^sup>\\<omega> \\<and>\n                           ltl b \\<in> A\\<^sup>\\<omega> \\<and>\n                           finpref A (ltl a)\n                           \\<subseteq> finpref A (ltl b) \\<or>\n                           ltl a = ltl b))", "with binf"], ["proof (chain)\npicking this:\n  b \\<in> A\\<^sup>\\<omega>\n  l' \\<in> A\\<^sup>\\<omega>\n  a' \\<in> A\n  a = a' ## l'", "show ?thesis"], ["proof (prove)\nusing this:\n  b \\<in> A\\<^sup>\\<omega>\n  l' \\<in> A\\<^sup>\\<omega>\n  a' \\<in> A\n  a = a' ## l'\n\ngoal (1 subgoal):\n 1. lnull a = lnull b \\<and>\n    (\\<not> lnull a \\<longrightarrow>\n     \\<not> lnull b \\<longrightarrow>\n     lhd a = lhd b \\<and>\n     (ltl a \\<in> A\\<^sup>\\<omega> \\<and>\n      ltl b \\<in> A\\<^sup>\\<omega> \\<and>\n      finpref A (ltl a) \\<subseteq> finpref A (ltl b) \\<or>\n      ltl a = ltl b))", "proof (cases b)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>aa l.\n       \\<lbrakk>l' \\<in> A\\<^sup>\\<omega>; a' \\<in> A; a = a' ## l';\n        l \\<in> A\\<^sup>\\<omega>; aa \\<in> A; b = aa ## l\\<rbrakk>\n       \\<Longrightarrow> lnull a = lnull b \\<and>\n                         (\\<not> lnull a \\<longrightarrow>\n                          \\<not> lnull b \\<longrightarrow>\n                          lhd a = lhd b \\<and>\n                          (ltl a \\<in> A\\<^sup>\\<omega> \\<and>\n                           ltl b \\<in> A\\<^sup>\\<omega> \\<and>\n                           finpref A (ltl a)\n                           \\<subseteq> finpref A (ltl b) \\<or>\n                           ltl a = ltl b))", "case (LCons b' l'')"], ["proof (state)\nthis:\n  l'' \\<in> A\\<^sup>\\<omega>\n  b' \\<in> A\n  b = b' ## l''\n\ngoal (1 subgoal):\n 1. \\<And>aa l.\n       \\<lbrakk>l' \\<in> A\\<^sup>\\<omega>; a' \\<in> A; a = a' ## l';\n        l \\<in> A\\<^sup>\\<omega>; aa \\<in> A; b = aa ## l\\<rbrakk>\n       \\<Longrightarrow> lnull a = lnull b \\<and>\n                         (\\<not> lnull a \\<longrightarrow>\n                          \\<not> lnull b \\<longrightarrow>\n                          lhd a = lhd b \\<and>\n                          (ltl a \\<in> A\\<^sup>\\<omega> \\<and>\n                           ltl b \\<in> A\\<^sup>\\<omega> \\<and>\n                           finpref A (ltl a)\n                           \\<subseteq> finpref A (ltl b) \\<or>\n                           ltl a = ltl b))", "with acons pref"], ["proof (chain)\npicking this:\n  l' \\<in> A\\<^sup>\\<omega>\n  a' \\<in> A\n  a = a' ## l'\n  finpref A a \\<subseteq> finpref A b\n  l'' \\<in> A\\<^sup>\\<omega>\n  b' \\<in> A\n  b = b' ## l''", "have \"a' = b'\" \"finpref A l' \\<subseteq> finpref A l''\""], ["proof (prove)\nusing this:\n  l' \\<in> A\\<^sup>\\<omega>\n  a' \\<in> A\n  a = a' ## l'\n  finpref A a \\<subseteq> finpref A b\n  l'' \\<in> A\\<^sup>\\<omega>\n  b' \\<in> A\n  b = b' ## l''\n\ngoal (1 subgoal):\n 1. a' = b' &&& finpref A l' \\<subseteq> finpref A l''", "by (auto simp: finpref_def)"], ["proof (state)\nthis:\n  a' = b'\n  finpref A l' \\<subseteq> finpref A l''\n\ngoal (1 subgoal):\n 1. \\<And>aa l.\n       \\<lbrakk>l' \\<in> A\\<^sup>\\<omega>; a' \\<in> A; a = a' ## l';\n        l \\<in> A\\<^sup>\\<omega>; aa \\<in> A; b = aa ## l\\<rbrakk>\n       \\<Longrightarrow> lnull a = lnull b \\<and>\n                         (\\<not> lnull a \\<longrightarrow>\n                          \\<not> lnull b \\<longrightarrow>\n                          lhd a = lhd b \\<and>\n                          (ltl a \\<in> A\\<^sup>\\<omega> \\<and>\n                           ltl b \\<in> A\\<^sup>\\<omega> \\<and>\n                           finpref A (ltl a)\n                           \\<subseteq> finpref A (ltl b) \\<or>\n                           ltl a = ltl b))", "thus ?thesis"], ["proof (prove)\nusing this:\n  a' = b'\n  finpref A l' \\<subseteq> finpref A l''\n\ngoal (1 subgoal):\n 1. lnull a = lnull b \\<and>\n    (\\<not> lnull a \\<longrightarrow>\n     \\<not> lnull b \\<longrightarrow>\n     lhd a = lhd b \\<and>\n     (ltl a \\<in> A\\<^sup>\\<omega> \\<and>\n      ltl b \\<in> A\\<^sup>\\<omega> \\<and>\n      finpref A (ltl a) \\<subseteq> finpref A (ltl b) \\<or>\n      ltl a = ltl b))", "using acons LCons"], ["proof (prove)\nusing this:\n  a' = b'\n  finpref A l' \\<subseteq> finpref A l''\n  l' \\<in> A\\<^sup>\\<omega>\n  a' \\<in> A\n  a = a' ## l'\n  l'' \\<in> A\\<^sup>\\<omega>\n  b' \\<in> A\n  b = b' ## l''\n\ngoal (1 subgoal):\n 1. lnull a = lnull b \\<and>\n    (\\<not> lnull a \\<longrightarrow>\n     \\<not> lnull b \\<longrightarrow>\n     lhd a = lhd b \\<and>\n     (ltl a \\<in> A\\<^sup>\\<omega> \\<and>\n      ltl b \\<in> A\\<^sup>\\<omega> \\<and>\n      finpref A (ltl a) \\<subseteq> finpref A (ltl b) \\<or>\n      ltl a = ltl b))", "by auto"], ["proof (state)\nthis:\n  lnull a = lnull b \\<and>\n  (\\<not> lnull a \\<longrightarrow>\n   \\<not> lnull b \\<longrightarrow>\n   lhd a = lhd b \\<and>\n   (ltl a \\<in> A\\<^sup>\\<omega> \\<and>\n    ltl b \\<in> A\\<^sup>\\<omega> \\<and>\n    finpref A (ltl a) \\<subseteq> finpref A (ltl b) \\<or>\n    ltl a = ltl b))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lnull a = lnull b \\<and>\n  (\\<not> lnull a \\<longrightarrow>\n   \\<not> lnull b \\<longrightarrow>\n   lhd a = lhd b \\<and>\n   (ltl a \\<in> A\\<^sup>\\<omega> \\<and>\n    ltl b \\<in> A\\<^sup>\\<omega> \\<and>\n    finpref A (ltl a) \\<subseteq> finpref A (ltl b) \\<or>\n    ltl a = ltl b))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lnull a = lnull b \\<and>\n  (\\<not> lnull a \\<longrightarrow>\n   \\<not> lnull b \\<longrightarrow>\n   lhd a = lhd b \\<and>\n   (ltl a \\<in> A\\<^sup>\\<omega> \\<and>\n    ltl b \\<in> A\\<^sup>\\<omega> \\<and>\n    finpref A (ltl a) \\<subseteq> finpref A (ltl b) \\<or>\n    ltl a = ltl b))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x = y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inf_neqE:\n\"\\<lbrakk> x \\<in>  A\\<^sup>\\<omega>; y \\<in> A\\<^sup>\\<omega>; x \\<noteq> y;\n  \\<And>s. \\<lbrakk> s\\<in>A\\<^sup>\\<star>; s \\<le> x; \\<not> s \\<le> y\\<rbrakk> \\<Longrightarrow> R \\<rbrakk> \\<Longrightarrow> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> A\\<^sup>\\<omega>; y \\<in> A\\<^sup>\\<omega>;\n     x \\<noteq> y;\n     \\<And>s.\n        \\<lbrakk>s \\<in> A\\<^sup>\\<star>; s \\<le> x;\n         \\<not> s \\<le> y\\<rbrakk>\n        \\<Longrightarrow> R\\<rbrakk>\n    \\<Longrightarrow> R", "by (auto intro!: prefix_lemma)"], ["", "lemma pref_locally_linear:\n  fixes s::\"'a llist\"\n  assumes sx: \"s \\<le> x\"\n  and   tx: \"t \\<le> x\"\n  shows \"s \\<le> t \\<or> t \\<le> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<le> t \\<or> t \\<le> s", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. s \\<le> t \\<or> t \\<le> s", "have \"s \\<in> UNIV\\<^sup>\\<infinity>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<in> UNIV\\<^sup>\\<infinity>", "by auto"], ["proof (state)\nthis:\n  s \\<in> UNIV\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. s \\<le> t \\<or> t \\<le> s", "thus ?thesis"], ["proof (prove)\nusing this:\n  s \\<in> UNIV\\<^sup>\\<infinity>\n\ngoal (1 subgoal):\n 1. s \\<le> t \\<or> t \\<le> s", "proof (cases rule: alllstsE)"], ["proof (state)\ngoal (2 subgoals):\n 1. s \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow> s \\<le> t \\<or> t \\<le> s\n 2. s \\<in> UNIV\\<^sup>\\<omega> \\<Longrightarrow> s \\<le> t \\<or> t \\<le> s", "case infinite"], ["proof (state)\nthis:\n  s \\<in> UNIV\\<^sup>\\<omega>\n\ngoal (2 subgoals):\n 1. s \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow> s \\<le> t \\<or> t \\<le> s\n 2. s \\<in> UNIV\\<^sup>\\<omega> \\<Longrightarrow> s \\<le> t \\<or> t \\<le> s", "with sx tx"], ["proof (chain)\npicking this:\n  s \\<le> x\n  t \\<le> x\n  s \\<in> UNIV\\<^sup>\\<omega>", "show ?thesis"], ["proof (prove)\nusing this:\n  s \\<le> x\n  t \\<le> x\n  s \\<in> UNIV\\<^sup>\\<omega>\n\ngoal (1 subgoal):\n 1. s \\<le> t \\<or> t \\<le> s", "by (auto simp: llist_inf_le)"], ["proof (state)\nthis:\n  s \\<le> t \\<or> t \\<le> s\n\ngoal (1 subgoal):\n 1. s \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow> s \\<le> t \\<or> t \\<le> s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. s \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow> s \\<le> t \\<or> t \\<le> s", "case finite"], ["proof (state)\nthis:\n  s \\<in> UNIV\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. s \\<in> UNIV\\<^sup>\\<star> \\<Longrightarrow> s \\<le> t \\<or> t \\<le> s", "thus ?thesis"], ["proof (prove)\nusing this:\n  s \\<in> UNIV\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1. s \\<le> t \\<or> t \\<le> s", "using sx tx"], ["proof (prove)\nusing this:\n  s \\<in> UNIV\\<^sup>\\<star>\n  s \\<le> x\n  t \\<le> x\n\ngoal (1 subgoal):\n 1. s \\<le> t \\<or> t \\<le> s", "proof (induct \"s\" arbitrary: x t)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>l x t.\n       \\<lbrakk>l = LNil; l \\<le> x; t \\<le> x\\<rbrakk>\n       \\<Longrightarrow> l \\<le> t \\<or> t \\<le> l\n 2. \\<And>a l x t.\n       \\<lbrakk>l \\<in> UNIV\\<^sup>\\<star>;\n        \\<And>x t.\n           \\<lbrakk>l \\<le> x; t \\<le> x\\<rbrakk>\n           \\<Longrightarrow> l \\<le> t \\<or> t \\<le> l;\n        a \\<in> UNIV; a ## l \\<le> x; t \\<le> x\\<rbrakk>\n       \\<Longrightarrow> a ## l \\<le> t \\<or> t \\<le> a ## l", "case LNil_fin"], ["proof (state)\nthis:\n  l_ = LNil\n  l_ \\<le> x\n  t \\<le> x\n\ngoal (2 subgoals):\n 1. \\<And>l x t.\n       \\<lbrakk>l = LNil; l \\<le> x; t \\<le> x\\<rbrakk>\n       \\<Longrightarrow> l \\<le> t \\<or> t \\<le> l\n 2. \\<And>a l x t.\n       \\<lbrakk>l \\<in> UNIV\\<^sup>\\<star>;\n        \\<And>x t.\n           \\<lbrakk>l \\<le> x; t \\<le> x\\<rbrakk>\n           \\<Longrightarrow> l \\<le> t \\<or> t \\<le> l;\n        a \\<in> UNIV; a ## l \\<le> x; t \\<le> x\\<rbrakk>\n       \\<Longrightarrow> a ## l \\<le> t \\<or> t \\<le> a ## l", "thus ?case"], ["proof (prove)\nusing this:\n  l_ = LNil\n  l_ \\<le> x\n  t \\<le> x\n\ngoal (1 subgoal):\n 1. l_ \\<le> t \\<or> t \\<le> l_", "by simp"], ["proof (state)\nthis:\n  l_ \\<le> t \\<or> t \\<le> l_\n\ngoal (1 subgoal):\n 1. \\<And>a l x t.\n       \\<lbrakk>l \\<in> UNIV\\<^sup>\\<star>;\n        \\<And>x t.\n           \\<lbrakk>l \\<le> x; t \\<le> x\\<rbrakk>\n           \\<Longrightarrow> l \\<le> t \\<or> t \\<le> l;\n        a \\<in> UNIV; a ## l \\<le> x; t \\<le> x\\<rbrakk>\n       \\<Longrightarrow> a ## l \\<le> t \\<or> t \\<le> a ## l", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a l x t.\n       \\<lbrakk>l \\<in> UNIV\\<^sup>\\<star>;\n        \\<And>x t.\n           \\<lbrakk>l \\<le> x; t \\<le> x\\<rbrakk>\n           \\<Longrightarrow> l \\<le> t \\<or> t \\<le> l;\n        a \\<in> UNIV; a ## l \\<le> x; t \\<le> x\\<rbrakk>\n       \\<Longrightarrow> a ## l \\<le> t \\<or> t \\<le> a ## l", "case (LCons_fin a l)"], ["proof (state)\nthis:\n  l \\<in> UNIV\\<^sup>\\<star>\n  \\<lbrakk>l \\<le> ?x; ?t \\<le> ?x\\<rbrakk>\n  \\<Longrightarrow> l \\<le> ?t \\<or> ?t \\<le> l\n  a \\<in> UNIV\n  a ## l \\<le> x\n  t \\<le> x\n\ngoal (1 subgoal):\n 1. \\<And>a l x t.\n       \\<lbrakk>l \\<in> UNIV\\<^sup>\\<star>;\n        \\<And>x t.\n           \\<lbrakk>l \\<le> x; t \\<le> x\\<rbrakk>\n           \\<Longrightarrow> l \\<le> t \\<or> t \\<le> l;\n        a \\<in> UNIV; a ## l \\<le> x; t \\<le> x\\<rbrakk>\n       \\<Longrightarrow> a ## l \\<le> t \\<or> t \\<le> a ## l", "note alx = \\<open>a ## l \\<le> x\\<close>"], ["proof (state)\nthis:\n  a ## l \\<le> x\n\ngoal (1 subgoal):\n 1. \\<And>a l x t.\n       \\<lbrakk>l \\<in> UNIV\\<^sup>\\<star>;\n        \\<And>x t.\n           \\<lbrakk>l \\<le> x; t \\<le> x\\<rbrakk>\n           \\<Longrightarrow> l \\<le> t \\<or> t \\<le> l;\n        a \\<in> UNIV; a ## l \\<le> x; t \\<le> x\\<rbrakk>\n       \\<Longrightarrow> a ## l \\<le> t \\<or> t \\<le> a ## l", "note tx = \\<open>t \\<le> x\\<close>"], ["proof (state)\nthis:\n  t \\<le> x\n\ngoal (1 subgoal):\n 1. \\<And>a l x t.\n       \\<lbrakk>l \\<in> UNIV\\<^sup>\\<star>;\n        \\<And>x t.\n           \\<lbrakk>l \\<le> x; t \\<le> x\\<rbrakk>\n           \\<Longrightarrow> l \\<le> t \\<or> t \\<le> l;\n        a \\<in> UNIV; a ## l \\<le> x; t \\<le> x\\<rbrakk>\n       \\<Longrightarrow> a ## l \\<le> t \\<or> t \\<le> a ## l", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. a ## l \\<le> t \\<or> t \\<le> a ## l", "proof(rule disjCI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> t \\<le> a ## l \\<Longrightarrow> a ## l \\<le> t", "assume tal: \"\\<not> t \\<le> a ## l\""], ["proof (state)\nthis:\n  \\<not> t \\<le> a ## l\n\ngoal (1 subgoal):\n 1. \\<not> t \\<le> a ## l \\<Longrightarrow> a ## l \\<le> t", "show \"LCons a l \\<le> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a ## l \\<le> t", "proof (cases t)"], ["proof (state)\ngoal (2 subgoals):\n 1. t = LNil \\<Longrightarrow> a ## l \\<le> t\n 2. \\<And>x21 x22. t = x21 ## x22 \\<Longrightarrow> a ## l \\<le> t", "case LNil"], ["proof (state)\nthis:\n  t = LNil\n\ngoal (2 subgoals):\n 1. t = LNil \\<Longrightarrow> a ## l \\<le> t\n 2. \\<And>x21 x22. t = x21 ## x22 \\<Longrightarrow> a ## l \\<le> t", "thus ?thesis"], ["proof (prove)\nusing this:\n  t = LNil\n\ngoal (1 subgoal):\n 1. a ## l \\<le> t", "using tal"], ["proof (prove)\nusing this:\n  t = LNil\n  \\<not> t \\<le> a ## l\n\ngoal (1 subgoal):\n 1. a ## l \\<le> t", "by auto"], ["proof (state)\nthis:\n  a ## l \\<le> t\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22. t = x21 ## x22 \\<Longrightarrow> a ## l \\<le> t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x21 x22. t = x21 ## x22 \\<Longrightarrow> a ## l \\<le> t", "case (LCons b ts)"], ["proof (state)\nthis:\n  t = b ## ts\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22. t = x21 ## x22 \\<Longrightarrow> a ## l \\<le> t", "note tcons = this"], ["proof (state)\nthis:\n  t = b ## ts\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22. t = x21 ## x22 \\<Longrightarrow> a ## l \\<le> t", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. a ## l \\<le> t", "proof (cases x)"], ["proof (state)\ngoal (2 subgoals):\n 1. x = LNil \\<Longrightarrow> a ## l \\<le> t\n 2. \\<And>x21 x22. x = x21 ## x22 \\<Longrightarrow> a ## l \\<le> t", "case LNil"], ["proof (state)\nthis:\n  x = LNil\n\ngoal (2 subgoals):\n 1. x = LNil \\<Longrightarrow> a ## l \\<le> t\n 2. \\<And>x21 x22. x = x21 ## x22 \\<Longrightarrow> a ## l \\<le> t", "thus ?thesis"], ["proof (prove)\nusing this:\n  x = LNil\n\ngoal (1 subgoal):\n 1. a ## l \\<le> t", "using alx"], ["proof (prove)\nusing this:\n  x = LNil\n  a ## l \\<le> x\n\ngoal (1 subgoal):\n 1. a ## l \\<le> t", "by auto"], ["proof (state)\nthis:\n  a ## l \\<le> t\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22. x = x21 ## x22 \\<Longrightarrow> a ## l \\<le> t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x21 x22. x = x21 ## x22 \\<Longrightarrow> a ## l \\<le> t", "case (LCons c xs)"], ["proof (state)\nthis:\n  x = c ## xs\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22. x = x21 ## x22 \\<Longrightarrow> a ## l \\<le> t", "from alx  LCons"], ["proof (chain)\npicking this:\n  a ## l \\<le> x\n  x = c ## xs", "have ac: \"a = c\" and lxs: \"l \\<le> xs\""], ["proof (prove)\nusing this:\n  a ## l \\<le> x\n  x = c ## xs\n\ngoal (1 subgoal):\n 1. a = c &&& l \\<le> xs", "by auto"], ["proof (state)\nthis:\n  a = c\n  l \\<le> xs\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22. x = x21 ## x22 \\<Longrightarrow> a ## l \\<le> t", "from tx tcons LCons"], ["proof (chain)\npicking this:\n  t \\<le> x\n  t = b ## ts\n  x = c ## xs", "have bc: \"b = c\" and tsxs: \"ts \\<le> xs\""], ["proof (prove)\nusing this:\n  t \\<le> x\n  t = b ## ts\n  x = c ## xs\n\ngoal (1 subgoal):\n 1. b = c &&& ts \\<le> xs", "by auto"], ["proof (state)\nthis:\n  b = c\n  ts \\<le> xs\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22. x = x21 ## x22 \\<Longrightarrow> a ## l \\<le> t", "from tcons tal ac bc"], ["proof (chain)\npicking this:\n  t = b ## ts\n  \\<not> t \\<le> a ## l\n  a = c\n  b = c", "have tsl: \"\\<not> ts \\<le> l\""], ["proof (prove)\nusing this:\n  t = b ## ts\n  \\<not> t \\<le> a ## l\n  a = c\n  b = c\n\ngoal (1 subgoal):\n 1. \\<not> ts \\<le> l", "by auto"], ["proof (state)\nthis:\n  \\<not> ts \\<le> l\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22. x = x21 ## x22 \\<Longrightarrow> a ## l \\<le> t", "from LCons_fin lxs tsxs tsl"], ["proof (chain)\npicking this:\n  l \\<in> UNIV\\<^sup>\\<star>\n  \\<lbrakk>l \\<le> ?x; ?t \\<le> ?x\\<rbrakk>\n  \\<Longrightarrow> l \\<le> ?t \\<or> ?t \\<le> l\n  a \\<in> UNIV\n  a ## l \\<le> x\n  t \\<le> x\n  l \\<le> xs\n  ts \\<le> xs\n  \\<not> ts \\<le> l", "have \"l \\<le> ts\""], ["proof (prove)\nusing this:\n  l \\<in> UNIV\\<^sup>\\<star>\n  \\<lbrakk>l \\<le> ?x; ?t \\<le> ?x\\<rbrakk>\n  \\<Longrightarrow> l \\<le> ?t \\<or> ?t \\<le> l\n  a \\<in> UNIV\n  a ## l \\<le> x\n  t \\<le> x\n  l \\<le> xs\n  ts \\<le> xs\n  \\<not> ts \\<le> l\n\ngoal (1 subgoal):\n 1. l \\<le> ts", "by auto"], ["proof (state)\nthis:\n  l \\<le> ts\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22. x = x21 ## x22 \\<Longrightarrow> a ## l \\<le> t", "with tcons ac bc"], ["proof (chain)\npicking this:\n  t = b ## ts\n  a = c\n  b = c\n  l \\<le> ts", "show ?thesis"], ["proof (prove)\nusing this:\n  t = b ## ts\n  a = c\n  b = c\n  l \\<le> ts\n\ngoal (1 subgoal):\n 1. a ## l \\<le> t", "by auto"], ["proof (state)\nthis:\n  a ## l \\<le> t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a ## l \\<le> t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a ## l \\<le> t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a ## l \\<le> t \\<or> t \\<le> a ## l\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  s \\<le> t \\<or> t \\<le> s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  s \\<le> t \\<or> t \\<le> s\n\ngoal:\nNo subgoals!", "qed"], ["", "definition pfinpref :: \"'a set \\<Rightarrow> 'a llist \\<Rightarrow> 'a llist set\"\nwhere \"pfinpref A s \\<equiv> finpref A s - {LNil}\""], ["", "lemma pfinpref_iff [iff]:\n  \"(x \\<in> pfinpref A s) = (x \\<in> finpref A s \\<and> x \\<noteq> LNil)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<in> pfinpref A s) = (x \\<in> finpref A s \\<and> x \\<noteq> LNil)", "by (auto simp: pfinpref_def)"], ["", "subsection\\<open>Safety and Liveness\\<close>"], ["", "definition infsafety :: \"'a set \\<Rightarrow> 'a llist set \\<Rightarrow> bool\"\nwhere \"infsafety A P \\<equiv> \\<forall> t \\<in> A\\<^sup>\\<omega>. (\\<forall> r \\<in> finpref A t. \\<exists> s \\<in> A\\<^sup>\\<omega>. r @@ s \\<in> P) \\<longrightarrow> t \\<in> P\""], ["", "definition infliveness :: \"'a set \\<Rightarrow> 'a llist set \\<Rightarrow> bool\"\nwhere \"infliveness A P \\<equiv> \\<forall> t \\<in> A\\<^sup>\\<star>. \\<exists> s \\<in> A\\<^sup>\\<omega>. t @@ s \\<in> P\""], ["", "definition possafety :: \"'a set \\<Rightarrow> 'a llist set \\<Rightarrow> bool\"\nwhere \"possafety A P \\<equiv> \\<forall> t \\<in> A\\<^sup>\\<spadesuit>. (\\<forall> r \\<in> pfinpref A t. \\<exists> s \\<in> A\\<^sup>\\<infinity>. r @@ s \\<in> P) \\<longrightarrow> t \\<in> P\""], ["", "definition posliveness :: \"'a set \\<Rightarrow> 'a llist set \\<Rightarrow> bool\"\nwhere \"posliveness A P \\<equiv> \\<forall> t \\<in> A\\<^sup>\\<clubsuit>. \\<exists> s \\<in> A\\<^sup>\\<infinity>. t @@ s \\<in> P\""], ["", "definition safety :: \"'a set \\<Rightarrow> 'a llist set \\<Rightarrow> bool\"\nwhere \"safety A P \\<equiv> \\<forall> t \\<in> A\\<^sup>\\<infinity>. (\\<forall> r \\<in> finpref A t. \\<exists> s \\<in> A\\<^sup>\\<infinity>. r @@ s \\<in> P) \\<longrightarrow> t \\<in> P\""], ["", "definition liveness :: \"'a set \\<Rightarrow> 'a llist set \\<Rightarrow> bool\"\nwhere \"liveness A P \\<equiv> \\<forall> t \\<in> A\\<^sup>\\<star>. \\<exists> s \\<in> A\\<^sup>\\<infinity>. t @@ s \\<in> P\""], ["", "lemma safetyI:\n  \"(\\<And>t. \\<lbrakk>t \\<in>  A\\<^sup>\\<infinity>; \\<forall> r \\<in> finpref A t. \\<exists> s \\<in> A\\<^sup>\\<infinity>. r @@ s \\<in> P\\<rbrakk> \\<Longrightarrow> t \\<in> P)\n  \\<Longrightarrow> safety A P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>t \\<in> A\\<^sup>\\<infinity>;\n         \\<forall>r\\<in>finpref A t.\n            \\<exists>s\\<in>A\\<^sup>\\<infinity>. r @@ s \\<in> P\\<rbrakk>\n        \\<Longrightarrow> t \\<in> P) \\<Longrightarrow>\n    safety A P", "by (unfold safety_def) blast"], ["", "lemma safetyD:\n  \"\\<lbrakk> safety A P;  t \\<in> A\\<^sup>\\<infinity>;\n    \\<And>r. r \\<in> finpref A t \\<Longrightarrow> \\<exists> s \\<in> A\\<^sup>\\<infinity>. r @@ s \\<in> P\n  \\<rbrakk> \\<Longrightarrow> t \\<in> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>safety A P; t \\<in> A\\<^sup>\\<infinity>;\n     \\<And>r.\n        r \\<in> finpref A t \\<Longrightarrow>\n        \\<exists>s\\<in>A\\<^sup>\\<infinity>. r @@ s \\<in> P\\<rbrakk>\n    \\<Longrightarrow> t \\<in> P", "by (unfold safety_def) blast"], ["", "lemma safetyE:\n  \"\\<lbrakk> safety A P;\n    \\<forall> t \\<in> A\\<^sup>\\<infinity>. (\\<forall> r \\<in> finpref A t. \\<exists> s \\<in> A\\<^sup>\\<infinity>. r @@ s \\<in> P) \\<longrightarrow> t \\<in> P \\<Longrightarrow> R\n   \\<rbrakk> \\<Longrightarrow> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>safety A P;\n     \\<forall>t\\<in>A\\<^sup>\\<infinity>.\n        (\\<forall>r\\<in>finpref A t.\n            \\<exists>s\\<in>A\\<^sup>\\<infinity>.\n               r @@ s \\<in> P) \\<longrightarrow>\n        t \\<in> P \\<Longrightarrow>\n     R\\<rbrakk>\n    \\<Longrightarrow> R", "by (unfold safety_def) blast"], ["", "lemma safety_prefix_closed:\n  \"safety UNIV P \\<Longrightarrow> prefix_closed P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. safety UNIV P \\<Longrightarrow> prefix_closed P", "by (auto dest!: safetyD\n       simp: prefix_closed_def finpref_def llist_le_def lappend_assoc)\n    blast"], ["", "lemma livenessI:\n  \"(\\<And>s. s\\<in> A\\<^sup>\\<star> \\<Longrightarrow> \\<exists> t \\<in> A\\<^sup>\\<infinity>. s @@ t \\<in> P) \\<Longrightarrow> liveness A P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s.\n        s \\<in> A\\<^sup>\\<star> \\<Longrightarrow>\n        \\<exists>t\\<in>A\\<^sup>\\<infinity>.\n           s @@ t \\<in> P) \\<Longrightarrow>\n    liveness A P", "by (auto simp: liveness_def)"], ["", "lemma livenessE:\n  \"\\<lbrakk> liveness A P; \\<And>t. \\<lbrakk>  t \\<in> A\\<^sup>\\<infinity>; s @@ t \\<in> P\\<rbrakk> \\<Longrightarrow> R; s \\<notin> A\\<^sup>\\<star> \\<Longrightarrow> R\\<rbrakk> \\<Longrightarrow> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>liveness A P;\n     \\<And>t.\n        \\<lbrakk>t \\<in> A\\<^sup>\\<infinity>; s @@ t \\<in> P\\<rbrakk>\n        \\<Longrightarrow> R;\n     s \\<notin> A\\<^sup>\\<star> \\<Longrightarrow> R\\<rbrakk>\n    \\<Longrightarrow> R", "by (auto simp: liveness_def)"], ["", "lemma possafetyI:\n  \"(\\<And>t. \\<lbrakk>t \\<in>  A\\<^sup>\\<spadesuit>; \\<forall> r \\<in> pfinpref A t. \\<exists> s \\<in> A\\<^sup>\\<infinity>. r @@ s \\<in> P\\<rbrakk> \\<Longrightarrow> t \\<in> P)\n  \\<Longrightarrow> possafety A P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>t \\<in> A\\<^sup>\\<spadesuit>;\n         \\<forall>r\\<in>pfinpref A t.\n            \\<exists>s\\<in>A\\<^sup>\\<infinity>. r @@ s \\<in> P\\<rbrakk>\n        \\<Longrightarrow> t \\<in> P) \\<Longrightarrow>\n    possafety A P", "by (unfold possafety_def) blast"], ["", "lemma possafetyD:\n  \"\\<lbrakk> possafety A P;  t \\<in> A\\<^sup>\\<spadesuit>;\n    \\<And>r. r \\<in> pfinpref A t \\<Longrightarrow> \\<exists> s \\<in> A\\<^sup>\\<infinity>. r @@ s \\<in> P\n  \\<rbrakk> \\<Longrightarrow> t \\<in> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>possafety A P; t \\<in> A\\<^sup>\\<spadesuit>;\n     \\<And>r.\n        r \\<in> pfinpref A t \\<Longrightarrow>\n        \\<exists>s\\<in>A\\<^sup>\\<infinity>. r @@ s \\<in> P\\<rbrakk>\n    \\<Longrightarrow> t \\<in> P", "by (unfold possafety_def) blast"], ["", "lemma possafetyE:\n  \"\\<lbrakk> possafety A P;\n    \\<forall> t \\<in> A\\<^sup>\\<spadesuit>. (\\<forall> r \\<in> pfinpref A t. \\<exists> s \\<in> A\\<^sup>\\<infinity>. r @@ s \\<in> P) \\<longrightarrow> t \\<in> P \\<Longrightarrow> R\n   \\<rbrakk> \\<Longrightarrow> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>possafety A P;\n     \\<forall>t\\<in>A\\<^sup>\\<spadesuit>.\n        (\\<forall>r\\<in>pfinpref A t.\n            \\<exists>s\\<in>A\\<^sup>\\<infinity>.\n               r @@ s \\<in> P) \\<longrightarrow>\n        t \\<in> P \\<Longrightarrow>\n     R\\<rbrakk>\n    \\<Longrightarrow> R", "by (unfold possafety_def) blast"], ["", "lemma possafety_pprefix_closed:\n  assumes psafety: \"possafety UNIV P\"\n  shows \"pprefix_closed P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pprefix_closed P", "unfolding pprefix_closed_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>t\\<in>P.\n       \\<forall>s.\n          s \\<le> t \\<and> s \\<noteq> LNil \\<longrightarrow> s \\<in> P", "proof(intro ballI allI impI, erule conjE)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t s.\n       \\<lbrakk>t \\<in> P; s \\<le> t; s \\<noteq> LNil\\<rbrakk>\n       \\<Longrightarrow> s \\<in> P", "fix t s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t s.\n       \\<lbrakk>t \\<in> P; s \\<le> t; s \\<noteq> LNil\\<rbrakk>\n       \\<Longrightarrow> s \\<in> P", "assume tP: \"t \\<in> P\" and st: \"s \\<le> t\" and spos: \"s \\<noteq> LNil\""], ["proof (state)\nthis:\n  t \\<in> P\n  s \\<le> t\n  s \\<noteq> LNil\n\ngoal (1 subgoal):\n 1. \\<And>t s.\n       \\<lbrakk>t \\<in> P; s \\<le> t; s \\<noteq> LNil\\<rbrakk>\n       \\<Longrightarrow> s \\<in> P", "from psafety"], ["proof (chain)\npicking this:\n  possafety UNIV P", "show \"s \\<in> P\""], ["proof (prove)\nusing this:\n  possafety UNIV P\n\ngoal (1 subgoal):\n 1. s \\<in> P", "proof (rule possafetyD)"], ["proof (state)\ngoal (2 subgoals):\n 1. s \\<in> UNIV\\<^sup>\\<spadesuit>\n 2. \\<And>r.\n       r \\<in> pfinpref UNIV s \\<Longrightarrow>\n       \\<exists>s\\<in>UNIV\\<^sup>\\<infinity>. r @@ s \\<in> P", "from spos"], ["proof (chain)\npicking this:\n  s \\<noteq> LNil", "show  \"s \\<in> UNIV\\<^sup>\\<spadesuit>\""], ["proof (prove)\nusing this:\n  s \\<noteq> LNil\n\ngoal (1 subgoal):\n 1. s \\<in> UNIV\\<^sup>\\<spadesuit>", "by auto"], ["proof (state)\nthis:\n  s \\<in> UNIV\\<^sup>\\<spadesuit>\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       r \\<in> pfinpref UNIV s \\<Longrightarrow>\n       \\<exists>s\\<in>UNIV\\<^sup>\\<infinity>. r @@ s \\<in> P", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r.\n       r \\<in> pfinpref UNIV s \\<Longrightarrow>\n       \\<exists>s\\<in>UNIV\\<^sup>\\<infinity>. r @@ s \\<in> P", "fix r"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r.\n       r \\<in> pfinpref UNIV s \\<Longrightarrow>\n       \\<exists>s\\<in>UNIV\\<^sup>\\<infinity>. r @@ s \\<in> P", "assume \"r \\<in> pfinpref UNIV s\""], ["proof (state)\nthis:\n  r \\<in> pfinpref UNIV s\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       r \\<in> pfinpref UNIV s \\<Longrightarrow>\n       \\<exists>s\\<in>UNIV\\<^sup>\\<infinity>. r @@ s \\<in> P", "then"], ["proof (chain)\npicking this:\n  r \\<in> pfinpref UNIV s", "obtain u where scons: \"s = r @@ u\""], ["proof (prove)\nusing this:\n  r \\<in> pfinpref UNIV s\n\ngoal (1 subgoal):\n 1. (\\<And>u. s = r @@ u \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (auto simp: pfinpref_def finpref_def llist_le_def)"], ["proof (state)\nthis:\n  s = r @@ u\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       r \\<in> pfinpref UNIV s \\<Longrightarrow>\n       \\<exists>s\\<in>UNIV\\<^sup>\\<infinity>. r @@ s \\<in> P", "with st"], ["proof (chain)\npicking this:\n  s \\<le> t\n  s = r @@ u", "obtain v where \"t = r @@ u @@ v\""], ["proof (prove)\nusing this:\n  s \\<le> t\n  s = r @@ u\n\ngoal (1 subgoal):\n 1. (\\<And>v. t = r @@ u @@ v \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: lappend_assoc llist_le_def)"], ["proof (state)\nthis:\n  t = r @@ u @@ v\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       r \\<in> pfinpref UNIV s \\<Longrightarrow>\n       \\<exists>s\\<in>UNIV\\<^sup>\\<infinity>. r @@ s \\<in> P", "with tP"], ["proof (chain)\npicking this:\n  t \\<in> P\n  t = r @@ u @@ v", "show \"\\<exists>s\\<in>UNIV\\<^sup>\\<infinity>. r @@ s \\<in> P\""], ["proof (prove)\nusing this:\n  t \\<in> P\n  t = r @@ u @@ v\n\ngoal (1 subgoal):\n 1. \\<exists>s\\<in>UNIV\\<^sup>\\<infinity>. r @@ s \\<in> P", "by auto"], ["proof (state)\nthis:\n  \\<exists>s\\<in>UNIV\\<^sup>\\<infinity>. r @@ s \\<in> P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  s \\<in> P\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma poslivenessI:\n  \"(\\<And>s. s\\<in> A\\<^sup>\\<clubsuit> \\<Longrightarrow> \\<exists> t \\<in> A\\<^sup>\\<infinity>. s @@ t \\<in> P) \\<Longrightarrow> posliveness A P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s.\n        s \\<in> A\\<^sup>\\<clubsuit> \\<Longrightarrow>\n        \\<exists>t\\<in>A\\<^sup>\\<infinity>.\n           s @@ t \\<in> P) \\<Longrightarrow>\n    posliveness A P", "by (auto simp: posliveness_def)"], ["", "lemma poslivenessE:\n  \"\\<lbrakk> posliveness A P; \\<And>t. \\<lbrakk>  t \\<in> A\\<^sup>\\<infinity>; s @@ t \\<in> P\\<rbrakk> \\<Longrightarrow> R; s \\<notin> A\\<^sup>\\<clubsuit> \\<Longrightarrow> R\\<rbrakk> \\<Longrightarrow> R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>posliveness A P;\n     \\<And>t.\n        \\<lbrakk>t \\<in> A\\<^sup>\\<infinity>; s @@ t \\<in> P\\<rbrakk>\n        \\<Longrightarrow> R;\n     s \\<notin> A\\<^sup>\\<clubsuit> \\<Longrightarrow> R\\<rbrakk>\n    \\<Longrightarrow> R", "by (auto simp: posliveness_def)"], ["", "end"]]}