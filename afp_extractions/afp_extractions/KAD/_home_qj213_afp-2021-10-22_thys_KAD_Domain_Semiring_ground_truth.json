{"file_name": "/home/qj213/afp-2021-10-22/thys/KAD/Domain_Semiring.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/KAD", "problem_names": ["lemma domain_invol [simp]: \"d (d x) = d x\"", "lemma dom_el_idem [simp]: \"d x \\<cdot> d x = d x\"", "lemma dom_mult_closed [simp]: \"d (d x \\<cdot> d y) = d x \\<cdot> d y\"", "lemma dom_lc3 [simp]: \"d x \\<cdot> d (x \\<cdot> y) = d (x \\<cdot> y)\"", "lemma d_fixpoint: \"(\\<exists>y. x = d y) \\<longleftrightarrow> x = d x\"", "lemma d_type: \"\\<forall>P. (\\<forall>x. x = d x \\<longrightarrow> P x) \\<longleftrightarrow> (\\<forall>x. P (d x))\"", "lemma ds_ord_refl: \"x \\<sqsubseteq> x\"", "lemma ds_ord_trans: \"x \\<sqsubseteq> y \\<Longrightarrow> y \\<sqsubseteq> z \\<Longrightarrow> x \\<sqsubseteq> z\"", "lemma ds_ord_antisym: \"x \\<sqsubseteq> y \\<Longrightarrow> y \\<sqsubseteq> x \\<Longrightarrow> x = y\"", "lemma ds_ord_eq: \"x \\<sqsubseteq> d x \\<longleftrightarrow> x = d x\"", "lemma \"x \\<sqsubseteq> y \\<Longrightarrow> z \\<cdot> x \\<sqsubseteq> z \\<cdot> y\"", "lemma ds_ord_iso_right: \"x \\<sqsubseteq> y \\<Longrightarrow> x \\<cdot> z \\<sqsubseteq> y \\<cdot> z\"", "lemma ds_ord_sl_ord: \"d x \\<sqsubseteq> d y \\<longleftrightarrow> d x \\<cdot> d y = d x\"", "lemma ds_ord_1: \"d (x \\<cdot> y) \\<sqsubseteq> d x\"", "lemma ds_subid_aux: \"d x \\<cdot> y \\<sqsubseteq> y\"", "lemma \"y \\<cdot> d x \\<sqsubseteq> y\"", "lemma ds_dom_iso: \"x \\<sqsubseteq> y \\<Longrightarrow> d x \\<sqsubseteq> d y\"", "lemma ds_dom_llp: \"x \\<sqsubseteq> d y \\<cdot> x \\<longleftrightarrow> d x \\<sqsubseteq> d y\"", "lemma ds_dom_llp_strong: \"x = d y \\<cdot> x \\<longleftrightarrow> d x \\<sqsubseteq> d y\"", "lemma refines_refl: \"refines x x\"", "lemma refines_trans: \"refines x y \\<Longrightarrow> refines y z \\<Longrightarrow> refines x z\"", "lemma refines_antisym: \"refines x y \\<Longrightarrow> refines y x \\<Longrightarrow> x = y\"", "lemma dom_one [simp]: \"d 1 = 1\"", "lemma ds_subid_eq: \"x \\<sqsubseteq> 1 \\<longleftrightarrow> x = d x\"", "lemma dom_iso: \"x \\<le> y \\<Longrightarrow> d x \\<le> d y\"", "lemma dom_add_closed [simp]: \"d (d x + d y) = d x + d y\"", "lemma dom_absorp_2 [simp]: \"d x + d x \\<cdot> d y = d x\"", "lemma dom_1: \"d (x \\<cdot> y) \\<le> d x\"", "lemma dom_subid_aux2: \"d x \\<cdot> y \\<le> y\"", "lemma dom_glb: \"d x \\<le> d y \\<Longrightarrow> d x \\<le> d z \\<Longrightarrow> d x \\<le> d y \\<cdot> d z\"", "lemma dom_glb_eq: \"d x \\<le> d y \\<cdot> d z \\<longleftrightarrow> d x \\<le> d y \\<and> d x \\<le> d z\"", "lemma dom_ord: \"d x \\<le> d y \\<longleftrightarrow> d x \\<cdot> d y = d x\"", "lemma dom_export [simp]: \"d (d x \\<cdot> y) = d x \\<cdot> d y\"", "lemma d_two_orders: \"d x \\<sqsubseteq> d y \\<longleftrightarrow> d x \\<le> d y\"", "lemma two_orders: \"x \\<sqsubseteq> y \\<Longrightarrow> x \\<le> y\"", "lemma \"x \\<le> y \\<Longrightarrow> x \\<sqsubseteq> y\"", "lemma dom_subdist: \"d x \\<le> d (x + y)\"", "lemma dom_distrib: \"d x + d y \\<cdot> d z = (d x + d y) \\<cdot> (d x + d z)\"", "lemma dom_llp1: \"x \\<le> d y \\<cdot> x \\<Longrightarrow> d x \\<le> d y\"", "lemma dom_llp2: \"d x \\<le> d y \\<Longrightarrow> x \\<le> d y \\<cdot> x\"", "lemma dom_llp: \"x \\<le> d y \\<cdot> x \\<longleftrightarrow> d x \\<le> d y\"", "lemma dom_subid: \"d x \\<le> 1\"", "lemma domain_very_strict: \"d x = 0 \\<longleftrightarrow> x = 0\"", "lemma dom_weakly_local: \"x \\<cdot> y = 0 \\<longleftrightarrow> x \\<cdot> d y = 0\"", "lemma dns1'' [simp]: \"d x \\<cdot> x = x\"", "lemma d_iso: \"x \\<le> y \\<Longrightarrow> d x \\<le> d y\"", "lemma domain_1'': \"d (x \\<cdot> y) \\<le> d x\"", "lemma domain_export'' [simp]: \"d (d x \\<cdot> y) = d x \\<cdot> d y\"", "lemma dom_subid_aux1'': \"d x \\<cdot> y \\<le> y\"", "lemma dom_subid_aux2'': \"x \\<cdot> d y \\<le> x\"", "lemma d_comm: \"d x \\<cdot> d y = d y \\<cdot> d x\"", "lemma domain_subid: \"x \\<le> 1 \\<Longrightarrow> x \\<le> d x\"", "lemma d_preserves_equation: \"d y \\<cdot> x \\<le> x \\<cdot> d z \\<longleftrightarrow> d y \\<cdot> x = d y \\<cdot> x \\<cdot> d z\"", "lemma d_restrict_iff: \"(x \\<le> y) \\<longleftrightarrow> (x \\<le> d x \\<cdot> y)\"", "lemma d_restrict_iff_1: \"(d x \\<cdot> y \\<le> z) \\<longleftrightarrow> (d x \\<cdot> y \\<le> d x \\<cdot> z)\"", "lemma kat_equivalence_greatest: \"d x \\<le> d y \\<longleftrightarrow> x \\<le> d y \\<cdot> \\<top>\"", "lemma fdia_d_simp [simp]: \"|x\\<rangle> d y = |x\\<rangle> y\"", "lemma fdia_dom [simp]: \"|x\\<rangle> 1 = d x\"", "lemma fdia_add1: \"|x\\<rangle> (y + z) = |x\\<rangle> y + |x\\<rangle> z\"", "lemma fdia_add2: \"|x + y\\<rangle> z = |x\\<rangle> z + |y\\<rangle> z\"", "lemma fdia_mult: \"|x \\<cdot> y\\<rangle> z = |x\\<rangle> |y\\<rangle> z\"", "lemma fdia_one [simp]: \"|1\\<rangle> x = d x\"", "lemma fdemodalisation1: \"d z \\<cdot> |x\\<rangle> y = 0 \\<longleftrightarrow> d z \\<cdot> x \\<cdot> d y = 0\"", "lemma fdemodalisation2: \"|x\\<rangle> y \\<le> d z \\<longleftrightarrow> x \\<cdot> d y \\<le> d z \\<cdot> x\"", "lemma fd_iso1: \"d x \\<le> d y \\<Longrightarrow> |z\\<rangle> x \\<le> |z\\<rangle> y\"", "lemma fd_iso2: \"x \\<le> y \\<Longrightarrow> |x\\<rangle> z \\<le> |y\\<rangle> z\"", "lemma fd_zero_var [simp]: \"|0\\<rangle> x = 0\"", "lemma fd_subdist_1: \"|x\\<rangle> y \\<le> |x\\<rangle> (y + z)\"", "lemma fd_subdist_2: \"|x\\<rangle> (d y \\<cdot> d z) \\<le> |x\\<rangle> y\"", "lemma fd_subdist: \"|x\\<rangle> (d y \\<cdot> d z) \\<le> |x\\<rangle> y \\<cdot> |x\\<rangle> z\"", "lemma fdia_export_1: \"d y \\<cdot> |x\\<rangle> z = |d y \\<cdot> x\\<rangle> z\"", "lemma fdia_zero [simp]: \"|x\\<rangle> 0 = 0\"", "lemma dom_star [simp]: \"d (x\\<^sup>\\<star>) = 1\"", "lemma fdia_star_unfold [simp]: \"|1\\<rangle> y + |x\\<rangle> |x\\<^sup>\\<star>\\<rangle> y = |x\\<^sup>\\<star>\\<rangle> y\"", "lemma fdia_star_unfoldr [simp]: \"|1\\<rangle> y + |x\\<^sup>\\<star>\\<rangle> |x\\<rangle> y = |x\\<^sup>\\<star>\\<rangle> y\"", "lemma fdia_star_unfold_var [simp]: \"d y + |x\\<rangle> |x\\<^sup>\\<star>\\<rangle> y = |x\\<^sup>\\<star>\\<rangle> y\"", "lemma fdia_star_unfoldr_var [simp]: \"d y + |x\\<^sup>\\<star>\\<rangle> |x\\<rangle> y = |x\\<^sup>\\<star>\\<rangle> y\"", "lemma fdia_star_induct_var: \"|x\\<rangle> y \\<le> d y \\<Longrightarrow> |x\\<^sup>\\<star>\\<rangle> y \\<le> d y\"", "lemma fdia_star_induct: \"d z + |x\\<rangle> y \\<le> d y \\<Longrightarrow> |x\\<^sup>\\<star>\\<rangle> z \\<le> d y\"", "lemma fdia_star_induct_eq: \"d z + |x\\<rangle> y = d y \\<Longrightarrow> |x\\<^sup>\\<star>\\<rangle> z \\<le> d y\""], "translations": [["", "lemma domain_invol [simp]: \"d (d x) = d x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d (d x) = d x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. d (d x) = d x", "have \"d (d x) = d (d (d x \\<cdot> x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d (d x) = d (d (d x \\<cdot> x))", "by simp"], ["proof (state)\nthis:\n  d (d x) = d (d (d x \\<cdot> x))\n\ngoal (1 subgoal):\n 1. d (d x) = d x", "also"], ["proof (state)\nthis:\n  d (d x) = d (d (d x \\<cdot> x))\n\ngoal (1 subgoal):\n 1. d (d x) = d x", "have \"... = d (d x \\<cdot> d x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d (d (d x \\<cdot> x)) = d (d x \\<cdot> d x)", "using dsg3"], ["proof (prove)\nusing this:\n  d (d ?x \\<cdot> ?y) = d ?x \\<cdot> d ?y\n\ngoal (1 subgoal):\n 1. d (d (d x \\<cdot> x)) = d (d x \\<cdot> d x)", "by presburger"], ["proof (state)\nthis:\n  d (d (d x \\<cdot> x)) = d (d x \\<cdot> d x)\n\ngoal (1 subgoal):\n 1. d (d x) = d x", "also"], ["proof (state)\nthis:\n  d (d (d x \\<cdot> x)) = d (d x \\<cdot> d x)\n\ngoal (1 subgoal):\n 1. d (d x) = d x", "have \"... = d (d x \\<cdot> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d (d x \\<cdot> d x) = d (d x \\<cdot> x)", "by simp"], ["proof (state)\nthis:\n  d (d x \\<cdot> d x) = d (d x \\<cdot> x)\n\ngoal (1 subgoal):\n 1. d (d x) = d x", "finally"], ["proof (chain)\npicking this:\n  d (d x) = d (d x \\<cdot> x)", "show ?thesis"], ["proof (prove)\nusing this:\n  d (d x) = d (d x \\<cdot> x)\n\ngoal (1 subgoal):\n 1. d (d x) = d x", "by simp"], ["proof (state)\nthis:\n  d (d x) = d x\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The next lemmas show that domain elements form semilattices.\\<close>"], ["", "lemma dom_el_idem [simp]: \"d x \\<cdot> d x = d x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d x \\<cdot> d x = d x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. d x \\<cdot> d x = d x", "have \"d x \\<cdot> d x = d (d x \\<cdot> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d x \\<cdot> d x = d (d x \\<cdot> x)", "using dsg3"], ["proof (prove)\nusing this:\n  d (d ?x \\<cdot> ?y) = d ?x \\<cdot> d ?y\n\ngoal (1 subgoal):\n 1. d x \\<cdot> d x = d (d x \\<cdot> x)", "by presburger"], ["proof (state)\nthis:\n  d x \\<cdot> d x = d (d x \\<cdot> x)\n\ngoal (1 subgoal):\n 1. d x \\<cdot> d x = d x", "thus ?thesis"], ["proof (prove)\nusing this:\n  d x \\<cdot> d x = d (d x \\<cdot> x)\n\ngoal (1 subgoal):\n 1. d x \\<cdot> d x = d x", "by simp"], ["proof (state)\nthis:\n  d x \\<cdot> d x = d x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dom_mult_closed [simp]: \"d (d x \\<cdot> d y) = d x \\<cdot> d y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d (d x \\<cdot> d y) = d x \\<cdot> d y", "by simp"], ["", "lemma dom_lc3 [simp]: \"d x \\<cdot> d (x \\<cdot> y) = d (x \\<cdot> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d x \\<cdot> d (x \\<cdot> y) = d (x \\<cdot> y)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. d x \\<cdot> d (x \\<cdot> y) = d (x \\<cdot> y)", "have \"d x \\<cdot> d (x \\<cdot> y) = d (d x \\<cdot> x \\<cdot> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d x \\<cdot> d (x \\<cdot> y) = d (d x \\<cdot> x \\<cdot> y)", "using dsg3 mult_assoc"], ["proof (prove)\nusing this:\n  d (d ?x \\<cdot> ?y) = d ?x \\<cdot> d ?y\n  ?a \\<cdot> ?b \\<cdot> ?c = ?a \\<cdot> (?b \\<cdot> ?c)\n\ngoal (1 subgoal):\n 1. d x \\<cdot> d (x \\<cdot> y) = d (d x \\<cdot> x \\<cdot> y)", "by presburger"], ["proof (state)\nthis:\n  d x \\<cdot> d (x \\<cdot> y) = d (d x \\<cdot> x \\<cdot> y)\n\ngoal (1 subgoal):\n 1. d x \\<cdot> d (x \\<cdot> y) = d (x \\<cdot> y)", "thus ?thesis"], ["proof (prove)\nusing this:\n  d x \\<cdot> d (x \\<cdot> y) = d (d x \\<cdot> x \\<cdot> y)\n\ngoal (1 subgoal):\n 1. d x \\<cdot> d (x \\<cdot> y) = d (x \\<cdot> y)", "by simp"], ["proof (state)\nthis:\n  d x \\<cdot> d (x \\<cdot> y) = d (x \\<cdot> y)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma d_fixpoint: \"(\\<exists>y. x = d y) \\<longleftrightarrow> x = d x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>y. x = d y) = (x = d x)", "by auto"], ["", "lemma d_type: \"\\<forall>P. (\\<forall>x. x = d x \\<longrightarrow> P x) \\<longleftrightarrow> (\\<forall>x. P (d x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>P.\n       (\\<forall>x. x = d x \\<longrightarrow> P x) = (\\<forall>x. P (d x))", "by (metis domain_invol)"], ["", "text \\<open>We define the semilattice ordering on domain semigroups and explore the semilattice of domain elements from the order point of view.\\<close>"], ["", "definition ds_ord :: \"'a \\<Rightarrow> 'a \\<Rightarrow> bool\" (infix \"\\<sqsubseteq>\" 50) where\n  \"x \\<sqsubseteq> y \\<longleftrightarrow> x = d x \\<cdot> y\""], ["", "lemma ds_ord_refl: \"x \\<sqsubseteq> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sqsubseteq> x", "by (simp add: ds_ord_def)"], ["", "lemma ds_ord_trans: \"x \\<sqsubseteq> y \\<Longrightarrow> y \\<sqsubseteq> z \\<Longrightarrow> x \\<sqsubseteq> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<sqsubseteq> y; y \\<sqsubseteq> z\\<rbrakk>\n    \\<Longrightarrow> x \\<sqsubseteq> z", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<sqsubseteq> y; y \\<sqsubseteq> z\\<rbrakk>\n    \\<Longrightarrow> x \\<sqsubseteq> z", "assume \"x \\<sqsubseteq> y\" and a: \"y \\<sqsubseteq> z\""], ["proof (state)\nthis:\n  x \\<sqsubseteq> y\n  y \\<sqsubseteq> z\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<sqsubseteq> y; y \\<sqsubseteq> z\\<rbrakk>\n    \\<Longrightarrow> x \\<sqsubseteq> z", "hence b: \"x = d x \\<cdot> y\""], ["proof (prove)\nusing this:\n  x \\<sqsubseteq> y\n  y \\<sqsubseteq> z\n\ngoal (1 subgoal):\n 1. x = d x \\<cdot> y", "using ds_ord_def"], ["proof (prove)\nusing this:\n  x \\<sqsubseteq> y\n  y \\<sqsubseteq> z\n  (?x \\<sqsubseteq> ?y) = (?x = d ?x \\<cdot> ?y)\n\ngoal (1 subgoal):\n 1. x = d x \\<cdot> y", "by blast"], ["proof (state)\nthis:\n  x = d x \\<cdot> y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<sqsubseteq> y; y \\<sqsubseteq> z\\<rbrakk>\n    \\<Longrightarrow> x \\<sqsubseteq> z", "hence \"x = d x \\<cdot> d y \\<cdot> z\""], ["proof (prove)\nusing this:\n  x = d x \\<cdot> y\n\ngoal (1 subgoal):\n 1. x = d x \\<cdot> d y \\<cdot> z", "using a ds_ord_def mult_assoc"], ["proof (prove)\nusing this:\n  x = d x \\<cdot> y\n  y \\<sqsubseteq> z\n  (?x \\<sqsubseteq> ?y) = (?x = d ?x \\<cdot> ?y)\n  ?a \\<cdot> ?b \\<cdot> ?c = ?a \\<cdot> (?b \\<cdot> ?c)\n\ngoal (1 subgoal):\n 1. x = d x \\<cdot> d y \\<cdot> z", "by force"], ["proof (state)\nthis:\n  x = d x \\<cdot> d y \\<cdot> z\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<sqsubseteq> y; y \\<sqsubseteq> z\\<rbrakk>\n    \\<Longrightarrow> x \\<sqsubseteq> z", "also"], ["proof (state)\nthis:\n  x = d x \\<cdot> d y \\<cdot> z\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<sqsubseteq> y; y \\<sqsubseteq> z\\<rbrakk>\n    \\<Longrightarrow> x \\<sqsubseteq> z", "have \"... = d (d x \\<cdot> y) \\<cdot> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d x \\<cdot> d y \\<cdot> z = d (d x \\<cdot> y) \\<cdot> z", "by simp"], ["proof (state)\nthis:\n  d x \\<cdot> d y \\<cdot> z = d (d x \\<cdot> y) \\<cdot> z\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<sqsubseteq> y; y \\<sqsubseteq> z\\<rbrakk>\n    \\<Longrightarrow> x \\<sqsubseteq> z", "also"], ["proof (state)\nthis:\n  d x \\<cdot> d y \\<cdot> z = d (d x \\<cdot> y) \\<cdot> z\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<sqsubseteq> y; y \\<sqsubseteq> z\\<rbrakk>\n    \\<Longrightarrow> x \\<sqsubseteq> z", "have \"... = d x \\<cdot> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d (d x \\<cdot> y) \\<cdot> z = d x \\<cdot> z", "using b"], ["proof (prove)\nusing this:\n  x = d x \\<cdot> y\n\ngoal (1 subgoal):\n 1. d (d x \\<cdot> y) \\<cdot> z = d x \\<cdot> z", "by auto"], ["proof (state)\nthis:\n  d (d x \\<cdot> y) \\<cdot> z = d x \\<cdot> z\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<sqsubseteq> y; y \\<sqsubseteq> z\\<rbrakk>\n    \\<Longrightarrow> x \\<sqsubseteq> z", "finally"], ["proof (chain)\npicking this:\n  x = d x \\<cdot> z", "show ?thesis"], ["proof (prove)\nusing this:\n  x = d x \\<cdot> z\n\ngoal (1 subgoal):\n 1. x \\<sqsubseteq> z", "using ds_ord_def"], ["proof (prove)\nusing this:\n  x = d x \\<cdot> z\n  (?x \\<sqsubseteq> ?y) = (?x = d ?x \\<cdot> ?y)\n\ngoal (1 subgoal):\n 1. x \\<sqsubseteq> z", "by blast"], ["proof (state)\nthis:\n  x \\<sqsubseteq> z\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ds_ord_antisym: \"x \\<sqsubseteq> y \\<Longrightarrow> y \\<sqsubseteq> x \\<Longrightarrow> x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<sqsubseteq> y; y \\<sqsubseteq> x\\<rbrakk>\n    \\<Longrightarrow> x = y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<sqsubseteq> y; y \\<sqsubseteq> x\\<rbrakk>\n    \\<Longrightarrow> x = y", "assume a: \"x \\<sqsubseteq> y\" and \"y \\<sqsubseteq> x\""], ["proof (state)\nthis:\n  x \\<sqsubseteq> y\n  y \\<sqsubseteq> x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<sqsubseteq> y; y \\<sqsubseteq> x\\<rbrakk>\n    \\<Longrightarrow> x = y", "hence b: \"y = d y \\<cdot> x\""], ["proof (prove)\nusing this:\n  x \\<sqsubseteq> y\n  y \\<sqsubseteq> x\n\ngoal (1 subgoal):\n 1. y = d y \\<cdot> x", "using ds_ord_def"], ["proof (prove)\nusing this:\n  x \\<sqsubseteq> y\n  y \\<sqsubseteq> x\n  (?x \\<sqsubseteq> ?y) = (?x = d ?x \\<cdot> ?y)\n\ngoal (1 subgoal):\n 1. y = d y \\<cdot> x", "by auto"], ["proof (state)\nthis:\n  y = d y \\<cdot> x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<sqsubseteq> y; y \\<sqsubseteq> x\\<rbrakk>\n    \\<Longrightarrow> x = y", "have \"x = d x \\<cdot> d y \\<cdot> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = d x \\<cdot> d y \\<cdot> x", "using a b ds_ord_def mult_assoc"], ["proof (prove)\nusing this:\n  x \\<sqsubseteq> y\n  y = d y \\<cdot> x\n  (?x \\<sqsubseteq> ?y) = (?x = d ?x \\<cdot> ?y)\n  ?a \\<cdot> ?b \\<cdot> ?c = ?a \\<cdot> (?b \\<cdot> ?c)\n\ngoal (1 subgoal):\n 1. x = d x \\<cdot> d y \\<cdot> x", "by force"], ["proof (state)\nthis:\n  x = d x \\<cdot> d y \\<cdot> x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<sqsubseteq> y; y \\<sqsubseteq> x\\<rbrakk>\n    \\<Longrightarrow> x = y", "also"], ["proof (state)\nthis:\n  x = d x \\<cdot> d y \\<cdot> x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<sqsubseteq> y; y \\<sqsubseteq> x\\<rbrakk>\n    \\<Longrightarrow> x = y", "have \"... = d y \\<cdot> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d x \\<cdot> d y \\<cdot> x = d y \\<cdot> x", "by (metis (full_types) b dsg3 dsg4)"], ["proof (state)\nthis:\n  d x \\<cdot> d y \\<cdot> x = d y \\<cdot> x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<sqsubseteq> y; y \\<sqsubseteq> x\\<rbrakk>\n    \\<Longrightarrow> x = y", "thus ?thesis"], ["proof (prove)\nusing this:\n  d x \\<cdot> d y \\<cdot> x = d y \\<cdot> x\n\ngoal (1 subgoal):\n 1. x = y", "using b calculation"], ["proof (prove)\nusing this:\n  d x \\<cdot> d y \\<cdot> x = d y \\<cdot> x\n  y = d y \\<cdot> x\n  x = d x \\<cdot> d y \\<cdot> x\n\ngoal (1 subgoal):\n 1. x = y", "by presburger"], ["proof (state)\nthis:\n  x = y\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>This relation is indeed an order.\\<close>"], ["", "sublocale  ds: order \"(\\<sqsubseteq>)\" \"\\<lambda>x y. (x \\<sqsubseteq> y \\<and> x \\<noteq> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. class.order (\\<sqsubseteq>)\n     (\\<lambda>x y. x \\<sqsubseteq> y \\<and> x \\<noteq> y)", "proof"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x y.\n       (x \\<sqsubseteq> y \\<and> x \\<noteq> y) =\n       (x \\<sqsubseteq> y \\<and> \\<not> y \\<sqsubseteq> x)\n 2. \\<And>x. x \\<sqsubseteq> x\n 3. \\<And>x y z.\n       \\<lbrakk>x \\<sqsubseteq> y; y \\<sqsubseteq> z\\<rbrakk>\n       \\<Longrightarrow> x \\<sqsubseteq> z\n 4. \\<And>x y.\n       \\<lbrakk>x \\<sqsubseteq> y; y \\<sqsubseteq> x\\<rbrakk>\n       \\<Longrightarrow> x = y", "show \"\\<And>x y. (x \\<sqsubseteq> y \\<and> x \\<noteq> y) = (x \\<sqsubseteq> y \\<and> \\<not> y \\<sqsubseteq> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       (x \\<sqsubseteq> y \\<and> x \\<noteq> y) =\n       (x \\<sqsubseteq> y \\<and> \\<not> y \\<sqsubseteq> x)", "using ds_ord_antisym"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<sqsubseteq> ?y; ?y \\<sqsubseteq> ?x\\<rbrakk>\n  \\<Longrightarrow> ?x = ?y\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       (x \\<sqsubseteq> y \\<and> x \\<noteq> y) =\n       (x \\<sqsubseteq> y \\<and> \\<not> y \\<sqsubseteq> x)", "by blast"], ["proof (state)\nthis:\n  (?x \\<sqsubseteq> ?y \\<and> ?x \\<noteq> ?y) =\n  (?x \\<sqsubseteq> ?y \\<and> \\<not> ?y \\<sqsubseteq> ?x)\n\ngoal (3 subgoals):\n 1. \\<And>x. x \\<sqsubseteq> x\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<sqsubseteq> y; y \\<sqsubseteq> z\\<rbrakk>\n       \\<Longrightarrow> x \\<sqsubseteq> z\n 3. \\<And>x y.\n       \\<lbrakk>x \\<sqsubseteq> y; y \\<sqsubseteq> x\\<rbrakk>\n       \\<Longrightarrow> x = y", "show \"\\<And>x. x \\<sqsubseteq> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<sqsubseteq> x", "by (rule ds_ord_refl)"], ["proof (state)\nthis:\n  ?x \\<sqsubseteq> ?x\n\ngoal (2 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<sqsubseteq> y; y \\<sqsubseteq> z\\<rbrakk>\n       \\<Longrightarrow> x \\<sqsubseteq> z\n 2. \\<And>x y.\n       \\<lbrakk>x \\<sqsubseteq> y; y \\<sqsubseteq> x\\<rbrakk>\n       \\<Longrightarrow> x = y", "show \"\\<And>x y z. x \\<sqsubseteq> y \\<Longrightarrow> y \\<sqsubseteq> z \\<Longrightarrow> x \\<sqsubseteq> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<sqsubseteq> y; y \\<sqsubseteq> z\\<rbrakk>\n       \\<Longrightarrow> x \\<sqsubseteq> z", "by (rule ds_ord_trans)"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<sqsubseteq> ?y; ?y \\<sqsubseteq> ?z\\<rbrakk>\n  \\<Longrightarrow> ?x \\<sqsubseteq> ?z\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<sqsubseteq> y; y \\<sqsubseteq> x\\<rbrakk>\n       \\<Longrightarrow> x = y", "show \"\\<And>x y. x \\<sqsubseteq> y \\<Longrightarrow> y \\<sqsubseteq> x \\<Longrightarrow> x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<sqsubseteq> y; y \\<sqsubseteq> x\\<rbrakk>\n       \\<Longrightarrow> x = y", "by (rule ds_ord_antisym)"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<sqsubseteq> ?y; ?y \\<sqsubseteq> ?x\\<rbrakk>\n  \\<Longrightarrow> ?x = ?y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ds_ord_eq: \"x \\<sqsubseteq> d x \\<longleftrightarrow> x = d x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<sqsubseteq> d x) = (x = d x)", "by (simp add: ds_ord_def)"], ["", "lemma \"x \\<sqsubseteq> y \\<Longrightarrow> z \\<cdot> x \\<sqsubseteq> z \\<cdot> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sqsubseteq> y \\<Longrightarrow>\n    z \\<cdot> x \\<sqsubseteq> z \\<cdot> y", "(*nitpick [expect=genuine]*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sqsubseteq> y \\<Longrightarrow>\n    z \\<cdot> x \\<sqsubseteq> z \\<cdot> y", "oops"], ["", "lemma ds_ord_iso_right: \"x \\<sqsubseteq> y \\<Longrightarrow> x \\<cdot> z \\<sqsubseteq> y \\<cdot> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sqsubseteq> y \\<Longrightarrow>\n    x \\<cdot> z \\<sqsubseteq> y \\<cdot> z", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<sqsubseteq> y \\<Longrightarrow>\n    x \\<cdot> z \\<sqsubseteq> y \\<cdot> z", "assume \"x \\<sqsubseteq> y\""], ["proof (state)\nthis:\n  x \\<sqsubseteq> y\n\ngoal (1 subgoal):\n 1. x \\<sqsubseteq> y \\<Longrightarrow>\n    x \\<cdot> z \\<sqsubseteq> y \\<cdot> z", "hence a: \"x = d x \\<cdot> y\""], ["proof (prove)\nusing this:\n  x \\<sqsubseteq> y\n\ngoal (1 subgoal):\n 1. x = d x \\<cdot> y", "by (simp add: ds_ord_def)"], ["proof (state)\nthis:\n  x = d x \\<cdot> y\n\ngoal (1 subgoal):\n 1. x \\<sqsubseteq> y \\<Longrightarrow>\n    x \\<cdot> z \\<sqsubseteq> y \\<cdot> z", "hence \"x \\<cdot> z = d x \\<cdot> y \\<cdot> z\""], ["proof (prove)\nusing this:\n  x = d x \\<cdot> y\n\ngoal (1 subgoal):\n 1. x \\<cdot> z = d x \\<cdot> y \\<cdot> z", "by auto"], ["proof (state)\nthis:\n  x \\<cdot> z = d x \\<cdot> y \\<cdot> z\n\ngoal (1 subgoal):\n 1. x \\<sqsubseteq> y \\<Longrightarrow>\n    x \\<cdot> z \\<sqsubseteq> y \\<cdot> z", "also"], ["proof (state)\nthis:\n  x \\<cdot> z = d x \\<cdot> y \\<cdot> z\n\ngoal (1 subgoal):\n 1. x \\<sqsubseteq> y \\<Longrightarrow>\n    x \\<cdot> z \\<sqsubseteq> y \\<cdot> z", "have \"... = d (d x \\<cdot> y \\<cdot> z) \\<cdot> d x \\<cdot> y \\<cdot> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d x \\<cdot> y \\<cdot> z =\n    d (d x \\<cdot> y \\<cdot> z) \\<cdot> d x \\<cdot> y \\<cdot> z", "using dsg1 mult_assoc"], ["proof (prove)\nusing this:\n  d ?x \\<cdot> ?x = ?x\n  ?a \\<cdot> ?b \\<cdot> ?c = ?a \\<cdot> (?b \\<cdot> ?c)\n\ngoal (1 subgoal):\n 1. d x \\<cdot> y \\<cdot> z =\n    d (d x \\<cdot> y \\<cdot> z) \\<cdot> d x \\<cdot> y \\<cdot> z", "by presburger"], ["proof (state)\nthis:\n  d x \\<cdot> y \\<cdot> z =\n  d (d x \\<cdot> y \\<cdot> z) \\<cdot> d x \\<cdot> y \\<cdot> z\n\ngoal (1 subgoal):\n 1. x \\<sqsubseteq> y \\<Longrightarrow>\n    x \\<cdot> z \\<sqsubseteq> y \\<cdot> z", "also"], ["proof (state)\nthis:\n  d x \\<cdot> y \\<cdot> z =\n  d (d x \\<cdot> y \\<cdot> z) \\<cdot> d x \\<cdot> y \\<cdot> z\n\ngoal (1 subgoal):\n 1. x \\<sqsubseteq> y \\<Longrightarrow>\n    x \\<cdot> z \\<sqsubseteq> y \\<cdot> z", "have \"... = d (x \\<cdot> z) \\<cdot> d x \\<cdot> y \\<cdot> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d (d x \\<cdot> y \\<cdot> z) \\<cdot> d x \\<cdot> y \\<cdot> z =\n    d (x \\<cdot> z) \\<cdot> d x \\<cdot> y \\<cdot> z", "using a"], ["proof (prove)\nusing this:\n  x = d x \\<cdot> y\n\ngoal (1 subgoal):\n 1. d (d x \\<cdot> y \\<cdot> z) \\<cdot> d x \\<cdot> y \\<cdot> z =\n    d (x \\<cdot> z) \\<cdot> d x \\<cdot> y \\<cdot> z", "by presburger"], ["proof (state)\nthis:\n  d (d x \\<cdot> y \\<cdot> z) \\<cdot> d x \\<cdot> y \\<cdot> z =\n  d (x \\<cdot> z) \\<cdot> d x \\<cdot> y \\<cdot> z\n\ngoal (1 subgoal):\n 1. x \\<sqsubseteq> y \\<Longrightarrow>\n    x \\<cdot> z \\<sqsubseteq> y \\<cdot> z", "finally"], ["proof (chain)\npicking this:\n  x \\<cdot> z = d (x \\<cdot> z) \\<cdot> d x \\<cdot> y \\<cdot> z", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<cdot> z = d (x \\<cdot> z) \\<cdot> d x \\<cdot> y \\<cdot> z\n\ngoal (1 subgoal):\n 1. x \\<cdot> z \\<sqsubseteq> y \\<cdot> z", "using ds_ord_def dsg4 mult_assoc"], ["proof (prove)\nusing this:\n  x \\<cdot> z = d (x \\<cdot> z) \\<cdot> d x \\<cdot> y \\<cdot> z\n  (?x \\<sqsubseteq> ?y) = (?x = d ?x \\<cdot> ?y)\n  d ?x \\<cdot> d ?y = d ?y \\<cdot> d ?x\n  ?a \\<cdot> ?b \\<cdot> ?c = ?a \\<cdot> (?b \\<cdot> ?c)\n\ngoal (1 subgoal):\n 1. x \\<cdot> z \\<sqsubseteq> y \\<cdot> z", "by auto"], ["proof (state)\nthis:\n  x \\<cdot> z \\<sqsubseteq> y \\<cdot> z\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The order on domain elements could as well be defined based on multiplication/meet.\\<close>"], ["", "lemma ds_ord_sl_ord: \"d x \\<sqsubseteq> d y \\<longleftrightarrow> d x \\<cdot> d y = d x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (d x \\<sqsubseteq> d y) = (d x \\<cdot> d y = d x)", "using ds_ord_def"], ["proof (prove)\nusing this:\n  (?x \\<sqsubseteq> ?y) = (?x = d ?x \\<cdot> ?y)\n\ngoal (1 subgoal):\n 1. (d x \\<sqsubseteq> d y) = (d x \\<cdot> d y = d x)", "by auto"], ["", "lemma ds_ord_1: \"d (x \\<cdot> y) \\<sqsubseteq> d x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d (x \\<cdot> y) \\<sqsubseteq> d x", "by (simp add: ds_ord_sl_ord dsg4)"], ["", "lemma ds_subid_aux: \"d x \\<cdot> y \\<sqsubseteq> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d x \\<cdot> y \\<sqsubseteq> y", "by (simp add: ds_ord_def mult_assoc)"], ["", "lemma \"y \\<cdot> d x \\<sqsubseteq> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<cdot> d x \\<sqsubseteq> y", "(*nitpick [expect=genuine]*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<cdot> d x \\<sqsubseteq> y", "oops"], ["", "lemma ds_dom_iso: \"x \\<sqsubseteq> y \\<Longrightarrow> d x \\<sqsubseteq> d y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sqsubseteq> y \\<Longrightarrow> d x \\<sqsubseteq> d y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<sqsubseteq> y \\<Longrightarrow> d x \\<sqsubseteq> d y", "assume \"x \\<sqsubseteq> y\""], ["proof (state)\nthis:\n  x \\<sqsubseteq> y\n\ngoal (1 subgoal):\n 1. x \\<sqsubseteq> y \\<Longrightarrow> d x \\<sqsubseteq> d y", "hence \"x = d x \\<cdot> y\""], ["proof (prove)\nusing this:\n  x \\<sqsubseteq> y\n\ngoal (1 subgoal):\n 1. x = d x \\<cdot> y", "by (simp add: ds_ord_def)"], ["proof (state)\nthis:\n  x = d x \\<cdot> y\n\ngoal (1 subgoal):\n 1. x \\<sqsubseteq> y \\<Longrightarrow> d x \\<sqsubseteq> d y", "hence \"d x = d (d x \\<cdot> y)\""], ["proof (prove)\nusing this:\n  x = d x \\<cdot> y\n\ngoal (1 subgoal):\n 1. d x = d (d x \\<cdot> y)", "by presburger"], ["proof (state)\nthis:\n  d x = d (d x \\<cdot> y)\n\ngoal (1 subgoal):\n 1. x \\<sqsubseteq> y \\<Longrightarrow> d x \\<sqsubseteq> d y", "also"], ["proof (state)\nthis:\n  d x = d (d x \\<cdot> y)\n\ngoal (1 subgoal):\n 1. x \\<sqsubseteq> y \\<Longrightarrow> d x \\<sqsubseteq> d y", "have \"... = d x \\<cdot> d y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d (d x \\<cdot> y) = d x \\<cdot> d y", "by simp"], ["proof (state)\nthis:\n  d (d x \\<cdot> y) = d x \\<cdot> d y\n\ngoal (1 subgoal):\n 1. x \\<sqsubseteq> y \\<Longrightarrow> d x \\<sqsubseteq> d y", "finally"], ["proof (chain)\npicking this:\n  d x = d x \\<cdot> d y", "show ?thesis"], ["proof (prove)\nusing this:\n  d x = d x \\<cdot> d y\n\ngoal (1 subgoal):\n 1. d x \\<sqsubseteq> d y", "using ds_ord_sl_ord"], ["proof (prove)\nusing this:\n  d x = d x \\<cdot> d y\n  (d ?x \\<sqsubseteq> d ?y) = (d ?x \\<cdot> d ?y = d ?x)\n\ngoal (1 subgoal):\n 1. d x \\<sqsubseteq> d y", "by auto"], ["proof (state)\nthis:\n  d x \\<sqsubseteq> d y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ds_dom_llp: \"x \\<sqsubseteq> d y \\<cdot> x \\<longleftrightarrow> d x \\<sqsubseteq> d y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<sqsubseteq> d y \\<cdot> x) = (d x \\<sqsubseteq> d y)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<sqsubseteq> d y \\<cdot> x \\<Longrightarrow> d x \\<sqsubseteq> d y\n 2. d x \\<sqsubseteq> d y \\<Longrightarrow> x \\<sqsubseteq> d y \\<cdot> x", "assume \"x \\<sqsubseteq> d y \\<cdot> x\""], ["proof (state)\nthis:\n  x \\<sqsubseteq> d y \\<cdot> x\n\ngoal (2 subgoals):\n 1. x \\<sqsubseteq> d y \\<cdot> x \\<Longrightarrow> d x \\<sqsubseteq> d y\n 2. d x \\<sqsubseteq> d y \\<Longrightarrow> x \\<sqsubseteq> d y \\<cdot> x", "hence \"x = d y \\<cdot> x\""], ["proof (prove)\nusing this:\n  x \\<sqsubseteq> d y \\<cdot> x\n\ngoal (1 subgoal):\n 1. x = d y \\<cdot> x", "by (simp add: ds_subid_aux ds.order.antisym)"], ["proof (state)\nthis:\n  x = d y \\<cdot> x\n\ngoal (2 subgoals):\n 1. x \\<sqsubseteq> d y \\<cdot> x \\<Longrightarrow> d x \\<sqsubseteq> d y\n 2. d x \\<sqsubseteq> d y \\<Longrightarrow> x \\<sqsubseteq> d y \\<cdot> x", "hence \"d x = d (d y \\<cdot> x)\""], ["proof (prove)\nusing this:\n  x = d y \\<cdot> x\n\ngoal (1 subgoal):\n 1. d x = d (d y \\<cdot> x)", "by presburger"], ["proof (state)\nthis:\n  d x = d (d y \\<cdot> x)\n\ngoal (2 subgoals):\n 1. x \\<sqsubseteq> d y \\<cdot> x \\<Longrightarrow> d x \\<sqsubseteq> d y\n 2. d x \\<sqsubseteq> d y \\<Longrightarrow> x \\<sqsubseteq> d y \\<cdot> x", "thus \"d x \\<sqsubseteq> d y\""], ["proof (prove)\nusing this:\n  d x = d (d y \\<cdot> x)\n\ngoal (1 subgoal):\n 1. d x \\<sqsubseteq> d y", "using ds_ord_sl_ord dsg4"], ["proof (prove)\nusing this:\n  d x = d (d y \\<cdot> x)\n  (d ?x \\<sqsubseteq> d ?y) = (d ?x \\<cdot> d ?y = d ?x)\n  d ?x \\<cdot> d ?y = d ?y \\<cdot> d ?x\n\ngoal (1 subgoal):\n 1. d x \\<sqsubseteq> d y", "by force"], ["proof (state)\nthis:\n  d x \\<sqsubseteq> d y\n\ngoal (1 subgoal):\n 1. d x \\<sqsubseteq> d y \\<Longrightarrow> x \\<sqsubseteq> d y \\<cdot> x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. d x \\<sqsubseteq> d y \\<Longrightarrow> x \\<sqsubseteq> d y \\<cdot> x", "assume \"d x \\<sqsubseteq> d y\""], ["proof (state)\nthis:\n  d x \\<sqsubseteq> d y\n\ngoal (1 subgoal):\n 1. d x \\<sqsubseteq> d y \\<Longrightarrow> x \\<sqsubseteq> d y \\<cdot> x", "thus \"x \\<sqsubseteq> d y \\<cdot> x\""], ["proof (prove)\nusing this:\n  d x \\<sqsubseteq> d y\n\ngoal (1 subgoal):\n 1. x \\<sqsubseteq> d y \\<cdot> x", "by (metis (no_types) ds_ord_iso_right dsg1)"], ["proof (state)\nthis:\n  x \\<sqsubseteq> d y \\<cdot> x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ds_dom_llp_strong: \"x = d y \\<cdot> x \\<longleftrightarrow> d x \\<sqsubseteq> d y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x = d y \\<cdot> x) = (d x \\<sqsubseteq> d y)", "by (simp add: ds_dom_llp ds.eq_iff ds_subid_aux)"], ["", "definition refines :: \"'a \\<Rightarrow> 'a \\<Rightarrow> bool\"\n  where \"refines x y \\<equiv> d y \\<sqsubseteq> d x \\<and> (d y) \\<cdot> x \\<sqsubseteq> y\""], ["", "lemma refines_refl: \"refines x x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. refines x x", "using refines_def"], ["proof (prove)\nusing this:\n  refines ?x ?y \\<equiv>\n  d ?y \\<sqsubseteq> d ?x \\<and> d ?y \\<cdot> ?x \\<sqsubseteq> ?y\n\ngoal (1 subgoal):\n 1. refines x x", "by simp"], ["", "lemma refines_trans: \"refines x y \\<Longrightarrow> refines y z \\<Longrightarrow> refines x z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>refines x y; refines y z\\<rbrakk> \\<Longrightarrow> refines x z", "unfolding refines_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d y \\<sqsubseteq> d x \\<and> d y \\<cdot> x \\<sqsubseteq> y;\n     d z \\<sqsubseteq> d y \\<and> d z \\<cdot> y \\<sqsubseteq> z\\<rbrakk>\n    \\<Longrightarrow> d z \\<sqsubseteq> d x \\<and>\n                      d z \\<cdot> x \\<sqsubseteq> z", "by (metis domain_invol ds.dual_order.trans dsg1 dsg3 ds_ord_def)"], ["", "lemma refines_antisym: \"refines x y \\<Longrightarrow> refines y x \\<Longrightarrow> x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>refines x y; refines y x\\<rbrakk> \\<Longrightarrow> x = y", "unfolding refines_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d y \\<sqsubseteq> d x \\<and> d y \\<cdot> x \\<sqsubseteq> y;\n     d x \\<sqsubseteq> d y \\<and> d x \\<cdot> y \\<sqsubseteq> x\\<rbrakk>\n    \\<Longrightarrow> x = y", "using ds_dom_llp ds_ord_antisym"], ["proof (prove)\nusing this:\n  (?x \\<sqsubseteq> d ?y \\<cdot> ?x) = (d ?x \\<sqsubseteq> d ?y)\n  \\<lbrakk>?x \\<sqsubseteq> ?y; ?y \\<sqsubseteq> ?x\\<rbrakk>\n  \\<Longrightarrow> ?x = ?y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>d y \\<sqsubseteq> d x \\<and> d y \\<cdot> x \\<sqsubseteq> y;\n     d x \\<sqsubseteq> d y \\<and> d x \\<cdot> y \\<sqsubseteq> x\\<rbrakk>\n    \\<Longrightarrow> x = y", "by fastforce"], ["", "sublocale ref: order \"refines\" \"\\<lambda>x y. (refines x y \\<and> x \\<noteq> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. class.order refines (\\<lambda>x y. refines x y \\<and> x \\<noteq> y)", "proof"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x y.\n       (refines x y \\<and> x \\<noteq> y) =\n       (refines x y \\<and> \\<not> refines y x)\n 2. \\<And>x. refines x x\n 3. \\<And>x y z.\n       \\<lbrakk>refines x y; refines y z\\<rbrakk>\n       \\<Longrightarrow> refines x z\n 4. \\<And>x y.\n       \\<lbrakk>refines x y; refines y x\\<rbrakk> \\<Longrightarrow> x = y", "show \"\\<And>x y. (refines x y \\<and> x \\<noteq> y) = (refines x y \\<and> \\<not> refines y x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       (refines x y \\<and> x \\<noteq> y) =\n       (refines x y \\<and> \\<not> refines y x)", "using refines_antisym"], ["proof (prove)\nusing this:\n  \\<lbrakk>refines ?x ?y; refines ?y ?x\\<rbrakk> \\<Longrightarrow> ?x = ?y\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       (refines x y \\<and> x \\<noteq> y) =\n       (refines x y \\<and> \\<not> refines y x)", "by blast"], ["proof (state)\nthis:\n  (refines ?x1 ?y1 \\<and> ?x1 \\<noteq> ?y1) =\n  (refines ?x1 ?y1 \\<and> \\<not> refines ?y1 ?x1)\n\ngoal (3 subgoals):\n 1. \\<And>x. refines x x\n 2. \\<And>x y z.\n       \\<lbrakk>refines x y; refines y z\\<rbrakk>\n       \\<Longrightarrow> refines x z\n 3. \\<And>x y.\n       \\<lbrakk>refines x y; refines y x\\<rbrakk> \\<Longrightarrow> x = y", "show \"\\<And>x. refines x x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. refines x x", "by (rule refines_refl)"], ["proof (state)\nthis:\n  refines ?x1 ?x1\n\ngoal (2 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>refines x y; refines y z\\<rbrakk>\n       \\<Longrightarrow> refines x z\n 2. \\<And>x y.\n       \\<lbrakk>refines x y; refines y x\\<rbrakk> \\<Longrightarrow> x = y", "show \"\\<And>x y z. refines x y \\<Longrightarrow> refines y z \\<Longrightarrow> refines x z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>refines x y; refines y z\\<rbrakk>\n       \\<Longrightarrow> refines x z", "by (rule refines_trans)"], ["proof (state)\nthis:\n  \\<lbrakk>refines ?x1 ?y1; refines ?y1 ?z1\\<rbrakk>\n  \\<Longrightarrow> refines ?x1 ?z1\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>refines x y; refines y x\\<rbrakk> \\<Longrightarrow> x = y", "show \"\\<And>x y. refines x y \\<Longrightarrow> refines y x \\<Longrightarrow> x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>refines x y; refines y x\\<rbrakk> \\<Longrightarrow> x = y", "by (rule refines_antisym)"], ["proof (state)\nthis:\n  \\<lbrakk>refines ?x1 ?y1; refines ?y1 ?x1\\<rbrakk>\n  \\<Longrightarrow> ?x1 = ?y1\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "text \\<open>We expand domain semigroups to domain monoids.\\<close>"], ["", "class domain_monoid = monoid_mult + domain_semigroup\nbegin"], ["", "lemma dom_one [simp]: \"d 1 = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d (1::'a) = (1::'a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. d (1::'a) = (1::'a)", "have \"1 = d 1 \\<cdot> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1::'a) = d (1::'a) \\<cdot> (1::'a)", "using dsg1"], ["proof (prove)\nusing this:\n  d ?x \\<cdot> ?x = ?x\n\ngoal (1 subgoal):\n 1. (1::'a) = d (1::'a) \\<cdot> (1::'a)", "by presburger"], ["proof (state)\nthis:\n  (1::'a) = d (1::'a) \\<cdot> (1::'a)\n\ngoal (1 subgoal):\n 1. d (1::'a) = (1::'a)", "thus ?thesis"], ["proof (prove)\nusing this:\n  (1::'a) = d (1::'a) \\<cdot> (1::'a)\n\ngoal (1 subgoal):\n 1. d (1::'a) = (1::'a)", "by simp"], ["proof (state)\nthis:\n  d (1::'a) = (1::'a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ds_subid_eq: \"x \\<sqsubseteq> 1 \\<longleftrightarrow> x = d x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<sqsubseteq> (1::'a)) = (x = d x)", "by (simp add: ds_ord_def)"], ["", "end"], ["", "subsection \\<open>Domain Near-Semirings\\<close>"], ["", "text \\<open>The axioms for domain near-semirings are taken from~\\cite{DesharnaisStruthAMAST}.\\<close>"], ["", "class domain_near_semiring = ab_near_semiring + plus_ord + domain_op +\n  assumes dns1 [simp]: \"d x \\<cdot> x = x\"\n  and dns2 [simp]: \"d (x \\<cdot> d y) = d(x \\<cdot> y)\"\n  and dns3 [simp]: \"d (x + y) = d x + d y\"\n  and dns4: \"d x \\<cdot> d y = d y \\<cdot> d x\"\n  and dns5 [simp]: \"d x \\<cdot> (d x + d y) = d x\"\n\nbegin"], ["", "text \\<open>Domain near-semirings are automatically dioids; addition is idempotent.\\<close>"], ["", "subclass near_dioid"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.near_dioid (+) (\\<cdot>) (\\<le>) (<)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x + x = x", "show \"\\<And>x. x + x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. x + x = x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x + x = x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x + x = x", "have a: \"d x = d x \\<cdot> d (x + x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d x = d x \\<cdot> d (x + x)", "using dns3 dns5"], ["proof (prove)\nusing this:\n  d (?x + ?y) = d ?x + d ?y\n  d ?x \\<cdot> (d ?x + d ?y) = d ?x\n\ngoal (1 subgoal):\n 1. d x = d x \\<cdot> d (x + x)", "by presburger"], ["proof (state)\nthis:\n  d x = d x \\<cdot> d (x + x)\n\ngoal (1 subgoal):\n 1. \\<And>x. x + x = x", "have \"d (x + x) = d (x + x + (x + x)) \\<cdot> d (x + x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d (x + x) = d (x + x + (x + x)) \\<cdot> d (x + x)", "by (metis (no_types) dns3  dns4 dns5)"], ["proof (state)\nthis:\n  d (x + x) = d (x + x + (x + x)) \\<cdot> d (x + x)\n\ngoal (1 subgoal):\n 1. \\<And>x. x + x = x", "hence \"d (x + x) = d (x + x) + d (x + x)\""], ["proof (prove)\nusing this:\n  d (x + x) = d (x + x + (x + x)) \\<cdot> d (x + x)\n\ngoal (1 subgoal):\n 1. d (x + x) = d (x + x) + d (x + x)", "by simp"], ["proof (state)\nthis:\n  d (x + x) = d (x + x) + d (x + x)\n\ngoal (1 subgoal):\n 1. \\<And>x. x + x = x", "thus \"x + x = x\""], ["proof (prove)\nusing this:\n  d (x + x) = d (x + x) + d (x + x)\n\ngoal (1 subgoal):\n 1. x + x = x", "by (metis a dns1 dns4 distrib_right')"], ["proof (state)\nthis:\n  x + x = x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x + ?x = ?x\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Next we prepare to show that domain near-semirings are domain semigroups.\\<close>"], ["", "lemma dom_iso: \"x \\<le> y \\<Longrightarrow> d x \\<le> d y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow> d x \\<le> d y", "using order_prop"], ["proof (prove)\nusing this:\n  (?x \\<le> ?y) = (\\<exists>z. ?x + z = ?y)\n\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow> d x \\<le> d y", "by auto"], ["", "lemma dom_add_closed [simp]: \"d (d x + d y) = d x + d y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d (d x + d y) = d x + d y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. d (d x + d y) = d x + d y", "have \"d (d x + d y) = d (d x) + d (d y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d (d x + d y) = d (d x) + d (d y)", "by simp"], ["proof (state)\nthis:\n  d (d x + d y) = d (d x) + d (d y)\n\ngoal (1 subgoal):\n 1. d (d x + d y) = d x + d y", "thus ?thesis"], ["proof (prove)\nusing this:\n  d (d x + d y) = d (d x) + d (d y)\n\ngoal (1 subgoal):\n 1. d (d x + d y) = d x + d y", "by (metis dns1 dns2 dns3 dns4)"], ["proof (state)\nthis:\n  d (d x + d y) = d x + d y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dom_absorp_2 [simp]: \"d x + d x \\<cdot> d y = d x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d x + d x \\<cdot> d y = d x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. d x + d x \\<cdot> d y = d x", "have \"d x + d x \\<cdot> d y = d x \\<cdot> d x + d x \\<cdot> d y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d x + d x \\<cdot> d y = d x \\<cdot> d x + d x \\<cdot> d y", "by (metis add_idem' dns5)"], ["proof (state)\nthis:\n  d x + d x \\<cdot> d y = d x \\<cdot> d x + d x \\<cdot> d y\n\ngoal (1 subgoal):\n 1. d x + d x \\<cdot> d y = d x", "also"], ["proof (state)\nthis:\n  d x + d x \\<cdot> d y = d x \\<cdot> d x + d x \\<cdot> d y\n\ngoal (1 subgoal):\n 1. d x + d x \\<cdot> d y = d x", "have \"... = (d x + d y) \\<cdot> d x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d x \\<cdot> d x + d x \\<cdot> d y = (d x + d y) \\<cdot> d x", "by (simp add: dns4)"], ["proof (state)\nthis:\n  d x \\<cdot> d x + d x \\<cdot> d y = (d x + d y) \\<cdot> d x\n\ngoal (1 subgoal):\n 1. d x + d x \\<cdot> d y = d x", "also"], ["proof (state)\nthis:\n  d x \\<cdot> d x + d x \\<cdot> d y = (d x + d y) \\<cdot> d x\n\ngoal (1 subgoal):\n 1. d x + d x \\<cdot> d y = d x", "have \"... = d x \\<cdot> (d x + d y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (d x + d y) \\<cdot> d x = d x \\<cdot> (d x + d y)", "by (metis dom_add_closed dns4)"], ["proof (state)\nthis:\n  (d x + d y) \\<cdot> d x = d x \\<cdot> (d x + d y)\n\ngoal (1 subgoal):\n 1. d x + d x \\<cdot> d y = d x", "finally"], ["proof (chain)\npicking this:\n  d x + d x \\<cdot> d y = d x \\<cdot> (d x + d y)", "show ?thesis"], ["proof (prove)\nusing this:\n  d x + d x \\<cdot> d y = d x \\<cdot> (d x + d y)\n\ngoal (1 subgoal):\n 1. d x + d x \\<cdot> d y = d x", "by simp"], ["proof (state)\nthis:\n  d x + d x \\<cdot> d y = d x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dom_1: \"d (x \\<cdot> y) \\<le> d x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d (x \\<cdot> y) \\<le> d x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. d (x \\<cdot> y) \\<le> d x", "have \"d (x \\<cdot> y) = d (d x \\<cdot> d (x \\<cdot> y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d (x \\<cdot> y) = d (d x \\<cdot> d (x \\<cdot> y))", "by (metis dns1 dns2 mult_assoc)"], ["proof (state)\nthis:\n  d (x \\<cdot> y) = d (d x \\<cdot> d (x \\<cdot> y))\n\ngoal (1 subgoal):\n 1. d (x \\<cdot> y) \\<le> d x", "also"], ["proof (state)\nthis:\n  d (x \\<cdot> y) = d (d x \\<cdot> d (x \\<cdot> y))\n\ngoal (1 subgoal):\n 1. d (x \\<cdot> y) \\<le> d x", "have \"... \\<le> d (d x) + d (d x \\<cdot> d (x \\<cdot> y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d (d x \\<cdot> d (x \\<cdot> y))\n    \\<le> d (d x) + d (d x \\<cdot> d (x \\<cdot> y))", "by simp"], ["proof (state)\nthis:\n  d (d x \\<cdot> d (x \\<cdot> y))\n  \\<le> d (d x) + d (d x \\<cdot> d (x \\<cdot> y))\n\ngoal (1 subgoal):\n 1. d (x \\<cdot> y) \\<le> d x", "also"], ["proof (state)\nthis:\n  d (d x \\<cdot> d (x \\<cdot> y))\n  \\<le> d (d x) + d (d x \\<cdot> d (x \\<cdot> y))\n\ngoal (1 subgoal):\n 1. d (x \\<cdot> y) \\<le> d x", "have \"... = d (d x + d x \\<cdot> d (x \\<cdot> y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d (d x) + d (d x \\<cdot> d (x \\<cdot> y)) =\n    d (d x + d x \\<cdot> d (x \\<cdot> y))", "using dns3"], ["proof (prove)\nusing this:\n  d (?x + ?y) = d ?x + d ?y\n\ngoal (1 subgoal):\n 1. d (d x) + d (d x \\<cdot> d (x \\<cdot> y)) =\n    d (d x + d x \\<cdot> d (x \\<cdot> y))", "by presburger"], ["proof (state)\nthis:\n  d (d x) + d (d x \\<cdot> d (x \\<cdot> y)) =\n  d (d x + d x \\<cdot> d (x \\<cdot> y))\n\ngoal (1 subgoal):\n 1. d (x \\<cdot> y) \\<le> d x", "also"], ["proof (state)\nthis:\n  d (d x) + d (d x \\<cdot> d (x \\<cdot> y)) =\n  d (d x + d x \\<cdot> d (x \\<cdot> y))\n\ngoal (1 subgoal):\n 1. d (x \\<cdot> y) \\<le> d x", "have \"... = d (d x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d (d x + d x \\<cdot> d (x \\<cdot> y)) = d (d x)", "by simp"], ["proof (state)\nthis:\n  d (d x + d x \\<cdot> d (x \\<cdot> y)) = d (d x)\n\ngoal (1 subgoal):\n 1. d (x \\<cdot> y) \\<le> d x", "finally"], ["proof (chain)\npicking this:\n  d (x \\<cdot> y) \\<le> d (d x)", "show ?thesis"], ["proof (prove)\nusing this:\n  d (x \\<cdot> y) \\<le> d (d x)\n\ngoal (1 subgoal):\n 1. d (x \\<cdot> y) \\<le> d x", "by (metis dom_add_closed add_idem')"], ["proof (state)\nthis:\n  d (x \\<cdot> y) \\<le> d x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dom_subid_aux2: \"d x \\<cdot> y \\<le> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d x \\<cdot> y \\<le> y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. d x \\<cdot> y \\<le> y", "have \"d x \\<cdot> y \\<le> d (x + d y) \\<cdot> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d x \\<cdot> y \\<le> d (x + d y) \\<cdot> y", "by (simp add: mult_isor)"], ["proof (state)\nthis:\n  d x \\<cdot> y \\<le> d (x + d y) \\<cdot> y\n\ngoal (1 subgoal):\n 1. d x \\<cdot> y \\<le> y", "also"], ["proof (state)\nthis:\n  d x \\<cdot> y \\<le> d (x + d y) \\<cdot> y\n\ngoal (1 subgoal):\n 1. d x \\<cdot> y \\<le> y", "have \"... = (d x + d (d y)) \\<cdot> d y \\<cdot> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d (x + d y) \\<cdot> y = (d x + d (d y)) \\<cdot> d y \\<cdot> y", "using dns1 dns3 mult_assoc"], ["proof (prove)\nusing this:\n  d ?x \\<cdot> ?x = ?x\n  d (?x + ?y) = d ?x + d ?y\n  ?a \\<cdot> ?b \\<cdot> ?c = ?a \\<cdot> (?b \\<cdot> ?c)\n\ngoal (1 subgoal):\n 1. d (x + d y) \\<cdot> y = (d x + d (d y)) \\<cdot> d y \\<cdot> y", "by presburger"], ["proof (state)\nthis:\n  d (x + d y) \\<cdot> y = (d x + d (d y)) \\<cdot> d y \\<cdot> y\n\ngoal (1 subgoal):\n 1. d x \\<cdot> y \\<le> y", "also"], ["proof (state)\nthis:\n  d (x + d y) \\<cdot> y = (d x + d (d y)) \\<cdot> d y \\<cdot> y\n\ngoal (1 subgoal):\n 1. d x \\<cdot> y \\<le> y", "have \"... = (d y + d y \\<cdot> d x) \\<cdot> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (d x + d (d y)) \\<cdot> d y \\<cdot> y =\n    (d y + d y \\<cdot> d x) \\<cdot> y", "by (simp add: dns4 add_commute)"], ["proof (state)\nthis:\n  (d x + d (d y)) \\<cdot> d y \\<cdot> y = (d y + d y \\<cdot> d x) \\<cdot> y\n\ngoal (1 subgoal):\n 1. d x \\<cdot> y \\<le> y", "finally"], ["proof (chain)\npicking this:\n  d x \\<cdot> y \\<le> (d y + d y \\<cdot> d x) \\<cdot> y", "show ?thesis"], ["proof (prove)\nusing this:\n  d x \\<cdot> y \\<le> (d y + d y \\<cdot> d x) \\<cdot> y\n\ngoal (1 subgoal):\n 1. d x \\<cdot> y \\<le> y", "by simp"], ["proof (state)\nthis:\n  d x \\<cdot> y \\<le> y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dom_glb: \"d x \\<le> d y \\<Longrightarrow> d x \\<le> d z \\<Longrightarrow> d x \\<le> d y \\<cdot> d z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>d x \\<le> d y; d x \\<le> d z\\<rbrakk>\n    \\<Longrightarrow> d x \\<le> d y \\<cdot> d z", "by (metis dns5 less_eq_def mult_isor)"], ["", "lemma dom_glb_eq: \"d x \\<le> d y \\<cdot> d z \\<longleftrightarrow> d x \\<le> d y \\<and> d x \\<le> d z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (d x \\<le> d y \\<cdot> d z) = (d x \\<le> d y \\<and> d x \\<le> d z)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (d x \\<le> d y \\<cdot> d z) = (d x \\<le> d y \\<and> d x \\<le> d z)", "have \"d x \\<le> d z \\<longrightarrow> d x \\<le> d z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d x \\<le> d z \\<longrightarrow> d x \\<le> d z", "by meson"], ["proof (state)\nthis:\n  d x \\<le> d z \\<longrightarrow> d x \\<le> d z\n\ngoal (1 subgoal):\n 1. (d x \\<le> d y \\<cdot> d z) = (d x \\<le> d y \\<and> d x \\<le> d z)", "then"], ["proof (chain)\npicking this:\n  d x \\<le> d z \\<longrightarrow> d x \\<le> d z", "show ?thesis"], ["proof (prove)\nusing this:\n  d x \\<le> d z \\<longrightarrow> d x \\<le> d z\n\ngoal (1 subgoal):\n 1. (d x \\<le> d y \\<cdot> d z) = (d x \\<le> d y \\<and> d x \\<le> d z)", "by (metis (no_types) dom_absorp_2 dom_glb dom_subid_aux2 local.dual_order.trans local.join.sup.coboundedI2)"], ["proof (state)\nthis:\n  (d x \\<le> d y \\<cdot> d z) = (d x \\<le> d y \\<and> d x \\<le> d z)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dom_ord: \"d x \\<le> d y \\<longleftrightarrow> d x \\<cdot> d y = d x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (d x \\<le> d y) = (d x \\<cdot> d y = d x)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. d x \\<le> d y \\<Longrightarrow> d x \\<cdot> d y = d x\n 2. d x \\<cdot> d y = d x \\<Longrightarrow> d x \\<le> d y", "assume \"d x \\<le> d y\""], ["proof (state)\nthis:\n  d x \\<le> d y\n\ngoal (2 subgoals):\n 1. d x \\<le> d y \\<Longrightarrow> d x \\<cdot> d y = d x\n 2. d x \\<cdot> d y = d x \\<Longrightarrow> d x \\<le> d y", "hence \"d x + d y = d y\""], ["proof (prove)\nusing this:\n  d x \\<le> d y\n\ngoal (1 subgoal):\n 1. d x + d y = d y", "by (simp add: less_eq_def)"], ["proof (state)\nthis:\n  d x + d y = d y\n\ngoal (2 subgoals):\n 1. d x \\<le> d y \\<Longrightarrow> d x \\<cdot> d y = d x\n 2. d x \\<cdot> d y = d x \\<Longrightarrow> d x \\<le> d y", "thus \"d x \\<cdot> d y = d x\""], ["proof (prove)\nusing this:\n  d x + d y = d y\n\ngoal (1 subgoal):\n 1. d x \\<cdot> d y = d x", "by (metis dns5)"], ["proof (state)\nthis:\n  d x \\<cdot> d y = d x\n\ngoal (1 subgoal):\n 1. d x \\<cdot> d y = d x \\<Longrightarrow> d x \\<le> d y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. d x \\<cdot> d y = d x \\<Longrightarrow> d x \\<le> d y", "assume \"d x \\<cdot> d y = d x\""], ["proof (state)\nthis:\n  d x \\<cdot> d y = d x\n\ngoal (1 subgoal):\n 1. d x \\<cdot> d y = d x \\<Longrightarrow> d x \\<le> d y", "thus \"d x \\<le> d y\""], ["proof (prove)\nusing this:\n  d x \\<cdot> d y = d x\n\ngoal (1 subgoal):\n 1. d x \\<le> d y", "by (metis dom_subid_aux2)"], ["proof (state)\nthis:\n  d x \\<le> d y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dom_export [simp]: \"d (d x \\<cdot> y) = d x \\<cdot> d y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d (d x \\<cdot> y) = d x \\<cdot> d y", "proof (rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. d (d x \\<cdot> y) \\<le> d x \\<cdot> d y\n 2. d x \\<cdot> d y \\<le> d (d x \\<cdot> y)", "have \"d (d x \\<cdot> y) = d (d (d x \\<cdot> y)) \\<cdot> d (d x \\<cdot> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d (d x \\<cdot> y) = d (d (d x \\<cdot> y)) \\<cdot> d (d x \\<cdot> y)", "using dns1"], ["proof (prove)\nusing this:\n  d ?x \\<cdot> ?x = ?x\n\ngoal (1 subgoal):\n 1. d (d x \\<cdot> y) = d (d (d x \\<cdot> y)) \\<cdot> d (d x \\<cdot> y)", "by presburger"], ["proof (state)\nthis:\n  d (d x \\<cdot> y) = d (d (d x \\<cdot> y)) \\<cdot> d (d x \\<cdot> y)\n\ngoal (2 subgoals):\n 1. d (d x \\<cdot> y) \\<le> d x \\<cdot> d y\n 2. d x \\<cdot> d y \\<le> d (d x \\<cdot> y)", "also"], ["proof (state)\nthis:\n  d (d x \\<cdot> y) = d (d (d x \\<cdot> y)) \\<cdot> d (d x \\<cdot> y)\n\ngoal (2 subgoals):\n 1. d (d x \\<cdot> y) \\<le> d x \\<cdot> d y\n 2. d x \\<cdot> d y \\<le> d (d x \\<cdot> y)", "have \"... = d (d x \\<cdot> d y) \\<cdot> d (d x \\<cdot> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d (d (d x \\<cdot> y)) \\<cdot> d (d x \\<cdot> y) =\n    d (d x \\<cdot> d y) \\<cdot> d (d x \\<cdot> y)", "by (metis dns1 dns2 mult_assoc)"], ["proof (state)\nthis:\n  d (d (d x \\<cdot> y)) \\<cdot> d (d x \\<cdot> y) =\n  d (d x \\<cdot> d y) \\<cdot> d (d x \\<cdot> y)\n\ngoal (2 subgoals):\n 1. d (d x \\<cdot> y) \\<le> d x \\<cdot> d y\n 2. d x \\<cdot> d y \\<le> d (d x \\<cdot> y)", "finally"], ["proof (chain)\npicking this:\n  d (d x \\<cdot> y) = d (d x \\<cdot> d y) \\<cdot> d (d x \\<cdot> y)", "show a: \"d (d x \\<cdot> y) \\<le> d x \\<cdot> d y\""], ["proof (prove)\nusing this:\n  d (d x \\<cdot> y) = d (d x \\<cdot> d y) \\<cdot> d (d x \\<cdot> y)\n\ngoal (1 subgoal):\n 1. d (d x \\<cdot> y) \\<le> d x \\<cdot> d y", "by (metis (no_types) dom_add_closed dom_glb dom_1 add_idem' dns2 dns4)"], ["proof (state)\nthis:\n  d (d x \\<cdot> y) \\<le> d x \\<cdot> d y\n\ngoal (1 subgoal):\n 1. d x \\<cdot> d y \\<le> d (d x \\<cdot> y)", "have \"d (d x \\<cdot> y) = d (d x \\<cdot> y) \\<cdot> d x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d (d x \\<cdot> y) = d (d x \\<cdot> y) \\<cdot> d x", "using a dom_glb_eq dom_ord"], ["proof (prove)\nusing this:\n  d (d x \\<cdot> y) \\<le> d x \\<cdot> d y\n  (d ?x \\<le> d ?y \\<cdot> d ?z) = (d ?x \\<le> d ?y \\<and> d ?x \\<le> d ?z)\n  (d ?x \\<le> d ?y) = (d ?x \\<cdot> d ?y = d ?x)\n\ngoal (1 subgoal):\n 1. d (d x \\<cdot> y) = d (d x \\<cdot> y) \\<cdot> d x", "by force"], ["proof (state)\nthis:\n  d (d x \\<cdot> y) = d (d x \\<cdot> y) \\<cdot> d x\n\ngoal (1 subgoal):\n 1. d x \\<cdot> d y \\<le> d (d x \\<cdot> y)", "hence \"d x \\<cdot> d y = d (d x \\<cdot> y) \\<cdot> d y\""], ["proof (prove)\nusing this:\n  d (d x \\<cdot> y) = d (d x \\<cdot> y) \\<cdot> d x\n\ngoal (1 subgoal):\n 1. d x \\<cdot> d y = d (d x \\<cdot> y) \\<cdot> d y", "by (metis dns1 dns2 mult_assoc)"], ["proof (state)\nthis:\n  d x \\<cdot> d y = d (d x \\<cdot> y) \\<cdot> d y\n\ngoal (1 subgoal):\n 1. d x \\<cdot> d y \\<le> d (d x \\<cdot> y)", "thus \"d x \\<cdot> d y \\<le> d (d x \\<cdot> y)\""], ["proof (prove)\nusing this:\n  d x \\<cdot> d y = d (d x \\<cdot> y) \\<cdot> d y\n\ngoal (1 subgoal):\n 1. d x \\<cdot> d y \\<le> d (d x \\<cdot> y)", "using a dom_glb_eq dom_ord"], ["proof (prove)\nusing this:\n  d x \\<cdot> d y = d (d x \\<cdot> y) \\<cdot> d y\n  d (d x \\<cdot> y) \\<le> d x \\<cdot> d y\n  (d ?x \\<le> d ?y \\<cdot> d ?z) = (d ?x \\<le> d ?y \\<and> d ?x \\<le> d ?z)\n  (d ?x \\<le> d ?y) = (d ?x \\<cdot> d ?y = d ?x)\n\ngoal (1 subgoal):\n 1. d x \\<cdot> d y \\<le> d (d x \\<cdot> y)", "by auto"], ["proof (state)\nthis:\n  d x \\<cdot> d y \\<le> d (d x \\<cdot> y)\n\ngoal:\nNo subgoals!", "qed"], ["", "subclass domain_semigroup"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.domain_semigroup d (\\<cdot>)", "by (unfold_locales, auto simp: dns4)"], ["", "text \\<open>We compare the domain semigroup ordering with that of the dioid.\\<close>"], ["", "lemma d_two_orders: \"d x \\<sqsubseteq> d y \\<longleftrightarrow> d x \\<le> d y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (d x \\<sqsubseteq> d y) = (d x \\<le> d y)", "by (simp add: dom_ord ds_ord_sl_ord)"], ["", "lemma two_orders: \"x \\<sqsubseteq> y \\<Longrightarrow> x \\<le> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sqsubseteq> y \\<Longrightarrow> x \\<le> y", "by (metis dom_subid_aux2 ds_ord_def)"], ["", "lemma \"x \\<le> y \\<Longrightarrow> x \\<sqsubseteq> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow> x \\<sqsubseteq> y", "(*nitpick [expect=genuine]*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow> x \\<sqsubseteq> y", "oops"], ["", "text \\<open>Next we prove additional properties.\\<close>"], ["", "lemma dom_subdist: \"d x \\<le> d (x + y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d x \\<le> d (x + y)", "by simp"], ["", "lemma dom_distrib: \"d x + d y \\<cdot> d z = (d x + d y) \\<cdot> (d x + d z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d x + d y \\<cdot> d z = (d x + d y) \\<cdot> (d x + d z)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. d x + d y \\<cdot> d z = (d x + d y) \\<cdot> (d x + d z)", "have \"(d x + d y) \\<cdot> (d x + d z) = d x \\<cdot> (d x + d z) + d y \\<cdot> (d x + d z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (d x + d y) \\<cdot> (d x + d z) =\n    d x \\<cdot> (d x + d z) + d y \\<cdot> (d x + d z)", "using distrib_right'"], ["proof (prove)\nusing this:\n  (?x + ?y) \\<cdot> ?z = ?x \\<cdot> ?z + ?y \\<cdot> ?z\n\ngoal (1 subgoal):\n 1. (d x + d y) \\<cdot> (d x + d z) =\n    d x \\<cdot> (d x + d z) + d y \\<cdot> (d x + d z)", "by blast"], ["proof (state)\nthis:\n  (d x + d y) \\<cdot> (d x + d z) =\n  d x \\<cdot> (d x + d z) + d y \\<cdot> (d x + d z)\n\ngoal (1 subgoal):\n 1. d x + d y \\<cdot> d z = (d x + d y) \\<cdot> (d x + d z)", "also"], ["proof (state)\nthis:\n  (d x + d y) \\<cdot> (d x + d z) =\n  d x \\<cdot> (d x + d z) + d y \\<cdot> (d x + d z)\n\ngoal (1 subgoal):\n 1. d x + d y \\<cdot> d z = (d x + d y) \\<cdot> (d x + d z)", "have \"... = d x + (d x + d z) \\<cdot> d y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d x \\<cdot> (d x + d z) + d y \\<cdot> (d x + d z) =\n    d x + (d x + d z) \\<cdot> d y", "by (metis (no_types) dns3 dns5 dsg4)"], ["proof (state)\nthis:\n  d x \\<cdot> (d x + d z) + d y \\<cdot> (d x + d z) =\n  d x + (d x + d z) \\<cdot> d y\n\ngoal (1 subgoal):\n 1. d x + d y \\<cdot> d z = (d x + d y) \\<cdot> (d x + d z)", "also"], ["proof (state)\nthis:\n  d x \\<cdot> (d x + d z) + d y \\<cdot> (d x + d z) =\n  d x + (d x + d z) \\<cdot> d y\n\ngoal (1 subgoal):\n 1. d x + d y \\<cdot> d z = (d x + d y) \\<cdot> (d x + d z)", "have \"... = d x + d x \\<cdot> d y + d z \\<cdot> d y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d x + (d x + d z) \\<cdot> d y = d x + d x \\<cdot> d y + d z \\<cdot> d y", "using add_assoc' distrib_right'"], ["proof (prove)\nusing this:\n  ?x + ?y + ?z = ?x + (?y + ?z)\n  (?x + ?y) \\<cdot> ?z = ?x \\<cdot> ?z + ?y \\<cdot> ?z\n\ngoal (1 subgoal):\n 1. d x + (d x + d z) \\<cdot> d y = d x + d x \\<cdot> d y + d z \\<cdot> d y", "by presburger"], ["proof (state)\nthis:\n  d x + (d x + d z) \\<cdot> d y = d x + d x \\<cdot> d y + d z \\<cdot> d y\n\ngoal (1 subgoal):\n 1. d x + d y \\<cdot> d z = (d x + d y) \\<cdot> (d x + d z)", "finally"], ["proof (chain)\npicking this:\n  (d x + d y) \\<cdot> (d x + d z) = d x + d x \\<cdot> d y + d z \\<cdot> d y", "show ?thesis"], ["proof (prove)\nusing this:\n  (d x + d y) \\<cdot> (d x + d z) = d x + d x \\<cdot> d y + d z \\<cdot> d y\n\ngoal (1 subgoal):\n 1. d x + d y \\<cdot> d z = (d x + d y) \\<cdot> (d x + d z)", "by (simp add: dsg4)"], ["proof (state)\nthis:\n  d x + d y \\<cdot> d z = (d x + d y) \\<cdot> (d x + d z)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dom_llp1: \"x \\<le> d y \\<cdot> x \\<Longrightarrow> d x \\<le> d y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> d y \\<cdot> x \\<Longrightarrow> d x \\<le> d y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<le> d y \\<cdot> x \\<Longrightarrow> d x \\<le> d y", "assume \"x \\<le> d y \\<cdot> x\""], ["proof (state)\nthis:\n  x \\<le> d y \\<cdot> x\n\ngoal (1 subgoal):\n 1. x \\<le> d y \\<cdot> x \\<Longrightarrow> d x \\<le> d y", "hence \"d x \\<le> d (d y \\<cdot> x)\""], ["proof (prove)\nusing this:\n  x \\<le> d y \\<cdot> x\n\ngoal (1 subgoal):\n 1. d x \\<le> d (d y \\<cdot> x)", "using dom_iso"], ["proof (prove)\nusing this:\n  x \\<le> d y \\<cdot> x\n  ?x \\<le> ?y \\<Longrightarrow> d ?x \\<le> d ?y\n\ngoal (1 subgoal):\n 1. d x \\<le> d (d y \\<cdot> x)", "by blast"], ["proof (state)\nthis:\n  d x \\<le> d (d y \\<cdot> x)\n\ngoal (1 subgoal):\n 1. x \\<le> d y \\<cdot> x \\<Longrightarrow> d x \\<le> d y", "also"], ["proof (state)\nthis:\n  d x \\<le> d (d y \\<cdot> x)\n\ngoal (1 subgoal):\n 1. x \\<le> d y \\<cdot> x \\<Longrightarrow> d x \\<le> d y", "have \"... = d y \\<cdot> d x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d (d y \\<cdot> x) = d y \\<cdot> d x", "by simp"], ["proof (state)\nthis:\n  d (d y \\<cdot> x) = d y \\<cdot> d x\n\ngoal (1 subgoal):\n 1. x \\<le> d y \\<cdot> x \\<Longrightarrow> d x \\<le> d y", "finally"], ["proof (chain)\npicking this:\n  d x \\<le> d y \\<cdot> d x", "show \"d x \\<le> d y\""], ["proof (prove)\nusing this:\n  d x \\<le> d y \\<cdot> d x\n\ngoal (1 subgoal):\n 1. d x \\<le> d y", "by (simp add: dom_glb_eq)"], ["proof (state)\nthis:\n  d x \\<le> d y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dom_llp2: \"d x \\<le> d y \\<Longrightarrow> x \\<le> d y \\<cdot> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d x \\<le> d y \\<Longrightarrow> x \\<le> d y \\<cdot> x", "using d_two_orders local.ds_dom_llp two_orders"], ["proof (prove)\nusing this:\n  (d ?x \\<sqsubseteq> d ?y) = (d ?x \\<le> d ?y)\n  (?x \\<sqsubseteq> d ?y \\<cdot> ?x) = (d ?x \\<sqsubseteq> d ?y)\n  ?x \\<sqsubseteq> ?y \\<Longrightarrow> ?x \\<le> ?y\n\ngoal (1 subgoal):\n 1. d x \\<le> d y \\<Longrightarrow> x \\<le> d y \\<cdot> x", "by blast"], ["", "lemma dom_llp: \"x \\<le> d y \\<cdot> x \\<longleftrightarrow> d x \\<le> d y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<le> d y \\<cdot> x) = (d x \\<le> d y)", "using dom_llp1 dom_llp2"], ["proof (prove)\nusing this:\n  ?x \\<le> d ?y \\<cdot> ?x \\<Longrightarrow> d ?x \\<le> d ?y\n  d ?x \\<le> d ?y \\<Longrightarrow> ?x \\<le> d ?y \\<cdot> ?x\n\ngoal (1 subgoal):\n 1. (x \\<le> d y \\<cdot> x) = (d x \\<le> d y)", "by blast"], ["", "end"], ["", "text \\<open>We expand domain near-semirings by an additive unit, using slightly different axioms.\\<close>"], ["", "class domain_near_semiring_one = ab_near_semiring_one + plus_ord + domain_op +\n  assumes dnso1 [simp]: \"x + d x \\<cdot> x = d x \\<cdot> x\"\n  and dnso2 [simp]: \"d (x \\<cdot> d y) = d (x \\<cdot> y)\"\n  and dnso3 [simp]: \"d x + 1 = 1\"\n  and dnso4 [simp]: \"d (x + y) = d x + d y\"\n  and dnso5: \"d x \\<cdot> d y = d y \\<cdot> d x\"\n\nbegin"], ["", "text \\<open>The previous axioms are derivable.\\<close>"], ["", "subclass domain_near_semiring"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.domain_near_semiring (+) (\\<cdot>) d (\\<le>) (<)", "proof"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x. d x \\<cdot> x = x\n 2. \\<And>x y. d (x \\<cdot> d y) = d (x \\<cdot> y)\n 3. \\<And>x y. d (x + y) = d x + d y\n 4. \\<And>x y. d x \\<cdot> d y = d y \\<cdot> d x\n 5. \\<And>x y. d x \\<cdot> (d x + d y) = d x", "show a: \"\\<And>x. d x \\<cdot> x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. d x \\<cdot> x = x", "by (metis add_commute local.dnso3 local.distrib_right' local.dnso1 local.mult_onel)"], ["proof (state)\nthis:\n  d ?x \\<cdot> ?x = ?x\n\ngoal (4 subgoals):\n 1. \\<And>x y. d (x \\<cdot> d y) = d (x \\<cdot> y)\n 2. \\<And>x y. d (x + y) = d x + d y\n 3. \\<And>x y. d x \\<cdot> d y = d y \\<cdot> d x\n 4. \\<And>x y. d x \\<cdot> (d x + d y) = d x", "show \"\\<And>x y. d (x \\<cdot> d y) = d (x \\<cdot> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y. d (x \\<cdot> d y) = d (x \\<cdot> y)", "by simp"], ["proof (state)\nthis:\n  d (?x \\<cdot> d ?y) = d (?x \\<cdot> ?y)\n\ngoal (3 subgoals):\n 1. \\<And>x y. d (x + y) = d x + d y\n 2. \\<And>x y. d x \\<cdot> d y = d y \\<cdot> d x\n 3. \\<And>x y. d x \\<cdot> (d x + d y) = d x", "show \"\\<And>x y. d (x + y) = d x + d y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y. d (x + y) = d x + d y", "by simp"], ["proof (state)\nthis:\n  d (?x + ?y) = d ?x + d ?y\n\ngoal (2 subgoals):\n 1. \\<And>x y. d x \\<cdot> d y = d y \\<cdot> d x\n 2. \\<And>x y. d x \\<cdot> (d x + d y) = d x", "show \"\\<And>x y. d x \\<cdot> d y = d y \\<cdot> d x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y. d x \\<cdot> d y = d y \\<cdot> d x", "by (simp add: dnso5)"], ["proof (state)\nthis:\n  d ?x \\<cdot> d ?y = d ?y \\<cdot> d ?x\n\ngoal (1 subgoal):\n 1. \\<And>x y. d x \\<cdot> (d x + d y) = d x", "show \"\\<And>x y. d x \\<cdot> (d x + d y) = d x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y. d x \\<cdot> (d x + d y) = d x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. d x \\<cdot> (d x + d y) = d x", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. d x \\<cdot> (d x + d y) = d x", "have \"\\<And>x. 1 + d x = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. (1::'a) + d x = (1::'a)", "using add_commute dnso3"], ["proof (prove)\nusing this:\n  ?a + ?b = ?b + ?a\n  d ?x + (1::'a) = (1::'a)\n\ngoal (1 subgoal):\n 1. \\<And>x. (1::'a) + d x = (1::'a)", "by presburger"], ["proof (state)\nthis:\n  (1::'a) + d ?x = (1::'a)\n\ngoal (1 subgoal):\n 1. \\<And>x y. d x \\<cdot> (d x + d y) = d x", "thus \"d x \\<cdot> (d x + d y) = d x\""], ["proof (prove)\nusing this:\n  (1::'a) + d ?x = (1::'a)\n\ngoal (1 subgoal):\n 1. d x \\<cdot> (d x + d y) = d x", "by (metis (no_types) a dnso2 dnso4 dnso5 distrib_right' mult_onel)"], ["proof (state)\nthis:\n  d x \\<cdot> (d x + d y) = d x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  d ?x \\<cdot> (d ?x + d ?y) = d ?x\n\ngoal:\nNo subgoals!", "qed"], ["", "subclass domain_monoid"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.domain_monoid d (\\<cdot>) (1::'a)", ".."], ["", "lemma dom_subid: \"d x \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d x \\<le> (1::'a)", "by (simp add: less_eq_def)"], ["", "end"], ["", "text \\<open>We add a left unit of multiplication.\\<close>"], ["", "class domain_near_semiring_one_zerol = ab_near_semiring_one_zerol + domain_near_semiring_one +\n  assumes dnso6 [simp]: \"d 0 = 0\"\n\nbegin"], ["", "lemma domain_very_strict: \"d x = 0 \\<longleftrightarrow> x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (d x = (0::'a)) = (x = (0::'a))", "by (metis annil dns1 dnso6)"], ["", "lemma dom_weakly_local: \"x \\<cdot> y = 0 \\<longleftrightarrow> x \\<cdot> d y = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<cdot> y = (0::'a)) = (x \\<cdot> d y = (0::'a))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (x \\<cdot> y = (0::'a)) = (x \\<cdot> d y = (0::'a))", "have \"x \\<cdot> y = 0 \\<longleftrightarrow> d (x \\<cdot> y) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<cdot> y = (0::'a)) = (d (x \\<cdot> y) = (0::'a))", "by (simp add: domain_very_strict)"], ["proof (state)\nthis:\n  (x \\<cdot> y = (0::'a)) = (d (x \\<cdot> y) = (0::'a))\n\ngoal (1 subgoal):\n 1. (x \\<cdot> y = (0::'a)) = (x \\<cdot> d y = (0::'a))", "also"], ["proof (state)\nthis:\n  (x \\<cdot> y = (0::'a)) = (d (x \\<cdot> y) = (0::'a))\n\ngoal (1 subgoal):\n 1. (x \\<cdot> y = (0::'a)) = (x \\<cdot> d y = (0::'a))", "have \"... \\<longleftrightarrow> d (x \\<cdot> d y) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (d (x \\<cdot> y) = (0::'a)) = (d (x \\<cdot> d y) = (0::'a))", "by simp"], ["proof (state)\nthis:\n  (d (x \\<cdot> y) = (0::'a)) = (d (x \\<cdot> d y) = (0::'a))\n\ngoal (1 subgoal):\n 1. (x \\<cdot> y = (0::'a)) = (x \\<cdot> d y = (0::'a))", "finally"], ["proof (chain)\npicking this:\n  (x \\<cdot> y = (0::'a)) = (d (x \\<cdot> d y) = (0::'a))", "show ?thesis"], ["proof (prove)\nusing this:\n  (x \\<cdot> y = (0::'a)) = (d (x \\<cdot> d y) = (0::'a))\n\ngoal (1 subgoal):\n 1. (x \\<cdot> y = (0::'a)) = (x \\<cdot> d y = (0::'a))", "using domain_very_strict"], ["proof (prove)\nusing this:\n  (x \\<cdot> y = (0::'a)) = (d (x \\<cdot> d y) = (0::'a))\n  (d ?x = (0::'a)) = (?x = (0::'a))\n\ngoal (1 subgoal):\n 1. (x \\<cdot> y = (0::'a)) = (x \\<cdot> d y = (0::'a))", "by blast"], ["proof (state)\nthis:\n  (x \\<cdot> y = (0::'a)) = (x \\<cdot> d y = (0::'a))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subsection \\<open>Domain Pre-Dioids\\<close>"], ["", "text \\<open>\n  Pre-semirings with one and a left zero are automatically dioids.\n  Hence there is no point defining domain pre-semirings separately from domain dioids. The axioms\nare once again from~\\cite{DesharnaisStruthAMAST}.\n\\<close>"], ["", "class domain_pre_dioid_one = pre_dioid_one + domain_op +\n  assumes dpd1 : \"x \\<le> d x \\<cdot> x\"\n  and dpd2 [simp]: \"d (x \\<cdot> d y) = d (x \\<cdot> y)\"\n  and dpd3 [simp]: \"d x \\<le> 1\"\n  and dpd4 [simp]: \"d (x + y) = d x + d y\"\n\nbegin"], ["", "text \\<open>We prepare to show that every domain pre-dioid with one is a domain near-dioid with one.\\<close>"], ["", "lemma dns1'' [simp]: \"d x \\<cdot> x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d x \\<cdot> x = x", "proof (rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. d x \\<cdot> x \\<le> x\n 2. x \\<le> d x \\<cdot> x", "show \"d x \\<cdot> x \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d x \\<cdot> x \\<le> x", "using dpd3  mult_isor"], ["proof (prove)\nusing this:\n  d ?x \\<le> (1::'a)\n  ?x \\<le> ?y \\<Longrightarrow> ?x \\<cdot> ?z \\<le> ?y \\<cdot> ?z\n\ngoal (1 subgoal):\n 1. d x \\<cdot> x \\<le> x", "by fastforce"], ["proof (state)\nthis:\n  d x \\<cdot> x \\<le> x\n\ngoal (1 subgoal):\n 1. x \\<le> d x \\<cdot> x", "show \"x \\<le> d x \\<cdot> x \""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> d x \\<cdot> x", "by (simp add: dpd1)"], ["proof (state)\nthis:\n  x \\<le> d x \\<cdot> x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma d_iso: \"x \\<le> y \\<Longrightarrow> d x \\<le> d y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow> d x \\<le> d y", "by (metis dpd4 less_eq_def)"], ["", "lemma domain_1'': \"d (x \\<cdot> y) \\<le> d x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d (x \\<cdot> y) \\<le> d x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. d (x \\<cdot> y) \\<le> d x", "have \"d (x \\<cdot> y) = d (x \\<cdot> d y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d (x \\<cdot> y) = d (x \\<cdot> d y)", "by simp"], ["proof (state)\nthis:\n  d (x \\<cdot> y) = d (x \\<cdot> d y)\n\ngoal (1 subgoal):\n 1. d (x \\<cdot> y) \\<le> d x", "also"], ["proof (state)\nthis:\n  d (x \\<cdot> y) = d (x \\<cdot> d y)\n\ngoal (1 subgoal):\n 1. d (x \\<cdot> y) \\<le> d x", "have \"... \\<le> d (x \\<cdot> 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d (x \\<cdot> d y) \\<le> d (x \\<cdot> (1::'a))", "by (meson d_iso dpd3 mult_isol)"], ["proof (state)\nthis:\n  d (x \\<cdot> d y) \\<le> d (x \\<cdot> (1::'a))\n\ngoal (1 subgoal):\n 1. d (x \\<cdot> y) \\<le> d x", "finally"], ["proof (chain)\npicking this:\n  d (x \\<cdot> y) \\<le> d (x \\<cdot> (1::'a))", "show ?thesis"], ["proof (prove)\nusing this:\n  d (x \\<cdot> y) \\<le> d (x \\<cdot> (1::'a))\n\ngoal (1 subgoal):\n 1. d (x \\<cdot> y) \\<le> d x", "by simp"], ["proof (state)\nthis:\n  d (x \\<cdot> y) \\<le> d x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma domain_export'' [simp]: \"d (d x \\<cdot> y) = d x \\<cdot> d y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d (d x \\<cdot> y) = d x \\<cdot> d y", "proof (rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. d (d x \\<cdot> y) \\<le> d x \\<cdot> d y\n 2. d x \\<cdot> d y \\<le> d (d x \\<cdot> y)", "have one: \"d (d x \\<cdot> y) \\<le> d x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d (d x \\<cdot> y) \\<le> d x", "by (metis dpd2 domain_1'' mult_onel)"], ["proof (state)\nthis:\n  d (d x \\<cdot> y) \\<le> d x\n\ngoal (2 subgoals):\n 1. d (d x \\<cdot> y) \\<le> d x \\<cdot> d y\n 2. d x \\<cdot> d y \\<le> d (d x \\<cdot> y)", "have two: \"d (d x \\<cdot> y) \\<le> d y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d (d x \\<cdot> y) \\<le> d y", "using d_iso dpd3 mult_isor"], ["proof (prove)\nusing this:\n  ?x \\<le> ?y \\<Longrightarrow> d ?x \\<le> d ?y\n  d ?x \\<le> (1::'a)\n  ?x \\<le> ?y \\<Longrightarrow> ?x \\<cdot> ?z \\<le> ?y \\<cdot> ?z\n\ngoal (1 subgoal):\n 1. d (d x \\<cdot> y) \\<le> d y", "by fastforce"], ["proof (state)\nthis:\n  d (d x \\<cdot> y) \\<le> d y\n\ngoal (2 subgoals):\n 1. d (d x \\<cdot> y) \\<le> d x \\<cdot> d y\n 2. d x \\<cdot> d y \\<le> d (d x \\<cdot> y)", "have \"d (d x \\<cdot> y) = d (d (d x \\<cdot> y)) \\<cdot> d (d x \\<cdot> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d (d x \\<cdot> y) = d (d (d x \\<cdot> y)) \\<cdot> d (d x \\<cdot> y)", "by simp"], ["proof (state)\nthis:\n  d (d x \\<cdot> y) = d (d (d x \\<cdot> y)) \\<cdot> d (d x \\<cdot> y)\n\ngoal (2 subgoals):\n 1. d (d x \\<cdot> y) \\<le> d x \\<cdot> d y\n 2. d x \\<cdot> d y \\<le> d (d x \\<cdot> y)", "also"], ["proof (state)\nthis:\n  d (d x \\<cdot> y) = d (d (d x \\<cdot> y)) \\<cdot> d (d x \\<cdot> y)\n\ngoal (2 subgoals):\n 1. d (d x \\<cdot> y) \\<le> d x \\<cdot> d y\n 2. d x \\<cdot> d y \\<le> d (d x \\<cdot> y)", "have \"... = d (d x \\<cdot> y) \\<cdot> d (d x \\<cdot> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d (d (d x \\<cdot> y)) \\<cdot> d (d x \\<cdot> y) =\n    d (d x \\<cdot> y) \\<cdot> d (d x \\<cdot> y)", "by (metis dns1'' dpd2 mult_assoc)"], ["proof (state)\nthis:\n  d (d (d x \\<cdot> y)) \\<cdot> d (d x \\<cdot> y) =\n  d (d x \\<cdot> y) \\<cdot> d (d x \\<cdot> y)\n\ngoal (2 subgoals):\n 1. d (d x \\<cdot> y) \\<le> d x \\<cdot> d y\n 2. d x \\<cdot> d y \\<le> d (d x \\<cdot> y)", "thus \"d (d x \\<cdot> y) \\<le> d x \\<cdot> d y\""], ["proof (prove)\nusing this:\n  d (d (d x \\<cdot> y)) \\<cdot> d (d x \\<cdot> y) =\n  d (d x \\<cdot> y) \\<cdot> d (d x \\<cdot> y)\n\ngoal (1 subgoal):\n 1. d (d x \\<cdot> y) \\<le> d x \\<cdot> d y", "using mult_isol_var one two"], ["proof (prove)\nusing this:\n  d (d (d x \\<cdot> y)) \\<cdot> d (d x \\<cdot> y) =\n  d (d x \\<cdot> y) \\<cdot> d (d x \\<cdot> y)\n  \\<lbrakk>?u \\<le> ?x; ?v \\<le> ?y\\<rbrakk>\n  \\<Longrightarrow> ?u \\<cdot> ?v \\<le> ?x \\<cdot> ?y\n  d (d x \\<cdot> y) \\<le> d x\n  d (d x \\<cdot> y) \\<le> d y\n\ngoal (1 subgoal):\n 1. d (d x \\<cdot> y) \\<le> d x \\<cdot> d y", "by force"], ["proof (state)\nthis:\n  d (d x \\<cdot> y) \\<le> d x \\<cdot> d y\n\ngoal (1 subgoal):\n 1. d x \\<cdot> d y \\<le> d (d x \\<cdot> y)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. d x \\<cdot> d y \\<le> d (d x \\<cdot> y)", "have \"d x \\<cdot> d y \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d x \\<cdot> d y \\<le> (1::'a)", "by (metis dpd3  mult_1_right mult_isol order.trans)"], ["proof (state)\nthis:\n  d x \\<cdot> d y \\<le> (1::'a)\n\ngoal (1 subgoal):\n 1. d x \\<cdot> d y \\<le> d (d x \\<cdot> y)", "thus \"d x \\<cdot> d y \\<le> d (d x \\<cdot> y)\""], ["proof (prove)\nusing this:\n  d x \\<cdot> d y \\<le> (1::'a)\n\ngoal (1 subgoal):\n 1. d x \\<cdot> d y \\<le> d (d x \\<cdot> y)", "by (metis dns1'' dpd2 mult_isol mult_oner)"], ["proof (state)\nthis:\n  d x \\<cdot> d y \\<le> d (d x \\<cdot> y)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dom_subid_aux1'': \"d x \\<cdot> y \\<le> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d x \\<cdot> y \\<le> y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. d x \\<cdot> y \\<le> y", "have \"d x \\<cdot> y \\<le> 1 \\<cdot> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d x \\<cdot> y \\<le> (1::'a) \\<cdot> y", "using dpd3 mult_isor"], ["proof (prove)\nusing this:\n  d ?x \\<le> (1::'a)\n  ?x \\<le> ?y \\<Longrightarrow> ?x \\<cdot> ?z \\<le> ?y \\<cdot> ?z\n\ngoal (1 subgoal):\n 1. d x \\<cdot> y \\<le> (1::'a) \\<cdot> y", "by blast"], ["proof (state)\nthis:\n  d x \\<cdot> y \\<le> (1::'a) \\<cdot> y\n\ngoal (1 subgoal):\n 1. d x \\<cdot> y \\<le> y", "thus ?thesis"], ["proof (prove)\nusing this:\n  d x \\<cdot> y \\<le> (1::'a) \\<cdot> y\n\ngoal (1 subgoal):\n 1. d x \\<cdot> y \\<le> y", "by simp"], ["proof (state)\nthis:\n  d x \\<cdot> y \\<le> y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dom_subid_aux2'': \"x \\<cdot> d y \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<cdot> d y \\<le> x", "using dpd3 mult_isol"], ["proof (prove)\nusing this:\n  d ?x \\<le> (1::'a)\n  ?x \\<le> ?y \\<Longrightarrow> ?z \\<cdot> ?x \\<le> ?z \\<cdot> ?y\n\ngoal (1 subgoal):\n 1. x \\<cdot> d y \\<le> x", "by fastforce"], ["", "lemma d_comm: \"d x \\<cdot> d y = d y \\<cdot> d x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d x \\<cdot> d y = d y \\<cdot> d x", "proof (rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. d x \\<cdot> d y \\<le> d y \\<cdot> d x\n 2. d y \\<cdot> d x \\<le> d x \\<cdot> d y", "have \"d x \\<cdot> d y = (d x \\<cdot> d y) \\<cdot> (d x \\<cdot> d y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d x \\<cdot> d y = d x \\<cdot> d y \\<cdot> (d x \\<cdot> d y)", "by (metis dns1'' domain_export'')"], ["proof (state)\nthis:\n  d x \\<cdot> d y = d x \\<cdot> d y \\<cdot> (d x \\<cdot> d y)\n\ngoal (2 subgoals):\n 1. d x \\<cdot> d y \\<le> d y \\<cdot> d x\n 2. d y \\<cdot> d x \\<le> d x \\<cdot> d y", "thus \"d x \\<cdot> d y \\<le> d y \\<cdot> d x\""], ["proof (prove)\nusing this:\n  d x \\<cdot> d y = d x \\<cdot> d y \\<cdot> (d x \\<cdot> d y)\n\ngoal (1 subgoal):\n 1. d x \\<cdot> d y \\<le> d y \\<cdot> d x", "by (metis dom_subid_aux1'' dom_subid_aux2'' mult_isol_var)"], ["proof (state)\nthis:\n  d x \\<cdot> d y \\<le> d y \\<cdot> d x\n\ngoal (1 subgoal):\n 1. d y \\<cdot> d x \\<le> d x \\<cdot> d y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. d y \\<cdot> d x \\<le> d x \\<cdot> d y", "have \"d y \\<cdot> d x = (d y \\<cdot> d x) \\<cdot> (d y \\<cdot> d x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d y \\<cdot> d x = d y \\<cdot> d x \\<cdot> (d y \\<cdot> d x)", "by (metis dns1'' domain_export'')"], ["proof (state)\nthis:\n  d y \\<cdot> d x = d y \\<cdot> d x \\<cdot> (d y \\<cdot> d x)\n\ngoal (1 subgoal):\n 1. d y \\<cdot> d x \\<le> d x \\<cdot> d y", "thus \"d y \\<cdot> d x \\<le> d x \\<cdot> d y\""], ["proof (prove)\nusing this:\n  d y \\<cdot> d x = d y \\<cdot> d x \\<cdot> (d y \\<cdot> d x)\n\ngoal (1 subgoal):\n 1. d y \\<cdot> d x \\<le> d x \\<cdot> d y", "by (metis dom_subid_aux1'' dom_subid_aux2'' mult_isol_var)"], ["proof (state)\nthis:\n  d y \\<cdot> d x \\<le> d x \\<cdot> d y\n\ngoal:\nNo subgoals!", "qed"], ["", "subclass domain_near_semiring_one"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.domain_near_semiring_one (+) (\\<cdot>) (1::'a) d (\\<le>) (<)", "by (unfold_locales, auto simp: d_comm local.join.sup.absorb2)"], ["", "lemma domain_subid: \"x \\<le> 1 \\<Longrightarrow> x \\<le> d x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> (1::'a) \\<Longrightarrow> x \\<le> d x", "by (metis dns1 mult_isol mult_oner)"], ["", "lemma d_preserves_equation: \"d y \\<cdot> x \\<le> x \\<cdot> d z \\<longleftrightarrow> d y \\<cdot> x = d y \\<cdot> x \\<cdot> d z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (d y \\<cdot> x \\<le> x \\<cdot> d z) =\n    (d y \\<cdot> x = d y \\<cdot> x \\<cdot> d z)", "by (metis dom_subid_aux2'' local.antisym local.dom_el_idem local.dom_subid_aux2 local.order_prop local.subdistl mult_assoc)"], ["", "lemma d_restrict_iff: \"(x \\<le> y) \\<longleftrightarrow> (x \\<le> d x \\<cdot> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<le> y) = (x \\<le> d x \\<cdot> y)", "by (metis dom_subid_aux2 dsg1 less_eq_def order_trans subdistl)"], ["", "lemma d_restrict_iff_1: \"(d x \\<cdot> y \\<le> z) \\<longleftrightarrow> (d x \\<cdot> y \\<le> d x \\<cdot> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (d x \\<cdot> y \\<le> z) = (d x \\<cdot> y \\<le> d x \\<cdot> z)", "by (metis dom_subid_aux2 domain_1'' domain_invol dsg1 mult_isol_var order_trans)"], ["", "end"], ["", "text \\<open>We add once more a left unit of multiplication.\\<close>"], ["", "class domain_pre_dioid_one_zerol = domain_pre_dioid_one + pre_dioid_one_zerol +\n  assumes dpd5 [simp]: \"d 0 = 0\"\n\nbegin"], ["", "subclass domain_near_semiring_one_zerol"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.domain_near_semiring_one_zerol (+) (\\<cdot>) (1::'a) (0::'a) d\n     (\\<le>) (<)", "by (unfold_locales, simp)"], ["", "end"], ["", "subsection \\<open>Domain Semirings\\<close>"], ["", "text \\<open>We do not consider domain semirings without units separately at the moment. The axioms are taken from from~\\cite{DesharnaisStruthSCP}\\<close>"], ["", "class domain_semiringl = semiring_one_zerol + plus_ord + domain_op +\n  assumes dsr1 [simp]: \"x + d x \\<cdot> x = d x \\<cdot> x\"\n  and dsr2 [simp]: \"d (x \\<cdot> d y) = d (x \\<cdot> y)\"\n  and dsr3 [simp]: \"d x + 1 = 1\"\n  and dsr4 [simp]: \"d 0 = 0\"\n  and dsr5 [simp]: \"d (x + y) = d x + d y\"\n\nbegin"], ["", "text \\<open>Every domain semiring is automatically a domain pre-dioid with one and left zero.\\<close>"], ["", "subclass dioid_one_zerol"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.dioid_one_zerol (+) (\\<cdot>) (1::'a) (0::'a) (\\<le>) (<)", "by (standard, metis add_commute dsr1 dsr3 distrib_left mult_oner)"], ["", "subclass domain_pre_dioid_one_zerol"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.domain_pre_dioid_one_zerol (+) (\\<cdot>) (1::'a) (0::'a) (\\<le>)\n     (<) d", "by (standard, auto simp: less_eq_def)"], ["", "end"], ["", "class domain_semiring = domain_semiringl + semiring_one_zero"], ["", "subsection \\<open>The Algebra of Domain Elements\\<close>"], ["", "text \\<open>We show that the domain elements of a domain semiring form a distributive lattice. Unfortunately we cannot prove this within the type class of domain semirings.\\<close>"], ["", "typedef (overloaded)  'a d_element = \"{x :: 'a :: domain_semiring. x = d x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x. x \\<in> {x. x = d x}", "by (rule_tac x = 1 in exI, simp add: domain_subid order_class.eq_iff)"], ["", "setup_lifting type_definition_d_element"], ["", "instantiation d_element :: (domain_semiring) bounded_lattice\n\nbegin"], ["", "lift_definition less_eq_d_element :: \"'a d_element \\<Rightarrow> 'a d_element \\<Rightarrow> bool\" is \"(\\<le>)\""], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "lift_definition less_d_element :: \"'a d_element \\<Rightarrow> 'a d_element \\<Rightarrow> bool\" is \"(<)\""], ["proof (prove)\ngoal:\nNo subgoals!", "."], ["", "lift_definition bot_d_element :: \"'a d_element\" is 0"], ["proof (prove)\ngoal (1 subgoal):\n 1. (0::'a) = d (0::'a)", "by simp"], ["", "lift_definition top_d_element :: \"'a d_element\" is 1"], ["proof (prove)\ngoal (1 subgoal):\n 1. (1::'a) = d (1::'a)", "by simp"], ["", "lift_definition inf_d_element :: \"'a d_element \\<Rightarrow> 'a d_element \\<Rightarrow> 'a d_element\" is \"(\\<cdot>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a1 a2.\n       \\<lbrakk>a1 = d a1; a2 = d a2\\<rbrakk>\n       \\<Longrightarrow> a1 \\<cdot> a2 = d (a1 \\<cdot> a2)", "by (metis dsg3)"], ["", "lift_definition sup_d_element :: \"'a d_element \\<Rightarrow> 'a d_element \\<Rightarrow> 'a d_element\" is \"(+)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a1 a2.\n       \\<lbrakk>a1 = d a1; a2 = d a2\\<rbrakk>\n       \\<Longrightarrow> a1 + a2 = d (a1 + a2)", "by simp"], ["", "instance"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS('a d_element, bounded_lattice_class)", "apply (standard; transfer)"], ["proof (prove)\ngoal (12 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x = d x; y = d y\\<rbrakk>\n       \\<Longrightarrow> (x < y) = (x \\<le> y \\<and> \\<not> y \\<le> x)\n 2. \\<And>x. x = d x \\<Longrightarrow> x \\<le> x\n 3. \\<And>x y z.\n       \\<lbrakk>x = d x; y = d y; z = d z; x \\<le> y; y \\<le> z\\<rbrakk>\n       \\<Longrightarrow> x \\<le> z\n 4. \\<And>x y.\n       \\<lbrakk>x = d x; y = d y; x \\<le> y; y \\<le> x\\<rbrakk>\n       \\<Longrightarrow> x = y\n 5. \\<And>x y.\n       \\<lbrakk>x = d x; y = d y\\<rbrakk>\n       \\<Longrightarrow> x \\<cdot> y \\<le> x\n 6. \\<And>x y.\n       \\<lbrakk>x = d x; y = d y\\<rbrakk>\n       \\<Longrightarrow> x \\<cdot> y \\<le> y\n 7. \\<And>x y z.\n       \\<lbrakk>x = d x; y = d y; z = d z; x \\<le> y; x \\<le> z\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y \\<cdot> z\n 8. \\<And>x y.\n       \\<lbrakk>x = d x; y = d y\\<rbrakk> \\<Longrightarrow> x \\<le> x + y\n 9. \\<And>y x.\n       \\<lbrakk>y = d y; x = d x\\<rbrakk> \\<Longrightarrow> y \\<le> x + y\n 10. \\<And>y x z.\n        \\<lbrakk>y = d y; x = d x; z = d z; y \\<le> x; z \\<le> x\\<rbrakk>\n        \\<Longrightarrow> y + z \\<le> x\nA total of 12 subgoals...", "apply (simp add: less_le_not_le)+"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x = d x; y = d y\\<rbrakk>\n       \\<Longrightarrow> x \\<cdot> y \\<le> x\n 2. \\<And>x y.\n       \\<lbrakk>x = d x; y = d y\\<rbrakk>\n       \\<Longrightarrow> x \\<cdot> y \\<le> y\n 3. \\<And>x y z.\n       \\<lbrakk>x = d x; y = d y; z = d z; x \\<le> y; x \\<le> z\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y \\<cdot> z\n 4. \\<And>x y.\n       \\<lbrakk>x = d x; y = d y\\<rbrakk> \\<Longrightarrow> x \\<le> x + y\n 5. \\<And>y x.\n       \\<lbrakk>y = d y; x = d x\\<rbrakk> \\<Longrightarrow> y \\<le> x + y\n 6. \\<And>y x z.\n       \\<lbrakk>y = d y; x = d x; z = d z; y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y + z \\<le> x\n 7. \\<And>x. x = d x \\<Longrightarrow> (0::'a) \\<le> x\n 8. \\<And>a. a = d a \\<Longrightarrow> a \\<le> (1::'a)", "apply (metis dom_subid_aux2'')"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x = d x; y = d y\\<rbrakk>\n       \\<Longrightarrow> x \\<cdot> y \\<le> y\n 2. \\<And>x y z.\n       \\<lbrakk>x = d x; y = d y; z = d z; x \\<le> y; x \\<le> z\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y \\<cdot> z\n 3. \\<And>x y.\n       \\<lbrakk>x = d x; y = d y\\<rbrakk> \\<Longrightarrow> x \\<le> x + y\n 4. \\<And>y x.\n       \\<lbrakk>y = d y; x = d x\\<rbrakk> \\<Longrightarrow> y \\<le> x + y\n 5. \\<And>y x z.\n       \\<lbrakk>y = d y; x = d x; z = d z; y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y + z \\<le> x\n 6. \\<And>x. x = d x \\<Longrightarrow> (0::'a) \\<le> x\n 7. \\<And>a. a = d a \\<Longrightarrow> a \\<le> (1::'a)", "apply (metis dom_subid_aux2)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x = d x; y = d y; z = d z; x \\<le> y; x \\<le> z\\<rbrakk>\n       \\<Longrightarrow> x \\<le> y \\<cdot> z\n 2. \\<And>x y.\n       \\<lbrakk>x = d x; y = d y\\<rbrakk> \\<Longrightarrow> x \\<le> x + y\n 3. \\<And>y x.\n       \\<lbrakk>y = d y; x = d x\\<rbrakk> \\<Longrightarrow> y \\<le> x + y\n 4. \\<And>y x z.\n       \\<lbrakk>y = d y; x = d x; z = d z; y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y + z \\<le> x\n 5. \\<And>x. x = d x \\<Longrightarrow> (0::'a) \\<le> x\n 6. \\<And>a. a = d a \\<Longrightarrow> a \\<le> (1::'a)", "apply (metis dom_glb)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x = d x; y = d y\\<rbrakk> \\<Longrightarrow> x \\<le> x + y\n 2. \\<And>y x.\n       \\<lbrakk>y = d y; x = d x\\<rbrakk> \\<Longrightarrow> y \\<le> x + y\n 3. \\<And>y x z.\n       \\<lbrakk>y = d y; x = d x; z = d z; y \\<le> x; z \\<le> x\\<rbrakk>\n       \\<Longrightarrow> y + z \\<le> x\n 4. \\<And>x. x = d x \\<Longrightarrow> (0::'a) \\<le> x\n 5. \\<And>a. a = d a \\<Longrightarrow> a \\<le> (1::'a)", "apply simp+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a. a = d a \\<Longrightarrow> a \\<le> (1::'a)", "by (metis dom_subid)"], ["", "end"], ["", "instance d_element :: (domain_semiring) distrib_lattice"], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS('a d_element, distrib_lattice_class)", "by (standard, transfer, metis dom_distrib)"], ["", "subsection \\<open>Domain Semirings with a Greatest Element\\<close>"], ["", "text \\<open>If there is a greatest element in the semiring, then we have another equality.\\<close>"], ["", "class domain_semiring_top = domain_semiring + order_top\n\nbegin"], ["", "notation top (\"\\<top>\")"], ["", "lemma kat_equivalence_greatest: \"d x \\<le> d y \\<longleftrightarrow> x \\<le> d y \\<cdot> \\<top>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (d x \\<le> d y) = (x \\<le> d y \\<cdot> \\<top>)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. d x \\<le> d y \\<Longrightarrow> x \\<le> d y \\<cdot> \\<top>\n 2. x \\<le> d y \\<cdot> \\<top> \\<Longrightarrow> d x \\<le> d y", "assume \"d x \\<le> d y\""], ["proof (state)\nthis:\n  d x \\<le> d y\n\ngoal (2 subgoals):\n 1. d x \\<le> d y \\<Longrightarrow> x \\<le> d y \\<cdot> \\<top>\n 2. x \\<le> d y \\<cdot> \\<top> \\<Longrightarrow> d x \\<le> d y", "thus \"x \\<le> d y \\<cdot> \\<top>\""], ["proof (prove)\nusing this:\n  d x \\<le> d y\n\ngoal (1 subgoal):\n 1. x \\<le> d y \\<cdot> \\<top>", "by (metis dsg1 mult_isol_var top_greatest)"], ["proof (state)\nthis:\n  x \\<le> d y \\<cdot> \\<top>\n\ngoal (1 subgoal):\n 1. x \\<le> d y \\<cdot> \\<top> \\<Longrightarrow> d x \\<le> d y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<le> d y \\<cdot> \\<top> \\<Longrightarrow> d x \\<le> d y", "assume \"x \\<le> d y \\<cdot> \\<top>\""], ["proof (state)\nthis:\n  x \\<le> d y \\<cdot> \\<top>\n\ngoal (1 subgoal):\n 1. x \\<le> d y \\<cdot> \\<top> \\<Longrightarrow> d x \\<le> d y", "thus \"d x \\<le> d y\""], ["proof (prove)\nusing this:\n  x \\<le> d y \\<cdot> \\<top>\n\ngoal (1 subgoal):\n 1. d x \\<le> d y", "using dom_glb_eq dom_iso"], ["proof (prove)\nusing this:\n  x \\<le> d y \\<cdot> \\<top>\n  (d ?x \\<le> d ?y \\<cdot> d ?z) = (d ?x \\<le> d ?y \\<and> d ?x \\<le> d ?z)\n  ?x \\<le> ?y \\<Longrightarrow> d ?x \\<le> d ?y\n\ngoal (1 subgoal):\n 1. d x \\<le> d y", "by fastforce"], ["proof (state)\nthis:\n  d x \\<le> d y\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subsection \\<open>Forward Diamond Operators\\<close>"], ["", "context domain_semiringl\n\nbegin"], ["", "text \\<open>We define a forward diamond operator over a domain semiring. A more modular consideration is not given at the moment.\\<close>"], ["", "definition fd :: \"'a \\<Rightarrow> 'a \\<Rightarrow> 'a\" (\"( |_\\<rangle> _)\" [61,81] 82) where\n  \"|x\\<rangle> y = d (x \\<cdot> y)\""], ["", "lemma fdia_d_simp [simp]: \"|x\\<rangle> d y = |x\\<rangle> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  |x\\<rangle> d y =  |x\\<rangle> y", "by (simp add: fd_def)"], ["", "lemma fdia_dom [simp]: \"|x\\<rangle> 1 = d x\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  |x\\<rangle> (1::'a) = d x", "by (simp add: fd_def)"], ["", "lemma fdia_add1: \"|x\\<rangle> (y + z) = |x\\<rangle> y + |x\\<rangle> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  |x\\<rangle> (y + z) =  |x\\<rangle> y +  |x\\<rangle> z", "by (simp add: fd_def distrib_left)"], ["", "lemma fdia_add2: \"|x + y\\<rangle> z = |x\\<rangle> z + |y\\<rangle> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  |x + y\\<rangle> z =  |x\\<rangle> z +  |y\\<rangle> z", "by (simp add: fd_def distrib_right)"], ["", "lemma fdia_mult: \"|x \\<cdot> y\\<rangle> z = |x\\<rangle> |y\\<rangle> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  |x \\<cdot> y\\<rangle> z =  |x\\<rangle>  |y\\<rangle> z", "by (simp add: fd_def mult_assoc)"], ["", "lemma fdia_one [simp]: \"|1\\<rangle> x = d x\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  |(1::'a)\\<rangle> x = d x", "by (simp add: fd_def)"], ["", "lemma fdemodalisation1: \"d z \\<cdot> |x\\<rangle> y = 0 \\<longleftrightarrow> d z \\<cdot> x \\<cdot> d y = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (d z \\<cdot>  |x\\<rangle> y = (0::'a)) =\n    (d z \\<cdot> x \\<cdot> d y = (0::'a))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (d z \\<cdot>  |x\\<rangle> y = (0::'a)) =\n    (d z \\<cdot> x \\<cdot> d y = (0::'a))", "have \"d z \\<cdot> |x\\<rangle> y = 0 \\<longleftrightarrow> d z \\<cdot> d (x \\<cdot> y) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (d z \\<cdot>  |x\\<rangle> y = (0::'a)) =\n    (d z \\<cdot> d (x \\<cdot> y) = (0::'a))", "by (simp add: fd_def)"], ["proof (state)\nthis:\n  (d z \\<cdot>  |x\\<rangle> y = (0::'a)) =\n  (d z \\<cdot> d (x \\<cdot> y) = (0::'a))\n\ngoal (1 subgoal):\n 1. (d z \\<cdot>  |x\\<rangle> y = (0::'a)) =\n    (d z \\<cdot> x \\<cdot> d y = (0::'a))", "also"], ["proof (state)\nthis:\n  (d z \\<cdot>  |x\\<rangle> y = (0::'a)) =\n  (d z \\<cdot> d (x \\<cdot> y) = (0::'a))\n\ngoal (1 subgoal):\n 1. (d z \\<cdot>  |x\\<rangle> y = (0::'a)) =\n    (d z \\<cdot> x \\<cdot> d y = (0::'a))", "have \"... \\<longleftrightarrow> d z \\<cdot> x \\<cdot> y = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (d z \\<cdot> d (x \\<cdot> y) = (0::'a)) =\n    (d z \\<cdot> x \\<cdot> y = (0::'a))", "by (metis annil dnso6 dsg1 dsg3 mult_assoc)"], ["proof (state)\nthis:\n  (d z \\<cdot> d (x \\<cdot> y) = (0::'a)) =\n  (d z \\<cdot> x \\<cdot> y = (0::'a))\n\ngoal (1 subgoal):\n 1. (d z \\<cdot>  |x\\<rangle> y = (0::'a)) =\n    (d z \\<cdot> x \\<cdot> d y = (0::'a))", "finally"], ["proof (chain)\npicking this:\n  (d z \\<cdot>  |x\\<rangle> y = (0::'a)) =\n  (d z \\<cdot> x \\<cdot> y = (0::'a))", "show ?thesis"], ["proof (prove)\nusing this:\n  (d z \\<cdot>  |x\\<rangle> y = (0::'a)) =\n  (d z \\<cdot> x \\<cdot> y = (0::'a))\n\ngoal (1 subgoal):\n 1. (d z \\<cdot>  |x\\<rangle> y = (0::'a)) =\n    (d z \\<cdot> x \\<cdot> d y = (0::'a))", "using dom_weakly_local"], ["proof (prove)\nusing this:\n  (d z \\<cdot>  |x\\<rangle> y = (0::'a)) =\n  (d z \\<cdot> x \\<cdot> y = (0::'a))\n  (?x \\<cdot> ?y = (0::'a)) = (?x \\<cdot> d ?y = (0::'a))\n\ngoal (1 subgoal):\n 1. (d z \\<cdot>  |x\\<rangle> y = (0::'a)) =\n    (d z \\<cdot> x \\<cdot> d y = (0::'a))", "by auto"], ["proof (state)\nthis:\n  (d z \\<cdot>  |x\\<rangle> y = (0::'a)) =\n  (d z \\<cdot> x \\<cdot> d y = (0::'a))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fdemodalisation2: \"|x\\<rangle> y \\<le> d z \\<longleftrightarrow> x \\<cdot> d y \\<le> d z \\<cdot> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ( |x\\<rangle> y \\<le> d z) = (x \\<cdot> d y \\<le> d z \\<cdot> x)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1.  |x\\<rangle> y \\<le> d z \\<Longrightarrow>\n    x \\<cdot> d y \\<le> d z \\<cdot> x\n 2. x \\<cdot> d y \\<le> d z \\<cdot> x \\<Longrightarrow>\n     |x\\<rangle> y \\<le> d z", "assume \"|x\\<rangle> y \\<le> d z\""], ["proof (state)\nthis:\n   |x\\<rangle> y \\<le> d z\n\ngoal (2 subgoals):\n 1.  |x\\<rangle> y \\<le> d z \\<Longrightarrow>\n    x \\<cdot> d y \\<le> d z \\<cdot> x\n 2. x \\<cdot> d y \\<le> d z \\<cdot> x \\<Longrightarrow>\n     |x\\<rangle> y \\<le> d z", "hence a: \"d (x \\<cdot> d y) \\<le> d z\""], ["proof (prove)\nusing this:\n   |x\\<rangle> y \\<le> d z\n\ngoal (1 subgoal):\n 1. d (x \\<cdot> d y) \\<le> d z", "by (simp add: fd_def)"], ["proof (state)\nthis:\n  d (x \\<cdot> d y) \\<le> d z\n\ngoal (2 subgoals):\n 1.  |x\\<rangle> y \\<le> d z \\<Longrightarrow>\n    x \\<cdot> d y \\<le> d z \\<cdot> x\n 2. x \\<cdot> d y \\<le> d z \\<cdot> x \\<Longrightarrow>\n     |x\\<rangle> y \\<le> d z", "have \"x \\<cdot> d y = d (x \\<cdot> d y) \\<cdot> x \\<cdot> d y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<cdot> d y = d (x \\<cdot> d y) \\<cdot> x \\<cdot> d y", "using dsg1 mult_assoc"], ["proof (prove)\nusing this:\n  d ?x \\<cdot> ?x = ?x\n  ?a \\<cdot> ?b \\<cdot> ?c = ?a \\<cdot> (?b \\<cdot> ?c)\n\ngoal (1 subgoal):\n 1. x \\<cdot> d y = d (x \\<cdot> d y) \\<cdot> x \\<cdot> d y", "by presburger"], ["proof (state)\nthis:\n  x \\<cdot> d y = d (x \\<cdot> d y) \\<cdot> x \\<cdot> d y\n\ngoal (2 subgoals):\n 1.  |x\\<rangle> y \\<le> d z \\<Longrightarrow>\n    x \\<cdot> d y \\<le> d z \\<cdot> x\n 2. x \\<cdot> d y \\<le> d z \\<cdot> x \\<Longrightarrow>\n     |x\\<rangle> y \\<le> d z", "also"], ["proof (state)\nthis:\n  x \\<cdot> d y = d (x \\<cdot> d y) \\<cdot> x \\<cdot> d y\n\ngoal (2 subgoals):\n 1.  |x\\<rangle> y \\<le> d z \\<Longrightarrow>\n    x \\<cdot> d y \\<le> d z \\<cdot> x\n 2. x \\<cdot> d y \\<le> d z \\<cdot> x \\<Longrightarrow>\n     |x\\<rangle> y \\<le> d z", "have \"... \\<le> d z \\<cdot> x \\<cdot> d y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d (x \\<cdot> d y) \\<cdot> x \\<cdot> d y \\<le> d z \\<cdot> x \\<cdot> d y", "using a calculation dom_llp2 mult_assoc"], ["proof (prove)\nusing this:\n  d (x \\<cdot> d y) \\<le> d z\n  x \\<cdot> d y = d (x \\<cdot> d y) \\<cdot> x \\<cdot> d y\n  d ?x \\<le> d ?y \\<Longrightarrow> ?x \\<le> d ?y \\<cdot> ?x\n  ?a \\<cdot> ?b \\<cdot> ?c = ?a \\<cdot> (?b \\<cdot> ?c)\n\ngoal (1 subgoal):\n 1. d (x \\<cdot> d y) \\<cdot> x \\<cdot> d y \\<le> d z \\<cdot> x \\<cdot> d y", "by auto"], ["proof (state)\nthis:\n  d (x \\<cdot> d y) \\<cdot> x \\<cdot> d y \\<le> d z \\<cdot> x \\<cdot> d y\n\ngoal (2 subgoals):\n 1.  |x\\<rangle> y \\<le> d z \\<Longrightarrow>\n    x \\<cdot> d y \\<le> d z \\<cdot> x\n 2. x \\<cdot> d y \\<le> d z \\<cdot> x \\<Longrightarrow>\n     |x\\<rangle> y \\<le> d z", "finally"], ["proof (chain)\npicking this:\n  x \\<cdot> d y \\<le> d z \\<cdot> x \\<cdot> d y", "show \"x \\<cdot> d y \\<le> d z \\<cdot> x\""], ["proof (prove)\nusing this:\n  x \\<cdot> d y \\<le> d z \\<cdot> x \\<cdot> d y\n\ngoal (1 subgoal):\n 1. x \\<cdot> d y \\<le> d z \\<cdot> x", "using dom_subid_aux2'' order_trans"], ["proof (prove)\nusing this:\n  x \\<cdot> d y \\<le> d z \\<cdot> x \\<cdot> d y\n  ?x \\<cdot> d ?y \\<le> ?x\n  \\<lbrakk>?x \\<le> ?y; ?y \\<le> ?z\\<rbrakk> \\<Longrightarrow> ?x \\<le> ?z\n\ngoal (1 subgoal):\n 1. x \\<cdot> d y \\<le> d z \\<cdot> x", "by blast"], ["proof (state)\nthis:\n  x \\<cdot> d y \\<le> d z \\<cdot> x\n\ngoal (1 subgoal):\n 1. x \\<cdot> d y \\<le> d z \\<cdot> x \\<Longrightarrow>\n     |x\\<rangle> y \\<le> d z", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<cdot> d y \\<le> d z \\<cdot> x \\<Longrightarrow>\n     |x\\<rangle> y \\<le> d z", "assume \"x \\<cdot> d y \\<le> d z \\<cdot> x\""], ["proof (state)\nthis:\n  x \\<cdot> d y \\<le> d z \\<cdot> x\n\ngoal (1 subgoal):\n 1. x \\<cdot> d y \\<le> d z \\<cdot> x \\<Longrightarrow>\n     |x\\<rangle> y \\<le> d z", "hence \"d (x \\<cdot> d y) \\<le> d (d z \\<cdot> d x)\""], ["proof (prove)\nusing this:\n  x \\<cdot> d y \\<le> d z \\<cdot> x\n\ngoal (1 subgoal):\n 1. d (x \\<cdot> d y) \\<le> d (d z \\<cdot> d x)", "using dom_iso"], ["proof (prove)\nusing this:\n  x \\<cdot> d y \\<le> d z \\<cdot> x\n  ?x \\<le> ?y \\<Longrightarrow> d ?x \\<le> d ?y\n\ngoal (1 subgoal):\n 1. d (x \\<cdot> d y) \\<le> d (d z \\<cdot> d x)", "by fastforce"], ["proof (state)\nthis:\n  d (x \\<cdot> d y) \\<le> d (d z \\<cdot> d x)\n\ngoal (1 subgoal):\n 1. x \\<cdot> d y \\<le> d z \\<cdot> x \\<Longrightarrow>\n     |x\\<rangle> y \\<le> d z", "also"], ["proof (state)\nthis:\n  d (x \\<cdot> d y) \\<le> d (d z \\<cdot> d x)\n\ngoal (1 subgoal):\n 1. x \\<cdot> d y \\<le> d z \\<cdot> x \\<Longrightarrow>\n     |x\\<rangle> y \\<le> d z", "have \"... \\<le> d (d z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d (d z \\<cdot> d x) \\<le> d (d z)", "using domain_1''"], ["proof (prove)\nusing this:\n  d (?x \\<cdot> ?y) \\<le> d ?x\n\ngoal (1 subgoal):\n 1. d (d z \\<cdot> d x) \\<le> d (d z)", "by blast"], ["proof (state)\nthis:\n  d (d z \\<cdot> d x) \\<le> d (d z)\n\ngoal (1 subgoal):\n 1. x \\<cdot> d y \\<le> d z \\<cdot> x \\<Longrightarrow>\n     |x\\<rangle> y \\<le> d z", "finally"], ["proof (chain)\npicking this:\n  d (x \\<cdot> d y) \\<le> d (d z)", "show \"|x\\<rangle> y \\<le> d z\""], ["proof (prove)\nusing this:\n  d (x \\<cdot> d y) \\<le> d (d z)\n\ngoal (1 subgoal):\n 1.  |x\\<rangle> y \\<le> d z", "by (simp add: fd_def)"], ["proof (state)\nthis:\n   |x\\<rangle> y \\<le> d z\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fd_iso1: \"d x \\<le> d y \\<Longrightarrow> |z\\<rangle> x \\<le> |z\\<rangle> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d x \\<le> d y \\<Longrightarrow>  |z\\<rangle> x \\<le>  |z\\<rangle> y", "using fd_def local.dom_iso local.mult_isol"], ["proof (prove)\nusing this:\n   |?x\\<rangle> ?y = d (?x \\<cdot> ?y)\n  ?x \\<le> ?y \\<Longrightarrow> d ?x \\<le> d ?y\n  ?x \\<le> ?y \\<Longrightarrow> ?z \\<cdot> ?x \\<le> ?z \\<cdot> ?y\n\ngoal (1 subgoal):\n 1. d x \\<le> d y \\<Longrightarrow>  |z\\<rangle> x \\<le>  |z\\<rangle> y", "by fastforce"], ["", "lemma fd_iso2: \"x \\<le> y \\<Longrightarrow> |x\\<rangle> z \\<le> |y\\<rangle> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow>  |x\\<rangle> z \\<le>  |y\\<rangle> z", "by (simp add: fd_def dom_iso mult_isor)"], ["", "lemma fd_zero_var [simp]: \"|0\\<rangle> x = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  |(0::'a)\\<rangle> x = (0::'a)", "by (simp add: fd_def)"], ["", "lemma fd_subdist_1: \"|x\\<rangle> y \\<le> |x\\<rangle> (y + z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  |x\\<rangle> y \\<le>  |x\\<rangle> (y + z)", "by (simp add: fd_iso1)"], ["", "lemma fd_subdist_2: \"|x\\<rangle> (d y \\<cdot> d z) \\<le> |x\\<rangle> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  |x\\<rangle> (d y \\<cdot> d z) \\<le>  |x\\<rangle> y", "by (simp add: fd_iso1 dom_subid_aux2'')"], ["", "lemma fd_subdist: \"|x\\<rangle> (d y \\<cdot> d z) \\<le> |x\\<rangle> y \\<cdot> |x\\<rangle> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  |x\\<rangle> (d y \\<cdot> d z)\n    \\<le>  |x\\<rangle> y \\<cdot>  |x\\<rangle> z", "using fd_def fd_iso1 fd_subdist_2 dom_glb dom_subid_aux2"], ["proof (prove)\nusing this:\n   |?x\\<rangle> ?y = d (?x \\<cdot> ?y)\n  d ?x \\<le> d ?y \\<Longrightarrow>  |?z\\<rangle> ?x \\<le>  |?z\\<rangle> ?y\n   |?x\\<rangle> (d ?y \\<cdot> d ?z) \\<le>  |?x\\<rangle> ?y\n  \\<lbrakk>d ?x \\<le> d ?y; d ?x \\<le> d ?z\\<rbrakk>\n  \\<Longrightarrow> d ?x \\<le> d ?y \\<cdot> d ?z\n  d ?x \\<cdot> ?y \\<le> ?y\n\ngoal (1 subgoal):\n 1.  |x\\<rangle> (d y \\<cdot> d z)\n    \\<le>  |x\\<rangle> y \\<cdot>  |x\\<rangle> z", "by auto"], ["", "lemma fdia_export_1: \"d y \\<cdot> |x\\<rangle> z = |d y \\<cdot> x\\<rangle> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d y \\<cdot>  |x\\<rangle> z =  |d y \\<cdot> x\\<rangle> z", "by (simp add: fd_def mult_assoc)"], ["", "end"], ["", "context domain_semiring\n\nbegin"], ["", "lemma fdia_zero [simp]: \"|x\\<rangle> 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  |x\\<rangle> (0::'a) = (0::'a)", "by (simp add: fd_def)"], ["", "end"], ["", "subsection \\<open>Domain Kleene Algebras\\<close>"], ["", "text \\<open>We add the Kleene star to our considerations. Special domain axioms are not needed.\\<close>"], ["", "class domain_left_kleene_algebra = left_kleene_algebra_zerol + domain_semiringl\n\nbegin"], ["", "lemma dom_star [simp]: \"d (x\\<^sup>\\<star>) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d (x\\<^sup>\\<star>) = (1::'a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. d (x\\<^sup>\\<star>) = (1::'a)", "have \"d (x\\<^sup>\\<star>) = d (1 + x \\<cdot> x\\<^sup>\\<star>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d (x\\<^sup>\\<star>) = d ((1::'a) + x \\<cdot> x\\<^sup>\\<star>)", "by simp"], ["proof (state)\nthis:\n  d (x\\<^sup>\\<star>) = d ((1::'a) + x \\<cdot> x\\<^sup>\\<star>)\n\ngoal (1 subgoal):\n 1. d (x\\<^sup>\\<star>) = (1::'a)", "also"], ["proof (state)\nthis:\n  d (x\\<^sup>\\<star>) = d ((1::'a) + x \\<cdot> x\\<^sup>\\<star>)\n\ngoal (1 subgoal):\n 1. d (x\\<^sup>\\<star>) = (1::'a)", "have \"... = d 1 + d (x \\<cdot> x\\<^sup>\\<star>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d ((1::'a) + x \\<cdot> x\\<^sup>\\<star>) =\n    d (1::'a) + d (x \\<cdot> x\\<^sup>\\<star>)", "using dns3"], ["proof (prove)\nusing this:\n  d (?x + ?y) = d ?x + d ?y\n\ngoal (1 subgoal):\n 1. d ((1::'a) + x \\<cdot> x\\<^sup>\\<star>) =\n    d (1::'a) + d (x \\<cdot> x\\<^sup>\\<star>)", "by blast"], ["proof (state)\nthis:\n  d ((1::'a) + x \\<cdot> x\\<^sup>\\<star>) =\n  d (1::'a) + d (x \\<cdot> x\\<^sup>\\<star>)\n\ngoal (1 subgoal):\n 1. d (x\\<^sup>\\<star>) = (1::'a)", "finally"], ["proof (chain)\npicking this:\n  d (x\\<^sup>\\<star>) = d (1::'a) + d (x \\<cdot> x\\<^sup>\\<star>)", "show ?thesis"], ["proof (prove)\nusing this:\n  d (x\\<^sup>\\<star>) = d (1::'a) + d (x \\<cdot> x\\<^sup>\\<star>)\n\ngoal (1 subgoal):\n 1. d (x\\<^sup>\\<star>) = (1::'a)", "using add_commute local.dsr3"], ["proof (prove)\nusing this:\n  d (x\\<^sup>\\<star>) = d (1::'a) + d (x \\<cdot> x\\<^sup>\\<star>)\n  ?a + ?b = ?b + ?a\n  d ?x + (1::'a) = (1::'a)\n\ngoal (1 subgoal):\n 1. d (x\\<^sup>\\<star>) = (1::'a)", "by auto"], ["proof (state)\nthis:\n  d (x\\<^sup>\\<star>) = (1::'a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fdia_star_unfold [simp]: \"|1\\<rangle> y + |x\\<rangle> |x\\<^sup>\\<star>\\<rangle> y = |x\\<^sup>\\<star>\\<rangle> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  |(1::'a)\\<rangle> y +  |x\\<rangle>  |x\\<^sup>\\<star>\\<rangle> y =\n     |x\\<^sup>\\<star>\\<rangle> y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1.  |(1::'a)\\<rangle> y +  |x\\<rangle>  |x\\<^sup>\\<star>\\<rangle> y =\n     |x\\<^sup>\\<star>\\<rangle> y", "have \"|1\\<rangle> y + |x\\<rangle> |x\\<^sup>\\<star>\\<rangle> y = |1 + x \\<cdot> x\\<^sup>\\<star>\\<rangle> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  |(1::'a)\\<rangle> y +  |x\\<rangle>  |x\\<^sup>\\<star>\\<rangle> y =\n     |(1::'a) + x \\<cdot> x\\<^sup>\\<star>\\<rangle> y", "using local.fdia_add2 local.fdia_mult"], ["proof (prove)\nusing this:\n   |?x + ?y\\<rangle> ?z =  |?x\\<rangle> ?z +  |?y\\<rangle> ?z\n   |?x \\<cdot> ?y\\<rangle> ?z =  |?x\\<rangle>  |?y\\<rangle> ?z\n\ngoal (1 subgoal):\n 1.  |(1::'a)\\<rangle> y +  |x\\<rangle>  |x\\<^sup>\\<star>\\<rangle> y =\n     |(1::'a) + x \\<cdot> x\\<^sup>\\<star>\\<rangle> y", "by presburger"], ["proof (state)\nthis:\n   |(1::'a)\\<rangle> y +  |x\\<rangle>  |x\\<^sup>\\<star>\\<rangle> y =\n   |(1::'a) + x \\<cdot> x\\<^sup>\\<star>\\<rangle> y\n\ngoal (1 subgoal):\n 1.  |(1::'a)\\<rangle> y +  |x\\<rangle>  |x\\<^sup>\\<star>\\<rangle> y =\n     |x\\<^sup>\\<star>\\<rangle> y", "thus ?thesis"], ["proof (prove)\nusing this:\n   |(1::'a)\\<rangle> y +  |x\\<rangle>  |x\\<^sup>\\<star>\\<rangle> y =\n   |(1::'a) + x \\<cdot> x\\<^sup>\\<star>\\<rangle> y\n\ngoal (1 subgoal):\n 1.  |(1::'a)\\<rangle> y +  |x\\<rangle>  |x\\<^sup>\\<star>\\<rangle> y =\n     |x\\<^sup>\\<star>\\<rangle> y", "by simp"], ["proof (state)\nthis:\n   |(1::'a)\\<rangle> y +  |x\\<rangle>  |x\\<^sup>\\<star>\\<rangle> y =\n   |x\\<^sup>\\<star>\\<rangle> y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fdia_star_unfoldr [simp]: \"|1\\<rangle> y + |x\\<^sup>\\<star>\\<rangle> |x\\<rangle> y = |x\\<^sup>\\<star>\\<rangle> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  |(1::'a)\\<rangle> y +  |x\\<^sup>\\<star>\\<rangle>  |x\\<rangle> y =\n     |x\\<^sup>\\<star>\\<rangle> y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1.  |(1::'a)\\<rangle> y +  |x\\<^sup>\\<star>\\<rangle>  |x\\<rangle> y =\n     |x\\<^sup>\\<star>\\<rangle> y", "have \"|1\\<rangle> y + |x\\<^sup>\\<star>\\<rangle> |x\\<rangle> y = |1 + x\\<^sup>\\<star> \\<cdot> x\\<rangle> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  |(1::'a)\\<rangle> y +  |x\\<^sup>\\<star>\\<rangle>  |x\\<rangle> y =\n     |(1::'a) + x\\<^sup>\\<star> \\<cdot> x\\<rangle> y", "using fdia_add2 fdia_mult"], ["proof (prove)\nusing this:\n   |?x + ?y\\<rangle> ?z =  |?x\\<rangle> ?z +  |?y\\<rangle> ?z\n   |?x \\<cdot> ?y\\<rangle> ?z =  |?x\\<rangle>  |?y\\<rangle> ?z\n\ngoal (1 subgoal):\n 1.  |(1::'a)\\<rangle> y +  |x\\<^sup>\\<star>\\<rangle>  |x\\<rangle> y =\n     |(1::'a) + x\\<^sup>\\<star> \\<cdot> x\\<rangle> y", "by presburger"], ["proof (state)\nthis:\n   |(1::'a)\\<rangle> y +  |x\\<^sup>\\<star>\\<rangle>  |x\\<rangle> y =\n   |(1::'a) + x\\<^sup>\\<star> \\<cdot> x\\<rangle> y\n\ngoal (1 subgoal):\n 1.  |(1::'a)\\<rangle> y +  |x\\<^sup>\\<star>\\<rangle>  |x\\<rangle> y =\n     |x\\<^sup>\\<star>\\<rangle> y", "thus ?thesis"], ["proof (prove)\nusing this:\n   |(1::'a)\\<rangle> y +  |x\\<^sup>\\<star>\\<rangle>  |x\\<rangle> y =\n   |(1::'a) + x\\<^sup>\\<star> \\<cdot> x\\<rangle> y\n\ngoal (1 subgoal):\n 1.  |(1::'a)\\<rangle> y +  |x\\<^sup>\\<star>\\<rangle>  |x\\<rangle> y =\n     |x\\<^sup>\\<star>\\<rangle> y", "by simp"], ["proof (state)\nthis:\n   |(1::'a)\\<rangle> y +  |x\\<^sup>\\<star>\\<rangle>  |x\\<rangle> y =\n   |x\\<^sup>\\<star>\\<rangle> y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fdia_star_unfold_var [simp]: \"d y + |x\\<rangle> |x\\<^sup>\\<star>\\<rangle> y = |x\\<^sup>\\<star>\\<rangle> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d y +  |x\\<rangle>  |x\\<^sup>\\<star>\\<rangle> y =\n     |x\\<^sup>\\<star>\\<rangle> y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. d y +  |x\\<rangle>  |x\\<^sup>\\<star>\\<rangle> y =\n     |x\\<^sup>\\<star>\\<rangle> y", "have \"d y + |x\\<rangle> |x\\<^sup>\\<star>\\<rangle> y = |1\\<rangle> y + |x\\<rangle> |x\\<^sup>\\<star>\\<rangle> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d y +  |x\\<rangle>  |x\\<^sup>\\<star>\\<rangle> y =\n     |(1::'a)\\<rangle> y +  |x\\<rangle>  |x\\<^sup>\\<star>\\<rangle> y", "by simp"], ["proof (state)\nthis:\n  d y +  |x\\<rangle>  |x\\<^sup>\\<star>\\<rangle> y =\n   |(1::'a)\\<rangle> y +  |x\\<rangle>  |x\\<^sup>\\<star>\\<rangle> y\n\ngoal (1 subgoal):\n 1. d y +  |x\\<rangle>  |x\\<^sup>\\<star>\\<rangle> y =\n     |x\\<^sup>\\<star>\\<rangle> y", "also"], ["proof (state)\nthis:\n  d y +  |x\\<rangle>  |x\\<^sup>\\<star>\\<rangle> y =\n   |(1::'a)\\<rangle> y +  |x\\<rangle>  |x\\<^sup>\\<star>\\<rangle> y\n\ngoal (1 subgoal):\n 1. d y +  |x\\<rangle>  |x\\<^sup>\\<star>\\<rangle> y =\n     |x\\<^sup>\\<star>\\<rangle> y", "have \"... = |1 + x \\<cdot> x\\<^sup>\\<star>\\<rangle> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  |(1::'a)\\<rangle> y +  |x\\<rangle>  |x\\<^sup>\\<star>\\<rangle> y =\n     |(1::'a) + x \\<cdot> x\\<^sup>\\<star>\\<rangle> y", "using fdia_add2 fdia_mult"], ["proof (prove)\nusing this:\n   |?x + ?y\\<rangle> ?z =  |?x\\<rangle> ?z +  |?y\\<rangle> ?z\n   |?x \\<cdot> ?y\\<rangle> ?z =  |?x\\<rangle>  |?y\\<rangle> ?z\n\ngoal (1 subgoal):\n 1.  |(1::'a)\\<rangle> y +  |x\\<rangle>  |x\\<^sup>\\<star>\\<rangle> y =\n     |(1::'a) + x \\<cdot> x\\<^sup>\\<star>\\<rangle> y", "by presburger"], ["proof (state)\nthis:\n   |(1::'a)\\<rangle> y +  |x\\<rangle>  |x\\<^sup>\\<star>\\<rangle> y =\n   |(1::'a) + x \\<cdot> x\\<^sup>\\<star>\\<rangle> y\n\ngoal (1 subgoal):\n 1. d y +  |x\\<rangle>  |x\\<^sup>\\<star>\\<rangle> y =\n     |x\\<^sup>\\<star>\\<rangle> y", "finally"], ["proof (chain)\npicking this:\n  d y +  |x\\<rangle>  |x\\<^sup>\\<star>\\<rangle> y =\n   |(1::'a) + x \\<cdot> x\\<^sup>\\<star>\\<rangle> y", "show ?thesis"], ["proof (prove)\nusing this:\n  d y +  |x\\<rangle>  |x\\<^sup>\\<star>\\<rangle> y =\n   |(1::'a) + x \\<cdot> x\\<^sup>\\<star>\\<rangle> y\n\ngoal (1 subgoal):\n 1. d y +  |x\\<rangle>  |x\\<^sup>\\<star>\\<rangle> y =\n     |x\\<^sup>\\<star>\\<rangle> y", "by simp"], ["proof (state)\nthis:\n  d y +  |x\\<rangle>  |x\\<^sup>\\<star>\\<rangle> y =\n   |x\\<^sup>\\<star>\\<rangle> y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fdia_star_unfoldr_var [simp]: \"d y + |x\\<^sup>\\<star>\\<rangle> |x\\<rangle> y = |x\\<^sup>\\<star>\\<rangle> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d y +  |x\\<^sup>\\<star>\\<rangle>  |x\\<rangle> y =\n     |x\\<^sup>\\<star>\\<rangle> y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. d y +  |x\\<^sup>\\<star>\\<rangle>  |x\\<rangle> y =\n     |x\\<^sup>\\<star>\\<rangle> y", "have \"d y + |x\\<^sup>\\<star>\\<rangle> |x\\<rangle> y = |1\\<rangle> y + |x\\<^sup>\\<star>\\<rangle> |x\\<rangle> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d y +  |x\\<^sup>\\<star>\\<rangle>  |x\\<rangle> y =\n     |(1::'a)\\<rangle> y +  |x\\<^sup>\\<star>\\<rangle>  |x\\<rangle> y", "by simp"], ["proof (state)\nthis:\n  d y +  |x\\<^sup>\\<star>\\<rangle>  |x\\<rangle> y =\n   |(1::'a)\\<rangle> y +  |x\\<^sup>\\<star>\\<rangle>  |x\\<rangle> y\n\ngoal (1 subgoal):\n 1. d y +  |x\\<^sup>\\<star>\\<rangle>  |x\\<rangle> y =\n     |x\\<^sup>\\<star>\\<rangle> y", "also"], ["proof (state)\nthis:\n  d y +  |x\\<^sup>\\<star>\\<rangle>  |x\\<rangle> y =\n   |(1::'a)\\<rangle> y +  |x\\<^sup>\\<star>\\<rangle>  |x\\<rangle> y\n\ngoal (1 subgoal):\n 1. d y +  |x\\<^sup>\\<star>\\<rangle>  |x\\<rangle> y =\n     |x\\<^sup>\\<star>\\<rangle> y", "have \"... = |1 + x\\<^sup>\\<star> \\<cdot> x\\<rangle> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  |(1::'a)\\<rangle> y +  |x\\<^sup>\\<star>\\<rangle>  |x\\<rangle> y =\n     |(1::'a) + x\\<^sup>\\<star> \\<cdot> x\\<rangle> y", "using fdia_add2 fdia_mult"], ["proof (prove)\nusing this:\n   |?x + ?y\\<rangle> ?z =  |?x\\<rangle> ?z +  |?y\\<rangle> ?z\n   |?x \\<cdot> ?y\\<rangle> ?z =  |?x\\<rangle>  |?y\\<rangle> ?z\n\ngoal (1 subgoal):\n 1.  |(1::'a)\\<rangle> y +  |x\\<^sup>\\<star>\\<rangle>  |x\\<rangle> y =\n     |(1::'a) + x\\<^sup>\\<star> \\<cdot> x\\<rangle> y", "by presburger"], ["proof (state)\nthis:\n   |(1::'a)\\<rangle> y +  |x\\<^sup>\\<star>\\<rangle>  |x\\<rangle> y =\n   |(1::'a) + x\\<^sup>\\<star> \\<cdot> x\\<rangle> y\n\ngoal (1 subgoal):\n 1. d y +  |x\\<^sup>\\<star>\\<rangle>  |x\\<rangle> y =\n     |x\\<^sup>\\<star>\\<rangle> y", "finally"], ["proof (chain)\npicking this:\n  d y +  |x\\<^sup>\\<star>\\<rangle>  |x\\<rangle> y =\n   |(1::'a) + x\\<^sup>\\<star> \\<cdot> x\\<rangle> y", "show ?thesis"], ["proof (prove)\nusing this:\n  d y +  |x\\<^sup>\\<star>\\<rangle>  |x\\<rangle> y =\n   |(1::'a) + x\\<^sup>\\<star> \\<cdot> x\\<rangle> y\n\ngoal (1 subgoal):\n 1. d y +  |x\\<^sup>\\<star>\\<rangle>  |x\\<rangle> y =\n     |x\\<^sup>\\<star>\\<rangle> y", "by simp"], ["proof (state)\nthis:\n  d y +  |x\\<^sup>\\<star>\\<rangle>  |x\\<rangle> y =\n   |x\\<^sup>\\<star>\\<rangle> y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fdia_star_induct_var: \"|x\\<rangle> y \\<le> d y \\<Longrightarrow> |x\\<^sup>\\<star>\\<rangle> y \\<le> d y\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  |x\\<rangle> y \\<le> d y \\<Longrightarrow>\n     |x\\<^sup>\\<star>\\<rangle> y \\<le> d y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1.  |x\\<rangle> y \\<le> d y \\<Longrightarrow>\n     |x\\<^sup>\\<star>\\<rangle> y \\<le> d y", "assume a1: \"|x\\<rangle> y \\<le> d y\""], ["proof (state)\nthis:\n   |x\\<rangle> y \\<le> d y\n\ngoal (1 subgoal):\n 1.  |x\\<rangle> y \\<le> d y \\<Longrightarrow>\n     |x\\<^sup>\\<star>\\<rangle> y \\<le> d y", "hence \"x \\<cdot> d y \\<le> d y \\<cdot> x\""], ["proof (prove)\nusing this:\n   |x\\<rangle> y \\<le> d y\n\ngoal (1 subgoal):\n 1. x \\<cdot> d y \\<le> d y \\<cdot> x", "by (simp add: fdemodalisation2)"], ["proof (state)\nthis:\n  x \\<cdot> d y \\<le> d y \\<cdot> x\n\ngoal (1 subgoal):\n 1.  |x\\<rangle> y \\<le> d y \\<Longrightarrow>\n     |x\\<^sup>\\<star>\\<rangle> y \\<le> d y", "hence \"x\\<^sup>\\<star> \\<cdot> d y \\<le> d y \\<cdot> x\\<^sup>\\<star>\""], ["proof (prove)\nusing this:\n  x \\<cdot> d y \\<le> d y \\<cdot> x\n\ngoal (1 subgoal):\n 1. x\\<^sup>\\<star> \\<cdot> d y \\<le> d y \\<cdot> x\\<^sup>\\<star>", "by (simp add: star_sim1)"], ["proof (state)\nthis:\n  x\\<^sup>\\<star> \\<cdot> d y \\<le> d y \\<cdot> x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1.  |x\\<rangle> y \\<le> d y \\<Longrightarrow>\n     |x\\<^sup>\\<star>\\<rangle> y \\<le> d y", "thus ?thesis"], ["proof (prove)\nusing this:\n  x\\<^sup>\\<star> \\<cdot> d y \\<le> d y \\<cdot> x\\<^sup>\\<star>\n\ngoal (1 subgoal):\n 1.  |x\\<^sup>\\<star>\\<rangle> y \\<le> d y", "by (simp add: fdemodalisation2)"], ["proof (state)\nthis:\n   |x\\<^sup>\\<star>\\<rangle> y \\<le> d y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fdia_star_induct: \"d z + |x\\<rangle> y \\<le> d y \\<Longrightarrow> |x\\<^sup>\\<star>\\<rangle> z \\<le> d y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d z +  |x\\<rangle> y \\<le> d y \\<Longrightarrow>\n     |x\\<^sup>\\<star>\\<rangle> z \\<le> d y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. d z +  |x\\<rangle> y \\<le> d y \\<Longrightarrow>\n     |x\\<^sup>\\<star>\\<rangle> z \\<le> d y", "assume a: \"d z + |x\\<rangle> y \\<le> d y\""], ["proof (state)\nthis:\n  d z +  |x\\<rangle> y \\<le> d y\n\ngoal (1 subgoal):\n 1. d z +  |x\\<rangle> y \\<le> d y \\<Longrightarrow>\n     |x\\<^sup>\\<star>\\<rangle> z \\<le> d y", "hence b: \"d z \\<le> d y\" and c: \"|x\\<rangle> y \\<le> d y\""], ["proof (prove)\nusing this:\n  d z +  |x\\<rangle> y \\<le> d y\n\ngoal (1 subgoal):\n 1. d z \\<le> d y &&&  |x\\<rangle> y \\<le> d y", "apply (simp add: local.join.le_supE)"], ["proof (prove)\ngoal (1 subgoal):\n 1.  |x\\<rangle> y \\<le> d y", "using a"], ["proof (prove)\nusing this:\n  d z +  |x\\<rangle> y \\<le> d y\n\ngoal (1 subgoal):\n 1.  |x\\<rangle> y \\<le> d y", "by auto"], ["proof (state)\nthis:\n  d z \\<le> d y\n   |x\\<rangle> y \\<le> d y\n\ngoal (1 subgoal):\n 1. d z +  |x\\<rangle> y \\<le> d y \\<Longrightarrow>\n     |x\\<^sup>\\<star>\\<rangle> z \\<le> d y", "hence d: \"|x\\<^sup>\\<star>\\<rangle> z \\<le> |x\\<^sup>\\<star>\\<rangle> y\""], ["proof (prove)\nusing this:\n  d z \\<le> d y\n   |x\\<rangle> y \\<le> d y\n\ngoal (1 subgoal):\n 1.  |x\\<^sup>\\<star>\\<rangle> z \\<le>  |x\\<^sup>\\<star>\\<rangle> y", "using fd_def fd_iso1"], ["proof (prove)\nusing this:\n  d z \\<le> d y\n   |x\\<rangle> y \\<le> d y\n   |?x\\<rangle> ?y = d (?x \\<cdot> ?y)\n  d ?x \\<le> d ?y \\<Longrightarrow>  |?z\\<rangle> ?x \\<le>  |?z\\<rangle> ?y\n\ngoal (1 subgoal):\n 1.  |x\\<^sup>\\<star>\\<rangle> z \\<le>  |x\\<^sup>\\<star>\\<rangle> y", "by auto"], ["proof (state)\nthis:\n   |x\\<^sup>\\<star>\\<rangle> z \\<le>  |x\\<^sup>\\<star>\\<rangle> y\n\ngoal (1 subgoal):\n 1. d z +  |x\\<rangle> y \\<le> d y \\<Longrightarrow>\n     |x\\<^sup>\\<star>\\<rangle> z \\<le> d y", "have \"|x\\<^sup>\\<star>\\<rangle> y \\<le> d y\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  |x\\<^sup>\\<star>\\<rangle> y \\<le> d y", "using c fdia_star_induct_var"], ["proof (prove)\nusing this:\n   |x\\<rangle> y \\<le> d y\n   |?x\\<rangle> ?y \\<le> d ?y \\<Longrightarrow>\n   |?x\\<^sup>\\<star>\\<rangle> ?y \\<le> d ?y\n\ngoal (1 subgoal):\n 1.  |x\\<^sup>\\<star>\\<rangle> y \\<le> d y", "by blast"], ["proof (state)\nthis:\n   |x\\<^sup>\\<star>\\<rangle> y \\<le> d y\n\ngoal (1 subgoal):\n 1. d z +  |x\\<rangle> y \\<le> d y \\<Longrightarrow>\n     |x\\<^sup>\\<star>\\<rangle> z \\<le> d y", "thus ?thesis"], ["proof (prove)\nusing this:\n   |x\\<^sup>\\<star>\\<rangle> y \\<le> d y\n\ngoal (1 subgoal):\n 1.  |x\\<^sup>\\<star>\\<rangle> z \\<le> d y", "using d"], ["proof (prove)\nusing this:\n   |x\\<^sup>\\<star>\\<rangle> y \\<le> d y\n   |x\\<^sup>\\<star>\\<rangle> z \\<le>  |x\\<^sup>\\<star>\\<rangle> y\n\ngoal (1 subgoal):\n 1.  |x\\<^sup>\\<star>\\<rangle> z \\<le> d y", "by fastforce"], ["proof (state)\nthis:\n   |x\\<^sup>\\<star>\\<rangle> z \\<le> d y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma fdia_star_induct_eq: \"d z + |x\\<rangle> y = d y \\<Longrightarrow> |x\\<^sup>\\<star>\\<rangle> z \\<le> d y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d z +  |x\\<rangle> y = d y \\<Longrightarrow>\n     |x\\<^sup>\\<star>\\<rangle> z \\<le> d y", "by (simp add: fdia_star_induct)"], ["", "end"], ["", "class domain_kleene_algebra = kleene_algebra + domain_semiring\n\nbegin"], ["", "subclass domain_left_kleene_algebra"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.domain_left_kleene_algebra (+) (\\<cdot>) (1::'a) (0::'a) d (\\<le>)\n     (<) star", ".."], ["", "end"], ["", "end"]]}