{"file_name": "/home/qj213/afp-2021-10-22/thys/DiskPaxos/DiskPaxos_Chosen.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/DiskPaxos", "problem_names": ["lemma HEndPhase1_valueChosen_inp:\n  assumes act: \"HEndPhase1 s s' q\"\n  and inv2a: \"Inv2a s\"\n  and asm1: \"b \\<in> (UN p. Ballot p)\"\n  and bk_blocksOf: \"bk\\<in>blocksOf s r\"\n  and bk: \"bk\\<in> blocksSeen s q\"\n  and b_bal: \"b \\<le> bal bk\"\n  and asm3: \"maxBalInp s b v\"\n  and inv1: \"Inv1 s\"\n  shows \"inp(dblock s' q) = v\"", "lemma HEndPhase1_maxBalInp:\n  assumes act: \"HEndPhase1 s s' q\"\n    and asm1: \"b \\<in> (UN p. Ballot p)\"\n    and asm2: \"D\\<in>MajoritySet\"\n    and asm3: \"maxBalInp s b v\"\n    and asm4: \"\\<forall>d\\<in>D.  b \\<le> bal(disk s d p)\n                   \\<and>(\\<forall>q.(   phase s q = 1\n                          \\<and> b \\<le>mbal(dblock s q)\n                          \\<and> hasRead s q d p\n                         ) \\<longrightarrow> (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal(block br)))\"\n\n  and inv1: \"Inv1 s\"\n  and inv2a: \"Inv2a s\"\n  and inv2b: \"Inv2b s\"\n  shows \"maxBalInp s' b v\"", "lemma HEndPhase1_valueChosen2:\n  assumes act: \"HEndPhase1 s s' q\"\n    and asm4: \"\\<forall>d\\<in>D.   b \\<le> bal(disk s d p)\n                   \\<and>(\\<forall>q.(   phase s q = 1\n                          \\<and> b \\<le>mbal(dblock s q)\n                          \\<and> hasRead s q d p\n                         ) \\<longrightarrow> (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal(block br)))\" (is \"?P s\")\n  shows \"?P s'\"", "theorem HEndPhase1_valueChosen:\n  assumes act: \"HEndPhase1 s s' q\"\n  and vc: \"valueChosen s v\"\n  and inv1: \"Inv1 s\"\n  and inv2a: \"Inv2a s\"\n  and inv2b: \"Inv2b s\"\n  and v_input: \"v \\<in> Inputs\"\n  shows \"valueChosen s' v\"", "lemma HStartBallot_maxBalInp:\n  assumes act: \"HStartBallot s s' q\"\n    and asm3: \"maxBalInp s b v\"\n  shows \"maxBalInp s' b v\"", "lemma HStartBallot_valueChosen2:\n  assumes act: \"HStartBallot s s' q\"\n    and asm4: \"\\<forall>d\\<in>D.   b \\<le> bal(disk s d p)\n                   \\<and>(\\<forall>q.(   phase s q = 1\n                          \\<and> b \\<le>mbal(dblock s q)\n                          \\<and> hasRead s q d p\n                         ) \\<longrightarrow> (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal(block br)))\" (is \"?P s\")\n  shows \"?P s'\"", "theorem HStartBallot_valueChosen:\n  assumes act: \"HStartBallot s s' q\"\n  and vc: \"valueChosen s v\"\n  and v_input: \"v \\<in> Inputs\"\n  shows \"valueChosen s' v\"", "lemma HPhase1or2Write_maxBalInp:\n  assumes act: \"HPhase1or2Write s s' q d\"\n    and asm3: \"maxBalInp s b v\"\n  shows \"maxBalInp s' b v\"", "lemma HPhase1or2Write_valueChosen2:\n  assumes act: \"HPhase1or2Write s s' pp d\"\n    and asm2: \"D\\<in>MajoritySet\"\n    and asm4: \"\\<forall>d\\<in>D.   b \\<le> bal(disk s d p)\n                   \\<and>(\\<forall>q.(   phase s q = 1\n                          \\<and> b \\<le>mbal(dblock s q)\n                          \\<and> hasRead s q d p\n                         ) \\<longrightarrow> (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal(block br)))\" (is \"?P s\")\n    and inv4: \"HInv4a s pp\"\n  shows \"?P s'\"", "theorem HPhase1or2Write_valueChosen:\n  assumes act: \"HPhase1or2Write s s' q d\"\n  and vc: \"valueChosen s v\"\n  and v_input: \"v \\<in> Inputs\"\n  and inv4: \"HInv4a s q\"\n  shows \"valueChosen s' v\"", "lemma HPhase1or2ReadThen_maxBalInp:\n  assumes act: \"HPhase1or2ReadThen s s' q d p\"\n    and asm3: \"maxBalInp s b v\"\n  shows \"maxBalInp s' b v\"", "lemma HPhase1or2ReadThen_valueChosen2:\n  assumes act: \"HPhase1or2ReadThen s s' q d pp\"\n    and asm4: \"\\<forall>d\\<in>D.   b \\<le> bal(disk s d p)\n                   \\<and>(\\<forall>q.(   phase s q = 1\n                          \\<and> b \\<le>mbal(dblock s q)\n                          \\<and> hasRead s q d p\n                         ) \\<longrightarrow> (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal(block br)))\" (is \"?P s\")\n  shows \"?P s'\"", "theorem HPhase1or2ReadThen_valueChosen:\n  assumes act: \"HPhase1or2ReadThen s s' q d p\"\n  and vc: \"valueChosen s v\"\n  and v_input: \"v \\<in> Inputs\"\n  shows \"valueChosen s' v\"", "theorem HPhase1or2ReadElse_valueChosen:\n  \"\\<lbrakk> HPhase1or2ReadElse s s' p d r; valueChosen s v; v\\<in> Inputs  \\<rbrakk>\n     \\<Longrightarrow> valueChosen s' v\"", "lemma HEndPhase2_maxBalInp:\n  assumes act: \"HEndPhase2 s s' q\"\n    and asm3: \"maxBalInp s b v\"\n  shows \"maxBalInp s' b v\"", "lemma HEndPhase2_valueChosen2:\n  assumes act: \"HEndPhase2 s s' q\"\n    and asm4: \"\\<forall>d\\<in>D.   b \\<le> bal(disk s d p)\n                   \\<and>(\\<forall>q.(   phase s q = 1\n                          \\<and> b \\<le>mbal(dblock s q)\n                          \\<and> hasRead s q d p\n                         ) \\<longrightarrow> (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal(block br)))\" (is \"?P s\")\n  shows \"?P s'\"", "theorem HEndPhase2_valueChosen:\n  assumes act: \"HEndPhase2 s s' q\"\n  and vc: \"valueChosen s v\"\n  and v_input: \"v \\<in> Inputs\"\n  shows \"valueChosen s' v\"", "lemma HFail_maxBalInp:\n  assumes act: \"HFail s s' q\"\n    and asm1: \"b \\<in> (UN p. Ballot p)\"\n    and asm3: \"maxBalInp s b v\"\n  shows \"maxBalInp s' b v\"", "lemma HFail_valueChosen2:\n  assumes act: \"HFail s s' q\"\n    and asm4: \"\\<forall>d\\<in>D.   b \\<le> bal(disk s d p)\n                   \\<and>(\\<forall>q.(   phase s q = 1\n                          \\<and> b \\<le>mbal(dblock s q)\n                          \\<and> hasRead s q d p\n                         ) \\<longrightarrow> (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal(block br)))\" (is \"?P s\")\n  shows \"?P s'\"", "theorem HFail_valueChosen:\n  assumes act: \"HFail s s' q\"\n  and vc: \"valueChosen s v\"\n  and v_input: \"v \\<in> Inputs\"\n  shows \"valueChosen s' v\"", "lemma HPhase0Read_maxBalInp:\n  assumes act: \"HPhase0Read s s' q d\"\n    and asm3: \"maxBalInp s b v\"\n  shows \"maxBalInp s' b v\"", "lemma HPhase0Read_valueChosen2:\n  assumes act: \"HPhase0Read s s' qq dd\"\n    and asm4: \"\\<forall>d\\<in>D.   b \\<le> bal(disk s d p)\n                   \\<and>(\\<forall>q.(   phase s q = 1\n                          \\<and> b \\<le>mbal(dblock s q)\n                          \\<and> hasRead s q d p\n                         ) \\<longrightarrow> (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal(block br)))\" (is \"?P s\")\n  shows \"?P s'\"", "theorem HPhase0Read_valueChosen:\n  assumes act: \"HPhase0Read s s' q d\"\n  and vc: \"valueChosen s v\"\n  and v_input: \"v \\<in> Inputs\"\n  shows \"valueChosen s' v\"", "lemma HEndPhase0_maxBalInp:\n  assumes act: \"HEndPhase0 s s' q\"\n    and asm3: \"maxBalInp s b v\"\n    and inv1: \"Inv1 s\"\n  shows \"maxBalInp s' b v\"", "lemma HEndPhase0_valueChosen2:\n  assumes act: \"HEndPhase0 s s' q\"\n    and asm4: \"\\<forall>d\\<in>D.   b \\<le> bal(disk s d p)\n                   \\<and>(\\<forall>q.(   phase s q = 1\n                          \\<and> b \\<le>mbal(dblock s q)\n                          \\<and> hasRead s q d p\n                         ) \\<longrightarrow> (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal(block br)))\" (is \"?P s\")\n  shows \"?P s'\"", "theorem HEndPhase0_valueChosen:\n  assumes act: \"HEndPhase0 s s' q\"\n  and vc: \"valueChosen s v\"\n  and v_input: \"v \\<in> Inputs\"\n  and inv1: \"Inv1 s\"\n  shows \"valueChosen s' v\""], "translations": [["", "lemma HEndPhase1_valueChosen_inp:\n  assumes act: \"HEndPhase1 s s' q\"\n  and inv2a: \"Inv2a s\"\n  and asm1: \"b \\<in> (UN p. Ballot p)\"\n  and bk_blocksOf: \"bk\\<in>blocksOf s r\"\n  and bk: \"bk\\<in> blocksSeen s q\"\n  and b_bal: \"b \\<le> bal bk\"\n  and asm3: \"maxBalInp s b v\"\n  and inv1: \"Inv1 s\"\n  shows \"inp(dblock s' q) = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inp (dblock s' q) = v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. inp (dblock s' q) = v", "from bk_blocksOf inv2a"], ["proof (chain)\npicking this:\n  bk \\<in> blocksOf s r\n  Inv2a s", "have inv2a_bk: \"Inv2a_innermost s r bk\""], ["proof (prove)\nusing this:\n  bk \\<in> blocksOf s r\n  Inv2a s\n\ngoal (1 subgoal):\n 1. Inv2a_innermost s r bk", "by(auto simp add: Inv2a_def Inv2a_inner_def)"], ["proof (state)\nthis:\n  Inv2a_innermost s r bk\n\ngoal (1 subgoal):\n 1. inp (dblock s' q) = v", "from Ballot_nzero asm1"], ["proof (chain)\npicking this:\n  \\<forall>p. 0 \\<notin> Ballot p\n  b \\<in> \\<Union> (range Ballot)", "have \"0 < b \""], ["proof (prove)\nusing this:\n  \\<forall>p. 0 \\<notin> Ballot p\n  b \\<in> \\<Union> (range Ballot)\n\ngoal (1 subgoal):\n 1. 0 < b", "by auto"], ["proof (state)\nthis:\n  0 < b\n\ngoal (1 subgoal):\n 1. inp (dblock s' q) = v", "with b_bal"], ["proof (chain)\npicking this:\n  b \\<le> bal bk\n  0 < b", "have \"0< bal bk\""], ["proof (prove)\nusing this:\n  b \\<le> bal bk\n  0 < b\n\ngoal (1 subgoal):\n 1. 0 < bal bk", "by auto"], ["proof (state)\nthis:\n  0 < bal bk\n\ngoal (1 subgoal):\n 1. inp (dblock s' q) = v", "with inv2a_bk"], ["proof (chain)\npicking this:\n  Inv2a_innermost s r bk\n  0 < bal bk", "have \"inp bk \\<noteq> NotAnInput\""], ["proof (prove)\nusing this:\n  Inv2a_innermost s r bk\n  0 < bal bk\n\ngoal (1 subgoal):\n 1. inp bk \\<noteq> NotAnInput", "by(auto simp add: Inv2a_innermost_def)"], ["proof (state)\nthis:\n  inp bk \\<noteq> NotAnInput\n\ngoal (1 subgoal):\n 1. inp (dblock s' q) = v", "with bk InputsOrNi"], ["proof (chain)\npicking this:\n  bk \\<in> blocksSeen s q\n  UNIV = Inputs \\<union> {NotAnInput}\n  inp bk \\<noteq> NotAnInput", "have bk_noninit: \"bk \\<in> nonInitBlks s q\""], ["proof (prove)\nusing this:\n  bk \\<in> blocksSeen s q\n  UNIV = Inputs \\<union> {NotAnInput}\n  inp bk \\<noteq> NotAnInput\n\ngoal (1 subgoal):\n 1. bk \\<in> nonInitBlks s q", "by(auto simp add: nonInitBlks_def blocksSeen_def \n                      allBlocksRead_def allRdBlks_def)"], ["proof (state)\nthis:\n  bk \\<in> nonInitBlks s q\n\ngoal (1 subgoal):\n 1. inp (dblock s' q) = v", "with maxBlk_in_nonInitBlks[OF this inv1] b_bal"], ["proof (chain)\npicking this:\n  maxBlk s q \\<in> nonInitBlks s q \\<and>\n  (\\<forall>c\\<in>nonInitBlks s q. bal c \\<le> bal (maxBlk s q))\n  b \\<le> bal bk\n  bk \\<in> nonInitBlks s q", "have maxBlk_b: \"b \\<le> bal (maxBlk s q)\""], ["proof (prove)\nusing this:\n  maxBlk s q \\<in> nonInitBlks s q \\<and>\n  (\\<forall>c\\<in>nonInitBlks s q. bal c \\<le> bal (maxBlk s q))\n  b \\<le> bal bk\n  bk \\<in> nonInitBlks s q\n\ngoal (1 subgoal):\n 1. b \\<le> bal (maxBlk s q)", "by auto"], ["proof (state)\nthis:\n  b \\<le> bal (maxBlk s q)\n\ngoal (1 subgoal):\n 1. inp (dblock s' q) = v", "from maxBlk_in_nonInitBlks[OF bk_noninit inv1]"], ["proof (chain)\npicking this:\n  maxBlk s q \\<in> nonInitBlks s q \\<and>\n  (\\<forall>c\\<in>nonInitBlks s q. bal c \\<le> bal (maxBlk s q))", "have \"\\<exists>p d. maxBlk s q \\<in> blocksSeen s p\""], ["proof (prove)\nusing this:\n  maxBlk s q \\<in> nonInitBlks s q \\<and>\n  (\\<forall>c\\<in>nonInitBlks s q. bal c \\<le> bal (maxBlk s q))\n\ngoal (1 subgoal):\n 1. \\<exists>p d. maxBlk s q \\<in> blocksSeen s p", "by(auto simp add: nonInitBlks_def blocksSeen_def)"], ["proof (state)\nthis:\n  \\<exists>p d. maxBlk s q \\<in> blocksSeen s p\n\ngoal (1 subgoal):\n 1. inp (dblock s' q) = v", "hence \"\\<exists>p. maxBlk s q \\<in> blocksOf s p\""], ["proof (prove)\nusing this:\n  \\<exists>p d. maxBlk s q \\<in> blocksSeen s p\n\ngoal (1 subgoal):\n 1. \\<exists>p. maxBlk s q \\<in> blocksOf s p", "by(auto simp add: blocksOf_def blocksSeen_def \n      allBlocksRead_def allRdBlks_def rdBy_def, force)"], ["proof (state)\nthis:\n  \\<exists>p. maxBlk s q \\<in> blocksOf s p\n\ngoal (1 subgoal):\n 1. inp (dblock s' q) = v", "with maxBlk_b asm3"], ["proof (chain)\npicking this:\n  b \\<le> bal (maxBlk s q)\n  maxBalInp s b v\n  \\<exists>p. maxBlk s q \\<in> blocksOf s p", "have \"inp(maxBlk s q) = v\""], ["proof (prove)\nusing this:\n  b \\<le> bal (maxBlk s q)\n  maxBalInp s b v\n  \\<exists>p. maxBlk s q \\<in> blocksOf s p\n\ngoal (1 subgoal):\n 1. inp (maxBlk s q) = v", "by(auto simp add: maxBalInp_def allBlocks_def)"], ["proof (state)\nthis:\n  inp (maxBlk s q) = v\n\ngoal (1 subgoal):\n 1. inp (dblock s' q) = v", "with bk_noninit act"], ["proof (chain)\npicking this:\n  bk \\<in> nonInitBlks s q\n  HEndPhase1 s s' q\n  inp (maxBlk s q) = v", "show ?thesis"], ["proof (prove)\nusing this:\n  bk \\<in> nonInitBlks s q\n  HEndPhase1 s s' q\n  inp (maxBlk s q) = v\n\ngoal (1 subgoal):\n 1. inp (dblock s' q) = v", "by(auto simp add: EndPhase1_def)"], ["proof (state)\nthis:\n  inp (dblock s' q) = v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HEndPhase1_maxBalInp:\n  assumes act: \"HEndPhase1 s s' q\"\n    and asm1: \"b \\<in> (UN p. Ballot p)\"\n    and asm2: \"D\\<in>MajoritySet\"\n    and asm3: \"maxBalInp s b v\"\n    and asm4: \"\\<forall>d\\<in>D.  b \\<le> bal(disk s d p)\n                   \\<and>(\\<forall>q.(   phase s q = 1\n                          \\<and> b \\<le>mbal(dblock s q)\n                          \\<and> hasRead s q d p\n                         ) \\<longrightarrow> (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal(block br)))\"\n\n  and inv1: \"Inv1 s\"\n  and inv2a: \"Inv2a s\"\n  and inv2b: \"Inv2b s\"\n  shows \"maxBalInp s' b v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. maxBalInp s' b v", "proof(cases \"b \\<le> mbal(dblock s q)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. b \\<le> mbal (dblock s q) \\<Longrightarrow> maxBalInp s' b v\n 2. \\<not> b \\<le> mbal (dblock s q) \\<Longrightarrow> maxBalInp s' b v", "case True"], ["proof (state)\nthis:\n  b \\<le> mbal (dblock s q)\n\ngoal (2 subgoals):\n 1. b \\<le> mbal (dblock s q) \\<Longrightarrow> maxBalInp s' b v\n 2. \\<not> b \\<le> mbal (dblock s q) \\<Longrightarrow> maxBalInp s' b v", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. maxBalInp s' b v", "proof(cases \"p\\<noteq>q\")"], ["proof (state)\ngoal (2 subgoals):\n 1. p \\<noteq> q \\<Longrightarrow> maxBalInp s' b v\n 2. \\<not> p \\<noteq> q \\<Longrightarrow> maxBalInp s' b v", "assume pnq: \"p\\<noteq>q\""], ["proof (state)\nthis:\n  p \\<noteq> q\n\ngoal (2 subgoals):\n 1. p \\<noteq> q \\<Longrightarrow> maxBalInp s' b v\n 2. \\<not> p \\<noteq> q \\<Longrightarrow> maxBalInp s' b v", "have \"\\<exists>d\\<in>D. hasRead s q d p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>d\\<in>D. hasRead s q d p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>d\\<in>D. hasRead s q d p", "from act"], ["proof (chain)\npicking this:\n  HEndPhase1 s s' q", "have \"IsMajority({d. d\\<in> disksWritten s q \\<and> (\\<forall>r\\<in>UNIV-{q}. hasRead s q d r)})\" (is \"IsMajority(?M)\")"], ["proof (prove)\nusing this:\n  HEndPhase1 s s' q\n\ngoal (1 subgoal):\n 1. IsMajority\n     {d \\<in> disksWritten s q. \\<forall>r\\<in>UNIV - {q}. hasRead s q d r}", "by(auto simp add: EndPhase1_def)"], ["proof (state)\nthis:\n  IsMajority\n   {d \\<in> disksWritten s q. \\<forall>r\\<in>UNIV - {q}. hasRead s q d r}\n\ngoal (1 subgoal):\n 1. \\<exists>d\\<in>D. hasRead s q d p", "with majorities_intersect asm2"], ["proof (chain)\npicking this:\n  \\<forall>S T.\n     IsMajority S \\<and> IsMajority T \\<longrightarrow>\n     S \\<inter> T \\<noteq> {}\n  D \\<in> MajoritySet\n  IsMajority\n   {d \\<in> disksWritten s q. \\<forall>r\\<in>UNIV - {q}. hasRead s q d r}", "have \"D \\<inter> ?M \\<noteq> {}\""], ["proof (prove)\nusing this:\n  \\<forall>S T.\n     IsMajority S \\<and> IsMajority T \\<longrightarrow>\n     S \\<inter> T \\<noteq> {}\n  D \\<in> MajoritySet\n  IsMajority\n   {d \\<in> disksWritten s q. \\<forall>r\\<in>UNIV - {q}. hasRead s q d r}\n\ngoal (1 subgoal):\n 1. D \\<inter>\n    {d \\<in> disksWritten s q.\n     \\<forall>r\\<in>UNIV - {q}. hasRead s q d r} \\<noteq>\n    {}", "by(auto simp add: MajoritySet_def)"], ["proof (state)\nthis:\n  D \\<inter>\n  {d \\<in> disksWritten s q.\n   \\<forall>r\\<in>UNIV - {q}. hasRead s q d r} \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. \\<exists>d\\<in>D. hasRead s q d p", "hence \"\\<exists>d\\<in>D. (\\<forall>r\\<in>UNIV-{q}. hasRead s q d r)\""], ["proof (prove)\nusing this:\n  D \\<inter>\n  {d \\<in> disksWritten s q.\n   \\<forall>r\\<in>UNIV - {q}. hasRead s q d r} \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. \\<exists>d\\<in>D. \\<forall>r\\<in>UNIV - {q}. hasRead s q d r", "by auto"], ["proof (state)\nthis:\n  \\<exists>d\\<in>D. \\<forall>r\\<in>UNIV - {q}. hasRead s q d r\n\ngoal (1 subgoal):\n 1. \\<exists>d\\<in>D. hasRead s q d p", "with pnq"], ["proof (chain)\npicking this:\n  p \\<noteq> q\n  \\<exists>d\\<in>D. \\<forall>r\\<in>UNIV - {q}. hasRead s q d r", "show ?thesis"], ["proof (prove)\nusing this:\n  p \\<noteq> q\n  \\<exists>d\\<in>D. \\<forall>r\\<in>UNIV - {q}. hasRead s q d r\n\ngoal (1 subgoal):\n 1. \\<exists>d\\<in>D. hasRead s q d p", "by auto"], ["proof (state)\nthis:\n  \\<exists>d\\<in>D. hasRead s q d p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>d\\<in>D. hasRead s q d p\n\ngoal (2 subgoals):\n 1. p \\<noteq> q \\<Longrightarrow> maxBalInp s' b v\n 2. \\<not> p \\<noteq> q \\<Longrightarrow> maxBalInp s' b v", "then"], ["proof (chain)\npicking this:\n  \\<exists>d\\<in>D. hasRead s q d p", "obtain d where p41: \"d\\<in>D \\<and> hasRead s q d p\""], ["proof (prove)\nusing this:\n  \\<exists>d\\<in>D. hasRead s q d p\n\ngoal (1 subgoal):\n 1. (\\<And>d.\n        d \\<in> D \\<and> hasRead s q d p \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  d \\<in> D \\<and> hasRead s q d p\n\ngoal (2 subgoals):\n 1. p \\<noteq> q \\<Longrightarrow> maxBalInp s' b v\n 2. \\<not> p \\<noteq> q \\<Longrightarrow> maxBalInp s' b v", "with asm4 asm3 act True"], ["proof (chain)\npicking this:\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s d p) \\<and>\n     (\\<forall>q.\n         phase s q = 1 \\<and>\n         b \\<le> mbal (dblock s q) \\<and> hasRead s q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)))\n  maxBalInp s b v\n  HEndPhase1 s s' q\n  b \\<le> mbal (dblock s q)\n  d \\<in> D \\<and> hasRead s q d p", "have p42: \"\\<exists>br\\<in>blocksRead s q d. b\\<le> bal(block br)\""], ["proof (prove)\nusing this:\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s d p) \\<and>\n     (\\<forall>q.\n         phase s q = 1 \\<and>\n         b \\<le> mbal (dblock s q) \\<and> hasRead s q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)))\n  maxBalInp s b v\n  HEndPhase1 s s' q\n  b \\<le> mbal (dblock s q)\n  d \\<in> D \\<and> hasRead s q d p\n\ngoal (1 subgoal):\n 1. \\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)", "by(auto simp add: EndPhase1_def)"], ["proof (state)\nthis:\n  \\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)\n\ngoal (2 subgoals):\n 1. p \\<noteq> q \\<Longrightarrow> maxBalInp s' b v\n 2. \\<not> p \\<noteq> q \\<Longrightarrow> maxBalInp s' b v", "from True act"], ["proof (chain)\npicking this:\n  b \\<le> mbal (dblock s q)\n  HEndPhase1 s s' q", "have thesis_L: \"b\\<le>bal (dblock s' q)\""], ["proof (prove)\nusing this:\n  b \\<le> mbal (dblock s q)\n  HEndPhase1 s s' q\n\ngoal (1 subgoal):\n 1. b \\<le> bal (dblock s' q)", "by(auto simp add: EndPhase1_def)"], ["proof (state)\nthis:\n  b \\<le> bal (dblock s' q)\n\ngoal (2 subgoals):\n 1. p \\<noteq> q \\<Longrightarrow> maxBalInp s' b v\n 2. \\<not> p \\<noteq> q \\<Longrightarrow> maxBalInp s' b v", "from p42"], ["proof (chain)\npicking this:\n  \\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)", "have \"inp(dblock s' q) = v\""], ["proof (prove)\nusing this:\n  \\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)\n\ngoal (1 subgoal):\n 1. inp (dblock s' q) = v", "proof auto"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>br.\n       \\<lbrakk>br \\<in> blocksRead s q d; b \\<le> bal (block br)\\<rbrakk>\n       \\<Longrightarrow> inp (dblock s' q) = v", "fix br"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>br.\n       \\<lbrakk>br \\<in> blocksRead s q d; b \\<le> bal (block br)\\<rbrakk>\n       \\<Longrightarrow> inp (dblock s' q) = v", "assume br: \"br \\<in> blocksRead s q d\"\n        and b_bal: \" b \\<le> bal (block br)\""], ["proof (state)\nthis:\n  br \\<in> blocksRead s q d\n  b \\<le> bal (block br)\n\ngoal (1 subgoal):\n 1. \\<And>br.\n       \\<lbrakk>br \\<in> blocksRead s q d; b \\<le> bal (block br)\\<rbrakk>\n       \\<Longrightarrow> inp (dblock s' q) = v", "hence br_rdBy: \"br \\<in> (UN q d. rdBy s (proc br) q d)\""], ["proof (prove)\nusing this:\n  br \\<in> blocksRead s q d\n  b \\<le> bal (block br)\n\ngoal (1 subgoal):\n 1. br \\<in> (\\<Union>q. \\<Union> (range (rdBy s (proc br) q)))", "by(auto simp add:  rdBy_def)"], ["proof (state)\nthis:\n  br \\<in> (\\<Union>q. \\<Union> (range (rdBy s (proc br) q)))\n\ngoal (1 subgoal):\n 1. \\<And>br.\n       \\<lbrakk>br \\<in> blocksRead s q d; b \\<le> bal (block br)\\<rbrakk>\n       \\<Longrightarrow> inp (dblock s' q) = v", "hence br_blksof: \"block br \\<in> blocksOf s (proc br)\""], ["proof (prove)\nusing this:\n  br \\<in> (\\<Union>q. \\<Union> (range (rdBy s (proc br) q)))\n\ngoal (1 subgoal):\n 1. block br \\<in> blocksOf s (proc br)", "by(auto simp add: blocksOf_def)"], ["proof (state)\nthis:\n  block br \\<in> blocksOf s (proc br)\n\ngoal (1 subgoal):\n 1. \\<And>br.\n       \\<lbrakk>br \\<in> blocksRead s q d; b \\<le> bal (block br)\\<rbrakk>\n       \\<Longrightarrow> inp (dblock s' q) = v", "from br"], ["proof (chain)\npicking this:\n  br \\<in> blocksRead s q d", "have br_bseen: \"block br\\<in> blocksSeen s q\""], ["proof (prove)\nusing this:\n  br \\<in> blocksRead s q d\n\ngoal (1 subgoal):\n 1. block br \\<in> blocksSeen s q", "by(auto simp add: blocksSeen_def allBlocksRead_def allRdBlks_def)"], ["proof (state)\nthis:\n  block br \\<in> blocksSeen s q\n\ngoal (1 subgoal):\n 1. \\<And>br.\n       \\<lbrakk>br \\<in> blocksRead s q d; b \\<le> bal (block br)\\<rbrakk>\n       \\<Longrightarrow> inp (dblock s' q) = v", "from HEndPhase1_valueChosen_inp[OF act inv2a asm1 br_blksof br_bseen b_bal asm3 inv1]"], ["proof (chain)\npicking this:\n  inp (dblock s' q) = v", "show ?thesis"], ["proof (prove)\nusing this:\n  inp (dblock s' q) = v\n\ngoal (1 subgoal):\n 1. inp (dblock s' q) = v", "."], ["proof (state)\nthis:\n  inp (dblock s' q) = v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inp (dblock s' q) = v\n\ngoal (2 subgoals):\n 1. p \\<noteq> q \\<Longrightarrow> maxBalInp s' b v\n 2. \\<not> p \\<noteq> q \\<Longrightarrow> maxBalInp s' b v", "with asm3 HEndPhase1_allBlocks[OF act]"], ["proof (chain)\npicking this:\n  maxBalInp s b v\n  allBlocks s' \\<subseteq> allBlocks s \\<union> {dblock s' q}\n  inp (dblock s' q) = v", "show ?thesis"], ["proof (prove)\nusing this:\n  maxBalInp s b v\n  allBlocks s' \\<subseteq> allBlocks s \\<union> {dblock s' q}\n  inp (dblock s' q) = v\n\ngoal (1 subgoal):\n 1. maxBalInp s' b v", "by(auto simp add: maxBalInp_def)"], ["proof (state)\nthis:\n  maxBalInp s' b v\n\ngoal (1 subgoal):\n 1. \\<not> p \\<noteq> q \\<Longrightarrow> maxBalInp s' b v", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> p \\<noteq> q \\<Longrightarrow> maxBalInp s' b v", "case False"], ["proof (state)\nthis:\n  \\<not> p \\<noteq> q\n\ngoal (1 subgoal):\n 1. \\<not> p \\<noteq> q \\<Longrightarrow> maxBalInp s' b v", "from asm4"], ["proof (chain)\npicking this:\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s d p) \\<and>\n     (\\<forall>q.\n         phase s q = 1 \\<and>\n         b \\<le> mbal (dblock s q) \\<and> hasRead s q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)))", "have p41: \"\\<forall>d\\<in>D. b \\<le> bal(disk s d p)\""], ["proof (prove)\nusing this:\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s d p) \\<and>\n     (\\<forall>q.\n         phase s q = 1 \\<and>\n         b \\<le> mbal (dblock s q) \\<and> hasRead s q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)))\n\ngoal (1 subgoal):\n 1. \\<forall>d\\<in>D. b \\<le> bal (disk s d p)", "by auto"], ["proof (state)\nthis:\n  \\<forall>d\\<in>D. b \\<le> bal (disk s d p)\n\ngoal (1 subgoal):\n 1. \\<not> p \\<noteq> q \\<Longrightarrow> maxBalInp s' b v", "have p42: \"\\<exists>d\\<in>D. disk s d p = dblock s p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>d\\<in>D. disk s d p = dblock s p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>d\\<in>D. disk s d p = dblock s p", "from act"], ["proof (chain)\npicking this:\n  HEndPhase1 s s' q", "have \"IsMajority {d. d\\<in>disksWritten s q \\<and> (\\<forall>p\\<in>UNIV-{q}. hasRead s q d p)}\" (is \"IsMajority ?S\")"], ["proof (prove)\nusing this:\n  HEndPhase1 s s' q\n\ngoal (1 subgoal):\n 1. IsMajority\n     {d \\<in> disksWritten s q. \\<forall>p\\<in>UNIV - {q}. hasRead s q d p}", "by(auto simp add: EndPhase1_def)"], ["proof (state)\nthis:\n  IsMajority\n   {d \\<in> disksWritten s q. \\<forall>p\\<in>UNIV - {q}. hasRead s q d p}\n\ngoal (1 subgoal):\n 1. \\<exists>d\\<in>D. disk s d p = dblock s p", "with majorities_intersect asm2"], ["proof (chain)\npicking this:\n  \\<forall>S T.\n     IsMajority S \\<and> IsMajority T \\<longrightarrow>\n     S \\<inter> T \\<noteq> {}\n  D \\<in> MajoritySet\n  IsMajority\n   {d \\<in> disksWritten s q. \\<forall>p\\<in>UNIV - {q}. hasRead s q d p}", "have \"D \\<inter> ?S \\<noteq> {}\""], ["proof (prove)\nusing this:\n  \\<forall>S T.\n     IsMajority S \\<and> IsMajority T \\<longrightarrow>\n     S \\<inter> T \\<noteq> {}\n  D \\<in> MajoritySet\n  IsMajority\n   {d \\<in> disksWritten s q. \\<forall>p\\<in>UNIV - {q}. hasRead s q d p}\n\ngoal (1 subgoal):\n 1. D \\<inter>\n    {d \\<in> disksWritten s q.\n     \\<forall>p\\<in>UNIV - {q}. hasRead s q d p} \\<noteq>\n    {}", "by(auto simp add: MajoritySet_def)"], ["proof (state)\nthis:\n  D \\<inter>\n  {d \\<in> disksWritten s q.\n   \\<forall>p\\<in>UNIV - {q}. hasRead s q d p} \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. \\<exists>d\\<in>D. disk s d p = dblock s p", "hence \"\\<exists>d\\<in>D. d\\<in>disksWritten s q\""], ["proof (prove)\nusing this:\n  D \\<inter>\n  {d \\<in> disksWritten s q.\n   \\<forall>p\\<in>UNIV - {q}. hasRead s q d p} \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. \\<exists>d\\<in>D. d \\<in> disksWritten s q", "by auto"], ["proof (state)\nthis:\n  \\<exists>d\\<in>D. d \\<in> disksWritten s q\n\ngoal (1 subgoal):\n 1. \\<exists>d\\<in>D. disk s d p = dblock s p", "with inv2b False"], ["proof (chain)\npicking this:\n  Inv2b s\n  \\<not> p \\<noteq> q\n  \\<exists>d\\<in>D. d \\<in> disksWritten s q", "show ?thesis"], ["proof (prove)\nusing this:\n  Inv2b s\n  \\<not> p \\<noteq> q\n  \\<exists>d\\<in>D. d \\<in> disksWritten s q\n\ngoal (1 subgoal):\n 1. \\<exists>d\\<in>D. disk s d p = dblock s p", "by(auto simp add: Inv2b_def Inv2b_inner_def)"], ["proof (state)\nthis:\n  \\<exists>d\\<in>D. disk s d p = dblock s p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>d\\<in>D. disk s d p = dblock s p\n\ngoal (1 subgoal):\n 1. \\<not> p \\<noteq> q \\<Longrightarrow> maxBalInp s' b v", "have \"inp(dblock s' q) = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inp (dblock s' q) = v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. inp (dblock s' q) = v", "from p42 p41 False"], ["proof (chain)\npicking this:\n  \\<exists>d\\<in>D. disk s d p = dblock s p\n  \\<forall>d\\<in>D. b \\<le> bal (disk s d p)\n  \\<not> p \\<noteq> q", "have b_bal: \"b \\<le> bal(dblock s q)\""], ["proof (prove)\nusing this:\n  \\<exists>d\\<in>D. disk s d p = dblock s p\n  \\<forall>d\\<in>D. b \\<le> bal (disk s d p)\n  \\<not> p \\<noteq> q\n\ngoal (1 subgoal):\n 1. b \\<le> bal (dblock s q)", "by auto"], ["proof (state)\nthis:\n  b \\<le> bal (dblock s q)\n\ngoal (1 subgoal):\n 1. inp (dblock s' q) = v", "have db_blksof: \"(dblock s q) \\<in> blocksOf s q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dblock s q \\<in> blocksOf s q", "by(auto simp add: blocksOf_def)"], ["proof (state)\nthis:\n  dblock s q \\<in> blocksOf s q\n\ngoal (1 subgoal):\n 1. inp (dblock s' q) = v", "have db_bseen: \"(dblock s q) \\<in> blocksSeen s q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dblock s q \\<in> blocksSeen s q", "by(auto simp add: blocksSeen_def)"], ["proof (state)\nthis:\n  dblock s q \\<in> blocksSeen s q\n\ngoal (1 subgoal):\n 1. inp (dblock s' q) = v", "from HEndPhase1_valueChosen_inp[OF act inv2a asm1 db_blksof db_bseen b_bal asm3 inv1]"], ["proof (chain)\npicking this:\n  inp (dblock s' q) = v", "show ?thesis"], ["proof (prove)\nusing this:\n  inp (dblock s' q) = v\n\ngoal (1 subgoal):\n 1. inp (dblock s' q) = v", "."], ["proof (state)\nthis:\n  inp (dblock s' q) = v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inp (dblock s' q) = v\n\ngoal (1 subgoal):\n 1. \\<not> p \\<noteq> q \\<Longrightarrow> maxBalInp s' b v", "with asm3 HEndPhase1_allBlocks[OF act]"], ["proof (chain)\npicking this:\n  maxBalInp s b v\n  allBlocks s' \\<subseteq> allBlocks s \\<union> {dblock s' q}\n  inp (dblock s' q) = v", "show ?thesis"], ["proof (prove)\nusing this:\n  maxBalInp s b v\n  allBlocks s' \\<subseteq> allBlocks s \\<union> {dblock s' q}\n  inp (dblock s' q) = v\n\ngoal (1 subgoal):\n 1. maxBalInp s' b v", "by(auto simp add: maxBalInp_def)"], ["proof (state)\nthis:\n  maxBalInp s' b v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  maxBalInp s' b v\n\ngoal (1 subgoal):\n 1. \\<not> b \\<le> mbal (dblock s q) \\<Longrightarrow> maxBalInp s' b v", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> b \\<le> mbal (dblock s q) \\<Longrightarrow> maxBalInp s' b v", "case False"], ["proof (state)\nthis:\n  \\<not> b \\<le> mbal (dblock s q)\n\ngoal (1 subgoal):\n 1. \\<not> b \\<le> mbal (dblock s q) \\<Longrightarrow> maxBalInp s' b v", "have \"dblock s' q \\<in> allBlocks s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dblock s' q \\<in> allBlocks s'", "by(auto simp add: allBlocks_def blocksOf_def)"], ["proof (state)\nthis:\n  dblock s' q \\<in> allBlocks s'\n\ngoal (1 subgoal):\n 1. \\<not> b \\<le> mbal (dblock s q) \\<Longrightarrow> maxBalInp s' b v", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. maxBalInp s' b v", "proof(auto simp add: maxBalInp_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>bk.\n       \\<lbrakk>bk \\<in> allBlocks s'; b \\<le> bal bk\\<rbrakk>\n       \\<Longrightarrow> inp bk = v", "fix bk"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>bk.\n       \\<lbrakk>bk \\<in> allBlocks s'; b \\<le> bal bk\\<rbrakk>\n       \\<Longrightarrow> inp bk = v", "assume bk: \"bk \\<in> allBlocks s'\"\n      and b_bal: \"b \\<le> bal bk\""], ["proof (state)\nthis:\n  bk \\<in> allBlocks s'\n  b \\<le> bal bk\n\ngoal (1 subgoal):\n 1. \\<And>bk.\n       \\<lbrakk>bk \\<in> allBlocks s'; b \\<le> bal bk\\<rbrakk>\n       \\<Longrightarrow> inp bk = v", "from subsetD[OF HEndPhase1_allBlocks[OF act] bk]"], ["proof (chain)\npicking this:\n  bk \\<in> allBlocks s \\<union> {dblock s' q}", "show \"inp bk = v\""], ["proof (prove)\nusing this:\n  bk \\<in> allBlocks s \\<union> {dblock s' q}\n\ngoal (1 subgoal):\n 1. inp bk = v", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. bk \\<in> allBlocks s \\<Longrightarrow> inp bk = v\n 2. bk \\<in> {dblock s' q} \\<Longrightarrow> inp bk = v", "assume bk: \"bk \\<in> allBlocks s\""], ["proof (state)\nthis:\n  bk \\<in> allBlocks s\n\ngoal (2 subgoals):\n 1. bk \\<in> allBlocks s \\<Longrightarrow> inp bk = v\n 2. bk \\<in> {dblock s' q} \\<Longrightarrow> inp bk = v", "with asm3 b_bal"], ["proof (chain)\npicking this:\n  maxBalInp s b v\n  b \\<le> bal bk\n  bk \\<in> allBlocks s", "show ?thesis"], ["proof (prove)\nusing this:\n  maxBalInp s b v\n  b \\<le> bal bk\n  bk \\<in> allBlocks s\n\ngoal (1 subgoal):\n 1. inp bk = v", "by(auto simp add: maxBalInp_def)"], ["proof (state)\nthis:\n  inp bk = v\n\ngoal (1 subgoal):\n 1. bk \\<in> {dblock s' q} \\<Longrightarrow> inp bk = v", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. bk \\<in> {dblock s' q} \\<Longrightarrow> inp bk = v", "assume bk: \"bk \\<in>  {dblock s' q}\""], ["proof (state)\nthis:\n  bk \\<in> {dblock s' q}\n\ngoal (1 subgoal):\n 1. bk \\<in> {dblock s' q} \\<Longrightarrow> inp bk = v", "from act False"], ["proof (chain)\npicking this:\n  HEndPhase1 s s' q\n  \\<not> b \\<le> mbal (dblock s q)", "have \" \\<not> b \\<le> bal (dblock s' q)\""], ["proof (prove)\nusing this:\n  HEndPhase1 s s' q\n  \\<not> b \\<le> mbal (dblock s q)\n\ngoal (1 subgoal):\n 1. \\<not> b \\<le> bal (dblock s' q)", "by(auto simp add: EndPhase1_def)"], ["proof (state)\nthis:\n  \\<not> b \\<le> bal (dblock s' q)\n\ngoal (1 subgoal):\n 1. bk \\<in> {dblock s' q} \\<Longrightarrow> inp bk = v", "with bk b_bal"], ["proof (chain)\npicking this:\n  bk \\<in> {dblock s' q}\n  b \\<le> bal bk\n  \\<not> b \\<le> bal (dblock s' q)", "show ?thesis"], ["proof (prove)\nusing this:\n  bk \\<in> {dblock s' q}\n  b \\<le> bal bk\n  \\<not> b \\<le> bal (dblock s' q)\n\ngoal (1 subgoal):\n 1. inp bk = v", "by(auto)"], ["proof (state)\nthis:\n  inp bk = v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inp bk = v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  maxBalInp s' b v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HEndPhase1_valueChosen2:\n  assumes act: \"HEndPhase1 s s' q\"\n    and asm4: \"\\<forall>d\\<in>D.   b \\<le> bal(disk s d p)\n                   \\<and>(\\<forall>q.(   phase s q = 1\n                          \\<and> b \\<le>mbal(dblock s q)\n                          \\<and> hasRead s q d p\n                         ) \\<longrightarrow> (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal(block br)))\" (is \"?P s\")\n  shows \"?P s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>d\\<in>D.\n       b \\<le> bal (disk s' d p) \\<and>\n       (\\<forall>q.\n           phase s' q = 1 \\<and>\n           b \\<le> mbal (dblock s' q) \\<and>\n           hasRead s' q d p \\<longrightarrow>\n           (\\<exists>br\\<in>blocksRead s' q d. b \\<le> bal (block br)))", "proof(auto)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>d. d \\<in> D \\<Longrightarrow> b \\<le> bal (disk s' d p)\n 2. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "fix d"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>d. d \\<in> D \\<Longrightarrow> b \\<le> bal (disk s' d p)\n 2. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "assume d: \"d\\<in>D\""], ["proof (state)\nthis:\n  d \\<in> D\n\ngoal (2 subgoals):\n 1. \\<And>d. d \\<in> D \\<Longrightarrow> b \\<le> bal (disk s' d p)\n 2. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "with act asm4"], ["proof (chain)\npicking this:\n  HEndPhase1 s s' q\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s d p) \\<and>\n     (\\<forall>q.\n         phase s q = 1 \\<and>\n         b \\<le> mbal (dblock s q) \\<and> hasRead s q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)))\n  d \\<in> D", "show \"b \\<le> bal (disk s' d p)\""], ["proof (prove)\nusing this:\n  HEndPhase1 s s' q\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s d p) \\<and>\n     (\\<forall>q.\n         phase s q = 1 \\<and>\n         b \\<le> mbal (dblock s q) \\<and> hasRead s q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)))\n  d \\<in> D\n\ngoal (1 subgoal):\n 1. b \\<le> bal (disk s' d p)", "by(auto simp add: EndPhase1_def)"], ["proof (state)\nthis:\n  b \\<le> bal (disk s' d p)\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "fix d q"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "assume d: \"d\\<in>D\"\n    and phase': \"phase s' q = Suc 0\" \n    and dblk_mbal: \"b \\<le> mbal (dblock s' q)\""], ["proof (state)\nthis:\n  d \\<in> D\n  phase s' q = Suc 0\n  b \\<le> mbal (dblock s' q)\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "with act"], ["proof (chain)\npicking this:\n  HEndPhase1 s s' q\n  d \\<in> D\n  phase s' q = Suc 0\n  b \\<le> mbal (dblock s' q)", "have p31: \"phase s q = 1\"\n    and p32: \"dblock s' q = dblock s q\""], ["proof (prove)\nusing this:\n  HEndPhase1 s s' q\n  d \\<in> D\n  phase s' q = Suc 0\n  b \\<le> mbal (dblock s' q)\n\ngoal (1 subgoal):\n 1. phase s q = 1 &&& dblock s' q = dblock s q", "by(auto simp add: EndPhase1_def split: if_split_asm)"], ["proof (state)\nthis:\n  phase s q = 1\n  dblock s' q = dblock s q\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "with dblk_mbal"], ["proof (chain)\npicking this:\n  b \\<le> mbal (dblock s' q)\n  phase s q = 1\n  dblock s' q = dblock s q", "have \"b\\<le>mbal(dblock s q)\""], ["proof (prove)\nusing this:\n  b \\<le> mbal (dblock s' q)\n  phase s q = 1\n  dblock s' q = dblock s q\n\ngoal (1 subgoal):\n 1. b \\<le> mbal (dblock s q)", "by auto"], ["proof (state)\nthis:\n  b \\<le> mbal (dblock s q)\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "moreover"], ["proof (state)\nthis:\n  b \\<le> mbal (dblock s q)\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "assume hasRead: \"hasRead s' q d p\""], ["proof (state)\nthis:\n  hasRead s' q d p\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "with act"], ["proof (chain)\npicking this:\n  HEndPhase1 s s' q\n  hasRead s' q d p", "have \"hasRead s q d p\""], ["proof (prove)\nusing this:\n  HEndPhase1 s s' q\n  hasRead s' q d p\n\ngoal (1 subgoal):\n 1. hasRead s q d p", "by(auto simp add: EndPhase1_def InitializePhase_def \n      hasRead_def split: if_split_asm)"], ["proof (state)\nthis:\n  hasRead s q d p\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "ultimately"], ["proof (chain)\npicking this:\n  b \\<le> mbal (dblock s q)\n  hasRead s q d p", "have \"\\<exists>br\\<in>blocksRead s q d. b\\<le> bal(block br)\""], ["proof (prove)\nusing this:\n  b \\<le> mbal (dblock s q)\n  hasRead s q d p\n\ngoal (1 subgoal):\n 1. \\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)", "using p31 asm4 d"], ["proof (prove)\nusing this:\n  b \\<le> mbal (dblock s q)\n  hasRead s q d p\n  phase s q = 1\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s d p) \\<and>\n     (\\<forall>q.\n         phase s q = 1 \\<and>\n         b \\<le> mbal (dblock s q) \\<and> hasRead s q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)))\n  d \\<in> D\n\ngoal (1 subgoal):\n 1. \\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)", "by blast"], ["proof (state)\nthis:\n  \\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "with act hasRead"], ["proof (chain)\npicking this:\n  HEndPhase1 s s' q\n  hasRead s' q d p\n  \\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)", "show \"\\<exists>br\\<in>blocksRead s' q d. b\\<le> bal(block br)\""], ["proof (prove)\nusing this:\n  HEndPhase1 s s' q\n  hasRead s' q d p\n  \\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)\n\ngoal (1 subgoal):\n 1. \\<exists>br\\<in>blocksRead s' q d. b \\<le> bal (block br)", "by(auto simp add: EndPhase1_def InitializePhase_def hasRead_def)"], ["proof (state)\nthis:\n  \\<exists>br\\<in>blocksRead s' q d. b \\<le> bal (block br)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem HEndPhase1_valueChosen:\n  assumes act: \"HEndPhase1 s s' q\"\n  and vc: \"valueChosen s v\"\n  and inv1: \"Inv1 s\"\n  and inv2a: \"Inv2a s\"\n  and inv2b: \"Inv2b s\"\n  and v_input: \"v \\<in> Inputs\"\n  shows \"valueChosen s' v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valueChosen s' v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. valueChosen s' v", "from vc"], ["proof (chain)\npicking this:\n  valueChosen s v", "obtain b p D where\n        asm1: \"b \\<in> (UN p. Ballot p)\"\n    and asm2: \"D\\<in>MajoritySet\"\n    and asm3: \"maxBalInp s b v\"\n    and asm4: \"\\<forall>d\\<in>D.  b \\<le> bal(disk s d p)\n                   \\<and>(\\<forall>q.(   phase s q = 1\n                          \\<and> b \\<le>mbal(dblock s q)\n                          \\<and> hasRead s q d p\n                         ) \\<longrightarrow> (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal(block br)))\""], ["proof (prove)\nusing this:\n  valueChosen s v\n\ngoal (1 subgoal):\n 1. (\\<And>b D p.\n        \\<lbrakk>b \\<in> \\<Union> (range Ballot); D \\<in> MajoritySet;\n         maxBalInp s b v;\n         \\<forall>d\\<in>D.\n            b \\<le> bal (disk s d p) \\<and>\n            (\\<forall>q.\n                phase s q = 1 \\<and>\n                b \\<le> mbal (dblock s q) \\<and>\n                hasRead s q d p \\<longrightarrow>\n                (\\<exists>br\\<in>blocksRead s q d.\n                    b \\<le> bal (block br)))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto simp add: valueChosen_def)"], ["proof (state)\nthis:\n  b \\<in> \\<Union> (range Ballot)\n  D \\<in> MajoritySet\n  maxBalInp s b v\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s d p) \\<and>\n     (\\<forall>q.\n         phase s q = 1 \\<and>\n         b \\<le> mbal (dblock s q) \\<and> hasRead s q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)))\n\ngoal (1 subgoal):\n 1. valueChosen s' v", "from HEndPhase1_maxBalInp[OF act asm1 asm2 asm3 asm4 inv1 inv2a inv2b]"], ["proof (chain)\npicking this:\n  maxBalInp s' b v", "have \"maxBalInp s' b v\""], ["proof (prove)\nusing this:\n  maxBalInp s' b v\n\ngoal (1 subgoal):\n 1. maxBalInp s' b v", "."], ["proof (state)\nthis:\n  maxBalInp s' b v\n\ngoal (1 subgoal):\n 1. valueChosen s' v", "with HEndPhase1_valueChosen2[OF act asm4] asm1 asm2"], ["proof (chain)\npicking this:\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s' d p) \\<and>\n     (\\<forall>q.\n         phase s' q = 1 \\<and>\n         b \\<le> mbal (dblock s' q) \\<and>\n         hasRead s' q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s' q d. b \\<le> bal (block br)))\n  b \\<in> \\<Union> (range Ballot)\n  D \\<in> MajoritySet\n  maxBalInp s' b v", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s' d p) \\<and>\n     (\\<forall>q.\n         phase s' q = 1 \\<and>\n         b \\<le> mbal (dblock s' q) \\<and>\n         hasRead s' q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s' q d. b \\<le> bal (block br)))\n  b \\<in> \\<Union> (range Ballot)\n  D \\<in> MajoritySet\n  maxBalInp s' b v\n\ngoal (1 subgoal):\n 1. valueChosen s' v", "by(auto simp add: valueChosen_def)"], ["proof (state)\nthis:\n  valueChosen s' v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HStartBallot_maxBalInp:\n  assumes act: \"HStartBallot s s' q\"\n    and asm3: \"maxBalInp s b v\"\n  shows \"maxBalInp s' b v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. maxBalInp s' b v", "proof(auto simp add: maxBalInp_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>bk.\n       \\<lbrakk>bk \\<in> allBlocks s'; b \\<le> bal bk\\<rbrakk>\n       \\<Longrightarrow> inp bk = v", "fix bk"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>bk.\n       \\<lbrakk>bk \\<in> allBlocks s'; b \\<le> bal bk\\<rbrakk>\n       \\<Longrightarrow> inp bk = v", "assume bk: \"bk \\<in> allBlocks s'\"\n    and b_bal: \"b\\<le> bal bk\""], ["proof (state)\nthis:\n  bk \\<in> allBlocks s'\n  b \\<le> bal bk\n\ngoal (1 subgoal):\n 1. \\<And>bk.\n       \\<lbrakk>bk \\<in> allBlocks s'; b \\<le> bal bk\\<rbrakk>\n       \\<Longrightarrow> inp bk = v", "from subsetD[OF HStartBallot_allBlocks[OF act] bk]"], ["proof (chain)\npicking this:\n  bk \\<in> allBlocks s \\<union> {dblock s' q}", "show \"inp bk = v\""], ["proof (prove)\nusing this:\n  bk \\<in> allBlocks s \\<union> {dblock s' q}\n\ngoal (1 subgoal):\n 1. inp bk = v", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. bk \\<in> allBlocks s \\<Longrightarrow> inp bk = v\n 2. bk \\<in> {dblock s' q} \\<Longrightarrow> inp bk = v", "assume bk: \"bk\\<in>allBlocks s\""], ["proof (state)\nthis:\n  bk \\<in> allBlocks s\n\ngoal (2 subgoals):\n 1. bk \\<in> allBlocks s \\<Longrightarrow> inp bk = v\n 2. bk \\<in> {dblock s' q} \\<Longrightarrow> inp bk = v", "with asm3 b_bal"], ["proof (chain)\npicking this:\n  maxBalInp s b v\n  b \\<le> bal bk\n  bk \\<in> allBlocks s", "show ?thesis"], ["proof (prove)\nusing this:\n  maxBalInp s b v\n  b \\<le> bal bk\n  bk \\<in> allBlocks s\n\ngoal (1 subgoal):\n 1. inp bk = v", "by(auto simp add: maxBalInp_def)"], ["proof (state)\nthis:\n  inp bk = v\n\ngoal (1 subgoal):\n 1. bk \\<in> {dblock s' q} \\<Longrightarrow> inp bk = v", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. bk \\<in> {dblock s' q} \\<Longrightarrow> inp bk = v", "assume bk: \"bk\\<in>{dblock s' q}\""], ["proof (state)\nthis:\n  bk \\<in> {dblock s' q}\n\ngoal (1 subgoal):\n 1. bk \\<in> {dblock s' q} \\<Longrightarrow> inp bk = v", "from asm3"], ["proof (chain)\npicking this:\n  maxBalInp s b v", "have \"b\\<le> bal(dblock s q) \\<Longrightarrow> inp(dblock s q) = v\""], ["proof (prove)\nusing this:\n  maxBalInp s b v\n\ngoal (1 subgoal):\n 1. b \\<le> bal (dblock s q) \\<Longrightarrow> inp (dblock s q) = v", "by(auto simp add: maxBalInp_def allBlocks_def blocksOf_def)"], ["proof (state)\nthis:\n  b \\<le> bal (dblock s q) \\<Longrightarrow> inp (dblock s q) = v\n\ngoal (1 subgoal):\n 1. bk \\<in> {dblock s' q} \\<Longrightarrow> inp bk = v", "with act bk b_bal"], ["proof (chain)\npicking this:\n  HStartBallot s s' q\n  bk \\<in> {dblock s' q}\n  b \\<le> bal bk\n  b \\<le> bal (dblock s q) \\<Longrightarrow> inp (dblock s q) = v", "show ?thesis"], ["proof (prove)\nusing this:\n  HStartBallot s s' q\n  bk \\<in> {dblock s' q}\n  b \\<le> bal bk\n  b \\<le> bal (dblock s q) \\<Longrightarrow> inp (dblock s q) = v\n\ngoal (1 subgoal):\n 1. inp bk = v", "by(auto simp add: StartBallot_def)"], ["proof (state)\nthis:\n  inp bk = v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inp bk = v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HStartBallot_valueChosen2:\n  assumes act: \"HStartBallot s s' q\"\n    and asm4: \"\\<forall>d\\<in>D.   b \\<le> bal(disk s d p)\n                   \\<and>(\\<forall>q.(   phase s q = 1\n                          \\<and> b \\<le>mbal(dblock s q)\n                          \\<and> hasRead s q d p\n                         ) \\<longrightarrow> (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal(block br)))\" (is \"?P s\")\n  shows \"?P s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>d\\<in>D.\n       b \\<le> bal (disk s' d p) \\<and>\n       (\\<forall>q.\n           phase s' q = 1 \\<and>\n           b \\<le> mbal (dblock s' q) \\<and>\n           hasRead s' q d p \\<longrightarrow>\n           (\\<exists>br\\<in>blocksRead s' q d. b \\<le> bal (block br)))", "proof(auto)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>d. d \\<in> D \\<Longrightarrow> b \\<le> bal (disk s' d p)\n 2. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "fix d"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>d. d \\<in> D \\<Longrightarrow> b \\<le> bal (disk s' d p)\n 2. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "assume d: \"d\\<in>D\""], ["proof (state)\nthis:\n  d \\<in> D\n\ngoal (2 subgoals):\n 1. \\<And>d. d \\<in> D \\<Longrightarrow> b \\<le> bal (disk s' d p)\n 2. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "with act asm4"], ["proof (chain)\npicking this:\n  HStartBallot s s' q\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s d p) \\<and>\n     (\\<forall>q.\n         phase s q = 1 \\<and>\n         b \\<le> mbal (dblock s q) \\<and> hasRead s q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)))\n  d \\<in> D", "show \"b \\<le> bal (disk s' d p)\""], ["proof (prove)\nusing this:\n  HStartBallot s s' q\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s d p) \\<and>\n     (\\<forall>q.\n         phase s q = 1 \\<and>\n         b \\<le> mbal (dblock s q) \\<and> hasRead s q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)))\n  d \\<in> D\n\ngoal (1 subgoal):\n 1. b \\<le> bal (disk s' d p)", "by(auto simp add: StartBallot_def)"], ["proof (state)\nthis:\n  b \\<le> bal (disk s' d p)\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "fix d q"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "assume d: \"d\\<in>D\"\n    and phase': \"phase s' q = Suc 0\" \n    and dblk_mbal: \"b \\<le> mbal (dblock s' q)\"\n    and hasRead: \"hasRead s' q d p\""], ["proof (state)\nthis:\n  d \\<in> D\n  phase s' q = Suc 0\n  b \\<le> mbal (dblock s' q)\n  hasRead s' q d p\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "from phase' act hasRead"], ["proof (chain)\npicking this:\n  phase s' q = Suc 0\n  HStartBallot s s' q\n  hasRead s' q d p", "have p31: \"phase s q = 1\"\n   and p32: \"dblock s' q = dblock s q\""], ["proof (prove)\nusing this:\n  phase s' q = Suc 0\n  HStartBallot s s' q\n  hasRead s' q d p\n\ngoal (1 subgoal):\n 1. phase s q = 1 &&& dblock s' q = dblock s q", "by(auto simp add: StartBallot_def InitializePhase_def\n                 hasRead_def split : if_split_asm)"], ["proof (state)\nthis:\n  phase s q = 1\n  dblock s' q = dblock s q\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "with dblk_mbal"], ["proof (chain)\npicking this:\n  b \\<le> mbal (dblock s' q)\n  phase s q = 1\n  dblock s' q = dblock s q", "have \"b\\<le>mbal(dblock s q)\""], ["proof (prove)\nusing this:\n  b \\<le> mbal (dblock s' q)\n  phase s q = 1\n  dblock s' q = dblock s q\n\ngoal (1 subgoal):\n 1. b \\<le> mbal (dblock s q)", "by auto"], ["proof (state)\nthis:\n  b \\<le> mbal (dblock s q)\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "moreover"], ["proof (state)\nthis:\n  b \\<le> mbal (dblock s q)\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "from act hasRead"], ["proof (chain)\npicking this:\n  HStartBallot s s' q\n  hasRead s' q d p", "have \"hasRead s q d p\""], ["proof (prove)\nusing this:\n  HStartBallot s s' q\n  hasRead s' q d p\n\ngoal (1 subgoal):\n 1. hasRead s q d p", "by(auto simp add: StartBallot_def InitializePhase_def \n      hasRead_def split: if_split_asm)"], ["proof (state)\nthis:\n  hasRead s q d p\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "ultimately"], ["proof (chain)\npicking this:\n  b \\<le> mbal (dblock s q)\n  hasRead s q d p", "have \"\\<exists>br\\<in>blocksRead s q d. b\\<le> bal(block br)\""], ["proof (prove)\nusing this:\n  b \\<le> mbal (dblock s q)\n  hasRead s q d p\n\ngoal (1 subgoal):\n 1. \\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)", "using p31 asm4 d"], ["proof (prove)\nusing this:\n  b \\<le> mbal (dblock s q)\n  hasRead s q d p\n  phase s q = 1\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s d p) \\<and>\n     (\\<forall>q.\n         phase s q = 1 \\<and>\n         b \\<le> mbal (dblock s q) \\<and> hasRead s q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)))\n  d \\<in> D\n\ngoal (1 subgoal):\n 1. \\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)", "by blast"], ["proof (state)\nthis:\n  \\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "with act hasRead"], ["proof (chain)\npicking this:\n  HStartBallot s s' q\n  hasRead s' q d p\n  \\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)", "show \"\\<exists>br\\<in>blocksRead s' q d. b\\<le> bal(block br)\""], ["proof (prove)\nusing this:\n  HStartBallot s s' q\n  hasRead s' q d p\n  \\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)\n\ngoal (1 subgoal):\n 1. \\<exists>br\\<in>blocksRead s' q d. b \\<le> bal (block br)", "by(auto simp add: StartBallot_def InitializePhase_def\n                      hasRead_def)"], ["proof (state)\nthis:\n  \\<exists>br\\<in>blocksRead s' q d. b \\<le> bal (block br)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem HStartBallot_valueChosen:\n  assumes act: \"HStartBallot s s' q\"\n  and vc: \"valueChosen s v\"\n  and v_input: \"v \\<in> Inputs\"\n  shows \"valueChosen s' v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valueChosen s' v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. valueChosen s' v", "from vc"], ["proof (chain)\npicking this:\n  valueChosen s v", "obtain b p D where\n        asm1: \"b \\<in> (UN p. Ballot p)\"\n    and asm2: \"D\\<in>MajoritySet\"\n    and asm3: \"maxBalInp s b v\"\n    and asm4: \"\\<forall>d\\<in>D.  b \\<le> bal(disk s d p)\n                   \\<and>(\\<forall>q.(   phase s q = 1\n                          \\<and> b \\<le>mbal(dblock s q)\n                          \\<and> hasRead s q d p\n                         ) \\<longrightarrow> (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal(block br)))\""], ["proof (prove)\nusing this:\n  valueChosen s v\n\ngoal (1 subgoal):\n 1. (\\<And>b D p.\n        \\<lbrakk>b \\<in> \\<Union> (range Ballot); D \\<in> MajoritySet;\n         maxBalInp s b v;\n         \\<forall>d\\<in>D.\n            b \\<le> bal (disk s d p) \\<and>\n            (\\<forall>q.\n                phase s q = 1 \\<and>\n                b \\<le> mbal (dblock s q) \\<and>\n                hasRead s q d p \\<longrightarrow>\n                (\\<exists>br\\<in>blocksRead s q d.\n                    b \\<le> bal (block br)))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto simp add: valueChosen_def)"], ["proof (state)\nthis:\n  b \\<in> \\<Union> (range Ballot)\n  D \\<in> MajoritySet\n  maxBalInp s b v\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s d p) \\<and>\n     (\\<forall>q.\n         phase s q = 1 \\<and>\n         b \\<le> mbal (dblock s q) \\<and> hasRead s q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)))\n\ngoal (1 subgoal):\n 1. valueChosen s' v", "from HStartBallot_maxBalInp[OF act asm3]"], ["proof (chain)\npicking this:\n  maxBalInp s' b v", "have \"maxBalInp s' b v\""], ["proof (prove)\nusing this:\n  maxBalInp s' b v\n\ngoal (1 subgoal):\n 1. maxBalInp s' b v", "."], ["proof (state)\nthis:\n  maxBalInp s' b v\n\ngoal (1 subgoal):\n 1. valueChosen s' v", "with HStartBallot_valueChosen2[OF act asm4] asm1 asm2"], ["proof (chain)\npicking this:\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s' d p) \\<and>\n     (\\<forall>q.\n         phase s' q = 1 \\<and>\n         b \\<le> mbal (dblock s' q) \\<and>\n         hasRead s' q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s' q d. b \\<le> bal (block br)))\n  b \\<in> \\<Union> (range Ballot)\n  D \\<in> MajoritySet\n  maxBalInp s' b v", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s' d p) \\<and>\n     (\\<forall>q.\n         phase s' q = 1 \\<and>\n         b \\<le> mbal (dblock s' q) \\<and>\n         hasRead s' q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s' q d. b \\<le> bal (block br)))\n  b \\<in> \\<Union> (range Ballot)\n  D \\<in> MajoritySet\n  maxBalInp s' b v\n\ngoal (1 subgoal):\n 1. valueChosen s' v", "by(auto simp add: valueChosen_def)"], ["proof (state)\nthis:\n  valueChosen s' v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HPhase1or2Write_maxBalInp:\n  assumes act: \"HPhase1or2Write s s' q d\"\n    and asm3: \"maxBalInp s b v\"\n  shows \"maxBalInp s' b v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. maxBalInp s' b v", "proof(auto simp add: maxBalInp_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>bk.\n       \\<lbrakk>bk \\<in> allBlocks s'; b \\<le> bal bk\\<rbrakk>\n       \\<Longrightarrow> inp bk = v", "fix bk"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>bk.\n       \\<lbrakk>bk \\<in> allBlocks s'; b \\<le> bal bk\\<rbrakk>\n       \\<Longrightarrow> inp bk = v", "assume bk: \"bk \\<in> allBlocks s'\"\n    and b_bal: \"b\\<le> bal bk\""], ["proof (state)\nthis:\n  bk \\<in> allBlocks s'\n  b \\<le> bal bk\n\ngoal (1 subgoal):\n 1. \\<And>bk.\n       \\<lbrakk>bk \\<in> allBlocks s'; b \\<le> bal bk\\<rbrakk>\n       \\<Longrightarrow> inp bk = v", "from subsetD[OF HPhase1or2Write_allBlocks[OF act] bk] asm3 b_bal"], ["proof (chain)\npicking this:\n  bk \\<in> allBlocks s\n  maxBalInp s b v\n  b \\<le> bal bk", "show \"inp bk = v\""], ["proof (prove)\nusing this:\n  bk \\<in> allBlocks s\n  maxBalInp s b v\n  b \\<le> bal bk\n\ngoal (1 subgoal):\n 1. inp bk = v", "by(auto simp add: maxBalInp_def)"], ["proof (state)\nthis:\n  inp bk = v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HPhase1or2Write_valueChosen2:\n  assumes act: \"HPhase1or2Write s s' pp d\"\n    and asm2: \"D\\<in>MajoritySet\"\n    and asm4: \"\\<forall>d\\<in>D.   b \\<le> bal(disk s d p)\n                   \\<and>(\\<forall>q.(   phase s q = 1\n                          \\<and> b \\<le>mbal(dblock s q)\n                          \\<and> hasRead s q d p\n                         ) \\<longrightarrow> (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal(block br)))\" (is \"?P s\")\n    and inv4: \"HInv4a s pp\"\n  shows \"?P s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>d\\<in>D.\n       b \\<le> bal (disk s' d p) \\<and>\n       (\\<forall>q.\n           phase s' q = 1 \\<and>\n           b \\<le> mbal (dblock s' q) \\<and>\n           hasRead s' q d p \\<longrightarrow>\n           (\\<exists>br\\<in>blocksRead s' q d. b \\<le> bal (block br)))", "proof(auto)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>d. d \\<in> D \\<Longrightarrow> b \\<le> bal (disk s' d p)\n 2. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "fix d1"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>d. d \\<in> D \\<Longrightarrow> b \\<le> bal (disk s' d p)\n 2. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "assume d: \"d1\\<in>D\""], ["proof (state)\nthis:\n  d1 \\<in> D\n\ngoal (2 subgoals):\n 1. \\<And>d. d \\<in> D \\<Longrightarrow> b \\<le> bal (disk s' d p)\n 2. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "show \"b \\<le> bal (disk s' d1 p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<le> bal (disk s' d1 p)", "proof(cases \"d1=d\\<and>pp=p\")"], ["proof (state)\ngoal (2 subgoals):\n 1. d1 = d \\<and> pp = p \\<Longrightarrow> b \\<le> bal (disk s' d1 p)\n 2. \\<not> (d1 = d \\<and> pp = p) \\<Longrightarrow>\n    b \\<le> bal (disk s' d1 p)", "case True"], ["proof (state)\nthis:\n  d1 = d \\<and> pp = p\n\ngoal (2 subgoals):\n 1. d1 = d \\<and> pp = p \\<Longrightarrow> b \\<le> bal (disk s' d1 p)\n 2. \\<not> (d1 = d \\<and> pp = p) \\<Longrightarrow>\n    b \\<le> bal (disk s' d1 p)", "with inv4 act"], ["proof (chain)\npicking this:\n  HInv4a s pp\n  HPhase1or2Write s s' pp d\n  d1 = d \\<and> pp = p", "have \"HInv4a2 s p\""], ["proof (prove)\nusing this:\n  HInv4a s pp\n  HPhase1or2Write s s' pp d\n  d1 = d \\<and> pp = p\n\ngoal (1 subgoal):\n 1. HInv4a2 s p", "by(auto simp add: Phase1or2Write_def HInv4a_def)"], ["proof (state)\nthis:\n  HInv4a2 s p\n\ngoal (2 subgoals):\n 1. d1 = d \\<and> pp = p \\<Longrightarrow> b \\<le> bal (disk s' d1 p)\n 2. \\<not> (d1 = d \\<and> pp = p) \\<Longrightarrow>\n    b \\<le> bal (disk s' d1 p)", "with asm2 majorities_intersect"], ["proof (chain)\npicking this:\n  D \\<in> MajoritySet\n  \\<forall>S T.\n     IsMajority S \\<and> IsMajority T \\<longrightarrow>\n     S \\<inter> T \\<noteq> {}\n  HInv4a2 s p", "have \"\\<exists>dd\\<in>D. bal(disk s dd p)\\<le>bal(dblock s p)\""], ["proof (prove)\nusing this:\n  D \\<in> MajoritySet\n  \\<forall>S T.\n     IsMajority S \\<and> IsMajority T \\<longrightarrow>\n     S \\<inter> T \\<noteq> {}\n  HInv4a2 s p\n\ngoal (1 subgoal):\n 1. \\<exists>dd\\<in>D. bal (disk s dd p) \\<le> bal (dblock s p)", "by(auto simp add: HInv4a2_def MajoritySet_def)"], ["proof (state)\nthis:\n  \\<exists>dd\\<in>D. bal (disk s dd p) \\<le> bal (dblock s p)\n\ngoal (2 subgoals):\n 1. d1 = d \\<and> pp = p \\<Longrightarrow> b \\<le> bal (disk s' d1 p)\n 2. \\<not> (d1 = d \\<and> pp = p) \\<Longrightarrow>\n    b \\<le> bal (disk s' d1 p)", "then"], ["proof (chain)\npicking this:\n  \\<exists>dd\\<in>D. bal (disk s dd p) \\<le> bal (dblock s p)", "obtain dd where p41: \"dd\\<in>D \\<and> bal(disk s dd p)\\<le>bal(dblock s p)\""], ["proof (prove)\nusing this:\n  \\<exists>dd\\<in>D. bal (disk s dd p) \\<le> bal (dblock s p)\n\ngoal (1 subgoal):\n 1. (\\<And>dd.\n        dd \\<in> D \\<and>\n        bal (disk s dd p) \\<le> bal (dblock s p) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  dd \\<in> D \\<and> bal (disk s dd p) \\<le> bal (dblock s p)\n\ngoal (2 subgoals):\n 1. d1 = d \\<and> pp = p \\<Longrightarrow> b \\<le> bal (disk s' d1 p)\n 2. \\<not> (d1 = d \\<and> pp = p) \\<Longrightarrow>\n    b \\<le> bal (disk s' d1 p)", "from asm4 p41"], ["proof (chain)\npicking this:\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s d p) \\<and>\n     (\\<forall>q.\n         phase s q = 1 \\<and>\n         b \\<le> mbal (dblock s q) \\<and> hasRead s q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)))\n  dd \\<in> D \\<and> bal (disk s dd p) \\<le> bal (dblock s p)", "have \"b\\<le> bal(disk s dd p)\""], ["proof (prove)\nusing this:\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s d p) \\<and>\n     (\\<forall>q.\n         phase s q = 1 \\<and>\n         b \\<le> mbal (dblock s q) \\<and> hasRead s q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)))\n  dd \\<in> D \\<and> bal (disk s dd p) \\<le> bal (dblock s p)\n\ngoal (1 subgoal):\n 1. b \\<le> bal (disk s dd p)", "by auto"], ["proof (state)\nthis:\n  b \\<le> bal (disk s dd p)\n\ngoal (2 subgoals):\n 1. d1 = d \\<and> pp = p \\<Longrightarrow> b \\<le> bal (disk s' d1 p)\n 2. \\<not> (d1 = d \\<and> pp = p) \\<Longrightarrow>\n    b \\<le> bal (disk s' d1 p)", "with p41"], ["proof (chain)\npicking this:\n  dd \\<in> D \\<and> bal (disk s dd p) \\<le> bal (dblock s p)\n  b \\<le> bal (disk s dd p)", "have p42: \"b \\<le> bal(dblock s p)\""], ["proof (prove)\nusing this:\n  dd \\<in> D \\<and> bal (disk s dd p) \\<le> bal (dblock s p)\n  b \\<le> bal (disk s dd p)\n\ngoal (1 subgoal):\n 1. b \\<le> bal (dblock s p)", "by auto"], ["proof (state)\nthis:\n  b \\<le> bal (dblock s p)\n\ngoal (2 subgoals):\n 1. d1 = d \\<and> pp = p \\<Longrightarrow> b \\<le> bal (disk s' d1 p)\n 2. \\<not> (d1 = d \\<and> pp = p) \\<Longrightarrow>\n    b \\<le> bal (disk s' d1 p)", "from act True"], ["proof (chain)\npicking this:\n  HPhase1or2Write s s' pp d\n  d1 = d \\<and> pp = p", "have \"dblock s p = disk s' d p\""], ["proof (prove)\nusing this:\n  HPhase1or2Write s s' pp d\n  d1 = d \\<and> pp = p\n\ngoal (1 subgoal):\n 1. dblock s p = disk s' d p", "by(auto simp add: Phase1or2Write_def)"], ["proof (state)\nthis:\n  dblock s p = disk s' d p\n\ngoal (2 subgoals):\n 1. d1 = d \\<and> pp = p \\<Longrightarrow> b \\<le> bal (disk s' d1 p)\n 2. \\<not> (d1 = d \\<and> pp = p) \\<Longrightarrow>\n    b \\<le> bal (disk s' d1 p)", "with p42 True"], ["proof (chain)\npicking this:\n  b \\<le> bal (dblock s p)\n  d1 = d \\<and> pp = p\n  dblock s p = disk s' d p", "show ?thesis"], ["proof (prove)\nusing this:\n  b \\<le> bal (dblock s p)\n  d1 = d \\<and> pp = p\n  dblock s p = disk s' d p\n\ngoal (1 subgoal):\n 1. b \\<le> bal (disk s' d1 p)", "by auto"], ["proof (state)\nthis:\n  b \\<le> bal (disk s' d1 p)\n\ngoal (1 subgoal):\n 1. \\<not> (d1 = d \\<and> pp = p) \\<Longrightarrow>\n    b \\<le> bal (disk s' d1 p)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (d1 = d \\<and> pp = p) \\<Longrightarrow>\n    b \\<le> bal (disk s' d1 p)", "case False"], ["proof (state)\nthis:\n  \\<not> (d1 = d \\<and> pp = p)\n\ngoal (1 subgoal):\n 1. \\<not> (d1 = d \\<and> pp = p) \\<Longrightarrow>\n    b \\<le> bal (disk s' d1 p)", "with act asm4 d"], ["proof (chain)\npicking this:\n  HPhase1or2Write s s' pp d\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s d p) \\<and>\n     (\\<forall>q.\n         phase s q = 1 \\<and>\n         b \\<le> mbal (dblock s q) \\<and> hasRead s q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)))\n  d1 \\<in> D\n  \\<not> (d1 = d \\<and> pp = p)", "show ?thesis"], ["proof (prove)\nusing this:\n  HPhase1or2Write s s' pp d\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s d p) \\<and>\n     (\\<forall>q.\n         phase s q = 1 \\<and>\n         b \\<le> mbal (dblock s q) \\<and> hasRead s q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)))\n  d1 \\<in> D\n  \\<not> (d1 = d \\<and> pp = p)\n\ngoal (1 subgoal):\n 1. b \\<le> bal (disk s' d1 p)", "by(auto simp add: Phase1or2Write_def)"], ["proof (state)\nthis:\n  b \\<le> bal (disk s' d1 p)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  b \\<le> bal (disk s' d1 p)\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "fix d q"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "assume d: \"d\\<in>D\"\n    and phase': \"phase s' q = Suc 0\" \n    and dblk_mbal: \"b \\<le> mbal (dblock s' q)\"\n    and hasRead: \"hasRead s' q d p\""], ["proof (state)\nthis:\n  d \\<in> D\n  phase s' q = Suc 0\n  b \\<le> mbal (dblock s' q)\n  hasRead s' q d p\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "from phase' act hasRead"], ["proof (chain)\npicking this:\n  phase s' q = Suc 0\n  HPhase1or2Write s s' pp d\n  hasRead s' q d p", "have p31: \"phase s q = 1\"\n   and p32: \"dblock s' q = dblock s q\""], ["proof (prove)\nusing this:\n  phase s' q = Suc 0\n  HPhase1or2Write s s' pp d\n  hasRead s' q d p\n\ngoal (1 subgoal):\n 1. phase s q = 1 &&& dblock s' q = dblock s q", "by(auto simp add: Phase1or2Write_def InitializePhase_def\n                      hasRead_def split : if_split_asm)"], ["proof (state)\nthis:\n  phase s q = 1\n  dblock s' q = dblock s q\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "with dblk_mbal"], ["proof (chain)\npicking this:\n  b \\<le> mbal (dblock s' q)\n  phase s q = 1\n  dblock s' q = dblock s q", "have \"b\\<le>mbal(dblock s q)\""], ["proof (prove)\nusing this:\n  b \\<le> mbal (dblock s' q)\n  phase s q = 1\n  dblock s' q = dblock s q\n\ngoal (1 subgoal):\n 1. b \\<le> mbal (dblock s q)", "by auto"], ["proof (state)\nthis:\n  b \\<le> mbal (dblock s q)\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "moreover"], ["proof (state)\nthis:\n  b \\<le> mbal (dblock s q)\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "from act hasRead"], ["proof (chain)\npicking this:\n  HPhase1or2Write s s' pp d\n  hasRead s' q d p", "have \"hasRead s q d p\""], ["proof (prove)\nusing this:\n  HPhase1or2Write s s' pp d\n  hasRead s' q d p\n\ngoal (1 subgoal):\n 1. hasRead s q d p", "by(auto simp add: Phase1or2Write_def InitializePhase_def \n      hasRead_def split: if_split_asm)"], ["proof (state)\nthis:\n  hasRead s q d p\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "ultimately"], ["proof (chain)\npicking this:\n  b \\<le> mbal (dblock s q)\n  hasRead s q d p", "have \"\\<exists>br\\<in>blocksRead s q d. b\\<le> bal(block br)\""], ["proof (prove)\nusing this:\n  b \\<le> mbal (dblock s q)\n  hasRead s q d p\n\ngoal (1 subgoal):\n 1. \\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)", "using p31 asm4 d"], ["proof (prove)\nusing this:\n  b \\<le> mbal (dblock s q)\n  hasRead s q d p\n  phase s q = 1\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s d p) \\<and>\n     (\\<forall>q.\n         phase s q = 1 \\<and>\n         b \\<le> mbal (dblock s q) \\<and> hasRead s q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)))\n  d \\<in> D\n\ngoal (1 subgoal):\n 1. \\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)", "by blast"], ["proof (state)\nthis:\n  \\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "with act hasRead"], ["proof (chain)\npicking this:\n  HPhase1or2Write s s' pp d\n  hasRead s' q d p\n  \\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)", "show \"\\<exists>br\\<in>blocksRead s' q d. b\\<le> bal(block br)\""], ["proof (prove)\nusing this:\n  HPhase1or2Write s s' pp d\n  hasRead s' q d p\n  \\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)\n\ngoal (1 subgoal):\n 1. \\<exists>br\\<in>blocksRead s' q d. b \\<le> bal (block br)", "by(auto simp add: Phase1or2Write_def InitializePhase_def\n                      hasRead_def)"], ["proof (state)\nthis:\n  \\<exists>br\\<in>blocksRead s' q d. b \\<le> bal (block br)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem HPhase1or2Write_valueChosen:\n  assumes act: \"HPhase1or2Write s s' q d\"\n  and vc: \"valueChosen s v\"\n  and v_input: \"v \\<in> Inputs\"\n  and inv4: \"HInv4a s q\"\n  shows \"valueChosen s' v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valueChosen s' v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. valueChosen s' v", "from vc"], ["proof (chain)\npicking this:\n  valueChosen s v", "obtain b p D where\n        asm1: \"b \\<in> (UN p. Ballot p)\"\n    and asm2: \"D\\<in>MajoritySet\"\n    and asm3: \"maxBalInp s b v\"\n    and asm4: \"\\<forall>d\\<in>D.  b \\<le> bal(disk s d p)\n                   \\<and>(\\<forall>q.(   phase s q = 1\n                          \\<and> b \\<le>mbal(dblock s q)\n                          \\<and> hasRead s q d p\n                         ) \\<longrightarrow> (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal(block br)))\""], ["proof (prove)\nusing this:\n  valueChosen s v\n\ngoal (1 subgoal):\n 1. (\\<And>b D p.\n        \\<lbrakk>b \\<in> \\<Union> (range Ballot); D \\<in> MajoritySet;\n         maxBalInp s b v;\n         \\<forall>d\\<in>D.\n            b \\<le> bal (disk s d p) \\<and>\n            (\\<forall>q.\n                phase s q = 1 \\<and>\n                b \\<le> mbal (dblock s q) \\<and>\n                hasRead s q d p \\<longrightarrow>\n                (\\<exists>br\\<in>blocksRead s q d.\n                    b \\<le> bal (block br)))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto simp add: valueChosen_def)"], ["proof (state)\nthis:\n  b \\<in> \\<Union> (range Ballot)\n  D \\<in> MajoritySet\n  maxBalInp s b v\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s d p) \\<and>\n     (\\<forall>q.\n         phase s q = 1 \\<and>\n         b \\<le> mbal (dblock s q) \\<and> hasRead s q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)))\n\ngoal (1 subgoal):\n 1. valueChosen s' v", "from HPhase1or2Write_maxBalInp[OF act asm3]"], ["proof (chain)\npicking this:\n  maxBalInp s' b v", "have \"maxBalInp s' b v\""], ["proof (prove)\nusing this:\n  maxBalInp s' b v\n\ngoal (1 subgoal):\n 1. maxBalInp s' b v", "."], ["proof (state)\nthis:\n  maxBalInp s' b v\n\ngoal (1 subgoal):\n 1. valueChosen s' v", "with HPhase1or2Write_valueChosen2[OF act asm2 asm4 inv4] asm1 asm2"], ["proof (chain)\npicking this:\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s' d p) \\<and>\n     (\\<forall>q.\n         phase s' q = 1 \\<and>\n         b \\<le> mbal (dblock s' q) \\<and>\n         hasRead s' q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s' q d. b \\<le> bal (block br)))\n  b \\<in> \\<Union> (range Ballot)\n  D \\<in> MajoritySet\n  maxBalInp s' b v", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s' d p) \\<and>\n     (\\<forall>q.\n         phase s' q = 1 \\<and>\n         b \\<le> mbal (dblock s' q) \\<and>\n         hasRead s' q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s' q d. b \\<le> bal (block br)))\n  b \\<in> \\<Union> (range Ballot)\n  D \\<in> MajoritySet\n  maxBalInp s' b v\n\ngoal (1 subgoal):\n 1. valueChosen s' v", "by(auto simp add: valueChosen_def)"], ["proof (state)\nthis:\n  valueChosen s' v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HPhase1or2ReadThen_maxBalInp:\n  assumes act: \"HPhase1or2ReadThen s s' q d p\"\n    and asm3: \"maxBalInp s b v\"\n  shows \"maxBalInp s' b v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. maxBalInp s' b v", "proof(auto simp add: maxBalInp_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>bk.\n       \\<lbrakk>bk \\<in> allBlocks s'; b \\<le> bal bk\\<rbrakk>\n       \\<Longrightarrow> inp bk = v", "fix bk"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>bk.\n       \\<lbrakk>bk \\<in> allBlocks s'; b \\<le> bal bk\\<rbrakk>\n       \\<Longrightarrow> inp bk = v", "assume bk: \"bk \\<in> allBlocks s'\"\n    and b_bal: \"b\\<le> bal bk\""], ["proof (state)\nthis:\n  bk \\<in> allBlocks s'\n  b \\<le> bal bk\n\ngoal (1 subgoal):\n 1. \\<And>bk.\n       \\<lbrakk>bk \\<in> allBlocks s'; b \\<le> bal bk\\<rbrakk>\n       \\<Longrightarrow> inp bk = v", "from subsetD[OF HPhase1or2ReadThen_allBlocks[OF act] bk] asm3 b_bal"], ["proof (chain)\npicking this:\n  bk \\<in> allBlocks s\n  maxBalInp s b v\n  b \\<le> bal bk", "show \"inp bk = v\""], ["proof (prove)\nusing this:\n  bk \\<in> allBlocks s\n  maxBalInp s b v\n  b \\<le> bal bk\n\ngoal (1 subgoal):\n 1. inp bk = v", "by(auto simp add: maxBalInp_def)"], ["proof (state)\nthis:\n  inp bk = v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HPhase1or2ReadThen_valueChosen2:\n  assumes act: \"HPhase1or2ReadThen s s' q d pp\"\n    and asm4: \"\\<forall>d\\<in>D.   b \\<le> bal(disk s d p)\n                   \\<and>(\\<forall>q.(   phase s q = 1\n                          \\<and> b \\<le>mbal(dblock s q)\n                          \\<and> hasRead s q d p\n                         ) \\<longrightarrow> (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal(block br)))\" (is \"?P s\")\n  shows \"?P s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>d\\<in>D.\n       b \\<le> bal (disk s' d p) \\<and>\n       (\\<forall>q.\n           phase s' q = 1 \\<and>\n           b \\<le> mbal (dblock s' q) \\<and>\n           hasRead s' q d p \\<longrightarrow>\n           (\\<exists>br\\<in>blocksRead s' q d. b \\<le> bal (block br)))", "proof(auto)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>d. d \\<in> D \\<Longrightarrow> b \\<le> bal (disk s' d p)\n 2. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "fix dd"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>d. d \\<in> D \\<Longrightarrow> b \\<le> bal (disk s' d p)\n 2. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "assume d: \"dd\\<in>D\""], ["proof (state)\nthis:\n  dd \\<in> D\n\ngoal (2 subgoals):\n 1. \\<And>d. d \\<in> D \\<Longrightarrow> b \\<le> bal (disk s' d p)\n 2. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "with act asm4"], ["proof (chain)\npicking this:\n  HPhase1or2ReadThen s s' q d pp\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s d p) \\<and>\n     (\\<forall>q.\n         phase s q = 1 \\<and>\n         b \\<le> mbal (dblock s q) \\<and> hasRead s q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)))\n  dd \\<in> D", "show \"b \\<le> bal (disk s' dd p)\""], ["proof (prove)\nusing this:\n  HPhase1or2ReadThen s s' q d pp\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s d p) \\<and>\n     (\\<forall>q.\n         phase s q = 1 \\<and>\n         b \\<le> mbal (dblock s q) \\<and> hasRead s q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)))\n  dd \\<in> D\n\ngoal (1 subgoal):\n 1. b \\<le> bal (disk s' dd p)", "by(auto simp add: Phase1or2ReadThen_def)"], ["proof (state)\nthis:\n  b \\<le> bal (disk s' dd p)\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "fix dd qq"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "assume d: \"dd\\<in>D\" \n    and phase': \"phase s' qq = Suc 0\" \n    and dblk_mbal: \"b \\<le> mbal (dblock s' qq)\"\n    and hasRead: \"hasRead s' qq dd p\""], ["proof (state)\nthis:\n  dd \\<in> D\n  phase s' qq = Suc 0\n  b \\<le> mbal (dblock s' qq)\n  hasRead s' qq dd p\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "show \"\\<exists>br\\<in>blocksRead s' qq dd. b \\<le> bal (block br)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>br\\<in>blocksRead s' qq dd. b \\<le> bal (block br)", "proof(cases \"d=dd \\<and> qq=q \\<and> pp=p\")"], ["proof (state)\ngoal (2 subgoals):\n 1. d = dd \\<and> qq = q \\<and> pp = p \\<Longrightarrow>\n    \\<exists>br\\<in>blocksRead s' qq dd. b \\<le> bal (block br)\n 2. \\<not> (d = dd \\<and> qq = q \\<and> pp = p) \\<Longrightarrow>\n    \\<exists>br\\<in>blocksRead s' qq dd. b \\<le> bal (block br)", "case True"], ["proof (state)\nthis:\n  d = dd \\<and> qq = q \\<and> pp = p\n\ngoal (2 subgoals):\n 1. d = dd \\<and> qq = q \\<and> pp = p \\<Longrightarrow>\n    \\<exists>br\\<in>blocksRead s' qq dd. b \\<le> bal (block br)\n 2. \\<not> (d = dd \\<and> qq = q \\<and> pp = p) \\<Longrightarrow>\n    \\<exists>br\\<in>blocksRead s' qq dd. b \\<le> bal (block br)", "from d asm4"], ["proof (chain)\npicking this:\n  dd \\<in> D\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s d p) \\<and>\n     (\\<forall>q.\n         phase s q = 1 \\<and>\n         b \\<le> mbal (dblock s q) \\<and> hasRead s q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)))", "have \"b \\<le> bal(disk s dd p)\""], ["proof (prove)\nusing this:\n  dd \\<in> D\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s d p) \\<and>\n     (\\<forall>q.\n         phase s q = 1 \\<and>\n         b \\<le> mbal (dblock s q) \\<and> hasRead s q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)))\n\ngoal (1 subgoal):\n 1. b \\<le> bal (disk s dd p)", "by auto"], ["proof (state)\nthis:\n  b \\<le> bal (disk s dd p)\n\ngoal (2 subgoals):\n 1. d = dd \\<and> qq = q \\<and> pp = p \\<Longrightarrow>\n    \\<exists>br\\<in>blocksRead s' qq dd. b \\<le> bal (block br)\n 2. \\<not> (d = dd \\<and> qq = q \\<and> pp = p) \\<Longrightarrow>\n    \\<exists>br\\<in>blocksRead s' qq dd. b \\<le> bal (block br)", "with act True"], ["proof (chain)\npicking this:\n  HPhase1or2ReadThen s s' q d pp\n  d = dd \\<and> qq = q \\<and> pp = p\n  b \\<le> bal (disk s dd p)", "show ?thesis"], ["proof (prove)\nusing this:\n  HPhase1or2ReadThen s s' q d pp\n  d = dd \\<and> qq = q \\<and> pp = p\n  b \\<le> bal (disk s dd p)\n\ngoal (1 subgoal):\n 1. \\<exists>br\\<in>blocksRead s' qq dd. b \\<le> bal (block br)", "by(auto simp add: Phase1or2ReadThen_def)"], ["proof (state)\nthis:\n  \\<exists>br\\<in>blocksRead s' qq dd. b \\<le> bal (block br)\n\ngoal (1 subgoal):\n 1. \\<not> (d = dd \\<and> qq = q \\<and> pp = p) \\<Longrightarrow>\n    \\<exists>br\\<in>blocksRead s' qq dd. b \\<le> bal (block br)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (d = dd \\<and> qq = q \\<and> pp = p) \\<Longrightarrow>\n    \\<exists>br\\<in>blocksRead s' qq dd. b \\<le> bal (block br)", "case False"], ["proof (state)\nthis:\n  \\<not> (d = dd \\<and> qq = q \\<and> pp = p)\n\ngoal (1 subgoal):\n 1. \\<not> (d = dd \\<and> qq = q \\<and> pp = p) \\<Longrightarrow>\n    \\<exists>br\\<in>blocksRead s' qq dd. b \\<le> bal (block br)", "with phase' act"], ["proof (chain)\npicking this:\n  phase s' qq = Suc 0\n  HPhase1or2ReadThen s s' q d pp\n  \\<not> (d = dd \\<and> qq = q \\<and> pp = p)", "have p31: \"phase s qq = 1\"\n      and p32: \"dblock s' qq = dblock s qq\""], ["proof (prove)\nusing this:\n  phase s' qq = Suc 0\n  HPhase1or2ReadThen s s' q d pp\n  \\<not> (d = dd \\<and> qq = q \\<and> pp = p)\n\ngoal (1 subgoal):\n 1. phase s qq = 1 &&& dblock s' qq = dblock s qq", "by(auto simp add: Phase1or2ReadThen_def)"], ["proof (state)\nthis:\n  phase s qq = 1\n  dblock s' qq = dblock s qq\n\ngoal (1 subgoal):\n 1. \\<not> (d = dd \\<and> qq = q \\<and> pp = p) \\<Longrightarrow>\n    \\<exists>br\\<in>blocksRead s' qq dd. b \\<le> bal (block br)", "with dblk_mbal"], ["proof (chain)\npicking this:\n  b \\<le> mbal (dblock s' qq)\n  phase s qq = 1\n  dblock s' qq = dblock s qq", "have \"b\\<le>mbal(dblock s qq)\""], ["proof (prove)\nusing this:\n  b \\<le> mbal (dblock s' qq)\n  phase s qq = 1\n  dblock s' qq = dblock s qq\n\ngoal (1 subgoal):\n 1. b \\<le> mbal (dblock s qq)", "by auto"], ["proof (state)\nthis:\n  b \\<le> mbal (dblock s qq)\n\ngoal (1 subgoal):\n 1. \\<not> (d = dd \\<and> qq = q \\<and> pp = p) \\<Longrightarrow>\n    \\<exists>br\\<in>blocksRead s' qq dd. b \\<le> bal (block br)", "moreover"], ["proof (state)\nthis:\n  b \\<le> mbal (dblock s qq)\n\ngoal (1 subgoal):\n 1. \\<not> (d = dd \\<and> qq = q \\<and> pp = p) \\<Longrightarrow>\n    \\<exists>br\\<in>blocksRead s' qq dd. b \\<le> bal (block br)", "from act hasRead False"], ["proof (chain)\npicking this:\n  HPhase1or2ReadThen s s' q d pp\n  hasRead s' qq dd p\n  \\<not> (d = dd \\<and> qq = q \\<and> pp = p)", "have \"hasRead s qq dd p\""], ["proof (prove)\nusing this:\n  HPhase1or2ReadThen s s' q d pp\n  hasRead s' qq dd p\n  \\<not> (d = dd \\<and> qq = q \\<and> pp = p)\n\ngoal (1 subgoal):\n 1. hasRead s qq dd p", "by(auto simp add: Phase1or2ReadThen_def \n  hasRead_def split: if_split_asm)"], ["proof (state)\nthis:\n  hasRead s qq dd p\n\ngoal (1 subgoal):\n 1. \\<not> (d = dd \\<and> qq = q \\<and> pp = p) \\<Longrightarrow>\n    \\<exists>br\\<in>blocksRead s' qq dd. b \\<le> bal (block br)", "ultimately"], ["proof (chain)\npicking this:\n  b \\<le> mbal (dblock s qq)\n  hasRead s qq dd p", "have \"\\<exists>br\\<in>blocksRead s qq dd. b\\<le> bal(block br)\""], ["proof (prove)\nusing this:\n  b \\<le> mbal (dblock s qq)\n  hasRead s qq dd p\n\ngoal (1 subgoal):\n 1. \\<exists>br\\<in>blocksRead s qq dd. b \\<le> bal (block br)", "using p31 asm4 d"], ["proof (prove)\nusing this:\n  b \\<le> mbal (dblock s qq)\n  hasRead s qq dd p\n  phase s qq = 1\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s d p) \\<and>\n     (\\<forall>q.\n         phase s q = 1 \\<and>\n         b \\<le> mbal (dblock s q) \\<and> hasRead s q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)))\n  dd \\<in> D\n\ngoal (1 subgoal):\n 1. \\<exists>br\\<in>blocksRead s qq dd. b \\<le> bal (block br)", "by blast"], ["proof (state)\nthis:\n  \\<exists>br\\<in>blocksRead s qq dd. b \\<le> bal (block br)\n\ngoal (1 subgoal):\n 1. \\<not> (d = dd \\<and> qq = q \\<and> pp = p) \\<Longrightarrow>\n    \\<exists>br\\<in>blocksRead s' qq dd. b \\<le> bal (block br)", "with act hasRead"], ["proof (chain)\npicking this:\n  HPhase1or2ReadThen s s' q d pp\n  hasRead s' qq dd p\n  \\<exists>br\\<in>blocksRead s qq dd. b \\<le> bal (block br)", "show \"\\<exists>br\\<in>blocksRead s' qq dd. b\\<le> bal(block br)\""], ["proof (prove)\nusing this:\n  HPhase1or2ReadThen s s' q d pp\n  hasRead s' qq dd p\n  \\<exists>br\\<in>blocksRead s qq dd. b \\<le> bal (block br)\n\ngoal (1 subgoal):\n 1. \\<exists>br\\<in>blocksRead s' qq dd. b \\<le> bal (block br)", "by(auto simp add: Phase1or2ReadThen_def hasRead_def)"], ["proof (state)\nthis:\n  \\<exists>br\\<in>blocksRead s' qq dd. b \\<le> bal (block br)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>br\\<in>blocksRead s' qq dd. b \\<le> bal (block br)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem HPhase1or2ReadThen_valueChosen:\n  assumes act: \"HPhase1or2ReadThen s s' q d p\"\n  and vc: \"valueChosen s v\"\n  and v_input: \"v \\<in> Inputs\"\n  shows \"valueChosen s' v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valueChosen s' v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. valueChosen s' v", "from vc"], ["proof (chain)\npicking this:\n  valueChosen s v", "obtain b p D where\n        asm1: \"b \\<in> (UN p. Ballot p)\"\n    and asm2: \"D\\<in>MajoritySet\"\n    and asm3: \"maxBalInp s b v\"\n    and asm4: \"\\<forall>d\\<in>D.  b \\<le> bal(disk s d p)\n                   \\<and>(\\<forall>q.(   phase s q = 1\n                          \\<and> b \\<le>mbal(dblock s q)\n                          \\<and> hasRead s q d p\n                         ) \\<longrightarrow> (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal(block br)))\""], ["proof (prove)\nusing this:\n  valueChosen s v\n\ngoal (1 subgoal):\n 1. (\\<And>b D p.\n        \\<lbrakk>b \\<in> \\<Union> (range Ballot); D \\<in> MajoritySet;\n         maxBalInp s b v;\n         \\<forall>d\\<in>D.\n            b \\<le> bal (disk s d p) \\<and>\n            (\\<forall>q.\n                phase s q = 1 \\<and>\n                b \\<le> mbal (dblock s q) \\<and>\n                hasRead s q d p \\<longrightarrow>\n                (\\<exists>br\\<in>blocksRead s q d.\n                    b \\<le> bal (block br)))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto simp add: valueChosen_def)"], ["proof (state)\nthis:\n  b \\<in> \\<Union> (range Ballot)\n  D \\<in> MajoritySet\n  maxBalInp s b v\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s d p) \\<and>\n     (\\<forall>q.\n         phase s q = 1 \\<and>\n         b \\<le> mbal (dblock s q) \\<and> hasRead s q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)))\n\ngoal (1 subgoal):\n 1. valueChosen s' v", "from HPhase1or2ReadThen_maxBalInp[OF act asm3]"], ["proof (chain)\npicking this:\n  maxBalInp s' b v", "have \"maxBalInp s' b v\""], ["proof (prove)\nusing this:\n  maxBalInp s' b v\n\ngoal (1 subgoal):\n 1. maxBalInp s' b v", "."], ["proof (state)\nthis:\n  maxBalInp s' b v\n\ngoal (1 subgoal):\n 1. valueChosen s' v", "with HPhase1or2ReadThen_valueChosen2[OF act asm4] asm1 asm2"], ["proof (chain)\npicking this:\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s' d p) \\<and>\n     (\\<forall>q.\n         phase s' q = 1 \\<and>\n         b \\<le> mbal (dblock s' q) \\<and>\n         hasRead s' q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s' q d. b \\<le> bal (block br)))\n  b \\<in> \\<Union> (range Ballot)\n  D \\<in> MajoritySet\n  maxBalInp s' b v", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s' d p) \\<and>\n     (\\<forall>q.\n         phase s' q = 1 \\<and>\n         b \\<le> mbal (dblock s' q) \\<and>\n         hasRead s' q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s' q d. b \\<le> bal (block br)))\n  b \\<in> \\<Union> (range Ballot)\n  D \\<in> MajoritySet\n  maxBalInp s' b v\n\ngoal (1 subgoal):\n 1. valueChosen s' v", "by(auto simp add: valueChosen_def)"], ["proof (state)\nthis:\n  valueChosen s' v\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem HPhase1or2ReadElse_valueChosen:\n  \"\\<lbrakk> HPhase1or2ReadElse s s' p d r; valueChosen s v; v\\<in> Inputs  \\<rbrakk>\n     \\<Longrightarrow> valueChosen s' v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>HPhase1or2ReadElse s s' p d r; valueChosen s v;\n     v \\<in> Inputs\\<rbrakk>\n    \\<Longrightarrow> valueChosen s' v", "using HStartBallot_valueChosen"], ["proof (prove)\nusing this:\n  \\<lbrakk>HStartBallot ?s ?s' ?q; valueChosen ?s ?v;\n   ?v \\<in> Inputs\\<rbrakk>\n  \\<Longrightarrow> valueChosen ?s' ?v\n\ngoal (1 subgoal):\n 1. \\<lbrakk>HPhase1or2ReadElse s s' p d r; valueChosen s v;\n     v \\<in> Inputs\\<rbrakk>\n    \\<Longrightarrow> valueChosen s' v", "by(auto simp add: Phase1or2ReadElse_def)"], ["", "lemma HEndPhase2_maxBalInp:\n  assumes act: \"HEndPhase2 s s' q\"\n    and asm3: \"maxBalInp s b v\"\n  shows \"maxBalInp s' b v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. maxBalInp s' b v", "proof(auto simp add: maxBalInp_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>bk.\n       \\<lbrakk>bk \\<in> allBlocks s'; b \\<le> bal bk\\<rbrakk>\n       \\<Longrightarrow> inp bk = v", "fix bk"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>bk.\n       \\<lbrakk>bk \\<in> allBlocks s'; b \\<le> bal bk\\<rbrakk>\n       \\<Longrightarrow> inp bk = v", "assume bk: \"bk \\<in> allBlocks s'\"\n    and b_bal: \"b\\<le> bal bk\""], ["proof (state)\nthis:\n  bk \\<in> allBlocks s'\n  b \\<le> bal bk\n\ngoal (1 subgoal):\n 1. \\<And>bk.\n       \\<lbrakk>bk \\<in> allBlocks s'; b \\<le> bal bk\\<rbrakk>\n       \\<Longrightarrow> inp bk = v", "from subsetD[OF HEndPhase2_allBlocks[OF act] bk] asm3 b_bal"], ["proof (chain)\npicking this:\n  bk \\<in> allBlocks s\n  maxBalInp s b v\n  b \\<le> bal bk", "show \"inp bk = v\""], ["proof (prove)\nusing this:\n  bk \\<in> allBlocks s\n  maxBalInp s b v\n  b \\<le> bal bk\n\ngoal (1 subgoal):\n 1. inp bk = v", "by(auto simp add: maxBalInp_def)"], ["proof (state)\nthis:\n  inp bk = v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HEndPhase2_valueChosen2:\n  assumes act: \"HEndPhase2 s s' q\"\n    and asm4: \"\\<forall>d\\<in>D.   b \\<le> bal(disk s d p)\n                   \\<and>(\\<forall>q.(   phase s q = 1\n                          \\<and> b \\<le>mbal(dblock s q)\n                          \\<and> hasRead s q d p\n                         ) \\<longrightarrow> (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal(block br)))\" (is \"?P s\")\n  shows \"?P s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>d\\<in>D.\n       b \\<le> bal (disk s' d p) \\<and>\n       (\\<forall>q.\n           phase s' q = 1 \\<and>\n           b \\<le> mbal (dblock s' q) \\<and>\n           hasRead s' q d p \\<longrightarrow>\n           (\\<exists>br\\<in>blocksRead s' q d. b \\<le> bal (block br)))", "proof(auto)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>d. d \\<in> D \\<Longrightarrow> b \\<le> bal (disk s' d p)\n 2. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "fix d"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>d. d \\<in> D \\<Longrightarrow> b \\<le> bal (disk s' d p)\n 2. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "assume d: \"d\\<in>D\""], ["proof (state)\nthis:\n  d \\<in> D\n\ngoal (2 subgoals):\n 1. \\<And>d. d \\<in> D \\<Longrightarrow> b \\<le> bal (disk s' d p)\n 2. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "with act asm4"], ["proof (chain)\npicking this:\n  HEndPhase2 s s' q\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s d p) \\<and>\n     (\\<forall>q.\n         phase s q = 1 \\<and>\n         b \\<le> mbal (dblock s q) \\<and> hasRead s q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)))\n  d \\<in> D", "show \"b \\<le> bal (disk s' d p)\""], ["proof (prove)\nusing this:\n  HEndPhase2 s s' q\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s d p) \\<and>\n     (\\<forall>q.\n         phase s q = 1 \\<and>\n         b \\<le> mbal (dblock s q) \\<and> hasRead s q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)))\n  d \\<in> D\n\ngoal (1 subgoal):\n 1. b \\<le> bal (disk s' d p)", "by(auto simp add: EndPhase2_def)"], ["proof (state)\nthis:\n  b \\<le> bal (disk s' d p)\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "fix d q"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "assume d: \"d\\<in>D\"\n    and phase': \"phase s' q = Suc 0\" \n    and dblk_mbal: \"b \\<le> mbal (dblock s' q)\"\n    and hasRead: \"hasRead s' q d p\""], ["proof (state)\nthis:\n  d \\<in> D\n  phase s' q = Suc 0\n  b \\<le> mbal (dblock s' q)\n  hasRead s' q d p\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "from phase' act hasRead"], ["proof (chain)\npicking this:\n  phase s' q = Suc 0\n  HEndPhase2 s s' q\n  hasRead s' q d p", "have p31: \"phase s q = 1\"\n   and p32: \"dblock s' q = dblock s q\""], ["proof (prove)\nusing this:\n  phase s' q = Suc 0\n  HEndPhase2 s s' q\n  hasRead s' q d p\n\ngoal (1 subgoal):\n 1. phase s q = 1 &&& dblock s' q = dblock s q", "by(auto simp add: EndPhase2_def InitializePhase_def\n                      hasRead_def split : if_split_asm)"], ["proof (state)\nthis:\n  phase s q = 1\n  dblock s' q = dblock s q\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "with dblk_mbal"], ["proof (chain)\npicking this:\n  b \\<le> mbal (dblock s' q)\n  phase s q = 1\n  dblock s' q = dblock s q", "have \"b\\<le>mbal(dblock s q)\""], ["proof (prove)\nusing this:\n  b \\<le> mbal (dblock s' q)\n  phase s q = 1\n  dblock s' q = dblock s q\n\ngoal (1 subgoal):\n 1. b \\<le> mbal (dblock s q)", "by auto"], ["proof (state)\nthis:\n  b \\<le> mbal (dblock s q)\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "moreover"], ["proof (state)\nthis:\n  b \\<le> mbal (dblock s q)\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "from act hasRead"], ["proof (chain)\npicking this:\n  HEndPhase2 s s' q\n  hasRead s' q d p", "have \"hasRead s q d p\""], ["proof (prove)\nusing this:\n  HEndPhase2 s s' q\n  hasRead s' q d p\n\ngoal (1 subgoal):\n 1. hasRead s q d p", "by(auto simp add: EndPhase2_def InitializePhase_def \n      hasRead_def split: if_split_asm)"], ["proof (state)\nthis:\n  hasRead s q d p\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "ultimately"], ["proof (chain)\npicking this:\n  b \\<le> mbal (dblock s q)\n  hasRead s q d p", "have \"\\<exists>br\\<in>blocksRead s q d. b\\<le> bal(block br)\""], ["proof (prove)\nusing this:\n  b \\<le> mbal (dblock s q)\n  hasRead s q d p\n\ngoal (1 subgoal):\n 1. \\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)", "using p31 asm4 d"], ["proof (prove)\nusing this:\n  b \\<le> mbal (dblock s q)\n  hasRead s q d p\n  phase s q = 1\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s d p) \\<and>\n     (\\<forall>q.\n         phase s q = 1 \\<and>\n         b \\<le> mbal (dblock s q) \\<and> hasRead s q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)))\n  d \\<in> D\n\ngoal (1 subgoal):\n 1. \\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)", "by blast"], ["proof (state)\nthis:\n  \\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "with act hasRead"], ["proof (chain)\npicking this:\n  HEndPhase2 s s' q\n  hasRead s' q d p\n  \\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)", "show \"\\<exists>br\\<in>blocksRead s' q d. b\\<le> bal(block br)\""], ["proof (prove)\nusing this:\n  HEndPhase2 s s' q\n  hasRead s' q d p\n  \\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)\n\ngoal (1 subgoal):\n 1. \\<exists>br\\<in>blocksRead s' q d. b \\<le> bal (block br)", "by(auto simp add: EndPhase2_def InitializePhase_def\n                      hasRead_def)"], ["proof (state)\nthis:\n  \\<exists>br\\<in>blocksRead s' q d. b \\<le> bal (block br)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem HEndPhase2_valueChosen:\n  assumes act: \"HEndPhase2 s s' q\"\n  and vc: \"valueChosen s v\"\n  and v_input: \"v \\<in> Inputs\"\n  shows \"valueChosen s' v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valueChosen s' v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. valueChosen s' v", "from vc"], ["proof (chain)\npicking this:\n  valueChosen s v", "obtain b p D where\n        asm1: \"b \\<in> (UN p. Ballot p)\"\n    and asm2: \"D\\<in>MajoritySet\"\n    and asm3: \"maxBalInp s b v\"\n    and asm4: \"\\<forall>d\\<in>D.  b \\<le> bal(disk s d p)\n                   \\<and>(\\<forall>q.(   phase s q = 1\n                          \\<and> b \\<le>mbal(dblock s q)\n                          \\<and> hasRead s q d p\n                         ) \\<longrightarrow> (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal(block br)))\""], ["proof (prove)\nusing this:\n  valueChosen s v\n\ngoal (1 subgoal):\n 1. (\\<And>b D p.\n        \\<lbrakk>b \\<in> \\<Union> (range Ballot); D \\<in> MajoritySet;\n         maxBalInp s b v;\n         \\<forall>d\\<in>D.\n            b \\<le> bal (disk s d p) \\<and>\n            (\\<forall>q.\n                phase s q = 1 \\<and>\n                b \\<le> mbal (dblock s q) \\<and>\n                hasRead s q d p \\<longrightarrow>\n                (\\<exists>br\\<in>blocksRead s q d.\n                    b \\<le> bal (block br)))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto simp add: valueChosen_def)"], ["proof (state)\nthis:\n  b \\<in> \\<Union> (range Ballot)\n  D \\<in> MajoritySet\n  maxBalInp s b v\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s d p) \\<and>\n     (\\<forall>q.\n         phase s q = 1 \\<and>\n         b \\<le> mbal (dblock s q) \\<and> hasRead s q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)))\n\ngoal (1 subgoal):\n 1. valueChosen s' v", "from HEndPhase2_maxBalInp[OF act asm3]"], ["proof (chain)\npicking this:\n  maxBalInp s' b v", "have \"maxBalInp s' b v\""], ["proof (prove)\nusing this:\n  maxBalInp s' b v\n\ngoal (1 subgoal):\n 1. maxBalInp s' b v", "."], ["proof (state)\nthis:\n  maxBalInp s' b v\n\ngoal (1 subgoal):\n 1. valueChosen s' v", "with HEndPhase2_valueChosen2[OF act asm4] asm1 asm2"], ["proof (chain)\npicking this:\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s' d p) \\<and>\n     (\\<forall>q.\n         phase s' q = 1 \\<and>\n         b \\<le> mbal (dblock s' q) \\<and>\n         hasRead s' q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s' q d. b \\<le> bal (block br)))\n  b \\<in> \\<Union> (range Ballot)\n  D \\<in> MajoritySet\n  maxBalInp s' b v", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s' d p) \\<and>\n     (\\<forall>q.\n         phase s' q = 1 \\<and>\n         b \\<le> mbal (dblock s' q) \\<and>\n         hasRead s' q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s' q d. b \\<le> bal (block br)))\n  b \\<in> \\<Union> (range Ballot)\n  D \\<in> MajoritySet\n  maxBalInp s' b v\n\ngoal (1 subgoal):\n 1. valueChosen s' v", "by(auto simp add: valueChosen_def)"], ["proof (state)\nthis:\n  valueChosen s' v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HFail_maxBalInp:\n  assumes act: \"HFail s s' q\"\n    and asm1: \"b \\<in> (UN p. Ballot p)\"\n    and asm3: \"maxBalInp s b v\"\n  shows \"maxBalInp s' b v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. maxBalInp s' b v", "proof(auto simp add: maxBalInp_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>bk.\n       \\<lbrakk>bk \\<in> allBlocks s'; b \\<le> bal bk\\<rbrakk>\n       \\<Longrightarrow> inp bk = v", "fix bk"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>bk.\n       \\<lbrakk>bk \\<in> allBlocks s'; b \\<le> bal bk\\<rbrakk>\n       \\<Longrightarrow> inp bk = v", "assume bk: \"bk \\<in> allBlocks s'\"\n    and b_bal: \"b\\<le> bal bk\""], ["proof (state)\nthis:\n  bk \\<in> allBlocks s'\n  b \\<le> bal bk\n\ngoal (1 subgoal):\n 1. \\<And>bk.\n       \\<lbrakk>bk \\<in> allBlocks s'; b \\<le> bal bk\\<rbrakk>\n       \\<Longrightarrow> inp bk = v", "from subsetD[OF HFail_allBlocks[OF act] bk]"], ["proof (chain)\npicking this:\n  bk \\<in> allBlocks s \\<union> {dblock s' q}", "show \"inp bk = v\""], ["proof (prove)\nusing this:\n  bk \\<in> allBlocks s \\<union> {dblock s' q}\n\ngoal (1 subgoal):\n 1. inp bk = v", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. bk \\<in> allBlocks s \\<Longrightarrow> inp bk = v\n 2. bk \\<in> {dblock s' q} \\<Longrightarrow> inp bk = v", "assume bk: \"bk\\<in>allBlocks s\""], ["proof (state)\nthis:\n  bk \\<in> allBlocks s\n\ngoal (2 subgoals):\n 1. bk \\<in> allBlocks s \\<Longrightarrow> inp bk = v\n 2. bk \\<in> {dblock s' q} \\<Longrightarrow> inp bk = v", "with asm3 b_bal"], ["proof (chain)\npicking this:\n  maxBalInp s b v\n  b \\<le> bal bk\n  bk \\<in> allBlocks s", "show ?thesis"], ["proof (prove)\nusing this:\n  maxBalInp s b v\n  b \\<le> bal bk\n  bk \\<in> allBlocks s\n\ngoal (1 subgoal):\n 1. inp bk = v", "by(auto simp add: maxBalInp_def)"], ["proof (state)\nthis:\n  inp bk = v\n\ngoal (1 subgoal):\n 1. bk \\<in> {dblock s' q} \\<Longrightarrow> inp bk = v", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. bk \\<in> {dblock s' q} \\<Longrightarrow> inp bk = v", "assume bk: \"bk\\<in>{dblock s' q}\""], ["proof (state)\nthis:\n  bk \\<in> {dblock s' q}\n\ngoal (1 subgoal):\n 1. bk \\<in> {dblock s' q} \\<Longrightarrow> inp bk = v", "with act"], ["proof (chain)\npicking this:\n  HFail s s' q\n  bk \\<in> {dblock s' q}", "have \"bal bk = 0\""], ["proof (prove)\nusing this:\n  HFail s s' q\n  bk \\<in> {dblock s' q}\n\ngoal (1 subgoal):\n 1. bal bk = 0", "by(auto simp add: Fail_def InitDB_def)"], ["proof (state)\nthis:\n  bal bk = 0\n\ngoal (1 subgoal):\n 1. bk \\<in> {dblock s' q} \\<Longrightarrow> inp bk = v", "moreover"], ["proof (state)\nthis:\n  bal bk = 0\n\ngoal (1 subgoal):\n 1. bk \\<in> {dblock s' q} \\<Longrightarrow> inp bk = v", "from Ballot_nzero asm1"], ["proof (chain)\npicking this:\n  \\<forall>p. 0 \\<notin> Ballot p\n  b \\<in> \\<Union> (range Ballot)", "have \"0 < b\""], ["proof (prove)\nusing this:\n  \\<forall>p. 0 \\<notin> Ballot p\n  b \\<in> \\<Union> (range Ballot)\n\ngoal (1 subgoal):\n 1. 0 < b", "by auto"], ["proof (state)\nthis:\n  0 < b\n\ngoal (1 subgoal):\n 1. bk \\<in> {dblock s' q} \\<Longrightarrow> inp bk = v", "ultimately"], ["proof (chain)\npicking this:\n  bal bk = 0\n  0 < b", "show ?thesis"], ["proof (prove)\nusing this:\n  bal bk = 0\n  0 < b\n\ngoal (1 subgoal):\n 1. inp bk = v", "using b_bal"], ["proof (prove)\nusing this:\n  bal bk = 0\n  0 < b\n  b \\<le> bal bk\n\ngoal (1 subgoal):\n 1. inp bk = v", "by auto"], ["proof (state)\nthis:\n  inp bk = v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inp bk = v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HFail_valueChosen2:\n  assumes act: \"HFail s s' q\"\n    and asm4: \"\\<forall>d\\<in>D.   b \\<le> bal(disk s d p)\n                   \\<and>(\\<forall>q.(   phase s q = 1\n                          \\<and> b \\<le>mbal(dblock s q)\n                          \\<and> hasRead s q d p\n                         ) \\<longrightarrow> (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal(block br)))\" (is \"?P s\")\n  shows \"?P s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>d\\<in>D.\n       b \\<le> bal (disk s' d p) \\<and>\n       (\\<forall>q.\n           phase s' q = 1 \\<and>\n           b \\<le> mbal (dblock s' q) \\<and>\n           hasRead s' q d p \\<longrightarrow>\n           (\\<exists>br\\<in>blocksRead s' q d. b \\<le> bal (block br)))", "proof(auto)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>d. d \\<in> D \\<Longrightarrow> b \\<le> bal (disk s' d p)\n 2. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "fix d"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>d. d \\<in> D \\<Longrightarrow> b \\<le> bal (disk s' d p)\n 2. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "assume d: \"d\\<in>D\""], ["proof (state)\nthis:\n  d \\<in> D\n\ngoal (2 subgoals):\n 1. \\<And>d. d \\<in> D \\<Longrightarrow> b \\<le> bal (disk s' d p)\n 2. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "with act asm4"], ["proof (chain)\npicking this:\n  HFail s s' q\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s d p) \\<and>\n     (\\<forall>q.\n         phase s q = 1 \\<and>\n         b \\<le> mbal (dblock s q) \\<and> hasRead s q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)))\n  d \\<in> D", "show \"b \\<le> bal (disk s' d p)\""], ["proof (prove)\nusing this:\n  HFail s s' q\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s d p) \\<and>\n     (\\<forall>q.\n         phase s q = 1 \\<and>\n         b \\<le> mbal (dblock s q) \\<and> hasRead s q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)))\n  d \\<in> D\n\ngoal (1 subgoal):\n 1. b \\<le> bal (disk s' d p)", "by(auto simp add: Fail_def)"], ["proof (state)\nthis:\n  b \\<le> bal (disk s' d p)\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "fix d q"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "assume d: \"d\\<in>D\"\n    and phase': \"phase s' q = Suc 0\" \n    and dblk_mbal: \"b \\<le> mbal (dblock s' q)\"\n    and hasRead: \"hasRead s' q d p\""], ["proof (state)\nthis:\n  d \\<in> D\n  phase s' q = Suc 0\n  b \\<le> mbal (dblock s' q)\n  hasRead s' q d p\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "from phase' act hasRead"], ["proof (chain)\npicking this:\n  phase s' q = Suc 0\n  HFail s s' q\n  hasRead s' q d p", "have p31: \"phase s q = 1\"\n   and p32: \"dblock s' q = dblock s q\""], ["proof (prove)\nusing this:\n  phase s' q = Suc 0\n  HFail s s' q\n  hasRead s' q d p\n\ngoal (1 subgoal):\n 1. phase s q = 1 &&& dblock s' q = dblock s q", "by(auto simp add: Fail_def InitializePhase_def\n                  hasRead_def split : if_split_asm)"], ["proof (state)\nthis:\n  phase s q = 1\n  dblock s' q = dblock s q\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "with dblk_mbal"], ["proof (chain)\npicking this:\n  b \\<le> mbal (dblock s' q)\n  phase s q = 1\n  dblock s' q = dblock s q", "have \"b\\<le>mbal(dblock s q)\""], ["proof (prove)\nusing this:\n  b \\<le> mbal (dblock s' q)\n  phase s q = 1\n  dblock s' q = dblock s q\n\ngoal (1 subgoal):\n 1. b \\<le> mbal (dblock s q)", "by auto"], ["proof (state)\nthis:\n  b \\<le> mbal (dblock s q)\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "moreover"], ["proof (state)\nthis:\n  b \\<le> mbal (dblock s q)\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "from act hasRead"], ["proof (chain)\npicking this:\n  HFail s s' q\n  hasRead s' q d p", "have \"hasRead s q d p\""], ["proof (prove)\nusing this:\n  HFail s s' q\n  hasRead s' q d p\n\ngoal (1 subgoal):\n 1. hasRead s q d p", "by(auto simp add: Fail_def InitializePhase_def \n      hasRead_def split: if_split_asm)"], ["proof (state)\nthis:\n  hasRead s q d p\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "ultimately"], ["proof (chain)\npicking this:\n  b \\<le> mbal (dblock s q)\n  hasRead s q d p", "have \"\\<exists>br\\<in>blocksRead s q d. b\\<le> bal(block br)\""], ["proof (prove)\nusing this:\n  b \\<le> mbal (dblock s q)\n  hasRead s q d p\n\ngoal (1 subgoal):\n 1. \\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)", "using p31 asm4 d"], ["proof (prove)\nusing this:\n  b \\<le> mbal (dblock s q)\n  hasRead s q d p\n  phase s q = 1\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s d p) \\<and>\n     (\\<forall>q.\n         phase s q = 1 \\<and>\n         b \\<le> mbal (dblock s q) \\<and> hasRead s q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)))\n  d \\<in> D\n\ngoal (1 subgoal):\n 1. \\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)", "by blast"], ["proof (state)\nthis:\n  \\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "with act hasRead"], ["proof (chain)\npicking this:\n  HFail s s' q\n  hasRead s' q d p\n  \\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)", "show \"\\<exists>br\\<in>blocksRead s' q d. b\\<le> bal(block br)\""], ["proof (prove)\nusing this:\n  HFail s s' q\n  hasRead s' q d p\n  \\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)\n\ngoal (1 subgoal):\n 1. \\<exists>br\\<in>blocksRead s' q d. b \\<le> bal (block br)", "by(auto simp add: Fail_def InitializePhase_def hasRead_def)"], ["proof (state)\nthis:\n  \\<exists>br\\<in>blocksRead s' q d. b \\<le> bal (block br)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem HFail_valueChosen:\n  assumes act: \"HFail s s' q\"\n  and vc: \"valueChosen s v\"\n  and v_input: \"v \\<in> Inputs\"\n  shows \"valueChosen s' v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valueChosen s' v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. valueChosen s' v", "from vc"], ["proof (chain)\npicking this:\n  valueChosen s v", "obtain b p D where\n        asm1: \"b \\<in> (UN p. Ballot p)\"\n    and asm2: \"D\\<in>MajoritySet\"\n    and asm3: \"maxBalInp s b v\"\n    and asm4: \"\\<forall>d\\<in>D.  b \\<le> bal(disk s d p)\n                   \\<and>(\\<forall>q.(   phase s q = 1\n                          \\<and> b \\<le>mbal(dblock s q)\n                          \\<and> hasRead s q d p\n                         ) \\<longrightarrow> (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal(block br)))\""], ["proof (prove)\nusing this:\n  valueChosen s v\n\ngoal (1 subgoal):\n 1. (\\<And>b D p.\n        \\<lbrakk>b \\<in> \\<Union> (range Ballot); D \\<in> MajoritySet;\n         maxBalInp s b v;\n         \\<forall>d\\<in>D.\n            b \\<le> bal (disk s d p) \\<and>\n            (\\<forall>q.\n                phase s q = 1 \\<and>\n                b \\<le> mbal (dblock s q) \\<and>\n                hasRead s q d p \\<longrightarrow>\n                (\\<exists>br\\<in>blocksRead s q d.\n                    b \\<le> bal (block br)))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto simp add: valueChosen_def)"], ["proof (state)\nthis:\n  b \\<in> \\<Union> (range Ballot)\n  D \\<in> MajoritySet\n  maxBalInp s b v\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s d p) \\<and>\n     (\\<forall>q.\n         phase s q = 1 \\<and>\n         b \\<le> mbal (dblock s q) \\<and> hasRead s q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)))\n\ngoal (1 subgoal):\n 1. valueChosen s' v", "from HFail_maxBalInp[OF act asm1 asm3]"], ["proof (chain)\npicking this:\n  maxBalInp s' b v", "have \"maxBalInp s' b v\""], ["proof (prove)\nusing this:\n  maxBalInp s' b v\n\ngoal (1 subgoal):\n 1. maxBalInp s' b v", "."], ["proof (state)\nthis:\n  maxBalInp s' b v\n\ngoal (1 subgoal):\n 1. valueChosen s' v", "with HFail_valueChosen2[OF act asm4] asm1 asm2"], ["proof (chain)\npicking this:\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s' d p) \\<and>\n     (\\<forall>q.\n         phase s' q = 1 \\<and>\n         b \\<le> mbal (dblock s' q) \\<and>\n         hasRead s' q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s' q d. b \\<le> bal (block br)))\n  b \\<in> \\<Union> (range Ballot)\n  D \\<in> MajoritySet\n  maxBalInp s' b v", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s' d p) \\<and>\n     (\\<forall>q.\n         phase s' q = 1 \\<and>\n         b \\<le> mbal (dblock s' q) \\<and>\n         hasRead s' q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s' q d. b \\<le> bal (block br)))\n  b \\<in> \\<Union> (range Ballot)\n  D \\<in> MajoritySet\n  maxBalInp s' b v\n\ngoal (1 subgoal):\n 1. valueChosen s' v", "by(auto simp add: valueChosen_def)"], ["proof (state)\nthis:\n  valueChosen s' v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HPhase0Read_maxBalInp:\n  assumes act: \"HPhase0Read s s' q d\"\n    and asm3: \"maxBalInp s b v\"\n  shows \"maxBalInp s' b v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. maxBalInp s' b v", "proof(auto simp add: maxBalInp_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>bk.\n       \\<lbrakk>bk \\<in> allBlocks s'; b \\<le> bal bk\\<rbrakk>\n       \\<Longrightarrow> inp bk = v", "fix bk"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>bk.\n       \\<lbrakk>bk \\<in> allBlocks s'; b \\<le> bal bk\\<rbrakk>\n       \\<Longrightarrow> inp bk = v", "assume bk: \"bk \\<in> allBlocks s'\"\n    and b_bal: \"b\\<le> bal bk\""], ["proof (state)\nthis:\n  bk \\<in> allBlocks s'\n  b \\<le> bal bk\n\ngoal (1 subgoal):\n 1. \\<And>bk.\n       \\<lbrakk>bk \\<in> allBlocks s'; b \\<le> bal bk\\<rbrakk>\n       \\<Longrightarrow> inp bk = v", "from subsetD[OF HPhase0Read_allBlocks[OF act] bk] asm3 b_bal"], ["proof (chain)\npicking this:\n  bk \\<in> allBlocks s\n  maxBalInp s b v\n  b \\<le> bal bk", "show \"inp bk = v\""], ["proof (prove)\nusing this:\n  bk \\<in> allBlocks s\n  maxBalInp s b v\n  b \\<le> bal bk\n\ngoal (1 subgoal):\n 1. inp bk = v", "by(auto simp add: maxBalInp_def)"], ["proof (state)\nthis:\n  inp bk = v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HPhase0Read_valueChosen2:\n  assumes act: \"HPhase0Read s s' qq dd\"\n    and asm4: \"\\<forall>d\\<in>D.   b \\<le> bal(disk s d p)\n                   \\<and>(\\<forall>q.(   phase s q = 1\n                          \\<and> b \\<le>mbal(dblock s q)\n                          \\<and> hasRead s q d p\n                         ) \\<longrightarrow> (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal(block br)))\" (is \"?P s\")\n  shows \"?P s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>d\\<in>D.\n       b \\<le> bal (disk s' d p) \\<and>\n       (\\<forall>q.\n           phase s' q = 1 \\<and>\n           b \\<le> mbal (dblock s' q) \\<and>\n           hasRead s' q d p \\<longrightarrow>\n           (\\<exists>br\\<in>blocksRead s' q d. b \\<le> bal (block br)))", "proof(auto)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>d. d \\<in> D \\<Longrightarrow> b \\<le> bal (disk s' d p)\n 2. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "fix d"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>d. d \\<in> D \\<Longrightarrow> b \\<le> bal (disk s' d p)\n 2. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "assume d: \"d\\<in>D\""], ["proof (state)\nthis:\n  d \\<in> D\n\ngoal (2 subgoals):\n 1. \\<And>d. d \\<in> D \\<Longrightarrow> b \\<le> bal (disk s' d p)\n 2. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "with act asm4"], ["proof (chain)\npicking this:\n  HPhase0Read s s' qq dd\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s d p) \\<and>\n     (\\<forall>q.\n         phase s q = 1 \\<and>\n         b \\<le> mbal (dblock s q) \\<and> hasRead s q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)))\n  d \\<in> D", "show \"b \\<le> bal (disk s' d p)\""], ["proof (prove)\nusing this:\n  HPhase0Read s s' qq dd\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s d p) \\<and>\n     (\\<forall>q.\n         phase s q = 1 \\<and>\n         b \\<le> mbal (dblock s q) \\<and> hasRead s q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)))\n  d \\<in> D\n\ngoal (1 subgoal):\n 1. b \\<le> bal (disk s' d p)", "by(auto simp add: Phase0Read_def)"], ["proof (state)\nthis:\n  b \\<le> bal (disk s' d p)\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "fix d q"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "assume d: \"d\\<in>D\"\n    and phase': \"phase s' q = Suc 0\" \n    and dblk_mbal: \"b \\<le> mbal (dblock s' q)\"\n    and hasRead: \"hasRead s' q d p\""], ["proof (state)\nthis:\n  d \\<in> D\n  phase s' q = Suc 0\n  b \\<le> mbal (dblock s' q)\n  hasRead s' q d p\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "from phase' act"], ["proof (chain)\npicking this:\n  phase s' q = Suc 0\n  HPhase0Read s s' qq dd", "have qqnq: \"qq\\<noteq>q\""], ["proof (prove)\nusing this:\n  phase s' q = Suc 0\n  HPhase0Read s s' qq dd\n\ngoal (1 subgoal):\n 1. qq \\<noteq> q", "by(auto simp add: Phase0Read_def)"], ["proof (state)\nthis:\n  qq \\<noteq> q\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "show \"\\<exists>br\\<in>blocksRead s' q d. b \\<le> bal (block br)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>br\\<in>blocksRead s' q d. b \\<le> bal (block br)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>br\\<in>blocksRead s' q d. b \\<le> bal (block br)", "from phase' act hasRead"], ["proof (chain)\npicking this:\n  phase s' q = Suc 0\n  HPhase0Read s s' qq dd\n  hasRead s' q d p", "have p31: \"phase s q = 1\"\n      and p32: \"dblock s' q = dblock s q\""], ["proof (prove)\nusing this:\n  phase s' q = Suc 0\n  HPhase0Read s s' qq dd\n  hasRead s' q d p\n\ngoal (1 subgoal):\n 1. phase s q = 1 &&& dblock s' q = dblock s q", "by(auto simp add: Phase0Read_def hasRead_def)"], ["proof (state)\nthis:\n  phase s q = 1\n  dblock s' q = dblock s q\n\ngoal (1 subgoal):\n 1. \\<exists>br\\<in>blocksRead s' q d. b \\<le> bal (block br)", "with dblk_mbal"], ["proof (chain)\npicking this:\n  b \\<le> mbal (dblock s' q)\n  phase s q = 1\n  dblock s' q = dblock s q", "have \"b\\<le>mbal(dblock s q)\""], ["proof (prove)\nusing this:\n  b \\<le> mbal (dblock s' q)\n  phase s q = 1\n  dblock s' q = dblock s q\n\ngoal (1 subgoal):\n 1. b \\<le> mbal (dblock s q)", "by auto"], ["proof (state)\nthis:\n  b \\<le> mbal (dblock s q)\n\ngoal (1 subgoal):\n 1. \\<exists>br\\<in>blocksRead s' q d. b \\<le> bal (block br)", "moreover"], ["proof (state)\nthis:\n  b \\<le> mbal (dblock s q)\n\ngoal (1 subgoal):\n 1. \\<exists>br\\<in>blocksRead s' q d. b \\<le> bal (block br)", "from act hasRead qqnq"], ["proof (chain)\npicking this:\n  HPhase0Read s s' qq dd\n  hasRead s' q d p\n  qq \\<noteq> q", "have \"hasRead s q d p\""], ["proof (prove)\nusing this:\n  HPhase0Read s s' qq dd\n  hasRead s' q d p\n  qq \\<noteq> q\n\ngoal (1 subgoal):\n 1. hasRead s q d p", "by(auto simp add: Phase0Read_def hasRead_def\n                 split: if_split_asm)"], ["proof (state)\nthis:\n  hasRead s q d p\n\ngoal (1 subgoal):\n 1. \\<exists>br\\<in>blocksRead s' q d. b \\<le> bal (block br)", "ultimately"], ["proof (chain)\npicking this:\n  b \\<le> mbal (dblock s q)\n  hasRead s q d p", "have \"\\<exists>br\\<in>blocksRead s q d. b\\<le> bal(block br)\""], ["proof (prove)\nusing this:\n  b \\<le> mbal (dblock s q)\n  hasRead s q d p\n\ngoal (1 subgoal):\n 1. \\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)", "using p31 asm4 d"], ["proof (prove)\nusing this:\n  b \\<le> mbal (dblock s q)\n  hasRead s q d p\n  phase s q = 1\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s d p) \\<and>\n     (\\<forall>q.\n         phase s q = 1 \\<and>\n         b \\<le> mbal (dblock s q) \\<and> hasRead s q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)))\n  d \\<in> D\n\ngoal (1 subgoal):\n 1. \\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)", "by blast"], ["proof (state)\nthis:\n  \\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)\n\ngoal (1 subgoal):\n 1. \\<exists>br\\<in>blocksRead s' q d. b \\<le> bal (block br)", "with act hasRead"], ["proof (chain)\npicking this:\n  HPhase0Read s s' qq dd\n  hasRead s' q d p\n  \\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)", "show \"\\<exists>br\\<in>blocksRead s' q d. b\\<le> bal(block br)\""], ["proof (prove)\nusing this:\n  HPhase0Read s s' qq dd\n  hasRead s' q d p\n  \\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)\n\ngoal (1 subgoal):\n 1. \\<exists>br\\<in>blocksRead s' q d. b \\<le> bal (block br)", "by(auto simp add: Phase0Read_def InitializePhase_def\n                        hasRead_def)"], ["proof (state)\nthis:\n  \\<exists>br\\<in>blocksRead s' q d. b \\<le> bal (block br)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>br\\<in>blocksRead s' q d. b \\<le> bal (block br)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem HPhase0Read_valueChosen:\n  assumes act: \"HPhase0Read s s' q d\"\n  and vc: \"valueChosen s v\"\n  and v_input: \"v \\<in> Inputs\"\n  shows \"valueChosen s' v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valueChosen s' v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. valueChosen s' v", "from vc"], ["proof (chain)\npicking this:\n  valueChosen s v", "obtain b p D where\n        asm1: \"b \\<in> (UN p. Ballot p)\"\n    and asm2: \"D\\<in>MajoritySet\"\n    and asm3: \"maxBalInp s b v\"\n    and asm4: \"\\<forall>d\\<in>D.  b \\<le> bal(disk s d p)\n                   \\<and>(\\<forall>q.(   phase s q = 1\n                          \\<and> b \\<le>mbal(dblock s q)\n                          \\<and> hasRead s q d p\n                         ) \\<longrightarrow> (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal(block br)))\""], ["proof (prove)\nusing this:\n  valueChosen s v\n\ngoal (1 subgoal):\n 1. (\\<And>b D p.\n        \\<lbrakk>b \\<in> \\<Union> (range Ballot); D \\<in> MajoritySet;\n         maxBalInp s b v;\n         \\<forall>d\\<in>D.\n            b \\<le> bal (disk s d p) \\<and>\n            (\\<forall>q.\n                phase s q = 1 \\<and>\n                b \\<le> mbal (dblock s q) \\<and>\n                hasRead s q d p \\<longrightarrow>\n                (\\<exists>br\\<in>blocksRead s q d.\n                    b \\<le> bal (block br)))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto simp add: valueChosen_def)"], ["proof (state)\nthis:\n  b \\<in> \\<Union> (range Ballot)\n  D \\<in> MajoritySet\n  maxBalInp s b v\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s d p) \\<and>\n     (\\<forall>q.\n         phase s q = 1 \\<and>\n         b \\<le> mbal (dblock s q) \\<and> hasRead s q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)))\n\ngoal (1 subgoal):\n 1. valueChosen s' v", "from HPhase0Read_maxBalInp[OF act asm3]"], ["proof (chain)\npicking this:\n  maxBalInp s' b v", "have \"maxBalInp s' b v\""], ["proof (prove)\nusing this:\n  maxBalInp s' b v\n\ngoal (1 subgoal):\n 1. maxBalInp s' b v", "."], ["proof (state)\nthis:\n  maxBalInp s' b v\n\ngoal (1 subgoal):\n 1. valueChosen s' v", "with HPhase0Read_valueChosen2[OF act asm4] asm1 asm2"], ["proof (chain)\npicking this:\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s' d p) \\<and>\n     (\\<forall>q.\n         phase s' q = 1 \\<and>\n         b \\<le> mbal (dblock s' q) \\<and>\n         hasRead s' q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s' q d. b \\<le> bal (block br)))\n  b \\<in> \\<Union> (range Ballot)\n  D \\<in> MajoritySet\n  maxBalInp s' b v", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s' d p) \\<and>\n     (\\<forall>q.\n         phase s' q = 1 \\<and>\n         b \\<le> mbal (dblock s' q) \\<and>\n         hasRead s' q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s' q d. b \\<le> bal (block br)))\n  b \\<in> \\<Union> (range Ballot)\n  D \\<in> MajoritySet\n  maxBalInp s' b v\n\ngoal (1 subgoal):\n 1. valueChosen s' v", "by(auto simp add: valueChosen_def)"], ["proof (state)\nthis:\n  valueChosen s' v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HEndPhase0_maxBalInp:\n  assumes act: \"HEndPhase0 s s' q\"\n    and asm3: \"maxBalInp s b v\"\n    and inv1: \"Inv1 s\"\n  shows \"maxBalInp s' b v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. maxBalInp s' b v", "proof(auto simp add: maxBalInp_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>bk.\n       \\<lbrakk>bk \\<in> allBlocks s'; b \\<le> bal bk\\<rbrakk>\n       \\<Longrightarrow> inp bk = v", "fix bk"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>bk.\n       \\<lbrakk>bk \\<in> allBlocks s'; b \\<le> bal bk\\<rbrakk>\n       \\<Longrightarrow> inp bk = v", "assume bk: \"bk \\<in> allBlocks s'\"\n    and b_bal: \"b\\<le> bal bk\""], ["proof (state)\nthis:\n  bk \\<in> allBlocks s'\n  b \\<le> bal bk\n\ngoal (1 subgoal):\n 1. \\<And>bk.\n       \\<lbrakk>bk \\<in> allBlocks s'; b \\<le> bal bk\\<rbrakk>\n       \\<Longrightarrow> inp bk = v", "from subsetD[OF HEndPhase0_allBlocks[OF act] bk]"], ["proof (chain)\npicking this:\n  bk \\<in> allBlocks s \\<union> {dblock s' q}", "show \"inp bk = v\""], ["proof (prove)\nusing this:\n  bk \\<in> allBlocks s \\<union> {dblock s' q}\n\ngoal (1 subgoal):\n 1. inp bk = v", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. bk \\<in> allBlocks s \\<Longrightarrow> inp bk = v\n 2. bk \\<in> {dblock s' q} \\<Longrightarrow> inp bk = v", "assume bk: \"bk\\<in>allBlocks s\""], ["proof (state)\nthis:\n  bk \\<in> allBlocks s\n\ngoal (2 subgoals):\n 1. bk \\<in> allBlocks s \\<Longrightarrow> inp bk = v\n 2. bk \\<in> {dblock s' q} \\<Longrightarrow> inp bk = v", "with asm3 b_bal"], ["proof (chain)\npicking this:\n  maxBalInp s b v\n  b \\<le> bal bk\n  bk \\<in> allBlocks s", "show ?thesis"], ["proof (prove)\nusing this:\n  maxBalInp s b v\n  b \\<le> bal bk\n  bk \\<in> allBlocks s\n\ngoal (1 subgoal):\n 1. inp bk = v", "by(auto simp add: maxBalInp_def)"], ["proof (state)\nthis:\n  inp bk = v\n\ngoal (1 subgoal):\n 1. bk \\<in> {dblock s' q} \\<Longrightarrow> inp bk = v", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. bk \\<in> {dblock s' q} \\<Longrightarrow> inp bk = v", "assume bk: \"bk\\<in>{dblock s' q}\""], ["proof (state)\nthis:\n  bk \\<in> {dblock s' q}\n\ngoal (1 subgoal):\n 1. bk \\<in> {dblock s' q} \\<Longrightarrow> inp bk = v", "with HEndPhase0_some[OF act inv1] act"], ["proof (chain)\npicking this:\n  (SOME b.\n      b \\<in> allBlocksRead s q \\<and>\n      (\\<forall>t\\<in>allBlocksRead s q. bal t \\<le> bal b))\n  \\<in> allBlocksRead s q \\<and>\n  (\\<forall>t\\<in>allBlocksRead s q.\n      bal t\n      \\<le> bal (SOME b.\n                    b \\<in> allBlocksRead s q \\<and>\n                    (\\<forall>t\\<in>allBlocksRead s q. bal t \\<le> bal b)))\n  HEndPhase0 s s' q\n  bk \\<in> {dblock s' q}", "have \"\\<exists>ba\\<in>allBlocksRead s q. bal ba = bal (dblock s' q) \\<and> inp ba = inp (dblock s' q)\""], ["proof (prove)\nusing this:\n  (SOME b.\n      b \\<in> allBlocksRead s q \\<and>\n      (\\<forall>t\\<in>allBlocksRead s q. bal t \\<le> bal b))\n  \\<in> allBlocksRead s q \\<and>\n  (\\<forall>t\\<in>allBlocksRead s q.\n      bal t\n      \\<le> bal (SOME b.\n                    b \\<in> allBlocksRead s q \\<and>\n                    (\\<forall>t\\<in>allBlocksRead s q. bal t \\<le> bal b)))\n  HEndPhase0 s s' q\n  bk \\<in> {dblock s' q}\n\ngoal (1 subgoal):\n 1. \\<exists>ba\\<in>allBlocksRead s q.\n       bal ba = bal (dblock s' q) \\<and> inp ba = inp (dblock s' q)", "by(auto simp add: EndPhase0_def)"], ["proof (state)\nthis:\n  \\<exists>ba\\<in>allBlocksRead s q.\n     bal ba = bal (dblock s' q) \\<and> inp ba = inp (dblock s' q)\n\ngoal (1 subgoal):\n 1. bk \\<in> {dblock s' q} \\<Longrightarrow> inp bk = v", "then"], ["proof (chain)\npicking this:\n  \\<exists>ba\\<in>allBlocksRead s q.\n     bal ba = bal (dblock s' q) \\<and> inp ba = inp (dblock s' q)", "obtain ba \n      where ba_blksread: \"ba\\<in>allBlocksRead s q\" \n      and ba_balinp: \"bal ba = bal (dblock s' q) \\<and> inp ba = inp (dblock s' q)\""], ["proof (prove)\nusing this:\n  \\<exists>ba\\<in>allBlocksRead s q.\n     bal ba = bal (dblock s' q) \\<and> inp ba = inp (dblock s' q)\n\ngoal (1 subgoal):\n 1. (\\<And>ba.\n        \\<lbrakk>ba \\<in> allBlocksRead s q;\n         bal ba = bal (dblock s' q) \\<and>\n         inp ba = inp (dblock s' q)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  ba \\<in> allBlocksRead s q\n  bal ba = bal (dblock s' q) \\<and> inp ba = inp (dblock s' q)\n\ngoal (1 subgoal):\n 1. bk \\<in> {dblock s' q} \\<Longrightarrow> inp bk = v", "have \"allBlocksRead s q \\<subseteq> allBlocks s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. allBlocksRead s q \\<subseteq> allBlocks s", "by(auto simp add: allBlocksRead_def allRdBlks_def\n                        allBlocks_def blocksOf_def rdBy_def)"], ["proof (state)\nthis:\n  allBlocksRead s q \\<subseteq> allBlocks s\n\ngoal (1 subgoal):\n 1. bk \\<in> {dblock s' q} \\<Longrightarrow> inp bk = v", "from subsetD[OF this ba_blksread] ba_balinp bk b_bal asm3"], ["proof (chain)\npicking this:\n  ba \\<in> allBlocks s\n  bal ba = bal (dblock s' q) \\<and> inp ba = inp (dblock s' q)\n  bk \\<in> {dblock s' q}\n  b \\<le> bal bk\n  maxBalInp s b v", "show ?thesis"], ["proof (prove)\nusing this:\n  ba \\<in> allBlocks s\n  bal ba = bal (dblock s' q) \\<and> inp ba = inp (dblock s' q)\n  bk \\<in> {dblock s' q}\n  b \\<le> bal bk\n  maxBalInp s b v\n\ngoal (1 subgoal):\n 1. inp bk = v", "by(auto simp add: maxBalInp_def)"], ["proof (state)\nthis:\n  inp bk = v\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inp bk = v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HEndPhase0_valueChosen2:\n  assumes act: \"HEndPhase0 s s' q\"\n    and asm4: \"\\<forall>d\\<in>D.   b \\<le> bal(disk s d p)\n                   \\<and>(\\<forall>q.(   phase s q = 1\n                          \\<and> b \\<le>mbal(dblock s q)\n                          \\<and> hasRead s q d p\n                         ) \\<longrightarrow> (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal(block br)))\" (is \"?P s\")\n  shows \"?P s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>d\\<in>D.\n       b \\<le> bal (disk s' d p) \\<and>\n       (\\<forall>q.\n           phase s' q = 1 \\<and>\n           b \\<le> mbal (dblock s' q) \\<and>\n           hasRead s' q d p \\<longrightarrow>\n           (\\<exists>br\\<in>blocksRead s' q d. b \\<le> bal (block br)))", "proof(auto)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>d. d \\<in> D \\<Longrightarrow> b \\<le> bal (disk s' d p)\n 2. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "fix d"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>d. d \\<in> D \\<Longrightarrow> b \\<le> bal (disk s' d p)\n 2. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "assume d: \"d\\<in>D\""], ["proof (state)\nthis:\n  d \\<in> D\n\ngoal (2 subgoals):\n 1. \\<And>d. d \\<in> D \\<Longrightarrow> b \\<le> bal (disk s' d p)\n 2. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "with act asm4"], ["proof (chain)\npicking this:\n  HEndPhase0 s s' q\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s d p) \\<and>\n     (\\<forall>q.\n         phase s q = 1 \\<and>\n         b \\<le> mbal (dblock s q) \\<and> hasRead s q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)))\n  d \\<in> D", "show \"b \\<le> bal (disk s' d p)\""], ["proof (prove)\nusing this:\n  HEndPhase0 s s' q\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s d p) \\<and>\n     (\\<forall>q.\n         phase s q = 1 \\<and>\n         b \\<le> mbal (dblock s q) \\<and> hasRead s q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)))\n  d \\<in> D\n\ngoal (1 subgoal):\n 1. b \\<le> bal (disk s' d p)", "by(auto simp add: EndPhase0_def)"], ["proof (state)\nthis:\n  b \\<le> bal (disk s' d p)\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "fix d q"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "assume d: \"d\\<in>D\"\n    and phase': \"phase s' q = Suc 0\" \n    and dblk_mbal: \"b \\<le> mbal (dblock s' q)\"\n    and hasRead: \"hasRead s' q d p\""], ["proof (state)\nthis:\n  d \\<in> D\n  phase s' q = Suc 0\n  b \\<le> mbal (dblock s' q)\n  hasRead s' q d p\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "from phase' act hasRead"], ["proof (chain)\npicking this:\n  phase s' q = Suc 0\n  HEndPhase0 s s' q\n  hasRead s' q d p", "have p31: \"phase s q = 1\"\n   and p32: \"dblock s' q = dblock s q\""], ["proof (prove)\nusing this:\n  phase s' q = Suc 0\n  HEndPhase0 s s' q\n  hasRead s' q d p\n\ngoal (1 subgoal):\n 1. phase s q = 1 &&& dblock s' q = dblock s q", "by(auto simp add: EndPhase0_def InitializePhase_def\n                       hasRead_def split : if_split_asm)"], ["proof (state)\nthis:\n  phase s q = 1\n  dblock s' q = dblock s q\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "with dblk_mbal"], ["proof (chain)\npicking this:\n  b \\<le> mbal (dblock s' q)\n  phase s q = 1\n  dblock s' q = dblock s q", "have \"b\\<le>mbal(dblock s q)\""], ["proof (prove)\nusing this:\n  b \\<le> mbal (dblock s' q)\n  phase s q = 1\n  dblock s' q = dblock s q\n\ngoal (1 subgoal):\n 1. b \\<le> mbal (dblock s q)", "by auto"], ["proof (state)\nthis:\n  b \\<le> mbal (dblock s q)\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "moreover"], ["proof (state)\nthis:\n  b \\<le> mbal (dblock s q)\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "from act hasRead"], ["proof (chain)\npicking this:\n  HEndPhase0 s s' q\n  hasRead s' q d p", "have \"hasRead s q d p\""], ["proof (prove)\nusing this:\n  HEndPhase0 s s' q\n  hasRead s' q d p\n\ngoal (1 subgoal):\n 1. hasRead s q d p", "by(auto simp add: EndPhase0_def InitializePhase_def \n      hasRead_def split: if_split_asm)"], ["proof (state)\nthis:\n  hasRead s q d p\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "ultimately"], ["proof (chain)\npicking this:\n  b \\<le> mbal (dblock s q)\n  hasRead s q d p", "have \"\\<exists>br\\<in>blocksRead s q d. b\\<le> bal(block br)\""], ["proof (prove)\nusing this:\n  b \\<le> mbal (dblock s q)\n  hasRead s q d p\n\ngoal (1 subgoal):\n 1. \\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)", "using p31 asm4 d"], ["proof (prove)\nusing this:\n  b \\<le> mbal (dblock s q)\n  hasRead s q d p\n  phase s q = 1\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s d p) \\<and>\n     (\\<forall>q.\n         phase s q = 1 \\<and>\n         b \\<le> mbal (dblock s q) \\<and> hasRead s q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)))\n  d \\<in> D\n\ngoal (1 subgoal):\n 1. \\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)", "by blast"], ["proof (state)\nthis:\n  \\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)\n\ngoal (1 subgoal):\n 1. \\<And>d q.\n       \\<lbrakk>d \\<in> D; phase s' q = Suc 0; b \\<le> mbal (dblock s' q);\n        hasRead s' q d p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>br\\<in>blocksRead s' q d.\n                            b \\<le> bal (block br)", "with act hasRead"], ["proof (chain)\npicking this:\n  HEndPhase0 s s' q\n  hasRead s' q d p\n  \\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)", "show \"\\<exists>br\\<in>blocksRead s' q d. b\\<le> bal(block br)\""], ["proof (prove)\nusing this:\n  HEndPhase0 s s' q\n  hasRead s' q d p\n  \\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)\n\ngoal (1 subgoal):\n 1. \\<exists>br\\<in>blocksRead s' q d. b \\<le> bal (block br)", "by(auto simp add: EndPhase0_def InitializePhase_def\n                      hasRead_def)"], ["proof (state)\nthis:\n  \\<exists>br\\<in>blocksRead s' q d. b \\<le> bal (block br)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem HEndPhase0_valueChosen:\n  assumes act: \"HEndPhase0 s s' q\"\n  and vc: \"valueChosen s v\"\n  and v_input: \"v \\<in> Inputs\"\n  and inv1: \"Inv1 s\"\n  shows \"valueChosen s' v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. valueChosen s' v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. valueChosen s' v", "from vc"], ["proof (chain)\npicking this:\n  valueChosen s v", "obtain b p D where\n        asm1: \"b \\<in> (UN p. Ballot p)\"\n    and asm2: \"D\\<in>MajoritySet\"\n    and asm3: \"maxBalInp s b v\"\n    and asm4: \"\\<forall>d\\<in>D.  b \\<le> bal(disk s d p)\n                   \\<and>(\\<forall>q.(   phase s q = 1\n                          \\<and> b \\<le>mbal(dblock s q)\n                          \\<and> hasRead s q d p\n                         ) \\<longrightarrow> (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal(block br)))\""], ["proof (prove)\nusing this:\n  valueChosen s v\n\ngoal (1 subgoal):\n 1. (\\<And>b D p.\n        \\<lbrakk>b \\<in> \\<Union> (range Ballot); D \\<in> MajoritySet;\n         maxBalInp s b v;\n         \\<forall>d\\<in>D.\n            b \\<le> bal (disk s d p) \\<and>\n            (\\<forall>q.\n                phase s q = 1 \\<and>\n                b \\<le> mbal (dblock s q) \\<and>\n                hasRead s q d p \\<longrightarrow>\n                (\\<exists>br\\<in>blocksRead s q d.\n                    b \\<le> bal (block br)))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto simp add: valueChosen_def)"], ["proof (state)\nthis:\n  b \\<in> \\<Union> (range Ballot)\n  D \\<in> MajoritySet\n  maxBalInp s b v\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s d p) \\<and>\n     (\\<forall>q.\n         phase s q = 1 \\<and>\n         b \\<le> mbal (dblock s q) \\<and> hasRead s q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s q d. b \\<le> bal (block br)))\n\ngoal (1 subgoal):\n 1. valueChosen s' v", "from HEndPhase0_maxBalInp[OF act asm3 inv1]"], ["proof (chain)\npicking this:\n  maxBalInp s' b v", "have \"maxBalInp s' b v\""], ["proof (prove)\nusing this:\n  maxBalInp s' b v\n\ngoal (1 subgoal):\n 1. maxBalInp s' b v", "."], ["proof (state)\nthis:\n  maxBalInp s' b v\n\ngoal (1 subgoal):\n 1. valueChosen s' v", "with HEndPhase0_valueChosen2[OF act asm4] asm1 asm2"], ["proof (chain)\npicking this:\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s' d p) \\<and>\n     (\\<forall>q.\n         phase s' q = 1 \\<and>\n         b \\<le> mbal (dblock s' q) \\<and>\n         hasRead s' q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s' q d. b \\<le> bal (block br)))\n  b \\<in> \\<Union> (range Ballot)\n  D \\<in> MajoritySet\n  maxBalInp s' b v", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>d\\<in>D.\n     b \\<le> bal (disk s' d p) \\<and>\n     (\\<forall>q.\n         phase s' q = 1 \\<and>\n         b \\<le> mbal (dblock s' q) \\<and>\n         hasRead s' q d p \\<longrightarrow>\n         (\\<exists>br\\<in>blocksRead s' q d. b \\<le> bal (block br)))\n  b \\<in> \\<Union> (range Ballot)\n  D \\<in> MajoritySet\n  maxBalInp s' b v\n\ngoal (1 subgoal):\n 1. valueChosen s' v", "by(auto simp add: valueChosen_def)"], ["proof (state)\nthis:\n  valueChosen s' v\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}