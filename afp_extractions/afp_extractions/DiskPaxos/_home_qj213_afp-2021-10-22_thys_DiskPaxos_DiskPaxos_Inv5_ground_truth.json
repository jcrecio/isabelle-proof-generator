{"file_name": "/home/qj213/afp-2021-10-22/thys/DiskPaxos/DiskPaxos_Inv5.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/DiskPaxos", "problem_names": ["theorem HInit_HInv5: \"HInit s \\<Longrightarrow> HInv5 s\"", "lemma HStartBallot_HInv5_p:\n  assumes act: \"HStartBallot s s' p\"\n  and inv: \"HInv5_inner s p\"\n  shows \"HInv5_inner s' p\"", "lemma  HStartBallot_blocksOf_q:\n  assumes act: \"HStartBallot s s' p\"\n  and pnq: \"p\\<noteq>q\"\n  shows \"blocksOf s' q \\<subseteq> blocksOf s q\"", "lemma HStartBallot_allBlocks:\n  assumes act: \"HStartBallot s s' p\"\n  shows \"allBlocks s' \\<subseteq> allBlocks s \\<union> {dblock s' p}\"", "lemma HStartBallot_HInv5_q1:\n  assumes act: \"HStartBallot s s' p\"\n  and pnq: \"p\\<noteq>q\"\n  and inv5_1: \"maxBalInp s (bal(dblock s q)) (inp(dblock s q))\"\n  shows \"maxBalInp s' (bal(dblock s' q)) (inp(dblock s' q))\"", "lemma HStartBallot_HInv5_q2:\n  assumes act: \"HStartBallot s s' p\"\n  and pnq: \"p\\<noteq>q\"\n  and inv5_2: \"\\<exists>D\\<in>MajoritySet. \\<exists>qq. (\\<forall>d\\<in>D.    bal(dblock s q) < mbal(disk s d qq)\n                                     \\<and> \\<not>hasRead s q d qq)\"\n  shows \"\\<exists>D\\<in>MajoritySet. \\<exists>qq. (\\<forall>d\\<in>D.    bal(dblock s' q) < mbal(disk s' d qq)\n                                     \\<and> \\<not>hasRead s' q d qq)\"", "lemma HStartBallot_HInv5_q:\n  assumes act: \"HStartBallot s s' p\"\n  and inv: \"HInv5_inner s q\"\n  and pnq: \"p\\<noteq>q\"\n  shows \"HInv5_inner s' q\"", "theorem HStartBallot_HInv5:\n  \"\\<lbrakk> HStartBallot s s' p; HInv5_inner s q \\<rbrakk> \\<Longrightarrow> HInv5_inner s' q\"", "lemma HPhase1or2Write_HInv5_1:\n  assumes act: \"HPhase1or2Write s s' p d\"\n  and inv5_1: \"maxBalInp s (bal(dblock s q)) (inp(dblock s q))\"\n  shows \"maxBalInp s' (bal(dblock s' q)) (inp(dblock s' q))\"", "lemma HPhase1or2Write_HInv5_p2:\n  assumes act: \"HPhase1or2Write s s' p d\"\n  and inv4c: \"HInv4c s p\"\n  and phase: \"phase s p = 2\"\n  and inv5_2: \"\\<exists>D\\<in>MajoritySet. \\<exists>q. (\\<forall>d\\<in>D.    bal(dblock s p) < mbal(disk s d q)\n                                     \\<and> \\<not>hasRead s p d q)\"\n  shows \"\\<exists>D\\<in>MajoritySet. \\<exists>q. (\\<forall>d\\<in>D.    bal(dblock s' p) < mbal(disk s' d q)\n                                     \\<and> \\<not>hasRead s' p d q)\"", "lemma HPhase1or2Write_HInv5_p:\n  assumes act: \"HPhase1or2Write s s' p d\"\n  and inv: \"HInv5_inner s p\"\n  and inv4: \"HInv4c s p\"\n  shows \"HInv5_inner s' p\"", "lemma HPhase1or2Write_allBlocks:\n  assumes act: \"HPhase1or2Write s s' p d\"\n  shows \"allBlocks s' \\<subseteq> allBlocks s\"", "lemma HPhase1or2Write_HInv5_q2:\n  assumes act: \"HPhase1or2Write s s' p d\"\n  and pnq: \"p\\<noteq>q\"\n  and inv4a: \"HInv4a s p\"\n  and inv5_2: \"\\<exists>D\\<in>MajoritySet. \\<exists>qq. (\\<forall>d\\<in>D.    bal(dblock s q) < mbal(disk s d qq)\n                                     \\<and> \\<not>hasRead s q d qq)\"\n  shows \"\\<exists>D\\<in>MajoritySet. \\<exists>qq. (\\<forall>d\\<in>D.    bal(dblock s' q) < mbal(disk s' d qq)\n                                     \\<and> \\<not>hasRead s' q d qq)\"", "lemma HPhase1or2Write_HInv5_q:\n  assumes act: \"HPhase1or2Write s s' p d\"\n  and inv: \"HInv5_inner s q\"\n  and inv4a: \"HInv4a s p\"\n  and pnq: \"p\\<noteq>q\"\n  shows \"HInv5_inner s' q\"", "theorem HPhase1or2Write_HInv5:\n  \"\\<lbrakk> HPhase1or2Write s s' p d; HInv5_inner s q; \n     HInv4c s p; HInv4a s p \\<rbrakk> \\<Longrightarrow> HInv5_inner s' q\"", "lemma HPhase1or2ReadThen_HInv5_1:\n  assumes act: \"HPhase1or2ReadThen s s' p d r\"\n  and inv5_1: \"maxBalInp s (bal(dblock s q)) (inp(dblock s q))\"\n  shows \"maxBalInp s' (bal(dblock s' q)) (inp(dblock s' q))\"", "lemma HPhase1or2ReadThen_HInv5_p2:\n  assumes act: \"HPhase1or2ReadThen s s' p d r\"\n  and inv4c: \"HInv4c s p\"\n  and inv2c: \"Inv2c_inner s p\"\n  and phase: \"phase s p = 2\"\n  and inv5_2: \"\\<exists>D\\<in>MajoritySet. \\<exists>q. (\\<forall>d\\<in>D.    bal(dblock s p) < mbal(disk s d q)\n                                     \\<and> \\<not>hasRead s p d q)\"\n  shows \"\\<exists>D\\<in>MajoritySet. \\<exists>q. (\\<forall>d\\<in>D.    bal(dblock s' p) < mbal(disk s' d q)\n                                     \\<and> \\<not>hasRead s' p d q)\"", "lemma HPhase1or2ReadThen_HInv5_p:\n  assumes act: \"HPhase1or2ReadThen s s' p d r\"\n  and inv: \"HInv5_inner s p\"\n  and inv4: \"HInv4c s p\"\n  and inv2c: \"Inv2c s\"\n  shows \"HInv5_inner s' p\"", "lemma HPhase1or2ReadThen_allBlocks:\n  assumes act: \"HPhase1or2ReadThen s s' p d r\"\n  shows \"allBlocks s' \\<subseteq> allBlocks s\"", "lemma HPhase1or2ReadThen_HInv5_q2:\n  assumes act: \"HPhase1or2ReadThen s s' p d r\"\n  and pnq: \"p\\<noteq>q\"\n  and inv4a: \"HInv4a s p\"\n  and inv5_2: \"\\<exists>D\\<in>MajoritySet. \\<exists>qq. (\\<forall>d\\<in>D.    bal(dblock s q) < mbal(disk s d qq)\n                                     \\<and> \\<not>hasRead s q d qq)\"\n  shows \"\\<exists>D\\<in>MajoritySet. \\<exists>qq. (\\<forall>d\\<in>D.    bal(dblock s' q) < mbal(disk s' d qq)\n                                     \\<and> \\<not>hasRead s' q d qq)\"", "lemma HPhase1or2ReadThen_HInv5_q:\n  assumes act: \"HPhase1or2ReadThen s s' p d r\"\n  and inv: \"HInv5_inner s q\"\n  and inv4a: \"HInv4a s p\"\n  and pnq: \"p\\<noteq>q\"\n  shows \"HInv5_inner s' q\"", "theorem HPhase1or2ReadThen_HInv5:\n  \"\\<lbrakk> HPhase1or2ReadThen s s' p d r; HInv5_inner s q; \n     Inv2c s; HInv4c s p; HInv4a s p \\<rbrakk> \\<Longrightarrow> HInv5_inner s' q\"", "theorem HPhase1or2ReadElse_HInv5:\n  \"\\<lbrakk> HPhase1or2ReadElse s s' p d r; HInv5_inner s q \\<rbrakk>\n     \\<Longrightarrow> HInv5_inner s' q\"", "lemma HEndPhase2_HInv5_p:\n  \"HEndPhase2 s s' p  \\<Longrightarrow> HInv5_inner s' p\"", "lemma HEndPhase2_allBlocks:\n  assumes act: \"HEndPhase2 s s' p\"\n  shows \"allBlocks s' \\<subseteq> allBlocks s\"", "lemma HEndPhase2_HInv5_q1:\n  assumes act: \"HEndPhase2 s s' p\"\n  and pnq: \"p\\<noteq>q\"\n  and inv5_1: \"maxBalInp s (bal(dblock s q)) (inp(dblock s q))\"\n  shows \"maxBalInp s' (bal(dblock s' q)) (inp(dblock s' q))\"", "lemma HEndPhase2_HInv5_q2:\n  assumes act: \"HEndPhase2 s s' p\"\n  and pnq: \"p\\<noteq>q\"\n  and inv5_2: \"\\<exists>D\\<in>MajoritySet. \\<exists>qq. (\\<forall>d\\<in>D.    bal(dblock s q) < mbal(disk s d qq)\n                                     \\<and> \\<not>hasRead s q d qq)\"\n  shows \"\\<exists>D\\<in>MajoritySet. \\<exists>qq. (\\<forall>d\\<in>D.    bal(dblock s' q) < mbal(disk s' d qq)\n                                     \\<and> \\<not>hasRead s' q d qq)\"", "lemma HEndPhase2_HInv5_q:\n  assumes act: \"HEndPhase2 s s' p\"\n  and inv: \"HInv5_inner s q\"\n  and pnq: \"p\\<noteq>q\"\n  shows \"HInv5_inner s' q\"", "theorem HEndPhase2_HInv5:\n  \"\\<lbrakk> HEndPhase2 s s' p; HInv5_inner s q \\<rbrakk> \\<Longrightarrow> HInv5_inner s' q\"", "lemma HEndPhase1_HInv5_p:\n  assumes act: \"HEndPhase1 s s' p\"\n  and inv4: \"HInv4 s\"\n  and inv2a: \"Inv2a s\"\n  and inv2a': \"Inv2a s'\"\n  and inv2c: \"Inv2c s\"\n  and asm4: \"\\<not>maxBalInp s' (bal(dblock s' p)) (inp(dblock s' p))\"\n  shows \"(\\<exists>D\\<in>MajoritySet. \\<exists>q. (\\<forall>d\\<in>D.    bal(dblock s' p) < mbal(disk s' d q)\n                                     \\<and> \\<not>hasRead s' p d q))\"", "lemma union_inclusion:\n \"\\<lbrakk> A \\<subseteq> A'; B\\<subseteq> B' \\<rbrakk> \\<Longrightarrow> A\\<union>B \\<subseteq> A'\\<union>B'\"", "lemma  HEndPhase1_blocksOf_q:\n  assumes act: \"HEndPhase1 s s' p\"\n  and pnq: \"p\\<noteq>q\"\n  shows \"blocksOf s' q \\<subseteq> blocksOf s q\"", "lemma HEndPhase1_allBlocks:\n  assumes act: \"HEndPhase1 s s' p\"\n  shows \"allBlocks s' \\<subseteq> allBlocks s \\<union> {dblock s' p}\"", "lemma HEndPhase1_HInv5_q:\n  assumes act: \"HEndPhase1 s s' p\"\n  and inv: \"HInv5 s\"\n  and inv1: \"Inv1 s\"\n  and inv2a: \"Inv2a s'\"\n  and inv2a_q: \"Inv2a s\"\n  and inv2b: \"Inv2b s\"\n  and inv2c: \"Inv2c s\"\n  and inv3: \"HInv3 s\"\n  and phase': \"phase s' q = 2\"\n  and pnq: \"p\\<noteq>q\"\n  and asm4: \"\\<not>maxBalInp s' (bal(dblock s' q)) (inp(dblock s' q))\"\n  shows \"(\\<exists>D\\<in>MajoritySet. \\<exists>qq. (\\<forall>d\\<in>D.    bal(dblock s' q) < mbal(disk s' d qq)\n                                     \\<and> \\<not>hasRead s' q d qq))\"", "theorem HEndPhase1_HInv5:\n  assumes act: \"HEndPhase1 s s' p\"\n  and inv: \"HInv5 s\"\n  and inv1: \"Inv1 s\"\n  and inv2a: \"Inv2a s\"\n  and inv2a': \"Inv2a s'\"\n  and inv2b: \"Inv2b s\"\n  and inv2c: \"Inv2c s\"\n  and inv3: \"HInv3 s\"\n  and inv4: \"HInv4 s\"\nshows \"HInv5_inner s' q\"", "lemma HFail_HInv5_p:\n  \"HFail s s' p  \\<Longrightarrow> HInv5_inner s' p\"", "lemma  HFail_blocksOf_q:\n  assumes act: \"HFail s s' p\"\n  and pnq: \"p\\<noteq>q\"\n  shows \"blocksOf s' q \\<subseteq> blocksOf s q\"", "lemma HFail_allBlocks:\n  assumes act: \"HFail s s' p\"\n  shows \"allBlocks s' \\<subseteq> allBlocks s \\<union> {dblock s' p}\"", "lemma HFail_HInv5_q1:\n  assumes act: \"HFail s s' p\"\n  and pnq: \"p\\<noteq>q\"\n  and inv2a: \"Inv2a_inner s' q\"\n  and inv5_1: \"maxBalInp s (bal(dblock s q)) (inp(dblock s q))\"\n  shows \"maxBalInp s' (bal(dblock s' q)) (inp(dblock s' q))\"", "lemma HFail_HInv5_q2:\n  assumes act: \"HFail s s' p\"\n  and pnq: \"p\\<noteq>q\"\n  and inv5_2: \"\\<exists>D\\<in>MajoritySet. \\<exists>qq. (\\<forall>d\\<in>D.    bal(dblock s q) < mbal(disk s d qq)\n                                     \\<and> \\<not>hasRead s q d qq)\"\n  shows \"\\<exists>D\\<in>MajoritySet. \\<exists>qq. (\\<forall>d\\<in>D.    bal(dblock s' q) < mbal(disk s' d qq)\n                                     \\<and> \\<not>hasRead s' q d qq)\"", "lemma HFail_HInv5_q:\n  assumes act: \"HFail s s' p\"\n  and inv: \"HInv5_inner s q\"\n  and pnq: \"p\\<noteq>q\"\n  and inv2a: \"Inv2a s'\"\n  shows \"HInv5_inner s' q\"", "theorem HFail_HInv5:\n  \"\\<lbrakk> HFail s s' p; HInv5_inner s q; Inv2a s' \\<rbrakk> \\<Longrightarrow> HInv5_inner s' q\"", "lemma HPhase0Read_HInv5_p:\n  \"HPhase0Read s s' p d \\<Longrightarrow> HInv5_inner s' p\"", "lemma HPhase0Read_allBlocks:\n  assumes act: \"HPhase0Read s s' p d\"\n  shows \"allBlocks s' \\<subseteq> allBlocks s\"", "lemma HPhase0Read_HInv5_1:\n  assumes act: \"HPhase0Read s s' p d\"\n  and inv5_1: \"maxBalInp s (bal(dblock s q)) (inp(dblock s q))\"\n  shows \"maxBalInp s' (bal(dblock s' q)) (inp(dblock s' q))\"", "lemma HPhase0Read_HInv5_q2:\n  assumes act: \"HPhase0Read s s' p d\"\n  and pnq: \"p\\<noteq>q\"\n  and inv5_2: \"\\<exists>D\\<in>MajoritySet. \\<exists>qq. (\\<forall>d\\<in>D.    bal(dblock s q) < mbal(disk s d qq)\n                                     \\<and> \\<not>hasRead s q d qq)\"\n  shows \"\\<exists>D\\<in>MajoritySet. \\<exists>qq. (\\<forall>d\\<in>D.    bal(dblock s' q) < mbal(disk s' d qq)\n                                     \\<and> \\<not>hasRead s' q d qq)\"", "lemma HPhase0Read_HInv5_q:\n  assumes act: \"HPhase0Read s s' p d\"\n  and inv: \"HInv5_inner s q\"\n  and pnq: \"p\\<noteq>q\"\n  shows \"HInv5_inner s' q\"", "theorem HPhase0Read_HInv5:\n  \"\\<lbrakk> HPhase0Read s s' p d; HInv5_inner s q \\<rbrakk> \\<Longrightarrow> HInv5_inner s' q\"", "lemma HEndPhase0_HInv5_p:\n  \"HEndPhase0 s s' p  \\<Longrightarrow> HInv5_inner s' p\"", "lemma  HEndPhase0_blocksOf_q:\n  assumes act: \"HEndPhase0 s s' p\"\n  and pnq: \"p\\<noteq>q\"\n  shows \"blocksOf s' q \\<subseteq> blocksOf s q\"", "lemma HEndPhase0_allBlocks:\n  assumes act: \"HEndPhase0 s s' p\"\n  shows \"allBlocks s' \\<subseteq> allBlocks s \\<union> {dblock s' p}\"", "lemma HEndPhase0_HInv5_q1:\n  assumes act: \"HEndPhase0 s s' p\"\n  and pnq: \"p\\<noteq>q\"\n  and inv1: \"Inv1 s\"\n  and inv5_1: \"maxBalInp s (bal(dblock s q)) (inp(dblock s q))\"\n  shows \"maxBalInp s' (bal(dblock s' q)) (inp(dblock s' q))\"", "lemma HEndPhase0_HInv5_q2:\n  assumes act: \"HEndPhase0 s s' p\"\n  and pnq: \"p\\<noteq>q\"\n  and inv5_2: \"\\<exists>D\\<in>MajoritySet. \\<exists>qq. (\\<forall>d\\<in>D.    bal(dblock s q) < mbal(disk s d qq)\n                                     \\<and> \\<not>hasRead s q d qq)\"\n  shows \"\\<exists>D\\<in>MajoritySet. \\<exists>qq. (\\<forall>d\\<in>D.    bal(dblock s' q) < mbal(disk s' d qq)\n                                     \\<and> \\<not>hasRead s' q d qq)\"", "lemma HEndPhase0_HInv5_q:\n  assumes act: \"HEndPhase0 s s' p\"\n  and inv: \"HInv5_inner s q\"\n  and inv1: \"Inv1 s\"\n  and pnq: \"p\\<noteq>q\"\n  shows \"HInv5_inner s' q\"", "theorem HEndPhase0_HInv5:\n  \"\\<lbrakk> HEndPhase0 s s' p; HInv5_inner s q; Inv1 s \\<rbrakk> \\<Longrightarrow> HInv5_inner s' q\"", "lemma I2e:\n  assumes nxt: \"HNext s s'\"\n  and inv: \"HInv1 s \\<and> HInv2 s \\<and> HInv2 s' \\<and> HInv3 s \\<and> HInv4 s \\<and> HInv5 s\"\n  shows \"HInv5 s'\""], "translations": [["", "theorem HInit_HInv5: \"HInit s \\<Longrightarrow> HInv5 s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HInit s \\<Longrightarrow> HInv5 s", "using Disk_isMajority"], ["proof (prove)\nusing this:\n  IsMajority UNIV\n\ngoal (1 subgoal):\n 1. HInit s \\<Longrightarrow> HInv5 s", "by(auto simp add: HInit_def Init_def HInv5_def HInv5_inner_def)"], ["", "text \\<open>\n  We will use the notation used in the proofs of invariant 4, and prove\nthe lemma $action$-$HInv5$-$p$ and $action$-$HInv5$-$q$ for each action, for\nthe cases $p=q$ and $p\\not = q$ respectively.\n\n  Also, for each action we will define an $action$-$allBlocks$ lemma in the \nsame way that we defined -$blocksOf$ lemmas in the proofs of $HInv2$. Now we prove \nthat for each action the new $allBlocks$ are included in the old $allBlocks$ or, in\nsome cases, included in the old $allBlocks$ union the new $dblock$. \n\\<close>"], ["", "lemma HStartBallot_HInv5_p:\n  assumes act: \"HStartBallot s s' p\"\n  and inv: \"HInv5_inner s p\"\n  shows \"HInv5_inner s' p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HInv5_inner s' p", "using assms"], ["proof (prove)\nusing this:\n  HStartBallot s s' p\n  HInv5_inner s p\n\ngoal (1 subgoal):\n 1. HInv5_inner s' p", "by(auto simp add: StartBallot_def HInv5_inner_def)"], ["", "lemma  HStartBallot_blocksOf_q:\n  assumes act: \"HStartBallot s s' p\"\n  and pnq: \"p\\<noteq>q\"\n  shows \"blocksOf s' q \\<subseteq> blocksOf s q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. blocksOf s' q \\<subseteq> blocksOf s q", "using assms"], ["proof (prove)\nusing this:\n  HStartBallot s s' p\n  p \\<noteq> q\n\ngoal (1 subgoal):\n 1. blocksOf s' q \\<subseteq> blocksOf s q", "by(auto simp add: StartBallot_def InitializePhase_def blocksOf_def rdBy_def)"], ["", "lemma HStartBallot_allBlocks:\n  assumes act: \"HStartBallot s s' p\"\n  shows \"allBlocks s' \\<subseteq> allBlocks s \\<union> {dblock s' p}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. allBlocks s' \\<subseteq> allBlocks s \\<union> {dblock s' p}", "proof(auto simp del: HStartBallot_def simp add: allBlocks_def\n           dest: HStartBallot_blocksOf_q[OF act])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x pa.\n       \\<lbrakk>x \\<in> blocksOf s' pa;\n        \\<forall>xa. x \\<notin> blocksOf s xa\\<rbrakk>\n       \\<Longrightarrow> x = dblock s' p", "fix x pa"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x pa.\n       \\<lbrakk>x \\<in> blocksOf s' pa;\n        \\<forall>xa. x \\<notin> blocksOf s xa\\<rbrakk>\n       \\<Longrightarrow> x = dblock s' p", "assume x_pa: \"x \\<in> blocksOf s' pa\" and\n         x_nblks: \"\\<forall>xa. x \\<notin> blocksOf s xa\""], ["proof (state)\nthis:\n  x \\<in> blocksOf s' pa\n  \\<forall>xa. x \\<notin> blocksOf s xa\n\ngoal (1 subgoal):\n 1. \\<And>x pa.\n       \\<lbrakk>x \\<in> blocksOf s' pa;\n        \\<forall>xa. x \\<notin> blocksOf s xa\\<rbrakk>\n       \\<Longrightarrow> x = dblock s' p", "show \"x=dblock s' p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = dblock s' p", "proof(cases \"p=pa\")"], ["proof (state)\ngoal (2 subgoals):\n 1. p = pa \\<Longrightarrow> x = dblock s' p\n 2. p \\<noteq> pa \\<Longrightarrow> x = dblock s' p", "case True"], ["proof (state)\nthis:\n  p = pa\n\ngoal (2 subgoals):\n 1. p = pa \\<Longrightarrow> x = dblock s' p\n 2. p \\<noteq> pa \\<Longrightarrow> x = dblock s' p", "from x_nblks"], ["proof (chain)\npicking this:\n  \\<forall>xa. x \\<notin> blocksOf s xa", "have \"x \\<notin> blocksOf s p\""], ["proof (prove)\nusing this:\n  \\<forall>xa. x \\<notin> blocksOf s xa\n\ngoal (1 subgoal):\n 1. x \\<notin> blocksOf s p", "by auto"], ["proof (state)\nthis:\n  x \\<notin> blocksOf s p\n\ngoal (2 subgoals):\n 1. p = pa \\<Longrightarrow> x = dblock s' p\n 2. p \\<noteq> pa \\<Longrightarrow> x = dblock s' p", "with True subsetD[OF HStartBallot_blocksOf[OF act] x_pa]"], ["proof (chain)\npicking this:\n  p = pa\n  x \\<in> blocksOf s pa \\<union> {dblock s' pa}\n  x \\<notin> blocksOf s p", "show ?thesis"], ["proof (prove)\nusing this:\n  p = pa\n  x \\<in> blocksOf s pa \\<union> {dblock s' pa}\n  x \\<notin> blocksOf s p\n\ngoal (1 subgoal):\n 1. x = dblock s' p", "by auto"], ["proof (state)\nthis:\n  x = dblock s' p\n\ngoal (1 subgoal):\n 1. p \\<noteq> pa \\<Longrightarrow> x = dblock s' p", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. p \\<noteq> pa \\<Longrightarrow> x = dblock s' p", "case False"], ["proof (state)\nthis:\n  p \\<noteq> pa\n\ngoal (1 subgoal):\n 1. p \\<noteq> pa \\<Longrightarrow> x = dblock s' p", "from x_nblks subsetD[OF HStartBallot_blocksOf_q[OF act False] x_pa]"], ["proof (chain)\npicking this:\n  \\<forall>xa. x \\<notin> blocksOf s xa\n  x \\<in> blocksOf s pa", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>xa. x \\<notin> blocksOf s xa\n  x \\<in> blocksOf s pa\n\ngoal (1 subgoal):\n 1. x = dblock s' p", "by auto"], ["proof (state)\nthis:\n  x = dblock s' p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x = dblock s' p\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HStartBallot_HInv5_q1:\n  assumes act: \"HStartBallot s s' p\"\n  and pnq: \"p\\<noteq>q\"\n  and inv5_1: \"maxBalInp s (bal(dblock s q)) (inp(dblock s q))\"\n  shows \"maxBalInp s' (bal(dblock s' q)) (inp(dblock s' q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. maxBalInp s' (bal (dblock s' q)) (inp (dblock s' q))", "proof(auto simp add: maxBalInp_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>bk.\n       \\<lbrakk>bk \\<in> allBlocks s';\n        bal (dblock s' q) \\<le> bal bk\\<rbrakk>\n       \\<Longrightarrow> inp bk = inp (dblock s' q)", "fix bk"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>bk.\n       \\<lbrakk>bk \\<in> allBlocks s';\n        bal (dblock s' q) \\<le> bal bk\\<rbrakk>\n       \\<Longrightarrow> inp bk = inp (dblock s' q)", "assume bk: \"bk \\<in> allBlocks s'\"\n    and bal: \"bal (dblock s' q) \\<le> bal bk\""], ["proof (state)\nthis:\n  bk \\<in> allBlocks s'\n  bal (dblock s' q) \\<le> bal bk\n\ngoal (1 subgoal):\n 1. \\<And>bk.\n       \\<lbrakk>bk \\<in> allBlocks s';\n        bal (dblock s' q) \\<le> bal bk\\<rbrakk>\n       \\<Longrightarrow> inp bk = inp (dblock s' q)", "from act pnq"], ["proof (chain)\npicking this:\n  HStartBallot s s' p\n  p \\<noteq> q", "have dblock': \"dblock s' q = dblock s q\""], ["proof (prove)\nusing this:\n  HStartBallot s s' p\n  p \\<noteq> q\n\ngoal (1 subgoal):\n 1. dblock s' q = dblock s q", "by(auto simp add: StartBallot_def)"], ["proof (state)\nthis:\n  dblock s' q = dblock s q\n\ngoal (1 subgoal):\n 1. \\<And>bk.\n       \\<lbrakk>bk \\<in> allBlocks s';\n        bal (dblock s' q) \\<le> bal bk\\<rbrakk>\n       \\<Longrightarrow> inp bk = inp (dblock s' q)", "from subsetD[OF HStartBallot_allBlocks[OF act] bk]"], ["proof (chain)\npicking this:\n  bk \\<in> allBlocks s \\<union> {dblock s' p}", "show \"inp bk = inp (dblock s' q)\""], ["proof (prove)\nusing this:\n  bk \\<in> allBlocks s \\<union> {dblock s' p}\n\ngoal (1 subgoal):\n 1. inp bk = inp (dblock s' q)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. bk \\<in> allBlocks s \\<Longrightarrow> inp bk = inp (dblock s' q)\n 2. bk \\<in> {dblock s' p} \\<Longrightarrow> inp bk = inp (dblock s' q)", "assume bk: \"bk \\<in> allBlocks s\""], ["proof (state)\nthis:\n  bk \\<in> allBlocks s\n\ngoal (2 subgoals):\n 1. bk \\<in> allBlocks s \\<Longrightarrow> inp bk = inp (dblock s' q)\n 2. bk \\<in> {dblock s' p} \\<Longrightarrow> inp bk = inp (dblock s' q)", "with inv5_1 dblock' bal"], ["proof (chain)\npicking this:\n  maxBalInp s (bal (dblock s q)) (inp (dblock s q))\n  dblock s' q = dblock s q\n  bal (dblock s' q) \\<le> bal bk\n  bk \\<in> allBlocks s", "show ?thesis"], ["proof (prove)\nusing this:\n  maxBalInp s (bal (dblock s q)) (inp (dblock s q))\n  dblock s' q = dblock s q\n  bal (dblock s' q) \\<le> bal bk\n  bk \\<in> allBlocks s\n\ngoal (1 subgoal):\n 1. inp bk = inp (dblock s' q)", "by(auto simp add: maxBalInp_def)"], ["proof (state)\nthis:\n  inp bk = inp (dblock s' q)\n\ngoal (1 subgoal):\n 1. bk \\<in> {dblock s' p} \\<Longrightarrow> inp bk = inp (dblock s' q)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. bk \\<in> {dblock s' p} \\<Longrightarrow> inp bk = inp (dblock s' q)", "assume bk: \"bk \\<in> {dblock s' p}\""], ["proof (state)\nthis:\n  bk \\<in> {dblock s' p}\n\ngoal (1 subgoal):\n 1. bk \\<in> {dblock s' p} \\<Longrightarrow> inp bk = inp (dblock s' q)", "have \"dblock s p \\<in> allBlocks s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dblock s p \\<in> allBlocks s", "by(auto simp add: allBlocks_def blocksOf_def)"], ["proof (state)\nthis:\n  dblock s p \\<in> allBlocks s\n\ngoal (1 subgoal):\n 1. bk \\<in> {dblock s' p} \\<Longrightarrow> inp bk = inp (dblock s' q)", "with bal act bk dblock' inv5_1"], ["proof (chain)\npicking this:\n  bal (dblock s' q) \\<le> bal bk\n  HStartBallot s s' p\n  bk \\<in> {dblock s' p}\n  dblock s' q = dblock s q\n  maxBalInp s (bal (dblock s q)) (inp (dblock s q))\n  dblock s p \\<in> allBlocks s", "show ?thesis"], ["proof (prove)\nusing this:\n  bal (dblock s' q) \\<le> bal bk\n  HStartBallot s s' p\n  bk \\<in> {dblock s' p}\n  dblock s' q = dblock s q\n  maxBalInp s (bal (dblock s q)) (inp (dblock s q))\n  dblock s p \\<in> allBlocks s\n\ngoal (1 subgoal):\n 1. inp bk = inp (dblock s' q)", "by(auto simp add: maxBalInp_def StartBallot_def)"], ["proof (state)\nthis:\n  inp bk = inp (dblock s' q)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inp bk = inp (dblock s' q)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HStartBallot_HInv5_q2:\n  assumes act: \"HStartBallot s s' p\"\n  and pnq: \"p\\<noteq>q\"\n  and inv5_2: \"\\<exists>D\\<in>MajoritySet. \\<exists>qq. (\\<forall>d\\<in>D.    bal(dblock s q) < mbal(disk s d qq)\n                                     \\<and> \\<not>hasRead s q d qq)\"\n  shows \"\\<exists>D\\<in>MajoritySet. \\<exists>qq. (\\<forall>d\\<in>D.    bal(dblock s' q) < mbal(disk s' d qq)\n                                     \\<and> \\<not>hasRead s' q d qq)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n             \\<not> hasRead s' q d qq", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n             \\<not> hasRead s' q d qq", "from act pnq"], ["proof (chain)\npicking this:\n  HStartBallot s s' p\n  p \\<noteq> q", "have  disk: \"disk s' = disk s\"\n    and blocksRead: \"\\<forall>d. blocksRead s' q d = blocksRead s q d\"\n    and dblock: \"dblock s' q = dblock s q\""], ["proof (prove)\nusing this:\n  HStartBallot s s' p\n  p \\<noteq> q\n\ngoal (1 subgoal):\n 1. disk s' = disk s &&&\n    \\<forall>d. blocksRead s' q d = blocksRead s q d &&&\n    dblock s' q = dblock s q", "by(auto simp add: StartBallot_def InitializePhase_def)"], ["proof (state)\nthis:\n  disk s' = disk s\n  \\<forall>d. blocksRead s' q d = blocksRead s q d\n  dblock s' q = dblock s q\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n             \\<not> hasRead s' q d qq", "with inv5_2"], ["proof (chain)\npicking this:\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s q) < mbal (disk s d qq) \\<and>\n           \\<not> hasRead s q d qq\n  disk s' = disk s\n  \\<forall>d. blocksRead s' q d = blocksRead s q d\n  dblock s' q = dblock s q", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s q) < mbal (disk s d qq) \\<and>\n           \\<not> hasRead s q d qq\n  disk s' = disk s\n  \\<forall>d. blocksRead s' q d = blocksRead s q d\n  dblock s' q = dblock s q\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n             \\<not> hasRead s' q d qq", "by(auto simp add: hasRead_def)"], ["proof (state)\nthis:\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n           \\<not> hasRead s' q d qq\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HStartBallot_HInv5_q:\n  assumes act: \"HStartBallot s s' p\"\n  and inv: \"HInv5_inner s q\"\n  and pnq: \"p\\<noteq>q\"\n  shows \"HInv5_inner s' q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HInv5_inner s' q", "using assms and HStartBallot_HInv5_q1[OF act pnq] HStartBallot_HInv5_q2[OF act pnq]"], ["proof (prove)\nusing this:\n  HStartBallot s s' p\n  HInv5_inner s q\n  p \\<noteq> q\n  maxBalInp s (bal (dblock s q)) (inp (dblock s q)) \\<Longrightarrow>\n  maxBalInp s' (bal (dblock s' q)) (inp (dblock s' q))\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s q) < mbal (disk s d qq) \\<and>\n           \\<not> hasRead s q d qq \\<Longrightarrow>\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n           \\<not> hasRead s' q d qq\n\ngoal (1 subgoal):\n 1. HInv5_inner s' q", "by(auto simp add: HInv5_inner_def HInv5_inner_R_def StartBallot_def)"], ["", "theorem HStartBallot_HInv5:\n  \"\\<lbrakk> HStartBallot s s' p; HInv5_inner s q \\<rbrakk> \\<Longrightarrow> HInv5_inner s' q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>HStartBallot s s' p; HInv5_inner s q\\<rbrakk>\n    \\<Longrightarrow> HInv5_inner s' q", "by(blast dest: HStartBallot_HInv5_q HStartBallot_HInv5_p)"], ["", "lemma HPhase1or2Write_HInv5_1:\n  assumes act: \"HPhase1or2Write s s' p d\"\n  and inv5_1: \"maxBalInp s (bal(dblock s q)) (inp(dblock s q))\"\n  shows \"maxBalInp s' (bal(dblock s' q)) (inp(dblock s' q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. maxBalInp s' (bal (dblock s' q)) (inp (dblock s' q))", "using assms and HPhase1or2Write_blocksOf[OF act]"], ["proof (prove)\nusing this:\n  HPhase1or2Write s s' p d\n  maxBalInp s (bal (dblock s q)) (inp (dblock s q))\n  blocksOf s' ?r \\<subseteq> blocksOf s ?r\n\ngoal (1 subgoal):\n 1. maxBalInp s' (bal (dblock s' q)) (inp (dblock s' q))", "by(auto simp add: Phase1or2Write_def maxBalInp_def allBlocks_def)"], ["", "lemma HPhase1or2Write_HInv5_p2:\n  assumes act: \"HPhase1or2Write s s' p d\"\n  and inv4c: \"HInv4c s p\"\n  and phase: \"phase s p = 2\"\n  and inv5_2: \"\\<exists>D\\<in>MajoritySet. \\<exists>q. (\\<forall>d\\<in>D.    bal(dblock s p) < mbal(disk s d q)\n                                     \\<and> \\<not>hasRead s p d q)\"\n  shows \"\\<exists>D\\<in>MajoritySet. \\<exists>q. (\\<forall>d\\<in>D.    bal(dblock s' p) < mbal(disk s' d q)\n                                     \\<and> \\<not>hasRead s' p d q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>q.\n          \\<forall>d\\<in>D.\n             bal (dblock s' p) < mbal (disk s' d q) \\<and>\n             \\<not> hasRead s' p d q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>q.\n          \\<forall>d\\<in>D.\n             bal (dblock s' p) < mbal (disk s' d q) \\<and>\n             \\<not> hasRead s' p d q", "from inv5_2"], ["proof (chain)\npicking this:\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>q.\n        \\<forall>d\\<in>D.\n           bal (dblock s p) < mbal (disk s d q) \\<and>\n           \\<not> hasRead s p d q", "obtain D q \n    where i1: \"IsMajority D\"\n      and i2: \"\\<forall>d\\<in>D. bal(dblock s p) < mbal(disk s d q)\"\n      and i3: \"\\<forall>d\\<in>D. \\<not>hasRead s p d q\""], ["proof (prove)\nusing this:\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>q.\n        \\<forall>d\\<in>D.\n           bal (dblock s p) < mbal (disk s d q) \\<and>\n           \\<not> hasRead s p d q\n\ngoal (1 subgoal):\n 1. (\\<And>D q.\n        \\<lbrakk>IsMajority D;\n         \\<forall>d\\<in>D. bal (dblock s p) < mbal (disk s d q);\n         \\<forall>d\\<in>D. \\<not> hasRead s p d q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto simp add: MajoritySet_def)"], ["proof (state)\nthis:\n  IsMajority D\n  \\<forall>d\\<in>D. bal (dblock s p) < mbal (disk s d q)\n  \\<forall>d\\<in>D. \\<not> hasRead s p d q\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>q.\n          \\<forall>d\\<in>D.\n             bal (dblock s' p) < mbal (disk s' d q) \\<and>\n             \\<not> hasRead s' p d q", "have pnq: \"p\\<noteq>q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<noteq> q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. p \\<noteq> q", "from inv4c phase"], ["proof (chain)\npicking this:\n  HInv4c s p\n  phase s p = 2", "obtain D1 where r1: \"IsMajority D1 \\<and> (\\<forall>d\\<in>D1. mbal(disk s d p) = bal (dblock s p))\""], ["proof (prove)\nusing this:\n  HInv4c s p\n  phase s p = 2\n\ngoal (1 subgoal):\n 1. (\\<And>D1.\n        IsMajority D1 \\<and>\n        (\\<forall>d\\<in>D1.\n            mbal (disk s d p) = bal (dblock s p)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by(auto simp add: HInv4c_def MajoritySet_def)"], ["proof (state)\nthis:\n  IsMajority D1 \\<and>\n  (\\<forall>d\\<in>D1. mbal (disk s d p) = bal (dblock s p))\n\ngoal (1 subgoal):\n 1. p \\<noteq> q", "with i1 majorities_intersect"], ["proof (chain)\npicking this:\n  IsMajority D\n  \\<forall>S T.\n     IsMajority S \\<and> IsMajority T \\<longrightarrow>\n     S \\<inter> T \\<noteq> {}\n  IsMajority D1 \\<and>\n  (\\<forall>d\\<in>D1. mbal (disk s d p) = bal (dblock s p))", "have \"D\\<inter>D1\\<noteq>{}\""], ["proof (prove)\nusing this:\n  IsMajority D\n  \\<forall>S T.\n     IsMajority S \\<and> IsMajority T \\<longrightarrow>\n     S \\<inter> T \\<noteq> {}\n  IsMajority D1 \\<and>\n  (\\<forall>d\\<in>D1. mbal (disk s d p) = bal (dblock s p))\n\ngoal (1 subgoal):\n 1. D \\<inter> D1 \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  D \\<inter> D1 \\<noteq> {}\n\ngoal (1 subgoal):\n 1. p \\<noteq> q", "then"], ["proof (chain)\npicking this:\n  D \\<inter> D1 \\<noteq> {}", "obtain dd where  \"dd\\<in>D\\<inter>D1\""], ["proof (prove)\nusing this:\n  D \\<inter> D1 \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>dd.\n        dd \\<in> D \\<inter> D1 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  dd \\<in> D \\<inter> D1\n\ngoal (1 subgoal):\n 1. p \\<noteq> q", "with i1 i2 r1"], ["proof (chain)\npicking this:\n  IsMajority D\n  \\<forall>d\\<in>D. bal (dblock s p) < mbal (disk s d q)\n  IsMajority D1 \\<and>\n  (\\<forall>d\\<in>D1. mbal (disk s d p) = bal (dblock s p))\n  dd \\<in> D \\<inter> D1", "have \"bal(dblock s p) < mbal(disk s dd q) \\<and> mbal(disk s dd p) = bal (dblock s p)\""], ["proof (prove)\nusing this:\n  IsMajority D\n  \\<forall>d\\<in>D. bal (dblock s p) < mbal (disk s d q)\n  IsMajority D1 \\<and>\n  (\\<forall>d\\<in>D1. mbal (disk s d p) = bal (dblock s p))\n  dd \\<in> D \\<inter> D1\n\ngoal (1 subgoal):\n 1. bal (dblock s p) < mbal (disk s dd q) \\<and>\n    mbal (disk s dd p) = bal (dblock s p)", "by auto"], ["proof (state)\nthis:\n  bal (dblock s p) < mbal (disk s dd q) \\<and>\n  mbal (disk s dd p) = bal (dblock s p)\n\ngoal (1 subgoal):\n 1. p \\<noteq> q", "thus ?thesis"], ["proof (prove)\nusing this:\n  bal (dblock s p) < mbal (disk s dd q) \\<and>\n  mbal (disk s dd p) = bal (dblock s p)\n\ngoal (1 subgoal):\n 1. p \\<noteq> q", "by auto"], ["proof (state)\nthis:\n  p \\<noteq> q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p \\<noteq> q\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>q.\n          \\<forall>d\\<in>D.\n             bal (dblock s' p) < mbal (disk s' d q) \\<and>\n             \\<not> hasRead s' p d q", "from act pnq\n      \\<comment> \\<open>$dblock$ and $hasRead$ do not change\\<close>"], ["proof (chain)\npicking this:\n  HPhase1or2Write s s' p d\n  p \\<noteq> q", "have  \"dblock s' = dblock s\"\n    and \"\\<forall>d. hasRead s' p d q = hasRead s p d q\"\n      \\<comment> \\<open>In all disks $q$ blocks don't change\\<close>\n    and \"\\<forall>d. disk s' d q = disk s d q\""], ["proof (prove)\nusing this:\n  HPhase1or2Write s s' p d\n  p \\<noteq> q\n\ngoal (1 subgoal):\n 1. dblock s' = dblock s &&&\n    \\<forall>d. hasRead s' p d q = hasRead s p d q &&&\n    \\<forall>d. disk s' d q = disk s d q", "by(auto simp add: Phase1or2Write_def hasRead_def)"], ["proof (state)\nthis:\n  dblock s' = dblock s\n  \\<forall>d. hasRead s' p d q = hasRead s p d q\n  \\<forall>d. disk s' d q = disk s d q\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>q.\n          \\<forall>d\\<in>D.\n             bal (dblock s' p) < mbal (disk s' d q) \\<and>\n             \\<not> hasRead s' p d q", "with i2 i1 i3 majority_nonempty"], ["proof (chain)\npicking this:\n  \\<forall>d\\<in>D. bal (dblock s p) < mbal (disk s d q)\n  IsMajority D\n  \\<forall>d\\<in>D. \\<not> hasRead s p d q\n  IsMajority ?S \\<Longrightarrow> ?S \\<noteq> {}\n  dblock s' = dblock s\n  \\<forall>d. hasRead s' p d q = hasRead s p d q\n  \\<forall>d. disk s' d q = disk s d q", "have \"\\<forall>d\\<in>D. bal (dblock s' p) < mbal (disk s' d q) \\<and> \\<not>hasRead s' p d q\""], ["proof (prove)\nusing this:\n  \\<forall>d\\<in>D. bal (dblock s p) < mbal (disk s d q)\n  IsMajority D\n  \\<forall>d\\<in>D. \\<not> hasRead s p d q\n  IsMajority ?S \\<Longrightarrow> ?S \\<noteq> {}\n  dblock s' = dblock s\n  \\<forall>d. hasRead s' p d q = hasRead s p d q\n  \\<forall>d. disk s' d q = disk s d q\n\ngoal (1 subgoal):\n 1. \\<forall>d\\<in>D.\n       bal (dblock s' p) < mbal (disk s' d q) \\<and> \\<not> hasRead s' p d q", "by auto"], ["proof (state)\nthis:\n  \\<forall>d\\<in>D.\n     bal (dblock s' p) < mbal (disk s' d q) \\<and> \\<not> hasRead s' p d q\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>q.\n          \\<forall>d\\<in>D.\n             bal (dblock s' p) < mbal (disk s' d q) \\<and>\n             \\<not> hasRead s' p d q", "with i1"], ["proof (chain)\npicking this:\n  IsMajority D\n  \\<forall>d\\<in>D.\n     bal (dblock s' p) < mbal (disk s' d q) \\<and> \\<not> hasRead s' p d q", "show ?thesis"], ["proof (prove)\nusing this:\n  IsMajority D\n  \\<forall>d\\<in>D.\n     bal (dblock s' p) < mbal (disk s' d q) \\<and> \\<not> hasRead s' p d q\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>q.\n          \\<forall>d\\<in>D.\n             bal (dblock s' p) < mbal (disk s' d q) \\<and>\n             \\<not> hasRead s' p d q", "by(auto simp add: MajoritySet_def)"], ["proof (state)\nthis:\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>q.\n        \\<forall>d\\<in>D.\n           bal (dblock s' p) < mbal (disk s' d q) \\<and>\n           \\<not> hasRead s' p d q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HPhase1or2Write_HInv5_p:\n  assumes act: \"HPhase1or2Write s s' p d\"\n  and inv: \"HInv5_inner s p\"\n  and inv4: \"HInv4c s p\"\n  shows \"HInv5_inner s' p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HInv5_inner s' p", "proof(auto simp add: HInv5_inner_def HInv5_inner_R_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>phase s' p = 2;\n     \\<forall>D\\<in>MajoritySet.\n        \\<forall>q.\n           \\<exists>d\\<in>D.\n              bal (dblock s' p) < mbal (disk s' d q) \\<longrightarrow>\n              hasRead s' p d q\\<rbrakk>\n    \\<Longrightarrow> maxBalInp s' (bal (dblock s' p)) (inp (dblock s' p))", "assume phase': \"phase s' p = 2\"\n    and i2: \"\\<forall>D\\<in>MajoritySet. \\<forall>q. \\<exists>d\\<in>D. bal (dblock s' p) < mbal (disk s' d q) \\<longrightarrow> hasRead s' p d q\""], ["proof (state)\nthis:\n  phase s' p = 2\n  \\<forall>D\\<in>MajoritySet.\n     \\<forall>q.\n        \\<exists>d\\<in>D.\n           bal (dblock s' p) < mbal (disk s' d q) \\<longrightarrow>\n           hasRead s' p d q\n\ngoal (1 subgoal):\n 1. \\<lbrakk>phase s' p = 2;\n     \\<forall>D\\<in>MajoritySet.\n        \\<forall>q.\n           \\<exists>d\\<in>D.\n              bal (dblock s' p) < mbal (disk s' d q) \\<longrightarrow>\n              hasRead s' p d q\\<rbrakk>\n    \\<Longrightarrow> maxBalInp s' (bal (dblock s' p)) (inp (dblock s' p))", "with act"], ["proof (chain)\npicking this:\n  HPhase1or2Write s s' p d\n  phase s' p = 2\n  \\<forall>D\\<in>MajoritySet.\n     \\<forall>q.\n        \\<exists>d\\<in>D.\n           bal (dblock s' p) < mbal (disk s' d q) \\<longrightarrow>\n           hasRead s' p d q", "have phase: \"phase s p = 2\""], ["proof (prove)\nusing this:\n  HPhase1or2Write s s' p d\n  phase s' p = 2\n  \\<forall>D\\<in>MajoritySet.\n     \\<forall>q.\n        \\<exists>d\\<in>D.\n           bal (dblock s' p) < mbal (disk s' d q) \\<longrightarrow>\n           hasRead s' p d q\n\ngoal (1 subgoal):\n 1. phase s p = 2", "by(auto simp add: Phase1or2Write_def)"], ["proof (state)\nthis:\n  phase s p = 2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>phase s' p = 2;\n     \\<forall>D\\<in>MajoritySet.\n        \\<forall>q.\n           \\<exists>d\\<in>D.\n              bal (dblock s' p) < mbal (disk s' d q) \\<longrightarrow>\n              hasRead s' p d q\\<rbrakk>\n    \\<Longrightarrow> maxBalInp s' (bal (dblock s' p)) (inp (dblock s' p))", "show \"maxBalInp s' (bal (dblock s' p)) (inp (dblock s' p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. maxBalInp s' (bal (dblock s' p)) (inp (dblock s' p))", "proof(rule HPhase1or2Write_HInv5_1[OF act, of p])"], ["proof (state)\ngoal (1 subgoal):\n 1. maxBalInp s (bal (dblock s p)) (inp (dblock s p))", "from HPhase1or2Write_HInv5_p2[OF act inv4 phase] inv i2 phase"], ["proof (chain)\npicking this:\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>q.\n        \\<forall>d\\<in>D.\n           bal (dblock s p) < mbal (disk s d q) \\<and>\n           \\<not> hasRead s p d q \\<Longrightarrow>\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>q.\n        \\<forall>d\\<in>D.\n           bal (dblock s' p) < mbal (disk s' d q) \\<and>\n           \\<not> hasRead s' p d q\n  HInv5_inner s p\n  \\<forall>D\\<in>MajoritySet.\n     \\<forall>q.\n        \\<exists>d\\<in>D.\n           bal (dblock s' p) < mbal (disk s' d q) \\<longrightarrow>\n           hasRead s' p d q\n  phase s p = 2", "show \"maxBalInp s (bal (dblock s p)) (inp (dblock s p))\""], ["proof (prove)\nusing this:\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>q.\n        \\<forall>d\\<in>D.\n           bal (dblock s p) < mbal (disk s d q) \\<and>\n           \\<not> hasRead s p d q \\<Longrightarrow>\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>q.\n        \\<forall>d\\<in>D.\n           bal (dblock s' p) < mbal (disk s' d q) \\<and>\n           \\<not> hasRead s' p d q\n  HInv5_inner s p\n  \\<forall>D\\<in>MajoritySet.\n     \\<forall>q.\n        \\<exists>d\\<in>D.\n           bal (dblock s' p) < mbal (disk s' d q) \\<longrightarrow>\n           hasRead s' p d q\n  phase s p = 2\n\ngoal (1 subgoal):\n 1. maxBalInp s (bal (dblock s p)) (inp (dblock s p))", "by(auto simp add: HInv5_inner_def HInv5_inner_R_def, blast)"], ["proof (state)\nthis:\n  maxBalInp s (bal (dblock s p)) (inp (dblock s p))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  maxBalInp s' (bal (dblock s' p)) (inp (dblock s' p))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HPhase1or2Write_allBlocks:\n  assumes act: \"HPhase1or2Write s s' p d\"\n  shows \"allBlocks s' \\<subseteq> allBlocks s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. allBlocks s' \\<subseteq> allBlocks s", "using HPhase1or2Write_blocksOf[OF act]"], ["proof (prove)\nusing this:\n  blocksOf s' ?r \\<subseteq> blocksOf s ?r\n\ngoal (1 subgoal):\n 1. allBlocks s' \\<subseteq> allBlocks s", "by(auto simp add: allBlocks_def)"], ["", "lemma HPhase1or2Write_HInv5_q2:\n  assumes act: \"HPhase1or2Write s s' p d\"\n  and pnq: \"p\\<noteq>q\"\n  and inv4a: \"HInv4a s p\"\n  and inv5_2: \"\\<exists>D\\<in>MajoritySet. \\<exists>qq. (\\<forall>d\\<in>D.    bal(dblock s q) < mbal(disk s d qq)\n                                     \\<and> \\<not>hasRead s q d qq)\"\n  shows \"\\<exists>D\\<in>MajoritySet. \\<exists>qq. (\\<forall>d\\<in>D.    bal(dblock s' q) < mbal(disk s' d qq)\n                                     \\<and> \\<not>hasRead s' q d qq)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n             \\<not> hasRead s' q d qq", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n             \\<not> hasRead s' q d qq", "from inv5_2"], ["proof (chain)\npicking this:\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s q) < mbal (disk s d qq) \\<and>\n           \\<not> hasRead s q d qq", "obtain D qq \n    where i1: \"IsMajority D\"\n      and i2: \"\\<forall>d\\<in>D. bal(dblock s q) < mbal(disk s d qq)\"\n      and i3: \"\\<forall>d\\<in>D. \\<not>hasRead s q d qq\""], ["proof (prove)\nusing this:\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s q) < mbal (disk s d qq) \\<and>\n           \\<not> hasRead s q d qq\n\ngoal (1 subgoal):\n 1. (\\<And>D qq.\n        \\<lbrakk>IsMajority D;\n         \\<forall>d\\<in>D. bal (dblock s q) < mbal (disk s d qq);\n         \\<forall>d\\<in>D. \\<not> hasRead s q d qq\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto simp add: MajoritySet_def)"], ["proof (state)\nthis:\n  IsMajority D\n  \\<forall>d\\<in>D. bal (dblock s q) < mbal (disk s d qq)\n  \\<forall>d\\<in>D. \\<not> hasRead s q d qq\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n             \\<not> hasRead s' q d qq", "from act pnq\n      \\<comment> \\<open>$dblock$ and $hasRead$ do not change\\<close>"], ["proof (chain)\npicking this:\n  HPhase1or2Write s s' p d\n  p \\<noteq> q", "have  dblock': \"dblock s' = dblock s\"\n    and hasread: \"\\<forall>d. hasRead s' q d qq = hasRead s q d qq\""], ["proof (prove)\nusing this:\n  HPhase1or2Write s s' p d\n  p \\<noteq> q\n\ngoal (1 subgoal):\n 1. dblock s' = dblock s &&&\n    \\<forall>d. hasRead s' q d qq = hasRead s q d qq", "by(auto simp add: Phase1or2Write_def hasRead_def)"], ["proof (state)\nthis:\n  dblock s' = dblock s\n  \\<forall>d. hasRead s' q d qq = hasRead s q d qq\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n             \\<not> hasRead s' q d qq", "have \"\\<forall>d\\<in>D. bal (dblock s' q) < mbal (disk s' d qq) \\<and> \\<not>hasRead s' q d qq\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>d\\<in>D.\n       bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n       \\<not> hasRead s' q d qq", "proof(cases \"qq=p\")"], ["proof (state)\ngoal (2 subgoals):\n 1. qq = p \\<Longrightarrow>\n    \\<forall>d\\<in>D.\n       bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n       \\<not> hasRead s' q d qq\n 2. qq \\<noteq> p \\<Longrightarrow>\n    \\<forall>d\\<in>D.\n       bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n       \\<not> hasRead s' q d qq", "case True"], ["proof (state)\nthis:\n  qq = p\n\ngoal (2 subgoals):\n 1. qq = p \\<Longrightarrow>\n    \\<forall>d\\<in>D.\n       bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n       \\<not> hasRead s' q d qq\n 2. qq \\<noteq> p \\<Longrightarrow>\n    \\<forall>d\\<in>D.\n       bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n       \\<not> hasRead s' q d qq", "have \"bal(dblock s q) < mbal(dblock s p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bal (dblock s q) < mbal (dblock s p)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. bal (dblock s q) < mbal (dblock s p)", "from inv4a act i1"], ["proof (chain)\npicking this:\n  HInv4a s p\n  HPhase1or2Write s s' p d\n  IsMajority D", "have \"\\<exists>d\\<in>D. mbal(disk s d p) \\<le> mbal(dblock s p)\""], ["proof (prove)\nusing this:\n  HInv4a s p\n  HPhase1or2Write s s' p d\n  IsMajority D\n\ngoal (1 subgoal):\n 1. \\<exists>d\\<in>D. mbal (disk s d p) \\<le> mbal (dblock s p)", "by(auto simp add: MajoritySet_def HInv4a_def \n                          HInv4a2_def Phase1or2Write_def)"], ["proof (state)\nthis:\n  \\<exists>d\\<in>D. mbal (disk s d p) \\<le> mbal (dblock s p)\n\ngoal (1 subgoal):\n 1. bal (dblock s q) < mbal (dblock s p)", "with True i2"], ["proof (chain)\npicking this:\n  qq = p\n  \\<forall>d\\<in>D. bal (dblock s q) < mbal (disk s d qq)\n  \\<exists>d\\<in>D. mbal (disk s d p) \\<le> mbal (dblock s p)", "show \"bal(dblock s q) < mbal(dblock s p)\""], ["proof (prove)\nusing this:\n  qq = p\n  \\<forall>d\\<in>D. bal (dblock s q) < mbal (disk s d qq)\n  \\<exists>d\\<in>D. mbal (disk s d p) \\<le> mbal (dblock s p)\n\ngoal (1 subgoal):\n 1. bal (dblock s q) < mbal (dblock s p)", "by auto"], ["proof (state)\nthis:\n  bal (dblock s q) < mbal (dblock s p)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  bal (dblock s q) < mbal (dblock s p)\n\ngoal (2 subgoals):\n 1. qq = p \\<Longrightarrow>\n    \\<forall>d\\<in>D.\n       bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n       \\<not> hasRead s' q d qq\n 2. qq \\<noteq> p \\<Longrightarrow>\n    \\<forall>d\\<in>D.\n       bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n       \\<not> hasRead s' q d qq", "with hasread dblock' True i1 i2 i3 act"], ["proof (chain)\npicking this:\n  \\<forall>d. hasRead s' q d qq = hasRead s q d qq\n  dblock s' = dblock s\n  qq = p\n  IsMajority D\n  \\<forall>d\\<in>D. bal (dblock s q) < mbal (disk s d qq)\n  \\<forall>d\\<in>D. \\<not> hasRead s q d qq\n  HPhase1or2Write s s' p d\n  bal (dblock s q) < mbal (dblock s p)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>d. hasRead s' q d qq = hasRead s q d qq\n  dblock s' = dblock s\n  qq = p\n  IsMajority D\n  \\<forall>d\\<in>D. bal (dblock s q) < mbal (disk s d qq)\n  \\<forall>d\\<in>D. \\<not> hasRead s q d qq\n  HPhase1or2Write s s' p d\n  bal (dblock s q) < mbal (dblock s p)\n\ngoal (1 subgoal):\n 1. \\<forall>d\\<in>D.\n       bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n       \\<not> hasRead s' q d qq", "by(auto simp add: Phase1or2Write_def)"], ["proof (state)\nthis:\n  \\<forall>d\\<in>D.\n     bal (dblock s' q) < mbal (disk s' d qq) \\<and> \\<not> hasRead s' q d qq\n\ngoal (1 subgoal):\n 1. qq \\<noteq> p \\<Longrightarrow>\n    \\<forall>d\\<in>D.\n       bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n       \\<not> hasRead s' q d qq", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. qq \\<noteq> p \\<Longrightarrow>\n    \\<forall>d\\<in>D.\n       bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n       \\<not> hasRead s' q d qq", "case False"], ["proof (state)\nthis:\n  qq \\<noteq> p\n\ngoal (1 subgoal):\n 1. qq \\<noteq> p \\<Longrightarrow>\n    \\<forall>d\\<in>D.\n       bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n       \\<not> hasRead s' q d qq", "with act i2 i3"], ["proof (chain)\npicking this:\n  HPhase1or2Write s s' p d\n  \\<forall>d\\<in>D. bal (dblock s q) < mbal (disk s d qq)\n  \\<forall>d\\<in>D. \\<not> hasRead s q d qq\n  qq \\<noteq> p", "show ?thesis"], ["proof (prove)\nusing this:\n  HPhase1or2Write s s' p d\n  \\<forall>d\\<in>D. bal (dblock s q) < mbal (disk s d qq)\n  \\<forall>d\\<in>D. \\<not> hasRead s q d qq\n  qq \\<noteq> p\n\ngoal (1 subgoal):\n 1. \\<forall>d\\<in>D.\n       bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n       \\<not> hasRead s' q d qq", "by(auto simp add: Phase1or2Write_def hasRead_def)"], ["proof (state)\nthis:\n  \\<forall>d\\<in>D.\n     bal (dblock s' q) < mbal (disk s' d qq) \\<and> \\<not> hasRead s' q d qq\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>d\\<in>D.\n     bal (dblock s' q) < mbal (disk s' d qq) \\<and> \\<not> hasRead s' q d qq\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n             \\<not> hasRead s' q d qq", "with i1"], ["proof (chain)\npicking this:\n  IsMajority D\n  \\<forall>d\\<in>D.\n     bal (dblock s' q) < mbal (disk s' d qq) \\<and> \\<not> hasRead s' q d qq", "show ?thesis"], ["proof (prove)\nusing this:\n  IsMajority D\n  \\<forall>d\\<in>D.\n     bal (dblock s' q) < mbal (disk s' d qq) \\<and> \\<not> hasRead s' q d qq\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n             \\<not> hasRead s' q d qq", "by(auto simp add: MajoritySet_def)"], ["proof (state)\nthis:\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n           \\<not> hasRead s' q d qq\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HPhase1or2Write_HInv5_q:\n  assumes act: \"HPhase1or2Write s s' p d\"\n  and inv: \"HInv5_inner s q\"\n  and inv4a: \"HInv4a s p\"\n  and pnq: \"p\\<noteq>q\"\n  shows \"HInv5_inner s' q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HInv5_inner s' q", "proof(auto simp add: HInv5_inner_def HInv5_inner_R_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>phase s' q = 2;\n     \\<forall>D\\<in>MajoritySet.\n        \\<forall>qa.\n           \\<exists>d\\<in>D.\n              bal (dblock s' q) < mbal (disk s' d qa) \\<longrightarrow>\n              hasRead s' q d qa\\<rbrakk>\n    \\<Longrightarrow> maxBalInp s' (bal (dblock s' q)) (inp (dblock s' q))", "assume phase': \"phase s' q = 2\"\n    and i2: \"\\<forall>D\\<in>MajoritySet. \\<forall>qa. \\<exists>d\\<in>D. bal (dblock s' q) < mbal (disk s' d qa) \\<longrightarrow> hasRead s' q d qa\""], ["proof (state)\nthis:\n  phase s' q = 2\n  \\<forall>D\\<in>MajoritySet.\n     \\<forall>qa.\n        \\<exists>d\\<in>D.\n           bal (dblock s' q) < mbal (disk s' d qa) \\<longrightarrow>\n           hasRead s' q d qa\n\ngoal (1 subgoal):\n 1. \\<lbrakk>phase s' q = 2;\n     \\<forall>D\\<in>MajoritySet.\n        \\<forall>qa.\n           \\<exists>d\\<in>D.\n              bal (dblock s' q) < mbal (disk s' d qa) \\<longrightarrow>\n              hasRead s' q d qa\\<rbrakk>\n    \\<Longrightarrow> maxBalInp s' (bal (dblock s' q)) (inp (dblock s' q))", "from phase' act"], ["proof (chain)\npicking this:\n  phase s' q = 2\n  HPhase1or2Write s s' p d", "have phase: \"phase s q = 2\""], ["proof (prove)\nusing this:\n  phase s' q = 2\n  HPhase1or2Write s s' p d\n\ngoal (1 subgoal):\n 1. phase s q = 2", "by(auto simp add: Phase1or2Write_def)"], ["proof (state)\nthis:\n  phase s q = 2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>phase s' q = 2;\n     \\<forall>D\\<in>MajoritySet.\n        \\<forall>qa.\n           \\<exists>d\\<in>D.\n              bal (dblock s' q) < mbal (disk s' d qa) \\<longrightarrow>\n              hasRead s' q d qa\\<rbrakk>\n    \\<Longrightarrow> maxBalInp s' (bal (dblock s' q)) (inp (dblock s' q))", "show \"maxBalInp s' (bal (dblock s' q)) (inp (dblock s' q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. maxBalInp s' (bal (dblock s' q)) (inp (dblock s' q))", "proof(rule HPhase1or2Write_HInv5_1[OF act, of q])"], ["proof (state)\ngoal (1 subgoal):\n 1. maxBalInp s (bal (dblock s q)) (inp (dblock s q))", "from HPhase1or2Write_HInv5_q2[OF act pnq inv4a] inv i2 phase"], ["proof (chain)\npicking this:\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s q) < mbal (disk s d qq) \\<and>\n           \\<not> hasRead s q d qq \\<Longrightarrow>\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n           \\<not> hasRead s' q d qq\n  HInv5_inner s q\n  \\<forall>D\\<in>MajoritySet.\n     \\<forall>qa.\n        \\<exists>d\\<in>D.\n           bal (dblock s' q) < mbal (disk s' d qa) \\<longrightarrow>\n           hasRead s' q d qa\n  phase s q = 2", "show \"maxBalInp s (bal (dblock s q)) (inp (dblock s q))\""], ["proof (prove)\nusing this:\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s q) < mbal (disk s d qq) \\<and>\n           \\<not> hasRead s q d qq \\<Longrightarrow>\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n           \\<not> hasRead s' q d qq\n  HInv5_inner s q\n  \\<forall>D\\<in>MajoritySet.\n     \\<forall>qa.\n        \\<exists>d\\<in>D.\n           bal (dblock s' q) < mbal (disk s' d qa) \\<longrightarrow>\n           hasRead s' q d qa\n  phase s q = 2\n\ngoal (1 subgoal):\n 1. maxBalInp s (bal (dblock s q)) (inp (dblock s q))", "by(auto simp add: HInv5_inner_def HInv5_inner_R_def, blast)"], ["proof (state)\nthis:\n  maxBalInp s (bal (dblock s q)) (inp (dblock s q))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  maxBalInp s' (bal (dblock s' q)) (inp (dblock s' q))\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem HPhase1or2Write_HInv5:\n  \"\\<lbrakk> HPhase1or2Write s s' p d; HInv5_inner s q; \n     HInv4c s p; HInv4a s p \\<rbrakk> \\<Longrightarrow> HInv5_inner s' q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>HPhase1or2Write s s' p d; HInv5_inner s q; HInv4c s p;\n     HInv4a s p\\<rbrakk>\n    \\<Longrightarrow> HInv5_inner s' q", "by(blast dest: HPhase1or2Write_HInv5_q HPhase1or2Write_HInv5_p)"], ["", "lemma HPhase1or2ReadThen_HInv5_1:\n  assumes act: \"HPhase1or2ReadThen s s' p d r\"\n  and inv5_1: \"maxBalInp s (bal(dblock s q)) (inp(dblock s q))\"\n  shows \"maxBalInp s' (bal(dblock s' q)) (inp(dblock s' q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. maxBalInp s' (bal (dblock s' q)) (inp (dblock s' q))", "using assms and HPhase1or2ReadThen_blocksOf[OF act]"], ["proof (prove)\nusing this:\n  HPhase1or2ReadThen s s' p d r\n  maxBalInp s (bal (dblock s q)) (inp (dblock s q))\n  blocksOf s' ?r \\<subseteq> blocksOf s ?r\n\ngoal (1 subgoal):\n 1. maxBalInp s' (bal (dblock s' q)) (inp (dblock s' q))", "by(auto simp add: Phase1or2ReadThen_def maxBalInp_def allBlocks_def)"], ["", "lemma HPhase1or2ReadThen_HInv5_p2:\n  assumes act: \"HPhase1or2ReadThen s s' p d r\"\n  and inv4c: \"HInv4c s p\"\n  and inv2c: \"Inv2c_inner s p\"\n  and phase: \"phase s p = 2\"\n  and inv5_2: \"\\<exists>D\\<in>MajoritySet. \\<exists>q. (\\<forall>d\\<in>D.    bal(dblock s p) < mbal(disk s d q)\n                                     \\<and> \\<not>hasRead s p d q)\"\n  shows \"\\<exists>D\\<in>MajoritySet. \\<exists>q. (\\<forall>d\\<in>D.    bal(dblock s' p) < mbal(disk s' d q)\n                                     \\<and> \\<not>hasRead s' p d q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>q.\n          \\<forall>d\\<in>D.\n             bal (dblock s' p) < mbal (disk s' d q) \\<and>\n             \\<not> hasRead s' p d q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>q.\n          \\<forall>d\\<in>D.\n             bal (dblock s' p) < mbal (disk s' d q) \\<and>\n             \\<not> hasRead s' p d q", "from inv5_2"], ["proof (chain)\npicking this:\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>q.\n        \\<forall>d\\<in>D.\n           bal (dblock s p) < mbal (disk s d q) \\<and>\n           \\<not> hasRead s p d q", "obtain D q \n    where i1: \"IsMajority D\"\n      and i2: \"\\<forall>d\\<in>D. bal(dblock s p) < mbal(disk s d q)\"\n      and i3: \"\\<forall>d\\<in>D. \\<not>hasRead s p d q\""], ["proof (prove)\nusing this:\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>q.\n        \\<forall>d\\<in>D.\n           bal (dblock s p) < mbal (disk s d q) \\<and>\n           \\<not> hasRead s p d q\n\ngoal (1 subgoal):\n 1. (\\<And>D q.\n        \\<lbrakk>IsMajority D;\n         \\<forall>d\\<in>D. bal (dblock s p) < mbal (disk s d q);\n         \\<forall>d\\<in>D. \\<not> hasRead s p d q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto simp add: MajoritySet_def)"], ["proof (state)\nthis:\n  IsMajority D\n  \\<forall>d\\<in>D. bal (dblock s p) < mbal (disk s d q)\n  \\<forall>d\\<in>D. \\<not> hasRead s p d q\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>q.\n          \\<forall>d\\<in>D.\n             bal (dblock s' p) < mbal (disk s' d q) \\<and>\n             \\<not> hasRead s' p d q", "from inv2c phase"], ["proof (chain)\npicking this:\n  Inv2c_inner s p\n  phase s p = 2", "have \"bal(dblock s p)=mbal(dblock s p)\""], ["proof (prove)\nusing this:\n  Inv2c_inner s p\n  phase s p = 2\n\ngoal (1 subgoal):\n 1. bal (dblock s p) = mbal (dblock s p)", "by(auto simp add: Inv2c_inner_def)"], ["proof (state)\nthis:\n  bal (dblock s p) = mbal (dblock s p)\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>q.\n          \\<forall>d\\<in>D.\n             bal (dblock s' p) < mbal (disk s' d q) \\<and>\n             \\<not> hasRead s' p d q", "moreover"], ["proof (state)\nthis:\n  bal (dblock s p) = mbal (dblock s p)\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>q.\n          \\<forall>d\\<in>D.\n             bal (dblock s' p) < mbal (disk s' d q) \\<and>\n             \\<not> hasRead s' p d q", "from act"], ["proof (chain)\npicking this:\n  HPhase1or2ReadThen s s' p d r", "have \"mbal (disk s d r) < mbal (dblock s p)\""], ["proof (prove)\nusing this:\n  HPhase1or2ReadThen s s' p d r\n\ngoal (1 subgoal):\n 1. mbal (disk s d r) < mbal (dblock s p)", "by(auto simp add: Phase1or2ReadThen_def)"], ["proof (state)\nthis:\n  mbal (disk s d r) < mbal (dblock s p)\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>q.\n          \\<forall>d\\<in>D.\n             bal (dblock s' p) < mbal (disk s' d q) \\<and>\n             \\<not> hasRead s' p d q", "moreover"], ["proof (state)\nthis:\n  mbal (disk s d r) < mbal (dblock s p)\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>q.\n          \\<forall>d\\<in>D.\n             bal (dblock s' p) < mbal (disk s' d q) \\<and>\n             \\<not> hasRead s' p d q", "from i2"], ["proof (chain)\npicking this:\n  \\<forall>d\\<in>D. bal (dblock s p) < mbal (disk s d q)", "have \"d\\<in>D \\<longrightarrow> bal(dblock s p) < mbal(disk s d q)\""], ["proof (prove)\nusing this:\n  \\<forall>d\\<in>D. bal (dblock s p) < mbal (disk s d q)\n\ngoal (1 subgoal):\n 1. d \\<in> D \\<longrightarrow> bal (dblock s p) < mbal (disk s d q)", "by auto"], ["proof (state)\nthis:\n  d \\<in> D \\<longrightarrow> bal (dblock s p) < mbal (disk s d q)\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>q.\n          \\<forall>d\\<in>D.\n             bal (dblock s' p) < mbal (disk s' d q) \\<and>\n             \\<not> hasRead s' p d q", "ultimately"], ["proof (chain)\npicking this:\n  bal (dblock s p) = mbal (dblock s p)\n  mbal (disk s d r) < mbal (dblock s p)\n  d \\<in> D \\<longrightarrow> bal (dblock s p) < mbal (disk s d q)", "have pnr: \"d\\<in>D \\<longrightarrow> q\\<noteq>r\""], ["proof (prove)\nusing this:\n  bal (dblock s p) = mbal (dblock s p)\n  mbal (disk s d r) < mbal (dblock s p)\n  d \\<in> D \\<longrightarrow> bal (dblock s p) < mbal (disk s d q)\n\ngoal (1 subgoal):\n 1. d \\<in> D \\<longrightarrow> q \\<noteq> r", "by auto"], ["proof (state)\nthis:\n  d \\<in> D \\<longrightarrow> q \\<noteq> r\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>q.\n          \\<forall>d\\<in>D.\n             bal (dblock s' p) < mbal (disk s' d q) \\<and>\n             \\<not> hasRead s' p d q", "have pnq: \"p\\<noteq>q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<noteq> q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. p \\<noteq> q", "from inv4c phase"], ["proof (chain)\npicking this:\n  HInv4c s p\n  phase s p = 2", "obtain D1 where r1: \"IsMajority D1 \\<and> (\\<forall>d\\<in>D1. mbal(disk s d p) = bal (dblock s p))\""], ["proof (prove)\nusing this:\n  HInv4c s p\n  phase s p = 2\n\ngoal (1 subgoal):\n 1. (\\<And>D1.\n        IsMajority D1 \\<and>\n        (\\<forall>d\\<in>D1.\n            mbal (disk s d p) = bal (dblock s p)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by(auto simp add: HInv4c_def MajoritySet_def)"], ["proof (state)\nthis:\n  IsMajority D1 \\<and>\n  (\\<forall>d\\<in>D1. mbal (disk s d p) = bal (dblock s p))\n\ngoal (1 subgoal):\n 1. p \\<noteq> q", "with i1 majorities_intersect"], ["proof (chain)\npicking this:\n  IsMajority D\n  \\<forall>S T.\n     IsMajority S \\<and> IsMajority T \\<longrightarrow>\n     S \\<inter> T \\<noteq> {}\n  IsMajority D1 \\<and>\n  (\\<forall>d\\<in>D1. mbal (disk s d p) = bal (dblock s p))", "have \"D\\<inter>D1\\<noteq>{}\""], ["proof (prove)\nusing this:\n  IsMajority D\n  \\<forall>S T.\n     IsMajority S \\<and> IsMajority T \\<longrightarrow>\n     S \\<inter> T \\<noteq> {}\n  IsMajority D1 \\<and>\n  (\\<forall>d\\<in>D1. mbal (disk s d p) = bal (dblock s p))\n\ngoal (1 subgoal):\n 1. D \\<inter> D1 \\<noteq> {}", "by auto"], ["proof (state)\nthis:\n  D \\<inter> D1 \\<noteq> {}\n\ngoal (1 subgoal):\n 1. p \\<noteq> q", "then"], ["proof (chain)\npicking this:\n  D \\<inter> D1 \\<noteq> {}", "obtain dd where  \"dd\\<in>D\\<inter>D1\""], ["proof (prove)\nusing this:\n  D \\<inter> D1 \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>dd.\n        dd \\<in> D \\<inter> D1 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  dd \\<in> D \\<inter> D1\n\ngoal (1 subgoal):\n 1. p \\<noteq> q", "with i1 i2 r1"], ["proof (chain)\npicking this:\n  IsMajority D\n  \\<forall>d\\<in>D. bal (dblock s p) < mbal (disk s d q)\n  IsMajority D1 \\<and>\n  (\\<forall>d\\<in>D1. mbal (disk s d p) = bal (dblock s p))\n  dd \\<in> D \\<inter> D1", "have \"bal(dblock s p) < mbal(disk s dd q) \\<and> mbal(disk s dd p) = bal (dblock s p)\""], ["proof (prove)\nusing this:\n  IsMajority D\n  \\<forall>d\\<in>D. bal (dblock s p) < mbal (disk s d q)\n  IsMajority D1 \\<and>\n  (\\<forall>d\\<in>D1. mbal (disk s d p) = bal (dblock s p))\n  dd \\<in> D \\<inter> D1\n\ngoal (1 subgoal):\n 1. bal (dblock s p) < mbal (disk s dd q) \\<and>\n    mbal (disk s dd p) = bal (dblock s p)", "by auto"], ["proof (state)\nthis:\n  bal (dblock s p) < mbal (disk s dd q) \\<and>\n  mbal (disk s dd p) = bal (dblock s p)\n\ngoal (1 subgoal):\n 1. p \\<noteq> q", "thus ?thesis"], ["proof (prove)\nusing this:\n  bal (dblock s p) < mbal (disk s dd q) \\<and>\n  mbal (disk s dd p) = bal (dblock s p)\n\ngoal (1 subgoal):\n 1. p \\<noteq> q", "by auto"], ["proof (state)\nthis:\n  p \\<noteq> q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p \\<noteq> q\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>q.\n          \\<forall>d\\<in>D.\n             bal (dblock s' p) < mbal (disk s' d q) \\<and>\n             \\<not> hasRead s' p d q", "from pnr act"], ["proof (chain)\npicking this:\n  d \\<in> D \\<longrightarrow> q \\<noteq> r\n  HPhase1or2ReadThen s s' p d r", "have hasRead': \"\\<forall>d\\<in>D. hasRead s' p d q = hasRead s p d q\""], ["proof (prove)\nusing this:\n  d \\<in> D \\<longrightarrow> q \\<noteq> r\n  HPhase1or2ReadThen s s' p d r\n\ngoal (1 subgoal):\n 1. \\<forall>d\\<in>D. hasRead s' p d q = hasRead s p d q", "by(auto simp add: Phase1or2ReadThen_def hasRead_def)"], ["proof (state)\nthis:\n  \\<forall>d\\<in>D. hasRead s' p d q = hasRead s p d q\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>q.\n          \\<forall>d\\<in>D.\n             bal (dblock s' p) < mbal (disk s' d q) \\<and>\n             \\<not> hasRead s' p d q", "from act pnq\n      \\<comment> \\<open>$dblock$ and $disk$ do not change\\<close>"], ["proof (chain)\npicking this:\n  HPhase1or2ReadThen s s' p d r\n  p \\<noteq> q", "have  \"dblock s' = dblock s\"\n    and \"\\<forall>d. disk s' = disk s\""], ["proof (prove)\nusing this:\n  HPhase1or2ReadThen s s' p d r\n  p \\<noteq> q\n\ngoal (1 subgoal):\n 1. dblock s' = dblock s &&& \\<forall>d. disk s' = disk s", "by(auto simp add: Phase1or2ReadThen_def)"], ["proof (state)\nthis:\n  dblock s' = dblock s\n  \\<forall>d. disk s' = disk s\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>q.\n          \\<forall>d\\<in>D.\n             bal (dblock s' p) < mbal (disk s' d q) \\<and>\n             \\<not> hasRead s' p d q", "with i2 hasRead' i3"], ["proof (chain)\npicking this:\n  \\<forall>d\\<in>D. bal (dblock s p) < mbal (disk s d q)\n  \\<forall>d\\<in>D. hasRead s' p d q = hasRead s p d q\n  \\<forall>d\\<in>D. \\<not> hasRead s p d q\n  dblock s' = dblock s\n  \\<forall>d. disk s' = disk s", "have \"\\<forall>d\\<in>D. bal (dblock s' p) < mbal (disk s' d q) \\<and> \\<not>hasRead s' p d q\""], ["proof (prove)\nusing this:\n  \\<forall>d\\<in>D. bal (dblock s p) < mbal (disk s d q)\n  \\<forall>d\\<in>D. hasRead s' p d q = hasRead s p d q\n  \\<forall>d\\<in>D. \\<not> hasRead s p d q\n  dblock s' = dblock s\n  \\<forall>d. disk s' = disk s\n\ngoal (1 subgoal):\n 1. \\<forall>d\\<in>D.\n       bal (dblock s' p) < mbal (disk s' d q) \\<and> \\<not> hasRead s' p d q", "by auto"], ["proof (state)\nthis:\n  \\<forall>d\\<in>D.\n     bal (dblock s' p) < mbal (disk s' d q) \\<and> \\<not> hasRead s' p d q\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>q.\n          \\<forall>d\\<in>D.\n             bal (dblock s' p) < mbal (disk s' d q) \\<and>\n             \\<not> hasRead s' p d q", "with i1"], ["proof (chain)\npicking this:\n  IsMajority D\n  \\<forall>d\\<in>D.\n     bal (dblock s' p) < mbal (disk s' d q) \\<and> \\<not> hasRead s' p d q", "show ?thesis"], ["proof (prove)\nusing this:\n  IsMajority D\n  \\<forall>d\\<in>D.\n     bal (dblock s' p) < mbal (disk s' d q) \\<and> \\<not> hasRead s' p d q\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>q.\n          \\<forall>d\\<in>D.\n             bal (dblock s' p) < mbal (disk s' d q) \\<and>\n             \\<not> hasRead s' p d q", "by(auto simp add: MajoritySet_def)"], ["proof (state)\nthis:\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>q.\n        \\<forall>d\\<in>D.\n           bal (dblock s' p) < mbal (disk s' d q) \\<and>\n           \\<not> hasRead s' p d q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HPhase1or2ReadThen_HInv5_p:\n  assumes act: \"HPhase1or2ReadThen s s' p d r\"\n  and inv: \"HInv5_inner s p\"\n  and inv4: \"HInv4c s p\"\n  and inv2c: \"Inv2c s\"\n  shows \"HInv5_inner s' p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HInv5_inner s' p", "proof(auto simp add: HInv5_inner_def HInv5_inner_R_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>phase s' p = 2;\n     \\<forall>D\\<in>MajoritySet.\n        \\<forall>q.\n           \\<exists>d\\<in>D.\n              bal (dblock s' p) < mbal (disk s' d q) \\<longrightarrow>\n              hasRead s' p d q\\<rbrakk>\n    \\<Longrightarrow> maxBalInp s' (bal (dblock s' p)) (inp (dblock s' p))", "assume phase': \"phase s' p = 2\"\n    and i2: \"\\<forall>D\\<in>MajoritySet. \\<forall>q. \\<exists>d\\<in>D. bal (dblock s' p) < mbal (disk s' d q) \\<longrightarrow> hasRead s' p d q\""], ["proof (state)\nthis:\n  phase s' p = 2\n  \\<forall>D\\<in>MajoritySet.\n     \\<forall>q.\n        \\<exists>d\\<in>D.\n           bal (dblock s' p) < mbal (disk s' d q) \\<longrightarrow>\n           hasRead s' p d q\n\ngoal (1 subgoal):\n 1. \\<lbrakk>phase s' p = 2;\n     \\<forall>D\\<in>MajoritySet.\n        \\<forall>q.\n           \\<exists>d\\<in>D.\n              bal (dblock s' p) < mbal (disk s' d q) \\<longrightarrow>\n              hasRead s' p d q\\<rbrakk>\n    \\<Longrightarrow> maxBalInp s' (bal (dblock s' p)) (inp (dblock s' p))", "with act"], ["proof (chain)\npicking this:\n  HPhase1or2ReadThen s s' p d r\n  phase s' p = 2\n  \\<forall>D\\<in>MajoritySet.\n     \\<forall>q.\n        \\<exists>d\\<in>D.\n           bal (dblock s' p) < mbal (disk s' d q) \\<longrightarrow>\n           hasRead s' p d q", "have phase: \"phase s p = 2\""], ["proof (prove)\nusing this:\n  HPhase1or2ReadThen s s' p d r\n  phase s' p = 2\n  \\<forall>D\\<in>MajoritySet.\n     \\<forall>q.\n        \\<exists>d\\<in>D.\n           bal (dblock s' p) < mbal (disk s' d q) \\<longrightarrow>\n           hasRead s' p d q\n\ngoal (1 subgoal):\n 1. phase s p = 2", "by(auto simp add: Phase1or2ReadThen_def)"], ["proof (state)\nthis:\n  phase s p = 2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>phase s' p = 2;\n     \\<forall>D\\<in>MajoritySet.\n        \\<forall>q.\n           \\<exists>d\\<in>D.\n              bal (dblock s' p) < mbal (disk s' d q) \\<longrightarrow>\n              hasRead s' p d q\\<rbrakk>\n    \\<Longrightarrow> maxBalInp s' (bal (dblock s' p)) (inp (dblock s' p))", "show \"maxBalInp s' (bal (dblock s' p)) (inp (dblock s' p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. maxBalInp s' (bal (dblock s' p)) (inp (dblock s' p))", "proof(rule HPhase1or2ReadThen_HInv5_1[OF act, of p])"], ["proof (state)\ngoal (1 subgoal):\n 1. maxBalInp s (bal (dblock s p)) (inp (dblock s p))", "from inv2c"], ["proof (chain)\npicking this:\n  Inv2c s", "have \"Inv2c_inner s p\""], ["proof (prove)\nusing this:\n  Inv2c s\n\ngoal (1 subgoal):\n 1. Inv2c_inner s p", "by(auto simp add: Inv2c_def)"], ["proof (state)\nthis:\n  Inv2c_inner s p\n\ngoal (1 subgoal):\n 1. maxBalInp s (bal (dblock s p)) (inp (dblock s p))", "from HPhase1or2ReadThen_HInv5_p2[OF act inv4 this phase] inv i2 phase"], ["proof (chain)\npicking this:\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>q.\n        \\<forall>d\\<in>D.\n           bal (dblock s p) < mbal (disk s d q) \\<and>\n           \\<not> hasRead s p d q \\<Longrightarrow>\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>q.\n        \\<forall>d\\<in>D.\n           bal (dblock s' p) < mbal (disk s' d q) \\<and>\n           \\<not> hasRead s' p d q\n  HInv5_inner s p\n  \\<forall>D\\<in>MajoritySet.\n     \\<forall>q.\n        \\<exists>d\\<in>D.\n           bal (dblock s' p) < mbal (disk s' d q) \\<longrightarrow>\n           hasRead s' p d q\n  phase s p = 2", "show \"maxBalInp s (bal (dblock s p)) (inp (dblock s p))\""], ["proof (prove)\nusing this:\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>q.\n        \\<forall>d\\<in>D.\n           bal (dblock s p) < mbal (disk s d q) \\<and>\n           \\<not> hasRead s p d q \\<Longrightarrow>\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>q.\n        \\<forall>d\\<in>D.\n           bal (dblock s' p) < mbal (disk s' d q) \\<and>\n           \\<not> hasRead s' p d q\n  HInv5_inner s p\n  \\<forall>D\\<in>MajoritySet.\n     \\<forall>q.\n        \\<exists>d\\<in>D.\n           bal (dblock s' p) < mbal (disk s' d q) \\<longrightarrow>\n           hasRead s' p d q\n  phase s p = 2\n\ngoal (1 subgoal):\n 1. maxBalInp s (bal (dblock s p)) (inp (dblock s p))", "by(auto simp add: HInv5_inner_def HInv5_inner_R_def, blast)"], ["proof (state)\nthis:\n  maxBalInp s (bal (dblock s p)) (inp (dblock s p))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  maxBalInp s' (bal (dblock s' p)) (inp (dblock s' p))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HPhase1or2ReadThen_allBlocks:\n  assumes act: \"HPhase1or2ReadThen s s' p d r\"\n  shows \"allBlocks s' \\<subseteq> allBlocks s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. allBlocks s' \\<subseteq> allBlocks s", "using HPhase1or2ReadThen_blocksOf[OF act]"], ["proof (prove)\nusing this:\n  blocksOf s' ?r \\<subseteq> blocksOf s ?r\n\ngoal (1 subgoal):\n 1. allBlocks s' \\<subseteq> allBlocks s", "by(auto simp add: allBlocks_def)"], ["", "lemma HPhase1or2ReadThen_HInv5_q2:\n  assumes act: \"HPhase1or2ReadThen s s' p d r\"\n  and pnq: \"p\\<noteq>q\"\n  and inv4a: \"HInv4a s p\"\n  and inv5_2: \"\\<exists>D\\<in>MajoritySet. \\<exists>qq. (\\<forall>d\\<in>D.    bal(dblock s q) < mbal(disk s d qq)\n                                     \\<and> \\<not>hasRead s q d qq)\"\n  shows \"\\<exists>D\\<in>MajoritySet. \\<exists>qq. (\\<forall>d\\<in>D.    bal(dblock s' q) < mbal(disk s' d qq)\n                                     \\<and> \\<not>hasRead s' q d qq)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n             \\<not> hasRead s' q d qq", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n             \\<not> hasRead s' q d qq", "from inv5_2"], ["proof (chain)\npicking this:\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s q) < mbal (disk s d qq) \\<and>\n           \\<not> hasRead s q d qq", "obtain D qq \n    where i1: \"IsMajority D\"\n      and i2: \"\\<forall>d\\<in>D. bal(dblock s q) < mbal(disk s d qq)\"\n      and i3: \"\\<forall>d\\<in>D. \\<not>hasRead s q d qq\""], ["proof (prove)\nusing this:\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s q) < mbal (disk s d qq) \\<and>\n           \\<not> hasRead s q d qq\n\ngoal (1 subgoal):\n 1. (\\<And>D qq.\n        \\<lbrakk>IsMajority D;\n         \\<forall>d\\<in>D. bal (dblock s q) < mbal (disk s d qq);\n         \\<forall>d\\<in>D. \\<not> hasRead s q d qq\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto simp add: MajoritySet_def)"], ["proof (state)\nthis:\n  IsMajority D\n  \\<forall>d\\<in>D. bal (dblock s q) < mbal (disk s d qq)\n  \\<forall>d\\<in>D. \\<not> hasRead s q d qq\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n             \\<not> hasRead s' q d qq", "from act pnq\n      \\<comment> \\<open>$dblock$ and $hasRead$ do not change\\<close>"], ["proof (chain)\npicking this:\n  HPhase1or2ReadThen s s' p d r\n  p \\<noteq> q", "have  dblock': \"dblock s' = dblock s\"\n    and   disk': \"disk s' = disk s\" \n    and hasread: \"\\<forall>d. hasRead s' q d qq = hasRead s q d qq\""], ["proof (prove)\nusing this:\n  HPhase1or2ReadThen s s' p d r\n  p \\<noteq> q\n\ngoal (1 subgoal):\n 1. dblock s' = dblock s &&&\n    disk s' = disk s &&& \\<forall>d. hasRead s' q d qq = hasRead s q d qq", "by(auto simp add: Phase1or2ReadThen_def hasRead_def)"], ["proof (state)\nthis:\n  dblock s' = dblock s\n  disk s' = disk s\n  \\<forall>d. hasRead s' q d qq = hasRead s q d qq\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n             \\<not> hasRead s' q d qq", "with i2 i3"], ["proof (chain)\npicking this:\n  \\<forall>d\\<in>D. bal (dblock s q) < mbal (disk s d qq)\n  \\<forall>d\\<in>D. \\<not> hasRead s q d qq\n  dblock s' = dblock s\n  disk s' = disk s\n  \\<forall>d. hasRead s' q d qq = hasRead s q d qq", "have \"\\<forall>d\\<in>D. bal (dblock s' q) < mbal (disk s' d qq) \\<and> \\<not>hasRead s' q d qq\""], ["proof (prove)\nusing this:\n  \\<forall>d\\<in>D. bal (dblock s q) < mbal (disk s d qq)\n  \\<forall>d\\<in>D. \\<not> hasRead s q d qq\n  dblock s' = dblock s\n  disk s' = disk s\n  \\<forall>d. hasRead s' q d qq = hasRead s q d qq\n\ngoal (1 subgoal):\n 1. \\<forall>d\\<in>D.\n       bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n       \\<not> hasRead s' q d qq", "by auto"], ["proof (state)\nthis:\n  \\<forall>d\\<in>D.\n     bal (dblock s' q) < mbal (disk s' d qq) \\<and> \\<not> hasRead s' q d qq\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n             \\<not> hasRead s' q d qq", "with i1"], ["proof (chain)\npicking this:\n  IsMajority D\n  \\<forall>d\\<in>D.\n     bal (dblock s' q) < mbal (disk s' d qq) \\<and> \\<not> hasRead s' q d qq", "show ?thesis"], ["proof (prove)\nusing this:\n  IsMajority D\n  \\<forall>d\\<in>D.\n     bal (dblock s' q) < mbal (disk s' d qq) \\<and> \\<not> hasRead s' q d qq\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n             \\<not> hasRead s' q d qq", "by(auto simp add: MajoritySet_def)"], ["proof (state)\nthis:\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n           \\<not> hasRead s' q d qq\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HPhase1or2ReadThen_HInv5_q:\n  assumes act: \"HPhase1or2ReadThen s s' p d r\"\n  and inv: \"HInv5_inner s q\"\n  and inv4a: \"HInv4a s p\"\n  and pnq: \"p\\<noteq>q\"\n  shows \"HInv5_inner s' q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HInv5_inner s' q", "proof(auto simp add: HInv5_inner_def HInv5_inner_R_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>phase s' q = 2;\n     \\<forall>D\\<in>MajoritySet.\n        \\<forall>qa.\n           \\<exists>d\\<in>D.\n              bal (dblock s' q) < mbal (disk s' d qa) \\<longrightarrow>\n              hasRead s' q d qa\\<rbrakk>\n    \\<Longrightarrow> maxBalInp s' (bal (dblock s' q)) (inp (dblock s' q))", "assume phase': \"phase s' q = 2\"\n    and i2: \"\\<forall>D\\<in>MajoritySet. \\<forall>qa. \\<exists>d\\<in>D. bal (dblock s' q) < mbal (disk s' d qa) \\<longrightarrow> hasRead s' q d qa\""], ["proof (state)\nthis:\n  phase s' q = 2\n  \\<forall>D\\<in>MajoritySet.\n     \\<forall>qa.\n        \\<exists>d\\<in>D.\n           bal (dblock s' q) < mbal (disk s' d qa) \\<longrightarrow>\n           hasRead s' q d qa\n\ngoal (1 subgoal):\n 1. \\<lbrakk>phase s' q = 2;\n     \\<forall>D\\<in>MajoritySet.\n        \\<forall>qa.\n           \\<exists>d\\<in>D.\n              bal (dblock s' q) < mbal (disk s' d qa) \\<longrightarrow>\n              hasRead s' q d qa\\<rbrakk>\n    \\<Longrightarrow> maxBalInp s' (bal (dblock s' q)) (inp (dblock s' q))", "from phase' act"], ["proof (chain)\npicking this:\n  phase s' q = 2\n  HPhase1or2ReadThen s s' p d r", "have phase: \"phase s q = 2\""], ["proof (prove)\nusing this:\n  phase s' q = 2\n  HPhase1or2ReadThen s s' p d r\n\ngoal (1 subgoal):\n 1. phase s q = 2", "by(auto simp add: Phase1or2ReadThen_def)"], ["proof (state)\nthis:\n  phase s q = 2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>phase s' q = 2;\n     \\<forall>D\\<in>MajoritySet.\n        \\<forall>qa.\n           \\<exists>d\\<in>D.\n              bal (dblock s' q) < mbal (disk s' d qa) \\<longrightarrow>\n              hasRead s' q d qa\\<rbrakk>\n    \\<Longrightarrow> maxBalInp s' (bal (dblock s' q)) (inp (dblock s' q))", "show \"maxBalInp s' (bal (dblock s' q)) (inp (dblock s' q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. maxBalInp s' (bal (dblock s' q)) (inp (dblock s' q))", "proof(rule HPhase1or2ReadThen_HInv5_1[OF act, of q])"], ["proof (state)\ngoal (1 subgoal):\n 1. maxBalInp s (bal (dblock s q)) (inp (dblock s q))", "from HPhase1or2ReadThen_HInv5_q2[OF act pnq inv4a] inv i2 phase"], ["proof (chain)\npicking this:\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s q) < mbal (disk s d qq) \\<and>\n           \\<not> hasRead s q d qq \\<Longrightarrow>\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n           \\<not> hasRead s' q d qq\n  HInv5_inner s q\n  \\<forall>D\\<in>MajoritySet.\n     \\<forall>qa.\n        \\<exists>d\\<in>D.\n           bal (dblock s' q) < mbal (disk s' d qa) \\<longrightarrow>\n           hasRead s' q d qa\n  phase s q = 2", "show \"maxBalInp s (bal (dblock s q)) (inp (dblock s q))\""], ["proof (prove)\nusing this:\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s q) < mbal (disk s d qq) \\<and>\n           \\<not> hasRead s q d qq \\<Longrightarrow>\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n           \\<not> hasRead s' q d qq\n  HInv5_inner s q\n  \\<forall>D\\<in>MajoritySet.\n     \\<forall>qa.\n        \\<exists>d\\<in>D.\n           bal (dblock s' q) < mbal (disk s' d qa) \\<longrightarrow>\n           hasRead s' q d qa\n  phase s q = 2\n\ngoal (1 subgoal):\n 1. maxBalInp s (bal (dblock s q)) (inp (dblock s q))", "by(auto simp add: HInv5_inner_def HInv5_inner_R_def, blast)"], ["proof (state)\nthis:\n  maxBalInp s (bal (dblock s q)) (inp (dblock s q))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  maxBalInp s' (bal (dblock s' q)) (inp (dblock s' q))\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem HPhase1or2ReadThen_HInv5:\n  \"\\<lbrakk> HPhase1or2ReadThen s s' p d r; HInv5_inner s q; \n     Inv2c s; HInv4c s p; HInv4a s p \\<rbrakk> \\<Longrightarrow> HInv5_inner s' q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>HPhase1or2ReadThen s s' p d r; HInv5_inner s q; Inv2c s;\n     HInv4c s p; HInv4a s p\\<rbrakk>\n    \\<Longrightarrow> HInv5_inner s' q", "by(blast dest: HPhase1or2ReadThen_HInv5_q HPhase1or2ReadThen_HInv5_p)"], ["", "theorem HPhase1or2ReadElse_HInv5:\n  \"\\<lbrakk> HPhase1or2ReadElse s s' p d r; HInv5_inner s q \\<rbrakk>\n     \\<Longrightarrow> HInv5_inner s' q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>HPhase1or2ReadElse s s' p d r; HInv5_inner s q\\<rbrakk>\n    \\<Longrightarrow> HInv5_inner s' q", "using HStartBallot_HInv5"], ["proof (prove)\nusing this:\n  \\<lbrakk>HStartBallot ?s ?s' ?p; HInv5_inner ?s ?q\\<rbrakk>\n  \\<Longrightarrow> HInv5_inner ?s' ?q\n\ngoal (1 subgoal):\n 1. \\<lbrakk>HPhase1or2ReadElse s s' p d r; HInv5_inner s q\\<rbrakk>\n    \\<Longrightarrow> HInv5_inner s' q", "by(auto simp add: Phase1or2ReadElse_def)"], ["", "lemma HEndPhase2_HInv5_p:\n  \"HEndPhase2 s s' p  \\<Longrightarrow> HInv5_inner s' p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HEndPhase2 s s' p \\<Longrightarrow> HInv5_inner s' p", "by(auto simp add: EndPhase2_def HInv5_inner_def)"], ["", "lemma HEndPhase2_allBlocks:\n  assumes act: \"HEndPhase2 s s' p\"\n  shows \"allBlocks s' \\<subseteq> allBlocks s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. allBlocks s' \\<subseteq> allBlocks s", "using HEndPhase2_blocksOf[OF act]"], ["proof (prove)\nusing this:\n  blocksOf s' ?q \\<subseteq> blocksOf s ?q\n\ngoal (1 subgoal):\n 1. allBlocks s' \\<subseteq> allBlocks s", "by(auto simp add: allBlocks_def)"], ["", "lemma HEndPhase2_HInv5_q1:\n  assumes act: \"HEndPhase2 s s' p\"\n  and pnq: \"p\\<noteq>q\"\n  and inv5_1: \"maxBalInp s (bal(dblock s q)) (inp(dblock s q))\"\n  shows \"maxBalInp s' (bal(dblock s' q)) (inp(dblock s' q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. maxBalInp s' (bal (dblock s' q)) (inp (dblock s' q))", "proof(auto simp add: maxBalInp_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>bk.\n       \\<lbrakk>bk \\<in> allBlocks s';\n        bal (dblock s' q) \\<le> bal bk\\<rbrakk>\n       \\<Longrightarrow> inp bk = inp (dblock s' q)", "fix bk"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>bk.\n       \\<lbrakk>bk \\<in> allBlocks s';\n        bal (dblock s' q) \\<le> bal bk\\<rbrakk>\n       \\<Longrightarrow> inp bk = inp (dblock s' q)", "assume bk: \"bk \\<in> allBlocks s'\"\n    and bal: \"bal (dblock s' q) \\<le> bal bk\""], ["proof (state)\nthis:\n  bk \\<in> allBlocks s'\n  bal (dblock s' q) \\<le> bal bk\n\ngoal (1 subgoal):\n 1. \\<And>bk.\n       \\<lbrakk>bk \\<in> allBlocks s';\n        bal (dblock s' q) \\<le> bal bk\\<rbrakk>\n       \\<Longrightarrow> inp bk = inp (dblock s' q)", "from act pnq"], ["proof (chain)\npicking this:\n  HEndPhase2 s s' p\n  p \\<noteq> q", "have dblock': \"dblock s' q = dblock s q\""], ["proof (prove)\nusing this:\n  HEndPhase2 s s' p\n  p \\<noteq> q\n\ngoal (1 subgoal):\n 1. dblock s' q = dblock s q", "by(auto simp add: EndPhase2_def)"], ["proof (state)\nthis:\n  dblock s' q = dblock s q\n\ngoal (1 subgoal):\n 1. \\<And>bk.\n       \\<lbrakk>bk \\<in> allBlocks s';\n        bal (dblock s' q) \\<le> bal bk\\<rbrakk>\n       \\<Longrightarrow> inp bk = inp (dblock s' q)", "from subsetD[OF HEndPhase2_allBlocks[OF act] bk] inv5_1 dblock' bal"], ["proof (chain)\npicking this:\n  bk \\<in> allBlocks s\n  maxBalInp s (bal (dblock s q)) (inp (dblock s q))\n  dblock s' q = dblock s q\n  bal (dblock s' q) \\<le> bal bk", "show \"inp bk = inp (dblock s' q)\""], ["proof (prove)\nusing this:\n  bk \\<in> allBlocks s\n  maxBalInp s (bal (dblock s q)) (inp (dblock s q))\n  dblock s' q = dblock s q\n  bal (dblock s' q) \\<le> bal bk\n\ngoal (1 subgoal):\n 1. inp bk = inp (dblock s' q)", "by(auto simp add: maxBalInp_def)"], ["proof (state)\nthis:\n  inp bk = inp (dblock s' q)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HEndPhase2_HInv5_q2:\n  assumes act: \"HEndPhase2 s s' p\"\n  and pnq: \"p\\<noteq>q\"\n  and inv5_2: \"\\<exists>D\\<in>MajoritySet. \\<exists>qq. (\\<forall>d\\<in>D.    bal(dblock s q) < mbal(disk s d qq)\n                                     \\<and> \\<not>hasRead s q d qq)\"\n  shows \"\\<exists>D\\<in>MajoritySet. \\<exists>qq. (\\<forall>d\\<in>D.    bal(dblock s' q) < mbal(disk s' d qq)\n                                     \\<and> \\<not>hasRead s' q d qq)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n             \\<not> hasRead s' q d qq", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n             \\<not> hasRead s' q d qq", "from act pnq"], ["proof (chain)\npicking this:\n  HEndPhase2 s s' p\n  p \\<noteq> q", "have  disk: \"disk s' = disk s\"\n    and blocksRead: \"\\<forall>d. blocksRead s' q d = blocksRead s q d\"\n    and dblock: \"dblock s' q = dblock s q\""], ["proof (prove)\nusing this:\n  HEndPhase2 s s' p\n  p \\<noteq> q\n\ngoal (1 subgoal):\n 1. disk s' = disk s &&&\n    \\<forall>d. blocksRead s' q d = blocksRead s q d &&&\n    dblock s' q = dblock s q", "by(auto simp add: EndPhase2_def InitializePhase_def)"], ["proof (state)\nthis:\n  disk s' = disk s\n  \\<forall>d. blocksRead s' q d = blocksRead s q d\n  dblock s' q = dblock s q\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n             \\<not> hasRead s' q d qq", "with inv5_2"], ["proof (chain)\npicking this:\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s q) < mbal (disk s d qq) \\<and>\n           \\<not> hasRead s q d qq\n  disk s' = disk s\n  \\<forall>d. blocksRead s' q d = blocksRead s q d\n  dblock s' q = dblock s q", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s q) < mbal (disk s d qq) \\<and>\n           \\<not> hasRead s q d qq\n  disk s' = disk s\n  \\<forall>d. blocksRead s' q d = blocksRead s q d\n  dblock s' q = dblock s q\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n             \\<not> hasRead s' q d qq", "by(auto simp add: hasRead_def)"], ["proof (state)\nthis:\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n           \\<not> hasRead s' q d qq\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HEndPhase2_HInv5_q:\n  assumes act: \"HEndPhase2 s s' p\"\n  and inv: \"HInv5_inner s q\"\n  and pnq: \"p\\<noteq>q\"\n  shows \"HInv5_inner s' q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HInv5_inner s' q", "using assms and HEndPhase2_HInv5_q1[OF act pnq] HEndPhase2_HInv5_q2[OF act pnq]"], ["proof (prove)\nusing this:\n  HEndPhase2 s s' p\n  HInv5_inner s q\n  p \\<noteq> q\n  maxBalInp s (bal (dblock s q)) (inp (dblock s q)) \\<Longrightarrow>\n  maxBalInp s' (bal (dblock s' q)) (inp (dblock s' q))\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s q) < mbal (disk s d qq) \\<and>\n           \\<not> hasRead s q d qq \\<Longrightarrow>\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n           \\<not> hasRead s' q d qq\n\ngoal (1 subgoal):\n 1. HInv5_inner s' q", "by(auto simp add: HInv5_inner_def HInv5_inner_R_def EndPhase2_def)"], ["", "theorem HEndPhase2_HInv5:\n  \"\\<lbrakk> HEndPhase2 s s' p; HInv5_inner s q \\<rbrakk> \\<Longrightarrow> HInv5_inner s' q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>HEndPhase2 s s' p; HInv5_inner s q\\<rbrakk>\n    \\<Longrightarrow> HInv5_inner s' q", "by(blast dest: HEndPhase2_HInv5_q HEndPhase2_HInv5_p)"], ["", "lemma HEndPhase1_HInv5_p:\n  assumes act: \"HEndPhase1 s s' p\"\n  and inv4: \"HInv4 s\"\n  and inv2a: \"Inv2a s\"\n  and inv2a': \"Inv2a s'\"\n  and inv2c: \"Inv2c s\"\n  and asm4: \"\\<not>maxBalInp s' (bal(dblock s' p)) (inp(dblock s' p))\"\n  shows \"(\\<exists>D\\<in>MajoritySet. \\<exists>q. (\\<forall>d\\<in>D.    bal(dblock s' p) < mbal(disk s' d q)\n                                     \\<and> \\<not>hasRead s' p d q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>q.\n          \\<forall>d\\<in>D.\n             bal (dblock s' p) < mbal (disk s' d q) \\<and>\n             \\<not> hasRead s' p d q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>q.\n          \\<forall>d\\<in>D.\n             bal (dblock s' p) < mbal (disk s' d q) \\<and>\n             \\<not> hasRead s' p d q", "have \"\\<exists>bk\\<in>allBlocks s. bal(dblock s' p) \\<le> bal bk \\<and> bk \\<noteq> dblock s' p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>bk\\<in>allBlocks s.\n       bal (dblock s' p) \\<le> bal bk \\<and> bk \\<noteq> dblock s' p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>bk\\<in>allBlocks s.\n       bal (dblock s' p) \\<le> bal bk \\<and> bk \\<noteq> dblock s' p", "from asm4"], ["proof (chain)\npicking this:\n  \\<not> maxBalInp s' (bal (dblock s' p)) (inp (dblock s' p))", "obtain bk\n      where p31: \"bk\\<in>allBlocks s' \\<and>  bal(dblock s' p) \\<le> bal bk \\<and> bk \\<noteq> dblock s' p\""], ["proof (prove)\nusing this:\n  \\<not> maxBalInp s' (bal (dblock s' p)) (inp (dblock s' p))\n\ngoal (1 subgoal):\n 1. (\\<And>bk.\n        bk \\<in> allBlocks s' \\<and>\n        bal (dblock s' p) \\<le> bal bk \\<and>\n        bk \\<noteq> dblock s' p \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by(auto simp add: maxBalInp_def)"], ["proof (state)\nthis:\n  bk \\<in> allBlocks s' \\<and>\n  bal (dblock s' p) \\<le> bal bk \\<and> bk \\<noteq> dblock s' p\n\ngoal (1 subgoal):\n 1. \\<exists>bk\\<in>allBlocks s.\n       bal (dblock s' p) \\<le> bal bk \\<and> bk \\<noteq> dblock s' p", "then"], ["proof (chain)\npicking this:\n  bk \\<in> allBlocks s' \\<and>\n  bal (dblock s' p) \\<le> bal bk \\<and> bk \\<noteq> dblock s' p", "obtain q where p32: \"bk \\<in> blocksOf s' q\""], ["proof (prove)\nusing this:\n  bk \\<in> allBlocks s' \\<and>\n  bal (dblock s' p) \\<le> bal bk \\<and> bk \\<noteq> dblock s' p\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        bk \\<in> blocksOf s' q \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto simp add: allBlocks_def)"], ["proof (state)\nthis:\n  bk \\<in> blocksOf s' q\n\ngoal (1 subgoal):\n 1. \\<exists>bk\\<in>allBlocks s.\n       bal (dblock s' p) \\<le> bal bk \\<and> bk \\<noteq> dblock s' p", "from act"], ["proof (chain)\npicking this:\n  HEndPhase1 s s' p", "have dblock: \"p\\<noteq>q \\<Longrightarrow> dblock s' q = dblock s q\""], ["proof (prove)\nusing this:\n  HEndPhase1 s s' p\n\ngoal (1 subgoal):\n 1. p \\<noteq> q \\<Longrightarrow> dblock s' q = dblock s q", "by(auto simp add: EndPhase1_def)"], ["proof (state)\nthis:\n  p \\<noteq> q \\<Longrightarrow> dblock s' q = dblock s q\n\ngoal (1 subgoal):\n 1. \\<exists>bk\\<in>allBlocks s.\n       bal (dblock s' p) \\<le> bal bk \\<and> bk \\<noteq> dblock s' p", "have \"bk \\<in> blocksOf s q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bk \\<in> blocksOf s q", "proof(cases \"p=q\")"], ["proof (state)\ngoal (2 subgoals):\n 1. p = q \\<Longrightarrow> bk \\<in> blocksOf s q\n 2. p \\<noteq> q \\<Longrightarrow> bk \\<in> blocksOf s q", "case True"], ["proof (state)\nthis:\n  p = q\n\ngoal (2 subgoals):\n 1. p = q \\<Longrightarrow> bk \\<in> blocksOf s q\n 2. p \\<noteq> q \\<Longrightarrow> bk \\<in> blocksOf s q", "with p32 p31 HEndPhase1_blocksOf[OF act]"], ["proof (chain)\npicking this:\n  bk \\<in> blocksOf s' q\n  bk \\<in> allBlocks s' \\<and>\n  bal (dblock s' p) \\<le> bal bk \\<and> bk \\<noteq> dblock s' p\n  blocksOf s' ?q \\<subseteq> blocksOf s ?q \\<union> {dblock s' ?q}\n  p = q", "show ?thesis"], ["proof (prove)\nusing this:\n  bk \\<in> blocksOf s' q\n  bk \\<in> allBlocks s' \\<and>\n  bal (dblock s' p) \\<le> bal bk \\<and> bk \\<noteq> dblock s' p\n  blocksOf s' ?q \\<subseteq> blocksOf s ?q \\<union> {dblock s' ?q}\n  p = q\n\ngoal (1 subgoal):\n 1. bk \\<in> blocksOf s q", "by auto"], ["proof (state)\nthis:\n  bk \\<in> blocksOf s q\n\ngoal (1 subgoal):\n 1. p \\<noteq> q \\<Longrightarrow> bk \\<in> blocksOf s q", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. p \\<noteq> q \\<Longrightarrow> bk \\<in> blocksOf s q", "case False"], ["proof (state)\nthis:\n  p \\<noteq> q\n\ngoal (1 subgoal):\n 1. p \\<noteq> q \\<Longrightarrow> bk \\<in> blocksOf s q", "from dblock[OF False] subsetD[OF HEndPhase1_blocksOf[OF act, of q] p32]"], ["proof (chain)\npicking this:\n  dblock s' q = dblock s q\n  bk \\<in> blocksOf s q \\<union> {dblock s' q}", "show ?thesis"], ["proof (prove)\nusing this:\n  dblock s' q = dblock s q\n  bk \\<in> blocksOf s q \\<union> {dblock s' q}\n\ngoal (1 subgoal):\n 1. bk \\<in> blocksOf s q", "by(auto simp add: blocksOf_def)"], ["proof (state)\nthis:\n  bk \\<in> blocksOf s q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  bk \\<in> blocksOf s q\n\ngoal (1 subgoal):\n 1. \\<exists>bk\\<in>allBlocks s.\n       bal (dblock s' p) \\<le> bal bk \\<and> bk \\<noteq> dblock s' p", "with p31"], ["proof (chain)\npicking this:\n  bk \\<in> allBlocks s' \\<and>\n  bal (dblock s' p) \\<le> bal bk \\<and> bk \\<noteq> dblock s' p\n  bk \\<in> blocksOf s q", "show ?thesis"], ["proof (prove)\nusing this:\n  bk \\<in> allBlocks s' \\<and>\n  bal (dblock s' p) \\<le> bal bk \\<and> bk \\<noteq> dblock s' p\n  bk \\<in> blocksOf s q\n\ngoal (1 subgoal):\n 1. \\<exists>bk\\<in>allBlocks s.\n       bal (dblock s' p) \\<le> bal bk \\<and> bk \\<noteq> dblock s' p", "by(auto simp add: allBlocks_def)"], ["proof (state)\nthis:\n  \\<exists>bk\\<in>allBlocks s.\n     bal (dblock s' p) \\<le> bal bk \\<and> bk \\<noteq> dblock s' p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>bk\\<in>allBlocks s.\n     bal (dblock s' p) \\<le> bal bk \\<and> bk \\<noteq> dblock s' p\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>q.\n          \\<forall>d\\<in>D.\n             bal (dblock s' p) < mbal (disk s' d q) \\<and>\n             \\<not> hasRead s' p d q", "then"], ["proof (chain)\npicking this:\n  \\<exists>bk\\<in>allBlocks s.\n     bal (dblock s' p) \\<le> bal bk \\<and> bk \\<noteq> dblock s' p", "obtain bk where p22: \"bk\\<in>allBlocks s \\<and> bal (dblock s' p) \\<le> bal bk \\<and> bk \\<noteq> dblock s' p\""], ["proof (prove)\nusing this:\n  \\<exists>bk\\<in>allBlocks s.\n     bal (dblock s' p) \\<le> bal bk \\<and> bk \\<noteq> dblock s' p\n\ngoal (1 subgoal):\n 1. (\\<And>bk.\n        bk \\<in> allBlocks s \\<and>\n        bal (dblock s' p) \\<le> bal bk \\<and>\n        bk \\<noteq> dblock s' p \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  bk \\<in> allBlocks s \\<and>\n  bal (dblock s' p) \\<le> bal bk \\<and> bk \\<noteq> dblock s' p\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>q.\n          \\<forall>d\\<in>D.\n             bal (dblock s' p) < mbal (disk s' d q) \\<and>\n             \\<not> hasRead s' p d q", "have \"\\<exists>q\\<in>UNIV-{p}. bk \\<in> blocksOf s q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>q\\<in>UNIV - {p}. bk \\<in> blocksOf s q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>q\\<in>UNIV - {p}. bk \\<in> blocksOf s q", "from p22"], ["proof (chain)\npicking this:\n  bk \\<in> allBlocks s \\<and>\n  bal (dblock s' p) \\<le> bal bk \\<and> bk \\<noteq> dblock s' p", "obtain q where bk: \"bk\\<in> blocksOf s q\""], ["proof (prove)\nusing this:\n  bk \\<in> allBlocks s \\<and>\n  bal (dblock s' p) \\<le> bal bk \\<and> bk \\<noteq> dblock s' p\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        bk \\<in> blocksOf s q \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto simp add: allBlocks_def)"], ["proof (state)\nthis:\n  bk \\<in> blocksOf s q\n\ngoal (1 subgoal):\n 1. \\<exists>q\\<in>UNIV - {p}. bk \\<in> blocksOf s q", "from act p22"], ["proof (chain)\npicking this:\n  HEndPhase1 s s' p\n  bk \\<in> allBlocks s \\<and>\n  bal (dblock s' p) \\<le> bal bk \\<and> bk \\<noteq> dblock s' p", "have \"mbal(dblock s p) \\<le> bal bk\""], ["proof (prove)\nusing this:\n  HEndPhase1 s s' p\n  bk \\<in> allBlocks s \\<and>\n  bal (dblock s' p) \\<le> bal bk \\<and> bk \\<noteq> dblock s' p\n\ngoal (1 subgoal):\n 1. mbal (dblock s p) \\<le> bal bk", "by(auto simp add: EndPhase1_def)"], ["proof (state)\nthis:\n  mbal (dblock s p) \\<le> bal bk\n\ngoal (1 subgoal):\n 1. \\<exists>q\\<in>UNIV - {p}. bk \\<in> blocksOf s q", "moreover"], ["proof (state)\nthis:\n  mbal (dblock s p) \\<le> bal bk\n\ngoal (1 subgoal):\n 1. \\<exists>q\\<in>UNIV - {p}. bk \\<in> blocksOf s q", "from act"], ["proof (chain)\npicking this:\n  HEndPhase1 s s' p", "have \"phase s p = 1\""], ["proof (prove)\nusing this:\n  HEndPhase1 s s' p\n\ngoal (1 subgoal):\n 1. phase s p = 1", "by(auto simp add: EndPhase1_def)"], ["proof (state)\nthis:\n  phase s p = 1\n\ngoal (1 subgoal):\n 1. \\<exists>q\\<in>UNIV - {p}. bk \\<in> blocksOf s q", "moreover"], ["proof (state)\nthis:\n  phase s p = 1\n\ngoal (1 subgoal):\n 1. \\<exists>q\\<in>UNIV - {p}. bk \\<in> blocksOf s q", "from inv4"], ["proof (chain)\npicking this:\n  HInv4 s", "have \"HInv4b s p\""], ["proof (prove)\nusing this:\n  HInv4 s\n\ngoal (1 subgoal):\n 1. HInv4b s p", "by(auto simp add: HInv4_def)"], ["proof (state)\nthis:\n  HInv4b s p\n\ngoal (1 subgoal):\n 1. \\<exists>q\\<in>UNIV - {p}. bk \\<in> blocksOf s q", "ultimately"], ["proof (chain)\npicking this:\n  mbal (dblock s p) \\<le> bal bk\n  phase s p = 1\n  HInv4b s p", "have \"p\\<noteq>q\""], ["proof (prove)\nusing this:\n  mbal (dblock s p) \\<le> bal bk\n  phase s p = 1\n  HInv4b s p\n\ngoal (1 subgoal):\n 1. p \\<noteq> q", "using bk"], ["proof (prove)\nusing this:\n  mbal (dblock s p) \\<le> bal bk\n  phase s p = 1\n  HInv4b s p\n  bk \\<in> blocksOf s q\n\ngoal (1 subgoal):\n 1. p \\<noteq> q", "by(auto simp add: HInv4_def HInv4b_def)"], ["proof (state)\nthis:\n  p \\<noteq> q\n\ngoal (1 subgoal):\n 1. \\<exists>q\\<in>UNIV - {p}. bk \\<in> blocksOf s q", "with bk"], ["proof (chain)\npicking this:\n  bk \\<in> blocksOf s q\n  p \\<noteq> q", "show ?thesis"], ["proof (prove)\nusing this:\n  bk \\<in> blocksOf s q\n  p \\<noteq> q\n\ngoal (1 subgoal):\n 1. \\<exists>q\\<in>UNIV - {p}. bk \\<in> blocksOf s q", "by auto"], ["proof (state)\nthis:\n  \\<exists>q\\<in>UNIV - {p}. bk \\<in> blocksOf s q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>q\\<in>UNIV - {p}. bk \\<in> blocksOf s q\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>q.\n          \\<forall>d\\<in>D.\n             bal (dblock s' p) < mbal (disk s' d q) \\<and>\n             \\<not> hasRead s' p d q", "then"], ["proof (chain)\npicking this:\n  \\<exists>q\\<in>UNIV - {p}. bk \\<in> blocksOf s q", "obtain q where p23: \"q\\<in>UNIV-{p} \\<and> bk \\<in> blocksOf s q\""], ["proof (prove)\nusing this:\n  \\<exists>q\\<in>UNIV - {p}. bk \\<in> blocksOf s q\n\ngoal (1 subgoal):\n 1. (\\<And>q.\n        q \\<in> UNIV - {p} \\<and> bk \\<in> blocksOf s q \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  q \\<in> UNIV - {p} \\<and> bk \\<in> blocksOf s q\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>q.\n          \\<forall>d\\<in>D.\n             bal (dblock s' p) < mbal (disk s' d q) \\<and>\n             \\<not> hasRead s' p d q", "have \"\\<exists>D\\<in>MajoritySet.\\<forall>d\\<in>D. bal(dblock s' p) \\<le> mbal(disk s d q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<forall>d\\<in>D. bal (dblock s' p) \\<le> mbal (disk s d q)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<forall>d\\<in>D. bal (dblock s' p) \\<le> mbal (disk s d q)", "from p23 inv4"], ["proof (chain)\npicking this:\n  q \\<in> UNIV - {p} \\<and> bk \\<in> blocksOf s q\n  HInv4 s", "have i4d: \"\\<exists>D\\<in>MajoritySet.\\<forall>d\\<in>D. bal bk \\<le> mbal(disk s d q)\""], ["proof (prove)\nusing this:\n  q \\<in> UNIV - {p} \\<and> bk \\<in> blocksOf s q\n  HInv4 s\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<forall>d\\<in>D. bal bk \\<le> mbal (disk s d q)", "by(auto simp add: HInv4_def HInv4d_def)"], ["proof (state)\nthis:\n  \\<exists>D\\<in>MajoritySet.\n     \\<forall>d\\<in>D. bal bk \\<le> mbal (disk s d q)\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<forall>d\\<in>D. bal (dblock s' p) \\<le> mbal (disk s d q)", "from i4d p22"], ["proof (chain)\npicking this:\n  \\<exists>D\\<in>MajoritySet.\n     \\<forall>d\\<in>D. bal bk \\<le> mbal (disk s d q)\n  bk \\<in> allBlocks s \\<and>\n  bal (dblock s' p) \\<le> bal bk \\<and> bk \\<noteq> dblock s' p", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>D\\<in>MajoritySet.\n     \\<forall>d\\<in>D. bal bk \\<le> mbal (disk s d q)\n  bk \\<in> allBlocks s \\<and>\n  bal (dblock s' p) \\<le> bal bk \\<and> bk \\<noteq> dblock s' p\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<forall>d\\<in>D. bal (dblock s' p) \\<le> mbal (disk s d q)", "by force"], ["proof (state)\nthis:\n  \\<exists>D\\<in>MajoritySet.\n     \\<forall>d\\<in>D. bal (dblock s' p) \\<le> mbal (disk s d q)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>D\\<in>MajoritySet.\n     \\<forall>d\\<in>D. bal (dblock s' p) \\<le> mbal (disk s d q)\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>q.\n          \\<forall>d\\<in>D.\n             bal (dblock s' p) < mbal (disk s' d q) \\<and>\n             \\<not> hasRead s' p d q", "then"], ["proof (chain)\npicking this:\n  \\<exists>D\\<in>MajoritySet.\n     \\<forall>d\\<in>D. bal (dblock s' p) \\<le> mbal (disk s d q)", "obtain D where Dmaj: \"D\\<in>MajoritySet\" and p24:\"(\\<forall>d\\<in>D. bal(dblock s' p) \\<le> mbal(disk s d q))\""], ["proof (prove)\nusing this:\n  \\<exists>D\\<in>MajoritySet.\n     \\<forall>d\\<in>D. bal (dblock s' p) \\<le> mbal (disk s d q)\n\ngoal (1 subgoal):\n 1. (\\<And>D.\n        \\<lbrakk>D \\<in> MajoritySet;\n         \\<forall>d\\<in>D.\n            bal (dblock s' p) \\<le> mbal (disk s d q)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  D \\<in> MajoritySet\n  \\<forall>d\\<in>D. bal (dblock s' p) \\<le> mbal (disk s d q)\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>q.\n          \\<forall>d\\<in>D.\n             bal (dblock s' p) < mbal (disk s' d q) \\<and>\n             \\<not> hasRead s' p d q", "have p25: \"\\<forall>d\\<in>D. bal(dblock s' p) < mbal(disk s d q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>d\\<in>D. bal (dblock s' p) < mbal (disk s d q)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>d\\<in>D. bal (dblock s' p) < mbal (disk s d q)", "from inv2c"], ["proof (chain)\npicking this:\n  Inv2c s", "have \"Inv2c_inner s p\""], ["proof (prove)\nusing this:\n  Inv2c s\n\ngoal (1 subgoal):\n 1. Inv2c_inner s p", "by(auto simp add: Inv2c_def)"], ["proof (state)\nthis:\n  Inv2c_inner s p\n\ngoal (1 subgoal):\n 1. \\<forall>d\\<in>D. bal (dblock s' p) < mbal (disk s d q)", "with act"], ["proof (chain)\npicking this:\n  HEndPhase1 s s' p\n  Inv2c_inner s p", "have bal_pos: \"0 < bal(dblock s' p)\""], ["proof (prove)\nusing this:\n  HEndPhase1 s s' p\n  Inv2c_inner s p\n\ngoal (1 subgoal):\n 1. 0 < bal (dblock s' p)", "by(auto simp add: Inv2c_inner_def EndPhase1_def)"], ["proof (state)\nthis:\n  0 < bal (dblock s' p)\n\ngoal (1 subgoal):\n 1. \\<forall>d\\<in>D. bal (dblock s' p) < mbal (disk s d q)", "with inv2a'"], ["proof (chain)\npicking this:\n  Inv2a s'\n  0 < bal (dblock s' p)", "have \"bal(dblock s' p) \\<in> Ballot p \\<union> {0}\""], ["proof (prove)\nusing this:\n  Inv2a s'\n  0 < bal (dblock s' p)\n\ngoal (1 subgoal):\n 1. bal (dblock s' p) \\<in> Ballot p \\<union> {0}", "by(auto simp add: Inv2a_def Inv2a_inner_def \n                        Inv2a_innermost_def blocksOf_def)"], ["proof (state)\nthis:\n  bal (dblock s' p) \\<in> Ballot p \\<union> {0}\n\ngoal (1 subgoal):\n 1. \\<forall>d\\<in>D. bal (dblock s' p) < mbal (disk s d q)", "with bal_pos"], ["proof (chain)\npicking this:\n  0 < bal (dblock s' p)\n  bal (dblock s' p) \\<in> Ballot p \\<union> {0}", "have bal_in_p: \"bal(dblock s' p) \\<in> Ballot p\""], ["proof (prove)\nusing this:\n  0 < bal (dblock s' p)\n  bal (dblock s' p) \\<in> Ballot p \\<union> {0}\n\ngoal (1 subgoal):\n 1. bal (dblock s' p) \\<in> Ballot p", "by auto"], ["proof (state)\nthis:\n  bal (dblock s' p) \\<in> Ballot p\n\ngoal (1 subgoal):\n 1. \\<forall>d\\<in>D. bal (dblock s' p) < mbal (disk s d q)", "from inv2a"], ["proof (chain)\npicking this:\n  Inv2a s", "have \"Inv2a_inner s q\""], ["proof (prove)\nusing this:\n  Inv2a s\n\ngoal (1 subgoal):\n 1. Inv2a_inner s q", "by(auto simp add: Inv2a_def)"], ["proof (state)\nthis:\n  Inv2a_inner s q\n\ngoal (1 subgoal):\n 1. \\<forall>d\\<in>D. bal (dblock s' p) < mbal (disk s d q)", "hence \"\\<forall>d\\<in>D. mbal(disk s d q) \\<in> Ballot q \\<union> {0}\""], ["proof (prove)\nusing this:\n  Inv2a_inner s q\n\ngoal (1 subgoal):\n 1. \\<forall>d\\<in>D. mbal (disk s d q) \\<in> Ballot q \\<union> {0}", "by(auto simp add: Inv2a_inner_def Inv2a_innermost_def \n                        blocksOf_def)"], ["proof (state)\nthis:\n  \\<forall>d\\<in>D. mbal (disk s d q) \\<in> Ballot q \\<union> {0}\n\ngoal (1 subgoal):\n 1. \\<forall>d\\<in>D. bal (dblock s' p) < mbal (disk s d q)", "with p24 bal_pos"], ["proof (chain)\npicking this:\n  \\<forall>d\\<in>D. bal (dblock s' p) \\<le> mbal (disk s d q)\n  0 < bal (dblock s' p)\n  \\<forall>d\\<in>D. mbal (disk s d q) \\<in> Ballot q \\<union> {0}", "have \"\\<forall>d\\<in>D. mbal(disk s d q) \\<in> Ballot q\""], ["proof (prove)\nusing this:\n  \\<forall>d\\<in>D. bal (dblock s' p) \\<le> mbal (disk s d q)\n  0 < bal (dblock s' p)\n  \\<forall>d\\<in>D. mbal (disk s d q) \\<in> Ballot q \\<union> {0}\n\ngoal (1 subgoal):\n 1. \\<forall>d\\<in>D. mbal (disk s d q) \\<in> Ballot q", "by force"], ["proof (state)\nthis:\n  \\<forall>d\\<in>D. mbal (disk s d q) \\<in> Ballot q\n\ngoal (1 subgoal):\n 1. \\<forall>d\\<in>D. bal (dblock s' p) < mbal (disk s d q)", "with  Ballot_disj p23 bal_in_p"], ["proof (chain)\npicking this:\n  \\<forall>p q.\n     p \\<noteq> q \\<longrightarrow> Ballot p \\<inter> Ballot q = {}\n  q \\<in> UNIV - {p} \\<and> bk \\<in> blocksOf s q\n  bal (dblock s' p) \\<in> Ballot p\n  \\<forall>d\\<in>D. mbal (disk s d q) \\<in> Ballot q", "have \"\\<forall>d\\<in>D. mbal(disk s d q)\\<noteq> bal(dblock s' p)\""], ["proof (prove)\nusing this:\n  \\<forall>p q.\n     p \\<noteq> q \\<longrightarrow> Ballot p \\<inter> Ballot q = {}\n  q \\<in> UNIV - {p} \\<and> bk \\<in> blocksOf s q\n  bal (dblock s' p) \\<in> Ballot p\n  \\<forall>d\\<in>D. mbal (disk s d q) \\<in> Ballot q\n\ngoal (1 subgoal):\n 1. \\<forall>d\\<in>D. mbal (disk s d q) \\<noteq> bal (dblock s' p)", "by force"], ["proof (state)\nthis:\n  \\<forall>d\\<in>D. mbal (disk s d q) \\<noteq> bal (dblock s' p)\n\ngoal (1 subgoal):\n 1. \\<forall>d\\<in>D. bal (dblock s' p) < mbal (disk s d q)", "with p23 p24"], ["proof (chain)\npicking this:\n  q \\<in> UNIV - {p} \\<and> bk \\<in> blocksOf s q\n  \\<forall>d\\<in>D. bal (dblock s' p) \\<le> mbal (disk s d q)\n  \\<forall>d\\<in>D. mbal (disk s d q) \\<noteq> bal (dblock s' p)", "show ?thesis"], ["proof (prove)\nusing this:\n  q \\<in> UNIV - {p} \\<and> bk \\<in> blocksOf s q\n  \\<forall>d\\<in>D. bal (dblock s' p) \\<le> mbal (disk s d q)\n  \\<forall>d\\<in>D. mbal (disk s d q) \\<noteq> bal (dblock s' p)\n\ngoal (1 subgoal):\n 1. \\<forall>d\\<in>D. bal (dblock s' p) < mbal (disk s d q)", "by force"], ["proof (state)\nthis:\n  \\<forall>d\\<in>D. bal (dblock s' p) < mbal (disk s d q)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>d\\<in>D. bal (dblock s' p) < mbal (disk s d q)\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>q.\n          \\<forall>d\\<in>D.\n             bal (dblock s' p) < mbal (disk s' d q) \\<and>\n             \\<not> hasRead s' p d q", "with p23 act"], ["proof (chain)\npicking this:\n  q \\<in> UNIV - {p} \\<and> bk \\<in> blocksOf s q\n  HEndPhase1 s s' p\n  \\<forall>d\\<in>D. bal (dblock s' p) < mbal (disk s d q)", "have \"\\<forall>d\\<in>D. bal(dblock s' p) < mbal(disk s' d q) \\<and> \\<not>hasRead s' p d q\""], ["proof (prove)\nusing this:\n  q \\<in> UNIV - {p} \\<and> bk \\<in> blocksOf s q\n  HEndPhase1 s s' p\n  \\<forall>d\\<in>D. bal (dblock s' p) < mbal (disk s d q)\n\ngoal (1 subgoal):\n 1. \\<forall>d\\<in>D.\n       bal (dblock s' p) < mbal (disk s' d q) \\<and> \\<not> hasRead s' p d q", "by(auto simp add: EndPhase1_def InitializePhase_def hasRead_def)"], ["proof (state)\nthis:\n  \\<forall>d\\<in>D.\n     bal (dblock s' p) < mbal (disk s' d q) \\<and> \\<not> hasRead s' p d q\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>q.\n          \\<forall>d\\<in>D.\n             bal (dblock s' p) < mbal (disk s' d q) \\<and>\n             \\<not> hasRead s' p d q", "with Dmaj"], ["proof (chain)\npicking this:\n  D \\<in> MajoritySet\n  \\<forall>d\\<in>D.\n     bal (dblock s' p) < mbal (disk s' d q) \\<and> \\<not> hasRead s' p d q", "show ?thesis"], ["proof (prove)\nusing this:\n  D \\<in> MajoritySet\n  \\<forall>d\\<in>D.\n     bal (dblock s' p) < mbal (disk s' d q) \\<and> \\<not> hasRead s' p d q\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>q.\n          \\<forall>d\\<in>D.\n             bal (dblock s' p) < mbal (disk s' d q) \\<and>\n             \\<not> hasRead s' p d q", "by blast"], ["proof (state)\nthis:\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>q.\n        \\<forall>d\\<in>D.\n           bal (dblock s' p) < mbal (disk s' d q) \\<and>\n           \\<not> hasRead s' p d q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma union_inclusion:\n \"\\<lbrakk> A \\<subseteq> A'; B\\<subseteq> B' \\<rbrakk> \\<Longrightarrow> A\\<union>B \\<subseteq> A'\\<union>B'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<subseteq> A'; B \\<subseteq> B'\\<rbrakk>\n    \\<Longrightarrow> A \\<union> B \\<subseteq> A' \\<union> B'", "by blast"], ["", "lemma  HEndPhase1_blocksOf_q:\n  assumes act: \"HEndPhase1 s s' p\"\n  and pnq: \"p\\<noteq>q\"\n  shows \"blocksOf s' q \\<subseteq> blocksOf s q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. blocksOf s' q \\<subseteq> blocksOf s q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. blocksOf s' q \\<subseteq> blocksOf s q", "from act pnq"], ["proof (chain)\npicking this:\n  HEndPhase1 s s' p\n  p \\<noteq> q", "have dblock: \"{dblock s' q} \\<subseteq> {dblock s q}\"\n    and disk: \"disk s' = disk s\"\n    and blks: \"blocksRead s' q = blocksRead s q\""], ["proof (prove)\nusing this:\n  HEndPhase1 s s' p\n  p \\<noteq> q\n\ngoal (1 subgoal):\n 1. {dblock s' q} \\<subseteq> {dblock s q} &&&\n    disk s' = disk s &&& blocksRead s' q = blocksRead s q", "by(auto simp add: EndPhase1_def InitializePhase_def)"], ["proof (state)\nthis:\n  {dblock s' q} \\<subseteq> {dblock s q}\n  disk s' = disk s\n  blocksRead s' q = blocksRead s q\n\ngoal (1 subgoal):\n 1. blocksOf s' q \\<subseteq> blocksOf s q", "from disk"], ["proof (chain)\npicking this:\n  disk s' = disk s", "have disk': \"{disk s' d q | d . d\\<in> UNIV} \\<subseteq> {disk s d q | d . d\\<in> UNIV}\" (is \"?D' \\<subseteq> ?D\")"], ["proof (prove)\nusing this:\n  disk s' = disk s\n\ngoal (1 subgoal):\n 1. {disk s' d q |d. d \\<in> UNIV} \\<subseteq> {disk s d q |d. d \\<in> UNIV}", "by auto"], ["proof (state)\nthis:\n  {disk s' d q |d. d \\<in> UNIV} \\<subseteq> {disk s d q |d. d \\<in> UNIV}\n\ngoal (1 subgoal):\n 1. blocksOf s' q \\<subseteq> blocksOf s q", "from pnq act"], ["proof (chain)\npicking this:\n  p \\<noteq> q\n  HEndPhase1 s s' p", "have \"(UN qq d. rdBy s' q qq d) \\<subseteq> (UN qq d. rdBy s q qq d)\""], ["proof (prove)\nusing this:\n  p \\<noteq> q\n  HEndPhase1 s s' p\n\ngoal (1 subgoal):\n 1. (\\<Union>qq. \\<Union> (range (rdBy s' q qq)))\n    \\<subseteq> (\\<Union>qq. \\<Union> (range (rdBy s q qq)))", "by(auto simp add: EndPhase1_def InitializePhase_def rdBy_def split: if_split_asm, blast)"], ["proof (state)\nthis:\n  (\\<Union>qq. \\<Union> (range (rdBy s' q qq)))\n  \\<subseteq> (\\<Union>qq. \\<Union> (range (rdBy s q qq)))\n\ngoal (1 subgoal):\n 1. blocksOf s' q \\<subseteq> blocksOf s q", "hence \"{block br | br. br \\<in> (UN qq d. rdBy s' q qq d)} \\<subseteq> {block br | br. br \\<in> (UN qq d. rdBy s q qq d)}\" (is \"?R' \\<subseteq> ?R\")"], ["proof (prove)\nusing this:\n  (\\<Union>qq. \\<Union> (range (rdBy s' q qq)))\n  \\<subseteq> (\\<Union>qq. \\<Union> (range (rdBy s q qq)))\n\ngoal (1 subgoal):\n 1. {block br |br. br \\<in> (\\<Union>qq. \\<Union> (range (rdBy s' q qq)))}\n    \\<subseteq> {block br |br.\n                 br \\<in> (\\<Union>qq. \\<Union> (range (rdBy s q qq)))}", "by auto blast"], ["proof (state)\nthis:\n  {block br |br. br \\<in> (\\<Union>qq. \\<Union> (range (rdBy s' q qq)))}\n  \\<subseteq> {block br |br.\n               br \\<in> (\\<Union>qq. \\<Union> (range (rdBy s q qq)))}\n\ngoal (1 subgoal):\n 1. blocksOf s' q \\<subseteq> blocksOf s q", "from union_inclusion[OF dblock union_inclusion[OF disk' this]]"], ["proof (chain)\npicking this:\n  {dblock s' q} \\<union>\n  ({disk s' d q |d. d \\<in> UNIV} \\<union>\n   {block br |br. br \\<in> (\\<Union>qq. \\<Union> (range (rdBy s' q qq)))})\n  \\<subseteq> {dblock s q} \\<union>\n              ({disk s d q |d. d \\<in> UNIV} \\<union>\n               {block br |br.\n                br \\<in> (\\<Union>qq. \\<Union> (range (rdBy s q qq)))})", "show ?thesis"], ["proof (prove)\nusing this:\n  {dblock s' q} \\<union>\n  ({disk s' d q |d. d \\<in> UNIV} \\<union>\n   {block br |br. br \\<in> (\\<Union>qq. \\<Union> (range (rdBy s' q qq)))})\n  \\<subseteq> {dblock s q} \\<union>\n              ({disk s d q |d. d \\<in> UNIV} \\<union>\n               {block br |br.\n                br \\<in> (\\<Union>qq. \\<Union> (range (rdBy s q qq)))})\n\ngoal (1 subgoal):\n 1. blocksOf s' q \\<subseteq> blocksOf s q", "by(auto simp add: blocksOf_def)"], ["proof (state)\nthis:\n  blocksOf s' q \\<subseteq> blocksOf s q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HEndPhase1_allBlocks:\n  assumes act: \"HEndPhase1 s s' p\"\n  shows \"allBlocks s' \\<subseteq> allBlocks s \\<union> {dblock s' p}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. allBlocks s' \\<subseteq> allBlocks s \\<union> {dblock s' p}", "proof(auto simp del: HEndPhase1_def simp add: allBlocks_def\n           dest: HEndPhase1_blocksOf_q[OF act])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x pa.\n       \\<lbrakk>x \\<in> blocksOf s' pa;\n        \\<forall>xa. x \\<notin> blocksOf s xa\\<rbrakk>\n       \\<Longrightarrow> x = dblock s' p", "fix x pa"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x pa.\n       \\<lbrakk>x \\<in> blocksOf s' pa;\n        \\<forall>xa. x \\<notin> blocksOf s xa\\<rbrakk>\n       \\<Longrightarrow> x = dblock s' p", "assume x_pa: \"x \\<in> blocksOf s' pa\" and\n         x_nblks: \"\\<forall>xa. x \\<notin> blocksOf s xa\""], ["proof (state)\nthis:\n  x \\<in> blocksOf s' pa\n  \\<forall>xa. x \\<notin> blocksOf s xa\n\ngoal (1 subgoal):\n 1. \\<And>x pa.\n       \\<lbrakk>x \\<in> blocksOf s' pa;\n        \\<forall>xa. x \\<notin> blocksOf s xa\\<rbrakk>\n       \\<Longrightarrow> x = dblock s' p", "show \"x=dblock s' p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = dblock s' p", "proof(cases \"p=pa\")"], ["proof (state)\ngoal (2 subgoals):\n 1. p = pa \\<Longrightarrow> x = dblock s' p\n 2. p \\<noteq> pa \\<Longrightarrow> x = dblock s' p", "case True"], ["proof (state)\nthis:\n  p = pa\n\ngoal (2 subgoals):\n 1. p = pa \\<Longrightarrow> x = dblock s' p\n 2. p \\<noteq> pa \\<Longrightarrow> x = dblock s' p", "from x_nblks"], ["proof (chain)\npicking this:\n  \\<forall>xa. x \\<notin> blocksOf s xa", "have \"x \\<notin> blocksOf s p\""], ["proof (prove)\nusing this:\n  \\<forall>xa. x \\<notin> blocksOf s xa\n\ngoal (1 subgoal):\n 1. x \\<notin> blocksOf s p", "by auto"], ["proof (state)\nthis:\n  x \\<notin> blocksOf s p\n\ngoal (2 subgoals):\n 1. p = pa \\<Longrightarrow> x = dblock s' p\n 2. p \\<noteq> pa \\<Longrightarrow> x = dblock s' p", "with True subsetD[OF HEndPhase1_blocksOf[OF act] x_pa]"], ["proof (chain)\npicking this:\n  p = pa\n  x \\<in> blocksOf s pa \\<union> {dblock s' pa}\n  x \\<notin> blocksOf s p", "show ?thesis"], ["proof (prove)\nusing this:\n  p = pa\n  x \\<in> blocksOf s pa \\<union> {dblock s' pa}\n  x \\<notin> blocksOf s p\n\ngoal (1 subgoal):\n 1. x = dblock s' p", "by auto"], ["proof (state)\nthis:\n  x = dblock s' p\n\ngoal (1 subgoal):\n 1. p \\<noteq> pa \\<Longrightarrow> x = dblock s' p", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. p \\<noteq> pa \\<Longrightarrow> x = dblock s' p", "case False"], ["proof (state)\nthis:\n  p \\<noteq> pa\n\ngoal (1 subgoal):\n 1. p \\<noteq> pa \\<Longrightarrow> x = dblock s' p", "from x_nblks subsetD[OF HEndPhase1_blocksOf_q[OF act False] x_pa]"], ["proof (chain)\npicking this:\n  \\<forall>xa. x \\<notin> blocksOf s xa\n  x \\<in> blocksOf s pa", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>xa. x \\<notin> blocksOf s xa\n  x \\<in> blocksOf s pa\n\ngoal (1 subgoal):\n 1. x = dblock s' p", "by auto"], ["proof (state)\nthis:\n  x = dblock s' p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x = dblock s' p\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HEndPhase1_HInv5_q:\n  assumes act: \"HEndPhase1 s s' p\"\n  and inv: \"HInv5 s\"\n  and inv1: \"Inv1 s\"\n  and inv2a: \"Inv2a s'\"\n  and inv2a_q: \"Inv2a s\"\n  and inv2b: \"Inv2b s\"\n  and inv2c: \"Inv2c s\"\n  and inv3: \"HInv3 s\"\n  and phase': \"phase s' q = 2\"\n  and pnq: \"p\\<noteq>q\"\n  and asm4: \"\\<not>maxBalInp s' (bal(dblock s' q)) (inp(dblock s' q))\"\n  shows \"(\\<exists>D\\<in>MajoritySet. \\<exists>qq. (\\<forall>d\\<in>D.    bal(dblock s' q) < mbal(disk s' d qq)\n                                     \\<and> \\<not>hasRead s' q d qq))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n             \\<not> hasRead s' q d qq", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n             \\<not> hasRead s' q d qq", "from act pnq"], ["proof (chain)\npicking this:\n  HEndPhase1 s s' p\n  p \\<noteq> q", "have \"phase s' q = phase s q\"\n    and phase_p: \"phase s p = 1\"\n    and disk: \"disk s' = disk s\"\n    and dblock: \"dblock s' q = dblock s q\"\n    and bal: \"bal(dblock s' p) = mbal(dblock s p)\""], ["proof (prove)\nusing this:\n  HEndPhase1 s s' p\n  p \\<noteq> q\n\ngoal (1 subgoal):\n 1. (phase s' q = phase s q &&& phase s p = 1) &&&\n    disk s' = disk s &&&\n    dblock s' q = dblock s q &&& bal (dblock s' p) = mbal (dblock s p)", "by(auto simp add: EndPhase1_def InitializePhase_def)"], ["proof (state)\nthis:\n  phase s' q = phase s q\n  phase s p = 1\n  disk s' = disk s\n  dblock s' q = dblock s q\n  bal (dblock s' p) = mbal (dblock s p)\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n             \\<not> hasRead s' q d qq", "with phase'"], ["proof (chain)\npicking this:\n  phase s' q = 2\n  phase s' q = phase s q\n  phase s p = 1\n  disk s' = disk s\n  dblock s' q = dblock s q\n  bal (dblock s' p) = mbal (dblock s p)", "have phase: \"phase s q = 2\""], ["proof (prove)\nusing this:\n  phase s' q = 2\n  phase s' q = phase s q\n  phase s p = 1\n  disk s' = disk s\n  dblock s' q = dblock s q\n  bal (dblock s' p) = mbal (dblock s p)\n\ngoal (1 subgoal):\n 1. phase s q = 2", "by auto"], ["proof (state)\nthis:\n  phase s q = 2\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n             \\<not> hasRead s' q d qq", "from phase inv2c"], ["proof (chain)\npicking this:\n  phase s q = 2\n  Inv2c s", "have bal_dblk_q: \"bal(dblock s q) \\<in> Ballot q\""], ["proof (prove)\nusing this:\n  phase s q = 2\n  Inv2c s\n\ngoal (1 subgoal):\n 1. bal (dblock s q) \\<in> Ballot q", "by(auto simp add: Inv2c_def Inv2c_inner_def)"], ["proof (state)\nthis:\n  bal (dblock s q) \\<in> Ballot q\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n             \\<not> hasRead s' q d qq", "have \"\\<exists>D\\<in>MajoritySet. \\<exists>qq. (\\<forall>d\\<in>D.    bal(dblock s q) < mbal(disk s d qq)\n                                     \\<and> \\<not>hasRead s q d qq)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s q) < mbal (disk s d qq) \\<and>\n             \\<not> hasRead s q d qq", "proof(cases \"maxBalInp s (bal(dblock s q)) (inp(dblock s q))\")"], ["proof (state)\ngoal (2 subgoals):\n 1. maxBalInp s (bal (dblock s q)) (inp (dblock s q)) \\<Longrightarrow>\n    \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s q) < mbal (disk s d qq) \\<and>\n             \\<not> hasRead s q d qq\n 2. \\<not> maxBalInp s (bal (dblock s q))\n            (inp (dblock s q)) \\<Longrightarrow>\n    \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s q) < mbal (disk s d qq) \\<and>\n             \\<not> hasRead s q d qq", "case True"], ["proof (state)\nthis:\n  maxBalInp s (bal (dblock s q)) (inp (dblock s q))\n\ngoal (2 subgoals):\n 1. maxBalInp s (bal (dblock s q)) (inp (dblock s q)) \\<Longrightarrow>\n    \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s q) < mbal (disk s d qq) \\<and>\n             \\<not> hasRead s q d qq\n 2. \\<not> maxBalInp s (bal (dblock s q))\n            (inp (dblock s q)) \\<Longrightarrow>\n    \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s q) < mbal (disk s d qq) \\<and>\n             \\<not> hasRead s q d qq", "have p21: \"bal(dblock s q) < bal(dblock s' p) \\<and> inp(dblock s q) \\<noteq> inp(dblock s' p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bal (dblock s q) < bal (dblock s' p) \\<and>\n    inp (dblock s q) \\<noteq> inp (dblock s' p)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. bal (dblock s q) < bal (dblock s' p) \\<and>\n    inp (dblock s q) \\<noteq> inp (dblock s' p)", "from True asm4 dblock HEndPhase1_allBlocks[OF act]"], ["proof (chain)\npicking this:\n  maxBalInp s (bal (dblock s q)) (inp (dblock s q))\n  \\<not> maxBalInp s' (bal (dblock s' q)) (inp (dblock s' q))\n  dblock s' q = dblock s q\n  allBlocks s' \\<subseteq> allBlocks s \\<union> {dblock s' p}", "have p32: \"  bal(dblock s q)\\<le> bal(dblock s' p) \n                 \\<and> inp(dblock s q) \\<noteq> inp(dblock s' p)\""], ["proof (prove)\nusing this:\n  maxBalInp s (bal (dblock s q)) (inp (dblock s q))\n  \\<not> maxBalInp s' (bal (dblock s' q)) (inp (dblock s' q))\n  dblock s' q = dblock s q\n  allBlocks s' \\<subseteq> allBlocks s \\<union> {dblock s' p}\n\ngoal (1 subgoal):\n 1. bal (dblock s q) \\<le> bal (dblock s' p) \\<and>\n    inp (dblock s q) \\<noteq> inp (dblock s' p)", "by(auto simp add: maxBalInp_def)"], ["proof (state)\nthis:\n  bal (dblock s q) \\<le> bal (dblock s' p) \\<and>\n  inp (dblock s q) \\<noteq> inp (dblock s' p)\n\ngoal (1 subgoal):\n 1. bal (dblock s q) < bal (dblock s' p) \\<and>\n    inp (dblock s q) \\<noteq> inp (dblock s' p)", "from inv2a"], ["proof (chain)\npicking this:\n  Inv2a s'", "have \"bal(dblock s' p) \\<in> Ballot p \\<union> {0}\""], ["proof (prove)\nusing this:\n  Inv2a s'\n\ngoal (1 subgoal):\n 1. bal (dblock s' p) \\<in> Ballot p \\<union> {0}", "by(auto simp add: Inv2a_def Inv2a_inner_def \n                          Inv2a_innermost_def blocksOf_def)"], ["proof (state)\nthis:\n  bal (dblock s' p) \\<in> Ballot p \\<union> {0}\n\ngoal (1 subgoal):\n 1. bal (dblock s q) < bal (dblock s' p) \\<and>\n    inp (dblock s q) \\<noteq> inp (dblock s' p)", "moreover"], ["proof (state)\nthis:\n  bal (dblock s' p) \\<in> Ballot p \\<union> {0}\n\ngoal (1 subgoal):\n 1. bal (dblock s q) < bal (dblock s' p) \\<and>\n    inp (dblock s q) \\<noteq> inp (dblock s' p)", "from Ballot_disj Ballot_nzero pnq"], ["proof (chain)\npicking this:\n  \\<forall>p q.\n     p \\<noteq> q \\<longrightarrow> Ballot p \\<inter> Ballot q = {}\n  \\<forall>p. 0 \\<notin> Ballot p\n  p \\<noteq> q", "have \"Ballot q \\<inter> (Ballot p \\<union> {0}) = {}\""], ["proof (prove)\nusing this:\n  \\<forall>p q.\n     p \\<noteq> q \\<longrightarrow> Ballot p \\<inter> Ballot q = {}\n  \\<forall>p. 0 \\<notin> Ballot p\n  p \\<noteq> q\n\ngoal (1 subgoal):\n 1. Ballot q \\<inter> (Ballot p \\<union> {0}) = {}", "by auto"], ["proof (state)\nthis:\n  Ballot q \\<inter> (Ballot p \\<union> {0}) = {}\n\ngoal (1 subgoal):\n 1. bal (dblock s q) < bal (dblock s' p) \\<and>\n    inp (dblock s q) \\<noteq> inp (dblock s' p)", "ultimately"], ["proof (chain)\npicking this:\n  bal (dblock s' p) \\<in> Ballot p \\<union> {0}\n  Ballot q \\<inter> (Ballot p \\<union> {0}) = {}", "have \"bal(dblock s' p) \\<noteq> bal(dblock s q)\""], ["proof (prove)\nusing this:\n  bal (dblock s' p) \\<in> Ballot p \\<union> {0}\n  Ballot q \\<inter> (Ballot p \\<union> {0}) = {}\n\ngoal (1 subgoal):\n 1. bal (dblock s' p) \\<noteq> bal (dblock s q)", "using bal_dblk_q"], ["proof (prove)\nusing this:\n  bal (dblock s' p) \\<in> Ballot p \\<union> {0}\n  Ballot q \\<inter> (Ballot p \\<union> {0}) = {}\n  bal (dblock s q) \\<in> Ballot q\n\ngoal (1 subgoal):\n 1. bal (dblock s' p) \\<noteq> bal (dblock s q)", "by auto"], ["proof (state)\nthis:\n  bal (dblock s' p) \\<noteq> bal (dblock s q)\n\ngoal (1 subgoal):\n 1. bal (dblock s q) < bal (dblock s' p) \\<and>\n    inp (dblock s q) \\<noteq> inp (dblock s' p)", "with p32"], ["proof (chain)\npicking this:\n  bal (dblock s q) \\<le> bal (dblock s' p) \\<and>\n  inp (dblock s q) \\<noteq> inp (dblock s' p)\n  bal (dblock s' p) \\<noteq> bal (dblock s q)", "show ?thesis"], ["proof (prove)\nusing this:\n  bal (dblock s q) \\<le> bal (dblock s' p) \\<and>\n  inp (dblock s q) \\<noteq> inp (dblock s' p)\n  bal (dblock s' p) \\<noteq> bal (dblock s q)\n\ngoal (1 subgoal):\n 1. bal (dblock s q) < bal (dblock s' p) \\<and>\n    inp (dblock s q) \\<noteq> inp (dblock s' p)", "by auto"], ["proof (state)\nthis:\n  bal (dblock s q) < bal (dblock s' p) \\<and>\n  inp (dblock s q) \\<noteq> inp (dblock s' p)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  bal (dblock s q) < bal (dblock s' p) \\<and>\n  inp (dblock s q) \\<noteq> inp (dblock s' p)\n\ngoal (2 subgoals):\n 1. maxBalInp s (bal (dblock s q)) (inp (dblock s q)) \\<Longrightarrow>\n    \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s q) < mbal (disk s d qq) \\<and>\n             \\<not> hasRead s q d qq\n 2. \\<not> maxBalInp s (bal (dblock s q))\n            (inp (dblock s q)) \\<Longrightarrow>\n    \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s q) < mbal (disk s d qq) \\<and>\n             \\<not> hasRead s q d qq", "have \"\\<exists>D\\<in>MajoritySet.\\<forall>d\\<in>D. bal(dblock s q) < mbal(disk s d p) \\<and> hasRead s p d q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<forall>d\\<in>D.\n          bal (dblock s q) < mbal (disk s d p) \\<and> hasRead s p d q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<forall>d\\<in>D.\n          bal (dblock s q) < mbal (disk s d p) \\<and> hasRead s p d q", "from  act"], ["proof (chain)\npicking this:\n  HEndPhase1 s s' p", "have \"\\<exists>D\\<in>MajoritySet.\\<forall>d\\<in>D. d\\<in>disksWritten s p \\<and> (\\<forall>q\\<in>UNIV-{p}. hasRead s p d q)\""], ["proof (prove)\nusing this:\n  HEndPhase1 s s' p\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<forall>d\\<in>D.\n          d \\<in> disksWritten s p \\<and>\n          (\\<forall>q\\<in>UNIV - {p}. hasRead s p d q)", "by(auto simp add: EndPhase1_def MajoritySet_def)"], ["proof (state)\nthis:\n  \\<exists>D\\<in>MajoritySet.\n     \\<forall>d\\<in>D.\n        d \\<in> disksWritten s p \\<and>\n        (\\<forall>q\\<in>UNIV - {p}. hasRead s p d q)\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<forall>d\\<in>D.\n          bal (dblock s q) < mbal (disk s d p) \\<and> hasRead s p d q", "then"], ["proof (chain)\npicking this:\n  \\<exists>D\\<in>MajoritySet.\n     \\<forall>d\\<in>D.\n        d \\<in> disksWritten s p \\<and>\n        (\\<forall>q\\<in>UNIV - {p}. hasRead s p d q)", "obtain D\n        where act1: \"\\<forall>d\\<in>D. d\\<in>disksWritten s p \\<and> (\\<forall>q\\<in>UNIV-{p}. hasRead s p d q)\"\n        and Dmaj: \"D\\<in>MajoritySet\""], ["proof (prove)\nusing this:\n  \\<exists>D\\<in>MajoritySet.\n     \\<forall>d\\<in>D.\n        d \\<in> disksWritten s p \\<and>\n        (\\<forall>q\\<in>UNIV - {p}. hasRead s p d q)\n\ngoal (1 subgoal):\n 1. (\\<And>D.\n        \\<lbrakk>\\<forall>d\\<in>D.\n                    d \\<in> disksWritten s p \\<and>\n                    (\\<forall>q\\<in>UNIV - {p}. hasRead s p d q);\n         D \\<in> MajoritySet\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<forall>d\\<in>D.\n     d \\<in> disksWritten s p \\<and>\n     (\\<forall>q\\<in>UNIV - {p}. hasRead s p d q)\n  D \\<in> MajoritySet\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<forall>d\\<in>D.\n          bal (dblock s q) < mbal (disk s d p) \\<and> hasRead s p d q", "from inv2b"], ["proof (chain)\npicking this:\n  Inv2b s", "have \"\\<forall>d. Inv2b_inner s p d\""], ["proof (prove)\nusing this:\n  Inv2b s\n\ngoal (1 subgoal):\n 1. \\<forall>d. Inv2b_inner s p d", "by(auto simp add: Inv2b_def)"], ["proof (state)\nthis:\n  \\<forall>d. Inv2b_inner s p d\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<forall>d\\<in>D.\n          bal (dblock s q) < mbal (disk s d p) \\<and> hasRead s p d q", "with act1 pnq phase_p bal"], ["proof (chain)\npicking this:\n  \\<forall>d\\<in>D.\n     d \\<in> disksWritten s p \\<and>\n     (\\<forall>q\\<in>UNIV - {p}. hasRead s p d q)\n  p \\<noteq> q\n  phase s p = 1\n  bal (dblock s' p) = mbal (dblock s p)\n  \\<forall>d. Inv2b_inner s p d", "have \"\\<forall>d\\<in>D. bal(dblock s' p)= mbal(disk s d p) \\<and> hasRead s p d q\""], ["proof (prove)\nusing this:\n  \\<forall>d\\<in>D.\n     d \\<in> disksWritten s p \\<and>\n     (\\<forall>q\\<in>UNIV - {p}. hasRead s p d q)\n  p \\<noteq> q\n  phase s p = 1\n  bal (dblock s' p) = mbal (dblock s p)\n  \\<forall>d. Inv2b_inner s p d\n\ngoal (1 subgoal):\n 1. \\<forall>d\\<in>D.\n       bal (dblock s' p) = mbal (disk s d p) \\<and> hasRead s p d q", "by(auto simp add: Inv2b_def Inv2b_inner_def)"], ["proof (state)\nthis:\n  \\<forall>d\\<in>D.\n     bal (dblock s' p) = mbal (disk s d p) \\<and> hasRead s p d q\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<forall>d\\<in>D.\n          bal (dblock s q) < mbal (disk s d p) \\<and> hasRead s p d q", "with p21 Dmaj"], ["proof (chain)\npicking this:\n  bal (dblock s q) < bal (dblock s' p) \\<and>\n  inp (dblock s q) \\<noteq> inp (dblock s' p)\n  D \\<in> MajoritySet\n  \\<forall>d\\<in>D.\n     bal (dblock s' p) = mbal (disk s d p) \\<and> hasRead s p d q", "have \"\\<forall>d\\<in>D. bal(dblock s q)< mbal(disk s d p) \\<and> hasRead s p d q\""], ["proof (prove)\nusing this:\n  bal (dblock s q) < bal (dblock s' p) \\<and>\n  inp (dblock s q) \\<noteq> inp (dblock s' p)\n  D \\<in> MajoritySet\n  \\<forall>d\\<in>D.\n     bal (dblock s' p) = mbal (disk s d p) \\<and> hasRead s p d q\n\ngoal (1 subgoal):\n 1. \\<forall>d\\<in>D.\n       bal (dblock s q) < mbal (disk s d p) \\<and> hasRead s p d q", "by auto"], ["proof (state)\nthis:\n  \\<forall>d\\<in>D.\n     bal (dblock s q) < mbal (disk s d p) \\<and> hasRead s p d q\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<forall>d\\<in>D.\n          bal (dblock s q) < mbal (disk s d p) \\<and> hasRead s p d q", "with Dmaj"], ["proof (chain)\npicking this:\n  D \\<in> MajoritySet\n  \\<forall>d\\<in>D.\n     bal (dblock s q) < mbal (disk s d p) \\<and> hasRead s p d q", "show ?thesis"], ["proof (prove)\nusing this:\n  D \\<in> MajoritySet\n  \\<forall>d\\<in>D.\n     bal (dblock s q) < mbal (disk s d p) \\<and> hasRead s p d q\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<forall>d\\<in>D.\n          bal (dblock s q) < mbal (disk s d p) \\<and> hasRead s p d q", "by auto"], ["proof (state)\nthis:\n  \\<exists>D\\<in>MajoritySet.\n     \\<forall>d\\<in>D.\n        bal (dblock s q) < mbal (disk s d p) \\<and> hasRead s p d q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>D\\<in>MajoritySet.\n     \\<forall>d\\<in>D.\n        bal (dblock s q) < mbal (disk s d p) \\<and> hasRead s p d q\n\ngoal (2 subgoals):\n 1. maxBalInp s (bal (dblock s q)) (inp (dblock s q)) \\<Longrightarrow>\n    \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s q) < mbal (disk s d qq) \\<and>\n             \\<not> hasRead s q d qq\n 2. \\<not> maxBalInp s (bal (dblock s q))\n            (inp (dblock s q)) \\<Longrightarrow>\n    \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s q) < mbal (disk s d qq) \\<and>\n             \\<not> hasRead s q d qq", "then"], ["proof (chain)\npicking this:\n  \\<exists>D\\<in>MajoritySet.\n     \\<forall>d\\<in>D.\n        bal (dblock s q) < mbal (disk s d p) \\<and> hasRead s p d q", "obtain D\n      where p22: \"D\\<in>MajoritySet \\<and> (\\<forall>d\\<in>D. bal(dblock s q) < mbal(disk s d p) \\<and> hasRead s p d q)\""], ["proof (prove)\nusing this:\n  \\<exists>D\\<in>MajoritySet.\n     \\<forall>d\\<in>D.\n        bal (dblock s q) < mbal (disk s d p) \\<and> hasRead s p d q\n\ngoal (1 subgoal):\n 1. (\\<And>D.\n        D \\<in> MajoritySet \\<and>\n        (\\<forall>d\\<in>D.\n            bal (dblock s q) < mbal (disk s d p) \\<and>\n            hasRead s p d q) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  D \\<in> MajoritySet \\<and>\n  (\\<forall>d\\<in>D.\n      bal (dblock s q) < mbal (disk s d p) \\<and> hasRead s p d q)\n\ngoal (2 subgoals):\n 1. maxBalInp s (bal (dblock s q)) (inp (dblock s q)) \\<Longrightarrow>\n    \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s q) < mbal (disk s d qq) \\<and>\n             \\<not> hasRead s q d qq\n 2. \\<not> maxBalInp s (bal (dblock s q))\n            (inp (dblock s q)) \\<Longrightarrow>\n    \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s q) < mbal (disk s d qq) \\<and>\n             \\<not> hasRead s q d qq", "have p23: \"\\<forall>d\\<in>D.\\<lparr>block=dblock s q, proc=q\\<rparr> \\<notin> blocksRead s p d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>d\\<in>D.\n       \\<lparr>block = dblock s q, proc = q\\<rparr>\n       \\<notin> blocksRead s p d", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>d\\<in>D.\n       \\<lparr>block = dblock s q, proc = q\\<rparr>\n       \\<notin> blocksRead s p d", "have \"dblock s q \\<in> allBlocksRead s p \\<longrightarrow> inp(dblock s' p) = inp(dblock s q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dblock s q \\<in> allBlocksRead s p \\<longrightarrow>\n    inp (dblock s' p) = inp (dblock s q)", "proof auto"], ["proof (state)\ngoal (1 subgoal):\n 1. dblock s q \\<in> allBlocksRead s p \\<Longrightarrow>\n    inp (dblock s' p) = inp (dblock s q)", "assume dblock_q: \"dblock s q \\<in> allBlocksRead s p\""], ["proof (state)\nthis:\n  dblock s q \\<in> allBlocksRead s p\n\ngoal (1 subgoal):\n 1. dblock s q \\<in> allBlocksRead s p \\<Longrightarrow>\n    inp (dblock s' p) = inp (dblock s q)", "from inv2a_q"], ["proof (chain)\npicking this:\n  Inv2a s", "have \"(bal(dblock s q)=0) = (inp (dblock s q) = NotAnInput)\""], ["proof (prove)\nusing this:\n  Inv2a s\n\ngoal (1 subgoal):\n 1. (bal (dblock s q) = 0) = (inp (dblock s q) = NotAnInput)", "by(auto simp add: Inv2a_def Inv2a_inner_def \n                            blocksOf_def Inv2a_innermost_def)"], ["proof (state)\nthis:\n  (bal (dblock s q) = 0) = (inp (dblock s q) = NotAnInput)\n\ngoal (1 subgoal):\n 1. dblock s q \\<in> allBlocksRead s p \\<Longrightarrow>\n    inp (dblock s' p) = inp (dblock s q)", "with bal_dblk_q Ballot_nzero dblock_q InputsOrNi"], ["proof (chain)\npicking this:\n  bal (dblock s q) \\<in> Ballot q\n  \\<forall>p. 0 \\<notin> Ballot p\n  dblock s q \\<in> allBlocksRead s p\n  UNIV = Inputs \\<union> {NotAnInput}\n  (bal (dblock s q) = 0) = (inp (dblock s q) = NotAnInput)", "have dblock_q_nib: \"dblock s q \\<in> nonInitBlks s p\""], ["proof (prove)\nusing this:\n  bal (dblock s q) \\<in> Ballot q\n  \\<forall>p. 0 \\<notin> Ballot p\n  dblock s q \\<in> allBlocksRead s p\n  UNIV = Inputs \\<union> {NotAnInput}\n  (bal (dblock s q) = 0) = (inp (dblock s q) = NotAnInput)\n\ngoal (1 subgoal):\n 1. dblock s q \\<in> nonInitBlks s p", "by(auto simp add: nonInitBlks_def blocksSeen_def)"], ["proof (state)\nthis:\n  dblock s q \\<in> nonInitBlks s p\n\ngoal (1 subgoal):\n 1. dblock s q \\<in> allBlocksRead s p \\<Longrightarrow>\n    inp (dblock s' p) = inp (dblock s q)", "with act"], ["proof (chain)\npicking this:\n  HEndPhase1 s s' p\n  dblock s q \\<in> nonInitBlks s p", "have dblock_max: \"inp(dblock s' p)=inp(maxBlk s p)\""], ["proof (prove)\nusing this:\n  HEndPhase1 s s' p\n  dblock s q \\<in> nonInitBlks s p\n\ngoal (1 subgoal):\n 1. inp (dblock s' p) = inp (maxBlk s p)", "by(auto simp add: EndPhase1_def)"], ["proof (state)\nthis:\n  inp (dblock s' p) = inp (maxBlk s p)\n\ngoal (1 subgoal):\n 1. dblock s q \\<in> allBlocksRead s p \\<Longrightarrow>\n    inp (dblock s' p) = inp (dblock s q)", "from maxBlk_in_nonInitBlks[OF dblock_q_nib inv1]"], ["proof (chain)\npicking this:\n  maxBlk s p \\<in> nonInitBlks s p \\<and>\n  (\\<forall>c\\<in>nonInitBlks s p. bal c \\<le> bal (maxBlk s p))", "have max_in_nib: \"maxBlk s p \\<in> nonInitBlks s p\""], ["proof (prove)\nusing this:\n  maxBlk s p \\<in> nonInitBlks s p \\<and>\n  (\\<forall>c\\<in>nonInitBlks s p. bal c \\<le> bal (maxBlk s p))\n\ngoal (1 subgoal):\n 1. maxBlk s p \\<in> nonInitBlks s p", ".."], ["proof (state)\nthis:\n  maxBlk s p \\<in> nonInitBlks s p\n\ngoal (1 subgoal):\n 1. dblock s q \\<in> allBlocksRead s p \\<Longrightarrow>\n    inp (dblock s' p) = inp (dblock s q)", "hence \"nonInitBlks s p \\<subseteq> allBlocks s\""], ["proof (prove)\nusing this:\n  maxBlk s p \\<in> nonInitBlks s p\n\ngoal (1 subgoal):\n 1. nonInitBlks s p \\<subseteq> allBlocks s", "by(auto simp add: allBlocks_def nonInitBlks_def \n                            blocksSeen_def blocksOf_def rdBy_def \n                            allBlocksRead_def allRdBlks_def)"], ["proof (state)\nthis:\n  nonInitBlks s p \\<subseteq> allBlocks s\n\ngoal (1 subgoal):\n 1. dblock s q \\<in> allBlocksRead s p \\<Longrightarrow>\n    inp (dblock s' p) = inp (dblock s q)", "with True subsetD[OF this max_in_nib]"], ["proof (chain)\npicking this:\n  maxBalInp s (bal (dblock s q)) (inp (dblock s q))\n  maxBlk s p \\<in> allBlocks s\n  nonInitBlks s p \\<subseteq> allBlocks s", "have \"bal (dblock s q) \\<le> bal (maxBlk s p) \\<longrightarrow> inp (maxBlk s p) = inp (dblock s q)\""], ["proof (prove)\nusing this:\n  maxBalInp s (bal (dblock s q)) (inp (dblock s q))\n  maxBlk s p \\<in> allBlocks s\n  nonInitBlks s p \\<subseteq> allBlocks s\n\ngoal (1 subgoal):\n 1. bal (dblock s q) \\<le> bal (maxBlk s p) \\<longrightarrow>\n    inp (maxBlk s p) = inp (dblock s q)", "by(auto simp add: maxBalInp_def)"], ["proof (state)\nthis:\n  bal (dblock s q) \\<le> bal (maxBlk s p) \\<longrightarrow>\n  inp (maxBlk s p) = inp (dblock s q)\n\ngoal (1 subgoal):\n 1. dblock s q \\<in> allBlocksRead s p \\<Longrightarrow>\n    inp (dblock s' p) = inp (dblock s q)", "with maxBlk_in_nonInitBlks[OF dblock_q_nib inv1] \n             dblock_q_nib dblock_max"], ["proof (chain)\npicking this:\n  maxBlk s p \\<in> nonInitBlks s p \\<and>\n  (\\<forall>c\\<in>nonInitBlks s p. bal c \\<le> bal (maxBlk s p))\n  dblock s q \\<in> nonInitBlks s p\n  inp (dblock s' p) = inp (maxBlk s p)\n  bal (dblock s q) \\<le> bal (maxBlk s p) \\<longrightarrow>\n  inp (maxBlk s p) = inp (dblock s q)", "show \"inp(dblock s' p) = inp(dblock s q)\""], ["proof (prove)\nusing this:\n  maxBlk s p \\<in> nonInitBlks s p \\<and>\n  (\\<forall>c\\<in>nonInitBlks s p. bal c \\<le> bal (maxBlk s p))\n  dblock s q \\<in> nonInitBlks s p\n  inp (dblock s' p) = inp (maxBlk s p)\n  bal (dblock s q) \\<le> bal (maxBlk s p) \\<longrightarrow>\n  inp (maxBlk s p) = inp (dblock s q)\n\ngoal (1 subgoal):\n 1. inp (dblock s' p) = inp (dblock s q)", "by auto"], ["proof (state)\nthis:\n  inp (dblock s' p) = inp (dblock s q)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  dblock s q \\<in> allBlocksRead s p \\<longrightarrow>\n  inp (dblock s' p) = inp (dblock s q)\n\ngoal (1 subgoal):\n 1. \\<forall>d\\<in>D.\n       \\<lparr>block = dblock s q, proc = q\\<rparr>\n       \\<notin> blocksRead s p d", "with p21"], ["proof (chain)\npicking this:\n  bal (dblock s q) < bal (dblock s' p) \\<and>\n  inp (dblock s q) \\<noteq> inp (dblock s' p)\n  dblock s q \\<in> allBlocksRead s p \\<longrightarrow>\n  inp (dblock s' p) = inp (dblock s q)", "have \"dblock s q \\<notin> block ` allRdBlks s p\""], ["proof (prove)\nusing this:\n  bal (dblock s q) < bal (dblock s' p) \\<and>\n  inp (dblock s q) \\<noteq> inp (dblock s' p)\n  dblock s q \\<in> allBlocksRead s p \\<longrightarrow>\n  inp (dblock s' p) = inp (dblock s q)\n\ngoal (1 subgoal):\n 1. dblock s q \\<notin> block ` allRdBlks s p", "by(auto simp add: allBlocksRead_def)"], ["proof (state)\nthis:\n  dblock s q \\<notin> block ` allRdBlks s p\n\ngoal (1 subgoal):\n 1. \\<forall>d\\<in>D.\n       \\<lparr>block = dblock s q, proc = q\\<rparr>\n       \\<notin> blocksRead s p d", "hence \"\\<forall>d. dblock s q \\<notin> block ` blocksRead s p d\""], ["proof (prove)\nusing this:\n  dblock s q \\<notin> block ` allRdBlks s p\n\ngoal (1 subgoal):\n 1. \\<forall>d. dblock s q \\<notin> block ` blocksRead s p d", "by(auto simp add: allRdBlks_def)"], ["proof (state)\nthis:\n  \\<forall>d. dblock s q \\<notin> block ` blocksRead s p d\n\ngoal (1 subgoal):\n 1. \\<forall>d\\<in>D.\n       \\<lparr>block = dblock s q, proc = q\\<rparr>\n       \\<notin> blocksRead s p d", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>d. dblock s q \\<notin> block ` blocksRead s p d\n\ngoal (1 subgoal):\n 1. \\<forall>d\\<in>D.\n       \\<lparr>block = dblock s q, proc = q\\<rparr>\n       \\<notin> blocksRead s p d", "by force"], ["proof (state)\nthis:\n  \\<forall>d\\<in>D.\n     \\<lparr>block = dblock s q, proc = q\\<rparr> \\<notin> blocksRead s p d\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>d\\<in>D.\n     \\<lparr>block = dblock s q, proc = q\\<rparr> \\<notin> blocksRead s p d\n\ngoal (2 subgoals):\n 1. maxBalInp s (bal (dblock s q)) (inp (dblock s q)) \\<Longrightarrow>\n    \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s q) < mbal (disk s d qq) \\<and>\n             \\<not> hasRead s q d qq\n 2. \\<not> maxBalInp s (bal (dblock s q))\n            (inp (dblock s q)) \\<Longrightarrow>\n    \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s q) < mbal (disk s d qq) \\<and>\n             \\<not> hasRead s q d qq", "have p24: \"\\<forall>d\\<in>D. \\<not> (\\<exists>br\\<in> blocksRead s q d. bal(dblock s q) \\<le> mbal (block br))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>d\\<in>D.\n       \\<not> (\\<exists>br\\<in>blocksRead s q d.\n                  bal (dblock s q) \\<le> mbal (block br))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>d\\<in>D.\n       \\<not> (\\<exists>br\\<in>blocksRead s q d.\n                  bal (dblock s q) \\<le> mbal (block br))", "from inv2c phase"], ["proof (chain)\npicking this:\n  Inv2c s\n  phase s q = 2", "have \"\\<forall>d. \\<forall>br\\<in>blocksRead s q d. mbal(block br)<mbal(dblock s q)\"\n        and \"bal(dblock s q) = mbal(dblock s q)\""], ["proof (prove)\nusing this:\n  Inv2c s\n  phase s q = 2\n\ngoal (1 subgoal):\n 1. \\<forall>d.\n       \\<forall>br\\<in>blocksRead s q d.\n          mbal (block br) < mbal (dblock s q) &&&\n    bal (dblock s q) = mbal (dblock s q)", "by(auto simp add: Inv2c_def Inv2c_inner_def)"], ["proof (state)\nthis:\n  \\<forall>d.\n     \\<forall>br\\<in>blocksRead s q d. mbal (block br) < mbal (dblock s q)\n  bal (dblock s q) = mbal (dblock s q)\n\ngoal (1 subgoal):\n 1. \\<forall>d\\<in>D.\n       \\<not> (\\<exists>br\\<in>blocksRead s q d.\n                  bal (dblock s q) \\<le> mbal (block br))", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>d.\n     \\<forall>br\\<in>blocksRead s q d. mbal (block br) < mbal (dblock s q)\n  bal (dblock s q) = mbal (dblock s q)\n\ngoal (1 subgoal):\n 1. \\<forall>d\\<in>D.\n       \\<not> (\\<exists>br\\<in>blocksRead s q d.\n                  bal (dblock s q) \\<le> mbal (block br))", "by force"], ["proof (state)\nthis:\n  \\<forall>d\\<in>D.\n     \\<not> (\\<exists>br\\<in>blocksRead s q d.\n                bal (dblock s q) \\<le> mbal (block br))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>d\\<in>D.\n     \\<not> (\\<exists>br\\<in>blocksRead s q d.\n                bal (dblock s q) \\<le> mbal (block br))\n\ngoal (2 subgoals):\n 1. maxBalInp s (bal (dblock s q)) (inp (dblock s q)) \\<Longrightarrow>\n    \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s q) < mbal (disk s d qq) \\<and>\n             \\<not> hasRead s q d qq\n 2. \\<not> maxBalInp s (bal (dblock s q))\n            (inp (dblock s q)) \\<Longrightarrow>\n    \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s q) < mbal (disk s d qq) \\<and>\n             \\<not> hasRead s q d qq", "have p25: \"\\<forall>d\\<in>D. \\<not>hasRead s q d p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>d\\<in>D. \\<not> hasRead s q d p", "proof auto"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>d.\n       \\<lbrakk>d \\<in> D; hasRead s q d p\\<rbrakk> \\<Longrightarrow> False", "fix d"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>d.\n       \\<lbrakk>d \\<in> D; hasRead s q d p\\<rbrakk> \\<Longrightarrow> False", "assume  d_in_D: \"d \\<in> D\" \n        and hasRead_qdp: \"hasRead s q d p\""], ["proof (state)\nthis:\n  d \\<in> D\n  hasRead s q d p\n\ngoal (1 subgoal):\n 1. \\<And>d.\n       \\<lbrakk>d \\<in> D; hasRead s q d p\\<rbrakk> \\<Longrightarrow> False", "have p31: \"\\<lparr>block=dblock s p, proc=p\\<rparr>\\<in>blocksRead s q d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lparr>block = dblock s p, proc = p\\<rparr> \\<in> blocksRead s q d", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lparr>block = dblock s p, proc = p\\<rparr> \\<in> blocksRead s q d", "from \"d_in_D\" p22"], ["proof (chain)\npicking this:\n  d \\<in> D\n  D \\<in> MajoritySet \\<and>\n  (\\<forall>d\\<in>D.\n      bal (dblock s q) < mbal (disk s d p) \\<and> hasRead s p d q)", "have hasRead_pdq: \"hasRead s p d q\""], ["proof (prove)\nusing this:\n  d \\<in> D\n  D \\<in> MajoritySet \\<and>\n  (\\<forall>d\\<in>D.\n      bal (dblock s q) < mbal (disk s d p) \\<and> hasRead s p d q)\n\ngoal (1 subgoal):\n 1. hasRead s p d q", "by auto"], ["proof (state)\nthis:\n  hasRead s p d q\n\ngoal (1 subgoal):\n 1. \\<lparr>block = dblock s p, proc = p\\<rparr> \\<in> blocksRead s q d", "with hasRead_qdp phase phase_p inv3"], ["proof (chain)\npicking this:\n  hasRead s q d p\n  phase s q = 2\n  phase s p = 1\n  HInv3 s\n  hasRead s p d q", "have \"HInv3_R s q p d\""], ["proof (prove)\nusing this:\n  hasRead s q d p\n  phase s q = 2\n  phase s p = 1\n  HInv3 s\n  hasRead s p d q\n\ngoal (1 subgoal):\n 1. HInv3_R s q p d", "by(auto simp add: HInv3_def HInv3_inner_def HInv3_L_def)"], ["proof (state)\nthis:\n  HInv3_R s q p d\n\ngoal (1 subgoal):\n 1. \\<lparr>block = dblock s p, proc = p\\<rparr> \\<in> blocksRead s q d", "with p23 d_in_D"], ["proof (chain)\npicking this:\n  \\<forall>d\\<in>D.\n     \\<lparr>block = dblock s q, proc = q\\<rparr> \\<notin> blocksRead s p d\n  d \\<in> D\n  HInv3_R s q p d", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>d\\<in>D.\n     \\<lparr>block = dblock s q, proc = q\\<rparr> \\<notin> blocksRead s p d\n  d \\<in> D\n  HInv3_R s q p d\n\ngoal (1 subgoal):\n 1. \\<lparr>block = dblock s p, proc = p\\<rparr> \\<in> blocksRead s q d", "by(auto simp add: HInv3_R_def)"], ["proof (state)\nthis:\n  \\<lparr>block = dblock s p, proc = p\\<rparr> \\<in> blocksRead s q d\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lparr>block = dblock s p, proc = p\\<rparr> \\<in> blocksRead s q d\n\ngoal (1 subgoal):\n 1. \\<And>d.\n       \\<lbrakk>d \\<in> D; hasRead s q d p\\<rbrakk> \\<Longrightarrow> False", "from p21 act"], ["proof (chain)\npicking this:\n  bal (dblock s q) < bal (dblock s' p) \\<and>\n  inp (dblock s q) \\<noteq> inp (dblock s' p)\n  HEndPhase1 s s' p", "have p32: \"bal(dblock s q) < mbal(dblock s p)\""], ["proof (prove)\nusing this:\n  bal (dblock s q) < bal (dblock s' p) \\<and>\n  inp (dblock s q) \\<noteq> inp (dblock s' p)\n  HEndPhase1 s s' p\n\ngoal (1 subgoal):\n 1. bal (dblock s q) < mbal (dblock s p)", "by(auto simp add: EndPhase1_def)"], ["proof (state)\nthis:\n  bal (dblock s q) < mbal (dblock s p)\n\ngoal (1 subgoal):\n 1. \\<And>d.\n       \\<lbrakk>d \\<in> D; hasRead s q d p\\<rbrakk> \\<Longrightarrow> False", "with p31 d_in_D hasRead_qdp p24"], ["proof (chain)\npicking this:\n  \\<lparr>block = dblock s p, proc = p\\<rparr> \\<in> blocksRead s q d\n  d \\<in> D\n  hasRead s q d p\n  \\<forall>d\\<in>D.\n     \\<not> (\\<exists>br\\<in>blocksRead s q d.\n                bal (dblock s q) \\<le> mbal (block br))\n  bal (dblock s q) < mbal (dblock s p)", "show False"], ["proof (prove)\nusing this:\n  \\<lparr>block = dblock s p, proc = p\\<rparr> \\<in> blocksRead s q d\n  d \\<in> D\n  hasRead s q d p\n  \\<forall>d\\<in>D.\n     \\<not> (\\<exists>br\\<in>blocksRead s q d.\n                bal (dblock s q) \\<le> mbal (block br))\n  bal (dblock s q) < mbal (dblock s p)\n\ngoal (1 subgoal):\n 1. False", "by(force)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>d\\<in>D. \\<not> hasRead s q d p\n\ngoal (2 subgoals):\n 1. maxBalInp s (bal (dblock s q)) (inp (dblock s q)) \\<Longrightarrow>\n    \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s q) < mbal (disk s d qq) \\<and>\n             \\<not> hasRead s q d qq\n 2. \\<not> maxBalInp s (bal (dblock s q))\n            (inp (dblock s q)) \\<Longrightarrow>\n    \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s q) < mbal (disk s d qq) \\<and>\n             \\<not> hasRead s q d qq", "with p22"], ["proof (chain)\npicking this:\n  D \\<in> MajoritySet \\<and>\n  (\\<forall>d\\<in>D.\n      bal (dblock s q) < mbal (disk s d p) \\<and> hasRead s p d q)\n  \\<forall>d\\<in>D. \\<not> hasRead s q d p", "show ?thesis"], ["proof (prove)\nusing this:\n  D \\<in> MajoritySet \\<and>\n  (\\<forall>d\\<in>D.\n      bal (dblock s q) < mbal (disk s d p) \\<and> hasRead s p d q)\n  \\<forall>d\\<in>D. \\<not> hasRead s q d p\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s q) < mbal (disk s d qq) \\<and>\n             \\<not> hasRead s q d qq", "by auto"], ["proof (state)\nthis:\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s q) < mbal (disk s d qq) \\<and>\n           \\<not> hasRead s q d qq\n\ngoal (1 subgoal):\n 1. \\<not> maxBalInp s (bal (dblock s q))\n            (inp (dblock s q)) \\<Longrightarrow>\n    \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s q) < mbal (disk s d qq) \\<and>\n             \\<not> hasRead s q d qq", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> maxBalInp s (bal (dblock s q))\n            (inp (dblock s q)) \\<Longrightarrow>\n    \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s q) < mbal (disk s d qq) \\<and>\n             \\<not> hasRead s q d qq", "case False"], ["proof (state)\nthis:\n  \\<not> maxBalInp s (bal (dblock s q)) (inp (dblock s q))\n\ngoal (1 subgoal):\n 1. \\<not> maxBalInp s (bal (dblock s q))\n            (inp (dblock s q)) \\<Longrightarrow>\n    \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s q) < mbal (disk s d qq) \\<and>\n             \\<not> hasRead s q d qq", "with inv phase"], ["proof (chain)\npicking this:\n  HInv5 s\n  phase s q = 2\n  \\<not> maxBalInp s (bal (dblock s q)) (inp (dblock s q))", "show ?thesis"], ["proof (prove)\nusing this:\n  HInv5 s\n  phase s q = 2\n  \\<not> maxBalInp s (bal (dblock s q)) (inp (dblock s q))\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s q) < mbal (disk s d qq) \\<and>\n             \\<not> hasRead s q d qq", "by(auto simp add: HInv5_def HInv5_inner_def HInv5_inner_R_def)"], ["proof (state)\nthis:\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s q) < mbal (disk s d qq) \\<and>\n           \\<not> hasRead s q d qq\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s q) < mbal (disk s d qq) \\<and>\n           \\<not> hasRead s q d qq\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n             \\<not> hasRead s' q d qq", "then"], ["proof (chain)\npicking this:\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s q) < mbal (disk s d qq) \\<and>\n           \\<not> hasRead s q d qq", "obtain D qq \n    where \"D\\<in>MajoritySet \\<and> (\\<forall>d\\<in>D.    bal(dblock s q) < mbal(disk s d qq)\n                                   \\<and> \\<not>hasRead s q d qq)\""], ["proof (prove)\nusing this:\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s q) < mbal (disk s d qq) \\<and>\n           \\<not> hasRead s q d qq\n\ngoal (1 subgoal):\n 1. (\\<And>D qq.\n        D \\<in> MajoritySet \\<and>\n        (\\<forall>d\\<in>D.\n            bal (dblock s q) < mbal (disk s d qq) \\<and>\n            \\<not> hasRead s q d qq) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  D \\<in> MajoritySet \\<and>\n  (\\<forall>d\\<in>D.\n      bal (dblock s q) < mbal (disk s d qq) \\<and> \\<not> hasRead s q d qq)\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n             \\<not> hasRead s' q d qq", "moreover"], ["proof (state)\nthis:\n  D \\<in> MajoritySet \\<and>\n  (\\<forall>d\\<in>D.\n      bal (dblock s q) < mbal (disk s d qq) \\<and> \\<not> hasRead s q d qq)\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n             \\<not> hasRead s' q d qq", "from act pnq"], ["proof (chain)\npicking this:\n  HEndPhase1 s s' p\n  p \\<noteq> q", "have \"\\<forall>d. hasRead s' q d qq = hasRead s q d qq\""], ["proof (prove)\nusing this:\n  HEndPhase1 s s' p\n  p \\<noteq> q\n\ngoal (1 subgoal):\n 1. \\<forall>d. hasRead s' q d qq = hasRead s q d qq", "by(auto simp add: EndPhase1_def InitializePhase_def hasRead_def)"], ["proof (state)\nthis:\n  \\<forall>d. hasRead s' q d qq = hasRead s q d qq\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n             \\<not> hasRead s' q d qq", "ultimately"], ["proof (chain)\npicking this:\n  D \\<in> MajoritySet \\<and>\n  (\\<forall>d\\<in>D.\n      bal (dblock s q) < mbal (disk s d qq) \\<and> \\<not> hasRead s q d qq)\n  \\<forall>d. hasRead s' q d qq = hasRead s q d qq", "show ?thesis"], ["proof (prove)\nusing this:\n  D \\<in> MajoritySet \\<and>\n  (\\<forall>d\\<in>D.\n      bal (dblock s q) < mbal (disk s d qq) \\<and> \\<not> hasRead s q d qq)\n  \\<forall>d. hasRead s' q d qq = hasRead s q d qq\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n             \\<not> hasRead s' q d qq", "using disk dblock"], ["proof (prove)\nusing this:\n  D \\<in> MajoritySet \\<and>\n  (\\<forall>d\\<in>D.\n      bal (dblock s q) < mbal (disk s d qq) \\<and> \\<not> hasRead s q d qq)\n  \\<forall>d. hasRead s' q d qq = hasRead s q d qq\n  disk s' = disk s\n  dblock s' q = dblock s q\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n             \\<not> hasRead s' q d qq", "by auto"], ["proof (state)\nthis:\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n           \\<not> hasRead s' q d qq\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem HEndPhase1_HInv5:\n  assumes act: \"HEndPhase1 s s' p\"\n  and inv: \"HInv5 s\"\n  and inv1: \"Inv1 s\"\n  and inv2a: \"Inv2a s\"\n  and inv2a': \"Inv2a s'\"\n  and inv2b: \"Inv2b s\"\n  and inv2c: \"Inv2c s\"\n  and inv3: \"HInv3 s\"\n  and inv4: \"HInv4 s\"\nshows \"HInv5_inner s' q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HInv5_inner s' q", "using HEndPhase1_HInv5_p[OF act inv4 inv2a inv2a' inv2c]\n        HEndPhase1_HInv5_q[OF act inv inv1 inv2a' inv2a inv2b inv2c inv3, of q]"], ["proof (prove)\nusing this:\n  \\<not> maxBalInp s' (bal (dblock s' p))\n          (inp (dblock s' p)) \\<Longrightarrow>\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>q.\n        \\<forall>d\\<in>D.\n           bal (dblock s' p) < mbal (disk s' d q) \\<and>\n           \\<not> hasRead s' p d q\n  \\<lbrakk>phase s' q = 2; p \\<noteq> q;\n   \\<not> maxBalInp s' (bal (dblock s' q)) (inp (dblock s' q))\\<rbrakk>\n  \\<Longrightarrow> \\<exists>D\\<in>MajoritySet.\n                       \\<exists>qq.\n                          \\<forall>d\\<in>D.\n                             bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n                             \\<not> hasRead s' q d qq\n\ngoal (1 subgoal):\n 1. HInv5_inner s' q", "by(auto simp add: HInv5_def HInv5_inner_def HInv5_inner_R_def)"], ["", "lemma HFail_HInv5_p:\n  \"HFail s s' p  \\<Longrightarrow> HInv5_inner s' p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HFail s s' p \\<Longrightarrow> HInv5_inner s' p", "by(auto simp add: Fail_def HInv5_inner_def)"], ["", "lemma  HFail_blocksOf_q:\n  assumes act: \"HFail s s' p\"\n  and pnq: \"p\\<noteq>q\"\n  shows \"blocksOf s' q \\<subseteq> blocksOf s q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. blocksOf s' q \\<subseteq> blocksOf s q", "using assms"], ["proof (prove)\nusing this:\n  HFail s s' p\n  p \\<noteq> q\n\ngoal (1 subgoal):\n 1. blocksOf s' q \\<subseteq> blocksOf s q", "by(auto simp add: Fail_def InitializePhase_def blocksOf_def rdBy_def)"], ["", "lemma HFail_allBlocks:\n  assumes act: \"HFail s s' p\"\n  shows \"allBlocks s' \\<subseteq> allBlocks s \\<union> {dblock s' p}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. allBlocks s' \\<subseteq> allBlocks s \\<union> {dblock s' p}", "proof(auto simp del: HFail_def simp add: allBlocks_def\n           dest: HFail_blocksOf_q[OF act])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x pa.\n       \\<lbrakk>x \\<in> blocksOf s' pa;\n        \\<forall>xa. x \\<notin> blocksOf s xa\\<rbrakk>\n       \\<Longrightarrow> x = dblock s' p", "fix x pa"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x pa.\n       \\<lbrakk>x \\<in> blocksOf s' pa;\n        \\<forall>xa. x \\<notin> blocksOf s xa\\<rbrakk>\n       \\<Longrightarrow> x = dblock s' p", "assume x_pa: \"x \\<in> blocksOf s' pa\" and\n         x_nblks: \"\\<forall>xa. x \\<notin> blocksOf s xa\""], ["proof (state)\nthis:\n  x \\<in> blocksOf s' pa\n  \\<forall>xa. x \\<notin> blocksOf s xa\n\ngoal (1 subgoal):\n 1. \\<And>x pa.\n       \\<lbrakk>x \\<in> blocksOf s' pa;\n        \\<forall>xa. x \\<notin> blocksOf s xa\\<rbrakk>\n       \\<Longrightarrow> x = dblock s' p", "show \"x=dblock s' p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = dblock s' p", "proof(cases \"p=pa\")"], ["proof (state)\ngoal (2 subgoals):\n 1. p = pa \\<Longrightarrow> x = dblock s' p\n 2. p \\<noteq> pa \\<Longrightarrow> x = dblock s' p", "case True"], ["proof (state)\nthis:\n  p = pa\n\ngoal (2 subgoals):\n 1. p = pa \\<Longrightarrow> x = dblock s' p\n 2. p \\<noteq> pa \\<Longrightarrow> x = dblock s' p", "from x_nblks"], ["proof (chain)\npicking this:\n  \\<forall>xa. x \\<notin> blocksOf s xa", "have \"x \\<notin> blocksOf s p\""], ["proof (prove)\nusing this:\n  \\<forall>xa. x \\<notin> blocksOf s xa\n\ngoal (1 subgoal):\n 1. x \\<notin> blocksOf s p", "by auto"], ["proof (state)\nthis:\n  x \\<notin> blocksOf s p\n\ngoal (2 subgoals):\n 1. p = pa \\<Longrightarrow> x = dblock s' p\n 2. p \\<noteq> pa \\<Longrightarrow> x = dblock s' p", "with True subsetD[OF HFail_blocksOf[OF act] x_pa]"], ["proof (chain)\npicking this:\n  p = pa\n  x \\<in> blocksOf s pa \\<union> {dblock s' pa}\n  x \\<notin> blocksOf s p", "show ?thesis"], ["proof (prove)\nusing this:\n  p = pa\n  x \\<in> blocksOf s pa \\<union> {dblock s' pa}\n  x \\<notin> blocksOf s p\n\ngoal (1 subgoal):\n 1. x = dblock s' p", "by auto"], ["proof (state)\nthis:\n  x = dblock s' p\n\ngoal (1 subgoal):\n 1. p \\<noteq> pa \\<Longrightarrow> x = dblock s' p", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. p \\<noteq> pa \\<Longrightarrow> x = dblock s' p", "case False"], ["proof (state)\nthis:\n  p \\<noteq> pa\n\ngoal (1 subgoal):\n 1. p \\<noteq> pa \\<Longrightarrow> x = dblock s' p", "from x_nblks subsetD[OF HFail_blocksOf_q[OF act False] x_pa]"], ["proof (chain)\npicking this:\n  \\<forall>xa. x \\<notin> blocksOf s xa\n  x \\<in> blocksOf s pa", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>xa. x \\<notin> blocksOf s xa\n  x \\<in> blocksOf s pa\n\ngoal (1 subgoal):\n 1. x = dblock s' p", "by auto"], ["proof (state)\nthis:\n  x = dblock s' p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x = dblock s' p\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HFail_HInv5_q1:\n  assumes act: \"HFail s s' p\"\n  and pnq: \"p\\<noteq>q\"\n  and inv2a: \"Inv2a_inner s' q\"\n  and inv5_1: \"maxBalInp s (bal(dblock s q)) (inp(dblock s q))\"\n  shows \"maxBalInp s' (bal(dblock s' q)) (inp(dblock s' q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. maxBalInp s' (bal (dblock s' q)) (inp (dblock s' q))", "proof(auto simp add: maxBalInp_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>bk.\n       \\<lbrakk>bk \\<in> allBlocks s';\n        bal (dblock s' q) \\<le> bal bk\\<rbrakk>\n       \\<Longrightarrow> inp bk = inp (dblock s' q)", "fix bk"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>bk.\n       \\<lbrakk>bk \\<in> allBlocks s';\n        bal (dblock s' q) \\<le> bal bk\\<rbrakk>\n       \\<Longrightarrow> inp bk = inp (dblock s' q)", "assume bk: \"bk \\<in> allBlocks s'\"\n    and bal: \"bal (dblock s' q) \\<le> bal bk\""], ["proof (state)\nthis:\n  bk \\<in> allBlocks s'\n  bal (dblock s' q) \\<le> bal bk\n\ngoal (1 subgoal):\n 1. \\<And>bk.\n       \\<lbrakk>bk \\<in> allBlocks s';\n        bal (dblock s' q) \\<le> bal bk\\<rbrakk>\n       \\<Longrightarrow> inp bk = inp (dblock s' q)", "from act pnq"], ["proof (chain)\npicking this:\n  HFail s s' p\n  p \\<noteq> q", "have dblock': \"dblock s' q = dblock s q\""], ["proof (prove)\nusing this:\n  HFail s s' p\n  p \\<noteq> q\n\ngoal (1 subgoal):\n 1. dblock s' q = dblock s q", "by(auto simp add: Fail_def)"], ["proof (state)\nthis:\n  dblock s' q = dblock s q\n\ngoal (1 subgoal):\n 1. \\<And>bk.\n       \\<lbrakk>bk \\<in> allBlocks s';\n        bal (dblock s' q) \\<le> bal bk\\<rbrakk>\n       \\<Longrightarrow> inp bk = inp (dblock s' q)", "from subsetD[OF HFail_allBlocks[OF act] bk]"], ["proof (chain)\npicking this:\n  bk \\<in> allBlocks s \\<union> {dblock s' p}", "show \"inp bk = inp (dblock s' q)\""], ["proof (prove)\nusing this:\n  bk \\<in> allBlocks s \\<union> {dblock s' p}\n\ngoal (1 subgoal):\n 1. inp bk = inp (dblock s' q)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. bk \\<in> allBlocks s \\<Longrightarrow> inp bk = inp (dblock s' q)\n 2. bk \\<in> {dblock s' p} \\<Longrightarrow> inp bk = inp (dblock s' q)", "assume bk: \"bk \\<in> allBlocks s\""], ["proof (state)\nthis:\n  bk \\<in> allBlocks s\n\ngoal (2 subgoals):\n 1. bk \\<in> allBlocks s \\<Longrightarrow> inp bk = inp (dblock s' q)\n 2. bk \\<in> {dblock s' p} \\<Longrightarrow> inp bk = inp (dblock s' q)", "with inv5_1 dblock' bal"], ["proof (chain)\npicking this:\n  maxBalInp s (bal (dblock s q)) (inp (dblock s q))\n  dblock s' q = dblock s q\n  bal (dblock s' q) \\<le> bal bk\n  bk \\<in> allBlocks s", "show ?thesis"], ["proof (prove)\nusing this:\n  maxBalInp s (bal (dblock s q)) (inp (dblock s q))\n  dblock s' q = dblock s q\n  bal (dblock s' q) \\<le> bal bk\n  bk \\<in> allBlocks s\n\ngoal (1 subgoal):\n 1. inp bk = inp (dblock s' q)", "by(auto simp add: maxBalInp_def)"], ["proof (state)\nthis:\n  inp bk = inp (dblock s' q)\n\ngoal (1 subgoal):\n 1. bk \\<in> {dblock s' p} \\<Longrightarrow> inp bk = inp (dblock s' q)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. bk \\<in> {dblock s' p} \\<Longrightarrow> inp bk = inp (dblock s' q)", "assume bk: \"bk \\<in> {dblock s' p}\""], ["proof (state)\nthis:\n  bk \\<in> {dblock s' p}\n\ngoal (1 subgoal):\n 1. bk \\<in> {dblock s' p} \\<Longrightarrow> inp bk = inp (dblock s' q)", "with act"], ["proof (chain)\npicking this:\n  HFail s s' p\n  bk \\<in> {dblock s' p}", "have bk_init: \"bk = InitDB\""], ["proof (prove)\nusing this:\n  HFail s s' p\n  bk \\<in> {dblock s' p}\n\ngoal (1 subgoal):\n 1. bk = InitDB", "by(auto simp add: Fail_def)"], ["proof (state)\nthis:\n  bk = InitDB\n\ngoal (1 subgoal):\n 1. bk \\<in> {dblock s' p} \\<Longrightarrow> inp bk = inp (dblock s' q)", "with bal"], ["proof (chain)\npicking this:\n  bal (dblock s' q) \\<le> bal bk\n  bk = InitDB", "have \"bal (dblock s' q)=0\""], ["proof (prove)\nusing this:\n  bal (dblock s' q) \\<le> bal bk\n  bk = InitDB\n\ngoal (1 subgoal):\n 1. bal (dblock s' q) = 0", "by(auto simp add: InitDB_def)"], ["proof (state)\nthis:\n  bal (dblock s' q) = 0\n\ngoal (1 subgoal):\n 1. bk \\<in> {dblock s' p} \\<Longrightarrow> inp bk = inp (dblock s' q)", "with inv2a"], ["proof (chain)\npicking this:\n  Inv2a_inner s' q\n  bal (dblock s' q) = 0", "have \"inp (dblock s' q)= NotAnInput\""], ["proof (prove)\nusing this:\n  Inv2a_inner s' q\n  bal (dblock s' q) = 0\n\ngoal (1 subgoal):\n 1. inp (dblock s' q) = NotAnInput", "by(auto simp add: Inv2a_inner_def Inv2a_innermost_def blocksOf_def)"], ["proof (state)\nthis:\n  inp (dblock s' q) = NotAnInput\n\ngoal (1 subgoal):\n 1. bk \\<in> {dblock s' p} \\<Longrightarrow> inp bk = inp (dblock s' q)", "with bk_init"], ["proof (chain)\npicking this:\n  bk = InitDB\n  inp (dblock s' q) = NotAnInput", "show ?thesis"], ["proof (prove)\nusing this:\n  bk = InitDB\n  inp (dblock s' q) = NotAnInput\n\ngoal (1 subgoal):\n 1. inp bk = inp (dblock s' q)", "by(auto simp add: InitDB_def)"], ["proof (state)\nthis:\n  inp bk = inp (dblock s' q)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inp bk = inp (dblock s' q)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HFail_HInv5_q2:\n  assumes act: \"HFail s s' p\"\n  and pnq: \"p\\<noteq>q\"\n  and inv5_2: \"\\<exists>D\\<in>MajoritySet. \\<exists>qq. (\\<forall>d\\<in>D.    bal(dblock s q) < mbal(disk s d qq)\n                                     \\<and> \\<not>hasRead s q d qq)\"\n  shows \"\\<exists>D\\<in>MajoritySet. \\<exists>qq. (\\<forall>d\\<in>D.    bal(dblock s' q) < mbal(disk s' d qq)\n                                     \\<and> \\<not>hasRead s' q d qq)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n             \\<not> hasRead s' q d qq", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n             \\<not> hasRead s' q d qq", "from act pnq"], ["proof (chain)\npicking this:\n  HFail s s' p\n  p \\<noteq> q", "have  disk: \"disk s' = disk s\"\n    and blocksRead: \"\\<forall>d. blocksRead s' q d = blocksRead s q d\"\n    and dblock: \"dblock s' q = dblock s q\""], ["proof (prove)\nusing this:\n  HFail s s' p\n  p \\<noteq> q\n\ngoal (1 subgoal):\n 1. disk s' = disk s &&&\n    \\<forall>d. blocksRead s' q d = blocksRead s q d &&&\n    dblock s' q = dblock s q", "by(auto simp add: Fail_def InitializePhase_def)"], ["proof (state)\nthis:\n  disk s' = disk s\n  \\<forall>d. blocksRead s' q d = blocksRead s q d\n  dblock s' q = dblock s q\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n             \\<not> hasRead s' q d qq", "with inv5_2"], ["proof (chain)\npicking this:\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s q) < mbal (disk s d qq) \\<and>\n           \\<not> hasRead s q d qq\n  disk s' = disk s\n  \\<forall>d. blocksRead s' q d = blocksRead s q d\n  dblock s' q = dblock s q", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s q) < mbal (disk s d qq) \\<and>\n           \\<not> hasRead s q d qq\n  disk s' = disk s\n  \\<forall>d. blocksRead s' q d = blocksRead s q d\n  dblock s' q = dblock s q\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n             \\<not> hasRead s' q d qq", "by(auto simp add: hasRead_def)"], ["proof (state)\nthis:\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n           \\<not> hasRead s' q d qq\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HFail_HInv5_q:\n  assumes act: \"HFail s s' p\"\n  and inv: \"HInv5_inner s q\"\n  and pnq: \"p\\<noteq>q\"\n  and inv2a: \"Inv2a s'\"\n  shows \"HInv5_inner s' q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HInv5_inner s' q", "proof(auto simp add: HInv5_inner_def HInv5_inner_R_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>phase s' q = 2;\n     \\<forall>D\\<in>MajoritySet.\n        \\<forall>qa.\n           \\<exists>d\\<in>D.\n              bal (dblock s' q) < mbal (disk s' d qa) \\<longrightarrow>\n              hasRead s' q d qa\\<rbrakk>\n    \\<Longrightarrow> maxBalInp s' (bal (dblock s' q)) (inp (dblock s' q))", "assume phase': \"phase s' q = 2\"\n    and nR2: \" \\<forall>D\\<in>MajoritySet.\n        \\<forall>qa. \\<exists>d\\<in>D. bal (dblock s' q) < mbal (disk s' d qa) \\<longrightarrow>\n                   hasRead s' q d qa\" (is \"?P s'\")"], ["proof (state)\nthis:\n  phase s' q = 2\n  \\<forall>D\\<in>MajoritySet.\n     \\<forall>qa.\n        \\<exists>d\\<in>D.\n           bal (dblock s' q) < mbal (disk s' d qa) \\<longrightarrow>\n           hasRead s' q d qa\n\ngoal (1 subgoal):\n 1. \\<lbrakk>phase s' q = 2;\n     \\<forall>D\\<in>MajoritySet.\n        \\<forall>qa.\n           \\<exists>d\\<in>D.\n              bal (dblock s' q) < mbal (disk s' d qa) \\<longrightarrow>\n              hasRead s' q d qa\\<rbrakk>\n    \\<Longrightarrow> maxBalInp s' (bal (dblock s' q)) (inp (dblock s' q))", "from HFail_HInv5_q2[OF act pnq]"], ["proof (chain)\npicking this:\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s q) < mbal (disk s d qq) \\<and>\n           \\<not> hasRead s q d qq \\<Longrightarrow>\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n           \\<not> hasRead s' q d qq", "have \"\\<not> (?P s) \\<Longrightarrow> \\<not>(?P s')\""], ["proof (prove)\nusing this:\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s q) < mbal (disk s d qq) \\<and>\n           \\<not> hasRead s q d qq \\<Longrightarrow>\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n           \\<not> hasRead s' q d qq\n\ngoal (1 subgoal):\n 1. \\<not> (\\<forall>D\\<in>MajoritySet.\n               \\<forall>qa.\n                  \\<exists>d\\<in>D.\n                     bal (dblock s q) < mbal (disk s d qa) \\<longrightarrow>\n                     hasRead s q d qa) \\<Longrightarrow>\n    \\<not> (\\<forall>D\\<in>MajoritySet.\n               \\<forall>qa.\n                  \\<exists>d\\<in>D.\n                     bal (dblock s' q)\n                     < mbal (disk s' d qa) \\<longrightarrow>\n                     hasRead s' q d qa)", "by auto"], ["proof (state)\nthis:\n  \\<not> (\\<forall>D\\<in>MajoritySet.\n             \\<forall>qa.\n                \\<exists>d\\<in>D.\n                   bal (dblock s q) < mbal (disk s d qa) \\<longrightarrow>\n                   hasRead s q d qa) \\<Longrightarrow>\n  \\<not> (\\<forall>D\\<in>MajoritySet.\n             \\<forall>qa.\n                \\<exists>d\\<in>D.\n                   bal (dblock s' q) < mbal (disk s' d qa) \\<longrightarrow>\n                   hasRead s' q d qa)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>phase s' q = 2;\n     \\<forall>D\\<in>MajoritySet.\n        \\<forall>qa.\n           \\<exists>d\\<in>D.\n              bal (dblock s' q) < mbal (disk s' d qa) \\<longrightarrow>\n              hasRead s' q d qa\\<rbrakk>\n    \\<Longrightarrow> maxBalInp s' (bal (dblock s' q)) (inp (dblock s' q))", "with nR2"], ["proof (chain)\npicking this:\n  \\<forall>D\\<in>MajoritySet.\n     \\<forall>qa.\n        \\<exists>d\\<in>D.\n           bal (dblock s' q) < mbal (disk s' d qa) \\<longrightarrow>\n           hasRead s' q d qa\n  \\<not> (\\<forall>D\\<in>MajoritySet.\n             \\<forall>qa.\n                \\<exists>d\\<in>D.\n                   bal (dblock s q) < mbal (disk s d qa) \\<longrightarrow>\n                   hasRead s q d qa) \\<Longrightarrow>\n  \\<not> (\\<forall>D\\<in>MajoritySet.\n             \\<forall>qa.\n                \\<exists>d\\<in>D.\n                   bal (dblock s' q) < mbal (disk s' d qa) \\<longrightarrow>\n                   hasRead s' q d qa)", "have P: \"?P s\""], ["proof (prove)\nusing this:\n  \\<forall>D\\<in>MajoritySet.\n     \\<forall>qa.\n        \\<exists>d\\<in>D.\n           bal (dblock s' q) < mbal (disk s' d qa) \\<longrightarrow>\n           hasRead s' q d qa\n  \\<not> (\\<forall>D\\<in>MajoritySet.\n             \\<forall>qa.\n                \\<exists>d\\<in>D.\n                   bal (dblock s q) < mbal (disk s d qa) \\<longrightarrow>\n                   hasRead s q d qa) \\<Longrightarrow>\n  \\<not> (\\<forall>D\\<in>MajoritySet.\n             \\<forall>qa.\n                \\<exists>d\\<in>D.\n                   bal (dblock s' q) < mbal (disk s' d qa) \\<longrightarrow>\n                   hasRead s' q d qa)\n\ngoal (1 subgoal):\n 1. \\<forall>D\\<in>MajoritySet.\n       \\<forall>qa.\n          \\<exists>d\\<in>D.\n             bal (dblock s q) < mbal (disk s d qa) \\<longrightarrow>\n             hasRead s q d qa", "by blast"], ["proof (state)\nthis:\n  \\<forall>D\\<in>MajoritySet.\n     \\<forall>qa.\n        \\<exists>d\\<in>D.\n           bal (dblock s q) < mbal (disk s d qa) \\<longrightarrow>\n           hasRead s q d qa\n\ngoal (1 subgoal):\n 1. \\<lbrakk>phase s' q = 2;\n     \\<forall>D\\<in>MajoritySet.\n        \\<forall>qa.\n           \\<exists>d\\<in>D.\n              bal (dblock s' q) < mbal (disk s' d qa) \\<longrightarrow>\n              hasRead s' q d qa\\<rbrakk>\n    \\<Longrightarrow> maxBalInp s' (bal (dblock s' q)) (inp (dblock s' q))", "from inv2a"], ["proof (chain)\npicking this:\n  Inv2a s'", "have inv2a': \"Inv2a_inner s' q\""], ["proof (prove)\nusing this:\n  Inv2a s'\n\ngoal (1 subgoal):\n 1. Inv2a_inner s' q", "by (auto simp add: Inv2a_def)"], ["proof (state)\nthis:\n  Inv2a_inner s' q\n\ngoal (1 subgoal):\n 1. \\<lbrakk>phase s' q = 2;\n     \\<forall>D\\<in>MajoritySet.\n        \\<forall>qa.\n           \\<exists>d\\<in>D.\n              bal (dblock s' q) < mbal (disk s' d qa) \\<longrightarrow>\n              hasRead s' q d qa\\<rbrakk>\n    \\<Longrightarrow> maxBalInp s' (bal (dblock s' q)) (inp (dblock s' q))", "from act pnq phase'"], ["proof (chain)\npicking this:\n  HFail s s' p\n  p \\<noteq> q\n  phase s' q = 2", "have \"phase s q = 2\""], ["proof (prove)\nusing this:\n  HFail s s' p\n  p \\<noteq> q\n  phase s' q = 2\n\ngoal (1 subgoal):\n 1. phase s q = 2", "by(auto simp add: Fail_def split: if_split_asm)"], ["proof (state)\nthis:\n  phase s q = 2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>phase s' q = 2;\n     \\<forall>D\\<in>MajoritySet.\n        \\<forall>qa.\n           \\<exists>d\\<in>D.\n              bal (dblock s' q) < mbal (disk s' d qa) \\<longrightarrow>\n              hasRead s' q d qa\\<rbrakk>\n    \\<Longrightarrow> maxBalInp s' (bal (dblock s' q)) (inp (dblock s' q))", "with inv HFail_HInv5_q1[OF act pnq inv2a'] P"], ["proof (chain)\npicking this:\n  HInv5_inner s q\n  maxBalInp s (bal (dblock s q)) (inp (dblock s q)) \\<Longrightarrow>\n  maxBalInp s' (bal (dblock s' q)) (inp (dblock s' q))\n  \\<forall>D\\<in>MajoritySet.\n     \\<forall>qa.\n        \\<exists>d\\<in>D.\n           bal (dblock s q) < mbal (disk s d qa) \\<longrightarrow>\n           hasRead s q d qa\n  phase s q = 2", "show \"maxBalInp s' (bal (dblock s' q)) (inp (dblock s' q))\""], ["proof (prove)\nusing this:\n  HInv5_inner s q\n  maxBalInp s (bal (dblock s q)) (inp (dblock s q)) \\<Longrightarrow>\n  maxBalInp s' (bal (dblock s' q)) (inp (dblock s' q))\n  \\<forall>D\\<in>MajoritySet.\n     \\<forall>qa.\n        \\<exists>d\\<in>D.\n           bal (dblock s q) < mbal (disk s d qa) \\<longrightarrow>\n           hasRead s q d qa\n  phase s q = 2\n\ngoal (1 subgoal):\n 1. maxBalInp s' (bal (dblock s' q)) (inp (dblock s' q))", "by(auto simp add: HInv5_inner_def HInv5_inner_R_def)"], ["proof (state)\nthis:\n  maxBalInp s' (bal (dblock s' q)) (inp (dblock s' q))\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem HFail_HInv5:\n  \"\\<lbrakk> HFail s s' p; HInv5_inner s q; Inv2a s' \\<rbrakk> \\<Longrightarrow> HInv5_inner s' q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>HFail s s' p; HInv5_inner s q; Inv2a s'\\<rbrakk>\n    \\<Longrightarrow> HInv5_inner s' q", "by(blast dest: HFail_HInv5_q HFail_HInv5_p)"], ["", "lemma HPhase0Read_HInv5_p:\n  \"HPhase0Read s s' p d \\<Longrightarrow> HInv5_inner s' p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HPhase0Read s s' p d \\<Longrightarrow> HInv5_inner s' p", "by(auto simp add: Phase0Read_def HInv5_inner_def)"], ["", "lemma HPhase0Read_allBlocks:\n  assumes act: \"HPhase0Read s s' p d\"\n  shows \"allBlocks s' \\<subseteq> allBlocks s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. allBlocks s' \\<subseteq> allBlocks s", "using HPhase0Read_blocksOf[OF act]"], ["proof (prove)\nusing this:\n  blocksOf s' ?q \\<subseteq> blocksOf s ?q\n\ngoal (1 subgoal):\n 1. allBlocks s' \\<subseteq> allBlocks s", "by(auto simp add: allBlocks_def)"], ["", "lemma HPhase0Read_HInv5_1:\n  assumes act: \"HPhase0Read s s' p d\"\n  and inv5_1: \"maxBalInp s (bal(dblock s q)) (inp(dblock s q))\"\n  shows \"maxBalInp s' (bal(dblock s' q)) (inp(dblock s' q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. maxBalInp s' (bal (dblock s' q)) (inp (dblock s' q))", "using assms and HPhase0Read_blocksOf[OF act]"], ["proof (prove)\nusing this:\n  HPhase0Read s s' p d\n  maxBalInp s (bal (dblock s q)) (inp (dblock s q))\n  blocksOf s' ?q \\<subseteq> blocksOf s ?q\n\ngoal (1 subgoal):\n 1. maxBalInp s' (bal (dblock s' q)) (inp (dblock s' q))", "by(auto simp add: Phase0Read_def maxBalInp_def allBlocks_def)"], ["", "lemma HPhase0Read_HInv5_q2:\n  assumes act: \"HPhase0Read s s' p d\"\n  and pnq: \"p\\<noteq>q\"\n  and inv5_2: \"\\<exists>D\\<in>MajoritySet. \\<exists>qq. (\\<forall>d\\<in>D.    bal(dblock s q) < mbal(disk s d qq)\n                                     \\<and> \\<not>hasRead s q d qq)\"\n  shows \"\\<exists>D\\<in>MajoritySet. \\<exists>qq. (\\<forall>d\\<in>D.    bal(dblock s' q) < mbal(disk s' d qq)\n                                     \\<and> \\<not>hasRead s' q d qq)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n             \\<not> hasRead s' q d qq", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n             \\<not> hasRead s' q d qq", "from act pnq"], ["proof (chain)\npicking this:\n  HPhase0Read s s' p d\n  p \\<noteq> q", "have  disk: \"disk s' = disk s\"\n    and blocksRead: \"\\<forall>d. blocksRead s' q d = blocksRead s q d\"\n    and dblock: \"dblock s' q = dblock s q\""], ["proof (prove)\nusing this:\n  HPhase0Read s s' p d\n  p \\<noteq> q\n\ngoal (1 subgoal):\n 1. disk s' = disk s &&&\n    \\<forall>d. blocksRead s' q d = blocksRead s q d &&&\n    dblock s' q = dblock s q", "by(auto simp add: Phase0Read_def InitializePhase_def)"], ["proof (state)\nthis:\n  disk s' = disk s\n  \\<forall>d. blocksRead s' q d = blocksRead s q d\n  dblock s' q = dblock s q\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n             \\<not> hasRead s' q d qq", "with inv5_2"], ["proof (chain)\npicking this:\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s q) < mbal (disk s d qq) \\<and>\n           \\<not> hasRead s q d qq\n  disk s' = disk s\n  \\<forall>d. blocksRead s' q d = blocksRead s q d\n  dblock s' q = dblock s q", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s q) < mbal (disk s d qq) \\<and>\n           \\<not> hasRead s q d qq\n  disk s' = disk s\n  \\<forall>d. blocksRead s' q d = blocksRead s q d\n  dblock s' q = dblock s q\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n             \\<not> hasRead s' q d qq", "by(auto simp add: hasRead_def)"], ["proof (state)\nthis:\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n           \\<not> hasRead s' q d qq\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HPhase0Read_HInv5_q:\n  assumes act: \"HPhase0Read s s' p d\"\n  and inv: \"HInv5_inner s q\"\n  and pnq: \"p\\<noteq>q\"\n  shows \"HInv5_inner s' q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HInv5_inner s' q", "proof(auto simp add: HInv5_inner_def HInv5_inner_R_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>phase s' q = 2;\n     \\<forall>D\\<in>MajoritySet.\n        \\<forall>qa.\n           \\<exists>d\\<in>D.\n              bal (dblock s' q) < mbal (disk s' d qa) \\<longrightarrow>\n              hasRead s' q d qa\\<rbrakk>\n    \\<Longrightarrow> maxBalInp s' (bal (dblock s' q)) (inp (dblock s' q))", "assume phase': \"phase s' q = 2\"\n    and i2: \"\\<forall>D\\<in>MajoritySet. \\<forall>qa. \\<exists>d\\<in>D. bal (dblock s' q) < mbal (disk s' d qa) \\<longrightarrow> hasRead s' q d qa\""], ["proof (state)\nthis:\n  phase s' q = 2\n  \\<forall>D\\<in>MajoritySet.\n     \\<forall>qa.\n        \\<exists>d\\<in>D.\n           bal (dblock s' q) < mbal (disk s' d qa) \\<longrightarrow>\n           hasRead s' q d qa\n\ngoal (1 subgoal):\n 1. \\<lbrakk>phase s' q = 2;\n     \\<forall>D\\<in>MajoritySet.\n        \\<forall>qa.\n           \\<exists>d\\<in>D.\n              bal (dblock s' q) < mbal (disk s' d qa) \\<longrightarrow>\n              hasRead s' q d qa\\<rbrakk>\n    \\<Longrightarrow> maxBalInp s' (bal (dblock s' q)) (inp (dblock s' q))", "from phase' act"], ["proof (chain)\npicking this:\n  phase s' q = 2\n  HPhase0Read s s' p d", "have phase: \"phase s q = 2\""], ["proof (prove)\nusing this:\n  phase s' q = 2\n  HPhase0Read s s' p d\n\ngoal (1 subgoal):\n 1. phase s q = 2", "by(auto simp add: Phase0Read_def)"], ["proof (state)\nthis:\n  phase s q = 2\n\ngoal (1 subgoal):\n 1. \\<lbrakk>phase s' q = 2;\n     \\<forall>D\\<in>MajoritySet.\n        \\<forall>qa.\n           \\<exists>d\\<in>D.\n              bal (dblock s' q) < mbal (disk s' d qa) \\<longrightarrow>\n              hasRead s' q d qa\\<rbrakk>\n    \\<Longrightarrow> maxBalInp s' (bal (dblock s' q)) (inp (dblock s' q))", "show \"maxBalInp s' (bal (dblock s' q)) (inp (dblock s' q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. maxBalInp s' (bal (dblock s' q)) (inp (dblock s' q))", "proof(rule HPhase0Read_HInv5_1[OF act, of q])"], ["proof (state)\ngoal (1 subgoal):\n 1. maxBalInp s (bal (dblock s q)) (inp (dblock s q))", "from HPhase0Read_HInv5_q2[OF act pnq] inv i2 phase"], ["proof (chain)\npicking this:\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s q) < mbal (disk s d qq) \\<and>\n           \\<not> hasRead s q d qq \\<Longrightarrow>\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n           \\<not> hasRead s' q d qq\n  HInv5_inner s q\n  \\<forall>D\\<in>MajoritySet.\n     \\<forall>qa.\n        \\<exists>d\\<in>D.\n           bal (dblock s' q) < mbal (disk s' d qa) \\<longrightarrow>\n           hasRead s' q d qa\n  phase s q = 2", "show \"maxBalInp s (bal (dblock s q)) (inp (dblock s q))\""], ["proof (prove)\nusing this:\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s q) < mbal (disk s d qq) \\<and>\n           \\<not> hasRead s q d qq \\<Longrightarrow>\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n           \\<not> hasRead s' q d qq\n  HInv5_inner s q\n  \\<forall>D\\<in>MajoritySet.\n     \\<forall>qa.\n        \\<exists>d\\<in>D.\n           bal (dblock s' q) < mbal (disk s' d qa) \\<longrightarrow>\n           hasRead s' q d qa\n  phase s q = 2\n\ngoal (1 subgoal):\n 1. maxBalInp s (bal (dblock s q)) (inp (dblock s q))", "by(auto simp add: HInv5_inner_def HInv5_inner_R_def, blast)"], ["proof (state)\nthis:\n  maxBalInp s (bal (dblock s q)) (inp (dblock s q))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  maxBalInp s' (bal (dblock s' q)) (inp (dblock s' q))\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem HPhase0Read_HInv5:\n  \"\\<lbrakk> HPhase0Read s s' p d; HInv5_inner s q \\<rbrakk> \\<Longrightarrow> HInv5_inner s' q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>HPhase0Read s s' p d; HInv5_inner s q\\<rbrakk>\n    \\<Longrightarrow> HInv5_inner s' q", "by(blast dest: HPhase0Read_HInv5_q HPhase0Read_HInv5_p)"], ["", "lemma HEndPhase0_HInv5_p:\n  \"HEndPhase0 s s' p  \\<Longrightarrow> HInv5_inner s' p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HEndPhase0 s s' p \\<Longrightarrow> HInv5_inner s' p", "by(auto simp add: EndPhase0_def HInv5_inner_def)"], ["", "lemma  HEndPhase0_blocksOf_q:\n  assumes act: \"HEndPhase0 s s' p\"\n  and pnq: \"p\\<noteq>q\"\n  shows \"blocksOf s' q \\<subseteq> blocksOf s q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. blocksOf s' q \\<subseteq> blocksOf s q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. blocksOf s' q \\<subseteq> blocksOf s q", "from act pnq"], ["proof (chain)\npicking this:\n  HEndPhase0 s s' p\n  p \\<noteq> q", "have dblock: \"{dblock s' q} \\<subseteq> {dblock s q}\"\n    and disk: \"disk s' = disk s\"\n    and blks: \"blocksRead s' q = blocksRead s q\""], ["proof (prove)\nusing this:\n  HEndPhase0 s s' p\n  p \\<noteq> q\n\ngoal (1 subgoal):\n 1. {dblock s' q} \\<subseteq> {dblock s q} &&&\n    disk s' = disk s &&& blocksRead s' q = blocksRead s q", "by(auto simp add: EndPhase0_def InitializePhase_def)"], ["proof (state)\nthis:\n  {dblock s' q} \\<subseteq> {dblock s q}\n  disk s' = disk s\n  blocksRead s' q = blocksRead s q\n\ngoal (1 subgoal):\n 1. blocksOf s' q \\<subseteq> blocksOf s q", "from disk"], ["proof (chain)\npicking this:\n  disk s' = disk s", "have disk': \"{disk s' d q | d . d\\<in> UNIV} \\<subseteq> {disk s d q | d . d\\<in> UNIV}\" (is \"?D' \\<subseteq> ?D\")"], ["proof (prove)\nusing this:\n  disk s' = disk s\n\ngoal (1 subgoal):\n 1. {disk s' d q |d. d \\<in> UNIV} \\<subseteq> {disk s d q |d. d \\<in> UNIV}", "by auto"], ["proof (state)\nthis:\n  {disk s' d q |d. d \\<in> UNIV} \\<subseteq> {disk s d q |d. d \\<in> UNIV}\n\ngoal (1 subgoal):\n 1. blocksOf s' q \\<subseteq> blocksOf s q", "from pnq act"], ["proof (chain)\npicking this:\n  p \\<noteq> q\n  HEndPhase0 s s' p", "have \"(UN qq d. rdBy s' q qq d) \\<subseteq> (UN qq d. rdBy s q qq d)\""], ["proof (prove)\nusing this:\n  p \\<noteq> q\n  HEndPhase0 s s' p\n\ngoal (1 subgoal):\n 1. (\\<Union>qq. \\<Union> (range (rdBy s' q qq)))\n    \\<subseteq> (\\<Union>qq. \\<Union> (range (rdBy s q qq)))", "by(auto simp add: EndPhase0_def InitializePhase_def \n                rdBy_def split: if_split_asm, blast)"], ["proof (state)\nthis:\n  (\\<Union>qq. \\<Union> (range (rdBy s' q qq)))\n  \\<subseteq> (\\<Union>qq. \\<Union> (range (rdBy s q qq)))\n\ngoal (1 subgoal):\n 1. blocksOf s' q \\<subseteq> blocksOf s q", "hence \"{block br | br. br \\<in> (UN qq d. rdBy s' q qq d)} \\<subseteq> \n         {block br | br. br \\<in> (UN qq d. rdBy s q qq d)}\" \n    (is \"?R' \\<subseteq> ?R\")"], ["proof (prove)\nusing this:\n  (\\<Union>qq. \\<Union> (range (rdBy s' q qq)))\n  \\<subseteq> (\\<Union>qq. \\<Union> (range (rdBy s q qq)))\n\ngoal (1 subgoal):\n 1. {block br |br. br \\<in> (\\<Union>qq. \\<Union> (range (rdBy s' q qq)))}\n    \\<subseteq> {block br |br.\n                 br \\<in> (\\<Union>qq. \\<Union> (range (rdBy s q qq)))}", "by auto blast"], ["proof (state)\nthis:\n  {block br |br. br \\<in> (\\<Union>qq. \\<Union> (range (rdBy s' q qq)))}\n  \\<subseteq> {block br |br.\n               br \\<in> (\\<Union>qq. \\<Union> (range (rdBy s q qq)))}\n\ngoal (1 subgoal):\n 1. blocksOf s' q \\<subseteq> blocksOf s q", "from union_inclusion[OF dblock union_inclusion[OF disk' this]]"], ["proof (chain)\npicking this:\n  {dblock s' q} \\<union>\n  ({disk s' d q |d. d \\<in> UNIV} \\<union>\n   {block br |br. br \\<in> (\\<Union>qq. \\<Union> (range (rdBy s' q qq)))})\n  \\<subseteq> {dblock s q} \\<union>\n              ({disk s d q |d. d \\<in> UNIV} \\<union>\n               {block br |br.\n                br \\<in> (\\<Union>qq. \\<Union> (range (rdBy s q qq)))})", "show ?thesis"], ["proof (prove)\nusing this:\n  {dblock s' q} \\<union>\n  ({disk s' d q |d. d \\<in> UNIV} \\<union>\n   {block br |br. br \\<in> (\\<Union>qq. \\<Union> (range (rdBy s' q qq)))})\n  \\<subseteq> {dblock s q} \\<union>\n              ({disk s d q |d. d \\<in> UNIV} \\<union>\n               {block br |br.\n                br \\<in> (\\<Union>qq. \\<Union> (range (rdBy s q qq)))})\n\ngoal (1 subgoal):\n 1. blocksOf s' q \\<subseteq> blocksOf s q", "by(auto simp add: blocksOf_def)"], ["proof (state)\nthis:\n  blocksOf s' q \\<subseteq> blocksOf s q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HEndPhase0_allBlocks:\n  assumes act: \"HEndPhase0 s s' p\"\n  shows \"allBlocks s' \\<subseteq> allBlocks s \\<union> {dblock s' p}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. allBlocks s' \\<subseteq> allBlocks s \\<union> {dblock s' p}", "proof(auto simp del: HEndPhase0_def simp add: allBlocks_def\n           dest: HEndPhase0_blocksOf_q[OF act])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x pa.\n       \\<lbrakk>x \\<in> blocksOf s' pa;\n        \\<forall>xa. x \\<notin> blocksOf s xa\\<rbrakk>\n       \\<Longrightarrow> x = dblock s' p", "fix x pa"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x pa.\n       \\<lbrakk>x \\<in> blocksOf s' pa;\n        \\<forall>xa. x \\<notin> blocksOf s xa\\<rbrakk>\n       \\<Longrightarrow> x = dblock s' p", "assume x_pa: \"x \\<in> blocksOf s' pa\" and\n         x_nblks: \"\\<forall>xa. x \\<notin> blocksOf s xa\""], ["proof (state)\nthis:\n  x \\<in> blocksOf s' pa\n  \\<forall>xa. x \\<notin> blocksOf s xa\n\ngoal (1 subgoal):\n 1. \\<And>x pa.\n       \\<lbrakk>x \\<in> blocksOf s' pa;\n        \\<forall>xa. x \\<notin> blocksOf s xa\\<rbrakk>\n       \\<Longrightarrow> x = dblock s' p", "show \"x=dblock s' p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = dblock s' p", "proof(cases \"p=pa\")"], ["proof (state)\ngoal (2 subgoals):\n 1. p = pa \\<Longrightarrow> x = dblock s' p\n 2. p \\<noteq> pa \\<Longrightarrow> x = dblock s' p", "case True"], ["proof (state)\nthis:\n  p = pa\n\ngoal (2 subgoals):\n 1. p = pa \\<Longrightarrow> x = dblock s' p\n 2. p \\<noteq> pa \\<Longrightarrow> x = dblock s' p", "from x_nblks"], ["proof (chain)\npicking this:\n  \\<forall>xa. x \\<notin> blocksOf s xa", "have \"x \\<notin> blocksOf s p\""], ["proof (prove)\nusing this:\n  \\<forall>xa. x \\<notin> blocksOf s xa\n\ngoal (1 subgoal):\n 1. x \\<notin> blocksOf s p", "by auto"], ["proof (state)\nthis:\n  x \\<notin> blocksOf s p\n\ngoal (2 subgoals):\n 1. p = pa \\<Longrightarrow> x = dblock s' p\n 2. p \\<noteq> pa \\<Longrightarrow> x = dblock s' p", "with True subsetD[OF HEndPhase0_blocksOf[OF act] x_pa]"], ["proof (chain)\npicking this:\n  p = pa\n  x \\<in> blocksOf s pa \\<union> {dblock s' pa}\n  x \\<notin> blocksOf s p", "show ?thesis"], ["proof (prove)\nusing this:\n  p = pa\n  x \\<in> blocksOf s pa \\<union> {dblock s' pa}\n  x \\<notin> blocksOf s p\n\ngoal (1 subgoal):\n 1. x = dblock s' p", "by auto"], ["proof (state)\nthis:\n  x = dblock s' p\n\ngoal (1 subgoal):\n 1. p \\<noteq> pa \\<Longrightarrow> x = dblock s' p", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. p \\<noteq> pa \\<Longrightarrow> x = dblock s' p", "case False"], ["proof (state)\nthis:\n  p \\<noteq> pa\n\ngoal (1 subgoal):\n 1. p \\<noteq> pa \\<Longrightarrow> x = dblock s' p", "from x_nblks subsetD[OF HEndPhase0_blocksOf_q[OF act False] x_pa]"], ["proof (chain)\npicking this:\n  \\<forall>xa. x \\<notin> blocksOf s xa\n  x \\<in> blocksOf s pa", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>xa. x \\<notin> blocksOf s xa\n  x \\<in> blocksOf s pa\n\ngoal (1 subgoal):\n 1. x = dblock s' p", "by auto"], ["proof (state)\nthis:\n  x = dblock s' p\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x = dblock s' p\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HEndPhase0_HInv5_q1:\n  assumes act: \"HEndPhase0 s s' p\"\n  and pnq: \"p\\<noteq>q\"\n  and inv1: \"Inv1 s\"\n  and inv5_1: \"maxBalInp s (bal(dblock s q)) (inp(dblock s q))\"\n  shows \"maxBalInp s' (bal(dblock s' q)) (inp(dblock s' q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. maxBalInp s' (bal (dblock s' q)) (inp (dblock s' q))", "proof(auto simp add: maxBalInp_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>bk.\n       \\<lbrakk>bk \\<in> allBlocks s';\n        bal (dblock s' q) \\<le> bal bk\\<rbrakk>\n       \\<Longrightarrow> inp bk = inp (dblock s' q)", "fix bk"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>bk.\n       \\<lbrakk>bk \\<in> allBlocks s';\n        bal (dblock s' q) \\<le> bal bk\\<rbrakk>\n       \\<Longrightarrow> inp bk = inp (dblock s' q)", "assume bk: \"bk \\<in> allBlocks s'\"\n    and bal: \"bal (dblock s' q) \\<le> bal bk\""], ["proof (state)\nthis:\n  bk \\<in> allBlocks s'\n  bal (dblock s' q) \\<le> bal bk\n\ngoal (1 subgoal):\n 1. \\<And>bk.\n       \\<lbrakk>bk \\<in> allBlocks s';\n        bal (dblock s' q) \\<le> bal bk\\<rbrakk>\n       \\<Longrightarrow> inp bk = inp (dblock s' q)", "from act pnq"], ["proof (chain)\npicking this:\n  HEndPhase0 s s' p\n  p \\<noteq> q", "have dblock': \"dblock s' q = dblock s q\""], ["proof (prove)\nusing this:\n  HEndPhase0 s s' p\n  p \\<noteq> q\n\ngoal (1 subgoal):\n 1. dblock s' q = dblock s q", "by(auto simp add: EndPhase0_def)"], ["proof (state)\nthis:\n  dblock s' q = dblock s q\n\ngoal (1 subgoal):\n 1. \\<And>bk.\n       \\<lbrakk>bk \\<in> allBlocks s';\n        bal (dblock s' q) \\<le> bal bk\\<rbrakk>\n       \\<Longrightarrow> inp bk = inp (dblock s' q)", "from subsetD[OF HEndPhase0_allBlocks[OF act] bk]"], ["proof (chain)\npicking this:\n  bk \\<in> allBlocks s \\<union> {dblock s' p}", "show \"inp bk = inp (dblock s' q)\""], ["proof (prove)\nusing this:\n  bk \\<in> allBlocks s \\<union> {dblock s' p}\n\ngoal (1 subgoal):\n 1. inp bk = inp (dblock s' q)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. bk \\<in> allBlocks s \\<Longrightarrow> inp bk = inp (dblock s' q)\n 2. bk \\<in> {dblock s' p} \\<Longrightarrow> inp bk = inp (dblock s' q)", "assume bk: \"bk \\<in> allBlocks s\""], ["proof (state)\nthis:\n  bk \\<in> allBlocks s\n\ngoal (2 subgoals):\n 1. bk \\<in> allBlocks s \\<Longrightarrow> inp bk = inp (dblock s' q)\n 2. bk \\<in> {dblock s' p} \\<Longrightarrow> inp bk = inp (dblock s' q)", "with inv5_1 dblock' bal"], ["proof (chain)\npicking this:\n  maxBalInp s (bal (dblock s q)) (inp (dblock s q))\n  dblock s' q = dblock s q\n  bal (dblock s' q) \\<le> bal bk\n  bk \\<in> allBlocks s", "show ?thesis"], ["proof (prove)\nusing this:\n  maxBalInp s (bal (dblock s q)) (inp (dblock s q))\n  dblock s' q = dblock s q\n  bal (dblock s' q) \\<le> bal bk\n  bk \\<in> allBlocks s\n\ngoal (1 subgoal):\n 1. inp bk = inp (dblock s' q)", "by(auto simp add: maxBalInp_def)"], ["proof (state)\nthis:\n  inp bk = inp (dblock s' q)\n\ngoal (1 subgoal):\n 1. bk \\<in> {dblock s' p} \\<Longrightarrow> inp bk = inp (dblock s' q)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. bk \\<in> {dblock s' p} \\<Longrightarrow> inp bk = inp (dblock s' q)", "assume bk: \"bk \\<in> {dblock s' p}\""], ["proof (state)\nthis:\n  bk \\<in> {dblock s' p}\n\ngoal (1 subgoal):\n 1. bk \\<in> {dblock s' p} \\<Longrightarrow> inp bk = inp (dblock s' q)", "with HEndPhase0_some[OF act inv1] act"], ["proof (chain)\npicking this:\n  (SOME b.\n      b \\<in> allBlocksRead s p \\<and>\n      (\\<forall>t\\<in>allBlocksRead s p. bal t \\<le> bal b))\n  \\<in> allBlocksRead s p \\<and>\n  (\\<forall>t\\<in>allBlocksRead s p.\n      bal t\n      \\<le> bal (SOME b.\n                    b \\<in> allBlocksRead s p \\<and>\n                    (\\<forall>t\\<in>allBlocksRead s p. bal t \\<le> bal b)))\n  HEndPhase0 s s' p\n  bk \\<in> {dblock s' p}", "have \"\\<exists>ba\\<in>allBlocksRead s p. bal ba = bal (dblock s' p) \\<and> inp ba = inp (dblock s' p)\""], ["proof (prove)\nusing this:\n  (SOME b.\n      b \\<in> allBlocksRead s p \\<and>\n      (\\<forall>t\\<in>allBlocksRead s p. bal t \\<le> bal b))\n  \\<in> allBlocksRead s p \\<and>\n  (\\<forall>t\\<in>allBlocksRead s p.\n      bal t\n      \\<le> bal (SOME b.\n                    b \\<in> allBlocksRead s p \\<and>\n                    (\\<forall>t\\<in>allBlocksRead s p. bal t \\<le> bal b)))\n  HEndPhase0 s s' p\n  bk \\<in> {dblock s' p}\n\ngoal (1 subgoal):\n 1. \\<exists>ba\\<in>allBlocksRead s p.\n       bal ba = bal (dblock s' p) \\<and> inp ba = inp (dblock s' p)", "by(auto simp add: EndPhase0_def)"], ["proof (state)\nthis:\n  \\<exists>ba\\<in>allBlocksRead s p.\n     bal ba = bal (dblock s' p) \\<and> inp ba = inp (dblock s' p)\n\ngoal (1 subgoal):\n 1. bk \\<in> {dblock s' p} \\<Longrightarrow> inp bk = inp (dblock s' q)", "then"], ["proof (chain)\npicking this:\n  \\<exists>ba\\<in>allBlocksRead s p.\n     bal ba = bal (dblock s' p) \\<and> inp ba = inp (dblock s' p)", "obtain ba \n      where ba_blksread: \"ba\\<in>allBlocksRead s p\" \n      and ba_balinp: \"bal ba = bal (dblock s' p) \\<and> inp ba = inp (dblock s' p)\""], ["proof (prove)\nusing this:\n  \\<exists>ba\\<in>allBlocksRead s p.\n     bal ba = bal (dblock s' p) \\<and> inp ba = inp (dblock s' p)\n\ngoal (1 subgoal):\n 1. (\\<And>ba.\n        \\<lbrakk>ba \\<in> allBlocksRead s p;\n         bal ba = bal (dblock s' p) \\<and>\n         inp ba = inp (dblock s' p)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  ba \\<in> allBlocksRead s p\n  bal ba = bal (dblock s' p) \\<and> inp ba = inp (dblock s' p)\n\ngoal (1 subgoal):\n 1. bk \\<in> {dblock s' p} \\<Longrightarrow> inp bk = inp (dblock s' q)", "have \"allBlocksRead s p \\<subseteq> allBlocks s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. allBlocksRead s p \\<subseteq> allBlocks s", "by(auto simp add: allBlocksRead_def allRdBlks_def \n                      allBlocks_def blocksOf_def rdBy_def)"], ["proof (state)\nthis:\n  allBlocksRead s p \\<subseteq> allBlocks s\n\ngoal (1 subgoal):\n 1. bk \\<in> {dblock s' p} \\<Longrightarrow> inp bk = inp (dblock s' q)", "from subsetD[OF this ba_blksread] ba_balinp bal bk dblock' inv5_1"], ["proof (chain)\npicking this:\n  ba \\<in> allBlocks s\n  bal ba = bal (dblock s' p) \\<and> inp ba = inp (dblock s' p)\n  bal (dblock s' q) \\<le> bal bk\n  bk \\<in> {dblock s' p}\n  dblock s' q = dblock s q\n  maxBalInp s (bal (dblock s q)) (inp (dblock s q))", "show ?thesis"], ["proof (prove)\nusing this:\n  ba \\<in> allBlocks s\n  bal ba = bal (dblock s' p) \\<and> inp ba = inp (dblock s' p)\n  bal (dblock s' q) \\<le> bal bk\n  bk \\<in> {dblock s' p}\n  dblock s' q = dblock s q\n  maxBalInp s (bal (dblock s q)) (inp (dblock s q))\n\ngoal (1 subgoal):\n 1. inp bk = inp (dblock s' q)", "by(auto simp add: maxBalInp_def)"], ["proof (state)\nthis:\n  inp bk = inp (dblock s' q)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inp bk = inp (dblock s' q)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HEndPhase0_HInv5_q2:\n  assumes act: \"HEndPhase0 s s' p\"\n  and pnq: \"p\\<noteq>q\"\n  and inv5_2: \"\\<exists>D\\<in>MajoritySet. \\<exists>qq. (\\<forall>d\\<in>D.    bal(dblock s q) < mbal(disk s d qq)\n                                     \\<and> \\<not>hasRead s q d qq)\"\n  shows \"\\<exists>D\\<in>MajoritySet. \\<exists>qq. (\\<forall>d\\<in>D.    bal(dblock s' q) < mbal(disk s' d qq)\n                                     \\<and> \\<not>hasRead s' q d qq)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n             \\<not> hasRead s' q d qq", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n             \\<not> hasRead s' q d qq", "from act pnq"], ["proof (chain)\npicking this:\n  HEndPhase0 s s' p\n  p \\<noteq> q", "have  disk: \"disk s' = disk s\"\n    and blocksRead: \"\\<forall>d. blocksRead s' q d = blocksRead s q d\"\n    and dblock: \"dblock s' q = dblock s q\""], ["proof (prove)\nusing this:\n  HEndPhase0 s s' p\n  p \\<noteq> q\n\ngoal (1 subgoal):\n 1. disk s' = disk s &&&\n    \\<forall>d. blocksRead s' q d = blocksRead s q d &&&\n    dblock s' q = dblock s q", "by(auto simp add: EndPhase0_def InitializePhase_def)"], ["proof (state)\nthis:\n  disk s' = disk s\n  \\<forall>d. blocksRead s' q d = blocksRead s q d\n  dblock s' q = dblock s q\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n             \\<not> hasRead s' q d qq", "with inv5_2"], ["proof (chain)\npicking this:\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s q) < mbal (disk s d qq) \\<and>\n           \\<not> hasRead s q d qq\n  disk s' = disk s\n  \\<forall>d. blocksRead s' q d = blocksRead s q d\n  dblock s' q = dblock s q", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s q) < mbal (disk s d qq) \\<and>\n           \\<not> hasRead s q d qq\n  disk s' = disk s\n  \\<forall>d. blocksRead s' q d = blocksRead s q d\n  dblock s' q = dblock s q\n\ngoal (1 subgoal):\n 1. \\<exists>D\\<in>MajoritySet.\n       \\<exists>qq.\n          \\<forall>d\\<in>D.\n             bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n             \\<not> hasRead s' q d qq", "by(auto simp add: hasRead_def)"], ["proof (state)\nthis:\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n           \\<not> hasRead s' q d qq\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma HEndPhase0_HInv5_q:\n  assumes act: \"HEndPhase0 s s' p\"\n  and inv: \"HInv5_inner s q\"\n  and inv1: \"Inv1 s\"\n  and pnq: \"p\\<noteq>q\"\n  shows \"HInv5_inner s' q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HInv5_inner s' q", "using assms and\n    HEndPhase0_HInv5_q1[OF act pnq inv1] \n    HEndPhase0_HInv5_q2[OF act pnq]"], ["proof (prove)\nusing this:\n  HEndPhase0 s s' p\n  HInv5_inner s q\n  Inv1 s\n  p \\<noteq> q\n  maxBalInp s (bal (dblock s q)) (inp (dblock s q)) \\<Longrightarrow>\n  maxBalInp s' (bal (dblock s' q)) (inp (dblock s' q))\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s q) < mbal (disk s d qq) \\<and>\n           \\<not> hasRead s q d qq \\<Longrightarrow>\n  \\<exists>D\\<in>MajoritySet.\n     \\<exists>qq.\n        \\<forall>d\\<in>D.\n           bal (dblock s' q) < mbal (disk s' d qq) \\<and>\n           \\<not> hasRead s' q d qq\n\ngoal (1 subgoal):\n 1. HInv5_inner s' q", "by(auto simp add: HInv5_inner_def HInv5_inner_R_def EndPhase0_def)"], ["", "theorem HEndPhase0_HInv5:\n  \"\\<lbrakk> HEndPhase0 s s' p; HInv5_inner s q; Inv1 s \\<rbrakk> \\<Longrightarrow> HInv5_inner s' q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>HEndPhase0 s s' p; HInv5_inner s q; Inv1 s\\<rbrakk>\n    \\<Longrightarrow> HInv5_inner s' q", "by(blast dest: HEndPhase0_HInv5_q HEndPhase0_HInv5_p)"], ["", "text\\<open>\n  $HInv1 \\wedge HInv2 \\wedge HInv3 \\wedge HInv4 \\wedge HInv5$ is an invariant of $HNext$.\n\n\\<close>"], ["", "lemma I2e:\n  assumes nxt: \"HNext s s'\"\n  and inv: \"HInv1 s \\<and> HInv2 s \\<and> HInv2 s' \\<and> HInv3 s \\<and> HInv4 s \\<and> HInv5 s\"\n  shows \"HInv5 s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HInv5 s'", "using assms"], ["proof (prove)\nusing this:\n  HNext s s'\n  HInv1 s \\<and>\n  HInv2 s \\<and> HInv2 s' \\<and> HInv3 s \\<and> HInv4 s \\<and> HInv5 s\n\ngoal (1 subgoal):\n 1. HInv5 s'", "by(auto simp add: HInv5_def HNext_def Next_def,\n       auto simp add: HInv2_def intro: HStartBallot_HInv5,\n       auto intro: HPhase0Read_HInv5,\n        auto simp add: HInv4_def intro: HPhase1or2Write_HInv5,\n        auto simp add: Phase1or2Read_def\n             intro: HPhase1or2ReadThen_HInv5\n                    HPhase1or2ReadElse_HInv5,\n        auto simp add: EndPhase1or2_def HInv1_def HInv4_def HInv5_def\n             intro: HEndPhase1_HInv5\n                    HEndPhase2_HInv5,\n        auto intro: HFail_HInv5,\n        auto intro: HEndPhase0_HInv5 simp add: HInv1_def)"], ["", "end"]]}