{"file_name": "/home/qj213/afp-2021-10-22/thys/Triangle/Triangle.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Triangle", "problem_names": ["theorem thales:\n  fixes A B C :: \"'a :: real_inner\"\n  assumes \"dist B (midpoint A C) = dist A C / 2\"\n  shows   \"orthogonal (A - B) (C - B)\"", "lemma cosine_law_vector:\n  \"norm (u - v) ^ 2 = norm u ^ 2 + norm v ^ 2 - 2 * norm u * norm v * cos (vangle u v)\"", "lemma cosine_law_triangle:\n  \"dist b c ^ 2 = dist a b ^ 2 + dist a c ^ 2 - 2 * dist a b * dist a c * cos (angle b a c)\"", "lemma sine_law_triangle:\n  \"sin (angle a b c) * dist b c = sin (angle b a c) * dist a c\" (is \"?A = ?B\")", "lemma cosine_law_triangle':\n  \"2 * dist a b * dist a c * cos (angle b a c) = (dist a b ^ 2 + dist a c ^ 2 - dist b c ^ 2)\"", "lemma cosine_law_triangle'':\n  \"cos (angle b a c) = (dist a b ^ 2 + dist a c ^ 2 - dist b c ^ 2) / (2 * dist a b * dist a c)\"", "lemma sine_law_triangle':\n  \"b \\<noteq> c \\<Longrightarrow> sin (angle a b c) = sin (angle b a c) * dist a c / dist b c\"", "lemma sine_law_triangle'':\n  \"b \\<noteq> c \\<Longrightarrow> sin (angle c b a) = sin (angle b a c) * dist a c / dist b c\"", "lemma gather_squares: \"a * (a * b) = a^2 * (b :: real)\"", "lemma eval_power: \"x ^ numeral n = x * x ^ pred_numeral n\"", "lemma angle_sum_triangle:\n  assumes \"a \\<noteq> b \\<or> b \\<noteq> c \\<or> a \\<noteq> c\"\n  shows   \"angle c a b + angle a b c + angle b c a = pi\"", "lemma similar_triangle_aa:\n  assumes \"b1 \\<noteq> c1\" \"b2 \\<noteq> c2\"\n  assumes \"angle a1 b1 c1 = angle a2 b2 c2\"\n  assumes \"angle b1 c1 a1 = angle b2 c2 a2\"\n  shows   \"angle b1 a1 c1 = angle b2 a2 c2\"", "lemma sides:\n  \"dist a1 b1 = dist a2 b2\" \"dist a1 c1 = dist a2 c2\" \"dist b1 c1 = dist b2 c2\"\n  \"dist b1 a1 = dist a2 b2\" \"dist c1 a1 = dist a2 c2\" \"dist c1 b1 = dist b2 c2\"\n  \"dist a1 b1 = dist b2 a2\" \"dist a1 c1 = dist c2 a2\" \"dist b1 c1 = dist c2 b2\"\n  \"dist b1 a1 = dist b2 a2\" \"dist c1 a1 = dist c2 a2\" \"dist c1 b1 = dist c2 b2\"", "lemma angles:\n  \"angle b1 a1 c1 = angle b2 a2 c2\" \"angle a1 b1 c1 = angle a2 b2 c2\" \"angle a1 c1 b1 = angle a2 c2 b2\"\n  \"angle c1 a1 b1 = angle b2 a2 c2\" \"angle c1 b1 a1 = angle a2 b2 c2\" \"angle b1 c1 a1 = angle a2 c2 b2\"\n  \"angle b1 a1 c1 = angle c2 a2 b2\" \"angle a1 b1 c1 = angle c2 b2 a2\" \"angle a1 c1 b1 = angle b2 c2 a2\"\n  \"angle c1 a1 b1 = angle c2 a2 b2\" \"angle c1 b1 a1 = angle c2 b2 a2\" \"angle b1 c1 a1 = angle b2 c2 a2\"", "lemmas congruent_triangleD = congruent_triangle.sides congruent_triangle.angles", "lemma congruent_triangleI_sss:\n  fixes a1 b1 c1 :: \"'a :: real_inner\" and a2 b2 c2 :: \"'b :: real_inner\"\n  assumes \"dist a1 b1 = dist a2 b2\"\n  assumes \"dist b1 c1 = dist b2 c2\"\n  assumes \"dist a1 c1 = dist a2 c2\"\n  shows   \"congruent_triangle a1 b1 c1 a2 b2 c2\"", "lemmas congruent_triangle_sss = congruent_triangleD[OF congruent_triangleI_sss]", "lemma congruent_triangleI_sas:\n  assumes \"dist a1 b1 = dist a2 b2\"\n  assumes \"dist b1 c1 = dist b2 c2\"\n  assumes \"angle a1 b1 c1 = angle a2 b2 c2\"\n  shows   \"congruent_triangle a1 b1 c1 a2 b2 c2\"", "lemmas congruent_triangle_sas = congruent_triangleD[OF congruent_triangleI_sas]", "lemma congruent_triangleI_aas:\n  assumes \"angle a1 b1 c1 = angle a2 b2 c2\"\n  assumes \"angle b1 c1 a1 = angle b2 c2 a2\"\n  assumes \"dist a1 b1 = dist a2 b2\"\n  assumes \"\\<not>collinear {a1,b1,c1}\"\n  shows   \"congruent_triangle a1 b1 c1 a2 b2 c2\"", "lemmas congruent_triangle_aas = congruent_triangleD[OF congruent_triangleI_aas]", "lemma congruent_triangleI_asa:\n  assumes \"angle a1 b1 c1 = angle a2 b2 c2\"\n  assumes \"dist a1 b1 = dist a2 b2\"\n  assumes \"angle b1 a1 c1 = angle b2 a2 c2\"\n  assumes \"\\<not>collinear {a1, b1, c1}\"\n  shows   \"congruent_triangle a1 b1 c1 a2 b2 c2\"", "lemmas congruent_triangle_asa = congruent_triangleD[OF congruent_triangleI_asa]", "lemma isosceles_triangle:\n  assumes \"dist a c = dist b c\"\n  shows   \"angle b a c = angle a b c\"", "lemma isosceles_triangle_converse:\n  assumes \"angle a b c = angle b a c\" \"\\<not>collinear {a,b,c}\"\n  shows   \"dist a c = dist b c\"", "lemma Pythagoras:\n  fixes A B C :: \"'a :: real_inner\"\n  assumes \"orthogonal (A - C) (B - C)\"\n  shows \"(dist B C) ^ 2 + (dist C A) ^ 2 = (dist A B) ^ 2\"", "lemma isosceles_triangle_orthogonal_on_midpoint:\n  fixes A B C :: \"'a :: euclidean_space\"\n  assumes \"dist C A = dist C B\"\n  shows \"orthogonal (C - midpoint A B) (A - midpoint A B)\""], "translations": [["", "theorem thales:\n  fixes A B C :: \"'a :: real_inner\"\n  assumes \"dist B (midpoint A C) = dist A C / 2\"\n  shows   \"orthogonal (A - B) (C - B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. orthogonal (A - B) (C - B)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. orthogonal (A - B) (C - B)", "have \"dist A C ^ 2 = dist B (midpoint A C) ^ 2 * 4\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (dist A C)\\<^sup>2 = (dist B (midpoint A C))\\<^sup>2 * 4", "by (subst assms) (simp add: field_simps power2_eq_square)"], ["proof (state)\nthis:\n  (dist A C)\\<^sup>2 = (dist B (midpoint A C))\\<^sup>2 * 4\n\ngoal (1 subgoal):\n 1. orthogonal (A - B) (C - B)", "thus ?thesis"], ["proof (prove)\nusing this:\n  (dist A C)\\<^sup>2 = (dist B (midpoint A C))\\<^sup>2 * 4\n\ngoal (1 subgoal):\n 1. orthogonal (A - B) (C - B)", "by (auto simp: orthogonal_def dist_norm power2_norm_eq_inner midpoint_def\n                   algebra_simps inner_commute)"], ["proof (state)\nthis:\n  orthogonal (A - B) (C - B)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Sine and cosine laws\\<close>"], ["", "text \\<open>\n  The proof of the Law of Cosines follows trivially from the definition of the angle,\n  the definition of the norm in vector spaces with an inner product and the bilinearity\n  of the inner product.\n\\<close>"], ["", "lemma cosine_law_vector:\n  \"norm (u - v) ^ 2 = norm u ^ 2 + norm v ^ 2 - 2 * norm u * norm v * cos (vangle u v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (norm (u - v))\\<^sup>2 =\n    (norm u)\\<^sup>2 + (norm v)\\<^sup>2 -\n    2 * norm u * norm v * cos (vangle u v)", "by (simp add: power2_norm_eq_inner cos_vangle algebra_simps inner_commute)"], ["", "lemma cosine_law_triangle:\n  \"dist b c ^ 2 = dist a b ^ 2 + dist a c ^ 2 - 2 * dist a b * dist a c * cos (angle b a c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (dist b c)\\<^sup>2 =\n    (dist a b)\\<^sup>2 + (dist a c)\\<^sup>2 -\n    2 * dist a b * dist a c * cos (angle b a c)", "using cosine_law_vector[of \"b - a\" \"c - a\"]"], ["proof (prove)\nusing this:\n  (norm (b - a - (c - a)))\\<^sup>2 =\n  (norm (b - a))\\<^sup>2 + (norm (c - a))\\<^sup>2 -\n  2 * norm (b - a) * norm (c - a) * cos (vangle (b - a) (c - a))\n\ngoal (1 subgoal):\n 1. (dist b c)\\<^sup>2 =\n    (dist a b)\\<^sup>2 + (dist a c)\\<^sup>2 -\n    2 * dist a b * dist a c * cos (angle b a c)", "by (simp add: dist_norm angle_def vangle_commute norm_minus_commute)"], ["", "text \\<open>\n  According to our definition, angles are always between $0$ and $\\pi$ and therefore,\n  the sign of an angle is always non-negative. We can therefore look at\n  $\\sin(\\alpha)^2$, which we can express in terms of $\\cos(\\alpha)$ using the\n  identity $\\sin(\\alpha)^2 + \\cos(\\alpha)^2 = 1$. The remaining proof is then a\n  trivial consequence of the definitions.\n\\<close>"], ["", "lemma sine_law_triangle:\n  \"sin (angle a b c) * dist b c = sin (angle b a c) * dist a c\" (is \"?A = ?B\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. sin (angle a b c) * dist b c = sin (angle b a c) * dist a c", "proof (cases \"a = b\")"], ["proof (state)\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    sin (angle a b c) * dist b c = sin (angle b a c) * dist a c\n 2. a \\<noteq> b \\<Longrightarrow>\n    sin (angle a b c) * dist b c = sin (angle b a c) * dist a c", "assume neq: \"a \\<noteq> b\""], ["proof (state)\nthis:\n  a \\<noteq> b\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    sin (angle a b c) * dist b c = sin (angle b a c) * dist a c\n 2. a \\<noteq> b \\<Longrightarrow>\n    sin (angle a b c) * dist b c = sin (angle b a c) * dist a c", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. sin (angle a b c) * dist b c = sin (angle b a c) * dist a c", "proof (rule power2_eq_imp_eq)"], ["proof (state)\ngoal (3 subgoals):\n 1. (sin (angle a b c) * dist b c)\\<^sup>2 =\n    (sin (angle b a c) * dist a c)\\<^sup>2\n 2. 0 \\<le> sin (angle a b c) * dist b c\n 3. 0 \\<le> sin (angle b a c) * dist a c", "from neq"], ["proof (chain)\npicking this:\n  a \\<noteq> b", "have \"(sin (angle a b c) * dist b c) ^ 2 * dist a b ^ 2 =\n                     dist a b ^ 2 * dist b c ^ 2 - ((a - b) \\<bullet> (c - b)) ^ 2\""], ["proof (prove)\nusing this:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. (sin (angle a b c) * dist b c)\\<^sup>2 * (dist a b)\\<^sup>2 =\n    (dist a b)\\<^sup>2 * (dist b c)\\<^sup>2 -\n    ((a - b) \\<bullet> (c - b))\\<^sup>2", "by (simp add: sin_squared_eq cos_angle dist_commute field_simps)"], ["proof (state)\nthis:\n  (sin (angle a b c) * dist b c)\\<^sup>2 * (dist a b)\\<^sup>2 =\n  (dist a b)\\<^sup>2 * (dist b c)\\<^sup>2 -\n  ((a - b) \\<bullet> (c - b))\\<^sup>2\n\ngoal (3 subgoals):\n 1. (sin (angle a b c) * dist b c)\\<^sup>2 =\n    (sin (angle b a c) * dist a c)\\<^sup>2\n 2. 0 \\<le> sin (angle a b c) * dist b c\n 3. 0 \\<le> sin (angle b a c) * dist a c", "also"], ["proof (state)\nthis:\n  (sin (angle a b c) * dist b c)\\<^sup>2 * (dist a b)\\<^sup>2 =\n  (dist a b)\\<^sup>2 * (dist b c)\\<^sup>2 -\n  ((a - b) \\<bullet> (c - b))\\<^sup>2\n\ngoal (3 subgoals):\n 1. (sin (angle a b c) * dist b c)\\<^sup>2 =\n    (sin (angle b a c) * dist a c)\\<^sup>2\n 2. 0 \\<le> sin (angle a b c) * dist b c\n 3. 0 \\<le> sin (angle b a c) * dist a c", "have \"\\<dots> = dist a b ^ 2 * dist a c ^ 2 - ((b - a) \\<bullet> (c - a)) ^ 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (dist a b)\\<^sup>2 * (dist b c)\\<^sup>2 -\n    ((a - b) \\<bullet> (c - b))\\<^sup>2 =\n    (dist a b)\\<^sup>2 * (dist a c)\\<^sup>2 -\n    ((b - a) \\<bullet> (c - a))\\<^sup>2", "by (simp only: dist_norm power2_norm_eq_inner)\n         (simp add: power2_eq_square algebra_simps inner_commute)"], ["proof (state)\nthis:\n  (dist a b)\\<^sup>2 * (dist b c)\\<^sup>2 -\n  ((a - b) \\<bullet> (c - b))\\<^sup>2 =\n  (dist a b)\\<^sup>2 * (dist a c)\\<^sup>2 -\n  ((b - a) \\<bullet> (c - a))\\<^sup>2\n\ngoal (3 subgoals):\n 1. (sin (angle a b c) * dist b c)\\<^sup>2 =\n    (sin (angle b a c) * dist a c)\\<^sup>2\n 2. 0 \\<le> sin (angle a b c) * dist b c\n 3. 0 \\<le> sin (angle b a c) * dist a c", "also"], ["proof (state)\nthis:\n  (dist a b)\\<^sup>2 * (dist b c)\\<^sup>2 -\n  ((a - b) \\<bullet> (c - b))\\<^sup>2 =\n  (dist a b)\\<^sup>2 * (dist a c)\\<^sup>2 -\n  ((b - a) \\<bullet> (c - a))\\<^sup>2\n\ngoal (3 subgoals):\n 1. (sin (angle a b c) * dist b c)\\<^sup>2 =\n    (sin (angle b a c) * dist a c)\\<^sup>2\n 2. 0 \\<le> sin (angle a b c) * dist b c\n 3. 0 \\<le> sin (angle b a c) * dist a c", "from neq"], ["proof (chain)\npicking this:\n  a \\<noteq> b", "have \"\\<dots> = (sin (angle b a c) * dist a c) ^ 2 * dist a b ^ 2\""], ["proof (prove)\nusing this:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. (dist a b)\\<^sup>2 * (dist a c)\\<^sup>2 -\n    ((b - a) \\<bullet> (c - a))\\<^sup>2 =\n    (sin (angle b a c) * dist a c)\\<^sup>2 * (dist a b)\\<^sup>2", "by (simp add: sin_squared_eq cos_angle dist_commute field_simps)"], ["proof (state)\nthis:\n  (dist a b)\\<^sup>2 * (dist a c)\\<^sup>2 -\n  ((b - a) \\<bullet> (c - a))\\<^sup>2 =\n  (sin (angle b a c) * dist a c)\\<^sup>2 * (dist a b)\\<^sup>2\n\ngoal (3 subgoals):\n 1. (sin (angle a b c) * dist b c)\\<^sup>2 =\n    (sin (angle b a c) * dist a c)\\<^sup>2\n 2. 0 \\<le> sin (angle a b c) * dist b c\n 3. 0 \\<le> sin (angle b a c) * dist a c", "finally"], ["proof (chain)\npicking this:\n  (sin (angle a b c) * dist b c)\\<^sup>2 * (dist a b)\\<^sup>2 =\n  (sin (angle b a c) * dist a c)\\<^sup>2 * (dist a b)\\<^sup>2", "show \"?A^2 = ?B^2\""], ["proof (prove)\nusing this:\n  (sin (angle a b c) * dist b c)\\<^sup>2 * (dist a b)\\<^sup>2 =\n  (sin (angle b a c) * dist a c)\\<^sup>2 * (dist a b)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (sin (angle a b c) * dist b c)\\<^sup>2 =\n    (sin (angle b a c) * dist a c)\\<^sup>2", "using neq"], ["proof (prove)\nusing this:\n  (sin (angle a b c) * dist b c)\\<^sup>2 * (dist a b)\\<^sup>2 =\n  (sin (angle b a c) * dist a c)\\<^sup>2 * (dist a b)\\<^sup>2\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. (sin (angle a b c) * dist b c)\\<^sup>2 =\n    (sin (angle b a c) * dist a c)\\<^sup>2", "by (subst (asm) mult_cancel_right) simp_all"], ["proof (state)\nthis:\n  (sin (angle a b c) * dist b c)\\<^sup>2 =\n  (sin (angle b a c) * dist a c)\\<^sup>2\n\ngoal (2 subgoals):\n 1. 0 \\<le> sin (angle a b c) * dist b c\n 2. 0 \\<le> sin (angle b a c) * dist a c", "qed (auto intro!: mult_nonneg_nonneg sin_angle_nonneg)"], ["proof (state)\nthis:\n  sin (angle a b c) * dist b c = sin (angle b a c) * dist a c\n\ngoal (1 subgoal):\n 1. a = b \\<Longrightarrow>\n    sin (angle a b c) * dist b c = sin (angle b a c) * dist a c", "qed simp_all"], ["", "text \\<open>\n  The following forms of the Law of Sines/Cosines are more convenient for eliminating\n  sines/cosines from a goal completely.\n\\<close>"], ["", "lemma cosine_law_triangle':\n  \"2 * dist a b * dist a c * cos (angle b a c) = (dist a b ^ 2 + dist a c ^ 2 - dist b c ^ 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * dist a b * dist a c * cos (angle b a c) =\n    (dist a b)\\<^sup>2 + (dist a c)\\<^sup>2 - (dist b c)\\<^sup>2", "using cosine_law_triangle[of b c a]"], ["proof (prove)\nusing this:\n  (dist b c)\\<^sup>2 =\n  (dist a b)\\<^sup>2 + (dist a c)\\<^sup>2 -\n  2 * dist a b * dist a c * cos (angle b a c)\n\ngoal (1 subgoal):\n 1. 2 * dist a b * dist a c * cos (angle b a c) =\n    (dist a b)\\<^sup>2 + (dist a c)\\<^sup>2 - (dist b c)\\<^sup>2", "by simp"], ["", "lemma cosine_law_triangle'':\n  \"cos (angle b a c) = (dist a b ^ 2 + dist a c ^ 2 - dist b c ^ 2) / (2 * dist a b * dist a c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cos (angle b a c) =\n    ((dist a b)\\<^sup>2 + (dist a c)\\<^sup>2 - (dist b c)\\<^sup>2) /\n    (2 * dist a b * dist a c)", "using cosine_law_triangle[of b c a]"], ["proof (prove)\nusing this:\n  (dist b c)\\<^sup>2 =\n  (dist a b)\\<^sup>2 + (dist a c)\\<^sup>2 -\n  2 * dist a b * dist a c * cos (angle b a c)\n\ngoal (1 subgoal):\n 1. cos (angle b a c) =\n    ((dist a b)\\<^sup>2 + (dist a c)\\<^sup>2 - (dist b c)\\<^sup>2) /\n    (2 * dist a b * dist a c)", "by simp"], ["", "lemma sine_law_triangle':\n  \"b \\<noteq> c \\<Longrightarrow> sin (angle a b c) = sin (angle b a c) * dist a c / dist b c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<noteq> c \\<Longrightarrow>\n    sin (angle a b c) = sin (angle b a c) * dist a c / dist b c", "using sine_law_triangle[of a b c]"], ["proof (prove)\nusing this:\n  sin (angle a b c) * dist b c = sin (angle b a c) * dist a c\n\ngoal (1 subgoal):\n 1. b \\<noteq> c \\<Longrightarrow>\n    sin (angle a b c) = sin (angle b a c) * dist a c / dist b c", "by (simp add: divide_simps)"], ["", "lemma sine_law_triangle'':\n  \"b \\<noteq> c \\<Longrightarrow> sin (angle c b a) = sin (angle b a c) * dist a c / dist b c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<noteq> c \\<Longrightarrow>\n    sin (angle c b a) = sin (angle b a c) * dist a c / dist b c", "using sine_law_triangle[of a b c]"], ["proof (prove)\nusing this:\n  sin (angle a b c) * dist b c = sin (angle b a c) * dist a c\n\ngoal (1 subgoal):\n 1. b \\<noteq> c \\<Longrightarrow>\n    sin (angle c b a) = sin (angle b a c) * dist a c / dist b c", "by (simp add: divide_simps angle_commute)"], ["", "subsection \\<open>Sum of angles\\<close>"], ["", "context\nbegin"], ["", "private"], ["", "lemma gather_squares: \"a * (a * b) = a^2 * (b :: real)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a * (a * b) = a\\<^sup>2 * b", "by (simp_all add: power2_eq_square)"], ["", "private"], ["", "lemma eval_power: \"x ^ numeral n = x * x ^ pred_numeral n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x ^ numeral n = x * x ^ pred_numeral n", "by (subst numeral_eq_Suc, subst power_Suc) simp"], ["", "text \\<open>\n  The proof that the sum of the angles in a triangle is $\\pi$ is somewhat more\n  involved. Following the HOL Light proof by John Harrison, we first prove\n  that $\\cos(\\alpha + \\beta + \\gamma) = -1$ and $\\alpha + \\beta + \\gamma \\in [0;3\\pi)$,\n  which then implies the theorem.\n\n  The main work is proving $\\cos(\\alpha + \\beta + \\gamma)$. This is done using the\n  addition theorems for the sine and cosine, then using the Laws of Sines to eliminate\n  all $\\sin$ terms save $\\sin(\\gamma)^2$, which only appears squared in the remaining goal.\n  We then use $\\sin(\\gamma)^2 = 1 - \\cos(\\gamma)^2$ to eliminate this term and apply\n  the law of cosines to eliminate this term as well.\n\n  The remaining goal is a non-linear equation containing only the length of the sides\n  of the triangle. It can be shown by simple algebraic rewriting.\n\\<close>"], ["", "lemma angle_sum_triangle:\n  assumes \"a \\<noteq> b \\<or> b \\<noteq> c \\<or> a \\<noteq> c\"\n  shows   \"angle c a b + angle a b c + angle b c a = pi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. angle c a b + angle a b c + angle b c a = pi", "proof (rule cos_minus1_imp_pi)"], ["proof (state)\ngoal (3 subgoals):\n 1. cos (angle c a b + angle a b c + angle b c a) = - 1\n 2. 0 \\<le> angle c a b + angle a b c + angle b c a\n 3. angle c a b + angle a b c + angle b c a < 3 * pi", "show \"cos (angle c a b + angle a b c + angle b c a) = - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cos (angle c a b + angle a b c + angle b c a) = - 1", "proof (cases \"a \\<noteq> b\")"], ["proof (state)\ngoal (2 subgoals):\n 1. a \\<noteq> b \\<Longrightarrow>\n    cos (angle c a b + angle a b c + angle b c a) = - 1\n 2. \\<not> a \\<noteq> b \\<Longrightarrow>\n    cos (angle c a b + angle a b c + angle b c a) = - 1", "case True"], ["proof (state)\nthis:\n  a \\<noteq> b\n\ngoal (2 subgoals):\n 1. a \\<noteq> b \\<Longrightarrow>\n    cos (angle c a b + angle a b c + angle b c a) = - 1\n 2. \\<not> a \\<noteq> b \\<Longrightarrow>\n    cos (angle c a b + angle a b c + angle b c a) = - 1", "thus \"cos (angle c a b + angle a b c + angle b c a) = -1\""], ["proof (prove)\nusing this:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. cos (angle c a b + angle a b c + angle b c a) = - 1", "apply (simp add: cos_add sin_add cosine_law_triangle'' field_simps\n                       sine_law_triangle''[of a b c] sine_law_triangle''[of b a c]\n                       angle_commute dist_commute gather_squares sin_squared_eq)"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    b \\<noteq> c \\<longrightarrow>\n    a \\<noteq> c \\<longrightarrow>\n    dist b c * (dist a b ^ 6 * (dist a c ^ 4 * (128 * dist b c ^ 12))) +\n    (dist b c *\n     (32 *\n      ((dist a b)\\<^sup>2 *\n       ((dist a c)\\<^sup>2 * (dist a b ^ 6 * dist b c ^ 12)))) +\n     (dist b c *\n      (32 *\n       ((dist b c)\\<^sup>2 *\n        (dist a c ^ 4 * (dist a b ^ 8 * dist b c ^ 8)))) +\n      (dist b c *\n       (32 *\n        ((dist a b)\\<^sup>2 *\n         ((dist a c)\\<^sup>2 *\n          ((dist b c)\\<^sup>2 * (dist a b ^ 4 * dist b c ^ 12))))) +\n       (dist b c *\n        (32 *\n         ((dist a b)\\<^sup>2 *\n          ((dist a c)\\<^sup>2 *\n           ((dist b c)\\<^sup>2 *\n            (dist a b ^ 4 * (dist a c ^ 4 * dist b c ^ 8)))))) +\n        (dist b c *\n         (32 *\n          ((dist a c)\\<^sup>2 *\n           (dist a b ^ 4 *\n            (dist b c ^ 12 *\n             ((dist a c)\\<^sup>2 + (dist b c)\\<^sup>2 -\n              (dist a b)\\<^sup>2)\\<^sup>2)))) +\n         (dist b c *\n          (32 *\n           (dist a b ^ 4 *\n            (dist a c ^ 4 *\n             (dist b c ^ 10 *\n              ((dist a c)\\<^sup>2 + (dist b c)\\<^sup>2 -\n               (dist a b)\\<^sup>2)\\<^sup>2)))) +\n          dist b c *\n          ((dist a b)\\<^sup>2 *\n           ((dist a c)\\<^sup>2 *\n            ((dist b c)\\<^sup>2 *\n             (64 *\n              (dist a b ^ 4 *\n               (dist b c ^ 8 *\n                ((dist a c)\\<^sup>2 + (dist b c)\\<^sup>2 -\n                 (dist a b)\\<^sup>2)\\<^sup>2)))))))))))) =\n    dist b c *\n    (32 * ((dist a c)\\<^sup>2 * (dist a b ^ 4 * dist b c ^ 16))) +\n    (dist b c * (96 * (dist a b ^ 4 * (dist a c ^ 4 * dist b c ^ 14))) +\n     (dist b c * (96 * (dist a b ^ 4 * (dist a c ^ 6 * dist b c ^ 12))) +\n      (dist b c *\n       (32 *\n        ((dist a b)\\<^sup>2 *\n         ((dist a c)\\<^sup>2 * (dist a b ^ 8 * dist b c ^ 10)))) +\n       (dist b c *\n        ((dist a b)\\<^sup>2 *\n         (64 * (dist a b ^ 4 * (dist a c ^ 4 * dist b c ^ 12)))) +\n        (dist b c *\n         (32 *\n          ((dist a c)\\<^sup>2 *\n           ((dist b c)\\<^sup>2 *\n            (dist a b ^ 4 * (dist a c ^ 6 * dist b c ^ 8))))) +\n         dist b c *\n         (32 *\n          ((dist a b)\\<^sup>2 *\n           ((dist a c)\\<^sup>2 *\n            (dist a b ^ 4 *\n             (dist b c ^ 10 *\n              ((dist a c)\\<^sup>2 + (dist b c)\\<^sup>2 -\n               (dist a b)\\<^sup>2)\\<^sup>2))))))))))", "apply (simp add: eval_power algebra_simps dist_commute)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  cos (angle c a b + angle a b c + angle b c a) = - 1\n\ngoal (1 subgoal):\n 1. \\<not> a \\<noteq> b \\<Longrightarrow>\n    cos (angle c a b + angle a b c + angle b c a) = - 1", "qed (insert assms, auto)"], ["proof (state)\nthis:\n  cos (angle c a b + angle a b c + angle b c a) = - 1\n\ngoal (2 subgoals):\n 1. 0 \\<le> angle c a b + angle a b c + angle b c a\n 2. angle c a b + angle a b c + angle b c a < 3 * pi", "show \"angle c a b + angle a b c + angle b c a < 3 * pi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. angle c a b + angle a b c + angle b c a < 3 * pi", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> angle c a b + angle a b c + angle b c a\n           < 3 * pi \\<Longrightarrow>\n    False", "assume \"\\<not>(angle c a b + angle a b c + angle b c a < 3 * pi)\""], ["proof (state)\nthis:\n  \\<not> angle c a b + angle a b c + angle b c a < 3 * pi\n\ngoal (1 subgoal):\n 1. \\<not> angle c a b + angle a b c + angle b c a\n           < 3 * pi \\<Longrightarrow>\n    False", "with angle_le_pi[of c a b] angle_le_pi[of a b c] angle_le_pi[of b c a]"], ["proof (chain)\npicking this:\n  angle c a b \\<le> pi\n  angle a b c \\<le> pi\n  angle b c a \\<le> pi\n  \\<not> angle c a b + angle a b c + angle b c a < 3 * pi", "have A: \"angle c a b = pi\" \"angle a b c = pi\""], ["proof (prove)\nusing this:\n  angle c a b \\<le> pi\n  angle a b c \\<le> pi\n  angle b c a \\<le> pi\n  \\<not> angle c a b + angle a b c + angle b c a < 3 * pi\n\ngoal (1 subgoal):\n 1. angle c a b = pi &&& angle a b c = pi", "by simp_all"], ["proof (state)\nthis:\n  angle c a b = pi\n  angle a b c = pi\n\ngoal (1 subgoal):\n 1. \\<not> angle c a b + angle a b c + angle b c a\n           < 3 * pi \\<Longrightarrow>\n    False", "thus False"], ["proof (prove)\nusing this:\n  angle c a b = pi\n  angle a b c = pi\n\ngoal (1 subgoal):\n 1. False", "using angle_eq_pi_imp_dist_additive[of c a b]\n                     angle_eq_pi_imp_dist_additive[of a b c]"], ["proof (prove)\nusing this:\n  angle c a b = pi\n  angle a b c = pi\n  angle c a b = pi \\<Longrightarrow> dist c b = dist c a + dist a b\n  angle a b c = pi \\<Longrightarrow> dist a c = dist a b + dist b c\n\ngoal (1 subgoal):\n 1. False", "by (simp add: dist_commute)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  angle c a b + angle a b c + angle b c a < 3 * pi\n\ngoal (1 subgoal):\n 1. 0 \\<le> angle c a b + angle a b c + angle b c a", "qed (auto intro!: add_nonneg_nonneg angle_nonneg)"], ["", "end"], ["", "subsection \\<open>Congruence Theorems\\<close>"], ["", "text \\<open>\n  If two triangles agree on two angles at a non-degenerate side, the third angle\n  must also be equal.\n\\<close>"], ["", "lemma similar_triangle_aa:\n  assumes \"b1 \\<noteq> c1\" \"b2 \\<noteq> c2\"\n  assumes \"angle a1 b1 c1 = angle a2 b2 c2\"\n  assumes \"angle b1 c1 a1 = angle b2 c2 a2\"\n  shows   \"angle b1 a1 c1 = angle b2 a2 c2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. angle b1 a1 c1 = angle b2 a2 c2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. angle b1 a1 c1 = angle b2 a2 c2", "from assms angle_sum_triangle[of a1 b1 c1] angle_sum_triangle[of a2 b2 c2, symmetric]"], ["proof (chain)\npicking this:\n  b1 \\<noteq> c1\n  b2 \\<noteq> c2\n  angle a1 b1 c1 = angle a2 b2 c2\n  angle b1 c1 a1 = angle b2 c2 a2\n  a1 \\<noteq> b1 \\<or> b1 \\<noteq> c1 \\<or> a1 \\<noteq> c1 \\<Longrightarrow>\n  angle c1 a1 b1 + angle a1 b1 c1 + angle b1 c1 a1 = pi\n  a2 \\<noteq> b2 \\<or> b2 \\<noteq> c2 \\<or> a2 \\<noteq> c2 \\<Longrightarrow>\n  pi = angle c2 a2 b2 + angle a2 b2 c2 + angle b2 c2 a2", "show ?thesis"], ["proof (prove)\nusing this:\n  b1 \\<noteq> c1\n  b2 \\<noteq> c2\n  angle a1 b1 c1 = angle a2 b2 c2\n  angle b1 c1 a1 = angle b2 c2 a2\n  a1 \\<noteq> b1 \\<or> b1 \\<noteq> c1 \\<or> a1 \\<noteq> c1 \\<Longrightarrow>\n  angle c1 a1 b1 + angle a1 b1 c1 + angle b1 c1 a1 = pi\n  a2 \\<noteq> b2 \\<or> b2 \\<noteq> c2 \\<or> a2 \\<noteq> c2 \\<Longrightarrow>\n  pi = angle c2 a2 b2 + angle a2 b2 c2 + angle b2 c2 a2\n\ngoal (1 subgoal):\n 1. angle b1 a1 c1 = angle b2 a2 c2", "by (auto simp: algebra_simps angle_commute)"], ["proof (state)\nthis:\n  angle b1 a1 c1 = angle b2 a2 c2\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  A triangle is defined by its three angles and the lengths of three sides up to congruence.\n  Two triangles are congruent if they have their angles are the same and their sides have\n  the same length.\n\\<close>"], ["", "locale congruent_triangle =\n  fixes a1 b1 c1 :: \"'a :: real_inner\" and a2 b2 c2 :: \"'b :: real_inner\"\n  assumes sides':  \"dist a1 b1 = dist a2 b2\" \"dist a1 c1 = dist a2 c2\" \"dist b1 c1 = dist b2 c2\"\n      and angles': \"angle b1 a1 c1 = angle b2 a2 c2\" \"angle a1 b1 c1 = angle a2 b2 c2\"\n                   \"angle a1 c1 b1 = angle a2 c2 b2\"\nbegin"], ["", "lemma sides:\n  \"dist a1 b1 = dist a2 b2\" \"dist a1 c1 = dist a2 c2\" \"dist b1 c1 = dist b2 c2\"\n  \"dist b1 a1 = dist a2 b2\" \"dist c1 a1 = dist a2 c2\" \"dist c1 b1 = dist b2 c2\"\n  \"dist a1 b1 = dist b2 a2\" \"dist a1 c1 = dist c2 a2\" \"dist b1 c1 = dist c2 b2\"\n  \"dist b1 a1 = dist b2 a2\" \"dist c1 a1 = dist c2 a2\" \"dist c1 b1 = dist c2 b2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((dist a1 b1 = dist a2 b2 &&&\n      dist a1 c1 = dist a2 c2 &&& dist b1 c1 = dist b2 c2) &&&\n     dist b1 a1 = dist a2 b2 &&&\n     dist c1 a1 = dist a2 c2 &&& dist c1 b1 = dist b2 c2) &&&\n    (dist a1 b1 = dist b2 a2 &&&\n     dist a1 c1 = dist c2 a2 &&& dist b1 c1 = dist c2 b2) &&&\n    dist b1 a1 = dist b2 a2 &&&\n    dist c1 a1 = dist c2 a2 &&& dist c1 b1 = dist c2 b2", "using sides'"], ["proof (prove)\nusing this:\n  dist a1 b1 = dist a2 b2\n  dist a1 c1 = dist a2 c2\n  dist b1 c1 = dist b2 c2\n\ngoal (1 subgoal):\n 1. ((dist a1 b1 = dist a2 b2 &&&\n      dist a1 c1 = dist a2 c2 &&& dist b1 c1 = dist b2 c2) &&&\n     dist b1 a1 = dist a2 b2 &&&\n     dist c1 a1 = dist a2 c2 &&& dist c1 b1 = dist b2 c2) &&&\n    (dist a1 b1 = dist b2 a2 &&&\n     dist a1 c1 = dist c2 a2 &&& dist b1 c1 = dist c2 b2) &&&\n    dist b1 a1 = dist b2 a2 &&&\n    dist c1 a1 = dist c2 a2 &&& dist c1 b1 = dist c2 b2", "by (simp_all add: dist_commute)"], ["", "lemma angles:\n  \"angle b1 a1 c1 = angle b2 a2 c2\" \"angle a1 b1 c1 = angle a2 b2 c2\" \"angle a1 c1 b1 = angle a2 c2 b2\"\n  \"angle c1 a1 b1 = angle b2 a2 c2\" \"angle c1 b1 a1 = angle a2 b2 c2\" \"angle b1 c1 a1 = angle a2 c2 b2\"\n  \"angle b1 a1 c1 = angle c2 a2 b2\" \"angle a1 b1 c1 = angle c2 b2 a2\" \"angle a1 c1 b1 = angle b2 c2 a2\"\n  \"angle c1 a1 b1 = angle c2 a2 b2\" \"angle c1 b1 a1 = angle c2 b2 a2\" \"angle b1 c1 a1 = angle b2 c2 a2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((angle b1 a1 c1 = angle b2 a2 c2 &&&\n      angle a1 b1 c1 = angle a2 b2 c2 &&&\n      angle a1 c1 b1 = angle a2 c2 b2) &&&\n     angle c1 a1 b1 = angle b2 a2 c2 &&&\n     angle c1 b1 a1 = angle a2 b2 c2 &&&\n     angle b1 c1 a1 = angle a2 c2 b2) &&&\n    (angle b1 a1 c1 = angle c2 a2 b2 &&&\n     angle a1 b1 c1 = angle c2 b2 a2 &&&\n     angle a1 c1 b1 = angle b2 c2 a2) &&&\n    angle c1 a1 b1 = angle c2 a2 b2 &&&\n    angle c1 b1 a1 = angle c2 b2 a2 &&& angle b1 c1 a1 = angle b2 c2 a2", "using angles'"], ["proof (prove)\nusing this:\n  angle b1 a1 c1 = angle b2 a2 c2\n  angle a1 b1 c1 = angle a2 b2 c2\n  angle a1 c1 b1 = angle a2 c2 b2\n\ngoal (1 subgoal):\n 1. ((angle b1 a1 c1 = angle b2 a2 c2 &&&\n      angle a1 b1 c1 = angle a2 b2 c2 &&&\n      angle a1 c1 b1 = angle a2 c2 b2) &&&\n     angle c1 a1 b1 = angle b2 a2 c2 &&&\n     angle c1 b1 a1 = angle a2 b2 c2 &&&\n     angle b1 c1 a1 = angle a2 c2 b2) &&&\n    (angle b1 a1 c1 = angle c2 a2 b2 &&&\n     angle a1 b1 c1 = angle c2 b2 a2 &&&\n     angle a1 c1 b1 = angle b2 c2 a2) &&&\n    angle c1 a1 b1 = angle c2 a2 b2 &&&\n    angle c1 b1 a1 = angle c2 b2 a2 &&& angle b1 c1 a1 = angle b2 c2 a2", "by (simp_all add: angle_commute)"], ["", "end"], ["", "lemmas congruent_triangleD = congruent_triangle.sides congruent_triangle.angles"], ["", "text \\<open>\n  Given two triangles that agree on a subset of its side lengths and angles that are\n  sufficient to define a triangle uniquely up to congruence, one can conclude that they\n  must also agree on all remaining quantities, i.e. that they are congruent.\n\n  The following four congruence theorems state what constitutes such a uniquely-defining\n  subset of quantities. Each theorem states in its name which quantities are required and\n  in which order (clockwise or counter-clockwise): an ``s'' stands for a side,\n  an ``a'' stands for an angle.\n\n  The lemma ``congruent-triangleI-sas, for example, requires that two adjacent sides and the\n  angle inbetween are the same in both triangles.\n\\<close>"], ["", "lemma congruent_triangleI_sss:\n  fixes a1 b1 c1 :: \"'a :: real_inner\" and a2 b2 c2 :: \"'b :: real_inner\"\n  assumes \"dist a1 b1 = dist a2 b2\"\n  assumes \"dist b1 c1 = dist b2 c2\"\n  assumes \"dist a1 c1 = dist a2 c2\"\n  shows   \"congruent_triangle a1 b1 c1 a2 b2 c2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. congruent_triangle a1 b1 c1 a2 b2 c2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. congruent_triangle a1 b1 c1 a2 b2 c2", "have A: \"angle a1 b1 c1 = angle a2 b2 c2\"\n    if \"dist a1 b1 = dist a2 b2\" \"dist b1 c1 = dist b2 c2\" \"dist a1 c1 = dist a2 c2\"\n    for a1 b1 c1 :: 'a and a2 b2 c2 :: 'b"], ["proof (prove)\ngoal (1 subgoal):\n 1. angle a1 b1 c1 = angle a2 b2 c2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. angle a1 b1 c1 = angle a2 b2 c2", "from that cosine_law_triangle''[of a1 b1 c1] cosine_law_triangle''[of a2 b2 c2]"], ["proof (chain)\npicking this:\n  dist a1 b1 = dist a2 b2\n  dist b1 c1 = dist b2 c2\n  dist a1 c1 = dist a2 c2\n  cos (angle a1 b1 c1) =\n  ((dist b1 a1)\\<^sup>2 + (dist b1 c1)\\<^sup>2 - (dist a1 c1)\\<^sup>2) /\n  (2 * dist b1 a1 * dist b1 c1)\n  cos (angle a2 b2 c2) =\n  ((dist b2 a2)\\<^sup>2 + (dist b2 c2)\\<^sup>2 - (dist a2 c2)\\<^sup>2) /\n  (2 * dist b2 a2 * dist b2 c2)", "show ?thesis"], ["proof (prove)\nusing this:\n  dist a1 b1 = dist a2 b2\n  dist b1 c1 = dist b2 c2\n  dist a1 c1 = dist a2 c2\n  cos (angle a1 b1 c1) =\n  ((dist b1 a1)\\<^sup>2 + (dist b1 c1)\\<^sup>2 - (dist a1 c1)\\<^sup>2) /\n  (2 * dist b1 a1 * dist b1 c1)\n  cos (angle a2 b2 c2) =\n  ((dist b2 a2)\\<^sup>2 + (dist b2 c2)\\<^sup>2 - (dist a2 c2)\\<^sup>2) /\n  (2 * dist b2 a2 * dist b2 c2)\n\ngoal (1 subgoal):\n 1. angle a1 b1 c1 = angle a2 b2 c2", "by (intro cos_angle_eqD) (simp add: dist_commute)"], ["proof (state)\nthis:\n  angle a1 b1 c1 = angle a2 b2 c2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>dist ?a1.0 ?b1.0 = dist ?a2.0 ?b2.0;\n   dist ?b1.0 ?c1.0 = dist ?b2.0 ?c2.0;\n   dist ?a1.0 ?c1.0 = dist ?a2.0 ?c2.0\\<rbrakk>\n  \\<Longrightarrow> angle ?a1.0 ?b1.0 ?c1.0 = angle ?a2.0 ?b2.0 ?c2.0\n\ngoal (1 subgoal):\n 1. congruent_triangle a1 b1 c1 a2 b2 c2", "from assms"], ["proof (chain)\npicking this:\n  dist a1 b1 = dist a2 b2\n  dist b1 c1 = dist b2 c2\n  dist a1 c1 = dist a2 c2", "show ?thesis"], ["proof (prove)\nusing this:\n  dist a1 b1 = dist a2 b2\n  dist b1 c1 = dist b2 c2\n  dist a1 c1 = dist a2 c2\n\ngoal (1 subgoal):\n 1. congruent_triangle a1 b1 c1 a2 b2 c2", "by unfold_locales (auto intro!: A simp: dist_commute)"], ["proof (state)\nthis:\n  congruent_triangle a1 b1 c1 a2 b2 c2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas congruent_triangle_sss = congruent_triangleD[OF congruent_triangleI_sss]"], ["", "lemma congruent_triangleI_sas:\n  assumes \"dist a1 b1 = dist a2 b2\"\n  assumes \"dist b1 c1 = dist b2 c2\"\n  assumes \"angle a1 b1 c1 = angle a2 b2 c2\"\n  shows   \"congruent_triangle a1 b1 c1 a2 b2 c2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. congruent_triangle a1 b1 c1 a2 b2 c2", "proof (rule congruent_triangleI_sss)"], ["proof (state)\ngoal (3 subgoals):\n 1. dist a1 b1 = dist a2 b2\n 2. dist b1 c1 = dist b2 c2\n 3. dist a1 c1 = dist a2 c2", "show \"dist a1 c1 = dist a2 c2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist a1 c1 = dist a2 c2", "proof (rule power2_eq_imp_eq)"], ["proof (state)\ngoal (3 subgoals):\n 1. (dist a1 c1)\\<^sup>2 = (dist a2 c2)\\<^sup>2\n 2. 0 \\<le> dist a1 c1\n 3. 0 \\<le> dist a2 c2", "from cosine_law_triangle[of a1 c1 b1] cosine_law_triangle[of a2 c2 b2] assms"], ["proof (chain)\npicking this:\n  (dist a1 c1)\\<^sup>2 =\n  (dist b1 a1)\\<^sup>2 + (dist b1 c1)\\<^sup>2 -\n  2 * dist b1 a1 * dist b1 c1 * cos (angle a1 b1 c1)\n  (dist a2 c2)\\<^sup>2 =\n  (dist b2 a2)\\<^sup>2 + (dist b2 c2)\\<^sup>2 -\n  2 * dist b2 a2 * dist b2 c2 * cos (angle a2 b2 c2)\n  dist a1 b1 = dist a2 b2\n  dist b1 c1 = dist b2 c2\n  angle a1 b1 c1 = angle a2 b2 c2", "show \"(dist a1 c1)\\<^sup>2 = (dist a2 c2)\\<^sup>2\""], ["proof (prove)\nusing this:\n  (dist a1 c1)\\<^sup>2 =\n  (dist b1 a1)\\<^sup>2 + (dist b1 c1)\\<^sup>2 -\n  2 * dist b1 a1 * dist b1 c1 * cos (angle a1 b1 c1)\n  (dist a2 c2)\\<^sup>2 =\n  (dist b2 a2)\\<^sup>2 + (dist b2 c2)\\<^sup>2 -\n  2 * dist b2 a2 * dist b2 c2 * cos (angle a2 b2 c2)\n  dist a1 b1 = dist a2 b2\n  dist b1 c1 = dist b2 c2\n  angle a1 b1 c1 = angle a2 b2 c2\n\ngoal (1 subgoal):\n 1. (dist a1 c1)\\<^sup>2 = (dist a2 c2)\\<^sup>2", "by (simp add: dist_commute)"], ["proof (state)\nthis:\n  (dist a1 c1)\\<^sup>2 = (dist a2 c2)\\<^sup>2\n\ngoal (2 subgoals):\n 1. 0 \\<le> dist a1 c1\n 2. 0 \\<le> dist a2 c2", "qed simp_all"], ["proof (state)\nthis:\n  dist a1 c1 = dist a2 c2\n\ngoal (2 subgoals):\n 1. dist a1 b1 = dist a2 b2\n 2. dist b1 c1 = dist b2 c2", "qed fact+"], ["", "lemmas congruent_triangle_sas = congruent_triangleD[OF congruent_triangleI_sas]"], ["", "lemma congruent_triangleI_aas:\n  assumes \"angle a1 b1 c1 = angle a2 b2 c2\"\n  assumes \"angle b1 c1 a1 = angle b2 c2 a2\"\n  assumes \"dist a1 b1 = dist a2 b2\"\n  assumes \"\\<not>collinear {a1,b1,c1}\"\n  shows   \"congruent_triangle a1 b1 c1 a2 b2 c2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. congruent_triangle a1 b1 c1 a2 b2 c2", "proof (rule congruent_triangleI_sas)"], ["proof (state)\ngoal (3 subgoals):\n 1. dist a1 b1 = dist a2 b2\n 2. dist b1 c1 = dist b2 c2\n 3. angle a1 b1 c1 = angle a2 b2 c2", "from \\<open>\\<not>collinear {a1,b1,c1}\\<close>"], ["proof (chain)\npicking this:\n  \\<not> collinear {a1, b1, c1}", "have neq: \"a1 \\<noteq> b1\""], ["proof (prove)\nusing this:\n  \\<not> collinear {a1, b1, c1}\n\ngoal (1 subgoal):\n 1. a1 \\<noteq> b1", "by auto"], ["proof (state)\nthis:\n  a1 \\<noteq> b1\n\ngoal (3 subgoals):\n 1. dist a1 b1 = dist a2 b2\n 2. dist b1 c1 = dist b2 c2\n 3. angle a1 b1 c1 = angle a2 b2 c2", "with assms(3)"], ["proof (chain)\npicking this:\n  dist a1 b1 = dist a2 b2\n  a1 \\<noteq> b1", "have neq': \"a2 \\<noteq> b2\""], ["proof (prove)\nusing this:\n  dist a1 b1 = dist a2 b2\n  a1 \\<noteq> b1\n\ngoal (1 subgoal):\n 1. a2 \\<noteq> b2", "by auto"], ["proof (state)\nthis:\n  a2 \\<noteq> b2\n\ngoal (3 subgoals):\n 1. dist a1 b1 = dist a2 b2\n 2. dist b1 c1 = dist b2 c2\n 3. angle a1 b1 c1 = angle a2 b2 c2", "have A: \"angle c1 a1 b1 = angle c2 a2 b2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. angle c1 a1 b1 = angle c2 a2 b2", "using neq neq' assms"], ["proof (prove)\nusing this:\n  a1 \\<noteq> b1\n  a2 \\<noteq> b2\n  angle a1 b1 c1 = angle a2 b2 c2\n  angle b1 c1 a1 = angle b2 c2 a2\n  dist a1 b1 = dist a2 b2\n  \\<not> collinear {a1, b1, c1}\n\ngoal (1 subgoal):\n 1. angle c1 a1 b1 = angle c2 a2 b2", "using angle_sum_triangle[of a1 b1 c1] angle_sum_triangle[of a2 b2 c2]"], ["proof (prove)\nusing this:\n  a1 \\<noteq> b1\n  a2 \\<noteq> b2\n  angle a1 b1 c1 = angle a2 b2 c2\n  angle b1 c1 a1 = angle b2 c2 a2\n  dist a1 b1 = dist a2 b2\n  \\<not> collinear {a1, b1, c1}\n  a1 \\<noteq> b1 \\<or> b1 \\<noteq> c1 \\<or> a1 \\<noteq> c1 \\<Longrightarrow>\n  angle c1 a1 b1 + angle a1 b1 c1 + angle b1 c1 a1 = pi\n  a2 \\<noteq> b2 \\<or> b2 \\<noteq> c2 \\<or> a2 \\<noteq> c2 \\<Longrightarrow>\n  angle c2 a2 b2 + angle a2 b2 c2 + angle b2 c2 a2 = pi\n\ngoal (1 subgoal):\n 1. angle c1 a1 b1 = angle c2 a2 b2", "by simp"], ["proof (state)\nthis:\n  angle c1 a1 b1 = angle c2 a2 b2\n\ngoal (3 subgoals):\n 1. dist a1 b1 = dist a2 b2\n 2. dist b1 c1 = dist b2 c2\n 3. angle a1 b1 c1 = angle a2 b2 c2", "from assms"], ["proof (chain)\npicking this:\n  angle a1 b1 c1 = angle a2 b2 c2\n  angle b1 c1 a1 = angle b2 c2 a2\n  dist a1 b1 = dist a2 b2\n  \\<not> collinear {a1, b1, c1}", "have B: \"angle b1 a1 c1 \\<in> {0<..<pi}\""], ["proof (prove)\nusing this:\n  angle a1 b1 c1 = angle a2 b2 c2\n  angle b1 c1 a1 = angle b2 c2 a2\n  dist a1 b1 = dist a2 b2\n  \\<not> collinear {a1, b1, c1}\n\ngoal (1 subgoal):\n 1. angle b1 a1 c1 \\<in> {0<..<pi}", "by (intro not_collinear_angle) (simp_all add: insert_commute)"], ["proof (state)\nthis:\n  angle b1 a1 c1 \\<in> {0<..<pi}\n\ngoal (3 subgoals):\n 1. dist a1 b1 = dist a2 b2\n 2. dist b1 c1 = dist b2 c2\n 3. angle a1 b1 c1 = angle a2 b2 c2", "from sine_law_triangle[of c1 a1 b1] sine_law_triangle[of c2 a2 b2] assms A B"], ["proof (chain)\npicking this:\n  sin (angle c1 a1 b1) * dist a1 b1 = sin (angle a1 c1 b1) * dist c1 b1\n  sin (angle c2 a2 b2) * dist a2 b2 = sin (angle a2 c2 b2) * dist c2 b2\n  angle a1 b1 c1 = angle a2 b2 c2\n  angle b1 c1 a1 = angle b2 c2 a2\n  dist a1 b1 = dist a2 b2\n  \\<not> collinear {a1, b1, c1}\n  angle c1 a1 b1 = angle c2 a2 b2\n  angle b1 a1 c1 \\<in> {0<..<pi}", "show \"dist b1 c1 = dist b2 c2\""], ["proof (prove)\nusing this:\n  sin (angle c1 a1 b1) * dist a1 b1 = sin (angle a1 c1 b1) * dist c1 b1\n  sin (angle c2 a2 b2) * dist a2 b2 = sin (angle a2 c2 b2) * dist c2 b2\n  angle a1 b1 c1 = angle a2 b2 c2\n  angle b1 c1 a1 = angle b2 c2 a2\n  dist a1 b1 = dist a2 b2\n  \\<not> collinear {a1, b1, c1}\n  angle c1 a1 b1 = angle c2 a2 b2\n  angle b1 a1 c1 \\<in> {0<..<pi}\n\ngoal (1 subgoal):\n 1. dist b1 c1 = dist b2 c2", "by (auto simp: angle_commute dist_commute sin_angle_zero_iff)"], ["proof (state)\nthis:\n  dist b1 c1 = dist b2 c2\n\ngoal (2 subgoals):\n 1. dist a1 b1 = dist a2 b2\n 2. angle a1 b1 c1 = angle a2 b2 c2", "qed fact+"], ["", "lemmas congruent_triangle_aas = congruent_triangleD[OF congruent_triangleI_aas]"], ["", "lemma congruent_triangleI_asa:\n  assumes \"angle a1 b1 c1 = angle a2 b2 c2\"\n  assumes \"dist a1 b1 = dist a2 b2\"\n  assumes \"angle b1 a1 c1 = angle b2 a2 c2\"\n  assumes \"\\<not>collinear {a1, b1, c1}\"\n  shows   \"congruent_triangle a1 b1 c1 a2 b2 c2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. congruent_triangle a1 b1 c1 a2 b2 c2", "proof (rule congruent_triangleI_aas)"], ["proof (state)\ngoal (4 subgoals):\n 1. angle a1 b1 c1 = angle a2 b2 c2\n 2. angle b1 c1 a1 = angle b2 c2 a2\n 3. dist a1 b1 = dist a2 b2\n 4. \\<not> collinear {a1, b1, c1}", "from assms"], ["proof (chain)\npicking this:\n  angle a1 b1 c1 = angle a2 b2 c2\n  dist a1 b1 = dist a2 b2\n  angle b1 a1 c1 = angle b2 a2 c2\n  \\<not> collinear {a1, b1, c1}", "have neq: \"a1 \\<noteq> b1\" \"a2 \\<noteq> b2\""], ["proof (prove)\nusing this:\n  angle a1 b1 c1 = angle a2 b2 c2\n  dist a1 b1 = dist a2 b2\n  angle b1 a1 c1 = angle b2 a2 c2\n  \\<not> collinear {a1, b1, c1}\n\ngoal (1 subgoal):\n 1. a1 \\<noteq> b1 &&& a2 \\<noteq> b2", "by auto"], ["proof (state)\nthis:\n  a1 \\<noteq> b1\n  a2 \\<noteq> b2\n\ngoal (4 subgoals):\n 1. angle a1 b1 c1 = angle a2 b2 c2\n 2. angle b1 c1 a1 = angle b2 c2 a2\n 3. dist a1 b1 = dist a2 b2\n 4. \\<not> collinear {a1, b1, c1}", "show \"angle b1 c1 a1 = angle b2 c2 a2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. angle b1 c1 a1 = angle b2 c2 a2", "by (rule similar_triangle_aa) (insert assms neq, simp_all add: angle_commute)"], ["proof (state)\nthis:\n  angle b1 c1 a1 = angle b2 c2 a2\n\ngoal (3 subgoals):\n 1. angle a1 b1 c1 = angle a2 b2 c2\n 2. dist a1 b1 = dist a2 b2\n 3. \\<not> collinear {a1, b1, c1}", "qed fact+"], ["", "lemmas congruent_triangle_asa = congruent_triangleD[OF congruent_triangleI_asa]"], ["", "subsection \\<open>Isosceles Triangle Theorem\\<close>"], ["", "text \\<open>\n  We now prove the Isosceles Triangle Theorem: in a triangle where two sides have\n  the same length, the two angles that are adjacent to only one of the two sides\n  must be equal.\n\\<close>"], ["", "lemma isosceles_triangle:\n  assumes \"dist a c = dist b c\"\n  shows   \"angle b a c = angle a b c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. angle b a c = angle a b c", "by (rule congruent_triangle_sss) (insert assms, simp_all add: dist_commute)"], ["", "text \\<open>\n  For the non-degenerate case (i.e. the three points are not collinear), We also\n  prove the converse.\n\\<close>"], ["", "lemma isosceles_triangle_converse:\n  assumes \"angle a b c = angle b a c\" \"\\<not>collinear {a,b,c}\"\n  shows   \"dist a c = dist b c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist a c = dist b c", "by (rule congruent_triangle_asa[OF assms(1) _ _ assms(2)])\n     (simp_all add: dist_commute angle_commute assms)"], ["", "subsection\\<open>Contributions by Lukas Bulwahn\\<close>"], ["", "lemma Pythagoras:\n  fixes A B C :: \"'a :: real_inner\"\n  assumes \"orthogonal (A - C) (B - C)\"\n  shows \"(dist B C) ^ 2 + (dist C A) ^ 2 = (dist A B) ^ 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (dist B C)\\<^sup>2 + (dist C A)\\<^sup>2 = (dist A B)\\<^sup>2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (dist B C)\\<^sup>2 + (dist C A)\\<^sup>2 = (dist A B)\\<^sup>2", "from assms"], ["proof (chain)\npicking this:\n  orthogonal (A - C) (B - C)", "have \"cos (angle A C B) = 0\""], ["proof (prove)\nusing this:\n  orthogonal (A - C) (B - C)\n\ngoal (1 subgoal):\n 1. cos (angle A C B) = 0", "by (metis orthogonal_iff_angle cos_pi_half)"], ["proof (state)\nthis:\n  cos (angle A C B) = 0\n\ngoal (1 subgoal):\n 1. (dist B C)\\<^sup>2 + (dist C A)\\<^sup>2 = (dist A B)\\<^sup>2", "from this"], ["proof (chain)\npicking this:\n  cos (angle A C B) = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  cos (angle A C B) = 0\n\ngoal (1 subgoal):\n 1. (dist B C)\\<^sup>2 + (dist C A)\\<^sup>2 = (dist A B)\\<^sup>2", "by (simp add: cosine_law_triangle[of A B C] dist_commute)"], ["proof (state)\nthis:\n  (dist B C)\\<^sup>2 + (dist C A)\\<^sup>2 = (dist A B)\\<^sup>2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma isosceles_triangle_orthogonal_on_midpoint:\n  fixes A B C :: \"'a :: euclidean_space\"\n  assumes \"dist C A = dist C B\"\n  shows \"orthogonal (C - midpoint A B) (A - midpoint A B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. orthogonal (C - midpoint A B) (A - midpoint A B)", "proof (cases \"A = B\")"], ["proof (state)\ngoal (2 subgoals):\n 1. A = B \\<Longrightarrow> orthogonal (C - midpoint A B) (A - midpoint A B)\n 2. A \\<noteq> B \\<Longrightarrow>\n    orthogonal (C - midpoint A B) (A - midpoint A B)", "assume \"A \\<noteq> B\""], ["proof (state)\nthis:\n  A \\<noteq> B\n\ngoal (2 subgoals):\n 1. A = B \\<Longrightarrow> orthogonal (C - midpoint A B) (A - midpoint A B)\n 2. A \\<noteq> B \\<Longrightarrow>\n    orthogonal (C - midpoint A B) (A - midpoint A B)", "let ?M = \"midpoint A B\""], ["proof (state)\ngoal (2 subgoals):\n 1. A = B \\<Longrightarrow> orthogonal (C - midpoint A B) (A - midpoint A B)\n 2. A \\<noteq> B \\<Longrightarrow>\n    orthogonal (C - midpoint A B) (A - midpoint A B)", "from \\<open>A \\<noteq> B\\<close>"], ["proof (chain)\npicking this:\n  A \\<noteq> B", "have \"angle A ?M C = pi - angle B ?M C\""], ["proof (prove)\nusing this:\n  A \\<noteq> B\n\ngoal (1 subgoal):\n 1. angle A (midpoint A B) C = pi - angle B (midpoint A B) C", "by (intro angle_inverse between_midpoint)\n       (auto simp: between_midpoint eq_commute[of _ \"midpoint A B\" for A B])"], ["proof (state)\nthis:\n  angle A (midpoint A B) C = pi - angle B (midpoint A B) C\n\ngoal (2 subgoals):\n 1. A = B \\<Longrightarrow> orthogonal (C - midpoint A B) (A - midpoint A B)\n 2. A \\<noteq> B \\<Longrightarrow>\n    orthogonal (C - midpoint A B) (A - midpoint A B)", "moreover"], ["proof (state)\nthis:\n  angle A (midpoint A B) C = pi - angle B (midpoint A B) C\n\ngoal (2 subgoals):\n 1. A = B \\<Longrightarrow> orthogonal (C - midpoint A B) (A - midpoint A B)\n 2. A \\<noteq> B \\<Longrightarrow>\n    orthogonal (C - midpoint A B) (A - midpoint A B)", "have \"angle A ?M C = angle C ?M B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. angle A (midpoint A B) C = angle C (midpoint A B) B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. angle A (midpoint A B) C = angle C (midpoint A B) B", "have congruence: \"congruent_triangle C A ?M C B ?M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. congruent_triangle C A (midpoint A B) C B (midpoint A B)", "proof (rule congruent_triangleI_sss)"], ["proof (state)\ngoal (3 subgoals):\n 1. dist C A = dist C B\n 2. dist A (midpoint A B) = dist B (midpoint A B)\n 3. dist C (midpoint A B) = dist C (midpoint A B)", "show \"dist C A = dist C B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist C A = dist C B", "using assms"], ["proof (prove)\nusing this:\n  dist C A = dist C B\n\ngoal (1 subgoal):\n 1. dist C A = dist C B", "."], ["proof (state)\nthis:\n  dist C A = dist C B\n\ngoal (2 subgoals):\n 1. dist A (midpoint A B) = dist B (midpoint A B)\n 2. dist C (midpoint A B) = dist C (midpoint A B)", "show \"dist A ?M = dist B ?M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist A (midpoint A B) = dist B (midpoint A B)", "by (simp add: dist_midpoint)"], ["proof (state)\nthis:\n  dist A (midpoint A B) = dist B (midpoint A B)\n\ngoal (1 subgoal):\n 1. dist C (midpoint A B) = dist C (midpoint A B)", "show \"dist C (midpoint A B) = dist C (midpoint A B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dist C (midpoint A B) = dist C (midpoint A B)", ".."], ["proof (state)\nthis:\n  dist C (midpoint A B) = dist C (midpoint A B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  congruent_triangle C A (midpoint A B) C B (midpoint A B)\n\ngoal (1 subgoal):\n 1. angle A (midpoint A B) C = angle C (midpoint A B) B", "from this"], ["proof (chain)\npicking this:\n  congruent_triangle C A (midpoint A B) C B (midpoint A B)", "show ?thesis"], ["proof (prove)\nusing this:\n  congruent_triangle C A (midpoint A B) C B (midpoint A B)\n\ngoal (1 subgoal):\n 1. angle A (midpoint A B) C = angle C (midpoint A B) B", "by (simp add: congruent_triangle.angles(6))"], ["proof (state)\nthis:\n  angle A (midpoint A B) C = angle C (midpoint A B) B\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  angle A (midpoint A B) C = angle C (midpoint A B) B\n\ngoal (2 subgoals):\n 1. A = B \\<Longrightarrow> orthogonal (C - midpoint A B) (A - midpoint A B)\n 2. A \\<noteq> B \\<Longrightarrow>\n    orthogonal (C - midpoint A B) (A - midpoint A B)", "ultimately"], ["proof (chain)\npicking this:\n  angle A (midpoint A B) C = pi - angle B (midpoint A B) C\n  angle A (midpoint A B) C = angle C (midpoint A B) B", "have \"angle A ?M C = pi / 2\""], ["proof (prove)\nusing this:\n  angle A (midpoint A B) C = pi - angle B (midpoint A B) C\n  angle A (midpoint A B) C = angle C (midpoint A B) B\n\ngoal (1 subgoal):\n 1. angle A (midpoint A B) C = pi / 2", "by (simp add: angle_commute)"], ["proof (state)\nthis:\n  angle A (midpoint A B) C = pi / 2\n\ngoal (2 subgoals):\n 1. A = B \\<Longrightarrow> orthogonal (C - midpoint A B) (A - midpoint A B)\n 2. A \\<noteq> B \\<Longrightarrow>\n    orthogonal (C - midpoint A B) (A - midpoint A B)", "from this"], ["proof (chain)\npicking this:\n  angle A (midpoint A B) C = pi / 2", "show ?thesis"], ["proof (prove)\nusing this:\n  angle A (midpoint A B) C = pi / 2\n\ngoal (1 subgoal):\n 1. orthogonal (C - midpoint A B) (A - midpoint A B)", "by (simp add: orthogonal_iff_angle orthogonal_commute)"], ["proof (state)\nthis:\n  orthogonal (C - midpoint A B) (A - midpoint A B)\n\ngoal (1 subgoal):\n 1. A = B \\<Longrightarrow> orthogonal (C - midpoint A B) (A - midpoint A B)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. A = B \\<Longrightarrow> orthogonal (C - midpoint A B) (A - midpoint A B)", "assume \"A = B\""], ["proof (state)\nthis:\n  A = B\n\ngoal (1 subgoal):\n 1. A = B \\<Longrightarrow> orthogonal (C - midpoint A B) (A - midpoint A B)", "from this"], ["proof (chain)\npicking this:\n  A = B", "show ?thesis"], ["proof (prove)\nusing this:\n  A = B\n\ngoal (1 subgoal):\n 1. orthogonal (C - midpoint A B) (A - midpoint A B)", "by (simp add: orthogonal_clauses(1))"], ["proof (state)\nthis:\n  orthogonal (C - midpoint A B) (A - midpoint A B)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}