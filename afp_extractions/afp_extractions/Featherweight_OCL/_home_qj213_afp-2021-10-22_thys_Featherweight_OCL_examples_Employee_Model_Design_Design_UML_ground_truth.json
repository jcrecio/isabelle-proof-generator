{"file_name": "/home/qj213/afp-2021-10-22/thys/Featherweight_OCL/examples/Employee_Model/Design/Design_UML.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Featherweight_OCL", "problem_names": ["lemmas cps23 = \n    cp_StrictRefEq\\<^sub>O\\<^sub>b\\<^sub>j\\<^sub>e\\<^sub>c\\<^sub>t[of \"x::Person\" \"y::Person\" \"\\<tau>\",\n                         simplified StrictRefEq\\<^sub>O\\<^sub>b\\<^sub>j\\<^sub>e\\<^sub>c\\<^sub>t_\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n[symmetric]]\n    cp_intro(9)         [of \"P::Person \\<Rightarrow>Person\"\"Q::Person \\<Rightarrow>Person\",\n                         simplified StrictRefEq\\<^sub>O\\<^sub>b\\<^sub>j\\<^sub>e\\<^sub>c\\<^sub>t_\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n[symmetric] ]\n    StrictRefEq\\<^sub>O\\<^sub>b\\<^sub>j\\<^sub>e\\<^sub>c\\<^sub>t_def      [of \"x::Person\" \"y::Person\",\n                         simplified StrictRefEq\\<^sub>O\\<^sub>b\\<^sub>j\\<^sub>e\\<^sub>c\\<^sub>t_\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n[symmetric]]\n    StrictRefEq\\<^sub>O\\<^sub>b\\<^sub>j\\<^sub>e\\<^sub>c\\<^sub>t_defargs  [of _ \"x::Person\" \"y::Person\",\n                         simplified StrictRefEq\\<^sub>O\\<^sub>b\\<^sub>j\\<^sub>e\\<^sub>c\\<^sub>t_\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n[symmetric]]\n    StrictRefEq\\<^sub>O\\<^sub>b\\<^sub>j\\<^sub>e\\<^sub>c\\<^sub>t_strict1\n                        [of \"x::Person\",\n                         simplified StrictRefEq\\<^sub>O\\<^sub>b\\<^sub>j\\<^sub>e\\<^sub>c\\<^sub>t_\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n[symmetric]]\n    StrictRefEq\\<^sub>O\\<^sub>b\\<^sub>j\\<^sub>e\\<^sub>c\\<^sub>t_strict2\n                        [of \"x::Person\",\n                         simplified StrictRefEq\\<^sub>O\\<^sub>b\\<^sub>j\\<^sub>e\\<^sub>c\\<^sub>t_\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n[symmetric]]\n  for x y \\<tau> P Q", "lemma OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA>_some: \"OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA> x \\<noteq> None\"", "lemmas [simp] =\n OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny\n OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person", "lemma cp_OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person_Person: \"cp P \\<Longrightarrow> cp(\\<lambda>X. (P (X::Person)::Person) .oclAsType(OclAny))\"", "lemma cp_OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny_OclAny: \"cp P \\<Longrightarrow> cp(\\<lambda>X. (P (X::OclAny)::OclAny) .oclAsType(OclAny))\"", "lemma cp_OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person_Person: \"cp P \\<Longrightarrow> cp(\\<lambda>X. (P (X::Person)::Person) .oclAsType(Person))\"", "lemma cp_OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny_OclAny: \"cp P \\<Longrightarrow> cp(\\<lambda>X. (P (X::OclAny)::OclAny) .oclAsType(Person))\"", "lemma cp_OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person_OclAny: \"cp P \\<Longrightarrow> cp(\\<lambda>X. (P (X::Person)::OclAny) .oclAsType(OclAny))\"", "lemma cp_OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny_Person: \"cp P \\<Longrightarrow> cp(\\<lambda>X. (P (X::OclAny)::Person) .oclAsType(OclAny))\"", "lemma cp_OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person_OclAny: \"cp P \\<Longrightarrow> cp(\\<lambda>X. (P (X::Person)::OclAny) .oclAsType(Person))\"", "lemma cp_OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny_Person: \"cp P \\<Longrightarrow> cp(\\<lambda>X. (P (X::OclAny)::Person) .oclAsType(Person))\"", "lemmas [simp] =\n cp_OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person_Person\n cp_OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny_OclAny\n cp_OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person_Person\n cp_OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny_OclAny\n\n cp_OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person_OclAny\n cp_OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny_Person\n cp_OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person_OclAny\n cp_OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny_Person", "lemma OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny_strict : \"(invalid::OclAny) .oclAsType(OclAny) = invalid\"", "lemma OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny_nullstrict : \"(null::OclAny) .oclAsType(OclAny) = null\"", "lemma OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person_strict[simp] : \"(invalid::Person) .oclAsType(OclAny) = invalid\"", "lemma OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person_nullstrict[simp] : \"(null::Person) .oclAsType(OclAny) = null\"", "lemma OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny_strict[simp] : \"(invalid::OclAny) .oclAsType(Person) = invalid\"", "lemma OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny_nullstrict[simp] : \"(null::OclAny) .oclAsType(Person) = null\"", "lemma OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person_strict : \"(invalid::Person) .oclAsType(Person) = invalid\"", "lemma OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person_nullstrict : \"(null::Person) .oclAsType(Person) = null\"", "lemma OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny':\n         \"(X::OclAny) .oclIsTypeOf(OclAny) = \n                    (\\<lambda> \\<tau>. if \\<tau> \\<Turnstile> \\<upsilon> X then (case X \\<tau> of\n                                              \\<lfloor>\\<bottom>\\<rfloor> \\<Rightarrow> true \\<tau>  \\<comment> \\<open>invalid ??\\<close>\n                                           | \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y oid \\<bottom> \\<rfloor>\\<rfloor> \\<Rightarrow> true \\<tau>\n                                           | \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y oid \\<lfloor>_\\<rfloor> \\<rfloor>\\<rfloor> \\<Rightarrow> false \\<tau>)\n                                           else invalid \\<tau>)\"", "lemma cp_OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person_Person: \"cp P \\<Longrightarrow> cp(\\<lambda>X.(P(X::Person)::Person).oclIsTypeOf(OclAny))\"", "lemma cp_OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny_OclAny: \"cp P \\<Longrightarrow> cp(\\<lambda>X.(P(X::OclAny)::OclAny).oclIsTypeOf(OclAny))\"", "lemma cp_OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person_Person: \"cp P \\<Longrightarrow> cp(\\<lambda>X.(P(X::Person)::Person).oclIsTypeOf(Person))\"", "lemma cp_OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny_OclAny: \"cp P \\<Longrightarrow> cp(\\<lambda>X.(P(X::OclAny)::OclAny).oclIsTypeOf(Person))\"", "lemma cp_OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person_OclAny: \"cp P \\<Longrightarrow> cp(\\<lambda>X.(P(X::Person)::OclAny).oclIsTypeOf(OclAny))\"", "lemma cp_OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny_Person: \"cp P \\<Longrightarrow> cp(\\<lambda>X.(P(X::OclAny)::Person).oclIsTypeOf(OclAny))\"", "lemma cp_OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person_OclAny: \"cp P \\<Longrightarrow> cp(\\<lambda>X.(P(X::Person)::OclAny).oclIsTypeOf(Person))\"", "lemma cp_OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny_Person: \"cp P \\<Longrightarrow> cp(\\<lambda>X.(P(X::OclAny)::Person).oclIsTypeOf(Person))\"", "lemmas [simp] =\n cp_OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person_Person\n cp_OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny_OclAny\n cp_OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person_Person\n cp_OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny_OclAny\n\n cp_OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person_OclAny\n cp_OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny_Person\n cp_OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person_OclAny\n cp_OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny_Person", "lemma OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny_strict1[simp]:\n     \"(invalid::OclAny) .oclIsTypeOf(OclAny) = invalid\"", "lemma OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny_strict2[simp]:\n     \"(null::OclAny) .oclIsTypeOf(OclAny) = true\"", "lemma OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person_strict1[simp]:\n     \"(invalid::Person) .oclIsTypeOf(OclAny) = invalid\"", "lemma OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person_strict2[simp]:\n     \"(null::Person) .oclIsTypeOf(OclAny) = true\"", "lemma OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny_strict1[simp]:\n     \"(invalid::OclAny) .oclIsTypeOf(Person) = invalid\"", "lemma OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny_strict2[simp]:\n     \"(null::OclAny) .oclIsTypeOf(Person) = true\"", "lemma OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person_strict1[simp]:\n     \"(invalid::Person) .oclIsTypeOf(Person) = invalid\"", "lemma OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person_strict2[simp]:\n     \"(null::Person) .oclIsTypeOf(Person) = true\"", "lemma actualType_larger_staticType:\nassumes isdef: \"\\<tau> \\<Turnstile> (\\<delta> X)\"\nshows          \"\\<tau> \\<Turnstile> (X::Person) .oclIsTypeOf(OclAny) \\<triangleq> false\"", "lemma down_cast_type:\nassumes isOclAny: \"\\<tau> \\<Turnstile> (X::OclAny) .oclIsTypeOf(OclAny)\"\nand     non_null: \"\\<tau> \\<Turnstile> (\\<delta> X)\"\nshows             \"\\<tau> \\<Turnstile> (X .oclAsType(Person)) \\<triangleq> invalid\"", "lemma down_cast_type':\nassumes isOclAny: \"\\<tau> \\<Turnstile> (X::OclAny) .oclIsTypeOf(OclAny)\"\nand     non_null: \"\\<tau> \\<Turnstile> (\\<delta> X)\"\nshows             \"\\<tau> \\<Turnstile> not (\\<upsilon> (X .oclAsType(Person)))\"", "lemma up_down_cast :\nassumes isdef: \"\\<tau> \\<Turnstile> (\\<delta> X)\"\nshows \"\\<tau> \\<Turnstile> ((X::Person) .oclAsType(OclAny) .oclAsType(Person) \\<triangleq> X)\"", "lemma up_down_cast_Person_OclAny_Person [simp]:\nshows \"((X::Person) .oclAsType(OclAny) .oclAsType(Person) = X)\"", "lemma up_down_cast_Person_OclAny_Person':\nassumes \"\\<tau> \\<Turnstile> \\<upsilon> X\"\nshows   \"\\<tau> \\<Turnstile> (((X :: Person) .oclAsType(OclAny) .oclAsType(Person)) \\<doteq> X)\"", "lemma up_down_cast_Person_OclAny_Person'': \nassumes \"\\<tau> \\<Turnstile> \\<upsilon> (X :: Person)\"\nshows   \"\\<tau> \\<Turnstile> (X .oclIsTypeOf(Person) implies (X .oclAsType(OclAny) .oclAsType(Person)) \\<doteq> X)\"", "lemma cp_OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person_Person: \"cp P \\<Longrightarrow> cp(\\<lambda>X.(P(X::Person)::Person).oclIsKindOf(OclAny))\"", "lemma cp_OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny_OclAny: \"cp P \\<Longrightarrow> cp(\\<lambda>X.(P(X::OclAny)::OclAny).oclIsKindOf(OclAny))\"", "lemma cp_OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person_Person: \"cp P \\<Longrightarrow> cp(\\<lambda>X.(P(X::Person)::Person).oclIsKindOf(Person))\"", "lemma cp_OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny_OclAny: \"cp P \\<Longrightarrow> cp(\\<lambda>X.(P(X::OclAny)::OclAny).oclIsKindOf(Person))\"", "lemma cp_OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person_OclAny: \"cp P \\<Longrightarrow> cp(\\<lambda>X.(P(X::Person)::OclAny).oclIsKindOf(OclAny))\"", "lemma cp_OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny_Person: \"cp P \\<Longrightarrow> cp(\\<lambda>X.(P(X::OclAny)::Person).oclIsKindOf(OclAny))\"", "lemma cp_OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person_OclAny: \"cp P \\<Longrightarrow> cp(\\<lambda>X.(P(X::Person)::OclAny).oclIsKindOf(Person))\"", "lemma cp_OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny_Person: \"cp P \\<Longrightarrow> cp(\\<lambda>X.(P(X::OclAny)::Person).oclIsKindOf(Person))\"", "lemmas [simp] =\n cp_OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person_Person\n cp_OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny_OclAny\n cp_OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person_Person\n cp_OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny_OclAny\n\n cp_OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person_OclAny\n cp_OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny_Person\n cp_OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person_OclAny\n cp_OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny_Person", "lemma OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny_strict1[simp] : \"(invalid::OclAny) .oclIsKindOf(OclAny) = invalid\"", "lemma OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny_strict2[simp] : \"(null::OclAny) .oclIsKindOf(OclAny) = true\"", "lemma OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person_strict1[simp] : \"(invalid::Person) .oclIsKindOf(OclAny) = invalid\"", "lemma OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person_strict2[simp] : \"(null::Person) .oclIsKindOf(OclAny) = true\"", "lemma OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny_strict1[simp]: \"(invalid::OclAny) .oclIsKindOf(Person) = invalid\"", "lemma OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny_strict2[simp]: \"(null::OclAny) .oclIsKindOf(Person) = true\"", "lemma OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person_strict1[simp]: \"(invalid::Person) .oclIsKindOf(Person) = invalid\"", "lemma OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person_strict2[simp]: \"(null::Person) .oclIsKindOf(Person) = true\"", "lemma actualKind_larger_staticKind:\nassumes isdef: \"\\<tau> \\<Turnstile> (\\<delta> X)\"\nshows          \"\\<tau> \\<Turnstile>  ((X::Person) .oclIsKindOf(OclAny) \\<triangleq> true)\"", "lemma down_cast_kind:\nassumes isOclAny: \"\\<not> (\\<tau> \\<Turnstile> ((X::OclAny).oclIsKindOf(Person)))\"\nand     non_null: \"\\<tau> \\<Turnstile> (\\<delta> X)\"\nshows             \"\\<tau> \\<Turnstile> ((X .oclAsType(Person)) \\<triangleq> invalid)\"", "lemmas [simp] = Person_def OclAny_def", "lemma OclAllInstances_generic\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_exec: \"OclAllInstances_generic pre_post OclAny =\n             (\\<lambda>\\<tau>.  Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e  \\<lfloor>\\<lfloor> Some ` OclAny ` ran (heap (pre_post \\<tau>)) \\<rfloor>\\<rfloor>)\"", "lemma OclAllInstances_at_post\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_exec: \"OclAny .allInstances() =\n             (\\<lambda>\\<tau>.  Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e  \\<lfloor>\\<lfloor> Some ` OclAny ` ran (heap (snd \\<tau>)) \\<rfloor>\\<rfloor>)\"", "lemma OclAllInstances_at_pre\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_exec: \"OclAny .allInstances@pre() =\n             (\\<lambda>\\<tau>.  Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e  \\<lfloor>\\<lfloor> Some ` OclAny ` ran (heap (fst \\<tau>)) \\<rfloor>\\<rfloor>) \"", "lemma OclAny_allInstances_generic_oclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y1:\nassumes [simp]: \"\\<And>x. pre_post (x, x) = x\"\nshows \"\\<exists>\\<tau>. (\\<tau> \\<Turnstile>     ((OclAllInstances_generic pre_post OclAny)->forAll\\<^sub>S\\<^sub>e\\<^sub>t(X|X .oclIsTypeOf(OclAny))))\"", "lemma OclAny_allInstances_at_post_oclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y1:\n\"\\<exists>\\<tau>. (\\<tau> \\<Turnstile>     (OclAny .allInstances()->forAll\\<^sub>S\\<^sub>e\\<^sub>t(X|X .oclIsTypeOf(OclAny))))\"", "lemma OclAny_allInstances_at_pre_oclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y1:\n\"\\<exists>\\<tau>. (\\<tau> \\<Turnstile>     (OclAny .allInstances@pre()->forAll\\<^sub>S\\<^sub>e\\<^sub>t(X|X .oclIsTypeOf(OclAny))))\"", "lemma OclAny_allInstances_generic_oclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y2:\nassumes [simp]: \"\\<And>x. pre_post (x, x) = x\"\nshows \"\\<exists>\\<tau>. (\\<tau> \\<Turnstile> not ((OclAllInstances_generic pre_post OclAny)->forAll\\<^sub>S\\<^sub>e\\<^sub>t(X|X .oclIsTypeOf(OclAny))))\"", "lemma OclAny_allInstances_at_post_oclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y2:\n\"\\<exists>\\<tau>. (\\<tau> \\<Turnstile> not (OclAny .allInstances()->forAll\\<^sub>S\\<^sub>e\\<^sub>t(X|X .oclIsTypeOf(OclAny))))\"", "lemma OclAny_allInstances_at_pre_oclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y2:\n\"\\<exists>\\<tau>. (\\<tau> \\<Turnstile> not (OclAny .allInstances@pre()->forAll\\<^sub>S\\<^sub>e\\<^sub>t(X|X .oclIsTypeOf(OclAny))))\"", "lemma Person_allInstances_generic_oclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n:\n\"\\<tau> \\<Turnstile> ((OclAllInstances_generic pre_post Person)->forAll\\<^sub>S\\<^sub>e\\<^sub>t(X|X .oclIsTypeOf(Person)))\"", "lemma Person_allInstances_at_post_oclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n:\n\"\\<tau> \\<Turnstile> (Person .allInstances()->forAll\\<^sub>S\\<^sub>e\\<^sub>t(X|X .oclIsTypeOf(Person)))\"", "lemma Person_allInstances_at_pre_oclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n:\n\"\\<tau> \\<Turnstile> (Person .allInstances@pre()->forAll\\<^sub>S\\<^sub>e\\<^sub>t(X|X .oclIsTypeOf(Person)))\"", "lemma OclAny_allInstances_generic_oclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y:\n\"\\<tau> \\<Turnstile> ((OclAllInstances_generic pre_post OclAny)->forAll\\<^sub>S\\<^sub>e\\<^sub>t(X|X .oclIsKindOf(OclAny)))\"", "lemma OclAny_allInstances_at_post_oclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y:\n\"\\<tau> \\<Turnstile> (OclAny .allInstances()->forAll\\<^sub>S\\<^sub>e\\<^sub>t(X|X .oclIsKindOf(OclAny)))\"", "lemma OclAny_allInstances_at_pre_oclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y:\n\"\\<tau> \\<Turnstile> (OclAny .allInstances@pre()->forAll\\<^sub>S\\<^sub>e\\<^sub>t(X|X .oclIsKindOf(OclAny)))\"", "lemma Person_allInstances_generic_oclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y:\n\"\\<tau> \\<Turnstile> ((OclAllInstances_generic pre_post Person)->forAll\\<^sub>S\\<^sub>e\\<^sub>t(X|X .oclIsKindOf(OclAny)))\"", "lemma Person_allInstances_at_post_oclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y:\n\"\\<tau> \\<Turnstile> (Person .allInstances()->forAll\\<^sub>S\\<^sub>e\\<^sub>t(X|X .oclIsKindOf(OclAny)))\"", "lemma Person_allInstances_at_pre_oclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y:\n\"\\<tau> \\<Turnstile> (Person .allInstances@pre()->forAll\\<^sub>S\\<^sub>e\\<^sub>t(X|X .oclIsKindOf(OclAny)))\"", "lemma Person_allInstances_generic_oclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n:\n\"\\<tau> \\<Turnstile> ((OclAllInstances_generic pre_post Person)->forAll\\<^sub>S\\<^sub>e\\<^sub>t(X|X .oclIsKindOf(Person)))\"", "lemma Person_allInstances_at_post_oclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n:\n\"\\<tau> \\<Turnstile> (Person .allInstances()->forAll\\<^sub>S\\<^sub>e\\<^sub>t(X|X .oclIsKindOf(Person)))\"", "lemma Person_allInstances_at_pre_oclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n:\n\"\\<tau> \\<Turnstile> (Person .allInstances@pre()->forAll\\<^sub>S\\<^sub>e\\<^sub>t(X|X .oclIsKindOf(Person)))\"", "lemmas dot_accessor =\n  dot\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\\<A>\\<N>\\<Y>_def\n  dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<B>\\<O>\\<S>\\<S>_def\n  dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<S>\\<A>\\<L>\\<A>\\<R>\\<Y>_def\n  dot\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\\<A>\\<N>\\<Y>_at_pre_def\n  dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<B>\\<O>\\<S>\\<S>_at_pre_def\n  dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<S>\\<A>\\<L>\\<A>\\<R>\\<Y>_at_pre_def", "lemmas [simp] = eval_extract_def", "lemma cp_dot\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\\<A>\\<N>\\<Y>: \"((X).any) \\<tau> = ((\\<lambda>_. X \\<tau>).any) \\<tau>\"", "lemma cp_dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<B>\\<O>\\<S>\\<S>: \"((X).boss) \\<tau> = ((\\<lambda>_. X \\<tau>).boss) \\<tau>\"", "lemma cp_dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<S>\\<A>\\<L>\\<A>\\<R>\\<Y>: \"((X).salary) \\<tau> = ((\\<lambda>_. X \\<tau>).salary) \\<tau>\"", "lemma cp_dot\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\\<A>\\<N>\\<Y>_at_pre: \"((X).any@pre) \\<tau> = ((\\<lambda>_. X \\<tau>).any@pre) \\<tau>\"", "lemma cp_dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<B>\\<O>\\<S>\\<S>_at_pre: \"((X).boss@pre) \\<tau> = ((\\<lambda>_. X \\<tau>).boss@pre) \\<tau>\"", "lemma cp_dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<S>\\<A>\\<L>\\<A>\\<R>\\<Y>_at_pre: \"((X).salary@pre) \\<tau> = ((\\<lambda>_. X \\<tau>).salary@pre) \\<tau>\"", "lemmas cp_dot\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\\<A>\\<N>\\<Y>_I [simp, intro!]=\n       cp_dot\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\\<A>\\<N>\\<Y>[THEN allI[THEN allI],\n                          of \"\\<lambda> X _. X\" \"\\<lambda> _ \\<tau>. \\<tau>\", THEN cpI1]", "lemmas cp_dot\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\\<A>\\<N>\\<Y>_at_pre_I [simp, intro!]=\n       cp_dot\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\\<A>\\<N>\\<Y>_at_pre[THEN allI[THEN allI],\n                          of \"\\<lambda> X _. X\" \"\\<lambda> _ \\<tau>. \\<tau>\", THEN cpI1]", "lemmas cp_dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<B>\\<O>\\<S>\\<S>_I [simp, intro!]=\n       cp_dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<B>\\<O>\\<S>\\<S>[THEN allI[THEN allI],\n                          of \"\\<lambda> X _. X\" \"\\<lambda> _ \\<tau>. \\<tau>\", THEN cpI1]", "lemmas cp_dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<B>\\<O>\\<S>\\<S>_at_pre_I [simp, intro!]=\n       cp_dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<B>\\<O>\\<S>\\<S>_at_pre[THEN allI[THEN allI],\n                          of \"\\<lambda> X _. X\" \"\\<lambda> _ \\<tau>. \\<tau>\", THEN cpI1]", "lemmas cp_dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<S>\\<A>\\<L>\\<A>\\<R>\\<Y>_I [simp, intro!]=\n       cp_dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<S>\\<A>\\<L>\\<A>\\<R>\\<Y>[THEN allI[THEN allI],\n                          of \"\\<lambda> X _. X\" \"\\<lambda> _ \\<tau>. \\<tau>\", THEN cpI1]", "lemmas cp_dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<S>\\<A>\\<L>\\<A>\\<R>\\<Y>_at_pre_I [simp, intro!]=\n       cp_dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<S>\\<A>\\<L>\\<A>\\<R>\\<Y>_at_pre[THEN allI[THEN allI],\n                          of \"\\<lambda> X _. X\" \"\\<lambda> _ \\<tau>. \\<tau>\", THEN cpI1]", "lemma dot\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\\<A>\\<N>\\<Y>_nullstrict [simp]: \"(null).any = invalid\"", "lemma dot\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\\<A>\\<N>\\<Y>_at_pre_nullstrict [simp] : \"(null).any@pre = invalid\"", "lemma dot\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\\<A>\\<N>\\<Y>_strict [simp] : \"(invalid).any = invalid\"", "lemma dot\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\\<A>\\<N>\\<Y>_at_pre_strict [simp] : \"(invalid).any@pre = invalid\"", "lemma dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<B>\\<O>\\<S>\\<S>_nullstrict [simp]: \"(null).boss = invalid\"", "lemma dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<B>\\<O>\\<S>\\<S>_at_pre_nullstrict [simp] : \"(null).boss@pre = invalid\"", "lemma dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<B>\\<O>\\<S>\\<S>_strict [simp] : \"(invalid).boss = invalid\"", "lemma dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<B>\\<O>\\<S>\\<S>_at_pre_strict [simp] : \"(invalid).boss@pre = invalid\"", "lemma dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<S>\\<A>\\<L>\\<A>\\<R>\\<Y>_nullstrict [simp]: \"(null).salary = invalid\"", "lemma dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<S>\\<A>\\<L>\\<A>\\<R>\\<Y>_at_pre_nullstrict [simp] : \"(null).salary@pre = invalid\"", "lemma dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<S>\\<A>\\<L>\\<A>\\<R>\\<Y>_strict [simp] : \"(invalid).salary = invalid\"", "lemma dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<S>\\<A>\\<L>\\<A>\\<R>\\<Y>_at_pre_strict [simp] : \"(invalid).salary@pre = invalid\"", "lemma dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<B>\\<O>\\<S>\\<S>_def_mono:\"\\<tau> \\<Turnstile> \\<delta>(X .boss) \\<Longrightarrow> \\<tau> \\<Turnstile> \\<delta>(X)\"", "lemma repr_boss:  \nassumes A : \"\\<tau> \\<Turnstile> \\<delta>(x .boss)\"\nshows      \"is_represented_in_state in_post_state (x .boss) Person \\<tau>\"", "lemma repr_bossX : \nassumes A: \"\\<tau> \\<Turnstile> \\<delta>(x .boss)\"\nshows \"\\<tau> \\<Turnstile> ((Person .allInstances()) ->includes\\<^sub>S\\<^sub>e\\<^sub>t(x .boss))\"", "lemma basic_\\<tau>_wff: \"WFF(\\<sigma>\\<^sub>1,\\<sigma>\\<^sub>1')\"", "lemma [simp,code_unfold]: \"dom (heap \\<sigma>\\<^sub>1) = {oid0,oid1\\<^cancel>\\<open>,oid2\\<close>,oid3,oid4,oid5\\<^cancel>\\<open>,oid6,oid7\\<close>,oid8}\"", "lemma [simp,code_unfold]: \"dom (heap \\<sigma>\\<^sub>1') = {oid0,oid1,oid2,oid3\\<^cancel>\\<open>,oid4\\<close>,oid5,oid6,oid7,oid8}\"", "lemma [code_unfold]: \"((x::Person) \\<doteq> y) = StrictRefEq\\<^sub>O\\<^sub>b\\<^sub>j\\<^sub>e\\<^sub>c\\<^sub>t x y\"", "lemma [code_unfold]: \"((x::OclAny) \\<doteq> y) = StrictRefEq\\<^sub>O\\<^sub>b\\<^sub>j\\<^sub>e\\<^sub>c\\<^sub>t x y\"", "lemmas [simp,code_unfold] =\n OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny\n OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person\n OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny\n OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person\n\n OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny\n OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person\n OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny\n OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person\n\n OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny\n OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person\n OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny\n OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person", "lemma \"               (\\<sigma>\\<^sub>1,\\<sigma>\\<^sub>1') \\<Turnstile>      (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1 .oclIsMaintained())\"", "lemma \"\\<And>s\\<^sub>p\\<^sub>r\\<^sub>e s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t.   (s\\<^sub>p\\<^sub>r\\<^sub>e,s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t) \\<Turnstile>    ((X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1 .oclAsType(OclAny) .oclAsType(Person)) \\<doteq> X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1)\"", "lemma \"               (\\<sigma>\\<^sub>1,\\<sigma>\\<^sub>1') \\<Turnstile>      (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n2 .oclIsMaintained())\"", "lemma \"               (\\<sigma>\\<^sub>1,\\<sigma>\\<^sub>1') \\<Turnstile>      (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n3 .oclIsNew())\"", "lemma \"               (\\<sigma>\\<^sub>1,\\<sigma>\\<^sub>1') \\<Turnstile>      (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n4 .oclIsMaintained())\"", "lemma \"               (\\<sigma>\\<^sub>1,\\<sigma>\\<^sub>1') \\<Turnstile>      (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n5 .oclIsDeleted())\"", "lemma \"               (\\<sigma>\\<^sub>1,\\<sigma>\\<^sub>1') \\<Turnstile>      (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n6 .oclIsMaintained())\"", "lemma \"\\<And>s\\<^sub>p\\<^sub>r\\<^sub>e s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t.   (s\\<^sub>p\\<^sub>r\\<^sub>e,s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t) \\<Turnstile>     ((X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n7 .oclAsType(Person) .oclAsType(OclAny)\n                                                                   .oclAsType(Person))\n                                      \\<doteq> (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n7 .oclAsType(Person)))\"", "lemma \"               (\\<sigma>\\<^sub>1,\\<sigma>\\<^sub>1') \\<Turnstile>       (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n7 .oclIsNew())\"", "lemma \\<sigma>_modifiedonly: \"(\\<sigma>\\<^sub>1,\\<sigma>\\<^sub>1') \\<Turnstile> (Set{ X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1 .oclAsType(OclAny)\n                      , X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n2 .oclAsType(OclAny)\n                      \\<^cancel>\\<open>, X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n3 .oclAsType(OclAny)\\<close>\n                      , X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n4 .oclAsType(OclAny)\n                      \\<^cancel>\\<open>, X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n5 .oclAsType(OclAny)\\<close>\n                      , X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n6 .oclAsType(OclAny)\n                      \\<^cancel>\\<open>, X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n7 .oclAsType(OclAny)\\<close>\n                      \\<^cancel>\\<open>, X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n8 .oclAsType(OclAny)\\<close>\n                      \\<^cancel>\\<open>, X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9 .oclAsType(OclAny)\\<close>}->oclIsModifiedOnly())\"", "lemma \"(\\<sigma>\\<^sub>1,\\<sigma>\\<^sub>1') \\<Turnstile> ((X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9 @pre (\\<lambda>x. \\<lfloor>OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA> x\\<rfloor>))  \\<triangleq> X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9)\"", "lemma \"(\\<sigma>\\<^sub>1,\\<sigma>\\<^sub>1') \\<Turnstile> ((X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9 @post (\\<lambda>x. \\<lfloor>OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA> x\\<rfloor>))  \\<triangleq> X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9)\"", "lemma \"(\\<sigma>\\<^sub>1,\\<sigma>\\<^sub>1') \\<Turnstile> (((X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9 .oclAsType(OclAny)) @pre (\\<lambda>x. \\<lfloor>OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA> x\\<rfloor>)) \\<triangleq>\n                   ((X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9 .oclAsType(OclAny)) @post (\\<lambda>x. \\<lfloor>OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA> x\\<rfloor>)))\"", "lemma perm_\\<sigma>\\<^sub>1' : \"\\<sigma>\\<^sub>1' = \\<lparr> heap = Map.empty\n                           (oid8 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9)\n                           (oid7 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8)\n                           (oid6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7)\n                           (oid5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6)\n                           \\<^cancel>\\<open>oid4\\<close>\n                           (oid3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4)\n                           (oid2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3)\n                           (oid1 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2)\n                           (oid0 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1)\n                       , assocs = assocs \\<sigma>\\<^sub>1' \\<rparr>\"", "lemma \"\\<And>\\<sigma>\\<^sub>1.\n (\\<sigma>\\<^sub>1,\\<sigma>\\<^sub>1') \\<Turnstile> (Person .allInstances() \\<doteq> Set{ X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1, X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n2, X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n3, X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n4\\<^cancel>\\<open>, X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n5\\<close>, X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n6,\n                                           X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n7 .oclAsType(Person)\\<^cancel>\\<open>, X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n8\\<close>, X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9 })\"", "lemma \"\\<And>\\<sigma>\\<^sub>1.\n (\\<sigma>\\<^sub>1,\\<sigma>\\<^sub>1') \\<Turnstile> (OclAny .allInstances() \\<doteq> Set{ X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1 .oclAsType(OclAny), X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n2 .oclAsType(OclAny),\n                                           X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n3 .oclAsType(OclAny), X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n4 .oclAsType(OclAny)\n                                           \\<^cancel>\\<open>, X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n5\\<close>, X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n6 .oclAsType(OclAny),\n                                           X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n7, X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n8, X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9 .oclAsType(OclAny) })\""], "translations": [["", "lemmas cps23 = \n    cp_StrictRefEq\\<^sub>O\\<^sub>b\\<^sub>j\\<^sub>e\\<^sub>c\\<^sub>t[of \"x::Person\" \"y::Person\" \"\\<tau>\",\n                         simplified StrictRefEq\\<^sub>O\\<^sub>b\\<^sub>j\\<^sub>e\\<^sub>c\\<^sub>t_\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n[symmetric]]\n    cp_intro(9)         [of \"P::Person \\<Rightarrow>Person\"\"Q::Person \\<Rightarrow>Person\",\n                         simplified StrictRefEq\\<^sub>O\\<^sub>b\\<^sub>j\\<^sub>e\\<^sub>c\\<^sub>t_\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n[symmetric] ]\n    StrictRefEq\\<^sub>O\\<^sub>b\\<^sub>j\\<^sub>e\\<^sub>c\\<^sub>t_def      [of \"x::Person\" \"y::Person\",\n                         simplified StrictRefEq\\<^sub>O\\<^sub>b\\<^sub>j\\<^sub>e\\<^sub>c\\<^sub>t_\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n[symmetric]]\n    StrictRefEq\\<^sub>O\\<^sub>b\\<^sub>j\\<^sub>e\\<^sub>c\\<^sub>t_defargs  [of _ \"x::Person\" \"y::Person\",\n                         simplified StrictRefEq\\<^sub>O\\<^sub>b\\<^sub>j\\<^sub>e\\<^sub>c\\<^sub>t_\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n[symmetric]]\n    StrictRefEq\\<^sub>O\\<^sub>b\\<^sub>j\\<^sub>e\\<^sub>c\\<^sub>t_strict1\n                        [of \"x::Person\",\n                         simplified StrictRefEq\\<^sub>O\\<^sub>b\\<^sub>j\\<^sub>e\\<^sub>c\\<^sub>t_\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n[symmetric]]\n    StrictRefEq\\<^sub>O\\<^sub>b\\<^sub>j\\<^sub>e\\<^sub>c\\<^sub>t_strict2\n                        [of \"x::Person\",\n                         simplified StrictRefEq\\<^sub>O\\<^sub>b\\<^sub>j\\<^sub>e\\<^sub>c\\<^sub>t_\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n[symmetric]]\n  for x y \\<tau> P Q"], ["", "text\\<open>For each Class \\emph{C}, we will have a casting operation \\inlineocl{.oclAsType($C$)},\n   a test on the actual type \\inlineocl{.oclIsTypeOf($C$)} as well as its relaxed form\n   \\inlineocl{.oclIsKindOf($C$)} (corresponding exactly to Java's \\verb+instanceof+-operator.\n\\<close>"], ["", "text\\<open>Thus, since we have two class-types in our concrete class hierarchy, we have\ntwo operations to declare and to provide two overloading definitions for the two static types.\n\\<close>"], ["", "section\\<open>OclAsType\\<close>"], ["", "subsection\\<open>Definition\\<close>"], ["", "consts OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y :: \"'\\<alpha> \\<Rightarrow> OclAny\" (\"(_) .oclAsType'(OclAny')\")"], ["", "consts OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n :: \"'\\<alpha> \\<Rightarrow> Person\" (\"(_) .oclAsType'(Person')\")"], ["", "definition \"OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA> = (\\<lambda>u. \\<lfloor>case u of in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y a \\<Rightarrow> a\n                                            | in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n (mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n oid a b) \\<Rightarrow> mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y oid \\<lfloor>(a,b)\\<rfloor>\\<rfloor>)\""], ["", "lemma OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA>_some: \"OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA> x \\<noteq> None\""], ["proof (prove)\ngoal (1 subgoal):\n 1. OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA>\n     x \\<noteq>\n    \\<bottom>", "by(simp add: OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA>_def)"], ["", "overloading OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y \\<equiv> \"OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y :: OclAny \\<Rightarrow> OclAny\"\nbegin"], ["", "definition OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny:\n        \"(X::OclAny) .oclAsType(OclAny) \\<equiv> X\""], ["", "end"], ["", "overloading OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y \\<equiv> \"OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y :: Person \\<Rightarrow> OclAny\"\nbegin"], ["", "definition OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person:\n        \"(X::Person) .oclAsType(OclAny) \\<equiv>\n                   (\\<lambda>\\<tau>. case X \\<tau> of\n                              \\<bottom>   \\<Rightarrow> invalid \\<tau>\n                            | \\<lfloor>\\<bottom>\\<rfloor> \\<Rightarrow> null \\<tau>\n                            | \\<lfloor>\\<lfloor>mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n oid a b \\<rfloor>\\<rfloor> \\<Rightarrow>  \\<lfloor>\\<lfloor>  (mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y oid \\<lfloor>(a,b)\\<rfloor>) \\<rfloor>\\<rfloor>)\""], ["", "end"], ["", "definition \"OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA> = \n                   (\\<lambda>u. case u of in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n p \\<Rightarrow> \\<lfloor>p\\<rfloor>\n                            | in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y (mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y oid \\<lfloor>(a,b)\\<rfloor>) \\<Rightarrow> \\<lfloor>mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n oid a b\\<rfloor>\n                            | _ \\<Rightarrow> None)\""], ["", "overloading OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n \\<equiv> \"OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n :: OclAny \\<Rightarrow> Person\"\nbegin"], ["", "definition OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny:\n        \"(X::OclAny) .oclAsType(Person) \\<equiv>\n                   (\\<lambda>\\<tau>. case X \\<tau> of\n                              \\<bottom>   \\<Rightarrow> invalid \\<tau>\n                            | \\<lfloor>\\<bottom>\\<rfloor> \\<Rightarrow> null \\<tau>\n                            | \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y oid \\<bottom> \\<rfloor>\\<rfloor> \\<Rightarrow>  invalid \\<tau>   \\<comment> \\<open>down-cast exception\\<close>\n                            | \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y oid \\<lfloor>(a,b)\\<rfloor> \\<rfloor>\\<rfloor> \\<Rightarrow>  \\<lfloor>\\<lfloor>mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n oid a b \\<rfloor>\\<rfloor>)\""], ["", "end"], ["", "overloading OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n \\<equiv> \"OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n :: Person \\<Rightarrow> Person\"\nbegin"], ["", "definition OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person:\n        \"(X::Person) .oclAsType(Person) \\<equiv> X \""], ["", "(* to avoid identity for null ? *)"], ["", "end"], ["", "text_raw\\<open>\\isatagafp\\<close>"], ["", "lemmas [simp] =\n OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny\n OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person"], ["", "subsection\\<open>Context Passing\\<close>"], ["", "lemma cp_OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person_Person: \"cp P \\<Longrightarrow> cp(\\<lambda>X. (P (X::Person)::Person) .oclAsType(OclAny))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cp P \\<Longrightarrow> cp (\\<lambda>X. P X .oclAsType(OclAny))", "by(rule cpI1, simp_all add: OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person)"], ["", "lemma cp_OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny_OclAny: \"cp P \\<Longrightarrow> cp(\\<lambda>X. (P (X::OclAny)::OclAny) .oclAsType(OclAny))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cp P \\<Longrightarrow> cp (\\<lambda>X. P X .oclAsType(OclAny))", "by(rule cpI1, simp_all add: OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny)"], ["", "lemma cp_OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person_Person: \"cp P \\<Longrightarrow> cp(\\<lambda>X. (P (X::Person)::Person) .oclAsType(Person))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cp P \\<Longrightarrow> cp (\\<lambda>X. P X .oclAsType(Person))", "by(rule cpI1, simp_all add: OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person)"], ["", "lemma cp_OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny_OclAny: \"cp P \\<Longrightarrow> cp(\\<lambda>X. (P (X::OclAny)::OclAny) .oclAsType(Person))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cp P \\<Longrightarrow> cp (\\<lambda>X. P X .oclAsType(Person))", "by(rule cpI1, simp_all add: OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny)"], ["", "lemma cp_OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person_OclAny: \"cp P \\<Longrightarrow> cp(\\<lambda>X. (P (X::Person)::OclAny) .oclAsType(OclAny))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cp P \\<Longrightarrow> cp (\\<lambda>X. P X .oclAsType(OclAny))", "by(rule cpI1, simp_all add: OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny)"], ["", "lemma cp_OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny_Person: \"cp P \\<Longrightarrow> cp(\\<lambda>X. (P (X::OclAny)::Person) .oclAsType(OclAny))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cp P \\<Longrightarrow> cp (\\<lambda>X. P X .oclAsType(OclAny))", "by(rule cpI1, simp_all add: OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person)"], ["", "lemma cp_OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person_OclAny: \"cp P \\<Longrightarrow> cp(\\<lambda>X. (P (X::Person)::OclAny) .oclAsType(Person))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cp P \\<Longrightarrow> cp (\\<lambda>X. P X .oclAsType(Person))", "by(rule cpI1, simp_all add: OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny)"], ["", "lemma cp_OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny_Person: \"cp P \\<Longrightarrow> cp(\\<lambda>X. (P (X::OclAny)::Person) .oclAsType(Person))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cp P \\<Longrightarrow> cp (\\<lambda>X. P X .oclAsType(Person))", "by(rule cpI1, simp_all add: OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person)"], ["", "lemmas [simp] =\n cp_OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person_Person\n cp_OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny_OclAny\n cp_OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person_Person\n cp_OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny_OclAny\n\n cp_OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person_OclAny\n cp_OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny_Person\n cp_OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person_OclAny\n cp_OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny_Person"], ["", "text_raw\\<open>\\endisatagafp\\<close>"], ["", "subsection\\<open>Execution with Invalid or Null as Argument\\<close>"], ["", "lemma OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny_strict : \"(invalid::OclAny) .oclAsType(OclAny) = invalid\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invalid .oclAsType(OclAny) = invalid", "by(simp)"], ["", "lemma OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny_nullstrict : \"(null::OclAny) .oclAsType(OclAny) = null\""], ["proof (prove)\ngoal (1 subgoal):\n 1. null .oclAsType(OclAny) = null", "by(simp)"], ["", "lemma OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person_strict[simp] : \"(invalid::Person) .oclAsType(OclAny) = invalid\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invalid .oclAsType(OclAny) = invalid", "by(rule ext, simp add: bot_option_def invalid_def OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person)"], ["", "lemma OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person_nullstrict[simp] : \"(null::Person) .oclAsType(OclAny) = null\""], ["proof (prove)\ngoal (1 subgoal):\n 1. null .oclAsType(OclAny) = null", "by(rule ext, simp add: null_fun_def null_option_def bot_option_def OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person)"], ["", "lemma OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny_strict[simp] : \"(invalid::OclAny) .oclAsType(Person) = invalid\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invalid .oclAsType(Person) = invalid", "by(rule ext, simp add: bot_option_def invalid_def  OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny)"], ["", "lemma OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny_nullstrict[simp] : \"(null::OclAny) .oclAsType(Person) = null\""], ["proof (prove)\ngoal (1 subgoal):\n 1. null .oclAsType(Person) = null", "by(rule ext, simp add: null_fun_def null_option_def bot_option_def  OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny)"], ["", "lemma OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person_strict : \"(invalid::Person) .oclAsType(Person) = invalid\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invalid .oclAsType(Person) = invalid", "by(simp)"], ["", "lemma OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person_nullstrict : \"(null::Person) .oclAsType(Person) = null\""], ["proof (prove)\ngoal (1 subgoal):\n 1. null .oclAsType(Person) = null", "by(simp)"], ["", "section\\<open>OclIsTypeOf\\<close>"], ["", "subsection\\<open>Definition\\<close>"], ["", "consts OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y :: \"'\\<alpha> \\<Rightarrow> Boolean\" (\"(_).oclIsTypeOf'(OclAny')\")"], ["", "consts OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n :: \"'\\<alpha> \\<Rightarrow> Boolean\" (\"(_).oclIsTypeOf'(Person')\")"], ["", "overloading OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y \\<equiv> \"OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y :: OclAny \\<Rightarrow> Boolean\"\nbegin"], ["", "definition OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny:\n        \"(X::OclAny) .oclIsTypeOf(OclAny) \\<equiv>\n                   (\\<lambda>\\<tau>. case X \\<tau> of\n                              \\<bottom>   \\<Rightarrow> invalid \\<tau>\n                            | \\<lfloor>\\<bottom>\\<rfloor> \\<Rightarrow> true \\<tau>  \\<comment> \\<open>invalid ??\\<close>\n                            | \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y oid \\<bottom> \\<rfloor>\\<rfloor> \\<Rightarrow> true \\<tau>\n                            | \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y oid \\<lfloor>_\\<rfloor> \\<rfloor>\\<rfloor> \\<Rightarrow> false \\<tau>)\""], ["", "end"], ["", "lemma OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny':\n         \"(X::OclAny) .oclIsTypeOf(OclAny) = \n                    (\\<lambda> \\<tau>. if \\<tau> \\<Turnstile> \\<upsilon> X then (case X \\<tau> of\n                                              \\<lfloor>\\<bottom>\\<rfloor> \\<Rightarrow> true \\<tau>  \\<comment> \\<open>invalid ??\\<close>\n                                           | \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y oid \\<bottom> \\<rfloor>\\<rfloor> \\<Rightarrow> true \\<tau>\n                                           | \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y oid \\<lfloor>_\\<rfloor> \\<rfloor>\\<rfloor> \\<Rightarrow> false \\<tau>)\n                                           else invalid \\<tau>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X.oclIsTypeOf(OclAny) =\n    (\\<lambda>\\<tau>.\n        if \\<tau> \\<Turnstile> \\<upsilon> X\n        then case X \\<tau> of\n             \\<lfloor>\\<bottom>\\<rfloor> \\<Rightarrow> true \\<tau>\n             | \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                                  oid\n                                  \\<bottom>\\<rfloor>\\<rfloor> \\<Rightarrow>\n                 true \\<tau>\n             | \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                                  oid\n                                  \\<lfloor>x\\<rfloor>\\<rfloor>\\<rfloor> \\<Rightarrow>\n                 false \\<tau>\n        else invalid \\<tau>)", "apply(rule ext, simp add: OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<tau>.\n       (\\<tau> \\<Turnstile> \\<upsilon> X \\<longrightarrow>\n        (case X \\<tau> of \\<bottom> \\<Rightarrow> invalid \\<tau>\n         | \\<lfloor>\\<bottom>\\<rfloor> \\<Rightarrow> true \\<tau>\n         | \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                              oid \\<bottom>\\<rfloor>\\<rfloor> \\<Rightarrow>\n             true \\<tau>\n         | \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                              oid\n                              \\<lfloor>xa\\<rfloor>\\<rfloor>\\<rfloor> \\<Rightarrow>\n             false \\<tau>) =\n        (case X \\<tau> of\n         \\<lfloor>\\<bottom>\\<rfloor> \\<Rightarrow> true \\<tau>\n         | \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                              oid \\<bottom>\\<rfloor>\\<rfloor> \\<Rightarrow>\n             true \\<tau>\n         | \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                              oid\n                              \\<lfloor>x\\<rfloor>\\<rfloor>\\<rfloor> \\<Rightarrow>\n             false \\<tau>)) \\<and>\n       (\\<tau> |\\<noteq> \\<upsilon> X \\<longrightarrow>\n        (case X \\<tau> of \\<bottom> \\<Rightarrow> invalid \\<tau>\n         | \\<lfloor>\\<bottom>\\<rfloor> \\<Rightarrow> true \\<tau>\n         | \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                              oid \\<bottom>\\<rfloor>\\<rfloor> \\<Rightarrow>\n             true \\<tau>\n         | \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                              oid\n                              \\<lfloor>xa\\<rfloor>\\<rfloor>\\<rfloor> \\<Rightarrow>\n             false \\<tau>) =\n        invalid \\<tau>)", "by(case_tac \"\\<tau> \\<Turnstile> \\<upsilon> X\", auto simp: foundation18' bot_option_def)"], ["", "interpretation OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny : \n       profile_mono_schemeV \n       \"OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y::OclAny \\<Rightarrow> Boolean\" \n       \"\\<lambda> X. (case X of\n                    \\<lfloor>None\\<rfloor> \\<Rightarrow> \\<lfloor>\\<lfloor>True\\<rfloor>\\<rfloor>  \\<comment> \\<open>invalid ??\\<close>\n                  | \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y oid None \\<rfloor>\\<rfloor> \\<Rightarrow> \\<lfloor>\\<lfloor>True\\<rfloor>\\<rfloor>\n                  | \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y oid \\<lfloor>_\\<rfloor> \\<rfloor>\\<rfloor> \\<Rightarrow> \\<lfloor>\\<lfloor>False\\<rfloor>\\<rfloor>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. profile_mono_schemeV\n     OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n     (\\<lambda>X.\n         case X of\n         \\<lfloor>\\<bottom>\\<rfloor> \\<Rightarrow>\n           \\<lfloor>\\<lfloor>True\\<rfloor>\\<rfloor>\n         | \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                              oid \\<bottom>\\<rfloor>\\<rfloor> \\<Rightarrow>\n             \\<lfloor>\\<lfloor>True\\<rfloor>\\<rfloor>\n         | \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                              oid\n                              \\<lfloor>x\\<rfloor>\\<rfloor>\\<rfloor> \\<Rightarrow>\n             \\<lfloor>\\<lfloor>False\\<rfloor>\\<rfloor>)", "apply(unfold_locales, simp add: atomize_eq, rule ext)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x \\<tau>.\n       x.oclIsTypeOf(OclAny) \\<tau> =\n       (if (\\<upsilon> x) \\<tau> = true \\<tau>\n        then case x \\<tau> of\n             \\<lfloor>\\<bottom>\\<rfloor> \\<Rightarrow>\n               \\<lfloor>\\<lfloor>True\\<rfloor>\\<rfloor>\n             | \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                                  oid\n                                  \\<bottom>\\<rfloor>\\<rfloor> \\<Rightarrow>\n                 \\<lfloor>\\<lfloor>True\\<rfloor>\\<rfloor>\n             | \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                                  oid\n                                  \\<lfloor>xa\\<rfloor>\\<rfloor>\\<rfloor> \\<Rightarrow>\n                 \\<lfloor>\\<lfloor>False\\<rfloor>\\<rfloor>\n        else invalid \\<tau>)", "by(auto simp:  OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny' OclValid_def true_def false_def \n              split: option.split type\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y.split)"], ["", "overloading OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y \\<equiv> \"OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y :: Person \\<Rightarrow> Boolean\"\nbegin"], ["", "definition OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person:\n        \"(X::Person) .oclIsTypeOf(OclAny) \\<equiv>\n                   (\\<lambda>\\<tau>. case X \\<tau> of\n                              \\<bottom>   \\<Rightarrow> invalid \\<tau>\n                            | \\<lfloor>\\<bottom>\\<rfloor> \\<Rightarrow> true \\<tau>    \\<comment> \\<open>invalid ??\\<close>\n                            | \\<lfloor>\\<lfloor> _ \\<rfloor>\\<rfloor> \\<Rightarrow> false \\<tau>)  \\<comment> \\<open>must have actual type \\<open>Person\\<close> otherwise\\<close>\""], ["", "end"], ["", "overloading OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n \\<equiv> \"OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n :: OclAny \\<Rightarrow> Boolean\"\nbegin"], ["", "definition OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny:\n        \"(X::OclAny) .oclIsTypeOf(Person) \\<equiv>\n                   (\\<lambda>\\<tau>. case X \\<tau> of\n                              \\<bottom>   \\<Rightarrow> invalid \\<tau>\n                            | \\<lfloor>\\<bottom>\\<rfloor> \\<Rightarrow> true \\<tau>\n                            | \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y oid \\<bottom> \\<rfloor>\\<rfloor> \\<Rightarrow> false \\<tau>\n                            | \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y oid \\<lfloor>_\\<rfloor> \\<rfloor>\\<rfloor> \\<Rightarrow> true \\<tau>)\""], ["", "end"], ["", "overloading OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n \\<equiv> \"OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n :: Person \\<Rightarrow> Boolean\"\nbegin"], ["", "definition OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person:\n        \"(X::Person) .oclIsTypeOf(Person) \\<equiv>\n                   (\\<lambda>\\<tau>. case X \\<tau> of\n                              \\<bottom> \\<Rightarrow> invalid \\<tau>\n                            | _ \\<Rightarrow> true \\<tau>)\""], ["", "(* for (* \\<lfloor>\\<lfloor> _ \\<rfloor>\\<rfloor> \\<Rightarrow> true \\<tau> *) : must have actual type Node otherwise  *)"], ["", "end"], ["", "text_raw\\<open>\\isatagafp\\<close>"], ["", "subsection\\<open>Context Passing\\<close>"], ["", "lemma cp_OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person_Person: \"cp P \\<Longrightarrow> cp(\\<lambda>X.(P(X::Person)::Person).oclIsTypeOf(OclAny))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cp P \\<Longrightarrow> cp (\\<lambda>X. P X.oclIsTypeOf(OclAny))", "by(rule cpI1, simp_all add: OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person)"], ["", "lemma cp_OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny_OclAny: \"cp P \\<Longrightarrow> cp(\\<lambda>X.(P(X::OclAny)::OclAny).oclIsTypeOf(OclAny))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cp P \\<Longrightarrow> cp (\\<lambda>X. P X.oclIsTypeOf(OclAny))", "by(rule cpI1, simp_all add: OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny)"], ["", "lemma cp_OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person_Person: \"cp P \\<Longrightarrow> cp(\\<lambda>X.(P(X::Person)::Person).oclIsTypeOf(Person))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cp P \\<Longrightarrow> cp (\\<lambda>X. P X.oclIsTypeOf(Person))", "by(rule cpI1, simp_all add: OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person)"], ["", "lemma cp_OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny_OclAny: \"cp P \\<Longrightarrow> cp(\\<lambda>X.(P(X::OclAny)::OclAny).oclIsTypeOf(Person))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cp P \\<Longrightarrow> cp (\\<lambda>X. P X.oclIsTypeOf(Person))", "by(rule cpI1, simp_all add: OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny)"], ["", "lemma cp_OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person_OclAny: \"cp P \\<Longrightarrow> cp(\\<lambda>X.(P(X::Person)::OclAny).oclIsTypeOf(OclAny))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cp P \\<Longrightarrow> cp (\\<lambda>X. P X.oclIsTypeOf(OclAny))", "by(rule cpI1, simp_all add: OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny)"], ["", "lemma cp_OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny_Person: \"cp P \\<Longrightarrow> cp(\\<lambda>X.(P(X::OclAny)::Person).oclIsTypeOf(OclAny))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cp P \\<Longrightarrow> cp (\\<lambda>X. P X.oclIsTypeOf(OclAny))", "by(rule cpI1, simp_all add: OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person)"], ["", "lemma cp_OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person_OclAny: \"cp P \\<Longrightarrow> cp(\\<lambda>X.(P(X::Person)::OclAny).oclIsTypeOf(Person))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cp P \\<Longrightarrow> cp (\\<lambda>X. P X.oclIsTypeOf(Person))", "by(rule cpI1, simp_all add: OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny)"], ["", "lemma cp_OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny_Person: \"cp P \\<Longrightarrow> cp(\\<lambda>X.(P(X::OclAny)::Person).oclIsTypeOf(Person))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cp P \\<Longrightarrow> cp (\\<lambda>X. P X.oclIsTypeOf(Person))", "by(rule cpI1, simp_all add: OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person)"], ["", "lemmas [simp] =\n cp_OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person_Person\n cp_OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny_OclAny\n cp_OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person_Person\n cp_OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny_OclAny\n\n cp_OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person_OclAny\n cp_OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny_Person\n cp_OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person_OclAny\n cp_OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny_Person"], ["", "text_raw\\<open>\\endisatagafp\\<close>"], ["", "subsection\\<open>Execution with Invalid or Null as Argument\\<close>"], ["", "lemma OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny_strict1[simp]:\n     \"(invalid::OclAny) .oclIsTypeOf(OclAny) = invalid\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invalid.oclIsTypeOf(OclAny) = invalid", "by(rule ext, simp add: null_fun_def null_option_def bot_option_def null_def invalid_def\n                       OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny)"], ["", "lemma OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny_strict2[simp]:\n     \"(null::OclAny) .oclIsTypeOf(OclAny) = true\""], ["proof (prove)\ngoal (1 subgoal):\n 1. null.oclIsTypeOf(OclAny) = true", "by(rule ext, simp add: null_fun_def null_option_def bot_option_def null_def invalid_def\n                       OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny)"], ["", "lemma OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person_strict1[simp]:\n     \"(invalid::Person) .oclIsTypeOf(OclAny) = invalid\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invalid.oclIsTypeOf(OclAny) = invalid", "by(rule ext, simp add: null_fun_def null_option_def bot_option_def null_def invalid_def\n                       OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person)"], ["", "lemma OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person_strict2[simp]:\n     \"(null::Person) .oclIsTypeOf(OclAny) = true\""], ["proof (prove)\ngoal (1 subgoal):\n 1. null.oclIsTypeOf(OclAny) = true", "by(rule ext, simp add: null_fun_def null_option_def bot_option_def null_def invalid_def\n                       OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person)"], ["", "lemma OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny_strict1[simp]:\n     \"(invalid::OclAny) .oclIsTypeOf(Person) = invalid\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invalid.oclIsTypeOf(Person) = invalid", "by(rule ext, simp add: null_fun_def null_option_def bot_option_def null_def invalid_def\n                       OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny)"], ["", "lemma OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny_strict2[simp]:\n     \"(null::OclAny) .oclIsTypeOf(Person) = true\""], ["proof (prove)\ngoal (1 subgoal):\n 1. null.oclIsTypeOf(Person) = true", "by(rule ext, simp add: null_fun_def null_option_def bot_option_def null_def invalid_def\n                       OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny)"], ["", "lemma OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person_strict1[simp]:\n     \"(invalid::Person) .oclIsTypeOf(Person) = invalid\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invalid.oclIsTypeOf(Person) = invalid", "by(rule ext, simp add: null_fun_def null_option_def bot_option_def null_def invalid_def\n                       OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person)"], ["", "lemma OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person_strict2[simp]:\n     \"(null::Person) .oclIsTypeOf(Person) = true\""], ["proof (prove)\ngoal (1 subgoal):\n 1. null.oclIsTypeOf(Person) = true", "by(rule ext, simp add: null_fun_def null_option_def bot_option_def null_def invalid_def\n                       OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person)"], ["", "subsection\\<open>Up Down Casting\\<close>"], ["", "lemma actualType_larger_staticType:\nassumes isdef: \"\\<tau> \\<Turnstile> (\\<delta> X)\"\nshows          \"\\<tau> \\<Turnstile> (X::Person) .oclIsTypeOf(OclAny) \\<triangleq> false\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau> \\<Turnstile> X.oclIsTypeOf(OclAny) \\<triangleq> false", "using isdef"], ["proof (prove)\nusing this:\n  \\<tau> \\<Turnstile> \\<delta> X\n\ngoal (1 subgoal):\n 1. \\<tau> \\<Turnstile> X.oclIsTypeOf(OclAny) \\<triangleq> false", "by(auto simp : null_option_def bot_option_def\n               OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person foundation22 foundation16)"], ["", "lemma down_cast_type:\nassumes isOclAny: \"\\<tau> \\<Turnstile> (X::OclAny) .oclIsTypeOf(OclAny)\"\nand     non_null: \"\\<tau> \\<Turnstile> (\\<delta> X)\"\nshows             \"\\<tau> \\<Turnstile> (X .oclAsType(Person)) \\<triangleq> invalid\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau> \\<Turnstile> X .oclAsType(Person) \\<triangleq> invalid", "using isOclAny non_null"], ["proof (prove)\nusing this:\n  \\<tau> \\<Turnstile> X.oclIsTypeOf(OclAny)\n  \\<tau> \\<Turnstile> \\<delta> X\n\ngoal (1 subgoal):\n 1. \\<tau> \\<Turnstile> X .oclAsType(Person) \\<triangleq> invalid", "apply(auto simp : bot_fun_def null_fun_def null_option_def bot_option_def null_def invalid_def\n                  OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny foundation22 foundation16\n           split: option.split type\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y.split type\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n.split)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1 a b.\n       \\<lbrakk>\\<tau> \\<Turnstile> X.oclIsTypeOf(OclAny);\n        X \\<tau> =\n        \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                           x1 \\<lfloor>(a,\n  b)\\<rfloor>\\<rfloor>\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> False", "by(simp add: OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny  OclValid_def false_def true_def)"], ["", "lemma down_cast_type':\nassumes isOclAny: \"\\<tau> \\<Turnstile> (X::OclAny) .oclIsTypeOf(OclAny)\"\nand     non_null: \"\\<tau> \\<Turnstile> (\\<delta> X)\"\nshows             \"\\<tau> \\<Turnstile> not (\\<upsilon> (X .oclAsType(Person)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau> \\<Turnstile> not (\\<upsilon> X .oclAsType(Person))", "by(rule foundation15[THEN iffD1], simp add: down_cast_type[OF assms])"], ["", "lemma up_down_cast :\nassumes isdef: \"\\<tau> \\<Turnstile> (\\<delta> X)\"\nshows \"\\<tau> \\<Turnstile> ((X::Person) .oclAsType(OclAny) .oclAsType(Person) \\<triangleq> X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>\n     \\<Turnstile> X .oclAsType(OclAny) .oclAsType(Person) \\<triangleq> X", "using isdef"], ["proof (prove)\nusing this:\n  \\<tau> \\<Turnstile> \\<delta> X\n\ngoal (1 subgoal):\n 1. \\<tau>\n     \\<Turnstile> X .oclAsType(OclAny) .oclAsType(Person) \\<triangleq> X", "by(auto simp : null_fun_def null_option_def bot_option_def null_def invalid_def\n               OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny foundation22 foundation16\n        split: option.split type\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n.split)"], ["", "lemma up_down_cast_Person_OclAny_Person [simp]:\nshows \"((X::Person) .oclAsType(OclAny) .oclAsType(Person) = X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X .oclAsType(OclAny) .oclAsType(Person) = X", "apply(rule ext, rename_tac \\<tau>)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<tau>. X .oclAsType(OclAny) .oclAsType(Person) \\<tau> = X \\<tau>", "apply(rule foundation22[THEN iffD1])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<tau>.\n       \\<tau>\n        \\<Turnstile> X .oclAsType(OclAny) .oclAsType(Person) \\<triangleq> X", "apply(case_tac \"\\<tau> \\<Turnstile> (\\<delta> X)\", simp add: up_down_cast)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<tau>.\n       \\<tau> |\\<noteq> \\<delta> X \\<Longrightarrow>\n       \\<tau>\n        \\<Turnstile> X .oclAsType(OclAny) .oclAsType(Person) \\<triangleq> X", "apply(simp add: defined_split, elim disjE)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>\\<tau>.\n       \\<tau> \\<Turnstile> X \\<triangleq> invalid \\<Longrightarrow>\n       \\<tau>\n        \\<Turnstile> X .oclAsType(OclAny) .oclAsType(Person) \\<triangleq> X\n 2. \\<And>\\<tau>.\n       \\<tau> \\<Turnstile> X \\<triangleq> null \\<Longrightarrow>\n       \\<tau>\n        \\<Turnstile> X .oclAsType(OclAny) .oclAsType(Person) \\<triangleq> X", "apply(erule StrongEq_L_subst2_rev, simp, simp)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma up_down_cast_Person_OclAny_Person':\nassumes \"\\<tau> \\<Turnstile> \\<upsilon> X\"\nshows   \"\\<tau> \\<Turnstile> (((X :: Person) .oclAsType(OclAny) .oclAsType(Person)) \\<doteq> X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau> \\<Turnstile> X .oclAsType(OclAny) .oclAsType(Person) \\<doteq> X", "apply(simp only: up_down_cast_Person_OclAny_Person StrictRefEq\\<^sub>O\\<^sub>b\\<^sub>j\\<^sub>e\\<^sub>c\\<^sub>t_\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>\n     \\<Turnstile> StrictRefEq\\<^sub>O\\<^sub>b\\<^sub>j\\<^sub>e\\<^sub>c\\<^sub>t\n                   X X", "by(rule StrictRefEq\\<^sub>O\\<^sub>b\\<^sub>j\\<^sub>e\\<^sub>c\\<^sub>t_sym, simp add: assms)"], ["", "lemma up_down_cast_Person_OclAny_Person'': \nassumes \"\\<tau> \\<Turnstile> \\<upsilon> (X :: Person)\"\nshows   \"\\<tau> \\<Turnstile> (X .oclIsTypeOf(Person) implies (X .oclAsType(OclAny) .oclAsType(Person)) \\<doteq> X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>\n     \\<Turnstile> X.oclIsTypeOf(Person) implies\n                  X .oclAsType(OclAny) .oclAsType(Person) \\<doteq> X", "apply(simp add: OclValid_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (X.oclIsTypeOf(Person) implies X \\<doteq> X) \\<tau> = true \\<tau>", "apply(subst cp_OclImplies)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>_. X.oclIsTypeOf(Person) \\<tau>) implies\n     (\\<lambda>_. (X \\<doteq> X) \\<tau>))\n     \\<tau> =\n    true \\<tau>", "apply(simp add: StrictRefEq\\<^sub>O\\<^sub>b\\<^sub>j\\<^sub>e\\<^sub>c\\<^sub>t_\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n StrictRefEq\\<^sub>O\\<^sub>b\\<^sub>j\\<^sub>e\\<^sub>c\\<^sub>t_sym[OF assms, simplified OclValid_def])"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>_. X.oclIsTypeOf(Person) \\<tau>) implies\n     (\\<lambda>_. true \\<tau>))\n     \\<tau> =\n    true \\<tau>", "apply(subst cp_OclImplies[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (X.oclIsTypeOf(Person) implies true) \\<tau> = true \\<tau>", "by simp"], ["", "section\\<open>OclIsKindOf\\<close>"], ["", "subsection\\<open>Definition\\<close>"], ["", "consts OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y :: \"'\\<alpha> \\<Rightarrow> Boolean\" (\"(_).oclIsKindOf'(OclAny')\")"], ["", "consts OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n :: \"'\\<alpha> \\<Rightarrow> Boolean\" (\"(_).oclIsKindOf'(Person')\")"], ["", "overloading OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y \\<equiv> \"OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y :: OclAny \\<Rightarrow> Boolean\"\nbegin"], ["", "definition OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny:\n        \"(X::OclAny) .oclIsKindOf(OclAny) \\<equiv>\n                   (\\<lambda>\\<tau>. case X \\<tau> of\n                              \\<bottom> \\<Rightarrow> invalid \\<tau>\n                            | _ \\<Rightarrow> true \\<tau>)\""], ["", "end"], ["", "overloading OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y \\<equiv> \"OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y :: Person \\<Rightarrow> Boolean\"\nbegin"], ["", "definition OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person:\n        \"(X::Person) .oclIsKindOf(OclAny) \\<equiv>\n                   (\\<lambda>\\<tau>. case X \\<tau> of\n                              \\<bottom> \\<Rightarrow> invalid \\<tau>\n                            | _\\<Rightarrow> true \\<tau>)\""], ["", "(* for (* \\<lfloor>\\<lfloor>mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n e oid _ \\<rfloor>\\<rfloor> \\<Rightarrow> true \\<tau> *) :  must have actual type Person otherwise  *)"], ["", "end"], ["", "overloading OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n \\<equiv> \"OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n :: OclAny \\<Rightarrow> Boolean\"\nbegin"], ["", "definition OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny:\n        \"(X::OclAny) .oclIsKindOf(Person) \\<equiv>\n                   (\\<lambda>\\<tau>. case X \\<tau> of\n                              \\<bottom>   \\<Rightarrow> invalid \\<tau>\n                            | \\<lfloor>\\<bottom>\\<rfloor> \\<Rightarrow> true \\<tau>\n                            | \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y oid \\<bottom> \\<rfloor>\\<rfloor> \\<Rightarrow> false \\<tau>\n                            | \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y oid \\<lfloor>_\\<rfloor> \\<rfloor>\\<rfloor> \\<Rightarrow> true \\<tau>)\""], ["", "end"], ["", "overloading OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n \\<equiv> \"OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n :: Person \\<Rightarrow> Boolean\"\nbegin"], ["", "definition OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person:\n        \"(X::Person) .oclIsKindOf(Person) \\<equiv>\n                   (\\<lambda>\\<tau>. case X \\<tau> of\n                              \\<bottom> \\<Rightarrow> invalid \\<tau>\n                            | _ \\<Rightarrow> true \\<tau>)\""], ["", "end"], ["", "text_raw\\<open>\\isatagafp\\<close>"], ["", "subsection\\<open>Context Passing\\<close>"], ["", "lemma cp_OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person_Person: \"cp P \\<Longrightarrow> cp(\\<lambda>X.(P(X::Person)::Person).oclIsKindOf(OclAny))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cp P \\<Longrightarrow> cp (\\<lambda>X. P X.oclIsKindOf(OclAny))", "by(rule cpI1, simp_all add: OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person)"], ["", "lemma cp_OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny_OclAny: \"cp P \\<Longrightarrow> cp(\\<lambda>X.(P(X::OclAny)::OclAny).oclIsKindOf(OclAny))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cp P \\<Longrightarrow> cp (\\<lambda>X. P X.oclIsKindOf(OclAny))", "by(rule cpI1, simp_all add: OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny)"], ["", "lemma cp_OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person_Person: \"cp P \\<Longrightarrow> cp(\\<lambda>X.(P(X::Person)::Person).oclIsKindOf(Person))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cp P \\<Longrightarrow> cp (\\<lambda>X. P X.oclIsKindOf(Person))", "by(rule cpI1, simp_all add: OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person)"], ["", "lemma cp_OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny_OclAny: \"cp P \\<Longrightarrow> cp(\\<lambda>X.(P(X::OclAny)::OclAny).oclIsKindOf(Person))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cp P \\<Longrightarrow> cp (\\<lambda>X. P X.oclIsKindOf(Person))", "by(rule cpI1, simp_all add: OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny)"], ["", "lemma cp_OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person_OclAny: \"cp P \\<Longrightarrow> cp(\\<lambda>X.(P(X::Person)::OclAny).oclIsKindOf(OclAny))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cp P \\<Longrightarrow> cp (\\<lambda>X. P X.oclIsKindOf(OclAny))", "by(rule cpI1, simp_all add: OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny)"], ["", "lemma cp_OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny_Person: \"cp P \\<Longrightarrow> cp(\\<lambda>X.(P(X::OclAny)::Person).oclIsKindOf(OclAny))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cp P \\<Longrightarrow> cp (\\<lambda>X. P X.oclIsKindOf(OclAny))", "by(rule cpI1, simp_all add: OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person)"], ["", "lemma cp_OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person_OclAny: \"cp P \\<Longrightarrow> cp(\\<lambda>X.(P(X::Person)::OclAny).oclIsKindOf(Person))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cp P \\<Longrightarrow> cp (\\<lambda>X. P X.oclIsKindOf(Person))", "by(rule cpI1, simp_all add: OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny)"], ["", "lemma cp_OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny_Person: \"cp P \\<Longrightarrow> cp(\\<lambda>X.(P(X::OclAny)::Person).oclIsKindOf(Person))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cp P \\<Longrightarrow> cp (\\<lambda>X. P X.oclIsKindOf(Person))", "by(rule cpI1, simp_all add: OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person)"], ["", "lemmas [simp] =\n cp_OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person_Person\n cp_OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny_OclAny\n cp_OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person_Person\n cp_OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny_OclAny\n\n cp_OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person_OclAny\n cp_OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny_Person\n cp_OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person_OclAny\n cp_OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny_Person"], ["", "text_raw\\<open>\\endisatagafp\\<close>"], ["", "subsection\\<open>Execution with Invalid or Null as Argument\\<close>"], ["", "lemma OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny_strict1[simp] : \"(invalid::OclAny) .oclIsKindOf(OclAny) = invalid\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invalid.oclIsKindOf(OclAny) = invalid", "by(rule ext, simp add: invalid_def bot_option_def\n                       OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny)"], ["", "lemma OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny_strict2[simp] : \"(null::OclAny) .oclIsKindOf(OclAny) = true\""], ["proof (prove)\ngoal (1 subgoal):\n 1. null.oclIsKindOf(OclAny) = true", "by(rule ext, simp add: null_fun_def null_option_def\n                       OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny)"], ["", "lemma OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person_strict1[simp] : \"(invalid::Person) .oclIsKindOf(OclAny) = invalid\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invalid.oclIsKindOf(OclAny) = invalid", "by(rule ext, simp add: bot_option_def invalid_def\n                       OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person)"], ["", "lemma OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person_strict2[simp] : \"(null::Person) .oclIsKindOf(OclAny) = true\""], ["proof (prove)\ngoal (1 subgoal):\n 1. null.oclIsKindOf(OclAny) = true", "by(rule ext, simp add: null_fun_def null_option_def bot_option_def\n                       OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person)"], ["", "lemma OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny_strict1[simp]: \"(invalid::OclAny) .oclIsKindOf(Person) = invalid\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invalid.oclIsKindOf(Person) = invalid", "by(rule ext, simp add: null_fun_def null_option_def bot_option_def null_def invalid_def\n                       OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny)"], ["", "lemma OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny_strict2[simp]: \"(null::OclAny) .oclIsKindOf(Person) = true\""], ["proof (prove)\ngoal (1 subgoal):\n 1. null.oclIsKindOf(Person) = true", "by(rule ext, simp add: null_fun_def null_option_def bot_option_def null_def invalid_def\n                       OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny)"], ["", "lemma OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person_strict1[simp]: \"(invalid::Person) .oclIsKindOf(Person) = invalid\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invalid.oclIsKindOf(Person) = invalid", "by(rule ext, simp add: null_fun_def null_option_def bot_option_def null_def invalid_def\n                       OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person)"], ["", "lemma OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person_strict2[simp]: \"(null::Person) .oclIsKindOf(Person) = true\""], ["proof (prove)\ngoal (1 subgoal):\n 1. null.oclIsKindOf(Person) = true", "by(rule ext, simp add: null_fun_def null_option_def bot_option_def null_def invalid_def\n                       OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person)"], ["", "subsection\\<open>Up Down Casting\\<close>"], ["", "lemma actualKind_larger_staticKind:\nassumes isdef: \"\\<tau> \\<Turnstile> (\\<delta> X)\"\nshows          \"\\<tau> \\<Turnstile>  ((X::Person) .oclIsKindOf(OclAny) \\<triangleq> true)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau> \\<Turnstile> X.oclIsKindOf(OclAny) \\<triangleq> true", "using isdef"], ["proof (prove)\nusing this:\n  \\<tau> \\<Turnstile> \\<delta> X\n\ngoal (1 subgoal):\n 1. \\<tau> \\<Turnstile> X.oclIsKindOf(OclAny) \\<triangleq> true", "by(auto simp : bot_option_def\n               OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person foundation22 foundation16)"], ["", "lemma down_cast_kind:\nassumes isOclAny: \"\\<not> (\\<tau> \\<Turnstile> ((X::OclAny).oclIsKindOf(Person)))\"\nand     non_null: \"\\<tau> \\<Turnstile> (\\<delta> X)\"\nshows             \"\\<tau> \\<Turnstile> ((X .oclAsType(Person)) \\<triangleq> invalid)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau> \\<Turnstile> X .oclAsType(Person) \\<triangleq> invalid", "using isOclAny non_null"], ["proof (prove)\nusing this:\n  \\<tau> |\\<noteq> X.oclIsKindOf(Person)\n  \\<tau> \\<Turnstile> \\<delta> X\n\ngoal (1 subgoal):\n 1. \\<tau> \\<Turnstile> X .oclAsType(Person) \\<triangleq> invalid", "apply(auto simp : bot_fun_def null_fun_def null_option_def bot_option_def null_def invalid_def\n                  OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny foundation22 foundation16\n           split: option.split type\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y.split type\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n.split)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1 a b.\n       \\<lbrakk>\\<tau> |\\<noteq> X.oclIsKindOf(Person);\n        X \\<tau> =\n        \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                           x1 \\<lfloor>(a,\n  b)\\<rfloor>\\<rfloor>\\<rfloor>\\<rbrakk>\n       \\<Longrightarrow> False", "by(simp add: OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny  OclValid_def false_def true_def)"], ["", "section\\<open>OclAllInstances\\<close>"], ["", "text\\<open>To denote OCL-types occurring in OCL expressions syntactically---as, for example,  as\n``argument'' of \\inlineisar{oclAllInstances()}---we use the inverses of the injection\nfunctions into the object universes; we show that this is sufficient ``characterization.''\\<close>"], ["", "definition \"Person \\<equiv> OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA>\""], ["", "definition \"OclAny \\<equiv> OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA>\""], ["", "lemmas [simp] = Person_def OclAny_def"], ["", "lemma OclAllInstances_generic\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_exec: \"OclAllInstances_generic pre_post OclAny =\n             (\\<lambda>\\<tau>.  Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e  \\<lfloor>\\<lfloor> Some ` OclAny ` ran (heap (pre_post \\<tau>)) \\<rfloor>\\<rfloor>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. OclAllInstances_generic pre_post OclAny =\n    (\\<lambda>\\<tau>.\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<lfloor>Some `\n                           OclAny `\n                           ran (heap (pre_post \\<tau>))\\<rfloor>\\<rfloor>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. OclAllInstances_generic pre_post OclAny =\n    (\\<lambda>\\<tau>.\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<lfloor>Some `\n                           OclAny `\n                           ran (heap (pre_post \\<tau>))\\<rfloor>\\<rfloor>)", "let ?S1 = \"\\<lambda>\\<tau>. OclAny ` ran (heap (pre_post \\<tau>))\""], ["proof (state)\ngoal (1 subgoal):\n 1. OclAllInstances_generic pre_post OclAny =\n    (\\<lambda>\\<tau>.\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<lfloor>Some `\n                           OclAny `\n                           ran (heap (pre_post \\<tau>))\\<rfloor>\\<rfloor>)", "let ?S2 = \"\\<lambda>\\<tau>. ?S1 \\<tau> - {None}\""], ["proof (state)\ngoal (1 subgoal):\n 1. OclAllInstances_generic pre_post OclAny =\n    (\\<lambda>\\<tau>.\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<lfloor>Some `\n                           OclAny `\n                           ran (heap (pre_post \\<tau>))\\<rfloor>\\<rfloor>)", "have B : \"\\<And>\\<tau>. ?S2 \\<tau> \\<subseteq> ?S1 \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<tau>.\n       OclAny ` ran (heap (pre_post \\<tau>)) - {\\<bottom>}\n       \\<subseteq> OclAny ` ran (heap (pre_post \\<tau>))", "by auto"], ["proof (state)\nthis:\n  OclAny ` ran (heap (pre_post ?\\<tau>)) - {\\<bottom>}\n  \\<subseteq> OclAny ` ran (heap (pre_post ?\\<tau>))\n\ngoal (1 subgoal):\n 1. OclAllInstances_generic pre_post OclAny =\n    (\\<lambda>\\<tau>.\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<lfloor>Some `\n                           OclAny `\n                           ran (heap (pre_post \\<tau>))\\<rfloor>\\<rfloor>)", "have C : \"\\<And>\\<tau>. ?S1 \\<tau> \\<subseteq> ?S2 \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<tau>.\n       OclAny ` ran (heap (pre_post \\<tau>))\n       \\<subseteq> OclAny ` ran (heap (pre_post \\<tau>)) - {\\<bottom>}", "by(auto simp: OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA>_some)"], ["proof (state)\nthis:\n  OclAny ` ran (heap (pre_post ?\\<tau>))\n  \\<subseteq> OclAny ` ran (heap (pre_post ?\\<tau>)) - {\\<bottom>}\n\ngoal (1 subgoal):\n 1. OclAllInstances_generic pre_post OclAny =\n    (\\<lambda>\\<tau>.\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<lfloor>Some `\n                           OclAny `\n                           ran (heap (pre_post \\<tau>))\\<rfloor>\\<rfloor>)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. OclAllInstances_generic pre_post OclAny =\n    (\\<lambda>\\<tau>.\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<lfloor>Some `\n                           OclAny `\n                           ran (heap (pre_post \\<tau>))\\<rfloor>\\<rfloor>)", "by(insert equalityI[OF B C], simp)"], ["proof (state)\nthis:\n  OclAllInstances_generic pre_post OclAny =\n  (\\<lambda>\\<tau>.\n      Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n       \\<lfloor>\\<lfloor>Some `\n                         OclAny `\n                         ran (heap (pre_post \\<tau>))\\<rfloor>\\<rfloor>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma OclAllInstances_at_post\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_exec: \"OclAny .allInstances() =\n             (\\<lambda>\\<tau>.  Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e  \\<lfloor>\\<lfloor> Some ` OclAny ` ran (heap (snd \\<tau>)) \\<rfloor>\\<rfloor>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. OclAny .allInstances() =\n    (\\<lambda>\\<tau>.\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<lfloor>Some `\n                           OclAny `\n                           ran (heap (snd \\<tau>))\\<rfloor>\\<rfloor>)", "unfolding OclAllInstances_at_post_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. OclAllInstances_generic snd OclAny =\n    (\\<lambda>\\<tau>.\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<lfloor>Some `\n                           OclAny `\n                           ran (heap (snd \\<tau>))\\<rfloor>\\<rfloor>)", "by(rule OclAllInstances_generic\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_exec)"], ["", "lemma OclAllInstances_at_pre\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_exec: \"OclAny .allInstances@pre() =\n             (\\<lambda>\\<tau>.  Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e  \\<lfloor>\\<lfloor> Some ` OclAny ` ran (heap (fst \\<tau>)) \\<rfloor>\\<rfloor>) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. OclAny .allInstances@pre() =\n    (\\<lambda>\\<tau>.\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<lfloor>Some `\n                           OclAny `\n                           ran (heap (fst \\<tau>))\\<rfloor>\\<rfloor>)", "unfolding OclAllInstances_at_pre_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. OclAllInstances_generic fst OclAny =\n    (\\<lambda>\\<tau>.\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<lfloor>Some `\n                           OclAny `\n                           ran (heap (fst \\<tau>))\\<rfloor>\\<rfloor>)", "by(rule OclAllInstances_generic\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_exec)"], ["", "subsection\\<open>OclIsTypeOf\\<close>"], ["", "lemma OclAny_allInstances_generic_oclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y1:\nassumes [simp]: \"\\<And>x. pre_post (x, x) = x\"\nshows \"\\<exists>\\<tau>. (\\<tau> \\<Turnstile>     ((OclAllInstances_generic pre_post OclAny)->forAll\\<^sub>S\\<^sub>e\\<^sub>t(X|X .oclIsTypeOf(OclAny))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<tau>.\n       \\<tau>\n        \\<Turnstile> UML_Set.OclForall\n                      (OclAllInstances_generic pre_post OclAny)\n                      OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y", "apply(rule_tac x = \\<tau>\\<^sub>0 in exI, simp add: \\<tau>\\<^sub>0_def OclValid_def del: OclAllInstances_generic_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. UML_Set.OclForall\n     (OclAllInstances_generic pre_post\n       OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA>)\n     OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n     (\\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>,\n      \\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>) =\n    \\<lfloor>\\<lfloor>True\\<rfloor>\\<rfloor>", "apply(simp only: assms UML_Set.OclForall_def refl if_True\n                  OclAllInstances_generic_defined[simplified OclValid_def])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if \\<exists>x\\<in>\\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n  (OclAllInstances_generic pre_post\n    OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA>\n    (\\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>,\n     \\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>))\\<rceil>\\<rceil>.\n           \\<lambda>_. x.oclIsTypeOf(OclAny)\n            (\\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>,\n             \\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>) =\n           false\n            (\\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>,\n             \\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>)\n     then false\n           (\\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>,\n            \\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>)\n     else if \\<exists>x\\<in>\\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n       (OclAllInstances_generic pre_post\n         OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA>\n         (\\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>,\n          \\<lparr>heap = Map.empty,\n             assocs = Map.empty\\<rparr>))\\<rceil>\\<rceil>.\n                \\<lambda>_. x.oclIsTypeOf(OclAny)\n                 (\\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>,\n                  \\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>) =\n                invalid\n                 (\\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>,\n                  \\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>)\n          then invalid\n                (\\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>,\n                 \\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>)\n          else if \\<exists>x\\<in>\\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n            (OclAllInstances_generic pre_post\n              OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA>\n              (\\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>,\n               \\<lparr>heap = Map.empty,\n                  assocs = Map.empty\\<rparr>))\\<rceil>\\<rceil>.\n                     \\<lambda>_. x.oclIsTypeOf(OclAny)\n                      (\\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>,\n                       \\<lparr>heap = Map.empty,\n                          assocs = Map.empty\\<rparr>) =\n                     null\n                      (\\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>,\n                       \\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>)\n               then null\n                     (\\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>,\n                      \\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>)\n               else true\n                     (\\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>,\n                      \\<lparr>heap = Map.empty,\n                         assocs = Map.empty\\<rparr>)) =\n    \\<lfloor>\\<lfloor>True\\<rfloor>\\<rfloor>", "apply(simp only: OclAllInstances_generic_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if \\<exists>x\\<in>\\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n  (Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n    \\<lfloor>\\<lfloor>Some `\n                      (OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA> `\n                       ran (heap\n                             (pre_post\n                               (\\<lparr>heap = Map.empty,\n                                   assocs = Map.empty\\<rparr>,\n                                \\<lparr>heap = Map.empty,\n                                   assocs = Map.empty\\<rparr>))) -\n                       {\\<bottom>})\\<rfloor>\\<rfloor>)\\<rceil>\\<rceil>.\n           \\<lambda>_. x.oclIsTypeOf(OclAny)\n            (\\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>,\n             \\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>) =\n           false\n            (\\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>,\n             \\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>)\n     then false\n           (\\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>,\n            \\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>)\n     else if \\<exists>x\\<in>\\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n       (Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<lfloor>Some `\n                           (OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA> `\n                            ran (heap\n                                  (pre_post\n                                    (\\<lparr>heap = Map.empty,\n  assocs = Map.empty\\<rparr>,\n                                     \\<lparr>heap = Map.empty,\n  assocs = Map.empty\\<rparr>))) -\n                            {\\<bottom>})\\<rfloor>\\<rfloor>)\\<rceil>\\<rceil>.\n                \\<lambda>_. x.oclIsTypeOf(OclAny)\n                 (\\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>,\n                  \\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>) =\n                invalid\n                 (\\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>,\n                  \\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>)\n          then invalid\n                (\\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>,\n                 \\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>)\n          else if \\<exists>x\\<in>\\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n            (Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n              \\<lfloor>\\<lfloor>Some `\n                                (OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA> `\n                                 ran (heap\n (pre_post\n   (\\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>,\n    \\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>))) -\n                                 {\\<bottom>})\\<rfloor>\\<rfloor>)\\<rceil>\\<rceil>.\n                     \\<lambda>_. x.oclIsTypeOf(OclAny)\n                      (\\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>,\n                       \\<lparr>heap = Map.empty,\n                          assocs = Map.empty\\<rparr>) =\n                     null\n                      (\\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>,\n                       \\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>)\n               then null\n                     (\\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>,\n                      \\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>)\n               else true\n                     (\\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>,\n                      \\<lparr>heap = Map.empty,\n                         assocs = Map.empty\\<rparr>)) =\n    \\<lfloor>\\<lfloor>True\\<rfloor>\\<rfloor>", "apply(subst (1 2 3) Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e_inverse, simp add: bot_option_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if \\<exists>x\\<in>\\<lceil>\\<lceil>\\<lfloor>\\<lfloor>Some `\n                   (OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA> `\n                    ran (heap\n                          (pre_post\n                            (\\<lparr>heap = Map.empty,\n                                assocs = Map.empty\\<rparr>,\n                             \\<lparr>heap = Map.empty,\n                                assocs = Map.empty\\<rparr>))) -\n                    {\\<bottom>})\\<rfloor>\\<rfloor>\\<rceil>\\<rceil>.\n           \\<lambda>_. x.oclIsTypeOf(OclAny)\n            (\\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>,\n             \\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>) =\n           false\n            (\\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>,\n             \\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>)\n     then false\n           (\\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>,\n            \\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>)\n     else if \\<exists>x\\<in>\\<lceil>\\<lceil>\\<lfloor>\\<lfloor>Some `\n                        (OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA> `\n                         ran (heap\n                               (pre_post\n                                 (\\<lparr>heap = Map.empty,\n                                     assocs = Map.empty\\<rparr>,\n                                  \\<lparr>heap = Map.empty,\n                                     assocs = Map.empty\\<rparr>))) -\n                         {\\<bottom>})\\<rfloor>\\<rfloor>\\<rceil>\\<rceil>.\n                \\<lambda>_. x.oclIsTypeOf(OclAny)\n                 (\\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>,\n                  \\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>) =\n                invalid\n                 (\\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>,\n                  \\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>)\n          then invalid\n                (\\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>,\n                 \\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>)\n          else if \\<exists>x\\<in>\\<lceil>\\<lceil>\\<lfloor>\\<lfloor>Some `\n                             (OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA> `\n                              ran (heap\n                                    (pre_post\n(\\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>,\n \\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>))) -\n                              {\\<bottom>})\\<rfloor>\\<rfloor>\\<rceil>\\<rceil>.\n                     \\<lambda>_. x.oclIsTypeOf(OclAny)\n                      (\\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>,\n                       \\<lparr>heap = Map.empty,\n                          assocs = Map.empty\\<rparr>) =\n                     null\n                      (\\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>,\n                       \\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>)\n               then null\n                     (\\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>,\n                      \\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>)\n               else true\n                     (\\<lparr>heap = Map.empty, assocs = Map.empty\\<rparr>,\n                      \\<lparr>heap = Map.empty,\n                         assocs = Map.empty\\<rparr>)) =\n    \\<lfloor>\\<lfloor>True\\<rfloor>\\<rfloor>", "by(simp add: OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny)"], ["", "lemma OclAny_allInstances_at_post_oclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y1:\n\"\\<exists>\\<tau>. (\\<tau> \\<Turnstile>     (OclAny .allInstances()->forAll\\<^sub>S\\<^sub>e\\<^sub>t(X|X .oclIsTypeOf(OclAny))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<tau>.\n       \\<tau>\n        \\<Turnstile> UML_Set.OclForall OclAny .allInstances()\n                      OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y", "unfolding OclAllInstances_at_post_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<tau>.\n       \\<tau>\n        \\<Turnstile> UML_Set.OclForall (OclAllInstances_generic snd OclAny)\n                      OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y", "by(rule OclAny_allInstances_generic_oclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y1, simp)"], ["", "lemma OclAny_allInstances_at_pre_oclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y1:\n\"\\<exists>\\<tau>. (\\<tau> \\<Turnstile>     (OclAny .allInstances@pre()->forAll\\<^sub>S\\<^sub>e\\<^sub>t(X|X .oclIsTypeOf(OclAny))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<tau>.\n       \\<tau>\n        \\<Turnstile> UML_Set.OclForall OclAny .allInstances@pre()\n                      OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y", "unfolding OclAllInstances_at_pre_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<tau>.\n       \\<tau>\n        \\<Turnstile> UML_Set.OclForall (OclAllInstances_generic fst OclAny)\n                      OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y", "by(rule OclAny_allInstances_generic_oclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y1, simp)"], ["", "lemma OclAny_allInstances_generic_oclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y2:\nassumes [simp]: \"\\<And>x. pre_post (x, x) = x\"\nshows \"\\<exists>\\<tau>. (\\<tau> \\<Turnstile> not ((OclAllInstances_generic pre_post OclAny)->forAll\\<^sub>S\\<^sub>e\\<^sub>t(X|X .oclIsTypeOf(OclAny))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<tau>.\n       \\<tau>\n        \\<Turnstile> not (UML_Set.OclForall\n                           (OclAllInstances_generic pre_post OclAny)\n                           OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>\\<tau>.\n       \\<tau>\n        \\<Turnstile> not (UML_Set.OclForall\n                           (OclAllInstances_generic pre_post OclAny)\n                           OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y)", "fix oid a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>\\<tau>.\n       \\<tau>\n        \\<Turnstile> not (UML_Set.OclForall\n                           (OclAllInstances_generic pre_post OclAny)\n                           OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y)", "let ?t0 = \"\\<lparr>heap = Map.empty(oid \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y (mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y oid \\<lfloor>a\\<rfloor>)),\n                              assocs = Map.empty\\<rparr>\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>\\<tau>.\n       \\<tau>\n        \\<Turnstile> not (UML_Set.OclForall\n                           (OclAllInstances_generic pre_post OclAny)\n                           OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<tau>.\n       \\<tau>\n        \\<Turnstile> not (UML_Set.OclForall\n                           (OclAllInstances_generic pre_post OclAny)\n                           OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y)", "apply(rule_tac x = \"(?t0, ?t0)\" in exI, simp add: OclValid_def del: OclAllInstances_generic_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. not (UML_Set.OclForall\n          (OclAllInstances_generic pre_post\n            OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA>)\n          OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y)\n     (\\<lparr>heap =\n                [oid \\<mapsto>\n                 in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                  (mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y oid\n                    \\<lfloor>a\\<rfloor>)],\n         assocs = Map.empty\\<rparr>,\n      \\<lparr>heap =\n                [oid \\<mapsto>\n                 in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                  (mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y oid\n                    \\<lfloor>a\\<rfloor>)],\n         assocs = Map.empty\\<rparr>) =\n    \\<lfloor>\\<lfloor>True\\<rfloor>\\<rfloor>", "apply(simp only: UML_Set.OclForall_def refl if_True\n                  OclAllInstances_generic_defined[simplified OclValid_def])"], ["proof (prove)\ngoal (1 subgoal):\n 1. not (\\<lambda>\\<tau>.\n            if \\<exists>x\\<in>\\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         (OclAllInstances_generic pre_post\n           OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA>\n           \\<tau>)\\<rceil>\\<rceil>.\n                  \\<lambda>_. x.oclIsTypeOf(OclAny) \\<tau> = false \\<tau>\n            then false \\<tau>\n            else if \\<exists>x\\<in>\\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n              (OclAllInstances_generic pre_post\n                OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA>\n                \\<tau>)\\<rceil>\\<rceil>.\n                       \\<lambda>_. x.oclIsTypeOf(OclAny) \\<tau> =\n                       invalid \\<tau>\n                 then invalid \\<tau>\n                 else if \\<exists>x\\<in>\\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n                   (OclAllInstances_generic pre_post\n                     OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA>\n                     \\<tau>)\\<rceil>\\<rceil>.\n                            \\<lambda>_. x.oclIsTypeOf(OclAny) \\<tau> =\n                            null \\<tau>\n                      then null \\<tau> else true \\<tau>)\n     (\\<lparr>heap =\n                [oid \\<mapsto>\n                 in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                  (mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y oid\n                    \\<lfloor>a\\<rfloor>)],\n         assocs = Map.empty\\<rparr>,\n      \\<lparr>heap =\n                [oid \\<mapsto>\n                 in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                  (mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y oid\n                    \\<lfloor>a\\<rfloor>)],\n         assocs = Map.empty\\<rparr>) =\n    \\<lfloor>\\<lfloor>True\\<rfloor>\\<rfloor>", "apply(simp only: OclAllInstances_generic_def OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA>_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. not (\\<lambda>\\<tau>.\n            if \\<exists>x\\<in>\\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         (Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n           \\<lfloor>\\<lfloor>Some `\n                             ((\\<lambda>u.\n                                  \\<lfloor>case u of\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n      (mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n oid a\n        b) \\<Rightarrow>\n       mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y oid\n        \\<lfloor>(a, b)\\<rfloor>\n     | in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y a \\<Rightarrow>\n         a\\<rfloor>) `\n                              ran (heap (pre_post \\<tau>)) -\n                              {\\<bottom>})\\<rfloor>\\<rfloor>)\\<rceil>\\<rceil>.\n                  \\<lambda>_. x.oclIsTypeOf(OclAny) \\<tau> = false \\<tau>\n            then false \\<tau>\n            else if \\<exists>x\\<in>\\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n              (Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n                \\<lfloor>\\<lfloor>Some `\n                                  ((\\<lambda>u.\n \\<lfloor>case u of\n          in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n           (mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n oid a\n             b) \\<Rightarrow>\n            mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y oid\n             \\<lfloor>(a, b)\\<rfloor>\n          | in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n             a \\<Rightarrow>\n              a\\<rfloor>) `\n                                   ran (heap (pre_post \\<tau>)) -\n                                   {\\<bottom>})\\<rfloor>\\<rfloor>)\\<rceil>\\<rceil>.\n                       \\<lambda>_. x.oclIsTypeOf(OclAny) \\<tau> =\n                       invalid \\<tau>\n                 then invalid \\<tau>\n                 else if \\<exists>x\\<in>\\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n                   (Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n                     \\<lfloor>\\<lfloor>Some `\n ((\\<lambda>u.\n      \\<lfloor>case u of\n               in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                (mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n oid a\n                  b) \\<Rightarrow>\n                 mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y oid\n                  \\<lfloor>(a, b)\\<rfloor>\n               | in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                  a \\<Rightarrow>\n                   a\\<rfloor>) `\n  ran (heap (pre_post \\<tau>)) -\n  {\\<bottom>})\\<rfloor>\\<rfloor>)\\<rceil>\\<rceil>.\n                            \\<lambda>_. x.oclIsTypeOf(OclAny) \\<tau> =\n                            null \\<tau>\n                      then null \\<tau> else true \\<tau>)\n     (\\<lparr>heap =\n                [oid \\<mapsto>\n                 in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                  (mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y oid\n                    \\<lfloor>a\\<rfloor>)],\n         assocs = Map.empty\\<rparr>,\n      \\<lparr>heap =\n                [oid \\<mapsto>\n                 in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                  (mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y oid\n                    \\<lfloor>a\\<rfloor>)],\n         assocs = Map.empty\\<rparr>) =\n    \\<lfloor>\\<lfloor>True\\<rfloor>\\<rfloor>", "apply(subst (1 2 3) Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e_inverse, simp add: bot_option_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. not (\\<lambda>\\<tau>.\n            if \\<exists>x\\<in>\\<lceil>\\<lceil>\\<lfloor>\\<lfloor>Some `\n                          ((\\<lambda>u.\n                               \\<lfloor>case u of\n  in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n   (mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n oid a\n     b) \\<Rightarrow>\n    mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y oid\n     \\<lfloor>(a, b)\\<rfloor>\n  | in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y a \\<Rightarrow>\n      a\\<rfloor>) `\n                           ran (heap (pre_post \\<tau>)) -\n                           {\\<bottom>})\\<rfloor>\\<rfloor>\\<rceil>\\<rceil>.\n                  \\<lambda>_. x.oclIsTypeOf(OclAny) \\<tau> = false \\<tau>\n            then false \\<tau>\n            else if \\<exists>x\\<in>\\<lceil>\\<lceil>\\<lfloor>\\<lfloor>Some `\n                               ((\\<lambda>u.\n                                    \\<lfloor>case u of\n       in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n        (mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n oid a\n          b) \\<Rightarrow>\n         mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y oid\n          \\<lfloor>(a, b)\\<rfloor>\n       | in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y a \\<Rightarrow>\n           a\\<rfloor>) `\n                                ran (heap (pre_post \\<tau>)) -\n                                {\\<bottom>})\\<rfloor>\\<rfloor>\\<rceil>\\<rceil>.\n                       \\<lambda>_. x.oclIsTypeOf(OclAny) \\<tau> =\n                       invalid \\<tau>\n                 then invalid \\<tau>\n                 else if \\<exists>x\\<in>\\<lceil>\\<lceil>\\<lfloor>\\<lfloor>Some `\n                                    ((\\<lambda>u.\n   \\<lfloor>case u of\n            in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n             (mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n oid a\n               b) \\<Rightarrow>\n              mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y oid\n               \\<lfloor>(a, b)\\<rfloor>\n            | in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n               a \\<Rightarrow>\n                a\\<rfloor>) `\n                                     ran (heap (pre_post \\<tau>)) -\n                                     {\\<bottom>})\\<rfloor>\\<rfloor>\\<rceil>\\<rceil>.\n                            \\<lambda>_. x.oclIsTypeOf(OclAny) \\<tau> =\n                            null \\<tau>\n                      then null \\<tau> else true \\<tau>)\n     (\\<lparr>heap =\n                [oid \\<mapsto>\n                 in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                  (mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y oid\n                    \\<lfloor>a\\<rfloor>)],\n         assocs = Map.empty\\<rparr>,\n      \\<lparr>heap =\n                [oid \\<mapsto>\n                 in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                  (mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y oid\n                    \\<lfloor>a\\<rfloor>)],\n         assocs = Map.empty\\<rparr>) =\n    \\<lfloor>\\<lfloor>True\\<rfloor>\\<rfloor>", "by(simp add: OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny OclNot_def OclAny_def)"], ["proof (state)\nthis:\n  \\<exists>\\<tau>.\n     \\<tau>\n      \\<Turnstile> not (UML_Set.OclForall\n                         (OclAllInstances_generic pre_post OclAny)\n                         OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma OclAny_allInstances_at_post_oclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y2:\n\"\\<exists>\\<tau>. (\\<tau> \\<Turnstile> not (OclAny .allInstances()->forAll\\<^sub>S\\<^sub>e\\<^sub>t(X|X .oclIsTypeOf(OclAny))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<tau>.\n       \\<tau>\n        \\<Turnstile> not (UML_Set.OclForall OclAny .allInstances()\n                           OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y)", "unfolding OclAllInstances_at_post_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<tau>.\n       \\<tau>\n        \\<Turnstile> not (UML_Set.OclForall\n                           (OclAllInstances_generic snd OclAny)\n                           OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y)", "by(rule OclAny_allInstances_generic_oclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y2, simp)"], ["", "lemma OclAny_allInstances_at_pre_oclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y2:\n\"\\<exists>\\<tau>. (\\<tau> \\<Turnstile> not (OclAny .allInstances@pre()->forAll\\<^sub>S\\<^sub>e\\<^sub>t(X|X .oclIsTypeOf(OclAny))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<tau>.\n       \\<tau>\n        \\<Turnstile> not (UML_Set.OclForall OclAny .allInstances@pre()\n                           OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y)", "unfolding OclAllInstances_at_pre_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>\\<tau>.\n       \\<tau>\n        \\<Turnstile> not (UML_Set.OclForall\n                           (OclAllInstances_generic fst OclAny)\n                           OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y)", "by(rule OclAny_allInstances_generic_oclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y2, simp)"], ["", "lemma Person_allInstances_generic_oclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n:\n\"\\<tau> \\<Turnstile> ((OclAllInstances_generic pre_post Person)->forAll\\<^sub>S\\<^sub>e\\<^sub>t(X|X .oclIsTypeOf(Person)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>\n     \\<Turnstile> UML_Set.OclForall\n                   (OclAllInstances_generic pre_post Person)\n                   OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n", "apply(simp add: OclValid_def del: OclAllInstances_generic_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. UML_Set.OclForall\n     (OclAllInstances_generic pre_post\n       OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA>)\n     OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n \\<tau> =\n    true \\<tau>", "apply(simp only: UML_Set.OclForall_def refl if_True\n                  OclAllInstances_generic_defined[simplified OclValid_def])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if \\<exists>x\\<in>\\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n  (OclAllInstances_generic pre_post\n    OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA>\n    \\<tau>)\\<rceil>\\<rceil>.\n           \\<lambda>_. x.oclIsTypeOf(Person) \\<tau> = false \\<tau>\n     then false \\<tau>\n     else if \\<exists>x\\<in>\\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n       (OclAllInstances_generic pre_post\n         OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA>\n         \\<tau>)\\<rceil>\\<rceil>.\n                \\<lambda>_. x.oclIsTypeOf(Person) \\<tau> = invalid \\<tau>\n          then invalid \\<tau>\n          else if \\<exists>x\\<in>\\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n            (OclAllInstances_generic pre_post\n              OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA>\n              \\<tau>)\\<rceil>\\<rceil>.\n                     \\<lambda>_. x.oclIsTypeOf(Person) \\<tau> = null \\<tau>\n               then null \\<tau> else true \\<tau>) =\n    true \\<tau>", "apply(simp only: OclAllInstances_generic_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if \\<exists>x\\<in>\\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n  (Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n    \\<lfloor>\\<lfloor>Some `\n                      (OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA> `\n                       ran (heap (pre_post \\<tau>)) -\n                       {\\<bottom>})\\<rfloor>\\<rfloor>)\\<rceil>\\<rceil>.\n           \\<lambda>_. x.oclIsTypeOf(Person) \\<tau> = false \\<tau>\n     then false \\<tau>\n     else if \\<exists>x\\<in>\\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n       (Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<lfloor>Some `\n                           (OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA> `\n                            ran (heap (pre_post \\<tau>)) -\n                            {\\<bottom>})\\<rfloor>\\<rfloor>)\\<rceil>\\<rceil>.\n                \\<lambda>_. x.oclIsTypeOf(Person) \\<tau> = invalid \\<tau>\n          then invalid \\<tau>\n          else if \\<exists>x\\<in>\\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n            (Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n              \\<lfloor>\\<lfloor>Some `\n                                (OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA> `\n                                 ran (heap (pre_post \\<tau>)) -\n                                 {\\<bottom>})\\<rfloor>\\<rfloor>)\\<rceil>\\<rceil>.\n                     \\<lambda>_. x.oclIsTypeOf(Person) \\<tau> = null \\<tau>\n               then null \\<tau> else true \\<tau>) =\n    true \\<tau>", "apply(subst (1 2 3) Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e_inverse, simp add: bot_option_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if \\<exists>x\\<in>\\<lceil>\\<lceil>\\<lfloor>\\<lfloor>Some `\n                   (OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA> `\n                    ran (heap (pre_post \\<tau>)) -\n                    {\\<bottom>})\\<rfloor>\\<rfloor>\\<rceil>\\<rceil>.\n           \\<lambda>_. x.oclIsTypeOf(Person) \\<tau> = false \\<tau>\n     then false \\<tau>\n     else if \\<exists>x\\<in>\\<lceil>\\<lceil>\\<lfloor>\\<lfloor>Some `\n                        (OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA> `\n                         ran (heap (pre_post \\<tau>)) -\n                         {\\<bottom>})\\<rfloor>\\<rfloor>\\<rceil>\\<rceil>.\n                \\<lambda>_. x.oclIsTypeOf(Person) \\<tau> = invalid \\<tau>\n          then invalid \\<tau>\n          else if \\<exists>x\\<in>\\<lceil>\\<lceil>\\<lfloor>\\<lfloor>Some `\n                             (OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA> `\n                              ran (heap (pre_post \\<tau>)) -\n                              {\\<bottom>})\\<rfloor>\\<rfloor>\\<rceil>\\<rceil>.\n                     \\<lambda>_. x.oclIsTypeOf(Person) \\<tau> = null \\<tau>\n               then null \\<tau> else true \\<tau>) =\n    true \\<tau>", "by(simp add: OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person)"], ["", "lemma Person_allInstances_at_post_oclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n:\n\"\\<tau> \\<Turnstile> (Person .allInstances()->forAll\\<^sub>S\\<^sub>e\\<^sub>t(X|X .oclIsTypeOf(Person)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>\n     \\<Turnstile> UML_Set.OclForall Person .allInstances()\n                   OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n", "unfolding OclAllInstances_at_post_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>\n     \\<Turnstile> UML_Set.OclForall (OclAllInstances_generic snd Person)\n                   OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n", "by(rule Person_allInstances_generic_oclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n)"], ["", "lemma Person_allInstances_at_pre_oclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n:\n\"\\<tau> \\<Turnstile> (Person .allInstances@pre()->forAll\\<^sub>S\\<^sub>e\\<^sub>t(X|X .oclIsTypeOf(Person)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>\n     \\<Turnstile> UML_Set.OclForall Person .allInstances@pre()\n                   OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n", "unfolding OclAllInstances_at_pre_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>\n     \\<Turnstile> UML_Set.OclForall (OclAllInstances_generic fst Person)\n                   OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n", "by(rule Person_allInstances_generic_oclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n)"], ["", "subsection\\<open>OclIsKindOf\\<close>"], ["", "lemma OclAny_allInstances_generic_oclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y:\n\"\\<tau> \\<Turnstile> ((OclAllInstances_generic pre_post OclAny)->forAll\\<^sub>S\\<^sub>e\\<^sub>t(X|X .oclIsKindOf(OclAny)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>\n     \\<Turnstile> UML_Set.OclForall\n                   (OclAllInstances_generic pre_post OclAny)\n                   OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y", "apply(simp add: OclValid_def del: OclAllInstances_generic_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. UML_Set.OclForall\n     (OclAllInstances_generic pre_post\n       OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA>)\n     OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y \\<tau> =\n    true \\<tau>", "apply(simp only: UML_Set.OclForall_def refl if_True\n                  OclAllInstances_generic_defined[simplified OclValid_def])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if \\<exists>x\\<in>\\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n  (OclAllInstances_generic pre_post\n    OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA>\n    \\<tau>)\\<rceil>\\<rceil>.\n           \\<lambda>_. x.oclIsKindOf(OclAny) \\<tau> = false \\<tau>\n     then false \\<tau>\n     else if \\<exists>x\\<in>\\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n       (OclAllInstances_generic pre_post\n         OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA>\n         \\<tau>)\\<rceil>\\<rceil>.\n                \\<lambda>_. x.oclIsKindOf(OclAny) \\<tau> = invalid \\<tau>\n          then invalid \\<tau>\n          else if \\<exists>x\\<in>\\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n            (OclAllInstances_generic pre_post\n              OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA>\n              \\<tau>)\\<rceil>\\<rceil>.\n                     \\<lambda>_. x.oclIsKindOf(OclAny) \\<tau> = null \\<tau>\n               then null \\<tau> else true \\<tau>) =\n    true \\<tau>", "apply(simp only: OclAllInstances_generic_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if \\<exists>x\\<in>\\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n  (Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n    \\<lfloor>\\<lfloor>Some `\n                      (OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA> `\n                       ran (heap (pre_post \\<tau>)) -\n                       {\\<bottom>})\\<rfloor>\\<rfloor>)\\<rceil>\\<rceil>.\n           \\<lambda>_. x.oclIsKindOf(OclAny) \\<tau> = false \\<tau>\n     then false \\<tau>\n     else if \\<exists>x\\<in>\\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n       (Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<lfloor>Some `\n                           (OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA> `\n                            ran (heap (pre_post \\<tau>)) -\n                            {\\<bottom>})\\<rfloor>\\<rfloor>)\\<rceil>\\<rceil>.\n                \\<lambda>_. x.oclIsKindOf(OclAny) \\<tau> = invalid \\<tau>\n          then invalid \\<tau>\n          else if \\<exists>x\\<in>\\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n            (Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n              \\<lfloor>\\<lfloor>Some `\n                                (OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA> `\n                                 ran (heap (pre_post \\<tau>)) -\n                                 {\\<bottom>})\\<rfloor>\\<rfloor>)\\<rceil>\\<rceil>.\n                     \\<lambda>_. x.oclIsKindOf(OclAny) \\<tau> = null \\<tau>\n               then null \\<tau> else true \\<tau>) =\n    true \\<tau>", "apply(subst (1 2 3) Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e_inverse, simp add: bot_option_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if \\<exists>x\\<in>\\<lceil>\\<lceil>\\<lfloor>\\<lfloor>Some `\n                   (OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA> `\n                    ran (heap (pre_post \\<tau>)) -\n                    {\\<bottom>})\\<rfloor>\\<rfloor>\\<rceil>\\<rceil>.\n           \\<lambda>_. x.oclIsKindOf(OclAny) \\<tau> = false \\<tau>\n     then false \\<tau>\n     else if \\<exists>x\\<in>\\<lceil>\\<lceil>\\<lfloor>\\<lfloor>Some `\n                        (OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA> `\n                         ran (heap (pre_post \\<tau>)) -\n                         {\\<bottom>})\\<rfloor>\\<rfloor>\\<rceil>\\<rceil>.\n                \\<lambda>_. x.oclIsKindOf(OclAny) \\<tau> = invalid \\<tau>\n          then invalid \\<tau>\n          else if \\<exists>x\\<in>\\<lceil>\\<lceil>\\<lfloor>\\<lfloor>Some `\n                             (OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA> `\n                              ran (heap (pre_post \\<tau>)) -\n                              {\\<bottom>})\\<rfloor>\\<rfloor>\\<rceil>\\<rceil>.\n                     \\<lambda>_. x.oclIsKindOf(OclAny) \\<tau> = null \\<tau>\n               then null \\<tau> else true \\<tau>) =\n    true \\<tau>", "by(simp add: OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny)"], ["", "lemma OclAny_allInstances_at_post_oclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y:\n\"\\<tau> \\<Turnstile> (OclAny .allInstances()->forAll\\<^sub>S\\<^sub>e\\<^sub>t(X|X .oclIsKindOf(OclAny)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>\n     \\<Turnstile> UML_Set.OclForall OclAny .allInstances()\n                   OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y", "unfolding OclAllInstances_at_post_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>\n     \\<Turnstile> UML_Set.OclForall (OclAllInstances_generic snd OclAny)\n                   OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y", "by(rule OclAny_allInstances_generic_oclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y)"], ["", "lemma OclAny_allInstances_at_pre_oclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y:\n\"\\<tau> \\<Turnstile> (OclAny .allInstances@pre()->forAll\\<^sub>S\\<^sub>e\\<^sub>t(X|X .oclIsKindOf(OclAny)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>\n     \\<Turnstile> UML_Set.OclForall OclAny .allInstances@pre()\n                   OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y", "unfolding OclAllInstances_at_pre_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>\n     \\<Turnstile> UML_Set.OclForall (OclAllInstances_generic fst OclAny)\n                   OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y", "by(rule OclAny_allInstances_generic_oclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y)"], ["", "lemma Person_allInstances_generic_oclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y:\n\"\\<tau> \\<Turnstile> ((OclAllInstances_generic pre_post Person)->forAll\\<^sub>S\\<^sub>e\\<^sub>t(X|X .oclIsKindOf(OclAny)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>\n     \\<Turnstile> UML_Set.OclForall\n                   (OclAllInstances_generic pre_post Person)\n                   OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y", "apply(simp add: OclValid_def del: OclAllInstances_generic_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. UML_Set.OclForall\n     (OclAllInstances_generic pre_post\n       OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA>)\n     OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y \\<tau> =\n    true \\<tau>", "apply(simp only: UML_Set.OclForall_def refl if_True\n                  OclAllInstances_generic_defined[simplified OclValid_def])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if \\<exists>x\\<in>\\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n  (OclAllInstances_generic pre_post\n    OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA>\n    \\<tau>)\\<rceil>\\<rceil>.\n           \\<lambda>_. x.oclIsKindOf(OclAny) \\<tau> = false \\<tau>\n     then false \\<tau>\n     else if \\<exists>x\\<in>\\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n       (OclAllInstances_generic pre_post\n         OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA>\n         \\<tau>)\\<rceil>\\<rceil>.\n                \\<lambda>_. x.oclIsKindOf(OclAny) \\<tau> = invalid \\<tau>\n          then invalid \\<tau>\n          else if \\<exists>x\\<in>\\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n            (OclAllInstances_generic pre_post\n              OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA>\n              \\<tau>)\\<rceil>\\<rceil>.\n                     \\<lambda>_. x.oclIsKindOf(OclAny) \\<tau> = null \\<tau>\n               then null \\<tau> else true \\<tau>) =\n    true \\<tau>", "apply(simp only: OclAllInstances_generic_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if \\<exists>x\\<in>\\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n  (Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n    \\<lfloor>\\<lfloor>Some `\n                      (OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA> `\n                       ran (heap (pre_post \\<tau>)) -\n                       {\\<bottom>})\\<rfloor>\\<rfloor>)\\<rceil>\\<rceil>.\n           \\<lambda>_. x.oclIsKindOf(OclAny) \\<tau> = false \\<tau>\n     then false \\<tau>\n     else if \\<exists>x\\<in>\\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n       (Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<lfloor>Some `\n                           (OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA> `\n                            ran (heap (pre_post \\<tau>)) -\n                            {\\<bottom>})\\<rfloor>\\<rfloor>)\\<rceil>\\<rceil>.\n                \\<lambda>_. x.oclIsKindOf(OclAny) \\<tau> = invalid \\<tau>\n          then invalid \\<tau>\n          else if \\<exists>x\\<in>\\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n            (Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n              \\<lfloor>\\<lfloor>Some `\n                                (OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA> `\n                                 ran (heap (pre_post \\<tau>)) -\n                                 {\\<bottom>})\\<rfloor>\\<rfloor>)\\<rceil>\\<rceil>.\n                     \\<lambda>_. x.oclIsKindOf(OclAny) \\<tau> = null \\<tau>\n               then null \\<tau> else true \\<tau>) =\n    true \\<tau>", "apply(subst (1 2 3) Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e_inverse, simp add: bot_option_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if \\<exists>x\\<in>\\<lceil>\\<lceil>\\<lfloor>\\<lfloor>Some `\n                   (OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA> `\n                    ran (heap (pre_post \\<tau>)) -\n                    {\\<bottom>})\\<rfloor>\\<rfloor>\\<rceil>\\<rceil>.\n           \\<lambda>_. x.oclIsKindOf(OclAny) \\<tau> = false \\<tau>\n     then false \\<tau>\n     else if \\<exists>x\\<in>\\<lceil>\\<lceil>\\<lfloor>\\<lfloor>Some `\n                        (OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA> `\n                         ran (heap (pre_post \\<tau>)) -\n                         {\\<bottom>})\\<rfloor>\\<rfloor>\\<rceil>\\<rceil>.\n                \\<lambda>_. x.oclIsKindOf(OclAny) \\<tau> = invalid \\<tau>\n          then invalid \\<tau>\n          else if \\<exists>x\\<in>\\<lceil>\\<lceil>\\<lfloor>\\<lfloor>Some `\n                             (OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA> `\n                              ran (heap (pre_post \\<tau>)) -\n                              {\\<bottom>})\\<rfloor>\\<rfloor>\\<rceil>\\<rceil>.\n                     \\<lambda>_. x.oclIsKindOf(OclAny) \\<tau> = null \\<tau>\n               then null \\<tau> else true \\<tau>) =\n    true \\<tau>", "by(simp add: OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person)"], ["", "lemma Person_allInstances_at_post_oclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y:\n\"\\<tau> \\<Turnstile> (Person .allInstances()->forAll\\<^sub>S\\<^sub>e\\<^sub>t(X|X .oclIsKindOf(OclAny)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>\n     \\<Turnstile> UML_Set.OclForall Person .allInstances()\n                   OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y", "unfolding OclAllInstances_at_post_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>\n     \\<Turnstile> UML_Set.OclForall (OclAllInstances_generic snd Person)\n                   OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y", "by(rule Person_allInstances_generic_oclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y)"], ["", "lemma Person_allInstances_at_pre_oclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y:\n\"\\<tau> \\<Turnstile> (Person .allInstances@pre()->forAll\\<^sub>S\\<^sub>e\\<^sub>t(X|X .oclIsKindOf(OclAny)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>\n     \\<Turnstile> UML_Set.OclForall Person .allInstances@pre()\n                   OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y", "unfolding OclAllInstances_at_pre_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>\n     \\<Turnstile> UML_Set.OclForall (OclAllInstances_generic fst Person)\n                   OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y", "by(rule Person_allInstances_generic_oclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y)"], ["", "lemma Person_allInstances_generic_oclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n:\n\"\\<tau> \\<Turnstile> ((OclAllInstances_generic pre_post Person)->forAll\\<^sub>S\\<^sub>e\\<^sub>t(X|X .oclIsKindOf(Person)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>\n     \\<Turnstile> UML_Set.OclForall\n                   (OclAllInstances_generic pre_post Person)\n                   OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n", "apply(simp add: OclValid_def del: OclAllInstances_generic_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. UML_Set.OclForall\n     (OclAllInstances_generic pre_post\n       OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA>)\n     OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n \\<tau> =\n    true \\<tau>", "apply(simp only: UML_Set.OclForall_def refl if_True\n                  OclAllInstances_generic_defined[simplified OclValid_def])"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if \\<exists>x\\<in>\\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n  (OclAllInstances_generic pre_post\n    OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA>\n    \\<tau>)\\<rceil>\\<rceil>.\n           \\<lambda>_. x.oclIsKindOf(Person) \\<tau> = false \\<tau>\n     then false \\<tau>\n     else if \\<exists>x\\<in>\\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n       (OclAllInstances_generic pre_post\n         OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA>\n         \\<tau>)\\<rceil>\\<rceil>.\n                \\<lambda>_. x.oclIsKindOf(Person) \\<tau> = invalid \\<tau>\n          then invalid \\<tau>\n          else if \\<exists>x\\<in>\\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n            (OclAllInstances_generic pre_post\n              OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA>\n              \\<tau>)\\<rceil>\\<rceil>.\n                     \\<lambda>_. x.oclIsKindOf(Person) \\<tau> = null \\<tau>\n               then null \\<tau> else true \\<tau>) =\n    true \\<tau>", "apply(simp only: OclAllInstances_generic_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if \\<exists>x\\<in>\\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n  (Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n    \\<lfloor>\\<lfloor>Some `\n                      (OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA> `\n                       ran (heap (pre_post \\<tau>)) -\n                       {\\<bottom>})\\<rfloor>\\<rfloor>)\\<rceil>\\<rceil>.\n           \\<lambda>_. x.oclIsKindOf(Person) \\<tau> = false \\<tau>\n     then false \\<tau>\n     else if \\<exists>x\\<in>\\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n       (Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<lfloor>Some `\n                           (OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA> `\n                            ran (heap (pre_post \\<tau>)) -\n                            {\\<bottom>})\\<rfloor>\\<rfloor>)\\<rceil>\\<rceil>.\n                \\<lambda>_. x.oclIsKindOf(Person) \\<tau> = invalid \\<tau>\n          then invalid \\<tau>\n          else if \\<exists>x\\<in>\\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n            (Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n              \\<lfloor>\\<lfloor>Some `\n                                (OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA> `\n                                 ran (heap (pre_post \\<tau>)) -\n                                 {\\<bottom>})\\<rfloor>\\<rfloor>)\\<rceil>\\<rceil>.\n                     \\<lambda>_. x.oclIsKindOf(Person) \\<tau> = null \\<tau>\n               then null \\<tau> else true \\<tau>) =\n    true \\<tau>", "apply(subst (1 2 3) Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e_inverse, simp add: bot_option_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if \\<exists>x\\<in>\\<lceil>\\<lceil>\\<lfloor>\\<lfloor>Some `\n                   (OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA> `\n                    ran (heap (pre_post \\<tau>)) -\n                    {\\<bottom>})\\<rfloor>\\<rfloor>\\<rceil>\\<rceil>.\n           \\<lambda>_. x.oclIsKindOf(Person) \\<tau> = false \\<tau>\n     then false \\<tau>\n     else if \\<exists>x\\<in>\\<lceil>\\<lceil>\\<lfloor>\\<lfloor>Some `\n                        (OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA> `\n                         ran (heap (pre_post \\<tau>)) -\n                         {\\<bottom>})\\<rfloor>\\<rfloor>\\<rceil>\\<rceil>.\n                \\<lambda>_. x.oclIsKindOf(Person) \\<tau> = invalid \\<tau>\n          then invalid \\<tau>\n          else if \\<exists>x\\<in>\\<lceil>\\<lceil>\\<lfloor>\\<lfloor>Some `\n                             (OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA> `\n                              ran (heap (pre_post \\<tau>)) -\n                              {\\<bottom>})\\<rfloor>\\<rfloor>\\<rceil>\\<rceil>.\n                     \\<lambda>_. x.oclIsKindOf(Person) \\<tau> = null \\<tau>\n               then null \\<tau> else true \\<tau>) =\n    true \\<tau>", "by(simp add: OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person)"], ["", "lemma Person_allInstances_at_post_oclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n:\n\"\\<tau> \\<Turnstile> (Person .allInstances()->forAll\\<^sub>S\\<^sub>e\\<^sub>t(X|X .oclIsKindOf(Person)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>\n     \\<Turnstile> UML_Set.OclForall Person .allInstances()\n                   OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n", "unfolding OclAllInstances_at_post_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>\n     \\<Turnstile> UML_Set.OclForall (OclAllInstances_generic snd Person)\n                   OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n", "by(rule Person_allInstances_generic_oclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n)"], ["", "lemma Person_allInstances_at_pre_oclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n:\n\"\\<tau> \\<Turnstile> (Person .allInstances@pre()->forAll\\<^sub>S\\<^sub>e\\<^sub>t(X|X .oclIsKindOf(Person)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>\n     \\<Turnstile> UML_Set.OclForall Person .allInstances@pre()\n                   OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n", "unfolding OclAllInstances_at_pre_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>\n     \\<Turnstile> UML_Set.OclForall (OclAllInstances_generic fst Person)\n                   OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n", "by(rule Person_allInstances_generic_oclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n)"], ["", "section\\<open>The Accessors (any, boss, salary)\\<close>"], ["", "text\\<open>\\label{sec:edm-accessors}\\<close>"], ["", "text\\<open>Should be generated entirely from a class-diagram.\\<close>"], ["", "subsection\\<open>Definition\\<close>"], ["", "definition eval_extract :: \"('\\<AA>,('a::object) option option) val\n                            \\<Rightarrow> (oid \\<Rightarrow> ('\\<AA>,'c::null) val)\n                            \\<Rightarrow> ('\\<AA>,'c::null) val\"\nwhere \"eval_extract X f = (\\<lambda> \\<tau>. case X \\<tau> of\n                                    \\<bottom> \\<Rightarrow> invalid \\<tau>   \\<comment> \\<open>exception propagation\\<close>\n                               | \\<lfloor>  \\<bottom> \\<rfloor> \\<Rightarrow> invalid \\<tau> \\<comment> \\<open>dereferencing null pointer\\<close>\n                               | \\<lfloor>\\<lfloor> obj \\<rfloor>\\<rfloor> \\<Rightarrow> f (oid_of obj) \\<tau>)\""], ["", "definition deref_oid\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n :: \"(\\<AA> state \\<times> \\<AA> state \\<Rightarrow> \\<AA> state)\n                             \\<Rightarrow> (type\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n \\<Rightarrow> (\\<AA>, 'c::null)val)\n                             \\<Rightarrow> oid\n                             \\<Rightarrow> (\\<AA>, 'c::null)val\"\nwhere \"deref_oid\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n fst_snd f oid = (\\<lambda>\\<tau>. case (heap (fst_snd \\<tau>)) oid of\n                                              \\<lfloor> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n obj \\<rfloor> \\<Rightarrow> f obj \\<tau>\n                                            | _              \\<Rightarrow> invalid \\<tau>)\""], ["", "definition deref_oid\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y :: \"(\\<AA> state \\<times> \\<AA> state \\<Rightarrow> \\<AA> state)\n                             \\<Rightarrow> (type\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y \\<Rightarrow> (\\<AA>, 'c::null)val)\n                             \\<Rightarrow> oid\n                             \\<Rightarrow> (\\<AA>, 'c::null)val\"\nwhere \"deref_oid\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y fst_snd f oid = (\\<lambda>\\<tau>. case (heap (fst_snd \\<tau>)) oid of\n                       \\<lfloor> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y obj \\<rfloor> \\<Rightarrow> f obj \\<tau>\n                     | _       \\<Rightarrow> invalid \\<tau>)\""], ["", "text\\<open>pointer undefined in state or not referencing a type conform object representation\\<close>"], ["", "definition \"select\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\\<A>\\<N>\\<Y> f = (\\<lambda> X. case X of\n                     (mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y _ \\<bottom>) \\<Rightarrow> null\n                   | (mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y _ \\<lfloor>any\\<rfloor>) \\<Rightarrow> f (\\<lambda>x _. \\<lfloor>\\<lfloor>x\\<rfloor>\\<rfloor>) any)\""], ["", "definition \"select\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<B>\\<O>\\<S>\\<S> f = (\\<lambda> X. case X of\n                     (mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n _ _ \\<bottom>) \\<Rightarrow> null  \\<comment> \\<open>object contains null pointer\\<close>\n                   | (mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n _ _ \\<lfloor>boss\\<rfloor>) \\<Rightarrow> f (\\<lambda>x _. \\<lfloor>\\<lfloor>x\\<rfloor>\\<rfloor>) boss)\""], ["", "definition \"select\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<S>\\<A>\\<L>\\<A>\\<R>\\<Y> f = (\\<lambda> X. case X of\n                     (mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n _ \\<bottom> _) \\<Rightarrow> null\n                   | (mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n _ \\<lfloor>salary\\<rfloor> _) \\<Rightarrow> f (\\<lambda>x _. \\<lfloor>\\<lfloor>x\\<rfloor>\\<rfloor>) salary)\""], ["", "definition \"in_pre_state = fst\""], ["", "definition \"in_post_state = snd\""], ["", "definition \"reconst_basetype = (\\<lambda> convert x. convert x)\""], ["", "definition dot\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\\<A>\\<N>\\<Y> :: \"OclAny \\<Rightarrow> _\"  (\"(1(_).any)\" 50)\n  where \"(X).any = eval_extract X\n                     (deref_oid\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y in_post_state\n                       (select\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\\<A>\\<N>\\<Y>\n                         reconst_basetype))\""], ["", "definition dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<B>\\<O>\\<S>\\<S> :: \"Person \\<Rightarrow> Person\"  (\"(1(_).boss)\" 50)\n  where \"(X).boss = eval_extract X\n                      (deref_oid\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n in_post_state\n                        (select\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<B>\\<O>\\<S>\\<S>\n                          (deref_oid\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n in_post_state)))\""], ["", "definition dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<S>\\<A>\\<L>\\<A>\\<R>\\<Y> :: \"Person \\<Rightarrow> Integer\"  (\"(1(_).salary)\" 50)\n  where \"(X).salary = eval_extract X\n                        (deref_oid\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n in_post_state\n                          (select\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<S>\\<A>\\<L>\\<A>\\<R>\\<Y>\n                            reconst_basetype))\""], ["", "definition dot\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\\<A>\\<N>\\<Y>_at_pre :: \"OclAny \\<Rightarrow> _\"  (\"(1(_).any@pre)\" 50)\n  where \"(X).any@pre = eval_extract X\n                         (deref_oid\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y in_pre_state\n                           (select\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\\<A>\\<N>\\<Y>\n                             reconst_basetype))\""], ["", "definition dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<B>\\<O>\\<S>\\<S>_at_pre:: \"Person \\<Rightarrow> Person\"  (\"(1(_).boss@pre)\" 50)\n  where \"(X).boss@pre = eval_extract X\n                          (deref_oid\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n in_pre_state\n                            (select\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<B>\\<O>\\<S>\\<S>\n                              (deref_oid\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n in_pre_state)))\""], ["", "definition dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<S>\\<A>\\<L>\\<A>\\<R>\\<Y>_at_pre:: \"Person \\<Rightarrow> Integer\"  (\"(1(_).salary@pre)\" 50)\n  where \"(X).salary@pre = eval_extract X\n                            (deref_oid\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n in_pre_state\n                              (select\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<S>\\<A>\\<L>\\<A>\\<R>\\<Y>\n                                reconst_basetype))\""], ["", "lemmas dot_accessor =\n  dot\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\\<A>\\<N>\\<Y>_def\n  dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<B>\\<O>\\<S>\\<S>_def\n  dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<S>\\<A>\\<L>\\<A>\\<R>\\<Y>_def\n  dot\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\\<A>\\<N>\\<Y>_at_pre_def\n  dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<B>\\<O>\\<S>\\<S>_at_pre_def\n  dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<S>\\<A>\\<L>\\<A>\\<R>\\<Y>_at_pre_def"], ["", "subsection\\<open>Context Passing\\<close>"], ["", "lemmas [simp] = eval_extract_def"], ["", "lemma cp_dot\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\\<A>\\<N>\\<Y>: \"((X).any) \\<tau> = ((\\<lambda>_. X \\<tau>).any) \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (X.any) \\<tau> = (\\<lambda>_. X \\<tau>.any) \\<tau>", "by (simp add: dot_accessor)"], ["", "lemma cp_dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<B>\\<O>\\<S>\\<S>: \"((X).boss) \\<tau> = ((\\<lambda>_. X \\<tau>).boss) \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (X.boss) \\<tau> = (\\<lambda>_. X \\<tau>.boss) \\<tau>", "by (simp add: dot_accessor)"], ["", "lemma cp_dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<S>\\<A>\\<L>\\<A>\\<R>\\<Y>: \"((X).salary) \\<tau> = ((\\<lambda>_. X \\<tau>).salary) \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (X.salary) \\<tau> = (\\<lambda>_. X \\<tau>.salary) \\<tau>", "by (simp add: dot_accessor)"], ["", "lemma cp_dot\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\\<A>\\<N>\\<Y>_at_pre: \"((X).any@pre) \\<tau> = ((\\<lambda>_. X \\<tau>).any@pre) \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (X.any@pre) \\<tau> = (\\<lambda>_. X \\<tau>.any@pre) \\<tau>", "by (simp add: dot_accessor)"], ["", "lemma cp_dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<B>\\<O>\\<S>\\<S>_at_pre: \"((X).boss@pre) \\<tau> = ((\\<lambda>_. X \\<tau>).boss@pre) \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (X.boss@pre) \\<tau> = (\\<lambda>_. X \\<tau>.boss@pre) \\<tau>", "by (simp add: dot_accessor)"], ["", "lemma cp_dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<S>\\<A>\\<L>\\<A>\\<R>\\<Y>_at_pre: \"((X).salary@pre) \\<tau> = ((\\<lambda>_. X \\<tau>).salary@pre) \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (X.salary@pre) \\<tau> = (\\<lambda>_. X \\<tau>.salary@pre) \\<tau>", "by (simp add: dot_accessor)"], ["", "lemmas cp_dot\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\\<A>\\<N>\\<Y>_I [simp, intro!]=\n       cp_dot\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\\<A>\\<N>\\<Y>[THEN allI[THEN allI],\n                          of \"\\<lambda> X _. X\" \"\\<lambda> _ \\<tau>. \\<tau>\", THEN cpI1]"], ["", "lemmas cp_dot\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\\<A>\\<N>\\<Y>_at_pre_I [simp, intro!]=\n       cp_dot\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\\<A>\\<N>\\<Y>_at_pre[THEN allI[THEN allI],\n                          of \"\\<lambda> X _. X\" \"\\<lambda> _ \\<tau>. \\<tau>\", THEN cpI1]"], ["", "lemmas cp_dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<B>\\<O>\\<S>\\<S>_I [simp, intro!]=\n       cp_dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<B>\\<O>\\<S>\\<S>[THEN allI[THEN allI],\n                          of \"\\<lambda> X _. X\" \"\\<lambda> _ \\<tau>. \\<tau>\", THEN cpI1]"], ["", "lemmas cp_dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<B>\\<O>\\<S>\\<S>_at_pre_I [simp, intro!]=\n       cp_dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<B>\\<O>\\<S>\\<S>_at_pre[THEN allI[THEN allI],\n                          of \"\\<lambda> X _. X\" \"\\<lambda> _ \\<tau>. \\<tau>\", THEN cpI1]"], ["", "lemmas cp_dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<S>\\<A>\\<L>\\<A>\\<R>\\<Y>_I [simp, intro!]=\n       cp_dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<S>\\<A>\\<L>\\<A>\\<R>\\<Y>[THEN allI[THEN allI],\n                          of \"\\<lambda> X _. X\" \"\\<lambda> _ \\<tau>. \\<tau>\", THEN cpI1]"], ["", "lemmas cp_dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<S>\\<A>\\<L>\\<A>\\<R>\\<Y>_at_pre_I [simp, intro!]=\n       cp_dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<S>\\<A>\\<L>\\<A>\\<R>\\<Y>_at_pre[THEN allI[THEN allI],\n                          of \"\\<lambda> X _. X\" \"\\<lambda> _ \\<tau>. \\<tau>\", THEN cpI1]"], ["", "subsection\\<open>Execution with Invalid or Null as Argument\\<close>"], ["", "lemma dot\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\\<A>\\<N>\\<Y>_nullstrict [simp]: \"(null).any = invalid\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (null.any) = invalid", "by(rule ext, simp add: dot_accessor null_fun_def null_option_def bot_option_def null_def invalid_def)"], ["", "lemma dot\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\\<A>\\<N>\\<Y>_at_pre_nullstrict [simp] : \"(null).any@pre = invalid\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (null.any@pre) = invalid", "by(rule ext, simp add: dot_accessor null_fun_def null_option_def bot_option_def null_def invalid_def)"], ["", "lemma dot\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\\<A>\\<N>\\<Y>_strict [simp] : \"(invalid).any = invalid\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (invalid.any) = invalid", "by(rule ext, simp add: dot_accessor null_fun_def null_option_def bot_option_def null_def invalid_def)"], ["", "lemma dot\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\\<A>\\<N>\\<Y>_at_pre_strict [simp] : \"(invalid).any@pre = invalid\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (invalid.any@pre) = invalid", "by(rule ext, simp add: dot_accessor null_fun_def null_option_def bot_option_def null_def invalid_def)"], ["", "lemma dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<B>\\<O>\\<S>\\<S>_nullstrict [simp]: \"(null).boss = invalid\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (null.boss) = invalid", "by(rule ext, simp add: dot_accessor null_fun_def null_option_def bot_option_def null_def invalid_def)"], ["", "lemma dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<B>\\<O>\\<S>\\<S>_at_pre_nullstrict [simp] : \"(null).boss@pre = invalid\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (null.boss@pre) = invalid", "by(rule ext, simp add: dot_accessor null_fun_def null_option_def bot_option_def null_def invalid_def)"], ["", "lemma dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<B>\\<O>\\<S>\\<S>_strict [simp] : \"(invalid).boss = invalid\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (invalid.boss) = invalid", "by(rule ext, simp add: dot_accessor null_fun_def null_option_def bot_option_def null_def invalid_def)"], ["", "lemma dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<B>\\<O>\\<S>\\<S>_at_pre_strict [simp] : \"(invalid).boss@pre = invalid\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (invalid.boss@pre) = invalid", "by(rule ext, simp add: dot_accessor null_fun_def null_option_def bot_option_def null_def invalid_def)"], ["", "lemma dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<S>\\<A>\\<L>\\<A>\\<R>\\<Y>_nullstrict [simp]: \"(null).salary = invalid\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (null.salary) = invalid", "by(rule ext, simp add: dot_accessor null_fun_def null_option_def bot_option_def null_def invalid_def)"], ["", "lemma dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<S>\\<A>\\<L>\\<A>\\<R>\\<Y>_at_pre_nullstrict [simp] : \"(null).salary@pre = invalid\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (null.salary@pre) = invalid", "by(rule ext, simp add: dot_accessor null_fun_def null_option_def bot_option_def null_def invalid_def)"], ["", "lemma dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<S>\\<A>\\<L>\\<A>\\<R>\\<Y>_strict [simp] : \"(invalid).salary = invalid\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (invalid.salary) = invalid", "by(rule ext, simp add: dot_accessor null_fun_def null_option_def bot_option_def null_def invalid_def)"], ["", "lemma dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<S>\\<A>\\<L>\\<A>\\<R>\\<Y>_at_pre_strict [simp] : \"(invalid).salary@pre = invalid\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (invalid.salary@pre) = invalid", "by(rule ext, simp add: dot_accessor null_fun_def null_option_def bot_option_def null_def invalid_def)"], ["", "subsection\\<open>Representation in States\\<close>"], ["", "lemma dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<B>\\<O>\\<S>\\<S>_def_mono:\"\\<tau> \\<Turnstile> \\<delta>(X .boss) \\<Longrightarrow> \\<tau> \\<Turnstile> \\<delta>(X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau> \\<Turnstile> \\<delta> (X.boss) \\<Longrightarrow>\n    \\<tau> \\<Turnstile> \\<delta> X", "apply(case_tac \"\\<tau> \\<Turnstile> (X \\<triangleq> invalid)\", insert StrongEq_L_subst2[where P = \"(\\<lambda>x. (\\<delta> (x .boss)))\" and \\<tau> = \"\\<tau>\" and x = \"X\" and y = \"invalid\"], simp add: foundation16')"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<tau> \\<Turnstile> \\<delta> (X.boss);\n     \\<tau> |\\<noteq> X \\<triangleq> invalid;\n     \\<lbrakk>cp (\\<lambda>x. \\<delta> (x.boss));\n      \\<tau> \\<Turnstile> X \\<triangleq> invalid;\n      \\<tau> \\<Turnstile> \\<delta> (X.boss)\\<rbrakk>\n     \\<Longrightarrow> \\<tau> \\<Turnstile> \\<delta> (invalid.boss)\\<rbrakk>\n    \\<Longrightarrow> \\<tau> \\<Turnstile> \\<delta> X", "apply(case_tac \"\\<tau> \\<Turnstile> (X \\<triangleq> null)\", insert StrongEq_L_subst2[where P = \"(\\<lambda>x. (\\<delta> (x .boss)))\" and \\<tau> = \"\\<tau>\" and x = \"X\" and y = \"null\"], simp add: foundation16')"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<tau> \\<Turnstile> \\<delta> (X.boss);\n     \\<tau> |\\<noteq> X \\<triangleq> invalid;\n     \\<lbrakk>cp (\\<lambda>x. \\<delta> (x.boss));\n      \\<tau> \\<Turnstile> X \\<triangleq> invalid;\n      \\<tau> \\<Turnstile> \\<delta> (X.boss)\\<rbrakk>\n     \\<Longrightarrow> \\<tau> \\<Turnstile> \\<delta> (invalid.boss);\n     \\<tau> |\\<noteq> X \\<triangleq> null;\n     \\<lbrakk>cp (\\<lambda>x. \\<delta> (x.boss));\n      \\<tau> \\<Turnstile> X \\<triangleq> null;\n      \\<tau> \\<Turnstile> \\<delta> (X.boss)\\<rbrakk>\n     \\<Longrightarrow> \\<tau> \\<Turnstile> \\<delta> (null.boss)\\<rbrakk>\n    \\<Longrightarrow> \\<tau> \\<Turnstile> \\<delta> X", "by(simp add: defined_split)"], ["", "lemma repr_boss:  \nassumes A : \"\\<tau> \\<Turnstile> \\<delta>(x .boss)\"\nshows      \"is_represented_in_state in_post_state (x .boss) Person \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_represented_in_state in_post_state (x.boss) Person \\<tau>", "apply(insert A[simplified foundation16]\n                      A[THEN dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<B>\\<O>\\<S>\\<S>_def_mono, simplified foundation16])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x.boss) \\<tau> \\<noteq> \\<bottom> \\<and>\n             (x.boss) \\<tau> \\<noteq> null;\n     x \\<tau> \\<noteq> \\<bottom> \\<and> x \\<tau> \\<noteq> null\\<rbrakk>\n    \\<Longrightarrow> is_represented_in_state in_post_state (x.boss) Person\n                       \\<tau>", "unfolding is_represented_in_state_def\n                   dot\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<B>\\<O>\\<S>\\<S>_def eval_extract_def select\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<B>\\<O>\\<S>\\<S>_def in_post_state_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(case x \\<tau> of \\<bottom> \\<Rightarrow> invalid \\<tau>\n              | \\<lfloor>\\<bottom>\\<rfloor> \\<Rightarrow> invalid \\<tau>\n              | \\<lfloor>\\<lfloor>obj\\<rfloor>\\<rfloor> \\<Rightarrow>\n                  deref_oid\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                   snd\n                   (case_type\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                     (\\<lambda>x xa.\n                         case_option null\n                          (deref_oid\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                            snd\n                            (\\<lambda>x _.\n                                \\<lfloor>\\<lfloor>x\\<rfloor>\\<rfloor>))))\n                   (oid_of obj) \\<tau>) \\<noteq>\n             \\<bottom> \\<and>\n             (case x \\<tau> of \\<bottom> \\<Rightarrow> invalid \\<tau>\n              | \\<lfloor>\\<bottom>\\<rfloor> \\<Rightarrow> invalid \\<tau>\n              | \\<lfloor>\\<lfloor>obj\\<rfloor>\\<rfloor> \\<Rightarrow>\n                  deref_oid\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                   snd\n                   (case_type\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                     (\\<lambda>x xa.\n                         case_option null\n                          (deref_oid\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                            snd\n                            (\\<lambda>x _.\n                                \\<lfloor>\\<lfloor>x\\<rfloor>\\<rfloor>))))\n                   (oid_of obj) \\<tau>) \\<noteq>\n             null;\n     x \\<tau> \\<noteq> \\<bottom> \\<and> x \\<tau> \\<noteq> null\\<rbrakk>\n    \\<Longrightarrow> (case x \\<tau> of\n                       \\<bottom> \\<Rightarrow> invalid \\<tau>\n                       | \\<lfloor>\\<bottom>\\<rfloor> \\<Rightarrow>\n                           invalid \\<tau>\n                       | \\<lfloor>\\<lfloor>obj\\<rfloor>\\<rfloor> \\<Rightarrow>\n                           deref_oid\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                            snd\n                            (case_type\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                              (\\<lambda>x xa.\n                                  case_option null\n                                   (deref_oid\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                                     snd\n                                     (\\<lambda>x _.\n   \\<lfloor>\\<lfloor>x\\<rfloor>\\<rfloor>))))\n                            (oid_of obj) \\<tau>)\n                      \\<in> (Some \\<circ> Person) ` ran (heap (snd \\<tau>))", "by(auto simp: deref_oid\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_def bot_fun_def bot_option_def null_option_def null_fun_def invalid_def\n                       OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA>_def image_def ran_def\n                 split: type\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n.split option.split \\<AA>.split)"], ["", "lemma repr_bossX : \nassumes A: \"\\<tau> \\<Turnstile> \\<delta>(x .boss)\"\nshows \"\\<tau> \\<Turnstile> ((Person .allInstances()) ->includes\\<^sub>S\\<^sub>e\\<^sub>t(x .boss))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>\n     \\<Turnstile> Person .allInstances()->includes\\<^sub>S\\<^sub>e\\<^sub>t(x.boss)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<tau>\n     \\<Turnstile> Person .allInstances()->includes\\<^sub>S\\<^sub>e\\<^sub>t(x.boss)", "have B : \"\\<And>S f. (x .boss) \\<tau> \\<in> (Some ` f ` S) \\<Longrightarrow>\n                  (x .boss) \\<tau> \\<in> (Some ` (f ` S - {None}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>S f.\n       (x.boss) \\<tau> \\<in> Some ` f ` S \\<Longrightarrow>\n       (x.boss) \\<tau> \\<in> Some ` (f ` S - {\\<bottom>})", "apply(auto simp: image_def ran_def, metis)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>S f xa.\n       \\<lbrakk>(x.boss) \\<tau> = \\<lfloor>f xa\\<rfloor>;\n        xa \\<in> S\\<rbrakk>\n       \\<Longrightarrow> \\<exists>y. f xa = \\<lfloor>y\\<rfloor>", "by(insert A[simplified foundation16], simp add: null_option_def bot_option_def)"], ["proof (state)\nthis:\n  (x.boss) \\<tau> \\<in> Some ` ?f ` ?S \\<Longrightarrow>\n  (x.boss) \\<tau> \\<in> Some ` (?f ` ?S - {\\<bottom>})\n\ngoal (1 subgoal):\n 1. \\<tau>\n     \\<Turnstile> Person .allInstances()->includes\\<^sub>S\\<^sub>e\\<^sub>t(x.boss)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>\n     \\<Turnstile> Person .allInstances()->includes\\<^sub>S\\<^sub>e\\<^sub>t(x.boss)", "apply(insert repr_boss[OF A] OclAllInstances_at_post_defined[where H = Person and \\<tau> = \\<tau>])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>is_represented_in_state in_post_state (x.boss) Person \\<tau>;\n     \\<tau> \\<Turnstile> \\<delta> Person .allInstances()\\<rbrakk>\n    \\<Longrightarrow> \\<tau>\n                       \\<Turnstile> Person .allInstances()->includes\\<^sub>S\\<^sub>e\\<^sub>t(x.boss)", "unfolding is_represented_in_state_def OclValid_def\n                   OclAllInstances_at_post_def OclAllInstances_generic_def OclIncludes_def\n                   in_post_state_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x.boss) \\<tau>\n             \\<in> (Some \\<circ> Person) ` ran (heap (snd \\<tau>));\n     (\\<delta> (\\<lambda>\\<tau>.\n                   Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n                    \\<lfloor>\\<lfloor>Some `\n(Person ` ran (heap (snd \\<tau>)) - {\\<bottom>})\\<rfloor>\\<rfloor>))\n      \\<tau> =\n     true \\<tau>\\<rbrakk>\n    \\<Longrightarrow> (if (\\<delta> (\\<lambda>\\<tau>.\n  Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n   \\<lfloor>\\<lfloor>Some `\n                     (Person ` ran (heap (snd \\<tau>)) -\n                      {\\<bottom>})\\<rfloor>\\<rfloor>))\n                           \\<tau> =\n                          true \\<tau> \\<and>\n                          (\\<upsilon> (x.boss)) \\<tau> = true \\<tau>\n                       then \\<lfloor>\\<lfloor>(x.boss) \\<tau>\n        \\<in> \\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n                               (Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n                                 \\<lfloor>\\<lfloor>Some `\n             (Person ` ran (heap (snd \\<tau>)) -\n              {\\<bottom>})\\<rfloor>\\<rfloor>)\\<rceil>\\<rceil>\\<rfloor>\\<rfloor>\n                       else \\<bottom>) =\n                      true \\<tau>", "apply(simp add: A[THEN foundation20, simplified OclValid_def])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x.boss) \\<tau>\n             \\<in> (\\<lambda>x.\n                       \\<lfloor>OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA>\n                                 x\\<rfloor>) `\n                   ran (heap (snd \\<tau>));\n     (\\<delta> (\\<lambda>\\<tau>.\n                   Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n                    \\<lfloor>\\<lfloor>Some `\n(OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA> `\n ran (heap (snd \\<tau>)) -\n {\\<bottom>})\\<rfloor>\\<rfloor>))\n      \\<tau> =\n     true \\<tau>\\<rbrakk>\n    \\<Longrightarrow> \\<lfloor>\\<lfloor>(x.boss) \\<tau>\n  \\<in> \\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n                         (Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n                           \\<lfloor>\\<lfloor>Some `\n       (OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA> `\n        ran (heap (snd \\<tau>)) -\n        {\\<bottom>})\\<rfloor>\\<rfloor>)\\<rceil>\\<rceil>\\<rfloor>\\<rfloor> =\n                      true \\<tau>", "apply(subst Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e_inverse, simp, metis bot_option_def option.distinct(1))"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(x.boss) \\<tau>\n             \\<in> (\\<lambda>x.\n                       \\<lfloor>OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA>\n                                 x\\<rfloor>) `\n                   ran (heap (snd \\<tau>));\n     (\\<delta> (\\<lambda>\\<tau>.\n                   Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n                    \\<lfloor>\\<lfloor>Some `\n(OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA> `\n ran (heap (snd \\<tau>)) -\n {\\<bottom>})\\<rfloor>\\<rfloor>))\n      \\<tau> =\n     true \\<tau>\\<rbrakk>\n    \\<Longrightarrow> \\<lfloor>\\<lfloor>(x.boss) \\<tau>\n  \\<in> \\<lceil>\\<lceil>\\<lfloor>\\<lfloor>Some `\n    (OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA> `\n     ran (heap (snd \\<tau>)) -\n     {\\<bottom>})\\<rfloor>\\<rfloor>\\<rceil>\\<rceil>\\<rfloor>\\<rfloor> =\n                      true \\<tau>", "by(simp add: image_comp B true_def)"], ["proof (state)\nthis:\n  \\<tau>\n   \\<Turnstile> Person .allInstances()->includes\\<^sub>S\\<^sub>e\\<^sub>t(x.boss)\n\ngoal:\nNo subgoals!", "qed"], ["", "section\\<open>A Little Infra-structure on Example States\\<close>"], ["", "text\\<open>\nThe example we are defining in this section comes from the figure~\\ref{fig:edm1_system-states}.\n\\begin{figure}\n\\includegraphics[width=\\textwidth]{figures/pre-post.pdf}\n\\caption{(a) pre-state $\\sigma_1$ and\n  (b) post-state $\\sigma_1'$.}\n\\label{fig:edm1_system-states}\n\\end{figure}\n\\<close>"], ["", "text_raw\\<open>\\isatagafp\\<close>"], ["", "definition OclInt1000 (\"\\<one>\\<zero>\\<zero>\\<zero>\") where \"OclInt1000 = (\\<lambda> _ . \\<lfloor>\\<lfloor>1000\\<rfloor>\\<rfloor>)\""], ["", "definition OclInt1200 (\"\\<one>\\<two>\\<zero>\\<zero>\") where \"OclInt1200 = (\\<lambda> _ . \\<lfloor>\\<lfloor>1200\\<rfloor>\\<rfloor>)\""], ["", "definition OclInt1300 (\"\\<one>\\<three>\\<zero>\\<zero>\") where \"OclInt1300 = (\\<lambda> _ . \\<lfloor>\\<lfloor>1300\\<rfloor>\\<rfloor>)\""], ["", "definition OclInt1800 (\"\\<one>\\<eight>\\<zero>\\<zero>\") where \"OclInt1800 = (\\<lambda> _ . \\<lfloor>\\<lfloor>1800\\<rfloor>\\<rfloor>)\""], ["", "definition OclInt2600 (\"\\<two>\\<six>\\<zero>\\<zero>\") where \"OclInt2600 = (\\<lambda> _ . \\<lfloor>\\<lfloor>2600\\<rfloor>\\<rfloor>)\""], ["", "definition OclInt2900 (\"\\<two>\\<nine>\\<zero>\\<zero>\") where \"OclInt2900 = (\\<lambda> _ . \\<lfloor>\\<lfloor>2900\\<rfloor>\\<rfloor>)\""], ["", "definition OclInt3200 (\"\\<three>\\<two>\\<zero>\\<zero>\") where \"OclInt3200 = (\\<lambda> _ . \\<lfloor>\\<lfloor>3200\\<rfloor>\\<rfloor>)\""], ["", "definition OclInt3500 (\"\\<three>\\<five>\\<zero>\\<zero>\") where \"OclInt3500 = (\\<lambda> _ . \\<lfloor>\\<lfloor>3500\\<rfloor>\\<rfloor>)\""], ["", "definition \"oid0 \\<equiv> 0\""], ["", "definition \"oid1 \\<equiv> 1\""], ["", "definition \"oid2 \\<equiv> 2\""], ["", "definition \"oid3 \\<equiv> 3\""], ["", "definition \"oid4 \\<equiv> 4\""], ["", "definition \"oid5 \\<equiv> 5\""], ["", "definition \"oid6 \\<equiv> 6\""], ["", "definition \"oid7 \\<equiv> 7\""], ["", "definition \"oid8 \\<equiv> 8\""], ["", "definition \"person1 \\<equiv> mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n oid0 \\<lfloor>1300\\<rfloor> \\<lfloor>oid1\\<rfloor>\""], ["", "definition \"person2 \\<equiv> mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n oid1 \\<lfloor>1800\\<rfloor> \\<lfloor>oid1\\<rfloor>\""], ["", "definition \"person3 \\<equiv> mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n oid2 None None\""], ["", "definition \"person4 \\<equiv> mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n oid3 \\<lfloor>2900\\<rfloor> None\""], ["", "definition \"person5 \\<equiv> mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n oid4 \\<lfloor>3500\\<rfloor> None\""], ["", "definition \"person6 \\<equiv> mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n oid5 \\<lfloor>2500\\<rfloor> \\<lfloor>oid6\\<rfloor>\""], ["", "definition \"person7 \\<equiv> mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y oid6 \\<lfloor>(\\<lfloor>3200\\<rfloor>, \\<lfloor>oid6\\<rfloor>)\\<rfloor>\""], ["", "definition \"person8 \\<equiv> mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y oid7 None\""], ["", "definition \"person9 \\<equiv> mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n oid8 \\<lfloor>0\\<rfloor> None\""], ["", "definition\n      \"\\<sigma>\\<^sub>1  \\<equiv> \\<lparr> heap = Map.empty(oid0 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n (mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n oid0 \\<lfloor>1000\\<rfloor> \\<lfloor>oid1\\<rfloor>))\n                           (oid1 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n (mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n oid1 \\<lfloor>1200\\<rfloor>  None))\n                           \\<^cancel>\\<open>oid2\\<close>\n                           (oid3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n (mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n oid3 \\<lfloor>2600\\<rfloor> \\<lfloor>oid4\\<rfloor>))\n                           (oid4 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person5)\n                           (oid5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n (mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n oid5 \\<lfloor>2300\\<rfloor> \\<lfloor>oid3\\<rfloor>))\n                           \\<^cancel>\\<open>oid6\\<close>\n                           \\<^cancel>\\<open>oid7\\<close>\n                           (oid8 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9),\n               assocs = Map.empty \\<rparr>\""], ["", "definition\n      \"\\<sigma>\\<^sub>1' \\<equiv> \\<lparr> heap = Map.empty(oid0 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1)\n                           (oid1 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2)\n                           (oid2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3)\n                           (oid3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4)\n                           \\<^cancel>\\<open>oid4\\<close>\n                           (oid5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6)\n                           (oid6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7)\n                           (oid7 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8)\n                           (oid8 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9),\n               assocs = Map.empty \\<rparr>\""], ["", "definition \"\\<sigma>\\<^sub>0 \\<equiv> \\<lparr> heap = Map.empty, assocs = Map.empty \\<rparr>\""], ["", "lemma basic_\\<tau>_wff: \"WFF(\\<sigma>\\<^sub>1,\\<sigma>\\<^sub>1')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. WFF (\\<sigma>\\<^sub>1, \\<sigma>\\<^sub>1')", "by(auto simp: WFF_def \\<sigma>\\<^sub>1_def \\<sigma>\\<^sub>1'_def\n              oid0_def oid1_def oid2_def oid3_def oid4_def oid5_def oid6_def oid7_def oid8_def\n              oid_of_\\<AA>_def oid_of_type\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_def oid_of_type\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_def\n              person1_def person2_def person3_def person4_def\n              person5_def person6_def person7_def person8_def person9_def)"], ["", "lemma [simp,code_unfold]: \"dom (heap \\<sigma>\\<^sub>1) = {oid0,oid1\\<^cancel>\\<open>,oid2\\<close>,oid3,oid4,oid5\\<^cancel>\\<open>,oid6,oid7\\<close>,oid8}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dom (heap \\<sigma>\\<^sub>1) = {oid0, oid1, oid3, oid4, oid5, oid8}", "by(auto simp: \\<sigma>\\<^sub>1_def)"], ["", "lemma [simp,code_unfold]: \"dom (heap \\<sigma>\\<^sub>1') = {oid0,oid1,oid2,oid3\\<^cancel>\\<open>,oid4\\<close>,oid5,oid6,oid7,oid8}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dom (heap \\<sigma>\\<^sub>1') =\n    {oid0, oid1, oid2, oid3, oid5, oid6, oid7, oid8}", "by(auto simp: \\<sigma>\\<^sub>1'_def)"], ["", "text_raw\\<open>\\isatagafp\\<close>"], ["", "definition \"X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1 :: Person \\<equiv> \\<lambda> _ .\\<lfloor>\\<lfloor> person1 \\<rfloor>\\<rfloor>\""], ["", "definition \"X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n2 :: Person \\<equiv> \\<lambda> _ .\\<lfloor>\\<lfloor> person2 \\<rfloor>\\<rfloor>\""], ["", "definition \"X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n3 :: Person \\<equiv> \\<lambda> _ .\\<lfloor>\\<lfloor> person3 \\<rfloor>\\<rfloor>\""], ["", "definition \"X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n4 :: Person \\<equiv> \\<lambda> _ .\\<lfloor>\\<lfloor> person4 \\<rfloor>\\<rfloor>\""], ["", "definition \"X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n5 :: Person \\<equiv> \\<lambda> _ .\\<lfloor>\\<lfloor> person5 \\<rfloor>\\<rfloor>\""], ["", "definition \"X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n6 :: Person \\<equiv> \\<lambda> _ .\\<lfloor>\\<lfloor> person6 \\<rfloor>\\<rfloor>\""], ["", "definition \"X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n7 :: OclAny \\<equiv> \\<lambda> _ .\\<lfloor>\\<lfloor> person7 \\<rfloor>\\<rfloor>\""], ["", "definition \"X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n8 :: OclAny \\<equiv> \\<lambda> _ .\\<lfloor>\\<lfloor> person8 \\<rfloor>\\<rfloor>\""], ["", "definition \"X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9 :: Person \\<equiv> \\<lambda> _ .\\<lfloor>\\<lfloor> person9 \\<rfloor>\\<rfloor>\""], ["", "lemma [code_unfold]: \"((x::Person) \\<doteq> y) = StrictRefEq\\<^sub>O\\<^sub>b\\<^sub>j\\<^sub>e\\<^sub>c\\<^sub>t x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<doteq> y) =\n    StrictRefEq\\<^sub>O\\<^sub>b\\<^sub>j\\<^sub>e\\<^sub>c\\<^sub>t x y", "by(simp only: StrictRefEq\\<^sub>O\\<^sub>b\\<^sub>j\\<^sub>e\\<^sub>c\\<^sub>t_\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n)"], ["", "lemma [code_unfold]: \"((x::OclAny) \\<doteq> y) = StrictRefEq\\<^sub>O\\<^sub>b\\<^sub>j\\<^sub>e\\<^sub>c\\<^sub>t x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<doteq> y) =\n    StrictRefEq\\<^sub>O\\<^sub>b\\<^sub>j\\<^sub>e\\<^sub>c\\<^sub>t x y", "by(simp only: StrictRefEq\\<^sub>O\\<^sub>b\\<^sub>j\\<^sub>e\\<^sub>c\\<^sub>t_\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y)"], ["", "lemmas [simp,code_unfold] =\n OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny\n OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person\n OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny\n OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person\n\n OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny\n OclIsTypeOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person\n OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny\n OclIsTypeOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person\n\n OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_OclAny\n OclIsKindOf\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person\n OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_OclAny\n OclIsKindOf\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_Person"], ["", "text_raw\\<open>\\endisatagafp\\<close>"], ["", "Assert \"\\<And>s\\<^sub>p\\<^sub>r\\<^sub>e     .   (s\\<^sub>p\\<^sub>r\\<^sub>e,\\<sigma>\\<^sub>1') \\<Turnstile>      (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1 .salary    <> \\<one>\\<zero>\\<zero>\\<zero>)\""], ["", "Assert \"\\<And>s\\<^sub>p\\<^sub>r\\<^sub>e     .   (s\\<^sub>p\\<^sub>r\\<^sub>e,\\<sigma>\\<^sub>1') \\<Turnstile>      (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1 .salary    \\<doteq> \\<one>\\<three>\\<zero>\\<zero>)\""], ["", "Assert \"\\<And>    s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t.   (\\<sigma>\\<^sub>1,s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t) \\<Turnstile>      (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1 .salary@pre     \\<doteq> \\<one>\\<zero>\\<zero>\\<zero>)\""], ["", "Assert \"\\<And>    s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t.   (\\<sigma>\\<^sub>1,s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t) \\<Turnstile>      (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1 .salary@pre     <> \\<one>\\<three>\\<zero>\\<zero>)\""], ["", "Assert \"\\<And>s\\<^sub>p\\<^sub>r\\<^sub>e     .   (s\\<^sub>p\\<^sub>r\\<^sub>e,\\<sigma>\\<^sub>1') \\<Turnstile>      (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1 .boss   <> X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1)\""], ["", "Assert \"\\<And>s\\<^sub>p\\<^sub>r\\<^sub>e     .   (s\\<^sub>p\\<^sub>r\\<^sub>e,\\<sigma>\\<^sub>1') \\<Turnstile>      (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1 .boss .salary   \\<doteq> \\<one>\\<eight>\\<zero>\\<zero>)\""], ["", "Assert \"\\<And>s\\<^sub>p\\<^sub>r\\<^sub>e     .   (s\\<^sub>p\\<^sub>r\\<^sub>e,\\<sigma>\\<^sub>1') \\<Turnstile>      (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1 .boss .boss  <> X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1)\""], ["", "Assert \"\\<And>s\\<^sub>p\\<^sub>r\\<^sub>e     .   (s\\<^sub>p\\<^sub>r\\<^sub>e,\\<sigma>\\<^sub>1') \\<Turnstile>      (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1 .boss .boss  \\<doteq> X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n2)\""], ["", "Assert \"               (\\<sigma>\\<^sub>1,\\<sigma>\\<^sub>1') \\<Turnstile>      (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1 .boss@pre .salary  \\<doteq> \\<one>\\<eight>\\<zero>\\<zero>)\""], ["", "Assert \"\\<And>    s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t.   (\\<sigma>\\<^sub>1,s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t) \\<Turnstile>      (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1 .boss@pre .salary@pre  \\<doteq> \\<one>\\<two>\\<zero>\\<zero>)\""], ["", "Assert \"\\<And>    s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t.   (\\<sigma>\\<^sub>1,s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t) \\<Turnstile>      (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1 .boss@pre .salary@pre  <> \\<one>\\<eight>\\<zero>\\<zero>)\""], ["", "Assert \"\\<And>    s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t.   (\\<sigma>\\<^sub>1,s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t) \\<Turnstile>      (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1 .boss@pre  \\<doteq> X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n2)\""], ["", "Assert \"               (\\<sigma>\\<^sub>1,\\<sigma>\\<^sub>1') \\<Turnstile>      (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1 .boss@pre .boss  \\<doteq> X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n2)\""], ["", "Assert \"\\<And>    s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t.   (\\<sigma>\\<^sub>1,s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t) \\<Turnstile>      (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1 .boss@pre .boss@pre  \\<doteq> null)\""], ["", "Assert \"\\<And>    s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t.   (\\<sigma>\\<^sub>1,s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t) \\<Turnstile> not(\\<upsilon>(X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1 .boss@pre .boss@pre .boss@pre))\""], ["", "lemma \"               (\\<sigma>\\<^sub>1,\\<sigma>\\<^sub>1') \\<Turnstile>      (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1 .oclIsMaintained())\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<sigma>\\<^sub>1, \\<sigma>\\<^sub>1')\n     \\<Turnstile> X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1.oclIsMaintained()", "by(simp add: OclValid_def OclIsMaintained_def\n             \\<sigma>\\<^sub>1_def \\<sigma>\\<^sub>1'_def\n             X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1_def person1_def\n             oid0_def oid1_def oid2_def oid3_def oid4_def oid5_def oid6_def\n             oid_of_option_def oid_of_type\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_def)"], ["", "lemma \"\\<And>s\\<^sub>p\\<^sub>r\\<^sub>e s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t.   (s\\<^sub>p\\<^sub>r\\<^sub>e,s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t) \\<Turnstile>    ((X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1 .oclAsType(OclAny) .oclAsType(Person)) \\<doteq> X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s\\<^sub>p\\<^sub>r\\<^sub>e s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t.\n       (s\\<^sub>p\\<^sub>r\\<^sub>e, s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t)\n        \\<Turnstile> X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1 .oclAsType(OclAny) .oclAsType(Person) \\<doteq>\n                     X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1", "by(rule up_down_cast_Person_OclAny_Person', simp add: X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1_def)"], ["", "Assert \"\\<And>s\\<^sub>p\\<^sub>r\\<^sub>e s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t.   (s\\<^sub>p\\<^sub>r\\<^sub>e,s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t) \\<Turnstile>     (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1 .oclIsTypeOf(Person))\""], ["", "Assert \"\\<And>s\\<^sub>p\\<^sub>r\\<^sub>e s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t.   (s\\<^sub>p\\<^sub>r\\<^sub>e,s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t) \\<Turnstile>  not(X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1 .oclIsTypeOf(OclAny))\""], ["", "Assert \"\\<And>s\\<^sub>p\\<^sub>r\\<^sub>e s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t.   (s\\<^sub>p\\<^sub>r\\<^sub>e,s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t) \\<Turnstile>     (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1 .oclIsKindOf(Person))\""], ["", "Assert \"\\<And>s\\<^sub>p\\<^sub>r\\<^sub>e s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t.   (s\\<^sub>p\\<^sub>r\\<^sub>e,s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t) \\<Turnstile>     (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1 .oclIsKindOf(OclAny))\""], ["", "Assert \"\\<And>s\\<^sub>p\\<^sub>r\\<^sub>e s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t.   (s\\<^sub>p\\<^sub>r\\<^sub>e,s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t) \\<Turnstile>  not(X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1 .oclAsType(OclAny) .oclIsTypeOf(OclAny))\""], ["", "Assert \"\\<And>s\\<^sub>p\\<^sub>r\\<^sub>e     .   (s\\<^sub>p\\<^sub>r\\<^sub>e,\\<sigma>\\<^sub>1') \\<Turnstile>      (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n2 .salary       \\<doteq> \\<one>\\<eight>\\<zero>\\<zero>)\""], ["", "Assert \"\\<And>    s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t.   (\\<sigma>\\<^sub>1,s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t) \\<Turnstile>      (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n2 .salary@pre   \\<doteq> \\<one>\\<two>\\<zero>\\<zero>)\""], ["", "Assert \"\\<And>s\\<^sub>p\\<^sub>r\\<^sub>e     .   (s\\<^sub>p\\<^sub>r\\<^sub>e,\\<sigma>\\<^sub>1') \\<Turnstile>      (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n2 .boss      \\<doteq> X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n2)\""], ["", "Assert \"               (\\<sigma>\\<^sub>1,\\<sigma>\\<^sub>1') \\<Turnstile>      (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n2 .boss .salary@pre      \\<doteq> \\<one>\\<two>\\<zero>\\<zero>)\""], ["", "Assert \"               (\\<sigma>\\<^sub>1,\\<sigma>\\<^sub>1') \\<Turnstile>      (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n2 .boss .boss@pre      \\<doteq> null)\""], ["", "Assert \"\\<And>    s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t.   (\\<sigma>\\<^sub>1,s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t) \\<Turnstile>      (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n2 .boss@pre  \\<doteq> null)\""], ["", "Assert \"\\<And>    s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t.   (\\<sigma>\\<^sub>1,s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t) \\<Turnstile>      (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n2 .boss@pre  <> X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n2)\""], ["", "Assert \"               (\\<sigma>\\<^sub>1,\\<sigma>\\<^sub>1') \\<Turnstile>      (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n2 .boss@pre  <> (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n2 .boss))\""], ["", "Assert \"\\<And>    s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t.   (\\<sigma>\\<^sub>1,s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t) \\<Turnstile> not(\\<upsilon>(X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n2 .boss@pre .boss))\""], ["", "Assert \"\\<And>    s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t.   (\\<sigma>\\<^sub>1,s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t) \\<Turnstile> not(\\<upsilon>(X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n2 .boss@pre .salary@pre))\""], ["", "lemma \"               (\\<sigma>\\<^sub>1,\\<sigma>\\<^sub>1') \\<Turnstile>      (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n2 .oclIsMaintained())\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<sigma>\\<^sub>1, \\<sigma>\\<^sub>1')\n     \\<Turnstile> X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n2.oclIsMaintained()", "by(simp add: OclValid_def OclIsMaintained_def \\<sigma>\\<^sub>1_def \\<sigma>\\<^sub>1'_def X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n2_def person2_def\n             oid0_def oid1_def oid2_def oid3_def oid4_def oid5_def oid6_def\n             oid_of_option_def oid_of_type\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_def)"], ["", "Assert \"\\<And>s\\<^sub>p\\<^sub>r\\<^sub>e     .   (s\\<^sub>p\\<^sub>r\\<^sub>e,\\<sigma>\\<^sub>1') \\<Turnstile>      (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n3 .salary       \\<doteq> null)\""], ["", "Assert \"\\<And>    s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t.   (\\<sigma>\\<^sub>1,s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t) \\<Turnstile> not(\\<upsilon>(X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n3 .salary@pre))\""], ["", "Assert \"\\<And>s\\<^sub>p\\<^sub>r\\<^sub>e     .   (s\\<^sub>p\\<^sub>r\\<^sub>e,\\<sigma>\\<^sub>1') \\<Turnstile>      (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n3 .boss       \\<doteq> null)\""], ["", "Assert \"\\<And>s\\<^sub>p\\<^sub>r\\<^sub>e     .   (s\\<^sub>p\\<^sub>r\\<^sub>e,\\<sigma>\\<^sub>1') \\<Turnstile> not(\\<upsilon>(X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n3 .boss .salary))\""], ["", "Assert \"\\<And>    s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t.   (\\<sigma>\\<^sub>1,s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t) \\<Turnstile> not(\\<upsilon>(X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n3 .boss@pre))\""], ["", "lemma \"               (\\<sigma>\\<^sub>1,\\<sigma>\\<^sub>1') \\<Turnstile>      (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n3 .oclIsNew())\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<sigma>\\<^sub>1, \\<sigma>\\<^sub>1')\n     \\<Turnstile> X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n3.oclIsNew()", "by(simp add: OclValid_def OclIsNew_def \\<sigma>\\<^sub>1_def \\<sigma>\\<^sub>1'_def X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n3_def person3_def\n             oid0_def oid1_def oid2_def oid3_def oid4_def oid5_def oid6_def oid8_def\n             oid_of_option_def oid_of_type\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_def)"], ["", "Assert \"\\<And>    s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t.   (\\<sigma>\\<^sub>1,s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t) \\<Turnstile>      (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n4 .boss@pre   \\<doteq> X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n5)\""], ["", "Assert \"               (\\<sigma>\\<^sub>1,\\<sigma>\\<^sub>1') \\<Turnstile> not(\\<upsilon>(X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n4 .boss@pre .salary))\""], ["", "Assert \"\\<And>    s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t.   (\\<sigma>\\<^sub>1,s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t) \\<Turnstile>      (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n4 .boss@pre .salary@pre   \\<doteq> \\<three>\\<five>\\<zero>\\<zero>)\""], ["", "lemma \"               (\\<sigma>\\<^sub>1,\\<sigma>\\<^sub>1') \\<Turnstile>      (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n4 .oclIsMaintained())\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<sigma>\\<^sub>1, \\<sigma>\\<^sub>1')\n     \\<Turnstile> X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n4.oclIsMaintained()", "by(simp add: OclValid_def OclIsMaintained_def \\<sigma>\\<^sub>1_def \\<sigma>\\<^sub>1'_def X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n4_def person4_def\n             oid0_def oid1_def oid2_def oid3_def oid4_def oid5_def oid6_def\n             oid_of_option_def oid_of_type\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_def)"], ["", "Assert \"\\<And>s\\<^sub>p\\<^sub>r\\<^sub>e     .   (s\\<^sub>p\\<^sub>r\\<^sub>e,\\<sigma>\\<^sub>1') \\<Turnstile> not(\\<upsilon>(X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n5 .salary))\""], ["", "Assert \"\\<And>    s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t.   (\\<sigma>\\<^sub>1,s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t) \\<Turnstile>      (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n5 .salary@pre   \\<doteq> \\<three>\\<five>\\<zero>\\<zero>)\""], ["", "Assert \"\\<And>s\\<^sub>p\\<^sub>r\\<^sub>e     .   (s\\<^sub>p\\<^sub>r\\<^sub>e,\\<sigma>\\<^sub>1') \\<Turnstile> not(\\<upsilon>(X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n5 .boss))\""], ["", "lemma \"               (\\<sigma>\\<^sub>1,\\<sigma>\\<^sub>1') \\<Turnstile>      (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n5 .oclIsDeleted())\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<sigma>\\<^sub>1, \\<sigma>\\<^sub>1')\n     \\<Turnstile> X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n5.oclIsDeleted()", "by(simp add: OclNot_def OclValid_def OclIsDeleted_def \\<sigma>\\<^sub>1_def \\<sigma>\\<^sub>1'_def X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n5_def person5_def\n             oid0_def oid1_def oid2_def oid3_def oid4_def oid5_def oid6_def oid7_def oid8_def\n             oid_of_option_def oid_of_type\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_def)"], ["", "(* (* access to an oclany object not yet supported *) Assert \"  (\\<sigma>\\<^sub>1,\\<sigma>\\<^sub>1') \\<Turnstile>     ((X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n6 .boss .salary)   \\<doteq> \\<three>\\<two>\\<zero>\\<zero> )\"*)"], ["", "Assert \"\\<And>s\\<^sub>p\\<^sub>r\\<^sub>e     .   (s\\<^sub>p\\<^sub>r\\<^sub>e,\\<sigma>\\<^sub>1') \\<Turnstile> not(\\<upsilon>(X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n6 .boss .salary@pre))\""], ["", "Assert \"\\<And>    s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t.   (\\<sigma>\\<^sub>1,s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t) \\<Turnstile>      (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n6 .boss@pre   \\<doteq> X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n4)\""], ["", "Assert \"               (\\<sigma>\\<^sub>1,\\<sigma>\\<^sub>1') \\<Turnstile>      (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n6 .boss@pre .salary   \\<doteq> \\<two>\\<nine>\\<zero>\\<zero>)\""], ["", "Assert \"\\<And>    s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t.   (\\<sigma>\\<^sub>1,s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t) \\<Turnstile>      (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n6 .boss@pre .salary@pre   \\<doteq> \\<two>\\<six>\\<zero>\\<zero>)\""], ["", "Assert \"\\<And>    s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t.   (\\<sigma>\\<^sub>1,s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t) \\<Turnstile>      (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n6 .boss@pre .boss@pre  \\<doteq> X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n5)\""], ["", "lemma \"               (\\<sigma>\\<^sub>1,\\<sigma>\\<^sub>1') \\<Turnstile>      (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n6 .oclIsMaintained())\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<sigma>\\<^sub>1, \\<sigma>\\<^sub>1')\n     \\<Turnstile> X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n6.oclIsMaintained()", "by(simp add: OclValid_def OclIsMaintained_def \\<sigma>\\<^sub>1_def \\<sigma>\\<^sub>1'_def X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n6_def person6_def\n             oid0_def oid1_def oid2_def oid3_def oid4_def oid5_def oid6_def\n             oid_of_option_def oid_of_type\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_def)"], ["", "(* (* access to an oclany object not yet supported *) Assert \"  (\\<sigma>\\<^sub>1,\\<sigma>\\<^sub>1') \\<Turnstile>     ((X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n7 .oclAsType(Person)   \\<doteq>  (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n6 .boss)))\" *)\n(* (* access to an oclany object not yet supported *) Assert \"  (\\<sigma>\\<^sub>1,\\<sigma>\\<^sub>1') \\<Turnstile>     ((X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n7 .oclAsType(Person) .boss)   \\<doteq> (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n7 .oclAsType(Person)) )\" *)\n(* (* access to an oclany object not yet supported *) Assert \"  (\\<sigma>\\<^sub>1,\\<sigma>\\<^sub>1') \\<Turnstile>     ((X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n7 .oclAsType(Person) .boss .salary)   \\<doteq> \\<three>\\<two>\\<zero>\\<zero> )\" *)"], ["", "Assert \"\\<And>s\\<^sub>p\\<^sub>r\\<^sub>e s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t.   (s\\<^sub>p\\<^sub>r\\<^sub>e,s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t) \\<Turnstile>     \\<upsilon>(X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n7 .oclAsType(Person))\""], ["", "Assert \"\\<And>    s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t.    (\\<sigma>\\<^sub>1,s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t) \\<Turnstile> not(\\<upsilon>(X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n7 .oclAsType(Person) .boss@pre))\""], ["", "lemma \"\\<And>s\\<^sub>p\\<^sub>r\\<^sub>e s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t.   (s\\<^sub>p\\<^sub>r\\<^sub>e,s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t) \\<Turnstile>     ((X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n7 .oclAsType(Person) .oclAsType(OclAny)\n                                                                   .oclAsType(Person))\n                                      \\<doteq> (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n7 .oclAsType(Person)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s\\<^sub>p\\<^sub>r\\<^sub>e s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t.\n       (s\\<^sub>p\\<^sub>r\\<^sub>e, s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t)\n        \\<Turnstile> X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n7 .oclAsType(Person) .oclAsType(OclAny) .oclAsType(Person) \\<doteq>\n                     X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n7 .oclAsType(Person)", "by(rule up_down_cast_Person_OclAny_Person', simp add: X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n7_def OclValid_def valid_def person7_def)"], ["", "lemma \"               (\\<sigma>\\<^sub>1,\\<sigma>\\<^sub>1') \\<Turnstile>       (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n7 .oclIsNew())\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<sigma>\\<^sub>1, \\<sigma>\\<^sub>1')\n     \\<Turnstile> X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n7.oclIsNew()", "by(simp add: OclValid_def OclIsNew_def  \\<sigma>\\<^sub>1_def \\<sigma>\\<^sub>1'_def  X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n7_def person7_def\n             oid0_def oid1_def oid2_def oid3_def oid4_def oid5_def oid6_def oid8_def\n             oid_of_option_def oid_of_type\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_def)"], ["", "Assert \"\\<And>s\\<^sub>p\\<^sub>r\\<^sub>e s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t.   (s\\<^sub>p\\<^sub>r\\<^sub>e,s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t) \\<Turnstile>      (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n8  <> X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n7)\""], ["", "Assert \"\\<And>s\\<^sub>p\\<^sub>r\\<^sub>e s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t.   (s\\<^sub>p\\<^sub>r\\<^sub>e,s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t) \\<Turnstile> not(\\<upsilon>(X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n8 .oclAsType(Person)))\""], ["", "Assert \"\\<And>s\\<^sub>p\\<^sub>r\\<^sub>e s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t.   (s\\<^sub>p\\<^sub>r\\<^sub>e,s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t) \\<Turnstile>      (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n8 .oclIsTypeOf(OclAny))\""], ["", "Assert \"\\<And>s\\<^sub>p\\<^sub>r\\<^sub>e s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t.   (s\\<^sub>p\\<^sub>r\\<^sub>e,s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t) \\<Turnstile>   not(X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n8 .oclIsTypeOf(Person))\""], ["", "Assert \"\\<And>s\\<^sub>p\\<^sub>r\\<^sub>e s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t.   (s\\<^sub>p\\<^sub>r\\<^sub>e,s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t) \\<Turnstile>   not(X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n8 .oclIsKindOf(Person))\""], ["", "Assert \"\\<And>s\\<^sub>p\\<^sub>r\\<^sub>e s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t.   (s\\<^sub>p\\<^sub>r\\<^sub>e,s\\<^sub>p\\<^sub>o\\<^sub>s\\<^sub>t) \\<Turnstile>      (X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n8 .oclIsKindOf(OclAny))\""], ["", "lemma \\<sigma>_modifiedonly: \"(\\<sigma>\\<^sub>1,\\<sigma>\\<^sub>1') \\<Turnstile> (Set{ X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1 .oclAsType(OclAny)\n                      , X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n2 .oclAsType(OclAny)\n                      \\<^cancel>\\<open>, X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n3 .oclAsType(OclAny)\\<close>\n                      , X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n4 .oclAsType(OclAny)\n                      \\<^cancel>\\<open>, X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n5 .oclAsType(OclAny)\\<close>\n                      , X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n6 .oclAsType(OclAny)\n                      \\<^cancel>\\<open>, X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n7 .oclAsType(OclAny)\\<close>\n                      \\<^cancel>\\<open>, X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n8 .oclAsType(OclAny)\\<close>\n                      \\<^cancel>\\<open>, X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9 .oclAsType(OclAny)\\<close>}->oclIsModifiedOnly())\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<sigma>\\<^sub>1, \\<sigma>\\<^sub>1')\n     \\<Turnstile> Set{X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1 .oclAsType(OclAny),\n                      X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n2 .oclAsType(OclAny),\n                      X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n4 .oclAsType(OclAny),\n                      X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n6 .oclAsType(OclAny)}->oclIsModifiedOnly()", "apply(simp add: OclIsModifiedOnly_def OclValid_def\n                 oid0_def oid1_def oid2_def oid3_def oid4_def oid5_def oid6_def oid7_def oid8_def\n                 X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1_def X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n2_def X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n3_def X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n4_def\n                 X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n5_def X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n6_def X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n7_def X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n8_def X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9_def\n                 person1_def person2_def person3_def person4_def\n                 person5_def person6_def person7_def person8_def person9_def\n                 image_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<forall>x\\<in>\\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n(Set{\\<lambda>\\<tau>.\n        \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                           5 \\<lfloor>(\\<lfloor>2500\\<rfloor>,\n \\<lfloor>6\\<rfloor>)\\<rfloor>\\<rfloor>\\<rfloor>,\n     \\<lambda>\\<tau>.\n        \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                           3 \\<lfloor>(\\<lfloor>2900\\<rfloor>,\n \\<bottom>)\\<rfloor>\\<rfloor>\\<rfloor>,\n     \\<lambda>\\<tau>.\n        \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                           (Suc 0)\n                           \\<lfloor>(\\<lfloor>1800\\<rfloor>,\n                                     \\<lfloor>Suc\n         0\\<rfloor>)\\<rfloor>\\<rfloor>\\<rfloor>,\n     \\<lambda>\\<tau>.\n        \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                           0 \\<lfloor>(\\<lfloor>1300\\<rfloor>,\n \\<lfloor>Suc 0\\<rfloor>)\\<rfloor>\\<rfloor>\\<rfloor>}\n  (\\<sigma>\\<^sub>1, \\<sigma>\\<^sub>1'))\\<rceil>\\<rceil>.\n         x \\<noteq> null) \\<longrightarrow>\n     (\\<forall>x\\<in>{0, Suc 0, 3, 5, 8} -\n                     {y. \\<exists>x\\<in>\\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n                   (Set{\\<lambda>\\<tau>.\n                           \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n        5 \\<lfloor>(\\<lfloor>2500\\<rfloor>,\n                    \\<lfloor>6\\<rfloor>)\\<rfloor>\\<rfloor>\\<rfloor>,\n                        \\<lambda>\\<tau>.\n                           \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n        3 \\<lfloor>(\\<lfloor>2900\\<rfloor>,\n                    \\<bottom>)\\<rfloor>\\<rfloor>\\<rfloor>,\n                        \\<lambda>\\<tau>.\n                           \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n        (Suc 0)\n        \\<lfloor>(\\<lfloor>1800\\<rfloor>,\n                  \\<lfloor>Suc 0\\<rfloor>)\\<rfloor>\\<rfloor>\\<rfloor>,\n                        \\<lambda>\\<tau>.\n                           \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n        0 \\<lfloor>(\\<lfloor>1300\\<rfloor>,\n                    \\<lfloor>Suc 0\\<rfloor>)\\<rfloor>\\<rfloor>\\<rfloor>}\n                     (\\<sigma>\\<^sub>1, \\<sigma>\\<^sub>1'))\\<rceil>\\<rceil>.\n                            y = oid_of x}.\n         heap \\<sigma>\\<^sub>1 x = heap \\<sigma>\\<^sub>1' x)) \\<and>\n    (null\n     \\<in> \\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n                            (Set{\\<lambda>\\<tau>.\n                                    \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                 5 \\<lfloor>(\\<lfloor>2500\\<rfloor>,\n                             \\<lfloor>6\\<rfloor>)\\<rfloor>\\<rfloor>\\<rfloor>,\n                                 \\<lambda>\\<tau>.\n                                    \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                 3 \\<lfloor>(\\<lfloor>2900\\<rfloor>,\n                             \\<bottom>)\\<rfloor>\\<rfloor>\\<rfloor>,\n                                 \\<lambda>\\<tau>.\n                                    \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                 (Suc 0)\n                 \\<lfloor>(\\<lfloor>1800\\<rfloor>,\n                           \\<lfloor>Suc 0\\<rfloor>)\\<rfloor>\\<rfloor>\\<rfloor>,\n                                 \\<lambda>\\<tau>.\n                                    \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                 0 \\<lfloor>(\\<lfloor>1300\\<rfloor>,\n                             \\<lfloor>Suc\n 0\\<rfloor>)\\<rfloor>\\<rfloor>\\<rfloor>}\n                              (\\<sigma>\\<^sub>1,\n                               \\<sigma>\\<^sub>1'))\\<rceil>\\<rceil> \\<longrightarrow>\n     invalid (\\<sigma>\\<^sub>1, \\<sigma>\\<^sub>1') =\n     \\<lfloor>\\<lfloor>True\\<rfloor>\\<rfloor>)", "apply(simp add: OclIncluding_rep_set mtSet_rep_set null_option_def bot_option_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>{0, Suc 0, 3, 5, 8} -\n                   {y. y =\n                       oid_of\n                        \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n     5 \\<lfloor>(\\<lfloor>2500\\<rfloor>,\n                 \\<lfloor>6\\<rfloor>)\\<rfloor>\\<rfloor>\\<rfloor> \\<or>\n                       y =\n                       oid_of\n                        \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n     3 \\<lfloor>(\\<lfloor>2900\\<rfloor>,\n                 \\<bottom>)\\<rfloor>\\<rfloor>\\<rfloor> \\<or>\n                       y =\n                       oid_of\n                        \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n     (Suc 0)\n     \\<lfloor>(\\<lfloor>1800\\<rfloor>,\n               \\<lfloor>Suc 0\\<rfloor>)\\<rfloor>\\<rfloor>\\<rfloor> \\<or>\n                       y =\n                       oid_of\n                        \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n     0 \\<lfloor>(\\<lfloor>1300\\<rfloor>,\n                 \\<lfloor>Suc 0\\<rfloor>)\\<rfloor>\\<rfloor>\\<rfloor>}.\n       heap \\<sigma>\\<^sub>1 x = heap \\<sigma>\\<^sub>1' x", "apply(simp add: oid_of_option_def oid_of_type\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_def, clarsimp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. heap \\<sigma>\\<^sub>1 8 \\<noteq>\n    heap \\<sigma>\\<^sub>1' 8 \\<Longrightarrow>\n    False", "apply(simp add: \\<sigma>\\<^sub>1_def \\<sigma>\\<^sub>1'_def\n                 oid0_def oid1_def oid2_def oid3_def oid4_def oid5_def oid6_def oid7_def oid8_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma \"(\\<sigma>\\<^sub>1,\\<sigma>\\<^sub>1') \\<Turnstile> ((X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9 @pre (\\<lambda>x. \\<lfloor>OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA> x\\<rfloor>))  \\<triangleq> X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<sigma>\\<^sub>1, \\<sigma>\\<^sub>1')\n     \\<Turnstile> X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9@pre\\<lambda>x.\n                                     \\<lfloor>OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA>\n         x\\<rfloor> \\<triangleq>\n                  X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9", "by(simp add: OclSelf_at_pre_def \\<sigma>\\<^sub>1_def oid_of_option_def oid_of_type\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_def\n             X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9_def person9_def oid8_def OclValid_def StrongEq_def OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA>_def)"], ["", "lemma \"(\\<sigma>\\<^sub>1,\\<sigma>\\<^sub>1') \\<Turnstile> ((X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9 @post (\\<lambda>x. \\<lfloor>OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA> x\\<rfloor>))  \\<triangleq> X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<sigma>\\<^sub>1, \\<sigma>\\<^sub>1')\n     \\<Turnstile> X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9@post\\<lambda>x.\n\\<lfloor>OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA>\n          x\\<rfloor> \\<triangleq>\n                  X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9", "by(simp add: OclSelf_at_post_def \\<sigma>\\<^sub>1'_def oid_of_option_def oid_of_type\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_def\n             X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9_def person9_def oid8_def OclValid_def StrongEq_def OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA>_def)"], ["", "lemma \"(\\<sigma>\\<^sub>1,\\<sigma>\\<^sub>1') \\<Turnstile> (((X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9 .oclAsType(OclAny)) @pre (\\<lambda>x. \\<lfloor>OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA> x\\<rfloor>)) \\<triangleq>\n                   ((X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9 .oclAsType(OclAny)) @post (\\<lambda>x. \\<lfloor>OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA> x\\<rfloor>)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<sigma>\\<^sub>1, \\<sigma>\\<^sub>1')\n     \\<Turnstile> X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9 .oclAsType(OclAny)@pre\\<lambda>x.\n                  \\<lfloor>OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA>\n                            x\\<rfloor> \\<triangleq>\n                  X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9 .oclAsType(OclAny)@post\\<lambda>x.\n                   \\<lfloor>OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA>\n                             x\\<rfloor>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<sigma>\\<^sub>1, \\<sigma>\\<^sub>1')\n     \\<Turnstile> X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9 .oclAsType(OclAny)@pre\\<lambda>x.\n                  \\<lfloor>OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA>\n                            x\\<rfloor> \\<triangleq>\n                  X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9 .oclAsType(OclAny)@post\\<lambda>x.\n                   \\<lfloor>OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA>\n                             x\\<rfloor>", "have including4 : \"\\<And>a b c d \\<tau>.\n        Set{\\<lambda>\\<tau>. \\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>, \\<lambda>\\<tau>. \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>, \\<lambda>\\<tau>. \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>, \\<lambda>\\<tau>. \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>} \\<tau> = Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e \\<lfloor>\\<lfloor> {\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>, \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>, \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>, \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>} \\<rfloor>\\<rfloor>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b c d \\<tau>.\n       Set{\\<lambda>\\<tau>. \\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n           \\<lambda>\\<tau>. \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n           \\<lambda>\\<tau>. \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n           \\<lambda>\\<tau>. \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>}\n        \\<tau> =\n       Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n        \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor>", "apply(subst abs_rep_simp'[symmetric], simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b c d \\<tau>.\n       Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n        \\<lfloor>\\<lfloor>\\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n     (Set{\\<lambda>\\<tau>. \\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n          \\<lambda>\\<tau>. \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n          \\<lambda>\\<tau>. \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n          \\<lambda>\\<tau>. \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>}\n       \\<tau>)\\<rceil>\\<rceil>\\<rfloor>\\<rfloor> =\n       Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n        \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor>", "apply(simp add: OclIncluding_rep_set mtSet_rep_set)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b c d.\n       Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n        \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor> =\n       Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n        \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor>", "by(rule arg_cong[of _ _ \"\\<lambda>x. (Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e(\\<lfloor>\\<lfloor> x \\<rfloor>\\<rfloor>))\"], auto)"], ["proof (state)\nthis:\n  Set{\\<lambda>\\<tau>. \\<lfloor>\\<lfloor>?a\\<rfloor>\\<rfloor>,\n      \\<lambda>\\<tau>. \\<lfloor>\\<lfloor>?b\\<rfloor>\\<rfloor>,\n      \\<lambda>\\<tau>. \\<lfloor>\\<lfloor>?c\\<rfloor>\\<rfloor>,\n      \\<lambda>\\<tau>. \\<lfloor>\\<lfloor>?d\\<rfloor>\\<rfloor>}\n   ?\\<tau> =\n  Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n   \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>?a\\<rfloor>\\<rfloor>,\n                      \\<lfloor>\\<lfloor>?b\\<rfloor>\\<rfloor>,\n                      \\<lfloor>\\<lfloor>?c\\<rfloor>\\<rfloor>,\n                      \\<lfloor>\\<lfloor>?d\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor>\n\ngoal (1 subgoal):\n 1. (\\<sigma>\\<^sub>1, \\<sigma>\\<^sub>1')\n     \\<Turnstile> X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9 .oclAsType(OclAny)@pre\\<lambda>x.\n                  \\<lfloor>OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA>\n                            x\\<rfloor> \\<triangleq>\n                  X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9 .oclAsType(OclAny)@post\\<lambda>x.\n                   \\<lfloor>OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA>\n                             x\\<rfloor>", "have excluding1: \"\\<And>S a b c d e \\<tau>.\n                   (\\<lambda>_. Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e \\<lfloor>\\<lfloor> {\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>, \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>, \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>, \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>} \\<rfloor>\\<rfloor>)->excluding\\<^sub>S\\<^sub>e\\<^sub>t(\\<lambda>\\<tau>. \\<lfloor>\\<lfloor>e\\<rfloor>\\<rfloor>) \\<tau> =\n                   Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e \\<lfloor>\\<lfloor> {\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>, \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>, \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>, \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>} - {\\<lfloor>\\<lfloor>e\\<rfloor>\\<rfloor>} \\<rfloor>\\<rfloor>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>S a b c d e \\<tau>.\n       \\<lambda>_.\n          Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n           \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                              \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                              \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                              \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor>->excluding\\<^sub>S\\<^sub>e\\<^sub>t(\\<lambda>\\<tau>.\n           \\<lfloor>\\<lfloor>e\\<rfloor>\\<rfloor>)\n        \\<tau> =\n       Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n        \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>} -\n                          {\\<lfloor>\\<lfloor>e\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor>", "apply(simp add: UML_Set.OclExcluding_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b c d e \\<tau>.\n       ((\\<delta> (\\<lambda>_.\n                      Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n                       \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n    \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n    \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n    \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor>))\n         \\<tau> =\n        true \\<tau> \\<longrightarrow>\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<lfloor>\\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n      (Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n        \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor>)\\<rceil>\\<rceil> -\n                           {\\<lfloor>\\<lfloor>e\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor> =\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>} -\n                           {\\<lfloor>\\<lfloor>e\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor>) \\<and>\n       ((\\<delta> (\\<lambda>_.\n                      Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n                       \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n    \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n    \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n    \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor>))\n         \\<tau> \\<noteq>\n        true \\<tau> \\<longrightarrow>\n        \\<bottom> =\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>} -\n                           {\\<lfloor>\\<lfloor>e\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor>)", "apply(simp add: defined_def OclValid_def false_def true_def\n                  bot_fun_def bot_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e_def null_fun_def null_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b c d e.\n       (Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor> =\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e \\<bottom> \\<longrightarrow>\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e \\<bottom> =\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>} -\n                           {\\<lfloor>\\<lfloor>e\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor>) \\<and>\n       (Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor> =\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<bottom>\\<rfloor> \\<longrightarrow>\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e \\<bottom> =\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>} -\n                           {\\<lfloor>\\<lfloor>e\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor>) \\<and>\n       (Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor> \\<noteq>\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e \\<bottom> \\<and>\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor> \\<noteq>\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<bottom>\\<rfloor> \\<longrightarrow>\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<lfloor>\\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n      (Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n        \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor>)\\<rceil>\\<rceil> -\n                           {\\<lfloor>\\<lfloor>e\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor> =\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>} -\n                           {\\<lfloor>\\<lfloor>e\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor>)", "apply(rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b c d e.\n       Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n        \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor> =\n       Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e \\<bottom> \\<longrightarrow>\n       Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e \\<bottom> =\n       Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n        \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>} -\n                          {\\<lfloor>\\<lfloor>e\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor>\n 2. \\<And>a b c d e.\n       (Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor> =\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<bottom>\\<rfloor> \\<longrightarrow>\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e \\<bottom> =\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>} -\n                           {\\<lfloor>\\<lfloor>e\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor>) \\<and>\n       (Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor> \\<noteq>\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e \\<bottom> \\<and>\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor> \\<noteq>\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<bottom>\\<rfloor> \\<longrightarrow>\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<lfloor>\\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n      (Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n        \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor>)\\<rceil>\\<rceil> -\n                           {\\<lfloor>\\<lfloor>e\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor> =\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>} -\n                           {\\<lfloor>\\<lfloor>e\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor>)", "apply(rule impI, subst (asm) Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e_inject)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b c d e.\n       \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                          \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                          \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                          \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor>\n       \\<in> {X. X = \\<bottom> \\<or>\n                 X = null \\<or>\n                 (\\<forall>x\\<in>\\<lceil>\\<lceil>X\\<rceil>\\<rceil>.\n                     x \\<noteq> \\<bottom>)}\n 2. \\<And>a b c d e.\n       \\<bottom>\n       \\<in> {X. X = \\<bottom> \\<or>\n                 X = null \\<or>\n                 (\\<forall>x\\<in>\\<lceil>\\<lceil>X\\<rceil>\\<rceil>.\n                     x \\<noteq> \\<bottom>)}\n 3. \\<And>a b c d e.\n       \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                          \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                          \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                          \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor> =\n       \\<bottom> \\<Longrightarrow>\n       Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e \\<bottom> =\n       Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n        \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>} -\n                          {\\<lfloor>\\<lfloor>e\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor>\n 4. \\<And>a b c d e.\n       (Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor> =\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<bottom>\\<rfloor> \\<longrightarrow>\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e \\<bottom> =\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>} -\n                           {\\<lfloor>\\<lfloor>e\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor>) \\<and>\n       (Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor> \\<noteq>\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e \\<bottom> \\<and>\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor> \\<noteq>\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<bottom>\\<rfloor> \\<longrightarrow>\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<lfloor>\\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n      (Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n        \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor>)\\<rceil>\\<rceil> -\n                           {\\<lfloor>\\<lfloor>e\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor> =\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>} -\n                           {\\<lfloor>\\<lfloor>e\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor>)", "apply( simp add: bot_option_def)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b c d e.\n       (Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor> =\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<bottom>\\<rfloor> \\<longrightarrow>\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e \\<bottom> =\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>} -\n                           {\\<lfloor>\\<lfloor>e\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor>) \\<and>\n       (Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor> \\<noteq>\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e \\<bottom> \\<and>\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor> \\<noteq>\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<bottom>\\<rfloor> \\<longrightarrow>\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<lfloor>\\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n      (Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n        \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor>)\\<rceil>\\<rceil> -\n                           {\\<lfloor>\\<lfloor>e\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor> =\n        Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n         \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                            \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>} -\n                           {\\<lfloor>\\<lfloor>e\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor>)", "apply(rule conjI)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b c d e.\n       Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n        \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor> =\n       Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n        \\<lfloor>\\<bottom>\\<rfloor> \\<longrightarrow>\n       Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e \\<bottom> =\n       Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n        \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>} -\n                          {\\<lfloor>\\<lfloor>e\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor>\n 2. \\<And>a b c d e.\n       Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n        \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor> \\<noteq>\n       Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e \\<bottom> \\<and>\n       Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n        \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor> \\<noteq>\n       Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n        \\<lfloor>\\<bottom>\\<rfloor> \\<longrightarrow>\n       Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n        \\<lfloor>\\<lfloor>\\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n     (Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n       \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                          \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                          \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                          \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor>)\\<rceil>\\<rceil> -\n                          {\\<lfloor>\\<lfloor>e\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor> =\n       Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n        \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>} -\n                          {\\<lfloor>\\<lfloor>e\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor>", "apply(rule impI, subst (asm) Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e_inject)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>a b c d e.\n       \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                          \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                          \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                          \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor>\n       \\<in> {X. X = \\<bottom> \\<or>\n                 X = null \\<or>\n                 (\\<forall>x\\<in>\\<lceil>\\<lceil>X\\<rceil>\\<rceil>.\n                     x \\<noteq> \\<bottom>)}\n 2. \\<And>a b c d e.\n       \\<lfloor>\\<bottom>\\<rfloor>\n       \\<in> {X. X = \\<bottom> \\<or>\n                 X = null \\<or>\n                 (\\<forall>x\\<in>\\<lceil>\\<lceil>X\\<rceil>\\<rceil>.\n                     x \\<noteq> \\<bottom>)}\n 3. \\<And>a b c d e.\n       \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                          \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                          \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                          \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor> =\n       \\<lfloor>\\<bottom>\\<rfloor> \\<Longrightarrow>\n       Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e \\<bottom> =\n       Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n        \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>} -\n                          {\\<lfloor>\\<lfloor>e\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor>\n 4. \\<And>a b c d e.\n       Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n        \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor> \\<noteq>\n       Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e \\<bottom> \\<and>\n       Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n        \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor> \\<noteq>\n       Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n        \\<lfloor>\\<bottom>\\<rfloor> \\<longrightarrow>\n       Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n        \\<lfloor>\\<lfloor>\\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n     (Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n       \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                          \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                          \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                          \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor>)\\<rceil>\\<rceil> -\n                          {\\<lfloor>\\<lfloor>e\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor> =\n       Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n        \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>} -\n                          {\\<lfloor>\\<lfloor>e\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor>", "apply( simp add: bot_option_def null_option_def)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b c d e.\n       Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n        \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor> \\<noteq>\n       Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e \\<bottom> \\<and>\n       Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n        \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor> \\<noteq>\n       Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n        \\<lfloor>\\<bottom>\\<rfloor> \\<longrightarrow>\n       Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n        \\<lfloor>\\<lfloor>\\<lceil>\\<lceil>Rep_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n     (Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n       \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                          \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                          \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                          \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor>)\\<rceil>\\<rceil> -\n                          {\\<lfloor>\\<lfloor>e\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor> =\n       Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n        \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>a\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>b\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>c\\<rfloor>\\<rfloor>,\n                           \\<lfloor>\\<lfloor>d\\<rfloor>\\<rfloor>} -\n                          {\\<lfloor>\\<lfloor>e\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor>", "apply(subst Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e_inverse, simp add: bot_option_def, simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  \\<lambda>_.\n     Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n      \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>?a1\\<rfloor>\\<rfloor>,\n                         \\<lfloor>\\<lfloor>?b1\\<rfloor>\\<rfloor>,\n                         \\<lfloor>\\<lfloor>?c1\\<rfloor>\\<rfloor>,\n                         \\<lfloor>\\<lfloor>?d1\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor>->excluding\\<^sub>S\\<^sub>e\\<^sub>t(\\<lambda>\\<tau>.\n        \\<lfloor>\\<lfloor>?e1\\<rfloor>\\<rfloor>)\n   ?\\<tau>1 =\n  Abs_Set\\<^sub>b\\<^sub>a\\<^sub>s\\<^sub>e\n   \\<lfloor>\\<lfloor>{\\<lfloor>\\<lfloor>?a1\\<rfloor>\\<rfloor>,\n                      \\<lfloor>\\<lfloor>?b1\\<rfloor>\\<rfloor>,\n                      \\<lfloor>\\<lfloor>?c1\\<rfloor>\\<rfloor>,\n                      \\<lfloor>\\<lfloor>?d1\\<rfloor>\\<rfloor>} -\n                     {\\<lfloor>\\<lfloor>?e1\\<rfloor>\\<rfloor>}\\<rfloor>\\<rfloor>\n\ngoal (1 subgoal):\n 1. (\\<sigma>\\<^sub>1, \\<sigma>\\<^sub>1')\n     \\<Turnstile> X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9 .oclAsType(OclAny)@pre\\<lambda>x.\n                  \\<lfloor>OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA>\n                            x\\<rfloor> \\<triangleq>\n                  X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9 .oclAsType(OclAny)@post\\<lambda>x.\n                   \\<lfloor>OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA>\n                             x\\<rfloor>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<sigma>\\<^sub>1, \\<sigma>\\<^sub>1')\n     \\<Turnstile> X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9 .oclAsType(OclAny)@pre\\<lambda>x.\n                  \\<lfloor>OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA>\n                            x\\<rfloor> \\<triangleq>\n                  X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9 .oclAsType(OclAny)@post\\<lambda>x.\n                   \\<lfloor>OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA>\n                             x\\<rfloor>", "apply(rule framing[where X = \"Set{ X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1 .oclAsType(OclAny)\n                       , X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n2 .oclAsType(OclAny)\n                       \\<^cancel>\\<open>, X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n3 .oclAsType(OclAny)\\<close>\n                       , X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n4 .oclAsType(OclAny)\n                       \\<^cancel>\\<open>, X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n5 .oclAsType(OclAny)\\<close>\n                       , X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n6 .oclAsType(OclAny)\n                       \\<^cancel>\\<open>, X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n7 .oclAsType(OclAny)\\<close>\n                       \\<^cancel>\\<open>, X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n8 .oclAsType(OclAny)\\<close>\n                       \\<^cancel>\\<open>, X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9 .oclAsType(OclAny)\\<close>}\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. (\\<sigma>\\<^sub>1, \\<sigma>\\<^sub>1')\n     \\<Turnstile> Set{X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1 .oclAsType(OclAny),\n                      X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n2 .oclAsType(OclAny),\n                      X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n4 .oclAsType(OclAny),\n                      X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n6 .oclAsType(OclAny)}->excluding\\<^sub>S\\<^sub>e\\<^sub>t(X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9 .oclAsType(OclAny))->oclIsModifiedOnly()\n 2. (\\<sigma>\\<^sub>1, \\<sigma>\\<^sub>1')\n     \\<Turnstile> Set{X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1 .oclAsType(OclAny),\n                      X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n2 .oclAsType(OclAny),\n                      X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n4 .oclAsType(OclAny),\n                      X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n6 .oclAsType(OclAny)}->forAll\\<^sub>S\\<^sub>e\\<^sub>t(a|not\n              (StrictRefEq\\<^sub>O\\<^sub>b\\<^sub>j\\<^sub>e\\<^sub>c\\<^sub>t\n                X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9 .oclAsType(OclAny)\n                a))", "apply(cut_tac \\<sigma>_modifiedonly)"], ["proof (prove)\ngoal (2 subgoals):\n 1. (\\<sigma>\\<^sub>1, \\<sigma>\\<^sub>1')\n     \\<Turnstile> Set{X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1 .oclAsType(OclAny),\n                      X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n2 .oclAsType(OclAny),\n                      X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n4 .oclAsType(OclAny),\n                      X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n6 .oclAsType(OclAny)}->oclIsModifiedOnly() \\<Longrightarrow>\n    (\\<sigma>\\<^sub>1, \\<sigma>\\<^sub>1')\n     \\<Turnstile> Set{X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1 .oclAsType(OclAny),\n                      X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n2 .oclAsType(OclAny),\n                      X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n4 .oclAsType(OclAny),\n                      X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n6 .oclAsType(OclAny)}->excluding\\<^sub>S\\<^sub>e\\<^sub>t(X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9 .oclAsType(OclAny))->oclIsModifiedOnly()\n 2. (\\<sigma>\\<^sub>1, \\<sigma>\\<^sub>1')\n     \\<Turnstile> Set{X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1 .oclAsType(OclAny),\n                      X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n2 .oclAsType(OclAny),\n                      X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n4 .oclAsType(OclAny),\n                      X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n6 .oclAsType(OclAny)}->forAll\\<^sub>S\\<^sub>e\\<^sub>t(a|not\n              (StrictRefEq\\<^sub>O\\<^sub>b\\<^sub>j\\<^sub>e\\<^sub>c\\<^sub>t\n                X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9 .oclAsType(OclAny)\n                a))", "apply(simp only: OclValid_def\n                    X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1_def X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n2_def X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n3_def X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n4_def\n                    X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n5_def X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n6_def X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n7_def X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n8_def X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9_def\n                    person1_def person2_def person3_def person4_def\n                    person5_def person6_def person7_def person8_def person9_def\n                    OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_Person)"], ["proof (prove)\ngoal (2 subgoals):\n 1. Set{\\<lambda>\\<tau>.\n           case \\<lfloor>\\<lfloor>mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                                   oid0 \\<lfloor>1300\\<rfloor>\n                                   \\<lfloor>oid1\\<rfloor>\\<rfloor>\\<rfloor> of\n           \\<bottom> \\<Rightarrow> invalid \\<tau>\n           | \\<lfloor>\\<bottom>\\<rfloor> \\<Rightarrow> null \\<tau>\n           | \\<lfloor>\\<lfloor>mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                                oid a b\\<rfloor>\\<rfloor> \\<Rightarrow>\n               \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                                  oid\n                                  \\<lfloor>(a,\n      b)\\<rfloor>\\<rfloor>\\<rfloor>,\n        \\<lambda>\\<tau>.\n           case \\<lfloor>\\<lfloor>mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                                   oid1 \\<lfloor>1800\\<rfloor>\n                                   \\<lfloor>oid1\\<rfloor>\\<rfloor>\\<rfloor> of\n           \\<bottom> \\<Rightarrow> invalid \\<tau>\n           | \\<lfloor>\\<bottom>\\<rfloor> \\<Rightarrow> null \\<tau>\n           | \\<lfloor>\\<lfloor>mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                                oid a b\\<rfloor>\\<rfloor> \\<Rightarrow>\n               \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                                  oid\n                                  \\<lfloor>(a,\n      b)\\<rfloor>\\<rfloor>\\<rfloor>,\n        \\<lambda>\\<tau>.\n           case \\<lfloor>\\<lfloor>mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                                   oid3 \\<lfloor>2900\\<rfloor>\n                                   \\<bottom>\\<rfloor>\\<rfloor> of\n           \\<bottom> \\<Rightarrow> invalid \\<tau>\n           | \\<lfloor>\\<bottom>\\<rfloor> \\<Rightarrow> null \\<tau>\n           | \\<lfloor>\\<lfloor>mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                                oid a b\\<rfloor>\\<rfloor> \\<Rightarrow>\n               \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                                  oid\n                                  \\<lfloor>(a,\n      b)\\<rfloor>\\<rfloor>\\<rfloor>,\n        \\<lambda>\\<tau>.\n           case \\<lfloor>\\<lfloor>mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                                   oid5 \\<lfloor>2500\\<rfloor>\n                                   \\<lfloor>oid6\\<rfloor>\\<rfloor>\\<rfloor> of\n           \\<bottom> \\<Rightarrow> invalid \\<tau>\n           | \\<lfloor>\\<bottom>\\<rfloor> \\<Rightarrow> null \\<tau>\n           | \\<lfloor>\\<lfloor>mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                                oid a b\\<rfloor>\\<rfloor> \\<Rightarrow>\n               \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                                  oid\n                                  \\<lfloor>(a,\n      b)\\<rfloor>\\<rfloor>\\<rfloor>}->oclIsModifiedOnly()\n     (\\<sigma>\\<^sub>1, \\<sigma>\\<^sub>1') =\n    true (\\<sigma>\\<^sub>1, \\<sigma>\\<^sub>1') \\<Longrightarrow>\n    Set{\\<lambda>\\<tau>.\n           case \\<lfloor>\\<lfloor>mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                                   oid0 \\<lfloor>1300\\<rfloor>\n                                   \\<lfloor>oid1\\<rfloor>\\<rfloor>\\<rfloor> of\n           \\<bottom> \\<Rightarrow> invalid \\<tau>\n           | \\<lfloor>\\<bottom>\\<rfloor> \\<Rightarrow> null \\<tau>\n           | \\<lfloor>\\<lfloor>mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                                oid a b\\<rfloor>\\<rfloor> \\<Rightarrow>\n               \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                                  oid\n                                  \\<lfloor>(a,\n      b)\\<rfloor>\\<rfloor>\\<rfloor>,\n        \\<lambda>\\<tau>.\n           case \\<lfloor>\\<lfloor>mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                                   oid1 \\<lfloor>1800\\<rfloor>\n                                   \\<lfloor>oid1\\<rfloor>\\<rfloor>\\<rfloor> of\n           \\<bottom> \\<Rightarrow> invalid \\<tau>\n           | \\<lfloor>\\<bottom>\\<rfloor> \\<Rightarrow> null \\<tau>\n           | \\<lfloor>\\<lfloor>mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                                oid a b\\<rfloor>\\<rfloor> \\<Rightarrow>\n               \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                                  oid\n                                  \\<lfloor>(a,\n      b)\\<rfloor>\\<rfloor>\\<rfloor>,\n        \\<lambda>\\<tau>.\n           case \\<lfloor>\\<lfloor>mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                                   oid3 \\<lfloor>2900\\<rfloor>\n                                   \\<bottom>\\<rfloor>\\<rfloor> of\n           \\<bottom> \\<Rightarrow> invalid \\<tau>\n           | \\<lfloor>\\<bottom>\\<rfloor> \\<Rightarrow> null \\<tau>\n           | \\<lfloor>\\<lfloor>mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                                oid a b\\<rfloor>\\<rfloor> \\<Rightarrow>\n               \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                                  oid\n                                  \\<lfloor>(a,\n      b)\\<rfloor>\\<rfloor>\\<rfloor>,\n        \\<lambda>\\<tau>.\n           case \\<lfloor>\\<lfloor>mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                                   oid5 \\<lfloor>2500\\<rfloor>\n                                   \\<lfloor>oid6\\<rfloor>\\<rfloor>\\<rfloor> of\n           \\<bottom> \\<Rightarrow> invalid \\<tau>\n           | \\<lfloor>\\<bottom>\\<rfloor> \\<Rightarrow> null \\<tau>\n           | \\<lfloor>\\<lfloor>mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                                oid a b\\<rfloor>\\<rfloor> \\<Rightarrow>\n               \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                                  oid\n                                  \\<lfloor>(a,\n      b)\\<rfloor>\\<rfloor>\\<rfloor>}->excluding\\<^sub>S\\<^sub>e\\<^sub>t(\\<lambda>\\<tau>.\n                                     case \\<lfloor>\\<lfloor>mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       oid8 \\<lfloor>0\\<rfloor>\n                       \\<bottom>\\<rfloor>\\<rfloor> of\n                                     \\<bottom> \\<Rightarrow> invalid \\<tau>\n                                     | \\<lfloor>\\<bottom>\\<rfloor> \\<Rightarrow>\n   null \\<tau>\n                                     | \\<lfloor>\\<lfloor>mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                    oid a b\\<rfloor>\\<rfloor> \\<Rightarrow>\n   \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y oid\n                      \\<lfloor>(a, b)\\<rfloor>\\<rfloor>\\<rfloor>)->oclIsModifiedOnly()\n     (\\<sigma>\\<^sub>1, \\<sigma>\\<^sub>1') =\n    true (\\<sigma>\\<^sub>1, \\<sigma>\\<^sub>1')\n 2. (\\<sigma>\\<^sub>1, \\<sigma>\\<^sub>1')\n     \\<Turnstile> Set{X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1 .oclAsType(OclAny),\n                      X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n2 .oclAsType(OclAny),\n                      X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n4 .oclAsType(OclAny),\n                      X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n6 .oclAsType(OclAny)}->forAll\\<^sub>S\\<^sub>e\\<^sub>t(a|not\n              (StrictRefEq\\<^sub>O\\<^sub>b\\<^sub>j\\<^sub>e\\<^sub>c\\<^sub>t\n                X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9 .oclAsType(OclAny)\n                a))", "apply(subst cp_OclIsModifiedOnly, subst UML_Set.OclExcluding.cp0,\n     subst (asm) cp_OclIsModifiedOnly, simp add: including4 excluding1)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<sigma>\\<^sub>1, \\<sigma>\\<^sub>1')\n     \\<Turnstile> Set{X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1 .oclAsType(OclAny),\n                      X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n2 .oclAsType(OclAny),\n                      X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n4 .oclAsType(OclAny),\n                      X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n6 .oclAsType(OclAny)}->forAll\\<^sub>S\\<^sub>e\\<^sub>t(a|not\n              (StrictRefEq\\<^sub>O\\<^sub>b\\<^sub>j\\<^sub>e\\<^sub>c\\<^sub>t\n                X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9 .oclAsType(OclAny)\n                a))", "apply(simp only: X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1_def X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n2_def X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n3_def X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n4_def\n                   X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n5_def X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n6_def X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n7_def X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n8_def X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9_def\n                   person1_def person2_def person3_def person4_def\n                   person5_def person6_def person7_def person8_def person9_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<sigma>\\<^sub>1, \\<sigma>\\<^sub>1')\n     \\<Turnstile> Set{\\<lambda>_.\n                         \\<lfloor>\\<lfloor>mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n      oid0 \\<lfloor>1300\\<rfloor>\n      \\<lfloor>oid1\\<rfloor>\\<rfloor>\\<rfloor> .oclAsType(OclAny),\n                      \\<lambda>_.\n                         \\<lfloor>\\<lfloor>mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n      oid1 \\<lfloor>1800\\<rfloor>\n      \\<lfloor>oid1\\<rfloor>\\<rfloor>\\<rfloor> .oclAsType(OclAny),\n                      \\<lambda>_.\n                         \\<lfloor>\\<lfloor>mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n      oid3 \\<lfloor>2900\\<rfloor>\n      \\<bottom>\\<rfloor>\\<rfloor> .oclAsType(OclAny),\n                      \\<lambda>_.\n                         \\<lfloor>\\<lfloor>mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n      oid5 \\<lfloor>2500\\<rfloor>\n      \\<lfloor>oid6\\<rfloor>\\<rfloor>\\<rfloor> .oclAsType(OclAny)}->forAll\\<^sub>S\\<^sub>e\\<^sub>t(a|not\n                          (StrictRefEq\\<^sub>O\\<^sub>b\\<^sub>j\\<^sub>e\\<^sub>c\\<^sub>t\n                            \\<lambda>_.\n                               \\<lfloor>\\<lfloor>mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n            oid8 \\<lfloor>0\\<rfloor>\n            \\<bottom>\\<rfloor>\\<rfloor> .oclAsType(OclAny)\n                            a))", "apply(simp add: OclIncluding_rep_set mtSet_rep_set\n                  oid0_def oid1_def oid2_def oid3_def oid4_def oid5_def oid6_def oid7_def oid8_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<sigma>\\<^sub>1, \\<sigma>\\<^sub>1')\n     \\<Turnstile> not (StrictRefEq\\<^sub>O\\<^sub>b\\<^sub>j\\<^sub>e\\<^sub>c\\<^sub>t\n                        (\\<lambda>\\<tau>.\n                            \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n         8 \\<lfloor>(\\<lfloor>0\\<rfloor>,\n                     \\<bottom>)\\<rfloor>\\<rfloor>\\<rfloor>)\n                        (\\<lambda>\\<tau>.\n                            \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n         5 \\<lfloor>(\\<lfloor>2500\\<rfloor>,\n                     \\<lfloor>6\\<rfloor>)\\<rfloor>\\<rfloor>\\<rfloor>)) and\n                  (not (StrictRefEq\\<^sub>O\\<^sub>b\\<^sub>j\\<^sub>e\\<^sub>c\\<^sub>t\n                         (\\<lambda>\\<tau>.\n                             \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n          8 \\<lfloor>(\\<lfloor>0\\<rfloor>,\n                      \\<bottom>)\\<rfloor>\\<rfloor>\\<rfloor>)\n                         (\\<lambda>\\<tau>.\n                             \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n          3 \\<lfloor>(\\<lfloor>2900\\<rfloor>,\n                      \\<bottom>)\\<rfloor>\\<rfloor>\\<rfloor>)) and\n                   (not (StrictRefEq\\<^sub>O\\<^sub>b\\<^sub>j\\<^sub>e\\<^sub>c\\<^sub>t\n                          (\\<lambda>\\<tau>.\n                              \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n           8 \\<lfloor>(\\<lfloor>0\\<rfloor>,\n                       \\<bottom>)\\<rfloor>\\<rfloor>\\<rfloor>)\n                          (\\<lambda>\\<tau>.\n                              \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n           (Suc 0)\n           \\<lfloor>(\\<lfloor>1800\\<rfloor>,\n                     \\<lfloor>Suc 0\\<rfloor>)\\<rfloor>\\<rfloor>\\<rfloor>)) and\n                    not (StrictRefEq\\<^sub>O\\<^sub>b\\<^sub>j\\<^sub>e\\<^sub>c\\<^sub>t\n                          (\\<lambda>\\<tau>.\n                              \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n           8 \\<lfloor>(\\<lfloor>0\\<rfloor>,\n                       \\<bottom>)\\<rfloor>\\<rfloor>\\<rfloor>)\n                          (\\<lambda>\\<tau>.\n                              \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n           0 \\<lfloor>(\\<lfloor>1300\\<rfloor>,\n                       \\<lfloor>Suc 0\\<rfloor>)\\<rfloor>\\<rfloor>\\<rfloor>))))", "apply(simp add: StrictRefEq\\<^sub>O\\<^sub>b\\<^sub>j\\<^sub>e\\<^sub>c\\<^sub>t_def oid_of_option_def oid_of_type\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_def OclNot_def OclValid_def\n                  null_option_def bot_option_def)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  (\\<sigma>\\<^sub>1, \\<sigma>\\<^sub>1')\n   \\<Turnstile> X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9 .oclAsType(OclAny)@pre\\<lambda>x.\n                \\<lfloor>OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA>\n                          x\\<rfloor> \\<triangleq>\n                X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9 .oclAsType(OclAny)@post\\<lambda>x.\n                 \\<lfloor>OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA>\n                           x\\<rfloor>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma perm_\\<sigma>\\<^sub>1' : \"\\<sigma>\\<^sub>1' = \\<lparr> heap = Map.empty\n                           (oid8 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9)\n                           (oid7 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8)\n                           (oid6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7)\n                           (oid5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6)\n                           \\<^cancel>\\<open>oid4\\<close>\n                           (oid3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4)\n                           (oid2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3)\n                           (oid1 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2)\n                           (oid0 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1)\n                       , assocs = assocs \\<sigma>\\<^sub>1' \\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<sigma>\\<^sub>1' =\n    \\<lparr>heap =\n              [oid8 \\<mapsto>\n               in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9,\n               oid7 \\<mapsto>\n               in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8,\n               oid6 \\<mapsto>\n               in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n               oid5 \\<mapsto>\n               in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n               oid3 \\<mapsto>\n               in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n               oid2 \\<mapsto>\n               in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n               oid1 \\<mapsto>\n               in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2,\n               oid0 \\<mapsto>\n               in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1],\n       assocs = assocs \\<sigma>\\<^sub>1'\\<rparr>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<sigma>\\<^sub>1' =\n    \\<lparr>heap =\n              [oid8 \\<mapsto>\n               in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9,\n               oid7 \\<mapsto>\n               in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8,\n               oid6 \\<mapsto>\n               in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n               oid5 \\<mapsto>\n               in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n               oid3 \\<mapsto>\n               in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n               oid2 \\<mapsto>\n               in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n               oid1 \\<mapsto>\n               in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2,\n               oid0 \\<mapsto>\n               in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1],\n       assocs = assocs \\<sigma>\\<^sub>1'\\<rparr>", "note P = fun_upd_twist"], ["proof (state)\nthis:\n  ?a \\<noteq> ?c \\<Longrightarrow>\n  ?m(?a := ?b, ?c := ?d) = ?m(?c := ?d, ?a := ?b)\n\ngoal (1 subgoal):\n 1. \\<sigma>\\<^sub>1' =\n    \\<lparr>heap =\n              [oid8 \\<mapsto>\n               in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9,\n               oid7 \\<mapsto>\n               in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8,\n               oid6 \\<mapsto>\n               in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n               oid5 \\<mapsto>\n               in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n               oid3 \\<mapsto>\n               in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n               oid2 \\<mapsto>\n               in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n               oid1 \\<mapsto>\n               in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2,\n               oid0 \\<mapsto>\n               in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1],\n       assocs = assocs \\<sigma>\\<^sub>1'\\<rparr>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<sigma>\\<^sub>1' =\n    \\<lparr>heap =\n              [oid8 \\<mapsto>\n               in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9,\n               oid7 \\<mapsto>\n               in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8,\n               oid6 \\<mapsto>\n               in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n               oid5 \\<mapsto>\n               in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n               oid3 \\<mapsto>\n               in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n               oid2 \\<mapsto>\n               in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n               oid1 \\<mapsto>\n               in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2,\n               oid0 \\<mapsto>\n               in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1],\n       assocs = assocs \\<sigma>\\<^sub>1'\\<rparr>", "apply(simp add: \\<sigma>\\<^sub>1'_def\n                  oid0_def oid1_def oid2_def oid3_def oid4_def oid5_def oid6_def oid7_def oid8_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. [0 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 2 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3, 3 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4, 5 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6, 6 \\<mapsto>\n     in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7, 7 \\<mapsto>\n     in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8, 8 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9] =\n    [8 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9,\n     7 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8,\n     6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n     5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1]", "apply(subst (1) P, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. [Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1, 2 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3, 3 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4, 5 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6, 6 \\<mapsto>\n     in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7, 7 \\<mapsto>\n     in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8, 8 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9] =\n    [8 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9,\n     7 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8,\n     6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n     5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1]", "apply(subst (2) P, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. [Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 2 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1, 3 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4, 5 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6, 6 \\<mapsto>\n     in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7, 7 \\<mapsto>\n     in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8, 8 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9] =\n    [8 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9,\n     7 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8,\n     6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n     5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1]", "apply(subst (1) P, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. [2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1, 3 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4, 5 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6, 6 \\<mapsto>\n     in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7, 7 \\<mapsto>\n     in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8, 8 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9] =\n    [8 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9,\n     7 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8,\n     6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n     5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1]", "apply(subst (3) P, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. [2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 3 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1, 5 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6, 6 \\<mapsto>\n     in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7, 7 \\<mapsto>\n     in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8, 8 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9] =\n    [8 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9,\n     7 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8,\n     6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n     5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1]", "apply(subst (2) P, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. [2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1, 5 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6, 6 \\<mapsto>\n     in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7, 7 \\<mapsto>\n     in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8, 8 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9] =\n    [8 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9,\n     7 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8,\n     6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n     5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1]", "apply(subst (1) P, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. [3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1, 5 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6, 6 \\<mapsto>\n     in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7, 7 \\<mapsto>\n     in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8, 8 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9] =\n    [8 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9,\n     7 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8,\n     6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n     5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1]", "apply(subst (4) P, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. [3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 5 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1, 6 \\<mapsto>\n     in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7, 7 \\<mapsto>\n     in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8, 8 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9] =\n    [8 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9,\n     7 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8,\n     6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n     5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1]", "apply(subst (3) P, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. [3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1, 6 \\<mapsto>\n     in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7, 7 \\<mapsto>\n     in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8, 8 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9] =\n    [8 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9,\n     7 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8,\n     6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n     5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1]", "apply(subst (2) P, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. [3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1, 6 \\<mapsto>\n     in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7, 7 \\<mapsto>\n     in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8, 8 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9] =\n    [8 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9,\n     7 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8,\n     6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n     5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1]", "apply(subst (1) P, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. [5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1, 6 \\<mapsto>\n     in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7, 7 \\<mapsto>\n     in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8, 8 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9] =\n    [8 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9,\n     7 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8,\n     6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n     5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1]", "apply(subst (5) P, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. [5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 6 \\<mapsto>\n     in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1, 7 \\<mapsto>\n     in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8, 8 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9] =\n    [8 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9,\n     7 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8,\n     6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n     5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1]", "apply(subst (4) P, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. [5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1, 7 \\<mapsto>\n     in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8, 8 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9] =\n    [8 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9,\n     7 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8,\n     6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n     5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1]", "apply(subst (3) P, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. [5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1, 7 \\<mapsto>\n     in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8, 8 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9] =\n    [8 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9,\n     7 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8,\n     6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n     5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1]", "apply(subst (2) P, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. [5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1, 7 \\<mapsto>\n     in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8, 8 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9] =\n    [8 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9,\n     7 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8,\n     6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n     5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1]", "apply(subst (1) P, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. [6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n     5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1, 7 \\<mapsto>\n     in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8, 8 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9] =\n    [8 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9,\n     7 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8,\n     6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n     5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1]", "apply(subst (6) P, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. [6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n     5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 7 \\<mapsto>\n     in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1, 8 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9] =\n    [8 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9,\n     7 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8,\n     6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n     5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1]", "apply(subst (5) P, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. [6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n     5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     7 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1, 8 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9] =\n    [8 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9,\n     7 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8,\n     6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n     5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1]", "apply(subst (4) P, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. [6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n     5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     7 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1, 8 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9] =\n    [8 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9,\n     7 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8,\n     6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n     5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1]", "apply(subst (3) P, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. [6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n     5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     7 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1, 8 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9] =\n    [8 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9,\n     7 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8,\n     6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n     5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1]", "apply(subst (2) P, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. [6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n     7 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8,\n     5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1, 8 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9] =\n    [8 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9,\n     7 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8,\n     6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n     5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1]", "apply(subst (1) P, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. [7 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8,\n     6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n     5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1, 8 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9] =\n    [8 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9,\n     7 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8,\n     6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n     5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1]", "apply(subst (7) P, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. [7 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8,\n     6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n     5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 8 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1] =\n    [8 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9,\n     7 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8,\n     6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n     5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1]", "apply(subst (6) P, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. [7 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8,\n     6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n     5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     8 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1] =\n    [8 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9,\n     7 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8,\n     6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n     5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1]", "apply(subst (5) P, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. [7 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8,\n     6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n     5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     8 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1] =\n    [8 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9,\n     7 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8,\n     6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n     5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1]", "apply(subst (4) P, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. [7 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8,\n     6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n     5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     8 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1] =\n    [8 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9,\n     7 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8,\n     6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n     5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1]", "apply(subst (3) P, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. [7 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8,\n     6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n     8 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9,\n     5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1] =\n    [8 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9,\n     7 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8,\n     6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n     5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1]", "apply(subst (2) P, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. [7 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8,\n     8 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9,\n     6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n     5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1] =\n    [8 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9,\n     7 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8,\n     6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n     5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1]", "apply(subst (1) P, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. [8 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9,\n     7 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8,\n     6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n     5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1] =\n    [8 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9,\n     7 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8,\n     6 \\<mapsto> in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n     5 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n     3 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n     2 \\<mapsto> in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n     Suc 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2, 0 \\<mapsto>\n     in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1]", "by(simp)"], ["proof (state)\nthis:\n  \\<sigma>\\<^sub>1' =\n  \\<lparr>heap =\n            [oid8 \\<mapsto>\n             in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person9,\n             oid7 \\<mapsto>\n             in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person8,\n             oid6 \\<mapsto>\n             in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y person7,\n             oid5 \\<mapsto>\n             in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person6,\n             oid3 \\<mapsto>\n             in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person4,\n             oid2 \\<mapsto>\n             in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person3,\n             oid1 \\<mapsto>\n             in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person2,\n             oid0 \\<mapsto>\n             in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n person1],\n     assocs = assocs \\<sigma>\\<^sub>1'\\<rparr>\n\ngoal:\nNo subgoals!", "qed"], ["", "declare const_ss [simp]"], ["", "lemma \"\\<And>\\<sigma>\\<^sub>1.\n (\\<sigma>\\<^sub>1,\\<sigma>\\<^sub>1') \\<Turnstile> (Person .allInstances() \\<doteq> Set{ X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1, X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n2, X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n3, X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n4\\<^cancel>\\<open>, X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n5\\<close>, X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n6,\n                                           X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n7 .oclAsType(Person)\\<^cancel>\\<open>, X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n8\\<close>, X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9 })\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>\\<^sub>1.\n       (\\<sigma>\\<^sub>1, \\<sigma>\\<^sub>1')\n        \\<Turnstile> Person .allInstances() \\<doteq>\n                     Set{X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1,\n                         X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n2,\n                         X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n3,\n                         X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n4,\n                         X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n6,\n                         X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n7 .oclAsType(Person),\n                         X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9}", "apply(subst perm_\\<sigma>\\<^sub>1')"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>\\<^sub>1.\n       (\\<sigma>\\<^sub>1,\n        \\<lparr>heap =\n                  [oid8 \\<mapsto>\n                   in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                    person9,\n                   oid7 \\<mapsto>\n                   in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                    person8,\n                   oid6 \\<mapsto>\n                   in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                    person7,\n                   oid5 \\<mapsto>\n                   in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                    person6,\n                   oid3 \\<mapsto>\n                   in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                    person4,\n                   oid2 \\<mapsto>\n                   in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                    person3,\n                   oid1 \\<mapsto>\n                   in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                    person2,\n                   oid0 \\<mapsto>\n                   in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                    person1],\n           assocs = assocs \\<sigma>\\<^sub>1'\\<rparr>)\n        \\<Turnstile> Person .allInstances() \\<doteq>\n                     Set{X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1,\n                         X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n2,\n                         X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n3,\n                         X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n4,\n                         X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n6,\n                         X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n7 .oclAsType(Person),\n                         X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9}", "apply(simp only: oid0_def oid1_def oid2_def oid3_def oid4_def oid5_def oid6_def oid7_def oid8_def\n                  X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1_def X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n2_def X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n3_def X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n4_def\n                  X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n5_def X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n6_def X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n7_def X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n8_def X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9_def\n                  person7_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>\\<^sub>1.\n       (\\<sigma>\\<^sub>1,\n        \\<lparr>heap =\n                  [8 \\<mapsto>\n                   in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                    person9,\n                   7 \\<mapsto>\n                   in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                    person8,\n                   6 \\<mapsto>\n                   in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                    (mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y 6\n                      \\<lfloor>(\\<lfloor>3200\\<rfloor>,\n                                \\<lfloor>6\\<rfloor>)\\<rfloor>),\n                   5 \\<mapsto>\n                   in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                    person6,\n                   3 \\<mapsto>\n                   in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                    person4,\n                   2 \\<mapsto>\n                   in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                    person3,\n                   1 \\<mapsto>\n                   in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                    person2,\n                   0 \\<mapsto>\n                   in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                    person1],\n           assocs = assocs \\<sigma>\\<^sub>1'\\<rparr>)\n        \\<Turnstile> Person .allInstances() \\<doteq>\n                     Set{\\<lambda>_.\n                            \\<lfloor>\\<lfloor>person1\\<rfloor>\\<rfloor>,\n                         \\<lambda>_.\n                            \\<lfloor>\\<lfloor>person2\\<rfloor>\\<rfloor>,\n                         \\<lambda>_.\n                            \\<lfloor>\\<lfloor>person3\\<rfloor>\\<rfloor>,\n                         \\<lambda>_.\n                            \\<lfloor>\\<lfloor>person4\\<rfloor>\\<rfloor>,\n                         \\<lambda>_.\n                            \\<lfloor>\\<lfloor>person6\\<rfloor>\\<rfloor>,\n                         \\<lambda>_.\n                            \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n         6 \\<lfloor>(\\<lfloor>3200\\<rfloor>,\n                     \\<lfloor>6\\<rfloor>)\\<rfloor>\\<rfloor>\\<rfloor> .oclAsType(Person),\n                         \\<lambda>_.\n                            \\<lfloor>\\<lfloor>person9\\<rfloor>\\<rfloor>}", "apply(subst state_update_vs_allInstances_at_post_tc, simp, simp add: OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA>_def, simp, rule const_StrictRefEq\\<^sub>S\\<^sub>e\\<^sub>t_including, simp, simp, simp, rule OclIncluding_cong, simp, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>\\<sigma>\\<^sub>1.\n       (\\<sigma>\\<^sub>1,\n        \\<lparr>heap =\n                  [8 \\<mapsto>\n                   in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                    person9,\n                   7 \\<mapsto>\n                   in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                    person8,\n                   6 \\<mapsto>\n                   in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                    (mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y 6\n                      \\<lfloor>(\\<lfloor>3200\\<rfloor>,\n                                \\<lfloor>6\\<rfloor>)\\<rfloor>),\n                   5 \\<mapsto>\n                   in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                    person6,\n                   3 \\<mapsto>\n                   in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                    person4,\n                   2 \\<mapsto>\n                   in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                    person3,\n                   1 \\<mapsto>\n                   in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                    person2],\n           assocs = assocs \\<sigma>\\<^sub>1'\\<rparr>)\n        \\<Turnstile> Person .allInstances() \\<doteq>\n                     Set{\\<lambda>_.\n                            \\<lfloor>\\<lfloor>person2\\<rfloor>\\<rfloor>,\n                         \\<lambda>_.\n                            \\<lfloor>\\<lfloor>person3\\<rfloor>\\<rfloor>,\n                         \\<lambda>_.\n                            \\<lfloor>\\<lfloor>person4\\<rfloor>\\<rfloor>,\n                         \\<lambda>_.\n                            \\<lfloor>\\<lfloor>person6\\<rfloor>\\<rfloor>,\n                         \\<lambda>_.\n                            \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n         6 \\<lfloor>(\\<lfloor>3200\\<rfloor>,\n                     \\<lfloor>6\\<rfloor>)\\<rfloor>\\<rfloor>\\<rfloor> .oclAsType(Person),\n                         \\<lambda>_.\n                            \\<lfloor>\\<lfloor>person9\\<rfloor>\\<rfloor>}\n 2. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>Person\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       person1)\\<rfloor>) =\n       (\\<lambda>_. \\<lfloor>\\<lfloor>person1\\<rfloor>\\<rfloor>)", "apply(subst state_update_vs_allInstances_at_post_tc, simp, simp add: OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA>_def, simp, rule const_StrictRefEq\\<^sub>S\\<^sub>e\\<^sub>t_including, simp, simp, simp, rule OclIncluding_cong, simp, simp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>\\<sigma>\\<^sub>1.\n       (\\<sigma>\\<^sub>1,\n        \\<lparr>heap =\n                  [8 \\<mapsto>\n                   in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                    person9,\n                   7 \\<mapsto>\n                   in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                    person8,\n                   6 \\<mapsto>\n                   in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                    (mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y 6\n                      \\<lfloor>(\\<lfloor>3200\\<rfloor>,\n                                \\<lfloor>6\\<rfloor>)\\<rfloor>),\n                   5 \\<mapsto>\n                   in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                    person6,\n                   3 \\<mapsto>\n                   in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                    person4,\n                   2 \\<mapsto>\n                   in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                    person3],\n           assocs = assocs \\<sigma>\\<^sub>1'\\<rparr>)\n        \\<Turnstile> Person .allInstances() \\<doteq>\n                     Set{\\<lambda>_.\n                            \\<lfloor>\\<lfloor>person3\\<rfloor>\\<rfloor>,\n                         \\<lambda>_.\n                            \\<lfloor>\\<lfloor>person4\\<rfloor>\\<rfloor>,\n                         \\<lambda>_.\n                            \\<lfloor>\\<lfloor>person6\\<rfloor>\\<rfloor>,\n                         \\<lambda>_.\n                            \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n         6 \\<lfloor>(\\<lfloor>3200\\<rfloor>,\n                     \\<lfloor>6\\<rfloor>)\\<rfloor>\\<rfloor>\\<rfloor> .oclAsType(Person),\n                         \\<lambda>_.\n                            \\<lfloor>\\<lfloor>person9\\<rfloor>\\<rfloor>}\n 2. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>Person\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       person2)\\<rfloor>) =\n       (\\<lambda>_. \\<lfloor>\\<lfloor>person2\\<rfloor>\\<rfloor>)\n 3. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>Person\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       person1)\\<rfloor>) =\n       (\\<lambda>_. \\<lfloor>\\<lfloor>person1\\<rfloor>\\<rfloor>)", "apply(subst state_update_vs_allInstances_at_post_tc, simp, simp add: OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA>_def, simp, rule const_StrictRefEq\\<^sub>S\\<^sub>e\\<^sub>t_including, simp, simp, simp, rule OclIncluding_cong, simp, simp)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>\\<sigma>\\<^sub>1.\n       (\\<sigma>\\<^sub>1,\n        \\<lparr>heap =\n                  [8 \\<mapsto>\n                   in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                    person9,\n                   7 \\<mapsto>\n                   in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                    person8,\n                   6 \\<mapsto>\n                   in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                    (mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y 6\n                      \\<lfloor>(\\<lfloor>3200\\<rfloor>,\n                                \\<lfloor>6\\<rfloor>)\\<rfloor>),\n                   5 \\<mapsto>\n                   in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                    person6,\n                   3 \\<mapsto>\n                   in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                    person4],\n           assocs = assocs \\<sigma>\\<^sub>1'\\<rparr>)\n        \\<Turnstile> Person .allInstances() \\<doteq>\n                     Set{\\<lambda>_.\n                            \\<lfloor>\\<lfloor>person4\\<rfloor>\\<rfloor>,\n                         \\<lambda>_.\n                            \\<lfloor>\\<lfloor>person6\\<rfloor>\\<rfloor>,\n                         \\<lambda>_.\n                            \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n         6 \\<lfloor>(\\<lfloor>3200\\<rfloor>,\n                     \\<lfloor>6\\<rfloor>)\\<rfloor>\\<rfloor>\\<rfloor> .oclAsType(Person),\n                         \\<lambda>_.\n                            \\<lfloor>\\<lfloor>person9\\<rfloor>\\<rfloor>}\n 2. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>Person\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       person3)\\<rfloor>) =\n       (\\<lambda>_. \\<lfloor>\\<lfloor>person3\\<rfloor>\\<rfloor>)\n 3. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>Person\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       person2)\\<rfloor>) =\n       (\\<lambda>_. \\<lfloor>\\<lfloor>person2\\<rfloor>\\<rfloor>)\n 4. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>Person\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       person1)\\<rfloor>) =\n       (\\<lambda>_. \\<lfloor>\\<lfloor>person1\\<rfloor>\\<rfloor>)", "apply(subst state_update_vs_allInstances_at_post_tc, simp, simp add: OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA>_def, simp, rule const_StrictRefEq\\<^sub>S\\<^sub>e\\<^sub>t_including, simp, simp, simp, rule OclIncluding_cong, simp, simp)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>\\<sigma>\\<^sub>1.\n       (\\<sigma>\\<^sub>1,\n        \\<lparr>heap =\n                  [8 \\<mapsto>\n                   in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                    person9,\n                   7 \\<mapsto>\n                   in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                    person8,\n                   6 \\<mapsto>\n                   in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                    (mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y 6\n                      \\<lfloor>(\\<lfloor>3200\\<rfloor>,\n                                \\<lfloor>6\\<rfloor>)\\<rfloor>),\n                   5 \\<mapsto>\n                   in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                    person6],\n           assocs = assocs \\<sigma>\\<^sub>1'\\<rparr>)\n        \\<Turnstile> Person .allInstances() \\<doteq>\n                     Set{\\<lambda>_.\n                            \\<lfloor>\\<lfloor>person6\\<rfloor>\\<rfloor>,\n                         \\<lambda>_.\n                            \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n         6 \\<lfloor>(\\<lfloor>3200\\<rfloor>,\n                     \\<lfloor>6\\<rfloor>)\\<rfloor>\\<rfloor>\\<rfloor> .oclAsType(Person),\n                         \\<lambda>_.\n                            \\<lfloor>\\<lfloor>person9\\<rfloor>\\<rfloor>}\n 2. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>Person\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       person4)\\<rfloor>) =\n       (\\<lambda>_. \\<lfloor>\\<lfloor>person4\\<rfloor>\\<rfloor>)\n 3. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>Person\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       person3)\\<rfloor>) =\n       (\\<lambda>_. \\<lfloor>\\<lfloor>person3\\<rfloor>\\<rfloor>)\n 4. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>Person\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       person2)\\<rfloor>) =\n       (\\<lambda>_. \\<lfloor>\\<lfloor>person2\\<rfloor>\\<rfloor>)\n 5. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>Person\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       person1)\\<rfloor>) =\n       (\\<lambda>_. \\<lfloor>\\<lfloor>person1\\<rfloor>\\<rfloor>)", "apply(subst state_update_vs_allInstances_at_post_tc, simp, simp add: OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA>_def, simp, rule const_StrictRefEq\\<^sub>S\\<^sub>e\\<^sub>t_including, simp, simp, simp, rule OclIncluding_cong, simp, simp)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>\\<sigma>\\<^sub>1.\n       (\\<sigma>\\<^sub>1,\n        \\<lparr>heap =\n                  [8 \\<mapsto>\n                   in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                    person9,\n                   7 \\<mapsto>\n                   in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                    person8,\n                   6 \\<mapsto>\n                   in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                    (mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y 6\n                      \\<lfloor>(\\<lfloor>3200\\<rfloor>,\n                                \\<lfloor>6\\<rfloor>)\\<rfloor>)],\n           assocs = assocs \\<sigma>\\<^sub>1'\\<rparr>)\n        \\<Turnstile> Person .allInstances() \\<doteq>\n                     Set{\\<lambda>_.\n                            \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n         6 \\<lfloor>(\\<lfloor>3200\\<rfloor>,\n                     \\<lfloor>6\\<rfloor>)\\<rfloor>\\<rfloor>\\<rfloor> .oclAsType(Person),\n                         \\<lambda>_.\n                            \\<lfloor>\\<lfloor>person9\\<rfloor>\\<rfloor>}\n 2. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>Person\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       person6)\\<rfloor>) =\n       (\\<lambda>_. \\<lfloor>\\<lfloor>person6\\<rfloor>\\<rfloor>)\n 3. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>Person\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       person4)\\<rfloor>) =\n       (\\<lambda>_. \\<lfloor>\\<lfloor>person4\\<rfloor>\\<rfloor>)\n 4. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>Person\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       person3)\\<rfloor>) =\n       (\\<lambda>_. \\<lfloor>\\<lfloor>person3\\<rfloor>\\<rfloor>)\n 5. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>Person\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       person2)\\<rfloor>) =\n       (\\<lambda>_. \\<lfloor>\\<lfloor>person2\\<rfloor>\\<rfloor>)\n 6. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>Person\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       person1)\\<rfloor>) =\n       (\\<lambda>_. \\<lfloor>\\<lfloor>person1\\<rfloor>\\<rfloor>)", "apply(subst state_update_vs_allInstances_at_post_tc, simp, simp add: OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA>_def, simp, rule const_StrictRefEq\\<^sub>S\\<^sub>e\\<^sub>t_including, simp, simp, simp, rule OclIncluding_cong, simp, simp)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>\\<sigma>\\<^sub>1.\n       (\\<sigma>\\<^sub>1,\n        \\<lparr>heap =\n                  [8 \\<mapsto>\n                   in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                    person9,\n                   7 \\<mapsto>\n                   in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                    person8],\n           assocs = assocs \\<sigma>\\<^sub>1'\\<rparr>)\n        \\<Turnstile> Person .allInstances() \\<doteq>\n                     Set{\\<lambda>_.\n                            \\<lfloor>\\<lfloor>person9\\<rfloor>\\<rfloor>}\n 2. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>Person\n                     (in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                       (mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y 6\n                         \\<lfloor>(\\<lfloor>3200\\<rfloor>,\n                                   \\<lfloor>6\\<rfloor>)\\<rfloor>))\\<rfloor>) =\n       \\<lambda>_.\n          \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                             6 \\<lfloor>(\\<lfloor>3200\\<rfloor>,\n   \\<lfloor>6\\<rfloor>)\\<rfloor>\\<rfloor>\\<rfloor> .oclAsType(Person)\n 3. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>Person\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       person6)\\<rfloor>) =\n       (\\<lambda>_. \\<lfloor>\\<lfloor>person6\\<rfloor>\\<rfloor>)\n 4. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>Person\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       person4)\\<rfloor>) =\n       (\\<lambda>_. \\<lfloor>\\<lfloor>person4\\<rfloor>\\<rfloor>)\n 5. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>Person\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       person3)\\<rfloor>) =\n       (\\<lambda>_. \\<lfloor>\\<lfloor>person3\\<rfloor>\\<rfloor>)\n 6. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>Person\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       person2)\\<rfloor>) =\n       (\\<lambda>_. \\<lfloor>\\<lfloor>person2\\<rfloor>\\<rfloor>)\n 7. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>Person\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       person1)\\<rfloor>) =\n       (\\<lambda>_. \\<lfloor>\\<lfloor>person1\\<rfloor>\\<rfloor>)", "apply(subst state_update_vs_allInstances_at_post_ntc, simp, simp add: OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA>_def\n                                                                             person8_def, simp, rule const_StrictRefEq\\<^sub>S\\<^sub>e\\<^sub>t_including, simp, simp, simp)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>\\<sigma>\\<^sub>1.\n       (\\<sigma>\\<^sub>1,\n        \\<lparr>heap =\n                  [8 \\<mapsto>\n                   in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                    person9],\n           assocs = assocs \\<sigma>\\<^sub>1'\\<rparr>)\n        \\<Turnstile> Person .allInstances() \\<doteq>\n                     Set{\\<lambda>_.\n                            \\<lfloor>\\<lfloor>person9\\<rfloor>\\<rfloor>}\n 2. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>Person\n                     (in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                       (mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y 6\n                         \\<lfloor>(\\<lfloor>3200\\<rfloor>,\n                                   \\<lfloor>6\\<rfloor>)\\<rfloor>))\\<rfloor>) =\n       \\<lambda>_.\n          \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                             6 \\<lfloor>(\\<lfloor>3200\\<rfloor>,\n   \\<lfloor>6\\<rfloor>)\\<rfloor>\\<rfloor>\\<rfloor> .oclAsType(Person)\n 3. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>Person\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       person6)\\<rfloor>) =\n       (\\<lambda>_. \\<lfloor>\\<lfloor>person6\\<rfloor>\\<rfloor>)\n 4. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>Person\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       person4)\\<rfloor>) =\n       (\\<lambda>_. \\<lfloor>\\<lfloor>person4\\<rfloor>\\<rfloor>)\n 5. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>Person\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       person3)\\<rfloor>) =\n       (\\<lambda>_. \\<lfloor>\\<lfloor>person3\\<rfloor>\\<rfloor>)\n 6. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>Person\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       person2)\\<rfloor>) =\n       (\\<lambda>_. \\<lfloor>\\<lfloor>person2\\<rfloor>\\<rfloor>)\n 7. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>Person\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       person1)\\<rfloor>) =\n       (\\<lambda>_. \\<lfloor>\\<lfloor>person1\\<rfloor>\\<rfloor>)", "apply(subst state_update_vs_allInstances_at_post_tc, simp, simp add: OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA>_def, simp, rule const_StrictRefEq\\<^sub>S\\<^sub>e\\<^sub>t_including, simp, simp, simp, rule OclIncluding_cong, simp, simp)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>\\<sigma>\\<^sub>1.\n       (\\<sigma>\\<^sub>1,\n        \\<lparr>heap = Map.empty, assocs = assocs \\<sigma>\\<^sub>1'\\<rparr>)\n        \\<Turnstile> Person .allInstances() \\<doteq> Set{}\n 2. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>Person\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       person9)\\<rfloor>) =\n       (\\<lambda>_. \\<lfloor>\\<lfloor>person9\\<rfloor>\\<rfloor>)\n 3. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>Person\n                     (in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                       (mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y 6\n                         \\<lfloor>(\\<lfloor>3200\\<rfloor>,\n                                   \\<lfloor>6\\<rfloor>)\\<rfloor>))\\<rfloor>) =\n       \\<lambda>_.\n          \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                             6 \\<lfloor>(\\<lfloor>3200\\<rfloor>,\n   \\<lfloor>6\\<rfloor>)\\<rfloor>\\<rfloor>\\<rfloor> .oclAsType(Person)\n 4. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>Person\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       person6)\\<rfloor>) =\n       (\\<lambda>_. \\<lfloor>\\<lfloor>person6\\<rfloor>\\<rfloor>)\n 5. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>Person\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       person4)\\<rfloor>) =\n       (\\<lambda>_. \\<lfloor>\\<lfloor>person4\\<rfloor>\\<rfloor>)\n 6. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>Person\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       person3)\\<rfloor>) =\n       (\\<lambda>_. \\<lfloor>\\<lfloor>person3\\<rfloor>\\<rfloor>)\n 7. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>Person\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       person2)\\<rfloor>) =\n       (\\<lambda>_. \\<lfloor>\\<lfloor>person2\\<rfloor>\\<rfloor>)\n 8. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>Person\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       person1)\\<rfloor>) =\n       (\\<lambda>_. \\<lfloor>\\<lfloor>person1\\<rfloor>\\<rfloor>)", "apply(rule state_update_vs_allInstances_at_post_empty)"], ["proof (prove)\ngoal (7 subgoals):\n 1. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>Person\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       person9)\\<rfloor>) =\n       (\\<lambda>_. \\<lfloor>\\<lfloor>person9\\<rfloor>\\<rfloor>)\n 2. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>Person\n                     (in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                       (mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y 6\n                         \\<lfloor>(\\<lfloor>3200\\<rfloor>,\n                                   \\<lfloor>6\\<rfloor>)\\<rfloor>))\\<rfloor>) =\n       \\<lambda>_.\n          \\<lfloor>\\<lfloor>mk\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                             6 \\<lfloor>(\\<lfloor>3200\\<rfloor>,\n   \\<lfloor>6\\<rfloor>)\\<rfloor>\\<rfloor>\\<rfloor> .oclAsType(Person)\n 3. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>Person\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       person6)\\<rfloor>) =\n       (\\<lambda>_. \\<lfloor>\\<lfloor>person6\\<rfloor>\\<rfloor>)\n 4. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>Person\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       person4)\\<rfloor>) =\n       (\\<lambda>_. \\<lfloor>\\<lfloor>person4\\<rfloor>\\<rfloor>)\n 5. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>Person\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       person3)\\<rfloor>) =\n       (\\<lambda>_. \\<lfloor>\\<lfloor>person3\\<rfloor>\\<rfloor>)\n 6. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>Person\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       person2)\\<rfloor>) =\n       (\\<lambda>_. \\<lfloor>\\<lfloor>person2\\<rfloor>\\<rfloor>)\n 7. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>Person\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       person1)\\<rfloor>) =\n       (\\<lambda>_. \\<lfloor>\\<lfloor>person1\\<rfloor>\\<rfloor>)", "by(simp_all add: OclAsType\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n_\\<AA>_def)"], ["", "lemma \"\\<And>\\<sigma>\\<^sub>1.\n (\\<sigma>\\<^sub>1,\\<sigma>\\<^sub>1') \\<Turnstile> (OclAny .allInstances() \\<doteq> Set{ X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1 .oclAsType(OclAny), X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n2 .oclAsType(OclAny),\n                                           X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n3 .oclAsType(OclAny), X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n4 .oclAsType(OclAny)\n                                           \\<^cancel>\\<open>, X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n5\\<close>, X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n6 .oclAsType(OclAny),\n                                           X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n7, X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n8, X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9 .oclAsType(OclAny) })\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>\\<^sub>1.\n       (\\<sigma>\\<^sub>1, \\<sigma>\\<^sub>1')\n        \\<Turnstile> OclAny .allInstances() \\<doteq>\n                     Set{X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1 .oclAsType(OclAny),\n                         X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n2 .oclAsType(OclAny),\n                         X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n3 .oclAsType(OclAny),\n                         X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n4 .oclAsType(OclAny),\n                         X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n6 .oclAsType(OclAny),\n                         X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n7,\n                         X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n8,\n                         X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9 .oclAsType(OclAny)}", "apply(subst perm_\\<sigma>\\<^sub>1')"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>\\<^sub>1.\n       (\\<sigma>\\<^sub>1,\n        \\<lparr>heap =\n                  [oid8 \\<mapsto>\n                   in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                    person9,\n                   oid7 \\<mapsto>\n                   in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                    person8,\n                   oid6 \\<mapsto>\n                   in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                    person7,\n                   oid5 \\<mapsto>\n                   in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                    person6,\n                   oid3 \\<mapsto>\n                   in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                    person4,\n                   oid2 \\<mapsto>\n                   in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                    person3,\n                   oid1 \\<mapsto>\n                   in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                    person2,\n                   oid0 \\<mapsto>\n                   in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                    person1],\n           assocs = assocs \\<sigma>\\<^sub>1'\\<rparr>)\n        \\<Turnstile> OclAny .allInstances() \\<doteq>\n                     Set{X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1 .oclAsType(OclAny),\n                         X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n2 .oclAsType(OclAny),\n                         X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n3 .oclAsType(OclAny),\n                         X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n4 .oclAsType(OclAny),\n                         X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n6 .oclAsType(OclAny),\n                         X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n7,\n                         X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n8,\n                         X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9 .oclAsType(OclAny)}", "apply(simp only: oid0_def oid1_def oid2_def oid3_def oid4_def oid5_def oid6_def oid7_def oid8_def\n                  X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n1_def X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n2_def X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n3_def X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n4_def X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n5_def X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n6_def X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n7_def X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n8_def X\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n9_def\n                  person1_def person2_def person3_def person4_def person5_def person6_def person9_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<sigma>\\<^sub>1.\n       (\\<sigma>\\<^sub>1,\n        \\<lparr>heap =\n                  [8 \\<mapsto>\n                   in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                    (mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n 8\n                      \\<lfloor>0\\<rfloor> \\<bottom>),\n                   7 \\<mapsto>\n                   in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                    person8,\n                   6 \\<mapsto>\n                   in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                    person7,\n                   5 \\<mapsto>\n                   in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                    (mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n 5\n                      \\<lfloor>2500\\<rfloor> \\<lfloor>6\\<rfloor>),\n                   3 \\<mapsto>\n                   in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                    (mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n 3\n                      \\<lfloor>2900\\<rfloor> \\<bottom>),\n                   2 \\<mapsto>\n                   in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                    (mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n 2\n                      \\<bottom> \\<bottom>),\n                   1 \\<mapsto>\n                   in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                    (mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n 1\n                      \\<lfloor>1800\\<rfloor> \\<lfloor>1\\<rfloor>),\n                   0 \\<mapsto>\n                   in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                    (mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n 0\n                      \\<lfloor>1300\\<rfloor> \\<lfloor>1\\<rfloor>)],\n           assocs = assocs \\<sigma>\\<^sub>1'\\<rparr>)\n        \\<Turnstile> OclAny .allInstances() \\<doteq>\n                     Set{\\<lambda>_.\n                            \\<lfloor>\\<lfloor>mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n         0 \\<lfloor>1300\\<rfloor>\n         \\<lfloor>1\\<rfloor>\\<rfloor>\\<rfloor> .oclAsType(OclAny),\n                         \\<lambda>_.\n                            \\<lfloor>\\<lfloor>mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n         1 \\<lfloor>1800\\<rfloor>\n         \\<lfloor>1\\<rfloor>\\<rfloor>\\<rfloor> .oclAsType(OclAny),\n                         \\<lambda>_.\n                            \\<lfloor>\\<lfloor>mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n         2 \\<bottom> \\<bottom>\\<rfloor>\\<rfloor> .oclAsType(OclAny),\n                         \\<lambda>_.\n                            \\<lfloor>\\<lfloor>mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n         3 \\<lfloor>2900\\<rfloor>\n         \\<bottom>\\<rfloor>\\<rfloor> .oclAsType(OclAny),\n                         \\<lambda>_.\n                            \\<lfloor>\\<lfloor>mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n         5 \\<lfloor>2500\\<rfloor>\n         \\<lfloor>6\\<rfloor>\\<rfloor>\\<rfloor> .oclAsType(OclAny),\n                         \\<lambda>_.\n                            \\<lfloor>\\<lfloor>person7\\<rfloor>\\<rfloor>,\n                         \\<lambda>_.\n                            \\<lfloor>\\<lfloor>person8\\<rfloor>\\<rfloor>,\n                         \\<lambda>_.\n                            \\<lfloor>\\<lfloor>mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n         8 \\<lfloor>0\\<rfloor>\n         \\<bottom>\\<rfloor>\\<rfloor> .oclAsType(OclAny)}", "apply(subst state_update_vs_allInstances_at_post_tc, simp, simp add: OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA>_def, simp, rule const_StrictRefEq\\<^sub>S\\<^sub>e\\<^sub>t_including, simp, simp, simp, rule OclIncluding_cong, simp, simp)+"], ["proof (prove)\ngoal (9 subgoals):\n 1. \\<And>\\<sigma>\\<^sub>1.\n       (\\<sigma>\\<^sub>1,\n        \\<lparr>heap = Map.empty, assocs = assocs \\<sigma>\\<^sub>1'\\<rparr>)\n        \\<Turnstile> OclAny .allInstances() \\<doteq> Set{}\n 2. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>OclAny\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       (mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n 8\n                         \\<lfloor>0\\<rfloor> \\<bottom>))\\<rfloor>) =\n       \\<lambda>_.\n          \\<lfloor>\\<lfloor>mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                             8 \\<lfloor>0\\<rfloor>\n                             \\<bottom>\\<rfloor>\\<rfloor> .oclAsType(OclAny)\n 3. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>OclAny\n                     (in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                       person8)\\<rfloor>) =\n       (\\<lambda>_. \\<lfloor>\\<lfloor>person8\\<rfloor>\\<rfloor>)\n 4. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>OclAny\n                     (in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                       person7)\\<rfloor>) =\n       (\\<lambda>_. \\<lfloor>\\<lfloor>person7\\<rfloor>\\<rfloor>)\n 5. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>OclAny\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       (mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n 5\n                         \\<lfloor>2500\\<rfloor>\n                         \\<lfloor>6\\<rfloor>))\\<rfloor>) =\n       \\<lambda>_.\n          \\<lfloor>\\<lfloor>mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                             5 \\<lfloor>2500\\<rfloor>\n                             \\<lfloor>6\\<rfloor>\\<rfloor>\\<rfloor> .oclAsType(OclAny)\n 6. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>OclAny\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       (mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n 3\n                         \\<lfloor>2900\\<rfloor> \\<bottom>))\\<rfloor>) =\n       \\<lambda>_.\n          \\<lfloor>\\<lfloor>mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                             3 \\<lfloor>2900\\<rfloor>\n                             \\<bottom>\\<rfloor>\\<rfloor> .oclAsType(OclAny)\n 7. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>OclAny\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       (mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n 2\n                         \\<bottom> \\<bottom>))\\<rfloor>) =\n       \\<lambda>_.\n          \\<lfloor>\\<lfloor>mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                             2 \\<bottom>\n                             \\<bottom>\\<rfloor>\\<rfloor> .oclAsType(OclAny)\n 8. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>OclAny\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       (mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n 1\n                         \\<lfloor>1800\\<rfloor>\n                         \\<lfloor>1\\<rfloor>))\\<rfloor>) =\n       \\<lambda>_.\n          \\<lfloor>\\<lfloor>mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                             1 \\<lfloor>1800\\<rfloor>\n                             \\<lfloor>1\\<rfloor>\\<rfloor>\\<rfloor> .oclAsType(OclAny)\n 9. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>OclAny\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       (mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n 0\n                         \\<lfloor>1300\\<rfloor>\n                         \\<lfloor>1\\<rfloor>))\\<rfloor>) =\n       \\<lambda>_.\n          \\<lfloor>\\<lfloor>mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                             0 \\<lfloor>1300\\<rfloor>\n                             \\<lfloor>1\\<rfloor>\\<rfloor>\\<rfloor> .oclAsType(OclAny)", "apply(rule state_update_vs_allInstances_at_post_empty)"], ["proof (prove)\ngoal (8 subgoals):\n 1. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>OclAny\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       (mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n 8\n                         \\<lfloor>0\\<rfloor> \\<bottom>))\\<rfloor>) =\n       \\<lambda>_.\n          \\<lfloor>\\<lfloor>mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                             8 \\<lfloor>0\\<rfloor>\n                             \\<bottom>\\<rfloor>\\<rfloor> .oclAsType(OclAny)\n 2. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>OclAny\n                     (in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                       person8)\\<rfloor>) =\n       (\\<lambda>_. \\<lfloor>\\<lfloor>person8\\<rfloor>\\<rfloor>)\n 3. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>OclAny\n                     (in\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y\n                       person7)\\<rfloor>) =\n       (\\<lambda>_. \\<lfloor>\\<lfloor>person7\\<rfloor>\\<rfloor>)\n 4. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>OclAny\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       (mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n 5\n                         \\<lfloor>2500\\<rfloor>\n                         \\<lfloor>6\\<rfloor>))\\<rfloor>) =\n       \\<lambda>_.\n          \\<lfloor>\\<lfloor>mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                             5 \\<lfloor>2500\\<rfloor>\n                             \\<lfloor>6\\<rfloor>\\<rfloor>\\<rfloor> .oclAsType(OclAny)\n 5. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>OclAny\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       (mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n 3\n                         \\<lfloor>2900\\<rfloor> \\<bottom>))\\<rfloor>) =\n       \\<lambda>_.\n          \\<lfloor>\\<lfloor>mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                             3 \\<lfloor>2900\\<rfloor>\n                             \\<bottom>\\<rfloor>\\<rfloor> .oclAsType(OclAny)\n 6. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>OclAny\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       (mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n 2\n                         \\<bottom> \\<bottom>))\\<rfloor>) =\n       \\<lambda>_.\n          \\<lfloor>\\<lfloor>mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                             2 \\<bottom>\n                             \\<bottom>\\<rfloor>\\<rfloor> .oclAsType(OclAny)\n 7. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>OclAny\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       (mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n 1\n                         \\<lfloor>1800\\<rfloor>\n                         \\<lfloor>1\\<rfloor>))\\<rfloor>) =\n       \\<lambda>_.\n          \\<lfloor>\\<lfloor>mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                             1 \\<lfloor>1800\\<rfloor>\n                             \\<lfloor>1\\<rfloor>\\<rfloor>\\<rfloor> .oclAsType(OclAny)\n 8. \\<And>\\<sigma>\\<^sub>1.\n       (\\<lambda>_.\n           \\<lfloor>OclAny\n                     (in\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                       (mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n 0\n                         \\<lfloor>1300\\<rfloor>\n                         \\<lfloor>1\\<rfloor>))\\<rfloor>) =\n       \\<lambda>_.\n          \\<lfloor>\\<lfloor>mk\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\n                             0 \\<lfloor>1300\\<rfloor>\n                             \\<lfloor>1\\<rfloor>\\<rfloor>\\<rfloor> .oclAsType(OclAny)", "by(simp_all add: OclAsType\\<^sub>O\\<^sub>c\\<^sub>l\\<^sub>A\\<^sub>n\\<^sub>y_\\<AA>_def)"], ["", "end"]]}