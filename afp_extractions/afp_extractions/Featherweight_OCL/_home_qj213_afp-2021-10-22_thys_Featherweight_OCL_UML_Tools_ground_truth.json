{"file_name": "/home/qj213/afp-2021-10-22/thys/Featherweight_OCL/UML_Tools.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Featherweight_OCL", "problem_names": ["lemmas substs1 = StrongEq_L_subst2_rev\n                 foundation15[THEN iffD2, THEN StrongEq_L_subst2_rev]\n                 foundation7'[THEN iffD2, THEN foundation15[THEN iffD2, \n                                       THEN StrongEq_L_subst2_rev]]                \n                 foundation14[THEN iffD2, THEN StrongEq_L_subst2_rev]\n                 foundation13[THEN iffD2, THEN StrongEq_L_subst2_rev]", "lemmas substs2 = StrongEq_L_subst3_rev\n                 foundation15[THEN iffD2, THEN StrongEq_L_subst3_rev]\n                 foundation7'[THEN iffD2, THEN foundation15[THEN iffD2, \n                                       THEN StrongEq_L_subst3_rev]]                \n                 foundation14[THEN iffD2, THEN StrongEq_L_subst3_rev]\n                 foundation13[THEN iffD2, THEN StrongEq_L_subst3_rev]", "lemmas substs4 = StrongEq_L_subst4_rev\n                 foundation15[THEN iffD2, THEN StrongEq_L_subst4_rev]\n                 foundation7'[THEN iffD2, THEN foundation15[THEN iffD2, \n                                       THEN StrongEq_L_subst4_rev]]                \n                 foundation14[THEN iffD2, THEN StrongEq_L_subst4_rev]\n                 foundation13[THEN iffD2, THEN StrongEq_L_subst4_rev]", "lemmas substs = substs1 substs2 substs4 [THEN iffD2] substs4", "lemma test1 : \"\\<tau> \\<Turnstile> A \\<Longrightarrow> \\<tau> \\<Turnstile> (A and B \\<triangleq> B)\"", "lemma test2 : \"\\<tau> \\<Turnstile> A \\<Longrightarrow> \\<tau> \\<Turnstile> (A and B \\<triangleq> B)\"", "lemma test3 : \"\\<tau> \\<Turnstile> A \\<Longrightarrow> \\<tau> \\<Turnstile> (A and A)\"", "lemma test4 : \"\\<tau> \\<Turnstile> not A \\<Longrightarrow> \\<tau> \\<Turnstile> (A and B \\<triangleq> false)\"", "lemma test5 : \"\\<tau> \\<Turnstile> (A \\<triangleq> null) \\<Longrightarrow> \\<tau> \\<Turnstile> (B \\<triangleq> null) \\<Longrightarrow> \\<not> (\\<tau> \\<Turnstile> (A and B))\"", "lemma test6 : \"\\<tau> \\<Turnstile> not A \\<Longrightarrow> \\<not> (\\<tau> \\<Turnstile> (A and B))\"", "lemma test7 : \"\\<not> (\\<tau> \\<Turnstile> (\\<upsilon> A)) \\<Longrightarrow> \\<tau> \\<Turnstile> (not B) \\<Longrightarrow> \\<not> (\\<tau> \\<Turnstile> (A and B))\"", "lemma X: \"\\<not> (\\<tau> \\<Turnstile> (invalid and B))\"", "lemma X': \"\\<not> (\\<tau> \\<Turnstile> (invalid and B))\"", "lemma Y: \"\\<not> (\\<tau> \\<Turnstile> (null and B))\"", "lemma Z: \"\\<not> (\\<tau> \\<Turnstile> (false and B))\"", "lemma Z': \"(\\<tau> \\<Turnstile> (true and B)) = (\\<tau> \\<Turnstile> B)\""], "translations": [["", "lemmas substs1 = StrongEq_L_subst2_rev\n                 foundation15[THEN iffD2, THEN StrongEq_L_subst2_rev]\n                 foundation7'[THEN iffD2, THEN foundation15[THEN iffD2, \n                                       THEN StrongEq_L_subst2_rev]]                \n                 foundation14[THEN iffD2, THEN StrongEq_L_subst2_rev]\n                 foundation13[THEN iffD2, THEN StrongEq_L_subst2_rev]"], ["", "lemmas substs2 = StrongEq_L_subst3_rev\n                 foundation15[THEN iffD2, THEN StrongEq_L_subst3_rev]\n                 foundation7'[THEN iffD2, THEN foundation15[THEN iffD2, \n                                       THEN StrongEq_L_subst3_rev]]                \n                 foundation14[THEN iffD2, THEN StrongEq_L_subst3_rev]\n                 foundation13[THEN iffD2, THEN StrongEq_L_subst3_rev]"], ["", "lemmas substs4 = StrongEq_L_subst4_rev\n                 foundation15[THEN iffD2, THEN StrongEq_L_subst4_rev]\n                 foundation7'[THEN iffD2, THEN foundation15[THEN iffD2, \n                                       THEN StrongEq_L_subst4_rev]]                \n                 foundation14[THEN iffD2, THEN StrongEq_L_subst4_rev]\n                 foundation13[THEN iffD2, THEN StrongEq_L_subst4_rev]"], ["", "lemmas substs = substs1 substs2 substs4 [THEN iffD2] substs4"], ["", "thm substs"], ["", "ML\\<open>\nfun ocl_subst_asm_tac ctxt  = FIRST'(map (fn C => (eresolve0_tac [C]) THEN' (simp_tac ctxt)) \n                                         @{thms \"substs\"})\n\nval ocl_subst_asm = fn ctxt => SIMPLE_METHOD (ocl_subst_asm_tac ctxt 1); \n\nval _ = Theory.setup \n             (Method.setup (Binding.name \"ocl_subst_asm\") \n             (Scan.succeed (ocl_subst_asm)) \n             \"ocl substition step\") \n \n\\<close>"], ["", "lemma test1 : \"\\<tau> \\<Turnstile> A \\<Longrightarrow> \\<tau> \\<Turnstile> (A and B \\<triangleq> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau> \\<Turnstile> A \\<Longrightarrow>\n    \\<tau> \\<Turnstile> A and B \\<triangleq> B", "apply(tactic \"ocl_subst_asm_tac @{context} 1\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau> \\<Turnstile> true and B \\<triangleq> B", "apply(simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma test2 : \"\\<tau> \\<Turnstile> A \\<Longrightarrow> \\<tau> \\<Turnstile> (A and B \\<triangleq> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau> \\<Turnstile> A \\<Longrightarrow>\n    \\<tau> \\<Turnstile> A and B \\<triangleq> B", "by(ocl_subst_asm, simp)"], ["", "lemma test3 : \"\\<tau> \\<Turnstile> A \\<Longrightarrow> \\<tau> \\<Turnstile> (A and A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau> \\<Turnstile> A \\<Longrightarrow> \\<tau> \\<Turnstile> A and A", "by(ocl_subst_asm, simp)"], ["", "lemma test4 : \"\\<tau> \\<Turnstile> not A \\<Longrightarrow> \\<tau> \\<Turnstile> (A and B \\<triangleq> false)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau> \\<Turnstile> not A \\<Longrightarrow>\n    \\<tau> \\<Turnstile> A and B \\<triangleq> false", "by(ocl_subst_asm, simp)"], ["", "lemma test5 : \"\\<tau> \\<Turnstile> (A \\<triangleq> null) \\<Longrightarrow> \\<tau> \\<Turnstile> (B \\<triangleq> null) \\<Longrightarrow> \\<not> (\\<tau> \\<Turnstile> (A and B))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<tau> \\<Turnstile> A \\<triangleq> null;\n     \\<tau> \\<Turnstile> B \\<triangleq> null\\<rbrakk>\n    \\<Longrightarrow> \\<tau> |\\<noteq> A and B", "by(ocl_subst_asm,ocl_subst_asm,simp)"], ["", "lemma test6 : \"\\<tau> \\<Turnstile> not A \\<Longrightarrow> \\<not> (\\<tau> \\<Turnstile> (A and B))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau> \\<Turnstile> not A \\<Longrightarrow> \\<tau> |\\<noteq> A and B", "by(ocl_subst_asm, simp)"], ["", "lemma test7 : \"\\<not> (\\<tau> \\<Turnstile> (\\<upsilon> A)) \\<Longrightarrow> \\<tau> \\<Turnstile> (not B) \\<Longrightarrow> \\<not> (\\<tau> \\<Turnstile> (A and B))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<tau> |\\<noteq> \\<upsilon> A;\n     \\<tau> \\<Turnstile> not B\\<rbrakk>\n    \\<Longrightarrow> \\<tau> |\\<noteq> A and B", "by(ocl_subst_asm,ocl_subst_asm,simp)"], ["", "(* a proof that shows that not everything is humpty dumpty ... *)"], ["", "lemma X: \"\\<not> (\\<tau> \\<Turnstile> (invalid and B))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau> |\\<noteq> invalid and B", "apply(insert foundation8[of \"\\<tau>\" \"B\"], elim disjE, \n      simp add:defined_bool_split, elim disjE)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<tau> \\<Turnstile> B \\<Longrightarrow> \\<tau> |\\<noteq> invalid and B\n 2. \\<tau> \\<Turnstile> not B \\<Longrightarrow>\n    \\<tau> |\\<noteq> invalid and B\n 3. \\<tau> \\<Turnstile> B \\<triangleq> invalid \\<Longrightarrow>\n    \\<tau> |\\<noteq> invalid and B\n 4. \\<tau> \\<Turnstile> B \\<triangleq> null \\<Longrightarrow>\n    \\<tau> |\\<noteq> invalid and B", "apply(ocl_subst_asm, simp)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<tau> \\<Turnstile> not B \\<Longrightarrow>\n    \\<tau> |\\<noteq> invalid and B\n 2. \\<tau> \\<Turnstile> B \\<triangleq> invalid \\<Longrightarrow>\n    \\<tau> |\\<noteq> invalid and B\n 3. \\<tau> \\<Turnstile> B \\<triangleq> null \\<Longrightarrow>\n    \\<tau> |\\<noteq> invalid and B", "apply(ocl_subst_asm, simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<tau> \\<Turnstile> B \\<triangleq> invalid \\<Longrightarrow>\n    \\<tau> |\\<noteq> invalid and B\n 2. \\<tau> \\<Turnstile> B \\<triangleq> null \\<Longrightarrow>\n    \\<tau> |\\<noteq> invalid and B", "apply(ocl_subst_asm, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau> \\<Turnstile> B \\<triangleq> null \\<Longrightarrow>\n    \\<tau> |\\<noteq> invalid and B", "apply(ocl_subst_asm, simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "(* easier is: *)\n(* just to show the power of this extremely useful foundational rule:*)"], ["", "lemma X': \"\\<not> (\\<tau> \\<Turnstile> (invalid and B))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau> |\\<noteq> invalid and B", "by(simp add:foundation10')"], ["", "lemma Y: \"\\<not> (\\<tau> \\<Turnstile> (null and B))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau> |\\<noteq> null and B", "by(simp add: foundation10')"], ["", "lemma Z: \"\\<not> (\\<tau> \\<Turnstile> (false and B))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau> |\\<noteq> false and B", "by(simp add: foundation10')"], ["", "lemma Z': \"(\\<tau> \\<Turnstile> (true and B)) = (\\<tau> \\<Turnstile> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<tau> \\<Turnstile> true and B) = (\\<tau> \\<Turnstile> B)", "by(simp)"], ["", "end"], ["", "(* > *)"]]}