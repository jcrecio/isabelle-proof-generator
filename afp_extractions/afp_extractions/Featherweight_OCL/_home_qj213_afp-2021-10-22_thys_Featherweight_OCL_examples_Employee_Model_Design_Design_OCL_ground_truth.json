{"file_name": "/home/qj213/afp-2021-10-22/thys/Featherweight_OCL/examples/Employee_Model/Design/Design_OCL.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Featherweight_OCL", "problem_names": ["lemma \"\\<tau> \\<Turnstile> \\<delta> (X .boss) \\<Longrightarrow> \\<tau> \\<Turnstile> Person .allInstances()->includes\\<^sub>S\\<^sub>e\\<^sub>t(X .boss) \\<and>\n                            \\<tau> \\<Turnstile> Person .allInstances()->includes\\<^sub>S\\<^sub>e\\<^sub>t(X) \"", "lemma REC_pre : \"\\<tau> \\<Turnstile> Person_label\\<^sub>g\\<^sub>l\\<^sub>o\\<^sub>b\\<^sub>a\\<^sub>l\\<^sub>i\\<^sub>n\\<^sub>v \n       \\<Longrightarrow> \\<tau> \\<Turnstile> Person .allInstances()->includes\\<^sub>S\\<^sub>e\\<^sub>t(X) \\<comment> \\<open>\\<open>X\\<close> represented object in state\\<close>\n       \\<Longrightarrow> \\<exists> REC.  \\<tau> \\<Turnstile> REC(X)  \\<triangleq> (Person_label\\<^sub>i\\<^sub>n\\<^sub>v (X) and (X .boss <> null implies REC(X .boss)))\"", "lemma inv_1 : \n\"(\\<tau> \\<Turnstile> Person .allInstances()->includes\\<^sub>S\\<^sub>e\\<^sub>t(self)) \\<Longrightarrow>\n    (\\<tau> \\<Turnstile> inv\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<^sub>_\\<^sub>l\\<^sub>a\\<^sub>b\\<^sub>e\\<^sub>l(self) = ((\\<tau> \\<Turnstile> (self .boss \\<doteq> null)) \\<or>\n                               ( \\<tau> \\<Turnstile> (self .boss <> null) \\<and> \n                                 \\<tau> \\<Turnstile> ((self .salary)  \\<le>\\<^sub>i\\<^sub>n\\<^sub>t  (self .boss .salary))  \\<and>\n                                 \\<tau> \\<Turnstile> (inv\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<^sub>_\\<^sub>l\\<^sub>a\\<^sub>b\\<^sub>e\\<^sub>l(self .boss))))) \"", "lemma inv_2 : \n\"(\\<tau> \\<Turnstile> Person .allInstances@pre()->includes\\<^sub>S\\<^sub>e\\<^sub>t(self)) \\<Longrightarrow>\n    (\\<tau> \\<Turnstile> inv\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<^sub>_\\<^sub>l\\<^sub>a\\<^sub>b\\<^sub>e\\<^sub>l\\<^sub>A\\<^sub>T\\<^sub>p\\<^sub>r\\<^sub>e(self)) =  ((\\<tau> \\<Turnstile> (self .boss@pre \\<doteq> null)) \\<or>\n                                     (\\<tau> \\<Turnstile> (self .boss@pre <> null) \\<and>\n                                     (\\<tau> \\<Turnstile> (self .boss@pre .salary@pre \\<le>\\<^sub>i\\<^sub>n\\<^sub>t self .salary@pre))  \\<and>\n                                     (\\<tau> \\<Turnstile> (inv\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<^sub>_\\<^sub>l\\<^sub>a\\<^sub>b\\<^sub>e\\<^sub>l\\<^sub>A\\<^sub>T\\<^sub>p\\<^sub>r\\<^sub>e(self .boss@pre)))))\""], "translations": [["", "lemma \"\\<tau> \\<Turnstile> \\<delta> (X .boss) \\<Longrightarrow> \\<tau> \\<Turnstile> Person .allInstances()->includes\\<^sub>S\\<^sub>e\\<^sub>t(X .boss) \\<and>\n                            \\<tau> \\<Turnstile> Person .allInstances()->includes\\<^sub>S\\<^sub>e\\<^sub>t(X) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau> \\<Turnstile> \\<delta> (X.boss) \\<Longrightarrow>\n    \\<tau>\n     \\<Turnstile> Person .allInstances()->includes\\<^sub>S\\<^sub>e\\<^sub>t(X.boss) \\<and>\n    \\<tau>\n     \\<Turnstile> Person .allInstances()->includes\\<^sub>S\\<^sub>e\\<^sub>t(X)", "oops"], ["", "(* To be generated generically ... hard, but crucial lemma that should hold. \n   It means that X and it successor are object representation that actually\n   occur in the state. *)"], ["", "lemma REC_pre : \"\\<tau> \\<Turnstile> Person_label\\<^sub>g\\<^sub>l\\<^sub>o\\<^sub>b\\<^sub>a\\<^sub>l\\<^sub>i\\<^sub>n\\<^sub>v \n       \\<Longrightarrow> \\<tau> \\<Turnstile> Person .allInstances()->includes\\<^sub>S\\<^sub>e\\<^sub>t(X) \\<comment> \\<open>\\<open>X\\<close> represented object in state\\<close>\n       \\<Longrightarrow> \\<exists> REC.  \\<tau> \\<Turnstile> REC(X)  \\<triangleq> (Person_label\\<^sub>i\\<^sub>n\\<^sub>v (X) and (X .boss <> null implies REC(X .boss)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<tau>\n              \\<Turnstile> Person_label\\<^sub>g\\<^sub>l\\<^sub>o\\<^sub>b\\<^sub>a\\<^sub>l\\<^sub>i\\<^sub>n\\<^sub>v;\n     \\<tau>\n      \\<Turnstile> Person .allInstances()->includes\\<^sub>S\\<^sub>e\\<^sub>t(X)\\<rbrakk>\n    \\<Longrightarrow> \\<exists>REC.\n                         \\<tau>\n                          \\<Turnstile> REC X \\<triangleq>\n (Person_label\\<^sub>i\\<^sub>n\\<^sub>v X and\n  (X.boss <> null implies REC (X.boss)))", "oops"], ["", "(* Attempt to allegiate the burden of he following axiomatizations: could be\n        a witness for a constant specification ...*)"], ["", "text\\<open>This allows to state a predicate:\\<close>"], ["", "axiomatization inv\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<^sub>_\\<^sub>l\\<^sub>a\\<^sub>b\\<^sub>e\\<^sub>l :: \"Person \\<Rightarrow> Boolean\"\nwhere inv\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<^sub>_\\<^sub>l\\<^sub>a\\<^sub>b\\<^sub>e\\<^sub>l_def:\n\"(\\<tau> \\<Turnstile> Person .allInstances()->includes\\<^sub>S\\<^sub>e\\<^sub>t(self)) \\<Longrightarrow> \n (\\<tau> \\<Turnstile> (inv\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<^sub>_\\<^sub>l\\<^sub>a\\<^sub>b\\<^sub>e\\<^sub>l(self) \\<triangleq>  (self .boss <> null implies  \n                                  (self .salary  \\<le>\\<^sub>i\\<^sub>n\\<^sub>t  ((self .boss) .salary)) and\n                                   inv\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<^sub>_\\<^sub>l\\<^sub>a\\<^sub>b\\<^sub>e\\<^sub>l(self .boss))))\""], ["", "axiomatization inv\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<^sub>_\\<^sub>l\\<^sub>a\\<^sub>b\\<^sub>e\\<^sub>l\\<^sub>A\\<^sub>T\\<^sub>p\\<^sub>r\\<^sub>e :: \"Person \\<Rightarrow> Boolean\"\nwhere inv\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<^sub>_\\<^sub>l\\<^sub>a\\<^sub>b\\<^sub>e\\<^sub>l\\<^sub>A\\<^sub>T\\<^sub>p\\<^sub>r\\<^sub>e_def: \n\"(\\<tau> \\<Turnstile> Person .allInstances@pre()->includes\\<^sub>S\\<^sub>e\\<^sub>t(self)) \\<Longrightarrow>\n (\\<tau> \\<Turnstile> (inv\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<^sub>_\\<^sub>l\\<^sub>a\\<^sub>b\\<^sub>e\\<^sub>l\\<^sub>A\\<^sub>T\\<^sub>p\\<^sub>r\\<^sub>e(self) \\<triangleq> (self .boss@pre <> null implies \n                                   (self .salary@pre  \\<le>\\<^sub>i\\<^sub>n\\<^sub>t  ((self .boss@pre) .salary@pre)) and\n                                    inv\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<^sub>_\\<^sub>l\\<^sub>a\\<^sub>b\\<^sub>e\\<^sub>l\\<^sub>A\\<^sub>T\\<^sub>p\\<^sub>r\\<^sub>e(self .boss@pre))))\""], ["", "lemma inv_1 : \n\"(\\<tau> \\<Turnstile> Person .allInstances()->includes\\<^sub>S\\<^sub>e\\<^sub>t(self)) \\<Longrightarrow>\n    (\\<tau> \\<Turnstile> inv\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<^sub>_\\<^sub>l\\<^sub>a\\<^sub>b\\<^sub>e\\<^sub>l(self) = ((\\<tau> \\<Turnstile> (self .boss \\<doteq> null)) \\<or>\n                               ( \\<tau> \\<Turnstile> (self .boss <> null) \\<and> \n                                 \\<tau> \\<Turnstile> ((self .salary)  \\<le>\\<^sub>i\\<^sub>n\\<^sub>t  (self .boss .salary))  \\<and>\n                                 \\<tau> \\<Turnstile> (inv\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<^sub>_\\<^sub>l\\<^sub>a\\<^sub>b\\<^sub>e\\<^sub>l(self .boss))))) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>\n     \\<Turnstile> Person .allInstances()->includes\\<^sub>S\\<^sub>e\\<^sub>t(self) \\<Longrightarrow>\n    (\\<tau>\n      \\<Turnstile> inv\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<^sub>_\\<^sub>l\\<^sub>a\\<^sub>b\\<^sub>e\\<^sub>l\n                    self) =\n    (\\<tau> \\<Turnstile> self.boss \\<doteq> null \\<or>\n     \\<tau> \\<Turnstile> self.boss <> null \\<and>\n     \\<tau>\n      \\<Turnstile> self.salary \\<le>\\<^sub>i\\<^sub>n\\<^sub>t\n                   self.boss.salary \\<and>\n     \\<tau>\n      \\<Turnstile> inv\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<^sub>_\\<^sub>l\\<^sub>a\\<^sub>b\\<^sub>e\\<^sub>l\n                    (self.boss))", "oops"], ["", "(* Let's hope that this holds ... *)"], ["", "lemma inv_2 : \n\"(\\<tau> \\<Turnstile> Person .allInstances@pre()->includes\\<^sub>S\\<^sub>e\\<^sub>t(self)) \\<Longrightarrow>\n    (\\<tau> \\<Turnstile> inv\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<^sub>_\\<^sub>l\\<^sub>a\\<^sub>b\\<^sub>e\\<^sub>l\\<^sub>A\\<^sub>T\\<^sub>p\\<^sub>r\\<^sub>e(self)) =  ((\\<tau> \\<Turnstile> (self .boss@pre \\<doteq> null)) \\<or>\n                                     (\\<tau> \\<Turnstile> (self .boss@pre <> null) \\<and>\n                                     (\\<tau> \\<Turnstile> (self .boss@pre .salary@pre \\<le>\\<^sub>i\\<^sub>n\\<^sub>t self .salary@pre))  \\<and>\n                                     (\\<tau> \\<Turnstile> (inv\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<^sub>_\\<^sub>l\\<^sub>a\\<^sub>b\\<^sub>e\\<^sub>l\\<^sub>A\\<^sub>T\\<^sub>p\\<^sub>r\\<^sub>e(self .boss@pre)))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<tau>\n     \\<Turnstile> Person .allInstances@pre()->includes\\<^sub>S\\<^sub>e\\<^sub>t(self) \\<Longrightarrow>\n    (\\<tau>\n      \\<Turnstile> inv\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<^sub>_\\<^sub>l\\<^sub>a\\<^sub>b\\<^sub>e\\<^sub>l\\<^sub>A\\<^sub>T\\<^sub>p\\<^sub>r\\<^sub>e\n                    self) =\n    (\\<tau> \\<Turnstile> self.boss@pre \\<doteq> null \\<or>\n     \\<tau> \\<Turnstile> self.boss@pre <> null \\<and>\n     \\<tau>\n      \\<Turnstile> self.boss@pre.salary@pre \\<le>\\<^sub>i\\<^sub>n\\<^sub>t\n                   self.salary@pre \\<and>\n     \\<tau>\n      \\<Turnstile> inv\\<^sub>P\\<^sub>e\\<^sub>r\\<^sub>s\\<^sub>o\\<^sub>n\\<^sub>_\\<^sub>l\\<^sub>a\\<^sub>b\\<^sub>e\\<^sub>l\\<^sub>A\\<^sub>T\\<^sub>p\\<^sub>r\\<^sub>e\n                    (self.boss@pre))", "oops"], ["", "(* Let's hope that this holds ... *)"], ["", "text\\<open>A very first attempt to characterize the axiomatization by an inductive\ndefinition - this can not be the last word since too weak (should be equality!)\\<close>"], ["", "coinductive inv :: \"Person \\<Rightarrow> (\\<AA>)st \\<Rightarrow> bool\" where\n \"(\\<tau> \\<Turnstile> (\\<delta> self)) \\<Longrightarrow> ((\\<tau> \\<Turnstile> (self .boss \\<doteq> null)) \\<or>\n                      (\\<tau> \\<Turnstile> (self .boss <> null) \\<and> (\\<tau> \\<Turnstile> (self .boss .salary \\<le>\\<^sub>i\\<^sub>n\\<^sub>t self .salary))  \\<and>\n                     ( (inv(self .boss))\\<tau> )))\n                     \\<Longrightarrow> ( inv self \\<tau>)\""], ["", "section\\<open>OCL Part: The Contract of a Recursive Query\\<close>"], ["", "text\\<open>This part is analogous to the Analysis Model and skipped here.\\<close>"], ["", "end"]]}