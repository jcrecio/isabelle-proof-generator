{"file_name": "/home/qj213/afp-2021-10-22/thys/Residuated_Lattices/Residuated_Boolean_Algebras.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Residuated_Lattices", "problem_names": ["lemma inf_bot_iff_le: \"x \\<sqinter> y = \\<bottom> \\<longleftrightarrow> x \\<le> -y\"", "lemma le_iff_inf_bot: \"x \\<le> y \\<longleftrightarrow> x \\<sqinter> -y = \\<bottom>\"", "lemma indirect_eq: \"(\\<And>z. x \\<le> z \\<longleftrightarrow> y \\<le> z) \\<Longrightarrow> x = y\"", "lemma conjugation_pair_commute: \"conjugation_pair f g \\<Longrightarrow> conjugation_pair g f\"", "lemma conjugate_iff_residuated: \"conjugation_pair f g = residuated_pair f (\\<lambda>x. -g(-x))\"", "lemma conjugate_residuated: \"conjugation_pair f g \\<Longrightarrow> residuated_pair f (\\<lambda>x. -g(-x))\"", "lemma residuated_iff_conjugate: \"residuated_pair f g = conjugation_pair f (\\<lambda>x. -g(-x))\"", "lemma conj_residuatedI1: \"\\<exists>g. conjugation_pair f g \\<Longrightarrow> residuated f\"", "lemma conj_residuatedI2: \"\\<exists>g. conjugation_pair g f \\<Longrightarrow> residuated f\"", "lemma exist_conjugateI[intro]: \"residuated f \\<Longrightarrow> \\<exists>g. conjugation_pair f g\"", "lemma exist_conjugateI2[intro]: \"residuated f \\<Longrightarrow> \\<exists>g. conjugation_pair g f\"", "lemma unique_conjugate[intro]: \"residuated f \\<Longrightarrow> \\<exists>!g. conjugation_pair f g\"", "lemma unique_conjugate2[intro]: \"residuated f \\<Longrightarrow> \\<exists>!g. conjugation_pair g f\"", "lemma conjugate_iff_def: \"residuated f \\<Longrightarrow> f(x) \\<sqinter> y = \\<bottom> \\<longleftrightarrow> x \\<sqinter> conjugate f y = \\<bottom>\"", "lemma conjugateI1: \"residuated f \\<Longrightarrow> f(x) \\<sqinter> y = \\<bottom> \\<Longrightarrow> x \\<sqinter> conjugate f y = \\<bottom>\"", "lemma conjugateI2: \"residuated f \\<Longrightarrow> x \\<sqinter> conjugate f y = \\<bottom> \\<Longrightarrow> f(x) \\<sqinter> y = \\<bottom>\"", "lemma residuated_conj1: \"residuated f \\<Longrightarrow> conjugation_pair f (conjugate f)\"", "lemma residuated_conj2: \"residuated f \\<Longrightarrow> conjugation_pair (conjugate f) f\"", "lemma conj_residuated: \"residuated f \\<Longrightarrow> residuated (conjugate f)\"", "lemma conj_involution: \"residuated f \\<Longrightarrow> conjugate (conjugate f) = f\"", "lemma residual_conj_eq: \"residuated f \\<Longrightarrow> residual (conjugate f) = (\\<lambda>x. -f(-x))\"", "lemma residual_conj_eq_ext: \"residuated f \\<Longrightarrow> residual (conjugate f) x = -f(-x)\"", "lemma conj_iso: \"residuated f \\<Longrightarrow> x \\<le> y \\<Longrightarrow> conjugate f x \\<le> conjugate f y\"", "lemma conjugate_strict: \"residuated f \\<Longrightarrow> conjugate f \\<bottom> = \\<bottom>\"", "lemma conjugate_sup: \"residuated f \\<Longrightarrow> conjugate f (x \\<squnion> y) = conjugate f x \\<squnion> conjugate f y\"", "lemma conjugate_subinf: \"residuated f \\<Longrightarrow> conjugate f (x \\<sqinter> y) \\<le> conjugate f x \\<sqinter> conjugate f y\"", "lemma maddux1: \"residuated f \\<Longrightarrow> f(x \\<sqinter> - conjugate f(y)) \\<le> f(x) \\<sqinter> -y\"", "lemma maddux1': \"residuated f \\<Longrightarrow> conjugate f(x \\<sqinter> -f(y)) \\<le> conjugate f(x) \\<sqinter> -y\"", "lemma maddux2: \"residuated f \\<Longrightarrow> f(x) \\<sqinter> y \\<le> f(x \\<sqinter> conjugate f y)\"", "lemma maddux2': \"residuated f \\<Longrightarrow> conjugate f(x) \\<sqinter> y \\<le> conjugate f(x \\<sqinter> f y)\"", "lemma residuated_conjugate_ineq: \"residuated f \\<Longrightarrow> conjugate f x \\<le> y \\<longleftrightarrow> x \\<le> -f(-y)\"", "lemma residuated_comp_closed: \"residuated f \\<Longrightarrow> residuated g \\<Longrightarrow> residuated (f o g)\"", "lemma conjugate_comp: \"residuated f \\<Longrightarrow> residuated g \\<Longrightarrow> conjugate (f o g) = conjugate g o conjugate f\"", "lemma conjugate_comp_ext: \"residuated f \\<Longrightarrow> residuated g \\<Longrightarrow> conjugate (\\<lambda>x. f (g x)) x = conjugate g (conjugate f x)\"", "lemma conjugate_eq: \"residuated f \\<Longrightarrow> conjugate f y = \\<Sqinter>{x. y \\<le> -f(-x)}\"", "lemma residual_conjugate_r: \"x \\<rightarrow> y = -(x \\<rhd> -y)\"", "lemma residual_conjugate_l: \"x \\<leftarrow> y = -(-x \\<lhd> y)\"", "lemma conjugation_multl: \"x\\<cdot>y \\<sqinter> z = \\<bottom> \\<longleftrightarrow> x \\<sqinter> (z \\<lhd> y) = \\<bottom>\"", "lemma conjugation_multr: \"x\\<cdot>y \\<sqinter> z = \\<bottom> \\<longleftrightarrow> y \\<sqinter> (x \\<rhd> z) = \\<bottom>\"", "lemma conjugation_conj: \"(x \\<lhd> y) \\<sqinter> z = \\<bottom> \\<longleftrightarrow> y \\<sqinter> (z \\<rhd> x) = \\<bottom>\"", "lemma conjugation_pair_multl [simp]: \"conjugation_pair (\\<lambda>x. x\\<cdot>y) (\\<lambda>x. x \\<lhd> y)\"", "lemma conjugation_pair_multr [simp]: \"conjugation_pair (\\<lambda>x. y\\<cdot>x) (\\<lambda>x. y \\<rhd> x)\"", "lemma conjugation_pair_conj [simp]: \"conjugation_pair (\\<lambda>x. y \\<lhd> x) (\\<lambda>x. x \\<rhd> y)\"", "lemma residuated_conjl1 [simp]: \"residuated (\\<lambda>x. x \\<lhd> y)\"", "lemma residuated_conjl2 [simp]: \"residuated (\\<lambda>x. y \\<lhd> x)\"", "lemma residuated_conjr1 [simp]: \"residuated (\\<lambda>x. y \\<rhd> x)\"", "lemma residuated_conjr2 [simp]: \"residuated (\\<lambda>x. x \\<rhd> y)\"", "lemma conjugate_multr [simp]: \"conjugate (\\<lambda>x. y\\<cdot>x) = (\\<lambda>x. y \\<rhd> x)\"", "lemma conjugate_conjr1 [simp]: \"conjugate (\\<lambda>x. y \\<rhd> x) = (\\<lambda>x. y\\<cdot>x)\"", "lemma conjugate_multl [simp]: \"conjugate (\\<lambda>x. x\\<cdot>y) = (\\<lambda>x. x \\<lhd> y)\"", "lemma conjugate_conjl1 [simp]: \"conjugate (\\<lambda>x. x \\<lhd> y) = (\\<lambda>x. x\\<cdot>y)\"", "lemma conjugate_conjl2[simp]: \"conjugate (\\<lambda>x. y \\<lhd> x) = (\\<lambda>x. x \\<rhd> y)\"", "lemma conjugate_conjr2[simp]: \"conjugate (\\<lambda>x. x \\<rhd> y) = (\\<lambda>x. y \\<lhd> x)\"", "lemma conjl1_iso: \"x \\<le> y \\<Longrightarrow> x \\<lhd> z \\<le> y \\<lhd> z\"", "lemma conjl2_iso: \"x \\<le> y \\<Longrightarrow> z \\<lhd> x \\<le> z \\<lhd> y\"", "lemma conjr1_iso: \"x \\<le> y \\<Longrightarrow> z \\<rhd> x \\<le> z \\<rhd> y\"", "lemma conjr2_iso: \"x \\<le> y \\<Longrightarrow> x \\<rhd> z \\<le> y \\<rhd> z\"", "lemma conjl1_sup: \"z \\<lhd> (x \\<squnion> y) = (z \\<lhd> x) \\<squnion> (z \\<lhd> y)\"", "lemma conjl2_sup: \"(x \\<squnion> y) \\<lhd> z = (x \\<lhd> z) \\<squnion> (y \\<lhd> z)\"", "lemma conjr1_sup: \"z \\<rhd> (x \\<squnion> y) = (z \\<rhd> x) \\<squnion> (z \\<rhd> y)\"", "lemma conjr2_sup: \"(x \\<squnion> y) \\<rhd> z = (x \\<rhd> z) \\<squnion> (y \\<rhd> z)\"", "lemma conjl1_strict: \"\\<bottom> \\<lhd> x = \\<bottom>\"", "lemma conjl2_strict: \"x \\<lhd> \\<bottom> = \\<bottom>\"", "lemma conjr1_strict: \"\\<bottom> \\<rhd> x = \\<bottom>\"", "lemma conjr2_strict: \"x \\<rhd> \\<bottom> = \\<bottom>\"", "lemma conjl1_iff: \"x \\<lhd> y \\<le> z \\<longleftrightarrow> x \\<le> -(-z\\<cdot>y)\"", "lemma conjl2_iff: \"x \\<lhd> y \\<le> z \\<longleftrightarrow> y \\<le> -(-z \\<rhd> x)\"", "lemma conjr1_iff: \"x \\<rhd> y \\<le> z \\<longleftrightarrow> y \\<le> -(x\\<cdot>-z)\"", "lemma conjr2_iff: \"x \\<rhd> y \\<le> z \\<longleftrightarrow> x \\<le> -(y \\<lhd> -z)\"", "lemma maddux1a: \"a\\<cdot>(x \\<sqinter> -(a \\<rhd> y)) \\<le> a\\<cdot>x\"", "lemma maddux1a': \"a\\<cdot>(x \\<sqinter> -(a \\<rhd> y)) \\<le> -y\"", "lemma maddux1b: \"(x \\<sqinter> -(y \\<lhd> a))\\<cdot>a \\<le> x\\<cdot>a\"", "lemma maddux1b': \"(x \\<sqinter> -(y \\<lhd> a))\\<cdot>a \\<le> -y\"", "lemma maddux1c: \" a \\<lhd> x \\<sqinter> -(y \\<rhd> a) \\<le> a \\<lhd> x\"", "lemma maddux1c': \"a \\<lhd> x \\<sqinter> -(y \\<rhd> a) \\<le> -y\"", "lemma maddux1d: \"a \\<rhd> x \\<sqinter> -(a\\<cdot>y) \\<le> a \\<rhd> x\"", "lemma maddux1d': \"a \\<rhd> x \\<sqinter> -(a\\<cdot>y) \\<le> -y\"", "lemma maddux1e: \"x \\<sqinter> -(y\\<cdot>a) \\<lhd> a \\<le> x \\<lhd> a\"", "lemma maddux1e': \"x \\<sqinter> -(y\\<cdot>a) \\<lhd> a \\<le> -y\"", "lemma maddux1f: \"x \\<sqinter> -(a \\<lhd> y) \\<rhd> a \\<le> x \\<rhd> a\"", "lemma maddux1f': \"x \\<sqinter> -(a \\<lhd> y) \\<rhd> a \\<le> -y\"", "lemma maddux2a: \"a\\<cdot>x \\<sqinter> y \\<le> a\\<cdot>(x \\<sqinter> (a \\<rhd> y))\"", "lemma maddux2b: \"x\\<cdot>a \\<sqinter> y \\<le> (x \\<sqinter> (y \\<lhd> a))\\<cdot>a\"", "lemma maddux2c: \"(a \\<lhd> x) \\<sqinter> y \\<le> a \\<lhd> (x \\<sqinter> (y \\<rhd> a))\"", "lemma maddux2d: \"(a \\<rhd> x) \\<sqinter> y \\<le> a \\<rhd> (x \\<sqinter> a\\<cdot>y)\"", "lemma maddux2e: \"(x \\<lhd> a) \\<sqinter> y \\<le> (x \\<sqinter> y\\<cdot>a) \\<lhd> a\"", "lemma maddux2f: \"(x \\<rhd> a) \\<sqinter> y \\<le> (x \\<sqinter> (a \\<lhd> y)) \\<rhd> a\"", "lemma res_assoc_iff1: \"(\\<forall>x y z. x\\<cdot>(y\\<cdot>z) = (x\\<cdot>y)\\<cdot>z) \\<longleftrightarrow> (\\<forall>x y z. x \\<rhd> (y \\<rhd> z) = y\\<cdot>x \\<rhd> z)\"", "lemma res_assoc_iff2: \"(\\<forall>x y z. x\\<cdot>(y\\<cdot>z) = (x\\<cdot>y)\\<cdot>z) \\<longleftrightarrow> (\\<forall>x y z. x \\<lhd> (y \\<cdot> z) = (x \\<lhd> z) \\<lhd> y)\"", "lemma res_assoc_iff3: \"(\\<forall>x y z. x\\<cdot>(y\\<cdot>z) = (x\\<cdot>y)\\<cdot>z) \\<longleftrightarrow> (\\<forall>x y z. (x \\<rhd> y) \\<lhd> z = x \\<rhd> (y \\<lhd> z))\"", "lemma jonsson1a: \"(\\<exists>f. \\<forall>x y. x \\<rhd> y = f(x)\\<cdot>y) \\<longleftrightarrow> (\\<forall>x y. x \\<rhd> y = (x \\<rhd> 1)\\<cdot>y)\"", "lemma jonsson1b: \"(\\<forall>x y. x \\<rhd> y = (x \\<rhd> 1)\\<cdot>y) \\<longleftrightarrow> (\\<forall>x y. x\\<cdot>y = (x \\<rhd> 1) \\<rhd> y)\"", "lemma jonsson1c: \"(\\<forall>x y. x \\<rhd> y = (x \\<rhd> 1)\\<cdot>y) \\<longleftrightarrow> (\\<forall>x y. y \\<lhd> x = 1 \\<lhd> (x \\<lhd> y))\"", "lemma jonsson2a: \"(\\<exists>g. \\<forall>x y. x \\<lhd> y = x\\<cdot>g(y)) \\<longleftrightarrow> (\\<forall>x y. x \\<lhd> y = x\\<cdot>(1 \\<lhd> y))\"", "lemma jonsson2b: \"(\\<forall>x y. x \\<lhd> y = x\\<cdot>(1 \\<lhd> y)) \\<longleftrightarrow> (\\<forall>x y. x\\<cdot>y = x \\<lhd> (1 \\<lhd> y))\"", "lemma jonsson2c: \"(\\<forall>x y. x \\<lhd> y = x\\<cdot>(1 \\<lhd> y)) \\<longleftrightarrow> (\\<forall>x y. y \\<rhd> x = (x \\<rhd> y) \\<rhd> 1)\"", "lemma jonsson3a: \"(\\<forall>x. (x \\<rhd> 1) \\<rhd> 1 = x) \\<longleftrightarrow> (\\<forall>x. 1 \\<lhd> (1 \\<lhd> x) = x)\"", "lemma jonsson3b: \"(\\<forall>x. (x \\<rhd> 1) \\<rhd> 1 = x) \\<Longrightarrow> (x \\<sqinter> y) \\<rhd> 1 = (x \\<rhd> 1) \\<sqinter> (y \\<rhd> 1)\"", "lemma jonsson3c: \"\\<forall>x. (x \\<rhd> 1) \\<rhd> 1 = x \\<Longrightarrow> x \\<rhd> 1 = 1 \\<lhd> x\"", "lemma res_assoc1: \"x \\<rhd> (y \\<rhd> z) = y\\<cdot>x \\<rhd> z\"", "lemma res_assoc2: \"x \\<lhd> (y \\<cdot> z) = (x \\<lhd> z) \\<lhd> y\"", "lemma res_assoc3: \"(x \\<rhd> y) \\<lhd> z = x \\<rhd> (y \\<lhd> z)\"", "lemma jonsson4: \"(\\<forall>x y. x \\<lhd> y = x\\<cdot>(1 \\<lhd> y)) \\<longleftrightarrow> (\\<forall>x y. x \\<rhd> y = (x \\<rhd> 1)\\<cdot>y)\""], "translations": [["", "lemma inf_bot_iff_le: \"x \\<sqinter> y = \\<bottom> \\<longleftrightarrow> x \\<le> -y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<sqinter> y = \\<bottom>) = (x \\<le> - y)", "by (metis le_iff_inf inf_sup_distrib1 inf_top_right sup_bot.left_neutral sup_compl_top compl_inf_bot inf.assoc inf_bot_right)"], ["", "lemma le_iff_inf_bot: \"x \\<le> y \\<longleftrightarrow> x \\<sqinter> -y = \\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<le> y) = (x \\<sqinter> - y = \\<bottom>)", "by (metis inf_bot_iff_le compl_le_compl_iff inf_commute)"], ["", "lemma indirect_eq: \"(\\<And>z. x \\<le> z \\<longleftrightarrow> y \\<le> z) \\<Longrightarrow> x = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z. (x \\<le> z) = (y \\<le> z)) \\<Longrightarrow> x = y", "by (metis eq_iff)"], ["", "text \\<open>\n  Let $B$ be a boolean algebra. The maps $f$ and $g$ on $B$ are\n  a pair of conjugates if and only if for all $x, y \\in B$,\n  $f(x) \\sqcap y = \\bot \\Leftrightarrow x \\sqcap g(t) = \\bot$.\n\\<close>"], ["", "definition conjugation_pair :: \"('a \\<Rightarrow> 'a) \\<Rightarrow> ('a \\<Rightarrow> 'a) \\<Rightarrow> bool\" where\n  \"conjugation_pair f g \\<equiv> \\<forall>x y. f(x) \\<sqinter> y = \\<bottom> \\<longleftrightarrow> x \\<sqinter> g(y) = \\<bottom>\""], ["", "lemma conjugation_pair_commute: \"conjugation_pair f g \\<Longrightarrow> conjugation_pair g f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conjugation_pair f g \\<Longrightarrow> conjugation_pair g f", "by (auto simp: conjugation_pair_def inf_commute)"], ["", "lemma conjugate_iff_residuated: \"conjugation_pair f g = residuated_pair f (\\<lambda>x. -g(-x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conjugation_pair f g = residuated_pair f (\\<lambda>x. - g (- x))", "apply (clarsimp simp: conjugation_pair_def residuated_pair_def inf_bot_iff_le)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x y. (f x \\<le> - y) = (x \\<le> - g y)) =\n    (\\<forall>x y. (f x \\<le> y) = (x \\<le> - g (- y)))", "by (metis double_compl)"], ["", "lemma conjugate_residuated: \"conjugation_pair f g \\<Longrightarrow> residuated_pair f (\\<lambda>x. -g(-x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conjugation_pair f g \\<Longrightarrow>\n    residuated_pair f (\\<lambda>x. - g (- x))", "by (metis conjugate_iff_residuated)"], ["", "lemma residuated_iff_conjugate: \"residuated_pair f g = conjugation_pair f (\\<lambda>x. -g(-x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residuated_pair f g = conjugation_pair f (\\<lambda>x. - g (- x))", "apply (clarsimp simp: conjugation_pair_def residuated_pair_def inf_bot_iff_le)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x y. (f x \\<le> y) = (x \\<le> g y)) =\n    (\\<forall>x y. (f x \\<le> - y) = (x \\<le> g (- y)))", "by (metis double_compl)"], ["", "text \\<open>\n  A map $f$ has a conjugate pair if and only if it is residuated.\n\\<close>"], ["", "lemma conj_residuatedI1: \"\\<exists>g. conjugation_pair f g \\<Longrightarrow> residuated f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>g. conjugation_pair f g \\<Longrightarrow> residuated f", "by (metis conjugate_iff_residuated residuated_def)"], ["", "lemma conj_residuatedI2: \"\\<exists>g. conjugation_pair g f \\<Longrightarrow> residuated f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>g. conjugation_pair g f \\<Longrightarrow> residuated f", "by (metis conj_residuatedI1 conjugation_pair_commute)"], ["", "lemma exist_conjugateI[intro]: \"residuated f \\<Longrightarrow> \\<exists>g. conjugation_pair f g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow> \\<exists>g. conjugation_pair f g", "by (metis residuated_def residuated_iff_conjugate)"], ["", "lemma exist_conjugateI2[intro]: \"residuated f \\<Longrightarrow> \\<exists>g. conjugation_pair g f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow> \\<exists>g. conjugation_pair g f", "by (metis exist_conjugateI conjugation_pair_commute)"], ["", "text \\<open>\n  The conjugate of a residuated function $f$ is unique.\n\\<close>"], ["", "lemma unique_conjugate[intro]: \"residuated f \\<Longrightarrow> \\<exists>!g. conjugation_pair f g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow> \\<exists>!g. conjugation_pair f g", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow> \\<exists>!g. conjugation_pair f g", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow> \\<exists>!g. conjugation_pair f g", "fix g h x"], ["proof (state)\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow> \\<exists>!g. conjugation_pair f g", "assume \"conjugation_pair f g\" and \"conjugation_pair f h\""], ["proof (state)\nthis:\n  conjugation_pair f g\n  conjugation_pair f h\n\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow> \\<exists>!g. conjugation_pair f g", "hence \"g = h\""], ["proof (prove)\nusing this:\n  conjugation_pair f g\n  conjugation_pair f h\n\ngoal (1 subgoal):\n 1. g = h", "apply (unfold conjugation_pair_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>x y.\n                (f x \\<sqinter> y = \\<bottom>) =\n                (x \\<sqinter> g y = \\<bottom>);\n     \\<forall>x y.\n        (f x \\<sqinter> y = \\<bottom>) =\n        (x \\<sqinter> h y = \\<bottom>)\\<rbrakk>\n    \\<Longrightarrow> g = h", "apply (rule ext)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>x y.\n                   (f x \\<sqinter> y = \\<bottom>) =\n                   (x \\<sqinter> g y = \\<bottom>);\n        \\<forall>x y.\n           (f x \\<sqinter> y = \\<bottom>) =\n           (x \\<sqinter> h y = \\<bottom>)\\<rbrakk>\n       \\<Longrightarrow> g x = h x", "apply (rule antisym)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>x y.\n                   (f x \\<sqinter> y = \\<bottom>) =\n                   (x \\<sqinter> g y = \\<bottom>);\n        \\<forall>x y.\n           (f x \\<sqinter> y = \\<bottom>) =\n           (x \\<sqinter> h y = \\<bottom>)\\<rbrakk>\n       \\<Longrightarrow> g x \\<le> h x\n 2. \\<And>x.\n       \\<lbrakk>\\<forall>x y.\n                   (f x \\<sqinter> y = \\<bottom>) =\n                   (x \\<sqinter> g y = \\<bottom>);\n        \\<forall>x y.\n           (f x \\<sqinter> y = \\<bottom>) =\n           (x \\<sqinter> h y = \\<bottom>)\\<rbrakk>\n       \\<Longrightarrow> h x \\<le> g x", "by (metis le_iff_inf_bot inf_commute inf_compl_bot)+"], ["proof (state)\nthis:\n  g = h\n\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow> \\<exists>!g. conjugation_pair f g", "}"], ["proof (state)\nthis:\n  \\<lbrakk>conjugation_pair f ?g2; conjugation_pair f ?h2\\<rbrakk>\n  \\<Longrightarrow> ?g2 = ?h2\n\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow> \\<exists>!g. conjugation_pair f g", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>conjugation_pair f ?g2; conjugation_pair f ?h2\\<rbrakk>\n  \\<Longrightarrow> ?g2 = ?h2\n\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow> \\<exists>!g. conjugation_pair f g", "assume \"residuated f\""], ["proof (state)\nthis:\n  residuated f\n\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow> \\<exists>!g. conjugation_pair f g", "ultimately"], ["proof (chain)\npicking this:\n  \\<lbrakk>conjugation_pair f ?g2; conjugation_pair f ?h2\\<rbrakk>\n  \\<Longrightarrow> ?g2 = ?h2\n  residuated f", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>conjugation_pair f ?g2; conjugation_pair f ?h2\\<rbrakk>\n  \\<Longrightarrow> ?g2 = ?h2\n  residuated f\n\ngoal (1 subgoal):\n 1. \\<exists>!g. conjugation_pair f g", "by force"], ["proof (state)\nthis:\n  \\<exists>!g. conjugation_pair f g\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma unique_conjugate2[intro]: \"residuated f \\<Longrightarrow> \\<exists>!g. conjugation_pair g f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow> \\<exists>!g. conjugation_pair g f", "by (metis unique_conjugate conjugation_pair_commute)"], ["", "text \\<open>\n  Since the conjugate of a residuated map is unique, we define a\n  conjugate operation.\n\\<close>"], ["", "definition conjugate :: \"('a \\<Rightarrow> 'a) \\<Rightarrow> ('a \\<Rightarrow> 'a)\" where\n  \"conjugate f \\<equiv> THE g. conjugation_pair g f\""], ["", "lemma conjugate_iff_def: \"residuated f \\<Longrightarrow> f(x) \\<sqinter> y = \\<bottom> \\<longleftrightarrow> x \\<sqinter> conjugate f y = \\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow>\n    (f x \\<sqinter> y = \\<bottom>) =\n    (x \\<sqinter> conjugate f y = \\<bottom>)", "apply (clarsimp simp: conjugate_def dest!: unique_conjugate)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>g.\n       \\<lbrakk>conjugation_pair f g;\n        \\<forall>y y'.\n           conjugation_pair f y \\<and>\n           conjugation_pair f y' \\<longrightarrow>\n           y = y'\\<rbrakk>\n       \\<Longrightarrow> (f x \\<sqinter> y = \\<bottom>) =\n                         (x \\<sqinter> (THE g. conjugation_pair g f) y =\n                          \\<bottom>)", "apply (subgoal_tac \"(THE g. conjugation_pair g f) = g\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>g.\n       \\<lbrakk>conjugation_pair f g;\n        \\<forall>y y'.\n           conjugation_pair f y \\<and>\n           conjugation_pair f y' \\<longrightarrow>\n           y = y';\n        (THE g. conjugation_pair g f) = g\\<rbrakk>\n       \\<Longrightarrow> (f x \\<sqinter> y = \\<bottom>) =\n                         (x \\<sqinter> (THE g. conjugation_pair g f) y =\n                          \\<bottom>)\n 2. \\<And>g.\n       \\<lbrakk>conjugation_pair f g;\n        \\<forall>y y'.\n           conjugation_pair f y \\<and>\n           conjugation_pair f y' \\<longrightarrow>\n           y = y'\\<rbrakk>\n       \\<Longrightarrow> (THE g. conjugation_pair g f) = g", "apply (clarsimp simp add: conjugation_pair_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>g.\n       \\<lbrakk>conjugation_pair f g;\n        \\<forall>y y'.\n           conjugation_pair f y \\<and>\n           conjugation_pair f y' \\<longrightarrow>\n           y = y'\\<rbrakk>\n       \\<Longrightarrow> (THE g. conjugation_pair g f) = g", "apply (rule the1_equality)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>g.\n       \\<lbrakk>conjugation_pair f g;\n        \\<forall>y y'.\n           conjugation_pair f y \\<and>\n           conjugation_pair f y' \\<longrightarrow>\n           y = y'\\<rbrakk>\n       \\<Longrightarrow> \\<exists>!g. conjugation_pair g f\n 2. \\<And>g.\n       \\<lbrakk>conjugation_pair f g;\n        \\<forall>y y'.\n           conjugation_pair f y \\<and>\n           conjugation_pair f y' \\<longrightarrow>\n           y = y'\\<rbrakk>\n       \\<Longrightarrow> conjugation_pair g f", "by (auto intro: conjugation_pair_commute)"], ["", "lemma conjugateI1: \"residuated f \\<Longrightarrow> f(x) \\<sqinter> y = \\<bottom> \\<Longrightarrow> x \\<sqinter> conjugate f y = \\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>residuated f; f x \\<sqinter> y = \\<bottom>\\<rbrakk>\n    \\<Longrightarrow> x \\<sqinter> conjugate f y = \\<bottom>", "by (metis conjugate_iff_def)"], ["", "lemma conjugateI2: \"residuated f \\<Longrightarrow> x \\<sqinter> conjugate f y = \\<bottom> \\<Longrightarrow> f(x) \\<sqinter> y = \\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>residuated f; x \\<sqinter> conjugate f y = \\<bottom>\\<rbrakk>\n    \\<Longrightarrow> f x \\<sqinter> y = \\<bottom>", "by (metis conjugate_iff_def)"], ["", "text \\<open>\n  Few more lemmas about conjugation follow.\n\\<close>"], ["", "lemma residuated_conj1: \"residuated f \\<Longrightarrow> conjugation_pair f (conjugate f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow> conjugation_pair f (conjugate f)", "using conjugateI1 conjugateI2 conjugation_pair_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>residuated ?f; ?f ?x \\<sqinter> ?y = \\<bottom>\\<rbrakk>\n  \\<Longrightarrow> ?x \\<sqinter> conjugate ?f ?y = \\<bottom>\n  \\<lbrakk>residuated ?f; ?x \\<sqinter> conjugate ?f ?y = \\<bottom>\\<rbrakk>\n  \\<Longrightarrow> ?f ?x \\<sqinter> ?y = \\<bottom>\n  conjugation_pair ?f ?g \\<equiv>\n  \\<forall>x y.\n     (?f x \\<sqinter> y = \\<bottom>) = (x \\<sqinter> ?g y = \\<bottom>)\n\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow> conjugation_pair f (conjugate f)", "by auto"], ["", "lemma residuated_conj2: \"residuated f \\<Longrightarrow> conjugation_pair (conjugate f) f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow> conjugation_pair (conjugate f) f", "using conjugateI1 conjugateI2 conjugation_pair_def inf_commute"], ["proof (prove)\nusing this:\n  \\<lbrakk>residuated ?f; ?f ?x \\<sqinter> ?y = \\<bottom>\\<rbrakk>\n  \\<Longrightarrow> ?x \\<sqinter> conjugate ?f ?y = \\<bottom>\n  \\<lbrakk>residuated ?f; ?x \\<sqinter> conjugate ?f ?y = \\<bottom>\\<rbrakk>\n  \\<Longrightarrow> ?f ?x \\<sqinter> ?y = \\<bottom>\n  conjugation_pair ?f ?g \\<equiv>\n  \\<forall>x y.\n     (?f x \\<sqinter> y = \\<bottom>) = (x \\<sqinter> ?g y = \\<bottom>)\n  ?x \\<sqinter> ?y = ?y \\<sqinter> ?x\n\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow> conjugation_pair (conjugate f) f", "by auto"], ["", "lemma conj_residuated: \"residuated f \\<Longrightarrow> residuated (conjugate f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow> residuated (conjugate f)", "by (force dest!: residuated_conj2 intro: conj_residuatedI1)"], ["", "lemma conj_involution: \"residuated f \\<Longrightarrow> conjugate (conjugate f) = f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow> conjugate (conjugate f) = f", "by (metis conj_residuated residuated_conj1 residuated_conj2 unique_conjugate)"], ["", "lemma residual_conj_eq: \"residuated f \\<Longrightarrow> residual (conjugate f) = (\\<lambda>x. -f(-x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow>\n    residual (conjugate f) = (\\<lambda>x. - f (- x))", "apply (unfold residual_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow>\n    (THE g. residuated_pair (conjugate f) g) = (\\<lambda>x. - f (- x))", "apply (rule the1_equality)"], ["proof (prove)\ngoal (2 subgoals):\n 1. residuated f \\<Longrightarrow>\n    \\<exists>!g. residuated_pair (conjugate f) g\n 2. residuated f \\<Longrightarrow>\n    residuated_pair (conjugate f) (\\<lambda>x. - f (- x))", "apply (rule residual_unique)"], ["proof (prove)\ngoal (2 subgoals):\n 1. residuated f \\<Longrightarrow> residuated (conjugate f)\n 2. residuated f \\<Longrightarrow>\n    residuated_pair (conjugate f) (\\<lambda>x. - f (- x))", "apply (auto intro: conj_residuated conjugate_residuated residuated_conj2)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma residual_conj_eq_ext: \"residuated f \\<Longrightarrow> residual (conjugate f) x = -f(-x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow> residual (conjugate f) x = - f (- x)", "by (metis residual_conj_eq)"], ["", "lemma conj_iso: \"residuated f \\<Longrightarrow> x \\<le> y \\<Longrightarrow> conjugate f x \\<le> conjugate f y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>residuated f; x \\<le> y\\<rbrakk>\n    \\<Longrightarrow> conjugate f x \\<le> conjugate f y", "by (metis conj_residuated res_iso)"], ["", "lemma conjugate_strict: \"residuated f \\<Longrightarrow> conjugate f \\<bottom> = \\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow> conjugate f \\<bottom> = \\<bottom>", "by (metis conj_residuated residuated_strict)"], ["", "lemma conjugate_sup: \"residuated f \\<Longrightarrow> conjugate f (x \\<squnion> y) = conjugate f x \\<squnion> conjugate f y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow>\n    conjugate f (x \\<squnion> y) = conjugate f x \\<squnion> conjugate f y", "by (metis conj_residuated residuated_sup)"], ["", "lemma conjugate_subinf: \"residuated f \\<Longrightarrow> conjugate f (x \\<sqinter> y) \\<le> conjugate f x \\<sqinter> conjugate f y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow>\n    conjugate f (x \\<sqinter> y)\n    \\<le> conjugate f x \\<sqinter> conjugate f y", "by (auto simp: conj_iso)"], ["", "text \\<open>\n  Next we prove some lemmas from Maddux's article. Similar lemmas have been proved in AFP entry\n  for relation algebras. They should be consolidated in the future.\n\\<close>"], ["", "lemma maddux1: \"residuated f \\<Longrightarrow> f(x \\<sqinter> - conjugate f(y)) \\<le> f(x) \\<sqinter> -y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow>\n    f (x \\<sqinter> - conjugate f y) \\<le> f x \\<sqinter> - y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow>\n    f (x \\<sqinter> - conjugate f y) \\<le> f x \\<sqinter> - y", "assume assm: \"residuated f\""], ["proof (state)\nthis:\n  residuated f\n\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow>\n    f (x \\<sqinter> - conjugate f y) \\<le> f x \\<sqinter> - y", "hence \"f(x \\<sqinter> - conjugate f(y)) \\<le> f x\""], ["proof (prove)\nusing this:\n  residuated f\n\ngoal (1 subgoal):\n 1. f (x \\<sqinter> - conjugate f y) \\<le> f x", "by (metis inf_le1 res_iso)"], ["proof (state)\nthis:\n  f (x \\<sqinter> - conjugate f y) \\<le> f x\n\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow>\n    f (x \\<sqinter> - conjugate f y) \\<le> f x \\<sqinter> - y", "moreover"], ["proof (state)\nthis:\n  f (x \\<sqinter> - conjugate f y) \\<le> f x\n\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow>\n    f (x \\<sqinter> - conjugate f y) \\<le> f x \\<sqinter> - y", "have \"f(x \\<sqinter> - conjugate f (y)) \\<sqinter> y = \\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (x \\<sqinter> - conjugate f y) \\<sqinter> y = \\<bottom>", "by (metis assm conjugateI2 inf_bot_iff_le inf_le2)"], ["proof (state)\nthis:\n  f (x \\<sqinter> - conjugate f y) \\<sqinter> y = \\<bottom>\n\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow>\n    f (x \\<sqinter> - conjugate f y) \\<le> f x \\<sqinter> - y", "ultimately"], ["proof (chain)\npicking this:\n  f (x \\<sqinter> - conjugate f y) \\<le> f x\n  f (x \\<sqinter> - conjugate f y) \\<sqinter> y = \\<bottom>", "show ?thesis"], ["proof (prove)\nusing this:\n  f (x \\<sqinter> - conjugate f y) \\<le> f x\n  f (x \\<sqinter> - conjugate f y) \\<sqinter> y = \\<bottom>\n\ngoal (1 subgoal):\n 1. f (x \\<sqinter> - conjugate f y) \\<le> f x \\<sqinter> - y", "by (metis inf_bot_iff_le le_inf_iff)"], ["proof (state)\nthis:\n  f (x \\<sqinter> - conjugate f y) \\<le> f x \\<sqinter> - y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma maddux1': \"residuated f \\<Longrightarrow> conjugate f(x \\<sqinter> -f(y)) \\<le> conjugate f(x) \\<sqinter> -y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow>\n    conjugate f (x \\<sqinter> - f y) \\<le> conjugate f x \\<sqinter> - y", "by (metis conj_involution conj_residuated maddux1)"], ["", "lemma maddux2: \"residuated f \\<Longrightarrow> f(x) \\<sqinter> y \\<le> f(x \\<sqinter> conjugate f y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow>\n    f x \\<sqinter> y \\<le> f (x \\<sqinter> conjugate f y)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow>\n    f x \\<sqinter> y \\<le> f (x \\<sqinter> conjugate f y)", "assume resf: \"residuated f\""], ["proof (state)\nthis:\n  residuated f\n\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow>\n    f x \\<sqinter> y \\<le> f (x \\<sqinter> conjugate f y)", "obtain z where z_def: \"z = f(x \\<sqinter> conjugate f y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z.\n        z = f (x \\<sqinter> conjugate f y) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  z = f (x \\<sqinter> conjugate f y)\n\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow>\n    f x \\<sqinter> y \\<le> f (x \\<sqinter> conjugate f y)", "hence \"f(x \\<sqinter> conjugate f y) \\<sqinter> -z = \\<bottom>\""], ["proof (prove)\nusing this:\n  z = f (x \\<sqinter> conjugate f y)\n\ngoal (1 subgoal):\n 1. f (x \\<sqinter> conjugate f y) \\<sqinter> - z = \\<bottom>", "by (metis inf_compl_bot)"], ["proof (state)\nthis:\n  f (x \\<sqinter> conjugate f y) \\<sqinter> - z = \\<bottom>\n\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow>\n    f x \\<sqinter> y \\<le> f (x \\<sqinter> conjugate f y)", "hence \"x \\<sqinter> conjugate f y \\<sqinter> conjugate f (-z) = \\<bottom>\""], ["proof (prove)\nusing this:\n  f (x \\<sqinter> conjugate f y) \\<sqinter> - z = \\<bottom>\n\ngoal (1 subgoal):\n 1. x \\<sqinter> conjugate f y \\<sqinter> conjugate f (- z) = \\<bottom>", "by (metis conjugate_iff_def resf)"], ["proof (state)\nthis:\n  x \\<sqinter> conjugate f y \\<sqinter> conjugate f (- z) = \\<bottom>\n\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow>\n    f x \\<sqinter> y \\<le> f (x \\<sqinter> conjugate f y)", "hence \"x \\<sqinter> conjugate f (y \\<sqinter> -z) = \\<bottom>\""], ["proof (prove)\nusing this:\n  x \\<sqinter> conjugate f y \\<sqinter> conjugate f (- z) = \\<bottom>\n\ngoal (1 subgoal):\n 1. x \\<sqinter> conjugate f (y \\<sqinter> - z) = \\<bottom>", "apply (subgoal_tac \"conjugate f (y \\<sqinter> -z) \\<le> conjugate f y \\<sqinter> conjugate f (-z)\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>x \\<sqinter> conjugate f y \\<sqinter> conjugate f (- z) =\n             \\<bottom>;\n     conjugate f (y \\<sqinter> - z)\n     \\<le> conjugate f y \\<sqinter> conjugate f (- z)\\<rbrakk>\n    \\<Longrightarrow> x \\<sqinter> conjugate f (y \\<sqinter> - z) =\n                      \\<bottom>\n 2. x \\<sqinter> conjugate f y \\<sqinter> conjugate f (- z) =\n    \\<bottom> \\<Longrightarrow>\n    conjugate f (y \\<sqinter> - z)\n    \\<le> conjugate f y \\<sqinter> conjugate f (- z)", "apply (metis (no_types, hide_lams) dual_order.trans inf.commute inf_bot_iff_le inf_left_commute)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sqinter> conjugate f y \\<sqinter> conjugate f (- z) =\n    \\<bottom> \\<Longrightarrow>\n    conjugate f (y \\<sqinter> - z)\n    \\<le> conjugate f y \\<sqinter> conjugate f (- z)", "by (metis conj_iso inf_le2 inf_top.left_neutral le_inf_iff resf)"], ["proof (state)\nthis:\n  x \\<sqinter> conjugate f (y \\<sqinter> - z) = \\<bottom>\n\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow>\n    f x \\<sqinter> y \\<le> f (x \\<sqinter> conjugate f y)", "hence \"f(x) \\<sqinter> y \\<sqinter> -z = \\<bottom>\""], ["proof (prove)\nusing this:\n  x \\<sqinter> conjugate f (y \\<sqinter> - z) = \\<bottom>\n\ngoal (1 subgoal):\n 1. f x \\<sqinter> y \\<sqinter> - z = \\<bottom>", "by (metis conjugateI2 inf.assoc resf)"], ["proof (state)\nthis:\n  f x \\<sqinter> y \\<sqinter> - z = \\<bottom>\n\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow>\n    f x \\<sqinter> y \\<le> f (x \\<sqinter> conjugate f y)", "thus ?thesis"], ["proof (prove)\nusing this:\n  f x \\<sqinter> y \\<sqinter> - z = \\<bottom>\n\ngoal (1 subgoal):\n 1. f x \\<sqinter> y \\<le> f (x \\<sqinter> conjugate f y)", "by (metis double_compl inf_bot_iff_le z_def)"], ["proof (state)\nthis:\n  f x \\<sqinter> y \\<le> f (x \\<sqinter> conjugate f y)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma maddux2': \"residuated f \\<Longrightarrow> conjugate f(x) \\<sqinter> y \\<le> conjugate f(x \\<sqinter> f y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow>\n    conjugate f x \\<sqinter> y \\<le> conjugate f (x \\<sqinter> f y)", "by (metis conj_involution conj_residuated maddux2)"], ["", "lemma residuated_conjugate_ineq: \"residuated f \\<Longrightarrow> conjugate f x \\<le> y \\<longleftrightarrow> x \\<le> -f(-y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow>\n    (conjugate f x \\<le> y) = (x \\<le> - f (- y))", "by (metis conj_residuated residual_galois residual_conj_eq)"], ["", "lemma residuated_comp_closed: \"residuated f \\<Longrightarrow> residuated g \\<Longrightarrow> residuated (f o g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>residuated f; residuated g\\<rbrakk>\n    \\<Longrightarrow> residuated (f \\<circ> g)", "by (auto simp add: residuated_def residuated_pair_def)"], ["", "lemma conjugate_comp: \"residuated f \\<Longrightarrow> residuated g \\<Longrightarrow> conjugate (f o g) = conjugate g o conjugate f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>residuated f; residuated g\\<rbrakk>\n    \\<Longrightarrow> conjugate (f \\<circ> g) =\n                      conjugate g \\<circ> conjugate f", "proof (rule ext, rule indirect_eq)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x z.\n       \\<lbrakk>residuated f; residuated g\\<rbrakk>\n       \\<Longrightarrow> (conjugate (f \\<circ> g) x \\<le> z) =\n                         ((conjugate g \\<circ> conjugate f) x \\<le> z)", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x z.\n       \\<lbrakk>residuated f; residuated g\\<rbrakk>\n       \\<Longrightarrow> (conjugate (f \\<circ> g) x \\<le> z) =\n                         ((conjugate g \\<circ> conjugate f) x \\<le> z)", "assume assms: \"residuated f\" \"residuated g\""], ["proof (state)\nthis:\n  residuated f\n  residuated g\n\ngoal (1 subgoal):\n 1. \\<And>x z.\n       \\<lbrakk>residuated f; residuated g\\<rbrakk>\n       \\<Longrightarrow> (conjugate (f \\<circ> g) x \\<le> z) =\n                         ((conjugate g \\<circ> conjugate f) x \\<le> z)", "have \"conjugate (f o g) x \\<le> y \\<longleftrightarrow> x \\<le> -f(g(-y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (conjugate (f \\<circ> g) x \\<le> y) = (x \\<le> - f (g (- y)))", "apply (subst residuated_conjugate_ineq)"], ["proof (prove)\ngoal (2 subgoals):\n 1. residuated (f \\<circ> g)\n 2. (x \\<le> - (f \\<circ> g) (- y)) = (x \\<le> - f (g (- y)))", "using assms"], ["proof (prove)\nusing this:\n  residuated f\n  residuated g\n\ngoal (2 subgoals):\n 1. residuated (f \\<circ> g)\n 2. (x \\<le> - (f \\<circ> g) (- y)) = (x \\<le> - f (g (- y)))", "by (auto intro!: residuated_comp_closed)"], ["proof (state)\nthis:\n  (conjugate (f \\<circ> g) x \\<le> y) = (x \\<le> - f (g (- y)))\n\ngoal (1 subgoal):\n 1. \\<And>x z.\n       \\<lbrakk>residuated f; residuated g\\<rbrakk>\n       \\<Longrightarrow> (conjugate (f \\<circ> g) x \\<le> z) =\n                         ((conjugate g \\<circ> conjugate f) x \\<le> z)", "also"], ["proof (state)\nthis:\n  (conjugate (f \\<circ> g) x \\<le> y) = (x \\<le> - f (g (- y)))\n\ngoal (1 subgoal):\n 1. \\<And>x z.\n       \\<lbrakk>residuated f; residuated g\\<rbrakk>\n       \\<Longrightarrow> (conjugate (f \\<circ> g) x \\<le> z) =\n                         ((conjugate g \\<circ> conjugate f) x \\<le> z)", "have \"... \\<longleftrightarrow> conjugate g (conjugate f x) \\<le> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<le> - f (g (- y))) = (conjugate g (conjugate f x) \\<le> y)", "using assms"], ["proof (prove)\nusing this:\n  residuated f\n  residuated g\n\ngoal (1 subgoal):\n 1. (x \\<le> - f (g (- y))) = (conjugate g (conjugate f x) \\<le> y)", "by (simp add: residuated_conjugate_ineq)"], ["proof (state)\nthis:\n  (x \\<le> - f (g (- y))) = (conjugate g (conjugate f x) \\<le> y)\n\ngoal (1 subgoal):\n 1. \\<And>x z.\n       \\<lbrakk>residuated f; residuated g\\<rbrakk>\n       \\<Longrightarrow> (conjugate (f \\<circ> g) x \\<le> z) =\n                         ((conjugate g \\<circ> conjugate f) x \\<le> z)", "finally"], ["proof (chain)\npicking this:\n  (conjugate (f \\<circ> g) x \\<le> y) =\n  (conjugate g (conjugate f x) \\<le> y)", "show \"(conjugate (f \\<circ> g) x \\<le> y) = ((conjugate g \\<circ> conjugate f) x \\<le> y)\""], ["proof (prove)\nusing this:\n  (conjugate (f \\<circ> g) x \\<le> y) =\n  (conjugate g (conjugate f x) \\<le> y)\n\ngoal (1 subgoal):\n 1. (conjugate (f \\<circ> g) x \\<le> y) =\n    ((conjugate g \\<circ> conjugate f) x \\<le> y)", "by auto"], ["proof (state)\nthis:\n  (conjugate (f \\<circ> g) x \\<le> y) =\n  ((conjugate g \\<circ> conjugate f) x \\<le> y)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma conjugate_comp_ext: \"residuated f \\<Longrightarrow> residuated g \\<Longrightarrow> conjugate (\\<lambda>x. f (g x)) x = conjugate g (conjugate f x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>residuated f; residuated g\\<rbrakk>\n    \\<Longrightarrow> conjugate (\\<lambda>x. f (g x)) x =\n                      conjugate g (conjugate f x)", "using conjugate_comp"], ["proof (prove)\nusing this:\n  \\<lbrakk>residuated ?f; residuated ?g\\<rbrakk>\n  \\<Longrightarrow> conjugate (?f \\<circ> ?g) =\n                    conjugate ?g \\<circ> conjugate ?f\n\ngoal (1 subgoal):\n 1. \\<lbrakk>residuated f; residuated g\\<rbrakk>\n    \\<Longrightarrow> conjugate (\\<lambda>x. f (g x)) x =\n                      conjugate g (conjugate f x)", "by (simp add: comp_def)"], ["", "end"], ["", "(* boolean_algebra *)"], ["", "context complete_boolean_algebra begin"], ["", "text \\<open>\n  On a complete boolean algebra, it is possible to give an explicit\n  definition of conjugation.\n\\<close>"], ["", "lemma conjugate_eq: \"residuated f \\<Longrightarrow> conjugate f y = \\<Sqinter>{x. y \\<le> -f(-x)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow>\n    conjugate f y = \\<Sqinter>{x. y \\<le> - f (- x)}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow>\n    conjugate f y = \\<Sqinter>{x. y \\<le> - f (- x)}", "assume assm: \"residuated f\""], ["proof (state)\nthis:\n  residuated f\n\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow>\n    conjugate f y = \\<Sqinter>{x. y \\<le> - f (- x)}", "obtain g where g_def: \"g = conjugate f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g. g = conjugate f \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  g = conjugate f\n\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow>\n    conjugate f y = \\<Sqinter>{x. y \\<le> - f (- x)}", "have \"g y = \\<Sqinter>{x. x \\<ge> g y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g y = \\<Sqinter>{x. g y \\<le> x}", "by (auto intro!: antisym Inf_lower Inf_greatest)"], ["proof (state)\nthis:\n  g y = \\<Sqinter>{x. g y \\<le> x}\n\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow>\n    conjugate f y = \\<Sqinter>{x. y \\<le> - f (- x)}", "also"], ["proof (state)\nthis:\n  g y = \\<Sqinter>{x. g y \\<le> x}\n\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow>\n    conjugate f y = \\<Sqinter>{x. y \\<le> - f (- x)}", "have \"... = \\<Sqinter>{x. -x \\<sqinter> g y = \\<bottom>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sqinter>{x. g y \\<le> x} =\n    \\<Sqinter>{x. - x \\<sqinter> g y = \\<bottom>}", "by (simp add: inf_bot_iff_le)"], ["proof (state)\nthis:\n  \\<Sqinter>{x. g y \\<le> x} = \\<Sqinter>{x. - x \\<sqinter> g y = \\<bottom>}\n\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow>\n    conjugate f y = \\<Sqinter>{x. y \\<le> - f (- x)}", "also"], ["proof (state)\nthis:\n  \\<Sqinter>{x. g y \\<le> x} = \\<Sqinter>{x. - x \\<sqinter> g y = \\<bottom>}\n\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow>\n    conjugate f y = \\<Sqinter>{x. y \\<le> - f (- x)}", "have \"... = \\<Sqinter>{x. f(-x) \\<sqinter> y = \\<bottom>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sqinter>{x. - x \\<sqinter> g y = \\<bottom>} =\n    \\<Sqinter>{x. f (- x) \\<sqinter> y = \\<bottom>}", "by (metis conjugate_iff_def assm g_def)"], ["proof (state)\nthis:\n  \\<Sqinter>{x. - x \\<sqinter> g y = \\<bottom>} =\n  \\<Sqinter>{x. f (- x) \\<sqinter> y = \\<bottom>}\n\ngoal (1 subgoal):\n 1. residuated f \\<Longrightarrow>\n    conjugate f y = \\<Sqinter>{x. y \\<le> - f (- x)}", "finally"], ["proof (chain)\npicking this:\n  g y = \\<Sqinter>{x. f (- x) \\<sqinter> y = \\<bottom>}", "show ?thesis"], ["proof (prove)\nusing this:\n  g y = \\<Sqinter>{x. f (- x) \\<sqinter> y = \\<bottom>}\n\ngoal (1 subgoal):\n 1. conjugate f y = \\<Sqinter>{x. y \\<le> - f (- x)}", "by (simp add: g_def le_iff_inf_bot inf_commute)"], ["proof (state)\nthis:\n  conjugate f y = \\<Sqinter>{x. y \\<le> - f (- x)}\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(* complete_boolean_algebra *)"], ["", "subsection \\<open>Residuated Boolean Structures\\<close>"], ["", "text \\<open>\n  In this section, we present various residuated structures based on\n  boolean algebras.\n  The left and right conjugation of the multiplicative operation is\n  defined, and a number of facts is derived.\n\\<close>"], ["", "class residuated_boolean_algebra = boolean_algebra + residuated_pogroupoid\nbegin"], ["", "subclass residuated_lgroupoid"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.residuated_lgroupoid (\\<sqinter>) (\\<le>) (<) (\\<squnion>)\n     (\\<cdot>) (\\<leftarrow>) (\\<rightarrow>)", ".."], ["", "definition conjugate_l :: \"'a \\<Rightarrow> 'a \\<Rightarrow> 'a\" (infixl \"\\<lhd>\" 60) where\n  \"x \\<lhd> y \\<equiv> -(-x \\<leftarrow> y)\""], ["", "definition conjugate_r :: \"'a \\<Rightarrow> 'a \\<Rightarrow> 'a\" (infixl \"\\<rhd>\" 60) where\n  \"x \\<rhd> y \\<equiv> -(x \\<rightarrow> -y)\""], ["", "lemma residual_conjugate_r: \"x \\<rightarrow> y = -(x \\<rhd> -y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<rightarrow> y = - (x \\<rhd> - y)", "by (metis conjugate_r_def double_compl)"], ["", "lemma residual_conjugate_l: \"x \\<leftarrow> y = -(-x \\<lhd> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<leftarrow> y = - (- x \\<lhd> y)", "by (metis conjugate_l_def double_compl)"], ["", "lemma conjugation_multl: \"x\\<cdot>y \\<sqinter> z = \\<bottom> \\<longleftrightarrow> x \\<sqinter> (z \\<lhd> y) = \\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<cdot> y \\<sqinter> z = \\<bottom>) =\n    (x \\<sqinter> (z \\<lhd> y) = \\<bottom>)", "by (metis conjugate_l_def double_compl le_iff_inf_bot resl_galois)"], ["", "lemma conjugation_multr: \"x\\<cdot>y \\<sqinter> z = \\<bottom> \\<longleftrightarrow> y \\<sqinter> (x \\<rhd> z) = \\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<cdot> y \\<sqinter> z = \\<bottom>) =\n    (y \\<sqinter> (x \\<rhd> z) = \\<bottom>)", "by (metis conjugate_r_def inf_bot_iff_le le_iff_inf_bot resr_galois)"], ["", "lemma conjugation_conj: \"(x \\<lhd> y) \\<sqinter> z = \\<bottom> \\<longleftrightarrow> y \\<sqinter> (z \\<rhd> x) = \\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((x \\<lhd> y) \\<sqinter> z = \\<bottom>) =\n    (y \\<sqinter> (z \\<rhd> x) = \\<bottom>)", "by (metis inf_commute conjugation_multr conjugation_multl)"], ["", "lemma conjugation_pair_multl [simp]: \"conjugation_pair (\\<lambda>x. x\\<cdot>y) (\\<lambda>x. x \\<lhd> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conjugation_pair (\\<lambda>x. x \\<cdot> y) (\\<lambda>x. x \\<lhd> y)", "by (simp add: conjugation_pair_def conjugation_multl)"], ["", "lemma conjugation_pair_multr [simp]: \"conjugation_pair (\\<lambda>x. y\\<cdot>x) (\\<lambda>x. y \\<rhd> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conjugation_pair ((\\<cdot>) y) ((\\<rhd>) y)", "by (simp add: conjugation_pair_def conjugation_multr)"], ["", "lemma conjugation_pair_conj [simp]: \"conjugation_pair (\\<lambda>x. y \\<lhd> x) (\\<lambda>x. x \\<rhd> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conjugation_pair ((\\<lhd>) y) (\\<lambda>x. x \\<rhd> y)", "by (simp add: conjugation_pair_def conjugation_conj)"], ["", "lemma residuated_conjl1 [simp]: \"residuated (\\<lambda>x. x \\<lhd> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residuated (\\<lambda>x. x \\<lhd> y)", "by (metis conj_residuatedI2 conjugation_pair_multl)"], ["", "lemma residuated_conjl2 [simp]: \"residuated (\\<lambda>x. y \\<lhd> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residuated ((\\<lhd>) y)", "by (metis conj_residuatedI1 conjugation_pair_conj)"], ["", "lemma residuated_conjr1 [simp]: \"residuated (\\<lambda>x. y \\<rhd> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residuated ((\\<rhd>) y)", "by (metis conj_residuatedI2 conjugation_pair_multr)"], ["", "lemma residuated_conjr2 [simp]: \"residuated (\\<lambda>x. x \\<rhd> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. residuated (\\<lambda>x. x \\<rhd> y)", "by (metis conj_residuatedI2 conjugation_pair_conj)"], ["", "lemma conjugate_multr [simp]: \"conjugate (\\<lambda>x. y\\<cdot>x) = (\\<lambda>x. y \\<rhd> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conjugate ((\\<cdot>) y) = (\\<rhd>) y", "by (metis conjugation_pair_multr residuated_conj1 residuated_multr unique_conjugate)"], ["", "lemma conjugate_conjr1 [simp]: \"conjugate (\\<lambda>x. y \\<rhd> x) = (\\<lambda>x. y\\<cdot>x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conjugate ((\\<rhd>) y) = (\\<cdot>) y", "by (metis conjugate_multr conj_involution residuated_multr)"], ["", "lemma conjugate_multl [simp]: \"conjugate (\\<lambda>x. x\\<cdot>y) = (\\<lambda>x. x \\<lhd> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conjugate (\\<lambda>x. x \\<cdot> y) = (\\<lambda>x. x \\<lhd> y)", "by (metis conjugation_pair_multl residuated_conj1 residuated_multl unique_conjugate)"], ["", "lemma conjugate_conjl1 [simp]: \"conjugate (\\<lambda>x. x \\<lhd> y) = (\\<lambda>x. x\\<cdot>y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conjugate (\\<lambda>x. x \\<lhd> y) = (\\<lambda>x. x \\<cdot> y)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. conjugate (\\<lambda>x. x \\<lhd> y) = (\\<lambda>x. x \\<cdot> y)", "have \"conjugate (conjugate (\\<lambda>x. x\\<cdot>y)) = conjugate (\\<lambda>x. x \\<lhd> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conjugate (conjugate (\\<lambda>x. x \\<cdot> y)) =\n    conjugate (\\<lambda>x. x \\<lhd> y)", "by simp"], ["proof (state)\nthis:\n  conjugate (conjugate (\\<lambda>x. x \\<cdot> y)) =\n  conjugate (\\<lambda>x. x \\<lhd> y)\n\ngoal (1 subgoal):\n 1. conjugate (\\<lambda>x. x \\<lhd> y) = (\\<lambda>x. x \\<cdot> y)", "thus ?thesis"], ["proof (prove)\nusing this:\n  conjugate (conjugate (\\<lambda>x. x \\<cdot> y)) =\n  conjugate (\\<lambda>x. x \\<lhd> y)\n\ngoal (1 subgoal):\n 1. conjugate (\\<lambda>x. x \\<lhd> y) = (\\<lambda>x. x \\<cdot> y)", "by (metis conj_involution[OF residuated_multl])"], ["proof (state)\nthis:\n  conjugate (\\<lambda>x. x \\<lhd> y) = (\\<lambda>x. x \\<cdot> y)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma conjugate_conjl2[simp]: \"conjugate (\\<lambda>x. y \\<lhd> x) = (\\<lambda>x. x \\<rhd> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conjugate ((\\<lhd>) y) = (\\<lambda>x. x \\<rhd> y)", "by (metis conjugation_pair_conj unique_conjugate residuated_conj1 residuated_conjl2)"], ["", "lemma conjugate_conjr2[simp]: \"conjugate (\\<lambda>x. x \\<rhd> y) = (\\<lambda>x. y \\<lhd> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conjugate (\\<lambda>x. x \\<rhd> y) = (\\<lhd>) y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. conjugate (\\<lambda>x. x \\<rhd> y) = (\\<lhd>) y", "have \"conjugate (conjugate (\\<lambda>x. y \\<lhd> x)) = conjugate (\\<lambda>x. x \\<rhd> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conjugate (conjugate ((\\<lhd>) y)) = conjugate (\\<lambda>x. x \\<rhd> y)", "by simp"], ["proof (state)\nthis:\n  conjugate (conjugate ((\\<lhd>) y)) = conjugate (\\<lambda>x. x \\<rhd> y)\n\ngoal (1 subgoal):\n 1. conjugate (\\<lambda>x. x \\<rhd> y) = (\\<lhd>) y", "thus ?thesis"], ["proof (prove)\nusing this:\n  conjugate (conjugate ((\\<lhd>) y)) = conjugate (\\<lambda>x. x \\<rhd> y)\n\ngoal (1 subgoal):\n 1. conjugate (\\<lambda>x. x \\<rhd> y) = (\\<lhd>) y", "by (metis conj_involution[OF residuated_conjl2])"], ["proof (state)\nthis:\n  conjugate (\\<lambda>x. x \\<rhd> y) = (\\<lhd>) y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma conjl1_iso: \"x \\<le> y \\<Longrightarrow> x \\<lhd> z \\<le> y \\<lhd> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow> x \\<lhd> z \\<le> y \\<lhd> z", "by (metis conjugate_l_def compl_mono resl_iso)"], ["", "lemma conjl2_iso: \"x \\<le> y \\<Longrightarrow> z \\<lhd> x \\<le> z \\<lhd> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow> z \\<lhd> x \\<le> z \\<lhd> y", "by (metis res_iso residuated_conjl2)"], ["", "lemma conjr1_iso: \"x \\<le> y \\<Longrightarrow> z \\<rhd> x \\<le> z \\<rhd> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow> z \\<rhd> x \\<le> z \\<rhd> y", "by (metis res_iso residuated_conjr1)"], ["", "lemma conjr2_iso: \"x \\<le> y \\<Longrightarrow> x \\<rhd> z \\<le> y \\<rhd> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow> x \\<rhd> z \\<le> y \\<rhd> z", "by (metis conjugate_r_def compl_mono resr_antitonel)"], ["", "lemma conjl1_sup: \"z \\<lhd> (x \\<squnion> y) = (z \\<lhd> x) \\<squnion> (z \\<lhd> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<lhd> x \\<squnion> y = (z \\<lhd> x) \\<squnion> (z \\<lhd> y)", "by (metis conjugate_l_def compl_inf resl_distr)"], ["", "lemma conjl2_sup: \"(x \\<squnion> y) \\<lhd> z = (x \\<lhd> z) \\<squnion> (y \\<lhd> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<lhd> z = (x \\<lhd> z) \\<squnion> (y \\<lhd> z)", "by (metis (poly_guards_query) residuated_sup residuated_conjl1)"], ["", "lemma conjr1_sup: \"z \\<rhd> (x \\<squnion> y) = (z \\<rhd> x) \\<squnion> (z \\<rhd> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<rhd> x \\<squnion> y = (z \\<rhd> x) \\<squnion> (z \\<rhd> y)", "by (metis residuated_sup residuated_conjr1)"], ["", "lemma conjr2_sup: \"(x \\<squnion> y) \\<rhd> z = (x \\<rhd> z) \\<squnion> (y \\<rhd> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<squnion> y \\<rhd> z = (x \\<rhd> z) \\<squnion> (y \\<rhd> z)", "by (metis conjugate_r_def compl_inf resr_distl)"], ["", "lemma conjl1_strict: \"\\<bottom> \\<lhd> x = \\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bottom> \\<lhd> x = \\<bottom>", "by (metis residuated_strict residuated_conjl1)"], ["", "lemma conjl2_strict: \"x \\<lhd> \\<bottom> = \\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<lhd> \\<bottom> = \\<bottom>", "by (metis residuated_strict residuated_conjl2)"], ["", "lemma conjr1_strict: \"\\<bottom> \\<rhd> x = \\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<bottom> \\<rhd> x = \\<bottom>", "by (metis residuated_strict residuated_conjr2)"], ["", "lemma conjr2_strict: \"x \\<rhd> \\<bottom> = \\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<rhd> \\<bottom> = \\<bottom>", "by (metis residuated_strict residuated_conjr1)"], ["", "lemma conjl1_iff: \"x \\<lhd> y \\<le> z \\<longleftrightarrow> x \\<le> -(-z\\<cdot>y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<lhd> y \\<le> z) = (x \\<le> - (- z \\<cdot> y))", "by (metis conjugate_l_def compl_le_swap1 compl_le_swap2 resl_galois)"], ["", "lemma conjl2_iff: \"x \\<lhd> y \\<le> z \\<longleftrightarrow> y \\<le> -(-z \\<rhd> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<lhd> y \\<le> z) = (y \\<le> - (- z \\<rhd> x))", "by (metis conjl1_iff conjugate_r_def compl_le_swap2 double_compl resr_galois)"], ["", "lemma conjr1_iff: \"x \\<rhd> y \\<le> z \\<longleftrightarrow> y \\<le> -(x\\<cdot>-z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<rhd> y \\<le> z) = (y \\<le> - (x \\<cdot> - z))", "by (metis conjugate_r_def compl_le_swap1 double_compl resr_galois)"], ["", "lemma conjr2_iff: \"x \\<rhd> y \\<le> z \\<longleftrightarrow> x \\<le> -(y \\<lhd> -z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<rhd> y \\<le> z) = (x \\<le> - (y \\<lhd> - z))", "by (metis conjugation_conj double_compl inf.commute le_iff_inf_bot)"], ["", "text \\<open>\n  We apply Maddux's lemmas regarding conjugation of an arbitrary residuated function \n  for each of the 6 functions.\n\\<close>"], ["", "lemma maddux1a: \"a\\<cdot>(x \\<sqinter> -(a \\<rhd> y)) \\<le> a\\<cdot>x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<cdot> (x \\<sqinter> - (a \\<rhd> y)) \\<le> a \\<cdot> x", "by (insert maddux1 [of \"\\<lambda>x. a\\<cdot>x\"]) simp"], ["", "lemma maddux1a': \"a\\<cdot>(x \\<sqinter> -(a \\<rhd> y)) \\<le> -y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<cdot> (x \\<sqinter> - (a \\<rhd> y)) \\<le> - y", "by (insert maddux1 [of \"\\<lambda>x. a\\<cdot>x\"]) simp"], ["", "lemma maddux1b: \"(x \\<sqinter> -(y \\<lhd> a))\\<cdot>a \\<le> x\\<cdot>a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<sqinter> - (y \\<lhd> a)) \\<cdot> a \\<le> x \\<cdot> a", "by (insert maddux1 [of \"\\<lambda>x. x\\<cdot>a\"]) simp"], ["", "lemma maddux1b': \"(x \\<sqinter> -(y \\<lhd> a))\\<cdot>a \\<le> -y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<sqinter> - (y \\<lhd> a)) \\<cdot> a \\<le> - y", "by (insert maddux1 [of \"\\<lambda>x. x\\<cdot>a\"]) simp"], ["", "lemma maddux1c: \" a \\<lhd> x \\<sqinter> -(y \\<rhd> a) \\<le> a \\<lhd> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<lhd> x \\<sqinter> - (y \\<rhd> a) \\<le> a \\<lhd> x", "by (insert maddux1 [of \"\\<lambda>x. a \\<lhd> x\"]) simp"], ["", "lemma maddux1c': \"a \\<lhd> x \\<sqinter> -(y \\<rhd> a) \\<le> -y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<lhd> x \\<sqinter> - (y \\<rhd> a) \\<le> - y", "by (insert maddux1 [of \"\\<lambda>x. a \\<lhd> x\"]) simp"], ["", "lemma maddux1d: \"a \\<rhd> x \\<sqinter> -(a\\<cdot>y) \\<le> a \\<rhd> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<rhd> x \\<sqinter> - (a \\<cdot> y) \\<le> a \\<rhd> x", "by (insert maddux1 [of \"\\<lambda>x. a \\<rhd> x\"]) simp"], ["", "lemma maddux1d': \"a \\<rhd> x \\<sqinter> -(a\\<cdot>y) \\<le> -y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<rhd> x \\<sqinter> - (a \\<cdot> y) \\<le> - y", "by (insert maddux1 [of \"\\<lambda>x. a \\<rhd> x\"]) simp"], ["", "lemma maddux1e: \"x \\<sqinter> -(y\\<cdot>a) \\<lhd> a \\<le> x \\<lhd> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sqinter> - (y \\<cdot> a) \\<lhd> a \\<le> x \\<lhd> a", "by (insert maddux1 [of \"\\<lambda>x. x \\<lhd> a\"]) simp"], ["", "lemma maddux1e': \"x \\<sqinter> -(y\\<cdot>a) \\<lhd> a \\<le> -y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sqinter> - (y \\<cdot> a) \\<lhd> a \\<le> - y", "by (insert maddux1 [of \"\\<lambda>x. x \\<lhd> a\"]) simp"], ["", "lemma maddux1f: \"x \\<sqinter> -(a \\<lhd> y) \\<rhd> a \\<le> x \\<rhd> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sqinter> - (a \\<lhd> y) \\<rhd> a \\<le> x \\<rhd> a", "by (insert maddux1 [of \"\\<lambda>x. x \\<rhd> a\"]) simp"], ["", "lemma maddux1f': \"x \\<sqinter> -(a \\<lhd> y) \\<rhd> a \\<le> -y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sqinter> - (a \\<lhd> y) \\<rhd> a \\<le> - y", "by (insert maddux1 [of \"\\<lambda>x. x \\<rhd> a\"]) simp"], ["", "lemma maddux2a: \"a\\<cdot>x \\<sqinter> y \\<le> a\\<cdot>(x \\<sqinter> (a \\<rhd> y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<cdot> x \\<sqinter> y \\<le> a \\<cdot> (x \\<sqinter> (a \\<rhd> y))", "by (insert maddux2 [of \"\\<lambda>x. a\\<cdot>x\"]) simp"], ["", "lemma maddux2b: \"x\\<cdot>a \\<sqinter> y \\<le> (x \\<sqinter> (y \\<lhd> a))\\<cdot>a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<cdot> a \\<sqinter> y \\<le> (x \\<sqinter> (y \\<lhd> a)) \\<cdot> a", "by (insert maddux2 [of \"\\<lambda>x. x\\<cdot>a\"]) simp"], ["", "lemma maddux2c: \"(a \\<lhd> x) \\<sqinter> y \\<le> a \\<lhd> (x \\<sqinter> (y \\<rhd> a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<lhd> x) \\<sqinter> y \\<le> a \\<lhd> x \\<sqinter> (y \\<rhd> a)", "by (insert maddux2 [of \"\\<lambda>x. a \\<lhd> x\"]) simp"], ["", "lemma maddux2d: \"(a \\<rhd> x) \\<sqinter> y \\<le> a \\<rhd> (x \\<sqinter> a\\<cdot>y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<rhd> x) \\<sqinter> y \\<le> a \\<rhd> x \\<sqinter> a \\<cdot> y", "by (insert maddux2 [of \"\\<lambda>x. a \\<rhd> x\"]) simp"], ["", "lemma maddux2e: \"(x \\<lhd> a) \\<sqinter> y \\<le> (x \\<sqinter> y\\<cdot>a) \\<lhd> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<lhd> a) \\<sqinter> y \\<le> x \\<sqinter> y \\<cdot> a \\<lhd> a", "by (insert maddux2 [of \"\\<lambda>x. x \\<lhd> a\"]) simp"], ["", "lemma maddux2f: \"(x \\<rhd> a) \\<sqinter> y \\<le> (x \\<sqinter> (a \\<lhd> y)) \\<rhd> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<rhd> a) \\<sqinter> y \\<le> x \\<sqinter> (a \\<lhd> y) \\<rhd> a", "by (insert maddux2 [of \"\\<lambda>x. x \\<rhd> a\"]) simp"], ["", "text \\<open>\n  The multiplicative operation $\\cdot$ on a residuated boolean algebra is generally not\n  associative. We prove some equivalences related to associativity.\n\\<close>"], ["", "lemma res_assoc_iff1: \"(\\<forall>x y z. x\\<cdot>(y\\<cdot>z) = (x\\<cdot>y)\\<cdot>z) \\<longleftrightarrow> (\\<forall>x y z. x \\<rhd> (y \\<rhd> z) = y\\<cdot>x \\<rhd> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x y z. x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z) =\n    (\\<forall>x y z. x \\<rhd> (y \\<rhd> z) = y \\<cdot> x \\<rhd> z)", "proof safe"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y z.\n       \\<forall>x y z.\n          x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z \\<Longrightarrow>\n       x \\<rhd> (y \\<rhd> z) = y \\<cdot> x \\<rhd> z\n 2. \\<And>x y z.\n       \\<forall>x y z.\n          x \\<rhd> (y \\<rhd> z) = y \\<cdot> x \\<rhd> z \\<Longrightarrow>\n       x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z", "fix x y z"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y z.\n       \\<forall>x y z.\n          x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z \\<Longrightarrow>\n       x \\<rhd> (y \\<rhd> z) = y \\<cdot> x \\<rhd> z\n 2. \\<And>x y z.\n       \\<forall>x y z.\n          x \\<rhd> (y \\<rhd> z) = y \\<cdot> x \\<rhd> z \\<Longrightarrow>\n       x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z", "assume \"\\<forall>x y z. x\\<cdot>(y\\<cdot>z) = (x\\<cdot>y)\\<cdot>z\""], ["proof (state)\nthis:\n  \\<forall>x y z. x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z\n\ngoal (2 subgoals):\n 1. \\<And>x y z.\n       \\<forall>x y z.\n          x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z \\<Longrightarrow>\n       x \\<rhd> (y \\<rhd> z) = y \\<cdot> x \\<rhd> z\n 2. \\<And>x y z.\n       \\<forall>x y z.\n          x \\<rhd> (y \\<rhd> z) = y \\<cdot> x \\<rhd> z \\<Longrightarrow>\n       x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z", "thus \"x \\<rhd> (y \\<rhd> z) = y \\<cdot> x \\<rhd> z\""], ["proof (prove)\nusing this:\n  \\<forall>x y z. x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z\n\ngoal (1 subgoal):\n 1. x \\<rhd> (y \\<rhd> z) = y \\<cdot> x \\<rhd> z", "using conjugate_comp_ext[of \"\\<lambda>z. y\\<cdot>z\" \"\\<lambda>z. x\\<cdot>z\"]"], ["proof (prove)\nusing this:\n  \\<forall>x y z. x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z\n  \\<lbrakk>residuated ((\\<cdot>) y); residuated ((\\<cdot>) x)\\<rbrakk>\n  \\<Longrightarrow> conjugate (\\<lambda>xa. y \\<cdot> (x \\<cdot> xa)) ?x =\n                    conjugate ((\\<cdot>) x) (conjugate ((\\<cdot>) y) ?x)\n\ngoal (1 subgoal):\n 1. x \\<rhd> (y \\<rhd> z) = y \\<cdot> x \\<rhd> z", "by auto"], ["proof (state)\nthis:\n  x \\<rhd> (y \\<rhd> z) = y \\<cdot> x \\<rhd> z\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<forall>x y z.\n          x \\<rhd> (y \\<rhd> z) = y \\<cdot> x \\<rhd> z \\<Longrightarrow>\n       x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<forall>x y z.\n          x \\<rhd> (y \\<rhd> z) = y \\<cdot> x \\<rhd> z \\<Longrightarrow>\n       x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z", "fix x y z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<forall>x y z.\n          x \\<rhd> (y \\<rhd> z) = y \\<cdot> x \\<rhd> z \\<Longrightarrow>\n       x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z", "assume \"\\<forall>x y z. x \\<rhd> (y \\<rhd> z) = y\\<cdot>x \\<rhd> z\""], ["proof (state)\nthis:\n  \\<forall>x y z. x \\<rhd> (y \\<rhd> z) = y \\<cdot> x \\<rhd> z\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<forall>x y z.\n          x \\<rhd> (y \\<rhd> z) = y \\<cdot> x \\<rhd> z \\<Longrightarrow>\n       x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z", "thus \"x\\<cdot>(y\\<cdot>z) = (x\\<cdot>y)\\<cdot>z\""], ["proof (prove)\nusing this:\n  \\<forall>x y z. x \\<rhd> (y \\<rhd> z) = y \\<cdot> x \\<rhd> z\n\ngoal (1 subgoal):\n 1. x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z", "using conjugate_comp_ext[of \"\\<lambda>z. y \\<rhd> z\" \"\\<lambda>z. x \\<rhd> z\"]"], ["proof (prove)\nusing this:\n  \\<forall>x y z. x \\<rhd> (y \\<rhd> z) = y \\<cdot> x \\<rhd> z\n  \\<lbrakk>residuated ((\\<rhd>) y); residuated ((\\<rhd>) x)\\<rbrakk>\n  \\<Longrightarrow> conjugate (\\<lambda>xa. y \\<rhd> (x \\<rhd> xa)) ?x =\n                    conjugate ((\\<rhd>) x) (conjugate ((\\<rhd>) y) ?x)\n\ngoal (1 subgoal):\n 1. x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z", "by auto"], ["proof (state)\nthis:\n  x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma res_assoc_iff2: \"(\\<forall>x y z. x\\<cdot>(y\\<cdot>z) = (x\\<cdot>y)\\<cdot>z) \\<longleftrightarrow> (\\<forall>x y z. x \\<lhd> (y \\<cdot> z) = (x \\<lhd> z) \\<lhd> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x y z. x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z) =\n    (\\<forall>x y z. x \\<lhd> y \\<cdot> z = x \\<lhd> z \\<lhd> y)", "proof safe"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y z.\n       \\<forall>x y z.\n          x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z \\<Longrightarrow>\n       x \\<lhd> y \\<cdot> z = x \\<lhd> z \\<lhd> y\n 2. \\<And>x y z.\n       \\<forall>x y z.\n          x \\<lhd> y \\<cdot> z = x \\<lhd> z \\<lhd> y \\<Longrightarrow>\n       x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z", "fix x y z"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y z.\n       \\<forall>x y z.\n          x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z \\<Longrightarrow>\n       x \\<lhd> y \\<cdot> z = x \\<lhd> z \\<lhd> y\n 2. \\<And>x y z.\n       \\<forall>x y z.\n          x \\<lhd> y \\<cdot> z = x \\<lhd> z \\<lhd> y \\<Longrightarrow>\n       x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z", "assume \"\\<forall>x y z. x\\<cdot>(y\\<cdot>z) = (x\\<cdot>y)\\<cdot>z\""], ["proof (state)\nthis:\n  \\<forall>x y z. x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z\n\ngoal (2 subgoals):\n 1. \\<And>x y z.\n       \\<forall>x y z.\n          x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z \\<Longrightarrow>\n       x \\<lhd> y \\<cdot> z = x \\<lhd> z \\<lhd> y\n 2. \\<And>x y z.\n       \\<forall>x y z.\n          x \\<lhd> y \\<cdot> z = x \\<lhd> z \\<lhd> y \\<Longrightarrow>\n       x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z", "hence \"\\<forall>x y z. (x\\<cdot>y)\\<cdot>z = x\\<cdot>(y\\<cdot>z)\""], ["proof (prove)\nusing this:\n  \\<forall>x y z. x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z\n\ngoal (1 subgoal):\n 1. \\<forall>x y z. x \\<cdot> y \\<cdot> z = x \\<cdot> (y \\<cdot> z)", "by simp"], ["proof (state)\nthis:\n  \\<forall>x y z. x \\<cdot> y \\<cdot> z = x \\<cdot> (y \\<cdot> z)\n\ngoal (2 subgoals):\n 1. \\<And>x y z.\n       \\<forall>x y z.\n          x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z \\<Longrightarrow>\n       x \\<lhd> y \\<cdot> z = x \\<lhd> z \\<lhd> y\n 2. \\<And>x y z.\n       \\<forall>x y z.\n          x \\<lhd> y \\<cdot> z = x \\<lhd> z \\<lhd> y \\<Longrightarrow>\n       x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z", "thus \"x \\<lhd> (y \\<cdot> z) = (x \\<lhd> z) \\<lhd> y\""], ["proof (prove)\nusing this:\n  \\<forall>x y z. x \\<cdot> y \\<cdot> z = x \\<cdot> (y \\<cdot> z)\n\ngoal (1 subgoal):\n 1. x \\<lhd> y \\<cdot> z = x \\<lhd> z \\<lhd> y", "using conjugate_comp_ext[of \"\\<lambda>x. x\\<cdot>z\" \"\\<lambda>x. x\\<cdot>y\"]"], ["proof (prove)\nusing this:\n  \\<forall>x y z. x \\<cdot> y \\<cdot> z = x \\<cdot> (y \\<cdot> z)\n  \\<lbrakk>residuated (\\<lambda>x. x \\<cdot> z);\n   residuated (\\<lambda>x. x \\<cdot> y)\\<rbrakk>\n  \\<Longrightarrow> conjugate (\\<lambda>x. x \\<cdot> y \\<cdot> z) ?x =\n                    conjugate (\\<lambda>x. x \\<cdot> y)\n                     (conjugate (\\<lambda>x. x \\<cdot> z) ?x)\n\ngoal (1 subgoal):\n 1. x \\<lhd> y \\<cdot> z = x \\<lhd> z \\<lhd> y", "by auto"], ["proof (state)\nthis:\n  x \\<lhd> y \\<cdot> z = x \\<lhd> z \\<lhd> y\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<forall>x y z.\n          x \\<lhd> y \\<cdot> z = x \\<lhd> z \\<lhd> y \\<Longrightarrow>\n       x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<forall>x y z.\n          x \\<lhd> y \\<cdot> z = x \\<lhd> z \\<lhd> y \\<Longrightarrow>\n       x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z", "fix x y z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<forall>x y z.\n          x \\<lhd> y \\<cdot> z = x \\<lhd> z \\<lhd> y \\<Longrightarrow>\n       x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z", "assume \"\\<forall>x y z. x \\<lhd> (y \\<cdot> z) = (x \\<lhd> z) \\<lhd> y\""], ["proof (state)\nthis:\n  \\<forall>x y z. x \\<lhd> y \\<cdot> z = x \\<lhd> z \\<lhd> y\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<forall>x y z.\n          x \\<lhd> y \\<cdot> z = x \\<lhd> z \\<lhd> y \\<Longrightarrow>\n       x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z", "hence \"\\<forall>x y z. (x \\<lhd> z) \\<lhd> y = x \\<lhd> (y \\<cdot> z)\""], ["proof (prove)\nusing this:\n  \\<forall>x y z. x \\<lhd> y \\<cdot> z = x \\<lhd> z \\<lhd> y\n\ngoal (1 subgoal):\n 1. \\<forall>x y z. x \\<lhd> z \\<lhd> y = x \\<lhd> y \\<cdot> z", "by simp"], ["proof (state)\nthis:\n  \\<forall>x y z. x \\<lhd> z \\<lhd> y = x \\<lhd> y \\<cdot> z\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<forall>x y z.\n          x \\<lhd> y \\<cdot> z = x \\<lhd> z \\<lhd> y \\<Longrightarrow>\n       x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z", "thus \"x\\<cdot>(y\\<cdot>z) = (x\\<cdot>y)\\<cdot>z\""], ["proof (prove)\nusing this:\n  \\<forall>x y z. x \\<lhd> z \\<lhd> y = x \\<lhd> y \\<cdot> z\n\ngoal (1 subgoal):\n 1. x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z", "using conjugate_comp_ext[of \"\\<lambda>z. z \\<lhd> y\" \"\\<lambda>x. x \\<lhd> z\"]"], ["proof (prove)\nusing this:\n  \\<forall>x y z. x \\<lhd> z \\<lhd> y = x \\<lhd> y \\<cdot> z\n  \\<lbrakk>residuated (\\<lambda>z. z \\<lhd> y);\n   residuated (\\<lambda>x. x \\<lhd> z)\\<rbrakk>\n  \\<Longrightarrow> conjugate (\\<lambda>x. x \\<lhd> z \\<lhd> y) ?x =\n                    conjugate (\\<lambda>x. x \\<lhd> z)\n                     (conjugate (\\<lambda>z. z \\<lhd> y) ?x)\n\ngoal (1 subgoal):\n 1. x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z", "by auto"], ["proof (state)\nthis:\n  x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma res_assoc_iff3: \"(\\<forall>x y z. x\\<cdot>(y\\<cdot>z) = (x\\<cdot>y)\\<cdot>z) \\<longleftrightarrow> (\\<forall>x y z. (x \\<rhd> y) \\<lhd> z = x \\<rhd> (y \\<lhd> z))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x y z. x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z) =\n    (\\<forall>x y z. x \\<rhd> y \\<lhd> z = x \\<rhd> (y \\<lhd> z))", "proof safe"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y z.\n       \\<forall>x y z.\n          x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z \\<Longrightarrow>\n       x \\<rhd> y \\<lhd> z = x \\<rhd> (y \\<lhd> z)\n 2. \\<And>x y z.\n       \\<forall>x y z.\n          x \\<rhd> y \\<lhd> z = x \\<rhd> (y \\<lhd> z) \\<Longrightarrow>\n       x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z", "fix x y z"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y z.\n       \\<forall>x y z.\n          x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z \\<Longrightarrow>\n       x \\<rhd> y \\<lhd> z = x \\<rhd> (y \\<lhd> z)\n 2. \\<And>x y z.\n       \\<forall>x y z.\n          x \\<rhd> y \\<lhd> z = x \\<rhd> (y \\<lhd> z) \\<Longrightarrow>\n       x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z", "assume \"\\<forall>x y z. x\\<cdot>(y\\<cdot>z) = (x\\<cdot>y)\\<cdot>z\""], ["proof (state)\nthis:\n  \\<forall>x y z. x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z\n\ngoal (2 subgoals):\n 1. \\<And>x y z.\n       \\<forall>x y z.\n          x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z \\<Longrightarrow>\n       x \\<rhd> y \\<lhd> z = x \\<rhd> (y \\<lhd> z)\n 2. \\<And>x y z.\n       \\<forall>x y z.\n          x \\<rhd> y \\<lhd> z = x \\<rhd> (y \\<lhd> z) \\<Longrightarrow>\n       x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z", "thus \"(x \\<rhd> y) \\<lhd> z = x \\<rhd> (y \\<lhd> z)\""], ["proof (prove)\nusing this:\n  \\<forall>x y z. x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z\n\ngoal (1 subgoal):\n 1. x \\<rhd> y \\<lhd> z = x \\<rhd> (y \\<lhd> z)", "using conjugate_comp_ext[of \"\\<lambda>u. x\\<cdot>u\" \"\\<lambda>u. u\\<cdot>z\"] and\n    conjugate_comp_ext[of \"\\<lambda>u. u\\<cdot>z\" \"\\<lambda>u. x\\<cdot>u\", symmetric]"], ["proof (prove)\nusing this:\n  \\<forall>x y z. x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z\n  \\<lbrakk>residuated ((\\<cdot>) x);\n   residuated (\\<lambda>u. u \\<cdot> z)\\<rbrakk>\n  \\<Longrightarrow> conjugate (\\<lambda>xa. x \\<cdot> (xa \\<cdot> z)) ?x =\n                    conjugate (\\<lambda>u. u \\<cdot> z)\n                     (conjugate ((\\<cdot>) x) ?x)\n  \\<lbrakk>residuated (\\<lambda>u. u \\<cdot> z);\n   residuated ((\\<cdot>) x)\\<rbrakk>\n  \\<Longrightarrow> conjugate ((\\<cdot>) x)\n                     (conjugate (\\<lambda>u. u \\<cdot> z) ?x) =\n                    conjugate (\\<lambda>xa. x \\<cdot> xa \\<cdot> z) ?x\n\ngoal (1 subgoal):\n 1. x \\<rhd> y \\<lhd> z = x \\<rhd> (y \\<lhd> z)", "by auto"], ["proof (state)\nthis:\n  x \\<rhd> y \\<lhd> z = x \\<rhd> (y \\<lhd> z)\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<forall>x y z.\n          x \\<rhd> y \\<lhd> z = x \\<rhd> (y \\<lhd> z) \\<Longrightarrow>\n       x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<forall>x y z.\n          x \\<rhd> y \\<lhd> z = x \\<rhd> (y \\<lhd> z) \\<Longrightarrow>\n       x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z", "fix x y z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<forall>x y z.\n          x \\<rhd> y \\<lhd> z = x \\<rhd> (y \\<lhd> z) \\<Longrightarrow>\n       x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z", "assume \"\\<forall>x y z. (x \\<rhd> y) \\<lhd> z = x \\<rhd> (y \\<lhd> z)\""], ["proof (state)\nthis:\n  \\<forall>x y z. x \\<rhd> y \\<lhd> z = x \\<rhd> (y \\<lhd> z)\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<forall>x y z.\n          x \\<rhd> y \\<lhd> z = x \\<rhd> (y \\<lhd> z) \\<Longrightarrow>\n       x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z", "thus \"x\\<cdot>(y\\<cdot>z) = (x\\<cdot>y)\\<cdot>z\""], ["proof (prove)\nusing this:\n  \\<forall>x y z. x \\<rhd> y \\<lhd> z = x \\<rhd> (y \\<lhd> z)\n\ngoal (1 subgoal):\n 1. x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z", "using conjugate_comp_ext[of \"\\<lambda>u. x \\<rhd> u\" \"\\<lambda>u. u \\<lhd> z\"] and\n    conjugate_comp_ext[of \"\\<lambda>u. u \\<lhd> z\" \"\\<lambda>u. x \\<rhd> u\", symmetric]"], ["proof (prove)\nusing this:\n  \\<forall>x y z. x \\<rhd> y \\<lhd> z = x \\<rhd> (y \\<lhd> z)\n  \\<lbrakk>residuated ((\\<rhd>) x);\n   residuated (\\<lambda>u. u \\<lhd> z)\\<rbrakk>\n  \\<Longrightarrow> conjugate (\\<lambda>xa. x \\<rhd> (xa \\<lhd> z)) ?x =\n                    conjugate (\\<lambda>u. u \\<lhd> z)\n                     (conjugate ((\\<rhd>) x) ?x)\n  \\<lbrakk>residuated (\\<lambda>u. u \\<lhd> z);\n   residuated ((\\<rhd>) x)\\<rbrakk>\n  \\<Longrightarrow> conjugate ((\\<rhd>) x)\n                     (conjugate (\\<lambda>u. u \\<lhd> z) ?x) =\n                    conjugate (\\<lambda>xa. x \\<rhd> xa \\<lhd> z) ?x\n\ngoal (1 subgoal):\n 1. x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z", "by auto"], ["proof (state)\nthis:\n  x \\<cdot> (y \\<cdot> z) = x \\<cdot> y \\<cdot> z\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(* residuated_boolean_algebra *)"], ["", "class unital_residuated_boolean = residuated_boolean_algebra + one +\n  assumes mult_onel [simp]: \"x\\<cdot>1 = x\"\n  and mult_oner [simp]: \"1\\<cdot>x = x\"\nbegin"], ["", "text \\<open>\n  The following equivalences are taken from J{\\'o}sson and Tsinakis.\n\\<close>"], ["", "lemma jonsson1a: \"(\\<exists>f. \\<forall>x y. x \\<rhd> y = f(x)\\<cdot>y) \\<longleftrightarrow> (\\<forall>x y. x \\<rhd> y = (x \\<rhd> 1)\\<cdot>y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>f. \\<forall>x y. x \\<rhd> y = f x \\<cdot> y) =\n    (\\<forall>x y. x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y)", "apply standard"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<exists>f. \\<forall>x y. x \\<rhd> y = f x \\<cdot> y \\<Longrightarrow>\n    \\<forall>x y. x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y\n 2. \\<forall>x y.\n       x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y \\<Longrightarrow>\n    \\<exists>f. \\<forall>x y. x \\<rhd> y = f x \\<cdot> y", "apply force"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y.\n       x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y \\<Longrightarrow>\n    \\<exists>f. \\<forall>x y. x \\<rhd> y = f x \\<cdot> y", "apply (rule_tac x=\"\\<lambda>x. x \\<rhd> 1\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y.\n       x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y \\<Longrightarrow>\n    \\<forall>x y. x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y", "apply force"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma jonsson1b: \"(\\<forall>x y. x \\<rhd> y = (x \\<rhd> 1)\\<cdot>y) \\<longleftrightarrow> (\\<forall>x y. x\\<cdot>y = (x \\<rhd> 1) \\<rhd> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x y. x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y) =\n    (\\<forall>x y. x \\<cdot> y = x \\<rhd> (1::'a) \\<rhd> y)", "proof safe"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y \\<Longrightarrow>\n       x \\<cdot> y = x \\<rhd> (1::'a) \\<rhd> y\n 2. \\<And>x y.\n       \\<forall>x y.\n          x \\<cdot> y = x \\<rhd> (1::'a) \\<rhd> y \\<Longrightarrow>\n       x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y", "fix x y"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y \\<Longrightarrow>\n       x \\<cdot> y = x \\<rhd> (1::'a) \\<rhd> y\n 2. \\<And>x y.\n       \\<forall>x y.\n          x \\<cdot> y = x \\<rhd> (1::'a) \\<rhd> y \\<Longrightarrow>\n       x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y", "assume \"\\<forall>x y. x \\<rhd> y = (x \\<rhd> 1)\\<cdot>y\""], ["proof (state)\nthis:\n  \\<forall>x y. x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y \\<Longrightarrow>\n       x \\<cdot> y = x \\<rhd> (1::'a) \\<rhd> y\n 2. \\<And>x y.\n       \\<forall>x y.\n          x \\<cdot> y = x \\<rhd> (1::'a) \\<rhd> y \\<Longrightarrow>\n       x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y", "hence \"conjugate (\\<lambda>y. x \\<rhd> y) = conjugate (\\<lambda>y. (x \\<rhd> 1)\\<cdot>y)\""], ["proof (prove)\nusing this:\n  \\<forall>x y. x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y\n\ngoal (1 subgoal):\n 1. conjugate ((\\<rhd>) x) = conjugate ((\\<cdot>) (x \\<rhd> (1::'a)))", "by metis"], ["proof (state)\nthis:\n  conjugate ((\\<rhd>) x) = conjugate ((\\<cdot>) (x \\<rhd> (1::'a)))\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y \\<Longrightarrow>\n       x \\<cdot> y = x \\<rhd> (1::'a) \\<rhd> y\n 2. \\<And>x y.\n       \\<forall>x y.\n          x \\<cdot> y = x \\<rhd> (1::'a) \\<rhd> y \\<Longrightarrow>\n       x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y", "thus \"x\\<cdot>y = (x \\<rhd> 1) \\<rhd> y\""], ["proof (prove)\nusing this:\n  conjugate ((\\<rhd>) x) = conjugate ((\\<cdot>) (x \\<rhd> (1::'a)))\n\ngoal (1 subgoal):\n 1. x \\<cdot> y = x \\<rhd> (1::'a) \\<rhd> y", "by simp"], ["proof (state)\nthis:\n  x \\<cdot> y = x \\<rhd> (1::'a) \\<rhd> y\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<cdot> y = x \\<rhd> (1::'a) \\<rhd> y \\<Longrightarrow>\n       x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<cdot> y = x \\<rhd> (1::'a) \\<rhd> y \\<Longrightarrow>\n       x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<cdot> y = x \\<rhd> (1::'a) \\<rhd> y \\<Longrightarrow>\n       x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y", "assume \"\\<forall>x y. x \\<cdot> y = x \\<rhd> 1 \\<rhd> y\""], ["proof (state)\nthis:\n  \\<forall>x y. x \\<cdot> y = x \\<rhd> (1::'a) \\<rhd> y\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<cdot> y = x \\<rhd> (1::'a) \\<rhd> y \\<Longrightarrow>\n       x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y", "thus \"x \\<rhd> y = (x \\<rhd> 1) \\<cdot> y\""], ["proof (prove)\nusing this:\n  \\<forall>x y. x \\<cdot> y = x \\<rhd> (1::'a) \\<rhd> y\n\ngoal (1 subgoal):\n 1. x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y", "by (metis mult_onel)"], ["proof (state)\nthis:\n  x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma jonsson1c: \"(\\<forall>x y. x \\<rhd> y = (x \\<rhd> 1)\\<cdot>y) \\<longleftrightarrow> (\\<forall>x y. y \\<lhd> x = 1 \\<lhd> (x \\<lhd> y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x y. x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y) =\n    (\\<forall>x y. y \\<lhd> x = (1::'a) \\<lhd> (x \\<lhd> y))", "proof safe"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y \\<Longrightarrow>\n       y \\<lhd> x = (1::'a) \\<lhd> (x \\<lhd> y)\n 2. \\<And>x y.\n       \\<forall>x y.\n          y \\<lhd> x = (1::'a) \\<lhd> (x \\<lhd> y) \\<Longrightarrow>\n       x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y", "fix x y"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y \\<Longrightarrow>\n       y \\<lhd> x = (1::'a) \\<lhd> (x \\<lhd> y)\n 2. \\<And>x y.\n       \\<forall>x y.\n          y \\<lhd> x = (1::'a) \\<lhd> (x \\<lhd> y) \\<Longrightarrow>\n       x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y", "assume \"\\<forall>x y. x \\<rhd> y = (x \\<rhd> 1)\\<cdot>y\""], ["proof (state)\nthis:\n  \\<forall>x y. x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y \\<Longrightarrow>\n       y \\<lhd> x = (1::'a) \\<lhd> (x \\<lhd> y)\n 2. \\<And>x y.\n       \\<forall>x y.\n          y \\<lhd> x = (1::'a) \\<lhd> (x \\<lhd> y) \\<Longrightarrow>\n       x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y", "hence \"(\\<lambda>x. x \\<rhd> y) = (\\<lambda>x. (x \\<rhd> 1)\\<cdot>y)\""], ["proof (prove)\nusing this:\n  \\<forall>x y. x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. x \\<rhd> y) = (\\<lambda>x. (x \\<rhd> (1::'a)) \\<cdot> y)", "by metis"], ["proof (state)\nthis:\n  (\\<lambda>x. x \\<rhd> y) = (\\<lambda>x. (x \\<rhd> (1::'a)) \\<cdot> y)\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y \\<Longrightarrow>\n       y \\<lhd> x = (1::'a) \\<lhd> (x \\<lhd> y)\n 2. \\<And>x y.\n       \\<forall>x y.\n          y \\<lhd> x = (1::'a) \\<lhd> (x \\<lhd> y) \\<Longrightarrow>\n       x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y", "hence \"(\\<lambda>x. x \\<rhd> y) = (\\<lambda>x. x\\<cdot>y) o (\\<lambda>x. x \\<rhd> 1)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. x \\<rhd> y) = (\\<lambda>x. (x \\<rhd> (1::'a)) \\<cdot> y)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. x \\<rhd> y) =\n    (\\<lambda>x. x \\<cdot> y) \\<circ> (\\<lambda>x. x \\<rhd> (1::'a))", "by force"], ["proof (state)\nthis:\n  (\\<lambda>x. x \\<rhd> y) =\n  (\\<lambda>x. x \\<cdot> y) \\<circ> (\\<lambda>x. x \\<rhd> (1::'a))\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y \\<Longrightarrow>\n       y \\<lhd> x = (1::'a) \\<lhd> (x \\<lhd> y)\n 2. \\<And>x y.\n       \\<forall>x y.\n          y \\<lhd> x = (1::'a) \\<lhd> (x \\<lhd> y) \\<Longrightarrow>\n       x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y", "hence \"conjugate (\\<lambda>x. y \\<lhd> x) = (\\<lambda>x. x\\<cdot>y) o conjugate (\\<lambda>x. 1 \\<lhd> x)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. x \\<rhd> y) =\n  (\\<lambda>x. x \\<cdot> y) \\<circ> (\\<lambda>x. x \\<rhd> (1::'a))\n\ngoal (1 subgoal):\n 1. conjugate ((\\<lhd>) y) =\n    (\\<lambda>x. x \\<cdot> y) \\<circ> conjugate ((\\<lhd>) (1::'a))", "by simp"], ["proof (state)\nthis:\n  conjugate ((\\<lhd>) y) =\n  (\\<lambda>x. x \\<cdot> y) \\<circ> conjugate ((\\<lhd>) (1::'a))\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y \\<Longrightarrow>\n       y \\<lhd> x = (1::'a) \\<lhd> (x \\<lhd> y)\n 2. \\<And>x y.\n       \\<forall>x y.\n          y \\<lhd> x = (1::'a) \\<lhd> (x \\<lhd> y) \\<Longrightarrow>\n       x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y", "hence \"conjugate (conjugate (\\<lambda>x. y \\<lhd> x)) = conjugate ((\\<lambda>x. x\\<cdot>y) o conjugate (\\<lambda>x. 1 \\<lhd> x))\""], ["proof (prove)\nusing this:\n  conjugate ((\\<lhd>) y) =\n  (\\<lambda>x. x \\<cdot> y) \\<circ> conjugate ((\\<lhd>) (1::'a))\n\ngoal (1 subgoal):\n 1. conjugate (conjugate ((\\<lhd>) y)) =\n    conjugate\n     ((\\<lambda>x. x \\<cdot> y) \\<circ> conjugate ((\\<lhd>) (1::'a)))", "by simp"], ["proof (state)\nthis:\n  conjugate (conjugate ((\\<lhd>) y)) =\n  conjugate ((\\<lambda>x. x \\<cdot> y) \\<circ> conjugate ((\\<lhd>) (1::'a)))\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y \\<Longrightarrow>\n       y \\<lhd> x = (1::'a) \\<lhd> (x \\<lhd> y)\n 2. \\<And>x y.\n       \\<forall>x y.\n          y \\<lhd> x = (1::'a) \\<lhd> (x \\<lhd> y) \\<Longrightarrow>\n       x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y", "hence \"(\\<lambda>x. y \\<lhd> x) = conjugate ((\\<lambda>x. x\\<cdot>y) o conjugate (\\<lambda>x. 1 \\<lhd> x))\""], ["proof (prove)\nusing this:\n  conjugate (conjugate ((\\<lhd>) y)) =\n  conjugate ((\\<lambda>x. x \\<cdot> y) \\<circ> conjugate ((\\<lhd>) (1::'a)))\n\ngoal (1 subgoal):\n 1. (\\<lhd>) y =\n    conjugate\n     ((\\<lambda>x. x \\<cdot> y) \\<circ> conjugate ((\\<lhd>) (1::'a)))", "by simp"], ["proof (state)\nthis:\n  (\\<lhd>) y =\n  conjugate ((\\<lambda>x. x \\<cdot> y) \\<circ> conjugate ((\\<lhd>) (1::'a)))\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y \\<Longrightarrow>\n       y \\<lhd> x = (1::'a) \\<lhd> (x \\<lhd> y)\n 2. \\<And>x y.\n       \\<forall>x y.\n          y \\<lhd> x = (1::'a) \\<lhd> (x \\<lhd> y) \\<Longrightarrow>\n       x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y", "also"], ["proof (state)\nthis:\n  (\\<lhd>) y =\n  conjugate ((\\<lambda>x. x \\<cdot> y) \\<circ> conjugate ((\\<lhd>) (1::'a)))\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y \\<Longrightarrow>\n       y \\<lhd> x = (1::'a) \\<lhd> (x \\<lhd> y)\n 2. \\<And>x y.\n       \\<forall>x y.\n          y \\<lhd> x = (1::'a) \\<lhd> (x \\<lhd> y) \\<Longrightarrow>\n       x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y", "have \"... = conjugate (conjugate (\\<lambda>x. 1 \\<lhd> x)) o conjugate (\\<lambda>x. x\\<cdot>y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conjugate\n     ((\\<lambda>x. x \\<cdot> y) \\<circ> conjugate ((\\<lhd>) (1::'a))) =\n    conjugate (conjugate ((\\<lhd>) (1::'a))) \\<circ>\n    conjugate (\\<lambda>x. x \\<cdot> y)", "by (subst conjugate_comp[symmetric]) simp_all"], ["proof (state)\nthis:\n  conjugate\n   ((\\<lambda>x. x \\<cdot> y) \\<circ> conjugate ((\\<lhd>) (1::'a))) =\n  conjugate (conjugate ((\\<lhd>) (1::'a))) \\<circ>\n  conjugate (\\<lambda>x. x \\<cdot> y)\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y \\<Longrightarrow>\n       y \\<lhd> x = (1::'a) \\<lhd> (x \\<lhd> y)\n 2. \\<And>x y.\n       \\<forall>x y.\n          y \\<lhd> x = (1::'a) \\<lhd> (x \\<lhd> y) \\<Longrightarrow>\n       x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y", "finally"], ["proof (chain)\npicking this:\n  (\\<lhd>) y =\n  conjugate (conjugate ((\\<lhd>) (1::'a))) \\<circ>\n  conjugate (\\<lambda>x. x \\<cdot> y)", "show \"y \\<lhd> x = 1 \\<lhd> (x \\<lhd> y)\""], ["proof (prove)\nusing this:\n  (\\<lhd>) y =\n  conjugate (conjugate ((\\<lhd>) (1::'a))) \\<circ>\n  conjugate (\\<lambda>x. x \\<cdot> y)\n\ngoal (1 subgoal):\n 1. y \\<lhd> x = (1::'a) \\<lhd> (x \\<lhd> y)", "by simp"], ["proof (state)\nthis:\n  y \\<lhd> x = (1::'a) \\<lhd> (x \\<lhd> y)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x y.\n          y \\<lhd> x = (1::'a) \\<lhd> (x \\<lhd> y) \\<Longrightarrow>\n       x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x y.\n          y \\<lhd> x = (1::'a) \\<lhd> (x \\<lhd> y) \\<Longrightarrow>\n       x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x y.\n          y \\<lhd> x = (1::'a) \\<lhd> (x \\<lhd> y) \\<Longrightarrow>\n       x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y", "assume \"\\<forall>x y. y \\<lhd> x = 1 \\<lhd> (x \\<lhd> y)\""], ["proof (state)\nthis:\n  \\<forall>x y. y \\<lhd> x = (1::'a) \\<lhd> (x \\<lhd> y)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x y.\n          y \\<lhd> x = (1::'a) \\<lhd> (x \\<lhd> y) \\<Longrightarrow>\n       x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y", "hence \"(\\<lambda>x. y \\<lhd> x) = (\\<lambda>x. 1 \\<lhd> (x \\<lhd> y))\""], ["proof (prove)\nusing this:\n  \\<forall>x y. y \\<lhd> x = (1::'a) \\<lhd> (x \\<lhd> y)\n\ngoal (1 subgoal):\n 1. (\\<lhd>) y = (\\<lambda>x. (1::'a) \\<lhd> (x \\<lhd> y))", "by metis"], ["proof (state)\nthis:\n  (\\<lhd>) y = (\\<lambda>x. (1::'a) \\<lhd> (x \\<lhd> y))\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x y.\n          y \\<lhd> x = (1::'a) \\<lhd> (x \\<lhd> y) \\<Longrightarrow>\n       x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y", "hence \"(\\<lambda>x. y \\<lhd> x) = (\\<lambda>x. 1 \\<lhd> x) o conjugate (\\<lambda>x. x\\<cdot>y)\""], ["proof (prove)\nusing this:\n  (\\<lhd>) y = (\\<lambda>x. (1::'a) \\<lhd> (x \\<lhd> y))\n\ngoal (1 subgoal):\n 1. (\\<lhd>) y =\n    (\\<lhd>) (1::'a) \\<circ> conjugate (\\<lambda>x. x \\<cdot> y)", "by force"], ["proof (state)\nthis:\n  (\\<lhd>) y = (\\<lhd>) (1::'a) \\<circ> conjugate (\\<lambda>x. x \\<cdot> y)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x y.\n          y \\<lhd> x = (1::'a) \\<lhd> (x \\<lhd> y) \\<Longrightarrow>\n       x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y", "hence \"conjugate (\\<lambda>x. y \\<lhd> x) = conjugate ((\\<lambda>x. 1 \\<lhd> x) o conjugate (\\<lambda>x. x\\<cdot>y))\""], ["proof (prove)\nusing this:\n  (\\<lhd>) y = (\\<lhd>) (1::'a) \\<circ> conjugate (\\<lambda>x. x \\<cdot> y)\n\ngoal (1 subgoal):\n 1. conjugate ((\\<lhd>) y) =\n    conjugate ((\\<lhd>) (1::'a) \\<circ> conjugate (\\<lambda>x. x \\<cdot> y))", "by metis"], ["proof (state)\nthis:\n  conjugate ((\\<lhd>) y) =\n  conjugate ((\\<lhd>) (1::'a) \\<circ> conjugate (\\<lambda>x. x \\<cdot> y))\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x y.\n          y \\<lhd> x = (1::'a) \\<lhd> (x \\<lhd> y) \\<Longrightarrow>\n       x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y", "also"], ["proof (state)\nthis:\n  conjugate ((\\<lhd>) y) =\n  conjugate ((\\<lhd>) (1::'a) \\<circ> conjugate (\\<lambda>x. x \\<cdot> y))\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x y.\n          y \\<lhd> x = (1::'a) \\<lhd> (x \\<lhd> y) \\<Longrightarrow>\n       x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y", "have \"... = conjugate (conjugate (\\<lambda>x. x\\<cdot>y)) o conjugate (\\<lambda>x. 1 \\<lhd> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conjugate\n     ((\\<lhd>) (1::'a) \\<circ> conjugate (\\<lambda>x. x \\<cdot> y)) =\n    conjugate (conjugate (\\<lambda>x. x \\<cdot> y)) \\<circ>\n    conjugate ((\\<lhd>) (1::'a))", "by (subst conjugate_comp[symmetric]) simp_all"], ["proof (state)\nthis:\n  conjugate ((\\<lhd>) (1::'a) \\<circ> conjugate (\\<lambda>x. x \\<cdot> y)) =\n  conjugate (conjugate (\\<lambda>x. x \\<cdot> y)) \\<circ>\n  conjugate ((\\<lhd>) (1::'a))\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x y.\n          y \\<lhd> x = (1::'a) \\<lhd> (x \\<lhd> y) \\<Longrightarrow>\n       x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y", "finally"], ["proof (chain)\npicking this:\n  conjugate ((\\<lhd>) y) =\n  conjugate (conjugate (\\<lambda>x. x \\<cdot> y)) \\<circ>\n  conjugate ((\\<lhd>) (1::'a))", "have \"(\\<lambda>x. x \\<rhd> y) = (\\<lambda>x. x\\<cdot>y) o (\\<lambda>x. x \\<rhd> 1)\""], ["proof (prove)\nusing this:\n  conjugate ((\\<lhd>) y) =\n  conjugate (conjugate (\\<lambda>x. x \\<cdot> y)) \\<circ>\n  conjugate ((\\<lhd>) (1::'a))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. x \\<rhd> y) =\n    (\\<lambda>x. x \\<cdot> y) \\<circ> (\\<lambda>x. x \\<rhd> (1::'a))", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>x. x \\<rhd> y) =\n  (\\<lambda>x. x \\<cdot> y) \\<circ> (\\<lambda>x. x \\<rhd> (1::'a))\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x y.\n          y \\<lhd> x = (1::'a) \\<lhd> (x \\<lhd> y) \\<Longrightarrow>\n       x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y", "hence \"(\\<lambda>x. x \\<rhd> y) = (\\<lambda>x. (x \\<rhd> 1) \\<cdot> y)\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. x \\<rhd> y) =\n  (\\<lambda>x. x \\<cdot> y) \\<circ> (\\<lambda>x. x \\<rhd> (1::'a))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. x \\<rhd> y) = (\\<lambda>x. (x \\<rhd> (1::'a)) \\<cdot> y)", "by (simp add: comp_def)"], ["proof (state)\nthis:\n  (\\<lambda>x. x \\<rhd> y) = (\\<lambda>x. (x \\<rhd> (1::'a)) \\<cdot> y)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x y.\n          y \\<lhd> x = (1::'a) \\<lhd> (x \\<lhd> y) \\<Longrightarrow>\n       x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y", "thus \"x \\<rhd> y = (x \\<rhd> 1) \\<cdot> y\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. x \\<rhd> y) = (\\<lambda>x. (x \\<rhd> (1::'a)) \\<cdot> y)\n\ngoal (1 subgoal):\n 1. x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y", "by metis"], ["proof (state)\nthis:\n  x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma jonsson2a: \"(\\<exists>g. \\<forall>x y. x \\<lhd> y = x\\<cdot>g(y)) \\<longleftrightarrow> (\\<forall>x y. x \\<lhd> y = x\\<cdot>(1 \\<lhd> y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>g. \\<forall>x y. x \\<lhd> y = x \\<cdot> g y) =\n    (\\<forall>x y. x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y))", "apply standard"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<exists>g. \\<forall>x y. x \\<lhd> y = x \\<cdot> g y \\<Longrightarrow>\n    \\<forall>x y. x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)\n 2. \\<forall>x y.\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y) \\<Longrightarrow>\n    \\<exists>g. \\<forall>x y. x \\<lhd> y = x \\<cdot> g y", "apply force"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y.\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y) \\<Longrightarrow>\n    \\<exists>g. \\<forall>x y. x \\<lhd> y = x \\<cdot> g y", "apply (rule_tac x=\"\\<lambda>x. 1 \\<lhd> x\" in exI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x y.\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y) \\<Longrightarrow>\n    \\<forall>x y. x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "apply force"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma jonsson2b: \"(\\<forall>x y. x \\<lhd> y = x\\<cdot>(1 \\<lhd> y)) \\<longleftrightarrow> (\\<forall>x y. x\\<cdot>y = x \\<lhd> (1 \\<lhd> y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x y. x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)) =\n    (\\<forall>x y. x \\<cdot> y = x \\<lhd> ((1::'a) \\<lhd> y))", "proof safe"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y) \\<Longrightarrow>\n       x \\<cdot> y = x \\<lhd> ((1::'a) \\<lhd> y)\n 2. \\<And>x y.\n       \\<forall>x y.\n          x \\<cdot> y = x \\<lhd> ((1::'a) \\<lhd> y) \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "fix x y"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y) \\<Longrightarrow>\n       x \\<cdot> y = x \\<lhd> ((1::'a) \\<lhd> y)\n 2. \\<And>x y.\n       \\<forall>x y.\n          x \\<cdot> y = x \\<lhd> ((1::'a) \\<lhd> y) \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "assume \"\\<forall>x y. x \\<lhd> y = x\\<cdot>(1 \\<lhd> y)\""], ["proof (state)\nthis:\n  \\<forall>x y. x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y) \\<Longrightarrow>\n       x \\<cdot> y = x \\<lhd> ((1::'a) \\<lhd> y)\n 2. \\<And>x y.\n       \\<forall>x y.\n          x \\<cdot> y = x \\<lhd> ((1::'a) \\<lhd> y) \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "hence \"conjugate (\\<lambda>x. x \\<lhd> y) = conjugate (\\<lambda>x. x\\<cdot>(1 \\<lhd> y))\""], ["proof (prove)\nusing this:\n  \\<forall>x y. x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)\n\ngoal (1 subgoal):\n 1. conjugate (\\<lambda>x. x \\<lhd> y) =\n    conjugate (\\<lambda>x. x \\<cdot> ((1::'a) \\<lhd> y))", "by metis"], ["proof (state)\nthis:\n  conjugate (\\<lambda>x. x \\<lhd> y) =\n  conjugate (\\<lambda>x. x \\<cdot> ((1::'a) \\<lhd> y))\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y) \\<Longrightarrow>\n       x \\<cdot> y = x \\<lhd> ((1::'a) \\<lhd> y)\n 2. \\<And>x y.\n       \\<forall>x y.\n          x \\<cdot> y = x \\<lhd> ((1::'a) \\<lhd> y) \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "thus \"x\\<cdot>y = x \\<lhd> (1 \\<lhd> y)\""], ["proof (prove)\nusing this:\n  conjugate (\\<lambda>x. x \\<lhd> y) =\n  conjugate (\\<lambda>x. x \\<cdot> ((1::'a) \\<lhd> y))\n\ngoal (1 subgoal):\n 1. x \\<cdot> y = x \\<lhd> ((1::'a) \\<lhd> y)", "by simp metis"], ["proof (state)\nthis:\n  x \\<cdot> y = x \\<lhd> ((1::'a) \\<lhd> y)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<cdot> y = x \\<lhd> ((1::'a) \\<lhd> y) \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<cdot> y = x \\<lhd> ((1::'a) \\<lhd> y) \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<cdot> y = x \\<lhd> ((1::'a) \\<lhd> y) \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "assume \"\\<forall>x y. x\\<cdot>y = x \\<lhd> (1 \\<lhd> y)\""], ["proof (state)\nthis:\n  \\<forall>x y. x \\<cdot> y = x \\<lhd> ((1::'a) \\<lhd> y)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<cdot> y = x \\<lhd> ((1::'a) \\<lhd> y) \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "hence \"(\\<lambda>x. x\\<cdot>y) = (\\<lambda>x. x \\<lhd> (1 \\<lhd> y))\""], ["proof (prove)\nusing this:\n  \\<forall>x y. x \\<cdot> y = x \\<lhd> ((1::'a) \\<lhd> y)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. x \\<cdot> y) = (\\<lambda>x. x \\<lhd> ((1::'a) \\<lhd> y))", "by metis"], ["proof (state)\nthis:\n  (\\<lambda>x. x \\<cdot> y) = (\\<lambda>x. x \\<lhd> ((1::'a) \\<lhd> y))\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<cdot> y = x \\<lhd> ((1::'a) \\<lhd> y) \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "hence \"conjugate (\\<lambda>x. x\\<cdot>y) = conjugate (\\<lambda>x. x \\<lhd> (1 \\<lhd> y))\""], ["proof (prove)\nusing this:\n  (\\<lambda>x. x \\<cdot> y) = (\\<lambda>x. x \\<lhd> ((1::'a) \\<lhd> y))\n\ngoal (1 subgoal):\n 1. conjugate (\\<lambda>x. x \\<cdot> y) =\n    conjugate (\\<lambda>x. x \\<lhd> ((1::'a) \\<lhd> y))", "by metis"], ["proof (state)\nthis:\n  conjugate (\\<lambda>x. x \\<cdot> y) =\n  conjugate (\\<lambda>x. x \\<lhd> ((1::'a) \\<lhd> y))\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<cdot> y = x \\<lhd> ((1::'a) \\<lhd> y) \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "thus \"x \\<lhd> y = x \\<cdot> (1 \\<lhd> y)\""], ["proof (prove)\nusing this:\n  conjugate (\\<lambda>x. x \\<cdot> y) =\n  conjugate (\\<lambda>x. x \\<lhd> ((1::'a) \\<lhd> y))\n\ngoal (1 subgoal):\n 1. x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "by simp metis"], ["proof (state)\nthis:\n  x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma jonsson2c: \"(\\<forall>x y. x \\<lhd> y = x\\<cdot>(1 \\<lhd> y)) \\<longleftrightarrow> (\\<forall>x y. y \\<rhd> x = (x \\<rhd> y) \\<rhd> 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x y. x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)) =\n    (\\<forall>x y. y \\<rhd> x = x \\<rhd> y \\<rhd> (1::'a))", "proof safe"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y) \\<Longrightarrow>\n       y \\<rhd> x = x \\<rhd> y \\<rhd> (1::'a)\n 2. \\<And>x y.\n       \\<forall>x y.\n          y \\<rhd> x = x \\<rhd> y \\<rhd> (1::'a) \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "fix x y"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y) \\<Longrightarrow>\n       y \\<rhd> x = x \\<rhd> y \\<rhd> (1::'a)\n 2. \\<And>x y.\n       \\<forall>x y.\n          y \\<rhd> x = x \\<rhd> y \\<rhd> (1::'a) \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "assume \"\\<forall>x y. x \\<lhd> y = x\\<cdot>(1 \\<lhd> y)\""], ["proof (state)\nthis:\n  \\<forall>x y. x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y) \\<Longrightarrow>\n       y \\<rhd> x = x \\<rhd> y \\<rhd> (1::'a)\n 2. \\<And>x y.\n       \\<forall>x y.\n          y \\<rhd> x = x \\<rhd> y \\<rhd> (1::'a) \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "hence \"(\\<lambda>y. x \\<lhd> y) = (\\<lambda>y. x\\<cdot>(1 \\<lhd> y))\""], ["proof (prove)\nusing this:\n  \\<forall>x y. x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)\n\ngoal (1 subgoal):\n 1. (\\<lhd>) x = (\\<lambda>y. x \\<cdot> ((1::'a) \\<lhd> y))", "by metis"], ["proof (state)\nthis:\n  (\\<lhd>) x = (\\<lambda>y. x \\<cdot> ((1::'a) \\<lhd> y))\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y) \\<Longrightarrow>\n       y \\<rhd> x = x \\<rhd> y \\<rhd> (1::'a)\n 2. \\<And>x y.\n       \\<forall>x y.\n          y \\<rhd> x = x \\<rhd> y \\<rhd> (1::'a) \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "hence \"(\\<lambda>y. x \\<lhd> y) = (\\<lambda>y. x\\<cdot>y) o (\\<lambda>y. 1 \\<lhd> y)\""], ["proof (prove)\nusing this:\n  (\\<lhd>) x = (\\<lambda>y. x \\<cdot> ((1::'a) \\<lhd> y))\n\ngoal (1 subgoal):\n 1. (\\<lhd>) x = (\\<cdot>) x \\<circ> (\\<lhd>) (1::'a)", "by force"], ["proof (state)\nthis:\n  (\\<lhd>) x = (\\<cdot>) x \\<circ> (\\<lhd>) (1::'a)\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y) \\<Longrightarrow>\n       y \\<rhd> x = x \\<rhd> y \\<rhd> (1::'a)\n 2. \\<And>x y.\n       \\<forall>x y.\n          y \\<rhd> x = x \\<rhd> y \\<rhd> (1::'a) \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "hence \"conjugate (\\<lambda>y. y \\<rhd> x) = (\\<lambda>y. x\\<cdot>y) o conjugate (\\<lambda>y. y \\<rhd> 1)\""], ["proof (prove)\nusing this:\n  (\\<lhd>) x = (\\<cdot>) x \\<circ> (\\<lhd>) (1::'a)\n\ngoal (1 subgoal):\n 1. conjugate (\\<lambda>y. y \\<rhd> x) =\n    (\\<cdot>) x \\<circ> conjugate (\\<lambda>y. y \\<rhd> (1::'a))", "by force"], ["proof (state)\nthis:\n  conjugate (\\<lambda>y. y \\<rhd> x) =\n  (\\<cdot>) x \\<circ> conjugate (\\<lambda>y. y \\<rhd> (1::'a))\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y) \\<Longrightarrow>\n       y \\<rhd> x = x \\<rhd> y \\<rhd> (1::'a)\n 2. \\<And>x y.\n       \\<forall>x y.\n          y \\<rhd> x = x \\<rhd> y \\<rhd> (1::'a) \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "hence \"conjugate (conjugate (\\<lambda>y. y \\<rhd> x)) = conjugate ((\\<lambda>y. x\\<cdot>y) o conjugate (\\<lambda>y. y \\<rhd> 1))\""], ["proof (prove)\nusing this:\n  conjugate (\\<lambda>y. y \\<rhd> x) =\n  (\\<cdot>) x \\<circ> conjugate (\\<lambda>y. y \\<rhd> (1::'a))\n\ngoal (1 subgoal):\n 1. conjugate (conjugate (\\<lambda>y. y \\<rhd> x)) =\n    conjugate ((\\<cdot>) x \\<circ> conjugate (\\<lambda>y. y \\<rhd> (1::'a)))", "by metis"], ["proof (state)\nthis:\n  conjugate (conjugate (\\<lambda>y. y \\<rhd> x)) =\n  conjugate ((\\<cdot>) x \\<circ> conjugate (\\<lambda>y. y \\<rhd> (1::'a)))\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y) \\<Longrightarrow>\n       y \\<rhd> x = x \\<rhd> y \\<rhd> (1::'a)\n 2. \\<And>x y.\n       \\<forall>x y.\n          y \\<rhd> x = x \\<rhd> y \\<rhd> (1::'a) \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "hence \"(\\<lambda>y. y \\<rhd> x) = conjugate ((\\<lambda>y. x\\<cdot>y) o conjugate (\\<lambda>y. y \\<rhd> 1))\""], ["proof (prove)\nusing this:\n  conjugate (conjugate (\\<lambda>y. y \\<rhd> x)) =\n  conjugate ((\\<cdot>) x \\<circ> conjugate (\\<lambda>y. y \\<rhd> (1::'a)))\n\ngoal (1 subgoal):\n 1. (\\<lambda>y. y \\<rhd> x) =\n    conjugate ((\\<cdot>) x \\<circ> conjugate (\\<lambda>y. y \\<rhd> (1::'a)))", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>y. y \\<rhd> x) =\n  conjugate ((\\<cdot>) x \\<circ> conjugate (\\<lambda>y. y \\<rhd> (1::'a)))\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y) \\<Longrightarrow>\n       y \\<rhd> x = x \\<rhd> y \\<rhd> (1::'a)\n 2. \\<And>x y.\n       \\<forall>x y.\n          y \\<rhd> x = x \\<rhd> y \\<rhd> (1::'a) \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "also"], ["proof (state)\nthis:\n  (\\<lambda>y. y \\<rhd> x) =\n  conjugate ((\\<cdot>) x \\<circ> conjugate (\\<lambda>y. y \\<rhd> (1::'a)))\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y) \\<Longrightarrow>\n       y \\<rhd> x = x \\<rhd> y \\<rhd> (1::'a)\n 2. \\<And>x y.\n       \\<forall>x y.\n          y \\<rhd> x = x \\<rhd> y \\<rhd> (1::'a) \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "have \"... = conjugate (conjugate (\\<lambda>y. y \\<rhd> 1)) o conjugate (\\<lambda>y. x\\<cdot>y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conjugate\n     ((\\<cdot>) x \\<circ> conjugate (\\<lambda>y. y \\<rhd> (1::'a))) =\n    conjugate (conjugate (\\<lambda>y. y \\<rhd> (1::'a))) \\<circ>\n    conjugate ((\\<cdot>) x)", "by (subst conjugate_comp[symmetric]) simp_all"], ["proof (state)\nthis:\n  conjugate ((\\<cdot>) x \\<circ> conjugate (\\<lambda>y. y \\<rhd> (1::'a))) =\n  conjugate (conjugate (\\<lambda>y. y \\<rhd> (1::'a))) \\<circ>\n  conjugate ((\\<cdot>) x)\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y) \\<Longrightarrow>\n       y \\<rhd> x = x \\<rhd> y \\<rhd> (1::'a)\n 2. \\<And>x y.\n       \\<forall>x y.\n          y \\<rhd> x = x \\<rhd> y \\<rhd> (1::'a) \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "finally"], ["proof (chain)\npicking this:\n  (\\<lambda>y. y \\<rhd> x) =\n  conjugate (conjugate (\\<lambda>y. y \\<rhd> (1::'a))) \\<circ>\n  conjugate ((\\<cdot>) x)", "have \"(\\<lambda>y. y \\<rhd> x) = (\\<lambda>y. x \\<rhd> y \\<rhd> 1)\""], ["proof (prove)\nusing this:\n  (\\<lambda>y. y \\<rhd> x) =\n  conjugate (conjugate (\\<lambda>y. y \\<rhd> (1::'a))) \\<circ>\n  conjugate ((\\<cdot>) x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>y. y \\<rhd> x) = (\\<lambda>y. x \\<rhd> y \\<rhd> (1::'a))", "by (simp add: comp_def)"], ["proof (state)\nthis:\n  (\\<lambda>y. y \\<rhd> x) = (\\<lambda>y. x \\<rhd> y \\<rhd> (1::'a))\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y) \\<Longrightarrow>\n       y \\<rhd> x = x \\<rhd> y \\<rhd> (1::'a)\n 2. \\<And>x y.\n       \\<forall>x y.\n          y \\<rhd> x = x \\<rhd> y \\<rhd> (1::'a) \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "thus \"y \\<rhd> x = x \\<rhd> y \\<rhd> 1\""], ["proof (prove)\nusing this:\n  (\\<lambda>y. y \\<rhd> x) = (\\<lambda>y. x \\<rhd> y \\<rhd> (1::'a))\n\ngoal (1 subgoal):\n 1. y \\<rhd> x = x \\<rhd> y \\<rhd> (1::'a)", "by metis"], ["proof (state)\nthis:\n  y \\<rhd> x = x \\<rhd> y \\<rhd> (1::'a)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x y.\n          y \\<rhd> x = x \\<rhd> y \\<rhd> (1::'a) \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x y.\n          y \\<rhd> x = x \\<rhd> y \\<rhd> (1::'a) \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x y.\n          y \\<rhd> x = x \\<rhd> y \\<rhd> (1::'a) \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "assume \"\\<forall>x y. y \\<rhd> x = x \\<rhd> y \\<rhd> 1\""], ["proof (state)\nthis:\n  \\<forall>x y. y \\<rhd> x = x \\<rhd> y \\<rhd> (1::'a)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x y.\n          y \\<rhd> x = x \\<rhd> y \\<rhd> (1::'a) \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "hence \"(\\<lambda>y. y \\<rhd> x) = (\\<lambda>y. x \\<rhd> y \\<rhd> 1)\""], ["proof (prove)\nusing this:\n  \\<forall>x y. y \\<rhd> x = x \\<rhd> y \\<rhd> (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<lambda>y. y \\<rhd> x) = (\\<lambda>y. x \\<rhd> y \\<rhd> (1::'a))", "by force"], ["proof (state)\nthis:\n  (\\<lambda>y. y \\<rhd> x) = (\\<lambda>y. x \\<rhd> y \\<rhd> (1::'a))\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x y.\n          y \\<rhd> x = x \\<rhd> y \\<rhd> (1::'a) \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "hence \"(\\<lambda>y. y \\<rhd> x) = (\\<lambda>y. y \\<rhd> 1) o conjugate (\\<lambda>y. x\\<cdot>y)\""], ["proof (prove)\nusing this:\n  (\\<lambda>y. y \\<rhd> x) = (\\<lambda>y. x \\<rhd> y \\<rhd> (1::'a))\n\ngoal (1 subgoal):\n 1. (\\<lambda>y. y \\<rhd> x) =\n    (\\<lambda>y. y \\<rhd> (1::'a)) \\<circ> conjugate ((\\<cdot>) x)", "by force"], ["proof (state)\nthis:\n  (\\<lambda>y. y \\<rhd> x) =\n  (\\<lambda>y. y \\<rhd> (1::'a)) \\<circ> conjugate ((\\<cdot>) x)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x y.\n          y \\<rhd> x = x \\<rhd> y \\<rhd> (1::'a) \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "hence \"conjugate (\\<lambda>y. y \\<rhd> x) = conjugate ((\\<lambda>y. y \\<rhd> 1) o conjugate (\\<lambda>y. x\\<cdot>y))\""], ["proof (prove)\nusing this:\n  (\\<lambda>y. y \\<rhd> x) =\n  (\\<lambda>y. y \\<rhd> (1::'a)) \\<circ> conjugate ((\\<cdot>) x)\n\ngoal (1 subgoal):\n 1. conjugate (\\<lambda>y. y \\<rhd> x) =\n    conjugate\n     ((\\<lambda>y. y \\<rhd> (1::'a)) \\<circ> conjugate ((\\<cdot>) x))", "by metis"], ["proof (state)\nthis:\n  conjugate (\\<lambda>y. y \\<rhd> x) =\n  conjugate ((\\<lambda>y. y \\<rhd> (1::'a)) \\<circ> conjugate ((\\<cdot>) x))\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x y.\n          y \\<rhd> x = x \\<rhd> y \\<rhd> (1::'a) \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "also"], ["proof (state)\nthis:\n  conjugate (\\<lambda>y. y \\<rhd> x) =\n  conjugate ((\\<lambda>y. y \\<rhd> (1::'a)) \\<circ> conjugate ((\\<cdot>) x))\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x y.\n          y \\<rhd> x = x \\<rhd> y \\<rhd> (1::'a) \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "have \"... = conjugate (conjugate (\\<lambda>y. x\\<cdot>y)) o conjugate (\\<lambda>y. y \\<rhd> 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. conjugate\n     ((\\<lambda>y. y \\<rhd> (1::'a)) \\<circ> conjugate ((\\<cdot>) x)) =\n    conjugate (conjugate ((\\<cdot>) x)) \\<circ>\n    conjugate (\\<lambda>y. y \\<rhd> (1::'a))", "by (subst conjugate_comp[symmetric]) simp_all"], ["proof (state)\nthis:\n  conjugate\n   ((\\<lambda>y. y \\<rhd> (1::'a)) \\<circ> conjugate ((\\<cdot>) x)) =\n  conjugate (conjugate ((\\<cdot>) x)) \\<circ>\n  conjugate (\\<lambda>y. y \\<rhd> (1::'a))\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x y.\n          y \\<rhd> x = x \\<rhd> y \\<rhd> (1::'a) \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "finally"], ["proof (chain)\npicking this:\n  conjugate (\\<lambda>y. y \\<rhd> x) =\n  conjugate (conjugate ((\\<cdot>) x)) \\<circ>\n  conjugate (\\<lambda>y. y \\<rhd> (1::'a))", "have \"(\\<lambda>y. x \\<lhd> y) = (\\<lambda>y. x\\<cdot>y) o (\\<lambda>y. 1 \\<lhd> y)\""], ["proof (prove)\nusing this:\n  conjugate (\\<lambda>y. y \\<rhd> x) =\n  conjugate (conjugate ((\\<cdot>) x)) \\<circ>\n  conjugate (\\<lambda>y. y \\<rhd> (1::'a))\n\ngoal (1 subgoal):\n 1. (\\<lhd>) x = (\\<cdot>) x \\<circ> (\\<lhd>) (1::'a)", "by (metis conjugate_conjr1 conjugate_conjr2 conjugate_multr)"], ["proof (state)\nthis:\n  (\\<lhd>) x = (\\<cdot>) x \\<circ> (\\<lhd>) (1::'a)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x y.\n          y \\<rhd> x = x \\<rhd> y \\<rhd> (1::'a) \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "thus \"x \\<lhd> y = x \\<cdot> (1 \\<lhd> y)\""], ["proof (prove)\nusing this:\n  (\\<lhd>) x = (\\<cdot>) x \\<circ> (\\<lhd>) (1::'a)\n\ngoal (1 subgoal):\n 1. x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "by (simp add: comp_def)"], ["proof (state)\nthis:\n  x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma jonsson3a: \"(\\<forall>x. (x \\<rhd> 1) \\<rhd> 1 = x) \\<longleftrightarrow> (\\<forall>x. 1 \\<lhd> (1 \\<lhd> x) = x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x. x \\<rhd> (1::'a) \\<rhd> (1::'a) = x) =\n    (\\<forall>x. (1::'a) \\<lhd> ((1::'a) \\<lhd> x) = x)", "proof safe"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<forall>x. x \\<rhd> (1::'a) \\<rhd> (1::'a) = x \\<Longrightarrow>\n       (1::'a) \\<lhd> ((1::'a) \\<lhd> x) = x\n 2. \\<And>x.\n       \\<forall>x. (1::'a) \\<lhd> ((1::'a) \\<lhd> x) = x \\<Longrightarrow>\n       x \\<rhd> (1::'a) \\<rhd> (1::'a) = x", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<forall>x. x \\<rhd> (1::'a) \\<rhd> (1::'a) = x \\<Longrightarrow>\n       (1::'a) \\<lhd> ((1::'a) \\<lhd> x) = x\n 2. \\<And>x.\n       \\<forall>x. (1::'a) \\<lhd> ((1::'a) \\<lhd> x) = x \\<Longrightarrow>\n       x \\<rhd> (1::'a) \\<rhd> (1::'a) = x", "assume \"\\<forall>x. x \\<rhd> 1 \\<rhd> 1 = x\""], ["proof (state)\nthis:\n  \\<forall>x. x \\<rhd> (1::'a) \\<rhd> (1::'a) = x\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<forall>x. x \\<rhd> (1::'a) \\<rhd> (1::'a) = x \\<Longrightarrow>\n       (1::'a) \\<lhd> ((1::'a) \\<lhd> x) = x\n 2. \\<And>x.\n       \\<forall>x. (1::'a) \\<lhd> ((1::'a) \\<lhd> x) = x \\<Longrightarrow>\n       x \\<rhd> (1::'a) \\<rhd> (1::'a) = x", "thus \"1 \\<lhd> (1 \\<lhd> x) = x\""], ["proof (prove)\nusing this:\n  \\<forall>x. x \\<rhd> (1::'a) \\<rhd> (1::'a) = x\n\ngoal (1 subgoal):\n 1. (1::'a) \\<lhd> ((1::'a) \\<lhd> x) = x", "by (metis compl_le_swap1 compl_le_swap2 conjr2_iff eq_iff)"], ["proof (state)\nthis:\n  (1::'a) \\<lhd> ((1::'a) \\<lhd> x) = x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>x. (1::'a) \\<lhd> ((1::'a) \\<lhd> x) = x \\<Longrightarrow>\n       x \\<rhd> (1::'a) \\<rhd> (1::'a) = x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>x. (1::'a) \\<lhd> ((1::'a) \\<lhd> x) = x \\<Longrightarrow>\n       x \\<rhd> (1::'a) \\<rhd> (1::'a) = x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>x. (1::'a) \\<lhd> ((1::'a) \\<lhd> x) = x \\<Longrightarrow>\n       x \\<rhd> (1::'a) \\<rhd> (1::'a) = x", "assume \"\\<forall>x. 1 \\<lhd> (1 \\<lhd> x) = x\""], ["proof (state)\nthis:\n  \\<forall>x. (1::'a) \\<lhd> ((1::'a) \\<lhd> x) = x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<forall>x. (1::'a) \\<lhd> ((1::'a) \\<lhd> x) = x \\<Longrightarrow>\n       x \\<rhd> (1::'a) \\<rhd> (1::'a) = x", "thus \"x \\<rhd> 1 \\<rhd> 1 = x\""], ["proof (prove)\nusing this:\n  \\<forall>x. (1::'a) \\<lhd> ((1::'a) \\<lhd> x) = x\n\ngoal (1 subgoal):\n 1. x \\<rhd> (1::'a) \\<rhd> (1::'a) = x", "by (metis conjugate_l_def conjugate_r_def double_compl jipsen2r)"], ["proof (state)\nthis:\n  x \\<rhd> (1::'a) \\<rhd> (1::'a) = x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma jonsson3b: \"(\\<forall>x. (x \\<rhd> 1) \\<rhd> 1 = x) \\<Longrightarrow> (x \\<sqinter> y) \\<rhd> 1 = (x \\<rhd> 1) \\<sqinter> (y \\<rhd> 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. x \\<rhd> (1::'a) \\<rhd> (1::'a) = x \\<Longrightarrow>\n    x \\<sqinter> y \\<rhd> (1::'a) =\n    (x \\<rhd> (1::'a)) \\<sqinter> (y \\<rhd> (1::'a))", "proof (rule antisym, auto simp: conjr2_iso)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>x. x \\<rhd> (1::'a) \\<rhd> (1::'a) = x \\<Longrightarrow>\n    (x \\<rhd> (1::'a)) \\<sqinter> (y \\<rhd> (1::'a))\n    \\<le> x \\<sqinter> y \\<rhd> (1::'a)", "assume assm: \"\\<forall>x. (x \\<rhd> 1) \\<rhd> 1 = x\""], ["proof (state)\nthis:\n  \\<forall>x. x \\<rhd> (1::'a) \\<rhd> (1::'a) = x\n\ngoal (1 subgoal):\n 1. \\<forall>x. x \\<rhd> (1::'a) \\<rhd> (1::'a) = x \\<Longrightarrow>\n    (x \\<rhd> (1::'a)) \\<sqinter> (y \\<rhd> (1::'a))\n    \\<le> x \\<sqinter> y \\<rhd> (1::'a)", "hence \"(x \\<rhd> 1) \\<sqinter> (y \\<rhd> 1) \\<rhd> 1 = x \\<sqinter> (((x \\<rhd> 1) \\<sqinter> (y \\<rhd> 1) \\<rhd> 1) \\<sqinter> y)\""], ["proof (prove)\nusing this:\n  \\<forall>x. x \\<rhd> (1::'a) \\<rhd> (1::'a) = x\n\ngoal (1 subgoal):\n 1. (x \\<rhd> (1::'a)) \\<sqinter> (y \\<rhd> (1::'a)) \\<rhd> (1::'a) =\n    x \\<sqinter>\n    (((x \\<rhd> (1::'a)) \\<sqinter> (y \\<rhd> (1::'a)) \\<rhd>\n      (1::'a)) \\<sqinter>\n     y)", "by (metis (no_types) conjr2_iso inf.cobounded2 inf.commute inf.orderE)"], ["proof (state)\nthis:\n  (x \\<rhd> (1::'a)) \\<sqinter> (y \\<rhd> (1::'a)) \\<rhd> (1::'a) =\n  x \\<sqinter>\n  (((x \\<rhd> (1::'a)) \\<sqinter> (y \\<rhd> (1::'a)) \\<rhd>\n    (1::'a)) \\<sqinter>\n   y)\n\ngoal (1 subgoal):\n 1. \\<forall>x. x \\<rhd> (1::'a) \\<rhd> (1::'a) = x \\<Longrightarrow>\n    (x \\<rhd> (1::'a)) \\<sqinter> (y \\<rhd> (1::'a))\n    \\<le> x \\<sqinter> y \\<rhd> (1::'a)", "hence \"(x \\<rhd> 1) \\<sqinter> (y \\<rhd> 1) \\<rhd> 1 \\<le> x \\<sqinter> y\""], ["proof (prove)\nusing this:\n  (x \\<rhd> (1::'a)) \\<sqinter> (y \\<rhd> (1::'a)) \\<rhd> (1::'a) =\n  x \\<sqinter>\n  (((x \\<rhd> (1::'a)) \\<sqinter> (y \\<rhd> (1::'a)) \\<rhd>\n    (1::'a)) \\<sqinter>\n   y)\n\ngoal (1 subgoal):\n 1. (x \\<rhd> (1::'a)) \\<sqinter> (y \\<rhd> (1::'a)) \\<rhd> (1::'a)\n    \\<le> x \\<sqinter> y", "using inf.orderI inf_left_commute"], ["proof (prove)\nusing this:\n  (x \\<rhd> (1::'a)) \\<sqinter> (y \\<rhd> (1::'a)) \\<rhd> (1::'a) =\n  x \\<sqinter>\n  (((x \\<rhd> (1::'a)) \\<sqinter> (y \\<rhd> (1::'a)) \\<rhd>\n    (1::'a)) \\<sqinter>\n   y)\n  ?a = ?a \\<sqinter> ?b \\<Longrightarrow> ?a \\<le> ?b\n  ?x \\<sqinter> (?y \\<sqinter> ?z) = ?y \\<sqinter> (?x \\<sqinter> ?z)\n\ngoal (1 subgoal):\n 1. (x \\<rhd> (1::'a)) \\<sqinter> (y \\<rhd> (1::'a)) \\<rhd> (1::'a)\n    \\<le> x \\<sqinter> y", "by presburger"], ["proof (state)\nthis:\n  (x \\<rhd> (1::'a)) \\<sqinter> (y \\<rhd> (1::'a)) \\<rhd> (1::'a)\n  \\<le> x \\<sqinter> y\n\ngoal (1 subgoal):\n 1. \\<forall>x. x \\<rhd> (1::'a) \\<rhd> (1::'a) = x \\<Longrightarrow>\n    (x \\<rhd> (1::'a)) \\<sqinter> (y \\<rhd> (1::'a))\n    \\<le> x \\<sqinter> y \\<rhd> (1::'a)", "thus \"(x \\<rhd> 1) \\<sqinter> (y \\<rhd> 1) \\<le> x \\<sqinter> y \\<rhd> 1\""], ["proof (prove)\nusing this:\n  (x \\<rhd> (1::'a)) \\<sqinter> (y \\<rhd> (1::'a)) \\<rhd> (1::'a)\n  \\<le> x \\<sqinter> y\n\ngoal (1 subgoal):\n 1. (x \\<rhd> (1::'a)) \\<sqinter> (y \\<rhd> (1::'a))\n    \\<le> x \\<sqinter> y \\<rhd> (1::'a)", "using assm"], ["proof (prove)\nusing this:\n  (x \\<rhd> (1::'a)) \\<sqinter> (y \\<rhd> (1::'a)) \\<rhd> (1::'a)\n  \\<le> x \\<sqinter> y\n  \\<forall>x. x \\<rhd> (1::'a) \\<rhd> (1::'a) = x\n\ngoal (1 subgoal):\n 1. (x \\<rhd> (1::'a)) \\<sqinter> (y \\<rhd> (1::'a))\n    \\<le> x \\<sqinter> y \\<rhd> (1::'a)", "by (metis (no_types) conjr2_iso)"], ["proof (state)\nthis:\n  (x \\<rhd> (1::'a)) \\<sqinter> (y \\<rhd> (1::'a))\n  \\<le> x \\<sqinter> y \\<rhd> (1::'a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma jonsson3c: \"\\<forall>x. (x \\<rhd> 1) \\<rhd> 1 = x \\<Longrightarrow> x \\<rhd> 1 = 1 \\<lhd> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. x \\<rhd> (1::'a) \\<rhd> (1::'a) = x \\<Longrightarrow>\n    x \\<rhd> (1::'a) = (1::'a) \\<lhd> x", "proof (rule indirect_eq)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<forall>x. x \\<rhd> (1::'a) \\<rhd> (1::'a) = x \\<Longrightarrow>\n       (x \\<rhd> (1::'a) \\<le> z) = ((1::'a) \\<lhd> x \\<le> z)", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<forall>x. x \\<rhd> (1::'a) \\<rhd> (1::'a) = x \\<Longrightarrow>\n       (x \\<rhd> (1::'a) \\<le> z) = ((1::'a) \\<lhd> x \\<le> z)", "assume assms: \"\\<forall>x. (x \\<rhd> 1) \\<rhd> 1 = x\""], ["proof (state)\nthis:\n  \\<forall>x. x \\<rhd> (1::'a) \\<rhd> (1::'a) = x\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<forall>x. x \\<rhd> (1::'a) \\<rhd> (1::'a) = x \\<Longrightarrow>\n       (x \\<rhd> (1::'a) \\<le> z) = ((1::'a) \\<lhd> x \\<le> z)", "hence \"(x \\<rhd> 1) \\<sqinter> -z = \\<bottom> \\<longleftrightarrow> ((x \\<rhd> 1) \\<sqinter> -z) \\<rhd> 1 = \\<bottom>\""], ["proof (prove)\nusing this:\n  \\<forall>x. x \\<rhd> (1::'a) \\<rhd> (1::'a) = x\n\ngoal (1 subgoal):\n 1. ((x \\<rhd> (1::'a)) \\<sqinter> - z = \\<bottom>) =\n    ((x \\<rhd> (1::'a)) \\<sqinter> - z \\<rhd> (1::'a) = \\<bottom>)", "by (metis compl_sup conjugation_conj double_compl inf_bot_right sup_bot.left_neutral)"], ["proof (state)\nthis:\n  ((x \\<rhd> (1::'a)) \\<sqinter> - z = \\<bottom>) =\n  ((x \\<rhd> (1::'a)) \\<sqinter> - z \\<rhd> (1::'a) = \\<bottom>)\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<forall>x. x \\<rhd> (1::'a) \\<rhd> (1::'a) = x \\<Longrightarrow>\n       (x \\<rhd> (1::'a) \\<le> z) = ((1::'a) \\<lhd> x \\<le> z)", "also"], ["proof (state)\nthis:\n  ((x \\<rhd> (1::'a)) \\<sqinter> - z = \\<bottom>) =\n  ((x \\<rhd> (1::'a)) \\<sqinter> - z \\<rhd> (1::'a) = \\<bottom>)\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<forall>x. x \\<rhd> (1::'a) \\<rhd> (1::'a) = x \\<Longrightarrow>\n       (x \\<rhd> (1::'a) \\<le> z) = ((1::'a) \\<lhd> x \\<le> z)", "have \"... \\<longleftrightarrow> -z\\<cdot>x \\<sqinter> 1 = \\<bottom>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((x \\<rhd> (1::'a)) \\<sqinter> - z \\<rhd> (1::'a) = \\<bottom>) =\n    (- z \\<cdot> x \\<sqinter> (1::'a) = \\<bottom>)", "by (metis assms jonsson3b conjugation_multr)"], ["proof (state)\nthis:\n  ((x \\<rhd> (1::'a)) \\<sqinter> - z \\<rhd> (1::'a) = \\<bottom>) =\n  (- z \\<cdot> x \\<sqinter> (1::'a) = \\<bottom>)\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<forall>x. x \\<rhd> (1::'a) \\<rhd> (1::'a) = x \\<Longrightarrow>\n       (x \\<rhd> (1::'a) \\<le> z) = ((1::'a) \\<lhd> x \\<le> z)", "finally"], ["proof (chain)\npicking this:\n  ((x \\<rhd> (1::'a)) \\<sqinter> - z = \\<bottom>) =\n  (- z \\<cdot> x \\<sqinter> (1::'a) = \\<bottom>)", "have \"(x \\<rhd> 1) \\<sqinter> -z = \\<bottom> \\<longleftrightarrow> (1 \\<lhd> x) \\<sqinter> -z = \\<bottom>\""], ["proof (prove)\nusing this:\n  ((x \\<rhd> (1::'a)) \\<sqinter> - z = \\<bottom>) =\n  (- z \\<cdot> x \\<sqinter> (1::'a) = \\<bottom>)\n\ngoal (1 subgoal):\n 1. ((x \\<rhd> (1::'a)) \\<sqinter> - z = \\<bottom>) =\n    (((1::'a) \\<lhd> x) \\<sqinter> - z = \\<bottom>)", "by (metis conjugation_multl inf.commute)"], ["proof (state)\nthis:\n  ((x \\<rhd> (1::'a)) \\<sqinter> - z = \\<bottom>) =\n  (((1::'a) \\<lhd> x) \\<sqinter> - z = \\<bottom>)\n\ngoal (1 subgoal):\n 1. \\<And>z.\n       \\<forall>x. x \\<rhd> (1::'a) \\<rhd> (1::'a) = x \\<Longrightarrow>\n       (x \\<rhd> (1::'a) \\<le> z) = ((1::'a) \\<lhd> x \\<le> z)", "thus \"(x \\<rhd> 1 \\<le> z) \\<longleftrightarrow> (1 \\<lhd> x \\<le> z)\""], ["proof (prove)\nusing this:\n  ((x \\<rhd> (1::'a)) \\<sqinter> - z = \\<bottom>) =\n  (((1::'a) \\<lhd> x) \\<sqinter> - z = \\<bottom>)\n\ngoal (1 subgoal):\n 1. (x \\<rhd> (1::'a) \\<le> z) = ((1::'a) \\<lhd> x \\<le> z)", "by (metis le_iff_inf_bot)"], ["proof (state)\nthis:\n  (x \\<rhd> (1::'a) \\<le> z) = ((1::'a) \\<lhd> x \\<le> z)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(* unital_residuated_boolean *)"], ["", "class residuated_boolean_semigroup = residuated_boolean_algebra + semigroup_mult\nbegin"], ["", "subclass residuated_boolean_algebra"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.residuated_boolean_algebra (-) uminus (\\<sqinter>) (\\<le>) (<)\n     (\\<squnion>) \\<bottom> \\<top> (\\<cdot>) (\\<leftarrow>) (\\<rightarrow>)", ".."], ["", "text \\<open>\n  The following lemmas hold trivially, since they are equivalent to associativity.\n\\<close>"], ["", "lemma res_assoc1: \"x \\<rhd> (y \\<rhd> z) = y\\<cdot>x \\<rhd> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<rhd> (y \\<rhd> z) = y \\<cdot> x \\<rhd> z", "by (metis res_assoc_iff1 mult_assoc)"], ["", "lemma res_assoc2: \"x \\<lhd> (y \\<cdot> z) = (x \\<lhd> z) \\<lhd> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<lhd> y \\<cdot> z = x \\<lhd> z \\<lhd> y", "by (metis res_assoc_iff2 mult_assoc)"], ["", "lemma res_assoc3: \"(x \\<rhd> y) \\<lhd> z = x \\<rhd> (y \\<lhd> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<rhd> y \\<lhd> z = x \\<rhd> (y \\<lhd> z)", "by (metis res_assoc_iff3 mult_assoc)"], ["", "end"], ["", "(*residuated_boolean_semigroup *)"], ["", "class residuated_boolean_monoid = residuated_boolean_algebra + monoid_mult\nbegin"], ["", "subclass unital_residuated_boolean"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.unital_residuated_boolean (1::'a) (-) uminus (\\<sqinter>) (\\<le>)\n     (<) (\\<squnion>) \\<bottom> \\<top> (\\<cdot>) (\\<leftarrow>)\n     (\\<rightarrow>)", "by standard auto"], ["", "subclass residuated_lmonoid"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.residuated_lmonoid (\\<sqinter>) (\\<le>) (<) (\\<squnion>) (\\<cdot>)\n     (\\<leftarrow>) (\\<rightarrow>)", ".."], ["", "lemma jonsson4: \"(\\<forall>x y. x \\<lhd> y = x\\<cdot>(1 \\<lhd> y)) \\<longleftrightarrow> (\\<forall>x y. x \\<rhd> y = (x \\<rhd> 1)\\<cdot>y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>x y. x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)) =\n    (\\<forall>x y. x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y)", "proof safe"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y) \\<Longrightarrow>\n       x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y\n 2. \\<And>x y.\n       \\<forall>x y.\n          x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "fix x y"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y) \\<Longrightarrow>\n       x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y\n 2. \\<And>x y.\n       \\<forall>x y.\n          x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "assume assms: \"\\<forall>x y. x \\<lhd> y = x\\<cdot>(1 \\<lhd> y)\""], ["proof (state)\nthis:\n  \\<forall>x y. x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y) \\<Longrightarrow>\n       x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y\n 2. \\<And>x y.\n       \\<forall>x y.\n          x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "have \"x \\<rhd> y = (y \\<rhd> x) \\<rhd> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<rhd> y = y \\<rhd> x \\<rhd> (1::'a)", "by (metis assms jonsson2c)"], ["proof (state)\nthis:\n  x \\<rhd> y = y \\<rhd> x \\<rhd> (1::'a)\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y) \\<Longrightarrow>\n       x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y\n 2. \\<And>x y.\n       \\<forall>x y.\n          x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "also"], ["proof (state)\nthis:\n  x \\<rhd> y = y \\<rhd> x \\<rhd> (1::'a)\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y) \\<Longrightarrow>\n       x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y\n 2. \\<And>x y.\n       \\<forall>x y.\n          x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "have \"... = (y \\<rhd> ((x \\<rhd> 1) \\<rhd> 1)) \\<rhd> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<rhd> x \\<rhd> (1::'a) =\n    y \\<rhd> (x \\<rhd> (1::'a) \\<rhd> (1::'a)) \\<rhd> (1::'a)", "by (metis assms jonsson2b jonsson3a mult_oner)"], ["proof (state)\nthis:\n  y \\<rhd> x \\<rhd> (1::'a) =\n  y \\<rhd> (x \\<rhd> (1::'a) \\<rhd> (1::'a)) \\<rhd> (1::'a)\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y) \\<Longrightarrow>\n       x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y\n 2. \\<And>x y.\n       \\<forall>x y.\n          x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "also"], ["proof (state)\nthis:\n  y \\<rhd> x \\<rhd> (1::'a) =\n  y \\<rhd> (x \\<rhd> (1::'a) \\<rhd> (1::'a)) \\<rhd> (1::'a)\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y) \\<Longrightarrow>\n       x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y\n 2. \\<And>x y.\n       \\<forall>x y.\n          x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "have \"... = (((x \\<rhd> 1)\\<cdot>y) \\<rhd> 1) \\<rhd> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<rhd> (x \\<rhd> (1::'a) \\<rhd> (1::'a)) \\<rhd> (1::'a) =\n    (x \\<rhd> (1::'a)) \\<cdot> y \\<rhd> (1::'a) \\<rhd> (1::'a)", "by (metis conjugate_r_def double_compl resr3)"], ["proof (state)\nthis:\n  y \\<rhd> (x \\<rhd> (1::'a) \\<rhd> (1::'a)) \\<rhd> (1::'a) =\n  (x \\<rhd> (1::'a)) \\<cdot> y \\<rhd> (1::'a) \\<rhd> (1::'a)\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y) \\<Longrightarrow>\n       x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y\n 2. \\<And>x y.\n       \\<forall>x y.\n          x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "also"], ["proof (state)\nthis:\n  y \\<rhd> (x \\<rhd> (1::'a) \\<rhd> (1::'a)) \\<rhd> (1::'a) =\n  (x \\<rhd> (1::'a)) \\<cdot> y \\<rhd> (1::'a) \\<rhd> (1::'a)\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y) \\<Longrightarrow>\n       x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y\n 2. \\<And>x y.\n       \\<forall>x y.\n          x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "have \"... = (x \\<rhd> 1)\\<cdot>y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<rhd> (1::'a)) \\<cdot> y \\<rhd> (1::'a) \\<rhd> (1::'a) =\n    (x \\<rhd> (1::'a)) \\<cdot> y", "by (metis assms jonsson2b jonsson3a mult_oner)"], ["proof (state)\nthis:\n  (x \\<rhd> (1::'a)) \\<cdot> y \\<rhd> (1::'a) \\<rhd> (1::'a) =\n  (x \\<rhd> (1::'a)) \\<cdot> y\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y) \\<Longrightarrow>\n       x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y\n 2. \\<And>x y.\n       \\<forall>x y.\n          x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "finally"], ["proof (chain)\npicking this:\n  x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y", "show \"x \\<rhd> y = (x \\<rhd> 1)\\<cdot>y\""], ["proof (prove)\nusing this:\n  x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y\n\ngoal (1 subgoal):\n 1. x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y", "."], ["proof (state)\nthis:\n  x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "assume assms: \"\\<forall>x y. x \\<rhd> y = (x \\<rhd> 1)\\<cdot>y\""], ["proof (state)\nthis:\n  \\<forall>x y. x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "have \"y \\<lhd> x = 1 \\<lhd> (x \\<lhd> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<lhd> x = (1::'a) \\<lhd> (x \\<lhd> y)", "by (metis assms jonsson1c)"], ["proof (state)\nthis:\n  y \\<lhd> x = (1::'a) \\<lhd> (x \\<lhd> y)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "also"], ["proof (state)\nthis:\n  y \\<lhd> x = (1::'a) \\<lhd> (x \\<lhd> y)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "have \"... = 1 \\<lhd> ((1 \\<lhd> (1 \\<lhd> x)) \\<lhd> y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1::'a) \\<lhd> (x \\<lhd> y) =\n    (1::'a) \\<lhd> ((1::'a) \\<lhd> ((1::'a) \\<lhd> x) \\<lhd> y)", "by (metis assms conjugate_l_def double_compl jonsson1c mult_1_right resl3)"], ["proof (state)\nthis:\n  (1::'a) \\<lhd> (x \\<lhd> y) =\n  (1::'a) \\<lhd> ((1::'a) \\<lhd> ((1::'a) \\<lhd> x) \\<lhd> y)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "also"], ["proof (state)\nthis:\n  (1::'a) \\<lhd> (x \\<lhd> y) =\n  (1::'a) \\<lhd> ((1::'a) \\<lhd> ((1::'a) \\<lhd> x) \\<lhd> y)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "have \"... = 1 \\<lhd> (1 \\<lhd> (y\\<cdot>(1 \\<lhd> x)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1::'a) \\<lhd> ((1::'a) \\<lhd> ((1::'a) \\<lhd> x) \\<lhd> y) =\n    (1::'a) \\<lhd> ((1::'a) \\<lhd> y \\<cdot> ((1::'a) \\<lhd> x))", "by (metis conjugate_l_def double_compl resl3)"], ["proof (state)\nthis:\n  (1::'a) \\<lhd> ((1::'a) \\<lhd> ((1::'a) \\<lhd> x) \\<lhd> y) =\n  (1::'a) \\<lhd> ((1::'a) \\<lhd> y \\<cdot> ((1::'a) \\<lhd> x))\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "also"], ["proof (state)\nthis:\n  (1::'a) \\<lhd> ((1::'a) \\<lhd> ((1::'a) \\<lhd> x) \\<lhd> y) =\n  (1::'a) \\<lhd> ((1::'a) \\<lhd> y \\<cdot> ((1::'a) \\<lhd> x))\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "have \"... = y\\<cdot>(1 \\<lhd> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1::'a) \\<lhd> ((1::'a) \\<lhd> y \\<cdot> ((1::'a) \\<lhd> x)) =\n    y \\<cdot> ((1::'a) \\<lhd> x)", "by (metis assms jonsson1b jonsson1c jonsson3c mult_onel)"], ["proof (state)\nthis:\n  (1::'a) \\<lhd> ((1::'a) \\<lhd> y \\<cdot> ((1::'a) \\<lhd> x)) =\n  y \\<cdot> ((1::'a) \\<lhd> x)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<forall>x y.\n          x \\<rhd> y = (x \\<rhd> (1::'a)) \\<cdot> y \\<Longrightarrow>\n       x \\<lhd> y = x \\<cdot> ((1::'a) \\<lhd> y)", "finally"], ["proof (chain)\npicking this:\n  y \\<lhd> x = y \\<cdot> ((1::'a) \\<lhd> x)", "show \"y \\<lhd> x = y\\<cdot>(1 \\<lhd> x)\""], ["proof (prove)\nusing this:\n  y \\<lhd> x = y \\<cdot> ((1::'a) \\<lhd> x)\n\ngoal (1 subgoal):\n 1. y \\<lhd> x = y \\<cdot> ((1::'a) \\<lhd> x)", "."], ["proof (state)\nthis:\n  y \\<lhd> x = y \\<cdot> ((1::'a) \\<lhd> x)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "(* residuated_boolean_monoid *)"], ["", "end"]]}