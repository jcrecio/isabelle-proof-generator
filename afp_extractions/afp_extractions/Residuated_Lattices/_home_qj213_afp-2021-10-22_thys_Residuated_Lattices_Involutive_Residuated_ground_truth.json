{"file_name": "/home/qj213/afp-2021-10-22/thys/Residuated_Lattices/Involutive_Residuated.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Residuated_Lattices", "problem_names": ["lemma neg_antitone: \"x \\<le> y \\<Longrightarrow> -y \\<le> -x\"", "lemma neg'_antitone: \"x \\<le> y \\<Longrightarrow> -'y \\<le> -'x\"", "lemma inv_resr_neg [simp]: \"inv_resr (-x) (-y) = inv_resl x y\"", "lemma inv_resl_neg' [simp]: \"inv_resl (-'x) (-'y) = inv_resr x y\"", "lemma neg'_mult_resl: \"-'((-y)\\<cdot>(-x)) = inv_resl x (-'y)\"", "lemma neg_mult_resr: \"-((-'y)\\<cdot>(-'x)) = inv_resr (-x) y\"", "lemma resr_de_morgan1: \"-'(inv_resr (-y) (-x)) = -'(inv_resl y x)\"", "lemma resr_de_morgan2: \"-(inv_resl (-'x) (-'y)) = -(inv_resr x y)\"", "lemma (in involutive_division_order) inv_pogroupoid: \n  \"class.involutive_pogroupoid (\\<lambda>x y. -(y \\<rightarrow> -'x)) uminus uminus' (\\<le>) (<)\"", "lemma neg_iff_div_unit: \"(\\<exists>a. negation_constant a) \\<longleftrightarrow> (\\<exists>b. division_unit b)\""], "translations": [["", "lemma neg_antitone: \"x \\<le> y \\<Longrightarrow> -y \\<le> -x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow> - y \\<le> - x", "by (metis local.dn1 local.gn)"], ["", "lemma neg'_antitone: \"x \\<le> y \\<Longrightarrow> -'y \\<le> -'x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<le> y \\<Longrightarrow> -' y \\<le> -' x", "by (metis local.dn2 local.gn)"], ["", "subclass pogroupoid"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.pogroupoid (\\<cdot>) (\\<le>) (<)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y z. x \\<le> y \\<Longrightarrow> x \\<cdot> z \\<le> y \\<cdot> z\n 2. \\<And>x y z. x \\<le> y \\<Longrightarrow> z \\<cdot> x \\<le> z \\<cdot> y", "fix x y z"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y z. x \\<le> y \\<Longrightarrow> x \\<cdot> z \\<le> y \\<cdot> z\n 2. \\<And>x y z. x \\<le> y \\<Longrightarrow> z \\<cdot> x \\<le> z \\<cdot> y", "assume assm: \"x \\<le> y\""], ["proof (state)\nthis:\n  x \\<le> y\n\ngoal (2 subgoals):\n 1. \\<And>x y z. x \\<le> y \\<Longrightarrow> x \\<cdot> z \\<le> y \\<cdot> z\n 2. \\<And>x y z. x \\<le> y \\<Longrightarrow> z \\<cdot> x \\<le> z \\<cdot> y", "show \"x \\<cdot> z \\<le> y \\<cdot> z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<cdot> z \\<le> y \\<cdot> z", "by (metis assm local.ipg2 local.order_refl local.order_trans neg'_antitone)"], ["proof (state)\nthis:\n  x \\<cdot> z \\<le> y \\<cdot> z\n\ngoal (1 subgoal):\n 1. \\<And>x y z. x \\<le> y \\<Longrightarrow> z \\<cdot> x \\<le> z \\<cdot> y", "show \"z \\<cdot> x \\<le> z \\<cdot> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<cdot> x \\<le> z \\<cdot> y", "by (metis assm local.dual_order.trans local.ipg1 local.order_refl neg_antitone)"], ["proof (state)\nthis:\n  z \\<cdot> x \\<le> z \\<cdot> y\n\ngoal:\nNo subgoals!", "qed"], ["", "abbreviation inv_resl :: \"'a \\<Rightarrow> 'a \\<Rightarrow> 'a\" where\n  \"inv_resl y x \\<equiv> -(x\\<cdot>(-'y))\""], ["", "abbreviation inv_resr :: \"'a \\<Rightarrow> 'a \\<Rightarrow> 'a\" where\n  \"inv_resr x y \\<equiv> -'((-y)\\<cdot>x)\""], ["", "sublocale residuated_pogroupoid _ _ _ inv_resl inv_resr"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.residuated_pogroupoid (\\<cdot>) (\\<le>) (<) inv_resl inv_resr", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x z y. (x \\<le> inv_resl z y) = (x \\<cdot> y \\<le> z)\n 2. \\<And>x y z. (x \\<cdot> y \\<le> z) = (y \\<le> inv_resr x z)", "fix x y z"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x z y. (x \\<le> inv_resl z y) = (x \\<cdot> y \\<le> z)\n 2. \\<And>x y z. (x \\<cdot> y \\<le> z) = (y \\<le> inv_resr x z)", "show \"(x \\<le> - (y \\<cdot> -' z)) = (x \\<cdot> y \\<le> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<le> inv_resl z y) = (x \\<cdot> y \\<le> z)", "by (metis local.gn local.ipg2)"], ["proof (state)\nthis:\n  (x \\<le> inv_resl z y) = (x \\<cdot> y \\<le> z)\n\ngoal (1 subgoal):\n 1. \\<And>x y z. (x \\<cdot> y \\<le> z) = (y \\<le> inv_resr x z)", "show \"(x \\<cdot> y \\<le> z) = (y \\<le> -' (- z \\<cdot> x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<cdot> y \\<le> z) = (y \\<le> inv_resr x z)", "by (metis local.gn local.ipg1)"], ["proof (state)\nthis:\n  (x \\<cdot> y \\<le> z) = (y \\<le> inv_resr x z)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "class division_order = order + residual_l_op + residual_r_op +\n  assumes div_galois: \"x \\<le> z \\<leftarrow> y \\<longleftrightarrow> y \\<le> x \\<rightarrow> z\""], ["", "class involutive_division_order = division_order + involutive_order +\n  assumes contraposition: \"y \\<rightarrow> -x = -'y \\<leftarrow> x\""], ["", "context involutive_pogroupoid begin"], ["", "sublocale involutive_division_order _ _ inv_resl inv_resr"], ["proof (prove)\ngoal (1 subgoal):\n 1. class.involutive_division_order (\\<le>) (<) inv_resl inv_resr uminus\n     uminus'", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x z y. (x \\<le> inv_resl z y) = (y \\<le> inv_resr x z)\n 2. \\<And>y x. inv_resr y (- x) = inv_resl (-' y) x", "fix x y z"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x z y. (x \\<le> inv_resl z y) = (y \\<le> inv_resr x z)\n 2. \\<And>y x. inv_resr y (- x) = inv_resl (-' y) x", "show \"(x \\<le> - (y \\<cdot> -' z)) = (y \\<le> -' (- z \\<cdot> x))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<le> inv_resl z y) = (y \\<le> inv_resr x z)", "by (metis local.gn local.ipg1 local.ipg2)"], ["proof (state)\nthis:\n  (x \\<le> inv_resl z y) = (y \\<le> inv_resr x z)\n\ngoal (1 subgoal):\n 1. \\<And>y x. inv_resr y (- x) = inv_resl (-' y) x", "show \"-' (- (- x) \\<cdot> y) = - (x \\<cdot> -' (-' y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv_resr y (- x) = inv_resl (-' y) x", "by (metis local.dn1 local.dn2 local.eq_iff local.gn local.jipsen1l local.jipsen1r local.resl_galois local.resr_galois)"], ["proof (state)\nthis:\n  inv_resr y (- x) = inv_resl (-' y) x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inv_resr_neg [simp]: \"inv_resr (-x) (-y) = inv_resl x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv_resr (- x) (- y) = inv_resl x y", "by (metis local.contraposition local.dn1)"], ["", "lemma inv_resl_neg' [simp]: \"inv_resl (-'x) (-'y) = inv_resr x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv_resl (-' x) (-' y) = inv_resr x y", "by (metis local.contraposition local.dn2)"], ["", "lemma neg'_mult_resl: \"-'((-y)\\<cdot>(-x)) = inv_resl x (-'y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv_resr (- x) y = inv_resl x (-' y)", "by (metis inv_resr_neg local.dn2)"], ["", "lemma neg_mult_resr: \"-((-'y)\\<cdot>(-'x)) = inv_resr (-x) y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv_resl x (-' y) = inv_resr (- x) y", "by (metis neg'_mult_resl)"], ["", "lemma resr_de_morgan1: \"-'(inv_resr (-y) (-x)) = -'(inv_resl y x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. -' inv_resr (- y) (- x) = -' inv_resl y x", "by (metis local.dn1 neg_mult_resr)"], ["", "lemma resr_de_morgan2: \"-(inv_resl (-'x) (-'y)) = -(inv_resr x y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - inv_resl (-' x) (-' y) = - inv_resr x y", "by (metis inv_resl_neg')"], ["", "end"], ["", "text \\<open>\n  We prove that an involutive division poset is equivalent to an involutive po-groupoid\n  by a lemma to avoid cyclic definitions\n\\<close>"], ["", "lemma (in involutive_division_order) inv_pogroupoid: \n  \"class.involutive_pogroupoid (\\<lambda>x y. -(y \\<rightarrow> -'x)) uminus uminus' (\\<le>) (<)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. class.involutive_pogroupoid (\\<lambda>x y. - (y \\<rightarrow> -' x))\n     uminus uminus' (\\<le>) (<)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y z.\n       (- (y \\<rightarrow> -' x) \\<le> z) =\n       (- (x \\<rightarrow> -' (- z)) \\<le> - y)\n 2. \\<And>x y z.\n       (- (y \\<rightarrow> -' x) \\<le> z) =\n       (- (-' z \\<rightarrow> -' y) \\<le> -' x)", "fix x y z"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y z.\n       (- (y \\<rightarrow> -' x) \\<le> z) =\n       (- (x \\<rightarrow> -' (- z)) \\<le> - y)\n 2. \\<And>x y z.\n       (- (y \\<rightarrow> -' x) \\<le> z) =\n       (- (-' z \\<rightarrow> -' y) \\<le> -' x)", "have \"(- (y \\<rightarrow> -' x) \\<le> z) = (-z \\<le> -y \\<leftarrow> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (- (y \\<rightarrow> -' x) \\<le> z) = (- z \\<le> - y \\<leftarrow> x)", "by (metis local.contraposition local.dn1 local.dn2 local.gn local.div_galois)"], ["proof (state)\nthis:\n  (- (y \\<rightarrow> -' x) \\<le> z) = (- z \\<le> - y \\<leftarrow> x)\n\ngoal (2 subgoals):\n 1. \\<And>x y z.\n       (- (y \\<rightarrow> -' x) \\<le> z) =\n       (- (x \\<rightarrow> -' (- z)) \\<le> - y)\n 2. \\<And>x y z.\n       (- (y \\<rightarrow> -' x) \\<le> z) =\n       (- (-' z \\<rightarrow> -' y) \\<le> -' x)", "thus \"(- (y \\<rightarrow> -' x) \\<le> z) = (- (x \\<rightarrow> -' (- z)) \\<le> - y)\""], ["proof (prove)\nusing this:\n  (- (y \\<rightarrow> -' x) \\<le> z) = (- z \\<le> - y \\<leftarrow> x)\n\ngoal (1 subgoal):\n 1. (- (y \\<rightarrow> -' x) \\<le> z) =\n    (- (x \\<rightarrow> -' (- z)) \\<le> - y)", "by (metis local.contraposition local.div_galois local.dn1 local.dn2 local.gn)"], ["proof (state)\nthis:\n  (- (y \\<rightarrow> -' x) \\<le> z) =\n  (- (x \\<rightarrow> -' (- z)) \\<le> - y)\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       (- (y \\<rightarrow> -' x) \\<le> z) =\n       (- (-' z \\<rightarrow> -' y) \\<le> -' x)", "moreover"], ["proof (state)\nthis:\n  (- (y \\<rightarrow> -' x) \\<le> z) =\n  (- (x \\<rightarrow> -' (- z)) \\<le> - y)\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       (- (y \\<rightarrow> -' x) \\<le> z) =\n       (- (-' z \\<rightarrow> -' y) \\<le> -' x)", "have \"(- (x \\<rightarrow> -' (- z)) \\<le> - y) = (- (-' z \\<rightarrow> -' y) \\<le> -' x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (- (x \\<rightarrow> -' (- z)) \\<le> - y) =\n    (- (-' z \\<rightarrow> -' y) \\<le> -' x)", "apply (auto, metis local.contraposition local.div_galois local.dn1 local.dn2 local.gn)"], ["proof (prove)\ngoal (1 subgoal):\n 1. - (-' z \\<rightarrow> -' y) \\<le> -' x \\<Longrightarrow>\n    - (x \\<rightarrow> z) \\<le> - y", "by (metis local.contraposition local.div_galois local.dn1 local.dn2 local.gn)"], ["proof (state)\nthis:\n  (- (x \\<rightarrow> -' (- z)) \\<le> - y) =\n  (- (-' z \\<rightarrow> -' y) \\<le> -' x)\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       (- (y \\<rightarrow> -' x) \\<le> z) =\n       (- (-' z \\<rightarrow> -' y) \\<le> -' x)", "ultimately"], ["proof (chain)\npicking this:\n  (- (y \\<rightarrow> -' x) \\<le> z) =\n  (- (x \\<rightarrow> -' (- z)) \\<le> - y)\n  (- (x \\<rightarrow> -' (- z)) \\<le> - y) =\n  (- (-' z \\<rightarrow> -' y) \\<le> -' x)", "show \"(- (y \\<rightarrow> -' x) \\<le> z) = (- (-' z \\<rightarrow> -' y) \\<le> -' x)\""], ["proof (prove)\nusing this:\n  (- (y \\<rightarrow> -' x) \\<le> z) =\n  (- (x \\<rightarrow> -' (- z)) \\<le> - y)\n  (- (x \\<rightarrow> -' (- z)) \\<le> - y) =\n  (- (-' z \\<rightarrow> -' y) \\<le> -' x)\n\ngoal (1 subgoal):\n 1. (- (y \\<rightarrow> -' x) \\<le> z) =\n    (- (-' z \\<rightarrow> -' y) \\<le> -' x)", "by metis"], ["proof (state)\nthis:\n  (- (y \\<rightarrow> -' x) \\<le> z) =\n  (- (-' z \\<rightarrow> -' y) \\<le> -' x)\n\ngoal:\nNo subgoals!", "qed"], ["", "context involutive_pogroupoid begin"], ["", "definition negation_constant :: \"'a \\<Rightarrow> bool\" where\n  \"negation_constant a \\<equiv> \\<forall>x. -'x = inv_resr x a \\<and> -x = inv_resl a x\""], ["", "definition division_unit :: \"'a \\<Rightarrow> bool\" where\n  \"division_unit a \\<equiv> \\<forall>x. x = inv_resr a x \\<and> x = inv_resl x a\""], ["", "lemma neg_iff_div_unit: \"(\\<exists>a. negation_constant a) \\<longleftrightarrow> (\\<exists>b. division_unit b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>a. negation_constant a) = (\\<exists>b. division_unit b)", "unfolding negation_constant_def division_unit_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>a.\n        \\<forall>x. -' x = inv_resr x a \\<and> - x = inv_resl a x) =\n    (\\<exists>b. \\<forall>x. x = inv_resr b x \\<and> x = inv_resl x b)", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a.\n       \\<forall>x.\n          -' x = inv_resr x a \\<and> - x = inv_resl a x \\<Longrightarrow>\n       \\<exists>b. \\<forall>x. x = inv_resr b x \\<and> x = inv_resl x b\n 2. \\<And>b.\n       \\<forall>x.\n          x = inv_resr b x \\<and> x = inv_resl x b \\<Longrightarrow>\n       \\<exists>a. \\<forall>x. -' x = inv_resr x a \\<and> - x = inv_resl a x", "apply (rule_tac x=\"-a\" in exI, auto)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>a x.\n       \\<forall>x.\n          -' x = inv_resr x a \\<and> - x = inv_resl a x \\<Longrightarrow>\n       x = inv_resr (- a) x\n 2. \\<And>a x.\n       \\<forall>x.\n          -' x = inv_resr x a \\<and> - x = inv_resl a x \\<Longrightarrow>\n       x = inv_resl x (- a)\n 3. \\<And>b.\n       \\<forall>x.\n          x = inv_resr b x \\<and> x = inv_resl x b \\<Longrightarrow>\n       \\<exists>a. \\<forall>x. -' x = inv_resr x a \\<and> - x = inv_resl a x", "apply (metis local.dn1 local.dn2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a x.\n       \\<forall>x.\n          -' x = inv_resr x a \\<and> - x = inv_resl a x \\<Longrightarrow>\n       x = inv_resl x (- a)\n 2. \\<And>b.\n       \\<forall>x.\n          x = inv_resr b x \\<and> x = inv_resl x b \\<Longrightarrow>\n       \\<exists>a. \\<forall>x. -' x = inv_resr x a \\<and> - x = inv_resl a x", "apply (metis local.dn2)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b.\n       \\<forall>x.\n          x = inv_resr b x \\<and> x = inv_resl x b \\<Longrightarrow>\n       \\<exists>a. \\<forall>x. -' x = inv_resr x a \\<and> - x = inv_resl a x", "apply (rule_tac x=\"-b\" in exI, auto)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>b x.\n       \\<forall>x.\n          x = inv_resr b x \\<and> x = inv_resl x b \\<Longrightarrow>\n       -' x = inv_resr x (- b)\n 2. \\<And>b x.\n       \\<forall>x.\n          x = inv_resr b x \\<and> x = inv_resl x b \\<Longrightarrow>\n       - x = - (x \\<cdot> b)", "apply (metis local.contraposition)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b x.\n       \\<forall>x.\n          x = inv_resr b x \\<and> x = inv_resl x b \\<Longrightarrow>\n       - x = - (x \\<cdot> b)", "apply (metis local.dn2)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"], ["", "end"]]}