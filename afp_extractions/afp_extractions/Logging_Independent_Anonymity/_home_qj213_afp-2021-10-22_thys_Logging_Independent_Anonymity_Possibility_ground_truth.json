{"file_name": "/home/qj213/afp-2021-10-22/thys/Logging_Independent_Anonymity/Possibility.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Logging_Independent_Anonymity", "problem_names": ["theorem tok_id_identified:\n \"n \\<in> bad_tok_prik \\<Longrightarrow> \\<exists>s. s\\<^sub>0 \\<Turnstile> s \\<and> \\<langle>n, Hash (ID n (Sec_PubKey m))\\<rangle> \\<in> spied s\"", "lemma sec_id_identified_1:\n \"{Tok_PriK n, Sec_PriK m, Rev_PriK} \\<noteq> {Tok_PriK n', Rev_PriK}\"", "lemma sec_id_identified_2:\n \"(Spy, PubKey {Tok_PriK n, Rev_PriK}) \\<notin> s\\<^sub>0\"", "lemma sec_id_identified_3:\n \"{Tok_PriK n, Rev_PriK} =\n    {Tok_PriK n, Sec_PriK m, Rev_PriK} - {Sec_PriK m}\"", "lemma sec_id_identified_4:\n \"PubK {Tok_PriK n, Sec_PriK m, Rev_PriK} =\n    PubK (insert (Sec_PriK m) {Tok_PriK n, Rev_PriK})\"", "theorem sec_id_identified:\n \"\\<lbrakk>{m, m'} \\<subseteq> bad_sec_prik; (n, m') \\<in> bad_id\\<rbrakk> \\<Longrightarrow>\n    \\<exists>s. s\\<^sub>0 \\<Turnstile> s \\<and> \\<langle>n, Hash (ID n (Sec_PubKey m))\\<rangle> \\<in> spied s\""], "translations": [["", "theorem tok_id_identified:\n \"n \\<in> bad_tok_prik \\<Longrightarrow> \\<exists>s. s\\<^sub>0 \\<Turnstile> s \\<and> \\<langle>n, Hash (ID n (Sec_PubKey m))\\<rangle> \\<in> spied s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<in> bad_tok_prik \\<Longrightarrow>\n    \\<exists>s.\n       s\\<^sub>0 \\<Turnstile> s \\<and>\n       \\<langle>n, Hash (ID n (Sec_PubKey m))\\<rangle> \\<in> spied s", "by (rule exI [of _ \"tok_id_hash n m\"], drule tok_id_hash_rel [of _ m],\n simp add: tok_id_hash_def)"], ["", "definition sec_pubk_less :: \"agent_id \\<Rightarrow> state\" where\n\"sec_pubk_less n \\<equiv>\n  insert (Spy, PubKey {Tok_PriK n, Rev_PriK}) s\\<^sub>0\""], ["", "definition sec_id_pubk_less :: \"agent_id \\<Rightarrow> state\" where\n\"sec_id_pubk_less n \\<equiv>\n  insert (Spy, \\<langle>n, PubKey {Tok_PriK n, Rev_PriK}\\<rangle>) (sec_pubk_less n)\""], ["", "definition sec_id_pubk_more :: \"agent_id \\<Rightarrow> agent_id \\<Rightarrow> state\" where\n\"sec_id_pubk_more n m \\<equiv>\n  insert (Spy, \\<langle>n, ID n (Sec_PubKey m)\\<rangle>) (sec_id_pubk_less n)\""], ["", "definition sec_id_hash :: \"agent_id \\<Rightarrow> agent_id \\<Rightarrow> state\" where\n\"sec_id_hash n m \\<equiv>\n  insert (Spy, \\<langle>n, Hash (ID n (Sec_PubKey m))\\<rangle>) (sec_id_pubk_more n m)\""], ["", "lemma sec_id_identified_1:\n \"{Tok_PriK n, Sec_PriK m, Rev_PriK} \\<noteq> {Tok_PriK n', Rev_PriK}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {Tok_PriK n, Sec_PriK m, Rev_PriK} \\<noteq> {Tok_PriK n', Rev_PriK}", "by (simp add: set_eq_iff, rule exI [of _ \"Sec_PriK m\"], insert\n sec_prik_rev sec_prik_tok_prik, simp add: image_def, drule spec [of _ m], auto)"], ["", "lemma sec_id_identified_2:\n \"(Spy, PubKey {Tok_PriK n, Rev_PriK}) \\<notin> s\\<^sub>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Spy, PubKey {Tok_PriK n, Rev_PriK}) \\<notin> s\\<^sub>0", "by (insert tok_prik_rev sec_id_identified_1, simp add: image_def,\n drule spec [of _ n], auto simp: set_eq_iff)"], ["", "lemma sec_id_identified_3:\n \"{Tok_PriK n, Rev_PriK} =\n    {Tok_PriK n, Sec_PriK m, Rev_PriK} - {Sec_PriK m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {Tok_PriK n, Rev_PriK} =\n    {Tok_PriK n, Sec_PriK m, Rev_PriK} - {Sec_PriK m}", "by (insert sec_prik_rev sec_prik_tok_prik, auto)"], ["", "lemma sec_id_identified_4:\n \"PubK {Tok_PriK n, Sec_PriK m, Rev_PriK} =\n    PubK (insert (Sec_PriK m) {Tok_PriK n, Rev_PriK})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. PubK {Tok_PriK n, Sec_PriK m, Rev_PriK} =\n    PubK {Sec_PriK m, Tok_PriK n, Rev_PriK}", "by auto"], ["", "proposition sec_pubk_less_rel:\n \"\\<lbrakk>{m, m'} \\<subseteq> bad_sec_prik; (n, m) \\<notin> bad_id; (n, m') \\<in> bad_id\\<rbrakk> \\<Longrightarrow>\n    s\\<^sub>0 \\<Turnstile> sec_pubk_less n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>{m, m'} \\<subseteq> bad_sec_prik; (n, m) \\<notin> bad_id;\n     (n, m') \\<in> bad_id\\<rbrakk>\n    \\<Longrightarrow> s\\<^sub>0 \\<Turnstile> sec_pubk_less n", "by (subgoal_tac \"(s\\<^sub>0, sec_pubk_less n) \\<in> rel_pubk_less\", rule r_into_rtrancl,\n simp add: rel_def, subst sec_pubk_less_def, subst sec_id_identified_3 [of _ m'],\n simp, (rule exI)+, subst insert_ident, subst sec_id_identified_3 [symmetric],\n insert sec_id_identified_2, auto)"], ["", "proposition sec_pubk_less_msg:\n \"\\<lbrakk>{m, m'} \\<subseteq> bad_sec_prik; (n, m) \\<notin> bad_id; (n, m') \\<in> bad_id\\<rbrakk> \\<Longrightarrow>\n    {Sec_PriKey m, Sec_PriKey m', PubKey {Tok_PriK n, Rev_PriK},\n      ID n (Sec_PubKey m), Hash (ID n (Sec_PubKey m)),\n      \\<langle>n, ID n (Sec_PubKey m')\\<rangle>} \\<subseteq> spied (sec_pubk_less n) \\<and>\n    {\\<langle>n, PubKey {Tok_PriK n, Rev_PriK}\\<rangle>, \\<langle>n, ID n (Sec_PubKey m)\\<rangle>,\n      \\<langle>n, Hash (ID n (Sec_PubKey m))\\<rangle>} \\<inter>\n      spied (sec_pubk_less n) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>{m, m'} \\<subseteq> bad_sec_prik; (n, m) \\<notin> bad_id;\n     (n, m') \\<in> bad_id\\<rbrakk>\n    \\<Longrightarrow> {Sec_PriKey m, Sec_PriKey m',\n                       PubKey {Tok_PriK n, Rev_PriK}, ID n (Sec_PubKey m),\n                       Hash (ID n (Sec_PubKey m)),\n                       \\<langle>n, ID n (Sec_PubKey m')\\<rangle>}\n                      \\<subseteq> spied (sec_pubk_less n) \\<and>\n                      {\\<langle>n, PubKey {Tok_PriK n, Rev_PriK}\\<rangle>,\n                       \\<langle>n, ID n (Sec_PubKey m)\\<rangle>,\n                       \\<langle>n,\n                         Hash (ID n (Sec_PubKey m))\\<rangle>} \\<inter>\n                      spied (sec_pubk_less n) =\n                      {}", "by (insert sec_id_identified_2, auto simp: sec_pubk_less_def image_def\n dest: sec_prik_eq)"], ["", "proposition sec_id_pubk_less_rel:\n \"\\<lbrakk>{m, m'} \\<subseteq> bad_sec_prik; (n, m) \\<notin> bad_id; (n, m') \\<in> bad_id\\<rbrakk> \\<Longrightarrow>\n    s\\<^sub>0 \\<Turnstile> sec_id_pubk_less n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>{m, m'} \\<subseteq> bad_sec_prik; (n, m) \\<notin> bad_id;\n     (n, m') \\<in> bad_id\\<rbrakk>\n    \\<Longrightarrow> s\\<^sub>0 \\<Turnstile> sec_id_pubk_less n", "by (rule rtrancl_into_rtrancl, erule sec_pubk_less_rel, assumption+,\n subgoal_tac \"(sec_pubk_less n, sec_id_pubk_less n) \\<in> rel_id_pubk_less\",\n frule_tac [2] sec_pubk_less_msg, simp_all add: sec_id_pubk_less_def rel_def,\n (rule exI)+, subst sec_id_identified_3 [of _ m'], subst (asm) (1 2)\n sec_id_identified_3, subst insert_ident, insert sec_prik_tok_prik, auto)"], ["", "proposition sec_id_pubk_less_msg:\n \"\\<lbrakk>{m, m'} \\<subseteq> bad_sec_prik; (n, m) \\<notin> bad_id; (n, m') \\<in> bad_id\\<rbrakk> \\<Longrightarrow>\n    {Sec_PriKey m, ID n (Sec_PubKey m), Hash (ID n (Sec_PubKey m)),\n      \\<langle>n, PubKey {Tok_PriK n, Rev_PriK}\\<rangle>} \\<subseteq>\n      spied (sec_id_pubk_less n) \\<and>\n    {\\<langle>n, ID n (Sec_PubKey m)\\<rangle>, \\<langle>n, Hash (ID n (Sec_PubKey m))\\<rangle>} \\<inter>\n      spied (sec_id_pubk_less n) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>{m, m'} \\<subseteq> bad_sec_prik; (n, m) \\<notin> bad_id;\n     (n, m') \\<in> bad_id\\<rbrakk>\n    \\<Longrightarrow> {Sec_PriKey m, ID n (Sec_PubKey m),\n                       Hash (ID n (Sec_PubKey m)),\n                       \\<langle>n, PubKey {Tok_PriK n, Rev_PriK}\\<rangle>}\n                      \\<subseteq> spied (sec_id_pubk_less n) \\<and>\n                      {\\<langle>n, ID n (Sec_PubKey m)\\<rangle>,\n                       \\<langle>n,\n                         Hash (ID n (Sec_PubKey m))\\<rangle>} \\<inter>\n                      spied (sec_id_pubk_less n) =\n                      {}", "by (drule sec_pubk_less_msg, insert sec_id_identified_1,\n auto simp: sec_id_pubk_less_def)"], ["", "proposition sec_id_pubk_more_rel:\n \"\\<lbrakk>{m, m'} \\<subseteq> bad_sec_prik; (n, m) \\<notin> bad_id; (n, m') \\<in> bad_id\\<rbrakk> \\<Longrightarrow>\n    s\\<^sub>0 \\<Turnstile> sec_id_pubk_more n m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>{m, m'} \\<subseteq> bad_sec_prik; (n, m) \\<notin> bad_id;\n     (n, m') \\<in> bad_id\\<rbrakk>\n    \\<Longrightarrow> s\\<^sub>0 \\<Turnstile> sec_id_pubk_more n m", "by (rule rtrancl_into_rtrancl, erule sec_id_pubk_less_rel, assumption+,\n subgoal_tac \"(sec_id_pubk_less n, sec_id_pubk_more n m) \\<in> rel_id_pubk_more\",\n frule_tac [2] sec_id_pubk_less_msg, simp_all add: sec_id_pubk_more_def rel_def,\n (rule exI)+, subst sec_id_identified_4, subst (asm) (1 3) sec_id_identified_4,\n subst insert_ident, simp_all)"], ["", "proposition sec_id_pubk_more_msg:\n \"\\<lbrakk>{m, m'} \\<subseteq> bad_sec_prik; (n, m) \\<notin> bad_id; (n, m') \\<in> bad_id\\<rbrakk> \\<Longrightarrow>\n    {ID n (Sec_PubKey m), Hash (ID n (Sec_PubKey m)),\n      \\<langle>n, ID n (Sec_PubKey m)\\<rangle>} \\<subseteq> spied (sec_id_pubk_more n m) \\<and>\n    \\<langle>n, Hash (ID n (Sec_PubKey m))\\<rangle> \\<notin> spied (sec_id_pubk_more n m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>{m, m'} \\<subseteq> bad_sec_prik; (n, m) \\<notin> bad_id;\n     (n, m') \\<in> bad_id\\<rbrakk>\n    \\<Longrightarrow> {ID n (Sec_PubKey m), Hash (ID n (Sec_PubKey m)),\n                       \\<langle>n, ID n (Sec_PubKey m)\\<rangle>}\n                      \\<subseteq> spied (sec_id_pubk_more n m) \\<and>\n                      \\<langle>n, Hash (ID n (Sec_PubKey m))\\<rangle>\n                      \\<notin> spied (sec_id_pubk_more n m)", "by (drule sec_id_pubk_less_msg, auto simp: sec_id_pubk_more_def)"], ["", "proposition sec_id_hash_rel:\n \"\\<lbrakk>{m, m'} \\<subseteq> bad_sec_prik; (n, m) \\<notin> bad_id; (n, m') \\<in> bad_id\\<rbrakk> \\<Longrightarrow>\n    s\\<^sub>0 \\<Turnstile> sec_id_hash n m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>{m, m'} \\<subseteq> bad_sec_prik; (n, m) \\<notin> bad_id;\n     (n, m') \\<in> bad_id\\<rbrakk>\n    \\<Longrightarrow> s\\<^sub>0 \\<Turnstile> sec_id_hash n m", "by (rule rtrancl_into_rtrancl, erule sec_id_pubk_more_rel, assumption+,\n subgoal_tac \"(sec_id_pubk_more n m, sec_id_hash n m) \\<in> rel_id_hash\",\n frule_tac [2] sec_id_pubk_more_msg, auto simp: sec_id_hash_def rel_def)"], ["", "theorem sec_id_identified:\n \"\\<lbrakk>{m, m'} \\<subseteq> bad_sec_prik; (n, m') \\<in> bad_id\\<rbrakk> \\<Longrightarrow>\n    \\<exists>s. s\\<^sub>0 \\<Turnstile> s \\<and> \\<langle>n, Hash (ID n (Sec_PubKey m))\\<rangle> \\<in> spied s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>{m, m'} \\<subseteq> bad_sec_prik; (n, m') \\<in> bad_id\\<rbrakk>\n    \\<Longrightarrow> \\<exists>s.\n                         s\\<^sub>0 \\<Turnstile> s \\<and>\n                         \\<langle>n, Hash (ID n (Sec_PubKey m))\\<rangle>\n                         \\<in> spied s", "by (cases \"(n, m) \\<in> bad_id\", blast, rule exI [of _ \"sec_id_hash n m\"],\n drule sec_id_hash_rel, simp_all add: sec_id_hash_def)"], ["", "end"]]}