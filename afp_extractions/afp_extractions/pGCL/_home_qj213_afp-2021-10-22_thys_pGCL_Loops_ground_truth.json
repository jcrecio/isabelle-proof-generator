{"file_name": "/home/qj213/afp-2021-10-22/thys/pGCL/Loops.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/pGCL", "problem_names": ["lemma wp_invI:\n  \"\\<And>I. (\\<And>s. \\<guillemotleft>G\\<guillemotright> s * I s \\<le> wp body I s) \\<Longrightarrow> wp_inv G body I\"", "lemma wlp_invI:\n  \"\\<And>I. (\\<And>s. \\<guillemotleft>G\\<guillemotright> s * I s \\<le> wlp body I s) \\<Longrightarrow> wlp_inv G body I\"", "lemma wlp_invD:\n  \"wlp_inv G body I \\<Longrightarrow> \\<guillemotleft>G\\<guillemotright> s * I s \\<le> wlp body I s\"", "lemma wp_inv_stdD:\n  assumes inv: \"wp_inv G body \\<guillemotleft>I\\<guillemotright>\"\n  and     hb:  \"healthy (wp body)\"\n  shows \"\\<guillemotleft>G\\<guillemotright> && \\<guillemotleft>I\\<guillemotright> \\<tturnstile> wp body \\<guillemotleft>I\\<guillemotright>\"", "lemma wlp_Loop:\n  assumes wd: \"well_def body\"\n      and uI: \"unitary I\"\n      and inv: \"wlp_inv G body I\"\n  shows \"I \\<le> wlp do G \\<longrightarrow> body od (\\<lambda>s. \\<guillemotleft>\\<N> G\\<guillemotright> s * I s)\"\n  (is \"I \\<le> wlp do G \\<longrightarrow> body od ?P\")", "lemma wp_Loop:\n  assumes wd:   \"well_def body\"\n      and inv:  \"wlp_inv G body I\"\n      and unit: \"unitary I\"\n  shows \"I && wp (do G \\<longrightarrow> body od) (\\<lambda>s. 1) \\<tturnstile> wp (do G \\<longrightarrow> body od) (\\<lambda>s. \\<guillemotleft>\\<N> G\\<guillemotright> s * I s)\"\n    (is \"I && ?T \\<tturnstile> wp ?loop ?X\")", "lemma wp_loop_unfold:\n  fixes body :: \"'s prog\"\n  assumes sP: \"sound P\"\n      and h: \"healthy (wp body)\"\n  shows \"wp (do G \\<longrightarrow> body od) P =\n   (\\<lambda>s. \\<guillemotleft>\\<N> G\\<guillemotright> s * P s + \\<guillemotleft>G\\<guillemotright> s * wp body (wp (do G \\<longrightarrow> body od) P) s)\"", "lemma wp_loop_nguard:\n  \"\\<lbrakk> healthy (wp body); sound P; \\<not> G s \\<rbrakk> \\<Longrightarrow> wp do G \\<longrightarrow> body od P s = P s\"", "lemma wp_loop_guard:\n  \"\\<lbrakk> healthy (wp body); sound P; G s \\<rbrakk> \\<Longrightarrow>\n   wp do G \\<longrightarrow> body od P s = wp (body ;; do G \\<longrightarrow> body od) P s\""], "translations": [["", "lemma wp_invI:\n  \"\\<And>I. (\\<And>s. \\<guillemotleft>G\\<guillemotright> s * I s \\<le> wp body I s) \\<Longrightarrow> wp_inv G body I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>I.\n       (\\<And>s.\n           \\<guillemotleft> G \\<guillemotright> s * I s\n           \\<le> wp body I s) \\<Longrightarrow>\n       wp_inv G body I", "by(simp add:wp_inv_def)"], ["", "definition\n  wlp_inv :: \"('s \\<Rightarrow> bool) \\<Rightarrow> 's prog \\<Rightarrow> ('s \\<Rightarrow> real) \\<Rightarrow> bool\"\nwhere\n  \"wlp_inv G body I \\<longleftrightarrow> (\\<forall>s. \\<guillemotleft>G\\<guillemotright> s * I s \\<le> wlp body I s)\""], ["", "lemma wlp_invI:\n  \"\\<And>I. (\\<And>s. \\<guillemotleft>G\\<guillemotright> s * I s \\<le> wlp body I s) \\<Longrightarrow> wlp_inv G body I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>I.\n       (\\<And>s.\n           \\<guillemotleft> G \\<guillemotright> s * I s\n           \\<le> wlp body I s) \\<Longrightarrow>\n       wlp_inv G body I", "by(simp add:wlp_inv_def)"], ["", "lemma wlp_invD:\n  \"wlp_inv G body I \\<Longrightarrow> \\<guillemotleft>G\\<guillemotright> s * I s \\<le> wlp body I s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wlp_inv G body I \\<Longrightarrow>\n    \\<guillemotleft> G \\<guillemotright> s * I s \\<le> wlp body I s", "by(simp add:wlp_inv_def)"], ["", "text \\<open>For standard invariants, the multiplication reduces to conjunction.\\<close>"], ["", "lemma wp_inv_stdD:\n  assumes inv: \"wp_inv G body \\<guillemotleft>I\\<guillemotright>\"\n  and     hb:  \"healthy (wp body)\"\n  shows \"\\<guillemotleft>G\\<guillemotright> && \\<guillemotleft>I\\<guillemotright> \\<tturnstile> wp body \\<guillemotleft>I\\<guillemotright>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> &&\n    \\<guillemotleft> I \\<guillemotright> \\<tturnstile> wp body\n                  \\<guillemotleft> I \\<guillemotright>", "proof(rule le_funI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<guillemotleft> G \\<guillemotright> &&\n        \\<guillemotleft> I \\<guillemotright>)\n        x\n       \\<le> wp body \\<guillemotleft> I \\<guillemotright> x", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<guillemotleft> G \\<guillemotright> &&\n        \\<guillemotleft> I \\<guillemotright>)\n        x\n       \\<le> wp body \\<guillemotleft> I \\<guillemotright> x", "show \"(\\<guillemotleft>G\\<guillemotright> && \\<guillemotleft>I\\<guillemotright>) s \\<le> wp body \\<guillemotleft>I\\<guillemotright> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<guillemotleft> G \\<guillemotright> &&\n     \\<guillemotleft> I \\<guillemotright>)\n     s\n    \\<le> wp body \\<guillemotleft> I \\<guillemotright> s", "proof(cases \"G s\")"], ["proof (state)\ngoal (2 subgoals):\n 1. G s \\<Longrightarrow>\n    (\\<guillemotleft> G \\<guillemotright> &&\n     \\<guillemotleft> I \\<guillemotright>)\n     s\n    \\<le> wp body \\<guillemotleft> I \\<guillemotright> s\n 2. \\<not> G s \\<Longrightarrow>\n    (\\<guillemotleft> G \\<guillemotright> &&\n     \\<guillemotleft> I \\<guillemotright>)\n     s\n    \\<le> wp body \\<guillemotleft> I \\<guillemotright> s", "case False"], ["proof (state)\nthis:\n  \\<not> G s\n\ngoal (2 subgoals):\n 1. G s \\<Longrightarrow>\n    (\\<guillemotleft> G \\<guillemotright> &&\n     \\<guillemotleft> I \\<guillemotright>)\n     s\n    \\<le> wp body \\<guillemotleft> I \\<guillemotright> s\n 2. \\<not> G s \\<Longrightarrow>\n    (\\<guillemotleft> G \\<guillemotright> &&\n     \\<guillemotleft> I \\<guillemotright>)\n     s\n    \\<le> wp body \\<guillemotleft> I \\<guillemotright> s", "with hb"], ["proof (chain)\npicking this:\n  healthy (wp body)\n  \\<not> G s", "show ?thesis"], ["proof (prove)\nusing this:\n  healthy (wp body)\n  \\<not> G s\n\ngoal (1 subgoal):\n 1. (\\<guillemotleft> G \\<guillemotright> &&\n     \\<guillemotleft> I \\<guillemotright>)\n     s\n    \\<le> wp body \\<guillemotleft> I \\<guillemotright> s", "by(auto simp:exp_conj_def)"], ["proof (state)\nthis:\n  (\\<guillemotleft> G \\<guillemotright> &&\n   \\<guillemotleft> I \\<guillemotright>)\n   s\n  \\<le> wp body \\<guillemotleft> I \\<guillemotright> s\n\ngoal (1 subgoal):\n 1. G s \\<Longrightarrow>\n    (\\<guillemotleft> G \\<guillemotright> &&\n     \\<guillemotleft> I \\<guillemotright>)\n     s\n    \\<le> wp body \\<guillemotleft> I \\<guillemotright> s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. G s \\<Longrightarrow>\n    (\\<guillemotleft> G \\<guillemotright> &&\n     \\<guillemotleft> I \\<guillemotright>)\n     s\n    \\<le> wp body \\<guillemotleft> I \\<guillemotright> s", "case True"], ["proof (state)\nthis:\n  G s\n\ngoal (1 subgoal):\n 1. G s \\<Longrightarrow>\n    (\\<guillemotleft> G \\<guillemotright> &&\n     \\<guillemotleft> I \\<guillemotright>)\n     s\n    \\<le> wp body \\<guillemotleft> I \\<guillemotright> s", "hence \"(\\<guillemotleft>G\\<guillemotright> && \\<guillemotleft>I\\<guillemotright>) s = \\<guillemotleft>G\\<guillemotright> s * \\<guillemotleft>I\\<guillemotright> s\""], ["proof (prove)\nusing this:\n  G s\n\ngoal (1 subgoal):\n 1. (\\<guillemotleft> G \\<guillemotright> &&\n     \\<guillemotleft> I \\<guillemotright>)\n     s =\n    \\<guillemotleft> G \\<guillemotright> s *\n    \\<guillemotleft> I \\<guillemotright> s", "by(simp add:exp_conj_def)"], ["proof (state)\nthis:\n  (\\<guillemotleft> G \\<guillemotright> &&\n   \\<guillemotleft> I \\<guillemotright>)\n   s =\n  \\<guillemotleft> G \\<guillemotright> s *\n  \\<guillemotleft> I \\<guillemotright> s\n\ngoal (1 subgoal):\n 1. G s \\<Longrightarrow>\n    (\\<guillemotleft> G \\<guillemotright> &&\n     \\<guillemotleft> I \\<guillemotright>)\n     s\n    \\<le> wp body \\<guillemotleft> I \\<guillemotright> s", "also"], ["proof (state)\nthis:\n  (\\<guillemotleft> G \\<guillemotright> &&\n   \\<guillemotleft> I \\<guillemotright>)\n   s =\n  \\<guillemotleft> G \\<guillemotright> s *\n  \\<guillemotleft> I \\<guillemotright> s\n\ngoal (1 subgoal):\n 1. G s \\<Longrightarrow>\n    (\\<guillemotleft> G \\<guillemotright> &&\n     \\<guillemotleft> I \\<guillemotright>)\n     s\n    \\<le> wp body \\<guillemotleft> I \\<guillemotright> s", "from inv"], ["proof (chain)\npicking this:\n  wp_inv G body \\<guillemotleft> I \\<guillemotright>", "have \"\\<guillemotleft>G\\<guillemotright> s * \\<guillemotleft>I\\<guillemotright> s \\<le> wp body \\<guillemotleft>I\\<guillemotright> s\""], ["proof (prove)\nusing this:\n  wp_inv G body \\<guillemotleft> I \\<guillemotright>\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s *\n    \\<guillemotleft> I \\<guillemotright> s\n    \\<le> wp body \\<guillemotleft> I \\<guillemotright> s", "by(simp add:wp_inv_def)"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s *\n  \\<guillemotleft> I \\<guillemotright> s\n  \\<le> wp body \\<guillemotleft> I \\<guillemotright> s\n\ngoal (1 subgoal):\n 1. G s \\<Longrightarrow>\n    (\\<guillemotleft> G \\<guillemotright> &&\n     \\<guillemotleft> I \\<guillemotright>)\n     s\n    \\<le> wp body \\<guillemotleft> I \\<guillemotright> s", "finally"], ["proof (chain)\npicking this:\n  (\\<guillemotleft> G \\<guillemotright> &&\n   \\<guillemotleft> I \\<guillemotright>)\n   s\n  \\<le> wp body \\<guillemotleft> I \\<guillemotright> s", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<guillemotleft> G \\<guillemotright> &&\n   \\<guillemotleft> I \\<guillemotright>)\n   s\n  \\<le> wp body \\<guillemotleft> I \\<guillemotright> s\n\ngoal (1 subgoal):\n 1. (\\<guillemotleft> G \\<guillemotright> &&\n     \\<guillemotleft> I \\<guillemotright>)\n     s\n    \\<le> wp body \\<guillemotleft> I \\<guillemotright> s", "."], ["proof (state)\nthis:\n  (\\<guillemotleft> G \\<guillemotright> &&\n   \\<guillemotleft> I \\<guillemotright>)\n   s\n  \\<le> wp body \\<guillemotleft> I \\<guillemotright> s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<guillemotleft> G \\<guillemotright> &&\n   \\<guillemotleft> I \\<guillemotright>)\n   s\n  \\<le> wp body \\<guillemotleft> I \\<guillemotright> s\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Partial Correctness\\<close>"], ["", "text \\<open>Partial correctness for loops\\citep[Lemma 7.2.2, \\S7, p.~185]{McIver_M_04}.\\<close>"], ["", "lemma wlp_Loop:\n  assumes wd: \"well_def body\"\n      and uI: \"unitary I\"\n      and inv: \"wlp_inv G body I\"\n  shows \"I \\<le> wlp do G \\<longrightarrow> body od (\\<lambda>s. \\<guillemotleft>\\<N> G\\<guillemotright> s * I s)\"\n  (is \"I \\<le> wlp do G \\<longrightarrow> body od ?P\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. I \\<tturnstile> wlp (\\<mu>x.\n                            body ;;\n                            x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                     (\\<lambda>s.\n                         \\<guillemotleft> \\<N> G \\<guillemotright> s * I s)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. I \\<tturnstile> wlp (\\<mu>x.\n                            body ;;\n                            x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                     (\\<lambda>s.\n                         \\<guillemotleft> \\<N> G \\<guillemotright> s * I s)", "let \"?f Q s\" = \"\\<guillemotleft>G\\<guillemotright> s * wlp body Q s + \\<guillemotleft>\\<N> G\\<guillemotright> s * ?P s\""], ["proof (state)\ngoal (1 subgoal):\n 1. I \\<tturnstile> wlp (\\<mu>x.\n                            body ;;\n                            x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                     (\\<lambda>s.\n                         \\<guillemotleft> \\<N> G \\<guillemotright> s * I s)", "have \"I \\<tturnstile> gfp_exp ?f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I \\<tturnstile> gfp_exp\n                     (\\<lambda>a b.\n                         \\<guillemotleft> G \\<guillemotright> b *\n                         wlp body a b +\n                         \\<guillemotleft> \\<N> G \\<guillemotright> b *\n                         (\\<guillemotleft> \\<N> G \\<guillemotright> b *\n                          I b))", "proof(rule gfp_exp_upperbound[OF _ uI])"], ["proof (state)\ngoal (1 subgoal):\n 1. I \\<tturnstile> \\<lambda>a.\n                       \\<guillemotleft> G \\<guillemotright> a *\n                       wlp body I a +\n                       \\<guillemotleft> \\<N> G \\<guillemotright> a *\n                       (\\<guillemotleft> \\<N> G \\<guillemotright> a * I a)", "have \"I = (\\<lambda>s. (\\<guillemotleft>G\\<guillemotright> s + \\<guillemotleft>\\<N> G\\<guillemotright> s) * I s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I =\n    (\\<lambda>s.\n        (\\<guillemotleft> G \\<guillemotright> s +\n         \\<guillemotleft> \\<N> G \\<guillemotright> s) *\n        I s)", "by(simp add:negate_embed)"], ["proof (state)\nthis:\n  I =\n  (\\<lambda>s.\n      (\\<guillemotleft> G \\<guillemotright> s +\n       \\<guillemotleft> \\<N> G \\<guillemotright> s) *\n      I s)\n\ngoal (1 subgoal):\n 1. I \\<tturnstile> \\<lambda>a.\n                       \\<guillemotleft> G \\<guillemotright> a *\n                       wlp body I a +\n                       \\<guillemotleft> \\<N> G \\<guillemotright> a *\n                       (\\<guillemotleft> \\<N> G \\<guillemotright> a * I a)", "also"], ["proof (state)\nthis:\n  I =\n  (\\<lambda>s.\n      (\\<guillemotleft> G \\<guillemotright> s +\n       \\<guillemotleft> \\<N> G \\<guillemotright> s) *\n      I s)\n\ngoal (1 subgoal):\n 1. I \\<tturnstile> \\<lambda>a.\n                       \\<guillemotleft> G \\<guillemotright> a *\n                       wlp body I a +\n                       \\<guillemotleft> \\<N> G \\<guillemotright> a *\n                       (\\<guillemotleft> \\<N> G \\<guillemotright> a * I a)", "have \"... = (\\<lambda>s. \\<guillemotleft>G\\<guillemotright> s * I s + \\<guillemotleft>\\<N> G\\<guillemotright> s * I s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        (\\<guillemotleft> G \\<guillemotright> s +\n         \\<guillemotleft> \\<N> G \\<guillemotright> s) *\n        I s) =\n    (\\<lambda>s.\n        \\<guillemotleft> G \\<guillemotright> s * I s +\n        \\<guillemotleft> \\<N> G \\<guillemotright> s * I s)", "by(simp add:algebra_simps)"], ["proof (state)\nthis:\n  (\\<lambda>s.\n      (\\<guillemotleft> G \\<guillemotright> s +\n       \\<guillemotleft> \\<N> G \\<guillemotright> s) *\n      I s) =\n  (\\<lambda>s.\n      \\<guillemotleft> G \\<guillemotright> s * I s +\n      \\<guillemotleft> \\<N> G \\<guillemotright> s * I s)\n\ngoal (1 subgoal):\n 1. I \\<tturnstile> \\<lambda>a.\n                       \\<guillemotleft> G \\<guillemotright> a *\n                       wlp body I a +\n                       \\<guillemotleft> \\<N> G \\<guillemotright> a *\n                       (\\<guillemotleft> \\<N> G \\<guillemotright> a * I a)", "also"], ["proof (state)\nthis:\n  (\\<lambda>s.\n      (\\<guillemotleft> G \\<guillemotright> s +\n       \\<guillemotleft> \\<N> G \\<guillemotright> s) *\n      I s) =\n  (\\<lambda>s.\n      \\<guillemotleft> G \\<guillemotright> s * I s +\n      \\<guillemotleft> \\<N> G \\<guillemotright> s * I s)\n\ngoal (1 subgoal):\n 1. I \\<tturnstile> \\<lambda>a.\n                       \\<guillemotleft> G \\<guillemotright> a *\n                       wlp body I a +\n                       \\<guillemotleft> \\<N> G \\<guillemotright> a *\n                       (\\<guillemotleft> \\<N> G \\<guillemotright> a * I a)", "have \"... = (\\<lambda>s. \\<guillemotleft>G\\<guillemotright> s * (\\<guillemotleft>G\\<guillemotright> s * I s) + \\<guillemotleft>\\<N> G\\<guillemotright> s * (\\<guillemotleft>\\<N> G\\<guillemotright> s * I s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        \\<guillemotleft> G \\<guillemotright> s * I s +\n        \\<guillemotleft> \\<N> G \\<guillemotright> s * I s) =\n    (\\<lambda>s.\n        \\<guillemotleft> G \\<guillemotright> s *\n        (\\<guillemotleft> G \\<guillemotright> s * I s) +\n        \\<guillemotleft> \\<N> G \\<guillemotright> s *\n        (\\<guillemotleft> \\<N> G \\<guillemotright> s * I s))", "by(simp add:embed_bool_idem algebra_simps)"], ["proof (state)\nthis:\n  (\\<lambda>s.\n      \\<guillemotleft> G \\<guillemotright> s * I s +\n      \\<guillemotleft> \\<N> G \\<guillemotright> s * I s) =\n  (\\<lambda>s.\n      \\<guillemotleft> G \\<guillemotright> s *\n      (\\<guillemotleft> G \\<guillemotright> s * I s) +\n      \\<guillemotleft> \\<N> G \\<guillemotright> s *\n      (\\<guillemotleft> \\<N> G \\<guillemotright> s * I s))\n\ngoal (1 subgoal):\n 1. I \\<tturnstile> \\<lambda>a.\n                       \\<guillemotleft> G \\<guillemotright> a *\n                       wlp body I a +\n                       \\<guillemotleft> \\<N> G \\<guillemotright> a *\n                       (\\<guillemotleft> \\<N> G \\<guillemotright> a * I a)", "also"], ["proof (state)\nthis:\n  (\\<lambda>s.\n      \\<guillemotleft> G \\<guillemotright> s * I s +\n      \\<guillemotleft> \\<N> G \\<guillemotright> s * I s) =\n  (\\<lambda>s.\n      \\<guillemotleft> G \\<guillemotright> s *\n      (\\<guillemotleft> G \\<guillemotright> s * I s) +\n      \\<guillemotleft> \\<N> G \\<guillemotright> s *\n      (\\<guillemotleft> \\<N> G \\<guillemotright> s * I s))\n\ngoal (1 subgoal):\n 1. I \\<tturnstile> \\<lambda>a.\n                       \\<guillemotleft> G \\<guillemotright> a *\n                       wlp body I a +\n                       \\<guillemotleft> \\<N> G \\<guillemotright> a *\n                       (\\<guillemotleft> \\<N> G \\<guillemotright> a * I a)", "have \"... \\<tturnstile> (\\<lambda>s. \\<guillemotleft>G\\<guillemotright> s * wlp body I s + \\<guillemotleft>\\<N> G\\<guillemotright> s * (\\<guillemotleft>\\<N> G\\<guillemotright> s * I s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lambda>s.\n       \\<guillemotleft> G \\<guillemotright> s *\n       (\\<guillemotleft> G \\<guillemotright> s * I s) +\n       \\<guillemotleft> \\<N> G \\<guillemotright> s *\n       (\\<guillemotleft> \\<N> G \\<guillemotright> s *\n        I s) \\<tturnstile> \\<lambda>s.\n                              \\<guillemotleft> G \\<guillemotright> s *\n                              wlp body I s +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                              (\\<guillemotleft> \\<N> G \\<guillemotright> s *\n                               I s)", "using inv"], ["proof (prove)\nusing this:\n  wlp_inv G body I\n\ngoal (1 subgoal):\n 1. \\<lambda>s.\n       \\<guillemotleft> G \\<guillemotright> s *\n       (\\<guillemotleft> G \\<guillemotright> s * I s) +\n       \\<guillemotleft> \\<N> G \\<guillemotright> s *\n       (\\<guillemotleft> \\<N> G \\<guillemotright> s *\n        I s) \\<tturnstile> \\<lambda>s.\n                              \\<guillemotleft> G \\<guillemotright> s *\n                              wlp body I s +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                              (\\<guillemotleft> \\<N> G \\<guillemotright> s *\n                               I s)", "by(auto dest:wlp_invD intro:add_mono mult_left_mono)"], ["proof (state)\nthis:\n  \\<lambda>s.\n     \\<guillemotleft> G \\<guillemotright> s *\n     (\\<guillemotleft> G \\<guillemotright> s * I s) +\n     \\<guillemotleft> \\<N> G \\<guillemotright> s *\n     (\\<guillemotleft> \\<N> G \\<guillemotright> s *\n      I s) \\<tturnstile> \\<lambda>s.\n                            \\<guillemotleft> G \\<guillemotright> s *\n                            wlp body I s +\n                            \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                            (\\<guillemotleft> \\<N> G \\<guillemotright> s *\n                             I s)\n\ngoal (1 subgoal):\n 1. I \\<tturnstile> \\<lambda>a.\n                       \\<guillemotleft> G \\<guillemotright> a *\n                       wlp body I a +\n                       \\<guillemotleft> \\<N> G \\<guillemotright> a *\n                       (\\<guillemotleft> \\<N> G \\<guillemotright> a * I a)", "finally"], ["proof (chain)\npicking this:\n  I \\<tturnstile> \\<lambda>s.\n                     \\<guillemotleft> G \\<guillemotright> s * wlp body I s +\n                     \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                     (\\<guillemotleft> \\<N> G \\<guillemotright> s * I s)", "show \"I \\<tturnstile> (\\<lambda>s. \\<guillemotleft>G\\<guillemotright> s * wlp body I s + \\<guillemotleft>\\<N> G\\<guillemotright> s * (\\<guillemotleft>\\<N> G\\<guillemotright> s * I s))\""], ["proof (prove)\nusing this:\n  I \\<tturnstile> \\<lambda>s.\n                     \\<guillemotleft> G \\<guillemotright> s * wlp body I s +\n                     \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                     (\\<guillemotleft> \\<N> G \\<guillemotright> s * I s)\n\ngoal (1 subgoal):\n 1. I \\<tturnstile> \\<lambda>s.\n                       \\<guillemotleft> G \\<guillemotright> s *\n                       wlp body I s +\n                       \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                       (\\<guillemotleft> \\<N> G \\<guillemotright> s * I s)", "."], ["proof (state)\nthis:\n  I \\<tturnstile> \\<lambda>s.\n                     \\<guillemotleft> G \\<guillemotright> s * wlp body I s +\n                     \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                     (\\<guillemotleft> \\<N> G \\<guillemotright> s * I s)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  I \\<tturnstile> gfp_exp\n                   (\\<lambda>a b.\n                       \\<guillemotleft> G \\<guillemotright> b *\n                       wlp body a b +\n                       \\<guillemotleft> \\<N> G \\<guillemotright> b *\n                       (\\<guillemotleft> \\<N> G \\<guillemotright> b * I b))\n\ngoal (1 subgoal):\n 1. I \\<tturnstile> wlp (\\<mu>x.\n                            body ;;\n                            x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                     (\\<lambda>s.\n                         \\<guillemotleft> \\<N> G \\<guillemotright> s * I s)", "also"], ["proof (state)\nthis:\n  I \\<tturnstile> gfp_exp\n                   (\\<lambda>a b.\n                       \\<guillemotleft> G \\<guillemotright> b *\n                       wlp body a b +\n                       \\<guillemotleft> \\<N> G \\<guillemotright> b *\n                       (\\<guillemotleft> \\<N> G \\<guillemotright> b * I b))\n\ngoal (1 subgoal):\n 1. I \\<tturnstile> wlp (\\<mu>x.\n                            body ;;\n                            x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                     (\\<lambda>s.\n                         \\<guillemotleft> \\<N> G \\<guillemotright> s * I s)", "from uI well_def_wlp_nearly_healthy[OF wd]"], ["proof (chain)\npicking this:\n  unitary I\n  nearly_healthy (wlp body)", "have \"... = wlp do G \\<longrightarrow> body od ?P\""], ["proof (prove)\nusing this:\n  unitary I\n  nearly_healthy (wlp body)\n\ngoal (1 subgoal):\n 1. gfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wlp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b *\n         (\\<guillemotleft> \\<N> G \\<guillemotright> b * I b)) =\n    wlp (\\<mu>x.\n            body ;;\n            x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     (\\<lambda>s. \\<guillemotleft> \\<N> G \\<guillemotright> s * I s)", "by(auto intro!:wlp_Loop1[symmetric] unitary_intros)"], ["proof (state)\nthis:\n  gfp_exp\n   (\\<lambda>a b.\n       \\<guillemotleft> G \\<guillemotright> b * wlp body a b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b *\n       (\\<guillemotleft> \\<N> G \\<guillemotright> b * I b)) =\n  wlp (\\<mu>x.\n          body ;;\n          x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n   (\\<lambda>s. \\<guillemotleft> \\<N> G \\<guillemotright> s * I s)\n\ngoal (1 subgoal):\n 1. I \\<tturnstile> wlp (\\<mu>x.\n                            body ;;\n                            x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                     (\\<lambda>s.\n                         \\<guillemotleft> \\<N> G \\<guillemotright> s * I s)", "finally"], ["proof (chain)\npicking this:\n  I \\<tturnstile> wlp (\\<mu>x.\n                          body ;;\n                          x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                   (\\<lambda>s.\n                       \\<guillemotleft> \\<N> G \\<guillemotright> s * I s)", "show ?thesis"], ["proof (prove)\nusing this:\n  I \\<tturnstile> wlp (\\<mu>x.\n                          body ;;\n                          x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                   (\\<lambda>s.\n                       \\<guillemotleft> \\<N> G \\<guillemotright> s * I s)\n\ngoal (1 subgoal):\n 1. I \\<tturnstile> wlp (\\<mu>x.\n                            body ;;\n                            x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                     (\\<lambda>s.\n                         \\<guillemotleft> \\<N> G \\<guillemotright> s * I s)", "."], ["proof (state)\nthis:\n  I \\<tturnstile> wlp (\\<mu>x.\n                          body ;;\n                          x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                   (\\<lambda>s.\n                       \\<guillemotleft> \\<N> G \\<guillemotright> s * I s)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Total Correctness\\<close>"], ["", "text_raw \\<open>\\label{s:loop_total}\\<close>"], ["", "text \\<open>The first total correctness lemma for loops which terminate with probability 1\\citep[Lemma\n7.3.1, \\S7, p.~186]{McIver_M_04}.\\<close>"], ["", "lemma wp_Loop:\n  assumes wd:   \"well_def body\"\n      and inv:  \"wlp_inv G body I\"\n      and unit: \"unitary I\"\n  shows \"I && wp (do G \\<longrightarrow> body od) (\\<lambda>s. 1) \\<tturnstile> wp (do G \\<longrightarrow> body od) (\\<lambda>s. \\<guillemotleft>\\<N> G\\<guillemotright> s * I s)\"\n    (is \"I && ?T \\<tturnstile> wp ?loop ?X\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. I &&\n    wp (\\<mu>x.\n           body ;;\n           x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     (\\<lambda>s.\n         1) \\<tturnstile> wp (\\<mu>x.\n                                 body ;;\n                                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                           (\\<lambda>s.\n                               \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                               I s)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. I &&\n    wp (\\<mu>x.\n           body ;;\n           x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     (\\<lambda>s.\n         1) \\<tturnstile> wp (\\<mu>x.\n                                 body ;;\n                                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                           (\\<lambda>s.\n                               \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                               I s)", "txt \\<open>We first appeal to the \\emph{liberal} loop rule:\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. I &&\n    wp (\\<mu>x.\n           body ;;\n           x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     (\\<lambda>s.\n         1) \\<tturnstile> wp (\\<mu>x.\n                                 body ;;\n                                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                           (\\<lambda>s.\n                               \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                               I s)", "from assms"], ["proof (chain)\npicking this:\n  well_def body\n  wlp_inv G body I\n  unitary I", "have \"I && ?T \\<tturnstile> wlp ?loop ?X && ?T\""], ["proof (prove)\nusing this:\n  well_def body\n  wlp_inv G body I\n  unitary I\n\ngoal (1 subgoal):\n 1. I &&\n    wp (\\<mu>x.\n           body ;;\n           x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     (\\<lambda>s.\n         1) \\<tturnstile> wlp (\\<mu>x.\n                                  body ;;\n                                  x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                           (\\<lambda>s.\n                               \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                               I s) &&\n                          wp (\\<mu>x.\n                                 body ;;\n                                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                           (\\<lambda>s. 1)", "by(blast intro:exp_conj_mono_left wlp_Loop)"], ["proof (state)\nthis:\n  I &&\n  wp (\\<mu>x.\n         body ;;\n         x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n   (\\<lambda>s.\n       1) \\<tturnstile> wlp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                         (\\<lambda>s.\n                             \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                             I s) &&\n                        wp (\\<mu>x.\n                               body ;;\n                               x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                         (\\<lambda>s. 1)\n\ngoal (1 subgoal):\n 1. I &&\n    wp (\\<mu>x.\n           body ;;\n           x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     (\\<lambda>s.\n         1) \\<tturnstile> wp (\\<mu>x.\n                                 body ;;\n                                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                           (\\<lambda>s.\n                               \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                               I s)", "txt \\<open>Next, by sub-conjunctivity:\\<close>"], ["proof (state)\nthis:\n  I &&\n  wp (\\<mu>x.\n         body ;;\n         x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n   (\\<lambda>s.\n       1) \\<tturnstile> wlp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                         (\\<lambda>s.\n                             \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                             I s) &&\n                        wp (\\<mu>x.\n                               body ;;\n                               x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                         (\\<lambda>s. 1)\n\ngoal (1 subgoal):\n 1. I &&\n    wp (\\<mu>x.\n           body ;;\n           x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     (\\<lambda>s.\n         1) \\<tturnstile> wp (\\<mu>x.\n                                 body ;;\n                                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                           (\\<lambda>s.\n                               \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                               I s)", "also"], ["proof (state)\nthis:\n  I &&\n  wp (\\<mu>x.\n         body ;;\n         x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n   (\\<lambda>s.\n       1) \\<tturnstile> wlp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                         (\\<lambda>s.\n                             \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                             I s) &&\n                        wp (\\<mu>x.\n                               body ;;\n                               x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                         (\\<lambda>s. 1)\n\ngoal (1 subgoal):\n 1. I &&\n    wp (\\<mu>x.\n           body ;;\n           x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     (\\<lambda>s.\n         1) \\<tturnstile> wp (\\<mu>x.\n                                 body ;;\n                                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                           (\\<lambda>s.\n                               \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                               I s)", "{"], ["proof (state)\nthis:\n  I &&\n  wp (\\<mu>x.\n         body ;;\n         x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n   (\\<lambda>s.\n       1) \\<tturnstile> wlp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                         (\\<lambda>s.\n                             \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                             I s) &&\n                        wp (\\<mu>x.\n                               body ;;\n                               x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                         (\\<lambda>s. 1)\n\ngoal (1 subgoal):\n 1. I &&\n    wp (\\<mu>x.\n           body ;;\n           x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     (\\<lambda>s.\n         1) \\<tturnstile> wp (\\<mu>x.\n                                 body ;;\n                                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                           (\\<lambda>s.\n                               \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                               I s)", "from wd"], ["proof (chain)\npicking this:\n  well_def body", "have sdp_loop: \"sub_distrib_pconj (do G \\<longrightarrow> body od)\""], ["proof (prove)\nusing this:\n  well_def body\n\ngoal (1 subgoal):\n 1. sub_distrib_pconj\n     (\\<mu>x.\n         body ;;\n         x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)", "by(blast intro:sdp_intros)"], ["proof (state)\nthis:\n  sub_distrib_pconj\n   (\\<mu>x.\n       body ;;\n       x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n\ngoal (1 subgoal):\n 1. I &&\n    wp (\\<mu>x.\n           body ;;\n           x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     (\\<lambda>s.\n         1) \\<tturnstile> wp (\\<mu>x.\n                                 body ;;\n                                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                           (\\<lambda>s.\n                               \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                               I s)", "from wd unit"], ["proof (chain)\npicking this:\n  well_def body\n  unitary I", "have \"wlp ?loop ?X && ?T \\<tturnstile> wp ?loop (?X && (\\<lambda>s. 1))\""], ["proof (prove)\nusing this:\n  well_def body\n  unitary I\n\ngoal (1 subgoal):\n 1. wlp (\\<mu>x.\n            body ;;\n            x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     (\\<lambda>s. \\<guillemotleft> \\<N> G \\<guillemotright> s * I s) &&\n    wp (\\<mu>x.\n           body ;;\n           x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     (\\<lambda>s.\n         1) \\<tturnstile> wp (\\<mu>x.\n                                 body ;;\n                                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                           ((\\<lambda>s.\n                                \\<guillemotleft> \\<N> G \\<guillemotright>\n                                 s *\n                                I s) &&\n                            (\\<lambda>s. 1))", "by(blast intro:sub_distrib_pconjD sdp_intros unitary_intros)"], ["proof (state)\nthis:\n  wlp (\\<mu>x.\n          body ;;\n          x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n   (\\<lambda>s. \\<guillemotleft> \\<N> G \\<guillemotright> s * I s) &&\n  wp (\\<mu>x.\n         body ;;\n         x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n   (\\<lambda>s.\n       1) \\<tturnstile> wp (\\<mu>x.\n                               body ;;\n                               x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                         ((\\<lambda>s.\n                              \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                              I s) &&\n                          (\\<lambda>s. 1))\n\ngoal (1 subgoal):\n 1. I &&\n    wp (\\<mu>x.\n           body ;;\n           x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     (\\<lambda>s.\n         1) \\<tturnstile> wp (\\<mu>x.\n                                 body ;;\n                                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                           (\\<lambda>s.\n                               \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                               I s)", "}"], ["proof (state)\nthis:\n  wlp (\\<mu>x.\n          body ;;\n          x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n   (\\<lambda>s. \\<guillemotleft> \\<N> G \\<guillemotright> s * I s) &&\n  wp (\\<mu>x.\n         body ;;\n         x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n   (\\<lambda>s.\n       1) \\<tturnstile> wp (\\<mu>x.\n                               body ;;\n                               x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                         ((\\<lambda>s.\n                              \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                              I s) &&\n                          (\\<lambda>s. 1))\n\ngoal (1 subgoal):\n 1. I &&\n    wp (\\<mu>x.\n           body ;;\n           x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     (\\<lambda>s.\n         1) \\<tturnstile> wp (\\<mu>x.\n                                 body ;;\n                                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                           (\\<lambda>s.\n                               \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                               I s)", "txt \\<open>Finally, the conjunction collapses:\\<close>"], ["proof (state)\nthis:\n  wlp (\\<mu>x.\n          body ;;\n          x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n   (\\<lambda>s. \\<guillemotleft> \\<N> G \\<guillemotright> s * I s) &&\n  wp (\\<mu>x.\n         body ;;\n         x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n   (\\<lambda>s.\n       1) \\<tturnstile> wp (\\<mu>x.\n                               body ;;\n                               x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                         ((\\<lambda>s.\n                              \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                              I s) &&\n                          (\\<lambda>s. 1))\n\ngoal (1 subgoal):\n 1. I &&\n    wp (\\<mu>x.\n           body ;;\n           x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     (\\<lambda>s.\n         1) \\<tturnstile> wp (\\<mu>x.\n                                 body ;;\n                                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                           (\\<lambda>s.\n                               \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                               I s)", "finally"], ["proof (chain)\npicking this:\n  I &&\n  wp (\\<mu>x.\n         body ;;\n         x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n   (\\<lambda>s.\n       1) \\<tturnstile> wp (\\<mu>x.\n                               body ;;\n                               x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                         ((\\<lambda>s.\n                              \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                              I s) &&\n                          (\\<lambda>s. 1))", "show ?thesis"], ["proof (prove)\nusing this:\n  I &&\n  wp (\\<mu>x.\n         body ;;\n         x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n   (\\<lambda>s.\n       1) \\<tturnstile> wp (\\<mu>x.\n                               body ;;\n                               x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                         ((\\<lambda>s.\n                              \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                              I s) &&\n                          (\\<lambda>s. 1))\n\ngoal (1 subgoal):\n 1. I &&\n    wp (\\<mu>x.\n           body ;;\n           x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     (\\<lambda>s.\n         1) \\<tturnstile> wp (\\<mu>x.\n                                 body ;;\n                                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                           (\\<lambda>s.\n                               \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                               I s)", "by(simp add:exp_conj_1_right sound_intros sound_nneg unit unitary_sound)"], ["proof (state)\nthis:\n  I &&\n  wp (\\<mu>x.\n         body ;;\n         x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n   (\\<lambda>s.\n       1) \\<tturnstile> wp (\\<mu>x.\n                               body ;;\n                               x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                         (\\<lambda>s.\n                             \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                             I s)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Unfolding\\<close>"], ["", "lemma wp_loop_unfold:\n  fixes body :: \"'s prog\"\n  assumes sP: \"sound P\"\n      and h: \"healthy (wp body)\"\n  shows \"wp (do G \\<longrightarrow> body od) P =\n   (\\<lambda>s. \\<guillemotleft>\\<N> G\\<guillemotright> s * P s + \\<guillemotleft>G\\<guillemotright> s * wp body (wp (do G \\<longrightarrow> body od) P) s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wp (\\<mu>x.\n           body ;;\n           x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     P =\n    (\\<lambda>s.\n        \\<guillemotleft> \\<N> G \\<guillemotright> s * P s +\n        \\<guillemotleft> G \\<guillemotright> s *\n        wp body\n         (wp (\\<mu>x.\n                 body ;;\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n           P)\n         s)", "proof (simp only: wp_eval)"], ["proof (state)\ngoal (1 subgoal):\n 1. lfp_trans\n     (\\<lambda>x.\n         wp (body ;;\n             Embed\n              x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     P =\n    (\\<lambda>s.\n        \\<guillemotleft> \\<N> G \\<guillemotright> s * P s +\n        \\<guillemotleft> G \\<guillemotright> s *\n        wp body\n         (lfp_trans\n           (\\<lambda>x.\n               wp (body ;;\n                   Embed\n                    x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n           P)\n         s)", "let \"?X t\" = \"wp (body ;; Embed t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\""], ["proof (state)\ngoal (1 subgoal):\n 1. lfp_trans\n     (\\<lambda>x.\n         wp (body ;;\n             Embed\n              x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     P =\n    (\\<lambda>s.\n        \\<guillemotleft> \\<N> G \\<guillemotright> s * P s +\n        \\<guillemotleft> G \\<guillemotright> s *\n        wp body\n         (lfp_trans\n           (\\<lambda>x.\n               wp (body ;;\n                   Embed\n                    x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n           P)\n         s)", "have \"equiv_trans (lfp_trans ?X)\n    (wp (body ;; Embed (lfp_trans ?X) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. equiv_trans\n     (lfp_trans\n       (\\<lambda>a.\n           wp (body ;;\n               Embed\n                a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n     (wp (body ;;\n          Embed\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "proof(intro lfp_trans_unfold)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>t u.\n       \\<lbrakk>le_trans t u;\n        \\<And>P. sound P \\<Longrightarrow> sound (t P);\n        \\<And>P. sound P \\<Longrightarrow> sound (u P)\\<rbrakk>\n       \\<Longrightarrow> le_trans\n                          (wp (body ;;\n                               Embed\n                                t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wp (body ;;\n                               Embed\n                                u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n 2. \\<And>t P.\n       \\<lbrakk>\\<And>Q. sound Q \\<Longrightarrow> sound (t Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> sound\n                          (wp (body ;;\n                               Embed\n                                t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                            P)\n 3. le_trans\n     (wp (body ;;\n          Embed\n           ?v \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     ?v\n 4. \\<And>P. sound P \\<Longrightarrow> sound (?v P)", "fix t::\"'s trans\" and P::\"'s expect\""], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>t u.\n       \\<lbrakk>le_trans t u;\n        \\<And>P. sound P \\<Longrightarrow> sound (t P);\n        \\<And>P. sound P \\<Longrightarrow> sound (u P)\\<rbrakk>\n       \\<Longrightarrow> le_trans\n                          (wp (body ;;\n                               Embed\n                                t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wp (body ;;\n                               Embed\n                                u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n 2. \\<And>t P.\n       \\<lbrakk>\\<And>Q. sound Q \\<Longrightarrow> sound (t Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> sound\n                          (wp (body ;;\n                               Embed\n                                t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                            P)\n 3. le_trans\n     (wp (body ;;\n          Embed\n           ?v \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     ?v\n 4. \\<And>P. sound P \\<Longrightarrow> sound (?v P)", "assume st: \"\\<And>Q. sound Q \\<Longrightarrow> sound (t Q)\"\n       and sP: \"sound P\""], ["proof (state)\nthis:\n  sound ?Q \\<Longrightarrow> sound (t ?Q)\n  sound P\n\ngoal (4 subgoals):\n 1. \\<And>t u.\n       \\<lbrakk>le_trans t u;\n        \\<And>P. sound P \\<Longrightarrow> sound (t P);\n        \\<And>P. sound P \\<Longrightarrow> sound (u P)\\<rbrakk>\n       \\<Longrightarrow> le_trans\n                          (wp (body ;;\n                               Embed\n                                t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wp (body ;;\n                               Embed\n                                u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n 2. \\<And>t P.\n       \\<lbrakk>\\<And>Q. sound Q \\<Longrightarrow> sound (t Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> sound\n                          (wp (body ;;\n                               Embed\n                                t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                            P)\n 3. le_trans\n     (wp (body ;;\n          Embed\n           ?v \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     ?v\n 4. \\<And>P. sound P \\<Longrightarrow> sound (?v P)", "with h"], ["proof (chain)\npicking this:\n  healthy (wp body)\n  sound ?Q \\<Longrightarrow> sound (t ?Q)\n  sound P", "show \"sound (?X t P)\""], ["proof (prove)\nusing this:\n  healthy (wp body)\n  sound ?Q \\<Longrightarrow> sound (t ?Q)\n  sound P\n\ngoal (1 subgoal):\n 1. sound\n     (wp (body ;;\n          Embed\n           t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n       P)", "by(rule wp_loop_step_sound)"], ["proof (state)\nthis:\n  sound\n   (wp (body ;;\n        Embed\n         t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     P)\n\ngoal (3 subgoals):\n 1. \\<And>t u.\n       \\<lbrakk>le_trans t u;\n        \\<And>P. sound P \\<Longrightarrow> sound (t P);\n        \\<And>P. sound P \\<Longrightarrow> sound (u P)\\<rbrakk>\n       \\<Longrightarrow> le_trans\n                          (wp (body ;;\n                               Embed\n                                t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wp (body ;;\n                               Embed\n                                u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n 2. le_trans\n     (wp (body ;;\n          Embed\n           ?v \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     ?v\n 3. \\<And>P. sound P \\<Longrightarrow> sound (?v P)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>t u.\n       \\<lbrakk>le_trans t u;\n        \\<And>P. sound P \\<Longrightarrow> sound (t P);\n        \\<And>P. sound P \\<Longrightarrow> sound (u P)\\<rbrakk>\n       \\<Longrightarrow> le_trans\n                          (wp (body ;;\n                               Embed\n                                t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wp (body ;;\n                               Embed\n                                u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n 2. le_trans\n     (wp (body ;;\n          Embed\n           ?v \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     ?v\n 3. \\<And>P. sound P \\<Longrightarrow> sound (?v P)", "fix t u::\"'s trans\""], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>t u.\n       \\<lbrakk>le_trans t u;\n        \\<And>P. sound P \\<Longrightarrow> sound (t P);\n        \\<And>P. sound P \\<Longrightarrow> sound (u P)\\<rbrakk>\n       \\<Longrightarrow> le_trans\n                          (wp (body ;;\n                               Embed\n                                t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wp (body ;;\n                               Embed\n                                u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n 2. le_trans\n     (wp (body ;;\n          Embed\n           ?v \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     ?v\n 3. \\<And>P. sound P \\<Longrightarrow> sound (?v P)", "assume \"le_trans t u\" \"(\\<And>P. sound P \\<Longrightarrow> sound (t P))\"\n           \"(\\<And>P. sound P \\<Longrightarrow> sound (u P))\""], ["proof (state)\nthis:\n  le_trans t u\n  sound ?P \\<Longrightarrow> sound (t ?P)\n  sound ?P \\<Longrightarrow> sound (u ?P)\n\ngoal (3 subgoals):\n 1. \\<And>t u.\n       \\<lbrakk>le_trans t u;\n        \\<And>P. sound P \\<Longrightarrow> sound (t P);\n        \\<And>P. sound P \\<Longrightarrow> sound (u P)\\<rbrakk>\n       \\<Longrightarrow> le_trans\n                          (wp (body ;;\n                               Embed\n                                t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wp (body ;;\n                               Embed\n                                u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n 2. le_trans\n     (wp (body ;;\n          Embed\n           ?v \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     ?v\n 3. \\<And>P. sound P \\<Longrightarrow> sound (?v P)", "with h"], ["proof (chain)\npicking this:\n  healthy (wp body)\n  le_trans t u\n  sound ?P \\<Longrightarrow> sound (t ?P)\n  sound ?P \\<Longrightarrow> sound (u ?P)", "show \"le_trans (wp (body ;; Embed t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wp (body ;; Embed u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\""], ["proof (prove)\nusing this:\n  healthy (wp body)\n  le_trans t u\n  sound ?P \\<Longrightarrow> sound (t ?P)\n  sound ?P \\<Longrightarrow> sound (u ?P)\n\ngoal (1 subgoal):\n 1. le_trans\n     (wp (body ;;\n          Embed\n           t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     (wp (body ;;\n          Embed\n           u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "by(iprover intro:wp_loop_step_mono)"], ["proof (state)\nthis:\n  le_trans\n   (wp (body ;;\n        Embed\n         t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n   (wp (body ;;\n        Embed\n         u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal (2 subgoals):\n 1. le_trans\n     (wp (body ;;\n          Embed\n           ?v \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     ?v\n 2. \\<And>P. sound P \\<Longrightarrow> sound (?v P)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. le_trans\n     (wp (body ;;\n          Embed\n           ?v \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     ?v\n 2. \\<And>P. sound P \\<Longrightarrow> sound (?v P)", "let ?v = \"\\<lambda>P s. bound_of P\""], ["proof (state)\ngoal (2 subgoals):\n 1. le_trans\n     (wp (body ;;\n          Embed\n           ?v \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     ?v\n 2. \\<And>P. sound P \\<Longrightarrow> sound (?v P)", "from h"], ["proof (chain)\npicking this:\n  healthy (wp body)", "show \"le_trans (wp (body ;; Embed ?v \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ?v\""], ["proof (prove)\nusing this:\n  healthy (wp body)\n\ngoal (1 subgoal):\n 1. le_trans\n     (wp (body ;;\n          Embed\n           (\\<lambda>P s.\n               bound_of\n                P) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     (\\<lambda>P s. bound_of P)", "by(intro le_transI, simp add:wp_eval lfp_loop_fp[unfolded negate_embed])"], ["proof (state)\nthis:\n  le_trans\n   (wp (body ;;\n        Embed\n         (\\<lambda>P s.\n             bound_of\n              P) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n   (\\<lambda>P s. bound_of P)\n\ngoal (1 subgoal):\n 1. \\<And>P. sound P \\<Longrightarrow> sound (\\<lambda>s. bound_of P)", "fix P::\"'s expect\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P. sound P \\<Longrightarrow> sound (\\<lambda>s. bound_of P)", "assume \"sound P\""], ["proof (state)\nthis:\n  sound P\n\ngoal (1 subgoal):\n 1. \\<And>P. sound P \\<Longrightarrow> sound (\\<lambda>s. bound_of P)", "thus \"sound (?v P)\""], ["proof (prove)\nusing this:\n  sound P\n\ngoal (1 subgoal):\n 1. sound (\\<lambda>s. bound_of P)", "by(auto)"], ["proof (state)\nthis:\n  sound (\\<lambda>s. bound_of P)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  equiv_trans\n   (lfp_trans\n     (\\<lambda>a.\n         wp (body ;;\n             Embed\n              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n   (wp (body ;;\n        Embed\n         (lfp_trans\n           (\\<lambda>a.\n               wp (body ;;\n                   Embed\n                    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal (1 subgoal):\n 1. lfp_trans\n     (\\<lambda>x.\n         wp (body ;;\n             Embed\n              x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     P =\n    (\\<lambda>s.\n        \\<guillemotleft> \\<N> G \\<guillemotright> s * P s +\n        \\<guillemotleft> G \\<guillemotright> s *\n        wp body\n         (lfp_trans\n           (\\<lambda>x.\n               wp (body ;;\n                   Embed\n                    x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n           P)\n         s)", "also"], ["proof (state)\nthis:\n  equiv_trans\n   (lfp_trans\n     (\\<lambda>a.\n         wp (body ;;\n             Embed\n              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n   (wp (body ;;\n        Embed\n         (lfp_trans\n           (\\<lambda>a.\n               wp (body ;;\n                   Embed\n                    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal (1 subgoal):\n 1. lfp_trans\n     (\\<lambda>x.\n         wp (body ;;\n             Embed\n              x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     P =\n    (\\<lambda>s.\n        \\<guillemotleft> \\<N> G \\<guillemotright> s * P s +\n        \\<guillemotleft> G \\<guillemotright> s *\n        wp body\n         (lfp_trans\n           (\\<lambda>x.\n               wp (body ;;\n                   Embed\n                    x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n           P)\n         s)", "have \"equiv_trans ...\n    (\\<lambda>P s. \\<guillemotleft>\\<N> G\\<guillemotright> s * P s + \\<guillemotleft>G\\<guillemotright> s * wp body (wp (Embed (lfp_trans ?X)) P) s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. equiv_trans\n     (wp (body ;;\n          Embed\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     (\\<lambda>P s.\n         \\<guillemotleft> \\<N> G \\<guillemotright> s * P s +\n         \\<guillemotleft> G \\<guillemotright> s *\n         wp body\n          (wp (Embed\n                (lfp_trans\n                  (\\<lambda>a.\n                      wp (body ;;\n                          Embed\n                           a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))))\n            P)\n          s)", "by(rule equiv_transI, simp add:wp_eval algebra_simps negate_embed)"], ["proof (state)\nthis:\n  equiv_trans\n   (wp (body ;;\n        Embed\n         (lfp_trans\n           (\\<lambda>a.\n               wp (body ;;\n                   Embed\n                    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n   (\\<lambda>P s.\n       \\<guillemotleft> \\<N> G \\<guillemotright> s * P s +\n       \\<guillemotleft> G \\<guillemotright> s *\n       wp body\n        (wp (Embed\n              (lfp_trans\n                (\\<lambda>a.\n                    wp (body ;;\n                        Embed\n                         a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))))\n          P)\n        s)\n\ngoal (1 subgoal):\n 1. lfp_trans\n     (\\<lambda>x.\n         wp (body ;;\n             Embed\n              x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     P =\n    (\\<lambda>s.\n        \\<guillemotleft> \\<N> G \\<guillemotright> s * P s +\n        \\<guillemotleft> G \\<guillemotright> s *\n        wp body\n         (lfp_trans\n           (\\<lambda>x.\n               wp (body ;;\n                   Embed\n                    x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n           P)\n         s)", "finally"], ["proof (chain)\npicking this:\n  equiv_trans\n   (lfp_trans\n     (\\<lambda>a.\n         wp (body ;;\n             Embed\n              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n   (\\<lambda>P s.\n       \\<guillemotleft> \\<N> G \\<guillemotright> s * P s +\n       \\<guillemotleft> G \\<guillemotright> s *\n       wp body\n        (wp (Embed\n              (lfp_trans\n                (\\<lambda>a.\n                    wp (body ;;\n                        Embed\n                         a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))))\n          P)\n        s)", "show \"lfp_trans ?X P =\n    (\\<lambda>s. \\<guillemotleft>\\<N> G\\<guillemotright> s * P s + \\<guillemotleft>G\\<guillemotright> s * wp body (lfp_trans ?X P) s)\""], ["proof (prove)\nusing this:\n  equiv_trans\n   (lfp_trans\n     (\\<lambda>a.\n         wp (body ;;\n             Embed\n              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n   (\\<lambda>P s.\n       \\<guillemotleft> \\<N> G \\<guillemotright> s * P s +\n       \\<guillemotleft> G \\<guillemotright> s *\n       wp body\n        (wp (Embed\n              (lfp_trans\n                (\\<lambda>a.\n                    wp (body ;;\n                        Embed\n                         a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))))\n          P)\n        s)\n\ngoal (1 subgoal):\n 1. lfp_trans\n     (\\<lambda>a.\n         wp (body ;;\n             Embed\n              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     P =\n    (\\<lambda>s.\n        \\<guillemotleft> \\<N> G \\<guillemotright> s * P s +\n        \\<guillemotleft> G \\<guillemotright> s *\n        wp body\n         (lfp_trans\n           (\\<lambda>a.\n               wp (body ;;\n                   Embed\n                    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n           P)\n         s)", "using sP"], ["proof (prove)\nusing this:\n  equiv_trans\n   (lfp_trans\n     (\\<lambda>a.\n         wp (body ;;\n             Embed\n              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n   (\\<lambda>P s.\n       \\<guillemotleft> \\<N> G \\<guillemotright> s * P s +\n       \\<guillemotleft> G \\<guillemotright> s *\n       wp body\n        (wp (Embed\n              (lfp_trans\n                (\\<lambda>a.\n                    wp (body ;;\n                        Embed\n                         a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))))\n          P)\n        s)\n  sound P\n\ngoal (1 subgoal):\n 1. lfp_trans\n     (\\<lambda>a.\n         wp (body ;;\n             Embed\n              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     P =\n    (\\<lambda>s.\n        \\<guillemotleft> \\<N> G \\<guillemotright> s * P s +\n        \\<guillemotleft> G \\<guillemotright> s *\n        wp body\n         (lfp_trans\n           (\\<lambda>a.\n               wp (body ;;\n                   Embed\n                    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n           P)\n         s)", "unfolding wp_eval"], ["proof (prove)\nusing this:\n  equiv_trans\n   (lfp_trans\n     (\\<lambda>a b c.\n         \\<guillemotleft> G \\<guillemotright> c * (wp body \\<circ> a) b c +\n         (1 - \\<guillemotleft> G \\<guillemotright> c) * b c))\n   (\\<lambda>P s.\n       \\<guillemotleft> \\<N> G \\<guillemotright> s * P s +\n       \\<guillemotleft> G \\<guillemotright> s *\n       wp body\n        (lfp_trans\n          (\\<lambda>a b c.\n              \\<guillemotleft> G \\<guillemotright> c *\n              (wp body \\<circ> a) b c +\n              (1 - \\<guillemotleft> G \\<guillemotright> c) * b c)\n          P)\n        s)\n  sound P\n\ngoal (1 subgoal):\n 1. lfp_trans\n     (\\<lambda>a b c.\n         \\<guillemotleft> G \\<guillemotright> c * (wp body \\<circ> a) b c +\n         (1 - \\<guillemotleft> G \\<guillemotright> c) * b c)\n     P =\n    (\\<lambda>s.\n        \\<guillemotleft> \\<N> G \\<guillemotright> s * P s +\n        \\<guillemotleft> G \\<guillemotright> s *\n        wp body\n         (lfp_trans\n           (\\<lambda>a b c.\n               \\<guillemotleft> G \\<guillemotright> c *\n               (wp body \\<circ> a) b c +\n               (1 - \\<guillemotleft> G \\<guillemotright> c) * b c)\n           P)\n         s)", "by(blast)"], ["proof (state)\nthis:\n  lfp_trans\n   (\\<lambda>a.\n       wp (body ;;\n           Embed\n            a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n   P =\n  (\\<lambda>s.\n      \\<guillemotleft> \\<N> G \\<guillemotright> s * P s +\n      \\<guillemotleft> G \\<guillemotright> s *\n      wp body\n       (lfp_trans\n         (\\<lambda>a.\n             wp (body ;;\n                 Embed\n                  a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n         P)\n       s)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wp_loop_nguard:\n  \"\\<lbrakk> healthy (wp body); sound P; \\<not> G s \\<rbrakk> \\<Longrightarrow> wp do G \\<longrightarrow> body od P s = P s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>healthy (wp body); sound P; \\<not> G s\\<rbrakk>\n    \\<Longrightarrow> wp (\\<mu>x.\n                             body ;;\n                             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                       P s =\n                      P s", "by(subst wp_loop_unfold, simp_all)"], ["", "lemma wp_loop_guard:\n  \"\\<lbrakk> healthy (wp body); sound P; G s \\<rbrakk> \\<Longrightarrow>\n   wp do G \\<longrightarrow> body od P s = wp (body ;; do G \\<longrightarrow> body od) P s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>healthy (wp body); sound P; G s\\<rbrakk>\n    \\<Longrightarrow> wp (\\<mu>x.\n                             body ;;\n                             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                       P s =\n                      wp (body ;;\n                          (\\<mu>x.\n                              body ;;\n                              x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                       P s", "by(subst wp_loop_unfold, simp_all add:wp_eval)"], ["", "end"]]}