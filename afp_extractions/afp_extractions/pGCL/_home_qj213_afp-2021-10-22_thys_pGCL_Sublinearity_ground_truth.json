{"file_name": "/home/qj213/afp-2021-10-22/thys/pGCL/Sublinearity.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/pGCL", "problem_names": ["lemma sublinear_wp_Skip:\n  \"sublinear (wp Skip)\"", "lemma sublinear_wp_Abort:\n  \"sublinear (wp Abort)\"", "lemma sublinear_wp_Apply:\n  \"sublinear (wp (Apply f))\"", "lemma sublinear_wp_Seq:\n  fixes x::\"'s prog\"\n  assumes slx: \"sublinear (wp x)\" and sly: \"sublinear (wp y)\"\n      and hx:  \"healthy (wp x)\"   and hy:  \"healthy (wp y)\"\n  shows \"sublinear (wp (x ;; y))\"", "lemma sublinear_wp_PC:\n  fixes x::\"'s prog\"\n  assumes slx: \"sublinear (wp x)\" and sly: \"sublinear (wp y)\"\n      and uP: \"unitary P\"\n  shows \"sublinear (wp (x \\<^bsub>P\\<^esub>\\<oplus> y))\"", "lemma sublinear_wp_DC:\n  fixes x::\"'s prog\"\n  assumes slx: \"sublinear (wp x)\" and sly: \"sublinear (wp y)\"\n  shows \"sublinear (wp (x \\<Sqinter> y))\"", "lemma sublinear_wp_SetPC:\n  fixes p::\"'a \\<Rightarrow> 's prog\"\n  assumes slp: \"\\<And>s a. a \\<in> supp (P s) \\<Longrightarrow> sublinear (wp (p a))\"\n      and sum: \"\\<And>s. (\\<Sum>a\\<in>supp (P s). P s a) \\<le> 1\"\n      and nnP: \"\\<And>s a. 0 \\<le> P s a\"\n      and fin: \"\\<And>s. finite (supp (P s))\"\n  shows \"sublinear (wp (SetPC p P))\"", "lemma sublinear_wp_SetDC:\n  fixes p::\"'a \\<Rightarrow> 's prog\"\n  assumes slp: \"\\<And>s a. a \\<in> S s \\<Longrightarrow> sublinear (wp (p a))\"\n      and hp:  \"\\<And>s a. a \\<in> S s \\<Longrightarrow> healthy (wp (p a))\"\n      and ne:  \"\\<And>s. S s \\<noteq> {}\"\n  shows \"sublinear (wp (SetDC p S))\"", "lemma sublinear_wp_Embed:\n  \"sublinear t \\<Longrightarrow> sublinear (wp (Embed t))\"", "lemma sublinear_wp_repeat:\n  \"\\<lbrakk> sublinear (wp p); healthy (wp p) \\<rbrakk> \\<Longrightarrow> sublinear (wp (repeat n p))\"", "lemma sublinear_wp_Bind:\n  \"\\<lbrakk> \\<And>s. sublinear (wp (a (f s))) \\<rbrakk> \\<Longrightarrow> sublinear (wp (Bind f a))\"", "lemma sub_distrib_wp_loop:\n  fixes body::\"'s prog\"\n  assumes sdb: \"sub_distrib (wp body)\"\n      and hb:  \"healthy (wp body)\"\n      and nhb: \"nearly_healthy (wlp body)\"\n  shows \"sub_distrib (wp (do G \\<longrightarrow> body od))\"", "lemma sublinear_iterates:\n  assumes hb: \"healthy (wp body)\"\n      and sb: \"sublinear (wp body)\"\n  shows \"sublinear (iterates body G i)\"", "lemma sub_add_wp_loop:\n  fixes body::\"'s prog\"\n  assumes sb: \"sublinear (wp body)\"\n      and cb:  \"bd_cts (wp body)\"\n      and hwp:  \"healthy (wp body)\"\n  shows \"sub_add (wp (do G \\<longrightarrow> body od))\"", "lemma sublinear_wp_loop:\n  fixes body::\"'s prog\"\n  assumes hb:  \"healthy (wp body)\"\n      and nhb: \"nearly_healthy (wlp body)\"\n      and sb:  \"sublinear (wp body)\"\n      and cb:  \"bd_cts (wp body)\"\n  shows \"sublinear (wp (do G \\<longrightarrow> body od))\"", "lemmas sublinear_intros =\n  sublinear_wp_Abort\n  sublinear_wp_Skip\n  sublinear_wp_Apply\n  sublinear_wp_Seq\n  sublinear_wp_PC\n  sublinear_wp_DC\n  sublinear_wp_SetPC\n  sublinear_wp_SetDC\n  sublinear_wp_Embed\n  sublinear_wp_repeat\n  sublinear_wp_Bind\n  sublinear_wp_loop"], "translations": [["", "lemma sublinear_wp_Skip:\n  \"sublinear (wp Skip)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sublinear (wp Skip)", "by(auto simp:wp_eval)"], ["", "lemma sublinear_wp_Abort:\n  \"sublinear (wp Abort)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sublinear (wp Abort)", "by(auto simp:wp_eval)"], ["", "lemma sublinear_wp_Apply:\n  \"sublinear (wp (Apply f))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sublinear (wp (Apply f))", "by(auto simp:wp_eval)"], ["", "lemma sublinear_wp_Seq:\n  fixes x::\"'s prog\"\n  assumes slx: \"sublinear (wp x)\" and sly: \"sublinear (wp y)\"\n      and hx:  \"healthy (wp x)\"   and hy:  \"healthy (wp y)\"\n  shows \"sublinear (wp (x ;; y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sublinear (wp (x ;; y))", "proof(rule sublinearI, simp add:wp_eval)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b c P Q s.\n       \\<lbrakk>sound P; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * wp x (wp y P) s + b * wp x (wp y Q) s \\<ominus>\n                         c\n                         \\<le> wp x\n                                (wp y\n                                  (\\<lambda>s'.\na * P s' + b * Q s' \\<ominus> c))\n                                s", "fix P::\"'s \\<Rightarrow> real\" and Q::\"'s \\<Rightarrow> real\" and s::'s\n  and a::real and b::real and c::real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b c P Q s.\n       \\<lbrakk>sound P; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * wp x (wp y P) s + b * wp x (wp y Q) s \\<ominus>\n                         c\n                         \\<le> wp x\n                                (wp y\n                                  (\\<lambda>s'.\na * P s' + b * Q s' \\<ominus> c))\n                                s", "assume sP: \"sound P\" and sQ: \"sound Q\"\n     and nna: \"0 \\<le> a\" and nnb: \"0 \\<le> b\" and nnc: \"0 \\<le> c\""], ["proof (state)\nthis:\n  sound P\n  sound Q\n  0 \\<le> a\n  0 \\<le> b\n  0 \\<le> c\n\ngoal (1 subgoal):\n 1. \\<And>a b c P Q s.\n       \\<lbrakk>sound P; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * wp x (wp y P) s + b * wp x (wp y Q) s \\<ominus>\n                         c\n                         \\<le> wp x\n                                (wp y\n                                  (\\<lambda>s'.\na * P s' + b * Q s' \\<ominus> c))\n                                s", "with slx hy"], ["proof (chain)\npicking this:\n  sublinear (wp x)\n  healthy (wp y)\n  sound P\n  sound Q\n  0 \\<le> a\n  0 \\<le> b\n  0 \\<le> c", "have \"a * wp x (wp y P) s + b * wp x (wp y Q) s \\<ominus> c \\<le>\n                    wp x (\\<lambda>s. a * wp y P s + b * wp y Q s \\<ominus> c) s\""], ["proof (prove)\nusing this:\n  sublinear (wp x)\n  healthy (wp y)\n  sound P\n  sound Q\n  0 \\<le> a\n  0 \\<le> b\n  0 \\<le> c\n\ngoal (1 subgoal):\n 1. a * wp x (wp y P) s + b * wp x (wp y Q) s \\<ominus> c\n    \\<le> wp x (\\<lambda>s. a * wp y P s + b * wp y Q s \\<ominus> c) s", "by(blast intro:sublinearD)"], ["proof (state)\nthis:\n  a * wp x (wp y P) s + b * wp x (wp y Q) s \\<ominus> c\n  \\<le> wp x (\\<lambda>s. a * wp y P s + b * wp y Q s \\<ominus> c) s\n\ngoal (1 subgoal):\n 1. \\<And>a b c P Q s.\n       \\<lbrakk>sound P; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * wp x (wp y P) s + b * wp x (wp y Q) s \\<ominus>\n                         c\n                         \\<le> wp x\n                                (wp y\n                                  (\\<lambda>s'.\na * P s' + b * Q s' \\<ominus> c))\n                                s", "also"], ["proof (state)\nthis:\n  a * wp x (wp y P) s + b * wp x (wp y Q) s \\<ominus> c\n  \\<le> wp x (\\<lambda>s. a * wp y P s + b * wp y Q s \\<ominus> c) s\n\ngoal (1 subgoal):\n 1. \\<And>a b c P Q s.\n       \\<lbrakk>sound P; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * wp x (wp y P) s + b * wp x (wp y Q) s \\<ominus>\n                         c\n                         \\<le> wp x\n                                (wp y\n                                  (\\<lambda>s'.\na * P s' + b * Q s' \\<ominus> c))\n                                s", "{"], ["proof (state)\nthis:\n  a * wp x (wp y P) s + b * wp x (wp y Q) s \\<ominus> c\n  \\<le> wp x (\\<lambda>s. a * wp y P s + b * wp y Q s \\<ominus> c) s\n\ngoal (1 subgoal):\n 1. \\<And>a b c P Q s.\n       \\<lbrakk>sound P; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * wp x (wp y P) s + b * wp x (wp y Q) s \\<ominus>\n                         c\n                         \\<le> wp x\n                                (wp y\n                                  (\\<lambda>s'.\na * P s' + b * Q s' \\<ominus> c))\n                                s", "from sP sQ nna nnb nnc sly"], ["proof (chain)\npicking this:\n  sound P\n  sound Q\n  0 \\<le> a\n  0 \\<le> b\n  0 \\<le> c\n  sublinear (wp y)", "have \"\\<And>s. a * wp y P s + b * wp y Q s \\<ominus> c \\<le>\n              wp y (\\<lambda>s. a * P s + b * Q s \\<ominus> c) s\""], ["proof (prove)\nusing this:\n  sound P\n  sound Q\n  0 \\<le> a\n  0 \\<le> b\n  0 \\<le> c\n  sublinear (wp y)\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       a * wp y P s + b * wp y Q s \\<ominus> c\n       \\<le> wp y (\\<lambda>s. a * P s + b * Q s \\<ominus> c) s", "by(blast intro:sublinearD)"], ["proof (state)\nthis:\n  a * wp y P ?s + b * wp y Q ?s \\<ominus> c\n  \\<le> wp y (\\<lambda>s. a * P s + b * Q s \\<ominus> c) ?s\n\ngoal (1 subgoal):\n 1. \\<And>a b c P Q s.\n       \\<lbrakk>sound P; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * wp x (wp y P) s + b * wp x (wp y Q) s \\<ominus>\n                         c\n                         \\<le> wp x\n                                (wp y\n                                  (\\<lambda>s'.\na * P s' + b * Q s' \\<ominus> c))\n                                s", "moreover"], ["proof (state)\nthis:\n  a * wp y P ?s + b * wp y Q ?s \\<ominus> c\n  \\<le> wp y (\\<lambda>s. a * P s + b * Q s \\<ominus> c) ?s\n\ngoal (1 subgoal):\n 1. \\<And>a b c P Q s.\n       \\<lbrakk>sound P; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * wp x (wp y P) s + b * wp x (wp y Q) s \\<ominus>\n                         c\n                         \\<le> wp x\n                                (wp y\n                                  (\\<lambda>s'.\na * P s' + b * Q s' \\<ominus> c))\n                                s", "from sP sQ hy"], ["proof (chain)\npicking this:\n  sound P\n  sound Q\n  healthy (wp y)", "have \"sound (wp y P)\" and \"sound (wp y Q)\""], ["proof (prove)\nusing this:\n  sound P\n  sound Q\n  healthy (wp y)\n\ngoal (1 subgoal):\n 1. sound (wp y P) &&& sound (wp y Q)", "by(auto)"], ["proof (state)\nthis:\n  sound (wp y P)\n  sound (wp y Q)\n\ngoal (1 subgoal):\n 1. \\<And>a b c P Q s.\n       \\<lbrakk>sound P; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * wp x (wp y P) s + b * wp x (wp y Q) s \\<ominus>\n                         c\n                         \\<le> wp x\n                                (wp y\n                                  (\\<lambda>s'.\na * P s' + b * Q s' \\<ominus> c))\n                                s", "moreover"], ["proof (state)\nthis:\n  sound (wp y P)\n  sound (wp y Q)\n\ngoal (1 subgoal):\n 1. \\<And>a b c P Q s.\n       \\<lbrakk>sound P; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * wp x (wp y P) s + b * wp x (wp y Q) s \\<ominus>\n                         c\n                         \\<le> wp x\n                                (wp y\n                                  (\\<lambda>s'.\na * P s' + b * Q s' \\<ominus> c))\n                                s", "with nna nnb nnc"], ["proof (chain)\npicking this:\n  0 \\<le> a\n  0 \\<le> b\n  0 \\<le> c\n  sound (wp y P)\n  sound (wp y Q)", "have \"sound (\\<lambda>s. a * wp y P s + b * wp y Q s \\<ominus> c)\""], ["proof (prove)\nusing this:\n  0 \\<le> a\n  0 \\<le> b\n  0 \\<le> c\n  sound (wp y P)\n  sound (wp y Q)\n\ngoal (1 subgoal):\n 1. sound (\\<lambda>s. a * wp y P s + b * wp y Q s \\<ominus> c)", "by(auto intro!:sound_intros tminus_sound)"], ["proof (state)\nthis:\n  sound (\\<lambda>s. a * wp y P s + b * wp y Q s \\<ominus> c)\n\ngoal (1 subgoal):\n 1. \\<And>a b c P Q s.\n       \\<lbrakk>sound P; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * wp x (wp y P) s + b * wp x (wp y Q) s \\<ominus>\n                         c\n                         \\<le> wp x\n                                (wp y\n                                  (\\<lambda>s'.\na * P s' + b * Q s' \\<ominus> c))\n                                s", "moreover"], ["proof (state)\nthis:\n  sound (\\<lambda>s. a * wp y P s + b * wp y Q s \\<ominus> c)\n\ngoal (1 subgoal):\n 1. \\<And>a b c P Q s.\n       \\<lbrakk>sound P; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * wp x (wp y P) s + b * wp x (wp y Q) s \\<ominus>\n                         c\n                         \\<le> wp x\n                                (wp y\n                                  (\\<lambda>s'.\na * P s' + b * Q s' \\<ominus> c))\n                                s", "from sP sQ nna nnb nnc"], ["proof (chain)\npicking this:\n  sound P\n  sound Q\n  0 \\<le> a\n  0 \\<le> b\n  0 \\<le> c", "have \"sound (\\<lambda>s. a * P s + b * Q s \\<ominus> c)\""], ["proof (prove)\nusing this:\n  sound P\n  sound Q\n  0 \\<le> a\n  0 \\<le> b\n  0 \\<le> c\n\ngoal (1 subgoal):\n 1. sound (\\<lambda>s. a * P s + b * Q s \\<ominus> c)", "by(auto intro!:sound_intros tminus_sound)"], ["proof (state)\nthis:\n  sound (\\<lambda>s. a * P s + b * Q s \\<ominus> c)\n\ngoal (1 subgoal):\n 1. \\<And>a b c P Q s.\n       \\<lbrakk>sound P; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * wp x (wp y P) s + b * wp x (wp y Q) s \\<ominus>\n                         c\n                         \\<le> wp x\n                                (wp y\n                                  (\\<lambda>s'.\na * P s' + b * Q s' \\<ominus> c))\n                                s", "moreover"], ["proof (state)\nthis:\n  sound (\\<lambda>s. a * P s + b * Q s \\<ominus> c)\n\ngoal (1 subgoal):\n 1. \\<And>a b c P Q s.\n       \\<lbrakk>sound P; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * wp x (wp y P) s + b * wp x (wp y Q) s \\<ominus>\n                         c\n                         \\<le> wp x\n                                (wp y\n                                  (\\<lambda>s'.\na * P s' + b * Q s' \\<ominus> c))\n                                s", "with hy"], ["proof (chain)\npicking this:\n  healthy (wp y)\n  sound (\\<lambda>s. a * P s + b * Q s \\<ominus> c)", "have \"sound (wp y (\\<lambda>s. a * P s + b * Q s \\<ominus> c))\""], ["proof (prove)\nusing this:\n  healthy (wp y)\n  sound (\\<lambda>s. a * P s + b * Q s \\<ominus> c)\n\ngoal (1 subgoal):\n 1. sound (wp y (\\<lambda>s. a * P s + b * Q s \\<ominus> c))", "by(blast)"], ["proof (state)\nthis:\n  sound (wp y (\\<lambda>s. a * P s + b * Q s \\<ominus> c))\n\ngoal (1 subgoal):\n 1. \\<And>a b c P Q s.\n       \\<lbrakk>sound P; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * wp x (wp y P) s + b * wp x (wp y Q) s \\<ominus>\n                         c\n                         \\<le> wp x\n                                (wp y\n                                  (\\<lambda>s'.\na * P s' + b * Q s' \\<ominus> c))\n                                s", "ultimately"], ["proof (chain)\npicking this:\n  a * wp y P ?s + b * wp y Q ?s \\<ominus> c\n  \\<le> wp y (\\<lambda>s. a * P s + b * Q s \\<ominus> c) ?s\n  sound (wp y P)\n  sound (wp y Q)\n  sound (\\<lambda>s. a * wp y P s + b * wp y Q s \\<ominus> c)\n  sound (\\<lambda>s. a * P s + b * Q s \\<ominus> c)\n  sound (wp y (\\<lambda>s. a * P s + b * Q s \\<ominus> c))", "have \"wp x (\\<lambda>s. a * wp y P s + b * wp y Q s \\<ominus> c) s \\<le>\n          wp x (wp y (\\<lambda>s. a * P s + b * Q s \\<ominus> c)) s\""], ["proof (prove)\nusing this:\n  a * wp y P ?s + b * wp y Q ?s \\<ominus> c\n  \\<le> wp y (\\<lambda>s. a * P s + b * Q s \\<ominus> c) ?s\n  sound (wp y P)\n  sound (wp y Q)\n  sound (\\<lambda>s. a * wp y P s + b * wp y Q s \\<ominus> c)\n  sound (\\<lambda>s. a * P s + b * Q s \\<ominus> c)\n  sound (wp y (\\<lambda>s. a * P s + b * Q s \\<ominus> c))\n\ngoal (1 subgoal):\n 1. wp x (\\<lambda>s. a * wp y P s + b * wp y Q s \\<ominus> c) s\n    \\<le> wp x (wp y (\\<lambda>s. a * P s + b * Q s \\<ominus> c)) s", "by(blast intro!:le_funD[OF mono_transD[OF healthy_monoD[OF hx]]])"], ["proof (state)\nthis:\n  wp x (\\<lambda>s. a * wp y P s + b * wp y Q s \\<ominus> c) s\n  \\<le> wp x (wp y (\\<lambda>s. a * P s + b * Q s \\<ominus> c)) s\n\ngoal (1 subgoal):\n 1. \\<And>a b c P Q s.\n       \\<lbrakk>sound P; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * wp x (wp y P) s + b * wp x (wp y Q) s \\<ominus>\n                         c\n                         \\<le> wp x\n                                (wp y\n                                  (\\<lambda>s'.\na * P s' + b * Q s' \\<ominus> c))\n                                s", "}"], ["proof (state)\nthis:\n  wp x (\\<lambda>s. a * wp y P s + b * wp y Q s \\<ominus> c) s\n  \\<le> wp x (wp y (\\<lambda>s. a * P s + b * Q s \\<ominus> c)) s\n\ngoal (1 subgoal):\n 1. \\<And>a b c P Q s.\n       \\<lbrakk>sound P; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * wp x (wp y P) s + b * wp x (wp y Q) s \\<ominus>\n                         c\n                         \\<le> wp x\n                                (wp y\n                                  (\\<lambda>s'.\na * P s' + b * Q s' \\<ominus> c))\n                                s", "finally"], ["proof (chain)\npicking this:\n  a * wp x (wp y P) s + b * wp x (wp y Q) s \\<ominus> c\n  \\<le> wp x (wp y (\\<lambda>s. a * P s + b * Q s \\<ominus> c)) s", "show \"a * wp x (wp y P) s + b * wp x (wp y Q) s \\<ominus> c \\<le>\n                wp x (wp y (\\<lambda>s. a * P s + b * Q s \\<ominus> c)) s\""], ["proof (prove)\nusing this:\n  a * wp x (wp y P) s + b * wp x (wp y Q) s \\<ominus> c\n  \\<le> wp x (wp y (\\<lambda>s. a * P s + b * Q s \\<ominus> c)) s\n\ngoal (1 subgoal):\n 1. a * wp x (wp y P) s + b * wp x (wp y Q) s \\<ominus> c\n    \\<le> wp x (wp y (\\<lambda>s. a * P s + b * Q s \\<ominus> c)) s", "."], ["proof (state)\nthis:\n  a * wp x (wp y P) s + b * wp x (wp y Q) s \\<ominus> c\n  \\<le> wp x (wp y (\\<lambda>s. a * P s + b * Q s \\<ominus> c)) s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sublinear_wp_PC:\n  fixes x::\"'s prog\"\n  assumes slx: \"sublinear (wp x)\" and sly: \"sublinear (wp y)\"\n      and uP: \"unitary P\"\n  shows \"sublinear (wp (x \\<^bsub>P\\<^esub>\\<oplus> y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sublinear (wp (x \\<^bsub>P\\<^esub>\\<oplus> y))", "proof(rule sublinearI, simp add:wp_eval)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b c Pa Q s.\n       \\<lbrakk>sound Pa; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * (P s * wp x Pa s + (1 - P s) * wp y Pa s) +\n                         b *\n                         (P s * wp x Q s + (1 - P s) * wp y Q s) \\<ominus>\n                         c\n                         \\<le> P s *\n                               wp x\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s +\n                               (1 - P s) *\n                               wp y\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s", "fix R::\"'s \\<Rightarrow> real\" and Q::\"'s \\<Rightarrow> real\" and s::'s\n  and a::real and b::real and c::real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b c Pa Q s.\n       \\<lbrakk>sound Pa; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * (P s * wp x Pa s + (1 - P s) * wp y Pa s) +\n                         b *\n                         (P s * wp x Q s + (1 - P s) * wp y Q s) \\<ominus>\n                         c\n                         \\<le> P s *\n                               wp x\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s +\n                               (1 - P s) *\n                               wp y\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s", "assume sR: \"sound R\" and sQ: \"sound Q\"\n     and nna: \"0 \\<le> a\" and nnb: \"0 \\<le> b\" and nnc: \"0 \\<le> c\""], ["proof (state)\nthis:\n  sound R\n  sound Q\n  0 \\<le> a\n  0 \\<le> b\n  0 \\<le> c\n\ngoal (1 subgoal):\n 1. \\<And>a b c Pa Q s.\n       \\<lbrakk>sound Pa; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * (P s * wp x Pa s + (1 - P s) * wp y Pa s) +\n                         b *\n                         (P s * wp x Q s + (1 - P s) * wp y Q s) \\<ominus>\n                         c\n                         \\<le> P s *\n                               wp x\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s +\n                               (1 - P s) *\n                               wp y\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s", "have \"a * (P s * wp x Q s + (1 - P s) * wp y Q s) +\n        b * (P s * wp x R s + (1 - P s) * wp y R s) \\<ominus> c =\n        (P s * a * wp x Q s + (1 - P s) * a * wp y Q s) +\n        (P s * b * wp x R s + (1 - P s) * b * wp y R s) \\<ominus> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a * (P s * wp x Q s + (1 - P s) * wp y Q s) +\n    b * (P s * wp x R s + (1 - P s) * wp y R s) \\<ominus>\n    c =\n    P s * a * wp x Q s + (1 - P s) * a * wp y Q s +\n    (P s * b * wp x R s + (1 - P s) * b * wp y R s) \\<ominus>\n    c", "by(simp add:field_simps)"], ["proof (state)\nthis:\n  a * (P s * wp x Q s + (1 - P s) * wp y Q s) +\n  b * (P s * wp x R s + (1 - P s) * wp y R s) \\<ominus>\n  c =\n  P s * a * wp x Q s + (1 - P s) * a * wp y Q s +\n  (P s * b * wp x R s + (1 - P s) * b * wp y R s) \\<ominus>\n  c\n\ngoal (1 subgoal):\n 1. \\<And>a b c Pa Q s.\n       \\<lbrakk>sound Pa; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * (P s * wp x Pa s + (1 - P s) * wp y Pa s) +\n                         b *\n                         (P s * wp x Q s + (1 - P s) * wp y Q s) \\<ominus>\n                         c\n                         \\<le> P s *\n                               wp x\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s +\n                               (1 - P s) *\n                               wp y\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s", "also"], ["proof (state)\nthis:\n  a * (P s * wp x Q s + (1 - P s) * wp y Q s) +\n  b * (P s * wp x R s + (1 - P s) * wp y R s) \\<ominus>\n  c =\n  P s * a * wp x Q s + (1 - P s) * a * wp y Q s +\n  (P s * b * wp x R s + (1 - P s) * b * wp y R s) \\<ominus>\n  c\n\ngoal (1 subgoal):\n 1. \\<And>a b c Pa Q s.\n       \\<lbrakk>sound Pa; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * (P s * wp x Pa s + (1 - P s) * wp y Pa s) +\n                         b *\n                         (P s * wp x Q s + (1 - P s) * wp y Q s) \\<ominus>\n                         c\n                         \\<le> P s *\n                               wp x\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s +\n                               (1 - P s) *\n                               wp y\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s", "have \"... = (P s * a * wp x Q s + P s * b * wp x R s) +\n              ((1 - P s) * a * wp y Q s + (1 - P s) * b * wp y R s) \\<ominus> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P s * a * wp x Q s + (1 - P s) * a * wp y Q s +\n    (P s * b * wp x R s + (1 - P s) * b * wp y R s) \\<ominus>\n    c =\n    P s * a * wp x Q s + P s * b * wp x R s +\n    ((1 - P s) * a * wp y Q s + (1 - P s) * b * wp y R s) \\<ominus>\n    c", "by(simp add:ac_simps)"], ["proof (state)\nthis:\n  P s * a * wp x Q s + (1 - P s) * a * wp y Q s +\n  (P s * b * wp x R s + (1 - P s) * b * wp y R s) \\<ominus>\n  c =\n  P s * a * wp x Q s + P s * b * wp x R s +\n  ((1 - P s) * a * wp y Q s + (1 - P s) * b * wp y R s) \\<ominus>\n  c\n\ngoal (1 subgoal):\n 1. \\<And>a b c Pa Q s.\n       \\<lbrakk>sound Pa; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * (P s * wp x Pa s + (1 - P s) * wp y Pa s) +\n                         b *\n                         (P s * wp x Q s + (1 - P s) * wp y Q s) \\<ominus>\n                         c\n                         \\<le> P s *\n                               wp x\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s +\n                               (1 - P s) *\n                               wp y\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s", "also"], ["proof (state)\nthis:\n  P s * a * wp x Q s + (1 - P s) * a * wp y Q s +\n  (P s * b * wp x R s + (1 - P s) * b * wp y R s) \\<ominus>\n  c =\n  P s * a * wp x Q s + P s * b * wp x R s +\n  ((1 - P s) * a * wp y Q s + (1 - P s) * b * wp y R s) \\<ominus>\n  c\n\ngoal (1 subgoal):\n 1. \\<And>a b c Pa Q s.\n       \\<lbrakk>sound Pa; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * (P s * wp x Pa s + (1 - P s) * wp y Pa s) +\n                         b *\n                         (P s * wp x Q s + (1 - P s) * wp y Q s) \\<ominus>\n                         c\n                         \\<le> P s *\n                               wp x\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s +\n                               (1 - P s) *\n                               wp y\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s", "have \"... = P s * (a * wp x Q s + b * wp x R s) +\n              (1 - P s) * (a * wp y Q s + b * wp y R s) \\<ominus>\n              (P s * c + (1 - P s) * c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P s * a * wp x Q s + P s * b * wp x R s +\n    ((1 - P s) * a * wp y Q s + (1 - P s) * b * wp y R s) \\<ominus>\n    c =\n    P s * (a * wp x Q s + b * wp x R s) +\n    (1 - P s) * (a * wp y Q s + b * wp y R s) \\<ominus>\n    P s * c + (1 - P s) * c", "by(simp add:field_simps)"], ["proof (state)\nthis:\n  P s * a * wp x Q s + P s * b * wp x R s +\n  ((1 - P s) * a * wp y Q s + (1 - P s) * b * wp y R s) \\<ominus>\n  c =\n  P s * (a * wp x Q s + b * wp x R s) +\n  (1 - P s) * (a * wp y Q s + b * wp y R s) \\<ominus>\n  P s * c + (1 - P s) * c\n\ngoal (1 subgoal):\n 1. \\<And>a b c Pa Q s.\n       \\<lbrakk>sound Pa; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * (P s * wp x Pa s + (1 - P s) * wp y Pa s) +\n                         b *\n                         (P s * wp x Q s + (1 - P s) * wp y Q s) \\<ominus>\n                         c\n                         \\<le> P s *\n                               wp x\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s +\n                               (1 - P s) *\n                               wp y\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s", "also"], ["proof (state)\nthis:\n  P s * a * wp x Q s + P s * b * wp x R s +\n  ((1 - P s) * a * wp y Q s + (1 - P s) * b * wp y R s) \\<ominus>\n  c =\n  P s * (a * wp x Q s + b * wp x R s) +\n  (1 - P s) * (a * wp y Q s + b * wp y R s) \\<ominus>\n  P s * c + (1 - P s) * c\n\ngoal (1 subgoal):\n 1. \\<And>a b c Pa Q s.\n       \\<lbrakk>sound Pa; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * (P s * wp x Pa s + (1 - P s) * wp y Pa s) +\n                         b *\n                         (P s * wp x Q s + (1 - P s) * wp y Q s) \\<ominus>\n                         c\n                         \\<le> P s *\n                               wp x\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s +\n                               (1 - P s) *\n                               wp y\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s", "have \"... \\<le> (P s * (a * wp x Q s + b * wp x R s) \\<ominus> P s * c) +\n              ((1 - P s) * (a * wp y Q s + b * wp y R s) \\<ominus> (1 - P s) * c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P s * (a * wp x Q s + b * wp x R s) +\n    (1 - P s) * (a * wp y Q s + b * wp y R s) \\<ominus>\n    P s * c + (1 - P s) * c\n    \\<le> (P s * (a * wp x Q s + b * wp x R s) \\<ominus> P s * c) +\n          ((1 - P s) * (a * wp y Q s + b * wp y R s) \\<ominus>\n           (1 - P s) * c)", "by(rule tminus_add_mono)"], ["proof (state)\nthis:\n  P s * (a * wp x Q s + b * wp x R s) +\n  (1 - P s) * (a * wp y Q s + b * wp y R s) \\<ominus>\n  P s * c + (1 - P s) * c\n  \\<le> (P s * (a * wp x Q s + b * wp x R s) \\<ominus> P s * c) +\n        ((1 - P s) * (a * wp y Q s + b * wp y R s) \\<ominus> (1 - P s) * c)\n\ngoal (1 subgoal):\n 1. \\<And>a b c Pa Q s.\n       \\<lbrakk>sound Pa; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * (P s * wp x Pa s + (1 - P s) * wp y Pa s) +\n                         b *\n                         (P s * wp x Q s + (1 - P s) * wp y Q s) \\<ominus>\n                         c\n                         \\<le> P s *\n                               wp x\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s +\n                               (1 - P s) *\n                               wp y\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s", "also"], ["proof (state)\nthis:\n  P s * (a * wp x Q s + b * wp x R s) +\n  (1 - P s) * (a * wp y Q s + b * wp y R s) \\<ominus>\n  P s * c + (1 - P s) * c\n  \\<le> (P s * (a * wp x Q s + b * wp x R s) \\<ominus> P s * c) +\n        ((1 - P s) * (a * wp y Q s + b * wp y R s) \\<ominus> (1 - P s) * c)\n\ngoal (1 subgoal):\n 1. \\<And>a b c Pa Q s.\n       \\<lbrakk>sound Pa; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * (P s * wp x Pa s + (1 - P s) * wp y Pa s) +\n                         b *\n                         (P s * wp x Q s + (1 - P s) * wp y Q s) \\<ominus>\n                         c\n                         \\<le> P s *\n                               wp x\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s +\n                               (1 - P s) *\n                               wp y\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s", "{"], ["proof (state)\nthis:\n  P s * (a * wp x Q s + b * wp x R s) +\n  (1 - P s) * (a * wp y Q s + b * wp y R s) \\<ominus>\n  P s * c + (1 - P s) * c\n  \\<le> (P s * (a * wp x Q s + b * wp x R s) \\<ominus> P s * c) +\n        ((1 - P s) * (a * wp y Q s + b * wp y R s) \\<ominus> (1 - P s) * c)\n\ngoal (1 subgoal):\n 1. \\<And>a b c Pa Q s.\n       \\<lbrakk>sound Pa; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * (P s * wp x Pa s + (1 - P s) * wp y Pa s) +\n                         b *\n                         (P s * wp x Q s + (1 - P s) * wp y Q s) \\<ominus>\n                         c\n                         \\<le> P s *\n                               wp x\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s +\n                               (1 - P s) *\n                               wp y\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s", "from uP"], ["proof (chain)\npicking this:\n  unitary P", "have \"0 \\<le> P s\" and \"0 \\<le> 1 - P s\""], ["proof (prove)\nusing this:\n  unitary P\n\ngoal (1 subgoal):\n 1. 0 \\<le> P s &&& 0 \\<le> 1 - P s", "by auto"], ["proof (state)\nthis:\n  0 \\<le> P s\n  0 \\<le> 1 - P s\n\ngoal (1 subgoal):\n 1. \\<And>a b c Pa Q s.\n       \\<lbrakk>sound Pa; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * (P s * wp x Pa s + (1 - P s) * wp y Pa s) +\n                         b *\n                         (P s * wp x Q s + (1 - P s) * wp y Q s) \\<ominus>\n                         c\n                         \\<le> P s *\n                               wp x\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s +\n                               (1 - P s) *\n                               wp y\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s", "hence \"(P s * (a * wp x Q s + b * wp x R s) \\<ominus> P s * c) +\n             ((1 - P s) * (a * wp y Q s + b * wp y R s) \\<ominus> (1 - P s) * c) =\n             P s * (a * wp x Q s + b * wp x R s \\<ominus> c) +\n             (1 - P s) * (a * wp y Q s + b * wp y R s  \\<ominus> c)\""], ["proof (prove)\nusing this:\n  0 \\<le> P s\n  0 \\<le> 1 - P s\n\ngoal (1 subgoal):\n 1. (P s * (a * wp x Q s + b * wp x R s) \\<ominus> P s * c) +\n    ((1 - P s) * (a * wp y Q s + b * wp y R s) \\<ominus> (1 - P s) * c) =\n    P s * (a * wp x Q s + b * wp x R s \\<ominus> c) +\n    (1 - P s) * (a * wp y Q s + b * wp y R s \\<ominus> c)", "by(simp add:tminus_left_distrib)"], ["proof (state)\nthis:\n  (P s * (a * wp x Q s + b * wp x R s) \\<ominus> P s * c) +\n  ((1 - P s) * (a * wp y Q s + b * wp y R s) \\<ominus> (1 - P s) * c) =\n  P s * (a * wp x Q s + b * wp x R s \\<ominus> c) +\n  (1 - P s) * (a * wp y Q s + b * wp y R s \\<ominus> c)\n\ngoal (1 subgoal):\n 1. \\<And>a b c Pa Q s.\n       \\<lbrakk>sound Pa; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * (P s * wp x Pa s + (1 - P s) * wp y Pa s) +\n                         b *\n                         (P s * wp x Q s + (1 - P s) * wp y Q s) \\<ominus>\n                         c\n                         \\<le> P s *\n                               wp x\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s +\n                               (1 - P s) *\n                               wp y\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s", "}"], ["proof (state)\nthis:\n  (P s * (a * wp x Q s + b * wp x R s) \\<ominus> P s * c) +\n  ((1 - P s) * (a * wp y Q s + b * wp y R s) \\<ominus> (1 - P s) * c) =\n  P s * (a * wp x Q s + b * wp x R s \\<ominus> c) +\n  (1 - P s) * (a * wp y Q s + b * wp y R s \\<ominus> c)\n\ngoal (1 subgoal):\n 1. \\<And>a b c Pa Q s.\n       \\<lbrakk>sound Pa; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * (P s * wp x Pa s + (1 - P s) * wp y Pa s) +\n                         b *\n                         (P s * wp x Q s + (1 - P s) * wp y Q s) \\<ominus>\n                         c\n                         \\<le> P s *\n                               wp x\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s +\n                               (1 - P s) *\n                               wp y\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s", "also"], ["proof (state)\nthis:\n  (P s * (a * wp x Q s + b * wp x R s) \\<ominus> P s * c) +\n  ((1 - P s) * (a * wp y Q s + b * wp y R s) \\<ominus> (1 - P s) * c) =\n  P s * (a * wp x Q s + b * wp x R s \\<ominus> c) +\n  (1 - P s) * (a * wp y Q s + b * wp y R s \\<ominus> c)\n\ngoal (1 subgoal):\n 1. \\<And>a b c Pa Q s.\n       \\<lbrakk>sound Pa; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * (P s * wp x Pa s + (1 - P s) * wp y Pa s) +\n                         b *\n                         (P s * wp x Q s + (1 - P s) * wp y Q s) \\<ominus>\n                         c\n                         \\<le> P s *\n                               wp x\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s +\n                               (1 - P s) *\n                               wp y\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s", "{"], ["proof (state)\nthis:\n  (P s * (a * wp x Q s + b * wp x R s) \\<ominus> P s * c) +\n  ((1 - P s) * (a * wp y Q s + b * wp y R s) \\<ominus> (1 - P s) * c) =\n  P s * (a * wp x Q s + b * wp x R s \\<ominus> c) +\n  (1 - P s) * (a * wp y Q s + b * wp y R s \\<ominus> c)\n\ngoal (1 subgoal):\n 1. \\<And>a b c Pa Q s.\n       \\<lbrakk>sound Pa; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * (P s * wp x Pa s + (1 - P s) * wp y Pa s) +\n                         b *\n                         (P s * wp x Q s + (1 - P s) * wp y Q s) \\<ominus>\n                         c\n                         \\<le> P s *\n                               wp x\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s +\n                               (1 - P s) *\n                               wp y\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s", "from sQ sR nna nnb nnc slx"], ["proof (chain)\npicking this:\n  sound Q\n  sound R\n  0 \\<le> a\n  0 \\<le> b\n  0 \\<le> c\n  sublinear (wp x)", "have \"a * wp x Q s + b * wp x R s \\<ominus> c \\<le>\n          wp x (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s\""], ["proof (prove)\nusing this:\n  sound Q\n  sound R\n  0 \\<le> a\n  0 \\<le> b\n  0 \\<le> c\n  sublinear (wp x)\n\ngoal (1 subgoal):\n 1. a * wp x Q s + b * wp x R s \\<ominus> c\n    \\<le> wp x (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s", "by(blast)"], ["proof (state)\nthis:\n  a * wp x Q s + b * wp x R s \\<ominus> c\n  \\<le> wp x (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s\n\ngoal (1 subgoal):\n 1. \\<And>a b c Pa Q s.\n       \\<lbrakk>sound Pa; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * (P s * wp x Pa s + (1 - P s) * wp y Pa s) +\n                         b *\n                         (P s * wp x Q s + (1 - P s) * wp y Q s) \\<ominus>\n                         c\n                         \\<le> P s *\n                               wp x\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s +\n                               (1 - P s) *\n                               wp y\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s", "moreover"], ["proof (state)\nthis:\n  a * wp x Q s + b * wp x R s \\<ominus> c\n  \\<le> wp x (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s\n\ngoal (1 subgoal):\n 1. \\<And>a b c Pa Q s.\n       \\<lbrakk>sound Pa; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * (P s * wp x Pa s + (1 - P s) * wp y Pa s) +\n                         b *\n                         (P s * wp x Q s + (1 - P s) * wp y Q s) \\<ominus>\n                         c\n                         \\<le> P s *\n                               wp x\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s +\n                               (1 - P s) *\n                               wp y\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s", "from sQ sR nna nnb nnc sly"], ["proof (chain)\npicking this:\n  sound Q\n  sound R\n  0 \\<le> a\n  0 \\<le> b\n  0 \\<le> c\n  sublinear (wp y)", "have \"a * wp y Q s + b * wp y R s \\<ominus> c \\<le>\n          wp y (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s\""], ["proof (prove)\nusing this:\n  sound Q\n  sound R\n  0 \\<le> a\n  0 \\<le> b\n  0 \\<le> c\n  sublinear (wp y)\n\ngoal (1 subgoal):\n 1. a * wp y Q s + b * wp y R s \\<ominus> c\n    \\<le> wp y (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s", "by(blast)"], ["proof (state)\nthis:\n  a * wp y Q s + b * wp y R s \\<ominus> c\n  \\<le> wp y (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s\n\ngoal (1 subgoal):\n 1. \\<And>a b c Pa Q s.\n       \\<lbrakk>sound Pa; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * (P s * wp x Pa s + (1 - P s) * wp y Pa s) +\n                         b *\n                         (P s * wp x Q s + (1 - P s) * wp y Q s) \\<ominus>\n                         c\n                         \\<le> P s *\n                               wp x\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s +\n                               (1 - P s) *\n                               wp y\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s", "moreover"], ["proof (state)\nthis:\n  a * wp y Q s + b * wp y R s \\<ominus> c\n  \\<le> wp y (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s\n\ngoal (1 subgoal):\n 1. \\<And>a b c Pa Q s.\n       \\<lbrakk>sound Pa; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * (P s * wp x Pa s + (1 - P s) * wp y Pa s) +\n                         b *\n                         (P s * wp x Q s + (1 - P s) * wp y Q s) \\<ominus>\n                         c\n                         \\<le> P s *\n                               wp x\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s +\n                               (1 - P s) *\n                               wp y\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s", "from uP"], ["proof (chain)\npicking this:\n  unitary P", "have \"0 \\<le> P s\" and \"0 \\<le> 1 - P s\""], ["proof (prove)\nusing this:\n  unitary P\n\ngoal (1 subgoal):\n 1. 0 \\<le> P s &&& 0 \\<le> 1 - P s", "by auto"], ["proof (state)\nthis:\n  0 \\<le> P s\n  0 \\<le> 1 - P s\n\ngoal (1 subgoal):\n 1. \\<And>a b c Pa Q s.\n       \\<lbrakk>sound Pa; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * (P s * wp x Pa s + (1 - P s) * wp y Pa s) +\n                         b *\n                         (P s * wp x Q s + (1 - P s) * wp y Q s) \\<ominus>\n                         c\n                         \\<le> P s *\n                               wp x\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s +\n                               (1 - P s) *\n                               wp y\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s", "ultimately"], ["proof (chain)\npicking this:\n  a * wp x Q s + b * wp x R s \\<ominus> c\n  \\<le> wp x (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s\n  a * wp y Q s + b * wp y R s \\<ominus> c\n  \\<le> wp y (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s\n  0 \\<le> P s\n  0 \\<le> 1 - P s", "have \"P s * (a * wp x Q s + b * wp x R s \\<ominus> c) +\n          (1 - P s) * (a * wp y Q s + b * wp y R s  \\<ominus> c) \\<le>\n          P s * wp x (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s +\n          (1 - P s) * wp y (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s\""], ["proof (prove)\nusing this:\n  a * wp x Q s + b * wp x R s \\<ominus> c\n  \\<le> wp x (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s\n  a * wp y Q s + b * wp y R s \\<ominus> c\n  \\<le> wp y (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s\n  0 \\<le> P s\n  0 \\<le> 1 - P s\n\ngoal (1 subgoal):\n 1. P s * (a * wp x Q s + b * wp x R s \\<ominus> c) +\n    (1 - P s) * (a * wp y Q s + b * wp y R s \\<ominus> c)\n    \\<le> P s * wp x (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s +\n          (1 - P s) * wp y (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s", "by(blast intro:add_mono mult_left_mono)"], ["proof (state)\nthis:\n  P s * (a * wp x Q s + b * wp x R s \\<ominus> c) +\n  (1 - P s) * (a * wp y Q s + b * wp y R s \\<ominus> c)\n  \\<le> P s * wp x (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s +\n        (1 - P s) * wp y (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s\n\ngoal (1 subgoal):\n 1. \\<And>a b c Pa Q s.\n       \\<lbrakk>sound Pa; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * (P s * wp x Pa s + (1 - P s) * wp y Pa s) +\n                         b *\n                         (P s * wp x Q s + (1 - P s) * wp y Q s) \\<ominus>\n                         c\n                         \\<le> P s *\n                               wp x\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s +\n                               (1 - P s) *\n                               wp y\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s", "}"], ["proof (state)\nthis:\n  P s * (a * wp x Q s + b * wp x R s \\<ominus> c) +\n  (1 - P s) * (a * wp y Q s + b * wp y R s \\<ominus> c)\n  \\<le> P s * wp x (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s +\n        (1 - P s) * wp y (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s\n\ngoal (1 subgoal):\n 1. \\<And>a b c Pa Q s.\n       \\<lbrakk>sound Pa; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * (P s * wp x Pa s + (1 - P s) * wp y Pa s) +\n                         b *\n                         (P s * wp x Q s + (1 - P s) * wp y Q s) \\<ominus>\n                         c\n                         \\<le> P s *\n                               wp x\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s +\n                               (1 - P s) *\n                               wp y\n                                (\\<lambda>s'.\n                                    a * Pa s' + b * Q s' \\<ominus> c)\n                                s", "finally"], ["proof (chain)\npicking this:\n  a * (P s * wp x Q s + (1 - P s) * wp y Q s) +\n  b * (P s * wp x R s + (1 - P s) * wp y R s) \\<ominus>\n  c\n  \\<le> P s * wp x (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s +\n        (1 - P s) * wp y (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s", "show \" a * (P s * wp x Q s + (1 - P s) * wp y Q s) +\n         b * (P s * wp x R s + (1 - P s) * wp y R s) \\<ominus> c \\<le>\n         P s * wp x (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s +\n         (1 - P s) * wp y (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s\""], ["proof (prove)\nusing this:\n  a * (P s * wp x Q s + (1 - P s) * wp y Q s) +\n  b * (P s * wp x R s + (1 - P s) * wp y R s) \\<ominus>\n  c\n  \\<le> P s * wp x (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s +\n        (1 - P s) * wp y (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s\n\ngoal (1 subgoal):\n 1. a * (P s * wp x Q s + (1 - P s) * wp y Q s) +\n    b * (P s * wp x R s + (1 - P s) * wp y R s) \\<ominus>\n    c\n    \\<le> P s * wp x (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s +\n          (1 - P s) * wp y (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s", "."], ["proof (state)\nthis:\n  a * (P s * wp x Q s + (1 - P s) * wp y Q s) +\n  b * (P s * wp x R s + (1 - P s) * wp y R s) \\<ominus>\n  c\n  \\<le> P s * wp x (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s +\n        (1 - P s) * wp y (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sublinear_wp_DC:\n  fixes x::\"'s prog\"\n  assumes slx: \"sublinear (wp x)\" and sly: \"sublinear (wp y)\"\n  shows \"sublinear (wp (x \\<Sqinter> y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sublinear (wp (x \\<Sqinter> y))", "proof(rule sublinearI, simp only:wp_eval)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b c P Q s.\n       \\<lbrakk>sound P; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * min (wp x P s) (wp y P s) +\n                         b * min (wp x Q s) (wp y Q s) \\<ominus>\n                         c\n                         \\<le> min (wp x\n                                     (\\<lambda>s'.\n   a * P s' + b * Q s' \\<ominus> c)\n                                     s)\n                                (wp y\n                                  (\\<lambda>s'.\na * P s' + b * Q s' \\<ominus> c)\n                                  s)", "fix R::\"'s \\<Rightarrow> real\" and Q::\"'s \\<Rightarrow> real\" and s::'s\n  and a::real and b::real and c::real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b c P Q s.\n       \\<lbrakk>sound P; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * min (wp x P s) (wp y P s) +\n                         b * min (wp x Q s) (wp y Q s) \\<ominus>\n                         c\n                         \\<le> min (wp x\n                                     (\\<lambda>s'.\n   a * P s' + b * Q s' \\<ominus> c)\n                                     s)\n                                (wp y\n                                  (\\<lambda>s'.\na * P s' + b * Q s' \\<ominus> c)\n                                  s)", "assume sR: \"sound R\" and sQ: \"sound Q\"\n     and nna: \"0 \\<le> a\" and nnb: \"0 \\<le> b\" and nnc: \"0 \\<le> c\""], ["proof (state)\nthis:\n  sound R\n  sound Q\n  0 \\<le> a\n  0 \\<le> b\n  0 \\<le> c\n\ngoal (1 subgoal):\n 1. \\<And>a b c P Q s.\n       \\<lbrakk>sound P; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * min (wp x P s) (wp y P s) +\n                         b * min (wp x Q s) (wp y Q s) \\<ominus>\n                         c\n                         \\<le> min (wp x\n                                     (\\<lambda>s'.\n   a * P s' + b * Q s' \\<ominus> c)\n                                     s)\n                                (wp y\n                                  (\\<lambda>s'.\na * P s' + b * Q s' \\<ominus> c)\n                                  s)", "from nna nnb"], ["proof (chain)\npicking this:\n  0 \\<le> a\n  0 \\<le> b", "have \"a * min (wp x Q s) (wp y Q s) +\n        b * min (wp x R s) (wp y R s) \\<ominus> c =\n        min (a * wp x Q s) (a * wp y Q s) +\n        min (b * wp x R s) (b * wp y R s) \\<ominus> c\""], ["proof (prove)\nusing this:\n  0 \\<le> a\n  0 \\<le> b\n\ngoal (1 subgoal):\n 1. a * min (wp x Q s) (wp y Q s) + b * min (wp x R s) (wp y R s) \\<ominus>\n    c =\n    min (a * wp x Q s) (a * wp y Q s) +\n    min (b * wp x R s) (b * wp y R s) \\<ominus>\n    c", "by(simp add:min_distrib)"], ["proof (state)\nthis:\n  a * min (wp x Q s) (wp y Q s) + b * min (wp x R s) (wp y R s) \\<ominus>\n  c =\n  min (a * wp x Q s) (a * wp y Q s) +\n  min (b * wp x R s) (b * wp y R s) \\<ominus>\n  c\n\ngoal (1 subgoal):\n 1. \\<And>a b c P Q s.\n       \\<lbrakk>sound P; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * min (wp x P s) (wp y P s) +\n                         b * min (wp x Q s) (wp y Q s) \\<ominus>\n                         c\n                         \\<le> min (wp x\n                                     (\\<lambda>s'.\n   a * P s' + b * Q s' \\<ominus> c)\n                                     s)\n                                (wp y\n                                  (\\<lambda>s'.\na * P s' + b * Q s' \\<ominus> c)\n                                  s)", "also"], ["proof (state)\nthis:\n  a * min (wp x Q s) (wp y Q s) + b * min (wp x R s) (wp y R s) \\<ominus>\n  c =\n  min (a * wp x Q s) (a * wp y Q s) +\n  min (b * wp x R s) (b * wp y R s) \\<ominus>\n  c\n\ngoal (1 subgoal):\n 1. \\<And>a b c P Q s.\n       \\<lbrakk>sound P; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * min (wp x P s) (wp y P s) +\n                         b * min (wp x Q s) (wp y Q s) \\<ominus>\n                         c\n                         \\<le> min (wp x\n                                     (\\<lambda>s'.\n   a * P s' + b * Q s' \\<ominus> c)\n                                     s)\n                                (wp y\n                                  (\\<lambda>s'.\na * P s' + b * Q s' \\<ominus> c)\n                                  s)", "have \"... \\<le> min (a * wp x Q s + b * wp x R s)\n                  (a * wp y Q s + b * wp y R s) \\<ominus> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. min (a * wp x Q s) (a * wp y Q s) +\n    min (b * wp x R s) (b * wp y R s) \\<ominus>\n    c\n    \\<le> min (a * wp x Q s + b * wp x R s)\n           (a * wp y Q s + b * wp y R s) \\<ominus>\n          c", "by(auto intro!:tminus_left_mono)"], ["proof (state)\nthis:\n  min (a * wp x Q s) (a * wp y Q s) +\n  min (b * wp x R s) (b * wp y R s) \\<ominus>\n  c\n  \\<le> min (a * wp x Q s + b * wp x R s)\n         (a * wp y Q s + b * wp y R s) \\<ominus>\n        c\n\ngoal (1 subgoal):\n 1. \\<And>a b c P Q s.\n       \\<lbrakk>sound P; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * min (wp x P s) (wp y P s) +\n                         b * min (wp x Q s) (wp y Q s) \\<ominus>\n                         c\n                         \\<le> min (wp x\n                                     (\\<lambda>s'.\n   a * P s' + b * Q s' \\<ominus> c)\n                                     s)\n                                (wp y\n                                  (\\<lambda>s'.\na * P s' + b * Q s' \\<ominus> c)\n                                  s)", "also"], ["proof (state)\nthis:\n  min (a * wp x Q s) (a * wp y Q s) +\n  min (b * wp x R s) (b * wp y R s) \\<ominus>\n  c\n  \\<le> min (a * wp x Q s + b * wp x R s)\n         (a * wp y Q s + b * wp y R s) \\<ominus>\n        c\n\ngoal (1 subgoal):\n 1. \\<And>a b c P Q s.\n       \\<lbrakk>sound P; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * min (wp x P s) (wp y P s) +\n                         b * min (wp x Q s) (wp y Q s) \\<ominus>\n                         c\n                         \\<le> min (wp x\n                                     (\\<lambda>s'.\n   a * P s' + b * Q s' \\<ominus> c)\n                                     s)\n                                (wp y\n                                  (\\<lambda>s'.\na * P s' + b * Q s' \\<ominus> c)\n                                  s)", "have \"... = min (a * wp x Q s + b * wp x R s \\<ominus> c)\n                  (a * wp y Q s + b * wp y R s \\<ominus> c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. min (a * wp x Q s + b * wp x R s)\n     (a * wp y Q s + b * wp y R s) \\<ominus>\n    c =\n    min (a * wp x Q s + b * wp x R s \\<ominus> c)\n     (a * wp y Q s + b * wp y R s \\<ominus> c)", "by(rule min_tminus_distrib)"], ["proof (state)\nthis:\n  min (a * wp x Q s + b * wp x R s) (a * wp y Q s + b * wp y R s) \\<ominus>\n  c =\n  min (a * wp x Q s + b * wp x R s \\<ominus> c)\n   (a * wp y Q s + b * wp y R s \\<ominus> c)\n\ngoal (1 subgoal):\n 1. \\<And>a b c P Q s.\n       \\<lbrakk>sound P; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * min (wp x P s) (wp y P s) +\n                         b * min (wp x Q s) (wp y Q s) \\<ominus>\n                         c\n                         \\<le> min (wp x\n                                     (\\<lambda>s'.\n   a * P s' + b * Q s' \\<ominus> c)\n                                     s)\n                                (wp y\n                                  (\\<lambda>s'.\na * P s' + b * Q s' \\<ominus> c)\n                                  s)", "also"], ["proof (state)\nthis:\n  min (a * wp x Q s + b * wp x R s) (a * wp y Q s + b * wp y R s) \\<ominus>\n  c =\n  min (a * wp x Q s + b * wp x R s \\<ominus> c)\n   (a * wp y Q s + b * wp y R s \\<ominus> c)\n\ngoal (1 subgoal):\n 1. \\<And>a b c P Q s.\n       \\<lbrakk>sound P; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * min (wp x P s) (wp y P s) +\n                         b * min (wp x Q s) (wp y Q s) \\<ominus>\n                         c\n                         \\<le> min (wp x\n                                     (\\<lambda>s'.\n   a * P s' + b * Q s' \\<ominus> c)\n                                     s)\n                                (wp y\n                                  (\\<lambda>s'.\na * P s' + b * Q s' \\<ominus> c)\n                                  s)", "{"], ["proof (state)\nthis:\n  min (a * wp x Q s + b * wp x R s) (a * wp y Q s + b * wp y R s) \\<ominus>\n  c =\n  min (a * wp x Q s + b * wp x R s \\<ominus> c)\n   (a * wp y Q s + b * wp y R s \\<ominus> c)\n\ngoal (1 subgoal):\n 1. \\<And>a b c P Q s.\n       \\<lbrakk>sound P; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * min (wp x P s) (wp y P s) +\n                         b * min (wp x Q s) (wp y Q s) \\<ominus>\n                         c\n                         \\<le> min (wp x\n                                     (\\<lambda>s'.\n   a * P s' + b * Q s' \\<ominus> c)\n                                     s)\n                                (wp y\n                                  (\\<lambda>s'.\na * P s' + b * Q s' \\<ominus> c)\n                                  s)", "from slx sQ sR nna nnb nnc"], ["proof (chain)\npicking this:\n  sublinear (wp x)\n  sound Q\n  sound R\n  0 \\<le> a\n  0 \\<le> b\n  0 \\<le> c", "have \"a * wp x Q s + b * wp x R s \\<ominus> c \\<le>\n          wp x (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s\""], ["proof (prove)\nusing this:\n  sublinear (wp x)\n  sound Q\n  sound R\n  0 \\<le> a\n  0 \\<le> b\n  0 \\<le> c\n\ngoal (1 subgoal):\n 1. a * wp x Q s + b * wp x R s \\<ominus> c\n    \\<le> wp x (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s", "by(blast)"], ["proof (state)\nthis:\n  a * wp x Q s + b * wp x R s \\<ominus> c\n  \\<le> wp x (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s\n\ngoal (1 subgoal):\n 1. \\<And>a b c P Q s.\n       \\<lbrakk>sound P; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * min (wp x P s) (wp y P s) +\n                         b * min (wp x Q s) (wp y Q s) \\<ominus>\n                         c\n                         \\<le> min (wp x\n                                     (\\<lambda>s'.\n   a * P s' + b * Q s' \\<ominus> c)\n                                     s)\n                                (wp y\n                                  (\\<lambda>s'.\na * P s' + b * Q s' \\<ominus> c)\n                                  s)", "moreover"], ["proof (state)\nthis:\n  a * wp x Q s + b * wp x R s \\<ominus> c\n  \\<le> wp x (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s\n\ngoal (1 subgoal):\n 1. \\<And>a b c P Q s.\n       \\<lbrakk>sound P; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * min (wp x P s) (wp y P s) +\n                         b * min (wp x Q s) (wp y Q s) \\<ominus>\n                         c\n                         \\<le> min (wp x\n                                     (\\<lambda>s'.\n   a * P s' + b * Q s' \\<ominus> c)\n                                     s)\n                                (wp y\n                                  (\\<lambda>s'.\na * P s' + b * Q s' \\<ominus> c)\n                                  s)", "from sly sQ sR nna nnb nnc"], ["proof (chain)\npicking this:\n  sublinear (wp y)\n  sound Q\n  sound R\n  0 \\<le> a\n  0 \\<le> b\n  0 \\<le> c", "have \"a * wp y Q s + b * wp y R s \\<ominus> c \\<le>\n          wp y (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s\""], ["proof (prove)\nusing this:\n  sublinear (wp y)\n  sound Q\n  sound R\n  0 \\<le> a\n  0 \\<le> b\n  0 \\<le> c\n\ngoal (1 subgoal):\n 1. a * wp y Q s + b * wp y R s \\<ominus> c\n    \\<le> wp y (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s", "by(blast)"], ["proof (state)\nthis:\n  a * wp y Q s + b * wp y R s \\<ominus> c\n  \\<le> wp y (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s\n\ngoal (1 subgoal):\n 1. \\<And>a b c P Q s.\n       \\<lbrakk>sound P; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * min (wp x P s) (wp y P s) +\n                         b * min (wp x Q s) (wp y Q s) \\<ominus>\n                         c\n                         \\<le> min (wp x\n                                     (\\<lambda>s'.\n   a * P s' + b * Q s' \\<ominus> c)\n                                     s)\n                                (wp y\n                                  (\\<lambda>s'.\na * P s' + b * Q s' \\<ominus> c)\n                                  s)", "ultimately"], ["proof (chain)\npicking this:\n  a * wp x Q s + b * wp x R s \\<ominus> c\n  \\<le> wp x (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s\n  a * wp y Q s + b * wp y R s \\<ominus> c\n  \\<le> wp y (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s", "have \"min (a * wp x Q s + b * wp x R s \\<ominus> c)\n              (a * wp y Q s + b * wp y R s \\<ominus> c) \\<le>\n          min (wp x (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s)\n              (wp y (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s)\""], ["proof (prove)\nusing this:\n  a * wp x Q s + b * wp x R s \\<ominus> c\n  \\<le> wp x (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s\n  a * wp y Q s + b * wp y R s \\<ominus> c\n  \\<le> wp y (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s\n\ngoal (1 subgoal):\n 1. min (a * wp x Q s + b * wp x R s \\<ominus> c)\n     (a * wp y Q s + b * wp y R s \\<ominus> c)\n    \\<le> min (wp x (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s)\n           (wp y (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s)", "by(auto)"], ["proof (state)\nthis:\n  min (a * wp x Q s + b * wp x R s \\<ominus> c)\n   (a * wp y Q s + b * wp y R s \\<ominus> c)\n  \\<le> min (wp x (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s)\n         (wp y (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s)\n\ngoal (1 subgoal):\n 1. \\<And>a b c P Q s.\n       \\<lbrakk>sound P; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * min (wp x P s) (wp y P s) +\n                         b * min (wp x Q s) (wp y Q s) \\<ominus>\n                         c\n                         \\<le> min (wp x\n                                     (\\<lambda>s'.\n   a * P s' + b * Q s' \\<ominus> c)\n                                     s)\n                                (wp y\n                                  (\\<lambda>s'.\na * P s' + b * Q s' \\<ominus> c)\n                                  s)", "}"], ["proof (state)\nthis:\n  min (a * wp x Q s + b * wp x R s \\<ominus> c)\n   (a * wp y Q s + b * wp y R s \\<ominus> c)\n  \\<le> min (wp x (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s)\n         (wp y (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s)\n\ngoal (1 subgoal):\n 1. \\<And>a b c P Q s.\n       \\<lbrakk>sound P; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a * min (wp x P s) (wp y P s) +\n                         b * min (wp x Q s) (wp y Q s) \\<ominus>\n                         c\n                         \\<le> min (wp x\n                                     (\\<lambda>s'.\n   a * P s' + b * Q s' \\<ominus> c)\n                                     s)\n                                (wp y\n                                  (\\<lambda>s'.\na * P s' + b * Q s' \\<ominus> c)\n                                  s)", "finally"], ["proof (chain)\npicking this:\n  a * min (wp x Q s) (wp y Q s) + b * min (wp x R s) (wp y R s) \\<ominus> c\n  \\<le> min (wp x (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s)\n         (wp y (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s)", "show \"a * min (wp x Q s) (wp y Q s) +\n                b * min (wp x R s) (wp y R s) \\<ominus> c \\<le>\n               min (wp x (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s)\n                   (wp y (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s)\""], ["proof (prove)\nusing this:\n  a * min (wp x Q s) (wp y Q s) + b * min (wp x R s) (wp y R s) \\<ominus> c\n  \\<le> min (wp x (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s)\n         (wp y (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s)\n\ngoal (1 subgoal):\n 1. a * min (wp x Q s) (wp y Q s) + b * min (wp x R s) (wp y R s) \\<ominus>\n    c\n    \\<le> min (wp x (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s)\n           (wp y (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s)", "."], ["proof (state)\nthis:\n  a * min (wp x Q s) (wp y Q s) + b * min (wp x R s) (wp y R s) \\<ominus> c\n  \\<le> min (wp x (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s)\n         (wp y (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>As for continuity, we insist on a finite support.\\<close>"], ["", "lemma sublinear_wp_SetPC:\n  fixes p::\"'a \\<Rightarrow> 's prog\"\n  assumes slp: \"\\<And>s a. a \\<in> supp (P s) \\<Longrightarrow> sublinear (wp (p a))\"\n      and sum: \"\\<And>s. (\\<Sum>a\\<in>supp (P s). P s a) \\<le> 1\"\n      and nnP: \"\\<And>s a. 0 \\<le> P s a\"\n      and fin: \"\\<And>s. finite (supp (P s))\"\n  shows \"sublinear (wp (SetPC p P))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sublinear (wp (SetPC p P))", "proof(rule sublinearI, simp add:wp_eval)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b c Pa Q s.\n       \\<lbrakk>sound Pa; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a *\n                         (\\<Sum>a\\<in>supp (P s). P s a * wp (p a) Pa s) +\n                         b *\n                         (\\<Sum>a\\<in>supp (P s).\n                            P s a * wp (p a) Q s) \\<ominus>\n                         c\n                         \\<le> (\\<Sum>aa\\<in>supp (P s).\n                                  P s aa *\n                                  wp (p aa)\n                                   (\\<lambda>s'.\n a * Pa s' + b * Q s' \\<ominus> c)\n                                   s)", "fix R::\"'s \\<Rightarrow> real\" and Q::\"'s \\<Rightarrow> real\" and s::'s\n  and a::real and b::real and c::real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b c Pa Q s.\n       \\<lbrakk>sound Pa; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a *\n                         (\\<Sum>a\\<in>supp (P s). P s a * wp (p a) Pa s) +\n                         b *\n                         (\\<Sum>a\\<in>supp (P s).\n                            P s a * wp (p a) Q s) \\<ominus>\n                         c\n                         \\<le> (\\<Sum>aa\\<in>supp (P s).\n                                  P s aa *\n                                  wp (p aa)\n                                   (\\<lambda>s'.\n a * Pa s' + b * Q s' \\<ominus> c)\n                                   s)", "assume sR: \"sound R\" and sQ: \"sound Q\"\n     and nna: \"0 \\<le> a\" and nnb: \"0 \\<le> b\" and nnc: \"0 \\<le> c\""], ["proof (state)\nthis:\n  sound R\n  sound Q\n  0 \\<le> a\n  0 \\<le> b\n  0 \\<le> c\n\ngoal (1 subgoal):\n 1. \\<And>a b c Pa Q s.\n       \\<lbrakk>sound Pa; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a *\n                         (\\<Sum>a\\<in>supp (P s). P s a * wp (p a) Pa s) +\n                         b *\n                         (\\<Sum>a\\<in>supp (P s).\n                            P s a * wp (p a) Q s) \\<ominus>\n                         c\n                         \\<le> (\\<Sum>aa\\<in>supp (P s).\n                                  P s aa *\n                                  wp (p aa)\n                                   (\\<lambda>s'.\n a * Pa s' + b * Q s' \\<ominus> c)\n                                   s)", "have \"a * (\\<Sum>a'\\<in>supp (P s). P s a' * wp (p a') Q s) +\n        b * (\\<Sum>a'\\<in>supp (P s). P s a' * wp (p a') R s) \\<ominus> c =\n        (\\<Sum>a'\\<in>supp (P s). P s a' * (a * wp (p a') Q s + b * wp (p a') R s)) \\<ominus> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a * (\\<Sum>a'\\<in>supp (P s). P s a' * wp (p a') Q s) +\n    b * (\\<Sum>a'\\<in>supp (P s). P s a' * wp (p a') R s) \\<ominus>\n    c =\n    (\\<Sum>a'\\<in>supp (P s).\n       P s a' * (a * wp (p a') Q s + b * wp (p a') R s)) \\<ominus>\n    c", "by(simp add:field_simps sum_distrib_left sum.distrib)"], ["proof (state)\nthis:\n  a * (\\<Sum>a'\\<in>supp (P s). P s a' * wp (p a') Q s) +\n  b * (\\<Sum>a'\\<in>supp (P s). P s a' * wp (p a') R s) \\<ominus>\n  c =\n  (\\<Sum>a'\\<in>supp (P s).\n     P s a' * (a * wp (p a') Q s + b * wp (p a') R s)) \\<ominus>\n  c\n\ngoal (1 subgoal):\n 1. \\<And>a b c Pa Q s.\n       \\<lbrakk>sound Pa; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a *\n                         (\\<Sum>a\\<in>supp (P s). P s a * wp (p a) Pa s) +\n                         b *\n                         (\\<Sum>a\\<in>supp (P s).\n                            P s a * wp (p a) Q s) \\<ominus>\n                         c\n                         \\<le> (\\<Sum>aa\\<in>supp (P s).\n                                  P s aa *\n                                  wp (p aa)\n                                   (\\<lambda>s'.\n a * Pa s' + b * Q s' \\<ominus> c)\n                                   s)", "also"], ["proof (state)\nthis:\n  a * (\\<Sum>a'\\<in>supp (P s). P s a' * wp (p a') Q s) +\n  b * (\\<Sum>a'\\<in>supp (P s). P s a' * wp (p a') R s) \\<ominus>\n  c =\n  (\\<Sum>a'\\<in>supp (P s).\n     P s a' * (a * wp (p a') Q s + b * wp (p a') R s)) \\<ominus>\n  c\n\ngoal (1 subgoal):\n 1. \\<And>a b c Pa Q s.\n       \\<lbrakk>sound Pa; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a *\n                         (\\<Sum>a\\<in>supp (P s). P s a * wp (p a) Pa s) +\n                         b *\n                         (\\<Sum>a\\<in>supp (P s).\n                            P s a * wp (p a) Q s) \\<ominus>\n                         c\n                         \\<le> (\\<Sum>aa\\<in>supp (P s).\n                                  P s aa *\n                                  wp (p aa)\n                                   (\\<lambda>s'.\n a * Pa s' + b * Q s' \\<ominus> c)\n                                   s)", "have \"... \\<le>\n             (\\<Sum>a'\\<in>supp (P s). P s a' * (a * wp (p a') Q s + b * wp (p a') R s)) \\<ominus>\n             (\\<Sum>a'\\<in>supp (P s). P s a' * c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>a'\\<in>supp (P s).\n       P s a' * (a * wp (p a') Q s + b * wp (p a') R s)) \\<ominus>\n    c\n    \\<le> (\\<Sum>a'\\<in>supp (P s).\n             P s a' * (a * wp (p a') Q s + b * wp (p a') R s)) \\<ominus>\n          (\\<Sum>a'\\<in>supp (P s). P s a' * c)", "proof(rule tminus_right_antimono)"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>a'\\<in>supp (P s). P s a' * c) \\<le> c", "have \"(\\<Sum>a'\\<in>supp (P s). P s a' * c) \\<le> (\\<Sum>a'\\<in>supp (P s). P s a') * c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>a'\\<in>supp (P s). P s a' * c) \\<le> sum (P s) (supp (P s)) * c", "by(simp add:sum_distrib_right)"], ["proof (state)\nthis:\n  (\\<Sum>a'\\<in>supp (P s). P s a' * c) \\<le> sum (P s) (supp (P s)) * c\n\ngoal (1 subgoal):\n 1. (\\<Sum>a'\\<in>supp (P s). P s a' * c) \\<le> c", "also"], ["proof (state)\nthis:\n  (\\<Sum>a'\\<in>supp (P s). P s a' * c) \\<le> sum (P s) (supp (P s)) * c\n\ngoal (1 subgoal):\n 1. (\\<Sum>a'\\<in>supp (P s). P s a' * c) \\<le> c", "from sum and nnc"], ["proof (chain)\npicking this:\n  sum (P ?s) (supp (P ?s)) \\<le> 1\n  0 \\<le> c", "have \"... \\<le> 1 * c\""], ["proof (prove)\nusing this:\n  sum (P ?s) (supp (P ?s)) \\<le> 1\n  0 \\<le> c\n\ngoal (1 subgoal):\n 1. sum (P s) (supp (P s)) * c \\<le> 1 * c", "by(rule mult_right_mono)"], ["proof (state)\nthis:\n  sum (P s) (supp (P s)) * c \\<le> 1 * c\n\ngoal (1 subgoal):\n 1. (\\<Sum>a'\\<in>supp (P s). P s a' * c) \\<le> c", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>a'\\<in>supp (P s). P s a' * c) \\<le> 1 * c", "show \"(\\<Sum>a'\\<in>supp (P s). P s a' * c) \\<le> c\""], ["proof (prove)\nusing this:\n  (\\<Sum>a'\\<in>supp (P s). P s a' * c) \\<le> 1 * c\n\ngoal (1 subgoal):\n 1. (\\<Sum>a'\\<in>supp (P s). P s a' * c) \\<le> c", "by(simp)"], ["proof (state)\nthis:\n  (\\<Sum>a'\\<in>supp (P s). P s a' * c) \\<le> c\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>a'\\<in>supp (P s).\n     P s a' * (a * wp (p a') Q s + b * wp (p a') R s)) \\<ominus>\n  c\n  \\<le> (\\<Sum>a'\\<in>supp (P s).\n           P s a' * (a * wp (p a') Q s + b * wp (p a') R s)) \\<ominus>\n        (\\<Sum>a'\\<in>supp (P s). P s a' * c)\n\ngoal (1 subgoal):\n 1. \\<And>a b c Pa Q s.\n       \\<lbrakk>sound Pa; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a *\n                         (\\<Sum>a\\<in>supp (P s). P s a * wp (p a) Pa s) +\n                         b *\n                         (\\<Sum>a\\<in>supp (P s).\n                            P s a * wp (p a) Q s) \\<ominus>\n                         c\n                         \\<le> (\\<Sum>aa\\<in>supp (P s).\n                                  P s aa *\n                                  wp (p aa)\n                                   (\\<lambda>s'.\n a * Pa s' + b * Q s' \\<ominus> c)\n                                   s)", "also"], ["proof (state)\nthis:\n  (\\<Sum>a'\\<in>supp (P s).\n     P s a' * (a * wp (p a') Q s + b * wp (p a') R s)) \\<ominus>\n  c\n  \\<le> (\\<Sum>a'\\<in>supp (P s).\n           P s a' * (a * wp (p a') Q s + b * wp (p a') R s)) \\<ominus>\n        (\\<Sum>a'\\<in>supp (P s). P s a' * c)\n\ngoal (1 subgoal):\n 1. \\<And>a b c Pa Q s.\n       \\<lbrakk>sound Pa; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a *\n                         (\\<Sum>a\\<in>supp (P s). P s a * wp (p a) Pa s) +\n                         b *\n                         (\\<Sum>a\\<in>supp (P s).\n                            P s a * wp (p a) Q s) \\<ominus>\n                         c\n                         \\<le> (\\<Sum>aa\\<in>supp (P s).\n                                  P s aa *\n                                  wp (p aa)\n                                   (\\<lambda>s'.\n a * Pa s' + b * Q s' \\<ominus> c)\n                                   s)", "from fin"], ["proof (chain)\npicking this:\n  finite (supp (P ?s))", "have \"... \\<le> (\\<Sum>a'\\<in>supp (P s). P s a' * (a * wp (p a') Q s + b * wp (p a') R s) \\<ominus> P s a' * c)\""], ["proof (prove)\nusing this:\n  finite (supp (P ?s))\n\ngoal (1 subgoal):\n 1. (\\<Sum>a'\\<in>supp (P s).\n       P s a' * (a * wp (p a') Q s + b * wp (p a') R s)) \\<ominus>\n    (\\<Sum>a'\\<in>supp (P s). P s a' * c)\n    \\<le> (\\<Sum>a'\\<in>supp (P s).\n             P s a' * (a * wp (p a') Q s + b * wp (p a') R s) \\<ominus>\n             P s a' * c)", "by(blast intro:tminus_sum_mono)"], ["proof (state)\nthis:\n  (\\<Sum>a'\\<in>supp (P s).\n     P s a' * (a * wp (p a') Q s + b * wp (p a') R s)) \\<ominus>\n  (\\<Sum>a'\\<in>supp (P s). P s a' * c)\n  \\<le> (\\<Sum>a'\\<in>supp (P s).\n           P s a' * (a * wp (p a') Q s + b * wp (p a') R s) \\<ominus>\n           P s a' * c)\n\ngoal (1 subgoal):\n 1. \\<And>a b c Pa Q s.\n       \\<lbrakk>sound Pa; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a *\n                         (\\<Sum>a\\<in>supp (P s). P s a * wp (p a) Pa s) +\n                         b *\n                         (\\<Sum>a\\<in>supp (P s).\n                            P s a * wp (p a) Q s) \\<ominus>\n                         c\n                         \\<le> (\\<Sum>aa\\<in>supp (P s).\n                                  P s aa *\n                                  wp (p aa)\n                                   (\\<lambda>s'.\n a * Pa s' + b * Q s' \\<ominus> c)\n                                   s)", "also"], ["proof (state)\nthis:\n  (\\<Sum>a'\\<in>supp (P s).\n     P s a' * (a * wp (p a') Q s + b * wp (p a') R s)) \\<ominus>\n  (\\<Sum>a'\\<in>supp (P s). P s a' * c)\n  \\<le> (\\<Sum>a'\\<in>supp (P s).\n           P s a' * (a * wp (p a') Q s + b * wp (p a') R s) \\<ominus>\n           P s a' * c)\n\ngoal (1 subgoal):\n 1. \\<And>a b c Pa Q s.\n       \\<lbrakk>sound Pa; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a *\n                         (\\<Sum>a\\<in>supp (P s). P s a * wp (p a) Pa s) +\n                         b *\n                         (\\<Sum>a\\<in>supp (P s).\n                            P s a * wp (p a) Q s) \\<ominus>\n                         c\n                         \\<le> (\\<Sum>aa\\<in>supp (P s).\n                                  P s aa *\n                                  wp (p aa)\n                                   (\\<lambda>s'.\n a * Pa s' + b * Q s' \\<ominus> c)\n                                   s)", "have \"... = (\\<Sum>a'\\<in>supp (P s). P s a' * (a * wp (p a') Q s + b * wp (p a') R s \\<ominus> c))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>a'\\<in>supp (P s).\n       P s a' * (a * wp (p a') Q s + b * wp (p a') R s) \\<ominus>\n       P s a' * c) =\n    (\\<Sum>a'\\<in>supp (P s).\n       P s a' * (a * wp (p a') Q s + b * wp (p a') R s \\<ominus> c))", "by(simp add:nnP tminus_left_distrib)"], ["proof (state)\nthis:\n  (\\<Sum>a'\\<in>supp (P s).\n     P s a' * (a * wp (p a') Q s + b * wp (p a') R s) \\<ominus>\n     P s a' * c) =\n  (\\<Sum>a'\\<in>supp (P s).\n     P s a' * (a * wp (p a') Q s + b * wp (p a') R s \\<ominus> c))\n\ngoal (1 subgoal):\n 1. \\<And>a b c Pa Q s.\n       \\<lbrakk>sound Pa; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a *\n                         (\\<Sum>a\\<in>supp (P s). P s a * wp (p a) Pa s) +\n                         b *\n                         (\\<Sum>a\\<in>supp (P s).\n                            P s a * wp (p a) Q s) \\<ominus>\n                         c\n                         \\<le> (\\<Sum>aa\\<in>supp (P s).\n                                  P s aa *\n                                  wp (p aa)\n                                   (\\<lambda>s'.\n a * Pa s' + b * Q s' \\<ominus> c)\n                                   s)", "also"], ["proof (state)\nthis:\n  (\\<Sum>a'\\<in>supp (P s).\n     P s a' * (a * wp (p a') Q s + b * wp (p a') R s) \\<ominus>\n     P s a' * c) =\n  (\\<Sum>a'\\<in>supp (P s).\n     P s a' * (a * wp (p a') Q s + b * wp (p a') R s \\<ominus> c))\n\ngoal (1 subgoal):\n 1. \\<And>a b c Pa Q s.\n       \\<lbrakk>sound Pa; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a *\n                         (\\<Sum>a\\<in>supp (P s). P s a * wp (p a) Pa s) +\n                         b *\n                         (\\<Sum>a\\<in>supp (P s).\n                            P s a * wp (p a) Q s) \\<ominus>\n                         c\n                         \\<le> (\\<Sum>aa\\<in>supp (P s).\n                                  P s aa *\n                                  wp (p aa)\n                                   (\\<lambda>s'.\n a * Pa s' + b * Q s' \\<ominus> c)\n                                   s)", "{"], ["proof (state)\nthis:\n  (\\<Sum>a'\\<in>supp (P s).\n     P s a' * (a * wp (p a') Q s + b * wp (p a') R s) \\<ominus>\n     P s a' * c) =\n  (\\<Sum>a'\\<in>supp (P s).\n     P s a' * (a * wp (p a') Q s + b * wp (p a') R s \\<ominus> c))\n\ngoal (1 subgoal):\n 1. \\<And>a b c Pa Q s.\n       \\<lbrakk>sound Pa; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a *\n                         (\\<Sum>a\\<in>supp (P s). P s a * wp (p a) Pa s) +\n                         b *\n                         (\\<Sum>a\\<in>supp (P s).\n                            P s a * wp (p a) Q s) \\<ominus>\n                         c\n                         \\<le> (\\<Sum>aa\\<in>supp (P s).\n                                  P s aa *\n                                  wp (p aa)\n                                   (\\<lambda>s'.\n a * Pa s' + b * Q s' \\<ominus> c)\n                                   s)", "from slp sQ sR nna nnb nnc"], ["proof (chain)\npicking this:\n  ?a \\<in> supp (P ?s) \\<Longrightarrow> sublinear (wp (p ?a))\n  sound Q\n  sound R\n  0 \\<le> a\n  0 \\<le> b\n  0 \\<le> c", "have \"\\<And>a'. a' \\<in> supp (P s) \\<Longrightarrow> a * wp (p a') Q s + b * wp (p a') R s \\<ominus> c \\<le>\n                                    wp (p a') (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s\""], ["proof (prove)\nusing this:\n  ?a \\<in> supp (P ?s) \\<Longrightarrow> sublinear (wp (p ?a))\n  sound Q\n  sound R\n  0 \\<le> a\n  0 \\<le> b\n  0 \\<le> c\n\ngoal (1 subgoal):\n 1. \\<And>a'.\n       a' \\<in> supp (P s) \\<Longrightarrow>\n       a * wp (p a') Q s + b * wp (p a') R s \\<ominus> c\n       \\<le> wp (p a') (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s", "by(blast)"], ["proof (state)\nthis:\n  ?a' \\<in> supp (P s) \\<Longrightarrow>\n  a * wp (p ?a') Q s + b * wp (p ?a') R s \\<ominus> c\n  \\<le> wp (p ?a') (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s\n\ngoal (1 subgoal):\n 1. \\<And>a b c Pa Q s.\n       \\<lbrakk>sound Pa; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a *\n                         (\\<Sum>a\\<in>supp (P s). P s a * wp (p a) Pa s) +\n                         b *\n                         (\\<Sum>a\\<in>supp (P s).\n                            P s a * wp (p a) Q s) \\<ominus>\n                         c\n                         \\<le> (\\<Sum>aa\\<in>supp (P s).\n                                  P s aa *\n                                  wp (p aa)\n                                   (\\<lambda>s'.\n a * Pa s' + b * Q s' \\<ominus> c)\n                                   s)", "with nnP"], ["proof (chain)\npicking this:\n  0 \\<le> P ?s ?a\n  ?a' \\<in> supp (P s) \\<Longrightarrow>\n  a * wp (p ?a') Q s + b * wp (p ?a') R s \\<ominus> c\n  \\<le> wp (p ?a') (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s", "have \"(\\<Sum>a'\\<in>supp (P s). P s a' * (a * wp (p a') Q s + b * wp (p a') R s \\<ominus> c)) \\<le>\n          (\\<Sum>a'\\<in>supp (P s). P s a' * wp (p a') (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s)\""], ["proof (prove)\nusing this:\n  0 \\<le> P ?s ?a\n  ?a' \\<in> supp (P s) \\<Longrightarrow>\n  a * wp (p ?a') Q s + b * wp (p ?a') R s \\<ominus> c\n  \\<le> wp (p ?a') (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s\n\ngoal (1 subgoal):\n 1. (\\<Sum>a'\\<in>supp (P s).\n       P s a' * (a * wp (p a') Q s + b * wp (p a') R s \\<ominus> c))\n    \\<le> (\\<Sum>a'\\<in>supp (P s).\n             P s a' *\n             wp (p a') (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s)", "by(blast intro:sum_mono mult_left_mono)"], ["proof (state)\nthis:\n  (\\<Sum>a'\\<in>supp (P s).\n     P s a' * (a * wp (p a') Q s + b * wp (p a') R s \\<ominus> c))\n  \\<le> (\\<Sum>a'\\<in>supp (P s).\n           P s a' * wp (p a') (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s)\n\ngoal (1 subgoal):\n 1. \\<And>a b c Pa Q s.\n       \\<lbrakk>sound Pa; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a *\n                         (\\<Sum>a\\<in>supp (P s). P s a * wp (p a) Pa s) +\n                         b *\n                         (\\<Sum>a\\<in>supp (P s).\n                            P s a * wp (p a) Q s) \\<ominus>\n                         c\n                         \\<le> (\\<Sum>aa\\<in>supp (P s).\n                                  P s aa *\n                                  wp (p aa)\n                                   (\\<lambda>s'.\n a * Pa s' + b * Q s' \\<ominus> c)\n                                   s)", "}"], ["proof (state)\nthis:\n  (\\<Sum>a'\\<in>supp (P s).\n     P s a' * (a * wp (p a') Q s + b * wp (p a') R s \\<ominus> c))\n  \\<le> (\\<Sum>a'\\<in>supp (P s).\n           P s a' * wp (p a') (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s)\n\ngoal (1 subgoal):\n 1. \\<And>a b c Pa Q s.\n       \\<lbrakk>sound Pa; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> a *\n                         (\\<Sum>a\\<in>supp (P s). P s a * wp (p a) Pa s) +\n                         b *\n                         (\\<Sum>a\\<in>supp (P s).\n                            P s a * wp (p a) Q s) \\<ominus>\n                         c\n                         \\<le> (\\<Sum>aa\\<in>supp (P s).\n                                  P s aa *\n                                  wp (p aa)\n                                   (\\<lambda>s'.\n a * Pa s' + b * Q s' \\<ominus> c)\n                                   s)", "finally"], ["proof (chain)\npicking this:\n  a * (\\<Sum>a'\\<in>supp (P s). P s a' * wp (p a') Q s) +\n  b * (\\<Sum>a'\\<in>supp (P s). P s a' * wp (p a') R s) \\<ominus>\n  c\n  \\<le> (\\<Sum>a'\\<in>supp (P s).\n           P s a' * wp (p a') (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s)", "show \"a * (\\<Sum>a'\\<in>supp (P s). P s a' * wp (p a') Q s) +\n        b * (\\<Sum>a'\\<in>supp (P s). P s a' * wp (p a') R s) \\<ominus> c \\<le>\n        (\\<Sum>a'\\<in>supp (P s). P s a' * wp (p a') (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s)\""], ["proof (prove)\nusing this:\n  a * (\\<Sum>a'\\<in>supp (P s). P s a' * wp (p a') Q s) +\n  b * (\\<Sum>a'\\<in>supp (P s). P s a' * wp (p a') R s) \\<ominus>\n  c\n  \\<le> (\\<Sum>a'\\<in>supp (P s).\n           P s a' * wp (p a') (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s)\n\ngoal (1 subgoal):\n 1. a * (\\<Sum>a'\\<in>supp (P s). P s a' * wp (p a') Q s) +\n    b * (\\<Sum>a'\\<in>supp (P s). P s a' * wp (p a') R s) \\<ominus>\n    c\n    \\<le> (\\<Sum>a'\\<in>supp (P s).\n             P s a' *\n             wp (p a') (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s)", "."], ["proof (state)\nthis:\n  a * (\\<Sum>a'\\<in>supp (P s). P s a' * wp (p a') Q s) +\n  b * (\\<Sum>a'\\<in>supp (P s). P s a' * wp (p a') R s) \\<ominus>\n  c\n  \\<le> (\\<Sum>a'\\<in>supp (P s).\n           P s a' * wp (p a') (\\<lambda>s. a * Q s + b * R s \\<ominus> c) s)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sublinear_wp_SetDC:\n  fixes p::\"'a \\<Rightarrow> 's prog\"\n  assumes slp: \"\\<And>s a. a \\<in> S s \\<Longrightarrow> sublinear (wp (p a))\"\n      and hp:  \"\\<And>s a. a \\<in> S s \\<Longrightarrow> healthy (wp (p a))\"\n      and ne:  \"\\<And>s. S s \\<noteq> {}\"\n  shows \"sublinear (wp (SetDC p S))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sublinear (wp (SetDC p S))", "proof(rule sublinearI, simp add:wp_eval, rule cInf_greatest)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b c P Q s.\n       \\<lbrakk>sound P; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>aa.\n                             wp (p aa)\n                              (\\<lambda>s'. a * P s' + b * Q s' \\<ominus> c)\n                              s) `\n                         S s \\<noteq>\n                         {}\n 2. \\<And>a b c P Q s x.\n       \\<lbrakk>sound P; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c;\n        x \\<in> (\\<lambda>aa.\n                    wp (p aa) (\\<lambda>s'. a * P s' + b * Q s' \\<ominus> c)\n                     s) `\n                S s\\<rbrakk>\n       \\<Longrightarrow> a * (INF a\\<in>S s. wp (p a) P s) +\n                         b * (INF a\\<in>S s. wp (p a) Q s) \\<ominus>\n                         c\n                         \\<le> x", "fix P::\"'s \\<Rightarrow> real\" and Q::\"'s \\<Rightarrow> real\" and s::'s and x y\n  and a::real and b::real and c::real"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b c P Q s.\n       \\<lbrakk>sound P; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>aa.\n                             wp (p aa)\n                              (\\<lambda>s'. a * P s' + b * Q s' \\<ominus> c)\n                              s) `\n                         S s \\<noteq>\n                         {}\n 2. \\<And>a b c P Q s x.\n       \\<lbrakk>sound P; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c;\n        x \\<in> (\\<lambda>aa.\n                    wp (p aa) (\\<lambda>s'. a * P s' + b * Q s' \\<ominus> c)\n                     s) `\n                S s\\<rbrakk>\n       \\<Longrightarrow> a * (INF a\\<in>S s. wp (p a) P s) +\n                         b * (INF a\\<in>S s. wp (p a) Q s) \\<ominus>\n                         c\n                         \\<le> x", "assume sP: \"sound P\" and sQ: \"sound Q\"\n     and nna: \"0 \\<le> a\" and nnb: \"0 \\<le> b\" and nnc: \"0 \\<le> c\""], ["proof (state)\nthis:\n  sound P\n  sound Q\n  0 \\<le> a\n  0 \\<le> b\n  0 \\<le> c\n\ngoal (2 subgoals):\n 1. \\<And>a b c P Q s.\n       \\<lbrakk>sound P; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>aa.\n                             wp (p aa)\n                              (\\<lambda>s'. a * P s' + b * Q s' \\<ominus> c)\n                              s) `\n                         S s \\<noteq>\n                         {}\n 2. \\<And>a b c P Q s x.\n       \\<lbrakk>sound P; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c;\n        x \\<in> (\\<lambda>aa.\n                    wp (p aa) (\\<lambda>s'. a * P s' + b * Q s' \\<ominus> c)\n                     s) `\n                S s\\<rbrakk>\n       \\<Longrightarrow> a * (INF a\\<in>S s. wp (p a) P s) +\n                         b * (INF a\\<in>S s. wp (p a) Q s) \\<ominus>\n                         c\n                         \\<le> x", "from ne"], ["proof (chain)\npicking this:\n  S ?s \\<noteq> {}", "show \"(\\<lambda>pr. wp (p pr) (\\<lambda>s. a * P s + b * Q s \\<ominus> c) s) ` S s \\<noteq> {}\""], ["proof (prove)\nusing this:\n  S ?s \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<lambda>pr. wp (p pr) (\\<lambda>s. a * P s + b * Q s \\<ominus> c) s) `\n    S s \\<noteq>\n    {}", "by(auto)"], ["proof (state)\nthis:\n  (\\<lambda>pr. wp (p pr) (\\<lambda>s. a * P s + b * Q s \\<ominus> c) s) `\n  S s \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. \\<And>a b c P Q s x.\n       \\<lbrakk>sound P; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c;\n        x \\<in> (\\<lambda>aa.\n                    wp (p aa) (\\<lambda>s'. a * P s' + b * Q s' \\<ominus> c)\n                     s) `\n                S s\\<rbrakk>\n       \\<Longrightarrow> a * (INF a\\<in>S s. wp (p a) P s) +\n                         b * (INF a\\<in>S s. wp (p a) Q s) \\<ominus>\n                         c\n                         \\<le> x", "assume yin: \"y \\<in> (\\<lambda>pr. wp (p pr) (\\<lambda>s. a * P s + b * Q s \\<ominus> c) s) ` S s\""], ["proof (state)\nthis:\n  y \\<in> (\\<lambda>pr.\n              wp (p pr) (\\<lambda>s. a * P s + b * Q s \\<ominus> c) s) `\n          S s\n\ngoal (1 subgoal):\n 1. \\<And>a b c P Q s x.\n       \\<lbrakk>sound P; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c;\n        x \\<in> (\\<lambda>aa.\n                    wp (p aa) (\\<lambda>s'. a * P s' + b * Q s' \\<ominus> c)\n                     s) `\n                S s\\<rbrakk>\n       \\<Longrightarrow> a * (INF a\\<in>S s. wp (p a) P s) +\n                         b * (INF a\\<in>S s. wp (p a) Q s) \\<ominus>\n                         c\n                         \\<le> x", "then"], ["proof (chain)\npicking this:\n  y \\<in> (\\<lambda>pr.\n              wp (p pr) (\\<lambda>s. a * P s + b * Q s \\<ominus> c) s) `\n          S s", "obtain x where xin: \"x \\<in> S s\" and rwy: \"y = wp (p x) (\\<lambda>s. a * P s + b * Q s \\<ominus> c) s\""], ["proof (prove)\nusing this:\n  y \\<in> (\\<lambda>pr.\n              wp (p pr) (\\<lambda>s. a * P s + b * Q s \\<ominus> c) s) `\n          S s\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> S s;\n         y = wp (p x) (\\<lambda>s. a * P s + b * Q s \\<ominus> c) s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto)"], ["proof (state)\nthis:\n  x \\<in> S s\n  y = wp (p x) (\\<lambda>s. a * P s + b * Q s \\<ominus> c) s\n\ngoal (1 subgoal):\n 1. \\<And>a b c P Q s x.\n       \\<lbrakk>sound P; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c;\n        x \\<in> (\\<lambda>aa.\n                    wp (p aa) (\\<lambda>s'. a * P s' + b * Q s' \\<ominus> c)\n                     s) `\n                S s\\<rbrakk>\n       \\<Longrightarrow> a * (INF a\\<in>S s. wp (p a) P s) +\n                         b * (INF a\\<in>S s. wp (p a) Q s) \\<ominus>\n                         c\n                         \\<le> x", "from xin hp sP nna"], ["proof (chain)\npicking this:\n  x \\<in> S s\n  ?a \\<in> S ?s \\<Longrightarrow> healthy (wp (p ?a))\n  sound P\n  0 \\<le> a", "have \"a * Inf ((\\<lambda>a. wp (p a) P s) ` S s) \\<le> a * wp (p x) P s\""], ["proof (prove)\nusing this:\n  x \\<in> S s\n  ?a \\<in> S ?s \\<Longrightarrow> healthy (wp (p ?a))\n  sound P\n  0 \\<le> a\n\ngoal (1 subgoal):\n 1. a * (INF a\\<in>S s. wp (p a) P s) \\<le> a * wp (p x) P s", "by(intro mult_left_mono[OF cInf_lower] bdd_belowI[where m=0], blast+)"], ["proof (state)\nthis:\n  a * (INF a\\<in>S s. wp (p a) P s) \\<le> a * wp (p x) P s\n\ngoal (1 subgoal):\n 1. \\<And>a b c P Q s x.\n       \\<lbrakk>sound P; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c;\n        x \\<in> (\\<lambda>aa.\n                    wp (p aa) (\\<lambda>s'. a * P s' + b * Q s' \\<ominus> c)\n                     s) `\n                S s\\<rbrakk>\n       \\<Longrightarrow> a * (INF a\\<in>S s. wp (p a) P s) +\n                         b * (INF a\\<in>S s. wp (p a) Q s) \\<ominus>\n                         c\n                         \\<le> x", "moreover"], ["proof (state)\nthis:\n  a * (INF a\\<in>S s. wp (p a) P s) \\<le> a * wp (p x) P s\n\ngoal (1 subgoal):\n 1. \\<And>a b c P Q s x.\n       \\<lbrakk>sound P; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c;\n        x \\<in> (\\<lambda>aa.\n                    wp (p aa) (\\<lambda>s'. a * P s' + b * Q s' \\<ominus> c)\n                     s) `\n                S s\\<rbrakk>\n       \\<Longrightarrow> a * (INF a\\<in>S s. wp (p a) P s) +\n                         b * (INF a\\<in>S s. wp (p a) Q s) \\<ominus>\n                         c\n                         \\<le> x", "from xin hp sQ nnb"], ["proof (chain)\npicking this:\n  x \\<in> S s\n  ?a \\<in> S ?s \\<Longrightarrow> healthy (wp (p ?a))\n  sound Q\n  0 \\<le> b", "have \"b * Inf ((\\<lambda>a. wp (p a) Q s) ` S s) \\<le> b * wp (p x) Q s\""], ["proof (prove)\nusing this:\n  x \\<in> S s\n  ?a \\<in> S ?s \\<Longrightarrow> healthy (wp (p ?a))\n  sound Q\n  0 \\<le> b\n\ngoal (1 subgoal):\n 1. b * (INF a\\<in>S s. wp (p a) Q s) \\<le> b * wp (p x) Q s", "by(intro mult_left_mono[OF cInf_lower] bdd_belowI[where m=0], blast+)"], ["proof (state)\nthis:\n  b * (INF a\\<in>S s. wp (p a) Q s) \\<le> b * wp (p x) Q s\n\ngoal (1 subgoal):\n 1. \\<And>a b c P Q s x.\n       \\<lbrakk>sound P; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c;\n        x \\<in> (\\<lambda>aa.\n                    wp (p aa) (\\<lambda>s'. a * P s' + b * Q s' \\<ominus> c)\n                     s) `\n                S s\\<rbrakk>\n       \\<Longrightarrow> a * (INF a\\<in>S s. wp (p a) P s) +\n                         b * (INF a\\<in>S s. wp (p a) Q s) \\<ominus>\n                         c\n                         \\<le> x", "ultimately"], ["proof (chain)\npicking this:\n  a * (INF a\\<in>S s. wp (p a) P s) \\<le> a * wp (p x) P s\n  b * (INF a\\<in>S s. wp (p a) Q s) \\<le> b * wp (p x) Q s", "have \"a * Inf ((\\<lambda>a. wp (p a) P s) ` S s) +\n        b * Inf ((\\<lambda>a. wp (p a) Q s) ` S s) \\<ominus> c \\<le>\n        a * wp (p x) P s + b * wp (p x) Q s \\<ominus> c\""], ["proof (prove)\nusing this:\n  a * (INF a\\<in>S s. wp (p a) P s) \\<le> a * wp (p x) P s\n  b * (INF a\\<in>S s. wp (p a) Q s) \\<le> b * wp (p x) Q s\n\ngoal (1 subgoal):\n 1. a * (INF a\\<in>S s. wp (p a) P s) +\n    b * (INF a\\<in>S s. wp (p a) Q s) \\<ominus>\n    c\n    \\<le> a * wp (p x) P s + b * wp (p x) Q s \\<ominus> c", "by(blast intro:tminus_left_mono add_mono)"], ["proof (state)\nthis:\n  a * (INF a\\<in>S s. wp (p a) P s) +\n  b * (INF a\\<in>S s. wp (p a) Q s) \\<ominus>\n  c\n  \\<le> a * wp (p x) P s + b * wp (p x) Q s \\<ominus> c\n\ngoal (1 subgoal):\n 1. \\<And>a b c P Q s x.\n       \\<lbrakk>sound P; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c;\n        x \\<in> (\\<lambda>aa.\n                    wp (p aa) (\\<lambda>s'. a * P s' + b * Q s' \\<ominus> c)\n                     s) `\n                S s\\<rbrakk>\n       \\<Longrightarrow> a * (INF a\\<in>S s. wp (p a) P s) +\n                         b * (INF a\\<in>S s. wp (p a) Q s) \\<ominus>\n                         c\n                         \\<le> x", "also"], ["proof (state)\nthis:\n  a * (INF a\\<in>S s. wp (p a) P s) +\n  b * (INF a\\<in>S s. wp (p a) Q s) \\<ominus>\n  c\n  \\<le> a * wp (p x) P s + b * wp (p x) Q s \\<ominus> c\n\ngoal (1 subgoal):\n 1. \\<And>a b c P Q s x.\n       \\<lbrakk>sound P; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c;\n        x \\<in> (\\<lambda>aa.\n                    wp (p aa) (\\<lambda>s'. a * P s' + b * Q s' \\<ominus> c)\n                     s) `\n                S s\\<rbrakk>\n       \\<Longrightarrow> a * (INF a\\<in>S s. wp (p a) P s) +\n                         b * (INF a\\<in>S s. wp (p a) Q s) \\<ominus>\n                         c\n                         \\<le> x", "from xin slp sP sQ nna nnb nnc"], ["proof (chain)\npicking this:\n  x \\<in> S s\n  ?a \\<in> S ?s \\<Longrightarrow> sublinear (wp (p ?a))\n  sound P\n  sound Q\n  0 \\<le> a\n  0 \\<le> b\n  0 \\<le> c", "have \"... \\<le> wp (p x) (\\<lambda>s. a * P s + b * Q s \\<ominus> c) s\""], ["proof (prove)\nusing this:\n  x \\<in> S s\n  ?a \\<in> S ?s \\<Longrightarrow> sublinear (wp (p ?a))\n  sound P\n  sound Q\n  0 \\<le> a\n  0 \\<le> b\n  0 \\<le> c\n\ngoal (1 subgoal):\n 1. a * wp (p x) P s + b * wp (p x) Q s \\<ominus> c\n    \\<le> wp (p x) (\\<lambda>s. a * P s + b * Q s \\<ominus> c) s", "by(blast)"], ["proof (state)\nthis:\n  a * wp (p x) P s + b * wp (p x) Q s \\<ominus> c\n  \\<le> wp (p x) (\\<lambda>s. a * P s + b * Q s \\<ominus> c) s\n\ngoal (1 subgoal):\n 1. \\<And>a b c P Q s x.\n       \\<lbrakk>sound P; sound Q; 0 \\<le> a; 0 \\<le> b; 0 \\<le> c;\n        x \\<in> (\\<lambda>aa.\n                    wp (p aa) (\\<lambda>s'. a * P s' + b * Q s' \\<ominus> c)\n                     s) `\n                S s\\<rbrakk>\n       \\<Longrightarrow> a * (INF a\\<in>S s. wp (p a) P s) +\n                         b * (INF a\\<in>S s. wp (p a) Q s) \\<ominus>\n                         c\n                         \\<le> x", "finally"], ["proof (chain)\npicking this:\n  a * (INF a\\<in>S s. wp (p a) P s) +\n  b * (INF a\\<in>S s. wp (p a) Q s) \\<ominus>\n  c\n  \\<le> wp (p x) (\\<lambda>s. a * P s + b * Q s \\<ominus> c) s", "show \"a * Inf ((\\<lambda>a. wp (p a) P s) ` S s) + b * Inf ((\\<lambda>a. wp (p a) Q s) ` S s) \\<ominus> c \\<le> y\""], ["proof (prove)\nusing this:\n  a * (INF a\\<in>S s. wp (p a) P s) +\n  b * (INF a\\<in>S s. wp (p a) Q s) \\<ominus>\n  c\n  \\<le> wp (p x) (\\<lambda>s. a * P s + b * Q s \\<ominus> c) s\n\ngoal (1 subgoal):\n 1. a * (INF a\\<in>S s. wp (p a) P s) +\n    b * (INF a\\<in>S s. wp (p a) Q s) \\<ominus>\n    c\n    \\<le> y", "by(simp add:rwy)"], ["proof (state)\nthis:\n  a * (INF a\\<in>S s. wp (p a) P s) +\n  b * (INF a\\<in>S s. wp (p a) Q s) \\<ominus>\n  c\n  \\<le> y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sublinear_wp_Embed:\n  \"sublinear t \\<Longrightarrow> sublinear (wp (Embed t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sublinear t \\<Longrightarrow> sublinear (wp (Embed t))", "by(simp add:wp_eval)"], ["", "lemma sublinear_wp_repeat:\n  \"\\<lbrakk> sublinear (wp p); healthy (wp p) \\<rbrakk> \\<Longrightarrow> sublinear (wp (repeat n p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>sublinear (wp p); healthy (wp p)\\<rbrakk>\n    \\<Longrightarrow> sublinear (wp (repeat n p))", "by(induct n, simp_all add:sublinear_wp_Seq sublinear_wp_Skip healthy_wp_repeat)"], ["", "lemma sublinear_wp_Bind:\n  \"\\<lbrakk> \\<And>s. sublinear (wp (a (f s))) \\<rbrakk> \\<Longrightarrow> sublinear (wp (Bind f a))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s. sublinear (wp (a (f s)))) \\<Longrightarrow>\n    sublinear (wp (Bind f a))", "by(rule sublinearI, simp add:wp_eval, auto)"], ["", "subsection \\<open>Sublinearity for Loops\\<close>"], ["", "text \\<open>We break the proof of sublinearity loops into separate proofs of sub-distributivity and\nsub-additivity.  The first follows by transfinite induction.\\<close>"], ["", "lemma sub_distrib_wp_loop:\n  fixes body::\"'s prog\"\n  assumes sdb: \"sub_distrib (wp body)\"\n      and hb:  \"healthy (wp body)\"\n      and nhb: \"nearly_healthy (wlp body)\"\n  shows \"sub_distrib (wp (do G \\<longrightarrow> body od))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sub_distrib\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sub_distrib\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "have \"\\<forall>P s. sound P \\<longrightarrow> wp (do G \\<longrightarrow> body od) P s \\<ominus> 1 \\<le> \n                          wp (do G \\<longrightarrow> body od) (\\<lambda>s. P s \\<ominus> 1) s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>P s.\n       sound P \\<longrightarrow>\n       wp (\\<mu>x.\n              body ;;\n              x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n        P s \\<ominus>\n       1\n       \\<le> wp (\\<mu>x.\n                    body ;;\n                    x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n              (\\<lambda>s. P s \\<ominus> 1) s", "proof(rule loop_induct[OF hb nhb], safe)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>S P s.\n       \\<lbrakk>\\<forall>x\\<in>S.\n                   \\<forall>P s.\n                      sound P \\<longrightarrow>\n                      fst x P s \\<ominus> 1\n                      \\<le> fst x (\\<lambda>a. P a \\<ominus> 1) s;\n        \\<forall>x\\<in>S. feasible (fst x);\n        \\<forall>x\\<in>S.\n           \\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> Sup_trans (fst ` S) P s \\<ominus> 1\n                         \\<le> Sup_trans (fst ` S)\n                                (\\<lambda>a. P a \\<ominus> 1) s\n 2. \\<And>t u P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        feasible t; \\<And>Q. unitary Q \\<Longrightarrow> unitary (u Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> wp (body ;;\n                             Embed\n                              t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P s \\<ominus>\n                         1\n                         \\<le> wp (body ;;\n                                   Embed\n                                    t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                                (\\<lambda>a. P a \\<ominus> 1) s\n 3. \\<And>t t' u u' P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        equiv_trans t t'; equiv_utrans u u'; sound P\\<rbrakk>\n       \\<Longrightarrow> t' P s \\<ominus> 1\n                         \\<le> t' (\\<lambda>a. P a \\<ominus> 1) s", "fix S::\"('s trans \\<times> 's trans) set\" and P::\"'s expect\" and s::'s"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>S P s.\n       \\<lbrakk>\\<forall>x\\<in>S.\n                   \\<forall>P s.\n                      sound P \\<longrightarrow>\n                      fst x P s \\<ominus> 1\n                      \\<le> fst x (\\<lambda>a. P a \\<ominus> 1) s;\n        \\<forall>x\\<in>S. feasible (fst x);\n        \\<forall>x\\<in>S.\n           \\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> Sup_trans (fst ` S) P s \\<ominus> 1\n                         \\<le> Sup_trans (fst ` S)\n                                (\\<lambda>a. P a \\<ominus> 1) s\n 2. \\<And>t u P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        feasible t; \\<And>Q. unitary Q \\<Longrightarrow> unitary (u Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> wp (body ;;\n                             Embed\n                              t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P s \\<ominus>\n                         1\n                         \\<le> wp (body ;;\n                                   Embed\n                                    t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                                (\\<lambda>a. P a \\<ominus> 1) s\n 3. \\<And>t t' u u' P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        equiv_trans t t'; equiv_utrans u u'; sound P\\<rbrakk>\n       \\<Longrightarrow> t' P s \\<ominus> 1\n                         \\<le> t' (\\<lambda>a. P a \\<ominus> 1) s", "assume saS: \"\\<forall>x\\<in>S. \\<forall>P s. sound P \\<longrightarrow> fst x P s \\<ominus> 1 \\<le> fst x (\\<lambda>s. P s \\<ominus> 1) s\"\n       and sP: \"sound P\"\n       and fS: \"\\<forall>x\\<in>S. feasible (fst x)\""], ["proof (state)\nthis:\n  \\<forall>x\\<in>S.\n     \\<forall>P s.\n        sound P \\<longrightarrow>\n        fst x P s \\<ominus> 1 \\<le> fst x (\\<lambda>s. P s \\<ominus> 1) s\n  sound P\n  \\<forall>x\\<in>S. feasible (fst x)\n\ngoal (3 subgoals):\n 1. \\<And>S P s.\n       \\<lbrakk>\\<forall>x\\<in>S.\n                   \\<forall>P s.\n                      sound P \\<longrightarrow>\n                      fst x P s \\<ominus> 1\n                      \\<le> fst x (\\<lambda>a. P a \\<ominus> 1) s;\n        \\<forall>x\\<in>S. feasible (fst x);\n        \\<forall>x\\<in>S.\n           \\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> Sup_trans (fst ` S) P s \\<ominus> 1\n                         \\<le> Sup_trans (fst ` S)\n                                (\\<lambda>a. P a \\<ominus> 1) s\n 2. \\<And>t u P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        feasible t; \\<And>Q. unitary Q \\<Longrightarrow> unitary (u Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> wp (body ;;\n                             Embed\n                              t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P s \\<ominus>\n                         1\n                         \\<le> wp (body ;;\n                                   Embed\n                                    t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                                (\\<lambda>a. P a \\<ominus> 1) s\n 3. \\<And>t t' u u' P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        equiv_trans t t'; equiv_utrans u u'; sound P\\<rbrakk>\n       \\<Longrightarrow> t' P s \\<ominus> 1\n                         \\<le> t' (\\<lambda>a. P a \\<ominus> 1) s", "from sP"], ["proof (chain)\npicking this:\n  sound P", "have sPm: \"sound (\\<lambda>s. P s \\<ominus> 1)\""], ["proof (prove)\nusing this:\n  sound P\n\ngoal (1 subgoal):\n 1. sound (\\<lambda>s. P s \\<ominus> 1)", "by(auto intro:tminus_sound)"], ["proof (state)\nthis:\n  sound (\\<lambda>s. P s \\<ominus> 1)\n\ngoal (3 subgoals):\n 1. \\<And>S P s.\n       \\<lbrakk>\\<forall>x\\<in>S.\n                   \\<forall>P s.\n                      sound P \\<longrightarrow>\n                      fst x P s \\<ominus> 1\n                      \\<le> fst x (\\<lambda>a. P a \\<ominus> 1) s;\n        \\<forall>x\\<in>S. feasible (fst x);\n        \\<forall>x\\<in>S.\n           \\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> Sup_trans (fst ` S) P s \\<ominus> 1\n                         \\<le> Sup_trans (fst ` S)\n                                (\\<lambda>a. P a \\<ominus> 1) s\n 2. \\<And>t u P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        feasible t; \\<And>Q. unitary Q \\<Longrightarrow> unitary (u Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> wp (body ;;\n                             Embed\n                              t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P s \\<ominus>\n                         1\n                         \\<le> wp (body ;;\n                                   Embed\n                                    t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                                (\\<lambda>a. P a \\<ominus> 1) s\n 3. \\<And>t t' u u' P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        equiv_trans t t'; equiv_utrans u u'; sound P\\<rbrakk>\n       \\<Longrightarrow> t' P s \\<ominus> 1\n                         \\<le> t' (\\<lambda>a. P a \\<ominus> 1) s", "have nnSup: \"\\<And>s. 0 \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s. 0 \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) s", "proof(cases \"S={}\", simp add:Sup_trans_def Sup_exp_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s.\n       S \\<noteq> {} \\<Longrightarrow>\n       0 \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) s", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s.\n       S \\<noteq> {} \\<Longrightarrow>\n       0 \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) s", "assume \"S \\<noteq> {}\""], ["proof (state)\nthis:\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       S \\<noteq> {} \\<Longrightarrow>\n       0 \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) s", "then"], ["proof (chain)\npicking this:\n  S \\<noteq> {}", "obtain x where xin: \"x\\<in>S\""], ["proof (prove)\nusing this:\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>x. x \\<in> S \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by(auto)"], ["proof (state)\nthis:\n  x \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       S \\<noteq> {} \\<Longrightarrow>\n       0 \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) s", "with fS sPm"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>S. feasible (fst x)\n  sound (\\<lambda>s. P s \\<ominus> 1)\n  x \\<in> S", "have \"0 \\<le> fst x (\\<lambda>s. P s \\<ominus> 1) s\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>S. feasible (fst x)\n  sound (\\<lambda>s. P s \\<ominus> 1)\n  x \\<in> S\n\ngoal (1 subgoal):\n 1. 0 \\<le> fst x (\\<lambda>s. P s \\<ominus> 1) s", "by(auto)"], ["proof (state)\nthis:\n  0 \\<le> fst x (\\<lambda>s. P s \\<ominus> 1) s\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       S \\<noteq> {} \\<Longrightarrow>\n       0 \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) s", "also"], ["proof (state)\nthis:\n  0 \\<le> fst x (\\<lambda>s. P s \\<ominus> 1) s\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       S \\<noteq> {} \\<Longrightarrow>\n       0 \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) s", "from xin fS sPm"], ["proof (chain)\npicking this:\n  x \\<in> S\n  \\<forall>x\\<in>S. feasible (fst x)\n  sound (\\<lambda>s. P s \\<ominus> 1)", "have \"... \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) s\""], ["proof (prove)\nusing this:\n  x \\<in> S\n  \\<forall>x\\<in>S. feasible (fst x)\n  sound (\\<lambda>s. P s \\<ominus> 1)\n\ngoal (1 subgoal):\n 1. fst x (\\<lambda>s. P s \\<ominus> 1) s\n    \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) s", "by(auto intro!: le_funD[OF Sup_trans_upper2])"], ["proof (state)\nthis:\n  fst x (\\<lambda>s. P s \\<ominus> 1) s\n  \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) s\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       S \\<noteq> {} \\<Longrightarrow>\n       0 \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) s", "finally"], ["proof (chain)\npicking this:\n  0 \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) s", "show \"?thesis s\""], ["proof (prove)\nusing this:\n  0 \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) s\n\ngoal (1 subgoal):\n 1. 0 \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) s", "."], ["proof (state)\nthis:\n  0 \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) ?s\n\ngoal (3 subgoals):\n 1. \\<And>S P s.\n       \\<lbrakk>\\<forall>x\\<in>S.\n                   \\<forall>P s.\n                      sound P \\<longrightarrow>\n                      fst x P s \\<ominus> 1\n                      \\<le> fst x (\\<lambda>a. P a \\<ominus> 1) s;\n        \\<forall>x\\<in>S. feasible (fst x);\n        \\<forall>x\\<in>S.\n           \\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> Sup_trans (fst ` S) P s \\<ominus> 1\n                         \\<le> Sup_trans (fst ` S)\n                                (\\<lambda>a. P a \\<ominus> 1) s\n 2. \\<And>t u P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        feasible t; \\<And>Q. unitary Q \\<Longrightarrow> unitary (u Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> wp (body ;;\n                             Embed\n                              t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P s \\<ominus>\n                         1\n                         \\<le> wp (body ;;\n                                   Embed\n                                    t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                                (\\<lambda>a. P a \\<ominus> 1) s\n 3. \\<And>t t' u u' P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        equiv_trans t t'; equiv_utrans u u'; sound P\\<rbrakk>\n       \\<Longrightarrow> t' P s \\<ominus> 1\n                         \\<le> t' (\\<lambda>a. P a \\<ominus> 1) s", "have \"\\<And>x s. fst x P s \\<le> (fst x P s \\<ominus> 1) + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x s. fst x P s \\<le> (fst x P s \\<ominus> 1) + 1", "by(simp add:tminus_def)"], ["proof (state)\nthis:\n  fst ?x P ?s \\<le> (fst ?x P ?s \\<ominus> 1) + 1\n\ngoal (3 subgoals):\n 1. \\<And>S P s.\n       \\<lbrakk>\\<forall>x\\<in>S.\n                   \\<forall>P s.\n                      sound P \\<longrightarrow>\n                      fst x P s \\<ominus> 1\n                      \\<le> fst x (\\<lambda>a. P a \\<ominus> 1) s;\n        \\<forall>x\\<in>S. feasible (fst x);\n        \\<forall>x\\<in>S.\n           \\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> Sup_trans (fst ` S) P s \\<ominus> 1\n                         \\<le> Sup_trans (fst ` S)\n                                (\\<lambda>a. P a \\<ominus> 1) s\n 2. \\<And>t u P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        feasible t; \\<And>Q. unitary Q \\<Longrightarrow> unitary (u Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> wp (body ;;\n                             Embed\n                              t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P s \\<ominus>\n                         1\n                         \\<le> wp (body ;;\n                                   Embed\n                                    t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                                (\\<lambda>a. P a \\<ominus> 1) s\n 3. \\<And>t t' u u' P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        equiv_trans t t'; equiv_utrans u u'; sound P\\<rbrakk>\n       \\<Longrightarrow> t' P s \\<ominus> 1\n                         \\<le> t' (\\<lambda>a. P a \\<ominus> 1) s", "also"], ["proof (state)\nthis:\n  fst ?x P ?s \\<le> (fst ?x P ?s \\<ominus> 1) + 1\n\ngoal (3 subgoals):\n 1. \\<And>S P s.\n       \\<lbrakk>\\<forall>x\\<in>S.\n                   \\<forall>P s.\n                      sound P \\<longrightarrow>\n                      fst x P s \\<ominus> 1\n                      \\<le> fst x (\\<lambda>a. P a \\<ominus> 1) s;\n        \\<forall>x\\<in>S. feasible (fst x);\n        \\<forall>x\\<in>S.\n           \\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> Sup_trans (fst ` S) P s \\<ominus> 1\n                         \\<le> Sup_trans (fst ` S)\n                                (\\<lambda>a. P a \\<ominus> 1) s\n 2. \\<And>t u P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        feasible t; \\<And>Q. unitary Q \\<Longrightarrow> unitary (u Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> wp (body ;;\n                             Embed\n                              t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P s \\<ominus>\n                         1\n                         \\<le> wp (body ;;\n                                   Embed\n                                    t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                                (\\<lambda>a. P a \\<ominus> 1) s\n 3. \\<And>t t' u u' P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        equiv_trans t t'; equiv_utrans u u'; sound P\\<rbrakk>\n       \\<Longrightarrow> t' P s \\<ominus> 1\n                         \\<le> t' (\\<lambda>a. P a \\<ominus> 1) s", "from saS sP"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>S.\n     \\<forall>P s.\n        sound P \\<longrightarrow>\n        fst x P s \\<ominus> 1 \\<le> fst x (\\<lambda>s. P s \\<ominus> 1) s\n  sound P", "have \"\\<And>x s. x\\<in>S \\<Longrightarrow> (fst x P s \\<ominus> 1) + 1 \\<le> fst x (\\<lambda>s. P s \\<ominus> 1) s + 1\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>S.\n     \\<forall>P s.\n        sound P \\<longrightarrow>\n        fst x P s \\<ominus> 1 \\<le> fst x (\\<lambda>s. P s \\<ominus> 1) s\n  sound P\n\ngoal (1 subgoal):\n 1. \\<And>x s.\n       x \\<in> S \\<Longrightarrow>\n       (fst x P s \\<ominus> 1) + 1\n       \\<le> fst x (\\<lambda>s. P s \\<ominus> 1) s + 1", "by(auto intro:add_right_mono)"], ["proof (state)\nthis:\n  ?x1 \\<in> S \\<Longrightarrow>\n  (fst ?x1 P ?s1 \\<ominus> 1) + 1\n  \\<le> fst ?x1 (\\<lambda>s. P s \\<ominus> 1) ?s1 + 1\n\ngoal (3 subgoals):\n 1. \\<And>S P s.\n       \\<lbrakk>\\<forall>x\\<in>S.\n                   \\<forall>P s.\n                      sound P \\<longrightarrow>\n                      fst x P s \\<ominus> 1\n                      \\<le> fst x (\\<lambda>a. P a \\<ominus> 1) s;\n        \\<forall>x\\<in>S. feasible (fst x);\n        \\<forall>x\\<in>S.\n           \\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> Sup_trans (fst ` S) P s \\<ominus> 1\n                         \\<le> Sup_trans (fst ` S)\n                                (\\<lambda>a. P a \\<ominus> 1) s\n 2. \\<And>t u P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        feasible t; \\<And>Q. unitary Q \\<Longrightarrow> unitary (u Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> wp (body ;;\n                             Embed\n                              t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P s \\<ominus>\n                         1\n                         \\<le> wp (body ;;\n                                   Embed\n                                    t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                                (\\<lambda>a. P a \\<ominus> 1) s\n 3. \\<And>t t' u u' P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        equiv_trans t t'; equiv_utrans u u'; sound P\\<rbrakk>\n       \\<Longrightarrow> t' P s \\<ominus> 1\n                         \\<le> t' (\\<lambda>a. P a \\<ominus> 1) s", "also"], ["proof (state)\nthis:\n  ?x1 \\<in> S \\<Longrightarrow>\n  (fst ?x1 P ?s1 \\<ominus> 1) + 1\n  \\<le> fst ?x1 (\\<lambda>s. P s \\<ominus> 1) ?s1 + 1\n\ngoal (3 subgoals):\n 1. \\<And>S P s.\n       \\<lbrakk>\\<forall>x\\<in>S.\n                   \\<forall>P s.\n                      sound P \\<longrightarrow>\n                      fst x P s \\<ominus> 1\n                      \\<le> fst x (\\<lambda>a. P a \\<ominus> 1) s;\n        \\<forall>x\\<in>S. feasible (fst x);\n        \\<forall>x\\<in>S.\n           \\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> Sup_trans (fst ` S) P s \\<ominus> 1\n                         \\<le> Sup_trans (fst ` S)\n                                (\\<lambda>a. P a \\<ominus> 1) s\n 2. \\<And>t u P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        feasible t; \\<And>Q. unitary Q \\<Longrightarrow> unitary (u Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> wp (body ;;\n                             Embed\n                              t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P s \\<ominus>\n                         1\n                         \\<le> wp (body ;;\n                                   Embed\n                                    t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                                (\\<lambda>a. P a \\<ominus> 1) s\n 3. \\<And>t t' u u' P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        equiv_trans t t'; equiv_utrans u u'; sound P\\<rbrakk>\n       \\<Longrightarrow> t' P s \\<ominus> 1\n                         \\<le> t' (\\<lambda>a. P a \\<ominus> 1) s", "{"], ["proof (state)\nthis:\n  ?x1 \\<in> S \\<Longrightarrow>\n  (fst ?x1 P ?s1 \\<ominus> 1) + 1\n  \\<le> fst ?x1 (\\<lambda>s. P s \\<ominus> 1) ?s1 + 1\n\ngoal (3 subgoals):\n 1. \\<And>S P s.\n       \\<lbrakk>\\<forall>x\\<in>S.\n                   \\<forall>P s.\n                      sound P \\<longrightarrow>\n                      fst x P s \\<ominus> 1\n                      \\<le> fst x (\\<lambda>a. P a \\<ominus> 1) s;\n        \\<forall>x\\<in>S. feasible (fst x);\n        \\<forall>x\\<in>S.\n           \\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> Sup_trans (fst ` S) P s \\<ominus> 1\n                         \\<le> Sup_trans (fst ` S)\n                                (\\<lambda>a. P a \\<ominus> 1) s\n 2. \\<And>t u P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        feasible t; \\<And>Q. unitary Q \\<Longrightarrow> unitary (u Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> wp (body ;;\n                             Embed\n                              t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P s \\<ominus>\n                         1\n                         \\<le> wp (body ;;\n                                   Embed\n                                    t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                                (\\<lambda>a. P a \\<ominus> 1) s\n 3. \\<And>t t' u u' P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        equiv_trans t t'; equiv_utrans u u'; sound P\\<rbrakk>\n       \\<Longrightarrow> t' P s \\<ominus> 1\n                         \\<le> t' (\\<lambda>a. P a \\<ominus> 1) s", "from sP"], ["proof (chain)\npicking this:\n  sound P", "have \"sound (\\<lambda>s. P s \\<ominus> 1)\""], ["proof (prove)\nusing this:\n  sound P\n\ngoal (1 subgoal):\n 1. sound (\\<lambda>s. P s \\<ominus> 1)", "by(auto intro:tminus_sound)"], ["proof (state)\nthis:\n  sound (\\<lambda>s. P s \\<ominus> 1)\n\ngoal (3 subgoals):\n 1. \\<And>S P s.\n       \\<lbrakk>\\<forall>x\\<in>S.\n                   \\<forall>P s.\n                      sound P \\<longrightarrow>\n                      fst x P s \\<ominus> 1\n                      \\<le> fst x (\\<lambda>a. P a \\<ominus> 1) s;\n        \\<forall>x\\<in>S. feasible (fst x);\n        \\<forall>x\\<in>S.\n           \\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> Sup_trans (fst ` S) P s \\<ominus> 1\n                         \\<le> Sup_trans (fst ` S)\n                                (\\<lambda>a. P a \\<ominus> 1) s\n 2. \\<And>t u P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        feasible t; \\<And>Q. unitary Q \\<Longrightarrow> unitary (u Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> wp (body ;;\n                             Embed\n                              t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P s \\<ominus>\n                         1\n                         \\<le> wp (body ;;\n                                   Embed\n                                    t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                                (\\<lambda>a. P a \\<ominus> 1) s\n 3. \\<And>t t' u u' P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        equiv_trans t t'; equiv_utrans u u'; sound P\\<rbrakk>\n       \\<Longrightarrow> t' P s \\<ominus> 1\n                         \\<le> t' (\\<lambda>a. P a \\<ominus> 1) s", "with fS"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>S. feasible (fst x)\n  sound (\\<lambda>s. P s \\<ominus> 1)", "have \"\\<And>x s. x\\<in>S \\<Longrightarrow> fst x (\\<lambda>s. P s \\<ominus> 1) s + 1 \\<le>\n                                   Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) s + 1\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>S. feasible (fst x)\n  sound (\\<lambda>s. P s \\<ominus> 1)\n\ngoal (1 subgoal):\n 1. \\<And>x s.\n       x \\<in> S \\<Longrightarrow>\n       fst x (\\<lambda>s. P s \\<ominus> 1) s + 1\n       \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) s + 1", "by(blast intro!: add_right_mono le_funD[OF Sup_trans_upper2])"], ["proof (state)\nthis:\n  ?x1 \\<in> S \\<Longrightarrow>\n  fst ?x1 (\\<lambda>s. P s \\<ominus> 1) ?s1 + 1\n  \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) ?s1 + 1\n\ngoal (3 subgoals):\n 1. \\<And>S P s.\n       \\<lbrakk>\\<forall>x\\<in>S.\n                   \\<forall>P s.\n                      sound P \\<longrightarrow>\n                      fst x P s \\<ominus> 1\n                      \\<le> fst x (\\<lambda>a. P a \\<ominus> 1) s;\n        \\<forall>x\\<in>S. feasible (fst x);\n        \\<forall>x\\<in>S.\n           \\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> Sup_trans (fst ` S) P s \\<ominus> 1\n                         \\<le> Sup_trans (fst ` S)\n                                (\\<lambda>a. P a \\<ominus> 1) s\n 2. \\<And>t u P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        feasible t; \\<And>Q. unitary Q \\<Longrightarrow> unitary (u Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> wp (body ;;\n                             Embed\n                              t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P s \\<ominus>\n                         1\n                         \\<le> wp (body ;;\n                                   Embed\n                                    t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                                (\\<lambda>a. P a \\<ominus> 1) s\n 3. \\<And>t t' u u' P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        equiv_trans t t'; equiv_utrans u u'; sound P\\<rbrakk>\n       \\<Longrightarrow> t' P s \\<ominus> 1\n                         \\<le> t' (\\<lambda>a. P a \\<ominus> 1) s", "}"], ["proof (state)\nthis:\n  ?x1 \\<in> S \\<Longrightarrow>\n  fst ?x1 (\\<lambda>s. P s \\<ominus> 1) ?s1 + 1\n  \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) ?s1 + 1\n\ngoal (3 subgoals):\n 1. \\<And>S P s.\n       \\<lbrakk>\\<forall>x\\<in>S.\n                   \\<forall>P s.\n                      sound P \\<longrightarrow>\n                      fst x P s \\<ominus> 1\n                      \\<le> fst x (\\<lambda>a. P a \\<ominus> 1) s;\n        \\<forall>x\\<in>S. feasible (fst x);\n        \\<forall>x\\<in>S.\n           \\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> Sup_trans (fst ` S) P s \\<ominus> 1\n                         \\<le> Sup_trans (fst ` S)\n                                (\\<lambda>a. P a \\<ominus> 1) s\n 2. \\<And>t u P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        feasible t; \\<And>Q. unitary Q \\<Longrightarrow> unitary (u Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> wp (body ;;\n                             Embed\n                              t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P s \\<ominus>\n                         1\n                         \\<le> wp (body ;;\n                                   Embed\n                                    t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                                (\\<lambda>a. P a \\<ominus> 1) s\n 3. \\<And>t t' u u' P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        equiv_trans t t'; equiv_utrans u u'; sound P\\<rbrakk>\n       \\<Longrightarrow> t' P s \\<ominus> 1\n                         \\<le> t' (\\<lambda>a. P a \\<ominus> 1) s", "finally"], ["proof (chain)\npicking this:\n  \\<lbrakk>?x2 \\<in> S; ?x2 \\<in> S\\<rbrakk>\n  \\<Longrightarrow> fst ?x2 P ?s2\n                    \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1)\n                           ?s2 +\n                          1", "have le: \"\\<And>s. \\<forall>x\\<in>S. fst x P s \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) s + 1\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?x2 \\<in> S; ?x2 \\<in> S\\<rbrakk>\n  \\<Longrightarrow> fst ?x2 P ?s2\n                    \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1)\n                           ?s2 +\n                          1\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<forall>x\\<in>S.\n          fst x P s\n          \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) s + 1", "by(auto)"], ["proof (state)\nthis:\n  \\<forall>x\\<in>S.\n     fst x P ?s1\n     \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) ?s1 + 1\n\ngoal (3 subgoals):\n 1. \\<And>S P s.\n       \\<lbrakk>\\<forall>x\\<in>S.\n                   \\<forall>P s.\n                      sound P \\<longrightarrow>\n                      fst x P s \\<ominus> 1\n                      \\<le> fst x (\\<lambda>a. P a \\<ominus> 1) s;\n        \\<forall>x\\<in>S. feasible (fst x);\n        \\<forall>x\\<in>S.\n           \\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> Sup_trans (fst ` S) P s \\<ominus> 1\n                         \\<le> Sup_trans (fst ` S)\n                                (\\<lambda>a. P a \\<ominus> 1) s\n 2. \\<And>t u P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        feasible t; \\<And>Q. unitary Q \\<Longrightarrow> unitary (u Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> wp (body ;;\n                             Embed\n                              t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P s \\<ominus>\n                         1\n                         \\<le> wp (body ;;\n                                   Embed\n                                    t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                                (\\<lambda>a. P a \\<ominus> 1) s\n 3. \\<And>t t' u u' P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        equiv_trans t t'; equiv_utrans u u'; sound P\\<rbrakk>\n       \\<Longrightarrow> t' P s \\<ominus> 1\n                         \\<le> t' (\\<lambda>a. P a \\<ominus> 1) s", "moreover"], ["proof (state)\nthis:\n  \\<forall>x\\<in>S.\n     fst x P ?s1\n     \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) ?s1 + 1\n\ngoal (3 subgoals):\n 1. \\<And>S P s.\n       \\<lbrakk>\\<forall>x\\<in>S.\n                   \\<forall>P s.\n                      sound P \\<longrightarrow>\n                      fst x P s \\<ominus> 1\n                      \\<le> fst x (\\<lambda>a. P a \\<ominus> 1) s;\n        \\<forall>x\\<in>S. feasible (fst x);\n        \\<forall>x\\<in>S.\n           \\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> Sup_trans (fst ` S) P s \\<ominus> 1\n                         \\<le> Sup_trans (fst ` S)\n                                (\\<lambda>a. P a \\<ominus> 1) s\n 2. \\<And>t u P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        feasible t; \\<And>Q. unitary Q \\<Longrightarrow> unitary (u Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> wp (body ;;\n                             Embed\n                              t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P s \\<ominus>\n                         1\n                         \\<le> wp (body ;;\n                                   Embed\n                                    t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                                (\\<lambda>a. P a \\<ominus> 1) s\n 3. \\<And>t t' u u' P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        equiv_trans t t'; equiv_utrans u u'; sound P\\<rbrakk>\n       \\<Longrightarrow> t' P s \\<ominus> 1\n                         \\<le> t' (\\<lambda>a. P a \\<ominus> 1) s", "from nnSup"], ["proof (chain)\npicking this:\n  0 \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) ?s", "have nn: \"\\<And>s. 0 \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) s + 1\""], ["proof (prove)\nusing this:\n  0 \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) ?s\n\ngoal (1 subgoal):\n 1. \\<And>s. 0 \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) s + 1", "by(auto intro:add_nonneg_nonneg)"], ["proof (state)\nthis:\n  0 \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) ?s1 + 1\n\ngoal (3 subgoals):\n 1. \\<And>S P s.\n       \\<lbrakk>\\<forall>x\\<in>S.\n                   \\<forall>P s.\n                      sound P \\<longrightarrow>\n                      fst x P s \\<ominus> 1\n                      \\<le> fst x (\\<lambda>a. P a \\<ominus> 1) s;\n        \\<forall>x\\<in>S. feasible (fst x);\n        \\<forall>x\\<in>S.\n           \\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> Sup_trans (fst ` S) P s \\<ominus> 1\n                         \\<le> Sup_trans (fst ` S)\n                                (\\<lambda>a. P a \\<ominus> 1) s\n 2. \\<And>t u P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        feasible t; \\<And>Q. unitary Q \\<Longrightarrow> unitary (u Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> wp (body ;;\n                             Embed\n                              t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P s \\<ominus>\n                         1\n                         \\<le> wp (body ;;\n                                   Embed\n                                    t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                                (\\<lambda>a. P a \\<ominus> 1) s\n 3. \\<And>t t' u u' P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        equiv_trans t t'; equiv_utrans u u'; sound P\\<rbrakk>\n       \\<Longrightarrow> t' P s \\<ominus> 1\n                         \\<le> t' (\\<lambda>a. P a \\<ominus> 1) s", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>S.\n     fst x P ?s1\n     \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) ?s1 + 1\n  0 \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) ?s1 + 1", "have leSup: \"Sup_trans (fst ` S) P s \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) s + 1\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>S.\n     fst x P ?s1\n     \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) ?s1 + 1\n  0 \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) ?s1 + 1\n\ngoal (1 subgoal):\n 1. Sup_trans (fst ` S) P s\n    \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) s + 1", "unfolding Sup_trans_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>S.\n     fst x P ?s1\n     \\<le> Sup_exp {t (\\<lambda>s. P s \\<ominus> 1) |t. t \\<in> fst ` S}\n            ?s1 +\n           1\n  0 \\<le> Sup_exp {t (\\<lambda>s. P s \\<ominus> 1) |t. t \\<in> fst ` S}\n           ?s1 +\n          1\n\ngoal (1 subgoal):\n 1. Sup_exp {t P |t. t \\<in> fst ` S} s\n    \\<le> Sup_exp {t (\\<lambda>s. P s \\<ominus> 1) |t. t \\<in> fst ` S} s +\n          1", "by(intro le_funD[OF Sup_exp_least], auto)"], ["proof (state)\nthis:\n  Sup_trans (fst ` S) P s\n  \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) s + 1\n\ngoal (3 subgoals):\n 1. \\<And>S P s.\n       \\<lbrakk>\\<forall>x\\<in>S.\n                   \\<forall>P s.\n                      sound P \\<longrightarrow>\n                      fst x P s \\<ominus> 1\n                      \\<le> fst x (\\<lambda>a. P a \\<ominus> 1) s;\n        \\<forall>x\\<in>S. feasible (fst x);\n        \\<forall>x\\<in>S.\n           \\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> Sup_trans (fst ` S) P s \\<ominus> 1\n                         \\<le> Sup_trans (fst ` S)\n                                (\\<lambda>a. P a \\<ominus> 1) s\n 2. \\<And>t u P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        feasible t; \\<And>Q. unitary Q \\<Longrightarrow> unitary (u Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> wp (body ;;\n                             Embed\n                              t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P s \\<ominus>\n                         1\n                         \\<le> wp (body ;;\n                                   Embed\n                                    t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                                (\\<lambda>a. P a \\<ominus> 1) s\n 3. \\<And>t t' u u' P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        equiv_trans t t'; equiv_utrans u u'; sound P\\<rbrakk>\n       \\<Longrightarrow> t' P s \\<ominus> 1\n                         \\<le> t' (\\<lambda>a. P a \\<ominus> 1) s", "show \"Sup_trans (fst ` S) P s \\<ominus> 1 \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup_trans (fst ` S) P s \\<ominus> 1\n    \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) s", "proof(cases \"Sup_trans (fst ` S) P s \\<le> 1\", simp_all add:nnSup)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> Sup_trans (fst ` S) P s \\<le> 1 \\<Longrightarrow>\n    Sup_trans (fst ` S) P s - 1\n    \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) s", "from leSup"], ["proof (chain)\npicking this:\n  Sup_trans (fst ` S) P s\n  \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) s + 1", "have \"Sup_trans (fst ` S) P s - 1 \\<le>\n                       Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) s + 1 - 1\""], ["proof (prove)\nusing this:\n  Sup_trans (fst ` S) P s\n  \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) s + 1\n\ngoal (1 subgoal):\n 1. Sup_trans (fst ` S) P s - 1\n    \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) s + 1 - 1", "by(auto)"], ["proof (state)\nthis:\n  Sup_trans (fst ` S) P s - 1\n  \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) s + 1 - 1\n\ngoal (1 subgoal):\n 1. \\<not> Sup_trans (fst ` S) P s \\<le> 1 \\<Longrightarrow>\n    Sup_trans (fst ` S) P s - 1\n    \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) s", "thus \"Sup_trans (fst ` S) P s - 1 \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) s\""], ["proof (prove)\nusing this:\n  Sup_trans (fst ` S) P s - 1\n  \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) s + 1 - 1\n\ngoal (1 subgoal):\n 1. Sup_trans (fst ` S) P s - 1\n    \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) s", "by(simp)"], ["proof (state)\nthis:\n  Sup_trans (fst ` S) P s - 1\n  \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Sup_trans (fst ` S) P s \\<ominus> 1\n  \\<le> Sup_trans (fst ` S) (\\<lambda>s. P s \\<ominus> 1) s\n\ngoal (2 subgoals):\n 1. \\<And>t u P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        feasible t; \\<And>Q. unitary Q \\<Longrightarrow> unitary (u Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> wp (body ;;\n                             Embed\n                              t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P s \\<ominus>\n                         1\n                         \\<le> wp (body ;;\n                                   Embed\n                                    t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                                (\\<lambda>a. P a \\<ominus> 1) s\n 2. \\<And>t t' u u' P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        equiv_trans t t'; equiv_utrans u u'; sound P\\<rbrakk>\n       \\<Longrightarrow> t' P s \\<ominus> 1\n                         \\<le> t' (\\<lambda>a. P a \\<ominus> 1) s", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t u P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        feasible t; \\<And>Q. unitary Q \\<Longrightarrow> unitary (u Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> wp (body ;;\n                             Embed\n                              t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P s \\<ominus>\n                         1\n                         \\<le> wp (body ;;\n                                   Embed\n                                    t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                                (\\<lambda>a. P a \\<ominus> 1) s\n 2. \\<And>t t' u u' P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        equiv_trans t t'; equiv_utrans u u'; sound P\\<rbrakk>\n       \\<Longrightarrow> t' P s \\<ominus> 1\n                         \\<le> t' (\\<lambda>a. P a \\<ominus> 1) s", "fix t::\"'s trans\" and P::\"'s expect\" and s::'s"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t u P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        feasible t; \\<And>Q. unitary Q \\<Longrightarrow> unitary (u Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> wp (body ;;\n                             Embed\n                              t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P s \\<ominus>\n                         1\n                         \\<le> wp (body ;;\n                                   Embed\n                                    t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                                (\\<lambda>a. P a \\<ominus> 1) s\n 2. \\<And>t t' u u' P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        equiv_trans t t'; equiv_utrans u u'; sound P\\<rbrakk>\n       \\<Longrightarrow> t' P s \\<ominus> 1\n                         \\<le> t' (\\<lambda>a. P a \\<ominus> 1) s", "assume IH: \"\\<forall>P s. sound P \\<longrightarrow> t P s \\<ominus> 1 \\<le> t (\\<lambda>a. P a \\<ominus> 1) s\"\n       and ft: \"feasible t\"\n       and sP: \"sound P\""], ["proof (state)\nthis:\n  \\<forall>P s.\n     sound P \\<longrightarrow>\n     t P s \\<ominus> 1 \\<le> t (\\<lambda>a. P a \\<ominus> 1) s\n  feasible t\n  sound P\n\ngoal (2 subgoals):\n 1. \\<And>t u P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        feasible t; \\<And>Q. unitary Q \\<Longrightarrow> unitary (u Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> wp (body ;;\n                             Embed\n                              t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P s \\<ominus>\n                         1\n                         \\<le> wp (body ;;\n                                   Embed\n                                    t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                                (\\<lambda>a. P a \\<ominus> 1) s\n 2. \\<And>t t' u u' P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        equiv_trans t t'; equiv_utrans u u'; sound P\\<rbrakk>\n       \\<Longrightarrow> t' P s \\<ominus> 1\n                         \\<le> t' (\\<lambda>a. P a \\<ominus> 1) s", "from sP"], ["proof (chain)\npicking this:\n  sound P", "have \"sound (\\<lambda>s. P s \\<ominus> 1)\""], ["proof (prove)\nusing this:\n  sound P\n\ngoal (1 subgoal):\n 1. sound (\\<lambda>s. P s \\<ominus> 1)", "by(auto intro:tminus_sound)"], ["proof (state)\nthis:\n  sound (\\<lambda>s. P s \\<ominus> 1)\n\ngoal (2 subgoals):\n 1. \\<And>t u P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        feasible t; \\<And>Q. unitary Q \\<Longrightarrow> unitary (u Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> wp (body ;;\n                             Embed\n                              t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P s \\<ominus>\n                         1\n                         \\<le> wp (body ;;\n                                   Embed\n                                    t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                                (\\<lambda>a. P a \\<ominus> 1) s\n 2. \\<And>t t' u u' P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        equiv_trans t t'; equiv_utrans u u'; sound P\\<rbrakk>\n       \\<Longrightarrow> t' P s \\<ominus> 1\n                         \\<le> t' (\\<lambda>a. P a \\<ominus> 1) s", "with ft"], ["proof (chain)\npicking this:\n  feasible t\n  sound (\\<lambda>s. P s \\<ominus> 1)", "have s2: \"sound (t (\\<lambda>s. P s \\<ominus> 1))\""], ["proof (prove)\nusing this:\n  feasible t\n  sound (\\<lambda>s. P s \\<ominus> 1)\n\ngoal (1 subgoal):\n 1. sound (t (\\<lambda>s. P s \\<ominus> 1))", "by(auto)"], ["proof (state)\nthis:\n  sound (t (\\<lambda>s. P s \\<ominus> 1))\n\ngoal (2 subgoals):\n 1. \\<And>t u P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        feasible t; \\<And>Q. unitary Q \\<Longrightarrow> unitary (u Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> wp (body ;;\n                             Embed\n                              t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P s \\<ominus>\n                         1\n                         \\<le> wp (body ;;\n                                   Embed\n                                    t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                                (\\<lambda>a. P a \\<ominus> 1) s\n 2. \\<And>t t' u u' P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        equiv_trans t t'; equiv_utrans u u'; sound P\\<rbrakk>\n       \\<Longrightarrow> t' P s \\<ominus> 1\n                         \\<le> t' (\\<lambda>a. P a \\<ominus> 1) s", "from sP ft"], ["proof (chain)\npicking this:\n  sound P\n  feasible t", "have \"sound (t P)\""], ["proof (prove)\nusing this:\n  sound P\n  feasible t\n\ngoal (1 subgoal):\n 1. sound (t P)", "by(auto)"], ["proof (state)\nthis:\n  sound (t P)\n\ngoal (2 subgoals):\n 1. \\<And>t u P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        feasible t; \\<And>Q. unitary Q \\<Longrightarrow> unitary (u Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> wp (body ;;\n                             Embed\n                              t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P s \\<ominus>\n                         1\n                         \\<le> wp (body ;;\n                                   Embed\n                                    t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                                (\\<lambda>a. P a \\<ominus> 1) s\n 2. \\<And>t t' u u' P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        equiv_trans t t'; equiv_utrans u u'; sound P\\<rbrakk>\n       \\<Longrightarrow> t' P s \\<ominus> 1\n                         \\<le> t' (\\<lambda>a. P a \\<ominus> 1) s", "hence s3: \"sound (\\<lambda>s. t P s \\<ominus> 1)\""], ["proof (prove)\nusing this:\n  sound (t P)\n\ngoal (1 subgoal):\n 1. sound (\\<lambda>s. t P s \\<ominus> 1)", "by(auto intro!:tminus_sound)"], ["proof (state)\nthis:\n  sound (\\<lambda>s. t P s \\<ominus> 1)\n\ngoal (2 subgoals):\n 1. \\<And>t u P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        feasible t; \\<And>Q. unitary Q \\<Longrightarrow> unitary (u Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> wp (body ;;\n                             Embed\n                              t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P s \\<ominus>\n                         1\n                         \\<le> wp (body ;;\n                                   Embed\n                                    t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                                (\\<lambda>a. P a \\<ominus> 1) s\n 2. \\<And>t t' u u' P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        equiv_trans t t'; equiv_utrans u u'; sound P\\<rbrakk>\n       \\<Longrightarrow> t' P s \\<ominus> 1\n                         \\<le> t' (\\<lambda>a. P a \\<ominus> 1) s", "show \"wp (body ;; Embed t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) P s \\<ominus> 1 \\<le>\n          wp (body ;; Embed t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) (\\<lambda>a. P a \\<ominus> 1) s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wp (body ;;\n        Embed\n         t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     P s \\<ominus>\n    1\n    \\<le> wp (body ;;\n              Embed\n               t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n           (\\<lambda>a. P a \\<ominus> 1) s", "proof(simp add:wp_eval)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wp body (t P) s +\n    (1 - \\<guillemotleft> G \\<guillemotright> s) * P s \\<ominus>\n    1\n    \\<le> \\<guillemotleft> G \\<guillemotright> s *\n          wp body (t (\\<lambda>a. P a \\<ominus> 1)) s +\n          (1 - \\<guillemotleft> G \\<guillemotright> s) * (P s \\<ominus> 1)", "have \"\\<guillemotleft>G\\<guillemotright> s * wp body (t P) s + (1 - \\<guillemotleft>G\\<guillemotright> s) * P s \\<ominus> 1 =\n            \\<guillemotleft>G\\<guillemotright> s * wp body (t P) s + (1 - \\<guillemotleft>G\\<guillemotright> s) * P s \\<ominus> (\\<guillemotleft>G\\<guillemotright> s + (1 - \\<guillemotleft>G\\<guillemotright> s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wp body (t P) s +\n    (1 - \\<guillemotleft> G \\<guillemotright> s) * P s \\<ominus>\n    1 =\n    \\<guillemotleft> G \\<guillemotright> s * wp body (t P) s +\n    (1 - \\<guillemotleft> G \\<guillemotright> s) * P s \\<ominus>\n    \\<guillemotleft> G \\<guillemotright> s +\n    (1 - \\<guillemotleft> G \\<guillemotright> s)", "by(simp)"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wp body (t P) s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * P s \\<ominus>\n  1 =\n  \\<guillemotleft> G \\<guillemotright> s * wp body (t P) s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * P s \\<ominus>\n  \\<guillemotleft> G \\<guillemotright> s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s)\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wp body (t P) s +\n    (1 - \\<guillemotleft> G \\<guillemotright> s) * P s \\<ominus>\n    1\n    \\<le> \\<guillemotleft> G \\<guillemotright> s *\n          wp body (t (\\<lambda>a. P a \\<ominus> 1)) s +\n          (1 - \\<guillemotleft> G \\<guillemotright> s) * (P s \\<ominus> 1)", "also"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wp body (t P) s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * P s \\<ominus>\n  1 =\n  \\<guillemotleft> G \\<guillemotright> s * wp body (t P) s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * P s \\<ominus>\n  \\<guillemotleft> G \\<guillemotright> s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s)\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wp body (t P) s +\n    (1 - \\<guillemotleft> G \\<guillemotright> s) * P s \\<ominus>\n    1\n    \\<le> \\<guillemotleft> G \\<guillemotright> s *\n          wp body (t (\\<lambda>a. P a \\<ominus> 1)) s +\n          (1 - \\<guillemotleft> G \\<guillemotright> s) * (P s \\<ominus> 1)", "have \"... \\<le> (\\<guillemotleft>G\\<guillemotright> s * wp body (t P) s \\<ominus> \\<guillemotleft>G\\<guillemotright> s) +\n                        ((1 - \\<guillemotleft>G\\<guillemotright> s) * P s \\<ominus> (1 - \\<guillemotleft>G\\<guillemotright> s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wp body (t P) s +\n    (1 - \\<guillemotleft> G \\<guillemotright> s) * P s \\<ominus>\n    \\<guillemotleft> G \\<guillemotright> s +\n    (1 - \\<guillemotleft> G \\<guillemotright> s)\n    \\<le> (\\<guillemotleft> G \\<guillemotright> s *\n           wp body (t P) s \\<ominus>\n           \\<guillemotleft> G \\<guillemotright> s) +\n          ((1 - \\<guillemotleft> G \\<guillemotright> s) * P s \\<ominus>\n           1 - \\<guillemotleft> G \\<guillemotright> s)", "by(rule tminus_add_mono)"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wp body (t P) s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * P s \\<ominus>\n  \\<guillemotleft> G \\<guillemotright> s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s)\n  \\<le> (\\<guillemotleft> G \\<guillemotright> s * wp body (t P) s \\<ominus>\n         \\<guillemotleft> G \\<guillemotright> s) +\n        ((1 - \\<guillemotleft> G \\<guillemotright> s) * P s \\<ominus>\n         1 - \\<guillemotleft> G \\<guillemotright> s)\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wp body (t P) s +\n    (1 - \\<guillemotleft> G \\<guillemotright> s) * P s \\<ominus>\n    1\n    \\<le> \\<guillemotleft> G \\<guillemotright> s *\n          wp body (t (\\<lambda>a. P a \\<ominus> 1)) s +\n          (1 - \\<guillemotleft> G \\<guillemotright> s) * (P s \\<ominus> 1)", "also"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wp body (t P) s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * P s \\<ominus>\n  \\<guillemotleft> G \\<guillemotright> s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s)\n  \\<le> (\\<guillemotleft> G \\<guillemotright> s * wp body (t P) s \\<ominus>\n         \\<guillemotleft> G \\<guillemotright> s) +\n        ((1 - \\<guillemotleft> G \\<guillemotright> s) * P s \\<ominus>\n         1 - \\<guillemotleft> G \\<guillemotright> s)\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wp body (t P) s +\n    (1 - \\<guillemotleft> G \\<guillemotright> s) * P s \\<ominus>\n    1\n    \\<le> \\<guillemotleft> G \\<guillemotright> s *\n          wp body (t (\\<lambda>a. P a \\<ominus> 1)) s +\n          (1 - \\<guillemotleft> G \\<guillemotright> s) * (P s \\<ominus> 1)", "have \"... = \\<guillemotleft>G\\<guillemotright> s * (wp body (t P) s \\<ominus> 1) + (1 - \\<guillemotleft>G\\<guillemotright> s) * (P s \\<ominus> 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<guillemotleft> G \\<guillemotright> s * wp body (t P) s \\<ominus>\n     \\<guillemotleft> G \\<guillemotright> s) +\n    ((1 - \\<guillemotleft> G \\<guillemotright> s) * P s \\<ominus>\n     1 - \\<guillemotleft> G \\<guillemotright> s) =\n    \\<guillemotleft> G \\<guillemotright> s * (wp body (t P) s \\<ominus> 1) +\n    (1 - \\<guillemotleft> G \\<guillemotright> s) * (P s \\<ominus> 1)", "by(simp add:tminus_left_distrib)"], ["proof (state)\nthis:\n  (\\<guillemotleft> G \\<guillemotright> s * wp body (t P) s \\<ominus>\n   \\<guillemotleft> G \\<guillemotright> s) +\n  ((1 - \\<guillemotleft> G \\<guillemotright> s) * P s \\<ominus>\n   1 - \\<guillemotleft> G \\<guillemotright> s) =\n  \\<guillemotleft> G \\<guillemotright> s * (wp body (t P) s \\<ominus> 1) +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * (P s \\<ominus> 1)\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wp body (t P) s +\n    (1 - \\<guillemotleft> G \\<guillemotright> s) * P s \\<ominus>\n    1\n    \\<le> \\<guillemotleft> G \\<guillemotright> s *\n          wp body (t (\\<lambda>a. P a \\<ominus> 1)) s +\n          (1 - \\<guillemotleft> G \\<guillemotright> s) * (P s \\<ominus> 1)", "also"], ["proof (state)\nthis:\n  (\\<guillemotleft> G \\<guillemotright> s * wp body (t P) s \\<ominus>\n   \\<guillemotleft> G \\<guillemotright> s) +\n  ((1 - \\<guillemotleft> G \\<guillemotright> s) * P s \\<ominus>\n   1 - \\<guillemotleft> G \\<guillemotright> s) =\n  \\<guillemotleft> G \\<guillemotright> s * (wp body (t P) s \\<ominus> 1) +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * (P s \\<ominus> 1)\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wp body (t P) s +\n    (1 - \\<guillemotleft> G \\<guillemotright> s) * P s \\<ominus>\n    1\n    \\<le> \\<guillemotleft> G \\<guillemotright> s *\n          wp body (t (\\<lambda>a. P a \\<ominus> 1)) s +\n          (1 - \\<guillemotleft> G \\<guillemotright> s) * (P s \\<ominus> 1)", "{"], ["proof (state)\nthis:\n  (\\<guillemotleft> G \\<guillemotright> s * wp body (t P) s \\<ominus>\n   \\<guillemotleft> G \\<guillemotright> s) +\n  ((1 - \\<guillemotleft> G \\<guillemotright> s) * P s \\<ominus>\n   1 - \\<guillemotleft> G \\<guillemotright> s) =\n  \\<guillemotleft> G \\<guillemotright> s * (wp body (t P) s \\<ominus> 1) +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * (P s \\<ominus> 1)\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wp body (t P) s +\n    (1 - \\<guillemotleft> G \\<guillemotright> s) * P s \\<ominus>\n    1\n    \\<le> \\<guillemotleft> G \\<guillemotright> s *\n          wp body (t (\\<lambda>a. P a \\<ominus> 1)) s +\n          (1 - \\<guillemotleft> G \\<guillemotright> s) * (P s \\<ominus> 1)", "from ft sP"], ["proof (chain)\npicking this:\n  feasible t\n  sound P", "have \"wp body (t P) s \\<ominus> 1 \\<le> wp body (\\<lambda>s. t P s \\<ominus> 1) s\""], ["proof (prove)\nusing this:\n  feasible t\n  sound P\n\ngoal (1 subgoal):\n 1. wp body (t P) s \\<ominus> 1\n    \\<le> wp body (\\<lambda>s. t P s \\<ominus> 1) s", "by(auto intro:sub_distribD[OF sdb])"], ["proof (state)\nthis:\n  wp body (t P) s \\<ominus> 1\n  \\<le> wp body (\\<lambda>s. t P s \\<ominus> 1) s\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wp body (t P) s +\n    (1 - \\<guillemotleft> G \\<guillemotright> s) * P s \\<ominus>\n    1\n    \\<le> \\<guillemotleft> G \\<guillemotright> s *\n          wp body (t (\\<lambda>a. P a \\<ominus> 1)) s +\n          (1 - \\<guillemotleft> G \\<guillemotright> s) * (P s \\<ominus> 1)", "also"], ["proof (state)\nthis:\n  wp body (t P) s \\<ominus> 1\n  \\<le> wp body (\\<lambda>s. t P s \\<ominus> 1) s\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wp body (t P) s +\n    (1 - \\<guillemotleft> G \\<guillemotright> s) * P s \\<ominus>\n    1\n    \\<le> \\<guillemotleft> G \\<guillemotright> s *\n          wp body (t (\\<lambda>a. P a \\<ominus> 1)) s +\n          (1 - \\<guillemotleft> G \\<guillemotright> s) * (P s \\<ominus> 1)", "{"], ["proof (state)\nthis:\n  wp body (t P) s \\<ominus> 1\n  \\<le> wp body (\\<lambda>s. t P s \\<ominus> 1) s\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wp body (t P) s +\n    (1 - \\<guillemotleft> G \\<guillemotright> s) * P s \\<ominus>\n    1\n    \\<le> \\<guillemotleft> G \\<guillemotright> s *\n          wp body (t (\\<lambda>a. P a \\<ominus> 1)) s +\n          (1 - \\<guillemotleft> G \\<guillemotright> s) * (P s \\<ominus> 1)", "from IH sP"], ["proof (chain)\npicking this:\n  \\<forall>P s.\n     sound P \\<longrightarrow>\n     t P s \\<ominus> 1 \\<le> t (\\<lambda>a. P a \\<ominus> 1) s\n  sound P", "have \"\\<lambda>s. t P s \\<ominus> 1 \\<tturnstile> t (\\<lambda>s. P s \\<ominus> 1)\""], ["proof (prove)\nusing this:\n  \\<forall>P s.\n     sound P \\<longrightarrow>\n     t P s \\<ominus> 1 \\<le> t (\\<lambda>a. P a \\<ominus> 1) s\n  sound P\n\ngoal (1 subgoal):\n 1. \\<lambda>s.\n       t P s \\<ominus> 1 \\<tturnstile> t (\\<lambda>s. P s \\<ominus> 1)", "by(auto)"], ["proof (state)\nthis:\n  \\<lambda>s.\n     t P s \\<ominus> 1 \\<tturnstile> t (\\<lambda>s. P s \\<ominus> 1)\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wp body (t P) s +\n    (1 - \\<guillemotleft> G \\<guillemotright> s) * P s \\<ominus>\n    1\n    \\<le> \\<guillemotleft> G \\<guillemotright> s *\n          wp body (t (\\<lambda>a. P a \\<ominus> 1)) s +\n          (1 - \\<guillemotleft> G \\<guillemotright> s) * (P s \\<ominus> 1)", "with sP ft s2 s3"], ["proof (chain)\npicking this:\n  sound P\n  feasible t\n  sound (t (\\<lambda>s. P s \\<ominus> 1))\n  sound (\\<lambda>s. t P s \\<ominus> 1)\n  \\<lambda>s.\n     t P s \\<ominus> 1 \\<tturnstile> t (\\<lambda>s. P s \\<ominus> 1)", "have \"wp body (\\<lambda>s. t P s \\<ominus> 1) s \\<le> wp body (t (\\<lambda>s. P s \\<ominus> 1)) s\""], ["proof (prove)\nusing this:\n  sound P\n  feasible t\n  sound (t (\\<lambda>s. P s \\<ominus> 1))\n  sound (\\<lambda>s. t P s \\<ominus> 1)\n  \\<lambda>s.\n     t P s \\<ominus> 1 \\<tturnstile> t (\\<lambda>s. P s \\<ominus> 1)\n\ngoal (1 subgoal):\n 1. wp body (\\<lambda>s. t P s \\<ominus> 1) s\n    \\<le> wp body (t (\\<lambda>s. P s \\<ominus> 1)) s", "by(blast intro:le_funD[OF mono_transD, OF healthy_monoD, OF hb])"], ["proof (state)\nthis:\n  wp body (\\<lambda>s. t P s \\<ominus> 1) s\n  \\<le> wp body (t (\\<lambda>s. P s \\<ominus> 1)) s\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wp body (t P) s +\n    (1 - \\<guillemotleft> G \\<guillemotright> s) * P s \\<ominus>\n    1\n    \\<le> \\<guillemotleft> G \\<guillemotright> s *\n          wp body (t (\\<lambda>a. P a \\<ominus> 1)) s +\n          (1 - \\<guillemotleft> G \\<guillemotright> s) * (P s \\<ominus> 1)", "}"], ["proof (state)\nthis:\n  wp body (\\<lambda>s. t P s \\<ominus> 1) s\n  \\<le> wp body (t (\\<lambda>s. P s \\<ominus> 1)) s\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wp body (t P) s +\n    (1 - \\<guillemotleft> G \\<guillemotright> s) * P s \\<ominus>\n    1\n    \\<le> \\<guillemotleft> G \\<guillemotright> s *\n          wp body (t (\\<lambda>a. P a \\<ominus> 1)) s +\n          (1 - \\<guillemotleft> G \\<guillemotright> s) * (P s \\<ominus> 1)", "finally"], ["proof (chain)\npicking this:\n  wp body (t P) s \\<ominus> 1\n  \\<le> wp body (t (\\<lambda>s. P s \\<ominus> 1)) s", "have \"\\<guillemotleft>G\\<guillemotright> s * (wp body (t P) s \\<ominus> 1) + (1 - \\<guillemotleft>G\\<guillemotright> s) * (P s \\<ominus> 1) \\<le>\n                      \\<guillemotleft>G\\<guillemotright> s * wp body (t (\\<lambda>s. P s \\<ominus> 1)) s + (1 - \\<guillemotleft>G\\<guillemotright> s) * (P s \\<ominus> 1)\""], ["proof (prove)\nusing this:\n  wp body (t P) s \\<ominus> 1\n  \\<le> wp body (t (\\<lambda>s. P s \\<ominus> 1)) s\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * (wp body (t P) s \\<ominus> 1) +\n    (1 - \\<guillemotleft> G \\<guillemotright> s) * (P s \\<ominus> 1)\n    \\<le> \\<guillemotleft> G \\<guillemotright> s *\n          wp body (t (\\<lambda>s. P s \\<ominus> 1)) s +\n          (1 - \\<guillemotleft> G \\<guillemotright> s) * (P s \\<ominus> 1)", "by(auto intro:add_right_mono mult_left_mono)"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * (wp body (t P) s \\<ominus> 1) +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * (P s \\<ominus> 1)\n  \\<le> \\<guillemotleft> G \\<guillemotright> s *\n        wp body (t (\\<lambda>s. P s \\<ominus> 1)) s +\n        (1 - \\<guillemotleft> G \\<guillemotright> s) * (P s \\<ominus> 1)\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wp body (t P) s +\n    (1 - \\<guillemotleft> G \\<guillemotright> s) * P s \\<ominus>\n    1\n    \\<le> \\<guillemotleft> G \\<guillemotright> s *\n          wp body (t (\\<lambda>a. P a \\<ominus> 1)) s +\n          (1 - \\<guillemotleft> G \\<guillemotright> s) * (P s \\<ominus> 1)", "}"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * (wp body (t P) s \\<ominus> 1) +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * (P s \\<ominus> 1)\n  \\<le> \\<guillemotleft> G \\<guillemotright> s *\n        wp body (t (\\<lambda>s. P s \\<ominus> 1)) s +\n        (1 - \\<guillemotleft> G \\<guillemotright> s) * (P s \\<ominus> 1)\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wp body (t P) s +\n    (1 - \\<guillemotleft> G \\<guillemotright> s) * P s \\<ominus>\n    1\n    \\<le> \\<guillemotleft> G \\<guillemotright> s *\n          wp body (t (\\<lambda>a. P a \\<ominus> 1)) s +\n          (1 - \\<guillemotleft> G \\<guillemotright> s) * (P s \\<ominus> 1)", "finally"], ["proof (chain)\npicking this:\n  \\<guillemotleft> G \\<guillemotright> s * wp body (t P) s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * P s \\<ominus>\n  1\n  \\<le> \\<guillemotleft> G \\<guillemotright> s *\n        wp body (t (\\<lambda>s. P s \\<ominus> 1)) s +\n        (1 - \\<guillemotleft> G \\<guillemotright> s) * (P s \\<ominus> 1)", "show \"\\<guillemotleft>G\\<guillemotright> s * wp body (t P) s + (1 - \\<guillemotleft>G\\<guillemotright> s) * P s \\<ominus> 1 \\<le>\n                    \\<guillemotleft>G\\<guillemotright> s * wp body (t (\\<lambda>s. P s \\<ominus> 1)) s + (1 - \\<guillemotleft>G\\<guillemotright> s) * (P s \\<ominus> 1)\""], ["proof (prove)\nusing this:\n  \\<guillemotleft> G \\<guillemotright> s * wp body (t P) s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * P s \\<ominus>\n  1\n  \\<le> \\<guillemotleft> G \\<guillemotright> s *\n        wp body (t (\\<lambda>s. P s \\<ominus> 1)) s +\n        (1 - \\<guillemotleft> G \\<guillemotright> s) * (P s \\<ominus> 1)\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wp body (t P) s +\n    (1 - \\<guillemotleft> G \\<guillemotright> s) * P s \\<ominus>\n    1\n    \\<le> \\<guillemotleft> G \\<guillemotright> s *\n          wp body (t (\\<lambda>s. P s \\<ominus> 1)) s +\n          (1 - \\<guillemotleft> G \\<guillemotright> s) * (P s \\<ominus> 1)", "."], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wp body (t P) s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * P s \\<ominus>\n  1\n  \\<le> \\<guillemotleft> G \\<guillemotright> s *\n        wp body (t (\\<lambda>s. P s \\<ominus> 1)) s +\n        (1 - \\<guillemotleft> G \\<guillemotright> s) * (P s \\<ominus> 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  wp (body ;;\n      Embed\n       t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n   P s \\<ominus>\n  1\n  \\<le> wp (body ;;\n            Embed\n             t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n         (\\<lambda>a. P a \\<ominus> 1) s\n\ngoal (1 subgoal):\n 1. \\<And>t t' u u' P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        equiv_trans t t'; equiv_utrans u u'; sound P\\<rbrakk>\n       \\<Longrightarrow> t' P s \\<ominus> 1\n                         \\<le> t' (\\<lambda>a. P a \\<ominus> 1) s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t t' u u' P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        equiv_trans t t'; equiv_utrans u u'; sound P\\<rbrakk>\n       \\<Longrightarrow> t' P s \\<ominus> 1\n                         \\<le> t' (\\<lambda>a. P a \\<ominus> 1) s", "fix t t'::\"'s trans\" and P::\"'s expect\" and s::'s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t t' u u' P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        equiv_trans t t'; equiv_utrans u u'; sound P\\<rbrakk>\n       \\<Longrightarrow> t' P s \\<ominus> 1\n                         \\<le> t' (\\<lambda>a. P a \\<ominus> 1) s", "assume IH: \"\\<forall>P s. sound P \\<longrightarrow> t P s \\<ominus> 1 \\<le> t (\\<lambda>a. P a \\<ominus> 1) s\"\n       and eq: \"equiv_trans t t'\" and sP: \"sound P\""], ["proof (state)\nthis:\n  \\<forall>P s.\n     sound P \\<longrightarrow>\n     t P s \\<ominus> 1 \\<le> t (\\<lambda>a. P a \\<ominus> 1) s\n  equiv_trans t t'\n  sound P\n\ngoal (1 subgoal):\n 1. \\<And>t t' u u' P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        equiv_trans t t'; equiv_utrans u u'; sound P\\<rbrakk>\n       \\<Longrightarrow> t' P s \\<ominus> 1\n                         \\<le> t' (\\<lambda>a. P a \\<ominus> 1) s", "from sP"], ["proof (chain)\npicking this:\n  sound P", "have \"t' P s \\<ominus> 1 = t P s \\<ominus> 1\""], ["proof (prove)\nusing this:\n  sound P\n\ngoal (1 subgoal):\n 1. t' P s \\<ominus> 1 = t P s \\<ominus> 1", "by(simp add:equiv_transD[OF eq])"], ["proof (state)\nthis:\n  t' P s \\<ominus> 1 = t P s \\<ominus> 1\n\ngoal (1 subgoal):\n 1. \\<And>t t' u u' P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        equiv_trans t t'; equiv_utrans u u'; sound P\\<rbrakk>\n       \\<Longrightarrow> t' P s \\<ominus> 1\n                         \\<le> t' (\\<lambda>a. P a \\<ominus> 1) s", "also"], ["proof (state)\nthis:\n  t' P s \\<ominus> 1 = t P s \\<ominus> 1\n\ngoal (1 subgoal):\n 1. \\<And>t t' u u' P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        equiv_trans t t'; equiv_utrans u u'; sound P\\<rbrakk>\n       \\<Longrightarrow> t' P s \\<ominus> 1\n                         \\<le> t' (\\<lambda>a. P a \\<ominus> 1) s", "from sP IH"], ["proof (chain)\npicking this:\n  sound P\n  \\<forall>P s.\n     sound P \\<longrightarrow>\n     t P s \\<ominus> 1 \\<le> t (\\<lambda>a. P a \\<ominus> 1) s", "have \"... \\<le> t (\\<lambda>s. P s \\<ominus> 1) s\""], ["proof (prove)\nusing this:\n  sound P\n  \\<forall>P s.\n     sound P \\<longrightarrow>\n     t P s \\<ominus> 1 \\<le> t (\\<lambda>a. P a \\<ominus> 1) s\n\ngoal (1 subgoal):\n 1. t P s \\<ominus> 1 \\<le> t (\\<lambda>s. P s \\<ominus> 1) s", "by(auto)"], ["proof (state)\nthis:\n  t P s \\<ominus> 1 \\<le> t (\\<lambda>s. P s \\<ominus> 1) s\n\ngoal (1 subgoal):\n 1. \\<And>t t' u u' P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        equiv_trans t t'; equiv_utrans u u'; sound P\\<rbrakk>\n       \\<Longrightarrow> t' P s \\<ominus> 1\n                         \\<le> t' (\\<lambda>a. P a \\<ominus> 1) s", "also"], ["proof (state)\nthis:\n  t P s \\<ominus> 1 \\<le> t (\\<lambda>s. P s \\<ominus> 1) s\n\ngoal (1 subgoal):\n 1. \\<And>t t' u u' P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        equiv_trans t t'; equiv_utrans u u'; sound P\\<rbrakk>\n       \\<Longrightarrow> t' P s \\<ominus> 1\n                         \\<le> t' (\\<lambda>a. P a \\<ominus> 1) s", "{"], ["proof (state)\nthis:\n  t P s \\<ominus> 1 \\<le> t (\\<lambda>s. P s \\<ominus> 1) s\n\ngoal (1 subgoal):\n 1. \\<And>t t' u u' P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        equiv_trans t t'; equiv_utrans u u'; sound P\\<rbrakk>\n       \\<Longrightarrow> t' P s \\<ominus> 1\n                         \\<le> t' (\\<lambda>a. P a \\<ominus> 1) s", "from sP"], ["proof (chain)\npicking this:\n  sound P", "have \"sound (\\<lambda>s. P s \\<ominus> 1)\""], ["proof (prove)\nusing this:\n  sound P\n\ngoal (1 subgoal):\n 1. sound (\\<lambda>s. P s \\<ominus> 1)", "by(simp add:tminus_sound)"], ["proof (state)\nthis:\n  sound (\\<lambda>s. P s \\<ominus> 1)\n\ngoal (1 subgoal):\n 1. \\<And>t t' u u' P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        equiv_trans t t'; equiv_utrans u u'; sound P\\<rbrakk>\n       \\<Longrightarrow> t' P s \\<ominus> 1\n                         \\<le> t' (\\<lambda>a. P a \\<ominus> 1) s", "hence \"t (\\<lambda>s. P s \\<ominus> 1) s = t' (\\<lambda>s. P s \\<ominus> 1) s\""], ["proof (prove)\nusing this:\n  sound (\\<lambda>s. P s \\<ominus> 1)\n\ngoal (1 subgoal):\n 1. t (\\<lambda>s. P s \\<ominus> 1) s = t' (\\<lambda>s. P s \\<ominus> 1) s", "by(simp add:equiv_transD[OF eq])"], ["proof (state)\nthis:\n  t (\\<lambda>s. P s \\<ominus> 1) s = t' (\\<lambda>s. P s \\<ominus> 1) s\n\ngoal (1 subgoal):\n 1. \\<And>t t' u u' P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        equiv_trans t t'; equiv_utrans u u'; sound P\\<rbrakk>\n       \\<Longrightarrow> t' P s \\<ominus> 1\n                         \\<le> t' (\\<lambda>a. P a \\<ominus> 1) s", "}"], ["proof (state)\nthis:\n  t (\\<lambda>s. P s \\<ominus> 1) s = t' (\\<lambda>s. P s \\<ominus> 1) s\n\ngoal (1 subgoal):\n 1. \\<And>t t' u u' P s.\n       \\<lbrakk>\\<forall>P s.\n                   sound P \\<longrightarrow>\n                   t P s \\<ominus> 1\n                   \\<le> t (\\<lambda>a. P a \\<ominus> 1) s;\n        equiv_trans t t'; equiv_utrans u u'; sound P\\<rbrakk>\n       \\<Longrightarrow> t' P s \\<ominus> 1\n                         \\<le> t' (\\<lambda>a. P a \\<ominus> 1) s", "finally"], ["proof (chain)\npicking this:\n  t' P s \\<ominus> 1 \\<le> t' (\\<lambda>s. P s \\<ominus> 1) s", "show \"t' P s \\<ominus> 1 \\<le> t' (\\<lambda>s. P s \\<ominus> 1) s\""], ["proof (prove)\nusing this:\n  t' P s \\<ominus> 1 \\<le> t' (\\<lambda>s. P s \\<ominus> 1) s\n\ngoal (1 subgoal):\n 1. t' P s \\<ominus> 1 \\<le> t' (\\<lambda>s. P s \\<ominus> 1) s", "."], ["proof (state)\nthis:\n  t' P s \\<ominus> 1 \\<le> t' (\\<lambda>s. P s \\<ominus> 1) s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>P s.\n     sound P \\<longrightarrow>\n     wp (\\<mu>x.\n            body ;;\n            x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n      P s \\<ominus>\n     1\n     \\<le> wp (\\<mu>x.\n                  body ;;\n                  x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n            (\\<lambda>s. P s \\<ominus> 1) s\n\ngoal (1 subgoal):\n 1. sub_distrib\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>P s.\n     sound P \\<longrightarrow>\n     wp (\\<mu>x.\n            body ;;\n            x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n      P s \\<ominus>\n     1\n     \\<le> wp (\\<mu>x.\n                  body ;;\n                  x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n            (\\<lambda>s. P s \\<ominus> 1) s\n\ngoal (1 subgoal):\n 1. sub_distrib\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "by(auto intro!:sub_distribI)"], ["proof (state)\nthis:\n  sub_distrib\n   (wp (\\<mu>x.\n           body ;;\n           x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>For sub-additivity, we again use the limit-of-iterates characterisation.  Firstly, all\niterates are sublinear:\\<close>"], ["", "lemma sublinear_iterates:\n  assumes hb: \"healthy (wp body)\"\n      and sb: \"sublinear (wp body)\"\n  shows \"sublinear (iterates body G i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sublinear (iterates body G i)", "by(induct i, auto intro!:sublinear_wp_PC sublinear_wp_Seq sublinear_wp_Skip sublinear_wp_Embed\n                           assms healthy_intros iterates_healthy)"], ["", "text \\<open>From this, sub-additivity follows for the limit (i.e. the loop), by appealing to the\nproperty at all steps.\\<close>"], ["", "lemma sub_add_wp_loop:\n  fixes body::\"'s prog\"\n  assumes sb: \"sublinear (wp body)\"\n      and cb:  \"bd_cts (wp body)\"\n      and hwp:  \"healthy (wp body)\"\n  shows \"sub_add (wp (do G \\<longrightarrow> body od))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sub_add\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q s.\n       \\<lbrakk>sound P; sound Q\\<rbrakk>\n       \\<Longrightarrow> wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P s +\n                         wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          Q s\n                         \\<le> wp (\\<mu>x.\nbody ;; x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                                (\\<lambda>s'. P s' + Q s') s", "fix P Q::\"'s expect\" and s::'s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q s.\n       \\<lbrakk>sound P; sound Q\\<rbrakk>\n       \\<Longrightarrow> wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P s +\n                         wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          Q s\n                         \\<le> wp (\\<mu>x.\nbody ;; x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                                (\\<lambda>s'. P s' + Q s') s", "assume sP: \"sound P\" and sQ: \"sound Q\""], ["proof (state)\nthis:\n  sound P\n  sound Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q s.\n       \\<lbrakk>sound P; sound Q\\<rbrakk>\n       \\<Longrightarrow> wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P s +\n                         wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          Q s\n                         \\<le> wp (\\<mu>x.\nbody ;; x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                                (\\<lambda>s'. P s' + Q s') s", "from hwp cb sP"], ["proof (chain)\npicking this:\n  healthy (wp body)\n  bd_cts (wp body)\n  sound P", "have \"(\\<lambda>i. iterates body G i P s) \\<longlonglongrightarrow> wp do G \\<longrightarrow> body od P s\""], ["proof (prove)\nusing this:\n  healthy (wp body)\n  bd_cts (wp body)\n  sound P\n\ngoal (1 subgoal):\n 1. (\\<lambda>i. iterates body G i P s)\n    \\<longlonglongrightarrow> wp (\\<mu>x.\n                                     body ;;\n                                     x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                               P s", "by(rule loop_iterates)"], ["proof (state)\nthis:\n  (\\<lambda>i. iterates body G i P s)\n  \\<longlonglongrightarrow> wp (\\<mu>x.\n                                   body ;;\n                                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                             P s\n\ngoal (1 subgoal):\n 1. \\<And>P Q s.\n       \\<lbrakk>sound P; sound Q\\<rbrakk>\n       \\<Longrightarrow> wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P s +\n                         wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          Q s\n                         \\<le> wp (\\<mu>x.\nbody ;; x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                                (\\<lambda>s'. P s' + Q s') s", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>i. iterates body G i P s)\n  \\<longlonglongrightarrow> wp (\\<mu>x.\n                                   body ;;\n                                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                             P s\n\ngoal (1 subgoal):\n 1. \\<And>P Q s.\n       \\<lbrakk>sound P; sound Q\\<rbrakk>\n       \\<Longrightarrow> wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P s +\n                         wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          Q s\n                         \\<le> wp (\\<mu>x.\nbody ;; x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                                (\\<lambda>s'. P s' + Q s') s", "from hwp cb sQ"], ["proof (chain)\npicking this:\n  healthy (wp body)\n  bd_cts (wp body)\n  sound Q", "have \"(\\<lambda>i. iterates body G i Q s) \\<longlonglongrightarrow> wp do G \\<longrightarrow> body od Q s\""], ["proof (prove)\nusing this:\n  healthy (wp body)\n  bd_cts (wp body)\n  sound Q\n\ngoal (1 subgoal):\n 1. (\\<lambda>i. iterates body G i Q s)\n    \\<longlonglongrightarrow> wp (\\<mu>x.\n                                     body ;;\n                                     x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                               Q s", "by(rule loop_iterates)"], ["proof (state)\nthis:\n  (\\<lambda>i. iterates body G i Q s)\n  \\<longlonglongrightarrow> wp (\\<mu>x.\n                                   body ;;\n                                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                             Q s\n\ngoal (1 subgoal):\n 1. \\<And>P Q s.\n       \\<lbrakk>sound P; sound Q\\<rbrakk>\n       \\<Longrightarrow> wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P s +\n                         wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          Q s\n                         \\<le> wp (\\<mu>x.\nbody ;; x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                                (\\<lambda>s'. P s' + Q s') s", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>i. iterates body G i P s)\n  \\<longlonglongrightarrow> wp (\\<mu>x.\n                                   body ;;\n                                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                             P s\n  (\\<lambda>i. iterates body G i Q s)\n  \\<longlonglongrightarrow> wp (\\<mu>x.\n                                   body ;;\n                                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                             Q s", "have \"(\\<lambda>i. iterates body G i P s + iterates body G i Q s) \\<longlonglongrightarrow>\n        wp do G \\<longrightarrow> body od P s + wp do G \\<longrightarrow> body od Q s\""], ["proof (prove)\nusing this:\n  (\\<lambda>i. iterates body G i P s)\n  \\<longlonglongrightarrow> wp (\\<mu>x.\n                                   body ;;\n                                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                             P s\n  (\\<lambda>i. iterates body G i Q s)\n  \\<longlonglongrightarrow> wp (\\<mu>x.\n                                   body ;;\n                                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                             Q s\n\ngoal (1 subgoal):\n 1. (\\<lambda>i. iterates body G i P s + iterates body G i Q s)\n    \\<longlonglongrightarrow> wp (\\<mu>x.\n                                     body ;;\n                                     x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                               P s +\n                              wp (\\<mu>x.\n                                     body ;;\n                                     x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                               Q s", "by(rule tendsto_add)"], ["proof (state)\nthis:\n  (\\<lambda>i. iterates body G i P s + iterates body G i Q s)\n  \\<longlonglongrightarrow> wp (\\<mu>x.\n                                   body ;;\n                                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                             P s +\n                            wp (\\<mu>x.\n                                   body ;;\n                                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                             Q s\n\ngoal (1 subgoal):\n 1. \\<And>P Q s.\n       \\<lbrakk>sound P; sound Q\\<rbrakk>\n       \\<Longrightarrow> wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P s +\n                         wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          Q s\n                         \\<le> wp (\\<mu>x.\nbody ;; x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                                (\\<lambda>s'. P s' + Q s') s", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>i. iterates body G i P s + iterates body G i Q s)\n  \\<longlonglongrightarrow> wp (\\<mu>x.\n                                   body ;;\n                                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                             P s +\n                            wp (\\<mu>x.\n                                   body ;;\n                                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                             Q s\n\ngoal (1 subgoal):\n 1. \\<And>P Q s.\n       \\<lbrakk>sound P; sound Q\\<rbrakk>\n       \\<Longrightarrow> wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P s +\n                         wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          Q s\n                         \\<le> wp (\\<mu>x.\nbody ;; x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                                (\\<lambda>s'. P s' + Q s') s", "{"], ["proof (state)\nthis:\n  (\\<lambda>i. iterates body G i P s + iterates body G i Q s)\n  \\<longlonglongrightarrow> wp (\\<mu>x.\n                                   body ;;\n                                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                             P s +\n                            wp (\\<mu>x.\n                                   body ;;\n                                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                             Q s\n\ngoal (1 subgoal):\n 1. \\<And>P Q s.\n       \\<lbrakk>sound P; sound Q\\<rbrakk>\n       \\<Longrightarrow> wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P s +\n                         wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          Q s\n                         \\<le> wp (\\<mu>x.\nbody ;; x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                                (\\<lambda>s'. P s' + Q s') s", "from sublinear_subadd[OF sublinear_iterates, OF hwp sb,\n                          OF healthy_feasibleD[OF iterates_healthy, OF hwp]] sP sQ"], ["proof (chain)\npicking this:\n  sub_add (iterates body ?G1 ?i1)\n  sound P\n  sound Q", "have \"\\<And>i. iterates body G i P s + iterates body G i Q s \\<le> iterates body G i (\\<lambda>s. P s + Q s) s\""], ["proof (prove)\nusing this:\n  sub_add (iterates body ?G1 ?i1)\n  sound P\n  sound Q\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       iterates body G i P s + iterates body G i Q s\n       \\<le> iterates body G i (\\<lambda>s. P s + Q s) s", "by(rule sub_addD)"], ["proof (state)\nthis:\n  iterates body G ?i P s + iterates body G ?i Q s\n  \\<le> iterates body G ?i (\\<lambda>s. P s + Q s) s\n\ngoal (1 subgoal):\n 1. \\<And>P Q s.\n       \\<lbrakk>sound P; sound Q\\<rbrakk>\n       \\<Longrightarrow> wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P s +\n                         wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          Q s\n                         \\<le> wp (\\<mu>x.\nbody ;; x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                                (\\<lambda>s'. P s' + Q s') s", "}"], ["proof (state)\nthis:\n  iterates body G ?i P s + iterates body G ?i Q s\n  \\<le> iterates body G ?i (\\<lambda>s. P s + Q s) s\n\ngoal (1 subgoal):\n 1. \\<And>P Q s.\n       \\<lbrakk>sound P; sound Q\\<rbrakk>\n       \\<Longrightarrow> wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P s +\n                         wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          Q s\n                         \\<le> wp (\\<mu>x.\nbody ;; x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                                (\\<lambda>s'. P s' + Q s') s", "moreover"], ["proof (state)\nthis:\n  iterates body G ?i P s + iterates body G ?i Q s\n  \\<le> iterates body G ?i (\\<lambda>s. P s + Q s) s\n\ngoal (1 subgoal):\n 1. \\<And>P Q s.\n       \\<lbrakk>sound P; sound Q\\<rbrakk>\n       \\<Longrightarrow> wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P s +\n                         wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          Q s\n                         \\<le> wp (\\<mu>x.\nbody ;; x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                                (\\<lambda>s'. P s' + Q s') s", "{"], ["proof (state)\nthis:\n  iterates body G ?i P s + iterates body G ?i Q s\n  \\<le> iterates body G ?i (\\<lambda>s. P s + Q s) s\n\ngoal (1 subgoal):\n 1. \\<And>P Q s.\n       \\<lbrakk>sound P; sound Q\\<rbrakk>\n       \\<Longrightarrow> wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P s +\n                         wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          Q s\n                         \\<le> wp (\\<mu>x.\nbody ;; x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                                (\\<lambda>s'. P s' + Q s') s", "from sP sQ"], ["proof (chain)\npicking this:\n  sound P\n  sound Q", "have \"sound (\\<lambda>s. P s + Q s)\""], ["proof (prove)\nusing this:\n  sound P\n  sound Q\n\ngoal (1 subgoal):\n 1. sound (\\<lambda>s. P s + Q s)", "by(blast intro:sound_intros)"], ["proof (state)\nthis:\n  sound (\\<lambda>s. P s + Q s)\n\ngoal (1 subgoal):\n 1. \\<And>P Q s.\n       \\<lbrakk>sound P; sound Q\\<rbrakk>\n       \\<Longrightarrow> wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P s +\n                         wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          Q s\n                         \\<le> wp (\\<mu>x.\nbody ;; x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                                (\\<lambda>s'. P s' + Q s') s", "with hwp cb"], ["proof (chain)\npicking this:\n  healthy (wp body)\n  bd_cts (wp body)\n  sound (\\<lambda>s. P s + Q s)", "have \"(\\<lambda>i. iterates body G i (\\<lambda>s. P s + Q s) s) \\<longlonglongrightarrow>\n                           wp do G \\<longrightarrow> body od (\\<lambda>s. P s + Q s) s\""], ["proof (prove)\nusing this:\n  healthy (wp body)\n  bd_cts (wp body)\n  sound (\\<lambda>s. P s + Q s)\n\ngoal (1 subgoal):\n 1. (\\<lambda>i. iterates body G i (\\<lambda>s. P s + Q s) s)\n    \\<longlonglongrightarrow> wp (\\<mu>x.\n                                     body ;;\n                                     x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                               (\\<lambda>s. P s + Q s) s", "by(blast intro:loop_iterates)"], ["proof (state)\nthis:\n  (\\<lambda>i. iterates body G i (\\<lambda>s. P s + Q s) s)\n  \\<longlonglongrightarrow> wp (\\<mu>x.\n                                   body ;;\n                                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                             (\\<lambda>s. P s + Q s) s\n\ngoal (1 subgoal):\n 1. \\<And>P Q s.\n       \\<lbrakk>sound P; sound Q\\<rbrakk>\n       \\<Longrightarrow> wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P s +\n                         wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          Q s\n                         \\<le> wp (\\<mu>x.\nbody ;; x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                                (\\<lambda>s'. P s' + Q s') s", "}"], ["proof (state)\nthis:\n  (\\<lambda>i. iterates body G i (\\<lambda>s. P s + Q s) s)\n  \\<longlonglongrightarrow> wp (\\<mu>x.\n                                   body ;;\n                                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                             (\\<lambda>s. P s + Q s) s\n\ngoal (1 subgoal):\n 1. \\<And>P Q s.\n       \\<lbrakk>sound P; sound Q\\<rbrakk>\n       \\<Longrightarrow> wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P s +\n                         wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          Q s\n                         \\<le> wp (\\<mu>x.\nbody ;; x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                                (\\<lambda>s'. P s' + Q s') s", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>i. iterates body G i P s + iterates body G i Q s)\n  \\<longlonglongrightarrow> wp (\\<mu>x.\n                                   body ;;\n                                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                             P s +\n                            wp (\\<mu>x.\n                                   body ;;\n                                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                             Q s\n  iterates body G ?i P s + iterates body G ?i Q s\n  \\<le> iterates body G ?i (\\<lambda>s. P s + Q s) s\n  (\\<lambda>i. iterates body G i (\\<lambda>s. P s + Q s) s)\n  \\<longlonglongrightarrow> wp (\\<mu>x.\n                                   body ;;\n                                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                             (\\<lambda>s. P s + Q s) s", "show \"wp do G \\<longrightarrow> body od P s + wp do G \\<longrightarrow> body od Q s \\<le> wp do G \\<longrightarrow> body od (\\<lambda>s. P s + Q s) s\""], ["proof (prove)\nusing this:\n  (\\<lambda>i. iterates body G i P s + iterates body G i Q s)\n  \\<longlonglongrightarrow> wp (\\<mu>x.\n                                   body ;;\n                                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                             P s +\n                            wp (\\<mu>x.\n                                   body ;;\n                                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                             Q s\n  iterates body G ?i P s + iterates body G ?i Q s\n  \\<le> iterates body G ?i (\\<lambda>s. P s + Q s) s\n  (\\<lambda>i. iterates body G i (\\<lambda>s. P s + Q s) s)\n  \\<longlonglongrightarrow> wp (\\<mu>x.\n                                   body ;;\n                                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                             (\\<lambda>s. P s + Q s) s\n\ngoal (1 subgoal):\n 1. wp (\\<mu>x.\n           body ;;\n           x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     P s +\n    wp (\\<mu>x.\n           body ;;\n           x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     Q s\n    \\<le> wp (\\<mu>x.\n                 body ;;\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n           (\\<lambda>s. P s + Q s) s", "by(blast intro:LIMSEQ_le)"], ["proof (state)\nthis:\n  wp (\\<mu>x.\n         body ;;\n         x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n   P s +\n  wp (\\<mu>x.\n         body ;;\n         x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n   Q s\n  \\<le> wp (\\<mu>x.\n               body ;;\n               x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n         (\\<lambda>s. P s + Q s) s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sublinear_wp_loop:\n  fixes body::\"'s prog\"\n  assumes hb:  \"healthy (wp body)\"\n      and nhb: \"nearly_healthy (wlp body)\"\n      and sb:  \"sublinear (wp body)\"\n      and cb:  \"bd_cts (wp body)\"\n  shows \"sublinear (wp (do G \\<longrightarrow> body od))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sublinear\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "using sublinear_sub_distrib[OF sb] sublinear_subadd[OF sb]\n         hb healthy_feasibleD[OF hb]"], ["proof (prove)\nusing this:\n  sub_distrib (wp body)\n  feasible (wp body) \\<Longrightarrow> sub_add (wp body)\n  healthy (wp body)\n  feasible (wp body)\n\ngoal (1 subgoal):\n 1. sublinear\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "by(iprover intro:sd_sa_sublinear[OF _ _ healthy_wp_loop[OF hb]]\n                    sub_distrib_wp_loop sub_add_wp_loop assms)"], ["", "lemmas sublinear_intros =\n  sublinear_wp_Abort\n  sublinear_wp_Skip\n  sublinear_wp_Apply\n  sublinear_wp_Seq\n  sublinear_wp_PC\n  sublinear_wp_DC\n  sublinear_wp_SetPC\n  sublinear_wp_SetDC\n  sublinear_wp_Embed\n  sublinear_wp_repeat\n  sublinear_wp_Bind\n  sublinear_wp_loop"], ["", "end"]]}