{"file_name": "/home/qj213/afp-2021-10-22/thys/pGCL/WellDefined.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/pGCL", "problem_names": ["lemma wp_under_wlpI[intro]:\n  \"\\<lbrakk> \\<And>P. unitary P \\<Longrightarrow> wp prog P \\<tturnstile> wlp prog P \\<rbrakk> \\<Longrightarrow> wp_under_wlp prog\"", "lemma wp_under_wlpD[dest]:\n  \"\\<lbrakk> wp_under_wlp prog; unitary P \\<rbrakk> \\<Longrightarrow> wp prog P \\<tturnstile> wlp prog P\"", "lemma wp_under_le_trans:\n  \"wp_under_wlp a \\<Longrightarrow> le_utrans (wp a) (wlp a)\"", "lemma wp_under_wlp_Abort:\n  \"wp_under_wlp Abort\"", "lemma wp_under_wlp_Skip:\n  \"wp_under_wlp Skip\"", "lemma wp_under_wlp_Apply:\n  \"wp_under_wlp (Apply f)\"", "lemma wp_under_wlp_Seq:\n  assumes h_wlp_a: \"nearly_healthy (wlp a)\"\n      and h_wp_b:  \"healthy (wp b)\"\n      and h_wlp_b: \"nearly_healthy (wlp b)\"\n      and wp_u_a:  \"wp_under_wlp a\"\n      and wp_u_b:  \"wp_under_wlp b\"\n  shows \"wp_under_wlp (a ;; b)\"", "lemma wp_under_wlp_PC:\n  assumes h_wp_a:  \"healthy (wp a)\"\n      and h_wlp_a: \"nearly_healthy (wlp a)\"\n      and h_wp_b:  \"healthy (wp b)\"\n      and h_wlp_b: \"nearly_healthy (wlp b)\"\n      and wp_u_a:  \"wp_under_wlp a\"\n      and wp_u_b:  \"wp_under_wlp b\"\n      and uP:      \"unitary P\"\n  shows \"wp_under_wlp (a \\<^bsub>P\\<^esub>\\<oplus> b)\"", "lemma wp_under_wlp_DC:\n  assumes wp_u_a:  \"wp_under_wlp a\"\n      and wp_u_b:  \"wp_under_wlp b\"\n  shows \"wp_under_wlp (a \\<Sqinter> b)\"", "lemma wp_under_wlp_SetPC:\n  assumes wp_u_f:  \"\\<And>s a. a \\<in> supp (P s) \\<Longrightarrow> wp_under_wlp (f a)\"\n      and nP:      \"\\<And>s a. a \\<in> supp (P s) \\<Longrightarrow> 0 \\<le> P s a\"\n  shows \"wp_under_wlp (SetPC f P)\"", "lemma wp_under_wlp_SetDC:\n  assumes wp_u_f:  \"\\<And>s a. a \\<in> S s \\<Longrightarrow> wp_under_wlp (f a)\"\n      and hf:      \"\\<And>s a. a \\<in> S s \\<Longrightarrow> healthy (wp (f a))\"\n      and nS:      \"\\<And>s. S s \\<noteq> {}\"\n  shows \"wp_under_wlp (SetDC f S)\"", "lemma wp_under_wlp_Embed:\n  \"wp_under_wlp (Embed t)\"", "lemma wp_under_wlp_loop:\n  fixes body::\"'s prog\"\n  assumes hwp: \"healthy (wp body)\"\n      and hwlp: \"nearly_healthy (wlp body)\"\n      and wp_under: \"wp_under_wlp body\"\n  shows \"wp_under_wlp (do G \\<longrightarrow> body od)\"", "lemma wp_under_wlp_repeat:\n  \"\\<lbrakk> healthy (wp a); nearly_healthy (wlp a); wp_under_wlp a \\<rbrakk> \\<Longrightarrow>\n   wp_under_wlp (repeat n a)\"", "lemma wp_under_wlp_Bind:\n  \"\\<lbrakk> \\<And>s. wp_under_wlp (a (f s)) \\<rbrakk> \\<Longrightarrow> wp_under_wlp (Bind f a)\"", "lemmas wp_under_wlp_intros =\n  wp_under_wlp_Abort wp_under_wlp_Skip\n  wp_under_wlp_Apply wp_under_wlp_Seq\n  wp_under_wlp_PC    wp_under_wlp_DC\n  wp_under_wlp_SetPC wp_under_wlp_SetDC\n  wp_under_wlp_Embed wp_under_wlp_loop\n  wp_under_wlp_repeat wp_under_wlp_Bind", "lemma sub_distrib_pconjI[intro]:\n  \"\\<lbrakk>\\<And>P Q. \\<lbrakk> unitary P; unitary Q \\<rbrakk> \\<Longrightarrow>  wlp prog P && wp prog Q \\<tturnstile> wp prog (P && Q) \\<rbrakk> \\<Longrightarrow>\n    sub_distrib_pconj prog\"", "lemma sub_distrib_pconjD[dest]:\n  \"\\<And>P Q. \\<lbrakk> sub_distrib_pconj prog; unitary P; unitary Q \\<rbrakk> \\<Longrightarrow>\n   wlp prog P && wp prog Q \\<tturnstile> wp prog (P && Q)\"", "lemma sdp_Abort:\n  \"sub_distrib_pconj Abort\"", "lemma sdp_Skip:\n  \"sub_distrib_pconj Skip\"", "lemma sdp_Seq:\n  fixes a and b\n  assumes sdp_a:   \"sub_distrib_pconj a\"\n      and sdp_b:   \"sub_distrib_pconj b\"\n      and h_wp_a:  \"healthy (wp a)\"\n      and h_wp_b:  \"healthy (wp b)\"\n      and h_wlp_b: \"nearly_healthy (wlp b)\"\n  shows \"sub_distrib_pconj (a ;; b)\"", "lemma sdp_Apply:\n  \"sub_distrib_pconj (Apply f)\"", "lemma sdp_DC:\n  fixes a::\"'s prog\" and b\n  assumes sdp_a:   \"sub_distrib_pconj a\"\n      and sdp_b:   \"sub_distrib_pconj b\"\n      and h_wp_a:  \"healthy (wp a)\"\n      and h_wp_b:  \"healthy (wp b)\"\n      and h_wlp_b: \"nearly_healthy (wlp b)\"\n  shows \"sub_distrib_pconj (a \\<Sqinter> b)\"", "lemma sdp_PC:\n  fixes a::\"'s prog\" and b\n  assumes sdp_a:   \"sub_distrib_pconj a\"\n      and sdp_b:   \"sub_distrib_pconj b\"\n      and h_wp_a:  \"healthy (wp a)\"\n      and h_wp_b:  \"healthy (wp b)\"\n      and h_wlp_b: \"nearly_healthy (wlp b)\"\n      and uP:      \"unitary P\"\n  shows \"sub_distrib_pconj (a \\<^bsub>P\\<^esub>\\<oplus> b)\"", "lemma sdp_Embed:\n  \"\\<lbrakk> \\<And>P Q. \\<lbrakk> unitary P; unitary Q \\<rbrakk> \\<Longrightarrow> t P && t Q \\<tturnstile> t (P && Q) \\<rbrakk> \\<Longrightarrow>\n   sub_distrib_pconj (Embed t)\"", "lemma sdp_repeat:\n  fixes a::\"'s prog\"\n  assumes sdpa: \"sub_distrib_pconj a\"\n      and hwp: \"healthy (wp a)\" and hwlp: \"nearly_healthy (wlp a)\"\n  shows \"sub_distrib_pconj (repeat n a)\" (is \"?X n\")", "lemma sdp_SetPC:\n  fixes p::\"'a \\<Rightarrow> 's prog\"\n  assumes sdp: \"\\<And>s a. a \\<in> supp (P s) \\<Longrightarrow> sub_distrib_pconj (p a)\"\n      and fin: \"\\<And>s. finite (supp (P s))\"\n      and nnp: \"\\<And>s a. 0 \\<le> P s a\"\n      and sub: \"\\<And>s. sum (P s) (supp (P s)) \\<le> 1\"\n  shows \"sub_distrib_pconj (SetPC p P)\"", "lemma sdp_SetDC:\n  fixes p::\"'a \\<Rightarrow> 's prog\"\n  assumes sdp: \"\\<And>s a. a \\<in> S s \\<Longrightarrow> sub_distrib_pconj (p a)\"\n      and hwp: \"\\<And>s a. a \\<in> S s \\<Longrightarrow> healthy (wp (p a))\"\n      and hwlp: \"\\<And>s a. a \\<in> S s \\<Longrightarrow> nearly_healthy (wlp (p a))\"\n      and ne:  \"\\<And>s. S s \\<noteq> {}\"\n  shows \"sub_distrib_pconj (SetDC p S)\"", "lemma sdp_Bind:\n  \"\\<lbrakk> \\<And>s. sub_distrib_pconj (p (f s)) \\<rbrakk> \\<Longrightarrow> sub_distrib_pconj (Bind f p)\"", "lemma sdp_loop:\n  fixes body::\"'s prog\"\n  assumes sdp_body: \"sub_distrib_pconj body\"\n      and hwlp: \"nearly_healthy (wlp body)\"\n      and hwp:  \"healthy (wp body)\"\n  shows \"sub_distrib_pconj (do G \\<longrightarrow> body od)\"", "lemmas sdp_intros =\n  sdp_Abort  sdp_Skip  sdp_Apply\n  sdp_Seq    sdp_DC    sdp_PC\n  sdp_SetPC  sdp_SetDC sdp_Embed\n  sdp_repeat sdp_Bind  sdp_loop", "lemma well_defI[intro]:\n  \"\\<lbrakk> healthy (wp prog); nearly_healthy (wlp prog);\n     wp_under_wlp prog; sub_distrib_pconj prog; sublinear (wp prog);\n     bd_cts (wp prog) \\<rbrakk> \\<Longrightarrow>\n   well_def prog\"", "lemma well_def_wp_healthy[dest]:\n  \"well_def prog \\<Longrightarrow> healthy (wp prog)\"", "lemma well_def_wlp_nearly_healthy[dest]:\n  \"well_def prog \\<Longrightarrow> nearly_healthy (wlp prog)\"", "lemma well_def_wp_under[dest]:\n  \"well_def prog \\<Longrightarrow> wp_under_wlp prog\"", "lemma well_def_sdp[dest]:\n  \"well_def prog \\<Longrightarrow> sub_distrib_pconj prog\"", "lemma well_def_wp_sublinear[dest]:\n  \"well_def prog \\<Longrightarrow> sublinear (wp prog)\"", "lemma well_def_wp_cts[dest]:\n  \"well_def prog \\<Longrightarrow> bd_cts (wp prog)\"", "lemmas wd_dests =\n  well_def_wp_healthy well_def_wlp_nearly_healthy\n  well_def_wp_under well_def_sdp\n  well_def_wp_sublinear well_def_wp_cts", "lemma wd_Abort:\n  \"well_def Abort\"", "lemma wd_Skip:\n  \"well_def Skip\"", "lemma wd_Apply:\n  \"well_def (Apply f)\"", "lemma wd_Seq:\n  \"\\<lbrakk> well_def a; well_def b \\<rbrakk> \\<Longrightarrow> well_def (a ;; b)\"", "lemma wd_PC:\n  \"\\<lbrakk> well_def a; well_def b; unitary P \\<rbrakk> \\<Longrightarrow> well_def (a \\<^bsub>P\\<^esub>\\<oplus> b)\"", "lemma wd_DC:\n  \"\\<lbrakk> well_def a; well_def b \\<rbrakk> \\<Longrightarrow> well_def (a \\<Sqinter> b)\"", "lemma wd_SetDC:\n  \"\\<lbrakk> \\<And>x s. x \\<in> S s \\<Longrightarrow> well_def (a x); \\<And>s. S s \\<noteq> {};\n     \\<And>s. finite (S s) \\<rbrakk> \\<Longrightarrow> well_def (SetDC a S)\"", "lemma wd_SetPC:\n  \"\\<lbrakk> \\<And>x s. x \\<in> (supp (p s)) \\<Longrightarrow> well_def (a x); \\<And>s. unitary (p s); \\<And>s. finite (supp (p s));\n     \\<And>s. sum (p s) (supp (p s)) \\<le> 1 \\<rbrakk> \\<Longrightarrow> well_def (SetPC a p)\"", "lemma wd_Embed:\n  fixes t::\"'s trans\"\n  assumes ht: \"healthy t\" and st: \"sublinear t\" and ct: \"bd_cts t\"\n  shows \"well_def (Embed t)\"", "lemma wd_repeat:\n  \"well_def a \\<Longrightarrow> well_def (repeat n a)\"", "lemma wd_Bind:\n  \"\\<lbrakk> \\<And>s. well_def (a (f s)) \\<rbrakk> \\<Longrightarrow> well_def (Bind f a)\"", "lemma wd_loop:\n  \"well_def body \\<Longrightarrow> well_def (do G \\<longrightarrow> body od)\"", "lemmas wd_intros =\n  wd_Abort wd_Skip   wd_Apply\n  wd_Embed wd_Seq    wd_PC\n  wd_DC    wd_SetPC  wd_SetDC\n  wd_Bind  wd_repeat wd_loop"], "translations": [["", "lemma wp_under_wlpI[intro]:\n  \"\\<lbrakk> \\<And>P. unitary P \\<Longrightarrow> wp prog P \\<tturnstile> wlp prog P \\<rbrakk> \\<Longrightarrow> wp_under_wlp prog\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>P.\n        unitary P \\<Longrightarrow>\n        wp prog P \\<tturnstile> wlp prog P) \\<Longrightarrow>\n    wp_under_wlp prog", "unfolding wp_under_wlp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>P.\n        unitary P \\<Longrightarrow>\n        wp prog P \\<tturnstile> wlp prog P) \\<Longrightarrow>\n    \\<forall>P.\n       unitary P \\<longrightarrow> wp prog P \\<tturnstile> wlp prog P", "by(simp)"], ["", "lemma wp_under_wlpD[dest]:\n  \"\\<lbrakk> wp_under_wlp prog; unitary P \\<rbrakk> \\<Longrightarrow> wp prog P \\<tturnstile> wlp prog P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wp_under_wlp prog; unitary P\\<rbrakk>\n    \\<Longrightarrow> wp prog P \\<tturnstile> wlp prog P", "unfolding wp_under_wlp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>P.\n                unitary P \\<longrightarrow>\n                wp prog P \\<tturnstile> wlp prog P;\n     unitary P\\<rbrakk>\n    \\<Longrightarrow> wp prog P \\<tturnstile> wlp prog P", "by(simp)"], ["", "lemma wp_under_le_trans:\n  \"wp_under_wlp a \\<Longrightarrow> le_utrans (wp a) (wlp a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wp_under_wlp a \\<Longrightarrow> le_utrans (wp a) (wlp a)", "by(blast)"], ["", "lemma wp_under_wlp_Abort:\n  \"wp_under_wlp Abort\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wp_under_wlp Abort", "by(rule wp_under_wlpI, unfold wp_eval, auto)"], ["", "lemma wp_under_wlp_Skip:\n  \"wp_under_wlp Skip\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wp_under_wlp Skip", "by(rule wp_under_wlpI, unfold wp_eval, blast)"], ["", "lemma wp_under_wlp_Apply:\n  \"wp_under_wlp (Apply f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wp_under_wlp (Apply f)", "by(auto simp:wp_eval)"], ["", "lemma wp_under_wlp_Seq:\n  assumes h_wlp_a: \"nearly_healthy (wlp a)\"\n      and h_wp_b:  \"healthy (wp b)\"\n      and h_wlp_b: \"nearly_healthy (wlp b)\"\n      and wp_u_a:  \"wp_under_wlp a\"\n      and wp_u_b:  \"wp_under_wlp b\"\n  shows \"wp_under_wlp (a ;; b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wp_under_wlp (a ;; b)", "proof(rule wp_under_wlpI, unfold wp_eval o_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P.\n       unitary P \\<Longrightarrow>\n       wp a (wp b P) \\<tturnstile> wlp a (wlp b P)", "fix P::\"'a \\<Rightarrow> real\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P.\n       unitary P \\<Longrightarrow>\n       wp a (wp b P) \\<tturnstile> wlp a (wlp b P)", "assume uP: \"unitary P\""], ["proof (state)\nthis:\n  unitary P\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       unitary P \\<Longrightarrow>\n       wp a (wp b P) \\<tturnstile> wlp a (wlp b P)", "with h_wp_b"], ["proof (chain)\npicking this:\n  healthy (wp b)\n  unitary P", "have \"unitary (wp b P)\""], ["proof (prove)\nusing this:\n  healthy (wp b)\n  unitary P\n\ngoal (1 subgoal):\n 1. unitary (wp b P)", "by(blast)"], ["proof (state)\nthis:\n  unitary (wp b P)\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       unitary P \\<Longrightarrow>\n       wp a (wp b P) \\<tturnstile> wlp a (wlp b P)", "with wp_u_a"], ["proof (chain)\npicking this:\n  wp_under_wlp a\n  unitary (wp b P)", "have \"wp a (wp b P) \\<tturnstile> wlp a (wp b P)\""], ["proof (prove)\nusing this:\n  wp_under_wlp a\n  unitary (wp b P)\n\ngoal (1 subgoal):\n 1. wp a (wp b P) \\<tturnstile> wlp a (wp b P)", "by(auto)"], ["proof (state)\nthis:\n  wp a (wp b P) \\<tturnstile> wlp a (wp b P)\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       unitary P \\<Longrightarrow>\n       wp a (wp b P) \\<tturnstile> wlp a (wlp b P)", "also"], ["proof (state)\nthis:\n  wp a (wp b P) \\<tturnstile> wlp a (wp b P)\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       unitary P \\<Longrightarrow>\n       wp a (wp b P) \\<tturnstile> wlp a (wlp b P)", "{"], ["proof (state)\nthis:\n  wp a (wp b P) \\<tturnstile> wlp a (wp b P)\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       unitary P \\<Longrightarrow>\n       wp a (wp b P) \\<tturnstile> wlp a (wlp b P)", "from wp_u_b and uP"], ["proof (chain)\npicking this:\n  wp_under_wlp b\n  unitary P", "have \"wp b P \\<tturnstile> wlp b P\""], ["proof (prove)\nusing this:\n  wp_under_wlp b\n  unitary P\n\ngoal (1 subgoal):\n 1. wp b P \\<tturnstile> wlp b P", "by(blast)"], ["proof (state)\nthis:\n  wp b P \\<tturnstile> wlp b P\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       unitary P \\<Longrightarrow>\n       wp a (wp b P) \\<tturnstile> wlp a (wlp b P)", "with h_wlp_a and h_wlp_b and h_wp_b and uP"], ["proof (chain)\npicking this:\n  nearly_healthy (wlp a)\n  nearly_healthy (wlp b)\n  healthy (wp b)\n  unitary P\n  wp b P \\<tturnstile> wlp b P", "have \"wlp a (wp b P) \\<tturnstile> wlp a (wlp b P)\""], ["proof (prove)\nusing this:\n  nearly_healthy (wlp a)\n  nearly_healthy (wlp b)\n  healthy (wp b)\n  unitary P\n  wp b P \\<tturnstile> wlp b P\n\ngoal (1 subgoal):\n 1. wlp a (wp b P) \\<tturnstile> wlp a (wlp b P)", "by(blast intro:nearly_healthy_monoD[OF h_wlp_a])"], ["proof (state)\nthis:\n  wlp a (wp b P) \\<tturnstile> wlp a (wlp b P)\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       unitary P \\<Longrightarrow>\n       wp a (wp b P) \\<tturnstile> wlp a (wlp b P)", "}"], ["proof (state)\nthis:\n  wlp a (wp b P) \\<tturnstile> wlp a (wlp b P)\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       unitary P \\<Longrightarrow>\n       wp a (wp b P) \\<tturnstile> wlp a (wlp b P)", "finally"], ["proof (chain)\npicking this:\n  wp a (wp b P) \\<tturnstile> wlp a (wlp b P)", "show \"wp a (wp b P) \\<tturnstile> wlp a (wlp b P)\""], ["proof (prove)\nusing this:\n  wp a (wp b P) \\<tturnstile> wlp a (wlp b P)\n\ngoal (1 subgoal):\n 1. wp a (wp b P) \\<tturnstile> wlp a (wlp b P)", "."], ["proof (state)\nthis:\n  wp a (wp b P) \\<tturnstile> wlp a (wlp b P)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wp_under_wlp_PC:\n  assumes h_wp_a:  \"healthy (wp a)\"\n      and h_wlp_a: \"nearly_healthy (wlp a)\"\n      and h_wp_b:  \"healthy (wp b)\"\n      and h_wlp_b: \"nearly_healthy (wlp b)\"\n      and wp_u_a:  \"wp_under_wlp a\"\n      and wp_u_b:  \"wp_under_wlp b\"\n      and uP:      \"unitary P\"\n  shows \"wp_under_wlp (a \\<^bsub>P\\<^esub>\\<oplus> b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wp_under_wlp (a \\<^bsub>P\\<^esub>\\<oplus> b)", "proof(rule wp_under_wlpI, unfold wp_eval, rule le_funI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Pa x.\n       unitary Pa \\<Longrightarrow>\n       P x * wp a Pa x + (1 - P x) * wp b Pa x\n       \\<le> P x * wlp a Pa x + (1 - P x) * wlp b Pa x", "fix Q::\"'a \\<Rightarrow> real\" and s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Pa x.\n       unitary Pa \\<Longrightarrow>\n       P x * wp a Pa x + (1 - P x) * wp b Pa x\n       \\<le> P x * wlp a Pa x + (1 - P x) * wlp b Pa x", "assume uQ: \"unitary Q\""], ["proof (state)\nthis:\n  unitary Q\n\ngoal (1 subgoal):\n 1. \\<And>Pa x.\n       unitary Pa \\<Longrightarrow>\n       P x * wp a Pa x + (1 - P x) * wp b Pa x\n       \\<le> P x * wlp a Pa x + (1 - P x) * wlp b Pa x", "from uP"], ["proof (chain)\npicking this:\n  unitary P", "have \"P s \\<le> 1\""], ["proof (prove)\nusing this:\n  unitary P\n\ngoal (1 subgoal):\n 1. P s \\<le> 1", "by(blast)"], ["proof (state)\nthis:\n  P s \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<And>Pa x.\n       unitary Pa \\<Longrightarrow>\n       P x * wp a Pa x + (1 - P x) * wp b Pa x\n       \\<le> P x * wlp a Pa x + (1 - P x) * wlp b Pa x", "hence \"0 \\<le> 1 - P s\""], ["proof (prove)\nusing this:\n  P s \\<le> 1\n\ngoal (1 subgoal):\n 1. 0 \\<le> 1 - P s", "by(simp)"], ["proof (state)\nthis:\n  0 \\<le> 1 - P s\n\ngoal (1 subgoal):\n 1. \\<And>Pa x.\n       unitary Pa \\<Longrightarrow>\n       P x * wp a Pa x + (1 - P x) * wp b Pa x\n       \\<le> P x * wlp a Pa x + (1 - P x) * wlp b Pa x", "moreover"], ["proof (state)\nthis:\n  0 \\<le> 1 - P s\n\ngoal (1 subgoal):\n 1. \\<And>Pa x.\n       unitary Pa \\<Longrightarrow>\n       P x * wp a Pa x + (1 - P x) * wp b Pa x\n       \\<le> P x * wlp a Pa x + (1 - P x) * wlp b Pa x", "from uQ and wp_u_b"], ["proof (chain)\npicking this:\n  unitary Q\n  wp_under_wlp b", "have \"wp b Q s \\<le> wlp b Q s\""], ["proof (prove)\nusing this:\n  unitary Q\n  wp_under_wlp b\n\ngoal (1 subgoal):\n 1. wp b Q s \\<le> wlp b Q s", "by(blast)"], ["proof (state)\nthis:\n  wp b Q s \\<le> wlp b Q s\n\ngoal (1 subgoal):\n 1. \\<And>Pa x.\n       unitary Pa \\<Longrightarrow>\n       P x * wp a Pa x + (1 - P x) * wp b Pa x\n       \\<le> P x * wlp a Pa x + (1 - P x) * wlp b Pa x", "ultimately"], ["proof (chain)\npicking this:\n  0 \\<le> 1 - P s\n  wp b Q s \\<le> wlp b Q s", "have \"(1 - P s) * wp b Q s \\<le> (1 - P s) * wlp b Q s\""], ["proof (prove)\nusing this:\n  0 \\<le> 1 - P s\n  wp b Q s \\<le> wlp b Q s\n\ngoal (1 subgoal):\n 1. (1 - P s) * wp b Q s \\<le> (1 - P s) * wlp b Q s", "by(blast intro:mult_left_mono)"], ["proof (state)\nthis:\n  (1 - P s) * wp b Q s \\<le> (1 - P s) * wlp b Q s\n\ngoal (1 subgoal):\n 1. \\<And>Pa x.\n       unitary Pa \\<Longrightarrow>\n       P x * wp a Pa x + (1 - P x) * wp b Pa x\n       \\<le> P x * wlp a Pa x + (1 - P x) * wlp b Pa x", "moreover"], ["proof (state)\nthis:\n  (1 - P s) * wp b Q s \\<le> (1 - P s) * wlp b Q s\n\ngoal (1 subgoal):\n 1. \\<And>Pa x.\n       unitary Pa \\<Longrightarrow>\n       P x * wp a Pa x + (1 - P x) * wp b Pa x\n       \\<le> P x * wlp a Pa x + (1 - P x) * wlp b Pa x", "{"], ["proof (state)\nthis:\n  (1 - P s) * wp b Q s \\<le> (1 - P s) * wlp b Q s\n\ngoal (1 subgoal):\n 1. \\<And>Pa x.\n       unitary Pa \\<Longrightarrow>\n       P x * wp a Pa x + (1 - P x) * wp b Pa x\n       \\<le> P x * wlp a Pa x + (1 - P x) * wlp b Pa x", "from uQ and wp_u_a"], ["proof (chain)\npicking this:\n  unitary Q\n  wp_under_wlp a", "have \"wp a Q s \\<le> wlp a Q s\""], ["proof (prove)\nusing this:\n  unitary Q\n  wp_under_wlp a\n\ngoal (1 subgoal):\n 1. wp a Q s \\<le> wlp a Q s", "by(blast)"], ["proof (state)\nthis:\n  wp a Q s \\<le> wlp a Q s\n\ngoal (1 subgoal):\n 1. \\<And>Pa x.\n       unitary Pa \\<Longrightarrow>\n       P x * wp a Pa x + (1 - P x) * wp b Pa x\n       \\<le> P x * wlp a Pa x + (1 - P x) * wlp b Pa x", "with uP"], ["proof (chain)\npicking this:\n  unitary P\n  wp a Q s \\<le> wlp a Q s", "have \"P s * wp a Q s \\<le> P s * wlp a Q s\""], ["proof (prove)\nusing this:\n  unitary P\n  wp a Q s \\<le> wlp a Q s\n\ngoal (1 subgoal):\n 1. P s * wp a Q s \\<le> P s * wlp a Q s", "by(blast intro:mult_left_mono)"], ["proof (state)\nthis:\n  P s * wp a Q s \\<le> P s * wlp a Q s\n\ngoal (1 subgoal):\n 1. \\<And>Pa x.\n       unitary Pa \\<Longrightarrow>\n       P x * wp a Pa x + (1 - P x) * wp b Pa x\n       \\<le> P x * wlp a Pa x + (1 - P x) * wlp b Pa x", "}"], ["proof (state)\nthis:\n  P s * wp a Q s \\<le> P s * wlp a Q s\n\ngoal (1 subgoal):\n 1. \\<And>Pa x.\n       unitary Pa \\<Longrightarrow>\n       P x * wp a Pa x + (1 - P x) * wp b Pa x\n       \\<le> P x * wlp a Pa x + (1 - P x) * wlp b Pa x", "ultimately"], ["proof (chain)\npicking this:\n  (1 - P s) * wp b Q s \\<le> (1 - P s) * wlp b Q s\n  P s * wp a Q s \\<le> P s * wlp a Q s", "show \"P s * wp  a Q s + (1 - P s) * wp  b Q s \\<le>\n        P s * wlp a Q s + (1 - P s) * wlp b Q s\""], ["proof (prove)\nusing this:\n  (1 - P s) * wp b Q s \\<le> (1 - P s) * wlp b Q s\n  P s * wp a Q s \\<le> P s * wlp a Q s\n\ngoal (1 subgoal):\n 1. P s * wp a Q s + (1 - P s) * wp b Q s\n    \\<le> P s * wlp a Q s + (1 - P s) * wlp b Q s", "by(blast intro: add_mono)"], ["proof (state)\nthis:\n  P s * wp a Q s + (1 - P s) * wp b Q s\n  \\<le> P s * wlp a Q s + (1 - P s) * wlp b Q s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wp_under_wlp_DC:\n  assumes wp_u_a:  \"wp_under_wlp a\"\n      and wp_u_b:  \"wp_under_wlp b\"\n  shows \"wp_under_wlp (a \\<Sqinter> b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wp_under_wlp (a \\<Sqinter> b)", "proof(rule wp_under_wlpI, unfold wp_eval, rule le_funI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       min (wp a P x) (wp b P x) \\<le> min (wlp a P x) (wlp b P x)", "fix Q::\"'a \\<Rightarrow> real\" and s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       min (wp a P x) (wp b P x) \\<le> min (wlp a P x) (wlp b P x)", "assume uQ: \"unitary Q\""], ["proof (state)\nthis:\n  unitary Q\n\ngoal (1 subgoal):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       min (wp a P x) (wp b P x) \\<le> min (wlp a P x) (wlp b P x)", "from wp_u_a uQ"], ["proof (chain)\npicking this:\n  wp_under_wlp a\n  unitary Q", "have \"wp a Q s \\<le> wlp a Q s\""], ["proof (prove)\nusing this:\n  wp_under_wlp a\n  unitary Q\n\ngoal (1 subgoal):\n 1. wp a Q s \\<le> wlp a Q s", "by(blast)"], ["proof (state)\nthis:\n  wp a Q s \\<le> wlp a Q s\n\ngoal (1 subgoal):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       min (wp a P x) (wp b P x) \\<le> min (wlp a P x) (wlp b P x)", "moreover"], ["proof (state)\nthis:\n  wp a Q s \\<le> wlp a Q s\n\ngoal (1 subgoal):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       min (wp a P x) (wp b P x) \\<le> min (wlp a P x) (wlp b P x)", "from wp_u_b uQ"], ["proof (chain)\npicking this:\n  wp_under_wlp b\n  unitary Q", "have \"wp b Q s \\<le> wlp b Q s\""], ["proof (prove)\nusing this:\n  wp_under_wlp b\n  unitary Q\n\ngoal (1 subgoal):\n 1. wp b Q s \\<le> wlp b Q s", "by(blast)"], ["proof (state)\nthis:\n  wp b Q s \\<le> wlp b Q s\n\ngoal (1 subgoal):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       min (wp a P x) (wp b P x) \\<le> min (wlp a P x) (wlp b P x)", "ultimately"], ["proof (chain)\npicking this:\n  wp a Q s \\<le> wlp a Q s\n  wp b Q s \\<le> wlp b Q s", "show \"min (wp a Q s) (wp b Q s) \\<le> min (wlp a Q s) (wlp b Q s)\""], ["proof (prove)\nusing this:\n  wp a Q s \\<le> wlp a Q s\n  wp b Q s \\<le> wlp b Q s\n\ngoal (1 subgoal):\n 1. min (wp a Q s) (wp b Q s) \\<le> min (wlp a Q s) (wlp b Q s)", "by(auto)"], ["proof (state)\nthis:\n  min (wp a Q s) (wp b Q s) \\<le> min (wlp a Q s) (wlp b Q s)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wp_under_wlp_SetPC:\n  assumes wp_u_f:  \"\\<And>s a. a \\<in> supp (P s) \\<Longrightarrow> wp_under_wlp (f a)\"\n      and nP:      \"\\<And>s a. a \\<in> supp (P s) \\<Longrightarrow> 0 \\<le> P s a\"\n  shows \"wp_under_wlp (SetPC f P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wp_under_wlp (SetPC f P)", "proof(rule wp_under_wlpI, unfold wp_eval, rule le_funI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Pa x.\n       unitary Pa \\<Longrightarrow>\n       (\\<Sum>a\\<in>supp (P x). P x a * wp (f a) Pa x)\n       \\<le> (\\<Sum>a\\<in>supp (P x). P x a * wlp (f a) Pa x)", "fix Q::\"'a \\<Rightarrow> real\" and s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Pa x.\n       unitary Pa \\<Longrightarrow>\n       (\\<Sum>a\\<in>supp (P x). P x a * wp (f a) Pa x)\n       \\<le> (\\<Sum>a\\<in>supp (P x). P x a * wlp (f a) Pa x)", "assume uQ: \"unitary Q\""], ["proof (state)\nthis:\n  unitary Q\n\ngoal (1 subgoal):\n 1. \\<And>Pa x.\n       unitary Pa \\<Longrightarrow>\n       (\\<Sum>a\\<in>supp (P x). P x a * wp (f a) Pa x)\n       \\<le> (\\<Sum>a\\<in>supp (P x). P x a * wlp (f a) Pa x)", "from wp_u_f uQ nP"], ["proof (chain)\npicking this:\n  ?a \\<in> supp (P ?s) \\<Longrightarrow> wp_under_wlp (f ?a)\n  unitary Q\n  ?a \\<in> supp (P ?s) \\<Longrightarrow> 0 \\<le> P ?s ?a", "show \"(\\<Sum>a\\<in>supp (P s). P s a * wp (f a) Q s) \\<le> (\\<Sum>a\\<in>supp (P s). P s a * wlp (f a) Q s)\""], ["proof (prove)\nusing this:\n  ?a \\<in> supp (P ?s) \\<Longrightarrow> wp_under_wlp (f ?a)\n  unitary Q\n  ?a \\<in> supp (P ?s) \\<Longrightarrow> 0 \\<le> P ?s ?a\n\ngoal (1 subgoal):\n 1. (\\<Sum>a\\<in>supp (P s). P s a * wp (f a) Q s)\n    \\<le> (\\<Sum>a\\<in>supp (P s). P s a * wlp (f a) Q s)", "by(auto intro!:sum_mono mult_left_mono)"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>supp (P s). P s a * wp (f a) Q s)\n  \\<le> (\\<Sum>a\\<in>supp (P s). P s a * wlp (f a) Q s)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wp_under_wlp_SetDC:\n  assumes wp_u_f:  \"\\<And>s a. a \\<in> S s \\<Longrightarrow> wp_under_wlp (f a)\"\n      and hf:      \"\\<And>s a. a \\<in> S s \\<Longrightarrow> healthy (wp (f a))\"\n      and nS:      \"\\<And>s. S s \\<noteq> {}\"\n  shows \"wp_under_wlp (SetDC f S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wp_under_wlp (SetDC f S)", "proof(rule wp_under_wlpI, rule le_funI, unfold wp_eval)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       (INF a\\<in>S x. wp (f a) P x) \\<le> (INF a\\<in>S x. wlp (f a) P x)", "fix Q::\"'a \\<Rightarrow> real\" and s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       (INF a\\<in>S x. wp (f a) P x) \\<le> (INF a\\<in>S x. wlp (f a) P x)", "assume uQ: \"unitary Q\""], ["proof (state)\nthis:\n  unitary Q\n\ngoal (1 subgoal):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       (INF a\\<in>S x. wp (f a) P x) \\<le> (INF a\\<in>S x. wlp (f a) P x)", "show \"Inf ((\\<lambda>a. wp (f a) Q s) ` S s) \\<le> Inf ((\\<lambda>a. wlp (f a) Q s) ` S s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (INF a\\<in>S s. wp (f a) Q s) \\<le> (INF a\\<in>S s. wlp (f a) Q s)", "proof(rule cInf_mono)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>b.\n       b \\<in> (\\<lambda>a. wlp (f a) Q s) ` S s \\<Longrightarrow>\n       \\<exists>a\\<in>(\\<lambda>a. wp (f a) Q s) ` S s. a \\<le> b\n 2. \\<And>a.\n       a \\<in> (\\<lambda>a. wp (f a) Q s) ` S s \\<Longrightarrow> ?c \\<le> a\n 3. (\\<lambda>a. wlp (f a) Q s) ` S s \\<noteq> {}", "from nS"], ["proof (chain)\npicking this:\n  S ?s \\<noteq> {}", "show \"(\\<lambda>a. wlp (f a) Q s) ` S s \\<noteq> {}\""], ["proof (prove)\nusing this:\n  S ?s \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<lambda>a. wlp (f a) Q s) ` S s \\<noteq> {}", "by(blast)"], ["proof (state)\nthis:\n  (\\<lambda>a. wlp (f a) Q s) ` S s \\<noteq> {}\n\ngoal (2 subgoals):\n 1. \\<And>b.\n       b \\<in> (\\<lambda>a. wlp (f a) Q s) ` S s \\<Longrightarrow>\n       \\<exists>a\\<in>(\\<lambda>a. wp (f a) Q s) ` S s. a \\<le> b\n 2. \\<And>a.\n       a \\<in> (\\<lambda>a. wp (f a) Q s) ` S s \\<Longrightarrow> ?c \\<le> a", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>b.\n       b \\<in> (\\<lambda>a. wlp (f a) Q s) ` S s \\<Longrightarrow>\n       \\<exists>a\\<in>(\\<lambda>a. wp (f a) Q s) ` S s. a \\<le> b\n 2. \\<And>a.\n       a \\<in> (\\<lambda>a. wp (f a) Q s) ` S s \\<Longrightarrow> ?c \\<le> a", "assume xin: \"x \\<in> (\\<lambda>a. wlp (f a) Q s) ` S s\""], ["proof (state)\nthis:\n  x \\<in> (\\<lambda>a. wlp (f a) Q s) ` S s\n\ngoal (2 subgoals):\n 1. \\<And>b.\n       b \\<in> (\\<lambda>a. wlp (f a) Q s) ` S s \\<Longrightarrow>\n       \\<exists>a\\<in>(\\<lambda>a. wp (f a) Q s) ` S s. a \\<le> b\n 2. \\<And>a.\n       a \\<in> (\\<lambda>a. wp (f a) Q s) ` S s \\<Longrightarrow> ?c \\<le> a", "then"], ["proof (chain)\npicking this:\n  x \\<in> (\\<lambda>a. wlp (f a) Q s) ` S s", "obtain a where ain: \"a \\<in> S s\" and xrw: \"x = wlp (f a) Q s\""], ["proof (prove)\nusing this:\n  x \\<in> (\\<lambda>a. wlp (f a) Q s) ` S s\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>a \\<in> S s; x = wlp (f a) Q s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast)"], ["proof (state)\nthis:\n  a \\<in> S s\n  x = wlp (f a) Q s\n\ngoal (2 subgoals):\n 1. \\<And>b.\n       b \\<in> (\\<lambda>a. wlp (f a) Q s) ` S s \\<Longrightarrow>\n       \\<exists>a\\<in>(\\<lambda>a. wp (f a) Q s) ` S s. a \\<le> b\n 2. \\<And>a.\n       a \\<in> (\\<lambda>a. wp (f a) Q s) ` S s \\<Longrightarrow> ?c \\<le> a", "with wp_u_f uQ"], ["proof (chain)\npicking this:\n  ?a \\<in> S ?s \\<Longrightarrow> wp_under_wlp (f ?a)\n  unitary Q\n  a \\<in> S s\n  x = wlp (f a) Q s", "have \"wp (f a) Q s \\<le> wlp (f a) Q s\""], ["proof (prove)\nusing this:\n  ?a \\<in> S ?s \\<Longrightarrow> wp_under_wlp (f ?a)\n  unitary Q\n  a \\<in> S s\n  x = wlp (f a) Q s\n\ngoal (1 subgoal):\n 1. wp (f a) Q s \\<le> wlp (f a) Q s", "by(blast)"], ["proof (state)\nthis:\n  wp (f a) Q s \\<le> wlp (f a) Q s\n\ngoal (2 subgoals):\n 1. \\<And>b.\n       b \\<in> (\\<lambda>a. wlp (f a) Q s) ` S s \\<Longrightarrow>\n       \\<exists>a\\<in>(\\<lambda>a. wp (f a) Q s) ` S s. a \\<le> b\n 2. \\<And>a.\n       a \\<in> (\\<lambda>a. wp (f a) Q s) ` S s \\<Longrightarrow> ?c \\<le> a", "moreover"], ["proof (state)\nthis:\n  wp (f a) Q s \\<le> wlp (f a) Q s\n\ngoal (2 subgoals):\n 1. \\<And>b.\n       b \\<in> (\\<lambda>a. wlp (f a) Q s) ` S s \\<Longrightarrow>\n       \\<exists>a\\<in>(\\<lambda>a. wp (f a) Q s) ` S s. a \\<le> b\n 2. \\<And>a.\n       a \\<in> (\\<lambda>a. wp (f a) Q s) ` S s \\<Longrightarrow> ?c \\<le> a", "from ain"], ["proof (chain)\npicking this:\n  a \\<in> S s", "have \"wp (f a) Q s \\<in> (\\<lambda>a. wp (f a) Q s) ` S s\""], ["proof (prove)\nusing this:\n  a \\<in> S s\n\ngoal (1 subgoal):\n 1. wp (f a) Q s \\<in> (\\<lambda>a. wp (f a) Q s) ` S s", "by(blast)"], ["proof (state)\nthis:\n  wp (f a) Q s \\<in> (\\<lambda>a. wp (f a) Q s) ` S s\n\ngoal (2 subgoals):\n 1. \\<And>b.\n       b \\<in> (\\<lambda>a. wlp (f a) Q s) ` S s \\<Longrightarrow>\n       \\<exists>a\\<in>(\\<lambda>a. wp (f a) Q s) ` S s. a \\<le> b\n 2. \\<And>a.\n       a \\<in> (\\<lambda>a. wp (f a) Q s) ` S s \\<Longrightarrow> ?c \\<le> a", "ultimately"], ["proof (chain)\npicking this:\n  wp (f a) Q s \\<le> wlp (f a) Q s\n  wp (f a) Q s \\<in> (\\<lambda>a. wp (f a) Q s) ` S s", "show \"\\<exists>y\\<in> (\\<lambda>a. wp (f a) Q s) ` S s. y \\<le> x\""], ["proof (prove)\nusing this:\n  wp (f a) Q s \\<le> wlp (f a) Q s\n  wp (f a) Q s \\<in> (\\<lambda>a. wp (f a) Q s) ` S s\n\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>(\\<lambda>a. wp (f a) Q s) ` S s. y \\<le> x", "by(auto simp:xrw)"], ["proof (state)\nthis:\n  \\<exists>y\\<in>(\\<lambda>a. wp (f a) Q s) ` S s. y \\<le> x\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> (\\<lambda>a. wp (f a) Q s) ` S s \\<Longrightarrow> ?c \\<le> a", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> (\\<lambda>a. wp (f a) Q s) ` S s \\<Longrightarrow> ?c \\<le> a", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> (\\<lambda>a. wp (f a) Q s) ` S s \\<Longrightarrow> ?c \\<le> a", "assume yin: \"y \\<in> (\\<lambda>a. wp (f a) Q s) ` S s\""], ["proof (state)\nthis:\n  y \\<in> (\\<lambda>a. wp (f a) Q s) ` S s\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> (\\<lambda>a. wp (f a) Q s) ` S s \\<Longrightarrow> ?c \\<le> a", "then"], ["proof (chain)\npicking this:\n  y \\<in> (\\<lambda>a. wp (f a) Q s) ` S s", "obtain a where ain: \"a \\<in> S s\" and yrw: \"y = wp (f a) Q s\""], ["proof (prove)\nusing this:\n  y \\<in> (\\<lambda>a. wp (f a) Q s) ` S s\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>a \\<in> S s; y = wp (f a) Q s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(blast)"], ["proof (state)\nthis:\n  a \\<in> S s\n  y = wp (f a) Q s\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> (\\<lambda>a. wp (f a) Q s) ` S s \\<Longrightarrow> ?c \\<le> a", "with hf uQ"], ["proof (chain)\npicking this:\n  ?a \\<in> S ?s \\<Longrightarrow> healthy (wp (f ?a))\n  unitary Q\n  a \\<in> S s\n  y = wp (f a) Q s", "have \"unitary (wp (f a) Q)\""], ["proof (prove)\nusing this:\n  ?a \\<in> S ?s \\<Longrightarrow> healthy (wp (f ?a))\n  unitary Q\n  a \\<in> S s\n  y = wp (f a) Q s\n\ngoal (1 subgoal):\n 1. unitary (wp (f a) Q)", "by(auto)"], ["proof (state)\nthis:\n  unitary (wp (f a) Q)\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> (\\<lambda>a. wp (f a) Q s) ` S s \\<Longrightarrow> ?c \\<le> a", "with yrw"], ["proof (chain)\npicking this:\n  y = wp (f a) Q s\n  unitary (wp (f a) Q)", "show \"0 \\<le> y\""], ["proof (prove)\nusing this:\n  y = wp (f a) Q s\n  unitary (wp (f a) Q)\n\ngoal (1 subgoal):\n 1. 0 \\<le> y", "by(auto)"], ["proof (state)\nthis:\n  0 \\<le> y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (INF a\\<in>S s. wp (f a) Q s) \\<le> (INF a\\<in>S s. wlp (f a) Q s)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wp_under_wlp_Embed:\n  \"wp_under_wlp (Embed t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wp_under_wlp (Embed t)", "by(rule wp_under_wlpI, unfold wp_eval, blast)"], ["", "lemma wp_under_wlp_loop:\n  fixes body::\"'s prog\"\n  assumes hwp: \"healthy (wp body)\"\n      and hwlp: \"nearly_healthy (wlp body)\"\n      and wp_under: \"wp_under_wlp body\"\n  shows \"wp_under_wlp (do G \\<longrightarrow> body od)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wp_under_wlp\n     (\\<mu>x.\n         body ;;\n         x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)", "proof(rule wp_under_wlpI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P.\n       unitary P \\<Longrightarrow>\n       wp (\\<mu>x.\n              body ;;\n              x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n        P \\<tturnstile> wlp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                         P", "fix P::\"'s expect\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P.\n       unitary P \\<Longrightarrow>\n       wp (\\<mu>x.\n              body ;;\n              x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n        P \\<tturnstile> wlp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                         P", "assume uP: \"unitary P\""], ["proof (state)\nthis:\n  unitary P\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       unitary P \\<Longrightarrow>\n       wp (\\<mu>x.\n              body ;;\n              x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n        P \\<tturnstile> wlp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                         P", "hence sP: \"sound P\""], ["proof (prove)\nusing this:\n  unitary P\n\ngoal (1 subgoal):\n 1. sound P", "by(auto)"], ["proof (state)\nthis:\n  sound P\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       unitary P \\<Longrightarrow>\n       wp (\\<mu>x.\n              body ;;\n              x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n        P \\<tturnstile> wlp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                         P", "let \"?X Q s\" = \"\\<guillemotleft>G\\<guillemotright> s * wp body Q s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P.\n       unitary P \\<Longrightarrow>\n       wp (\\<mu>x.\n              body ;;\n              x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n        P \\<tturnstile> wlp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                         P", "let \"?Y Q s\" = \"\\<guillemotleft>G\\<guillemotright> s * wlp body Q s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P.\n       unitary P \\<Longrightarrow>\n       wp (\\<mu>x.\n              body ;;\n              x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n        P \\<tturnstile> wlp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                         P", "show \"wp (do G \\<longrightarrow> body od) P \\<tturnstile> wlp (do G \\<longrightarrow> body od) P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wp (\\<mu>x.\n           body ;;\n           x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     P \\<tturnstile> wlp (\\<mu>x.\n                             body ;;\n                             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                      P", "proof(simp add:hwp hwlp sP uP wp_Loop1 wlp_Loop1, rule gfp_exp_upperbound)"], ["proof (state)\ngoal (2 subgoals):\n 1. lfp_exp\n     (\\<lambda>Q s.\n         \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n         \\<guillemotleft> \\<N> G \\<guillemotright> s *\n         P s) \\<tturnstile> \\<lambda>s.\n                               \\<guillemotleft> G \\<guillemotright> s *\n                               wlp body\n                                (lfp_exp\n                                  (\\<lambda>Q s.\n\\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n\\<guillemotleft> \\<N> G \\<guillemotright> s * P s))\n                                s +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                               P s\n 2. unitary\n     (lfp_exp\n       (\\<lambda>Q s.\n           \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n           \\<guillemotleft> \\<N> G \\<guillemotright> s * P s))", "thm lfp_loop_fp"], ["proof (state)\ngoal (2 subgoals):\n 1. lfp_exp\n     (\\<lambda>Q s.\n         \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n         \\<guillemotleft> \\<N> G \\<guillemotright> s *\n         P s) \\<tturnstile> \\<lambda>s.\n                               \\<guillemotleft> G \\<guillemotright> s *\n                               wlp body\n                                (lfp_exp\n                                  (\\<lambda>Q s.\n\\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n\\<guillemotleft> \\<N> G \\<guillemotright> s * P s))\n                                s +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                               P s\n 2. unitary\n     (lfp_exp\n       (\\<lambda>Q s.\n           \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n           \\<guillemotleft> \\<N> G \\<guillemotright> s * P s))", "from hwp sP"], ["proof (chain)\npicking this:\n  healthy (wp body)\n  sound P", "have \"lfp_exp ?X = ?X (lfp_exp ?X)\""], ["proof (prove)\nusing this:\n  healthy (wp body)\n  sound P\n\ngoal (1 subgoal):\n 1. lfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b * P b) =\n    (\\<lambda>a.\n        \\<guillemotleft> G \\<guillemotright> a *\n        wp body\n         (lfp_exp\n           (\\<lambda>a b.\n               \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n               \\<guillemotleft> \\<N> G \\<guillemotright> b * P b))\n         a +\n        \\<guillemotleft> \\<N> G \\<guillemotright> a * P a)", "by(rule lfp_wp_loop_unfold)"], ["proof (state)\nthis:\n  lfp_exp\n   (\\<lambda>a b.\n       \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b * P b) =\n  (\\<lambda>a.\n      \\<guillemotleft> G \\<guillemotright> a *\n      wp body\n       (lfp_exp\n         (\\<lambda>a b.\n             \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n             \\<guillemotleft> \\<N> G \\<guillemotright> b * P b))\n       a +\n      \\<guillemotleft> \\<N> G \\<guillemotright> a * P a)\n\ngoal (2 subgoals):\n 1. lfp_exp\n     (\\<lambda>Q s.\n         \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n         \\<guillemotleft> \\<N> G \\<guillemotright> s *\n         P s) \\<tturnstile> \\<lambda>s.\n                               \\<guillemotleft> G \\<guillemotright> s *\n                               wlp body\n                                (lfp_exp\n                                  (\\<lambda>Q s.\n\\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n\\<guillemotleft> \\<N> G \\<guillemotright> s * P s))\n                                s +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                               P s\n 2. unitary\n     (lfp_exp\n       (\\<lambda>Q s.\n           \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n           \\<guillemotleft> \\<N> G \\<guillemotright> s * P s))", "hence \"lfp_exp ?X \\<tturnstile> ?X (lfp_exp ?X)\""], ["proof (prove)\nusing this:\n  lfp_exp\n   (\\<lambda>a b.\n       \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b * P b) =\n  (\\<lambda>a.\n      \\<guillemotleft> G \\<guillemotright> a *\n      wp body\n       (lfp_exp\n         (\\<lambda>a b.\n             \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n             \\<guillemotleft> \\<N> G \\<guillemotright> b * P b))\n       a +\n      \\<guillemotleft> \\<N> G \\<guillemotright> a * P a)\n\ngoal (1 subgoal):\n 1. lfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b *\n         P b) \\<tturnstile> \\<lambda>a.\n                               \\<guillemotleft> G \\<guillemotright> a *\n                               wp body\n                                (lfp_exp\n                                  (\\<lambda>a b.\n\\<guillemotleft> G \\<guillemotright> b * wp body a b +\n\\<guillemotleft> \\<N> G \\<guillemotright> b * P b))\n                                a +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> a *\n                               P a", "by(simp)"], ["proof (state)\nthis:\n  lfp_exp\n   (\\<lambda>a b.\n       \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b *\n       P b) \\<tturnstile> \\<lambda>a.\n                             \\<guillemotleft> G \\<guillemotright> a *\n                             wp body\n                              (lfp_exp\n                                (\\<lambda>a b.\n                                    \\<guillemotleft> G \\<guillemotright> b *\n                                    wp body a b +\n                                    \\<guillemotleft> \\<N>\n                G \\<guillemotright>\n                                     b *\n                                    P b))\n                              a +\n                             \\<guillemotleft> \\<N> G \\<guillemotright> a *\n                             P a\n\ngoal (2 subgoals):\n 1. lfp_exp\n     (\\<lambda>Q s.\n         \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n         \\<guillemotleft> \\<N> G \\<guillemotright> s *\n         P s) \\<tturnstile> \\<lambda>s.\n                               \\<guillemotleft> G \\<guillemotright> s *\n                               wlp body\n                                (lfp_exp\n                                  (\\<lambda>Q s.\n\\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n\\<guillemotleft> \\<N> G \\<guillemotright> s * P s))\n                                s +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                               P s\n 2. unitary\n     (lfp_exp\n       (\\<lambda>Q s.\n           \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n           \\<guillemotleft> \\<N> G \\<guillemotright> s * P s))", "also"], ["proof (state)\nthis:\n  lfp_exp\n   (\\<lambda>a b.\n       \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b *\n       P b) \\<tturnstile> \\<lambda>a.\n                             \\<guillemotleft> G \\<guillemotright> a *\n                             wp body\n                              (lfp_exp\n                                (\\<lambda>a b.\n                                    \\<guillemotleft> G \\<guillemotright> b *\n                                    wp body a b +\n                                    \\<guillemotleft> \\<N>\n                G \\<guillemotright>\n                                     b *\n                                    P b))\n                              a +\n                             \\<guillemotleft> \\<N> G \\<guillemotright> a *\n                             P a\n\ngoal (2 subgoals):\n 1. lfp_exp\n     (\\<lambda>Q s.\n         \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n         \\<guillemotleft> \\<N> G \\<guillemotright> s *\n         P s) \\<tturnstile> \\<lambda>s.\n                               \\<guillemotleft> G \\<guillemotright> s *\n                               wlp body\n                                (lfp_exp\n                                  (\\<lambda>Q s.\n\\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n\\<guillemotleft> \\<N> G \\<guillemotright> s * P s))\n                                s +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                               P s\n 2. unitary\n     (lfp_exp\n       (\\<lambda>Q s.\n           \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n           \\<guillemotleft> \\<N> G \\<guillemotright> s * P s))", "{"], ["proof (state)\nthis:\n  lfp_exp\n   (\\<lambda>a b.\n       \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b *\n       P b) \\<tturnstile> \\<lambda>a.\n                             \\<guillemotleft> G \\<guillemotright> a *\n                             wp body\n                              (lfp_exp\n                                (\\<lambda>a b.\n                                    \\<guillemotleft> G \\<guillemotright> b *\n                                    wp body a b +\n                                    \\<guillemotleft> \\<N>\n                G \\<guillemotright>\n                                     b *\n                                    P b))\n                              a +\n                             \\<guillemotleft> \\<N> G \\<guillemotright> a *\n                             P a\n\ngoal (2 subgoals):\n 1. lfp_exp\n     (\\<lambda>Q s.\n         \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n         \\<guillemotleft> \\<N> G \\<guillemotright> s *\n         P s) \\<tturnstile> \\<lambda>s.\n                               \\<guillemotleft> G \\<guillemotright> s *\n                               wlp body\n                                (lfp_exp\n                                  (\\<lambda>Q s.\n\\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n\\<guillemotleft> \\<N> G \\<guillemotright> s * P s))\n                                s +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                               P s\n 2. unitary\n     (lfp_exp\n       (\\<lambda>Q s.\n           \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n           \\<guillemotleft> \\<N> G \\<guillemotright> s * P s))", "from hwp uP"], ["proof (chain)\npicking this:\n  healthy (wp body)\n  unitary P", "have \"wp body (lfp_exp ?X) \\<tturnstile> wlp body (lfp_exp ?X)\""], ["proof (prove)\nusing this:\n  healthy (wp body)\n  unitary P\n\ngoal (1 subgoal):\n 1. wp body\n     (lfp_exp\n       (\\<lambda>a b.\n           \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n           \\<guillemotleft> \\<N> G \\<guillemotright> b *\n           P b)) \\<tturnstile> wlp body\n                                (lfp_exp\n                                  (\\<lambda>a b.\n\\<guillemotleft> G \\<guillemotright> b * wp body a b +\n\\<guillemotleft> \\<N> G \\<guillemotright> b * P b))", "by(auto intro:wp_under_wlpD[OF wp_under] lfp_loop_unitary)"], ["proof (state)\nthis:\n  wp body\n   (lfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b *\n         P b)) \\<tturnstile> wlp body\n                              (lfp_exp\n                                (\\<lambda>a b.\n                                    \\<guillemotleft> G \\<guillemotright> b *\n                                    wp body a b +\n                                    \\<guillemotleft> \\<N>\n                G \\<guillemotright>\n                                     b *\n                                    P b))\n\ngoal (2 subgoals):\n 1. lfp_exp\n     (\\<lambda>Q s.\n         \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n         \\<guillemotleft> \\<N> G \\<guillemotright> s *\n         P s) \\<tturnstile> \\<lambda>s.\n                               \\<guillemotleft> G \\<guillemotright> s *\n                               wlp body\n                                (lfp_exp\n                                  (\\<lambda>Q s.\n\\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n\\<guillemotleft> \\<N> G \\<guillemotright> s * P s))\n                                s +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                               P s\n 2. unitary\n     (lfp_exp\n       (\\<lambda>Q s.\n           \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n           \\<guillemotleft> \\<N> G \\<guillemotright> s * P s))", "hence \"?X (lfp_exp ?X) \\<tturnstile> ?Y (lfp_exp ?X)\""], ["proof (prove)\nusing this:\n  wp body\n   (lfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b *\n         P b)) \\<tturnstile> wlp body\n                              (lfp_exp\n                                (\\<lambda>a b.\n                                    \\<guillemotleft> G \\<guillemotright> b *\n                                    wp body a b +\n                                    \\<guillemotleft> \\<N>\n                G \\<guillemotright>\n                                     b *\n                                    P b))\n\ngoal (1 subgoal):\n 1. \\<lambda>a.\n       \\<guillemotleft> G \\<guillemotright> a *\n       wp body\n        (lfp_exp\n          (\\<lambda>a b.\n              \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n              \\<guillemotleft> \\<N> G \\<guillemotright> b * P b))\n        a +\n       \\<guillemotleft> \\<N> G \\<guillemotright> a *\n       P a \\<tturnstile> \\<lambda>a.\n                            \\<guillemotleft> G \\<guillemotright> a *\n                            wlp body\n                             (lfp_exp\n                               (\\<lambda>a b.\n                                   \\<guillemotleft> G \\<guillemotright> b *\n                                   wp body a b +\n                                   \\<guillemotleft> \\<N> G \\<guillemotright>\n                                    b *\n                                   P b))\n                             a +\n                            \\<guillemotleft> \\<N> G \\<guillemotright> a *\n                            P a", "by(auto intro:add_mono mult_left_mono)"], ["proof (state)\nthis:\n  \\<lambda>a.\n     \\<guillemotleft> G \\<guillemotright> a *\n     wp body\n      (lfp_exp\n        (\\<lambda>a b.\n            \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n            \\<guillemotleft> \\<N> G \\<guillemotright> b * P b))\n      a +\n     \\<guillemotleft> \\<N> G \\<guillemotright> a *\n     P a \\<tturnstile> \\<lambda>a.\n                          \\<guillemotleft> G \\<guillemotright> a *\n                          wlp body\n                           (lfp_exp\n                             (\\<lambda>a b.\n                                 \\<guillemotleft> G \\<guillemotright> b *\n                                 wp body a b +\n                                 \\<guillemotleft> \\<N> G \\<guillemotright>\n                                  b *\n                                 P b))\n                           a +\n                          \\<guillemotleft> \\<N> G \\<guillemotright> a * P a\n\ngoal (2 subgoals):\n 1. lfp_exp\n     (\\<lambda>Q s.\n         \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n         \\<guillemotleft> \\<N> G \\<guillemotright> s *\n         P s) \\<tturnstile> \\<lambda>s.\n                               \\<guillemotleft> G \\<guillemotright> s *\n                               wlp body\n                                (lfp_exp\n                                  (\\<lambda>Q s.\n\\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n\\<guillemotleft> \\<N> G \\<guillemotright> s * P s))\n                                s +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                               P s\n 2. unitary\n     (lfp_exp\n       (\\<lambda>Q s.\n           \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n           \\<guillemotleft> \\<N> G \\<guillemotright> s * P s))", "}"], ["proof (state)\nthis:\n  \\<lambda>a.\n     \\<guillemotleft> G \\<guillemotright> a *\n     wp body\n      (lfp_exp\n        (\\<lambda>a b.\n            \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n            \\<guillemotleft> \\<N> G \\<guillemotright> b * P b))\n      a +\n     \\<guillemotleft> \\<N> G \\<guillemotright> a *\n     P a \\<tturnstile> \\<lambda>a.\n                          \\<guillemotleft> G \\<guillemotright> a *\n                          wlp body\n                           (lfp_exp\n                             (\\<lambda>a b.\n                                 \\<guillemotleft> G \\<guillemotright> b *\n                                 wp body a b +\n                                 \\<guillemotleft> \\<N> G \\<guillemotright>\n                                  b *\n                                 P b))\n                           a +\n                          \\<guillemotleft> \\<N> G \\<guillemotright> a * P a\n\ngoal (2 subgoals):\n 1. lfp_exp\n     (\\<lambda>Q s.\n         \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n         \\<guillemotleft> \\<N> G \\<guillemotright> s *\n         P s) \\<tturnstile> \\<lambda>s.\n                               \\<guillemotleft> G \\<guillemotright> s *\n                               wlp body\n                                (lfp_exp\n                                  (\\<lambda>Q s.\n\\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n\\<guillemotleft> \\<N> G \\<guillemotright> s * P s))\n                                s +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                               P s\n 2. unitary\n     (lfp_exp\n       (\\<lambda>Q s.\n           \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n           \\<guillemotleft> \\<N> G \\<guillemotright> s * P s))", "finally"], ["proof (chain)\npicking this:\n  lfp_exp\n   (\\<lambda>a b.\n       \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b *\n       P b) \\<tturnstile> \\<lambda>a.\n                             \\<guillemotleft> G \\<guillemotright> a *\n                             wlp body\n                              (lfp_exp\n                                (\\<lambda>a b.\n                                    \\<guillemotleft> G \\<guillemotright> b *\n                                    wp body a b +\n                                    \\<guillemotleft> \\<N>\n                G \\<guillemotright>\n                                     b *\n                                    P b))\n                              a +\n                             \\<guillemotleft> \\<N> G \\<guillemotright> a *\n                             P a", "show \"lfp_exp ?X \\<tturnstile> ?Y (lfp_exp ?X)\""], ["proof (prove)\nusing this:\n  lfp_exp\n   (\\<lambda>a b.\n       \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b *\n       P b) \\<tturnstile> \\<lambda>a.\n                             \\<guillemotleft> G \\<guillemotright> a *\n                             wlp body\n                              (lfp_exp\n                                (\\<lambda>a b.\n                                    \\<guillemotleft> G \\<guillemotright> b *\n                                    wp body a b +\n                                    \\<guillemotleft> \\<N>\n                G \\<guillemotright>\n                                     b *\n                                    P b))\n                              a +\n                             \\<guillemotleft> \\<N> G \\<guillemotright> a *\n                             P a\n\ngoal (1 subgoal):\n 1. lfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b *\n         P b) \\<tturnstile> \\<lambda>a.\n                               \\<guillemotleft> G \\<guillemotright> a *\n                               wlp body\n                                (lfp_exp\n                                  (\\<lambda>a b.\n\\<guillemotleft> G \\<guillemotright> b * wp body a b +\n\\<guillemotleft> \\<N> G \\<guillemotright> b * P b))\n                                a +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> a *\n                               P a", "."], ["proof (state)\nthis:\n  lfp_exp\n   (\\<lambda>a b.\n       \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b *\n       P b) \\<tturnstile> \\<lambda>a.\n                             \\<guillemotleft> G \\<guillemotright> a *\n                             wlp body\n                              (lfp_exp\n                                (\\<lambda>a b.\n                                    \\<guillemotleft> G \\<guillemotright> b *\n                                    wp body a b +\n                                    \\<guillemotleft> \\<N>\n                G \\<guillemotright>\n                                     b *\n                                    P b))\n                              a +\n                             \\<guillemotleft> \\<N> G \\<guillemotright> a *\n                             P a\n\ngoal (1 subgoal):\n 1. unitary\n     (lfp_exp\n       (\\<lambda>Q s.\n           \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n           \\<guillemotleft> \\<N> G \\<guillemotright> s * P s))", "from hwp uP"], ["proof (chain)\npicking this:\n  healthy (wp body)\n  unitary P", "show \"unitary (lfp_exp ?X)\""], ["proof (prove)\nusing this:\n  healthy (wp body)\n  unitary P\n\ngoal (1 subgoal):\n 1. unitary\n     (lfp_exp\n       (\\<lambda>a b.\n           \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n           \\<guillemotleft> \\<N> G \\<guillemotright> b * P b))", "by(auto intro:lfp_loop_unitary)"], ["proof (state)\nthis:\n  unitary\n   (lfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b * P b))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  wp (\\<mu>x.\n         body ;;\n         x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n   P \\<tturnstile> wlp (\\<mu>x.\n                           body ;;\n                           x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                    P\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wp_under_wlp_repeat:\n  \"\\<lbrakk> healthy (wp a); nearly_healthy (wlp a); wp_under_wlp a \\<rbrakk> \\<Longrightarrow>\n   wp_under_wlp (repeat n a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>healthy (wp a); nearly_healthy (wlp a); wp_under_wlp a\\<rbrakk>\n    \\<Longrightarrow> wp_under_wlp (repeat n a)", "by(induct n, auto intro!:wp_under_wlp_Skip wp_under_wlp_Seq healthy_intros)"], ["", "lemma wp_under_wlp_Bind:\n  \"\\<lbrakk> \\<And>s. wp_under_wlp (a (f s)) \\<rbrakk> \\<Longrightarrow> wp_under_wlp (Bind f a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s. wp_under_wlp (a (f s))) \\<Longrightarrow>\n    wp_under_wlp (Bind f a)", "unfolding wp_under_wlp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<forall>P.\n           unitary P \\<longrightarrow>\n           wp (a (f s)) P \\<tturnstile> wlp (a (f s)) P) \\<Longrightarrow>\n    \\<forall>P.\n       unitary P \\<longrightarrow>\n       wp (Bind f a) P \\<tturnstile> wlp (Bind f a) P", "by(auto simp:wp_eval)"], ["", "lemmas wp_under_wlp_intros =\n  wp_under_wlp_Abort wp_under_wlp_Skip\n  wp_under_wlp_Apply wp_under_wlp_Seq\n  wp_under_wlp_PC    wp_under_wlp_DC\n  wp_under_wlp_SetPC wp_under_wlp_SetDC\n  wp_under_wlp_Embed wp_under_wlp_loop\n  wp_under_wlp_repeat wp_under_wlp_Bind"], ["", "subsection \\<open>Sub-Distributivity of Conjunction\\<close>"], ["", "definition\n  sub_distrib_pconj :: \"'s prog \\<Rightarrow> bool\"\nwhere\n  \"sub_distrib_pconj prog \\<equiv>\n   \\<forall>P Q. unitary P \\<longrightarrow> unitary Q \\<longrightarrow>\n         wlp prog P && wp prog Q \\<tturnstile> wp prog (P && Q)\""], ["", "lemma sub_distrib_pconjI[intro]:\n  \"\\<lbrakk>\\<And>P Q. \\<lbrakk> unitary P; unitary Q \\<rbrakk> \\<Longrightarrow>  wlp prog P && wp prog Q \\<tturnstile> wp prog (P && Q) \\<rbrakk> \\<Longrightarrow>\n    sub_distrib_pconj prog\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>P Q.\n        \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n        \\<Longrightarrow> wlp prog P &&\n                          wp prog\n                           Q \\<tturnstile> wp prog\n      (P && Q)) \\<Longrightarrow>\n    sub_distrib_pconj prog", "unfolding sub_distrib_pconj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>P Q.\n        \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n        \\<Longrightarrow> wlp prog P &&\n                          wp prog\n                           Q \\<tturnstile> wp prog\n      (P && Q)) \\<Longrightarrow>\n    \\<forall>P Q.\n       unitary P \\<longrightarrow>\n       unitary Q \\<longrightarrow>\n       wlp prog P && wp prog Q \\<tturnstile> wp prog (P && Q)", "by(simp)"], ["", "lemma sub_distrib_pconjD[dest]:\n  \"\\<And>P Q. \\<lbrakk> sub_distrib_pconj prog; unitary P; unitary Q \\<rbrakk> \\<Longrightarrow>\n   wlp prog P && wp prog Q \\<tturnstile> wp prog (P && Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>sub_distrib_pconj prog; unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> wlp prog P &&\n                         wp prog Q \\<tturnstile> wp prog (P && Q)", "unfolding sub_distrib_pconj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>\\<forall>P Q.\n                   unitary P \\<longrightarrow>\n                   unitary Q \\<longrightarrow>\n                   wlp prog P && wp prog Q \\<tturnstile> wp prog (P && Q);\n        unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> wlp prog P &&\n                         wp prog Q \\<tturnstile> wp prog (P && Q)", "by(simp)"], ["", "lemma sdp_Abort:\n  \"sub_distrib_pconj Abort\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sub_distrib_pconj Abort", "by(rule sub_distrib_pconjI, unfold wp_eval, auto intro:exp_conj_rzero)"], ["", "lemma sdp_Skip:\n  \"sub_distrib_pconj Skip\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sub_distrib_pconj Skip", "by(rule sub_distrib_pconjI, simp add:wp_eval)"], ["", "lemma sdp_Seq:\n  fixes a and b\n  assumes sdp_a:   \"sub_distrib_pconj a\"\n      and sdp_b:   \"sub_distrib_pconj b\"\n      and h_wp_a:  \"healthy (wp a)\"\n      and h_wp_b:  \"healthy (wp b)\"\n      and h_wlp_b: \"nearly_healthy (wlp b)\"\n  shows \"sub_distrib_pconj (a ;; b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sub_distrib_pconj (a ;; b)", "proof(rule sub_distrib_pconjI, unfold wp_eval o_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> wlp a (wlp b P) &&\n                         wp a (wp b Q) \\<tturnstile> wp a (wp b (P && Q))", "fix P::\"'a \\<Rightarrow> real\" and Q::\"'a \\<Rightarrow> real\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> wlp a (wlp b P) &&\n                         wp a (wp b Q) \\<tturnstile> wp a (wp b (P && Q))", "assume uP: \"unitary P\" and uQ: \"unitary Q\""], ["proof (state)\nthis:\n  unitary P\n  unitary Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> wlp a (wlp b P) &&\n                         wp a (wp b Q) \\<tturnstile> wp a (wp b (P && Q))", "with h_wp_b and h_wlp_b"], ["proof (chain)\npicking this:\n  healthy (wp b)\n  nearly_healthy (wlp b)\n  unitary P\n  unitary Q", "have \"wlp a (wlp b P) && wp a (wp b Q) \\<tturnstile> wp a (wlp b P && wp b Q)\""], ["proof (prove)\nusing this:\n  healthy (wp b)\n  nearly_healthy (wlp b)\n  unitary P\n  unitary Q\n\ngoal (1 subgoal):\n 1. wlp a (wlp b P) && wp a (wp b Q) \\<tturnstile> wp a (wlp b P && wp b Q)", "by(blast intro!:sub_distrib_pconjD[OF sdp_a])"], ["proof (state)\nthis:\n  wlp a (wlp b P) && wp a (wp b Q) \\<tturnstile> wp a (wlp b P && wp b Q)\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> wlp a (wlp b P) &&\n                         wp a (wp b Q) \\<tturnstile> wp a (wp b (P && Q))", "also"], ["proof (state)\nthis:\n  wlp a (wlp b P) && wp a (wp b Q) \\<tturnstile> wp a (wlp b P && wp b Q)\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> wlp a (wlp b P) &&\n                         wp a (wp b Q) \\<tturnstile> wp a (wp b (P && Q))", "{"], ["proof (state)\nthis:\n  wlp a (wlp b P) && wp a (wp b Q) \\<tturnstile> wp a (wlp b P && wp b Q)\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> wlp a (wlp b P) &&\n                         wp a (wp b Q) \\<tturnstile> wp a (wp b (P && Q))", "from sdp_b and uP and uQ"], ["proof (chain)\npicking this:\n  sub_distrib_pconj b\n  unitary P\n  unitary Q", "have \"wlp b P && wp b Q \\<tturnstile> wp b (P && Q)\""], ["proof (prove)\nusing this:\n  sub_distrib_pconj b\n  unitary P\n  unitary Q\n\ngoal (1 subgoal):\n 1. wlp b P && wp b Q \\<tturnstile> wp b (P && Q)", "by(blast)"], ["proof (state)\nthis:\n  wlp b P && wp b Q \\<tturnstile> wp b (P && Q)\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> wlp a (wlp b P) &&\n                         wp a (wp b Q) \\<tturnstile> wp a (wp b (P && Q))", "with h_wp_a h_wp_b h_wlp_b uP uQ"], ["proof (chain)\npicking this:\n  healthy (wp a)\n  healthy (wp b)\n  nearly_healthy (wlp b)\n  unitary P\n  unitary Q\n  wlp b P && wp b Q \\<tturnstile> wp b (P && Q)", "have \"wp a (wlp b P && wp b Q) \\<tturnstile> wp a (wp b (P && Q))\""], ["proof (prove)\nusing this:\n  healthy (wp a)\n  healthy (wp b)\n  nearly_healthy (wlp b)\n  unitary P\n  unitary Q\n  wlp b P && wp b Q \\<tturnstile> wp b (P && Q)\n\ngoal (1 subgoal):\n 1. wp a (wlp b P && wp b Q) \\<tturnstile> wp a (wp b (P && Q))", "by(blast intro!:mono_transD[OF healthy_monoD, OF h_wp_a] unitary_sound\n                      unitary_intros sound_intros)"], ["proof (state)\nthis:\n  wp a (wlp b P && wp b Q) \\<tturnstile> wp a (wp b (P && Q))\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> wlp a (wlp b P) &&\n                         wp a (wp b Q) \\<tturnstile> wp a (wp b (P && Q))", "}"], ["proof (state)\nthis:\n  wp a (wlp b P && wp b Q) \\<tturnstile> wp a (wp b (P && Q))\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> wlp a (wlp b P) &&\n                         wp a (wp b Q) \\<tturnstile> wp a (wp b (P && Q))", "finally"], ["proof (chain)\npicking this:\n  wlp a (wlp b P) && wp a (wp b Q) \\<tturnstile> wp a (wp b (P && Q))", "show \"wlp a (wlp b P) && wp a (wp b Q) \\<tturnstile> wp a (wp b (P && Q))\""], ["proof (prove)\nusing this:\n  wlp a (wlp b P) && wp a (wp b Q) \\<tturnstile> wp a (wp b (P && Q))\n\ngoal (1 subgoal):\n 1. wlp a (wlp b P) && wp a (wp b Q) \\<tturnstile> wp a (wp b (P && Q))", "."], ["proof (state)\nthis:\n  wlp a (wlp b P) && wp a (wp b Q) \\<tturnstile> wp a (wp b (P && Q))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sdp_Apply:\n  \"sub_distrib_pconj (Apply f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sub_distrib_pconj (Apply f)", "by(rule sub_distrib_pconjI, simp add:wp_eval)"], ["", "lemma sdp_DC:\n  fixes a::\"'s prog\" and b\n  assumes sdp_a:   \"sub_distrib_pconj a\"\n      and sdp_b:   \"sub_distrib_pconj b\"\n      and h_wp_a:  \"healthy (wp a)\"\n      and h_wp_b:  \"healthy (wp b)\"\n      and h_wlp_b: \"nearly_healthy (wlp b)\"\n  shows \"sub_distrib_pconj (a \\<Sqinter> b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sub_distrib_pconj (a \\<Sqinter> b)", "proof(rule sub_distrib_pconjI, unfold wp_eval, rule le_funI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s. min (wlp a P s) (wlp b P s)) &&\n                          (\\<lambda>s. min (wp a Q s) (wp b Q s)))\n                          x\n                         \\<le> min (wp a (P && Q) x) (wp b (P && Q) x)", "fix P::\"'s \\<Rightarrow> real\" and Q::\"'s \\<Rightarrow> real\" and s::'s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s. min (wlp a P s) (wlp b P s)) &&\n                          (\\<lambda>s. min (wp a Q s) (wp b Q s)))\n                          x\n                         \\<le> min (wp a (P && Q) x) (wp b (P && Q) x)", "assume uP: \"unitary P\" and uQ: \"unitary Q\""], ["proof (state)\nthis:\n  unitary P\n  unitary Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s. min (wlp a P s) (wlp b P s)) &&\n                          (\\<lambda>s. min (wp a Q s) (wp b Q s)))\n                          x\n                         \\<le> min (wp a (P && Q) x) (wp b (P && Q) x)", "have \"((\\<lambda>s. min (wlp a P s) (wlp b P s)) &&\n         (\\<lambda>s. min (wp a Q s) (wp b Q s))) s \\<le>\n        min (wlp a P s .& wp a Q s) (wlp b P s .& wp b Q s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>s. min (wlp a P s) (wlp b P s)) &&\n     (\\<lambda>s. min (wp a Q s) (wp b Q s)))\n     s\n    \\<le> min (wlp a P s .& wp a Q s) (wlp b P s .& wp b Q s)", "unfolding exp_conj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. min (wlp a P s) (wlp b P s) .& min (wp a Q s) (wp b Q s)\n    \\<le> min (wlp a P s .& wp a Q s) (wlp b P s .& wp b Q s)", "by(rule min_pconj)"], ["proof (state)\nthis:\n  ((\\<lambda>s. min (wlp a P s) (wlp b P s)) &&\n   (\\<lambda>s. min (wp a Q s) (wp b Q s)))\n   s\n  \\<le> min (wlp a P s .& wp a Q s) (wlp b P s .& wp b Q s)\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s. min (wlp a P s) (wlp b P s)) &&\n                          (\\<lambda>s. min (wp a Q s) (wp b Q s)))\n                          x\n                         \\<le> min (wp a (P && Q) x) (wp b (P && Q) x)", "also"], ["proof (state)\nthis:\n  ((\\<lambda>s. min (wlp a P s) (wlp b P s)) &&\n   (\\<lambda>s. min (wp a Q s) (wp b Q s)))\n   s\n  \\<le> min (wlp a P s .& wp a Q s) (wlp b P s .& wp b Q s)\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s. min (wlp a P s) (wlp b P s)) &&\n                          (\\<lambda>s. min (wp a Q s) (wp b Q s)))\n                          x\n                         \\<le> min (wp a (P && Q) x) (wp b (P && Q) x)", "{"], ["proof (state)\nthis:\n  ((\\<lambda>s. min (wlp a P s) (wlp b P s)) &&\n   (\\<lambda>s. min (wp a Q s) (wp b Q s)))\n   s\n  \\<le> min (wlp a P s .& wp a Q s) (wlp b P s .& wp b Q s)\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s. min (wlp a P s) (wlp b P s)) &&\n                          (\\<lambda>s. min (wp a Q s) (wp b Q s)))\n                          x\n                         \\<le> min (wp a (P && Q) x) (wp b (P && Q) x)", "have \"(\\<lambda>s. wlp a P s .& wp a Q s) = wlp a P && wp a Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. wlp a P s .& wp a Q s) = wlp a P && wp a Q", "by(simp add:exp_conj_def)"], ["proof (state)\nthis:\n  (\\<lambda>s. wlp a P s .& wp a Q s) = wlp a P && wp a Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s. min (wlp a P s) (wlp b P s)) &&\n                          (\\<lambda>s. min (wp a Q s) (wp b Q s)))\n                          x\n                         \\<le> min (wp a (P && Q) x) (wp b (P && Q) x)", "also"], ["proof (state)\nthis:\n  (\\<lambda>s. wlp a P s .& wp a Q s) = wlp a P && wp a Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s. min (wlp a P s) (wlp b P s)) &&\n                          (\\<lambda>s. min (wp a Q s) (wp b Q s)))\n                          x\n                         \\<le> min (wp a (P && Q) x) (wp b (P && Q) x)", "from sdp_a uP uQ"], ["proof (chain)\npicking this:\n  sub_distrib_pconj a\n  unitary P\n  unitary Q", "have \"... \\<tturnstile> wp a (P && Q)\""], ["proof (prove)\nusing this:\n  sub_distrib_pconj a\n  unitary P\n  unitary Q\n\ngoal (1 subgoal):\n 1. wlp a P && wp a Q \\<tturnstile> wp a (P && Q)", "by(blast dest:sub_distrib_pconjD)"], ["proof (state)\nthis:\n  wlp a P && wp a Q \\<tturnstile> wp a (P && Q)\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s. min (wlp a P s) (wlp b P s)) &&\n                          (\\<lambda>s. min (wp a Q s) (wp b Q s)))\n                          x\n                         \\<le> min (wp a (P && Q) x) (wp b (P && Q) x)", "finally"], ["proof (chain)\npicking this:\n  \\<lambda>s. wlp a P s .& wp a Q s \\<tturnstile> wp a (P && Q)", "have \"wlp a P s .& wp a Q s \\<le> wp a (P && Q) s\""], ["proof (prove)\nusing this:\n  \\<lambda>s. wlp a P s .& wp a Q s \\<tturnstile> wp a (P && Q)\n\ngoal (1 subgoal):\n 1. wlp a P s .& wp a Q s \\<le> wp a (P && Q) s", "by(rule le_funD)"], ["proof (state)\nthis:\n  wlp a P s .& wp a Q s \\<le> wp a (P && Q) s\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s. min (wlp a P s) (wlp b P s)) &&\n                          (\\<lambda>s. min (wp a Q s) (wp b Q s)))\n                          x\n                         \\<le> min (wp a (P && Q) x) (wp b (P && Q) x)", "moreover"], ["proof (state)\nthis:\n  wlp a P s .& wp a Q s \\<le> wp a (P && Q) s\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s. min (wlp a P s) (wlp b P s)) &&\n                          (\\<lambda>s. min (wp a Q s) (wp b Q s)))\n                          x\n                         \\<le> min (wp a (P && Q) x) (wp b (P && Q) x)", "{"], ["proof (state)\nthis:\n  wlp a P s .& wp a Q s \\<le> wp a (P && Q) s\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s. min (wlp a P s) (wlp b P s)) &&\n                          (\\<lambda>s. min (wp a Q s) (wp b Q s)))\n                          x\n                         \\<le> min (wp a (P && Q) x) (wp b (P && Q) x)", "have \"(\\<lambda>s. wlp b P s .& wp b Q s) = wlp b P && wp b Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. wlp b P s .& wp b Q s) = wlp b P && wp b Q", "by(simp add:exp_conj_def)"], ["proof (state)\nthis:\n  (\\<lambda>s. wlp b P s .& wp b Q s) = wlp b P && wp b Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s. min (wlp a P s) (wlp b P s)) &&\n                          (\\<lambda>s. min (wp a Q s) (wp b Q s)))\n                          x\n                         \\<le> min (wp a (P && Q) x) (wp b (P && Q) x)", "also"], ["proof (state)\nthis:\n  (\\<lambda>s. wlp b P s .& wp b Q s) = wlp b P && wp b Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s. min (wlp a P s) (wlp b P s)) &&\n                          (\\<lambda>s. min (wp a Q s) (wp b Q s)))\n                          x\n                         \\<le> min (wp a (P && Q) x) (wp b (P && Q) x)", "from sdp_b uP uQ"], ["proof (chain)\npicking this:\n  sub_distrib_pconj b\n  unitary P\n  unitary Q", "have \"... \\<tturnstile> wp b (P && Q)\""], ["proof (prove)\nusing this:\n  sub_distrib_pconj b\n  unitary P\n  unitary Q\n\ngoal (1 subgoal):\n 1. wlp b P && wp b Q \\<tturnstile> wp b (P && Q)", "by(blast)"], ["proof (state)\nthis:\n  wlp b P && wp b Q \\<tturnstile> wp b (P && Q)\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s. min (wlp a P s) (wlp b P s)) &&\n                          (\\<lambda>s. min (wp a Q s) (wp b Q s)))\n                          x\n                         \\<le> min (wp a (P && Q) x) (wp b (P && Q) x)", "finally"], ["proof (chain)\npicking this:\n  \\<lambda>s. wlp b P s .& wp b Q s \\<tturnstile> wp b (P && Q)", "have \"wlp b P s .& wp b Q s \\<le> wp b (P && Q) s\""], ["proof (prove)\nusing this:\n  \\<lambda>s. wlp b P s .& wp b Q s \\<tturnstile> wp b (P && Q)\n\ngoal (1 subgoal):\n 1. wlp b P s .& wp b Q s \\<le> wp b (P && Q) s", "by(rule le_funD)"], ["proof (state)\nthis:\n  wlp b P s .& wp b Q s \\<le> wp b (P && Q) s\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s. min (wlp a P s) (wlp b P s)) &&\n                          (\\<lambda>s. min (wp a Q s) (wp b Q s)))\n                          x\n                         \\<le> min (wp a (P && Q) x) (wp b (P && Q) x)", "}"], ["proof (state)\nthis:\n  wlp b P s .& wp b Q s \\<le> wp b (P && Q) s\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s. min (wlp a P s) (wlp b P s)) &&\n                          (\\<lambda>s. min (wp a Q s) (wp b Q s)))\n                          x\n                         \\<le> min (wp a (P && Q) x) (wp b (P && Q) x)", "ultimately"], ["proof (chain)\npicking this:\n  wlp a P s .& wp a Q s \\<le> wp a (P && Q) s\n  wlp b P s .& wp b Q s \\<le> wp b (P && Q) s", "have \"min (wlp a P s .& wp a Q s) (wlp b P s .& wp b Q s) \\<le>\n          min (wp a (P && Q) s) (wp b (P && Q) s)\""], ["proof (prove)\nusing this:\n  wlp a P s .& wp a Q s \\<le> wp a (P && Q) s\n  wlp b P s .& wp b Q s \\<le> wp b (P && Q) s\n\ngoal (1 subgoal):\n 1. min (wlp a P s .& wp a Q s) (wlp b P s .& wp b Q s)\n    \\<le> min (wp a (P && Q) s) (wp b (P && Q) s)", "by(auto)"], ["proof (state)\nthis:\n  min (wlp a P s .& wp a Q s) (wlp b P s .& wp b Q s)\n  \\<le> min (wp a (P && Q) s) (wp b (P && Q) s)\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s. min (wlp a P s) (wlp b P s)) &&\n                          (\\<lambda>s. min (wp a Q s) (wp b Q s)))\n                          x\n                         \\<le> min (wp a (P && Q) x) (wp b (P && Q) x)", "}"], ["proof (state)\nthis:\n  min (wlp a P s .& wp a Q s) (wlp b P s .& wp b Q s)\n  \\<le> min (wp a (P && Q) s) (wp b (P && Q) s)\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s. min (wlp a P s) (wlp b P s)) &&\n                          (\\<lambda>s. min (wp a Q s) (wp b Q s)))\n                          x\n                         \\<le> min (wp a (P && Q) x) (wp b (P && Q) x)", "finally"], ["proof (chain)\npicking this:\n  ((\\<lambda>s. min (wlp a P s) (wlp b P s)) &&\n   (\\<lambda>s. min (wp a Q s) (wp b Q s)))\n   s\n  \\<le> min (wp a (P && Q) s) (wp b (P && Q) s)", "show \"((\\<lambda>s. min (wlp a P s) (wlp b P s)) &&\n         (\\<lambda>s. min (wp a Q s) (wp b Q s))) s \\<le>\n        min (wp a (P && Q) s) (wp b (P && Q) s)\""], ["proof (prove)\nusing this:\n  ((\\<lambda>s. min (wlp a P s) (wlp b P s)) &&\n   (\\<lambda>s. min (wp a Q s) (wp b Q s)))\n   s\n  \\<le> min (wp a (P && Q) s) (wp b (P && Q) s)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>s. min (wlp a P s) (wlp b P s)) &&\n     (\\<lambda>s. min (wp a Q s) (wp b Q s)))\n     s\n    \\<le> min (wp a (P && Q) s) (wp b (P && Q) s)", "."], ["proof (state)\nthis:\n  ((\\<lambda>s. min (wlp a P s) (wlp b P s)) &&\n   (\\<lambda>s. min (wp a Q s) (wp b Q s)))\n   s\n  \\<le> min (wp a (P && Q) s) (wp b (P && Q) s)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sdp_PC:\n  fixes a::\"'s prog\" and b\n  assumes sdp_a:   \"sub_distrib_pconj a\"\n      and sdp_b:   \"sub_distrib_pconj b\"\n      and h_wp_a:  \"healthy (wp a)\"\n      and h_wp_b:  \"healthy (wp b)\"\n      and h_wlp_b: \"nearly_healthy (wlp b)\"\n      and uP:      \"unitary P\"\n  shows \"sub_distrib_pconj (a \\<^bsub>P\\<^esub>\\<oplus> b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sub_distrib_pconj (a \\<^bsub>P\\<^esub>\\<oplus> b)", "proof(rule sub_distrib_pconjI, unfold wp_eval, rule le_funI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s.\n                              P s * wlp a Pa s + (1 - P s) * wlp b Pa s) &&\n                          (\\<lambda>s.\n                              P s * wp a Q s + (1 - P s) * wp b Q s))\n                          x\n                         \\<le> P x * wp a (Pa && Q) x +\n                               (1 - P x) * wp b (Pa && Q) x", "fix Q::\"'s \\<Rightarrow> real\" and R::\"'s \\<Rightarrow> real\" and s::'s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s.\n                              P s * wlp a Pa s + (1 - P s) * wlp b Pa s) &&\n                          (\\<lambda>s.\n                              P s * wp a Q s + (1 - P s) * wp b Q s))\n                          x\n                         \\<le> P x * wp a (Pa && Q) x +\n                               (1 - P x) * wp b (Pa && Q) x", "assume uQ: \"unitary Q\" and uR: \"unitary R\""], ["proof (state)\nthis:\n  unitary Q\n  unitary R\n\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s.\n                              P s * wlp a Pa s + (1 - P s) * wlp b Pa s) &&\n                          (\\<lambda>s.\n                              P s * wp a Q s + (1 - P s) * wp b Q s))\n                          x\n                         \\<le> P x * wp a (Pa && Q) x +\n                               (1 - P x) * wp b (Pa && Q) x", "have nnA: \"0 \\<le> P s\" and nnB: \"P s \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> P s &&& P s \\<le> 1", "using uP"], ["proof (prove)\nusing this:\n  unitary P\n\ngoal (1 subgoal):\n 1. 0 \\<le> P s &&& P s \\<le> 1", "by auto"], ["proof (state)\nthis:\n  0 \\<le> P s\n  P s \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s.\n                              P s * wlp a Pa s + (1 - P s) * wlp b Pa s) &&\n                          (\\<lambda>s.\n                              P s * wp a Q s + (1 - P s) * wp b Q s))\n                          x\n                         \\<le> P x * wp a (Pa && Q) x +\n                               (1 - P x) * wp b (Pa && Q) x", "note nn = nnA nnB"], ["proof (state)\nthis:\n  0 \\<le> P s\n  P s \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s.\n                              P s * wlp a Pa s + (1 - P s) * wlp b Pa s) &&\n                          (\\<lambda>s.\n                              P s * wp a Q s + (1 - P s) * wp b Q s))\n                          x\n                         \\<le> P x * wp a (Pa && Q) x +\n                               (1 - P x) * wp b (Pa && Q) x", "have \"((\\<lambda>s. P s * wlp a Q s + (1 - P s) * wlp b Q s) &&\n         (\\<lambda>s. P s *  wp a R s + (1 - P s) *  wp b R s)) s =\n        ((P s * wlp a Q s + (1 - P s) * wlp b Q s) +\n         (P s *  wp a R s + (1 - P s) *  wp b R s)) \\<ominus> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>s. P s * wlp a Q s + (1 - P s) * wlp b Q s) &&\n     (\\<lambda>s. P s * wp a R s + (1 - P s) * wp b R s))\n     s =\n    P s * wlp a Q s + (1 - P s) * wlp b Q s +\n    (P s * wp a R s + (1 - P s) * wp b R s) \\<ominus>\n    1", "by(simp add:exp_conj_def pconj_def)"], ["proof (state)\nthis:\n  ((\\<lambda>s. P s * wlp a Q s + (1 - P s) * wlp b Q s) &&\n   (\\<lambda>s. P s * wp a R s + (1 - P s) * wp b R s))\n   s =\n  P s * wlp a Q s + (1 - P s) * wlp b Q s +\n  (P s * wp a R s + (1 - P s) * wp b R s) \\<ominus>\n  1\n\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s.\n                              P s * wlp a Pa s + (1 - P s) * wlp b Pa s) &&\n                          (\\<lambda>s.\n                              P s * wp a Q s + (1 - P s) * wp b Q s))\n                          x\n                         \\<le> P x * wp a (Pa && Q) x +\n                               (1 - P x) * wp b (Pa && Q) x", "also"], ["proof (state)\nthis:\n  ((\\<lambda>s. P s * wlp a Q s + (1 - P s) * wlp b Q s) &&\n   (\\<lambda>s. P s * wp a R s + (1 - P s) * wp b R s))\n   s =\n  P s * wlp a Q s + (1 - P s) * wlp b Q s +\n  (P s * wp a R s + (1 - P s) * wp b R s) \\<ominus>\n  1\n\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s.\n                              P s * wlp a Pa s + (1 - P s) * wlp b Pa s) &&\n                          (\\<lambda>s.\n                              P s * wp a Q s + (1 - P s) * wp b Q s))\n                          x\n                         \\<le> P x * wp a (Pa && Q) x +\n                               (1 - P x) * wp b (Pa && Q) x", "have \"... = P s *       (wlp a Q s + wp a R s) +\n                   (1 - P s) * (wlp b Q s + wp b R s) \\<ominus> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P s * wlp a Q s + (1 - P s) * wlp b Q s +\n    (P s * wp a R s + (1 - P s) * wp b R s) \\<ominus>\n    1 =\n    P s * (wlp a Q s + wp a R s) +\n    (1 - P s) * (wlp b Q s + wp b R s) \\<ominus>\n    1", "by(simp add:field_simps)"], ["proof (state)\nthis:\n  P s * wlp a Q s + (1 - P s) * wlp b Q s +\n  (P s * wp a R s + (1 - P s) * wp b R s) \\<ominus>\n  1 =\n  P s * (wlp a Q s + wp a R s) +\n  (1 - P s) * (wlp b Q s + wp b R s) \\<ominus>\n  1\n\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s.\n                              P s * wlp a Pa s + (1 - P s) * wlp b Pa s) &&\n                          (\\<lambda>s.\n                              P s * wp a Q s + (1 - P s) * wp b Q s))\n                          x\n                         \\<le> P x * wp a (Pa && Q) x +\n                               (1 - P x) * wp b (Pa && Q) x", "also"], ["proof (state)\nthis:\n  P s * wlp a Q s + (1 - P s) * wlp b Q s +\n  (P s * wp a R s + (1 - P s) * wp b R s) \\<ominus>\n  1 =\n  P s * (wlp a Q s + wp a R s) +\n  (1 - P s) * (wlp b Q s + wp b R s) \\<ominus>\n  1\n\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s.\n                              P s * wlp a Pa s + (1 - P s) * wlp b Pa s) &&\n                          (\\<lambda>s.\n                              P s * wp a Q s + (1 - P s) * wp b Q s))\n                          x\n                         \\<le> P x * wp a (Pa && Q) x +\n                               (1 - P x) * wp b (Pa && Q) x", "have \"... = P s *       (wlp a Q s + wp a R s) +\n                   (1 - P s) * (wlp b Q s + wp b R s) \\<ominus>\n                   (P s + (1 - P s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P s * (wlp a Q s + wp a R s) +\n    (1 - P s) * (wlp b Q s + wp b R s) \\<ominus>\n    1 =\n    P s * (wlp a Q s + wp a R s) +\n    (1 - P s) * (wlp b Q s + wp b R s) \\<ominus>\n    P s + (1 - P s)", "by(simp)"], ["proof (state)\nthis:\n  P s * (wlp a Q s + wp a R s) +\n  (1 - P s) * (wlp b Q s + wp b R s) \\<ominus>\n  1 =\n  P s * (wlp a Q s + wp a R s) +\n  (1 - P s) * (wlp b Q s + wp b R s) \\<ominus>\n  P s + (1 - P s)\n\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s.\n                              P s * wlp a Pa s + (1 - P s) * wlp b Pa s) &&\n                          (\\<lambda>s.\n                              P s * wp a Q s + (1 - P s) * wp b Q s))\n                          x\n                         \\<le> P x * wp a (Pa && Q) x +\n                               (1 - P x) * wp b (Pa && Q) x", "also"], ["proof (state)\nthis:\n  P s * (wlp a Q s + wp a R s) +\n  (1 - P s) * (wlp b Q s + wp b R s) \\<ominus>\n  1 =\n  P s * (wlp a Q s + wp a R s) +\n  (1 - P s) * (wlp b Q s + wp b R s) \\<ominus>\n  P s + (1 - P s)\n\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s.\n                              P s * wlp a Pa s + (1 - P s) * wlp b Pa s) &&\n                          (\\<lambda>s.\n                              P s * wp a Q s + (1 - P s) * wp b Q s))\n                          x\n                         \\<le> P x * wp a (Pa && Q) x +\n                               (1 - P x) * wp b (Pa && Q) x", "have \"... \\<le> (P s *       (wlp a Q s + wp a R s) \\<ominus> P s) +\n                   ((1 - P s) * (wlp b Q s + wp b R s) \\<ominus> (1 - P s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P s * (wlp a Q s + wp a R s) +\n    (1 - P s) * (wlp b Q s + wp b R s) \\<ominus>\n    P s + (1 - P s)\n    \\<le> (P s * (wlp a Q s + wp a R s) \\<ominus> P s) +\n          ((1 - P s) * (wlp b Q s + wp b R s) \\<ominus> 1 - P s)", "by(rule tminus_add_mono)"], ["proof (state)\nthis:\n  P s * (wlp a Q s + wp a R s) +\n  (1 - P s) * (wlp b Q s + wp b R s) \\<ominus>\n  P s + (1 - P s)\n  \\<le> (P s * (wlp a Q s + wp a R s) \\<ominus> P s) +\n        ((1 - P s) * (wlp b Q s + wp b R s) \\<ominus> 1 - P s)\n\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s.\n                              P s * wlp a Pa s + (1 - P s) * wlp b Pa s) &&\n                          (\\<lambda>s.\n                              P s * wp a Q s + (1 - P s) * wp b Q s))\n                          x\n                         \\<le> P x * wp a (Pa && Q) x +\n                               (1 - P x) * wp b (Pa && Q) x", "also"], ["proof (state)\nthis:\n  P s * (wlp a Q s + wp a R s) +\n  (1 - P s) * (wlp b Q s + wp b R s) \\<ominus>\n  P s + (1 - P s)\n  \\<le> (P s * (wlp a Q s + wp a R s) \\<ominus> P s) +\n        ((1 - P s) * (wlp b Q s + wp b R s) \\<ominus> 1 - P s)\n\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s.\n                              P s * wlp a Pa s + (1 - P s) * wlp b Pa s) &&\n                          (\\<lambda>s.\n                              P s * wp a Q s + (1 - P s) * wp b Q s))\n                          x\n                         \\<le> P x * wp a (Pa && Q) x +\n                               (1 - P x) * wp b (Pa && Q) x", "have \"... = (P s       * (wlp a Q s + wp a R s \\<ominus> 1)) +\n                   ((1 - P s) * (wlp b Q s + wp b R s \\<ominus> 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P s * (wlp a Q s + wp a R s) \\<ominus> P s) +\n    ((1 - P s) * (wlp b Q s + wp b R s) \\<ominus> 1 - P s) =\n    P s * (wlp a Q s + wp a R s \\<ominus> 1) +\n    (1 - P s) * (wlp b Q s + wp b R s \\<ominus> 1)", "by(simp add:nn tminus_left_distrib)"], ["proof (state)\nthis:\n  (P s * (wlp a Q s + wp a R s) \\<ominus> P s) +\n  ((1 - P s) * (wlp b Q s + wp b R s) \\<ominus> 1 - P s) =\n  P s * (wlp a Q s + wp a R s \\<ominus> 1) +\n  (1 - P s) * (wlp b Q s + wp b R s \\<ominus> 1)\n\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s.\n                              P s * wlp a Pa s + (1 - P s) * wlp b Pa s) &&\n                          (\\<lambda>s.\n                              P s * wp a Q s + (1 - P s) * wp b Q s))\n                          x\n                         \\<le> P x * wp a (Pa && Q) x +\n                               (1 - P x) * wp b (Pa && Q) x", "also"], ["proof (state)\nthis:\n  (P s * (wlp a Q s + wp a R s) \\<ominus> P s) +\n  ((1 - P s) * (wlp b Q s + wp b R s) \\<ominus> 1 - P s) =\n  P s * (wlp a Q s + wp a R s \\<ominus> 1) +\n  (1 - P s) * (wlp b Q s + wp b R s \\<ominus> 1)\n\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s.\n                              P s * wlp a Pa s + (1 - P s) * wlp b Pa s) &&\n                          (\\<lambda>s.\n                              P s * wp a Q s + (1 - P s) * wp b Q s))\n                          x\n                         \\<le> P x * wp a (Pa && Q) x +\n                               (1 - P x) * wp b (Pa && Q) x", "have \"... = P s *       ((wlp a Q && wp a R) s) +\n                   (1 - P s) * ((wlp b Q && wp b R) s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P s * (wlp a Q s + wp a R s \\<ominus> 1) +\n    (1 - P s) * (wlp b Q s + wp b R s \\<ominus> 1) =\n    P s * (wlp a Q && wp a R) s + (1 - P s) * (wlp b Q && wp b R) s", "by(simp add:exp_conj_def pconj_def)"], ["proof (state)\nthis:\n  P s * (wlp a Q s + wp a R s \\<ominus> 1) +\n  (1 - P s) * (wlp b Q s + wp b R s \\<ominus> 1) =\n  P s * (wlp a Q && wp a R) s + (1 - P s) * (wlp b Q && wp b R) s\n\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s.\n                              P s * wlp a Pa s + (1 - P s) * wlp b Pa s) &&\n                          (\\<lambda>s.\n                              P s * wp a Q s + (1 - P s) * wp b Q s))\n                          x\n                         \\<le> P x * wp a (Pa && Q) x +\n                               (1 - P x) * wp b (Pa && Q) x", "also"], ["proof (state)\nthis:\n  P s * (wlp a Q s + wp a R s \\<ominus> 1) +\n  (1 - P s) * (wlp b Q s + wp b R s \\<ominus> 1) =\n  P s * (wlp a Q && wp a R) s + (1 - P s) * (wlp b Q && wp b R) s\n\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s.\n                              P s * wlp a Pa s + (1 - P s) * wlp b Pa s) &&\n                          (\\<lambda>s.\n                              P s * wp a Q s + (1 - P s) * wp b Q s))\n                          x\n                         \\<le> P x * wp a (Pa && Q) x +\n                               (1 - P x) * wp b (Pa && Q) x", "{"], ["proof (state)\nthis:\n  P s * (wlp a Q s + wp a R s \\<ominus> 1) +\n  (1 - P s) * (wlp b Q s + wp b R s \\<ominus> 1) =\n  P s * (wlp a Q && wp a R) s + (1 - P s) * (wlp b Q && wp b R) s\n\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s.\n                              P s * wlp a Pa s + (1 - P s) * wlp b Pa s) &&\n                          (\\<lambda>s.\n                              P s * wp a Q s + (1 - P s) * wp b Q s))\n                          x\n                         \\<le> P x * wp a (Pa && Q) x +\n                               (1 - P x) * wp b (Pa && Q) x", "from sdp_a sdp_b uQ uR"], ["proof (chain)\npicking this:\n  sub_distrib_pconj a\n  sub_distrib_pconj b\n  unitary Q\n  unitary R", "have \"P s * (wlp a Q && wp a R) s \\<le> P s * wp a (Q && R) s\"\n     and \"(1 - P s) * (wlp b Q && wp b R) s \\<le> (1 - P s) * wp b (Q && R) s\""], ["proof (prove)\nusing this:\n  sub_distrib_pconj a\n  sub_distrib_pconj b\n  unitary Q\n  unitary R\n\ngoal (1 subgoal):\n 1. P s * (wlp a Q && wp a R) s \\<le> P s * wp a (Q && R) s &&&\n    (1 - P s) * (wlp b Q && wp b R) s \\<le> (1 - P s) * wp b (Q && R) s", "by (simp_all add: entailsD mult_left_mono nn sub_distrib_pconjD)"], ["proof (state)\nthis:\n  P s * (wlp a Q && wp a R) s \\<le> P s * wp a (Q && R) s\n  (1 - P s) * (wlp b Q && wp b R) s \\<le> (1 - P s) * wp b (Q && R) s\n\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s.\n                              P s * wlp a Pa s + (1 - P s) * wlp b Pa s) &&\n                          (\\<lambda>s.\n                              P s * wp a Q s + (1 - P s) * wp b Q s))\n                          x\n                         \\<le> P x * wp a (Pa && Q) x +\n                               (1 - P x) * wp b (Pa && Q) x", "hence \"P s *       ((wlp a Q && wp a R) s) +\n           (1 - P s) * ((wlp b Q && wp b R) s) \\<le>\n           P s * wp a (Q && R) s + (1 - P s) * wp b (Q && R) s\""], ["proof (prove)\nusing this:\n  P s * (wlp a Q && wp a R) s \\<le> P s * wp a (Q && R) s\n  (1 - P s) * (wlp b Q && wp b R) s \\<le> (1 - P s) * wp b (Q && R) s\n\ngoal (1 subgoal):\n 1. P s * (wlp a Q && wp a R) s + (1 - P s) * (wlp b Q && wp b R) s\n    \\<le> P s * wp a (Q && R) s + (1 - P s) * wp b (Q && R) s", "by(auto)"], ["proof (state)\nthis:\n  P s * (wlp a Q && wp a R) s + (1 - P s) * (wlp b Q && wp b R) s\n  \\<le> P s * wp a (Q && R) s + (1 - P s) * wp b (Q && R) s\n\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s.\n                              P s * wlp a Pa s + (1 - P s) * wlp b Pa s) &&\n                          (\\<lambda>s.\n                              P s * wp a Q s + (1 - P s) * wp b Q s))\n                          x\n                         \\<le> P x * wp a (Pa && Q) x +\n                               (1 - P x) * wp b (Pa && Q) x", "}"], ["proof (state)\nthis:\n  P s * (wlp a Q && wp a R) s + (1 - P s) * (wlp b Q && wp b R) s\n  \\<le> P s * wp a (Q && R) s + (1 - P s) * wp b (Q && R) s\n\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s.\n                              P s * wlp a Pa s + (1 - P s) * wlp b Pa s) &&\n                          (\\<lambda>s.\n                              P s * wp a Q s + (1 - P s) * wp b Q s))\n                          x\n                         \\<le> P x * wp a (Pa && Q) x +\n                               (1 - P x) * wp b (Pa && Q) x", "finally"], ["proof (chain)\npicking this:\n  ((\\<lambda>s. P s * wlp a Q s + (1 - P s) * wlp b Q s) &&\n   (\\<lambda>s. P s * wp a R s + (1 - P s) * wp b R s))\n   s\n  \\<le> P s * wp a (Q && R) s + (1 - P s) * wp b (Q && R) s", "show \"((\\<lambda>s. P s * wlp a Q s + (1 - P s) * wlp b Q s) &&\n                 (\\<lambda>s. P s *  wp a R s + (1 - P s) *  wp b R s)) s \\<le>\n                P s * wp a (Q && R) s + (1 - P s) * wp b (Q && R) s\""], ["proof (prove)\nusing this:\n  ((\\<lambda>s. P s * wlp a Q s + (1 - P s) * wlp b Q s) &&\n   (\\<lambda>s. P s * wp a R s + (1 - P s) * wp b R s))\n   s\n  \\<le> P s * wp a (Q && R) s + (1 - P s) * wp b (Q && R) s\n\ngoal (1 subgoal):\n 1. ((\\<lambda>s. P s * wlp a Q s + (1 - P s) * wlp b Q s) &&\n     (\\<lambda>s. P s * wp a R s + (1 - P s) * wp b R s))\n     s\n    \\<le> P s * wp a (Q && R) s + (1 - P s) * wp b (Q && R) s", "."], ["proof (state)\nthis:\n  ((\\<lambda>s. P s * wlp a Q s + (1 - P s) * wlp b Q s) &&\n   (\\<lambda>s. P s * wp a R s + (1 - P s) * wp b R s))\n   s\n  \\<le> P s * wp a (Q && R) s + (1 - P s) * wp b (Q && R) s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sdp_Embed:\n  \"\\<lbrakk> \\<And>P Q. \\<lbrakk> unitary P; unitary Q \\<rbrakk> \\<Longrightarrow> t P && t Q \\<tturnstile> t (P && Q) \\<rbrakk> \\<Longrightarrow>\n   sub_distrib_pconj (Embed t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>P Q.\n        \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n        \\<Longrightarrow> t P &&\n                          t Q \\<tturnstile> t (P && Q)) \\<Longrightarrow>\n    sub_distrib_pconj (Embed t)", "by(auto simp:wp_eval)"], ["", "lemma sdp_repeat:\n  fixes a::\"'s prog\"\n  assumes sdpa: \"sub_distrib_pconj a\"\n      and hwp: \"healthy (wp a)\" and hwlp: \"nearly_healthy (wlp a)\"\n  shows \"sub_distrib_pconj (repeat n a)\" (is \"?X n\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. sub_distrib_pconj (repeat n a)", "proof(induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. sub_distrib_pconj (repeat 0 a)\n 2. \\<And>n.\n       sub_distrib_pconj (repeat n a) \\<Longrightarrow>\n       sub_distrib_pconj (repeat (Suc n) a)", "show \"?X 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sub_distrib_pconj (repeat 0 a)", "by(simp add:sdp_Skip)"], ["proof (state)\nthis:\n  sub_distrib_pconj (repeat 0 a)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       sub_distrib_pconj (repeat n a) \\<Longrightarrow>\n       sub_distrib_pconj (repeat (Suc n) a)", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       sub_distrib_pconj (repeat n a) \\<Longrightarrow>\n       sub_distrib_pconj (repeat (Suc n) a)", "assume IH: \"?X n\""], ["proof (state)\nthis:\n  sub_distrib_pconj (repeat n a)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       sub_distrib_pconj (repeat n a) \\<Longrightarrow>\n       sub_distrib_pconj (repeat (Suc n) a)", "show \"?X (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sub_distrib_pconj (repeat (Suc n) a)", "proof(rule sub_distrib_pconjI, simp add:wp_eval)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> wlp a (wlp (repeat n a) P) &&\n                         wp a\n                          (wp (repeat n a)\n                            Q) \\<tturnstile> wp a (wp (repeat n a) (P && Q))", "fix P::\"'s \\<Rightarrow> real\" and Q::\"'s \\<Rightarrow> real\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> wlp a (wlp (repeat n a) P) &&\n                         wp a\n                          (wp (repeat n a)\n                            Q) \\<tturnstile> wp a (wp (repeat n a) (P && Q))", "assume uP: \"unitary P\" and uQ: \"unitary Q\""], ["proof (state)\nthis:\n  unitary P\n  unitary Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> wlp a (wlp (repeat n a) P) &&\n                         wp a\n                          (wp (repeat n a)\n                            Q) \\<tturnstile> wp a (wp (repeat n a) (P && Q))", "from assms"], ["proof (chain)\npicking this:\n  sub_distrib_pconj a\n  healthy (wp a)\n  nearly_healthy (wlp a)", "have hwlpa: \"nearly_healthy (wlp (repeat n a))\"\n                and hwpa:  \"healthy (wp (repeat n a))\""], ["proof (prove)\nusing this:\n  sub_distrib_pconj a\n  healthy (wp a)\n  nearly_healthy (wlp a)\n\ngoal (1 subgoal):\n 1. nearly_healthy (wlp (repeat n a)) &&& healthy (wp (repeat n a))", "by(auto intro:healthy_intros)"], ["proof (state)\nthis:\n  nearly_healthy (wlp (repeat n a))\n  healthy (wp (repeat n a))\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> wlp a (wlp (repeat n a) P) &&\n                         wp a\n                          (wp (repeat n a)\n                            Q) \\<tturnstile> wp a (wp (repeat n a) (P && Q))", "from uP and hwlpa"], ["proof (chain)\npicking this:\n  unitary P\n  nearly_healthy (wlp (repeat n a))", "have \"unitary (wlp (repeat n a) P)\""], ["proof (prove)\nusing this:\n  unitary P\n  nearly_healthy (wlp (repeat n a))\n\ngoal (1 subgoal):\n 1. unitary (wlp (repeat n a) P)", "by(blast)"], ["proof (state)\nthis:\n  unitary (wlp (repeat n a) P)\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> wlp a (wlp (repeat n a) P) &&\n                         wp a\n                          (wp (repeat n a)\n                            Q) \\<tturnstile> wp a (wp (repeat n a) (P && Q))", "moreover"], ["proof (state)\nthis:\n  unitary (wlp (repeat n a) P)\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> wlp a (wlp (repeat n a) P) &&\n                         wp a\n                          (wp (repeat n a)\n                            Q) \\<tturnstile> wp a (wp (repeat n a) (P && Q))", "from uQ and hwpa"], ["proof (chain)\npicking this:\n  unitary Q\n  healthy (wp (repeat n a))", "have \"unitary (wp (repeat n a) Q)\""], ["proof (prove)\nusing this:\n  unitary Q\n  healthy (wp (repeat n a))\n\ngoal (1 subgoal):\n 1. unitary (wp (repeat n a) Q)", "by(blast)"], ["proof (state)\nthis:\n  unitary (wp (repeat n a) Q)\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> wlp a (wlp (repeat n a) P) &&\n                         wp a\n                          (wp (repeat n a)\n                            Q) \\<tturnstile> wp a (wp (repeat n a) (P && Q))", "ultimately"], ["proof (chain)\npicking this:\n  unitary (wlp (repeat n a) P)\n  unitary (wp (repeat n a) Q)", "have \"wlp a (wlp (repeat n a) P) && wp a (wp (repeat n a) Q) \\<tturnstile>\n          wp a (wlp (repeat n a) P && wp (repeat n a) Q)\""], ["proof (prove)\nusing this:\n  unitary (wlp (repeat n a) P)\n  unitary (wp (repeat n a) Q)\n\ngoal (1 subgoal):\n 1. wlp a (wlp (repeat n a) P) &&\n    wp a\n     (wp (repeat n a)\n       Q) \\<tturnstile> wp a (wlp (repeat n a) P && wp (repeat n a) Q)", "using sdpa"], ["proof (prove)\nusing this:\n  unitary (wlp (repeat n a) P)\n  unitary (wp (repeat n a) Q)\n  sub_distrib_pconj a\n\ngoal (1 subgoal):\n 1. wlp a (wlp (repeat n a) P) &&\n    wp a\n     (wp (repeat n a)\n       Q) \\<tturnstile> wp a (wlp (repeat n a) P && wp (repeat n a) Q)", "by(blast)"], ["proof (state)\nthis:\n  wlp a (wlp (repeat n a) P) &&\n  wp a\n   (wp (repeat n a)\n     Q) \\<tturnstile> wp a (wlp (repeat n a) P && wp (repeat n a) Q)\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> wlp a (wlp (repeat n a) P) &&\n                         wp a\n                          (wp (repeat n a)\n                            Q) \\<tturnstile> wp a (wp (repeat n a) (P && Q))", "also"], ["proof (state)\nthis:\n  wlp a (wlp (repeat n a) P) &&\n  wp a\n   (wp (repeat n a)\n     Q) \\<tturnstile> wp a (wlp (repeat n a) P && wp (repeat n a) Q)\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> wlp a (wlp (repeat n a) P) &&\n                         wp a\n                          (wp (repeat n a)\n                            Q) \\<tturnstile> wp a (wp (repeat n a) (P && Q))", "{"], ["proof (state)\nthis:\n  wlp a (wlp (repeat n a) P) &&\n  wp a\n   (wp (repeat n a)\n     Q) \\<tturnstile> wp a (wlp (repeat n a) P && wp (repeat n a) Q)\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> wlp a (wlp (repeat n a) P) &&\n                         wp a\n                          (wp (repeat n a)\n                            Q) \\<tturnstile> wp a (wp (repeat n a) (P && Q))", "from hwlp"], ["proof (chain)\npicking this:\n  nearly_healthy (wlp a)", "have \"nearly_healthy (wlp (repeat n a))\""], ["proof (prove)\nusing this:\n  nearly_healthy (wlp a)\n\ngoal (1 subgoal):\n 1. nearly_healthy (wlp (repeat n a))", "by(rule healthy_intros)"], ["proof (state)\nthis:\n  nearly_healthy (wlp (repeat n a))\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> wlp a (wlp (repeat n a) P) &&\n                         wp a\n                          (wp (repeat n a)\n                            Q) \\<tturnstile> wp a (wp (repeat n a) (P && Q))", "with uP"], ["proof (chain)\npicking this:\n  unitary P\n  nearly_healthy (wlp (repeat n a))", "have \"sound (wlp (repeat n a) P)\""], ["proof (prove)\nusing this:\n  unitary P\n  nearly_healthy (wlp (repeat n a))\n\ngoal (1 subgoal):\n 1. sound (wlp (repeat n a) P)", "by(auto)"], ["proof (state)\nthis:\n  sound (wlp (repeat n a) P)\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> wlp a (wlp (repeat n a) P) &&\n                         wp a\n                          (wp (repeat n a)\n                            Q) \\<tturnstile> wp a (wp (repeat n a) (P && Q))", "moreover"], ["proof (state)\nthis:\n  sound (wlp (repeat n a) P)\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> wlp a (wlp (repeat n a) P) &&\n                         wp a\n                          (wp (repeat n a)\n                            Q) \\<tturnstile> wp a (wp (repeat n a) (P && Q))", "from hwp uQ"], ["proof (chain)\npicking this:\n  healthy (wp a)\n  unitary Q", "have \"sound (wp (repeat n a) Q)\""], ["proof (prove)\nusing this:\n  healthy (wp a)\n  unitary Q\n\ngoal (1 subgoal):\n 1. sound (wp (repeat n a) Q)", "by(auto intro:healthy_intros)"], ["proof (state)\nthis:\n  sound (wp (repeat n a) Q)\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> wlp a (wlp (repeat n a) P) &&\n                         wp a\n                          (wp (repeat n a)\n                            Q) \\<tturnstile> wp a (wp (repeat n a) (P && Q))", "ultimately"], ["proof (chain)\npicking this:\n  sound (wlp (repeat n a) P)\n  sound (wp (repeat n a) Q)", "have \"sound (wlp (repeat n a) P && wp (repeat n a) Q)\""], ["proof (prove)\nusing this:\n  sound (wlp (repeat n a) P)\n  sound (wp (repeat n a) Q)\n\ngoal (1 subgoal):\n 1. sound (wlp (repeat n a) P && wp (repeat n a) Q)", "by(rule exp_conj_sound)"], ["proof (state)\nthis:\n  sound (wlp (repeat n a) P && wp (repeat n a) Q)\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> wlp a (wlp (repeat n a) P) &&\n                         wp a\n                          (wp (repeat n a)\n                            Q) \\<tturnstile> wp a (wp (repeat n a) (P && Q))", "moreover"], ["proof (state)\nthis:\n  sound (wlp (repeat n a) P && wp (repeat n a) Q)\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> wlp a (wlp (repeat n a) P) &&\n                         wp a\n                          (wp (repeat n a)\n                            Q) \\<tturnstile> wp a (wp (repeat n a) (P && Q))", "{"], ["proof (state)\nthis:\n  sound (wlp (repeat n a) P && wp (repeat n a) Q)\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> wlp a (wlp (repeat n a) P) &&\n                         wp a\n                          (wp (repeat n a)\n                            Q) \\<tturnstile> wp a (wp (repeat n a) (P && Q))", "from uP uQ"], ["proof (chain)\npicking this:\n  unitary P\n  unitary Q", "have \"sound (P && Q)\""], ["proof (prove)\nusing this:\n  unitary P\n  unitary Q\n\ngoal (1 subgoal):\n 1. sound (P && Q)", "by(auto intro:exp_conj_sound)"], ["proof (state)\nthis:\n  sound (P && Q)\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> wlp a (wlp (repeat n a) P) &&\n                         wp a\n                          (wp (repeat n a)\n                            Q) \\<tturnstile> wp a (wp (repeat n a) (P && Q))", "with hwp"], ["proof (chain)\npicking this:\n  healthy (wp a)\n  sound (P && Q)", "have \"sound (wp (repeat n a) (P && Q))\""], ["proof (prove)\nusing this:\n  healthy (wp a)\n  sound (P && Q)\n\ngoal (1 subgoal):\n 1. sound (wp (repeat n a) (P && Q))", "by(auto intro:healthy_intros)"], ["proof (state)\nthis:\n  sound (wp (repeat n a) (P && Q))\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> wlp a (wlp (repeat n a) P) &&\n                         wp a\n                          (wp (repeat n a)\n                            Q) \\<tturnstile> wp a (wp (repeat n a) (P && Q))", "}"], ["proof (state)\nthis:\n  sound (wp (repeat n a) (P && Q))\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> wlp a (wlp (repeat n a) P) &&\n                         wp a\n                          (wp (repeat n a)\n                            Q) \\<tturnstile> wp a (wp (repeat n a) (P && Q))", "moreover"], ["proof (state)\nthis:\n  sound (wp (repeat n a) (P && Q))\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> wlp a (wlp (repeat n a) P) &&\n                         wp a\n                          (wp (repeat n a)\n                            Q) \\<tturnstile> wp a (wp (repeat n a) (P && Q))", "from uP uQ IH"], ["proof (chain)\npicking this:\n  unitary P\n  unitary Q\n  sub_distrib_pconj (repeat n a)", "have \"wlp (repeat n a) P && wp (repeat n a) Q \\<tturnstile> wp (repeat n a) (P && Q)\""], ["proof (prove)\nusing this:\n  unitary P\n  unitary Q\n  sub_distrib_pconj (repeat n a)\n\ngoal (1 subgoal):\n 1. wlp (repeat n a) P &&\n    wp (repeat n a) Q \\<tturnstile> wp (repeat n a) (P && Q)", "by(blast)"], ["proof (state)\nthis:\n  wlp (repeat n a) P &&\n  wp (repeat n a) Q \\<tturnstile> wp (repeat n a) (P && Q)\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> wlp a (wlp (repeat n a) P) &&\n                         wp a\n                          (wp (repeat n a)\n                            Q) \\<tturnstile> wp a (wp (repeat n a) (P && Q))", "ultimately"], ["proof (chain)\npicking this:\n  sound (wlp (repeat n a) P && wp (repeat n a) Q)\n  sound (wp (repeat n a) (P && Q))\n  wlp (repeat n a) P &&\n  wp (repeat n a) Q \\<tturnstile> wp (repeat n a) (P && Q)", "have \"wp a (wlp (repeat n a) P && wp (repeat n a) Q) \\<tturnstile>\n            wp a (wp (repeat n a) (P && Q))\""], ["proof (prove)\nusing this:\n  sound (wlp (repeat n a) P && wp (repeat n a) Q)\n  sound (wp (repeat n a) (P && Q))\n  wlp (repeat n a) P &&\n  wp (repeat n a) Q \\<tturnstile> wp (repeat n a) (P && Q)\n\ngoal (1 subgoal):\n 1. wp a\n     (wlp (repeat n a) P &&\n      wp (repeat n a) Q) \\<tturnstile> wp a (wp (repeat n a) (P && Q))", "by(rule mono_transD[OF healthy_monoD, OF hwp])"], ["proof (state)\nthis:\n  wp a\n   (wlp (repeat n a) P &&\n    wp (repeat n a) Q) \\<tturnstile> wp a (wp (repeat n a) (P && Q))\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> wlp a (wlp (repeat n a) P) &&\n                         wp a\n                          (wp (repeat n a)\n                            Q) \\<tturnstile> wp a (wp (repeat n a) (P && Q))", "}"], ["proof (state)\nthis:\n  wp a\n   (wlp (repeat n a) P &&\n    wp (repeat n a) Q) \\<tturnstile> wp a (wp (repeat n a) (P && Q))\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> wlp a (wlp (repeat n a) P) &&\n                         wp a\n                          (wp (repeat n a)\n                            Q) \\<tturnstile> wp a (wp (repeat n a) (P && Q))", "finally"], ["proof (chain)\npicking this:\n  wlp a (wlp (repeat n a) P) &&\n  wp a (wp (repeat n a) Q) \\<tturnstile> wp a (wp (repeat n a) (P && Q))", "show \"wlp a (wlp (repeat n a) P) && wp a (wp (repeat n a) Q) \\<tturnstile>\n                  wp a (wp (repeat n a) (P && Q))\""], ["proof (prove)\nusing this:\n  wlp a (wlp (repeat n a) P) &&\n  wp a (wp (repeat n a) Q) \\<tturnstile> wp a (wp (repeat n a) (P && Q))\n\ngoal (1 subgoal):\n 1. wlp a (wlp (repeat n a) P) &&\n    wp a (wp (repeat n a) Q) \\<tturnstile> wp a (wp (repeat n a) (P && Q))", "."], ["proof (state)\nthis:\n  wlp a (wlp (repeat n a) P) &&\n  wp a (wp (repeat n a) Q) \\<tturnstile> wp a (wp (repeat n a) (P && Q))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sub_distrib_pconj (repeat (Suc n) a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sdp_SetPC:\n  fixes p::\"'a \\<Rightarrow> 's prog\"\n  assumes sdp: \"\\<And>s a. a \\<in> supp (P s) \\<Longrightarrow> sub_distrib_pconj (p a)\"\n      and fin: \"\\<And>s. finite (supp (P s))\"\n      and nnp: \"\\<And>s a. 0 \\<le> P s a\"\n      and sub: \"\\<And>s. sum (P s) (supp (P s)) \\<le> 1\"\n  shows \"sub_distrib_pconj (SetPC p P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sub_distrib_pconj (SetPC p P)", "proof(rule sub_distrib_pconjI, simp add:wp_eval, rule le_funI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s.\n                              \\<Sum>a\\<in>supp (P s).\n                                P s a * wlp (p a) Pa s) &&\n                          (\\<lambda>s.\n                              \\<Sum>a\\<in>supp (P s). P s a * wp (p a) Q s))\n                          x\n                         \\<le> (\\<Sum>a\\<in>supp (P x).\n                                  P x a * wp (p a) (Pa && Q) x)", "fix Q::\"'s \\<Rightarrow> real\" and R::\"'s \\<Rightarrow> real\" and s::'s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s.\n                              \\<Sum>a\\<in>supp (P s).\n                                P s a * wlp (p a) Pa s) &&\n                          (\\<lambda>s.\n                              \\<Sum>a\\<in>supp (P s). P s a * wp (p a) Q s))\n                          x\n                         \\<le> (\\<Sum>a\\<in>supp (P x).\n                                  P x a * wp (p a) (Pa && Q) x)", "assume uQ: \"unitary Q\" and uR: \"unitary R\""], ["proof (state)\nthis:\n  unitary Q\n  unitary R\n\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s.\n                              \\<Sum>a\\<in>supp (P s).\n                                P s a * wlp (p a) Pa s) &&\n                          (\\<lambda>s.\n                              \\<Sum>a\\<in>supp (P s). P s a * wp (p a) Q s))\n                          x\n                         \\<le> (\\<Sum>a\\<in>supp (P x).\n                                  P x a * wp (p a) (Pa && Q) x)", "have \"((\\<lambda>s. \\<Sum>a\\<in>supp (P s). P s a * wlp (p a) Q s) &&\n         (\\<lambda>s. \\<Sum>a\\<in>supp (P s). P s a *  wp (p a) R s)) s =\n        (\\<Sum>a\\<in>supp (P s). P s a * wlp (p a) Q s) + (\\<Sum>a\\<in>supp (P s). P s a * wp (p a) R s) \\<ominus> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>s. \\<Sum>a\\<in>supp (P s). P s a * wlp (p a) Q s) &&\n     (\\<lambda>s. \\<Sum>a\\<in>supp (P s). P s a * wp (p a) R s))\n     s =\n    (\\<Sum>a\\<in>supp (P s). P s a * wlp (p a) Q s) +\n    (\\<Sum>a\\<in>supp (P s). P s a * wp (p a) R s) \\<ominus>\n    1", "by(simp add:exp_conj_def pconj_def)"], ["proof (state)\nthis:\n  ((\\<lambda>s. \\<Sum>a\\<in>supp (P s). P s a * wlp (p a) Q s) &&\n   (\\<lambda>s. \\<Sum>a\\<in>supp (P s). P s a * wp (p a) R s))\n   s =\n  (\\<Sum>a\\<in>supp (P s). P s a * wlp (p a) Q s) +\n  (\\<Sum>a\\<in>supp (P s). P s a * wp (p a) R s) \\<ominus>\n  1\n\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s.\n                              \\<Sum>a\\<in>supp (P s).\n                                P s a * wlp (p a) Pa s) &&\n                          (\\<lambda>s.\n                              \\<Sum>a\\<in>supp (P s). P s a * wp (p a) Q s))\n                          x\n                         \\<le> (\\<Sum>a\\<in>supp (P x).\n                                  P x a * wp (p a) (Pa && Q) x)", "also"], ["proof (state)\nthis:\n  ((\\<lambda>s. \\<Sum>a\\<in>supp (P s). P s a * wlp (p a) Q s) &&\n   (\\<lambda>s. \\<Sum>a\\<in>supp (P s). P s a * wp (p a) R s))\n   s =\n  (\\<Sum>a\\<in>supp (P s). P s a * wlp (p a) Q s) +\n  (\\<Sum>a\\<in>supp (P s). P s a * wp (p a) R s) \\<ominus>\n  1\n\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s.\n                              \\<Sum>a\\<in>supp (P s).\n                                P s a * wlp (p a) Pa s) &&\n                          (\\<lambda>s.\n                              \\<Sum>a\\<in>supp (P s). P s a * wp (p a) Q s))\n                          x\n                         \\<le> (\\<Sum>a\\<in>supp (P x).\n                                  P x a * wp (p a) (Pa && Q) x)", "have \"... = (\\<Sum>a\\<in>supp (P s). P s a * (wlp (p a) Q s + wp (p a) R s)) \\<ominus> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>a\\<in>supp (P s). P s a * wlp (p a) Q s) +\n    (\\<Sum>a\\<in>supp (P s). P s a * wp (p a) R s) \\<ominus>\n    1 =\n    (\\<Sum>a\\<in>supp (P s).\n       P s a * (wlp (p a) Q s + wp (p a) R s)) \\<ominus>\n    1", "by(simp add: sum.distrib field_simps)"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>supp (P s). P s a * wlp (p a) Q s) +\n  (\\<Sum>a\\<in>supp (P s). P s a * wp (p a) R s) \\<ominus>\n  1 =\n  (\\<Sum>a\\<in>supp (P s). P s a * (wlp (p a) Q s + wp (p a) R s)) \\<ominus>\n  1\n\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s.\n                              \\<Sum>a\\<in>supp (P s).\n                                P s a * wlp (p a) Pa s) &&\n                          (\\<lambda>s.\n                              \\<Sum>a\\<in>supp (P s). P s a * wp (p a) Q s))\n                          x\n                         \\<le> (\\<Sum>a\\<in>supp (P x).\n                                  P x a * wp (p a) (Pa && Q) x)", "also"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>supp (P s). P s a * wlp (p a) Q s) +\n  (\\<Sum>a\\<in>supp (P s). P s a * wp (p a) R s) \\<ominus>\n  1 =\n  (\\<Sum>a\\<in>supp (P s). P s a * (wlp (p a) Q s + wp (p a) R s)) \\<ominus>\n  1\n\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s.\n                              \\<Sum>a\\<in>supp (P s).\n                                P s a * wlp (p a) Pa s) &&\n                          (\\<lambda>s.\n                              \\<Sum>a\\<in>supp (P s). P s a * wp (p a) Q s))\n                          x\n                         \\<le> (\\<Sum>a\\<in>supp (P x).\n                                  P x a * wp (p a) (Pa && Q) x)", "from sub"], ["proof (chain)\npicking this:\n  sum (P ?s) (supp (P ?s)) \\<le> 1", "have \"... \\<le> (\\<Sum>a\\<in>supp (P s). P s a * (wlp (p a) Q s + wp (p a) R s)) \\<ominus>\n              (\\<Sum>a\\<in>supp (P s). P s a)\""], ["proof (prove)\nusing this:\n  sum (P ?s) (supp (P ?s)) \\<le> 1\n\ngoal (1 subgoal):\n 1. (\\<Sum>a\\<in>supp (P s).\n       P s a * (wlp (p a) Q s + wp (p a) R s)) \\<ominus>\n    1\n    \\<le> (\\<Sum>a\\<in>supp (P s).\n             P s a * (wlp (p a) Q s + wp (p a) R s)) \\<ominus>\n          sum (P s) (supp (P s))", "by(rule tminus_right_antimono)"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>supp (P s). P s a * (wlp (p a) Q s + wp (p a) R s)) \\<ominus>\n  1\n  \\<le> (\\<Sum>a\\<in>supp (P s).\n           P s a * (wlp (p a) Q s + wp (p a) R s)) \\<ominus>\n        sum (P s) (supp (P s))\n\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s.\n                              \\<Sum>a\\<in>supp (P s).\n                                P s a * wlp (p a) Pa s) &&\n                          (\\<lambda>s.\n                              \\<Sum>a\\<in>supp (P s). P s a * wp (p a) Q s))\n                          x\n                         \\<le> (\\<Sum>a\\<in>supp (P x).\n                                  P x a * wp (p a) (Pa && Q) x)", "also"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>supp (P s). P s a * (wlp (p a) Q s + wp (p a) R s)) \\<ominus>\n  1\n  \\<le> (\\<Sum>a\\<in>supp (P s).\n           P s a * (wlp (p a) Q s + wp (p a) R s)) \\<ominus>\n        sum (P s) (supp (P s))\n\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s.\n                              \\<Sum>a\\<in>supp (P s).\n                                P s a * wlp (p a) Pa s) &&\n                          (\\<lambda>s.\n                              \\<Sum>a\\<in>supp (P s). P s a * wp (p a) Q s))\n                          x\n                         \\<le> (\\<Sum>a\\<in>supp (P x).\n                                  P x a * wp (p a) (Pa && Q) x)", "from fin"], ["proof (chain)\npicking this:\n  finite (supp (P ?s))", "have \"... \\<le> (\\<Sum>a\\<in>supp (P s). P s a * (wlp (p a) Q s + wp (p a) R s) \\<ominus> P s a)\""], ["proof (prove)\nusing this:\n  finite (supp (P ?s))\n\ngoal (1 subgoal):\n 1. (\\<Sum>a\\<in>supp (P s).\n       P s a * (wlp (p a) Q s + wp (p a) R s)) \\<ominus>\n    sum (P s) (supp (P s))\n    \\<le> (\\<Sum>a\\<in>supp (P s).\n             P s a * (wlp (p a) Q s + wp (p a) R s) \\<ominus> P s a)", "by(rule tminus_sum_mono)"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>supp (P s). P s a * (wlp (p a) Q s + wp (p a) R s)) \\<ominus>\n  sum (P s) (supp (P s))\n  \\<le> (\\<Sum>a\\<in>supp (P s).\n           P s a * (wlp (p a) Q s + wp (p a) R s) \\<ominus> P s a)\n\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s.\n                              \\<Sum>a\\<in>supp (P s).\n                                P s a * wlp (p a) Pa s) &&\n                          (\\<lambda>s.\n                              \\<Sum>a\\<in>supp (P s). P s a * wp (p a) Q s))\n                          x\n                         \\<le> (\\<Sum>a\\<in>supp (P x).\n                                  P x a * wp (p a) (Pa && Q) x)", "also"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>supp (P s). P s a * (wlp (p a) Q s + wp (p a) R s)) \\<ominus>\n  sum (P s) (supp (P s))\n  \\<le> (\\<Sum>a\\<in>supp (P s).\n           P s a * (wlp (p a) Q s + wp (p a) R s) \\<ominus> P s a)\n\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s.\n                              \\<Sum>a\\<in>supp (P s).\n                                P s a * wlp (p a) Pa s) &&\n                          (\\<lambda>s.\n                              \\<Sum>a\\<in>supp (P s). P s a * wp (p a) Q s))\n                          x\n                         \\<le> (\\<Sum>a\\<in>supp (P x).\n                                  P x a * wp (p a) (Pa && Q) x)", "from nnp"], ["proof (chain)\npicking this:\n  0 \\<le> P ?s ?a", "have \"... = (\\<Sum>a\\<in>supp (P s). P s a * (wlp (p a) Q s + wp (p a) R s \\<ominus> 1))\""], ["proof (prove)\nusing this:\n  0 \\<le> P ?s ?a\n\ngoal (1 subgoal):\n 1. (\\<Sum>a\\<in>supp (P s).\n       P s a * (wlp (p a) Q s + wp (p a) R s) \\<ominus> P s a) =\n    (\\<Sum>a\\<in>supp (P s).\n       P s a * (wlp (p a) Q s + wp (p a) R s \\<ominus> 1))", "by(simp add:tminus_left_distrib)"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>supp (P s).\n     P s a * (wlp (p a) Q s + wp (p a) R s) \\<ominus> P s a) =\n  (\\<Sum>a\\<in>supp (P s).\n     P s a * (wlp (p a) Q s + wp (p a) R s \\<ominus> 1))\n\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s.\n                              \\<Sum>a\\<in>supp (P s).\n                                P s a * wlp (p a) Pa s) &&\n                          (\\<lambda>s.\n                              \\<Sum>a\\<in>supp (P s). P s a * wp (p a) Q s))\n                          x\n                         \\<le> (\\<Sum>a\\<in>supp (P x).\n                                  P x a * wp (p a) (Pa && Q) x)", "also"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>supp (P s).\n     P s a * (wlp (p a) Q s + wp (p a) R s) \\<ominus> P s a) =\n  (\\<Sum>a\\<in>supp (P s).\n     P s a * (wlp (p a) Q s + wp (p a) R s \\<ominus> 1))\n\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s.\n                              \\<Sum>a\\<in>supp (P s).\n                                P s a * wlp (p a) Pa s) &&\n                          (\\<lambda>s.\n                              \\<Sum>a\\<in>supp (P s). P s a * wp (p a) Q s))\n                          x\n                         \\<le> (\\<Sum>a\\<in>supp (P x).\n                                  P x a * wp (p a) (Pa && Q) x)", "have \"... = (\\<Sum>a\\<in>supp (P s). P s a * (wlp (p a) Q && wp (p a) R) s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>a\\<in>supp (P s).\n       P s a * (wlp (p a) Q s + wp (p a) R s \\<ominus> 1)) =\n    (\\<Sum>a\\<in>supp (P s). P s a * (wlp (p a) Q && wp (p a) R) s)", "by(simp add:pconj_def exp_conj_def)"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>supp (P s).\n     P s a * (wlp (p a) Q s + wp (p a) R s \\<ominus> 1)) =\n  (\\<Sum>a\\<in>supp (P s). P s a * (wlp (p a) Q && wp (p a) R) s)\n\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s.\n                              \\<Sum>a\\<in>supp (P s).\n                                P s a * wlp (p a) Pa s) &&\n                          (\\<lambda>s.\n                              \\<Sum>a\\<in>supp (P s). P s a * wp (p a) Q s))\n                          x\n                         \\<le> (\\<Sum>a\\<in>supp (P x).\n                                  P x a * wp (p a) (Pa && Q) x)", "also"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>supp (P s).\n     P s a * (wlp (p a) Q s + wp (p a) R s \\<ominus> 1)) =\n  (\\<Sum>a\\<in>supp (P s). P s a * (wlp (p a) Q && wp (p a) R) s)\n\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s.\n                              \\<Sum>a\\<in>supp (P s).\n                                P s a * wlp (p a) Pa s) &&\n                          (\\<lambda>s.\n                              \\<Sum>a\\<in>supp (P s). P s a * wp (p a) Q s))\n                          x\n                         \\<le> (\\<Sum>a\\<in>supp (P x).\n                                  P x a * wp (p a) (Pa && Q) x)", "{"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>supp (P s).\n     P s a * (wlp (p a) Q s + wp (p a) R s \\<ominus> 1)) =\n  (\\<Sum>a\\<in>supp (P s). P s a * (wlp (p a) Q && wp (p a) R) s)\n\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s.\n                              \\<Sum>a\\<in>supp (P s).\n                                P s a * wlp (p a) Pa s) &&\n                          (\\<lambda>s.\n                              \\<Sum>a\\<in>supp (P s). P s a * wp (p a) Q s))\n                          x\n                         \\<le> (\\<Sum>a\\<in>supp (P x).\n                                  P x a * wp (p a) (Pa && Q) x)", "from sdp uQ uR"], ["proof (chain)\npicking this:\n  ?a \\<in> supp (P ?s) \\<Longrightarrow> sub_distrib_pconj (p ?a)\n  unitary Q\n  unitary R", "have \"\\<And>a. a \\<in> supp (P s) \\<Longrightarrow> wlp (p a) Q && wp (p a) R \\<tturnstile> wp (p a) (Q && R)\""], ["proof (prove)\nusing this:\n  ?a \\<in> supp (P ?s) \\<Longrightarrow> sub_distrib_pconj (p ?a)\n  unitary Q\n  unitary R\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> supp (P s) \\<Longrightarrow>\n       wlp (p a) Q && wp (p a) R \\<tturnstile> wp (p a) (Q && R)", "by(blast intro:sub_distrib_pconjD)"], ["proof (state)\nthis:\n  ?a \\<in> supp (P s) \\<Longrightarrow>\n  wlp (p ?a) Q && wp (p ?a) R \\<tturnstile> wp (p ?a) (Q && R)\n\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s.\n                              \\<Sum>a\\<in>supp (P s).\n                                P s a * wlp (p a) Pa s) &&\n                          (\\<lambda>s.\n                              \\<Sum>a\\<in>supp (P s). P s a * wp (p a) Q s))\n                          x\n                         \\<le> (\\<Sum>a\\<in>supp (P x).\n                                  P x a * wp (p a) (Pa && Q) x)", "with nnp"], ["proof (chain)\npicking this:\n  0 \\<le> P ?s ?a\n  ?a \\<in> supp (P s) \\<Longrightarrow>\n  wlp (p ?a) Q && wp (p ?a) R \\<tturnstile> wp (p ?a) (Q && R)", "have \"(\\<Sum>a\\<in>supp (P s). P s a * (wlp (p a) Q && wp (p a) R) s) \\<le>\n          (\\<Sum>a\\<in>supp (P s). P s a * (wp (p a) (Q && R)) s)\""], ["proof (prove)\nusing this:\n  0 \\<le> P ?s ?a\n  ?a \\<in> supp (P s) \\<Longrightarrow>\n  wlp (p ?a) Q && wp (p ?a) R \\<tturnstile> wp (p ?a) (Q && R)\n\ngoal (1 subgoal):\n 1. (\\<Sum>a\\<in>supp (P s). P s a * (wlp (p a) Q && wp (p a) R) s)\n    \\<le> (\\<Sum>a\\<in>supp (P s). P s a * wp (p a) (Q && R) s)", "by(blast intro:sum_mono mult_left_mono)"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>supp (P s). P s a * (wlp (p a) Q && wp (p a) R) s)\n  \\<le> (\\<Sum>a\\<in>supp (P s). P s a * wp (p a) (Q && R) s)\n\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s.\n                              \\<Sum>a\\<in>supp (P s).\n                                P s a * wlp (p a) Pa s) &&\n                          (\\<lambda>s.\n                              \\<Sum>a\\<in>supp (P s). P s a * wp (p a) Q s))\n                          x\n                         \\<le> (\\<Sum>a\\<in>supp (P x).\n                                  P x a * wp (p a) (Pa && Q) x)", "}"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>supp (P s). P s a * (wlp (p a) Q && wp (p a) R) s)\n  \\<le> (\\<Sum>a\\<in>supp (P s). P s a * wp (p a) (Q && R) s)\n\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q\\<rbrakk>\n       \\<Longrightarrow> ((\\<lambda>s.\n                              \\<Sum>a\\<in>supp (P s).\n                                P s a * wlp (p a) Pa s) &&\n                          (\\<lambda>s.\n                              \\<Sum>a\\<in>supp (P s). P s a * wp (p a) Q s))\n                          x\n                         \\<le> (\\<Sum>a\\<in>supp (P x).\n                                  P x a * wp (p a) (Pa && Q) x)", "finally"], ["proof (chain)\npicking this:\n  ((\\<lambda>s. \\<Sum>a\\<in>supp (P s). P s a * wlp (p a) Q s) &&\n   (\\<lambda>s. \\<Sum>a\\<in>supp (P s). P s a * wp (p a) R s))\n   s\n  \\<le> (\\<Sum>a\\<in>supp (P s). P s a * wp (p a) (Q && R) s)", "show \"((\\<lambda>s. \\<Sum>a\\<in>supp (P s). P s a * wlp (p a) Q s) &&\n                 (\\<lambda>s. \\<Sum>a\\<in>supp (P s). P s a * wp (p a) R s)) s \\<le>\n                (\\<Sum>a\\<in>supp (P s). P s a * wp (p a) (Q && R) s)\""], ["proof (prove)\nusing this:\n  ((\\<lambda>s. \\<Sum>a\\<in>supp (P s). P s a * wlp (p a) Q s) &&\n   (\\<lambda>s. \\<Sum>a\\<in>supp (P s). P s a * wp (p a) R s))\n   s\n  \\<le> (\\<Sum>a\\<in>supp (P s). P s a * wp (p a) (Q && R) s)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>s. \\<Sum>a\\<in>supp (P s). P s a * wlp (p a) Q s) &&\n     (\\<lambda>s. \\<Sum>a\\<in>supp (P s). P s a * wp (p a) R s))\n     s\n    \\<le> (\\<Sum>a\\<in>supp (P s). P s a * wp (p a) (Q && R) s)", "."], ["proof (state)\nthis:\n  ((\\<lambda>s. \\<Sum>a\\<in>supp (P s). P s a * wlp (p a) Q s) &&\n   (\\<lambda>s. \\<Sum>a\\<in>supp (P s). P s a * wp (p a) R s))\n   s\n  \\<le> (\\<Sum>a\\<in>supp (P s). P s a * wp (p a) (Q && R) s)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sdp_SetDC:\n  fixes p::\"'a \\<Rightarrow> 's prog\"\n  assumes sdp: \"\\<And>s a. a \\<in> S s \\<Longrightarrow> sub_distrib_pconj (p a)\"\n      and hwp: \"\\<And>s a. a \\<in> S s \\<Longrightarrow> healthy (wp (p a))\"\n      and hwlp: \"\\<And>s a. a \\<in> S s \\<Longrightarrow> nearly_healthy (wlp (p a))\"\n      and ne:  \"\\<And>s. S s \\<noteq> {}\"\n  shows \"sub_distrib_pconj (SetDC p S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sub_distrib_pconj (SetDC p S)", "proof(rule sub_distrib_pconjI, rule le_funI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> (wlp (SetDC p S) P && wp (SetDC p S) Q) x\n                         \\<le> wp (SetDC p S) (P && Q) x", "fix P::\"'s \\<Rightarrow> real\" and Q::\"'s \\<Rightarrow> real\" and s::'s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> (wlp (SetDC p S) P && wp (SetDC p S) Q) x\n                         \\<le> wp (SetDC p S) (P && Q) x", "assume uP: \"unitary P\" and uQ: \"unitary Q\""], ["proof (state)\nthis:\n  unitary P\n  unitary Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> (wlp (SetDC p S) P && wp (SetDC p S) Q) x\n                         \\<le> wp (SetDC p S) (P && Q) x", "from uP hwlp"], ["proof (chain)\npicking this:\n  unitary P\n  ?a \\<in> S ?s \\<Longrightarrow> nearly_healthy (wlp (p ?a))", "have \"\\<And>x. x \\<in> (\\<lambda>a. wlp (p a) P) ` S s \\<Longrightarrow> unitary x\""], ["proof (prove)\nusing this:\n  unitary P\n  ?a \\<in> S ?s \\<Longrightarrow> nearly_healthy (wlp (p ?a))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>a. wlp (p a) P) ` S s \\<Longrightarrow> unitary x", "by(auto)"], ["proof (state)\nthis:\n  ?x \\<in> (\\<lambda>a. wlp (p a) P) ` S s \\<Longrightarrow> unitary ?x\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> (wlp (SetDC p S) P && wp (SetDC p S) Q) x\n                         \\<le> wp (SetDC p S) (P && Q) x", "hence \"\\<And>y. y \\<in> (\\<lambda>a. wlp (p a) P s) ` S s \\<Longrightarrow> 0 \\<le> y\""], ["proof (prove)\nusing this:\n  ?x \\<in> (\\<lambda>a. wlp (p a) P) ` S s \\<Longrightarrow> unitary ?x\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> (\\<lambda>a. wlp (p a) P s) ` S s \\<Longrightarrow> 0 \\<le> y", "by(auto)"], ["proof (state)\nthis:\n  ?y \\<in> (\\<lambda>a. wlp (p a) P s) ` S s \\<Longrightarrow> 0 \\<le> ?y\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> (wlp (SetDC p S) P && wp (SetDC p S) Q) x\n                         \\<le> wp (SetDC p S) (P && Q) x", "hence \"\\<And>a. a \\<in> S s \\<Longrightarrow> wlp (SetDC p S) P s \\<le> wlp (p a) P s\""], ["proof (prove)\nusing this:\n  ?y \\<in> (\\<lambda>a. wlp (p a) P s) ` S s \\<Longrightarrow> 0 \\<le> ?y\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> S s \\<Longrightarrow> wlp (SetDC p S) P s \\<le> wlp (p a) P s", "unfolding wp_eval"], ["proof (prove)\nusing this:\n  ?y \\<in> (\\<lambda>a. wlp (p a) P s) ` S s \\<Longrightarrow> 0 \\<le> ?y\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> S s \\<Longrightarrow>\n       (INF a\\<in>S s. wlp (p a) P s) \\<le> wlp (p a) P s", "by(intro cInf_lower bdd_belowI, auto)"], ["proof (state)\nthis:\n  ?a \\<in> S s \\<Longrightarrow> wlp (SetDC p S) P s \\<le> wlp (p ?a) P s\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> (wlp (SetDC p S) P && wp (SetDC p S) Q) x\n                         \\<le> wp (SetDC p S) (P && Q) x", "moreover"], ["proof (state)\nthis:\n  ?a \\<in> S s \\<Longrightarrow> wlp (SetDC p S) P s \\<le> wlp (p ?a) P s\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> (wlp (SetDC p S) P && wp (SetDC p S) Q) x\n                         \\<le> wp (SetDC p S) (P && Q) x", "{"], ["proof (state)\nthis:\n  ?a \\<in> S s \\<Longrightarrow> wlp (SetDC p S) P s \\<le> wlp (p ?a) P s\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> (wlp (SetDC p S) P && wp (SetDC p S) Q) x\n                         \\<le> wp (SetDC p S) (P && Q) x", "from uQ hwp"], ["proof (chain)\npicking this:\n  unitary Q\n  ?a \\<in> S ?s \\<Longrightarrow> healthy (wp (p ?a))", "have \"\\<And>a. a \\<in> S s \\<Longrightarrow>  0 \\<le> wp (p a) Q s\""], ["proof (prove)\nusing this:\n  unitary Q\n  ?a \\<in> S ?s \\<Longrightarrow> healthy (wp (p ?a))\n\ngoal (1 subgoal):\n 1. \\<And>a. a \\<in> S s \\<Longrightarrow> 0 \\<le> wp (p a) Q s", "by(blast)"], ["proof (state)\nthis:\n  ?a \\<in> S s \\<Longrightarrow> 0 \\<le> wp (p ?a) Q s\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> (wlp (SetDC p S) P && wp (SetDC p S) Q) x\n                         \\<le> wp (SetDC p S) (P && Q) x", "hence \"\\<And>a. a \\<in> S s \\<Longrightarrow> wp (SetDC p S) Q s \\<le> wp (p a) Q s\""], ["proof (prove)\nusing this:\n  ?a \\<in> S s \\<Longrightarrow> 0 \\<le> wp (p ?a) Q s\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> S s \\<Longrightarrow> wp (SetDC p S) Q s \\<le> wp (p a) Q s", "unfolding wp_eval"], ["proof (prove)\nusing this:\n  ?a \\<in> S s \\<Longrightarrow> 0 \\<le> wp (p ?a) Q s\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> S s \\<Longrightarrow>\n       (INF a\\<in>S s. wp (p a) Q s) \\<le> wp (p a) Q s", "by(intro cInf_lower bdd_belowI, auto)"], ["proof (state)\nthis:\n  ?a \\<in> S s \\<Longrightarrow> wp (SetDC p S) Q s \\<le> wp (p ?a) Q s\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> (wlp (SetDC p S) P && wp (SetDC p S) Q) x\n                         \\<le> wp (SetDC p S) (P && Q) x", "}"], ["proof (state)\nthis:\n  ?a \\<in> S s \\<Longrightarrow> wp (SetDC p S) Q s \\<le> wp (p ?a) Q s\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> (wlp (SetDC p S) P && wp (SetDC p S) Q) x\n                         \\<le> wp (SetDC p S) (P && Q) x", "ultimately"], ["proof (chain)\npicking this:\n  ?a \\<in> S s \\<Longrightarrow> wlp (SetDC p S) P s \\<le> wlp (p ?a) P s\n  ?a \\<in> S s \\<Longrightarrow> wp (SetDC p S) Q s \\<le> wp (p ?a) Q s", "have \"\\<And>a. a \\<in> S s \\<Longrightarrow> wlp (SetDC p S) P s + wp (SetDC p S) Q s \\<ominus> 1 \\<le>\n                      wlp (p a) P s + wp (p a) Q s \\<ominus> 1\""], ["proof (prove)\nusing this:\n  ?a \\<in> S s \\<Longrightarrow> wlp (SetDC p S) P s \\<le> wlp (p ?a) P s\n  ?a \\<in> S s \\<Longrightarrow> wp (SetDC p S) Q s \\<le> wp (p ?a) Q s\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> S s \\<Longrightarrow>\n       wlp (SetDC p S) P s + wp (SetDC p S) Q s \\<ominus> 1\n       \\<le> wlp (p a) P s + wp (p a) Q s \\<ominus> 1", "by(auto intro:tminus_left_mono add_mono)"], ["proof (state)\nthis:\n  ?a \\<in> S s \\<Longrightarrow>\n  wlp (SetDC p S) P s + wp (SetDC p S) Q s \\<ominus> 1\n  \\<le> wlp (p ?a) P s + wp (p ?a) Q s \\<ominus> 1\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> (wlp (SetDC p S) P && wp (SetDC p S) Q) x\n                         \\<le> wp (SetDC p S) (P && Q) x", "also"], ["proof (state)\nthis:\n  ?a \\<in> S s \\<Longrightarrow>\n  wlp (SetDC p S) P s + wp (SetDC p S) Q s \\<ominus> 1\n  \\<le> wlp (p ?a) P s + wp (p ?a) Q s \\<ominus> 1\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> (wlp (SetDC p S) P && wp (SetDC p S) Q) x\n                         \\<le> wp (SetDC p S) (P && Q) x", "have \"\\<And>a. wlp (p a) P s + wp (p a) Q s \\<ominus> 1 = (wlp (p a) P && wp (p a) Q) s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       wlp (p a) P s + wp (p a) Q s \\<ominus> 1 =\n       (wlp (p a) P && wp (p a) Q) s", "by(simp add:exp_conj_def pconj_def)"], ["proof (state)\nthis:\n  wlp (p ?a) P s + wp (p ?a) Q s \\<ominus> 1 =\n  (wlp (p ?a) P && wp (p ?a) Q) s\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> (wlp (SetDC p S) P && wp (SetDC p S) Q) x\n                         \\<le> wp (SetDC p S) (P && Q) x", "also"], ["proof (state)\nthis:\n  wlp (p ?a) P s + wp (p ?a) Q s \\<ominus> 1 =\n  (wlp (p ?a) P && wp (p ?a) Q) s\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> (wlp (SetDC p S) P && wp (SetDC p S) Q) x\n                         \\<le> wp (SetDC p S) (P && Q) x", "from sdp uP uQ"], ["proof (chain)\npicking this:\n  ?a \\<in> S ?s \\<Longrightarrow> sub_distrib_pconj (p ?a)\n  unitary P\n  unitary Q", "have \"\\<And>a. a \\<in> S s \\<Longrightarrow> ... a \\<le> wp (p a) (P && Q) s\""], ["proof (prove)\nusing this:\n  ?a \\<in> S ?s \\<Longrightarrow> sub_distrib_pconj (p ?a)\n  unitary P\n  unitary Q\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> S s \\<Longrightarrow>\n       (wlp (p a) P && wp (p a) Q) s \\<le> wp (p a) (P && Q) s", "by(blast)"], ["proof (state)\nthis:\n  ?a \\<in> S s \\<Longrightarrow>\n  (wlp (p ?a) P && wp (p ?a) Q) s \\<le> wp (p ?a) (P && Q) s\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> (wlp (SetDC p S) P && wp (SetDC p S) Q) x\n                         \\<le> wp (SetDC p S) (P && Q) x", "also"], ["proof (state)\nthis:\n  ?a \\<in> S s \\<Longrightarrow>\n  (wlp (p ?a) P && wp (p ?a) Q) s \\<le> wp (p ?a) (P && Q) s\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> (wlp (SetDC p S) P && wp (SetDC p S) Q) x\n                         \\<le> wp (SetDC p S) (P && Q) x", "have \"\\<And>a. ... a = wp (p a) (\\<lambda>s. P s + Q s \\<ominus> 1) s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a.\n       wp (p a) (P && Q) s = wp (p a) (\\<lambda>s. P s + Q s \\<ominus> 1) s", "by(simp add:exp_conj_def pconj_def)"], ["proof (state)\nthis:\n  wp (p ?a) (P && Q) s = wp (p ?a) (\\<lambda>s. P s + Q s \\<ominus> 1) s\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> (wlp (SetDC p S) P && wp (SetDC p S) Q) x\n                         \\<le> wp (SetDC p S) (P && Q) x", "finally"], ["proof (chain)\npicking this:\n  \\<lbrakk>?a1 \\<in> S s; ?a1 \\<in> S s\\<rbrakk>\n  \\<Longrightarrow> wlp (SetDC p S) P s + wp (SetDC p S) Q s \\<ominus> 1\n                    \\<le> wp (p ?a1) (\\<lambda>s. P s + Q s \\<ominus> 1) s", "show \"(wlp (SetDC p S) P && wp (SetDC p S) Q) s \\<le> wp (SetDC p S) (P && Q) s\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?a1 \\<in> S s; ?a1 \\<in> S s\\<rbrakk>\n  \\<Longrightarrow> wlp (SetDC p S) P s + wp (SetDC p S) Q s \\<ominus> 1\n                    \\<le> wp (p ?a1) (\\<lambda>s. P s + Q s \\<ominus> 1) s\n\ngoal (1 subgoal):\n 1. (wlp (SetDC p S) P && wp (SetDC p S) Q) s\n    \\<le> wp (SetDC p S) (P && Q) s", "unfolding exp_conj_def pconj_def wp_eval"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a1 \\<in> S s; ?a1 \\<in> S s\\<rbrakk>\n  \\<Longrightarrow> (INF a\\<in>S s. wlp (p a) P s) +\n                    (INF a\\<in>S s. wp (p a) Q s) \\<ominus>\n                    1\n                    \\<le> wp (p ?a1) (\\<lambda>s. P s + Q s \\<ominus> 1) s\n\ngoal (1 subgoal):\n 1. (INF a\\<in>S s. wlp (p a) P s) + (INF a\\<in>S s. wp (p a) Q s) \\<ominus>\n    1\n    \\<le> (INF a\\<in>S s. wp (p a) (\\<lambda>s. P s + Q s \\<ominus> 1) s)", "using ne"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a1 \\<in> S s; ?a1 \\<in> S s\\<rbrakk>\n  \\<Longrightarrow> (INF a\\<in>S s. wlp (p a) P s) +\n                    (INF a\\<in>S s. wp (p a) Q s) \\<ominus>\n                    1\n                    \\<le> wp (p ?a1) (\\<lambda>s. P s + Q s \\<ominus> 1) s\n  S ?s \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (INF a\\<in>S s. wlp (p a) P s) + (INF a\\<in>S s. wp (p a) Q s) \\<ominus>\n    1\n    \\<le> (INF a\\<in>S s. wp (p a) (\\<lambda>s. P s + Q s \\<ominus> 1) s)", "by(blast intro!:cInf_greatest)"], ["proof (state)\nthis:\n  (wlp (SetDC p S) P && wp (SetDC p S) Q) s \\<le> wp (SetDC p S) (P && Q) s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sdp_Bind:\n  \"\\<lbrakk> \\<And>s. sub_distrib_pconj (p (f s)) \\<rbrakk> \\<Longrightarrow> sub_distrib_pconj (Bind f p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s. sub_distrib_pconj (p (f s))) \\<Longrightarrow>\n    sub_distrib_pconj (Bind f p)", "unfolding sub_distrib_pconj_def wp_eval exp_conj_def pconj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<forall>P Q.\n           unitary P \\<longrightarrow>\n           unitary Q \\<longrightarrow>\n           \\<lambda>sa.\n              wlp (p (f s)) P sa + wp (p (f s)) Q sa \\<ominus>\n              1 \\<tturnstile> wp (p (f s))\n                               (\\<lambda>s.\n                                   P s + Q s \\<ominus> 1)) \\<Longrightarrow>\n    \\<forall>P Q.\n       unitary P \\<longrightarrow>\n       unitary Q \\<longrightarrow>\n       \\<lambda>s.\n          wlp (p (f s)) P s + wp (p (f s)) Q s \\<ominus>\n          1 \\<tturnstile> \\<lambda>s.\n                             wp (p (f s))\n                              (\\<lambda>s. P s + Q s \\<ominus> 1) s", "by(blast)"], ["", "text \\<open>For loops, we again appeal to our transfinite induction principle, this time taking\nadvantage of the simultaneous treatment of both strict and liberal transformers.\\<close>"], ["", "lemma sdp_loop:\n  fixes body::\"'s prog\"\n  assumes sdp_body: \"sub_distrib_pconj body\"\n      and hwlp: \"nearly_healthy (wlp body)\"\n      and hwp:  \"healthy (wp body)\"\n  shows \"sub_distrib_pconj (do G \\<longrightarrow> body od)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sub_distrib_pconj\n     (\\<mu>x.\n         body ;;\n         x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)", "proof(rule sub_distrib_pconjI, rule loop_induct[OF hwp hwlp])"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>P Q S.\n       \\<lbrakk>unitary P; unitary Q;\n        \\<forall>x\\<in>S. snd x P && fst x Q \\<tturnstile> fst x (P && Q);\n        \\<forall>x\\<in>S. feasible (fst x);\n        \\<forall>x\\<in>S.\n           \\<forall>Q.\n              unitary Q \\<longrightarrow> unitary (snd x Q)\\<rbrakk>\n       \\<Longrightarrow> Inf_utrans (snd ` S) P &&\n                         Sup_trans (fst ` S)\n                          Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)\n 2. \\<And>P Q t u.\n       \\<lbrakk>unitary P; unitary Q; u P && t Q \\<tturnstile> t (P && Q);\n        feasible t;\n        \\<And>Q. unitary Q \\<Longrightarrow> unitary (u Q)\\<rbrakk>\n       \\<Longrightarrow> wlp (body ;;\n                              Embed\n                               u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P &&\n                         wp (body ;;\n                             Embed\n                              t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          Q \\<tturnstile> wp\n     (body ;;\n      Embed\n       t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     (P && Q)\n 3. \\<And>P Q t t' u u'.\n       \\<lbrakk>unitary P; unitary Q; u P && t Q \\<tturnstile> t (P && Q);\n        equiv_trans t t'; equiv_utrans u u'\\<rbrakk>\n       \\<Longrightarrow> u' P && t' Q \\<tturnstile> t' (P && Q)", "fix P Q::\"'s expect\" and S::\"('s trans \\<times> 's trans) set\""], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>P Q S.\n       \\<lbrakk>unitary P; unitary Q;\n        \\<forall>x\\<in>S. snd x P && fst x Q \\<tturnstile> fst x (P && Q);\n        \\<forall>x\\<in>S. feasible (fst x);\n        \\<forall>x\\<in>S.\n           \\<forall>Q.\n              unitary Q \\<longrightarrow> unitary (snd x Q)\\<rbrakk>\n       \\<Longrightarrow> Inf_utrans (snd ` S) P &&\n                         Sup_trans (fst ` S)\n                          Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)\n 2. \\<And>P Q t u.\n       \\<lbrakk>unitary P; unitary Q; u P && t Q \\<tturnstile> t (P && Q);\n        feasible t;\n        \\<And>Q. unitary Q \\<Longrightarrow> unitary (u Q)\\<rbrakk>\n       \\<Longrightarrow> wlp (body ;;\n                              Embed\n                               u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P &&\n                         wp (body ;;\n                             Embed\n                              t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          Q \\<tturnstile> wp\n     (body ;;\n      Embed\n       t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     (P && Q)\n 3. \\<And>P Q t t' u u'.\n       \\<lbrakk>unitary P; unitary Q; u P && t Q \\<tturnstile> t (P && Q);\n        equiv_trans t t'; equiv_utrans u u'\\<rbrakk>\n       \\<Longrightarrow> u' P && t' Q \\<tturnstile> t' (P && Q)", "assume uP: \"unitary P\" and uQ: \"unitary Q\"\n     and ffst: \"\\<forall>x\\<in>S. feasible (fst x)\"\n     and usnd: \"\\<forall>x\\<in>S. \\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)\"\n     and IH: \"\\<forall>x\\<in>S. snd x P && fst x Q \\<tturnstile> fst x (P && Q)\""], ["proof (state)\nthis:\n  unitary P\n  unitary Q\n  \\<forall>x\\<in>S. feasible (fst x)\n  \\<forall>x\\<in>S.\n     \\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)\n  \\<forall>x\\<in>S. snd x P && fst x Q \\<tturnstile> fst x (P && Q)\n\ngoal (3 subgoals):\n 1. \\<And>P Q S.\n       \\<lbrakk>unitary P; unitary Q;\n        \\<forall>x\\<in>S. snd x P && fst x Q \\<tturnstile> fst x (P && Q);\n        \\<forall>x\\<in>S. feasible (fst x);\n        \\<forall>x\\<in>S.\n           \\<forall>Q.\n              unitary Q \\<longrightarrow> unitary (snd x Q)\\<rbrakk>\n       \\<Longrightarrow> Inf_utrans (snd ` S) P &&\n                         Sup_trans (fst ` S)\n                          Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)\n 2. \\<And>P Q t u.\n       \\<lbrakk>unitary P; unitary Q; u P && t Q \\<tturnstile> t (P && Q);\n        feasible t;\n        \\<And>Q. unitary Q \\<Longrightarrow> unitary (u Q)\\<rbrakk>\n       \\<Longrightarrow> wlp (body ;;\n                              Embed\n                               u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P &&\n                         wp (body ;;\n                             Embed\n                              t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          Q \\<tturnstile> wp\n     (body ;;\n      Embed\n       t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     (P && Q)\n 3. \\<And>P Q t t' u u'.\n       \\<lbrakk>unitary P; unitary Q; u P && t Q \\<tturnstile> t (P && Q);\n        equiv_trans t t'; equiv_utrans u u'\\<rbrakk>\n       \\<Longrightarrow> u' P && t' Q \\<tturnstile> t' (P && Q)", "show \"Inf_utrans (snd ` S) P && Sup_trans (fst ` S) Q \\<tturnstile>\n                  Sup_trans (fst ` S) (P && Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_utrans (snd ` S) P &&\n    Sup_trans (fst ` S) Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "proof(cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    Inf_utrans (snd ` S) P &&\n    Sup_trans (fst ` S) Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)\n 2. \\<not> ?P \\<Longrightarrow>\n    Inf_utrans (snd ` S) P &&\n    Sup_trans (fst ` S) Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "assume \"S = {}\""], ["proof (state)\nthis:\n  S = {}\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    Inf_utrans (snd ` S) P &&\n    Sup_trans (fst ` S) Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)\n 2. \\<not> ?P \\<Longrightarrow>\n    Inf_utrans (snd ` S) P &&\n    Sup_trans (fst ` S) Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "thus ?thesis"], ["proof (prove)\nusing this:\n  S = {}\n\ngoal (1 subgoal):\n 1. Inf_utrans (snd ` S) P &&\n    Sup_trans (fst ` S) Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "by(simp add:Inf_trans_def Sup_trans_def Inf_utrans_def\n                  Inf_exp_def Sup_exp_def exp_conj_def)"], ["proof (state)\nthis:\n  Inf_utrans (snd ` S) P &&\n  Sup_trans (fst ` S) Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    Inf_utrans (snd ` S) P &&\n    Sup_trans (fst ` S) Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    Inf_utrans (snd ` S) P &&\n    Sup_trans (fst ` S) Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "assume ne: \"S \\<noteq> {}\""], ["proof (state)\nthis:\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    Inf_utrans (snd ` S) P &&\n    Sup_trans (fst ` S) Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "let \"?f s\" = \"1 + Sup_trans (fst ` S) (P && Q) s - Inf_utrans (snd ` S) P s\""], ["proof (state)\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    Inf_utrans (snd ` S) P &&\n    Sup_trans (fst ` S) Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "from ne"], ["proof (chain)\npicking this:\n  S \\<noteq> {}", "obtain t where tin: \"t \\<in> fst ` S\""], ["proof (prove)\nusing this:\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>t. t \\<in> fst ` S \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto)"], ["proof (state)\nthis:\n  t \\<in> fst ` S\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    Inf_utrans (snd ` S) P &&\n    Sup_trans (fst ` S) Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "from ne"], ["proof (chain)\npicking this:\n  S \\<noteq> {}", "obtain u where uin: \"u \\<in> snd ` S\""], ["proof (prove)\nusing this:\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>u. u \\<in> snd ` S \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto)"], ["proof (state)\nthis:\n  u \\<in> snd ` S\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    Inf_utrans (snd ` S) P &&\n    Sup_trans (fst ` S) Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "from tin ffst uP uQ"], ["proof (chain)\npicking this:\n  t \\<in> fst ` S\n  \\<forall>x\\<in>S. feasible (fst x)\n  unitary P\n  unitary Q", "have utPQ: \"unitary (t (P && Q))\""], ["proof (prove)\nusing this:\n  t \\<in> fst ` S\n  \\<forall>x\\<in>S. feasible (fst x)\n  unitary P\n  unitary Q\n\ngoal (1 subgoal):\n 1. unitary (t (P && Q))", "by(auto intro:exp_conj_unitary)"], ["proof (state)\nthis:\n  unitary (t (P && Q))\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    Inf_utrans (snd ` S) P &&\n    Sup_trans (fst ` S) Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "hence \"\\<And>s. 0 \\<le> t (P && Q) s\""], ["proof (prove)\nusing this:\n  unitary (t (P && Q))\n\ngoal (1 subgoal):\n 1. \\<And>s. 0 \\<le> t (P && Q) s", "by(auto)"], ["proof (state)\nthis:\n  0 \\<le> t (P && Q) ?s\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    Inf_utrans (snd ` S) P &&\n    Sup_trans (fst ` S) Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "also"], ["proof (state)\nthis:\n  0 \\<le> t (P && Q) ?s\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    Inf_utrans (snd ` S) P &&\n    Sup_trans (fst ` S) Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "{"], ["proof (state)\nthis:\n  0 \\<le> t (P && Q) ?s\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    Inf_utrans (snd ` S) P &&\n    Sup_trans (fst ` S) Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "from ffst tin"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>S. feasible (fst x)\n  t \\<in> fst ` S", "have le: \"le_utrans t (Sup_trans (fst ` S))\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>S. feasible (fst x)\n  t \\<in> fst ` S\n\ngoal (1 subgoal):\n 1. le_utrans t (Sup_trans (fst ` S))", "by(auto intro:Sup_trans_upper)"], ["proof (state)\nthis:\n  le_utrans t (Sup_trans (fst ` S))\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    Inf_utrans (snd ` S) P &&\n    Sup_trans (fst ` S) Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "with uP uQ"], ["proof (chain)\npicking this:\n  unitary P\n  unitary Q\n  le_utrans t (Sup_trans (fst ` S))", "have \"\\<And>s. t (P && Q) s \\<le> Sup_trans (fst ` S) (P && Q) s\""], ["proof (prove)\nusing this:\n  unitary P\n  unitary Q\n  le_utrans t (Sup_trans (fst ` S))\n\ngoal (1 subgoal):\n 1. \\<And>s. t (P && Q) s \\<le> Sup_trans (fst ` S) (P && Q) s", "by(auto intro:exp_conj_unitary)"], ["proof (state)\nthis:\n  t (P && Q) ?s \\<le> Sup_trans (fst ` S) (P && Q) ?s\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    Inf_utrans (snd ` S) P &&\n    Sup_trans (fst ` S) Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "}"], ["proof (state)\nthis:\n  t (P && Q) ?s \\<le> Sup_trans (fst ` S) (P && Q) ?s\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    Inf_utrans (snd ` S) P &&\n    Sup_trans (fst ` S) Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "finally"], ["proof (chain)\npicking this:\n  0 \\<le> Sup_trans (fst ` S) (P && Q) ?s1", "have nn_rhs: \"\\<And>s. 0 \\<le> Sup_trans (fst ` S) (P && Q) s\""], ["proof (prove)\nusing this:\n  0 \\<le> Sup_trans (fst ` S) (P && Q) ?s1\n\ngoal (1 subgoal):\n 1. \\<And>s. 0 \\<le> Sup_trans (fst ` S) (P && Q) s", "."], ["proof (state)\nthis:\n  0 \\<le> Sup_trans (fst ` S) (P && Q) ?s\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    Inf_utrans (snd ` S) P &&\n    Sup_trans (fst ` S) Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "have \"\\<And>R. Inf_utrans (snd ` S) P && R \\<tturnstile> Sup_trans (fst ` S) (P && Q) \\<Longrightarrow> R \\<le> ?f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>R.\n       Inf_utrans (snd ` S) P &&\n       R \\<tturnstile> Sup_trans (fst ` S) (P && Q) \\<Longrightarrow>\n       R \\<tturnstile> \\<lambda>a.\n                          1 + Sup_trans (fst ` S) (P && Q) a -\n                          Inf_utrans (snd ` S) P a", "proof(rule contrapos_pp, assumption)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>R.\n       \\<lbrakk>Inf_utrans (snd ` S) P &&\n                R \\<tturnstile> Sup_trans (fst ` S) (P && Q);\n        \\<not> R \\<tturnstile> \\<lambda>a.\n                                  1 + Sup_trans (fst ` S) (P && Q) a -\n                                  Inf_utrans (snd ` S) P a\\<rbrakk>\n       \\<Longrightarrow> \\<not> Inf_utrans (snd ` S) P &&\n                                R \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "fix R"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>R.\n       \\<lbrakk>Inf_utrans (snd ` S) P &&\n                R \\<tturnstile> Sup_trans (fst ` S) (P && Q);\n        \\<not> R \\<tturnstile> \\<lambda>a.\n                                  1 + Sup_trans (fst ` S) (P && Q) a -\n                                  Inf_utrans (snd ` S) P a\\<rbrakk>\n       \\<Longrightarrow> \\<not> Inf_utrans (snd ` S) P &&\n                                R \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "assume \"\\<not> R \\<le> ?f\""], ["proof (state)\nthis:\n  \\<not> R \\<tturnstile> \\<lambda>a.\n                            1 + Sup_trans (fst ` S) (P && Q) a -\n                            Inf_utrans (snd ` S) P a\n\ngoal (1 subgoal):\n 1. \\<And>R.\n       \\<lbrakk>Inf_utrans (snd ` S) P &&\n                R \\<tturnstile> Sup_trans (fst ` S) (P && Q);\n        \\<not> R \\<tturnstile> \\<lambda>a.\n                                  1 + Sup_trans (fst ` S) (P && Q) a -\n                                  Inf_utrans (snd ` S) P a\\<rbrakk>\n       \\<Longrightarrow> \\<not> Inf_utrans (snd ` S) P &&\n                                R \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "then"], ["proof (chain)\npicking this:\n  \\<not> R \\<tturnstile> \\<lambda>a.\n                            1 + Sup_trans (fst ` S) (P && Q) a -\n                            Inf_utrans (snd ` S) P a", "obtain s where \"\\<not> R s \\<le> ?f s\""], ["proof (prove)\nusing this:\n  \\<not> R \\<tturnstile> \\<lambda>a.\n                            1 + Sup_trans (fst ` S) (P && Q) a -\n                            Inf_utrans (snd ` S) P a\n\ngoal (1 subgoal):\n 1. (\\<And>s.\n        \\<not> R s\n               \\<le> 1 + Sup_trans (fst ` S) (P && Q) s -\n                     Inf_utrans (snd ` S) P s \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by(auto)"], ["proof (state)\nthis:\n  \\<not> R s\n         \\<le> 1 + Sup_trans (fst ` S) (P && Q) s - Inf_utrans (snd ` S) P s\n\ngoal (1 subgoal):\n 1. \\<And>R.\n       \\<lbrakk>Inf_utrans (snd ` S) P &&\n                R \\<tturnstile> Sup_trans (fst ` S) (P && Q);\n        \\<not> R \\<tturnstile> \\<lambda>a.\n                                  1 + Sup_trans (fst ` S) (P && Q) a -\n                                  Inf_utrans (snd ` S) P a\\<rbrakk>\n       \\<Longrightarrow> \\<not> Inf_utrans (snd ` S) P &&\n                                R \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "hence gt: \"?f s < R s\""], ["proof (prove)\nusing this:\n  \\<not> R s\n         \\<le> 1 + Sup_trans (fst ` S) (P && Q) s - Inf_utrans (snd ` S) P s\n\ngoal (1 subgoal):\n 1. 1 + Sup_trans (fst ` S) (P && Q) s - Inf_utrans (snd ` S) P s < R s", "by(simp)"], ["proof (state)\nthis:\n  1 + Sup_trans (fst ` S) (P && Q) s - Inf_utrans (snd ` S) P s < R s\n\ngoal (1 subgoal):\n 1. \\<And>R.\n       \\<lbrakk>Inf_utrans (snd ` S) P &&\n                R \\<tturnstile> Sup_trans (fst ` S) (P && Q);\n        \\<not> R \\<tturnstile> \\<lambda>a.\n                                  1 + Sup_trans (fst ` S) (P && Q) a -\n                                  Inf_utrans (snd ` S) P a\\<rbrakk>\n       \\<Longrightarrow> \\<not> Inf_utrans (snd ` S) P &&\n                                R \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "from nn_rhs"], ["proof (chain)\npicking this:\n  0 \\<le> Sup_trans (fst ` S) (P && Q) ?s", "have g1: \"1 \\<le> 1 + Sup_trans (fst ` S) (P && Q) s\""], ["proof (prove)\nusing this:\n  0 \\<le> Sup_trans (fst ` S) (P && Q) ?s\n\ngoal (1 subgoal):\n 1. 1 \\<le> 1 + Sup_trans (fst ` S) (P && Q) s", "by(auto)"], ["proof (state)\nthis:\n  1 \\<le> 1 + Sup_trans (fst ` S) (P && Q) s\n\ngoal (1 subgoal):\n 1. \\<And>R.\n       \\<lbrakk>Inf_utrans (snd ` S) P &&\n                R \\<tturnstile> Sup_trans (fst ` S) (P && Q);\n        \\<not> R \\<tturnstile> \\<lambda>a.\n                                  1 + Sup_trans (fst ` S) (P && Q) a -\n                                  Inf_utrans (snd ` S) P a\\<rbrakk>\n       \\<Longrightarrow> \\<not> Inf_utrans (snd ` S) P &&\n                                R \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "hence \"Sup_trans (fst ` S) (P && Q) s = Inf_utrans (snd ` S) P s .& ?f s\""], ["proof (prove)\nusing this:\n  1 \\<le> 1 + Sup_trans (fst ` S) (P && Q) s\n\ngoal (1 subgoal):\n 1. Sup_trans (fst ` S) (P && Q) s =\n    Inf_utrans (snd ` S) P s .&\n    (1 + Sup_trans (fst ` S) (P && Q) s - Inf_utrans (snd ` S) P s)", "by(simp add:pconj_def)"], ["proof (state)\nthis:\n  Sup_trans (fst ` S) (P && Q) s =\n  Inf_utrans (snd ` S) P s .&\n  (1 + Sup_trans (fst ` S) (P && Q) s - Inf_utrans (snd ` S) P s)\n\ngoal (1 subgoal):\n 1. \\<And>R.\n       \\<lbrakk>Inf_utrans (snd ` S) P &&\n                R \\<tturnstile> Sup_trans (fst ` S) (P && Q);\n        \\<not> R \\<tturnstile> \\<lambda>a.\n                                  1 + Sup_trans (fst ` S) (P && Q) a -\n                                  Inf_utrans (snd ` S) P a\\<rbrakk>\n       \\<Longrightarrow> \\<not> Inf_utrans (snd ` S) P &&\n                                R \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "also"], ["proof (state)\nthis:\n  Sup_trans (fst ` S) (P && Q) s =\n  Inf_utrans (snd ` S) P s .&\n  (1 + Sup_trans (fst ` S) (P && Q) s - Inf_utrans (snd ` S) P s)\n\ngoal (1 subgoal):\n 1. \\<And>R.\n       \\<lbrakk>Inf_utrans (snd ` S) P &&\n                R \\<tturnstile> Sup_trans (fst ` S) (P && Q);\n        \\<not> R \\<tturnstile> \\<lambda>a.\n                                  1 + Sup_trans (fst ` S) (P && Q) a -\n                                  Inf_utrans (snd ` S) P a\\<rbrakk>\n       \\<Longrightarrow> \\<not> Inf_utrans (snd ` S) P &&\n                                R \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "from g1"], ["proof (chain)\npicking this:\n  1 \\<le> 1 + Sup_trans (fst ` S) (P && Q) s", "have \"... = Inf_utrans (snd ` S) P s + ?f s - 1\""], ["proof (prove)\nusing this:\n  1 \\<le> 1 + Sup_trans (fst ` S) (P && Q) s\n\ngoal (1 subgoal):\n 1. Inf_utrans (snd ` S) P s .&\n    (1 + Sup_trans (fst ` S) (P && Q) s - Inf_utrans (snd ` S) P s) =\n    Inf_utrans (snd ` S) P s +\n    (1 + Sup_trans (fst ` S) (P && Q) s - Inf_utrans (snd ` S) P s) -\n    1", "by(simp)"], ["proof (state)\nthis:\n  Inf_utrans (snd ` S) P s .&\n  (1 + Sup_trans (fst ` S) (P && Q) s - Inf_utrans (snd ` S) P s) =\n  Inf_utrans (snd ` S) P s +\n  (1 + Sup_trans (fst ` S) (P && Q) s - Inf_utrans (snd ` S) P s) -\n  1\n\ngoal (1 subgoal):\n 1. \\<And>R.\n       \\<lbrakk>Inf_utrans (snd ` S) P &&\n                R \\<tturnstile> Sup_trans (fst ` S) (P && Q);\n        \\<not> R \\<tturnstile> \\<lambda>a.\n                                  1 + Sup_trans (fst ` S) (P && Q) a -\n                                  Inf_utrans (snd ` S) P a\\<rbrakk>\n       \\<Longrightarrow> \\<not> Inf_utrans (snd ` S) P &&\n                                R \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "also"], ["proof (state)\nthis:\n  Inf_utrans (snd ` S) P s .&\n  (1 + Sup_trans (fst ` S) (P && Q) s - Inf_utrans (snd ` S) P s) =\n  Inf_utrans (snd ` S) P s +\n  (1 + Sup_trans (fst ` S) (P && Q) s - Inf_utrans (snd ` S) P s) -\n  1\n\ngoal (1 subgoal):\n 1. \\<And>R.\n       \\<lbrakk>Inf_utrans (snd ` S) P &&\n                R \\<tturnstile> Sup_trans (fst ` S) (P && Q);\n        \\<not> R \\<tturnstile> \\<lambda>a.\n                                  1 + Sup_trans (fst ` S) (P && Q) a -\n                                  Inf_utrans (snd ` S) P a\\<rbrakk>\n       \\<Longrightarrow> \\<not> Inf_utrans (snd ` S) P &&\n                                R \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "from gt"], ["proof (chain)\npicking this:\n  1 + Sup_trans (fst ` S) (P && Q) s - Inf_utrans (snd ` S) P s < R s", "have \"... < Inf_utrans (snd ` S) P s + R s - 1\""], ["proof (prove)\nusing this:\n  1 + Sup_trans (fst ` S) (P && Q) s - Inf_utrans (snd ` S) P s < R s\n\ngoal (1 subgoal):\n 1. Inf_utrans (snd ` S) P s +\n    (1 + Sup_trans (fst ` S) (P && Q) s - Inf_utrans (snd ` S) P s) -\n    1\n    < Inf_utrans (snd ` S) P s + R s - 1", "by(simp)"], ["proof (state)\nthis:\n  Inf_utrans (snd ` S) P s +\n  (1 + Sup_trans (fst ` S) (P && Q) s - Inf_utrans (snd ` S) P s) -\n  1\n  < Inf_utrans (snd ` S) P s + R s - 1\n\ngoal (1 subgoal):\n 1. \\<And>R.\n       \\<lbrakk>Inf_utrans (snd ` S) P &&\n                R \\<tturnstile> Sup_trans (fst ` S) (P && Q);\n        \\<not> R \\<tturnstile> \\<lambda>a.\n                                  1 + Sup_trans (fst ` S) (P && Q) a -\n                                  Inf_utrans (snd ` S) P a\\<rbrakk>\n       \\<Longrightarrow> \\<not> Inf_utrans (snd ` S) P &&\n                                R \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "also"], ["proof (state)\nthis:\n  Inf_utrans (snd ` S) P s +\n  (1 + Sup_trans (fst ` S) (P && Q) s - Inf_utrans (snd ` S) P s) -\n  1\n  < Inf_utrans (snd ` S) P s + R s - 1\n\ngoal (1 subgoal):\n 1. \\<And>R.\n       \\<lbrakk>Inf_utrans (snd ` S) P &&\n                R \\<tturnstile> Sup_trans (fst ` S) (P && Q);\n        \\<not> R \\<tturnstile> \\<lambda>a.\n                                  1 + Sup_trans (fst ` S) (P && Q) a -\n                                  Inf_utrans (snd ` S) P a\\<rbrakk>\n       \\<Longrightarrow> \\<not> Inf_utrans (snd ` S) P &&\n                                R \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "{"], ["proof (state)\nthis:\n  Inf_utrans (snd ` S) P s +\n  (1 + Sup_trans (fst ` S) (P && Q) s - Inf_utrans (snd ` S) P s) -\n  1\n  < Inf_utrans (snd ` S) P s + R s - 1\n\ngoal (1 subgoal):\n 1. \\<And>R.\n       \\<lbrakk>Inf_utrans (snd ` S) P &&\n                R \\<tturnstile> Sup_trans (fst ` S) (P && Q);\n        \\<not> R \\<tturnstile> \\<lambda>a.\n                                  1 + Sup_trans (fst ` S) (P && Q) a -\n                                  Inf_utrans (snd ` S) P a\\<rbrakk>\n       \\<Longrightarrow> \\<not> Inf_utrans (snd ` S) P &&\n                                R \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "with g1"], ["proof (chain)\npicking this:\n  1 \\<le> 1 + Sup_trans (fst ` S) (P && Q) s\n  Inf_utrans (snd ` S) P s +\n  (1 + Sup_trans (fst ` S) (P && Q) s - Inf_utrans (snd ` S) P s) -\n  1\n  < Inf_utrans (snd ` S) P s + R s - 1", "have \"1 \\<le> Inf_utrans (snd ` S) P s + R s\""], ["proof (prove)\nusing this:\n  1 \\<le> 1 + Sup_trans (fst ` S) (P && Q) s\n  Inf_utrans (snd ` S) P s +\n  (1 + Sup_trans (fst ` S) (P && Q) s - Inf_utrans (snd ` S) P s) -\n  1\n  < Inf_utrans (snd ` S) P s + R s - 1\n\ngoal (1 subgoal):\n 1. 1 \\<le> Inf_utrans (snd ` S) P s + R s", "by(simp)"], ["proof (state)\nthis:\n  1 \\<le> Inf_utrans (snd ` S) P s + R s\n\ngoal (1 subgoal):\n 1. \\<And>R.\n       \\<lbrakk>Inf_utrans (snd ` S) P &&\n                R \\<tturnstile> Sup_trans (fst ` S) (P && Q);\n        \\<not> R \\<tturnstile> \\<lambda>a.\n                                  1 + Sup_trans (fst ` S) (P && Q) a -\n                                  Inf_utrans (snd ` S) P a\\<rbrakk>\n       \\<Longrightarrow> \\<not> Inf_utrans (snd ` S) P &&\n                                R \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "hence \"Inf_utrans (snd ` S) P s + R s - 1 = Inf_utrans (snd ` S) P s .& R s\""], ["proof (prove)\nusing this:\n  1 \\<le> Inf_utrans (snd ` S) P s + R s\n\ngoal (1 subgoal):\n 1. Inf_utrans (snd ` S) P s + R s - 1 = Inf_utrans (snd ` S) P s .& R s", "by(simp add:pconj_def)"], ["proof (state)\nthis:\n  Inf_utrans (snd ` S) P s + R s - 1 = Inf_utrans (snd ` S) P s .& R s\n\ngoal (1 subgoal):\n 1. \\<And>R.\n       \\<lbrakk>Inf_utrans (snd ` S) P &&\n                R \\<tturnstile> Sup_trans (fst ` S) (P && Q);\n        \\<not> R \\<tturnstile> \\<lambda>a.\n                                  1 + Sup_trans (fst ` S) (P && Q) a -\n                                  Inf_utrans (snd ` S) P a\\<rbrakk>\n       \\<Longrightarrow> \\<not> Inf_utrans (snd ` S) P &&\n                                R \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "}"], ["proof (state)\nthis:\n  Inf_utrans (snd ` S) P s + R s - 1 = Inf_utrans (snd ` S) P s .& R s\n\ngoal (1 subgoal):\n 1. \\<And>R.\n       \\<lbrakk>Inf_utrans (snd ` S) P &&\n                R \\<tturnstile> Sup_trans (fst ` S) (P && Q);\n        \\<not> R \\<tturnstile> \\<lambda>a.\n                                  1 + Sup_trans (fst ` S) (P && Q) a -\n                                  Inf_utrans (snd ` S) P a\\<rbrakk>\n       \\<Longrightarrow> \\<not> Inf_utrans (snd ` S) P &&\n                                R \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "finally"], ["proof (chain)\npicking this:\n  Sup_trans (fst ` S) (P && Q) s < Inf_utrans (snd ` S) P s .& R s", "have \"\\<not> (Inf_utrans (snd ` S) P && R) s \\<le> Sup_trans (fst ` S) (P && Q) s\""], ["proof (prove)\nusing this:\n  Sup_trans (fst ` S) (P && Q) s < Inf_utrans (snd ` S) P s .& R s\n\ngoal (1 subgoal):\n 1. \\<not> (Inf_utrans (snd ` S) P && R) s\n           \\<le> Sup_trans (fst ` S) (P && Q) s", "by(simp add:exp_conj_def)"], ["proof (state)\nthis:\n  \\<not> (Inf_utrans (snd ` S) P && R) s\n         \\<le> Sup_trans (fst ` S) (P && Q) s\n\ngoal (1 subgoal):\n 1. \\<And>R.\n       \\<lbrakk>Inf_utrans (snd ` S) P &&\n                R \\<tturnstile> Sup_trans (fst ` S) (P && Q);\n        \\<not> R \\<tturnstile> \\<lambda>a.\n                                  1 + Sup_trans (fst ` S) (P && Q) a -\n                                  Inf_utrans (snd ` S) P a\\<rbrakk>\n       \\<Longrightarrow> \\<not> Inf_utrans (snd ` S) P &&\n                                R \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "thus \"\\<not> Inf_utrans (snd ` S) P && R \\<tturnstile> Sup_trans (fst ` S) (P && Q)\""], ["proof (prove)\nusing this:\n  \\<not> (Inf_utrans (snd ` S) P && R) s\n         \\<le> Sup_trans (fst ` S) (P && Q) s\n\ngoal (1 subgoal):\n 1. \\<not> Inf_utrans (snd ` S) P &&\n           R \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "by(auto)"], ["proof (state)\nthis:\n  \\<not> Inf_utrans (snd ` S) P &&\n         R \\<tturnstile> Sup_trans (fst ` S) (P && Q)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Inf_utrans (snd ` S) P &&\n  ?R \\<tturnstile> Sup_trans (fst ` S) (P && Q) \\<Longrightarrow>\n  ?R \\<tturnstile> \\<lambda>a.\n                      1 + Sup_trans (fst ` S) (P && Q) a -\n                      Inf_utrans (snd ` S) P a\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    Inf_utrans (snd ` S) P &&\n    Sup_trans (fst ` S) Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "moreover"], ["proof (state)\nthis:\n  Inf_utrans (snd ` S) P &&\n  ?R \\<tturnstile> Sup_trans (fst ` S) (P && Q) \\<Longrightarrow>\n  ?R \\<tturnstile> \\<lambda>a.\n                      1 + Sup_trans (fst ` S) (P && Q) a -\n                      Inf_utrans (snd ` S) P a\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    Inf_utrans (snd ` S) P &&\n    Sup_trans (fst ` S) Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "have \"\\<forall>t\\<in>fst ` S. Inf_utrans (snd ` S) P && t Q  \\<tturnstile> Sup_trans (fst ` S) (P && Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>t\\<in>fst ` S.\n       Inf_utrans (snd ` S) P &&\n       t Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<in> fst ` S \\<Longrightarrow>\n       Inf_utrans (snd ` S) P &&\n       t Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<in> fst ` S \\<Longrightarrow>\n       Inf_utrans (snd ` S) P &&\n       t Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "assume tin: \"t \\<in> fst ` S\""], ["proof (state)\nthis:\n  t \\<in> fst ` S\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<in> fst ` S \\<Longrightarrow>\n       Inf_utrans (snd ` S) P &&\n       t Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "then"], ["proof (chain)\npicking this:\n  t \\<in> fst ` S", "obtain x where xin: \"x \\<in> S\" and fx: \"t = fst x\""], ["proof (prove)\nusing this:\n  t \\<in> fst ` S\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> S; t = fst x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto)"], ["proof (state)\nthis:\n  x \\<in> S\n  t = fst x\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<in> fst ` S \\<Longrightarrow>\n       Inf_utrans (snd ` S) P &&\n       t Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "from xin"], ["proof (chain)\npicking this:\n  x \\<in> S", "have \"snd x \\<in> snd ` S\""], ["proof (prove)\nusing this:\n  x \\<in> S\n\ngoal (1 subgoal):\n 1. snd x \\<in> snd ` S", "by(auto)"], ["proof (state)\nthis:\n  snd x \\<in> snd ` S\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<in> fst ` S \\<Longrightarrow>\n       Inf_utrans (snd ` S) P &&\n       t Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "with uP usnd"], ["proof (chain)\npicking this:\n  unitary P\n  \\<forall>x\\<in>S.\n     \\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)\n  snd x \\<in> snd ` S", "have \"Inf_utrans (snd ` S) P \\<tturnstile> snd x P\""], ["proof (prove)\nusing this:\n  unitary P\n  \\<forall>x\\<in>S.\n     \\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)\n  snd x \\<in> snd ` S\n\ngoal (1 subgoal):\n 1. Inf_utrans (snd ` S) P \\<tturnstile> snd x P", "by(auto intro:le_utransD[OF Inf_utrans_lower])"], ["proof (state)\nthis:\n  Inf_utrans (snd ` S) P \\<tturnstile> snd x P\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<in> fst ` S \\<Longrightarrow>\n       Inf_utrans (snd ` S) P &&\n       t Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "hence \"Inf_utrans (snd ` S) P && fst x Q \\<tturnstile> snd x P && fst x Q\""], ["proof (prove)\nusing this:\n  Inf_utrans (snd ` S) P \\<tturnstile> snd x P\n\ngoal (1 subgoal):\n 1. Inf_utrans (snd ` S) P && fst x Q \\<tturnstile> snd x P && fst x Q", "by(auto intro:entails_frame)"], ["proof (state)\nthis:\n  Inf_utrans (snd ` S) P && fst x Q \\<tturnstile> snd x P && fst x Q\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<in> fst ` S \\<Longrightarrow>\n       Inf_utrans (snd ` S) P &&\n       t Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "also"], ["proof (state)\nthis:\n  Inf_utrans (snd ` S) P && fst x Q \\<tturnstile> snd x P && fst x Q\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<in> fst ` S \\<Longrightarrow>\n       Inf_utrans (snd ` S) P &&\n       t Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "from xin IH"], ["proof (chain)\npicking this:\n  x \\<in> S\n  \\<forall>x\\<in>S. snd x P && fst x Q \\<tturnstile> fst x (P && Q)", "have \"... \\<tturnstile> fst x (P && Q)\""], ["proof (prove)\nusing this:\n  x \\<in> S\n  \\<forall>x\\<in>S. snd x P && fst x Q \\<tturnstile> fst x (P && Q)\n\ngoal (1 subgoal):\n 1. snd x P && fst x Q \\<tturnstile> fst x (P && Q)", "by(auto)"], ["proof (state)\nthis:\n  snd x P && fst x Q \\<tturnstile> fst x (P && Q)\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<in> fst ` S \\<Longrightarrow>\n       Inf_utrans (snd ` S) P &&\n       t Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "also"], ["proof (state)\nthis:\n  snd x P && fst x Q \\<tturnstile> fst x (P && Q)\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<in> fst ` S \\<Longrightarrow>\n       Inf_utrans (snd ` S) P &&\n       t Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "from xin ffst exp_conj_unitary[OF uP uQ]"], ["proof (chain)\npicking this:\n  x \\<in> S\n  \\<forall>x\\<in>S. feasible (fst x)\n  unitary (P && Q)", "have \"... \\<tturnstile> Sup_trans (fst ` S) (P && Q)\""], ["proof (prove)\nusing this:\n  x \\<in> S\n  \\<forall>x\\<in>S. feasible (fst x)\n  unitary (P && Q)\n\ngoal (1 subgoal):\n 1. fst x (P && Q) \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "by(auto intro:le_utransD[OF Sup_trans_upper])"], ["proof (state)\nthis:\n  fst x (P && Q) \\<tturnstile> Sup_trans (fst ` S) (P && Q)\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<in> fst ` S \\<Longrightarrow>\n       Inf_utrans (snd ` S) P &&\n       t Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "finally"], ["proof (chain)\npicking this:\n  Inf_utrans (snd ` S) P &&\n  fst x Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "show \"Inf_utrans (snd ` S) P && t Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)\""], ["proof (prove)\nusing this:\n  Inf_utrans (snd ` S) P &&\n  fst x Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)\n\ngoal (1 subgoal):\n 1. Inf_utrans (snd ` S) P && t Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "by(simp add:fx)"], ["proof (state)\nthis:\n  Inf_utrans (snd ` S) P && t Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>t\\<in>fst ` S.\n     Inf_utrans (snd ` S) P &&\n     t Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    Inf_utrans (snd ` S) P &&\n    Sup_trans (fst ` S) Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "ultimately"], ["proof (chain)\npicking this:\n  Inf_utrans (snd ` S) P &&\n  ?R \\<tturnstile> Sup_trans (fst ` S) (P && Q) \\<Longrightarrow>\n  ?R \\<tturnstile> \\<lambda>a.\n                      1 + Sup_trans (fst ` S) (P && Q) a -\n                      Inf_utrans (snd ` S) P a\n  \\<forall>t\\<in>fst ` S.\n     Inf_utrans (snd ` S) P &&\n     t Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "have bt: \"\\<forall>t\\<in>fst ` S. t Q \\<tturnstile> ?f\""], ["proof (prove)\nusing this:\n  Inf_utrans (snd ` S) P &&\n  ?R \\<tturnstile> Sup_trans (fst ` S) (P && Q) \\<Longrightarrow>\n  ?R \\<tturnstile> \\<lambda>a.\n                      1 + Sup_trans (fst ` S) (P && Q) a -\n                      Inf_utrans (snd ` S) P a\n  \\<forall>t\\<in>fst ` S.\n     Inf_utrans (snd ` S) P &&\n     t Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)\n\ngoal (1 subgoal):\n 1. \\<forall>t\\<in>fst ` S.\n       t Q \\<tturnstile> \\<lambda>a.\n                            1 + Sup_trans (fst ` S) (P && Q) a -\n                            Inf_utrans (snd ` S) P a", "by(blast)"], ["proof (state)\nthis:\n  \\<forall>t\\<in>fst ` S.\n     t Q \\<tturnstile> \\<lambda>a.\n                          1 + Sup_trans (fst ` S) (P && Q) a -\n                          Inf_utrans (snd ` S) P a\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    Inf_utrans (snd ` S) P &&\n    Sup_trans (fst ` S) Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "have \"Sup_trans (fst ` S) Q = Sup_exp {t Q |t. t \\<in> fst ` S}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup_trans (fst ` S) Q = Sup_exp {t Q |t. t \\<in> fst ` S}", "by(simp add:Sup_trans_def)"], ["proof (state)\nthis:\n  Sup_trans (fst ` S) Q = Sup_exp {t Q |t. t \\<in> fst ` S}\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    Inf_utrans (snd ` S) P &&\n    Sup_trans (fst ` S) Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "also"], ["proof (state)\nthis:\n  Sup_trans (fst ` S) Q = Sup_exp {t Q |t. t \\<in> fst ` S}\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    Inf_utrans (snd ` S) P &&\n    Sup_trans (fst ` S) Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "have \"... \\<tturnstile> ?f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup_exp\n     {t Q |t.\n      t \\<in> fst `\n              S} \\<tturnstile> \\<lambda>a.\n                                  1 + Sup_trans (fst ` S) (P && Q) a -\n                                  Inf_utrans (snd ` S) P a", "proof(rule Sup_exp_least)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>Pa\\<in>{t Q |t. t \\<in> fst ` S}.\n       Pa \\<tturnstile> \\<lambda>a.\n                           1 + Sup_trans (fst ` S) (P && Q) a -\n                           Inf_utrans (snd ` S) P a\n 2. nneg\n     (\\<lambda>a.\n         1 + Sup_trans (fst ` S) (P && Q) a - Inf_utrans (snd ` S) P a)", "from bt"], ["proof (chain)\npicking this:\n  \\<forall>t\\<in>fst ` S.\n     t Q \\<tturnstile> \\<lambda>a.\n                          1 + Sup_trans (fst ` S) (P && Q) a -\n                          Inf_utrans (snd ` S) P a", "show \" \\<forall>R\\<in>{t Q |t. t \\<in> fst ` S}. R \\<tturnstile> ?f\""], ["proof (prove)\nusing this:\n  \\<forall>t\\<in>fst ` S.\n     t Q \\<tturnstile> \\<lambda>a.\n                          1 + Sup_trans (fst ` S) (P && Q) a -\n                          Inf_utrans (snd ` S) P a\n\ngoal (1 subgoal):\n 1. \\<forall>R\\<in>{t Q |t. t \\<in> fst ` S}.\n       R \\<tturnstile> \\<lambda>a.\n                          1 + Sup_trans (fst ` S) (P && Q) a -\n                          Inf_utrans (snd ` S) P a", "by(blast)"], ["proof (state)\nthis:\n  \\<forall>R\\<in>{t Q |t. t \\<in> fst ` S}.\n     R \\<tturnstile> \\<lambda>a.\n                        1 + Sup_trans (fst ` S) (P && Q) a -\n                        Inf_utrans (snd ` S) P a\n\ngoal (1 subgoal):\n 1. nneg\n     (\\<lambda>a.\n         1 + Sup_trans (fst ` S) (P && Q) a - Inf_utrans (snd ` S) P a)", "from ne"], ["proof (chain)\npicking this:\n  S \\<noteq> {}", "obtain t where tin: \"t \\<in> fst ` S\""], ["proof (prove)\nusing this:\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. (\\<And>t. t \\<in> fst ` S \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto)"], ["proof (state)\nthis:\n  t \\<in> fst ` S\n\ngoal (1 subgoal):\n 1. nneg\n     (\\<lambda>a.\n         1 + Sup_trans (fst ` S) (P && Q) a - Inf_utrans (snd ` S) P a)", "with ffst uQ"], ["proof (chain)\npicking this:\n  \\<forall>x\\<in>S. feasible (fst x)\n  unitary Q\n  t \\<in> fst ` S", "have \"unitary (t Q)\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>S. feasible (fst x)\n  unitary Q\n  t \\<in> fst ` S\n\ngoal (1 subgoal):\n 1. unitary (t Q)", "by(auto)"], ["proof (state)\nthis:\n  unitary (t Q)\n\ngoal (1 subgoal):\n 1. nneg\n     (\\<lambda>a.\n         1 + Sup_trans (fst ` S) (P && Q) a - Inf_utrans (snd ` S) P a)", "hence \"\\<lambda>s. 0 \\<tturnstile> t Q\""], ["proof (prove)\nusing this:\n  unitary (t Q)\n\ngoal (1 subgoal):\n 1. \\<lambda>s. 0 \\<tturnstile> t Q", "by(auto)"], ["proof (state)\nthis:\n  \\<lambda>s. 0 \\<tturnstile> t Q\n\ngoal (1 subgoal):\n 1. nneg\n     (\\<lambda>a.\n         1 + Sup_trans (fst ` S) (P && Q) a - Inf_utrans (snd ` S) P a)", "also"], ["proof (state)\nthis:\n  \\<lambda>s. 0 \\<tturnstile> t Q\n\ngoal (1 subgoal):\n 1. nneg\n     (\\<lambda>a.\n         1 + Sup_trans (fst ` S) (P && Q) a - Inf_utrans (snd ` S) P a)", "from tin bt"], ["proof (chain)\npicking this:\n  t \\<in> fst ` S\n  \\<forall>t\\<in>fst ` S.\n     t Q \\<tturnstile> \\<lambda>a.\n                          1 + Sup_trans (fst ` S) (P && Q) a -\n                          Inf_utrans (snd ` S) P a", "have \"... \\<tturnstile> ?f\""], ["proof (prove)\nusing this:\n  t \\<in> fst ` S\n  \\<forall>t\\<in>fst ` S.\n     t Q \\<tturnstile> \\<lambda>a.\n                          1 + Sup_trans (fst ` S) (P && Q) a -\n                          Inf_utrans (snd ` S) P a\n\ngoal (1 subgoal):\n 1. t Q \\<tturnstile> \\<lambda>a.\n                         1 + Sup_trans (fst ` S) (P && Q) a -\n                         Inf_utrans (snd ` S) P a", "by(auto)"], ["proof (state)\nthis:\n  t Q \\<tturnstile> \\<lambda>a.\n                       1 + Sup_trans (fst ` S) (P && Q) a -\n                       Inf_utrans (snd ` S) P a\n\ngoal (1 subgoal):\n 1. nneg\n     (\\<lambda>a.\n         1 + Sup_trans (fst ` S) (P && Q) a - Inf_utrans (snd ` S) P a)", "finally"], ["proof (chain)\npicking this:\n  \\<lambda>s.\n     0 \\<tturnstile> \\<lambda>a.\n                        1 + Sup_trans (fst ` S) (P && Q) a -\n                        Inf_utrans (snd ` S) P a", "show \"nneg (\\<lambda>s. 1 + Sup_trans (fst ` S) (P && Q) s -\n                          Inf_utrans (snd ` S) P s)\""], ["proof (prove)\nusing this:\n  \\<lambda>s.\n     0 \\<tturnstile> \\<lambda>a.\n                        1 + Sup_trans (fst ` S) (P && Q) a -\n                        Inf_utrans (snd ` S) P a\n\ngoal (1 subgoal):\n 1. nneg\n     (\\<lambda>s.\n         1 + Sup_trans (fst ` S) (P && Q) s - Inf_utrans (snd ` S) P s)", "by(auto)"], ["proof (state)\nthis:\n  nneg\n   (\\<lambda>s.\n       1 + Sup_trans (fst ` S) (P && Q) s - Inf_utrans (snd ` S) P s)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Sup_exp\n   {t Q |t.\n    t \\<in> fst `\n            S} \\<tturnstile> \\<lambda>a.\n                                1 + Sup_trans (fst ` S) (P && Q) a -\n                                Inf_utrans (snd ` S) P a\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    Inf_utrans (snd ` S) P &&\n    Sup_trans (fst ` S) Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "finally"], ["proof (chain)\npicking this:\n  Sup_trans (fst ` S)\n   Q \\<tturnstile> \\<lambda>a.\n                      1 + Sup_trans (fst ` S) (P && Q) a -\n                      Inf_utrans (snd ` S) P a", "have \"Inf_utrans (snd ` S) P && Sup_trans (fst ` S) Q \\<tturnstile>\n                  Inf_utrans (snd ` S) P && ?f\""], ["proof (prove)\nusing this:\n  Sup_trans (fst ` S)\n   Q \\<tturnstile> \\<lambda>a.\n                      1 + Sup_trans (fst ` S) (P && Q) a -\n                      Inf_utrans (snd ` S) P a\n\ngoal (1 subgoal):\n 1. Inf_utrans (snd ` S) P &&\n    Sup_trans (fst ` S)\n     Q \\<tturnstile> Inf_utrans (snd ` S) P &&\n                     (\\<lambda>a.\n                         1 + Sup_trans (fst ` S) (P && Q) a -\n                         Inf_utrans (snd ` S) P a)", "by(auto intro:entails_frame)"], ["proof (state)\nthis:\n  Inf_utrans (snd ` S) P &&\n  Sup_trans (fst ` S)\n   Q \\<tturnstile> Inf_utrans (snd ` S) P &&\n                   (\\<lambda>a.\n                       1 + Sup_trans (fst ` S) (P && Q) a -\n                       Inf_utrans (snd ` S) P a)\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    Inf_utrans (snd ` S) P &&\n    Sup_trans (fst ` S) Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "also"], ["proof (state)\nthis:\n  Inf_utrans (snd ` S) P &&\n  Sup_trans (fst ` S)\n   Q \\<tturnstile> Inf_utrans (snd ` S) P &&\n                   (\\<lambda>a.\n                       1 + Sup_trans (fst ` S) (P && Q) a -\n                       Inf_utrans (snd ` S) P a)\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    Inf_utrans (snd ` S) P &&\n    Sup_trans (fst ` S) Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "from nn_rhs"], ["proof (chain)\npicking this:\n  0 \\<le> Sup_trans (fst ` S) (P && Q) ?s", "have \"... \\<tturnstile> Sup_trans (fst ` S) (P && Q)\""], ["proof (prove)\nusing this:\n  0 \\<le> Sup_trans (fst ` S) (P && Q) ?s\n\ngoal (1 subgoal):\n 1. Inf_utrans (snd ` S) P &&\n    (\\<lambda>a.\n        1 + Sup_trans (fst ` S) (P && Q) a -\n        Inf_utrans (snd ` S) P a) \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "by(simp add:exp_conj_def pconj_def)"], ["proof (state)\nthis:\n  Inf_utrans (snd ` S) P &&\n  (\\<lambda>a.\n      1 + Sup_trans (fst ` S) (P && Q) a -\n      Inf_utrans (snd ` S) P a) \\<tturnstile> Sup_trans (fst ` S) (P && Q)\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    Inf_utrans (snd ` S) P &&\n    Sup_trans (fst ` S) Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "finally"], ["proof (chain)\npicking this:\n  Inf_utrans (snd ` S) P &&\n  Sup_trans (fst ` S) Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "show ?thesis"], ["proof (prove)\nusing this:\n  Inf_utrans (snd ` S) P &&\n  Sup_trans (fst ` S) Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)\n\ngoal (1 subgoal):\n 1. Inf_utrans (snd ` S) P &&\n    Sup_trans (fst ` S) Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)", "."], ["proof (state)\nthis:\n  Inf_utrans (snd ` S) P &&\n  Sup_trans (fst ` S) Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Inf_utrans (snd ` S) P &&\n  Sup_trans (fst ` S) Q \\<tturnstile> Sup_trans (fst ` S) (P && Q)\n\ngoal (2 subgoals):\n 1. \\<And>P Q t u.\n       \\<lbrakk>unitary P; unitary Q; u P && t Q \\<tturnstile> t (P && Q);\n        feasible t;\n        \\<And>Q. unitary Q \\<Longrightarrow> unitary (u Q)\\<rbrakk>\n       \\<Longrightarrow> wlp (body ;;\n                              Embed\n                               u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P &&\n                         wp (body ;;\n                             Embed\n                              t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          Q \\<tturnstile> wp\n     (body ;;\n      Embed\n       t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     (P && Q)\n 2. \\<And>P Q t t' u u'.\n       \\<lbrakk>unitary P; unitary Q; u P && t Q \\<tturnstile> t (P && Q);\n        equiv_trans t t'; equiv_utrans u u'\\<rbrakk>\n       \\<Longrightarrow> u' P && t' Q \\<tturnstile> t' (P && Q)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P Q t u.\n       \\<lbrakk>unitary P; unitary Q; u P && t Q \\<tturnstile> t (P && Q);\n        feasible t;\n        \\<And>Q. unitary Q \\<Longrightarrow> unitary (u Q)\\<rbrakk>\n       \\<Longrightarrow> wlp (body ;;\n                              Embed\n                               u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P &&\n                         wp (body ;;\n                             Embed\n                              t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          Q \\<tturnstile> wp\n     (body ;;\n      Embed\n       t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     (P && Q)\n 2. \\<And>P Q t t' u u'.\n       \\<lbrakk>unitary P; unitary Q; u P && t Q \\<tturnstile> t (P && Q);\n        equiv_trans t t'; equiv_utrans u u'\\<rbrakk>\n       \\<Longrightarrow> u' P && t' Q \\<tturnstile> t' (P && Q)", "fix P Q::\"'s expect\" and t u::\"'s trans\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P Q t u.\n       \\<lbrakk>unitary P; unitary Q; u P && t Q \\<tturnstile> t (P && Q);\n        feasible t;\n        \\<And>Q. unitary Q \\<Longrightarrow> unitary (u Q)\\<rbrakk>\n       \\<Longrightarrow> wlp (body ;;\n                              Embed\n                               u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P &&\n                         wp (body ;;\n                             Embed\n                              t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          Q \\<tturnstile> wp\n     (body ;;\n      Embed\n       t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     (P && Q)\n 2. \\<And>P Q t t' u u'.\n       \\<lbrakk>unitary P; unitary Q; u P && t Q \\<tturnstile> t (P && Q);\n        equiv_trans t t'; equiv_utrans u u'\\<rbrakk>\n       \\<Longrightarrow> u' P && t' Q \\<tturnstile> t' (P && Q)", "assume uP: \"unitary P\" and uQ: \"unitary Q\"\n     and ft: \"feasible t\"\n     and uu: \"\\<And>Q. unitary Q \\<Longrightarrow> unitary (u Q)\"\n     and IH: \"u P && t Q \\<tturnstile> t (P && Q)\""], ["proof (state)\nthis:\n  unitary P\n  unitary Q\n  feasible t\n  unitary ?Q \\<Longrightarrow> unitary (u ?Q)\n  u P && t Q \\<tturnstile> t (P && Q)\n\ngoal (2 subgoals):\n 1. \\<And>P Q t u.\n       \\<lbrakk>unitary P; unitary Q; u P && t Q \\<tturnstile> t (P && Q);\n        feasible t;\n        \\<And>Q. unitary Q \\<Longrightarrow> unitary (u Q)\\<rbrakk>\n       \\<Longrightarrow> wlp (body ;;\n                              Embed\n                               u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P &&\n                         wp (body ;;\n                             Embed\n                              t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          Q \\<tturnstile> wp\n     (body ;;\n      Embed\n       t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     (P && Q)\n 2. \\<And>P Q t t' u u'.\n       \\<lbrakk>unitary P; unitary Q; u P && t Q \\<tturnstile> t (P && Q);\n        equiv_trans t t'; equiv_utrans u u'\\<rbrakk>\n       \\<Longrightarrow> u' P && t' Q \\<tturnstile> t' (P && Q)", "show \"wlp (body ;; Embed u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) P &&\n        wp  (body ;; Embed t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) Q \\<tturnstile>\n        wp  (body ;; Embed t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) (P && Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wlp (body ;;\n         Embed\n          u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     P &&\n    wp (body ;;\n        Embed\n         t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     Q \\<tturnstile> wp (body ;;\n                         Embed\n                          t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                      (P && Q)", "proof(rule le_funI, simp add:wp_eval exp_conj_def pconj_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wlp body (u P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x +\n       (\\<guillemotleft> G \\<guillemotright> x * wp body (t Q) x +\n        (1 - \\<guillemotleft> G \\<guillemotright> x) * Q x) \\<ominus>\n       1\n       \\<le> \\<guillemotleft> G \\<guillemotright> x *\n             wp body (t (\\<lambda>s. P s + Q s \\<ominus> 1)) x +\n             (1 - \\<guillemotleft> G \\<guillemotright> x) *\n             (P x + Q x \\<ominus> 1)", "fix s::'s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wlp body (u P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x +\n       (\\<guillemotleft> G \\<guillemotright> x * wp body (t Q) x +\n        (1 - \\<guillemotleft> G \\<guillemotright> x) * Q x) \\<ominus>\n       1\n       \\<le> \\<guillemotleft> G \\<guillemotright> x *\n             wp body (t (\\<lambda>s. P s + Q s \\<ominus> 1)) x +\n             (1 - \\<guillemotleft> G \\<guillemotright> x) *\n             (P x + Q x \\<ominus> 1)", "have \"\\<guillemotleft> G \\<guillemotright> s * wlp body (u P) s + (1 - \\<guillemotleft> G \\<guillemotright> s) * P s +\n          (\\<guillemotleft> G \\<guillemotright> s * wp body (t Q) s + (1 - \\<guillemotleft> G \\<guillemotright> s) * Q s) \\<ominus> 1 =\n          (\\<guillemotleft> G \\<guillemotright> s * wlp body (u P) s + \\<guillemotleft> G \\<guillemotright> s * wp body (t Q) s) +\n           ((1 - \\<guillemotleft> G \\<guillemotright> s) * P s + (1 - \\<guillemotleft> G \\<guillemotright> s) * Q s) \\<ominus> (\\<guillemotleft>G\\<guillemotright> s + (1 - \\<guillemotleft>G\\<guillemotright> s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wlp body (u P) s +\n    (1 - \\<guillemotleft> G \\<guillemotright> s) * P s +\n    (\\<guillemotleft> G \\<guillemotright> s * wp body (t Q) s +\n     (1 - \\<guillemotleft> G \\<guillemotright> s) * Q s) \\<ominus>\n    1 =\n    \\<guillemotleft> G \\<guillemotright> s * wlp body (u P) s +\n    \\<guillemotleft> G \\<guillemotright> s * wp body (t Q) s +\n    ((1 - \\<guillemotleft> G \\<guillemotright> s) * P s +\n     (1 - \\<guillemotleft> G \\<guillemotright> s) * Q s) \\<ominus>\n    \\<guillemotleft> G \\<guillemotright> s +\n    (1 - \\<guillemotleft> G \\<guillemotright> s)", "by(simp add:ac_simps)"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wlp body (u P) s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * P s +\n  (\\<guillemotleft> G \\<guillemotright> s * wp body (t Q) s +\n   (1 - \\<guillemotleft> G \\<guillemotright> s) * Q s) \\<ominus>\n  1 =\n  \\<guillemotleft> G \\<guillemotright> s * wlp body (u P) s +\n  \\<guillemotleft> G \\<guillemotright> s * wp body (t Q) s +\n  ((1 - \\<guillemotleft> G \\<guillemotright> s) * P s +\n   (1 - \\<guillemotleft> G \\<guillemotright> s) * Q s) \\<ominus>\n  \\<guillemotleft> G \\<guillemotright> s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wlp body (u P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x +\n       (\\<guillemotleft> G \\<guillemotright> x * wp body (t Q) x +\n        (1 - \\<guillemotleft> G \\<guillemotright> x) * Q x) \\<ominus>\n       1\n       \\<le> \\<guillemotleft> G \\<guillemotright> x *\n             wp body (t (\\<lambda>s. P s + Q s \\<ominus> 1)) x +\n             (1 - \\<guillemotleft> G \\<guillemotright> x) *\n             (P x + Q x \\<ominus> 1)", "also"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wlp body (u P) s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * P s +\n  (\\<guillemotleft> G \\<guillemotright> s * wp body (t Q) s +\n   (1 - \\<guillemotleft> G \\<guillemotright> s) * Q s) \\<ominus>\n  1 =\n  \\<guillemotleft> G \\<guillemotright> s * wlp body (u P) s +\n  \\<guillemotleft> G \\<guillemotright> s * wp body (t Q) s +\n  ((1 - \\<guillemotleft> G \\<guillemotright> s) * P s +\n   (1 - \\<guillemotleft> G \\<guillemotright> s) * Q s) \\<ominus>\n  \\<guillemotleft> G \\<guillemotright> s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wlp body (u P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x +\n       (\\<guillemotleft> G \\<guillemotright> x * wp body (t Q) x +\n        (1 - \\<guillemotleft> G \\<guillemotright> x) * Q x) \\<ominus>\n       1\n       \\<le> \\<guillemotleft> G \\<guillemotright> x *\n             wp body (t (\\<lambda>s. P s + Q s \\<ominus> 1)) x +\n             (1 - \\<guillemotleft> G \\<guillemotright> x) *\n             (P x + Q x \\<ominus> 1)", "have \"... \\<le>\n          (\\<guillemotleft> G \\<guillemotright> s * wlp body (u P) s + \\<guillemotleft> G \\<guillemotright> s * wp body (t Q) s \\<ominus> \\<guillemotleft>G\\<guillemotright> s) +\n           ((1 - \\<guillemotleft> G \\<guillemotright> s) * P s + (1 - \\<guillemotleft> G \\<guillemotright> s) * Q s \\<ominus> (1 - \\<guillemotleft>G\\<guillemotright> s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wlp body (u P) s +\n    \\<guillemotleft> G \\<guillemotright> s * wp body (t Q) s +\n    ((1 - \\<guillemotleft> G \\<guillemotright> s) * P s +\n     (1 - \\<guillemotleft> G \\<guillemotright> s) * Q s) \\<ominus>\n    \\<guillemotleft> G \\<guillemotright> s +\n    (1 - \\<guillemotleft> G \\<guillemotright> s)\n    \\<le> (\\<guillemotleft> G \\<guillemotright> s * wlp body (u P) s +\n           \\<guillemotleft> G \\<guillemotright> s *\n           wp body (t Q) s \\<ominus>\n           \\<guillemotleft> G \\<guillemotright> s) +\n          ((1 - \\<guillemotleft> G \\<guillemotright> s) * P s +\n           (1 - \\<guillemotleft> G \\<guillemotright> s) * Q s \\<ominus>\n           1 - \\<guillemotleft> G \\<guillemotright> s)", "by(rule tminus_add_mono)"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wlp body (u P) s +\n  \\<guillemotleft> G \\<guillemotright> s * wp body (t Q) s +\n  ((1 - \\<guillemotleft> G \\<guillemotright> s) * P s +\n   (1 - \\<guillemotleft> G \\<guillemotright> s) * Q s) \\<ominus>\n  \\<guillemotleft> G \\<guillemotright> s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s)\n  \\<le> (\\<guillemotleft> G \\<guillemotright> s * wlp body (u P) s +\n         \\<guillemotleft> G \\<guillemotright> s * wp body (t Q) s \\<ominus>\n         \\<guillemotleft> G \\<guillemotright> s) +\n        ((1 - \\<guillemotleft> G \\<guillemotright> s) * P s +\n         (1 - \\<guillemotleft> G \\<guillemotright> s) * Q s \\<ominus>\n         1 - \\<guillemotleft> G \\<guillemotright> s)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wlp body (u P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x +\n       (\\<guillemotleft> G \\<guillemotright> x * wp body (t Q) x +\n        (1 - \\<guillemotleft> G \\<guillemotright> x) * Q x) \\<ominus>\n       1\n       \\<le> \\<guillemotleft> G \\<guillemotright> x *\n             wp body (t (\\<lambda>s. P s + Q s \\<ominus> 1)) x +\n             (1 - \\<guillemotleft> G \\<guillemotright> x) *\n             (P x + Q x \\<ominus> 1)", "also"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wlp body (u P) s +\n  \\<guillemotleft> G \\<guillemotright> s * wp body (t Q) s +\n  ((1 - \\<guillemotleft> G \\<guillemotright> s) * P s +\n   (1 - \\<guillemotleft> G \\<guillemotright> s) * Q s) \\<ominus>\n  \\<guillemotleft> G \\<guillemotright> s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s)\n  \\<le> (\\<guillemotleft> G \\<guillemotright> s * wlp body (u P) s +\n         \\<guillemotleft> G \\<guillemotright> s * wp body (t Q) s \\<ominus>\n         \\<guillemotleft> G \\<guillemotright> s) +\n        ((1 - \\<guillemotleft> G \\<guillemotright> s) * P s +\n         (1 - \\<guillemotleft> G \\<guillemotright> s) * Q s \\<ominus>\n         1 - \\<guillemotleft> G \\<guillemotright> s)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wlp body (u P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x +\n       (\\<guillemotleft> G \\<guillemotright> x * wp body (t Q) x +\n        (1 - \\<guillemotleft> G \\<guillemotright> x) * Q x) \\<ominus>\n       1\n       \\<le> \\<guillemotleft> G \\<guillemotright> x *\n             wp body (t (\\<lambda>s. P s + Q s \\<ominus> 1)) x +\n             (1 - \\<guillemotleft> G \\<guillemotright> x) *\n             (P x + Q x \\<ominus> 1)", "have \"... =\n          \\<guillemotleft> G \\<guillemotright> s * (wlp body (u P) s + wp body (t Q) s \\<ominus> 1) +\n           (1 - \\<guillemotleft> G \\<guillemotright> s) * (P s + Q s \\<ominus> 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<guillemotleft> G \\<guillemotright> s * wlp body (u P) s +\n     \\<guillemotleft> G \\<guillemotright> s * wp body (t Q) s \\<ominus>\n     \\<guillemotleft> G \\<guillemotright> s) +\n    ((1 - \\<guillemotleft> G \\<guillemotright> s) * P s +\n     (1 - \\<guillemotleft> G \\<guillemotright> s) * Q s \\<ominus>\n     1 - \\<guillemotleft> G \\<guillemotright> s) =\n    \\<guillemotleft> G \\<guillemotright> s *\n    (wlp body (u P) s + wp body (t Q) s \\<ominus> 1) +\n    (1 - \\<guillemotleft> G \\<guillemotright> s) * (P s + Q s \\<ominus> 1)", "by(simp add:tminus_left_distrib distrib_left)"], ["proof (state)\nthis:\n  (\\<guillemotleft> G \\<guillemotright> s * wlp body (u P) s +\n   \\<guillemotleft> G \\<guillemotright> s * wp body (t Q) s \\<ominus>\n   \\<guillemotleft> G \\<guillemotright> s) +\n  ((1 - \\<guillemotleft> G \\<guillemotright> s) * P s +\n   (1 - \\<guillemotleft> G \\<guillemotright> s) * Q s \\<ominus>\n   1 - \\<guillemotleft> G \\<guillemotright> s) =\n  \\<guillemotleft> G \\<guillemotright> s *\n  (wlp body (u P) s + wp body (t Q) s \\<ominus> 1) +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * (P s + Q s \\<ominus> 1)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wlp body (u P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x +\n       (\\<guillemotleft> G \\<guillemotright> x * wp body (t Q) x +\n        (1 - \\<guillemotleft> G \\<guillemotright> x) * Q x) \\<ominus>\n       1\n       \\<le> \\<guillemotleft> G \\<guillemotright> x *\n             wp body (t (\\<lambda>s. P s + Q s \\<ominus> 1)) x +\n             (1 - \\<guillemotleft> G \\<guillemotright> x) *\n             (P x + Q x \\<ominus> 1)", "also"], ["proof (state)\nthis:\n  (\\<guillemotleft> G \\<guillemotright> s * wlp body (u P) s +\n   \\<guillemotleft> G \\<guillemotright> s * wp body (t Q) s \\<ominus>\n   \\<guillemotleft> G \\<guillemotright> s) +\n  ((1 - \\<guillemotleft> G \\<guillemotright> s) * P s +\n   (1 - \\<guillemotleft> G \\<guillemotright> s) * Q s \\<ominus>\n   1 - \\<guillemotleft> G \\<guillemotright> s) =\n  \\<guillemotleft> G \\<guillemotright> s *\n  (wlp body (u P) s + wp body (t Q) s \\<ominus> 1) +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * (P s + Q s \\<ominus> 1)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wlp body (u P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x +\n       (\\<guillemotleft> G \\<guillemotright> x * wp body (t Q) x +\n        (1 - \\<guillemotleft> G \\<guillemotright> x) * Q x) \\<ominus>\n       1\n       \\<le> \\<guillemotleft> G \\<guillemotright> x *\n             wp body (t (\\<lambda>s. P s + Q s \\<ominus> 1)) x +\n             (1 - \\<guillemotleft> G \\<guillemotright> x) *\n             (P x + Q x \\<ominus> 1)", "{"], ["proof (state)\nthis:\n  (\\<guillemotleft> G \\<guillemotright> s * wlp body (u P) s +\n   \\<guillemotleft> G \\<guillemotright> s * wp body (t Q) s \\<ominus>\n   \\<guillemotleft> G \\<guillemotright> s) +\n  ((1 - \\<guillemotleft> G \\<guillemotright> s) * P s +\n   (1 - \\<guillemotleft> G \\<guillemotright> s) * Q s \\<ominus>\n   1 - \\<guillemotleft> G \\<guillemotright> s) =\n  \\<guillemotleft> G \\<guillemotright> s *\n  (wlp body (u P) s + wp body (t Q) s \\<ominus> 1) +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * (P s + Q s \\<ominus> 1)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wlp body (u P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x +\n       (\\<guillemotleft> G \\<guillemotright> x * wp body (t Q) x +\n        (1 - \\<guillemotleft> G \\<guillemotright> x) * Q x) \\<ominus>\n       1\n       \\<le> \\<guillemotleft> G \\<guillemotright> x *\n             wp body (t (\\<lambda>s. P s + Q s \\<ominus> 1)) x +\n             (1 - \\<guillemotleft> G \\<guillemotright> x) *\n             (P x + Q x \\<ominus> 1)", "from uP uQ ft uu"], ["proof (chain)\npicking this:\n  unitary P\n  unitary Q\n  feasible t\n  unitary ?Q \\<Longrightarrow> unitary (u ?Q)", "have \"wlp body (u P) && wp body (t Q) \\<tturnstile> wp body (u P && t Q)\""], ["proof (prove)\nusing this:\n  unitary P\n  unitary Q\n  feasible t\n  unitary ?Q \\<Longrightarrow> unitary (u ?Q)\n\ngoal (1 subgoal):\n 1. wlp body (u P) && wp body (t Q) \\<tturnstile> wp body (u P && t Q)", "by(auto intro:sub_distrib_pconjD[OF sdp_body])"], ["proof (state)\nthis:\n  wlp body (u P) && wp body (t Q) \\<tturnstile> wp body (u P && t Q)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wlp body (u P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x +\n       (\\<guillemotleft> G \\<guillemotright> x * wp body (t Q) x +\n        (1 - \\<guillemotleft> G \\<guillemotright> x) * Q x) \\<ominus>\n       1\n       \\<le> \\<guillemotleft> G \\<guillemotright> x *\n             wp body (t (\\<lambda>s. P s + Q s \\<ominus> 1)) x +\n             (1 - \\<guillemotleft> G \\<guillemotright> x) *\n             (P x + Q x \\<ominus> 1)", "also"], ["proof (state)\nthis:\n  wlp body (u P) && wp body (t Q) \\<tturnstile> wp body (u P && t Q)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wlp body (u P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x +\n       (\\<guillemotleft> G \\<guillemotright> x * wp body (t Q) x +\n        (1 - \\<guillemotleft> G \\<guillemotright> x) * Q x) \\<ominus>\n       1\n       \\<le> \\<guillemotleft> G \\<guillemotright> x *\n             wp body (t (\\<lambda>s. P s + Q s \\<ominus> 1)) x +\n             (1 - \\<guillemotleft> G \\<guillemotright> x) *\n             (P x + Q x \\<ominus> 1)", "from IH unitary_sound[OF uP] unitary_sound[OF uQ] ft\n                   unitary_sound[OF uu[OF uP]]"], ["proof (chain)\npicking this:\n  u P && t Q \\<tturnstile> t (P && Q)\n  sound P\n  sound Q\n  feasible t\n  sound (u P)", "have \"\\<dots> \\<le> wp body (t (P && Q))\""], ["proof (prove)\nusing this:\n  u P && t Q \\<tturnstile> t (P && Q)\n  sound P\n  sound Q\n  feasible t\n  sound (u P)\n\ngoal (1 subgoal):\n 1. wp body (u P && t Q) \\<tturnstile> wp body (t (P && Q))", "by(blast intro!:mono_transD[OF healthy_monoD, OF hwp] exp_conj_sound)"], ["proof (state)\nthis:\n  wp body (u P && t Q) \\<tturnstile> wp body (t (P && Q))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wlp body (u P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x +\n       (\\<guillemotleft> G \\<guillemotright> x * wp body (t Q) x +\n        (1 - \\<guillemotleft> G \\<guillemotright> x) * Q x) \\<ominus>\n       1\n       \\<le> \\<guillemotleft> G \\<guillemotright> x *\n             wp body (t (\\<lambda>s. P s + Q s \\<ominus> 1)) x +\n             (1 - \\<guillemotleft> G \\<guillemotright> x) *\n             (P x + Q x \\<ominus> 1)", "finally"], ["proof (chain)\npicking this:\n  wlp body (u P) && wp body (t Q) \\<tturnstile> wp body (t (P && Q))", "have \"wlp body (u P) s + wp body (t Q) s \\<ominus> 1 \\<le>\n                    wp body (t (\\<lambda>s. P s + Q s \\<ominus> 1)) s\""], ["proof (prove)\nusing this:\n  wlp body (u P) && wp body (t Q) \\<tturnstile> wp body (t (P && Q))\n\ngoal (1 subgoal):\n 1. wlp body (u P) s + wp body (t Q) s \\<ominus> 1\n    \\<le> wp body (t (\\<lambda>s. P s + Q s \\<ominus> 1)) s", "by(auto simp:exp_conj_def pconj_def)"], ["proof (state)\nthis:\n  wlp body (u P) s + wp body (t Q) s \\<ominus> 1\n  \\<le> wp body (t (\\<lambda>s. P s + Q s \\<ominus> 1)) s\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wlp body (u P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x +\n       (\\<guillemotleft> G \\<guillemotright> x * wp body (t Q) x +\n        (1 - \\<guillemotleft> G \\<guillemotright> x) * Q x) \\<ominus>\n       1\n       \\<le> \\<guillemotleft> G \\<guillemotright> x *\n             wp body (t (\\<lambda>s. P s + Q s \\<ominus> 1)) x +\n             (1 - \\<guillemotleft> G \\<guillemotright> x) *\n             (P x + Q x \\<ominus> 1)", "hence \"\\<guillemotleft> G \\<guillemotright> s * (wlp body (u P) s + wp body (t Q) s \\<ominus> 1) +\n             (1 - \\<guillemotleft> G \\<guillemotright> s) * (P s + Q s \\<ominus> 1) \\<le>\n             \\<guillemotleft> G \\<guillemotright> s * wp body (t (\\<lambda>s. P s + Q s \\<ominus> 1)) s +\n             (1 - \\<guillemotleft> G \\<guillemotright> s) * (P s + Q s \\<ominus> 1)\""], ["proof (prove)\nusing this:\n  wlp body (u P) s + wp body (t Q) s \\<ominus> 1\n  \\<le> wp body (t (\\<lambda>s. P s + Q s \\<ominus> 1)) s\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s *\n    (wlp body (u P) s + wp body (t Q) s \\<ominus> 1) +\n    (1 - \\<guillemotleft> G \\<guillemotright> s) * (P s + Q s \\<ominus> 1)\n    \\<le> \\<guillemotleft> G \\<guillemotright> s *\n          wp body (t (\\<lambda>s. P s + Q s \\<ominus> 1)) s +\n          (1 - \\<guillemotleft> G \\<guillemotright> s) *\n          (P s + Q s \\<ominus> 1)", "by(auto intro:add_right_mono mult_left_mono)"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s *\n  (wlp body (u P) s + wp body (t Q) s \\<ominus> 1) +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * (P s + Q s \\<ominus> 1)\n  \\<le> \\<guillemotleft> G \\<guillemotright> s *\n        wp body (t (\\<lambda>s. P s + Q s \\<ominus> 1)) s +\n        (1 - \\<guillemotleft> G \\<guillemotright> s) *\n        (P s + Q s \\<ominus> 1)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wlp body (u P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x +\n       (\\<guillemotleft> G \\<guillemotright> x * wp body (t Q) x +\n        (1 - \\<guillemotleft> G \\<guillemotright> x) * Q x) \\<ominus>\n       1\n       \\<le> \\<guillemotleft> G \\<guillemotright> x *\n             wp body (t (\\<lambda>s. P s + Q s \\<ominus> 1)) x +\n             (1 - \\<guillemotleft> G \\<guillemotright> x) *\n             (P x + Q x \\<ominus> 1)", "}"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s *\n  (wlp body (u P) s + wp body (t Q) s \\<ominus> 1) +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * (P s + Q s \\<ominus> 1)\n  \\<le> \\<guillemotleft> G \\<guillemotright> s *\n        wp body (t (\\<lambda>s. P s + Q s \\<ominus> 1)) s +\n        (1 - \\<guillemotleft> G \\<guillemotright> s) *\n        (P s + Q s \\<ominus> 1)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wlp body (u P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x +\n       (\\<guillemotleft> G \\<guillemotright> x * wp body (t Q) x +\n        (1 - \\<guillemotleft> G \\<guillemotright> x) * Q x) \\<ominus>\n       1\n       \\<le> \\<guillemotleft> G \\<guillemotright> x *\n             wp body (t (\\<lambda>s. P s + Q s \\<ominus> 1)) x +\n             (1 - \\<guillemotleft> G \\<guillemotright> x) *\n             (P x + Q x \\<ominus> 1)", "finally"], ["proof (chain)\npicking this:\n  \\<guillemotleft> G \\<guillemotright> s * wlp body (u P) s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * P s +\n  (\\<guillemotleft> G \\<guillemotright> s * wp body (t Q) s +\n   (1 - \\<guillemotleft> G \\<guillemotright> s) * Q s) \\<ominus>\n  1\n  \\<le> \\<guillemotleft> G \\<guillemotright> s *\n        wp body (t (\\<lambda>s. P s + Q s \\<ominus> 1)) s +\n        (1 - \\<guillemotleft> G \\<guillemotright> s) *\n        (P s + Q s \\<ominus> 1)", "show \"\\<guillemotleft> G \\<guillemotright> s * wlp body (u P) s + (1 - \\<guillemotleft> G \\<guillemotright> s) * P s +\n          (\\<guillemotleft> G \\<guillemotright> s * wp body (t Q) s + (1 - \\<guillemotleft> G \\<guillemotright> s) * Q s) \\<ominus> 1 \\<le>\n          \\<guillemotleft> G \\<guillemotright> s * wp body (t (\\<lambda>s. P s + Q s \\<ominus> 1)) s +\n          (1 - \\<guillemotleft> G \\<guillemotright> s) * (P s + Q s \\<ominus> 1)\""], ["proof (prove)\nusing this:\n  \\<guillemotleft> G \\<guillemotright> s * wlp body (u P) s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * P s +\n  (\\<guillemotleft> G \\<guillemotright> s * wp body (t Q) s +\n   (1 - \\<guillemotleft> G \\<guillemotright> s) * Q s) \\<ominus>\n  1\n  \\<le> \\<guillemotleft> G \\<guillemotright> s *\n        wp body (t (\\<lambda>s. P s + Q s \\<ominus> 1)) s +\n        (1 - \\<guillemotleft> G \\<guillemotright> s) *\n        (P s + Q s \\<ominus> 1)\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wlp body (u P) s +\n    (1 - \\<guillemotleft> G \\<guillemotright> s) * P s +\n    (\\<guillemotleft> G \\<guillemotright> s * wp body (t Q) s +\n     (1 - \\<guillemotleft> G \\<guillemotright> s) * Q s) \\<ominus>\n    1\n    \\<le> \\<guillemotleft> G \\<guillemotright> s *\n          wp body (t (\\<lambda>s. P s + Q s \\<ominus> 1)) s +\n          (1 - \\<guillemotleft> G \\<guillemotright> s) *\n          (P s + Q s \\<ominus> 1)", "."], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wlp body (u P) s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * P s +\n  (\\<guillemotleft> G \\<guillemotright> s * wp body (t Q) s +\n   (1 - \\<guillemotleft> G \\<guillemotright> s) * Q s) \\<ominus>\n  1\n  \\<le> \\<guillemotleft> G \\<guillemotright> s *\n        wp body (t (\\<lambda>s. P s + Q s \\<ominus> 1)) s +\n        (1 - \\<guillemotleft> G \\<guillemotright> s) *\n        (P s + Q s \\<ominus> 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  wlp (body ;;\n       Embed\n        u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n   P &&\n  wp (body ;;\n      Embed\n       t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n   Q \\<tturnstile> wp (body ;;\n                       Embed\n                        t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                    (P && Q)\n\ngoal (1 subgoal):\n 1. \\<And>P Q t t' u u'.\n       \\<lbrakk>unitary P; unitary Q; u P && t Q \\<tturnstile> t (P && Q);\n        equiv_trans t t'; equiv_utrans u u'\\<rbrakk>\n       \\<Longrightarrow> u' P && t' Q \\<tturnstile> t' (P && Q)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q t t' u u'.\n       \\<lbrakk>unitary P; unitary Q; u P && t Q \\<tturnstile> t (P && Q);\n        equiv_trans t t'; equiv_utrans u u'\\<rbrakk>\n       \\<Longrightarrow> u' P && t' Q \\<tturnstile> t' (P && Q)", "fix P Q::\"'s expect\" and t t' u u'::\"'s trans\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q t t' u u'.\n       \\<lbrakk>unitary P; unitary Q; u P && t Q \\<tturnstile> t (P && Q);\n        equiv_trans t t'; equiv_utrans u u'\\<rbrakk>\n       \\<Longrightarrow> u' P && t' Q \\<tturnstile> t' (P && Q)", "assume \"unitary P\" \"unitary Q\"\n         \"equiv_trans t t'\" \"equiv_utrans u u'\"\n         \"u P && t Q \\<tturnstile> t (P && Q)\""], ["proof (state)\nthis:\n  unitary P\n  unitary Q\n  equiv_trans t t'\n  equiv_utrans u u'\n  u P && t Q \\<tturnstile> t (P && Q)\n\ngoal (1 subgoal):\n 1. \\<And>P Q t t' u u'.\n       \\<lbrakk>unitary P; unitary Q; u P && t Q \\<tturnstile> t (P && Q);\n        equiv_trans t t'; equiv_utrans u u'\\<rbrakk>\n       \\<Longrightarrow> u' P && t' Q \\<tturnstile> t' (P && Q)", "thus \"u' P && t' Q \\<tturnstile> t' (P && Q)\""], ["proof (prove)\nusing this:\n  unitary P\n  unitary Q\n  equiv_trans t t'\n  equiv_utrans u u'\n  u P && t Q \\<tturnstile> t (P && Q)\n\ngoal (1 subgoal):\n 1. u' P && t' Q \\<tturnstile> t' (P && Q)", "by(simp add:equiv_transD unitary_sound equiv_utransD exp_conj_unitary)"], ["proof (state)\nthis:\n  u' P && t' Q \\<tturnstile> t' (P && Q)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas sdp_intros =\n  sdp_Abort  sdp_Skip  sdp_Apply\n  sdp_Seq    sdp_DC    sdp_PC\n  sdp_SetPC  sdp_SetDC sdp_Embed\n  sdp_repeat sdp_Bind  sdp_loop"], ["", "subsection \\<open>The Well-Defined Predicate.\\<close>"], ["", "definition\n  well_def :: \"'s prog \\<Rightarrow> bool\"\nwhere\n  \"well_def prog \\<equiv> healthy (wp prog) \\<and> nearly_healthy (wlp prog)\n                 \\<and> wp_under_wlp prog \\<and> sub_distrib_pconj prog\n                 \\<and> sublinear (wp prog) \\<and> bd_cts (wp prog)\""], ["", "lemma well_defI[intro]:\n  \"\\<lbrakk> healthy (wp prog); nearly_healthy (wlp prog);\n     wp_under_wlp prog; sub_distrib_pconj prog; sublinear (wp prog);\n     bd_cts (wp prog) \\<rbrakk> \\<Longrightarrow>\n   well_def prog\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>healthy (wp prog); nearly_healthy (wlp prog);\n     wp_under_wlp prog; sub_distrib_pconj prog; sublinear (wp prog);\n     bd_cts (wp prog)\\<rbrakk>\n    \\<Longrightarrow> well_def prog", "unfolding well_def_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>healthy (wp prog); nearly_healthy (wlp prog);\n     wp_under_wlp prog; sub_distrib_pconj prog; sublinear (wp prog);\n     bd_cts (wp prog)\\<rbrakk>\n    \\<Longrightarrow> healthy (wp prog) \\<and>\n                      nearly_healthy (wlp prog) \\<and>\n                      wp_under_wlp prog \\<and>\n                      sub_distrib_pconj prog \\<and>\n                      sublinear (wp prog) \\<and> bd_cts (wp prog)", "by(simp)"], ["", "lemma well_def_wp_healthy[dest]:\n  \"well_def prog \\<Longrightarrow> healthy (wp prog)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. well_def prog \\<Longrightarrow> healthy (wp prog)", "unfolding well_def_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. healthy (wp prog) \\<and>\n    nearly_healthy (wlp prog) \\<and>\n    wp_under_wlp prog \\<and>\n    sub_distrib_pconj prog \\<and>\n    sublinear (wp prog) \\<and> bd_cts (wp prog) \\<Longrightarrow>\n    healthy (wp prog)", "by(simp)"], ["", "lemma well_def_wlp_nearly_healthy[dest]:\n  \"well_def prog \\<Longrightarrow> nearly_healthy (wlp prog)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. well_def prog \\<Longrightarrow> nearly_healthy (wlp prog)", "unfolding well_def_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. healthy (wp prog) \\<and>\n    nearly_healthy (wlp prog) \\<and>\n    wp_under_wlp prog \\<and>\n    sub_distrib_pconj prog \\<and>\n    sublinear (wp prog) \\<and> bd_cts (wp prog) \\<Longrightarrow>\n    nearly_healthy (wlp prog)", "by(simp)"], ["", "lemma well_def_wp_under[dest]:\n  \"well_def prog \\<Longrightarrow> wp_under_wlp prog\""], ["proof (prove)\ngoal (1 subgoal):\n 1. well_def prog \\<Longrightarrow> wp_under_wlp prog", "unfolding well_def_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. healthy (wp prog) \\<and>\n    nearly_healthy (wlp prog) \\<and>\n    wp_under_wlp prog \\<and>\n    sub_distrib_pconj prog \\<and>\n    sublinear (wp prog) \\<and> bd_cts (wp prog) \\<Longrightarrow>\n    wp_under_wlp prog", "by(simp)"], ["", "lemma well_def_sdp[dest]:\n  \"well_def prog \\<Longrightarrow> sub_distrib_pconj prog\""], ["proof (prove)\ngoal (1 subgoal):\n 1. well_def prog \\<Longrightarrow> sub_distrib_pconj prog", "unfolding well_def_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. healthy (wp prog) \\<and>\n    nearly_healthy (wlp prog) \\<and>\n    wp_under_wlp prog \\<and>\n    sub_distrib_pconj prog \\<and>\n    sublinear (wp prog) \\<and> bd_cts (wp prog) \\<Longrightarrow>\n    sub_distrib_pconj prog", "by(simp)"], ["", "lemma well_def_wp_sublinear[dest]:\n  \"well_def prog \\<Longrightarrow> sublinear (wp prog)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. well_def prog \\<Longrightarrow> sublinear (wp prog)", "unfolding well_def_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. healthy (wp prog) \\<and>\n    nearly_healthy (wlp prog) \\<and>\n    wp_under_wlp prog \\<and>\n    sub_distrib_pconj prog \\<and>\n    sublinear (wp prog) \\<and> bd_cts (wp prog) \\<Longrightarrow>\n    sublinear (wp prog)", "by(simp)"], ["", "lemma well_def_wp_cts[dest]:\n  \"well_def prog \\<Longrightarrow> bd_cts (wp prog)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. well_def prog \\<Longrightarrow> bd_cts (wp prog)", "unfolding well_def_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. healthy (wp prog) \\<and>\n    nearly_healthy (wlp prog) \\<and>\n    wp_under_wlp prog \\<and>\n    sub_distrib_pconj prog \\<and>\n    sublinear (wp prog) \\<and> bd_cts (wp prog) \\<Longrightarrow>\n    bd_cts (wp prog)", "by(simp)"], ["", "lemmas wd_dests =\n  well_def_wp_healthy well_def_wlp_nearly_healthy\n  well_def_wp_under well_def_sdp\n  well_def_wp_sublinear well_def_wp_cts"], ["", "lemma wd_Abort:\n  \"well_def Abort\""], ["proof (prove)\ngoal (1 subgoal):\n 1. well_def Abort", "by(blast intro:healthy_wp_Abort nearly_healthy_wlp_Abort\n                 wp_under_wlp_Abort sdp_Abort sublinear_wp_Abort\n                 cts_wp_Abort)"], ["", "lemma wd_Skip:\n  \"well_def Skip\""], ["proof (prove)\ngoal (1 subgoal):\n 1. well_def Skip", "by(blast intro:healthy_wp_Skip nearly_healthy_wlp_Skip\n                 wp_under_wlp_Skip sdp_Skip sublinear_wp_Skip\n                 cts_wp_Skip)"], ["", "lemma wd_Apply:\n  \"well_def (Apply f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. well_def (Apply f)", "by(blast intro:healthy_wp_Apply nearly_healthy_wlp_Apply\n                 wp_under_wlp_Apply sdp_Apply sublinear_wp_Apply\n                 cts_wp_Apply)"], ["", "lemma wd_Seq:\n  \"\\<lbrakk> well_def a; well_def b \\<rbrakk> \\<Longrightarrow> well_def (a ;; b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>well_def a; well_def b\\<rbrakk>\n    \\<Longrightarrow> well_def (a ;; b)", "by(blast intro:healthy_wp_Seq nearly_healthy_wlp_Seq\n                 wp_under_wlp_Seq sdp_Seq sublinear_wp_Seq\n                 cts_wp_Seq)"], ["", "lemma wd_PC:\n  \"\\<lbrakk> well_def a; well_def b; unitary P \\<rbrakk> \\<Longrightarrow> well_def (a \\<^bsub>P\\<^esub>\\<oplus> b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>well_def a; well_def b; unitary P\\<rbrakk>\n    \\<Longrightarrow> well_def (a \\<^bsub>P\\<^esub>\\<oplus> b)", "by(blast intro:healthy_wp_PC nearly_healthy_wlp_PC\n                 wp_under_wlp_PC sdp_PC sublinear_wp_PC\n                 cts_wp_PC)"], ["", "lemma wd_DC:\n  \"\\<lbrakk> well_def a; well_def b \\<rbrakk> \\<Longrightarrow> well_def (a \\<Sqinter> b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>well_def a; well_def b\\<rbrakk>\n    \\<Longrightarrow> well_def (a \\<Sqinter> b)", "by(blast intro:healthy_wp_DC nearly_healthy_wlp_DC\n                 wp_under_wlp_DC sdp_DC sublinear_wp_DC\n                 cts_wp_DC)"], ["", "lemma wd_SetDC:\n  \"\\<lbrakk> \\<And>x s. x \\<in> S s \\<Longrightarrow> well_def (a x); \\<And>s. S s \\<noteq> {};\n     \\<And>s. finite (S s) \\<rbrakk> \\<Longrightarrow> well_def (SetDC a S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x s. x \\<in> S s \\<Longrightarrow> well_def (a x);\n     \\<And>s. S s \\<noteq> {}; \\<And>s. finite (S s)\\<rbrakk>\n    \\<Longrightarrow> well_def (SetDC a S)", "by (simp add: cts_wp_SetDC ex_in_conv healthy_intros(17) healthy_intros(18) sdp_intros(8) sublinear_intros(8) well_def_def wp_under_wlp_intros(8))"], ["", "lemma wd_SetPC:\n  \"\\<lbrakk> \\<And>x s. x \\<in> (supp (p s)) \\<Longrightarrow> well_def (a x); \\<And>s. unitary (p s); \\<And>s. finite (supp (p s));\n     \\<And>s. sum (p s) (supp (p s)) \\<le> 1 \\<rbrakk> \\<Longrightarrow> well_def (SetPC a p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x s. x \\<in> supp (p s) \\<Longrightarrow> well_def (a x);\n     \\<And>s. unitary (p s); \\<And>s. finite (supp (p s));\n     \\<And>s. sum (p s) (supp (p s)) \\<le> 1\\<rbrakk>\n    \\<Longrightarrow> well_def (SetPC a p)", "by(iprover intro!:well_defI healthy_wp_SetPC nearly_healthy_wlp_SetPC\n                    wp_under_wlp_SetPC sdp_SetPC sublinear_wp_SetPC cts_wp_SetPC\n             dest:wd_dests unitary_sound sound_nneg[OF unitary_sound] nnegD)"], ["", "lemma wd_Embed:\n  fixes t::\"'s trans\"\n  assumes ht: \"healthy t\" and st: \"sublinear t\" and ct: \"bd_cts t\"\n  shows \"well_def (Embed t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. well_def (Embed t)", "proof(intro well_defI)"], ["proof (state)\ngoal (6 subgoals):\n 1. healthy (wp (Embed t))\n 2. nearly_healthy (wlp (Embed t))\n 3. wp_under_wlp (Embed t)\n 4. sub_distrib_pconj (Embed t)\n 5. sublinear (wp (Embed t))\n 6. bd_cts (wp (Embed t))", "from ht"], ["proof (chain)\npicking this:\n  healthy t", "show \"healthy (wp (Embed t))\" \"nearly_healthy (wlp (Embed t))\""], ["proof (prove)\nusing this:\n  healthy t\n\ngoal (1 subgoal):\n 1. healthy (wp (Embed t)) &&& nearly_healthy (wlp (Embed t))", "by(simp add:wp_def wlp_def Embed_def healthy_nearly_healthy)+"], ["proof (state)\nthis:\n  healthy (wp (Embed t))\n  nearly_healthy (wlp (Embed t))\n\ngoal (4 subgoals):\n 1. wp_under_wlp (Embed t)\n 2. sub_distrib_pconj (Embed t)\n 3. sublinear (wp (Embed t))\n 4. bd_cts (wp (Embed t))", "from st"], ["proof (chain)\npicking this:\n  sublinear t", "show \"sublinear (wp (Embed t))\""], ["proof (prove)\nusing this:\n  sublinear t\n\ngoal (1 subgoal):\n 1. sublinear (wp (Embed t))", "by(simp add:wp_def Embed_def)"], ["proof (state)\nthis:\n  sublinear (wp (Embed t))\n\ngoal (3 subgoals):\n 1. wp_under_wlp (Embed t)\n 2. sub_distrib_pconj (Embed t)\n 3. bd_cts (wp (Embed t))", "show \"wp_under_wlp (Embed t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wp_under_wlp (Embed t)", "by(simp add:wp_under_wlp_def wp_eval)"], ["proof (state)\nthis:\n  wp_under_wlp (Embed t)\n\ngoal (2 subgoals):\n 1. sub_distrib_pconj (Embed t)\n 2. bd_cts (wp (Embed t))", "show \"sub_distrib_pconj (Embed t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sub_distrib_pconj (Embed t)", "by(rule sub_distrib_pconjI,\n       auto intro:le_funI[OF sublinearD[OF st, where a=1 and b=1 and c=1, simplified]]\n            simp:exp_conj_def pconj_def wp_def wlp_def Embed_def)"], ["proof (state)\nthis:\n  sub_distrib_pconj (Embed t)\n\ngoal (1 subgoal):\n 1. bd_cts (wp (Embed t))", "from ct"], ["proof (chain)\npicking this:\n  bd_cts t", "show \"bd_cts (wp (Embed t))\""], ["proof (prove)\nusing this:\n  bd_cts t\n\ngoal (1 subgoal):\n 1. bd_cts (wp (Embed t))", "by(simp add:wp_def Embed_def)"], ["proof (state)\nthis:\n  bd_cts (wp (Embed t))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wd_repeat:\n  \"well_def a \\<Longrightarrow> well_def (repeat n a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. well_def a \\<Longrightarrow> well_def (repeat n a)", "by(blast intro:healthy_wp_repeat nearly_healthy_wlp_repeat\n                 wp_under_wlp_repeat sdp_repeat sublinear_wp_repeat cts_wp_repeat)"], ["", "lemma wd_Bind:\n  \"\\<lbrakk> \\<And>s. well_def (a (f s)) \\<rbrakk> \\<Longrightarrow> well_def (Bind f a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s. well_def (a (f s))) \\<Longrightarrow> well_def (Bind f a)", "by(blast intro:healthy_wp_Bind nearly_healthy_wlp_Bind\n                 wp_under_wlp_Bind sdp_Bind sublinear_wp_Bind cts_wp_Bind)"], ["", "lemma wd_loop:\n  \"well_def body \\<Longrightarrow> well_def (do G \\<longrightarrow> body od)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. well_def body \\<Longrightarrow>\n    well_def\n     (\\<mu>x.\n         body ;;\n         x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)", "by(blast intro:healthy_wp_loop nearly_healthy_wlp_loop\n                 wp_under_wlp_loop sdp_loop sublinear_wp_loop cts_wp_loop)"], ["", "lemmas wd_intros =\n  wd_Abort wd_Skip   wd_Apply\n  wd_Embed wd_Seq    wd_PC\n  wd_DC    wd_SetPC  wd_SetDC\n  wd_Bind  wd_repeat wd_loop"], ["", "end"]]}