{"file_name": "/home/qj213/afp-2021-10-22/thys/pGCL/Healthiness.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/pGCL", "problem_names": ["lemma healthy_wp_Abort:\n  \"healthy (wp Abort)\"", "lemma nearly_healthy_wlp_Abort:\n  \"nearly_healthy (wlp Abort)\"", "lemma healthy_wp_Skip:\n  \"healthy (wp Skip)\"", "lemma nearly_healthy_wlp_Skip:\n  \"nearly_healthy (wlp Skip)\"", "lemma healthy_wp_Seq:\n  fixes t::\"'s prog\" and u\n  assumes ht: \"healthy (wp t)\" and hu: \"healthy (wp u)\"\n  shows \"healthy (wp (t ;; u))\"", "lemma nearly_healthy_wlp_Seq:\n  fixes t::\"'s prog\" and u\n  assumes ht: \"nearly_healthy (wlp t)\" and hu: \"nearly_healthy (wlp u)\"\n  shows \"nearly_healthy (wlp (t ;; u))\"", "lemma healthy_wp_PC:\n  fixes f::\"'s prog\" \n  assumes hf: \"healthy (wp f)\" and hg: \"healthy (wp g)\"\n      and uP: \"unitary P\"\n  shows \"healthy (wp (f \\<^bsub>P\\<^esub>\\<oplus> g))\"", "lemma nearly_healthy_wlp_PC:\n  fixes f::\"'s prog\" \n  assumes hf: \"nearly_healthy (wlp f)\"\n      and hg: \"nearly_healthy (wlp g)\"\n      and uP: \"unitary P\"\n  shows \"nearly_healthy (wlp (f \\<^bsub>P\\<^esub>\\<oplus> g))\"", "lemma healthy_wp_DC:\n  fixes f::\"'s prog\"\n  assumes hf: \"healthy (wp f)\" and hg: \"healthy (wp g)\"\n  shows \"healthy (wp (f \\<Sqinter> g))\"", "lemma nearly_healthy_wlp_DC:\n  fixes f::\"'s prog\"\n  assumes hf: \"nearly_healthy (wlp f)\"\n      and hg: \"nearly_healthy (wlp g)\"\n  shows \"nearly_healthy (wlp (f \\<Sqinter> g))\"", "lemma healthy_wp_AC:\n  fixes f::\"'s prog\"\n  assumes hf: \"healthy (wp f)\" and hg: \"healthy (wp g)\"\n  shows \"healthy (wp (f \\<Squnion> g))\"", "lemma nearly_healthy_wlp_AC:\n  fixes f::\"'s prog\"\n  assumes hf: \"nearly_healthy (wlp f)\"\n      and hg: \"nearly_healthy (wlp g)\"\n  shows \"nearly_healthy (wlp (f \\<Squnion> g))\"", "lemma healthy_wp_Embed:\n  \"healthy t \\<Longrightarrow> healthy (wp (Embed t))\"", "lemma nearly_healthy_wlp_Embed:\n  \"nearly_healthy t \\<Longrightarrow> nearly_healthy (wlp (Embed t))\"", "lemma healthy_wp_repeat:\n  assumes h_a: \"healthy (wp a)\"\n  shows \"healthy (wp (repeat n a))\" (is \"?X n\")", "lemma nearly_healthy_wlp_repeat:\n  assumes h_a: \"nearly_healthy (wlp a)\"\n  shows \"nearly_healthy (wlp (repeat n a))\" (is \"?X n\")", "lemma healthy_wp_SetDC:\n  fixes prog::\"'b \\<Rightarrow> 'a prog\" and S::\"'a \\<Rightarrow> 'b set\"\n  assumes healthy:  \"\\<And>x s. x \\<in> S s \\<Longrightarrow> healthy (wp (prog x))\"\n      and nonempty: \"\\<And>s. \\<exists>x. x \\<in> S s\"\n  shows \"healthy (wp (SetDC prog S))\" (is \"healthy ?T\")", "lemma nearly_healthy_wlp_SetDC:\n  fixes prog::\"'b \\<Rightarrow> 'a prog\" and S::\"'a \\<Rightarrow> 'b set\"\n  assumes healthy:  \"\\<And>x s. x \\<in> S s \\<Longrightarrow> nearly_healthy (wlp (prog x))\"\n      and nonempty: \"\\<And>s. \\<exists>x. x \\<in> S s\"\n  shows \"nearly_healthy (wlp (SetDC prog S))\" (is \"nearly_healthy ?T\")", "lemma healthy_wp_SetPC:\n  fixes p::\"'s \\<Rightarrow> 'a \\<Rightarrow> real\"\n  and   f::\"'a \\<Rightarrow> 's prog\"\n  assumes healthy: \"\\<And>a s. a \\<in> supp (p s) \\<Longrightarrow> healthy (wp (f a))\"\n      and sound: \"\\<And>s. sound (p s)\"\n      and sub_dist: \"\\<And>s. (\\<Sum>a\\<in>supp (p s). p s a) \\<le> 1\"\n  shows \"healthy (wp (SetPC f p))\" (is \"healthy ?X\")", "lemma nearly_healthy_wlp_SetPC:\n  fixes p::\"'s \\<Rightarrow> 'a \\<Rightarrow> real\"\n  and   f::\"'a \\<Rightarrow> 's prog\"\n  assumes healthy: \"\\<And>a s. a \\<in> supp (p s) \\<Longrightarrow> nearly_healthy (wlp (f a))\"\n      and sound: \"\\<And>s. sound (p s)\"\n      and sub_dist: \"\\<And>s. (\\<Sum>a\\<in>supp (p s). p s a) \\<le> 1\"\n  shows \"nearly_healthy (wlp (SetPC f p))\" (is \"nearly_healthy ?X\")", "lemma healthy_wp_Apply:\n  \"healthy (wp (Apply f))\"", "lemma nearly_healthy_wlp_Apply:\n  \"nearly_healthy (wlp (Apply f))\"", "lemma healthy_wp_Bind:\n  fixes f::\"'s \\<Rightarrow> 'a\"\n  assumes hsub: \"\\<And>s. healthy (wp (p (f s)))\"\n  shows \"healthy (wp (Bind f p))\"", "lemma nearly_healthy_wlp_Bind:\n  fixes f::\"'s \\<Rightarrow> 'a\"\n  assumes hsub: \"\\<And>s. nearly_healthy (wlp (p (f s)))\"\n  shows \"nearly_healthy (wlp (Bind f p))\"", "lemma wp_loop_step_mono:\n  fixes t u::\"'s trans\"\n  assumes hb: \"healthy (wp body)\"\n      and le: \"le_trans t u\"\n      and ht: \"\\<And>P. sound P \\<Longrightarrow> sound (t P)\"\n      and hu: \"\\<And>P. sound P \\<Longrightarrow> sound (u P)\"\n  shows \"le_trans (wp (body ;; Embed t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                  (wp (body ;; Embed u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\"", "lemma wlp_loop_step_mono:\n  fixes t u::\"'s trans\"\n  assumes mb: \"nearly_healthy (wlp body)\"\n      and le: \"le_utrans t u\"\n      and ht: \"\\<And>P. unitary P \\<Longrightarrow> unitary (t P)\"\n      and hu: \"\\<And>P. unitary P \\<Longrightarrow> unitary (u P)\"\n  shows \"le_utrans (wlp (body ;; Embed t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                   (wlp (body ;; Embed u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\"", "lemma lfp_loop_fp:\n  assumes hb: \"healthy (wp body)\"\n      and sP: \"sound P\"\n  shows \"\\<lambda>s. \\<guillemotleft>G\\<guillemotright> s * wp body (\\<lambda>s. bound_of P) s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s \\<tturnstile> \\<lambda>s. bound_of P\"", "lemma lfp_loop_greatest:\n  fixes P::\"'s expect\"\n  assumes lb: \"\\<And>R. \\<lambda>s. \\<guillemotleft>G\\<guillemotright> s * wp body R s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s \\<tturnstile> R \\<Longrightarrow> sound R \\<Longrightarrow> Q \\<tturnstile> R\"\n      and hb: \"healthy (wp body)\"\n      and sP: \"sound P\"\n      and sQ: \"sound Q\"\n  shows \"Q \\<tturnstile> lfp_exp (\\<lambda>Q s. \\<guillemotleft>G\\<guillemotright> s * wp body Q s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s)\"", "lemma lfp_loop_sound:\n  fixes P::\"'s expect\"\n  assumes hb: \"healthy (wp body)\"\n      and sP: \"sound P\"\n  shows \"sound (lfp_exp (\\<lambda>Q s. \\<guillemotleft>G\\<guillemotright> s * wp body Q s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s))\"", "lemma wlp_loop_step_unitary:\n  fixes t u::\"'s trans\"\n  assumes hb: \"nearly_healthy (wlp body)\"\n      and ht: \"\\<And>P. unitary P \\<Longrightarrow> unitary (t P)\"\n      and uP: \"unitary P\"\n  shows \"unitary (wlp (body ;; Embed t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) P)\"", "lemma wp_loop_step_sound:\n  fixes t u::\"'s trans\"\n  assumes hb: \"healthy (wp body)\"\n      and ht: \"\\<And>P. sound P \\<Longrightarrow> sound (t P)\"\n      and sP: \"sound P\"\n  shows \"sound (wp (body ;; Embed t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) P)\"", "lemma wlp_Loop1:\n  fixes body :: \"'s prog\"\n  assumes unitary: \"unitary P\"\n      and healthy: \"nearly_healthy (wlp body)\"\n  shows \"wlp (do G \\<longrightarrow> body od) P =\n   gfp_exp (\\<lambda>Q s. \\<guillemotleft>G\\<guillemotright> s * wlp body Q s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s)\"\n  (is \"?X = gfp_exp (?Y P)\")", "lemma wp_loop_sound:\n  assumes sP: \"sound P\"\n      and hb: \"healthy (wp body)\"\n  shows \"sound (wp do G \\<longrightarrow> body od P)\"", "lemma wp_Loop1:\n  fixes body :: \"'s prog\"\n  assumes sP: \"sound P\"\n      and healthy: \"healthy (wp body)\"\n  shows \"wp (do G \\<longrightarrow> body od) P =\n   lfp_exp (\\<lambda>Q s. \\<guillemotleft>G\\<guillemotright> s * wp body Q s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s)\"\n  (is \"?X = lfp_exp (?Y P)\")", "lemma nearly_healthy_wlp_loop:\n  fixes body::\"'s prog\"\n  assumes hb: \"nearly_healthy (wlp body)\"\n  shows \"nearly_healthy (wlp (do G \\<longrightarrow> body od))\"", "lemma healthy_wp_loop:\n  fixes body::\"'s prog\"\n  assumes hb: \"healthy (wp body)\"\n  shows \"healthy (wp (do G \\<longrightarrow> body od))\"", "lemmas healthy_intros =\n  healthy_wp_Abort nearly_healthy_wlp_Abort healthy_wp_Skip   nearly_healthy_wlp_Skip\n  healthy_wp_Seq   nearly_healthy_wlp_Seq   healthy_wp_PC     nearly_healthy_wlp_PC\n  healthy_wp_DC    nearly_healthy_wlp_DC    healthy_wp_AC     nearly_healthy_wlp_AC\n  healthy_wp_Embed nearly_healthy_wlp_Embed healthy_wp_Apply  nearly_healthy_wlp_Apply\n  healthy_wp_SetDC nearly_healthy_wlp_SetDC healthy_wp_SetPC  nearly_healthy_wlp_SetPC\n  healthy_wp_Bind  nearly_healthy_wlp_Bind  healthy_wp_repeat nearly_healthy_wlp_repeat\n  healthy_wp_loop  nearly_healthy_wlp_loop"], "translations": [["", "lemma healthy_wp_Abort:\n  \"healthy (wp Abort)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. healthy (wp Abort)", "proof(rule healthy_parts)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>b P.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> bounded_by b (wp Abort P)\n 2. \\<And>b P.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> nneg (wp Abort P)\n 3. \\<And>P Q.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wp Abort P \\<tturnstile> wp Abort Q\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * wp Abort P x = wp Abort (\\<lambda>x. c * P x) x", "fix b and P::\"'a \\<Rightarrow> real\""], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>b P.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> bounded_by b (wp Abort P)\n 2. \\<And>b P.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> nneg (wp Abort P)\n 3. \\<And>P Q.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wp Abort P \\<tturnstile> wp Abort Q\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * wp Abort P x = wp Abort (\\<lambda>x. c * P x) x", "assume nP: \"nneg P\" and bP: \"bounded_by b P\""], ["proof (state)\nthis:\n  nneg P\n  bounded_by b P\n\ngoal (4 subgoals):\n 1. \\<And>b P.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> bounded_by b (wp Abort P)\n 2. \\<And>b P.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> nneg (wp Abort P)\n 3. \\<And>P Q.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wp Abort P \\<tturnstile> wp Abort Q\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * wp Abort P x = wp Abort (\\<lambda>x. c * P x) x", "thus \"bounded_by b (wp Abort P)\""], ["proof (prove)\nusing this:\n  nneg P\n  bounded_by b P\n\ngoal (1 subgoal):\n 1. bounded_by b (wp Abort P)", "unfolding wp_eval"], ["proof (prove)\nusing this:\n  nneg P\n  bounded_by b P\n\ngoal (1 subgoal):\n 1. bounded_by b (\\<lambda>s. 0)", "by(blast)"], ["proof (state)\nthis:\n  bounded_by b (wp Abort P)\n\ngoal (3 subgoals):\n 1. \\<And>b P.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> nneg (wp Abort P)\n 2. \\<And>P Q.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wp Abort P \\<tturnstile> wp Abort Q\n 3. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * wp Abort P x = wp Abort (\\<lambda>x. c * P x) x", "show \"nneg (wp Abort P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nneg (wp Abort P)", "unfolding wp_eval"], ["proof (prove)\ngoal (1 subgoal):\n 1. nneg (\\<lambda>s. 0)", "by(blast)"], ["proof (state)\nthis:\n  nneg (wp Abort P)\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wp Abort P \\<tturnstile> wp Abort Q\n 2. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * wp Abort P x = wp Abort (\\<lambda>x. c * P x) x", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wp Abort P \\<tturnstile> wp Abort Q\n 2. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * wp Abort P x = wp Abort (\\<lambda>x. c * P x) x", "fix P Q::\"'a expect\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wp Abort P \\<tturnstile> wp Abort Q\n 2. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * wp Abort P x = wp Abort (\\<lambda>x. c * P x) x", "show \"wp Abort P \\<tturnstile> wp Abort Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wp Abort P \\<tturnstile> wp Abort Q", "unfolding wp_eval"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lambda>s. 0 \\<tturnstile> \\<lambda>s. 0", "by(blast)"], ["proof (state)\nthis:\n  wp Abort P \\<tturnstile> wp Abort Q\n\ngoal (1 subgoal):\n 1. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * wp Abort P x = wp Abort (\\<lambda>x. c * P x) x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * wp Abort P x = wp Abort (\\<lambda>x. c * P x) x", "fix P and c and s::'a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * wp Abort P x = wp Abort (\\<lambda>x. c * P x) x", "show \"c * wp Abort P s = wp Abort (\\<lambda>s. c * P s) s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c * wp Abort P s = wp Abort (\\<lambda>s. c * P s) s", "unfolding wp_eval"], ["proof (prove)\ngoal (1 subgoal):\n 1. c * 0 = 0", "by(auto)"], ["proof (state)\nthis:\n  c * wp Abort P s = wp Abort (\\<lambda>s. c * P s) s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nearly_healthy_wlp_Abort:\n  \"nearly_healthy (wlp Abort)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nearly_healthy (wlp Abort)", "proof(rule nearly_healthyI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P. unitary P \\<Longrightarrow> unitary (wlp Abort P)\n 2. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wlp Abort P \\<tturnstile> wlp Abort Q", "fix P::\"'s \\<Rightarrow> real\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P. unitary P \\<Longrightarrow> unitary (wlp Abort P)\n 2. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wlp Abort P \\<tturnstile> wlp Abort Q", "show \"unitary (wlp Abort P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. unitary (wlp Abort P)", "by(simp add:wp_eval)"], ["proof (state)\nthis:\n  unitary (wlp Abort P)\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wlp Abort P \\<tturnstile> wlp Abort Q", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wlp Abort P \\<tturnstile> wlp Abort Q", "fix P Q :: \"'s expect\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wlp Abort P \\<tturnstile> wlp Abort Q", "assume \"P \\<tturnstile> Q\" and \"unitary P\" and \"unitary Q\""], ["proof (state)\nthis:\n  P \\<tturnstile> Q\n  unitary P\n  unitary Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wlp Abort P \\<tturnstile> wlp Abort Q", "thus \"wlp Abort P \\<tturnstile> wlp Abort Q\""], ["proof (prove)\nusing this:\n  P \\<tturnstile> Q\n  unitary P\n  unitary Q\n\ngoal (1 subgoal):\n 1. wlp Abort P \\<tturnstile> wlp Abort Q", "unfolding wp_eval"], ["proof (prove)\nusing this:\n  P \\<tturnstile> Q\n  unitary P\n  unitary Q\n\ngoal (1 subgoal):\n 1. \\<lambda>s. 1 \\<tturnstile> \\<lambda>s. 1", "by(blast)"], ["proof (state)\nthis:\n  wlp Abort P \\<tturnstile> wlp Abort Q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma healthy_wp_Skip:\n  \"healthy (wp Skip)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. healthy (wp Skip)", "by(force intro!:healthy_parts simp:wp_eval)"], ["", "lemma nearly_healthy_wlp_Skip:\n  \"nearly_healthy (wlp Skip)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nearly_healthy (wlp Skip)", "by(auto simp:wp_eval)"], ["", "lemma healthy_wp_Seq:\n  fixes t::\"'s prog\" and u\n  assumes ht: \"healthy (wp t)\" and hu: \"healthy (wp u)\"\n  shows \"healthy (wp (t ;; u))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. healthy (wp (t ;; u))", "proof(rule healthy_parts, simp_all add:wp_eval)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>b P.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> bounded_by b (wp t (wp u P))\n 2. \\<And>b P.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> nneg (wp t (wp u P))\n 3. \\<And>P Q.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wp t (wp u P) \\<tturnstile> wp t (wp u Q)\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * wp t (wp u P) x =\n                         wp t (wp u (\\<lambda>x. c * P x)) x", "fix b and P::\"'s \\<Rightarrow> real\""], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>b P.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> bounded_by b (wp t (wp u P))\n 2. \\<And>b P.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> nneg (wp t (wp u P))\n 3. \\<And>P Q.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wp t (wp u P) \\<tturnstile> wp t (wp u Q)\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * wp t (wp u P) x =\n                         wp t (wp u (\\<lambda>x. c * P x)) x", "assume \"bounded_by b P\" and \"nneg P\""], ["proof (state)\nthis:\n  bounded_by b P\n  nneg P\n\ngoal (4 subgoals):\n 1. \\<And>b P.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> bounded_by b (wp t (wp u P))\n 2. \\<And>b P.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> nneg (wp t (wp u P))\n 3. \\<And>P Q.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wp t (wp u P) \\<tturnstile> wp t (wp u Q)\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * wp t (wp u P) x =\n                         wp t (wp u (\\<lambda>x. c * P x)) x", "with hu"], ["proof (chain)\npicking this:\n  healthy (wp u)\n  bounded_by b P\n  nneg P", "have \"bounded_by b (wp u P)\" and \"nneg (wp u P)\""], ["proof (prove)\nusing this:\n  healthy (wp u)\n  bounded_by b P\n  nneg P\n\ngoal (1 subgoal):\n 1. bounded_by b (wp u P) &&& nneg (wp u P)", "by(auto)"], ["proof (state)\nthis:\n  bounded_by b (wp u P)\n  nneg (wp u P)\n\ngoal (4 subgoals):\n 1. \\<And>b P.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> bounded_by b (wp t (wp u P))\n 2. \\<And>b P.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> nneg (wp t (wp u P))\n 3. \\<And>P Q.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wp t (wp u P) \\<tturnstile> wp t (wp u Q)\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * wp t (wp u P) x =\n                         wp t (wp u (\\<lambda>x. c * P x)) x", "with ht"], ["proof (chain)\npicking this:\n  healthy (wp t)\n  bounded_by b (wp u P)\n  nneg (wp u P)", "show \"bounded_by b (wp t (wp u P))\"\n           and \"nneg (wp t (wp u P))\""], ["proof (prove)\nusing this:\n  healthy (wp t)\n  bounded_by b (wp u P)\n  nneg (wp u P)\n\ngoal (1 subgoal):\n 1. bounded_by b (wp t (wp u P)) &&& nneg (wp t (wp u P))", "by(auto)"], ["proof (state)\nthis:\n  bounded_by b (wp t (wp u P))\n  nneg (wp t (wp u P))\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wp t (wp u P) \\<tturnstile> wp t (wp u Q)\n 2. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * wp t (wp u P) x =\n                         wp t (wp u (\\<lambda>x. c * P x)) x", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wp t (wp u P) \\<tturnstile> wp t (wp u Q)\n 2. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * wp t (wp u P) x =\n                         wp t (wp u (\\<lambda>x. c * P x)) x", "fix P::\"'s \\<Rightarrow> real\" and Q"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wp t (wp u P) \\<tturnstile> wp t (wp u Q)\n 2. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * wp t (wp u P) x =\n                         wp t (wp u (\\<lambda>x. c * P x)) x", "assume \"sound P\" and \"sound Q\" and \"P \\<tturnstile> Q\""], ["proof (state)\nthis:\n  sound P\n  sound Q\n  P \\<tturnstile> Q\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wp t (wp u P) \\<tturnstile> wp t (wp u Q)\n 2. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * wp t (wp u P) x =\n                         wp t (wp u (\\<lambda>x. c * P x)) x", "with hu"], ["proof (chain)\npicking this:\n  healthy (wp u)\n  sound P\n  sound Q\n  P \\<tturnstile> Q", "have \"sound (wp u P)\" and \"sound (wp u Q)\"\n    and \"wp u P \\<tturnstile> wp u Q\""], ["proof (prove)\nusing this:\n  healthy (wp u)\n  sound P\n  sound Q\n  P \\<tturnstile> Q\n\ngoal (1 subgoal):\n 1. sound (wp u P) &&& sound (wp u Q) &&& wp u P \\<tturnstile> wp u Q", "by(auto)"], ["proof (state)\nthis:\n  sound (wp u P)\n  sound (wp u Q)\n  wp u P \\<tturnstile> wp u Q\n\ngoal (2 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wp t (wp u P) \\<tturnstile> wp t (wp u Q)\n 2. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * wp t (wp u P) x =\n                         wp t (wp u (\\<lambda>x. c * P x)) x", "with ht"], ["proof (chain)\npicking this:\n  healthy (wp t)\n  sound (wp u P)\n  sound (wp u Q)\n  wp u P \\<tturnstile> wp u Q", "show \"wp t (wp u P) \\<tturnstile> wp t (wp u Q)\""], ["proof (prove)\nusing this:\n  healthy (wp t)\n  sound (wp u P)\n  sound (wp u Q)\n  wp u P \\<tturnstile> wp u Q\n\ngoal (1 subgoal):\n 1. wp t (wp u P) \\<tturnstile> wp t (wp u Q)", "by(auto)"], ["proof (state)\nthis:\n  wp t (wp u P) \\<tturnstile> wp t (wp u Q)\n\ngoal (1 subgoal):\n 1. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * wp t (wp u P) x =\n                         wp t (wp u (\\<lambda>x. c * P x)) x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * wp t (wp u P) x =\n                         wp t (wp u (\\<lambda>x. c * P x)) x", "fix P::\"'s \\<Rightarrow> real\" and c::real and s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * wp t (wp u P) x =\n                         wp t (wp u (\\<lambda>x. c * P x)) x", "assume pos: \"0 \\<le> c\" and sP: \"sound P\""], ["proof (state)\nthis:\n  0 \\<le> c\n  sound P\n\ngoal (1 subgoal):\n 1. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * wp t (wp u P) x =\n                         wp t (wp u (\\<lambda>x. c * P x)) x", "with ht and hu"], ["proof (chain)\npicking this:\n  healthy (wp t)\n  healthy (wp u)\n  0 \\<le> c\n  sound P", "have \"c * wp t (wp u P) s = wp t (\\<lambda>s. c * wp u P s) s\""], ["proof (prove)\nusing this:\n  healthy (wp t)\n  healthy (wp u)\n  0 \\<le> c\n  sound P\n\ngoal (1 subgoal):\n 1. c * wp t (wp u P) s = wp t (\\<lambda>s. c * wp u P s) s", "by(auto intro!:scalingD)"], ["proof (state)\nthis:\n  c * wp t (wp u P) s = wp t (\\<lambda>s. c * wp u P s) s\n\ngoal (1 subgoal):\n 1. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * wp t (wp u P) x =\n                         wp t (wp u (\\<lambda>x. c * P x)) x", "also"], ["proof (state)\nthis:\n  c * wp t (wp u P) s = wp t (\\<lambda>s. c * wp u P s) s\n\ngoal (1 subgoal):\n 1. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * wp t (wp u P) x =\n                         wp t (wp u (\\<lambda>x. c * P x)) x", "with hu and pos and sP"], ["proof (chain)\npicking this:\n  healthy (wp u)\n  0 \\<le> c\n  sound P\n  c * wp t (wp u P) s = wp t (\\<lambda>s. c * wp u P s) s", "have \"... = wp t (wp u (\\<lambda>s. c * P s)) s\""], ["proof (prove)\nusing this:\n  healthy (wp u)\n  0 \\<le> c\n  sound P\n  c * wp t (wp u P) s = wp t (\\<lambda>s. c * wp u P s) s\n\ngoal (1 subgoal):\n 1. wp t (\\<lambda>s. c * wp u P s) s = wp t (wp u (\\<lambda>s. c * P s)) s", "by(simp add:scalingD[OF healthy_scalingD])"], ["proof (state)\nthis:\n  wp t (\\<lambda>s. c * wp u P s) s = wp t (wp u (\\<lambda>s. c * P s)) s\n\ngoal (1 subgoal):\n 1. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * wp t (wp u P) x =\n                         wp t (wp u (\\<lambda>x. c * P x)) x", "finally"], ["proof (chain)\npicking this:\n  c * wp t (wp u P) s = wp t (wp u (\\<lambda>s. c * P s)) s", "show \"c * wp t (wp u P) s = wp t (wp u (\\<lambda>s. c * P s)) s\""], ["proof (prove)\nusing this:\n  c * wp t (wp u P) s = wp t (wp u (\\<lambda>s. c * P s)) s\n\ngoal (1 subgoal):\n 1. c * wp t (wp u P) s = wp t (wp u (\\<lambda>s. c * P s)) s", "."], ["proof (state)\nthis:\n  c * wp t (wp u P) s = wp t (wp u (\\<lambda>s. c * P s)) s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nearly_healthy_wlp_Seq:\n  fixes t::\"'s prog\" and u\n  assumes ht: \"nearly_healthy (wlp t)\" and hu: \"nearly_healthy (wlp u)\"\n  shows \"nearly_healthy (wlp (t ;; u))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nearly_healthy (wlp (t ;; u))", "proof(rule nearly_healthyI, simp_all add:wp_eval)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P. unitary P \\<Longrightarrow> unitary (wlp t (wlp u P))\n 2. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wlp t (wlp u P) \\<tturnstile> wlp t (wlp u Q)", "fix b and P::\"'s \\<Rightarrow> real\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P. unitary P \\<Longrightarrow> unitary (wlp t (wlp u P))\n 2. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wlp t (wlp u P) \\<tturnstile> wlp t (wlp u Q)", "assume \"unitary P\""], ["proof (state)\nthis:\n  unitary P\n\ngoal (2 subgoals):\n 1. \\<And>P. unitary P \\<Longrightarrow> unitary (wlp t (wlp u P))\n 2. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wlp t (wlp u P) \\<tturnstile> wlp t (wlp u Q)", "with hu"], ["proof (chain)\npicking this:\n  nearly_healthy (wlp u)\n  unitary P", "have \"unitary (wlp u P)\""], ["proof (prove)\nusing this:\n  nearly_healthy (wlp u)\n  unitary P\n\ngoal (1 subgoal):\n 1. unitary (wlp u P)", "by(auto)"], ["proof (state)\nthis:\n  unitary (wlp u P)\n\ngoal (2 subgoals):\n 1. \\<And>P. unitary P \\<Longrightarrow> unitary (wlp t (wlp u P))\n 2. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wlp t (wlp u P) \\<tturnstile> wlp t (wlp u Q)", "with ht"], ["proof (chain)\npicking this:\n  nearly_healthy (wlp t)\n  unitary (wlp u P)", "show \"unitary (wlp t (wlp u P))\""], ["proof (prove)\nusing this:\n  nearly_healthy (wlp t)\n  unitary (wlp u P)\n\ngoal (1 subgoal):\n 1. unitary (wlp t (wlp u P))", "by(auto)"], ["proof (state)\nthis:\n  unitary (wlp t (wlp u P))\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wlp t (wlp u P) \\<tturnstile> wlp t (wlp u Q)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wlp t (wlp u P) \\<tturnstile> wlp t (wlp u Q)", "fix P Q::\"'s \\<Rightarrow> real\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wlp t (wlp u P) \\<tturnstile> wlp t (wlp u Q)", "assume \"unitary P\" and \"unitary Q\" and \"P \\<tturnstile> Q\""], ["proof (state)\nthis:\n  unitary P\n  unitary Q\n  P \\<tturnstile> Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wlp t (wlp u P) \\<tturnstile> wlp t (wlp u Q)", "with hu"], ["proof (chain)\npicking this:\n  nearly_healthy (wlp u)\n  unitary P\n  unitary Q\n  P \\<tturnstile> Q", "have \"unitary (wlp u P)\" and \"unitary (wlp u Q)\"\n    and \"wlp u P \\<tturnstile> wlp u Q\""], ["proof (prove)\nusing this:\n  nearly_healthy (wlp u)\n  unitary P\n  unitary Q\n  P \\<tturnstile> Q\n\ngoal (1 subgoal):\n 1. unitary (wlp u P) &&&\n    unitary (wlp u Q) &&& wlp u P \\<tturnstile> wlp u Q", "by(auto)"], ["proof (state)\nthis:\n  unitary (wlp u P)\n  unitary (wlp u Q)\n  wlp u P \\<tturnstile> wlp u Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wlp t (wlp u P) \\<tturnstile> wlp t (wlp u Q)", "with ht"], ["proof (chain)\npicking this:\n  nearly_healthy (wlp t)\n  unitary (wlp u P)\n  unitary (wlp u Q)\n  wlp u P \\<tturnstile> wlp u Q", "show \"wlp t (wlp u P) \\<tturnstile> wlp t (wlp u Q)\""], ["proof (prove)\nusing this:\n  nearly_healthy (wlp t)\n  unitary (wlp u P)\n  unitary (wlp u Q)\n  wlp u P \\<tturnstile> wlp u Q\n\ngoal (1 subgoal):\n 1. wlp t (wlp u P) \\<tturnstile> wlp t (wlp u Q)", "by(auto)"], ["proof (state)\nthis:\n  wlp t (wlp u P) \\<tturnstile> wlp t (wlp u Q)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma healthy_wp_PC:\n  fixes f::\"'s prog\" \n  assumes hf: \"healthy (wp f)\" and hg: \"healthy (wp g)\"\n      and uP: \"unitary P\"\n  shows \"healthy (wp (f \\<^bsub>P\\<^esub>\\<oplus> g))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. healthy (wp (f \\<^bsub>P\\<^esub>\\<oplus> g))", "proof(intro healthy_parts bounded_byI nnegI le_funI, simp_all add:wp_eval)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>b Pa x.\n       \\<lbrakk>bounded_by b Pa; nneg Pa\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x \\<le> b\n 2. \\<And>b Pa x.\n       \\<lbrakk>bounded_by b Pa; nneg Pa\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> P x * wp f Pa x + (1 - P x) * wp g Pa x\n 3. \\<And>Pa Q x.\n       \\<lbrakk>sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x\n                         \\<le> P x * wp f Q x + (1 - P x) * wp g Q x\n 4. \\<And>Pa c x.\n       \\<lbrakk>sound Pa; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (P x * wp f Pa x + (1 - P x) * wp g Pa x) =\n                         P x * wp f (\\<lambda>x. c * Pa x) x +\n                         (1 - P x) * wp g (\\<lambda>x. c * Pa x) x", "fix b and Q::\"'s \\<Rightarrow> real\" and s::'s"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>b Pa x.\n       \\<lbrakk>bounded_by b Pa; nneg Pa\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x \\<le> b\n 2. \\<And>b Pa x.\n       \\<lbrakk>bounded_by b Pa; nneg Pa\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> P x * wp f Pa x + (1 - P x) * wp g Pa x\n 3. \\<And>Pa Q x.\n       \\<lbrakk>sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x\n                         \\<le> P x * wp f Q x + (1 - P x) * wp g Q x\n 4. \\<And>Pa c x.\n       \\<lbrakk>sound Pa; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (P x * wp f Pa x + (1 - P x) * wp g Pa x) =\n                         P x * wp f (\\<lambda>x. c * Pa x) x +\n                         (1 - P x) * wp g (\\<lambda>x. c * Pa x) x", "assume nQ: \"nneg Q\" and bQ: \"bounded_by b Q\""], ["proof (state)\nthis:\n  nneg Q\n  bounded_by b Q\n\ngoal (4 subgoals):\n 1. \\<And>b Pa x.\n       \\<lbrakk>bounded_by b Pa; nneg Pa\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x \\<le> b\n 2. \\<And>b Pa x.\n       \\<lbrakk>bounded_by b Pa; nneg Pa\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> P x * wp f Pa x + (1 - P x) * wp g Pa x\n 3. \\<And>Pa Q x.\n       \\<lbrakk>sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x\n                         \\<le> P x * wp f Q x + (1 - P x) * wp g Q x\n 4. \\<And>Pa c x.\n       \\<lbrakk>sound Pa; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (P x * wp f Pa x + (1 - P x) * wp g Pa x) =\n                         P x * wp f (\\<lambda>x. c * Pa x) x +\n                         (1 - P x) * wp g (\\<lambda>x. c * Pa x) x", "txt \\<open>Non-negative:\\<close>"], ["proof (state)\nthis:\n  nneg Q\n  bounded_by b Q\n\ngoal (4 subgoals):\n 1. \\<And>b Pa x.\n       \\<lbrakk>bounded_by b Pa; nneg Pa\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x \\<le> b\n 2. \\<And>b Pa x.\n       \\<lbrakk>bounded_by b Pa; nneg Pa\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> P x * wp f Pa x + (1 - P x) * wp g Pa x\n 3. \\<And>Pa Q x.\n       \\<lbrakk>sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x\n                         \\<le> P x * wp f Q x + (1 - P x) * wp g Q x\n 4. \\<And>Pa c x.\n       \\<lbrakk>sound Pa; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (P x * wp f Pa x + (1 - P x) * wp g Pa x) =\n                         P x * wp f (\\<lambda>x. c * Pa x) x +\n                         (1 - P x) * wp g (\\<lambda>x. c * Pa x) x", "from nQ and bQ and hf"], ["proof (chain)\npicking this:\n  nneg Q\n  bounded_by b Q\n  healthy (wp f)", "have \"0 \\<le> wp f Q s\""], ["proof (prove)\nusing this:\n  nneg Q\n  bounded_by b Q\n  healthy (wp f)\n\ngoal (1 subgoal):\n 1. 0 \\<le> wp f Q s", "by(auto)"], ["proof (state)\nthis:\n  0 \\<le> wp f Q s\n\ngoal (4 subgoals):\n 1. \\<And>b Pa x.\n       \\<lbrakk>bounded_by b Pa; nneg Pa\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x \\<le> b\n 2. \\<And>b Pa x.\n       \\<lbrakk>bounded_by b Pa; nneg Pa\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> P x * wp f Pa x + (1 - P x) * wp g Pa x\n 3. \\<And>Pa Q x.\n       \\<lbrakk>sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x\n                         \\<le> P x * wp f Q x + (1 - P x) * wp g Q x\n 4. \\<And>Pa c x.\n       \\<lbrakk>sound Pa; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (P x * wp f Pa x + (1 - P x) * wp g Pa x) =\n                         P x * wp f (\\<lambda>x. c * Pa x) x +\n                         (1 - P x) * wp g (\\<lambda>x. c * Pa x) x", "with uP"], ["proof (chain)\npicking this:\n  unitary P\n  0 \\<le> wp f Q s", "have \"0 \\<le> P s * ...\""], ["proof (prove)\nusing this:\n  unitary P\n  0 \\<le> wp f Q s\n\ngoal (1 subgoal):\n 1. 0 \\<le> P s * wp f Q s", "by(auto intro:mult_nonneg_nonneg)"], ["proof (state)\nthis:\n  0 \\<le> P s * wp f Q s\n\ngoal (4 subgoals):\n 1. \\<And>b Pa x.\n       \\<lbrakk>bounded_by b Pa; nneg Pa\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x \\<le> b\n 2. \\<And>b Pa x.\n       \\<lbrakk>bounded_by b Pa; nneg Pa\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> P x * wp f Pa x + (1 - P x) * wp g Pa x\n 3. \\<And>Pa Q x.\n       \\<lbrakk>sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x\n                         \\<le> P x * wp f Q x + (1 - P x) * wp g Q x\n 4. \\<And>Pa c x.\n       \\<lbrakk>sound Pa; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (P x * wp f Pa x + (1 - P x) * wp g Pa x) =\n                         P x * wp f (\\<lambda>x. c * Pa x) x +\n                         (1 - P x) * wp g (\\<lambda>x. c * Pa x) x", "moreover"], ["proof (state)\nthis:\n  0 \\<le> P s * wp f Q s\n\ngoal (4 subgoals):\n 1. \\<And>b Pa x.\n       \\<lbrakk>bounded_by b Pa; nneg Pa\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x \\<le> b\n 2. \\<And>b Pa x.\n       \\<lbrakk>bounded_by b Pa; nneg Pa\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> P x * wp f Pa x + (1 - P x) * wp g Pa x\n 3. \\<And>Pa Q x.\n       \\<lbrakk>sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x\n                         \\<le> P x * wp f Q x + (1 - P x) * wp g Q x\n 4. \\<And>Pa c x.\n       \\<lbrakk>sound Pa; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (P x * wp f Pa x + (1 - P x) * wp g Pa x) =\n                         P x * wp f (\\<lambda>x. c * Pa x) x +\n                         (1 - P x) * wp g (\\<lambda>x. c * Pa x) x", "{"], ["proof (state)\nthis:\n  0 \\<le> P s * wp f Q s\n\ngoal (4 subgoals):\n 1. \\<And>b Pa x.\n       \\<lbrakk>bounded_by b Pa; nneg Pa\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x \\<le> b\n 2. \\<And>b Pa x.\n       \\<lbrakk>bounded_by b Pa; nneg Pa\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> P x * wp f Pa x + (1 - P x) * wp g Pa x\n 3. \\<And>Pa Q x.\n       \\<lbrakk>sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x\n                         \\<le> P x * wp f Q x + (1 - P x) * wp g Q x\n 4. \\<And>Pa c x.\n       \\<lbrakk>sound Pa; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (P x * wp f Pa x + (1 - P x) * wp g Pa x) =\n                         P x * wp f (\\<lambda>x. c * Pa x) x +\n                         (1 - P x) * wp g (\\<lambda>x. c * Pa x) x", "from uP"], ["proof (chain)\npicking this:\n  unitary P", "have \"0 \\<le> 1 - P s\""], ["proof (prove)\nusing this:\n  unitary P\n\ngoal (1 subgoal):\n 1. 0 \\<le> 1 - P s", "by auto"], ["proof (state)\nthis:\n  0 \\<le> 1 - P s\n\ngoal (4 subgoals):\n 1. \\<And>b Pa x.\n       \\<lbrakk>bounded_by b Pa; nneg Pa\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x \\<le> b\n 2. \\<And>b Pa x.\n       \\<lbrakk>bounded_by b Pa; nneg Pa\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> P x * wp f Pa x + (1 - P x) * wp g Pa x\n 3. \\<And>Pa Q x.\n       \\<lbrakk>sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x\n                         \\<le> P x * wp f Q x + (1 - P x) * wp g Q x\n 4. \\<And>Pa c x.\n       \\<lbrakk>sound Pa; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (P x * wp f Pa x + (1 - P x) * wp g Pa x) =\n                         P x * wp f (\\<lambda>x. c * Pa x) x +\n                         (1 - P x) * wp g (\\<lambda>x. c * Pa x) x", "with nQ and bQ and hg"], ["proof (chain)\npicking this:\n  nneg Q\n  bounded_by b Q\n  healthy (wp g)\n  0 \\<le> 1 - P s", "have \"0 \\<le> ... * wp g Q s\""], ["proof (prove)\nusing this:\n  nneg Q\n  bounded_by b Q\n  healthy (wp g)\n  0 \\<le> 1 - P s\n\ngoal (1 subgoal):\n 1. 0 \\<le> (1 - P s) * wp g Q s", "by (metis healthy_nnegD2 mult_nonneg_nonneg nneg_def)"], ["proof (state)\nthis:\n  0 \\<le> (1 - P s) * wp g Q s\n\ngoal (4 subgoals):\n 1. \\<And>b Pa x.\n       \\<lbrakk>bounded_by b Pa; nneg Pa\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x \\<le> b\n 2. \\<And>b Pa x.\n       \\<lbrakk>bounded_by b Pa; nneg Pa\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> P x * wp f Pa x + (1 - P x) * wp g Pa x\n 3. \\<And>Pa Q x.\n       \\<lbrakk>sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x\n                         \\<le> P x * wp f Q x + (1 - P x) * wp g Q x\n 4. \\<And>Pa c x.\n       \\<lbrakk>sound Pa; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (P x * wp f Pa x + (1 - P x) * wp g Pa x) =\n                         P x * wp f (\\<lambda>x. c * Pa x) x +\n                         (1 - P x) * wp g (\\<lambda>x. c * Pa x) x", "}"], ["proof (state)\nthis:\n  0 \\<le> (1 - P s) * wp g Q s\n\ngoal (4 subgoals):\n 1. \\<And>b Pa x.\n       \\<lbrakk>bounded_by b Pa; nneg Pa\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x \\<le> b\n 2. \\<And>b Pa x.\n       \\<lbrakk>bounded_by b Pa; nneg Pa\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> P x * wp f Pa x + (1 - P x) * wp g Pa x\n 3. \\<And>Pa Q x.\n       \\<lbrakk>sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x\n                         \\<le> P x * wp f Q x + (1 - P x) * wp g Q x\n 4. \\<And>Pa c x.\n       \\<lbrakk>sound Pa; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (P x * wp f Pa x + (1 - P x) * wp g Pa x) =\n                         P x * wp f (\\<lambda>x. c * Pa x) x +\n                         (1 - P x) * wp g (\\<lambda>x. c * Pa x) x", "ultimately"], ["proof (chain)\npicking this:\n  0 \\<le> P s * wp f Q s\n  0 \\<le> (1 - P s) * wp g Q s", "show \"0 \\<le> P s * wp f Q s + (1 - P s) * wp g Q s\""], ["proof (prove)\nusing this:\n  0 \\<le> P s * wp f Q s\n  0 \\<le> (1 - P s) * wp g Q s\n\ngoal (1 subgoal):\n 1. 0 \\<le> P s * wp f Q s + (1 - P s) * wp g Q s", "by(auto intro:mult_nonneg_nonneg)"], ["proof (state)\nthis:\n  0 \\<le> P s * wp f Q s + (1 - P s) * wp g Q s\n\ngoal (3 subgoals):\n 1. \\<And>b Pa x.\n       \\<lbrakk>bounded_by b Pa; nneg Pa\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x \\<le> b\n 2. \\<And>Pa Q x.\n       \\<lbrakk>sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x\n                         \\<le> P x * wp f Q x + (1 - P x) * wp g Q x\n 3. \\<And>Pa c x.\n       \\<lbrakk>sound Pa; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (P x * wp f Pa x + (1 - P x) * wp g Pa x) =\n                         P x * wp f (\\<lambda>x. c * Pa x) x +\n                         (1 - P x) * wp g (\\<lambda>x. c * Pa x) x", "txt \\<open>Bounded:\\<close>"], ["proof (state)\nthis:\n  0 \\<le> P s * wp f Q s + (1 - P s) * wp g Q s\n\ngoal (3 subgoals):\n 1. \\<And>b Pa x.\n       \\<lbrakk>bounded_by b Pa; nneg Pa\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x \\<le> b\n 2. \\<And>Pa Q x.\n       \\<lbrakk>sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x\n                         \\<le> P x * wp f Q x + (1 - P x) * wp g Q x\n 3. \\<And>Pa c x.\n       \\<lbrakk>sound Pa; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (P x * wp f Pa x + (1 - P x) * wp g Pa x) =\n                         P x * wp f (\\<lambda>x. c * Pa x) x +\n                         (1 - P x) * wp g (\\<lambda>x. c * Pa x) x", "from nQ bQ hf"], ["proof (chain)\npicking this:\n  nneg Q\n  bounded_by b Q\n  healthy (wp f)", "have \"wp f Q s \\<le> b\""], ["proof (prove)\nusing this:\n  nneg Q\n  bounded_by b Q\n  healthy (wp f)\n\ngoal (1 subgoal):\n 1. wp f Q s \\<le> b", "by(auto)"], ["proof (state)\nthis:\n  wp f Q s \\<le> b\n\ngoal (3 subgoals):\n 1. \\<And>b Pa x.\n       \\<lbrakk>bounded_by b Pa; nneg Pa\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x \\<le> b\n 2. \\<And>Pa Q x.\n       \\<lbrakk>sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x\n                         \\<le> P x * wp f Q x + (1 - P x) * wp g Q x\n 3. \\<And>Pa c x.\n       \\<lbrakk>sound Pa; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (P x * wp f Pa x + (1 - P x) * wp g Pa x) =\n                         P x * wp f (\\<lambda>x. c * Pa x) x +\n                         (1 - P x) * wp g (\\<lambda>x. c * Pa x) x", "with uP nQ bQ hf"], ["proof (chain)\npicking this:\n  unitary P\n  nneg Q\n  bounded_by b Q\n  healthy (wp f)\n  wp f Q s \\<le> b", "have \"P s * wp f Q s \\<le> P s * b\""], ["proof (prove)\nusing this:\n  unitary P\n  nneg Q\n  bounded_by b Q\n  healthy (wp f)\n  wp f Q s \\<le> b\n\ngoal (1 subgoal):\n 1. P s * wp f Q s \\<le> P s * b", "by(blast intro!:mult_mono)"], ["proof (state)\nthis:\n  P s * wp f Q s \\<le> P s * b\n\ngoal (3 subgoals):\n 1. \\<And>b Pa x.\n       \\<lbrakk>bounded_by b Pa; nneg Pa\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x \\<le> b\n 2. \\<And>Pa Q x.\n       \\<lbrakk>sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x\n                         \\<le> P x * wp f Q x + (1 - P x) * wp g Q x\n 3. \\<And>Pa c x.\n       \\<lbrakk>sound Pa; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (P x * wp f Pa x + (1 - P x) * wp g Pa x) =\n                         P x * wp f (\\<lambda>x. c * Pa x) x +\n                         (1 - P x) * wp g (\\<lambda>x. c * Pa x) x", "moreover"], ["proof (state)\nthis:\n  P s * wp f Q s \\<le> P s * b\n\ngoal (3 subgoals):\n 1. \\<And>b Pa x.\n       \\<lbrakk>bounded_by b Pa; nneg Pa\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x \\<le> b\n 2. \\<And>Pa Q x.\n       \\<lbrakk>sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x\n                         \\<le> P x * wp f Q x + (1 - P x) * wp g Q x\n 3. \\<And>Pa c x.\n       \\<lbrakk>sound Pa; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (P x * wp f Pa x + (1 - P x) * wp g Pa x) =\n                         P x * wp f (\\<lambda>x. c * Pa x) x +\n                         (1 - P x) * wp g (\\<lambda>x. c * Pa x) x", "{"], ["proof (state)\nthis:\n  P s * wp f Q s \\<le> P s * b\n\ngoal (3 subgoals):\n 1. \\<And>b Pa x.\n       \\<lbrakk>bounded_by b Pa; nneg Pa\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x \\<le> b\n 2. \\<And>Pa Q x.\n       \\<lbrakk>sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x\n                         \\<le> P x * wp f Q x + (1 - P x) * wp g Q x\n 3. \\<And>Pa c x.\n       \\<lbrakk>sound Pa; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (P x * wp f Pa x + (1 - P x) * wp g Pa x) =\n                         P x * wp f (\\<lambda>x. c * Pa x) x +\n                         (1 - P x) * wp g (\\<lambda>x. c * Pa x) x", "from nQ bQ hg uP"], ["proof (chain)\npicking this:\n  nneg Q\n  bounded_by b Q\n  healthy (wp g)\n  unitary P", "have \"wp g Q s \\<le> b\" and \"0 \\<le> 1 - P s\""], ["proof (prove)\nusing this:\n  nneg Q\n  bounded_by b Q\n  healthy (wp g)\n  unitary P\n\ngoal (1 subgoal):\n 1. wp g Q s \\<le> b &&& 0 \\<le> 1 - P s", "by auto"], ["proof (state)\nthis:\n  wp g Q s \\<le> b\n  0 \\<le> 1 - P s\n\ngoal (3 subgoals):\n 1. \\<And>b Pa x.\n       \\<lbrakk>bounded_by b Pa; nneg Pa\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x \\<le> b\n 2. \\<And>Pa Q x.\n       \\<lbrakk>sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x\n                         \\<le> P x * wp f Q x + (1 - P x) * wp g Q x\n 3. \\<And>Pa c x.\n       \\<lbrakk>sound Pa; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (P x * wp f Pa x + (1 - P x) * wp g Pa x) =\n                         P x * wp f (\\<lambda>x. c * Pa x) x +\n                         (1 - P x) * wp g (\\<lambda>x. c * Pa x) x", "with nQ bQ hg"], ["proof (chain)\npicking this:\n  nneg Q\n  bounded_by b Q\n  healthy (wp g)\n  wp g Q s \\<le> b\n  0 \\<le> 1 - P s", "have \"(1 - P s) * wp g Q s \\<le> (1 - P s) * b\""], ["proof (prove)\nusing this:\n  nneg Q\n  bounded_by b Q\n  healthy (wp g)\n  wp g Q s \\<le> b\n  0 \\<le> 1 - P s\n\ngoal (1 subgoal):\n 1. (1 - P s) * wp g Q s \\<le> (1 - P s) * b", "by(blast intro!:mult_mono)"], ["proof (state)\nthis:\n  (1 - P s) * wp g Q s \\<le> (1 - P s) * b\n\ngoal (3 subgoals):\n 1. \\<And>b Pa x.\n       \\<lbrakk>bounded_by b Pa; nneg Pa\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x \\<le> b\n 2. \\<And>Pa Q x.\n       \\<lbrakk>sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x\n                         \\<le> P x * wp f Q x + (1 - P x) * wp g Q x\n 3. \\<And>Pa c x.\n       \\<lbrakk>sound Pa; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (P x * wp f Pa x + (1 - P x) * wp g Pa x) =\n                         P x * wp f (\\<lambda>x. c * Pa x) x +\n                         (1 - P x) * wp g (\\<lambda>x. c * Pa x) x", "}"], ["proof (state)\nthis:\n  (1 - P s) * wp g Q s \\<le> (1 - P s) * b\n\ngoal (3 subgoals):\n 1. \\<And>b Pa x.\n       \\<lbrakk>bounded_by b Pa; nneg Pa\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x \\<le> b\n 2. \\<And>Pa Q x.\n       \\<lbrakk>sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x\n                         \\<le> P x * wp f Q x + (1 - P x) * wp g Q x\n 3. \\<And>Pa c x.\n       \\<lbrakk>sound Pa; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (P x * wp f Pa x + (1 - P x) * wp g Pa x) =\n                         P x * wp f (\\<lambda>x. c * Pa x) x +\n                         (1 - P x) * wp g (\\<lambda>x. c * Pa x) x", "ultimately"], ["proof (chain)\npicking this:\n  P s * wp f Q s \\<le> P s * b\n  (1 - P s) * wp g Q s \\<le> (1 - P s) * b", "have \"P s * wp f Q s + (1 - P s) * wp g Q s \\<le>\n                   P s * b + (1 - P s) * b\""], ["proof (prove)\nusing this:\n  P s * wp f Q s \\<le> P s * b\n  (1 - P s) * wp g Q s \\<le> (1 - P s) * b\n\ngoal (1 subgoal):\n 1. P s * wp f Q s + (1 - P s) * wp g Q s \\<le> P s * b + (1 - P s) * b", "by(blast intro:add_mono)"], ["proof (state)\nthis:\n  P s * wp f Q s + (1 - P s) * wp g Q s \\<le> P s * b + (1 - P s) * b\n\ngoal (3 subgoals):\n 1. \\<And>b Pa x.\n       \\<lbrakk>bounded_by b Pa; nneg Pa\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x \\<le> b\n 2. \\<And>Pa Q x.\n       \\<lbrakk>sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x\n                         \\<le> P x * wp f Q x + (1 - P x) * wp g Q x\n 3. \\<And>Pa c x.\n       \\<lbrakk>sound Pa; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (P x * wp f Pa x + (1 - P x) * wp g Pa x) =\n                         P x * wp f (\\<lambda>x. c * Pa x) x +\n                         (1 - P x) * wp g (\\<lambda>x. c * Pa x) x", "also"], ["proof (state)\nthis:\n  P s * wp f Q s + (1 - P s) * wp g Q s \\<le> P s * b + (1 - P s) * b\n\ngoal (3 subgoals):\n 1. \\<And>b Pa x.\n       \\<lbrakk>bounded_by b Pa; nneg Pa\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x \\<le> b\n 2. \\<And>Pa Q x.\n       \\<lbrakk>sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x\n                         \\<le> P x * wp f Q x + (1 - P x) * wp g Q x\n 3. \\<And>Pa c x.\n       \\<lbrakk>sound Pa; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (P x * wp f Pa x + (1 - P x) * wp g Pa x) =\n                         P x * wp f (\\<lambda>x. c * Pa x) x +\n                         (1 - P x) * wp g (\\<lambda>x. c * Pa x) x", "have \"... = b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P s * b + (1 - P s) * b = b", "by(auto simp:algebra_simps)"], ["proof (state)\nthis:\n  P s * b + (1 - P s) * b = b\n\ngoal (3 subgoals):\n 1. \\<And>b Pa x.\n       \\<lbrakk>bounded_by b Pa; nneg Pa\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x \\<le> b\n 2. \\<And>Pa Q x.\n       \\<lbrakk>sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x\n                         \\<le> P x * wp f Q x + (1 - P x) * wp g Q x\n 3. \\<And>Pa c x.\n       \\<lbrakk>sound Pa; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (P x * wp f Pa x + (1 - P x) * wp g Pa x) =\n                         P x * wp f (\\<lambda>x. c * Pa x) x +\n                         (1 - P x) * wp g (\\<lambda>x. c * Pa x) x", "finally"], ["proof (chain)\npicking this:\n  P s * wp f Q s + (1 - P s) * wp g Q s \\<le> b", "show \"P s * wp f Q s + (1 - P s) * wp g Q s \\<le> b\""], ["proof (prove)\nusing this:\n  P s * wp f Q s + (1 - P s) * wp g Q s \\<le> b\n\ngoal (1 subgoal):\n 1. P s * wp f Q s + (1 - P s) * wp g Q s \\<le> b", "."], ["proof (state)\nthis:\n  P s * wp f Q s + (1 - P s) * wp g Q s \\<le> b\n\ngoal (2 subgoals):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x\n                         \\<le> P x * wp f Q x + (1 - P x) * wp g Q x\n 2. \\<And>Pa c x.\n       \\<lbrakk>sound Pa; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (P x * wp f Pa x + (1 - P x) * wp g Pa x) =\n                         P x * wp f (\\<lambda>x. c * Pa x) x +\n                         (1 - P x) * wp g (\\<lambda>x. c * Pa x) x", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x\n                         \\<le> P x * wp f Q x + (1 - P x) * wp g Q x\n 2. \\<And>Pa c x.\n       \\<lbrakk>sound Pa; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (P x * wp f Pa x + (1 - P x) * wp g Pa x) =\n                         P x * wp f (\\<lambda>x. c * Pa x) x +\n                         (1 - P x) * wp g (\\<lambda>x. c * Pa x) x", "txt \\<open>Monotonic:\\<close>"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x\n                         \\<le> P x * wp f Q x + (1 - P x) * wp g Q x\n 2. \\<And>Pa c x.\n       \\<lbrakk>sound Pa; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (P x * wp f Pa x + (1 - P x) * wp g Pa x) =\n                         P x * wp f (\\<lambda>x. c * Pa x) x +\n                         (1 - P x) * wp g (\\<lambda>x. c * Pa x) x", "fix Q R::\"'s \\<Rightarrow> real\" and s"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x\n                         \\<le> P x * wp f Q x + (1 - P x) * wp g Q x\n 2. \\<And>Pa c x.\n       \\<lbrakk>sound Pa; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (P x * wp f Pa x + (1 - P x) * wp g Pa x) =\n                         P x * wp f (\\<lambda>x. c * Pa x) x +\n                         (1 - P x) * wp g (\\<lambda>x. c * Pa x) x", "assume sQ: \"sound Q\" and sR: \"sound R\" and le: \"Q \\<tturnstile> R\""], ["proof (state)\nthis:\n  sound Q\n  sound R\n  Q \\<tturnstile> R\n\ngoal (2 subgoals):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x\n                         \\<le> P x * wp f Q x + (1 - P x) * wp g Q x\n 2. \\<And>Pa c x.\n       \\<lbrakk>sound Pa; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (P x * wp f Pa x + (1 - P x) * wp g Pa x) =\n                         P x * wp f (\\<lambda>x. c * Pa x) x +\n                         (1 - P x) * wp g (\\<lambda>x. c * Pa x) x", "with hf"], ["proof (chain)\npicking this:\n  healthy (wp f)\n  sound Q\n  sound R\n  Q \\<tturnstile> R", "have \"wp f Q s \\<le> wp f R s\""], ["proof (prove)\nusing this:\n  healthy (wp f)\n  sound Q\n  sound R\n  Q \\<tturnstile> R\n\ngoal (1 subgoal):\n 1. wp f Q s \\<le> wp f R s", "by(blast dest:mono_transD)"], ["proof (state)\nthis:\n  wp f Q s \\<le> wp f R s\n\ngoal (2 subgoals):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x\n                         \\<le> P x * wp f Q x + (1 - P x) * wp g Q x\n 2. \\<And>Pa c x.\n       \\<lbrakk>sound Pa; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (P x * wp f Pa x + (1 - P x) * wp g Pa x) =\n                         P x * wp f (\\<lambda>x. c * Pa x) x +\n                         (1 - P x) * wp g (\\<lambda>x. c * Pa x) x", "with uP"], ["proof (chain)\npicking this:\n  unitary P\n  wp f Q s \\<le> wp f R s", "have \"P s * wp f Q s \\<le> P s * wp f R s\""], ["proof (prove)\nusing this:\n  unitary P\n  wp f Q s \\<le> wp f R s\n\ngoal (1 subgoal):\n 1. P s * wp f Q s \\<le> P s * wp f R s", "by(auto intro:mult_left_mono)"], ["proof (state)\nthis:\n  P s * wp f Q s \\<le> P s * wp f R s\n\ngoal (2 subgoals):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x\n                         \\<le> P x * wp f Q x + (1 - P x) * wp g Q x\n 2. \\<And>Pa c x.\n       \\<lbrakk>sound Pa; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (P x * wp f Pa x + (1 - P x) * wp g Pa x) =\n                         P x * wp f (\\<lambda>x. c * Pa x) x +\n                         (1 - P x) * wp g (\\<lambda>x. c * Pa x) x", "moreover"], ["proof (state)\nthis:\n  P s * wp f Q s \\<le> P s * wp f R s\n\ngoal (2 subgoals):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x\n                         \\<le> P x * wp f Q x + (1 - P x) * wp g Q x\n 2. \\<And>Pa c x.\n       \\<lbrakk>sound Pa; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (P x * wp f Pa x + (1 - P x) * wp g Pa x) =\n                         P x * wp f (\\<lambda>x. c * Pa x) x +\n                         (1 - P x) * wp g (\\<lambda>x. c * Pa x) x", "{"], ["proof (state)\nthis:\n  P s * wp f Q s \\<le> P s * wp f R s\n\ngoal (2 subgoals):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x\n                         \\<le> P x * wp f Q x + (1 - P x) * wp g Q x\n 2. \\<And>Pa c x.\n       \\<lbrakk>sound Pa; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (P x * wp f Pa x + (1 - P x) * wp g Pa x) =\n                         P x * wp f (\\<lambda>x. c * Pa x) x +\n                         (1 - P x) * wp g (\\<lambda>x. c * Pa x) x", "from sQ sR le hg"], ["proof (chain)\npicking this:\n  sound Q\n  sound R\n  Q \\<tturnstile> R\n  healthy (wp g)", "have \"wp g Q s \\<le> wp g R s\""], ["proof (prove)\nusing this:\n  sound Q\n  sound R\n  Q \\<tturnstile> R\n  healthy (wp g)\n\ngoal (1 subgoal):\n 1. wp g Q s \\<le> wp g R s", "by(blast dest:mono_transD)"], ["proof (state)\nthis:\n  wp g Q s \\<le> wp g R s\n\ngoal (2 subgoals):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x\n                         \\<le> P x * wp f Q x + (1 - P x) * wp g Q x\n 2. \\<And>Pa c x.\n       \\<lbrakk>sound Pa; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (P x * wp f Pa x + (1 - P x) * wp g Pa x) =\n                         P x * wp f (\\<lambda>x. c * Pa x) x +\n                         (1 - P x) * wp g (\\<lambda>x. c * Pa x) x", "moreover"], ["proof (state)\nthis:\n  wp g Q s \\<le> wp g R s\n\ngoal (2 subgoals):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x\n                         \\<le> P x * wp f Q x + (1 - P x) * wp g Q x\n 2. \\<And>Pa c x.\n       \\<lbrakk>sound Pa; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (P x * wp f Pa x + (1 - P x) * wp g Pa x) =\n                         P x * wp f (\\<lambda>x. c * Pa x) x +\n                         (1 - P x) * wp g (\\<lambda>x. c * Pa x) x", "from uP"], ["proof (chain)\npicking this:\n  unitary P", "have \"0 \\<le> 1 - P s\""], ["proof (prove)\nusing this:\n  unitary P\n\ngoal (1 subgoal):\n 1. 0 \\<le> 1 - P s", "by auto"], ["proof (state)\nthis:\n  0 \\<le> 1 - P s\n\ngoal (2 subgoals):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x\n                         \\<le> P x * wp f Q x + (1 - P x) * wp g Q x\n 2. \\<And>Pa c x.\n       \\<lbrakk>sound Pa; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (P x * wp f Pa x + (1 - P x) * wp g Pa x) =\n                         P x * wp f (\\<lambda>x. c * Pa x) x +\n                         (1 - P x) * wp g (\\<lambda>x. c * Pa x) x", "ultimately"], ["proof (chain)\npicking this:\n  wp g Q s \\<le> wp g R s\n  0 \\<le> 1 - P s", "have \"(1 - P s) * wp g Q s \\<le> (1 - P s) * wp g R s\""], ["proof (prove)\nusing this:\n  wp g Q s \\<le> wp g R s\n  0 \\<le> 1 - P s\n\ngoal (1 subgoal):\n 1. (1 - P s) * wp g Q s \\<le> (1 - P s) * wp g R s", "by(auto intro:mult_left_mono)"], ["proof (state)\nthis:\n  (1 - P s) * wp g Q s \\<le> (1 - P s) * wp g R s\n\ngoal (2 subgoals):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x\n                         \\<le> P x * wp f Q x + (1 - P x) * wp g Q x\n 2. \\<And>Pa c x.\n       \\<lbrakk>sound Pa; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (P x * wp f Pa x + (1 - P x) * wp g Pa x) =\n                         P x * wp f (\\<lambda>x. c * Pa x) x +\n                         (1 - P x) * wp g (\\<lambda>x. c * Pa x) x", "}"], ["proof (state)\nthis:\n  (1 - P s) * wp g Q s \\<le> (1 - P s) * wp g R s\n\ngoal (2 subgoals):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wp f Pa x + (1 - P x) * wp g Pa x\n                         \\<le> P x * wp f Q x + (1 - P x) * wp g Q x\n 2. \\<And>Pa c x.\n       \\<lbrakk>sound Pa; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (P x * wp f Pa x + (1 - P x) * wp g Pa x) =\n                         P x * wp f (\\<lambda>x. c * Pa x) x +\n                         (1 - P x) * wp g (\\<lambda>x. c * Pa x) x", "ultimately"], ["proof (chain)\npicking this:\n  P s * wp f Q s \\<le> P s * wp f R s\n  (1 - P s) * wp g Q s \\<le> (1 - P s) * wp g R s", "show \"P s * wp f Q s + (1 - P s) * wp g Q s \\<le>\n                   P s * wp f R s + (1 - P s) * wp g R s\""], ["proof (prove)\nusing this:\n  P s * wp f Q s \\<le> P s * wp f R s\n  (1 - P s) * wp g Q s \\<le> (1 - P s) * wp g R s\n\ngoal (1 subgoal):\n 1. P s * wp f Q s + (1 - P s) * wp g Q s\n    \\<le> P s * wp f R s + (1 - P s) * wp g R s", "by(auto)"], ["proof (state)\nthis:\n  P s * wp f Q s + (1 - P s) * wp g Q s\n  \\<le> P s * wp f R s + (1 - P s) * wp g R s\n\ngoal (1 subgoal):\n 1. \\<And>Pa c x.\n       \\<lbrakk>sound Pa; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (P x * wp f Pa x + (1 - P x) * wp g Pa x) =\n                         P x * wp f (\\<lambda>x. c * Pa x) x +\n                         (1 - P x) * wp g (\\<lambda>x. c * Pa x) x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Pa c x.\n       \\<lbrakk>sound Pa; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (P x * wp f Pa x + (1 - P x) * wp g Pa x) =\n                         P x * wp f (\\<lambda>x. c * Pa x) x +\n                         (1 - P x) * wp g (\\<lambda>x. c * Pa x) x", "txt \\<open>Scaling:\\<close>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Pa c x.\n       \\<lbrakk>sound Pa; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (P x * wp f Pa x + (1 - P x) * wp g Pa x) =\n                         P x * wp f (\\<lambda>x. c * Pa x) x +\n                         (1 - P x) * wp g (\\<lambda>x. c * Pa x) x", "fix Q::\"'s \\<Rightarrow> real\" and c::real and s::'s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Pa c x.\n       \\<lbrakk>sound Pa; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (P x * wp f Pa x + (1 - P x) * wp g Pa x) =\n                         P x * wp f (\\<lambda>x. c * Pa x) x +\n                         (1 - P x) * wp g (\\<lambda>x. c * Pa x) x", "assume sQ: \"sound Q\" and pos: \"0 \\<le> c\""], ["proof (state)\nthis:\n  sound Q\n  0 \\<le> c\n\ngoal (1 subgoal):\n 1. \\<And>Pa c x.\n       \\<lbrakk>sound Pa; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (P x * wp f Pa x + (1 - P x) * wp g Pa x) =\n                         P x * wp f (\\<lambda>x. c * Pa x) x +\n                         (1 - P x) * wp g (\\<lambda>x. c * Pa x) x", "have \"c * (P s * wp f Q s + (1 - P s) * wp g Q s) =\n        P s * (c * wp f Q s) + (1 - P s) * (c * wp g Q s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c * (P s * wp f Q s + (1 - P s) * wp g Q s) =\n    P s * (c * wp f Q s) + (1 - P s) * (c * wp g Q s)", "by(simp add:distrib_left)"], ["proof (state)\nthis:\n  c * (P s * wp f Q s + (1 - P s) * wp g Q s) =\n  P s * (c * wp f Q s) + (1 - P s) * (c * wp g Q s)\n\ngoal (1 subgoal):\n 1. \\<And>Pa c x.\n       \\<lbrakk>sound Pa; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (P x * wp f Pa x + (1 - P x) * wp g Pa x) =\n                         P x * wp f (\\<lambda>x. c * Pa x) x +\n                         (1 - P x) * wp g (\\<lambda>x. c * Pa x) x", "also"], ["proof (state)\nthis:\n  c * (P s * wp f Q s + (1 - P s) * wp g Q s) =\n  P s * (c * wp f Q s) + (1 - P s) * (c * wp g Q s)\n\ngoal (1 subgoal):\n 1. \\<And>Pa c x.\n       \\<lbrakk>sound Pa; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (P x * wp f Pa x + (1 - P x) * wp g Pa x) =\n                         P x * wp f (\\<lambda>x. c * Pa x) x +\n                         (1 - P x) * wp g (\\<lambda>x. c * Pa x) x", "have \"... = P s * wp f (\\<lambda>s.  c * Q s) s +\n                   (1 - P s) * wp g (\\<lambda>s. c * Q s) s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P s * (c * wp f Q s) + (1 - P s) * (c * wp g Q s) =\n    P s * wp f (\\<lambda>s. c * Q s) s +\n    (1 - P s) * wp g (\\<lambda>s. c * Q s) s", "using hf hg sQ pos"], ["proof (prove)\nusing this:\n  healthy (wp f)\n  healthy (wp g)\n  sound Q\n  0 \\<le> c\n\ngoal (1 subgoal):\n 1. P s * (c * wp f Q s) + (1 - P s) * (c * wp g Q s) =\n    P s * wp f (\\<lambda>s. c * Q s) s +\n    (1 - P s) * wp g (\\<lambda>s. c * Q s) s", "by(simp add:scalingD[OF healthy_scalingD])"], ["proof (state)\nthis:\n  P s * (c * wp f Q s) + (1 - P s) * (c * wp g Q s) =\n  P s * wp f (\\<lambda>s. c * Q s) s +\n  (1 - P s) * wp g (\\<lambda>s. c * Q s) s\n\ngoal (1 subgoal):\n 1. \\<And>Pa c x.\n       \\<lbrakk>sound Pa; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (P x * wp f Pa x + (1 - P x) * wp g Pa x) =\n                         P x * wp f (\\<lambda>x. c * Pa x) x +\n                         (1 - P x) * wp g (\\<lambda>x. c * Pa x) x", "finally"], ["proof (chain)\npicking this:\n  c * (P s * wp f Q s + (1 - P s) * wp g Q s) =\n  P s * wp f (\\<lambda>s. c * Q s) s +\n  (1 - P s) * wp g (\\<lambda>s. c * Q s) s", "show \"c * (P s * wp f Q s + (1 - P s) * wp g Q s) =\n                P s * wp f (\\<lambda>s. c * Q s) s + (1 - P s) * wp g (\\<lambda>s. c * Q s) s\""], ["proof (prove)\nusing this:\n  c * (P s * wp f Q s + (1 - P s) * wp g Q s) =\n  P s * wp f (\\<lambda>s. c * Q s) s +\n  (1 - P s) * wp g (\\<lambda>s. c * Q s) s\n\ngoal (1 subgoal):\n 1. c * (P s * wp f Q s + (1 - P s) * wp g Q s) =\n    P s * wp f (\\<lambda>s. c * Q s) s +\n    (1 - P s) * wp g (\\<lambda>s. c * Q s) s", "."], ["proof (state)\nthis:\n  c * (P s * wp f Q s + (1 - P s) * wp g Q s) =\n  P s * wp f (\\<lambda>s. c * Q s) s +\n  (1 - P s) * wp g (\\<lambda>s. c * Q s) s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nearly_healthy_wlp_PC:\n  fixes f::\"'s prog\" \n  assumes hf: \"nearly_healthy (wlp f)\"\n      and hg: \"nearly_healthy (wlp g)\"\n      and uP: \"unitary P\"\n  shows \"nearly_healthy (wlp (f \\<^bsub>P\\<^esub>\\<oplus> g))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nearly_healthy (wlp (f \\<^bsub>P\\<^esub>\\<oplus> g))", "proof(intro nearly_healthyI unitaryI2 nnegI bounded_byI le_funI,\n      simp_all add:wp_eval)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>Pa x.\n       unitary Pa \\<Longrightarrow>\n       0 \\<le> P x * wlp f Pa x + (1 - P x) * wlp g Pa x\n 2. \\<And>Pa x.\n       unitary Pa \\<Longrightarrow>\n       P x * wlp f Pa x + (1 - P x) * wlp g Pa x \\<le> 1\n 3. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wlp f Pa x + (1 - P x) * wlp g Pa x\n                         \\<le> P x * wlp f Q x + (1 - P x) * wlp g Q x", "fix Q::\"'s expect\" and s::'s"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>Pa x.\n       unitary Pa \\<Longrightarrow>\n       0 \\<le> P x * wlp f Pa x + (1 - P x) * wlp g Pa x\n 2. \\<And>Pa x.\n       unitary Pa \\<Longrightarrow>\n       P x * wlp f Pa x + (1 - P x) * wlp g Pa x \\<le> 1\n 3. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wlp f Pa x + (1 - P x) * wlp g Pa x\n                         \\<le> P x * wlp f Q x + (1 - P x) * wlp g Q x", "assume uQ: \"unitary Q\""], ["proof (state)\nthis:\n  unitary Q\n\ngoal (3 subgoals):\n 1. \\<And>Pa x.\n       unitary Pa \\<Longrightarrow>\n       0 \\<le> P x * wlp f Pa x + (1 - P x) * wlp g Pa x\n 2. \\<And>Pa x.\n       unitary Pa \\<Longrightarrow>\n       P x * wlp f Pa x + (1 - P x) * wlp g Pa x \\<le> 1\n 3. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wlp f Pa x + (1 - P x) * wlp g Pa x\n                         \\<le> P x * wlp f Q x + (1 - P x) * wlp g Q x", "from uQ hf hg"], ["proof (chain)\npicking this:\n  unitary Q\n  nearly_healthy (wlp f)\n  nearly_healthy (wlp g)", "have utQ: \"unitary (wlp f Q)\" \"unitary (wlp g Q)\""], ["proof (prove)\nusing this:\n  unitary Q\n  nearly_healthy (wlp f)\n  nearly_healthy (wlp g)\n\ngoal (1 subgoal):\n 1. unitary (wlp f Q) &&& unitary (wlp g Q)", "by(auto)"], ["proof (state)\nthis:\n  unitary (wlp f Q)\n  unitary (wlp g Q)\n\ngoal (3 subgoals):\n 1. \\<And>Pa x.\n       unitary Pa \\<Longrightarrow>\n       0 \\<le> P x * wlp f Pa x + (1 - P x) * wlp g Pa x\n 2. \\<And>Pa x.\n       unitary Pa \\<Longrightarrow>\n       P x * wlp f Pa x + (1 - P x) * wlp g Pa x \\<le> 1\n 3. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wlp f Pa x + (1 - P x) * wlp g Pa x\n                         \\<le> P x * wlp f Q x + (1 - P x) * wlp g Q x", "from uP"], ["proof (chain)\npicking this:\n  unitary P", "have nnP: \"0 \\<le> P s\" \"0 \\<le> 1 - P s\""], ["proof (prove)\nusing this:\n  unitary P\n\ngoal (1 subgoal):\n 1. 0 \\<le> P s &&& 0 \\<le> 1 - P s", "by auto"], ["proof (state)\nthis:\n  0 \\<le> P s\n  0 \\<le> 1 - P s\n\ngoal (3 subgoals):\n 1. \\<And>Pa x.\n       unitary Pa \\<Longrightarrow>\n       0 \\<le> P x * wlp f Pa x + (1 - P x) * wlp g Pa x\n 2. \\<And>Pa x.\n       unitary Pa \\<Longrightarrow>\n       P x * wlp f Pa x + (1 - P x) * wlp g Pa x \\<le> 1\n 3. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wlp f Pa x + (1 - P x) * wlp g Pa x\n                         \\<le> P x * wlp f Q x + (1 - P x) * wlp g Q x", "moreover"], ["proof (state)\nthis:\n  0 \\<le> P s\n  0 \\<le> 1 - P s\n\ngoal (3 subgoals):\n 1. \\<And>Pa x.\n       unitary Pa \\<Longrightarrow>\n       0 \\<le> P x * wlp f Pa x + (1 - P x) * wlp g Pa x\n 2. \\<And>Pa x.\n       unitary Pa \\<Longrightarrow>\n       P x * wlp f Pa x + (1 - P x) * wlp g Pa x \\<le> 1\n 3. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wlp f Pa x + (1 - P x) * wlp g Pa x\n                         \\<le> P x * wlp f Q x + (1 - P x) * wlp g Q x", "from utQ"], ["proof (chain)\npicking this:\n  unitary (wlp f Q)\n  unitary (wlp g Q)", "have \"0 \\<le> wlp f Q s\" \"0 \\<le> wlp g Q s\""], ["proof (prove)\nusing this:\n  unitary (wlp f Q)\n  unitary (wlp g Q)\n\ngoal (1 subgoal):\n 1. 0 \\<le> wlp f Q s &&& 0 \\<le> wlp g Q s", "by(auto)"], ["proof (state)\nthis:\n  0 \\<le> wlp f Q s\n  0 \\<le> wlp g Q s\n\ngoal (3 subgoals):\n 1. \\<And>Pa x.\n       unitary Pa \\<Longrightarrow>\n       0 \\<le> P x * wlp f Pa x + (1 - P x) * wlp g Pa x\n 2. \\<And>Pa x.\n       unitary Pa \\<Longrightarrow>\n       P x * wlp f Pa x + (1 - P x) * wlp g Pa x \\<le> 1\n 3. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wlp f Pa x + (1 - P x) * wlp g Pa x\n                         \\<le> P x * wlp f Q x + (1 - P x) * wlp g Q x", "ultimately"], ["proof (chain)\npicking this:\n  0 \\<le> P s\n  0 \\<le> 1 - P s\n  0 \\<le> wlp f Q s\n  0 \\<le> wlp g Q s", "show \"0 \\<le> P s * wlp f Q s + (1 - P s) * wlp g Q s\""], ["proof (prove)\nusing this:\n  0 \\<le> P s\n  0 \\<le> 1 - P s\n  0 \\<le> wlp f Q s\n  0 \\<le> wlp g Q s\n\ngoal (1 subgoal):\n 1. 0 \\<le> P s * wlp f Q s + (1 - P s) * wlp g Q s", "by(auto intro:add_nonneg_nonneg mult_nonneg_nonneg)"], ["proof (state)\nthis:\n  0 \\<le> P s * wlp f Q s + (1 - P s) * wlp g Q s\n\ngoal (2 subgoals):\n 1. \\<And>Pa x.\n       unitary Pa \\<Longrightarrow>\n       P x * wlp f Pa x + (1 - P x) * wlp g Pa x \\<le> 1\n 2. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wlp f Pa x + (1 - P x) * wlp g Pa x\n                         \\<le> P x * wlp f Q x + (1 - P x) * wlp g Q x", "from utQ"], ["proof (chain)\npicking this:\n  unitary (wlp f Q)\n  unitary (wlp g Q)", "have \"wlp f Q s \\<le> 1\" \"wlp g Q s \\<le> 1\""], ["proof (prove)\nusing this:\n  unitary (wlp f Q)\n  unitary (wlp g Q)\n\ngoal (1 subgoal):\n 1. wlp f Q s \\<le> 1 &&& wlp g Q s \\<le> 1", "by(auto)"], ["proof (state)\nthis:\n  wlp f Q s \\<le> 1\n  wlp g Q s \\<le> 1\n\ngoal (2 subgoals):\n 1. \\<And>Pa x.\n       unitary Pa \\<Longrightarrow>\n       P x * wlp f Pa x + (1 - P x) * wlp g Pa x \\<le> 1\n 2. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wlp f Pa x + (1 - P x) * wlp g Pa x\n                         \\<le> P x * wlp f Q x + (1 - P x) * wlp g Q x", "with nnP"], ["proof (chain)\npicking this:\n  0 \\<le> P s\n  0 \\<le> 1 - P s\n  wlp f Q s \\<le> 1\n  wlp g Q s \\<le> 1", "have \"P s * wlp f Q s + (1 - P s) * wlp g Q s \\<le> P s * 1 + (1 - P s) * 1\""], ["proof (prove)\nusing this:\n  0 \\<le> P s\n  0 \\<le> 1 - P s\n  wlp f Q s \\<le> 1\n  wlp g Q s \\<le> 1\n\ngoal (1 subgoal):\n 1. P s * wlp f Q s + (1 - P s) * wlp g Q s \\<le> P s * 1 + (1 - P s) * 1", "by(blast intro:add_mono mult_left_mono)"], ["proof (state)\nthis:\n  P s * wlp f Q s + (1 - P s) * wlp g Q s \\<le> P s * 1 + (1 - P s) * 1\n\ngoal (2 subgoals):\n 1. \\<And>Pa x.\n       unitary Pa \\<Longrightarrow>\n       P x * wlp f Pa x + (1 - P x) * wlp g Pa x \\<le> 1\n 2. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wlp f Pa x + (1 - P x) * wlp g Pa x\n                         \\<le> P x * wlp f Q x + (1 - P x) * wlp g Q x", "thus \"P s * wlp f Q s + (1 - P s) * wlp g Q s \\<le> 1\""], ["proof (prove)\nusing this:\n  P s * wlp f Q s + (1 - P s) * wlp g Q s \\<le> P s * 1 + (1 - P s) * 1\n\ngoal (1 subgoal):\n 1. P s * wlp f Q s + (1 - P s) * wlp g Q s \\<le> 1", "by(simp)"], ["proof (state)\nthis:\n  P s * wlp f Q s + (1 - P s) * wlp g Q s \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wlp f Pa x + (1 - P x) * wlp g Pa x\n                         \\<le> P x * wlp f Q x + (1 - P x) * wlp g Q x", "fix R::\"'s expect\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wlp f Pa x + (1 - P x) * wlp g Pa x\n                         \\<le> P x * wlp f Q x + (1 - P x) * wlp g Q x", "assume uR: \"unitary R\" and le: \"Q \\<tturnstile> R\""], ["proof (state)\nthis:\n  unitary R\n  Q \\<tturnstile> R\n\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wlp f Pa x + (1 - P x) * wlp g Pa x\n                         \\<le> P x * wlp f Q x + (1 - P x) * wlp g Q x", "with uQ"], ["proof (chain)\npicking this:\n  unitary Q\n  unitary R\n  Q \\<tturnstile> R", "have \"wlp f Q s \\<le> wlp f R s\""], ["proof (prove)\nusing this:\n  unitary Q\n  unitary R\n  Q \\<tturnstile> R\n\ngoal (1 subgoal):\n 1. wlp f Q s \\<le> wlp f R s", "by(auto intro:le_funD[OF nearly_healthy_monoD, OF hf])"], ["proof (state)\nthis:\n  wlp f Q s \\<le> wlp f R s\n\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wlp f Pa x + (1 - P x) * wlp g Pa x\n                         \\<le> P x * wlp f Q x + (1 - P x) * wlp g Q x", "with nnP"], ["proof (chain)\npicking this:\n  0 \\<le> P s\n  0 \\<le> 1 - P s\n  wlp f Q s \\<le> wlp f R s", "have \"P s * wlp f Q s \\<le> P s * wlp f R s\""], ["proof (prove)\nusing this:\n  0 \\<le> P s\n  0 \\<le> 1 - P s\n  wlp f Q s \\<le> wlp f R s\n\ngoal (1 subgoal):\n 1. P s * wlp f Q s \\<le> P s * wlp f R s", "by(auto intro:mult_left_mono)"], ["proof (state)\nthis:\n  P s * wlp f Q s \\<le> P s * wlp f R s\n\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wlp f Pa x + (1 - P x) * wlp g Pa x\n                         \\<le> P x * wlp f Q x + (1 - P x) * wlp g Q x", "moreover"], ["proof (state)\nthis:\n  P s * wlp f Q s \\<le> P s * wlp f R s\n\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wlp f Pa x + (1 - P x) * wlp g Pa x\n                         \\<le> P x * wlp f Q x + (1 - P x) * wlp g Q x", "{"], ["proof (state)\nthis:\n  P s * wlp f Q s \\<le> P s * wlp f R s\n\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wlp f Pa x + (1 - P x) * wlp g Pa x\n                         \\<le> P x * wlp f Q x + (1 - P x) * wlp g Q x", "from uQ uR le"], ["proof (chain)\npicking this:\n  unitary Q\n  unitary R\n  Q \\<tturnstile> R", "have \"wlp g Q s \\<le> wlp g R s\""], ["proof (prove)\nusing this:\n  unitary Q\n  unitary R\n  Q \\<tturnstile> R\n\ngoal (1 subgoal):\n 1. wlp g Q s \\<le> wlp g R s", "by(auto intro:le_funD[OF nearly_healthy_monoD, OF hg])"], ["proof (state)\nthis:\n  wlp g Q s \\<le> wlp g R s\n\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wlp f Pa x + (1 - P x) * wlp g Pa x\n                         \\<le> P x * wlp f Q x + (1 - P x) * wlp g Q x", "with nnP"], ["proof (chain)\npicking this:\n  0 \\<le> P s\n  0 \\<le> 1 - P s\n  wlp g Q s \\<le> wlp g R s", "have \"(1 - P s) * wlp g Q s \\<le> (1 - P s) * wlp g R s\""], ["proof (prove)\nusing this:\n  0 \\<le> P s\n  0 \\<le> 1 - P s\n  wlp g Q s \\<le> wlp g R s\n\ngoal (1 subgoal):\n 1. (1 - P s) * wlp g Q s \\<le> (1 - P s) * wlp g R s", "by(auto intro:mult_left_mono)"], ["proof (state)\nthis:\n  (1 - P s) * wlp g Q s \\<le> (1 - P s) * wlp g R s\n\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wlp f Pa x + (1 - P x) * wlp g Pa x\n                         \\<le> P x * wlp f Q x + (1 - P x) * wlp g Q x", "}"], ["proof (state)\nthis:\n  (1 - P s) * wlp g Q s \\<le> (1 - P s) * wlp g R s\n\ngoal (1 subgoal):\n 1. \\<And>Pa Q x.\n       \\<lbrakk>unitary Pa; unitary Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> P x * wlp f Pa x + (1 - P x) * wlp g Pa x\n                         \\<le> P x * wlp f Q x + (1 - P x) * wlp g Q x", "ultimately"], ["proof (chain)\npicking this:\n  P s * wlp f Q s \\<le> P s * wlp f R s\n  (1 - P s) * wlp g Q s \\<le> (1 - P s) * wlp g R s", "show \"P s * wlp f Q s + (1 - P s) * wlp g Q s \\<le>\n                   P s * wlp f R s + (1 - P s) * wlp g R s\""], ["proof (prove)\nusing this:\n  P s * wlp f Q s \\<le> P s * wlp f R s\n  (1 - P s) * wlp g Q s \\<le> (1 - P s) * wlp g R s\n\ngoal (1 subgoal):\n 1. P s * wlp f Q s + (1 - P s) * wlp g Q s\n    \\<le> P s * wlp f R s + (1 - P s) * wlp g R s", "by(auto)"], ["proof (state)\nthis:\n  P s * wlp f Q s + (1 - P s) * wlp g Q s\n  \\<le> P s * wlp f R s + (1 - P s) * wlp g R s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma healthy_wp_DC:\n  fixes f::\"'s prog\"\n  assumes hf: \"healthy (wp f)\" and hg: \"healthy (wp g)\"\n  shows \"healthy (wp (f \\<Sqinter> g))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. healthy (wp (f \\<Sqinter> g))", "proof(intro healthy_parts bounded_byI nnegI le_funI, simp_all only:wp_eval)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> min (wp f P x) (wp g P x) \\<le> b\n 2. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> min (wp f P x) (wp g P x)\n 3. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> min (wp f P x) (wp g P x)\n                         \\<le> min (wp f Q x) (wp g Q x)\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * min (wp f P x) (wp g P x) =\n                         min (wp f (\\<lambda>x. c * P x) x)\n                          (wp g (\\<lambda>x. c * P x) x)", "fix b and P::\"'s \\<Rightarrow> real\" and s::'s"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> min (wp f P x) (wp g P x) \\<le> b\n 2. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> min (wp f P x) (wp g P x)\n 3. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> min (wp f P x) (wp g P x)\n                         \\<le> min (wp f Q x) (wp g Q x)\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * min (wp f P x) (wp g P x) =\n                         min (wp f (\\<lambda>x. c * P x) x)\n                          (wp g (\\<lambda>x. c * P x) x)", "assume nP: \"nneg P\" and bP: \"bounded_by b P\""], ["proof (state)\nthis:\n  nneg P\n  bounded_by b P\n\ngoal (4 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> min (wp f P x) (wp g P x) \\<le> b\n 2. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> min (wp f P x) (wp g P x)\n 3. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> min (wp f P x) (wp g P x)\n                         \\<le> min (wp f Q x) (wp g Q x)\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * min (wp f P x) (wp g P x) =\n                         min (wp f (\\<lambda>x. c * P x) x)\n                          (wp g (\\<lambda>x. c * P x) x)", "with hf"], ["proof (chain)\npicking this:\n  healthy (wp f)\n  nneg P\n  bounded_by b P", "have \"bounded_by b (wp f P)\""], ["proof (prove)\nusing this:\n  healthy (wp f)\n  nneg P\n  bounded_by b P\n\ngoal (1 subgoal):\n 1. bounded_by b (wp f P)", "by(auto)"], ["proof (state)\nthis:\n  bounded_by b (wp f P)\n\ngoal (4 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> min (wp f P x) (wp g P x) \\<le> b\n 2. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> min (wp f P x) (wp g P x)\n 3. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> min (wp f P x) (wp g P x)\n                         \\<le> min (wp f Q x) (wp g Q x)\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * min (wp f P x) (wp g P x) =\n                         min (wp f (\\<lambda>x. c * P x) x)\n                          (wp g (\\<lambda>x. c * P x) x)", "hence \"wp f P s \\<le> b\""], ["proof (prove)\nusing this:\n  bounded_by b (wp f P)\n\ngoal (1 subgoal):\n 1. wp f P s \\<le> b", "by(blast)"], ["proof (state)\nthis:\n  wp f P s \\<le> b\n\ngoal (4 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> min (wp f P x) (wp g P x) \\<le> b\n 2. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> min (wp f P x) (wp g P x)\n 3. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> min (wp f P x) (wp g P x)\n                         \\<le> min (wp f Q x) (wp g Q x)\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * min (wp f P x) (wp g P x) =\n                         min (wp f (\\<lambda>x. c * P x) x)\n                          (wp g (\\<lambda>x. c * P x) x)", "thus \"min (wp f P s) (wp g P s) \\<le> b\""], ["proof (prove)\nusing this:\n  wp f P s \\<le> b\n\ngoal (1 subgoal):\n 1. min (wp f P s) (wp g P s) \\<le> b", "by(auto)"], ["proof (state)\nthis:\n  min (wp f P s) (wp g P s) \\<le> b\n\ngoal (3 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> min (wp f P x) (wp g P x)\n 2. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> min (wp f P x) (wp g P x)\n                         \\<le> min (wp f Q x) (wp g Q x)\n 3. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * min (wp f P x) (wp g P x) =\n                         min (wp f (\\<lambda>x. c * P x) x)\n                          (wp g (\\<lambda>x. c * P x) x)", "from nP bP assms"], ["proof (chain)\npicking this:\n  nneg P\n  bounded_by b P\n  healthy (wp f)\n  healthy (wp g)", "show \"0 \\<le> min (wp f P s) (wp g P s)\""], ["proof (prove)\nusing this:\n  nneg P\n  bounded_by b P\n  healthy (wp f)\n  healthy (wp g)\n\ngoal (1 subgoal):\n 1. 0 \\<le> min (wp f P s) (wp g P s)", "by(auto)"], ["proof (state)\nthis:\n  0 \\<le> min (wp f P s) (wp g P s)\n\ngoal (2 subgoals):\n 1. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> min (wp f P x) (wp g P x)\n                         \\<le> min (wp f Q x) (wp g Q x)\n 2. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * min (wp f P x) (wp g P x) =\n                         min (wp f (\\<lambda>x. c * P x) x)\n                          (wp g (\\<lambda>x. c * P x) x)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> min (wp f P x) (wp g P x)\n                         \\<le> min (wp f Q x) (wp g Q x)\n 2. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * min (wp f P x) (wp g P x) =\n                         min (wp f (\\<lambda>x. c * P x) x)\n                          (wp g (\\<lambda>x. c * P x) x)", "fix P::\"'s \\<Rightarrow> real\" and Q and s::'s"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> min (wp f P x) (wp g P x)\n                         \\<le> min (wp f Q x) (wp g Q x)\n 2. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * min (wp f P x) (wp g P x) =\n                         min (wp f (\\<lambda>x. c * P x) x)\n                          (wp g (\\<lambda>x. c * P x) x)", "from assms"], ["proof (chain)\npicking this:\n  healthy (wp f)\n  healthy (wp g)", "have mf: \"mono_trans (wp f)\" and mg: \"mono_trans (wp g)\""], ["proof (prove)\nusing this:\n  healthy (wp f)\n  healthy (wp g)\n\ngoal (1 subgoal):\n 1. mono_trans (wp f) &&& mono_trans (wp g)", "by(auto)"], ["proof (state)\nthis:\n  mono_trans (wp f)\n  mono_trans (wp g)\n\ngoal (2 subgoals):\n 1. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> min (wp f P x) (wp g P x)\n                         \\<le> min (wp f Q x) (wp g Q x)\n 2. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * min (wp f P x) (wp g P x) =\n                         min (wp f (\\<lambda>x. c * P x) x)\n                          (wp g (\\<lambda>x. c * P x) x)", "assume sP: \"sound P\" and sQ: \"sound Q\" and le: \"P \\<tturnstile> Q\""], ["proof (state)\nthis:\n  sound P\n  sound Q\n  P \\<tturnstile> Q\n\ngoal (2 subgoals):\n 1. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> min (wp f P x) (wp g P x)\n                         \\<le> min (wp f Q x) (wp g Q x)\n 2. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * min (wp f P x) (wp g P x) =\n                         min (wp f (\\<lambda>x. c * P x) x)\n                          (wp g (\\<lambda>x. c * P x) x)", "hence \"wp f P s \\<le> wp f Q s\" and \"wp g P s \\<le> wp g Q s\""], ["proof (prove)\nusing this:\n  sound P\n  sound Q\n  P \\<tturnstile> Q\n\ngoal (1 subgoal):\n 1. wp f P s \\<le> wp f Q s &&& wp g P s \\<le> wp g Q s", "by(auto intro:le_funD[OF mono_transD[OF mf]] le_funD[OF mono_transD[OF mg]])"], ["proof (state)\nthis:\n  wp f P s \\<le> wp f Q s\n  wp g P s \\<le> wp g Q s\n\ngoal (2 subgoals):\n 1. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> min (wp f P x) (wp g P x)\n                         \\<le> min (wp f Q x) (wp g Q x)\n 2. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * min (wp f P x) (wp g P x) =\n                         min (wp f (\\<lambda>x. c * P x) x)\n                          (wp g (\\<lambda>x. c * P x) x)", "thus \"min (wp f P s) (wp g P s) \\<le> min (wp f Q s) (wp g Q s)\""], ["proof (prove)\nusing this:\n  wp f P s \\<le> wp f Q s\n  wp g P s \\<le> wp g Q s\n\ngoal (1 subgoal):\n 1. min (wp f P s) (wp g P s) \\<le> min (wp f Q s) (wp g Q s)", "by(auto)"], ["proof (state)\nthis:\n  min (wp f P s) (wp g P s) \\<le> min (wp f Q s) (wp g Q s)\n\ngoal (1 subgoal):\n 1. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * min (wp f P x) (wp g P x) =\n                         min (wp f (\\<lambda>x. c * P x) x)\n                          (wp g (\\<lambda>x. c * P x) x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * min (wp f P x) (wp g P x) =\n                         min (wp f (\\<lambda>x. c * P x) x)\n                          (wp g (\\<lambda>x. c * P x) x)", "fix P::\"'s \\<Rightarrow> real\" and c::real and s::'s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * min (wp f P x) (wp g P x) =\n                         min (wp f (\\<lambda>x. c * P x) x)\n                          (wp g (\\<lambda>x. c * P x) x)", "assume sP: \"sound P\" and pos: \"0 \\<le> c\""], ["proof (state)\nthis:\n  sound P\n  0 \\<le> c\n\ngoal (1 subgoal):\n 1. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * min (wp f P x) (wp g P x) =\n                         min (wp f (\\<lambda>x. c * P x) x)\n                          (wp g (\\<lambda>x. c * P x) x)", "from assms"], ["proof (chain)\npicking this:\n  healthy (wp f)\n  healthy (wp g)", "have sf: \"scaling (wp f)\" and sg: \"scaling (wp g)\""], ["proof (prove)\nusing this:\n  healthy (wp f)\n  healthy (wp g)\n\ngoal (1 subgoal):\n 1. scaling (wp f) &&& scaling (wp g)", "by(auto)"], ["proof (state)\nthis:\n  scaling (wp f)\n  scaling (wp g)\n\ngoal (1 subgoal):\n 1. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * min (wp f P x) (wp g P x) =\n                         min (wp f (\\<lambda>x. c * P x) x)\n                          (wp g (\\<lambda>x. c * P x) x)", "from pos"], ["proof (chain)\npicking this:\n  0 \\<le> c", "have \"c * min (wp f P s) (wp g P s) =\n                 min (c * wp f P s) (c * wp g P s)\""], ["proof (prove)\nusing this:\n  0 \\<le> c\n\ngoal (1 subgoal):\n 1. c * min (wp f P s) (wp g P s) = min (c * wp f P s) (c * wp g P s)", "by(simp add:min_distrib)"], ["proof (state)\nthis:\n  c * min (wp f P s) (wp g P s) = min (c * wp f P s) (c * wp g P s)\n\ngoal (1 subgoal):\n 1. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * min (wp f P x) (wp g P x) =\n                         min (wp f (\\<lambda>x. c * P x) x)\n                          (wp g (\\<lambda>x. c * P x) x)", "also"], ["proof (state)\nthis:\n  c * min (wp f P s) (wp g P s) = min (c * wp f P s) (c * wp g P s)\n\ngoal (1 subgoal):\n 1. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * min (wp f P x) (wp g P x) =\n                         min (wp f (\\<lambda>x. c * P x) x)\n                          (wp g (\\<lambda>x. c * P x) x)", "from sP and pos"], ["proof (chain)\npicking this:\n  sound P\n  0 \\<le> c", "have \"... = min (wp f (\\<lambda>s. c * P s) s) (wp g (\\<lambda>s. c * P s) s)\""], ["proof (prove)\nusing this:\n  sound P\n  0 \\<le> c\n\ngoal (1 subgoal):\n 1. min (c * wp f P s) (c * wp g P s) =\n    min (wp f (\\<lambda>s. c * P s) s) (wp g (\\<lambda>s. c * P s) s)", "by(simp add:scalingD[OF sf] scalingD[OF sg])"], ["proof (state)\nthis:\n  min (c * wp f P s) (c * wp g P s) =\n  min (wp f (\\<lambda>s. c * P s) s) (wp g (\\<lambda>s. c * P s) s)\n\ngoal (1 subgoal):\n 1. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * min (wp f P x) (wp g P x) =\n                         min (wp f (\\<lambda>x. c * P x) x)\n                          (wp g (\\<lambda>x. c * P x) x)", "finally"], ["proof (chain)\npicking this:\n  c * min (wp f P s) (wp g P s) =\n  min (wp f (\\<lambda>s. c * P s) s) (wp g (\\<lambda>s. c * P s) s)", "show \"c * min (wp f P s) (wp g P s) =\n                min (wp f (\\<lambda>s. c * P s) s) (wp g (\\<lambda>s. c * P s) s)\""], ["proof (prove)\nusing this:\n  c * min (wp f P s) (wp g P s) =\n  min (wp f (\\<lambda>s. c * P s) s) (wp g (\\<lambda>s. c * P s) s)\n\ngoal (1 subgoal):\n 1. c * min (wp f P s) (wp g P s) =\n    min (wp f (\\<lambda>s. c * P s) s) (wp g (\\<lambda>s. c * P s) s)", "."], ["proof (state)\nthis:\n  c * min (wp f P s) (wp g P s) =\n  min (wp f (\\<lambda>s. c * P s) s) (wp g (\\<lambda>s. c * P s) s)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nearly_healthy_wlp_DC:\n  fixes f::\"'s prog\"\n  assumes hf: \"nearly_healthy (wlp f)\"\n      and hg: \"nearly_healthy (wlp g)\"\n  shows \"nearly_healthy (wlp (f \\<Sqinter> g))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nearly_healthy (wlp (f \\<Sqinter> g))", "proof(intro nearly_healthyI bounded_byI nnegI le_funI unitaryI2,\n      simp_all add:wp_eval, safe)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>P x. unitary P \\<Longrightarrow> 0 \\<le> wlp f P x\n 2. \\<And>P x. unitary P \\<Longrightarrow> 0 \\<le> wlp g P x\n 3. \\<And>P x.\n       unitary P \\<Longrightarrow> min (wlp f P x) (wlp g P x) \\<le> 1\n 4. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> min (wlp f P x) (wlp g P x) \\<le> wlp f Q x\n 5. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> min (wlp f P x) (wlp g P x) \\<le> wlp g Q x", "fix P::\"'s \\<Rightarrow> real\" and s::'s"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>P x. unitary P \\<Longrightarrow> 0 \\<le> wlp f P x\n 2. \\<And>P x. unitary P \\<Longrightarrow> 0 \\<le> wlp g P x\n 3. \\<And>P x.\n       unitary P \\<Longrightarrow> min (wlp f P x) (wlp g P x) \\<le> 1\n 4. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> min (wlp f P x) (wlp g P x) \\<le> wlp f Q x\n 5. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> min (wlp f P x) (wlp g P x) \\<le> wlp g Q x", "assume uP: \"unitary P\""], ["proof (state)\nthis:\n  unitary P\n\ngoal (5 subgoals):\n 1. \\<And>P x. unitary P \\<Longrightarrow> 0 \\<le> wlp f P x\n 2. \\<And>P x. unitary P \\<Longrightarrow> 0 \\<le> wlp g P x\n 3. \\<And>P x.\n       unitary P \\<Longrightarrow> min (wlp f P x) (wlp g P x) \\<le> 1\n 4. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> min (wlp f P x) (wlp g P x) \\<le> wlp f Q x\n 5. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> min (wlp f P x) (wlp g P x) \\<le> wlp g Q x", "with hf hg"], ["proof (chain)\npicking this:\n  nearly_healthy (wlp f)\n  nearly_healthy (wlp g)\n  unitary P", "have utP: \"unitary (wlp f P)\" \"unitary (wlp g P)\""], ["proof (prove)\nusing this:\n  nearly_healthy (wlp f)\n  nearly_healthy (wlp g)\n  unitary P\n\ngoal (1 subgoal):\n 1. unitary (wlp f P) &&& unitary (wlp g P)", "by(auto)"], ["proof (state)\nthis:\n  unitary (wlp f P)\n  unitary (wlp g P)\n\ngoal (5 subgoals):\n 1. \\<And>P x. unitary P \\<Longrightarrow> 0 \\<le> wlp f P x\n 2. \\<And>P x. unitary P \\<Longrightarrow> 0 \\<le> wlp g P x\n 3. \\<And>P x.\n       unitary P \\<Longrightarrow> min (wlp f P x) (wlp g P x) \\<le> 1\n 4. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> min (wlp f P x) (wlp g P x) \\<le> wlp f Q x\n 5. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> min (wlp f P x) (wlp g P x) \\<le> wlp g Q x", "thus \"0 \\<le> wlp f P s\" \"0 \\<le> wlp g P s\""], ["proof (prove)\nusing this:\n  unitary (wlp f P)\n  unitary (wlp g P)\n\ngoal (1 subgoal):\n 1. 0 \\<le> wlp f P s &&& 0 \\<le> wlp g P s", "by(auto)"], ["proof (state)\nthis:\n  0 \\<le> wlp f P s\n  0 \\<le> wlp g P s\n\ngoal (3 subgoals):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow> min (wlp f P x) (wlp g P x) \\<le> 1\n 2. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> min (wlp f P x) (wlp g P x) \\<le> wlp f Q x\n 3. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> min (wlp f P x) (wlp g P x) \\<le> wlp g Q x", "have \"min (wlp f P s) (wlp g P s) \\<le> wlp f P s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. min (wlp f P s) (wlp g P s) \\<le> wlp f P s", "by(auto)"], ["proof (state)\nthis:\n  min (wlp f P s) (wlp g P s) \\<le> wlp f P s\n\ngoal (3 subgoals):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow> min (wlp f P x) (wlp g P x) \\<le> 1\n 2. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> min (wlp f P x) (wlp g P x) \\<le> wlp f Q x\n 3. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> min (wlp f P x) (wlp g P x) \\<le> wlp g Q x", "also"], ["proof (state)\nthis:\n  min (wlp f P s) (wlp g P s) \\<le> wlp f P s\n\ngoal (3 subgoals):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow> min (wlp f P x) (wlp g P x) \\<le> 1\n 2. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> min (wlp f P x) (wlp g P x) \\<le> wlp f Q x\n 3. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> min (wlp f P x) (wlp g P x) \\<le> wlp g Q x", "from utP"], ["proof (chain)\npicking this:\n  unitary (wlp f P)\n  unitary (wlp g P)", "have \"... \\<le> 1\""], ["proof (prove)\nusing this:\n  unitary (wlp f P)\n  unitary (wlp g P)\n\ngoal (1 subgoal):\n 1. wlp f P s \\<le> 1", "by(auto)"], ["proof (state)\nthis:\n  wlp f P s \\<le> 1\n\ngoal (3 subgoals):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow> min (wlp f P x) (wlp g P x) \\<le> 1\n 2. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> min (wlp f P x) (wlp g P x) \\<le> wlp f Q x\n 3. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> min (wlp f P x) (wlp g P x) \\<le> wlp g Q x", "finally"], ["proof (chain)\npicking this:\n  min (wlp f P s) (wlp g P s) \\<le> 1", "show \"min (wlp f P s) (wlp g P s) \\<le> 1\""], ["proof (prove)\nusing this:\n  min (wlp f P s) (wlp g P s) \\<le> 1\n\ngoal (1 subgoal):\n 1. min (wlp f P s) (wlp g P s) \\<le> 1", "."], ["proof (state)\nthis:\n  min (wlp f P s) (wlp g P s) \\<le> 1\n\ngoal (2 subgoals):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> min (wlp f P x) (wlp g P x) \\<le> wlp f Q x\n 2. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> min (wlp f P x) (wlp g P x) \\<le> wlp g Q x", "fix Q::\"'s \\<Rightarrow> real\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> min (wlp f P x) (wlp g P x) \\<le> wlp f Q x\n 2. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> min (wlp f P x) (wlp g P x) \\<le> wlp g Q x", "assume uQ: \"unitary Q\" and le: \"P \\<tturnstile> Q\""], ["proof (state)\nthis:\n  unitary Q\n  P \\<tturnstile> Q\n\ngoal (2 subgoals):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> min (wlp f P x) (wlp g P x) \\<le> wlp f Q x\n 2. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> min (wlp f P x) (wlp g P x) \\<le> wlp g Q x", "have \"min (wlp f P s) (wlp g P s) \\<le> wlp f P s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. min (wlp f P s) (wlp g P s) \\<le> wlp f P s", "by(auto)"], ["proof (state)\nthis:\n  min (wlp f P s) (wlp g P s) \\<le> wlp f P s\n\ngoal (2 subgoals):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> min (wlp f P x) (wlp g P x) \\<le> wlp f Q x\n 2. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> min (wlp f P x) (wlp g P x) \\<le> wlp g Q x", "also"], ["proof (state)\nthis:\n  min (wlp f P s) (wlp g P s) \\<le> wlp f P s\n\ngoal (2 subgoals):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> min (wlp f P x) (wlp g P x) \\<le> wlp f Q x\n 2. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> min (wlp f P x) (wlp g P x) \\<le> wlp g Q x", "from uP uQ le"], ["proof (chain)\npicking this:\n  unitary P\n  unitary Q\n  P \\<tturnstile> Q", "have \"... \\<le> wlp f Q s\""], ["proof (prove)\nusing this:\n  unitary P\n  unitary Q\n  P \\<tturnstile> Q\n\ngoal (1 subgoal):\n 1. wlp f P s \\<le> wlp f Q s", "by(auto intro:le_funD[OF nearly_healthy_monoD, OF hf])"], ["proof (state)\nthis:\n  wlp f P s \\<le> wlp f Q s\n\ngoal (2 subgoals):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> min (wlp f P x) (wlp g P x) \\<le> wlp f Q x\n 2. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> min (wlp f P x) (wlp g P x) \\<le> wlp g Q x", "finally"], ["proof (chain)\npicking this:\n  min (wlp f P s) (wlp g P s) \\<le> wlp f Q s", "show \"min (wlp f P s) (wlp g P s) \\<le> wlp f Q s\""], ["proof (prove)\nusing this:\n  min (wlp f P s) (wlp g P s) \\<le> wlp f Q s\n\ngoal (1 subgoal):\n 1. min (wlp f P s) (wlp g P s) \\<le> wlp f Q s", "."], ["proof (state)\nthis:\n  min (wlp f P s) (wlp g P s) \\<le> wlp f Q s\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> min (wlp f P x) (wlp g P x) \\<le> wlp g Q x", "have \"min (wlp f P s) (wlp g P s) \\<le> wlp g P s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. min (wlp f P s) (wlp g P s) \\<le> wlp g P s", "by(auto)"], ["proof (state)\nthis:\n  min (wlp f P s) (wlp g P s) \\<le> wlp g P s\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> min (wlp f P x) (wlp g P x) \\<le> wlp g Q x", "also"], ["proof (state)\nthis:\n  min (wlp f P s) (wlp g P s) \\<le> wlp g P s\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> min (wlp f P x) (wlp g P x) \\<le> wlp g Q x", "from uP uQ le"], ["proof (chain)\npicking this:\n  unitary P\n  unitary Q\n  P \\<tturnstile> Q", "have \"... \\<le> wlp g Q s\""], ["proof (prove)\nusing this:\n  unitary P\n  unitary Q\n  P \\<tturnstile> Q\n\ngoal (1 subgoal):\n 1. wlp g P s \\<le> wlp g Q s", "by(auto intro:le_funD[OF nearly_healthy_monoD, OF hg])"], ["proof (state)\nthis:\n  wlp g P s \\<le> wlp g Q s\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> min (wlp f P x) (wlp g P x) \\<le> wlp g Q x", "finally"], ["proof (chain)\npicking this:\n  min (wlp f P s) (wlp g P s) \\<le> wlp g Q s", "show \"min (wlp f P s) (wlp g P s) \\<le> wlp g Q s\""], ["proof (prove)\nusing this:\n  min (wlp f P s) (wlp g P s) \\<le> wlp g Q s\n\ngoal (1 subgoal):\n 1. min (wlp f P s) (wlp g P s) \\<le> wlp g Q s", "."], ["proof (state)\nthis:\n  min (wlp f P s) (wlp g P s) \\<le> wlp g Q s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma healthy_wp_AC:\n  fixes f::\"'s prog\"\n  assumes hf: \"healthy (wp f)\" and hg: \"healthy (wp g)\"\n  shows \"healthy (wp (f \\<Squnion> g))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. healthy (wp (f \\<Squnion> g))", "proof(intro healthy_parts bounded_byI nnegI le_funI, simp_all only:wp_eval)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> max (wp f P x) (wp g P x) \\<le> b\n 2. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> max (wp f P x) (wp g P x)\n 3. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> max (wp f P x) (wp g P x)\n                         \\<le> max (wp f Q x) (wp g Q x)\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * max (wp f P x) (wp g P x) =\n                         max (wp f (\\<lambda>x. c * P x) x)\n                          (wp g (\\<lambda>x. c * P x) x)", "fix b and P::\"'s \\<Rightarrow> real\" and s::'s"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> max (wp f P x) (wp g P x) \\<le> b\n 2. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> max (wp f P x) (wp g P x)\n 3. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> max (wp f P x) (wp g P x)\n                         \\<le> max (wp f Q x) (wp g Q x)\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * max (wp f P x) (wp g P x) =\n                         max (wp f (\\<lambda>x. c * P x) x)\n                          (wp g (\\<lambda>x. c * P x) x)", "assume nP: \"nneg P\" and bP: \"bounded_by b P\""], ["proof (state)\nthis:\n  nneg P\n  bounded_by b P\n\ngoal (4 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> max (wp f P x) (wp g P x) \\<le> b\n 2. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> max (wp f P x) (wp g P x)\n 3. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> max (wp f P x) (wp g P x)\n                         \\<le> max (wp f Q x) (wp g Q x)\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * max (wp f P x) (wp g P x) =\n                         max (wp f (\\<lambda>x. c * P x) x)\n                          (wp g (\\<lambda>x. c * P x) x)", "with hf"], ["proof (chain)\npicking this:\n  healthy (wp f)\n  nneg P\n  bounded_by b P", "have \"bounded_by b (wp f P)\""], ["proof (prove)\nusing this:\n  healthy (wp f)\n  nneg P\n  bounded_by b P\n\ngoal (1 subgoal):\n 1. bounded_by b (wp f P)", "by(auto)"], ["proof (state)\nthis:\n  bounded_by b (wp f P)\n\ngoal (4 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> max (wp f P x) (wp g P x) \\<le> b\n 2. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> max (wp f P x) (wp g P x)\n 3. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> max (wp f P x) (wp g P x)\n                         \\<le> max (wp f Q x) (wp g Q x)\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * max (wp f P x) (wp g P x) =\n                         max (wp f (\\<lambda>x. c * P x) x)\n                          (wp g (\\<lambda>x. c * P x) x)", "hence \"wp f P s \\<le> b\""], ["proof (prove)\nusing this:\n  bounded_by b (wp f P)\n\ngoal (1 subgoal):\n 1. wp f P s \\<le> b", "by(blast)"], ["proof (state)\nthis:\n  wp f P s \\<le> b\n\ngoal (4 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> max (wp f P x) (wp g P x) \\<le> b\n 2. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> max (wp f P x) (wp g P x)\n 3. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> max (wp f P x) (wp g P x)\n                         \\<le> max (wp f Q x) (wp g Q x)\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * max (wp f P x) (wp g P x) =\n                         max (wp f (\\<lambda>x. c * P x) x)\n                          (wp g (\\<lambda>x. c * P x) x)", "moreover"], ["proof (state)\nthis:\n  wp f P s \\<le> b\n\ngoal (4 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> max (wp f P x) (wp g P x) \\<le> b\n 2. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> max (wp f P x) (wp g P x)\n 3. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> max (wp f P x) (wp g P x)\n                         \\<le> max (wp f Q x) (wp g Q x)\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * max (wp f P x) (wp g P x) =\n                         max (wp f (\\<lambda>x. c * P x) x)\n                          (wp g (\\<lambda>x. c * P x) x)", "{"], ["proof (state)\nthis:\n  wp f P s \\<le> b\n\ngoal (4 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> max (wp f P x) (wp g P x) \\<le> b\n 2. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> max (wp f P x) (wp g P x)\n 3. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> max (wp f P x) (wp g P x)\n                         \\<le> max (wp f Q x) (wp g Q x)\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * max (wp f P x) (wp g P x) =\n                         max (wp f (\\<lambda>x. c * P x) x)\n                          (wp g (\\<lambda>x. c * P x) x)", "from bP nP hg"], ["proof (chain)\npicking this:\n  bounded_by b P\n  nneg P\n  healthy (wp g)", "have \"bounded_by b (wp g P)\""], ["proof (prove)\nusing this:\n  bounded_by b P\n  nneg P\n  healthy (wp g)\n\ngoal (1 subgoal):\n 1. bounded_by b (wp g P)", "by(auto)"], ["proof (state)\nthis:\n  bounded_by b (wp g P)\n\ngoal (4 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> max (wp f P x) (wp g P x) \\<le> b\n 2. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> max (wp f P x) (wp g P x)\n 3. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> max (wp f P x) (wp g P x)\n                         \\<le> max (wp f Q x) (wp g Q x)\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * max (wp f P x) (wp g P x) =\n                         max (wp f (\\<lambda>x. c * P x) x)\n                          (wp g (\\<lambda>x. c * P x) x)", "hence \"wp g P s \\<le> b\""], ["proof (prove)\nusing this:\n  bounded_by b (wp g P)\n\ngoal (1 subgoal):\n 1. wp g P s \\<le> b", "by(blast)"], ["proof (state)\nthis:\n  wp g P s \\<le> b\n\ngoal (4 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> max (wp f P x) (wp g P x) \\<le> b\n 2. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> max (wp f P x) (wp g P x)\n 3. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> max (wp f P x) (wp g P x)\n                         \\<le> max (wp f Q x) (wp g Q x)\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * max (wp f P x) (wp g P x) =\n                         max (wp f (\\<lambda>x. c * P x) x)\n                          (wp g (\\<lambda>x. c * P x) x)", "}"], ["proof (state)\nthis:\n  wp g P s \\<le> b\n\ngoal (4 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> max (wp f P x) (wp g P x) \\<le> b\n 2. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> max (wp f P x) (wp g P x)\n 3. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> max (wp f P x) (wp g P x)\n                         \\<le> max (wp f Q x) (wp g Q x)\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * max (wp f P x) (wp g P x) =\n                         max (wp f (\\<lambda>x. c * P x) x)\n                          (wp g (\\<lambda>x. c * P x) x)", "ultimately"], ["proof (chain)\npicking this:\n  wp f P s \\<le> b\n  wp g P s \\<le> b", "show \"max (wp f P s) (wp g P s) \\<le> b\""], ["proof (prove)\nusing this:\n  wp f P s \\<le> b\n  wp g P s \\<le> b\n\ngoal (1 subgoal):\n 1. max (wp f P s) (wp g P s) \\<le> b", "by(auto)"], ["proof (state)\nthis:\n  max (wp f P s) (wp g P s) \\<le> b\n\ngoal (3 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> max (wp f P x) (wp g P x)\n 2. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> max (wp f P x) (wp g P x)\n                         \\<le> max (wp f Q x) (wp g Q x)\n 3. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * max (wp f P x) (wp g P x) =\n                         max (wp f (\\<lambda>x. c * P x) x)\n                          (wp g (\\<lambda>x. c * P x) x)", "from nP bP assms"], ["proof (chain)\npicking this:\n  nneg P\n  bounded_by b P\n  healthy (wp f)\n  healthy (wp g)", "have \"0 \\<le> wp f P s\""], ["proof (prove)\nusing this:\n  nneg P\n  bounded_by b P\n  healthy (wp f)\n  healthy (wp g)\n\ngoal (1 subgoal):\n 1. 0 \\<le> wp f P s", "by(auto)"], ["proof (state)\nthis:\n  0 \\<le> wp f P s\n\ngoal (3 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> max (wp f P x) (wp g P x)\n 2. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> max (wp f P x) (wp g P x)\n                         \\<le> max (wp f Q x) (wp g Q x)\n 3. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * max (wp f P x) (wp g P x) =\n                         max (wp f (\\<lambda>x. c * P x) x)\n                          (wp g (\\<lambda>x. c * P x) x)", "thus \"0 \\<le> max (wp f P s) (wp g P s)\""], ["proof (prove)\nusing this:\n  0 \\<le> wp f P s\n\ngoal (1 subgoal):\n 1. 0 \\<le> max (wp f P s) (wp g P s)", "by(auto)"], ["proof (state)\nthis:\n  0 \\<le> max (wp f P s) (wp g P s)\n\ngoal (2 subgoals):\n 1. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> max (wp f P x) (wp g P x)\n                         \\<le> max (wp f Q x) (wp g Q x)\n 2. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * max (wp f P x) (wp g P x) =\n                         max (wp f (\\<lambda>x. c * P x) x)\n                          (wp g (\\<lambda>x. c * P x) x)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> max (wp f P x) (wp g P x)\n                         \\<le> max (wp f Q x) (wp g Q x)\n 2. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * max (wp f P x) (wp g P x) =\n                         max (wp f (\\<lambda>x. c * P x) x)\n                          (wp g (\\<lambda>x. c * P x) x)", "fix P::\"'s \\<Rightarrow> real\" and Q and s::'s"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> max (wp f P x) (wp g P x)\n                         \\<le> max (wp f Q x) (wp g Q x)\n 2. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * max (wp f P x) (wp g P x) =\n                         max (wp f (\\<lambda>x. c * P x) x)\n                          (wp g (\\<lambda>x. c * P x) x)", "from assms"], ["proof (chain)\npicking this:\n  healthy (wp f)\n  healthy (wp g)", "have mf: \"mono_trans (wp f)\" and mg: \"mono_trans (wp g)\""], ["proof (prove)\nusing this:\n  healthy (wp f)\n  healthy (wp g)\n\ngoal (1 subgoal):\n 1. mono_trans (wp f) &&& mono_trans (wp g)", "by(auto)"], ["proof (state)\nthis:\n  mono_trans (wp f)\n  mono_trans (wp g)\n\ngoal (2 subgoals):\n 1. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> max (wp f P x) (wp g P x)\n                         \\<le> max (wp f Q x) (wp g Q x)\n 2. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * max (wp f P x) (wp g P x) =\n                         max (wp f (\\<lambda>x. c * P x) x)\n                          (wp g (\\<lambda>x. c * P x) x)", "assume sP: \"sound P\" and sQ: \"sound Q\" and le: \"P \\<tturnstile> Q\""], ["proof (state)\nthis:\n  sound P\n  sound Q\n  P \\<tturnstile> Q\n\ngoal (2 subgoals):\n 1. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> max (wp f P x) (wp g P x)\n                         \\<le> max (wp f Q x) (wp g Q x)\n 2. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * max (wp f P x) (wp g P x) =\n                         max (wp f (\\<lambda>x. c * P x) x)\n                          (wp g (\\<lambda>x. c * P x) x)", "hence \"wp f P s \\<le> wp f Q s\" and \"wp g P s \\<le> wp g Q s\""], ["proof (prove)\nusing this:\n  sound P\n  sound Q\n  P \\<tturnstile> Q\n\ngoal (1 subgoal):\n 1. wp f P s \\<le> wp f Q s &&& wp g P s \\<le> wp g Q s", "by(auto intro:le_funD[OF mono_transD, OF mf] le_funD[OF mono_transD, OF mg])"], ["proof (state)\nthis:\n  wp f P s \\<le> wp f Q s\n  wp g P s \\<le> wp g Q s\n\ngoal (2 subgoals):\n 1. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> max (wp f P x) (wp g P x)\n                         \\<le> max (wp f Q x) (wp g Q x)\n 2. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * max (wp f P x) (wp g P x) =\n                         max (wp f (\\<lambda>x. c * P x) x)\n                          (wp g (\\<lambda>x. c * P x) x)", "thus \"max (wp f P s) (wp g P s) \\<le> max (wp f Q s) (wp g Q s)\""], ["proof (prove)\nusing this:\n  wp f P s \\<le> wp f Q s\n  wp g P s \\<le> wp g Q s\n\ngoal (1 subgoal):\n 1. max (wp f P s) (wp g P s) \\<le> max (wp f Q s) (wp g Q s)", "by(auto)"], ["proof (state)\nthis:\n  max (wp f P s) (wp g P s) \\<le> max (wp f Q s) (wp g Q s)\n\ngoal (1 subgoal):\n 1. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * max (wp f P x) (wp g P x) =\n                         max (wp f (\\<lambda>x. c * P x) x)\n                          (wp g (\\<lambda>x. c * P x) x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * max (wp f P x) (wp g P x) =\n                         max (wp f (\\<lambda>x. c * P x) x)\n                          (wp g (\\<lambda>x. c * P x) x)", "fix P::\"'s \\<Rightarrow> real\" and c::real and s::'s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * max (wp f P x) (wp g P x) =\n                         max (wp f (\\<lambda>x. c * P x) x)\n                          (wp g (\\<lambda>x. c * P x) x)", "assume sP: \"sound P\" and pos: \"0 \\<le> c\""], ["proof (state)\nthis:\n  sound P\n  0 \\<le> c\n\ngoal (1 subgoal):\n 1. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * max (wp f P x) (wp g P x) =\n                         max (wp f (\\<lambda>x. c * P x) x)\n                          (wp g (\\<lambda>x. c * P x) x)", "from assms"], ["proof (chain)\npicking this:\n  healthy (wp f)\n  healthy (wp g)", "have sf: \"scaling (wp f)\" and sg: \"scaling (wp g)\""], ["proof (prove)\nusing this:\n  healthy (wp f)\n  healthy (wp g)\n\ngoal (1 subgoal):\n 1. scaling (wp f) &&& scaling (wp g)", "by(auto)"], ["proof (state)\nthis:\n  scaling (wp f)\n  scaling (wp g)\n\ngoal (1 subgoal):\n 1. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * max (wp f P x) (wp g P x) =\n                         max (wp f (\\<lambda>x. c * P x) x)\n                          (wp g (\\<lambda>x. c * P x) x)", "from pos"], ["proof (chain)\npicking this:\n  0 \\<le> c", "have \"c * max (wp f P s) (wp g P s) =\n                 max (c * wp f P s) (c * wp g P s)\""], ["proof (prove)\nusing this:\n  0 \\<le> c\n\ngoal (1 subgoal):\n 1. c * max (wp f P s) (wp g P s) = max (c * wp f P s) (c * wp g P s)", "by(simp add:max_distrib)"], ["proof (state)\nthis:\n  c * max (wp f P s) (wp g P s) = max (c * wp f P s) (c * wp g P s)\n\ngoal (1 subgoal):\n 1. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * max (wp f P x) (wp g P x) =\n                         max (wp f (\\<lambda>x. c * P x) x)\n                          (wp g (\\<lambda>x. c * P x) x)", "also"], ["proof (state)\nthis:\n  c * max (wp f P s) (wp g P s) = max (c * wp f P s) (c * wp g P s)\n\ngoal (1 subgoal):\n 1. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * max (wp f P x) (wp g P x) =\n                         max (wp f (\\<lambda>x. c * P x) x)\n                          (wp g (\\<lambda>x. c * P x) x)", "from sP and pos"], ["proof (chain)\npicking this:\n  sound P\n  0 \\<le> c", "have \"... = max (wp f (\\<lambda>s. c * P s) s) (wp g (\\<lambda>s. c * P s) s)\""], ["proof (prove)\nusing this:\n  sound P\n  0 \\<le> c\n\ngoal (1 subgoal):\n 1. max (c * wp f P s) (c * wp g P s) =\n    max (wp f (\\<lambda>s. c * P s) s) (wp g (\\<lambda>s. c * P s) s)", "by(simp add:scalingD[OF sf] scalingD[OF sg])"], ["proof (state)\nthis:\n  max (c * wp f P s) (c * wp g P s) =\n  max (wp f (\\<lambda>s. c * P s) s) (wp g (\\<lambda>s. c * P s) s)\n\ngoal (1 subgoal):\n 1. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * max (wp f P x) (wp g P x) =\n                         max (wp f (\\<lambda>x. c * P x) x)\n                          (wp g (\\<lambda>x. c * P x) x)", "finally"], ["proof (chain)\npicking this:\n  c * max (wp f P s) (wp g P s) =\n  max (wp f (\\<lambda>s. c * P s) s) (wp g (\\<lambda>s. c * P s) s)", "show \"c * max (wp f P s) (wp g P s) =\n                max (wp f (\\<lambda>s. c * P s) s) (wp g (\\<lambda>s. c * P s) s)\""], ["proof (prove)\nusing this:\n  c * max (wp f P s) (wp g P s) =\n  max (wp f (\\<lambda>s. c * P s) s) (wp g (\\<lambda>s. c * P s) s)\n\ngoal (1 subgoal):\n 1. c * max (wp f P s) (wp g P s) =\n    max (wp f (\\<lambda>s. c * P s) s) (wp g (\\<lambda>s. c * P s) s)", "."], ["proof (state)\nthis:\n  c * max (wp f P s) (wp g P s) =\n  max (wp f (\\<lambda>s. c * P s) s) (wp g (\\<lambda>s. c * P s) s)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nearly_healthy_wlp_AC:\n  fixes f::\"'s prog\"\n  assumes hf: \"nearly_healthy (wlp f)\"\n      and hg: \"nearly_healthy (wlp g)\"\n  shows \"nearly_healthy (wlp (f \\<Squnion> g))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nearly_healthy (wlp (f \\<Squnion> g))", "proof(intro nearly_healthyI bounded_byI nnegI unitaryI2 le_funI, simp_all only:wp_eval)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow> 0 \\<le> max (wlp f P x) (wlp g P x)\n 2. \\<And>P x.\n       unitary P \\<Longrightarrow> max (wlp f P x) (wlp g P x) \\<le> 1\n 3. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> max (wlp f P x) (wlp g P x)\n                         \\<le> max (wlp f Q x) (wlp g Q x)", "fix b and P::\"'s \\<Rightarrow> real\" and s::'s"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow> 0 \\<le> max (wlp f P x) (wlp g P x)\n 2. \\<And>P x.\n       unitary P \\<Longrightarrow> max (wlp f P x) (wlp g P x) \\<le> 1\n 3. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> max (wlp f P x) (wlp g P x)\n                         \\<le> max (wlp f Q x) (wlp g Q x)", "assume uP: \"unitary P\""], ["proof (state)\nthis:\n  unitary P\n\ngoal (3 subgoals):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow> 0 \\<le> max (wlp f P x) (wlp g P x)\n 2. \\<And>P x.\n       unitary P \\<Longrightarrow> max (wlp f P x) (wlp g P x) \\<le> 1\n 3. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> max (wlp f P x) (wlp g P x)\n                         \\<le> max (wlp f Q x) (wlp g Q x)", "with hf"], ["proof (chain)\npicking this:\n  nearly_healthy (wlp f)\n  unitary P", "have \"wlp f P s \\<le> 1\""], ["proof (prove)\nusing this:\n  nearly_healthy (wlp f)\n  unitary P\n\ngoal (1 subgoal):\n 1. wlp f P s \\<le> 1", "by(auto)"], ["proof (state)\nthis:\n  wlp f P s \\<le> 1\n\ngoal (3 subgoals):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow> 0 \\<le> max (wlp f P x) (wlp g P x)\n 2. \\<And>P x.\n       unitary P \\<Longrightarrow> max (wlp f P x) (wlp g P x) \\<le> 1\n 3. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> max (wlp f P x) (wlp g P x)\n                         \\<le> max (wlp f Q x) (wlp g Q x)", "moreover"], ["proof (state)\nthis:\n  wlp f P s \\<le> 1\n\ngoal (3 subgoals):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow> 0 \\<le> max (wlp f P x) (wlp g P x)\n 2. \\<And>P x.\n       unitary P \\<Longrightarrow> max (wlp f P x) (wlp g P x) \\<le> 1\n 3. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> max (wlp f P x) (wlp g P x)\n                         \\<le> max (wlp f Q x) (wlp g Q x)", "from uP hg"], ["proof (chain)\npicking this:\n  unitary P\n  nearly_healthy (wlp g)", "have \"unitary (wlp g P)\""], ["proof (prove)\nusing this:\n  unitary P\n  nearly_healthy (wlp g)\n\ngoal (1 subgoal):\n 1. unitary (wlp g P)", "by(auto)"], ["proof (state)\nthis:\n  unitary (wlp g P)\n\ngoal (3 subgoals):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow> 0 \\<le> max (wlp f P x) (wlp g P x)\n 2. \\<And>P x.\n       unitary P \\<Longrightarrow> max (wlp f P x) (wlp g P x) \\<le> 1\n 3. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> max (wlp f P x) (wlp g P x)\n                         \\<le> max (wlp f Q x) (wlp g Q x)", "hence \"wlp g P s \\<le> 1\""], ["proof (prove)\nusing this:\n  unitary (wlp g P)\n\ngoal (1 subgoal):\n 1. wlp g P s \\<le> 1", "by(auto)"], ["proof (state)\nthis:\n  wlp g P s \\<le> 1\n\ngoal (3 subgoals):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow> 0 \\<le> max (wlp f P x) (wlp g P x)\n 2. \\<And>P x.\n       unitary P \\<Longrightarrow> max (wlp f P x) (wlp g P x) \\<le> 1\n 3. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> max (wlp f P x) (wlp g P x)\n                         \\<le> max (wlp f Q x) (wlp g Q x)", "ultimately"], ["proof (chain)\npicking this:\n  wlp f P s \\<le> 1\n  wlp g P s \\<le> 1", "show \"max (wlp f P s) (wlp g P s) \\<le> 1\""], ["proof (prove)\nusing this:\n  wlp f P s \\<le> 1\n  wlp g P s \\<le> 1\n\ngoal (1 subgoal):\n 1. max (wlp f P s) (wlp g P s) \\<le> 1", "by(auto)"], ["proof (state)\nthis:\n  max (wlp f P s) (wlp g P s) \\<le> 1\n\ngoal (2 subgoals):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow> 0 \\<le> max (wlp f P x) (wlp g P x)\n 2. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> max (wlp f P x) (wlp g P x)\n                         \\<le> max (wlp f Q x) (wlp g Q x)", "from uP hf"], ["proof (chain)\npicking this:\n  unitary P\n  nearly_healthy (wlp f)", "have \"unitary (wlp f P)\""], ["proof (prove)\nusing this:\n  unitary P\n  nearly_healthy (wlp f)\n\ngoal (1 subgoal):\n 1. unitary (wlp f P)", "by(auto)"], ["proof (state)\nthis:\n  unitary (wlp f P)\n\ngoal (2 subgoals):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow> 0 \\<le> max (wlp f P x) (wlp g P x)\n 2. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> max (wlp f P x) (wlp g P x)\n                         \\<le> max (wlp f Q x) (wlp g Q x)", "hence \"0 \\<le> wlp f P s\""], ["proof (prove)\nusing this:\n  unitary (wlp f P)\n\ngoal (1 subgoal):\n 1. 0 \\<le> wlp f P s", "by(auto)"], ["proof (state)\nthis:\n  0 \\<le> wlp f P s\n\ngoal (2 subgoals):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow> 0 \\<le> max (wlp f P x) (wlp g P x)\n 2. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> max (wlp f P x) (wlp g P x)\n                         \\<le> max (wlp f Q x) (wlp g Q x)", "thus \"0 \\<le> max (wlp f P s) (wlp g P s)\""], ["proof (prove)\nusing this:\n  0 \\<le> wlp f P s\n\ngoal (1 subgoal):\n 1. 0 \\<le> max (wlp f P s) (wlp g P s)", "by(auto)"], ["proof (state)\nthis:\n  0 \\<le> max (wlp f P s) (wlp g P s)\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> max (wlp f P x) (wlp g P x)\n                         \\<le> max (wlp f Q x) (wlp g Q x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> max (wlp f P x) (wlp g P x)\n                         \\<le> max (wlp f Q x) (wlp g Q x)", "fix P::\"'s \\<Rightarrow> real\" and Q and s::'s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> max (wlp f P x) (wlp g P x)\n                         \\<le> max (wlp f Q x) (wlp g Q x)", "assume uP: \"unitary P\" and uQ: \"unitary Q\" and le: \"P \\<tturnstile> Q\""], ["proof (state)\nthis:\n  unitary P\n  unitary Q\n  P \\<tturnstile> Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> max (wlp f P x) (wlp g P x)\n                         \\<le> max (wlp f Q x) (wlp g Q x)", "hence \"wlp f P s \\<le> wlp f Q s\" and \"wlp g P s \\<le> wlp g Q s\""], ["proof (prove)\nusing this:\n  unitary P\n  unitary Q\n  P \\<tturnstile> Q\n\ngoal (1 subgoal):\n 1. wlp f P s \\<le> wlp f Q s &&& wlp g P s \\<le> wlp g Q s", "by(auto intro:le_funD[OF nearly_healthy_monoD, OF hf]\n                  le_funD[OF nearly_healthy_monoD, OF hg])"], ["proof (state)\nthis:\n  wlp f P s \\<le> wlp f Q s\n  wlp g P s \\<le> wlp g Q s\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> max (wlp f P x) (wlp g P x)\n                         \\<le> max (wlp f Q x) (wlp g Q x)", "thus \"max (wlp f P s) (wlp g P s) \\<le> max (wlp f Q s) (wlp g Q s)\""], ["proof (prove)\nusing this:\n  wlp f P s \\<le> wlp f Q s\n  wlp g P s \\<le> wlp g Q s\n\ngoal (1 subgoal):\n 1. max (wlp f P s) (wlp g P s) \\<le> max (wlp f Q s) (wlp g Q s)", "by(auto)"], ["proof (state)\nthis:\n  max (wlp f P s) (wlp g P s) \\<le> max (wlp f Q s) (wlp g Q s)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma healthy_wp_Embed:\n  \"healthy t \\<Longrightarrow> healthy (wp (Embed t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. healthy t \\<Longrightarrow> healthy (wp (Embed t))", "unfolding wp_def Embed_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. healthy t \\<Longrightarrow> healthy t", "by(simp)"], ["", "lemma nearly_healthy_wlp_Embed:\n  \"nearly_healthy t \\<Longrightarrow> nearly_healthy (wlp (Embed t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nearly_healthy t \\<Longrightarrow> nearly_healthy (wlp (Embed t))", "unfolding wlp_def Embed_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. nearly_healthy t \\<Longrightarrow> nearly_healthy t", "by(simp)"], ["", "lemma healthy_wp_repeat:\n  assumes h_a: \"healthy (wp a)\"\n  shows \"healthy (wp (repeat n a))\" (is \"?X n\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. healthy (wp (repeat n a))", "proof(induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. healthy (wp (repeat 0 a))\n 2. \\<And>n.\n       healthy (wp (repeat n a)) \\<Longrightarrow>\n       healthy (wp (repeat (Suc n) a))", "show \"?X 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. healthy (wp (repeat 0 a))", "by(auto simp:wp_eval)"], ["proof (state)\nthis:\n  healthy (wp (repeat 0 a))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       healthy (wp (repeat n a)) \\<Longrightarrow>\n       healthy (wp (repeat (Suc n) a))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       healthy (wp (repeat n a)) \\<Longrightarrow>\n       healthy (wp (repeat (Suc n) a))", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       healthy (wp (repeat n a)) \\<Longrightarrow>\n       healthy (wp (repeat (Suc n) a))", "assume IH: \"?X n\""], ["proof (state)\nthis:\n  healthy (wp (repeat n a))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       healthy (wp (repeat n a)) \\<Longrightarrow>\n       healthy (wp (repeat (Suc n) a))", "thus \"?X (Suc n)\""], ["proof (prove)\nusing this:\n  healthy (wp (repeat n a))\n\ngoal (1 subgoal):\n 1. healthy (wp (repeat (Suc n) a))", "by(simp add:healthy_wp_Seq h_a)"], ["proof (state)\nthis:\n  healthy (wp (repeat (Suc n) a))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nearly_healthy_wlp_repeat:\n  assumes h_a: \"nearly_healthy (wlp a)\"\n  shows \"nearly_healthy (wlp (repeat n a))\" (is \"?X n\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. nearly_healthy (wlp (repeat n a))", "proof(induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. nearly_healthy (wlp (repeat 0 a))\n 2. \\<And>n.\n       nearly_healthy (wlp (repeat n a)) \\<Longrightarrow>\n       nearly_healthy (wlp (repeat (Suc n) a))", "show \"?X 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nearly_healthy (wlp (repeat 0 a))", "by(simp add:wp_eval)"], ["proof (state)\nthis:\n  nearly_healthy (wlp (repeat 0 a))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       nearly_healthy (wlp (repeat n a)) \\<Longrightarrow>\n       nearly_healthy (wlp (repeat (Suc n) a))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       nearly_healthy (wlp (repeat n a)) \\<Longrightarrow>\n       nearly_healthy (wlp (repeat (Suc n) a))", "fix n"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       nearly_healthy (wlp (repeat n a)) \\<Longrightarrow>\n       nearly_healthy (wlp (repeat (Suc n) a))", "assume IH: \"?X n\""], ["proof (state)\nthis:\n  nearly_healthy (wlp (repeat n a))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       nearly_healthy (wlp (repeat n a)) \\<Longrightarrow>\n       nearly_healthy (wlp (repeat (Suc n) a))", "thus \"?X (Suc n)\""], ["proof (prove)\nusing this:\n  nearly_healthy (wlp (repeat n a))\n\ngoal (1 subgoal):\n 1. nearly_healthy (wlp (repeat (Suc n) a))", "by(simp add:nearly_healthy_wlp_Seq h_a)"], ["proof (state)\nthis:\n  nearly_healthy (wlp (repeat (Suc n) a))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma healthy_wp_SetDC:\n  fixes prog::\"'b \\<Rightarrow> 'a prog\" and S::\"'a \\<Rightarrow> 'b set\"\n  assumes healthy:  \"\\<And>x s. x \\<in> S s \\<Longrightarrow> healthy (wp (prog x))\"\n      and nonempty: \"\\<And>s. \\<exists>x. x \\<in> S s\"\n  shows \"healthy (wp (SetDC prog S))\" (is \"healthy ?T\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. healthy (wp (SetDC prog S))", "proof(intro healthy_parts bounded_byI nnegI le_funI, simp_all only:wp_eval)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wp (prog a) P x) \\<le> b\n 2. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> (INF a\\<in>S x. wp (prog a) P x)\n 3. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wp (prog a) P x)\n                         \\<le> (INF a\\<in>S x. wp (prog a) Q x)\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (INF a\\<in>S x. wp (prog a) P x) =\n                         (INF a\\<in>S x.\n                             wp (prog a) (\\<lambda>x. c * P x) x)", "fix b and P::\"'a \\<Rightarrow> real\" and s::'a"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wp (prog a) P x) \\<le> b\n 2. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> (INF a\\<in>S x. wp (prog a) P x)\n 3. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wp (prog a) P x)\n                         \\<le> (INF a\\<in>S x. wp (prog a) Q x)\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (INF a\\<in>S x. wp (prog a) P x) =\n                         (INF a\\<in>S x.\n                             wp (prog a) (\\<lambda>x. c * P x) x)", "assume bP: \"bounded_by b P\" and nP: \"nneg P\""], ["proof (state)\nthis:\n  bounded_by b P\n  nneg P\n\ngoal (4 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wp (prog a) P x) \\<le> b\n 2. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> (INF a\\<in>S x. wp (prog a) P x)\n 3. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wp (prog a) P x)\n                         \\<le> (INF a\\<in>S x. wp (prog a) Q x)\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (INF a\\<in>S x. wp (prog a) P x) =\n                         (INF a\\<in>S x.\n                             wp (prog a) (\\<lambda>x. c * P x) x)", "hence sP: \"sound P\""], ["proof (prove)\nusing this:\n  bounded_by b P\n  nneg P\n\ngoal (1 subgoal):\n 1. sound P", "by(auto)"], ["proof (state)\nthis:\n  sound P\n\ngoal (4 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wp (prog a) P x) \\<le> b\n 2. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> (INF a\\<in>S x. wp (prog a) P x)\n 3. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wp (prog a) P x)\n                         \\<le> (INF a\\<in>S x. wp (prog a) Q x)\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (INF a\\<in>S x. wp (prog a) P x) =\n                         (INF a\\<in>S x.\n                             wp (prog a) (\\<lambda>x. c * P x) x)", "from nonempty"], ["proof (chain)\npicking this:\n  \\<exists>x. x \\<in> S ?s", "obtain x where xin: \"x \\<in> (\\<lambda>a. wp (prog a) P s) ` S s\""], ["proof (prove)\nusing this:\n  \\<exists>x. x \\<in> S ?s\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        x \\<in> (\\<lambda>a. wp (prog a) P s) ` S s \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by(blast)"], ["proof (state)\nthis:\n  x \\<in> (\\<lambda>a. wp (prog a) P s) ` S s\n\ngoal (4 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wp (prog a) P x) \\<le> b\n 2. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> (INF a\\<in>S x. wp (prog a) P x)\n 3. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wp (prog a) P x)\n                         \\<le> (INF a\\<in>S x. wp (prog a) Q x)\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (INF a\\<in>S x. wp (prog a) P x) =\n                         (INF a\\<in>S x.\n                             wp (prog a) (\\<lambda>x. c * P x) x)", "moreover"], ["proof (state)\nthis:\n  x \\<in> (\\<lambda>a. wp (prog a) P s) ` S s\n\ngoal (4 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wp (prog a) P x) \\<le> b\n 2. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> (INF a\\<in>S x. wp (prog a) P x)\n 3. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wp (prog a) P x)\n                         \\<le> (INF a\\<in>S x. wp (prog a) Q x)\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (INF a\\<in>S x. wp (prog a) P x) =\n                         (INF a\\<in>S x.\n                             wp (prog a) (\\<lambda>x. c * P x) x)", "from sP and healthy"], ["proof (chain)\npicking this:\n  sound P\n  ?x \\<in> S ?s \\<Longrightarrow> healthy (wp (prog ?x))", "have \"\\<forall>x\\<in>(\\<lambda>a. wp (prog a) P s) ` S s. 0 \\<le> x\""], ["proof (prove)\nusing this:\n  sound P\n  ?x \\<in> S ?s \\<Longrightarrow> healthy (wp (prog ?x))\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>(\\<lambda>a. wp (prog a) P s) ` S s. 0 \\<le> x", "by(auto)"], ["proof (state)\nthis:\n  \\<forall>x\\<in>(\\<lambda>a. wp (prog a) P s) ` S s. 0 \\<le> x\n\ngoal (4 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wp (prog a) P x) \\<le> b\n 2. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> (INF a\\<in>S x. wp (prog a) P x)\n 3. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wp (prog a) P x)\n                         \\<le> (INF a\\<in>S x. wp (prog a) Q x)\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (INF a\\<in>S x. wp (prog a) P x) =\n                         (INF a\\<in>S x.\n                             wp (prog a) (\\<lambda>x. c * P x) x)", "ultimately"], ["proof (chain)\npicking this:\n  x \\<in> (\\<lambda>a. wp (prog a) P s) ` S s\n  \\<forall>x\\<in>(\\<lambda>a. wp (prog a) P s) ` S s. 0 \\<le> x", "have \"Inf ((\\<lambda>a. wp (prog a) P s) ` S s) \\<le> x\""], ["proof (prove)\nusing this:\n  x \\<in> (\\<lambda>a. wp (prog a) P s) ` S s\n  \\<forall>x\\<in>(\\<lambda>a. wp (prog a) P s) ` S s. 0 \\<le> x\n\ngoal (1 subgoal):\n 1. (INF a\\<in>S s. wp (prog a) P s) \\<le> x", "by(intro cInf_lower bdd_belowI, auto)"], ["proof (state)\nthis:\n  (INF a\\<in>S s. wp (prog a) P s) \\<le> x\n\ngoal (4 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wp (prog a) P x) \\<le> b\n 2. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> (INF a\\<in>S x. wp (prog a) P x)\n 3. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wp (prog a) P x)\n                         \\<le> (INF a\\<in>S x. wp (prog a) Q x)\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (INF a\\<in>S x. wp (prog a) P x) =\n                         (INF a\\<in>S x.\n                             wp (prog a) (\\<lambda>x. c * P x) x)", "also"], ["proof (state)\nthis:\n  (INF a\\<in>S s. wp (prog a) P s) \\<le> x\n\ngoal (4 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wp (prog a) P x) \\<le> b\n 2. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> (INF a\\<in>S x. wp (prog a) P x)\n 3. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wp (prog a) P x)\n                         \\<le> (INF a\\<in>S x. wp (prog a) Q x)\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (INF a\\<in>S x. wp (prog a) P x) =\n                         (INF a\\<in>S x.\n                             wp (prog a) (\\<lambda>x. c * P x) x)", "from xin and healthy and sP and bP"], ["proof (chain)\npicking this:\n  x \\<in> (\\<lambda>a. wp (prog a) P s) ` S s\n  ?x \\<in> S ?s \\<Longrightarrow> healthy (wp (prog ?x))\n  sound P\n  bounded_by b P", "have \"x \\<le> b\""], ["proof (prove)\nusing this:\n  x \\<in> (\\<lambda>a. wp (prog a) P s) ` S s\n  ?x \\<in> S ?s \\<Longrightarrow> healthy (wp (prog ?x))\n  sound P\n  bounded_by b P\n\ngoal (1 subgoal):\n 1. x \\<le> b", "by(blast)"], ["proof (state)\nthis:\n  x \\<le> b\n\ngoal (4 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wp (prog a) P x) \\<le> b\n 2. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> (INF a\\<in>S x. wp (prog a) P x)\n 3. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wp (prog a) P x)\n                         \\<le> (INF a\\<in>S x. wp (prog a) Q x)\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (INF a\\<in>S x. wp (prog a) P x) =\n                         (INF a\\<in>S x.\n                             wp (prog a) (\\<lambda>x. c * P x) x)", "finally"], ["proof (chain)\npicking this:\n  (INF a\\<in>S s. wp (prog a) P s) \\<le> b", "show \"Inf ((\\<lambda>a. wp (prog a) P s) ` S s) \\<le> b\""], ["proof (prove)\nusing this:\n  (INF a\\<in>S s. wp (prog a) P s) \\<le> b\n\ngoal (1 subgoal):\n 1. (INF a\\<in>S s. wp (prog a) P s) \\<le> b", "."], ["proof (state)\nthis:\n  (INF a\\<in>S s. wp (prog a) P s) \\<le> b\n\ngoal (3 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> (INF a\\<in>S x. wp (prog a) P x)\n 2. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wp (prog a) P x)\n                         \\<le> (INF a\\<in>S x. wp (prog a) Q x)\n 3. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (INF a\\<in>S x. wp (prog a) P x) =\n                         (INF a\\<in>S x.\n                             wp (prog a) (\\<lambda>x. c * P x) x)", "from xin and sP and healthy"], ["proof (chain)\npicking this:\n  x \\<in> (\\<lambda>a. wp (prog a) P s) ` S s\n  sound P\n  ?x \\<in> S ?s \\<Longrightarrow> healthy (wp (prog ?x))", "show \"0 \\<le> Inf ((\\<lambda>a. wp (prog a) P s) ` S s)\""], ["proof (prove)\nusing this:\n  x \\<in> (\\<lambda>a. wp (prog a) P s) ` S s\n  sound P\n  ?x \\<in> S ?s \\<Longrightarrow> healthy (wp (prog ?x))\n\ngoal (1 subgoal):\n 1. 0 \\<le> (INF a\\<in>S s. wp (prog a) P s)", "by(blast intro:cInf_greatest)"], ["proof (state)\nthis:\n  0 \\<le> (INF a\\<in>S s. wp (prog a) P s)\n\ngoal (2 subgoals):\n 1. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wp (prog a) P x)\n                         \\<le> (INF a\\<in>S x. wp (prog a) Q x)\n 2. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (INF a\\<in>S x. wp (prog a) P x) =\n                         (INF a\\<in>S x.\n                             wp (prog a) (\\<lambda>x. c * P x) x)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wp (prog a) P x)\n                         \\<le> (INF a\\<in>S x. wp (prog a) Q x)\n 2. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (INF a\\<in>S x. wp (prog a) P x) =\n                         (INF a\\<in>S x.\n                             wp (prog a) (\\<lambda>x. c * P x) x)", "fix P::\"'a \\<Rightarrow> real\" and Q and s::'a"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wp (prog a) P x)\n                         \\<le> (INF a\\<in>S x. wp (prog a) Q x)\n 2. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (INF a\\<in>S x. wp (prog a) P x) =\n                         (INF a\\<in>S x.\n                             wp (prog a) (\\<lambda>x. c * P x) x)", "assume sP: \"sound P\" and sQ: \"sound Q\" and le: \"P \\<tturnstile> Q\""], ["proof (state)\nthis:\n  sound P\n  sound Q\n  P \\<tturnstile> Q\n\ngoal (2 subgoals):\n 1. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wp (prog a) P x)\n                         \\<le> (INF a\\<in>S x. wp (prog a) Q x)\n 2. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (INF a\\<in>S x. wp (prog a) P x) =\n                         (INF a\\<in>S x.\n                             wp (prog a) (\\<lambda>x. c * P x) x)", "from nonempty"], ["proof (chain)\npicking this:\n  \\<exists>x. x \\<in> S ?s", "obtain x where xin: \"x \\<in> (\\<lambda>a. wp (prog a) P s) ` S s\""], ["proof (prove)\nusing this:\n  \\<exists>x. x \\<in> S ?s\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        x \\<in> (\\<lambda>a. wp (prog a) P s) ` S s \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by(blast)"], ["proof (state)\nthis:\n  x \\<in> (\\<lambda>a. wp (prog a) P s) ` S s\n\ngoal (2 subgoals):\n 1. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wp (prog a) P x)\n                         \\<le> (INF a\\<in>S x. wp (prog a) Q x)\n 2. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (INF a\\<in>S x. wp (prog a) P x) =\n                         (INF a\\<in>S x.\n                             wp (prog a) (\\<lambda>x. c * P x) x)", "moreover"], ["proof (state)\nthis:\n  x \\<in> (\\<lambda>a. wp (prog a) P s) ` S s\n\ngoal (2 subgoals):\n 1. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wp (prog a) P x)\n                         \\<le> (INF a\\<in>S x. wp (prog a) Q x)\n 2. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (INF a\\<in>S x. wp (prog a) P x) =\n                         (INF a\\<in>S x.\n                             wp (prog a) (\\<lambda>x. c * P x) x)", "from sP and healthy"], ["proof (chain)\npicking this:\n  sound P\n  ?x \\<in> S ?s \\<Longrightarrow> healthy (wp (prog ?x))", "have \"\\<forall>x\\<in>(\\<lambda>a. wp (prog a) P s) ` S s. 0 \\<le> x\""], ["proof (prove)\nusing this:\n  sound P\n  ?x \\<in> S ?s \\<Longrightarrow> healthy (wp (prog ?x))\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>(\\<lambda>a. wp (prog a) P s) ` S s. 0 \\<le> x", "by(auto)"], ["proof (state)\nthis:\n  \\<forall>x\\<in>(\\<lambda>a. wp (prog a) P s) ` S s. 0 \\<le> x\n\ngoal (2 subgoals):\n 1. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wp (prog a) P x)\n                         \\<le> (INF a\\<in>S x. wp (prog a) Q x)\n 2. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (INF a\\<in>S x. wp (prog a) P x) =\n                         (INF a\\<in>S x.\n                             wp (prog a) (\\<lambda>x. c * P x) x)", "moreover"], ["proof (state)\nthis:\n  \\<forall>x\\<in>(\\<lambda>a. wp (prog a) P s) ` S s. 0 \\<le> x\n\ngoal (2 subgoals):\n 1. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wp (prog a) P x)\n                         \\<le> (INF a\\<in>S x. wp (prog a) Q x)\n 2. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (INF a\\<in>S x. wp (prog a) P x) =\n                         (INF a\\<in>S x.\n                             wp (prog a) (\\<lambda>x. c * P x) x)", "have \"\\<forall>x\\<in>(\\<lambda>a. wp (prog a) Q s) ` S s. \\<exists>y\\<in>(\\<lambda>a. wp (prog a) P s) ` S s. y \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>(\\<lambda>a. wp (prog a) Q s) ` S s.\n       \\<exists>y\\<in>(\\<lambda>a. wp (prog a) P s) ` S s. y \\<le> x", "proof(rule ballI, clarify, rule bexI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x a. a \\<in> S s \\<Longrightarrow> ?y4 x a \\<le> wp (prog a) Q s\n 2. \\<And>x a.\n       a \\<in> S s \\<Longrightarrow>\n       ?y4 x a \\<in> (\\<lambda>a. wp (prog a) P s) ` S s", "fix x and a"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x a. a \\<in> S s \\<Longrightarrow> ?y4 x a \\<le> wp (prog a) Q s\n 2. \\<And>x a.\n       a \\<in> S s \\<Longrightarrow>\n       ?y4 x a \\<in> (\\<lambda>a. wp (prog a) P s) ` S s", "assume ain: \"a \\<in> S s\""], ["proof (state)\nthis:\n  a \\<in> S s\n\ngoal (2 subgoals):\n 1. \\<And>x a. a \\<in> S s \\<Longrightarrow> ?y4 x a \\<le> wp (prog a) Q s\n 2. \\<And>x a.\n       a \\<in> S s \\<Longrightarrow>\n       ?y4 x a \\<in> (\\<lambda>a. wp (prog a) P s) ` S s", "with healthy and sP and sQ and le"], ["proof (chain)\npicking this:\n  ?x \\<in> S ?s \\<Longrightarrow> healthy (wp (prog ?x))\n  sound P\n  sound Q\n  P \\<tturnstile> Q\n  a \\<in> S s", "show \"wp (prog a) P s \\<le> wp (prog a) Q s\""], ["proof (prove)\nusing this:\n  ?x \\<in> S ?s \\<Longrightarrow> healthy (wp (prog ?x))\n  sound P\n  sound Q\n  P \\<tturnstile> Q\n  a \\<in> S s\n\ngoal (1 subgoal):\n 1. wp (prog a) P s \\<le> wp (prog a) Q s", "by(auto dest:mono_transD[OF healthy_monoD])"], ["proof (state)\nthis:\n  wp (prog a) P s \\<le> wp (prog a) Q s\n\ngoal (1 subgoal):\n 1. \\<And>x a.\n       a \\<in> S s \\<Longrightarrow>\n       wp (prog a) P s \\<in> (\\<lambda>a. wp (prog a) P s) ` S s", "from ain"], ["proof (chain)\npicking this:\n  a \\<in> S s", "show \"wp (prog a) P s \\<in> (\\<lambda>a. wp (prog a) P s) ` S s\""], ["proof (prove)\nusing this:\n  a \\<in> S s\n\ngoal (1 subgoal):\n 1. wp (prog a) P s \\<in> (\\<lambda>a. wp (prog a) P s) ` S s", "by(simp)"], ["proof (state)\nthis:\n  wp (prog a) P s \\<in> (\\<lambda>a. wp (prog a) P s) ` S s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x\\<in>(\\<lambda>a. wp (prog a) Q s) ` S s.\n     \\<exists>y\\<in>(\\<lambda>a. wp (prog a) P s) ` S s. y \\<le> x\n\ngoal (2 subgoals):\n 1. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wp (prog a) P x)\n                         \\<le> (INF a\\<in>S x. wp (prog a) Q x)\n 2. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (INF a\\<in>S x. wp (prog a) P x) =\n                         (INF a\\<in>S x.\n                             wp (prog a) (\\<lambda>x. c * P x) x)", "ultimately"], ["proof (chain)\npicking this:\n  x \\<in> (\\<lambda>a. wp (prog a) P s) ` S s\n  \\<forall>x\\<in>(\\<lambda>a. wp (prog a) P s) ` S s. 0 \\<le> x\n  \\<forall>x\\<in>(\\<lambda>a. wp (prog a) Q s) ` S s.\n     \\<exists>y\\<in>(\\<lambda>a. wp (prog a) P s) ` S s. y \\<le> x", "show \"Inf ((\\<lambda>a. wp (prog a) P s) ` S s) \\<le> Inf ((\\<lambda>a. wp (prog a) Q s) ` S s)\""], ["proof (prove)\nusing this:\n  x \\<in> (\\<lambda>a. wp (prog a) P s) ` S s\n  \\<forall>x\\<in>(\\<lambda>a. wp (prog a) P s) ` S s. 0 \\<le> x\n  \\<forall>x\\<in>(\\<lambda>a. wp (prog a) Q s) ` S s.\n     \\<exists>y\\<in>(\\<lambda>a. wp (prog a) P s) ` S s. y \\<le> x\n\ngoal (1 subgoal):\n 1. (INF a\\<in>S s. wp (prog a) P s) \\<le> (INF a\\<in>S s. wp (prog a) Q s)", "by(intro cInf_mono, blast+)"], ["proof (state)\nthis:\n  (INF a\\<in>S s. wp (prog a) P s) \\<le> (INF a\\<in>S s. wp (prog a) Q s)\n\ngoal (1 subgoal):\n 1. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (INF a\\<in>S x. wp (prog a) P x) =\n                         (INF a\\<in>S x.\n                             wp (prog a) (\\<lambda>x. c * P x) x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (INF a\\<in>S x. wp (prog a) P x) =\n                         (INF a\\<in>S x.\n                             wp (prog a) (\\<lambda>x. c * P x) x)", "fix P::\"'a \\<Rightarrow> real\" and c::real and s::'a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (INF a\\<in>S x. wp (prog a) P x) =\n                         (INF a\\<in>S x.\n                             wp (prog a) (\\<lambda>x. c * P x) x)", "assume sP: \"sound P\" and pos: \"0 \\<le> c\""], ["proof (state)\nthis:\n  sound P\n  0 \\<le> c\n\ngoal (1 subgoal):\n 1. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (INF a\\<in>S x. wp (prog a) P x) =\n                         (INF a\\<in>S x.\n                             wp (prog a) (\\<lambda>x. c * P x) x)", "from nonempty"], ["proof (chain)\npicking this:\n  \\<exists>x. x \\<in> S ?s", "obtain x where xin: \"x \\<in> (\\<lambda>a. wp (prog a) P s) ` S s\""], ["proof (prove)\nusing this:\n  \\<exists>x. x \\<in> S ?s\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        x \\<in> (\\<lambda>a. wp (prog a) P s) ` S s \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by(blast)"], ["proof (state)\nthis:\n  x \\<in> (\\<lambda>a. wp (prog a) P s) ` S s\n\ngoal (1 subgoal):\n 1. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (INF a\\<in>S x. wp (prog a) P x) =\n                         (INF a\\<in>S x.\n                             wp (prog a) (\\<lambda>x. c * P x) x)", "have \"c * Inf ((\\<lambda>a. wp (prog a) P s) ` S s) =\n        Inf ((*) c ` ((\\<lambda>a. wp (prog a) P s) ` S s))\" (is \"?U = ?V\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. c * (INF a\\<in>S s. wp (prog a) P s) =\n    Inf ((*) c ` (\\<lambda>a. wp (prog a) P s) ` S s)", "proof(rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. c * (INF a\\<in>S s. wp (prog a) P s)\n    \\<le> Inf ((*) c ` (\\<lambda>a. wp (prog a) P s) ` S s)\n 2. Inf ((*) c ` (\\<lambda>a. wp (prog a) P s) ` S s)\n    \\<le> c * (INF a\\<in>S s. wp (prog a) P s)", "show \"?U \\<le> ?V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c * (INF a\\<in>S s. wp (prog a) P s)\n    \\<le> Inf ((*) c ` (\\<lambda>a. wp (prog a) P s) ` S s)", "proof(rule cInf_greatest)"], ["proof (state)\ngoal (2 subgoals):\n 1. (*) c ` (\\<lambda>a. wp (prog a) P s) ` S s \\<noteq> {}\n 2. \\<And>x.\n       x \\<in> (*) c ` (\\<lambda>a. wp (prog a) P s) ` S s \\<Longrightarrow>\n       c * (INF a\\<in>S s. wp (prog a) P s) \\<le> x", "from nonempty"], ["proof (chain)\npicking this:\n  \\<exists>x. x \\<in> S ?s", "show \"(*) c ` (\\<lambda>a. wp (prog a) P s) ` S s \\<noteq> {}\""], ["proof (prove)\nusing this:\n  \\<exists>x. x \\<in> S ?s\n\ngoal (1 subgoal):\n 1. (*) c ` (\\<lambda>a. wp (prog a) P s) ` S s \\<noteq> {}", "by(auto)"], ["proof (state)\nthis:\n  (*) c ` (\\<lambda>a. wp (prog a) P s) ` S s \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (*) c ` (\\<lambda>a. wp (prog a) P s) ` S s \\<Longrightarrow>\n       c * (INF a\\<in>S s. wp (prog a) P s) \\<le> x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (*) c ` (\\<lambda>a. wp (prog a) P s) ` S s \\<Longrightarrow>\n       c * (INF a\\<in>S s. wp (prog a) P s) \\<le> x", "assume \"x \\<in> (*) c ` (\\<lambda>a. wp (prog a) P s) ` S s\""], ["proof (state)\nthis:\n  x \\<in> (*) c ` (\\<lambda>a. wp (prog a) P s) ` S s\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (*) c ` (\\<lambda>a. wp (prog a) P s) ` S s \\<Longrightarrow>\n       c * (INF a\\<in>S s. wp (prog a) P s) \\<le> x", "then"], ["proof (chain)\npicking this:\n  x \\<in> (*) c ` (\\<lambda>a. wp (prog a) P s) ` S s", "obtain y where yin: \"y \\<in> (\\<lambda>a. wp (prog a) P s) ` S s\" and rwx: \"x = c * y\""], ["proof (prove)\nusing this:\n  x \\<in> (*) c ` (\\<lambda>a. wp (prog a) P s) ` S s\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in> (\\<lambda>a. wp (prog a) P s) ` S s;\n         x = c * y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto)"], ["proof (state)\nthis:\n  y \\<in> (\\<lambda>a. wp (prog a) P s) ` S s\n  x = c * y\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (*) c ` (\\<lambda>a. wp (prog a) P s) ` S s \\<Longrightarrow>\n       c * (INF a\\<in>S s. wp (prog a) P s) \\<le> x", "have \"Inf ((\\<lambda>a. wp (prog a) P s) ` S s) \\<le> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (INF a\\<in>S s. wp (prog a) P s) \\<le> y", "proof(intro cInf_lower[OF yin] bdd_belowI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>a. wp (prog a) P s) ` S s \\<Longrightarrow>\n       ?m1 \\<le> x", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>a. wp (prog a) P s) ` S s \\<Longrightarrow>\n       ?m1 \\<le> x", "assume zin: \"z \\<in> (\\<lambda>a. wp (prog a) P s) ` S s\""], ["proof (state)\nthis:\n  z \\<in> (\\<lambda>a. wp (prog a) P s) ` S s\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>a. wp (prog a) P s) ` S s \\<Longrightarrow>\n       ?m1 \\<le> x", "then"], ["proof (chain)\npicking this:\n  z \\<in> (\\<lambda>a. wp (prog a) P s) ` S s", "obtain a where \"a \\<in> S s\" and \"z = wp (prog a) P s\""], ["proof (prove)\nusing this:\n  z \\<in> (\\<lambda>a. wp (prog a) P s) ` S s\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>a \\<in> S s; z = wp (prog a) P s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto)"], ["proof (state)\nthis:\n  a \\<in> S s\n  z = wp (prog a) P s\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>a. wp (prog a) P s) ` S s \\<Longrightarrow>\n       ?m1 \\<le> x", "with sP"], ["proof (chain)\npicking this:\n  sound P\n  a \\<in> S s\n  z = wp (prog a) P s", "show \"0 \\<le> z\""], ["proof (prove)\nusing this:\n  sound P\n  a \\<in> S s\n  z = wp (prog a) P s\n\ngoal (1 subgoal):\n 1. 0 \\<le> z", "by(auto dest:healthy)"], ["proof (state)\nthis:\n  0 \\<le> z\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (INF a\\<in>S s. wp (prog a) P s) \\<le> y\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (*) c ` (\\<lambda>a. wp (prog a) P s) ` S s \\<Longrightarrow>\n       c * (INF a\\<in>S s. wp (prog a) P s) \\<le> x", "with pos rwx"], ["proof (chain)\npicking this:\n  0 \\<le> c\n  x = c * y\n  (INF a\\<in>S s. wp (prog a) P s) \\<le> y", "show \"c * Inf ((\\<lambda>a. wp (prog a) P s) ` S s) \\<le> x\""], ["proof (prove)\nusing this:\n  0 \\<le> c\n  x = c * y\n  (INF a\\<in>S s. wp (prog a) P s) \\<le> y\n\ngoal (1 subgoal):\n 1. c * (INF a\\<in>S s. wp (prog a) P s) \\<le> x", "by(auto intro:mult_left_mono)"], ["proof (state)\nthis:\n  c * (INF a\\<in>S s. wp (prog a) P s) \\<le> x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c * (INF a\\<in>S s. wp (prog a) P s)\n  \\<le> Inf ((*) c ` (\\<lambda>a. wp (prog a) P s) ` S s)\n\ngoal (1 subgoal):\n 1. Inf ((*) c ` (\\<lambda>a. wp (prog a) P s) ` S s)\n    \\<le> c * (INF a\\<in>S s. wp (prog a) P s)", "show \"?V \\<le> ?U\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf ((*) c ` (\\<lambda>a. wp (prog a) P s) ` S s)\n    \\<le> c * (INF a\\<in>S s. wp (prog a) P s)", "proof(cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    Inf ((*) c ` (\\<lambda>a. wp (prog a) P s) ` S s)\n    \\<le> c * (INF a\\<in>S s. wp (prog a) P s)\n 2. \\<not> ?P \\<Longrightarrow>\n    Inf ((*) c ` (\\<lambda>a. wp (prog a) P s) ` S s)\n    \\<le> c * (INF a\\<in>S s. wp (prog a) P s)", "assume cz: \"c = 0\""], ["proof (state)\nthis:\n  c = 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    Inf ((*) c ` (\\<lambda>a. wp (prog a) P s) ` S s)\n    \\<le> c * (INF a\\<in>S s. wp (prog a) P s)\n 2. \\<not> ?P \\<Longrightarrow>\n    Inf ((*) c ` (\\<lambda>a. wp (prog a) P s) ` S s)\n    \\<le> c * (INF a\\<in>S s. wp (prog a) P s)", "moreover"], ["proof (state)\nthis:\n  c = 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    Inf ((*) c ` (\\<lambda>a. wp (prog a) P s) ` S s)\n    \\<le> c * (INF a\\<in>S s. wp (prog a) P s)\n 2. \\<not> ?P \\<Longrightarrow>\n    Inf ((*) c ` (\\<lambda>a. wp (prog a) P s) ` S s)\n    \\<le> c * (INF a\\<in>S s. wp (prog a) P s)", "{"], ["proof (state)\nthis:\n  c = 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    Inf ((*) c ` (\\<lambda>a. wp (prog a) P s) ` S s)\n    \\<le> c * (INF a\\<in>S s. wp (prog a) P s)\n 2. \\<not> ?P \\<Longrightarrow>\n    Inf ((*) c ` (\\<lambda>a. wp (prog a) P s) ` S s)\n    \\<le> c * (INF a\\<in>S s. wp (prog a) P s)", "from nonempty"], ["proof (chain)\npicking this:\n  \\<exists>x. x \\<in> S ?s", "obtain c where \"c \\<in> S s\""], ["proof (prove)\nusing this:\n  \\<exists>x. x \\<in> S ?s\n\ngoal (1 subgoal):\n 1. (\\<And>c. c \\<in> S s \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by(auto)"], ["proof (state)\nthis:\n  c \\<in> S s\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    Inf ((*) c__ ` (\\<lambda>a. wp (prog a) P s) ` S s)\n    \\<le> c__ * (INF a\\<in>S s. wp (prog a) P s)\n 2. \\<not> ?P \\<Longrightarrow>\n    Inf ((*) c__ ` (\\<lambda>a. wp (prog a) P s) ` S s)\n    \\<le> c__ * (INF a\\<in>S s. wp (prog a) P s)", "hence \"\\<exists>x. \\<exists>xa\\<in>S s. x = wp (prog xa) P s\""], ["proof (prove)\nusing this:\n  c \\<in> S s\n\ngoal (1 subgoal):\n 1. \\<exists>x. \\<exists>xa\\<in>S s. x = wp (prog xa) P s", "by(auto)"], ["proof (state)\nthis:\n  \\<exists>x. \\<exists>xa\\<in>S s. x = wp (prog xa) P s\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    Inf ((*) c__ ` (\\<lambda>a. wp (prog a) P s) ` S s)\n    \\<le> c__ * (INF a\\<in>S s. wp (prog a) P s)\n 2. \\<not> ?P \\<Longrightarrow>\n    Inf ((*) c__ ` (\\<lambda>a. wp (prog a) P s) ` S s)\n    \\<le> c__ * (INF a\\<in>S s. wp (prog a) P s)", "}"], ["proof (state)\nthis:\n  \\<exists>x. \\<exists>xa\\<in>S s. x = wp (prog xa) P s\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    Inf ((*) c ` (\\<lambda>a. wp (prog a) P s) ` S s)\n    \\<le> c * (INF a\\<in>S s. wp (prog a) P s)\n 2. \\<not> ?P \\<Longrightarrow>\n    Inf ((*) c ` (\\<lambda>a. wp (prog a) P s) ` S s)\n    \\<le> c * (INF a\\<in>S s. wp (prog a) P s)", "ultimately"], ["proof (chain)\npicking this:\n  c = 0\n  \\<exists>x. \\<exists>xa\\<in>S s. x = wp (prog xa) P s", "show ?thesis"], ["proof (prove)\nusing this:\n  c = 0\n  \\<exists>x. \\<exists>xa\\<in>S s. x = wp (prog xa) P s\n\ngoal (1 subgoal):\n 1. Inf ((*) c ` (\\<lambda>a. wp (prog a) P s) ` S s)\n    \\<le> c * (INF a\\<in>S s. wp (prog a) P s)", "by(simp add:image_def)"], ["proof (state)\nthis:\n  Inf ((*) c ` (\\<lambda>a. wp (prog a) P s) ` S s)\n  \\<le> c * (INF a\\<in>S s. wp (prog a) P s)\n\ngoal (1 subgoal):\n 1. c \\<noteq> 0 \\<Longrightarrow>\n    Inf ((*) c ` (\\<lambda>a. wp (prog a) P s) ` S s)\n    \\<le> c * (INF a\\<in>S s. wp (prog a) P s)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. c \\<noteq> 0 \\<Longrightarrow>\n    Inf ((*) c ` (\\<lambda>a. wp (prog a) P s) ` S s)\n    \\<le> c * (INF a\\<in>S s. wp (prog a) P s)", "assume \"c \\<noteq> 0\""], ["proof (state)\nthis:\n  c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. c \\<noteq> 0 \\<Longrightarrow>\n    Inf ((*) c ` (\\<lambda>a. wp (prog a) P s) ` S s)\n    \\<le> c * (INF a\\<in>S s. wp (prog a) P s)", "from nonempty"], ["proof (chain)\npicking this:\n  \\<exists>x. x \\<in> S ?s", "have \"S s \\<noteq> {}\""], ["proof (prove)\nusing this:\n  \\<exists>x. x \\<in> S ?s\n\ngoal (1 subgoal):\n 1. S s \\<noteq> {}", "by blast"], ["proof (state)\nthis:\n  S s \\<noteq> {}\n\ngoal (1 subgoal):\n 1. c \\<noteq> 0 \\<Longrightarrow>\n    Inf ((*) c ` (\\<lambda>a. wp (prog a) P s) ` S s)\n    \\<le> c * (INF a\\<in>S s. wp (prog a) P s)", "then"], ["proof (chain)\npicking this:\n  S s \\<noteq> {}", "have \"inverse c * (INF x\\<in>S s. c * wp (prog x) P s) \\<le> (INF a\\<in>S s. wp (prog a) P s)\""], ["proof (prove)\nusing this:\n  S s \\<noteq> {}\n\ngoal (1 subgoal):\n 1. inverse c * (INF x\\<in>S s. c * wp (prog x) P s)\n    \\<le> (INF a\\<in>S s. wp (prog a) P s)", "proof (rule cINF_greatest)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> S s \\<Longrightarrow>\n       inverse c * (INF x\\<in>S s. c * wp (prog x) P s)\n       \\<le> wp (prog x) P s", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> S s \\<Longrightarrow>\n       inverse c * (INF x\\<in>S s. c * wp (prog x) P s)\n       \\<le> wp (prog x) P s", "assume \"x \\<in> S s\""], ["proof (state)\nthis:\n  x \\<in> S s\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> S s \\<Longrightarrow>\n       inverse c * (INF x\\<in>S s. c * wp (prog x) P s)\n       \\<le> wp (prog x) P s", "have \"bdd_below ((\\<lambda>x. c * wp (prog x) P s) ` S s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bdd_below ((\\<lambda>x. c * wp (prog x) P s) ` S s)", "proof (rule bdd_belowI [of _ 0])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. c * wp (prog x) P s) ` S s \\<Longrightarrow>\n       0 \\<le> x", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. c * wp (prog x) P s) ` S s \\<Longrightarrow>\n       0 \\<le> x", "assume \"z \\<in> (\\<lambda>x. c * wp (prog x) P s) ` S s\""], ["proof (state)\nthis:\n  z \\<in> (\\<lambda>x. c * wp (prog x) P s) ` S s\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. c * wp (prog x) P s) ` S s \\<Longrightarrow>\n       0 \\<le> x", "then"], ["proof (chain)\npicking this:\n  z \\<in> (\\<lambda>x. c * wp (prog x) P s) ` S s", "obtain b where \"b \\<in> S s\" and rwz: \"z = c * wp (prog b) P s\""], ["proof (prove)\nusing this:\n  z \\<in> (\\<lambda>x. c * wp (prog x) P s) ` S s\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<lbrakk>b \\<in> S s; z = c * wp (prog b) P s\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  b \\<in> S s\n  z = c * wp (prog b) P s\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. c * wp (prog x) P s) ` S s \\<Longrightarrow>\n       0 \\<le> x", "with sP"], ["proof (chain)\npicking this:\n  sound P\n  b \\<in> S s\n  z = c * wp (prog b) P s", "have \"0 \\<le> wp (prog b) P s\""], ["proof (prove)\nusing this:\n  sound P\n  b \\<in> S s\n  z = c * wp (prog b) P s\n\ngoal (1 subgoal):\n 1. 0 \\<le> wp (prog b) P s", "by (auto dest: healthy)"], ["proof (state)\nthis:\n  0 \\<le> wp (prog b) P s\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. c * wp (prog x) P s) ` S s \\<Longrightarrow>\n       0 \\<le> x", "with pos"], ["proof (chain)\npicking this:\n  0 \\<le> c\n  0 \\<le> wp (prog b) P s", "show \"0 \\<le> z\""], ["proof (prove)\nusing this:\n  0 \\<le> c\n  0 \\<le> wp (prog b) P s\n\ngoal (1 subgoal):\n 1. 0 \\<le> z", "by (auto simp: rwz intro: mult_nonneg_nonneg)"], ["proof (state)\nthis:\n  0 \\<le> z\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  bdd_below ((\\<lambda>x. c * wp (prog x) P s) ` S s)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> S s \\<Longrightarrow>\n       inverse c * (INF x\\<in>S s. c * wp (prog x) P s)\n       \\<le> wp (prog x) P s", "then"], ["proof (chain)\npicking this:\n  bdd_below ((\\<lambda>x. c * wp (prog x) P s) ` S s)", "have \"(INF x\\<in>S s. c * wp (prog x) P s) \\<le> c * wp (prog x) P s\""], ["proof (prove)\nusing this:\n  bdd_below ((\\<lambda>x. c * wp (prog x) P s) ` S s)\n\ngoal (1 subgoal):\n 1. (INF x\\<in>S s. c * wp (prog x) P s) \\<le> c * wp (prog x) P s", "using \\<open>x \\<in> S s\\<close>"], ["proof (prove)\nusing this:\n  bdd_below ((\\<lambda>x. c * wp (prog x) P s) ` S s)\n  x \\<in> S s\n\ngoal (1 subgoal):\n 1. (INF x\\<in>S s. c * wp (prog x) P s) \\<le> c * wp (prog x) P s", "by (rule cINF_lower)"], ["proof (state)\nthis:\n  (INF x\\<in>S s. c * wp (prog x) P s) \\<le> c * wp (prog x) P s\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> S s \\<Longrightarrow>\n       inverse c * (INF x\\<in>S s. c * wp (prog x) P s)\n       \\<le> wp (prog x) P s", "with \\<open>c \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  c \\<noteq> 0\n  (INF x\\<in>S s. c * wp (prog x) P s) \\<le> c * wp (prog x) P s", "show \"inverse c * (INF x\\<in>S s. c * wp (prog x) P s) \\<le> wp (prog x) P s\""], ["proof (prove)\nusing this:\n  c \\<noteq> 0\n  (INF x\\<in>S s. c * wp (prog x) P s) \\<le> c * wp (prog x) P s\n\ngoal (1 subgoal):\n 1. inverse c * (INF x\\<in>S s. c * wp (prog x) P s) \\<le> wp (prog x) P s", "by (simp add: mult_div_mono_left pos)"], ["proof (state)\nthis:\n  inverse c * (INF x\\<in>S s. c * wp (prog x) P s) \\<le> wp (prog x) P s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inverse c * (INF x\\<in>S s. c * wp (prog x) P s)\n  \\<le> (INF a\\<in>S s. wp (prog a) P s)\n\ngoal (1 subgoal):\n 1. c \\<noteq> 0 \\<Longrightarrow>\n    Inf ((*) c ` (\\<lambda>a. wp (prog a) P s) ` S s)\n    \\<le> c * (INF a\\<in>S s. wp (prog a) P s)", "with \\<open>c \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  c \\<noteq> 0\n  inverse c * (INF x\\<in>S s. c * wp (prog x) P s)\n  \\<le> (INF a\\<in>S s. wp (prog a) P s)", "have \"inverse c * ?V \\<le> inverse c * ?U\""], ["proof (prove)\nusing this:\n  c \\<noteq> 0\n  inverse c * (INF x\\<in>S s. c * wp (prog x) P s)\n  \\<le> (INF a\\<in>S s. wp (prog a) P s)\n\ngoal (1 subgoal):\n 1. inverse c * Inf ((*) c ` (\\<lambda>a. wp (prog a) P s) ` S s)\n    \\<le> inverse c * (c * (INF a\\<in>S s. wp (prog a) P s))", "by (simp add: mult.assoc [symmetric] image_comp)"], ["proof (state)\nthis:\n  inverse c * Inf ((*) c ` (\\<lambda>a. wp (prog a) P s) ` S s)\n  \\<le> inverse c * (c * (INF a\\<in>S s. wp (prog a) P s))\n\ngoal (1 subgoal):\n 1. c \\<noteq> 0 \\<Longrightarrow>\n    Inf ((*) c ` (\\<lambda>a. wp (prog a) P s) ` S s)\n    \\<le> c * (INF a\\<in>S s. wp (prog a) P s)", "with pos"], ["proof (chain)\npicking this:\n  0 \\<le> c\n  inverse c * Inf ((*) c ` (\\<lambda>a. wp (prog a) P s) ` S s)\n  \\<le> inverse c * (c * (INF a\\<in>S s. wp (prog a) P s))", "have \"c * (inverse c * ?V) \\<le> c * (inverse c * ?U)\""], ["proof (prove)\nusing this:\n  0 \\<le> c\n  inverse c * Inf ((*) c ` (\\<lambda>a. wp (prog a) P s) ` S s)\n  \\<le> inverse c * (c * (INF a\\<in>S s. wp (prog a) P s))\n\ngoal (1 subgoal):\n 1. c * (inverse c * Inf ((*) c ` (\\<lambda>a. wp (prog a) P s) ` S s))\n    \\<le> c * (inverse c * (c * (INF a\\<in>S s. wp (prog a) P s)))", "by(auto intro:mult_left_mono)"], ["proof (state)\nthis:\n  c * (inverse c * Inf ((*) c ` (\\<lambda>a. wp (prog a) P s) ` S s))\n  \\<le> c * (inverse c * (c * (INF a\\<in>S s. wp (prog a) P s)))\n\ngoal (1 subgoal):\n 1. c \\<noteq> 0 \\<Longrightarrow>\n    Inf ((*) c ` (\\<lambda>a. wp (prog a) P s) ` S s)\n    \\<le> c * (INF a\\<in>S s. wp (prog a) P s)", "with \\<open>c \\<noteq> 0\\<close>"], ["proof (chain)\npicking this:\n  c \\<noteq> 0\n  c * (inverse c * Inf ((*) c ` (\\<lambda>a. wp (prog a) P s) ` S s))\n  \\<le> c * (inverse c * (c * (INF a\\<in>S s. wp (prog a) P s)))", "show ?thesis"], ["proof (prove)\nusing this:\n  c \\<noteq> 0\n  c * (inverse c * Inf ((*) c ` (\\<lambda>a. wp (prog a) P s) ` S s))\n  \\<le> c * (inverse c * (c * (INF a\\<in>S s. wp (prog a) P s)))\n\ngoal (1 subgoal):\n 1. Inf ((*) c ` (\\<lambda>a. wp (prog a) P s) ` S s)\n    \\<le> c * (INF a\\<in>S s. wp (prog a) P s)", "by (simp add:mult.assoc [symmetric])"], ["proof (state)\nthis:\n  Inf ((*) c ` (\\<lambda>a. wp (prog a) P s) ` S s)\n  \\<le> c * (INF a\\<in>S s. wp (prog a) P s)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Inf ((*) c ` (\\<lambda>a. wp (prog a) P s) ` S s)\n  \\<le> c * (INF a\\<in>S s. wp (prog a) P s)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c * (INF a\\<in>S s. wp (prog a) P s) =\n  Inf ((*) c ` (\\<lambda>a. wp (prog a) P s) ` S s)\n\ngoal (1 subgoal):\n 1. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (INF a\\<in>S x. wp (prog a) P x) =\n                         (INF a\\<in>S x.\n                             wp (prog a) (\\<lambda>x. c * P x) x)", "also"], ["proof (state)\nthis:\n  c * (INF a\\<in>S s. wp (prog a) P s) =\n  Inf ((*) c ` (\\<lambda>a. wp (prog a) P s) ` S s)\n\ngoal (1 subgoal):\n 1. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (INF a\\<in>S x. wp (prog a) P x) =\n                         (INF a\\<in>S x.\n                             wp (prog a) (\\<lambda>x. c * P x) x)", "have \"... = Inf ((\\<lambda>a. c * wp (prog a) P s) ` S s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf ((*) c ` (\\<lambda>a. wp (prog a) P s) ` S s) =\n    (INF a\\<in>S s. c * wp (prog a) P s)", "by (simp add: image_comp)"], ["proof (state)\nthis:\n  Inf ((*) c ` (\\<lambda>a. wp (prog a) P s) ` S s) =\n  (INF a\\<in>S s. c * wp (prog a) P s)\n\ngoal (1 subgoal):\n 1. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (INF a\\<in>S x. wp (prog a) P x) =\n                         (INF a\\<in>S x.\n                             wp (prog a) (\\<lambda>x. c * P x) x)", "also"], ["proof (state)\nthis:\n  Inf ((*) c ` (\\<lambda>a. wp (prog a) P s) ` S s) =\n  (INF a\\<in>S s. c * wp (prog a) P s)\n\ngoal (1 subgoal):\n 1. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (INF a\\<in>S x. wp (prog a) P x) =\n                         (INF a\\<in>S x.\n                             wp (prog a) (\\<lambda>x. c * P x) x)", "from sP and pos"], ["proof (chain)\npicking this:\n  sound P\n  0 \\<le> c", "have \"... = Inf ((\\<lambda>a. wp (prog a) (\\<lambda>s. c * P s) s) ` S s)\""], ["proof (prove)\nusing this:\n  sound P\n  0 \\<le> c\n\ngoal (1 subgoal):\n 1. (INF a\\<in>S s. c * wp (prog a) P s) =\n    (INF a\\<in>S s. wp (prog a) (\\<lambda>s. c * P s) s)", "by(simp add:scalingD[OF healthy_scalingD, OF healthy] cong:image_cong)"], ["proof (state)\nthis:\n  (INF a\\<in>S s. c * wp (prog a) P s) =\n  (INF a\\<in>S s. wp (prog a) (\\<lambda>s. c * P s) s)\n\ngoal (1 subgoal):\n 1. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * (INF a\\<in>S x. wp (prog a) P x) =\n                         (INF a\\<in>S x.\n                             wp (prog a) (\\<lambda>x. c * P x) x)", "finally"], ["proof (chain)\npicking this:\n  c * (INF a\\<in>S s. wp (prog a) P s) =\n  (INF a\\<in>S s. wp (prog a) (\\<lambda>s. c * P s) s)", "show \"c * Inf ((\\<lambda>a. wp (prog a) P s) ` S s) =\n                Inf ((\\<lambda>a. wp (prog a) (\\<lambda>s. c * P s) s) ` S s)\""], ["proof (prove)\nusing this:\n  c * (INF a\\<in>S s. wp (prog a) P s) =\n  (INF a\\<in>S s. wp (prog a) (\\<lambda>s. c * P s) s)\n\ngoal (1 subgoal):\n 1. c * (INF a\\<in>S s. wp (prog a) P s) =\n    (INF a\\<in>S s. wp (prog a) (\\<lambda>s. c * P s) s)", "."], ["proof (state)\nthis:\n  c * (INF a\\<in>S s. wp (prog a) P s) =\n  (INF a\\<in>S s. wp (prog a) (\\<lambda>s. c * P s) s)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nearly_healthy_wlp_SetDC:\n  fixes prog::\"'b \\<Rightarrow> 'a prog\" and S::\"'a \\<Rightarrow> 'b set\"\n  assumes healthy:  \"\\<And>x s. x \\<in> S s \\<Longrightarrow> nearly_healthy (wlp (prog x))\"\n      and nonempty: \"\\<And>s. \\<exists>x. x \\<in> S s\"\n  shows \"nearly_healthy (wlp (SetDC prog S))\" (is \"nearly_healthy ?T\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. nearly_healthy (wlp (SetDC prog S))", "proof(intro nearly_healthyI unitaryI2 bounded_byI nnegI le_funI, simp_all only:wp_eval)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow> 0 \\<le> (INF a\\<in>S x. wlp (prog a) P x)\n 2. \\<And>P x.\n       unitary P \\<Longrightarrow> (INF a\\<in>S x. wlp (prog a) P x) \\<le> 1\n 3. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wlp (prog a) P x)\n                         \\<le> (INF a\\<in>S x. wlp (prog a) Q x)", "fix b and P::\"'a \\<Rightarrow> real\" and s::'a"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow> 0 \\<le> (INF a\\<in>S x. wlp (prog a) P x)\n 2. \\<And>P x.\n       unitary P \\<Longrightarrow> (INF a\\<in>S x. wlp (prog a) P x) \\<le> 1\n 3. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wlp (prog a) P x)\n                         \\<le> (INF a\\<in>S x. wlp (prog a) Q x)", "assume uP: \"unitary P\""], ["proof (state)\nthis:\n  unitary P\n\ngoal (3 subgoals):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow> 0 \\<le> (INF a\\<in>S x. wlp (prog a) P x)\n 2. \\<And>P x.\n       unitary P \\<Longrightarrow> (INF a\\<in>S x. wlp (prog a) P x) \\<le> 1\n 3. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wlp (prog a) P x)\n                         \\<le> (INF a\\<in>S x. wlp (prog a) Q x)", "from nonempty"], ["proof (chain)\npicking this:\n  \\<exists>x. x \\<in> S ?s", "obtain x where xin: \"x \\<in> (\\<lambda>a. wlp (prog a) P s) ` S s\""], ["proof (prove)\nusing this:\n  \\<exists>x. x \\<in> S ?s\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        x \\<in> (\\<lambda>a. wlp (prog a) P s) ` S s \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by(blast)"], ["proof (state)\nthis:\n  x \\<in> (\\<lambda>a. wlp (prog a) P s) ` S s\n\ngoal (3 subgoals):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow> 0 \\<le> (INF a\\<in>S x. wlp (prog a) P x)\n 2. \\<And>P x.\n       unitary P \\<Longrightarrow> (INF a\\<in>S x. wlp (prog a) P x) \\<le> 1\n 3. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wlp (prog a) P x)\n                         \\<le> (INF a\\<in>S x. wlp (prog a) Q x)", "moreover"], ["proof (state)\nthis:\n  x \\<in> (\\<lambda>a. wlp (prog a) P s) ` S s\n\ngoal (3 subgoals):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow> 0 \\<le> (INF a\\<in>S x. wlp (prog a) P x)\n 2. \\<And>P x.\n       unitary P \\<Longrightarrow> (INF a\\<in>S x. wlp (prog a) P x) \\<le> 1\n 3. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wlp (prog a) P x)\n                         \\<le> (INF a\\<in>S x. wlp (prog a) Q x)", "{"], ["proof (state)\nthis:\n  x \\<in> (\\<lambda>a. wlp (prog a) P s) ` S s\n\ngoal (3 subgoals):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow> 0 \\<le> (INF a\\<in>S x. wlp (prog a) P x)\n 2. \\<And>P x.\n       unitary P \\<Longrightarrow> (INF a\\<in>S x. wlp (prog a) P x) \\<le> 1\n 3. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wlp (prog a) P x)\n                         \\<le> (INF a\\<in>S x. wlp (prog a) Q x)", "from uP healthy"], ["proof (chain)\npicking this:\n  unitary P\n  ?x \\<in> S ?s \\<Longrightarrow> nearly_healthy (wlp (prog ?x))", "have \"\\<forall>x\\<in>(\\<lambda>a. wlp (prog a) P) ` S s. unitary x\""], ["proof (prove)\nusing this:\n  unitary P\n  ?x \\<in> S ?s \\<Longrightarrow> nearly_healthy (wlp (prog ?x))\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>(\\<lambda>a. wlp (prog a) P) ` S s. unitary x", "by(auto)"], ["proof (state)\nthis:\n  \\<forall>x\\<in>(\\<lambda>a. wlp (prog a) P) ` S s. unitary x\n\ngoal (3 subgoals):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow> 0 \\<le> (INF a\\<in>S x. wlp (prog a) P x)\n 2. \\<And>P x.\n       unitary P \\<Longrightarrow> (INF a\\<in>S x. wlp (prog a) P x) \\<le> 1\n 3. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wlp (prog a) P x)\n                         \\<le> (INF a\\<in>S x. wlp (prog a) Q x)", "hence \"\\<forall>x\\<in>(\\<lambda>a. wlp (prog a) P) ` S s. 0 \\<le> x s\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>(\\<lambda>a. wlp (prog a) P) ` S s. unitary x\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>(\\<lambda>a. wlp (prog a) P) ` S s. 0 \\<le> x s", "by(auto)"], ["proof (state)\nthis:\n  \\<forall>x\\<in>(\\<lambda>a. wlp (prog a) P) ` S s. 0 \\<le> x s\n\ngoal (3 subgoals):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow> 0 \\<le> (INF a\\<in>S x. wlp (prog a) P x)\n 2. \\<And>P x.\n       unitary P \\<Longrightarrow> (INF a\\<in>S x. wlp (prog a) P x) \\<le> 1\n 3. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wlp (prog a) P x)\n                         \\<le> (INF a\\<in>S x. wlp (prog a) Q x)", "hence \"\\<forall>y\\<in>(\\<lambda>a. wlp (prog a) P s) ` S s. 0 \\<le> y\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>(\\<lambda>a. wlp (prog a) P) ` S s. 0 \\<le> x s\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>(\\<lambda>a. wlp (prog a) P s) ` S s. 0 \\<le> y", "by(auto)"], ["proof (state)\nthis:\n  \\<forall>y\\<in>(\\<lambda>a. wlp (prog a) P s) ` S s. 0 \\<le> y\n\ngoal (3 subgoals):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow> 0 \\<le> (INF a\\<in>S x. wlp (prog a) P x)\n 2. \\<And>P x.\n       unitary P \\<Longrightarrow> (INF a\\<in>S x. wlp (prog a) P x) \\<le> 1\n 3. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wlp (prog a) P x)\n                         \\<le> (INF a\\<in>S x. wlp (prog a) Q x)", "}"], ["proof (state)\nthis:\n  \\<forall>y\\<in>(\\<lambda>a. wlp (prog a) P s) ` S s. 0 \\<le> y\n\ngoal (3 subgoals):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow> 0 \\<le> (INF a\\<in>S x. wlp (prog a) P x)\n 2. \\<And>P x.\n       unitary P \\<Longrightarrow> (INF a\\<in>S x. wlp (prog a) P x) \\<le> 1\n 3. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wlp (prog a) P x)\n                         \\<le> (INF a\\<in>S x. wlp (prog a) Q x)", "ultimately"], ["proof (chain)\npicking this:\n  x \\<in> (\\<lambda>a. wlp (prog a) P s) ` S s\n  \\<forall>y\\<in>(\\<lambda>a. wlp (prog a) P s) ` S s. 0 \\<le> y", "have \"Inf ((\\<lambda>a. wlp (prog a) P s) ` S s) \\<le> x\""], ["proof (prove)\nusing this:\n  x \\<in> (\\<lambda>a. wlp (prog a) P s) ` S s\n  \\<forall>y\\<in>(\\<lambda>a. wlp (prog a) P s) ` S s. 0 \\<le> y\n\ngoal (1 subgoal):\n 1. (INF a\\<in>S s. wlp (prog a) P s) \\<le> x", "by(intro cInf_lower bdd_belowI, auto)"], ["proof (state)\nthis:\n  (INF a\\<in>S s. wlp (prog a) P s) \\<le> x\n\ngoal (3 subgoals):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow> 0 \\<le> (INF a\\<in>S x. wlp (prog a) P x)\n 2. \\<And>P x.\n       unitary P \\<Longrightarrow> (INF a\\<in>S x. wlp (prog a) P x) \\<le> 1\n 3. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wlp (prog a) P x)\n                         \\<le> (INF a\\<in>S x. wlp (prog a) Q x)", "also"], ["proof (state)\nthis:\n  (INF a\\<in>S s. wlp (prog a) P s) \\<le> x\n\ngoal (3 subgoals):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow> 0 \\<le> (INF a\\<in>S x. wlp (prog a) P x)\n 2. \\<And>P x.\n       unitary P \\<Longrightarrow> (INF a\\<in>S x. wlp (prog a) P x) \\<le> 1\n 3. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wlp (prog a) P x)\n                         \\<le> (INF a\\<in>S x. wlp (prog a) Q x)", "from xin healthy uP"], ["proof (chain)\npicking this:\n  x \\<in> (\\<lambda>a. wlp (prog a) P s) ` S s\n  ?x \\<in> S ?s \\<Longrightarrow> nearly_healthy (wlp (prog ?x))\n  unitary P", "have \"x \\<le> 1\""], ["proof (prove)\nusing this:\n  x \\<in> (\\<lambda>a. wlp (prog a) P s) ` S s\n  ?x \\<in> S ?s \\<Longrightarrow> nearly_healthy (wlp (prog ?x))\n  unitary P\n\ngoal (1 subgoal):\n 1. x \\<le> 1", "by(blast)"], ["proof (state)\nthis:\n  x \\<le> 1\n\ngoal (3 subgoals):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow> 0 \\<le> (INF a\\<in>S x. wlp (prog a) P x)\n 2. \\<And>P x.\n       unitary P \\<Longrightarrow> (INF a\\<in>S x. wlp (prog a) P x) \\<le> 1\n 3. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wlp (prog a) P x)\n                         \\<le> (INF a\\<in>S x. wlp (prog a) Q x)", "finally"], ["proof (chain)\npicking this:\n  (INF a\\<in>S s. wlp (prog a) P s) \\<le> 1", "show \"Inf ((\\<lambda>a. wlp (prog a) P s) ` S s) \\<le> 1\""], ["proof (prove)\nusing this:\n  (INF a\\<in>S s. wlp (prog a) P s) \\<le> 1\n\ngoal (1 subgoal):\n 1. (INF a\\<in>S s. wlp (prog a) P s) \\<le> 1", "."], ["proof (state)\nthis:\n  (INF a\\<in>S s. wlp (prog a) P s) \\<le> 1\n\ngoal (2 subgoals):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow> 0 \\<le> (INF a\\<in>S x. wlp (prog a) P x)\n 2. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wlp (prog a) P x)\n                         \\<le> (INF a\\<in>S x. wlp (prog a) Q x)", "from xin uP healthy"], ["proof (chain)\npicking this:\n  x \\<in> (\\<lambda>a. wlp (prog a) P s) ` S s\n  unitary P\n  ?x \\<in> S ?s \\<Longrightarrow> nearly_healthy (wlp (prog ?x))", "show \"0 \\<le> Inf ((\\<lambda>a. wlp (prog a) P s) ` S s)\""], ["proof (prove)\nusing this:\n  x \\<in> (\\<lambda>a. wlp (prog a) P s) ` S s\n  unitary P\n  ?x \\<in> S ?s \\<Longrightarrow> nearly_healthy (wlp (prog ?x))\n\ngoal (1 subgoal):\n 1. 0 \\<le> (INF a\\<in>S s. wlp (prog a) P s)", "by(blast dest!:unitary_sound[OF nearly_healthy_unitaryD[OF _ uP]]\n             intro:cInf_greatest)"], ["proof (state)\nthis:\n  0 \\<le> (INF a\\<in>S s. wlp (prog a) P s)\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wlp (prog a) P x)\n                         \\<le> (INF a\\<in>S x. wlp (prog a) Q x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wlp (prog a) P x)\n                         \\<le> (INF a\\<in>S x. wlp (prog a) Q x)", "fix P::\"'a \\<Rightarrow> real\" and Q and s::'a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wlp (prog a) P x)\n                         \\<le> (INF a\\<in>S x. wlp (prog a) Q x)", "assume uP: \"unitary P\" and uQ: \"unitary Q\" and le: \"P \\<tturnstile> Q\""], ["proof (state)\nthis:\n  unitary P\n  unitary Q\n  P \\<tturnstile> Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wlp (prog a) P x)\n                         \\<le> (INF a\\<in>S x. wlp (prog a) Q x)", "from nonempty"], ["proof (chain)\npicking this:\n  \\<exists>x. x \\<in> S ?s", "obtain x where xin: \"x \\<in> (\\<lambda>a. wlp (prog a) P s) ` S s\""], ["proof (prove)\nusing this:\n  \\<exists>x. x \\<in> S ?s\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        x \\<in> (\\<lambda>a. wlp (prog a) P s) ` S s \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by(blast)"], ["proof (state)\nthis:\n  x \\<in> (\\<lambda>a. wlp (prog a) P s) ` S s\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wlp (prog a) P x)\n                         \\<le> (INF a\\<in>S x. wlp (prog a) Q x)", "moreover"], ["proof (state)\nthis:\n  x \\<in> (\\<lambda>a. wlp (prog a) P s) ` S s\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wlp (prog a) P x)\n                         \\<le> (INF a\\<in>S x. wlp (prog a) Q x)", "{"], ["proof (state)\nthis:\n  x \\<in> (\\<lambda>a. wlp (prog a) P s) ` S s\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wlp (prog a) P x)\n                         \\<le> (INF a\\<in>S x. wlp (prog a) Q x)", "from uP healthy"], ["proof (chain)\npicking this:\n  unitary P\n  ?x \\<in> S ?s \\<Longrightarrow> nearly_healthy (wlp (prog ?x))", "have \"\\<forall>x\\<in>(\\<lambda>a. wlp (prog a) P) ` S s. unitary x\""], ["proof (prove)\nusing this:\n  unitary P\n  ?x \\<in> S ?s \\<Longrightarrow> nearly_healthy (wlp (prog ?x))\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>(\\<lambda>a. wlp (prog a) P) ` S s. unitary x", "by(auto)"], ["proof (state)\nthis:\n  \\<forall>x\\<in>(\\<lambda>a. wlp (prog a) P) ` S s. unitary x\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wlp (prog a) P x)\n                         \\<le> (INF a\\<in>S x. wlp (prog a) Q x)", "hence \"\\<forall>x\\<in>(\\<lambda>a. wlp (prog a) P) ` S s. 0 \\<le> x s\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>(\\<lambda>a. wlp (prog a) P) ` S s. unitary x\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>(\\<lambda>a. wlp (prog a) P) ` S s. 0 \\<le> x s", "by(auto)"], ["proof (state)\nthis:\n  \\<forall>x\\<in>(\\<lambda>a. wlp (prog a) P) ` S s. 0 \\<le> x s\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wlp (prog a) P x)\n                         \\<le> (INF a\\<in>S x. wlp (prog a) Q x)", "hence \"\\<forall>y\\<in>(\\<lambda>a. wlp (prog a) P s) ` S s. 0 \\<le> y\""], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>(\\<lambda>a. wlp (prog a) P) ` S s. 0 \\<le> x s\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>(\\<lambda>a. wlp (prog a) P s) ` S s. 0 \\<le> y", "by(auto)"], ["proof (state)\nthis:\n  \\<forall>y\\<in>(\\<lambda>a. wlp (prog a) P s) ` S s. 0 \\<le> y\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wlp (prog a) P x)\n                         \\<le> (INF a\\<in>S x. wlp (prog a) Q x)", "}"], ["proof (state)\nthis:\n  \\<forall>y\\<in>(\\<lambda>a. wlp (prog a) P s) ` S s. 0 \\<le> y\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wlp (prog a) P x)\n                         \\<le> (INF a\\<in>S x. wlp (prog a) Q x)", "moreover"], ["proof (state)\nthis:\n  \\<forall>y\\<in>(\\<lambda>a. wlp (prog a) P s) ` S s. 0 \\<le> y\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wlp (prog a) P x)\n                         \\<le> (INF a\\<in>S x. wlp (prog a) Q x)", "have \"\\<forall>x\\<in>(\\<lambda>a. wlp (prog a) Q s) ` S s. \\<exists>y\\<in>(\\<lambda>a. wlp (prog a) P s) ` S s. y \\<le> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>(\\<lambda>a. wlp (prog a) Q s) ` S s.\n       \\<exists>y\\<in>(\\<lambda>a. wlp (prog a) P s) ` S s. y \\<le> x", "proof(rule ballI, clarify, rule bexI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x a. a \\<in> S s \\<Longrightarrow> ?y4 x a \\<le> wlp (prog a) Q s\n 2. \\<And>x a.\n       a \\<in> S s \\<Longrightarrow>\n       ?y4 x a \\<in> (\\<lambda>a. wlp (prog a) P s) ` S s", "fix x and a"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x a. a \\<in> S s \\<Longrightarrow> ?y4 x a \\<le> wlp (prog a) Q s\n 2. \\<And>x a.\n       a \\<in> S s \\<Longrightarrow>\n       ?y4 x a \\<in> (\\<lambda>a. wlp (prog a) P s) ` S s", "assume ain: \"a \\<in> S s\""], ["proof (state)\nthis:\n  a \\<in> S s\n\ngoal (2 subgoals):\n 1. \\<And>x a. a \\<in> S s \\<Longrightarrow> ?y4 x a \\<le> wlp (prog a) Q s\n 2. \\<And>x a.\n       a \\<in> S s \\<Longrightarrow>\n       ?y4 x a \\<in> (\\<lambda>a. wlp (prog a) P s) ` S s", "from uP uQ le"], ["proof (chain)\npicking this:\n  unitary P\n  unitary Q\n  P \\<tturnstile> Q", "show \"wlp (prog a) P s \\<le> wlp (prog a) Q s\""], ["proof (prove)\nusing this:\n  unitary P\n  unitary Q\n  P \\<tturnstile> Q\n\ngoal (1 subgoal):\n 1. wlp (prog a) P s \\<le> wlp (prog a) Q s", "by(auto intro:le_funD[OF nearly_healthy_monoD[OF healthy, OF ain]])"], ["proof (state)\nthis:\n  wlp (prog a) P s \\<le> wlp (prog a) Q s\n\ngoal (1 subgoal):\n 1. \\<And>x a.\n       a \\<in> S s \\<Longrightarrow>\n       wlp (prog a) P s \\<in> (\\<lambda>a. wlp (prog a) P s) ` S s", "from ain"], ["proof (chain)\npicking this:\n  a \\<in> S s", "show \"wlp (prog a) P s \\<in> (\\<lambda>a. wlp (prog a) P s) ` S s\""], ["proof (prove)\nusing this:\n  a \\<in> S s\n\ngoal (1 subgoal):\n 1. wlp (prog a) P s \\<in> (\\<lambda>a. wlp (prog a) P s) ` S s", "by(simp)"], ["proof (state)\nthis:\n  wlp (prog a) P s \\<in> (\\<lambda>a. wlp (prog a) P s) ` S s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>x\\<in>(\\<lambda>a. wlp (prog a) Q s) ` S s.\n     \\<exists>y\\<in>(\\<lambda>a. wlp (prog a) P s) ` S s. y \\<le> x\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (INF a\\<in>S x. wlp (prog a) P x)\n                         \\<le> (INF a\\<in>S x. wlp (prog a) Q x)", "ultimately"], ["proof (chain)\npicking this:\n  x \\<in> (\\<lambda>a. wlp (prog a) P s) ` S s\n  \\<forall>y\\<in>(\\<lambda>a. wlp (prog a) P s) ` S s. 0 \\<le> y\n  \\<forall>x\\<in>(\\<lambda>a. wlp (prog a) Q s) ` S s.\n     \\<exists>y\\<in>(\\<lambda>a. wlp (prog a) P s) ` S s. y \\<le> x", "show \"Inf ((\\<lambda>a. wlp (prog a) P s) ` S s) \\<le> Inf ((\\<lambda>a. wlp (prog a) Q s) ` S s)\""], ["proof (prove)\nusing this:\n  x \\<in> (\\<lambda>a. wlp (prog a) P s) ` S s\n  \\<forall>y\\<in>(\\<lambda>a. wlp (prog a) P s) ` S s. 0 \\<le> y\n  \\<forall>x\\<in>(\\<lambda>a. wlp (prog a) Q s) ` S s.\n     \\<exists>y\\<in>(\\<lambda>a. wlp (prog a) P s) ` S s. y \\<le> x\n\ngoal (1 subgoal):\n 1. (INF a\\<in>S s. wlp (prog a) P s)\n    \\<le> (INF a\\<in>S s. wlp (prog a) Q s)", "by(intro cInf_mono, blast+)"], ["proof (state)\nthis:\n  (INF a\\<in>S s. wlp (prog a) P s) \\<le> (INF a\\<in>S s. wlp (prog a) Q s)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma healthy_wp_SetPC:\n  fixes p::\"'s \\<Rightarrow> 'a \\<Rightarrow> real\"\n  and   f::\"'a \\<Rightarrow> 's prog\"\n  assumes healthy: \"\\<And>a s. a \\<in> supp (p s) \\<Longrightarrow> healthy (wp (f a))\"\n      and sound: \"\\<And>s. sound (p s)\"\n      and sub_dist: \"\\<And>s. (\\<Sum>a\\<in>supp (p s). p s a) \\<le> 1\"\n  shows \"healthy (wp (SetPC f p))\" (is \"healthy ?X\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. healthy (wp (SetPC f p))", "proof(intro healthy_parts bounded_byI nnegI le_funI, simp_all add:wp_eval)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x)\n                         \\<le> b\n 2. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> (\\<Sum>a\\<in>supp (p x).\n                                    p x a * wp (f a) P x)\n 3. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x)\n                         \\<le> (\\<Sum>a\\<in>supp (p x).\n                                  p x a * wp (f a) Q x)\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c *\n                         (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x) =\n                         (\\<Sum>a\\<in>supp (p x).\n                            p x a * wp (f a) (\\<lambda>x. c * P x) x)", "fix b and P::\"'s \\<Rightarrow> real\" and s::'s"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x)\n                         \\<le> b\n 2. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> (\\<Sum>a\\<in>supp (p x).\n                                    p x a * wp (f a) P x)\n 3. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x)\n                         \\<le> (\\<Sum>a\\<in>supp (p x).\n                                  p x a * wp (f a) Q x)\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c *\n                         (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x) =\n                         (\\<Sum>a\\<in>supp (p x).\n                            p x a * wp (f a) (\\<lambda>x. c * P x) x)", "assume bP: \"bounded_by b P\" and nP: \"nneg P\""], ["proof (state)\nthis:\n  bounded_by b P\n  nneg P\n\ngoal (4 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x)\n                         \\<le> b\n 2. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> (\\<Sum>a\\<in>supp (p x).\n                                    p x a * wp (f a) P x)\n 3. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x)\n                         \\<le> (\\<Sum>a\\<in>supp (p x).\n                                  p x a * wp (f a) Q x)\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c *\n                         (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x) =\n                         (\\<Sum>a\\<in>supp (p x).\n                            p x a * wp (f a) (\\<lambda>x. c * P x) x)", "hence sP: \"sound P\""], ["proof (prove)\nusing this:\n  bounded_by b P\n  nneg P\n\ngoal (1 subgoal):\n 1. sound P", "by(auto)"], ["proof (state)\nthis:\n  sound P\n\ngoal (4 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x)\n                         \\<le> b\n 2. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> (\\<Sum>a\\<in>supp (p x).\n                                    p x a * wp (f a) P x)\n 3. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x)\n                         \\<le> (\\<Sum>a\\<in>supp (p x).\n                                  p x a * wp (f a) Q x)\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c *\n                         (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x) =\n                         (\\<Sum>a\\<in>supp (p x).\n                            p x a * wp (f a) (\\<lambda>x. c * P x) x)", "from sP and bP and healthy"], ["proof (chain)\npicking this:\n  sound P\n  bounded_by b P\n  ?a \\<in> supp (p ?s) \\<Longrightarrow> healthy (wp (f ?a))", "have \"\\<And>a s. a \\<in> supp (p s) \\<Longrightarrow> wp (f a) P s \\<le> b\""], ["proof (prove)\nusing this:\n  sound P\n  bounded_by b P\n  ?a \\<in> supp (p ?s) \\<Longrightarrow> healthy (wp (f ?a))\n\ngoal (1 subgoal):\n 1. \\<And>a s. a \\<in> supp (p s) \\<Longrightarrow> wp (f a) P s \\<le> b", "by(blast dest:healthy_bounded_byD)"], ["proof (state)\nthis:\n  ?a \\<in> supp (p ?s) \\<Longrightarrow> wp (f ?a) P ?s \\<le> b\n\ngoal (4 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x)\n                         \\<le> b\n 2. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> (\\<Sum>a\\<in>supp (p x).\n                                    p x a * wp (f a) P x)\n 3. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x)\n                         \\<le> (\\<Sum>a\\<in>supp (p x).\n                                  p x a * wp (f a) Q x)\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c *\n                         (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x) =\n                         (\\<Sum>a\\<in>supp (p x).\n                            p x a * wp (f a) (\\<lambda>x. c * P x) x)", "with sound"], ["proof (chain)\npicking this:\n  sound (p ?s)\n  ?a \\<in> supp (p ?s) \\<Longrightarrow> wp (f ?a) P ?s \\<le> b", "have \"(\\<Sum>a\\<in>supp (p s). p s a * wp (f a) P s) \\<le> (\\<Sum>a\\<in>supp (p s). p s a * b)\""], ["proof (prove)\nusing this:\n  sound (p ?s)\n  ?a \\<in> supp (p ?s) \\<Longrightarrow> wp (f ?a) P ?s \\<le> b\n\ngoal (1 subgoal):\n 1. (\\<Sum>a\\<in>supp (p s). p s a * wp (f a) P s)\n    \\<le> (\\<Sum>a\\<in>supp (p s). p s a * b)", "by(blast intro:sum_mono mult_left_mono)"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>supp (p s). p s a * wp (f a) P s)\n  \\<le> (\\<Sum>a\\<in>supp (p s). p s a * b)\n\ngoal (4 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x)\n                         \\<le> b\n 2. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> (\\<Sum>a\\<in>supp (p x).\n                                    p x a * wp (f a) P x)\n 3. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x)\n                         \\<le> (\\<Sum>a\\<in>supp (p x).\n                                  p x a * wp (f a) Q x)\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c *\n                         (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x) =\n                         (\\<Sum>a\\<in>supp (p x).\n                            p x a * wp (f a) (\\<lambda>x. c * P x) x)", "also"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>supp (p s). p s a * wp (f a) P s)\n  \\<le> (\\<Sum>a\\<in>supp (p s). p s a * b)\n\ngoal (4 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x)\n                         \\<le> b\n 2. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> (\\<Sum>a\\<in>supp (p x).\n                                    p x a * wp (f a) P x)\n 3. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x)\n                         \\<le> (\\<Sum>a\\<in>supp (p x).\n                                  p x a * wp (f a) Q x)\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c *\n                         (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x) =\n                         (\\<Sum>a\\<in>supp (p x).\n                            p x a * wp (f a) (\\<lambda>x. c * P x) x)", "have \"... = (\\<Sum>a\\<in>supp (p s). p s a) * b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>a\\<in>supp (p s). p s a * b) = sum (p s) (supp (p s)) * b", "by(simp add:sum_distrib_right)"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>supp (p s). p s a * b) = sum (p s) (supp (p s)) * b\n\ngoal (4 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x)\n                         \\<le> b\n 2. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> (\\<Sum>a\\<in>supp (p x).\n                                    p x a * wp (f a) P x)\n 3. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x)\n                         \\<le> (\\<Sum>a\\<in>supp (p x).\n                                  p x a * wp (f a) Q x)\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c *\n                         (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x) =\n                         (\\<Sum>a\\<in>supp (p x).\n                            p x a * wp (f a) (\\<lambda>x. c * P x) x)", "also"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>supp (p s). p s a * b) = sum (p s) (supp (p s)) * b\n\ngoal (4 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x)\n                         \\<le> b\n 2. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> (\\<Sum>a\\<in>supp (p x).\n                                    p x a * wp (f a) P x)\n 3. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x)\n                         \\<le> (\\<Sum>a\\<in>supp (p x).\n                                  p x a * wp (f a) Q x)\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c *\n                         (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x) =\n                         (\\<Sum>a\\<in>supp (p x).\n                            p x a * wp (f a) (\\<lambda>x. c * P x) x)", "{"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>supp (p s). p s a * b) = sum (p s) (supp (p s)) * b\n\ngoal (4 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x)\n                         \\<le> b\n 2. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> (\\<Sum>a\\<in>supp (p x).\n                                    p x a * wp (f a) P x)\n 3. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x)\n                         \\<le> (\\<Sum>a\\<in>supp (p x).\n                                  p x a * wp (f a) Q x)\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c *\n                         (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x) =\n                         (\\<Sum>a\\<in>supp (p x).\n                            p x a * wp (f a) (\\<lambda>x. c * P x) x)", "from bP and nP"], ["proof (chain)\npicking this:\n  bounded_by b P\n  nneg P", "have \"0 \\<le> b\""], ["proof (prove)\nusing this:\n  bounded_by b P\n  nneg P\n\ngoal (1 subgoal):\n 1. 0 \\<le> b", "by(blast)"], ["proof (state)\nthis:\n  0 \\<le> b\n\ngoal (4 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x)\n                         \\<le> b\n 2. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> (\\<Sum>a\\<in>supp (p x).\n                                    p x a * wp (f a) P x)\n 3. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x)\n                         \\<le> (\\<Sum>a\\<in>supp (p x).\n                                  p x a * wp (f a) Q x)\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c *\n                         (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x) =\n                         (\\<Sum>a\\<in>supp (p x).\n                            p x a * wp (f a) (\\<lambda>x. c * P x) x)", "with sub_dist"], ["proof (chain)\npicking this:\n  sum (p ?s) (supp (p ?s)) \\<le> 1\n  0 \\<le> b", "have \"(\\<Sum>a\\<in>supp (p s). p s a) * b \\<le> 1 * b\""], ["proof (prove)\nusing this:\n  sum (p ?s) (supp (p ?s)) \\<le> 1\n  0 \\<le> b\n\ngoal (1 subgoal):\n 1. sum (p s) (supp (p s)) * b \\<le> 1 * b", "by(rule mult_right_mono)"], ["proof (state)\nthis:\n  sum (p s) (supp (p s)) * b \\<le> 1 * b\n\ngoal (4 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x)\n                         \\<le> b\n 2. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> (\\<Sum>a\\<in>supp (p x).\n                                    p x a * wp (f a) P x)\n 3. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x)\n                         \\<le> (\\<Sum>a\\<in>supp (p x).\n                                  p x a * wp (f a) Q x)\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c *\n                         (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x) =\n                         (\\<Sum>a\\<in>supp (p x).\n                            p x a * wp (f a) (\\<lambda>x. c * P x) x)", "}"], ["proof (state)\nthis:\n  sum (p s) (supp (p s)) * b \\<le> 1 * b\n\ngoal (4 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x)\n                         \\<le> b\n 2. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> (\\<Sum>a\\<in>supp (p x).\n                                    p x a * wp (f a) P x)\n 3. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x)\n                         \\<le> (\\<Sum>a\\<in>supp (p x).\n                                  p x a * wp (f a) Q x)\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c *\n                         (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x) =\n                         (\\<Sum>a\\<in>supp (p x).\n                            p x a * wp (f a) (\\<lambda>x. c * P x) x)", "also"], ["proof (state)\nthis:\n  sum (p s) (supp (p s)) * b \\<le> 1 * b\n\ngoal (4 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x)\n                         \\<le> b\n 2. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> (\\<Sum>a\\<in>supp (p x).\n                                    p x a * wp (f a) P x)\n 3. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x)\n                         \\<le> (\\<Sum>a\\<in>supp (p x).\n                                  p x a * wp (f a) Q x)\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c *\n                         (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x) =\n                         (\\<Sum>a\\<in>supp (p x).\n                            p x a * wp (f a) (\\<lambda>x. c * P x) x)", "have \"1 * b = b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 * b = b", "by(simp)"], ["proof (state)\nthis:\n  1 * b = b\n\ngoal (4 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x)\n                         \\<le> b\n 2. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> (\\<Sum>a\\<in>supp (p x).\n                                    p x a * wp (f a) P x)\n 3. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x)\n                         \\<le> (\\<Sum>a\\<in>supp (p x).\n                                  p x a * wp (f a) Q x)\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c *\n                         (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x) =\n                         (\\<Sum>a\\<in>supp (p x).\n                            p x a * wp (f a) (\\<lambda>x. c * P x) x)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>a\\<in>supp (p s). p s a * wp (f a) P s) \\<le> b", "show \"(\\<Sum>a\\<in>supp (p s). p s a * wp (f a) P s) \\<le> b\""], ["proof (prove)\nusing this:\n  (\\<Sum>a\\<in>supp (p s). p s a * wp (f a) P s) \\<le> b\n\ngoal (1 subgoal):\n 1. (\\<Sum>a\\<in>supp (p s). p s a * wp (f a) P s) \\<le> b", "."], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>supp (p s). p s a * wp (f a) P s) \\<le> b\n\ngoal (3 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> (\\<Sum>a\\<in>supp (p x).\n                                    p x a * wp (f a) P x)\n 2. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x)\n                         \\<le> (\\<Sum>a\\<in>supp (p x).\n                                  p x a * wp (f a) Q x)\n 3. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c *\n                         (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x) =\n                         (\\<Sum>a\\<in>supp (p x).\n                            p x a * wp (f a) (\\<lambda>x. c * P x) x)", "show \"0 \\<le> (\\<Sum>a\\<in>supp (p s). p s a * wp (f a) P s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> (\\<Sum>a\\<in>supp (p s). p s a * wp (f a) P s)", "proof(rule sum_nonneg [OF mult_nonneg_nonneg])"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a. a \\<in> supp (p s) \\<Longrightarrow> 0 \\<le> p s a\n 2. \\<And>a. a \\<in> supp (p s) \\<Longrightarrow> 0 \\<le> wp (f a) P s", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a. a \\<in> supp (p s) \\<Longrightarrow> 0 \\<le> p s a\n 2. \\<And>a. a \\<in> supp (p s) \\<Longrightarrow> 0 \\<le> wp (f a) P s", "from sound"], ["proof (chain)\npicking this:\n  sound (p ?s)", "show \"0 \\<le> p s x\""], ["proof (prove)\nusing this:\n  sound (p ?s)\n\ngoal (1 subgoal):\n 1. 0 \\<le> p s x", "by(blast)"], ["proof (state)\nthis:\n  0 \\<le> p s x\n\ngoal (1 subgoal):\n 1. \\<And>a. a \\<in> supp (p s) \\<Longrightarrow> 0 \\<le> wp (f a) P s", "assume \"x \\<in> supp (p s)\""], ["proof (state)\nthis:\n  x \\<in> supp (p s)\n\ngoal (1 subgoal):\n 1. \\<And>a. a \\<in> supp (p s) \\<Longrightarrow> 0 \\<le> wp (f a) P s", "with sP and healthy"], ["proof (chain)\npicking this:\n  sound P\n  ?a \\<in> supp (p ?s) \\<Longrightarrow> healthy (wp (f ?a))\n  x \\<in> supp (p s)", "show \"0 \\<le> wp (f x) P s\""], ["proof (prove)\nusing this:\n  sound P\n  ?a \\<in> supp (p ?s) \\<Longrightarrow> healthy (wp (f ?a))\n  x \\<in> supp (p s)\n\ngoal (1 subgoal):\n 1. 0 \\<le> wp (f x) P s", "by(blast)"], ["proof (state)\nthis:\n  0 \\<le> wp (f x) P s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 \\<le> (\\<Sum>a\\<in>supp (p s). p s a * wp (f a) P s)\n\ngoal (2 subgoals):\n 1. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x)\n                         \\<le> (\\<Sum>a\\<in>supp (p x).\n                                  p x a * wp (f a) Q x)\n 2. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c *\n                         (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x) =\n                         (\\<Sum>a\\<in>supp (p x).\n                            p x a * wp (f a) (\\<lambda>x. c * P x) x)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x)\n                         \\<le> (\\<Sum>a\\<in>supp (p x).\n                                  p x a * wp (f a) Q x)\n 2. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c *\n                         (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x) =\n                         (\\<Sum>a\\<in>supp (p x).\n                            p x a * wp (f a) (\\<lambda>x. c * P x) x)", "fix P::\"'s \\<Rightarrow> real\" and Q::\"'s \\<Rightarrow> real\" and s"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x)\n                         \\<le> (\\<Sum>a\\<in>supp (p x).\n                                  p x a * wp (f a) Q x)\n 2. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c *\n                         (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x) =\n                         (\\<Sum>a\\<in>supp (p x).\n                            p x a * wp (f a) (\\<lambda>x. c * P x) x)", "assume s_P: \"sound P\" and s_Q: \"sound Q\" and ent: \"P \\<tturnstile> Q\""], ["proof (state)\nthis:\n  sound P\n  sound Q\n  P \\<tturnstile> Q\n\ngoal (2 subgoals):\n 1. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x)\n                         \\<le> (\\<Sum>a\\<in>supp (p x).\n                                  p x a * wp (f a) Q x)\n 2. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c *\n                         (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x) =\n                         (\\<Sum>a\\<in>supp (p x).\n                            p x a * wp (f a) (\\<lambda>x. c * P x) x)", "with healthy"], ["proof (chain)\npicking this:\n  ?a \\<in> supp (p ?s) \\<Longrightarrow> healthy (wp (f ?a))\n  sound P\n  sound Q\n  P \\<tturnstile> Q", "have \"\\<And>a. a \\<in> supp (p s) \\<Longrightarrow> wp (f a) P s \\<le> wp (f a) Q s\""], ["proof (prove)\nusing this:\n  ?a \\<in> supp (p ?s) \\<Longrightarrow> healthy (wp (f ?a))\n  sound P\n  sound Q\n  P \\<tturnstile> Q\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> supp (p s) \\<Longrightarrow> wp (f a) P s \\<le> wp (f a) Q s", "by(blast)"], ["proof (state)\nthis:\n  ?a \\<in> supp (p s) \\<Longrightarrow> wp (f ?a) P s \\<le> wp (f ?a) Q s\n\ngoal (2 subgoals):\n 1. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x)\n                         \\<le> (\\<Sum>a\\<in>supp (p x).\n                                  p x a * wp (f a) Q x)\n 2. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c *\n                         (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x) =\n                         (\\<Sum>a\\<in>supp (p x).\n                            p x a * wp (f a) (\\<lambda>x. c * P x) x)", "with sound"], ["proof (chain)\npicking this:\n  sound (p ?s)\n  ?a \\<in> supp (p s) \\<Longrightarrow> wp (f ?a) P s \\<le> wp (f ?a) Q s", "show \"(\\<Sum>a\\<in>supp (p s). p s a * wp (f a) P s) \\<le>\n                   (\\<Sum>a\\<in>supp (p s). p s a * wp (f a) Q s)\""], ["proof (prove)\nusing this:\n  sound (p ?s)\n  ?a \\<in> supp (p s) \\<Longrightarrow> wp (f ?a) P s \\<le> wp (f ?a) Q s\n\ngoal (1 subgoal):\n 1. (\\<Sum>a\\<in>supp (p s). p s a * wp (f a) P s)\n    \\<le> (\\<Sum>a\\<in>supp (p s). p s a * wp (f a) Q s)", "by(blast intro:sum_mono mult_left_mono)"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>supp (p s). p s a * wp (f a) P s)\n  \\<le> (\\<Sum>a\\<in>supp (p s). p s a * wp (f a) Q s)\n\ngoal (1 subgoal):\n 1. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c *\n                         (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x) =\n                         (\\<Sum>a\\<in>supp (p x).\n                            p x a * wp (f a) (\\<lambda>x. c * P x) x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c *\n                         (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x) =\n                         (\\<Sum>a\\<in>supp (p x).\n                            p x a * wp (f a) (\\<lambda>x. c * P x) x)", "fix P::\"'s \\<Rightarrow> real\" and c::real and s::'s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c *\n                         (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x) =\n                         (\\<Sum>a\\<in>supp (p x).\n                            p x a * wp (f a) (\\<lambda>x. c * P x) x)", "assume sound: \"sound P\" and pos: \"0 \\<le> c\""], ["proof (state)\nthis:\n  sound P\n  0 \\<le> c\n\ngoal (1 subgoal):\n 1. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c *\n                         (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x) =\n                         (\\<Sum>a\\<in>supp (p x).\n                            p x a * wp (f a) (\\<lambda>x. c * P x) x)", "have \"c * (\\<Sum>a\\<in>supp (p s). p s a * wp (f a) P s) =\n        (\\<Sum>a\\<in>supp (p s). p s a * (c * wp (f a) P s))\"\n       (is \"?A = ?B\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. c * (\\<Sum>a\\<in>supp (p s). p s a * wp (f a) P s) =\n    (\\<Sum>a\\<in>supp (p s). p s a * (c * wp (f a) P s))", "by(simp add:sum_distrib_left ac_simps)"], ["proof (state)\nthis:\n  c * (\\<Sum>a\\<in>supp (p s). p s a * wp (f a) P s) =\n  (\\<Sum>a\\<in>supp (p s). p s a * (c * wp (f a) P s))\n\ngoal (1 subgoal):\n 1. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c *\n                         (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x) =\n                         (\\<Sum>a\\<in>supp (p x).\n                            p x a * wp (f a) (\\<lambda>x. c * P x) x)", "also"], ["proof (state)\nthis:\n  c * (\\<Sum>a\\<in>supp (p s). p s a * wp (f a) P s) =\n  (\\<Sum>a\\<in>supp (p s). p s a * (c * wp (f a) P s))\n\ngoal (1 subgoal):\n 1. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c *\n                         (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x) =\n                         (\\<Sum>a\\<in>supp (p x).\n                            p x a * wp (f a) (\\<lambda>x. c * P x) x)", "from sound and pos and healthy"], ["proof (chain)\npicking this:\n  sound P\n  0 \\<le> c\n  ?a \\<in> supp (p ?s) \\<Longrightarrow> healthy (wp (f ?a))", "have \"... = (\\<Sum>a\\<in>supp (p s). p s a * wp (f a) (\\<lambda>s. c * P s) s)\""], ["proof (prove)\nusing this:\n  sound P\n  0 \\<le> c\n  ?a \\<in> supp (p ?s) \\<Longrightarrow> healthy (wp (f ?a))\n\ngoal (1 subgoal):\n 1. (\\<Sum>a\\<in>supp (p s). p s a * (c * wp (f a) P s)) =\n    (\\<Sum>a\\<in>supp (p s). p s a * wp (f a) (\\<lambda>s. c * P s) s)", "by(auto simp:scalingD[OF healthy_scalingD])"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>supp (p s). p s a * (c * wp (f a) P s)) =\n  (\\<Sum>a\\<in>supp (p s). p s a * wp (f a) (\\<lambda>s. c * P s) s)\n\ngoal (1 subgoal):\n 1. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c *\n                         (\\<Sum>a\\<in>supp (p x). p x a * wp (f a) P x) =\n                         (\\<Sum>a\\<in>supp (p x).\n                            p x a * wp (f a) (\\<lambda>x. c * P x) x)", "finally"], ["proof (chain)\npicking this:\n  c * (\\<Sum>a\\<in>supp (p s). p s a * wp (f a) P s) =\n  (\\<Sum>a\\<in>supp (p s). p s a * wp (f a) (\\<lambda>s. c * P s) s)", "show \"?A = ...\""], ["proof (prove)\nusing this:\n  c * (\\<Sum>a\\<in>supp (p s). p s a * wp (f a) P s) =\n  (\\<Sum>a\\<in>supp (p s). p s a * wp (f a) (\\<lambda>s. c * P s) s)\n\ngoal (1 subgoal):\n 1. c * (\\<Sum>a\\<in>supp (p s). p s a * wp (f a) P s) =\n    (\\<Sum>a\\<in>supp (p s). p s a * wp (f a) (\\<lambda>s. c * P s) s)", "."], ["proof (state)\nthis:\n  c * (\\<Sum>a\\<in>supp (p s). p s a * wp (f a) P s) =\n  (\\<Sum>a\\<in>supp (p s). p s a * wp (f a) (\\<lambda>s. c * P s) s)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nearly_healthy_wlp_SetPC:\n  fixes p::\"'s \\<Rightarrow> 'a \\<Rightarrow> real\"\n  and   f::\"'a \\<Rightarrow> 's prog\"\n  assumes healthy: \"\\<And>a s. a \\<in> supp (p s) \\<Longrightarrow> nearly_healthy (wlp (f a))\"\n      and sound: \"\\<And>s. sound (p s)\"\n      and sub_dist: \"\\<And>s. (\\<Sum>a\\<in>supp (p s). p s a) \\<le> 1\"\n  shows \"nearly_healthy (wlp (SetPC f p))\" (is \"nearly_healthy ?X\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. nearly_healthy (wlp (SetPC f p))", "proof(intro nearly_healthyI unitaryI2 bounded_byI nnegI le_funI, simp_all only:wp_eval)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       0 \\<le> (\\<Sum>a\\<in>supp (p x). p x a * wlp (f a) P x)\n 2. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       (\\<Sum>a\\<in>supp (p x). p x a * wlp (f a) P x) \\<le> 1\n 3. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wlp (f a) P x)\n                         \\<le> (\\<Sum>a\\<in>supp (p x).\n                                  p x a * wlp (f a) Q x)", "fix b and P::\"'s \\<Rightarrow> real\" and s::'s"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       0 \\<le> (\\<Sum>a\\<in>supp (p x). p x a * wlp (f a) P x)\n 2. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       (\\<Sum>a\\<in>supp (p x). p x a * wlp (f a) P x) \\<le> 1\n 3. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wlp (f a) P x)\n                         \\<le> (\\<Sum>a\\<in>supp (p x).\n                                  p x a * wlp (f a) Q x)", "assume uP: \"unitary P\""], ["proof (state)\nthis:\n  unitary P\n\ngoal (3 subgoals):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       0 \\<le> (\\<Sum>a\\<in>supp (p x). p x a * wlp (f a) P x)\n 2. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       (\\<Sum>a\\<in>supp (p x). p x a * wlp (f a) P x) \\<le> 1\n 3. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wlp (f a) P x)\n                         \\<le> (\\<Sum>a\\<in>supp (p x).\n                                  p x a * wlp (f a) Q x)", "from uP healthy"], ["proof (chain)\npicking this:\n  unitary P\n  ?a \\<in> supp (p ?s) \\<Longrightarrow> nearly_healthy (wlp (f ?a))", "have \"\\<And>a. a \\<in> supp (p s) \\<Longrightarrow> unitary (wlp (f a) P)\""], ["proof (prove)\nusing this:\n  unitary P\n  ?a \\<in> supp (p ?s) \\<Longrightarrow> nearly_healthy (wlp (f ?a))\n\ngoal (1 subgoal):\n 1. \\<And>a. a \\<in> supp (p s) \\<Longrightarrow> unitary (wlp (f a) P)", "by(auto)"], ["proof (state)\nthis:\n  ?a \\<in> supp (p s) \\<Longrightarrow> unitary (wlp (f ?a) P)\n\ngoal (3 subgoals):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       0 \\<le> (\\<Sum>a\\<in>supp (p x). p x a * wlp (f a) P x)\n 2. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       (\\<Sum>a\\<in>supp (p x). p x a * wlp (f a) P x) \\<le> 1\n 3. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wlp (f a) P x)\n                         \\<le> (\\<Sum>a\\<in>supp (p x).\n                                  p x a * wlp (f a) Q x)", "hence \"\\<And>a. a \\<in> supp (p s) \\<Longrightarrow> wlp (f a) P s \\<le> 1\""], ["proof (prove)\nusing this:\n  ?a \\<in> supp (p s) \\<Longrightarrow> unitary (wlp (f ?a) P)\n\ngoal (1 subgoal):\n 1. \\<And>a. a \\<in> supp (p s) \\<Longrightarrow> wlp (f a) P s \\<le> 1", "by(auto)"], ["proof (state)\nthis:\n  ?a \\<in> supp (p s) \\<Longrightarrow> wlp (f ?a) P s \\<le> 1\n\ngoal (3 subgoals):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       0 \\<le> (\\<Sum>a\\<in>supp (p x). p x a * wlp (f a) P x)\n 2. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       (\\<Sum>a\\<in>supp (p x). p x a * wlp (f a) P x) \\<le> 1\n 3. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wlp (f a) P x)\n                         \\<le> (\\<Sum>a\\<in>supp (p x).\n                                  p x a * wlp (f a) Q x)", "with sound"], ["proof (chain)\npicking this:\n  sound (p ?s)\n  ?a \\<in> supp (p s) \\<Longrightarrow> wlp (f ?a) P s \\<le> 1", "have \"(\\<Sum>a\\<in>supp (p s). p s a * wlp (f a) P s) \\<le> (\\<Sum>a\\<in>supp (p s). p s a * 1)\""], ["proof (prove)\nusing this:\n  sound (p ?s)\n  ?a \\<in> supp (p s) \\<Longrightarrow> wlp (f ?a) P s \\<le> 1\n\ngoal (1 subgoal):\n 1. (\\<Sum>a\\<in>supp (p s). p s a * wlp (f a) P s)\n    \\<le> (\\<Sum>a\\<in>supp (p s). p s a * 1)", "by(blast intro:sum_mono mult_left_mono)"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>supp (p s). p s a * wlp (f a) P s)\n  \\<le> (\\<Sum>a\\<in>supp (p s). p s a * 1)\n\ngoal (3 subgoals):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       0 \\<le> (\\<Sum>a\\<in>supp (p x). p x a * wlp (f a) P x)\n 2. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       (\\<Sum>a\\<in>supp (p x). p x a * wlp (f a) P x) \\<le> 1\n 3. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wlp (f a) P x)\n                         \\<le> (\\<Sum>a\\<in>supp (p x).\n                                  p x a * wlp (f a) Q x)", "also"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>supp (p s). p s a * wlp (f a) P s)\n  \\<le> (\\<Sum>a\\<in>supp (p s). p s a * 1)\n\ngoal (3 subgoals):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       0 \\<le> (\\<Sum>a\\<in>supp (p x). p x a * wlp (f a) P x)\n 2. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       (\\<Sum>a\\<in>supp (p x). p x a * wlp (f a) P x) \\<le> 1\n 3. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wlp (f a) P x)\n                         \\<le> (\\<Sum>a\\<in>supp (p x).\n                                  p x a * wlp (f a) Q x)", "have \"... = (\\<Sum>a\\<in>supp (p s). p s a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>a\\<in>supp (p s). p s a * 1) = sum (p s) (supp (p s))", "by(simp add:sum_distrib_right)"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>supp (p s). p s a * 1) = sum (p s) (supp (p s))\n\ngoal (3 subgoals):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       0 \\<le> (\\<Sum>a\\<in>supp (p x). p x a * wlp (f a) P x)\n 2. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       (\\<Sum>a\\<in>supp (p x). p x a * wlp (f a) P x) \\<le> 1\n 3. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wlp (f a) P x)\n                         \\<le> (\\<Sum>a\\<in>supp (p x).\n                                  p x a * wlp (f a) Q x)", "also"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>supp (p s). p s a * 1) = sum (p s) (supp (p s))\n\ngoal (3 subgoals):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       0 \\<le> (\\<Sum>a\\<in>supp (p x). p x a * wlp (f a) P x)\n 2. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       (\\<Sum>a\\<in>supp (p x). p x a * wlp (f a) P x) \\<le> 1\n 3. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wlp (f a) P x)\n                         \\<le> (\\<Sum>a\\<in>supp (p x).\n                                  p x a * wlp (f a) Q x)", "note sub_dist"], ["proof (state)\nthis:\n  sum (p ?s) (supp (p ?s)) \\<le> 1\n\ngoal (3 subgoals):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       0 \\<le> (\\<Sum>a\\<in>supp (p x). p x a * wlp (f a) P x)\n 2. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       (\\<Sum>a\\<in>supp (p x). p x a * wlp (f a) P x) \\<le> 1\n 3. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wlp (f a) P x)\n                         \\<le> (\\<Sum>a\\<in>supp (p x).\n                                  p x a * wlp (f a) Q x)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>a\\<in>supp (p s). p s a * wlp (f a) P s) \\<le> 1", "show \"(\\<Sum>a\\<in>supp (p s). p s a * wlp (f a) P s) \\<le> 1\""], ["proof (prove)\nusing this:\n  (\\<Sum>a\\<in>supp (p s). p s a * wlp (f a) P s) \\<le> 1\n\ngoal (1 subgoal):\n 1. (\\<Sum>a\\<in>supp (p s). p s a * wlp (f a) P s) \\<le> 1", "."], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>supp (p s). p s a * wlp (f a) P s) \\<le> 1\n\ngoal (2 subgoals):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       0 \\<le> (\\<Sum>a\\<in>supp (p x). p x a * wlp (f a) P x)\n 2. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wlp (f a) P x)\n                         \\<le> (\\<Sum>a\\<in>supp (p x).\n                                  p x a * wlp (f a) Q x)", "show \"0 \\<le> (\\<Sum>a\\<in>supp (p s). p s a * wlp (f a) P s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> (\\<Sum>a\\<in>supp (p s). p s a * wlp (f a) P s)", "proof(rule sum_nonneg [OF mult_nonneg_nonneg])"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a. a \\<in> supp (p s) \\<Longrightarrow> 0 \\<le> p s a\n 2. \\<And>a. a \\<in> supp (p s) \\<Longrightarrow> 0 \\<le> wlp (f a) P s", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a. a \\<in> supp (p s) \\<Longrightarrow> 0 \\<le> p s a\n 2. \\<And>a. a \\<in> supp (p s) \\<Longrightarrow> 0 \\<le> wlp (f a) P s", "from sound"], ["proof (chain)\npicking this:\n  sound (p ?s)", "show \"0 \\<le> p s x\""], ["proof (prove)\nusing this:\n  sound (p ?s)\n\ngoal (1 subgoal):\n 1. 0 \\<le> p s x", "by(blast)"], ["proof (state)\nthis:\n  0 \\<le> p s x\n\ngoal (1 subgoal):\n 1. \\<And>a. a \\<in> supp (p s) \\<Longrightarrow> 0 \\<le> wlp (f a) P s", "assume \"x \\<in> supp (p s)\""], ["proof (state)\nthis:\n  x \\<in> supp (p s)\n\ngoal (1 subgoal):\n 1. \\<And>a. a \\<in> supp (p s) \\<Longrightarrow> 0 \\<le> wlp (f a) P s", "with uP healthy"], ["proof (chain)\npicking this:\n  unitary P\n  ?a \\<in> supp (p ?s) \\<Longrightarrow> nearly_healthy (wlp (f ?a))\n  x \\<in> supp (p s)", "show \"0 \\<le> wlp (f x) P s\""], ["proof (prove)\nusing this:\n  unitary P\n  ?a \\<in> supp (p ?s) \\<Longrightarrow> nearly_healthy (wlp (f ?a))\n  x \\<in> supp (p s)\n\ngoal (1 subgoal):\n 1. 0 \\<le> wlp (f x) P s", "by(blast)"], ["proof (state)\nthis:\n  0 \\<le> wlp (f x) P s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  0 \\<le> (\\<Sum>a\\<in>supp (p s). p s a * wlp (f a) P s)\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wlp (f a) P x)\n                         \\<le> (\\<Sum>a\\<in>supp (p x).\n                                  p x a * wlp (f a) Q x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wlp (f a) P x)\n                         \\<le> (\\<Sum>a\\<in>supp (p x).\n                                  p x a * wlp (f a) Q x)", "fix P::\"'s expect\" and Q::\"'s expect\" and s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wlp (f a) P x)\n                         \\<le> (\\<Sum>a\\<in>supp (p x).\n                                  p x a * wlp (f a) Q x)", "assume uP: \"unitary P\" and uQ: \"unitary Q\" and le: \"P \\<tturnstile> Q\""], ["proof (state)\nthis:\n  unitary P\n  unitary Q\n  P \\<tturnstile> Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wlp (f a) P x)\n                         \\<le> (\\<Sum>a\\<in>supp (p x).\n                                  p x a * wlp (f a) Q x)", "hence \"\\<And>a. a \\<in> supp (p s) \\<Longrightarrow> wlp (f a) P s \\<le> wlp (f a) Q s\""], ["proof (prove)\nusing this:\n  unitary P\n  unitary Q\n  P \\<tturnstile> Q\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> supp (p s) \\<Longrightarrow>\n       wlp (f a) P s \\<le> wlp (f a) Q s", "by(blast intro:le_funD[OF nearly_healthy_monoD, OF healthy])"], ["proof (state)\nthis:\n  ?a \\<in> supp (p s) \\<Longrightarrow> wlp (f ?a) P s \\<le> wlp (f ?a) Q s\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> (\\<Sum>a\\<in>supp (p x). p x a * wlp (f a) P x)\n                         \\<le> (\\<Sum>a\\<in>supp (p x).\n                                  p x a * wlp (f a) Q x)", "with sound"], ["proof (chain)\npicking this:\n  sound (p ?s)\n  ?a \\<in> supp (p s) \\<Longrightarrow> wlp (f ?a) P s \\<le> wlp (f ?a) Q s", "show \"(\\<Sum>a\\<in>supp (p s). p s a * wlp (f a) P s) \\<le>\n                   (\\<Sum>a\\<in>supp (p s). p s a * wlp (f a) Q s)\""], ["proof (prove)\nusing this:\n  sound (p ?s)\n  ?a \\<in> supp (p s) \\<Longrightarrow> wlp (f ?a) P s \\<le> wlp (f ?a) Q s\n\ngoal (1 subgoal):\n 1. (\\<Sum>a\\<in>supp (p s). p s a * wlp (f a) P s)\n    \\<le> (\\<Sum>a\\<in>supp (p s). p s a * wlp (f a) Q s)", "by(blast intro:sum_mono mult_left_mono)"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>supp (p s). p s a * wlp (f a) P s)\n  \\<le> (\\<Sum>a\\<in>supp (p s). p s a * wlp (f a) Q s)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma healthy_wp_Apply:\n  \"healthy (wp (Apply f))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. healthy (wp (Apply f))", "unfolding Apply_def wp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. healthy (\\<lambda>P s. P (f s))", "by(blast)"], ["", "lemma nearly_healthy_wlp_Apply:\n  \"nearly_healthy (wlp (Apply f))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nearly_healthy (wlp (Apply f))", "by(intro nearly_healthyI unitaryI2 nnegI bounded_byI, auto simp:o_def wp_eval)"], ["", "lemma healthy_wp_Bind:\n  fixes f::\"'s \\<Rightarrow> 'a\"\n  assumes hsub: \"\\<And>s. healthy (wp (p (f s)))\"\n  shows \"healthy (wp (Bind f p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. healthy (wp (Bind f p))", "proof(intro healthy_parts nnegI bounded_byI le_funI, simp_all only:wp_eval)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> wp (p (f x)) P x \\<le> b\n 2. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wp (p (f x)) P x\n 3. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wp (p (f x)) P x \\<le> wp (p (f x)) Q x\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * wp (p (f x)) P x =\n                         wp (p (f x)) (\\<lambda>x. c * P x) x", "fix b and P::\"'s expect\" and s::'s"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> wp (p (f x)) P x \\<le> b\n 2. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wp (p (f x)) P x\n 3. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wp (p (f x)) P x \\<le> wp (p (f x)) Q x\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * wp (p (f x)) P x =\n                         wp (p (f x)) (\\<lambda>x. c * P x) x", "assume bP: \"bounded_by b P\" and nP: \"nneg P\""], ["proof (state)\nthis:\n  bounded_by b P\n  nneg P\n\ngoal (4 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> wp (p (f x)) P x \\<le> b\n 2. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wp (p (f x)) P x\n 3. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wp (p (f x)) P x \\<le> wp (p (f x)) Q x\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * wp (p (f x)) P x =\n                         wp (p (f x)) (\\<lambda>x. c * P x) x", "with hsub"], ["proof (chain)\npicking this:\n  healthy (wp (p (f ?s)))\n  bounded_by b P\n  nneg P", "have \"bounded_by b (wp (p (f s)) P)\""], ["proof (prove)\nusing this:\n  healthy (wp (p (f ?s)))\n  bounded_by b P\n  nneg P\n\ngoal (1 subgoal):\n 1. bounded_by b (wp (p (f s)) P)", "by(auto)"], ["proof (state)\nthis:\n  bounded_by b (wp (p (f s)) P)\n\ngoal (4 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> wp (p (f x)) P x \\<le> b\n 2. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wp (p (f x)) P x\n 3. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wp (p (f x)) P x \\<le> wp (p (f x)) Q x\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * wp (p (f x)) P x =\n                         wp (p (f x)) (\\<lambda>x. c * P x) x", "thus \"wp (p (f s)) P s \\<le> b\""], ["proof (prove)\nusing this:\n  bounded_by b (wp (p (f s)) P)\n\ngoal (1 subgoal):\n 1. wp (p (f s)) P s \\<le> b", "by(auto)"], ["proof (state)\nthis:\n  wp (p (f s)) P s \\<le> b\n\ngoal (3 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wp (p (f x)) P x\n 2. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wp (p (f x)) P x \\<le> wp (p (f x)) Q x\n 3. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * wp (p (f x)) P x =\n                         wp (p (f x)) (\\<lambda>x. c * P x) x", "from bP nP hsub"], ["proof (chain)\npicking this:\n  bounded_by b P\n  nneg P\n  healthy (wp (p (f ?s)))", "have \"nneg (wp (p (f s)) P)\""], ["proof (prove)\nusing this:\n  bounded_by b P\n  nneg P\n  healthy (wp (p (f ?s)))\n\ngoal (1 subgoal):\n 1. nneg (wp (p (f s)) P)", "by(auto)"], ["proof (state)\nthis:\n  nneg (wp (p (f s)) P)\n\ngoal (3 subgoals):\n 1. \\<And>b P x.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> wp (p (f x)) P x\n 2. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wp (p (f x)) P x \\<le> wp (p (f x)) Q x\n 3. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * wp (p (f x)) P x =\n                         wp (p (f x)) (\\<lambda>x. c * P x) x", "thus \"0 \\<le> wp (p (f s)) P s\""], ["proof (prove)\nusing this:\n  nneg (wp (p (f s)) P)\n\ngoal (1 subgoal):\n 1. 0 \\<le> wp (p (f s)) P s", "by(auto)"], ["proof (state)\nthis:\n  0 \\<le> wp (p (f s)) P s\n\ngoal (2 subgoals):\n 1. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wp (p (f x)) P x \\<le> wp (p (f x)) Q x\n 2. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * wp (p (f x)) P x =\n                         wp (p (f x)) (\\<lambda>x. c * P x) x", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wp (p (f x)) P x \\<le> wp (p (f x)) Q x\n 2. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * wp (p (f x)) P x =\n                         wp (p (f x)) (\\<lambda>x. c * P x) x", "fix P Q::\"'s expect\" and s::'s"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wp (p (f x)) P x \\<le> wp (p (f x)) Q x\n 2. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * wp (p (f x)) P x =\n                         wp (p (f x)) (\\<lambda>x. c * P x) x", "assume \"sound P\" \"sound Q\" \"P \\<tturnstile> Q\""], ["proof (state)\nthis:\n  sound P\n  sound Q\n  P \\<tturnstile> Q\n\ngoal (2 subgoals):\n 1. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wp (p (f x)) P x \\<le> wp (p (f x)) Q x\n 2. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * wp (p (f x)) P x =\n                         wp (p (f x)) (\\<lambda>x. c * P x) x", "thus \"wp (p (f s)) P s \\<le> wp (p (f s)) Q s\""], ["proof (prove)\nusing this:\n  sound P\n  sound Q\n  P \\<tturnstile> Q\n\ngoal (1 subgoal):\n 1. wp (p (f s)) P s \\<le> wp (p (f s)) Q s", "by(rule le_funD[OF mono_transD, OF healthy_monoD, OF hsub])"], ["proof (state)\nthis:\n  wp (p (f s)) P s \\<le> wp (p (f s)) Q s\n\ngoal (1 subgoal):\n 1. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * wp (p (f x)) P x =\n                         wp (p (f x)) (\\<lambda>x. c * P x) x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * wp (p (f x)) P x =\n                         wp (p (f x)) (\\<lambda>x. c * P x) x", "fix P::\"'s expect\" and c::real and s::'s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * wp (p (f x)) P x =\n                         wp (p (f x)) (\\<lambda>x. c * P x) x", "assume \"sound P\" and \"0 \\<le> c\""], ["proof (state)\nthis:\n  sound P\n  0 \\<le> c\n\ngoal (1 subgoal):\n 1. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c * wp (p (f x)) P x =\n                         wp (p (f x)) (\\<lambda>x. c * P x) x", "thus \"c * wp (p (f s)) P s = wp (p (f s)) (\\<lambda>s. c * P s) s\""], ["proof (prove)\nusing this:\n  sound P\n  0 \\<le> c\n\ngoal (1 subgoal):\n 1. c * wp (p (f s)) P s = wp (p (f s)) (\\<lambda>s. c * P s) s", "by(simp add:scalingD[OF healthy_scalingD, OF hsub])"], ["proof (state)\nthis:\n  c * wp (p (f s)) P s = wp (p (f s)) (\\<lambda>s. c * P s) s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nearly_healthy_wlp_Bind:\n  fixes f::\"'s \\<Rightarrow> 'a\"\n  assumes hsub: \"\\<And>s. nearly_healthy (wlp (p (f s)))\"\n  shows \"nearly_healthy (wlp (Bind f p))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nearly_healthy (wlp (Bind f p))", "proof(intro nearly_healthyI unitaryI2 nnegI bounded_byI le_funI, simp_all only:wp_eval)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>P x. unitary P \\<Longrightarrow> 0 \\<le> wlp (p (f x)) P x\n 2. \\<And>P x. unitary P \\<Longrightarrow> wlp (p (f x)) P x \\<le> 1\n 3. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wlp (p (f x)) P x \\<le> wlp (p (f x)) Q x", "fix P::\"'s expect\" and s::'s"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>P x. unitary P \\<Longrightarrow> 0 \\<le> wlp (p (f x)) P x\n 2. \\<And>P x. unitary P \\<Longrightarrow> wlp (p (f x)) P x \\<le> 1\n 3. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wlp (p (f x)) P x \\<le> wlp (p (f x)) Q x", "assume uP: \"unitary P\""], ["proof (state)\nthis:\n  unitary P\n\ngoal (3 subgoals):\n 1. \\<And>P x. unitary P \\<Longrightarrow> 0 \\<le> wlp (p (f x)) P x\n 2. \\<And>P x. unitary P \\<Longrightarrow> wlp (p (f x)) P x \\<le> 1\n 3. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wlp (p (f x)) P x \\<le> wlp (p (f x)) Q x", "with hsub"], ["proof (chain)\npicking this:\n  nearly_healthy (wlp (p (f ?s)))\n  unitary P", "have \"unitary (wlp (p (f s)) P)\""], ["proof (prove)\nusing this:\n  nearly_healthy (wlp (p (f ?s)))\n  unitary P\n\ngoal (1 subgoal):\n 1. unitary (wlp (p (f s)) P)", "by(auto)"], ["proof (state)\nthis:\n  unitary (wlp (p (f s)) P)\n\ngoal (3 subgoals):\n 1. \\<And>P x. unitary P \\<Longrightarrow> 0 \\<le> wlp (p (f x)) P x\n 2. \\<And>P x. unitary P \\<Longrightarrow> wlp (p (f x)) P x \\<le> 1\n 3. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wlp (p (f x)) P x \\<le> wlp (p (f x)) Q x", "thus \"0 \\<le> wlp (p (f s)) P s\" \"wlp (p (f s)) P s \\<le> 1\""], ["proof (prove)\nusing this:\n  unitary (wlp (p (f s)) P)\n\ngoal (1 subgoal):\n 1. 0 \\<le> wlp (p (f s)) P s &&& wlp (p (f s)) P s \\<le> 1", "by(auto)"], ["proof (state)\nthis:\n  0 \\<le> wlp (p (f s)) P s\n  wlp (p (f s)) P s \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wlp (p (f x)) P x \\<le> wlp (p (f x)) Q x", "fix Q::\"'s expect\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wlp (p (f x)) P x \\<le> wlp (p (f x)) Q x", "assume \"unitary Q\" \"P \\<tturnstile> Q\""], ["proof (state)\nthis:\n  unitary Q\n  P \\<tturnstile> Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> wlp (p (f x)) P x \\<le> wlp (p (f x)) Q x", "with uP"], ["proof (chain)\npicking this:\n  unitary P\n  unitary Q\n  P \\<tturnstile> Q", "show \"wlp (p (f s)) P s \\<le> wlp (p (f s)) Q s\""], ["proof (prove)\nusing this:\n  unitary P\n  unitary Q\n  P \\<tturnstile> Q\n\ngoal (1 subgoal):\n 1. wlp (p (f s)) P s \\<le> wlp (p (f s)) Q s", "by(blast intro:le_funD[OF nearly_healthy_monoD, OF hsub])"], ["proof (state)\nthis:\n  wlp (p (f s)) P s \\<le> wlp (p (f s)) Q s\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Healthiness for Loops\\<close>"], ["", "lemma wp_loop_step_mono:\n  fixes t u::\"'s trans\"\n  assumes hb: \"healthy (wp body)\"\n      and le: \"le_trans t u\"\n      and ht: \"\\<And>P. sound P \\<Longrightarrow> sound (t P)\"\n      and hu: \"\\<And>P. sound P \\<Longrightarrow> sound (u P)\"\n  shows \"le_trans (wp (body ;; Embed t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                  (wp (body ;; Embed u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. le_trans\n     (wp (body ;;\n          Embed\n           t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     (wp (body ;;\n          Embed\n           u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "proof(intro le_transI le_funI, simp add:wp_eval)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P x.\n       sound P \\<Longrightarrow>\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t P) x\n       \\<le> \\<guillemotleft> G \\<guillemotright> x * wp body (u P) x", "fix P::\"'s expect\" and s::'s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P x.\n       sound P \\<Longrightarrow>\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t P) x\n       \\<le> \\<guillemotleft> G \\<guillemotright> x * wp body (u P) x", "assume sP: \"sound P\""], ["proof (state)\nthis:\n  sound P\n\ngoal (1 subgoal):\n 1. \\<And>P x.\n       sound P \\<Longrightarrow>\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t P) x\n       \\<le> \\<guillemotleft> G \\<guillemotright> x * wp body (u P) x", "with le"], ["proof (chain)\npicking this:\n  le_trans t u\n  sound P", "have \"t P \\<tturnstile> u P\""], ["proof (prove)\nusing this:\n  le_trans t u\n  sound P\n\ngoal (1 subgoal):\n 1. t P \\<tturnstile> u P", "by(auto)"], ["proof (state)\nthis:\n  t P \\<tturnstile> u P\n\ngoal (1 subgoal):\n 1. \\<And>P x.\n       sound P \\<Longrightarrow>\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t P) x\n       \\<le> \\<guillemotleft> G \\<guillemotright> x * wp body (u P) x", "moreover"], ["proof (state)\nthis:\n  t P \\<tturnstile> u P\n\ngoal (1 subgoal):\n 1. \\<And>P x.\n       sound P \\<Longrightarrow>\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t P) x\n       \\<le> \\<guillemotleft> G \\<guillemotright> x * wp body (u P) x", "from sP ht hu"], ["proof (chain)\npicking this:\n  sound P\n  sound ?P \\<Longrightarrow> sound (t ?P)\n  sound ?P \\<Longrightarrow> sound (u ?P)", "have \"sound (t P)\" \"sound (u P)\""], ["proof (prove)\nusing this:\n  sound P\n  sound ?P \\<Longrightarrow> sound (t ?P)\n  sound ?P \\<Longrightarrow> sound (u ?P)\n\ngoal (1 subgoal):\n 1. sound (t P) &&& sound (u P)", "by(auto)"], ["proof (state)\nthis:\n  sound (t P)\n  sound (u P)\n\ngoal (1 subgoal):\n 1. \\<And>P x.\n       sound P \\<Longrightarrow>\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t P) x\n       \\<le> \\<guillemotleft> G \\<guillemotright> x * wp body (u P) x", "ultimately"], ["proof (chain)\npicking this:\n  t P \\<tturnstile> u P\n  sound (t P)\n  sound (u P)", "have \"wp body (t P) s \\<le> wp body (u P) s\""], ["proof (prove)\nusing this:\n  t P \\<tturnstile> u P\n  sound (t P)\n  sound (u P)\n\ngoal (1 subgoal):\n 1. wp body (t P) s \\<le> wp body (u P) s", "by(auto intro:le_funD[OF mono_transD, OF healthy_monoD, OF hb])"], ["proof (state)\nthis:\n  wp body (t P) s \\<le> wp body (u P) s\n\ngoal (1 subgoal):\n 1. \\<And>P x.\n       sound P \\<Longrightarrow>\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t P) x\n       \\<le> \\<guillemotleft> G \\<guillemotright> x * wp body (u P) x", "thus \"\\<guillemotleft>G\\<guillemotright> s * wp body (t P) s \\<le> \\<guillemotleft>G\\<guillemotright> s * wp body (u P) s \""], ["proof (prove)\nusing this:\n  wp body (t P) s \\<le> wp body (u P) s\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wp body (t P) s\n    \\<le> \\<guillemotleft> G \\<guillemotright> s * wp body (u P) s", "by(auto intro:mult_left_mono)"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wp body (t P) s\n  \\<le> \\<guillemotleft> G \\<guillemotright> s * wp body (u P) s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wlp_loop_step_mono:\n  fixes t u::\"'s trans\"\n  assumes mb: \"nearly_healthy (wlp body)\"\n      and le: \"le_utrans t u\"\n      and ht: \"\\<And>P. unitary P \\<Longrightarrow> unitary (t P)\"\n      and hu: \"\\<And>P. unitary P \\<Longrightarrow> unitary (u P)\"\n  shows \"le_utrans (wlp (body ;; Embed t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                   (wlp (body ;; Embed u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. le_utrans\n     (wlp (body ;;\n           Embed\n            t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     (wlp (body ;;\n           Embed\n            u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "proof(intro le_utransI le_funI, simp add:wp_eval)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       \\<guillemotleft> G \\<guillemotright> x * wlp body (t P) x\n       \\<le> \\<guillemotleft> G \\<guillemotright> x * wlp body (u P) x", "fix P::\"'s expect\" and s::'s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       \\<guillemotleft> G \\<guillemotright> x * wlp body (t P) x\n       \\<le> \\<guillemotleft> G \\<guillemotright> x * wlp body (u P) x", "assume uP: \"unitary P\""], ["proof (state)\nthis:\n  unitary P\n\ngoal (1 subgoal):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       \\<guillemotleft> G \\<guillemotright> x * wlp body (t P) x\n       \\<le> \\<guillemotleft> G \\<guillemotright> x * wlp body (u P) x", "with le"], ["proof (chain)\npicking this:\n  le_utrans t u\n  unitary P", "have \"t P \\<tturnstile> u P\""], ["proof (prove)\nusing this:\n  le_utrans t u\n  unitary P\n\ngoal (1 subgoal):\n 1. t P \\<tturnstile> u P", "by(auto)"], ["proof (state)\nthis:\n  t P \\<tturnstile> u P\n\ngoal (1 subgoal):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       \\<guillemotleft> G \\<guillemotright> x * wlp body (t P) x\n       \\<le> \\<guillemotleft> G \\<guillemotright> x * wlp body (u P) x", "moreover"], ["proof (state)\nthis:\n  t P \\<tturnstile> u P\n\ngoal (1 subgoal):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       \\<guillemotleft> G \\<guillemotright> x * wlp body (t P) x\n       \\<le> \\<guillemotleft> G \\<guillemotright> x * wlp body (u P) x", "from uP ht hu"], ["proof (chain)\npicking this:\n  unitary P\n  unitary ?P \\<Longrightarrow> unitary (t ?P)\n  unitary ?P \\<Longrightarrow> unitary (u ?P)", "have \"unitary (t P)\" \"unitary (u P)\""], ["proof (prove)\nusing this:\n  unitary P\n  unitary ?P \\<Longrightarrow> unitary (t ?P)\n  unitary ?P \\<Longrightarrow> unitary (u ?P)\n\ngoal (1 subgoal):\n 1. unitary (t P) &&& unitary (u P)", "by(auto)"], ["proof (state)\nthis:\n  unitary (t P)\n  unitary (u P)\n\ngoal (1 subgoal):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       \\<guillemotleft> G \\<guillemotright> x * wlp body (t P) x\n       \\<le> \\<guillemotleft> G \\<guillemotright> x * wlp body (u P) x", "ultimately"], ["proof (chain)\npicking this:\n  t P \\<tturnstile> u P\n  unitary (t P)\n  unitary (u P)", "have \"wlp body (t P) s \\<le> wlp body (u P) s\""], ["proof (prove)\nusing this:\n  t P \\<tturnstile> u P\n  unitary (t P)\n  unitary (u P)\n\ngoal (1 subgoal):\n 1. wlp body (t P) s \\<le> wlp body (u P) s", "by(rule le_funD[OF nearly_healthy_monoD[OF mb]])"], ["proof (state)\nthis:\n  wlp body (t P) s \\<le> wlp body (u P) s\n\ngoal (1 subgoal):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       \\<guillemotleft> G \\<guillemotright> x * wlp body (t P) x\n       \\<le> \\<guillemotleft> G \\<guillemotright> x * wlp body (u P) x", "thus \"\\<guillemotleft>G\\<guillemotright> s * wlp body (t P) s \\<le> \\<guillemotleft>G\\<guillemotright> s * wlp body (u P) s \""], ["proof (prove)\nusing this:\n  wlp body (t P) s \\<le> wlp body (u P) s\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wlp body (t P) s\n    \\<le> \\<guillemotleft> G \\<guillemotright> s * wlp body (u P) s", "by(auto intro:mult_left_mono)"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wlp body (t P) s\n  \\<le> \\<guillemotleft> G \\<guillemotright> s * wlp body (u P) s\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>For each sound expectation, we have a pre fixed point of the loop body.\nThis lets us use the relevant fixed-point lemmas.\\<close>"], ["", "lemma lfp_loop_fp:\n  assumes hb: \"healthy (wp body)\"\n      and sP: \"sound P\"\n  shows \"\\<lambda>s. \\<guillemotleft>G\\<guillemotright> s * wp body (\\<lambda>s. bound_of P) s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s \\<tturnstile> \\<lambda>s. bound_of P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lambda>s.\n       \\<guillemotleft> G \\<guillemotright> s *\n       wp body (\\<lambda>s. bound_of P) s +\n       \\<guillemotleft> \\<N> G \\<guillemotright> s *\n       P s \\<tturnstile> \\<lambda>s. bound_of P", "proof(rule le_funI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x *\n       wp body (\\<lambda>s. bound_of P) x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> bound_of P", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x *\n       wp body (\\<lambda>s. bound_of P) x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> bound_of P", "from sP"], ["proof (chain)\npicking this:\n  sound P", "have \"sound (\\<lambda>s. bound_of P)\""], ["proof (prove)\nusing this:\n  sound P\n\ngoal (1 subgoal):\n 1. sound (\\<lambda>s. bound_of P)", "by(auto)"], ["proof (state)\nthis:\n  sound (\\<lambda>s. bound_of P)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x *\n       wp body (\\<lambda>s. bound_of P) x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> bound_of P", "moreover"], ["proof (state)\nthis:\n  sound (\\<lambda>s. bound_of P)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x *\n       wp body (\\<lambda>s. bound_of P) x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> bound_of P", "hence \"bounded_by (bound_of P) (\\<lambda>s. bound_of P)\""], ["proof (prove)\nusing this:\n  sound (\\<lambda>s. bound_of P)\n\ngoal (1 subgoal):\n 1. bounded_by (bound_of P) (\\<lambda>s. bound_of P)", "by(auto)"], ["proof (state)\nthis:\n  bounded_by (bound_of P) (\\<lambda>s. bound_of P)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x *\n       wp body (\\<lambda>s. bound_of P) x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> bound_of P", "ultimately"], ["proof (chain)\npicking this:\n  sound (\\<lambda>s. bound_of P)\n  bounded_by (bound_of P) (\\<lambda>s. bound_of P)", "have \"bounded_by (bound_of P) (wp body (\\<lambda>s. bound_of P))\""], ["proof (prove)\nusing this:\n  sound (\\<lambda>s. bound_of P)\n  bounded_by (bound_of P) (\\<lambda>s. bound_of P)\n\ngoal (1 subgoal):\n 1. bounded_by (bound_of P) (wp body (\\<lambda>s. bound_of P))", "using hb"], ["proof (prove)\nusing this:\n  sound (\\<lambda>s. bound_of P)\n  bounded_by (bound_of P) (\\<lambda>s. bound_of P)\n  healthy (wp body)\n\ngoal (1 subgoal):\n 1. bounded_by (bound_of P) (wp body (\\<lambda>s. bound_of P))", "by(auto)"], ["proof (state)\nthis:\n  bounded_by (bound_of P) (wp body (\\<lambda>s. bound_of P))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x *\n       wp body (\\<lambda>s. bound_of P) x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> bound_of P", "hence \"wp body (\\<lambda>s. bound_of P) s \\<le> bound_of P\""], ["proof (prove)\nusing this:\n  bounded_by (bound_of P) (wp body (\\<lambda>s. bound_of P))\n\ngoal (1 subgoal):\n 1. wp body (\\<lambda>s. bound_of P) s \\<le> bound_of P", "by(auto)"], ["proof (state)\nthis:\n  wp body (\\<lambda>s. bound_of P) s \\<le> bound_of P\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x *\n       wp body (\\<lambda>s. bound_of P) x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> bound_of P", "moreover"], ["proof (state)\nthis:\n  wp body (\\<lambda>s. bound_of P) s \\<le> bound_of P\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x *\n       wp body (\\<lambda>s. bound_of P) x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> bound_of P", "from sP"], ["proof (chain)\npicking this:\n  sound P", "have \"P s \\<le> bound_of P\""], ["proof (prove)\nusing this:\n  sound P\n\ngoal (1 subgoal):\n 1. P s \\<le> bound_of P", "by(auto)"], ["proof (state)\nthis:\n  P s \\<le> bound_of P\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x *\n       wp body (\\<lambda>s. bound_of P) x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> bound_of P", "ultimately"], ["proof (chain)\npicking this:\n  wp body (\\<lambda>s. bound_of P) s \\<le> bound_of P\n  P s \\<le> bound_of P", "have \"\\<guillemotleft>G\\<guillemotright> s * wp body (\\<lambda>a. bound_of P) s + (1 - \\<guillemotleft>G\\<guillemotright> s) * P s \\<le>\n                   \\<guillemotleft>G\\<guillemotright> s * bound_of P + (1 - \\<guillemotleft>G\\<guillemotright> s) * bound_of P\""], ["proof (prove)\nusing this:\n  wp body (\\<lambda>s. bound_of P) s \\<le> bound_of P\n  P s \\<le> bound_of P\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s *\n    wp body (\\<lambda>a. bound_of P) s +\n    (1 - \\<guillemotleft> G \\<guillemotright> s) * P s\n    \\<le> \\<guillemotleft> G \\<guillemotright> s * bound_of P +\n          (1 - \\<guillemotleft> G \\<guillemotright> s) * bound_of P", "by(blast intro:add_mono mult_left_mono)"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s *\n  wp body (\\<lambda>a. bound_of P) s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * P s\n  \\<le> \\<guillemotleft> G \\<guillemotright> s * bound_of P +\n        (1 - \\<guillemotleft> G \\<guillemotright> s) * bound_of P\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x *\n       wp body (\\<lambda>s. bound_of P) x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> bound_of P", "thus \"\\<guillemotleft>G\\<guillemotright> s * wp body (\\<lambda>a. bound_of P) s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s \\<le> bound_of P\""], ["proof (prove)\nusing this:\n  \\<guillemotleft> G \\<guillemotright> s *\n  wp body (\\<lambda>a. bound_of P) s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * P s\n  \\<le> \\<guillemotleft> G \\<guillemotright> s * bound_of P +\n        (1 - \\<guillemotleft> G \\<guillemotright> s) * bound_of P\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s *\n    wp body (\\<lambda>a. bound_of P) s +\n    \\<guillemotleft> \\<N> G \\<guillemotright> s * P s\n    \\<le> bound_of P", "by(simp add:algebra_simps negate_embed)"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s *\n  wp body (\\<lambda>a. bound_of P) s +\n  \\<guillemotleft> \\<N> G \\<guillemotright> s * P s\n  \\<le> bound_of P\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lfp_loop_greatest:\n  fixes P::\"'s expect\"\n  assumes lb: \"\\<And>R. \\<lambda>s. \\<guillemotleft>G\\<guillemotright> s * wp body R s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s \\<tturnstile> R \\<Longrightarrow> sound R \\<Longrightarrow> Q \\<tturnstile> R\"\n      and hb: \"healthy (wp body)\"\n      and sP: \"sound P\"\n      and sQ: \"sound Q\"\n  shows \"Q \\<tturnstile> lfp_exp (\\<lambda>Q s. \\<guillemotleft>G\\<guillemotright> s * wp body Q s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q \\<tturnstile> lfp_exp\n                     (\\<lambda>Q s.\n                         \\<guillemotleft> G \\<guillemotright> s *\n                         wp body Q s +\n                         \\<guillemotleft> \\<N> G \\<guillemotright> s * P s)", "using sP"], ["proof (prove)\nusing this:\n  sound P\n\ngoal (1 subgoal):\n 1. Q \\<tturnstile> lfp_exp\n                     (\\<lambda>Q s.\n                         \\<guillemotleft> G \\<guillemotright> s *\n                         wp body Q s +\n                         \\<guillemotleft> \\<N> G \\<guillemotright> s * P s)", "by(auto intro!:lfp_exp_greatest[OF lb sQ] sP lfp_loop_fp hb)"], ["", "lemma lfp_loop_sound:\n  fixes P::\"'s expect\"\n  assumes hb: \"healthy (wp body)\"\n      and sP: \"sound P\"\n  shows \"sound (lfp_exp (\\<lambda>Q s. \\<guillemotleft>G\\<guillemotright> s * wp body Q s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sound\n     (lfp_exp\n       (\\<lambda>Q s.\n           \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n           \\<guillemotleft> \\<N> G \\<guillemotright> s * P s))", "using assms"], ["proof (prove)\nusing this:\n  healthy (wp body)\n  sound P\n\ngoal (1 subgoal):\n 1. sound\n     (lfp_exp\n       (\\<lambda>Q s.\n           \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n           \\<guillemotleft> \\<N> G \\<guillemotright> s * P s))", "by(auto intro!:lfp_exp_sound lfp_loop_fp)"], ["", "lemma wlp_loop_step_unitary:\n  fixes t u::\"'s trans\"\n  assumes hb: \"nearly_healthy (wlp body)\"\n      and ht: \"\\<And>P. unitary P \\<Longrightarrow> unitary (t P)\"\n      and uP: \"unitary P\"\n  shows \"unitary (wlp (body ;; Embed t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. unitary\n     (wlp (body ;;\n           Embed\n            t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n       P)", "proof(intro unitaryI2 nnegI bounded_byI, simp_all add:wp_eval)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       0 \\<le> \\<guillemotleft> G \\<guillemotright> x * wlp body (t P) x +\n               (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n 2. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wlp body (t P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n       \\<le> 1", "fix s::'s"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       0 \\<le> \\<guillemotleft> G \\<guillemotright> x * wlp body (t P) x +\n               (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n 2. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wlp body (t P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n       \\<le> 1", "from ht uP"], ["proof (chain)\npicking this:\n  unitary ?P \\<Longrightarrow> unitary (t ?P)\n  unitary P", "have utP: \"unitary (t P)\""], ["proof (prove)\nusing this:\n  unitary ?P \\<Longrightarrow> unitary (t ?P)\n  unitary P\n\ngoal (1 subgoal):\n 1. unitary (t P)", "by(auto)"], ["proof (state)\nthis:\n  unitary (t P)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       0 \\<le> \\<guillemotleft> G \\<guillemotright> x * wlp body (t P) x +\n               (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n 2. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wlp body (t P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n       \\<le> 1", "with hb"], ["proof (chain)\npicking this:\n  nearly_healthy (wlp body)\n  unitary (t P)", "have \"unitary (wlp body (t P))\""], ["proof (prove)\nusing this:\n  nearly_healthy (wlp body)\n  unitary (t P)\n\ngoal (1 subgoal):\n 1. unitary (wlp body (t P))", "by(auto)"], ["proof (state)\nthis:\n  unitary (wlp body (t P))\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       0 \\<le> \\<guillemotleft> G \\<guillemotright> x * wlp body (t P) x +\n               (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n 2. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wlp body (t P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n       \\<le> 1", "hence \"0 \\<le> wlp body (t P) s\""], ["proof (prove)\nusing this:\n  unitary (wlp body (t P))\n\ngoal (1 subgoal):\n 1. 0 \\<le> wlp body (t P) s", "by(auto)"], ["proof (state)\nthis:\n  0 \\<le> wlp body (t P) s\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       0 \\<le> \\<guillemotleft> G \\<guillemotright> x * wlp body (t P) x +\n               (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n 2. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wlp body (t P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n       \\<le> 1", "with uP"], ["proof (chain)\npicking this:\n  unitary P\n  0 \\<le> wlp body (t P) s", "show \"0 \\<le> \\<guillemotleft> G \\<guillemotright> s * wlp body (t P) s + (1 - \\<guillemotleft> G \\<guillemotright> s) * P s\""], ["proof (prove)\nusing this:\n  unitary P\n  0 \\<le> wlp body (t P) s\n\ngoal (1 subgoal):\n 1. 0 \\<le> \\<guillemotleft> G \\<guillemotright> s * wlp body (t P) s +\n            (1 - \\<guillemotleft> G \\<guillemotright> s) * P s", "by(auto intro!:add_nonneg_nonneg mult_nonneg_nonneg)"], ["proof (state)\nthis:\n  0 \\<le> \\<guillemotleft> G \\<guillemotright> s * wlp body (t P) s +\n          (1 - \\<guillemotleft> G \\<guillemotright> s) * P s\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wlp body (t P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n       \\<le> 1", "from ht uP"], ["proof (chain)\npicking this:\n  unitary ?P \\<Longrightarrow> unitary (t ?P)\n  unitary P", "have \"bounded_by 1 (t P)\""], ["proof (prove)\nusing this:\n  unitary ?P \\<Longrightarrow> unitary (t ?P)\n  unitary P\n\ngoal (1 subgoal):\n 1. bounded_by 1 (t P)", "by(auto)"], ["proof (state)\nthis:\n  bounded_by 1 (t P)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wlp body (t P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n       \\<le> 1", "with utP hb"], ["proof (chain)\npicking this:\n  unitary (t P)\n  nearly_healthy (wlp body)\n  bounded_by 1 (t P)", "have \"bounded_by 1 (wlp body (t P))\""], ["proof (prove)\nusing this:\n  unitary (t P)\n  nearly_healthy (wlp body)\n  bounded_by 1 (t P)\n\ngoal (1 subgoal):\n 1. bounded_by 1 (wlp body (t P))", "by(auto)"], ["proof (state)\nthis:\n  bounded_by 1 (wlp body (t P))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wlp body (t P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n       \\<le> 1", "hence \"wlp body (t P) s \\<le> 1\""], ["proof (prove)\nusing this:\n  bounded_by 1 (wlp body (t P))\n\ngoal (1 subgoal):\n 1. wlp body (t P) s \\<le> 1", "by(auto)"], ["proof (state)\nthis:\n  wlp body (t P) s \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wlp body (t P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n       \\<le> 1", "with uP"], ["proof (chain)\npicking this:\n  unitary P\n  wlp body (t P) s \\<le> 1", "have \"\\<guillemotleft>G\\<guillemotright> s * wlp body (t P) s + (1 - \\<guillemotleft>G\\<guillemotright> s) * P s \\<le> \\<guillemotleft>G\\<guillemotright> s * 1 + (1 - \\<guillemotleft>G\\<guillemotright> s) * 1\""], ["proof (prove)\nusing this:\n  unitary P\n  wlp body (t P) s \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wlp body (t P) s +\n    (1 - \\<guillemotleft> G \\<guillemotright> s) * P s\n    \\<le> \\<guillemotleft> G \\<guillemotright> s * 1 +\n          (1 - \\<guillemotleft> G \\<guillemotright> s) * 1", "by(blast intro:add_mono mult_left_mono)"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wlp body (t P) s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * P s\n  \\<le> \\<guillemotleft> G \\<guillemotright> s * 1 +\n        (1 - \\<guillemotleft> G \\<guillemotright> s) * 1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wlp body (t P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n       \\<le> 1", "also"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wlp body (t P) s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * P s\n  \\<le> \\<guillemotleft> G \\<guillemotright> s * 1 +\n        (1 - \\<guillemotleft> G \\<guillemotright> s) * 1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wlp body (t P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n       \\<le> 1", "have \"... = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * 1 +\n    (1 - \\<guillemotleft> G \\<guillemotright> s) * 1 =\n    1", "by(simp)"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * 1 +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * 1 =\n  1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wlp body (t P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n       \\<le> 1", "finally"], ["proof (chain)\npicking this:\n  \\<guillemotleft> G \\<guillemotright> s * wlp body (t P) s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * P s\n  \\<le> 1", "show \"\\<guillemotleft>G\\<guillemotright> s * wlp body (t P) s + (1 - \\<guillemotleft>G\\<guillemotright> s) * P s \\<le> 1\""], ["proof (prove)\nusing this:\n  \\<guillemotleft> G \\<guillemotright> s * wlp body (t P) s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * P s\n  \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wlp body (t P) s +\n    (1 - \\<guillemotleft> G \\<guillemotright> s) * P s\n    \\<le> 1", "."], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wlp body (t P) s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * P s\n  \\<le> 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wp_loop_step_sound:\n  fixes t u::\"'s trans\"\n  assumes hb: \"healthy (wp body)\"\n      and ht: \"\\<And>P. sound P \\<Longrightarrow> sound (t P)\"\n      and sP: \"sound P\"\n  shows \"sound (wp (body ;; Embed t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sound\n     (wp (body ;;\n          Embed\n           t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n       P)", "proof(intro soundI2 nnegI bounded_byI, simp_all add:wp_eval)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n       \\<le> ?b\n 2. \\<And>x.\n       0 \\<le> \\<guillemotleft> G \\<guillemotright> x * wp body (t P) x +\n               (1 - \\<guillemotleft> G \\<guillemotright> x) * P x", "fix s::'s"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n       \\<le> ?b\n 2. \\<And>x.\n       0 \\<le> \\<guillemotleft> G \\<guillemotright> x * wp body (t P) x +\n               (1 - \\<guillemotleft> G \\<guillemotright> x) * P x", "from ht sP"], ["proof (chain)\npicking this:\n  sound ?P \\<Longrightarrow> sound (t ?P)\n  sound P", "have stP: \"sound (t P)\""], ["proof (prove)\nusing this:\n  sound ?P \\<Longrightarrow> sound (t ?P)\n  sound P\n\ngoal (1 subgoal):\n 1. sound (t P)", "by(auto)"], ["proof (state)\nthis:\n  sound (t P)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n       \\<le> ?b\n 2. \\<And>x.\n       0 \\<le> \\<guillemotleft> G \\<guillemotright> x * wp body (t P) x +\n               (1 - \\<guillemotleft> G \\<guillemotright> x) * P x", "with hb"], ["proof (chain)\npicking this:\n  healthy (wp body)\n  sound (t P)", "have \"0 \\<le> wp body (t P) s\""], ["proof (prove)\nusing this:\n  healthy (wp body)\n  sound (t P)\n\ngoal (1 subgoal):\n 1. 0 \\<le> wp body (t P) s", "by(auto)"], ["proof (state)\nthis:\n  0 \\<le> wp body (t P) s\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n       \\<le> ?b\n 2. \\<And>x.\n       0 \\<le> \\<guillemotleft> G \\<guillemotright> x * wp body (t P) x +\n               (1 - \\<guillemotleft> G \\<guillemotright> x) * P x", "with sP"], ["proof (chain)\npicking this:\n  sound P\n  0 \\<le> wp body (t P) s", "show \"0 \\<le> \\<guillemotleft> G \\<guillemotright> s * wp body (t P) s + (1 - \\<guillemotleft> G \\<guillemotright> s) * P s\""], ["proof (prove)\nusing this:\n  sound P\n  0 \\<le> wp body (t P) s\n\ngoal (1 subgoal):\n 1. 0 \\<le> \\<guillemotleft> G \\<guillemotright> s * wp body (t P) s +\n            (1 - \\<guillemotleft> G \\<guillemotright> s) * P s", "by(auto intro!:add_nonneg_nonneg mult_nonneg_nonneg)"], ["proof (state)\nthis:\n  0 \\<le> \\<guillemotleft> G \\<guillemotright> s * wp body (t P) s +\n          (1 - \\<guillemotleft> G \\<guillemotright> s) * P s\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n       \\<le> ?b", "from ht sP"], ["proof (chain)\npicking this:\n  sound ?P \\<Longrightarrow> sound (t ?P)\n  sound P", "have \"sound (t P)\""], ["proof (prove)\nusing this:\n  sound ?P \\<Longrightarrow> sound (t ?P)\n  sound P\n\ngoal (1 subgoal):\n 1. sound (t P)", "by(auto)"], ["proof (state)\nthis:\n  sound (t P)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n       \\<le> ?b", "moreover"], ["proof (state)\nthis:\n  sound (t P)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n       \\<le> ?b", "hence \"bounded_by (bound_of (t P)) (t P)\""], ["proof (prove)\nusing this:\n  sound (t P)\n\ngoal (1 subgoal):\n 1. bounded_by (bound_of (t P)) (t P)", "by(auto)"], ["proof (state)\nthis:\n  bounded_by (bound_of (t P)) (t P)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n       \\<le> ?b", "ultimately"], ["proof (chain)\npicking this:\n  sound (t P)\n  bounded_by (bound_of (t P)) (t P)", "have \"wp body (t P) s \\<le> bound_of (t P)\""], ["proof (prove)\nusing this:\n  sound (t P)\n  bounded_by (bound_of (t P)) (t P)\n\ngoal (1 subgoal):\n 1. wp body (t P) s \\<le> bound_of (t P)", "using hb"], ["proof (prove)\nusing this:\n  sound (t P)\n  bounded_by (bound_of (t P)) (t P)\n  healthy (wp body)\n\ngoal (1 subgoal):\n 1. wp body (t P) s \\<le> bound_of (t P)", "by(auto)"], ["proof (state)\nthis:\n  wp body (t P) s \\<le> bound_of (t P)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n       \\<le> ?b", "hence \"wp body (t P) s \\<le> max (bound_of P) (bound_of (t P))\""], ["proof (prove)\nusing this:\n  wp body (t P) s \\<le> bound_of (t P)\n\ngoal (1 subgoal):\n 1. wp body (t P) s \\<le> max (bound_of P) (bound_of (t P))", "by(auto)"], ["proof (state)\nthis:\n  wp body (t P) s \\<le> max (bound_of P) (bound_of (t P))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n       \\<le> ?b", "moreover"], ["proof (state)\nthis:\n  wp body (t P) s \\<le> max (bound_of P) (bound_of (t P))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n       \\<le> ?b", "{"], ["proof (state)\nthis:\n  wp body (t P) s \\<le> max (bound_of P) (bound_of (t P))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n       \\<le> ?b", "from sP"], ["proof (chain)\npicking this:\n  sound P", "have \"P s \\<le> bound_of P\""], ["proof (prove)\nusing this:\n  sound P\n\ngoal (1 subgoal):\n 1. P s \\<le> bound_of P", "by(auto)"], ["proof (state)\nthis:\n  P s \\<le> bound_of P\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n       \\<le> ?b", "hence \"P s \\<le> max (bound_of P) (bound_of (t P))\""], ["proof (prove)\nusing this:\n  P s \\<le> bound_of P\n\ngoal (1 subgoal):\n 1. P s \\<le> max (bound_of P) (bound_of (t P))", "by(auto)"], ["proof (state)\nthis:\n  P s \\<le> max (bound_of P) (bound_of (t P))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n       \\<le> ?b", "}"], ["proof (state)\nthis:\n  P s \\<le> max (bound_of P) (bound_of (t P))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n       \\<le> ?b", "ultimately"], ["proof (chain)\npicking this:\n  wp body (t P) s \\<le> max (bound_of P) (bound_of (t P))\n  P s \\<le> max (bound_of P) (bound_of (t P))", "have \"\\<guillemotleft>G\\<guillemotright> s * wp body (t P) s + (1 - \\<guillemotleft>G\\<guillemotright> s) * P s \\<le>\n        \\<guillemotleft>G\\<guillemotright> s * max (bound_of P) (bound_of (t P)) +\n        (1 - \\<guillemotleft>G\\<guillemotright> s) * max (bound_of P) (bound_of (t P))\""], ["proof (prove)\nusing this:\n  wp body (t P) s \\<le> max (bound_of P) (bound_of (t P))\n  P s \\<le> max (bound_of P) (bound_of (t P))\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wp body (t P) s +\n    (1 - \\<guillemotleft> G \\<guillemotright> s) * P s\n    \\<le> \\<guillemotleft> G \\<guillemotright> s *\n          max (bound_of P) (bound_of (t P)) +\n          (1 - \\<guillemotleft> G \\<guillemotright> s) *\n          max (bound_of P) (bound_of (t P))", "by(blast intro:add_mono mult_left_mono)"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wp body (t P) s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * P s\n  \\<le> \\<guillemotleft> G \\<guillemotright> s *\n        max (bound_of P) (bound_of (t P)) +\n        (1 - \\<guillemotleft> G \\<guillemotright> s) *\n        max (bound_of P) (bound_of (t P))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n       \\<le> ?b", "also"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wp body (t P) s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * P s\n  \\<le> \\<guillemotleft> G \\<guillemotright> s *\n        max (bound_of P) (bound_of (t P)) +\n        (1 - \\<guillemotleft> G \\<guillemotright> s) *\n        max (bound_of P) (bound_of (t P))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n       \\<le> ?b", "have \"... = max (bound_of P) (bound_of (t P))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s *\n    max (bound_of P) (bound_of (t P)) +\n    (1 - \\<guillemotleft> G \\<guillemotright> s) *\n    max (bound_of P) (bound_of (t P)) =\n    max (bound_of P) (bound_of (t P))", "by(simp add:algebra_simps)"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s *\n  max (bound_of P) (bound_of (t P)) +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) *\n  max (bound_of P) (bound_of (t P)) =\n  max (bound_of P) (bound_of (t P))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n       \\<le> ?b", "finally"], ["proof (chain)\npicking this:\n  \\<guillemotleft> G \\<guillemotright> s * wp body (t P) s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * P s\n  \\<le> max (bound_of P) (bound_of (t P))", "show \"\\<guillemotleft>G\\<guillemotright> s * wp body (t P) s + (1 - \\<guillemotleft>G\\<guillemotright> s) * P s \\<le>\n                max (bound_of P) (bound_of (t P))\""], ["proof (prove)\nusing this:\n  \\<guillemotleft> G \\<guillemotright> s * wp body (t P) s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * P s\n  \\<le> max (bound_of P) (bound_of (t P))\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wp body (t P) s +\n    (1 - \\<guillemotleft> G \\<guillemotright> s) * P s\n    \\<le> max (bound_of P) (bound_of (t P))", "."], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wp body (t P) s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * P s\n  \\<le> max (bound_of P) (bound_of (t P))\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>This gives the equivalence with the alternative definition for\n  loops\\citep[\\S7, p.~198, footnote 23]{McIver_M_04}.\\<close>"], ["", "lemma wlp_Loop1:\n  fixes body :: \"'s prog\"\n  assumes unitary: \"unitary P\"\n      and healthy: \"nearly_healthy (wlp body)\"\n  shows \"wlp (do G \\<longrightarrow> body od) P =\n   gfp_exp (\\<lambda>Q s. \\<guillemotleft>G\\<guillemotright> s * wlp body Q s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s)\"\n  (is \"?X = gfp_exp (?Y P)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. wlp (\\<mu>x.\n            body ;;\n            x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     P =\n    gfp_exp\n     (\\<lambda>Q s.\n         \\<guillemotleft> G \\<guillemotright> s * wlp body Q s +\n         \\<guillemotleft> \\<N> G \\<guillemotright> s * P s)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. wlp (\\<mu>x.\n            body ;;\n            x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     P =\n    gfp_exp\n     (\\<lambda>Q s.\n         \\<guillemotleft> G \\<guillemotright> s * wlp body Q s +\n         \\<guillemotleft> \\<N> G \\<guillemotright> s * P s)", "let \"?Z u\" = \"(body ;; Embed u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\""], ["proof (state)\ngoal (1 subgoal):\n 1. wlp (\\<mu>x.\n            body ;;\n            x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     P =\n    gfp_exp\n     (\\<lambda>Q s.\n         \\<guillemotleft> G \\<guillemotright> s * wlp body Q s +\n         \\<guillemotleft> \\<N> G \\<guillemotright> s * P s)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. wlp (\\<mu>x.\n            body ;;\n            x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     P =\n    gfp_exp\n     (\\<lambda>Q s.\n         \\<guillemotleft> G \\<guillemotright> s * wlp body Q s +\n         \\<guillemotleft> \\<N> G \\<guillemotright> s * P s)", "proof(simp only: wp_eval, intro gfp_pulldown assms le_funI)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>u P.\n       unitary P \\<Longrightarrow>\n       wlp (body ;;\n            Embed\n             u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n        P =\n       (\\<lambda>a.\n           \\<guillemotleft> G \\<guillemotright> a * wlp body (u P) a +\n           \\<guillemotleft> \\<N> G \\<guillemotright> a * P a)\n 2. \\<And>t P.\n       \\<lbrakk>\\<And>Q. unitary Q \\<Longrightarrow> unitary (t Q);\n        unitary P\\<rbrakk>\n       \\<Longrightarrow> unitary\n                          (wlp (body ;;\n                                Embed\n                                 t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                            P)\n 3. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> unitary\n                          (\\<lambda>a.\n                              \\<guillemotleft> G \\<guillemotright> a *\n                              wlp body Q a +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> a *\n                              P a)\n 4. \\<And>P Q R x.\n       \\<lbrakk>unitary P; unitary Q; unitary R; Q \\<tturnstile> R\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wlp body Q x +\n                         \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n                         \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                               wlp body R x +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> x *\n                               P x\n 5. \\<And>t u.\n       \\<lbrakk>le_utrans t u;\n        \\<And>P. unitary P \\<Longrightarrow> unitary (t P);\n        \\<And>P. unitary P \\<Longrightarrow> unitary (u P)\\<rbrakk>\n       \\<Longrightarrow> le_utrans\n                          (wlp (body ;;\n                                Embed\n                                 t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wlp (body ;;\n                                Embed\n                                 u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "fix u P"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>u P.\n       unitary P \\<Longrightarrow>\n       wlp (body ;;\n            Embed\n             u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n        P =\n       (\\<lambda>a.\n           \\<guillemotleft> G \\<guillemotright> a * wlp body (u P) a +\n           \\<guillemotleft> \\<N> G \\<guillemotright> a * P a)\n 2. \\<And>t P.\n       \\<lbrakk>\\<And>Q. unitary Q \\<Longrightarrow> unitary (t Q);\n        unitary P\\<rbrakk>\n       \\<Longrightarrow> unitary\n                          (wlp (body ;;\n                                Embed\n                                 t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                            P)\n 3. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> unitary\n                          (\\<lambda>a.\n                              \\<guillemotleft> G \\<guillemotright> a *\n                              wlp body Q a +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> a *\n                              P a)\n 4. \\<And>P Q R x.\n       \\<lbrakk>unitary P; unitary Q; unitary R; Q \\<tturnstile> R\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wlp body Q x +\n                         \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n                         \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                               wlp body R x +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> x *\n                               P x\n 5. \\<And>t u.\n       \\<lbrakk>le_utrans t u;\n        \\<And>P. unitary P \\<Longrightarrow> unitary (t P);\n        \\<And>P. unitary P \\<Longrightarrow> unitary (u P)\\<rbrakk>\n       \\<Longrightarrow> le_utrans\n                          (wlp (body ;;\n                                Embed\n                                 t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wlp (body ;;\n                                Embed\n                                 u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "show \"wlp (?Z u) P = ?Y P (u P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wlp (body ;;\n         Embed\n          u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     P =\n    (\\<lambda>a.\n        \\<guillemotleft> G \\<guillemotright> a * wlp body (u P) a +\n        \\<guillemotleft> \\<N> G \\<guillemotright> a * P a)", "by(simp add:wp_eval negate_embed)"], ["proof (state)\nthis:\n  wlp (body ;;\n       Embed\n        u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n   P =\n  (\\<lambda>a.\n      \\<guillemotleft> G \\<guillemotright> a * wlp body (u P) a +\n      \\<guillemotleft> \\<N> G \\<guillemotright> a * P a)\n\ngoal (4 subgoals):\n 1. \\<And>t P.\n       \\<lbrakk>\\<And>Q. unitary Q \\<Longrightarrow> unitary (t Q);\n        unitary P\\<rbrakk>\n       \\<Longrightarrow> unitary\n                          (wlp (body ;;\n                                Embed\n                                 t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                            P)\n 2. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> unitary\n                          (\\<lambda>a.\n                              \\<guillemotleft> G \\<guillemotright> a *\n                              wlp body Q a +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> a *\n                              P a)\n 3. \\<And>P Q R x.\n       \\<lbrakk>unitary P; unitary Q; unitary R; Q \\<tturnstile> R\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wlp body Q x +\n                         \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n                         \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                               wlp body R x +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> x *\n                               P x\n 4. \\<And>t u.\n       \\<lbrakk>le_utrans t u;\n        \\<And>P. unitary P \\<Longrightarrow> unitary (t P);\n        \\<And>P. unitary P \\<Longrightarrow> unitary (u P)\\<rbrakk>\n       \\<Longrightarrow> le_utrans\n                          (wlp (body ;;\n                                Embed\n                                 t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wlp (body ;;\n                                Embed\n                                 u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>t P.\n       \\<lbrakk>\\<And>Q. unitary Q \\<Longrightarrow> unitary (t Q);\n        unitary P\\<rbrakk>\n       \\<Longrightarrow> unitary\n                          (wlp (body ;;\n                                Embed\n                                 t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                            P)\n 2. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> unitary\n                          (\\<lambda>a.\n                              \\<guillemotleft> G \\<guillemotright> a *\n                              wlp body Q a +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> a *\n                              P a)\n 3. \\<And>P Q R x.\n       \\<lbrakk>unitary P; unitary Q; unitary R; Q \\<tturnstile> R\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wlp body Q x +\n                         \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n                         \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                               wlp body R x +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> x *\n                               P x\n 4. \\<And>t u.\n       \\<lbrakk>le_utrans t u;\n        \\<And>P. unitary P \\<Longrightarrow> unitary (t P);\n        \\<And>P. unitary P \\<Longrightarrow> unitary (u P)\\<rbrakk>\n       \\<Longrightarrow> le_utrans\n                          (wlp (body ;;\n                                Embed\n                                 t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wlp (body ;;\n                                Embed\n                                 u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "fix t::\"'s trans\" and P::\"'s expect\""], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>t P.\n       \\<lbrakk>\\<And>Q. unitary Q \\<Longrightarrow> unitary (t Q);\n        unitary P\\<rbrakk>\n       \\<Longrightarrow> unitary\n                          (wlp (body ;;\n                                Embed\n                                 t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                            P)\n 2. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> unitary\n                          (\\<lambda>a.\n                              \\<guillemotleft> G \\<guillemotright> a *\n                              wlp body Q a +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> a *\n                              P a)\n 3. \\<And>P Q R x.\n       \\<lbrakk>unitary P; unitary Q; unitary R; Q \\<tturnstile> R\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wlp body Q x +\n                         \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n                         \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                               wlp body R x +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> x *\n                               P x\n 4. \\<And>t u.\n       \\<lbrakk>le_utrans t u;\n        \\<And>P. unitary P \\<Longrightarrow> unitary (t P);\n        \\<And>P. unitary P \\<Longrightarrow> unitary (u P)\\<rbrakk>\n       \\<Longrightarrow> le_utrans\n                          (wlp (body ;;\n                                Embed\n                                 t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wlp (body ;;\n                                Embed\n                                 u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "assume ut: \"\\<And>Q. unitary Q \\<Longrightarrow> unitary (t Q)\" and uP: \"unitary P\""], ["proof (state)\nthis:\n  unitary ?Q \\<Longrightarrow> unitary (t ?Q)\n  unitary P\n\ngoal (4 subgoals):\n 1. \\<And>t P.\n       \\<lbrakk>\\<And>Q. unitary Q \\<Longrightarrow> unitary (t Q);\n        unitary P\\<rbrakk>\n       \\<Longrightarrow> unitary\n                          (wlp (body ;;\n                                Embed\n                                 t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                            P)\n 2. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> unitary\n                          (\\<lambda>a.\n                              \\<guillemotleft> G \\<guillemotright> a *\n                              wlp body Q a +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> a *\n                              P a)\n 3. \\<And>P Q R x.\n       \\<lbrakk>unitary P; unitary Q; unitary R; Q \\<tturnstile> R\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wlp body Q x +\n                         \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n                         \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                               wlp body R x +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> x *\n                               P x\n 4. \\<And>t u.\n       \\<lbrakk>le_utrans t u;\n        \\<And>P. unitary P \\<Longrightarrow> unitary (t P);\n        \\<And>P. unitary P \\<Longrightarrow> unitary (u P)\\<rbrakk>\n       \\<Longrightarrow> le_utrans\n                          (wlp (body ;;\n                                Embed\n                                 t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wlp (body ;;\n                                Embed\n                                 u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "thus \"unitary (wlp (?Z t) P)\""], ["proof (prove)\nusing this:\n  unitary ?Q \\<Longrightarrow> unitary (t ?Q)\n  unitary P\n\ngoal (1 subgoal):\n 1. unitary\n     (wlp (body ;;\n           Embed\n            t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n       P)", "by(rule wlp_loop_step_unitary[OF healthy])"], ["proof (state)\nthis:\n  unitary\n   (wlp (body ;;\n         Embed\n          t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     P)\n\ngoal (3 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> unitary\n                          (\\<lambda>a.\n                              \\<guillemotleft> G \\<guillemotright> a *\n                              wlp body Q a +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> a *\n                              P a)\n 2. \\<And>P Q R x.\n       \\<lbrakk>unitary P; unitary Q; unitary R; Q \\<tturnstile> R\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wlp body Q x +\n                         \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n                         \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                               wlp body R x +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> x *\n                               P x\n 3. \\<And>t u.\n       \\<lbrakk>le_utrans t u;\n        \\<And>P. unitary P \\<Longrightarrow> unitary (t P);\n        \\<And>P. unitary P \\<Longrightarrow> unitary (u P)\\<rbrakk>\n       \\<Longrightarrow> le_utrans\n                          (wlp (body ;;\n                                Embed\n                                 t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wlp (body ;;\n                                Embed\n                                 u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> unitary\n                          (\\<lambda>a.\n                              \\<guillemotleft> G \\<guillemotright> a *\n                              wlp body Q a +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> a *\n                              P a)\n 2. \\<And>P Q R x.\n       \\<lbrakk>unitary P; unitary Q; unitary R; Q \\<tturnstile> R\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wlp body Q x +\n                         \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n                         \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                               wlp body R x +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> x *\n                               P x\n 3. \\<And>t u.\n       \\<lbrakk>le_utrans t u;\n        \\<And>P. unitary P \\<Longrightarrow> unitary (t P);\n        \\<And>P. unitary P \\<Longrightarrow> unitary (u P)\\<rbrakk>\n       \\<Longrightarrow> le_utrans\n                          (wlp (body ;;\n                                Embed\n                                 t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wlp (body ;;\n                                Embed\n                                 u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "fix P Q::\"'s expect\""], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> unitary\n                          (\\<lambda>a.\n                              \\<guillemotleft> G \\<guillemotright> a *\n                              wlp body Q a +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> a *\n                              P a)\n 2. \\<And>P Q R x.\n       \\<lbrakk>unitary P; unitary Q; unitary R; Q \\<tturnstile> R\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wlp body Q x +\n                         \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n                         \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                               wlp body R x +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> x *\n                               P x\n 3. \\<And>t u.\n       \\<lbrakk>le_utrans t u;\n        \\<And>P. unitary P \\<Longrightarrow> unitary (t P);\n        \\<And>P. unitary P \\<Longrightarrow> unitary (u P)\\<rbrakk>\n       \\<Longrightarrow> le_utrans\n                          (wlp (body ;;\n                                Embed\n                                 t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wlp (body ;;\n                                Embed\n                                 u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "assume uP: \"unitary P\" and uQ: \"unitary Q\""], ["proof (state)\nthis:\n  unitary P\n  unitary Q\n\ngoal (3 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q\\<rbrakk>\n       \\<Longrightarrow> unitary\n                          (\\<lambda>a.\n                              \\<guillemotleft> G \\<guillemotright> a *\n                              wlp body Q a +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> a *\n                              P a)\n 2. \\<And>P Q R x.\n       \\<lbrakk>unitary P; unitary Q; unitary R; Q \\<tturnstile> R\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wlp body Q x +\n                         \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n                         \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                               wlp body R x +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> x *\n                               P x\n 3. \\<And>t u.\n       \\<lbrakk>le_utrans t u;\n        \\<And>P. unitary P \\<Longrightarrow> unitary (t P);\n        \\<And>P. unitary P \\<Longrightarrow> unitary (u P)\\<rbrakk>\n       \\<Longrightarrow> le_utrans\n                          (wlp (body ;;\n                                Embed\n                                 t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wlp (body ;;\n                                Embed\n                                 u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "show \"unitary (\\<lambda>a. \\<guillemotleft> G \\<guillemotright> a * wlp body Q a + \\<guillemotleft> \\<N> G \\<guillemotright> a * P a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. unitary\n     (\\<lambda>a.\n         \\<guillemotleft> G \\<guillemotright> a * wlp body Q a +\n         \\<guillemotleft> \\<N> G \\<guillemotright> a * P a)", "proof(intro unitaryI2 nnegI bounded_byI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       0 \\<le> \\<guillemotleft> G \\<guillemotright> x * wlp body Q x +\n               \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n 2. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wlp body Q x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> 1", "fix s::'s"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       0 \\<le> \\<guillemotleft> G \\<guillemotright> x * wlp body Q x +\n               \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n 2. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wlp body Q x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> 1", "from healthy uQ"], ["proof (chain)\npicking this:\n  nearly_healthy (wlp body)\n  unitary Q", "have \"unitary (wlp body Q)\""], ["proof (prove)\nusing this:\n  nearly_healthy (wlp body)\n  unitary Q\n\ngoal (1 subgoal):\n 1. unitary (wlp body Q)", "by(auto)"], ["proof (state)\nthis:\n  unitary (wlp body Q)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       0 \\<le> \\<guillemotleft> G \\<guillemotright> x * wlp body Q x +\n               \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n 2. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wlp body Q x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> 1", "hence \"0 \\<le> wlp body Q s\""], ["proof (prove)\nusing this:\n  unitary (wlp body Q)\n\ngoal (1 subgoal):\n 1. 0 \\<le> wlp body Q s", "by(auto)"], ["proof (state)\nthis:\n  0 \\<le> wlp body Q s\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       0 \\<le> \\<guillemotleft> G \\<guillemotright> x * wlp body Q x +\n               \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n 2. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wlp body Q x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> 1", "with uP"], ["proof (chain)\npicking this:\n  unitary P\n  0 \\<le> wlp body Q s", "show \"0 \\<le> \\<guillemotleft>G\\<guillemotright> s * wlp body Q s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s\""], ["proof (prove)\nusing this:\n  unitary P\n  0 \\<le> wlp body Q s\n\ngoal (1 subgoal):\n 1. 0 \\<le> \\<guillemotleft> G \\<guillemotright> s * wlp body Q s +\n            \\<guillemotleft> \\<N> G \\<guillemotright> s * P s", "by(auto intro!:add_nonneg_nonneg mult_nonneg_nonneg)"], ["proof (state)\nthis:\n  0 \\<le> \\<guillemotleft> G \\<guillemotright> s * wlp body Q s +\n          \\<guillemotleft> \\<N> G \\<guillemotright> s * P s\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wlp body Q x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> 1", "from healthy uQ"], ["proof (chain)\npicking this:\n  nearly_healthy (wlp body)\n  unitary Q", "have \"bounded_by 1 (wlp body Q)\""], ["proof (prove)\nusing this:\n  nearly_healthy (wlp body)\n  unitary Q\n\ngoal (1 subgoal):\n 1. bounded_by 1 (wlp body Q)", "by(auto)"], ["proof (state)\nthis:\n  bounded_by 1 (wlp body Q)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wlp body Q x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> 1", "with uP"], ["proof (chain)\npicking this:\n  unitary P\n  bounded_by 1 (wlp body Q)", "have \"\\<guillemotleft>G\\<guillemotright> s * wlp body Q s + (1 - \\<guillemotleft>G\\<guillemotright> s) * P s \\<le> \\<guillemotleft>G\\<guillemotright> s * 1 + (1 - \\<guillemotleft>G\\<guillemotright> s) * 1\""], ["proof (prove)\nusing this:\n  unitary P\n  bounded_by 1 (wlp body Q)\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wlp body Q s +\n    (1 - \\<guillemotleft> G \\<guillemotright> s) * P s\n    \\<le> \\<guillemotleft> G \\<guillemotright> s * 1 +\n          (1 - \\<guillemotleft> G \\<guillemotright> s) * 1", "by(blast intro:add_mono mult_left_mono)"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wlp body Q s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * P s\n  \\<le> \\<guillemotleft> G \\<guillemotright> s * 1 +\n        (1 - \\<guillemotleft> G \\<guillemotright> s) * 1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wlp body Q x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> 1", "also"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wlp body Q s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * P s\n  \\<le> \\<guillemotleft> G \\<guillemotright> s * 1 +\n        (1 - \\<guillemotleft> G \\<guillemotright> s) * 1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wlp body Q x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> 1", "have \"... = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * 1 +\n    (1 - \\<guillemotleft> G \\<guillemotright> s) * 1 =\n    1", "by(simp)"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * 1 +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * 1 =\n  1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wlp body Q x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> 1", "finally"], ["proof (chain)\npicking this:\n  \\<guillemotleft> G \\<guillemotright> s * wlp body Q s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * P s\n  \\<le> 1", "show \"\\<guillemotleft>G\\<guillemotright> s * wlp body Q s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s \\<le> 1\""], ["proof (prove)\nusing this:\n  \\<guillemotleft> G \\<guillemotright> s * wlp body Q s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * P s\n  \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wlp body Q s +\n    \\<guillemotleft> \\<N> G \\<guillemotright> s * P s\n    \\<le> 1", "by(simp add:negate_embed)"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wlp body Q s +\n  \\<guillemotleft> \\<N> G \\<guillemotright> s * P s\n  \\<le> 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  unitary\n   (\\<lambda>a.\n       \\<guillemotleft> G \\<guillemotright> a * wlp body Q a +\n       \\<guillemotleft> \\<N> G \\<guillemotright> a * P a)\n\ngoal (2 subgoals):\n 1. \\<And>P Q R x.\n       \\<lbrakk>unitary P; unitary Q; unitary R; Q \\<tturnstile> R\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wlp body Q x +\n                         \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n                         \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                               wlp body R x +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> x *\n                               P x\n 2. \\<And>t u.\n       \\<lbrakk>le_utrans t u;\n        \\<And>P. unitary P \\<Longrightarrow> unitary (t P);\n        \\<And>P. unitary P \\<Longrightarrow> unitary (u P)\\<rbrakk>\n       \\<Longrightarrow> le_utrans\n                          (wlp (body ;;\n                                Embed\n                                 t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wlp (body ;;\n                                Embed\n                                 u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P Q R x.\n       \\<lbrakk>unitary P; unitary Q; unitary R; Q \\<tturnstile> R\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wlp body Q x +\n                         \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n                         \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                               wlp body R x +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> x *\n                               P x\n 2. \\<And>t u.\n       \\<lbrakk>le_utrans t u;\n        \\<And>P. unitary P \\<Longrightarrow> unitary (t P);\n        \\<And>P. unitary P \\<Longrightarrow> unitary (u P)\\<rbrakk>\n       \\<Longrightarrow> le_utrans\n                          (wlp (body ;;\n                                Embed\n                                 t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wlp (body ;;\n                                Embed\n                                 u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "fix P Q R::\"'s expect\" and s::'s"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P Q R x.\n       \\<lbrakk>unitary P; unitary Q; unitary R; Q \\<tturnstile> R\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wlp body Q x +\n                         \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n                         \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                               wlp body R x +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> x *\n                               P x\n 2. \\<And>t u.\n       \\<lbrakk>le_utrans t u;\n        \\<And>P. unitary P \\<Longrightarrow> unitary (t P);\n        \\<And>P. unitary P \\<Longrightarrow> unitary (u P)\\<rbrakk>\n       \\<Longrightarrow> le_utrans\n                          (wlp (body ;;\n                                Embed\n                                 t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wlp (body ;;\n                                Embed\n                                 u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "assume uP: \"unitary P\" and uQ: \"unitary Q\" and uR: \"unitary R\"\n       and le: \"Q \\<tturnstile> R\""], ["proof (state)\nthis:\n  unitary P\n  unitary Q\n  unitary R\n  Q \\<tturnstile> R\n\ngoal (2 subgoals):\n 1. \\<And>P Q R x.\n       \\<lbrakk>unitary P; unitary Q; unitary R; Q \\<tturnstile> R\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wlp body Q x +\n                         \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n                         \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                               wlp body R x +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> x *\n                               P x\n 2. \\<And>t u.\n       \\<lbrakk>le_utrans t u;\n        \\<And>P. unitary P \\<Longrightarrow> unitary (t P);\n        \\<And>P. unitary P \\<Longrightarrow> unitary (u P)\\<rbrakk>\n       \\<Longrightarrow> le_utrans\n                          (wlp (body ;;\n                                Embed\n                                 t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wlp (body ;;\n                                Embed\n                                 u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "hence \"wlp body Q s \\<le> wlp body R s\""], ["proof (prove)\nusing this:\n  unitary P\n  unitary Q\n  unitary R\n  Q \\<tturnstile> R\n\ngoal (1 subgoal):\n 1. wlp body Q s \\<le> wlp body R s", "by(blast intro:le_funD[OF nearly_healthy_monoD, OF healthy])"], ["proof (state)\nthis:\n  wlp body Q s \\<le> wlp body R s\n\ngoal (2 subgoals):\n 1. \\<And>P Q R x.\n       \\<lbrakk>unitary P; unitary Q; unitary R; Q \\<tturnstile> R\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wlp body Q x +\n                         \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n                         \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                               wlp body R x +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> x *\n                               P x\n 2. \\<And>t u.\n       \\<lbrakk>le_utrans t u;\n        \\<And>P. unitary P \\<Longrightarrow> unitary (t P);\n        \\<And>P. unitary P \\<Longrightarrow> unitary (u P)\\<rbrakk>\n       \\<Longrightarrow> le_utrans\n                          (wlp (body ;;\n                                Embed\n                                 t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wlp (body ;;\n                                Embed\n                                 u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "thus \"\\<guillemotleft>G\\<guillemotright> s * wlp body Q s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s \\<le>\n          \\<guillemotleft>G\\<guillemotright> s * wlp body R s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s\""], ["proof (prove)\nusing this:\n  wlp body Q s \\<le> wlp body R s\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wlp body Q s +\n    \\<guillemotleft> \\<N> G \\<guillemotright> s * P s\n    \\<le> \\<guillemotleft> G \\<guillemotright> s * wlp body R s +\n          \\<guillemotleft> \\<N> G \\<guillemotright> s * P s", "by(auto intro:mult_left_mono)"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wlp body Q s +\n  \\<guillemotleft> \\<N> G \\<guillemotright> s * P s\n  \\<le> \\<guillemotleft> G \\<guillemotright> s * wlp body R s +\n        \\<guillemotleft> \\<N> G \\<guillemotright> s * P s\n\ngoal (1 subgoal):\n 1. \\<And>t u.\n       \\<lbrakk>le_utrans t u;\n        \\<And>P. unitary P \\<Longrightarrow> unitary (t P);\n        \\<And>P. unitary P \\<Longrightarrow> unitary (u P)\\<rbrakk>\n       \\<Longrightarrow> le_utrans\n                          (wlp (body ;;\n                                Embed\n                                 t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wlp (body ;;\n                                Embed\n                                 u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t u.\n       \\<lbrakk>le_utrans t u;\n        \\<And>P. unitary P \\<Longrightarrow> unitary (t P);\n        \\<And>P. unitary P \\<Longrightarrow> unitary (u P)\\<rbrakk>\n       \\<Longrightarrow> le_utrans\n                          (wlp (body ;;\n                                Embed\n                                 t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wlp (body ;;\n                                Embed\n                                 u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "fix t u::\"'s trans\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t u.\n       \\<lbrakk>le_utrans t u;\n        \\<And>P. unitary P \\<Longrightarrow> unitary (t P);\n        \\<And>P. unitary P \\<Longrightarrow> unitary (u P)\\<rbrakk>\n       \\<Longrightarrow> le_utrans\n                          (wlp (body ;;\n                                Embed\n                                 t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wlp (body ;;\n                                Embed\n                                 u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "assume \"le_utrans t u\"\n           \"\\<And>P. unitary P \\<Longrightarrow> unitary (t P)\"\n           \"\\<And>P. unitary P \\<Longrightarrow> unitary (u P)\""], ["proof (state)\nthis:\n  le_utrans t u\n  unitary ?P \\<Longrightarrow> unitary (t ?P)\n  unitary ?P \\<Longrightarrow> unitary (u ?P)\n\ngoal (1 subgoal):\n 1. \\<And>t u.\n       \\<lbrakk>le_utrans t u;\n        \\<And>P. unitary P \\<Longrightarrow> unitary (t P);\n        \\<And>P. unitary P \\<Longrightarrow> unitary (u P)\\<rbrakk>\n       \\<Longrightarrow> le_utrans\n                          (wlp (body ;;\n                                Embed\n                                 t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wlp (body ;;\n                                Embed\n                                 u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "thus \"le_utrans (wlp (?Z t)) (wlp (?Z u))\""], ["proof (prove)\nusing this:\n  le_utrans t u\n  unitary ?P \\<Longrightarrow> unitary (t ?P)\n  unitary ?P \\<Longrightarrow> unitary (u ?P)\n\ngoal (1 subgoal):\n 1. le_utrans\n     (wlp (body ;;\n           Embed\n            t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     (wlp (body ;;\n           Embed\n            u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "by(blast intro!:wlp_loop_step_mono[OF healthy])"], ["proof (state)\nthis:\n  le_utrans\n   (wlp (body ;;\n         Embed\n          t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n   (wlp (body ;;\n         Embed\n          u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  wlp (\\<mu>x.\n          body ;;\n          x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n   P =\n  gfp_exp\n   (\\<lambda>Q s.\n       \\<guillemotleft> G \\<guillemotright> s * wlp body Q s +\n       \\<guillemotleft> \\<N> G \\<guillemotright> s * P s)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wp_loop_sound:\n  assumes sP: \"sound P\"\n      and hb: \"healthy (wp body)\"\n  shows \"sound (wp do G \\<longrightarrow> body od P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sound\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n       P)", "proof(simp only: wp_eval, intro lfp_trans_sound sP)"], ["proof (state)\ngoal (2 subgoals):\n 1. le_trans\n     (wp (body ;;\n          Embed\n           ?v \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     ?v\n 2. \\<And>P. sound P \\<Longrightarrow> sound (?v P)", "let ?v = \"\\<lambda>P s. bound_of P\""], ["proof (state)\ngoal (2 subgoals):\n 1. le_trans\n     (wp (body ;;\n          Embed\n           ?v \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     ?v\n 2. \\<And>P. sound P \\<Longrightarrow> sound (?v P)", "show \"le_trans (wp (body ;; Embed ?v \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ?v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. le_trans\n     (wp (body ;;\n          Embed\n           (\\<lambda>P s.\n               bound_of\n                P) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     (\\<lambda>P s. bound_of P)", "by(intro le_transI, simp add:wp_eval lfp_loop_fp[unfolded negate_embed] hb)"], ["proof (state)\nthis:\n  le_trans\n   (wp (body ;;\n        Embed\n         (\\<lambda>P s.\n             bound_of\n              P) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n   (\\<lambda>P s. bound_of P)\n\ngoal (1 subgoal):\n 1. \\<And>P. sound P \\<Longrightarrow> sound (\\<lambda>s. bound_of P)", "show \"\\<And>P. sound P \\<Longrightarrow> sound (?v P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P. sound P \\<Longrightarrow> sound (\\<lambda>s. bound_of P)", "by(auto)"], ["proof (state)\nthis:\n  sound ?P1 \\<Longrightarrow> sound (\\<lambda>s. bound_of ?P1)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Likewise, we can rewrite strict loops.\\<close>"], ["", "lemma wp_Loop1:\n  fixes body :: \"'s prog\"\n  assumes sP: \"sound P\"\n      and healthy: \"healthy (wp body)\"\n  shows \"wp (do G \\<longrightarrow> body od) P =\n   lfp_exp (\\<lambda>Q s. \\<guillemotleft>G\\<guillemotright> s * wp body Q s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s)\"\n  (is \"?X = lfp_exp (?Y P)\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. wp (\\<mu>x.\n           body ;;\n           x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     P =\n    lfp_exp\n     (\\<lambda>Q s.\n         \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n         \\<guillemotleft> \\<N> G \\<guillemotright> s * P s)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. wp (\\<mu>x.\n           body ;;\n           x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     P =\n    lfp_exp\n     (\\<lambda>Q s.\n         \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n         \\<guillemotleft> \\<N> G \\<guillemotright> s * P s)", "let \"?Z u\" = \"(body ;; Embed u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\""], ["proof (state)\ngoal (1 subgoal):\n 1. wp (\\<mu>x.\n           body ;;\n           x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     P =\n    lfp_exp\n     (\\<lambda>Q s.\n         \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n         \\<guillemotleft> \\<N> G \\<guillemotright> s * P s)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. wp (\\<mu>x.\n           body ;;\n           x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     P =\n    lfp_exp\n     (\\<lambda>Q s.\n         \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n         \\<guillemotleft> \\<N> G \\<guillemotright> s * P s)", "proof(simp only: wp_eval, intro lfp_pulldown assms le_funI sP mono_transI)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>u P.\n       sound P \\<Longrightarrow>\n       wp (body ;;\n           Embed\n            u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n        P =\n       (\\<lambda>a.\n           \\<guillemotleft> G \\<guillemotright> a * wp body (u P) a +\n           \\<guillemotleft> \\<N> G \\<guillemotright> a * P a)\n 2. \\<And>P Q.\n       \\<lbrakk>sound P; sound Q\\<rbrakk>\n       \\<Longrightarrow> sound\n                          (\\<lambda>a.\n                              \\<guillemotleft> G \\<guillemotright> a *\n                              wp body Q a +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> a *\n                              P a)\n 3. \\<And>P Pa Q x.\n       \\<lbrakk>sound P; sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wp body Pa x +\n                         \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n                         \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                               wp body Q x +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> x *\n                               P x\n 4. \\<And>t u.\n       \\<lbrakk>le_trans t u;\n        \\<And>P. sound P \\<Longrightarrow> sound (t P);\n        \\<And>P. sound P \\<Longrightarrow> sound (u P)\\<rbrakk>\n       \\<Longrightarrow> le_trans\n                          (wp (body ;;\n                               Embed\n                                t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wp (body ;;\n                               Embed\n                                u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n 5. \\<And>t P.\n       \\<lbrakk>\\<And>Q. sound Q \\<Longrightarrow> sound (t Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> sound\n                          (wp (body ;;\n                               Embed\n                                t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                            P)\n 6. le_trans\n     (wp (body ;;\n          Embed\n           ?v \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     ?v\n 7. \\<And>P. sound P \\<Longrightarrow> sound (?v P)", "fix u P"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>u P.\n       sound P \\<Longrightarrow>\n       wp (body ;;\n           Embed\n            u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n        P =\n       (\\<lambda>a.\n           \\<guillemotleft> G \\<guillemotright> a * wp body (u P) a +\n           \\<guillemotleft> \\<N> G \\<guillemotright> a * P a)\n 2. \\<And>P Q.\n       \\<lbrakk>sound P; sound Q\\<rbrakk>\n       \\<Longrightarrow> sound\n                          (\\<lambda>a.\n                              \\<guillemotleft> G \\<guillemotright> a *\n                              wp body Q a +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> a *\n                              P a)\n 3. \\<And>P Pa Q x.\n       \\<lbrakk>sound P; sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wp body Pa x +\n                         \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n                         \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                               wp body Q x +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> x *\n                               P x\n 4. \\<And>t u.\n       \\<lbrakk>le_trans t u;\n        \\<And>P. sound P \\<Longrightarrow> sound (t P);\n        \\<And>P. sound P \\<Longrightarrow> sound (u P)\\<rbrakk>\n       \\<Longrightarrow> le_trans\n                          (wp (body ;;\n                               Embed\n                                t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wp (body ;;\n                               Embed\n                                u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n 5. \\<And>t P.\n       \\<lbrakk>\\<And>Q. sound Q \\<Longrightarrow> sound (t Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> sound\n                          (wp (body ;;\n                               Embed\n                                t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                            P)\n 6. le_trans\n     (wp (body ;;\n          Embed\n           ?v \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     ?v\n 7. \\<And>P. sound P \\<Longrightarrow> sound (?v P)", "show \"wp (?Z u) P = ?Y P (u P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wp (body ;;\n        Embed\n         u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     P =\n    (\\<lambda>a.\n        \\<guillemotleft> G \\<guillemotright> a * wp body (u P) a +\n        \\<guillemotleft> \\<N> G \\<guillemotright> a * P a)", "by(simp add:wp_eval negate_embed)"], ["proof (state)\nthis:\n  wp (body ;;\n      Embed\n       u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n   P =\n  (\\<lambda>a.\n      \\<guillemotleft> G \\<guillemotright> a * wp body (u P) a +\n      \\<guillemotleft> \\<N> G \\<guillemotright> a * P a)\n\ngoal (6 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>sound P; sound Q\\<rbrakk>\n       \\<Longrightarrow> sound\n                          (\\<lambda>a.\n                              \\<guillemotleft> G \\<guillemotright> a *\n                              wp body Q a +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> a *\n                              P a)\n 2. \\<And>P Pa Q x.\n       \\<lbrakk>sound P; sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wp body Pa x +\n                         \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n                         \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                               wp body Q x +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> x *\n                               P x\n 3. \\<And>t u.\n       \\<lbrakk>le_trans t u;\n        \\<And>P. sound P \\<Longrightarrow> sound (t P);\n        \\<And>P. sound P \\<Longrightarrow> sound (u P)\\<rbrakk>\n       \\<Longrightarrow> le_trans\n                          (wp (body ;;\n                               Embed\n                                t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wp (body ;;\n                               Embed\n                                u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n 4. \\<And>t P.\n       \\<lbrakk>\\<And>Q. sound Q \\<Longrightarrow> sound (t Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> sound\n                          (wp (body ;;\n                               Embed\n                                t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                            P)\n 5. le_trans\n     (wp (body ;;\n          Embed\n           ?v \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     ?v\n 6. \\<And>P. sound P \\<Longrightarrow> sound (?v P)", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>sound P; sound Q\\<rbrakk>\n       \\<Longrightarrow> sound\n                          (\\<lambda>a.\n                              \\<guillemotleft> G \\<guillemotright> a *\n                              wp body Q a +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> a *\n                              P a)\n 2. \\<And>P Pa Q x.\n       \\<lbrakk>sound P; sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wp body Pa x +\n                         \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n                         \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                               wp body Q x +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> x *\n                               P x\n 3. \\<And>t u.\n       \\<lbrakk>le_trans t u;\n        \\<And>P. sound P \\<Longrightarrow> sound (t P);\n        \\<And>P. sound P \\<Longrightarrow> sound (u P)\\<rbrakk>\n       \\<Longrightarrow> le_trans\n                          (wp (body ;;\n                               Embed\n                                t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wp (body ;;\n                               Embed\n                                u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n 4. \\<And>t P.\n       \\<lbrakk>\\<And>Q. sound Q \\<Longrightarrow> sound (t Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> sound\n                          (wp (body ;;\n                               Embed\n                                t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                            P)\n 5. le_trans\n     (wp (body ;;\n          Embed\n           ?v \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     ?v\n 6. \\<And>P. sound P \\<Longrightarrow> sound (?v P)", "fix t::\"'s trans\" and P::\"'s expect\""], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>sound P; sound Q\\<rbrakk>\n       \\<Longrightarrow> sound\n                          (\\<lambda>a.\n                              \\<guillemotleft> G \\<guillemotright> a *\n                              wp body Q a +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> a *\n                              P a)\n 2. \\<And>P Pa Q x.\n       \\<lbrakk>sound P; sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wp body Pa x +\n                         \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n                         \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                               wp body Q x +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> x *\n                               P x\n 3. \\<And>t u.\n       \\<lbrakk>le_trans t u;\n        \\<And>P. sound P \\<Longrightarrow> sound (t P);\n        \\<And>P. sound P \\<Longrightarrow> sound (u P)\\<rbrakk>\n       \\<Longrightarrow> le_trans\n                          (wp (body ;;\n                               Embed\n                                t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wp (body ;;\n                               Embed\n                                u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n 4. \\<And>t P.\n       \\<lbrakk>\\<And>Q. sound Q \\<Longrightarrow> sound (t Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> sound\n                          (wp (body ;;\n                               Embed\n                                t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                            P)\n 5. le_trans\n     (wp (body ;;\n          Embed\n           ?v \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     ?v\n 6. \\<And>P. sound P \\<Longrightarrow> sound (?v P)", "assume ut: \"\\<And>Q. sound Q \\<Longrightarrow> sound (t Q)\" and uP: \"sound P\""], ["proof (state)\nthis:\n  sound ?Q \\<Longrightarrow> sound (t ?Q)\n  sound P\n\ngoal (6 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>sound P; sound Q\\<rbrakk>\n       \\<Longrightarrow> sound\n                          (\\<lambda>a.\n                              \\<guillemotleft> G \\<guillemotright> a *\n                              wp body Q a +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> a *\n                              P a)\n 2. \\<And>P Pa Q x.\n       \\<lbrakk>sound P; sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wp body Pa x +\n                         \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n                         \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                               wp body Q x +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> x *\n                               P x\n 3. \\<And>t u.\n       \\<lbrakk>le_trans t u;\n        \\<And>P. sound P \\<Longrightarrow> sound (t P);\n        \\<And>P. sound P \\<Longrightarrow> sound (u P)\\<rbrakk>\n       \\<Longrightarrow> le_trans\n                          (wp (body ;;\n                               Embed\n                                t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wp (body ;;\n                               Embed\n                                u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n 4. \\<And>t P.\n       \\<lbrakk>\\<And>Q. sound Q \\<Longrightarrow> sound (t Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> sound\n                          (wp (body ;;\n                               Embed\n                                t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                            P)\n 5. le_trans\n     (wp (body ;;\n          Embed\n           ?v \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     ?v\n 6. \\<And>P. sound P \\<Longrightarrow> sound (?v P)", "with healthy"], ["proof (chain)\npicking this:\n  healthy (wp body)\n  sound ?Q \\<Longrightarrow> sound (t ?Q)\n  sound P", "show \"sound (wp (?Z t) P)\""], ["proof (prove)\nusing this:\n  healthy (wp body)\n  sound ?Q \\<Longrightarrow> sound (t ?Q)\n  sound P\n\ngoal (1 subgoal):\n 1. sound\n     (wp (body ;;\n          Embed\n           t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n       P)", "by(rule wp_loop_step_sound)"], ["proof (state)\nthis:\n  sound\n   (wp (body ;;\n        Embed\n         t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     P)\n\ngoal (5 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>sound P; sound Q\\<rbrakk>\n       \\<Longrightarrow> sound\n                          (\\<lambda>a.\n                              \\<guillemotleft> G \\<guillemotright> a *\n                              wp body Q a +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> a *\n                              P a)\n 2. \\<And>P Pa Q x.\n       \\<lbrakk>sound P; sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wp body Pa x +\n                         \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n                         \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                               wp body Q x +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> x *\n                               P x\n 3. \\<And>t u.\n       \\<lbrakk>le_trans t u;\n        \\<And>P. sound P \\<Longrightarrow> sound (t P);\n        \\<And>P. sound P \\<Longrightarrow> sound (u P)\\<rbrakk>\n       \\<Longrightarrow> le_trans\n                          (wp (body ;;\n                               Embed\n                                t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wp (body ;;\n                               Embed\n                                u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n 4. le_trans\n     (wp (body ;;\n          Embed\n           ?v \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     ?v\n 5. \\<And>P. sound P \\<Longrightarrow> sound (?v P)", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>sound P; sound Q\\<rbrakk>\n       \\<Longrightarrow> sound\n                          (\\<lambda>a.\n                              \\<guillemotleft> G \\<guillemotright> a *\n                              wp body Q a +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> a *\n                              P a)\n 2. \\<And>P Pa Q x.\n       \\<lbrakk>sound P; sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wp body Pa x +\n                         \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n                         \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                               wp body Q x +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> x *\n                               P x\n 3. \\<And>t u.\n       \\<lbrakk>le_trans t u;\n        \\<And>P. sound P \\<Longrightarrow> sound (t P);\n        \\<And>P. sound P \\<Longrightarrow> sound (u P)\\<rbrakk>\n       \\<Longrightarrow> le_trans\n                          (wp (body ;;\n                               Embed\n                                t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wp (body ;;\n                               Embed\n                                u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n 4. le_trans\n     (wp (body ;;\n          Embed\n           ?v \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     ?v\n 5. \\<And>P. sound P \\<Longrightarrow> sound (?v P)", "fix P Q::\"'s expect\""], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>sound P; sound Q\\<rbrakk>\n       \\<Longrightarrow> sound\n                          (\\<lambda>a.\n                              \\<guillemotleft> G \\<guillemotright> a *\n                              wp body Q a +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> a *\n                              P a)\n 2. \\<And>P Pa Q x.\n       \\<lbrakk>sound P; sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wp body Pa x +\n                         \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n                         \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                               wp body Q x +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> x *\n                               P x\n 3. \\<And>t u.\n       \\<lbrakk>le_trans t u;\n        \\<And>P. sound P \\<Longrightarrow> sound (t P);\n        \\<And>P. sound P \\<Longrightarrow> sound (u P)\\<rbrakk>\n       \\<Longrightarrow> le_trans\n                          (wp (body ;;\n                               Embed\n                                t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wp (body ;;\n                               Embed\n                                u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n 4. le_trans\n     (wp (body ;;\n          Embed\n           ?v \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     ?v\n 5. \\<And>P. sound P \\<Longrightarrow> sound (?v P)", "assume sP: \"sound P\" and sQ: \"sound Q\""], ["proof (state)\nthis:\n  sound P\n  sound Q\n\ngoal (5 subgoals):\n 1. \\<And>P Q.\n       \\<lbrakk>sound P; sound Q\\<rbrakk>\n       \\<Longrightarrow> sound\n                          (\\<lambda>a.\n                              \\<guillemotleft> G \\<guillemotright> a *\n                              wp body Q a +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> a *\n                              P a)\n 2. \\<And>P Pa Q x.\n       \\<lbrakk>sound P; sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wp body Pa x +\n                         \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n                         \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                               wp body Q x +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> x *\n                               P x\n 3. \\<And>t u.\n       \\<lbrakk>le_trans t u;\n        \\<And>P. sound P \\<Longrightarrow> sound (t P);\n        \\<And>P. sound P \\<Longrightarrow> sound (u P)\\<rbrakk>\n       \\<Longrightarrow> le_trans\n                          (wp (body ;;\n                               Embed\n                                t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wp (body ;;\n                               Embed\n                                u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n 4. le_trans\n     (wp (body ;;\n          Embed\n           ?v \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     ?v\n 5. \\<And>P. sound P \\<Longrightarrow> sound (?v P)", "show \"sound (\\<lambda>a. \\<guillemotleft> G \\<guillemotright> a * wp body Q a + \\<guillemotleft> \\<N> G \\<guillemotright> a * P a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sound\n     (\\<lambda>a.\n         \\<guillemotleft> G \\<guillemotright> a * wp body Q a +\n         \\<guillemotleft> \\<N> G \\<guillemotright> a * P a)", "proof(intro soundI2 nnegI bounded_byI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body Q x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> ?b\n 2. \\<And>x.\n       0 \\<le> \\<guillemotleft> G \\<guillemotright> x * wp body Q x +\n               \\<guillemotleft> \\<N> G \\<guillemotright> x * P x", "fix s::'s"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body Q x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> ?b\n 2. \\<And>x.\n       0 \\<le> \\<guillemotleft> G \\<guillemotright> x * wp body Q x +\n               \\<guillemotleft> \\<N> G \\<guillemotright> x * P x", "from sQ"], ["proof (chain)\npicking this:\n  sound Q", "have \"nneg Q\" \"bounded_by (bound_of Q) Q\""], ["proof (prove)\nusing this:\n  sound Q\n\ngoal (1 subgoal):\n 1. nneg Q &&& bounded_by (bound_of Q) Q", "by(auto)"], ["proof (state)\nthis:\n  nneg Q\n  bounded_by (bound_of Q) Q\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body Q x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> ?b\n 2. \\<And>x.\n       0 \\<le> \\<guillemotleft> G \\<guillemotright> x * wp body Q x +\n               \\<guillemotleft> \\<N> G \\<guillemotright> x * P x", "with healthy"], ["proof (chain)\npicking this:\n  healthy (wp body)\n  nneg Q\n  bounded_by (bound_of Q) Q", "have \"bounded_by (bound_of Q) (wp body Q)\""], ["proof (prove)\nusing this:\n  healthy (wp body)\n  nneg Q\n  bounded_by (bound_of Q) Q\n\ngoal (1 subgoal):\n 1. bounded_by (bound_of Q) (wp body Q)", "by(auto)"], ["proof (state)\nthis:\n  bounded_by (bound_of Q) (wp body Q)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body Q x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> ?b\n 2. \\<And>x.\n       0 \\<le> \\<guillemotleft> G \\<guillemotright> x * wp body Q x +\n               \\<guillemotleft> \\<N> G \\<guillemotright> x * P x", "hence \"wp body Q s \\<le> bound_of Q\""], ["proof (prove)\nusing this:\n  bounded_by (bound_of Q) (wp body Q)\n\ngoal (1 subgoal):\n 1. wp body Q s \\<le> bound_of Q", "by(auto)"], ["proof (state)\nthis:\n  wp body Q s \\<le> bound_of Q\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body Q x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> ?b\n 2. \\<And>x.\n       0 \\<le> \\<guillemotleft> G \\<guillemotright> x * wp body Q x +\n               \\<guillemotleft> \\<N> G \\<guillemotright> x * P x", "hence \"wp body Q s \\<le> max (bound_of P) (bound_of Q)\""], ["proof (prove)\nusing this:\n  wp body Q s \\<le> bound_of Q\n\ngoal (1 subgoal):\n 1. wp body Q s \\<le> max (bound_of P) (bound_of Q)", "by(auto)"], ["proof (state)\nthis:\n  wp body Q s \\<le> max (bound_of P) (bound_of Q)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body Q x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> ?b\n 2. \\<And>x.\n       0 \\<le> \\<guillemotleft> G \\<guillemotright> x * wp body Q x +\n               \\<guillemotleft> \\<N> G \\<guillemotright> x * P x", "moreover"], ["proof (state)\nthis:\n  wp body Q s \\<le> max (bound_of P) (bound_of Q)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body Q x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> ?b\n 2. \\<And>x.\n       0 \\<le> \\<guillemotleft> G \\<guillemotright> x * wp body Q x +\n               \\<guillemotleft> \\<N> G \\<guillemotright> x * P x", "{"], ["proof (state)\nthis:\n  wp body Q s \\<le> max (bound_of P) (bound_of Q)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body Q x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> ?b\n 2. \\<And>x.\n       0 \\<le> \\<guillemotleft> G \\<guillemotright> x * wp body Q x +\n               \\<guillemotleft> \\<N> G \\<guillemotright> x * P x", "from sP"], ["proof (chain)\npicking this:\n  sound P", "have \"P s \\<le> bound_of P\""], ["proof (prove)\nusing this:\n  sound P\n\ngoal (1 subgoal):\n 1. P s \\<le> bound_of P", "by(auto)"], ["proof (state)\nthis:\n  P s \\<le> bound_of P\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body Q x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> ?b\n 2. \\<And>x.\n       0 \\<le> \\<guillemotleft> G \\<guillemotright> x * wp body Q x +\n               \\<guillemotleft> \\<N> G \\<guillemotright> x * P x", "hence \"P s \\<le> max (bound_of P) (bound_of Q)\""], ["proof (prove)\nusing this:\n  P s \\<le> bound_of P\n\ngoal (1 subgoal):\n 1. P s \\<le> max (bound_of P) (bound_of Q)", "by(auto)"], ["proof (state)\nthis:\n  P s \\<le> max (bound_of P) (bound_of Q)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body Q x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> ?b\n 2. \\<And>x.\n       0 \\<le> \\<guillemotleft> G \\<guillemotright> x * wp body Q x +\n               \\<guillemotleft> \\<N> G \\<guillemotright> x * P x", "}"], ["proof (state)\nthis:\n  P s \\<le> max (bound_of P) (bound_of Q)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body Q x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> ?b\n 2. \\<And>x.\n       0 \\<le> \\<guillemotleft> G \\<guillemotright> x * wp body Q x +\n               \\<guillemotleft> \\<N> G \\<guillemotright> x * P x", "ultimately"], ["proof (chain)\npicking this:\n  wp body Q s \\<le> max (bound_of P) (bound_of Q)\n  P s \\<le> max (bound_of P) (bound_of Q)", "have \"\\<guillemotleft>G\\<guillemotright> s * wp body Q s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s \\<le>\n                       \\<guillemotleft>G\\<guillemotright> s * max (bound_of P) (bound_of Q) +\n                       \\<guillemotleft>\\<N> G\\<guillemotright> s * max (bound_of P) (bound_of Q)\""], ["proof (prove)\nusing this:\n  wp body Q s \\<le> max (bound_of P) (bound_of Q)\n  P s \\<le> max (bound_of P) (bound_of Q)\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n    \\<guillemotleft> \\<N> G \\<guillemotright> s * P s\n    \\<le> \\<guillemotleft> G \\<guillemotright> s *\n          max (bound_of P) (bound_of Q) +\n          \\<guillemotleft> \\<N> G \\<guillemotright> s *\n          max (bound_of P) (bound_of Q)", "by(auto intro!:add_mono mult_left_mono)"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n  \\<guillemotleft> \\<N> G \\<guillemotright> s * P s\n  \\<le> \\<guillemotleft> G \\<guillemotright> s *\n        max (bound_of P) (bound_of Q) +\n        \\<guillemotleft> \\<N> G \\<guillemotright> s *\n        max (bound_of P) (bound_of Q)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body Q x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> ?b\n 2. \\<And>x.\n       0 \\<le> \\<guillemotleft> G \\<guillemotright> x * wp body Q x +\n               \\<guillemotleft> \\<N> G \\<guillemotright> x * P x", "also"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n  \\<guillemotleft> \\<N> G \\<guillemotright> s * P s\n  \\<le> \\<guillemotleft> G \\<guillemotright> s *\n        max (bound_of P) (bound_of Q) +\n        \\<guillemotleft> \\<N> G \\<guillemotright> s *\n        max (bound_of P) (bound_of Q)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body Q x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> ?b\n 2. \\<And>x.\n       0 \\<le> \\<guillemotleft> G \\<guillemotright> x * wp body Q x +\n               \\<guillemotleft> \\<N> G \\<guillemotright> x * P x", "have \"... = max (bound_of P) (bound_of Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * max (bound_of P) (bound_of Q) +\n    \\<guillemotleft> \\<N> G \\<guillemotright> s *\n    max (bound_of P) (bound_of Q) =\n    max (bound_of P) (bound_of Q)", "by(simp add:algebra_simps negate_embed)"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * max (bound_of P) (bound_of Q) +\n  \\<guillemotleft> \\<N> G \\<guillemotright> s *\n  max (bound_of P) (bound_of Q) =\n  max (bound_of P) (bound_of Q)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body Q x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> ?b\n 2. \\<And>x.\n       0 \\<le> \\<guillemotleft> G \\<guillemotright> x * wp body Q x +\n               \\<guillemotleft> \\<N> G \\<guillemotright> x * P x", "finally"], ["proof (chain)\npicking this:\n  \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n  \\<guillemotleft> \\<N> G \\<guillemotright> s * P s\n  \\<le> max (bound_of P) (bound_of Q)", "show \"\\<guillemotleft>G\\<guillemotright> s * wp body Q s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s \\<le> max (bound_of P) (bound_of Q)\""], ["proof (prove)\nusing this:\n  \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n  \\<guillemotleft> \\<N> G \\<guillemotright> s * P s\n  \\<le> max (bound_of P) (bound_of Q)\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n    \\<guillemotleft> \\<N> G \\<guillemotright> s * P s\n    \\<le> max (bound_of P) (bound_of Q)", "."], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n  \\<guillemotleft> \\<N> G \\<guillemotright> s * P s\n  \\<le> max (bound_of P) (bound_of Q)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 \\<le> \\<guillemotleft> G \\<guillemotright> x * wp body Q x +\n               \\<guillemotleft> \\<N> G \\<guillemotright> x * P x", "from sP"], ["proof (chain)\npicking this:\n  sound P", "have \"0 \\<le> P s\""], ["proof (prove)\nusing this:\n  sound P\n\ngoal (1 subgoal):\n 1. 0 \\<le> P s", "by(auto)"], ["proof (state)\nthis:\n  0 \\<le> P s\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 \\<le> \\<guillemotleft> G \\<guillemotright> x * wp body Q x +\n               \\<guillemotleft> \\<N> G \\<guillemotright> x * P x", "moreover"], ["proof (state)\nthis:\n  0 \\<le> P s\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 \\<le> \\<guillemotleft> G \\<guillemotright> x * wp body Q x +\n               \\<guillemotleft> \\<N> G \\<guillemotright> x * P x", "from sQ healthy"], ["proof (chain)\npicking this:\n  sound Q\n  healthy (wp body)", "have \"0 \\<le> wp body Q s\""], ["proof (prove)\nusing this:\n  sound Q\n  healthy (wp body)\n\ngoal (1 subgoal):\n 1. 0 \\<le> wp body Q s", "by(auto)"], ["proof (state)\nthis:\n  0 \\<le> wp body Q s\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       0 \\<le> \\<guillemotleft> G \\<guillemotright> x * wp body Q x +\n               \\<guillemotleft> \\<N> G \\<guillemotright> x * P x", "ultimately"], ["proof (chain)\npicking this:\n  0 \\<le> P s\n  0 \\<le> wp body Q s", "show \"0 \\<le> \\<guillemotleft>G\\<guillemotright> s * wp body Q s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s\""], ["proof (prove)\nusing this:\n  0 \\<le> P s\n  0 \\<le> wp body Q s\n\ngoal (1 subgoal):\n 1. 0 \\<le> \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n            \\<guillemotleft> \\<N> G \\<guillemotright> s * P s", "by(auto intro:add_nonneg_nonneg mult_nonneg_nonneg)"], ["proof (state)\nthis:\n  0 \\<le> \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n          \\<guillemotleft> \\<N> G \\<guillemotright> s * P s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sound\n   (\\<lambda>a.\n       \\<guillemotleft> G \\<guillemotright> a * wp body Q a +\n       \\<guillemotleft> \\<N> G \\<guillemotright> a * P a)\n\ngoal (4 subgoals):\n 1. \\<And>P Pa Q x.\n       \\<lbrakk>sound P; sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wp body Pa x +\n                         \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n                         \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                               wp body Q x +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> x *\n                               P x\n 2. \\<And>t u.\n       \\<lbrakk>le_trans t u;\n        \\<And>P. sound P \\<Longrightarrow> sound (t P);\n        \\<And>P. sound P \\<Longrightarrow> sound (u P)\\<rbrakk>\n       \\<Longrightarrow> le_trans\n                          (wp (body ;;\n                               Embed\n                                t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wp (body ;;\n                               Embed\n                                u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n 3. le_trans\n     (wp (body ;;\n          Embed\n           ?v \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     ?v\n 4. \\<And>P. sound P \\<Longrightarrow> sound (?v P)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>P Pa Q x.\n       \\<lbrakk>sound P; sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wp body Pa x +\n                         \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n                         \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                               wp body Q x +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> x *\n                               P x\n 2. \\<And>t u.\n       \\<lbrakk>le_trans t u;\n        \\<And>P. sound P \\<Longrightarrow> sound (t P);\n        \\<And>P. sound P \\<Longrightarrow> sound (u P)\\<rbrakk>\n       \\<Longrightarrow> le_trans\n                          (wp (body ;;\n                               Embed\n                                t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wp (body ;;\n                               Embed\n                                u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n 3. le_trans\n     (wp (body ;;\n          Embed\n           ?v \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     ?v\n 4. \\<And>P. sound P \\<Longrightarrow> sound (?v P)", "fix P Q R::\"'s expect\" and s::'s"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>P Pa Q x.\n       \\<lbrakk>sound P; sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wp body Pa x +\n                         \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n                         \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                               wp body Q x +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> x *\n                               P x\n 2. \\<And>t u.\n       \\<lbrakk>le_trans t u;\n        \\<And>P. sound P \\<Longrightarrow> sound (t P);\n        \\<And>P. sound P \\<Longrightarrow> sound (u P)\\<rbrakk>\n       \\<Longrightarrow> le_trans\n                          (wp (body ;;\n                               Embed\n                                t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wp (body ;;\n                               Embed\n                                u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n 3. le_trans\n     (wp (body ;;\n          Embed\n           ?v \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     ?v\n 4. \\<And>P. sound P \\<Longrightarrow> sound (?v P)", "assume sQ: \"sound Q\" and sR: \"sound R\"\n       and le: \"Q \\<tturnstile> R\""], ["proof (state)\nthis:\n  sound Q\n  sound R\n  Q \\<tturnstile> R\n\ngoal (4 subgoals):\n 1. \\<And>P Pa Q x.\n       \\<lbrakk>sound P; sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wp body Pa x +\n                         \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n                         \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                               wp body Q x +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> x *\n                               P x\n 2. \\<And>t u.\n       \\<lbrakk>le_trans t u;\n        \\<And>P. sound P \\<Longrightarrow> sound (t P);\n        \\<And>P. sound P \\<Longrightarrow> sound (u P)\\<rbrakk>\n       \\<Longrightarrow> le_trans\n                          (wp (body ;;\n                               Embed\n                                t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wp (body ;;\n                               Embed\n                                u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n 3. le_trans\n     (wp (body ;;\n          Embed\n           ?v \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     ?v\n 4. \\<And>P. sound P \\<Longrightarrow> sound (?v P)", "hence \"wp body Q s \\<le> wp body R s\""], ["proof (prove)\nusing this:\n  sound Q\n  sound R\n  Q \\<tturnstile> R\n\ngoal (1 subgoal):\n 1. wp body Q s \\<le> wp body R s", "by(blast intro:le_funD[OF mono_transD, OF healthy_monoD, OF healthy])"], ["proof (state)\nthis:\n  wp body Q s \\<le> wp body R s\n\ngoal (4 subgoals):\n 1. \\<And>P Pa Q x.\n       \\<lbrakk>sound P; sound Pa; sound Q; Pa \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wp body Pa x +\n                         \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n                         \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                               wp body Q x +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> x *\n                               P x\n 2. \\<And>t u.\n       \\<lbrakk>le_trans t u;\n        \\<And>P. sound P \\<Longrightarrow> sound (t P);\n        \\<And>P. sound P \\<Longrightarrow> sound (u P)\\<rbrakk>\n       \\<Longrightarrow> le_trans\n                          (wp (body ;;\n                               Embed\n                                t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wp (body ;;\n                               Embed\n                                u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n 3. le_trans\n     (wp (body ;;\n          Embed\n           ?v \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     ?v\n 4. \\<And>P. sound P \\<Longrightarrow> sound (?v P)", "thus \"\\<guillemotleft>G\\<guillemotright> s * wp body Q s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s \\<le>\n          \\<guillemotleft>G\\<guillemotright> s * wp body R s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s\""], ["proof (prove)\nusing this:\n  wp body Q s \\<le> wp body R s\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n    \\<guillemotleft> \\<N> G \\<guillemotright> s * P s\n    \\<le> \\<guillemotleft> G \\<guillemotright> s * wp body R s +\n          \\<guillemotleft> \\<N> G \\<guillemotright> s * P s", "by(auto intro:mult_left_mono)"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n  \\<guillemotleft> \\<N> G \\<guillemotright> s * P s\n  \\<le> \\<guillemotleft> G \\<guillemotright> s * wp body R s +\n        \\<guillemotleft> \\<N> G \\<guillemotright> s * P s\n\ngoal (3 subgoals):\n 1. \\<And>t u.\n       \\<lbrakk>le_trans t u;\n        \\<And>P. sound P \\<Longrightarrow> sound (t P);\n        \\<And>P. sound P \\<Longrightarrow> sound (u P)\\<rbrakk>\n       \\<Longrightarrow> le_trans\n                          (wp (body ;;\n                               Embed\n                                t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wp (body ;;\n                               Embed\n                                u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n 2. le_trans\n     (wp (body ;;\n          Embed\n           ?v \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     ?v\n 3. \\<And>P. sound P \\<Longrightarrow> sound (?v P)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>t u.\n       \\<lbrakk>le_trans t u;\n        \\<And>P. sound P \\<Longrightarrow> sound (t P);\n        \\<And>P. sound P \\<Longrightarrow> sound (u P)\\<rbrakk>\n       \\<Longrightarrow> le_trans\n                          (wp (body ;;\n                               Embed\n                                t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wp (body ;;\n                               Embed\n                                u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n 2. le_trans\n     (wp (body ;;\n          Embed\n           ?v \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     ?v\n 3. \\<And>P. sound P \\<Longrightarrow> sound (?v P)", "fix t u::\"'s trans\""], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>t u.\n       \\<lbrakk>le_trans t u;\n        \\<And>P. sound P \\<Longrightarrow> sound (t P);\n        \\<And>P. sound P \\<Longrightarrow> sound (u P)\\<rbrakk>\n       \\<Longrightarrow> le_trans\n                          (wp (body ;;\n                               Embed\n                                t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wp (body ;;\n                               Embed\n                                u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n 2. le_trans\n     (wp (body ;;\n          Embed\n           ?v \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     ?v\n 3. \\<And>P. sound P \\<Longrightarrow> sound (?v P)", "assume le: \"le_trans t u\"\n       and st: \"\\<And>P. sound P \\<Longrightarrow> sound (t P)\"\n       and su: \"\\<And>P. sound P \\<Longrightarrow> sound (u P)\""], ["proof (state)\nthis:\n  le_trans t u\n  sound ?P \\<Longrightarrow> sound (t ?P)\n  sound ?P \\<Longrightarrow> sound (u ?P)\n\ngoal (3 subgoals):\n 1. \\<And>t u.\n       \\<lbrakk>le_trans t u;\n        \\<And>P. sound P \\<Longrightarrow> sound (t P);\n        \\<And>P. sound P \\<Longrightarrow> sound (u P)\\<rbrakk>\n       \\<Longrightarrow> le_trans\n                          (wp (body ;;\n                               Embed\n                                t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wp (body ;;\n                               Embed\n                                u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n 2. le_trans\n     (wp (body ;;\n          Embed\n           ?v \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     ?v\n 3. \\<And>P. sound P \\<Longrightarrow> sound (?v P)", "with healthy"], ["proof (chain)\npicking this:\n  healthy (wp body)\n  le_trans t u\n  sound ?P \\<Longrightarrow> sound (t ?P)\n  sound ?P \\<Longrightarrow> sound (u ?P)", "show \"le_trans (wp (?Z t)) (wp (?Z u))\""], ["proof (prove)\nusing this:\n  healthy (wp body)\n  le_trans t u\n  sound ?P \\<Longrightarrow> sound (t ?P)\n  sound ?P \\<Longrightarrow> sound (u ?P)\n\ngoal (1 subgoal):\n 1. le_trans\n     (wp (body ;;\n          Embed\n           t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     (wp (body ;;\n          Embed\n           u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "by(rule wp_loop_step_mono)"], ["proof (state)\nthis:\n  le_trans\n   (wp (body ;;\n        Embed\n         t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n   (wp (body ;;\n        Embed\n         u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal (2 subgoals):\n 1. le_trans\n     (wp (body ;;\n          Embed\n           ?v \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     ?v\n 2. \\<And>P. sound P \\<Longrightarrow> sound (?v P)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. le_trans\n     (wp (body ;;\n          Embed\n           ?v \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     ?v\n 2. \\<And>P. sound P \\<Longrightarrow> sound (?v P)", "from healthy"], ["proof (chain)\npicking this:\n  healthy (wp body)", "show \"le_trans (wp (?Z (\\<lambda>P s. bound_of P))) (\\<lambda>P s. bound_of P)\""], ["proof (prove)\nusing this:\n  healthy (wp body)\n\ngoal (1 subgoal):\n 1. le_trans\n     (wp (body ;;\n          Embed\n           (\\<lambda>a b.\n               bound_of\n                a) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     (\\<lambda>P s. bound_of P)", "by(intro le_transI, simp add:wp_eval lfp_loop_fp[unfolded negate_embed])"], ["proof (state)\nthis:\n  le_trans\n   (wp (body ;;\n        Embed\n         (\\<lambda>a b.\n             bound_of\n              a) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n   (\\<lambda>P s. bound_of P)\n\ngoal (1 subgoal):\n 1. \\<And>P. sound P \\<Longrightarrow> sound (\\<lambda>s. bound_of P)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P. sound P \\<Longrightarrow> sound (\\<lambda>s. bound_of P)", "fix P::\"'s expect\" and s::'s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P. sound P \\<Longrightarrow> sound (\\<lambda>s. bound_of P)", "assume \"sound P\""], ["proof (state)\nthis:\n  sound P\n\ngoal (1 subgoal):\n 1. \\<And>P. sound P \\<Longrightarrow> sound (\\<lambda>s. bound_of P)", "thus \"sound (\\<lambda>s. bound_of P)\""], ["proof (prove)\nusing this:\n  sound P\n\ngoal (1 subgoal):\n 1. sound (\\<lambda>s. bound_of P)", "by(auto)"], ["proof (state)\nthis:\n  sound (\\<lambda>s. bound_of P)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  wp (\\<mu>x.\n         body ;;\n         x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n   P =\n  lfp_exp\n   (\\<lambda>Q s.\n       \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n       \\<guillemotleft> \\<N> G \\<guillemotright> s * P s)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nearly_healthy_wlp_loop:\n  fixes body::\"'s prog\"\n  assumes hb: \"nearly_healthy (wlp body)\"\n  shows \"nearly_healthy (wlp (do G \\<longrightarrow> body od))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nearly_healthy\n     (wlp (\\<mu>x.\n              body ;;\n              x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "proof(intro nearly_healthyI unitaryI2 nnegI2 bounded_byI2, simp_all add:wlp_Loop1 hb)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>P.\n       unitary P \\<Longrightarrow>\n       \\<lambda>s.\n          0 \\<tturnstile> gfp_exp\n                           (\\<lambda>Q s.\n                               \\<guillemotleft> G \\<guillemotright> s *\n                               wlp body Q s +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                               P s)\n 2. \\<And>P.\n       unitary P \\<Longrightarrow>\n       gfp_exp\n        (\\<lambda>Q s.\n            \\<guillemotleft> G \\<guillemotright> s * wlp body Q s +\n            \\<guillemotleft> \\<N> G \\<guillemotright> s *\n            P s) \\<tturnstile> \\<lambda>s. 1\n 3. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> gfp_exp\n                          (\\<lambda>Q s.\n                              \\<guillemotleft> G \\<guillemotright> s *\n                              wlp body Q s +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                              P s) \\<tturnstile> gfp_exp\n            (\\<lambda>Qa s.\n                \\<guillemotleft> G \\<guillemotright> s * wlp body Qa s +\n                \\<guillemotleft> \\<N> G \\<guillemotright> s * Q s)", "fix P::\"'s expect\""], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>P.\n       unitary P \\<Longrightarrow>\n       \\<lambda>s.\n          0 \\<tturnstile> gfp_exp\n                           (\\<lambda>Q s.\n                               \\<guillemotleft> G \\<guillemotright> s *\n                               wlp body Q s +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                               P s)\n 2. \\<And>P.\n       unitary P \\<Longrightarrow>\n       gfp_exp\n        (\\<lambda>Q s.\n            \\<guillemotleft> G \\<guillemotright> s * wlp body Q s +\n            \\<guillemotleft> \\<N> G \\<guillemotright> s *\n            P s) \\<tturnstile> \\<lambda>s. 1\n 3. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> gfp_exp\n                          (\\<lambda>Q s.\n                              \\<guillemotleft> G \\<guillemotright> s *\n                              wlp body Q s +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                              P s) \\<tturnstile> gfp_exp\n            (\\<lambda>Qa s.\n                \\<guillemotleft> G \\<guillemotright> s * wlp body Qa s +\n                \\<guillemotleft> \\<N> G \\<guillemotright> s * Q s)", "assume uP: \"unitary P\""], ["proof (state)\nthis:\n  unitary P\n\ngoal (3 subgoals):\n 1. \\<And>P.\n       unitary P \\<Longrightarrow>\n       \\<lambda>s.\n          0 \\<tturnstile> gfp_exp\n                           (\\<lambda>Q s.\n                               \\<guillemotleft> G \\<guillemotright> s *\n                               wlp body Q s +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                               P s)\n 2. \\<And>P.\n       unitary P \\<Longrightarrow>\n       gfp_exp\n        (\\<lambda>Q s.\n            \\<guillemotleft> G \\<guillemotright> s * wlp body Q s +\n            \\<guillemotleft> \\<N> G \\<guillemotright> s *\n            P s) \\<tturnstile> \\<lambda>s. 1\n 3. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> gfp_exp\n                          (\\<lambda>Q s.\n                              \\<guillemotleft> G \\<guillemotright> s *\n                              wlp body Q s +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                              P s) \\<tturnstile> gfp_exp\n            (\\<lambda>Qa s.\n                \\<guillemotleft> G \\<guillemotright> s * wlp body Qa s +\n                \\<guillemotleft> \\<N> G \\<guillemotright> s * Q s)", "let \"?X R\" = \"\\<lambda>Q s. \\<guillemotleft> G \\<guillemotright> s * wlp body Q s + \\<guillemotleft> \\<N> G \\<guillemotright> s * R s\""], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>P.\n       unitary P \\<Longrightarrow>\n       \\<lambda>s.\n          0 \\<tturnstile> gfp_exp\n                           (\\<lambda>Q s.\n                               \\<guillemotleft> G \\<guillemotright> s *\n                               wlp body Q s +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                               P s)\n 2. \\<And>P.\n       unitary P \\<Longrightarrow>\n       gfp_exp\n        (\\<lambda>Q s.\n            \\<guillemotleft> G \\<guillemotright> s * wlp body Q s +\n            \\<guillemotleft> \\<N> G \\<guillemotright> s *\n            P s) \\<tturnstile> \\<lambda>s. 1\n 3. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> gfp_exp\n                          (\\<lambda>Q s.\n                              \\<guillemotleft> G \\<guillemotright> s *\n                              wlp body Q s +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                              P s) \\<tturnstile> gfp_exp\n            (\\<lambda>Qa s.\n                \\<guillemotleft> G \\<guillemotright> s * wlp body Qa s +\n                \\<guillemotleft> \\<N> G \\<guillemotright> s * Q s)", "show \"\\<lambda>s. 0 \\<tturnstile> gfp_exp (?X P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lambda>s.\n       0 \\<tturnstile> gfp_exp\n                        (\\<lambda>a b.\n                            \\<guillemotleft> G \\<guillemotright> b *\n                            wlp body a b +\n                            \\<guillemotleft> \\<N> G \\<guillemotright> b *\n                            P b)", "proof(rule gfp_exp_upperbound)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lambda>s.\n       0 \\<tturnstile> \\<lambda>a.\n                          \\<guillemotleft> G \\<guillemotright> a *\n                          wlp body (\\<lambda>a. 0) a +\n                          \\<guillemotleft> \\<N> G \\<guillemotright> a * P a\n 2. unitary (\\<lambda>s. 0)", "show \"unitary (\\<lambda>s. 0::real)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. unitary (\\<lambda>s. 0)", "by(auto)"], ["proof (state)\nthis:\n  unitary (\\<lambda>s. 0)\n\ngoal (1 subgoal):\n 1. \\<lambda>s.\n       0 \\<tturnstile> \\<lambda>a.\n                          \\<guillemotleft> G \\<guillemotright> a *\n                          wlp body (\\<lambda>a. 0) a +\n                          \\<guillemotleft> \\<N> G \\<guillemotright> a * P a", "with hb"], ["proof (chain)\npicking this:\n  nearly_healthy (wlp body)\n  unitary (\\<lambda>s. 0)", "have \"unitary (wlp body (\\<lambda>s. 0))\""], ["proof (prove)\nusing this:\n  nearly_healthy (wlp body)\n  unitary (\\<lambda>s. 0)\n\ngoal (1 subgoal):\n 1. unitary (wlp body (\\<lambda>s. 0))", "by(auto)"], ["proof (state)\nthis:\n  unitary (wlp body (\\<lambda>s. 0))\n\ngoal (1 subgoal):\n 1. \\<lambda>s.\n       0 \\<tturnstile> \\<lambda>a.\n                          \\<guillemotleft> G \\<guillemotright> a *\n                          wlp body (\\<lambda>a. 0) a +\n                          \\<guillemotleft> \\<N> G \\<guillemotright> a * P a", "with uP"], ["proof (chain)\npicking this:\n  unitary P\n  unitary (wlp body (\\<lambda>s. 0))", "show \"\\<lambda>s. 0 \\<tturnstile> (?X P (\\<lambda>s. 0))\""], ["proof (prove)\nusing this:\n  unitary P\n  unitary (wlp body (\\<lambda>s. 0))\n\ngoal (1 subgoal):\n 1. \\<lambda>s.\n       0 \\<tturnstile> \\<lambda>a.\n                          \\<guillemotleft> G \\<guillemotright> a *\n                          wlp body (\\<lambda>a. 0) a +\n                          \\<guillemotleft> \\<N> G \\<guillemotright> a * P a", "by(blast intro!:le_funI add_nonneg_nonneg mult_nonneg_nonneg)"], ["proof (state)\nthis:\n  \\<lambda>s.\n     0 \\<tturnstile> \\<lambda>a.\n                        \\<guillemotleft> G \\<guillemotright> a *\n                        wlp body (\\<lambda>a. 0) a +\n                        \\<guillemotleft> \\<N> G \\<guillemotright> a * P a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lambda>s.\n     0 \\<tturnstile> gfp_exp\n                      (\\<lambda>a b.\n                          \\<guillemotleft> G \\<guillemotright> b *\n                          wlp body a b +\n                          \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n\ngoal (2 subgoals):\n 1. \\<And>P.\n       unitary P \\<Longrightarrow>\n       gfp_exp\n        (\\<lambda>Q s.\n            \\<guillemotleft> G \\<guillemotright> s * wlp body Q s +\n            \\<guillemotleft> \\<N> G \\<guillemotright> s *\n            P s) \\<tturnstile> \\<lambda>s. 1\n 2. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> gfp_exp\n                          (\\<lambda>Q s.\n                              \\<guillemotleft> G \\<guillemotright> s *\n                              wlp body Q s +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                              P s) \\<tturnstile> gfp_exp\n            (\\<lambda>Qa s.\n                \\<guillemotleft> G \\<guillemotright> s * wlp body Qa s +\n                \\<guillemotleft> \\<N> G \\<guillemotright> s * Q s)", "show \"gfp_exp (?X P) \\<tturnstile> \\<lambda>s. 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wlp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b *\n         P b) \\<tturnstile> \\<lambda>s. 1", "proof(rule gfp_exp_least)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Pa.\n       \\<lbrakk>Pa \\<tturnstile> \\<lambda>a.\n                                    \\<guillemotleft> G \\<guillemotright> a *\n                                    wlp body Pa a +\n                                    \\<guillemotleft> \\<N>\n                G \\<guillemotright>\n                                     a *\n                                    P a;\n        unitary Pa\\<rbrakk>\n       \\<Longrightarrow> Pa \\<tturnstile> \\<lambda>s. 1\n 2. unitary (\\<lambda>s. 1)", "show \"unitary (\\<lambda>s. 1::real)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. unitary (\\<lambda>s. 1)", "by(auto)"], ["proof (state)\nthis:\n  unitary (\\<lambda>s. 1)\n\ngoal (1 subgoal):\n 1. \\<And>Pa.\n       \\<lbrakk>Pa \\<tturnstile> \\<lambda>a.\n                                    \\<guillemotleft> G \\<guillemotright> a *\n                                    wlp body Pa a +\n                                    \\<guillemotleft> \\<N>\n                G \\<guillemotright>\n                                     a *\n                                    P a;\n        unitary Pa\\<rbrakk>\n       \\<Longrightarrow> Pa \\<tturnstile> \\<lambda>s. 1", "fix Q::\"'s expect\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Pa.\n       \\<lbrakk>Pa \\<tturnstile> \\<lambda>a.\n                                    \\<guillemotleft> G \\<guillemotright> a *\n                                    wlp body Pa a +\n                                    \\<guillemotleft> \\<N>\n                G \\<guillemotright>\n                                     a *\n                                    P a;\n        unitary Pa\\<rbrakk>\n       \\<Longrightarrow> Pa \\<tturnstile> \\<lambda>s. 1", "assume \"unitary Q\""], ["proof (state)\nthis:\n  unitary Q\n\ngoal (1 subgoal):\n 1. \\<And>Pa.\n       \\<lbrakk>Pa \\<tturnstile> \\<lambda>a.\n                                    \\<guillemotleft> G \\<guillemotright> a *\n                                    wlp body Pa a +\n                                    \\<guillemotleft> \\<N>\n                G \\<guillemotright>\n                                     a *\n                                    P a;\n        unitary Pa\\<rbrakk>\n       \\<Longrightarrow> Pa \\<tturnstile> \\<lambda>s. 1", "thus \"Q \\<tturnstile> \\<lambda>s. 1\""], ["proof (prove)\nusing this:\n  unitary Q\n\ngoal (1 subgoal):\n 1. Q \\<tturnstile> \\<lambda>s. 1", "by(auto)"], ["proof (state)\nthis:\n  Q \\<tturnstile> \\<lambda>s. 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  gfp_exp\n   (\\<lambda>a b.\n       \\<guillemotleft> G \\<guillemotright> b * wlp body a b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b *\n       P b) \\<tturnstile> \\<lambda>s. 1\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> gfp_exp\n                          (\\<lambda>Q s.\n                              \\<guillemotleft> G \\<guillemotright> s *\n                              wlp body Q s +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                              P s) \\<tturnstile> gfp_exp\n            (\\<lambda>Qa s.\n                \\<guillemotleft> G \\<guillemotright> s * wlp body Qa s +\n                \\<guillemotleft> \\<N> G \\<guillemotright> s * Q s)", "fix Q::\"'s expect\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> gfp_exp\n                          (\\<lambda>Q s.\n                              \\<guillemotleft> G \\<guillemotright> s *\n                              wlp body Q s +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                              P s) \\<tturnstile> gfp_exp\n            (\\<lambda>Qa s.\n                \\<guillemotleft> G \\<guillemotright> s * wlp body Qa s +\n                \\<guillemotleft> \\<N> G \\<guillemotright> s * Q s)", "assume uQ: \"unitary Q\" and le: \"P \\<tturnstile> Q\""], ["proof (state)\nthis:\n  unitary Q\n  P \\<tturnstile> Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>unitary P; unitary Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> gfp_exp\n                          (\\<lambda>Q s.\n                              \\<guillemotleft> G \\<guillemotright> s *\n                              wlp body Q s +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                              P s) \\<tturnstile> gfp_exp\n            (\\<lambda>Qa s.\n                \\<guillemotleft> G \\<guillemotright> s * wlp body Qa s +\n                \\<guillemotleft> \\<N> G \\<guillemotright> s * Q s)", "show \"gfp_exp (?X P) \\<tturnstile> gfp_exp (?X Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wlp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b *\n         P b) \\<tturnstile> gfp_exp\n                             (\\<lambda>a b.\n                                 \\<guillemotleft> G \\<guillemotright> b *\n                                 wlp body a b +\n                                 \\<guillemotleft> \\<N> G \\<guillemotright>\n                                  b *\n                                 Q b)", "proof(rule gfp_exp_least)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Pa.\n       \\<lbrakk>Pa \\<tturnstile> \\<lambda>a.\n                                    \\<guillemotleft> G \\<guillemotright> a *\n                                    wlp body Pa a +\n                                    \\<guillemotleft> \\<N>\n                G \\<guillemotright>\n                                     a *\n                                    P a;\n        unitary Pa\\<rbrakk>\n       \\<Longrightarrow> Pa \\<tturnstile> gfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wlp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b * Q b)\n 2. unitary\n     (gfp_exp\n       (\\<lambda>a b.\n           \\<guillemotleft> G \\<guillemotright> b * wlp body a b +\n           \\<guillemotleft> \\<N> G \\<guillemotright> b * Q b))", "fix R::\"'s expect\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Pa.\n       \\<lbrakk>Pa \\<tturnstile> \\<lambda>a.\n                                    \\<guillemotleft> G \\<guillemotright> a *\n                                    wlp body Pa a +\n                                    \\<guillemotleft> \\<N>\n                G \\<guillemotright>\n                                     a *\n                                    P a;\n        unitary Pa\\<rbrakk>\n       \\<Longrightarrow> Pa \\<tturnstile> gfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wlp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b * Q b)\n 2. unitary\n     (gfp_exp\n       (\\<lambda>a b.\n           \\<guillemotleft> G \\<guillemotright> b * wlp body a b +\n           \\<guillemotleft> \\<N> G \\<guillemotright> b * Q b))", "assume uR: \"unitary R\""], ["proof (state)\nthis:\n  unitary R\n\ngoal (2 subgoals):\n 1. \\<And>Pa.\n       \\<lbrakk>Pa \\<tturnstile> \\<lambda>a.\n                                    \\<guillemotleft> G \\<guillemotright> a *\n                                    wlp body Pa a +\n                                    \\<guillemotleft> \\<N>\n                G \\<guillemotright>\n                                     a *\n                                    P a;\n        unitary Pa\\<rbrakk>\n       \\<Longrightarrow> Pa \\<tturnstile> gfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wlp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b * Q b)\n 2. unitary\n     (gfp_exp\n       (\\<lambda>a b.\n           \\<guillemotleft> G \\<guillemotright> b * wlp body a b +\n           \\<guillemotleft> \\<N> G \\<guillemotright> b * Q b))", "assume fp: \"R \\<tturnstile> ?X P R\""], ["proof (state)\nthis:\n  R \\<tturnstile> \\<lambda>a.\n                     \\<guillemotleft> G \\<guillemotright> a * wlp body R a +\n                     \\<guillemotleft> \\<N> G \\<guillemotright> a * P a\n\ngoal (2 subgoals):\n 1. \\<And>Pa.\n       \\<lbrakk>Pa \\<tturnstile> \\<lambda>a.\n                                    \\<guillemotleft> G \\<guillemotright> a *\n                                    wlp body Pa a +\n                                    \\<guillemotleft> \\<N>\n                G \\<guillemotright>\n                                     a *\n                                    P a;\n        unitary Pa\\<rbrakk>\n       \\<Longrightarrow> Pa \\<tturnstile> gfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wlp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b * Q b)\n 2. unitary\n     (gfp_exp\n       (\\<lambda>a b.\n           \\<guillemotleft> G \\<guillemotright> b * wlp body a b +\n           \\<guillemotleft> \\<N> G \\<guillemotright> b * Q b))", "also"], ["proof (state)\nthis:\n  R \\<tturnstile> \\<lambda>a.\n                     \\<guillemotleft> G \\<guillemotright> a * wlp body R a +\n                     \\<guillemotleft> \\<N> G \\<guillemotright> a * P a\n\ngoal (2 subgoals):\n 1. \\<And>Pa.\n       \\<lbrakk>Pa \\<tturnstile> \\<lambda>a.\n                                    \\<guillemotleft> G \\<guillemotright> a *\n                                    wlp body Pa a +\n                                    \\<guillemotleft> \\<N>\n                G \\<guillemotright>\n                                     a *\n                                    P a;\n        unitary Pa\\<rbrakk>\n       \\<Longrightarrow> Pa \\<tturnstile> gfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wlp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b * Q b)\n 2. unitary\n     (gfp_exp\n       (\\<lambda>a b.\n           \\<guillemotleft> G \\<guillemotright> b * wlp body a b +\n           \\<guillemotleft> \\<N> G \\<guillemotright> b * Q b))", "from le"], ["proof (chain)\npicking this:\n  P \\<tturnstile> Q", "have \"... \\<tturnstile> ?X Q R\""], ["proof (prove)\nusing this:\n  P \\<tturnstile> Q\n\ngoal (1 subgoal):\n 1. \\<lambda>a.\n       \\<guillemotleft> G \\<guillemotright> a * wlp body R a +\n       \\<guillemotleft> \\<N> G \\<guillemotright> a *\n       P a \\<tturnstile> \\<lambda>a.\n                            \\<guillemotleft> G \\<guillemotright> a *\n                            wlp body R a +\n                            \\<guillemotleft> \\<N> G \\<guillemotright> a *\n                            Q a", "by(blast intro:add_mono mult_left_mono le_funI)"], ["proof (state)\nthis:\n  \\<lambda>a.\n     \\<guillemotleft> G \\<guillemotright> a * wlp body R a +\n     \\<guillemotleft> \\<N> G \\<guillemotright> a *\n     P a \\<tturnstile> \\<lambda>a.\n                          \\<guillemotleft> G \\<guillemotright> a *\n                          wlp body R a +\n                          \\<guillemotleft> \\<N> G \\<guillemotright> a * Q a\n\ngoal (2 subgoals):\n 1. \\<And>Pa.\n       \\<lbrakk>Pa \\<tturnstile> \\<lambda>a.\n                                    \\<guillemotleft> G \\<guillemotright> a *\n                                    wlp body Pa a +\n                                    \\<guillemotleft> \\<N>\n                G \\<guillemotright>\n                                     a *\n                                    P a;\n        unitary Pa\\<rbrakk>\n       \\<Longrightarrow> Pa \\<tturnstile> gfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wlp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b * Q b)\n 2. unitary\n     (gfp_exp\n       (\\<lambda>a b.\n           \\<guillemotleft> G \\<guillemotright> b * wlp body a b +\n           \\<guillemotleft> \\<N> G \\<guillemotright> b * Q b))", "finally"], ["proof (chain)\npicking this:\n  R \\<tturnstile> \\<lambda>a.\n                     \\<guillemotleft> G \\<guillemotright> a * wlp body R a +\n                     \\<guillemotleft> \\<N> G \\<guillemotright> a * Q a", "show \"R \\<tturnstile> gfp_exp (?X Q)\""], ["proof (prove)\nusing this:\n  R \\<tturnstile> \\<lambda>a.\n                     \\<guillemotleft> G \\<guillemotright> a * wlp body R a +\n                     \\<guillemotleft> \\<N> G \\<guillemotright> a * Q a\n\ngoal (1 subgoal):\n 1. R \\<tturnstile> gfp_exp\n                     (\\<lambda>a b.\n                         \\<guillemotleft> G \\<guillemotright> b *\n                         wlp body a b +\n                         \\<guillemotleft> \\<N> G \\<guillemotright> b * Q b)", "using uR"], ["proof (prove)\nusing this:\n  R \\<tturnstile> \\<lambda>a.\n                     \\<guillemotleft> G \\<guillemotright> a * wlp body R a +\n                     \\<guillemotleft> \\<N> G \\<guillemotright> a * Q a\n  unitary R\n\ngoal (1 subgoal):\n 1. R \\<tturnstile> gfp_exp\n                     (\\<lambda>a b.\n                         \\<guillemotleft> G \\<guillemotright> b *\n                         wlp body a b +\n                         \\<guillemotleft> \\<N> G \\<guillemotright> b * Q b)", "by(auto intro:gfp_exp_upperbound)"], ["proof (state)\nthis:\n  R \\<tturnstile> gfp_exp\n                   (\\<lambda>a b.\n                       \\<guillemotleft> G \\<guillemotright> b *\n                       wlp body a b +\n                       \\<guillemotleft> \\<N> G \\<guillemotright> b * Q b)\n\ngoal (1 subgoal):\n 1. unitary\n     (gfp_exp\n       (\\<lambda>a b.\n           \\<guillemotleft> G \\<guillemotright> b * wlp body a b +\n           \\<guillemotleft> \\<N> G \\<guillemotright> b * Q b))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. unitary\n     (gfp_exp\n       (\\<lambda>a b.\n           \\<guillemotleft> G \\<guillemotright> b * wlp body a b +\n           \\<guillemotleft> \\<N> G \\<guillemotright> b * Q b))", "show \"unitary (gfp_exp (?X Q))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. unitary\n     (gfp_exp\n       (\\<lambda>a b.\n           \\<guillemotleft> G \\<guillemotright> b * wlp body a b +\n           \\<guillemotleft> \\<N> G \\<guillemotright> b * Q b))", "proof(rule gfp_exp_unitary, intro unitaryI2 nnegI bounded_byI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       0 \\<le> \\<guillemotleft> G \\<guillemotright> x * wlp body P x +\n               \\<guillemotleft> \\<N> G \\<guillemotright> x * Q x\n 2. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       \\<guillemotleft> G \\<guillemotright> x * wlp body P x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * Q x\n       \\<le> 1", "fix R::\"'s expect\" and s::'s"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       0 \\<le> \\<guillemotleft> G \\<guillemotright> x * wlp body P x +\n               \\<guillemotleft> \\<N> G \\<guillemotright> x * Q x\n 2. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       \\<guillemotleft> G \\<guillemotright> x * wlp body P x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * Q x\n       \\<le> 1", "assume uR: \"unitary R\""], ["proof (state)\nthis:\n  unitary R\n\ngoal (2 subgoals):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       0 \\<le> \\<guillemotleft> G \\<guillemotright> x * wlp body P x +\n               \\<guillemotleft> \\<N> G \\<guillemotright> x * Q x\n 2. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       \\<guillemotleft> G \\<guillemotright> x * wlp body P x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * Q x\n       \\<le> 1", "with hb"], ["proof (chain)\npicking this:\n  nearly_healthy (wlp body)\n  unitary R", "have ubP: \"unitary (wlp body R)\""], ["proof (prove)\nusing this:\n  nearly_healthy (wlp body)\n  unitary R\n\ngoal (1 subgoal):\n 1. unitary (wlp body R)", "by(auto)"], ["proof (state)\nthis:\n  unitary (wlp body R)\n\ngoal (2 subgoals):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       0 \\<le> \\<guillemotleft> G \\<guillemotright> x * wlp body P x +\n               \\<guillemotleft> \\<N> G \\<guillemotright> x * Q x\n 2. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       \\<guillemotleft> G \\<guillemotright> x * wlp body P x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * Q x\n       \\<le> 1", "with uQ"], ["proof (chain)\npicking this:\n  unitary Q\n  unitary (wlp body R)", "show \"0 \\<le> \\<guillemotleft> G \\<guillemotright> s * wlp body R s + \\<guillemotleft> \\<N> G \\<guillemotright> s * Q s\""], ["proof (prove)\nusing this:\n  unitary Q\n  unitary (wlp body R)\n\ngoal (1 subgoal):\n 1. 0 \\<le> \\<guillemotleft> G \\<guillemotright> s * wlp body R s +\n            \\<guillemotleft> \\<N> G \\<guillemotright> s * Q s", "by(blast intro:add_nonneg_nonneg mult_nonneg_nonneg)"], ["proof (state)\nthis:\n  0 \\<le> \\<guillemotleft> G \\<guillemotright> s * wlp body R s +\n          \\<guillemotleft> \\<N> G \\<guillemotright> s * Q s\n\ngoal (1 subgoal):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       \\<guillemotleft> G \\<guillemotright> x * wlp body P x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * Q x\n       \\<le> 1", "from ubP uQ"], ["proof (chain)\npicking this:\n  unitary (wlp body R)\n  unitary Q", "have \"wlp body R s \\<le> 1\" \"Q s \\<le> 1\""], ["proof (prove)\nusing this:\n  unitary (wlp body R)\n  unitary Q\n\ngoal (1 subgoal):\n 1. wlp body R s \\<le> 1 &&& Q s \\<le> 1", "by(auto)"], ["proof (state)\nthis:\n  wlp body R s \\<le> 1\n  Q s \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       \\<guillemotleft> G \\<guillemotright> x * wlp body P x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * Q x\n       \\<le> 1", "hence \"\\<guillemotleft> G \\<guillemotright> s * wlp body R s + \\<guillemotleft> \\<N> G \\<guillemotright> s * Q s \\<le> \\<guillemotleft>G\\<guillemotright> s * 1 + \\<guillemotleft>\\<N> G\\<guillemotright> s * 1\""], ["proof (prove)\nusing this:\n  wlp body R s \\<le> 1\n  Q s \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wlp body R s +\n    \\<guillemotleft> \\<N> G \\<guillemotright> s * Q s\n    \\<le> \\<guillemotleft> G \\<guillemotright> s * 1 +\n          \\<guillemotleft> \\<N> G \\<guillemotright> s * 1", "by(blast intro:add_mono mult_left_mono)"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wlp body R s +\n  \\<guillemotleft> \\<N> G \\<guillemotright> s * Q s\n  \\<le> \\<guillemotleft> G \\<guillemotright> s * 1 +\n        \\<guillemotleft> \\<N> G \\<guillemotright> s * 1\n\ngoal (1 subgoal):\n 1. \\<And>P x.\n       unitary P \\<Longrightarrow>\n       \\<guillemotleft> G \\<guillemotright> x * wlp body P x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * Q x\n       \\<le> 1", "thus \"\\<guillemotleft> G \\<guillemotright> s * wlp body R s + \\<guillemotleft> \\<N> G \\<guillemotright> s * Q s \\<le> 1\""], ["proof (prove)\nusing this:\n  \\<guillemotleft> G \\<guillemotright> s * wlp body R s +\n  \\<guillemotleft> \\<N> G \\<guillemotright> s * Q s\n  \\<le> \\<guillemotleft> G \\<guillemotright> s * 1 +\n        \\<guillemotleft> \\<N> G \\<guillemotright> s * 1\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wlp body R s +\n    \\<guillemotleft> \\<N> G \\<guillemotright> s * Q s\n    \\<le> 1", "by(simp add:negate_embed)"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wlp body R s +\n  \\<guillemotleft> \\<N> G \\<guillemotright> s * Q s\n  \\<le> 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  unitary\n   (gfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wlp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b * Q b))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  gfp_exp\n   (\\<lambda>a b.\n       \\<guillemotleft> G \\<guillemotright> b * wlp body a b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b *\n       P b) \\<tturnstile> gfp_exp\n                           (\\<lambda>a b.\n                               \\<guillemotleft> G \\<guillemotright> b *\n                               wlp body a b +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> b *\n                               Q b)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>We show healthiness by appealing to the properties of expectation fixed points, applied\nto the alternative loop definition.\\<close>"], ["", "lemma healthy_wp_loop:\n  fixes body::\"'s prog\"\n  assumes hb: \"healthy (wp body)\"\n  shows \"healthy (wp (do G \\<longrightarrow> body od))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. healthy\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. healthy\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "let \"?X P\" = \"(\\<lambda>Q s. \\<guillemotleft>G\\<guillemotright> s * wp body Q s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s)\""], ["proof (state)\ngoal (1 subgoal):\n 1. healthy\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. healthy\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "proof(intro healthy_parts bounded_byI2 nnegI2, simp_all add:wp_Loop1 hb soundI2 sound_intros)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>b P.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> lfp_exp\n                          (\\<lambda>Q s.\n                              \\<guillemotleft> G \\<guillemotright> s *\n                              wp body Q s +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                              P s) \\<tturnstile> \\<lambda>s. b\n 2. \\<And>b P.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> \\<lambda>s.\n                            0 \\<tturnstile> lfp_exp\n       (\\<lambda>Q s.\n           \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n           \\<guillemotleft> \\<N> G \\<guillemotright> s * P s)\n 3. \\<And>P Q.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> lfp_exp\n                          (\\<lambda>Q s.\n                              \\<guillemotleft> G \\<guillemotright> s *\n                              wp body Q s +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                              P s) \\<tturnstile> lfp_exp\n            (\\<lambda>Qa s.\n                \\<guillemotleft> G \\<guillemotright> s * wp body Qa s +\n                \\<guillemotleft> \\<N> G \\<guillemotright> s * Q s)\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c *\n                         lfp_exp\n                          (\\<lambda>Q s.\n                              \\<guillemotleft> G \\<guillemotright> s *\n                              wp body Q s +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                              P s)\n                          x =\n                         lfp_exp\n                          (\\<lambda>Q s.\n                              \\<guillemotleft> G \\<guillemotright> s *\n                              wp body Q s +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                              (c * P s))\n                          x", "fix P::\"'s expect\" and c::real and s::'s"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>b P.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> lfp_exp\n                          (\\<lambda>Q s.\n                              \\<guillemotleft> G \\<guillemotright> s *\n                              wp body Q s +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                              P s) \\<tturnstile> \\<lambda>s. b\n 2. \\<And>b P.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> \\<lambda>s.\n                            0 \\<tturnstile> lfp_exp\n       (\\<lambda>Q s.\n           \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n           \\<guillemotleft> \\<N> G \\<guillemotright> s * P s)\n 3. \\<And>P Q.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> lfp_exp\n                          (\\<lambda>Q s.\n                              \\<guillemotleft> G \\<guillemotright> s *\n                              wp body Q s +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                              P s) \\<tturnstile> lfp_exp\n            (\\<lambda>Qa s.\n                \\<guillemotleft> G \\<guillemotright> s * wp body Qa s +\n                \\<guillemotleft> \\<N> G \\<guillemotright> s * Q s)\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c *\n                         lfp_exp\n                          (\\<lambda>Q s.\n                              \\<guillemotleft> G \\<guillemotright> s *\n                              wp body Q s +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                              P s)\n                          x =\n                         lfp_exp\n                          (\\<lambda>Q s.\n                              \\<guillemotleft> G \\<guillemotright> s *\n                              wp body Q s +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                              (c * P s))\n                          x", "assume sP: \"sound P\" and nnc: \"0 \\<le> c\""], ["proof (state)\nthis:\n  sound P\n  0 \\<le> c\n\ngoal (4 subgoals):\n 1. \\<And>b P.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> lfp_exp\n                          (\\<lambda>Q s.\n                              \\<guillemotleft> G \\<guillemotright> s *\n                              wp body Q s +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                              P s) \\<tturnstile> \\<lambda>s. b\n 2. \\<And>b P.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> \\<lambda>s.\n                            0 \\<tturnstile> lfp_exp\n       (\\<lambda>Q s.\n           \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n           \\<guillemotleft> \\<N> G \\<guillemotright> s * P s)\n 3. \\<And>P Q.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> lfp_exp\n                          (\\<lambda>Q s.\n                              \\<guillemotleft> G \\<guillemotright> s *\n                              wp body Q s +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                              P s) \\<tturnstile> lfp_exp\n            (\\<lambda>Qa s.\n                \\<guillemotleft> G \\<guillemotright> s * wp body Qa s +\n                \\<guillemotleft> \\<N> G \\<guillemotright> s * Q s)\n 4. \\<And>P c x.\n       \\<lbrakk>sound P; 0 \\<le> c\\<rbrakk>\n       \\<Longrightarrow> c *\n                         lfp_exp\n                          (\\<lambda>Q s.\n                              \\<guillemotleft> G \\<guillemotright> s *\n                              wp body Q s +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                              P s)\n                          x =\n                         lfp_exp\n                          (\\<lambda>Q s.\n                              \\<guillemotleft> G \\<guillemotright> s *\n                              wp body Q s +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                              (c * P s))\n                          x", "show \"c * (lfp_exp (?X P)) s = lfp_exp (?X (\\<lambda>s. c * P s)) s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c *\n    lfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n     s =\n    lfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b * (c * P b))\n     s", "proof(cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    c *\n    lfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n     s =\n    lfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b * (c * P b))\n     s\n 2. \\<not> ?P \\<Longrightarrow>\n    c *\n    lfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n     s =\n    lfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b * (c * P b))\n     s", "assume \"c = 0\""], ["proof (state)\nthis:\n  c = 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    c *\n    lfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n     s =\n    lfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b * (c * P b))\n     s\n 2. \\<not> ?P \\<Longrightarrow>\n    c *\n    lfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n     s =\n    lfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b * (c * P b))\n     s", "thus ?thesis"], ["proof (prove)\nusing this:\n  c = 0\n\ngoal (1 subgoal):\n 1. c *\n    lfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n     s =\n    lfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b * (c * P b))\n     s", "proof(simp, intro antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>c = 0; c = 0\\<rbrakk>\n    \\<Longrightarrow> lfp_exp\n                       (\\<lambda>a b.\n                           \\<guillemotleft> G \\<guillemotright> b *\n                           wp body a b)\n                       s\n                      \\<le> 0\n 2. \\<lbrakk>c = 0; c = 0\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> lfp_exp\n                               (\\<lambda>a b.\n                                   \\<guillemotleft> G \\<guillemotright> b *\n                                   wp body a b)\n                               s", "from hb"], ["proof (chain)\npicking this:\n  healthy (wp body)", "have fp: \"\\<lambda>s. \\<guillemotleft>G\\<guillemotright> s * wp body (\\<lambda>_. 0) s \\<tturnstile> \\<lambda>s. 0\""], ["proof (prove)\nusing this:\n  healthy (wp body)\n\ngoal (1 subgoal):\n 1. \\<lambda>s.\n       \\<guillemotleft> G \\<guillemotright> s *\n       wp body (\\<lambda>_. 0) s \\<tturnstile> \\<lambda>s. 0", "by(simp)"], ["proof (state)\nthis:\n  \\<lambda>s.\n     \\<guillemotleft> G \\<guillemotright> s *\n     wp body (\\<lambda>_. 0) s \\<tturnstile> \\<lambda>s. 0\n\ngoal (2 subgoals):\n 1. \\<lbrakk>c = 0; c = 0\\<rbrakk>\n    \\<Longrightarrow> lfp_exp\n                       (\\<lambda>a b.\n                           \\<guillemotleft> G \\<guillemotright> b *\n                           wp body a b)\n                       s\n                      \\<le> 0\n 2. \\<lbrakk>c = 0; c = 0\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> lfp_exp\n                               (\\<lambda>a b.\n                                   \\<guillemotleft> G \\<guillemotright> b *\n                                   wp body a b)\n                               s", "hence \"lfp_exp (\\<lambda>P s. \\<guillemotleft>G\\<guillemotright> s * wp body P s) \\<tturnstile> \\<lambda>s. 0\""], ["proof (prove)\nusing this:\n  \\<lambda>s.\n     \\<guillemotleft> G \\<guillemotright> s *\n     wp body (\\<lambda>_. 0) s \\<tturnstile> \\<lambda>s. 0\n\ngoal (1 subgoal):\n 1. lfp_exp\n     (\\<lambda>P s.\n         \\<guillemotleft> G \\<guillemotright> s *\n         wp body P s) \\<tturnstile> \\<lambda>s. 0", "by(auto intro:lfp_exp_lowerbound)"], ["proof (state)\nthis:\n  lfp_exp\n   (\\<lambda>P s.\n       \\<guillemotleft> G \\<guillemotright> s *\n       wp body P s) \\<tturnstile> \\<lambda>s. 0\n\ngoal (2 subgoals):\n 1. \\<lbrakk>c = 0; c = 0\\<rbrakk>\n    \\<Longrightarrow> lfp_exp\n                       (\\<lambda>a b.\n                           \\<guillemotleft> G \\<guillemotright> b *\n                           wp body a b)\n                       s\n                      \\<le> 0\n 2. \\<lbrakk>c = 0; c = 0\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> lfp_exp\n                               (\\<lambda>a b.\n                                   \\<guillemotleft> G \\<guillemotright> b *\n                                   wp body a b)\n                               s", "thus \"lfp_exp (\\<lambda>P s. \\<guillemotleft>G\\<guillemotright> s * wp body P s) s \\<le> 0\""], ["proof (prove)\nusing this:\n  lfp_exp\n   (\\<lambda>P s.\n       \\<guillemotleft> G \\<guillemotright> s *\n       wp body P s) \\<tturnstile> \\<lambda>s. 0\n\ngoal (1 subgoal):\n 1. lfp_exp\n     (\\<lambda>P s. \\<guillemotleft> G \\<guillemotright> s * wp body P s) s\n    \\<le> 0", "by(auto)"], ["proof (state)\nthis:\n  lfp_exp\n   (\\<lambda>P s. \\<guillemotleft> G \\<guillemotright> s * wp body P s) s\n  \\<le> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c = 0; c = 0\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> lfp_exp\n                               (\\<lambda>a b.\n                                   \\<guillemotleft> G \\<guillemotright> b *\n                                   wp body a b)\n                               s", "have \"\\<lambda>s. 0 \\<tturnstile> lfp_exp (\\<lambda>P s. \\<guillemotleft>G\\<guillemotright> s * wp body P s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lambda>s.\n       0 \\<tturnstile> lfp_exp\n                        (\\<lambda>P s.\n                            \\<guillemotleft> G \\<guillemotright> s *\n                            wp body P s)", "by(auto intro:lfp_exp_greatest fp)"], ["proof (state)\nthis:\n  \\<lambda>s.\n     0 \\<tturnstile> lfp_exp\n                      (\\<lambda>P s.\n                          \\<guillemotleft> G \\<guillemotright> s *\n                          wp body P s)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>c = 0; c = 0\\<rbrakk>\n    \\<Longrightarrow> 0 \\<le> lfp_exp\n                               (\\<lambda>a b.\n                                   \\<guillemotleft> G \\<guillemotright> b *\n                                   wp body a b)\n                               s", "thus \"0 \\<le> lfp_exp (\\<lambda>P s. \\<guillemotleft>G\\<guillemotright> s * wp body P s) s\""], ["proof (prove)\nusing this:\n  \\<lambda>s.\n     0 \\<tturnstile> lfp_exp\n                      (\\<lambda>P s.\n                          \\<guillemotleft> G \\<guillemotright> s *\n                          wp body P s)\n\ngoal (1 subgoal):\n 1. 0 \\<le> lfp_exp\n             (\\<lambda>P s.\n                 \\<guillemotleft> G \\<guillemotright> s * wp body P s)\n             s", "by(auto)"], ["proof (state)\nthis:\n  0 \\<le> lfp_exp\n           (\\<lambda>P s.\n               \\<guillemotleft> G \\<guillemotright> s * wp body P s)\n           s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c *\n  lfp_exp\n   (\\<lambda>a b.\n       \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n   s =\n  lfp_exp\n   (\\<lambda>a b.\n       \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b * (c * P b))\n   s\n\ngoal (1 subgoal):\n 1. c \\<noteq> 0 \\<Longrightarrow>\n    c *\n    lfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n     s =\n    lfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b * (c * P b))\n     s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. c \\<noteq> 0 \\<Longrightarrow>\n    c *\n    lfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n     s =\n    lfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b * (c * P b))\n     s", "have onesided: \"\\<And>P c. c \\<noteq> 0 \\<Longrightarrow> 0 \\<le> c \\<Longrightarrow> sound P \\<Longrightarrow>\n            \\<lambda>a. c * lfp_exp (\\<lambda>a b. \\<guillemotleft>G\\<guillemotright> b * wp body a b + \\<guillemotleft>\\<N> G\\<guillemotright> b * P b) a \\<tturnstile>\n                    lfp_exp (\\<lambda>a b. \\<guillemotleft>G\\<guillemotright> b * wp body a b + \\<guillemotleft>\\<N> G\\<guillemotright> b * (c * P b))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P c.\n       \\<lbrakk>c \\<noteq> 0; 0 \\<le> c; sound P\\<rbrakk>\n       \\<Longrightarrow> \\<lambda>a.\n                            c *\n                            lfp_exp\n                             (\\<lambda>a b.\n                                 \\<guillemotleft> G \\<guillemotright> b *\n                                 wp body a b +\n                                 \\<guillemotleft> \\<N> G \\<guillemotright>\n                                  b *\n                                 P b)\n                             a \\<tturnstile> lfp_exp\n        (\\<lambda>a b.\n            \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n            \\<guillemotleft> \\<N> G \\<guillemotright> b * (c * P b))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P c.\n       \\<lbrakk>c \\<noteq> 0; 0 \\<le> c; sound P\\<rbrakk>\n       \\<Longrightarrow> \\<lambda>a.\n                            c *\n                            lfp_exp\n                             (\\<lambda>a b.\n                                 \\<guillemotleft> G \\<guillemotright> b *\n                                 wp body a b +\n                                 \\<guillemotleft> \\<N> G \\<guillemotright>\n                                  b *\n                                 P b)\n                             a \\<tturnstile> lfp_exp\n        (\\<lambda>a b.\n            \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n            \\<guillemotleft> \\<N> G \\<guillemotright> b * (c * P b))", "fix P::\"'s expect\" and c::real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P c.\n       \\<lbrakk>c \\<noteq> 0; 0 \\<le> c; sound P\\<rbrakk>\n       \\<Longrightarrow> \\<lambda>a.\n                            c *\n                            lfp_exp\n                             (\\<lambda>a b.\n                                 \\<guillemotleft> G \\<guillemotright> b *\n                                 wp body a b +\n                                 \\<guillemotleft> \\<N> G \\<guillemotright>\n                                  b *\n                                 P b)\n                             a \\<tturnstile> lfp_exp\n        (\\<lambda>a b.\n            \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n            \\<guillemotleft> \\<N> G \\<guillemotright> b * (c * P b))", "assume cnz: \"c \\<noteq> 0\" and nnc: \"0 \\<le> c\" and sP: \"sound P\""], ["proof (state)\nthis:\n  c \\<noteq> 0\n  0 \\<le> c\n  sound P\n\ngoal (1 subgoal):\n 1. \\<And>P c.\n       \\<lbrakk>c \\<noteq> 0; 0 \\<le> c; sound P\\<rbrakk>\n       \\<Longrightarrow> \\<lambda>a.\n                            c *\n                            lfp_exp\n                             (\\<lambda>a b.\n                                 \\<guillemotleft> G \\<guillemotright> b *\n                                 wp body a b +\n                                 \\<guillemotleft> \\<N> G \\<guillemotright>\n                                  b *\n                                 P b)\n                             a \\<tturnstile> lfp_exp\n        (\\<lambda>a b.\n            \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n            \\<guillemotleft> \\<N> G \\<guillemotright> b * (c * P b))", "with nnc"], ["proof (chain)\npicking this:\n  0 \\<le> c\n  c \\<noteq> 0\n  0 \\<le> c\n  sound P", "have cpos: \"0 < c\""], ["proof (prove)\nusing this:\n  0 \\<le> c\n  c \\<noteq> 0\n  0 \\<le> c\n  sound P\n\ngoal (1 subgoal):\n 1. 0 < c", "by(auto)"], ["proof (state)\nthis:\n  0 < c\n\ngoal (1 subgoal):\n 1. \\<And>P c.\n       \\<lbrakk>c \\<noteq> 0; 0 \\<le> c; sound P\\<rbrakk>\n       \\<Longrightarrow> \\<lambda>a.\n                            c *\n                            lfp_exp\n                             (\\<lambda>a b.\n                                 \\<guillemotleft> G \\<guillemotright> b *\n                                 wp body a b +\n                                 \\<guillemotleft> \\<N> G \\<guillemotright>\n                                  b *\n                                 P b)\n                             a \\<tturnstile> lfp_exp\n        (\\<lambda>a b.\n            \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n            \\<guillemotleft> \\<N> G \\<guillemotright> b * (c * P b))", "hence nnic: \"0 \\<le> inverse c\""], ["proof (prove)\nusing this:\n  0 < c\n\ngoal (1 subgoal):\n 1. 0 \\<le> inverse c", "by(auto)"], ["proof (state)\nthis:\n  0 \\<le> inverse c\n\ngoal (1 subgoal):\n 1. \\<And>P c.\n       \\<lbrakk>c \\<noteq> 0; 0 \\<le> c; sound P\\<rbrakk>\n       \\<Longrightarrow> \\<lambda>a.\n                            c *\n                            lfp_exp\n                             (\\<lambda>a b.\n                                 \\<guillemotleft> G \\<guillemotright> b *\n                                 wp body a b +\n                                 \\<guillemotleft> \\<N> G \\<guillemotright>\n                                  b *\n                                 P b)\n                             a \\<tturnstile> lfp_exp\n        (\\<lambda>a b.\n            \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n            \\<guillemotleft> \\<N> G \\<guillemotright> b * (c * P b))", "show \"\\<lambda>a. c * lfp_exp (\\<lambda>a b. \\<guillemotleft>G\\<guillemotright> b * wp body a b + \\<guillemotleft>\\<N> G\\<guillemotright> b * P b) a \\<tturnstile>\n              lfp_exp (\\<lambda>a b. \\<guillemotleft>G\\<guillemotright> b * wp body a b + \\<guillemotleft>\\<N> G\\<guillemotright> b * (c * P b))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lambda>a.\n       c *\n       lfp_exp\n        (\\<lambda>a b.\n            \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n            \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n        a \\<tturnstile> lfp_exp\n                         (\\<lambda>a b.\n                             \\<guillemotleft> G \\<guillemotright> b *\n                             wp body a b +\n                             \\<guillemotleft> \\<N> G \\<guillemotright> b *\n                             (c * P b))", "proof(rule lfp_exp_greatest)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>P.\n       \\<lbrakk>\\<lambda>b.\n                   \\<guillemotleft> G \\<guillemotright> b * wp body P b +\n                   \\<guillemotleft> \\<N> G \\<guillemotright> b *\n                   (c * P b) \\<tturnstile> P;\n        sound P\\<rbrakk>\n       \\<Longrightarrow> \\<lambda>a.\n                            c *\n                            lfp_exp\n                             (\\<lambda>a b.\n                                 \\<guillemotleft> G \\<guillemotright> b *\n                                 wp body a b +\n                                 \\<guillemotleft> \\<N> G \\<guillemotright>\n                                  b *\n                                 P b)\n                             a \\<tturnstile> P\n 2. sound\n     (\\<lambda>a.\n         c *\n         lfp_exp\n          (\\<lambda>a b.\n              \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n              \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n          a)\n 3. \\<lambda>b.\n       \\<guillemotleft> G \\<guillemotright> b * wp body ?R b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b *\n       (c * P b) \\<tturnstile> ?R\n 4. sound ?R", "fix Q::\"'s expect\""], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>P.\n       \\<lbrakk>\\<lambda>b.\n                   \\<guillemotleft> G \\<guillemotright> b * wp body P b +\n                   \\<guillemotleft> \\<N> G \\<guillemotright> b *\n                   (c * P b) \\<tturnstile> P;\n        sound P\\<rbrakk>\n       \\<Longrightarrow> \\<lambda>a.\n                            c *\n                            lfp_exp\n                             (\\<lambda>a b.\n                                 \\<guillemotleft> G \\<guillemotright> b *\n                                 wp body a b +\n                                 \\<guillemotleft> \\<N> G \\<guillemotright>\n                                  b *\n                                 P b)\n                             a \\<tturnstile> P\n 2. sound\n     (\\<lambda>a.\n         c *\n         lfp_exp\n          (\\<lambda>a b.\n              \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n              \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n          a)\n 3. \\<lambda>b.\n       \\<guillemotleft> G \\<guillemotright> b * wp body ?R b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b *\n       (c * P b) \\<tturnstile> ?R\n 4. sound ?R", "assume sQ: \"sound Q\"\n             and fp: \"\\<lambda>b. \\<guillemotleft>G\\<guillemotright> b * wp body Q b + \\<guillemotleft>\\<N> G\\<guillemotright> b * (c * P b) \\<tturnstile> Q\""], ["proof (state)\nthis:\n  sound Q\n  \\<lambda>b.\n     \\<guillemotleft> G \\<guillemotright> b * wp body Q b +\n     \\<guillemotleft> \\<N> G \\<guillemotright> b * (c * P b) \\<tturnstile> Q\n\ngoal (4 subgoals):\n 1. \\<And>P.\n       \\<lbrakk>\\<lambda>b.\n                   \\<guillemotleft> G \\<guillemotright> b * wp body P b +\n                   \\<guillemotleft> \\<N> G \\<guillemotright> b *\n                   (c * P b) \\<tturnstile> P;\n        sound P\\<rbrakk>\n       \\<Longrightarrow> \\<lambda>a.\n                            c *\n                            lfp_exp\n                             (\\<lambda>a b.\n                                 \\<guillemotleft> G \\<guillemotright> b *\n                                 wp body a b +\n                                 \\<guillemotleft> \\<N> G \\<guillemotright>\n                                  b *\n                                 P b)\n                             a \\<tturnstile> P\n 2. sound\n     (\\<lambda>a.\n         c *\n         lfp_exp\n          (\\<lambda>a b.\n              \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n              \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n          a)\n 3. \\<lambda>b.\n       \\<guillemotleft> G \\<guillemotright> b * wp body ?R b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b *\n       (c * P b) \\<tturnstile> ?R\n 4. sound ?R", "hence \"\\<And>s. \\<guillemotleft>G\\<guillemotright> s * wp body Q s + \\<guillemotleft>\\<N> G\\<guillemotright> s * (c * P s) \\<le> Q s\""], ["proof (prove)\nusing this:\n  sound Q\n  \\<lambda>b.\n     \\<guillemotleft> G \\<guillemotright> b * wp body Q b +\n     \\<guillemotleft> \\<N> G \\<guillemotright> b * (c * P b) \\<tturnstile> Q\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n       \\<guillemotleft> \\<N> G \\<guillemotright> s * (c * P s)\n       \\<le> Q s", "by(auto)"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> ?s * wp body Q ?s +\n  \\<guillemotleft> \\<N> G \\<guillemotright> ?s * (c * P ?s)\n  \\<le> Q ?s\n\ngoal (4 subgoals):\n 1. \\<And>P.\n       \\<lbrakk>\\<lambda>b.\n                   \\<guillemotleft> G \\<guillemotright> b * wp body P b +\n                   \\<guillemotleft> \\<N> G \\<guillemotright> b *\n                   (c * P b) \\<tturnstile> P;\n        sound P\\<rbrakk>\n       \\<Longrightarrow> \\<lambda>a.\n                            c *\n                            lfp_exp\n                             (\\<lambda>a b.\n                                 \\<guillemotleft> G \\<guillemotright> b *\n                                 wp body a b +\n                                 \\<guillemotleft> \\<N> G \\<guillemotright>\n                                  b *\n                                 P b)\n                             a \\<tturnstile> P\n 2. sound\n     (\\<lambda>a.\n         c *\n         lfp_exp\n          (\\<lambda>a b.\n              \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n              \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n          a)\n 3. \\<lambda>b.\n       \\<guillemotleft> G \\<guillemotright> b * wp body ?R b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b *\n       (c * P b) \\<tturnstile> ?R\n 4. sound ?R", "with nnic"], ["proof (chain)\npicking this:\n  0 \\<le> inverse c\n  \\<guillemotleft> G \\<guillemotright> ?s * wp body Q ?s +\n  \\<guillemotleft> \\<N> G \\<guillemotright> ?s * (c * P ?s)\n  \\<le> Q ?s", "have \"\\<And>s. inverse c * (\\<guillemotleft>G\\<guillemotright> s * wp body Q s + \\<guillemotleft>\\<N> G\\<guillemotright> s * (c * P s)) \\<le>\n                     inverse c * Q s\""], ["proof (prove)\nusing this:\n  0 \\<le> inverse c\n  \\<guillemotleft> G \\<guillemotright> ?s * wp body Q ?s +\n  \\<guillemotleft> \\<N> G \\<guillemotright> ?s * (c * P ?s)\n  \\<le> Q ?s\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       inverse c *\n       (\\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n        \\<guillemotleft> \\<N> G \\<guillemotright> s * (c * P s))\n       \\<le> inverse c * Q s", "by(auto intro:mult_left_mono)"], ["proof (state)\nthis:\n  inverse c *\n  (\\<guillemotleft> G \\<guillemotright> ?s * wp body Q ?s +\n   \\<guillemotleft> \\<N> G \\<guillemotright> ?s * (c * P ?s))\n  \\<le> inverse c * Q ?s\n\ngoal (4 subgoals):\n 1. \\<And>P.\n       \\<lbrakk>\\<lambda>b.\n                   \\<guillemotleft> G \\<guillemotright> b * wp body P b +\n                   \\<guillemotleft> \\<N> G \\<guillemotright> b *\n                   (c * P b) \\<tturnstile> P;\n        sound P\\<rbrakk>\n       \\<Longrightarrow> \\<lambda>a.\n                            c *\n                            lfp_exp\n                             (\\<lambda>a b.\n                                 \\<guillemotleft> G \\<guillemotright> b *\n                                 wp body a b +\n                                 \\<guillemotleft> \\<N> G \\<guillemotright>\n                                  b *\n                                 P b)\n                             a \\<tturnstile> P\n 2. sound\n     (\\<lambda>a.\n         c *\n         lfp_exp\n          (\\<lambda>a b.\n              \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n              \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n          a)\n 3. \\<lambda>b.\n       \\<guillemotleft> G \\<guillemotright> b * wp body ?R b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b *\n       (c * P b) \\<tturnstile> ?R\n 4. sound ?R", "hence \"\\<And>s. \\<guillemotleft>G\\<guillemotright> s * (inverse c * wp body Q s) + (inverse c * c) * \\<guillemotleft>\\<N> G\\<guillemotright> s * P s \\<le>\n                     inverse c * Q s\""], ["proof (prove)\nusing this:\n  inverse c *\n  (\\<guillemotleft> G \\<guillemotright> ?s * wp body Q ?s +\n   \\<guillemotleft> \\<N> G \\<guillemotright> ?s * (c * P ?s))\n  \\<le> inverse c * Q ?s\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<guillemotleft> G \\<guillemotright> s * (inverse c * wp body Q s) +\n       inverse c * c * \\<guillemotleft> \\<N> G \\<guillemotright> s * P s\n       \\<le> inverse c * Q s", "by(simp add:algebra_simps)"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> ?s * (inverse c * wp body Q ?s) +\n  inverse c * c * \\<guillemotleft> \\<N> G \\<guillemotright> ?s * P ?s\n  \\<le> inverse c * Q ?s\n\ngoal (4 subgoals):\n 1. \\<And>P.\n       \\<lbrakk>\\<lambda>b.\n                   \\<guillemotleft> G \\<guillemotright> b * wp body P b +\n                   \\<guillemotleft> \\<N> G \\<guillemotright> b *\n                   (c * P b) \\<tturnstile> P;\n        sound P\\<rbrakk>\n       \\<Longrightarrow> \\<lambda>a.\n                            c *\n                            lfp_exp\n                             (\\<lambda>a b.\n                                 \\<guillemotleft> G \\<guillemotright> b *\n                                 wp body a b +\n                                 \\<guillemotleft> \\<N> G \\<guillemotright>\n                                  b *\n                                 P b)\n                             a \\<tturnstile> P\n 2. sound\n     (\\<lambda>a.\n         c *\n         lfp_exp\n          (\\<lambda>a b.\n              \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n              \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n          a)\n 3. \\<lambda>b.\n       \\<guillemotleft> G \\<guillemotright> b * wp body ?R b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b *\n       (c * P b) \\<tturnstile> ?R\n 4. sound ?R", "hence \"\\<And>s. \\<guillemotleft>G\\<guillemotright> s * wp body (\\<lambda>s. inverse c * Q s) s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s \\<le>\n                     inverse c * Q s\""], ["proof (prove)\nusing this:\n  \\<guillemotleft> G \\<guillemotright> ?s * (inverse c * wp body Q ?s) +\n  inverse c * c * \\<guillemotleft> \\<N> G \\<guillemotright> ?s * P ?s\n  \\<le> inverse c * Q ?s\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<guillemotleft> G \\<guillemotright> s *\n       wp body (\\<lambda>s. inverse c * Q s) s +\n       \\<guillemotleft> \\<N> G \\<guillemotright> s * P s\n       \\<le> inverse c * Q s", "by(simp add:cnz scalingD[OF healthy_scalingD, OF hb sQ nnic])"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> ?s *\n  wp body (\\<lambda>s. inverse c * Q s) ?s +\n  \\<guillemotleft> \\<N> G \\<guillemotright> ?s * P ?s\n  \\<le> inverse c * Q ?s\n\ngoal (4 subgoals):\n 1. \\<And>P.\n       \\<lbrakk>\\<lambda>b.\n                   \\<guillemotleft> G \\<guillemotright> b * wp body P b +\n                   \\<guillemotleft> \\<N> G \\<guillemotright> b *\n                   (c * P b) \\<tturnstile> P;\n        sound P\\<rbrakk>\n       \\<Longrightarrow> \\<lambda>a.\n                            c *\n                            lfp_exp\n                             (\\<lambda>a b.\n                                 \\<guillemotleft> G \\<guillemotright> b *\n                                 wp body a b +\n                                 \\<guillemotleft> \\<N> G \\<guillemotright>\n                                  b *\n                                 P b)\n                             a \\<tturnstile> P\n 2. sound\n     (\\<lambda>a.\n         c *\n         lfp_exp\n          (\\<lambda>a b.\n              \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n              \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n          a)\n 3. \\<lambda>b.\n       \\<guillemotleft> G \\<guillemotright> b * wp body ?R b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b *\n       (c * P b) \\<tturnstile> ?R\n 4. sound ?R", "hence \"\\<lambda>s. \\<guillemotleft>G\\<guillemotright> s * wp body (\\<lambda>s. inverse c * Q s) s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s \\<tturnstile>\n                 \\<lambda>s. inverse c * Q s\""], ["proof (prove)\nusing this:\n  \\<guillemotleft> G \\<guillemotright> ?s *\n  wp body (\\<lambda>s. inverse c * Q s) ?s +\n  \\<guillemotleft> \\<N> G \\<guillemotright> ?s * P ?s\n  \\<le> inverse c * Q ?s\n\ngoal (1 subgoal):\n 1. \\<lambda>s.\n       \\<guillemotleft> G \\<guillemotright> s *\n       wp body (\\<lambda>s. inverse c * Q s) s +\n       \\<guillemotleft> \\<N> G \\<guillemotright> s *\n       P s \\<tturnstile> \\<lambda>s. inverse c * Q s", "by(rule le_funI)"], ["proof (state)\nthis:\n  \\<lambda>s.\n     \\<guillemotleft> G \\<guillemotright> s *\n     wp body (\\<lambda>s. inverse c * Q s) s +\n     \\<guillemotleft> \\<N> G \\<guillemotright> s *\n     P s \\<tturnstile> \\<lambda>s. inverse c * Q s\n\ngoal (4 subgoals):\n 1. \\<And>P.\n       \\<lbrakk>\\<lambda>b.\n                   \\<guillemotleft> G \\<guillemotright> b * wp body P b +\n                   \\<guillemotleft> \\<N> G \\<guillemotright> b *\n                   (c * P b) \\<tturnstile> P;\n        sound P\\<rbrakk>\n       \\<Longrightarrow> \\<lambda>a.\n                            c *\n                            lfp_exp\n                             (\\<lambda>a b.\n                                 \\<guillemotleft> G \\<guillemotright> b *\n                                 wp body a b +\n                                 \\<guillemotleft> \\<N> G \\<guillemotright>\n                                  b *\n                                 P b)\n                             a \\<tturnstile> P\n 2. sound\n     (\\<lambda>a.\n         c *\n         lfp_exp\n          (\\<lambda>a b.\n              \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n              \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n          a)\n 3. \\<lambda>b.\n       \\<guillemotleft> G \\<guillemotright> b * wp body ?R b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b *\n       (c * P b) \\<tturnstile> ?R\n 4. sound ?R", "moreover"], ["proof (state)\nthis:\n  \\<lambda>s.\n     \\<guillemotleft> G \\<guillemotright> s *\n     wp body (\\<lambda>s. inverse c * Q s) s +\n     \\<guillemotleft> \\<N> G \\<guillemotright> s *\n     P s \\<tturnstile> \\<lambda>s. inverse c * Q s\n\ngoal (4 subgoals):\n 1. \\<And>P.\n       \\<lbrakk>\\<lambda>b.\n                   \\<guillemotleft> G \\<guillemotright> b * wp body P b +\n                   \\<guillemotleft> \\<N> G \\<guillemotright> b *\n                   (c * P b) \\<tturnstile> P;\n        sound P\\<rbrakk>\n       \\<Longrightarrow> \\<lambda>a.\n                            c *\n                            lfp_exp\n                             (\\<lambda>a b.\n                                 \\<guillemotleft> G \\<guillemotright> b *\n                                 wp body a b +\n                                 \\<guillemotleft> \\<N> G \\<guillemotright>\n                                  b *\n                                 P b)\n                             a \\<tturnstile> P\n 2. sound\n     (\\<lambda>a.\n         c *\n         lfp_exp\n          (\\<lambda>a b.\n              \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n              \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n          a)\n 3. \\<lambda>b.\n       \\<guillemotleft> G \\<guillemotright> b * wp body ?R b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b *\n       (c * P b) \\<tturnstile> ?R\n 4. sound ?R", "from nnic sQ"], ["proof (chain)\npicking this:\n  0 \\<le> inverse c\n  sound Q", "have \"sound (\\<lambda>s. inverse c * Q s)\""], ["proof (prove)\nusing this:\n  0 \\<le> inverse c\n  sound Q\n\ngoal (1 subgoal):\n 1. sound (\\<lambda>s. inverse c * Q s)", "by(iprover intro:sound_intros)"], ["proof (state)\nthis:\n  sound (\\<lambda>s. inverse c * Q s)\n\ngoal (4 subgoals):\n 1. \\<And>P.\n       \\<lbrakk>\\<lambda>b.\n                   \\<guillemotleft> G \\<guillemotright> b * wp body P b +\n                   \\<guillemotleft> \\<N> G \\<guillemotright> b *\n                   (c * P b) \\<tturnstile> P;\n        sound P\\<rbrakk>\n       \\<Longrightarrow> \\<lambda>a.\n                            c *\n                            lfp_exp\n                             (\\<lambda>a b.\n                                 \\<guillemotleft> G \\<guillemotright> b *\n                                 wp body a b +\n                                 \\<guillemotleft> \\<N> G \\<guillemotright>\n                                  b *\n                                 P b)\n                             a \\<tturnstile> P\n 2. sound\n     (\\<lambda>a.\n         c *\n         lfp_exp\n          (\\<lambda>a b.\n              \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n              \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n          a)\n 3. \\<lambda>b.\n       \\<guillemotleft> G \\<guillemotright> b * wp body ?R b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b *\n       (c * P b) \\<tturnstile> ?R\n 4. sound ?R", "ultimately"], ["proof (chain)\npicking this:\n  \\<lambda>s.\n     \\<guillemotleft> G \\<guillemotright> s *\n     wp body (\\<lambda>s. inverse c * Q s) s +\n     \\<guillemotleft> \\<N> G \\<guillemotright> s *\n     P s \\<tturnstile> \\<lambda>s. inverse c * Q s\n  sound (\\<lambda>s. inverse c * Q s)", "have \"lfp_exp (\\<lambda>a b. \\<guillemotleft>G\\<guillemotright> b * wp body a b + \\<guillemotleft>\\<N> G\\<guillemotright> b * P b) \\<tturnstile>\n                           \\<lambda>s. inverse c * Q s\""], ["proof (prove)\nusing this:\n  \\<lambda>s.\n     \\<guillemotleft> G \\<guillemotright> s *\n     wp body (\\<lambda>s. inverse c * Q s) s +\n     \\<guillemotleft> \\<N> G \\<guillemotright> s *\n     P s \\<tturnstile> \\<lambda>s. inverse c * Q s\n  sound (\\<lambda>s. inverse c * Q s)\n\ngoal (1 subgoal):\n 1. lfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b *\n         P b) \\<tturnstile> \\<lambda>s. inverse c * Q s", "by(rule lfp_exp_lowerbound)"], ["proof (state)\nthis:\n  lfp_exp\n   (\\<lambda>a b.\n       \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b *\n       P b) \\<tturnstile> \\<lambda>s. inverse c * Q s\n\ngoal (4 subgoals):\n 1. \\<And>P.\n       \\<lbrakk>\\<lambda>b.\n                   \\<guillemotleft> G \\<guillemotright> b * wp body P b +\n                   \\<guillemotleft> \\<N> G \\<guillemotright> b *\n                   (c * P b) \\<tturnstile> P;\n        sound P\\<rbrakk>\n       \\<Longrightarrow> \\<lambda>a.\n                            c *\n                            lfp_exp\n                             (\\<lambda>a b.\n                                 \\<guillemotleft> G \\<guillemotright> b *\n                                 wp body a b +\n                                 \\<guillemotleft> \\<N> G \\<guillemotright>\n                                  b *\n                                 P b)\n                             a \\<tturnstile> P\n 2. sound\n     (\\<lambda>a.\n         c *\n         lfp_exp\n          (\\<lambda>a b.\n              \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n              \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n          a)\n 3. \\<lambda>b.\n       \\<guillemotleft> G \\<guillemotright> b * wp body ?R b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b *\n       (c * P b) \\<tturnstile> ?R\n 4. sound ?R", "hence \"\\<And>s. lfp_exp (\\<lambda>a b. \\<guillemotleft>G\\<guillemotright> b * wp body a b + \\<guillemotleft>\\<N> G\\<guillemotright> b * P b) s \\<le> inverse c * Q s\""], ["proof (prove)\nusing this:\n  lfp_exp\n   (\\<lambda>a b.\n       \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b *\n       P b) \\<tturnstile> \\<lambda>s. inverse c * Q s\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       lfp_exp\n        (\\<lambda>a b.\n            \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n            \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n        s\n       \\<le> inverse c * Q s", "by(rule le_funD)"], ["proof (state)\nthis:\n  lfp_exp\n   (\\<lambda>a b.\n       \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n   ?s\n  \\<le> inverse c * Q ?s\n\ngoal (4 subgoals):\n 1. \\<And>P.\n       \\<lbrakk>\\<lambda>b.\n                   \\<guillemotleft> G \\<guillemotright> b * wp body P b +\n                   \\<guillemotleft> \\<N> G \\<guillemotright> b *\n                   (c * P b) \\<tturnstile> P;\n        sound P\\<rbrakk>\n       \\<Longrightarrow> \\<lambda>a.\n                            c *\n                            lfp_exp\n                             (\\<lambda>a b.\n                                 \\<guillemotleft> G \\<guillemotright> b *\n                                 wp body a b +\n                                 \\<guillemotleft> \\<N> G \\<guillemotright>\n                                  b *\n                                 P b)\n                             a \\<tturnstile> P\n 2. sound\n     (\\<lambda>a.\n         c *\n         lfp_exp\n          (\\<lambda>a b.\n              \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n              \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n          a)\n 3. \\<lambda>b.\n       \\<guillemotleft> G \\<guillemotright> b * wp body ?R b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b *\n       (c * P b) \\<tturnstile> ?R\n 4. sound ?R", "with nnc"], ["proof (chain)\npicking this:\n  0 \\<le> c\n  lfp_exp\n   (\\<lambda>a b.\n       \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n   ?s\n  \\<le> inverse c * Q ?s", "have \"\\<And>s. c * lfp_exp (\\<lambda>a b. \\<guillemotleft>G\\<guillemotright> b * wp body a b + \\<guillemotleft>\\<N> G\\<guillemotright> b * P b) s \\<le>\n                     c * (inverse c * Q s)\""], ["proof (prove)\nusing this:\n  0 \\<le> c\n  lfp_exp\n   (\\<lambda>a b.\n       \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n   ?s\n  \\<le> inverse c * Q ?s\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       c *\n       lfp_exp\n        (\\<lambda>a b.\n            \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n            \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n        s\n       \\<le> c * (inverse c * Q s)", "by(auto intro:mult_left_mono)"], ["proof (state)\nthis:\n  c *\n  lfp_exp\n   (\\<lambda>a b.\n       \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n   ?s\n  \\<le> c * (inverse c * Q ?s)\n\ngoal (4 subgoals):\n 1. \\<And>P.\n       \\<lbrakk>\\<lambda>b.\n                   \\<guillemotleft> G \\<guillemotright> b * wp body P b +\n                   \\<guillemotleft> \\<N> G \\<guillemotright> b *\n                   (c * P b) \\<tturnstile> P;\n        sound P\\<rbrakk>\n       \\<Longrightarrow> \\<lambda>a.\n                            c *\n                            lfp_exp\n                             (\\<lambda>a b.\n                                 \\<guillemotleft> G \\<guillemotright> b *\n                                 wp body a b +\n                                 \\<guillemotleft> \\<N> G \\<guillemotright>\n                                  b *\n                                 P b)\n                             a \\<tturnstile> P\n 2. sound\n     (\\<lambda>a.\n         c *\n         lfp_exp\n          (\\<lambda>a b.\n              \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n              \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n          a)\n 3. \\<lambda>b.\n       \\<guillemotleft> G \\<guillemotright> b * wp body ?R b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b *\n       (c * P b) \\<tturnstile> ?R\n 4. sound ?R", "also"], ["proof (state)\nthis:\n  c *\n  lfp_exp\n   (\\<lambda>a b.\n       \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n   ?s\n  \\<le> c * (inverse c * Q ?s)\n\ngoal (4 subgoals):\n 1. \\<And>P.\n       \\<lbrakk>\\<lambda>b.\n                   \\<guillemotleft> G \\<guillemotright> b * wp body P b +\n                   \\<guillemotleft> \\<N> G \\<guillemotright> b *\n                   (c * P b) \\<tturnstile> P;\n        sound P\\<rbrakk>\n       \\<Longrightarrow> \\<lambda>a.\n                            c *\n                            lfp_exp\n                             (\\<lambda>a b.\n                                 \\<guillemotleft> G \\<guillemotright> b *\n                                 wp body a b +\n                                 \\<guillemotleft> \\<N> G \\<guillemotright>\n                                  b *\n                                 P b)\n                             a \\<tturnstile> P\n 2. sound\n     (\\<lambda>a.\n         c *\n         lfp_exp\n          (\\<lambda>a b.\n              \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n              \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n          a)\n 3. \\<lambda>b.\n       \\<guillemotleft> G \\<guillemotright> b * wp body ?R b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b *\n       (c * P b) \\<tturnstile> ?R\n 4. sound ?R", "from cnz"], ["proof (chain)\npicking this:\n  c \\<noteq> 0", "have \"\\<And>s. ... s = Q s\""], ["proof (prove)\nusing this:\n  c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>s. c * (inverse c * Q s) = Q s", "by(simp)"], ["proof (state)\nthis:\n  c * (inverse c * Q ?s) = Q ?s\n\ngoal (4 subgoals):\n 1. \\<And>P.\n       \\<lbrakk>\\<lambda>b.\n                   \\<guillemotleft> G \\<guillemotright> b * wp body P b +\n                   \\<guillemotleft> \\<N> G \\<guillemotright> b *\n                   (c * P b) \\<tturnstile> P;\n        sound P\\<rbrakk>\n       \\<Longrightarrow> \\<lambda>a.\n                            c *\n                            lfp_exp\n                             (\\<lambda>a b.\n                                 \\<guillemotleft> G \\<guillemotright> b *\n                                 wp body a b +\n                                 \\<guillemotleft> \\<N> G \\<guillemotright>\n                                  b *\n                                 P b)\n                             a \\<tturnstile> P\n 2. sound\n     (\\<lambda>a.\n         c *\n         lfp_exp\n          (\\<lambda>a b.\n              \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n              \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n          a)\n 3. \\<lambda>b.\n       \\<guillemotleft> G \\<guillemotright> b * wp body ?R b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b *\n       (c * P b) \\<tturnstile> ?R\n 4. sound ?R", "finally"], ["proof (chain)\npicking this:\n  c *\n  lfp_exp\n   (\\<lambda>a b.\n       \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n   ?s1\n  \\<le> Q ?s1", "show \"\\<lambda>a. c * lfp_exp (\\<lambda>a b. \\<guillemotleft>G\\<guillemotright> b * wp body a b + \\<guillemotleft>\\<N> G\\<guillemotright> b * P b) a \\<tturnstile> Q\""], ["proof (prove)\nusing this:\n  c *\n  lfp_exp\n   (\\<lambda>a b.\n       \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n   ?s1\n  \\<le> Q ?s1\n\ngoal (1 subgoal):\n 1. \\<lambda>a.\n       c *\n       lfp_exp\n        (\\<lambda>a b.\n            \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n            \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n        a \\<tturnstile> Q", "by(rule le_funI)"], ["proof (state)\nthis:\n  \\<lambda>a.\n     c *\n     lfp_exp\n      (\\<lambda>a b.\n          \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n          \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n      a \\<tturnstile> Q\n\ngoal (3 subgoals):\n 1. sound\n     (\\<lambda>a.\n         c *\n         lfp_exp\n          (\\<lambda>a b.\n              \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n              \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n          a)\n 2. \\<lambda>b.\n       \\<guillemotleft> G \\<guillemotright> b * wp body ?R b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b *\n       (c * P b) \\<tturnstile> ?R\n 3. sound ?R", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. sound\n     (\\<lambda>a.\n         c *\n         lfp_exp\n          (\\<lambda>a b.\n              \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n              \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n          a)\n 2. \\<lambda>b.\n       \\<guillemotleft> G \\<guillemotright> b * wp body ?R b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b *\n       (c * P b) \\<tturnstile> ?R\n 3. sound ?R", "from sP"], ["proof (chain)\npicking this:\n  sound P", "have \"sound (\\<lambda>s. bound_of P)\""], ["proof (prove)\nusing this:\n  sound P\n\ngoal (1 subgoal):\n 1. sound (\\<lambda>s. bound_of P)", "by(auto)"], ["proof (state)\nthis:\n  sound (\\<lambda>s. bound_of P)\n\ngoal (3 subgoals):\n 1. sound\n     (\\<lambda>a.\n         c *\n         lfp_exp\n          (\\<lambda>a b.\n              \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n              \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n          a)\n 2. \\<lambda>b.\n       \\<guillemotleft> G \\<guillemotright> b * wp body ?R b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b *\n       (c * P b) \\<tturnstile> ?R\n 3. sound ?R", "with hb sP"], ["proof (chain)\npicking this:\n  healthy (wp body)\n  sound P\n  sound (\\<lambda>s. bound_of P)", "have \"sound (lfp_exp (?X P))\""], ["proof (prove)\nusing this:\n  healthy (wp body)\n  sound P\n  sound (\\<lambda>s. bound_of P)\n\ngoal (1 subgoal):\n 1. sound\n     (lfp_exp\n       (\\<lambda>a b.\n           \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n           \\<guillemotleft> \\<N> G \\<guillemotright> b * P b))", "by(blast intro:lfp_exp_sound lfp_loop_fp)"], ["proof (state)\nthis:\n  sound\n   (lfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b * P b))\n\ngoal (3 subgoals):\n 1. sound\n     (\\<lambda>a.\n         c *\n         lfp_exp\n          (\\<lambda>a b.\n              \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n              \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n          a)\n 2. \\<lambda>b.\n       \\<guillemotleft> G \\<guillemotright> b * wp body ?R b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b *\n       (c * P b) \\<tturnstile> ?R\n 3. sound ?R", "with nnc"], ["proof (chain)\npicking this:\n  0 \\<le> c\n  sound\n   (lfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b * P b))", "show \"sound (\\<lambda>s. c * lfp_exp (?X P) s)\""], ["proof (prove)\nusing this:\n  0 \\<le> c\n  sound\n   (lfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b * P b))\n\ngoal (1 subgoal):\n 1. sound\n     (\\<lambda>s.\n         c *\n         lfp_exp\n          (\\<lambda>a b.\n              \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n              \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n          s)", "by(auto intro!:sound_intros)"], ["proof (state)\nthis:\n  sound\n   (\\<lambda>s.\n       c *\n       lfp_exp\n        (\\<lambda>a b.\n            \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n            \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n        s)\n\ngoal (2 subgoals):\n 1. \\<lambda>b.\n       \\<guillemotleft> G \\<guillemotright> b * wp body ?R b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b *\n       (c * P b) \\<tturnstile> ?R\n 2. sound ?R", "from hb sP nnc"], ["proof (chain)\npicking this:\n  healthy (wp body)\n  sound P\n  0 \\<le> c", "show \"\\<lambda>s. \\<guillemotleft>G\\<guillemotright> s * wp body (\\<lambda>s. bound_of (\\<lambda>s. c * P s)) s +\n                    \\<guillemotleft>\\<N> G\\<guillemotright> s * (c * P s) \\<tturnstile> \\<lambda>s. bound_of (\\<lambda>s. c * P s)\""], ["proof (prove)\nusing this:\n  healthy (wp body)\n  sound P\n  0 \\<le> c\n\ngoal (1 subgoal):\n 1. \\<lambda>s.\n       \\<guillemotleft> G \\<guillemotright> s *\n       wp body (\\<lambda>s. bound_of (\\<lambda>s. c * P s)) s +\n       \\<guillemotleft> \\<N> G \\<guillemotright> s *\n       (c * P s) \\<tturnstile> \\<lambda>s. bound_of (\\<lambda>s. c * P s)", "by(iprover intro:lfp_loop_fp sound_intros)"], ["proof (state)\nthis:\n  \\<lambda>s.\n     \\<guillemotleft> G \\<guillemotright> s *\n     wp body (\\<lambda>s. bound_of (\\<lambda>s. c * P s)) s +\n     \\<guillemotleft> \\<N> G \\<guillemotright> s *\n     (c * P s) \\<tturnstile> \\<lambda>s. bound_of (\\<lambda>s. c * P s)\n\ngoal (1 subgoal):\n 1. sound (\\<lambda>s. bound_of (\\<lambda>s. c * P s))", "from sP nnc"], ["proof (chain)\npicking this:\n  sound P\n  0 \\<le> c", "show \"sound (\\<lambda>s. bound_of (\\<lambda>s. c * P s))\""], ["proof (prove)\nusing this:\n  sound P\n  0 \\<le> c\n\ngoal (1 subgoal):\n 1. sound (\\<lambda>s. bound_of (\\<lambda>s. c * P s))", "by(auto intro!:sound_intros)"], ["proof (state)\nthis:\n  sound (\\<lambda>s. bound_of (\\<lambda>s. c * P s))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lambda>a.\n     c *\n     lfp_exp\n      (\\<lambda>a b.\n          \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n          \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n      a \\<tturnstile> lfp_exp\n                       (\\<lambda>a b.\n                           \\<guillemotleft> G \\<guillemotright> b *\n                           wp body a b +\n                           \\<guillemotleft> \\<N> G \\<guillemotright> b *\n                           (c * P b))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?c \\<noteq> 0; 0 \\<le> ?c; sound ?P\\<rbrakk>\n  \\<Longrightarrow> \\<lambda>a.\n                       ?c *\n                       lfp_exp\n                        (\\<lambda>a b.\n                            \\<guillemotleft> G \\<guillemotright> b *\n                            wp body a b +\n                            \\<guillemotleft> \\<N> G \\<guillemotright> b *\n                            ?P b)\n                        a \\<tturnstile> lfp_exp\n   (\\<lambda>a b.\n       \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b * (?c * ?P b))\n\ngoal (1 subgoal):\n 1. c \\<noteq> 0 \\<Longrightarrow>\n    c *\n    lfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n     s =\n    lfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b * (c * P b))\n     s", "assume nzc: \"c \\<noteq> 0\""], ["proof (state)\nthis:\n  c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. c \\<noteq> 0 \\<Longrightarrow>\n    c *\n    lfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n     s =\n    lfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b * (c * P b))\n     s", "show ?thesis (is \"?X P c s = ?Y P c s\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. c *\n    lfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n     s =\n    lfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b * (c * P b))\n     s", "proof(rule fun_cong[where x=s], rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lambda>a.\n       c *\n       lfp_exp\n        (\\<lambda>a b.\n            \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n            \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n        a \\<tturnstile> lfp_exp\n                         (\\<lambda>a b.\n                             \\<guillemotleft> G \\<guillemotright> b *\n                             wp body a b +\n                             \\<guillemotleft> \\<N> G \\<guillemotright> b *\n                             (c * P b))\n 2. lfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b *\n         (c *\n          P b)) \\<tturnstile> \\<lambda>a.\n                                 c *\n                                 lfp_exp\n                                  (\\<lambda>a b.\n\\<guillemotleft> G \\<guillemotright> b * wp body a b +\n\\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n                                  a", "from nzc nnc sP"], ["proof (chain)\npicking this:\n  c \\<noteq> 0\n  0 \\<le> c\n  sound P", "show \"?X P c \\<tturnstile> ?Y P c\""], ["proof (prove)\nusing this:\n  c \\<noteq> 0\n  0 \\<le> c\n  sound P\n\ngoal (1 subgoal):\n 1. \\<lambda>a.\n       c *\n       lfp_exp\n        (\\<lambda>a b.\n            \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n            \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n        a \\<tturnstile> lfp_exp\n                         (\\<lambda>a b.\n                             \\<guillemotleft> G \\<guillemotright> b *\n                             wp body a b +\n                             \\<guillemotleft> \\<N> G \\<guillemotright> b *\n                             (c * P b))", "by(rule onesided)"], ["proof (state)\nthis:\n  \\<lambda>a.\n     c *\n     lfp_exp\n      (\\<lambda>a b.\n          \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n          \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n      a \\<tturnstile> lfp_exp\n                       (\\<lambda>a b.\n                           \\<guillemotleft> G \\<guillemotright> b *\n                           wp body a b +\n                           \\<guillemotleft> \\<N> G \\<guillemotright> b *\n                           (c * P b))\n\ngoal (1 subgoal):\n 1. lfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b *\n         (c *\n          P b)) \\<tturnstile> \\<lambda>a.\n                                 c *\n                                 lfp_exp\n                                  (\\<lambda>a b.\n\\<guillemotleft> G \\<guillemotright> b * wp body a b +\n\\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n                                  a", "from nzc"], ["proof (chain)\npicking this:\n  c \\<noteq> 0", "have nzic: \"inverse c \\<noteq> 0\""], ["proof (prove)\nusing this:\n  c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. inverse c \\<noteq> 0", "by(auto)"], ["proof (state)\nthis:\n  inverse c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. lfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b *\n         (c *\n          P b)) \\<tturnstile> \\<lambda>a.\n                                 c *\n                                 lfp_exp\n                                  (\\<lambda>a b.\n\\<guillemotleft> G \\<guillemotright> b * wp body a b +\n\\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n                                  a", "moreover"], ["proof (state)\nthis:\n  inverse c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. lfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b *\n         (c *\n          P b)) \\<tturnstile> \\<lambda>a.\n                                 c *\n                                 lfp_exp\n                                  (\\<lambda>a b.\n\\<guillemotleft> G \\<guillemotright> b * wp body a b +\n\\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n                                  a", "with nnc"], ["proof (chain)\npicking this:\n  0 \\<le> c\n  inverse c \\<noteq> 0", "have nnic: \"0 \\<le> inverse c\""], ["proof (prove)\nusing this:\n  0 \\<le> c\n  inverse c \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 \\<le> inverse c", "by(auto)"], ["proof (state)\nthis:\n  0 \\<le> inverse c\n\ngoal (1 subgoal):\n 1. lfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b *\n         (c *\n          P b)) \\<tturnstile> \\<lambda>a.\n                                 c *\n                                 lfp_exp\n                                  (\\<lambda>a b.\n\\<guillemotleft> G \\<guillemotright> b * wp body a b +\n\\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n                                  a", "moreover"], ["proof (state)\nthis:\n  0 \\<le> inverse c\n\ngoal (1 subgoal):\n 1. lfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b *\n         (c *\n          P b)) \\<tturnstile> \\<lambda>a.\n                                 c *\n                                 lfp_exp\n                                  (\\<lambda>a b.\n\\<guillemotleft> G \\<guillemotright> b * wp body a b +\n\\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n                                  a", "from nnc sP"], ["proof (chain)\npicking this:\n  0 \\<le> c\n  sound P", "have scP: \"sound (\\<lambda>s. c * P s)\""], ["proof (prove)\nusing this:\n  0 \\<le> c\n  sound P\n\ngoal (1 subgoal):\n 1. sound (\\<lambda>s. c * P s)", "by(auto intro!:sound_intros)"], ["proof (state)\nthis:\n  sound (\\<lambda>s. c * P s)\n\ngoal (1 subgoal):\n 1. lfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b *\n         (c *\n          P b)) \\<tturnstile> \\<lambda>a.\n                                 c *\n                                 lfp_exp\n                                  (\\<lambda>a b.\n\\<guillemotleft> G \\<guillemotright> b * wp body a b +\n\\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n                                  a", "ultimately"], ["proof (chain)\npicking this:\n  inverse c \\<noteq> 0\n  0 \\<le> inverse c\n  sound (\\<lambda>s. c * P s)", "have \"?X (\\<lambda>s. c * P s) (inverse c) \\<tturnstile> ?Y (\\<lambda>s. c * P s) (inverse c)\""], ["proof (prove)\nusing this:\n  inverse c \\<noteq> 0\n  0 \\<le> inverse c\n  sound (\\<lambda>s. c * P s)\n\ngoal (1 subgoal):\n 1. \\<lambda>a.\n       inverse c *\n       lfp_exp\n        (\\<lambda>a b.\n            \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n            \\<guillemotleft> \\<N> G \\<guillemotright> b * (c * P b))\n        a \\<tturnstile> lfp_exp\n                         (\\<lambda>a b.\n                             \\<guillemotleft> G \\<guillemotright> b *\n                             wp body a b +\n                             \\<guillemotleft> \\<N> G \\<guillemotright> b *\n                             (inverse c * (c * P b)))", "by(rule onesided)"], ["proof (state)\nthis:\n  \\<lambda>a.\n     inverse c *\n     lfp_exp\n      (\\<lambda>a b.\n          \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n          \\<guillemotleft> \\<N> G \\<guillemotright> b * (c * P b))\n      a \\<tturnstile> lfp_exp\n                       (\\<lambda>a b.\n                           \\<guillemotleft> G \\<guillemotright> b *\n                           wp body a b +\n                           \\<guillemotleft> \\<N> G \\<guillemotright> b *\n                           (inverse c * (c * P b)))\n\ngoal (1 subgoal):\n 1. lfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b *\n         (c *\n          P b)) \\<tturnstile> \\<lambda>a.\n                                 c *\n                                 lfp_exp\n                                  (\\<lambda>a b.\n\\<guillemotleft> G \\<guillemotright> b * wp body a b +\n\\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n                                  a", "with nnc"], ["proof (chain)\npicking this:\n  0 \\<le> c\n  \\<lambda>a.\n     inverse c *\n     lfp_exp\n      (\\<lambda>a b.\n          \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n          \\<guillemotleft> \\<N> G \\<guillemotright> b * (c * P b))\n      a \\<tturnstile> lfp_exp\n                       (\\<lambda>a b.\n                           \\<guillemotleft> G \\<guillemotright> b *\n                           wp body a b +\n                           \\<guillemotleft> \\<N> G \\<guillemotright> b *\n                           (inverse c * (c * P b)))", "have \"\\<lambda>s. c * ?X (\\<lambda>s. c * P s) (inverse c) s \\<tturnstile>\n                       \\<lambda>s. c * ?Y (\\<lambda>s. c * P s) (inverse c) s\""], ["proof (prove)\nusing this:\n  0 \\<le> c\n  \\<lambda>a.\n     inverse c *\n     lfp_exp\n      (\\<lambda>a b.\n          \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n          \\<guillemotleft> \\<N> G \\<guillemotright> b * (c * P b))\n      a \\<tturnstile> lfp_exp\n                       (\\<lambda>a b.\n                           \\<guillemotleft> G \\<guillemotright> b *\n                           wp body a b +\n                           \\<guillemotleft> \\<N> G \\<guillemotright> b *\n                           (inverse c * (c * P b)))\n\ngoal (1 subgoal):\n 1. \\<lambda>s.\n       c *\n       (inverse c *\n        lfp_exp\n         (\\<lambda>a b.\n             \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n             \\<guillemotleft> \\<N> G \\<guillemotright> b * (c * P b))\n         s) \\<tturnstile> \\<lambda>s.\n                             c *\n                             lfp_exp\n                              (\\<lambda>a b.\n                                  \\<guillemotleft> G \\<guillemotright> b *\n                                  wp body a b +\n                                  \\<guillemotleft> \\<N> G \\<guillemotright>\n                                   b *\n                                  (inverse c * (c * P b)))\n                              s", "by(blast intro:mult_left_mono)"], ["proof (state)\nthis:\n  \\<lambda>s.\n     c *\n     (inverse c *\n      lfp_exp\n       (\\<lambda>a b.\n           \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n           \\<guillemotleft> \\<N> G \\<guillemotright> b * (c * P b))\n       s) \\<tturnstile> \\<lambda>s.\n                           c *\n                           lfp_exp\n                            (\\<lambda>a b.\n                                \\<guillemotleft> G \\<guillemotright> b *\n                                wp body a b +\n                                \\<guillemotleft> \\<N> G \\<guillemotright>\n                                 b *\n                                (inverse c * (c * P b)))\n                            s\n\ngoal (1 subgoal):\n 1. lfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b *\n         (c *\n          P b)) \\<tturnstile> \\<lambda>a.\n                                 c *\n                                 lfp_exp\n                                  (\\<lambda>a b.\n\\<guillemotleft> G \\<guillemotright> b * wp body a b +\n\\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n                                  a", "with nzc"], ["proof (chain)\npicking this:\n  c \\<noteq> 0\n  \\<lambda>s.\n     c *\n     (inverse c *\n      lfp_exp\n       (\\<lambda>a b.\n           \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n           \\<guillemotleft> \\<N> G \\<guillemotright> b * (c * P b))\n       s) \\<tturnstile> \\<lambda>s.\n                           c *\n                           lfp_exp\n                            (\\<lambda>a b.\n                                \\<guillemotleft> G \\<guillemotright> b *\n                                wp body a b +\n                                \\<guillemotleft> \\<N> G \\<guillemotright>\n                                 b *\n                                (inverse c * (c * P b)))\n                            s", "show \"?Y P c \\<tturnstile> ?X P c\""], ["proof (prove)\nusing this:\n  c \\<noteq> 0\n  \\<lambda>s.\n     c *\n     (inverse c *\n      lfp_exp\n       (\\<lambda>a b.\n           \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n           \\<guillemotleft> \\<N> G \\<guillemotright> b * (c * P b))\n       s) \\<tturnstile> \\<lambda>s.\n                           c *\n                           lfp_exp\n                            (\\<lambda>a b.\n                                \\<guillemotleft> G \\<guillemotright> b *\n                                wp body a b +\n                                \\<guillemotleft> \\<N> G \\<guillemotright>\n                                 b *\n                                (inverse c * (c * P b)))\n                            s\n\ngoal (1 subgoal):\n 1. lfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b *\n         (c *\n          P b)) \\<tturnstile> \\<lambda>a.\n                                 c *\n                                 lfp_exp\n                                  (\\<lambda>a b.\n\\<guillemotleft> G \\<guillemotright> b * wp body a b +\n\\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n                                  a", "by(simp add:mult.assoc[symmetric])"], ["proof (state)\nthis:\n  lfp_exp\n   (\\<lambda>a b.\n       \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b *\n       (c *\n        P b)) \\<tturnstile> \\<lambda>a.\n                               c *\n                               lfp_exp\n                                (\\<lambda>a b.\n                                    \\<guillemotleft> G \\<guillemotright> b *\n                                    wp body a b +\n                                    \\<guillemotleft> \\<N>\n                G \\<guillemotright>\n                                     b *\n                                    P b)\n                                a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c *\n  lfp_exp\n   (\\<lambda>a b.\n       \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n   s =\n  lfp_exp\n   (\\<lambda>a b.\n       \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b * (c * P b))\n   s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  c *\n  lfp_exp\n   (\\<lambda>a b.\n       \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b * P b)\n   s =\n  lfp_exp\n   (\\<lambda>a b.\n       \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b * (c * P b))\n   s\n\ngoal (3 subgoals):\n 1. \\<And>b P.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> lfp_exp\n                          (\\<lambda>Q s.\n                              \\<guillemotleft> G \\<guillemotright> s *\n                              wp body Q s +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                              P s) \\<tturnstile> \\<lambda>s. b\n 2. \\<And>b P.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> \\<lambda>s.\n                            0 \\<tturnstile> lfp_exp\n       (\\<lambda>Q s.\n           \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n           \\<guillemotleft> \\<N> G \\<guillemotright> s * P s)\n 3. \\<And>P Q.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> lfp_exp\n                          (\\<lambda>Q s.\n                              \\<guillemotleft> G \\<guillemotright> s *\n                              wp body Q s +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                              P s) \\<tturnstile> lfp_exp\n            (\\<lambda>Qa s.\n                \\<guillemotleft> G \\<guillemotright> s * wp body Qa s +\n                \\<guillemotleft> \\<N> G \\<guillemotright> s * Q s)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>b P.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> lfp_exp\n                          (\\<lambda>Q s.\n                              \\<guillemotleft> G \\<guillemotright> s *\n                              wp body Q s +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                              P s) \\<tturnstile> \\<lambda>s. b\n 2. \\<And>b P.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> \\<lambda>s.\n                            0 \\<tturnstile> lfp_exp\n       (\\<lambda>Q s.\n           \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n           \\<guillemotleft> \\<N> G \\<guillemotright> s * P s)\n 3. \\<And>P Q.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> lfp_exp\n                          (\\<lambda>Q s.\n                              \\<guillemotleft> G \\<guillemotright> s *\n                              wp body Q s +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                              P s) \\<tturnstile> lfp_exp\n            (\\<lambda>Qa s.\n                \\<guillemotleft> G \\<guillemotright> s * wp body Qa s +\n                \\<guillemotleft> \\<N> G \\<guillemotright> s * Q s)", "fix P::\"'s expect\" and b::real"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>b P.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> lfp_exp\n                          (\\<lambda>Q s.\n                              \\<guillemotleft> G \\<guillemotright> s *\n                              wp body Q s +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                              P s) \\<tturnstile> \\<lambda>s. b\n 2. \\<And>b P.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> \\<lambda>s.\n                            0 \\<tturnstile> lfp_exp\n       (\\<lambda>Q s.\n           \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n           \\<guillemotleft> \\<N> G \\<guillemotright> s * P s)\n 3. \\<And>P Q.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> lfp_exp\n                          (\\<lambda>Q s.\n                              \\<guillemotleft> G \\<guillemotright> s *\n                              wp body Q s +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                              P s) \\<tturnstile> lfp_exp\n            (\\<lambda>Qa s.\n                \\<guillemotleft> G \\<guillemotright> s * wp body Qa s +\n                \\<guillemotleft> \\<N> G \\<guillemotright> s * Q s)", "assume bP: \"bounded_by b P\" and nP: \"nneg P\""], ["proof (state)\nthis:\n  bounded_by b P\n  nneg P\n\ngoal (3 subgoals):\n 1. \\<And>b P.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> lfp_exp\n                          (\\<lambda>Q s.\n                              \\<guillemotleft> G \\<guillemotright> s *\n                              wp body Q s +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                              P s) \\<tturnstile> \\<lambda>s. b\n 2. \\<And>b P.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> \\<lambda>s.\n                            0 \\<tturnstile> lfp_exp\n       (\\<lambda>Q s.\n           \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n           \\<guillemotleft> \\<N> G \\<guillemotright> s * P s)\n 3. \\<And>P Q.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> lfp_exp\n                          (\\<lambda>Q s.\n                              \\<guillemotleft> G \\<guillemotright> s *\n                              wp body Q s +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                              P s) \\<tturnstile> lfp_exp\n            (\\<lambda>Qa s.\n                \\<guillemotleft> G \\<guillemotright> s * wp body Qa s +\n                \\<guillemotleft> \\<N> G \\<guillemotright> s * Q s)", "show \"lfp_exp (\\<lambda>Q s. \\<guillemotleft>G\\<guillemotright> s * wp body Q s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s) \\<tturnstile> \\<lambda>s. b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lfp_exp\n     (\\<lambda>Q s.\n         \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n         \\<guillemotleft> \\<N> G \\<guillemotright> s *\n         P s) \\<tturnstile> \\<lambda>s. b", "proof(intro lfp_exp_lowerbound le_funI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (\\<lambda>s. b) x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> b\n 2. sound (\\<lambda>s. b)", "fix s::'s"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (\\<lambda>s. b) x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> b\n 2. sound (\\<lambda>s. b)", "from bP nP hb"], ["proof (chain)\npicking this:\n  bounded_by b P\n  nneg P\n  healthy (wp body)", "have \"bounded_by b (wp body (\\<lambda>s. b))\""], ["proof (prove)\nusing this:\n  bounded_by b P\n  nneg P\n  healthy (wp body)\n\ngoal (1 subgoal):\n 1. bounded_by b (wp body (\\<lambda>s. b))", "by(auto)"], ["proof (state)\nthis:\n  bounded_by b (wp body (\\<lambda>s. b))\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (\\<lambda>s. b) x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> b\n 2. sound (\\<lambda>s. b)", "hence \"wp body (\\<lambda>s. b) s \\<le> b\""], ["proof (prove)\nusing this:\n  bounded_by b (wp body (\\<lambda>s. b))\n\ngoal (1 subgoal):\n 1. wp body (\\<lambda>s. b) s \\<le> b", "by(auto)"], ["proof (state)\nthis:\n  wp body (\\<lambda>s. b) s \\<le> b\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (\\<lambda>s. b) x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> b\n 2. sound (\\<lambda>s. b)", "moreover"], ["proof (state)\nthis:\n  wp body (\\<lambda>s. b) s \\<le> b\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (\\<lambda>s. b) x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> b\n 2. sound (\\<lambda>s. b)", "from bP"], ["proof (chain)\npicking this:\n  bounded_by b P", "have \"P s \\<le> b\""], ["proof (prove)\nusing this:\n  bounded_by b P\n\ngoal (1 subgoal):\n 1. P s \\<le> b", "by(auto)"], ["proof (state)\nthis:\n  P s \\<le> b\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (\\<lambda>s. b) x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> b\n 2. sound (\\<lambda>s. b)", "ultimately"], ["proof (chain)\npicking this:\n  wp body (\\<lambda>s. b) s \\<le> b\n  P s \\<le> b", "have \"\\<guillemotleft>G\\<guillemotright> s * wp body (\\<lambda>s. b) s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s \\<le> \\<guillemotleft>G\\<guillemotright> s * b + \\<guillemotleft>\\<N> G\\<guillemotright> s * b\""], ["proof (prove)\nusing this:\n  wp body (\\<lambda>s. b) s \\<le> b\n  P s \\<le> b\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wp body (\\<lambda>s. b) s +\n    \\<guillemotleft> \\<N> G \\<guillemotright> s * P s\n    \\<le> \\<guillemotleft> G \\<guillemotright> s * b +\n          \\<guillemotleft> \\<N> G \\<guillemotright> s * b", "by(auto intro!:add_mono mult_left_mono)"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wp body (\\<lambda>s. b) s +\n  \\<guillemotleft> \\<N> G \\<guillemotright> s * P s\n  \\<le> \\<guillemotleft> G \\<guillemotright> s * b +\n        \\<guillemotleft> \\<N> G \\<guillemotright> s * b\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (\\<lambda>s. b) x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> b\n 2. sound (\\<lambda>s. b)", "also"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wp body (\\<lambda>s. b) s +\n  \\<guillemotleft> \\<N> G \\<guillemotright> s * P s\n  \\<le> \\<guillemotleft> G \\<guillemotright> s * b +\n        \\<guillemotleft> \\<N> G \\<guillemotright> s * b\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (\\<lambda>s. b) x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> b\n 2. sound (\\<lambda>s. b)", "have \"... = b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * b +\n    \\<guillemotleft> \\<N> G \\<guillemotright> s * b =\n    b", "by(simp add:negate_embed field_simps)"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * b +\n  \\<guillemotleft> \\<N> G \\<guillemotright> s * b =\n  b\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (\\<lambda>s. b) x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> b\n 2. sound (\\<lambda>s. b)", "finally"], ["proof (chain)\npicking this:\n  \\<guillemotleft> G \\<guillemotright> s * wp body (\\<lambda>s. b) s +\n  \\<guillemotleft> \\<N> G \\<guillemotright> s * P s\n  \\<le> b", "show \"\\<guillemotleft>G\\<guillemotright> s * wp body (\\<lambda>s. b) s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s \\<le> b\""], ["proof (prove)\nusing this:\n  \\<guillemotleft> G \\<guillemotright> s * wp body (\\<lambda>s. b) s +\n  \\<guillemotleft> \\<N> G \\<guillemotright> s * P s\n  \\<le> b\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wp body (\\<lambda>s. b) s +\n    \\<guillemotleft> \\<N> G \\<guillemotright> s * P s\n    \\<le> b", "."], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wp body (\\<lambda>s. b) s +\n  \\<guillemotleft> \\<N> G \\<guillemotright> s * P s\n  \\<le> b\n\ngoal (1 subgoal):\n 1. sound (\\<lambda>s. b)", "from bP nP"], ["proof (chain)\npicking this:\n  bounded_by b P\n  nneg P", "have \"0 \\<le> b\""], ["proof (prove)\nusing this:\n  bounded_by b P\n  nneg P\n\ngoal (1 subgoal):\n 1. 0 \\<le> b", "by(auto)"], ["proof (state)\nthis:\n  0 \\<le> b\n\ngoal (1 subgoal):\n 1. sound (\\<lambda>s. b)", "thus \"sound (\\<lambda>s. b)\""], ["proof (prove)\nusing this:\n  0 \\<le> b\n\ngoal (1 subgoal):\n 1. sound (\\<lambda>s. b)", "by(auto)"], ["proof (state)\nthis:\n  sound (\\<lambda>s. b)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lfp_exp\n   (\\<lambda>Q s.\n       \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n       \\<guillemotleft> \\<N> G \\<guillemotright> s *\n       P s) \\<tturnstile> \\<lambda>s. b\n\ngoal (2 subgoals):\n 1. \\<And>b P.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> \\<lambda>s.\n                            0 \\<tturnstile> lfp_exp\n       (\\<lambda>Q s.\n           \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n           \\<guillemotleft> \\<N> G \\<guillemotright> s * P s)\n 2. \\<And>P Q.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> lfp_exp\n                          (\\<lambda>Q s.\n                              \\<guillemotleft> G \\<guillemotright> s *\n                              wp body Q s +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                              P s) \\<tturnstile> lfp_exp\n            (\\<lambda>Qa s.\n                \\<guillemotleft> G \\<guillemotright> s * wp body Qa s +\n                \\<guillemotleft> \\<N> G \\<guillemotright> s * Q s)", "from hb bP nP"], ["proof (chain)\npicking this:\n  healthy (wp body)\n  bounded_by b P\n  nneg P", "show \"\\<lambda>s. 0 \\<tturnstile> lfp_exp (\\<lambda>Q s. \\<guillemotleft>G\\<guillemotright> s * wp body Q s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s)\""], ["proof (prove)\nusing this:\n  healthy (wp body)\n  bounded_by b P\n  nneg P\n\ngoal (1 subgoal):\n 1. \\<lambda>s.\n       0 \\<tturnstile> lfp_exp\n                        (\\<lambda>Q s.\n                            \\<guillemotleft> G \\<guillemotright> s *\n                            wp body Q s +\n                            \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                            P s)", "by(auto dest!:sound_nneg intro!:lfp_loop_greatest)"], ["proof (state)\nthis:\n  \\<lambda>s.\n     0 \\<tturnstile> lfp_exp\n                      (\\<lambda>Q s.\n                          \\<guillemotleft> G \\<guillemotright> s *\n                          wp body Q s +\n                          \\<guillemotleft> \\<N> G \\<guillemotright> s * P s)\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> lfp_exp\n                          (\\<lambda>Q s.\n                              \\<guillemotleft> G \\<guillemotright> s *\n                              wp body Q s +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                              P s) \\<tturnstile> lfp_exp\n            (\\<lambda>Qa s.\n                \\<guillemotleft> G \\<guillemotright> s * wp body Qa s +\n                \\<guillemotleft> \\<N> G \\<guillemotright> s * Q s)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> lfp_exp\n                          (\\<lambda>Q s.\n                              \\<guillemotleft> G \\<guillemotright> s *\n                              wp body Q s +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                              P s) \\<tturnstile> lfp_exp\n            (\\<lambda>Qa s.\n                \\<guillemotleft> G \\<guillemotright> s * wp body Qa s +\n                \\<guillemotleft> \\<N> G \\<guillemotright> s * Q s)", "fix P Q::\"'s expect\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> lfp_exp\n                          (\\<lambda>Q s.\n                              \\<guillemotleft> G \\<guillemotright> s *\n                              wp body Q s +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                              P s) \\<tturnstile> lfp_exp\n            (\\<lambda>Qa s.\n                \\<guillemotleft> G \\<guillemotright> s * wp body Qa s +\n                \\<guillemotleft> \\<N> G \\<guillemotright> s * Q s)", "assume sP: \"sound P\" and sQ: \"sound Q\" and le: \"P \\<tturnstile> Q\""], ["proof (state)\nthis:\n  sound P\n  sound Q\n  P \\<tturnstile> Q\n\ngoal (1 subgoal):\n 1. \\<And>P Q.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> lfp_exp\n                          (\\<lambda>Q s.\n                              \\<guillemotleft> G \\<guillemotright> s *\n                              wp body Q s +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                              P s) \\<tturnstile> lfp_exp\n            (\\<lambda>Qa s.\n                \\<guillemotleft> G \\<guillemotright> s * wp body Qa s +\n                \\<guillemotleft> \\<N> G \\<guillemotright> s * Q s)", "show \"lfp_exp (?X P) \\<tturnstile> lfp_exp (?X Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lfp_exp\n     (\\<lambda>a b.\n         \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n         \\<guillemotleft> \\<N> G \\<guillemotright> b *\n         P b) \\<tturnstile> lfp_exp\n                             (\\<lambda>a b.\n                                 \\<guillemotleft> G \\<guillemotright> b *\n                                 wp body a b +\n                                 \\<guillemotleft> \\<N> G \\<guillemotright>\n                                  b *\n                                 Q b)", "proof(rule lfp_exp_greatest)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>Pa.\n       \\<lbrakk>\\<lambda>a.\n                   \\<guillemotleft> G \\<guillemotright> a * wp body Pa a +\n                   \\<guillemotleft> \\<N> G \\<guillemotright> a *\n                   Q a \\<tturnstile> Pa;\n        sound Pa\\<rbrakk>\n       \\<Longrightarrow> lfp_exp\n                          (\\<lambda>a b.\n                              \\<guillemotleft> G \\<guillemotright> b *\n                              wp body a b +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> b *\n                              P b) \\<tturnstile> Pa\n 2. sound\n     (lfp_exp\n       (\\<lambda>a b.\n           \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n           \\<guillemotleft> \\<N> G \\<guillemotright> b * P b))\n 3. \\<lambda>a.\n       \\<guillemotleft> G \\<guillemotright> a * wp body ?R a +\n       \\<guillemotleft> \\<N> G \\<guillemotright> a * Q a \\<tturnstile> ?R\n 4. sound ?R", "fix R::\"'s expect\""], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>Pa.\n       \\<lbrakk>\\<lambda>a.\n                   \\<guillemotleft> G \\<guillemotright> a * wp body Pa a +\n                   \\<guillemotleft> \\<N> G \\<guillemotright> a *\n                   Q a \\<tturnstile> Pa;\n        sound Pa\\<rbrakk>\n       \\<Longrightarrow> lfp_exp\n                          (\\<lambda>a b.\n                              \\<guillemotleft> G \\<guillemotright> b *\n                              wp body a b +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> b *\n                              P b) \\<tturnstile> Pa\n 2. sound\n     (lfp_exp\n       (\\<lambda>a b.\n           \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n           \\<guillemotleft> \\<N> G \\<guillemotright> b * P b))\n 3. \\<lambda>a.\n       \\<guillemotleft> G \\<guillemotright> a * wp body ?R a +\n       \\<guillemotleft> \\<N> G \\<guillemotright> a * Q a \\<tturnstile> ?R\n 4. sound ?R", "assume sR: \"sound R\"\n         and fp: \"\\<lambda>s. \\<guillemotleft>G\\<guillemotright> s * wp body R s + \\<guillemotleft>\\<N> G\\<guillemotright> s * Q s \\<tturnstile> R\""], ["proof (state)\nthis:\n  sound R\n  \\<lambda>s.\n     \\<guillemotleft> G \\<guillemotright> s * wp body R s +\n     \\<guillemotleft> \\<N> G \\<guillemotright> s * Q s \\<tturnstile> R\n\ngoal (4 subgoals):\n 1. \\<And>Pa.\n       \\<lbrakk>\\<lambda>a.\n                   \\<guillemotleft> G \\<guillemotright> a * wp body Pa a +\n                   \\<guillemotleft> \\<N> G \\<guillemotright> a *\n                   Q a \\<tturnstile> Pa;\n        sound Pa\\<rbrakk>\n       \\<Longrightarrow> lfp_exp\n                          (\\<lambda>a b.\n                              \\<guillemotleft> G \\<guillemotright> b *\n                              wp body a b +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> b *\n                              P b) \\<tturnstile> Pa\n 2. sound\n     (lfp_exp\n       (\\<lambda>a b.\n           \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n           \\<guillemotleft> \\<N> G \\<guillemotright> b * P b))\n 3. \\<lambda>a.\n       \\<guillemotleft> G \\<guillemotright> a * wp body ?R a +\n       \\<guillemotleft> \\<N> G \\<guillemotright> a * Q a \\<tturnstile> ?R\n 4. sound ?R", "from le"], ["proof (chain)\npicking this:\n  P \\<tturnstile> Q", "have \"\\<lambda>s. \\<guillemotleft>G\\<guillemotright> s * wp body R s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s \\<tturnstile>\n                    \\<lambda>s. \\<guillemotleft>G\\<guillemotright> s * wp body R s + \\<guillemotleft>\\<N> G\\<guillemotright> s * Q s\""], ["proof (prove)\nusing this:\n  P \\<tturnstile> Q\n\ngoal (1 subgoal):\n 1. \\<lambda>s.\n       \\<guillemotleft> G \\<guillemotright> s * wp body R s +\n       \\<guillemotleft> \\<N> G \\<guillemotright> s *\n       P s \\<tturnstile> \\<lambda>s.\n                            \\<guillemotleft> G \\<guillemotright> s *\n                            wp body R s +\n                            \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                            Q s", "by(auto intro:le_funI add_left_mono mult_left_mono)"], ["proof (state)\nthis:\n  \\<lambda>s.\n     \\<guillemotleft> G \\<guillemotright> s * wp body R s +\n     \\<guillemotleft> \\<N> G \\<guillemotright> s *\n     P s \\<tturnstile> \\<lambda>s.\n                          \\<guillemotleft> G \\<guillemotright> s *\n                          wp body R s +\n                          \\<guillemotleft> \\<N> G \\<guillemotright> s * Q s\n\ngoal (4 subgoals):\n 1. \\<And>Pa.\n       \\<lbrakk>\\<lambda>a.\n                   \\<guillemotleft> G \\<guillemotright> a * wp body Pa a +\n                   \\<guillemotleft> \\<N> G \\<guillemotright> a *\n                   Q a \\<tturnstile> Pa;\n        sound Pa\\<rbrakk>\n       \\<Longrightarrow> lfp_exp\n                          (\\<lambda>a b.\n                              \\<guillemotleft> G \\<guillemotright> b *\n                              wp body a b +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> b *\n                              P b) \\<tturnstile> Pa\n 2. sound\n     (lfp_exp\n       (\\<lambda>a b.\n           \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n           \\<guillemotleft> \\<N> G \\<guillemotright> b * P b))\n 3. \\<lambda>a.\n       \\<guillemotleft> G \\<guillemotright> a * wp body ?R a +\n       \\<guillemotleft> \\<N> G \\<guillemotright> a * Q a \\<tturnstile> ?R\n 4. sound ?R", "also"], ["proof (state)\nthis:\n  \\<lambda>s.\n     \\<guillemotleft> G \\<guillemotright> s * wp body R s +\n     \\<guillemotleft> \\<N> G \\<guillemotright> s *\n     P s \\<tturnstile> \\<lambda>s.\n                          \\<guillemotleft> G \\<guillemotright> s *\n                          wp body R s +\n                          \\<guillemotleft> \\<N> G \\<guillemotright> s * Q s\n\ngoal (4 subgoals):\n 1. \\<And>Pa.\n       \\<lbrakk>\\<lambda>a.\n                   \\<guillemotleft> G \\<guillemotright> a * wp body Pa a +\n                   \\<guillemotleft> \\<N> G \\<guillemotright> a *\n                   Q a \\<tturnstile> Pa;\n        sound Pa\\<rbrakk>\n       \\<Longrightarrow> lfp_exp\n                          (\\<lambda>a b.\n                              \\<guillemotleft> G \\<guillemotright> b *\n                              wp body a b +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> b *\n                              P b) \\<tturnstile> Pa\n 2. sound\n     (lfp_exp\n       (\\<lambda>a b.\n           \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n           \\<guillemotleft> \\<N> G \\<guillemotright> b * P b))\n 3. \\<lambda>a.\n       \\<guillemotleft> G \\<guillemotright> a * wp body ?R a +\n       \\<guillemotleft> \\<N> G \\<guillemotright> a * Q a \\<tturnstile> ?R\n 4. sound ?R", "note fp"], ["proof (state)\nthis:\n  \\<lambda>s.\n     \\<guillemotleft> G \\<guillemotright> s * wp body R s +\n     \\<guillemotleft> \\<N> G \\<guillemotright> s * Q s \\<tturnstile> R\n\ngoal (4 subgoals):\n 1. \\<And>Pa.\n       \\<lbrakk>\\<lambda>a.\n                   \\<guillemotleft> G \\<guillemotright> a * wp body Pa a +\n                   \\<guillemotleft> \\<N> G \\<guillemotright> a *\n                   Q a \\<tturnstile> Pa;\n        sound Pa\\<rbrakk>\n       \\<Longrightarrow> lfp_exp\n                          (\\<lambda>a b.\n                              \\<guillemotleft> G \\<guillemotright> b *\n                              wp body a b +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> b *\n                              P b) \\<tturnstile> Pa\n 2. sound\n     (lfp_exp\n       (\\<lambda>a b.\n           \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n           \\<guillemotleft> \\<N> G \\<guillemotright> b * P b))\n 3. \\<lambda>a.\n       \\<guillemotleft> G \\<guillemotright> a * wp body ?R a +\n       \\<guillemotleft> \\<N> G \\<guillemotright> a * Q a \\<tturnstile> ?R\n 4. sound ?R", "finally"], ["proof (chain)\npicking this:\n  \\<lambda>s.\n     \\<guillemotleft> G \\<guillemotright> s * wp body R s +\n     \\<guillemotleft> \\<N> G \\<guillemotright> s * P s \\<tturnstile> R", "show \"lfp_exp (\\<lambda>R s. \\<guillemotleft>G\\<guillemotright> s * wp body R s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s) \\<tturnstile> R\""], ["proof (prove)\nusing this:\n  \\<lambda>s.\n     \\<guillemotleft> G \\<guillemotright> s * wp body R s +\n     \\<guillemotleft> \\<N> G \\<guillemotright> s * P s \\<tturnstile> R\n\ngoal (1 subgoal):\n 1. lfp_exp\n     (\\<lambda>R s.\n         \\<guillemotleft> G \\<guillemotright> s * wp body R s +\n         \\<guillemotleft> \\<N> G \\<guillemotright> s * P s) \\<tturnstile> R", "using sR"], ["proof (prove)\nusing this:\n  \\<lambda>s.\n     \\<guillemotleft> G \\<guillemotright> s * wp body R s +\n     \\<guillemotleft> \\<N> G \\<guillemotright> s * P s \\<tturnstile> R\n  sound R\n\ngoal (1 subgoal):\n 1. lfp_exp\n     (\\<lambda>R s.\n         \\<guillemotleft> G \\<guillemotright> s * wp body R s +\n         \\<guillemotleft> \\<N> G \\<guillemotright> s * P s) \\<tturnstile> R", "by(auto intro:lfp_exp_lowerbound)"], ["proof (state)\nthis:\n  lfp_exp\n   (\\<lambda>R s.\n       \\<guillemotleft> G \\<guillemotright> s * wp body R s +\n       \\<guillemotleft> \\<N> G \\<guillemotright> s * P s) \\<tturnstile> R\n\ngoal (3 subgoals):\n 1. sound\n     (lfp_exp\n       (\\<lambda>a b.\n           \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n           \\<guillemotleft> \\<N> G \\<guillemotright> b * P b))\n 2. \\<lambda>a.\n       \\<guillemotleft> G \\<guillemotright> a * wp body ?R a +\n       \\<guillemotleft> \\<N> G \\<guillemotright> a * Q a \\<tturnstile> ?R\n 3. sound ?R", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. sound\n     (lfp_exp\n       (\\<lambda>a b.\n           \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n           \\<guillemotleft> \\<N> G \\<guillemotright> b * P b))\n 2. \\<lambda>a.\n       \\<guillemotleft> G \\<guillemotright> a * wp body ?R a +\n       \\<guillemotleft> \\<N> G \\<guillemotright> a * Q a \\<tturnstile> ?R\n 3. sound ?R", "from hb sP"], ["proof (chain)\npicking this:\n  healthy (wp body)\n  sound P", "show \"sound (lfp_exp (\\<lambda>R s. \\<guillemotleft>G\\<guillemotright> s * wp body R s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s))\""], ["proof (prove)\nusing this:\n  healthy (wp body)\n  sound P\n\ngoal (1 subgoal):\n 1. sound\n     (lfp_exp\n       (\\<lambda>R s.\n           \\<guillemotleft> G \\<guillemotright> s * wp body R s +\n           \\<guillemotleft> \\<N> G \\<guillemotright> s * P s))", "by(rule lfp_loop_sound)"], ["proof (state)\nthis:\n  sound\n   (lfp_exp\n     (\\<lambda>R s.\n         \\<guillemotleft> G \\<guillemotright> s * wp body R s +\n         \\<guillemotleft> \\<N> G \\<guillemotright> s * P s))\n\ngoal (2 subgoals):\n 1. \\<lambda>a.\n       \\<guillemotleft> G \\<guillemotright> a * wp body ?R a +\n       \\<guillemotleft> \\<N> G \\<guillemotright> a * Q a \\<tturnstile> ?R\n 2. sound ?R", "from hb sQ"], ["proof (chain)\npicking this:\n  healthy (wp body)\n  sound Q", "show \"\\<lambda>s. \\<guillemotleft>G\\<guillemotright> s * wp body (\\<lambda>s. bound_of Q) s +  \\<guillemotleft>\\<N> G\\<guillemotright> s * Q s \\<tturnstile> \\<lambda>s. bound_of Q\""], ["proof (prove)\nusing this:\n  healthy (wp body)\n  sound Q\n\ngoal (1 subgoal):\n 1. \\<lambda>s.\n       \\<guillemotleft> G \\<guillemotright> s *\n       wp body (\\<lambda>s. bound_of Q) s +\n       \\<guillemotleft> \\<N> G \\<guillemotright> s *\n       Q s \\<tturnstile> \\<lambda>s. bound_of Q", "by(rule lfp_loop_fp)"], ["proof (state)\nthis:\n  \\<lambda>s.\n     \\<guillemotleft> G \\<guillemotright> s *\n     wp body (\\<lambda>s. bound_of Q) s +\n     \\<guillemotleft> \\<N> G \\<guillemotright> s *\n     Q s \\<tturnstile> \\<lambda>s. bound_of Q\n\ngoal (1 subgoal):\n 1. sound (\\<lambda>s. bound_of Q)", "from sQ"], ["proof (chain)\npicking this:\n  sound Q", "show \"sound (\\<lambda>s. bound_of Q)\""], ["proof (prove)\nusing this:\n  sound Q\n\ngoal (1 subgoal):\n 1. sound (\\<lambda>s. bound_of Q)", "by(auto)"], ["proof (state)\nthis:\n  sound (\\<lambda>s. bound_of Q)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lfp_exp\n   (\\<lambda>a b.\n       \\<guillemotleft> G \\<guillemotright> b * wp body a b +\n       \\<guillemotleft> \\<N> G \\<guillemotright> b *\n       P b) \\<tturnstile> lfp_exp\n                           (\\<lambda>a b.\n                               \\<guillemotleft> G \\<guillemotright> b *\n                               wp body a b +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> b *\n                               Q b)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  healthy\n   (wp (\\<mu>x.\n           body ;;\n           x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Use 'simp add:healthy\\_intros' or 'blast intro:healthy\\_intros' as\n        appropriate to discharge healthiness side-contitions for primitive\n        programs automatically.\\<close>"], ["", "lemmas healthy_intros =\n  healthy_wp_Abort nearly_healthy_wlp_Abort healthy_wp_Skip   nearly_healthy_wlp_Skip\n  healthy_wp_Seq   nearly_healthy_wlp_Seq   healthy_wp_PC     nearly_healthy_wlp_PC\n  healthy_wp_DC    nearly_healthy_wlp_DC    healthy_wp_AC     nearly_healthy_wlp_AC\n  healthy_wp_Embed nearly_healthy_wlp_Embed healthy_wp_Apply  nearly_healthy_wlp_Apply\n  healthy_wp_SetDC nearly_healthy_wlp_SetDC healthy_wp_SetPC  nearly_healthy_wlp_SetPC\n  healthy_wp_Bind  nearly_healthy_wlp_Bind  healthy_wp_repeat nearly_healthy_wlp_repeat\n  healthy_wp_loop  nearly_healthy_wlp_loop"], ["", "end"]]}