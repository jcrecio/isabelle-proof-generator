{"file_name": "/home/qj213/afp-2021-10-22/thys/pGCL/LoopInduction.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/pGCL", "problem_names": ["lemma wp_loop_step_mono_trans:\n  fixes body::\"'s prog\"\n  assumes sP: \"sound P\"\n      and hb: \"healthy (wp body)\"\n  shows \"mono_trans (\\<lambda>Q s. \\<guillemotleft> G \\<guillemotright> s * wp body Q s + \\<guillemotleft> \\<N> G \\<guillemotright> s * P s)\"", "lemma lfp_wp_loop_unfold:\n  fixes body::\"'s prog\"\n  assumes hb: \"healthy (wp body)\"\n      and sP: \"sound P\"\n  shows \"lfp_exp (\\<lambda>Q s. \\<guillemotleft>G\\<guillemotright> s * wp body Q s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s) =\n         (\\<lambda>s. \\<guillemotleft>G\\<guillemotright> s * wp body (lfp_exp (\\<lambda>Q s. \\<guillemotleft>G\\<guillemotright> s * wp body Q s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s)) s +\n              \\<guillemotleft>\\<N> G\\<guillemotright> s * P s)\"", "lemma wp_loop_step_unitary:\n  fixes body::\"'s prog\"\n  assumes hb: \"healthy (wp body)\"\n      and uP: \"unitary P\" and uQ: \"unitary Q\"\n  shows \"unitary (\\<lambda>s. \\<guillemotleft>G\\<guillemotright> s * wp body Q s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s)\"", "lemma lfp_loop_unitary:\n  fixes body::\"'s prog\"\n  assumes hb: \"healthy (wp body)\"\n      and uP: \"unitary P\"\n  shows \"unitary (lfp_exp (\\<lambda>Q s. \\<guillemotleft>G\\<guillemotright> s * wp body Q s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s))\"", "lemma loop_induct:\n  fixes body::\"'s prog\"\n  assumes hwp:  \"healthy (wp body)\"\n      and hwlp: \"nearly_healthy (wlp body)\"\n      \\<comment> \\<open>The body must be healthy, both in strict and liberal semantics.\\<close>\n      and Limit:   \"\\<And>S. \\<lbrakk> \\<forall>x\\<in>S. P (fst x) (snd x); \\<forall>x\\<in>S. feasible (fst x);\n                          \\<forall>x\\<in>S. \\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q) \\<rbrakk> \\<Longrightarrow>\n                    P (Sup_trans (fst ` S)) (Inf_utrans (snd ` S))\"\n      \\<comment> \\<open>The property holds at limit points.\\<close>\n      and IH:   \"\\<And>t u. \\<lbrakk> P t u; feasible t; \\<And>Q. unitary Q \\<Longrightarrow> unitary (u Q)  \\<rbrakk> \\<Longrightarrow>\n                        P (wp  (body ;; Embed t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wlp (body ;; Embed u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\"\n      \\<comment> \\<open>The inductive step.  The property is preserved by a single loop iteration.\\<close>\n      and P_equiv: \"\\<And>t t' u u'. \\<lbrakk> P t u; equiv_trans t t'; equiv_utrans u u' \\<rbrakk> \\<Longrightarrow> P t' u'\"\n      \\<comment> \\<open>The property must be preserved by equivalence\\<close>\n  shows \"P (wp (do G \\<longrightarrow> body od)) (wlp (do G \\<longrightarrow> body od))\"\n  \\<comment> \\<open>The property can refer to both interpretations simultaneously.  The unifier will happily\n  apply the rule to just one or the other, however.\\<close>", "lemma iterates_0[simp]:\n  \"iterates body G 0 = (\\<lambda>P s. 0)\"", "lemma iterates_Suc[simp]:\n  \"iterates body G (Suc i) = wp (body ;; Embed (iterates body G i) \\<^bsub>\\<guillemotleft>G\\<guillemotright>\\<^esub>\\<oplus> Skip)\"", "lemma iterates_healthy:\n  \"healthy (wp body) \\<Longrightarrow> healthy (iterates body G i)\"", "lemma iterates_increasing:\n  fixes body::\"'s prog\"\n  assumes hb: \"healthy (wp body)\"\n  shows \"le_trans (iterates body G i) (iterates body G (Suc i))\"", "lemma wp_loop_step_bounded:\n  fixes t::\"'s trans\" and Q::\"'s expect\"\n  assumes nQ: \"nneg Q\"\n      and bQ: \"bounded_by b Q\"\n      and ht: \"healthy t\"\n      and hb: \"healthy (wp body)\"\n  shows \"bounded_by b (wp (body ;; Embed t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) Q)\"", "lemma lfp_iterates:\n  fixes body::\"'s prog\"\n  assumes hb: \"healthy (wp body)\"\n      and cb: \"bd_cts (wp body)\"\n  shows \"equiv_trans (wp (do G \\<longrightarrow> body od)) (Sup_trans (range (iterates body G)))\"\n        (is \"equiv_trans ?X ?Y\")", "lemma cts_iterates:\n  fixes body::\"'s prog\"\n  assumes hb: \"healthy (wp body)\"\n      and cb: \"bd_cts (wp body)\"\n  shows \"bd_cts (iterates body G i)\"", "lemma cts_wp_loop:\n  fixes body::\"'s prog\"\n  assumes hb: \"healthy (wp body)\"\n      and cb: \"bd_cts (wp body)\"\n  shows \"bd_cts (wp do G \\<longrightarrow> body od)\"", "lemmas cts_intros =\n  cts_wp_Abort  cts_wp_Skip\n  cts_wp_Seq    cts_wp_PC\n  cts_wp_DC     cts_wp_Embed\n  cts_wp_Apply  cts_wp_SetDC\n  cts_wp_SetPC  cts_wp_Bind\n  cts_wp_repeat"], "translations": [["", "lemma wp_loop_step_mono_trans:\n  fixes body::\"'s prog\"\n  assumes sP: \"sound P\"\n      and hb: \"healthy (wp body)\"\n  shows \"mono_trans (\\<lambda>Q s. \\<guillemotleft> G \\<guillemotright> s * wp body Q s + \\<guillemotleft> \\<N> G \\<guillemotright> s * P s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mono_trans\n     (\\<lambda>Q s.\n         \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n         \\<guillemotleft> \\<N> G \\<guillemotright> s * P s)", "proof(intro mono_transI le_funI, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wp body P x\n                         \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                               wp body Q x", "fix Q R::\"'s expect\" and s::'s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wp body P x\n                         \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                               wp body Q x", "assume sQ: \"sound Q\" and sR: \"sound R\" and le: \"Q \\<tturnstile> R\""], ["proof (state)\nthis:\n  sound Q\n  sound R\n  Q \\<tturnstile> R\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wp body P x\n                         \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                               wp body Q x", "hence \"wp body Q \\<tturnstile> wp body R\""], ["proof (prove)\nusing this:\n  sound Q\n  sound R\n  Q \\<tturnstile> R\n\ngoal (1 subgoal):\n 1. wp body Q \\<tturnstile> wp body R", "by(rule mono_transD[OF healthy_monoD, OF hb])"], ["proof (state)\nthis:\n  wp body Q \\<tturnstile> wp body R\n\ngoal (1 subgoal):\n 1. \\<And>P Q x.\n       \\<lbrakk>sound P; sound Q; P \\<tturnstile> Q\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wp body P x\n                         \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                               wp body Q x", "thus \"\\<guillemotleft>G\\<guillemotright> s * wp body Q s \\<le> \\<guillemotleft>G\\<guillemotright> s * wp body R s\""], ["proof (prove)\nusing this:\n  wp body Q \\<tturnstile> wp body R\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wp body Q s\n    \\<le> \\<guillemotleft> G \\<guillemotright> s * wp body R s", "by(auto dest:le_funD intro:mult_left_mono)"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wp body Q s\n  \\<le> \\<guillemotleft> G \\<guillemotright> s * wp body R s\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>We can therefore apply the standard fixed-point lemmas to unfold it:\\<close>"], ["", "lemma lfp_wp_loop_unfold:\n  fixes body::\"'s prog\"\n  assumes hb: \"healthy (wp body)\"\n      and sP: \"sound P\"\n  shows \"lfp_exp (\\<lambda>Q s. \\<guillemotleft>G\\<guillemotright> s * wp body Q s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s) =\n         (\\<lambda>s. \\<guillemotleft>G\\<guillemotright> s * wp body (lfp_exp (\\<lambda>Q s. \\<guillemotleft>G\\<guillemotright> s * wp body Q s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s)) s +\n              \\<guillemotleft>\\<N> G\\<guillemotright> s * P s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lfp_exp\n     (\\<lambda>Q s.\n         \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n         \\<guillemotleft> \\<N> G \\<guillemotright> s * P s) =\n    (\\<lambda>s.\n        \\<guillemotleft> G \\<guillemotright> s *\n        wp body\n         (lfp_exp\n           (\\<lambda>Q s.\n               \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n               \\<guillemotleft> \\<N> G \\<guillemotright> s * P s))\n         s +\n        \\<guillemotleft> \\<N> G \\<guillemotright> s * P s)", "proof(rule lfp_exp_unfold)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>Pa.\n       sound Pa \\<Longrightarrow>\n       sound\n        (\\<lambda>s.\n            \\<guillemotleft> G \\<guillemotright> s * wp body Pa s +\n            \\<guillemotleft> \\<N> G \\<guillemotright> s * P s)\n 2. mono_trans\n     (\\<lambda>Q s.\n         \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n         \\<guillemotleft> \\<N> G \\<guillemotright> s * P s)\n 3. \\<lambda>s.\n       \\<guillemotleft> G \\<guillemotright> s * wp body ?R s +\n       \\<guillemotleft> \\<N> G \\<guillemotright> s * P s \\<tturnstile> ?R\n 4. sound ?R", "from assms"], ["proof (chain)\npicking this:\n  healthy (wp body)\n  sound P", "show \"mono_trans (\\<lambda>Q s. \\<guillemotleft>G\\<guillemotright> s * wp body Q s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s)\""], ["proof (prove)\nusing this:\n  healthy (wp body)\n  sound P\n\ngoal (1 subgoal):\n 1. mono_trans\n     (\\<lambda>Q s.\n         \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n         \\<guillemotleft> \\<N> G \\<guillemotright> s * P s)", "by(blast intro:wp_loop_step_mono_trans)"], ["proof (state)\nthis:\n  mono_trans\n   (\\<lambda>Q s.\n       \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n       \\<guillemotleft> \\<N> G \\<guillemotright> s * P s)\n\ngoal (3 subgoals):\n 1. \\<And>Pa.\n       sound Pa \\<Longrightarrow>\n       sound\n        (\\<lambda>s.\n            \\<guillemotleft> G \\<guillemotright> s * wp body Pa s +\n            \\<guillemotleft> \\<N> G \\<guillemotright> s * P s)\n 2. \\<lambda>s.\n       \\<guillemotleft> G \\<guillemotright> s * wp body ?R s +\n       \\<guillemotleft> \\<N> G \\<guillemotright> s * P s \\<tturnstile> ?R\n 3. sound ?R", "from assms"], ["proof (chain)\npicking this:\n  healthy (wp body)\n  sound P", "show \"\\<lambda>s. \\<guillemotleft>G\\<guillemotright> s * wp body (\\<lambda>s. bound_of P) s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s \\<tturnstile> \\<lambda>s. bound_of P\""], ["proof (prove)\nusing this:\n  healthy (wp body)\n  sound P\n\ngoal (1 subgoal):\n 1. \\<lambda>s.\n       \\<guillemotleft> G \\<guillemotright> s *\n       wp body (\\<lambda>s. bound_of P) s +\n       \\<guillemotleft> \\<N> G \\<guillemotright> s *\n       P s \\<tturnstile> \\<lambda>s. bound_of P", "by(blast intro:lfp_loop_fp)"], ["proof (state)\nthis:\n  \\<lambda>s.\n     \\<guillemotleft> G \\<guillemotright> s *\n     wp body (\\<lambda>s. bound_of P) s +\n     \\<guillemotleft> \\<N> G \\<guillemotright> s *\n     P s \\<tturnstile> \\<lambda>s. bound_of P\n\ngoal (2 subgoals):\n 1. \\<And>Pa.\n       sound Pa \\<Longrightarrow>\n       sound\n        (\\<lambda>s.\n            \\<guillemotleft> G \\<guillemotright> s * wp body Pa s +\n            \\<guillemotleft> \\<N> G \\<guillemotright> s * P s)\n 2. sound (\\<lambda>s. bound_of P)", "from sP"], ["proof (chain)\npicking this:\n  sound P", "show \"sound (\\<lambda>s. bound_of P)\""], ["proof (prove)\nusing this:\n  sound P\n\ngoal (1 subgoal):\n 1. sound (\\<lambda>s. bound_of P)", "by(auto)"], ["proof (state)\nthis:\n  sound (\\<lambda>s. bound_of P)\n\ngoal (1 subgoal):\n 1. \\<And>Pa.\n       sound Pa \\<Longrightarrow>\n       sound\n        (\\<lambda>s.\n            \\<guillemotleft> G \\<guillemotright> s * wp body Pa s +\n            \\<guillemotleft> \\<N> G \\<guillemotright> s * P s)", "fix Q::\"'s expect\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Pa.\n       sound Pa \\<Longrightarrow>\n       sound\n        (\\<lambda>s.\n            \\<guillemotleft> G \\<guillemotright> s * wp body Pa s +\n            \\<guillemotleft> \\<N> G \\<guillemotright> s * P s)", "assume \"sound Q\""], ["proof (state)\nthis:\n  sound Q\n\ngoal (1 subgoal):\n 1. \\<And>Pa.\n       sound Pa \\<Longrightarrow>\n       sound\n        (\\<lambda>s.\n            \\<guillemotleft> G \\<guillemotright> s * wp body Pa s +\n            \\<guillemotleft> \\<N> G \\<guillemotright> s * P s)", "with assms"], ["proof (chain)\npicking this:\n  healthy (wp body)\n  sound P\n  sound Q", "show \"sound (\\<lambda>s. \\<guillemotleft>G\\<guillemotright> s * wp body Q s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s)\""], ["proof (prove)\nusing this:\n  healthy (wp body)\n  sound P\n  sound Q\n\ngoal (1 subgoal):\n 1. sound\n     (\\<lambda>s.\n         \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n         \\<guillemotleft> \\<N> G \\<guillemotright> s * P s)", "by(intro wp_loop_step_sound[unfolded wp_eval, simplified, folded negate_embed], auto)"], ["proof (state)\nthis:\n  sound\n   (\\<lambda>s.\n       \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n       \\<guillemotleft> \\<N> G \\<guillemotright> s * P s)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wp_loop_step_unitary:\n  fixes body::\"'s prog\"\n  assumes hb: \"healthy (wp body)\"\n      and uP: \"unitary P\" and uQ: \"unitary Q\"\n  shows \"unitary (\\<lambda>s. \\<guillemotleft>G\\<guillemotright> s * wp body Q s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. unitary\n     (\\<lambda>s.\n         \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n         \\<guillemotleft> \\<N> G \\<guillemotright> s * P s)", "proof(intro unitaryI2 nnegI bounded_byI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       0 \\<le> \\<guillemotleft> G \\<guillemotright> x * wp body Q x +\n               \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n 2. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body Q x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> 1", "fix s::'s"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       0 \\<le> \\<guillemotleft> G \\<guillemotright> x * wp body Q x +\n               \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n 2. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body Q x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> 1", "from uQ hb"], ["proof (chain)\npicking this:\n  unitary Q\n  healthy (wp body)", "have uwQ: \"unitary (wp body Q)\""], ["proof (prove)\nusing this:\n  unitary Q\n  healthy (wp body)\n\ngoal (1 subgoal):\n 1. unitary (wp body Q)", "by(auto)"], ["proof (state)\nthis:\n  unitary (wp body Q)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       0 \\<le> \\<guillemotleft> G \\<guillemotright> x * wp body Q x +\n               \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n 2. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body Q x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> 1", "with uP"], ["proof (chain)\npicking this:\n  unitary P\n  unitary (wp body Q)", "have \"0 \\<le> wp body Q s\" \"0 \\<le> P s\""], ["proof (prove)\nusing this:\n  unitary P\n  unitary (wp body Q)\n\ngoal (1 subgoal):\n 1. 0 \\<le> wp body Q s &&& 0 \\<le> P s", "by(auto)"], ["proof (state)\nthis:\n  0 \\<le> wp body Q s\n  0 \\<le> P s\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       0 \\<le> \\<guillemotleft> G \\<guillemotright> x * wp body Q x +\n               \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n 2. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body Q x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> 1", "thus \"0 \\<le> \\<guillemotleft>G\\<guillemotright> s * wp body Q s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s\""], ["proof (prove)\nusing this:\n  0 \\<le> wp body Q s\n  0 \\<le> P s\n\ngoal (1 subgoal):\n 1. 0 \\<le> \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n            \\<guillemotleft> \\<N> G \\<guillemotright> s * P s", "by(auto intro:add_nonneg_nonneg mult_nonneg_nonneg)"], ["proof (state)\nthis:\n  0 \\<le> \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n          \\<guillemotleft> \\<N> G \\<guillemotright> s * P s\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body Q x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> 1", "from uP uwQ"], ["proof (chain)\npicking this:\n  unitary P\n  unitary (wp body Q)", "have \"wp body Q s \\<le> 1\" \"P s \\<le> 1\""], ["proof (prove)\nusing this:\n  unitary P\n  unitary (wp body Q)\n\ngoal (1 subgoal):\n 1. wp body Q s \\<le> 1 &&& P s \\<le> 1", "by(auto)"], ["proof (state)\nthis:\n  wp body Q s \\<le> 1\n  P s \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body Q x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> 1", "hence \"\\<guillemotleft>G\\<guillemotright> s * wp body Q s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s \\<le> \\<guillemotleft>G\\<guillemotright> s * 1 + \\<guillemotleft>\\<N> G\\<guillemotright> s * 1\""], ["proof (prove)\nusing this:\n  wp body Q s \\<le> 1\n  P s \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n    \\<guillemotleft> \\<N> G \\<guillemotright> s * P s\n    \\<le> \\<guillemotleft> G \\<guillemotright> s * 1 +\n          \\<guillemotleft> \\<N> G \\<guillemotright> s * 1", "by(blast intro:add_mono mult_left_mono)"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n  \\<guillemotleft> \\<N> G \\<guillemotright> s * P s\n  \\<le> \\<guillemotleft> G \\<guillemotright> s * 1 +\n        \\<guillemotleft> \\<N> G \\<guillemotright> s * 1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body Q x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> 1", "also"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n  \\<guillemotleft> \\<N> G \\<guillemotright> s * P s\n  \\<le> \\<guillemotleft> G \\<guillemotright> s * 1 +\n        \\<guillemotleft> \\<N> G \\<guillemotright> s * 1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body Q x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> 1", "have \"... = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * 1 +\n    \\<guillemotleft> \\<N> G \\<guillemotright> s * 1 =\n    1", "by(simp add:negate_embed)"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * 1 +\n  \\<guillemotleft> \\<N> G \\<guillemotright> s * 1 =\n  1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body Q x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> 1", "finally"], ["proof (chain)\npicking this:\n  \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n  \\<guillemotleft> \\<N> G \\<guillemotright> s * P s\n  \\<le> 1", "show \"\\<guillemotleft>G\\<guillemotright> s * wp body Q s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s \\<le> 1\""], ["proof (prove)\nusing this:\n  \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n  \\<guillemotleft> \\<N> G \\<guillemotright> s * P s\n  \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n    \\<guillemotleft> \\<N> G \\<guillemotright> s * P s\n    \\<le> 1", "."], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n  \\<guillemotleft> \\<N> G \\<guillemotright> s * P s\n  \\<le> 1\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lfp_loop_unitary:\n  fixes body::\"'s prog\"\n  assumes hb: \"healthy (wp body)\"\n      and uP: \"unitary P\"\n  shows \"unitary (lfp_exp (\\<lambda>Q s. \\<guillemotleft>G\\<guillemotright> s * wp body Q s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. unitary\n     (lfp_exp\n       (\\<lambda>Q s.\n           \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n           \\<guillemotleft> \\<N> G \\<guillemotright> s * P s))", "using assms"], ["proof (prove)\nusing this:\n  healthy (wp body)\n  unitary P\n\ngoal (1 subgoal):\n 1. unitary\n     (lfp_exp\n       (\\<lambda>Q s.\n           \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n           \\<guillemotleft> \\<N> G \\<guillemotright> s * P s))", "by(blast intro:lfp_exp_unitary wp_loop_step_unitary)"], ["", "text \\<open>From the lattice structure on transformers, we establish a transfinite induction\n  principle for loops.  We use this to show a number of properties, particularly\n  subdistributivity, for loops.  This proof follows the pattern of lemma lfp\\_ordinal\\_induct\n  in HOL/Inductive.\\<close>"], ["", "lemma loop_induct:\n  fixes body::\"'s prog\"\n  assumes hwp:  \"healthy (wp body)\"\n      and hwlp: \"nearly_healthy (wlp body)\"\n      \\<comment> \\<open>The body must be healthy, both in strict and liberal semantics.\\<close>\n      and Limit:   \"\\<And>S. \\<lbrakk> \\<forall>x\\<in>S. P (fst x) (snd x); \\<forall>x\\<in>S. feasible (fst x);\n                          \\<forall>x\\<in>S. \\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q) \\<rbrakk> \\<Longrightarrow>\n                    P (Sup_trans (fst ` S)) (Inf_utrans (snd ` S))\"\n      \\<comment> \\<open>The property holds at limit points.\\<close>\n      and IH:   \"\\<And>t u. \\<lbrakk> P t u; feasible t; \\<And>Q. unitary Q \\<Longrightarrow> unitary (u Q)  \\<rbrakk> \\<Longrightarrow>\n                        P (wp  (body ;; Embed t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wlp (body ;; Embed u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\"\n      \\<comment> \\<open>The inductive step.  The property is preserved by a single loop iteration.\\<close>\n      and P_equiv: \"\\<And>t t' u u'. \\<lbrakk> P t u; equiv_trans t t'; equiv_utrans u u' \\<rbrakk> \\<Longrightarrow> P t' u'\"\n      \\<comment> \\<open>The property must be preserved by equivalence\\<close>\n  shows \"P (wp (do G \\<longrightarrow> body od)) (wlp (do G \\<longrightarrow> body od))\"\n  \\<comment> \\<open>The property can refer to both interpretations simultaneously.  The unifier will happily\n  apply the rule to just one or the other, however.\\<close>"], ["proof (prove)\ngoal (1 subgoal):\n 1. P (wp (\\<mu>x.\n              body ;;\n              x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     (wlp (\\<mu>x.\n              body ;;\n              x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "proof(simp add:wp_eval)"], ["proof (state)\ngoal (1 subgoal):\n 1. P (lfp_trans\n        (\\<lambda>x.\n            wp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n     (gfp_trans\n       (\\<lambda>x.\n           wlp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "let \"?X t\" = \"wp (body ;; Embed t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\""], ["proof (state)\ngoal (1 subgoal):\n 1. P (lfp_trans\n        (\\<lambda>x.\n            wp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n     (gfp_trans\n       (\\<lambda>x.\n           wlp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "let \"?Y t\" = \"wlp (body ;; Embed t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\""], ["proof (state)\ngoal (1 subgoal):\n 1. P (lfp_trans\n        (\\<lambda>x.\n            wp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n     (gfp_trans\n       (\\<lambda>x.\n           wlp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "let ?M = \"{x. P (fst x) (snd x) \\<and>\n                feasible (fst x) \\<and>\n                (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                le_trans (fst x) (lfp_trans ?X) \\<and>\n                le_utrans (gfp_trans ?Y) (snd x)}\""], ["proof (state)\ngoal (1 subgoal):\n 1. P (lfp_trans\n        (\\<lambda>x.\n            wp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n     (gfp_trans\n       (\\<lambda>x.\n           wlp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "have fSup: \"feasible (Sup_trans (fst ` ?M))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. feasible\n     (Sup_trans\n       (fst `\n        {x. P (fst x) (snd x) \\<and>\n            feasible (fst x) \\<and>\n            (\\<forall>Q.\n                unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n            le_trans (fst x)\n             (lfp_trans\n               (\\<lambda>a.\n                   wp (body ;;\n                       Embed\n                        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n            le_utrans\n             (gfp_trans\n               (\\<lambda>a.\n                   wlp (body ;;\n                        Embed\n                         a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n             (snd x)}))", "proof(intro feasibleI bounded_byI2 nnegI2)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>b Pa.\n       \\<lbrakk>bounded_by b Pa; nneg Pa\\<rbrakk>\n       \\<Longrightarrow> Sup_trans\n                          (fst `\n                           {x. P (fst x) (snd x) \\<and>\n                               feasible (fst x) \\<and>\n                               (\\<forall>Q.\n                                   unitary Q \\<longrightarrow>\n                                   unitary (snd x Q)) \\<and>\n                               le_trans (fst x)\n                                (lfp_trans\n                                  (\\<lambda>a.\nwp (body ;;\n    Embed\n     a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                               le_utrans\n                                (gfp_trans\n                                  (\\<lambda>a.\nwlp (body ;;\n     Embed\n      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                                (snd x)})\n                          Pa \\<tturnstile> \\<lambda>s. b\n 2. \\<And>b Pa.\n       \\<lbrakk>bounded_by b Pa; nneg Pa\\<rbrakk>\n       \\<Longrightarrow> \\<lambda>s.\n                            0 \\<tturnstile> Sup_trans\n       (fst `\n        {x. P (fst x) (snd x) \\<and>\n            feasible (fst x) \\<and>\n            (\\<forall>Q.\n                unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n            le_trans (fst x)\n             (lfp_trans\n               (\\<lambda>a.\n                   wp (body ;;\n                       Embed\n                        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n            le_utrans\n             (gfp_trans\n               (\\<lambda>a.\n                   wlp (body ;;\n                        Embed\n                         a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n             (snd x)})\n       Pa", "fix Q::\"'s expect\" and b::real"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>b Pa.\n       \\<lbrakk>bounded_by b Pa; nneg Pa\\<rbrakk>\n       \\<Longrightarrow> Sup_trans\n                          (fst `\n                           {x. P (fst x) (snd x) \\<and>\n                               feasible (fst x) \\<and>\n                               (\\<forall>Q.\n                                   unitary Q \\<longrightarrow>\n                                   unitary (snd x Q)) \\<and>\n                               le_trans (fst x)\n                                (lfp_trans\n                                  (\\<lambda>a.\nwp (body ;;\n    Embed\n     a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                               le_utrans\n                                (gfp_trans\n                                  (\\<lambda>a.\nwlp (body ;;\n     Embed\n      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                                (snd x)})\n                          Pa \\<tturnstile> \\<lambda>s. b\n 2. \\<And>b Pa.\n       \\<lbrakk>bounded_by b Pa; nneg Pa\\<rbrakk>\n       \\<Longrightarrow> \\<lambda>s.\n                            0 \\<tturnstile> Sup_trans\n       (fst `\n        {x. P (fst x) (snd x) \\<and>\n            feasible (fst x) \\<and>\n            (\\<forall>Q.\n                unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n            le_trans (fst x)\n             (lfp_trans\n               (\\<lambda>a.\n                   wp (body ;;\n                       Embed\n                        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n            le_utrans\n             (gfp_trans\n               (\\<lambda>a.\n                   wlp (body ;;\n                        Embed\n                         a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n             (snd x)})\n       Pa", "assume nQ: \"nneg Q\" and bQ: \"bounded_by b Q\""], ["proof (state)\nthis:\n  nneg Q\n  bounded_by b Q\n\ngoal (2 subgoals):\n 1. \\<And>b Pa.\n       \\<lbrakk>bounded_by b Pa; nneg Pa\\<rbrakk>\n       \\<Longrightarrow> Sup_trans\n                          (fst `\n                           {x. P (fst x) (snd x) \\<and>\n                               feasible (fst x) \\<and>\n                               (\\<forall>Q.\n                                   unitary Q \\<longrightarrow>\n                                   unitary (snd x Q)) \\<and>\n                               le_trans (fst x)\n                                (lfp_trans\n                                  (\\<lambda>a.\nwp (body ;;\n    Embed\n     a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                               le_utrans\n                                (gfp_trans\n                                  (\\<lambda>a.\nwlp (body ;;\n     Embed\n      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                                (snd x)})\n                          Pa \\<tturnstile> \\<lambda>s. b\n 2. \\<And>b Pa.\n       \\<lbrakk>bounded_by b Pa; nneg Pa\\<rbrakk>\n       \\<Longrightarrow> \\<lambda>s.\n                            0 \\<tturnstile> Sup_trans\n       (fst `\n        {x. P (fst x) (snd x) \\<and>\n            feasible (fst x) \\<and>\n            (\\<forall>Q.\n                unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n            le_trans (fst x)\n             (lfp_trans\n               (\\<lambda>a.\n                   wp (body ;;\n                       Embed\n                        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n            le_utrans\n             (gfp_trans\n               (\\<lambda>a.\n                   wlp (body ;;\n                        Embed\n                         a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n             (snd x)})\n       Pa", "show \"Sup_trans (fst ` ?M) Q \\<tturnstile> \\<lambda>s. b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup_trans\n     (fst `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)})\n     Q \\<tturnstile> \\<lambda>s. b", "unfolding Sup_trans_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup_exp\n     {t Q |t.\n      t \\<in> fst `\n              {x. P (fst x) (snd x) \\<and>\n                  feasible (fst x) \\<and>\n                  (\\<forall>Q.\n                      unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                  le_trans (fst x)\n                   (lfp_trans\n                     (\\<lambda>a.\n                         wp (body ;;\n                             Embed\n                              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                  le_utrans\n                   (gfp_trans\n                     (\\<lambda>a.\n                         wlp (body ;;\n                              Embed\n                               a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                   (snd x)}} \\<tturnstile> \\<lambda>s. b", "using nQ bQ"], ["proof (prove)\nusing this:\n  nneg Q\n  bounded_by b Q\n\ngoal (1 subgoal):\n 1. Sup_exp\n     {t Q |t.\n      t \\<in> fst `\n              {x. P (fst x) (snd x) \\<and>\n                  feasible (fst x) \\<and>\n                  (\\<forall>Q.\n                      unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                  le_trans (fst x)\n                   (lfp_trans\n                     (\\<lambda>a.\n                         wp (body ;;\n                             Embed\n                              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                  le_utrans\n                   (gfp_trans\n                     (\\<lambda>a.\n                         wlp (body ;;\n                              Embed\n                               a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                   (snd x)}} \\<tturnstile> \\<lambda>s. b", "by(auto intro!:Sup_exp_least)"], ["proof (state)\nthis:\n  Sup_trans\n   (fst `\n    {x. P (fst x) (snd x) \\<and>\n        feasible (fst x) \\<and>\n        (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n        le_trans (fst x)\n         (lfp_trans\n           (\\<lambda>a.\n               wp (body ;;\n                   Embed\n                    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n        le_utrans\n         (gfp_trans\n           (\\<lambda>a.\n               wlp (body ;;\n                    Embed\n                     a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n         (snd x)})\n   Q \\<tturnstile> \\<lambda>s. b\n\ngoal (1 subgoal):\n 1. \\<And>b Pa.\n       \\<lbrakk>bounded_by b Pa; nneg Pa\\<rbrakk>\n       \\<Longrightarrow> \\<lambda>s.\n                            0 \\<tturnstile> Sup_trans\n       (fst `\n        {x. P (fst x) (snd x) \\<and>\n            feasible (fst x) \\<and>\n            (\\<forall>Q.\n                unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n            le_trans (fst x)\n             (lfp_trans\n               (\\<lambda>a.\n                   wp (body ;;\n                       Embed\n                        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n            le_utrans\n             (gfp_trans\n               (\\<lambda>a.\n                   wlp (body ;;\n                        Embed\n                         a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n             (snd x)})\n       Pa", "show \"\\<lambda>s. 0 \\<tturnstile> Sup_trans (fst ` ?M) Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lambda>s.\n       0 \\<tturnstile> Sup_trans\n                        (fst `\n                         {x. P (fst x) (snd x) \\<and>\n                             feasible (fst x) \\<and>\n                             (\\<forall>Q.\n                                 unitary Q \\<longrightarrow>\n                                 unitary (snd x Q)) \\<and>\n                             le_trans (fst x)\n                              (lfp_trans\n                                (\\<lambda>a.\n                                    wp (body ;;\n  Embed\n   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                             le_utrans\n                              (gfp_trans\n                                (\\<lambda>a.\n                                    wlp (body ;;\n   Embed\n    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                              (snd x)})\n                        Q", "proof(cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<lambda>s.\n       0 \\<tturnstile> Sup_trans\n                        (fst `\n                         {x. P (fst x) (snd x) \\<and>\n                             feasible (fst x) \\<and>\n                             (\\<forall>Q.\n                                 unitary Q \\<longrightarrow>\n                                 unitary (snd x Q)) \\<and>\n                             le_trans (fst x)\n                              (lfp_trans\n                                (\\<lambda>a.\n                                    wp (body ;;\n  Embed\n   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                             le_utrans\n                              (gfp_trans\n                                (\\<lambda>a.\n                                    wlp (body ;;\n   Embed\n    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                              (snd x)})\n                        Q\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<lambda>s.\n       0 \\<tturnstile> Sup_trans\n                        (fst `\n                         {x. P (fst x) (snd x) \\<and>\n                             feasible (fst x) \\<and>\n                             (\\<forall>Q.\n                                 unitary Q \\<longrightarrow>\n                                 unitary (snd x Q)) \\<and>\n                             le_trans (fst x)\n                              (lfp_trans\n                                (\\<lambda>a.\n                                    wp (body ;;\n  Embed\n   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                             le_utrans\n                              (gfp_trans\n                                (\\<lambda>a.\n                                    wlp (body ;;\n   Embed\n    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                              (snd x)})\n                        Q", "assume empty: \"?M = {}\""], ["proof (state)\nthis:\n  {x. P (fst x) (snd x) \\<and>\n      feasible (fst x) \\<and>\n      (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n      le_trans (fst x)\n       (lfp_trans\n         (\\<lambda>a.\n             wp (body ;;\n                 Embed\n                  a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n      le_utrans\n       (gfp_trans\n         (\\<lambda>a.\n             wlp (body ;;\n                  Embed\n                   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n       (snd x)} =\n  {}\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<lambda>s.\n       0 \\<tturnstile> Sup_trans\n                        (fst `\n                         {x. P (fst x) (snd x) \\<and>\n                             feasible (fst x) \\<and>\n                             (\\<forall>Q.\n                                 unitary Q \\<longrightarrow>\n                                 unitary (snd x Q)) \\<and>\n                             le_trans (fst x)\n                              (lfp_trans\n                                (\\<lambda>a.\n                                    wp (body ;;\n  Embed\n   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                             le_utrans\n                              (gfp_trans\n                                (\\<lambda>a.\n                                    wlp (body ;;\n   Embed\n    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                              (snd x)})\n                        Q\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<lambda>s.\n       0 \\<tturnstile> Sup_trans\n                        (fst `\n                         {x. P (fst x) (snd x) \\<and>\n                             feasible (fst x) \\<and>\n                             (\\<forall>Q.\n                                 unitary Q \\<longrightarrow>\n                                 unitary (snd x Q)) \\<and>\n                             le_trans (fst x)\n                              (lfp_trans\n                                (\\<lambda>a.\n                                    wp (body ;;\n  Embed\n   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                             le_utrans\n                              (gfp_trans\n                                (\\<lambda>a.\n                                    wlp (body ;;\n   Embed\n    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                              (snd x)})\n                        Q", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lambda>s.\n       0 \\<tturnstile> Sup_trans\n                        (fst `\n                         {x. P (fst x) (snd x) \\<and>\n                             feasible (fst x) \\<and>\n                             (\\<forall>Q.\n                                 unitary Q \\<longrightarrow>\n                                 unitary (snd x Q)) \\<and>\n                             le_trans (fst x)\n                              (lfp_trans\n                                (\\<lambda>a.\n                                    wp (body ;;\n  Embed\n   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                             le_utrans\n                              (gfp_trans\n                                (\\<lambda>a.\n                                    wlp (body ;;\n   Embed\n    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                              (snd x)})\n                        Q", "by(simp add:Sup_trans_def Sup_exp_def empty)"], ["proof (state)\nthis:\n  \\<lambda>s.\n     0 \\<tturnstile> Sup_trans\n                      (fst `\n                       {x. P (fst x) (snd x) \\<and>\n                           feasible (fst x) \\<and>\n                           (\\<forall>Q.\n                               unitary Q \\<longrightarrow>\n                               unitary (snd x Q)) \\<and>\n                           le_trans (fst x)\n                            (lfp_trans\n                              (\\<lambda>a.\n                                  wp (body ;;\nEmbed\n a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                           le_utrans\n                            (gfp_trans\n                              (\\<lambda>a.\n                                  wlp (body ;;\n Embed\n  a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                            (snd x)})\n                      Q\n\ngoal (1 subgoal):\n 1. {x. P (fst x) (snd x) \\<and>\n        feasible (fst x) \\<and>\n        (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n        le_trans (fst x)\n         (lfp_trans\n           (\\<lambda>a.\n               wp (body ;;\n                   Embed\n                    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n        le_utrans\n         (gfp_trans\n           (\\<lambda>a.\n               wlp (body ;;\n                    Embed\n                     a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n         (snd x)} \\<noteq>\n    {} \\<Longrightarrow>\n    \\<lambda>s.\n       0 \\<tturnstile> Sup_trans\n                        (fst `\n                         {x. P (fst x) (snd x) \\<and>\n                             feasible (fst x) \\<and>\n                             (\\<forall>Q.\n                                 unitary Q \\<longrightarrow>\n                                 unitary (snd x Q)) \\<and>\n                             le_trans (fst x)\n                              (lfp_trans\n                                (\\<lambda>a.\n                                    wp (body ;;\n  Embed\n   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                             le_utrans\n                              (gfp_trans\n                                (\\<lambda>a.\n                                    wlp (body ;;\n   Embed\n    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                              (snd x)})\n                        Q", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. {x. P (fst x) (snd x) \\<and>\n        feasible (fst x) \\<and>\n        (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n        le_trans (fst x)\n         (lfp_trans\n           (\\<lambda>a.\n               wp (body ;;\n                   Embed\n                    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n        le_utrans\n         (gfp_trans\n           (\\<lambda>a.\n               wlp (body ;;\n                    Embed\n                     a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n         (snd x)} \\<noteq>\n    {} \\<Longrightarrow>\n    \\<lambda>s.\n       0 \\<tturnstile> Sup_trans\n                        (fst `\n                         {x. P (fst x) (snd x) \\<and>\n                             feasible (fst x) \\<and>\n                             (\\<forall>Q.\n                                 unitary Q \\<longrightarrow>\n                                 unitary (snd x Q)) \\<and>\n                             le_trans (fst x)\n                              (lfp_trans\n                                (\\<lambda>a.\n                                    wp (body ;;\n  Embed\n   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                             le_utrans\n                              (gfp_trans\n                                (\\<lambda>a.\n                                    wlp (body ;;\n   Embed\n    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                              (snd x)})\n                        Q", "assume ne: \"?M \\<noteq> {}\""], ["proof (state)\nthis:\n  {x. P (fst x) (snd x) \\<and>\n      feasible (fst x) \\<and>\n      (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n      le_trans (fst x)\n       (lfp_trans\n         (\\<lambda>a.\n             wp (body ;;\n                 Embed\n                  a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n      le_utrans\n       (gfp_trans\n         (\\<lambda>a.\n             wlp (body ;;\n                  Embed\n                   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n       (snd x)} \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. {x. P (fst x) (snd x) \\<and>\n        feasible (fst x) \\<and>\n        (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n        le_trans (fst x)\n         (lfp_trans\n           (\\<lambda>a.\n               wp (body ;;\n                   Embed\n                    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n        le_utrans\n         (gfp_trans\n           (\\<lambda>a.\n               wlp (body ;;\n                    Embed\n                     a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n         (snd x)} \\<noteq>\n    {} \\<Longrightarrow>\n    \\<lambda>s.\n       0 \\<tturnstile> Sup_trans\n                        (fst `\n                         {x. P (fst x) (snd x) \\<and>\n                             feasible (fst x) \\<and>\n                             (\\<forall>Q.\n                                 unitary Q \\<longrightarrow>\n                                 unitary (snd x Q)) \\<and>\n                             le_trans (fst x)\n                              (lfp_trans\n                                (\\<lambda>a.\n                                    wp (body ;;\n  Embed\n   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                             le_utrans\n                              (gfp_trans\n                                (\\<lambda>a.\n                                    wlp (body ;;\n   Embed\n    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                              (snd x)})\n                        Q", "then"], ["proof (chain)\npicking this:\n  {x. P (fst x) (snd x) \\<and>\n      feasible (fst x) \\<and>\n      (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n      le_trans (fst x)\n       (lfp_trans\n         (\\<lambda>a.\n             wp (body ;;\n                 Embed\n                  a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n      le_utrans\n       (gfp_trans\n         (\\<lambda>a.\n             wlp (body ;;\n                  Embed\n                   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n       (snd x)} \\<noteq>\n  {}", "obtain x where xin: \"x \\<in> ?M\""], ["proof (prove)\nusing this:\n  {x. P (fst x) (snd x) \\<and>\n      feasible (fst x) \\<and>\n      (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n      le_trans (fst x)\n       (lfp_trans\n         (\\<lambda>a.\n             wp (body ;;\n                 Embed\n                  a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n      le_utrans\n       (gfp_trans\n         (\\<lambda>a.\n             wlp (body ;;\n                  Embed\n                   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n       (snd x)} \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        x \\<in> {x. P (fst x) (snd x) \\<and>\n                    feasible (fst x) \\<and>\n                    (\\<forall>Q.\n                        unitary Q \\<longrightarrow>\n                        unitary (snd x Q)) \\<and>\n                    le_trans (fst x)\n                     (lfp_trans\n                       (\\<lambda>a.\n                           wp (body ;;\n                               Embed\n                                a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                    le_utrans\n                     (gfp_trans\n                       (\\<lambda>a.\n                           wlp (body ;;\n                                Embed\n                                 a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                     (snd x)} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> {x. P (fst x) (snd x) \\<and>\n              feasible (fst x) \\<and>\n              (\\<forall>Q.\n                  unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n              le_trans (fst x)\n               (lfp_trans\n                 (\\<lambda>a.\n                     wp (body ;;\n                         Embed\n                          a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n              le_utrans\n               (gfp_trans\n                 (\\<lambda>a.\n                     wlp (body ;;\n                          Embed\n                           a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n               (snd x)}\n\ngoal (1 subgoal):\n 1. {x. P (fst x) (snd x) \\<and>\n        feasible (fst x) \\<and>\n        (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n        le_trans (fst x)\n         (lfp_trans\n           (\\<lambda>a.\n               wp (body ;;\n                   Embed\n                    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n        le_utrans\n         (gfp_trans\n           (\\<lambda>a.\n               wlp (body ;;\n                    Embed\n                     a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n         (snd x)} \\<noteq>\n    {} \\<Longrightarrow>\n    \\<lambda>s.\n       0 \\<tturnstile> Sup_trans\n                        (fst `\n                         {x. P (fst x) (snd x) \\<and>\n                             feasible (fst x) \\<and>\n                             (\\<forall>Q.\n                                 unitary Q \\<longrightarrow>\n                                 unitary (snd x Q)) \\<and>\n                             le_trans (fst x)\n                              (lfp_trans\n                                (\\<lambda>a.\n                                    wp (body ;;\n  Embed\n   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                             le_utrans\n                              (gfp_trans\n                                (\\<lambda>a.\n                                    wlp (body ;;\n   Embed\n    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                              (snd x)})\n                        Q", "hence ffx: \"feasible (fst x)\""], ["proof (prove)\nusing this:\n  x \\<in> {x. P (fst x) (snd x) \\<and>\n              feasible (fst x) \\<and>\n              (\\<forall>Q.\n                  unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n              le_trans (fst x)\n               (lfp_trans\n                 (\\<lambda>a.\n                     wp (body ;;\n                         Embed\n                          a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n              le_utrans\n               (gfp_trans\n                 (\\<lambda>a.\n                     wlp (body ;;\n                          Embed\n                           a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n               (snd x)}\n\ngoal (1 subgoal):\n 1. feasible (fst x)", "by(simp)"], ["proof (state)\nthis:\n  feasible (fst x)\n\ngoal (1 subgoal):\n 1. {x. P (fst x) (snd x) \\<and>\n        feasible (fst x) \\<and>\n        (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n        le_trans (fst x)\n         (lfp_trans\n           (\\<lambda>a.\n               wp (body ;;\n                   Embed\n                    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n        le_utrans\n         (gfp_trans\n           (\\<lambda>a.\n               wlp (body ;;\n                    Embed\n                     a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n         (snd x)} \\<noteq>\n    {} \\<Longrightarrow>\n    \\<lambda>s.\n       0 \\<tturnstile> Sup_trans\n                        (fst `\n                         {x. P (fst x) (snd x) \\<and>\n                             feasible (fst x) \\<and>\n                             (\\<forall>Q.\n                                 unitary Q \\<longrightarrow>\n                                 unitary (snd x Q)) \\<and>\n                             le_trans (fst x)\n                              (lfp_trans\n                                (\\<lambda>a.\n                                    wp (body ;;\n  Embed\n   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                             le_utrans\n                              (gfp_trans\n                                (\\<lambda>a.\n                                    wlp (body ;;\n   Embed\n    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                              (snd x)})\n                        Q", "with nQ bQ"], ["proof (chain)\npicking this:\n  nneg Q\n  bounded_by b Q\n  feasible (fst x)", "have \"\\<lambda>s. 0 \\<tturnstile> fst x Q\""], ["proof (prove)\nusing this:\n  nneg Q\n  bounded_by b Q\n  feasible (fst x)\n\ngoal (1 subgoal):\n 1. \\<lambda>s. 0 \\<tturnstile> fst x Q", "by(auto)"], ["proof (state)\nthis:\n  \\<lambda>s. 0 \\<tturnstile> fst x Q\n\ngoal (1 subgoal):\n 1. {x. P (fst x) (snd x) \\<and>\n        feasible (fst x) \\<and>\n        (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n        le_trans (fst x)\n         (lfp_trans\n           (\\<lambda>a.\n               wp (body ;;\n                   Embed\n                    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n        le_utrans\n         (gfp_trans\n           (\\<lambda>a.\n               wlp (body ;;\n                    Embed\n                     a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n         (snd x)} \\<noteq>\n    {} \\<Longrightarrow>\n    \\<lambda>s.\n       0 \\<tturnstile> Sup_trans\n                        (fst `\n                         {x. P (fst x) (snd x) \\<and>\n                             feasible (fst x) \\<and>\n                             (\\<forall>Q.\n                                 unitary Q \\<longrightarrow>\n                                 unitary (snd x Q)) \\<and>\n                             le_trans (fst x)\n                              (lfp_trans\n                                (\\<lambda>a.\n                                    wp (body ;;\n  Embed\n   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                             le_utrans\n                              (gfp_trans\n                                (\\<lambda>a.\n                                    wlp (body ;;\n   Embed\n    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                              (snd x)})\n                        Q", "also"], ["proof (state)\nthis:\n  \\<lambda>s. 0 \\<tturnstile> fst x Q\n\ngoal (1 subgoal):\n 1. {x. P (fst x) (snd x) \\<and>\n        feasible (fst x) \\<and>\n        (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n        le_trans (fst x)\n         (lfp_trans\n           (\\<lambda>a.\n               wp (body ;;\n                   Embed\n                    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n        le_utrans\n         (gfp_trans\n           (\\<lambda>a.\n               wlp (body ;;\n                    Embed\n                     a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n         (snd x)} \\<noteq>\n    {} \\<Longrightarrow>\n    \\<lambda>s.\n       0 \\<tturnstile> Sup_trans\n                        (fst `\n                         {x. P (fst x) (snd x) \\<and>\n                             feasible (fst x) \\<and>\n                             (\\<forall>Q.\n                                 unitary Q \\<longrightarrow>\n                                 unitary (snd x Q)) \\<and>\n                             le_trans (fst x)\n                              (lfp_trans\n                                (\\<lambda>a.\n                                    wp (body ;;\n  Embed\n   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                             le_utrans\n                              (gfp_trans\n                                (\\<lambda>a.\n                                    wlp (body ;;\n   Embed\n    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                              (snd x)})\n                        Q", "from xin"], ["proof (chain)\npicking this:\n  x \\<in> {x. P (fst x) (snd x) \\<and>\n              feasible (fst x) \\<and>\n              (\\<forall>Q.\n                  unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n              le_trans (fst x)\n               (lfp_trans\n                 (\\<lambda>a.\n                     wp (body ;;\n                         Embed\n                          a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n              le_utrans\n               (gfp_trans\n                 (\\<lambda>a.\n                     wlp (body ;;\n                          Embed\n                           a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n               (snd x)}", "have \"fst x Q \\<tturnstile> Sup_trans (fst ` ?M) Q\""], ["proof (prove)\nusing this:\n  x \\<in> {x. P (fst x) (snd x) \\<and>\n              feasible (fst x) \\<and>\n              (\\<forall>Q.\n                  unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n              le_trans (fst x)\n               (lfp_trans\n                 (\\<lambda>a.\n                     wp (body ;;\n                         Embed\n                          a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n              le_utrans\n               (gfp_trans\n                 (\\<lambda>a.\n                     wlp (body ;;\n                          Embed\n                           a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n               (snd x)}\n\ngoal (1 subgoal):\n 1. fst x\n     Q \\<tturnstile> Sup_trans\n                      (fst `\n                       {x. P (fst x) (snd x) \\<and>\n                           feasible (fst x) \\<and>\n                           (\\<forall>Q.\n                               unitary Q \\<longrightarrow>\n                               unitary (snd x Q)) \\<and>\n                           le_trans (fst x)\n                            (lfp_trans\n                              (\\<lambda>a.\n                                  wp (body ;;\nEmbed\n a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                           le_utrans\n                            (gfp_trans\n                              (\\<lambda>a.\n                                  wlp (body ;;\n Embed\n  a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                            (snd x)})\n                      Q", "apply(intro Sup_trans_upper2[OF imageI _ nQ bQ], assumption)"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> {x. P (fst x) (snd x) \\<and>\n                feasible (fst x) \\<and>\n                (\\<forall>Q.\n                    unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                le_trans (fst x)\n                 (lfp_trans\n                   (\\<lambda>a.\n                       wp (body ;;\n                           Embed\n                            a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                le_utrans\n                 (gfp_trans\n                   (\\<lambda>a.\n                       wlp (body ;;\n                            Embed\n                             a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                 (snd x)} \\<Longrightarrow>\n    \\<forall>u\\<in>fst `\n                   {x. P (fst x) (snd x) \\<and>\n                       feasible (fst x) \\<and>\n                       (\\<forall>Q.\n                           unitary Q \\<longrightarrow>\n                           unitary (snd x Q)) \\<and>\n                       le_trans (fst x)\n                        (lfp_trans\n                          (\\<lambda>a.\n                              wp (body ;;\n                                  Embed\n                                   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                       le_utrans\n                        (gfp_trans\n                          (\\<lambda>a.\n                              wlp (body ;;\n                                   Embed\n                                    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                        (snd x)}.\n       \\<forall>P.\n          nneg P \\<and> bounded_by b P \\<longrightarrow>\n          nneg (u P) \\<and> bounded_by b (u P)", "apply(clarsimp, blast intro: sound_nneg[OF feasible_sound] feasible_boundedD)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  fst x\n   Q \\<tturnstile> Sup_trans\n                    (fst `\n                     {x. P (fst x) (snd x) \\<and>\n                         feasible (fst x) \\<and>\n                         (\\<forall>Q.\n                             unitary Q \\<longrightarrow>\n                             unitary (snd x Q)) \\<and>\n                         le_trans (fst x)\n                          (lfp_trans\n                            (\\<lambda>a.\n                                wp (body ;;\n                                    Embed\n                                     a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                         le_utrans\n                          (gfp_trans\n                            (\\<lambda>a.\n                                wlp (body ;;\n                                     Embed\na \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                          (snd x)})\n                    Q\n\ngoal (1 subgoal):\n 1. {x. P (fst x) (snd x) \\<and>\n        feasible (fst x) \\<and>\n        (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n        le_trans (fst x)\n         (lfp_trans\n           (\\<lambda>a.\n               wp (body ;;\n                   Embed\n                    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n        le_utrans\n         (gfp_trans\n           (\\<lambda>a.\n               wlp (body ;;\n                    Embed\n                     a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n         (snd x)} \\<noteq>\n    {} \\<Longrightarrow>\n    \\<lambda>s.\n       0 \\<tturnstile> Sup_trans\n                        (fst `\n                         {x. P (fst x) (snd x) \\<and>\n                             feasible (fst x) \\<and>\n                             (\\<forall>Q.\n                                 unitary Q \\<longrightarrow>\n                                 unitary (snd x Q)) \\<and>\n                             le_trans (fst x)\n                              (lfp_trans\n                                (\\<lambda>a.\n                                    wp (body ;;\n  Embed\n   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                             le_utrans\n                              (gfp_trans\n                                (\\<lambda>a.\n                                    wlp (body ;;\n   Embed\n    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                              (snd x)})\n                        Q", "finally"], ["proof (chain)\npicking this:\n  \\<lambda>s.\n     0 \\<tturnstile> Sup_trans\n                      (fst `\n                       {x. P (fst x) (snd x) \\<and>\n                           feasible (fst x) \\<and>\n                           (\\<forall>Q.\n                               unitary Q \\<longrightarrow>\n                               unitary (snd x Q)) \\<and>\n                           le_trans (fst x)\n                            (lfp_trans\n                              (\\<lambda>a.\n                                  wp (body ;;\nEmbed\n a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                           le_utrans\n                            (gfp_trans\n                              (\\<lambda>a.\n                                  wlp (body ;;\n Embed\n  a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                            (snd x)})\n                      Q", "show \"\\<lambda>s. 0 \\<tturnstile> Sup_trans (fst ` ?M) Q\""], ["proof (prove)\nusing this:\n  \\<lambda>s.\n     0 \\<tturnstile> Sup_trans\n                      (fst `\n                       {x. P (fst x) (snd x) \\<and>\n                           feasible (fst x) \\<and>\n                           (\\<forall>Q.\n                               unitary Q \\<longrightarrow>\n                               unitary (snd x Q)) \\<and>\n                           le_trans (fst x)\n                            (lfp_trans\n                              (\\<lambda>a.\n                                  wp (body ;;\nEmbed\n a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                           le_utrans\n                            (gfp_trans\n                              (\\<lambda>a.\n                                  wlp (body ;;\n Embed\n  a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                            (snd x)})\n                      Q\n\ngoal (1 subgoal):\n 1. \\<lambda>s.\n       0 \\<tturnstile> Sup_trans\n                        (fst `\n                         {x. P (fst x) (snd x) \\<and>\n                             feasible (fst x) \\<and>\n                             (\\<forall>Q.\n                                 unitary Q \\<longrightarrow>\n                                 unitary (snd x Q)) \\<and>\n                             le_trans (fst x)\n                              (lfp_trans\n                                (\\<lambda>a.\n                                    wp (body ;;\n  Embed\n   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                             le_utrans\n                              (gfp_trans\n                                (\\<lambda>a.\n                                    wlp (body ;;\n   Embed\n    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                              (snd x)})\n                        Q", "."], ["proof (state)\nthis:\n  \\<lambda>s.\n     0 \\<tturnstile> Sup_trans\n                      (fst `\n                       {x. P (fst x) (snd x) \\<and>\n                           feasible (fst x) \\<and>\n                           (\\<forall>Q.\n                               unitary Q \\<longrightarrow>\n                               unitary (snd x Q)) \\<and>\n                           le_trans (fst x)\n                            (lfp_trans\n                              (\\<lambda>a.\n                                  wp (body ;;\nEmbed\n a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                           le_utrans\n                            (gfp_trans\n                              (\\<lambda>a.\n                                  wlp (body ;;\n Embed\n  a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                            (snd x)})\n                      Q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lambda>s.\n     0 \\<tturnstile> Sup_trans\n                      (fst `\n                       {x. P (fst x) (snd x) \\<and>\n                           feasible (fst x) \\<and>\n                           (\\<forall>Q.\n                               unitary Q \\<longrightarrow>\n                               unitary (snd x Q)) \\<and>\n                           le_trans (fst x)\n                            (lfp_trans\n                              (\\<lambda>a.\n                                  wp (body ;;\nEmbed\n a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                           le_utrans\n                            (gfp_trans\n                              (\\<lambda>a.\n                                  wlp (body ;;\n Embed\n  a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                            (snd x)})\n                      Q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  feasible\n   (Sup_trans\n     (fst `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)}))\n\ngoal (1 subgoal):\n 1. P (lfp_trans\n        (\\<lambda>x.\n            wp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n     (gfp_trans\n       (\\<lambda>x.\n           wlp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "have uInf: \"\\<And>P. unitary P \\<Longrightarrow> unitary (Inf_utrans (snd ` ?M) P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Pa.\n       unitary Pa \\<Longrightarrow>\n       unitary\n        (Inf_utrans\n          (snd `\n           {x. P (fst x) (snd x) \\<and>\n               feasible (fst x) \\<and>\n               (\\<forall>Q.\n                   unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n               le_trans (fst x)\n                (lfp_trans\n                  (\\<lambda>a.\n                      wp (body ;;\n                          Embed\n                           a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n               le_utrans\n                (gfp_trans\n                  (\\<lambda>a.\n                      wlp (body ;;\n                           Embed\n                            a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                (snd x)})\n          Pa)", "proof(cases \"?M = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Pa.\n       \\<lbrakk>unitary Pa;\n        {x. P (fst x) (snd x) \\<and>\n            feasible (fst x) \\<and>\n            (\\<forall>Q.\n                unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n            le_trans (fst x)\n             (lfp_trans\n               (\\<lambda>a.\n                   wp (body ;;\n                       Embed\n                        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n            le_utrans\n             (gfp_trans\n               (\\<lambda>a.\n                   wlp (body ;;\n                        Embed\n                         a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n             (snd x)} =\n        {}\\<rbrakk>\n       \\<Longrightarrow> unitary\n                          (Inf_utrans\n                            (snd `\n                             {x. P (fst x) (snd x) \\<and>\n                                 feasible (fst x) \\<and>\n                                 (\\<forall>Q.\n                                     unitary Q \\<longrightarrow>\n                                     unitary (snd x Q)) \\<and>\n                                 le_trans (fst x)\n                                  (lfp_trans\n                                    (\\<lambda>a.\n  wp (body ;;\n      Embed\n       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                                 le_utrans\n                                  (gfp_trans\n                                    (\\<lambda>a.\n  wlp (body ;;\n       Embed\n        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                                  (snd x)})\n                            Pa)\n 2. \\<And>Pa.\n       \\<lbrakk>unitary Pa;\n        {x. P (fst x) (snd x) \\<and>\n            feasible (fst x) \\<and>\n            (\\<forall>Q.\n                unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n            le_trans (fst x)\n             (lfp_trans\n               (\\<lambda>a.\n                   wp (body ;;\n                       Embed\n                        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n            le_utrans\n             (gfp_trans\n               (\\<lambda>a.\n                   wlp (body ;;\n                        Embed\n                         a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n             (snd x)} \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> unitary\n                          (Inf_utrans\n                            (snd `\n                             {x. P (fst x) (snd x) \\<and>\n                                 feasible (fst x) \\<and>\n                                 (\\<forall>Q.\n                                     unitary Q \\<longrightarrow>\n                                     unitary (snd x Q)) \\<and>\n                                 le_trans (fst x)\n                                  (lfp_trans\n                                    (\\<lambda>a.\n  wp (body ;;\n      Embed\n       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                                 le_utrans\n                                  (gfp_trans\n                                    (\\<lambda>a.\n  wlp (body ;;\n       Embed\n        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                                  (snd x)})\n                            Pa)", "fix P"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>Pa.\n       \\<lbrakk>unitary Pa;\n        {x. P (fst x) (snd x) \\<and>\n            feasible (fst x) \\<and>\n            (\\<forall>Q.\n                unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n            le_trans (fst x)\n             (lfp_trans\n               (\\<lambda>a.\n                   wp (body ;;\n                       Embed\n                        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n            le_utrans\n             (gfp_trans\n               (\\<lambda>a.\n                   wlp (body ;;\n                        Embed\n                         a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n             (snd x)} =\n        {}\\<rbrakk>\n       \\<Longrightarrow> unitary\n                          (Inf_utrans\n                            (snd `\n                             {x. P (fst x) (snd x) \\<and>\n                                 feasible (fst x) \\<and>\n                                 (\\<forall>Q.\n                                     unitary Q \\<longrightarrow>\n                                     unitary (snd x Q)) \\<and>\n                                 le_trans (fst x)\n                                  (lfp_trans\n                                    (\\<lambda>a.\n  wp (body ;;\n      Embed\n       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                                 le_utrans\n                                  (gfp_trans\n                                    (\\<lambda>a.\n  wlp (body ;;\n       Embed\n        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                                  (snd x)})\n                            Pa)\n 2. \\<And>Pa.\n       \\<lbrakk>unitary Pa;\n        {x. P (fst x) (snd x) \\<and>\n            feasible (fst x) \\<and>\n            (\\<forall>Q.\n                unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n            le_trans (fst x)\n             (lfp_trans\n               (\\<lambda>a.\n                   wp (body ;;\n                       Embed\n                        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n            le_utrans\n             (gfp_trans\n               (\\<lambda>a.\n                   wlp (body ;;\n                        Embed\n                         a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n             (snd x)} \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> unitary\n                          (Inf_utrans\n                            (snd `\n                             {x. P (fst x) (snd x) \\<and>\n                                 feasible (fst x) \\<and>\n                                 (\\<forall>Q.\n                                     unitary Q \\<longrightarrow>\n                                     unitary (snd x Q)) \\<and>\n                                 le_trans (fst x)\n                                  (lfp_trans\n                                    (\\<lambda>a.\n  wp (body ;;\n      Embed\n       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                                 le_utrans\n                                  (gfp_trans\n                                    (\\<lambda>a.\n  wlp (body ;;\n       Embed\n        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                                  (snd x)})\n                            Pa)", "assume empty: \"?M = {}\""], ["proof (state)\nthis:\n  {x. P (fst x) (snd x) \\<and>\n      feasible (fst x) \\<and>\n      (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n      le_trans (fst x)\n       (lfp_trans\n         (\\<lambda>a.\n             wp (body ;;\n                 Embed\n                  a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n      le_utrans\n       (gfp_trans\n         (\\<lambda>a.\n             wlp (body ;;\n                  Embed\n                   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n       (snd x)} =\n  {}\n\ngoal (2 subgoals):\n 1. \\<And>Pa.\n       \\<lbrakk>unitary Pa;\n        {x. P (fst x) (snd x) \\<and>\n            feasible (fst x) \\<and>\n            (\\<forall>Q.\n                unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n            le_trans (fst x)\n             (lfp_trans\n               (\\<lambda>a.\n                   wp (body ;;\n                       Embed\n                        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n            le_utrans\n             (gfp_trans\n               (\\<lambda>a.\n                   wlp (body ;;\n                        Embed\n                         a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n             (snd x)} =\n        {}\\<rbrakk>\n       \\<Longrightarrow> unitary\n                          (Inf_utrans\n                            (snd `\n                             {x. P (fst x) (snd x) \\<and>\n                                 feasible (fst x) \\<and>\n                                 (\\<forall>Q.\n                                     unitary Q \\<longrightarrow>\n                                     unitary (snd x Q)) \\<and>\n                                 le_trans (fst x)\n                                  (lfp_trans\n                                    (\\<lambda>a.\n  wp (body ;;\n      Embed\n       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                                 le_utrans\n                                  (gfp_trans\n                                    (\\<lambda>a.\n  wlp (body ;;\n       Embed\n        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                                  (snd x)})\n                            Pa)\n 2. \\<And>Pa.\n       \\<lbrakk>unitary Pa;\n        {x. P (fst x) (snd x) \\<and>\n            feasible (fst x) \\<and>\n            (\\<forall>Q.\n                unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n            le_trans (fst x)\n             (lfp_trans\n               (\\<lambda>a.\n                   wp (body ;;\n                       Embed\n                        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n            le_utrans\n             (gfp_trans\n               (\\<lambda>a.\n                   wlp (body ;;\n                        Embed\n                         a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n             (snd x)} \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> unitary\n                          (Inf_utrans\n                            (snd `\n                             {x. P (fst x) (snd x) \\<and>\n                                 feasible (fst x) \\<and>\n                                 (\\<forall>Q.\n                                     unitary Q \\<longrightarrow>\n                                     unitary (snd x Q)) \\<and>\n                                 le_trans (fst x)\n                                  (lfp_trans\n                                    (\\<lambda>a.\n  wp (body ;;\n      Embed\n       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                                 le_utrans\n                                  (gfp_trans\n                                    (\\<lambda>a.\n  wlp (body ;;\n       Embed\n        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                                  (snd x)})\n                            Pa)", "show \"?thesis P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. unitary\n     (Inf_utrans\n       (snd `\n        {x. P (fst x) (snd x) \\<and>\n            feasible (fst x) \\<and>\n            (\\<forall>Q.\n                unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n            le_trans (fst x)\n             (lfp_trans\n               (\\<lambda>a.\n                   wp (body ;;\n                       Embed\n                        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n            le_utrans\n             (gfp_trans\n               (\\<lambda>a.\n                   wlp (body ;;\n                        Embed\n                         a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n             (snd x)})\n       P)", "by(simp only:empty, simp add:Inf_utrans_def)"], ["proof (state)\nthis:\n  unitary\n   (Inf_utrans\n     (snd `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)})\n     P)\n\ngoal (1 subgoal):\n 1. \\<And>Pa.\n       \\<lbrakk>unitary Pa;\n        {x. P (fst x) (snd x) \\<and>\n            feasible (fst x) \\<and>\n            (\\<forall>Q.\n                unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n            le_trans (fst x)\n             (lfp_trans\n               (\\<lambda>a.\n                   wp (body ;;\n                       Embed\n                        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n            le_utrans\n             (gfp_trans\n               (\\<lambda>a.\n                   wlp (body ;;\n                        Embed\n                         a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n             (snd x)} \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> unitary\n                          (Inf_utrans\n                            (snd `\n                             {x. P (fst x) (snd x) \\<and>\n                                 feasible (fst x) \\<and>\n                                 (\\<forall>Q.\n                                     unitary Q \\<longrightarrow>\n                                     unitary (snd x Q)) \\<and>\n                                 le_trans (fst x)\n                                  (lfp_trans\n                                    (\\<lambda>a.\n  wp (body ;;\n      Embed\n       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                                 le_utrans\n                                  (gfp_trans\n                                    (\\<lambda>a.\n  wlp (body ;;\n       Embed\n        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                                  (snd x)})\n                            Pa)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Pa.\n       \\<lbrakk>unitary Pa;\n        {x. P (fst x) (snd x) \\<and>\n            feasible (fst x) \\<and>\n            (\\<forall>Q.\n                unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n            le_trans (fst x)\n             (lfp_trans\n               (\\<lambda>a.\n                   wp (body ;;\n                       Embed\n                        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n            le_utrans\n             (gfp_trans\n               (\\<lambda>a.\n                   wlp (body ;;\n                        Embed\n                         a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n             (snd x)} \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> unitary\n                          (Inf_utrans\n                            (snd `\n                             {x. P (fst x) (snd x) \\<and>\n                                 feasible (fst x) \\<and>\n                                 (\\<forall>Q.\n                                     unitary Q \\<longrightarrow>\n                                     unitary (snd x Q)) \\<and>\n                                 le_trans (fst x)\n                                  (lfp_trans\n                                    (\\<lambda>a.\n  wp (body ;;\n      Embed\n       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                                 le_utrans\n                                  (gfp_trans\n                                    (\\<lambda>a.\n  wlp (body ;;\n       Embed\n        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                                  (snd x)})\n                            Pa)", "fix P::\"'s expect\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>Pa.\n       \\<lbrakk>unitary Pa;\n        {x. P (fst x) (snd x) \\<and>\n            feasible (fst x) \\<and>\n            (\\<forall>Q.\n                unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n            le_trans (fst x)\n             (lfp_trans\n               (\\<lambda>a.\n                   wp (body ;;\n                       Embed\n                        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n            le_utrans\n             (gfp_trans\n               (\\<lambda>a.\n                   wlp (body ;;\n                        Embed\n                         a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n             (snd x)} \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> unitary\n                          (Inf_utrans\n                            (snd `\n                             {x. P (fst x) (snd x) \\<and>\n                                 feasible (fst x) \\<and>\n                                 (\\<forall>Q.\n                                     unitary Q \\<longrightarrow>\n                                     unitary (snd x Q)) \\<and>\n                                 le_trans (fst x)\n                                  (lfp_trans\n                                    (\\<lambda>a.\n  wp (body ;;\n      Embed\n       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                                 le_utrans\n                                  (gfp_trans\n                                    (\\<lambda>a.\n  wlp (body ;;\n       Embed\n        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                                  (snd x)})\n                            Pa)", "assume uP: \"unitary P\"\n       and ne: \"?M \\<noteq> {}\""], ["proof (state)\nthis:\n  unitary P\n  {x. P (fst x) (snd x) \\<and>\n      feasible (fst x) \\<and>\n      (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n      le_trans (fst x)\n       (lfp_trans\n         (\\<lambda>a.\n             wp (body ;;\n                 Embed\n                  a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n      le_utrans\n       (gfp_trans\n         (\\<lambda>a.\n             wlp (body ;;\n                  Embed\n                   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n       (snd x)} \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. \\<And>Pa.\n       \\<lbrakk>unitary Pa;\n        {x. P (fst x) (snd x) \\<and>\n            feasible (fst x) \\<and>\n            (\\<forall>Q.\n                unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n            le_trans (fst x)\n             (lfp_trans\n               (\\<lambda>a.\n                   wp (body ;;\n                       Embed\n                        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n            le_utrans\n             (gfp_trans\n               (\\<lambda>a.\n                   wlp (body ;;\n                        Embed\n                         a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n             (snd x)} \\<noteq>\n        {}\\<rbrakk>\n       \\<Longrightarrow> unitary\n                          (Inf_utrans\n                            (snd `\n                             {x. P (fst x) (snd x) \\<and>\n                                 feasible (fst x) \\<and>\n                                 (\\<forall>Q.\n                                     unitary Q \\<longrightarrow>\n                                     unitary (snd x Q)) \\<and>\n                                 le_trans (fst x)\n                                  (lfp_trans\n                                    (\\<lambda>a.\n  wp (body ;;\n      Embed\n       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                                 le_utrans\n                                  (gfp_trans\n                                    (\\<lambda>a.\n  wlp (body ;;\n       Embed\n        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                                  (snd x)})\n                            Pa)", "show \"?thesis P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. unitary\n     (Inf_utrans\n       (snd `\n        {x. P (fst x) (snd x) \\<and>\n            feasible (fst x) \\<and>\n            (\\<forall>Q.\n                unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n            le_trans (fst x)\n             (lfp_trans\n               (\\<lambda>a.\n                   wp (body ;;\n                       Embed\n                        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n            le_utrans\n             (gfp_trans\n               (\\<lambda>a.\n                   wlp (body ;;\n                        Embed\n                         a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n             (snd x)})\n       P)", "proof(intro unitaryI2 nnegI2 bounded_byI2)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lambda>s.\n       0 \\<tturnstile> Inf_utrans\n                        (snd `\n                         {x. P (fst x) (snd x) \\<and>\n                             feasible (fst x) \\<and>\n                             (\\<forall>Q.\n                                 unitary Q \\<longrightarrow>\n                                 unitary (snd x Q)) \\<and>\n                             le_trans (fst x)\n                              (lfp_trans\n                                (\\<lambda>a.\n                                    wp (body ;;\n  Embed\n   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                             le_utrans\n                              (gfp_trans\n                                (\\<lambda>a.\n                                    wlp (body ;;\n   Embed\n    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                              (snd x)})\n                        P\n 2. Inf_utrans\n     (snd `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)})\n     P \\<tturnstile> \\<lambda>s. 1", "from ne"], ["proof (chain)\npicking this:\n  {x. P (fst x) (snd x) \\<and>\n      feasible (fst x) \\<and>\n      (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n      le_trans (fst x)\n       (lfp_trans\n         (\\<lambda>a.\n             wp (body ;;\n                 Embed\n                  a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n      le_utrans\n       (gfp_trans\n         (\\<lambda>a.\n             wlp (body ;;\n                  Embed\n                   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n       (snd x)} \\<noteq>\n  {}", "obtain x where xin: \"x \\<in> ?M\""], ["proof (prove)\nusing this:\n  {x. P (fst x) (snd x) \\<and>\n      feasible (fst x) \\<and>\n      (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n      le_trans (fst x)\n       (lfp_trans\n         (\\<lambda>a.\n             wp (body ;;\n                 Embed\n                  a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n      le_utrans\n       (gfp_trans\n         (\\<lambda>a.\n             wlp (body ;;\n                  Embed\n                   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n       (snd x)} \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        x \\<in> {x. P (fst x) (snd x) \\<and>\n                    feasible (fst x) \\<and>\n                    (\\<forall>Q.\n                        unitary Q \\<longrightarrow>\n                        unitary (snd x Q)) \\<and>\n                    le_trans (fst x)\n                     (lfp_trans\n                       (\\<lambda>a.\n                           wp (body ;;\n                               Embed\n                                a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                    le_utrans\n                     (gfp_trans\n                       (\\<lambda>a.\n                           wlp (body ;;\n                                Embed\n                                 a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                     (snd x)} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x \\<in> {x. P (fst x) (snd x) \\<and>\n              feasible (fst x) \\<and>\n              (\\<forall>Q.\n                  unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n              le_trans (fst x)\n               (lfp_trans\n                 (\\<lambda>a.\n                     wp (body ;;\n                         Embed\n                          a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n              le_utrans\n               (gfp_trans\n                 (\\<lambda>a.\n                     wlp (body ;;\n                          Embed\n                           a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n               (snd x)}\n\ngoal (2 subgoals):\n 1. \\<lambda>s.\n       0 \\<tturnstile> Inf_utrans\n                        (snd `\n                         {x. P (fst x) (snd x) \\<and>\n                             feasible (fst x) \\<and>\n                             (\\<forall>Q.\n                                 unitary Q \\<longrightarrow>\n                                 unitary (snd x Q)) \\<and>\n                             le_trans (fst x)\n                              (lfp_trans\n                                (\\<lambda>a.\n                                    wp (body ;;\n  Embed\n   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                             le_utrans\n                              (gfp_trans\n                                (\\<lambda>a.\n                                    wlp (body ;;\n   Embed\n    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                              (snd x)})\n                        P\n 2. Inf_utrans\n     (snd `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)})\n     P \\<tturnstile> \\<lambda>s. 1", "hence sxin: \"snd x \\<in> snd ` ?M\""], ["proof (prove)\nusing this:\n  x \\<in> {x. P (fst x) (snd x) \\<and>\n              feasible (fst x) \\<and>\n              (\\<forall>Q.\n                  unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n              le_trans (fst x)\n               (lfp_trans\n                 (\\<lambda>a.\n                     wp (body ;;\n                         Embed\n                          a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n              le_utrans\n               (gfp_trans\n                 (\\<lambda>a.\n                     wlp (body ;;\n                          Embed\n                           a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n               (snd x)}\n\ngoal (1 subgoal):\n 1. snd x\n    \\<in> snd `\n          {x. P (fst x) (snd x) \\<and>\n              feasible (fst x) \\<and>\n              (\\<forall>Q.\n                  unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n              le_trans (fst x)\n               (lfp_trans\n                 (\\<lambda>a.\n                     wp (body ;;\n                         Embed\n                          a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n              le_utrans\n               (gfp_trans\n                 (\\<lambda>a.\n                     wlp (body ;;\n                          Embed\n                           a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n               (snd x)}", "by(simp)"], ["proof (state)\nthis:\n  snd x\n  \\<in> snd `\n        {x. P (fst x) (snd x) \\<and>\n            feasible (fst x) \\<and>\n            (\\<forall>Q.\n                unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n            le_trans (fst x)\n             (lfp_trans\n               (\\<lambda>a.\n                   wp (body ;;\n                       Embed\n                        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n            le_utrans\n             (gfp_trans\n               (\\<lambda>a.\n                   wlp (body ;;\n                        Embed\n                         a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n             (snd x)}\n\ngoal (2 subgoals):\n 1. \\<lambda>s.\n       0 \\<tturnstile> Inf_utrans\n                        (snd `\n                         {x. P (fst x) (snd x) \\<and>\n                             feasible (fst x) \\<and>\n                             (\\<forall>Q.\n                                 unitary Q \\<longrightarrow>\n                                 unitary (snd x Q)) \\<and>\n                             le_trans (fst x)\n                              (lfp_trans\n                                (\\<lambda>a.\n                                    wp (body ;;\n  Embed\n   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                             le_utrans\n                              (gfp_trans\n                                (\\<lambda>a.\n                                    wlp (body ;;\n   Embed\n    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                              (snd x)})\n                        P\n 2. Inf_utrans\n     (snd `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)})\n     P \\<tturnstile> \\<lambda>s. 1", "hence \"le_utrans (Inf_utrans (snd ` ?M)) (snd x)\""], ["proof (prove)\nusing this:\n  snd x\n  \\<in> snd `\n        {x. P (fst x) (snd x) \\<and>\n            feasible (fst x) \\<and>\n            (\\<forall>Q.\n                unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n            le_trans (fst x)\n             (lfp_trans\n               (\\<lambda>a.\n                   wp (body ;;\n                       Embed\n                        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n            le_utrans\n             (gfp_trans\n               (\\<lambda>a.\n                   wlp (body ;;\n                        Embed\n                         a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n             (snd x)}\n\ngoal (1 subgoal):\n 1. le_utrans\n     (Inf_utrans\n       (snd `\n        {x. P (fst x) (snd x) \\<and>\n            feasible (fst x) \\<and>\n            (\\<forall>Q.\n                unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n            le_trans (fst x)\n             (lfp_trans\n               (\\<lambda>a.\n                   wp (body ;;\n                       Embed\n                        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n            le_utrans\n             (gfp_trans\n               (\\<lambda>a.\n                   wlp (body ;;\n                        Embed\n                         a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n             (snd x)}))\n     (snd x)", "by(intro Inf_utrans_lower, auto)"], ["proof (state)\nthis:\n  le_utrans\n   (Inf_utrans\n     (snd `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)}))\n   (snd x)\n\ngoal (2 subgoals):\n 1. \\<lambda>s.\n       0 \\<tturnstile> Inf_utrans\n                        (snd `\n                         {x. P (fst x) (snd x) \\<and>\n                             feasible (fst x) \\<and>\n                             (\\<forall>Q.\n                                 unitary Q \\<longrightarrow>\n                                 unitary (snd x Q)) \\<and>\n                             le_trans (fst x)\n                              (lfp_trans\n                                (\\<lambda>a.\n                                    wp (body ;;\n  Embed\n   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                             le_utrans\n                              (gfp_trans\n                                (\\<lambda>a.\n                                    wlp (body ;;\n   Embed\n    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                              (snd x)})\n                        P\n 2. Inf_utrans\n     (snd `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)})\n     P \\<tturnstile> \\<lambda>s. 1", "with uP"], ["proof (chain)\npicking this:\n  unitary P\n  le_utrans\n   (Inf_utrans\n     (snd `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)}))\n   (snd x)", "have \"Inf_utrans (snd ` ?M) P \\<tturnstile> snd x P\""], ["proof (prove)\nusing this:\n  unitary P\n  le_utrans\n   (Inf_utrans\n     (snd `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)}))\n   (snd x)\n\ngoal (1 subgoal):\n 1. Inf_utrans\n     (snd `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)})\n     P \\<tturnstile> snd x P", "by(auto)"], ["proof (state)\nthis:\n  Inf_utrans\n   (snd `\n    {x. P (fst x) (snd x) \\<and>\n        feasible (fst x) \\<and>\n        (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n        le_trans (fst x)\n         (lfp_trans\n           (\\<lambda>a.\n               wp (body ;;\n                   Embed\n                    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n        le_utrans\n         (gfp_trans\n           (\\<lambda>a.\n               wlp (body ;;\n                    Embed\n                     a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n         (snd x)})\n   P \\<tturnstile> snd x P\n\ngoal (2 subgoals):\n 1. \\<lambda>s.\n       0 \\<tturnstile> Inf_utrans\n                        (snd `\n                         {x. P (fst x) (snd x) \\<and>\n                             feasible (fst x) \\<and>\n                             (\\<forall>Q.\n                                 unitary Q \\<longrightarrow>\n                                 unitary (snd x Q)) \\<and>\n                             le_trans (fst x)\n                              (lfp_trans\n                                (\\<lambda>a.\n                                    wp (body ;;\n  Embed\n   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                             le_utrans\n                              (gfp_trans\n                                (\\<lambda>a.\n                                    wlp (body ;;\n   Embed\n    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                              (snd x)})\n                        P\n 2. Inf_utrans\n     (snd `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)})\n     P \\<tturnstile> \\<lambda>s. 1", "also"], ["proof (state)\nthis:\n  Inf_utrans\n   (snd `\n    {x. P (fst x) (snd x) \\<and>\n        feasible (fst x) \\<and>\n        (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n        le_trans (fst x)\n         (lfp_trans\n           (\\<lambda>a.\n               wp (body ;;\n                   Embed\n                    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n        le_utrans\n         (gfp_trans\n           (\\<lambda>a.\n               wlp (body ;;\n                    Embed\n                     a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n         (snd x)})\n   P \\<tturnstile> snd x P\n\ngoal (2 subgoals):\n 1. \\<lambda>s.\n       0 \\<tturnstile> Inf_utrans\n                        (snd `\n                         {x. P (fst x) (snd x) \\<and>\n                             feasible (fst x) \\<and>\n                             (\\<forall>Q.\n                                 unitary Q \\<longrightarrow>\n                                 unitary (snd x Q)) \\<and>\n                             le_trans (fst x)\n                              (lfp_trans\n                                (\\<lambda>a.\n                                    wp (body ;;\n  Embed\n   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                             le_utrans\n                              (gfp_trans\n                                (\\<lambda>a.\n                                    wlp (body ;;\n   Embed\n    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                              (snd x)})\n                        P\n 2. Inf_utrans\n     (snd `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)})\n     P \\<tturnstile> \\<lambda>s. 1", "{"], ["proof (state)\nthis:\n  Inf_utrans\n   (snd `\n    {x. P (fst x) (snd x) \\<and>\n        feasible (fst x) \\<and>\n        (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n        le_trans (fst x)\n         (lfp_trans\n           (\\<lambda>a.\n               wp (body ;;\n                   Embed\n                    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n        le_utrans\n         (gfp_trans\n           (\\<lambda>a.\n               wlp (body ;;\n                    Embed\n                     a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n         (snd x)})\n   P \\<tturnstile> snd x P\n\ngoal (2 subgoals):\n 1. \\<lambda>s.\n       0 \\<tturnstile> Inf_utrans\n                        (snd `\n                         {x. P (fst x) (snd x) \\<and>\n                             feasible (fst x) \\<and>\n                             (\\<forall>Q.\n                                 unitary Q \\<longrightarrow>\n                                 unitary (snd x Q)) \\<and>\n                             le_trans (fst x)\n                              (lfp_trans\n                                (\\<lambda>a.\n                                    wp (body ;;\n  Embed\n   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                             le_utrans\n                              (gfp_trans\n                                (\\<lambda>a.\n                                    wlp (body ;;\n   Embed\n    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                              (snd x)})\n                        P\n 2. Inf_utrans\n     (snd `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)})\n     P \\<tturnstile> \\<lambda>s. 1", "from xin uP"], ["proof (chain)\npicking this:\n  x \\<in> {x. P (fst x) (snd x) \\<and>\n              feasible (fst x) \\<and>\n              (\\<forall>Q.\n                  unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n              le_trans (fst x)\n               (lfp_trans\n                 (\\<lambda>a.\n                     wp (body ;;\n                         Embed\n                          a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n              le_utrans\n               (gfp_trans\n                 (\\<lambda>a.\n                     wlp (body ;;\n                          Embed\n                           a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n               (snd x)}\n  unitary P", "have \"unitary (snd x P)\""], ["proof (prove)\nusing this:\n  x \\<in> {x. P (fst x) (snd x) \\<and>\n              feasible (fst x) \\<and>\n              (\\<forall>Q.\n                  unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n              le_trans (fst x)\n               (lfp_trans\n                 (\\<lambda>a.\n                     wp (body ;;\n                         Embed\n                          a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n              le_utrans\n               (gfp_trans\n                 (\\<lambda>a.\n                     wlp (body ;;\n                          Embed\n                           a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n               (snd x)}\n  unitary P\n\ngoal (1 subgoal):\n 1. unitary (snd x P)", "by(simp)"], ["proof (state)\nthis:\n  unitary (snd x P)\n\ngoal (2 subgoals):\n 1. \\<lambda>s.\n       0 \\<tturnstile> Inf_utrans\n                        (snd `\n                         {x. P (fst x) (snd x) \\<and>\n                             feasible (fst x) \\<and>\n                             (\\<forall>Q.\n                                 unitary Q \\<longrightarrow>\n                                 unitary (snd x Q)) \\<and>\n                             le_trans (fst x)\n                              (lfp_trans\n                                (\\<lambda>a.\n                                    wp (body ;;\n  Embed\n   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                             le_utrans\n                              (gfp_trans\n                                (\\<lambda>a.\n                                    wlp (body ;;\n   Embed\n    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                              (snd x)})\n                        P\n 2. Inf_utrans\n     (snd `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)})\n     P \\<tturnstile> \\<lambda>s. 1", "hence \"snd x P \\<tturnstile> \\<lambda>s. 1\""], ["proof (prove)\nusing this:\n  unitary (snd x P)\n\ngoal (1 subgoal):\n 1. snd x P \\<tturnstile> \\<lambda>s. 1", "by(auto)"], ["proof (state)\nthis:\n  snd x P \\<tturnstile> \\<lambda>s. 1\n\ngoal (2 subgoals):\n 1. \\<lambda>s.\n       0 \\<tturnstile> Inf_utrans\n                        (snd `\n                         {x. P (fst x) (snd x) \\<and>\n                             feasible (fst x) \\<and>\n                             (\\<forall>Q.\n                                 unitary Q \\<longrightarrow>\n                                 unitary (snd x Q)) \\<and>\n                             le_trans (fst x)\n                              (lfp_trans\n                                (\\<lambda>a.\n                                    wp (body ;;\n  Embed\n   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                             le_utrans\n                              (gfp_trans\n                                (\\<lambda>a.\n                                    wlp (body ;;\n   Embed\n    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                              (snd x)})\n                        P\n 2. Inf_utrans\n     (snd `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)})\n     P \\<tturnstile> \\<lambda>s. 1", "}"], ["proof (state)\nthis:\n  snd x P \\<tturnstile> \\<lambda>s. 1\n\ngoal (2 subgoals):\n 1. \\<lambda>s.\n       0 \\<tturnstile> Inf_utrans\n                        (snd `\n                         {x. P (fst x) (snd x) \\<and>\n                             feasible (fst x) \\<and>\n                             (\\<forall>Q.\n                                 unitary Q \\<longrightarrow>\n                                 unitary (snd x Q)) \\<and>\n                             le_trans (fst x)\n                              (lfp_trans\n                                (\\<lambda>a.\n                                    wp (body ;;\n  Embed\n   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                             le_utrans\n                              (gfp_trans\n                                (\\<lambda>a.\n                                    wlp (body ;;\n   Embed\n    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                              (snd x)})\n                        P\n 2. Inf_utrans\n     (snd `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)})\n     P \\<tturnstile> \\<lambda>s. 1", "finally"], ["proof (chain)\npicking this:\n  Inf_utrans\n   (snd `\n    {x. P (fst x) (snd x) \\<and>\n        feasible (fst x) \\<and>\n        (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n        le_trans (fst x)\n         (lfp_trans\n           (\\<lambda>a.\n               wp (body ;;\n                   Embed\n                    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n        le_utrans\n         (gfp_trans\n           (\\<lambda>a.\n               wlp (body ;;\n                    Embed\n                     a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n         (snd x)})\n   P \\<tturnstile> \\<lambda>s. 1", "show \"Inf_utrans (snd ` ?M) P \\<tturnstile> \\<lambda>s. 1\""], ["proof (prove)\nusing this:\n  Inf_utrans\n   (snd `\n    {x. P (fst x) (snd x) \\<and>\n        feasible (fst x) \\<and>\n        (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n        le_trans (fst x)\n         (lfp_trans\n           (\\<lambda>a.\n               wp (body ;;\n                   Embed\n                    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n        le_utrans\n         (gfp_trans\n           (\\<lambda>a.\n               wlp (body ;;\n                    Embed\n                     a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n         (snd x)})\n   P \\<tturnstile> \\<lambda>s. 1\n\ngoal (1 subgoal):\n 1. Inf_utrans\n     (snd `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)})\n     P \\<tturnstile> \\<lambda>s. 1", "."], ["proof (state)\nthis:\n  Inf_utrans\n   (snd `\n    {x. P (fst x) (snd x) \\<and>\n        feasible (fst x) \\<and>\n        (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n        le_trans (fst x)\n         (lfp_trans\n           (\\<lambda>a.\n               wp (body ;;\n                   Embed\n                    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n        le_utrans\n         (gfp_trans\n           (\\<lambda>a.\n               wlp (body ;;\n                    Embed\n                     a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n         (snd x)})\n   P \\<tturnstile> \\<lambda>s. 1\n\ngoal (1 subgoal):\n 1. \\<lambda>s.\n       0 \\<tturnstile> Inf_utrans\n                        (snd `\n                         {x. P (fst x) (snd x) \\<and>\n                             feasible (fst x) \\<and>\n                             (\\<forall>Q.\n                                 unitary Q \\<longrightarrow>\n                                 unitary (snd x Q)) \\<and>\n                             le_trans (fst x)\n                              (lfp_trans\n                                (\\<lambda>a.\n                                    wp (body ;;\n  Embed\n   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                             le_utrans\n                              (gfp_trans\n                                (\\<lambda>a.\n                                    wlp (body ;;\n   Embed\n    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                              (snd x)})\n                        P", "have \"\\<lambda>s. 0 \\<tturnstile> Inf_trans (snd ` ?M) P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lambda>s.\n       0 \\<tturnstile> Inf_trans\n                        (snd `\n                         {x. P (fst x) (snd x) \\<and>\n                             feasible (fst x) \\<and>\n                             (\\<forall>Q.\n                                 unitary Q \\<longrightarrow>\n                                 unitary (snd x Q)) \\<and>\n                             le_trans (fst x)\n                              (lfp_trans\n                                (\\<lambda>a.\n                                    wp (body ;;\n  Embed\n   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                             le_utrans\n                              (gfp_trans\n                                (\\<lambda>a.\n                                    wlp (body ;;\n   Embed\n    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                              (snd x)})\n                        P", "unfolding Inf_trans_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lambda>s.\n       0 \\<tturnstile> Inf_exp\n                        {t P |t.\n                         t \\<in> snd `\n                                 {x. P (fst x) (snd x) \\<and>\n                                     feasible (fst x) \\<and>\n                                     (\\<forall>Q.\n   unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                                     le_trans (fst x)\n(lfp_trans\n  (\\<lambda>a.\n      wp (body ;;\n          Embed\n           a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                                     le_utrans\n(gfp_trans\n  (\\<lambda>a.\n      wlp (body ;;\n           Embed\n            a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n(snd x)}}", "proof(rule Inf_exp_greatest)"], ["proof (state)\ngoal (2 subgoals):\n 1. {t P |t.\n     t \\<in> snd `\n             {x. P (fst x) (snd x) \\<and>\n                 feasible (fst x) \\<and>\n                 (\\<forall>Q.\n                     unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                 le_trans (fst x)\n                  (lfp_trans\n                    (\\<lambda>a.\n                        wp (body ;;\n                            Embed\n                             a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                 le_utrans\n                  (gfp_trans\n                    (\\<lambda>a.\n                        wlp (body ;;\n                             Embed\n                              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                  (snd x)}} \\<noteq>\n    {}\n 2. \\<forall>P\\<in>{t P |t.\n                    t \\<in> snd `\n                            {x. P (fst x) (snd x) \\<and>\n                                feasible (fst x) \\<and>\n                                (\\<forall>Q.\n                                    unitary Q \\<longrightarrow>\n                                    unitary (snd x Q)) \\<and>\n                                le_trans (fst x)\n                                 (lfp_trans\n                                   (\\<lambda>a.\n wp (body ;;\n     Embed\n      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                                le_utrans\n                                 (gfp_trans\n                                   (\\<lambda>a.\n wlp (body ;;\n      Embed\n       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                                 (snd x)}}.\n       \\<lambda>s. 0 \\<tturnstile> P", "from sxin"], ["proof (chain)\npicking this:\n  snd x\n  \\<in> snd `\n        {x. P (fst x) (snd x) \\<and>\n            feasible (fst x) \\<and>\n            (\\<forall>Q.\n                unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n            le_trans (fst x)\n             (lfp_trans\n               (\\<lambda>a.\n                   wp (body ;;\n                       Embed\n                        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n            le_utrans\n             (gfp_trans\n               (\\<lambda>a.\n                   wlp (body ;;\n                        Embed\n                         a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n             (snd x)}", "show \"{t P |t. t \\<in> snd ` ?M} \\<noteq> {}\""], ["proof (prove)\nusing this:\n  snd x\n  \\<in> snd `\n        {x. P (fst x) (snd x) \\<and>\n            feasible (fst x) \\<and>\n            (\\<forall>Q.\n                unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n            le_trans (fst x)\n             (lfp_trans\n               (\\<lambda>a.\n                   wp (body ;;\n                       Embed\n                        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n            le_utrans\n             (gfp_trans\n               (\\<lambda>a.\n                   wlp (body ;;\n                        Embed\n                         a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n             (snd x)}\n\ngoal (1 subgoal):\n 1. {t P |t.\n     t \\<in> snd `\n             {x. P (fst x) (snd x) \\<and>\n                 feasible (fst x) \\<and>\n                 (\\<forall>Q.\n                     unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                 le_trans (fst x)\n                  (lfp_trans\n                    (\\<lambda>a.\n                        wp (body ;;\n                            Embed\n                             a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                 le_utrans\n                  (gfp_trans\n                    (\\<lambda>a.\n                        wlp (body ;;\n                             Embed\n                              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                  (snd x)}} \\<noteq>\n    {}", "by(auto)"], ["proof (state)\nthis:\n  {t P |t.\n   t \\<in> snd `\n           {x. P (fst x) (snd x) \\<and>\n               feasible (fst x) \\<and>\n               (\\<forall>Q.\n                   unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n               le_trans (fst x)\n                (lfp_trans\n                  (\\<lambda>a.\n                      wp (body ;;\n                          Embed\n                           a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n               le_utrans\n                (gfp_trans\n                  (\\<lambda>a.\n                      wlp (body ;;\n                           Embed\n                            a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                (snd x)}} \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. \\<forall>P\\<in>{t P |t.\n                    t \\<in> snd `\n                            {x. P (fst x) (snd x) \\<and>\n                                feasible (fst x) \\<and>\n                                (\\<forall>Q.\n                                    unitary Q \\<longrightarrow>\n                                    unitary (snd x Q)) \\<and>\n                                le_trans (fst x)\n                                 (lfp_trans\n                                   (\\<lambda>a.\n wp (body ;;\n     Embed\n      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                                le_utrans\n                                 (gfp_trans\n                                   (\\<lambda>a.\n wlp (body ;;\n      Embed\n       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                                 (snd x)}}.\n       \\<lambda>s. 0 \\<tturnstile> P", "show \"\\<forall>P\\<in>{t P |t. t \\<in> snd ` ?M}. \\<lambda>s. 0 \\<tturnstile> P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>P\\<in>{t P |t.\n                    t \\<in> snd `\n                            {x. P (fst x) (snd x) \\<and>\n                                feasible (fst x) \\<and>\n                                (\\<forall>Q.\n                                    unitary Q \\<longrightarrow>\n                                    unitary (snd x Q)) \\<and>\n                                le_trans (fst x)\n                                 (lfp_trans\n                                   (\\<lambda>a.\n wp (body ;;\n     Embed\n      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                                le_utrans\n                                 (gfp_trans\n                                   (\\<lambda>a.\n wlp (body ;;\n      Embed\n       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                                 (snd x)}}.\n       \\<lambda>s. 0 \\<tturnstile> P", "proof(clarsimp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>P a b; feasible a;\n        \\<forall>Q. unitary Q \\<longrightarrow> unitary (b Q);\n        le_trans a\n         (lfp_trans\n           (\\<lambda>a.\n               wp (body ;;\n                   Embed\n                    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)));\n        le_utrans\n         (gfp_trans\n           (\\<lambda>a.\n               wlp (body ;;\n                    Embed\n                     a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n         b\\<rbrakk>\n       \\<Longrightarrow> \\<lambda>s. 0 \\<tturnstile> b P", "fix t::\"'s trans\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>P a b; feasible a;\n        \\<forall>Q. unitary Q \\<longrightarrow> unitary (b Q);\n        le_trans a\n         (lfp_trans\n           (\\<lambda>a.\n               wp (body ;;\n                   Embed\n                    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)));\n        le_utrans\n         (gfp_trans\n           (\\<lambda>a.\n               wlp (body ;;\n                    Embed\n                     a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n         b\\<rbrakk>\n       \\<Longrightarrow> \\<lambda>s. 0 \\<tturnstile> b P", "assume \"\\<forall>Q. unitary Q \\<longrightarrow> unitary (t Q)\""], ["proof (state)\nthis:\n  \\<forall>Q. unitary Q \\<longrightarrow> unitary (t Q)\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>P a b; feasible a;\n        \\<forall>Q. unitary Q \\<longrightarrow> unitary (b Q);\n        le_trans a\n         (lfp_trans\n           (\\<lambda>a.\n               wp (body ;;\n                   Embed\n                    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)));\n        le_utrans\n         (gfp_trans\n           (\\<lambda>a.\n               wlp (body ;;\n                    Embed\n                     a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n         b\\<rbrakk>\n       \\<Longrightarrow> \\<lambda>s. 0 \\<tturnstile> b P", "with uP"], ["proof (chain)\npicking this:\n  unitary P\n  \\<forall>Q. unitary Q \\<longrightarrow> unitary (t Q)", "have \"unitary (t P)\""], ["proof (prove)\nusing this:\n  unitary P\n  \\<forall>Q. unitary Q \\<longrightarrow> unitary (t Q)\n\ngoal (1 subgoal):\n 1. unitary (t P)", "by(auto)"], ["proof (state)\nthis:\n  unitary (t P)\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>P a b; feasible a;\n        \\<forall>Q. unitary Q \\<longrightarrow> unitary (b Q);\n        le_trans a\n         (lfp_trans\n           (\\<lambda>a.\n               wp (body ;;\n                   Embed\n                    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)));\n        le_utrans\n         (gfp_trans\n           (\\<lambda>a.\n               wlp (body ;;\n                    Embed\n                     a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n         b\\<rbrakk>\n       \\<Longrightarrow> \\<lambda>s. 0 \\<tturnstile> b P", "thus \"\\<lambda>s. 0 \\<tturnstile> t P\""], ["proof (prove)\nusing this:\n  unitary (t P)\n\ngoal (1 subgoal):\n 1. \\<lambda>s. 0 \\<tturnstile> t P", "by(auto)"], ["proof (state)\nthis:\n  \\<lambda>s. 0 \\<tturnstile> t P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>P\\<in>{t P |t.\n                  t \\<in> snd `\n                          {x. P (fst x) (snd x) \\<and>\n                              feasible (fst x) \\<and>\n                              (\\<forall>Q.\n                                  unitary Q \\<longrightarrow>\n                                  unitary (snd x Q)) \\<and>\n                              le_trans (fst x)\n                               (lfp_trans\n                                 (\\<lambda>a.\n                                     wp\n(body ;;\n Embed\n  a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                              le_utrans\n                               (gfp_trans\n                                 (\\<lambda>a.\n                                     wlp\n(body ;;\n Embed\n  a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                               (snd x)}}.\n     \\<lambda>s. 0 \\<tturnstile> P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lambda>s.\n     0 \\<tturnstile> Inf_trans\n                      (snd `\n                       {x. P (fst x) (snd x) \\<and>\n                           feasible (fst x) \\<and>\n                           (\\<forall>Q.\n                               unitary Q \\<longrightarrow>\n                               unitary (snd x Q)) \\<and>\n                           le_trans (fst x)\n                            (lfp_trans\n                              (\\<lambda>a.\n                                  wp (body ;;\nEmbed\n a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                           le_utrans\n                            (gfp_trans\n                              (\\<lambda>a.\n                                  wlp (body ;;\n Embed\n  a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                            (snd x)})\n                      P\n\ngoal (1 subgoal):\n 1. \\<lambda>s.\n       0 \\<tturnstile> Inf_utrans\n                        (snd `\n                         {x. P (fst x) (snd x) \\<and>\n                             feasible (fst x) \\<and>\n                             (\\<forall>Q.\n                                 unitary Q \\<longrightarrow>\n                                 unitary (snd x Q)) \\<and>\n                             le_trans (fst x)\n                              (lfp_trans\n                                (\\<lambda>a.\n                                    wp (body ;;\n  Embed\n   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                             le_utrans\n                              (gfp_trans\n                                (\\<lambda>a.\n                                    wlp (body ;;\n   Embed\n    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                              (snd x)})\n                        P", "also"], ["proof (state)\nthis:\n  \\<lambda>s.\n     0 \\<tturnstile> Inf_trans\n                      (snd `\n                       {x. P (fst x) (snd x) \\<and>\n                           feasible (fst x) \\<and>\n                           (\\<forall>Q.\n                               unitary Q \\<longrightarrow>\n                               unitary (snd x Q)) \\<and>\n                           le_trans (fst x)\n                            (lfp_trans\n                              (\\<lambda>a.\n                                  wp (body ;;\nEmbed\n a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                           le_utrans\n                            (gfp_trans\n                              (\\<lambda>a.\n                                  wlp (body ;;\n Embed\n  a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                            (snd x)})\n                      P\n\ngoal (1 subgoal):\n 1. \\<lambda>s.\n       0 \\<tturnstile> Inf_utrans\n                        (snd `\n                         {x. P (fst x) (snd x) \\<and>\n                             feasible (fst x) \\<and>\n                             (\\<forall>Q.\n                                 unitary Q \\<longrightarrow>\n                                 unitary (snd x Q)) \\<and>\n                             le_trans (fst x)\n                              (lfp_trans\n                                (\\<lambda>a.\n                                    wp (body ;;\n  Embed\n   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                             le_utrans\n                              (gfp_trans\n                                (\\<lambda>a.\n                                    wlp (body ;;\n   Embed\n    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                              (snd x)})\n                        P", "{"], ["proof (state)\nthis:\n  \\<lambda>s.\n     0 \\<tturnstile> Inf_trans\n                      (snd `\n                       {x. P (fst x) (snd x) \\<and>\n                           feasible (fst x) \\<and>\n                           (\\<forall>Q.\n                               unitary Q \\<longrightarrow>\n                               unitary (snd x Q)) \\<and>\n                           le_trans (fst x)\n                            (lfp_trans\n                              (\\<lambda>a.\n                                  wp (body ;;\nEmbed\n a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                           le_utrans\n                            (gfp_trans\n                              (\\<lambda>a.\n                                  wlp (body ;;\n Embed\n  a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                            (snd x)})\n                      P\n\ngoal (1 subgoal):\n 1. \\<lambda>s.\n       0 \\<tturnstile> Inf_utrans\n                        (snd `\n                         {x. P (fst x) (snd x) \\<and>\n                             feasible (fst x) \\<and>\n                             (\\<forall>Q.\n                                 unitary Q \\<longrightarrow>\n                                 unitary (snd x Q)) \\<and>\n                             le_trans (fst x)\n                              (lfp_trans\n                                (\\<lambda>a.\n                                    wp (body ;;\n  Embed\n   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                             le_utrans\n                              (gfp_trans\n                                (\\<lambda>a.\n                                    wlp (body ;;\n   Embed\n    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                              (snd x)})\n                        P", "from ne"], ["proof (chain)\npicking this:\n  {x. P (fst x) (snd x) \\<and>\n      feasible (fst x) \\<and>\n      (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n      le_trans (fst x)\n       (lfp_trans\n         (\\<lambda>a.\n             wp (body ;;\n                 Embed\n                  a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n      le_utrans\n       (gfp_trans\n         (\\<lambda>a.\n             wlp (body ;;\n                  Embed\n                   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n       (snd x)} \\<noteq>\n  {}", "have X: \"(snd ` ?M = {}) = False\""], ["proof (prove)\nusing this:\n  {x. P (fst x) (snd x) \\<and>\n      feasible (fst x) \\<and>\n      (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n      le_trans (fst x)\n       (lfp_trans\n         (\\<lambda>a.\n             wp (body ;;\n                 Embed\n                  a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n      le_utrans\n       (gfp_trans\n         (\\<lambda>a.\n             wlp (body ;;\n                  Embed\n                   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n       (snd x)} \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. (snd `\n     {x. P (fst x) (snd x) \\<and>\n         feasible (fst x) \\<and>\n         (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n         le_trans (fst x)\n          (lfp_trans\n            (\\<lambda>a.\n                wp (body ;;\n                    Embed\n                     a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n         le_utrans\n          (gfp_trans\n            (\\<lambda>a.\n                wlp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n          (snd x)} =\n     {}) =\n    False", "by(simp)"], ["proof (state)\nthis:\n  (snd `\n   {x. P (fst x) (snd x) \\<and>\n       feasible (fst x) \\<and>\n       (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n       le_trans (fst x)\n        (lfp_trans\n          (\\<lambda>a.\n              wp (body ;;\n                  Embed\n                   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n       le_utrans\n        (gfp_trans\n          (\\<lambda>a.\n              wlp (body ;;\n                   Embed\n                    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n        (snd x)} =\n   {}) =\n  False\n\ngoal (1 subgoal):\n 1. \\<lambda>s.\n       0 \\<tturnstile> Inf_utrans\n                        (snd `\n                         {x. P (fst x) (snd x) \\<and>\n                             feasible (fst x) \\<and>\n                             (\\<forall>Q.\n                                 unitary Q \\<longrightarrow>\n                                 unitary (snd x Q)) \\<and>\n                             le_trans (fst x)\n                              (lfp_trans\n                                (\\<lambda>a.\n                                    wp (body ;;\n  Embed\n   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                             le_utrans\n                              (gfp_trans\n                                (\\<lambda>a.\n                                    wlp (body ;;\n   Embed\n    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                              (snd x)})\n                        P", "have \"Inf_trans (snd ` ?M) P = Inf_utrans (snd ` ?M) P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_trans\n     (snd `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)})\n     P =\n    Inf_utrans\n     (snd `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)})\n     P", "unfolding Inf_utrans_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Inf_trans\n     (snd `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)})\n     P =\n    (if snd `\n        {x. P (fst x) (snd x) \\<and>\n            feasible (fst x) \\<and>\n            (\\<forall>Q.\n                unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n            le_trans (fst x)\n             (lfp_trans\n               (\\<lambda>a.\n                   wp (body ;;\n                       Embed\n                        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n            le_utrans\n             (gfp_trans\n               (\\<lambda>a.\n                   wlp (body ;;\n                        Embed\n                         a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n             (snd x)} =\n        {}\n     then \\<lambda>P s. 1\n     else Inf_trans\n           (snd `\n            {x. P (fst x) (snd x) \\<and>\n                feasible (fst x) \\<and>\n                (\\<forall>Q.\n                    unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                le_trans (fst x)\n                 (lfp_trans\n                   (\\<lambda>a.\n                       wp (body ;;\n                           Embed\n                            a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                le_utrans\n                 (gfp_trans\n                   (\\<lambda>a.\n                       wlp (body ;;\n                            Embed\n                             a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                 (snd x)}))\n     P", "by(subst X, simp)"], ["proof (state)\nthis:\n  Inf_trans\n   (snd `\n    {x. P (fst x) (snd x) \\<and>\n        feasible (fst x) \\<and>\n        (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n        le_trans (fst x)\n         (lfp_trans\n           (\\<lambda>a.\n               wp (body ;;\n                   Embed\n                    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n        le_utrans\n         (gfp_trans\n           (\\<lambda>a.\n               wlp (body ;;\n                    Embed\n                     a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n         (snd x)})\n   P =\n  Inf_utrans\n   (snd `\n    {x. P (fst x) (snd x) \\<and>\n        feasible (fst x) \\<and>\n        (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n        le_trans (fst x)\n         (lfp_trans\n           (\\<lambda>a.\n               wp (body ;;\n                   Embed\n                    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n        le_utrans\n         (gfp_trans\n           (\\<lambda>a.\n               wlp (body ;;\n                    Embed\n                     a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n         (snd x)})\n   P\n\ngoal (1 subgoal):\n 1. \\<lambda>s.\n       0 \\<tturnstile> Inf_utrans\n                        (snd `\n                         {x. P (fst x) (snd x) \\<and>\n                             feasible (fst x) \\<and>\n                             (\\<forall>Q.\n                                 unitary Q \\<longrightarrow>\n                                 unitary (snd x Q)) \\<and>\n                             le_trans (fst x)\n                              (lfp_trans\n                                (\\<lambda>a.\n                                    wp (body ;;\n  Embed\n   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                             le_utrans\n                              (gfp_trans\n                                (\\<lambda>a.\n                                    wlp (body ;;\n   Embed\n    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                              (snd x)})\n                        P", "}"], ["proof (state)\nthis:\n  Inf_trans\n   (snd `\n    {x. P (fst x) (snd x) \\<and>\n        feasible (fst x) \\<and>\n        (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n        le_trans (fst x)\n         (lfp_trans\n           (\\<lambda>a.\n               wp (body ;;\n                   Embed\n                    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n        le_utrans\n         (gfp_trans\n           (\\<lambda>a.\n               wlp (body ;;\n                    Embed\n                     a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n         (snd x)})\n   P =\n  Inf_utrans\n   (snd `\n    {x. P (fst x) (snd x) \\<and>\n        feasible (fst x) \\<and>\n        (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n        le_trans (fst x)\n         (lfp_trans\n           (\\<lambda>a.\n               wp (body ;;\n                   Embed\n                    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n        le_utrans\n         (gfp_trans\n           (\\<lambda>a.\n               wlp (body ;;\n                    Embed\n                     a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n         (snd x)})\n   P\n\ngoal (1 subgoal):\n 1. \\<lambda>s.\n       0 \\<tturnstile> Inf_utrans\n                        (snd `\n                         {x. P (fst x) (snd x) \\<and>\n                             feasible (fst x) \\<and>\n                             (\\<forall>Q.\n                                 unitary Q \\<longrightarrow>\n                                 unitary (snd x Q)) \\<and>\n                             le_trans (fst x)\n                              (lfp_trans\n                                (\\<lambda>a.\n                                    wp (body ;;\n  Embed\n   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                             le_utrans\n                              (gfp_trans\n                                (\\<lambda>a.\n                                    wlp (body ;;\n   Embed\n    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                              (snd x)})\n                        P", "finally"], ["proof (chain)\npicking this:\n  \\<lambda>s.\n     0 \\<tturnstile> Inf_utrans\n                      (snd `\n                       {x. P (fst x) (snd x) \\<and>\n                           feasible (fst x) \\<and>\n                           (\\<forall>Q.\n                               unitary Q \\<longrightarrow>\n                               unitary (snd x Q)) \\<and>\n                           le_trans (fst x)\n                            (lfp_trans\n                              (\\<lambda>a.\n                                  wp (body ;;\nEmbed\n a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                           le_utrans\n                            (gfp_trans\n                              (\\<lambda>a.\n                                  wlp (body ;;\n Embed\n  a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                            (snd x)})\n                      P", "show \"\\<lambda>s. 0 \\<tturnstile> Inf_utrans (snd ` ?M) P\""], ["proof (prove)\nusing this:\n  \\<lambda>s.\n     0 \\<tturnstile> Inf_utrans\n                      (snd `\n                       {x. P (fst x) (snd x) \\<and>\n                           feasible (fst x) \\<and>\n                           (\\<forall>Q.\n                               unitary Q \\<longrightarrow>\n                               unitary (snd x Q)) \\<and>\n                           le_trans (fst x)\n                            (lfp_trans\n                              (\\<lambda>a.\n                                  wp (body ;;\nEmbed\n a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                           le_utrans\n                            (gfp_trans\n                              (\\<lambda>a.\n                                  wlp (body ;;\n Embed\n  a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                            (snd x)})\n                      P\n\ngoal (1 subgoal):\n 1. \\<lambda>s.\n       0 \\<tturnstile> Inf_utrans\n                        (snd `\n                         {x. P (fst x) (snd x) \\<and>\n                             feasible (fst x) \\<and>\n                             (\\<forall>Q.\n                                 unitary Q \\<longrightarrow>\n                                 unitary (snd x Q)) \\<and>\n                             le_trans (fst x)\n                              (lfp_trans\n                                (\\<lambda>a.\n                                    wp (body ;;\n  Embed\n   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                             le_utrans\n                              (gfp_trans\n                                (\\<lambda>a.\n                                    wlp (body ;;\n   Embed\n    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                              (snd x)})\n                        P", "."], ["proof (state)\nthis:\n  \\<lambda>s.\n     0 \\<tturnstile> Inf_utrans\n                      (snd `\n                       {x. P (fst x) (snd x) \\<and>\n                           feasible (fst x) \\<and>\n                           (\\<forall>Q.\n                               unitary Q \\<longrightarrow>\n                               unitary (snd x Q)) \\<and>\n                           le_trans (fst x)\n                            (lfp_trans\n                              (\\<lambda>a.\n                                  wp (body ;;\nEmbed\n a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                           le_utrans\n                            (gfp_trans\n                              (\\<lambda>a.\n                                  wlp (body ;;\n Embed\n  a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                            (snd x)})\n                      P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  unitary\n   (Inf_utrans\n     (snd `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)})\n     P)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  unitary ?P \\<Longrightarrow>\n  unitary\n   (Inf_utrans\n     (snd `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)})\n     ?P)\n\ngoal (1 subgoal):\n 1. P (lfp_trans\n        (\\<lambda>x.\n            wp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n     (gfp_trans\n       (\\<lambda>x.\n           wlp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "have wp_loop_mono: \"\\<And>t u. \\<lbrakk> le_trans t u; \\<And>P. sound P \\<Longrightarrow> sound (t P);\n                               \\<And>P. sound P \\<Longrightarrow> sound (u P) \\<rbrakk> \\<Longrightarrow> le_trans (?X t) (?X u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t u.\n       \\<lbrakk>le_trans t u;\n        \\<And>P. sound P \\<Longrightarrow> sound (t P);\n        \\<And>P. sound P \\<Longrightarrow> sound (u P)\\<rbrakk>\n       \\<Longrightarrow> le_trans\n                          (wp (body ;;\n                               Embed\n                                t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wp (body ;;\n                               Embed\n                                u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "proof(intro le_transI le_funI, simp add:wp_eval)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t u P x.\n       \\<lbrakk>le_trans t u;\n        \\<And>P. sound P \\<Longrightarrow> sound (t P);\n        \\<And>P. sound P \\<Longrightarrow> sound (u P); sound P\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wp body (t P) x\n                         \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                               wp body (u P) x", "fix t u::\"'s trans\" and P::\"'s expect\" and s::'s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t u P x.\n       \\<lbrakk>le_trans t u;\n        \\<And>P. sound P \\<Longrightarrow> sound (t P);\n        \\<And>P. sound P \\<Longrightarrow> sound (u P); sound P\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wp body (t P) x\n                         \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                               wp body (u P) x", "assume le: \"le_trans t u\"\n       and st: \"\\<And>P. sound P \\<Longrightarrow> sound (t P)\"\n       and su: \"\\<And>P. sound P \\<Longrightarrow> sound (u P)\"\n       and sP: \"sound P\""], ["proof (state)\nthis:\n  le_trans t u\n  sound ?P \\<Longrightarrow> sound (t ?P)\n  sound ?P \\<Longrightarrow> sound (u ?P)\n  sound P\n\ngoal (1 subgoal):\n 1. \\<And>t u P x.\n       \\<lbrakk>le_trans t u;\n        \\<And>P. sound P \\<Longrightarrow> sound (t P);\n        \\<And>P. sound P \\<Longrightarrow> sound (u P); sound P\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wp body (t P) x\n                         \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                               wp body (u P) x", "hence \"sound (t P)\" \"sound (u P)\""], ["proof (prove)\nusing this:\n  le_trans t u\n  sound ?P \\<Longrightarrow> sound (t ?P)\n  sound ?P \\<Longrightarrow> sound (u ?P)\n  sound P\n\ngoal (1 subgoal):\n 1. sound (t P) &&& sound (u P)", "by(auto)"], ["proof (state)\nthis:\n  sound (t P)\n  sound (u P)\n\ngoal (1 subgoal):\n 1. \\<And>t u P x.\n       \\<lbrakk>le_trans t u;\n        \\<And>P. sound P \\<Longrightarrow> sound (t P);\n        \\<And>P. sound P \\<Longrightarrow> sound (u P); sound P\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wp body (t P) x\n                         \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                               wp body (u P) x", "with healthy_monoD[OF hwp] le sP"], ["proof (chain)\npicking this:\n  mono_trans (wp body)\n  le_trans t u\n  sound P\n  sound (t P)\n  sound (u P)", "have \"wp body (t P) \\<tturnstile> wp body (u P)\""], ["proof (prove)\nusing this:\n  mono_trans (wp body)\n  le_trans t u\n  sound P\n  sound (t P)\n  sound (u P)\n\ngoal (1 subgoal):\n 1. wp body (t P) \\<tturnstile> wp body (u P)", "by(auto)"], ["proof (state)\nthis:\n  wp body (t P) \\<tturnstile> wp body (u P)\n\ngoal (1 subgoal):\n 1. \\<And>t u P x.\n       \\<lbrakk>le_trans t u;\n        \\<And>P. sound P \\<Longrightarrow> sound (t P);\n        \\<And>P. sound P \\<Longrightarrow> sound (u P); sound P\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wp body (t P) x\n                         \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                               wp body (u P) x", "hence \"wp body (t P) s \\<le> wp body (u P) s\""], ["proof (prove)\nusing this:\n  wp body (t P) \\<tturnstile> wp body (u P)\n\ngoal (1 subgoal):\n 1. wp body (t P) s \\<le> wp body (u P) s", "by(auto)"], ["proof (state)\nthis:\n  wp body (t P) s \\<le> wp body (u P) s\n\ngoal (1 subgoal):\n 1. \\<And>t u P x.\n       \\<lbrakk>le_trans t u;\n        \\<And>P. sound P \\<Longrightarrow> sound (t P);\n        \\<And>P. sound P \\<Longrightarrow> sound (u P); sound P\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wp body (t P) x\n                         \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                               wp body (u P) x", "thus \"\\<guillemotleft>G\\<guillemotright> s * wp body (t P) s \\<le> \\<guillemotleft>G\\<guillemotright> s * wp body (u P) s\""], ["proof (prove)\nusing this:\n  wp body (t P) s \\<le> wp body (u P) s\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wp body (t P) s\n    \\<le> \\<guillemotleft> G \\<guillemotright> s * wp body (u P) s", "by(auto intro:mult_left_mono)"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wp body (t P) s\n  \\<le> \\<guillemotleft> G \\<guillemotright> s * wp body (u P) s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>le_trans ?t ?u; \\<And>P. sound P \\<Longrightarrow> sound (?t P);\n   \\<And>P. sound P \\<Longrightarrow> sound (?u P)\\<rbrakk>\n  \\<Longrightarrow> le_trans\n                     (wp (body ;;\n                          Embed\n                           ?t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                     (wp (body ;;\n                          Embed\n                           ?u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal (1 subgoal):\n 1. P (lfp_trans\n        (\\<lambda>x.\n            wp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n     (gfp_trans\n       (\\<lambda>x.\n           wlp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "have wlp_loop_mono: \"\\<And>t u. \\<lbrakk> le_utrans t u; \\<And>P. unitary P \\<Longrightarrow> unitary (t P);\n                               \\<And>P. unitary P \\<Longrightarrow> unitary (u P) \\<rbrakk> \\<Longrightarrow> le_utrans (?Y t) (?Y u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t u.\n       \\<lbrakk>le_utrans t u;\n        \\<And>P. unitary P \\<Longrightarrow> unitary (t P);\n        \\<And>P. unitary P \\<Longrightarrow> unitary (u P)\\<rbrakk>\n       \\<Longrightarrow> le_utrans\n                          (wlp (body ;;\n                                Embed\n                                 t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                          (wlp (body ;;\n                                Embed\n                                 u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "proof(intro le_utransI le_funI, simp add:wp_eval)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t u P x.\n       \\<lbrakk>le_utrans t u;\n        \\<And>P. unitary P \\<Longrightarrow> unitary (t P);\n        \\<And>P. unitary P \\<Longrightarrow> unitary (u P);\n        unitary P\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wlp body (t P) x\n                         \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                               wlp body (u P) x", "fix t u::\"'s trans\" and P::\"'s expect\" and s::'s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t u P x.\n       \\<lbrakk>le_utrans t u;\n        \\<And>P. unitary P \\<Longrightarrow> unitary (t P);\n        \\<And>P. unitary P \\<Longrightarrow> unitary (u P);\n        unitary P\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wlp body (t P) x\n                         \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                               wlp body (u P) x", "assume le: \"le_utrans t u\"\n       and ut: \"\\<And>P. unitary P \\<Longrightarrow> unitary (t P)\"\n       and uu: \"\\<And>P. unitary P \\<Longrightarrow> unitary (u P)\"\n       and uP: \"unitary P\""], ["proof (state)\nthis:\n  le_utrans t u\n  unitary ?P \\<Longrightarrow> unitary (t ?P)\n  unitary ?P \\<Longrightarrow> unitary (u ?P)\n  unitary P\n\ngoal (1 subgoal):\n 1. \\<And>t u P x.\n       \\<lbrakk>le_utrans t u;\n        \\<And>P. unitary P \\<Longrightarrow> unitary (t P);\n        \\<And>P. unitary P \\<Longrightarrow> unitary (u P);\n        unitary P\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wlp body (t P) x\n                         \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                               wlp body (u P) x", "hence \"unitary (t P)\" \"unitary (u P)\""], ["proof (prove)\nusing this:\n  le_utrans t u\n  unitary ?P \\<Longrightarrow> unitary (t ?P)\n  unitary ?P \\<Longrightarrow> unitary (u ?P)\n  unitary P\n\ngoal (1 subgoal):\n 1. unitary (t P) &&& unitary (u P)", "by(auto)"], ["proof (state)\nthis:\n  unitary (t P)\n  unitary (u P)\n\ngoal (1 subgoal):\n 1. \\<And>t u P x.\n       \\<lbrakk>le_utrans t u;\n        \\<And>P. unitary P \\<Longrightarrow> unitary (t P);\n        \\<And>P. unitary P \\<Longrightarrow> unitary (u P);\n        unitary P\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wlp body (t P) x\n                         \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                               wlp body (u P) x", "with le uP"], ["proof (chain)\npicking this:\n  le_utrans t u\n  unitary P\n  unitary (t P)\n  unitary (u P)", "have \"wlp body (t P) \\<tturnstile> wlp body (u P)\""], ["proof (prove)\nusing this:\n  le_utrans t u\n  unitary P\n  unitary (t P)\n  unitary (u P)\n\ngoal (1 subgoal):\n 1. wlp body (t P) \\<tturnstile> wlp body (u P)", "by(auto intro:nearly_healthy_monoD[OF hwlp])"], ["proof (state)\nthis:\n  wlp body (t P) \\<tturnstile> wlp body (u P)\n\ngoal (1 subgoal):\n 1. \\<And>t u P x.\n       \\<lbrakk>le_utrans t u;\n        \\<And>P. unitary P \\<Longrightarrow> unitary (t P);\n        \\<And>P. unitary P \\<Longrightarrow> unitary (u P);\n        unitary P\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wlp body (t P) x\n                         \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                               wlp body (u P) x", "hence \"wlp body (t P) s \\<le> wlp body (u P) s\""], ["proof (prove)\nusing this:\n  wlp body (t P) \\<tturnstile> wlp body (u P)\n\ngoal (1 subgoal):\n 1. wlp body (t P) s \\<le> wlp body (u P) s", "by(auto)"], ["proof (state)\nthis:\n  wlp body (t P) s \\<le> wlp body (u P) s\n\ngoal (1 subgoal):\n 1. \\<And>t u P x.\n       \\<lbrakk>le_utrans t u;\n        \\<And>P. unitary P \\<Longrightarrow> unitary (t P);\n        \\<And>P. unitary P \\<Longrightarrow> unitary (u P);\n        unitary P\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wlp body (t P) x\n                         \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                               wlp body (u P) x", "thus \"\\<guillemotleft>G\\<guillemotright> s * wlp body (t P) s \\<le> \\<guillemotleft>G\\<guillemotright> s * wlp body (u P) s\""], ["proof (prove)\nusing this:\n  wlp body (t P) s \\<le> wlp body (u P) s\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wlp body (t P) s\n    \\<le> \\<guillemotleft> G \\<guillemotright> s * wlp body (u P) s", "by(auto intro:mult_left_mono)"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wlp body (t P) s\n  \\<le> \\<guillemotleft> G \\<guillemotright> s * wlp body (u P) s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>le_utrans ?t ?u;\n   \\<And>P. unitary P \\<Longrightarrow> unitary (?t P);\n   \\<And>P. unitary P \\<Longrightarrow> unitary (?u P)\\<rbrakk>\n  \\<Longrightarrow> le_utrans\n                     (wlp (body ;;\n                           Embed\n                            ?t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                     (wlp (body ;;\n                           Embed\n                            ?u \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal (1 subgoal):\n 1. P (lfp_trans\n        (\\<lambda>x.\n            wp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n     (gfp_trans\n       (\\<lambda>x.\n           wlp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "from hwp"], ["proof (chain)\npicking this:\n  healthy (wp body)", "have hX: \"\\<And>t. healthy t \\<Longrightarrow> healthy (?X t)\""], ["proof (prove)\nusing this:\n  healthy (wp body)\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       healthy t \\<Longrightarrow>\n       healthy\n        (wp (body ;;\n             Embed\n              t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "by(auto intro:healthy_intros)"], ["proof (state)\nthis:\n  healthy ?t \\<Longrightarrow>\n  healthy\n   (wp (body ;;\n        Embed\n         ?t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal (1 subgoal):\n 1. P (lfp_trans\n        (\\<lambda>x.\n            wp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n     (gfp_trans\n       (\\<lambda>x.\n           wlp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "from hwlp"], ["proof (chain)\npicking this:\n  nearly_healthy (wlp body)", "have hY: \"\\<And>t. nearly_healthy t \\<Longrightarrow> nearly_healthy (?Y t)\""], ["proof (prove)\nusing this:\n  nearly_healthy (wlp body)\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       nearly_healthy t \\<Longrightarrow>\n       nearly_healthy\n        (wlp (body ;;\n              Embed\n               t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "by(auto intro!:healthy_intros)"], ["proof (state)\nthis:\n  nearly_healthy ?t \\<Longrightarrow>\n  nearly_healthy\n   (wlp (body ;;\n         Embed\n          ?t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal (1 subgoal):\n 1. P (lfp_trans\n        (\\<lambda>x.\n            wp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n     (gfp_trans\n       (\\<lambda>x.\n           wlp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "have PLimit: \"P (Sup_trans (fst ` ?M)) (Inf_utrans (snd ` ?M))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (Sup_trans\n        (fst `\n         {x. P (fst x) (snd x) \\<and>\n             feasible (fst x) \\<and>\n             (\\<forall>Q.\n                 unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n             le_trans (fst x)\n              (lfp_trans\n                (\\<lambda>a.\n                    wp (body ;;\n                        Embed\n                         a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n             le_utrans\n              (gfp_trans\n                (\\<lambda>a.\n                    wlp (body ;;\n                         Embed\n                          a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n              (snd x)}))\n     (Inf_utrans\n       (snd `\n        {x. P (fst x) (snd x) \\<and>\n            feasible (fst x) \\<and>\n            (\\<forall>Q.\n                unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n            le_trans (fst x)\n             (lfp_trans\n               (\\<lambda>a.\n                   wp (body ;;\n                       Embed\n                        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n            le_utrans\n             (gfp_trans\n               (\\<lambda>a.\n                   wlp (body ;;\n                        Embed\n                         a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n             (snd x)}))", "by(auto intro:Limit)"], ["proof (state)\nthis:\n  P (Sup_trans\n      (fst `\n       {x. P (fst x) (snd x) \\<and>\n           feasible (fst x) \\<and>\n           (\\<forall>Q.\n               unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n           le_trans (fst x)\n            (lfp_trans\n              (\\<lambda>a.\n                  wp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n           le_utrans\n            (gfp_trans\n              (\\<lambda>a.\n                  wlp (body ;;\n                       Embed\n                        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n            (snd x)}))\n   (Inf_utrans\n     (snd `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)}))\n\ngoal (1 subgoal):\n 1. P (lfp_trans\n        (\\<lambda>x.\n            wp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n     (gfp_trans\n       (\\<lambda>x.\n           wlp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "have feasible_lfp_loop:\n    \"feasible (lfp_trans ?X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. feasible\n     (lfp_trans\n       (\\<lambda>a.\n           wp (body ;;\n               Embed\n                a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "proof(intro feasibleI bounded_byI2 nnegI2,\n        simp_all add:wp_Loop1[simplified wp_eval] soundI2 hwp)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>b P.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> lfp_exp\n                          (\\<lambda>Q s.\n                              \\<guillemotleft> G \\<guillemotright> s *\n                              wp body Q s +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                              P s) \\<tturnstile> \\<lambda>s. b\n 2. \\<And>b P.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> \\<lambda>s.\n                            0 \\<tturnstile> lfp_exp\n       (\\<lambda>Q s.\n           \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n           \\<guillemotleft> \\<N> G \\<guillemotright> s * P s)", "fix P::\"'s expect\" and b::real"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>b P.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> lfp_exp\n                          (\\<lambda>Q s.\n                              \\<guillemotleft> G \\<guillemotright> s *\n                              wp body Q s +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                              P s) \\<tturnstile> \\<lambda>s. b\n 2. \\<And>b P.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> \\<lambda>s.\n                            0 \\<tturnstile> lfp_exp\n       (\\<lambda>Q s.\n           \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n           \\<guillemotleft> \\<N> G \\<guillemotright> s * P s)", "assume bP: \"bounded_by b P\" and nP: \"nneg P\""], ["proof (state)\nthis:\n  bounded_by b P\n  nneg P\n\ngoal (2 subgoals):\n 1. \\<And>b P.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> lfp_exp\n                          (\\<lambda>Q s.\n                              \\<guillemotleft> G \\<guillemotright> s *\n                              wp body Q s +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                              P s) \\<tturnstile> \\<lambda>s. b\n 2. \\<And>b P.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> \\<lambda>s.\n                            0 \\<tturnstile> lfp_exp\n       (\\<lambda>Q s.\n           \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n           \\<guillemotleft> \\<N> G \\<guillemotright> s * P s)", "hence sP: \"sound P\""], ["proof (prove)\nusing this:\n  bounded_by b P\n  nneg P\n\ngoal (1 subgoal):\n 1. sound P", "by(auto)"], ["proof (state)\nthis:\n  sound P\n\ngoal (2 subgoals):\n 1. \\<And>b P.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> lfp_exp\n                          (\\<lambda>Q s.\n                              \\<guillemotleft> G \\<guillemotright> s *\n                              wp body Q s +\n                              \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                              P s) \\<tturnstile> \\<lambda>s. b\n 2. \\<And>b P.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> \\<lambda>s.\n                            0 \\<tturnstile> lfp_exp\n       (\\<lambda>Q s.\n           \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n           \\<guillemotleft> \\<N> G \\<guillemotright> s * P s)", "show \"lfp_exp (\\<lambda>Q s. \\<guillemotleft> G \\<guillemotright> s * wp body Q s + \\<guillemotleft> \\<N> G \\<guillemotright> s * P s) \\<tturnstile> \\<lambda>s. b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lfp_exp\n     (\\<lambda>Q s.\n         \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n         \\<guillemotleft> \\<N> G \\<guillemotright> s *\n         P s) \\<tturnstile> \\<lambda>s. b", "proof(intro lfp_exp_lowerbound le_funI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (\\<lambda>s. b) x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> b\n 2. sound (\\<lambda>s. b)", "fix s::'s"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (\\<lambda>s. b) x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> b\n 2. sound (\\<lambda>s. b)", "from bP nP"], ["proof (chain)\npicking this:\n  bounded_by b P\n  nneg P", "have nnb: \"0 \\<le> b\""], ["proof (prove)\nusing this:\n  bounded_by b P\n  nneg P\n\ngoal (1 subgoal):\n 1. 0 \\<le> b", "by(auto)"], ["proof (state)\nthis:\n  0 \\<le> b\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (\\<lambda>s. b) x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> b\n 2. sound (\\<lambda>s. b)", "hence \"sound (\\<lambda>s. b)\" \"bounded_by b (\\<lambda>s. b)\""], ["proof (prove)\nusing this:\n  0 \\<le> b\n\ngoal (1 subgoal):\n 1. sound (\\<lambda>s. b) &&& bounded_by b (\\<lambda>s. b)", "by(auto)"], ["proof (state)\nthis:\n  sound (\\<lambda>s. b)\n  bounded_by b (\\<lambda>s. b)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (\\<lambda>s. b) x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> b\n 2. sound (\\<lambda>s. b)", "with hwp"], ["proof (chain)\npicking this:\n  healthy (wp body)\n  sound (\\<lambda>s. b)\n  bounded_by b (\\<lambda>s. b)", "have \"bounded_by b (wp body (\\<lambda>s. b))\""], ["proof (prove)\nusing this:\n  healthy (wp body)\n  sound (\\<lambda>s. b)\n  bounded_by b (\\<lambda>s. b)\n\ngoal (1 subgoal):\n 1. bounded_by b (wp body (\\<lambda>s. b))", "by(auto)"], ["proof (state)\nthis:\n  bounded_by b (wp body (\\<lambda>s. b))\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (\\<lambda>s. b) x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> b\n 2. sound (\\<lambda>s. b)", "with bP"], ["proof (chain)\npicking this:\n  bounded_by b P\n  bounded_by b (wp body (\\<lambda>s. b))", "have \"wp body (\\<lambda>s. b) s \\<le> b\" \"P s \\<le> b\""], ["proof (prove)\nusing this:\n  bounded_by b P\n  bounded_by b (wp body (\\<lambda>s. b))\n\ngoal (1 subgoal):\n 1. wp body (\\<lambda>s. b) s \\<le> b &&& P s \\<le> b", "by(auto)"], ["proof (state)\nthis:\n  wp body (\\<lambda>s. b) s \\<le> b\n  P s \\<le> b\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (\\<lambda>s. b) x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> b\n 2. sound (\\<lambda>s. b)", "hence \"\\<guillemotleft>G\\<guillemotright> s * wp body (\\<lambda>s. b) s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s \\<le> \\<guillemotleft>G\\<guillemotright> s * b + \\<guillemotleft>\\<N> G\\<guillemotright> s * b\""], ["proof (prove)\nusing this:\n  wp body (\\<lambda>s. b) s \\<le> b\n  P s \\<le> b\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wp body (\\<lambda>s. b) s +\n    \\<guillemotleft> \\<N> G \\<guillemotright> s * P s\n    \\<le> \\<guillemotleft> G \\<guillemotright> s * b +\n          \\<guillemotleft> \\<N> G \\<guillemotright> s * b", "by(auto intro:add_mono mult_left_mono)"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wp body (\\<lambda>s. b) s +\n  \\<guillemotleft> \\<N> G \\<guillemotright> s * P s\n  \\<le> \\<guillemotleft> G \\<guillemotright> s * b +\n        \\<guillemotleft> \\<N> G \\<guillemotright> s * b\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (\\<lambda>s. b) x +\n       \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n       \\<le> b\n 2. sound (\\<lambda>s. b)", "thus \"\\<guillemotleft>G\\<guillemotright> s * wp body (\\<lambda>s. b) s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s \\<le> b\""], ["proof (prove)\nusing this:\n  \\<guillemotleft> G \\<guillemotright> s * wp body (\\<lambda>s. b) s +\n  \\<guillemotleft> \\<N> G \\<guillemotright> s * P s\n  \\<le> \\<guillemotleft> G \\<guillemotright> s * b +\n        \\<guillemotleft> \\<N> G \\<guillemotright> s * b\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wp body (\\<lambda>s. b) s +\n    \\<guillemotleft> \\<N> G \\<guillemotright> s * P s\n    \\<le> b", "by(simp add:negate_embed algebra_simps)"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wp body (\\<lambda>s. b) s +\n  \\<guillemotleft> \\<N> G \\<guillemotright> s * P s\n  \\<le> b\n\ngoal (1 subgoal):\n 1. sound (\\<lambda>s. b)", "from nnb"], ["proof (chain)\npicking this:\n  0 \\<le> b", "show \"sound (\\<lambda>s. b)\""], ["proof (prove)\nusing this:\n  0 \\<le> b\n\ngoal (1 subgoal):\n 1. sound (\\<lambda>s. b)", "by(auto)"], ["proof (state)\nthis:\n  sound (\\<lambda>s. b)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  lfp_exp\n   (\\<lambda>Q s.\n       \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n       \\<guillemotleft> \\<N> G \\<guillemotright> s *\n       P s) \\<tturnstile> \\<lambda>s. b\n\ngoal (1 subgoal):\n 1. \\<And>b P.\n       \\<lbrakk>bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> \\<lambda>s.\n                            0 \\<tturnstile> lfp_exp\n       (\\<lambda>Q s.\n           \\<guillemotleft> G \\<guillemotright> s * wp body Q s +\n           \\<guillemotleft> \\<N> G \\<guillemotright> s * P s)", "from hwp sP"], ["proof (chain)\npicking this:\n  healthy (wp body)\n  sound P", "show \"\\<lambda>s. 0 \\<tturnstile> lfp_exp (\\<lambda>Q s. \\<guillemotleft> G \\<guillemotright> s * wp body Q s + \\<guillemotleft> \\<N> G \\<guillemotright> s * P s)\""], ["proof (prove)\nusing this:\n  healthy (wp body)\n  sound P\n\ngoal (1 subgoal):\n 1. \\<lambda>s.\n       0 \\<tturnstile> lfp_exp\n                        (\\<lambda>Q s.\n                            \\<guillemotleft> G \\<guillemotright> s *\n                            wp body Q s +\n                            \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                            P s)", "by(blast intro!:lfp_exp_greatest lfp_loop_fp)"], ["proof (state)\nthis:\n  \\<lambda>s.\n     0 \\<tturnstile> lfp_exp\n                      (\\<lambda>Q s.\n                          \\<guillemotleft> G \\<guillemotright> s *\n                          wp body Q s +\n                          \\<guillemotleft> \\<N> G \\<guillemotright> s * P s)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  feasible\n   (lfp_trans\n     (\\<lambda>a.\n         wp (body ;;\n             Embed\n              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n\ngoal (1 subgoal):\n 1. P (lfp_trans\n        (\\<lambda>x.\n            wp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n     (gfp_trans\n       (\\<lambda>x.\n           wlp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "have unitary_gfp:\n    \"\\<And>P. unitary P \\<Longrightarrow> unitary (gfp_trans ?Y P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>P.\n       unitary P \\<Longrightarrow>\n       unitary\n        (gfp_trans\n          (\\<lambda>a.\n              wlp (body ;;\n                   Embed\n                    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n          P)", "proof(intro unitaryI2 nnegI2 bounded_byI2,\n      simp_all add:wlp_Loop1[simplified wp_eval] hwlp)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P.\n       unitary P \\<Longrightarrow>\n       \\<lambda>s.\n          0 \\<tturnstile> gfp_exp\n                           (\\<lambda>Q s.\n                               \\<guillemotleft> G \\<guillemotright> s *\n                               wlp body Q s +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                               P s)\n 2. \\<And>P.\n       unitary P \\<Longrightarrow>\n       gfp_exp\n        (\\<lambda>Q s.\n            \\<guillemotleft> G \\<guillemotright> s * wlp body Q s +\n            \\<guillemotleft> \\<N> G \\<guillemotright> s *\n            P s) \\<tturnstile> \\<lambda>s. 1", "fix P::\"'s expect\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P.\n       unitary P \\<Longrightarrow>\n       \\<lambda>s.\n          0 \\<tturnstile> gfp_exp\n                           (\\<lambda>Q s.\n                               \\<guillemotleft> G \\<guillemotright> s *\n                               wlp body Q s +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                               P s)\n 2. \\<And>P.\n       unitary P \\<Longrightarrow>\n       gfp_exp\n        (\\<lambda>Q s.\n            \\<guillemotleft> G \\<guillemotright> s * wlp body Q s +\n            \\<guillemotleft> \\<N> G \\<guillemotright> s *\n            P s) \\<tturnstile> \\<lambda>s. 1", "assume uP: \"unitary P\""], ["proof (state)\nthis:\n  unitary P\n\ngoal (2 subgoals):\n 1. \\<And>P.\n       unitary P \\<Longrightarrow>\n       \\<lambda>s.\n          0 \\<tturnstile> gfp_exp\n                           (\\<lambda>Q s.\n                               \\<guillemotleft> G \\<guillemotright> s *\n                               wlp body Q s +\n                               \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                               P s)\n 2. \\<And>P.\n       unitary P \\<Longrightarrow>\n       gfp_exp\n        (\\<lambda>Q s.\n            \\<guillemotleft> G \\<guillemotright> s * wlp body Q s +\n            \\<guillemotleft> \\<N> G \\<guillemotright> s *\n            P s) \\<tturnstile> \\<lambda>s. 1", "show \"\\<lambda>s. 0 \\<tturnstile> gfp_exp (\\<lambda>Q s. \\<guillemotleft> G \\<guillemotright> s * wlp body Q s + \\<guillemotleft> \\<N> G \\<guillemotright> s * P s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lambda>s.\n       0 \\<tturnstile> gfp_exp\n                        (\\<lambda>Q s.\n                            \\<guillemotleft> G \\<guillemotright> s *\n                            wlp body Q s +\n                            \\<guillemotleft> \\<N> G \\<guillemotright> s *\n                            P s)", "proof(rule gfp_exp_upperbound[OF le_funI])"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       0 \\<le> \\<guillemotleft> G \\<guillemotright> x *\n               wlp body (\\<lambda>s. 0) x +\n               \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n 2. unitary (\\<lambda>s. 0)", "fix s::\"'s\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       0 \\<le> \\<guillemotleft> G \\<guillemotright> x *\n               wlp body (\\<lambda>s. 0) x +\n               \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n 2. unitary (\\<lambda>s. 0)", "from hwlp uP"], ["proof (chain)\npicking this:\n  nearly_healthy (wlp body)\n  unitary P", "have \"0 \\<le> wlp body (\\<lambda>s. 0) s\" \"0 \\<le> P s\""], ["proof (prove)\nusing this:\n  nearly_healthy (wlp body)\n  unitary P\n\ngoal (1 subgoal):\n 1. 0 \\<le> wlp body (\\<lambda>s. 0) s &&& 0 \\<le> P s", "by(auto dest!:unitary_sound)"], ["proof (state)\nthis:\n  0 \\<le> wlp body (\\<lambda>s. 0) s\n  0 \\<le> P s\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       0 \\<le> \\<guillemotleft> G \\<guillemotright> x *\n               wlp body (\\<lambda>s. 0) x +\n               \\<guillemotleft> \\<N> G \\<guillemotright> x * P x\n 2. unitary (\\<lambda>s. 0)", "thus \"0 \\<le> \\<guillemotleft>G\\<guillemotright> s * wlp body (\\<lambda>s. 0) s + \\<guillemotleft>\\<N> G\\<guillemotright> s * P s\""], ["proof (prove)\nusing this:\n  0 \\<le> wlp body (\\<lambda>s. 0) s\n  0 \\<le> P s\n\ngoal (1 subgoal):\n 1. 0 \\<le> \\<guillemotleft> G \\<guillemotright> s *\n            wlp body (\\<lambda>s. 0) s +\n            \\<guillemotleft> \\<N> G \\<guillemotright> s * P s", "by(auto intro:add_nonneg_nonneg mult_nonneg_nonneg)"], ["proof (state)\nthis:\n  0 \\<le> \\<guillemotleft> G \\<guillemotright> s *\n          wlp body (\\<lambda>s. 0) s +\n          \\<guillemotleft> \\<N> G \\<guillemotright> s * P s\n\ngoal (1 subgoal):\n 1. unitary (\\<lambda>s. 0)", "show \"unitary (\\<lambda>s. 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. unitary (\\<lambda>s. 0)", "by(auto)"], ["proof (state)\nthis:\n  unitary (\\<lambda>s. 0)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lambda>s.\n     0 \\<tturnstile> gfp_exp\n                      (\\<lambda>Q s.\n                          \\<guillemotleft> G \\<guillemotright> s *\n                          wlp body Q s +\n                          \\<guillemotleft> \\<N> G \\<guillemotright> s * P s)\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       unitary P \\<Longrightarrow>\n       gfp_exp\n        (\\<lambda>Q s.\n            \\<guillemotleft> G \\<guillemotright> s * wlp body Q s +\n            \\<guillemotleft> \\<N> G \\<guillemotright> s *\n            P s) \\<tturnstile> \\<lambda>s. 1", "show \"gfp_exp (\\<lambda>Q s. \\<guillemotleft> G \\<guillemotright> s * wlp body Q s + \\<guillemotleft> \\<N> G \\<guillemotright> s * P s) \\<tturnstile> \\<lambda>s. 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gfp_exp\n     (\\<lambda>Q s.\n         \\<guillemotleft> G \\<guillemotright> s * wlp body Q s +\n         \\<guillemotleft> \\<N> G \\<guillemotright> s *\n         P s) \\<tturnstile> \\<lambda>s. 1", "by(auto intro:gfp_exp_least)"], ["proof (state)\nthis:\n  gfp_exp\n   (\\<lambda>Q s.\n       \\<guillemotleft> G \\<guillemotright> s * wlp body Q s +\n       \\<guillemotleft> \\<N> G \\<guillemotright> s *\n       P s) \\<tturnstile> \\<lambda>s. 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  unitary ?P \\<Longrightarrow>\n  unitary\n   (gfp_trans\n     (\\<lambda>a.\n         wlp (body ;;\n              Embed\n               a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     ?P)\n\ngoal (1 subgoal):\n 1. P (lfp_trans\n        (\\<lambda>x.\n            wp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n     (gfp_trans\n       (\\<lambda>x.\n           wlp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "have fX:\n    \"\\<And>t. feasible t \\<Longrightarrow> feasible (?X t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t.\n       feasible t \\<Longrightarrow>\n       feasible\n        (wp (body ;;\n             Embed\n              t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "proof(intro feasibleI nnegI bounded_byI, simp_all add:wp_eval)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t b P x.\n       \\<lbrakk>feasible t; bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wp body (t P) x +\n                         (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n                         \\<le> b\n 2. \\<And>t b P x.\n       \\<lbrakk>feasible t; bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                                 wp body (t P) x +\n                                 (1 -\n                                  \\<guillemotleft> G \\<guillemotright> x) *\n                                 P x", "fix t::\"'s trans\" and Q::\"'s expect\" and b::real and s::'s"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t b P x.\n       \\<lbrakk>feasible t; bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wp body (t P) x +\n                         (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n                         \\<le> b\n 2. \\<And>t b P x.\n       \\<lbrakk>feasible t; bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                                 wp body (t P) x +\n                                 (1 -\n                                  \\<guillemotleft> G \\<guillemotright> x) *\n                                 P x", "assume ft: \"feasible t\" and bQ: \"bounded_by b Q\" and nQ: \"nneg Q\""], ["proof (state)\nthis:\n  feasible t\n  bounded_by b Q\n  nneg Q\n\ngoal (2 subgoals):\n 1. \\<And>t b P x.\n       \\<lbrakk>feasible t; bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wp body (t P) x +\n                         (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n                         \\<le> b\n 2. \\<And>t b P x.\n       \\<lbrakk>feasible t; bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                                 wp body (t P) x +\n                                 (1 -\n                                  \\<guillemotleft> G \\<guillemotright> x) *\n                                 P x", "hence \"nneg (t Q)\" \"bounded_by b (t Q)\""], ["proof (prove)\nusing this:\n  feasible t\n  bounded_by b Q\n  nneg Q\n\ngoal (1 subgoal):\n 1. nneg (t Q) &&& bounded_by b (t Q)", "by(auto)"], ["proof (state)\nthis:\n  nneg (t Q)\n  bounded_by b (t Q)\n\ngoal (2 subgoals):\n 1. \\<And>t b P x.\n       \\<lbrakk>feasible t; bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wp body (t P) x +\n                         (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n                         \\<le> b\n 2. \\<And>t b P x.\n       \\<lbrakk>feasible t; bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                                 wp body (t P) x +\n                                 (1 -\n                                  \\<guillemotleft> G \\<guillemotright> x) *\n                                 P x", "moreover"], ["proof (state)\nthis:\n  nneg (t Q)\n  bounded_by b (t Q)\n\ngoal (2 subgoals):\n 1. \\<And>t b P x.\n       \\<lbrakk>feasible t; bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wp body (t P) x +\n                         (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n                         \\<le> b\n 2. \\<And>t b P x.\n       \\<lbrakk>feasible t; bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                                 wp body (t P) x +\n                                 (1 -\n                                  \\<guillemotleft> G \\<guillemotright> x) *\n                                 P x", "hence stQ: \"sound (t Q)\""], ["proof (prove)\nusing this:\n  nneg (t Q)\n  bounded_by b (t Q)\n\ngoal (1 subgoal):\n 1. sound (t Q)", "by(auto)"], ["proof (state)\nthis:\n  sound (t Q)\n\ngoal (2 subgoals):\n 1. \\<And>t b P x.\n       \\<lbrakk>feasible t; bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wp body (t P) x +\n                         (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n                         \\<le> b\n 2. \\<And>t b P x.\n       \\<lbrakk>feasible t; bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                                 wp body (t P) x +\n                                 (1 -\n                                  \\<guillemotleft> G \\<guillemotright> x) *\n                                 P x", "ultimately"], ["proof (chain)\npicking this:\n  nneg (t Q)\n  bounded_by b (t Q)\n  sound (t Q)", "have \"wp body (t Q) s \\<le> b\""], ["proof (prove)\nusing this:\n  nneg (t Q)\n  bounded_by b (t Q)\n  sound (t Q)\n\ngoal (1 subgoal):\n 1. wp body (t Q) s \\<le> b", "using hwp"], ["proof (prove)\nusing this:\n  nneg (t Q)\n  bounded_by b (t Q)\n  sound (t Q)\n  healthy (wp body)\n\ngoal (1 subgoal):\n 1. wp body (t Q) s \\<le> b", "by(auto)"], ["proof (state)\nthis:\n  wp body (t Q) s \\<le> b\n\ngoal (2 subgoals):\n 1. \\<And>t b P x.\n       \\<lbrakk>feasible t; bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wp body (t P) x +\n                         (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n                         \\<le> b\n 2. \\<And>t b P x.\n       \\<lbrakk>feasible t; bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                                 wp body (t P) x +\n                                 (1 -\n                                  \\<guillemotleft> G \\<guillemotright> x) *\n                                 P x", "moreover"], ["proof (state)\nthis:\n  wp body (t Q) s \\<le> b\n\ngoal (2 subgoals):\n 1. \\<And>t b P x.\n       \\<lbrakk>feasible t; bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wp body (t P) x +\n                         (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n                         \\<le> b\n 2. \\<And>t b P x.\n       \\<lbrakk>feasible t; bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                                 wp body (t P) x +\n                                 (1 -\n                                  \\<guillemotleft> G \\<guillemotright> x) *\n                                 P x", "from bQ"], ["proof (chain)\npicking this:\n  bounded_by b Q", "have \"Q s \\<le> b\""], ["proof (prove)\nusing this:\n  bounded_by b Q\n\ngoal (1 subgoal):\n 1. Q s \\<le> b", "by(auto)"], ["proof (state)\nthis:\n  Q s \\<le> b\n\ngoal (2 subgoals):\n 1. \\<And>t b P x.\n       \\<lbrakk>feasible t; bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wp body (t P) x +\n                         (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n                         \\<le> b\n 2. \\<And>t b P x.\n       \\<lbrakk>feasible t; bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                                 wp body (t P) x +\n                                 (1 -\n                                  \\<guillemotleft> G \\<guillemotright> x) *\n                                 P x", "ultimately"], ["proof (chain)\npicking this:\n  wp body (t Q) s \\<le> b\n  Q s \\<le> b", "have \"\\<guillemotleft>G\\<guillemotright> s * wp body (t Q) s + (1 - \\<guillemotleft>G\\<guillemotright> s) * Q s \\<le>\n                     \\<guillemotleft>G\\<guillemotright> s * b + (1 - \\<guillemotleft> G \\<guillemotright> s) * b\""], ["proof (prove)\nusing this:\n  wp body (t Q) s \\<le> b\n  Q s \\<le> b\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wp body (t Q) s +\n    (1 - \\<guillemotleft> G \\<guillemotright> s) * Q s\n    \\<le> \\<guillemotleft> G \\<guillemotright> s * b +\n          (1 - \\<guillemotleft> G \\<guillemotright> s) * b", "by(auto intro:add_mono mult_left_mono)"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wp body (t Q) s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * Q s\n  \\<le> \\<guillemotleft> G \\<guillemotright> s * b +\n        (1 - \\<guillemotleft> G \\<guillemotright> s) * b\n\ngoal (2 subgoals):\n 1. \\<And>t b P x.\n       \\<lbrakk>feasible t; bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wp body (t P) x +\n                         (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n                         \\<le> b\n 2. \\<And>t b P x.\n       \\<lbrakk>feasible t; bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                                 wp body (t P) x +\n                                 (1 -\n                                  \\<guillemotleft> G \\<guillemotright> x) *\n                                 P x", "thus \"\\<guillemotleft>G\\<guillemotright> s * wp body (t Q) s + (1 - \\<guillemotleft>G\\<guillemotright> s) * Q s \\<le> b\""], ["proof (prove)\nusing this:\n  \\<guillemotleft> G \\<guillemotright> s * wp body (t Q) s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * Q s\n  \\<le> \\<guillemotleft> G \\<guillemotright> s * b +\n        (1 - \\<guillemotleft> G \\<guillemotright> s) * b\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wp body (t Q) s +\n    (1 - \\<guillemotleft> G \\<guillemotright> s) * Q s\n    \\<le> b", "by(simp add:algebra_simps)"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wp body (t Q) s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * Q s\n  \\<le> b\n\ngoal (1 subgoal):\n 1. \\<And>t b P x.\n       \\<lbrakk>feasible t; bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                                 wp body (t P) x +\n                                 (1 -\n                                  \\<guillemotleft> G \\<guillemotright> x) *\n                                 P x", "from nQ stQ hwp"], ["proof (chain)\npicking this:\n  nneg Q\n  sound (t Q)\n  healthy (wp body)", "have \"0 \\<le> wp body (t Q) s\" \"0 \\<le> Q s\""], ["proof (prove)\nusing this:\n  nneg Q\n  sound (t Q)\n  healthy (wp body)\n\ngoal (1 subgoal):\n 1. 0 \\<le> wp body (t Q) s &&& 0 \\<le> Q s", "by(auto)"], ["proof (state)\nthis:\n  0 \\<le> wp body (t Q) s\n  0 \\<le> Q s\n\ngoal (1 subgoal):\n 1. \\<And>t b P x.\n       \\<lbrakk>feasible t; bounded_by b P; nneg P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                                 wp body (t P) x +\n                                 (1 -\n                                  \\<guillemotleft> G \\<guillemotright> x) *\n                                 P x", "thus \"0 \\<le> \\<guillemotleft>G\\<guillemotright> s * wp body (t Q) s + (1 - \\<guillemotleft>G\\<guillemotright> s) * Q s\""], ["proof (prove)\nusing this:\n  0 \\<le> wp body (t Q) s\n  0 \\<le> Q s\n\ngoal (1 subgoal):\n 1. 0 \\<le> \\<guillemotleft> G \\<guillemotright> s * wp body (t Q) s +\n            (1 - \\<guillemotleft> G \\<guillemotright> s) * Q s", "by(auto intro:add_nonneg_nonneg mult_nonneg_nonneg)"], ["proof (state)\nthis:\n  0 \\<le> \\<guillemotleft> G \\<guillemotright> s * wp body (t Q) s +\n          (1 - \\<guillemotleft> G \\<guillemotright> s) * Q s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  feasible ?t \\<Longrightarrow>\n  feasible\n   (wp (body ;;\n        Embed\n         ?t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal (1 subgoal):\n 1. P (lfp_trans\n        (\\<lambda>x.\n            wp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n     (gfp_trans\n       (\\<lambda>x.\n           wlp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "have uY:\n    \"\\<And>t P. (\\<And>P. unitary P \\<Longrightarrow> unitary (t P)) \\<Longrightarrow> unitary P \\<Longrightarrow> unitary (?Y t P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t P.\n       \\<lbrakk>\\<And>P. unitary P \\<Longrightarrow> unitary (t P);\n        unitary P\\<rbrakk>\n       \\<Longrightarrow> unitary\n                          (wlp (body ;;\n                                Embed\n                                 t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                            P)", "proof(intro unitaryI2 nnegI bounded_byI, simp_all add:wp_eval)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t P x.\n       \\<lbrakk>\\<And>P. unitary P \\<Longrightarrow> unitary (t P);\n        unitary P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                                 wlp body (t P) x +\n                                 (1 -\n                                  \\<guillemotleft> G \\<guillemotright> x) *\n                                 P x\n 2. \\<And>t P x.\n       \\<lbrakk>\\<And>P. unitary P \\<Longrightarrow> unitary (t P);\n        unitary P\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wlp body (t P) x +\n                         (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n                         \\<le> 1", "fix t::\"'s trans\" and P::\"'s expect\" and s::'s"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t P x.\n       \\<lbrakk>\\<And>P. unitary P \\<Longrightarrow> unitary (t P);\n        unitary P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                                 wlp body (t P) x +\n                                 (1 -\n                                  \\<guillemotleft> G \\<guillemotright> x) *\n                                 P x\n 2. \\<And>t P x.\n       \\<lbrakk>\\<And>P. unitary P \\<Longrightarrow> unitary (t P);\n        unitary P\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wlp body (t P) x +\n                         (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n                         \\<le> 1", "assume ut: \"\\<And>P. unitary P \\<Longrightarrow> unitary (t P)\"\n       and uP: \"unitary P\""], ["proof (state)\nthis:\n  unitary ?P \\<Longrightarrow> unitary (t ?P)\n  unitary P\n\ngoal (2 subgoals):\n 1. \\<And>t P x.\n       \\<lbrakk>\\<And>P. unitary P \\<Longrightarrow> unitary (t P);\n        unitary P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                                 wlp body (t P) x +\n                                 (1 -\n                                  \\<guillemotleft> G \\<guillemotright> x) *\n                                 P x\n 2. \\<And>t P x.\n       \\<lbrakk>\\<And>P. unitary P \\<Longrightarrow> unitary (t P);\n        unitary P\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wlp body (t P) x +\n                         (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n                         \\<le> 1", "hence utP: \"unitary (t P)\""], ["proof (prove)\nusing this:\n  unitary ?P \\<Longrightarrow> unitary (t ?P)\n  unitary P\n\ngoal (1 subgoal):\n 1. unitary (t P)", "by(auto)"], ["proof (state)\nthis:\n  unitary (t P)\n\ngoal (2 subgoals):\n 1. \\<And>t P x.\n       \\<lbrakk>\\<And>P. unitary P \\<Longrightarrow> unitary (t P);\n        unitary P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                                 wlp body (t P) x +\n                                 (1 -\n                                  \\<guillemotleft> G \\<guillemotright> x) *\n                                 P x\n 2. \\<And>t P x.\n       \\<lbrakk>\\<And>P. unitary P \\<Longrightarrow> unitary (t P);\n        unitary P\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wlp body (t P) x +\n                         (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n                         \\<le> 1", "with hwlp"], ["proof (chain)\npicking this:\n  nearly_healthy (wlp body)\n  unitary (t P)", "have ubtP: \"unitary (wlp body (t P))\""], ["proof (prove)\nusing this:\n  nearly_healthy (wlp body)\n  unitary (t P)\n\ngoal (1 subgoal):\n 1. unitary (wlp body (t P))", "by(auto)"], ["proof (state)\nthis:\n  unitary (wlp body (t P))\n\ngoal (2 subgoals):\n 1. \\<And>t P x.\n       \\<lbrakk>\\<And>P. unitary P \\<Longrightarrow> unitary (t P);\n        unitary P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                                 wlp body (t P) x +\n                                 (1 -\n                                  \\<guillemotleft> G \\<guillemotright> x) *\n                                 P x\n 2. \\<And>t P x.\n       \\<lbrakk>\\<And>P. unitary P \\<Longrightarrow> unitary (t P);\n        unitary P\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wlp body (t P) x +\n                         (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n                         \\<le> 1", "with uP"], ["proof (chain)\npicking this:\n  unitary P\n  unitary (wlp body (t P))", "have \"0 \\<le> P s\" \"0 \\<le> wlp body (t P) s\""], ["proof (prove)\nusing this:\n  unitary P\n  unitary (wlp body (t P))\n\ngoal (1 subgoal):\n 1. 0 \\<le> P s &&& 0 \\<le> wlp body (t P) s", "by(auto)"], ["proof (state)\nthis:\n  0 \\<le> P s\n  0 \\<le> wlp body (t P) s\n\ngoal (2 subgoals):\n 1. \\<And>t P x.\n       \\<lbrakk>\\<And>P. unitary P \\<Longrightarrow> unitary (t P);\n        unitary P\\<rbrakk>\n       \\<Longrightarrow> 0 \\<le> \\<guillemotleft> G \\<guillemotright> x *\n                                 wlp body (t P) x +\n                                 (1 -\n                                  \\<guillemotleft> G \\<guillemotright> x) *\n                                 P x\n 2. \\<And>t P x.\n       \\<lbrakk>\\<And>P. unitary P \\<Longrightarrow> unitary (t P);\n        unitary P\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wlp body (t P) x +\n                         (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n                         \\<le> 1", "thus \"0 \\<le> \\<guillemotleft>G\\<guillemotright> s * wlp body (t P) s + (1-\\<guillemotleft>G\\<guillemotright> s) * P s\""], ["proof (prove)\nusing this:\n  0 \\<le> P s\n  0 \\<le> wlp body (t P) s\n\ngoal (1 subgoal):\n 1. 0 \\<le> \\<guillemotleft> G \\<guillemotright> s * wlp body (t P) s +\n            (1 - \\<guillemotleft> G \\<guillemotright> s) * P s", "by(auto intro:add_nonneg_nonneg mult_nonneg_nonneg)"], ["proof (state)\nthis:\n  0 \\<le> \\<guillemotleft> G \\<guillemotright> s * wlp body (t P) s +\n          (1 - \\<guillemotleft> G \\<guillemotright> s) * P s\n\ngoal (1 subgoal):\n 1. \\<And>t P x.\n       \\<lbrakk>\\<And>P. unitary P \\<Longrightarrow> unitary (t P);\n        unitary P\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wlp body (t P) x +\n                         (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n                         \\<le> 1", "from uP ubtP"], ["proof (chain)\npicking this:\n  unitary P\n  unitary (wlp body (t P))", "have \"P s \\<le> 1\" \"wlp body (t P) s \\<le> 1\""], ["proof (prove)\nusing this:\n  unitary P\n  unitary (wlp body (t P))\n\ngoal (1 subgoal):\n 1. P s \\<le> 1 &&& wlp body (t P) s \\<le> 1", "by(auto)"], ["proof (state)\nthis:\n  P s \\<le> 1\n  wlp body (t P) s \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<And>t P x.\n       \\<lbrakk>\\<And>P. unitary P \\<Longrightarrow> unitary (t P);\n        unitary P\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wlp body (t P) x +\n                         (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n                         \\<le> 1", "hence \"\\<guillemotleft>G\\<guillemotright> s * wlp body (t P) s + (1-\\<guillemotleft>G\\<guillemotright> s) * P s \\<le> \\<guillemotleft>G\\<guillemotright> s * 1 + (1-\\<guillemotleft>G\\<guillemotright> s) * 1\""], ["proof (prove)\nusing this:\n  P s \\<le> 1\n  wlp body (t P) s \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wlp body (t P) s +\n    (1 - \\<guillemotleft> G \\<guillemotright> s) * P s\n    \\<le> \\<guillemotleft> G \\<guillemotright> s * 1 +\n          (1 - \\<guillemotleft> G \\<guillemotright> s) * 1", "by(blast intro:add_mono mult_left_mono)"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wlp body (t P) s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * P s\n  \\<le> \\<guillemotleft> G \\<guillemotright> s * 1 +\n        (1 - \\<guillemotleft> G \\<guillemotright> s) * 1\n\ngoal (1 subgoal):\n 1. \\<And>t P x.\n       \\<lbrakk>\\<And>P. unitary P \\<Longrightarrow> unitary (t P);\n        unitary P\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wlp body (t P) x +\n                         (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n                         \\<le> 1", "also"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wlp body (t P) s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * P s\n  \\<le> \\<guillemotleft> G \\<guillemotright> s * 1 +\n        (1 - \\<guillemotleft> G \\<guillemotright> s) * 1\n\ngoal (1 subgoal):\n 1. \\<And>t P x.\n       \\<lbrakk>\\<And>P. unitary P \\<Longrightarrow> unitary (t P);\n        unitary P\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wlp body (t P) x +\n                         (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n                         \\<le> 1", "have \"... = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * 1 +\n    (1 - \\<guillemotleft> G \\<guillemotright> s) * 1 =\n    1", "by(simp add:algebra_simps)"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * 1 +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * 1 =\n  1\n\ngoal (1 subgoal):\n 1. \\<And>t P x.\n       \\<lbrakk>\\<And>P. unitary P \\<Longrightarrow> unitary (t P);\n        unitary P\\<rbrakk>\n       \\<Longrightarrow> \\<guillemotleft> G \\<guillemotright> x *\n                         wlp body (t P) x +\n                         (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n                         \\<le> 1", "finally"], ["proof (chain)\npicking this:\n  \\<guillemotleft> G \\<guillemotright> s * wlp body (t P) s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * P s\n  \\<le> 1", "show \"\\<guillemotleft>G\\<guillemotright> s * wlp body (t P) s + (1-\\<guillemotleft>G\\<guillemotright> s) * P s \\<le> 1\""], ["proof (prove)\nusing this:\n  \\<guillemotleft> G \\<guillemotright> s * wlp body (t P) s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * P s\n  \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wlp body (t P) s +\n    (1 - \\<guillemotleft> G \\<guillemotright> s) * P s\n    \\<le> 1", "."], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wlp body (t P) s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * P s\n  \\<le> 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>P. unitary P \\<Longrightarrow> unitary (?t P);\n   unitary ?P\\<rbrakk>\n  \\<Longrightarrow> unitary\n                     (wlp (body ;;\n                           Embed\n                            ?t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                       ?P)\n\ngoal (1 subgoal):\n 1. P (lfp_trans\n        (\\<lambda>x.\n            wp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n     (gfp_trans\n       (\\<lambda>x.\n           wlp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "have fw_lfp: \"le_trans (Sup_trans (fst ` ?M)) (lfp_trans ?X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. le_trans\n     (Sup_trans\n       (fst `\n        {x. P (fst x) (snd x) \\<and>\n            feasible (fst x) \\<and>\n            (\\<forall>Q.\n                unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n            le_trans (fst x)\n             (lfp_trans\n               (\\<lambda>a.\n                   wp (body ;;\n                       Embed\n                        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n            le_utrans\n             (gfp_trans\n               (\\<lambda>a.\n                   wlp (body ;;\n                        Embed\n                         a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n             (snd x)}))\n     (lfp_trans\n       (\\<lambda>a.\n           wp (body ;;\n               Embed\n                a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "using feasible_nnegD[OF feasible_lfp_loop]"], ["proof (prove)\nusing this:\n  \\<lbrakk>bounded_by ?b ?P; nneg ?P\\<rbrakk>\n  \\<Longrightarrow> nneg\n                     (lfp_trans\n                       (\\<lambda>a.\n                           wp (body ;;\n                               Embed\n                                a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                       ?P)\n\ngoal (1 subgoal):\n 1. le_trans\n     (Sup_trans\n       (fst `\n        {x. P (fst x) (snd x) \\<and>\n            feasible (fst x) \\<and>\n            (\\<forall>Q.\n                unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n            le_trans (fst x)\n             (lfp_trans\n               (\\<lambda>a.\n                   wp (body ;;\n                       Embed\n                        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n            le_utrans\n             (gfp_trans\n               (\\<lambda>a.\n                   wlp (body ;;\n                        Embed\n                         a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n             (snd x)}))\n     (lfp_trans\n       (\\<lambda>a.\n           wp (body ;;\n               Embed\n                a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "by(intro le_transI[OF Sup_trans_least2], blast+)"], ["proof (state)\nthis:\n  le_trans\n   (Sup_trans\n     (fst `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)}))\n   (lfp_trans\n     (\\<lambda>a.\n         wp (body ;;\n             Embed\n              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n\ngoal (1 subgoal):\n 1. P (lfp_trans\n        (\\<lambda>x.\n            wp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n     (gfp_trans\n       (\\<lambda>x.\n           wlp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "hence \"le_trans (?X (Sup_trans (fst ` ?M))) (?X (lfp_trans ?X))\""], ["proof (prove)\nusing this:\n  le_trans\n   (Sup_trans\n     (fst `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)}))\n   (lfp_trans\n     (\\<lambda>a.\n         wp (body ;;\n             Embed\n              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n\ngoal (1 subgoal):\n 1. le_trans\n     (wp (body ;;\n          Embed\n           (Sup_trans\n             (fst `\n              {x. P (fst x) (snd x) \\<and>\n                  feasible (fst x) \\<and>\n                  (\\<forall>Q.\n                      unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                  le_trans (fst x)\n                   (lfp_trans\n                     (\\<lambda>a.\n                         wp (body ;;\n                             Embed\n                              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                  le_utrans\n                   (gfp_trans\n                     (\\<lambda>a.\n                         wlp (body ;;\n                              Embed\n                               a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                   (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     (wp (body ;;\n          Embed\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "by(auto intro:wp_loop_mono feasible_sound[OF fSup]\n                  feasible_sound[OF feasible_lfp_loop])"], ["proof (state)\nthis:\n  le_trans\n   (wp (body ;;\n        Embed\n         (Sup_trans\n           (fst `\n            {x. P (fst x) (snd x) \\<and>\n                feasible (fst x) \\<and>\n                (\\<forall>Q.\n                    unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                le_trans (fst x)\n                 (lfp_trans\n                   (\\<lambda>a.\n                       wp (body ;;\n                           Embed\n                            a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                le_utrans\n                 (gfp_trans\n                   (\\<lambda>a.\n                       wlp (body ;;\n                            Embed\n                             a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                 (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n   (wp (body ;;\n        Embed\n         (lfp_trans\n           (\\<lambda>a.\n               wp (body ;;\n                   Embed\n                    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal (1 subgoal):\n 1. P (lfp_trans\n        (\\<lambda>x.\n            wp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n     (gfp_trans\n       (\\<lambda>x.\n           wlp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "also"], ["proof (state)\nthis:\n  le_trans\n   (wp (body ;;\n        Embed\n         (Sup_trans\n           (fst `\n            {x. P (fst x) (snd x) \\<and>\n                feasible (fst x) \\<and>\n                (\\<forall>Q.\n                    unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                le_trans (fst x)\n                 (lfp_trans\n                   (\\<lambda>a.\n                       wp (body ;;\n                           Embed\n                            a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                le_utrans\n                 (gfp_trans\n                   (\\<lambda>a.\n                       wlp (body ;;\n                            Embed\n                             a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                 (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n   (wp (body ;;\n        Embed\n         (lfp_trans\n           (\\<lambda>a.\n               wp (body ;;\n                   Embed\n                    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal (1 subgoal):\n 1. P (lfp_trans\n        (\\<lambda>x.\n            wp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n     (gfp_trans\n       (\\<lambda>x.\n           wlp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "have \"equiv_trans ... (lfp_trans ?X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. equiv_trans\n     (wp (body ;;\n          Embed\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     (lfp_trans\n       (\\<lambda>a.\n           wp (body ;;\n               Embed\n                a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "proof(rule iffD1[OF equiv_trans_comm, OF lfp_trans_unfold], iprover intro:wp_loop_mono)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>t P.\n       \\<lbrakk>\\<And>Q. sound Q \\<Longrightarrow> sound (t Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> sound\n                          (wp (body ;;\n                               Embed\n                                t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                            P)\n 2. le_trans\n     (wp (body ;;\n          Embed\n           ?v2 \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     ?v2\n 3. \\<And>P. sound P \\<Longrightarrow> sound (?v2 P)", "fix t::\"'s trans\" and P::\"'s expect\""], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>t P.\n       \\<lbrakk>\\<And>Q. sound Q \\<Longrightarrow> sound (t Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> sound\n                          (wp (body ;;\n                               Embed\n                                t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                            P)\n 2. le_trans\n     (wp (body ;;\n          Embed\n           ?v2 \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     ?v2\n 3. \\<And>P. sound P \\<Longrightarrow> sound (?v2 P)", "assume st: \"\\<And>Q. sound Q \\<Longrightarrow> sound (t Q)\"\n       and sP: \"sound P\""], ["proof (state)\nthis:\n  sound ?Q \\<Longrightarrow> sound (t ?Q)\n  sound P\n\ngoal (3 subgoals):\n 1. \\<And>t P.\n       \\<lbrakk>\\<And>Q. sound Q \\<Longrightarrow> sound (t Q);\n        sound P\\<rbrakk>\n       \\<Longrightarrow> sound\n                          (wp (body ;;\n                               Embed\n                                t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                            P)\n 2. le_trans\n     (wp (body ;;\n          Embed\n           ?v2 \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     ?v2\n 3. \\<And>P. sound P \\<Longrightarrow> sound (?v2 P)", "show \"sound (?X t P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sound\n     (wp (body ;;\n          Embed\n           t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n       P)", "proof(intro soundI2 bounded_byI nnegI, simp_all add:wp_eval)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n       \\<le> ?b\n 2. \\<And>x.\n       0 \\<le> \\<guillemotleft> G \\<guillemotright> x * wp body (t P) x +\n               (1 - \\<guillemotleft> G \\<guillemotright> x) * P x", "fix s::'s"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n       \\<le> ?b\n 2. \\<And>x.\n       0 \\<le> \\<guillemotleft> G \\<guillemotright> x * wp body (t P) x +\n               (1 - \\<guillemotleft> G \\<guillemotright> x) * P x", "from sP st hwp"], ["proof (chain)\npicking this:\n  sound P\n  sound ?Q \\<Longrightarrow> sound (t ?Q)\n  healthy (wp body)", "have \"0 \\<le> P s\" \"0 \\<le> wp body (t P) s\""], ["proof (prove)\nusing this:\n  sound P\n  sound ?Q \\<Longrightarrow> sound (t ?Q)\n  healthy (wp body)\n\ngoal (1 subgoal):\n 1. 0 \\<le> P s &&& 0 \\<le> wp body (t P) s", "by(auto)"], ["proof (state)\nthis:\n  0 \\<le> P s\n  0 \\<le> wp body (t P) s\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n       \\<le> ?b\n 2. \\<And>x.\n       0 \\<le> \\<guillemotleft> G \\<guillemotright> x * wp body (t P) x +\n               (1 - \\<guillemotleft> G \\<guillemotright> x) * P x", "thus \"0 \\<le> \\<guillemotleft>G\\<guillemotright> s * wp body (t P) s + (1 - \\<guillemotleft>G\\<guillemotright> s) * P s\""], ["proof (prove)\nusing this:\n  0 \\<le> P s\n  0 \\<le> wp body (t P) s\n\ngoal (1 subgoal):\n 1. 0 \\<le> \\<guillemotleft> G \\<guillemotright> s * wp body (t P) s +\n            (1 - \\<guillemotleft> G \\<guillemotright> s) * P s", "by(blast intro:add_nonneg_nonneg mult_nonneg_nonneg)"], ["proof (state)\nthis:\n  0 \\<le> \\<guillemotleft> G \\<guillemotright> s * wp body (t P) s +\n          (1 - \\<guillemotleft> G \\<guillemotright> s) * P s\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n       \\<le> ?b", "from sP st"], ["proof (chain)\npicking this:\n  sound P\n  sound ?Q \\<Longrightarrow> sound (t ?Q)", "have \"bounded_by (bound_of (t P)) (t P)\""], ["proof (prove)\nusing this:\n  sound P\n  sound ?Q \\<Longrightarrow> sound (t ?Q)\n\ngoal (1 subgoal):\n 1. bounded_by (bound_of (t P)) (t P)", "by(auto)"], ["proof (state)\nthis:\n  bounded_by (bound_of (t P)) (t P)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n       \\<le> ?b", "with sP st hwp"], ["proof (chain)\npicking this:\n  sound P\n  sound ?Q \\<Longrightarrow> sound (t ?Q)\n  healthy (wp body)\n  bounded_by (bound_of (t P)) (t P)", "have \"bounded_by (bound_of (t P)) (wp body (t P))\""], ["proof (prove)\nusing this:\n  sound P\n  sound ?Q \\<Longrightarrow> sound (t ?Q)\n  healthy (wp body)\n  bounded_by (bound_of (t P)) (t P)\n\ngoal (1 subgoal):\n 1. bounded_by (bound_of (t P)) (wp body (t P))", "by(auto)"], ["proof (state)\nthis:\n  bounded_by (bound_of (t P)) (wp body (t P))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n       \\<le> ?b", "hence \"wp body (t P) s \\<le> bound_of (t P)\""], ["proof (prove)\nusing this:\n  bounded_by (bound_of (t P)) (wp body (t P))\n\ngoal (1 subgoal):\n 1. wp body (t P) s \\<le> bound_of (t P)", "by(auto)"], ["proof (state)\nthis:\n  wp body (t P) s \\<le> bound_of (t P)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n       \\<le> ?b", "moreover"], ["proof (state)\nthis:\n  wp body (t P) s \\<le> bound_of (t P)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n       \\<le> ?b", "from sP st hwp"], ["proof (chain)\npicking this:\n  sound P\n  sound ?Q \\<Longrightarrow> sound (t ?Q)\n  healthy (wp body)", "have \"P s \\<le> bound_of P\""], ["proof (prove)\nusing this:\n  sound P\n  sound ?Q \\<Longrightarrow> sound (t ?Q)\n  healthy (wp body)\n\ngoal (1 subgoal):\n 1. P s \\<le> bound_of P", "by(auto)"], ["proof (state)\nthis:\n  P s \\<le> bound_of P\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n       \\<le> ?b", "moreover"], ["proof (state)\nthis:\n  P s \\<le> bound_of P\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n       \\<le> ?b", "have \"\\<guillemotleft>G\\<guillemotright> s \\<le> 1\" \"1 - \\<guillemotleft>G\\<guillemotright> s \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s \\<le> 1 &&&\n    1 - \\<guillemotleft> G \\<guillemotright> s \\<le> 1", "by(auto)"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s \\<le> 1\n  1 - \\<guillemotleft> G \\<guillemotright> s \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n       \\<le> ?b", "moreover"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s \\<le> 1\n  1 - \\<guillemotleft> G \\<guillemotright> s \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n       \\<le> ?b", "from sP st hwp"], ["proof (chain)\npicking this:\n  sound P\n  sound ?Q \\<Longrightarrow> sound (t ?Q)\n  healthy (wp body)", "have \"0 \\<le> wp body (t P) s\" \"0 \\<le> P s\""], ["proof (prove)\nusing this:\n  sound P\n  sound ?Q \\<Longrightarrow> sound (t ?Q)\n  healthy (wp body)\n\ngoal (1 subgoal):\n 1. 0 \\<le> wp body (t P) s &&& 0 \\<le> P s", "by(auto)"], ["proof (state)\nthis:\n  0 \\<le> wp body (t P) s\n  0 \\<le> P s\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n       \\<le> ?b", "moreover"], ["proof (state)\nthis:\n  0 \\<le> wp body (t P) s\n  0 \\<le> P s\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n       \\<le> ?b", "have \"(0::real) \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> 1", "by(simp)"], ["proof (state)\nthis:\n  0 \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t P) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * P x\n       \\<le> ?b", "ultimately"], ["proof (chain)\npicking this:\n  wp body (t P) s \\<le> bound_of (t P)\n  P s \\<le> bound_of P\n  \\<guillemotleft> G \\<guillemotright> s \\<le> 1\n  1 - \\<guillemotleft> G \\<guillemotright> s \\<le> 1\n  0 \\<le> wp body (t P) s\n  0 \\<le> P s\n  0 \\<le> 1", "show \"\\<guillemotleft>G\\<guillemotright> s * wp body (t P) s + (1 - \\<guillemotleft>G\\<guillemotright> s) * P s \\<le>\n                       1 * bound_of (t P) + 1 * bound_of P\""], ["proof (prove)\nusing this:\n  wp body (t P) s \\<le> bound_of (t P)\n  P s \\<le> bound_of P\n  \\<guillemotleft> G \\<guillemotright> s \\<le> 1\n  1 - \\<guillemotleft> G \\<guillemotright> s \\<le> 1\n  0 \\<le> wp body (t P) s\n  0 \\<le> P s\n  0 \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wp body (t P) s +\n    (1 - \\<guillemotleft> G \\<guillemotright> s) * P s\n    \\<le> 1 * bound_of (t P) + 1 * bound_of P", "by(blast intro:add_mono mult_mono)"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wp body (t P) s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * P s\n  \\<le> 1 * bound_of (t P) + 1 * bound_of P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sound\n   (wp (body ;;\n        Embed\n         t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     P)\n\ngoal (2 subgoals):\n 1. le_trans\n     (wp (body ;;\n          Embed\n           ?v2 \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     ?v2\n 2. \\<And>P. sound P \\<Longrightarrow> sound (?v2 P)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. le_trans\n     (wp (body ;;\n          Embed\n           ?v2 \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     ?v2\n 2. \\<And>P. sound P \\<Longrightarrow> sound (?v2 P)", "let \"?fp\" = \"\\<lambda>R s. bound_of R\""], ["proof (state)\ngoal (2 subgoals):\n 1. le_trans\n     (wp (body ;;\n          Embed\n           ?v2 \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     ?v2\n 2. \\<And>P. sound P \\<Longrightarrow> sound (?v2 P)", "show \"le_trans (?X ?fp) ?fp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. le_trans\n     (wp (body ;;\n          Embed\n           (\\<lambda>a b.\n               bound_of\n                a) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     (\\<lambda>R s. bound_of R)", "by(auto intro:healthy_intros hwp)"], ["proof (state)\nthis:\n  le_trans\n   (wp (body ;;\n        Embed\n         (\\<lambda>a b.\n             bound_of\n              a) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n   (\\<lambda>R s. bound_of R)\n\ngoal (1 subgoal):\n 1. \\<And>P. sound P \\<Longrightarrow> sound (\\<lambda>s. bound_of P)", "fix P::\"'s expect\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P. sound P \\<Longrightarrow> sound (\\<lambda>s. bound_of P)", "assume \"sound P\""], ["proof (state)\nthis:\n  sound P\n\ngoal (1 subgoal):\n 1. \\<And>P. sound P \\<Longrightarrow> sound (\\<lambda>s. bound_of P)", "thus \"sound (?fp P)\""], ["proof (prove)\nusing this:\n  sound P\n\ngoal (1 subgoal):\n 1. sound (\\<lambda>s. bound_of P)", "by(auto)"], ["proof (state)\nthis:\n  sound (\\<lambda>s. bound_of P)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  equiv_trans\n   (wp (body ;;\n        Embed\n         (lfp_trans\n           (\\<lambda>a.\n               wp (body ;;\n                   Embed\n                    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n   (lfp_trans\n     (\\<lambda>a.\n         wp (body ;;\n             Embed\n              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n\ngoal (1 subgoal):\n 1. P (lfp_trans\n        (\\<lambda>x.\n            wp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n     (gfp_trans\n       (\\<lambda>x.\n           wlp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "finally"], ["proof (chain)\npicking this:\n  le_trans\n   (wp (body ;;\n        Embed\n         (Sup_trans\n           (fst `\n            {x. P (fst x) (snd x) \\<and>\n                feasible (fst x) \\<and>\n                (\\<forall>Q.\n                    unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                le_trans (fst x)\n                 (lfp_trans\n                   (\\<lambda>a.\n                       wp (body ;;\n                           Embed\n                            a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                le_utrans\n                 (gfp_trans\n                   (\\<lambda>a.\n                       wlp (body ;;\n                            Embed\n                             a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                 (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n   (lfp_trans\n     (\\<lambda>a.\n         wp (body ;;\n             Embed\n              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "have le_lfp: \"le_trans (?X (Sup_trans (fst ` ?M))) (lfp_trans ?X)\""], ["proof (prove)\nusing this:\n  le_trans\n   (wp (body ;;\n        Embed\n         (Sup_trans\n           (fst `\n            {x. P (fst x) (snd x) \\<and>\n                feasible (fst x) \\<and>\n                (\\<forall>Q.\n                    unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                le_trans (fst x)\n                 (lfp_trans\n                   (\\<lambda>a.\n                       wp (body ;;\n                           Embed\n                            a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                le_utrans\n                 (gfp_trans\n                   (\\<lambda>a.\n                       wlp (body ;;\n                            Embed\n                             a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                 (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n   (lfp_trans\n     (\\<lambda>a.\n         wp (body ;;\n             Embed\n              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n\ngoal (1 subgoal):\n 1. le_trans\n     (wp (body ;;\n          Embed\n           (Sup_trans\n             (fst `\n              {x. P (fst x) (snd x) \\<and>\n                  feasible (fst x) \\<and>\n                  (\\<forall>Q.\n                      unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                  le_trans (fst x)\n                   (lfp_trans\n                     (\\<lambda>a.\n                         wp (body ;;\n                             Embed\n                              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                  le_utrans\n                   (gfp_trans\n                     (\\<lambda>a.\n                         wlp (body ;;\n                              Embed\n                               a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                   (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     (lfp_trans\n       (\\<lambda>a.\n           wp (body ;;\n               Embed\n                a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "."], ["proof (state)\nthis:\n  le_trans\n   (wp (body ;;\n        Embed\n         (Sup_trans\n           (fst `\n            {x. P (fst x) (snd x) \\<and>\n                feasible (fst x) \\<and>\n                (\\<forall>Q.\n                    unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                le_trans (fst x)\n                 (lfp_trans\n                   (\\<lambda>a.\n                       wp (body ;;\n                           Embed\n                            a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                le_utrans\n                 (gfp_trans\n                   (\\<lambda>a.\n                       wlp (body ;;\n                            Embed\n                             a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                 (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n   (lfp_trans\n     (\\<lambda>a.\n         wp (body ;;\n             Embed\n              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n\ngoal (1 subgoal):\n 1. P (lfp_trans\n        (\\<lambda>x.\n            wp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n     (gfp_trans\n       (\\<lambda>x.\n           wlp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "have fw_gfp: \"le_utrans (gfp_trans ?Y) (Inf_utrans (snd ` ?M))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. le_utrans\n     (gfp_trans\n       (\\<lambda>a.\n           wlp (body ;;\n                Embed\n                 a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n     (Inf_utrans\n       (snd `\n        {x. P (fst x) (snd x) \\<and>\n            feasible (fst x) \\<and>\n            (\\<forall>Q.\n                unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n            le_trans (fst x)\n             (lfp_trans\n               (\\<lambda>a.\n                   wp (body ;;\n                       Embed\n                        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n            le_utrans\n             (gfp_trans\n               (\\<lambda>a.\n                   wlp (body ;;\n                        Embed\n                         a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n             (snd x)}))", "by(auto intro:Inf_utrans_greatest unitary_gfp)"], ["proof (state)\nthis:\n  le_utrans\n   (gfp_trans\n     (\\<lambda>a.\n         wlp (body ;;\n              Embed\n               a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n   (Inf_utrans\n     (snd `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)}))\n\ngoal (1 subgoal):\n 1. P (lfp_trans\n        (\\<lambda>x.\n            wp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n     (gfp_trans\n       (\\<lambda>x.\n           wlp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "have \"equiv_utrans (gfp_trans ?Y) (?Y (gfp_trans ?Y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. equiv_utrans\n     (gfp_trans\n       (\\<lambda>a.\n           wlp (body ;;\n                Embed\n                 a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n     (wlp (body ;;\n           Embed\n            (gfp_trans\n              (\\<lambda>a.\n                  wlp (body ;;\n                       Embed\n                        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "by(auto intro!:gfp_trans_unfold wlp_loop_mono uY)"], ["proof (state)\nthis:\n  equiv_utrans\n   (gfp_trans\n     (\\<lambda>a.\n         wlp (body ;;\n              Embed\n               a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n   (wlp (body ;;\n         Embed\n          (gfp_trans\n            (\\<lambda>a.\n                wlp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal (1 subgoal):\n 1. P (lfp_trans\n        (\\<lambda>x.\n            wp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n     (gfp_trans\n       (\\<lambda>x.\n           wlp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "also"], ["proof (state)\nthis:\n  equiv_utrans\n   (gfp_trans\n     (\\<lambda>a.\n         wlp (body ;;\n              Embed\n               a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n   (wlp (body ;;\n         Embed\n          (gfp_trans\n            (\\<lambda>a.\n                wlp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal (1 subgoal):\n 1. P (lfp_trans\n        (\\<lambda>x.\n            wp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n     (gfp_trans\n       (\\<lambda>x.\n           wlp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "from fw_gfp"], ["proof (chain)\npicking this:\n  le_utrans\n   (gfp_trans\n     (\\<lambda>a.\n         wlp (body ;;\n              Embed\n               a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n   (Inf_utrans\n     (snd `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)}))", "have \"le_utrans (?Y (gfp_trans ?Y)) (?Y (Inf_utrans (snd ` ?M)))\""], ["proof (prove)\nusing this:\n  le_utrans\n   (gfp_trans\n     (\\<lambda>a.\n         wlp (body ;;\n              Embed\n               a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n   (Inf_utrans\n     (snd `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)}))\n\ngoal (1 subgoal):\n 1. le_utrans\n     (wlp (body ;;\n           Embed\n            (gfp_trans\n              (\\<lambda>a.\n                  wlp (body ;;\n                       Embed\n                        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     (wlp (body ;;\n           Embed\n            (Inf_utrans\n              (snd `\n               {x. P (fst x) (snd x) \\<and>\n                   feasible (fst x) \\<and>\n                   (\\<forall>Q.\n                       unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                   le_trans (fst x)\n                    (lfp_trans\n                      (\\<lambda>a.\n                          wp (body ;;\n                              Embed\n                               a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                   le_utrans\n                    (gfp_trans\n                      (\\<lambda>a.\n                          wlp (body ;;\n                               Embed\n                                a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                    (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "by(auto intro:wlp_loop_mono uInf unitary_gfp)"], ["proof (state)\nthis:\n  le_utrans\n   (wlp (body ;;\n         Embed\n          (gfp_trans\n            (\\<lambda>a.\n                wlp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n   (wlp (body ;;\n         Embed\n          (Inf_utrans\n            (snd `\n             {x. P (fst x) (snd x) \\<and>\n                 feasible (fst x) \\<and>\n                 (\\<forall>Q.\n                     unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                 le_trans (fst x)\n                  (lfp_trans\n                    (\\<lambda>a.\n                        wp (body ;;\n                            Embed\n                             a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                 le_utrans\n                  (gfp_trans\n                    (\\<lambda>a.\n                        wlp (body ;;\n                             Embed\n                              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                  (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal (1 subgoal):\n 1. P (lfp_trans\n        (\\<lambda>x.\n            wp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n     (gfp_trans\n       (\\<lambda>x.\n           wlp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "finally"], ["proof (chain)\npicking this:\n  le_utrans\n   (gfp_trans\n     (\\<lambda>a.\n         wlp (body ;;\n              Embed\n               a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n   (wlp (body ;;\n         Embed\n          (Inf_utrans\n            (snd `\n             {x. P (fst x) (snd x) \\<and>\n                 feasible (fst x) \\<and>\n                 (\\<forall>Q.\n                     unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                 le_trans (fst x)\n                  (lfp_trans\n                    (\\<lambda>a.\n                        wp (body ;;\n                            Embed\n                             a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                 le_utrans\n                  (gfp_trans\n                    (\\<lambda>a.\n                        wlp (body ;;\n                             Embed\n                              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                  (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "have ge_gfp: \"le_utrans (gfp_trans ?Y) (?Y (Inf_utrans (snd ` ?M)))\""], ["proof (prove)\nusing this:\n  le_utrans\n   (gfp_trans\n     (\\<lambda>a.\n         wlp (body ;;\n              Embed\n               a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n   (wlp (body ;;\n         Embed\n          (Inf_utrans\n            (snd `\n             {x. P (fst x) (snd x) \\<and>\n                 feasible (fst x) \\<and>\n                 (\\<forall>Q.\n                     unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                 le_trans (fst x)\n                  (lfp_trans\n                    (\\<lambda>a.\n                        wp (body ;;\n                            Embed\n                             a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                 le_utrans\n                  (gfp_trans\n                    (\\<lambda>a.\n                        wlp (body ;;\n                             Embed\n                              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                  (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal (1 subgoal):\n 1. le_utrans\n     (gfp_trans\n       (\\<lambda>a.\n           wlp (body ;;\n                Embed\n                 a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n     (wlp (body ;;\n           Embed\n            (Inf_utrans\n              (snd `\n               {x. P (fst x) (snd x) \\<and>\n                   feasible (fst x) \\<and>\n                   (\\<forall>Q.\n                       unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                   le_trans (fst x)\n                    (lfp_trans\n                      (\\<lambda>a.\n                          wp (body ;;\n                              Embed\n                               a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                   le_utrans\n                    (gfp_trans\n                      (\\<lambda>a.\n                          wlp (body ;;\n                               Embed\n                                a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                    (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "."], ["proof (state)\nthis:\n  le_utrans\n   (gfp_trans\n     (\\<lambda>a.\n         wlp (body ;;\n              Embed\n               a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n   (wlp (body ;;\n         Embed\n          (Inf_utrans\n            (snd `\n             {x. P (fst x) (snd x) \\<and>\n                 feasible (fst x) \\<and>\n                 (\\<forall>Q.\n                     unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                 le_trans (fst x)\n                  (lfp_trans\n                    (\\<lambda>a.\n                        wp (body ;;\n                            Embed\n                             a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                 le_utrans\n                  (gfp_trans\n                    (\\<lambda>a.\n                        wlp (body ;;\n                             Embed\n                              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                  (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal (1 subgoal):\n 1. P (lfp_trans\n        (\\<lambda>x.\n            wp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n     (gfp_trans\n       (\\<lambda>x.\n           wlp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "from PLimit fX uY fSup uInf"], ["proof (chain)\npicking this:\n  P (Sup_trans\n      (fst `\n       {x. P (fst x) (snd x) \\<and>\n           feasible (fst x) \\<and>\n           (\\<forall>Q.\n               unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n           le_trans (fst x)\n            (lfp_trans\n              (\\<lambda>a.\n                  wp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n           le_utrans\n            (gfp_trans\n              (\\<lambda>a.\n                  wlp (body ;;\n                       Embed\n                        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n            (snd x)}))\n   (Inf_utrans\n     (snd `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)}))\n  feasible ?t \\<Longrightarrow>\n  feasible\n   (wp (body ;;\n        Embed\n         ?t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n  \\<lbrakk>\\<And>P. unitary P \\<Longrightarrow> unitary (?t P);\n   unitary ?P\\<rbrakk>\n  \\<Longrightarrow> unitary\n                     (wlp (body ;;\n                           Embed\n                            ?t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                       ?P)\n  feasible\n   (Sup_trans\n     (fst `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)}))\n  unitary ?P \\<Longrightarrow>\n  unitary\n   (Inf_utrans\n     (snd `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)})\n     ?P)", "have \"P (?X (Sup_trans (fst ` ?M))) (?Y (Inf_utrans (snd ` ?M)))\""], ["proof (prove)\nusing this:\n  P (Sup_trans\n      (fst `\n       {x. P (fst x) (snd x) \\<and>\n           feasible (fst x) \\<and>\n           (\\<forall>Q.\n               unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n           le_trans (fst x)\n            (lfp_trans\n              (\\<lambda>a.\n                  wp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n           le_utrans\n            (gfp_trans\n              (\\<lambda>a.\n                  wlp (body ;;\n                       Embed\n                        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n            (snd x)}))\n   (Inf_utrans\n     (snd `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)}))\n  feasible ?t \\<Longrightarrow>\n  feasible\n   (wp (body ;;\n        Embed\n         ?t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n  \\<lbrakk>\\<And>P. unitary P \\<Longrightarrow> unitary (?t P);\n   unitary ?P\\<rbrakk>\n  \\<Longrightarrow> unitary\n                     (wlp (body ;;\n                           Embed\n                            ?t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                       ?P)\n  feasible\n   (Sup_trans\n     (fst `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)}))\n  unitary ?P \\<Longrightarrow>\n  unitary\n   (Inf_utrans\n     (snd `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)})\n     ?P)\n\ngoal (1 subgoal):\n 1. P (wp (body ;;\n           Embed\n            (Sup_trans\n              (fst `\n               {x. P (fst x) (snd x) \\<and>\n                   feasible (fst x) \\<and>\n                   (\\<forall>Q.\n                       unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                   le_trans (fst x)\n                    (lfp_trans\n                      (\\<lambda>a.\n                          wp (body ;;\n                              Embed\n                               a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                   le_utrans\n                    (gfp_trans\n                      (\\<lambda>a.\n                          wlp (body ;;\n                               Embed\n                                a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                    (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     (wlp (body ;;\n           Embed\n            (Inf_utrans\n              (snd `\n               {x. P (fst x) (snd x) \\<and>\n                   feasible (fst x) \\<and>\n                   (\\<forall>Q.\n                       unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                   le_trans (fst x)\n                    (lfp_trans\n                      (\\<lambda>a.\n                          wp (body ;;\n                              Embed\n                               a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                   le_utrans\n                    (gfp_trans\n                      (\\<lambda>a.\n                          wlp (body ;;\n                               Embed\n                                a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                    (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "by(iprover intro:IH)"], ["proof (state)\nthis:\n  P (wp (body ;;\n         Embed\n          (Sup_trans\n            (fst `\n             {x. P (fst x) (snd x) \\<and>\n                 feasible (fst x) \\<and>\n                 (\\<forall>Q.\n                     unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                 le_trans (fst x)\n                  (lfp_trans\n                    (\\<lambda>a.\n                        wp (body ;;\n                            Embed\n                             a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                 le_utrans\n                  (gfp_trans\n                    (\\<lambda>a.\n                        wlp (body ;;\n                             Embed\n                              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                  (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n   (wlp (body ;;\n         Embed\n          (Inf_utrans\n            (snd `\n             {x. P (fst x) (snd x) \\<and>\n                 feasible (fst x) \\<and>\n                 (\\<forall>Q.\n                     unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                 le_trans (fst x)\n                  (lfp_trans\n                    (\\<lambda>a.\n                        wp (body ;;\n                            Embed\n                             a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                 le_utrans\n                  (gfp_trans\n                    (\\<lambda>a.\n                        wlp (body ;;\n                             Embed\n                              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                  (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal (1 subgoal):\n 1. P (lfp_trans\n        (\\<lambda>x.\n            wp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n     (gfp_trans\n       (\\<lambda>x.\n           wlp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "moreover"], ["proof (state)\nthis:\n  P (wp (body ;;\n         Embed\n          (Sup_trans\n            (fst `\n             {x. P (fst x) (snd x) \\<and>\n                 feasible (fst x) \\<and>\n                 (\\<forall>Q.\n                     unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                 le_trans (fst x)\n                  (lfp_trans\n                    (\\<lambda>a.\n                        wp (body ;;\n                            Embed\n                             a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                 le_utrans\n                  (gfp_trans\n                    (\\<lambda>a.\n                        wlp (body ;;\n                             Embed\n                              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                  (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n   (wlp (body ;;\n         Embed\n          (Inf_utrans\n            (snd `\n             {x. P (fst x) (snd x) \\<and>\n                 feasible (fst x) \\<and>\n                 (\\<forall>Q.\n                     unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                 le_trans (fst x)\n                  (lfp_trans\n                    (\\<lambda>a.\n                        wp (body ;;\n                            Embed\n                             a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                 le_utrans\n                  (gfp_trans\n                    (\\<lambda>a.\n                        wlp (body ;;\n                             Embed\n                              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                  (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal (1 subgoal):\n 1. P (lfp_trans\n        (\\<lambda>x.\n            wp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n     (gfp_trans\n       (\\<lambda>x.\n           wlp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "from fSup"], ["proof (chain)\npicking this:\n  feasible\n   (Sup_trans\n     (fst `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)}))", "have \"feasible (?X (Sup_trans (fst ` ?M)))\""], ["proof (prove)\nusing this:\n  feasible\n   (Sup_trans\n     (fst `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)}))\n\ngoal (1 subgoal):\n 1. feasible\n     (wp (body ;;\n          Embed\n           (Sup_trans\n             (fst `\n              {x. P (fst x) (snd x) \\<and>\n                  feasible (fst x) \\<and>\n                  (\\<forall>Q.\n                      unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                  le_trans (fst x)\n                   (lfp_trans\n                     (\\<lambda>a.\n                         wp (body ;;\n                             Embed\n                              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                  le_utrans\n                   (gfp_trans\n                     (\\<lambda>a.\n                         wlp (body ;;\n                              Embed\n                               a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                   (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "by(rule fX)"], ["proof (state)\nthis:\n  feasible\n   (wp (body ;;\n        Embed\n         (Sup_trans\n           (fst `\n            {x. P (fst x) (snd x) \\<and>\n                feasible (fst x) \\<and>\n                (\\<forall>Q.\n                    unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                le_trans (fst x)\n                 (lfp_trans\n                   (\\<lambda>a.\n                       wp (body ;;\n                           Embed\n                            a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                le_utrans\n                 (gfp_trans\n                   (\\<lambda>a.\n                       wlp (body ;;\n                            Embed\n                             a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                 (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal (1 subgoal):\n 1. P (lfp_trans\n        (\\<lambda>x.\n            wp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n     (gfp_trans\n       (\\<lambda>x.\n           wlp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "moreover"], ["proof (state)\nthis:\n  feasible\n   (wp (body ;;\n        Embed\n         (Sup_trans\n           (fst `\n            {x. P (fst x) (snd x) \\<and>\n                feasible (fst x) \\<and>\n                (\\<forall>Q.\n                    unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                le_trans (fst x)\n                 (lfp_trans\n                   (\\<lambda>a.\n                       wp (body ;;\n                           Embed\n                            a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                le_utrans\n                 (gfp_trans\n                   (\\<lambda>a.\n                       wlp (body ;;\n                            Embed\n                             a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                 (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal (1 subgoal):\n 1. P (lfp_trans\n        (\\<lambda>x.\n            wp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n     (gfp_trans\n       (\\<lambda>x.\n           wlp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "have \"\\<And>P. unitary P \\<Longrightarrow> unitary (?Y (Inf_utrans (snd ` ?M)) P)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>Pa.\n       unitary Pa \\<Longrightarrow>\n       unitary\n        (wlp (body ;;\n              Embed\n               (Inf_utrans\n                 (snd `\n                  {x. P (fst x) (snd x) \\<and>\n                      feasible (fst x) \\<and>\n                      (\\<forall>Q.\n                          unitary Q \\<longrightarrow>\n                          unitary (snd x Q)) \\<and>\n                      le_trans (fst x)\n                       (lfp_trans\n                         (\\<lambda>a.\n                             wp (body ;;\n                                 Embed\n                                  a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                      le_utrans\n                       (gfp_trans\n                         (\\<lambda>a.\n                             wlp (body ;;\n                                  Embed\n                                   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                       (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n          Pa)", "by(auto intro:uY uInf)"], ["proof (state)\nthis:\n  unitary ?P \\<Longrightarrow>\n  unitary\n   (wlp (body ;;\n         Embed\n          (Inf_utrans\n            (snd `\n             {x. P (fst x) (snd x) \\<and>\n                 feasible (fst x) \\<and>\n                 (\\<forall>Q.\n                     unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                 le_trans (fst x)\n                  (lfp_trans\n                    (\\<lambda>a.\n                        wp (body ;;\n                            Embed\n                             a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                 le_utrans\n                  (gfp_trans\n                    (\\<lambda>a.\n                        wlp (body ;;\n                             Embed\n                              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                  (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     ?P)\n\ngoal (1 subgoal):\n 1. P (lfp_trans\n        (\\<lambda>x.\n            wp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n     (gfp_trans\n       (\\<lambda>x.\n           wlp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "moreover"], ["proof (state)\nthis:\n  unitary ?P \\<Longrightarrow>\n  unitary\n   (wlp (body ;;\n         Embed\n          (Inf_utrans\n            (snd `\n             {x. P (fst x) (snd x) \\<and>\n                 feasible (fst x) \\<and>\n                 (\\<forall>Q.\n                     unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                 le_trans (fst x)\n                  (lfp_trans\n                    (\\<lambda>a.\n                        wp (body ;;\n                            Embed\n                             a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                 le_utrans\n                  (gfp_trans\n                    (\\<lambda>a.\n                        wlp (body ;;\n                             Embed\n                              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                  (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     ?P)\n\ngoal (1 subgoal):\n 1. P (lfp_trans\n        (\\<lambda>x.\n            wp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n     (gfp_trans\n       (\\<lambda>x.\n           wlp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "note le_lfp ge_gfp"], ["proof (state)\nthis:\n  le_trans\n   (wp (body ;;\n        Embed\n         (Sup_trans\n           (fst `\n            {x. P (fst x) (snd x) \\<and>\n                feasible (fst x) \\<and>\n                (\\<forall>Q.\n                    unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                le_trans (fst x)\n                 (lfp_trans\n                   (\\<lambda>a.\n                       wp (body ;;\n                           Embed\n                            a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                le_utrans\n                 (gfp_trans\n                   (\\<lambda>a.\n                       wlp (body ;;\n                            Embed\n                             a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                 (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n   (lfp_trans\n     (\\<lambda>a.\n         wp (body ;;\n             Embed\n              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n  le_utrans\n   (gfp_trans\n     (\\<lambda>a.\n         wlp (body ;;\n              Embed\n               a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n   (wlp (body ;;\n         Embed\n          (Inf_utrans\n            (snd `\n             {x. P (fst x) (snd x) \\<and>\n                 feasible (fst x) \\<and>\n                 (\\<forall>Q.\n                     unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                 le_trans (fst x)\n                  (lfp_trans\n                    (\\<lambda>a.\n                        wp (body ;;\n                            Embed\n                             a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                 le_utrans\n                  (gfp_trans\n                    (\\<lambda>a.\n                        wlp (body ;;\n                             Embed\n                              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                  (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal (1 subgoal):\n 1. P (lfp_trans\n        (\\<lambda>x.\n            wp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n     (gfp_trans\n       (\\<lambda>x.\n           wlp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "ultimately"], ["proof (chain)\npicking this:\n  P (wp (body ;;\n         Embed\n          (Sup_trans\n            (fst `\n             {x. P (fst x) (snd x) \\<and>\n                 feasible (fst x) \\<and>\n                 (\\<forall>Q.\n                     unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                 le_trans (fst x)\n                  (lfp_trans\n                    (\\<lambda>a.\n                        wp (body ;;\n                            Embed\n                             a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                 le_utrans\n                  (gfp_trans\n                    (\\<lambda>a.\n                        wlp (body ;;\n                             Embed\n                              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                  (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n   (wlp (body ;;\n         Embed\n          (Inf_utrans\n            (snd `\n             {x. P (fst x) (snd x) \\<and>\n                 feasible (fst x) \\<and>\n                 (\\<forall>Q.\n                     unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                 le_trans (fst x)\n                  (lfp_trans\n                    (\\<lambda>a.\n                        wp (body ;;\n                            Embed\n                             a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                 le_utrans\n                  (gfp_trans\n                    (\\<lambda>a.\n                        wlp (body ;;\n                             Embed\n                              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                  (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n  feasible\n   (wp (body ;;\n        Embed\n         (Sup_trans\n           (fst `\n            {x. P (fst x) (snd x) \\<and>\n                feasible (fst x) \\<and>\n                (\\<forall>Q.\n                    unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                le_trans (fst x)\n                 (lfp_trans\n                   (\\<lambda>a.\n                       wp (body ;;\n                           Embed\n                            a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                le_utrans\n                 (gfp_trans\n                   (\\<lambda>a.\n                       wlp (body ;;\n                            Embed\n                             a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                 (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n  unitary ?P \\<Longrightarrow>\n  unitary\n   (wlp (body ;;\n         Embed\n          (Inf_utrans\n            (snd `\n             {x. P (fst x) (snd x) \\<and>\n                 feasible (fst x) \\<and>\n                 (\\<forall>Q.\n                     unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                 le_trans (fst x)\n                  (lfp_trans\n                    (\\<lambda>a.\n                        wp (body ;;\n                            Embed\n                             a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                 le_utrans\n                  (gfp_trans\n                    (\\<lambda>a.\n                        wlp (body ;;\n                             Embed\n                              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                  (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     ?P)\n  le_trans\n   (wp (body ;;\n        Embed\n         (Sup_trans\n           (fst `\n            {x. P (fst x) (snd x) \\<and>\n                feasible (fst x) \\<and>\n                (\\<forall>Q.\n                    unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                le_trans (fst x)\n                 (lfp_trans\n                   (\\<lambda>a.\n                       wp (body ;;\n                           Embed\n                            a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                le_utrans\n                 (gfp_trans\n                   (\\<lambda>a.\n                       wlp (body ;;\n                            Embed\n                             a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                 (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n   (lfp_trans\n     (\\<lambda>a.\n         wp (body ;;\n             Embed\n              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n  le_utrans\n   (gfp_trans\n     (\\<lambda>a.\n         wlp (body ;;\n              Embed\n               a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n   (wlp (body ;;\n         Embed\n          (Inf_utrans\n            (snd `\n             {x. P (fst x) (snd x) \\<and>\n                 feasible (fst x) \\<and>\n                 (\\<forall>Q.\n                     unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                 le_trans (fst x)\n                  (lfp_trans\n                    (\\<lambda>a.\n                        wp (body ;;\n                            Embed\n                             a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                 le_utrans\n                  (gfp_trans\n                    (\\<lambda>a.\n                        wlp (body ;;\n                             Embed\n                              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                  (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "have pair_in: \"(?X (Sup_trans (fst ` ?M)), ?Y (Inf_utrans (snd ` ?M))) \\<in> ?M\""], ["proof (prove)\nusing this:\n  P (wp (body ;;\n         Embed\n          (Sup_trans\n            (fst `\n             {x. P (fst x) (snd x) \\<and>\n                 feasible (fst x) \\<and>\n                 (\\<forall>Q.\n                     unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                 le_trans (fst x)\n                  (lfp_trans\n                    (\\<lambda>a.\n                        wp (body ;;\n                            Embed\n                             a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                 le_utrans\n                  (gfp_trans\n                    (\\<lambda>a.\n                        wlp (body ;;\n                             Embed\n                              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                  (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n   (wlp (body ;;\n         Embed\n          (Inf_utrans\n            (snd `\n             {x. P (fst x) (snd x) \\<and>\n                 feasible (fst x) \\<and>\n                 (\\<forall>Q.\n                     unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                 le_trans (fst x)\n                  (lfp_trans\n                    (\\<lambda>a.\n                        wp (body ;;\n                            Embed\n                             a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                 le_utrans\n                  (gfp_trans\n                    (\\<lambda>a.\n                        wlp (body ;;\n                             Embed\n                              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                  (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n  feasible\n   (wp (body ;;\n        Embed\n         (Sup_trans\n           (fst `\n            {x. P (fst x) (snd x) \\<and>\n                feasible (fst x) \\<and>\n                (\\<forall>Q.\n                    unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                le_trans (fst x)\n                 (lfp_trans\n                   (\\<lambda>a.\n                       wp (body ;;\n                           Embed\n                            a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                le_utrans\n                 (gfp_trans\n                   (\\<lambda>a.\n                       wlp (body ;;\n                            Embed\n                             a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                 (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n  unitary ?P \\<Longrightarrow>\n  unitary\n   (wlp (body ;;\n         Embed\n          (Inf_utrans\n            (snd `\n             {x. P (fst x) (snd x) \\<and>\n                 feasible (fst x) \\<and>\n                 (\\<forall>Q.\n                     unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                 le_trans (fst x)\n                  (lfp_trans\n                    (\\<lambda>a.\n                        wp (body ;;\n                            Embed\n                             a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                 le_utrans\n                  (gfp_trans\n                    (\\<lambda>a.\n                        wlp (body ;;\n                             Embed\n                              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                  (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     ?P)\n  le_trans\n   (wp (body ;;\n        Embed\n         (Sup_trans\n           (fst `\n            {x. P (fst x) (snd x) \\<and>\n                feasible (fst x) \\<and>\n                (\\<forall>Q.\n                    unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                le_trans (fst x)\n                 (lfp_trans\n                   (\\<lambda>a.\n                       wp (body ;;\n                           Embed\n                            a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                le_utrans\n                 (gfp_trans\n                   (\\<lambda>a.\n                       wlp (body ;;\n                            Embed\n                             a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                 (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n   (lfp_trans\n     (\\<lambda>a.\n         wp (body ;;\n             Embed\n              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n  le_utrans\n   (gfp_trans\n     (\\<lambda>a.\n         wlp (body ;;\n              Embed\n               a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n   (wlp (body ;;\n         Embed\n          (Inf_utrans\n            (snd `\n             {x. P (fst x) (snd x) \\<and>\n                 feasible (fst x) \\<and>\n                 (\\<forall>Q.\n                     unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                 le_trans (fst x)\n                  (lfp_trans\n                    (\\<lambda>a.\n                        wp (body ;;\n                            Embed\n                             a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                 le_utrans\n                  (gfp_trans\n                    (\\<lambda>a.\n                        wlp (body ;;\n                             Embed\n                              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                  (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal (1 subgoal):\n 1. (wp (body ;;\n         Embed\n          (Sup_trans\n            (fst `\n             {x. P (fst x) (snd x) \\<and>\n                 feasible (fst x) \\<and>\n                 (\\<forall>Q.\n                     unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                 le_trans (fst x)\n                  (lfp_trans\n                    (\\<lambda>a.\n                        wp (body ;;\n                            Embed\n                             a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                 le_utrans\n                  (gfp_trans\n                    (\\<lambda>a.\n                        wlp (body ;;\n                             Embed\n                              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                  (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip),\n     wlp (body ;;\n          Embed\n           (Inf_utrans\n             (snd `\n              {x. P (fst x) (snd x) \\<and>\n                  feasible (fst x) \\<and>\n                  (\\<forall>Q.\n                      unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                  le_trans (fst x)\n                   (lfp_trans\n                     (\\<lambda>a.\n                         wp (body ;;\n                             Embed\n                              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                  le_utrans\n                   (gfp_trans\n                     (\\<lambda>a.\n                         wlp (body ;;\n                              Embed\n                               a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                   (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n    \\<in> {x. P (fst x) (snd x) \\<and>\n              feasible (fst x) \\<and>\n              (\\<forall>Q.\n                  unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n              le_trans (fst x)\n               (lfp_trans\n                 (\\<lambda>a.\n                     wp (body ;;\n                         Embed\n                          a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n              le_utrans\n               (gfp_trans\n                 (\\<lambda>a.\n                     wlp (body ;;\n                          Embed\n                           a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n               (snd x)}", "by(simp)"], ["proof (state)\nthis:\n  (wp (body ;;\n       Embed\n        (Sup_trans\n          (fst `\n           {x. P (fst x) (snd x) \\<and>\n               feasible (fst x) \\<and>\n               (\\<forall>Q.\n                   unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n               le_trans (fst x)\n                (lfp_trans\n                  (\\<lambda>a.\n                      wp (body ;;\n                          Embed\n                           a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n               le_utrans\n                (gfp_trans\n                  (\\<lambda>a.\n                      wlp (body ;;\n                           Embed\n                            a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip),\n   wlp (body ;;\n        Embed\n         (Inf_utrans\n           (snd `\n            {x. P (fst x) (snd x) \\<and>\n                feasible (fst x) \\<and>\n                (\\<forall>Q.\n                    unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                le_trans (fst x)\n                 (lfp_trans\n                   (\\<lambda>a.\n                       wp (body ;;\n                           Embed\n                            a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                le_utrans\n                 (gfp_trans\n                   (\\<lambda>a.\n                       wlp (body ;;\n                            Embed\n                             a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                 (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n  \\<in> {x. P (fst x) (snd x) \\<and>\n            feasible (fst x) \\<and>\n            (\\<forall>Q.\n                unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n            le_trans (fst x)\n             (lfp_trans\n               (\\<lambda>a.\n                   wp (body ;;\n                       Embed\n                        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n            le_utrans\n             (gfp_trans\n               (\\<lambda>a.\n                   wlp (body ;;\n                        Embed\n                         a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n             (snd x)}\n\ngoal (1 subgoal):\n 1. P (lfp_trans\n        (\\<lambda>x.\n            wp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n     (gfp_trans\n       (\\<lambda>x.\n           wlp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "have \"?X (Sup_trans (fst ` ?M)) \\<in> fst ` ?M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wp (body ;;\n        Embed\n         (Sup_trans\n           (fst `\n            {x. P (fst x) (snd x) \\<and>\n                feasible (fst x) \\<and>\n                (\\<forall>Q.\n                    unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                le_trans (fst x)\n                 (lfp_trans\n                   (\\<lambda>a.\n                       wp (body ;;\n                           Embed\n                            a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                le_utrans\n                 (gfp_trans\n                   (\\<lambda>a.\n                       wlp (body ;;\n                            Embed\n                             a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                 (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n    \\<in> fst `\n          {x. P (fst x) (snd x) \\<and>\n              feasible (fst x) \\<and>\n              (\\<forall>Q.\n                  unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n              le_trans (fst x)\n               (lfp_trans\n                 (\\<lambda>a.\n                     wp (body ;;\n                         Embed\n                          a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n              le_utrans\n               (gfp_trans\n                 (\\<lambda>a.\n                     wlp (body ;;\n                          Embed\n                           a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n               (snd x)}", "by(rule imageI[OF pair_in, of fst, simplified])"], ["proof (state)\nthis:\n  wp (body ;;\n      Embed\n       (Sup_trans\n         (fst `\n          {x. P (fst x) (snd x) \\<and>\n              feasible (fst x) \\<and>\n              (\\<forall>Q.\n                  unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n              le_trans (fst x)\n               (lfp_trans\n                 (\\<lambda>a.\n                     wp (body ;;\n                         Embed\n                          a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n              le_utrans\n               (gfp_trans\n                 (\\<lambda>a.\n                     wlp (body ;;\n                          Embed\n                           a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n               (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n  \\<in> fst `\n        {x. P (fst x) (snd x) \\<and>\n            feasible (fst x) \\<and>\n            (\\<forall>Q.\n                unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n            le_trans (fst x)\n             (lfp_trans\n               (\\<lambda>a.\n                   wp (body ;;\n                       Embed\n                        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n            le_utrans\n             (gfp_trans\n               (\\<lambda>a.\n                   wlp (body ;;\n                        Embed\n                         a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n             (snd x)}\n\ngoal (1 subgoal):\n 1. P (lfp_trans\n        (\\<lambda>x.\n            wp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n     (gfp_trans\n       (\\<lambda>x.\n           wlp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "hence \"le_trans (?X (Sup_trans (fst ` ?M))) (Sup_trans (fst ` ?M))\""], ["proof (prove)\nusing this:\n  wp (body ;;\n      Embed\n       (Sup_trans\n         (fst `\n          {x. P (fst x) (snd x) \\<and>\n              feasible (fst x) \\<and>\n              (\\<forall>Q.\n                  unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n              le_trans (fst x)\n               (lfp_trans\n                 (\\<lambda>a.\n                     wp (body ;;\n                         Embed\n                          a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n              le_utrans\n               (gfp_trans\n                 (\\<lambda>a.\n                     wlp (body ;;\n                          Embed\n                           a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n               (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n  \\<in> fst `\n        {x. P (fst x) (snd x) \\<and>\n            feasible (fst x) \\<and>\n            (\\<forall>Q.\n                unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n            le_trans (fst x)\n             (lfp_trans\n               (\\<lambda>a.\n                   wp (body ;;\n                       Embed\n                        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n            le_utrans\n             (gfp_trans\n               (\\<lambda>a.\n                   wlp (body ;;\n                        Embed\n                         a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n             (snd x)}\n\ngoal (1 subgoal):\n 1. le_trans\n     (wp (body ;;\n          Embed\n           (Sup_trans\n             (fst `\n              {x. P (fst x) (snd x) \\<and>\n                  feasible (fst x) \\<and>\n                  (\\<forall>Q.\n                      unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                  le_trans (fst x)\n                   (lfp_trans\n                     (\\<lambda>a.\n                         wp (body ;;\n                             Embed\n                              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                  le_utrans\n                   (gfp_trans\n                     (\\<lambda>a.\n                         wlp (body ;;\n                              Embed\n                               a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                   (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     (Sup_trans\n       (fst `\n        {x. P (fst x) (snd x) \\<and>\n            feasible (fst x) \\<and>\n            (\\<forall>Q.\n                unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n            le_trans (fst x)\n             (lfp_trans\n               (\\<lambda>a.\n                   wp (body ;;\n                       Embed\n                        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n            le_utrans\n             (gfp_trans\n               (\\<lambda>a.\n                   wlp (body ;;\n                        Embed\n                         a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n             (snd x)}))", "proof(rule le_transI[OF Sup_trans_upper2[where t=\"?X (Sup_trans (fst ` ?M))\"\n                                             and S=\"fst ` ?M\"]])"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>Pa.\n       sound Pa \\<Longrightarrow>\n       \\<forall>u\\<in>fst `\n                      {x. P (fst x) (snd x) \\<and>\n                          feasible (fst x) \\<and>\n                          (\\<forall>Q.\n                              unitary Q \\<longrightarrow>\n                              unitary (snd x Q)) \\<and>\n                          le_trans (fst x)\n                           (lfp_trans\n                             (\\<lambda>a.\n                                 wp (body ;;\n                                     Embed\na \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                          le_utrans\n                           (gfp_trans\n                             (\\<lambda>a.\n                                 wlp (body ;;\nEmbed a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                           (snd x)}.\n          \\<forall>P.\n             nneg P \\<and> bounded_by (?b1 Pa) P \\<longrightarrow>\n             nneg (u P) \\<and> bounded_by (?b1 Pa) (u P)\n 2. \\<And>P. sound P \\<Longrightarrow> nneg P\n 3. \\<And>P. sound P \\<Longrightarrow> bounded_by (?b1 P) P", "fix P::\"'s expect\""], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>Pa.\n       sound Pa \\<Longrightarrow>\n       \\<forall>u\\<in>fst `\n                      {x. P (fst x) (snd x) \\<and>\n                          feasible (fst x) \\<and>\n                          (\\<forall>Q.\n                              unitary Q \\<longrightarrow>\n                              unitary (snd x Q)) \\<and>\n                          le_trans (fst x)\n                           (lfp_trans\n                             (\\<lambda>a.\n                                 wp (body ;;\n                                     Embed\na \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                          le_utrans\n                           (gfp_trans\n                             (\\<lambda>a.\n                                 wlp (body ;;\nEmbed a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                           (snd x)}.\n          \\<forall>P.\n             nneg P \\<and> bounded_by (?b1 Pa) P \\<longrightarrow>\n             nneg (u P) \\<and> bounded_by (?b1 Pa) (u P)\n 2. \\<And>P. sound P \\<Longrightarrow> nneg P\n 3. \\<And>P. sound P \\<Longrightarrow> bounded_by (?b1 P) P", "assume sP: \"sound P\""], ["proof (state)\nthis:\n  sound P\n\ngoal (3 subgoals):\n 1. \\<And>Pa.\n       sound Pa \\<Longrightarrow>\n       \\<forall>u\\<in>fst `\n                      {x. P (fst x) (snd x) \\<and>\n                          feasible (fst x) \\<and>\n                          (\\<forall>Q.\n                              unitary Q \\<longrightarrow>\n                              unitary (snd x Q)) \\<and>\n                          le_trans (fst x)\n                           (lfp_trans\n                             (\\<lambda>a.\n                                 wp (body ;;\n                                     Embed\na \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                          le_utrans\n                           (gfp_trans\n                             (\\<lambda>a.\n                                 wlp (body ;;\nEmbed a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                           (snd x)}.\n          \\<forall>P.\n             nneg P \\<and> bounded_by (?b1 Pa) P \\<longrightarrow>\n             nneg (u P) \\<and> bounded_by (?b1 Pa) (u P)\n 2. \\<And>P. sound P \\<Longrightarrow> nneg P\n 3. \\<And>P. sound P \\<Longrightarrow> bounded_by (?b1 P) P", "thus \"nneg P\""], ["proof (prove)\nusing this:\n  sound P\n\ngoal (1 subgoal):\n 1. nneg P", "by(auto)"], ["proof (state)\nthis:\n  nneg P\n\ngoal (2 subgoals):\n 1. \\<And>Pa.\n       sound Pa \\<Longrightarrow>\n       \\<forall>u\\<in>fst `\n                      {x. P (fst x) (snd x) \\<and>\n                          feasible (fst x) \\<and>\n                          (\\<forall>Q.\n                              unitary Q \\<longrightarrow>\n                              unitary (snd x Q)) \\<and>\n                          le_trans (fst x)\n                           (lfp_trans\n                             (\\<lambda>a.\n                                 wp (body ;;\n                                     Embed\na \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                          le_utrans\n                           (gfp_trans\n                             (\\<lambda>a.\n                                 wlp (body ;;\nEmbed a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                           (snd x)}.\n          \\<forall>P.\n             nneg P \\<and> bounded_by (?b1 Pa) P \\<longrightarrow>\n             nneg (u P) \\<and> bounded_by (?b1 Pa) (u P)\n 2. \\<And>P. sound P \\<Longrightarrow> bounded_by (?b1 P) P", "from sP"], ["proof (chain)\npicking this:\n  sound P", "show \"bounded_by (bound_of P) P\""], ["proof (prove)\nusing this:\n  sound P\n\ngoal (1 subgoal):\n 1. bounded_by (bound_of P) P", "by(auto)"], ["proof (state)\nthis:\n  bounded_by (bound_of P) P\n\ngoal (1 subgoal):\n 1. \\<And>Pa.\n       sound Pa \\<Longrightarrow>\n       \\<forall>u\\<in>fst `\n                      {x. P (fst x) (snd x) \\<and>\n                          feasible (fst x) \\<and>\n                          (\\<forall>Q.\n                              unitary Q \\<longrightarrow>\n                              unitary (snd x Q)) \\<and>\n                          le_trans (fst x)\n                           (lfp_trans\n                             (\\<lambda>a.\n                                 wp (body ;;\n                                     Embed\na \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                          le_utrans\n                           (gfp_trans\n                             (\\<lambda>a.\n                                 wlp (body ;;\nEmbed a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                           (snd x)}.\n          \\<forall>P.\n             nneg P \\<and> bounded_by (bound_of Pa) P \\<longrightarrow>\n             nneg (u P) \\<and> bounded_by (bound_of Pa) (u P)", "from sP"], ["proof (chain)\npicking this:\n  sound P", "show \"\\<forall>u\\<in>fst ` ?M. \\<forall>Q. nneg Q \\<and> bounded_by (bound_of P) Q \\<longrightarrow>\n                                   nneg (u Q) \\<and> bounded_by (bound_of P) (u Q)\""], ["proof (prove)\nusing this:\n  sound P\n\ngoal (1 subgoal):\n 1. \\<forall>u\\<in>fst `\n                   {x. P (fst x) (snd x) \\<and>\n                       feasible (fst x) \\<and>\n                       (\\<forall>Q.\n                           unitary Q \\<longrightarrow>\n                           unitary (snd x Q)) \\<and>\n                       le_trans (fst x)\n                        (lfp_trans\n                          (\\<lambda>a.\n                              wp (body ;;\n                                  Embed\n                                   a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                       le_utrans\n                        (gfp_trans\n                          (\\<lambda>a.\n                              wlp (body ;;\n                                   Embed\n                                    a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                        (snd x)}.\n       \\<forall>Q.\n          nneg Q \\<and> bounded_by (bound_of P) Q \\<longrightarrow>\n          nneg (u Q) \\<and> bounded_by (bound_of P) (u Q)", "by(auto)"], ["proof (state)\nthis:\n  \\<forall>u\\<in>fst `\n                 {x. P (fst x) (snd x) \\<and>\n                     feasible (fst x) \\<and>\n                     (\\<forall>Q.\n                         unitary Q \\<longrightarrow>\n                         unitary (snd x Q)) \\<and>\n                     le_trans (fst x)\n                      (lfp_trans\n                        (\\<lambda>a.\n                            wp (body ;;\n                                Embed\n                                 a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                     le_utrans\n                      (gfp_trans\n                        (\\<lambda>a.\n                            wlp (body ;;\n                                 Embed\n                                  a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                      (snd x)}.\n     \\<forall>Q.\n        nneg Q \\<and> bounded_by (bound_of P) Q \\<longrightarrow>\n        nneg (u Q) \\<and> bounded_by (bound_of P) (u Q)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  le_trans\n   (wp (body ;;\n        Embed\n         (Sup_trans\n           (fst `\n            {x. P (fst x) (snd x) \\<and>\n                feasible (fst x) \\<and>\n                (\\<forall>Q.\n                    unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                le_trans (fst x)\n                 (lfp_trans\n                   (\\<lambda>a.\n                       wp (body ;;\n                           Embed\n                            a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                le_utrans\n                 (gfp_trans\n                   (\\<lambda>a.\n                       wlp (body ;;\n                            Embed\n                             a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                 (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n   (Sup_trans\n     (fst `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)}))\n\ngoal (1 subgoal):\n 1. P (lfp_trans\n        (\\<lambda>x.\n            wp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n     (gfp_trans\n       (\\<lambda>x.\n           wlp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "hence \"le_trans (lfp_trans ?X) (Sup_trans (fst ` ?M))\""], ["proof (prove)\nusing this:\n  le_trans\n   (wp (body ;;\n        Embed\n         (Sup_trans\n           (fst `\n            {x. P (fst x) (snd x) \\<and>\n                feasible (fst x) \\<and>\n                (\\<forall>Q.\n                    unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                le_trans (fst x)\n                 (lfp_trans\n                   (\\<lambda>a.\n                       wp (body ;;\n                           Embed\n                            a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                le_utrans\n                 (gfp_trans\n                   (\\<lambda>a.\n                       wlp (body ;;\n                            Embed\n                             a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                 (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n   (Sup_trans\n     (fst `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)}))\n\ngoal (1 subgoal):\n 1. le_trans\n     (lfp_trans\n       (\\<lambda>a.\n           wp (body ;;\n               Embed\n                a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n     (Sup_trans\n       (fst `\n        {x. P (fst x) (snd x) \\<and>\n            feasible (fst x) \\<and>\n            (\\<forall>Q.\n                unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n            le_trans (fst x)\n             (lfp_trans\n               (\\<lambda>a.\n                   wp (body ;;\n                       Embed\n                        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n            le_utrans\n             (gfp_trans\n               (\\<lambda>a.\n                   wlp (body ;;\n                        Embed\n                         a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n             (snd x)}))", "by(auto intro:lfp_trans_lowerbound feasible_sound[OF fSup])"], ["proof (state)\nthis:\n  le_trans\n   (lfp_trans\n     (\\<lambda>a.\n         wp (body ;;\n             Embed\n              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n   (Sup_trans\n     (fst `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)}))\n\ngoal (1 subgoal):\n 1. P (lfp_trans\n        (\\<lambda>x.\n            wp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n     (gfp_trans\n       (\\<lambda>x.\n           wlp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "with fw_lfp"], ["proof (chain)\npicking this:\n  le_trans\n   (Sup_trans\n     (fst `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)}))\n   (lfp_trans\n     (\\<lambda>a.\n         wp (body ;;\n             Embed\n              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n  le_trans\n   (lfp_trans\n     (\\<lambda>a.\n         wp (body ;;\n             Embed\n              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n   (Sup_trans\n     (fst `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)}))", "have eqt: \"equiv_trans (Sup_trans (fst ` ?M)) (lfp_trans ?X)\""], ["proof (prove)\nusing this:\n  le_trans\n   (Sup_trans\n     (fst `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)}))\n   (lfp_trans\n     (\\<lambda>a.\n         wp (body ;;\n             Embed\n              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n  le_trans\n   (lfp_trans\n     (\\<lambda>a.\n         wp (body ;;\n             Embed\n              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n   (Sup_trans\n     (fst `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)}))\n\ngoal (1 subgoal):\n 1. equiv_trans\n     (Sup_trans\n       (fst `\n        {x. P (fst x) (snd x) \\<and>\n            feasible (fst x) \\<and>\n            (\\<forall>Q.\n                unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n            le_trans (fst x)\n             (lfp_trans\n               (\\<lambda>a.\n                   wp (body ;;\n                       Embed\n                        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n            le_utrans\n             (gfp_trans\n               (\\<lambda>a.\n                   wlp (body ;;\n                        Embed\n                         a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n             (snd x)}))\n     (lfp_trans\n       (\\<lambda>a.\n           wp (body ;;\n               Embed\n                a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "by(rule le_trans_antisym)"], ["proof (state)\nthis:\n  equiv_trans\n   (Sup_trans\n     (fst `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)}))\n   (lfp_trans\n     (\\<lambda>a.\n         wp (body ;;\n             Embed\n              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n\ngoal (1 subgoal):\n 1. P (lfp_trans\n        (\\<lambda>x.\n            wp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n     (gfp_trans\n       (\\<lambda>x.\n           wlp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "have \"?Y (Inf_utrans (snd ` ?M)) \\<in> snd ` ?M\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wlp (body ;;\n         Embed\n          (Inf_utrans\n            (snd `\n             {x. P (fst x) (snd x) \\<and>\n                 feasible (fst x) \\<and>\n                 (\\<forall>Q.\n                     unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                 le_trans (fst x)\n                  (lfp_trans\n                    (\\<lambda>a.\n                        wp (body ;;\n                            Embed\n                             a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                 le_utrans\n                  (gfp_trans\n                    (\\<lambda>a.\n                        wlp (body ;;\n                             Embed\n                              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                  (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n    \\<in> snd `\n          {x. P (fst x) (snd x) \\<and>\n              feasible (fst x) \\<and>\n              (\\<forall>Q.\n                  unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n              le_trans (fst x)\n               (lfp_trans\n                 (\\<lambda>a.\n                     wp (body ;;\n                         Embed\n                          a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n              le_utrans\n               (gfp_trans\n                 (\\<lambda>a.\n                     wlp (body ;;\n                          Embed\n                           a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n               (snd x)}", "by(rule imageI[OF pair_in, of snd, simplified])"], ["proof (state)\nthis:\n  wlp (body ;;\n       Embed\n        (Inf_utrans\n          (snd `\n           {x. P (fst x) (snd x) \\<and>\n               feasible (fst x) \\<and>\n               (\\<forall>Q.\n                   unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n               le_trans (fst x)\n                (lfp_trans\n                  (\\<lambda>a.\n                      wp (body ;;\n                          Embed\n                           a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n               le_utrans\n                (gfp_trans\n                  (\\<lambda>a.\n                      wlp (body ;;\n                           Embed\n                            a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n  \\<in> snd `\n        {x. P (fst x) (snd x) \\<and>\n            feasible (fst x) \\<and>\n            (\\<forall>Q.\n                unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n            le_trans (fst x)\n             (lfp_trans\n               (\\<lambda>a.\n                   wp (body ;;\n                       Embed\n                        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n            le_utrans\n             (gfp_trans\n               (\\<lambda>a.\n                   wlp (body ;;\n                        Embed\n                         a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n             (snd x)}\n\ngoal (1 subgoal):\n 1. P (lfp_trans\n        (\\<lambda>x.\n            wp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n     (gfp_trans\n       (\\<lambda>x.\n           wlp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "hence \"le_utrans (Inf_utrans (snd ` ?M)) (?Y (Inf_utrans (snd ` ?M)))\""], ["proof (prove)\nusing this:\n  wlp (body ;;\n       Embed\n        (Inf_utrans\n          (snd `\n           {x. P (fst x) (snd x) \\<and>\n               feasible (fst x) \\<and>\n               (\\<forall>Q.\n                   unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n               le_trans (fst x)\n                (lfp_trans\n                  (\\<lambda>a.\n                      wp (body ;;\n                          Embed\n                           a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n               le_utrans\n                (gfp_trans\n                  (\\<lambda>a.\n                      wlp (body ;;\n                           Embed\n                            a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n  \\<in> snd `\n        {x. P (fst x) (snd x) \\<and>\n            feasible (fst x) \\<and>\n            (\\<forall>Q.\n                unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n            le_trans (fst x)\n             (lfp_trans\n               (\\<lambda>a.\n                   wp (body ;;\n                       Embed\n                        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n            le_utrans\n             (gfp_trans\n               (\\<lambda>a.\n                   wlp (body ;;\n                        Embed\n                         a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n             (snd x)}\n\ngoal (1 subgoal):\n 1. le_utrans\n     (Inf_utrans\n       (snd `\n        {x. P (fst x) (snd x) \\<and>\n            feasible (fst x) \\<and>\n            (\\<forall>Q.\n                unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n            le_trans (fst x)\n             (lfp_trans\n               (\\<lambda>a.\n                   wp (body ;;\n                       Embed\n                        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n            le_utrans\n             (gfp_trans\n               (\\<lambda>a.\n                   wlp (body ;;\n                        Embed\n                         a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n             (snd x)}))\n     (wlp (body ;;\n           Embed\n            (Inf_utrans\n              (snd `\n               {x. P (fst x) (snd x) \\<and>\n                   feasible (fst x) \\<and>\n                   (\\<forall>Q.\n                       unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                   le_trans (fst x)\n                    (lfp_trans\n                      (\\<lambda>a.\n                          wp (body ;;\n                              Embed\n                               a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                   le_utrans\n                    (gfp_trans\n                      (\\<lambda>a.\n                          wlp (body ;;\n                               Embed\n                                a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                    (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "by(intro Inf_utrans_lower, auto)"], ["proof (state)\nthis:\n  le_utrans\n   (Inf_utrans\n     (snd `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)}))\n   (wlp (body ;;\n         Embed\n          (Inf_utrans\n            (snd `\n             {x. P (fst x) (snd x) \\<and>\n                 feasible (fst x) \\<and>\n                 (\\<forall>Q.\n                     unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                 le_trans (fst x)\n                  (lfp_trans\n                    (\\<lambda>a.\n                        wp (body ;;\n                            Embed\n                             a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                 le_utrans\n                  (gfp_trans\n                    (\\<lambda>a.\n                        wlp (body ;;\n                             Embed\n                              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                  (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal (1 subgoal):\n 1. P (lfp_trans\n        (\\<lambda>x.\n            wp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n     (gfp_trans\n       (\\<lambda>x.\n           wlp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "hence \"le_utrans (Inf_utrans (snd ` ?M)) (gfp_trans ?Y)\""], ["proof (prove)\nusing this:\n  le_utrans\n   (Inf_utrans\n     (snd `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)}))\n   (wlp (body ;;\n         Embed\n          (Inf_utrans\n            (snd `\n             {x. P (fst x) (snd x) \\<and>\n                 feasible (fst x) \\<and>\n                 (\\<forall>Q.\n                     unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n                 le_trans (fst x)\n                  (lfp_trans\n                    (\\<lambda>a.\n                        wp (body ;;\n                            Embed\n                             a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n                 le_utrans\n                  (gfp_trans\n                    (\\<lambda>a.\n                        wlp (body ;;\n                             Embed\n                              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n                  (snd x)})) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal (1 subgoal):\n 1. le_utrans\n     (Inf_utrans\n       (snd `\n        {x. P (fst x) (snd x) \\<and>\n            feasible (fst x) \\<and>\n            (\\<forall>Q.\n                unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n            le_trans (fst x)\n             (lfp_trans\n               (\\<lambda>a.\n                   wp (body ;;\n                       Embed\n                        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n            le_utrans\n             (gfp_trans\n               (\\<lambda>a.\n                   wlp (body ;;\n                        Embed\n                         a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n             (snd x)}))\n     (gfp_trans\n       (\\<lambda>a.\n           wlp (body ;;\n                Embed\n                 a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "by(blast intro:gfp_trans_upperbound uInf)"], ["proof (state)\nthis:\n  le_utrans\n   (Inf_utrans\n     (snd `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)}))\n   (gfp_trans\n     (\\<lambda>a.\n         wlp (body ;;\n              Embed\n               a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n\ngoal (1 subgoal):\n 1. P (lfp_trans\n        (\\<lambda>x.\n            wp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n     (gfp_trans\n       (\\<lambda>x.\n           wlp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "with fw_gfp"], ["proof (chain)\npicking this:\n  le_utrans\n   (gfp_trans\n     (\\<lambda>a.\n         wlp (body ;;\n              Embed\n               a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n   (Inf_utrans\n     (snd `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)}))\n  le_utrans\n   (Inf_utrans\n     (snd `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)}))\n   (gfp_trans\n     (\\<lambda>a.\n         wlp (body ;;\n              Embed\n               a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "have equ: \"equiv_utrans (Inf_utrans (snd ` ?M)) (gfp_trans ?Y)\""], ["proof (prove)\nusing this:\n  le_utrans\n   (gfp_trans\n     (\\<lambda>a.\n         wlp (body ;;\n              Embed\n               a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n   (Inf_utrans\n     (snd `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)}))\n  le_utrans\n   (Inf_utrans\n     (snd `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)}))\n   (gfp_trans\n     (\\<lambda>a.\n         wlp (body ;;\n              Embed\n               a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n\ngoal (1 subgoal):\n 1. equiv_utrans\n     (Inf_utrans\n       (snd `\n        {x. P (fst x) (snd x) \\<and>\n            feasible (fst x) \\<and>\n            (\\<forall>Q.\n                unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n            le_trans (fst x)\n             (lfp_trans\n               (\\<lambda>a.\n                   wp (body ;;\n                       Embed\n                        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n            le_utrans\n             (gfp_trans\n               (\\<lambda>a.\n                   wlp (body ;;\n                        Embed\n                         a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n             (snd x)}))\n     (gfp_trans\n       (\\<lambda>a.\n           wlp (body ;;\n                Embed\n                 a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "by(auto intro:le_utrans_antisym)"], ["proof (state)\nthis:\n  equiv_utrans\n   (Inf_utrans\n     (snd `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)}))\n   (gfp_trans\n     (\\<lambda>a.\n         wlp (body ;;\n              Embed\n               a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n\ngoal (1 subgoal):\n 1. P (lfp_trans\n        (\\<lambda>x.\n            wp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n     (gfp_trans\n       (\\<lambda>x.\n           wlp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "from PLimit eqt equ"], ["proof (chain)\npicking this:\n  P (Sup_trans\n      (fst `\n       {x. P (fst x) (snd x) \\<and>\n           feasible (fst x) \\<and>\n           (\\<forall>Q.\n               unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n           le_trans (fst x)\n            (lfp_trans\n              (\\<lambda>a.\n                  wp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n           le_utrans\n            (gfp_trans\n              (\\<lambda>a.\n                  wlp (body ;;\n                       Embed\n                        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n            (snd x)}))\n   (Inf_utrans\n     (snd `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)}))\n  equiv_trans\n   (Sup_trans\n     (fst `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)}))\n   (lfp_trans\n     (\\<lambda>a.\n         wp (body ;;\n             Embed\n              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n  equiv_utrans\n   (Inf_utrans\n     (snd `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)}))\n   (gfp_trans\n     (\\<lambda>a.\n         wlp (body ;;\n              Embed\n               a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "show \"P (lfp_trans ?X) (gfp_trans ?Y)\""], ["proof (prove)\nusing this:\n  P (Sup_trans\n      (fst `\n       {x. P (fst x) (snd x) \\<and>\n           feasible (fst x) \\<and>\n           (\\<forall>Q.\n               unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n           le_trans (fst x)\n            (lfp_trans\n              (\\<lambda>a.\n                  wp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n           le_utrans\n            (gfp_trans\n              (\\<lambda>a.\n                  wlp (body ;;\n                       Embed\n                        a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n            (snd x)}))\n   (Inf_utrans\n     (snd `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)}))\n  equiv_trans\n   (Sup_trans\n     (fst `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)}))\n   (lfp_trans\n     (\\<lambda>a.\n         wp (body ;;\n             Embed\n              a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n  equiv_utrans\n   (Inf_utrans\n     (snd `\n      {x. P (fst x) (snd x) \\<and>\n          feasible (fst x) \\<and>\n          (\\<forall>Q. unitary Q \\<longrightarrow> unitary (snd x Q)) \\<and>\n          le_trans (fst x)\n           (lfp_trans\n             (\\<lambda>a.\n                 wp (body ;;\n                     Embed\n                      a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<and>\n          le_utrans\n           (gfp_trans\n             (\\<lambda>a.\n                 wlp (body ;;\n                      Embed\n                       a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n           (snd x)}))\n   (gfp_trans\n     (\\<lambda>a.\n         wlp (body ;;\n              Embed\n               a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n\ngoal (1 subgoal):\n 1. P (lfp_trans\n        (\\<lambda>a.\n            wp (body ;;\n                Embed\n                 a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n     (gfp_trans\n       (\\<lambda>a.\n           wlp (body ;;\n                Embed\n                 a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "by(rule P_equiv)"], ["proof (state)\nthis:\n  P (lfp_trans\n      (\\<lambda>a.\n          wp (body ;;\n              Embed\n               a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n   (gfp_trans\n     (\\<lambda>a.\n         wlp (body ;;\n              Embed\n               a \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>The Limit of Iterates\\<close>"], ["", "text \\<open>The iterates of a loop are its sequence of finite unrollings.  We show shortly that this\nconverges on the least fixed point.  This is enormously useful, as we can appeal to various\nproperties of the finite iterates (which will follow by finite induction), which we can then\ntransfer to the limit.\\<close>"], ["", "definition iterates :: \"'s prog \\<Rightarrow> ('s \\<Rightarrow> bool) \\<Rightarrow> nat \\<Rightarrow> 's trans\"\nwhere \"iterates body G i = ((\\<lambda>x. wp (body ;; Embed x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^ i) (\\<lambda>P s. 0)\""], ["", "lemma iterates_0[simp]:\n  \"iterates body G 0 = (\\<lambda>P s. 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. iterates body G 0 = (\\<lambda>P s. 0)", "by(simp add:iterates_def)"], ["", "lemma iterates_Suc[simp]:\n  \"iterates body G (Suc i) = wp (body ;; Embed (iterates body G i) \\<^bsub>\\<guillemotleft>G\\<guillemotright>\\<^esub>\\<oplus> Skip)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. iterates body G (Suc i) =\n    wp (body ;;\n        Embed\n         (iterates body G\n           i) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)", "by(simp add:iterates_def)"], ["", "text \\<open>All iterates are healthy.\\<close>"], ["", "lemma iterates_healthy:\n  \"healthy (wp body) \\<Longrightarrow> healthy (iterates body G i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. healthy (wp body) \\<Longrightarrow> healthy (iterates body G i)", "by(induct i, auto intro:healthy_intros)"], ["", "text \\<open>The iterates are an ascending chain.\\<close>"], ["", "lemma iterates_increasing:\n  fixes body::\"'s prog\"\n  assumes hb: \"healthy (wp body)\"\n  shows \"le_trans (iterates body G i) (iterates body G (Suc i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. le_trans (iterates body G i) (iterates body G (Suc i))", "proof(induct i)"], ["proof (state)\ngoal (2 subgoals):\n 1. le_trans (iterates body G 0) (iterates body G (Suc 0))\n 2. \\<And>i.\n       le_trans (iterates body G i)\n        (iterates body G (Suc i)) \\<Longrightarrow>\n       le_trans (iterates body G (Suc i)) (iterates body G (Suc (Suc i)))", "show \"le_trans (iterates body G 0) (iterates body G (Suc 0))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. le_trans (iterates body G 0) (iterates body G (Suc 0))", "proof(simp add:iterates_def, rule le_transI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P.\n       sound P \\<Longrightarrow>\n       \\<lambda>s.\n          0 \\<tturnstile> wp (body ;;\n                              Embed\n                               (\\<lambda>P s.\n                                   0) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                           P", "fix P::\"'s expect\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P.\n       sound P \\<Longrightarrow>\n       \\<lambda>s.\n          0 \\<tturnstile> wp (body ;;\n                              Embed\n                               (\\<lambda>P s.\n                                   0) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                           P", "assume \"sound P\""], ["proof (state)\nthis:\n  sound P\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       sound P \\<Longrightarrow>\n       \\<lambda>s.\n          0 \\<tturnstile> wp (body ;;\n                              Embed\n                               (\\<lambda>P s.\n                                   0) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                           P", "with hb"], ["proof (chain)\npicking this:\n  healthy (wp body)\n  sound P", "have \"sound (wp (body ;; Embed (\\<lambda>P s. 0) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) P)\""], ["proof (prove)\nusing this:\n  healthy (wp body)\n  sound P\n\ngoal (1 subgoal):\n 1. sound\n     (wp (body ;;\n          Embed\n           (\\<lambda>P s.\n               0) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n       P)", "by(auto intro!:wp_loop_step_sound)"], ["proof (state)\nthis:\n  sound\n   (wp (body ;;\n        Embed\n         (\\<lambda>P s.\n             0) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     P)\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       sound P \\<Longrightarrow>\n       \\<lambda>s.\n          0 \\<tturnstile> wp (body ;;\n                              Embed\n                               (\\<lambda>P s.\n                                   0) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                           P", "thus \"\\<lambda>s. 0 \\<tturnstile> wp (body ;; Embed (\\<lambda>P s. 0) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) P\""], ["proof (prove)\nusing this:\n  sound\n   (wp (body ;;\n        Embed\n         (\\<lambda>P s.\n             0) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     P)\n\ngoal (1 subgoal):\n 1. \\<lambda>s.\n       0 \\<tturnstile> wp (body ;;\n                           Embed\n                            (\\<lambda>P s.\n                                0) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                        P", "by(auto)"], ["proof (state)\nthis:\n  \\<lambda>s.\n     0 \\<tturnstile> wp (body ;;\n                         Embed\n                          (\\<lambda>P s.\n                              0) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                      P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  le_trans (iterates body G 0) (iterates body G (Suc 0))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       le_trans (iterates body G i)\n        (iterates body G (Suc i)) \\<Longrightarrow>\n       le_trans (iterates body G (Suc i)) (iterates body G (Suc (Suc i)))", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       le_trans (iterates body G i)\n        (iterates body G (Suc i)) \\<Longrightarrow>\n       le_trans (iterates body G (Suc i)) (iterates body G (Suc (Suc i)))", "assume IH: \"le_trans (iterates body G i) (iterates body G (Suc i))\""], ["proof (state)\nthis:\n  le_trans (iterates body G i) (iterates body G (Suc i))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       le_trans (iterates body G i)\n        (iterates body G (Suc i)) \\<Longrightarrow>\n       le_trans (iterates body G (Suc i)) (iterates body G (Suc (Suc i)))", "have \"equiv_trans (iterates body G (Suc i))\n                    (wp (body ;; Embed (iterates body G i) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. equiv_trans (iterates body G (Suc i))\n     (wp (body ;;\n          Embed\n           (iterates body G\n             i) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "by(simp)"], ["proof (state)\nthis:\n  equiv_trans (iterates body G (Suc i))\n   (wp (body ;;\n        Embed\n         (iterates body G\n           i) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       le_trans (iterates body G i)\n        (iterates body G (Suc i)) \\<Longrightarrow>\n       le_trans (iterates body G (Suc i)) (iterates body G (Suc (Suc i)))", "also"], ["proof (state)\nthis:\n  equiv_trans (iterates body G (Suc i))\n   (wp (body ;;\n        Embed\n         (iterates body G\n           i) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       le_trans (iterates body G i)\n        (iterates body G (Suc i)) \\<Longrightarrow>\n       le_trans (iterates body G (Suc i)) (iterates body G (Suc (Suc i)))", "from iterates_healthy[OF hb]"], ["proof (chain)\npicking this:\n  healthy (iterates body ?G ?i)", "have \"le_trans ... (wp (body ;; Embed (iterates body G (Suc i)) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\""], ["proof (prove)\nusing this:\n  healthy (iterates body ?G ?i)\n\ngoal (1 subgoal):\n 1. le_trans\n     (wp (body ;;\n          Embed\n           (iterates body G\n             i) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     (wp (body ;;\n          Embed\n           (iterates body G\n             (Suc i)) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "by(blast intro:wp_loop_step_mono[OF hb IH])"], ["proof (state)\nthis:\n  le_trans\n   (wp (body ;;\n        Embed\n         (iterates body G\n           i) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n   (wp (body ;;\n        Embed\n         (iterates body G\n           (Suc i)) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       le_trans (iterates body G i)\n        (iterates body G (Suc i)) \\<Longrightarrow>\n       le_trans (iterates body G (Suc i)) (iterates body G (Suc (Suc i)))", "also"], ["proof (state)\nthis:\n  le_trans\n   (wp (body ;;\n        Embed\n         (iterates body G\n           i) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n   (wp (body ;;\n        Embed\n         (iterates body G\n           (Suc i)) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       le_trans (iterates body G i)\n        (iterates body G (Suc i)) \\<Longrightarrow>\n       le_trans (iterates body G (Suc i)) (iterates body G (Suc (Suc i)))", "have \"equiv_trans ... (iterates body G (Suc (Suc i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. equiv_trans\n     (wp (body ;;\n          Embed\n           (iterates body G\n             (Suc i)) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     (iterates body G (Suc (Suc i)))", "by(simp)"], ["proof (state)\nthis:\n  equiv_trans\n   (wp (body ;;\n        Embed\n         (iterates body G\n           (Suc i)) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n   (iterates body G (Suc (Suc i)))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       le_trans (iterates body G i)\n        (iterates body G (Suc i)) \\<Longrightarrow>\n       le_trans (iterates body G (Suc i)) (iterates body G (Suc (Suc i)))", "finally"], ["proof (chain)\npicking this:\n  le_trans (iterates body G (Suc i)) (iterates body G (Suc (Suc i)))", "show \"le_trans (iterates body G (Suc i)) (iterates body G (Suc (Suc i)))\""], ["proof (prove)\nusing this:\n  le_trans (iterates body G (Suc i)) (iterates body G (Suc (Suc i)))\n\ngoal (1 subgoal):\n 1. le_trans (iterates body G (Suc i)) (iterates body G (Suc (Suc i)))", "."], ["proof (state)\nthis:\n  le_trans (iterates body G (Suc i)) (iterates body G (Suc (Suc i)))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wp_loop_step_bounded:\n  fixes t::\"'s trans\" and Q::\"'s expect\"\n  assumes nQ: \"nneg Q\"\n      and bQ: \"bounded_by b Q\"\n      and ht: \"healthy t\"\n      and hb: \"healthy (wp body)\"\n  shows \"bounded_by b (wp (body ;; Embed t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bounded_by b\n     (wp (body ;;\n          Embed\n           t \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n       Q)", "proof(rule bounded_byI, simp add:wp_eval)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t Q) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * Q x\n       \\<le> b", "fix s::'s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t Q) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * Q x\n       \\<le> b", "from nQ bQ"], ["proof (chain)\npicking this:\n  nneg Q\n  bounded_by b Q", "have sQ: \"sound Q\""], ["proof (prove)\nusing this:\n  nneg Q\n  bounded_by b Q\n\ngoal (1 subgoal):\n 1. sound Q", "by(auto)"], ["proof (state)\nthis:\n  sound Q\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t Q) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * Q x\n       \\<le> b", "with bQ ht"], ["proof (chain)\npicking this:\n  bounded_by b Q\n  healthy t\n  sound Q", "have \"sound (t Q)\" \"bounded_by b (t Q)\""], ["proof (prove)\nusing this:\n  bounded_by b Q\n  healthy t\n  sound Q\n\ngoal (1 subgoal):\n 1. sound (t Q) &&& bounded_by b (t Q)", "by(auto)"], ["proof (state)\nthis:\n  sound (t Q)\n  bounded_by b (t Q)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t Q) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * Q x\n       \\<le> b", "with hb"], ["proof (chain)\npicking this:\n  healthy (wp body)\n  sound (t Q)\n  bounded_by b (t Q)", "have \"bounded_by b (wp body (t Q))\""], ["proof (prove)\nusing this:\n  healthy (wp body)\n  sound (t Q)\n  bounded_by b (t Q)\n\ngoal (1 subgoal):\n 1. bounded_by b (wp body (t Q))", "by(auto)"], ["proof (state)\nthis:\n  bounded_by b (wp body (t Q))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t Q) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * Q x\n       \\<le> b", "with bQ"], ["proof (chain)\npicking this:\n  bounded_by b Q\n  bounded_by b (wp body (t Q))", "have \"wp body (t Q) s \\<le> b\" \"Q s \\<le> b\""], ["proof (prove)\nusing this:\n  bounded_by b Q\n  bounded_by b (wp body (t Q))\n\ngoal (1 subgoal):\n 1. wp body (t Q) s \\<le> b &&& Q s \\<le> b", "by(auto)"], ["proof (state)\nthis:\n  wp body (t Q) s \\<le> b\n  Q s \\<le> b\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t Q) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * Q x\n       \\<le> b", "hence \"\\<guillemotleft>G\\<guillemotright> s * wp body (t Q) s + (1-\\<guillemotleft>G\\<guillemotright> s) * Q s \\<le>\n         \\<guillemotleft>G\\<guillemotright> s * b + (1-\\<guillemotleft>G\\<guillemotright> s) * b\""], ["proof (prove)\nusing this:\n  wp body (t Q) s \\<le> b\n  Q s \\<le> b\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wp body (t Q) s +\n    (1 - \\<guillemotleft> G \\<guillemotright> s) * Q s\n    \\<le> \\<guillemotleft> G \\<guillemotright> s * b +\n          (1 - \\<guillemotleft> G \\<guillemotright> s) * b", "by(auto intro:add_mono mult_left_mono)"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wp body (t Q) s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * Q s\n  \\<le> \\<guillemotleft> G \\<guillemotright> s * b +\n        (1 - \\<guillemotleft> G \\<guillemotright> s) * b\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t Q) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * Q x\n       \\<le> b", "also"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wp body (t Q) s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * Q s\n  \\<le> \\<guillemotleft> G \\<guillemotright> s * b +\n        (1 - \\<guillemotleft> G \\<guillemotright> s) * b\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t Q) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * Q x\n       \\<le> b", "have \"... = b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * b +\n    (1 - \\<guillemotleft> G \\<guillemotright> s) * b =\n    b", "by(simp add:algebra_simps)"], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * b +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * b =\n  b\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<guillemotleft> G \\<guillemotright> x * wp body (t Q) x +\n       (1 - \\<guillemotleft> G \\<guillemotright> x) * Q x\n       \\<le> b", "finally"], ["proof (chain)\npicking this:\n  \\<guillemotleft> G \\<guillemotright> s * wp body (t Q) s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * Q s\n  \\<le> b", "show \"\\<guillemotleft>G\\<guillemotright> s * wp body (t Q) s + (1-\\<guillemotleft>G\\<guillemotright> s) * Q s \\<le> b\""], ["proof (prove)\nusing this:\n  \\<guillemotleft> G \\<guillemotright> s * wp body (t Q) s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * Q s\n  \\<le> b\n\ngoal (1 subgoal):\n 1. \\<guillemotleft> G \\<guillemotright> s * wp body (t Q) s +\n    (1 - \\<guillemotleft> G \\<guillemotright> s) * Q s\n    \\<le> b", "."], ["proof (state)\nthis:\n  \\<guillemotleft> G \\<guillemotright> s * wp body (t Q) s +\n  (1 - \\<guillemotleft> G \\<guillemotright> s) * Q s\n  \\<le> b\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>This is the key result: The loop is equivalent to the supremum of its iterates.  This\nproof follows the pattern of lemma continuous\\_lfp in HOL/Library/Continuity.\\<close>"], ["", "lemma lfp_iterates:\n  fixes body::\"'s prog\"\n  assumes hb: \"healthy (wp body)\"\n      and cb: \"bd_cts (wp body)\"\n  shows \"equiv_trans (wp (do G \\<longrightarrow> body od)) (Sup_trans (range (iterates body G)))\"\n        (is \"equiv_trans ?X ?Y\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. equiv_trans\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     (Sup_trans (range (iterates body G)))", "proof(rule le_trans_antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. le_trans\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     (Sup_trans (range (iterates body G)))\n 2. le_trans (Sup_trans (range (iterates body G)))\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "let ?F = \"\\<lambda>x. wp (body ;; Embed x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\""], ["proof (state)\ngoal (2 subgoals):\n 1. le_trans\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     (Sup_trans (range (iterates body G)))\n 2. le_trans (Sup_trans (range (iterates body G)))\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "let ?bot = \"\\<lambda>(P::'s \\<Rightarrow> real) s::'s. 0::real\""], ["proof (state)\ngoal (2 subgoals):\n 1. le_trans\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     (Sup_trans (range (iterates body G)))\n 2. le_trans (Sup_trans (range (iterates body G)))\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "have HF: \"\\<And>i. healthy ((?F ^^ i) ?bot)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       healthy\n        (((\\<lambda>x.\n              wp (body ;;\n                  Embed\n                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n          i)\n          (\\<lambda>P s. 0))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       healthy\n        (((\\<lambda>x.\n              wp (body ;;\n                  Embed\n                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n          i)\n          (\\<lambda>P s. 0))", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       healthy\n        (((\\<lambda>x.\n              wp (body ;;\n                  Embed\n                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n          i)\n          (\\<lambda>P s. 0))", "from hb"], ["proof (chain)\npicking this:\n  healthy (wp body)", "show \"(?thesis i)\""], ["proof (prove)\nusing this:\n  healthy (wp body)\n\ngoal (1 subgoal):\n 1. healthy\n     (((\\<lambda>x.\n           wp (body ;;\n               Embed\n                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n       i)\n       (\\<lambda>P s. 0))", "by(induct i, simp_all add:healthy_intros)"], ["proof (state)\nthis:\n  healthy\n   (((\\<lambda>x.\n         wp (body ;;\n             Embed\n              x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n     i)\n     (\\<lambda>P s. 0))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  healthy\n   (((\\<lambda>x.\n         wp (body ;;\n             Embed\n              x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n     ?i)\n     (\\<lambda>P s. 0))\n\ngoal (2 subgoals):\n 1. le_trans\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     (Sup_trans (range (iterates body G)))\n 2. le_trans (Sup_trans (range (iterates body G)))\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "from iterates_healthy[OF hb]"], ["proof (chain)\npicking this:\n  healthy (iterates body ?G ?i)", "have \"\\<And>i. feasible (iterates body G i)\""], ["proof (prove)\nusing this:\n  healthy (iterates body ?G ?i)\n\ngoal (1 subgoal):\n 1. \\<And>i. feasible (iterates body G i)", "by(auto)"], ["proof (state)\nthis:\n  feasible (iterates body G ?i)\n\ngoal (2 subgoals):\n 1. le_trans\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     (Sup_trans (range (iterates body G)))\n 2. le_trans (Sup_trans (range (iterates body G)))\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "hence fSup: \"feasible (Sup_trans (range (iterates body G)))\""], ["proof (prove)\nusing this:\n  feasible (iterates body G ?i)\n\ngoal (1 subgoal):\n 1. feasible (Sup_trans (range (iterates body G)))", "by(auto intro:feasible_Sup_trans)"], ["proof (state)\nthis:\n  feasible (Sup_trans (range (iterates body G)))\n\ngoal (2 subgoals):\n 1. le_trans\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     (Sup_trans (range (iterates body G)))\n 2. le_trans (Sup_trans (range (iterates body G)))\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "{"], ["proof (state)\nthis:\n  feasible (Sup_trans (range (iterates body G)))\n\ngoal (2 subgoals):\n 1. le_trans\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     (Sup_trans (range (iterates body G)))\n 2. le_trans (Sup_trans (range (iterates body G)))\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "fix i"], ["proof (state)\ngoal (2 subgoals):\n 1. le_trans\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     (Sup_trans (range (iterates body G)))\n 2. le_trans (Sup_trans (range (iterates body G)))\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "have \"le_trans ((?F ^^ i) ?bot) ?X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. le_trans\n     (((\\<lambda>x.\n           wp (body ;;\n               Embed\n                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n       i)\n       (\\<lambda>P s. 0))\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "proof(induct i)"], ["proof (state)\ngoal (2 subgoals):\n 1. le_trans\n     (((\\<lambda>x.\n           wp (body ;;\n               Embed\n                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n       0)\n       (\\<lambda>P s. 0))\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n 2. \\<And>i.\n       le_trans\n        (((\\<lambda>x.\n              wp (body ;;\n                  Embed\n                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n          i)\n          (\\<lambda>P s. 0))\n        (wp (\\<mu>x.\n                body ;;\n                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) \\<Longrightarrow>\n       le_trans\n        (((\\<lambda>x.\n              wp (body ;;\n                  Embed\n                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n          Suc i)\n          (\\<lambda>P s. 0))\n        (wp (\\<mu>x.\n                body ;;\n                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "show \"le_trans ((?F ^^ 0) ?bot) ?X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. le_trans\n     (((\\<lambda>x.\n           wp (body ;;\n               Embed\n                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n       0)\n       (\\<lambda>P s. 0))\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "proof(simp, intro le_transI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P.\n       sound P \\<Longrightarrow>\n       \\<lambda>s.\n          0 \\<tturnstile> wp (\\<mu>x.\n                                 body ;;\n                                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                           P", "fix P::\"'s expect\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P.\n       sound P \\<Longrightarrow>\n       \\<lambda>s.\n          0 \\<tturnstile> wp (\\<mu>x.\n                                 body ;;\n                                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                           P", "assume \"sound P\""], ["proof (state)\nthis:\n  sound P\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       sound P \\<Longrightarrow>\n       \\<lambda>s.\n          0 \\<tturnstile> wp (\\<mu>x.\n                                 body ;;\n                                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                           P", "with hb healthy_wp_loop"], ["proof (chain)\npicking this:\n  healthy (wp body)\n  healthy (wp ?body) \\<Longrightarrow>\n  healthy\n   (wp (\\<mu>x.\n           ?body ;;\n           x \\<^bsub>\\<guillemotleft> ?G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n  sound P", "have \"sound (wp (\\<mu> x. body ;; x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) P)\""], ["proof (prove)\nusing this:\n  healthy (wp body)\n  healthy (wp ?body) \\<Longrightarrow>\n  healthy\n   (wp (\\<mu>x.\n           ?body ;;\n           x \\<^bsub>\\<guillemotleft> ?G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n  sound P\n\ngoal (1 subgoal):\n 1. sound\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n       P)", "by(auto)"], ["proof (state)\nthis:\n  sound\n   (wp (\\<mu>x.\n           body ;;\n           x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     P)\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       sound P \\<Longrightarrow>\n       \\<lambda>s.\n          0 \\<tturnstile> wp (\\<mu>x.\n                                 body ;;\n                                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                           P", "thus \"\\<lambda>s. 0 \\<tturnstile> wp (\\<mu> x. body ;; x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) P\""], ["proof (prove)\nusing this:\n  sound\n   (wp (\\<mu>x.\n           body ;;\n           x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     P)\n\ngoal (1 subgoal):\n 1. \\<lambda>s.\n       0 \\<tturnstile> wp (\\<mu>x.\n                              body ;;\n                              x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                        P", "by(auto)"], ["proof (state)\nthis:\n  \\<lambda>s.\n     0 \\<tturnstile> wp (\\<mu>x.\n                            body ;;\n                            x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                      P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  le_trans\n   (((\\<lambda>x.\n         wp (body ;;\n             Embed\n              x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n     0)\n     (\\<lambda>P s. 0))\n   (wp (\\<mu>x.\n           body ;;\n           x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       le_trans\n        (((\\<lambda>x.\n              wp (body ;;\n                  Embed\n                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n          i)\n          (\\<lambda>P s. 0))\n        (wp (\\<mu>x.\n                body ;;\n                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) \\<Longrightarrow>\n       le_trans\n        (((\\<lambda>x.\n              wp (body ;;\n                  Embed\n                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n          Suc i)\n          (\\<lambda>P s. 0))\n        (wp (\\<mu>x.\n                body ;;\n                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       le_trans\n        (((\\<lambda>x.\n              wp (body ;;\n                  Embed\n                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n          i)\n          (\\<lambda>P s. 0))\n        (wp (\\<mu>x.\n                body ;;\n                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) \\<Longrightarrow>\n       le_trans\n        (((\\<lambda>x.\n              wp (body ;;\n                  Embed\n                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n          Suc i)\n          (\\<lambda>P s. 0))\n        (wp (\\<mu>x.\n                body ;;\n                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "assume IH: \"le_trans ((?F ^^ i) ?bot) ?X\""], ["proof (state)\nthis:\n  le_trans\n   (((\\<lambda>x.\n         wp (body ;;\n             Embed\n              x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n     i)\n     (\\<lambda>P s. 0))\n   (wp (\\<mu>x.\n           body ;;\n           x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       le_trans\n        (((\\<lambda>x.\n              wp (body ;;\n                  Embed\n                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n          i)\n          (\\<lambda>P s. 0))\n        (wp (\\<mu>x.\n                body ;;\n                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) \\<Longrightarrow>\n       le_trans\n        (((\\<lambda>x.\n              wp (body ;;\n                  Embed\n                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n          Suc i)\n          (\\<lambda>P s. 0))\n        (wp (\\<mu>x.\n                body ;;\n                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "have \"equiv_trans ((?F ^^ (Suc i)) ?bot) (?F ((?F ^^ i) ?bot))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. equiv_trans\n     (((\\<lambda>x.\n           wp (body ;;\n               Embed\n                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n       Suc i)\n       (\\<lambda>P s. 0))\n     (wp (body ;;\n          Embed\n           (((\\<lambda>x.\n                 wp (body ;;\n                     Embed\n                      x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n             i)\n             (\\<lambda>P s.\n                 0)) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "by(simp)"], ["proof (state)\nthis:\n  equiv_trans\n   (((\\<lambda>x.\n         wp (body ;;\n             Embed\n              x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n     Suc i)\n     (\\<lambda>P s. 0))\n   (wp (body ;;\n        Embed\n         (((\\<lambda>x.\n               wp (body ;;\n                   Embed\n                    x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n           i)\n           (\\<lambda>P s.\n               0)) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       le_trans\n        (((\\<lambda>x.\n              wp (body ;;\n                  Embed\n                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n          i)\n          (\\<lambda>P s. 0))\n        (wp (\\<mu>x.\n                body ;;\n                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) \\<Longrightarrow>\n       le_trans\n        (((\\<lambda>x.\n              wp (body ;;\n                  Embed\n                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n          Suc i)\n          (\\<lambda>P s. 0))\n        (wp (\\<mu>x.\n                body ;;\n                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "also"], ["proof (state)\nthis:\n  equiv_trans\n   (((\\<lambda>x.\n         wp (body ;;\n             Embed\n              x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n     Suc i)\n     (\\<lambda>P s. 0))\n   (wp (body ;;\n        Embed\n         (((\\<lambda>x.\n               wp (body ;;\n                   Embed\n                    x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n           i)\n           (\\<lambda>P s.\n               0)) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       le_trans\n        (((\\<lambda>x.\n              wp (body ;;\n                  Embed\n                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n          i)\n          (\\<lambda>P s. 0))\n        (wp (\\<mu>x.\n                body ;;\n                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) \\<Longrightarrow>\n       le_trans\n        (((\\<lambda>x.\n              wp (body ;;\n                  Embed\n                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n          Suc i)\n          (\\<lambda>P s. 0))\n        (wp (\\<mu>x.\n                body ;;\n                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "have \"le_trans ... (?F ?X)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. le_trans\n     (wp (body ;;\n          Embed\n           (((\\<lambda>x.\n                 wp (body ;;\n                     Embed\n                      x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n             i)\n             (\\<lambda>P s.\n                 0)) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     (wp (body ;;\n          Embed\n           (wp (\\<mu>x.\n                   body ;;\n                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "proof(rule wp_loop_step_mono[OF hb IH])"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P.\n       sound P \\<Longrightarrow>\n       sound\n        (((\\<lambda>x.\n              wp (body ;;\n                  Embed\n                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n          i)\n          (\\<lambda>P s. 0) P)\n 2. \\<And>P.\n       sound P \\<Longrightarrow>\n       sound\n        (wp (\\<mu>x.\n                body ;;\n                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n          P)", "fix P::\"'s expect\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>P.\n       sound P \\<Longrightarrow>\n       sound\n        (((\\<lambda>x.\n              wp (body ;;\n                  Embed\n                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n          i)\n          (\\<lambda>P s. 0) P)\n 2. \\<And>P.\n       sound P \\<Longrightarrow>\n       sound\n        (wp (\\<mu>x.\n                body ;;\n                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n          P)", "assume sP: \"sound P\""], ["proof (state)\nthis:\n  sound P\n\ngoal (2 subgoals):\n 1. \\<And>P.\n       sound P \\<Longrightarrow>\n       sound\n        (((\\<lambda>x.\n              wp (body ;;\n                  Embed\n                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n          i)\n          (\\<lambda>P s. 0) P)\n 2. \\<And>P.\n       sound P \\<Longrightarrow>\n       sound\n        (wp (\\<mu>x.\n                body ;;\n                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n          P)", "with hb healthy_wp_loop"], ["proof (chain)\npicking this:\n  healthy (wp body)\n  healthy (wp ?body) \\<Longrightarrow>\n  healthy\n   (wp (\\<mu>x.\n           ?body ;;\n           x \\<^bsub>\\<guillemotleft> ?G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n  sound P", "show \"sound (wp (\\<mu> x. body ;; x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) P)\""], ["proof (prove)\nusing this:\n  healthy (wp body)\n  healthy (wp ?body) \\<Longrightarrow>\n  healthy\n   (wp (\\<mu>x.\n           ?body ;;\n           x \\<^bsub>\\<guillemotleft> ?G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n  sound P\n\ngoal (1 subgoal):\n 1. sound\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n       P)", "by(auto)"], ["proof (state)\nthis:\n  sound\n   (wp (\\<mu>x.\n           body ;;\n           x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     P)\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       sound P \\<Longrightarrow>\n       sound\n        (((\\<lambda>x.\n              wp (body ;;\n                  Embed\n                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n          i)\n          (\\<lambda>P s. 0) P)", "from sP"], ["proof (chain)\npicking this:\n  sound P", "show \"sound ((?F ^^ i) ?bot P)\""], ["proof (prove)\nusing this:\n  sound P\n\ngoal (1 subgoal):\n 1. sound\n     (((\\<lambda>x.\n           wp (body ;;\n               Embed\n                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n       i)\n       (\\<lambda>P s. 0) P)", "by(rule healthy_sound[OF HF])"], ["proof (state)\nthis:\n  sound\n   (((\\<lambda>x.\n         wp (body ;;\n             Embed\n              x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n     i)\n     (\\<lambda>P s. 0) P)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  le_trans\n   (wp (body ;;\n        Embed\n         (((\\<lambda>x.\n               wp (body ;;\n                   Embed\n                    x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n           i)\n           (\\<lambda>P s.\n               0)) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n   (wp (body ;;\n        Embed\n         (wp (\\<mu>x.\n                 body ;;\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       le_trans\n        (((\\<lambda>x.\n              wp (body ;;\n                  Embed\n                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n          i)\n          (\\<lambda>P s. 0))\n        (wp (\\<mu>x.\n                body ;;\n                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) \\<Longrightarrow>\n       le_trans\n        (((\\<lambda>x.\n              wp (body ;;\n                  Embed\n                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n          Suc i)\n          (\\<lambda>P s. 0))\n        (wp (\\<mu>x.\n                body ;;\n                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "also"], ["proof (state)\nthis:\n  le_trans\n   (wp (body ;;\n        Embed\n         (((\\<lambda>x.\n               wp (body ;;\n                   Embed\n                    x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n           i)\n           (\\<lambda>P s.\n               0)) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n   (wp (body ;;\n        Embed\n         (wp (\\<mu>x.\n                 body ;;\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       le_trans\n        (((\\<lambda>x.\n              wp (body ;;\n                  Embed\n                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n          i)\n          (\\<lambda>P s. 0))\n        (wp (\\<mu>x.\n                body ;;\n                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) \\<Longrightarrow>\n       le_trans\n        (((\\<lambda>x.\n              wp (body ;;\n                  Embed\n                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n          Suc i)\n          (\\<lambda>P s. 0))\n        (wp (\\<mu>x.\n                body ;;\n                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "{"], ["proof (state)\nthis:\n  le_trans\n   (wp (body ;;\n        Embed\n         (((\\<lambda>x.\n               wp (body ;;\n                   Embed\n                    x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n           i)\n           (\\<lambda>P s.\n               0)) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n   (wp (body ;;\n        Embed\n         (wp (\\<mu>x.\n                 body ;;\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       le_trans\n        (((\\<lambda>x.\n              wp (body ;;\n                  Embed\n                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n          i)\n          (\\<lambda>P s. 0))\n        (wp (\\<mu>x.\n                body ;;\n                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) \\<Longrightarrow>\n       le_trans\n        (((\\<lambda>x.\n              wp (body ;;\n                  Embed\n                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n          Suc i)\n          (\\<lambda>P s. 0))\n        (wp (\\<mu>x.\n                body ;;\n                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "from hb"], ["proof (chain)\npicking this:\n  healthy (wp body)", "have X: \"le_trans (wp (body ;; Embed (\\<lambda>P s. bound_of P) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n                                 (\\<lambda>P s. bound_of P)\""], ["proof (prove)\nusing this:\n  healthy (wp body)\n\ngoal (1 subgoal):\n 1. le_trans\n     (wp (body ;;\n          Embed\n           (\\<lambda>P s.\n               bound_of\n                P) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     (\\<lambda>P s. bound_of P)", "by(intro le_transI, simp add:wp_eval, auto intro: lfp_loop_fp[unfolded negate_embed])"], ["proof (state)\nthis:\n  le_trans\n   (wp (body ;;\n        Embed\n         (\\<lambda>P s.\n             bound_of\n              P) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n   (\\<lambda>P s. bound_of P)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       le_trans\n        (((\\<lambda>x.\n              wp (body ;;\n                  Embed\n                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n          i)\n          (\\<lambda>P s. 0))\n        (wp (\\<mu>x.\n                body ;;\n                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) \\<Longrightarrow>\n       le_trans\n        (((\\<lambda>x.\n              wp (body ;;\n                  Embed\n                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n          Suc i)\n          (\\<lambda>P s. 0))\n        (wp (\\<mu>x.\n                body ;;\n                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "have \"equiv_trans (?F ?X) ?X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. equiv_trans\n     (wp (body ;;\n          Embed\n           (wp (\\<mu>x.\n                   body ;;\n                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "apply (simp only: wp_eval)"], ["proof (prove)\ngoal (1 subgoal):\n 1. equiv_trans\n     (wp (body ;;\n          Embed\n           (lfp_trans\n             (\\<lambda>x.\n                 wp (body ;;\n                     Embed\n                      x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     (lfp_trans\n       (\\<lambda>x.\n           wp (body ;;\n               Embed\n                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)))", "by(intro iffD1[OF equiv_trans_comm, OF lfp_trans_unfold]\n                 wp_loop_step_mono[OF hb] wp_loop_step_sound[OF hb], (blast|rule X)+)"], ["proof (state)\nthis:\n  equiv_trans\n   (wp (body ;;\n        Embed\n         (wp (\\<mu>x.\n                 body ;;\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n   (wp (\\<mu>x.\n           body ;;\n           x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       le_trans\n        (((\\<lambda>x.\n              wp (body ;;\n                  Embed\n                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n          i)\n          (\\<lambda>P s. 0))\n        (wp (\\<mu>x.\n                body ;;\n                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) \\<Longrightarrow>\n       le_trans\n        (((\\<lambda>x.\n              wp (body ;;\n                  Embed\n                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n          Suc i)\n          (\\<lambda>P s. 0))\n        (wp (\\<mu>x.\n                body ;;\n                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "}"], ["proof (state)\nthis:\n  equiv_trans\n   (wp (body ;;\n        Embed\n         (wp (\\<mu>x.\n                 body ;;\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n   (wp (\\<mu>x.\n           body ;;\n           x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       le_trans\n        (((\\<lambda>x.\n              wp (body ;;\n                  Embed\n                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n          i)\n          (\\<lambda>P s. 0))\n        (wp (\\<mu>x.\n                body ;;\n                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) \\<Longrightarrow>\n       le_trans\n        (((\\<lambda>x.\n              wp (body ;;\n                  Embed\n                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n          Suc i)\n          (\\<lambda>P s. 0))\n        (wp (\\<mu>x.\n                body ;;\n                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "finally"], ["proof (chain)\npicking this:\n  le_trans\n   (((\\<lambda>x.\n         wp (body ;;\n             Embed\n              x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n     Suc i)\n     (\\<lambda>P s. 0))\n   (wp (\\<mu>x.\n           body ;;\n           x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "show \"le_trans ((?F ^^ (Suc i)) ?bot) ?X\""], ["proof (prove)\nusing this:\n  le_trans\n   (((\\<lambda>x.\n         wp (body ;;\n             Embed\n              x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n     Suc i)\n     (\\<lambda>P s. 0))\n   (wp (\\<mu>x.\n           body ;;\n           x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal (1 subgoal):\n 1. le_trans\n     (((\\<lambda>x.\n           wp (body ;;\n               Embed\n                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n       Suc i)\n       (\\<lambda>P s. 0))\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "."], ["proof (state)\nthis:\n  le_trans\n   (((\\<lambda>x.\n         wp (body ;;\n             Embed\n              x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n     Suc i)\n     (\\<lambda>P s. 0))\n   (wp (\\<mu>x.\n           body ;;\n           x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  le_trans\n   (((\\<lambda>x.\n         wp (body ;;\n             Embed\n              x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n     i)\n     (\\<lambda>P s. 0))\n   (wp (\\<mu>x.\n           body ;;\n           x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal (2 subgoals):\n 1. le_trans\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     (Sup_trans (range (iterates body G)))\n 2. le_trans (Sup_trans (range (iterates body G)))\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "}"], ["proof (state)\nthis:\n  le_trans\n   (((\\<lambda>x.\n         wp (body ;;\n             Embed\n              x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n     ?i2)\n     (\\<lambda>P s. 0))\n   (wp (\\<mu>x.\n           body ;;\n           x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal (2 subgoals):\n 1. le_trans\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     (Sup_trans (range (iterates body G)))\n 2. le_trans (Sup_trans (range (iterates body G)))\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "hence \"\\<And>i. le_trans (iterates body G i) (wp do G \\<longrightarrow> body od)\""], ["proof (prove)\nusing this:\n  le_trans\n   (((\\<lambda>x.\n         wp (body ;;\n             Embed\n              x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) ^^\n     ?i2)\n     (\\<lambda>P s. 0))\n   (wp (\\<mu>x.\n           body ;;\n           x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       le_trans (iterates body G i)\n        (wp (\\<mu>x.\n                body ;;\n                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "by(simp add:iterates_def)"], ["proof (state)\nthis:\n  le_trans (iterates body G ?i)\n   (wp (\\<mu>x.\n           body ;;\n           x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal (2 subgoals):\n 1. le_trans\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     (Sup_trans (range (iterates body G)))\n 2. le_trans (Sup_trans (range (iterates body G)))\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "thus \"le_trans ?Y ?X\""], ["proof (prove)\nusing this:\n  le_trans (iterates body G ?i)\n   (wp (\\<mu>x.\n           body ;;\n           x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal (1 subgoal):\n 1. le_trans (Sup_trans (range (iterates body G)))\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "by(auto intro!:le_transI[OF Sup_trans_least2] sound_nneg\n                   healthy_sound[OF iterates_healthy, OF hb]\n                   healthy_bounded_byD[OF iterates_healthy, OF hb]\n                   healthy_sound[OF healthy_wp_loop] hb)"], ["proof (state)\nthis:\n  le_trans (Sup_trans (range (iterates body G)))\n   (wp (\\<mu>x.\n           body ;;\n           x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal (1 subgoal):\n 1. le_trans\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     (Sup_trans (range (iterates body G)))", "show \"le_trans ?X ?Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. le_trans\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     (Sup_trans (range (iterates body G)))", "proof(simp only: wp_eval, rule lfp_trans_lowerbound)"], ["proof (state)\ngoal (2 subgoals):\n 1. le_trans\n     (wp (body ;;\n          Embed\n           (Sup_trans\n             (range\n               (iterates body\n                 G))) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     (Sup_trans (range (iterates body G)))\n 2. \\<And>P.\n       sound P \\<Longrightarrow>\n       sound (Sup_trans (range (iterates body G)) P)", "from hb cb"], ["proof (chain)\npicking this:\n  healthy (wp body)\n  bd_cts (wp body)", "have \"bd_cts_tr ?F\""], ["proof (prove)\nusing this:\n  healthy (wp body)\n  bd_cts (wp body)\n\ngoal (1 subgoal):\n 1. bd_cts_tr\n     (\\<lambda>x.\n         wp (body ;;\n             Embed\n              x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "by(rule cts_wp_loopstep)"], ["proof (state)\nthis:\n  bd_cts_tr\n   (\\<lambda>x.\n       wp (body ;;\n           Embed\n            x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal (2 subgoals):\n 1. le_trans\n     (wp (body ;;\n          Embed\n           (Sup_trans\n             (range\n               (iterates body\n                 G))) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     (Sup_trans (range (iterates body G)))\n 2. \\<And>P.\n       sound P \\<Longrightarrow>\n       sound (Sup_trans (range (iterates body G)) P)", "with iterates_increasing[OF hb] iterates_healthy[OF hb]"], ["proof (chain)\npicking this:\n  le_trans (iterates body ?G ?i) (iterates body ?G (Suc ?i))\n  healthy (iterates body ?G ?i)\n  bd_cts_tr\n   (\\<lambda>x.\n       wp (body ;;\n           Embed\n            x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "have \"equiv_trans (?F ?Y) (Sup_trans (range (?F o (iterates body G))))\""], ["proof (prove)\nusing this:\n  le_trans (iterates body ?G ?i) (iterates body ?G (Suc ?i))\n  healthy (iterates body ?G ?i)\n  bd_cts_tr\n   (\\<lambda>x.\n       wp (body ;;\n           Embed\n            x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal (1 subgoal):\n 1. equiv_trans\n     (wp (body ;;\n          Embed\n           (Sup_trans\n             (range\n               (iterates body\n                 G))) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     (Sup_trans\n       (range\n         ((\\<lambda>x.\n              wp (body ;;\n                  Embed\n                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) \\<circ>\n          iterates body G)))", "by (auto intro!: healthy_feasibleD bd_cts_trD cong del: image_cong_simp)"], ["proof (state)\nthis:\n  equiv_trans\n   (wp (body ;;\n        Embed\n         (Sup_trans\n           (range\n             (iterates body\n               G))) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n   (Sup_trans\n     (range\n       ((\\<lambda>x.\n            wp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) \\<circ>\n        iterates body G)))\n\ngoal (2 subgoals):\n 1. le_trans\n     (wp (body ;;\n          Embed\n           (Sup_trans\n             (range\n               (iterates body\n                 G))) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     (Sup_trans (range (iterates body G)))\n 2. \\<And>P.\n       sound P \\<Longrightarrow>\n       sound (Sup_trans (range (iterates body G)) P)", "also"], ["proof (state)\nthis:\n  equiv_trans\n   (wp (body ;;\n        Embed\n         (Sup_trans\n           (range\n             (iterates body\n               G))) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n   (Sup_trans\n     (range\n       ((\\<lambda>x.\n            wp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) \\<circ>\n        iterates body G)))\n\ngoal (2 subgoals):\n 1. le_trans\n     (wp (body ;;\n          Embed\n           (Sup_trans\n             (range\n               (iterates body\n                 G))) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     (Sup_trans (range (iterates body G)))\n 2. \\<And>P.\n       sound P \\<Longrightarrow>\n       sound (Sup_trans (range (iterates body G)) P)", "have \"le_trans (Sup_trans (range (?F o (iterates body G)))) ?Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. le_trans\n     (Sup_trans\n       (range\n         ((\\<lambda>x.\n              wp (body ;;\n                  Embed\n                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) \\<circ>\n          iterates body G)))\n     (Sup_trans (range (iterates body G)))", "proof(rule le_transI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P.\n       sound P \\<Longrightarrow>\n       Sup_trans\n        (range\n          ((\\<lambda>x.\n               wp (body ;;\n                   Embed\n                    x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) \\<circ>\n           iterates body G))\n        P \\<tturnstile> Sup_trans (range (iterates body G)) P", "fix P::\"'s expect\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P.\n       sound P \\<Longrightarrow>\n       Sup_trans\n        (range\n          ((\\<lambda>x.\n               wp (body ;;\n                   Embed\n                    x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) \\<circ>\n           iterates body G))\n        P \\<tturnstile> Sup_trans (range (iterates body G)) P", "assume sP: \"sound P\""], ["proof (state)\nthis:\n  sound P\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       sound P \\<Longrightarrow>\n       Sup_trans\n        (range\n          ((\\<lambda>x.\n               wp (body ;;\n                   Embed\n                    x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) \\<circ>\n           iterates body G))\n        P \\<tturnstile> Sup_trans (range (iterates body G)) P", "show \"(Sup_trans (range (?F o (iterates body G)))) P \\<tturnstile> ?Y P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup_trans\n     (range\n       ((\\<lambda>x.\n            wp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) \\<circ>\n        iterates body G))\n     P \\<tturnstile> Sup_trans (range (iterates body G)) P", "proof(rule Sup_trans_least2, clarsimp)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>t P.\n       \\<lbrakk>nneg P; bounded_by ?b P\\<rbrakk>\n       \\<Longrightarrow> wp (body ;;\n                             Embed\n                              (iterates body G\n                                t) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          P \\<tturnstile> Sup_trans\n     (range (iterates body G)) P\n 2. \\<forall>u\\<in>range\n                    ((\\<lambda>x.\n                         wp (body ;;\n                             Embed\n                              x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) \\<circ>\n                     iterates body G).\n       \\<forall>P.\n          nneg P \\<and> bounded_by ?b P \\<longrightarrow>\n          nneg (u P) \\<and> bounded_by ?b (u P)\n 3. nneg P\n 4. bounded_by ?b P\n 5. \\<And>P.\n       \\<lbrakk>nneg P; bounded_by ?b P\\<rbrakk>\n       \\<Longrightarrow> nneg (Sup_trans (range (iterates body G)) P)", "show \"\\<forall>u\\<in>range ((\\<lambda>x. wp (body ;; Embed x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) \\<circ> iterates body G).\n              \\<forall>R. nneg R \\<and> bounded_by (bound_of P) R \\<longrightarrow>\n                  nneg (u R) \\<and> bounded_by (bound_of P) (u R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>u\\<in>range\n                    ((\\<lambda>x.\n                         wp (body ;;\n                             Embed\n                              x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) \\<circ>\n                     iterates body G).\n       \\<forall>R.\n          nneg R \\<and> bounded_by (bound_of P) R \\<longrightarrow>\n          nneg (u R) \\<and> bounded_by (bound_of P) (u R)", "proof(clarsimp, intro conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>u R.\n       \\<lbrakk>nneg R; bounded_by (bound_of P) R\\<rbrakk>\n       \\<Longrightarrow> nneg\n                          (wp (body ;;\n                               Embed\n                                (iterates body G\n                                  u) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                            R)\n 2. \\<And>u R.\n       \\<lbrakk>nneg R; bounded_by (bound_of P) R\\<rbrakk>\n       \\<Longrightarrow> bounded_by (bound_of P)\n                          (wp (body ;;\n                               Embed\n                                (iterates body G\n                                  u) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                            R)", "fix Q::\"'s expect\" and i"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>u R.\n       \\<lbrakk>nneg R; bounded_by (bound_of P) R\\<rbrakk>\n       \\<Longrightarrow> nneg\n                          (wp (body ;;\n                               Embed\n                                (iterates body G\n                                  u) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                            R)\n 2. \\<And>u R.\n       \\<lbrakk>nneg R; bounded_by (bound_of P) R\\<rbrakk>\n       \\<Longrightarrow> bounded_by (bound_of P)\n                          (wp (body ;;\n                               Embed\n                                (iterates body G\n                                  u) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                            R)", "assume nQ: \"nneg Q\" and bQ: \"bounded_by (bound_of P) Q\""], ["proof (state)\nthis:\n  nneg Q\n  bounded_by (bound_of P) Q\n\ngoal (2 subgoals):\n 1. \\<And>u R.\n       \\<lbrakk>nneg R; bounded_by (bound_of P) R\\<rbrakk>\n       \\<Longrightarrow> nneg\n                          (wp (body ;;\n                               Embed\n                                (iterates body G\n                                  u) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                            R)\n 2. \\<And>u R.\n       \\<lbrakk>nneg R; bounded_by (bound_of P) R\\<rbrakk>\n       \\<Longrightarrow> bounded_by (bound_of P)\n                          (wp (body ;;\n                               Embed\n                                (iterates body G\n                                  u) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                            R)", "hence \"sound Q\""], ["proof (prove)\nusing this:\n  nneg Q\n  bounded_by (bound_of P) Q\n\ngoal (1 subgoal):\n 1. sound Q", "by(auto)"], ["proof (state)\nthis:\n  sound Q\n\ngoal (2 subgoals):\n 1. \\<And>u R.\n       \\<lbrakk>nneg R; bounded_by (bound_of P) R\\<rbrakk>\n       \\<Longrightarrow> nneg\n                          (wp (body ;;\n                               Embed\n                                (iterates body G\n                                  u) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                            R)\n 2. \\<And>u R.\n       \\<lbrakk>nneg R; bounded_by (bound_of P) R\\<rbrakk>\n       \\<Longrightarrow> bounded_by (bound_of P)\n                          (wp (body ;;\n                               Embed\n                                (iterates body G\n                                  u) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                            R)", "moreover"], ["proof (state)\nthis:\n  sound Q\n\ngoal (2 subgoals):\n 1. \\<And>u R.\n       \\<lbrakk>nneg R; bounded_by (bound_of P) R\\<rbrakk>\n       \\<Longrightarrow> nneg\n                          (wp (body ;;\n                               Embed\n                                (iterates body G\n                                  u) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                            R)\n 2. \\<And>u R.\n       \\<lbrakk>nneg R; bounded_by (bound_of P) R\\<rbrakk>\n       \\<Longrightarrow> bounded_by (bound_of P)\n                          (wp (body ;;\n                               Embed\n                                (iterates body G\n                                  u) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                            R)", "from iterates_healthy[OF hb]"], ["proof (chain)\npicking this:\n  healthy (iterates body ?G ?i)", "have \"\\<And>P. sound P \\<Longrightarrow> sound (iterates body G i P)\""], ["proof (prove)\nusing this:\n  healthy (iterates body ?G ?i)\n\ngoal (1 subgoal):\n 1. \\<And>P. sound P \\<Longrightarrow> sound (iterates body G i P)", "by(auto)"], ["proof (state)\nthis:\n  sound ?P \\<Longrightarrow> sound (iterates body G i ?P)\n\ngoal (2 subgoals):\n 1. \\<And>u R.\n       \\<lbrakk>nneg R; bounded_by (bound_of P) R\\<rbrakk>\n       \\<Longrightarrow> nneg\n                          (wp (body ;;\n                               Embed\n                                (iterates body G\n                                  u) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                            R)\n 2. \\<And>u R.\n       \\<lbrakk>nneg R; bounded_by (bound_of P) R\\<rbrakk>\n       \\<Longrightarrow> bounded_by (bound_of P)\n                          (wp (body ;;\n                               Embed\n                                (iterates body G\n                                  u) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                            R)", "moreover"], ["proof (state)\nthis:\n  sound ?P \\<Longrightarrow> sound (iterates body G i ?P)\n\ngoal (2 subgoals):\n 1. \\<And>u R.\n       \\<lbrakk>nneg R; bounded_by (bound_of P) R\\<rbrakk>\n       \\<Longrightarrow> nneg\n                          (wp (body ;;\n                               Embed\n                                (iterates body G\n                                  u) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                            R)\n 2. \\<And>u R.\n       \\<lbrakk>nneg R; bounded_by (bound_of P) R\\<rbrakk>\n       \\<Longrightarrow> bounded_by (bound_of P)\n                          (wp (body ;;\n                               Embed\n                                (iterates body G\n                                  u) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                            R)", "note hb"], ["proof (state)\nthis:\n  healthy (wp body)\n\ngoal (2 subgoals):\n 1. \\<And>u R.\n       \\<lbrakk>nneg R; bounded_by (bound_of P) R\\<rbrakk>\n       \\<Longrightarrow> nneg\n                          (wp (body ;;\n                               Embed\n                                (iterates body G\n                                  u) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                            R)\n 2. \\<And>u R.\n       \\<lbrakk>nneg R; bounded_by (bound_of P) R\\<rbrakk>\n       \\<Longrightarrow> bounded_by (bound_of P)\n                          (wp (body ;;\n                               Embed\n                                (iterates body G\n                                  u) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                            R)", "ultimately"], ["proof (chain)\npicking this:\n  sound Q\n  sound ?P \\<Longrightarrow> sound (iterates body G i ?P)\n  healthy (wp body)", "have \"sound (wp (body ;; Embed (iterates body G i) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) Q)\""], ["proof (prove)\nusing this:\n  sound Q\n  sound ?P \\<Longrightarrow> sound (iterates body G i ?P)\n  healthy (wp body)\n\ngoal (1 subgoal):\n 1. sound\n     (wp (body ;;\n          Embed\n           (iterates body G\n             i) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n       Q)", "by(iprover intro:wp_loop_step_sound)"], ["proof (state)\nthis:\n  sound\n   (wp (body ;;\n        Embed\n         (iterates body G\n           i) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     Q)\n\ngoal (2 subgoals):\n 1. \\<And>u R.\n       \\<lbrakk>nneg R; bounded_by (bound_of P) R\\<rbrakk>\n       \\<Longrightarrow> nneg\n                          (wp (body ;;\n                               Embed\n                                (iterates body G\n                                  u) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                            R)\n 2. \\<And>u R.\n       \\<lbrakk>nneg R; bounded_by (bound_of P) R\\<rbrakk>\n       \\<Longrightarrow> bounded_by (bound_of P)\n                          (wp (body ;;\n                               Embed\n                                (iterates body G\n                                  u) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                            R)", "thus \"nneg (wp (body ;; Embed (iterates body G i) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) Q)\""], ["proof (prove)\nusing this:\n  sound\n   (wp (body ;;\n        Embed\n         (iterates body G\n           i) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     Q)\n\ngoal (1 subgoal):\n 1. nneg\n     (wp (body ;;\n          Embed\n           (iterates body G\n             i) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n       Q)", "by(auto)"], ["proof (state)\nthis:\n  nneg\n   (wp (body ;;\n        Embed\n         (iterates body G\n           i) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     Q)\n\ngoal (1 subgoal):\n 1. \\<And>u R.\n       \\<lbrakk>nneg R; bounded_by (bound_of P) R\\<rbrakk>\n       \\<Longrightarrow> bounded_by (bound_of P)\n                          (wp (body ;;\n                               Embed\n                                (iterates body G\n                                  u) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                            R)", "from nQ bQ iterates_healthy[OF hb] hb"], ["proof (chain)\npicking this:\n  nneg Q\n  bounded_by (bound_of P) Q\n  healthy (iterates body ?G ?i)\n  healthy (wp body)", "show \"bounded_by (bound_of P) (wp (body ;; Embed (iterates body G i) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) Q)\""], ["proof (prove)\nusing this:\n  nneg Q\n  bounded_by (bound_of P) Q\n  healthy (iterates body ?G ?i)\n  healthy (wp body)\n\ngoal (1 subgoal):\n 1. bounded_by (bound_of P)\n     (wp (body ;;\n          Embed\n           (iterates body G\n             i) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n       Q)", "by(rule wp_loop_step_bounded)"], ["proof (state)\nthis:\n  bounded_by (bound_of P)\n   (wp (body ;;\n        Embed\n         (iterates body G\n           i) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     Q)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>u\\<in>range\n                  ((\\<lambda>x.\n                       wp (body ;;\n                           Embed\n                            x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) \\<circ>\n                   iterates body G).\n     \\<forall>R.\n        nneg R \\<and> bounded_by (bound_of P) R \\<longrightarrow>\n        nneg (u R) \\<and> bounded_by (bound_of P) (u R)\n\ngoal (4 subgoals):\n 1. \\<And>t Pa.\n       \\<lbrakk>nneg Pa; bounded_by (bound_of P) Pa\\<rbrakk>\n       \\<Longrightarrow> wp (body ;;\n                             Embed\n                              (iterates body G\n                                t) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          Pa \\<tturnstile> Sup_trans\n      (range (iterates body G)) Pa\n 2. nneg P\n 3. bounded_by (bound_of P) P\n 4. \\<And>Pa.\n       \\<lbrakk>nneg Pa; bounded_by (bound_of P) Pa\\<rbrakk>\n       \\<Longrightarrow> nneg (Sup_trans (range (iterates body G)) Pa)", "from sP"], ["proof (chain)\npicking this:\n  sound P", "show \"nneg P\" \"bounded_by (bound_of P) P\""], ["proof (prove)\nusing this:\n  sound P\n\ngoal (1 subgoal):\n 1. nneg P &&& bounded_by (bound_of P) P", "by(auto)"], ["proof (state)\nthis:\n  nneg P\n  bounded_by (bound_of P) P\n\ngoal (2 subgoals):\n 1. \\<And>t Pa.\n       \\<lbrakk>nneg Pa; bounded_by (bound_of P) Pa\\<rbrakk>\n       \\<Longrightarrow> wp (body ;;\n                             Embed\n                              (iterates body G\n                                t) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          Pa \\<tturnstile> Sup_trans\n      (range (iterates body G)) Pa\n 2. \\<And>Pa.\n       \\<lbrakk>nneg Pa; bounded_by (bound_of P) Pa\\<rbrakk>\n       \\<Longrightarrow> nneg (Sup_trans (range (iterates body G)) Pa)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t Pa.\n       \\<lbrakk>nneg Pa; bounded_by (bound_of P) Pa\\<rbrakk>\n       \\<Longrightarrow> wp (body ;;\n                             Embed\n                              (iterates body G\n                                t) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          Pa \\<tturnstile> Sup_trans\n      (range (iterates body G)) Pa\n 2. \\<And>Pa.\n       \\<lbrakk>nneg Pa; bounded_by (bound_of P) Pa\\<rbrakk>\n       \\<Longrightarrow> nneg (Sup_trans (range (iterates body G)) Pa)", "fix Q::\"'s expect\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t Pa.\n       \\<lbrakk>nneg Pa; bounded_by (bound_of P) Pa\\<rbrakk>\n       \\<Longrightarrow> wp (body ;;\n                             Embed\n                              (iterates body G\n                                t) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          Pa \\<tturnstile> Sup_trans\n      (range (iterates body G)) Pa\n 2. \\<And>Pa.\n       \\<lbrakk>nneg Pa; bounded_by (bound_of P) Pa\\<rbrakk>\n       \\<Longrightarrow> nneg (Sup_trans (range (iterates body G)) Pa)", "assume nQ: \"nneg Q\" and bQ: \"bounded_by (bound_of P) Q\""], ["proof (state)\nthis:\n  nneg Q\n  bounded_by (bound_of P) Q\n\ngoal (2 subgoals):\n 1. \\<And>t Pa.\n       \\<lbrakk>nneg Pa; bounded_by (bound_of P) Pa\\<rbrakk>\n       \\<Longrightarrow> wp (body ;;\n                             Embed\n                              (iterates body G\n                                t) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          Pa \\<tturnstile> Sup_trans\n      (range (iterates body G)) Pa\n 2. \\<And>Pa.\n       \\<lbrakk>nneg Pa; bounded_by (bound_of P) Pa\\<rbrakk>\n       \\<Longrightarrow> nneg (Sup_trans (range (iterates body G)) Pa)", "hence \"sound Q\""], ["proof (prove)\nusing this:\n  nneg Q\n  bounded_by (bound_of P) Q\n\ngoal (1 subgoal):\n 1. sound Q", "by(auto)"], ["proof (state)\nthis:\n  sound Q\n\ngoal (2 subgoals):\n 1. \\<And>t Pa.\n       \\<lbrakk>nneg Pa; bounded_by (bound_of P) Pa\\<rbrakk>\n       \\<Longrightarrow> wp (body ;;\n                             Embed\n                              (iterates body G\n                                t) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          Pa \\<tturnstile> Sup_trans\n      (range (iterates body G)) Pa\n 2. \\<And>Pa.\n       \\<lbrakk>nneg Pa; bounded_by (bound_of P) Pa\\<rbrakk>\n       \\<Longrightarrow> nneg (Sup_trans (range (iterates body G)) Pa)", "with fSup"], ["proof (chain)\npicking this:\n  feasible (Sup_trans (range (iterates body G)))\n  sound Q", "have \"sound (Sup_trans (range (iterates body G)) Q)\""], ["proof (prove)\nusing this:\n  feasible (Sup_trans (range (iterates body G)))\n  sound Q\n\ngoal (1 subgoal):\n 1. sound (Sup_trans (range (iterates body G)) Q)", "by(auto)"], ["proof (state)\nthis:\n  sound (Sup_trans (range (iterates body G)) Q)\n\ngoal (2 subgoals):\n 1. \\<And>t Pa.\n       \\<lbrakk>nneg Pa; bounded_by (bound_of P) Pa\\<rbrakk>\n       \\<Longrightarrow> wp (body ;;\n                             Embed\n                              (iterates body G\n                                t) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          Pa \\<tturnstile> Sup_trans\n      (range (iterates body G)) Pa\n 2. \\<And>Pa.\n       \\<lbrakk>nneg Pa; bounded_by (bound_of P) Pa\\<rbrakk>\n       \\<Longrightarrow> nneg (Sup_trans (range (iterates body G)) Pa)", "thus \"nneg (Sup_trans (range (iterates body G)) Q)\""], ["proof (prove)\nusing this:\n  sound (Sup_trans (range (iterates body G)) Q)\n\ngoal (1 subgoal):\n 1. nneg (Sup_trans (range (iterates body G)) Q)", "by(auto)"], ["proof (state)\nthis:\n  nneg (Sup_trans (range (iterates body G)) Q)\n\ngoal (1 subgoal):\n 1. \\<And>t Pa.\n       \\<lbrakk>nneg Pa; bounded_by (bound_of P) Pa\\<rbrakk>\n       \\<Longrightarrow> wp (body ;;\n                             Embed\n                              (iterates body G\n                                t) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          Pa \\<tturnstile> Sup_trans\n      (range (iterates body G)) Pa", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t Pa.\n       \\<lbrakk>nneg Pa; bounded_by (bound_of P) Pa\\<rbrakk>\n       \\<Longrightarrow> wp (body ;;\n                             Embed\n                              (iterates body G\n                                t) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          Pa \\<tturnstile> Sup_trans\n      (range (iterates body G)) Pa", "show \"wp (body ;; Embed (iterates body G i) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) Q \\<tturnstile>\n              Sup_trans (range (iterates body G)) Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wp (body ;;\n        Embed\n         (iterates body G\n           i) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     Q \\<tturnstile> Sup_trans (range (iterates body G)) Q", "proof(rule Sup_trans_upper2[OF _ _ nQ bQ])"], ["proof (state)\ngoal (2 subgoals):\n 1. wp (body ;;\n        Embed\n         (iterates body G\n           i) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n    \\<in> range (iterates body G)\n 2. \\<forall>u\\<in>range (iterates body G).\n       \\<forall>Pa.\n          nneg Pa \\<and> bounded_by (bound_of P) Pa \\<longrightarrow>\n          nneg (u Pa) \\<and> bounded_by (bound_of P) (u Pa)", "from iterates_healthy[OF hb]"], ["proof (chain)\npicking this:\n  healthy (iterates body ?G ?i)", "show \"\\<forall>u\\<in>range (iterates body G).\n                \\<forall>R. nneg R \\<and> bounded_by (bound_of P) R \\<longrightarrow>\n                     nneg (u R) \\<and> bounded_by (bound_of P) (u R)\""], ["proof (prove)\nusing this:\n  healthy (iterates body ?G ?i)\n\ngoal (1 subgoal):\n 1. \\<forall>u\\<in>range (iterates body G).\n       \\<forall>R.\n          nneg R \\<and> bounded_by (bound_of P) R \\<longrightarrow>\n          nneg (u R) \\<and> bounded_by (bound_of P) (u R)", "by(auto)"], ["proof (state)\nthis:\n  \\<forall>u\\<in>range (iterates body G).\n     \\<forall>R.\n        nneg R \\<and> bounded_by (bound_of P) R \\<longrightarrow>\n        nneg (u R) \\<and> bounded_by (bound_of P) (u R)\n\ngoal (1 subgoal):\n 1. wp (body ;;\n        Embed\n         (iterates body G\n           i) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n    \\<in> range (iterates body G)", "have \"wp (body ;; Embed (iterates body G i) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) = iterates body G (Suc i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wp (body ;;\n        Embed\n         (iterates body G\n           i) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) =\n    iterates body G (Suc i)", "by(simp)"], ["proof (state)\nthis:\n  wp (body ;;\n      Embed\n       (iterates body G\n         i) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) =\n  iterates body G (Suc i)\n\ngoal (1 subgoal):\n 1. wp (body ;;\n        Embed\n         (iterates body G\n           i) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n    \\<in> range (iterates body G)", "also"], ["proof (state)\nthis:\n  wp (body ;;\n      Embed\n       (iterates body G\n         i) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) =\n  iterates body G (Suc i)\n\ngoal (1 subgoal):\n 1. wp (body ;;\n        Embed\n         (iterates body G\n           i) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n    \\<in> range (iterates body G)", "have \"... \\<in> range (iterates body G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. iterates body G (Suc i) \\<in> range (iterates body G)", "by(blast)"], ["proof (state)\nthis:\n  iterates body G (Suc i) \\<in> range (iterates body G)\n\ngoal (1 subgoal):\n 1. wp (body ;;\n        Embed\n         (iterates body G\n           i) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n    \\<in> range (iterates body G)", "finally"], ["proof (chain)\npicking this:\n  wp (body ;;\n      Embed\n       (iterates body G\n         i) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n  \\<in> range (iterates body G)", "show \"wp (body ;; Embed (iterates body G i) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) \\<in>\n                        range (iterates body G)\""], ["proof (prove)\nusing this:\n  wp (body ;;\n      Embed\n       (iterates body G\n         i) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n  \\<in> range (iterates body G)\n\ngoal (1 subgoal):\n 1. wp (body ;;\n        Embed\n         (iterates body G\n           i) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n    \\<in> range (iterates body G)", "."], ["proof (state)\nthis:\n  wp (body ;;\n      Embed\n       (iterates body G\n         i) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n  \\<in> range (iterates body G)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  wp (body ;;\n      Embed\n       (iterates body G\n         i) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n   Q \\<tturnstile> Sup_trans (range (iterates body G)) Q\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Sup_trans\n   (range\n     ((\\<lambda>x.\n          wp (body ;;\n              Embed\n               x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) \\<circ>\n      iterates body G))\n   P \\<tturnstile> Sup_trans (range (iterates body G)) P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  le_trans\n   (Sup_trans\n     (range\n       ((\\<lambda>x.\n            wp (body ;;\n                Embed\n                 x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)) \\<circ>\n        iterates body G)))\n   (Sup_trans (range (iterates body G)))\n\ngoal (2 subgoals):\n 1. le_trans\n     (wp (body ;;\n          Embed\n           (Sup_trans\n             (range\n               (iterates body\n                 G))) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     (Sup_trans (range (iterates body G)))\n 2. \\<And>P.\n       sound P \\<Longrightarrow>\n       sound (Sup_trans (range (iterates body G)) P)", "finally"], ["proof (chain)\npicking this:\n  le_trans\n   (wp (body ;;\n        Embed\n         (Sup_trans\n           (range\n             (iterates body\n               G))) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n   (Sup_trans (range (iterates body G)))", "show \"le_trans (?F ?Y) ?Y\""], ["proof (prove)\nusing this:\n  le_trans\n   (wp (body ;;\n        Embed\n         (Sup_trans\n           (range\n             (iterates body\n               G))) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n   (Sup_trans (range (iterates body G)))\n\ngoal (1 subgoal):\n 1. le_trans\n     (wp (body ;;\n          Embed\n           (Sup_trans\n             (range\n               (iterates body\n                 G))) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n     (Sup_trans (range (iterates body G)))", "."], ["proof (state)\nthis:\n  le_trans\n   (wp (body ;;\n        Embed\n         (Sup_trans\n           (range\n             (iterates body\n               G))) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n   (Sup_trans (range (iterates body G)))\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       sound P \\<Longrightarrow>\n       sound (Sup_trans (range (iterates body G)) P)", "fix P::\"'s expect\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>P.\n       sound P \\<Longrightarrow>\n       sound (Sup_trans (range (iterates body G)) P)", "assume \"sound P\""], ["proof (state)\nthis:\n  sound P\n\ngoal (1 subgoal):\n 1. \\<And>P.\n       sound P \\<Longrightarrow>\n       sound (Sup_trans (range (iterates body G)) P)", "with fSup"], ["proof (chain)\npicking this:\n  feasible (Sup_trans (range (iterates body G)))\n  sound P", "show \"sound (?Y P)\""], ["proof (prove)\nusing this:\n  feasible (Sup_trans (range (iterates body G)))\n  sound P\n\ngoal (1 subgoal):\n 1. sound (Sup_trans (range (iterates body G)) P)", "by(auto)"], ["proof (state)\nthis:\n  sound (Sup_trans (range (iterates body G)) P)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  le_trans\n   (wp (\\<mu>x.\n           body ;;\n           x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n   (Sup_trans (range (iterates body G)))\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Therefore, evaluated at a given point (state), the sequence of iterates gives a sequence\nof real values that converges on that of the loop itself.\\<close>"], ["", "corollary loop_iterates:\n  fixes body::\"'s prog\"\n  assumes hb: \"healthy (wp body)\"\n      and cb: \"bd_cts (wp body)\"\n      and sP: \"sound P\"\n  shows \"(\\<lambda>i. iterates body G i P s) \\<longlonglongrightarrow> wp (do G \\<longrightarrow> body od) P s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>i. iterates body G i P s)\n    \\<longlonglongrightarrow> wp (\\<mu>x.\n                                     body ;;\n                                     x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                               P s", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>i. iterates body G i P s)\n    \\<longlonglongrightarrow> wp (\\<mu>x.\n                                     body ;;\n                                     x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                               P s", "let ?X = \"{f s |f. f \\<in> {t P |t. t \\<in> range (iterates body G)}}\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>i. iterates body G i P s)\n    \\<longlonglongrightarrow> wp (\\<mu>x.\n                                     body ;;\n                                     x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                               P s", "have closure_Sup: \"Sup ?X \\<in> closure ?X\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup {f s |f. f \\<in> {t P |t. t \\<in> range (iterates body G)}}\n    \\<in> closure\n           {f s |f. f \\<in> {t P |t. t \\<in> range (iterates body G)}}", "proof(rule closure_contains_Sup, simp, clarsimp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa. iterates body G xa P s \\<le> ?B", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa. iterates body G xa P s \\<le> ?B", "from sP"], ["proof (chain)\npicking this:\n  sound P", "have \"bounded_by (bound_of P) P\""], ["proof (prove)\nusing this:\n  sound P\n\ngoal (1 subgoal):\n 1. bounded_by (bound_of P) P", "by(auto)"], ["proof (state)\nthis:\n  bounded_by (bound_of P) P\n\ngoal (1 subgoal):\n 1. \\<And>xa. iterates body G xa P s \\<le> ?B", "with iterates_healthy[OF hb] sP"], ["proof (chain)\npicking this:\n  healthy (iterates body ?G ?i)\n  sound P\n  bounded_by (bound_of P) P", "have \"\\<And>j. bounded_by (bound_of P) (iterates body G j P)\""], ["proof (prove)\nusing this:\n  healthy (iterates body ?G ?i)\n  sound P\n  bounded_by (bound_of P) P\n\ngoal (1 subgoal):\n 1. \\<And>j. bounded_by (bound_of P) (iterates body G j P)", "by(auto)"], ["proof (state)\nthis:\n  bounded_by (bound_of P) (iterates body G ?j P)\n\ngoal (1 subgoal):\n 1. \\<And>xa. iterates body G xa P s \\<le> ?B", "thus \"iterates body G i P s \\<le> bound_of P\""], ["proof (prove)\nusing this:\n  bounded_by (bound_of P) (iterates body G ?j P)\n\ngoal (1 subgoal):\n 1. iterates body G i P s \\<le> bound_of P", "by(auto)"], ["proof (state)\nthis:\n  iterates body G i P s \\<le> bound_of P\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Sup {f s |f. f \\<in> {t P |t. t \\<in> range (iterates body G)}}\n  \\<in> closure {f s |f. f \\<in> {t P |t. t \\<in> range (iterates body G)}}\n\ngoal (1 subgoal):\n 1. (\\<lambda>i. iterates body G i P s)\n    \\<longlonglongrightarrow> wp (\\<mu>x.\n                                     body ;;\n                                     x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                               P s", "have \"(\\<lambda>i. iterates body G i P s) \\<longlonglongrightarrow> Sup {f s |f. f \\<in> {t P |t. t \\<in> range (iterates body G)}}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>i. iterates body G i P s)\n    \\<longlonglongrightarrow> Sup {f s |f.\n                                   f \\<in> {t P |t.\n      t \\<in> range (iterates body G)}}", "proof(rule LIMSEQ_I)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<exists>no.\n          \\<forall>n\\<ge>no.\n             norm\n              (iterates body G n P s -\n               Sup {f s |f.\n                    f \\<in> {t P |t. t \\<in> range (iterates body G)}})\n             < r", "fix r::real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<exists>no.\n          \\<forall>n\\<ge>no.\n             norm\n              (iterates body G n P s -\n               Sup {f s |f.\n                    f \\<in> {t P |t. t \\<in> range (iterates body G)}})\n             < r", "assume posr: \"0 < r\""], ["proof (state)\nthis:\n  0 < r\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<exists>no.\n          \\<forall>n\\<ge>no.\n             norm\n              (iterates body G n P s -\n               Sup {f s |f.\n                    f \\<in> {t P |t. t \\<in> range (iterates body G)}})\n             < r", "with closure_Sup"], ["proof (chain)\npicking this:\n  Sup {f s |f. f \\<in> {t P |t. t \\<in> range (iterates body G)}}\n  \\<in> closure {f s |f. f \\<in> {t P |t. t \\<in> range (iterates body G)}}\n  0 < r", "obtain y where yin: \"y \\<in> ?X\" and ey: \"dist y (Sup ?X) < r\""], ["proof (prove)\nusing this:\n  Sup {f s |f. f \\<in> {t P |t. t \\<in> range (iterates body G)}}\n  \\<in> closure {f s |f. f \\<in> {t P |t. t \\<in> range (iterates body G)}}\n  0 < r\n\ngoal (1 subgoal):\n 1. (\\<And>y.\n        \\<lbrakk>y \\<in> {f s |f.\n                          f \\<in> {t P |t.\n                                   t \\<in> range (iterates body G)}};\n         dist y\n          (Sup {f s |f. f \\<in> {t P |t. t \\<in> range (iterates body G)}})\n         < r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(simp only:closure_approachable, blast)"], ["proof (state)\nthis:\n  y \\<in> {f s |f. f \\<in> {t P |t. t \\<in> range (iterates body G)}}\n  dist y (Sup {f s |f. f \\<in> {t P |t. t \\<in> range (iterates body G)}})\n  < r\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<exists>no.\n          \\<forall>n\\<ge>no.\n             norm\n              (iterates body G n P s -\n               Sup {f s |f.\n                    f \\<in> {t P |t. t \\<in> range (iterates body G)}})\n             < r", "from yin"], ["proof (chain)\npicking this:\n  y \\<in> {f s |f. f \\<in> {t P |t. t \\<in> range (iterates body G)}}", "obtain i where yit: \"y = iterates body G i P s\""], ["proof (prove)\nusing this:\n  y \\<in> {f s |f. f \\<in> {t P |t. t \\<in> range (iterates body G)}}\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        y = iterates body G i P s \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by(auto)"], ["proof (state)\nthis:\n  y = iterates body G i P s\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<exists>no.\n          \\<forall>n\\<ge>no.\n             norm\n              (iterates body G n P s -\n               Sup {f s |f.\n                    f \\<in> {t P |t. t \\<in> range (iterates body G)}})\n             < r", "{"], ["proof (state)\nthis:\n  y = iterates body G i P s\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<exists>no.\n          \\<forall>n\\<ge>no.\n             norm\n              (iterates body G n P s -\n               Sup {f s |f.\n                    f \\<in> {t P |t. t \\<in> range (iterates body G)}})\n             < r", "fix j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<exists>no.\n          \\<forall>n\\<ge>no.\n             norm\n              (iterates body G n P s -\n               Sup {f s |f.\n                    f \\<in> {t P |t. t \\<in> range (iterates body G)}})\n             < r", "have \"i \\<le> j \\<longrightarrow> le_trans (iterates body G i) (iterates body G j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<le> j \\<longrightarrow>\n    le_trans (iterates body G i) (iterates body G j)", "proof(induct j, simp, clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>i \\<le> j \\<longrightarrow>\n                le_trans (iterates body G i) (iterates body G j);\n        i \\<le> Suc j\\<rbrakk>\n       \\<Longrightarrow> le_trans (iterates body G i)\n                          (iterates body G (Suc j))", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>i \\<le> j \\<longrightarrow>\n                le_trans (iterates body G i) (iterates body G j);\n        i \\<le> Suc j\\<rbrakk>\n       \\<Longrightarrow> le_trans (iterates body G i)\n                          (iterates body G (Suc j))", "assume IH: \"i \\<le> k \\<longrightarrow> le_trans (iterates body G i) (iterates body G k)\"\n           and le: \"i \\<le> Suc k\""], ["proof (state)\nthis:\n  i \\<le> k \\<longrightarrow>\n  le_trans (iterates body G i) (iterates body G k)\n  i \\<le> Suc k\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       \\<lbrakk>i \\<le> j \\<longrightarrow>\n                le_trans (iterates body G i) (iterates body G j);\n        i \\<le> Suc j\\<rbrakk>\n       \\<Longrightarrow> le_trans (iterates body G i)\n                          (iterates body G (Suc j))", "show \"le_trans (iterates body G i) (iterates body G (Suc k))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. le_trans (iterates body G i) (iterates body G (Suc k))", "proof(cases \"i = Suc k\", simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<noteq> Suc k \\<Longrightarrow>\n    le_trans (iterates body G i) (iterates body G (Suc k))", "assume \"i \\<noteq> Suc k\""], ["proof (state)\nthis:\n  i \\<noteq> Suc k\n\ngoal (1 subgoal):\n 1. i \\<noteq> Suc k \\<Longrightarrow>\n    le_trans (iterates body G i) (iterates body G (Suc k))", "with le"], ["proof (chain)\npicking this:\n  i \\<le> Suc k\n  i \\<noteq> Suc k", "have \"i \\<le> k\""], ["proof (prove)\nusing this:\n  i \\<le> Suc k\n  i \\<noteq> Suc k\n\ngoal (1 subgoal):\n 1. i \\<le> k", "by(auto)"], ["proof (state)\nthis:\n  i \\<le> k\n\ngoal (1 subgoal):\n 1. i \\<noteq> Suc k \\<Longrightarrow>\n    le_trans (iterates body G i) (iterates body G (Suc k))", "with IH"], ["proof (chain)\npicking this:\n  i \\<le> k \\<longrightarrow>\n  le_trans (iterates body G i) (iterates body G k)\n  i \\<le> k", "have \"le_trans (iterates body G i) (iterates body G k)\""], ["proof (prove)\nusing this:\n  i \\<le> k \\<longrightarrow>\n  le_trans (iterates body G i) (iterates body G k)\n  i \\<le> k\n\ngoal (1 subgoal):\n 1. le_trans (iterates body G i) (iterates body G k)", "by(auto)"], ["proof (state)\nthis:\n  le_trans (iterates body G i) (iterates body G k)\n\ngoal (1 subgoal):\n 1. i \\<noteq> Suc k \\<Longrightarrow>\n    le_trans (iterates body G i) (iterates body G (Suc k))", "also"], ["proof (state)\nthis:\n  le_trans (iterates body G i) (iterates body G k)\n\ngoal (1 subgoal):\n 1. i \\<noteq> Suc k \\<Longrightarrow>\n    le_trans (iterates body G i) (iterates body G (Suc k))", "note iterates_increasing[OF hb]"], ["proof (state)\nthis:\n  le_trans (iterates body ?G ?i) (iterates body ?G (Suc ?i))\n\ngoal (1 subgoal):\n 1. i \\<noteq> Suc k \\<Longrightarrow>\n    le_trans (iterates body G i) (iterates body G (Suc k))", "finally"], ["proof (chain)\npicking this:\n  le_trans (iterates body G i) (iterates body G (Suc k))", "show \"le_trans (iterates body G i) (iterates body G (Suc k))\""], ["proof (prove)\nusing this:\n  le_trans (iterates body G i) (iterates body G (Suc k))\n\ngoal (1 subgoal):\n 1. le_trans (iterates body G i) (iterates body G (Suc k))", "."], ["proof (state)\nthis:\n  le_trans (iterates body G i) (iterates body G (Suc k))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  le_trans (iterates body G i) (iterates body G (Suc k))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  i \\<le> j \\<longrightarrow>\n  le_trans (iterates body G i) (iterates body G j)\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<exists>no.\n          \\<forall>n\\<ge>no.\n             norm\n              (iterates body G n P s -\n               Sup {f s |f.\n                    f \\<in> {t P |t. t \\<in> range (iterates body G)}})\n             < r", "}"], ["proof (state)\nthis:\n  i \\<le> ?j2 \\<longrightarrow>\n  le_trans (iterates body G i) (iterates body G ?j2)\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<exists>no.\n          \\<forall>n\\<ge>no.\n             norm\n              (iterates body G n P s -\n               Sup {f s |f.\n                    f \\<in> {t P |t. t \\<in> range (iterates body G)}})\n             < r", "with sP"], ["proof (chain)\npicking this:\n  sound P\n  i \\<le> ?j2 \\<longrightarrow>\n  le_trans (iterates body G i) (iterates body G ?j2)", "have \"\\<forall>j\\<ge>i. iterates body G i P s \\<le> iterates body G j P s\""], ["proof (prove)\nusing this:\n  sound P\n  i \\<le> ?j2 \\<longrightarrow>\n  le_trans (iterates body G i) (iterates body G ?j2)\n\ngoal (1 subgoal):\n 1. \\<forall>j\\<ge>i. iterates body G i P s \\<le> iterates body G j P s", "by(auto)"], ["proof (state)\nthis:\n  \\<forall>j\\<ge>i. iterates body G i P s \\<le> iterates body G j P s\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<exists>no.\n          \\<forall>n\\<ge>no.\n             norm\n              (iterates body G n P s -\n               Sup {f s |f.\n                    f \\<in> {t P |t. t \\<in> range (iterates body G)}})\n             < r", "moreover"], ["proof (state)\nthis:\n  \\<forall>j\\<ge>i. iterates body G i P s \\<le> iterates body G j P s\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<exists>no.\n          \\<forall>n\\<ge>no.\n             norm\n              (iterates body G n P s -\n               Sup {f s |f.\n                    f \\<in> {t P |t. t \\<in> range (iterates body G)}})\n             < r", "{"], ["proof (state)\nthis:\n  \\<forall>j\\<ge>i. iterates body G i P s \\<le> iterates body G j P s\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<exists>no.\n          \\<forall>n\\<ge>no.\n             norm\n              (iterates body G n P s -\n               Sup {f s |f.\n                    f \\<in> {t P |t. t \\<in> range (iterates body G)}})\n             < r", "from sP"], ["proof (chain)\npicking this:\n  sound P", "have \"bounded_by (bound_of P) P\""], ["proof (prove)\nusing this:\n  sound P\n\ngoal (1 subgoal):\n 1. bounded_by (bound_of P) P", "by(auto)"], ["proof (state)\nthis:\n  bounded_by (bound_of P) P\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<exists>no.\n          \\<forall>n\\<ge>no.\n             norm\n              (iterates body G n P s -\n               Sup {f s |f.\n                    f \\<in> {t P |t. t \\<in> range (iterates body G)}})\n             < r", "with iterates_healthy[OF hb] sP"], ["proof (chain)\npicking this:\n  healthy (iterates body ?G ?i)\n  sound P\n  bounded_by (bound_of P) P", "have \"\\<And>j. bounded_by (bound_of P) (iterates body G j P)\""], ["proof (prove)\nusing this:\n  healthy (iterates body ?G ?i)\n  sound P\n  bounded_by (bound_of P) P\n\ngoal (1 subgoal):\n 1. \\<And>j. bounded_by (bound_of P) (iterates body G j P)", "by(auto)"], ["proof (state)\nthis:\n  bounded_by (bound_of P) (iterates body G ?j P)\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<exists>no.\n          \\<forall>n\\<ge>no.\n             norm\n              (iterates body G n P s -\n               Sup {f s |f.\n                    f \\<in> {t P |t. t \\<in> range (iterates body G)}})\n             < r", "hence \"\\<And>j. iterates body G j P s \\<le> bound_of P\""], ["proof (prove)\nusing this:\n  bounded_by (bound_of P) (iterates body G ?j P)\n\ngoal (1 subgoal):\n 1. \\<And>j. iterates body G j P s \\<le> bound_of P", "by(auto)"], ["proof (state)\nthis:\n  iterates body G ?j P s \\<le> bound_of P\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<exists>no.\n          \\<forall>n\\<ge>no.\n             norm\n              (iterates body G n P s -\n               Sup {f s |f.\n                    f \\<in> {t P |t. t \\<in> range (iterates body G)}})\n             < r", "hence \"\\<And>j. iterates body G j P s \\<le> Sup ?X\""], ["proof (prove)\nusing this:\n  iterates body G ?j P s \\<le> bound_of P\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       iterates body G j P s\n       \\<le> Sup {f s |f. f \\<in> {t P |t. t \\<in> range (iterates body G)}}", "by(intro cSup_upper bdd_aboveI, auto)"], ["proof (state)\nthis:\n  iterates body G ?j P s\n  \\<le> Sup {f s |f. f \\<in> {t P |t. t \\<in> range (iterates body G)}}\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<exists>no.\n          \\<forall>n\\<ge>no.\n             norm\n              (iterates body G n P s -\n               Sup {f s |f.\n                    f \\<in> {t P |t. t \\<in> range (iterates body G)}})\n             < r", "}"], ["proof (state)\nthis:\n  iterates body G ?j P s\n  \\<le> Sup {f s |f. f \\<in> {t P |t. t \\<in> range (iterates body G)}}\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<exists>no.\n          \\<forall>n\\<ge>no.\n             norm\n              (iterates body G n P s -\n               Sup {f s |f.\n                    f \\<in> {t P |t. t \\<in> range (iterates body G)}})\n             < r", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>j\\<ge>i. iterates body G i P s \\<le> iterates body G j P s\n  iterates body G ?j P s\n  \\<le> Sup {f s |f. f \\<in> {t P |t. t \\<in> range (iterates body G)}}", "have \"\\<And>j. i \\<le> j \\<Longrightarrow>\n                           norm (iterates body G j P s - Sup ?X) \\<le>\n                           norm (iterates body G i P s - Sup ?X)\""], ["proof (prove)\nusing this:\n  \\<forall>j\\<ge>i. iterates body G i P s \\<le> iterates body G j P s\n  iterates body G ?j P s\n  \\<le> Sup {f s |f. f \\<in> {t P |t. t \\<in> range (iterates body G)}}\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       i \\<le> j \\<Longrightarrow>\n       norm\n        (iterates body G j P s -\n         Sup {f s |f. f \\<in> {t P |t. t \\<in> range (iterates body G)}})\n       \\<le> norm\n              (iterates body G i P s -\n               Sup {f s |f.\n                    f \\<in> {t P |t. t \\<in> range (iterates body G)}})", "by(auto)"], ["proof (state)\nthis:\n  i \\<le> ?j \\<Longrightarrow>\n  norm\n   (iterates body G ?j P s -\n    Sup {f s |f. f \\<in> {t P |t. t \\<in> range (iterates body G)}})\n  \\<le> norm\n         (iterates body G i P s -\n          Sup {f s |f. f \\<in> {t P |t. t \\<in> range (iterates body G)}})\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<exists>no.\n          \\<forall>n\\<ge>no.\n             norm\n              (iterates body G n P s -\n               Sup {f s |f.\n                    f \\<in> {t P |t. t \\<in> range (iterates body G)}})\n             < r", "also"], ["proof (state)\nthis:\n  i \\<le> ?j \\<Longrightarrow>\n  norm\n   (iterates body G ?j P s -\n    Sup {f s |f. f \\<in> {t P |t. t \\<in> range (iterates body G)}})\n  \\<le> norm\n         (iterates body G i P s -\n          Sup {f s |f. f \\<in> {t P |t. t \\<in> range (iterates body G)}})\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<exists>no.\n          \\<forall>n\\<ge>no.\n             norm\n              (iterates body G n P s -\n               Sup {f s |f.\n                    f \\<in> {t P |t. t \\<in> range (iterates body G)}})\n             < r", "from ey yit"], ["proof (chain)\npicking this:\n  dist y (Sup {f s |f. f \\<in> {t P |t. t \\<in> range (iterates body G)}})\n  < r\n  y = iterates body G i P s", "have \"norm (iterates body G i P s - Sup ?X) < r\""], ["proof (prove)\nusing this:\n  dist y (Sup {f s |f. f \\<in> {t P |t. t \\<in> range (iterates body G)}})\n  < r\n  y = iterates body G i P s\n\ngoal (1 subgoal):\n 1. norm\n     (iterates body G i P s -\n      Sup {f s |f. f \\<in> {t P |t. t \\<in> range (iterates body G)}})\n    < r", "by(simp add:dist_real_def)"], ["proof (state)\nthis:\n  norm\n   (iterates body G i P s -\n    Sup {f s |f. f \\<in> {t P |t. t \\<in> range (iterates body G)}})\n  < r\n\ngoal (1 subgoal):\n 1. \\<And>r.\n       0 < r \\<Longrightarrow>\n       \\<exists>no.\n          \\<forall>n\\<ge>no.\n             norm\n              (iterates body G n P s -\n               Sup {f s |f.\n                    f \\<in> {t P |t. t \\<in> range (iterates body G)}})\n             < r", "finally"], ["proof (chain)\npicking this:\n  i \\<le> ?j1 \\<Longrightarrow>\n  norm\n   (iterates body G ?j1 P s -\n    Sup {f s |f. f \\<in> {t P |t. t \\<in> range (iterates body G)}})\n  < r", "show \"\\<exists>no. \\<forall>n\\<ge>no. norm (iterates body G n P s -\n                                    Sup {f s |f. f \\<in> {t P |t. t \\<in> range (iterates body G)}}) < r\""], ["proof (prove)\nusing this:\n  i \\<le> ?j1 \\<Longrightarrow>\n  norm\n   (iterates body G ?j1 P s -\n    Sup {f s |f. f \\<in> {t P |t. t \\<in> range (iterates body G)}})\n  < r\n\ngoal (1 subgoal):\n 1. \\<exists>no.\n       \\<forall>n\\<ge>no.\n          norm\n           (iterates body G n P s -\n            Sup {f s |f. f \\<in> {t P |t. t \\<in> range (iterates body G)}})\n          < r", "by(auto)"], ["proof (state)\nthis:\n  \\<exists>no.\n     \\<forall>n\\<ge>no.\n        norm\n         (iterates body G n P s -\n          Sup {f s |f. f \\<in> {t P |t. t \\<in> range (iterates body G)}})\n        < r\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>i. iterates body G i P s)\n  \\<longlonglongrightarrow> Sup {f s |f.\n                                 f \\<in> {t P |t.\n    t \\<in> range (iterates body G)}}\n\ngoal (1 subgoal):\n 1. (\\<lambda>i. iterates body G i P s)\n    \\<longlonglongrightarrow> wp (\\<mu>x.\n                                     body ;;\n                                     x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                               P s", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>i. iterates body G i P s)\n  \\<longlonglongrightarrow> Sup {f s |f.\n                                 f \\<in> {t P |t.\n    t \\<in> range (iterates body G)}}\n\ngoal (1 subgoal):\n 1. (\\<lambda>i. iterates body G i P s)\n    \\<longlonglongrightarrow> wp (\\<mu>x.\n                                     body ;;\n                                     x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                               P s", "from hb cb sP"], ["proof (chain)\npicking this:\n  healthy (wp body)\n  bd_cts (wp body)\n  sound P", "have \"wp do G \\<longrightarrow> body od P s = Sup_trans (range (iterates body G)) P s\""], ["proof (prove)\nusing this:\n  healthy (wp body)\n  bd_cts (wp body)\n  sound P\n\ngoal (1 subgoal):\n 1. wp (\\<mu>x.\n           body ;;\n           x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     P s =\n    Sup_trans (range (iterates body G)) P s", "by(simp add:equiv_transD[OF lfp_iterates])"], ["proof (state)\nthis:\n  wp (\\<mu>x.\n         body ;;\n         x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n   P s =\n  Sup_trans (range (iterates body G)) P s\n\ngoal (1 subgoal):\n 1. (\\<lambda>i. iterates body G i P s)\n    \\<longlonglongrightarrow> wp (\\<mu>x.\n                                     body ;;\n                                     x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                               P s", "moreover"], ["proof (state)\nthis:\n  wp (\\<mu>x.\n         body ;;\n         x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n   P s =\n  Sup_trans (range (iterates body G)) P s\n\ngoal (1 subgoal):\n 1. (\\<lambda>i. iterates body G i P s)\n    \\<longlonglongrightarrow> wp (\\<mu>x.\n                                     body ;;\n                                     x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                               P s", "have \"... = Sup {f s |f. f \\<in> {t P |t. t \\<in> range (iterates body G)}}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup_trans (range (iterates body G)) P s =\n    Sup {f s |f. f \\<in> {t P |t. t \\<in> range (iterates body G)}}", "by(simp add:Sup_trans_def Sup_exp_def)"], ["proof (state)\nthis:\n  Sup_trans (range (iterates body G)) P s =\n  Sup {f s |f. f \\<in> {t P |t. t \\<in> range (iterates body G)}}\n\ngoal (1 subgoal):\n 1. (\\<lambda>i. iterates body G i P s)\n    \\<longlonglongrightarrow> wp (\\<mu>x.\n                                     body ;;\n                                     x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                               P s", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>i. iterates body G i P s)\n  \\<longlonglongrightarrow> Sup {f s |f.\n                                 f \\<in> {t P |t.\n    t \\<in> range (iterates body G)}}\n  wp (\\<mu>x.\n         body ;;\n         x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n   P s =\n  Sup_trans (range (iterates body G)) P s\n  Sup_trans (range (iterates body G)) P s =\n  Sup {f s |f. f \\<in> {t P |t. t \\<in> range (iterates body G)}}", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>i. iterates body G i P s)\n  \\<longlonglongrightarrow> Sup {f s |f.\n                                 f \\<in> {t P |t.\n    t \\<in> range (iterates body G)}}\n  wp (\\<mu>x.\n         body ;;\n         x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n   P s =\n  Sup_trans (range (iterates body G)) P s\n  Sup_trans (range (iterates body G)) P s =\n  Sup {f s |f. f \\<in> {t P |t. t \\<in> range (iterates body G)}}\n\ngoal (1 subgoal):\n 1. (\\<lambda>i. iterates body G i P s)\n    \\<longlonglongrightarrow> wp (\\<mu>x.\n                                     body ;;\n                                     x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                               P s", "by(simp)"], ["proof (state)\nthis:\n  (\\<lambda>i. iterates body G i P s)\n  \\<longlonglongrightarrow> wp (\\<mu>x.\n                                   body ;;\n                                   x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                             P s\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The iterates themselves are all continuous.\\<close>"], ["", "lemma cts_iterates:\n  fixes body::\"'s prog\"\n  assumes hb: \"healthy (wp body)\"\n      and cb: \"bd_cts (wp body)\"\n  shows \"bd_cts (iterates body G i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bd_cts (iterates body G i)", "proof(induct i, simp_all)"], ["proof (state)\ngoal (2 subgoals):\n 1. bd_cts (\\<lambda>a b. 0)\n 2. \\<And>i.\n       bd_cts (iterates body G i) \\<Longrightarrow>\n       bd_cts\n        (wp (body ;;\n             Embed\n              (iterates body G\n                i) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "have \"range (\\<lambda>(n::nat) (s::'s). 0::real) = {\\<lambda>s. 0::real}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. range (\\<lambda>n s. 0) = {\\<lambda>s. 0}", "by(auto)"], ["proof (state)\nthis:\n  range (\\<lambda>n s. 0) = {\\<lambda>s. 0}\n\ngoal (2 subgoals):\n 1. bd_cts (\\<lambda>a b. 0)\n 2. \\<And>i.\n       bd_cts (iterates body G i) \\<Longrightarrow>\n       bd_cts\n        (wp (body ;;\n             Embed\n              (iterates body G\n                i) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "thus \"bd_cts (\\<lambda>P (s::'s). 0)\""], ["proof (prove)\nusing this:\n  range (\\<lambda>n s. 0) = {\\<lambda>s. 0}\n\ngoal (1 subgoal):\n 1. bd_cts (\\<lambda>P s. 0)", "by(intro bd_ctsI, simp add:o_def Sup_exp_def)"], ["proof (state)\nthis:\n  bd_cts (\\<lambda>P s. 0)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       bd_cts (iterates body G i) \\<Longrightarrow>\n       bd_cts\n        (wp (body ;;\n             Embed\n              (iterates body G\n                i) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       bd_cts (iterates body G i) \\<Longrightarrow>\n       bd_cts\n        (wp (body ;;\n             Embed\n              (iterates body G\n                i) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       bd_cts (iterates body G i) \\<Longrightarrow>\n       bd_cts\n        (wp (body ;;\n             Embed\n              (iterates body G\n                i) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "assume IH: \"bd_cts (iterates body G i)\""], ["proof (state)\nthis:\n  bd_cts (iterates body G i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       bd_cts (iterates body G i) \\<Longrightarrow>\n       bd_cts\n        (wp (body ;;\n             Embed\n              (iterates body G\n                i) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "thus \"bd_cts (wp (body ;; Embed (iterates body G i) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\""], ["proof (prove)\nusing this:\n  bd_cts (iterates body G i)\n\ngoal (1 subgoal):\n 1. bd_cts\n     (wp (body ;;\n          Embed\n           (iterates body G\n             i) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "by(blast intro:cts_wp_PC cts_wp_Seq cts_wp_Embed cts_wp_Skip\n                   healthy_intros iterates_healthy cb hb)"], ["proof (state)\nthis:\n  bd_cts\n   (wp (body ;;\n        Embed\n         (iterates body G\n           i) \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Therefore so is the loop itself.\\<close>"], ["", "lemma cts_wp_loop:\n  fixes body::\"'s prog\"\n  assumes hb: \"healthy (wp body)\"\n      and cb: \"bd_cts (wp body)\"\n  shows \"bd_cts (wp do G \\<longrightarrow> body od)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bd_cts\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip))", "proof(rule bd_ctsI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b M.\n       \\<lbrakk>\\<And>i. M i \\<tturnstile> M (Suc i); \\<And>i. sound (M i);\n        \\<And>i. bounded_by b (M i)\\<rbrakk>\n       \\<Longrightarrow> wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          (Sup_exp (range M)) =\n                         Sup_exp\n                          (range\n                            (wp (\\<mu>x.\n                                    body ;;\n                                    x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) \\<circ>\n                             M))", "fix M::\"nat \\<Rightarrow> 's expect\" and b::real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b M.\n       \\<lbrakk>\\<And>i. M i \\<tturnstile> M (Suc i); \\<And>i. sound (M i);\n        \\<And>i. bounded_by b (M i)\\<rbrakk>\n       \\<Longrightarrow> wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          (Sup_exp (range M)) =\n                         Sup_exp\n                          (range\n                            (wp (\\<mu>x.\n                                    body ;;\n                                    x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) \\<circ>\n                             M))", "assume chain: \"\\<And>i. M i \\<tturnstile> M (Suc i)\"\n     and sM: \"\\<And>i. sound (M i)\"\n     and bM: \"\\<And>i. bounded_by b (M i)\""], ["proof (state)\nthis:\n  M ?i \\<tturnstile> M (Suc ?i)\n  sound (M ?i)\n  bounded_by b (M ?i)\n\ngoal (1 subgoal):\n 1. \\<And>b M.\n       \\<lbrakk>\\<And>i. M i \\<tturnstile> M (Suc i); \\<And>i. sound (M i);\n        \\<And>i. bounded_by b (M i)\\<rbrakk>\n       \\<Longrightarrow> wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          (Sup_exp (range M)) =\n                         Sup_exp\n                          (range\n                            (wp (\\<mu>x.\n                                    body ;;\n                                    x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) \\<circ>\n                             M))", "from sM bM iterates_healthy[OF hb]"], ["proof (chain)\npicking this:\n  sound (M ?i)\n  bounded_by b (M ?i)\n  healthy (iterates body ?G ?i)", "have \"\\<And>j i. bounded_by b (iterates body G i (M j))\""], ["proof (prove)\nusing this:\n  sound (M ?i)\n  bounded_by b (M ?i)\n  healthy (iterates body ?G ?i)\n\ngoal (1 subgoal):\n 1. \\<And>j i. bounded_by b (iterates body G i (M j))", "by(blast)"], ["proof (state)\nthis:\n  bounded_by b (iterates body G ?i (M ?j))\n\ngoal (1 subgoal):\n 1. \\<And>b M.\n       \\<lbrakk>\\<And>i. M i \\<tturnstile> M (Suc i); \\<And>i. sound (M i);\n        \\<And>i. bounded_by b (M i)\\<rbrakk>\n       \\<Longrightarrow> wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          (Sup_exp (range M)) =\n                         Sup_exp\n                          (range\n                            (wp (\\<mu>x.\n                                    body ;;\n                                    x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) \\<circ>\n                             M))", "hence iB: \"\\<And>j i s. iterates body G i (M j) s \\<le> b\""], ["proof (prove)\nusing this:\n  bounded_by b (iterates body G ?i (M ?j))\n\ngoal (1 subgoal):\n 1. \\<And>j i s. iterates body G i (M j) s \\<le> b", "by(auto)"], ["proof (state)\nthis:\n  iterates body G ?i (M ?j) ?s \\<le> b\n\ngoal (1 subgoal):\n 1. \\<And>b M.\n       \\<lbrakk>\\<And>i. M i \\<tturnstile> M (Suc i); \\<And>i. sound (M i);\n        \\<And>i. bounded_by b (M i)\\<rbrakk>\n       \\<Longrightarrow> wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          (Sup_exp (range M)) =\n                         Sup_exp\n                          (range\n                            (wp (\\<mu>x.\n                                    body ;;\n                                    x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) \\<circ>\n                             M))", "from sM bM"], ["proof (chain)\npicking this:\n  sound (M ?i)\n  bounded_by b (M ?i)", "have sSup: \"sound (Sup_exp (range M))\""], ["proof (prove)\nusing this:\n  sound (M ?i)\n  bounded_by b (M ?i)\n\ngoal (1 subgoal):\n 1. sound (Sup_exp (range M))", "by(auto intro:Sup_exp_sound)"], ["proof (state)\nthis:\n  sound (Sup_exp (range M))\n\ngoal (1 subgoal):\n 1. \\<And>b M.\n       \\<lbrakk>\\<And>i. M i \\<tturnstile> M (Suc i); \\<And>i. sound (M i);\n        \\<And>i. bounded_by b (M i)\\<rbrakk>\n       \\<Longrightarrow> wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          (Sup_exp (range M)) =\n                         Sup_exp\n                          (range\n                            (wp (\\<mu>x.\n                                    body ;;\n                                    x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) \\<circ>\n                             M))", "with lfp_iterates[OF hb cb]"], ["proof (chain)\npicking this:\n  equiv_trans\n   (wp (\\<mu>x.\n           body ;;\n           x \\<^bsub>\\<guillemotleft> ?G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n   (Sup_trans (range (iterates body ?G)))\n  sound (Sup_exp (range M))", "have \"wp do G \\<longrightarrow> body od (Sup_exp (range M)) =\n        Sup_trans (range (iterates body G)) (Sup_exp (range M))\""], ["proof (prove)\nusing this:\n  equiv_trans\n   (wp (\\<mu>x.\n           body ;;\n           x \\<^bsub>\\<guillemotleft> ?G \\<guillemotright>\\<^esub>\\<oplus> Skip))\n   (Sup_trans (range (iterates body ?G)))\n  sound (Sup_exp (range M))\n\ngoal (1 subgoal):\n 1. wp (\\<mu>x.\n           body ;;\n           x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     (Sup_exp (range M)) =\n    Sup_trans (range (iterates body G)) (Sup_exp (range M))", "by(simp add:equiv_transD)"], ["proof (state)\nthis:\n  wp (\\<mu>x.\n         body ;;\n         x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n   (Sup_exp (range M)) =\n  Sup_trans (range (iterates body G)) (Sup_exp (range M))\n\ngoal (1 subgoal):\n 1. \\<And>b M.\n       \\<lbrakk>\\<And>i. M i \\<tturnstile> M (Suc i); \\<And>i. sound (M i);\n        \\<And>i. bounded_by b (M i)\\<rbrakk>\n       \\<Longrightarrow> wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          (Sup_exp (range M)) =\n                         Sup_exp\n                          (range\n                            (wp (\\<mu>x.\n                                    body ;;\n                                    x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) \\<circ>\n                             M))", "also"], ["proof (state)\nthis:\n  wp (\\<mu>x.\n         body ;;\n         x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n   (Sup_exp (range M)) =\n  Sup_trans (range (iterates body G)) (Sup_exp (range M))\n\ngoal (1 subgoal):\n 1. \\<And>b M.\n       \\<lbrakk>\\<And>i. M i \\<tturnstile> M (Suc i); \\<And>i. sound (M i);\n        \\<And>i. bounded_by b (M i)\\<rbrakk>\n       \\<Longrightarrow> wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          (Sup_exp (range M)) =\n                         Sup_exp\n                          (range\n                            (wp (\\<mu>x.\n                                    body ;;\n                                    x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) \\<circ>\n                             M))", "{"], ["proof (state)\nthis:\n  wp (\\<mu>x.\n         body ;;\n         x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n   (Sup_exp (range M)) =\n  Sup_trans (range (iterates body G)) (Sup_exp (range M))\n\ngoal (1 subgoal):\n 1. \\<And>b M.\n       \\<lbrakk>\\<And>i. M i \\<tturnstile> M (Suc i); \\<And>i. sound (M i);\n        \\<And>i. bounded_by b (M i)\\<rbrakk>\n       \\<Longrightarrow> wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          (Sup_exp (range M)) =\n                         Sup_exp\n                          (range\n                            (wp (\\<mu>x.\n                                    body ;;\n                                    x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) \\<circ>\n                             M))", "from chain sM bM"], ["proof (chain)\npicking this:\n  M ?i \\<tturnstile> M (Suc ?i)\n  sound (M ?i)\n  bounded_by b (M ?i)", "have \"\\<And>i. iterates body G i (Sup_exp (range M)) = Sup_exp (range (iterates body G i o M))\""], ["proof (prove)\nusing this:\n  M ?i \\<tturnstile> M (Suc ?i)\n  sound (M ?i)\n  bounded_by b (M ?i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       iterates body G i (Sup_exp (range M)) =\n       Sup_exp (range (iterates body G i \\<circ> M))", "by(blast intro:bd_ctsD cts_iterates[OF hb cb])"], ["proof (state)\nthis:\n  iterates body G ?i (Sup_exp (range M)) =\n  Sup_exp (range (iterates body G ?i \\<circ> M))\n\ngoal (1 subgoal):\n 1. \\<And>b M.\n       \\<lbrakk>\\<And>i. M i \\<tturnstile> M (Suc i); \\<And>i. sound (M i);\n        \\<And>i. bounded_by b (M i)\\<rbrakk>\n       \\<Longrightarrow> wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          (Sup_exp (range M)) =\n                         Sup_exp\n                          (range\n                            (wp (\\<mu>x.\n                                    body ;;\n                                    x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) \\<circ>\n                             M))", "hence \"{t (Sup_exp (range M)) |t. t \\<in> range (iterates body G)} =\n           {Sup_exp (range (t o M)) |t. t \\<in> range (iterates body G)}\""], ["proof (prove)\nusing this:\n  iterates body G ?i (Sup_exp (range M)) =\n  Sup_exp (range (iterates body G ?i \\<circ> M))\n\ngoal (1 subgoal):\n 1. {t (Sup_exp (range M)) |t. t \\<in> range (iterates body G)} =\n    {Sup_exp (range (t \\<circ> M)) |t. t \\<in> range (iterates body G)}", "by(auto intro:sym)"], ["proof (state)\nthis:\n  {t (Sup_exp (range M)) |t. t \\<in> range (iterates body G)} =\n  {Sup_exp (range (t \\<circ> M)) |t. t \\<in> range (iterates body G)}\n\ngoal (1 subgoal):\n 1. \\<And>b M.\n       \\<lbrakk>\\<And>i. M i \\<tturnstile> M (Suc i); \\<And>i. sound (M i);\n        \\<And>i. bounded_by b (M i)\\<rbrakk>\n       \\<Longrightarrow> wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          (Sup_exp (range M)) =\n                         Sup_exp\n                          (range\n                            (wp (\\<mu>x.\n                                    body ;;\n                                    x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) \\<circ>\n                             M))", "hence \"Sup_trans (range (iterates body G)) (Sup_exp (range M)) =\n           Sup_exp {Sup_exp (range (t \\<circ> M)) |t. t \\<in> range (iterates body G)}\""], ["proof (prove)\nusing this:\n  {t (Sup_exp (range M)) |t. t \\<in> range (iterates body G)} =\n  {Sup_exp (range (t \\<circ> M)) |t. t \\<in> range (iterates body G)}\n\ngoal (1 subgoal):\n 1. Sup_trans (range (iterates body G)) (Sup_exp (range M)) =\n    Sup_exp\n     {Sup_exp (range (t \\<circ> M)) |t. t \\<in> range (iterates body G)}", "by(simp add:Sup_trans_def)"], ["proof (state)\nthis:\n  Sup_trans (range (iterates body G)) (Sup_exp (range M)) =\n  Sup_exp\n   {Sup_exp (range (t \\<circ> M)) |t. t \\<in> range (iterates body G)}\n\ngoal (1 subgoal):\n 1. \\<And>b M.\n       \\<lbrakk>\\<And>i. M i \\<tturnstile> M (Suc i); \\<And>i. sound (M i);\n        \\<And>i. bounded_by b (M i)\\<rbrakk>\n       \\<Longrightarrow> wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          (Sup_exp (range M)) =\n                         Sup_exp\n                          (range\n                            (wp (\\<mu>x.\n                                    body ;;\n                                    x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) \\<circ>\n                             M))", "}"], ["proof (state)\nthis:\n  Sup_trans (range (iterates body G)) (Sup_exp (range M)) =\n  Sup_exp\n   {Sup_exp (range (t \\<circ> M)) |t. t \\<in> range (iterates body G)}\n\ngoal (1 subgoal):\n 1. \\<And>b M.\n       \\<lbrakk>\\<And>i. M i \\<tturnstile> M (Suc i); \\<And>i. sound (M i);\n        \\<And>i. bounded_by b (M i)\\<rbrakk>\n       \\<Longrightarrow> wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          (Sup_exp (range M)) =\n                         Sup_exp\n                          (range\n                            (wp (\\<mu>x.\n                                    body ;;\n                                    x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) \\<circ>\n                             M))", "also"], ["proof (state)\nthis:\n  Sup_trans (range (iterates body G)) (Sup_exp (range M)) =\n  Sup_exp\n   {Sup_exp (range (t \\<circ> M)) |t. t \\<in> range (iterates body G)}\n\ngoal (1 subgoal):\n 1. \\<And>b M.\n       \\<lbrakk>\\<And>i. M i \\<tturnstile> M (Suc i); \\<And>i. sound (M i);\n        \\<And>i. bounded_by b (M i)\\<rbrakk>\n       \\<Longrightarrow> wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          (Sup_exp (range M)) =\n                         Sup_exp\n                          (range\n                            (wp (\\<mu>x.\n                                    body ;;\n                                    x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) \\<circ>\n                             M))", "{"], ["proof (state)\nthis:\n  Sup_trans (range (iterates body G)) (Sup_exp (range M)) =\n  Sup_exp\n   {Sup_exp (range (t \\<circ> M)) |t. t \\<in> range (iterates body G)}\n\ngoal (1 subgoal):\n 1. \\<And>b M.\n       \\<lbrakk>\\<And>i. M i \\<tturnstile> M (Suc i); \\<And>i. sound (M i);\n        \\<And>i. bounded_by b (M i)\\<rbrakk>\n       \\<Longrightarrow> wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          (Sup_exp (range M)) =\n                         Sup_exp\n                          (range\n                            (wp (\\<mu>x.\n                                    body ;;\n                                    x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) \\<circ>\n                             M))", "have \"\\<And>s. {f s |f. \\<exists>t. f = (\\<lambda>s. Sup {f s |f. f \\<in> range (t \\<circ> M)}) \\<and>\n                           t \\<in> range (iterates body G)} =\n          range (\\<lambda>i. Sup (range (\\<lambda>j. iterates body G i (M j) s)))\"\n      (is \"\\<And>s. ?X s = ?Y s\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       {f s |f.\n        \\<exists>t.\n           f =\n           (\\<lambda>s. Sup {f s |f. f \\<in> range (t \\<circ> M)}) \\<and>\n           t \\<in> range (iterates body G)} =\n       range (\\<lambda>i. SUP j. iterates body G i (M j) s)", "proof(intro antisym subsetI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s x.\n       x \\<in> {f s |f.\n                \\<exists>t.\n                   f =\n                   (\\<lambda>s.\n                       Sup {f s |f. f \\<in> range (t \\<circ> M)}) \\<and>\n                   t \\<in> range (iterates body G)} \\<Longrightarrow>\n       x \\<in> range (\\<lambda>i. SUP j. iterates body G i (M j) s)\n 2. \\<And>s x.\n       x \\<in> range\n                (\\<lambda>i.\n                    SUP j. iterates body G i (M j) s) \\<Longrightarrow>\n       x \\<in> {f s |f.\n                \\<exists>t.\n                   f =\n                   (\\<lambda>s.\n                       Sup {f s |f. f \\<in> range (t \\<circ> M)}) \\<and>\n                   t \\<in> range (iterates body G)}", "fix s x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s x.\n       x \\<in> {f s |f.\n                \\<exists>t.\n                   f =\n                   (\\<lambda>s.\n                       Sup {f s |f. f \\<in> range (t \\<circ> M)}) \\<and>\n                   t \\<in> range (iterates body G)} \\<Longrightarrow>\n       x \\<in> range (\\<lambda>i. SUP j. iterates body G i (M j) s)\n 2. \\<And>s x.\n       x \\<in> range\n                (\\<lambda>i.\n                    SUP j. iterates body G i (M j) s) \\<Longrightarrow>\n       x \\<in> {f s |f.\n                \\<exists>t.\n                   f =\n                   (\\<lambda>s.\n                       Sup {f s |f. f \\<in> range (t \\<circ> M)}) \\<and>\n                   t \\<in> range (iterates body G)}", "assume \"x \\<in> ?X s\""], ["proof (state)\nthis:\n  x \\<in> {f s |f.\n           \\<exists>t.\n              f =\n              (\\<lambda>s. Sup {f s |f. f \\<in> range (t \\<circ> M)}) \\<and>\n              t \\<in> range (iterates body G)}\n\ngoal (2 subgoals):\n 1. \\<And>s x.\n       x \\<in> {f s |f.\n                \\<exists>t.\n                   f =\n                   (\\<lambda>s.\n                       Sup {f s |f. f \\<in> range (t \\<circ> M)}) \\<and>\n                   t \\<in> range (iterates body G)} \\<Longrightarrow>\n       x \\<in> range (\\<lambda>i. SUP j. iterates body G i (M j) s)\n 2. \\<And>s x.\n       x \\<in> range\n                (\\<lambda>i.\n                    SUP j. iterates body G i (M j) s) \\<Longrightarrow>\n       x \\<in> {f s |f.\n                \\<exists>t.\n                   f =\n                   (\\<lambda>s.\n                       Sup {f s |f. f \\<in> range (t \\<circ> M)}) \\<and>\n                   t \\<in> range (iterates body G)}", "then"], ["proof (chain)\npicking this:\n  x \\<in> {f s |f.\n           \\<exists>t.\n              f =\n              (\\<lambda>s. Sup {f s |f. f \\<in> range (t \\<circ> M)}) \\<and>\n              t \\<in> range (iterates body G)}", "obtain t where rwx: \"x = Sup {f s |f. f \\<in> range (t \\<circ> M)}\"\n                      and \"t \\<in> range (iterates body G)\""], ["proof (prove)\nusing this:\n  x \\<in> {f s |f.\n           \\<exists>t.\n              f =\n              (\\<lambda>s. Sup {f s |f. f \\<in> range (t \\<circ> M)}) \\<and>\n              t \\<in> range (iterates body G)}\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<lbrakk>x = Sup {f s |f. f \\<in> range (t \\<circ> M)};\n         t \\<in> range (iterates body G)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto)"], ["proof (state)\nthis:\n  x = Sup {f s |f. f \\<in> range (t \\<circ> M)}\n  t \\<in> range (iterates body G)\n\ngoal (2 subgoals):\n 1. \\<And>s x.\n       x \\<in> {f s |f.\n                \\<exists>t.\n                   f =\n                   (\\<lambda>s.\n                       Sup {f s |f. f \\<in> range (t \\<circ> M)}) \\<and>\n                   t \\<in> range (iterates body G)} \\<Longrightarrow>\n       x \\<in> range (\\<lambda>i. SUP j. iterates body G i (M j) s)\n 2. \\<And>s x.\n       x \\<in> range\n                (\\<lambda>i.\n                    SUP j. iterates body G i (M j) s) \\<Longrightarrow>\n       x \\<in> {f s |f.\n                \\<exists>t.\n                   f =\n                   (\\<lambda>s.\n                       Sup {f s |f. f \\<in> range (t \\<circ> M)}) \\<and>\n                   t \\<in> range (iterates body G)}", "then"], ["proof (chain)\npicking this:\n  x = Sup {f s |f. f \\<in> range (t \\<circ> M)}\n  t \\<in> range (iterates body G)", "obtain i where \"t = iterates body G i\""], ["proof (prove)\nusing this:\n  x = Sup {f s |f. f \\<in> range (t \\<circ> M)}\n  t \\<in> range (iterates body G)\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        t = iterates body G i \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto)"], ["proof (state)\nthis:\n  t = iterates body G i\n\ngoal (2 subgoals):\n 1. \\<And>s x.\n       x \\<in> {f s |f.\n                \\<exists>t.\n                   f =\n                   (\\<lambda>s.\n                       Sup {f s |f. f \\<in> range (t \\<circ> M)}) \\<and>\n                   t \\<in> range (iterates body G)} \\<Longrightarrow>\n       x \\<in> range (\\<lambda>i. SUP j. iterates body G i (M j) s)\n 2. \\<And>s x.\n       x \\<in> range\n                (\\<lambda>i.\n                    SUP j. iterates body G i (M j) s) \\<Longrightarrow>\n       x \\<in> {f s |f.\n                \\<exists>t.\n                   f =\n                   (\\<lambda>s.\n                       Sup {f s |f. f \\<in> range (t \\<circ> M)}) \\<and>\n                   t \\<in> range (iterates body G)}", "with rwx"], ["proof (chain)\npicking this:\n  x = Sup {f s |f. f \\<in> range (t \\<circ> M)}\n  t = iterates body G i", "have \"x = Sup {f s |f. f \\<in> range (\\<lambda>j. iterates body G i (M j))}\""], ["proof (prove)\nusing this:\n  x = Sup {f s |f. f \\<in> range (t \\<circ> M)}\n  t = iterates body G i\n\ngoal (1 subgoal):\n 1. x = Sup {f s |f. f \\<in> range (\\<lambda>j. iterates body G i (M j))}", "by(simp add:o_def)"], ["proof (state)\nthis:\n  x = Sup {f s |f. f \\<in> range (\\<lambda>j. iterates body G i (M j))}\n\ngoal (2 subgoals):\n 1. \\<And>s x.\n       x \\<in> {f s |f.\n                \\<exists>t.\n                   f =\n                   (\\<lambda>s.\n                       Sup {f s |f. f \\<in> range (t \\<circ> M)}) \\<and>\n                   t \\<in> range (iterates body G)} \\<Longrightarrow>\n       x \\<in> range (\\<lambda>i. SUP j. iterates body G i (M j) s)\n 2. \\<And>s x.\n       x \\<in> range\n                (\\<lambda>i.\n                    SUP j. iterates body G i (M j) s) \\<Longrightarrow>\n       x \\<in> {f s |f.\n                \\<exists>t.\n                   f =\n                   (\\<lambda>s.\n                       Sup {f s |f. f \\<in> range (t \\<circ> M)}) \\<and>\n                   t \\<in> range (iterates body G)}", "moreover"], ["proof (state)\nthis:\n  x = Sup {f s |f. f \\<in> range (\\<lambda>j. iterates body G i (M j))}\n\ngoal (2 subgoals):\n 1. \\<And>s x.\n       x \\<in> {f s |f.\n                \\<exists>t.\n                   f =\n                   (\\<lambda>s.\n                       Sup {f s |f. f \\<in> range (t \\<circ> M)}) \\<and>\n                   t \\<in> range (iterates body G)} \\<Longrightarrow>\n       x \\<in> range (\\<lambda>i. SUP j. iterates body G i (M j) s)\n 2. \\<And>s x.\n       x \\<in> range\n                (\\<lambda>i.\n                    SUP j. iterates body G i (M j) s) \\<Longrightarrow>\n       x \\<in> {f s |f.\n                \\<exists>t.\n                   f =\n                   (\\<lambda>s.\n                       Sup {f s |f. f \\<in> range (t \\<circ> M)}) \\<and>\n                   t \\<in> range (iterates body G)}", "have \"{f s |f. f \\<in> range (\\<lambda>j. iterates body G i (M j))} =\n                     range (\\<lambda>j. iterates body G i (M j) s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {f s |f. f \\<in> range (\\<lambda>j. iterates body G i (M j))} =\n    range (\\<lambda>j. iterates body G i (M j) s)", "by(auto)"], ["proof (state)\nthis:\n  {f s |f. f \\<in> range (\\<lambda>j. iterates body G i (M j))} =\n  range (\\<lambda>j. iterates body G i (M j) s)\n\ngoal (2 subgoals):\n 1. \\<And>s x.\n       x \\<in> {f s |f.\n                \\<exists>t.\n                   f =\n                   (\\<lambda>s.\n                       Sup {f s |f. f \\<in> range (t \\<circ> M)}) \\<and>\n                   t \\<in> range (iterates body G)} \\<Longrightarrow>\n       x \\<in> range (\\<lambda>i. SUP j. iterates body G i (M j) s)\n 2. \\<And>s x.\n       x \\<in> range\n                (\\<lambda>i.\n                    SUP j. iterates body G i (M j) s) \\<Longrightarrow>\n       x \\<in> {f s |f.\n                \\<exists>t.\n                   f =\n                   (\\<lambda>s.\n                       Sup {f s |f. f \\<in> range (t \\<circ> M)}) \\<and>\n                   t \\<in> range (iterates body G)}", "ultimately"], ["proof (chain)\npicking this:\n  x = Sup {f s |f. f \\<in> range (\\<lambda>j. iterates body G i (M j))}\n  {f s |f. f \\<in> range (\\<lambda>j. iterates body G i (M j))} =\n  range (\\<lambda>j. iterates body G i (M j) s)", "have \"x = Sup (range (\\<lambda>j. iterates body G i (M j) s))\""], ["proof (prove)\nusing this:\n  x = Sup {f s |f. f \\<in> range (\\<lambda>j. iterates body G i (M j))}\n  {f s |f. f \\<in> range (\\<lambda>j. iterates body G i (M j))} =\n  range (\\<lambda>j. iterates body G i (M j) s)\n\ngoal (1 subgoal):\n 1. x = (SUP j. iterates body G i (M j) s)", "by(simp)"], ["proof (state)\nthis:\n  x = (SUP j. iterates body G i (M j) s)\n\ngoal (2 subgoals):\n 1. \\<And>s x.\n       x \\<in> {f s |f.\n                \\<exists>t.\n                   f =\n                   (\\<lambda>s.\n                       Sup {f s |f. f \\<in> range (t \\<circ> M)}) \\<and>\n                   t \\<in> range (iterates body G)} \\<Longrightarrow>\n       x \\<in> range (\\<lambda>i. SUP j. iterates body G i (M j) s)\n 2. \\<And>s x.\n       x \\<in> range\n                (\\<lambda>i.\n                    SUP j. iterates body G i (M j) s) \\<Longrightarrow>\n       x \\<in> {f s |f.\n                \\<exists>t.\n                   f =\n                   (\\<lambda>s.\n                       Sup {f s |f. f \\<in> range (t \\<circ> M)}) \\<and>\n                   t \\<in> range (iterates body G)}", "thus \"x \\<in> range (\\<lambda>i. Sup (range (\\<lambda>j. iterates body G i (M j) s)))\""], ["proof (prove)\nusing this:\n  x = (SUP j. iterates body G i (M j) s)\n\ngoal (1 subgoal):\n 1. x \\<in> range (\\<lambda>i. SUP j. iterates body G i (M j) s)", "by(auto)"], ["proof (state)\nthis:\n  x \\<in> range (\\<lambda>i. SUP j. iterates body G i (M j) s)\n\ngoal (1 subgoal):\n 1. \\<And>s x.\n       x \\<in> range\n                (\\<lambda>i.\n                    SUP j. iterates body G i (M j) s) \\<Longrightarrow>\n       x \\<in> {f s |f.\n                \\<exists>t.\n                   f =\n                   (\\<lambda>s.\n                       Sup {f s |f. f \\<in> range (t \\<circ> M)}) \\<and>\n                   t \\<in> range (iterates body G)}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s x.\n       x \\<in> range\n                (\\<lambda>i.\n                    SUP j. iterates body G i (M j) s) \\<Longrightarrow>\n       x \\<in> {f s |f.\n                \\<exists>t.\n                   f =\n                   (\\<lambda>s.\n                       Sup {f s |f. f \\<in> range (t \\<circ> M)}) \\<and>\n                   t \\<in> range (iterates body G)}", "fix s x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s x.\n       x \\<in> range\n                (\\<lambda>i.\n                    SUP j. iterates body G i (M j) s) \\<Longrightarrow>\n       x \\<in> {f s |f.\n                \\<exists>t.\n                   f =\n                   (\\<lambda>s.\n                       Sup {f s |f. f \\<in> range (t \\<circ> M)}) \\<and>\n                   t \\<in> range (iterates body G)}", "assume \"x \\<in> ?Y s\""], ["proof (state)\nthis:\n  x \\<in> range (\\<lambda>i. SUP j. iterates body G i (M j) s)\n\ngoal (1 subgoal):\n 1. \\<And>s x.\n       x \\<in> range\n                (\\<lambda>i.\n                    SUP j. iterates body G i (M j) s) \\<Longrightarrow>\n       x \\<in> {f s |f.\n                \\<exists>t.\n                   f =\n                   (\\<lambda>s.\n                       Sup {f s |f. f \\<in> range (t \\<circ> M)}) \\<and>\n                   t \\<in> range (iterates body G)}", "then"], ["proof (chain)\npicking this:\n  x \\<in> range (\\<lambda>i. SUP j. iterates body G i (M j) s)", "obtain i where A: \"x = Sup (range (\\<lambda>j. iterates body G i (M j) s))\""], ["proof (prove)\nusing this:\n  x \\<in> range (\\<lambda>i. SUP j. iterates body G i (M j) s)\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        x = (SUP j. iterates body G i (M j) s) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by(auto)"], ["proof (state)\nthis:\n  x = (SUP j. iterates body G i (M j) s)\n\ngoal (1 subgoal):\n 1. \\<And>s x.\n       x \\<in> range\n                (\\<lambda>i.\n                    SUP j. iterates body G i (M j) s) \\<Longrightarrow>\n       x \\<in> {f s |f.\n                \\<exists>t.\n                   f =\n                   (\\<lambda>s.\n                       Sup {f s |f. f \\<in> range (t \\<circ> M)}) \\<and>\n                   t \\<in> range (iterates body G)}", "have \"\\<And>s. {f s |f. f \\<in> range (\\<lambda>j. iterates body G i (M j))} =\n            range (\\<lambda>j. iterates body G i (M j) s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       {f s |f. f \\<in> range (\\<lambda>j. iterates body G i (M j))} =\n       range (\\<lambda>j. iterates body G i (M j) s)", "by(auto)"], ["proof (state)\nthis:\n  {f ?s |f. f \\<in> range (\\<lambda>j. iterates body G i (M j))} =\n  range (\\<lambda>j. iterates body G i (M j) ?s)\n\ngoal (1 subgoal):\n 1. \\<And>s x.\n       x \\<in> range\n                (\\<lambda>i.\n                    SUP j. iterates body G i (M j) s) \\<Longrightarrow>\n       x \\<in> {f s |f.\n                \\<exists>t.\n                   f =\n                   (\\<lambda>s.\n                       Sup {f s |f. f \\<in> range (t \\<circ> M)}) \\<and>\n                   t \\<in> range (iterates body G)}", "hence B: \"(\\<lambda>s. Sup (range (\\<lambda>j. iterates body G i (M j) s))) =\n             (\\<lambda>s. Sup {f s |f. f \\<in> range (iterates body G i o M)})\""], ["proof (prove)\nusing this:\n  {f ?s |f. f \\<in> range (\\<lambda>j. iterates body G i (M j))} =\n  range (\\<lambda>j. iterates body G i (M j) ?s)\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. SUP j. iterates body G i (M j) s) =\n    (\\<lambda>s. Sup {f s |f. f \\<in> range (iterates body G i \\<circ> M)})", "by(simp add:o_def)"], ["proof (state)\nthis:\n  (\\<lambda>s. SUP j. iterates body G i (M j) s) =\n  (\\<lambda>s. Sup {f s |f. f \\<in> range (iterates body G i \\<circ> M)})\n\ngoal (1 subgoal):\n 1. \\<And>s x.\n       x \\<in> range\n                (\\<lambda>i.\n                    SUP j. iterates body G i (M j) s) \\<Longrightarrow>\n       x \\<in> {f s |f.\n                \\<exists>t.\n                   f =\n                   (\\<lambda>s.\n                       Sup {f s |f. f \\<in> range (t \\<circ> M)}) \\<and>\n                   t \\<in> range (iterates body G)}", "have C: \"iterates body G i \\<in> range (iterates body G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. iterates body G i \\<in> range (iterates body G)", "by(auto)"], ["proof (state)\nthis:\n  iterates body G i \\<in> range (iterates body G)\n\ngoal (1 subgoal):\n 1. \\<And>s x.\n       x \\<in> range\n                (\\<lambda>i.\n                    SUP j. iterates body G i (M j) s) \\<Longrightarrow>\n       x \\<in> {f s |f.\n                \\<exists>t.\n                   f =\n                   (\\<lambda>s.\n                       Sup {f s |f. f \\<in> range (t \\<circ> M)}) \\<and>\n                   t \\<in> range (iterates body G)}", "have \"\\<exists>f. x = f s \\<and>\n                (\\<exists>t. f = (\\<lambda>s. Sup {f s |f. f \\<in> range (t \\<circ> M)}) \\<and>\n                     t \\<in> range (iterates body G))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>f.\n       x = f s \\<and>\n       (\\<exists>t.\n           f =\n           (\\<lambda>s. Sup {f s |f. f \\<in> range (t \\<circ> M)}) \\<and>\n           t \\<in> range (iterates body G))", "by(iprover intro:A B C)"], ["proof (state)\nthis:\n  \\<exists>f.\n     x = f s \\<and>\n     (\\<exists>t.\n         f = (\\<lambda>s. Sup {f s |f. f \\<in> range (t \\<circ> M)}) \\<and>\n         t \\<in> range (iterates body G))\n\ngoal (1 subgoal):\n 1. \\<And>s x.\n       x \\<in> range\n                (\\<lambda>i.\n                    SUP j. iterates body G i (M j) s) \\<Longrightarrow>\n       x \\<in> {f s |f.\n                \\<exists>t.\n                   f =\n                   (\\<lambda>s.\n                       Sup {f s |f. f \\<in> range (t \\<circ> M)}) \\<and>\n                   t \\<in> range (iterates body G)}", "thus \"x \\<in> ?X s\""], ["proof (prove)\nusing this:\n  \\<exists>f.\n     x = f s \\<and>\n     (\\<exists>t.\n         f = (\\<lambda>s. Sup {f s |f. f \\<in> range (t \\<circ> M)}) \\<and>\n         t \\<in> range (iterates body G))\n\ngoal (1 subgoal):\n 1. x \\<in> {f s |f.\n             \\<exists>t.\n                f =\n                (\\<lambda>s.\n                    Sup {f s |f. f \\<in> range (t \\<circ> M)}) \\<and>\n                t \\<in> range (iterates body G)}", "by(simp)"], ["proof (state)\nthis:\n  x \\<in> {f s |f.\n           \\<exists>t.\n              f =\n              (\\<lambda>s. Sup {f s |f. f \\<in> range (t \\<circ> M)}) \\<and>\n              t \\<in> range (iterates body G)}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {f ?s |f.\n   \\<exists>t.\n      f = (\\<lambda>s. Sup {f s |f. f \\<in> range (t \\<circ> M)}) \\<and>\n      t \\<in> range (iterates body G)} =\n  range (\\<lambda>i. SUP j. iterates body G i (M j) ?s)\n\ngoal (1 subgoal):\n 1. \\<And>b M.\n       \\<lbrakk>\\<And>i. M i \\<tturnstile> M (Suc i); \\<And>i. sound (M i);\n        \\<And>i. bounded_by b (M i)\\<rbrakk>\n       \\<Longrightarrow> wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          (Sup_exp (range M)) =\n                         Sup_exp\n                          (range\n                            (wp (\\<mu>x.\n                                    body ;;\n                                    x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) \\<circ>\n                             M))", "hence \"Sup_exp {Sup_exp (range (t \\<circ> M)) |t. t \\<in> range (iterates body G)} = \n           (\\<lambda>s. Sup (range (\\<lambda>i. Sup (range (\\<lambda>j. iterates body G i (M j) s)))))\""], ["proof (prove)\nusing this:\n  {f ?s |f.\n   \\<exists>t.\n      f = (\\<lambda>s. Sup {f s |f. f \\<in> range (t \\<circ> M)}) \\<and>\n      t \\<in> range (iterates body G)} =\n  range (\\<lambda>i. SUP j. iterates body G i (M j) ?s)\n\ngoal (1 subgoal):\n 1. Sup_exp\n     {Sup_exp (range (t \\<circ> M)) |t. t \\<in> range (iterates body G)} =\n    (\\<lambda>s. SUP i j. iterates body G i (M j) s)", "by(simp add:Sup_exp_def)"], ["proof (state)\nthis:\n  Sup_exp\n   {Sup_exp (range (t \\<circ> M)) |t. t \\<in> range (iterates body G)} =\n  (\\<lambda>s. SUP i j. iterates body G i (M j) s)\n\ngoal (1 subgoal):\n 1. \\<And>b M.\n       \\<lbrakk>\\<And>i. M i \\<tturnstile> M (Suc i); \\<And>i. sound (M i);\n        \\<And>i. bounded_by b (M i)\\<rbrakk>\n       \\<Longrightarrow> wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          (Sup_exp (range M)) =\n                         Sup_exp\n                          (range\n                            (wp (\\<mu>x.\n                                    body ;;\n                                    x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) \\<circ>\n                             M))", "}"], ["proof (state)\nthis:\n  Sup_exp\n   {Sup_exp (range (t \\<circ> M)) |t. t \\<in> range (iterates body G)} =\n  (\\<lambda>s. SUP i j. iterates body G i (M j) s)\n\ngoal (1 subgoal):\n 1. \\<And>b M.\n       \\<lbrakk>\\<And>i. M i \\<tturnstile> M (Suc i); \\<And>i. sound (M i);\n        \\<And>i. bounded_by b (M i)\\<rbrakk>\n       \\<Longrightarrow> wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          (Sup_exp (range M)) =\n                         Sup_exp\n                          (range\n                            (wp (\\<mu>x.\n                                    body ;;\n                                    x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) \\<circ>\n                             M))", "also"], ["proof (state)\nthis:\n  Sup_exp\n   {Sup_exp (range (t \\<circ> M)) |t. t \\<in> range (iterates body G)} =\n  (\\<lambda>s. SUP i j. iterates body G i (M j) s)\n\ngoal (1 subgoal):\n 1. \\<And>b M.\n       \\<lbrakk>\\<And>i. M i \\<tturnstile> M (Suc i); \\<And>i. sound (M i);\n        \\<And>i. bounded_by b (M i)\\<rbrakk>\n       \\<Longrightarrow> wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          (Sup_exp (range M)) =\n                         Sup_exp\n                          (range\n                            (wp (\\<mu>x.\n                                    body ;;\n                                    x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) \\<circ>\n                             M))", "have \"(\\<lambda>s. Sup (range (\\<lambda>i. Sup (range (\\<lambda>j. iterates body G i (M j) s))))) =\n             (\\<lambda>s. Sup (range (\\<lambda>(i,j). iterates body G i (M j) s)))\"\n    (is \"?X = ?Y\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. SUP i j. iterates body G i (M j) s) =\n    (\\<lambda>s. SUP (i, j). iterates body G i (M j) s)", "proof(rule ext, rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s.\n       (SUP i j. iterates body G i (M j) s)\n       \\<le> (SUP (i, j). iterates body G i (M j) s)\n 2. \\<And>s.\n       (SUP (i, j). iterates body G i (M j) s)\n       \\<le> (SUP i j. iterates body G i (M j) s)", "fix s::'s"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s.\n       (SUP i j. iterates body G i (M j) s)\n       \\<le> (SUP (i, j). iterates body G i (M j) s)\n 2. \\<And>s.\n       (SUP (i, j). iterates body G i (M j) s)\n       \\<le> (SUP i j. iterates body G i (M j) s)", "show \"?Y s \\<le> ?X s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (SUP (i, j). iterates body G i (M j) s)\n    \\<le> (SUP i j. iterates body G i (M j) s)", "proof(rule cSup_least, blast, clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (a, b) \\<in> UNIV \\<Longrightarrow>\n       iterates body G a (M b) s \\<le> (SUP i j. iterates body G i (M j) s)", "fix i j::nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (a, b) \\<in> UNIV \\<Longrightarrow>\n       iterates body G a (M b) s \\<le> (SUP i j. iterates body G i (M j) s)", "from iB"], ["proof (chain)\npicking this:\n  iterates body G ?i (M ?j) ?s \\<le> b", "have \"iterates body G i (M j) s \\<le> Sup (range (\\<lambda>j. iterates body G i (M j) s))\""], ["proof (prove)\nusing this:\n  iterates body G ?i (M ?j) ?s \\<le> b\n\ngoal (1 subgoal):\n 1. iterates body G i (M j) s \\<le> (SUP j. iterates body G i (M j) s)", "by(intro cSup_upper bdd_aboveI, auto)"], ["proof (state)\nthis:\n  iterates body G i (M j) s \\<le> (SUP j. iterates body G i (M j) s)\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (a, b) \\<in> UNIV \\<Longrightarrow>\n       iterates body G a (M b) s \\<le> (SUP i j. iterates body G i (M j) s)", "also"], ["proof (state)\nthis:\n  iterates body G i (M j) s \\<le> (SUP j. iterates body G i (M j) s)\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (a, b) \\<in> UNIV \\<Longrightarrow>\n       iterates body G a (M b) s \\<le> (SUP i j. iterates body G i (M j) s)", "from iB"], ["proof (chain)\npicking this:\n  iterates body G ?i (M ?j) ?s \\<le> b", "have \"... \\<le> Sup (range (\\<lambda>i. Sup (range (\\<lambda>j. iterates body G i (M j) s))))\""], ["proof (prove)\nusing this:\n  iterates body G ?i (M ?j) ?s \\<le> b\n\ngoal (1 subgoal):\n 1. (SUP j. iterates body G i (M j) s)\n    \\<le> (SUP i j. iterates body G i (M j) s)", "by(intro cSup_upper cSup_least bdd_aboveI, (blast intro:cSup_least)+)"], ["proof (state)\nthis:\n  (SUP j. iterates body G i (M j) s)\n  \\<le> (SUP i j. iterates body G i (M j) s)\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (a, b) \\<in> UNIV \\<Longrightarrow>\n       iterates body G a (M b) s \\<le> (SUP i j. iterates body G i (M j) s)", "finally"], ["proof (chain)\npicking this:\n  iterates body G i (M j) s \\<le> (SUP i j. iterates body G i (M j) s)", "show \"iterates body G i (M j) s \\<le>\n                    Sup (range (\\<lambda>i. Sup (range (\\<lambda>j. iterates body G i (M j) s))))\""], ["proof (prove)\nusing this:\n  iterates body G i (M j) s \\<le> (SUP i j. iterates body G i (M j) s)\n\ngoal (1 subgoal):\n 1. iterates body G i (M j) s \\<le> (SUP i j. iterates body G i (M j) s)", "."], ["proof (state)\nthis:\n  iterates body G i (M j) s \\<le> (SUP i j. iterates body G i (M j) s)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (SUP (i, j). iterates body G i (M j) s)\n  \\<le> (SUP i j. iterates body G i (M j) s)\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       (SUP i j. iterates body G i (M j) s)\n       \\<le> (SUP (i, j). iterates body G i (M j) s)", "have \"\\<And>i j. iterates body G i (M j) s \\<le>\n                Sup (range (\\<lambda>(i, j). iterates body G i (M j) s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       iterates body G i (M j) s\n       \\<le> (SUP (i, j). iterates body G i (M j) s)", "by(rule cSup_upper, auto intro:iB)"], ["proof (state)\nthis:\n  iterates body G ?i (M ?j) s \\<le> (SUP (i, j). iterates body G i (M j) s)\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       (SUP i j. iterates body G i (M j) s)\n       \\<le> (SUP (i, j). iterates body G i (M j) s)", "thus \"?X s \\<le> ?Y s\""], ["proof (prove)\nusing this:\n  iterates body G ?i (M ?j) s \\<le> (SUP (i, j). iterates body G i (M j) s)\n\ngoal (1 subgoal):\n 1. (SUP i j. iterates body G i (M j) s)\n    \\<le> (SUP (i, j). iterates body G i (M j) s)", "by(intro cSup_least, blast, clarify, simp, blast intro:cSup_least)"], ["proof (state)\nthis:\n  (SUP i j. iterates body G i (M j) s)\n  \\<le> (SUP (i, j). iterates body G i (M j) s)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>s. SUP i j. iterates body G i (M j) s) =\n  (\\<lambda>s. SUP (i, j). iterates body G i (M j) s)\n\ngoal (1 subgoal):\n 1. \\<And>b M.\n       \\<lbrakk>\\<And>i. M i \\<tturnstile> M (Suc i); \\<And>i. sound (M i);\n        \\<And>i. bounded_by b (M i)\\<rbrakk>\n       \\<Longrightarrow> wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          (Sup_exp (range M)) =\n                         Sup_exp\n                          (range\n                            (wp (\\<mu>x.\n                                    body ;;\n                                    x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) \\<circ>\n                             M))", "also"], ["proof (state)\nthis:\n  (\\<lambda>s. SUP i j. iterates body G i (M j) s) =\n  (\\<lambda>s. SUP (i, j). iterates body G i (M j) s)\n\ngoal (1 subgoal):\n 1. \\<And>b M.\n       \\<lbrakk>\\<And>i. M i \\<tturnstile> M (Suc i); \\<And>i. sound (M i);\n        \\<And>i. bounded_by b (M i)\\<rbrakk>\n       \\<Longrightarrow> wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          (Sup_exp (range M)) =\n                         Sup_exp\n                          (range\n                            (wp (\\<mu>x.\n                                    body ;;\n                                    x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) \\<circ>\n                             M))", "have \"... = (\\<lambda>s. Sup (range (\\<lambda>j .Sup (range (\\<lambda>i. iterates body G i (M j) s)))))\"\n    (is \"?X = ?Y\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>s. SUP (i, j). iterates body G i (M j) s) =\n    (\\<lambda>s. SUP j i. iterates body G i (M j) s)", "proof(rule ext, rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s.\n       (SUP (i, j). iterates body G i (M j) s)\n       \\<le> (SUP j i. iterates body G i (M j) s)\n 2. \\<And>s.\n       (SUP j i. iterates body G i (M j) s)\n       \\<le> (SUP (i, j). iterates body G i (M j) s)", "fix s::'s"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s.\n       (SUP (i, j). iterates body G i (M j) s)\n       \\<le> (SUP j i. iterates body G i (M j) s)\n 2. \\<And>s.\n       (SUP j i. iterates body G i (M j) s)\n       \\<le> (SUP (i, j). iterates body G i (M j) s)", "have \"\\<And>i j. iterates body G i (M j) s \\<le>\n                Sup (range (\\<lambda>(i, j). iterates body G i (M j) s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       iterates body G i (M j) s\n       \\<le> (SUP (i, j). iterates body G i (M j) s)", "by(rule cSup_upper, auto intro:iB)"], ["proof (state)\nthis:\n  iterates body G ?i (M ?j) s \\<le> (SUP (i, j). iterates body G i (M j) s)\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       (SUP (i, j). iterates body G i (M j) s)\n       \\<le> (SUP j i. iterates body G i (M j) s)\n 2. \\<And>s.\n       (SUP j i. iterates body G i (M j) s)\n       \\<le> (SUP (i, j). iterates body G i (M j) s)", "thus \"?Y s \\<le> ?X s\""], ["proof (prove)\nusing this:\n  iterates body G ?i (M ?j) s \\<le> (SUP (i, j). iterates body G i (M j) s)\n\ngoal (1 subgoal):\n 1. (SUP j i. iterates body G i (M j) s)\n    \\<le> (SUP (i, j). iterates body G i (M j) s)", "by(intro cSup_least, blast, clarify, simp, blast intro:cSup_least)"], ["proof (state)\nthis:\n  (SUP j i. iterates body G i (M j) s)\n  \\<le> (SUP (i, j). iterates body G i (M j) s)\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       (SUP (i, j). iterates body G i (M j) s)\n       \\<le> (SUP j i. iterates body G i (M j) s)", "show \"?X s \\<le> ?Y s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (SUP (i, j). iterates body G i (M j) s)\n    \\<le> (SUP j i. iterates body G i (M j) s)", "proof(rule cSup_least, blast, clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (a, b) \\<in> UNIV \\<Longrightarrow>\n       iterates body G a (M b) s \\<le> (SUP j i. iterates body G i (M j) s)", "fix i j::nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (a, b) \\<in> UNIV \\<Longrightarrow>\n       iterates body G a (M b) s \\<le> (SUP j i. iterates body G i (M j) s)", "from iB"], ["proof (chain)\npicking this:\n  iterates body G ?i (M ?j) ?s \\<le> b", "have \"iterates body G i (M j) s \\<le> Sup (range (\\<lambda>i. iterates body G i (M j) s))\""], ["proof (prove)\nusing this:\n  iterates body G ?i (M ?j) ?s \\<le> b\n\ngoal (1 subgoal):\n 1. iterates body G i (M j) s \\<le> (SUP i. iterates body G i (M j) s)", "by(intro cSup_upper bdd_aboveI, auto)"], ["proof (state)\nthis:\n  iterates body G i (M j) s \\<le> (SUP i. iterates body G i (M j) s)\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (a, b) \\<in> UNIV \\<Longrightarrow>\n       iterates body G a (M b) s \\<le> (SUP j i. iterates body G i (M j) s)", "also"], ["proof (state)\nthis:\n  iterates body G i (M j) s \\<le> (SUP i. iterates body G i (M j) s)\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (a, b) \\<in> UNIV \\<Longrightarrow>\n       iterates body G a (M b) s \\<le> (SUP j i. iterates body G i (M j) s)", "from iB"], ["proof (chain)\npicking this:\n  iterates body G ?i (M ?j) ?s \\<le> b", "have \"... \\<le> Sup (range (\\<lambda>j. Sup (range (\\<lambda>i. iterates body G i (M j) s))))\""], ["proof (prove)\nusing this:\n  iterates body G ?i (M ?j) ?s \\<le> b\n\ngoal (1 subgoal):\n 1. (SUP i. iterates body G i (M j) s)\n    \\<le> (SUP j i. iterates body G i (M j) s)", "by(intro cSup_upper cSup_least bdd_aboveI, blast, blast intro:cSup_least)"], ["proof (state)\nthis:\n  (SUP i. iterates body G i (M j) s)\n  \\<le> (SUP j i. iterates body G i (M j) s)\n\ngoal (1 subgoal):\n 1. \\<And>x a b.\n       (a, b) \\<in> UNIV \\<Longrightarrow>\n       iterates body G a (M b) s \\<le> (SUP j i. iterates body G i (M j) s)", "finally"], ["proof (chain)\npicking this:\n  iterates body G i (M j) s \\<le> (SUP j i. iterates body G i (M j) s)", "show \"iterates body G i (M j) s \\<le>\n                    Sup (range (\\<lambda>j. Sup (range (\\<lambda>i. iterates body G i (M j) s))))\""], ["proof (prove)\nusing this:\n  iterates body G i (M j) s \\<le> (SUP j i. iterates body G i (M j) s)\n\ngoal (1 subgoal):\n 1. iterates body G i (M j) s \\<le> (SUP j i. iterates body G i (M j) s)", "."], ["proof (state)\nthis:\n  iterates body G i (M j) s \\<le> (SUP j i. iterates body G i (M j) s)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (SUP (i, j). iterates body G i (M j) s)\n  \\<le> (SUP j i. iterates body G i (M j) s)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>s. SUP (i, j). iterates body G i (M j) s) =\n  (\\<lambda>s. SUP j i. iterates body G i (M j) s)\n\ngoal (1 subgoal):\n 1. \\<And>b M.\n       \\<lbrakk>\\<And>i. M i \\<tturnstile> M (Suc i); \\<And>i. sound (M i);\n        \\<And>i. bounded_by b (M i)\\<rbrakk>\n       \\<Longrightarrow> wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          (Sup_exp (range M)) =\n                         Sup_exp\n                          (range\n                            (wp (\\<mu>x.\n                                    body ;;\n                                    x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) \\<circ>\n                             M))", "also"], ["proof (state)\nthis:\n  (\\<lambda>s. SUP (i, j). iterates body G i (M j) s) =\n  (\\<lambda>s. SUP j i. iterates body G i (M j) s)\n\ngoal (1 subgoal):\n 1. \\<And>b M.\n       \\<lbrakk>\\<And>i. M i \\<tturnstile> M (Suc i); \\<And>i. sound (M i);\n        \\<And>i. bounded_by b (M i)\\<rbrakk>\n       \\<Longrightarrow> wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          (Sup_exp (range M)) =\n                         Sup_exp\n                          (range\n                            (wp (\\<mu>x.\n                                    body ;;\n                                    x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) \\<circ>\n                             M))", "{"], ["proof (state)\nthis:\n  (\\<lambda>s. SUP (i, j). iterates body G i (M j) s) =\n  (\\<lambda>s. SUP j i. iterates body G i (M j) s)\n\ngoal (1 subgoal):\n 1. \\<And>b M.\n       \\<lbrakk>\\<And>i. M i \\<tturnstile> M (Suc i); \\<And>i. sound (M i);\n        \\<And>i. bounded_by b (M i)\\<rbrakk>\n       \\<Longrightarrow> wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          (Sup_exp (range M)) =\n                         Sup_exp\n                          (range\n                            (wp (\\<mu>x.\n                                    body ;;\n                                    x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) \\<circ>\n                             M))", "have \"\\<And>s. range (\\<lambda>j. Sup (range (\\<lambda>i. iterates body G i (M j) s))) =\n               {f s |f. f \\<in> range ((\\<lambda>P s. Sup {f s |f. \\<exists>t. f = t P \\<and>\n               t \\<in> range (iterates body G)}) \\<circ> M)}\" (is \"\\<And>s. ?X s = ?Y s\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       range (\\<lambda>j. SUP i. iterates body G i (M j) s) =\n       {f s |f.\n        f \\<in> range\n                 ((\\<lambda>P s.\n                      Sup {f s |f.\n                           \\<exists>t.\n                              f = t P \\<and>\n                              t \\<in> range (iterates body G)}) \\<circ>\n                  M)}", "proof(intro antisym subsetI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s x.\n       x \\<in> range\n                (\\<lambda>j.\n                    SUP i. iterates body G i (M j) s) \\<Longrightarrow>\n       x \\<in> {f s |f.\n                f \\<in> range\n                         ((\\<lambda>P s.\n                              Sup {f s |f.\n                                   \\<exists>t.\nf = t P \\<and> t \\<in> range (iterates body G)}) \\<circ>\n                          M)}\n 2. \\<And>s x.\n       x \\<in> {f s |f.\n                f \\<in> range\n                         ((\\<lambda>P s.\n                              Sup {f s |f.\n                                   \\<exists>t.\nf = t P \\<and> t \\<in> range (iterates body G)}) \\<circ>\n                          M)} \\<Longrightarrow>\n       x \\<in> range (\\<lambda>j. SUP i. iterates body G i (M j) s)", "fix s x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>s x.\n       x \\<in> range\n                (\\<lambda>j.\n                    SUP i. iterates body G i (M j) s) \\<Longrightarrow>\n       x \\<in> {f s |f.\n                f \\<in> range\n                         ((\\<lambda>P s.\n                              Sup {f s |f.\n                                   \\<exists>t.\nf = t P \\<and> t \\<in> range (iterates body G)}) \\<circ>\n                          M)}\n 2. \\<And>s x.\n       x \\<in> {f s |f.\n                f \\<in> range\n                         ((\\<lambda>P s.\n                              Sup {f s |f.\n                                   \\<exists>t.\nf = t P \\<and> t \\<in> range (iterates body G)}) \\<circ>\n                          M)} \\<Longrightarrow>\n       x \\<in> range (\\<lambda>j. SUP i. iterates body G i (M j) s)", "assume \"x \\<in> ?X s\""], ["proof (state)\nthis:\n  x \\<in> range (\\<lambda>j. SUP i. iterates body G i (M j) s)\n\ngoal (2 subgoals):\n 1. \\<And>s x.\n       x \\<in> range\n                (\\<lambda>j.\n                    SUP i. iterates body G i (M j) s) \\<Longrightarrow>\n       x \\<in> {f s |f.\n                f \\<in> range\n                         ((\\<lambda>P s.\n                              Sup {f s |f.\n                                   \\<exists>t.\nf = t P \\<and> t \\<in> range (iterates body G)}) \\<circ>\n                          M)}\n 2. \\<And>s x.\n       x \\<in> {f s |f.\n                f \\<in> range\n                         ((\\<lambda>P s.\n                              Sup {f s |f.\n                                   \\<exists>t.\nf = t P \\<and> t \\<in> range (iterates body G)}) \\<circ>\n                          M)} \\<Longrightarrow>\n       x \\<in> range (\\<lambda>j. SUP i. iterates body G i (M j) s)", "then"], ["proof (chain)\npicking this:\n  x \\<in> range (\\<lambda>j. SUP i. iterates body G i (M j) s)", "obtain j where rwx: \"x = Sup (range (\\<lambda>i. iterates body G i (M j) s))\""], ["proof (prove)\nusing this:\n  x \\<in> range (\\<lambda>j. SUP i. iterates body G i (M j) s)\n\ngoal (1 subgoal):\n 1. (\\<And>j.\n        x = (SUP i. iterates body G i (M j) s) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by(auto)"], ["proof (state)\nthis:\n  x = (SUP i. iterates body G i (M j) s)\n\ngoal (2 subgoals):\n 1. \\<And>s x.\n       x \\<in> range\n                (\\<lambda>j.\n                    SUP i. iterates body G i (M j) s) \\<Longrightarrow>\n       x \\<in> {f s |f.\n                f \\<in> range\n                         ((\\<lambda>P s.\n                              Sup {f s |f.\n                                   \\<exists>t.\nf = t P \\<and> t \\<in> range (iterates body G)}) \\<circ>\n                          M)}\n 2. \\<And>s x.\n       x \\<in> {f s |f.\n                f \\<in> range\n                         ((\\<lambda>P s.\n                              Sup {f s |f.\n                                   \\<exists>t.\nf = t P \\<and> t \\<in> range (iterates body G)}) \\<circ>\n                          M)} \\<Longrightarrow>\n       x \\<in> range (\\<lambda>j. SUP i. iterates body G i (M j) s)", "moreover"], ["proof (state)\nthis:\n  x = (SUP i. iterates body G i (M j) s)\n\ngoal (2 subgoals):\n 1. \\<And>s x.\n       x \\<in> range\n                (\\<lambda>j.\n                    SUP i. iterates body G i (M j) s) \\<Longrightarrow>\n       x \\<in> {f s |f.\n                f \\<in> range\n                         ((\\<lambda>P s.\n                              Sup {f s |f.\n                                   \\<exists>t.\nf = t P \\<and> t \\<in> range (iterates body G)}) \\<circ>\n                          M)}\n 2. \\<And>s x.\n       x \\<in> {f s |f.\n                f \\<in> range\n                         ((\\<lambda>P s.\n                              Sup {f s |f.\n                                   \\<exists>t.\nf = t P \\<and> t \\<in> range (iterates body G)}) \\<circ>\n                          M)} \\<Longrightarrow>\n       x \\<in> range (\\<lambda>j. SUP i. iterates body G i (M j) s)", "{"], ["proof (state)\nthis:\n  x = (SUP i. iterates body G i (M j) s)\n\ngoal (2 subgoals):\n 1. \\<And>s x.\n       x \\<in> range\n                (\\<lambda>j.\n                    SUP i. iterates body G i (M j) s) \\<Longrightarrow>\n       x \\<in> {f s |f.\n                f \\<in> range\n                         ((\\<lambda>P s.\n                              Sup {f s |f.\n                                   \\<exists>t.\nf = t P \\<and> t \\<in> range (iterates body G)}) \\<circ>\n                          M)}\n 2. \\<And>s x.\n       x \\<in> {f s |f.\n                f \\<in> range\n                         ((\\<lambda>P s.\n                              Sup {f s |f.\n                                   \\<exists>t.\nf = t P \\<and> t \\<in> range (iterates body G)}) \\<circ>\n                          M)} \\<Longrightarrow>\n       x \\<in> range (\\<lambda>j. SUP i. iterates body G i (M j) s)", "have \"\\<And>s. range (\\<lambda>i. iterates body G i (M j) s) =\n                   {f s |f. \\<exists>t. f = t (M j) \\<and> t \\<in> range (iterates body G)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       range (\\<lambda>i. iterates body G i (M j) s) =\n       {f s |f.\n        \\<exists>t. f = t (M j) \\<and> t \\<in> range (iterates body G)}", "by(auto)"], ["proof (state)\nthis:\n  range (\\<lambda>i. iterates body G i (M j) ?s) =\n  {f ?s |f. \\<exists>t. f = t (M j) \\<and> t \\<in> range (iterates body G)}\n\ngoal (2 subgoals):\n 1. \\<And>s x.\n       x \\<in> range\n                (\\<lambda>j.\n                    SUP i. iterates body G i (M j) s) \\<Longrightarrow>\n       x \\<in> {f s |f.\n                f \\<in> range\n                         ((\\<lambda>P s.\n                              Sup {f s |f.\n                                   \\<exists>t.\nf = t P \\<and> t \\<in> range (iterates body G)}) \\<circ>\n                          M)}\n 2. \\<And>s x.\n       x \\<in> {f s |f.\n                f \\<in> range\n                         ((\\<lambda>P s.\n                              Sup {f s |f.\n                                   \\<exists>t.\nf = t P \\<and> t \\<in> range (iterates body G)}) \\<circ>\n                          M)} \\<Longrightarrow>\n       x \\<in> range (\\<lambda>j. SUP i. iterates body G i (M j) s)", "hence \"(\\<lambda>s. Sup (range (\\<lambda>i. iterates body G i (M j) s))) \\<in>\n              range ((\\<lambda>P s. Sup {f s |f.\n                           \\<exists>t. f = t P \\<and> t \\<in> range (iterates body G)}) \\<circ> M)\""], ["proof (prove)\nusing this:\n  range (\\<lambda>i. iterates body G i (M j) ?s) =\n  {f ?s |f. \\<exists>t. f = t (M j) \\<and> t \\<in> range (iterates body G)}\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. SUP i. iterates body G i (M j) s)\n    \\<in> range\n           ((\\<lambda>P s.\n                Sup {f s |f.\n                     \\<exists>t.\n                        f = t P \\<and>\n                        t \\<in> range (iterates body G)}) \\<circ>\n            M)", "by (simp add: o_def cong del: SUP_cong_simp)"], ["proof (state)\nthis:\n  (\\<lambda>s. SUP i. iterates body G i (M j) s)\n  \\<in> range\n         ((\\<lambda>P s.\n              Sup {f s |f.\n                   \\<exists>t.\n                      f = t P \\<and>\n                      t \\<in> range (iterates body G)}) \\<circ>\n          M)\n\ngoal (2 subgoals):\n 1. \\<And>s x.\n       x \\<in> range\n                (\\<lambda>j.\n                    SUP i. iterates body G i (M j) s) \\<Longrightarrow>\n       x \\<in> {f s |f.\n                f \\<in> range\n                         ((\\<lambda>P s.\n                              Sup {f s |f.\n                                   \\<exists>t.\nf = t P \\<and> t \\<in> range (iterates body G)}) \\<circ>\n                          M)}\n 2. \\<And>s x.\n       x \\<in> {f s |f.\n                f \\<in> range\n                         ((\\<lambda>P s.\n                              Sup {f s |f.\n                                   \\<exists>t.\nf = t P \\<and> t \\<in> range (iterates body G)}) \\<circ>\n                          M)} \\<Longrightarrow>\n       x \\<in> range (\\<lambda>j. SUP i. iterates body G i (M j) s)", "}"], ["proof (state)\nthis:\n  (\\<lambda>s. SUP i. iterates body G i (M j) s)\n  \\<in> range\n         ((\\<lambda>P s.\n              Sup {f s |f.\n                   \\<exists>t.\n                      f = t P \\<and>\n                      t \\<in> range (iterates body G)}) \\<circ>\n          M)\n\ngoal (2 subgoals):\n 1. \\<And>s x.\n       x \\<in> range\n                (\\<lambda>j.\n                    SUP i. iterates body G i (M j) s) \\<Longrightarrow>\n       x \\<in> {f s |f.\n                f \\<in> range\n                         ((\\<lambda>P s.\n                              Sup {f s |f.\n                                   \\<exists>t.\nf = t P \\<and> t \\<in> range (iterates body G)}) \\<circ>\n                          M)}\n 2. \\<And>s x.\n       x \\<in> {f s |f.\n                f \\<in> range\n                         ((\\<lambda>P s.\n                              Sup {f s |f.\n                                   \\<exists>t.\nf = t P \\<and> t \\<in> range (iterates body G)}) \\<circ>\n                          M)} \\<Longrightarrow>\n       x \\<in> range (\\<lambda>j. SUP i. iterates body G i (M j) s)", "ultimately"], ["proof (chain)\npicking this:\n  x = (SUP i. iterates body G i (M j) s)\n  (\\<lambda>s. SUP i. iterates body G i (M j) s)\n  \\<in> range\n         ((\\<lambda>P s.\n              Sup {f s |f.\n                   \\<exists>t.\n                      f = t P \\<and>\n                      t \\<in> range (iterates body G)}) \\<circ>\n          M)", "show \"x \\<in> ?Y s\""], ["proof (prove)\nusing this:\n  x = (SUP i. iterates body G i (M j) s)\n  (\\<lambda>s. SUP i. iterates body G i (M j) s)\n  \\<in> range\n         ((\\<lambda>P s.\n              Sup {f s |f.\n                   \\<exists>t.\n                      f = t P \\<and>\n                      t \\<in> range (iterates body G)}) \\<circ>\n          M)\n\ngoal (1 subgoal):\n 1. x \\<in> {f s |f.\n             f \\<in> range\n                      ((\\<lambda>P s.\n                           Sup {f s |f.\n                                \\<exists>t.\n                                   f = t P \\<and>\n                                   t \\<in> range (iterates body G)}) \\<circ>\n                       M)}", "by(auto)"], ["proof (state)\nthis:\n  x \\<in> {f s |f.\n           f \\<in> range\n                    ((\\<lambda>P s.\n                         Sup {f s |f.\n                              \\<exists>t.\n                                 f = t P \\<and>\n                                 t \\<in> range (iterates body G)}) \\<circ>\n                     M)}\n\ngoal (1 subgoal):\n 1. \\<And>s x.\n       x \\<in> {f s |f.\n                f \\<in> range\n                         ((\\<lambda>P s.\n                              Sup {f s |f.\n                                   \\<exists>t.\nf = t P \\<and> t \\<in> range (iterates body G)}) \\<circ>\n                          M)} \\<Longrightarrow>\n       x \\<in> range (\\<lambda>j. SUP i. iterates body G i (M j) s)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s x.\n       x \\<in> {f s |f.\n                f \\<in> range\n                         ((\\<lambda>P s.\n                              Sup {f s |f.\n                                   \\<exists>t.\nf = t P \\<and> t \\<in> range (iterates body G)}) \\<circ>\n                          M)} \\<Longrightarrow>\n       x \\<in> range (\\<lambda>j. SUP i. iterates body G i (M j) s)", "fix s x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s x.\n       x \\<in> {f s |f.\n                f \\<in> range\n                         ((\\<lambda>P s.\n                              Sup {f s |f.\n                                   \\<exists>t.\nf = t P \\<and> t \\<in> range (iterates body G)}) \\<circ>\n                          M)} \\<Longrightarrow>\n       x \\<in> range (\\<lambda>j. SUP i. iterates body G i (M j) s)", "assume \"x \\<in> ?Y s\""], ["proof (state)\nthis:\n  x \\<in> {f s |f.\n           f \\<in> range\n                    ((\\<lambda>P s.\n                         Sup {f s |f.\n                              \\<exists>t.\n                                 f = t P \\<and>\n                                 t \\<in> range (iterates body G)}) \\<circ>\n                     M)}\n\ngoal (1 subgoal):\n 1. \\<And>s x.\n       x \\<in> {f s |f.\n                f \\<in> range\n                         ((\\<lambda>P s.\n                              Sup {f s |f.\n                                   \\<exists>t.\nf = t P \\<and> t \\<in> range (iterates body G)}) \\<circ>\n                          M)} \\<Longrightarrow>\n       x \\<in> range (\\<lambda>j. SUP i. iterates body G i (M j) s)", "then"], ["proof (chain)\npicking this:\n  x \\<in> {f s |f.\n           f \\<in> range\n                    ((\\<lambda>P s.\n                         Sup {f s |f.\n                              \\<exists>t.\n                                 f = t P \\<and>\n                                 t \\<in> range (iterates body G)}) \\<circ>\n                     M)}", "obtain P where rwx: \"x = P s\"\n                      and Pin: \"P \\<in> range ((\\<lambda>P s. Sup {f s |f.\n                            \\<exists>t. f = t P \\<and> t \\<in> range (iterates body G)}) \\<circ> M)\""], ["proof (prove)\nusing this:\n  x \\<in> {f s |f.\n           f \\<in> range\n                    ((\\<lambda>P s.\n                         Sup {f s |f.\n                              \\<exists>t.\n                                 f = t P \\<and>\n                                 t \\<in> range (iterates body G)}) \\<circ>\n                     M)}\n\ngoal (1 subgoal):\n 1. (\\<And>P.\n        \\<lbrakk>x = P s;\n         P \\<in> range\n                  ((\\<lambda>P s.\n                       Sup {f s |f.\n                            \\<exists>t.\n                               f = t P \\<and>\n                               t \\<in> range (iterates body G)}) \\<circ>\n                   M)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto)"], ["proof (state)\nthis:\n  x = P s\n  P \\<in> range\n           ((\\<lambda>P s.\n                Sup {f s |f.\n                     \\<exists>t.\n                        f = t P \\<and>\n                        t \\<in> range (iterates body G)}) \\<circ>\n            M)\n\ngoal (1 subgoal):\n 1. \\<And>s x.\n       x \\<in> {f s |f.\n                f \\<in> range\n                         ((\\<lambda>P s.\n                              Sup {f s |f.\n                                   \\<exists>t.\nf = t P \\<and> t \\<in> range (iterates body G)}) \\<circ>\n                          M)} \\<Longrightarrow>\n       x \\<in> range (\\<lambda>j. SUP i. iterates body G i (M j) s)", "then"], ["proof (chain)\npicking this:\n  x = P s\n  P \\<in> range\n           ((\\<lambda>P s.\n                Sup {f s |f.\n                     \\<exists>t.\n                        f = t P \\<and>\n                        t \\<in> range (iterates body G)}) \\<circ>\n            M)", "obtain j where \"P = (\\<lambda>s. Sup {f s |f. \\<exists>t. f = t (M j) \\<and>\n                                                 t \\<in> range (iterates body G)})\""], ["proof (prove)\nusing this:\n  x = P s\n  P \\<in> range\n           ((\\<lambda>P s.\n                Sup {f s |f.\n                     \\<exists>t.\n                        f = t P \\<and>\n                        t \\<in> range (iterates body G)}) \\<circ>\n            M)\n\ngoal (1 subgoal):\n 1. (\\<And>j.\n        P =\n        (\\<lambda>s.\n            Sup {f s |f.\n                 \\<exists>t.\n                    f = t (M j) \\<and>\n                    t \\<in> range (iterates body G)}) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by(auto)"], ["proof (state)\nthis:\n  P =\n  (\\<lambda>s.\n      Sup {f s |f.\n           \\<exists>t. f = t (M j) \\<and> t \\<in> range (iterates body G)})\n\ngoal (1 subgoal):\n 1. \\<And>s x.\n       x \\<in> {f s |f.\n                f \\<in> range\n                         ((\\<lambda>P s.\n                              Sup {f s |f.\n                                   \\<exists>t.\nf = t P \\<and> t \\<in> range (iterates body G)}) \\<circ>\n                          M)} \\<Longrightarrow>\n       x \\<in> range (\\<lambda>j. SUP i. iterates body G i (M j) s)", "also"], ["proof (state)\nthis:\n  P =\n  (\\<lambda>s.\n      Sup {f s |f.\n           \\<exists>t. f = t (M j) \\<and> t \\<in> range (iterates body G)})\n\ngoal (1 subgoal):\n 1. \\<And>s x.\n       x \\<in> {f s |f.\n                f \\<in> range\n                         ((\\<lambda>P s.\n                              Sup {f s |f.\n                                   \\<exists>t.\nf = t P \\<and> t \\<in> range (iterates body G)}) \\<circ>\n                          M)} \\<Longrightarrow>\n       x \\<in> range (\\<lambda>j. SUP i. iterates body G i (M j) s)", "{"], ["proof (state)\nthis:\n  P =\n  (\\<lambda>s.\n      Sup {f s |f.\n           \\<exists>t. f = t (M j) \\<and> t \\<in> range (iterates body G)})\n\ngoal (1 subgoal):\n 1. \\<And>s x.\n       x \\<in> {f s |f.\n                f \\<in> range\n                         ((\\<lambda>P s.\n                              Sup {f s |f.\n                                   \\<exists>t.\nf = t P \\<and> t \\<in> range (iterates body G)}) \\<circ>\n                          M)} \\<Longrightarrow>\n       x \\<in> range (\\<lambda>j. SUP i. iterates body G i (M j) s)", "have \"\\<And>s. {f s |f. \\<exists>t. f = t (M j) \\<and> t \\<in> range (iterates body G)} =\n                  range (\\<lambda>i. iterates body G i (M j) s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       {f s |f.\n        \\<exists>t. f = t (M j) \\<and> t \\<in> range (iterates body G)} =\n       range (\\<lambda>i. iterates body G i (M j) s)", "by(auto)"], ["proof (state)\nthis:\n  {f ?s |f.\n   \\<exists>t. f = t (M j) \\<and> t \\<in> range (iterates body G)} =\n  range (\\<lambda>i. iterates body G i (M j) ?s)\n\ngoal (1 subgoal):\n 1. \\<And>s x.\n       x \\<in> {f s |f.\n                f \\<in> range\n                         ((\\<lambda>P s.\n                              Sup {f s |f.\n                                   \\<exists>t.\nf = t P \\<and> t \\<in> range (iterates body G)}) \\<circ>\n                          M)} \\<Longrightarrow>\n       x \\<in> range (\\<lambda>j. SUP i. iterates body G i (M j) s)", "hence \"(\\<lambda>s. Sup {f s |f. \\<exists>t. f = t (M j) \\<and> t \\<in> range (iterates body G)}) =\n               (\\<lambda>s. Sup (range (\\<lambda>i. iterates body G i (M j) s)))\""], ["proof (prove)\nusing this:\n  {f ?s |f.\n   \\<exists>t. f = t (M j) \\<and> t \\<in> range (iterates body G)} =\n  range (\\<lambda>i. iterates body G i (M j) ?s)\n\ngoal (1 subgoal):\n 1. (\\<lambda>s.\n        Sup {f s |f.\n             \\<exists>t.\n                f = t (M j) \\<and> t \\<in> range (iterates body G)}) =\n    (\\<lambda>s. SUP i. iterates body G i (M j) s)", "by(simp)"], ["proof (state)\nthis:\n  (\\<lambda>s.\n      Sup {f s |f.\n           \\<exists>t.\n              f = t (M j) \\<and> t \\<in> range (iterates body G)}) =\n  (\\<lambda>s. SUP i. iterates body G i (M j) s)\n\ngoal (1 subgoal):\n 1. \\<And>s x.\n       x \\<in> {f s |f.\n                f \\<in> range\n                         ((\\<lambda>P s.\n                              Sup {f s |f.\n                                   \\<exists>t.\nf = t P \\<and> t \\<in> range (iterates body G)}) \\<circ>\n                          M)} \\<Longrightarrow>\n       x \\<in> range (\\<lambda>j. SUP i. iterates body G i (M j) s)", "}"], ["proof (state)\nthis:\n  (\\<lambda>s.\n      Sup {f s |f.\n           \\<exists>t.\n              f = t (M j) \\<and> t \\<in> range (iterates body G)}) =\n  (\\<lambda>s. SUP i. iterates body G i (M j) s)\n\ngoal (1 subgoal):\n 1. \\<And>s x.\n       x \\<in> {f s |f.\n                f \\<in> range\n                         ((\\<lambda>P s.\n                              Sup {f s |f.\n                                   \\<exists>t.\nf = t P \\<and> t \\<in> range (iterates body G)}) \\<circ>\n                          M)} \\<Longrightarrow>\n       x \\<in> range (\\<lambda>j. SUP i. iterates body G i (M j) s)", "finally"], ["proof (chain)\npicking this:\n  P = (\\<lambda>s. SUP i. iterates body G i (M j) s)", "have \"x = Sup (range (\\<lambda>i. iterates body G i (M j) s))\""], ["proof (prove)\nusing this:\n  P = (\\<lambda>s. SUP i. iterates body G i (M j) s)\n\ngoal (1 subgoal):\n 1. x = (SUP i. iterates body G i (M j) s)", "by(simp add:rwx)"], ["proof (state)\nthis:\n  x = (SUP i. iterates body G i (M j) s)\n\ngoal (1 subgoal):\n 1. \\<And>s x.\n       x \\<in> {f s |f.\n                f \\<in> range\n                         ((\\<lambda>P s.\n                              Sup {f s |f.\n                                   \\<exists>t.\nf = t P \\<and> t \\<in> range (iterates body G)}) \\<circ>\n                          M)} \\<Longrightarrow>\n       x \\<in> range (\\<lambda>j. SUP i. iterates body G i (M j) s)", "thus \"x \\<in> ?X s\""], ["proof (prove)\nusing this:\n  x = (SUP i. iterates body G i (M j) s)\n\ngoal (1 subgoal):\n 1. x \\<in> range (\\<lambda>j. SUP i. iterates body G i (M j) s)", "by(simp)"], ["proof (state)\nthis:\n  x \\<in> range (\\<lambda>j. SUP i. iterates body G i (M j) s)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  range (\\<lambda>j. SUP i. iterates body G i (M j) ?s) =\n  {f ?s |f.\n   f \\<in> range\n            ((\\<lambda>P s.\n                 Sup {f s |f.\n                      \\<exists>t.\n                         f = t P \\<and>\n                         t \\<in> range (iterates body G)}) \\<circ>\n             M)}\n\ngoal (1 subgoal):\n 1. \\<And>b M.\n       \\<lbrakk>\\<And>i. M i \\<tturnstile> M (Suc i); \\<And>i. sound (M i);\n        \\<And>i. bounded_by b (M i)\\<rbrakk>\n       \\<Longrightarrow> wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          (Sup_exp (range M)) =\n                         Sup_exp\n                          (range\n                            (wp (\\<mu>x.\n                                    body ;;\n                                    x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) \\<circ>\n                             M))", "hence \"(\\<lambda>s. Sup (range (\\<lambda>j .Sup (range (\\<lambda>i. iterates body G i (M j) s))))) =\n          Sup_exp (range (Sup_trans (range (iterates body G)) o M))\""], ["proof (prove)\nusing this:\n  range (\\<lambda>j. SUP i. iterates body G i (M j) ?s) =\n  {f ?s |f.\n   f \\<in> range\n            ((\\<lambda>P s.\n                 Sup {f s |f.\n                      \\<exists>t.\n                         f = t P \\<and>\n                         t \\<in> range (iterates body G)}) \\<circ>\n             M)}\n\ngoal (1 subgoal):\n 1. (\\<lambda>s. SUP j i. iterates body G i (M j) s) =\n    Sup_exp (range (Sup_trans (range (iterates body G)) \\<circ> M))", "by (simp add: Sup_exp_def Sup_trans_def cong del: SUP_cong_simp)"], ["proof (state)\nthis:\n  (\\<lambda>s. SUP j i. iterates body G i (M j) s) =\n  Sup_exp (range (Sup_trans (range (iterates body G)) \\<circ> M))\n\ngoal (1 subgoal):\n 1. \\<And>b M.\n       \\<lbrakk>\\<And>i. M i \\<tturnstile> M (Suc i); \\<And>i. sound (M i);\n        \\<And>i. bounded_by b (M i)\\<rbrakk>\n       \\<Longrightarrow> wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          (Sup_exp (range M)) =\n                         Sup_exp\n                          (range\n                            (wp (\\<mu>x.\n                                    body ;;\n                                    x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) \\<circ>\n                             M))", "}"], ["proof (state)\nthis:\n  (\\<lambda>s. SUP j i. iterates body G i (M j) s) =\n  Sup_exp (range (Sup_trans (range (iterates body G)) \\<circ> M))\n\ngoal (1 subgoal):\n 1. \\<And>b M.\n       \\<lbrakk>\\<And>i. M i \\<tturnstile> M (Suc i); \\<And>i. sound (M i);\n        \\<And>i. bounded_by b (M i)\\<rbrakk>\n       \\<Longrightarrow> wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          (Sup_exp (range M)) =\n                         Sup_exp\n                          (range\n                            (wp (\\<mu>x.\n                                    body ;;\n                                    x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) \\<circ>\n                             M))", "also"], ["proof (state)\nthis:\n  (\\<lambda>s. SUP j i. iterates body G i (M j) s) =\n  Sup_exp (range (Sup_trans (range (iterates body G)) \\<circ> M))\n\ngoal (1 subgoal):\n 1. \\<And>b M.\n       \\<lbrakk>\\<And>i. M i \\<tturnstile> M (Suc i); \\<And>i. sound (M i);\n        \\<And>i. bounded_by b (M i)\\<rbrakk>\n       \\<Longrightarrow> wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          (Sup_exp (range M)) =\n                         Sup_exp\n                          (range\n                            (wp (\\<mu>x.\n                                    body ;;\n                                    x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) \\<circ>\n                             M))", "have \"Sup_exp (range (Sup_trans (range (iterates body G)) o M)) =\n             Sup_exp (range (wp do G \\<longrightarrow> body od o M))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Sup_exp (range (Sup_trans (range (iterates body G)) \\<circ> M)) =\n    Sup_exp\n     (range\n       (wp (\\<mu>x.\n               body ;;\n               x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) \\<circ>\n        M))", "by(simp add:o_def equiv_transD[OF lfp_iterates, OF hb cb, OF sM])"], ["proof (state)\nthis:\n  Sup_exp (range (Sup_trans (range (iterates body G)) \\<circ> M)) =\n  Sup_exp\n   (range\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) \\<circ>\n      M))\n\ngoal (1 subgoal):\n 1. \\<And>b M.\n       \\<lbrakk>\\<And>i. M i \\<tturnstile> M (Suc i); \\<And>i. sound (M i);\n        \\<And>i. bounded_by b (M i)\\<rbrakk>\n       \\<Longrightarrow> wp (\\<mu>x.\n                                body ;;\n                                x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n                          (Sup_exp (range M)) =\n                         Sup_exp\n                          (range\n                            (wp (\\<mu>x.\n                                    body ;;\n                                    x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) \\<circ>\n                             M))", "finally"], ["proof (chain)\npicking this:\n  wp (\\<mu>x.\n         body ;;\n         x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n   (Sup_exp (range M)) =\n  Sup_exp\n   (range\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) \\<circ>\n      M))", "show \"wp do G \\<longrightarrow> body od (Sup_exp (range M)) =\n                Sup_exp (range (wp do G \\<longrightarrow> body od o M))\""], ["proof (prove)\nusing this:\n  wp (\\<mu>x.\n         body ;;\n         x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n   (Sup_exp (range M)) =\n  Sup_exp\n   (range\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) \\<circ>\n      M))\n\ngoal (1 subgoal):\n 1. wp (\\<mu>x.\n           body ;;\n           x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n     (Sup_exp (range M)) =\n    Sup_exp\n     (range\n       (wp (\\<mu>x.\n               body ;;\n               x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) \\<circ>\n        M))", "."], ["proof (state)\nthis:\n  wp (\\<mu>x.\n         body ;;\n         x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip)\n   (Sup_exp (range M)) =\n  Sup_exp\n   (range\n     (wp (\\<mu>x.\n             body ;;\n             x \\<^bsub>\\<guillemotleft> G \\<guillemotright>\\<^esub>\\<oplus> Skip) \\<circ>\n      M))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas cts_intros =\n  cts_wp_Abort  cts_wp_Skip\n  cts_wp_Seq    cts_wp_PC\n  cts_wp_DC     cts_wp_Embed\n  cts_wp_Apply  cts_wp_SetDC\n  cts_wp_SetPC  cts_wp_Bind\n  cts_wp_repeat"], ["", "end"]]}