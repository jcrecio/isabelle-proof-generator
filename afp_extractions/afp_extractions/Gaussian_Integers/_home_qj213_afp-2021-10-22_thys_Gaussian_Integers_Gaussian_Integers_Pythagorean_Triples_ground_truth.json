{"file_name": "/home/qj213/afp-2021-10-22/thys/Gaussian_Integers/Gaussian_Integers_Pythagorean_Triples.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Gaussian_Integers", "problem_names": ["lemma prim_pyth_triple_commute: \"prim_pyth_triple x y z \\<longleftrightarrow> prim_pyth_triple y x z\"", "lemma prim_pyth_triple_aux:\n  fixes u v :: nat\n  assumes \"v \\<le> u\"\n  shows \"(2 * u * v) ^ 2 + (u ^ 2 - v ^ 2) ^ 2 = (u ^ 2 + v ^ 2) ^ 2\"", "lemma prim_pyth_tripleI1:\n  assumes \"0 < v\" \"v < u\" \"coprime u v\" \"\\<not>(odd u \\<and> odd v)\"\n  shows   \"prim_pyth_triple (2 * u * v) (u\\<^sup>2 - v\\<^sup>2) (u\\<^sup>2 + v\\<^sup>2)\"", "lemma prim_pyth_tripleI2:\n  assumes \"0 < v\" \"v < u\" \"coprime u v\" \"\\<not>(odd u \\<and> odd v)\"\n  shows   \"prim_pyth_triple (u\\<^sup>2 - v\\<^sup>2) (2 * u * v) (u\\<^sup>2 + v\\<^sup>2)\"", "lemma primitive_pythagorean_tripleE_int:\n  assumes \"z ^ 2 = x ^ 2 + y ^ 2\"\n  assumes \"coprime x y\"\n  obtains u v :: int\n    where \"coprime u v\" and \"\\<not>(odd u \\<and> odd v)\"\n      and \"x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2  \\<or>  x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\"", "lemma prim_pyth_tripleE:\n  assumes \"prim_pyth_triple x y z\"\n  obtains u v :: nat\n  where \"0 < v\" and \"v < u\" and \"coprime u v\" and \"\\<not>(odd u \\<and> odd v)\" and \"z = u\\<^sup>2 + v\\<^sup>2\"\n    and \"x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2  \\<or>  x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\"", "theorem prim_pyth_triple_iff:\n  \"prim_pyth_triple x y z \\<longleftrightarrow>\n     (\\<exists>u v. 0 < v \\<and> v < u \\<and> coprime u v \\<and> \\<not>(odd u \\<and> odd v) \\<and>\n            (x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2  \\<or>  x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v) \\<and> z = u\\<^sup>2 + v\\<^sup>2)\"\n  (is \"_ \\<longleftrightarrow> ?rhs\")"], "translations": [["", "lemma prim_pyth_triple_commute: \"prim_pyth_triple x y z \\<longleftrightarrow> prim_pyth_triple y x z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prim_pyth_triple x y z = prim_pyth_triple y x z", "by (simp add: prim_pyth_triple_def coprime_commute add_ac conj_ac)"], ["", "lemma prim_pyth_triple_aux:\n  fixes u v :: nat\n  assumes \"v \\<le> u\"\n  shows \"(2 * u * v) ^ 2 + (u ^ 2 - v ^ 2) ^ 2 = (u ^ 2 + v ^ 2) ^ 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (2 * u * v)\\<^sup>2 + (u\\<^sup>2 - v\\<^sup>2)\\<^sup>2 =\n    (u\\<^sup>2 + v\\<^sup>2)\\<^sup>2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (2 * u * v)\\<^sup>2 + (u\\<^sup>2 - v\\<^sup>2)\\<^sup>2 =\n    (u\\<^sup>2 + v\\<^sup>2)\\<^sup>2", "have \"int ((2 * u * v) ^ 2 + (u ^ 2 - v ^ 2) ^ 2) =\n        (2 * int u * int v) ^ 2 + (int u ^ 2 - int v ^ 2) ^ 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. int ((2 * u * v)\\<^sup>2 + (u\\<^sup>2 - v\\<^sup>2)\\<^sup>2) =\n    (2 * int u * int v)\\<^sup>2 +\n    ((int u)\\<^sup>2 - (int v)\\<^sup>2)\\<^sup>2", "using assms"], ["proof (prove)\nusing this:\n  v \\<le> u\n\ngoal (1 subgoal):\n 1. int ((2 * u * v)\\<^sup>2 + (u\\<^sup>2 - v\\<^sup>2)\\<^sup>2) =\n    (2 * int u * int v)\\<^sup>2 +\n    ((int u)\\<^sup>2 - (int v)\\<^sup>2)\\<^sup>2", "by (simp add: of_nat_diff)"], ["proof (state)\nthis:\n  int ((2 * u * v)\\<^sup>2 + (u\\<^sup>2 - v\\<^sup>2)\\<^sup>2) =\n  (2 * int u * int v)\\<^sup>2 + ((int u)\\<^sup>2 - (int v)\\<^sup>2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (2 * u * v)\\<^sup>2 + (u\\<^sup>2 - v\\<^sup>2)\\<^sup>2 =\n    (u\\<^sup>2 + v\\<^sup>2)\\<^sup>2", "also"], ["proof (state)\nthis:\n  int ((2 * u * v)\\<^sup>2 + (u\\<^sup>2 - v\\<^sup>2)\\<^sup>2) =\n  (2 * int u * int v)\\<^sup>2 + ((int u)\\<^sup>2 - (int v)\\<^sup>2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (2 * u * v)\\<^sup>2 + (u\\<^sup>2 - v\\<^sup>2)\\<^sup>2 =\n    (u\\<^sup>2 + v\\<^sup>2)\\<^sup>2", "have \"\\<dots> = (int u ^ 2 + int v ^ 2) ^ 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (2 * int u * int v)\\<^sup>2 +\n    ((int u)\\<^sup>2 - (int v)\\<^sup>2)\\<^sup>2 =\n    ((int u)\\<^sup>2 + (int v)\\<^sup>2)\\<^sup>2", "by (simp add: power2_eq_square algebra_simps)"], ["proof (state)\nthis:\n  (2 * int u * int v)\\<^sup>2 +\n  ((int u)\\<^sup>2 - (int v)\\<^sup>2)\\<^sup>2 =\n  ((int u)\\<^sup>2 + (int v)\\<^sup>2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (2 * u * v)\\<^sup>2 + (u\\<^sup>2 - v\\<^sup>2)\\<^sup>2 =\n    (u\\<^sup>2 + v\\<^sup>2)\\<^sup>2", "also"], ["proof (state)\nthis:\n  (2 * int u * int v)\\<^sup>2 +\n  ((int u)\\<^sup>2 - (int v)\\<^sup>2)\\<^sup>2 =\n  ((int u)\\<^sup>2 + (int v)\\<^sup>2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (2 * u * v)\\<^sup>2 + (u\\<^sup>2 - v\\<^sup>2)\\<^sup>2 =\n    (u\\<^sup>2 + v\\<^sup>2)\\<^sup>2", "have \"\\<dots> = int ((u ^ 2 + v ^ 2) ^ 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((int u)\\<^sup>2 + (int v)\\<^sup>2)\\<^sup>2 =\n    int ((u\\<^sup>2 + v\\<^sup>2)\\<^sup>2)", "by simp"], ["proof (state)\nthis:\n  ((int u)\\<^sup>2 + (int v)\\<^sup>2)\\<^sup>2 =\n  int ((u\\<^sup>2 + v\\<^sup>2)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (2 * u * v)\\<^sup>2 + (u\\<^sup>2 - v\\<^sup>2)\\<^sup>2 =\n    (u\\<^sup>2 + v\\<^sup>2)\\<^sup>2", "finally"], ["proof (chain)\npicking this:\n  int ((2 * u * v)\\<^sup>2 + (u\\<^sup>2 - v\\<^sup>2)\\<^sup>2) =\n  int ((u\\<^sup>2 + v\\<^sup>2)\\<^sup>2)", "show ?thesis"], ["proof (prove)\nusing this:\n  int ((2 * u * v)\\<^sup>2 + (u\\<^sup>2 - v\\<^sup>2)\\<^sup>2) =\n  int ((u\\<^sup>2 + v\\<^sup>2)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (2 * u * v)\\<^sup>2 + (u\\<^sup>2 - v\\<^sup>2)\\<^sup>2 =\n    (u\\<^sup>2 + v\\<^sup>2)\\<^sup>2", "by (simp only: of_nat_eq_iff)"], ["proof (state)\nthis:\n  (2 * u * v)\\<^sup>2 + (u\\<^sup>2 - v\\<^sup>2)\\<^sup>2 =\n  (u\\<^sup>2 + v\\<^sup>2)\\<^sup>2\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prim_pyth_tripleI1:\n  assumes \"0 < v\" \"v < u\" \"coprime u v\" \"\\<not>(odd u \\<and> odd v)\"\n  shows   \"prim_pyth_triple (2 * u * v) (u\\<^sup>2 - v\\<^sup>2) (u\\<^sup>2 + v\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prim_pyth_triple (2 * u * v) (u\\<^sup>2 - v\\<^sup>2)\n     (u\\<^sup>2 + v\\<^sup>2)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. prim_pyth_triple (2 * u * v) (u\\<^sup>2 - v\\<^sup>2)\n     (u\\<^sup>2 + v\\<^sup>2)", "have \"v ^ 2 < u ^ 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v\\<^sup>2 < u\\<^sup>2", "using assms"], ["proof (prove)\nusing this:\n  0 < v\n  v < u\n  coprime u v\n  \\<not> (odd u \\<and> odd v)\n\ngoal (1 subgoal):\n 1. v\\<^sup>2 < u\\<^sup>2", "by (intro power_strict_mono) auto"], ["proof (state)\nthis:\n  v\\<^sup>2 < u\\<^sup>2\n\ngoal (1 subgoal):\n 1. prim_pyth_triple (2 * u * v) (u\\<^sup>2 - v\\<^sup>2)\n     (u\\<^sup>2 + v\\<^sup>2)", "hence \"\\<not>u ^ 2 < v ^ 2\""], ["proof (prove)\nusing this:\n  v\\<^sup>2 < u\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<not> u\\<^sup>2 < v\\<^sup>2", "by linarith"], ["proof (state)\nthis:\n  \\<not> u\\<^sup>2 < v\\<^sup>2\n\ngoal (1 subgoal):\n 1. prim_pyth_triple (2 * u * v) (u\\<^sup>2 - v\\<^sup>2)\n     (u\\<^sup>2 + v\\<^sup>2)", "from assms"], ["proof (chain)\npicking this:\n  0 < v\n  v < u\n  coprime u v\n  \\<not> (odd u \\<and> odd v)", "have \"coprime (int u) (int v ^ 2)\""], ["proof (prove)\nusing this:\n  0 < v\n  v < u\n  coprime u v\n  \\<not> (odd u \\<and> odd v)\n\ngoal (1 subgoal):\n 1. coprime (int u) ((int v)\\<^sup>2)", "by auto"], ["proof (state)\nthis:\n  coprime (int u) ((int v)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. prim_pyth_triple (2 * u * v) (u\\<^sup>2 - v\\<^sup>2)\n     (u\\<^sup>2 + v\\<^sup>2)", "hence \"coprime (int u) (int u * int u + (-(int v ^ 2)))\""], ["proof (prove)\nusing this:\n  coprime (int u) ((int v)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. coprime (int u) (int u * int u + - (int v)\\<^sup>2)", "unfolding coprime_iff_gcd_eq_1"], ["proof (prove)\nusing this:\n  gcd (int u) ((int v)\\<^sup>2) = 1\n\ngoal (1 subgoal):\n 1. gcd (int u) (int u * int u + - (int v)\\<^sup>2) = 1", "by (subst gcd_add_mult) auto"], ["proof (state)\nthis:\n  coprime (int u) (int u * int u + - (int v)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. prim_pyth_triple (2 * u * v) (u\\<^sup>2 - v\\<^sup>2)\n     (u\\<^sup>2 + v\\<^sup>2)", "also"], ["proof (state)\nthis:\n  coprime (int u) (int u * int u + - (int v)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. prim_pyth_triple (2 * u * v) (u\\<^sup>2 - v\\<^sup>2)\n     (u\\<^sup>2 + v\\<^sup>2)", "have \"int u * int u + (-(int v ^ 2)) = int (u ^ 2 - v ^ 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. int u * int u + - (int v)\\<^sup>2 = int (u\\<^sup>2 - v\\<^sup>2)", "using \\<open>v < u\\<close>"], ["proof (prove)\nusing this:\n  v < u\n\ngoal (1 subgoal):\n 1. int u * int u + - (int v)\\<^sup>2 = int (u\\<^sup>2 - v\\<^sup>2)", "by (simp add: of_nat_diff flip: power2_eq_square)"], ["proof (state)\nthis:\n  int u * int u + - (int v)\\<^sup>2 = int (u\\<^sup>2 - v\\<^sup>2)\n\ngoal (1 subgoal):\n 1. prim_pyth_triple (2 * u * v) (u\\<^sup>2 - v\\<^sup>2)\n     (u\\<^sup>2 + v\\<^sup>2)", "finally"], ["proof (chain)\npicking this:\n  coprime (int u) (int (u\\<^sup>2 - v\\<^sup>2))", "have coprime1: \"coprime u (u ^ 2 - v ^ 2)\""], ["proof (prove)\nusing this:\n  coprime (int u) (int (u\\<^sup>2 - v\\<^sup>2))\n\ngoal (1 subgoal):\n 1. coprime u (u\\<^sup>2 - v\\<^sup>2)", "by auto"], ["proof (state)\nthis:\n  coprime u (u\\<^sup>2 - v\\<^sup>2)\n\ngoal (1 subgoal):\n 1. prim_pyth_triple (2 * u * v) (u\\<^sup>2 - v\\<^sup>2)\n     (u\\<^sup>2 + v\\<^sup>2)", "from assms"], ["proof (chain)\npicking this:\n  0 < v\n  v < u\n  coprime u v\n  \\<not> (odd u \\<and> odd v)", "have \"coprime (int v) (int u ^ 2)\""], ["proof (prove)\nusing this:\n  0 < v\n  v < u\n  coprime u v\n  \\<not> (odd u \\<and> odd v)\n\ngoal (1 subgoal):\n 1. coprime (int v) ((int u)\\<^sup>2)", "by (auto simp: coprime_commute)"], ["proof (state)\nthis:\n  coprime (int v) ((int u)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. prim_pyth_triple (2 * u * v) (u\\<^sup>2 - v\\<^sup>2)\n     (u\\<^sup>2 + v\\<^sup>2)", "hence \"coprime (int v) ((-int v) * int v + int u ^ 2)\""], ["proof (prove)\nusing this:\n  coprime (int v) ((int u)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. coprime (int v) (- int v * int v + (int u)\\<^sup>2)", "unfolding coprime_iff_gcd_eq_1"], ["proof (prove)\nusing this:\n  gcd (int v) ((int u)\\<^sup>2) = 1\n\ngoal (1 subgoal):\n 1. gcd (int v) (- int v * int v + (int u)\\<^sup>2) = 1", "by (subst gcd_add_mult) auto"], ["proof (state)\nthis:\n  coprime (int v) (- int v * int v + (int u)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. prim_pyth_triple (2 * u * v) (u\\<^sup>2 - v\\<^sup>2)\n     (u\\<^sup>2 + v\\<^sup>2)", "also"], ["proof (state)\nthis:\n  coprime (int v) (- int v * int v + (int u)\\<^sup>2)\n\ngoal (1 subgoal):\n 1. prim_pyth_triple (2 * u * v) (u\\<^sup>2 - v\\<^sup>2)\n     (u\\<^sup>2 + v\\<^sup>2)", "have \"(-int v) * int v + int u ^ 2 = int (u ^ 2 - v ^ 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - int v * int v + (int u)\\<^sup>2 = int (u\\<^sup>2 - v\\<^sup>2)", "using \\<open>v < u\\<close>"], ["proof (prove)\nusing this:\n  v < u\n\ngoal (1 subgoal):\n 1. - int v * int v + (int u)\\<^sup>2 = int (u\\<^sup>2 - v\\<^sup>2)", "by (simp add: of_nat_diff flip: power2_eq_square)"], ["proof (state)\nthis:\n  - int v * int v + (int u)\\<^sup>2 = int (u\\<^sup>2 - v\\<^sup>2)\n\ngoal (1 subgoal):\n 1. prim_pyth_triple (2 * u * v) (u\\<^sup>2 - v\\<^sup>2)\n     (u\\<^sup>2 + v\\<^sup>2)", "finally"], ["proof (chain)\npicking this:\n  coprime (int v) (int (u\\<^sup>2 - v\\<^sup>2))", "have coprime2: \"coprime v (u ^ 2 - v ^ 2)\""], ["proof (prove)\nusing this:\n  coprime (int v) (int (u\\<^sup>2 - v\\<^sup>2))\n\ngoal (1 subgoal):\n 1. coprime v (u\\<^sup>2 - v\\<^sup>2)", "by auto"], ["proof (state)\nthis:\n  coprime v (u\\<^sup>2 - v\\<^sup>2)\n\ngoal (1 subgoal):\n 1. prim_pyth_triple (2 * u * v) (u\\<^sup>2 - v\\<^sup>2)\n     (u\\<^sup>2 + v\\<^sup>2)", "have \"(2 * u * v) ^ 2 + (u ^ 2 - v ^ 2) ^ 2 = (u ^ 2 + v ^ 2) ^ 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (2 * u * v)\\<^sup>2 + (u\\<^sup>2 - v\\<^sup>2)\\<^sup>2 =\n    (u\\<^sup>2 + v\\<^sup>2)\\<^sup>2", "using \\<open>v < u\\<close>"], ["proof (prove)\nusing this:\n  v < u\n\ngoal (1 subgoal):\n 1. (2 * u * v)\\<^sup>2 + (u\\<^sup>2 - v\\<^sup>2)\\<^sup>2 =\n    (u\\<^sup>2 + v\\<^sup>2)\\<^sup>2", "by (intro prim_pyth_triple_aux) auto"], ["proof (state)\nthis:\n  (2 * u * v)\\<^sup>2 + (u\\<^sup>2 - v\\<^sup>2)\\<^sup>2 =\n  (u\\<^sup>2 + v\\<^sup>2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. prim_pyth_triple (2 * u * v) (u\\<^sup>2 - v\\<^sup>2)\n     (u\\<^sup>2 + v\\<^sup>2)", "moreover"], ["proof (state)\nthis:\n  (2 * u * v)\\<^sup>2 + (u\\<^sup>2 - v\\<^sup>2)\\<^sup>2 =\n  (u\\<^sup>2 + v\\<^sup>2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. prim_pyth_triple (2 * u * v) (u\\<^sup>2 - v\\<^sup>2)\n     (u\\<^sup>2 + v\\<^sup>2)", "have \"coprime (2 * u * v) (u ^ 2 - v ^ 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coprime (2 * u * v) (u\\<^sup>2 - v\\<^sup>2)", "using assms \\<open>\\<not>u ^ 2 < v ^ 2\\<close> coprime1 coprime2"], ["proof (prove)\nusing this:\n  0 < v\n  v < u\n  coprime u v\n  \\<not> (odd u \\<and> odd v)\n  \\<not> u\\<^sup>2 < v\\<^sup>2\n  coprime u (u\\<^sup>2 - v\\<^sup>2)\n  coprime v (u\\<^sup>2 - v\\<^sup>2)\n\ngoal (1 subgoal):\n 1. coprime (2 * u * v) (u\\<^sup>2 - v\\<^sup>2)", "by auto"], ["proof (state)\nthis:\n  coprime (2 * u * v) (u\\<^sup>2 - v\\<^sup>2)\n\ngoal (1 subgoal):\n 1. prim_pyth_triple (2 * u * v) (u\\<^sup>2 - v\\<^sup>2)\n     (u\\<^sup>2 + v\\<^sup>2)", "ultimately"], ["proof (chain)\npicking this:\n  (2 * u * v)\\<^sup>2 + (u\\<^sup>2 - v\\<^sup>2)\\<^sup>2 =\n  (u\\<^sup>2 + v\\<^sup>2)\\<^sup>2\n  coprime (2 * u * v) (u\\<^sup>2 - v\\<^sup>2)", "show ?thesis"], ["proof (prove)\nusing this:\n  (2 * u * v)\\<^sup>2 + (u\\<^sup>2 - v\\<^sup>2)\\<^sup>2 =\n  (u\\<^sup>2 + v\\<^sup>2)\\<^sup>2\n  coprime (2 * u * v) (u\\<^sup>2 - v\\<^sup>2)\n\ngoal (1 subgoal):\n 1. prim_pyth_triple (2 * u * v) (u\\<^sup>2 - v\\<^sup>2)\n     (u\\<^sup>2 + v\\<^sup>2)", "using assms \\<open>v ^ 2 < u ^ 2\\<close>"], ["proof (prove)\nusing this:\n  (2 * u * v)\\<^sup>2 + (u\\<^sup>2 - v\\<^sup>2)\\<^sup>2 =\n  (u\\<^sup>2 + v\\<^sup>2)\\<^sup>2\n  coprime (2 * u * v) (u\\<^sup>2 - v\\<^sup>2)\n  0 < v\n  v < u\n  coprime u v\n  \\<not> (odd u \\<and> odd v)\n  v\\<^sup>2 < u\\<^sup>2\n\ngoal (1 subgoal):\n 1. prim_pyth_triple (2 * u * v) (u\\<^sup>2 - v\\<^sup>2)\n     (u\\<^sup>2 + v\\<^sup>2)", "by (simp add: prim_pyth_triple_def)"], ["proof (state)\nthis:\n  prim_pyth_triple (2 * u * v) (u\\<^sup>2 - v\\<^sup>2)\n   (u\\<^sup>2 + v\\<^sup>2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prim_pyth_tripleI2:\n  assumes \"0 < v\" \"v < u\" \"coprime u v\" \"\\<not>(odd u \\<and> odd v)\"\n  shows   \"prim_pyth_triple (u\\<^sup>2 - v\\<^sup>2) (2 * u * v) (u\\<^sup>2 + v\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prim_pyth_triple (u\\<^sup>2 - v\\<^sup>2) (2 * u * v)\n     (u\\<^sup>2 + v\\<^sup>2)", "using prim_pyth_tripleI1[OF assms]"], ["proof (prove)\nusing this:\n  prim_pyth_triple (2 * u * v) (u\\<^sup>2 - v\\<^sup>2)\n   (u\\<^sup>2 + v\\<^sup>2)\n\ngoal (1 subgoal):\n 1. prim_pyth_triple (u\\<^sup>2 - v\\<^sup>2) (2 * u * v)\n     (u\\<^sup>2 + v\\<^sup>2)", "by (simp add: prim_pyth_triple_commute)"], ["", "lemma primitive_pythagorean_tripleE_int:\n  assumes \"z ^ 2 = x ^ 2 + y ^ 2\"\n  assumes \"coprime x y\"\n  obtains u v :: int\n    where \"coprime u v\" and \"\\<not>(odd u \\<and> odd v)\"\n      and \"x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2  \\<or>  x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>coprime u v; \\<not> (odd u \\<and> odd v);\n         x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>coprime u v; \\<not> (odd u \\<and> odd v);\n         x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<not>(even x \\<and> even y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (even x \\<and> even y)", "using not_coprimeI[of 2 x y] \\<open>coprime x y\\<close>"], ["proof (prove)\nusing this:\n  \\<lbrakk>even x; even y; \\<not> is_unit 2\\<rbrakk>\n  \\<Longrightarrow> \\<not> coprime x y\n  coprime x y\n\ngoal (1 subgoal):\n 1. \\<not> (even x \\<and> even y)", "by auto"], ["proof (state)\nthis:\n  \\<not> (even x \\<and> even y)\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>coprime u v; \\<not> (odd u \\<and> odd v);\n         x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  \\<not> (even x \\<and> even y)\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>coprime u v; \\<not> (odd u \\<and> odd v);\n         x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<not>(odd x \\<and> odd y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (odd x \\<and> odd y)", "proof safe"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>odd x; odd y\\<rbrakk> \\<Longrightarrow> False", "assume \"odd x\" \"odd y\""], ["proof (state)\nthis:\n  odd x\n  odd y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>odd x; odd y\\<rbrakk> \\<Longrightarrow> False", "hence \"[x ^ 2 + y ^ 2 = 1 + 1] (mod 4)\""], ["proof (prove)\nusing this:\n  odd x\n  odd y\n\ngoal (1 subgoal):\n 1. [x\\<^sup>2 + y\\<^sup>2 = 1 + 1] (mod 4)", "by (intro cong_add odd_square_cong_4_int)"], ["proof (state)\nthis:\n  [x\\<^sup>2 + y\\<^sup>2 = 1 + 1] (mod 4)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>odd x; odd y\\<rbrakk> \\<Longrightarrow> False", "hence \"[z ^ 2 = 2] (mod 4)\""], ["proof (prove)\nusing this:\n  [x\\<^sup>2 + y\\<^sup>2 = 1 + 1] (mod 4)\n\ngoal (1 subgoal):\n 1. [z\\<^sup>2 = 2] (mod 4)", "by (simp add: assms)"], ["proof (state)\nthis:\n  [z\\<^sup>2 = 2] (mod 4)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>odd x; odd y\\<rbrakk> \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  [z\\<^sup>2 = 2] (mod 4)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>odd x; odd y\\<rbrakk> \\<Longrightarrow> False", "have \"[z ^ 2 = 0] (mod 4) \\<or> [z ^ 2 = 1] (mod 4)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [z\\<^sup>2 = 0] (mod 4) \\<or> [z\\<^sup>2 = 1] (mod 4)", "using even_square_cong_4_int[of z] odd_square_cong_4_int[of z]"], ["proof (prove)\nusing this:\n  even z \\<Longrightarrow> [z\\<^sup>2 = 0] (mod 4)\n  odd z \\<Longrightarrow> [z\\<^sup>2 = 1] (mod 4)\n\ngoal (1 subgoal):\n 1. [z\\<^sup>2 = 0] (mod 4) \\<or> [z\\<^sup>2 = 1] (mod 4)", "by (cases \"even z\") auto"], ["proof (state)\nthis:\n  [z\\<^sup>2 = 0] (mod 4) \\<or> [z\\<^sup>2 = 1] (mod 4)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>odd x; odd y\\<rbrakk> \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  [z\\<^sup>2 = 2] (mod 4)\n  [z\\<^sup>2 = 0] (mod 4) \\<or> [z\\<^sup>2 = 1] (mod 4)", "show False"], ["proof (prove)\nusing this:\n  [z\\<^sup>2 = 2] (mod 4)\n  [z\\<^sup>2 = 0] (mod 4) \\<or> [z\\<^sup>2 = 1] (mod 4)\n\ngoal (1 subgoal):\n 1. False", "by (auto simp: cong_def)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> (odd x \\<and> odd y)\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>coprime u v; \\<not> (odd u \\<and> odd v);\n         x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  \\<not> (even x \\<and> even y)\n  \\<not> (odd x \\<and> odd y)", "have \"even y \\<longleftrightarrow> odd x\""], ["proof (prove)\nusing this:\n  \\<not> (even x \\<and> even y)\n  \\<not> (odd x \\<and> odd y)\n\ngoal (1 subgoal):\n 1. even y = odd x", "by blast"], ["proof (state)\nthis:\n  even y = odd x\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>coprime u v; \\<not> (odd u \\<and> odd v);\n         x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"even z \\<longleftrightarrow> even (z ^ 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. even z = even (z\\<^sup>2)", "by auto"], ["proof (state)\nthis:\n  even z = even (z\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>coprime u v; \\<not> (odd u \\<and> odd v);\n         x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  even z = even (z\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>coprime u v; \\<not> (odd u \\<and> odd v);\n         x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"even (z ^ 2) \\<longleftrightarrow> even (x ^ 2 + y ^ 2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. even (z\\<^sup>2) = even (x\\<^sup>2 + y\\<^sup>2)", "by (subst assms(1)) auto"], ["proof (state)\nthis:\n  even (z\\<^sup>2) = even (x\\<^sup>2 + y\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>coprime u v; \\<not> (odd u \\<and> odd v);\n         x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "finally"], ["proof (chain)\npicking this:\n  even z = even (x\\<^sup>2 + y\\<^sup>2)", "have \"odd z\""], ["proof (prove)\nusing this:\n  even z = even (x\\<^sup>2 + y\\<^sup>2)\n\ngoal (1 subgoal):\n 1. odd z", "by (cases \"even x\") (auto simp: \\<open>even y \\<longleftrightarrow> \\<not>even x\\<close>)"], ["proof (state)\nthis:\n  odd z\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>coprime u v; \\<not> (odd u \\<and> odd v);\n         x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define t where \"t = of_int x + \\<i>\\<^sub>\\<int> * of_int y\""], ["proof (state)\nthis:\n  t = of_int x + gauss_i * of_int y\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>coprime u v; \\<not> (odd u \\<and> odd v);\n         x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from assms"], ["proof (chain)\npicking this:\n  z\\<^sup>2 = x\\<^sup>2 + y\\<^sup>2\n  coprime x y", "have t_mult_cnj: \"t * gauss_cnj t = of_int z ^ 2\""], ["proof (prove)\nusing this:\n  z\\<^sup>2 = x\\<^sup>2 + y\\<^sup>2\n  coprime x y\n\ngoal (1 subgoal):\n 1. t * gauss_cnj t = (of_int z)\\<^sup>2", "by (simp add: t_def power2_eq_square algebra_simps flip: of_int_mult of_int_add)"], ["proof (state)\nthis:\n  t * gauss_cnj t = (of_int z)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>coprime u v; \\<not> (odd u \\<and> odd v);\n         x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"gauss_int_norm t = z ^ 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. int (gauss_int_norm t) = z\\<^sup>2", "by (simp add: gauss_int_norm_def t_def assms)"], ["proof (state)\nthis:\n  int (gauss_int_norm t) = z\\<^sup>2\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>coprime u v; \\<not> (odd u \\<and> odd v);\n         x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with \\<open>coprime x y\\<close> and \\<open>odd z\\<close>"], ["proof (chain)\npicking this:\n  coprime x y\n  odd z\n  int (gauss_int_norm t) = z\\<^sup>2", "have \"coprime t (gauss_cnj t)\""], ["proof (prove)\nusing this:\n  coprime x y\n  odd z\n  int (gauss_int_norm t) = z\\<^sup>2\n\ngoal (1 subgoal):\n 1. coprime t (gauss_cnj t)", "by (intro coprime_self_gauss_cnj)\n       (auto simp: t_def gauss_int_norm_def assms(1) [symmetric] even_nat_iff)"], ["proof (state)\nthis:\n  coprime t (gauss_cnj t)\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>coprime u v; \\<not> (odd u \\<and> odd v);\n         x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  coprime t (gauss_cnj t)\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>coprime u v; \\<not> (odd u \\<and> odd v);\n         x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"is_square (t * gauss_cnj t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_square (t * gauss_cnj t)", "by (subst t_mult_cnj) auto"], ["proof (state)\nthis:\n  is_square (t * gauss_cnj t)\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>coprime u v; \\<not> (odd u \\<and> odd v);\n         x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "hence \"is_nth_power_upto_unit 2 (t * gauss_cnj t)\""], ["proof (prove)\nusing this:\n  is_square (t * gauss_cnj t)\n\ngoal (1 subgoal):\n 1. is_nth_power_upto_unit 2 (t * gauss_cnj t)", "by (auto intro: is_nth_power_upto_unit_base)"], ["proof (state)\nthis:\n  is_nth_power_upto_unit 2 (t * gauss_cnj t)\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>coprime u v; \\<not> (odd u \\<and> odd v);\n         x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  coprime t (gauss_cnj t)\n  is_nth_power_upto_unit 2 (t * gauss_cnj t)", "have \"is_nth_power_upto_unit 2 t\""], ["proof (prove)\nusing this:\n  coprime t (gauss_cnj t)\n  is_nth_power_upto_unit 2 (t * gauss_cnj t)\n\ngoal (1 subgoal):\n 1. is_nth_power_upto_unit 2 t", "by (rule is_nth_power_upto_unit_mult_coprimeD1)"], ["proof (state)\nthis:\n  is_nth_power_upto_unit 2 t\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>coprime u v; \\<not> (odd u \\<and> odd v);\n         x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  is_nth_power_upto_unit 2 t", "obtain a b where ab: \"is_unit a\" \"a * t = b ^ 2\""], ["proof (prove)\nusing this:\n  is_nth_power_upto_unit 2 t\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        \\<lbrakk>is_unit a; a * t = b\\<^sup>2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: is_nth_power_upto_unit_def is_nth_power_def)"], ["proof (state)\nthis:\n  is_unit a\n  a * t = b\\<^sup>2\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>coprime u v; \\<not> (odd u \\<and> odd v);\n         x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from ab(1)"], ["proof (chain)\npicking this:\n  is_unit a", "have \"a \\<in> {1, -1, \\<i>\\<^sub>\\<int>, -\\<i>\\<^sub>\\<int>}\""], ["proof (prove)\nusing this:\n  is_unit a\n\ngoal (1 subgoal):\n 1. a \\<in> {1, - 1, gauss_i, - gauss_i}", "by (auto simp: is_unit_gauss_int_iff)"], ["proof (state)\nthis:\n  a \\<in> {1, - 1, gauss_i, - gauss_i}\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>coprime u v; \\<not> (odd u \\<and> odd v);\n         x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "then"], ["proof (chain)\npicking this:\n  a \\<in> {1, - 1, gauss_i, - gauss_i}", "obtain u v :: int where \"ReZ t = 2 * u * v \\<and> ImZ t = u ^ 2 - v ^ 2 \\<or> \n                                ImZ t = 2 * u * v \\<and> ReZ t = u ^ 2 - v ^ 2\""], ["proof (prove)\nusing this:\n  a \\<in> {1, - 1, gauss_i, - gauss_i}\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        ReZ t = 2 * u * v \\<and> ImZ t = u\\<^sup>2 - v\\<^sup>2 \\<or>\n        ImZ t = 2 * u * v \\<and>\n        ReZ t = u\\<^sup>2 - v\\<^sup>2 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "proof safe"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<lbrakk>\\<And>u v.\n                ReZ t = 2 * u * v \\<and> ImZ t = u\\<^sup>2 - v\\<^sup>2 \\<or>\n                ImZ t = 2 * u * v \\<and>\n                ReZ t = u\\<^sup>2 - v\\<^sup>2 \\<Longrightarrow>\n                thesis;\n     a = 1\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>u v.\n                ReZ t = 2 * u * v \\<and> ImZ t = u\\<^sup>2 - v\\<^sup>2 \\<or>\n                ImZ t = 2 * u * v \\<and>\n                ReZ t = u\\<^sup>2 - v\\<^sup>2 \\<Longrightarrow>\n                thesis;\n     a = - 1\\<rbrakk>\n    \\<Longrightarrow> thesis\n 3. \\<lbrakk>\\<And>u v.\n                ReZ t = 2 * u * v \\<and> ImZ t = u\\<^sup>2 - v\\<^sup>2 \\<or>\n                ImZ t = 2 * u * v \\<and>\n                ReZ t = u\\<^sup>2 - v\\<^sup>2 \\<Longrightarrow>\n                thesis;\n     a = gauss_i\\<rbrakk>\n    \\<Longrightarrow> thesis\n 4. \\<lbrakk>\\<And>u v.\n                ReZ t = 2 * u * v \\<and> ImZ t = u\\<^sup>2 - v\\<^sup>2 \\<or>\n                ImZ t = 2 * u * v \\<and>\n                ReZ t = u\\<^sup>2 - v\\<^sup>2 \\<Longrightarrow>\n                thesis;\n     a = - gauss_i\\<rbrakk>\n    \\<Longrightarrow> thesis", "assume [simp]: \"a = 1\""], ["proof (state)\nthis:\n  a = 1\n\ngoal (4 subgoals):\n 1. \\<lbrakk>\\<And>u v.\n                ReZ t = 2 * u * v \\<and> ImZ t = u\\<^sup>2 - v\\<^sup>2 \\<or>\n                ImZ t = 2 * u * v \\<and>\n                ReZ t = u\\<^sup>2 - v\\<^sup>2 \\<Longrightarrow>\n                thesis;\n     a = 1\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>u v.\n                ReZ t = 2 * u * v \\<and> ImZ t = u\\<^sup>2 - v\\<^sup>2 \\<or>\n                ImZ t = 2 * u * v \\<and>\n                ReZ t = u\\<^sup>2 - v\\<^sup>2 \\<Longrightarrow>\n                thesis;\n     a = - 1\\<rbrakk>\n    \\<Longrightarrow> thesis\n 3. \\<lbrakk>\\<And>u v.\n                ReZ t = 2 * u * v \\<and> ImZ t = u\\<^sup>2 - v\\<^sup>2 \\<or>\n                ImZ t = 2 * u * v \\<and>\n                ReZ t = u\\<^sup>2 - v\\<^sup>2 \\<Longrightarrow>\n                thesis;\n     a = gauss_i\\<rbrakk>\n    \\<Longrightarrow> thesis\n 4. \\<lbrakk>\\<And>u v.\n                ReZ t = 2 * u * v \\<and> ImZ t = u\\<^sup>2 - v\\<^sup>2 \\<or>\n                ImZ t = 2 * u * v \\<and>\n                ReZ t = u\\<^sup>2 - v\\<^sup>2 \\<Longrightarrow>\n                thesis;\n     a = - gauss_i\\<rbrakk>\n    \\<Longrightarrow> thesis", "have \"ReZ t = ReZ b ^ 2 - ImZ b ^ 2\" \"ImZ t = 2 * ReZ b * ImZ b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ReZ t = (ReZ b)\\<^sup>2 - (ImZ b)\\<^sup>2 &&& ImZ t = 2 * ReZ b * ImZ b", "using ab(2)"], ["proof (prove)\nusing this:\n  a * t = b\\<^sup>2\n\ngoal (1 subgoal):\n 1. ReZ t = (ReZ b)\\<^sup>2 - (ImZ b)\\<^sup>2 &&& ImZ t = 2 * ReZ b * ImZ b", "by (auto simp: gauss_int_eq_iff power2_eq_square)"], ["proof (state)\nthis:\n  ReZ t = (ReZ b)\\<^sup>2 - (ImZ b)\\<^sup>2\n  ImZ t = 2 * ReZ b * ImZ b\n\ngoal (4 subgoals):\n 1. \\<lbrakk>\\<And>u v.\n                ReZ t = 2 * u * v \\<and> ImZ t = u\\<^sup>2 - v\\<^sup>2 \\<or>\n                ImZ t = 2 * u * v \\<and>\n                ReZ t = u\\<^sup>2 - v\\<^sup>2 \\<Longrightarrow>\n                thesis;\n     a = 1\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>u v.\n                ReZ t = 2 * u * v \\<and> ImZ t = u\\<^sup>2 - v\\<^sup>2 \\<or>\n                ImZ t = 2 * u * v \\<and>\n                ReZ t = u\\<^sup>2 - v\\<^sup>2 \\<Longrightarrow>\n                thesis;\n     a = - 1\\<rbrakk>\n    \\<Longrightarrow> thesis\n 3. \\<lbrakk>\\<And>u v.\n                ReZ t = 2 * u * v \\<and> ImZ t = u\\<^sup>2 - v\\<^sup>2 \\<or>\n                ImZ t = 2 * u * v \\<and>\n                ReZ t = u\\<^sup>2 - v\\<^sup>2 \\<Longrightarrow>\n                thesis;\n     a = gauss_i\\<rbrakk>\n    \\<Longrightarrow> thesis\n 4. \\<lbrakk>\\<And>u v.\n                ReZ t = 2 * u * v \\<and> ImZ t = u\\<^sup>2 - v\\<^sup>2 \\<or>\n                ImZ t = 2 * u * v \\<and>\n                ReZ t = u\\<^sup>2 - v\\<^sup>2 \\<Longrightarrow>\n                thesis;\n     a = - gauss_i\\<rbrakk>\n    \\<Longrightarrow> thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  ReZ t = (ReZ b)\\<^sup>2 - (ImZ b)\\<^sup>2\n  ImZ t = 2 * ReZ b * ImZ b\n\ngoal (1 subgoal):\n 1. thesis", "using that"], ["proof (prove)\nusing this:\n  ReZ t = (ReZ b)\\<^sup>2 - (ImZ b)\\<^sup>2\n  ImZ t = 2 * ReZ b * ImZ b\n  ReZ t = 2 * ?u * ?v \\<and> ImZ t = ?u\\<^sup>2 - ?v\\<^sup>2 \\<or>\n  ImZ t = 2 * ?u * ?v \\<and>\n  ReZ t = ?u\\<^sup>2 - ?v\\<^sup>2 \\<Longrightarrow>\n  thesis\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<And>u v.\n                ReZ t = 2 * u * v \\<and> ImZ t = u\\<^sup>2 - v\\<^sup>2 \\<or>\n                ImZ t = 2 * u * v \\<and>\n                ReZ t = u\\<^sup>2 - v\\<^sup>2 \\<Longrightarrow>\n                thesis;\n     a = - 1\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>u v.\n                ReZ t = 2 * u * v \\<and> ImZ t = u\\<^sup>2 - v\\<^sup>2 \\<or>\n                ImZ t = 2 * u * v \\<and>\n                ReZ t = u\\<^sup>2 - v\\<^sup>2 \\<Longrightarrow>\n                thesis;\n     a = gauss_i\\<rbrakk>\n    \\<Longrightarrow> thesis\n 3. \\<lbrakk>\\<And>u v.\n                ReZ t = 2 * u * v \\<and> ImZ t = u\\<^sup>2 - v\\<^sup>2 \\<or>\n                ImZ t = 2 * u * v \\<and>\n                ReZ t = u\\<^sup>2 - v\\<^sup>2 \\<Longrightarrow>\n                thesis;\n     a = - gauss_i\\<rbrakk>\n    \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<And>u v.\n                ReZ t = 2 * u * v \\<and> ImZ t = u\\<^sup>2 - v\\<^sup>2 \\<or>\n                ImZ t = 2 * u * v \\<and>\n                ReZ t = u\\<^sup>2 - v\\<^sup>2 \\<Longrightarrow>\n                thesis;\n     a = - 1\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>u v.\n                ReZ t = 2 * u * v \\<and> ImZ t = u\\<^sup>2 - v\\<^sup>2 \\<or>\n                ImZ t = 2 * u * v \\<and>\n                ReZ t = u\\<^sup>2 - v\\<^sup>2 \\<Longrightarrow>\n                thesis;\n     a = gauss_i\\<rbrakk>\n    \\<Longrightarrow> thesis\n 3. \\<lbrakk>\\<And>u v.\n                ReZ t = 2 * u * v \\<and> ImZ t = u\\<^sup>2 - v\\<^sup>2 \\<or>\n                ImZ t = 2 * u * v \\<and>\n                ReZ t = u\\<^sup>2 - v\\<^sup>2 \\<Longrightarrow>\n                thesis;\n     a = - gauss_i\\<rbrakk>\n    \\<Longrightarrow> thesis", "assume [simp]: \"a = -1\""], ["proof (state)\nthis:\n  a = - 1\n\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<And>u v.\n                ReZ t = 2 * u * v \\<and> ImZ t = u\\<^sup>2 - v\\<^sup>2 \\<or>\n                ImZ t = 2 * u * v \\<and>\n                ReZ t = u\\<^sup>2 - v\\<^sup>2 \\<Longrightarrow>\n                thesis;\n     a = - 1\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>u v.\n                ReZ t = 2 * u * v \\<and> ImZ t = u\\<^sup>2 - v\\<^sup>2 \\<or>\n                ImZ t = 2 * u * v \\<and>\n                ReZ t = u\\<^sup>2 - v\\<^sup>2 \\<Longrightarrow>\n                thesis;\n     a = gauss_i\\<rbrakk>\n    \\<Longrightarrow> thesis\n 3. \\<lbrakk>\\<And>u v.\n                ReZ t = 2 * u * v \\<and> ImZ t = u\\<^sup>2 - v\\<^sup>2 \\<or>\n                ImZ t = 2 * u * v \\<and>\n                ReZ t = u\\<^sup>2 - v\\<^sup>2 \\<Longrightarrow>\n                thesis;\n     a = - gauss_i\\<rbrakk>\n    \\<Longrightarrow> thesis", "have \"ReZ t = ImZ b ^ 2 - (-ReZ b) ^ 2\" \"ImZ t = 2 * ImZ b * (-ReZ b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ReZ t = (ImZ b)\\<^sup>2 - (- ReZ b)\\<^sup>2 &&&\n    ImZ t = 2 * ImZ b * - ReZ b", "using ab(2)"], ["proof (prove)\nusing this:\n  a * t = b\\<^sup>2\n\ngoal (1 subgoal):\n 1. ReZ t = (ImZ b)\\<^sup>2 - (- ReZ b)\\<^sup>2 &&&\n    ImZ t = 2 * ImZ b * - ReZ b", "by (auto simp: gauss_int_eq_iff power2_eq_square algebra_simps)"], ["proof (state)\nthis:\n  ReZ t = (ImZ b)\\<^sup>2 - (- ReZ b)\\<^sup>2\n  ImZ t = 2 * ImZ b * - ReZ b\n\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<And>u v.\n                ReZ t = 2 * u * v \\<and> ImZ t = u\\<^sup>2 - v\\<^sup>2 \\<or>\n                ImZ t = 2 * u * v \\<and>\n                ReZ t = u\\<^sup>2 - v\\<^sup>2 \\<Longrightarrow>\n                thesis;\n     a = - 1\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>u v.\n                ReZ t = 2 * u * v \\<and> ImZ t = u\\<^sup>2 - v\\<^sup>2 \\<or>\n                ImZ t = 2 * u * v \\<and>\n                ReZ t = u\\<^sup>2 - v\\<^sup>2 \\<Longrightarrow>\n                thesis;\n     a = gauss_i\\<rbrakk>\n    \\<Longrightarrow> thesis\n 3. \\<lbrakk>\\<And>u v.\n                ReZ t = 2 * u * v \\<and> ImZ t = u\\<^sup>2 - v\\<^sup>2 \\<or>\n                ImZ t = 2 * u * v \\<and>\n                ReZ t = u\\<^sup>2 - v\\<^sup>2 \\<Longrightarrow>\n                thesis;\n     a = - gauss_i\\<rbrakk>\n    \\<Longrightarrow> thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  ReZ t = (ImZ b)\\<^sup>2 - (- ReZ b)\\<^sup>2\n  ImZ t = 2 * ImZ b * - ReZ b\n\ngoal (1 subgoal):\n 1. thesis", "using that"], ["proof (prove)\nusing this:\n  ReZ t = (ImZ b)\\<^sup>2 - (- ReZ b)\\<^sup>2\n  ImZ t = 2 * ImZ b * - ReZ b\n  ReZ t = 2 * ?u * ?v \\<and> ImZ t = ?u\\<^sup>2 - ?v\\<^sup>2 \\<or>\n  ImZ t = 2 * ?u * ?v \\<and>\n  ReZ t = ?u\\<^sup>2 - ?v\\<^sup>2 \\<Longrightarrow>\n  thesis\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>u v.\n                ReZ t = 2 * u * v \\<and> ImZ t = u\\<^sup>2 - v\\<^sup>2 \\<or>\n                ImZ t = 2 * u * v \\<and>\n                ReZ t = u\\<^sup>2 - v\\<^sup>2 \\<Longrightarrow>\n                thesis;\n     a = gauss_i\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>u v.\n                ReZ t = 2 * u * v \\<and> ImZ t = u\\<^sup>2 - v\\<^sup>2 \\<or>\n                ImZ t = 2 * u * v \\<and>\n                ReZ t = u\\<^sup>2 - v\\<^sup>2 \\<Longrightarrow>\n                thesis;\n     a = - gauss_i\\<rbrakk>\n    \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>u v.\n                ReZ t = 2 * u * v \\<and> ImZ t = u\\<^sup>2 - v\\<^sup>2 \\<or>\n                ImZ t = 2 * u * v \\<and>\n                ReZ t = u\\<^sup>2 - v\\<^sup>2 \\<Longrightarrow>\n                thesis;\n     a = gauss_i\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>u v.\n                ReZ t = 2 * u * v \\<and> ImZ t = u\\<^sup>2 - v\\<^sup>2 \\<or>\n                ImZ t = 2 * u * v \\<and>\n                ReZ t = u\\<^sup>2 - v\\<^sup>2 \\<Longrightarrow>\n                thesis;\n     a = - gauss_i\\<rbrakk>\n    \\<Longrightarrow> thesis", "assume [simp]: \"a = \\<i>\\<^sub>\\<int>\""], ["proof (state)\nthis:\n  a = gauss_i\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>u v.\n                ReZ t = 2 * u * v \\<and> ImZ t = u\\<^sup>2 - v\\<^sup>2 \\<or>\n                ImZ t = 2 * u * v \\<and>\n                ReZ t = u\\<^sup>2 - v\\<^sup>2 \\<Longrightarrow>\n                thesis;\n     a = gauss_i\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>u v.\n                ReZ t = 2 * u * v \\<and> ImZ t = u\\<^sup>2 - v\\<^sup>2 \\<or>\n                ImZ t = 2 * u * v \\<and>\n                ReZ t = u\\<^sup>2 - v\\<^sup>2 \\<Longrightarrow>\n                thesis;\n     a = - gauss_i\\<rbrakk>\n    \\<Longrightarrow> thesis", "hence \"ImZ t = ImZ b ^ 2 - ReZ b ^ 2\" \"ReZ t = 2 * ImZ b * ReZ b\""], ["proof (prove)\nusing this:\n  a = gauss_i\n\ngoal (1 subgoal):\n 1. ImZ t = (ImZ b)\\<^sup>2 - (ReZ b)\\<^sup>2 &&& ReZ t = 2 * ImZ b * ReZ b", "using ab(2)"], ["proof (prove)\nusing this:\n  a = gauss_i\n  a * t = b\\<^sup>2\n\ngoal (1 subgoal):\n 1. ImZ t = (ImZ b)\\<^sup>2 - (ReZ b)\\<^sup>2 &&& ReZ t = 2 * ImZ b * ReZ b", "by (auto simp: gauss_int_eq_iff power2_eq_square algebra_simps)"], ["proof (state)\nthis:\n  ImZ t = (ImZ b)\\<^sup>2 - (ReZ b)\\<^sup>2\n  ReZ t = 2 * ImZ b * ReZ b\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>u v.\n                ReZ t = 2 * u * v \\<and> ImZ t = u\\<^sup>2 - v\\<^sup>2 \\<or>\n                ImZ t = 2 * u * v \\<and>\n                ReZ t = u\\<^sup>2 - v\\<^sup>2 \\<Longrightarrow>\n                thesis;\n     a = gauss_i\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>u v.\n                ReZ t = 2 * u * v \\<and> ImZ t = u\\<^sup>2 - v\\<^sup>2 \\<or>\n                ImZ t = 2 * u * v \\<and>\n                ReZ t = u\\<^sup>2 - v\\<^sup>2 \\<Longrightarrow>\n                thesis;\n     a = - gauss_i\\<rbrakk>\n    \\<Longrightarrow> thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  ImZ t = (ImZ b)\\<^sup>2 - (ReZ b)\\<^sup>2\n  ReZ t = 2 * ImZ b * ReZ b\n\ngoal (1 subgoal):\n 1. thesis", "using that"], ["proof (prove)\nusing this:\n  ImZ t = (ImZ b)\\<^sup>2 - (ReZ b)\\<^sup>2\n  ReZ t = 2 * ImZ b * ReZ b\n  ReZ t = 2 * ?u * ?v \\<and> ImZ t = ?u\\<^sup>2 - ?v\\<^sup>2 \\<or>\n  ImZ t = 2 * ?u * ?v \\<and>\n  ReZ t = ?u\\<^sup>2 - ?v\\<^sup>2 \\<Longrightarrow>\n  thesis\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>u v.\n                ReZ t = 2 * u * v \\<and> ImZ t = u\\<^sup>2 - v\\<^sup>2 \\<or>\n                ImZ t = 2 * u * v \\<and>\n                ReZ t = u\\<^sup>2 - v\\<^sup>2 \\<Longrightarrow>\n                thesis;\n     a = - gauss_i\\<rbrakk>\n    \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>u v.\n                ReZ t = 2 * u * v \\<and> ImZ t = u\\<^sup>2 - v\\<^sup>2 \\<or>\n                ImZ t = 2 * u * v \\<and>\n                ReZ t = u\\<^sup>2 - v\\<^sup>2 \\<Longrightarrow>\n                thesis;\n     a = - gauss_i\\<rbrakk>\n    \\<Longrightarrow> thesis", "assume [simp]: \"a = -\\<i>\\<^sub>\\<int>\""], ["proof (state)\nthis:\n  a = - gauss_i\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>u v.\n                ReZ t = 2 * u * v \\<and> ImZ t = u\\<^sup>2 - v\\<^sup>2 \\<or>\n                ImZ t = 2 * u * v \\<and>\n                ReZ t = u\\<^sup>2 - v\\<^sup>2 \\<Longrightarrow>\n                thesis;\n     a = - gauss_i\\<rbrakk>\n    \\<Longrightarrow> thesis", "hence \"ImZ t = (-ReZ b) ^ 2 - ImZ b ^ 2\" \"ReZ t = 2 * (-ReZ b) * ImZ b\""], ["proof (prove)\nusing this:\n  a = - gauss_i\n\ngoal (1 subgoal):\n 1. ImZ t = (- ReZ b)\\<^sup>2 - (ImZ b)\\<^sup>2 &&&\n    ReZ t = 2 * - ReZ b * ImZ b", "using ab(2)"], ["proof (prove)\nusing this:\n  a = - gauss_i\n  a * t = b\\<^sup>2\n\ngoal (1 subgoal):\n 1. ImZ t = (- ReZ b)\\<^sup>2 - (ImZ b)\\<^sup>2 &&&\n    ReZ t = 2 * - ReZ b * ImZ b", "by (auto simp: gauss_int_eq_iff power2_eq_square algebra_simps)"], ["proof (state)\nthis:\n  ImZ t = (- ReZ b)\\<^sup>2 - (ImZ b)\\<^sup>2\n  ReZ t = 2 * - ReZ b * ImZ b\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>u v.\n                ReZ t = 2 * u * v \\<and> ImZ t = u\\<^sup>2 - v\\<^sup>2 \\<or>\n                ImZ t = 2 * u * v \\<and>\n                ReZ t = u\\<^sup>2 - v\\<^sup>2 \\<Longrightarrow>\n                thesis;\n     a = - gauss_i\\<rbrakk>\n    \\<Longrightarrow> thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  ImZ t = (- ReZ b)\\<^sup>2 - (ImZ b)\\<^sup>2\n  ReZ t = 2 * - ReZ b * ImZ b\n\ngoal (1 subgoal):\n 1. thesis", "using that"], ["proof (prove)\nusing this:\n  ImZ t = (- ReZ b)\\<^sup>2 - (ImZ b)\\<^sup>2\n  ReZ t = 2 * - ReZ b * ImZ b\n  ReZ t = 2 * ?u * ?v \\<and> ImZ t = ?u\\<^sup>2 - ?v\\<^sup>2 \\<or>\n  ImZ t = 2 * ?u * ?v \\<and>\n  ReZ t = ?u\\<^sup>2 - ?v\\<^sup>2 \\<Longrightarrow>\n  thesis\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ReZ t = 2 * u * v \\<and> ImZ t = u\\<^sup>2 - v\\<^sup>2 \\<or>\n  ImZ t = 2 * u * v \\<and> ReZ t = u\\<^sup>2 - v\\<^sup>2\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>coprime u v; \\<not> (odd u \\<and> odd v);\n         x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  ReZ t = 2 * u * v \\<and> ImZ t = u\\<^sup>2 - v\\<^sup>2 \\<or>\n  ImZ t = 2 * u * v \\<and> ReZ t = u\\<^sup>2 - v\\<^sup>2\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>coprime u v; \\<not> (odd u \\<and> odd v);\n         x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"ReZ t = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ReZ t = x", "by (simp add: t_def)"], ["proof (state)\nthis:\n  ReZ t = x\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>coprime u v; \\<not> (odd u \\<and> odd v);\n         x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  ReZ t = x\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>coprime u v; \\<not> (odd u \\<and> odd v);\n         x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"ImZ t = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ImZ t = y", "by (simp add: t_def)"], ["proof (state)\nthis:\n  ImZ t = y\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>coprime u v; \\<not> (odd u \\<and> odd v);\n         x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "finally"], ["proof (chain)\npicking this:\n  x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n  y = 2 * u * v \\<and> x = u\\<^sup>2 - v\\<^sup>2", "have xy: \"x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or> x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\""], ["proof (prove)\nusing this:\n  x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n  y = 2 * u * v \\<and> x = u\\<^sup>2 - v\\<^sup>2\n\ngoal (1 subgoal):\n 1. x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n    x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v", "by blast"], ["proof (state)\nthis:\n  x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n  x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>coprime u v; \\<not> (odd u \\<and> odd v);\n         x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have not_both_odd: \"\\<not>(odd u \\<and> odd v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (odd u \\<and> odd v)", "proof safe"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>odd u; odd v\\<rbrakk> \\<Longrightarrow> False", "assume \"odd u\" \"odd v\""], ["proof (state)\nthis:\n  odd u\n  odd v\n\ngoal (1 subgoal):\n 1. \\<lbrakk>odd u; odd v\\<rbrakk> \\<Longrightarrow> False", "hence \"even x\" \"even y\""], ["proof (prove)\nusing this:\n  odd u\n  odd v\n\ngoal (1 subgoal):\n 1. even x &&& even y", "using xy"], ["proof (prove)\nusing this:\n  odd u\n  odd v\n  x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n  x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\n\ngoal (1 subgoal):\n 1. even x &&& even y", "by auto"], ["proof (state)\nthis:\n  even x\n  even y\n\ngoal (1 subgoal):\n 1. \\<lbrakk>odd u; odd v\\<rbrakk> \\<Longrightarrow> False", "with \\<open>coprime x y\\<close>"], ["proof (chain)\npicking this:\n  coprime x y\n  even x\n  even y", "show False"], ["proof (prove)\nusing this:\n  coprime x y\n  even x\n  even y\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> (odd u \\<and> odd v)\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>coprime u v; \\<not> (odd u \\<and> odd v);\n         x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"coprime u v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coprime u v", "proof (rule coprimeI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c. \\<lbrakk>c dvd u; c dvd v\\<rbrakk> \\<Longrightarrow> is_unit c", "fix d"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>c. \\<lbrakk>c dvd u; c dvd v\\<rbrakk> \\<Longrightarrow> is_unit c", "assume \"d dvd u\" \"d dvd v\""], ["proof (state)\nthis:\n  d dvd u\n  d dvd v\n\ngoal (1 subgoal):\n 1. \\<And>c. \\<lbrakk>c dvd u; c dvd v\\<rbrakk> \\<Longrightarrow> is_unit c", "hence \"d dvd (u\\<^sup>2 - v\\<^sup>2)\" \"d dvd 2 * u * v\""], ["proof (prove)\nusing this:\n  d dvd u\n  d dvd v\n\ngoal (1 subgoal):\n 1. d dvd u\\<^sup>2 - v\\<^sup>2 &&& d dvd 2 * u * v", "by (auto simp: power2_eq_square)"], ["proof (state)\nthis:\n  d dvd u\\<^sup>2 - v\\<^sup>2\n  d dvd 2 * u * v\n\ngoal (1 subgoal):\n 1. \\<And>c. \\<lbrakk>c dvd u; c dvd v\\<rbrakk> \\<Longrightarrow> is_unit c", "with xy"], ["proof (chain)\npicking this:\n  x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n  x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\n  d dvd u\\<^sup>2 - v\\<^sup>2\n  d dvd 2 * u * v", "have \"d dvd x\" \"d dvd y\""], ["proof (prove)\nusing this:\n  x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n  x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\n  d dvd u\\<^sup>2 - v\\<^sup>2\n  d dvd 2 * u * v\n\ngoal (1 subgoal):\n 1. d dvd x &&& d dvd y", "by auto"], ["proof (state)\nthis:\n  d dvd x\n  d dvd y\n\ngoal (1 subgoal):\n 1. \\<And>c. \\<lbrakk>c dvd u; c dvd v\\<rbrakk> \\<Longrightarrow> is_unit c", "with \\<open>coprime x y\\<close>"], ["proof (chain)\npicking this:\n  coprime x y\n  d dvd x\n  d dvd y", "show \"is_unit d\""], ["proof (prove)\nusing this:\n  coprime x y\n  d dvd x\n  d dvd y\n\ngoal (1 subgoal):\n 1. is_unit d", "using not_coprimeI"], ["proof (prove)\nusing this:\n  coprime x y\n  d dvd x\n  d dvd y\n  \\<lbrakk>?c dvd ?a; ?c dvd ?b; \\<not> is_unit ?c\\<rbrakk>\n  \\<Longrightarrow> \\<not> coprime ?a ?b\n\ngoal (1 subgoal):\n 1. is_unit d", "by blast"], ["proof (state)\nthis:\n  is_unit d\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  coprime u v\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>coprime u v; \\<not> (odd u \\<and> odd v);\n         x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "with xy not_both_odd"], ["proof (chain)\npicking this:\n  x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n  x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\n  \\<not> (odd u \\<and> odd v)\n  coprime u v", "show ?thesis"], ["proof (prove)\nusing this:\n  x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n  x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\n  \\<not> (odd u \\<and> odd v)\n  coprime u v\n\ngoal (1 subgoal):\n 1. thesis", "using that[of u v]"], ["proof (prove)\nusing this:\n  x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n  x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\n  \\<not> (odd u \\<and> odd v)\n  coprime u v\n  \\<lbrakk>coprime u v; \\<not> (odd u \\<and> odd v);\n   x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n   x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma prim_pyth_tripleE:\n  assumes \"prim_pyth_triple x y z\"\n  obtains u v :: nat\n  where \"0 < v\" and \"v < u\" and \"coprime u v\" and \"\\<not>(odd u \\<and> odd v)\" and \"z = u\\<^sup>2 + v\\<^sup>2\"\n    and \"x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2  \\<or>  x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>v u.\n        \\<lbrakk>0 < v; v < u; coprime u v; \\<not> (odd u \\<and> odd v);\n         z = u\\<^sup>2 + v\\<^sup>2;\n         x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>v u.\n        \\<lbrakk>0 < v; v < u; coprime u v; \\<not> (odd u \\<and> odd v);\n         z = u\\<^sup>2 + v\\<^sup>2;\n         x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have *: \"(int z) ^ 2 = (int x) ^ 2 + (int y) ^ 2\" \"coprime (int x) (int y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (int z)\\<^sup>2 = (int x)\\<^sup>2 + (int y)\\<^sup>2 &&&\n    coprime (int x) (int y)", "using assms"], ["proof (prove)\nusing this:\n  prim_pyth_triple x y z\n\ngoal (1 subgoal):\n 1. (int z)\\<^sup>2 = (int x)\\<^sup>2 + (int y)\\<^sup>2 &&&\n    coprime (int x) (int y)", "by (auto simp flip: of_nat_power of_nat_add simp: prim_pyth_triple_def)"], ["proof (state)\nthis:\n  (int z)\\<^sup>2 = (int x)\\<^sup>2 + (int y)\\<^sup>2\n  coprime (int x) (int y)\n\ngoal (1 subgoal):\n 1. (\\<And>v u.\n        \\<lbrakk>0 < v; v < u; coprime u v; \\<not> (odd u \\<and> odd v);\n         z = u\\<^sup>2 + v\\<^sup>2;\n         x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "obtain u v\n    where uv: \"coprime u v\" \"\\<not>(odd u \\<and> odd v)\"\n              \"int x = 2 * u * v \\<and> int y = u\\<^sup>2 - v\\<^sup>2  \\<or>  int x = u\\<^sup>2 - v\\<^sup>2 \\<and> int y = 2 * u * v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>coprime u v; \\<not> (odd u \\<and> odd v);\n         int x = 2 * u * v \\<and> int y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         int x = u\\<^sup>2 - v\\<^sup>2 \\<and> int y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using primitive_pythagorean_tripleE_int[OF *]"], ["proof (prove)\nusing this:\n  (\\<And>u v.\n      \\<lbrakk>coprime u v; \\<not> (odd u \\<and> odd v);\n       int x = 2 * u * v \\<and> int y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n       int x = u\\<^sup>2 - v\\<^sup>2 \\<and> int y = 2 * u * v\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>u v.\n        \\<lbrakk>coprime u v; \\<not> (odd u \\<and> odd v);\n         int x = 2 * u * v \\<and> int y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         int x = u\\<^sup>2 - v\\<^sup>2 \\<and> int y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  coprime u v\n  \\<not> (odd u \\<and> odd v)\n  int x = 2 * u * v \\<and> int y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n  int x = u\\<^sup>2 - v\\<^sup>2 \\<and> int y = 2 * u * v\n\ngoal (1 subgoal):\n 1. (\\<And>v u.\n        \\<lbrakk>0 < v; v < u; coprime u v; \\<not> (odd u \\<and> odd v);\n         z = u\\<^sup>2 + v\\<^sup>2;\n         x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "define u' v' where \"u' = nat \\<bar>u\\<bar>\" and \"v' = nat \\<bar>v\\<bar>\""], ["proof (state)\nthis:\n  u' = nat \\<bar>u\\<bar>\n  v' = nat \\<bar>v\\<bar>\n\ngoal (1 subgoal):\n 1. (\\<And>v u.\n        \\<lbrakk>0 < v; v < u; coprime u v; \\<not> (odd u \\<and> odd v);\n         z = u\\<^sup>2 + v\\<^sup>2;\n         x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have **: \"a = 2 * u' * v'\" if \"int a = 2 * u * v\" for a"], ["proof (prove)\ngoal (1 subgoal):\n 1. a = 2 * u' * v'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. a = 2 * u' * v'", "from that"], ["proof (chain)\npicking this:\n  int a = 2 * u * v", "have \"nat \\<bar>int a\\<bar> = nat \\<bar>2 * u * v\\<bar>\""], ["proof (prove)\nusing this:\n  int a = 2 * u * v\n\ngoal (1 subgoal):\n 1. nat \\<bar>int a\\<bar> = nat \\<bar>2 * u * v\\<bar>", "by (simp only: )"], ["proof (state)\nthis:\n  nat \\<bar>int a\\<bar> = nat \\<bar>2 * u * v\\<bar>\n\ngoal (1 subgoal):\n 1. a = 2 * u' * v'", "thus \"a = 2 * u' * v'\""], ["proof (prove)\nusing this:\n  nat \\<bar>int a\\<bar> = nat \\<bar>2 * u * v\\<bar>\n\ngoal (1 subgoal):\n 1. a = 2 * u' * v'", "by (simp add: u'_def v'_def abs_mult nat_mult_distrib)"], ["proof (state)\nthis:\n  a = 2 * u' * v'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  int ?a = 2 * u * v \\<Longrightarrow> ?a = 2 * u' * v'\n\ngoal (1 subgoal):\n 1. (\\<And>v u.\n        \\<lbrakk>0 < v; v < u; coprime u v; \\<not> (odd u \\<and> odd v);\n         z = u\\<^sup>2 + v\\<^sup>2;\n         x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have ***: \"a = u' ^ 2 - v' ^ 2\" \"v' \\<le> u'\" if \"int a = u ^ 2 - v ^ 2\" for a"], ["proof (prove)\ngoal (1 subgoal):\n 1. a = u'\\<^sup>2 - v'\\<^sup>2 &&& v' \\<le> u'", "proof -"], ["proof (state)\ngoal (2 subgoals):\n 1. a = u'\\<^sup>2 - v'\\<^sup>2\n 2. v' \\<le> u'", "have \"v ^ 2 \\<le> v ^ 2 + int a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v\\<^sup>2 \\<le> v\\<^sup>2 + int a", "by simp"], ["proof (state)\nthis:\n  v\\<^sup>2 \\<le> v\\<^sup>2 + int a\n\ngoal (2 subgoals):\n 1. a = u'\\<^sup>2 - v'\\<^sup>2\n 2. v' \\<le> u'", "also"], ["proof (state)\nthis:\n  v\\<^sup>2 \\<le> v\\<^sup>2 + int a\n\ngoal (2 subgoals):\n 1. a = u'\\<^sup>2 - v'\\<^sup>2\n 2. v' \\<le> u'", "have \"\\<dots> = u ^ 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v\\<^sup>2 + int a = u\\<^sup>2", "using that"], ["proof (prove)\nusing this:\n  int a = u\\<^sup>2 - v\\<^sup>2\n\ngoal (1 subgoal):\n 1. v\\<^sup>2 + int a = u\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  v\\<^sup>2 + int a = u\\<^sup>2\n\ngoal (2 subgoals):\n 1. a = u'\\<^sup>2 - v'\\<^sup>2\n 2. v' \\<le> u'", "finally"], ["proof (chain)\npicking this:\n  v\\<^sup>2 \\<le> u\\<^sup>2", "have \"\\<bar>v\\<bar> \\<le> \\<bar>u\\<bar>\""], ["proof (prove)\nusing this:\n  v\\<^sup>2 \\<le> u\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<bar>v\\<bar> \\<le> \\<bar>u\\<bar>", "using abs_le_square_iff"], ["proof (prove)\nusing this:\n  v\\<^sup>2 \\<le> u\\<^sup>2\n  (\\<bar>?x\\<bar> \\<le> \\<bar>?y\\<bar>) = (?x\\<^sup>2 \\<le> ?y\\<^sup>2)\n\ngoal (1 subgoal):\n 1. \\<bar>v\\<bar> \\<le> \\<bar>u\\<bar>", "by blast"], ["proof (state)\nthis:\n  \\<bar>v\\<bar> \\<le> \\<bar>u\\<bar>\n\ngoal (2 subgoals):\n 1. a = u'\\<^sup>2 - v'\\<^sup>2\n 2. v' \\<le> u'", "thus \"v' \\<le> u'\""], ["proof (prove)\nusing this:\n  \\<bar>v\\<bar> \\<le> \\<bar>u\\<bar>\n\ngoal (1 subgoal):\n 1. v' \\<le> u'", "by (simp add: v'_def u'_def)"], ["proof (state)\nthis:\n  v' \\<le> u'\n\ngoal (1 subgoal):\n 1. a = u'\\<^sup>2 - v'\\<^sup>2", "from that"], ["proof (chain)\npicking this:\n  int a = u\\<^sup>2 - v\\<^sup>2", "have \"u ^ 2 = v ^ 2 + int a\""], ["proof (prove)\nusing this:\n  int a = u\\<^sup>2 - v\\<^sup>2\n\ngoal (1 subgoal):\n 1. u\\<^sup>2 = v\\<^sup>2 + int a", "by simp"], ["proof (state)\nthis:\n  u\\<^sup>2 = v\\<^sup>2 + int a\n\ngoal (1 subgoal):\n 1. a = u'\\<^sup>2 - v'\\<^sup>2", "hence \"nat \\<bar>u ^ 2\\<bar> = nat \\<bar>v ^ 2 + int a\\<bar>\""], ["proof (prove)\nusing this:\n  u\\<^sup>2 = v\\<^sup>2 + int a\n\ngoal (1 subgoal):\n 1. nat \\<bar>u\\<^sup>2\\<bar> = nat \\<bar>v\\<^sup>2 + int a\\<bar>", "by (simp only: )"], ["proof (state)\nthis:\n  nat \\<bar>u\\<^sup>2\\<bar> = nat \\<bar>v\\<^sup>2 + int a\\<bar>\n\ngoal (1 subgoal):\n 1. a = u'\\<^sup>2 - v'\\<^sup>2", "also"], ["proof (state)\nthis:\n  nat \\<bar>u\\<^sup>2\\<bar> = nat \\<bar>v\\<^sup>2 + int a\\<bar>\n\ngoal (1 subgoal):\n 1. a = u'\\<^sup>2 - v'\\<^sup>2", "have \"nat \\<bar>u ^ 2\\<bar> = u' ^ 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat \\<bar>u\\<^sup>2\\<bar> = u'\\<^sup>2", "by (simp add: u'_def flip: nat_power_eq)"], ["proof (state)\nthis:\n  nat \\<bar>u\\<^sup>2\\<bar> = u'\\<^sup>2\n\ngoal (1 subgoal):\n 1. a = u'\\<^sup>2 - v'\\<^sup>2", "also"], ["proof (state)\nthis:\n  nat \\<bar>u\\<^sup>2\\<bar> = u'\\<^sup>2\n\ngoal (1 subgoal):\n 1. a = u'\\<^sup>2 - v'\\<^sup>2", "have \"nat \\<bar>v ^ 2 + int a\\<bar> = v' ^ 2 + a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. nat \\<bar>v\\<^sup>2 + int a\\<bar> = v'\\<^sup>2 + a", "by (simp add: nat_add_distrib v'_def flip: nat_power_eq)"], ["proof (state)\nthis:\n  nat \\<bar>v\\<^sup>2 + int a\\<bar> = v'\\<^sup>2 + a\n\ngoal (1 subgoal):\n 1. a = u'\\<^sup>2 - v'\\<^sup>2", "finally"], ["proof (chain)\npicking this:\n  u'\\<^sup>2 = v'\\<^sup>2 + a", "show \"a = u' ^ 2 - v' ^ 2\""], ["proof (prove)\nusing this:\n  u'\\<^sup>2 = v'\\<^sup>2 + a\n\ngoal (1 subgoal):\n 1. a = u'\\<^sup>2 - v'\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  a = u'\\<^sup>2 - v'\\<^sup>2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  int ?a = u\\<^sup>2 - v\\<^sup>2 \\<Longrightarrow>\n  ?a = u'\\<^sup>2 - v'\\<^sup>2\n  int ?a = u\\<^sup>2 - v\\<^sup>2 \\<Longrightarrow> v' \\<le> u'\n\ngoal (1 subgoal):\n 1. (\\<And>v u.\n        \\<lbrakk>0 < v; v < u; coprime u v; \\<not> (odd u \\<and> odd v);\n         z = u\\<^sup>2 + v\\<^sup>2;\n         x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have eq: \"x = 2 * u' * v' \\<and> y = u'\\<^sup>2 - v'\\<^sup>2  \\<or>  x = u'\\<^sup>2 - v'\\<^sup>2 \\<and> y = 2 * u' * v'\" and \"v' \\<le> u'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = 2 * u' * v' \\<and> y = u'\\<^sup>2 - v'\\<^sup>2 \\<or>\n    x = u'\\<^sup>2 - v'\\<^sup>2 \\<and> y = 2 * u' * v' &&&\n    v' \\<le> u'", "using uv(3) **[of x] **[of y] ***[of x] ***[of y]"], ["proof (prove)\nusing this:\n  int x = 2 * u * v \\<and> int y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n  int x = u\\<^sup>2 - v\\<^sup>2 \\<and> int y = 2 * u * v\n  int x = 2 * u * v \\<Longrightarrow> x = 2 * u' * v'\n  int y = 2 * u * v \\<Longrightarrow> y = 2 * u' * v'\n  int x = u\\<^sup>2 - v\\<^sup>2 \\<Longrightarrow>\n  x = u'\\<^sup>2 - v'\\<^sup>2\n  int x = u\\<^sup>2 - v\\<^sup>2 \\<Longrightarrow> v' \\<le> u'\n  int y = u\\<^sup>2 - v\\<^sup>2 \\<Longrightarrow>\n  y = u'\\<^sup>2 - v'\\<^sup>2\n  int y = u\\<^sup>2 - v\\<^sup>2 \\<Longrightarrow> v' \\<le> u'\n\ngoal (1 subgoal):\n 1. x = 2 * u' * v' \\<and> y = u'\\<^sup>2 - v'\\<^sup>2 \\<or>\n    x = u'\\<^sup>2 - v'\\<^sup>2 \\<and> y = 2 * u' * v' &&&\n    v' \\<le> u'", "by blast+"], ["proof (state)\nthis:\n  x = 2 * u' * v' \\<and> y = u'\\<^sup>2 - v'\\<^sup>2 \\<or>\n  x = u'\\<^sup>2 - v'\\<^sup>2 \\<and> y = 2 * u' * v'\n  v' \\<le> u'\n\ngoal (1 subgoal):\n 1. (\\<And>v u.\n        \\<lbrakk>0 < v; v < u; coprime u v; \\<not> (odd u \\<and> odd v);\n         z = u\\<^sup>2 + v\\<^sup>2;\n         x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  x = 2 * u' * v' \\<and> y = u'\\<^sup>2 - v'\\<^sup>2 \\<or>\n  x = u'\\<^sup>2 - v'\\<^sup>2 \\<and> y = 2 * u' * v'\n  v' \\<le> u'\n\ngoal (1 subgoal):\n 1. (\\<And>v u.\n        \\<lbrakk>0 < v; v < u; coprime u v; \\<not> (odd u \\<and> odd v);\n         z = u\\<^sup>2 + v\\<^sup>2;\n         x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"coprime u' v'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. coprime u' v'", "using \\<open>coprime u v\\<close>"], ["proof (prove)\nusing this:\n  coprime u v\n\ngoal (1 subgoal):\n 1. coprime u' v'", "by (auto simp: u'_def v'_def)"], ["proof (state)\nthis:\n  coprime u' v'\n\ngoal (1 subgoal):\n 1. (\\<And>v u.\n        \\<lbrakk>0 < v; v < u; coprime u v; \\<not> (odd u \\<and> odd v);\n         z = u\\<^sup>2 + v\\<^sup>2;\n         x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  coprime u' v'\n\ngoal (1 subgoal):\n 1. (\\<And>v u.\n        \\<lbrakk>0 < v; v < u; coprime u v; \\<not> (odd u \\<and> odd v);\n         z = u\\<^sup>2 + v\\<^sup>2;\n         x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"\\<not>(odd u' \\<and> odd v')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (odd u' \\<and> odd v')", "using uv(2)"], ["proof (prove)\nusing this:\n  \\<not> (odd u \\<and> odd v)\n\ngoal (1 subgoal):\n 1. \\<not> (odd u' \\<and> odd v')", "by (auto simp: u'_def v'_def)"], ["proof (state)\nthis:\n  \\<not> (odd u' \\<and> odd v')\n\ngoal (1 subgoal):\n 1. (\\<And>v u.\n        \\<lbrakk>0 < v; v < u; coprime u v; \\<not> (odd u \\<and> odd v);\n         z = u\\<^sup>2 + v\\<^sup>2;\n         x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  \\<not> (odd u' \\<and> odd v')\n\ngoal (1 subgoal):\n 1. (\\<And>v u.\n        \\<lbrakk>0 < v; v < u; coprime u v; \\<not> (odd u \\<and> odd v);\n         z = u\\<^sup>2 + v\\<^sup>2;\n         x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"v' \\<noteq> u'\" \"v' > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v' \\<noteq> u' &&& 0 < v'", "using \\<open>coprime u' v'\\<close> eq assms"], ["proof (prove)\nusing this:\n  coprime u' v'\n  x = 2 * u' * v' \\<and> y = u'\\<^sup>2 - v'\\<^sup>2 \\<or>\n  x = u'\\<^sup>2 - v'\\<^sup>2 \\<and> y = 2 * u' * v'\n  prim_pyth_triple x y z\n\ngoal (1 subgoal):\n 1. v' \\<noteq> u' &&& 0 < v'", "by (auto simp: prim_pyth_triple_def)"], ["proof (state)\nthis:\n  v' \\<noteq> u'\n  0 < v'\n\ngoal (1 subgoal):\n 1. (\\<And>v u.\n        \\<lbrakk>0 < v; v < u; coprime u v; \\<not> (odd u \\<and> odd v);\n         z = u\\<^sup>2 + v\\<^sup>2;\n         x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  v' \\<noteq> u'\n  0 < v'\n\ngoal (1 subgoal):\n 1. (\\<And>v u.\n        \\<lbrakk>0 < v; v < u; coprime u v; \\<not> (odd u \\<and> odd v);\n         z = u\\<^sup>2 + v\\<^sup>2;\n         x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from this"], ["proof (chain)\npicking this:\n  v' \\<noteq> u'\n  0 < v'", "have \"v' < u'\""], ["proof (prove)\nusing this:\n  v' \\<noteq> u'\n  0 < v'\n\ngoal (1 subgoal):\n 1. v' < u'", "using \\<open>v' \\<le> u'\\<close>"], ["proof (prove)\nusing this:\n  v' \\<noteq> u'\n  0 < v'\n  v' \\<le> u'\n\ngoal (1 subgoal):\n 1. v' < u'", "by auto"], ["proof (state)\nthis:\n  v' < u'\n\ngoal (1 subgoal):\n 1. (\\<And>v u.\n        \\<lbrakk>0 < v; v < u; coprime u v; \\<not> (odd u \\<and> odd v);\n         z = u\\<^sup>2 + v\\<^sup>2;\n         x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  v' < u'\n\ngoal (1 subgoal):\n 1. (\\<And>v u.\n        \\<lbrakk>0 < v; v < u; coprime u v; \\<not> (odd u \\<and> odd v);\n         z = u\\<^sup>2 + v\\<^sup>2;\n         x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"z = u'\\<^sup>2 + v'\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z = u'\\<^sup>2 + v'\\<^sup>2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. z = u'\\<^sup>2 + v'\\<^sup>2", "from assms"], ["proof (chain)\npicking this:\n  prim_pyth_triple x y z", "have \"z ^ 2 = x ^ 2 + y ^ 2\""], ["proof (prove)\nusing this:\n  prim_pyth_triple x y z\n\ngoal (1 subgoal):\n 1. z\\<^sup>2 = x\\<^sup>2 + y\\<^sup>2", "by (simp add: prim_pyth_triple_def)"], ["proof (state)\nthis:\n  z\\<^sup>2 = x\\<^sup>2 + y\\<^sup>2\n\ngoal (1 subgoal):\n 1. z = u'\\<^sup>2 + v'\\<^sup>2", "also"], ["proof (state)\nthis:\n  z\\<^sup>2 = x\\<^sup>2 + y\\<^sup>2\n\ngoal (1 subgoal):\n 1. z = u'\\<^sup>2 + v'\\<^sup>2", "have \"\\<dots> = (2 * u' * v') ^ 2 + (u' ^ 2 - v' ^ 2) ^ 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x\\<^sup>2 + y\\<^sup>2 =\n    (2 * u' * v')\\<^sup>2 + (u'\\<^sup>2 - v'\\<^sup>2)\\<^sup>2", "using eq"], ["proof (prove)\nusing this:\n  x = 2 * u' * v' \\<and> y = u'\\<^sup>2 - v'\\<^sup>2 \\<or>\n  x = u'\\<^sup>2 - v'\\<^sup>2 \\<and> y = 2 * u' * v'\n\ngoal (1 subgoal):\n 1. x\\<^sup>2 + y\\<^sup>2 =\n    (2 * u' * v')\\<^sup>2 + (u'\\<^sup>2 - v'\\<^sup>2)\\<^sup>2", "by (auto simp: add_ac)"], ["proof (state)\nthis:\n  x\\<^sup>2 + y\\<^sup>2 =\n  (2 * u' * v')\\<^sup>2 + (u'\\<^sup>2 - v'\\<^sup>2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. z = u'\\<^sup>2 + v'\\<^sup>2", "also"], ["proof (state)\nthis:\n  x\\<^sup>2 + y\\<^sup>2 =\n  (2 * u' * v')\\<^sup>2 + (u'\\<^sup>2 - v'\\<^sup>2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. z = u'\\<^sup>2 + v'\\<^sup>2", "have \"\\<dots> = (u' ^ 2 + v' ^ 2) ^ 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (2 * u' * v')\\<^sup>2 + (u'\\<^sup>2 - v'\\<^sup>2)\\<^sup>2 =\n    (u'\\<^sup>2 + v'\\<^sup>2)\\<^sup>2", "by (intro prim_pyth_triple_aux) fact"], ["proof (state)\nthis:\n  (2 * u' * v')\\<^sup>2 + (u'\\<^sup>2 - v'\\<^sup>2)\\<^sup>2 =\n  (u'\\<^sup>2 + v'\\<^sup>2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. z = u'\\<^sup>2 + v'\\<^sup>2", "finally"], ["proof (chain)\npicking this:\n  z\\<^sup>2 = (u'\\<^sup>2 + v'\\<^sup>2)\\<^sup>2", "show ?thesis"], ["proof (prove)\nusing this:\n  z\\<^sup>2 = (u'\\<^sup>2 + v'\\<^sup>2)\\<^sup>2\n\ngoal (1 subgoal):\n 1. z = u'\\<^sup>2 + v'\\<^sup>2", "by simp"], ["proof (state)\nthis:\n  z = u'\\<^sup>2 + v'\\<^sup>2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  z = u'\\<^sup>2 + v'\\<^sup>2\n\ngoal (1 subgoal):\n 1. (\\<And>v u.\n        \\<lbrakk>0 < v; v < u; coprime u v; \\<not> (odd u \\<and> odd v);\n         z = u\\<^sup>2 + v\\<^sup>2;\n         x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  x = 2 * u' * v' \\<and> y = u'\\<^sup>2 - v'\\<^sup>2 \\<or>\n  x = u'\\<^sup>2 - v'\\<^sup>2 \\<and> y = 2 * u' * v'\n  v' \\<le> u'\n  coprime u' v'\n  \\<not> (odd u' \\<and> odd v')\n  v' \\<noteq> u'\n  0 < v'\n  v' < u'\n  z = u'\\<^sup>2 + v'\\<^sup>2", "show ?thesis"], ["proof (prove)\nusing this:\n  x = 2 * u' * v' \\<and> y = u'\\<^sup>2 - v'\\<^sup>2 \\<or>\n  x = u'\\<^sup>2 - v'\\<^sup>2 \\<and> y = 2 * u' * v'\n  v' \\<le> u'\n  coprime u' v'\n  \\<not> (odd u' \\<and> odd v')\n  v' \\<noteq> u'\n  0 < v'\n  v' < u'\n  z = u'\\<^sup>2 + v'\\<^sup>2\n\ngoal (1 subgoal):\n 1. thesis", "using that[of v' u']"], ["proof (prove)\nusing this:\n  x = 2 * u' * v' \\<and> y = u'\\<^sup>2 - v'\\<^sup>2 \\<or>\n  x = u'\\<^sup>2 - v'\\<^sup>2 \\<and> y = 2 * u' * v'\n  v' \\<le> u'\n  coprime u' v'\n  \\<not> (odd u' \\<and> odd v')\n  v' \\<noteq> u'\n  0 < v'\n  v' < u'\n  z = u'\\<^sup>2 + v'\\<^sup>2\n  \\<lbrakk>0 < v'; v' < u'; coprime u' v'; \\<not> (odd u' \\<and> odd v');\n   z = u'\\<^sup>2 + v'\\<^sup>2;\n   x = 2 * u' * v' \\<and> y = u'\\<^sup>2 - v'\\<^sup>2 \\<or>\n   x = u'\\<^sup>2 - v'\\<^sup>2 \\<and> y = 2 * u' * v'\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by metis"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem prim_pyth_triple_iff:\n  \"prim_pyth_triple x y z \\<longleftrightarrow>\n     (\\<exists>u v. 0 < v \\<and> v < u \\<and> coprime u v \\<and> \\<not>(odd u \\<and> odd v) \\<and>\n            (x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2  \\<or>  x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v) \\<and> z = u\\<^sup>2 + v\\<^sup>2)\"\n  (is \"_ \\<longleftrightarrow> ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. prim_pyth_triple x y z =\n    (\\<exists>u v.\n        0 < v \\<and>\n        v < u \\<and>\n        coprime u v \\<and>\n        \\<not> (odd u \\<and> odd v) \\<and>\n        (x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v) \\<and>\n        z = u\\<^sup>2 + v\\<^sup>2)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. prim_pyth_triple x y z \\<Longrightarrow>\n    \\<exists>u v.\n       0 < v \\<and>\n       v < u \\<and>\n       coprime u v \\<and>\n       \\<not> (odd u \\<and> odd v) \\<and>\n       (x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n        x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v) \\<and>\n       z = u\\<^sup>2 + v\\<^sup>2\n 2. \\<exists>u v.\n       0 < v \\<and>\n       v < u \\<and>\n       coprime u v \\<and>\n       \\<not> (odd u \\<and> odd v) \\<and>\n       (x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n        x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v) \\<and>\n       z = u\\<^sup>2 + v\\<^sup>2 \\<Longrightarrow>\n    prim_pyth_triple x y z", "assume \"prim_pyth_triple x y z\""], ["proof (state)\nthis:\n  prim_pyth_triple x y z\n\ngoal (2 subgoals):\n 1. prim_pyth_triple x y z \\<Longrightarrow>\n    \\<exists>u v.\n       0 < v \\<and>\n       v < u \\<and>\n       coprime u v \\<and>\n       \\<not> (odd u \\<and> odd v) \\<and>\n       (x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n        x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v) \\<and>\n       z = u\\<^sup>2 + v\\<^sup>2\n 2. \\<exists>u v.\n       0 < v \\<and>\n       v < u \\<and>\n       coprime u v \\<and>\n       \\<not> (odd u \\<and> odd v) \\<and>\n       (x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n        x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v) \\<and>\n       z = u\\<^sup>2 + v\\<^sup>2 \\<Longrightarrow>\n    prim_pyth_triple x y z", "from prim_pyth_tripleE[OF this]"], ["proof (chain)\npicking this:\n  (\\<And>u v.\n      \\<lbrakk>0 < v; v < u; coprime u v; \\<not> (odd u \\<and> odd v);\n       z = u\\<^sup>2 + v\\<^sup>2;\n       x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n       x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "show ?rhs"], ["proof (prove)\nusing this:\n  (\\<And>u v.\n      \\<lbrakk>0 < v; v < u; coprime u v; \\<not> (odd u \\<and> odd v);\n       z = u\\<^sup>2 + v\\<^sup>2;\n       x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n       x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. \\<exists>u v.\n       0 < v \\<and>\n       v < u \\<and>\n       coprime u v \\<and>\n       \\<not> (odd u \\<and> odd v) \\<and>\n       (x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n        x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v) \\<and>\n       z = u\\<^sup>2 + v\\<^sup>2", "by metis"], ["proof (state)\nthis:\n  \\<exists>u v.\n     0 < v \\<and>\n     v < u \\<and>\n     coprime u v \\<and>\n     \\<not> (odd u \\<and> odd v) \\<and>\n     (x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n      x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v) \\<and>\n     z = u\\<^sup>2 + v\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<exists>u v.\n       0 < v \\<and>\n       v < u \\<and>\n       coprime u v \\<and>\n       \\<not> (odd u \\<and> odd v) \\<and>\n       (x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n        x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v) \\<and>\n       z = u\\<^sup>2 + v\\<^sup>2 \\<Longrightarrow>\n    prim_pyth_triple x y z", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>u v.\n       0 < v \\<and>\n       v < u \\<and>\n       coprime u v \\<and>\n       \\<not> (odd u \\<and> odd v) \\<and>\n       (x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n        x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v) \\<and>\n       z = u\\<^sup>2 + v\\<^sup>2 \\<Longrightarrow>\n    prim_pyth_triple x y z", "assume ?rhs"], ["proof (state)\nthis:\n  \\<exists>u v.\n     0 < v \\<and>\n     v < u \\<and>\n     coprime u v \\<and>\n     \\<not> (odd u \\<and> odd v) \\<and>\n     (x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n      x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v) \\<and>\n     z = u\\<^sup>2 + v\\<^sup>2\n\ngoal (1 subgoal):\n 1. \\<exists>u v.\n       0 < v \\<and>\n       v < u \\<and>\n       coprime u v \\<and>\n       \\<not> (odd u \\<and> odd v) \\<and>\n       (x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n        x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v) \\<and>\n       z = u\\<^sup>2 + v\\<^sup>2 \\<Longrightarrow>\n    prim_pyth_triple x y z", "then"], ["proof (chain)\npicking this:\n  \\<exists>u v.\n     0 < v \\<and>\n     v < u \\<and>\n     coprime u v \\<and>\n     \\<not> (odd u \\<and> odd v) \\<and>\n     (x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n      x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v) \\<and>\n     z = u\\<^sup>2 + v\\<^sup>2", "obtain u v where uv: \"0 < v\" \"v < u\" \"coprime u v\" \"\\<not>(odd u \\<and> odd v)\" \"z = u\\<^sup>2 + v\\<^sup>2\" and\n                        eq: \"x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2  \\<or>  x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\""], ["proof (prove)\nusing this:\n  \\<exists>u v.\n     0 < v \\<and>\n     v < u \\<and>\n     coprime u v \\<and>\n     \\<not> (odd u \\<and> odd v) \\<and>\n     (x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n      x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v) \\<and>\n     z = u\\<^sup>2 + v\\<^sup>2\n\ngoal (1 subgoal):\n 1. (\\<And>v u.\n        \\<lbrakk>0 < v; v < u; coprime u v; \\<not> (odd u \\<and> odd v);\n         z = u\\<^sup>2 + v\\<^sup>2;\n         x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n         x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  0 < v\n  v < u\n  coprime u v\n  \\<not> (odd u \\<and> odd v)\n  z = u\\<^sup>2 + v\\<^sup>2\n  x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n  x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\n\ngoal (1 subgoal):\n 1. \\<exists>u v.\n       0 < v \\<and>\n       v < u \\<and>\n       coprime u v \\<and>\n       \\<not> (odd u \\<and> odd v) \\<and>\n       (x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n        x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v) \\<and>\n       z = u\\<^sup>2 + v\\<^sup>2 \\<Longrightarrow>\n    prim_pyth_triple x y z", "thus \"prim_pyth_triple x y z\""], ["proof (prove)\nusing this:\n  0 < v\n  v < u\n  coprime u v\n  \\<not> (odd u \\<and> odd v)\n  z = u\\<^sup>2 + v\\<^sup>2\n  x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n  x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\n\ngoal (1 subgoal):\n 1. prim_pyth_triple x y z", "using uv prim_pyth_tripleI1[OF uv(1-4)] prim_pyth_tripleI2[OF uv(1-4)] uv(5) eq"], ["proof (prove)\nusing this:\n  0 < v\n  v < u\n  coprime u v\n  \\<not> (odd u \\<and> odd v)\n  z = u\\<^sup>2 + v\\<^sup>2\n  x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n  x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\n  0 < v\n  v < u\n  coprime u v\n  \\<not> (odd u \\<and> odd v)\n  z = u\\<^sup>2 + v\\<^sup>2\n  prim_pyth_triple (2 * u * v) (u\\<^sup>2 - v\\<^sup>2)\n   (u\\<^sup>2 + v\\<^sup>2)\n  prim_pyth_triple (u\\<^sup>2 - v\\<^sup>2) (2 * u * v)\n   (u\\<^sup>2 + v\\<^sup>2)\n  z = u\\<^sup>2 + v\\<^sup>2\n  x = 2 * u * v \\<and> y = u\\<^sup>2 - v\\<^sup>2 \\<or>\n  x = u\\<^sup>2 - v\\<^sup>2 \\<and> y = 2 * u * v\n\ngoal (1 subgoal):\n 1. prim_pyth_triple x y z", "by auto"], ["proof (state)\nthis:\n  prim_pyth_triple x y z\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}