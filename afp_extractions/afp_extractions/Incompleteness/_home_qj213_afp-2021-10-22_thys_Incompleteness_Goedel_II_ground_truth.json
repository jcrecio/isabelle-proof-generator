{"file_name": "/home/qj213/afp-2021-10-22/thys/Incompleteness/Goedel_II.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Incompleteness", "problem_names": ["lemma Quote_q_Eats [intro]:\n  \"Quote y y' \\<Longrightarrow> Quote z z' \\<Longrightarrow> Quote (y \\<triangleleft> z) (q_Eats y' z')\"", "lemma Quote_q_Succ [intro]:  \"Quote y y' \\<Longrightarrow> Quote (succ y) (q_Succ y')\"", "lemma HR_imp_eq_H: \"HR x z \\<Longrightarrow> z = \\<lbrakk>HF x\\<rbrakk>e\"", "lemma HR_Ord_D: \"HR x y \\<Longrightarrow> Ord x \\<Longrightarrow> WR x y\"", "lemma WR_Quote: \"WR (ord_of i) y \\<Longrightarrow> Quote (ord_of i) y\"", "lemma [simp]: \"\\<langle>\\<langle>0,0,0\\<rangle>, x, y\\<rangle> = q_Eats x y\"", "lemma HR_imp_Quote: \"coding_hf x \\<Longrightarrow> HR x y \\<Longrightarrow> Quote x y\"", "lemma MonPon_PfP_implies_PfP:\n  \"\\<lbrakk>{} \\<turnstile> \\<alpha> IMP \\<beta>; ground_fm \\<alpha>; ground_fm \\<beta>\\<rbrakk> \\<Longrightarrow> {PfP \\<guillemotleft>\\<alpha>\\<guillemotright>} \\<turnstile> PfP \\<guillemotleft>\\<beta>\\<guillemotright>\"", "lemma PfP_quot_contra: \"ground_fm \\<alpha> \\<Longrightarrow> {} \\<turnstile> PfP \\<guillemotleft>\\<alpha>\\<guillemotright> IMP PfP \\<guillemotleft>Neg \\<alpha>\\<guillemotright> IMP PfP \\<guillemotleft>Fls\\<guillemotright>\"", "theorem Goedel_II: \"\\<not> {} \\<turnstile> Neg (PfP \\<guillemotleft>Fls\\<guillemotright>)\""], "translations": [["", "lemma Quote_q_Eats [intro]:\n  \"Quote y y' \\<Longrightarrow> Quote z z' \\<Longrightarrow> Quote (y \\<triangleleft> z) (q_Eats y' z')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Quote y y'; Quote z z'\\<rbrakk>\n    \\<Longrightarrow> Quote (y \\<triangleleft> z) (q_Eats y' z')", "by (auto simp: Quote_def SeqQuote_def intro: BuildSeq2_combine)"], ["", "lemma Quote_q_Succ [intro]:  \"Quote y y' \\<Longrightarrow> Quote (succ y) (q_Succ y')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Quote y y' \\<Longrightarrow> Quote (succ y) (q_Succ y')", "by (auto simp: succ_def q_Succ_def)"], ["", "lemma HR_imp_eq_H: \"HR x z \\<Longrightarrow> z = \\<lbrakk>HF x\\<rbrakk>e\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HR x z \\<Longrightarrow> z = \\<lbrakk>Goedel_I.HF x\\<rbrakk>e", "apply (auto simp add: SeqHR_def HR_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s k.\n       BuildSeq2 (\\<lambda>y y'. Ord y \\<and> WR y y')\n        (\\<lambda>u u' v v' w w'.\n            u = \\<langle>v, w\\<rangle> \\<and> u' = q_HPair v' w')\n        s k x z \\<Longrightarrow>\n       z = \\<lbrakk>Goedel_I.HF x\\<rbrakk>e", "apply (erule BuildSeq2_induct, auto simp add: q_defs WR_iff_eq_W [where e=e])"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma HR_Ord_D: \"HR x y \\<Longrightarrow> Ord x \\<Longrightarrow> WR x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>HR x y; Ord x\\<rbrakk> \\<Longrightarrow> WR x y", "by (metis HF_Ord HR_imp_eq_H WR_iff_eq_W)"], ["", "lemma WR_Quote: \"WR (ord_of i) y \\<Longrightarrow> Quote (ord_of i) y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. WR (ord_of i) y \\<Longrightarrow> Quote (ord_of i) y", "by (induct i arbitrary: y) (auto simp: Quote_0 WR0_iff WR_succ_iff q_Succ_def [symmetric])"], ["", "lemma [simp]: \"\\<langle>\\<langle>0,0,0\\<rangle>, x, y\\<rangle> = q_Eats x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<langle>\\<langle>0, 0, 0\\<rangle>, x, y\\<rangle> = q_Eats x y", "by (simp add: q_Eats_def)"], ["", "lemma HR_imp_Quote: \"coding_hf x \\<Longrightarrow> HR x y \\<Longrightarrow> Quote x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>coding_hf x; HR x y\\<rbrakk> \\<Longrightarrow> Quote x y", "apply (induct x arbitrary: y rule: coding_hf.induct, auto simp: WR_Quote HR_Ord_D)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y ya.\n       \\<lbrakk>coding_hf x; \\<And>y. HR x y \\<Longrightarrow> Quote x y;\n        coding_hf y; \\<And>ya. HR y ya \\<Longrightarrow> Quote y ya;\n        HR \\<langle>x, y\\<rangle> ya\\<rbrakk>\n       \\<Longrightarrow> Quote \\<langle>x, y\\<rangle> ya", "apply (auto dest!: HR_imp_eq_H [where e= e0])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>coding_hf x; \\<And>y. HR x y \\<Longrightarrow> Quote x y;\n        coding_hf y; \\<And>ya. HR y ya \\<Longrightarrow> Quote y ya\\<rbrakk>\n       \\<Longrightarrow> Quote \\<langle>x, y\\<rangle>\n                          (q_Eats\n                            (q_Eats 0\n                              (q_Eats\n                                (q_Eats 0 \\<lbrakk>Goedel_I.HF y\\<rbrakk>e0)\n                                \\<lbrakk>Goedel_I.HF x\\<rbrakk>e0))\n                            (q_Eats\n                              (q_Eats 0 \\<lbrakk>Goedel_I.HF x\\<rbrakk>e0)\n                              \\<lbrakk>Goedel_I.HF x\\<rbrakk>e0))", "by (metis hpair_def' Quote_0 HR_H Quote_q_Eats)"], ["", "interpretation qp0: quote_perm 0 \"{}\" \"make_F {} 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. quote_perm 0 {} &&& make_F {} 0 \\<equiv> make_F {} 0", "proof unfold_locales"], ["proof (state)\ngoal (4 subgoals):\n 1. atom ` (0 \\<bullet> {}) \\<sharp>* {}\n 2. - 0 = 0\n 3. finite {}\n 4. make_F {} 0 \\<equiv> make_F {} 0", "qed auto"], ["", "lemma MonPon_PfP_implies_PfP:\n  \"\\<lbrakk>{} \\<turnstile> \\<alpha> IMP \\<beta>; ground_fm \\<alpha>; ground_fm \\<beta>\\<rbrakk> \\<Longrightarrow> {PfP \\<guillemotleft>\\<alpha>\\<guillemotright>} \\<turnstile> PfP \\<guillemotleft>\\<beta>\\<guillemotright>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>{} \\<turnstile> \\<alpha> IMP \\<beta>; ground_fm \\<alpha>;\n     ground_fm \\<beta>\\<rbrakk>\n    \\<Longrightarrow> {PfP \\<guillemotleft>\\<alpha>\\<guillemotright>} \\<turnstile>\n                      PfP \\<guillemotleft>\\<beta>\\<guillemotright>", "using qp0.quote_all_MonPon_PfP_ssubst"], ["proof (prove)\nusing this:\n  \\<lbrakk>{} \\<turnstile> ?\\<alpha> IMP ?\\<beta>; ?V \\<subseteq> {};\n   supp ?\\<alpha> \\<subseteq> atom ` {};\n   supp ?\\<beta> \\<subseteq> atom ` {}\\<rbrakk>\n  \\<Longrightarrow> quote_all 0 ?V \\<turnstile>\n                    PfP (ssubst \\<lfloor>?\\<alpha>\\<rfloor>?V ?V\n                          (make_F {} 0)) IMP\n                    PfP (ssubst \\<lfloor>?\\<beta>\\<rfloor>?V ?V\n                          (make_F {} 0))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>{} \\<turnstile> \\<alpha> IMP \\<beta>; ground_fm \\<alpha>;\n     ground_fm \\<beta>\\<rbrakk>\n    \\<Longrightarrow> {PfP \\<guillemotleft>\\<alpha>\\<guillemotright>} \\<turnstile>\n                      PfP \\<guillemotleft>\\<beta>\\<guillemotright>", "by auto (metis Assume PfP_implies_ModPon_PfP_quot proved_iff_proved_PfP thin0)"], ["", "lemma PfP_quot_contra: \"ground_fm \\<alpha> \\<Longrightarrow> {} \\<turnstile> PfP \\<guillemotleft>\\<alpha>\\<guillemotright> IMP PfP \\<guillemotleft>Neg \\<alpha>\\<guillemotright> IMP PfP \\<guillemotleft>Fls\\<guillemotright>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ground_fm \\<alpha> \\<Longrightarrow>\n    {} \\<turnstile>\n    PfP \\<guillemotleft>\\<alpha>\\<guillemotright> IMP\n    PfP \\<guillemotleft>Neg \\<alpha>\\<guillemotright> IMP\n    PfP \\<guillemotleft>Fls\\<guillemotright>", "using qp0.quote_all_Contra_PfP_ssubst"], ["proof (prove)\nusing this:\n  \\<lbrakk>?V \\<subseteq> {}; supp ?\\<alpha> \\<subseteq> atom ` {}\\<rbrakk>\n  \\<Longrightarrow> quote_all 0 ?V \\<turnstile>\n                    PfP (ssubst \\<lfloor>?\\<alpha>\\<rfloor>?V ?V\n                          (make_F {} 0)) IMP\n                    PfP (ssubst \\<lfloor>Neg ?\\<alpha>\\<rfloor>?V ?V\n                          (make_F {} 0)) IMP\n                    PfP (ssubst \\<lfloor>Fls\\<rfloor>?V ?V (make_F {} 0))\n\ngoal (1 subgoal):\n 1. ground_fm \\<alpha> \\<Longrightarrow>\n    {} \\<turnstile>\n    PfP \\<guillemotleft>\\<alpha>\\<guillemotright> IMP\n    PfP \\<guillemotleft>Neg \\<alpha>\\<guillemotright> IMP\n    PfP \\<guillemotleft>Fls\\<guillemotright>", "by (auto simp: qp0.quote_all_Contra_PfP_ssubst ground_fm_aux_def)"], ["", "text\\<open>G?del's second incompleteness theorem: Our theory cannot prove its own consistency.\\<close>"], ["", "theorem Goedel_II: \"\\<not> {} \\<turnstile> Neg (PfP \\<guillemotleft>Fls\\<guillemotright>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> {} \\<turnstile> Neg (PfP \\<guillemotleft>Fls\\<guillemotright>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> {} \\<turnstile> Neg (PfP \\<guillemotleft>Fls\\<guillemotright>)", "obtain \\<delta> where diag: \"{} \\<turnstile> \\<delta> IFF Neg (PfP \\<guillemotleft>\\<delta>\\<guillemotright>)\"  \"\\<not> {} \\<turnstile> \\<delta>\" and gnd:  \"ground_fm \\<delta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>\\<delta>.\n        \\<lbrakk>{} \\<turnstile>\n                 \\<delta> IFF\n                 Neg (PfP \\<guillemotleft>\\<delta>\\<guillemotright>);\n         \\<not> {} \\<turnstile> \\<delta>; ground_fm \\<delta>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis Goedel_I)"], ["proof (state)\nthis:\n  {} \\<turnstile>\n  \\<delta> IFF Neg (PfP \\<guillemotleft>\\<delta>\\<guillemotright>)\n  \\<not> {} \\<turnstile> \\<delta>\n  ground_fm \\<delta>\n\ngoal (1 subgoal):\n 1. \\<not> {} \\<turnstile> Neg (PfP \\<guillemotleft>Fls\\<guillemotright>)", "have \"{PfP \\<guillemotleft>\\<delta>\\<guillemotright>} \\<turnstile> PfP \\<guillemotleft>PfP \\<guillemotleft>\\<delta>\\<guillemotright>\\<guillemotright>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {PfP \\<guillemotleft>\\<delta>\\<guillemotright>} \\<turnstile>\n    PfP \\<guillemotleft>PfP \\<guillemotleft>\\<delta>\\<guillemotright>\\<guillemotright>", "by (auto simp: Provability ground_fm_aux_def supp_conv_fresh)"], ["proof (state)\nthis:\n  {PfP \\<guillemotleft>\\<delta>\\<guillemotright>} \\<turnstile>\n  PfP \\<guillemotleft>PfP \\<guillemotleft>\\<delta>\\<guillemotright>\\<guillemotright>\n\ngoal (1 subgoal):\n 1. \\<not> {} \\<turnstile> Neg (PfP \\<guillemotleft>Fls\\<guillemotright>)", "moreover"], ["proof (state)\nthis:\n  {PfP \\<guillemotleft>\\<delta>\\<guillemotright>} \\<turnstile>\n  PfP \\<guillemotleft>PfP \\<guillemotleft>\\<delta>\\<guillemotright>\\<guillemotright>\n\ngoal (1 subgoal):\n 1. \\<not> {} \\<turnstile> Neg (PfP \\<guillemotleft>Fls\\<guillemotright>)", "have \"{PfP \\<guillemotleft>\\<delta>\\<guillemotright>} \\<turnstile> PfP \\<guillemotleft>Neg (PfP \\<guillemotleft>\\<delta>\\<guillemotright>)\\<guillemotright>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {PfP \\<guillemotleft>\\<delta>\\<guillemotright>} \\<turnstile>\n    PfP \\<guillemotleft>Neg (PfP \\<guillemotleft>\\<delta>\\<guillemotright>)\\<guillemotright>", "apply (rule MonPon_PfP_implies_PfP [OF _ gnd])"], ["proof (prove)\ngoal (2 subgoals):\n 1. {} \\<turnstile>\n    \\<delta> IMP Neg (PfP \\<guillemotleft>\\<delta>\\<guillemotright>)\n 2. ground_fm (Neg (PfP \\<guillemotleft>\\<delta>\\<guillemotright>))", "apply (metis Conj_E2 Iff_def Iff_sym diag(1))"], ["proof (prove)\ngoal (1 subgoal):\n 1. ground_fm (Neg (PfP \\<guillemotleft>\\<delta>\\<guillemotright>))", "apply (auto simp: ground_fm_aux_def supp_conv_fresh)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  {PfP \\<guillemotleft>\\<delta>\\<guillemotright>} \\<turnstile>\n  PfP \\<guillemotleft>Neg (PfP \\<guillemotleft>\\<delta>\\<guillemotright>)\\<guillemotright>\n\ngoal (1 subgoal):\n 1. \\<not> {} \\<turnstile> Neg (PfP \\<guillemotleft>Fls\\<guillemotright>)", "moreover"], ["proof (state)\nthis:\n  {PfP \\<guillemotleft>\\<delta>\\<guillemotright>} \\<turnstile>\n  PfP \\<guillemotleft>Neg (PfP \\<guillemotleft>\\<delta>\\<guillemotright>)\\<guillemotright>\n\ngoal (1 subgoal):\n 1. \\<not> {} \\<turnstile> Neg (PfP \\<guillemotleft>Fls\\<guillemotright>)", "have \"ground_fm (PfP \\<guillemotleft>\\<delta>\\<guillemotright>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ground_fm (PfP \\<guillemotleft>\\<delta>\\<guillemotright>)", "by (auto simp: ground_fm_aux_def supp_conv_fresh)"], ["proof (state)\nthis:\n  ground_fm (PfP \\<guillemotleft>\\<delta>\\<guillemotright>)\n\ngoal (1 subgoal):\n 1. \\<not> {} \\<turnstile> Neg (PfP \\<guillemotleft>Fls\\<guillemotright>)", "ultimately"], ["proof (chain)\npicking this:\n  {PfP \\<guillemotleft>\\<delta>\\<guillemotright>} \\<turnstile>\n  PfP \\<guillemotleft>PfP \\<guillemotleft>\\<delta>\\<guillemotright>\\<guillemotright>\n  {PfP \\<guillemotleft>\\<delta>\\<guillemotright>} \\<turnstile>\n  PfP \\<guillemotleft>Neg (PfP \\<guillemotleft>\\<delta>\\<guillemotright>)\\<guillemotright>\n  ground_fm (PfP \\<guillemotleft>\\<delta>\\<guillemotright>)", "have \"{PfP \\<guillemotleft>\\<delta>\\<guillemotright>} \\<turnstile> PfP \\<guillemotleft>Fls\\<guillemotright>\""], ["proof (prove)\nusing this:\n  {PfP \\<guillemotleft>\\<delta>\\<guillemotright>} \\<turnstile>\n  PfP \\<guillemotleft>PfP \\<guillemotleft>\\<delta>\\<guillemotright>\\<guillemotright>\n  {PfP \\<guillemotleft>\\<delta>\\<guillemotright>} \\<turnstile>\n  PfP \\<guillemotleft>Neg (PfP \\<guillemotleft>\\<delta>\\<guillemotright>)\\<guillemotright>\n  ground_fm (PfP \\<guillemotleft>\\<delta>\\<guillemotright>)\n\ngoal (1 subgoal):\n 1. {PfP \\<guillemotleft>\\<delta>\\<guillemotright>} \\<turnstile>\n    PfP \\<guillemotleft>Fls\\<guillemotright>", "using PfP_quot_contra"], ["proof (prove)\nusing this:\n  {PfP \\<guillemotleft>\\<delta>\\<guillemotright>} \\<turnstile>\n  PfP \\<guillemotleft>PfP \\<guillemotleft>\\<delta>\\<guillemotright>\\<guillemotright>\n  {PfP \\<guillemotleft>\\<delta>\\<guillemotright>} \\<turnstile>\n  PfP \\<guillemotleft>Neg (PfP \\<guillemotleft>\\<delta>\\<guillemotright>)\\<guillemotright>\n  ground_fm (PfP \\<guillemotleft>\\<delta>\\<guillemotright>)\n  ground_fm ?\\<alpha> \\<Longrightarrow>\n  {} \\<turnstile>\n  PfP \\<guillemotleft>?\\<alpha>\\<guillemotright> IMP\n  PfP \\<guillemotleft>Neg ?\\<alpha>\\<guillemotright> IMP\n  PfP \\<guillemotleft>Fls\\<guillemotright>\n\ngoal (1 subgoal):\n 1. {PfP \\<guillemotleft>\\<delta>\\<guillemotright>} \\<turnstile>\n    PfP \\<guillemotleft>Fls\\<guillemotright>", "by (metis (no_types) anti_deduction cut2)"], ["proof (state)\nthis:\n  {PfP \\<guillemotleft>\\<delta>\\<guillemotright>} \\<turnstile>\n  PfP \\<guillemotleft>Fls\\<guillemotright>\n\ngoal (1 subgoal):\n 1. \\<not> {} \\<turnstile> Neg (PfP \\<guillemotleft>Fls\\<guillemotright>)", "thus \"\\<not> {} \\<turnstile> Neg (PfP \\<guillemotleft>Fls\\<guillemotright>)\""], ["proof (prove)\nusing this:\n  {PfP \\<guillemotleft>\\<delta>\\<guillemotright>} \\<turnstile>\n  PfP \\<guillemotleft>Fls\\<guillemotright>\n\ngoal (1 subgoal):\n 1. \\<not> {} \\<turnstile> Neg (PfP \\<guillemotleft>Fls\\<guillemotright>)", "by (metis Iff_MP2_same Neg_mono cut1 diag)"], ["proof (state)\nthis:\n  \\<not> {} \\<turnstile> Neg (PfP \\<guillemotleft>Fls\\<guillemotright>)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}