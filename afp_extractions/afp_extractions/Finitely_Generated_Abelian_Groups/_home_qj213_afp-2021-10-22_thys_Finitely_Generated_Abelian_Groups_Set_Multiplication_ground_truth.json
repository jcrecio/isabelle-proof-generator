{"file_name": "/home/qj213/afp-2021-10-22/thys/Finitely_Generated_Abelian_Groups/Set_Multiplication.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Finitely_Generated_Abelian_Groups", "problem_names": ["lemma (in group) set_mult_union:\n  \"A <#> (B \\<union> C) = (A <#> B) \\<union> (A <#> C)\"", "lemma (in group) set_mult_card_single_el_eq:\n  assumes \"J \\<subseteq> carrier G\" \"x \\<in> carrier G\"\n  shows \"card (l_coset G x J) = card J\"", "lemma (in group) set_mult_card_le:\n  assumes \"finite H\" \"H \\<subseteq> carrier G\" \"J \\<subseteq> carrier G\"\n  shows \"card (H <#> J) \\<le> card H * card J\"", "lemma (in group) set_mult_finite:\n  assumes \"finite H\" \"finite J\" \"H \\<subseteq> carrier G\" \"J \\<subseteq> carrier G\"\n  shows \"finite (H <#> J)\"", "lemma (in group) set_mult_card_eq_impl_empty_inter:\n  assumes \"finite H\" \"finite J\" \"H \\<subseteq> carrier G\" \"J \\<subseteq> carrier G\" \"card (H <#> J) = card H * card J\"\n  shows \"\\<And>a b. \\<lbrakk>a \\<in> H; b \\<in> H; a \\<noteq> b\\<rbrakk> \\<Longrightarrow> ((\\<otimes>) a ` J) \\<inter> ((\\<otimes>) b ` J) = {}\"", "lemma (in group) set_mult_card_eq_impl_empty_inter':\n  assumes \"finite H\" \"finite J\" \"H \\<subseteq> carrier G\" \"J \\<subseteq> carrier G\" \"card (H <#> J) = card H * card J\"\n  shows \"\\<And>a b. \\<lbrakk>a \\<in> H; b \\<in> H; a \\<noteq> b\\<rbrakk> \\<Longrightarrow> (l_coset G a J) \\<inter> (l_coset G b J) = {}\"", "lemma (in comm_group) set_mult_comm:\n  assumes \"H \\<subseteq> carrier G\" \"J \\<subseteq> carrier G\"\n  shows \"(H <#> J) = (J <#> H)\"", "lemma (in group) set_mult_one_imp_inc:\n  assumes \"\\<one> \\<in> A\" \"A \\<subseteq> carrier G\" \"B \\<subseteq> carrier G\"\n  shows \"B \\<subseteq> (B <#> A)\"", "lemma (in group) set_mult_subset_generate:\n  assumes \"A \\<subseteq> carrier G\" \"B \\<subseteq> carrier G\"\n  shows \"A <#> B \\<subseteq> generate G (A \\<union> B)\"", "lemma (in comm_group) set_mult_eq_generate_subgroup:\n  assumes \"subgroup H G\" \"subgroup J G\"\n  shows \"generate G (H \\<union> J) = H <#> J\" (is \"?L = ?R\")"], "translations": [["", "lemma (in group) set_mult_union:\n  \"A <#> (B \\<union> C) = (A <#> B) \\<union> (A <#> C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A <#> B \\<union> C = (A <#> B) \\<union> (A <#> C)", "unfolding set_mult_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>h\\<in>A. \\<Union>k\\<in>B \\<union> C. {h \\<otimes> k}) =\n    (\\<Union>h\\<in>A. \\<Union>k\\<in>B. {h \\<otimes> k}) \\<union>\n    (\\<Union>h\\<in>A. \\<Union>k\\<in>C. {h \\<otimes> k})", "by auto"], ["", "lemma (in group) set_mult_card_single_el_eq:\n  assumes \"J \\<subseteq> carrier G\" \"x \\<in> carrier G\"\n  shows \"card (l_coset G x J) = card J\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (x <# J) = card J", "unfolding l_coset_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. card (\\<Union>h\\<in>J. {x \\<otimes> h}) = card J", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card (\\<Union>h\\<in>J. {x \\<otimes> h}) = card J", "have \"card ((\\<otimes>) x ` J) = card J\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card ((\\<otimes>) x ` J) = card J", "using inj_on_cmult[of x] card_image[of \"(\\<otimes>) x\" J] assms inj_on_subset[of \"(\\<otimes>) x\" \"carrier G\" J]"], ["proof (prove)\nusing this:\n  x \\<in> carrier G \\<Longrightarrow> inj_on ((\\<otimes>) x) (carrier G)\n  inj_on ((\\<otimes>) x) J \\<Longrightarrow>\n  card ((\\<otimes>) x ` J) = card J\n  J \\<subseteq> carrier G\n  x \\<in> carrier G\n  \\<lbrakk>inj_on ((\\<otimes>) x) (carrier G);\n   J \\<subseteq> carrier G\\<rbrakk>\n  \\<Longrightarrow> inj_on ((\\<otimes>) x) J\n\ngoal (1 subgoal):\n 1. card ((\\<otimes>) x ` J) = card J", "by blast"], ["proof (state)\nthis:\n  card ((\\<otimes>) x ` J) = card J\n\ngoal (1 subgoal):\n 1. card (\\<Union>h\\<in>J. {x \\<otimes> h}) = card J", "moreover"], ["proof (state)\nthis:\n  card ((\\<otimes>) x ` J) = card J\n\ngoal (1 subgoal):\n 1. card (\\<Union>h\\<in>J. {x \\<otimes> h}) = card J", "have \"(\\<Union>y\\<in>J. {x \\<otimes> y}) = (\\<otimes>) x ` J\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>y\\<in>J. {x \\<otimes> y}) = (\\<otimes>) x ` J", "using image_def[of \"(\\<otimes>) x\" J]"], ["proof (prove)\nusing this:\n  (\\<otimes>) x ` J = {y. \\<exists>xa\\<in>J. y = x \\<otimes> xa}\n\ngoal (1 subgoal):\n 1. (\\<Union>y\\<in>J. {x \\<otimes> y}) = (\\<otimes>) x ` J", "by blast"], ["proof (state)\nthis:\n  (\\<Union>y\\<in>J. {x \\<otimes> y}) = (\\<otimes>) x ` J\n\ngoal (1 subgoal):\n 1. card (\\<Union>h\\<in>J. {x \\<otimes> h}) = card J", "ultimately"], ["proof (chain)\npicking this:\n  card ((\\<otimes>) x ` J) = card J\n  (\\<Union>y\\<in>J. {x \\<otimes> y}) = (\\<otimes>) x ` J", "show \"card (\\<Union>h\\<in>J. {x \\<otimes> h}) = card J\""], ["proof (prove)\nusing this:\n  card ((\\<otimes>) x ` J) = card J\n  (\\<Union>y\\<in>J. {x \\<otimes> y}) = (\\<otimes>) x ` J\n\ngoal (1 subgoal):\n 1. card (\\<Union>h\\<in>J. {x \\<otimes> h}) = card J", "by presburger"], ["proof (state)\nthis:\n  card (\\<Union>h\\<in>J. {x \\<otimes> h}) = card J\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>We find an upper bound for the cardinality of a set product.\\<close>"], ["", "lemma (in group) set_mult_card_le:\n  assumes \"finite H\" \"H \\<subseteq> carrier G\" \"J \\<subseteq> carrier G\"\n  shows \"card (H <#> J) \\<le> card H * card J\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (H <#> J) \\<le> card H * card J", "using assms"], ["proof (prove)\nusing this:\n  finite H\n  H \\<subseteq> carrier G\n  J \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. card (H <#> J) \\<le> card H * card J", "proof (induction \"card H\" arbitrary: H)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>H.\n       \\<lbrakk>0 = card H; finite H; H \\<subseteq> carrier G;\n        J \\<subseteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> card (H <#> J) \\<le> card H * card J\n 2. \\<And>x H.\n       \\<lbrakk>\\<And>H.\n                   \\<lbrakk>x = card H; finite H; H \\<subseteq> carrier G;\n                    J \\<subseteq> carrier G\\<rbrakk>\n                   \\<Longrightarrow> card (H <#> J) \\<le> card H * card J;\n        Suc x = card H; finite H; H \\<subseteq> carrier G;\n        J \\<subseteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> card (H <#> J) \\<le> card H * card J", "case 0"], ["proof (state)\nthis:\n  0 = card H\n  finite H\n  H \\<subseteq> carrier G\n  J \\<subseteq> carrier G\n\ngoal (2 subgoals):\n 1. \\<And>H.\n       \\<lbrakk>0 = card H; finite H; H \\<subseteq> carrier G;\n        J \\<subseteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> card (H <#> J) \\<le> card H * card J\n 2. \\<And>x H.\n       \\<lbrakk>\\<And>H.\n                   \\<lbrakk>x = card H; finite H; H \\<subseteq> carrier G;\n                    J \\<subseteq> carrier G\\<rbrakk>\n                   \\<Longrightarrow> card (H <#> J) \\<le> card H * card J;\n        Suc x = card H; finite H; H \\<subseteq> carrier G;\n        J \\<subseteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> card (H <#> J) \\<le> card H * card J", "then"], ["proof (chain)\npicking this:\n  0 = card H\n  finite H\n  H \\<subseteq> carrier G\n  J \\<subseteq> carrier G", "have \"H = {}\""], ["proof (prove)\nusing this:\n  0 = card H\n  finite H\n  H \\<subseteq> carrier G\n  J \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. H = {}", "by force"], ["proof (state)\nthis:\n  H = {}\n\ngoal (2 subgoals):\n 1. \\<And>H.\n       \\<lbrakk>0 = card H; finite H; H \\<subseteq> carrier G;\n        J \\<subseteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> card (H <#> J) \\<le> card H * card J\n 2. \\<And>x H.\n       \\<lbrakk>\\<And>H.\n                   \\<lbrakk>x = card H; finite H; H \\<subseteq> carrier G;\n                    J \\<subseteq> carrier G\\<rbrakk>\n                   \\<Longrightarrow> card (H <#> J) \\<le> card H * card J;\n        Suc x = card H; finite H; H \\<subseteq> carrier G;\n        J \\<subseteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> card (H <#> J) \\<le> card H * card J", "then"], ["proof (chain)\npicking this:\n  H = {}", "show ?case"], ["proof (prove)\nusing this:\n  H = {}\n\ngoal (1 subgoal):\n 1. card (H <#> J) \\<le> card H * card J", "using set_mult_def[of G H J]"], ["proof (prove)\nusing this:\n  H = {}\n  H <#> J = (\\<Union>h\\<in>H. \\<Union>k\\<in>J. {h \\<otimes> k})\n\ngoal (1 subgoal):\n 1. card (H <#> J) \\<le> card H * card J", "by simp"], ["proof (state)\nthis:\n  card (H <#> J) \\<le> card H * card J\n\ngoal (1 subgoal):\n 1. \\<And>x H.\n       \\<lbrakk>\\<And>H.\n                   \\<lbrakk>x = card H; finite H; H \\<subseteq> carrier G;\n                    J \\<subseteq> carrier G\\<rbrakk>\n                   \\<Longrightarrow> card (H <#> J) \\<le> card H * card J;\n        Suc x = card H; finite H; H \\<subseteq> carrier G;\n        J \\<subseteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> card (H <#> J) \\<le> card H * card J", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x H.\n       \\<lbrakk>\\<And>H.\n                   \\<lbrakk>x = card H; finite H; H \\<subseteq> carrier G;\n                    J \\<subseteq> carrier G\\<rbrakk>\n                   \\<Longrightarrow> card (H <#> J) \\<le> card H * card J;\n        Suc x = card H; finite H; H \\<subseteq> carrier G;\n        J \\<subseteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> card (H <#> J) \\<le> card H * card J", "case (Suc n)"], ["proof (state)\nthis:\n  \\<lbrakk>n = card ?H; finite ?H; ?H \\<subseteq> carrier G;\n   J \\<subseteq> carrier G\\<rbrakk>\n  \\<Longrightarrow> card (?H <#> J) \\<le> card ?H * card J\n  Suc n = card H\n  finite H\n  H \\<subseteq> carrier G\n  J \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>x H.\n       \\<lbrakk>\\<And>H.\n                   \\<lbrakk>x = card H; finite H; H \\<subseteq> carrier G;\n                    J \\<subseteq> carrier G\\<rbrakk>\n                   \\<Longrightarrow> card (H <#> J) \\<le> card H * card J;\n        Suc x = card H; finite H; H \\<subseteq> carrier G;\n        J \\<subseteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> card (H <#> J) \\<le> card H * card J", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>n = card ?H; finite ?H; ?H \\<subseteq> carrier G;\n   J \\<subseteq> carrier G\\<rbrakk>\n  \\<Longrightarrow> card (?H <#> J) \\<le> card ?H * card J\n  Suc n = card H\n  finite H\n  H \\<subseteq> carrier G\n  J \\<subseteq> carrier G", "obtain a where a_def: \"a \\<in> H\""], ["proof (prove)\nusing this:\n  \\<lbrakk>n = card ?H; finite ?H; ?H \\<subseteq> carrier G;\n   J \\<subseteq> carrier G\\<rbrakk>\n  \\<Longrightarrow> card (?H <#> J) \\<le> card ?H * card J\n  Suc n = card H\n  finite H\n  H \\<subseteq> carrier G\n  J \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. (\\<And>a. a \\<in> H \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by fastforce"], ["proof (state)\nthis:\n  a \\<in> H\n\ngoal (1 subgoal):\n 1. \\<And>x H.\n       \\<lbrakk>\\<And>H.\n                   \\<lbrakk>x = card H; finite H; H \\<subseteq> carrier G;\n                    J \\<subseteq> carrier G\\<rbrakk>\n                   \\<Longrightarrow> card (H <#> J) \\<le> card H * card J;\n        Suc x = card H; finite H; H \\<subseteq> carrier G;\n        J \\<subseteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> card (H <#> J) \\<le> card H * card J", "then"], ["proof (chain)\npicking this:\n  a \\<in> H", "have c_n: \"card (H - {a}) = n\""], ["proof (prove)\nusing this:\n  a \\<in> H\n\ngoal (1 subgoal):\n 1. card (H - {a}) = n", "using Suc"], ["proof (prove)\nusing this:\n  a \\<in> H\n  \\<lbrakk>n = card ?H; finite ?H; ?H \\<subseteq> carrier G;\n   J \\<subseteq> carrier G\\<rbrakk>\n  \\<Longrightarrow> card (?H <#> J) \\<le> card ?H * card J\n  Suc n = card H\n  finite H\n  H \\<subseteq> carrier G\n  J \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. card (H - {a}) = n", "by force"], ["proof (state)\nthis:\n  card (H - {a}) = n\n\ngoal (1 subgoal):\n 1. \\<And>x H.\n       \\<lbrakk>\\<And>H.\n                   \\<lbrakk>x = card H; finite H; H \\<subseteq> carrier G;\n                    J \\<subseteq> carrier G\\<rbrakk>\n                   \\<Longrightarrow> card (H <#> J) \\<le> card H * card J;\n        Suc x = card H; finite H; H \\<subseteq> carrier G;\n        J \\<subseteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> card (H <#> J) \\<le> card H * card J", "then"], ["proof (chain)\npicking this:\n  card (H - {a}) = n", "have \"card ((H - {a}) <#> J) \\<le> card (H - {a}) * card J\""], ["proof (prove)\nusing this:\n  card (H - {a}) = n\n\ngoal (1 subgoal):\n 1. card (H - {a} <#> J) \\<le> card (H - {a}) * card J", "using Suc"], ["proof (prove)\nusing this:\n  card (H - {a}) = n\n  \\<lbrakk>n = card ?H; finite ?H; ?H \\<subseteq> carrier G;\n   J \\<subseteq> carrier G\\<rbrakk>\n  \\<Longrightarrow> card (?H <#> J) \\<le> card ?H * card J\n  Suc n = card H\n  finite H\n  H \\<subseteq> carrier G\n  J \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. card (H - {a} <#> J) \\<le> card (H - {a}) * card J", "by blast"], ["proof (state)\nthis:\n  card (H - {a} <#> J) \\<le> card (H - {a}) * card J\n\ngoal (1 subgoal):\n 1. \\<And>x H.\n       \\<lbrakk>\\<And>H.\n                   \\<lbrakk>x = card H; finite H; H \\<subseteq> carrier G;\n                    J \\<subseteq> carrier G\\<rbrakk>\n                   \\<Longrightarrow> card (H <#> J) \\<le> card H * card J;\n        Suc x = card H; finite H; H \\<subseteq> carrier G;\n        J \\<subseteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> card (H <#> J) \\<le> card H * card J", "moreover"], ["proof (state)\nthis:\n  card (H - {a} <#> J) \\<le> card (H - {a}) * card J\n\ngoal (1 subgoal):\n 1. \\<And>x H.\n       \\<lbrakk>\\<And>H.\n                   \\<lbrakk>x = card H; finite H; H \\<subseteq> carrier G;\n                    J \\<subseteq> carrier G\\<rbrakk>\n                   \\<Longrightarrow> card (H <#> J) \\<le> card H * card J;\n        Suc x = card H; finite H; H \\<subseteq> carrier G;\n        J \\<subseteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> card (H <#> J) \\<le> card H * card J", "have \"card ({a} <#> J) = card J\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card ({a} <#> J) = card J", "using Suc(4, 5) a_def set_mult_card_single_el_eq[of J a] l_coset_eq_set_mult[of G a J]"], ["proof (prove)\nusing this:\n  H \\<subseteq> carrier G\n  J \\<subseteq> carrier G\n  a \\<in> H\n  \\<lbrakk>J \\<subseteq> carrier G; a \\<in> carrier G\\<rbrakk>\n  \\<Longrightarrow> card (a <# J) = card J\n  a <# J = {a} <#> J\n\ngoal (1 subgoal):\n 1. card ({a} <#> J) = card J", "by auto"], ["proof (state)\nthis:\n  card ({a} <#> J) = card J\n\ngoal (1 subgoal):\n 1. \\<And>x H.\n       \\<lbrakk>\\<And>H.\n                   \\<lbrakk>x = card H; finite H; H \\<subseteq> carrier G;\n                    J \\<subseteq> carrier G\\<rbrakk>\n                   \\<Longrightarrow> card (H <#> J) \\<le> card H * card J;\n        Suc x = card H; finite H; H \\<subseteq> carrier G;\n        J \\<subseteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> card (H <#> J) \\<le> card H * card J", "moreover"], ["proof (state)\nthis:\n  card ({a} <#> J) = card J\n\ngoal (1 subgoal):\n 1. \\<And>x H.\n       \\<lbrakk>\\<And>H.\n                   \\<lbrakk>x = card H; finite H; H \\<subseteq> carrier G;\n                    J \\<subseteq> carrier G\\<rbrakk>\n                   \\<Longrightarrow> card (H <#> J) \\<le> card H * card J;\n        Suc x = card H; finite H; H \\<subseteq> carrier G;\n        J \\<subseteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> card (H <#> J) \\<le> card H * card J", "have \"H <#> J = (H - {a} <#> J) \\<union> ({a} <#> J)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H <#> J = (H - {a} <#> J) \\<union> ({a} <#> J)", "using set_mult_def[of G _ J] a_def"], ["proof (prove)\nusing this:\n  ?H <#> J = (\\<Union>h\\<in>?H. \\<Union>k\\<in>J. {h \\<otimes> k})\n  a \\<in> H\n\ngoal (1 subgoal):\n 1. H <#> J = (H - {a} <#> J) \\<union> ({a} <#> J)", "by auto"], ["proof (state)\nthis:\n  H <#> J = (H - {a} <#> J) \\<union> ({a} <#> J)\n\ngoal (1 subgoal):\n 1. \\<And>x H.\n       \\<lbrakk>\\<And>H.\n                   \\<lbrakk>x = card H; finite H; H \\<subseteq> carrier G;\n                    J \\<subseteq> carrier G\\<rbrakk>\n                   \\<Longrightarrow> card (H <#> J) \\<le> card H * card J;\n        Suc x = card H; finite H; H \\<subseteq> carrier G;\n        J \\<subseteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> card (H <#> J) \\<le> card H * card J", "moreover"], ["proof (state)\nthis:\n  H <#> J = (H - {a} <#> J) \\<union> ({a} <#> J)\n\ngoal (1 subgoal):\n 1. \\<And>x H.\n       \\<lbrakk>\\<And>H.\n                   \\<lbrakk>x = card H; finite H; H \\<subseteq> carrier G;\n                    J \\<subseteq> carrier G\\<rbrakk>\n                   \\<Longrightarrow> card (H <#> J) \\<le> card H * card J;\n        Suc x = card H; finite H; H \\<subseteq> carrier G;\n        J \\<subseteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> card (H <#> J) \\<le> card H * card J", "have \"card (H - {a}) * card J + card J = Suc n * card J\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (H - {a}) * card J + card J = Suc n * card J", "using c_n mult_Suc"], ["proof (prove)\nusing this:\n  card (H - {a}) = n\n  Suc ?m * ?n = ?n + ?m * ?n\n\ngoal (1 subgoal):\n 1. card (H - {a}) * card J + card J = Suc n * card J", "by presburger"], ["proof (state)\nthis:\n  card (H - {a}) * card J + card J = Suc n * card J\n\ngoal (1 subgoal):\n 1. \\<And>x H.\n       \\<lbrakk>\\<And>H.\n                   \\<lbrakk>x = card H; finite H; H \\<subseteq> carrier G;\n                    J \\<subseteq> carrier G\\<rbrakk>\n                   \\<Longrightarrow> card (H <#> J) \\<le> card H * card J;\n        Suc x = card H; finite H; H \\<subseteq> carrier G;\n        J \\<subseteq> carrier G\\<rbrakk>\n       \\<Longrightarrow> card (H <#> J) \\<le> card H * card J", "ultimately"], ["proof (chain)\npicking this:\n  card (H - {a} <#> J) \\<le> card (H - {a}) * card J\n  card ({a} <#> J) = card J\n  H <#> J = (H - {a} <#> J) \\<union> ({a} <#> J)\n  card (H - {a}) * card J + card J = Suc n * card J", "show ?case"], ["proof (prove)\nusing this:\n  card (H - {a} <#> J) \\<le> card (H - {a}) * card J\n  card ({a} <#> J) = card J\n  H <#> J = (H - {a} <#> J) \\<union> ({a} <#> J)\n  card (H - {a}) * card J + card J = Suc n * card J\n\ngoal (1 subgoal):\n 1. card (H <#> J) \\<le> card H * card J", "using card_Un_le[of \"H - {a} <#> J\" \"{a} <#> J\"] c_n \\<open>Suc n = card H\\<close>"], ["proof (prove)\nusing this:\n  card (H - {a} <#> J) \\<le> card (H - {a}) * card J\n  card ({a} <#> J) = card J\n  H <#> J = (H - {a} <#> J) \\<union> ({a} <#> J)\n  card (H - {a}) * card J + card J = Suc n * card J\n  card ((H - {a} <#> J) \\<union> ({a} <#> J))\n  \\<le> card (H - {a} <#> J) + card ({a} <#> J)\n  card (H - {a}) = n\n  Suc n = card H\n\ngoal (1 subgoal):\n 1. card (H <#> J) \\<le> card H * card J", "by auto"], ["proof (state)\nthis:\n  card (H <#> J) \\<le> card H * card J\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in group) set_mult_finite:\n  assumes \"finite H\" \"finite J\" \"H \\<subseteq> carrier G\" \"J \\<subseteq> carrier G\"\n  shows \"finite (H <#> J)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (H <#> J)", "using assms set_mult_def[of G H J]"], ["proof (prove)\nusing this:\n  finite H\n  finite J\n  H \\<subseteq> carrier G\n  J \\<subseteq> carrier G\n  H <#> J = (\\<Union>h\\<in>H. \\<Union>k\\<in>J. {h \\<otimes> k})\n\ngoal (1 subgoal):\n 1. finite (H <#> J)", "by auto"], ["", "text \\<open>The next lemma allows us to later to derive that two finite subgroups $J$ and $H$ are complementary\nif and only if their product has the cardinality $|J| \\cdot |H|$.\\<close>"], ["", "lemma (in group) set_mult_card_eq_impl_empty_inter:\n  assumes \"finite H\" \"finite J\" \"H \\<subseteq> carrier G\" \"J \\<subseteq> carrier G\" \"card (H <#> J) = card H * card J\"\n  shows \"\\<And>a b. \\<lbrakk>a \\<in> H; b \\<in> H; a \\<noteq> b\\<rbrakk> \\<Longrightarrow> ((\\<otimes>) a ` J) \\<inter> ((\\<otimes>) b ` J) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> H; b \\<in> H; a \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<otimes>) a ` J \\<inter> (\\<otimes>) b ` J = {}", "using assms"], ["proof (prove)\nusing this:\n  finite H\n  finite J\n  H \\<subseteq> carrier G\n  J \\<subseteq> carrier G\n  card (H <#> J) = card H * card J\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> H; b \\<in> H; a \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<otimes>) a ` J \\<inter> (\\<otimes>) b ` J = {}", "proof (induction H rule: finite_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> {}; b \\<in> {}; a \\<noteq> b; finite J;\n        {} \\<subseteq> carrier G; J \\<subseteq> carrier G;\n        card ({} <#> J) = card {} * card J\\<rbrakk>\n       \\<Longrightarrow> (\\<otimes>) a ` J \\<inter> (\\<otimes>) b ` J = {}\n 2. \\<And>x F a b.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>a b.\n           \\<lbrakk>a \\<in> F; b \\<in> F; a \\<noteq> b; finite J;\n            F \\<subseteq> carrier G; J \\<subseteq> carrier G;\n            card (F <#> J) = card F * card J\\<rbrakk>\n           \\<Longrightarrow> (\\<otimes>) a ` J \\<inter> (\\<otimes>) b ` J =\n                             {};\n        a \\<in> insert x F; b \\<in> insert x F; a \\<noteq> b; finite J;\n        insert x F \\<subseteq> carrier G; J \\<subseteq> carrier G;\n        card (insert x F <#> J) = card (insert x F) * card J\\<rbrakk>\n       \\<Longrightarrow> (\\<otimes>) a ` J \\<inter> (\\<otimes>) b ` J = {}", "case empty"], ["proof (state)\nthis:\n  a \\<in> {}\n  b \\<in> {}\n  a \\<noteq> b\n  finite J\n  {} \\<subseteq> carrier G\n  J \\<subseteq> carrier G\n  card ({} <#> J) = card {} * card J\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> {}; b \\<in> {}; a \\<noteq> b; finite J;\n        {} \\<subseteq> carrier G; J \\<subseteq> carrier G;\n        card ({} <#> J) = card {} * card J\\<rbrakk>\n       \\<Longrightarrow> (\\<otimes>) a ` J \\<inter> (\\<otimes>) b ` J = {}\n 2. \\<And>x F a b.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>a b.\n           \\<lbrakk>a \\<in> F; b \\<in> F; a \\<noteq> b; finite J;\n            F \\<subseteq> carrier G; J \\<subseteq> carrier G;\n            card (F <#> J) = card F * card J\\<rbrakk>\n           \\<Longrightarrow> (\\<otimes>) a ` J \\<inter> (\\<otimes>) b ` J =\n                             {};\n        a \\<in> insert x F; b \\<in> insert x F; a \\<noteq> b; finite J;\n        insert x F \\<subseteq> carrier G; J \\<subseteq> carrier G;\n        card (insert x F <#> J) = card (insert x F) * card J\\<rbrakk>\n       \\<Longrightarrow> (\\<otimes>) a ` J \\<inter> (\\<otimes>) b ` J = {}", "then"], ["proof (chain)\npicking this:\n  a \\<in> {}\n  b \\<in> {}\n  a \\<noteq> b\n  finite J\n  {} \\<subseteq> carrier G\n  J \\<subseteq> carrier G\n  card ({} <#> J) = card {} * card J", "show ?case"], ["proof (prove)\nusing this:\n  a \\<in> {}\n  b \\<in> {}\n  a \\<noteq> b\n  finite J\n  {} \\<subseteq> carrier G\n  J \\<subseteq> carrier G\n  card ({} <#> J) = card {} * card J\n\ngoal (1 subgoal):\n 1. (\\<otimes>) a ` J \\<inter> (\\<otimes>) b ` J = {}", "by fast"], ["proof (state)\nthis:\n  (\\<otimes>) a ` J \\<inter> (\\<otimes>) b ` J = {}\n\ngoal (1 subgoal):\n 1. \\<And>x F a b.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>a b.\n           \\<lbrakk>a \\<in> F; b \\<in> F; a \\<noteq> b; finite J;\n            F \\<subseteq> carrier G; J \\<subseteq> carrier G;\n            card (F <#> J) = card F * card J\\<rbrakk>\n           \\<Longrightarrow> (\\<otimes>) a ` J \\<inter> (\\<otimes>) b ` J =\n                             {};\n        a \\<in> insert x F; b \\<in> insert x F; a \\<noteq> b; finite J;\n        insert x F \\<subseteq> carrier G; J \\<subseteq> carrier G;\n        card (insert x F <#> J) = card (insert x F) * card J\\<rbrakk>\n       \\<Longrightarrow> (\\<otimes>) a ` J \\<inter> (\\<otimes>) b ` J = {}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F a b.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>a b.\n           \\<lbrakk>a \\<in> F; b \\<in> F; a \\<noteq> b; finite J;\n            F \\<subseteq> carrier G; J \\<subseteq> carrier G;\n            card (F <#> J) = card F * card J\\<rbrakk>\n           \\<Longrightarrow> (\\<otimes>) a ` J \\<inter> (\\<otimes>) b ` J =\n                             {};\n        a \\<in> insert x F; b \\<in> insert x F; a \\<noteq> b; finite J;\n        insert x F \\<subseteq> carrier G; J \\<subseteq> carrier G;\n        card (insert x F <#> J) = card (insert x F) * card J\\<rbrakk>\n       \\<Longrightarrow> (\\<otimes>) a ` J \\<inter> (\\<otimes>) b ` J = {}", "case step: (insert x H)"], ["proof (state)\nthis:\n  finite H\n  x \\<notin> H\n  \\<lbrakk>?a \\<in> H; ?b \\<in> H; ?a \\<noteq> ?b; finite J;\n   H \\<subseteq> carrier G; J \\<subseteq> carrier G;\n   card (H <#> J) = card H * card J\\<rbrakk>\n  \\<Longrightarrow> (\\<otimes>) ?a ` J \\<inter> (\\<otimes>) ?b ` J = {}\n  a \\<in> insert x H\n  b \\<in> insert x H\n  a \\<noteq> b\n  finite J\n  insert x H \\<subseteq> carrier G\n  J \\<subseteq> carrier G\n  card (insert x H <#> J) = card (insert x H) * card J\n\ngoal (1 subgoal):\n 1. \\<And>x F a b.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>a b.\n           \\<lbrakk>a \\<in> F; b \\<in> F; a \\<noteq> b; finite J;\n            F \\<subseteq> carrier G; J \\<subseteq> carrier G;\n            card (F <#> J) = card F * card J\\<rbrakk>\n           \\<Longrightarrow> (\\<otimes>) a ` J \\<inter> (\\<otimes>) b ` J =\n                             {};\n        a \\<in> insert x F; b \\<in> insert x F; a \\<noteq> b; finite J;\n        insert x F \\<subseteq> carrier G; J \\<subseteq> carrier G;\n        card (insert x F <#> J) = card (insert x F) * card J\\<rbrakk>\n       \\<Longrightarrow> (\\<otimes>) a ` J \\<inter> (\\<otimes>) b ` J = {}", "from step"], ["proof (chain)\npicking this:\n  finite H\n  x \\<notin> H\n  \\<lbrakk>?a \\<in> H; ?b \\<in> H; ?a \\<noteq> ?b; finite J;\n   H \\<subseteq> carrier G; J \\<subseteq> carrier G;\n   card (H <#> J) = card H * card J\\<rbrakk>\n  \\<Longrightarrow> (\\<otimes>) ?a ` J \\<inter> (\\<otimes>) ?b ` J = {}\n  a \\<in> insert x H\n  b \\<in> insert x H\n  a \\<noteq> b\n  finite J\n  insert x H \\<subseteq> carrier G\n  J \\<subseteq> carrier G\n  card (insert x H <#> J) = card (insert x H) * card J", "have x_c: \"x \\<in> carrier G\""], ["proof (prove)\nusing this:\n  finite H\n  x \\<notin> H\n  \\<lbrakk>?a \\<in> H; ?b \\<in> H; ?a \\<noteq> ?b; finite J;\n   H \\<subseteq> carrier G; J \\<subseteq> carrier G;\n   card (H <#> J) = card H * card J\\<rbrakk>\n  \\<Longrightarrow> (\\<otimes>) ?a ` J \\<inter> (\\<otimes>) ?b ` J = {}\n  a \\<in> insert x H\n  b \\<in> insert x H\n  a \\<noteq> b\n  finite J\n  insert x H \\<subseteq> carrier G\n  J \\<subseteq> carrier G\n  card (insert x H <#> J) = card (insert x H) * card J\n\ngoal (1 subgoal):\n 1. x \\<in> carrier G", "by simp"], ["proof (state)\nthis:\n  x \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>x F a b.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>a b.\n           \\<lbrakk>a \\<in> F; b \\<in> F; a \\<noteq> b; finite J;\n            F \\<subseteq> carrier G; J \\<subseteq> carrier G;\n            card (F <#> J) = card F * card J\\<rbrakk>\n           \\<Longrightarrow> (\\<otimes>) a ` J \\<inter> (\\<otimes>) b ` J =\n                             {};\n        a \\<in> insert x F; b \\<in> insert x F; a \\<noteq> b; finite J;\n        insert x F \\<subseteq> carrier G; J \\<subseteq> carrier G;\n        card (insert x F <#> J) = card (insert x F) * card J\\<rbrakk>\n       \\<Longrightarrow> (\\<otimes>) a ` J \\<inter> (\\<otimes>) b ` J = {}", "from step"], ["proof (chain)\npicking this:\n  finite H\n  x \\<notin> H\n  \\<lbrakk>?a \\<in> H; ?b \\<in> H; ?a \\<noteq> ?b; finite J;\n   H \\<subseteq> carrier G; J \\<subseteq> carrier G;\n   card (H <#> J) = card H * card J\\<rbrakk>\n  \\<Longrightarrow> (\\<otimes>) ?a ` J \\<inter> (\\<otimes>) ?b ` J = {}\n  a \\<in> insert x H\n  b \\<in> insert x H\n  a \\<noteq> b\n  finite J\n  insert x H \\<subseteq> carrier G\n  J \\<subseteq> carrier G\n  card (insert x H <#> J) = card (insert x H) * card J", "have H_c: \"H \\<subseteq> carrier G\""], ["proof (prove)\nusing this:\n  finite H\n  x \\<notin> H\n  \\<lbrakk>?a \\<in> H; ?b \\<in> H; ?a \\<noteq> ?b; finite J;\n   H \\<subseteq> carrier G; J \\<subseteq> carrier G;\n   card (H <#> J) = card H * card J\\<rbrakk>\n  \\<Longrightarrow> (\\<otimes>) ?a ` J \\<inter> (\\<otimes>) ?b ` J = {}\n  a \\<in> insert x H\n  b \\<in> insert x H\n  a \\<noteq> b\n  finite J\n  insert x H \\<subseteq> carrier G\n  J \\<subseteq> carrier G\n  card (insert x H <#> J) = card (insert x H) * card J\n\ngoal (1 subgoal):\n 1. H \\<subseteq> carrier G", "by simp"], ["proof (state)\nthis:\n  H \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>x F a b.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>a b.\n           \\<lbrakk>a \\<in> F; b \\<in> F; a \\<noteq> b; finite J;\n            F \\<subseteq> carrier G; J \\<subseteq> carrier G;\n            card (F <#> J) = card F * card J\\<rbrakk>\n           \\<Longrightarrow> (\\<otimes>) a ` J \\<inter> (\\<otimes>) b ` J =\n                             {};\n        a \\<in> insert x F; b \\<in> insert x F; a \\<noteq> b; finite J;\n        insert x F \\<subseteq> carrier G; J \\<subseteq> carrier G;\n        card (insert x F <#> J) = card (insert x F) * card J\\<rbrakk>\n       \\<Longrightarrow> (\\<otimes>) a ` J \\<inter> (\\<otimes>) b ` J = {}", "from set_mult_card_single_el_eq[of J x]"], ["proof (chain)\npicking this:\n  \\<lbrakk>J \\<subseteq> carrier G; x \\<in> carrier G\\<rbrakk>\n  \\<Longrightarrow> card (x <# J) = card J", "have card_x: \"card ({x} <#> J) = card J\""], ["proof (prove)\nusing this:\n  \\<lbrakk>J \\<subseteq> carrier G; x \\<in> carrier G\\<rbrakk>\n  \\<Longrightarrow> card (x <# J) = card J\n\ngoal (1 subgoal):\n 1. card ({x} <#> J) = card J", "using \\<open>J \\<subseteq> carrier G\\<close> x_c l_coset_eq_set_mult"], ["proof (prove)\nusing this:\n  \\<lbrakk>J \\<subseteq> carrier G; x \\<in> carrier G\\<rbrakk>\n  \\<Longrightarrow> card (x <# J) = card J\n  J \\<subseteq> carrier G\n  x \\<in> carrier G\n  ?x <#\\<^bsub>?G\\<^esub> ?H = {?x} <#>\\<^bsub>?G\\<^esub> ?H\n\ngoal (1 subgoal):\n 1. card ({x} <#> J) = card J", "by metis"], ["proof (state)\nthis:\n  card ({x} <#> J) = card J\n\ngoal (1 subgoal):\n 1. \\<And>x F a b.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>a b.\n           \\<lbrakk>a \\<in> F; b \\<in> F; a \\<noteq> b; finite J;\n            F \\<subseteq> carrier G; J \\<subseteq> carrier G;\n            card (F <#> J) = card F * card J\\<rbrakk>\n           \\<Longrightarrow> (\\<otimes>) a ` J \\<inter> (\\<otimes>) b ` J =\n                             {};\n        a \\<in> insert x F; b \\<in> insert x F; a \\<noteq> b; finite J;\n        insert x F \\<subseteq> carrier G; J \\<subseteq> carrier G;\n        card (insert x F <#> J) = card (insert x F) * card J\\<rbrakk>\n       \\<Longrightarrow> (\\<otimes>) a ` J \\<inter> (\\<otimes>) b ` J = {}", "moreover"], ["proof (state)\nthis:\n  card ({x} <#> J) = card J\n\ngoal (1 subgoal):\n 1. \\<And>x F a b.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>a b.\n           \\<lbrakk>a \\<in> F; b \\<in> F; a \\<noteq> b; finite J;\n            F \\<subseteq> carrier G; J \\<subseteq> carrier G;\n            card (F <#> J) = card F * card J\\<rbrakk>\n           \\<Longrightarrow> (\\<otimes>) a ` J \\<inter> (\\<otimes>) b ` J =\n                             {};\n        a \\<in> insert x F; b \\<in> insert x F; a \\<noteq> b; finite J;\n        insert x F \\<subseteq> carrier G; J \\<subseteq> carrier G;\n        card (insert x F <#> J) = card (insert x F) * card J\\<rbrakk>\n       \\<Longrightarrow> (\\<otimes>) a ` J \\<inter> (\\<otimes>) b ` J = {}", "have ins: \"(insert x H) <#> J = (H <#> J) \\<union> ({x} <#> J)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert x H <#> J = (H <#> J) \\<union> ({x} <#> J)", "using set_mult_def[of G _ J]"], ["proof (prove)\nusing this:\n  ?H <#> J = (\\<Union>h\\<in>?H. \\<Union>k\\<in>J. {h \\<otimes> k})\n\ngoal (1 subgoal):\n 1. insert x H <#> J = (H <#> J) \\<union> ({x} <#> J)", "by auto"], ["proof (state)\nthis:\n  insert x H <#> J = (H <#> J) \\<union> ({x} <#> J)\n\ngoal (1 subgoal):\n 1. \\<And>x F a b.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>a b.\n           \\<lbrakk>a \\<in> F; b \\<in> F; a \\<noteq> b; finite J;\n            F \\<subseteq> carrier G; J \\<subseteq> carrier G;\n            card (F <#> J) = card F * card J\\<rbrakk>\n           \\<Longrightarrow> (\\<otimes>) a ` J \\<inter> (\\<otimes>) b ` J =\n                             {};\n        a \\<in> insert x F; b \\<in> insert x F; a \\<noteq> b; finite J;\n        insert x F \\<subseteq> carrier G; J \\<subseteq> carrier G;\n        card (insert x F <#> J) = card (insert x F) * card J\\<rbrakk>\n       \\<Longrightarrow> (\\<otimes>) a ` J \\<inter> (\\<otimes>) b ` J = {}", "ultimately"], ["proof (chain)\npicking this:\n  card ({x} <#> J) = card J\n  insert x H <#> J = (H <#> J) \\<union> ({x} <#> J)", "have \"card (H <#> J) \\<ge> card H * card J\""], ["proof (prove)\nusing this:\n  card ({x} <#> J) = card J\n  insert x H <#> J = (H <#> J) \\<union> ({x} <#> J)\n\ngoal (1 subgoal):\n 1. card H * card J \\<le> card (H <#> J)", "using card_Un_le[of \"H <#> J\" \"{x} <#> J\"] \\<open>card (insert x H <#> J) = card (insert x H) * card J\\<close>"], ["proof (prove)\nusing this:\n  card ({x} <#> J) = card J\n  insert x H <#> J = (H <#> J) \\<union> ({x} <#> J)\n  card ((H <#> J) \\<union> ({x} <#> J))\n  \\<le> card (H <#> J) + card ({x} <#> J)\n  card (insert x H <#> J) = card (insert x H) * card J\n\ngoal (1 subgoal):\n 1. card H * card J \\<le> card (H <#> J)", "by (simp add: step.hyps(1) step.hyps(2))"], ["proof (state)\nthis:\n  card H * card J \\<le> card (H <#> J)\n\ngoal (1 subgoal):\n 1. \\<And>x F a b.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>a b.\n           \\<lbrakk>a \\<in> F; b \\<in> F; a \\<noteq> b; finite J;\n            F \\<subseteq> carrier G; J \\<subseteq> carrier G;\n            card (F <#> J) = card F * card J\\<rbrakk>\n           \\<Longrightarrow> (\\<otimes>) a ` J \\<inter> (\\<otimes>) b ` J =\n                             {};\n        a \\<in> insert x F; b \\<in> insert x F; a \\<noteq> b; finite J;\n        insert x F \\<subseteq> carrier G; J \\<subseteq> carrier G;\n        card (insert x F <#> J) = card (insert x F) * card J\\<rbrakk>\n       \\<Longrightarrow> (\\<otimes>) a ` J \\<inter> (\\<otimes>) b ` J = {}", "then"], ["proof (chain)\npicking this:\n  card H * card J \\<le> card (H <#> J)", "have card_eq:\"card (H <#> J) = card H * card J\""], ["proof (prove)\nusing this:\n  card H * card J \\<le> card (H <#> J)\n\ngoal (1 subgoal):\n 1. card (H <#> J) = card H * card J", "using set_mult_card_le[of H J] step H_c"], ["proof (prove)\nusing this:\n  card H * card J \\<le> card (H <#> J)\n  \\<lbrakk>finite H; H \\<subseteq> carrier G;\n   J \\<subseteq> carrier G\\<rbrakk>\n  \\<Longrightarrow> card (H <#> J) \\<le> card H * card J\n  finite H\n  x \\<notin> H\n  \\<lbrakk>?a \\<in> H; ?b \\<in> H; ?a \\<noteq> ?b; finite J;\n   H \\<subseteq> carrier G; J \\<subseteq> carrier G;\n   card (H <#> J) = card H * card J\\<rbrakk>\n  \\<Longrightarrow> (\\<otimes>) ?a ` J \\<inter> (\\<otimes>) ?b ` J = {}\n  a \\<in> insert x H\n  b \\<in> insert x H\n  a \\<noteq> b\n  finite J\n  insert x H \\<subseteq> carrier G\n  J \\<subseteq> carrier G\n  card (insert x H <#> J) = card (insert x H) * card J\n  H \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. card (H <#> J) = card H * card J", "by linarith"], ["proof (state)\nthis:\n  card (H <#> J) = card H * card J\n\ngoal (1 subgoal):\n 1. \\<And>x F a b.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>a b.\n           \\<lbrakk>a \\<in> F; b \\<in> F; a \\<noteq> b; finite J;\n            F \\<subseteq> carrier G; J \\<subseteq> carrier G;\n            card (F <#> J) = card F * card J\\<rbrakk>\n           \\<Longrightarrow> (\\<otimes>) a ` J \\<inter> (\\<otimes>) b ` J =\n                             {};\n        a \\<in> insert x F; b \\<in> insert x F; a \\<noteq> b; finite J;\n        insert x F \\<subseteq> carrier G; J \\<subseteq> carrier G;\n        card (insert x F <#> J) = card (insert x F) * card J\\<rbrakk>\n       \\<Longrightarrow> (\\<otimes>) a ` J \\<inter> (\\<otimes>) b ` J = {}", "then"], ["proof (chain)\npicking this:\n  card (H <#> J) = card H * card J", "have ih: \"\\<And>a b. \\<lbrakk>a \\<in> H; b \\<in> H; a \\<noteq> b\\<rbrakk> \\<Longrightarrow> ((\\<otimes>) a ` J) \\<inter> ((\\<otimes>) b ` J) = {}\""], ["proof (prove)\nusing this:\n  card (H <#> J) = card H * card J\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> H; b \\<in> H; a \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<otimes>) a ` J \\<inter> (\\<otimes>) b ` J = {}", "using step H_c"], ["proof (prove)\nusing this:\n  card (H <#> J) = card H * card J\n  finite H\n  x \\<notin> H\n  \\<lbrakk>?a \\<in> H; ?b \\<in> H; ?a \\<noteq> ?b; finite J;\n   H \\<subseteq> carrier G; J \\<subseteq> carrier G;\n   card (H <#> J) = card H * card J\\<rbrakk>\n  \\<Longrightarrow> (\\<otimes>) ?a ` J \\<inter> (\\<otimes>) ?b ` J = {}\n  a \\<in> insert x H\n  b \\<in> insert x H\n  a \\<noteq> b\n  finite J\n  insert x H \\<subseteq> carrier G\n  J \\<subseteq> carrier G\n  card (insert x H <#> J) = card (insert x H) * card J\n  H \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> H; b \\<in> H; a \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<otimes>) a ` J \\<inter> (\\<otimes>) b ` J = {}", "by presburger"], ["proof (state)\nthis:\n  \\<lbrakk>?a \\<in> H; ?b \\<in> H; ?a \\<noteq> ?b\\<rbrakk>\n  \\<Longrightarrow> (\\<otimes>) ?a ` J \\<inter> (\\<otimes>) ?b ` J = {}\n\ngoal (1 subgoal):\n 1. \\<And>x F a b.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>a b.\n           \\<lbrakk>a \\<in> F; b \\<in> F; a \\<noteq> b; finite J;\n            F \\<subseteq> carrier G; J \\<subseteq> carrier G;\n            card (F <#> J) = card F * card J\\<rbrakk>\n           \\<Longrightarrow> (\\<otimes>) a ` J \\<inter> (\\<otimes>) b ` J =\n                             {};\n        a \\<in> insert x F; b \\<in> insert x F; a \\<noteq> b; finite J;\n        insert x F \\<subseteq> carrier G; J \\<subseteq> carrier G;\n        card (insert x F <#> J) = card (insert x F) * card J\\<rbrakk>\n       \\<Longrightarrow> (\\<otimes>) a ` J \\<inter> (\\<otimes>) b ` J = {}", "have \"card (insert x H) * card J = card H * card J + card J\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (insert x H) * card J = card H * card J + card J", "using \\<open>x \\<notin> H\\<close>"], ["proof (prove)\nusing this:\n  x \\<notin> H\n\ngoal (1 subgoal):\n 1. card (insert x H) * card J = card H * card J + card J", "using step"], ["proof (prove)\nusing this:\n  x \\<notin> H\n  finite H\n  x \\<notin> H\n  \\<lbrakk>?a \\<in> H; ?b \\<in> H; ?a \\<noteq> ?b; finite J;\n   H \\<subseteq> carrier G; J \\<subseteq> carrier G;\n   card (H <#> J) = card H * card J\\<rbrakk>\n  \\<Longrightarrow> (\\<otimes>) ?a ` J \\<inter> (\\<otimes>) ?b ` J = {}\n  a \\<in> insert x H\n  b \\<in> insert x H\n  a \\<noteq> b\n  finite J\n  insert x H \\<subseteq> carrier G\n  J \\<subseteq> carrier G\n  card (insert x H <#> J) = card (insert x H) * card J\n\ngoal (1 subgoal):\n 1. card (insert x H) * card J = card H * card J + card J", "by simp"], ["proof (state)\nthis:\n  card (insert x H) * card J = card H * card J + card J\n\ngoal (1 subgoal):\n 1. \\<And>x F a b.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>a b.\n           \\<lbrakk>a \\<in> F; b \\<in> F; a \\<noteq> b; finite J;\n            F \\<subseteq> carrier G; J \\<subseteq> carrier G;\n            card (F <#> J) = card F * card J\\<rbrakk>\n           \\<Longrightarrow> (\\<otimes>) a ` J \\<inter> (\\<otimes>) b ` J =\n                             {};\n        a \\<in> insert x F; b \\<in> insert x F; a \\<noteq> b; finite J;\n        insert x F \\<subseteq> carrier G; J \\<subseteq> carrier G;\n        card (insert x F <#> J) = card (insert x F) * card J\\<rbrakk>\n       \\<Longrightarrow> (\\<otimes>) a ` J \\<inter> (\\<otimes>) b ` J = {}", "then"], ["proof (chain)\npicking this:\n  card (insert x H) * card J = card H * card J + card J", "have \"({x} <#> J) \\<inter> (H <#> J) = {}\""], ["proof (prove)\nusing this:\n  card (insert x H) * card J = card H * card J + card J\n\ngoal (1 subgoal):\n 1. ({x} <#> J) \\<inter> (H <#> J) = {}", "using card_eq card_x ins card_Un_Int[of \"H <#> J\" \"{x} <#> J\"] step set_mult_finite"], ["proof (prove)\nusing this:\n  card (insert x H) * card J = card H * card J + card J\n  card (H <#> J) = card H * card J\n  card ({x} <#> J) = card J\n  insert x H <#> J = (H <#> J) \\<union> ({x} <#> J)\n  \\<lbrakk>finite (H <#> J); finite ({x} <#> J)\\<rbrakk>\n  \\<Longrightarrow> card (H <#> J) + card ({x} <#> J) =\n                    card ((H <#> J) \\<union> ({x} <#> J)) +\n                    card ((H <#> J) \\<inter> ({x} <#> J))\n  finite H\n  x \\<notin> H\n  \\<lbrakk>?a \\<in> H; ?b \\<in> H; ?a \\<noteq> ?b; finite J;\n   H \\<subseteq> carrier G; J \\<subseteq> carrier G;\n   card (H <#> J) = card H * card J\\<rbrakk>\n  \\<Longrightarrow> (\\<otimes>) ?a ` J \\<inter> (\\<otimes>) ?b ` J = {}\n  a \\<in> insert x H\n  b \\<in> insert x H\n  a \\<noteq> b\n  finite J\n  insert x H \\<subseteq> carrier G\n  J \\<subseteq> carrier G\n  card (insert x H <#> J) = card (insert x H) * card J\n  \\<lbrakk>finite ?H; finite ?J; ?H \\<subseteq> carrier G;\n   ?J \\<subseteq> carrier G\\<rbrakk>\n  \\<Longrightarrow> finite (?H <#> ?J)\n\ngoal (1 subgoal):\n 1. ({x} <#> J) \\<inter> (H <#> J) = {}", "by auto"], ["proof (state)\nthis:\n  ({x} <#> J) \\<inter> (H <#> J) = {}\n\ngoal (1 subgoal):\n 1. \\<And>x F a b.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>a b.\n           \\<lbrakk>a \\<in> F; b \\<in> F; a \\<noteq> b; finite J;\n            F \\<subseteq> carrier G; J \\<subseteq> carrier G;\n            card (F <#> J) = card F * card J\\<rbrakk>\n           \\<Longrightarrow> (\\<otimes>) a ` J \\<inter> (\\<otimes>) b ` J =\n                             {};\n        a \\<in> insert x F; b \\<in> insert x F; a \\<noteq> b; finite J;\n        insert x F \\<subseteq> carrier G; J \\<subseteq> carrier G;\n        card (insert x F <#> J) = card (insert x F) * card J\\<rbrakk>\n       \\<Longrightarrow> (\\<otimes>) a ` J \\<inter> (\\<otimes>) b ` J = {}", "then"], ["proof (chain)\npicking this:\n  ({x} <#> J) \\<inter> (H <#> J) = {}", "have \"\\<And>a. a \\<in> H \\<Longrightarrow> (\\<Union>y\\<in>J. {a \\<otimes> y}) \\<inter> (\\<Union>y\\<in>J. {x \\<otimes> y}) = {}\""], ["proof (prove)\nusing this:\n  ({x} <#> J) \\<inter> (H <#> J) = {}\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> H \\<Longrightarrow>\n       (\\<Union>y\\<in>J. {a \\<otimes> y}) \\<inter>\n       (\\<Union>y\\<in>J. {x \\<otimes> y}) =\n       {}", "using set_mult_def[of G _ J]"], ["proof (prove)\nusing this:\n  ({x} <#> J) \\<inter> (H <#> J) = {}\n  ?H <#> J = (\\<Union>h\\<in>?H. \\<Union>k\\<in>J. {h \\<otimes> k})\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> H \\<Longrightarrow>\n       (\\<Union>y\\<in>J. {a \\<otimes> y}) \\<inter>\n       (\\<Union>y\\<in>J. {x \\<otimes> y}) =\n       {}", "by blast"], ["proof (state)\nthis:\n  ?a \\<in> H \\<Longrightarrow>\n  (\\<Union>y\\<in>J. {?a \\<otimes> y}) \\<inter>\n  (\\<Union>y\\<in>J. {x \\<otimes> y}) =\n  {}\n\ngoal (1 subgoal):\n 1. \\<And>x F a b.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>a b.\n           \\<lbrakk>a \\<in> F; b \\<in> F; a \\<noteq> b; finite J;\n            F \\<subseteq> carrier G; J \\<subseteq> carrier G;\n            card (F <#> J) = card F * card J\\<rbrakk>\n           \\<Longrightarrow> (\\<otimes>) a ` J \\<inter> (\\<otimes>) b ` J =\n                             {};\n        a \\<in> insert x F; b \\<in> insert x F; a \\<noteq> b; finite J;\n        insert x F \\<subseteq> carrier G; J \\<subseteq> carrier G;\n        card (insert x F <#> J) = card (insert x F) * card J\\<rbrakk>\n       \\<Longrightarrow> (\\<otimes>) a ` J \\<inter> (\\<otimes>) b ` J = {}", "then"], ["proof (chain)\npicking this:\n  ?a \\<in> H \\<Longrightarrow>\n  (\\<Union>y\\<in>J. {?a \\<otimes> y}) \\<inter>\n  (\\<Union>y\\<in>J. {x \\<otimes> y}) =\n  {}", "have \"\\<And>a b. \\<lbrakk>a \\<in> (insert x H); b \\<in> (insert x H); a \\<noteq> b\\<rbrakk> \\<Longrightarrow> ((\\<otimes>) a ` J) \\<inter> ((\\<otimes>) b ` J) = {}\""], ["proof (prove)\nusing this:\n  ?a \\<in> H \\<Longrightarrow>\n  (\\<Union>y\\<in>J. {?a \\<otimes> y}) \\<inter>\n  (\\<Union>y\\<in>J. {x \\<otimes> y}) =\n  {}\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> insert x H; b \\<in> insert x H;\n        a \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<otimes>) a ` J \\<inter> (\\<otimes>) b ` J = {}", "using \\<open>x \\<notin> H\\<close> ih"], ["proof (prove)\nusing this:\n  ?a \\<in> H \\<Longrightarrow>\n  (\\<Union>y\\<in>J. {?a \\<otimes> y}) \\<inter>\n  (\\<Union>y\\<in>J. {x \\<otimes> y}) =\n  {}\n  x \\<notin> H\n  \\<lbrakk>?a \\<in> H; ?b \\<in> H; ?a \\<noteq> ?b\\<rbrakk>\n  \\<Longrightarrow> (\\<otimes>) ?a ` J \\<inter> (\\<otimes>) ?b ` J = {}\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> insert x H; b \\<in> insert x H;\n        a \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<otimes>) a ` J \\<inter> (\\<otimes>) b ` J = {}", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>?a \\<in> insert x H; ?b \\<in> insert x H; ?a \\<noteq> ?b\\<rbrakk>\n  \\<Longrightarrow> (\\<otimes>) ?a ` J \\<inter> (\\<otimes>) ?b ` J = {}\n\ngoal (1 subgoal):\n 1. \\<And>x F a b.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>a b.\n           \\<lbrakk>a \\<in> F; b \\<in> F; a \\<noteq> b; finite J;\n            F \\<subseteq> carrier G; J \\<subseteq> carrier G;\n            card (F <#> J) = card F * card J\\<rbrakk>\n           \\<Longrightarrow> (\\<otimes>) a ` J \\<inter> (\\<otimes>) b ` J =\n                             {};\n        a \\<in> insert x F; b \\<in> insert x F; a \\<noteq> b; finite J;\n        insert x F \\<subseteq> carrier G; J \\<subseteq> carrier G;\n        card (insert x F <#> J) = card (insert x F) * card J\\<rbrakk>\n       \\<Longrightarrow> (\\<otimes>) a ` J \\<inter> (\\<otimes>) b ` J = {}", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?a \\<in> insert x H; ?b \\<in> insert x H; ?a \\<noteq> ?b\\<rbrakk>\n  \\<Longrightarrow> (\\<otimes>) ?a ` J \\<inter> (\\<otimes>) ?b ` J = {}", "show ?case"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<in> insert x H; ?b \\<in> insert x H; ?a \\<noteq> ?b\\<rbrakk>\n  \\<Longrightarrow> (\\<otimes>) ?a ` J \\<inter> (\\<otimes>) ?b ` J = {}\n\ngoal (1 subgoal):\n 1. (\\<otimes>) a ` J \\<inter> (\\<otimes>) b ` J = {}", "using step"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<in> insert x H; ?b \\<in> insert x H; ?a \\<noteq> ?b\\<rbrakk>\n  \\<Longrightarrow> (\\<otimes>) ?a ` J \\<inter> (\\<otimes>) ?b ` J = {}\n  finite H\n  x \\<notin> H\n  \\<lbrakk>?a \\<in> H; ?b \\<in> H; ?a \\<noteq> ?b; finite J;\n   H \\<subseteq> carrier G; J \\<subseteq> carrier G;\n   card (H <#> J) = card H * card J\\<rbrakk>\n  \\<Longrightarrow> (\\<otimes>) ?a ` J \\<inter> (\\<otimes>) ?b ` J = {}\n  a \\<in> insert x H\n  b \\<in> insert x H\n  a \\<noteq> b\n  finite J\n  insert x H \\<subseteq> carrier G\n  J \\<subseteq> carrier G\n  card (insert x H <#> J) = card (insert x H) * card J\n\ngoal (1 subgoal):\n 1. (\\<otimes>) a ` J \\<inter> (\\<otimes>) b ` J = {}", "by algebra"], ["proof (state)\nthis:\n  (\\<otimes>) a ` J \\<inter> (\\<otimes>) b ` J = {}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in group) set_mult_card_eq_impl_empty_inter':\n  assumes \"finite H\" \"finite J\" \"H \\<subseteq> carrier G\" \"J \\<subseteq> carrier G\" \"card (H <#> J) = card H * card J\"\n  shows \"\\<And>a b. \\<lbrakk>a \\<in> H; b \\<in> H; a \\<noteq> b\\<rbrakk> \\<Longrightarrow> (l_coset G a J) \\<inter> (l_coset G b J) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> H; b \\<in> H; a \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (a <# J) \\<inter> (b <# J) = {}", "unfolding l_coset_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> H; b \\<in> H; a \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Union>h\\<in>J. {a \\<otimes> h}) \\<inter>\n                         (\\<Union>h\\<in>J. {b \\<otimes> h}) =\n                         {}", "using set_mult_card_eq_impl_empty_inter image_def[of \"(\\<otimes>) _\" J] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?H; finite ?J; ?H \\<subseteq> carrier G;\n   ?J \\<subseteq> carrier G; card (?H <#> ?J) = card ?H * card ?J;\n   ?a \\<in> ?H; ?b \\<in> ?H; ?a \\<noteq> ?b\\<rbrakk>\n  \\<Longrightarrow> (\\<otimes>) ?a ` ?J \\<inter> (\\<otimes>) ?b ` ?J = {}\n  (\\<otimes>) ?uu3 ` J = {y. \\<exists>x\\<in>J. y = ?uu3 \\<otimes> x}\n  finite H\n  finite J\n  H \\<subseteq> carrier G\n  J \\<subseteq> carrier G\n  card (H <#> J) = card H * card J\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> H; b \\<in> H; a \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> (\\<Union>h\\<in>J. {a \\<otimes> h}) \\<inter>\n                         (\\<Union>h\\<in>J. {b \\<otimes> h}) =\n                         {}", "by blast"], ["", "lemma (in comm_group) set_mult_comm:\n  assumes \"H \\<subseteq> carrier G\" \"J \\<subseteq> carrier G\"\n  shows \"(H <#> J) = (J <#> H)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H <#> J = J <#> H", "unfolding set_mult_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>h\\<in>H. \\<Union>k\\<in>J. {h \\<otimes> k}) =\n    (\\<Union>h\\<in>J. \\<Union>k\\<in>H. {h \\<otimes> k})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Union>h\\<in>H. \\<Union>k\\<in>J. {h \\<otimes> k}) =\n    (\\<Union>h\\<in>J. \\<Union>k\\<in>H. {h \\<otimes> k})", "have 1: \"\\<And>a b. \\<lbrakk>a \\<in> carrier G; b \\<in> carrier G\\<rbrakk> \\<Longrightarrow> {a \\<otimes> b} = {b \\<otimes> a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> carrier G; b \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> {a \\<otimes> b} = {b \\<otimes> a}", "using m_comm"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> carrier G; ?y \\<in> carrier G\\<rbrakk>\n  \\<Longrightarrow> ?x \\<otimes> ?y = ?y \\<otimes> ?x\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> carrier G; b \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> {a \\<otimes> b} = {b \\<otimes> a}", "by simp"], ["proof (state)\nthis:\n  \\<lbrakk>?a \\<in> carrier G; ?b \\<in> carrier G\\<rbrakk>\n  \\<Longrightarrow> {?a \\<otimes> ?b} = {?b \\<otimes> ?a}\n\ngoal (1 subgoal):\n 1. (\\<Union>h\\<in>H. \\<Union>k\\<in>J. {h \\<otimes> k}) =\n    (\\<Union>h\\<in>J. \\<Union>k\\<in>H. {h \\<otimes> k})", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>?a \\<in> carrier G; ?b \\<in> carrier G\\<rbrakk>\n  \\<Longrightarrow> {?a \\<otimes> ?b} = {?b \\<otimes> ?a}", "have \"\\<And>a b.\\<lbrakk>a \\<in> H; b \\<in> J\\<rbrakk> \\<Longrightarrow> {a \\<otimes> b} = {b \\<otimes> a}\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<in> carrier G; ?b \\<in> carrier G\\<rbrakk>\n  \\<Longrightarrow> {?a \\<otimes> ?b} = {?b \\<otimes> ?a}\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> H; b \\<in> J\\<rbrakk>\n       \\<Longrightarrow> {a \\<otimes> b} = {b \\<otimes> a}", "using assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<in> carrier G; ?b \\<in> carrier G\\<rbrakk>\n  \\<Longrightarrow> {?a \\<otimes> ?b} = {?b \\<otimes> ?a}\n  H \\<subseteq> carrier G\n  J \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> H; b \\<in> J\\<rbrakk>\n       \\<Longrightarrow> {a \\<otimes> b} = {b \\<otimes> a}", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>?a \\<in> H; ?b \\<in> J\\<rbrakk>\n  \\<Longrightarrow> {?a \\<otimes> ?b} = {?b \\<otimes> ?a}\n\ngoal (1 subgoal):\n 1. (\\<Union>h\\<in>H. \\<Union>k\\<in>J. {h \\<otimes> k}) =\n    (\\<Union>h\\<in>J. \\<Union>k\\<in>H. {h \\<otimes> k})", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>?a \\<in> H; ?b \\<in> J\\<rbrakk>\n  \\<Longrightarrow> {?a \\<otimes> ?b} = {?b \\<otimes> ?a}\n\ngoal (1 subgoal):\n 1. (\\<Union>h\\<in>H. \\<Union>k\\<in>J. {h \\<otimes> k}) =\n    (\\<Union>h\\<in>J. \\<Union>k\\<in>H. {h \\<otimes> k})", "have \"\\<And>a b.\\<lbrakk>b \\<in> H; a \\<in> J\\<rbrakk> \\<Longrightarrow> {a \\<otimes> b} = {b \\<otimes> a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>b \\<in> H; a \\<in> J\\<rbrakk>\n       \\<Longrightarrow> {a \\<otimes> b} = {b \\<otimes> a}", "using assms 1"], ["proof (prove)\nusing this:\n  H \\<subseteq> carrier G\n  J \\<subseteq> carrier G\n  \\<lbrakk>?a \\<in> carrier G; ?b \\<in> carrier G\\<rbrakk>\n  \\<Longrightarrow> {?a \\<otimes> ?b} = {?b \\<otimes> ?a}\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>b \\<in> H; a \\<in> J\\<rbrakk>\n       \\<Longrightarrow> {a \\<otimes> b} = {b \\<otimes> a}", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>?b \\<in> H; ?a \\<in> J\\<rbrakk>\n  \\<Longrightarrow> {?a \\<otimes> ?b} = {?b \\<otimes> ?a}\n\ngoal (1 subgoal):\n 1. (\\<Union>h\\<in>H. \\<Union>k\\<in>J. {h \\<otimes> k}) =\n    (\\<Union>h\\<in>J. \\<Union>k\\<in>H. {h \\<otimes> k})", "ultimately"], ["proof (chain)\npicking this:\n  \\<lbrakk>?a \\<in> H; ?b \\<in> J\\<rbrakk>\n  \\<Longrightarrow> {?a \\<otimes> ?b} = {?b \\<otimes> ?a}\n  \\<lbrakk>?b \\<in> H; ?a \\<in> J\\<rbrakk>\n  \\<Longrightarrow> {?a \\<otimes> ?b} = {?b \\<otimes> ?a}", "show \"(\\<Union>h\\<in>H. \\<Union>k\\<in>J. {h \\<otimes> k}) = (\\<Union>k\\<in>J. \\<Union>h\\<in>H. {k \\<otimes> h})\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<in> H; ?b \\<in> J\\<rbrakk>\n  \\<Longrightarrow> {?a \\<otimes> ?b} = {?b \\<otimes> ?a}\n  \\<lbrakk>?b \\<in> H; ?a \\<in> J\\<rbrakk>\n  \\<Longrightarrow> {?a \\<otimes> ?b} = {?b \\<otimes> ?a}\n\ngoal (1 subgoal):\n 1. (\\<Union>h\\<in>H. \\<Union>k\\<in>J. {h \\<otimes> k}) =\n    (\\<Union>k\\<in>J. \\<Union>h\\<in>H. {k \\<otimes> h})", "by fast"], ["proof (state)\nthis:\n  (\\<Union>h\\<in>H. \\<Union>k\\<in>J. {h \\<otimes> k}) =\n  (\\<Union>k\\<in>J. \\<Union>h\\<in>H. {k \\<otimes> h})\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in group) set_mult_one_imp_inc:\n  assumes \"\\<one> \\<in> A\" \"A \\<subseteq> carrier G\" \"B \\<subseteq> carrier G\"\n  shows \"B \\<subseteq> (B <#> A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<subseteq> B <#> A", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> B \\<Longrightarrow> x \\<in> B <#> A", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> B \\<Longrightarrow> x \\<in> B <#> A", "assume \"x \\<in> B\""], ["proof (state)\nthis:\n  x \\<in> B\n\ngoal (1 subgoal):\n 1. \\<And>x. x \\<in> B \\<Longrightarrow> x \\<in> B <#> A", "thus \"x \\<in> (B <#> A)\""], ["proof (prove)\nusing this:\n  x \\<in> B\n\ngoal (1 subgoal):\n 1. x \\<in> B <#> A", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> B\n  \\<one> \\<in> A\n  A \\<subseteq> carrier G\n  B \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. x \\<in> B <#> A", "unfolding set_mult_def"], ["proof (prove)\nusing this:\n  x \\<in> B\n  \\<one> \\<in> A\n  A \\<subseteq> carrier G\n  B \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<Union>h\\<in>B. \\<Union>k\\<in>A. {h \\<otimes> k})", "by force"], ["proof (state)\nthis:\n  x \\<in> B <#> A\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>In all cases, we know that the product of two sets is always contained in the subgroup\ngenerated by them.\\<close>"], ["", "lemma (in group) set_mult_subset_generate:\n  assumes \"A \\<subseteq> carrier G\" \"B \\<subseteq> carrier G\"\n  shows \"A <#> B \\<subseteq> generate G (A \\<union> B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A <#> B \\<subseteq> generate G (A \\<union> B)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A <#> B \\<Longrightarrow> x \\<in> generate G (A \\<union> B)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A <#> B \\<Longrightarrow> x \\<in> generate G (A \\<union> B)", "assume \"x \\<in> A <#> B\""], ["proof (state)\nthis:\n  x \\<in> A <#> B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A <#> B \\<Longrightarrow> x \\<in> generate G (A \\<union> B)", "then"], ["proof (chain)\npicking this:\n  x \\<in> A <#> B", "obtain a b where ab: \"a \\<in> A\" \"b \\<in> B\" \"x = a \\<otimes> b\""], ["proof (prove)\nusing this:\n  x \\<in> A <#> B\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        \\<lbrakk>a \\<in> A; b \\<in> B; x = a \\<otimes> b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding set_mult_def"], ["proof (prove)\nusing this:\n  x \\<in> (\\<Union>h\\<in>A. \\<Union>k\\<in>B. {h \\<otimes> k})\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        \\<lbrakk>a \\<in> A; b \\<in> B; x = a \\<otimes> b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  a \\<in> A\n  b \\<in> B\n  x = a \\<otimes> b\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A <#> B \\<Longrightarrow> x \\<in> generate G (A \\<union> B)", "then"], ["proof (chain)\npicking this:\n  a \\<in> A\n  b \\<in> B\n  x = a \\<otimes> b", "have \"a \\<in> generate G (A \\<union> B)\" \"b \\<in> generate G (A \\<union> B)\""], ["proof (prove)\nusing this:\n  a \\<in> A\n  b \\<in> B\n  x = a \\<otimes> b\n\ngoal (1 subgoal):\n 1. a \\<in> generate G (A \\<union> B) &&& b \\<in> generate G (A \\<union> B)", "using generate.incl[of _ \"A \\<union> B\" G]"], ["proof (prove)\nusing this:\n  a \\<in> A\n  b \\<in> B\n  x = a \\<otimes> b\n  ?h \\<in> A \\<union> B \\<Longrightarrow> ?h \\<in> generate G (A \\<union> B)\n\ngoal (1 subgoal):\n 1. a \\<in> generate G (A \\<union> B) &&& b \\<in> generate G (A \\<union> B)", "by simp+"], ["proof (state)\nthis:\n  a \\<in> generate G (A \\<union> B)\n  b \\<in> generate G (A \\<union> B)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> A <#> B \\<Longrightarrow> x \\<in> generate G (A \\<union> B)", "thus \"x \\<in> generate G (A \\<union> B)\""], ["proof (prove)\nusing this:\n  a \\<in> generate G (A \\<union> B)\n  b \\<in> generate G (A \\<union> B)\n\ngoal (1 subgoal):\n 1. x \\<in> generate G (A \\<union> B)", "using ab generate.eng"], ["proof (prove)\nusing this:\n  a \\<in> generate G (A \\<union> B)\n  b \\<in> generate G (A \\<union> B)\n  a \\<in> A\n  b \\<in> B\n  x = a \\<otimes> b\n  \\<lbrakk>?h1.0 \\<in> generate ?G ?H; ?h2.0 \\<in> generate ?G ?H\\<rbrakk>\n  \\<Longrightarrow> ?h1.0 \\<otimes>\\<^bsub>?G\\<^esub> ?h2.0\n                    \\<in> generate ?G ?H\n\ngoal (1 subgoal):\n 1. x \\<in> generate G (A \\<union> B)", "by metis"], ["proof (state)\nthis:\n  x \\<in> generate G (A \\<union> B)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>In the case of subgroups, the set product is just the subgroup generated by both\nof the subgroups.\\<close>"], ["", "lemma (in comm_group) set_mult_eq_generate_subgroup:\n  assumes \"subgroup H G\" \"subgroup J G\"\n  shows \"generate G (H \\<union> J) = H <#> J\" (is \"?L = ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. generate G (H \\<union> J) = H <#> J", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. generate G (H \\<union> J) \\<subseteq> H <#> J\n 2. H <#> J \\<subseteq> generate G (H \\<union> J)", "show \"?L \\<subseteq> ?R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. generate G (H \\<union> J) \\<subseteq> H <#> J", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> generate G (H \\<union> J) \\<Longrightarrow> x \\<in> H <#> J", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> generate G (H \\<union> J) \\<Longrightarrow> x \\<in> H <#> J", "assume \"x \\<in> ?L\""], ["proof (state)\nthis:\n  x \\<in> generate G (H \\<union> J)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> generate G (H \\<union> J) \\<Longrightarrow> x \\<in> H <#> J", "then"], ["proof (chain)\npicking this:\n  x \\<in> generate G (H \\<union> J)", "show \"x \\<in> ?R\""], ["proof (prove)\nusing this:\n  x \\<in> generate G (H \\<union> J)\n\ngoal (1 subgoal):\n 1. x \\<in> H <#> J", "proof(induction rule: generate.induct)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<one> \\<in> H <#> J\n 2. \\<And>h. h \\<in> H \\<union> J \\<Longrightarrow> h \\<in> H <#> J\n 3. \\<And>h. h \\<in> H \\<union> J \\<Longrightarrow> inv h \\<in> H <#> J\n 4. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (H \\<union> J); h1 \\<in> H <#> J;\n        h2 \\<in> generate G (H \\<union> J); h2 \\<in> H <#> J\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2 \\<in> H <#> J", "case one"], ["proof (state)\nthis:\n  \n\ngoal (4 subgoals):\n 1. \\<one> \\<in> H <#> J\n 2. \\<And>h. h \\<in> H \\<union> J \\<Longrightarrow> h \\<in> H <#> J\n 3. \\<And>h. h \\<in> H \\<union> J \\<Longrightarrow> inv h \\<in> H <#> J\n 4. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (H \\<union> J); h1 \\<in> H <#> J;\n        h2 \\<in> generate G (H \\<union> J); h2 \\<in> H <#> J\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2 \\<in> H <#> J", "have \"\\<one> \\<otimes> \\<one> = \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<one> \\<otimes> \\<one> = \\<one>", "using nat_pow_one[of 2]"], ["proof (prove)\nusing this:\n  \\<one> [^] 2 = \\<one>\n\ngoal (1 subgoal):\n 1. \\<one> \\<otimes> \\<one> = \\<one>", "by simp"], ["proof (state)\nthis:\n  \\<one> \\<otimes> \\<one> = \\<one>\n\ngoal (4 subgoals):\n 1. \\<one> \\<in> H <#> J\n 2. \\<And>h. h \\<in> H \\<union> J \\<Longrightarrow> h \\<in> H <#> J\n 3. \\<And>h. h \\<in> H \\<union> J \\<Longrightarrow> inv h \\<in> H <#> J\n 4. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (H \\<union> J); h1 \\<in> H <#> J;\n        h2 \\<in> generate G (H \\<union> J); h2 \\<in> H <#> J\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2 \\<in> H <#> J", "thus ?case"], ["proof (prove)\nusing this:\n  \\<one> \\<otimes> \\<one> = \\<one>\n\ngoal (1 subgoal):\n 1. \\<one> \\<in> H <#> J", "using assms subgroup.one_closed[OF assms(1)]\n              subgroup.one_closed[OF assms(2)] set_mult_def[of G H J]"], ["proof (prove)\nusing this:\n  \\<one> \\<otimes> \\<one> = \\<one>\n  subgroup H G\n  subgroup J G\n  \\<one> \\<in> H\n  \\<one> \\<in> J\n  H <#> J = (\\<Union>h\\<in>H. \\<Union>k\\<in>J. {h \\<otimes> k})\n\ngoal (1 subgoal):\n 1. \\<one> \\<in> H <#> J", "by fastforce"], ["proof (state)\nthis:\n  \\<one> \\<in> H <#> J\n\ngoal (3 subgoals):\n 1. \\<And>h. h \\<in> H \\<union> J \\<Longrightarrow> h \\<in> H <#> J\n 2. \\<And>h. h \\<in> H \\<union> J \\<Longrightarrow> inv h \\<in> H <#> J\n 3. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (H \\<union> J); h1 \\<in> H <#> J;\n        h2 \\<in> generate G (H \\<union> J); h2 \\<in> H <#> J\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2 \\<in> H <#> J", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>h. h \\<in> H \\<union> J \\<Longrightarrow> h \\<in> H <#> J\n 2. \\<And>h. h \\<in> H \\<union> J \\<Longrightarrow> inv h \\<in> H <#> J\n 3. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (H \\<union> J); h1 \\<in> H <#> J;\n        h2 \\<in> generate G (H \\<union> J); h2 \\<in> H <#> J\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2 \\<in> H <#> J", "case (incl x)"], ["proof (state)\nthis:\n  x \\<in> H \\<union> J\n\ngoal (3 subgoals):\n 1. \\<And>h. h \\<in> H \\<union> J \\<Longrightarrow> h \\<in> H <#> J\n 2. \\<And>h. h \\<in> H \\<union> J \\<Longrightarrow> inv h \\<in> H <#> J\n 3. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (H \\<union> J); h1 \\<in> H <#> J;\n        h2 \\<in> generate G (H \\<union> J); h2 \\<in> H <#> J\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2 \\<in> H <#> J", "have H1: \"\\<one> \\<in> H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<one> \\<in> H", "using assms subgroup.one_closed"], ["proof (prove)\nusing this:\n  subgroup H G\n  subgroup J G\n  subgroup ?H ?G \\<Longrightarrow> \\<one>\\<^bsub>?G\\<^esub> \\<in> ?H\n\ngoal (1 subgoal):\n 1. \\<one> \\<in> H", "by auto"], ["proof (state)\nthis:\n  \\<one> \\<in> H\n\ngoal (3 subgoals):\n 1. \\<And>h. h \\<in> H \\<union> J \\<Longrightarrow> h \\<in> H <#> J\n 2. \\<And>h. h \\<in> H \\<union> J \\<Longrightarrow> inv h \\<in> H <#> J\n 3. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (H \\<union> J); h1 \\<in> H <#> J;\n        h2 \\<in> generate G (H \\<union> J); h2 \\<in> H <#> J\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2 \\<in> H <#> J", "have J1: \"\\<one> \\<in> J\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<one> \\<in> J", "using assms subgroup.one_closed"], ["proof (prove)\nusing this:\n  subgroup H G\n  subgroup J G\n  subgroup ?H ?G \\<Longrightarrow> \\<one>\\<^bsub>?G\\<^esub> \\<in> ?H\n\ngoal (1 subgoal):\n 1. \\<one> \\<in> J", "by auto"], ["proof (state)\nthis:\n  \\<one> \\<in> J\n\ngoal (3 subgoals):\n 1. \\<And>h. h \\<in> H \\<union> J \\<Longrightarrow> h \\<in> H <#> J\n 2. \\<And>h. h \\<in> H \\<union> J \\<Longrightarrow> inv h \\<in> H <#> J\n 3. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (H \\<union> J); h1 \\<in> H <#> J;\n        h2 \\<in> generate G (H \\<union> J); h2 \\<in> H <#> J\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2 \\<in> H <#> J", "have lx: \"x \\<otimes> \\<one> = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<otimes> \\<one> = x", "using r_one[of x] incl subgroup.subset assms"], ["proof (prove)\nusing this:\n  x \\<in> carrier G \\<Longrightarrow> x \\<otimes> \\<one> = x\n  x \\<in> H \\<union> J\n  subgroup ?H ?G \\<Longrightarrow> ?H \\<subseteq> carrier ?G\n  subgroup H G\n  subgroup J G\n\ngoal (1 subgoal):\n 1. x \\<otimes> \\<one> = x", "by blast"], ["proof (state)\nthis:\n  x \\<otimes> \\<one> = x\n\ngoal (3 subgoals):\n 1. \\<And>h. h \\<in> H \\<union> J \\<Longrightarrow> h \\<in> H <#> J\n 2. \\<And>h. h \\<in> H \\<union> J \\<Longrightarrow> inv h \\<in> H <#> J\n 3. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (H \\<union> J); h1 \\<in> H <#> J;\n        h2 \\<in> generate G (H \\<union> J); h2 \\<in> H <#> J\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2 \\<in> H <#> J", "have rx: \"\\<one> \\<otimes> x = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<one> \\<otimes> x = x", "using l_one[of x] incl subgroup.subset assms"], ["proof (prove)\nusing this:\n  x \\<in> carrier G \\<Longrightarrow> \\<one> \\<otimes> x = x\n  x \\<in> H \\<union> J\n  subgroup ?H ?G \\<Longrightarrow> ?H \\<subseteq> carrier ?G\n  subgroup H G\n  subgroup J G\n\ngoal (1 subgoal):\n 1. \\<one> \\<otimes> x = x", "by blast"], ["proof (state)\nthis:\n  \\<one> \\<otimes> x = x\n\ngoal (3 subgoals):\n 1. \\<And>h. h \\<in> H \\<union> J \\<Longrightarrow> h \\<in> H <#> J\n 2. \\<And>h. h \\<in> H \\<union> J \\<Longrightarrow> inv h \\<in> H <#> J\n 3. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (H \\<union> J); h1 \\<in> H <#> J;\n        h2 \\<in> generate G (H \\<union> J); h2 \\<in> H <#> J\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2 \\<in> H <#> J", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> H <#> J", "proof (cases \"x \\<in> H\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<in> H \\<Longrightarrow> x \\<in> H <#> J\n 2. x \\<notin> H \\<Longrightarrow> x \\<in> H <#> J", "case True"], ["proof (state)\nthis:\n  x \\<in> H\n\ngoal (2 subgoals):\n 1. x \\<in> H \\<Longrightarrow> x \\<in> H <#> J\n 2. x \\<notin> H \\<Longrightarrow> x \\<in> H <#> J", "then"], ["proof (chain)\npicking this:\n  x \\<in> H", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> H\n\ngoal (1 subgoal):\n 1. x \\<in> H <#> J", "using set_mult_def J1 lx"], ["proof (prove)\nusing this:\n  x \\<in> H\n  ?H <#>\\<^bsub>?G\\<^esub> ?K =\n  (\\<Union>h\\<in>?H. \\<Union>k\\<in>?K. {h \\<otimes>\\<^bsub>?G\\<^esub> k})\n  \\<one> \\<in> J\n  x \\<otimes> \\<one> = x\n\ngoal (1 subgoal):\n 1. x \\<in> H <#> J", "by fastforce"], ["proof (state)\nthis:\n  x \\<in> H <#> J\n\ngoal (1 subgoal):\n 1. x \\<notin> H \\<Longrightarrow> x \\<in> H <#> J", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<notin> H \\<Longrightarrow> x \\<in> H <#> J", "case False"], ["proof (state)\nthis:\n  x \\<notin> H\n\ngoal (1 subgoal):\n 1. x \\<notin> H \\<Longrightarrow> x \\<in> H <#> J", "then"], ["proof (chain)\npicking this:\n  x \\<notin> H", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<notin> H\n\ngoal (1 subgoal):\n 1. x \\<in> H <#> J", "using set_mult_def H1 rx incl"], ["proof (prove)\nusing this:\n  x \\<notin> H\n  ?H <#>\\<^bsub>?G\\<^esub> ?K =\n  (\\<Union>h\\<in>?H. \\<Union>k\\<in>?K. {h \\<otimes>\\<^bsub>?G\\<^esub> k})\n  \\<one> \\<in> H\n  \\<one> \\<otimes> x = x\n  x \\<in> H \\<union> J\n\ngoal (1 subgoal):\n 1. x \\<in> H <#> J", "by fastforce"], ["proof (state)\nthis:\n  x \\<in> H <#> J\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> H <#> J\n\ngoal (2 subgoals):\n 1. \\<And>h. h \\<in> H \\<union> J \\<Longrightarrow> inv h \\<in> H <#> J\n 2. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (H \\<union> J); h1 \\<in> H <#> J;\n        h2 \\<in> generate G (H \\<union> J); h2 \\<in> H <#> J\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2 \\<in> H <#> J", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>h. h \\<in> H \\<union> J \\<Longrightarrow> inv h \\<in> H <#> J\n 2. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (H \\<union> J); h1 \\<in> H <#> J;\n        h2 \\<in> generate G (H \\<union> J); h2 \\<in> H <#> J\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2 \\<in> H <#> J", "case (inv h)"], ["proof (state)\nthis:\n  h \\<in> H \\<union> J\n\ngoal (2 subgoals):\n 1. \\<And>h. h \\<in> H \\<union> J \\<Longrightarrow> inv h \\<in> H <#> J\n 2. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (H \\<union> J); h1 \\<in> H <#> J;\n        h2 \\<in> generate G (H \\<union> J); h2 \\<in> H <#> J\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2 \\<in> H <#> J", "then"], ["proof (chain)\npicking this:\n  h \\<in> H \\<union> J", "have inv_in:\"(inv h) \\<in> H \\<union> J\" (is \"?iv \\<in> H \\<union> J\")"], ["proof (prove)\nusing this:\n  h \\<in> H \\<union> J\n\ngoal (1 subgoal):\n 1. inv h \\<in> H \\<union> J", "using assms subgroup.m_inv_closed[of _ G h]"], ["proof (prove)\nusing this:\n  h \\<in> H \\<union> J\n  subgroup H G\n  subgroup J G\n  \\<lbrakk>subgroup ?H G; h \\<in> ?H\\<rbrakk>\n  \\<Longrightarrow> inv h \\<in> ?H\n\ngoal (1 subgoal):\n 1. inv h \\<in> H \\<union> J", "by (cases \"h \\<in> H\"; blast)"], ["proof (state)\nthis:\n  inv h \\<in> H \\<union> J\n\ngoal (2 subgoals):\n 1. \\<And>h. h \\<in> H \\<union> J \\<Longrightarrow> inv h \\<in> H <#> J\n 2. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (H \\<union> J); h1 \\<in> H <#> J;\n        h2 \\<in> generate G (H \\<union> J); h2 \\<in> H <#> J\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2 \\<in> H <#> J", "have H1: \"\\<one> \\<in> H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<one> \\<in> H", "using assms subgroup.one_closed"], ["proof (prove)\nusing this:\n  subgroup H G\n  subgroup J G\n  subgroup ?H ?G \\<Longrightarrow> \\<one>\\<^bsub>?G\\<^esub> \\<in> ?H\n\ngoal (1 subgoal):\n 1. \\<one> \\<in> H", "by auto"], ["proof (state)\nthis:\n  \\<one> \\<in> H\n\ngoal (2 subgoals):\n 1. \\<And>h. h \\<in> H \\<union> J \\<Longrightarrow> inv h \\<in> H <#> J\n 2. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (H \\<union> J); h1 \\<in> H <#> J;\n        h2 \\<in> generate G (H \\<union> J); h2 \\<in> H <#> J\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2 \\<in> H <#> J", "have J1: \"\\<one> \\<in> J\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<one> \\<in> J", "using assms subgroup.one_closed"], ["proof (prove)\nusing this:\n  subgroup H G\n  subgroup J G\n  subgroup ?H ?G \\<Longrightarrow> \\<one>\\<^bsub>?G\\<^esub> \\<in> ?H\n\ngoal (1 subgoal):\n 1. \\<one> \\<in> J", "by auto"], ["proof (state)\nthis:\n  \\<one> \\<in> J\n\ngoal (2 subgoals):\n 1. \\<And>h. h \\<in> H \\<union> J \\<Longrightarrow> inv h \\<in> H <#> J\n 2. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (H \\<union> J); h1 \\<in> H <#> J;\n        h2 \\<in> generate G (H \\<union> J); h2 \\<in> H <#> J\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2 \\<in> H <#> J", "have lx: \"?iv \\<otimes> \\<one> = ?iv\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv h \\<otimes> \\<one> = inv h", "using r_one[of \"?iv\"] subgroup.subset inv_in assms"], ["proof (prove)\nusing this:\n  inv h \\<in> carrier G \\<Longrightarrow> inv h \\<otimes> \\<one> = inv h\n  subgroup ?H ?G \\<Longrightarrow> ?H \\<subseteq> carrier ?G\n  inv h \\<in> H \\<union> J\n  subgroup H G\n  subgroup J G\n\ngoal (1 subgoal):\n 1. inv h \\<otimes> \\<one> = inv h", "by blast"], ["proof (state)\nthis:\n  inv h \\<otimes> \\<one> = inv h\n\ngoal (2 subgoals):\n 1. \\<And>h. h \\<in> H \\<union> J \\<Longrightarrow> inv h \\<in> H <#> J\n 2. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (H \\<union> J); h1 \\<in> H <#> J;\n        h2 \\<in> generate G (H \\<union> J); h2 \\<in> H <#> J\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2 \\<in> H <#> J", "have rx: \"\\<one> \\<otimes> ?iv = ?iv\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<one> \\<otimes> inv h = inv h", "using l_one[of \"?iv\"] incl subgroup.subset inv_in assms"], ["proof (prove)\nusing this:\n  inv h \\<in> carrier G \\<Longrightarrow> \\<one> \\<otimes> inv h = inv h\n  ?h \\<in> ?H \\<Longrightarrow> ?h \\<in> generate_field ?R ?H\n  subgroup ?H ?G \\<Longrightarrow> ?H \\<subseteq> carrier ?G\n  inv h \\<in> H \\<union> J\n  subgroup H G\n  subgroup J G\n\ngoal (1 subgoal):\n 1. \\<one> \\<otimes> inv h = inv h", "by blast"], ["proof (state)\nthis:\n  \\<one> \\<otimes> inv h = inv h\n\ngoal (2 subgoals):\n 1. \\<And>h. h \\<in> H \\<union> J \\<Longrightarrow> inv h \\<in> H <#> J\n 2. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (H \\<union> J); h1 \\<in> H <#> J;\n        h2 \\<in> generate G (H \\<union> J); h2 \\<in> H <#> J\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2 \\<in> H <#> J", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. inv h \\<in> H <#> J", "proof (cases \"?iv \\<in> H\")"], ["proof (state)\ngoal (2 subgoals):\n 1. inv h \\<in> H \\<Longrightarrow> inv h \\<in> H <#> J\n 2. inv h \\<notin> H \\<Longrightarrow> inv h \\<in> H <#> J", "case True"], ["proof (state)\nthis:\n  inv h \\<in> H\n\ngoal (2 subgoals):\n 1. inv h \\<in> H \\<Longrightarrow> inv h \\<in> H <#> J\n 2. inv h \\<notin> H \\<Longrightarrow> inv h \\<in> H <#> J", "then"], ["proof (chain)\npicking this:\n  inv h \\<in> H", "show ?thesis"], ["proof (prove)\nusing this:\n  inv h \\<in> H\n\ngoal (1 subgoal):\n 1. inv h \\<in> H <#> J", "using set_mult_def[of G H J] J1 lx"], ["proof (prove)\nusing this:\n  inv h \\<in> H\n  H <#> J = (\\<Union>h\\<in>H. \\<Union>k\\<in>J. {h \\<otimes> k})\n  \\<one> \\<in> J\n  inv h \\<otimes> \\<one> = inv h\n\ngoal (1 subgoal):\n 1. inv h \\<in> H <#> J", "by fastforce"], ["proof (state)\nthis:\n  inv h \\<in> H <#> J\n\ngoal (1 subgoal):\n 1. inv h \\<notin> H \\<Longrightarrow> inv h \\<in> H <#> J", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. inv h \\<notin> H \\<Longrightarrow> inv h \\<in> H <#> J", "case False"], ["proof (state)\nthis:\n  inv h \\<notin> H\n\ngoal (1 subgoal):\n 1. inv h \\<notin> H \\<Longrightarrow> inv h \\<in> H <#> J", "then"], ["proof (chain)\npicking this:\n  inv h \\<notin> H", "show ?thesis"], ["proof (prove)\nusing this:\n  inv h \\<notin> H\n\ngoal (1 subgoal):\n 1. inv h \\<in> H <#> J", "using set_mult_def[of G H J] H1 rx inv_in"], ["proof (prove)\nusing this:\n  inv h \\<notin> H\n  H <#> J = (\\<Union>h\\<in>H. \\<Union>k\\<in>J. {h \\<otimes> k})\n  \\<one> \\<in> H\n  \\<one> \\<otimes> inv h = inv h\n  inv h \\<in> H \\<union> J\n\ngoal (1 subgoal):\n 1. inv h \\<in> H <#> J", "by fastforce"], ["proof (state)\nthis:\n  inv h \\<in> H <#> J\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inv h \\<in> H <#> J\n\ngoal (1 subgoal):\n 1. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (H \\<union> J); h1 \\<in> H <#> J;\n        h2 \\<in> generate G (H \\<union> J); h2 \\<in> H <#> J\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2 \\<in> H <#> J", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (H \\<union> J); h1 \\<in> H <#> J;\n        h2 \\<in> generate G (H \\<union> J); h2 \\<in> H <#> J\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2 \\<in> H <#> J", "case (eng h g)"], ["proof (state)\nthis:\n  h \\<in> generate G (H \\<union> J)\n  g \\<in> generate G (H \\<union> J)\n  h \\<in> H <#> J\n  g \\<in> H <#> J\n\ngoal (1 subgoal):\n 1. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (H \\<union> J); h1 \\<in> H <#> J;\n        h2 \\<in> generate G (H \\<union> J); h2 \\<in> H <#> J\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2 \\<in> H <#> J", "from eng(3)"], ["proof (chain)\npicking this:\n  h \\<in> H <#> J", "obtain a b where aH: \"a \\<in> H\" and bJ: \"b \\<in> J\" and h_def: \"h = a \\<otimes> b\""], ["proof (prove)\nusing this:\n  h \\<in> H <#> J\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        \\<lbrakk>a \\<in> H; b \\<in> J; h = a \\<otimes> b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using set_mult_def[of G H J]"], ["proof (prove)\nusing this:\n  h \\<in> H <#> J\n  H <#> J = (\\<Union>h\\<in>H. \\<Union>k\\<in>J. {h \\<otimes> k})\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        \\<lbrakk>a \\<in> H; b \\<in> J; h = a \\<otimes> b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fast"], ["proof (state)\nthis:\n  a \\<in> H\n  b \\<in> J\n  h = a \\<otimes> b\n\ngoal (1 subgoal):\n 1. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (H \\<union> J); h1 \\<in> H <#> J;\n        h2 \\<in> generate G (H \\<union> J); h2 \\<in> H <#> J\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2 \\<in> H <#> J", "have a_carr: \"a \\<in> carrier G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> carrier G", "by (metis subgroup.mem_carrier assms(1) aH)"], ["proof (state)\nthis:\n  a \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (H \\<union> J); h1 \\<in> H <#> J;\n        h2 \\<in> generate G (H \\<union> J); h2 \\<in> H <#> J\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2 \\<in> H <#> J", "have b_carr: \"b \\<in> carrier G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<in> carrier G", "by (metis subgroup.mem_carrier assms(2) bJ)"], ["proof (state)\nthis:\n  b \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (H \\<union> J); h1 \\<in> H <#> J;\n        h2 \\<in> generate G (H \\<union> J); h2 \\<in> H <#> J\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2 \\<in> H <#> J", "from eng(4)"], ["proof (chain)\npicking this:\n  g \\<in> H <#> J", "obtain c d where cH: \"c \\<in> H\" and dJ: \"d \\<in> J\" and g_def: \"g = c \\<otimes> d\""], ["proof (prove)\nusing this:\n  g \\<in> H <#> J\n\ngoal (1 subgoal):\n 1. (\\<And>c d.\n        \\<lbrakk>c \\<in> H; d \\<in> J; g = c \\<otimes> d\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using set_mult_def[of G H J]"], ["proof (prove)\nusing this:\n  g \\<in> H <#> J\n  H <#> J = (\\<Union>h\\<in>H. \\<Union>k\\<in>J. {h \\<otimes> k})\n\ngoal (1 subgoal):\n 1. (\\<And>c d.\n        \\<lbrakk>c \\<in> H; d \\<in> J; g = c \\<otimes> d\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fast"], ["proof (state)\nthis:\n  c \\<in> H\n  d \\<in> J\n  g = c \\<otimes> d\n\ngoal (1 subgoal):\n 1. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (H \\<union> J); h1 \\<in> H <#> J;\n        h2 \\<in> generate G (H \\<union> J); h2 \\<in> H <#> J\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2 \\<in> H <#> J", "have c_carr: \"c \\<in> carrier G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<in> carrier G", "by (metis subgroup.mem_carrier assms(1) cH)"], ["proof (state)\nthis:\n  c \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (H \\<union> J); h1 \\<in> H <#> J;\n        h2 \\<in> generate G (H \\<union> J); h2 \\<in> H <#> J\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2 \\<in> H <#> J", "have d_carr: \"d \\<in> carrier G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d \\<in> carrier G", "by (metis subgroup.mem_carrier assms(2) dJ)"], ["proof (state)\nthis:\n  d \\<in> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (H \\<union> J); h1 \\<in> H <#> J;\n        h2 \\<in> generate G (H \\<union> J); h2 \\<in> H <#> J\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2 \\<in> H <#> J", "then"], ["proof (chain)\npicking this:\n  d \\<in> carrier G", "have \"h \\<otimes> g = (a \\<otimes> c) \\<otimes> (b \\<otimes> d)\""], ["proof (prove)\nusing this:\n  d \\<in> carrier G\n\ngoal (1 subgoal):\n 1. h \\<otimes> g = a \\<otimes> c \\<otimes> (b \\<otimes> d)", "using a_carr b_carr c_carr d_carr g_def h_def m_assoc m_comm"], ["proof (prove)\nusing this:\n  d \\<in> carrier G\n  a \\<in> carrier G\n  b \\<in> carrier G\n  c \\<in> carrier G\n  d \\<in> carrier G\n  g = c \\<otimes> d\n  h = a \\<otimes> b\n  \\<lbrakk>?x \\<in> carrier G; ?y \\<in> carrier G;\n   ?z \\<in> carrier G\\<rbrakk>\n  \\<Longrightarrow> ?x \\<otimes> ?y \\<otimes> ?z =\n                    ?x \\<otimes> (?y \\<otimes> ?z)\n  \\<lbrakk>?x \\<in> carrier G; ?y \\<in> carrier G\\<rbrakk>\n  \\<Longrightarrow> ?x \\<otimes> ?y = ?y \\<otimes> ?x\n\ngoal (1 subgoal):\n 1. h \\<otimes> g = a \\<otimes> c \\<otimes> (b \\<otimes> d)", "by force"], ["proof (state)\nthis:\n  h \\<otimes> g = a \\<otimes> c \\<otimes> (b \\<otimes> d)\n\ngoal (1 subgoal):\n 1. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (H \\<union> J); h1 \\<in> H <#> J;\n        h2 \\<in> generate G (H \\<union> J); h2 \\<in> H <#> J\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2 \\<in> H <#> J", "moreover"], ["proof (state)\nthis:\n  h \\<otimes> g = a \\<otimes> c \\<otimes> (b \\<otimes> d)\n\ngoal (1 subgoal):\n 1. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (H \\<union> J); h1 \\<in> H <#> J;\n        h2 \\<in> generate G (H \\<union> J); h2 \\<in> H <#> J\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2 \\<in> H <#> J", "have \"a \\<otimes> c \\<in> H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<otimes> c \\<in> H", "using assms(1) aH cH subgroup.m_closed"], ["proof (prove)\nusing this:\n  subgroup H G\n  a \\<in> H\n  c \\<in> H\n  \\<lbrakk>subgroup ?H ?G; ?x \\<in> ?H; ?y \\<in> ?H\\<rbrakk>\n  \\<Longrightarrow> ?x \\<otimes>\\<^bsub>?G\\<^esub> ?y \\<in> ?H\n\ngoal (1 subgoal):\n 1. a \\<otimes> c \\<in> H", "by fast"], ["proof (state)\nthis:\n  a \\<otimes> c \\<in> H\n\ngoal (1 subgoal):\n 1. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (H \\<union> J); h1 \\<in> H <#> J;\n        h2 \\<in> generate G (H \\<union> J); h2 \\<in> H <#> J\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2 \\<in> H <#> J", "moreover"], ["proof (state)\nthis:\n  a \\<otimes> c \\<in> H\n\ngoal (1 subgoal):\n 1. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (H \\<union> J); h1 \\<in> H <#> J;\n        h2 \\<in> generate G (H \\<union> J); h2 \\<in> H <#> J\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2 \\<in> H <#> J", "have \"b \\<otimes> d \\<in> J\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<otimes> d \\<in> J", "using assms(2) bJ dJ subgroup.m_closed"], ["proof (prove)\nusing this:\n  subgroup J G\n  b \\<in> J\n  d \\<in> J\n  \\<lbrakk>subgroup ?H ?G; ?x \\<in> ?H; ?y \\<in> ?H\\<rbrakk>\n  \\<Longrightarrow> ?x \\<otimes>\\<^bsub>?G\\<^esub> ?y \\<in> ?H\n\ngoal (1 subgoal):\n 1. b \\<otimes> d \\<in> J", "by fast"], ["proof (state)\nthis:\n  b \\<otimes> d \\<in> J\n\ngoal (1 subgoal):\n 1. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (H \\<union> J); h1 \\<in> H <#> J;\n        h2 \\<in> generate G (H \\<union> J); h2 \\<in> H <#> J\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2 \\<in> H <#> J", "ultimately"], ["proof (chain)\npicking this:\n  h \\<otimes> g = a \\<otimes> c \\<otimes> (b \\<otimes> d)\n  a \\<otimes> c \\<in> H\n  b \\<otimes> d \\<in> J", "show ?case"], ["proof (prove)\nusing this:\n  h \\<otimes> g = a \\<otimes> c \\<otimes> (b \\<otimes> d)\n  a \\<otimes> c \\<in> H\n  b \\<otimes> d \\<in> J\n\ngoal (1 subgoal):\n 1. h \\<otimes> g \\<in> H <#> J", "using set_mult_def"], ["proof (prove)\nusing this:\n  h \\<otimes> g = a \\<otimes> c \\<otimes> (b \\<otimes> d)\n  a \\<otimes> c \\<in> H\n  b \\<otimes> d \\<in> J\n  ?H <#>\\<^bsub>?G\\<^esub> ?K =\n  (\\<Union>h\\<in>?H. \\<Union>k\\<in>?K. {h \\<otimes>\\<^bsub>?G\\<^esub> k})\n\ngoal (1 subgoal):\n 1. h \\<otimes> g \\<in> H <#> J", "by fast"], ["proof (state)\nthis:\n  h \\<otimes> g \\<in> H <#> J\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> H <#> J\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  generate G (H \\<union> J) \\<subseteq> H <#> J\n\ngoal (1 subgoal):\n 1. H <#> J \\<subseteq> generate G (H \\<union> J)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. H <#> J \\<subseteq> generate G (H \\<union> J)", "show \"?R \\<subseteq> ?L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. H <#> J \\<subseteq> generate G (H \\<union> J)", "using set_mult_subset_generate[of H J] subgroup.subset assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>H \\<subseteq> carrier G; J \\<subseteq> carrier G\\<rbrakk>\n  \\<Longrightarrow> H <#> J \\<subseteq> generate G (H \\<union> J)\n  subgroup ?H ?G \\<Longrightarrow> ?H \\<subseteq> carrier ?G\n  subgroup H G\n  subgroup J G\n\ngoal (1 subgoal):\n 1. H <#> J \\<subseteq> generate G (H \\<union> J)", "by blast"], ["proof (state)\nthis:\n  H <#> J \\<subseteq> generate G (H \\<union> J)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}