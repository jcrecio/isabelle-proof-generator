{"file_name": "/home/qj213/afp-2021-10-22/thys/Finitely_Generated_Abelian_Groups/DirProds.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Finitely_Generated_Abelian_Groups", "problem_names": ["lemma DirProds_empty:\n  \"carrier (DirProds f {}) = {\\<one>\\<^bsub>DirProds f {}\\<^esub>}\"", "lemma DirProds_order:\n  assumes \"finite I\"\n  shows \"order (DirProds G I) = prod (order \\<circ> G) I\"", "lemma DirProds_in_carrI:\n  assumes \"\\<And>i. i \\<in> I \\<Longrightarrow> x i \\<in> carrier (G i)\" \"\\<And>i. i \\<notin> I \\<Longrightarrow> x i = undefined\"\n  shows \"x \\<in> carrier (DirProds G I)\"", "lemma comp_in_carr:\n  assumes \"x \\<in> carrier (DirProds G I)\" \"i \\<in> I\"\n  shows \"x i \\<in> carrier (G i)\"", "lemma comp_mult:\n  assumes \"i \\<in> I\"\n  shows \"(x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y) i = (x i \\<otimes>\\<^bsub>G i\\<^esub> y i)\"", "lemma comp_exp_nat:\n  fixes k::nat\n  assumes \"i \\<in> I\"\n  shows \"(x [^]\\<^bsub>DirProds G I\\<^esub> k) i = x i [^]\\<^bsub>G i\\<^esub> k\"", "lemma DirProds_m_closed:\n  assumes \"x \\<in> carrier (DirProds G I)\" \"y \\<in> carrier (DirProds G I)\" \"\\<And>i. i \\<in> I \\<Longrightarrow> group (G i)\"\n  shows \"x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y \\<in> carrier (DirProds G I)\"", "lemma partial_restr:\n  assumes \"a \\<in> carrier (DirProds G I)\" \"J \\<subseteq> I\"\n  shows \"restrict a J \\<in> carrier (DirProds G J)\"", "lemma eq_parts_imp_eq:\n  assumes \"a \\<in> carrier (DirProds G I)\" \"b \\<in> carrier (DirProds G I)\" \"\\<And>i. i \\<in> I \\<Longrightarrow> a i = b i\"\n  shows \"a = b\"", "lemma mult_restr:\n  assumes \"a \\<in> carrier (DirProds G I)\" \"b \\<in> carrier (DirProds G I)\" \"J \\<subseteq> I\"\n  shows \"a \\<otimes>\\<^bsub>DirProds G J\\<^esub> b = restrict (a \\<otimes>\\<^bsub>DirProds G I\\<^esub> b) J\"", "lemma DirProds_one:\n  assumes \"x \\<in> carrier (DirProds G I)\"\n  shows \"(\\<forall>i \\<in> I. x i = \\<one>\\<^bsub>G i\\<^esub>) \\<longleftrightarrow> x = \\<one>\\<^bsub>DirProds G I\\<^esub>\"", "lemma DirProds_one':\n  \"i\\<in>I \\<Longrightarrow> \\<one>\\<^bsub>DirProds G I\\<^esub> i = \\<one>\\<^bsub>G i\\<^esub>\"", "lemma DirProds_one'':\n  \"\\<one>\\<^bsub>DirProds G I\\<^esub> = restrict (\\<lambda>i. \\<one>\\<^bsub>G i\\<^esub>) I\"", "lemma DirProds_mult:\n  \"(\\<otimes>\\<^bsub>DirProds G I\\<^esub>) = (\\<lambda>x y. restrict (\\<lambda>i. x i \\<otimes>\\<^bsub>G i\\<^esub> y i) I)\"", "lemma DirProds_one_iso: \"(\\<lambda>x. x G) \\<in> iso (DirProds f {G}) (f G)\"", "lemma DirProds_one_cong: \"(DirProds f {G}) \\<cong> (f G)\"", "lemma DirProds_one_iso_sym: \"(\\<lambda>x. (\\<lambda>_\\<in>{G}. x)) \\<in> iso (f G) (DirProds f {G})\"", "lemma DirProds_one_cong_sym: \"(f G) \\<cong> (DirProds f {G})\"", "lemma DirProds_is_group:\n  assumes \"\\<And>i. i \\<in> I \\<Longrightarrow> group (G i)\"\n  shows \"group (DirProds G I)\"", "lemma DirProds_obtain_elem_carr:\n  assumes \"group (DirProds G I)\" \"i \\<in> I\" \"x \\<in> carrier (G i)\"\n  obtains k where \"k \\<in> carrier (DirProds G I)\" \"k i = x\"", "lemma DirProds_group_imp_groups:\n  assumes \"group (DirProds G I)\" and i: \"i \\<in> I\"\n  shows \"group (G i)\"", "lemma DirProds_group_iff: \"group (DirProds G I) \\<longleftrightarrow> (\\<forall>i\\<in>I. group (G i))\"", "lemma comp_inv:\n  assumes \"group (DirProds G I)\" and x: \"x \\<in> carrier (DirProds G I)\" and i: \"i \\<in> I\"\n  shows \"(inv\\<^bsub>(DirProds G I)\\<^esub> x) i = inv\\<^bsub>(G i)\\<^esub> (x i)\"", "lemma DirProds_is_comm_group:\n  assumes \"\\<And>i. i \\<in> I \\<Longrightarrow> comm_group (G i)\"\n  shows \"comm_group (DirProds G I)\" (is \"comm_group ?DP\")", "lemma DirProds_comm_group_imp_comm_groups:\n  assumes \"comm_group (DirProds G I)\" and i: \"i \\<in> I\"\n  shows \"comm_group (G i)\"", "lemma DirProds_comm_group_iff: \"comm_group (DirProds G I) \\<longleftrightarrow> (\\<forall>i\\<in>I. comm_group (G i))\"", "lemma DirProds_is_finite_group:\n  assumes \"\\<And>i. i\\<in>I \\<Longrightarrow> finite_group (G i)\" \"finite I\"\n  shows \"finite_group (DirProds G I)\"", "lemma DirProds_finite_imp_finite_groups:\n  assumes \"finite_group (DirProds G I)\" \"finite I\"\n  shows \"\\<And>i. i\\<in>I \\<Longrightarrow> finite_group (G i)\"", "lemma DirProds_finite_group_iff:\n  assumes \"finite I\"\n  shows \"finite_group (DirProds G I) \\<longleftrightarrow> (\\<forall>i\\<in>I. finite_group (G i))\"", "lemma DirProds_finite_comm_group_iff:\n  assumes \"finite I\"\n  shows \"finite_comm_group (DirProds G I) \\<longleftrightarrow> (\\<forall>i\\<in>I. finite_comm_group (G i))\"", "lemma (in comm_group) subgroup_iso_DirProds_IDirProds:\n  assumes \"subgroup J G\" \"is_idirprod J S I\" \"finite I\"\n  shows \"(\\<lambda>x. \\<Otimes>\\<^bsub>G\\<^esub>i\\<in>I. x i) \\<in> iso (DirProds (\\<lambda>i. G\\<lparr>carrier := (S i)\\<rparr>) I) (G\\<lparr>carrier := J\\<rparr>)\"\n(is \"?fp \\<in> iso ?DP ?J\")", "lemma (in comm_group) iso_DirProds_IDirProds:\n  assumes \"is_idirprod (carrier G) S I\" \"finite I\"\n  shows \"(\\<lambda>x. \\<Otimes>\\<^bsub>G\\<^esub>i\\<in>I. x i) \\<in> iso (DirProds (\\<lambda>i. G\\<lparr>carrier := (S i)\\<rparr>) I) G\"", "lemma (in comm_group) cong_DirProds_IDirProds:\n  assumes \"is_idirprod (carrier G) S I\" \"finite I\"\n  shows \"DirProds (\\<lambda>i. G\\<lparr>carrier := (S i)\\<rparr>) I \\<cong> G\"", "lemma DirProds_iso:\n  assumes \"bij_betw f I J\" \"\\<And>i. i\\<in>I \\<Longrightarrow> Gs i \\<cong> Hs (f i)\"\n          \"\\<And>i. i\\<in>I \\<Longrightarrow> group (Gs i)\" \"\\<And>j. j\\<in>J \\<Longrightarrow> group (Hs j)\"\n  shows \"DirProds Gs I \\<cong> DirProds Hs J\"", "lemma DirProds_iso1:\n  assumes \"\\<And>i. i\\<in>I \\<Longrightarrow> Gs i \\<cong> (f \\<circ> Gs) i\" \"\\<And>i. i\\<in>I \\<Longrightarrow> group (Gs i)\" \"\\<And>i. i\\<in>I \\<Longrightarrow> group ((f \\<circ> Gs) i)\"\n  shows \"DirProds Gs I \\<cong> DirProds (f \\<circ> Gs) I\"", "lemma DirProds_iso2:\n  assumes \"inj_on f A\" \"group (DirProds g (f ` A))\"\n  shows \"DirProds (g \\<circ> f) A \\<cong> DirProds g (f ` A)\"", "lemma DirProds_Sigma:\n  \"DirProds (\\<lambda>i. DirProds (G i) (J i)) I \\<cong> DirProds (\\<lambda>(i,j). G i j) (Sigma I J)\" (is \"?L \\<cong> ?R\")"], "translations": [["", "lemma DirProds_empty:\n  \"carrier (DirProds f {}) = {\\<one>\\<^bsub>DirProds f {}\\<^esub>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. carrier (DirProds f {}) = {\\<one>\\<^bsub>DirProds f {}\\<^esub>}", "unfolding DirProds_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. carrier\n     \\<lparr>carrier = Pi\\<^sub>E {} (carrier \\<circ> f),\n        monoid.mult =\n          \\<lambda>x y.\n             \\<lambda>i\\<in>{}. x i \\<otimes>\\<^bsub>f i\\<^esub> y i,\n        one = \\<lambda>i\\<in>{}. \\<one>\\<^bsub>f i\\<^esub>\\<rparr> =\n    {\\<one>\\<^bsub>\\<lparr>carrier = Pi\\<^sub>E {} (carrier \\<circ> f), monoid.mult = \\<lambda>x y. \\<lambda>i\\<in>{}. x i \\<otimes>\\<^bsub>f i\\<^esub> y i, one = \\<lambda>i\\<in>{}. \\<one>\\<^bsub>f i\\<^esub>\\<rparr>\\<^esub>}", "by auto"], ["", "lemma DirProds_order:\n  assumes \"finite I\"\n  shows \"order (DirProds G I) = prod (order \\<circ> G) I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. order (DirProds G I) = prod (order \\<circ> G) I", "unfolding order_def DirProds_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     (carrier\n       \\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> G),\n          monoid.mult =\n            \\<lambda>x y.\n               \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>G i\\<^esub> y i,\n          one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>G i\\<^esub>\\<rparr>) =\n    prod ((\\<lambda>S. card (carrier S)) \\<circ> G) I", "using assms"], ["proof (prove)\nusing this:\n  finite I\n\ngoal (1 subgoal):\n 1. card\n     (carrier\n       \\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> G),\n          monoid.mult =\n            \\<lambda>x y.\n               \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>G i\\<^esub> y i,\n          one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>G i\\<^esub>\\<rparr>) =\n    prod ((\\<lambda>S. card (carrier S)) \\<circ> G) I", "by (simp add: card_PiE)"], ["", "lemma DirProds_in_carrI:\n  assumes \"\\<And>i. i \\<in> I \\<Longrightarrow> x i \\<in> carrier (G i)\" \"\\<And>i. i \\<notin> I \\<Longrightarrow> x i = undefined\"\n  shows \"x \\<in> carrier (DirProds G I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> carrier (DirProds G I)", "unfolding DirProds_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> carrier\n             \\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> G),\n                monoid.mult =\n                  \\<lambda>x y.\n                     \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>G i\\<^esub> y i,\n                one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>G i\\<^esub>\\<rparr>", "using assms"], ["proof (prove)\nusing this:\n  ?i \\<in> I \\<Longrightarrow> x ?i \\<in> carrier (G ?i)\n  ?i \\<notin> I \\<Longrightarrow> x ?i = undefined\n\ngoal (1 subgoal):\n 1. x \\<in> carrier\n             \\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> G),\n                monoid.mult =\n                  \\<lambda>x y.\n                     \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>G i\\<^esub> y i,\n                one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>G i\\<^esub>\\<rparr>", "by auto"], ["", "lemma comp_in_carr:\n  assumes \"x \\<in> carrier (DirProds G I)\" \"i \\<in> I\"\n  shows \"x i \\<in> carrier (G i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x i \\<in> carrier (G i)", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> carrier (DirProds G I)\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. x i \\<in> carrier (G i)", "unfolding DirProds_def"], ["proof (prove)\nusing this:\n  x \\<in> carrier\n           \\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> G),\n              monoid.mult =\n                \\<lambda>x y.\n                   \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>G i\\<^esub> y i,\n              one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>G i\\<^esub>\\<rparr>\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. x i \\<in> carrier (G i)", "by auto"], ["", "lemma comp_mult:\n  assumes \"i \\<in> I\"\n  shows \"(x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y) i = (x i \\<otimes>\\<^bsub>G i\\<^esub> y i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y) i =\n    x i \\<otimes>\\<^bsub>G i\\<^esub> y i", "using assms"], ["proof (prove)\nusing this:\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. (x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y) i =\n    x i \\<otimes>\\<^bsub>G i\\<^esub> y i", "unfolding DirProds_def"], ["proof (prove)\nusing this:\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. (x \\<otimes>\\<^bsub>\\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> G), monoid.mult = \\<lambda>x y. \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>G i\\<^esub> y i, one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>G i\\<^esub>\\<rparr>\\<^esub>\n     y)\n     i =\n    x i \\<otimes>\\<^bsub>G i\\<^esub> y i", "by simp"], ["", "lemma comp_exp_nat:\n  fixes k::nat\n  assumes \"i \\<in> I\"\n  shows \"(x [^]\\<^bsub>DirProds G I\\<^esub> k) i = x i [^]\\<^bsub>G i\\<^esub> k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x [^]\\<^bsub>DirProds G I\\<^esub> k) i = x i [^]\\<^bsub>G i\\<^esub> k", "proof (induction k)"], ["proof (state)\ngoal (2 subgoals):\n 1. (x [^]\\<^bsub>DirProds G I\\<^esub> 0) i = x i [^]\\<^bsub>G i\\<^esub> 0\n 2. \\<And>k.\n       (x [^]\\<^bsub>DirProds G I\\<^esub> k) i =\n       x i [^]\\<^bsub>G i\\<^esub> k \\<Longrightarrow>\n       (x [^]\\<^bsub>DirProds G I\\<^esub> Suc k) i =\n       x i [^]\\<^bsub>G i\\<^esub> Suc k", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. (x [^]\\<^bsub>DirProds G I\\<^esub> 0) i = x i [^]\\<^bsub>G i\\<^esub> 0\n 2. \\<And>k.\n       (x [^]\\<^bsub>DirProds G I\\<^esub> k) i =\n       x i [^]\\<^bsub>G i\\<^esub> k \\<Longrightarrow>\n       (x [^]\\<^bsub>DirProds G I\\<^esub> Suc k) i =\n       x i [^]\\<^bsub>G i\\<^esub> Suc k", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x [^]\\<^bsub>DirProds G I\\<^esub> 0) i = x i [^]\\<^bsub>G i\\<^esub> 0", "using assms"], ["proof (prove)\nusing this:\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. (x [^]\\<^bsub>DirProds G I\\<^esub> 0) i = x i [^]\\<^bsub>G i\\<^esub> 0", "unfolding DirProds_def"], ["proof (prove)\nusing this:\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. (x [^]\\<^bsub>\\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> G), monoid.mult = \\<lambda>x y. \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>G i\\<^esub> y i, one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>G i\\<^esub>\\<rparr>\\<^esub>\n     0)\n     i =\n    x i [^]\\<^bsub>G i\\<^esub> 0", "by simp"], ["proof (state)\nthis:\n  (x [^]\\<^bsub>DirProds G I\\<^esub> 0) i = x i [^]\\<^bsub>G i\\<^esub> 0\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       (x [^]\\<^bsub>DirProds G I\\<^esub> k) i =\n       x i [^]\\<^bsub>G i\\<^esub> k \\<Longrightarrow>\n       (x [^]\\<^bsub>DirProds G I\\<^esub> Suc k) i =\n       x i [^]\\<^bsub>G i\\<^esub> Suc k", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       (x [^]\\<^bsub>DirProds G I\\<^esub> k) i =\n       x i [^]\\<^bsub>G i\\<^esub> k \\<Longrightarrow>\n       (x [^]\\<^bsub>DirProds G I\\<^esub> Suc k) i =\n       x i [^]\\<^bsub>G i\\<^esub> Suc k", "case i: (Suc k)"], ["proof (state)\nthis:\n  (x [^]\\<^bsub>DirProds G I\\<^esub> k) i = x i [^]\\<^bsub>G i\\<^esub> k\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       (x [^]\\<^bsub>DirProds G I\\<^esub> k) i =\n       x i [^]\\<^bsub>G i\\<^esub> k \\<Longrightarrow>\n       (x [^]\\<^bsub>DirProds G I\\<^esub> Suc k) i =\n       x i [^]\\<^bsub>G i\\<^esub> Suc k", "have \"(x [^]\\<^bsub>DirProds G I\\<^esub> k \\<otimes>\\<^bsub>DirProds G I\\<^esub> x) i = (x [^]\\<^bsub>DirProds G I\\<^esub> k) i \\<otimes>\\<^bsub>G i\\<^esub> x i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x [^]\\<^bsub>DirProds G I\\<^esub>\n     k \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n     x)\n     i =\n    (x [^]\\<^bsub>DirProds G I\\<^esub> k) i \\<otimes>\\<^bsub>G i\\<^esub> x i", "by(rule comp_mult[OF assms])"], ["proof (state)\nthis:\n  (x [^]\\<^bsub>DirProds G I\\<^esub> k \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n   x)\n   i =\n  (x [^]\\<^bsub>DirProds G I\\<^esub> k) i \\<otimes>\\<^bsub>G i\\<^esub> x i\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       (x [^]\\<^bsub>DirProds G I\\<^esub> k) i =\n       x i [^]\\<^bsub>G i\\<^esub> k \\<Longrightarrow>\n       (x [^]\\<^bsub>DirProds G I\\<^esub> Suc k) i =\n       x i [^]\\<^bsub>G i\\<^esub> Suc k", "also"], ["proof (state)\nthis:\n  (x [^]\\<^bsub>DirProds G I\\<^esub> k \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n   x)\n   i =\n  (x [^]\\<^bsub>DirProds G I\\<^esub> k) i \\<otimes>\\<^bsub>G i\\<^esub> x i\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       (x [^]\\<^bsub>DirProds G I\\<^esub> k) i =\n       x i [^]\\<^bsub>G i\\<^esub> k \\<Longrightarrow>\n       (x [^]\\<^bsub>DirProds G I\\<^esub> Suc k) i =\n       x i [^]\\<^bsub>G i\\<^esub> Suc k", "from i"], ["proof (chain)\npicking this:\n  (x [^]\\<^bsub>DirProds G I\\<^esub> k) i = x i [^]\\<^bsub>G i\\<^esub> k", "have \"\\<dots> = x i [^]\\<^bsub>G i\\<^esub> k \\<otimes>\\<^bsub>G i\\<^esub> x i\""], ["proof (prove)\nusing this:\n  (x [^]\\<^bsub>DirProds G I\\<^esub> k) i = x i [^]\\<^bsub>G i\\<^esub> k\n\ngoal (1 subgoal):\n 1. (x [^]\\<^bsub>DirProds G I\\<^esub> k) i \\<otimes>\\<^bsub>G i\\<^esub>\n    x i =\n    x i [^]\\<^bsub>G i\\<^esub> k \\<otimes>\\<^bsub>G i\\<^esub> x i", "by simp"], ["proof (state)\nthis:\n  (x [^]\\<^bsub>DirProds G I\\<^esub> k) i \\<otimes>\\<^bsub>G i\\<^esub> x i =\n  x i [^]\\<^bsub>G i\\<^esub> k \\<otimes>\\<^bsub>G i\\<^esub> x i\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       (x [^]\\<^bsub>DirProds G I\\<^esub> k) i =\n       x i [^]\\<^bsub>G i\\<^esub> k \\<Longrightarrow>\n       (x [^]\\<^bsub>DirProds G I\\<^esub> Suc k) i =\n       x i [^]\\<^bsub>G i\\<^esub> Suc k", "also"], ["proof (state)\nthis:\n  (x [^]\\<^bsub>DirProds G I\\<^esub> k) i \\<otimes>\\<^bsub>G i\\<^esub> x i =\n  x i [^]\\<^bsub>G i\\<^esub> k \\<otimes>\\<^bsub>G i\\<^esub> x i\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       (x [^]\\<^bsub>DirProds G I\\<^esub> k) i =\n       x i [^]\\<^bsub>G i\\<^esub> k \\<Longrightarrow>\n       (x [^]\\<^bsub>DirProds G I\\<^esub> Suc k) i =\n       x i [^]\\<^bsub>G i\\<^esub> Suc k", "have \"\\<dots> = x i [^]\\<^bsub>G i\\<^esub> Suc k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x i [^]\\<^bsub>G i\\<^esub> k \\<otimes>\\<^bsub>G i\\<^esub> x i =\n    x i [^]\\<^bsub>G i\\<^esub> Suc k", "by simp"], ["proof (state)\nthis:\n  x i [^]\\<^bsub>G i\\<^esub> k \\<otimes>\\<^bsub>G i\\<^esub> x i =\n  x i [^]\\<^bsub>G i\\<^esub> Suc k\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       (x [^]\\<^bsub>DirProds G I\\<^esub> k) i =\n       x i [^]\\<^bsub>G i\\<^esub> k \\<Longrightarrow>\n       (x [^]\\<^bsub>DirProds G I\\<^esub> Suc k) i =\n       x i [^]\\<^bsub>G i\\<^esub> Suc k", "finally"], ["proof (chain)\npicking this:\n  (x [^]\\<^bsub>DirProds G I\\<^esub> k \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n   x)\n   i =\n  x i [^]\\<^bsub>G i\\<^esub> Suc k", "show ?case"], ["proof (prove)\nusing this:\n  (x [^]\\<^bsub>DirProds G I\\<^esub> k \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n   x)\n   i =\n  x i [^]\\<^bsub>G i\\<^esub> Suc k\n\ngoal (1 subgoal):\n 1. (x [^]\\<^bsub>DirProds G I\\<^esub> Suc k) i =\n    x i [^]\\<^bsub>G i\\<^esub> Suc k", "by simp"], ["proof (state)\nthis:\n  (x [^]\\<^bsub>DirProds G I\\<^esub> Suc k) i =\n  x i [^]\\<^bsub>G i\\<^esub> Suc k\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma DirProds_m_closed:\n  assumes \"x \\<in> carrier (DirProds G I)\" \"y \\<in> carrier (DirProds G I)\" \"\\<And>i. i \\<in> I \\<Longrightarrow> group (G i)\"\n  shows \"x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y \\<in> carrier (DirProds G I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y \\<in> carrier (DirProds G I)", "using assms monoid.m_closed[OF group.is_monoid[OF assms(3)]]"], ["proof (prove)\nusing this:\n  x \\<in> carrier (DirProds G I)\n  y \\<in> carrier (DirProds G I)\n  ?i \\<in> I \\<Longrightarrow> Group.group (G ?i)\n  \\<lbrakk>?i2 \\<in> I; ?x \\<in> carrier (G ?i2);\n   ?y \\<in> carrier (G ?i2)\\<rbrakk>\n  \\<Longrightarrow> ?x \\<otimes>\\<^bsub>G ?i2\\<^esub> ?y\n                    \\<in> carrier (G ?i2)\n\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y \\<in> carrier (DirProds G I)", "unfolding DirProds_def"], ["proof (prove)\nusing this:\n  x \\<in> carrier\n           \\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> G),\n              monoid.mult =\n                \\<lambda>x y.\n                   \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>G i\\<^esub> y i,\n              one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>G i\\<^esub>\\<rparr>\n  y \\<in> carrier\n           \\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> G),\n              monoid.mult =\n                \\<lambda>x y.\n                   \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>G i\\<^esub> y i,\n              one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>G i\\<^esub>\\<rparr>\n  ?i \\<in> I \\<Longrightarrow> Group.group (G ?i)\n  \\<lbrakk>?i2 \\<in> I; ?x \\<in> carrier (G ?i2);\n   ?y \\<in> carrier (G ?i2)\\<rbrakk>\n  \\<Longrightarrow> ?x \\<otimes>\\<^bsub>G ?i2\\<^esub> ?y\n                    \\<in> carrier (G ?i2)\n\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>\\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> G), monoid.mult = \\<lambda>x y. \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>G i\\<^esub> y i, one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>G i\\<^esub>\\<rparr>\\<^esub>\n    y\n    \\<in> carrier\n           \\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> G),\n              monoid.mult =\n                \\<lambda>x y.\n                   \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>G i\\<^esub> y i,\n              one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>G i\\<^esub>\\<rparr>", "by fastforce"], ["", "lemma partial_restr:\n  assumes \"a \\<in> carrier (DirProds G I)\" \"J \\<subseteq> I\"\n  shows \"restrict a J \\<in> carrier (DirProds G J)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict a J \\<in> carrier (DirProds G J)", "using assms"], ["proof (prove)\nusing this:\n  a \\<in> carrier (DirProds G I)\n  J \\<subseteq> I\n\ngoal (1 subgoal):\n 1. restrict a J \\<in> carrier (DirProds G J)", "unfolding DirProds_def"], ["proof (prove)\nusing this:\n  a \\<in> carrier\n           \\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> G),\n              monoid.mult =\n                \\<lambda>x y.\n                   \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>G i\\<^esub> y i,\n              one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>G i\\<^esub>\\<rparr>\n  J \\<subseteq> I\n\ngoal (1 subgoal):\n 1. restrict a J\n    \\<in> carrier\n           \\<lparr>carrier = Pi\\<^sub>E J (carrier \\<circ> G),\n              monoid.mult =\n                \\<lambda>x y.\n                   \\<lambda>i\\<in>J. x i \\<otimes>\\<^bsub>G i\\<^esub> y i,\n              one = \\<lambda>i\\<in>J. \\<one>\\<^bsub>G i\\<^esub>\\<rparr>", "by auto"], ["", "lemma eq_parts_imp_eq:\n  assumes \"a \\<in> carrier (DirProds G I)\" \"b \\<in> carrier (DirProds G I)\" \"\\<And>i. i \\<in> I \\<Longrightarrow> a i = b i\"\n  shows \"a = b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a = b", "using assms"], ["proof (prove)\nusing this:\n  a \\<in> carrier (DirProds G I)\n  b \\<in> carrier (DirProds G I)\n  ?i \\<in> I \\<Longrightarrow> a ?i = b ?i\n\ngoal (1 subgoal):\n 1. a = b", "unfolding DirProds_def"], ["proof (prove)\nusing this:\n  a \\<in> carrier\n           \\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> G),\n              monoid.mult =\n                \\<lambda>x y.\n                   \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>G i\\<^esub> y i,\n              one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>G i\\<^esub>\\<rparr>\n  b \\<in> carrier\n           \\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> G),\n              monoid.mult =\n                \\<lambda>x y.\n                   \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>G i\\<^esub> y i,\n              one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>G i\\<^esub>\\<rparr>\n  ?i \\<in> I \\<Longrightarrow> a ?i = b ?i\n\ngoal (1 subgoal):\n 1. a = b", "by fastforce"], ["", "lemma mult_restr:\n  assumes \"a \\<in> carrier (DirProds G I)\" \"b \\<in> carrier (DirProds G I)\" \"J \\<subseteq> I\"\n  shows \"a \\<otimes>\\<^bsub>DirProds G J\\<^esub> b = restrict (a \\<otimes>\\<^bsub>DirProds G I\\<^esub> b) J\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<otimes>\\<^bsub>DirProds G J\\<^esub> b =\n    restrict (a \\<otimes>\\<^bsub>DirProds G I\\<^esub> b) J", "using assms"], ["proof (prove)\nusing this:\n  a \\<in> carrier (DirProds G I)\n  b \\<in> carrier (DirProds G I)\n  J \\<subseteq> I\n\ngoal (1 subgoal):\n 1. a \\<otimes>\\<^bsub>DirProds G J\\<^esub> b =\n    restrict (a \\<otimes>\\<^bsub>DirProds G I\\<^esub> b) J", "unfolding DirProds_def"], ["proof (prove)\nusing this:\n  a \\<in> carrier\n           \\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> G),\n              monoid.mult =\n                \\<lambda>x y.\n                   \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>G i\\<^esub> y i,\n              one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>G i\\<^esub>\\<rparr>\n  b \\<in> carrier\n           \\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> G),\n              monoid.mult =\n                \\<lambda>x y.\n                   \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>G i\\<^esub> y i,\n              one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>G i\\<^esub>\\<rparr>\n  J \\<subseteq> I\n\ngoal (1 subgoal):\n 1. a \\<otimes>\\<^bsub>\\<lparr>carrier = Pi\\<^sub>E J (carrier \\<circ> G), monoid.mult = \\<lambda>x y. \\<lambda>i\\<in>J. x i \\<otimes>\\<^bsub>G i\\<^esub> y i, one = \\<lambda>i\\<in>J. \\<one>\\<^bsub>G i\\<^esub>\\<rparr>\\<^esub>\n    b =\n    restrict\n     (a \\<otimes>\\<^bsub>\\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> G), monoid.mult = \\<lambda>x y. \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>G i\\<^esub> y i, one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>G i\\<^esub>\\<rparr>\\<^esub>\n      b)\n     J", "by force"], ["", "lemma DirProds_one:\n  assumes \"x \\<in> carrier (DirProds G I)\"\n  shows \"(\\<forall>i \\<in> I. x i = \\<one>\\<^bsub>G i\\<^esub>) \\<longleftrightarrow> x = \\<one>\\<^bsub>DirProds G I\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>i\\<in>I. x i = \\<one>\\<^bsub>G i\\<^esub>) =\n    (x = \\<one>\\<^bsub>DirProds G I\\<^esub>)", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> carrier (DirProds G I)\n\ngoal (1 subgoal):\n 1. (\\<forall>i\\<in>I. x i = \\<one>\\<^bsub>G i\\<^esub>) =\n    (x = \\<one>\\<^bsub>DirProds G I\\<^esub>)", "unfolding DirProds_def"], ["proof (prove)\nusing this:\n  x \\<in> carrier\n           \\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> G),\n              monoid.mult =\n                \\<lambda>x y.\n                   \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>G i\\<^esub> y i,\n              one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>G i\\<^esub>\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<forall>i\\<in>I. x i = \\<one>\\<^bsub>G i\\<^esub>) =\n    (x =\n     \\<one>\\<^bsub>\\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> G), monoid.mult = \\<lambda>x y. \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>G i\\<^esub> y i, one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>G i\\<^esub>\\<rparr>\\<^esub>)", "by fastforce"], ["", "lemma DirProds_one':\n  \"i\\<in>I \\<Longrightarrow> \\<one>\\<^bsub>DirProds G I\\<^esub> i = \\<one>\\<^bsub>G i\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<in> I \\<Longrightarrow>\n    \\<one>\\<^bsub>DirProds G I\\<^esub> i = \\<one>\\<^bsub>G i\\<^esub>", "unfolding DirProds_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<in> I \\<Longrightarrow>\n    \\<one>\\<^bsub>\\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> G), monoid.mult = \\<lambda>x y. \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>G i\\<^esub> y i, one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>G i\\<^esub>\\<rparr>\\<^esub>\n     i =\n    \\<one>\\<^bsub>G i\\<^esub>", "by simp"], ["", "lemma DirProds_one'':\n  \"\\<one>\\<^bsub>DirProds G I\\<^esub> = restrict (\\<lambda>i. \\<one>\\<^bsub>G i\\<^esub>) I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<one>\\<^bsub>DirProds G I\\<^esub> =\n    (\\<lambda>i\\<in>I. \\<one>\\<^bsub>G i\\<^esub>)", "by (unfold DirProds_def, simp)"], ["", "lemma DirProds_mult:\n  \"(\\<otimes>\\<^bsub>DirProds G I\\<^esub>) = (\\<lambda>x y. restrict (\\<lambda>i. x i \\<otimes>\\<^bsub>G i\\<^esub> y i) I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<otimes>\\<^bsub>DirProds G I\\<^esub>) =\n    (\\<lambda>x y. \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>G i\\<^esub> y i)", "unfolding DirProds_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<otimes>\\<^bsub>\\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> G), monoid.mult = \\<lambda>x y. \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>G i\\<^esub> y i, one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>G i\\<^esub>\\<rparr>\\<^esub>) =\n    (\\<lambda>x y. \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>G i\\<^esub> y i)", "by simp"], ["", "lemma DirProds_one_iso: \"(\\<lambda>x. x G) \\<in> iso (DirProds f {G}) (f G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x G) \\<in> Group.iso (DirProds f {G}) (f G)", "proof (intro isoI homI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> carrier (DirProds f {G}) \\<Longrightarrow>\n       x G \\<in> carrier (f G)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (DirProds f {G});\n        y \\<in> carrier (DirProds f {G})\\<rbrakk>\n       \\<Longrightarrow> (x \\<otimes>\\<^bsub>DirProds f {G}\\<^esub> y) G =\n                         x G \\<otimes>\\<^bsub>f G\\<^esub> y G\n 3. bij_betw (\\<lambda>x. x G) (carrier (DirProds f {G})) (carrier (f G))", "show \"bij_betw (\\<lambda>x. x G) (carrier (DirProds f {G})) (carrier (f G))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (\\<lambda>x. x G) (carrier (DirProds f {G})) (carrier (f G))", "proof (unfold bij_betw_def, rule)"], ["proof (state)\ngoal (2 subgoals):\n 1. inj_on (\\<lambda>x. x G) (carrier (DirProds f {G}))\n 2. (\\<lambda>x. x G) ` carrier (DirProds f {G}) = carrier (f G)", "show \"inj_on (\\<lambda>x. x G) (carrier (DirProds f {G}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>x. x G) (carrier (DirProds f {G}))", "by (intro inj_onI, unfold DirProds_def PiE_def Pi_def extensional_def, fastforce)"], ["proof (state)\nthis:\n  inj_on (\\<lambda>x. x G) (carrier (DirProds f {G}))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. x G) ` carrier (DirProds f {G}) = carrier (f G)", "show \"(\\<lambda>x. x G) ` carrier (DirProds f {G}) = carrier (f G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. x G) ` carrier (DirProds f {G}) = carrier (f G)", "proof(intro equalityI subsetI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. x G) `\n               carrier (DirProds f {G}) \\<Longrightarrow>\n       x \\<in> carrier (f G)\n 2. \\<And>x.\n       x \\<in> carrier (f G) \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. x G) ` carrier (DirProds f {G})", "show \"x \\<in> carrier (f G)\" if \"x \\<in> (\\<lambda>x. x G) ` carrier (DirProds f {G})\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> carrier (f G)", "using that"], ["proof (prove)\nusing this:\n  x \\<in> (\\<lambda>x. x G) ` carrier (DirProds f {G})\n\ngoal (1 subgoal):\n 1. x \\<in> carrier (f G)", "unfolding DirProds_def"], ["proof (prove)\nusing this:\n  x \\<in> (\\<lambda>x. x G) `\n          carrier\n           \\<lparr>carrier = Pi\\<^sub>E {G} (carrier \\<circ> f),\n              monoid.mult =\n                \\<lambda>x y.\n                   \\<lambda>i\\<in>{G}. x i \\<otimes>\\<^bsub>f i\\<^esub> y i,\n              one = \\<lambda>i\\<in>{G}. \\<one>\\<^bsub>f i\\<^esub>\\<rparr>\n\ngoal (1 subgoal):\n 1. x \\<in> carrier (f G)", "by auto"], ["proof (state)\nthis:\n  ?x \\<in> (\\<lambda>x. x G) ` carrier (DirProds f {G}) \\<Longrightarrow>\n  ?x \\<in> carrier (f G)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier (f G) \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. x G) ` carrier (DirProds f {G})", "show \"x \\<in> (\\<lambda>x. x G) ` carrier (DirProds f {G})\" if xc: \"x \\<in> carrier (f G)\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> (\\<lambda>x. x G) ` carrier (DirProds f {G})", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. x = ?x G\n 2. ?x \\<in> carrier (DirProds f {G})", "show \"(\\<lambda>k\\<in>{G}. x) \\<in> carrier (DirProds f {G})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>k\\<in>{G}. x) \\<in> carrier (DirProds f {G})", "unfolding DirProds_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>k\\<in>{G}. x)\n    \\<in> carrier\n           \\<lparr>carrier = Pi\\<^sub>E {G} (carrier \\<circ> f),\n              monoid.mult =\n                \\<lambda>x y.\n                   \\<lambda>i\\<in>{G}. x i \\<otimes>\\<^bsub>f i\\<^esub> y i,\n              one = \\<lambda>i\\<in>{G}. \\<one>\\<^bsub>f i\\<^esub>\\<rparr>", "using xc"], ["proof (prove)\nusing this:\n  x \\<in> carrier (f G)\n\ngoal (1 subgoal):\n 1. (\\<lambda>k\\<in>{G}. x)\n    \\<in> carrier\n           \\<lparr>carrier = Pi\\<^sub>E {G} (carrier \\<circ> f),\n              monoid.mult =\n                \\<lambda>x y.\n                   \\<lambda>i\\<in>{G}. x i \\<otimes>\\<^bsub>f i\\<^esub> y i,\n              one = \\<lambda>i\\<in>{G}. \\<one>\\<^bsub>f i\\<^esub>\\<rparr>", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>k\\<in>{G}. x) \\<in> carrier (DirProds f {G})\n\ngoal (1 subgoal):\n 1. x = (\\<lambda>k\\<in>{G}. x) G", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>k\\<in>{G}. x) \\<in> carrier (DirProds f {G})\n\ngoal (1 subgoal):\n 1. x = (\\<lambda>k\\<in>{G}. x) G", "show \"x = (\\<lambda>k\\<in>{G}. x) G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = (\\<lambda>k\\<in>{G}. x) G", "by simp"], ["proof (state)\nthis:\n  x = (\\<lambda>k\\<in>{G}. x) G\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x \\<in> carrier (f G) \\<Longrightarrow>\n  ?x \\<in> (\\<lambda>x. x G) ` carrier (DirProds f {G})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>x. x G) ` carrier (DirProds f {G}) = carrier (f G)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  bij_betw (\\<lambda>x. x G) (carrier (DirProds f {G})) (carrier (f G))\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> carrier (DirProds f {G}) \\<Longrightarrow>\n       x G \\<in> carrier (f G)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (DirProds f {G});\n        y \\<in> carrier (DirProds f {G})\\<rbrakk>\n       \\<Longrightarrow> (x \\<otimes>\\<^bsub>DirProds f {G}\\<^esub> y) G =\n                         x G \\<otimes>\\<^bsub>f G\\<^esub> y G", "qed (unfold DirProds_def PiE_def Pi_def extensional_def, auto)"], ["", "lemma DirProds_one_cong: \"(DirProds f {G}) \\<cong> (f G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. DirProds f {G} \\<cong> f G", "using DirProds_one_iso is_isoI"], ["proof (prove)\nusing this:\n  (\\<lambda>x. x ?G) \\<in> Group.iso (DirProds ?f {?G}) (?f ?G)\n  ?h \\<in> Group.iso ?G ?H \\<Longrightarrow> ?G \\<cong> ?H\n\ngoal (1 subgoal):\n 1. DirProds f {G} \\<cong> f G", "by fast"], ["", "lemma DirProds_one_iso_sym: \"(\\<lambda>x. (\\<lambda>_\\<in>{G}. x)) \\<in> iso (f G) (DirProds f {G})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<lambda>_\\<in>{G}. x)\n    \\<in> Group.iso (f G) (DirProds f {G})", "proof (intro isoI homI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x.\n       x \\<in> carrier (f G) \\<Longrightarrow>\n       (\\<lambda>_\\<in>{G}. x) \\<in> carrier (DirProds f {G})\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (f G); y \\<in> carrier (f G)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>_\\<in>{G}.\n                             x \\<otimes>\\<^bsub>f G\\<^esub> y) =\n                         (\\<lambda>_\\<in>{G}.\n                             x) \\<otimes>\\<^bsub>DirProds f {G}\\<^esub>\n                         (\\<lambda>_\\<in>{G}. y)\n 3. bij_betw (\\<lambda>x. \\<lambda>_\\<in>{G}. x) (carrier (f G))\n     (carrier (DirProds f {G}))", "show \"bij_betw (\\<lambda>x. \\<lambda>_\\<in>{G}. x) (carrier (f G)) (carrier (DirProds f {G}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (\\<lambda>x. \\<lambda>_\\<in>{G}. x) (carrier (f G))\n     (carrier (DirProds f {G}))", "proof (unfold bij_betw_def, rule)"], ["proof (state)\ngoal (2 subgoals):\n 1. inj_on (\\<lambda>x. \\<lambda>_\\<in>{G}. x) (carrier (f G))\n 2. (\\<lambda>x. \\<lambda>_\\<in>{G}. x) ` carrier (f G) =\n    carrier (DirProds f {G})", "show \"inj_on (\\<lambda>x. (\\<lambda>_\\<in>{G}. x)) (carrier (f G))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>x. \\<lambda>_\\<in>{G}. x) (carrier (f G))", "by (intro inj_onI, metis imageI image_constant image_restrict_eq member_remove remove_def)"], ["proof (state)\nthis:\n  inj_on (\\<lambda>x. \\<lambda>_\\<in>{G}. x) (carrier (f G))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<lambda>_\\<in>{G}. x) ` carrier (f G) =\n    carrier (DirProds f {G})", "show \"(\\<lambda>x. (\\<lambda>_\\<in>{G}. x)) ` carrier (f G) = carrier (DirProds f {G})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<lambda>_\\<in>{G}. x) ` carrier (f G) =\n    carrier (DirProds f {G})", "unfolding DirProds_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<lambda>_\\<in>{G}. x) ` carrier (f G) =\n    carrier\n     \\<lparr>carrier = Pi\\<^sub>E {G} (carrier \\<circ> f),\n        monoid.mult =\n          \\<lambda>x y.\n             \\<lambda>i\\<in>{G}. x i \\<otimes>\\<^bsub>f i\\<^esub> y i,\n        one = \\<lambda>i\\<in>{G}. \\<one>\\<^bsub>f i\\<^esub>\\<rparr>", "by fastforce"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<lambda>_\\<in>{G}. x) ` carrier (f G) =\n  carrier (DirProds f {G})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  bij_betw (\\<lambda>x. \\<lambda>_\\<in>{G}. x) (carrier (f G))\n   (carrier (DirProds f {G}))\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> carrier (f G) \\<Longrightarrow>\n       (\\<lambda>_\\<in>{G}. x) \\<in> carrier (DirProds f {G})\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (f G); y \\<in> carrier (f G)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>_\\<in>{G}.\n                             x \\<otimes>\\<^bsub>f G\\<^esub> y) =\n                         (\\<lambda>_\\<in>{G}.\n                             x) \\<otimes>\\<^bsub>DirProds f {G}\\<^esub>\n                         (\\<lambda>_\\<in>{G}. y)", "qed (unfold DirProds_def, auto)"], ["", "lemma DirProds_one_cong_sym: \"(f G) \\<cong> (DirProds f {G})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f G \\<cong> DirProds f {G}", "using DirProds_one_iso_sym is_isoI"], ["proof (prove)\nusing this:\n  (\\<lambda>x. \\<lambda>_\\<in>{?G}. x)\n  \\<in> Group.iso (?f ?G) (DirProds ?f {?G})\n  ?h \\<in> Group.iso ?G ?H \\<Longrightarrow> ?G \\<cong> ?H\n\ngoal (1 subgoal):\n 1. f G \\<cong> DirProds f {G}", "by fast"], ["", "text \\<open>The direct product is a group iff all factors are groups.\\<close>"], ["", "lemma DirProds_is_group:\n  assumes \"\\<And>i. i \\<in> I \\<Longrightarrow> group (G i)\"\n  shows \"group (DirProds G I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Group.group (DirProds G I)", "proof(rule groupI)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y\n                         \\<in> carrier (DirProds G I)\n 2. \\<one>\\<^bsub>DirProds G I\\<^esub> \\<in> carrier (DirProds G I)\n 3. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I);\n        z \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z)\n 4. \\<And>x.\n       x \\<in> carrier (DirProds G I) \\<Longrightarrow>\n       \\<one>\\<^bsub>DirProds G I\\<^esub> \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n       x =\n       x\n 5. \\<And>x.\n       x \\<in> carrier (DirProds G I) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (DirProds G I).\n          y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x =\n          \\<one>\\<^bsub>DirProds G I\\<^esub>", "show one_closed: \"\\<one>\\<^bsub>DirProds G I\\<^esub> \\<in> carrier (DirProds G I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<one>\\<^bsub>DirProds G I\\<^esub> \\<in> carrier (DirProds G I)", "unfolding DirProds_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<one>\\<^bsub>\\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> G), monoid.mult = \\<lambda>x y. \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>G i\\<^esub> y i, one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>G i\\<^esub>\\<rparr>\\<^esub>\n    \\<in> carrier\n           \\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> G),\n              monoid.mult =\n                \\<lambda>x y.\n                   \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>G i\\<^esub> y i,\n              one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>G i\\<^esub>\\<rparr>", "by (simp add: assms group.is_monoid)"], ["proof (state)\nthis:\n  \\<one>\\<^bsub>DirProds G I\\<^esub> \\<in> carrier (DirProds G I)\n\ngoal (4 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y\n                         \\<in> carrier (DirProds G I)\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I);\n        z \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z)\n 3. \\<And>x.\n       x \\<in> carrier (DirProds G I) \\<Longrightarrow>\n       \\<one>\\<^bsub>DirProds G I\\<^esub> \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n       x =\n       x\n 4. \\<And>x.\n       x \\<in> carrier (DirProds G I) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (DirProds G I).\n          y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x =\n          \\<one>\\<^bsub>DirProds G I\\<^esub>", "fix x"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y\n                         \\<in> carrier (DirProds G I)\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I);\n        z \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z)\n 3. \\<And>x.\n       x \\<in> carrier (DirProds G I) \\<Longrightarrow>\n       \\<one>\\<^bsub>DirProds G I\\<^esub> \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n       x =\n       x\n 4. \\<And>x.\n       x \\<in> carrier (DirProds G I) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (DirProds G I).\n          y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x =\n          \\<one>\\<^bsub>DirProds G I\\<^esub>", "assume x: \"x \\<in> carrier (DirProds G I)\""], ["proof (state)\nthis:\n  x \\<in> carrier (DirProds G I)\n\ngoal (4 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y\n                         \\<in> carrier (DirProds G I)\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I);\n        z \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z)\n 3. \\<And>x.\n       x \\<in> carrier (DirProds G I) \\<Longrightarrow>\n       \\<one>\\<^bsub>DirProds G I\\<^esub> \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n       x =\n       x\n 4. \\<And>x.\n       x \\<in> carrier (DirProds G I) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (DirProds G I).\n          y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x =\n          \\<one>\\<^bsub>DirProds G I\\<^esub>", "have one_: \"\\<And>i. i \\<in> I \\<Longrightarrow> \\<one>\\<^bsub>G i\\<^esub> = \\<one>\\<^bsub>DirProds G I\\<^esub> i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> I \\<Longrightarrow>\n       \\<one>\\<^bsub>G i\\<^esub> = \\<one>\\<^bsub>DirProds G I\\<^esub> i", "unfolding DirProds_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> I \\<Longrightarrow>\n       \\<one>\\<^bsub>G i\\<^esub> =\n       \\<one>\\<^bsub>\\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> G), monoid.mult = \\<lambda>x y. \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>G i\\<^esub> y i, one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>G i\\<^esub>\\<rparr>\\<^esub>\n        i", "by simp"], ["proof (state)\nthis:\n  ?i \\<in> I \\<Longrightarrow>\n  \\<one>\\<^bsub>G ?i\\<^esub> = \\<one>\\<^bsub>DirProds G I\\<^esub> ?i\n\ngoal (4 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y\n                         \\<in> carrier (DirProds G I)\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I);\n        z \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z)\n 3. \\<And>x.\n       x \\<in> carrier (DirProds G I) \\<Longrightarrow>\n       \\<one>\\<^bsub>DirProds G I\\<^esub> \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n       x =\n       x\n 4. \\<And>x.\n       x \\<in> carrier (DirProds G I) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (DirProds G I).\n          y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x =\n          \\<one>\\<^bsub>DirProds G I\\<^esub>", "have \"\\<And>i. i \\<in> I \\<Longrightarrow> \\<one>\\<^bsub>DirProds G I\\<^esub> i \\<otimes>\\<^bsub>G i\\<^esub> x i = x i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> I \\<Longrightarrow>\n       \\<one>\\<^bsub>DirProds G I\\<^esub> i \\<otimes>\\<^bsub>G i\\<^esub>\n       x i =\n       x i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> I \\<Longrightarrow>\n       \\<one>\\<^bsub>DirProds G I\\<^esub> i \\<otimes>\\<^bsub>G i\\<^esub>\n       x i =\n       x i", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> I \\<Longrightarrow>\n       \\<one>\\<^bsub>DirProds G I\\<^esub> i \\<otimes>\\<^bsub>G i\\<^esub>\n       x i =\n       x i", "assume i: \"i \\<in> I\""], ["proof (state)\nthis:\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> I \\<Longrightarrow>\n       \\<one>\\<^bsub>DirProds G I\\<^esub> i \\<otimes>\\<^bsub>G i\\<^esub>\n       x i =\n       x i", "interpret group \"G i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Group.group (G i)", "using assms[OF i]"], ["proof (prove)\nusing this:\n  Group.group (G i)\n\ngoal (1 subgoal):\n 1. Group.group (G i)", "."], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> I \\<Longrightarrow>\n       \\<one>\\<^bsub>DirProds G I\\<^esub> i \\<otimes>\\<^bsub>G i\\<^esub>\n       x i =\n       x i", "have \"x i \\<in> carrier (G i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x i \\<in> carrier (G i)", "using x i comp_in_carr"], ["proof (prove)\nusing this:\n  x \\<in> carrier (DirProds G I)\n  i \\<in> I\n  \\<lbrakk>?x \\<in> carrier (DirProds ?G ?I); ?i \\<in> ?I\\<rbrakk>\n  \\<Longrightarrow> ?x ?i \\<in> carrier (?G ?i)\n\ngoal (1 subgoal):\n 1. x i \\<in> carrier (G i)", "by fast"], ["proof (state)\nthis:\n  x i \\<in> carrier (G i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> I \\<Longrightarrow>\n       \\<one>\\<^bsub>DirProds G I\\<^esub> i \\<otimes>\\<^bsub>G i\\<^esub>\n       x i =\n       x i", "thus \"\\<one>\\<^bsub>DirProds G I\\<^esub> i \\<otimes>\\<^bsub>G i\\<^esub> x i = x i\""], ["proof (prove)\nusing this:\n  x i \\<in> carrier (G i)\n\ngoal (1 subgoal):\n 1. \\<one>\\<^bsub>DirProds G I\\<^esub> i \\<otimes>\\<^bsub>G i\\<^esub> x i =\n    x i", "by(subst one_[OF i, symmetric]; simp)"], ["proof (state)\nthis:\n  \\<one>\\<^bsub>DirProds G I\\<^esub> i \\<otimes>\\<^bsub>G i\\<^esub> x i =\n  x i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?i \\<in> I \\<Longrightarrow>\n  \\<one>\\<^bsub>DirProds G I\\<^esub> ?i \\<otimes>\\<^bsub>G ?i\\<^esub> x ?i =\n  x ?i\n\ngoal (4 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y\n                         \\<in> carrier (DirProds G I)\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I);\n        z \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z)\n 3. \\<And>x.\n       x \\<in> carrier (DirProds G I) \\<Longrightarrow>\n       \\<one>\\<^bsub>DirProds G I\\<^esub> \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n       x =\n       x\n 4. \\<And>x.\n       x \\<in> carrier (DirProds G I) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (DirProds G I).\n          y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x =\n          \\<one>\\<^bsub>DirProds G I\\<^esub>", "with one_ x"], ["proof (chain)\npicking this:\n  ?i \\<in> I \\<Longrightarrow>\n  \\<one>\\<^bsub>G ?i\\<^esub> = \\<one>\\<^bsub>DirProds G I\\<^esub> ?i\n  x \\<in> carrier (DirProds G I)\n  ?i \\<in> I \\<Longrightarrow>\n  \\<one>\\<^bsub>DirProds G I\\<^esub> ?i \\<otimes>\\<^bsub>G ?i\\<^esub> x ?i =\n  x ?i", "show \"\\<one>\\<^bsub>DirProds G I\\<^esub> \\<otimes>\\<^bsub>DirProds G I\\<^esub> x = x\""], ["proof (prove)\nusing this:\n  ?i \\<in> I \\<Longrightarrow>\n  \\<one>\\<^bsub>G ?i\\<^esub> = \\<one>\\<^bsub>DirProds G I\\<^esub> ?i\n  x \\<in> carrier (DirProds G I)\n  ?i \\<in> I \\<Longrightarrow>\n  \\<one>\\<^bsub>DirProds G I\\<^esub> ?i \\<otimes>\\<^bsub>G ?i\\<^esub> x ?i =\n  x ?i\n\ngoal (1 subgoal):\n 1. \\<one>\\<^bsub>DirProds G I\\<^esub> \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n    x =\n    x", "unfolding DirProds_def"], ["proof (prove)\nusing this:\n  ?i \\<in> I \\<Longrightarrow>\n  \\<one>\\<^bsub>G ?i\\<^esub> =\n  \\<one>\\<^bsub>\\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> G), monoid.mult = \\<lambda>x y. \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>G i\\<^esub> y i, one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>G i\\<^esub>\\<rparr>\\<^esub>\n   ?i\n  x \\<in> carrier\n           \\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> G),\n              monoid.mult =\n                \\<lambda>x y.\n                   \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>G i\\<^esub> y i,\n              one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>G i\\<^esub>\\<rparr>\n  ?i \\<in> I \\<Longrightarrow>\n  \\<one>\\<^bsub>\\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> G), monoid.mult = \\<lambda>x y. \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>G i\\<^esub> y i, one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>G i\\<^esub>\\<rparr>\\<^esub>\n   ?i \\<otimes>\\<^bsub>G ?i\\<^esub>\n  x ?i =\n  x ?i\n\ngoal (1 subgoal):\n 1. \\<one>\\<^bsub>\\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> G), monoid.mult = \\<lambda>x y. \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>G i\\<^esub> y i, one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>G i\\<^esub>\\<rparr>\\<^esub> \\<otimes>\\<^bsub>\\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> G), monoid.mult = \\<lambda>x y. \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>G i\\<^esub> y i, one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>G i\\<^esub>\\<rparr>\\<^esub>\n    x =\n    x", "by force"], ["proof (state)\nthis:\n  \\<one>\\<^bsub>DirProds G I\\<^esub> \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n  x =\n  x\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y\n                         \\<in> carrier (DirProds G I)\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I);\n        z \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z)\n 3. \\<And>x.\n       x \\<in> carrier (DirProds G I) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (DirProds G I).\n          y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x =\n          \\<one>\\<^bsub>DirProds G I\\<^esub>", "have \"restrict (\\<lambda>i. inv\\<^bsub>G i\\<^esub> (x i)) I \\<in> carrier (DirProds G I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>i\\<in>I. inv\\<^bsub>G i\\<^esub> x i)\n    \\<in> carrier (DirProds G I)", "using x group.inv_closed[OF assms]"], ["proof (prove)\nusing this:\n  x \\<in> carrier (DirProds G I)\n  \\<lbrakk>?i1 \\<in> I; ?x \\<in> carrier (G ?i1)\\<rbrakk>\n  \\<Longrightarrow> inv\\<^bsub>G ?i1\\<^esub> ?x \\<in> carrier (G ?i1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>i\\<in>I. inv\\<^bsub>G i\\<^esub> x i)\n    \\<in> carrier (DirProds G I)", "unfolding DirProds_def"], ["proof (prove)\nusing this:\n  x \\<in> carrier\n           \\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> G),\n              monoid.mult =\n                \\<lambda>x y.\n                   \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>G i\\<^esub> y i,\n              one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>G i\\<^esub>\\<rparr>\n  \\<lbrakk>?i1 \\<in> I; ?x \\<in> carrier (G ?i1)\\<rbrakk>\n  \\<Longrightarrow> inv\\<^bsub>G ?i1\\<^esub> ?x \\<in> carrier (G ?i1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>i\\<in>I. inv\\<^bsub>G i\\<^esub> x i)\n    \\<in> carrier\n           \\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> G),\n              monoid.mult =\n                \\<lambda>x y.\n                   \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>G i\\<^esub> y i,\n              one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>G i\\<^esub>\\<rparr>", "by fastforce"], ["proof (state)\nthis:\n  (\\<lambda>i\\<in>I. inv\\<^bsub>G i\\<^esub> x i)\n  \\<in> carrier (DirProds G I)\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y\n                         \\<in> carrier (DirProds G I)\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I);\n        z \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z)\n 3. \\<And>x.\n       x \\<in> carrier (DirProds G I) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (DirProds G I).\n          y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x =\n          \\<one>\\<^bsub>DirProds G I\\<^esub>", "moreover"], ["proof (state)\nthis:\n  (\\<lambda>i\\<in>I. inv\\<^bsub>G i\\<^esub> x i)\n  \\<in> carrier (DirProds G I)\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y\n                         \\<in> carrier (DirProds G I)\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I);\n        z \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z)\n 3. \\<And>x.\n       x \\<in> carrier (DirProds G I) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (DirProds G I).\n          y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x =\n          \\<one>\\<^bsub>DirProds G I\\<^esub>", "have \"restrict (\\<lambda>i. inv\\<^bsub>G i\\<^esub> (x i)) I \\<otimes>\\<^bsub>DirProds G I\\<^esub> x = \\<one>\\<^bsub>DirProds G I\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>i\\<in>I.\n        inv\\<^bsub>G i\\<^esub> x i) \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n    x =\n    \\<one>\\<^bsub>DirProds G I\\<^esub>", "using x group.l_inv[OF assms]"], ["proof (prove)\nusing this:\n  x \\<in> carrier (DirProds G I)\n  \\<lbrakk>?i1 \\<in> I; ?x \\<in> carrier (G ?i1)\\<rbrakk>\n  \\<Longrightarrow> inv\\<^bsub>G ?i1\\<^esub> ?x \\<otimes>\\<^bsub>G ?i1\\<^esub>\n                    ?x =\n                    \\<one>\\<^bsub>G ?i1\\<^esub>\n\ngoal (1 subgoal):\n 1. (\\<lambda>i\\<in>I.\n        inv\\<^bsub>G i\\<^esub> x i) \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n    x =\n    \\<one>\\<^bsub>DirProds G I\\<^esub>", "unfolding DirProds_def"], ["proof (prove)\nusing this:\n  x \\<in> carrier\n           \\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> G),\n              monoid.mult =\n                \\<lambda>x y.\n                   \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>G i\\<^esub> y i,\n              one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>G i\\<^esub>\\<rparr>\n  \\<lbrakk>?i1 \\<in> I; ?x \\<in> carrier (G ?i1)\\<rbrakk>\n  \\<Longrightarrow> inv\\<^bsub>G ?i1\\<^esub> ?x \\<otimes>\\<^bsub>G ?i1\\<^esub>\n                    ?x =\n                    \\<one>\\<^bsub>G ?i1\\<^esub>\n\ngoal (1 subgoal):\n 1. (\\<lambda>i\\<in>I.\n        inv\\<^bsub>G i\\<^esub> x i) \\<otimes>\\<^bsub>\\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> G), monoid.mult = \\<lambda>x y. \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>G i\\<^esub> y i, one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>G i\\<^esub>\\<rparr>\\<^esub>\n    x =\n    \\<one>\\<^bsub>\\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> G), monoid.mult = \\<lambda>x y. \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>G i\\<^esub> y i, one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>G i\\<^esub>\\<rparr>\\<^esub>", "by fastforce"], ["proof (state)\nthis:\n  (\\<lambda>i\\<in>I.\n      inv\\<^bsub>G i\\<^esub> x i) \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n  x =\n  \\<one>\\<^bsub>DirProds G I\\<^esub>\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y\n                         \\<in> carrier (DirProds G I)\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I);\n        z \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z)\n 3. \\<And>x.\n       x \\<in> carrier (DirProds G I) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (DirProds G I).\n          y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x =\n          \\<one>\\<^bsub>DirProds G I\\<^esub>", "ultimately"], ["proof (chain)\npicking this:\n  (\\<lambda>i\\<in>I. inv\\<^bsub>G i\\<^esub> x i)\n  \\<in> carrier (DirProds G I)\n  (\\<lambda>i\\<in>I.\n      inv\\<^bsub>G i\\<^esub> x i) \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n  x =\n  \\<one>\\<^bsub>DirProds G I\\<^esub>", "show \"\\<exists>y\\<in>carrier (DirProds G I). y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x = \\<one>\\<^bsub>DirProds G I\\<^esub>\""], ["proof (prove)\nusing this:\n  (\\<lambda>i\\<in>I. inv\\<^bsub>G i\\<^esub> x i)\n  \\<in> carrier (DirProds G I)\n  (\\<lambda>i\\<in>I.\n      inv\\<^bsub>G i\\<^esub> x i) \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n  x =\n  \\<one>\\<^bsub>DirProds G I\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>carrier (DirProds G I).\n       y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x =\n       \\<one>\\<^bsub>DirProds G I\\<^esub>", "by blast"], ["proof (state)\nthis:\n  \\<exists>y\\<in>carrier (DirProds G I).\n     y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x =\n     \\<one>\\<^bsub>DirProds G I\\<^esub>\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y\n                         \\<in> carrier (DirProds G I)\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I);\n        z \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z)", "fix y"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y\n                         \\<in> carrier (DirProds G I)\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I);\n        z \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z)", "assume y: \"y \\<in> carrier (DirProds G I)\""], ["proof (state)\nthis:\n  y \\<in> carrier (DirProds G I)\n\ngoal (2 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y\n                         \\<in> carrier (DirProds G I)\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I);\n        z \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z)", "from DirProds_m_closed[OF x y assms]"], ["proof (chain)\npicking this:\n  (\\<And>i. i \\<in> I \\<Longrightarrow> i \\<in> I) \\<Longrightarrow>\n  x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y \\<in> carrier (DirProds G I)", "show m_closed: \"x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y \\<in> carrier (DirProds G I)\""], ["proof (prove)\nusing this:\n  (\\<And>i. i \\<in> I \\<Longrightarrow> i \\<in> I) \\<Longrightarrow>\n  x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y \\<in> carrier (DirProds G I)\n\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y \\<in> carrier (DirProds G I)", "by blast"], ["proof (state)\nthis:\n  x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y \\<in> carrier (DirProds G I)\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I);\n        z \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z)", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I);\n        z \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z)", "assume z: \"z \\<in> carrier (DirProds G I)\""], ["proof (state)\nthis:\n  z \\<in> carrier (DirProds G I)\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I);\n        z \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z)", "have \"\\<And>i. i \\<in> I \\<Longrightarrow> (x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z) i\n                    = (x \\<otimes>\\<^bsub>DirProds G I\\<^esub> (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z)) i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> I \\<Longrightarrow>\n       (x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n        y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n        z)\n        i =\n       (x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n        (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z))\n        i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> I \\<Longrightarrow>\n       (x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n        y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n        z)\n        i =\n       (x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n        (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z))\n        i", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> I \\<Longrightarrow>\n       (x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n        y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n        z)\n        i =\n       (x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n        (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z))\n        i", "assume i: \"i \\<in> I\""], ["proof (state)\nthis:\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> I \\<Longrightarrow>\n       (x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n        y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n        z)\n        i =\n       (x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n        (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z))\n        i", "have \"(x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z) i = (x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y) i \\<otimes>\\<^bsub>G i\\<^esub> z i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n     y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n     z)\n     i =\n    (x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y)\n     i \\<otimes>\\<^bsub>G i\\<^esub>\n    z i", "using assms"], ["proof (prove)\nusing this:\n  ?i \\<in> I \\<Longrightarrow> Group.group (G ?i)\n\ngoal (1 subgoal):\n 1. (x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n     y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n     z)\n     i =\n    (x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y)\n     i \\<otimes>\\<^bsub>G i\\<^esub>\n    z i", "by (simp add: comp_mult i m_closed z)"], ["proof (state)\nthis:\n  (x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n   y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n   z)\n   i =\n  (x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y) i \\<otimes>\\<^bsub>G i\\<^esub>\n  z i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> I \\<Longrightarrow>\n       (x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n        y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n        z)\n        i =\n       (x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n        (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z))\n        i", "also"], ["proof (state)\nthis:\n  (x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n   y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n   z)\n   i =\n  (x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y) i \\<otimes>\\<^bsub>G i\\<^esub>\n  z i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> I \\<Longrightarrow>\n       (x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n        y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n        z)\n        i =\n       (x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n        (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z))\n        i", "have \"\\<dots> = x i \\<otimes>\\<^bsub>G i\\<^esub> y i \\<otimes>\\<^bsub>G i\\<^esub> z i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y)\n     i \\<otimes>\\<^bsub>G i\\<^esub>\n    z i =\n    x i \\<otimes>\\<^bsub>G i\\<^esub> y i \\<otimes>\\<^bsub>G i\\<^esub> z i", "by (simp add: assms comp_mult i x y)"], ["proof (state)\nthis:\n  (x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y) i \\<otimes>\\<^bsub>G i\\<^esub>\n  z i =\n  x i \\<otimes>\\<^bsub>G i\\<^esub> y i \\<otimes>\\<^bsub>G i\\<^esub> z i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> I \\<Longrightarrow>\n       (x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n        y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n        z)\n        i =\n       (x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n        (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z))\n        i", "also"], ["proof (state)\nthis:\n  (x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y) i \\<otimes>\\<^bsub>G i\\<^esub>\n  z i =\n  x i \\<otimes>\\<^bsub>G i\\<^esub> y i \\<otimes>\\<^bsub>G i\\<^esub> z i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> I \\<Longrightarrow>\n       (x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n        y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n        z)\n        i =\n       (x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n        (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z))\n        i", "have \"\\<dots> = x i \\<otimes>\\<^bsub>G i\\<^esub> (y i \\<otimes>\\<^bsub>G i\\<^esub> z i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x i \\<otimes>\\<^bsub>G i\\<^esub> y i \\<otimes>\\<^bsub>G i\\<^esub> z i =\n    x i \\<otimes>\\<^bsub>G i\\<^esub> (y i \\<otimes>\\<^bsub>G i\\<^esub> z i)", "using i assms x y z"], ["proof (prove)\nusing this:\n  i \\<in> I\n  ?i \\<in> I \\<Longrightarrow> Group.group (G ?i)\n  x \\<in> carrier (DirProds G I)\n  y \\<in> carrier (DirProds G I)\n  z \\<in> carrier (DirProds G I)\n\ngoal (1 subgoal):\n 1. x i \\<otimes>\\<^bsub>G i\\<^esub> y i \\<otimes>\\<^bsub>G i\\<^esub> z i =\n    x i \\<otimes>\\<^bsub>G i\\<^esub> (y i \\<otimes>\\<^bsub>G i\\<^esub> z i)", "by (meson Group.group_def comp_in_carr monoid.m_assoc)"], ["proof (state)\nthis:\n  x i \\<otimes>\\<^bsub>G i\\<^esub> y i \\<otimes>\\<^bsub>G i\\<^esub> z i =\n  x i \\<otimes>\\<^bsub>G i\\<^esub> (y i \\<otimes>\\<^bsub>G i\\<^esub> z i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> I \\<Longrightarrow>\n       (x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n        y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n        z)\n        i =\n       (x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n        (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z))\n        i", "also"], ["proof (state)\nthis:\n  x i \\<otimes>\\<^bsub>G i\\<^esub> y i \\<otimes>\\<^bsub>G i\\<^esub> z i =\n  x i \\<otimes>\\<^bsub>G i\\<^esub> (y i \\<otimes>\\<^bsub>G i\\<^esub> z i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> I \\<Longrightarrow>\n       (x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n        y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n        z)\n        i =\n       (x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n        (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z))\n        i", "have \"\\<dots> = (x \\<otimes>\\<^bsub>DirProds G I\\<^esub> (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z)) i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x i \\<otimes>\\<^bsub>G i\\<^esub>\n    (y i \\<otimes>\\<^bsub>G i\\<^esub> z i) =\n    (x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n     (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z))\n     i", "by (simp add: DirProds_def i)"], ["proof (state)\nthis:\n  x i \\<otimes>\\<^bsub>G i\\<^esub> (y i \\<otimes>\\<^bsub>G i\\<^esub> z i) =\n  (x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n   (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z))\n   i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> I \\<Longrightarrow>\n       (x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n        y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n        z)\n        i =\n       (x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n        (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z))\n        i", "finally"], ["proof (chain)\npicking this:\n  (x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n   y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n   z)\n   i =\n  (x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n   (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z))\n   i", "show \"(x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z) i\n                = (x \\<otimes>\\<^bsub>DirProds G I\\<^esub> (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z)) i\""], ["proof (prove)\nusing this:\n  (x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n   y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n   z)\n   i =\n  (x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n   (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z))\n   i\n\ngoal (1 subgoal):\n 1. (x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n     y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n     z)\n     i =\n    (x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n     (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z))\n     i", "."], ["proof (state)\nthis:\n  (x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n   y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n   z)\n   i =\n  (x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n   (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z))\n   i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?i \\<in> I \\<Longrightarrow>\n  (x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n   y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n   z)\n   ?i =\n  (x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n   (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z))\n   ?i\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I);\n        z \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z)", "thus \"x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z = x \\<otimes>\\<^bsub>DirProds G I\\<^esub> (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z)\""], ["proof (prove)\nusing this:\n  ?i \\<in> I \\<Longrightarrow>\n  (x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n   y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n   z)\n   ?i =\n  (x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n   (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z))\n   ?i\n\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n    y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n    z =\n    x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n    (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z)", "unfolding DirProds_def"], ["proof (prove)\nusing this:\n  ?i \\<in> I \\<Longrightarrow>\n  (x \\<otimes>\\<^bsub>\\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> G), monoid.mult = \\<lambda>x y. \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>G i\\<^esub> y i, one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>G i\\<^esub>\\<rparr>\\<^esub>\n   y \\<otimes>\\<^bsub>\\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> G), monoid.mult = \\<lambda>x y. \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>G i\\<^esub> y i, one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>G i\\<^esub>\\<rparr>\\<^esub>\n   z)\n   ?i =\n  (x \\<otimes>\\<^bsub>\\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> G), monoid.mult = \\<lambda>x y. \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>G i\\<^esub> y i, one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>G i\\<^esub>\\<rparr>\\<^esub>\n   (y \\<otimes>\\<^bsub>\\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> G), monoid.mult = \\<lambda>x y. \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>G i\\<^esub> y i, one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>G i\\<^esub>\\<rparr>\\<^esub>\n    z))\n   ?i\n\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>\\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> G), monoid.mult = \\<lambda>x y. \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>G i\\<^esub> y i, one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>G i\\<^esub>\\<rparr>\\<^esub>\n    y \\<otimes>\\<^bsub>\\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> G), monoid.mult = \\<lambda>x y. \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>G i\\<^esub> y i, one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>G i\\<^esub>\\<rparr>\\<^esub>\n    z =\n    x \\<otimes>\\<^bsub>\\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> G), monoid.mult = \\<lambda>x y. \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>G i\\<^esub> y i, one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>G i\\<^esub>\\<rparr>\\<^esub>\n    (y \\<otimes>\\<^bsub>\\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> G), monoid.mult = \\<lambda>x y. \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>G i\\<^esub> y i, one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>G i\\<^esub>\\<rparr>\\<^esub>\n     z)", "by auto"], ["proof (state)\nthis:\n  x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n  y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n  z =\n  x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n  (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma DirProds_obtain_elem_carr:\n  assumes \"group (DirProds G I)\" \"i \\<in> I\" \"x \\<in> carrier (G i)\"\n  obtains k where \"k \\<in> carrier (DirProds G I)\" \"k i = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>k \\<in> carrier (DirProds G I); k i = x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>k \\<in> carrier (DirProds G I); k i = x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "interpret DP: group \"DirProds G I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Group.group (DirProds G I)", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>k \\<in> carrier (DirProds G I); k i = x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from comp_in_carr[OF DP.one_closed] DirProds_one'"], ["proof (chain)\npicking this:\n  ?i \\<in> I \\<Longrightarrow>\n  \\<one>\\<^bsub>DirProds G I\\<^esub> ?i \\<in> carrier (G ?i)\n  ?i \\<in> ?I \\<Longrightarrow>\n  \\<one>\\<^bsub>DirProds ?G ?I\\<^esub> ?i = \\<one>\\<^bsub>?G ?i\\<^esub>", "have ao: \"\\<forall>j\\<in>I. \\<one>\\<^bsub>G j\\<^esub> \\<in> carrier (G j)\""], ["proof (prove)\nusing this:\n  ?i \\<in> I \\<Longrightarrow>\n  \\<one>\\<^bsub>DirProds G I\\<^esub> ?i \\<in> carrier (G ?i)\n  ?i \\<in> ?I \\<Longrightarrow>\n  \\<one>\\<^bsub>DirProds ?G ?I\\<^esub> ?i = \\<one>\\<^bsub>?G ?i\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<forall>j\\<in>I. \\<one>\\<^bsub>G j\\<^esub> \\<in> carrier (G j)", "by metis"], ["proof (state)\nthis:\n  \\<forall>j\\<in>I. \\<one>\\<^bsub>G j\\<^esub> \\<in> carrier (G j)\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>k \\<in> carrier (DirProds G I); k i = x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "let ?r = \"restrict ((\\<lambda>j. \\<one>\\<^bsub>G j\\<^esub>)(i := x)) I\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>k \\<in> carrier (DirProds G I); k i = x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"?r \\<in> carrier (DirProds G I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict ((\\<lambda>j. \\<one>\\<^bsub>G j\\<^esub>)(i := x)) I\n    \\<in> carrier (DirProds G I)", "unfolding DirProds_def PiE_def Pi_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict ((\\<lambda>j. \\<one>\\<^bsub>G j\\<^esub>)(i := x)) I\n    \\<in> carrier\n           \\<lparr>carrier =\n                     {f. \\<forall>x.\n                            x \\<in> I \\<longrightarrow>\n                            f x \\<in> (carrier \\<circ> G) x} \\<inter>\n                     extensional I,\n              monoid.mult =\n                \\<lambda>x y.\n                   \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>G i\\<^esub> y i,\n              one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>G i\\<^esub>\\<rparr>", "using assms(2, 3) ao"], ["proof (prove)\nusing this:\n  i \\<in> I\n  x \\<in> carrier (G i)\n  \\<forall>j\\<in>I. \\<one>\\<^bsub>G j\\<^esub> \\<in> carrier (G j)\n\ngoal (1 subgoal):\n 1. restrict ((\\<lambda>j. \\<one>\\<^bsub>G j\\<^esub>)(i := x)) I\n    \\<in> carrier\n           \\<lparr>carrier =\n                     {f. \\<forall>x.\n                            x \\<in> I \\<longrightarrow>\n                            f x \\<in> (carrier \\<circ> G) x} \\<inter>\n                     extensional I,\n              monoid.mult =\n                \\<lambda>x y.\n                   \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>G i\\<^esub> y i,\n              one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>G i\\<^esub>\\<rparr>", "by auto"], ["proof (state)\nthis:\n  restrict ((\\<lambda>j. \\<one>\\<^bsub>G j\\<^esub>)(i := x)) I\n  \\<in> carrier (DirProds G I)\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>k \\<in> carrier (DirProds G I); k i = x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  restrict ((\\<lambda>j. \\<one>\\<^bsub>G j\\<^esub>)(i := x)) I\n  \\<in> carrier (DirProds G I)\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>k \\<in> carrier (DirProds G I); k i = x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"?r i = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict ((\\<lambda>j. \\<one>\\<^bsub>G j\\<^esub>)(i := x)) I i = x", "using assms(2)"], ["proof (prove)\nusing this:\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. restrict ((\\<lambda>j. \\<one>\\<^bsub>G j\\<^esub>)(i := x)) I i = x", "by simp"], ["proof (state)\nthis:\n  restrict ((\\<lambda>j. \\<one>\\<^bsub>G j\\<^esub>)(i := x)) I i = x\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>k \\<in> carrier (DirProds G I); k i = x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  restrict ((\\<lambda>j. \\<one>\\<^bsub>G j\\<^esub>)(i := x)) I\n  \\<in> carrier (DirProds G I)\n  restrict ((\\<lambda>j. \\<one>\\<^bsub>G j\\<^esub>)(i := x)) I i = x", "show \"(\\<And>k. \\<lbrakk>k \\<in> carrier (DirProds G I); k i = x\\<rbrakk> \\<Longrightarrow> thesis) \\<Longrightarrow> thesis\""], ["proof (prove)\nusing this:\n  restrict ((\\<lambda>j. \\<one>\\<^bsub>G j\\<^esub>)(i := x)) I\n  \\<in> carrier (DirProds G I)\n  restrict ((\\<lambda>j. \\<one>\\<^bsub>G j\\<^esub>)(i := x)) I i = x\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>k \\<in> carrier (DirProds G I); k i = x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (\\<And>k.\n      \\<lbrakk>k \\<in> carrier (DirProds G I); k i = x\\<rbrakk>\n      \\<Longrightarrow> thesis) \\<Longrightarrow>\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma DirProds_group_imp_groups:\n  assumes \"group (DirProds G I)\" and i: \"i \\<in> I\"\n  shows \"group (G i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Group.group (G i)", "proof (intro groupI)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (G i); y \\<in> carrier (G i)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>G i\\<^esub> y\n                         \\<in> carrier (G i)\n 2. \\<one>\\<^bsub>G i\\<^esub> \\<in> carrier (G i)\n 3. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (G i); y \\<in> carrier (G i);\n        z \\<in> carrier (G i)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>G i\\<^esub>\n                         y \\<otimes>\\<^bsub>G i\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>G i\\<^esub>\n                         (y \\<otimes>\\<^bsub>G i\\<^esub> z)\n 4. \\<And>x.\n       x \\<in> carrier (G i) \\<Longrightarrow>\n       \\<one>\\<^bsub>G i\\<^esub> \\<otimes>\\<^bsub>G i\\<^esub> x = x\n 5. \\<And>x.\n       x \\<in> carrier (G i) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (G i).\n          y \\<otimes>\\<^bsub>G i\\<^esub> x = \\<one>\\<^bsub>G i\\<^esub>", "let ?DP = \"DirProds G I\""], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (G i); y \\<in> carrier (G i)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>G i\\<^esub> y\n                         \\<in> carrier (G i)\n 2. \\<one>\\<^bsub>G i\\<^esub> \\<in> carrier (G i)\n 3. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (G i); y \\<in> carrier (G i);\n        z \\<in> carrier (G i)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>G i\\<^esub>\n                         y \\<otimes>\\<^bsub>G i\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>G i\\<^esub>\n                         (y \\<otimes>\\<^bsub>G i\\<^esub> z)\n 4. \\<And>x.\n       x \\<in> carrier (G i) \\<Longrightarrow>\n       \\<one>\\<^bsub>G i\\<^esub> \\<otimes>\\<^bsub>G i\\<^esub> x = x\n 5. \\<And>x.\n       x \\<in> carrier (G i) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (G i).\n          y \\<otimes>\\<^bsub>G i\\<^esub> x = \\<one>\\<^bsub>G i\\<^esub>", "interpret DP: group ?DP"], ["proof (prove)\ngoal (1 subgoal):\n 1. Group.group (DirProds G I)", "by fact"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (G i); y \\<in> carrier (G i)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>G i\\<^esub> y\n                         \\<in> carrier (G i)\n 2. \\<one>\\<^bsub>G i\\<^esub> \\<in> carrier (G i)\n 3. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (G i); y \\<in> carrier (G i);\n        z \\<in> carrier (G i)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>G i\\<^esub>\n                         y \\<otimes>\\<^bsub>G i\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>G i\\<^esub>\n                         (y \\<otimes>\\<^bsub>G i\\<^esub> z)\n 4. \\<And>x.\n       x \\<in> carrier (G i) \\<Longrightarrow>\n       \\<one>\\<^bsub>G i\\<^esub> \\<otimes>\\<^bsub>G i\\<^esub> x = x\n 5. \\<And>x.\n       x \\<in> carrier (G i) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (G i).\n          y \\<otimes>\\<^bsub>G i\\<^esub> x = \\<one>\\<^bsub>G i\\<^esub>", "show \"\\<one>\\<^bsub>G i\\<^esub> \\<in> carrier (G i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<one>\\<^bsub>G i\\<^esub> \\<in> carrier (G i)", "using DirProds_one' comp_in_carr[OF DP.one_closed i] i"], ["proof (prove)\nusing this:\n  ?i \\<in> ?I \\<Longrightarrow>\n  \\<one>\\<^bsub>DirProds ?G ?I\\<^esub> ?i = \\<one>\\<^bsub>?G ?i\\<^esub>\n  \\<one>\\<^bsub>DirProds G I\\<^esub> i \\<in> carrier (G i)\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. \\<one>\\<^bsub>G i\\<^esub> \\<in> carrier (G i)", "by metis"], ["proof (state)\nthis:\n  \\<one>\\<^bsub>G i\\<^esub> \\<in> carrier (G i)\n\ngoal (4 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (G i); y \\<in> carrier (G i)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>G i\\<^esub> y\n                         \\<in> carrier (G i)\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (G i); y \\<in> carrier (G i);\n        z \\<in> carrier (G i)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>G i\\<^esub>\n                         y \\<otimes>\\<^bsub>G i\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>G i\\<^esub>\n                         (y \\<otimes>\\<^bsub>G i\\<^esub> z)\n 3. \\<And>x.\n       x \\<in> carrier (G i) \\<Longrightarrow>\n       \\<one>\\<^bsub>G i\\<^esub> \\<otimes>\\<^bsub>G i\\<^esub> x = x\n 4. \\<And>x.\n       x \\<in> carrier (G i) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (G i).\n          y \\<otimes>\\<^bsub>G i\\<^esub> x = \\<one>\\<^bsub>G i\\<^esub>", "show \"x \\<otimes>\\<^bsub>G i\\<^esub> y \\<in> carrier (G i)\" if \"x \\<in> carrier (G i)\" \"y \\<in> carrier (G i)\" for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>G i\\<^esub> y \\<in> carrier (G i)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>G i\\<^esub> y \\<in> carrier (G i)", "from DirProds_obtain_elem_carr[OF assms that(1)]"], ["proof (chain)\npicking this:\n  (\\<And>k.\n      \\<lbrakk>k \\<in> carrier (DirProds G I); k i = x\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain k where k: \"k \\<in> carrier ?DP\" \"k i = x\""], ["proof (prove)\nusing this:\n  (\\<And>k.\n      \\<lbrakk>k \\<in> carrier (DirProds G I); k i = x\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>k \\<in> carrier (DirProds G I); k i = x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "."], ["proof (state)\nthis:\n  k \\<in> carrier (DirProds G I)\n  k i = x\n\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>G i\\<^esub> y \\<in> carrier (G i)", "from DirProds_obtain_elem_carr[OF assms that(2)]"], ["proof (chain)\npicking this:\n  (\\<And>k.\n      \\<lbrakk>k \\<in> carrier (DirProds G I); k i = y\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain l where l: \"l \\<in> carrier ?DP\" \"l i = y\""], ["proof (prove)\nusing this:\n  (\\<And>k.\n      \\<lbrakk>k \\<in> carrier (DirProds G I); k i = y\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>l \\<in> carrier (DirProds G I); l i = y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "."], ["proof (state)\nthis:\n  l \\<in> carrier (DirProds G I)\n  l i = y\n\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>G i\\<^esub> y \\<in> carrier (G i)", "have \"k \\<otimes>\\<^bsub>?DP\\<^esub> l \\<in> carrier ?DP\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<otimes>\\<^bsub>DirProds G I\\<^esub> l \\<in> carrier (DirProds G I)", "using k l"], ["proof (prove)\nusing this:\n  k \\<in> carrier (DirProds G I)\n  k i = x\n  l \\<in> carrier (DirProds G I)\n  l i = y\n\ngoal (1 subgoal):\n 1. k \\<otimes>\\<^bsub>DirProds G I\\<^esub> l \\<in> carrier (DirProds G I)", "by fast"], ["proof (state)\nthis:\n  k \\<otimes>\\<^bsub>DirProds G I\\<^esub> l \\<in> carrier (DirProds G I)\n\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>G i\\<^esub> y \\<in> carrier (G i)", "from comp_in_carr[OF this i] comp_mult[OF i]"], ["proof (chain)\npicking this:\n  (k \\<otimes>\\<^bsub>DirProds G I\\<^esub> l) i \\<in> carrier (G i)\n  (?x \\<otimes>\\<^bsub>DirProds ?G I\\<^esub> ?y) i =\n  ?x i \\<otimes>\\<^bsub>?G i\\<^esub> ?y i", "show ?thesis"], ["proof (prove)\nusing this:\n  (k \\<otimes>\\<^bsub>DirProds G I\\<^esub> l) i \\<in> carrier (G i)\n  (?x \\<otimes>\\<^bsub>DirProds ?G I\\<^esub> ?y) i =\n  ?x i \\<otimes>\\<^bsub>?G i\\<^esub> ?y i\n\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>G i\\<^esub> y \\<in> carrier (G i)", "using k l"], ["proof (prove)\nusing this:\n  (k \\<otimes>\\<^bsub>DirProds G I\\<^esub> l) i \\<in> carrier (G i)\n  (?x \\<otimes>\\<^bsub>DirProds ?G I\\<^esub> ?y) i =\n  ?x i \\<otimes>\\<^bsub>?G i\\<^esub> ?y i\n  k \\<in> carrier (DirProds G I)\n  k i = x\n  l \\<in> carrier (DirProds G I)\n  l i = y\n\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>G i\\<^esub> y \\<in> carrier (G i)", "by metis"], ["proof (state)\nthis:\n  x \\<otimes>\\<^bsub>G i\\<^esub> y \\<in> carrier (G i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?x1 \\<in> carrier (G i); ?y1 \\<in> carrier (G i)\\<rbrakk>\n  \\<Longrightarrow> ?x1 \\<otimes>\\<^bsub>G i\\<^esub> ?y1 \\<in> carrier (G i)\n\ngoal (3 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (G i); y \\<in> carrier (G i);\n        z \\<in> carrier (G i)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>G i\\<^esub>\n                         y \\<otimes>\\<^bsub>G i\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>G i\\<^esub>\n                         (y \\<otimes>\\<^bsub>G i\\<^esub> z)\n 2. \\<And>x.\n       x \\<in> carrier (G i) \\<Longrightarrow>\n       \\<one>\\<^bsub>G i\\<^esub> \\<otimes>\\<^bsub>G i\\<^esub> x = x\n 3. \\<And>x.\n       x \\<in> carrier (G i) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (G i).\n          y \\<otimes>\\<^bsub>G i\\<^esub> x = \\<one>\\<^bsub>G i\\<^esub>", "show \"x \\<otimes>\\<^bsub>G i\\<^esub> y \\<otimes>\\<^bsub>G i\\<^esub> z = x \\<otimes>\\<^bsub>G i\\<^esub> (y \\<otimes>\\<^bsub>G i\\<^esub> z)\"\n    if x: \"x \\<in> carrier (G i)\" and y: \"y \\<in> carrier (G i)\" and z: \"z \\<in> carrier (G i)\" for x y z"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>G i\\<^esub> y \\<otimes>\\<^bsub>G i\\<^esub> z =\n    x \\<otimes>\\<^bsub>G i\\<^esub> (y \\<otimes>\\<^bsub>G i\\<^esub> z)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>G i\\<^esub> y \\<otimes>\\<^bsub>G i\\<^esub> z =\n    x \\<otimes>\\<^bsub>G i\\<^esub> (y \\<otimes>\\<^bsub>G i\\<^esub> z)", "from DirProds_obtain_elem_carr[OF assms x]"], ["proof (chain)\npicking this:\n  (\\<And>k.\n      \\<lbrakk>k \\<in> carrier (DirProds G I); k i = x\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain k where k: \"k \\<in> carrier ?DP\" \"k i = x\""], ["proof (prove)\nusing this:\n  (\\<And>k.\n      \\<lbrakk>k \\<in> carrier (DirProds G I); k i = x\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>k \\<in> carrier (DirProds G I); k i = x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "."], ["proof (state)\nthis:\n  k \\<in> carrier (DirProds G I)\n  k i = x\n\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>G i\\<^esub> y \\<otimes>\\<^bsub>G i\\<^esub> z =\n    x \\<otimes>\\<^bsub>G i\\<^esub> (y \\<otimes>\\<^bsub>G i\\<^esub> z)", "from DirProds_obtain_elem_carr[OF assms y]"], ["proof (chain)\npicking this:\n  (\\<And>k.\n      \\<lbrakk>k \\<in> carrier (DirProds G I); k i = y\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain l where l: \"l \\<in> carrier ?DP\" \"l i = y\""], ["proof (prove)\nusing this:\n  (\\<And>k.\n      \\<lbrakk>k \\<in> carrier (DirProds G I); k i = y\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>l.\n        \\<lbrakk>l \\<in> carrier (DirProds G I); l i = y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "."], ["proof (state)\nthis:\n  l \\<in> carrier (DirProds G I)\n  l i = y\n\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>G i\\<^esub> y \\<otimes>\\<^bsub>G i\\<^esub> z =\n    x \\<otimes>\\<^bsub>G i\\<^esub> (y \\<otimes>\\<^bsub>G i\\<^esub> z)", "from DirProds_obtain_elem_carr[OF assms z]"], ["proof (chain)\npicking this:\n  (\\<And>k.\n      \\<lbrakk>k \\<in> carrier (DirProds G I); k i = z\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain m where m: \"m \\<in> carrier ?DP\" \"m i = z\""], ["proof (prove)\nusing this:\n  (\\<And>k.\n      \\<lbrakk>k \\<in> carrier (DirProds G I); k i = z\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        \\<lbrakk>m \\<in> carrier (DirProds G I); m i = z\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "."], ["proof (state)\nthis:\n  m \\<in> carrier (DirProds G I)\n  m i = z\n\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>G i\\<^esub> y \\<otimes>\\<^bsub>G i\\<^esub> z =\n    x \\<otimes>\\<^bsub>G i\\<^esub> (y \\<otimes>\\<^bsub>G i\\<^esub> z)", "have \"x \\<otimes>\\<^bsub>G i\\<^esub> y \\<otimes>\\<^bsub>G i\\<^esub> z = (k i) \\<otimes>\\<^bsub>G i\\<^esub> (l i) \\<otimes>\\<^bsub>G i\\<^esub> (m i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>G i\\<^esub> y \\<otimes>\\<^bsub>G i\\<^esub> z =\n    k i \\<otimes>\\<^bsub>G i\\<^esub> l i \\<otimes>\\<^bsub>G i\\<^esub> m i", "using k l m"], ["proof (prove)\nusing this:\n  k \\<in> carrier (DirProds G I)\n  k i = x\n  l \\<in> carrier (DirProds G I)\n  l i = y\n  m \\<in> carrier (DirProds G I)\n  m i = z\n\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>G i\\<^esub> y \\<otimes>\\<^bsub>G i\\<^esub> z =\n    k i \\<otimes>\\<^bsub>G i\\<^esub> l i \\<otimes>\\<^bsub>G i\\<^esub> m i", "by argo"], ["proof (state)\nthis:\n  x \\<otimes>\\<^bsub>G i\\<^esub> y \\<otimes>\\<^bsub>G i\\<^esub> z =\n  k i \\<otimes>\\<^bsub>G i\\<^esub> l i \\<otimes>\\<^bsub>G i\\<^esub> m i\n\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>G i\\<^esub> y \\<otimes>\\<^bsub>G i\\<^esub> z =\n    x \\<otimes>\\<^bsub>G i\\<^esub> (y \\<otimes>\\<^bsub>G i\\<^esub> z)", "also"], ["proof (state)\nthis:\n  x \\<otimes>\\<^bsub>G i\\<^esub> y \\<otimes>\\<^bsub>G i\\<^esub> z =\n  k i \\<otimes>\\<^bsub>G i\\<^esub> l i \\<otimes>\\<^bsub>G i\\<^esub> m i\n\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>G i\\<^esub> y \\<otimes>\\<^bsub>G i\\<^esub> z =\n    x \\<otimes>\\<^bsub>G i\\<^esub> (y \\<otimes>\\<^bsub>G i\\<^esub> z)", "have \"\\<dots> = (k \\<otimes>\\<^bsub>?DP\\<^esub> l \\<otimes>\\<^bsub>?DP\\<^esub> m) i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k i \\<otimes>\\<^bsub>G i\\<^esub> l i \\<otimes>\\<^bsub>G i\\<^esub> m i =\n    (k \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n     l \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n     m)\n     i", "using comp_mult[OF i] k l m"], ["proof (prove)\nusing this:\n  (?x \\<otimes>\\<^bsub>DirProds ?G I\\<^esub> ?y) i =\n  ?x i \\<otimes>\\<^bsub>?G i\\<^esub> ?y i\n  k \\<in> carrier (DirProds G I)\n  k i = x\n  l \\<in> carrier (DirProds G I)\n  l i = y\n  m \\<in> carrier (DirProds G I)\n  m i = z\n\ngoal (1 subgoal):\n 1. k i \\<otimes>\\<^bsub>G i\\<^esub> l i \\<otimes>\\<^bsub>G i\\<^esub> m i =\n    (k \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n     l \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n     m)\n     i", "by metis"], ["proof (state)\nthis:\n  k i \\<otimes>\\<^bsub>G i\\<^esub> l i \\<otimes>\\<^bsub>G i\\<^esub> m i =\n  (k \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n   l \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n   m)\n   i\n\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>G i\\<^esub> y \\<otimes>\\<^bsub>G i\\<^esub> z =\n    x \\<otimes>\\<^bsub>G i\\<^esub> (y \\<otimes>\\<^bsub>G i\\<^esub> z)", "also"], ["proof (state)\nthis:\n  k i \\<otimes>\\<^bsub>G i\\<^esub> l i \\<otimes>\\<^bsub>G i\\<^esub> m i =\n  (k \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n   l \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n   m)\n   i\n\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>G i\\<^esub> y \\<otimes>\\<^bsub>G i\\<^esub> z =\n    x \\<otimes>\\<^bsub>G i\\<^esub> (y \\<otimes>\\<^bsub>G i\\<^esub> z)", "have \"\\<dots> = (k \\<otimes>\\<^bsub>?DP\\<^esub> (l \\<otimes>\\<^bsub>?DP\\<^esub> m)) i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (k \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n     l \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n     m)\n     i =\n    (k \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n     (l \\<otimes>\\<^bsub>DirProds G I\\<^esub> m))\n     i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (k \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n     l \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n     m)\n     i =\n    (k \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n     (l \\<otimes>\\<^bsub>DirProds G I\\<^esub> m))\n     i", "have \"k \\<otimes>\\<^bsub>?DP\\<^esub> l \\<otimes>\\<^bsub>?DP\\<^esub> m = k \\<otimes>\\<^bsub>?DP\\<^esub> (l \\<otimes>\\<^bsub>?DP\\<^esub> m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n    l \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n    m =\n    k \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n    (l \\<otimes>\\<^bsub>DirProds G I\\<^esub> m)", "using DP.m_assoc[OF k(1) l(1) m(1)]"], ["proof (prove)\nusing this:\n  k \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n  l \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n  m =\n  k \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n  (l \\<otimes>\\<^bsub>DirProds G I\\<^esub> m)\n\ngoal (1 subgoal):\n 1. k \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n    l \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n    m =\n    k \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n    (l \\<otimes>\\<^bsub>DirProds G I\\<^esub> m)", "."], ["proof (state)\nthis:\n  k \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n  l \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n  m =\n  k \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n  (l \\<otimes>\\<^bsub>DirProds G I\\<^esub> m)\n\ngoal (1 subgoal):\n 1. (k \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n     l \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n     m)\n     i =\n    (k \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n     (l \\<otimes>\\<^bsub>DirProds G I\\<^esub> m))\n     i", "thus ?thesis"], ["proof (prove)\nusing this:\n  k \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n  l \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n  m =\n  k \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n  (l \\<otimes>\\<^bsub>DirProds G I\\<^esub> m)\n\ngoal (1 subgoal):\n 1. (k \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n     l \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n     m)\n     i =\n    (k \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n     (l \\<otimes>\\<^bsub>DirProds G I\\<^esub> m))\n     i", "by simp"], ["proof (state)\nthis:\n  (k \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n   l \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n   m)\n   i =\n  (k \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n   (l \\<otimes>\\<^bsub>DirProds G I\\<^esub> m))\n   i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (k \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n   l \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n   m)\n   i =\n  (k \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n   (l \\<otimes>\\<^bsub>DirProds G I\\<^esub> m))\n   i\n\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>G i\\<^esub> y \\<otimes>\\<^bsub>G i\\<^esub> z =\n    x \\<otimes>\\<^bsub>G i\\<^esub> (y \\<otimes>\\<^bsub>G i\\<^esub> z)", "also"], ["proof (state)\nthis:\n  (k \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n   l \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n   m)\n   i =\n  (k \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n   (l \\<otimes>\\<^bsub>DirProds G I\\<^esub> m))\n   i\n\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>G i\\<^esub> y \\<otimes>\\<^bsub>G i\\<^esub> z =\n    x \\<otimes>\\<^bsub>G i\\<^esub> (y \\<otimes>\\<^bsub>G i\\<^esub> z)", "have \"\\<dots> = (k i) \\<otimes>\\<^bsub>G i\\<^esub> ((l i) \\<otimes>\\<^bsub>G i\\<^esub> (m i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (k \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n     (l \\<otimes>\\<^bsub>DirProds G I\\<^esub> m))\n     i =\n    k i \\<otimes>\\<^bsub>G i\\<^esub> (l i \\<otimes>\\<^bsub>G i\\<^esub> m i)", "using comp_mult[OF i] k l m"], ["proof (prove)\nusing this:\n  (?x \\<otimes>\\<^bsub>DirProds ?G I\\<^esub> ?y) i =\n  ?x i \\<otimes>\\<^bsub>?G i\\<^esub> ?y i\n  k \\<in> carrier (DirProds G I)\n  k i = x\n  l \\<in> carrier (DirProds G I)\n  l i = y\n  m \\<in> carrier (DirProds G I)\n  m i = z\n\ngoal (1 subgoal):\n 1. (k \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n     (l \\<otimes>\\<^bsub>DirProds G I\\<^esub> m))\n     i =\n    k i \\<otimes>\\<^bsub>G i\\<^esub> (l i \\<otimes>\\<^bsub>G i\\<^esub> m i)", "by metis"], ["proof (state)\nthis:\n  (k \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n   (l \\<otimes>\\<^bsub>DirProds G I\\<^esub> m))\n   i =\n  k i \\<otimes>\\<^bsub>G i\\<^esub> (l i \\<otimes>\\<^bsub>G i\\<^esub> m i)\n\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>G i\\<^esub> y \\<otimes>\\<^bsub>G i\\<^esub> z =\n    x \\<otimes>\\<^bsub>G i\\<^esub> (y \\<otimes>\\<^bsub>G i\\<^esub> z)", "finally"], ["proof (chain)\npicking this:\n  x \\<otimes>\\<^bsub>G i\\<^esub> y \\<otimes>\\<^bsub>G i\\<^esub> z =\n  k i \\<otimes>\\<^bsub>G i\\<^esub> (l i \\<otimes>\\<^bsub>G i\\<^esub> m i)", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<otimes>\\<^bsub>G i\\<^esub> y \\<otimes>\\<^bsub>G i\\<^esub> z =\n  k i \\<otimes>\\<^bsub>G i\\<^esub> (l i \\<otimes>\\<^bsub>G i\\<^esub> m i)\n\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>G i\\<^esub> y \\<otimes>\\<^bsub>G i\\<^esub> z =\n    x \\<otimes>\\<^bsub>G i\\<^esub> (y \\<otimes>\\<^bsub>G i\\<^esub> z)", "using k l m"], ["proof (prove)\nusing this:\n  x \\<otimes>\\<^bsub>G i\\<^esub> y \\<otimes>\\<^bsub>G i\\<^esub> z =\n  k i \\<otimes>\\<^bsub>G i\\<^esub> (l i \\<otimes>\\<^bsub>G i\\<^esub> m i)\n  k \\<in> carrier (DirProds G I)\n  k i = x\n  l \\<in> carrier (DirProds G I)\n  l i = y\n  m \\<in> carrier (DirProds G I)\n  m i = z\n\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>G i\\<^esub> y \\<otimes>\\<^bsub>G i\\<^esub> z =\n    x \\<otimes>\\<^bsub>G i\\<^esub> (y \\<otimes>\\<^bsub>G i\\<^esub> z)", "by blast"], ["proof (state)\nthis:\n  x \\<otimes>\\<^bsub>G i\\<^esub> y \\<otimes>\\<^bsub>G i\\<^esub> z =\n  x \\<otimes>\\<^bsub>G i\\<^esub> (y \\<otimes>\\<^bsub>G i\\<^esub> z)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?x1 \\<in> carrier (G i); ?y1 \\<in> carrier (G i);\n   ?z1 \\<in> carrier (G i)\\<rbrakk>\n  \\<Longrightarrow> ?x1 \\<otimes>\\<^bsub>G i\\<^esub>\n                    ?y1 \\<otimes>\\<^bsub>G i\\<^esub>\n                    ?z1 =\n                    ?x1 \\<otimes>\\<^bsub>G i\\<^esub>\n                    (?y1 \\<otimes>\\<^bsub>G i\\<^esub> ?z1)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> carrier (G i) \\<Longrightarrow>\n       \\<one>\\<^bsub>G i\\<^esub> \\<otimes>\\<^bsub>G i\\<^esub> x = x\n 2. \\<And>x.\n       x \\<in> carrier (G i) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (G i).\n          y \\<otimes>\\<^bsub>G i\\<^esub> x = \\<one>\\<^bsub>G i\\<^esub>", "show \"\\<one>\\<^bsub>G i\\<^esub> \\<otimes>\\<^bsub>G i\\<^esub> x = x\" if \"x \\<in> carrier (G i)\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<one>\\<^bsub>G i\\<^esub> \\<otimes>\\<^bsub>G i\\<^esub> x = x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<one>\\<^bsub>G i\\<^esub> \\<otimes>\\<^bsub>G i\\<^esub> x = x", "from DirProds_obtain_elem_carr[OF assms that(1)]"], ["proof (chain)\npicking this:\n  (\\<And>k.\n      \\<lbrakk>k \\<in> carrier (DirProds G I); k i = x\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain k where k: \"k \\<in> carrier ?DP\" \"k i = x\""], ["proof (prove)\nusing this:\n  (\\<And>k.\n      \\<lbrakk>k \\<in> carrier (DirProds G I); k i = x\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>k \\<in> carrier (DirProds G I); k i = x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "."], ["proof (state)\nthis:\n  k \\<in> carrier (DirProds G I)\n  k i = x\n\ngoal (1 subgoal):\n 1. \\<one>\\<^bsub>G i\\<^esub> \\<otimes>\\<^bsub>G i\\<^esub> x = x", "hence \"\\<one>\\<^bsub>?DP\\<^esub> \\<otimes>\\<^bsub>?DP\\<^esub> k = k\""], ["proof (prove)\nusing this:\n  k \\<in> carrier (DirProds G I)\n  k i = x\n\ngoal (1 subgoal):\n 1. \\<one>\\<^bsub>DirProds G I\\<^esub> \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n    k =\n    k", "by simp"], ["proof (state)\nthis:\n  \\<one>\\<^bsub>DirProds G I\\<^esub> \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n  k =\n  k\n\ngoal (1 subgoal):\n 1. \\<one>\\<^bsub>G i\\<^esub> \\<otimes>\\<^bsub>G i\\<^esub> x = x", "with comp_mult k DirProds_one[OF DP.one_closed] that i"], ["proof (chain)\npicking this:\n  ?i \\<in> ?I \\<Longrightarrow>\n  (?x \\<otimes>\\<^bsub>DirProds ?G ?I\\<^esub> ?y) ?i =\n  ?x ?i \\<otimes>\\<^bsub>?G ?i\\<^esub> ?y ?i\n  k \\<in> carrier (DirProds G I)\n  k i = x\n  (\\<forall>i\\<in>I.\n      \\<one>\\<^bsub>DirProds G I\\<^esub> i = \\<one>\\<^bsub>G i\\<^esub>) =\n  (\\<one>\\<^bsub>DirProds G I\\<^esub> = \\<one>\\<^bsub>DirProds G I\\<^esub>)\n  x \\<in> carrier (G i)\n  i \\<in> I\n  \\<one>\\<^bsub>DirProds G I\\<^esub> \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n  k =\n  k", "show ?thesis"], ["proof (prove)\nusing this:\n  ?i \\<in> ?I \\<Longrightarrow>\n  (?x \\<otimes>\\<^bsub>DirProds ?G ?I\\<^esub> ?y) ?i =\n  ?x ?i \\<otimes>\\<^bsub>?G ?i\\<^esub> ?y ?i\n  k \\<in> carrier (DirProds G I)\n  k i = x\n  (\\<forall>i\\<in>I.\n      \\<one>\\<^bsub>DirProds G I\\<^esub> i = \\<one>\\<^bsub>G i\\<^esub>) =\n  (\\<one>\\<^bsub>DirProds G I\\<^esub> = \\<one>\\<^bsub>DirProds G I\\<^esub>)\n  x \\<in> carrier (G i)\n  i \\<in> I\n  \\<one>\\<^bsub>DirProds G I\\<^esub> \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n  k =\n  k\n\ngoal (1 subgoal):\n 1. \\<one>\\<^bsub>G i\\<^esub> \\<otimes>\\<^bsub>G i\\<^esub> x = x", "by metis"], ["proof (state)\nthis:\n  \\<one>\\<^bsub>G i\\<^esub> \\<otimes>\\<^bsub>G i\\<^esub> x = x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x1 \\<in> carrier (G i) \\<Longrightarrow>\n  \\<one>\\<^bsub>G i\\<^esub> \\<otimes>\\<^bsub>G i\\<^esub> ?x1 = ?x1\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier (G i) \\<Longrightarrow>\n       \\<exists>y\\<in>carrier (G i).\n          y \\<otimes>\\<^bsub>G i\\<^esub> x = \\<one>\\<^bsub>G i\\<^esub>", "show \"\\<exists>y\\<in>carrier (G i). y \\<otimes>\\<^bsub>G i\\<^esub> x = \\<one>\\<^bsub>G i\\<^esub>\" if \"x \\<in> carrier (G i)\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>carrier (G i).\n       y \\<otimes>\\<^bsub>G i\\<^esub> x = \\<one>\\<^bsub>G i\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>carrier (G i).\n       y \\<otimes>\\<^bsub>G i\\<^esub> x = \\<one>\\<^bsub>G i\\<^esub>", "from DirProds_obtain_elem_carr[OF assms that(1)]"], ["proof (chain)\npicking this:\n  (\\<And>k.\n      \\<lbrakk>k \\<in> carrier (DirProds G I); k i = x\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis", "obtain k where k: \"k \\<in> carrier ?DP\" \"k i = x\""], ["proof (prove)\nusing this:\n  (\\<And>k.\n      \\<lbrakk>k \\<in> carrier (DirProds G I); k i = x\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>k \\<in> carrier (DirProds G I); k i = x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "."], ["proof (state)\nthis:\n  k \\<in> carrier (DirProds G I)\n  k i = x\n\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>carrier (G i).\n       y \\<otimes>\\<^bsub>G i\\<^esub> x = \\<one>\\<^bsub>G i\\<^esub>", "hence ic: \"inv\\<^bsub>?DP\\<^esub> k \\<in> carrier ?DP\""], ["proof (prove)\nusing this:\n  k \\<in> carrier (DirProds G I)\n  k i = x\n\ngoal (1 subgoal):\n 1. inv\\<^bsub>DirProds G I\\<^esub> k \\<in> carrier (DirProds G I)", "by simp"], ["proof (state)\nthis:\n  inv\\<^bsub>DirProds G I\\<^esub> k \\<in> carrier (DirProds G I)\n\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>carrier (G i).\n       y \\<otimes>\\<^bsub>G i\\<^esub> x = \\<one>\\<^bsub>G i\\<^esub>", "have \"inv\\<^bsub>?DP\\<^esub> k \\<otimes>\\<^bsub>?DP\\<^esub> k = \\<one>\\<^bsub>?DP\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv\\<^bsub>DirProds G I\\<^esub> k \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n    k =\n    \\<one>\\<^bsub>DirProds G I\\<^esub>", "using k"], ["proof (prove)\nusing this:\n  k \\<in> carrier (DirProds G I)\n  k i = x\n\ngoal (1 subgoal):\n 1. inv\\<^bsub>DirProds G I\\<^esub> k \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n    k =\n    \\<one>\\<^bsub>DirProds G I\\<^esub>", "by simp"], ["proof (state)\nthis:\n  inv\\<^bsub>DirProds G I\\<^esub> k \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n  k =\n  \\<one>\\<^bsub>DirProds G I\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>carrier (G i).\n       y \\<otimes>\\<^bsub>G i\\<^esub> x = \\<one>\\<^bsub>G i\\<^esub>", "hence \"(inv\\<^bsub>?DP\\<^esub> k) i \\<otimes>\\<^bsub>G i\\<^esub> k i= \\<one>\\<^bsub>G i\\<^esub>\""], ["proof (prove)\nusing this:\n  inv\\<^bsub>DirProds G I\\<^esub> k \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n  k =\n  \\<one>\\<^bsub>DirProds G I\\<^esub>\n\ngoal (1 subgoal):\n 1. (inv\\<^bsub>DirProds G I\\<^esub> k) i \\<otimes>\\<^bsub>G i\\<^esub> k i =\n    \\<one>\\<^bsub>G i\\<^esub>", "using comp_mult[OF i] DirProds_one'[OF i]"], ["proof (prove)\nusing this:\n  inv\\<^bsub>DirProds G I\\<^esub> k \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n  k =\n  \\<one>\\<^bsub>DirProds G I\\<^esub>\n  (?x \\<otimes>\\<^bsub>DirProds ?G I\\<^esub> ?y) i =\n  ?x i \\<otimes>\\<^bsub>?G i\\<^esub> ?y i\n  \\<one>\\<^bsub>DirProds ?G I\\<^esub> i = \\<one>\\<^bsub>?G i\\<^esub>\n\ngoal (1 subgoal):\n 1. (inv\\<^bsub>DirProds G I\\<^esub> k) i \\<otimes>\\<^bsub>G i\\<^esub> k i =\n    \\<one>\\<^bsub>G i\\<^esub>", "by metis"], ["proof (state)\nthis:\n  (inv\\<^bsub>DirProds G I\\<^esub> k) i \\<otimes>\\<^bsub>G i\\<^esub> k i =\n  \\<one>\\<^bsub>G i\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>carrier (G i).\n       y \\<otimes>\\<^bsub>G i\\<^esub> x = \\<one>\\<^bsub>G i\\<^esub>", "with k(2) comp_in_carr[OF ic i]"], ["proof (chain)\npicking this:\n  k i = x\n  (inv\\<^bsub>DirProds G I\\<^esub> k) i \\<in> carrier (G i)\n  (inv\\<^bsub>DirProds G I\\<^esub> k) i \\<otimes>\\<^bsub>G i\\<^esub> k i =\n  \\<one>\\<^bsub>G i\\<^esub>", "show ?thesis"], ["proof (prove)\nusing this:\n  k i = x\n  (inv\\<^bsub>DirProds G I\\<^esub> k) i \\<in> carrier (G i)\n  (inv\\<^bsub>DirProds G I\\<^esub> k) i \\<otimes>\\<^bsub>G i\\<^esub> k i =\n  \\<one>\\<^bsub>G i\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<exists>y\\<in>carrier (G i).\n       y \\<otimes>\\<^bsub>G i\\<^esub> x = \\<one>\\<^bsub>G i\\<^esub>", "by blast"], ["proof (state)\nthis:\n  \\<exists>y\\<in>carrier (G i).\n     y \\<otimes>\\<^bsub>G i\\<^esub> x = \\<one>\\<^bsub>G i\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x1 \\<in> carrier (G i) \\<Longrightarrow>\n  \\<exists>y\\<in>carrier (G i).\n     y \\<otimes>\\<^bsub>G i\\<^esub> ?x1 = \\<one>\\<^bsub>G i\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma DirProds_group_iff: \"group (DirProds G I) \\<longleftrightarrow> (\\<forall>i\\<in>I. group (G i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Group.group (DirProds G I) = (\\<forall>i\\<in>I. Group.group (G i))", "using DirProds_is_group DirProds_group_imp_groups"], ["proof (prove)\nusing this:\n  (\\<And>i.\n      i \\<in> ?I \\<Longrightarrow> Group.group (?G i)) \\<Longrightarrow>\n  Group.group (DirProds ?G ?I)\n  \\<lbrakk>Group.group (DirProds ?G ?I); ?i \\<in> ?I\\<rbrakk>\n  \\<Longrightarrow> Group.group (?G ?i)\n\ngoal (1 subgoal):\n 1. Group.group (DirProds G I) = (\\<forall>i\\<in>I. Group.group (G i))", "by metis"], ["", "lemma comp_inv:\n  assumes \"group (DirProds G I)\" and x: \"x \\<in> carrier (DirProds G I)\" and i: \"i \\<in> I\"\n  shows \"(inv\\<^bsub>(DirProds G I)\\<^esub> x) i = inv\\<^bsub>(G i)\\<^esub> (x i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (inv\\<^bsub>DirProds G I\\<^esub> x) i = inv\\<^bsub>G i\\<^esub> x i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (inv\\<^bsub>DirProds G I\\<^esub> x) i = inv\\<^bsub>G i\\<^esub> x i", "interpret DP: group \"DirProds G I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Group.group (DirProds G I)", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. (inv\\<^bsub>DirProds G I\\<^esub> x) i = inv\\<^bsub>G i\\<^esub> x i", "interpret Gi: group \"G i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Group.group (G i)", "using DirProds_group_imp_groups[OF DP.is_group i]"], ["proof (prove)\nusing this:\n  Group.group (G i)\n\ngoal (1 subgoal):\n 1. Group.group (G i)", "."], ["proof (state)\ngoal (1 subgoal):\n 1. (inv\\<^bsub>DirProds G I\\<^esub> x) i = inv\\<^bsub>G i\\<^esub> x i", "have ixc: \"inv\\<^bsub>(DirProds G I)\\<^esub> x \\<in> carrier (DirProds G I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv\\<^bsub>DirProds G I\\<^esub> x \\<in> carrier (DirProds G I)", "using x"], ["proof (prove)\nusing this:\n  x \\<in> carrier (DirProds G I)\n\ngoal (1 subgoal):\n 1. inv\\<^bsub>DirProds G I\\<^esub> x \\<in> carrier (DirProds G I)", "by blast"], ["proof (state)\nthis:\n  inv\\<^bsub>DirProds G I\\<^esub> x \\<in> carrier (DirProds G I)\n\ngoal (1 subgoal):\n 1. (inv\\<^bsub>DirProds G I\\<^esub> x) i = inv\\<^bsub>G i\\<^esub> x i", "hence \"inv\\<^bsub>(DirProds G I)\\<^esub> x \\<otimes>\\<^bsub>DirProds G I\\<^esub> x = \\<one>\\<^bsub>DirProds G I\\<^esub>\""], ["proof (prove)\nusing this:\n  inv\\<^bsub>DirProds G I\\<^esub> x \\<in> carrier (DirProds G I)\n\ngoal (1 subgoal):\n 1. inv\\<^bsub>DirProds G I\\<^esub> x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n    x =\n    \\<one>\\<^bsub>DirProds G I\\<^esub>", "using x"], ["proof (prove)\nusing this:\n  inv\\<^bsub>DirProds G I\\<^esub> x \\<in> carrier (DirProds G I)\n  x \\<in> carrier (DirProds G I)\n\ngoal (1 subgoal):\n 1. inv\\<^bsub>DirProds G I\\<^esub> x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n    x =\n    \\<one>\\<^bsub>DirProds G I\\<^esub>", "by simp"], ["proof (state)\nthis:\n  inv\\<^bsub>DirProds G I\\<^esub> x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n  x =\n  \\<one>\\<^bsub>DirProds G I\\<^esub>\n\ngoal (1 subgoal):\n 1. (inv\\<^bsub>DirProds G I\\<^esub> x) i = inv\\<^bsub>G i\\<^esub> x i", "hence \"(inv\\<^bsub>(DirProds G I)\\<^esub> x \\<otimes>\\<^bsub>DirProds G I\\<^esub> x) i = \\<one>\\<^bsub>G i\\<^esub>\""], ["proof (prove)\nusing this:\n  inv\\<^bsub>DirProds G I\\<^esub> x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n  x =\n  \\<one>\\<^bsub>DirProds G I\\<^esub>\n\ngoal (1 subgoal):\n 1. (inv\\<^bsub>DirProds G I\\<^esub> x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n     x)\n     i =\n    \\<one>\\<^bsub>G i\\<^esub>", "by (simp add: DirProds_one' i)"], ["proof (state)\nthis:\n  (inv\\<^bsub>DirProds G I\\<^esub> x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n   x)\n   i =\n  \\<one>\\<^bsub>G i\\<^esub>\n\ngoal (1 subgoal):\n 1. (inv\\<^bsub>DirProds G I\\<^esub> x) i = inv\\<^bsub>G i\\<^esub> x i", "moreover"], ["proof (state)\nthis:\n  (inv\\<^bsub>DirProds G I\\<^esub> x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n   x)\n   i =\n  \\<one>\\<^bsub>G i\\<^esub>\n\ngoal (1 subgoal):\n 1. (inv\\<^bsub>DirProds G I\\<^esub> x) i = inv\\<^bsub>G i\\<^esub> x i", "from comp_mult[OF i]"], ["proof (chain)\npicking this:\n  (?x \\<otimes>\\<^bsub>DirProds ?G I\\<^esub> ?y) i =\n  ?x i \\<otimes>\\<^bsub>?G i\\<^esub> ?y i", "have \"(inv\\<^bsub>(DirProds G I)\\<^esub> x \\<otimes>\\<^bsub>DirProds G I\\<^esub> x) i = ((inv\\<^bsub>(DirProds G I)\\<^esub> x) i) \\<otimes>\\<^bsub>G i\\<^esub> (x i)\""], ["proof (prove)\nusing this:\n  (?x \\<otimes>\\<^bsub>DirProds ?G I\\<^esub> ?y) i =\n  ?x i \\<otimes>\\<^bsub>?G i\\<^esub> ?y i\n\ngoal (1 subgoal):\n 1. (inv\\<^bsub>DirProds G I\\<^esub> x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n     x)\n     i =\n    (inv\\<^bsub>DirProds G I\\<^esub> x) i \\<otimes>\\<^bsub>G i\\<^esub> x i", "by blast"], ["proof (state)\nthis:\n  (inv\\<^bsub>DirProds G I\\<^esub> x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n   x)\n   i =\n  (inv\\<^bsub>DirProds G I\\<^esub> x) i \\<otimes>\\<^bsub>G i\\<^esub> x i\n\ngoal (1 subgoal):\n 1. (inv\\<^bsub>DirProds G I\\<^esub> x) i = inv\\<^bsub>G i\\<^esub> x i", "ultimately"], ["proof (chain)\npicking this:\n  (inv\\<^bsub>DirProds G I\\<^esub> x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n   x)\n   i =\n  \\<one>\\<^bsub>G i\\<^esub>\n  (inv\\<^bsub>DirProds G I\\<^esub> x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n   x)\n   i =\n  (inv\\<^bsub>DirProds G I\\<^esub> x) i \\<otimes>\\<^bsub>G i\\<^esub> x i", "show ?thesis"], ["proof (prove)\nusing this:\n  (inv\\<^bsub>DirProds G I\\<^esub> x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n   x)\n   i =\n  \\<one>\\<^bsub>G i\\<^esub>\n  (inv\\<^bsub>DirProds G I\\<^esub> x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n   x)\n   i =\n  (inv\\<^bsub>DirProds G I\\<^esub> x) i \\<otimes>\\<^bsub>G i\\<^esub> x i\n\ngoal (1 subgoal):\n 1. (inv\\<^bsub>DirProds G I\\<^esub> x) i = inv\\<^bsub>G i\\<^esub> x i", "using x ixc"], ["proof (prove)\nusing this:\n  (inv\\<^bsub>DirProds G I\\<^esub> x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n   x)\n   i =\n  \\<one>\\<^bsub>G i\\<^esub>\n  (inv\\<^bsub>DirProds G I\\<^esub> x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n   x)\n   i =\n  (inv\\<^bsub>DirProds G I\\<^esub> x) i \\<otimes>\\<^bsub>G i\\<^esub> x i\n  x \\<in> carrier (DirProds G I)\n  inv\\<^bsub>DirProds G I\\<^esub> x \\<in> carrier (DirProds G I)\n\ngoal (1 subgoal):\n 1. (inv\\<^bsub>DirProds G I\\<^esub> x) i = inv\\<^bsub>G i\\<^esub> x i", "by (simp add: comp_in_carr[OF _ i] group.inv_equality)"], ["proof (state)\nthis:\n  (inv\\<^bsub>DirProds G I\\<^esub> x) i = inv\\<^bsub>G i\\<^esub> x i\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The same is true for abelian groups.\\<close>"], ["", "lemma DirProds_is_comm_group:\n  assumes \"\\<And>i. i \\<in> I \\<Longrightarrow> comm_group (G i)\"\n  shows \"comm_group (DirProds G I)\" (is \"comm_group ?DP\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. comm_group (DirProds G I)", "proof"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y\n                         \\<in> carrier (DirProds G I)\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I);\n        z \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z)\n 3. \\<one>\\<^bsub>DirProds G I\\<^esub> \\<in> carrier (DirProds G I)\n 4. \\<And>x.\n       x \\<in> carrier (DirProds G I) \\<Longrightarrow>\n       \\<one>\\<^bsub>DirProds G I\\<^esub> \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n       x =\n       x\n 5. \\<And>x.\n       x \\<in> carrier (DirProds G I) \\<Longrightarrow>\n       x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n       \\<one>\\<^bsub>DirProds G I\\<^esub> =\n       x\n 6. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y =\n                         y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x\n 7. carrier (DirProds G I) \\<subseteq> Units (DirProds G I)", "interpret group ?DP"], ["proof (prove)\ngoal (1 subgoal):\n 1. Group.group (DirProds G I)", "using assms DirProds_is_group"], ["proof (prove)\nusing this:\n  ?i \\<in> I \\<Longrightarrow> comm_group (G ?i)\n  (\\<And>i.\n      i \\<in> ?I \\<Longrightarrow> Group.group (?G i)) \\<Longrightarrow>\n  Group.group (DirProds ?G ?I)\n\ngoal (1 subgoal):\n 1. Group.group (DirProds G I)", "unfolding comm_group_def"], ["proof (prove)\nusing this:\n  ?i \\<in> I \\<Longrightarrow>\n  Group.comm_monoid (G ?i) \\<and> Group.group (G ?i)\n  (\\<And>i.\n      i \\<in> ?I \\<Longrightarrow> Group.group (?G i)) \\<Longrightarrow>\n  Group.group (DirProds ?G ?I)\n\ngoal (1 subgoal):\n 1. Group.group (DirProds G I)", "by metis"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y\n                         \\<in> carrier (DirProds G I)\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I);\n        z \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z)\n 3. \\<one>\\<^bsub>DirProds G I\\<^esub> \\<in> carrier (DirProds G I)\n 4. \\<And>x.\n       x \\<in> carrier (DirProds G I) \\<Longrightarrow>\n       \\<one>\\<^bsub>DirProds G I\\<^esub> \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n       x =\n       x\n 5. \\<And>x.\n       x \\<in> carrier (DirProds G I) \\<Longrightarrow>\n       x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n       \\<one>\\<^bsub>DirProds G I\\<^esub> =\n       x\n 6. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y =\n                         y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x\n 7. carrier (DirProds G I) \\<subseteq> Units (DirProds G I)", "show \"carrier ?DP \\<subseteq> Units ?DP\" \"\\<one>\\<^bsub>?DP\\<^esub> \\<in> carrier ?DP\""], ["proof (prove)\ngoal (1 subgoal):\n 1. carrier (DirProds G I) \\<subseteq> Units (DirProds G I) &&&\n    \\<one>\\<^bsub>DirProds G I\\<^esub> \\<in> carrier (DirProds G I)", "by simp_all"], ["proof (state)\nthis:\n  carrier (DirProds G I) \\<subseteq> Units (DirProds G I)\n  \\<one>\\<^bsub>DirProds G I\\<^esub> \\<in> carrier (DirProds G I)\n\ngoal (5 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y\n                         \\<in> carrier (DirProds G I)\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I);\n        z \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z)\n 3. \\<And>x.\n       x \\<in> carrier (DirProds G I) \\<Longrightarrow>\n       \\<one>\\<^bsub>DirProds G I\\<^esub> \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n       x =\n       x\n 4. \\<And>x.\n       x \\<in> carrier (DirProds G I) \\<Longrightarrow>\n       x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n       \\<one>\\<^bsub>DirProds G I\\<^esub> =\n       x\n 5. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y =\n                         y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x", "fix x"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y\n                         \\<in> carrier (DirProds G I)\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I);\n        z \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z)\n 3. \\<And>x.\n       x \\<in> carrier (DirProds G I) \\<Longrightarrow>\n       \\<one>\\<^bsub>DirProds G I\\<^esub> \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n       x =\n       x\n 4. \\<And>x.\n       x \\<in> carrier (DirProds G I) \\<Longrightarrow>\n       x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n       \\<one>\\<^bsub>DirProds G I\\<^esub> =\n       x\n 5. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y =\n                         y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x", "assume x[simp]: \"x \\<in> carrier ?DP\""], ["proof (state)\nthis:\n  x \\<in> carrier (DirProds G I)\n\ngoal (5 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y\n                         \\<in> carrier (DirProds G I)\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I);\n        z \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z)\n 3. \\<And>x.\n       x \\<in> carrier (DirProds G I) \\<Longrightarrow>\n       \\<one>\\<^bsub>DirProds G I\\<^esub> \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n       x =\n       x\n 4. \\<And>x.\n       x \\<in> carrier (DirProds G I) \\<Longrightarrow>\n       x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n       \\<one>\\<^bsub>DirProds G I\\<^esub> =\n       x\n 5. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y =\n                         y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x", "show \"\\<one>\\<^bsub>?DP\\<^esub> \\<otimes>\\<^bsub>?DP\\<^esub> x = x\" \"x \\<otimes>\\<^bsub>?DP\\<^esub> \\<one>\\<^bsub>?DP\\<^esub> = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<one>\\<^bsub>DirProds G I\\<^esub> \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n    x =\n    x &&&\n    x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n    \\<one>\\<^bsub>DirProds G I\\<^esub> =\n    x", "by simp_all"], ["proof (state)\nthis:\n  \\<one>\\<^bsub>DirProds G I\\<^esub> \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n  x =\n  x\n  x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n  \\<one>\\<^bsub>DirProds G I\\<^esub> =\n  x\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y\n                         \\<in> carrier (DirProds G I)\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I);\n        z \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z)\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y =\n                         y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x", "fix y"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y\n                         \\<in> carrier (DirProds G I)\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I);\n        z \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z)\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y =\n                         y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x", "assume y[simp]: \"y \\<in> carrier ?DP\""], ["proof (state)\nthis:\n  y \\<in> carrier (DirProds G I)\n\ngoal (3 subgoals):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y\n                         \\<in> carrier (DirProds G I)\n 2. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I);\n        z \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z)\n 3. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y =\n                         y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x", "show \"x \\<otimes>\\<^bsub>?DP\\<^esub> y \\<in> carrier ?DP\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y \\<in> carrier (DirProds G I)", "by simp"], ["proof (state)\nthis:\n  x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y \\<in> carrier (DirProds G I)\n\ngoal (2 subgoals):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I);\n        z \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y =\n                         y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x", "show \"x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y = y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y =\n    y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x", "proof (rule eq_parts_imp_eq[of _ G I])"], ["proof (state)\ngoal (3 subgoals):\n 1. x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y \\<in> carrier (DirProds G I)\n 2. y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x \\<in> carrier (DirProds G I)\n 3. \\<And>i.\n       i \\<in> I \\<Longrightarrow>\n       (x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y) i =\n       (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x) i", "show \"x \\<otimes>\\<^bsub>?DP\\<^esub> y \\<in> carrier ?DP\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y \\<in> carrier (DirProds G I)", "by simp"], ["proof (state)\nthis:\n  x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y \\<in> carrier (DirProds G I)\n\ngoal (2 subgoals):\n 1. y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x \\<in> carrier (DirProds G I)\n 2. \\<And>i.\n       i \\<in> I \\<Longrightarrow>\n       (x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y) i =\n       (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x) i", "show \"y \\<otimes>\\<^bsub>?DP\\<^esub> x \\<in> carrier ?DP\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x \\<in> carrier (DirProds G I)", "by simp"], ["proof (state)\nthis:\n  y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x \\<in> carrier (DirProds G I)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> I \\<Longrightarrow>\n       (x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y) i =\n       (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x) i", "show \"\\<And>i. i\\<in>I \\<Longrightarrow> (x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y) i = (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x) i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> I \\<Longrightarrow>\n       (x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y) i =\n       (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x) i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> I \\<Longrightarrow>\n       (x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y) i =\n       (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x) i", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> I \\<Longrightarrow>\n       (x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y) i =\n       (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x) i", "assume i: \"i \\<in> I\""], ["proof (state)\nthis:\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> I \\<Longrightarrow>\n       (x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y) i =\n       (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x) i", "interpret gi: comm_group \"(G i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. comm_group (G i)", "using assms(1)[OF i]"], ["proof (prove)\nusing this:\n  comm_group (G i)\n\ngoal (1 subgoal):\n 1. comm_group (G i)", "."], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> I \\<Longrightarrow>\n       (x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y) i =\n       (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x) i", "have \"(x \\<otimes>\\<^bsub>?DP\\<^esub> y) i = x i \\<otimes>\\<^bsub>G i\\<^esub> y i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y) i =\n    x i \\<otimes>\\<^bsub>G i\\<^esub> y i", "by (intro comp_mult[OF i])"], ["proof (state)\nthis:\n  (x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y) i =\n  x i \\<otimes>\\<^bsub>G i\\<^esub> y i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> I \\<Longrightarrow>\n       (x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y) i =\n       (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x) i", "also"], ["proof (state)\nthis:\n  (x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y) i =\n  x i \\<otimes>\\<^bsub>G i\\<^esub> y i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> I \\<Longrightarrow>\n       (x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y) i =\n       (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x) i", "have \"\\<dots> = y i \\<otimes>\\<^bsub>G i\\<^esub> x i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x i \\<otimes>\\<^bsub>G i\\<^esub> y i =\n    y i \\<otimes>\\<^bsub>G i\\<^esub> x i", "using comp_in_carr[OF _ i] x y gi.m_comm"], ["proof (prove)\nusing this:\n  ?x \\<in> carrier (DirProds ?G I) \\<Longrightarrow>\n  ?x i \\<in> carrier (?G i)\n  x \\<in> carrier (DirProds G I)\n  y \\<in> carrier (DirProds G I)\n  \\<lbrakk>?x \\<in> carrier (G i); ?y \\<in> carrier (G i)\\<rbrakk>\n  \\<Longrightarrow> ?x \\<otimes>\\<^bsub>G i\\<^esub> ?y =\n                    ?y \\<otimes>\\<^bsub>G i\\<^esub> ?x\n\ngoal (1 subgoal):\n 1. x i \\<otimes>\\<^bsub>G i\\<^esub> y i =\n    y i \\<otimes>\\<^bsub>G i\\<^esub> x i", "by metis"], ["proof (state)\nthis:\n  x i \\<otimes>\\<^bsub>G i\\<^esub> y i =\n  y i \\<otimes>\\<^bsub>G i\\<^esub> x i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> I \\<Longrightarrow>\n       (x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y) i =\n       (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x) i", "also"], ["proof (state)\nthis:\n  x i \\<otimes>\\<^bsub>G i\\<^esub> y i =\n  y i \\<otimes>\\<^bsub>G i\\<^esub> x i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> I \\<Longrightarrow>\n       (x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y) i =\n       (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x) i", "have \"\\<dots> = (y \\<otimes>\\<^bsub>?DP\\<^esub> x) i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y i \\<otimes>\\<^bsub>G i\\<^esub> x i =\n    (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x) i", "by (intro comp_mult[symmetric, OF i])"], ["proof (state)\nthis:\n  y i \\<otimes>\\<^bsub>G i\\<^esub> x i =\n  (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x) i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> I \\<Longrightarrow>\n       (x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y) i =\n       (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x) i", "finally"], ["proof (chain)\npicking this:\n  (x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y) i =\n  (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x) i", "show \"(x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y) i = (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x) i\""], ["proof (prove)\nusing this:\n  (x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y) i =\n  (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x) i\n\ngoal (1 subgoal):\n 1. (x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y) i =\n    (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x) i", "."], ["proof (state)\nthis:\n  (x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y) i =\n  (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x) i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?i1 \\<in> I \\<Longrightarrow>\n  (x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y) ?i1 =\n  (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x) ?i1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<otimes>\\<^bsub>DirProds G I\\<^esub> y =\n  y \\<otimes>\\<^bsub>DirProds G I\\<^esub> x\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I);\n        z \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z)", "fix z"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I);\n        z \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z)", "assume z[simp]: \"z \\<in> carrier ?DP\""], ["proof (state)\nthis:\n  z \\<in> carrier (DirProds G I)\n\ngoal (1 subgoal):\n 1. \\<And>x y z.\n       \\<lbrakk>x \\<in> carrier (DirProds G I);\n        y \\<in> carrier (DirProds G I);\n        z \\<in> carrier (DirProds G I)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         z =\n                         x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                         (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z)", "show \"x \\<otimes>\\<^bsub>?DP\\<^esub> y \\<otimes>\\<^bsub>?DP\\<^esub> z = x \\<otimes>\\<^bsub>?DP\\<^esub> (y \\<otimes>\\<^bsub>?DP\\<^esub> z)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n    y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n    z =\n    x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n    (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z)", "using m_assoc"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> carrier (DirProds G I); ?y \\<in> carrier (DirProds G I);\n   ?z \\<in> carrier (DirProds G I)\\<rbrakk>\n  \\<Longrightarrow> ?x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                    ?y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                    ?z =\n                    ?x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n                    (?y \\<otimes>\\<^bsub>DirProds G I\\<^esub> ?z)\n\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n    y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n    z =\n    x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n    (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z)", "by simp"], ["proof (state)\nthis:\n  x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n  y \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n  z =\n  x \\<otimes>\\<^bsub>DirProds G I\\<^esub>\n  (y \\<otimes>\\<^bsub>DirProds G I\\<^esub> z)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma DirProds_comm_group_imp_comm_groups:\n  assumes \"comm_group (DirProds G I)\" and i: \"i \\<in> I\"\n  shows \"comm_group (G i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. comm_group (G i)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. comm_group (G i)", "interpret DP: comm_group \"DirProds G I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. comm_group (DirProds G I)", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. comm_group (G i)", "interpret Gi: group \"G i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Group.group (G i)", "using DirProds_group_imp_groups[OF DP.is_group i]"], ["proof (prove)\nusing this:\n  Group.group (G i)\n\ngoal (1 subgoal):\n 1. Group.group (G i)", "."], ["proof (state)\ngoal (1 subgoal):\n 1. comm_group (G i)", "show \"comm_group (G i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. comm_group (G i)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (G i); y \\<in> carrier (G i)\\<rbrakk>\n       \\<Longrightarrow> x \\<otimes>\\<^bsub>G i\\<^esub> y =\n                         y \\<otimes>\\<^bsub>G i\\<^esub> x", "show \"x \\<otimes>\\<^bsub>G i\\<^esub> y = y \\<otimes>\\<^bsub>G i\\<^esub> x\" if x: \"x \\<in> carrier (G i)\" and y: \"y \\<in> carrier (G i)\" for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>G i\\<^esub> y = y \\<otimes>\\<^bsub>G i\\<^esub> x", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>G i\\<^esub> y = y \\<otimes>\\<^bsub>G i\\<^esub> x", "obtain a where a[simp]: \"a \\<in> carrier (DirProds G I)\" \"a i = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>a \\<in> carrier (DirProds G I); a i = x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using DirProds_obtain_elem_carr[OF DP.is_group i x]"], ["proof (prove)\nusing this:\n  (\\<And>k.\n      \\<lbrakk>k \\<in> carrier (DirProds G I); k i = x\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>a \\<in> carrier (DirProds G I); a i = x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "."], ["proof (state)\nthis:\n  a \\<in> carrier (DirProds G I)\n  a i = x\n\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>G i\\<^esub> y = y \\<otimes>\\<^bsub>G i\\<^esub> x", "obtain b where b[simp]: \"b \\<in> carrier (DirProds G I)\" \"b i = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<lbrakk>b \\<in> carrier (DirProds G I); b i = y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using DirProds_obtain_elem_carr[OF DP.is_group i y]"], ["proof (prove)\nusing this:\n  (\\<And>k.\n      \\<lbrakk>k \\<in> carrier (DirProds G I); k i = y\\<rbrakk>\n      \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<lbrakk>b \\<in> carrier (DirProds G I); b i = y\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "."], ["proof (state)\nthis:\n  b \\<in> carrier (DirProds G I)\n  b i = y\n\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>G i\\<^esub> y = y \\<otimes>\\<^bsub>G i\\<^esub> x", "have \"a \\<otimes>\\<^bsub>DirProds G I\\<^esub> b = b \\<otimes>\\<^bsub>DirProds G I\\<^esub> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<otimes>\\<^bsub>DirProds G I\\<^esub> b =\n    b \\<otimes>\\<^bsub>DirProds G I\\<^esub> a", "using DP.m_comm"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> carrier (DirProds G I);\n   ?y \\<in> carrier (DirProds G I)\\<rbrakk>\n  \\<Longrightarrow> ?x \\<otimes>\\<^bsub>DirProds G I\\<^esub> ?y =\n                    ?y \\<otimes>\\<^bsub>DirProds G I\\<^esub> ?x\n\ngoal (1 subgoal):\n 1. a \\<otimes>\\<^bsub>DirProds G I\\<^esub> b =\n    b \\<otimes>\\<^bsub>DirProds G I\\<^esub> a", "by simp"], ["proof (state)\nthis:\n  a \\<otimes>\\<^bsub>DirProds G I\\<^esub> b =\n  b \\<otimes>\\<^bsub>DirProds G I\\<^esub> a\n\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>G i\\<^esub> y = y \\<otimes>\\<^bsub>G i\\<^esub> x", "hence \"(a \\<otimes>\\<^bsub>DirProds G I\\<^esub> b) i = (b \\<otimes>\\<^bsub>DirProds G I\\<^esub> a) i\""], ["proof (prove)\nusing this:\n  a \\<otimes>\\<^bsub>DirProds G I\\<^esub> b =\n  b \\<otimes>\\<^bsub>DirProds G I\\<^esub> a\n\ngoal (1 subgoal):\n 1. (a \\<otimes>\\<^bsub>DirProds G I\\<^esub> b) i =\n    (b \\<otimes>\\<^bsub>DirProds G I\\<^esub> a) i", "by argo"], ["proof (state)\nthis:\n  (a \\<otimes>\\<^bsub>DirProds G I\\<^esub> b) i =\n  (b \\<otimes>\\<^bsub>DirProds G I\\<^esub> a) i\n\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>G i\\<^esub> y = y \\<otimes>\\<^bsub>G i\\<^esub> x", "with comp_mult[OF i]"], ["proof (chain)\npicking this:\n  (?x \\<otimes>\\<^bsub>DirProds ?G I\\<^esub> ?y) i =\n  ?x i \\<otimes>\\<^bsub>?G i\\<^esub> ?y i\n  (a \\<otimes>\\<^bsub>DirProds G I\\<^esub> b) i =\n  (b \\<otimes>\\<^bsub>DirProds G I\\<^esub> a) i", "have \"a i \\<otimes>\\<^bsub>G i\\<^esub> b i = b i \\<otimes>\\<^bsub>G i\\<^esub> a i\""], ["proof (prove)\nusing this:\n  (?x \\<otimes>\\<^bsub>DirProds ?G I\\<^esub> ?y) i =\n  ?x i \\<otimes>\\<^bsub>?G i\\<^esub> ?y i\n  (a \\<otimes>\\<^bsub>DirProds G I\\<^esub> b) i =\n  (b \\<otimes>\\<^bsub>DirProds G I\\<^esub> a) i\n\ngoal (1 subgoal):\n 1. a i \\<otimes>\\<^bsub>G i\\<^esub> b i =\n    b i \\<otimes>\\<^bsub>G i\\<^esub> a i", "by metis"], ["proof (state)\nthis:\n  a i \\<otimes>\\<^bsub>G i\\<^esub> b i =\n  b i \\<otimes>\\<^bsub>G i\\<^esub> a i\n\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>G i\\<^esub> y = y \\<otimes>\\<^bsub>G i\\<^esub> x", "with a b"], ["proof (chain)\npicking this:\n  a \\<in> carrier (DirProds G I)\n  a i = x\n  b \\<in> carrier (DirProds G I)\n  b i = y\n  a i \\<otimes>\\<^bsub>G i\\<^esub> b i =\n  b i \\<otimes>\\<^bsub>G i\\<^esub> a i", "show \"x \\<otimes>\\<^bsub>G i\\<^esub> y = y \\<otimes>\\<^bsub>G i\\<^esub> x\""], ["proof (prove)\nusing this:\n  a \\<in> carrier (DirProds G I)\n  a i = x\n  b \\<in> carrier (DirProds G I)\n  b i = y\n  a i \\<otimes>\\<^bsub>G i\\<^esub> b i =\n  b i \\<otimes>\\<^bsub>G i\\<^esub> a i\n\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>G i\\<^esub> y = y \\<otimes>\\<^bsub>G i\\<^esub> x", "by blast"], ["proof (state)\nthis:\n  x \\<otimes>\\<^bsub>G i\\<^esub> y = y \\<otimes>\\<^bsub>G i\\<^esub> x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?x1 \\<in> carrier (G i); ?y1 \\<in> carrier (G i)\\<rbrakk>\n  \\<Longrightarrow> ?x1 \\<otimes>\\<^bsub>G i\\<^esub> ?y1 =\n                    ?y1 \\<otimes>\\<^bsub>G i\\<^esub> ?x1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  comm_group (G i)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma DirProds_comm_group_iff: \"comm_group (DirProds G I) \\<longleftrightarrow> (\\<forall>i\\<in>I. comm_group (G i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. comm_group (DirProds G I) = (\\<forall>i\\<in>I. comm_group (G i))", "using DirProds_is_comm_group DirProds_comm_group_imp_comm_groups"], ["proof (prove)\nusing this:\n  (\\<And>i.\n      i \\<in> ?I \\<Longrightarrow> comm_group (?G i)) \\<Longrightarrow>\n  comm_group (DirProds ?G ?I)\n  \\<lbrakk>comm_group (DirProds ?G ?I); ?i \\<in> ?I\\<rbrakk>\n  \\<Longrightarrow> comm_group (?G ?i)\n\ngoal (1 subgoal):\n 1. comm_group (DirProds G I) = (\\<forall>i\\<in>I. comm_group (G i))", "by metis"], ["", "text \\<open>And also for finite groups.\\<close>"], ["", "lemma DirProds_is_finite_group:\n  assumes \"\\<And>i. i\\<in>I \\<Longrightarrow> finite_group (G i)\" \"finite I\"\n  shows \"finite_group (DirProds G I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_group (DirProds G I)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite_group (DirProds G I)", "have \"group (G i)\" if \"i\\<in>I\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. Group.group (G i)", "using assms(1)[OF that]"], ["proof (prove)\nusing this:\n  finite_group (G i)\n\ngoal (1 subgoal):\n 1. Group.group (G i)", "unfolding finite_group_def"], ["proof (prove)\nusing this:\n  Group.group (G i) \\<and> finite_group_axioms (G i)\n\ngoal (1 subgoal):\n 1. Group.group (G i)", "by blast"], ["proof (state)\nthis:\n  ?i \\<in> I \\<Longrightarrow> Group.group (G ?i)\n\ngoal (1 subgoal):\n 1. finite_group (DirProds G I)", "from DirProds_is_group[OF this]"], ["proof (chain)\npicking this:\n  (\\<And>i. i \\<in> ?I \\<Longrightarrow> ?i1 i \\<in> I) \\<Longrightarrow>\n  Group.group (DirProds (\\<lambda>i. G (?i1 i)) ?I)", "interpret DP: group \"DirProds G I\""], ["proof (prove)\nusing this:\n  (\\<And>i. i \\<in> ?I \\<Longrightarrow> ?i1 i \\<in> I) \\<Longrightarrow>\n  Group.group (DirProds (\\<lambda>i. G (?i1 i)) ?I)\n\ngoal (1 subgoal):\n 1. Group.group (DirProds G I)", "by fast"], ["proof (state)\ngoal (1 subgoal):\n 1. finite_group (DirProds G I)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_group (DirProds G I)", "proof(unfold_locales)"], ["proof (state)\ngoal (1 subgoal):\n 1. finite (carrier (DirProds G I))", "have \"order (DirProds G I) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. order (DirProds G I) \\<noteq> 0", "proof(unfold DirProds_order[OF assms(2)])"], ["proof (state)\ngoal (1 subgoal):\n 1. prod (order \\<circ> G) I \\<noteq> 0", "have \"(order \\<circ> G) i \\<noteq> 0\" if \"i\\<in>I\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. (order \\<circ> G) i \\<noteq> 0", "using assms(1)[OF that]"], ["proof (prove)\nusing this:\n  finite_group (G i)\n\ngoal (1 subgoal):\n 1. (order \\<circ> G) i \\<noteq> 0", "by (simp add: finite_group.order_gt_0)"], ["proof (state)\nthis:\n  ?i1 \\<in> I \\<Longrightarrow> (order \\<circ> G) ?i1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. prod (order \\<circ> G) I \\<noteq> 0", "thus \"prod (order \\<circ> G) I \\<noteq> 0\""], ["proof (prove)\nusing this:\n  ?i1 \\<in> I \\<Longrightarrow> (order \\<circ> G) ?i1 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. prod (order \\<circ> G) I \\<noteq> 0", "by (simp add: assms(2))"], ["proof (state)\nthis:\n  prod (order \\<circ> G) I \\<noteq> 0\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  order (DirProds G I) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. finite (carrier (DirProds G I))", "thus \"finite (carrier (DirProds G I))\""], ["proof (prove)\nusing this:\n  order (DirProds G I) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. finite (carrier (DirProds G I))", "unfolding order_def"], ["proof (prove)\nusing this:\n  card (carrier (DirProds G I)) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. finite (carrier (DirProds G I))", "by (meson card.infinite)"], ["proof (state)\nthis:\n  finite (carrier (DirProds G I))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite_group (DirProds G I)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma DirProds_finite_imp_finite_groups:\n  assumes \"finite_group (DirProds G I)\" \"finite I\"\n  shows \"\\<And>i. i\\<in>I \\<Longrightarrow> finite_group (G i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> I \\<Longrightarrow> finite_group (G i)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> I \\<Longrightarrow> finite_group (G i)", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> I \\<Longrightarrow> finite_group (G i)", "assume i: \"i \\<in> I\""], ["proof (state)\nthis:\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> I \\<Longrightarrow> finite_group (G i)", "interpret DP: finite_group \"DirProds G I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_group (DirProds G I)", "by fact"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> I \\<Longrightarrow> finite_group (G i)", "interpret group \"G i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Group.group (G i)", "by (rule DirProds_group_imp_groups[OF DP.is_group i])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> I \\<Longrightarrow> finite_group (G i)", "show \"finite_group (G i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_group (G i)", "proof(unfold_locales)"], ["proof (state)\ngoal (1 subgoal):\n 1. finite (carrier (G i))", "have oDP: \"order (DirProds G I) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. order (DirProds G I) \\<noteq> 0", "by blast"], ["proof (state)\nthis:\n  order (DirProds G I) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. finite (carrier (G i))", "with DirProds_order[OF assms(2), of G]"], ["proof (chain)\npicking this:\n  order (DirProds G I) = prod (order \\<circ> G) I\n  order (DirProds G I) \\<noteq> 0", "have \"order (G i) \\<noteq> 0\""], ["proof (prove)\nusing this:\n  order (DirProds G I) = prod (order \\<circ> G) I\n  order (DirProds G I) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. order (G i) \\<noteq> 0", "using i assms(2)"], ["proof (prove)\nusing this:\n  order (DirProds G I) = prod (order \\<circ> G) I\n  order (DirProds G I) \\<noteq> 0\n  i \\<in> I\n  finite I\n\ngoal (1 subgoal):\n 1. order (G i) \\<noteq> 0", "by force"], ["proof (state)\nthis:\n  order (G i) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. finite (carrier (G i))", "thus \"finite (carrier (G i))\""], ["proof (prove)\nusing this:\n  order (G i) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. finite (carrier (G i))", "unfolding order_def"], ["proof (prove)\nusing this:\n  card (carrier (G i)) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. finite (carrier (G i))", "by (meson card_eq_0_iff)"], ["proof (state)\nthis:\n  finite (carrier (G i))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite_group (G i)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma DirProds_finite_group_iff:\n  assumes \"finite I\"\n  shows \"finite_group (DirProds G I) \\<longleftrightarrow> (\\<forall>i\\<in>I. finite_group (G i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_group (DirProds G I) = (\\<forall>i\\<in>I. finite_group (G i))", "using DirProds_is_finite_group DirProds_finite_imp_finite_groups assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>i. i \\<in> ?I \\<Longrightarrow> finite_group (?G i);\n   finite ?I\\<rbrakk>\n  \\<Longrightarrow> finite_group (DirProds ?G ?I)\n  \\<lbrakk>finite_group (DirProds ?G ?I); finite ?I; ?i \\<in> ?I\\<rbrakk>\n  \\<Longrightarrow> finite_group (?G ?i)\n  finite I\n\ngoal (1 subgoal):\n 1. finite_group (DirProds G I) = (\\<forall>i\\<in>I. finite_group (G i))", "by metis"], ["", "lemma DirProds_finite_comm_group_iff:\n  assumes \"finite I\"\n  shows \"finite_comm_group (DirProds G I) \\<longleftrightarrow> (\\<forall>i\\<in>I. finite_comm_group (G i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite_comm_group (DirProds G I) =\n    (\\<forall>i\\<in>I. finite_comm_group (G i))", "using DirProds_finite_group_iff[OF assms] DirProds_comm_group_iff"], ["proof (prove)\nusing this:\n  finite_group (DirProds ?G I) = (\\<forall>i\\<in>I. finite_group (?G i))\n  comm_group (DirProds ?G ?I) = (\\<forall>i\\<in>?I. comm_group (?G i))\n\ngoal (1 subgoal):\n 1. finite_comm_group (DirProds G I) =\n    (\\<forall>i\\<in>I. finite_comm_group (G i))", "unfolding finite_comm_group_def"], ["proof (prove)\nusing this:\n  finite_group (DirProds ?G I) = (\\<forall>i\\<in>I. finite_group (?G i))\n  comm_group (DirProds ?G ?I) = (\\<forall>i\\<in>?I. comm_group (?G i))\n\ngoal (1 subgoal):\n 1. (finite_group (DirProds G I) \\<and> comm_group (DirProds G I)) =\n    (\\<forall>i\\<in>I. finite_group (G i) \\<and> comm_group (G i))", "by fast"], ["", "text \\<open>If a group is an internal direct product of a family of subgroups, it is isomorphic to the\ndirect product of these subgroups.\\<close>"], ["", "lemma (in comm_group) subgroup_iso_DirProds_IDirProds:\n  assumes \"subgroup J G\" \"is_idirprod J S I\" \"finite I\"\n  shows \"(\\<lambda>x. \\<Otimes>\\<^bsub>G\\<^esub>i\\<in>I. x i) \\<in> iso (DirProds (\\<lambda>i. G\\<lparr>carrier := (S i)\\<rparr>) I) (G\\<lparr>carrier := J\\<rparr>)\"\n(is \"?fp \\<in> iso ?DP ?J\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. finprod G x I)\n    \\<in> Group.iso\n           (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n           (G\\<lparr>carrier := J\\<rparr>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. finprod G x I)\n    \\<in> Group.iso\n           (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n           (G\\<lparr>carrier := J\\<rparr>)", "from assms(2)"], ["proof (chain)\npicking this:\n  is_idirprod J S I", "have assm: \"J = IDirProds G S I\"\n                           \"compl_fam S I\""], ["proof (prove)\nusing this:\n  is_idirprod J S I\n\ngoal (1 subgoal):\n 1. J = IDirProds G S I &&& compl_fam S I", "unfolding is_idirprod_def"], ["proof (prove)\nusing this:\n  (\\<forall>i\\<in>I. S i \\<lhd> G) \\<and>\n  J = IDirProds G S I \\<and> compl_fam S I\n\ngoal (1 subgoal):\n 1. J = IDirProds G S I &&& compl_fam S I", "by auto"], ["proof (state)\nthis:\n  J = IDirProds G S I\n  compl_fam S I\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. finprod G x I)\n    \\<in> Group.iso\n           (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n           (G\\<lparr>carrier := J\\<rparr>)", "from assms(1, 2)"], ["proof (chain)\npicking this:\n  subgroup J G\n  is_idirprod J S I", "have assm': \"\\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) (G\\<lparr>carrier := J\\<rparr>)\""], ["proof (prove)\nusing this:\n  subgroup J G\n  is_idirprod J S I\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> I \\<Longrightarrow>\n       subgroup (S i) (G\\<lparr>carrier := J\\<rparr>)", "using normal_imp_subgroup subgroup_incl"], ["proof (prove)\nusing this:\n  subgroup J G\n  is_idirprod J S I\n  ?H \\<lhd> ?G \\<Longrightarrow> subgroup ?H ?G\n  \\<lbrakk>subgroup ?I G; subgroup ?J G; ?I \\<subseteq> ?J\\<rbrakk>\n  \\<Longrightarrow> subgroup ?I (G\\<lparr>carrier := ?J\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> I \\<Longrightarrow>\n       subgroup (S i) (G\\<lparr>carrier := J\\<rparr>)", "by (metis IDirProds_incl assms(2) is_idirprod_def)"], ["proof (state)\nthis:\n  ?i2 \\<in> I \\<Longrightarrow>\n  subgroup (S ?i2) (G\\<lparr>carrier := J\\<rparr>)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. finprod G x I)\n    \\<in> Group.iso\n           (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n           (G\\<lparr>carrier := J\\<rparr>)", "interpret J: comm_group ?J"], ["proof (prove)\ngoal (1 subgoal):\n 1. comm_group (G\\<lparr>carrier := J\\<rparr>)", "using subgroup_is_comm_group[OF assms(1)]"], ["proof (prove)\nusing this:\n  comm_group (G\\<lparr>carrier := J\\<rparr>)\n\ngoal (1 subgoal):\n 1. comm_group (G\\<lparr>carrier := J\\<rparr>)", "."], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. finprod G x I)\n    \\<in> Group.iso\n           (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n           (G\\<lparr>carrier := J\\<rparr>)", "interpret DP: comm_group ?DP"], ["proof (prove)\ngoal (1 subgoal):\n 1. comm_group (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)", "by (intro DirProds_is_comm_group; use J.subgroup_is_comm_group[OF assm'] in simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. finprod G x I)\n    \\<in> Group.iso\n           (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n           (G\\<lparr>carrier := J\\<rparr>)", "have inJ: \"S i \\<subseteq> J\" if \"i \\<in> I\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. S i \\<subseteq> J", "using subgroup.subset[OF assm'[OF that]]"], ["proof (prove)\nusing this:\n  S i \\<subseteq> carrier (G\\<lparr>carrier := J\\<rparr>)\n\ngoal (1 subgoal):\n 1. S i \\<subseteq> J", "by simp"], ["proof (state)\nthis:\n  ?i2 \\<in> I \\<Longrightarrow> S ?i2 \\<subseteq> J\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. finprod G x I)\n    \\<in> Group.iso\n           (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n           (G\\<lparr>carrier := J\\<rparr>)", "have hom: \"?fp \\<in> hom ?DP ?J\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. finprod G x I)\n    \\<in> hom (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n           (G\\<lparr>carrier := J\\<rparr>)", "proof (rule homI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> carrier\n                (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>)\n                  I) \\<Longrightarrow>\n       finprod G x I \\<in> carrier (G\\<lparr>carrier := J\\<rparr>)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier\n                         (DirProds\n                           (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I);\n        y \\<in> carrier\n                 (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>)\n                   I)\\<rbrakk>\n       \\<Longrightarrow> finprod G\n                          (x \\<otimes>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>\n                           y)\n                          I =\n                         finprod G x\n                          I \\<otimes>\\<^bsub>G\\<lparr>carrier := J\\<rparr>\\<^esub>\n                         finprod G y I", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> carrier\n                (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>)\n                  I) \\<Longrightarrow>\n       finprod G x I \\<in> carrier (G\\<lparr>carrier := J\\<rparr>)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier\n                         (DirProds\n                           (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I);\n        y \\<in> carrier\n                 (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>)\n                   I)\\<rbrakk>\n       \\<Longrightarrow> finprod G\n                          (x \\<otimes>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>\n                           y)\n                          I =\n                         finprod G x\n                          I \\<otimes>\\<^bsub>G\\<lparr>carrier := J\\<rparr>\\<^esub>\n                         finprod G y I", "assume x[simp]: \"x \\<in> carrier ?DP\""], ["proof (state)\nthis:\n  x \\<in> carrier (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> carrier\n                (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>)\n                  I) \\<Longrightarrow>\n       finprod G x I \\<in> carrier (G\\<lparr>carrier := J\\<rparr>)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier\n                         (DirProds\n                           (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I);\n        y \\<in> carrier\n                 (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>)\n                   I)\\<rbrakk>\n       \\<Longrightarrow> finprod G\n                          (x \\<otimes>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>\n                           y)\n                          I =\n                         finprod G x\n                          I \\<otimes>\\<^bsub>G\\<lparr>carrier := J\\<rparr>\\<^esub>\n                         finprod G y I", "show \"finprod G x I \\<in> carrier ?J\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G x I \\<in> carrier (G\\<lparr>carrier := J\\<rparr>)", "proof (subst finprod_subgroup[OF _ assms(1)])"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<in> I \\<rightarrow> J\n 2. finprod (G\\<lparr>carrier := J\\<rparr>) x I\n    \\<in> carrier (G\\<lparr>carrier := J\\<rparr>)", "show \"x \\<in> I \\<rightarrow> J\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> I \\<rightarrow> J", "using inJ comp_in_carr[OF x]"], ["proof (prove)\nusing this:\n  ?i2 \\<in> I \\<Longrightarrow> S ?i2 \\<subseteq> J\n  ?i \\<in> I \\<Longrightarrow>\n  x ?i \\<in> carrier (G\\<lparr>carrier := S ?i\\<rparr>)\n\ngoal (1 subgoal):\n 1. x \\<in> I \\<rightarrow> J", "by auto"], ["proof (state)\nthis:\n  x \\<in> I \\<rightarrow> J\n\ngoal (1 subgoal):\n 1. finprod (G\\<lparr>carrier := J\\<rparr>) x I\n    \\<in> carrier (G\\<lparr>carrier := J\\<rparr>)", "thus \"finprod ?J x I \\<in> carrier ?J\""], ["proof (prove)\nusing this:\n  x \\<in> I \\<rightarrow> J\n\ngoal (1 subgoal):\n 1. finprod (G\\<lparr>carrier := J\\<rparr>) x I\n    \\<in> carrier (G\\<lparr>carrier := J\\<rparr>)", "by (intro J.finprod_closed; simp)"], ["proof (state)\nthis:\n  finprod (G\\<lparr>carrier := J\\<rparr>) x I\n  \\<in> carrier (G\\<lparr>carrier := J\\<rparr>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finprod G x I \\<in> carrier (G\\<lparr>carrier := J\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier\n                         (DirProds\n                           (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I);\n        y \\<in> carrier\n                 (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>)\n                   I)\\<rbrakk>\n       \\<Longrightarrow> finprod G\n                          (x \\<otimes>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>\n                           y)\n                          I =\n                         finprod G x\n                          I \\<otimes>\\<^bsub>G\\<lparr>carrier := J\\<rparr>\\<^esub>\n                         finprod G y I", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier\n                         (DirProds\n                           (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I);\n        y \\<in> carrier\n                 (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>)\n                   I)\\<rbrakk>\n       \\<Longrightarrow> finprod G\n                          (x \\<otimes>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>\n                           y)\n                          I =\n                         finprod G x\n                          I \\<otimes>\\<^bsub>G\\<lparr>carrier := J\\<rparr>\\<^esub>\n                         finprod G y I", "assume y[simp]: \"y \\<in> carrier ?DP\""], ["proof (state)\nthis:\n  y \\<in> carrier (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier\n                         (DirProds\n                           (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I);\n        y \\<in> carrier\n                 (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>)\n                   I)\\<rbrakk>\n       \\<Longrightarrow> finprod G\n                          (x \\<otimes>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>\n                           y)\n                          I =\n                         finprod G x\n                          I \\<otimes>\\<^bsub>G\\<lparr>carrier := J\\<rparr>\\<^esub>\n                         finprod G y I", "show \"finprod G (x \\<otimes>\\<^bsub>?DP\\<^esub> y) I = finprod G x I \\<otimes>\\<^bsub>?J\\<^esub> finprod G y I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G\n     (x \\<otimes>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>\n      y)\n     I =\n    finprod G x I \\<otimes>\\<^bsub>G\\<lparr>carrier := J\\<rparr>\\<^esub>\n    finprod G y I", "proof(subst (1 2 3) finprod_subgroup[of _ _ J])"], ["proof (state)\ngoal (5 subgoals):\n 1. y \\<in> I \\<rightarrow> J\n 2. subgroup J G\n 3. x \\<in> I \\<rightarrow> J\n 4. x \\<otimes>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>\n    y\n    \\<in> I \\<rightarrow> J\n 5. finprod (G\\<lparr>carrier := J\\<rparr>)\n     (x \\<otimes>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>\n      y)\n     I =\n    finprod (G\\<lparr>carrier := J\\<rparr>) x\n     I \\<otimes>\\<^bsub>G\\<lparr>carrier := J\\<rparr>\\<^esub>\n    finprod (G\\<lparr>carrier := J\\<rparr>) y I", "show xyJ: \"x \\<in> I \\<rightarrow> J\" \"y \\<in> I \\<rightarrow> J\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> I \\<rightarrow> J &&& y \\<in> I \\<rightarrow> J", "using x y inJ comp_in_carr[OF x] comp_in_carr[OF y]"], ["proof (prove)\nusing this:\n  x \\<in> carrier (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n  y \\<in> carrier (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n  ?i2 \\<in> I \\<Longrightarrow> S ?i2 \\<subseteq> J\n  ?i \\<in> I \\<Longrightarrow>\n  x ?i \\<in> carrier (G\\<lparr>carrier := S ?i\\<rparr>)\n  ?i \\<in> I \\<Longrightarrow>\n  y ?i \\<in> carrier (G\\<lparr>carrier := S ?i\\<rparr>)\n\ngoal (1 subgoal):\n 1. x \\<in> I \\<rightarrow> J &&& y \\<in> I \\<rightarrow> J", "by auto"], ["proof (state)\nthis:\n  x \\<in> I \\<rightarrow> J\n  y \\<in> I \\<rightarrow> J\n\ngoal (3 subgoals):\n 1. subgroup J G\n 2. x \\<otimes>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>\n    y\n    \\<in> I \\<rightarrow> J\n 3. finprod (G\\<lparr>carrier := J\\<rparr>)\n     (x \\<otimes>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>\n      y)\n     I =\n    finprod (G\\<lparr>carrier := J\\<rparr>) x\n     I \\<otimes>\\<^bsub>G\\<lparr>carrier := J\\<rparr>\\<^esub>\n    finprod (G\\<lparr>carrier := J\\<rparr>) y I", "show xyJ1: \"x \\<otimes>\\<^bsub>?DP\\<^esub> y \\<in> I \\<rightarrow> J\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>\n    y\n    \\<in> I \\<rightarrow> J", "using inJ x y comp_in_carr[of \"x \\<otimes>\\<^bsub>?DP\\<^esub> y\"]"], ["proof (prove)\nusing this:\n  ?i2 \\<in> I \\<Longrightarrow> S ?i2 \\<subseteq> J\n  x \\<in> carrier (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n  y \\<in> carrier (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n  \\<lbrakk>x \\<otimes>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>\n           y\n           \\<in> carrier (DirProds ?G ?I);\n   ?i \\<in> ?I\\<rbrakk>\n  \\<Longrightarrow> (x \\<otimes>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>\n                     y)\n                     ?i\n                    \\<in> carrier (?G ?i)\n\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>\n    y\n    \\<in> I \\<rightarrow> J", "by fastforce"], ["proof (state)\nthis:\n  x \\<otimes>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>\n  y\n  \\<in> I \\<rightarrow> J\n\ngoal (2 subgoals):\n 1. subgroup J G\n 2. finprod (G\\<lparr>carrier := J\\<rparr>)\n     (x \\<otimes>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>\n      y)\n     I =\n    finprod (G\\<lparr>carrier := J\\<rparr>) x\n     I \\<otimes>\\<^bsub>G\\<lparr>carrier := J\\<rparr>\\<^esub>\n    finprod (G\\<lparr>carrier := J\\<rparr>) y I", "show \"subgroup J G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup J G", "using assms(1)"], ["proof (prove)\nusing this:\n  subgroup J G\n\ngoal (1 subgoal):\n 1. subgroup J G", "."], ["proof (state)\nthis:\n  subgroup J G\n\ngoal (1 subgoal):\n 1. finprod (G\\<lparr>carrier := J\\<rparr>)\n     (x \\<otimes>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>\n      y)\n     I =\n    finprod (G\\<lparr>carrier := J\\<rparr>) x\n     I \\<otimes>\\<^bsub>G\\<lparr>carrier := J\\<rparr>\\<^esub>\n    finprod (G\\<lparr>carrier := J\\<rparr>) y I", "show \"finprod ?J (x \\<otimes>\\<^bsub>?DP\\<^esub> y) I = finprod ?J x I \\<otimes>\\<^bsub>?J\\<^esub> finprod ?J y I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod (G\\<lparr>carrier := J\\<rparr>)\n     (x \\<otimes>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>\n      y)\n     I =\n    finprod (G\\<lparr>carrier := J\\<rparr>) x\n     I \\<otimes>\\<^bsub>G\\<lparr>carrier := J\\<rparr>\\<^esub>\n    finprod (G\\<lparr>carrier := J\\<rparr>) y I", "proof (rule J.finprod_cong_split)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>a.\n       a \\<in> I \\<Longrightarrow>\n       x a \\<otimes>\\<^bsub>G\\<lparr>carrier := J\\<rparr>\\<^esub> y a =\n       (x \\<otimes>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>\n        y)\n        a\n 2. x \\<in> I \\<rightarrow> carrier (G\\<lparr>carrier := J\\<rparr>)\n 3. y \\<in> I \\<rightarrow> carrier (G\\<lparr>carrier := J\\<rparr>)\n 4. x \\<otimes>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>\n    y\n    \\<in> I \\<rightarrow> carrier (G\\<lparr>carrier := J\\<rparr>)", "show \"x \\<in> I \\<rightarrow> carrier ?J\" \"y \\<in> I \\<rightarrow> carrier ?J\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> I \\<rightarrow> carrier (G\\<lparr>carrier := J\\<rparr>) &&&\n    y \\<in> I \\<rightarrow> carrier (G\\<lparr>carrier := J\\<rparr>)", "using xyJ"], ["proof (prove)\nusing this:\n  x \\<in> I \\<rightarrow> J\n  y \\<in> I \\<rightarrow> J\n\ngoal (1 subgoal):\n 1. x \\<in> I \\<rightarrow> carrier (G\\<lparr>carrier := J\\<rparr>) &&&\n    y \\<in> I \\<rightarrow> carrier (G\\<lparr>carrier := J\\<rparr>)", "by simp_all"], ["proof (state)\nthis:\n  x \\<in> I \\<rightarrow> carrier (G\\<lparr>carrier := J\\<rparr>)\n  y \\<in> I \\<rightarrow> carrier (G\\<lparr>carrier := J\\<rparr>)\n\ngoal (2 subgoals):\n 1. \\<And>a.\n       a \\<in> I \\<Longrightarrow>\n       x a \\<otimes>\\<^bsub>G\\<lparr>carrier := J\\<rparr>\\<^esub> y a =\n       (x \\<otimes>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>\n        y)\n        a\n 2. x \\<otimes>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>\n    y\n    \\<in> I \\<rightarrow> carrier (G\\<lparr>carrier := J\\<rparr>)", "show \"x \\<otimes>\\<^bsub>?DP\\<^esub> y \\<in> I \\<rightarrow> carrier ?J\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>\n    y\n    \\<in> I \\<rightarrow> carrier (G\\<lparr>carrier := J\\<rparr>)", "using xyJ1"], ["proof (prove)\nusing this:\n  x \\<otimes>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>\n  y\n  \\<in> I \\<rightarrow> J\n\ngoal (1 subgoal):\n 1. x \\<otimes>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>\n    y\n    \\<in> I \\<rightarrow> carrier (G\\<lparr>carrier := J\\<rparr>)", "by simp"], ["proof (state)\nthis:\n  x \\<otimes>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>\n  y\n  \\<in> I \\<rightarrow> carrier (G\\<lparr>carrier := J\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> I \\<Longrightarrow>\n       x a \\<otimes>\\<^bsub>G\\<lparr>carrier := J\\<rparr>\\<^esub> y a =\n       (x \\<otimes>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>\n        y)\n        a", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> I \\<Longrightarrow>\n       x a \\<otimes>\\<^bsub>G\\<lparr>carrier := J\\<rparr>\\<^esub> y a =\n       (x \\<otimes>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>\n        y)\n        a", "assume i: \"i \\<in> I\""], ["proof (state)\nthis:\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> I \\<Longrightarrow>\n       x a \\<otimes>\\<^bsub>G\\<lparr>carrier := J\\<rparr>\\<^esub> y a =\n       (x \\<otimes>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>\n        y)\n        a", "then"], ["proof (chain)\npicking this:\n  i \\<in> I", "have \"x i \\<otimes>\\<^bsub>G\\<lparr>carrier := (S i) \\<rparr>\\<^esub> y i = (x \\<otimes>\\<^bsub>?DP\\<^esub> y) i\""], ["proof (prove)\nusing this:\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. x i \\<otimes>\\<^bsub>G\\<lparr>carrier := S i\\<rparr>\\<^esub> y i =\n    (x \\<otimes>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>\n     y)\n     i", "by (intro comp_mult[symmetric])"], ["proof (state)\nthis:\n  x i \\<otimes>\\<^bsub>G\\<lparr>carrier := S i\\<rparr>\\<^esub> y i =\n  (x \\<otimes>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>\n   y)\n   i\n\ngoal (1 subgoal):\n 1. \\<And>a.\n       a \\<in> I \\<Longrightarrow>\n       x a \\<otimes>\\<^bsub>G\\<lparr>carrier := J\\<rparr>\\<^esub> y a =\n       (x \\<otimes>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>\n        y)\n        a", "thus \"x i \\<otimes>\\<^bsub>?J\\<^esub> y i = (x \\<otimes>\\<^bsub>?DP\\<^esub> y) i\""], ["proof (prove)\nusing this:\n  x i \\<otimes>\\<^bsub>G\\<lparr>carrier := S i\\<rparr>\\<^esub> y i =\n  (x \\<otimes>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>\n   y)\n   i\n\ngoal (1 subgoal):\n 1. x i \\<otimes>\\<^bsub>G\\<lparr>carrier := J\\<rparr>\\<^esub> y i =\n    (x \\<otimes>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>\n     y)\n     i", "by simp"], ["proof (state)\nthis:\n  x i \\<otimes>\\<^bsub>G\\<lparr>carrier := J\\<rparr>\\<^esub> y i =\n  (x \\<otimes>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>\n   y)\n   i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finprod (G\\<lparr>carrier := J\\<rparr>)\n   (x \\<otimes>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>\n    y)\n   I =\n  finprod (G\\<lparr>carrier := J\\<rparr>) x\n   I \\<otimes>\\<^bsub>G\\<lparr>carrier := J\\<rparr>\\<^esub>\n  finprod (G\\<lparr>carrier := J\\<rparr>) y I\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finprod G\n   (x \\<otimes>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>\n    y)\n   I =\n  finprod G x I \\<otimes>\\<^bsub>G\\<lparr>carrier := J\\<rparr>\\<^esub>\n  finprod G y I\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>x. finprod G x I)\n  \\<in> hom (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n         (G\\<lparr>carrier := J\\<rparr>)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. finprod G x I)\n    \\<in> Group.iso\n           (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n           (G\\<lparr>carrier := J\\<rparr>)", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>x. finprod G x I)\n  \\<in> hom (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n         (G\\<lparr>carrier := J\\<rparr>)", "interpret fp: group_hom ?DP ?J ?fp"], ["proof (prove)\nusing this:\n  (\\<lambda>x. finprod G x I)\n  \\<in> hom (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n         (G\\<lparr>carrier := J\\<rparr>)\n\ngoal (1 subgoal):\n 1. group_hom (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n     (G\\<lparr>carrier := J\\<rparr>) (\\<lambda>x. finprod G x I)", "unfolding group_hom_def group_hom_axioms_def"], ["proof (prove)\nusing this:\n  (\\<lambda>x. finprod G x I)\n  \\<in> hom (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n         (G\\<lparr>carrier := J\\<rparr>)\n\ngoal (1 subgoal):\n 1. Group.group\n     (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I) \\<and>\n    Group.group (G\\<lparr>carrier := J\\<rparr>) \\<and>\n    (\\<lambda>x. finprod G x I)\n    \\<in> hom (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n           (G\\<lparr>carrier := J\\<rparr>)", "by blast"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>x. finprod G x I)\n    \\<in> Group.iso\n           (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n           (G\\<lparr>carrier := J\\<rparr>)", "have s: \"subgroup (S i) G\" if \"i \\<in> I\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup (S i) G", "using incl_subgroup[OF assms(1) assm'[OF that]]"], ["proof (prove)\nusing this:\n  subgroup (S i) G\n\ngoal (1 subgoal):\n 1. subgroup (S i) G", "."], ["proof (state)\nthis:\n  ?i2 \\<in> I \\<Longrightarrow> subgroup (S ?i2) G\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. finprod G x I)\n    \\<in> Group.iso\n           (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n           (G\\<lparr>carrier := J\\<rparr>)", "have \"kernel ?DP ?J ?fp = {\\<one>\\<^bsub>?DP\\<^esub>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. kernel (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n     (G\\<lparr>carrier := J\\<rparr>) (\\<lambda>x. finprod G x I) =\n    {\\<one>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. kernel (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n     (G\\<lparr>carrier := J\\<rparr>) (\\<lambda>x. finprod G x I) =\n    {\\<one>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>}", "have \"a = \\<one>\\<^bsub>?DP\\<^esub>\" if \"a \\<in> kernel ?DP ?J ?fp\" for a"], ["proof (prove)\ngoal (1 subgoal):\n 1. a =\n    \\<one>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. a =\n    \\<one>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>", "from that"], ["proof (chain)\npicking this:\n  a \\<in> kernel (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n           (G\\<lparr>carrier := J\\<rparr>) (\\<lambda>x. finprod G x I)", "have a: \"finprod G a I = \\<one>\" \"a \\<in> carrier ?DP\""], ["proof (prove)\nusing this:\n  a \\<in> kernel (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n           (G\\<lparr>carrier := J\\<rparr>) (\\<lambda>x. finprod G x I)\n\ngoal (1 subgoal):\n 1. finprod G a I = \\<one> &&&\n    a \\<in> carrier\n             (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)", "unfolding kernel_def"], ["proof (prove)\nusing this:\n  a \\<in> {x \\<in> carrier\n                    (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>)\n                      I).\n           finprod G x I =\n           \\<one>\\<^bsub>G\\<lparr>carrier := J\\<rparr>\\<^esub>}\n\ngoal (1 subgoal):\n 1. finprod G a I = \\<one> &&&\n    a \\<in> carrier\n             (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)", "by simp_all"], ["proof (state)\nthis:\n  finprod G a I = \\<one>\n  a \\<in> carrier (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n\ngoal (1 subgoal):\n 1. a =\n    \\<one>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>", "from compl_fam_imp_triv_finprod[OF assm(2) assms(3) s a(1)] comp_in_carr[OF a(2)]"], ["proof (chain)\npicking this:\n  \\<lbrakk>\\<And>i. i \\<in> I \\<Longrightarrow> i \\<in> I;\n   a \\<in> Pi I S\\<rbrakk>\n  \\<Longrightarrow> \\<forall>i\\<in>I. a i = \\<one>\n  ?i \\<in> I \\<Longrightarrow>\n  a ?i \\<in> carrier (G\\<lparr>carrier := S ?i\\<rparr>)", "have \"\\<forall>i\\<in>I. a i = \\<one>\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>i. i \\<in> I \\<Longrightarrow> i \\<in> I;\n   a \\<in> Pi I S\\<rbrakk>\n  \\<Longrightarrow> \\<forall>i\\<in>I. a i = \\<one>\n  ?i \\<in> I \\<Longrightarrow>\n  a ?i \\<in> carrier (G\\<lparr>carrier := S ?i\\<rparr>)\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>I. a i = \\<one>", "by simp"], ["proof (state)\nthis:\n  \\<forall>i\\<in>I. a i = \\<one>\n\ngoal (1 subgoal):\n 1. a =\n    \\<one>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>", "then"], ["proof (chain)\npicking this:\n  \\<forall>i\\<in>I. a i = \\<one>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>I. a i = \\<one>\n\ngoal (1 subgoal):\n 1. a =\n    \\<one>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>", "using DirProds_one[OF a(2)]"], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>I. a i = \\<one>\n  (\\<forall>i\\<in>I.\n      a i = \\<one>\\<^bsub>G\\<lparr>carrier := S i\\<rparr>\\<^esub>) =\n  (a =\n   \\<one>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>)\n\ngoal (1 subgoal):\n 1. a =\n    \\<one>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>", "by fastforce"], ["proof (state)\nthis:\n  a =\n  \\<one>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?a2\n  \\<in> kernel (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n         (G\\<lparr>carrier := J\\<rparr>)\n         (\\<lambda>x. finprod G x I) \\<Longrightarrow>\n  ?a2 =\n  \\<one>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>\n\ngoal (1 subgoal):\n 1. kernel (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n     (G\\<lparr>carrier := J\\<rparr>) (\\<lambda>x. finprod G x I) =\n    {\\<one>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>}", "thus ?thesis"], ["proof (prove)\nusing this:\n  ?a2\n  \\<in> kernel (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n         (G\\<lparr>carrier := J\\<rparr>)\n         (\\<lambda>x. finprod G x I) \\<Longrightarrow>\n  ?a2 =\n  \\<one>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>\n\ngoal (1 subgoal):\n 1. kernel (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n     (G\\<lparr>carrier := J\\<rparr>) (\\<lambda>x. finprod G x I) =\n    {\\<one>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>}", "using fp.one_in_kernel"], ["proof (prove)\nusing this:\n  ?a2\n  \\<in> kernel (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n         (G\\<lparr>carrier := J\\<rparr>)\n         (\\<lambda>x. finprod G x I) \\<Longrightarrow>\n  ?a2 =\n  \\<one>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>\n  \\<one>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>\n  \\<in> kernel (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n         (G\\<lparr>carrier := J\\<rparr>) (\\<lambda>x. finprod G x I)\n\ngoal (1 subgoal):\n 1. kernel (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n     (G\\<lparr>carrier := J\\<rparr>) (\\<lambda>x. finprod G x I) =\n    {\\<one>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>}", "by blast"], ["proof (state)\nthis:\n  kernel (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n   (G\\<lparr>carrier := J\\<rparr>) (\\<lambda>x. finprod G x I) =\n  {\\<one>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  kernel (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n   (G\\<lparr>carrier := J\\<rparr>) (\\<lambda>x. finprod G x I) =\n  {\\<one>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>}\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. finprod G x I)\n    \\<in> Group.iso\n           (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n           (G\\<lparr>carrier := J\\<rparr>)", "moreover"], ["proof (state)\nthis:\n  kernel (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n   (G\\<lparr>carrier := J\\<rparr>) (\\<lambda>x. finprod G x I) =\n  {\\<one>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>}\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. finprod G x I)\n    \\<in> Group.iso\n           (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n           (G\\<lparr>carrier := J\\<rparr>)", "have \"J \\<subseteq> ?fp ` carrier ?DP\""], ["proof (prove)\ngoal (1 subgoal):\n 1. J \\<subseteq> (\\<lambda>x. finprod G x I) `\n                  carrier\n                   (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>)\n                     I)", "using assm(1) IDirProds_eq_finprod_PiE[OF assms(3) incl_subgroup[OF assms(1) assm']]"], ["proof (prove)\nusing this:\n  J = IDirProds G S I\n  (\\<And>i. i \\<in> I \\<Longrightarrow> ?i4 i \\<in> I) \\<Longrightarrow>\n  IDirProds G (\\<lambda>i. S (?i4 i)) I =\n  (\\<lambda>x. finprod G x I) ` (\\<Pi>\\<^sub>E i\\<in>I. S (?i4 i))\n\ngoal (1 subgoal):\n 1. J \\<subseteq> (\\<lambda>x. finprod G x I) `\n                  carrier\n                   (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>)\n                     I)", "unfolding DirProds_def PiE_def Pi_def"], ["proof (prove)\nusing this:\n  J = IDirProds G S I\n  (\\<And>i. i \\<in> I \\<Longrightarrow> ?i4 i \\<in> I) \\<Longrightarrow>\n  IDirProds G (\\<lambda>i. S (?i4 i)) I =\n  (\\<lambda>x. finprod G x I) `\n  ({f. \\<forall>x. x \\<in> I \\<longrightarrow> f x \\<in> S (?i4 x)} \\<inter>\n   extensional I)\n\ngoal (1 subgoal):\n 1. J \\<subseteq> (\\<lambda>x. finprod G x I) `\n                  carrier\n                   \\<lparr>carrier =\n                             {f. \\<forall>x.\n                                    x \\<in> I \\<longrightarrow>\n                                    f x\n                                    \\<in> (carrier \\<circ>\n     (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>))\n     x} \\<inter>\n                             extensional I,\n                      monoid.mult =\n                        \\<lambda>x y.\n                           \\<lambda>i\\<in>I.\n                              x i \\<otimes>\\<^bsub>G\\<lparr>carrier := S i\\<rparr>\\<^esub>\n                              y i,\n                      one =\n                        \\<lambda>i\\<in>I.\n                           \\<one>\\<^bsub>G\\<lparr>carrier := S i\\<rparr>\\<^esub>\\<rparr>", "by simp"], ["proof (state)\nthis:\n  J \\<subseteq> (\\<lambda>x. finprod G x I) `\n                carrier\n                 (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. finprod G x I)\n    \\<in> Group.iso\n           (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n           (G\\<lparr>carrier := J\\<rparr>)", "ultimately"], ["proof (chain)\npicking this:\n  kernel (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n   (G\\<lparr>carrier := J\\<rparr>) (\\<lambda>x. finprod G x I) =\n  {\\<one>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>}\n  J \\<subseteq> (\\<lambda>x. finprod G x I) `\n                carrier\n                 (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)", "show ?thesis"], ["proof (prove)\nusing this:\n  kernel (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n   (G\\<lparr>carrier := J\\<rparr>) (\\<lambda>x. finprod G x I) =\n  {\\<one>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>}\n  J \\<subseteq> (\\<lambda>x. finprod G x I) `\n                carrier\n                 (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. finprod G x I)\n    \\<in> Group.iso\n           (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n           (G\\<lparr>carrier := J\\<rparr>)", "using hom fp.iso_iff"], ["proof (prove)\nusing this:\n  kernel (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n   (G\\<lparr>carrier := J\\<rparr>) (\\<lambda>x. finprod G x I) =\n  {\\<one>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>}\n  J \\<subseteq> (\\<lambda>x. finprod G x I) `\n                carrier\n                 (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n  (\\<lambda>x. finprod G x I)\n  \\<in> hom (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n         (G\\<lparr>carrier := J\\<rparr>)\n  ((\\<lambda>x. finprod G x I)\n   \\<in> Group.iso\n          (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n          (G\\<lparr>carrier := J\\<rparr>)) =\n  (carrier (G\\<lparr>carrier := J\\<rparr>)\n   \\<subseteq> (\\<lambda>x. finprod G x I) `\n               carrier\n                (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>)\n                  I) \\<and>\n   (\\<forall>x\\<in>carrier\n                    (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>)\n                      I).\n       finprod G x I =\n       \\<one>\\<^bsub>G\\<lparr>carrier := J\\<rparr>\\<^esub> \\<longrightarrow>\n       x =\n       \\<one>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. finprod G x I)\n    \\<in> Group.iso\n           (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n           (G\\<lparr>carrier := J\\<rparr>)", "unfolding kernel_def"], ["proof (prove)\nusing this:\n  {x \\<in> carrier\n            (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I).\n   finprod G x I = \\<one>\\<^bsub>G\\<lparr>carrier := J\\<rparr>\\<^esub>} =\n  {\\<one>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>}\n  J \\<subseteq> (\\<lambda>x. finprod G x I) `\n                carrier\n                 (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n  (\\<lambda>x. finprod G x I)\n  \\<in> hom (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n         (G\\<lparr>carrier := J\\<rparr>)\n  ((\\<lambda>x. finprod G x I)\n   \\<in> Group.iso\n          (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n          (G\\<lparr>carrier := J\\<rparr>)) =\n  (carrier (G\\<lparr>carrier := J\\<rparr>)\n   \\<subseteq> (\\<lambda>x. finprod G x I) `\n               carrier\n                (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>)\n                  I) \\<and>\n   (\\<forall>x\\<in>carrier\n                    (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>)\n                      I).\n       finprod G x I =\n       \\<one>\\<^bsub>G\\<lparr>carrier := J\\<rparr>\\<^esub> \\<longrightarrow>\n       x =\n       \\<one>\\<^bsub>DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I\\<^esub>))\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. finprod G x I)\n    \\<in> Group.iso\n           (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n           (G\\<lparr>carrier := J\\<rparr>)", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>x. finprod G x I)\n  \\<in> Group.iso (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n         (G\\<lparr>carrier := J\\<rparr>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in comm_group) iso_DirProds_IDirProds:\n  assumes \"is_idirprod (carrier G) S I\" \"finite I\"\n  shows \"(\\<lambda>x. \\<Otimes>\\<^bsub>G\\<^esub>i\\<in>I. x i) \\<in> iso (DirProds (\\<lambda>i. G\\<lparr>carrier := (S i)\\<rparr>) I) G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. finprod G x I)\n    \\<in> Group.iso\n           (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I) G", "using subgroup_iso_DirProds_IDirProds[OF subgroup_self assms(1, 2)]"], ["proof (prove)\nusing this:\n  (\\<lambda>x. finprod G x I)\n  \\<in> Group.iso (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I)\n         (G\\<lparr>carrier := carrier G\\<rparr>)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. finprod G x I)\n    \\<in> Group.iso\n           (DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I) G", "by auto"], ["", "lemma (in comm_group) cong_DirProds_IDirProds:\n  assumes \"is_idirprod (carrier G) S I\" \"finite I\"\n  shows \"DirProds (\\<lambda>i. G\\<lparr>carrier := (S i)\\<rparr>) I \\<cong> G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. DirProds (\\<lambda>i. G\\<lparr>carrier := S i\\<rparr>) I \\<cong> G", "by (intro is_isoI, use iso_DirProds_IDirProds[OF assms] in blast)"], ["", "text \\<open>In order to prove the isomorphism between two direct products, the following lemmas provide\nsome criterias.\\<close>"], ["", "lemma DirProds_iso:\n  assumes \"bij_betw f I J\" \"\\<And>i. i\\<in>I \\<Longrightarrow> Gs i \\<cong> Hs (f i)\"\n          \"\\<And>i. i\\<in>I \\<Longrightarrow> group (Gs i)\" \"\\<And>j. j\\<in>J \\<Longrightarrow> group (Hs j)\"\n  shows \"DirProds Gs I \\<cong> DirProds Hs J\""], ["proof (prove)\ngoal (1 subgoal):\n 1. DirProds Gs I \\<cong> DirProds Hs J", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. DirProds Gs I \\<cong> DirProds Hs J", "interpret DG: group \"DirProds Gs I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Group.group (DirProds Gs I)", "using DirProds_is_group assms(3)"], ["proof (prove)\nusing this:\n  (\\<And>i.\n      i \\<in> ?I \\<Longrightarrow> Group.group (?G i)) \\<Longrightarrow>\n  Group.group (DirProds ?G ?I)\n  ?i \\<in> I \\<Longrightarrow> Group.group (Gs ?i)\n\ngoal (1 subgoal):\n 1. Group.group (DirProds Gs I)", "by blast"], ["proof (state)\ngoal (1 subgoal):\n 1. DirProds Gs I \\<cong> DirProds Hs J", "interpret DH: group \"DirProds Hs J\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Group.group (DirProds Hs J)", "using DirProds_is_group assms(4)"], ["proof (prove)\nusing this:\n  (\\<And>i.\n      i \\<in> ?I \\<Longrightarrow> Group.group (?G i)) \\<Longrightarrow>\n  Group.group (DirProds ?G ?I)\n  ?j \\<in> J \\<Longrightarrow> Group.group (Hs ?j)\n\ngoal (1 subgoal):\n 1. Group.group (DirProds Hs J)", "by blast"], ["proof (state)\ngoal (1 subgoal):\n 1. DirProds Gs I \\<cong> DirProds Hs J", "from assms(1)"], ["proof (chain)\npicking this:\n  bij_betw f I J", "obtain g where g: \"g = inv_into I f\" \"bij_betw g J I\""], ["proof (prove)\nusing this:\n  bij_betw f I J\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g = inv_into I f; bij_betw g J I\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson bij_betw_inv_into)"], ["proof (state)\nthis:\n  g = inv_into I f\n  bij_betw g J I\n\ngoal (1 subgoal):\n 1. DirProds Gs I \\<cong> DirProds Hs J", "hence fgi: \"\\<And>i. i \\<in> I \\<Longrightarrow> g (f i) = i\" \"\\<And>j. j \\<in> J \\<Longrightarrow> f (g j) = j\""], ["proof (prove)\nusing this:\n  g = inv_into I f\n  bij_betw g J I\n\ngoal (1 subgoal):\n 1. (\\<And>i. i \\<in> I \\<Longrightarrow> g (f i) = i) &&&\n    (\\<And>j. j \\<in> J \\<Longrightarrow> f (g j) = j)", "using assms(1) bij_betw_inv_into_left[OF assms(1)] bij_betw_inv_into_right[OF assms(1)]"], ["proof (prove)\nusing this:\n  g = inv_into I f\n  bij_betw g J I\n  bij_betw f I J\n  ?a \\<in> I \\<Longrightarrow> inv_into I f (f ?a) = ?a\n  ?a' \\<in> J \\<Longrightarrow> f (inv_into I f ?a') = ?a'\n\ngoal (1 subgoal):\n 1. (\\<And>i. i \\<in> I \\<Longrightarrow> g (f i) = i) &&&\n    (\\<And>j. j \\<in> J \\<Longrightarrow> f (g j) = j)", "by auto"], ["proof (state)\nthis:\n  ?i1 \\<in> I \\<Longrightarrow> g (f ?i1) = ?i1\n  ?j1 \\<in> J \\<Longrightarrow> f (g ?j1) = ?j1\n\ngoal (1 subgoal):\n 1. DirProds Gs I \\<cong> DirProds Hs J", "from assms(2)"], ["proof (chain)\npicking this:\n  ?i \\<in> I \\<Longrightarrow> Gs ?i \\<cong> Hs (f ?i)", "have \"\\<And>i. i \\<in> I \\<Longrightarrow> (\\<exists>h. h \\<in> iso (Gs i) (Hs (f i)))\""], ["proof (prove)\nusing this:\n  ?i \\<in> I \\<Longrightarrow> Gs ?i \\<cong> Hs (f ?i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> I \\<Longrightarrow>\n       \\<exists>h. h \\<in> Group.iso (Gs i) (Hs (f i))", "unfolding is_iso_def"], ["proof (prove)\nusing this:\n  ?i \\<in> I \\<Longrightarrow> Group.iso (Gs ?i) (Hs (f ?i)) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> I \\<Longrightarrow>\n       \\<exists>h. h \\<in> Group.iso (Gs i) (Hs (f i))", "by blast"], ["proof (state)\nthis:\n  ?i1 \\<in> I \\<Longrightarrow>\n  \\<exists>h. h \\<in> Group.iso (Gs ?i1) (Hs (f ?i1))\n\ngoal (1 subgoal):\n 1. DirProds Gs I \\<cong> DirProds Hs J", "then"], ["proof (chain)\npicking this:\n  ?i1 \\<in> I \\<Longrightarrow>\n  \\<exists>h. h \\<in> Group.iso (Gs ?i1) (Hs (f ?i1))", "obtain h where h: \"\\<And>i. i \\<in> I \\<Longrightarrow> h i \\<in> iso (Gs i) (Hs (f i))\""], ["proof (prove)\nusing this:\n  ?i1 \\<in> I \\<Longrightarrow>\n  \\<exists>h. h \\<in> Group.iso (Gs ?i1) (Hs (f ?i1))\n\ngoal (1 subgoal):\n 1. (\\<And>h.\n        (\\<And>i.\n            i \\<in> I \\<Longrightarrow>\n            h i \\<in> Group.iso (Gs i) (Hs (f i))) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  ?i1 \\<in> I \\<Longrightarrow> h ?i1 \\<in> Group.iso (Gs ?i1) (Hs (f ?i1))\n\ngoal (1 subgoal):\n 1. DirProds Gs I \\<cong> DirProds Hs J", "let ?h = \"(\\<lambda>x. (\\<lambda>j. if j\\<in>J then (h (g j)) (x (g j)) else undefined))\""], ["proof (state)\ngoal (1 subgoal):\n 1. DirProds Gs I \\<cong> DirProds Hs J", "have hc: \"?h x \\<in> carrier (DirProds Hs J)\" if \"x \\<in> carrier (DirProds Gs I)\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>j. if j \\<in> J then h (g j) (x (g j)) else undefined)\n    \\<in> carrier (DirProds Hs J)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>j. if j \\<in> J then h (g j) (x (g j)) else undefined)\n    \\<in> carrier (DirProds Hs J)", "have xc: \"x \\<in> carrier (DirProds Gs I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> carrier (DirProds Gs I)", "by fact"], ["proof (state)\nthis:\n  x \\<in> carrier (DirProds Gs I)\n\ngoal (1 subgoal):\n 1. (\\<lambda>j. if j \\<in> J then h (g j) (x (g j)) else undefined)\n    \\<in> carrier (DirProds Hs J)", "have \"h (g j) (x (g j)) \\<in> carrier (Hs j)\" if \"j \\<in> J\" for j"], ["proof (prove)\ngoal (1 subgoal):\n 1. h (g j) (x (g j)) \\<in> carrier (Hs j)", "proof(intro iso_in_carr[OF _ comp_in_carr[OF xc], of \"h (g j)\" \"g j\" \"Hs j\"])"], ["proof (state)\ngoal (2 subgoals):\n 1. h (g j) \\<in> Group.iso (Gs (g j)) (Hs j)\n 2. g j \\<in> I", "show \"g j \\<in> I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g j \\<in> I", "using g(2)[unfolded bij_betw_def] that"], ["proof (prove)\nusing this:\n  inj_on g J \\<and> g ` J = I\n  j \\<in> J\n\ngoal (1 subgoal):\n 1. g j \\<in> I", "by blast"], ["proof (state)\nthis:\n  g j \\<in> I\n\ngoal (1 subgoal):\n 1. h (g j) \\<in> Group.iso (Gs (g j)) (Hs j)", "from h[OF this]"], ["proof (chain)\npicking this:\n  h (g j) \\<in> Group.iso (Gs (g j)) (Hs (f (g j)))", "show \"h (g j) \\<in> Group.iso (Gs (g j)) (Hs j)\""], ["proof (prove)\nusing this:\n  h (g j) \\<in> Group.iso (Gs (g j)) (Hs (f (g j)))\n\ngoal (1 subgoal):\n 1. h (g j) \\<in> Group.iso (Gs (g j)) (Hs j)", "using fgi(2)[OF that]"], ["proof (prove)\nusing this:\n  h (g j) \\<in> Group.iso (Gs (g j)) (Hs (f (g j)))\n  f (g j) = j\n\ngoal (1 subgoal):\n 1. h (g j) \\<in> Group.iso (Gs (g j)) (Hs j)", "by simp"], ["proof (state)\nthis:\n  h (g j) \\<in> Group.iso (Gs (g j)) (Hs j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?j1 \\<in> J \\<Longrightarrow> h (g ?j1) (x (g ?j1)) \\<in> carrier (Hs ?j1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>j. if j \\<in> J then h (g j) (x (g j)) else undefined)\n    \\<in> carrier (DirProds Hs J)", "thus ?thesis"], ["proof (prove)\nusing this:\n  ?j1 \\<in> J \\<Longrightarrow> h (g ?j1) (x (g ?j1)) \\<in> carrier (Hs ?j1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>j. if j \\<in> J then h (g j) (x (g j)) else undefined)\n    \\<in> carrier (DirProds Hs J)", "using xc"], ["proof (prove)\nusing this:\n  ?j1 \\<in> J \\<Longrightarrow> h (g ?j1) (x (g ?j1)) \\<in> carrier (Hs ?j1)\n  x \\<in> carrier (DirProds Gs I)\n\ngoal (1 subgoal):\n 1. (\\<lambda>j. if j \\<in> J then h (g j) (x (g j)) else undefined)\n    \\<in> carrier (DirProds Hs J)", "unfolding DirProds_def PiE_def extensional_def"], ["proof (prove)\nusing this:\n  ?j1 \\<in> J \\<Longrightarrow> h (g ?j1) (x (g ?j1)) \\<in> carrier (Hs ?j1)\n  x \\<in> carrier\n           \\<lparr>carrier =\n                     Pi I (carrier \\<circ> Gs) \\<inter>\n                     {f. \\<forall>x.\n                            x \\<notin> I \\<longrightarrow> f x = undefined},\n              monoid.mult =\n                \\<lambda>x y.\n                   \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>Gs i\\<^esub> y i,\n              one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>Gs i\\<^esub>\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<lambda>j. if j \\<in> J then h (g j) (x (g j)) else undefined)\n    \\<in> carrier\n           \\<lparr>carrier =\n                     Pi J (carrier \\<circ> Hs) \\<inter>\n                     {f. \\<forall>x.\n                            x \\<notin> J \\<longrightarrow> f x = undefined},\n              monoid.mult =\n                \\<lambda>x y.\n                   \\<lambda>i\\<in>J. x i \\<otimes>\\<^bsub>Hs i\\<^esub> y i,\n              one = \\<lambda>i\\<in>J. \\<one>\\<^bsub>Hs i\\<^esub>\\<rparr>", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>j. if j \\<in> J then h (g j) (x (g j)) else undefined)\n  \\<in> carrier (DirProds Hs J)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x1 \\<in> carrier (DirProds Gs I) \\<Longrightarrow>\n  (\\<lambda>j. if j \\<in> J then h (g j) (?x1 (g j)) else undefined)\n  \\<in> carrier (DirProds Hs J)\n\ngoal (1 subgoal):\n 1. DirProds Gs I \\<cong> DirProds Hs J", "moreover"], ["proof (state)\nthis:\n  ?x1 \\<in> carrier (DirProds Gs I) \\<Longrightarrow>\n  (\\<lambda>j. if j \\<in> J then h (g j) (?x1 (g j)) else undefined)\n  \\<in> carrier (DirProds Hs J)\n\ngoal (1 subgoal):\n 1. DirProds Gs I \\<cong> DirProds Hs J", "have \"?h (x \\<otimes>\\<^bsub>DirProds Gs I\\<^esub> y)= ?h x \\<otimes>\\<^bsub>DirProds Hs J\\<^esub> ?h y\"\n    if \"x \\<in> carrier (DirProds Gs I)\" \"y \\<in> carrier (DirProds Gs I)\" for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>j.\n        if j \\<in> J\n        then h (g j) ((x \\<otimes>\\<^bsub>DirProds Gs I\\<^esub> y) (g j))\n        else undefined) =\n    (\\<lambda>j.\n        if j \\<in> J then h (g j) (x (g j))\n        else undefined) \\<otimes>\\<^bsub>DirProds Hs J\\<^esub>\n    (\\<lambda>j. if j \\<in> J then h (g j) (y (g j)) else undefined)", "proof(intro eq_parts_imp_eq[OF hc[OF DG.m_closed[OF that]] DH.m_closed[OF hc[OF that(1)] hc[OF that(2)]]])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> J \\<Longrightarrow>\n       (if i \\<in> J\n        then h (g i) ((x \\<otimes>\\<^bsub>DirProds Gs I\\<^esub> y) (g i))\n        else undefined) =\n       ((\\<lambda>j.\n            if j \\<in> J then h (g j) (x (g j))\n            else undefined) \\<otimes>\\<^bsub>DirProds Hs J\\<^esub>\n        (\\<lambda>j. if j \\<in> J then h (g j) (y (g j)) else undefined))\n        i", "fix j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> J \\<Longrightarrow>\n       (if i \\<in> J\n        then h (g i) ((x \\<otimes>\\<^bsub>DirProds Gs I\\<^esub> y) (g i))\n        else undefined) =\n       ((\\<lambda>j.\n            if j \\<in> J then h (g j) (x (g j))\n            else undefined) \\<otimes>\\<^bsub>DirProds Hs J\\<^esub>\n        (\\<lambda>j. if j \\<in> J then h (g j) (y (g j)) else undefined))\n        i", "assume j: \"j \\<in> J\""], ["proof (state)\nthis:\n  j \\<in> J\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> J \\<Longrightarrow>\n       (if i \\<in> J\n        then h (g i) ((x \\<otimes>\\<^bsub>DirProds Gs I\\<^esub> y) (g i))\n        else undefined) =\n       ((\\<lambda>j.\n            if j \\<in> J then h (g j) (x (g j))\n            else undefined) \\<otimes>\\<^bsub>DirProds Hs J\\<^esub>\n        (\\<lambda>j. if j \\<in> J then h (g j) (y (g j)) else undefined))\n        i", "hence gj: \"g j \\<in> I\""], ["proof (prove)\nusing this:\n  j \\<in> J\n\ngoal (1 subgoal):\n 1. g j \\<in> I", "using g"], ["proof (prove)\nusing this:\n  j \\<in> J\n  g = inv_into I f\n  bij_betw g J I\n\ngoal (1 subgoal):\n 1. g j \\<in> I", "unfolding bij_betw_def"], ["proof (prove)\nusing this:\n  j \\<in> J\n  g = inv_into I f\n  inj_on g J \\<and> g ` J = I\n\ngoal (1 subgoal):\n 1. g j \\<in> I", "by blast"], ["proof (state)\nthis:\n  g j \\<in> I\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> J \\<Longrightarrow>\n       (if i \\<in> J\n        then h (g i) ((x \\<otimes>\\<^bsub>DirProds Gs I\\<^esub> y) (g i))\n        else undefined) =\n       ((\\<lambda>j.\n            if j \\<in> J then h (g j) (x (g j))\n            else undefined) \\<otimes>\\<^bsub>DirProds Hs J\\<^esub>\n        (\\<lambda>j. if j \\<in> J then h (g j) (y (g j)) else undefined))\n        i", "from assms(3)[OF gj] assms(4)[OF j]"], ["proof (chain)\npicking this:\n  Group.group (Gs (g j))\n  Group.group (Hs j)", "have g: \"group (Gs (g j))\" \"Group.group (Hs j)\""], ["proof (prove)\nusing this:\n  Group.group (Gs (g j))\n  Group.group (Hs j)\n\ngoal (1 subgoal):\n 1. Group.group (Gs (g j)) &&& Group.group (Hs j)", "."], ["proof (state)\nthis:\n  Group.group (Gs (g j))\n  Group.group (Hs j)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> J \\<Longrightarrow>\n       (if i \\<in> J\n        then h (g i) ((x \\<otimes>\\<^bsub>DirProds Gs I\\<^esub> y) (g i))\n        else undefined) =\n       ((\\<lambda>j.\n            if j \\<in> J then h (g j) (x (g j))\n            else undefined) \\<otimes>\\<^bsub>DirProds Hs J\\<^esub>\n        (\\<lambda>j. if j \\<in> J then h (g j) (y (g j)) else undefined))\n        i", "from iso_imp_homomorphism[OF h[OF gj]] fgi(2)[OF j] g"], ["proof (chain)\npicking this:\n  h (g j) \\<in> hom (Gs (g j)) (Hs (f (g j)))\n  f (g j) = j\n  Group.group (Gs (g j))\n  Group.group (Hs j)", "interpret hjh: group_hom \"Gs (g j)\" \"Hs j\" \"h (g j)\""], ["proof (prove)\nusing this:\n  h (g j) \\<in> hom (Gs (g j)) (Hs (f (g j)))\n  f (g j) = j\n  Group.group (Gs (g j))\n  Group.group (Hs j)\n\ngoal (1 subgoal):\n 1. group_hom (Gs (g j)) (Hs j) (h (g j))", "unfolding group_hom_def group_hom_axioms_def"], ["proof (prove)\nusing this:\n  h (g j) \\<in> hom (Gs (g j)) (Hs (f (g j)))\n  f (g j) = j\n  Group.group (Gs (g j))\n  Group.group (Hs j)\n\ngoal (1 subgoal):\n 1. Group.group (Gs (g j)) \\<and>\n    Group.group (Hs j) \\<and> h (g j) \\<in> hom (Gs (g j)) (Hs j)", "by simp"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> J \\<Longrightarrow>\n       (if i \\<in> J\n        then h (g i) ((x \\<otimes>\\<^bsub>DirProds Gs I\\<^esub> y) (g i))\n        else undefined) =\n       ((\\<lambda>j.\n            if j \\<in> J then h (g j) (x (g j))\n            else undefined) \\<otimes>\\<^bsub>DirProds Hs J\\<^esub>\n        (\\<lambda>j. if j \\<in> J then h (g j) (y (g j)) else undefined))\n        i", "show \"(?h (x \\<otimes>\\<^bsub>DirProds Gs I\\<^esub> y)) j = (?h x \\<otimes>\\<^bsub>DirProds Hs J\\<^esub> ?h y) j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (if j \\<in> J\n     then h (g j) ((x \\<otimes>\\<^bsub>DirProds Gs I\\<^esub> y) (g j))\n     else undefined) =\n    ((\\<lambda>j.\n         if j \\<in> J then h (g j) (x (g j))\n         else undefined) \\<otimes>\\<^bsub>DirProds Hs J\\<^esub>\n     (\\<lambda>j. if j \\<in> J then h (g j) (y (g j)) else undefined))\n     j", "proof(subst comp_mult)"], ["proof (state)\ngoal (2 subgoals):\n 1. g j \\<in> I\n 2. (if j \\<in> J\n     then h (g j) (x (g j) \\<otimes>\\<^bsub>Gs (g j)\\<^esub> y (g j))\n     else undefined) =\n    ((\\<lambda>j.\n         if j \\<in> J then h (g j) (x (g j))\n         else undefined) \\<otimes>\\<^bsub>DirProds Hs J\\<^esub>\n     (\\<lambda>j. if j \\<in> J then h (g j) (y (g j)) else undefined))\n     j", "show \"(if j \\<in> J then h (g j) (x (g j) \\<otimes>\\<^bsub>Gs (g j)\\<^esub> y (g j)) else undefined)\n          = (?h x \\<otimes>\\<^bsub>DirProds Hs J\\<^esub> ?h y) j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (if j \\<in> J\n     then h (g j) (x (g j) \\<otimes>\\<^bsub>Gs (g j)\\<^esub> y (g j))\n     else undefined) =\n    ((\\<lambda>j.\n         if j \\<in> J then h (g j) (x (g j))\n         else undefined) \\<otimes>\\<^bsub>DirProds Hs J\\<^esub>\n     (\\<lambda>j. if j \\<in> J then h (g j) (y (g j)) else undefined))\n     j", "proof(subst comp_mult)"], ["proof (state)\ngoal (2 subgoals):\n 1. j \\<in> J\n 2. (if j \\<in> J\n     then h (g j) (x (g j) \\<otimes>\\<^bsub>Gs (g j)\\<^esub> y (g j))\n     else undefined) =\n    (if j \\<in> J then h (g j) (x (g j))\n     else undefined) \\<otimes>\\<^bsub>Hs j\\<^esub>\n    (if j \\<in> J then h (g j) (y (g j)) else undefined)", "have \"h (g j) (x (g j) \\<otimes>\\<^bsub>Gs (g j)\\<^esub> y (g j)) = h (g j) (x (g j)) \\<otimes>\\<^bsub>Hs j\\<^esub> h (g j) (y (g j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h (g j) (x (g j) \\<otimes>\\<^bsub>Gs (g j)\\<^esub> y (g j)) =\n    h (g j) (x (g j)) \\<otimes>\\<^bsub>Hs j\\<^esub> h (g j) (y (g j))", "using comp_in_carr[OF that(1) gj] comp_in_carr[OF that(2) gj]"], ["proof (prove)\nusing this:\n  x (g j) \\<in> carrier (Gs (g j))\n  y (g j) \\<in> carrier (Gs (g j))\n\ngoal (1 subgoal):\n 1. h (g j) (x (g j) \\<otimes>\\<^bsub>Gs (g j)\\<^esub> y (g j)) =\n    h (g j) (x (g j)) \\<otimes>\\<^bsub>Hs j\\<^esub> h (g j) (y (g j))", "by simp"], ["proof (state)\nthis:\n  h (g j) (x (g j) \\<otimes>\\<^bsub>Gs (g j)\\<^esub> y (g j)) =\n  h (g j) (x (g j)) \\<otimes>\\<^bsub>Hs j\\<^esub> h (g j) (y (g j))\n\ngoal (2 subgoals):\n 1. j \\<in> J\n 2. (if j \\<in> J\n     then h (g j) (x (g j) \\<otimes>\\<^bsub>Gs (g j)\\<^esub> y (g j))\n     else undefined) =\n    (if j \\<in> J then h (g j) (x (g j))\n     else undefined) \\<otimes>\\<^bsub>Hs j\\<^esub>\n    (if j \\<in> J then h (g j) (y (g j)) else undefined)", "thus \"(if j \\<in> J then h (g j) (x (g j) \\<otimes>\\<^bsub>Gs (g j)\\<^esub> y (g j)) else undefined) =\n              (if j \\<in> J then h (g j) (x (g j)) else undefined)\n      \\<otimes>\\<^bsub>Hs j\\<^esub> (if j \\<in> J then h (g j) (y (g j)) else undefined)\""], ["proof (prove)\nusing this:\n  h (g j) (x (g j) \\<otimes>\\<^bsub>Gs (g j)\\<^esub> y (g j)) =\n  h (g j) (x (g j)) \\<otimes>\\<^bsub>Hs j\\<^esub> h (g j) (y (g j))\n\ngoal (1 subgoal):\n 1. (if j \\<in> J\n     then h (g j) (x (g j) \\<otimes>\\<^bsub>Gs (g j)\\<^esub> y (g j))\n     else undefined) =\n    (if j \\<in> J then h (g j) (x (g j))\n     else undefined) \\<otimes>\\<^bsub>Hs j\\<^esub>\n    (if j \\<in> J then h (g j) (y (g j)) else undefined)", "using j"], ["proof (prove)\nusing this:\n  h (g j) (x (g j) \\<otimes>\\<^bsub>Gs (g j)\\<^esub> y (g j)) =\n  h (g j) (x (g j)) \\<otimes>\\<^bsub>Hs j\\<^esub> h (g j) (y (g j))\n  j \\<in> J\n\ngoal (1 subgoal):\n 1. (if j \\<in> J\n     then h (g j) (x (g j) \\<otimes>\\<^bsub>Gs (g j)\\<^esub> y (g j))\n     else undefined) =\n    (if j \\<in> J then h (g j) (x (g j))\n     else undefined) \\<otimes>\\<^bsub>Hs j\\<^esub>\n    (if j \\<in> J then h (g j) (y (g j)) else undefined)", "by simp"], ["proof (state)\nthis:\n  (if j \\<in> J\n   then h (g j) (x (g j) \\<otimes>\\<^bsub>Gs (g j)\\<^esub> y (g j))\n   else undefined) =\n  (if j \\<in> J then h (g j) (x (g j))\n   else undefined) \\<otimes>\\<^bsub>Hs j\\<^esub>\n  (if j \\<in> J then h (g j) (y (g j)) else undefined)\n\ngoal (1 subgoal):\n 1. j \\<in> J", "qed (use j g that hc in auto)"], ["proof (state)\nthis:\n  (if j \\<in> J\n   then h (g j) (x (g j) \\<otimes>\\<^bsub>Gs (g j)\\<^esub> y (g j))\n   else undefined) =\n  ((\\<lambda>j.\n       if j \\<in> J then h (g j) (x (g j))\n       else undefined) \\<otimes>\\<^bsub>DirProds Hs J\\<^esub>\n   (\\<lambda>j. if j \\<in> J then h (g j) (y (g j)) else undefined))\n   j\n\ngoal (1 subgoal):\n 1. g j \\<in> I", "qed (use gj g that in auto)"], ["proof (state)\nthis:\n  (if j \\<in> J\n   then h (g j) ((x \\<otimes>\\<^bsub>DirProds Gs I\\<^esub> y) (g j))\n   else undefined) =\n  ((\\<lambda>j.\n       if j \\<in> J then h (g j) (x (g j))\n       else undefined) \\<otimes>\\<^bsub>DirProds Hs J\\<^esub>\n   (\\<lambda>j. if j \\<in> J then h (g j) (y (g j)) else undefined))\n   j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?x1 \\<in> carrier (DirProds Gs I);\n   ?y1 \\<in> carrier (DirProds Gs I)\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>j.\n                        if j \\<in> J\n                        then h (g j)\n                              ((?x1 \\<otimes>\\<^bsub>DirProds Gs I\\<^esub>\n                                ?y1)\n                                (g j))\n                        else undefined) =\n                    (\\<lambda>j.\n                        if j \\<in> J then h (g j) (?x1 (g j))\n                        else undefined) \\<otimes>\\<^bsub>DirProds Hs J\\<^esub>\n                    (\\<lambda>j.\n                        if j \\<in> J then h (g j) (?y1 (g j))\n                        else undefined)\n\ngoal (1 subgoal):\n 1. DirProds Gs I \\<cong> DirProds Hs J", "ultimately"], ["proof (chain)\npicking this:\n  ?x1 \\<in> carrier (DirProds Gs I) \\<Longrightarrow>\n  (\\<lambda>j. if j \\<in> J then h (g j) (?x1 (g j)) else undefined)\n  \\<in> carrier (DirProds Hs J)\n  \\<lbrakk>?x1 \\<in> carrier (DirProds Gs I);\n   ?y1 \\<in> carrier (DirProds Gs I)\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>j.\n                        if j \\<in> J\n                        then h (g j)\n                              ((?x1 \\<otimes>\\<^bsub>DirProds Gs I\\<^esub>\n                                ?y1)\n                                (g j))\n                        else undefined) =\n                    (\\<lambda>j.\n                        if j \\<in> J then h (g j) (?x1 (g j))\n                        else undefined) \\<otimes>\\<^bsub>DirProds Hs J\\<^esub>\n                    (\\<lambda>j.\n                        if j \\<in> J then h (g j) (?y1 (g j))\n                        else undefined)", "interpret hgh: group_hom \"DirProds Gs I\" \"DirProds Hs J\" ?h"], ["proof (prove)\nusing this:\n  ?x1 \\<in> carrier (DirProds Gs I) \\<Longrightarrow>\n  (\\<lambda>j. if j \\<in> J then h (g j) (?x1 (g j)) else undefined)\n  \\<in> carrier (DirProds Hs J)\n  \\<lbrakk>?x1 \\<in> carrier (DirProds Gs I);\n   ?y1 \\<in> carrier (DirProds Gs I)\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>j.\n                        if j \\<in> J\n                        then h (g j)\n                              ((?x1 \\<otimes>\\<^bsub>DirProds Gs I\\<^esub>\n                                ?y1)\n                                (g j))\n                        else undefined) =\n                    (\\<lambda>j.\n                        if j \\<in> J then h (g j) (?x1 (g j))\n                        else undefined) \\<otimes>\\<^bsub>DirProds Hs J\\<^esub>\n                    (\\<lambda>j.\n                        if j \\<in> J then h (g j) (?y1 (g j))\n                        else undefined)\n\ngoal (1 subgoal):\n 1. group_hom (DirProds Gs I) (DirProds Hs J)\n     (\\<lambda>x j. if j \\<in> J then h (g j) (x (g j)) else undefined)", "unfolding group_hom_def group_hom_axioms_def"], ["proof (prove)\nusing this:\n  ?x1 \\<in> carrier (DirProds Gs I) \\<Longrightarrow>\n  (\\<lambda>j. if j \\<in> J then h (g j) (?x1 (g j)) else undefined)\n  \\<in> carrier (DirProds Hs J)\n  \\<lbrakk>?x1 \\<in> carrier (DirProds Gs I);\n   ?y1 \\<in> carrier (DirProds Gs I)\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>j.\n                        if j \\<in> J\n                        then h (g j)\n                              ((?x1 \\<otimes>\\<^bsub>DirProds Gs I\\<^esub>\n                                ?y1)\n                                (g j))\n                        else undefined) =\n                    (\\<lambda>j.\n                        if j \\<in> J then h (g j) (?x1 (g j))\n                        else undefined) \\<otimes>\\<^bsub>DirProds Hs J\\<^esub>\n                    (\\<lambda>j.\n                        if j \\<in> J then h (g j) (?y1 (g j))\n                        else undefined)\n\ngoal (1 subgoal):\n 1. Group.group (DirProds Gs I) \\<and>\n    Group.group (DirProds Hs J) \\<and>\n    (\\<lambda>x j. if j \\<in> J then h (g j) (x (g j)) else undefined)\n    \\<in> hom (DirProds Gs I) (DirProds Hs J)", "by (auto intro: homI)"], ["proof (state)\ngoal (1 subgoal):\n 1. DirProds Gs I \\<cong> DirProds Hs J", "have \"carrier (DirProds Hs J) \\<subseteq> ?h ` carrier (DirProds Gs I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. carrier (DirProds Hs J)\n    \\<subseteq> (\\<lambda>x j.\n                    if j \\<in> J then h (g j) (x (g j)) else undefined) `\n                carrier (DirProds Gs I)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier (DirProds Hs J) \\<Longrightarrow>\n       x \\<in> (\\<lambda>x j.\n                   if j \\<in> J then h (g j) (x (g j)) else undefined) `\n               carrier (DirProds Gs I)", "show \"x \\<in> ?h ` carrier (DirProds Gs I)\" if xc: \"x \\<in> carrier (DirProds Hs J)\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> (\\<lambda>x j.\n                if j \\<in> J then h (g j) (x (g j)) else undefined) `\n            carrier (DirProds Gs I)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> (\\<lambda>x j.\n                if j \\<in> J then h (g j) (x (g j)) else undefined) `\n            carrier (DirProds Gs I)", "from h"], ["proof (chain)\npicking this:\n  ?i1 \\<in> I \\<Longrightarrow> h ?i1 \\<in> Group.iso (Gs ?i1) (Hs (f ?i1))", "obtain k where k: \"\\<And>i. i\\<in>I \\<Longrightarrow> k i = inv_into (carrier (Gs i)) (h i)\""], ["proof (prove)\nusing this:\n  ?i1 \\<in> I \\<Longrightarrow> h ?i1 \\<in> Group.iso (Gs ?i1) (Hs (f ?i1))\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        (\\<And>i.\n            i \\<in> I \\<Longrightarrow>\n            k i = inv_into (carrier (Gs i)) (h i)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by fast"], ["proof (state)\nthis:\n  ?i1 \\<in> I \\<Longrightarrow> k ?i1 = inv_into (carrier (Gs ?i1)) (h ?i1)\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<lambda>x j.\n                if j \\<in> J then h (g j) (x (g j)) else undefined) `\n            carrier (DirProds Gs I)", "hence kiso: \"\\<And>i. i\\<in>I \\<Longrightarrow> k i \\<in> iso (Hs (f i)) (Gs i)\""], ["proof (prove)\nusing this:\n  ?i1 \\<in> I \\<Longrightarrow> k ?i1 = inv_into (carrier (Gs ?i1)) (h ?i1)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> I \\<Longrightarrow> k i \\<in> Group.iso (Hs (f i)) (Gs i)", "using h"], ["proof (prove)\nusing this:\n  ?i1 \\<in> I \\<Longrightarrow> k ?i1 = inv_into (carrier (Gs ?i1)) (h ?i1)\n  ?i1 \\<in> I \\<Longrightarrow> h ?i1 \\<in> Group.iso (Gs ?i1) (Hs (f ?i1))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> I \\<Longrightarrow> k i \\<in> Group.iso (Hs (f i)) (Gs i)", "by (simp add: assms(3) group.iso_set_sym)"], ["proof (state)\nthis:\n  ?i1 \\<in> I \\<Longrightarrow> k ?i1 \\<in> Group.iso (Hs (f ?i1)) (Gs ?i1)\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<lambda>x j.\n                if j \\<in> J then h (g j) (x (g j)) else undefined) `\n            carrier (DirProds Gs I)", "hence hk: \"y = (h (g j) \\<circ> (k (g j))) y\" if \"j \\<in> J\" \"y \\<in> carrier (Hs j)\" for j y"], ["proof (prove)\nusing this:\n  ?i1 \\<in> I \\<Longrightarrow> k ?i1 \\<in> Group.iso (Hs (f ?i1)) (Gs ?i1)\n\ngoal (1 subgoal):\n 1. y = (h (g j) \\<circ> k (g j)) y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>i.\n        i \\<in> I \\<Longrightarrow>\n        k i \\<in> Group.iso (Hs (f i)) (Gs i)) \\<Longrightarrow>\n    y = (h (g j) \\<circ> k (g j)) y", "have gj: \"g j \\<in> I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g j \\<in> I", "using that g[unfolded bij_betw_def]"], ["proof (prove)\nusing this:\n  j \\<in> J\n  y \\<in> carrier (Hs j)\n  g = inv_into I f\n  inj_on g J \\<and> g ` J = I\n\ngoal (1 subgoal):\n 1. g j \\<in> I", "by blast"], ["proof (state)\nthis:\n  g j \\<in> I\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        i \\<in> I \\<Longrightarrow>\n        k i \\<in> Group.iso (Hs (f i)) (Gs i)) \\<Longrightarrow>\n    y = (h (g j) \\<circ> k (g j)) y", "thus ?thesis"], ["proof (prove)\nusing this:\n  g j \\<in> I\n\ngoal (1 subgoal):\n 1. y = (h (g j) \\<circ> k (g j)) y", "using h[OF gj, unfolded iso_def] k[OF gj] that fgi(2)[OF that(1)] bij_betw_inv_into_right"], ["proof (prove)\nusing this:\n  g j \\<in> I\n  h (g j)\n  \\<in> {h \\<in> hom (Gs (g j)) (Hs (f (g j))).\n         bij_betw h (carrier (Gs (g j))) (carrier (Hs (f (g j))))}\n  k (g j) = inv_into (carrier (Gs (g j))) (h (g j))\n  j \\<in> J\n  y \\<in> carrier (Hs j)\n  f (g j) = j\n  \\<lbrakk>bij_betw ?f ?A ?A'; ?a' \\<in> ?A'\\<rbrakk>\n  \\<Longrightarrow> ?f (inv_into ?A ?f ?a') = ?a'\n\ngoal (1 subgoal):\n 1. y = (h (g j) \\<circ> k (g j)) y", "unfolding comp_def"], ["proof (prove)\nusing this:\n  g j \\<in> I\n  h (g j)\n  \\<in> {h \\<in> hom (Gs (g j)) (Hs (f (g j))).\n         bij_betw h (carrier (Gs (g j))) (carrier (Hs (f (g j))))}\n  k (g j) = inv_into (carrier (Gs (g j))) (h (g j))\n  j \\<in> J\n  y \\<in> carrier (Hs j)\n  f (g j) = j\n  \\<lbrakk>bij_betw ?f ?A ?A'; ?a' \\<in> ?A'\\<rbrakk>\n  \\<Longrightarrow> ?f (inv_into ?A ?f ?a') = ?a'\n\ngoal (1 subgoal):\n 1. y = h (g j) (k (g j) y)", "by fastforce"], ["proof (state)\nthis:\n  y = (h (g j) \\<circ> k (g j)) y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?j1 \\<in> J; ?y1 \\<in> carrier (Hs ?j1)\\<rbrakk>\n  \\<Longrightarrow> ?y1 = (h (g ?j1) \\<circ> k (g ?j1)) ?y1\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<lambda>x j.\n                if j \\<in> J then h (g j) (x (g j)) else undefined) `\n            carrier (DirProds Gs I)", "let ?k = \"(\\<lambda>i. if i\\<in>I then k i else (\\<lambda>_. undefined))\""], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> (\\<lambda>x j.\n                if j \\<in> J then h (g j) (x (g j)) else undefined) `\n            carrier (DirProds Gs I)", "let ?y = \"(\\<lambda>i. (?k i) (x (f i)))\""], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> (\\<lambda>x j.\n                if j \\<in> J then h (g j) (x (g j)) else undefined) `\n            carrier (DirProds Gs I)", "have \"x j = (\\<lambda>j. if j \\<in> J then h (g j) (?y (g j)) else undefined) j\" for j"], ["proof (prove)\ngoal (1 subgoal):\n 1. x j =\n    (if j \\<in> J\n     then h (g j)\n           ((if g j \\<in> I then k (g j) else (\\<lambda>_. undefined))\n             (x (f (g j))))\n     else undefined)", "proof (cases \"j \\<in> J\")"], ["proof (state)\ngoal (2 subgoals):\n 1. j \\<in> J \\<Longrightarrow>\n    x j =\n    (if j \\<in> J\n     then h (g j)\n           ((if g j \\<in> I then k (g j) else (\\<lambda>_. undefined))\n             (x (f (g j))))\n     else undefined)\n 2. j \\<notin> J \\<Longrightarrow>\n    x j =\n    (if j \\<in> J\n     then h (g j)\n           ((if g j \\<in> I then k (g j) else (\\<lambda>_. undefined))\n             (x (f (g j))))\n     else undefined)", "case True"], ["proof (state)\nthis:\n  j \\<in> J\n\ngoal (2 subgoals):\n 1. j \\<in> J \\<Longrightarrow>\n    x j =\n    (if j \\<in> J\n     then h (g j)\n           ((if g j \\<in> I then k (g j) else (\\<lambda>_. undefined))\n             (x (f (g j))))\n     else undefined)\n 2. j \\<notin> J \\<Longrightarrow>\n    x j =\n    (if j \\<in> J\n     then h (g j)\n           ((if g j \\<in> I then k (g j) else (\\<lambda>_. undefined))\n             (x (f (g j))))\n     else undefined)", "thus ?thesis"], ["proof (prove)\nusing this:\n  j \\<in> J\n\ngoal (1 subgoal):\n 1. x j =\n    (if j \\<in> J\n     then h (g j)\n           ((if g j \\<in> I then k (g j) else (\\<lambda>_. undefined))\n             (x (f (g j))))\n     else undefined)", "using hk[OF True comp_in_carr[OF that True]]\n                           fgi(2)[OF True] g[unfolded bij_betw_def]"], ["proof (prove)\nusing this:\n  j \\<in> J\n  x j = (h (g j) \\<circ> k (g j)) (x j)\n  f (g j) = j\n  g = inv_into I f\n  inj_on g J \\<and> g ` J = I\n\ngoal (1 subgoal):\n 1. x j =\n    (if j \\<in> J\n     then h (g j)\n           ((if g j \\<in> I then k (g j) else (\\<lambda>_. undefined))\n             (x (f (g j))))\n     else undefined)", "by auto"], ["proof (state)\nthis:\n  x j =\n  (if j \\<in> J\n   then h (g j)\n         ((if g j \\<in> I then k (g j) else (\\<lambda>_. undefined))\n           (x (f (g j))))\n   else undefined)\n\ngoal (1 subgoal):\n 1. j \\<notin> J \\<Longrightarrow>\n    x j =\n    (if j \\<in> J\n     then h (g j)\n           ((if g j \\<in> I then k (g j) else (\\<lambda>_. undefined))\n             (x (f (g j))))\n     else undefined)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. j \\<notin> J \\<Longrightarrow>\n    x j =\n    (if j \\<in> J\n     then h (g j)\n           ((if g j \\<in> I then k (g j) else (\\<lambda>_. undefined))\n             (x (f (g j))))\n     else undefined)", "case False"], ["proof (state)\nthis:\n  j \\<notin> J\n\ngoal (1 subgoal):\n 1. j \\<notin> J \\<Longrightarrow>\n    x j =\n    (if j \\<in> J\n     then h (g j)\n           ((if g j \\<in> I then k (g j) else (\\<lambda>_. undefined))\n             (x (f (g j))))\n     else undefined)", "thus ?thesis"], ["proof (prove)\nusing this:\n  j \\<notin> J\n\ngoal (1 subgoal):\n 1. x j =\n    (if j \\<in> J\n     then h (g j)\n           ((if g j \\<in> I then k (g j) else (\\<lambda>_. undefined))\n             (x (f (g j))))\n     else undefined)", "using that[unfolded DirProds_def]"], ["proof (prove)\nusing this:\n  j \\<notin> J\n  x \\<in> carrier\n           \\<lparr>carrier = Pi\\<^sub>E J (carrier \\<circ> Hs),\n              monoid.mult =\n                \\<lambda>x y.\n                   \\<lambda>i\\<in>J. x i \\<otimes>\\<^bsub>Hs i\\<^esub> y i,\n              one = \\<lambda>i\\<in>J. \\<one>\\<^bsub>Hs i\\<^esub>\\<rparr>\n\ngoal (1 subgoal):\n 1. x j =\n    (if j \\<in> J\n     then h (g j)\n           ((if g j \\<in> I then k (g j) else (\\<lambda>_. undefined))\n             (x (f (g j))))\n     else undefined)", "by auto"], ["proof (state)\nthis:\n  x j =\n  (if j \\<in> J\n   then h (g j)\n         ((if g j \\<in> I then k (g j) else (\\<lambda>_. undefined))\n           (x (f (g j))))\n   else undefined)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x ?j1 =\n  (if ?j1 \\<in> J\n   then h (g ?j1)\n         ((if g ?j1 \\<in> I then k (g ?j1) else (\\<lambda>_. undefined))\n           (x (f (g ?j1))))\n   else undefined)\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<lambda>x j.\n                if j \\<in> J then h (g j) (x (g j)) else undefined) `\n            carrier (DirProds Gs I)", "moreover"], ["proof (state)\nthis:\n  x ?j1 =\n  (if ?j1 \\<in> J\n   then h (g ?j1)\n         ((if g ?j1 \\<in> I then k (g ?j1) else (\\<lambda>_. undefined))\n           (x (f (g ?j1))))\n   else undefined)\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<lambda>x j.\n                if j \\<in> J then h (g j) (x (g j)) else undefined) `\n            carrier (DirProds Gs I)", "have \"?y \\<in> carrier (DirProds Gs I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>i.\n        (if i \\<in> I then k i else (\\<lambda>_. undefined)) (x (f i)))\n    \\<in> carrier (DirProds Gs I)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>i.\n        (if i \\<in> I then k i else (\\<lambda>_. undefined)) (x (f i)))\n    \\<in> carrier (DirProds Gs I)", "have \"?y i \\<in> carrier (Gs i)\" if i: \"i \\<in> I\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if i \\<in> I then k i else (\\<lambda>_. undefined)) (x (f i))\n    \\<in> carrier (Gs i)", "using k[OF i] h[OF i] comp_in_carr[OF xc] assms(1) bij_betwE iso_in_carr kiso that"], ["proof (prove)\nusing this:\n  k i = inv_into (carrier (Gs i)) (h i)\n  h i \\<in> Group.iso (Gs i) (Hs (f i))\n  ?i \\<in> J \\<Longrightarrow> x ?i \\<in> carrier (Hs ?i)\n  bij_betw f I J\n  bij_betw ?f ?A ?B \\<Longrightarrow> \\<forall>a\\<in>?A. ?f a \\<in> ?B\n  \\<lbrakk>?f \\<in> Group.iso ?G ?H; ?x \\<in> carrier ?G\\<rbrakk>\n  \\<Longrightarrow> ?f ?x \\<in> carrier ?H\n  ?i1 \\<in> I \\<Longrightarrow> k ?i1 \\<in> Group.iso (Hs (f ?i1)) (Gs ?i1)\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. (if i \\<in> I then k i else (\\<lambda>_. undefined)) (x (f i))\n    \\<in> carrier (Gs i)", "by fastforce"], ["proof (state)\nthis:\n  ?i1 \\<in> I \\<Longrightarrow>\n  (if ?i1 \\<in> I then k ?i1 else (\\<lambda>_. undefined)) (x (f ?i1))\n  \\<in> carrier (Gs ?i1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>i.\n        (if i \\<in> I then k i else (\\<lambda>_. undefined)) (x (f i)))\n    \\<in> carrier (DirProds Gs I)", "moreover"], ["proof (state)\nthis:\n  ?i1 \\<in> I \\<Longrightarrow>\n  (if ?i1 \\<in> I then k ?i1 else (\\<lambda>_. undefined)) (x (f ?i1))\n  \\<in> carrier (Gs ?i1)\n\ngoal (1 subgoal):\n 1. (\\<lambda>i.\n        (if i \\<in> I then k i else (\\<lambda>_. undefined)) (x (f i)))\n    \\<in> carrier (DirProds Gs I)", "have \"?y i = undefined\" if i: \"i \\<notin> I\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if i \\<in> I then k i else (\\<lambda>_. undefined)) (x (f i)) =\n    undefined", "using i"], ["proof (prove)\nusing this:\n  i \\<notin> I\n\ngoal (1 subgoal):\n 1. (if i \\<in> I then k i else (\\<lambda>_. undefined)) (x (f i)) =\n    undefined", "by simp"], ["proof (state)\nthis:\n  ?i1 \\<notin> I \\<Longrightarrow>\n  (if ?i1 \\<in> I then k ?i1 else (\\<lambda>_. undefined)) (x (f ?i1)) =\n  undefined\n\ngoal (1 subgoal):\n 1. (\\<lambda>i.\n        (if i \\<in> I then k i else (\\<lambda>_. undefined)) (x (f i)))\n    \\<in> carrier (DirProds Gs I)", "ultimately"], ["proof (chain)\npicking this:\n  ?i1 \\<in> I \\<Longrightarrow>\n  (if ?i1 \\<in> I then k ?i1 else (\\<lambda>_. undefined)) (x (f ?i1))\n  \\<in> carrier (Gs ?i1)\n  ?i1 \\<notin> I \\<Longrightarrow>\n  (if ?i1 \\<in> I then k ?i1 else (\\<lambda>_. undefined)) (x (f ?i1)) =\n  undefined", "show ?thesis"], ["proof (prove)\nusing this:\n  ?i1 \\<in> I \\<Longrightarrow>\n  (if ?i1 \\<in> I then k ?i1 else (\\<lambda>_. undefined)) (x (f ?i1))\n  \\<in> carrier (Gs ?i1)\n  ?i1 \\<notin> I \\<Longrightarrow>\n  (if ?i1 \\<in> I then k ?i1 else (\\<lambda>_. undefined)) (x (f ?i1)) =\n  undefined\n\ngoal (1 subgoal):\n 1. (\\<lambda>i.\n        (if i \\<in> I then k i else (\\<lambda>_. undefined)) (x (f i)))\n    \\<in> carrier (DirProds Gs I)", "unfolding DirProds_def PiE_def Pi_def extensional_def"], ["proof (prove)\nusing this:\n  ?i1 \\<in> I \\<Longrightarrow>\n  (if ?i1 \\<in> I then k ?i1 else (\\<lambda>_. undefined)) (x (f ?i1))\n  \\<in> carrier (Gs ?i1)\n  ?i1 \\<notin> I \\<Longrightarrow>\n  (if ?i1 \\<in> I then k ?i1 else (\\<lambda>_. undefined)) (x (f ?i1)) =\n  undefined\n\ngoal (1 subgoal):\n 1. (\\<lambda>i.\n        (if i \\<in> I then k i else (\\<lambda>_. undefined)) (x (f i)))\n    \\<in> carrier\n           \\<lparr>carrier =\n                     {f. \\<forall>x.\n                            x \\<in> I \\<longrightarrow>\n                            f x \\<in> (carrier \\<circ> Gs) x} \\<inter>\n                     {f. \\<forall>x.\n                            x \\<notin> I \\<longrightarrow> f x = undefined},\n              monoid.mult =\n                \\<lambda>x y.\n                   \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>Gs i\\<^esub> y i,\n              one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>Gs i\\<^esub>\\<rparr>", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>i.\n      (if i \\<in> I then k i else (\\<lambda>_. undefined)) (x (f i)))\n  \\<in> carrier (DirProds Gs I)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>i.\n      (if i \\<in> I then k i else (\\<lambda>_. undefined)) (x (f i)))\n  \\<in> carrier (DirProds Gs I)\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<lambda>x j.\n                if j \\<in> J then h (g j) (x (g j)) else undefined) `\n            carrier (DirProds Gs I)", "ultimately"], ["proof (chain)\npicking this:\n  x ?j1 =\n  (if ?j1 \\<in> J\n   then h (g ?j1)\n         ((if g ?j1 \\<in> I then k (g ?j1) else (\\<lambda>_. undefined))\n           (x (f (g ?j1))))\n   else undefined)\n  (\\<lambda>i.\n      (if i \\<in> I then k i else (\\<lambda>_. undefined)) (x (f i)))\n  \\<in> carrier (DirProds Gs I)", "show ?thesis"], ["proof (prove)\nusing this:\n  x ?j1 =\n  (if ?j1 \\<in> J\n   then h (g ?j1)\n         ((if g ?j1 \\<in> I then k (g ?j1) else (\\<lambda>_. undefined))\n           (x (f (g ?j1))))\n   else undefined)\n  (\\<lambda>i.\n      (if i \\<in> I then k i else (\\<lambda>_. undefined)) (x (f i)))\n  \\<in> carrier (DirProds Gs I)\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<lambda>x j.\n                if j \\<in> J then h (g j) (x (g j)) else undefined) `\n            carrier (DirProds Gs I)", "by fast"], ["proof (state)\nthis:\n  x \\<in> (\\<lambda>x j.\n              if j \\<in> J then h (g j) (x (g j)) else undefined) `\n          carrier (DirProds Gs I)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x1 \\<in> carrier (DirProds Hs J) \\<Longrightarrow>\n  ?x1\n  \\<in> (\\<lambda>x j. if j \\<in> J then h (g j) (x (g j)) else undefined) `\n        carrier (DirProds Gs I)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  carrier (DirProds Hs J)\n  \\<subseteq> (\\<lambda>x j.\n                  if j \\<in> J then h (g j) (x (g j)) else undefined) `\n              carrier (DirProds Gs I)\n\ngoal (1 subgoal):\n 1. DirProds Gs I \\<cong> DirProds Hs J", "moreover"], ["proof (state)\nthis:\n  carrier (DirProds Hs J)\n  \\<subseteq> (\\<lambda>x j.\n                  if j \\<in> J then h (g j) (x (g j)) else undefined) `\n              carrier (DirProds Gs I)\n\ngoal (1 subgoal):\n 1. DirProds Gs I \\<cong> DirProds Hs J", "have \"x = \\<one>\\<^bsub>DirProds Gs I\\<^esub>\"\n    if \"x \\<in> carrier (DirProds Gs I)\" \"?h x = \\<one>\\<^bsub>DirProds Hs J\\<^esub>\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. x = \\<one>\\<^bsub>DirProds Gs I\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x = \\<one>\\<^bsub>DirProds Gs I\\<^esub>", "have \"\\<forall>i\\<in>I. x i = \\<one>\\<^bsub>Gs i\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>I. x i = \\<one>\\<^bsub>Gs i\\<^esub>", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> I \\<Longrightarrow> x i = \\<one>\\<^bsub>Gs i\\<^esub>", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> I \\<Longrightarrow> x i = \\<one>\\<^bsub>Gs i\\<^esub>", "assume i: \"i \\<in> I\""], ["proof (state)\nthis:\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> I \\<Longrightarrow> x i = \\<one>\\<^bsub>Gs i\\<^esub>", "interpret gi: group \"Gs i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Group.group (Gs i)", "using assms(3)[OF i]"], ["proof (prove)\nusing this:\n  Group.group (Gs i)\n\ngoal (1 subgoal):\n 1. Group.group (Gs i)", "."], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> I \\<Longrightarrow> x i = \\<one>\\<^bsub>Gs i\\<^esub>", "interpret hfi: group \"Hs (f i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Group.group (Hs (f i))", "using assms(4) i assms(1)[unfolded bij_betw_def]"], ["proof (prove)\nusing this:\n  ?j \\<in> J \\<Longrightarrow> Group.group (Hs ?j)\n  i \\<in> I\n  inj_on f I \\<and> f ` I = J\n\ngoal (1 subgoal):\n 1. Group.group (Hs (f i))", "by blast"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> I \\<Longrightarrow> x i = \\<one>\\<^bsub>Gs i\\<^esub>", "from h[OF i]"], ["proof (chain)\npicking this:\n  h i \\<in> Group.iso (Gs i) (Hs (f i))", "interpret hi: group_hom \"(Gs i)\" \"Hs (f i)\" \"h i\""], ["proof (prove)\nusing this:\n  h i \\<in> Group.iso (Gs i) (Hs (f i))\n\ngoal (1 subgoal):\n 1. group_hom (Gs i) (Hs (f i)) (h i)", "unfolding group_hom_def group_hom_axioms_def iso_def"], ["proof (prove)\nusing this:\n  h i\n  \\<in> {h \\<in> hom (Gs i) (Hs (f i)).\n         bij_betw h (carrier (Gs i)) (carrier (Hs (f i)))}\n\ngoal (1 subgoal):\n 1. Group.group (Gs i) \\<and>\n    Group.group (Hs (f i)) \\<and> h i \\<in> hom (Gs i) (Hs (f i))", "by blast"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> I \\<Longrightarrow> x i = \\<one>\\<^bsub>Gs i\\<^esub>", "from that"], ["proof (chain)\npicking this:\n  x \\<in> carrier (DirProds Gs I)\n  (\\<lambda>j. if j \\<in> J then h (g j) (x (g j)) else undefined) =\n  \\<one>\\<^bsub>DirProds Hs J\\<^esub>", "have hx: \"?h x \\<in> carrier (DirProds Hs J)\""], ["proof (prove)\nusing this:\n  x \\<in> carrier (DirProds Gs I)\n  (\\<lambda>j. if j \\<in> J then h (g j) (x (g j)) else undefined) =\n  \\<one>\\<^bsub>DirProds Hs J\\<^esub>\n\ngoal (1 subgoal):\n 1. (\\<lambda>j. if j \\<in> J then h (g j) (x (g j)) else undefined)\n    \\<in> carrier (DirProds Hs J)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>j. if j \\<in> J then h (g j) (x (g j)) else undefined)\n  \\<in> carrier (DirProds Hs J)\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> I \\<Longrightarrow> x i = \\<one>\\<^bsub>Gs i\\<^esub>", "from DirProds_one[OF this] that(2)"], ["proof (chain)\npicking this:\n  (\\<forall>i\\<in>J.\n      (if i \\<in> J then h (g i) (x (g i)) else undefined) =\n      \\<one>\\<^bsub>Hs i\\<^esub>) =\n  ((\\<lambda>j. if j \\<in> J then h (g j) (x (g j)) else undefined) =\n   \\<one>\\<^bsub>DirProds Hs J\\<^esub>)\n  (\\<lambda>j. if j \\<in> J then h (g j) (x (g j)) else undefined) =\n  \\<one>\\<^bsub>DirProds Hs J\\<^esub>", "have \"(if j \\<in> J then h (g j) (x (g j)) else undefined) = \\<one>\\<^bsub>Hs j\\<^esub>\" if \"j \\<in> J\" for j"], ["proof (prove)\nusing this:\n  (\\<forall>i\\<in>J.\n      (if i \\<in> J then h (g i) (x (g i)) else undefined) =\n      \\<one>\\<^bsub>Hs i\\<^esub>) =\n  ((\\<lambda>j. if j \\<in> J then h (g j) (x (g j)) else undefined) =\n   \\<one>\\<^bsub>DirProds Hs J\\<^esub>)\n  (\\<lambda>j. if j \\<in> J then h (g j) (x (g j)) else undefined) =\n  \\<one>\\<^bsub>DirProds Hs J\\<^esub>\n\ngoal (1 subgoal):\n 1. (if j \\<in> J then h (g j) (x (g j)) else undefined) =\n    \\<one>\\<^bsub>Hs j\\<^esub>", "using that"], ["proof (prove)\nusing this:\n  (\\<forall>i\\<in>J.\n      (if i \\<in> J then h (g i) (x (g i)) else undefined) =\n      \\<one>\\<^bsub>Hs i\\<^esub>) =\n  ((\\<lambda>j. if j \\<in> J then h (g j) (x (g j)) else undefined) =\n   \\<one>\\<^bsub>DirProds Hs J\\<^esub>)\n  (\\<lambda>j. if j \\<in> J then h (g j) (x (g j)) else undefined) =\n  \\<one>\\<^bsub>DirProds Hs J\\<^esub>\n  j \\<in> J\n\ngoal (1 subgoal):\n 1. (if j \\<in> J then h (g j) (x (g j)) else undefined) =\n    \\<one>\\<^bsub>Hs j\\<^esub>", "by blast"], ["proof (state)\nthis:\n  ?j1 \\<in> J \\<Longrightarrow>\n  (if ?j1 \\<in> J then h (g ?j1) (x (g ?j1)) else undefined) =\n  \\<one>\\<^bsub>Hs ?j1\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> I \\<Longrightarrow> x i = \\<one>\\<^bsub>Gs i\\<^esub>", "hence \"h (g (f i)) (x (g (f i))) = \\<one>\\<^bsub>Hs (f i)\\<^esub>\""], ["proof (prove)\nusing this:\n  ?j1 \\<in> J \\<Longrightarrow>\n  (if ?j1 \\<in> J then h (g ?j1) (x (g ?j1)) else undefined) =\n  \\<one>\\<^bsub>Hs ?j1\\<^esub>\n\ngoal (1 subgoal):\n 1. h (g (f i)) (x (g (f i))) = \\<one>\\<^bsub>Hs (f i)\\<^esub>", "using i assms(1)[unfolded bij_betw_def]"], ["proof (prove)\nusing this:\n  ?j1 \\<in> J \\<Longrightarrow>\n  (if ?j1 \\<in> J then h (g ?j1) (x (g ?j1)) else undefined) =\n  \\<one>\\<^bsub>Hs ?j1\\<^esub>\n  i \\<in> I\n  inj_on f I \\<and> f ` I = J\n\ngoal (1 subgoal):\n 1. h (g (f i)) (x (g (f i))) = \\<one>\\<^bsub>Hs (f i)\\<^esub>", "by auto"], ["proof (state)\nthis:\n  h (g (f i)) (x (g (f i))) = \\<one>\\<^bsub>Hs (f i)\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> I \\<Longrightarrow> x i = \\<one>\\<^bsub>Gs i\\<^esub>", "hence \"h i (x i) = \\<one>\\<^bsub>Hs (f i)\\<^esub>\""], ["proof (prove)\nusing this:\n  h (g (f i)) (x (g (f i))) = \\<one>\\<^bsub>Hs (f i)\\<^esub>\n\ngoal (1 subgoal):\n 1. h i (x i) = \\<one>\\<^bsub>Hs (f i)\\<^esub>", "using fgi(1)[OF i]"], ["proof (prove)\nusing this:\n  h (g (f i)) (x (g (f i))) = \\<one>\\<^bsub>Hs (f i)\\<^esub>\n  g (f i) = i\n\ngoal (1 subgoal):\n 1. h i (x i) = \\<one>\\<^bsub>Hs (f i)\\<^esub>", "by simp"], ["proof (state)\nthis:\n  h i (x i) = \\<one>\\<^bsub>Hs (f i)\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> I \\<Longrightarrow> x i = \\<one>\\<^bsub>Gs i\\<^esub>", "with hi.iso_iff h[OF i] comp_in_carr[OF that(1) i]"], ["proof (chain)\npicking this:\n  (h i \\<in> Group.iso (Gs i) (Hs (f i))) =\n  (carrier (Hs (f i)) \\<subseteq> h i ` carrier (Gs i) \\<and>\n   (\\<forall>x\\<in>carrier (Gs i).\n       h i x = \\<one>\\<^bsub>Hs (f i)\\<^esub> \\<longrightarrow>\n       x = \\<one>\\<^bsub>Gs i\\<^esub>))\n  h i \\<in> Group.iso (Gs i) (Hs (f i))\n  x i \\<in> carrier (Gs i)\n  h i (x i) = \\<one>\\<^bsub>Hs (f i)\\<^esub>", "show \"x i = \\<one>\\<^bsub>Gs i\\<^esub>\""], ["proof (prove)\nusing this:\n  (h i \\<in> Group.iso (Gs i) (Hs (f i))) =\n  (carrier (Hs (f i)) \\<subseteq> h i ` carrier (Gs i) \\<and>\n   (\\<forall>x\\<in>carrier (Gs i).\n       h i x = \\<one>\\<^bsub>Hs (f i)\\<^esub> \\<longrightarrow>\n       x = \\<one>\\<^bsub>Gs i\\<^esub>))\n  h i \\<in> Group.iso (Gs i) (Hs (f i))\n  x i \\<in> carrier (Gs i)\n  h i (x i) = \\<one>\\<^bsub>Hs (f i)\\<^esub>\n\ngoal (1 subgoal):\n 1. x i = \\<one>\\<^bsub>Gs i\\<^esub>", "by fast"], ["proof (state)\nthis:\n  x i = \\<one>\\<^bsub>Gs i\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i\\<in>I. x i = \\<one>\\<^bsub>Gs i\\<^esub>\n\ngoal (1 subgoal):\n 1. x = \\<one>\\<^bsub>DirProds Gs I\\<^esub>", "with DirProds_one that"], ["proof (chain)\npicking this:\n  ?x \\<in> carrier (DirProds ?G ?I) \\<Longrightarrow>\n  (\\<forall>i\\<in>?I. ?x i = \\<one>\\<^bsub>?G i\\<^esub>) =\n  (?x = \\<one>\\<^bsub>DirProds ?G ?I\\<^esub>)\n  x \\<in> carrier (DirProds Gs I)\n  (\\<lambda>j. if j \\<in> J then h (g j) (x (g j)) else undefined) =\n  \\<one>\\<^bsub>DirProds Hs J\\<^esub>\n  \\<forall>i\\<in>I. x i = \\<one>\\<^bsub>Gs i\\<^esub>", "show ?thesis"], ["proof (prove)\nusing this:\n  ?x \\<in> carrier (DirProds ?G ?I) \\<Longrightarrow>\n  (\\<forall>i\\<in>?I. ?x i = \\<one>\\<^bsub>?G i\\<^esub>) =\n  (?x = \\<one>\\<^bsub>DirProds ?G ?I\\<^esub>)\n  x \\<in> carrier (DirProds Gs I)\n  (\\<lambda>j. if j \\<in> J then h (g j) (x (g j)) else undefined) =\n  \\<one>\\<^bsub>DirProds Hs J\\<^esub>\n  \\<forall>i\\<in>I. x i = \\<one>\\<^bsub>Gs i\\<^esub>\n\ngoal (1 subgoal):\n 1. x = \\<one>\\<^bsub>DirProds Gs I\\<^esub>", "using assms(3)"], ["proof (prove)\nusing this:\n  ?x \\<in> carrier (DirProds ?G ?I) \\<Longrightarrow>\n  (\\<forall>i\\<in>?I. ?x i = \\<one>\\<^bsub>?G i\\<^esub>) =\n  (?x = \\<one>\\<^bsub>DirProds ?G ?I\\<^esub>)\n  x \\<in> carrier (DirProds Gs I)\n  (\\<lambda>j. if j \\<in> J then h (g j) (x (g j)) else undefined) =\n  \\<one>\\<^bsub>DirProds Hs J\\<^esub>\n  \\<forall>i\\<in>I. x i = \\<one>\\<^bsub>Gs i\\<^esub>\n  ?i \\<in> I \\<Longrightarrow> Group.group (Gs ?i)\n\ngoal (1 subgoal):\n 1. x = \\<one>\\<^bsub>DirProds Gs I\\<^esub>", "by blast"], ["proof (state)\nthis:\n  x = \\<one>\\<^bsub>DirProds Gs I\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?x1 \\<in> carrier (DirProds Gs I);\n   (\\<lambda>j. if j \\<in> J then h (g j) (?x1 (g j)) else undefined) =\n   \\<one>\\<^bsub>DirProds Hs J\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> ?x1 = \\<one>\\<^bsub>DirProds Gs I\\<^esub>\n\ngoal (1 subgoal):\n 1. DirProds Gs I \\<cong> DirProds Hs J", "ultimately"], ["proof (chain)\npicking this:\n  carrier (DirProds Hs J)\n  \\<subseteq> (\\<lambda>x j.\n                  if j \\<in> J then h (g j) (x (g j)) else undefined) `\n              carrier (DirProds Gs I)\n  \\<lbrakk>?x1 \\<in> carrier (DirProds Gs I);\n   (\\<lambda>j. if j \\<in> J then h (g j) (?x1 (g j)) else undefined) =\n   \\<one>\\<^bsub>DirProds Hs J\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> ?x1 = \\<one>\\<^bsub>DirProds Gs I\\<^esub>", "show ?thesis"], ["proof (prove)\nusing this:\n  carrier (DirProds Hs J)\n  \\<subseteq> (\\<lambda>x j.\n                  if j \\<in> J then h (g j) (x (g j)) else undefined) `\n              carrier (DirProds Gs I)\n  \\<lbrakk>?x1 \\<in> carrier (DirProds Gs I);\n   (\\<lambda>j. if j \\<in> J then h (g j) (?x1 (g j)) else undefined) =\n   \\<one>\\<^bsub>DirProds Hs J\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> ?x1 = \\<one>\\<^bsub>DirProds Gs I\\<^esub>\n\ngoal (1 subgoal):\n 1. DirProds Gs I \\<cong> DirProds Hs J", "unfolding is_iso_def"], ["proof (prove)\nusing this:\n  carrier (DirProds Hs J)\n  \\<subseteq> (\\<lambda>x j.\n                  if j \\<in> J then h (g j) (x (g j)) else undefined) `\n              carrier (DirProds Gs I)\n  \\<lbrakk>?x1 \\<in> carrier (DirProds Gs I);\n   (\\<lambda>j. if j \\<in> J then h (g j) (?x1 (g j)) else undefined) =\n   \\<one>\\<^bsub>DirProds Hs J\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> ?x1 = \\<one>\\<^bsub>DirProds Gs I\\<^esub>\n\ngoal (1 subgoal):\n 1. Group.iso (DirProds Gs I) (DirProds Hs J) \\<noteq> {}", "using hgh.iso_iff"], ["proof (prove)\nusing this:\n  carrier (DirProds Hs J)\n  \\<subseteq> (\\<lambda>x j.\n                  if j \\<in> J then h (g j) (x (g j)) else undefined) `\n              carrier (DirProds Gs I)\n  \\<lbrakk>?x1 \\<in> carrier (DirProds Gs I);\n   (\\<lambda>j. if j \\<in> J then h (g j) (?x1 (g j)) else undefined) =\n   \\<one>\\<^bsub>DirProds Hs J\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> ?x1 = \\<one>\\<^bsub>DirProds Gs I\\<^esub>\n  ((\\<lambda>x j. if j \\<in> J then h (g j) (x (g j)) else undefined)\n   \\<in> Group.iso (DirProds Gs I) (DirProds Hs J)) =\n  (carrier (DirProds Hs J)\n   \\<subseteq> (\\<lambda>x j.\n                   if j \\<in> J then h (g j) (x (g j)) else undefined) `\n               carrier (DirProds Gs I) \\<and>\n   (\\<forall>x\\<in>carrier (DirProds Gs I).\n       (\\<lambda>j. if j \\<in> J then h (g j) (x (g j)) else undefined) =\n       \\<one>\\<^bsub>DirProds Hs J\\<^esub> \\<longrightarrow>\n       x = \\<one>\\<^bsub>DirProds Gs I\\<^esub>))\n\ngoal (1 subgoal):\n 1. Group.iso (DirProds Gs I) (DirProds Hs J) \\<noteq> {}", "by blast"], ["proof (state)\nthis:\n  DirProds Gs I \\<cong> DirProds Hs J\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma DirProds_iso1:\n  assumes \"\\<And>i. i\\<in>I \\<Longrightarrow> Gs i \\<cong> (f \\<circ> Gs) i\" \"\\<And>i. i\\<in>I \\<Longrightarrow> group (Gs i)\" \"\\<And>i. i\\<in>I \\<Longrightarrow> group ((f \\<circ> Gs) i)\"\n  shows \"DirProds Gs I \\<cong> DirProds (f \\<circ> Gs) I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. DirProds Gs I \\<cong> DirProds (f \\<circ> Gs) I", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. DirProds Gs I \\<cong> DirProds (f \\<circ> Gs) I", "interpret DP: group \"DirProds Gs I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Group.group (DirProds Gs I)", "using DirProds_is_group assms"], ["proof (prove)\nusing this:\n  (\\<And>i.\n      i \\<in> ?I \\<Longrightarrow> Group.group (?G i)) \\<Longrightarrow>\n  Group.group (DirProds ?G ?I)\n  ?i \\<in> I \\<Longrightarrow> Gs ?i \\<cong> (f \\<circ> Gs) ?i\n  ?i \\<in> I \\<Longrightarrow> Group.group (Gs ?i)\n  ?i \\<in> I \\<Longrightarrow> Group.group ((f \\<circ> Gs) ?i)\n\ngoal (1 subgoal):\n 1. Group.group (DirProds Gs I)", "by metis"], ["proof (state)\ngoal (1 subgoal):\n 1. DirProds Gs I \\<cong> DirProds (f \\<circ> Gs) I", "interpret fDP: group \"DirProds (f \\<circ> Gs) I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Group.group (DirProds (f \\<circ> Gs) I)", "using DirProds_is_group assms"], ["proof (prove)\nusing this:\n  (\\<And>i.\n      i \\<in> ?I \\<Longrightarrow> Group.group (?G i)) \\<Longrightarrow>\n  Group.group (DirProds ?G ?I)\n  ?i \\<in> I \\<Longrightarrow> Gs ?i \\<cong> (f \\<circ> Gs) ?i\n  ?i \\<in> I \\<Longrightarrow> Group.group (Gs ?i)\n  ?i \\<in> I \\<Longrightarrow> Group.group ((f \\<circ> Gs) ?i)\n\ngoal (1 subgoal):\n 1. Group.group (DirProds (f \\<circ> Gs) I)", "by metis"], ["proof (state)\ngoal (1 subgoal):\n 1. DirProds Gs I \\<cong> DirProds (f \\<circ> Gs) I", "from assms"], ["proof (chain)\npicking this:\n  ?i \\<in> I \\<Longrightarrow> Gs ?i \\<cong> (f \\<circ> Gs) ?i\n  ?i \\<in> I \\<Longrightarrow> Group.group (Gs ?i)\n  ?i \\<in> I \\<Longrightarrow> Group.group ((f \\<circ> Gs) ?i)", "have \"\\<forall>i\\<in>I. (\\<exists>g. g \\<in> iso (Gs i) ((f \\<circ> Gs) i))\""], ["proof (prove)\nusing this:\n  ?i \\<in> I \\<Longrightarrow> Gs ?i \\<cong> (f \\<circ> Gs) ?i\n  ?i \\<in> I \\<Longrightarrow> Group.group (Gs ?i)\n  ?i \\<in> I \\<Longrightarrow> Group.group ((f \\<circ> Gs) ?i)\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>I.\n       \\<exists>g. g \\<in> Group.iso (Gs i) ((f \\<circ> Gs) i)", "unfolding is_iso_def"], ["proof (prove)\nusing this:\n  ?i \\<in> I \\<Longrightarrow>\n  Group.iso (Gs ?i) ((f \\<circ> Gs) ?i) \\<noteq> {}\n  ?i \\<in> I \\<Longrightarrow> Group.group (Gs ?i)\n  ?i \\<in> I \\<Longrightarrow> Group.group ((f \\<circ> Gs) ?i)\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>I.\n       \\<exists>g. g \\<in> Group.iso (Gs i) ((f \\<circ> Gs) i)", "by blast"], ["proof (state)\nthis:\n  \\<forall>i\\<in>I. \\<exists>g. g \\<in> Group.iso (Gs i) ((f \\<circ> Gs) i)\n\ngoal (1 subgoal):\n 1. DirProds Gs I \\<cong> DirProds (f \\<circ> Gs) I", "then"], ["proof (chain)\npicking this:\n  \\<forall>i\\<in>I. \\<exists>g. g \\<in> Group.iso (Gs i) ((f \\<circ> Gs) i)", "obtain J where J: \"\\<forall>i\\<in>I. J i \\<in> iso (Gs i) ((f \\<circ> Gs) i)\""], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>I. \\<exists>g. g \\<in> Group.iso (Gs i) ((f \\<circ> Gs) i)\n\ngoal (1 subgoal):\n 1. (\\<And>J.\n        \\<forall>i\\<in>I.\n           J i \\<in> Group.iso (Gs i) ((f \\<circ> Gs) i) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  \\<forall>i\\<in>I. J i \\<in> Group.iso (Gs i) ((f \\<circ> Gs) i)\n\ngoal (1 subgoal):\n 1. DirProds Gs I \\<cong> DirProds (f \\<circ> Gs) I", "let ?J = \"(\\<lambda>i. if i\\<in>I then J i else (\\<lambda>_. undefined))\""], ["proof (state)\ngoal (1 subgoal):\n 1. DirProds Gs I \\<cong> DirProds (f \\<circ> Gs) I", "from J"], ["proof (chain)\npicking this:\n  \\<forall>i\\<in>I. J i \\<in> Group.iso (Gs i) ((f \\<circ> Gs) i)", "obtain K where K: \"\\<forall>i\\<in>I. K i = inv_into (carrier (Gs i)) (J i)\""], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>I. J i \\<in> Group.iso (Gs i) ((f \\<circ> Gs) i)\n\ngoal (1 subgoal):\n 1. (\\<And>K.\n        \\<forall>i\\<in>I.\n           K i = inv_into (carrier (Gs i)) (J i) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by fast"], ["proof (state)\nthis:\n  \\<forall>i\\<in>I. K i = inv_into (carrier (Gs i)) (J i)\n\ngoal (1 subgoal):\n 1. DirProds Gs I \\<cong> DirProds (f \\<circ> Gs) I", "hence K_iso: \"\\<forall>i\\<in>I. K i \\<in> iso ((f \\<circ> Gs) i) (Gs i)\""], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>I. K i = inv_into (carrier (Gs i)) (J i)\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>I. K i \\<in> Group.iso ((f \\<circ> Gs) i) (Gs i)", "using group.iso_set_sym assms J"], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>I. K i = inv_into (carrier (Gs i)) (J i)\n  \\<lbrakk>Group.group ?G; ?h \\<in> Group.iso ?G ?H\\<rbrakk>\n  \\<Longrightarrow> inv_into (carrier ?G) ?h \\<in> Group.iso ?H ?G\n  ?i \\<in> I \\<Longrightarrow> Gs ?i \\<cong> (f \\<circ> Gs) ?i\n  ?i \\<in> I \\<Longrightarrow> Group.group (Gs ?i)\n  ?i \\<in> I \\<Longrightarrow> Group.group ((f \\<circ> Gs) ?i)\n  \\<forall>i\\<in>I. J i \\<in> Group.iso (Gs i) ((f \\<circ> Gs) i)\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>I. K i \\<in> Group.iso ((f \\<circ> Gs) i) (Gs i)", "by metis"], ["proof (state)\nthis:\n  \\<forall>i\\<in>I. K i \\<in> Group.iso ((f \\<circ> Gs) i) (Gs i)\n\ngoal (1 subgoal):\n 1. DirProds Gs I \\<cong> DirProds (f \\<circ> Gs) I", "let ?K = \"(\\<lambda>i. if i\\<in>I then K i else (\\<lambda>_. undefined))\""], ["proof (state)\ngoal (1 subgoal):\n 1. DirProds Gs I \\<cong> DirProds (f \\<circ> Gs) I", "have JKi: \"(?J i) ((?K i) (x i)) = x i\" if \"x \\<in> carrier (DirProds (f \\<circ> Gs) I)\" for i x"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if i \\<in> I then J i else (\\<lambda>_. undefined))\n     ((if i \\<in> I then K i else (\\<lambda>_. undefined)) (x i)) =\n    x i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (if i \\<in> I then J i else (\\<lambda>_. undefined))\n     ((if i \\<in> I then K i else (\\<lambda>_. undefined)) (x i)) =\n    x i", "have \"(J i) ((K i) (x i)) = x i\" if \"x \\<in> carrier (DirProds (f \\<circ> Gs) I)\" \"i \\<in> I\" for i x"], ["proof (prove)\ngoal (1 subgoal):\n 1. J i (K i (x i)) = x i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. J i (K i (x i)) = x i", "from J that"], ["proof (chain)\npicking this:\n  \\<forall>i\\<in>I. J i \\<in> Group.iso (Gs i) ((f \\<circ> Gs) i)\n  x \\<in> carrier (DirProds (f \\<circ> Gs) I)\n  i \\<in> I", "have \"(J i) ` (carrier (Gs i)) = carrier ((f \\<circ> Gs) i)\""], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>I. J i \\<in> Group.iso (Gs i) ((f \\<circ> Gs) i)\n  x \\<in> carrier (DirProds (f \\<circ> Gs) I)\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. J i ` carrier (Gs i) = carrier ((f \\<circ> Gs) i)", "unfolding iso_def bij_betw_def"], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>I.\n     J i\n     \\<in> {h \\<in> hom (Gs i) ((f \\<circ> Gs) i).\n            inj_on h (carrier (Gs i)) \\<and>\n            h ` carrier (Gs i) = carrier ((f \\<circ> Gs) i)}\n  x \\<in> carrier (DirProds (f \\<circ> Gs) I)\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. J i ` carrier (Gs i) = carrier ((f \\<circ> Gs) i)", "by blast"], ["proof (state)\nthis:\n  J i ` carrier (Gs i) = carrier ((f \\<circ> Gs) i)\n\ngoal (1 subgoal):\n 1. J i (K i (x i)) = x i", "hence \"\\<exists>y. y \\<in> carrier (Gs i) \\<and> (J i) y = x i\""], ["proof (prove)\nusing this:\n  J i ` carrier (Gs i) = carrier ((f \\<circ> Gs) i)\n\ngoal (1 subgoal):\n 1. \\<exists>y. y \\<in> carrier (Gs i) \\<and> J i y = x i", "using that"], ["proof (prove)\nusing this:\n  J i ` carrier (Gs i) = carrier ((f \\<circ> Gs) i)\n  x \\<in> carrier (DirProds (f \\<circ> Gs) I)\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. \\<exists>y. y \\<in> carrier (Gs i) \\<and> J i y = x i", "by (metis comp_in_carr imageE)"], ["proof (state)\nthis:\n  \\<exists>y. y \\<in> carrier (Gs i) \\<and> J i y = x i\n\ngoal (1 subgoal):\n 1. J i (K i (x i)) = x i", "with someI_ex[OF this] that"], ["proof (chain)\npicking this:\n  (SOME x. x \\<in> carrier (Gs i) \\<and> J i x = x i)\n  \\<in> carrier (Gs i) \\<and>\n  J i (SOME x. x \\<in> carrier (Gs i) \\<and> J i x = x i) = x i\n  x \\<in> carrier (DirProds (f \\<circ> Gs) I)\n  i \\<in> I\n  \\<exists>y. y \\<in> carrier (Gs i) \\<and> J i y = x i", "show \"(J i) ((K i) (x i)) = x i\""], ["proof (prove)\nusing this:\n  (SOME x. x \\<in> carrier (Gs i) \\<and> J i x = x i)\n  \\<in> carrier (Gs i) \\<and>\n  J i (SOME x. x \\<in> carrier (Gs i) \\<and> J i x = x i) = x i\n  x \\<in> carrier (DirProds (f \\<circ> Gs) I)\n  i \\<in> I\n  \\<exists>y. y \\<in> carrier (Gs i) \\<and> J i y = x i\n\ngoal (1 subgoal):\n 1. J i (K i (x i)) = x i", "using K J K_iso"], ["proof (prove)\nusing this:\n  (SOME x. x \\<in> carrier (Gs i) \\<and> J i x = x i)\n  \\<in> carrier (Gs i) \\<and>\n  J i (SOME x. x \\<in> carrier (Gs i) \\<and> J i x = x i) = x i\n  x \\<in> carrier (DirProds (f \\<circ> Gs) I)\n  i \\<in> I\n  \\<exists>y. y \\<in> carrier (Gs i) \\<and> J i y = x i\n  \\<forall>i\\<in>I. K i = inv_into (carrier (Gs i)) (J i)\n  \\<forall>i\\<in>I. J i \\<in> Group.iso (Gs i) ((f \\<circ> Gs) i)\n  \\<forall>i\\<in>I. K i \\<in> Group.iso ((f \\<circ> Gs) i) (Gs i)\n\ngoal (1 subgoal):\n 1. J i (K i (x i)) = x i", "unfolding inv_into_def"], ["proof (prove)\nusing this:\n  (SOME x. x \\<in> carrier (Gs i) \\<and> J i x = x i)\n  \\<in> carrier (Gs i) \\<and>\n  J i (SOME x. x \\<in> carrier (Gs i) \\<and> J i x = x i) = x i\n  x \\<in> carrier (DirProds (f \\<circ> Gs) I)\n  i \\<in> I\n  \\<exists>y. y \\<in> carrier (Gs i) \\<and> J i y = x i\n  \\<forall>i\\<in>I.\n     K i = (\\<lambda>x. SOME y. y \\<in> carrier (Gs i) \\<and> J i y = x)\n  \\<forall>i\\<in>I. J i \\<in> Group.iso (Gs i) ((f \\<circ> Gs) i)\n  \\<forall>i\\<in>I. K i \\<in> Group.iso ((f \\<circ> Gs) i) (Gs i)\n\ngoal (1 subgoal):\n 1. J i (K i (x i)) = x i", "by auto"], ["proof (state)\nthis:\n  J i (K i (x i)) = x i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?x1 \\<in> carrier (DirProds (f \\<circ> Gs) I);\n   ?i1 \\<in> I\\<rbrakk>\n  \\<Longrightarrow> J ?i1 (K ?i1 (?x1 ?i1)) = ?x1 ?i1\n\ngoal (1 subgoal):\n 1. (if i \\<in> I then J i else (\\<lambda>_. undefined))\n     ((if i \\<in> I then K i else (\\<lambda>_. undefined)) (x i)) =\n    x i", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>?x1 \\<in> carrier (DirProds (f \\<circ> Gs) I);\n   ?i1 \\<in> I\\<rbrakk>\n  \\<Longrightarrow> J ?i1 (K ?i1 (?x1 ?i1)) = ?x1 ?i1\n\ngoal (1 subgoal):\n 1. (if i \\<in> I then J i else (\\<lambda>_. undefined))\n     ((if i \\<in> I then K i else (\\<lambda>_. undefined)) (x i)) =\n    x i", "have \"(?J i) ((K i) (x i)) = x i\" if \"x \\<in> carrier (DirProds (f \\<circ> Gs) I)\" \"i \\<notin> I\" for i x"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if i \\<in> I then J i else (\\<lambda>_. undefined)) (K i (x i)) = x i", "using that"], ["proof (prove)\nusing this:\n  x \\<in> carrier (DirProds (f \\<circ> Gs) I)\n  i \\<notin> I\n\ngoal (1 subgoal):\n 1. (if i \\<in> I then J i else (\\<lambda>_. undefined)) (K i (x i)) = x i", "unfolding DirProds_def PiE_def extensional_def"], ["proof (prove)\nusing this:\n  x \\<in> carrier\n           \\<lparr>carrier =\n                     Pi I (carrier \\<circ> (f \\<circ> Gs)) \\<inter>\n                     {f. \\<forall>x.\n                            x \\<notin> I \\<longrightarrow> f x = undefined},\n              monoid.mult =\n                \\<lambda>x y.\n                   \\<lambda>i\\<in>I.\n                      x i \\<otimes>\\<^bsub>(f \\<circ> Gs) i\\<^esub> y i,\n              one =\n                \\<lambda>i\\<in>I.\n                   \\<one>\\<^bsub>(f \\<circ> Gs) i\\<^esub>\\<rparr>\n  i \\<notin> I\n\ngoal (1 subgoal):\n 1. (if i \\<in> I then J i else (\\<lambda>_. undefined)) (K i (x i)) = x i", "by force"], ["proof (state)\nthis:\n  \\<lbrakk>?x1 \\<in> carrier (DirProds (f \\<circ> Gs) I);\n   ?i1 \\<notin> I\\<rbrakk>\n  \\<Longrightarrow> (if ?i1 \\<in> I then J ?i1 else (\\<lambda>_. undefined))\n                     (K ?i1 (?x1 ?i1)) =\n                    ?x1 ?i1\n\ngoal (1 subgoal):\n 1. (if i \\<in> I then J i else (\\<lambda>_. undefined))\n     ((if i \\<in> I then K i else (\\<lambda>_. undefined)) (x i)) =\n    x i", "ultimately"], ["proof (chain)\npicking this:\n  \\<lbrakk>?x1 \\<in> carrier (DirProds (f \\<circ> Gs) I);\n   ?i1 \\<in> I\\<rbrakk>\n  \\<Longrightarrow> J ?i1 (K ?i1 (?x1 ?i1)) = ?x1 ?i1\n  \\<lbrakk>?x1 \\<in> carrier (DirProds (f \\<circ> Gs) I);\n   ?i1 \\<notin> I\\<rbrakk>\n  \\<Longrightarrow> (if ?i1 \\<in> I then J ?i1 else (\\<lambda>_. undefined))\n                     (K ?i1 (?x1 ?i1)) =\n                    ?x1 ?i1", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x1 \\<in> carrier (DirProds (f \\<circ> Gs) I);\n   ?i1 \\<in> I\\<rbrakk>\n  \\<Longrightarrow> J ?i1 (K ?i1 (?x1 ?i1)) = ?x1 ?i1\n  \\<lbrakk>?x1 \\<in> carrier (DirProds (f \\<circ> Gs) I);\n   ?i1 \\<notin> I\\<rbrakk>\n  \\<Longrightarrow> (if ?i1 \\<in> I then J ?i1 else (\\<lambda>_. undefined))\n                     (K ?i1 (?x1 ?i1)) =\n                    ?x1 ?i1\n\ngoal (1 subgoal):\n 1. (if i \\<in> I then J i else (\\<lambda>_. undefined))\n     ((if i \\<in> I then K i else (\\<lambda>_. undefined)) (x i)) =\n    x i", "using that"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x1 \\<in> carrier (DirProds (f \\<circ> Gs) I);\n   ?i1 \\<in> I\\<rbrakk>\n  \\<Longrightarrow> J ?i1 (K ?i1 (?x1 ?i1)) = ?x1 ?i1\n  \\<lbrakk>?x1 \\<in> carrier (DirProds (f \\<circ> Gs) I);\n   ?i1 \\<notin> I\\<rbrakk>\n  \\<Longrightarrow> (if ?i1 \\<in> I then J ?i1 else (\\<lambda>_. undefined))\n                     (K ?i1 (?x1 ?i1)) =\n                    ?x1 ?i1\n  x \\<in> carrier (DirProds (f \\<circ> Gs) I)\n\ngoal (1 subgoal):\n 1. (if i \\<in> I then J i else (\\<lambda>_. undefined))\n     ((if i \\<in> I then K i else (\\<lambda>_. undefined)) (x i)) =\n    x i", "by simp"], ["proof (state)\nthis:\n  (if i \\<in> I then J i else (\\<lambda>_. undefined))\n   ((if i \\<in> I then K i else (\\<lambda>_. undefined)) (x i)) =\n  x i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x1 \\<in> carrier (DirProds (f \\<circ> Gs) I) \\<Longrightarrow>\n  (if ?i1 \\<in> I then J ?i1 else (\\<lambda>_. undefined))\n   ((if ?i1 \\<in> I then K ?i1 else (\\<lambda>_. undefined)) (?x1 ?i1)) =\n  ?x1 ?i1\n\ngoal (1 subgoal):\n 1. DirProds Gs I \\<cong> DirProds (f \\<circ> Gs) I", "let ?r = \"(\\<lambda>e. restrict (\\<lambda>i. ?J i (e i)) I)\""], ["proof (state)\ngoal (1 subgoal):\n 1. DirProds Gs I \\<cong> DirProds (f \\<circ> Gs) I", "have hom: \"?r \\<in> hom (DirProds Gs I) (DirProds (f \\<circ> Gs) I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>e.\n        \\<lambda>i\\<in>I.\n           (if i \\<in> I then J i else (\\<lambda>_. undefined)) (e i))\n    \\<in> hom (DirProds Gs I) (DirProds (f \\<circ> Gs) I)", "proof (intro homI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> carrier (DirProds Gs I) \\<Longrightarrow>\n       (\\<lambda>i\\<in>I.\n           (if i \\<in> I then J i else (\\<lambda>_. undefined)) (x i))\n       \\<in> carrier (DirProds (f \\<circ> Gs) I)\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (DirProds Gs I);\n        y \\<in> carrier (DirProds Gs I)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>i\\<in>I.\n                             (if i \\<in> I then J i\n                              else (\\<lambda>_. undefined))\n                              ((x \\<otimes>\\<^bsub>DirProds Gs I\\<^esub> y)\n                                i)) =\n                         (\\<lambda>i\\<in>I.\n                             (if i \\<in> I then J i\n                              else (\\<lambda>_. undefined))\n                              (x i)) \\<otimes>\\<^bsub>DirProds (f \\<circ> Gs) I\\<^esub>\n                         (\\<lambda>i\\<in>I.\n                             (if i \\<in> I then J i\n                              else (\\<lambda>_. undefined))\n                              (y i))", "show \"?r x \\<in> carrier (DirProds (f \\<circ> Gs) I)\" if \"x \\<in> carrier (DirProds Gs I)\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>i\\<in>I.\n        (if i \\<in> I then J i else (\\<lambda>_. undefined)) (x i))\n    \\<in> carrier (DirProds (f \\<circ> Gs) I)", "using that J comp_in_carr[OF that]"], ["proof (prove)\nusing this:\n  x \\<in> carrier (DirProds Gs I)\n  \\<forall>i\\<in>I. J i \\<in> Group.iso (Gs i) ((f \\<circ> Gs) i)\n  ?i \\<in> I \\<Longrightarrow> x ?i \\<in> carrier (Gs ?i)\n\ngoal (1 subgoal):\n 1. (\\<lambda>i\\<in>I.\n        (if i \\<in> I then J i else (\\<lambda>_. undefined)) (x i))\n    \\<in> carrier (DirProds (f \\<circ> Gs) I)", "unfolding DirProds_def iso_def bij_betw_def"], ["proof (prove)\nusing this:\n  x \\<in> carrier\n           \\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> Gs),\n              monoid.mult =\n                \\<lambda>x y.\n                   \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>Gs i\\<^esub> y i,\n              one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>Gs i\\<^esub>\\<rparr>\n  \\<forall>i\\<in>I.\n     J i\n     \\<in> {h \\<in> hom (Gs i) ((f \\<circ> Gs) i).\n            inj_on h (carrier (Gs i)) \\<and>\n            h ` carrier (Gs i) = carrier ((f \\<circ> Gs) i)}\n  ?i \\<in> I \\<Longrightarrow> x ?i \\<in> carrier (Gs ?i)\n\ngoal (1 subgoal):\n 1. (\\<lambda>i\\<in>I.\n        (if i \\<in> I then J i else (\\<lambda>_. undefined)) (x i))\n    \\<in> carrier\n           \\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> (f \\<circ> Gs)),\n              monoid.mult =\n                \\<lambda>x y.\n                   \\<lambda>i\\<in>I.\n                      x i \\<otimes>\\<^bsub>(f \\<circ> Gs) i\\<^esub> y i,\n              one =\n                \\<lambda>i\\<in>I.\n                   \\<one>\\<^bsub>(f \\<circ> Gs) i\\<^esub>\\<rparr>", "by fastforce"], ["proof (state)\nthis:\n  ?x1 \\<in> carrier (DirProds Gs I) \\<Longrightarrow>\n  (\\<lambda>i\\<in>I.\n      (if i \\<in> I then J i else (\\<lambda>_. undefined)) (?x1 i))\n  \\<in> carrier (DirProds (f \\<circ> Gs) I)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier (DirProds Gs I);\n        y \\<in> carrier (DirProds Gs I)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>i\\<in>I.\n                             (if i \\<in> I then J i\n                              else (\\<lambda>_. undefined))\n                              ((x \\<otimes>\\<^bsub>DirProds Gs I\\<^esub> y)\n                                i)) =\n                         (\\<lambda>i\\<in>I.\n                             (if i \\<in> I then J i\n                              else (\\<lambda>_. undefined))\n                              (x i)) \\<otimes>\\<^bsub>DirProds (f \\<circ> Gs) I\\<^esub>\n                         (\\<lambda>i\\<in>I.\n                             (if i \\<in> I then J i\n                              else (\\<lambda>_. undefined))\n                              (y i))", "show \"?r (x \\<otimes>\\<^bsub>DirProds Gs I\\<^esub> y) = ?r x \\<otimes>\\<^bsub>DirProds (f \\<circ> Gs) I\\<^esub> ?r y\"\n      if \"x \\<in> carrier (DirProds Gs I)\" \"y \\<in> carrier (DirProds Gs I)\" for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>i\\<in>I.\n        (if i \\<in> I then J i else (\\<lambda>_. undefined))\n         ((x \\<otimes>\\<^bsub>DirProds Gs I\\<^esub> y) i)) =\n    (\\<lambda>i\\<in>I.\n        (if i \\<in> I then J i else (\\<lambda>_. undefined))\n         (x i)) \\<otimes>\\<^bsub>DirProds (f \\<circ> Gs) I\\<^esub>\n    (\\<lambda>i\\<in>I.\n        (if i \\<in> I then J i else (\\<lambda>_. undefined)) (y i))", "using that J comp_in_carr[OF that(1)] comp_in_carr[OF that(2)]"], ["proof (prove)\nusing this:\n  x \\<in> carrier (DirProds Gs I)\n  y \\<in> carrier (DirProds Gs I)\n  \\<forall>i\\<in>I. J i \\<in> Group.iso (Gs i) ((f \\<circ> Gs) i)\n  ?i \\<in> I \\<Longrightarrow> x ?i \\<in> carrier (Gs ?i)\n  ?i \\<in> I \\<Longrightarrow> y ?i \\<in> carrier (Gs ?i)\n\ngoal (1 subgoal):\n 1. (\\<lambda>i\\<in>I.\n        (if i \\<in> I then J i else (\\<lambda>_. undefined))\n         ((x \\<otimes>\\<^bsub>DirProds Gs I\\<^esub> y) i)) =\n    (\\<lambda>i\\<in>I.\n        (if i \\<in> I then J i else (\\<lambda>_. undefined))\n         (x i)) \\<otimes>\\<^bsub>DirProds (f \\<circ> Gs) I\\<^esub>\n    (\\<lambda>i\\<in>I.\n        (if i \\<in> I then J i else (\\<lambda>_. undefined)) (y i))", "unfolding DirProds_def iso_def hom_def"], ["proof (prove)\nusing this:\n  x \\<in> carrier\n           \\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> Gs),\n              monoid.mult =\n                \\<lambda>x y.\n                   \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>Gs i\\<^esub> y i,\n              one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>Gs i\\<^esub>\\<rparr>\n  y \\<in> carrier\n           \\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> Gs),\n              monoid.mult =\n                \\<lambda>x y.\n                   \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>Gs i\\<^esub> y i,\n              one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>Gs i\\<^esub>\\<rparr>\n  \\<forall>i\\<in>I.\n     J i\n     \\<in> {h \\<in> {h \\<in> carrier (Gs i) \\<rightarrow>\n                             carrier ((f \\<circ> Gs) i).\n                     \\<forall>x\\<in>carrier (Gs i).\n                        \\<forall>y\\<in>carrier (Gs i).\n                           h (x \\<otimes>\\<^bsub>Gs i\\<^esub> y) =\n                           h x \\<otimes>\\<^bsub>(f \\<circ> Gs) i\\<^esub>\n                           h y}.\n            bij_betw h (carrier (Gs i)) (carrier ((f \\<circ> Gs) i))}\n  ?i \\<in> I \\<Longrightarrow> x ?i \\<in> carrier (Gs ?i)\n  ?i \\<in> I \\<Longrightarrow> y ?i \\<in> carrier (Gs ?i)\n\ngoal (1 subgoal):\n 1. (\\<lambda>i\\<in>I.\n        (if i \\<in> I then J i else (\\<lambda>_. undefined))\n         ((x \\<otimes>\\<^bsub>\\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> Gs), monoid.mult = \\<lambda>x y. \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>Gs i\\<^esub> y i, one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>Gs i\\<^esub>\\<rparr>\\<^esub>\n           y)\n           i)) =\n    (\\<lambda>i\\<in>I.\n        (if i \\<in> I then J i else (\\<lambda>_. undefined))\n         (x i)) \\<otimes>\\<^bsub>\\<lparr>carrier = Pi\\<^sub>E I (carrier \\<circ> (f \\<circ> Gs)), monoid.mult = \\<lambda>x y. \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>(f \\<circ> Gs) i\\<^esub> y i, one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>(f \\<circ> Gs) i\\<^esub>\\<rparr>\\<^esub>\n    (\\<lambda>i\\<in>I.\n        (if i \\<in> I then J i else (\\<lambda>_. undefined)) (y i))", "by force"], ["proof (state)\nthis:\n  \\<lbrakk>?x1 \\<in> carrier (DirProds Gs I);\n   ?y1 \\<in> carrier (DirProds Gs I)\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>i\\<in>I.\n                        (if i \\<in> I then J i else (\\<lambda>_. undefined))\n                         ((?x1 \\<otimes>\\<^bsub>DirProds Gs I\\<^esub> ?y1)\n                           i)) =\n                    (\\<lambda>i\\<in>I.\n                        (if i \\<in> I then J i else (\\<lambda>_. undefined))\n                         (?x1 i)) \\<otimes>\\<^bsub>DirProds (f \\<circ> Gs) I\\<^esub>\n                    (\\<lambda>i\\<in>I.\n                        (if i \\<in> I then J i else (\\<lambda>_. undefined))\n                         (?y1 i))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>e.\n      \\<lambda>i\\<in>I.\n         (if i \\<in> I then J i else (\\<lambda>_. undefined)) (e i))\n  \\<in> hom (DirProds Gs I) (DirProds (f \\<circ> Gs) I)\n\ngoal (1 subgoal):\n 1. DirProds Gs I \\<cong> DirProds (f \\<circ> Gs) I", "then"], ["proof (chain)\npicking this:\n  (\\<lambda>e.\n      \\<lambda>i\\<in>I.\n         (if i \\<in> I then J i else (\\<lambda>_. undefined)) (e i))\n  \\<in> hom (DirProds Gs I) (DirProds (f \\<circ> Gs) I)", "interpret r: group_hom \"(DirProds Gs I)\" \"(DirProds (f \\<circ> Gs) I)\" ?r"], ["proof (prove)\nusing this:\n  (\\<lambda>e.\n      \\<lambda>i\\<in>I.\n         (if i \\<in> I then J i else (\\<lambda>_. undefined)) (e i))\n  \\<in> hom (DirProds Gs I) (DirProds (f \\<circ> Gs) I)\n\ngoal (1 subgoal):\n 1. group_hom (DirProds Gs I) (DirProds (f \\<circ> Gs) I)\n     (\\<lambda>e.\n         \\<lambda>i\\<in>I.\n            (if i \\<in> I then J i else (\\<lambda>_. undefined)) (e i))", "unfolding group_hom_def group_hom_axioms_def"], ["proof (prove)\nusing this:\n  (\\<lambda>e.\n      \\<lambda>i\\<in>I.\n         (if i \\<in> I then J i else (\\<lambda>_. undefined)) (e i))\n  \\<in> hom (DirProds Gs I) (DirProds (f \\<circ> Gs) I)\n\ngoal (1 subgoal):\n 1. Group.group (DirProds Gs I) \\<and>\n    Group.group (DirProds (f \\<circ> Gs) I) \\<and>\n    (\\<lambda>e.\n        \\<lambda>i\\<in>I.\n           (if i \\<in> I then J i else (\\<lambda>_. undefined)) (e i))\n    \\<in> hom (DirProds Gs I) (DirProds (f \\<circ> Gs) I)", "by blast"], ["proof (state)\ngoal (1 subgoal):\n 1. DirProds Gs I \\<cong> DirProds (f \\<circ> Gs) I", "have \"carrier (DirProds (f \\<circ> Gs) I) \\<subseteq> ?r ` carrier (DirProds Gs I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. carrier (DirProds (f \\<circ> Gs) I)\n    \\<subseteq> (\\<lambda>e.\n                    \\<lambda>i\\<in>I.\n                       (if i \\<in> I then J i else (\\<lambda>_. undefined))\n                        (e i)) `\n                carrier (DirProds Gs I)", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier (DirProds (f \\<circ> Gs) I) \\<Longrightarrow>\n       x \\<in> (\\<lambda>e.\n                   \\<lambda>i\\<in>I.\n                      (if i \\<in> I then J i else (\\<lambda>_. undefined))\n                       (e i)) `\n               carrier (DirProds Gs I)", "show \"x \\<in> ?r ` carrier (DirProds Gs I)\" if \"x \\<in> carrier (DirProds (f \\<circ> Gs) I)\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> (\\<lambda>e.\n                \\<lambda>i\\<in>I.\n                   (if i \\<in> I then J i else (\\<lambda>_. undefined))\n                    (e i)) `\n            carrier (DirProds Gs I)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. x =\n    (\\<lambda>i\\<in>I.\n        (if i \\<in> I then J i else (\\<lambda>_. undefined)) (?x i))\n 2. ?x \\<in> carrier (DirProds Gs I)", "show \"x = (\\<lambda>i\\<in>I. ?J i ((?K i) (x i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x =\n    (\\<lambda>i\\<in>I.\n        (if i \\<in> I then J i else (\\<lambda>_. undefined))\n         ((if i \\<in> I then K i else (\\<lambda>_. undefined)) (x i)))", "using JKi[OF that] that"], ["proof (prove)\nusing this:\n  (if ?i1 \\<in> I then J ?i1 else (\\<lambda>_. undefined))\n   ((if ?i1 \\<in> I then K ?i1 else (\\<lambda>_. undefined)) (x ?i1)) =\n  x ?i1\n  x \\<in> carrier (DirProds (f \\<circ> Gs) I)\n\ngoal (1 subgoal):\n 1. x =\n    (\\<lambda>i\\<in>I.\n        (if i \\<in> I then J i else (\\<lambda>_. undefined))\n         ((if i \\<in> I then K i else (\\<lambda>_. undefined)) (x i)))", "unfolding DirProds_def PiE_def"], ["proof (prove)\nusing this:\n  (if ?i1 \\<in> I then J ?i1 else (\\<lambda>_. undefined))\n   ((if ?i1 \\<in> I then K ?i1 else (\\<lambda>_. undefined)) (x ?i1)) =\n  x ?i1\n  x \\<in> carrier\n           \\<lparr>carrier =\n                     Pi I (carrier \\<circ> (f \\<circ> Gs)) \\<inter>\n                     extensional I,\n              monoid.mult =\n                \\<lambda>x y.\n                   \\<lambda>i\\<in>I.\n                      x i \\<otimes>\\<^bsub>(f \\<circ> Gs) i\\<^esub> y i,\n              one =\n                \\<lambda>i\\<in>I.\n                   \\<one>\\<^bsub>(f \\<circ> Gs) i\\<^esub>\\<rparr>\n\ngoal (1 subgoal):\n 1. x =\n    (\\<lambda>i\\<in>I.\n        (if i \\<in> I then J i else (\\<lambda>_. undefined))\n         ((if i \\<in> I then K i else (\\<lambda>_. undefined)) (x i)))", "by (simp add: extensional_restrict)"], ["proof (state)\nthis:\n  x =\n  (\\<lambda>i\\<in>I.\n      (if i \\<in> I then J i else (\\<lambda>_. undefined))\n       ((if i \\<in> I then K i else (\\<lambda>_. undefined)) (x i)))\n\ngoal (1 subgoal):\n 1. (\\<lambda>i. (if i \\<in> I then K i else (\\<lambda>_. undefined)) (x i))\n    \\<in> carrier (DirProds Gs I)", "show \"(\\<lambda>i. ?K i (x i)) \\<in> carrier (DirProds Gs I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>i. (if i \\<in> I then K i else (\\<lambda>_. undefined)) (x i))\n    \\<in> carrier (DirProds Gs I)", "using K_iso iso_in_carr that"], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>I. K i \\<in> Group.iso ((f \\<circ> Gs) i) (Gs i)\n  \\<lbrakk>?f \\<in> Group.iso ?G ?H; ?x \\<in> carrier ?G\\<rbrakk>\n  \\<Longrightarrow> ?f ?x \\<in> carrier ?H\n  x \\<in> carrier (DirProds (f \\<circ> Gs) I)\n\ngoal (1 subgoal):\n 1. (\\<lambda>i. (if i \\<in> I then K i else (\\<lambda>_. undefined)) (x i))\n    \\<in> carrier (DirProds Gs I)", "unfolding DirProds_def PiE_def Pi_def extensional_def"], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>I. K i \\<in> Group.iso ((f \\<circ> Gs) i) (Gs i)\n  \\<lbrakk>?f \\<in> Group.iso ?G ?H; ?x \\<in> carrier ?G\\<rbrakk>\n  \\<Longrightarrow> ?f ?x \\<in> carrier ?H\n  x \\<in> carrier\n           \\<lparr>carrier =\n                     {fa.\n                      \\<forall>x.\n                         x \\<in> I \\<longrightarrow>\n                         fa x\n                         \\<in> (carrier \\<circ> (f \\<circ> Gs)) x} \\<inter>\n                     {f. \\<forall>x.\n                            x \\<notin> I \\<longrightarrow> f x = undefined},\n              monoid.mult =\n                \\<lambda>x y.\n                   \\<lambda>i\\<in>I.\n                      x i \\<otimes>\\<^bsub>(f \\<circ> Gs) i\\<^esub> y i,\n              one =\n                \\<lambda>i\\<in>I.\n                   \\<one>\\<^bsub>(f \\<circ> Gs) i\\<^esub>\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<lambda>i. (if i \\<in> I then K i else (\\<lambda>_. undefined)) (x i))\n    \\<in> carrier\n           \\<lparr>carrier =\n                     {f. \\<forall>x.\n                            x \\<in> I \\<longrightarrow>\n                            f x \\<in> (carrier \\<circ> Gs) x} \\<inter>\n                     {f. \\<forall>x.\n                            x \\<notin> I \\<longrightarrow> f x = undefined},\n              monoid.mult =\n                \\<lambda>x y.\n                   \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>Gs i\\<^esub> y i,\n              one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>Gs i\\<^esub>\\<rparr>", "by fastforce"], ["proof (state)\nthis:\n  (\\<lambda>i. (if i \\<in> I then K i else (\\<lambda>_. undefined)) (x i))\n  \\<in> carrier (DirProds Gs I)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x1 \\<in> carrier (DirProds (f \\<circ> Gs) I) \\<Longrightarrow>\n  ?x1\n  \\<in> (\\<lambda>e.\n            \\<lambda>i\\<in>I.\n               (if i \\<in> I then J i else (\\<lambda>_. undefined)) (e i)) `\n        carrier (DirProds Gs I)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  carrier (DirProds (f \\<circ> Gs) I)\n  \\<subseteq> (\\<lambda>e.\n                  \\<lambda>i\\<in>I.\n                     (if i \\<in> I then J i else (\\<lambda>_. undefined))\n                      (e i)) `\n              carrier (DirProds Gs I)\n\ngoal (1 subgoal):\n 1. DirProds Gs I \\<cong> DirProds (f \\<circ> Gs) I", "moreover"], ["proof (state)\nthis:\n  carrier (DirProds (f \\<circ> Gs) I)\n  \\<subseteq> (\\<lambda>e.\n                  \\<lambda>i\\<in>I.\n                     (if i \\<in> I then J i else (\\<lambda>_. undefined))\n                      (e i)) `\n              carrier (DirProds Gs I)\n\ngoal (1 subgoal):\n 1. DirProds Gs I \\<cong> DirProds (f \\<circ> Gs) I", "have \"x = \\<one>\\<^bsub>DirProds Gs I\\<^esub>\"\n    if \"x \\<in> carrier (DirProds Gs I)\" \"?r x = \\<one>\\<^bsub>DirProds (f \\<circ> Gs) I\\<^esub>\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. x = \\<one>\\<^bsub>DirProds Gs I\\<^esub>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x = \\<one>\\<^bsub>DirProds Gs I\\<^esub>", "have \"\\<forall>i\\<in>I. x i = \\<one>\\<^bsub>Gs i\\<^esub>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>I. x i = \\<one>\\<^bsub>Gs i\\<^esub>", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> I \\<Longrightarrow> x i = \\<one>\\<^bsub>Gs i\\<^esub>", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> I \\<Longrightarrow> x i = \\<one>\\<^bsub>Gs i\\<^esub>", "assume i: \"i \\<in> I\""], ["proof (state)\nthis:\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> I \\<Longrightarrow> x i = \\<one>\\<^bsub>Gs i\\<^esub>", "with J assms"], ["proof (chain)\npicking this:\n  \\<forall>i\\<in>I. J i \\<in> Group.iso (Gs i) ((f \\<circ> Gs) i)\n  ?i \\<in> I \\<Longrightarrow> Gs ?i \\<cong> (f \\<circ> Gs) ?i\n  ?i \\<in> I \\<Longrightarrow> Group.group (Gs ?i)\n  ?i \\<in> I \\<Longrightarrow> Group.group ((f \\<circ> Gs) ?i)\n  i \\<in> I", "interpret Ji: group_hom \"(Gs i)\" \"(f \\<circ> Gs) i\" \"J i\""], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>I. J i \\<in> Group.iso (Gs i) ((f \\<circ> Gs) i)\n  ?i \\<in> I \\<Longrightarrow> Gs ?i \\<cong> (f \\<circ> Gs) ?i\n  ?i \\<in> I \\<Longrightarrow> Group.group (Gs ?i)\n  ?i \\<in> I \\<Longrightarrow> Group.group ((f \\<circ> Gs) ?i)\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. group_hom (Gs i) ((f \\<circ> Gs) i) (J i)", "unfolding group_hom_def group_hom_axioms_def iso_def"], ["proof (prove)\nusing this:\n  \\<forall>i\\<in>I.\n     J i\n     \\<in> {h \\<in> hom (Gs i) ((f \\<circ> Gs) i).\n            bij_betw h (carrier (Gs i)) (carrier ((f \\<circ> Gs) i))}\n  ?i \\<in> I \\<Longrightarrow> Gs ?i \\<cong> (f \\<circ> Gs) ?i\n  ?i \\<in> I \\<Longrightarrow> Group.group (Gs ?i)\n  ?i \\<in> I \\<Longrightarrow> Group.group ((f \\<circ> Gs) ?i)\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. Group.group (Gs i) \\<and>\n    Group.group ((f \\<circ> Gs) i) \\<and>\n    J i \\<in> hom (Gs i) ((f \\<circ> Gs) i)", "by blast"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> I \\<Longrightarrow> x i = \\<one>\\<^bsub>Gs i\\<^esub>", "from that"], ["proof (chain)\npicking this:\n  x \\<in> carrier (DirProds Gs I)\n  (\\<lambda>i\\<in>I.\n      (if i \\<in> I then J i else (\\<lambda>_. undefined)) (x i)) =\n  \\<one>\\<^bsub>DirProds (f \\<circ> Gs) I\\<^esub>", "have rx: \"?r x \\<in> carrier (DirProds (f \\<circ> Gs) I)\""], ["proof (prove)\nusing this:\n  x \\<in> carrier (DirProds Gs I)\n  (\\<lambda>i\\<in>I.\n      (if i \\<in> I then J i else (\\<lambda>_. undefined)) (x i)) =\n  \\<one>\\<^bsub>DirProds (f \\<circ> Gs) I\\<^esub>\n\ngoal (1 subgoal):\n 1. (\\<lambda>i\\<in>I.\n        (if i \\<in> I then J i else (\\<lambda>_. undefined)) (x i))\n    \\<in> carrier (DirProds (f \\<circ> Gs) I)", "by simp"], ["proof (state)\nthis:\n  (\\<lambda>i\\<in>I.\n      (if i \\<in> I then J i else (\\<lambda>_. undefined)) (x i))\n  \\<in> carrier (DirProds (f \\<circ> Gs) I)\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> I \\<Longrightarrow> x i = \\<one>\\<^bsub>Gs i\\<^esub>", "from i DirProds_one[OF this] that"], ["proof (chain)\npicking this:\n  i \\<in> I\n  (\\<forall>i\\<in>I.\n      (\\<lambda>i\\<in>I.\n          (if i \\<in> I then J i else (\\<lambda>_. undefined)) (x i))\n       i =\n      \\<one>\\<^bsub>(f \\<circ> Gs) i\\<^esub>) =\n  ((\\<lambda>i\\<in>I.\n       (if i \\<in> I then J i else (\\<lambda>_. undefined)) (x i)) =\n   \\<one>\\<^bsub>DirProds (f \\<circ> Gs) I\\<^esub>)\n  x \\<in> carrier (DirProds Gs I)\n  (\\<lambda>i\\<in>I.\n      (if i \\<in> I then J i else (\\<lambda>_. undefined)) (x i)) =\n  \\<one>\\<^bsub>DirProds (f \\<circ> Gs) I\\<^esub>", "have \"(\\<lambda>i\\<in>I. (if i \\<in> I then J i else (\\<lambda>_. undefined)) (x i)) i = \\<one>\\<^bsub>(f \\<circ> Gs) i\\<^esub>\""], ["proof (prove)\nusing this:\n  i \\<in> I\n  (\\<forall>i\\<in>I.\n      (\\<lambda>i\\<in>I.\n          (if i \\<in> I then J i else (\\<lambda>_. undefined)) (x i))\n       i =\n      \\<one>\\<^bsub>(f \\<circ> Gs) i\\<^esub>) =\n  ((\\<lambda>i\\<in>I.\n       (if i \\<in> I then J i else (\\<lambda>_. undefined)) (x i)) =\n   \\<one>\\<^bsub>DirProds (f \\<circ> Gs) I\\<^esub>)\n  x \\<in> carrier (DirProds Gs I)\n  (\\<lambda>i\\<in>I.\n      (if i \\<in> I then J i else (\\<lambda>_. undefined)) (x i)) =\n  \\<one>\\<^bsub>DirProds (f \\<circ> Gs) I\\<^esub>\n\ngoal (1 subgoal):\n 1. (\\<lambda>i\\<in>I.\n        (if i \\<in> I then J i else (\\<lambda>_. undefined)) (x i))\n     i =\n    \\<one>\\<^bsub>(f \\<circ> Gs) i\\<^esub>", "by blast"], ["proof (state)\nthis:\n  (\\<lambda>i\\<in>I.\n      (if i \\<in> I then J i else (\\<lambda>_. undefined)) (x i))\n   i =\n  \\<one>\\<^bsub>(f \\<circ> Gs) i\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> I \\<Longrightarrow> x i = \\<one>\\<^bsub>Gs i\\<^esub>", "hence \"(J i) (x i) = \\<one>\\<^bsub>(f \\<circ> Gs) i\\<^esub>\""], ["proof (prove)\nusing this:\n  (\\<lambda>i\\<in>I.\n      (if i \\<in> I then J i else (\\<lambda>_. undefined)) (x i))\n   i =\n  \\<one>\\<^bsub>(f \\<circ> Gs) i\\<^esub>\n\ngoal (1 subgoal):\n 1. J i (x i) = \\<one>\\<^bsub>(f \\<circ> Gs) i\\<^esub>", "using i"], ["proof (prove)\nusing this:\n  (\\<lambda>i\\<in>I.\n      (if i \\<in> I then J i else (\\<lambda>_. undefined)) (x i))\n   i =\n  \\<one>\\<^bsub>(f \\<circ> Gs) i\\<^esub>\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. J i (x i) = \\<one>\\<^bsub>(f \\<circ> Gs) i\\<^esub>", "by simp"], ["proof (state)\nthis:\n  J i (x i) = \\<one>\\<^bsub>(f \\<circ> Gs) i\\<^esub>\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> I \\<Longrightarrow> x i = \\<one>\\<^bsub>Gs i\\<^esub>", "with Ji.iso_iff mp[OF spec[OF J[unfolded Ball_def]] i] comp_in_carr[OF that(1) i]"], ["proof (chain)\npicking this:\n  (J i \\<in> Group.iso (Gs i) ((f \\<circ> Gs) i)) =\n  (carrier ((f \\<circ> Gs) i) \\<subseteq> J i ` carrier (Gs i) \\<and>\n   (\\<forall>x\\<in>carrier (Gs i).\n       J i x = \\<one>\\<^bsub>(f \\<circ> Gs) i\\<^esub> \\<longrightarrow>\n       x = \\<one>\\<^bsub>Gs i\\<^esub>))\n  J i \\<in> Group.iso (Gs i) ((f \\<circ> Gs) i)\n  x i \\<in> carrier (Gs i)\n  J i (x i) = \\<one>\\<^bsub>(f \\<circ> Gs) i\\<^esub>", "show \"x i = \\<one>\\<^bsub>Gs i\\<^esub>\""], ["proof (prove)\nusing this:\n  (J i \\<in> Group.iso (Gs i) ((f \\<circ> Gs) i)) =\n  (carrier ((f \\<circ> Gs) i) \\<subseteq> J i ` carrier (Gs i) \\<and>\n   (\\<forall>x\\<in>carrier (Gs i).\n       J i x = \\<one>\\<^bsub>(f \\<circ> Gs) i\\<^esub> \\<longrightarrow>\n       x = \\<one>\\<^bsub>Gs i\\<^esub>))\n  J i \\<in> Group.iso (Gs i) ((f \\<circ> Gs) i)\n  x i \\<in> carrier (Gs i)\n  J i (x i) = \\<one>\\<^bsub>(f \\<circ> Gs) i\\<^esub>\n\ngoal (1 subgoal):\n 1. x i = \\<one>\\<^bsub>Gs i\\<^esub>", "by fast"], ["proof (state)\nthis:\n  x i = \\<one>\\<^bsub>Gs i\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i\\<in>I. x i = \\<one>\\<^bsub>Gs i\\<^esub>\n\ngoal (1 subgoal):\n 1. x = \\<one>\\<^bsub>DirProds Gs I\\<^esub>", "with DirProds_one[OF that(1)]"], ["proof (chain)\npicking this:\n  (\\<forall>i\\<in>I. x i = \\<one>\\<^bsub>Gs i\\<^esub>) =\n  (x = \\<one>\\<^bsub>DirProds Gs I\\<^esub>)\n  \\<forall>i\\<in>I. x i = \\<one>\\<^bsub>Gs i\\<^esub>", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<forall>i\\<in>I. x i = \\<one>\\<^bsub>Gs i\\<^esub>) =\n  (x = \\<one>\\<^bsub>DirProds Gs I\\<^esub>)\n  \\<forall>i\\<in>I. x i = \\<one>\\<^bsub>Gs i\\<^esub>\n\ngoal (1 subgoal):\n 1. x = \\<one>\\<^bsub>DirProds Gs I\\<^esub>", "by blast"], ["proof (state)\nthis:\n  x = \\<one>\\<^bsub>DirProds Gs I\\<^esub>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?x1 \\<in> carrier (DirProds Gs I);\n   (\\<lambda>i\\<in>I.\n       (if i \\<in> I then J i else (\\<lambda>_. undefined)) (?x1 i)) =\n   \\<one>\\<^bsub>DirProds (f \\<circ> Gs) I\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> ?x1 = \\<one>\\<^bsub>DirProds Gs I\\<^esub>\n\ngoal (1 subgoal):\n 1. DirProds Gs I \\<cong> DirProds (f \\<circ> Gs) I", "ultimately"], ["proof (chain)\npicking this:\n  carrier (DirProds (f \\<circ> Gs) I)\n  \\<subseteq> (\\<lambda>e.\n                  \\<lambda>i\\<in>I.\n                     (if i \\<in> I then J i else (\\<lambda>_. undefined))\n                      (e i)) `\n              carrier (DirProds Gs I)\n  \\<lbrakk>?x1 \\<in> carrier (DirProds Gs I);\n   (\\<lambda>i\\<in>I.\n       (if i \\<in> I then J i else (\\<lambda>_. undefined)) (?x1 i)) =\n   \\<one>\\<^bsub>DirProds (f \\<circ> Gs) I\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> ?x1 = \\<one>\\<^bsub>DirProds Gs I\\<^esub>", "show ?thesis"], ["proof (prove)\nusing this:\n  carrier (DirProds (f \\<circ> Gs) I)\n  \\<subseteq> (\\<lambda>e.\n                  \\<lambda>i\\<in>I.\n                     (if i \\<in> I then J i else (\\<lambda>_. undefined))\n                      (e i)) `\n              carrier (DirProds Gs I)\n  \\<lbrakk>?x1 \\<in> carrier (DirProds Gs I);\n   (\\<lambda>i\\<in>I.\n       (if i \\<in> I then J i else (\\<lambda>_. undefined)) (?x1 i)) =\n   \\<one>\\<^bsub>DirProds (f \\<circ> Gs) I\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> ?x1 = \\<one>\\<^bsub>DirProds Gs I\\<^esub>\n\ngoal (1 subgoal):\n 1. DirProds Gs I \\<cong> DirProds (f \\<circ> Gs) I", "unfolding is_iso_def"], ["proof (prove)\nusing this:\n  carrier (DirProds (f \\<circ> Gs) I)\n  \\<subseteq> (\\<lambda>e.\n                  \\<lambda>i\\<in>I.\n                     (if i \\<in> I then J i else (\\<lambda>_. undefined))\n                      (e i)) `\n              carrier (DirProds Gs I)\n  \\<lbrakk>?x1 \\<in> carrier (DirProds Gs I);\n   (\\<lambda>i\\<in>I.\n       (if i \\<in> I then J i else (\\<lambda>_. undefined)) (?x1 i)) =\n   \\<one>\\<^bsub>DirProds (f \\<circ> Gs) I\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> ?x1 = \\<one>\\<^bsub>DirProds Gs I\\<^esub>\n\ngoal (1 subgoal):\n 1. Group.iso (DirProds Gs I) (DirProds (f \\<circ> Gs) I) \\<noteq> {}", "using r.iso_iff"], ["proof (prove)\nusing this:\n  carrier (DirProds (f \\<circ> Gs) I)\n  \\<subseteq> (\\<lambda>e.\n                  \\<lambda>i\\<in>I.\n                     (if i \\<in> I then J i else (\\<lambda>_. undefined))\n                      (e i)) `\n              carrier (DirProds Gs I)\n  \\<lbrakk>?x1 \\<in> carrier (DirProds Gs I);\n   (\\<lambda>i\\<in>I.\n       (if i \\<in> I then J i else (\\<lambda>_. undefined)) (?x1 i)) =\n   \\<one>\\<^bsub>DirProds (f \\<circ> Gs) I\\<^esub>\\<rbrakk>\n  \\<Longrightarrow> ?x1 = \\<one>\\<^bsub>DirProds Gs I\\<^esub>\n  ((\\<lambda>e.\n       \\<lambda>i\\<in>I.\n          (if i \\<in> I then J i else (\\<lambda>_. undefined)) (e i))\n   \\<in> Group.iso (DirProds Gs I) (DirProds (f \\<circ> Gs) I)) =\n  (carrier (DirProds (f \\<circ> Gs) I)\n   \\<subseteq> (\\<lambda>e.\n                   \\<lambda>i\\<in>I.\n                      (if i \\<in> I then J i else (\\<lambda>_. undefined))\n                       (e i)) `\n               carrier (DirProds Gs I) \\<and>\n   (\\<forall>x\\<in>carrier (DirProds Gs I).\n       (\\<lambda>i\\<in>I.\n           (if i \\<in> I then J i else (\\<lambda>_. undefined)) (x i)) =\n       \\<one>\\<^bsub>DirProds (f \\<circ> Gs) I\\<^esub> \\<longrightarrow>\n       x = \\<one>\\<^bsub>DirProds Gs I\\<^esub>))\n\ngoal (1 subgoal):\n 1. Group.iso (DirProds Gs I) (DirProds (f \\<circ> Gs) I) \\<noteq> {}", "by blast"], ["proof (state)\nthis:\n  DirProds Gs I \\<cong> DirProds (f \\<circ> Gs) I\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma DirProds_iso2:\n  assumes \"inj_on f A\" \"group (DirProds g (f ` A))\"\n  shows \"DirProds (g \\<circ> f) A \\<cong> DirProds g (f ` A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. DirProds (g \\<circ> f) A \\<cong> DirProds g (f ` A)", "proof (intro DirProds_iso[of f])"], ["proof (state)\ngoal (4 subgoals):\n 1. bij_betw f A (f ` A)\n 2. \\<And>i. i \\<in> A \\<Longrightarrow> (g \\<circ> f) i \\<cong> g (f i)\n 3. \\<And>i. i \\<in> A \\<Longrightarrow> Group.group ((g \\<circ> f) i)\n 4. \\<And>j. j \\<in> f ` A \\<Longrightarrow> Group.group (g j)", "show \"bij_betw f A (f ` A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw f A (f ` A)", "using assms(1)"], ["proof (prove)\nusing this:\n  inj_on f A\n\ngoal (1 subgoal):\n 1. bij_betw f A (f ` A)", "unfolding bij_betw_def"], ["proof (prove)\nusing this:\n  inj_on f A\n\ngoal (1 subgoal):\n 1. inj_on f A \\<and> f ` A = f ` A", "by blast"], ["proof (state)\nthis:\n  bij_betw f A (f ` A)\n\ngoal (3 subgoals):\n 1. \\<And>i. i \\<in> A \\<Longrightarrow> (g \\<circ> f) i \\<cong> g (f i)\n 2. \\<And>i. i \\<in> A \\<Longrightarrow> Group.group ((g \\<circ> f) i)\n 3. \\<And>j. j \\<in> f ` A \\<Longrightarrow> Group.group (g j)", "show \"\\<And>i. i \\<in> A \\<Longrightarrow> (g \\<circ> f) i \\<cong> g (f i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> A \\<Longrightarrow> (g \\<circ> f) i \\<cong> g (f i)", "unfolding comp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> A \\<Longrightarrow> g (f i) \\<cong> g (f i)", "using iso_refl"], ["proof (prove)\nusing this:\n  ?G \\<cong> ?G\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> A \\<Longrightarrow> g (f i) \\<cong> g (f i)", "by simp"], ["proof (state)\nthis:\n  ?i \\<in> A \\<Longrightarrow> (g \\<circ> f) ?i \\<cong> g (f ?i)\n\ngoal (2 subgoals):\n 1. \\<And>i. i \\<in> A \\<Longrightarrow> Group.group ((g \\<circ> f) i)\n 2. \\<And>j. j \\<in> f ` A \\<Longrightarrow> Group.group (g j)", "from assms(2)"], ["proof (chain)\npicking this:\n  Group.group (DirProds g (f ` A))", "show \"\\<And>i. i \\<in> (f ` A) \\<Longrightarrow> group (g i)\""], ["proof (prove)\nusing this:\n  Group.group (DirProds g (f ` A))\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> f ` A \\<Longrightarrow> Group.group (g i)", "using DirProds_group_imp_groups"], ["proof (prove)\nusing this:\n  Group.group (DirProds g (f ` A))\n  \\<lbrakk>Group.group (DirProds ?G ?I); ?i \\<in> ?I\\<rbrakk>\n  \\<Longrightarrow> Group.group (?G ?i)\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> f ` A \\<Longrightarrow> Group.group (g i)", "by fast"], ["proof (state)\nthis:\n  ?i \\<in> f ` A \\<Longrightarrow> Group.group (g ?i)\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> A \\<Longrightarrow> Group.group ((g \\<circ> f) i)", "with assms(1)"], ["proof (chain)\npicking this:\n  inj_on f A\n  ?i \\<in> f ` A \\<Longrightarrow> Group.group (g ?i)", "show \"\\<And>i. i \\<in> A \\<Longrightarrow> group ((g \\<circ> f) i)\""], ["proof (prove)\nusing this:\n  inj_on f A\n  ?i \\<in> f ` A \\<Longrightarrow> Group.group (g ?i)\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> A \\<Longrightarrow> Group.group ((g \\<circ> f) i)", "by auto"], ["proof (state)\nthis:\n  ?i \\<in> A \\<Longrightarrow> Group.group ((g \\<circ> f) ?i)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The direct group product distributes when nested.\\<close>"], ["", "lemma DirProds_Sigma:\n  \"DirProds (\\<lambda>i. DirProds (G i) (J i)) I \\<cong> DirProds (\\<lambda>(i,j). G i j) (Sigma I J)\" (is \"?L \\<cong> ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. DirProds (\\<lambda>i. DirProds (G i) (J i)) I \\<cong>\n    DirProds (\\<lambda>(i, j). G i j) (Sigma I J)", "proof (intro is_isoI isoI)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?h \\<in> hom (DirProds (\\<lambda>i. DirProds (G i) (J i)) I)\n              (DirProds (\\<lambda>(i, j). G i j) (Sigma I J))\n 2. bij_betw ?h (carrier (DirProds (\\<lambda>i. DirProds (G i) (J i)) I))\n     (carrier (DirProds (\\<lambda>(i, j). G i j) (Sigma I J)))", "let ?f = \"\\<lambda>x. restrict (case_prod x) (Sigma I J)\""], ["proof (state)\ngoal (2 subgoals):\n 1. ?h \\<in> hom (DirProds (\\<lambda>i. DirProds (G i) (J i)) I)\n              (DirProds (\\<lambda>(i, j). G i j) (Sigma I J))\n 2. bij_betw ?h (carrier (DirProds (\\<lambda>i. DirProds (G i) (J i)) I))\n     (carrier (DirProds (\\<lambda>(i, j). G i j) (Sigma I J)))", "show hom: \"?f \\<in> hom ?L ?R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<lambda>(xa, y)\\<in>Sigma I J. x xa y)\n    \\<in> hom (DirProds (\\<lambda>i. DirProds (G i) (J i)) I)\n           (DirProds (\\<lambda>(i, j). G i j) (Sigma I J))", "proof(intro homI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> carrier\n                (DirProds (\\<lambda>i. DirProds (G i) (J i))\n                  I) \\<Longrightarrow>\n       (\\<lambda>(xa, y)\\<in>Sigma I J. x xa y)\n       \\<in> carrier (DirProds (\\<lambda>(i, j). G i j) (Sigma I J))\n 2. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier\n                         (DirProds (\\<lambda>i. DirProds (G i) (J i)) I);\n        y \\<in> carrier\n                 (DirProds (\\<lambda>i. DirProds (G i) (J i)) I)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>(xa, ya)\\<in>Sigma I J.\n                             (x \\<otimes>\\<^bsub>DirProds (\\<lambda>i. DirProds (G i) (J i)) I\\<^esub>\n                              y)\n                              xa ya) =\n                         (\\<lambda>(xa, y)\\<in>Sigma I J.\n                             x xa\n                              y) \\<otimes>\\<^bsub>DirProds (\\<lambda>(i, j). G i j) (Sigma I J)\\<^esub>\n                         (\\<lambda>(x, ya)\\<in>Sigma I J. y x ya)", "show \"?f a \\<in> carrier ?R\" if \"a \\<in> carrier ?L\" for a"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>(x, y)\\<in>Sigma I J. a x y)\n    \\<in> carrier (DirProds (\\<lambda>(i, j). G i j) (Sigma I J))", "using that"], ["proof (prove)\nusing this:\n  a \\<in> carrier (DirProds (\\<lambda>i. DirProds (G i) (J i)) I)\n\ngoal (1 subgoal):\n 1. (\\<lambda>(x, y)\\<in>Sigma I J. a x y)\n    \\<in> carrier (DirProds (\\<lambda>(i, j). G i j) (Sigma I J))", "unfolding DirProds_def PiE_def Pi_def extensional_def"], ["proof (prove)\nusing this:\n  a \\<in> carrier\n           \\<lparr>carrier =\n                     {f. \\<forall>x.\n                            x \\<in> I \\<longrightarrow>\n                            f x\n                            \\<in> (carrier \\<circ>\n                                   (\\<lambda>i.\n \\<lparr>carrier =\n           {f. \\<forall>x.\n                  x \\<in> J i \\<longrightarrow>\n                  f x \\<in> (carrier \\<circ> G i) x} \\<inter>\n           {f. \\<forall>x.\n                  x \\<notin> J i \\<longrightarrow> f x = undefined},\n    monoid.mult =\n      \\<lambda>x y.\n         \\<lambda>ia\\<in>J i. x ia \\<otimes>\\<^bsub>G i ia\\<^esub> y ia,\n    one = \\<lambda>ia\\<in>J i. \\<one>\\<^bsub>G i ia\\<^esub>\\<rparr>))\n                                   x} \\<inter>\n                     {f. \\<forall>x.\n                            x \\<notin> I \\<longrightarrow> f x = undefined},\n              monoid.mult =\n                \\<lambda>x y.\n                   \\<lambda>i\\<in>I.\n                      x i \\<otimes>\\<^bsub>\\<lparr>carrier = {f. \\<forall>x. x \\<in> J i \\<longrightarrow> f x \\<in> (carrier \\<circ> G i) x} \\<inter> {f. \\<forall>x. x \\<notin> J i \\<longrightarrow> f x = undefined}, monoid.mult = \\<lambda>x y. \\<lambda>ia\\<in>J i. x ia \\<otimes>\\<^bsub>G i ia\\<^esub> y ia, one = \\<lambda>ia\\<in>J i. \\<one>\\<^bsub>G i ia\\<^esub>\\<rparr>\\<^esub>\n                      y i,\n              one =\n                \\<lambda>i\\<in>I.\n                   \\<one>\\<^bsub>\\<lparr>carrier = {f. \\<forall>x. x \\<in> J i \\<longrightarrow> f x \\<in> (carrier \\<circ> G i) x} \\<inter> {f. \\<forall>x. x \\<notin> J i \\<longrightarrow> f x = undefined}, monoid.mult = \\<lambda>x y. \\<lambda>ia\\<in>J i. x ia \\<otimes>\\<^bsub>G i ia\\<^esub> y ia, one = \\<lambda>ia\\<in>J i. \\<one>\\<^bsub>G i ia\\<^esub>\\<rparr>\\<^esub>\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<lambda>(x, y)\\<in>Sigma I J. a x y)\n    \\<in> carrier\n           \\<lparr>carrier =\n                     {f. \\<forall>x.\n                            x \\<in> Sigma I J \\<longrightarrow>\n                            f x\n                            \\<in> (carrier \\<circ> (\\<lambda>(x, y). G x y))\n                                   x} \\<inter>\n                     {f. \\<forall>x.\n                            x \\<notin> Sigma I J \\<longrightarrow>\n                            f x = undefined},\n              monoid.mult =\n                \\<lambda>x y.\n                   \\<lambda>i\\<in>Sigma I J.\n                      x i \\<otimes>\\<^bsub>case i of (x, xa) \\<Rightarrow> G x xa\\<^esub>\n                      y i,\n              one =\n                \\<lambda>i\\<in>Sigma I J.\n                   \\<one>\\<^bsub>case i of (x, xa) \\<Rightarrow> G x xa\\<^esub>\\<rparr>", "by auto"], ["proof (state)\nthis:\n  ?a1\n  \\<in> carrier\n         (DirProds (\\<lambda>i. DirProds (G i) (J i)) I) \\<Longrightarrow>\n  (\\<lambda>(x, y)\\<in>Sigma I J. ?a1 x y)\n  \\<in> carrier (DirProds (\\<lambda>(i, j). G i j) (Sigma I J))\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> carrier\n                         (DirProds (\\<lambda>i. DirProds (G i) (J i)) I);\n        y \\<in> carrier\n                 (DirProds (\\<lambda>i. DirProds (G i) (J i)) I)\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>(xa, ya)\\<in>Sigma I J.\n                             (x \\<otimes>\\<^bsub>DirProds (\\<lambda>i. DirProds (G i) (J i)) I\\<^esub>\n                              y)\n                              xa ya) =\n                         (\\<lambda>(xa, y)\\<in>Sigma I J.\n                             x xa\n                              y) \\<otimes>\\<^bsub>DirProds (\\<lambda>(i, j). G i j) (Sigma I J)\\<^esub>\n                         (\\<lambda>(x, ya)\\<in>Sigma I J. y x ya)", "show \"?f (a \\<otimes>\\<^bsub>?L\\<^esub> b) = ?f a \\<otimes>\\<^bsub>?R\\<^esub> ?f b\" if \"a \\<in> carrier ?L\" and \"b \\<in> carrier ?L\" for a b"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>(x, y)\\<in>Sigma I J.\n        (a \\<otimes>\\<^bsub>DirProds (\\<lambda>i. DirProds (G i) (J i)) I\\<^esub>\n         b)\n         x y) =\n    (\\<lambda>(x, y)\\<in>Sigma I J.\n        a x y) \\<otimes>\\<^bsub>DirProds (\\<lambda>(i, j). G i j) (Sigma I J)\\<^esub>\n    (\\<lambda>(x, y)\\<in>Sigma I J. b x y)", "using that"], ["proof (prove)\nusing this:\n  a \\<in> carrier (DirProds (\\<lambda>i. DirProds (G i) (J i)) I)\n  b \\<in> carrier (DirProds (\\<lambda>i. DirProds (G i) (J i)) I)\n\ngoal (1 subgoal):\n 1. (\\<lambda>(x, y)\\<in>Sigma I J.\n        (a \\<otimes>\\<^bsub>DirProds (\\<lambda>i. DirProds (G i) (J i)) I\\<^esub>\n         b)\n         x y) =\n    (\\<lambda>(x, y)\\<in>Sigma I J.\n        a x y) \\<otimes>\\<^bsub>DirProds (\\<lambda>(i, j). G i j) (Sigma I J)\\<^esub>\n    (\\<lambda>(x, y)\\<in>Sigma I J. b x y)", "unfolding DirProds_def PiE_def Pi_def extensional_def"], ["proof (prove)\nusing this:\n  a \\<in> carrier\n           \\<lparr>carrier =\n                     {f. \\<forall>x.\n                            x \\<in> I \\<longrightarrow>\n                            f x\n                            \\<in> (carrier \\<circ>\n                                   (\\<lambda>i.\n \\<lparr>carrier =\n           {f. \\<forall>x.\n                  x \\<in> J i \\<longrightarrow>\n                  f x \\<in> (carrier \\<circ> G i) x} \\<inter>\n           {f. \\<forall>x.\n                  x \\<notin> J i \\<longrightarrow> f x = undefined},\n    monoid.mult =\n      \\<lambda>x y.\n         \\<lambda>ia\\<in>J i. x ia \\<otimes>\\<^bsub>G i ia\\<^esub> y ia,\n    one = \\<lambda>ia\\<in>J i. \\<one>\\<^bsub>G i ia\\<^esub>\\<rparr>))\n                                   x} \\<inter>\n                     {f. \\<forall>x.\n                            x \\<notin> I \\<longrightarrow> f x = undefined},\n              monoid.mult =\n                \\<lambda>x y.\n                   \\<lambda>i\\<in>I.\n                      x i \\<otimes>\\<^bsub>\\<lparr>carrier = {f. \\<forall>x. x \\<in> J i \\<longrightarrow> f x \\<in> (carrier \\<circ> G i) x} \\<inter> {f. \\<forall>x. x \\<notin> J i \\<longrightarrow> f x = undefined}, monoid.mult = \\<lambda>x y. \\<lambda>ia\\<in>J i. x ia \\<otimes>\\<^bsub>G i ia\\<^esub> y ia, one = \\<lambda>ia\\<in>J i. \\<one>\\<^bsub>G i ia\\<^esub>\\<rparr>\\<^esub>\n                      y i,\n              one =\n                \\<lambda>i\\<in>I.\n                   \\<one>\\<^bsub>\\<lparr>carrier = {f. \\<forall>x. x \\<in> J i \\<longrightarrow> f x \\<in> (carrier \\<circ> G i) x} \\<inter> {f. \\<forall>x. x \\<notin> J i \\<longrightarrow> f x = undefined}, monoid.mult = \\<lambda>x y. \\<lambda>ia\\<in>J i. x ia \\<otimes>\\<^bsub>G i ia\\<^esub> y ia, one = \\<lambda>ia\\<in>J i. \\<one>\\<^bsub>G i ia\\<^esub>\\<rparr>\\<^esub>\\<rparr>\n  b \\<in> carrier\n           \\<lparr>carrier =\n                     {f. \\<forall>x.\n                            x \\<in> I \\<longrightarrow>\n                            f x\n                            \\<in> (carrier \\<circ>\n                                   (\\<lambda>i.\n \\<lparr>carrier =\n           {f. \\<forall>x.\n                  x \\<in> J i \\<longrightarrow>\n                  f x \\<in> (carrier \\<circ> G i) x} \\<inter>\n           {f. \\<forall>x.\n                  x \\<notin> J i \\<longrightarrow> f x = undefined},\n    monoid.mult =\n      \\<lambda>x y.\n         \\<lambda>ia\\<in>J i. x ia \\<otimes>\\<^bsub>G i ia\\<^esub> y ia,\n    one = \\<lambda>ia\\<in>J i. \\<one>\\<^bsub>G i ia\\<^esub>\\<rparr>))\n                                   x} \\<inter>\n                     {f. \\<forall>x.\n                            x \\<notin> I \\<longrightarrow> f x = undefined},\n              monoid.mult =\n                \\<lambda>x y.\n                   \\<lambda>i\\<in>I.\n                      x i \\<otimes>\\<^bsub>\\<lparr>carrier = {f. \\<forall>x. x \\<in> J i \\<longrightarrow> f x \\<in> (carrier \\<circ> G i) x} \\<inter> {f. \\<forall>x. x \\<notin> J i \\<longrightarrow> f x = undefined}, monoid.mult = \\<lambda>x y. \\<lambda>ia\\<in>J i. x ia \\<otimes>\\<^bsub>G i ia\\<^esub> y ia, one = \\<lambda>ia\\<in>J i. \\<one>\\<^bsub>G i ia\\<^esub>\\<rparr>\\<^esub>\n                      y i,\n              one =\n                \\<lambda>i\\<in>I.\n                   \\<one>\\<^bsub>\\<lparr>carrier = {f. \\<forall>x. x \\<in> J i \\<longrightarrow> f x \\<in> (carrier \\<circ> G i) x} \\<inter> {f. \\<forall>x. x \\<notin> J i \\<longrightarrow> f x = undefined}, monoid.mult = \\<lambda>x y. \\<lambda>ia\\<in>J i. x ia \\<otimes>\\<^bsub>G i ia\\<^esub> y ia, one = \\<lambda>ia\\<in>J i. \\<one>\\<^bsub>G i ia\\<^esub>\\<rparr>\\<^esub>\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<lambda>(x, y)\\<in>Sigma I J.\n        (a \\<otimes>\\<^bsub>\\<lparr>carrier = {f. \\<forall>x. x \\<in> I \\<longrightarrow> f x \\<in> (carrier \\<circ> (\\<lambda>i. \\<lparr>carrier = {f. \\<forall>x. x \\<in> J i \\<longrightarrow> f x \\<in> (carrier \\<circ> G i) x} \\<inter> {f. \\<forall>x. x \\<notin> J i \\<longrightarrow> f x = undefined}, monoid.mult = \\<lambda>x y. \\<lambda>ia\\<in>J i. x ia \\<otimes>\\<^bsub>G i ia\\<^esub> y ia, one = \\<lambda>ia\\<in>J i. \\<one>\\<^bsub>G i ia\\<^esub>\\<rparr>)) x} \\<inter> {f. \\<forall>x. x \\<notin> I \\<longrightarrow> f x = undefined}, monoid.mult = \\<lambda>x y. \\<lambda>i\\<in>I. x i \\<otimes>\\<^bsub>\\<lparr>carrier = {f. \\<forall>x. x \\<in> J i \\<longrightarrow> f x \\<in> (carrier \\<circ> G i) x} \\<inter> {f. \\<forall>x. x \\<notin> J i \\<longrightarrow> f x = undefined}, monoid.mult = \\<lambda>x y. \\<lambda>ia\\<in>J i. x ia \\<otimes>\\<^bsub>G i ia\\<^esub> y ia, one = \\<lambda>ia\\<in>J i. \\<one>\\<^bsub>G i ia\\<^esub>\\<rparr>\\<^esub> y i, one = \\<lambda>i\\<in>I. \\<one>\\<^bsub>\\<lparr>carrier = {f. \\<forall>x. x \\<in> J i \\<longrightarrow> f x \\<in> (carrier \\<circ> G i) x} \\<inter> {f. \\<forall>x. x \\<notin> J i \\<longrightarrow> f x = undefined}, monoid.mult = \\<lambda>x y. \\<lambda>ia\\<in>J i. x ia \\<otimes>\\<^bsub>G i ia\\<^esub> y ia, one = \\<lambda>ia\\<in>J i. \\<one>\\<^bsub>G i ia\\<^esub>\\<rparr>\\<^esub>\\<rparr>\\<^esub>\n         b)\n         x y) =\n    (\\<lambda>(x, y)\\<in>Sigma I J.\n        a x y) \\<otimes>\\<^bsub>\\<lparr>carrier = {f. \\<forall>x. x \\<in> Sigma I J \\<longrightarrow> f x \\<in> (carrier \\<circ> (\\<lambda>(x, y). G x y)) x} \\<inter> {f. \\<forall>x. x \\<notin> Sigma I J \\<longrightarrow> f x = undefined}, monoid.mult = \\<lambda>x y. \\<lambda>i\\<in>Sigma I J. x i \\<otimes>\\<^bsub>case i of (x, xa) \\<Rightarrow> G x xa\\<^esub> y i, one = \\<lambda>i\\<in>Sigma I J. \\<one>\\<^bsub>case i of (x, xa) \\<Rightarrow> G x xa\\<^esub>\\<rparr>\\<^esub>\n    (\\<lambda>(x, y)\\<in>Sigma I J. b x y)", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>?a1\n           \\<in> carrier (DirProds (\\<lambda>i. DirProds (G i) (J i)) I);\n   ?b1\n   \\<in> carrier (DirProds (\\<lambda>i. DirProds (G i) (J i)) I)\\<rbrakk>\n  \\<Longrightarrow> (\\<lambda>(x, y)\\<in>Sigma I J.\n                        (?a1 \\<otimes>\\<^bsub>DirProds (\\<lambda>i. DirProds (G i) (J i)) I\\<^esub>\n                         ?b1)\n                         x y) =\n                    (\\<lambda>(x, y)\\<in>Sigma I J.\n                        ?a1 x\n                         y) \\<otimes>\\<^bsub>DirProds (\\<lambda>(i, j). G i j) (Sigma I J)\\<^esub>\n                    (\\<lambda>(x, y)\\<in>Sigma I J. ?b1 x y)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<lambda>(xa, y)\\<in>Sigma I J. x xa y)\n  \\<in> hom (DirProds (\\<lambda>i. DirProds (G i) (J i)) I)\n         (DirProds (\\<lambda>(i, j). G i j) (Sigma I J))\n\ngoal (1 subgoal):\n 1. bij_betw (\\<lambda>x. \\<lambda>(xa, y)\\<in>Sigma I J. x xa y)\n     (carrier (DirProds (\\<lambda>i. DirProds (G i) (J i)) I))\n     (carrier (DirProds (\\<lambda>(i, j). G i j) (Sigma I J)))", "show \"bij_betw ?f (carrier ?L) (carrier ?R)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bij_betw (\\<lambda>x. \\<lambda>(xa, y)\\<in>Sigma I J. x xa y)\n     (carrier (DirProds (\\<lambda>i. DirProds (G i) (J i)) I))\n     (carrier (DirProds (\\<lambda>(i, j). G i j) (Sigma I J)))", "proof (intro bij_betwI)"], ["proof (state)\ngoal (4 subgoals):\n 1. (\\<lambda>x. \\<lambda>(xa, y)\\<in>Sigma I J. x xa y)\n    \\<in> carrier\n           (DirProds (\\<lambda>i. DirProds (G i) (J i)) I) \\<rightarrow>\n          carrier (DirProds (\\<lambda>(i, j). G i j) (Sigma I J))\n 2. ?g \\<in> carrier\n              (DirProds (\\<lambda>(i, j). G i j) (Sigma I J)) \\<rightarrow>\n             carrier (DirProds (\\<lambda>i. DirProds (G i) (J i)) I)\n 3. \\<And>x.\n       x \\<in> carrier\n                (DirProds (\\<lambda>i. DirProds (G i) (J i))\n                  I) \\<Longrightarrow>\n       ?g (\\<lambda>(xa, y)\\<in>Sigma I J. x xa y) = x\n 4. \\<And>y.\n       y \\<in> carrier\n                (DirProds (\\<lambda>(i, j). G i j)\n                  (Sigma I J)) \\<Longrightarrow>\n       (\\<lambda>(x, ya)\\<in>Sigma I J. ?g y x ya) = y", "let ?g = \"\\<lambda>x. (\\<lambda>i. if i\\<in>I then (\\<lambda>j. if j\\<in>(J i) then x(i, j) else undefined) else undefined)\""], ["proof (state)\ngoal (4 subgoals):\n 1. (\\<lambda>x. \\<lambda>(xa, y)\\<in>Sigma I J. x xa y)\n    \\<in> carrier\n           (DirProds (\\<lambda>i. DirProds (G i) (J i)) I) \\<rightarrow>\n          carrier (DirProds (\\<lambda>(i, j). G i j) (Sigma I J))\n 2. ?g \\<in> carrier\n              (DirProds (\\<lambda>(i, j). G i j) (Sigma I J)) \\<rightarrow>\n             carrier (DirProds (\\<lambda>i. DirProds (G i) (J i)) I)\n 3. \\<And>x.\n       x \\<in> carrier\n                (DirProds (\\<lambda>i. DirProds (G i) (J i))\n                  I) \\<Longrightarrow>\n       ?g (\\<lambda>(xa, y)\\<in>Sigma I J. x xa y) = x\n 4. \\<And>y.\n       y \\<in> carrier\n                (DirProds (\\<lambda>(i, j). G i j)\n                  (Sigma I J)) \\<Longrightarrow>\n       (\\<lambda>(x, ya)\\<in>Sigma I J. ?g y x ya) = y", "show \"?f \\<in> carrier ?L \\<rightarrow> carrier ?R\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<lambda>(xa, y)\\<in>Sigma I J. x xa y)\n    \\<in> carrier\n           (DirProds (\\<lambda>i. DirProds (G i) (J i)) I) \\<rightarrow>\n          carrier (DirProds (\\<lambda>(i, j). G i j) (Sigma I J))", "unfolding DirProds_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. \\<lambda>(xa, y)\\<in>Sigma I J. x xa y)\n    \\<in> carrier\n           \\<lparr>carrier =\n                     Pi\\<^sub>E I\n                      (carrier \\<circ>\n                       (\\<lambda>i.\n                           \\<lparr>carrier =\n                                     Pi\\<^sub>E (J i) (carrier \\<circ> G i),\n                              monoid.mult =\n                                \\<lambda>x y.\n                                   \\<lambda>ia\\<in>J i.\nx ia \\<otimes>\\<^bsub>G i ia\\<^esub> y ia,\n                              one =\n                                \\<lambda>ia\\<in>J i.\n                                   \\<one>\\<^bsub>G i ia\\<^esub>\\<rparr>)),\n              monoid.mult =\n                \\<lambda>x y.\n                   \\<lambda>i\\<in>I.\n                      x i \\<otimes>\\<^bsub>\\<lparr>carrier = Pi\\<^sub>E (J i) (carrier \\<circ> G i), monoid.mult = \\<lambda>x y. \\<lambda>ia\\<in>J i. x ia \\<otimes>\\<^bsub>G i ia\\<^esub> y ia, one = \\<lambda>ia\\<in>J i. \\<one>\\<^bsub>G i ia\\<^esub>\\<rparr>\\<^esub>\n                      y i,\n              one =\n                \\<lambda>i\\<in>I.\n                   \\<one>\\<^bsub>\\<lparr>carrier = Pi\\<^sub>E (J i) (carrier \\<circ> G i), monoid.mult = \\<lambda>x y. \\<lambda>ia\\<in>J i. x ia \\<otimes>\\<^bsub>G i ia\\<^esub> y ia, one = \\<lambda>ia\\<in>J i. \\<one>\\<^bsub>G i ia\\<^esub>\\<rparr>\\<^esub>\\<rparr> \\<rightarrow>\n          carrier\n           \\<lparr>carrier =\n                     Pi\\<^sub>E (Sigma I J)\n                      (carrier \\<circ> (\\<lambda>(x, y). G x y)),\n              monoid.mult =\n                \\<lambda>x y.\n                   \\<lambda>i\\<in>Sigma I J.\n                      x i \\<otimes>\\<^bsub>case i of (x, xa) \\<Rightarrow> G x xa\\<^esub>\n                      y i,\n              one =\n                \\<lambda>i\\<in>Sigma I J.\n                   \\<one>\\<^bsub>case i of (x, xa) \\<Rightarrow> G x xa\\<^esub>\\<rparr>", "by fastforce"], ["proof (state)\nthis:\n  (\\<lambda>x. \\<lambda>(xa, y)\\<in>Sigma I J. x xa y)\n  \\<in> carrier\n         (DirProds (\\<lambda>i. DirProds (G i) (J i)) I) \\<rightarrow>\n        carrier (DirProds (\\<lambda>(i, j). G i j) (Sigma I J))\n\ngoal (3 subgoals):\n 1. ?g \\<in> carrier\n              (DirProds (\\<lambda>(i, j). G i j) (Sigma I J)) \\<rightarrow>\n             carrier (DirProds (\\<lambda>i. DirProds (G i) (J i)) I)\n 2. \\<And>x.\n       x \\<in> carrier\n                (DirProds (\\<lambda>i. DirProds (G i) (J i))\n                  I) \\<Longrightarrow>\n       ?g (\\<lambda>(xa, y)\\<in>Sigma I J. x xa y) = x\n 3. \\<And>y.\n       y \\<in> carrier\n                (DirProds (\\<lambda>(i, j). G i j)\n                  (Sigma I J)) \\<Longrightarrow>\n       (\\<lambda>(x, ya)\\<in>Sigma I J. ?g y x ya) = y", "show \"?g \\<in> carrier ?R \\<rightarrow> carrier ?L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x i.\n        if i \\<in> I\n        then \\<lambda>j. if j \\<in> J i then x (i, j) else undefined\n        else undefined)\n    \\<in> carrier\n           (DirProds (\\<lambda>(i, j). G i j) (Sigma I J)) \\<rightarrow>\n          carrier (DirProds (\\<lambda>i. DirProds (G i) (J i)) I)", "unfolding DirProds_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x i.\n        if i \\<in> I\n        then \\<lambda>j. if j \\<in> J i then x (i, j) else undefined\n        else undefined)\n    \\<in> carrier\n           \\<lparr>carrier =\n                     Pi\\<^sub>E (Sigma I J)\n                      (carrier \\<circ> (\\<lambda>(x, y). G x y)),\n              monoid.mult =\n                \\<lambda>x y.\n                   \\<lambda>i\\<in>Sigma I J.\n                      x i \\<otimes>\\<^bsub>case i of (x, xa) \\<Rightarrow> G x xa\\<^esub>\n                      y i,\n              one =\n                \\<lambda>i\\<in>Sigma I J.\n                   \\<one>\\<^bsub>case i of (x, xa) \\<Rightarrow> G x xa\\<^esub>\\<rparr> \\<rightarrow>\n          carrier\n           \\<lparr>carrier =\n                     Pi\\<^sub>E I\n                      (carrier \\<circ>\n                       (\\<lambda>i.\n                           \\<lparr>carrier =\n                                     Pi\\<^sub>E (J i) (carrier \\<circ> G i),\n                              monoid.mult =\n                                \\<lambda>x y.\n                                   \\<lambda>ia\\<in>J i.\nx ia \\<otimes>\\<^bsub>G i ia\\<^esub> y ia,\n                              one =\n                                \\<lambda>ia\\<in>J i.\n                                   \\<one>\\<^bsub>G i ia\\<^esub>\\<rparr>)),\n              monoid.mult =\n                \\<lambda>x y.\n                   \\<lambda>i\\<in>I.\n                      x i \\<otimes>\\<^bsub>\\<lparr>carrier = Pi\\<^sub>E (J i) (carrier \\<circ> G i), monoid.mult = \\<lambda>x y. \\<lambda>ia\\<in>J i. x ia \\<otimes>\\<^bsub>G i ia\\<^esub> y ia, one = \\<lambda>ia\\<in>J i. \\<one>\\<^bsub>G i ia\\<^esub>\\<rparr>\\<^esub>\n                      y i,\n              one =\n                \\<lambda>i\\<in>I.\n                   \\<one>\\<^bsub>\\<lparr>carrier = Pi\\<^sub>E (J i) (carrier \\<circ> G i), monoid.mult = \\<lambda>x y. \\<lambda>ia\\<in>J i. x ia \\<otimes>\\<^bsub>G i ia\\<^esub> y ia, one = \\<lambda>ia\\<in>J i. \\<one>\\<^bsub>G i ia\\<^esub>\\<rparr>\\<^esub>\\<rparr>", "by fastforce"], ["proof (state)\nthis:\n  (\\<lambda>x i.\n      if i \\<in> I\n      then \\<lambda>j. if j \\<in> J i then x (i, j) else undefined\n      else undefined)\n  \\<in> carrier\n         (DirProds (\\<lambda>(i, j). G i j) (Sigma I J)) \\<rightarrow>\n        carrier (DirProds (\\<lambda>i. DirProds (G i) (J i)) I)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> carrier\n                (DirProds (\\<lambda>i. DirProds (G i) (J i))\n                  I) \\<Longrightarrow>\n       (\\<lambda>i.\n           if i \\<in> I\n           then \\<lambda>j.\n                   if j \\<in> J i\n                   then (\\<lambda>(xa, y)\\<in>Sigma I J. x xa y) (i, j)\n                   else undefined\n           else undefined) =\n       x\n 2. \\<And>y.\n       y \\<in> carrier\n                (DirProds (\\<lambda>(i, j). G i j)\n                  (Sigma I J)) \\<Longrightarrow>\n       (\\<lambda>(i, ya)\\<in>Sigma I J.\n           (if i \\<in> I\n            then \\<lambda>j. if j \\<in> J i then y (i, j) else undefined\n            else undefined)\n            ya) =\n       y", "show \"?f (?g x) = x\" if \"x \\<in> carrier ?R\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>(i, y)\\<in>Sigma I J.\n        (if i \\<in> I\n         then \\<lambda>j. if j \\<in> J i then x (i, j) else undefined\n         else undefined)\n         y) =\n    x", "using that"], ["proof (prove)\nusing this:\n  x \\<in> carrier (DirProds (\\<lambda>(i, j). G i j) (Sigma I J))\n\ngoal (1 subgoal):\n 1. (\\<lambda>(i, y)\\<in>Sigma I J.\n        (if i \\<in> I\n         then \\<lambda>j. if j \\<in> J i then x (i, j) else undefined\n         else undefined)\n         y) =\n    x", "unfolding DirProds_def PiE_def Pi_def extensional_def"], ["proof (prove)\nusing this:\n  x \\<in> carrier\n           \\<lparr>carrier =\n                     {f. \\<forall>x.\n                            x \\<in> Sigma I J \\<longrightarrow>\n                            f x\n                            \\<in> (carrier \\<circ> (\\<lambda>(x, y). G x y))\n                                   x} \\<inter>\n                     {f. \\<forall>x.\n                            x \\<notin> Sigma I J \\<longrightarrow>\n                            f x = undefined},\n              monoid.mult =\n                \\<lambda>x y.\n                   \\<lambda>i\\<in>Sigma I J.\n                      x i \\<otimes>\\<^bsub>case i of (x, xa) \\<Rightarrow> G x xa\\<^esub>\n                      y i,\n              one =\n                \\<lambda>i\\<in>Sigma I J.\n                   \\<one>\\<^bsub>case i of (x, xa) \\<Rightarrow> G x xa\\<^esub>\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<lambda>(i, y)\\<in>Sigma I J.\n        (if i \\<in> I\n         then \\<lambda>j. if j \\<in> J i then x (i, j) else undefined\n         else undefined)\n         y) =\n    x", "by auto"], ["proof (state)\nthis:\n  ?x2\n  \\<in> carrier\n         (DirProds (\\<lambda>(i, j). G i j) (Sigma I J)) \\<Longrightarrow>\n  (\\<lambda>(i, y)\\<in>Sigma I J.\n      (if i \\<in> I\n       then \\<lambda>j. if j \\<in> J i then ?x2 (i, j) else undefined\n       else undefined)\n       y) =\n  ?x2\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> carrier\n                (DirProds (\\<lambda>i. DirProds (G i) (J i))\n                  I) \\<Longrightarrow>\n       (\\<lambda>i.\n           if i \\<in> I\n           then \\<lambda>j.\n                   if j \\<in> J i\n                   then (\\<lambda>(xa, y)\\<in>Sigma I J. x xa y) (i, j)\n                   else undefined\n           else undefined) =\n       x", "show \"?g (?f x) = x\" if \"x \\<in> carrier ?L\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>i.\n        if i \\<in> I\n        then \\<lambda>j.\n                if j \\<in> J i\n                then (\\<lambda>(xa, y)\\<in>Sigma I J. x xa y) (i, j)\n                else undefined\n        else undefined) =\n    x", "using that"], ["proof (prove)\nusing this:\n  x \\<in> carrier (DirProds (\\<lambda>i. DirProds (G i) (J i)) I)\n\ngoal (1 subgoal):\n 1. (\\<lambda>i.\n        if i \\<in> I\n        then \\<lambda>j.\n                if j \\<in> J i\n                then (\\<lambda>(xa, y)\\<in>Sigma I J. x xa y) (i, j)\n                else undefined\n        else undefined) =\n    x", "unfolding DirProds_def PiE_def Pi_def extensional_def"], ["proof (prove)\nusing this:\n  x \\<in> carrier\n           \\<lparr>carrier =\n                     {f. \\<forall>x.\n                            x \\<in> I \\<longrightarrow>\n                            f x\n                            \\<in> (carrier \\<circ>\n                                   (\\<lambda>i.\n \\<lparr>carrier =\n           {f. \\<forall>x.\n                  x \\<in> J i \\<longrightarrow>\n                  f x \\<in> (carrier \\<circ> G i) x} \\<inter>\n           {f. \\<forall>x.\n                  x \\<notin> J i \\<longrightarrow> f x = undefined},\n    monoid.mult =\n      \\<lambda>x y.\n         \\<lambda>ia\\<in>J i. x ia \\<otimes>\\<^bsub>G i ia\\<^esub> y ia,\n    one = \\<lambda>ia\\<in>J i. \\<one>\\<^bsub>G i ia\\<^esub>\\<rparr>))\n                                   x} \\<inter>\n                     {f. \\<forall>x.\n                            x \\<notin> I \\<longrightarrow> f x = undefined},\n              monoid.mult =\n                \\<lambda>x y.\n                   \\<lambda>i\\<in>I.\n                      x i \\<otimes>\\<^bsub>\\<lparr>carrier = {f. \\<forall>x. x \\<in> J i \\<longrightarrow> f x \\<in> (carrier \\<circ> G i) x} \\<inter> {f. \\<forall>x. x \\<notin> J i \\<longrightarrow> f x = undefined}, monoid.mult = \\<lambda>x y. \\<lambda>ia\\<in>J i. x ia \\<otimes>\\<^bsub>G i ia\\<^esub> y ia, one = \\<lambda>ia\\<in>J i. \\<one>\\<^bsub>G i ia\\<^esub>\\<rparr>\\<^esub>\n                      y i,\n              one =\n                \\<lambda>i\\<in>I.\n                   \\<one>\\<^bsub>\\<lparr>carrier = {f. \\<forall>x. x \\<in> J i \\<longrightarrow> f x \\<in> (carrier \\<circ> G i) x} \\<inter> {f. \\<forall>x. x \\<notin> J i \\<longrightarrow> f x = undefined}, monoid.mult = \\<lambda>x y. \\<lambda>ia\\<in>J i. x ia \\<otimes>\\<^bsub>G i ia\\<^esub> y ia, one = \\<lambda>ia\\<in>J i. \\<one>\\<^bsub>G i ia\\<^esub>\\<rparr>\\<^esub>\\<rparr>\n\ngoal (1 subgoal):\n 1. (\\<lambda>i.\n        if i \\<in> I\n        then \\<lambda>j.\n                if j \\<in> J i\n                then (\\<lambda>(xa, y)\\<in>Sigma I J. x xa y) (i, j)\n                else undefined\n        else undefined) =\n    x", "by force"], ["proof (state)\nthis:\n  ?x2\n  \\<in> carrier\n         (DirProds (\\<lambda>i. DirProds (G i) (J i)) I) \\<Longrightarrow>\n  (\\<lambda>i.\n      if i \\<in> I\n      then \\<lambda>j.\n              if j \\<in> J i\n              then (\\<lambda>(x, y)\\<in>Sigma I J. ?x2 x y) (i, j)\n              else undefined\n      else undefined) =\n  ?x2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  bij_betw (\\<lambda>x. \\<lambda>(xa, y)\\<in>Sigma I J. x xa y)\n   (carrier (DirProds (\\<lambda>i. DirProds (G i) (J i)) I))\n   (carrier (DirProds (\\<lambda>(i, j). G i j) (Sigma I J)))\n\ngoal:\nNo subgoals!", "qed"], ["", "no_notation integer_mod_group (\"Z\")"], ["", "end"]]}