{"file_name": "/home/qj213/afp-2021-10-22/thys/Finitely_Generated_Abelian_Groups/Finite_Product_Extend.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Finitely_Generated_Abelian_Groups", "problem_names": ["lemma (in comm_group) finprod_minus:\n  assumes \"a \\<in> A\" \"f \\<in> A \\<rightarrow> carrier G\" \"finite A\"\n  shows \"finprod G f A = f a \\<otimes> finprod G f (A - {a})\"", "lemma (in comm_group) finprod_minus_symm:\n  assumes \"a \\<in> A\" \"f \\<in> A \\<rightarrow> carrier G\" \"finite A\"\n  shows \"finprod G f A = finprod G f (A - {a}) \\<otimes> f a\"", "lemma (in comm_group) finprod_singleton:\n  assumes \"f x \\<in> carrier G\" \"finprod G f {x} = a\"\n  shows \"f x = a\"", "lemma (in comm_group) finprod_subgroup:\n  assumes \"f \\<in> S \\<rightarrow> H\" \"subgroup H G\"\n  shows \"finprod G f S = finprod (G\\<lparr>carrier := H\\<rparr>) f S\"", "lemma (in comm_group) finprod_closed_subgroup:\n  assumes \"subgroup H G\" \"f \\<in> A \\<rightarrow> H\"\n  shows \"finprod G f A \\<in> H\"", "lemma (in comm_group) finprod_exp:\n  assumes \"A \\<subseteq> carrier G\" \"f \\<in> A \\<rightarrow> carrier G\"\n  shows \"(finprod G f A) [^] (k::int) = finprod G ((\\<lambda>a. a [^] k) \\<circ> f) A\"", "lemma (in comm_group) finprod_cong_split:\n  assumes \"\\<And>a. a \\<in> A \\<Longrightarrow> f a \\<otimes> g a = h a\"\n  and \"f \\<in> A \\<rightarrow> carrier G\" \"g \\<in> A \\<rightarrow> carrier G\" \"h \\<in> A \\<rightarrow> carrier G\"\n  shows \"finprod G h A = finprod G f A \\<otimes> finprod G g A\"", "lemma (in comm_group) finprod_comp:\n  assumes \"inj_on g A\" \"(f \\<circ> g) ` A \\<subseteq> carrier G\"\n  shows \"finprod G f (g ` A) = finprod G (f \\<circ> g) A\"", "lemma (in comm_group) generate_eq_finprod_PiE_image:\n  assumes \"finite gs\" \"gs \\<subseteq> carrier G\"\n  shows \"generate G gs = (\\<lambda>x. finprod G x gs) ` Pi\\<^sub>E gs (\\<lambda>a. generate G {a})\" (is \"?g = ?fp\")", "lemma (in comm_group) generate_eq_finprod_Pi_image:\n  assumes \"finite gs\" \"gs \\<subseteq> carrier G\"\n  shows \"generate G gs = (\\<lambda>x. finprod G x gs) ` Pi gs (\\<lambda>a. generate G {a})\" (is \"?g = ?fp\")", "lemma (in comm_group) generate_eq_finprod_Pi_int_image:\n  assumes \"finite gs\" \"gs \\<subseteq> carrier G\"\n  shows \"generate G gs = (\\<lambda>x. finprod G (\\<lambda>g. g [^] x g) gs) ` Pi gs (\\<lambda>_. (UNIV::int set))\"", "lemma (in comm_group) IDirProds_eq_finprod_PiE:\n  assumes \"finite I\" \"\\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\"\n  shows \"IDirProds G S I = (\\<lambda>x. finprod G x I) ` (Pi\\<^sub>E I S)\" (is \"?DP = ?fp\")", "lemma (in comm_group) IDirProds_eq_finprod_Pi:\n  assumes \"finite I\" \"\\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\"\n  shows \"IDirProds G S I = (\\<lambda>x. finprod G x I) ` (Pi I S)\" (is \"?DP = ?fp\")", "lemma (in comm_group) generate_one_switched_exp_eqI:\n  assumes \"A \\<subseteq> carrier G\" \"a \\<in> A\" \"B = (A - {a}) \\<union> {b}\"\n  and \"f \\<in> A \\<rightarrow> (UNIV::int set)\" \"g \\<in> B \\<rightarrow> (UNIV::int set)\"\n  and \"a = finprod G (\\<lambda>x. x [^] g x) B\" \"b = finprod G (\\<lambda>x. x [^] f x) A\"\n  shows \"generate G A = generate G B\"", "lemma (in comm_group) compl_fam_imp_triv_finprod:\n  assumes \"compl_fam S I\" \"finite I\" \"\\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\"\n  and \"finprod G f I = \\<one>\" \"f \\<in> Pi I S\"\n  shows \"\\<forall>i\\<in>I. f i = \\<one>\"", "lemma (in comm_group) triv_finprod_imp_compl_fam:\n  assumes \"finite I\" \"\\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\"\n  and \"\\<forall>f \\<in> Pi I S. finprod G f I = \\<one> \\<longrightarrow> (\\<forall>i\\<in>I. f i = \\<one>)\"\n  shows \"compl_fam S I\"", "lemma (in comm_group) triv_finprod_iff_compl_fam_Pi:\n  assumes \"finite I\" \"\\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\"\n  shows \"compl_fam S I \\<longleftrightarrow> (\\<forall>f \\<in> Pi I S. finprod G f I = \\<one> \\<longrightarrow> (\\<forall>i\\<in>I. f i = \\<one>))\"", "lemma (in comm_group) triv_finprod_iff_compl_fam_PiE:\n  assumes \"finite I\" \"\\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\"\n  shows \"compl_fam S I \\<longleftrightarrow> (\\<forall>f \\<in> Pi\\<^sub>E I S. finprod G f I = \\<one> \\<longrightarrow> (\\<forall>i\\<in>I. f i = \\<one>))\"", "lemma (in comm_monoid) finprod_Sigma:\n  assumes \"finite A\" \"\\<And>x. x \\<in> A \\<Longrightarrow> finite (B x)\"\n  assumes \"\\<And>x y. x \\<in> A \\<Longrightarrow> y \\<in> B x \\<Longrightarrow> g x y \\<in> carrier G\"\n  shows   \"(\\<Otimes>x\\<in>A. \\<Otimes>y\\<in>B x. g x y) = (\\<Otimes>z\\<in>Sigma A B. case z of (x, y) \\<Rightarrow> g x y)\"", "lemma (in comm_group) idirprod_generate_ind:\n  assumes \"finite gs\" \"gs \\<subseteq> carrier G\" \"g \\<in> carrier G\"\n          \"is_idirprod (generate G gs) (\\<lambda>g. generate G {g}) gs\"\n          \"complementary (generate G {g}) (generate G gs)\"\n  shows \"is_idirprod (generate G (gs \\<union> {g})) (\\<lambda>g. generate G {g}) (gs \\<union> {g})\""], "translations": [["", "lemma (in comm_group) finprod_minus:\n  assumes \"a \\<in> A\" \"f \\<in> A \\<rightarrow> carrier G\" \"finite A\"\n  shows \"finprod G f A = f a \\<otimes> finprod G f (A - {a})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G f A = f a \\<otimes> finprod G f (A - {a})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finprod G f A = f a \\<otimes> finprod G f (A - {a})", "from assms"], ["proof (chain)\npicking this:\n  a \\<in> A\n  f \\<in> A \\<rightarrow> carrier G\n  finite A", "have \"A = insert a (A - {a})\""], ["proof (prove)\nusing this:\n  a \\<in> A\n  f \\<in> A \\<rightarrow> carrier G\n  finite A\n\ngoal (1 subgoal):\n 1. A = insert a (A - {a})", "by blast"], ["proof (state)\nthis:\n  A = insert a (A - {a})\n\ngoal (1 subgoal):\n 1. finprod G f A = f a \\<otimes> finprod G f (A - {a})", "then"], ["proof (chain)\npicking this:\n  A = insert a (A - {a})", "have \"finprod G f A = finprod G f (insert a (A - {a}))\""], ["proof (prove)\nusing this:\n  A = insert a (A - {a})\n\ngoal (1 subgoal):\n 1. finprod G f A = finprod G f (insert a (A - {a}))", "by simp"], ["proof (state)\nthis:\n  finprod G f A = finprod G f (insert a (A - {a}))\n\ngoal (1 subgoal):\n 1. finprod G f A = f a \\<otimes> finprod G f (A - {a})", "also"], ["proof (state)\nthis:\n  finprod G f A = finprod G f (insert a (A - {a}))\n\ngoal (1 subgoal):\n 1. finprod G f A = f a \\<otimes> finprod G f (A - {a})", "have \"\\<dots> = f a \\<otimes> finprod G f (A - {a})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G f (insert a (A - {a})) = f a \\<otimes> finprod G f (A - {a})", "using assms"], ["proof (prove)\nusing this:\n  a \\<in> A\n  f \\<in> A \\<rightarrow> carrier G\n  finite A\n\ngoal (1 subgoal):\n 1. finprod G f (insert a (A - {a})) = f a \\<otimes> finprod G f (A - {a})", "by (intro finprod_insert, auto)"], ["proof (state)\nthis:\n  finprod G f (insert a (A - {a})) = f a \\<otimes> finprod G f (A - {a})\n\ngoal (1 subgoal):\n 1. finprod G f A = f a \\<otimes> finprod G f (A - {a})", "finally"], ["proof (chain)\npicking this:\n  finprod G f A = f a \\<otimes> finprod G f (A - {a})", "show ?thesis"], ["proof (prove)\nusing this:\n  finprod G f A = f a \\<otimes> finprod G f (A - {a})\n\ngoal (1 subgoal):\n 1. finprod G f A = f a \\<otimes> finprod G f (A - {a})", "."], ["proof (state)\nthis:\n  finprod G f A = f a \\<otimes> finprod G f (A - {a})\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in comm_group) finprod_minus_symm:\n  assumes \"a \\<in> A\" \"f \\<in> A \\<rightarrow> carrier G\" \"finite A\"\n  shows \"finprod G f A = finprod G f (A - {a}) \\<otimes> f a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G f A = finprod G f (A - {a}) \\<otimes> f a", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finprod G f A = finprod G f (A - {a}) \\<otimes> f a", "from assms"], ["proof (chain)\npicking this:\n  a \\<in> A\n  f \\<in> A \\<rightarrow> carrier G\n  finite A", "have \"A = insert a (A - {a})\""], ["proof (prove)\nusing this:\n  a \\<in> A\n  f \\<in> A \\<rightarrow> carrier G\n  finite A\n\ngoal (1 subgoal):\n 1. A = insert a (A - {a})", "by blast"], ["proof (state)\nthis:\n  A = insert a (A - {a})\n\ngoal (1 subgoal):\n 1. finprod G f A = finprod G f (A - {a}) \\<otimes> f a", "then"], ["proof (chain)\npicking this:\n  A = insert a (A - {a})", "have \"finprod G f A = finprod G f (insert a (A - {a}))\""], ["proof (prove)\nusing this:\n  A = insert a (A - {a})\n\ngoal (1 subgoal):\n 1. finprod G f A = finprod G f (insert a (A - {a}))", "by simp"], ["proof (state)\nthis:\n  finprod G f A = finprod G f (insert a (A - {a}))\n\ngoal (1 subgoal):\n 1. finprod G f A = finprod G f (A - {a}) \\<otimes> f a", "also"], ["proof (state)\nthis:\n  finprod G f A = finprod G f (insert a (A - {a}))\n\ngoal (1 subgoal):\n 1. finprod G f A = finprod G f (A - {a}) \\<otimes> f a", "have \"\\<dots> = f a \\<otimes> finprod G f (A - {a})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G f (insert a (A - {a})) = f a \\<otimes> finprod G f (A - {a})", "using assms"], ["proof (prove)\nusing this:\n  a \\<in> A\n  f \\<in> A \\<rightarrow> carrier G\n  finite A\n\ngoal (1 subgoal):\n 1. finprod G f (insert a (A - {a})) = f a \\<otimes> finprod G f (A - {a})", "by (intro finprod_insert, auto)"], ["proof (state)\nthis:\n  finprod G f (insert a (A - {a})) = f a \\<otimes> finprod G f (A - {a})\n\ngoal (1 subgoal):\n 1. finprod G f A = finprod G f (A - {a}) \\<otimes> f a", "also"], ["proof (state)\nthis:\n  finprod G f (insert a (A - {a})) = f a \\<otimes> finprod G f (A - {a})\n\ngoal (1 subgoal):\n 1. finprod G f A = finprod G f (A - {a}) \\<otimes> f a", "have \"\\<dots> = finprod G f (A - {a}) \\<otimes> f a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f a \\<otimes> finprod G f (A - {a}) =\n    finprod G f (A - {a}) \\<otimes> f a", "by (intro m_comm, use assms in blast, intro finprod_closed, use assms in blast)"], ["proof (state)\nthis:\n  f a \\<otimes> finprod G f (A - {a}) = finprod G f (A - {a}) \\<otimes> f a\n\ngoal (1 subgoal):\n 1. finprod G f A = finprod G f (A - {a}) \\<otimes> f a", "finally"], ["proof (chain)\npicking this:\n  finprod G f A = finprod G f (A - {a}) \\<otimes> f a", "show ?thesis"], ["proof (prove)\nusing this:\n  finprod G f A = finprod G f (A - {a}) \\<otimes> f a\n\ngoal (1 subgoal):\n 1. finprod G f A = finprod G f (A - {a}) \\<otimes> f a", "."], ["proof (state)\nthis:\n  finprod G f A = finprod G f (A - {a}) \\<otimes> f a\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>This makes it very easy to show the following trivial fact.\\<close>"], ["", "lemma (in comm_group) finprod_singleton:\n  assumes \"f x \\<in> carrier G\" \"finprod G f {x} = a\"\n  shows \"f x = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f x = a", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f x = a", "have \"finprod G f {x} = f x \\<otimes> finprod G f {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G f {x} = f x \\<otimes> finprod G f {}", "using finprod_minus[of x \"{x}\" f] assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>x \\<in> {x}; f \\<in> {x} \\<rightarrow> carrier G;\n   finite {x}\\<rbrakk>\n  \\<Longrightarrow> finprod G f {x} = f x \\<otimes> finprod G f ({x} - {x})\n  f x \\<in> carrier G\n  finprod G f {x} = a\n\ngoal (1 subgoal):\n 1. finprod G f {x} = f x \\<otimes> finprod G f {}", "by auto"], ["proof (state)\nthis:\n  finprod G f {x} = f x \\<otimes> finprod G f {}\n\ngoal (1 subgoal):\n 1. f x = a", "thus ?thesis"], ["proof (prove)\nusing this:\n  finprod G f {x} = f x \\<otimes> finprod G f {}\n\ngoal (1 subgoal):\n 1. f x = a", "using assms"], ["proof (prove)\nusing this:\n  finprod G f {x} = f x \\<otimes> finprod G f {}\n  f x \\<in> carrier G\n  finprod G f {x} = a\n\ngoal (1 subgoal):\n 1. f x = a", "by simp"], ["proof (state)\nthis:\n  f x = a\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The finite product is consistent and closed concerning subgroups.\\<close>"], ["", "lemma (in comm_group) finprod_subgroup:\n  assumes \"f \\<in> S \\<rightarrow> H\" \"subgroup H G\"\n  shows \"finprod G f S = finprod (G\\<lparr>carrier := H\\<rparr>) f S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G f S = finprod (G\\<lparr>carrier := H\\<rparr>) f S", "proof (cases \"finite S\")"], ["proof (state)\ngoal (2 subgoals):\n 1. finite S \\<Longrightarrow>\n    finprod G f S = finprod (G\\<lparr>carrier := H\\<rparr>) f S\n 2. infinite S \\<Longrightarrow>\n    finprod G f S = finprod (G\\<lparr>carrier := H\\<rparr>) f S", "case True"], ["proof (state)\nthis:\n  finite S\n\ngoal (2 subgoals):\n 1. finite S \\<Longrightarrow>\n    finprod G f S = finprod (G\\<lparr>carrier := H\\<rparr>) f S\n 2. infinite S \\<Longrightarrow>\n    finprod G f S = finprod (G\\<lparr>carrier := H\\<rparr>) f S", "interpret H: comm_group \"G\\<lparr>carrier := H\\<rparr>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. comm_group (G\\<lparr>carrier := H\\<rparr>)", "using subgroup_is_comm_group[OF assms(2)]"], ["proof (prove)\nusing this:\n  comm_group (G\\<lparr>carrier := H\\<rparr>)\n\ngoal (1 subgoal):\n 1. comm_group (G\\<lparr>carrier := H\\<rparr>)", "."], ["proof (state)\ngoal (2 subgoals):\n 1. finite S \\<Longrightarrow>\n    finprod G f S = finprod (G\\<lparr>carrier := H\\<rparr>) f S\n 2. infinite S \\<Longrightarrow>\n    finprod G f S = finprod (G\\<lparr>carrier := H\\<rparr>) f S", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G f S = finprod (G\\<lparr>carrier := H\\<rparr>) f S", "using True assms"], ["proof (prove)\nusing this:\n  finite S\n  f \\<in> S \\<rightarrow> H\n  subgroup H G\n\ngoal (1 subgoal):\n 1. finprod G f S = finprod (G\\<lparr>carrier := H\\<rparr>) f S", "proof (induction S rule: finite_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>f \\<in> {} \\<rightarrow> H; subgroup H G\\<rbrakk>\n    \\<Longrightarrow> finprod G f {} =\n                      finprod (G\\<lparr>carrier := H\\<rparr>) f {}\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>f \\<in> F \\<rightarrow> H; subgroup H G\\<rbrakk>\n        \\<Longrightarrow> finprod G f F =\n                          finprod (G\\<lparr>carrier := H\\<rparr>) f F;\n        f \\<in> insert x F \\<rightarrow> H; subgroup H G\\<rbrakk>\n       \\<Longrightarrow> finprod G f (insert x F) =\n                         finprod (G\\<lparr>carrier := H\\<rparr>) f\n                          (insert x F)", "case empty"], ["proof (state)\nthis:\n  f \\<in> {} \\<rightarrow> H\n  subgroup H G\n\ngoal (2 subgoals):\n 1. \\<lbrakk>f \\<in> {} \\<rightarrow> H; subgroup H G\\<rbrakk>\n    \\<Longrightarrow> finprod G f {} =\n                      finprod (G\\<lparr>carrier := H\\<rparr>) f {}\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>f \\<in> F \\<rightarrow> H; subgroup H G\\<rbrakk>\n        \\<Longrightarrow> finprod G f F =\n                          finprod (G\\<lparr>carrier := H\\<rparr>) f F;\n        f \\<in> insert x F \\<rightarrow> H; subgroup H G\\<rbrakk>\n       \\<Longrightarrow> finprod G f (insert x F) =\n                         finprod (G\\<lparr>carrier := H\\<rparr>) f\n                          (insert x F)", "then"], ["proof (chain)\npicking this:\n  f \\<in> {} \\<rightarrow> H\n  subgroup H G", "show ?case"], ["proof (prove)\nusing this:\n  f \\<in> {} \\<rightarrow> H\n  subgroup H G\n\ngoal (1 subgoal):\n 1. finprod G f {} = finprod (G\\<lparr>carrier := H\\<rparr>) f {}", "using finprod_empty H.finprod_empty"], ["proof (prove)\nusing this:\n  f \\<in> {} \\<rightarrow> H\n  subgroup H G\n  finprod G ?f {} = \\<one>\n  finprod (G\\<lparr>carrier := H\\<rparr>) ?f {} =\n  \\<one>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub>\n\ngoal (1 subgoal):\n 1. finprod G f {} = finprod (G\\<lparr>carrier := H\\<rparr>) f {}", "by simp"], ["proof (state)\nthis:\n  finprod G f {} = finprod (G\\<lparr>carrier := H\\<rparr>) f {}\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>f \\<in> F \\<rightarrow> H; subgroup H G\\<rbrakk>\n        \\<Longrightarrow> finprod G f F =\n                          finprod (G\\<lparr>carrier := H\\<rparr>) f F;\n        f \\<in> insert x F \\<rightarrow> H; subgroup H G\\<rbrakk>\n       \\<Longrightarrow> finprod G f (insert x F) =\n                         finprod (G\\<lparr>carrier := H\\<rparr>) f\n                          (insert x F)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>f \\<in> F \\<rightarrow> H; subgroup H G\\<rbrakk>\n        \\<Longrightarrow> finprod G f F =\n                          finprod (G\\<lparr>carrier := H\\<rparr>) f F;\n        f \\<in> insert x F \\<rightarrow> H; subgroup H G\\<rbrakk>\n       \\<Longrightarrow> finprod G f (insert x F) =\n                         finprod (G\\<lparr>carrier := H\\<rparr>) f\n                          (insert x F)", "case i: (insert x F)"], ["proof (state)\nthis:\n  finite F\n  x \\<notin> F\n  \\<lbrakk>f \\<in> F \\<rightarrow> H; subgroup H G\\<rbrakk>\n  \\<Longrightarrow> finprod G f F =\n                    finprod (G\\<lparr>carrier := H\\<rparr>) f F\n  f \\<in> insert x F \\<rightarrow> H\n  subgroup H G\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>f \\<in> F \\<rightarrow> H; subgroup H G\\<rbrakk>\n        \\<Longrightarrow> finprod G f F =\n                          finprod (G\\<lparr>carrier := H\\<rparr>) f F;\n        f \\<in> insert x F \\<rightarrow> H; subgroup H G\\<rbrakk>\n       \\<Longrightarrow> finprod G f (insert x F) =\n                         finprod (G\\<lparr>carrier := H\\<rparr>) f\n                          (insert x F)", "then"], ["proof (chain)\npicking this:\n  finite F\n  x \\<notin> F\n  \\<lbrakk>f \\<in> F \\<rightarrow> H; subgroup H G\\<rbrakk>\n  \\<Longrightarrow> finprod G f F =\n                    finprod (G\\<lparr>carrier := H\\<rparr>) f F\n  f \\<in> insert x F \\<rightarrow> H\n  subgroup H G", "have \"finprod G f F = finprod (G\\<lparr>carrier := H\\<rparr>) f F\""], ["proof (prove)\nusing this:\n  finite F\n  x \\<notin> F\n  \\<lbrakk>f \\<in> F \\<rightarrow> H; subgroup H G\\<rbrakk>\n  \\<Longrightarrow> finprod G f F =\n                    finprod (G\\<lparr>carrier := H\\<rparr>) f F\n  f \\<in> insert x F \\<rightarrow> H\n  subgroup H G\n\ngoal (1 subgoal):\n 1. finprod G f F = finprod (G\\<lparr>carrier := H\\<rparr>) f F", "by blast"], ["proof (state)\nthis:\n  finprod G f F = finprod (G\\<lparr>carrier := H\\<rparr>) f F\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>f \\<in> F \\<rightarrow> H; subgroup H G\\<rbrakk>\n        \\<Longrightarrow> finprod G f F =\n                          finprod (G\\<lparr>carrier := H\\<rparr>) f F;\n        f \\<in> insert x F \\<rightarrow> H; subgroup H G\\<rbrakk>\n       \\<Longrightarrow> finprod G f (insert x F) =\n                         finprod (G\\<lparr>carrier := H\\<rparr>) f\n                          (insert x F)", "moreover"], ["proof (state)\nthis:\n  finprod G f F = finprod (G\\<lparr>carrier := H\\<rparr>) f F\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>f \\<in> F \\<rightarrow> H; subgroup H G\\<rbrakk>\n        \\<Longrightarrow> finprod G f F =\n                          finprod (G\\<lparr>carrier := H\\<rparr>) f F;\n        f \\<in> insert x F \\<rightarrow> H; subgroup H G\\<rbrakk>\n       \\<Longrightarrow> finprod G f (insert x F) =\n                         finprod (G\\<lparr>carrier := H\\<rparr>) f\n                          (insert x F)", "have \"finprod G f (insert x F) = f x \\<otimes> finprod G f F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G f (insert x F) = f x \\<otimes> finprod G f F", "proof(intro finprod_insert[OF i(1, 2), of f])"], ["proof (state)\ngoal (2 subgoals):\n 1. f \\<in> F \\<rightarrow> carrier G\n 2. f x \\<in> carrier G", "show \"f \\<in> F \\<rightarrow> carrier G\" \"f x \\<in> carrier G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> F \\<rightarrow> carrier G &&& f x \\<in> carrier G", "using i(4) subgroup.subset[OF i(5)]"], ["proof (prove)\nusing this:\n  f \\<in> insert x F \\<rightarrow> H\n  H \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. f \\<in> F \\<rightarrow> carrier G &&& f x \\<in> carrier G", "by blast+"], ["proof (state)\nthis:\n  f \\<in> F \\<rightarrow> carrier G\n  f x \\<in> carrier G\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finprod G f (insert x F) = f x \\<otimes> finprod G f F\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>f \\<in> F \\<rightarrow> H; subgroup H G\\<rbrakk>\n        \\<Longrightarrow> finprod G f F =\n                          finprod (G\\<lparr>carrier := H\\<rparr>) f F;\n        f \\<in> insert x F \\<rightarrow> H; subgroup H G\\<rbrakk>\n       \\<Longrightarrow> finprod G f (insert x F) =\n                         finprod (G\\<lparr>carrier := H\\<rparr>) f\n                          (insert x F)", "ultimately"], ["proof (chain)\npicking this:\n  finprod G f F = finprod (G\\<lparr>carrier := H\\<rparr>) f F\n  finprod G f (insert x F) = f x \\<otimes> finprod G f F", "have \"finprod G f (insert x F) = f x \\<otimes>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> finprod (G\\<lparr>carrier := H\\<rparr>) f F\""], ["proof (prove)\nusing this:\n  finprod G f F = finprod (G\\<lparr>carrier := H\\<rparr>) f F\n  finprod G f (insert x F) = f x \\<otimes> finprod G f F\n\ngoal (1 subgoal):\n 1. finprod G f (insert x F) =\n    f x \\<otimes>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub>\n    finprod (G\\<lparr>carrier := H\\<rparr>) f F", "by auto"], ["proof (state)\nthis:\n  finprod G f (insert x F) =\n  f x \\<otimes>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub>\n  finprod (G\\<lparr>carrier := H\\<rparr>) f F\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>f \\<in> F \\<rightarrow> H; subgroup H G\\<rbrakk>\n        \\<Longrightarrow> finprod G f F =\n                          finprod (G\\<lparr>carrier := H\\<rparr>) f F;\n        f \\<in> insert x F \\<rightarrow> H; subgroup H G\\<rbrakk>\n       \\<Longrightarrow> finprod G f (insert x F) =\n                         finprod (G\\<lparr>carrier := H\\<rparr>) f\n                          (insert x F)", "moreover"], ["proof (state)\nthis:\n  finprod G f (insert x F) =\n  f x \\<otimes>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub>\n  finprod (G\\<lparr>carrier := H\\<rparr>) f F\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>f \\<in> F \\<rightarrow> H; subgroup H G\\<rbrakk>\n        \\<Longrightarrow> finprod G f F =\n                          finprod (G\\<lparr>carrier := H\\<rparr>) f F;\n        f \\<in> insert x F \\<rightarrow> H; subgroup H G\\<rbrakk>\n       \\<Longrightarrow> finprod G f (insert x F) =\n                         finprod (G\\<lparr>carrier := H\\<rparr>) f\n                          (insert x F)", "have \"finprod (G\\<lparr>carrier := H\\<rparr>) f (insert x F) = \\<dots>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod (G\\<lparr>carrier := H\\<rparr>) f (insert x F) =\n    f x \\<otimes>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub>\n    finprod (G\\<lparr>carrier := H\\<rparr>) f F", "proof(intro H.finprod_insert[OF i(1, 2)])"], ["proof (state)\ngoal (2 subgoals):\n 1. f \\<in> F \\<rightarrow> carrier (G\\<lparr>carrier := H\\<rparr>)\n 2. f x \\<in> carrier (G\\<lparr>carrier := H\\<rparr>)", "show \"f \\<in> F \\<rightarrow> carrier (G\\<lparr>carrier := H\\<rparr>)\" \"f x \\<in> carrier (G\\<lparr>carrier := H\\<rparr>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> F \\<rightarrow> carrier (G\\<lparr>carrier := H\\<rparr>) &&&\n    f x \\<in> carrier (G\\<lparr>carrier := H\\<rparr>)", "using i(4)"], ["proof (prove)\nusing this:\n  f \\<in> insert x F \\<rightarrow> H\n\ngoal (1 subgoal):\n 1. f \\<in> F \\<rightarrow> carrier (G\\<lparr>carrier := H\\<rparr>) &&&\n    f x \\<in> carrier (G\\<lparr>carrier := H\\<rparr>)", "by auto"], ["proof (state)\nthis:\n  f \\<in> F \\<rightarrow> carrier (G\\<lparr>carrier := H\\<rparr>)\n  f x \\<in> carrier (G\\<lparr>carrier := H\\<rparr>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finprod (G\\<lparr>carrier := H\\<rparr>) f (insert x F) =\n  f x \\<otimes>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub>\n  finprod (G\\<lparr>carrier := H\\<rparr>) f F\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>f \\<in> F \\<rightarrow> H; subgroup H G\\<rbrakk>\n        \\<Longrightarrow> finprod G f F =\n                          finprod (G\\<lparr>carrier := H\\<rparr>) f F;\n        f \\<in> insert x F \\<rightarrow> H; subgroup H G\\<rbrakk>\n       \\<Longrightarrow> finprod G f (insert x F) =\n                         finprod (G\\<lparr>carrier := H\\<rparr>) f\n                          (insert x F)", "ultimately"], ["proof (chain)\npicking this:\n  finprod G f (insert x F) =\n  f x \\<otimes>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub>\n  finprod (G\\<lparr>carrier := H\\<rparr>) f F\n  finprod (G\\<lparr>carrier := H\\<rparr>) f (insert x F) =\n  f x \\<otimes>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub>\n  finprod (G\\<lparr>carrier := H\\<rparr>) f F", "show ?case"], ["proof (prove)\nusing this:\n  finprod G f (insert x F) =\n  f x \\<otimes>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub>\n  finprod (G\\<lparr>carrier := H\\<rparr>) f F\n  finprod (G\\<lparr>carrier := H\\<rparr>) f (insert x F) =\n  f x \\<otimes>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub>\n  finprod (G\\<lparr>carrier := H\\<rparr>) f F\n\ngoal (1 subgoal):\n 1. finprod G f (insert x F) =\n    finprod (G\\<lparr>carrier := H\\<rparr>) f (insert x F)", "by simp"], ["proof (state)\nthis:\n  finprod G f (insert x F) =\n  finprod (G\\<lparr>carrier := H\\<rparr>) f (insert x F)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finprod G f S = finprod (G\\<lparr>carrier := H\\<rparr>) f S\n\ngoal (1 subgoal):\n 1. infinite S \\<Longrightarrow>\n    finprod G f S = finprod (G\\<lparr>carrier := H\\<rparr>) f S", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. infinite S \\<Longrightarrow>\n    finprod G f S = finprod (G\\<lparr>carrier := H\\<rparr>) f S", "case False"], ["proof (state)\nthis:\n  infinite S\n\ngoal (1 subgoal):\n 1. infinite S \\<Longrightarrow>\n    finprod G f S = finprod (G\\<lparr>carrier := H\\<rparr>) f S", "then"], ["proof (chain)\npicking this:\n  infinite S", "show ?thesis"], ["proof (prove)\nusing this:\n  infinite S\n\ngoal (1 subgoal):\n 1. finprod G f S = finprod (G\\<lparr>carrier := H\\<rparr>) f S", "unfolding finprod_def"], ["proof (prove)\nusing this:\n  infinite S\n\ngoal (1 subgoal):\n 1. (if finite S then foldD (carrier G) ((\\<otimes>) \\<circ> f) \\<one> S\n     else \\<one>) =\n    (if finite S\n     then foldD (carrier (G\\<lparr>carrier := H\\<rparr>))\n           ((\\<otimes>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub>) \\<circ>\n            f)\n           \\<one>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub> S\n     else \\<one>\\<^bsub>G\\<lparr>carrier := H\\<rparr>\\<^esub>)", "by simp"], ["proof (state)\nthis:\n  finprod G f S = finprod (G\\<lparr>carrier := H\\<rparr>) f S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in comm_group) finprod_closed_subgroup:\n  assumes \"subgroup H G\" \"f \\<in> A \\<rightarrow> H\"\n  shows \"finprod G f A \\<in> H\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G f A \\<in> H", "using assms(2)"], ["proof (prove)\nusing this:\n  f \\<in> A \\<rightarrow> H\n\ngoal (1 subgoal):\n 1. finprod G f A \\<in> H", "proof (induct A rule: infinite_finite_induct)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; f \\<in> A \\<rightarrow> H\\<rbrakk>\n       \\<Longrightarrow> finprod G f A \\<in> H\n 2. f \\<in> {} \\<rightarrow> H \\<Longrightarrow> finprod G f {} \\<in> H\n 3. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        f \\<in> F \\<rightarrow> H \\<Longrightarrow> finprod G f F \\<in> H;\n        f \\<in> insert x F \\<rightarrow> H\\<rbrakk>\n       \\<Longrightarrow> finprod G f (insert x F) \\<in> H", "case (infinite A)"], ["proof (state)\nthis:\n  infinite A\n  f \\<in> A \\<rightarrow> H\n\ngoal (3 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; f \\<in> A \\<rightarrow> H\\<rbrakk>\n       \\<Longrightarrow> finprod G f A \\<in> H\n 2. f \\<in> {} \\<rightarrow> H \\<Longrightarrow> finprod G f {} \\<in> H\n 3. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        f \\<in> F \\<rightarrow> H \\<Longrightarrow> finprod G f F \\<in> H;\n        f \\<in> insert x F \\<rightarrow> H\\<rbrakk>\n       \\<Longrightarrow> finprod G f (insert x F) \\<in> H", "then"], ["proof (chain)\npicking this:\n  infinite A\n  f \\<in> A \\<rightarrow> H", "show ?case"], ["proof (prove)\nusing this:\n  infinite A\n  f \\<in> A \\<rightarrow> H\n\ngoal (1 subgoal):\n 1. finprod G f A \\<in> H", "using subgroup.one_closed[OF assms(1)]"], ["proof (prove)\nusing this:\n  infinite A\n  f \\<in> A \\<rightarrow> H\n  \\<one> \\<in> H\n\ngoal (1 subgoal):\n 1. finprod G f A \\<in> H", "by auto"], ["proof (state)\nthis:\n  finprod G f A \\<in> H\n\ngoal (2 subgoals):\n 1. f \\<in> {} \\<rightarrow> H \\<Longrightarrow> finprod G f {} \\<in> H\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        f \\<in> F \\<rightarrow> H \\<Longrightarrow> finprod G f F \\<in> H;\n        f \\<in> insert x F \\<rightarrow> H\\<rbrakk>\n       \\<Longrightarrow> finprod G f (insert x F) \\<in> H", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. f \\<in> {} \\<rightarrow> H \\<Longrightarrow> finprod G f {} \\<in> H\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        f \\<in> F \\<rightarrow> H \\<Longrightarrow> finprod G f F \\<in> H;\n        f \\<in> insert x F \\<rightarrow> H\\<rbrakk>\n       \\<Longrightarrow> finprod G f (insert x F) \\<in> H", "case empty"], ["proof (state)\nthis:\n  f \\<in> {} \\<rightarrow> H\n\ngoal (2 subgoals):\n 1. f \\<in> {} \\<rightarrow> H \\<Longrightarrow> finprod G f {} \\<in> H\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        f \\<in> F \\<rightarrow> H \\<Longrightarrow> finprod G f F \\<in> H;\n        f \\<in> insert x F \\<rightarrow> H\\<rbrakk>\n       \\<Longrightarrow> finprod G f (insert x F) \\<in> H", "then"], ["proof (chain)\npicking this:\n  f \\<in> {} \\<rightarrow> H", "show ?case"], ["proof (prove)\nusing this:\n  f \\<in> {} \\<rightarrow> H\n\ngoal (1 subgoal):\n 1. finprod G f {} \\<in> H", "using subgroup.one_closed[OF assms(1)]"], ["proof (prove)\nusing this:\n  f \\<in> {} \\<rightarrow> H\n  \\<one> \\<in> H\n\ngoal (1 subgoal):\n 1. finprod G f {} \\<in> H", "by auto"], ["proof (state)\nthis:\n  finprod G f {} \\<in> H\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        f \\<in> F \\<rightarrow> H \\<Longrightarrow> finprod G f F \\<in> H;\n        f \\<in> insert x F \\<rightarrow> H\\<rbrakk>\n       \\<Longrightarrow> finprod G f (insert x F) \\<in> H", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        f \\<in> F \\<rightarrow> H \\<Longrightarrow> finprod G f F \\<in> H;\n        f \\<in> insert x F \\<rightarrow> H\\<rbrakk>\n       \\<Longrightarrow> finprod G f (insert x F) \\<in> H", "case i: (insert x F)"], ["proof (state)\nthis:\n  finite F\n  x \\<notin> F\n  f \\<in> F \\<rightarrow> H \\<Longrightarrow> finprod G f F \\<in> H\n  f \\<in> insert x F \\<rightarrow> H\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        f \\<in> F \\<rightarrow> H \\<Longrightarrow> finprod G f F \\<in> H;\n        f \\<in> insert x F \\<rightarrow> H\\<rbrakk>\n       \\<Longrightarrow> finprod G f (insert x F) \\<in> H", "from finprod_insert[OF i(1, 2), of f] i"], ["proof (chain)\npicking this:\n  \\<lbrakk>f \\<in> F \\<rightarrow> carrier G; f x \\<in> carrier G\\<rbrakk>\n  \\<Longrightarrow> finprod G f (insert x F) = f x \\<otimes> finprod G f F\n  finite F\n  x \\<notin> F\n  f \\<in> F \\<rightarrow> H \\<Longrightarrow> finprod G f F \\<in> H\n  f \\<in> insert x F \\<rightarrow> H", "have fi: \"finprod G f (insert x F) = f x \\<otimes> finprod G f F\""], ["proof (prove)\nusing this:\n  \\<lbrakk>f \\<in> F \\<rightarrow> carrier G; f x \\<in> carrier G\\<rbrakk>\n  \\<Longrightarrow> finprod G f (insert x F) = f x \\<otimes> finprod G f F\n  finite F\n  x \\<notin> F\n  f \\<in> F \\<rightarrow> H \\<Longrightarrow> finprod G f F \\<in> H\n  f \\<in> insert x F \\<rightarrow> H\n\ngoal (1 subgoal):\n 1. finprod G f (insert x F) = f x \\<otimes> finprod G f F", "using subgroup.subset[OF assms(1)]"], ["proof (prove)\nusing this:\n  \\<lbrakk>f \\<in> F \\<rightarrow> carrier G; f x \\<in> carrier G\\<rbrakk>\n  \\<Longrightarrow> finprod G f (insert x F) = f x \\<otimes> finprod G f F\n  finite F\n  x \\<notin> F\n  f \\<in> F \\<rightarrow> H \\<Longrightarrow> finprod G f F \\<in> H\n  f \\<in> insert x F \\<rightarrow> H\n  H \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. finprod G f (insert x F) = f x \\<otimes> finprod G f F", "by blast"], ["proof (state)\nthis:\n  finprod G f (insert x F) = f x \\<otimes> finprod G f F\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        f \\<in> F \\<rightarrow> H \\<Longrightarrow> finprod G f F \\<in> H;\n        f \\<in> insert x F \\<rightarrow> H\\<rbrakk>\n       \\<Longrightarrow> finprod G f (insert x F) \\<in> H", "from i"], ["proof (chain)\npicking this:\n  finite F\n  x \\<notin> F\n  f \\<in> F \\<rightarrow> H \\<Longrightarrow> finprod G f F \\<in> H\n  f \\<in> insert x F \\<rightarrow> H", "have \"finprod G f F \\<in> H\" \"f x \\<in> H\""], ["proof (prove)\nusing this:\n  finite F\n  x \\<notin> F\n  f \\<in> F \\<rightarrow> H \\<Longrightarrow> finprod G f F \\<in> H\n  f \\<in> insert x F \\<rightarrow> H\n\ngoal (1 subgoal):\n 1. finprod G f F \\<in> H &&& f x \\<in> H", "by blast+"], ["proof (state)\nthis:\n  finprod G f F \\<in> H\n  f x \\<in> H\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        f \\<in> F \\<rightarrow> H \\<Longrightarrow> finprod G f F \\<in> H;\n        f \\<in> insert x F \\<rightarrow> H\\<rbrakk>\n       \\<Longrightarrow> finprod G f (insert x F) \\<in> H", "with fi"], ["proof (chain)\npicking this:\n  finprod G f (insert x F) = f x \\<otimes> finprod G f F\n  finprod G f F \\<in> H\n  f x \\<in> H", "show ?case"], ["proof (prove)\nusing this:\n  finprod G f (insert x F) = f x \\<otimes> finprod G f F\n  finprod G f F \\<in> H\n  f x \\<in> H\n\ngoal (1 subgoal):\n 1. finprod G f (insert x F) \\<in> H", "using subgroup.m_closed[OF assms(1)]"], ["proof (prove)\nusing this:\n  finprod G f (insert x F) = f x \\<otimes> finprod G f F\n  finprod G f F \\<in> H\n  f x \\<in> H\n  \\<lbrakk>?x \\<in> H; ?y \\<in> H\\<rbrakk>\n  \\<Longrightarrow> ?x \\<otimes> ?y \\<in> H\n\ngoal (1 subgoal):\n 1. finprod G f (insert x F) \\<in> H", "by presburger"], ["proof (state)\nthis:\n  finprod G f (insert x F) \\<in> H\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>It also does not matter if we exponentiate all elements taking part in the product or the\nresult of the product.\\<close>"], ["", "lemma (in comm_group) finprod_exp:\n  assumes \"A \\<subseteq> carrier G\" \"f \\<in> A \\<rightarrow> carrier G\"\n  shows \"(finprod G f A) [^] (k::int) = finprod G ((\\<lambda>a. a [^] k) \\<circ> f) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G f A [^] k = finprod G ((\\<lambda>a. a [^] k) \\<circ> f) A", "using assms"], ["proof (prove)\nusing this:\n  A \\<subseteq> carrier G\n  f \\<in> A \\<rightarrow> carrier G\n\ngoal (1 subgoal):\n 1. finprod G f A [^] k = finprod G ((\\<lambda>a. a [^] k) \\<circ> f) A", "proof(induction A rule: infinite_finite_induct)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; A \\<subseteq> carrier G;\n        f \\<in> A \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G f A [^] k =\n                         finprod G ((\\<lambda>a. a [^] k) \\<circ> f) A\n 2. \\<lbrakk>{} \\<subseteq> carrier G;\n     f \\<in> {} \\<rightarrow> carrier G\\<rbrakk>\n    \\<Longrightarrow> finprod G f {} [^] k =\n                      finprod G ((\\<lambda>a. a [^] k) \\<circ> f) {}\n 3. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier G;\n         f \\<in> F \\<rightarrow> carrier G\\<rbrakk>\n        \\<Longrightarrow> finprod G f F [^] k =\n                          finprod G ((\\<lambda>a. a [^] k) \\<circ> f) F;\n        insert x F \\<subseteq> carrier G;\n        f \\<in> insert x F \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G f (insert x F) [^] k =\n                         finprod G ((\\<lambda>a. a [^] k) \\<circ> f)\n                          (insert x F)", "case i: (insert x F)"], ["proof (state)\nthis:\n  finite F\n  x \\<notin> F\n  \\<lbrakk>F \\<subseteq> carrier G;\n   f \\<in> F \\<rightarrow> carrier G\\<rbrakk>\n  \\<Longrightarrow> finprod G f F [^] k =\n                    finprod G ((\\<lambda>a. a [^] k) \\<circ> f) F\n  insert x F \\<subseteq> carrier G\n  f \\<in> insert x F \\<rightarrow> carrier G\n\ngoal (3 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; A \\<subseteq> carrier G;\n        f \\<in> A \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G f A [^] k =\n                         finprod G ((\\<lambda>a. a [^] k) \\<circ> f) A\n 2. \\<lbrakk>{} \\<subseteq> carrier G;\n     f \\<in> {} \\<rightarrow> carrier G\\<rbrakk>\n    \\<Longrightarrow> finprod G f {} [^] k =\n                      finprod G ((\\<lambda>a. a [^] k) \\<circ> f) {}\n 3. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier G;\n         f \\<in> F \\<rightarrow> carrier G\\<rbrakk>\n        \\<Longrightarrow> finprod G f F [^] k =\n                          finprod G ((\\<lambda>a. a [^] k) \\<circ> f) F;\n        insert x F \\<subseteq> carrier G;\n        f \\<in> insert x F \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G f (insert x F) [^] k =\n                         finprod G ((\\<lambda>a. a [^] k) \\<circ> f)\n                          (insert x F)", "hence ih: \"finprod G f F [^] k = finprod G ((\\<lambda>a. a [^] k) \\<circ> f) F\""], ["proof (prove)\nusing this:\n  finite F\n  x \\<notin> F\n  \\<lbrakk>F \\<subseteq> carrier G;\n   f \\<in> F \\<rightarrow> carrier G\\<rbrakk>\n  \\<Longrightarrow> finprod G f F [^] k =\n                    finprod G ((\\<lambda>a. a [^] k) \\<circ> f) F\n  insert x F \\<subseteq> carrier G\n  f \\<in> insert x F \\<rightarrow> carrier G\n\ngoal (1 subgoal):\n 1. finprod G f F [^] k = finprod G ((\\<lambda>a. a [^] k) \\<circ> f) F", "by blast"], ["proof (state)\nthis:\n  finprod G f F [^] k = finprod G ((\\<lambda>a. a [^] k) \\<circ> f) F\n\ngoal (3 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; A \\<subseteq> carrier G;\n        f \\<in> A \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G f A [^] k =\n                         finprod G ((\\<lambda>a. a [^] k) \\<circ> f) A\n 2. \\<lbrakk>{} \\<subseteq> carrier G;\n     f \\<in> {} \\<rightarrow> carrier G\\<rbrakk>\n    \\<Longrightarrow> finprod G f {} [^] k =\n                      finprod G ((\\<lambda>a. a [^] k) \\<circ> f) {}\n 3. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier G;\n         f \\<in> F \\<rightarrow> carrier G\\<rbrakk>\n        \\<Longrightarrow> finprod G f F [^] k =\n                          finprod G ((\\<lambda>a. a [^] k) \\<circ> f) F;\n        insert x F \\<subseteq> carrier G;\n        f \\<in> insert x F \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G f (insert x F) [^] k =\n                         finprod G ((\\<lambda>a. a [^] k) \\<circ> f)\n                          (insert x F)", "have fpc: \"finprod G f F \\<in> carrier G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G f F \\<in> carrier G", "by (intro finprod_closed, use i in auto)"], ["proof (state)\nthis:\n  finprod G f F \\<in> carrier G\n\ngoal (3 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; A \\<subseteq> carrier G;\n        f \\<in> A \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G f A [^] k =\n                         finprod G ((\\<lambda>a. a [^] k) \\<circ> f) A\n 2. \\<lbrakk>{} \\<subseteq> carrier G;\n     f \\<in> {} \\<rightarrow> carrier G\\<rbrakk>\n    \\<Longrightarrow> finprod G f {} [^] k =\n                      finprod G ((\\<lambda>a. a [^] k) \\<circ> f) {}\n 3. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier G;\n         f \\<in> F \\<rightarrow> carrier G\\<rbrakk>\n        \\<Longrightarrow> finprod G f F [^] k =\n                          finprod G ((\\<lambda>a. a [^] k) \\<circ> f) F;\n        insert x F \\<subseteq> carrier G;\n        f \\<in> insert x F \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G f (insert x F) [^] k =\n                         finprod G ((\\<lambda>a. a [^] k) \\<circ> f)\n                          (insert x F)", "have fxc: \"f x \\<in> carrier G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f x \\<in> carrier G", "using i"], ["proof (prove)\nusing this:\n  finite F\n  x \\<notin> F\n  \\<lbrakk>F \\<subseteq> carrier G;\n   f \\<in> F \\<rightarrow> carrier G\\<rbrakk>\n  \\<Longrightarrow> finprod G f F [^] k =\n                    finprod G ((\\<lambda>a. a [^] k) \\<circ> f) F\n  insert x F \\<subseteq> carrier G\n  f \\<in> insert x F \\<rightarrow> carrier G\n\ngoal (1 subgoal):\n 1. f x \\<in> carrier G", "by auto"], ["proof (state)\nthis:\n  f x \\<in> carrier G\n\ngoal (3 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; A \\<subseteq> carrier G;\n        f \\<in> A \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G f A [^] k =\n                         finprod G ((\\<lambda>a. a [^] k) \\<circ> f) A\n 2. \\<lbrakk>{} \\<subseteq> carrier G;\n     f \\<in> {} \\<rightarrow> carrier G\\<rbrakk>\n    \\<Longrightarrow> finprod G f {} [^] k =\n                      finprod G ((\\<lambda>a. a [^] k) \\<circ> f) {}\n 3. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier G;\n         f \\<in> F \\<rightarrow> carrier G\\<rbrakk>\n        \\<Longrightarrow> finprod G f F [^] k =\n                          finprod G ((\\<lambda>a. a [^] k) \\<circ> f) F;\n        insert x F \\<subseteq> carrier G;\n        f \\<in> insert x F \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G f (insert x F) [^] k =\n                         finprod G ((\\<lambda>a. a [^] k) \\<circ> f)\n                          (insert x F)", "have \"finprod G f (insert x F) = f x \\<otimes> finprod G f F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G f (insert x F) = f x \\<otimes> finprod G f F", "by (intro finprod_insert, use i in auto)"], ["proof (state)\nthis:\n  finprod G f (insert x F) = f x \\<otimes> finprod G f F\n\ngoal (3 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; A \\<subseteq> carrier G;\n        f \\<in> A \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G f A [^] k =\n                         finprod G ((\\<lambda>a. a [^] k) \\<circ> f) A\n 2. \\<lbrakk>{} \\<subseteq> carrier G;\n     f \\<in> {} \\<rightarrow> carrier G\\<rbrakk>\n    \\<Longrightarrow> finprod G f {} [^] k =\n                      finprod G ((\\<lambda>a. a [^] k) \\<circ> f) {}\n 3. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier G;\n         f \\<in> F \\<rightarrow> carrier G\\<rbrakk>\n        \\<Longrightarrow> finprod G f F [^] k =\n                          finprod G ((\\<lambda>a. a [^] k) \\<circ> f) F;\n        insert x F \\<subseteq> carrier G;\n        f \\<in> insert x F \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G f (insert x F) [^] k =\n                         finprod G ((\\<lambda>a. a [^] k) \\<circ> f)\n                          (insert x F)", "hence \"finprod G f (insert x F) [^] k = (f x \\<otimes> finprod G f F) [^] k\""], ["proof (prove)\nusing this:\n  finprod G f (insert x F) = f x \\<otimes> finprod G f F\n\ngoal (1 subgoal):\n 1. finprod G f (insert x F) [^] k = (f x \\<otimes> finprod G f F) [^] k", "by simp"], ["proof (state)\nthis:\n  finprod G f (insert x F) [^] k = (f x \\<otimes> finprod G f F) [^] k\n\ngoal (3 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; A \\<subseteq> carrier G;\n        f \\<in> A \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G f A [^] k =\n                         finprod G ((\\<lambda>a. a [^] k) \\<circ> f) A\n 2. \\<lbrakk>{} \\<subseteq> carrier G;\n     f \\<in> {} \\<rightarrow> carrier G\\<rbrakk>\n    \\<Longrightarrow> finprod G f {} [^] k =\n                      finprod G ((\\<lambda>a. a [^] k) \\<circ> f) {}\n 3. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier G;\n         f \\<in> F \\<rightarrow> carrier G\\<rbrakk>\n        \\<Longrightarrow> finprod G f F [^] k =\n                          finprod G ((\\<lambda>a. a [^] k) \\<circ> f) F;\n        insert x F \\<subseteq> carrier G;\n        f \\<in> insert x F \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G f (insert x F) [^] k =\n                         finprod G ((\\<lambda>a. a [^] k) \\<circ> f)\n                          (insert x F)", "also"], ["proof (state)\nthis:\n  finprod G f (insert x F) [^] k = (f x \\<otimes> finprod G f F) [^] k\n\ngoal (3 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; A \\<subseteq> carrier G;\n        f \\<in> A \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G f A [^] k =\n                         finprod G ((\\<lambda>a. a [^] k) \\<circ> f) A\n 2. \\<lbrakk>{} \\<subseteq> carrier G;\n     f \\<in> {} \\<rightarrow> carrier G\\<rbrakk>\n    \\<Longrightarrow> finprod G f {} [^] k =\n                      finprod G ((\\<lambda>a. a [^] k) \\<circ> f) {}\n 3. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier G;\n         f \\<in> F \\<rightarrow> carrier G\\<rbrakk>\n        \\<Longrightarrow> finprod G f F [^] k =\n                          finprod G ((\\<lambda>a. a [^] k) \\<circ> f) F;\n        insert x F \\<subseteq> carrier G;\n        f \\<in> insert x F \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G f (insert x F) [^] k =\n                         finprod G ((\\<lambda>a. a [^] k) \\<circ> f)\n                          (insert x F)", "have \"\\<dots> = f x [^] k \\<otimes> finprod G f F [^] k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (f x \\<otimes> finprod G f F) [^] k =\n    f x [^] k \\<otimes> finprod G f F [^] k", "using fpc fxc int_pow_distrib"], ["proof (prove)\nusing this:\n  finprod G f F \\<in> carrier G\n  f x \\<in> carrier G\n  \\<lbrakk>?x \\<in> carrier G; ?y \\<in> carrier G\\<rbrakk>\n  \\<Longrightarrow> (?x \\<otimes> ?y) [^] ?i = ?x [^] ?i \\<otimes> ?y [^] ?i\n\ngoal (1 subgoal):\n 1. (f x \\<otimes> finprod G f F) [^] k =\n    f x [^] k \\<otimes> finprod G f F [^] k", "by blast"], ["proof (state)\nthis:\n  (f x \\<otimes> finprod G f F) [^] k =\n  f x [^] k \\<otimes> finprod G f F [^] k\n\ngoal (3 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; A \\<subseteq> carrier G;\n        f \\<in> A \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G f A [^] k =\n                         finprod G ((\\<lambda>a. a [^] k) \\<circ> f) A\n 2. \\<lbrakk>{} \\<subseteq> carrier G;\n     f \\<in> {} \\<rightarrow> carrier G\\<rbrakk>\n    \\<Longrightarrow> finprod G f {} [^] k =\n                      finprod G ((\\<lambda>a. a [^] k) \\<circ> f) {}\n 3. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier G;\n         f \\<in> F \\<rightarrow> carrier G\\<rbrakk>\n        \\<Longrightarrow> finprod G f F [^] k =\n                          finprod G ((\\<lambda>a. a [^] k) \\<circ> f) F;\n        insert x F \\<subseteq> carrier G;\n        f \\<in> insert x F \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G f (insert x F) [^] k =\n                         finprod G ((\\<lambda>a. a [^] k) \\<circ> f)\n                          (insert x F)", "also"], ["proof (state)\nthis:\n  (f x \\<otimes> finprod G f F) [^] k =\n  f x [^] k \\<otimes> finprod G f F [^] k\n\ngoal (3 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; A \\<subseteq> carrier G;\n        f \\<in> A \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G f A [^] k =\n                         finprod G ((\\<lambda>a. a [^] k) \\<circ> f) A\n 2. \\<lbrakk>{} \\<subseteq> carrier G;\n     f \\<in> {} \\<rightarrow> carrier G\\<rbrakk>\n    \\<Longrightarrow> finprod G f {} [^] k =\n                      finprod G ((\\<lambda>a. a [^] k) \\<circ> f) {}\n 3. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier G;\n         f \\<in> F \\<rightarrow> carrier G\\<rbrakk>\n        \\<Longrightarrow> finprod G f F [^] k =\n                          finprod G ((\\<lambda>a. a [^] k) \\<circ> f) F;\n        insert x F \\<subseteq> carrier G;\n        f \\<in> insert x F \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G f (insert x F) [^] k =\n                         finprod G ((\\<lambda>a. a [^] k) \\<circ> f)\n                          (insert x F)", "have \"\\<dots> = ((\\<lambda>a. a [^] k) \\<circ> f) x \\<otimes> finprod G ((\\<lambda>a. a [^] k) \\<circ> f) F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f x [^] k \\<otimes> finprod G f F [^] k =\n    ((\\<lambda>a. a [^] k) \\<circ> f) x \\<otimes>\n    finprod G ((\\<lambda>a. a [^] k) \\<circ> f) F", "using ih"], ["proof (prove)\nusing this:\n  finprod G f F [^] k = finprod G ((\\<lambda>a. a [^] k) \\<circ> f) F\n\ngoal (1 subgoal):\n 1. f x [^] k \\<otimes> finprod G f F [^] k =\n    ((\\<lambda>a. a [^] k) \\<circ> f) x \\<otimes>\n    finprod G ((\\<lambda>a. a [^] k) \\<circ> f) F", "by simp"], ["proof (state)\nthis:\n  f x [^] k \\<otimes> finprod G f F [^] k =\n  ((\\<lambda>a. a [^] k) \\<circ> f) x \\<otimes>\n  finprod G ((\\<lambda>a. a [^] k) \\<circ> f) F\n\ngoal (3 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; A \\<subseteq> carrier G;\n        f \\<in> A \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G f A [^] k =\n                         finprod G ((\\<lambda>a. a [^] k) \\<circ> f) A\n 2. \\<lbrakk>{} \\<subseteq> carrier G;\n     f \\<in> {} \\<rightarrow> carrier G\\<rbrakk>\n    \\<Longrightarrow> finprod G f {} [^] k =\n                      finprod G ((\\<lambda>a. a [^] k) \\<circ> f) {}\n 3. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier G;\n         f \\<in> F \\<rightarrow> carrier G\\<rbrakk>\n        \\<Longrightarrow> finprod G f F [^] k =\n                          finprod G ((\\<lambda>a. a [^] k) \\<circ> f) F;\n        insert x F \\<subseteq> carrier G;\n        f \\<in> insert x F \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G f (insert x F) [^] k =\n                         finprod G ((\\<lambda>a. a [^] k) \\<circ> f)\n                          (insert x F)", "also"], ["proof (state)\nthis:\n  f x [^] k \\<otimes> finprod G f F [^] k =\n  ((\\<lambda>a. a [^] k) \\<circ> f) x \\<otimes>\n  finprod G ((\\<lambda>a. a [^] k) \\<circ> f) F\n\ngoal (3 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; A \\<subseteq> carrier G;\n        f \\<in> A \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G f A [^] k =\n                         finprod G ((\\<lambda>a. a [^] k) \\<circ> f) A\n 2. \\<lbrakk>{} \\<subseteq> carrier G;\n     f \\<in> {} \\<rightarrow> carrier G\\<rbrakk>\n    \\<Longrightarrow> finprod G f {} [^] k =\n                      finprod G ((\\<lambda>a. a [^] k) \\<circ> f) {}\n 3. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier G;\n         f \\<in> F \\<rightarrow> carrier G\\<rbrakk>\n        \\<Longrightarrow> finprod G f F [^] k =\n                          finprod G ((\\<lambda>a. a [^] k) \\<circ> f) F;\n        insert x F \\<subseteq> carrier G;\n        f \\<in> insert x F \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G f (insert x F) [^] k =\n                         finprod G ((\\<lambda>a. a [^] k) \\<circ> f)\n                          (insert x F)", "have \"\\<dots> = finprod G ((\\<lambda>a. a [^] k) \\<circ> f) (insert x F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>a. a [^] k) \\<circ> f) x \\<otimes>\n    finprod G ((\\<lambda>a. a [^] k) \\<circ> f) F =\n    finprod G ((\\<lambda>a. a [^] k) \\<circ> f) (insert x F)", "by (intro finprod_insert[symmetric], use i in auto)"], ["proof (state)\nthis:\n  ((\\<lambda>a. a [^] k) \\<circ> f) x \\<otimes>\n  finprod G ((\\<lambda>a. a [^] k) \\<circ> f) F =\n  finprod G ((\\<lambda>a. a [^] k) \\<circ> f) (insert x F)\n\ngoal (3 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; A \\<subseteq> carrier G;\n        f \\<in> A \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G f A [^] k =\n                         finprod G ((\\<lambda>a. a [^] k) \\<circ> f) A\n 2. \\<lbrakk>{} \\<subseteq> carrier G;\n     f \\<in> {} \\<rightarrow> carrier G\\<rbrakk>\n    \\<Longrightarrow> finprod G f {} [^] k =\n                      finprod G ((\\<lambda>a. a [^] k) \\<circ> f) {}\n 3. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>F \\<subseteq> carrier G;\n         f \\<in> F \\<rightarrow> carrier G\\<rbrakk>\n        \\<Longrightarrow> finprod G f F [^] k =\n                          finprod G ((\\<lambda>a. a [^] k) \\<circ> f) F;\n        insert x F \\<subseteq> carrier G;\n        f \\<in> insert x F \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G f (insert x F) [^] k =\n                         finprod G ((\\<lambda>a. a [^] k) \\<circ> f)\n                          (insert x F)", "finally"], ["proof (chain)\npicking this:\n  finprod G f (insert x F) [^] k =\n  finprod G ((\\<lambda>a. a [^] k) \\<circ> f) (insert x F)", "show ?case"], ["proof (prove)\nusing this:\n  finprod G f (insert x F) [^] k =\n  finprod G ((\\<lambda>a. a [^] k) \\<circ> f) (insert x F)\n\ngoal (1 subgoal):\n 1. finprod G f (insert x F) [^] k =\n    finprod G ((\\<lambda>a. a [^] k) \\<circ> f) (insert x F)", "."], ["proof (state)\nthis:\n  finprod G f (insert x F) [^] k =\n  finprod G ((\\<lambda>a. a [^] k) \\<circ> f) (insert x F)\n\ngoal (2 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A; A \\<subseteq> carrier G;\n        f \\<in> A \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G f A [^] k =\n                         finprod G ((\\<lambda>a. a [^] k) \\<circ> f) A\n 2. \\<lbrakk>{} \\<subseteq> carrier G;\n     f \\<in> {} \\<rightarrow> carrier G\\<rbrakk>\n    \\<Longrightarrow> finprod G f {} [^] k =\n                      finprod G ((\\<lambda>a. a [^] k) \\<circ> f) {}", "qed auto"], ["", "text \\<open>Some lemmas concerning different combinations of functions in the usage of \\<open>finprod\\<close>.\\<close>"], ["", "lemma (in comm_group) finprod_cong_split:\n  assumes \"\\<And>a. a \\<in> A \\<Longrightarrow> f a \\<otimes> g a = h a\"\n  and \"f \\<in> A \\<rightarrow> carrier G\" \"g \\<in> A \\<rightarrow> carrier G\" \"h \\<in> A \\<rightarrow> carrier G\"\n  shows \"finprod G h A = finprod G f A \\<otimes> finprod G g A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G h A = finprod G f A \\<otimes> finprod G g A", "using assms"], ["proof (prove)\nusing this:\n  ?a2 \\<in> A \\<Longrightarrow> f ?a2 \\<otimes> g ?a2 = h ?a2\n  f \\<in> A \\<rightarrow> carrier G\n  g \\<in> A \\<rightarrow> carrier G\n  h \\<in> A \\<rightarrow> carrier G\n\ngoal (1 subgoal):\n 1. finprod G h A = finprod G f A \\<otimes> finprod G g A", "proof(induct A rule: infinite_finite_induct)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A;\n        \\<And>a. a \\<in> A \\<Longrightarrow> f a \\<otimes> g a = h a;\n        f \\<in> A \\<rightarrow> carrier G;\n        g \\<in> A \\<rightarrow> carrier G;\n        h \\<in> A \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G h A =\n                         finprod G f A \\<otimes> finprod G g A\n 2. \\<lbrakk>\\<And>a. a \\<in> {} \\<Longrightarrow> f a \\<otimes> g a = h a;\n     f \\<in> {} \\<rightarrow> carrier G; g \\<in> {} \\<rightarrow> carrier G;\n     h \\<in> {} \\<rightarrow> carrier G\\<rbrakk>\n    \\<Longrightarrow> finprod G h {} =\n                      finprod G f {} \\<otimes> finprod G g {}\n 3. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<And>a.\n                    a \\<in> F \\<Longrightarrow> f a \\<otimes> g a = h a;\n         f \\<in> F \\<rightarrow> carrier G;\n         g \\<in> F \\<rightarrow> carrier G;\n         h \\<in> F \\<rightarrow> carrier G\\<rbrakk>\n        \\<Longrightarrow> finprod G h F =\n                          finprod G f F \\<otimes> finprod G g F;\n        \\<And>a.\n           a \\<in> insert x F \\<Longrightarrow> f a \\<otimes> g a = h a;\n        f \\<in> insert x F \\<rightarrow> carrier G;\n        g \\<in> insert x F \\<rightarrow> carrier G;\n        h \\<in> insert x F \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G h (insert x F) =\n                         finprod G f (insert x F) \\<otimes>\n                         finprod G g (insert x F)", "case (infinite A)"], ["proof (state)\nthis:\n  infinite A\n  ?a2 \\<in> A \\<Longrightarrow> f ?a2 \\<otimes> g ?a2 = h ?a2\n  f \\<in> A \\<rightarrow> carrier G\n  g \\<in> A \\<rightarrow> carrier G\n  h \\<in> A \\<rightarrow> carrier G\n\ngoal (3 subgoals):\n 1. \\<And>A.\n       \\<lbrakk>infinite A;\n        \\<And>a. a \\<in> A \\<Longrightarrow> f a \\<otimes> g a = h a;\n        f \\<in> A \\<rightarrow> carrier G;\n        g \\<in> A \\<rightarrow> carrier G;\n        h \\<in> A \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G h A =\n                         finprod G f A \\<otimes> finprod G g A\n 2. \\<lbrakk>\\<And>a. a \\<in> {} \\<Longrightarrow> f a \\<otimes> g a = h a;\n     f \\<in> {} \\<rightarrow> carrier G; g \\<in> {} \\<rightarrow> carrier G;\n     h \\<in> {} \\<rightarrow> carrier G\\<rbrakk>\n    \\<Longrightarrow> finprod G h {} =\n                      finprod G f {} \\<otimes> finprod G g {}\n 3. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<And>a.\n                    a \\<in> F \\<Longrightarrow> f a \\<otimes> g a = h a;\n         f \\<in> F \\<rightarrow> carrier G;\n         g \\<in> F \\<rightarrow> carrier G;\n         h \\<in> F \\<rightarrow> carrier G\\<rbrakk>\n        \\<Longrightarrow> finprod G h F =\n                          finprod G f F \\<otimes> finprod G g F;\n        \\<And>a.\n           a \\<in> insert x F \\<Longrightarrow> f a \\<otimes> g a = h a;\n        f \\<in> insert x F \\<rightarrow> carrier G;\n        g \\<in> insert x F \\<rightarrow> carrier G;\n        h \\<in> insert x F \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G h (insert x F) =\n                         finprod G f (insert x F) \\<otimes>\n                         finprod G g (insert x F)", "then"], ["proof (chain)\npicking this:\n  infinite A\n  ?a2 \\<in> A \\<Longrightarrow> f ?a2 \\<otimes> g ?a2 = h ?a2\n  f \\<in> A \\<rightarrow> carrier G\n  g \\<in> A \\<rightarrow> carrier G\n  h \\<in> A \\<rightarrow> carrier G", "show ?case"], ["proof (prove)\nusing this:\n  infinite A\n  ?a2 \\<in> A \\<Longrightarrow> f ?a2 \\<otimes> g ?a2 = h ?a2\n  f \\<in> A \\<rightarrow> carrier G\n  g \\<in> A \\<rightarrow> carrier G\n  h \\<in> A \\<rightarrow> carrier G\n\ngoal (1 subgoal):\n 1. finprod G h A = finprod G f A \\<otimes> finprod G g A", "by simp"], ["proof (state)\nthis:\n  finprod G h A = finprod G f A \\<otimes> finprod G g A\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>a. a \\<in> {} \\<Longrightarrow> f a \\<otimes> g a = h a;\n     f \\<in> {} \\<rightarrow> carrier G; g \\<in> {} \\<rightarrow> carrier G;\n     h \\<in> {} \\<rightarrow> carrier G\\<rbrakk>\n    \\<Longrightarrow> finprod G h {} =\n                      finprod G f {} \\<otimes> finprod G g {}\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<And>a.\n                    a \\<in> F \\<Longrightarrow> f a \\<otimes> g a = h a;\n         f \\<in> F \\<rightarrow> carrier G;\n         g \\<in> F \\<rightarrow> carrier G;\n         h \\<in> F \\<rightarrow> carrier G\\<rbrakk>\n        \\<Longrightarrow> finprod G h F =\n                          finprod G f F \\<otimes> finprod G g F;\n        \\<And>a.\n           a \\<in> insert x F \\<Longrightarrow> f a \\<otimes> g a = h a;\n        f \\<in> insert x F \\<rightarrow> carrier G;\n        g \\<in> insert x F \\<rightarrow> carrier G;\n        h \\<in> insert x F \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G h (insert x F) =\n                         finprod G f (insert x F) \\<otimes>\n                         finprod G g (insert x F)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>a. a \\<in> {} \\<Longrightarrow> f a \\<otimes> g a = h a;\n     f \\<in> {} \\<rightarrow> carrier G; g \\<in> {} \\<rightarrow> carrier G;\n     h \\<in> {} \\<rightarrow> carrier G\\<rbrakk>\n    \\<Longrightarrow> finprod G h {} =\n                      finprod G f {} \\<otimes> finprod G g {}\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<And>a.\n                    a \\<in> F \\<Longrightarrow> f a \\<otimes> g a = h a;\n         f \\<in> F \\<rightarrow> carrier G;\n         g \\<in> F \\<rightarrow> carrier G;\n         h \\<in> F \\<rightarrow> carrier G\\<rbrakk>\n        \\<Longrightarrow> finprod G h F =\n                          finprod G f F \\<otimes> finprod G g F;\n        \\<And>a.\n           a \\<in> insert x F \\<Longrightarrow> f a \\<otimes> g a = h a;\n        f \\<in> insert x F \\<rightarrow> carrier G;\n        g \\<in> insert x F \\<rightarrow> carrier G;\n        h \\<in> insert x F \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G h (insert x F) =\n                         finprod G f (insert x F) \\<otimes>\n                         finprod G g (insert x F)", "case empty"], ["proof (state)\nthis:\n  ?a2 \\<in> {} \\<Longrightarrow> f ?a2 \\<otimes> g ?a2 = h ?a2\n  f \\<in> {} \\<rightarrow> carrier G\n  g \\<in> {} \\<rightarrow> carrier G\n  h \\<in> {} \\<rightarrow> carrier G\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>a. a \\<in> {} \\<Longrightarrow> f a \\<otimes> g a = h a;\n     f \\<in> {} \\<rightarrow> carrier G; g \\<in> {} \\<rightarrow> carrier G;\n     h \\<in> {} \\<rightarrow> carrier G\\<rbrakk>\n    \\<Longrightarrow> finprod G h {} =\n                      finprod G f {} \\<otimes> finprod G g {}\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<And>a.\n                    a \\<in> F \\<Longrightarrow> f a \\<otimes> g a = h a;\n         f \\<in> F \\<rightarrow> carrier G;\n         g \\<in> F \\<rightarrow> carrier G;\n         h \\<in> F \\<rightarrow> carrier G\\<rbrakk>\n        \\<Longrightarrow> finprod G h F =\n                          finprod G f F \\<otimes> finprod G g F;\n        \\<And>a.\n           a \\<in> insert x F \\<Longrightarrow> f a \\<otimes> g a = h a;\n        f \\<in> insert x F \\<rightarrow> carrier G;\n        g \\<in> insert x F \\<rightarrow> carrier G;\n        h \\<in> insert x F \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G h (insert x F) =\n                         finprod G f (insert x F) \\<otimes>\n                         finprod G g (insert x F)", "then"], ["proof (chain)\npicking this:\n  ?a2 \\<in> {} \\<Longrightarrow> f ?a2 \\<otimes> g ?a2 = h ?a2\n  f \\<in> {} \\<rightarrow> carrier G\n  g \\<in> {} \\<rightarrow> carrier G\n  h \\<in> {} \\<rightarrow> carrier G", "show ?case"], ["proof (prove)\nusing this:\n  ?a2 \\<in> {} \\<Longrightarrow> f ?a2 \\<otimes> g ?a2 = h ?a2\n  f \\<in> {} \\<rightarrow> carrier G\n  g \\<in> {} \\<rightarrow> carrier G\n  h \\<in> {} \\<rightarrow> carrier G\n\ngoal (1 subgoal):\n 1. finprod G h {} = finprod G f {} \\<otimes> finprod G g {}", "by simp"], ["proof (state)\nthis:\n  finprod G h {} = finprod G f {} \\<otimes> finprod G g {}\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<And>a.\n                    a \\<in> F \\<Longrightarrow> f a \\<otimes> g a = h a;\n         f \\<in> F \\<rightarrow> carrier G;\n         g \\<in> F \\<rightarrow> carrier G;\n         h \\<in> F \\<rightarrow> carrier G\\<rbrakk>\n        \\<Longrightarrow> finprod G h F =\n                          finprod G f F \\<otimes> finprod G g F;\n        \\<And>a.\n           a \\<in> insert x F \\<Longrightarrow> f a \\<otimes> g a = h a;\n        f \\<in> insert x F \\<rightarrow> carrier G;\n        g \\<in> insert x F \\<rightarrow> carrier G;\n        h \\<in> insert x F \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G h (insert x F) =\n                         finprod G f (insert x F) \\<otimes>\n                         finprod G g (insert x F)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<And>a.\n                    a \\<in> F \\<Longrightarrow> f a \\<otimes> g a = h a;\n         f \\<in> F \\<rightarrow> carrier G;\n         g \\<in> F \\<rightarrow> carrier G;\n         h \\<in> F \\<rightarrow> carrier G\\<rbrakk>\n        \\<Longrightarrow> finprod G h F =\n                          finprod G f F \\<otimes> finprod G g F;\n        \\<And>a.\n           a \\<in> insert x F \\<Longrightarrow> f a \\<otimes> g a = h a;\n        f \\<in> insert x F \\<rightarrow> carrier G;\n        g \\<in> insert x F \\<rightarrow> carrier G;\n        h \\<in> insert x F \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G h (insert x F) =\n                         finprod G f (insert x F) \\<otimes>\n                         finprod G g (insert x F)", "case i: (insert x F)"], ["proof (state)\nthis:\n  finite F\n  x \\<notin> F\n  \\<lbrakk>\\<And>a. a \\<in> F \\<Longrightarrow> f a \\<otimes> g a = h a;\n   f \\<in> F \\<rightarrow> carrier G; g \\<in> F \\<rightarrow> carrier G;\n   h \\<in> F \\<rightarrow> carrier G\\<rbrakk>\n  \\<Longrightarrow> finprod G h F = finprod G f F \\<otimes> finprod G g F\n  ?a2 \\<in> insert x F \\<Longrightarrow> f ?a2 \\<otimes> g ?a2 = h ?a2\n  f \\<in> insert x F \\<rightarrow> carrier G\n  g \\<in> insert x F \\<rightarrow> carrier G\n  h \\<in> insert x F \\<rightarrow> carrier G\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<And>a.\n                    a \\<in> F \\<Longrightarrow> f a \\<otimes> g a = h a;\n         f \\<in> F \\<rightarrow> carrier G;\n         g \\<in> F \\<rightarrow> carrier G;\n         h \\<in> F \\<rightarrow> carrier G\\<rbrakk>\n        \\<Longrightarrow> finprod G h F =\n                          finprod G f F \\<otimes> finprod G g F;\n        \\<And>a.\n           a \\<in> insert x F \\<Longrightarrow> f a \\<otimes> g a = h a;\n        f \\<in> insert x F \\<rightarrow> carrier G;\n        g \\<in> insert x F \\<rightarrow> carrier G;\n        h \\<in> insert x F \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G h (insert x F) =\n                         finprod G f (insert x F) \\<otimes>\n                         finprod G g (insert x F)", "then"], ["proof (chain)\npicking this:\n  finite F\n  x \\<notin> F\n  \\<lbrakk>\\<And>a. a \\<in> F \\<Longrightarrow> f a \\<otimes> g a = h a;\n   f \\<in> F \\<rightarrow> carrier G; g \\<in> F \\<rightarrow> carrier G;\n   h \\<in> F \\<rightarrow> carrier G\\<rbrakk>\n  \\<Longrightarrow> finprod G h F = finprod G f F \\<otimes> finprod G g F\n  ?a2 \\<in> insert x F \\<Longrightarrow> f ?a2 \\<otimes> g ?a2 = h ?a2\n  f \\<in> insert x F \\<rightarrow> carrier G\n  g \\<in> insert x F \\<rightarrow> carrier G\n  h \\<in> insert x F \\<rightarrow> carrier G", "have iH: \"finprod G h F = finprod G f F \\<otimes> finprod G g F\""], ["proof (prove)\nusing this:\n  finite F\n  x \\<notin> F\n  \\<lbrakk>\\<And>a. a \\<in> F \\<Longrightarrow> f a \\<otimes> g a = h a;\n   f \\<in> F \\<rightarrow> carrier G; g \\<in> F \\<rightarrow> carrier G;\n   h \\<in> F \\<rightarrow> carrier G\\<rbrakk>\n  \\<Longrightarrow> finprod G h F = finprod G f F \\<otimes> finprod G g F\n  ?a2 \\<in> insert x F \\<Longrightarrow> f ?a2 \\<otimes> g ?a2 = h ?a2\n  f \\<in> insert x F \\<rightarrow> carrier G\n  g \\<in> insert x F \\<rightarrow> carrier G\n  h \\<in> insert x F \\<rightarrow> carrier G\n\ngoal (1 subgoal):\n 1. finprod G h F = finprod G f F \\<otimes> finprod G g F", "by fast"], ["proof (state)\nthis:\n  finprod G h F = finprod G f F \\<otimes> finprod G g F\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<And>a.\n                    a \\<in> F \\<Longrightarrow> f a \\<otimes> g a = h a;\n         f \\<in> F \\<rightarrow> carrier G;\n         g \\<in> F \\<rightarrow> carrier G;\n         h \\<in> F \\<rightarrow> carrier G\\<rbrakk>\n        \\<Longrightarrow> finprod G h F =\n                          finprod G f F \\<otimes> finprod G g F;\n        \\<And>a.\n           a \\<in> insert x F \\<Longrightarrow> f a \\<otimes> g a = h a;\n        f \\<in> insert x F \\<rightarrow> carrier G;\n        g \\<in> insert x F \\<rightarrow> carrier G;\n        h \\<in> insert x F \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G h (insert x F) =\n                         finprod G f (insert x F) \\<otimes>\n                         finprod G g (insert x F)", "have f: \"finprod G f (insert x F) = f x \\<otimes> finprod G f F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G f (insert x F) = f x \\<otimes> finprod G f F", "by (intro finprod_insert[OF i(1, 2), of f]; use i(5) in simp)"], ["proof (state)\nthis:\n  finprod G f (insert x F) = f x \\<otimes> finprod G f F\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<And>a.\n                    a \\<in> F \\<Longrightarrow> f a \\<otimes> g a = h a;\n         f \\<in> F \\<rightarrow> carrier G;\n         g \\<in> F \\<rightarrow> carrier G;\n         h \\<in> F \\<rightarrow> carrier G\\<rbrakk>\n        \\<Longrightarrow> finprod G h F =\n                          finprod G f F \\<otimes> finprod G g F;\n        \\<And>a.\n           a \\<in> insert x F \\<Longrightarrow> f a \\<otimes> g a = h a;\n        f \\<in> insert x F \\<rightarrow> carrier G;\n        g \\<in> insert x F \\<rightarrow> carrier G;\n        h \\<in> insert x F \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G h (insert x F) =\n                         finprod G f (insert x F) \\<otimes>\n                         finprod G g (insert x F)", "have g: \"finprod G g (insert x F) = g x \\<otimes> finprod G g F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G g (insert x F) = g x \\<otimes> finprod G g F", "by (intro finprod_insert[OF i(1, 2), of g]; use i(6) in simp)"], ["proof (state)\nthis:\n  finprod G g (insert x F) = g x \\<otimes> finprod G g F\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<And>a.\n                    a \\<in> F \\<Longrightarrow> f a \\<otimes> g a = h a;\n         f \\<in> F \\<rightarrow> carrier G;\n         g \\<in> F \\<rightarrow> carrier G;\n         h \\<in> F \\<rightarrow> carrier G\\<rbrakk>\n        \\<Longrightarrow> finprod G h F =\n                          finprod G f F \\<otimes> finprod G g F;\n        \\<And>a.\n           a \\<in> insert x F \\<Longrightarrow> f a \\<otimes> g a = h a;\n        f \\<in> insert x F \\<rightarrow> carrier G;\n        g \\<in> insert x F \\<rightarrow> carrier G;\n        h \\<in> insert x F \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G h (insert x F) =\n                         finprod G f (insert x F) \\<otimes>\n                         finprod G g (insert x F)", "have h: \"finprod G h (insert x F) = h x \\<otimes> finprod G h F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G h (insert x F) = h x \\<otimes> finprod G h F", "by (intro finprod_insert[OF i(1, 2), of h]; use i(7) in simp)"], ["proof (state)\nthis:\n  finprod G h (insert x F) = h x \\<otimes> finprod G h F\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<And>a.\n                    a \\<in> F \\<Longrightarrow> f a \\<otimes> g a = h a;\n         f \\<in> F \\<rightarrow> carrier G;\n         g \\<in> F \\<rightarrow> carrier G;\n         h \\<in> F \\<rightarrow> carrier G\\<rbrakk>\n        \\<Longrightarrow> finprod G h F =\n                          finprod G f F \\<otimes> finprod G g F;\n        \\<And>a.\n           a \\<in> insert x F \\<Longrightarrow> f a \\<otimes> g a = h a;\n        f \\<in> insert x F \\<rightarrow> carrier G;\n        g \\<in> insert x F \\<rightarrow> carrier G;\n        h \\<in> insert x F \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G h (insert x F) =\n                         finprod G f (insert x F) \\<otimes>\n                         finprod G g (insert x F)", "also"], ["proof (state)\nthis:\n  finprod G h (insert x F) = h x \\<otimes> finprod G h F\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<And>a.\n                    a \\<in> F \\<Longrightarrow> f a \\<otimes> g a = h a;\n         f \\<in> F \\<rightarrow> carrier G;\n         g \\<in> F \\<rightarrow> carrier G;\n         h \\<in> F \\<rightarrow> carrier G\\<rbrakk>\n        \\<Longrightarrow> finprod G h F =\n                          finprod G f F \\<otimes> finprod G g F;\n        \\<And>a.\n           a \\<in> insert x F \\<Longrightarrow> f a \\<otimes> g a = h a;\n        f \\<in> insert x F \\<rightarrow> carrier G;\n        g \\<in> insert x F \\<rightarrow> carrier G;\n        h \\<in> insert x F \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G h (insert x F) =\n                         finprod G f (insert x F) \\<otimes>\n                         finprod G g (insert x F)", "have \"\\<dots> = h x \\<otimes> (finprod G f F \\<otimes> finprod G g F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h x \\<otimes> finprod G h F =\n    h x \\<otimes> (finprod G f F \\<otimes> finprod G g F)", "using iH"], ["proof (prove)\nusing this:\n  finprod G h F = finprod G f F \\<otimes> finprod G g F\n\ngoal (1 subgoal):\n 1. h x \\<otimes> finprod G h F =\n    h x \\<otimes> (finprod G f F \\<otimes> finprod G g F)", "by argo"], ["proof (state)\nthis:\n  h x \\<otimes> finprod G h F =\n  h x \\<otimes> (finprod G f F \\<otimes> finprod G g F)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<And>a.\n                    a \\<in> F \\<Longrightarrow> f a \\<otimes> g a = h a;\n         f \\<in> F \\<rightarrow> carrier G;\n         g \\<in> F \\<rightarrow> carrier G;\n         h \\<in> F \\<rightarrow> carrier G\\<rbrakk>\n        \\<Longrightarrow> finprod G h F =\n                          finprod G f F \\<otimes> finprod G g F;\n        \\<And>a.\n           a \\<in> insert x F \\<Longrightarrow> f a \\<otimes> g a = h a;\n        f \\<in> insert x F \\<rightarrow> carrier G;\n        g \\<in> insert x F \\<rightarrow> carrier G;\n        h \\<in> insert x F \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G h (insert x F) =\n                         finprod G f (insert x F) \\<otimes>\n                         finprod G g (insert x F)", "also"], ["proof (state)\nthis:\n  h x \\<otimes> finprod G h F =\n  h x \\<otimes> (finprod G f F \\<otimes> finprod G g F)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<And>a.\n                    a \\<in> F \\<Longrightarrow> f a \\<otimes> g a = h a;\n         f \\<in> F \\<rightarrow> carrier G;\n         g \\<in> F \\<rightarrow> carrier G;\n         h \\<in> F \\<rightarrow> carrier G\\<rbrakk>\n        \\<Longrightarrow> finprod G h F =\n                          finprod G f F \\<otimes> finprod G g F;\n        \\<And>a.\n           a \\<in> insert x F \\<Longrightarrow> f a \\<otimes> g a = h a;\n        f \\<in> insert x F \\<rightarrow> carrier G;\n        g \\<in> insert x F \\<rightarrow> carrier G;\n        h \\<in> insert x F \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G h (insert x F) =\n                         finprod G f (insert x F) \\<otimes>\n                         finprod G g (insert x F)", "have \"\\<dots> = f x \\<otimes> g x \\<otimes> (finprod G f F \\<otimes> finprod G g F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h x \\<otimes> (finprod G f F \\<otimes> finprod G g F) =\n    f x \\<otimes> g x \\<otimes> (finprod G f F \\<otimes> finprod G g F)", "using i(4)"], ["proof (prove)\nusing this:\n  ?a2 \\<in> insert x F \\<Longrightarrow> f ?a2 \\<otimes> g ?a2 = h ?a2\n\ngoal (1 subgoal):\n 1. h x \\<otimes> (finprod G f F \\<otimes> finprod G g F) =\n    f x \\<otimes> g x \\<otimes> (finprod G f F \\<otimes> finprod G g F)", "by simp"], ["proof (state)\nthis:\n  h x \\<otimes> (finprod G f F \\<otimes> finprod G g F) =\n  f x \\<otimes> g x \\<otimes> (finprod G f F \\<otimes> finprod G g F)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<And>a.\n                    a \\<in> F \\<Longrightarrow> f a \\<otimes> g a = h a;\n         f \\<in> F \\<rightarrow> carrier G;\n         g \\<in> F \\<rightarrow> carrier G;\n         h \\<in> F \\<rightarrow> carrier G\\<rbrakk>\n        \\<Longrightarrow> finprod G h F =\n                          finprod G f F \\<otimes> finprod G g F;\n        \\<And>a.\n           a \\<in> insert x F \\<Longrightarrow> f a \\<otimes> g a = h a;\n        f \\<in> insert x F \\<rightarrow> carrier G;\n        g \\<in> insert x F \\<rightarrow> carrier G;\n        h \\<in> insert x F \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G h (insert x F) =\n                         finprod G f (insert x F) \\<otimes>\n                         finprod G g (insert x F)", "also"], ["proof (state)\nthis:\n  h x \\<otimes> (finprod G f F \\<otimes> finprod G g F) =\n  f x \\<otimes> g x \\<otimes> (finprod G f F \\<otimes> finprod G g F)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<And>a.\n                    a \\<in> F \\<Longrightarrow> f a \\<otimes> g a = h a;\n         f \\<in> F \\<rightarrow> carrier G;\n         g \\<in> F \\<rightarrow> carrier G;\n         h \\<in> F \\<rightarrow> carrier G\\<rbrakk>\n        \\<Longrightarrow> finprod G h F =\n                          finprod G f F \\<otimes> finprod G g F;\n        \\<And>a.\n           a \\<in> insert x F \\<Longrightarrow> f a \\<otimes> g a = h a;\n        f \\<in> insert x F \\<rightarrow> carrier G;\n        g \\<in> insert x F \\<rightarrow> carrier G;\n        h \\<in> insert x F \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G h (insert x F) =\n                         finprod G f (insert x F) \\<otimes>\n                         finprod G g (insert x F)", "have \"\\<dots> = f x \\<otimes> finprod G f F \\<otimes> (g x \\<otimes> finprod G g F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f x \\<otimes> g x \\<otimes> (finprod G f F \\<otimes> finprod G g F) =\n    f x \\<otimes> finprod G f F \\<otimes> (g x \\<otimes> finprod G g F)", "using m_comm m_assoc i(5-7)"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x \\<in> carrier G; ?y \\<in> carrier G\\<rbrakk>\n  \\<Longrightarrow> ?x \\<otimes> ?y = ?y \\<otimes> ?x\n  \\<lbrakk>?x \\<in> carrier G; ?y \\<in> carrier G;\n   ?z \\<in> carrier G\\<rbrakk>\n  \\<Longrightarrow> ?x \\<otimes> ?y \\<otimes> ?z =\n                    ?x \\<otimes> (?y \\<otimes> ?z)\n  f \\<in> insert x F \\<rightarrow> carrier G\n  g \\<in> insert x F \\<rightarrow> carrier G\n  h \\<in> insert x F \\<rightarrow> carrier G\n\ngoal (1 subgoal):\n 1. f x \\<otimes> g x \\<otimes> (finprod G f F \\<otimes> finprod G g F) =\n    f x \\<otimes> finprod G f F \\<otimes> (g x \\<otimes> finprod G g F)", "by simp"], ["proof (state)\nthis:\n  f x \\<otimes> g x \\<otimes> (finprod G f F \\<otimes> finprod G g F) =\n  f x \\<otimes> finprod G f F \\<otimes> (g x \\<otimes> finprod G g F)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<And>a.\n                    a \\<in> F \\<Longrightarrow> f a \\<otimes> g a = h a;\n         f \\<in> F \\<rightarrow> carrier G;\n         g \\<in> F \\<rightarrow> carrier G;\n         h \\<in> F \\<rightarrow> carrier G\\<rbrakk>\n        \\<Longrightarrow> finprod G h F =\n                          finprod G f F \\<otimes> finprod G g F;\n        \\<And>a.\n           a \\<in> insert x F \\<Longrightarrow> f a \\<otimes> g a = h a;\n        f \\<in> insert x F \\<rightarrow> carrier G;\n        g \\<in> insert x F \\<rightarrow> carrier G;\n        h \\<in> insert x F \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G h (insert x F) =\n                         finprod G f (insert x F) \\<otimes>\n                         finprod G g (insert x F)", "also"], ["proof (state)\nthis:\n  f x \\<otimes> g x \\<otimes> (finprod G f F \\<otimes> finprod G g F) =\n  f x \\<otimes> finprod G f F \\<otimes> (g x \\<otimes> finprod G g F)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<And>a.\n                    a \\<in> F \\<Longrightarrow> f a \\<otimes> g a = h a;\n         f \\<in> F \\<rightarrow> carrier G;\n         g \\<in> F \\<rightarrow> carrier G;\n         h \\<in> F \\<rightarrow> carrier G\\<rbrakk>\n        \\<Longrightarrow> finprod G h F =\n                          finprod G f F \\<otimes> finprod G g F;\n        \\<And>a.\n           a \\<in> insert x F \\<Longrightarrow> f a \\<otimes> g a = h a;\n        f \\<in> insert x F \\<rightarrow> carrier G;\n        g \\<in> insert x F \\<rightarrow> carrier G;\n        h \\<in> insert x F \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G h (insert x F) =\n                         finprod G f (insert x F) \\<otimes>\n                         finprod G g (insert x F)", "have \"\\<dots> = finprod G f (insert x F) \\<otimes> finprod G g (insert x F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f x \\<otimes> finprod G f F \\<otimes> (g x \\<otimes> finprod G g F) =\n    finprod G f (insert x F) \\<otimes> finprod G g (insert x F)", "using f g"], ["proof (prove)\nusing this:\n  finprod G f (insert x F) = f x \\<otimes> finprod G f F\n  finprod G g (insert x F) = g x \\<otimes> finprod G g F\n\ngoal (1 subgoal):\n 1. f x \\<otimes> finprod G f F \\<otimes> (g x \\<otimes> finprod G g F) =\n    finprod G f (insert x F) \\<otimes> finprod G g (insert x F)", "by argo"], ["proof (state)\nthis:\n  f x \\<otimes> finprod G f F \\<otimes> (g x \\<otimes> finprod G g F) =\n  finprod G f (insert x F) \\<otimes> finprod G g (insert x F)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<And>a.\n                    a \\<in> F \\<Longrightarrow> f a \\<otimes> g a = h a;\n         f \\<in> F \\<rightarrow> carrier G;\n         g \\<in> F \\<rightarrow> carrier G;\n         h \\<in> F \\<rightarrow> carrier G\\<rbrakk>\n        \\<Longrightarrow> finprod G h F =\n                          finprod G f F \\<otimes> finprod G g F;\n        \\<And>a.\n           a \\<in> insert x F \\<Longrightarrow> f a \\<otimes> g a = h a;\n        f \\<in> insert x F \\<rightarrow> carrier G;\n        g \\<in> insert x F \\<rightarrow> carrier G;\n        h \\<in> insert x F \\<rightarrow> carrier G\\<rbrakk>\n       \\<Longrightarrow> finprod G h (insert x F) =\n                         finprod G f (insert x F) \\<otimes>\n                         finprod G g (insert x F)", "finally"], ["proof (chain)\npicking this:\n  finprod G h (insert x F) =\n  finprod G f (insert x F) \\<otimes> finprod G g (insert x F)", "show ?case"], ["proof (prove)\nusing this:\n  finprod G h (insert x F) =\n  finprod G f (insert x F) \\<otimes> finprod G g (insert x F)\n\ngoal (1 subgoal):\n 1. finprod G h (insert x F) =\n    finprod G f (insert x F) \\<otimes> finprod G g (insert x F)", "."], ["proof (state)\nthis:\n  finprod G h (insert x F) =\n  finprod G f (insert x F) \\<otimes> finprod G g (insert x F)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in comm_group) finprod_comp:\n  assumes \"inj_on g A\" \"(f \\<circ> g) ` A \\<subseteq> carrier G\"\n  shows \"finprod G f (g ` A) = finprod G (f \\<circ> g) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G f (g ` A) = finprod G (f \\<circ> g) A", "using finprod_reindex[OF _ assms(1), of f]"], ["proof (prove)\nusing this:\n  f \\<in> g ` A \\<rightarrow> carrier G \\<Longrightarrow>\n  finprod G f (g ` A) = (\\<Otimes>x\\<in>A. f (g x))\n\ngoal (1 subgoal):\n 1. finprod G f (g ` A) = finprod G (f \\<circ> g) A", "using assms(2)"], ["proof (prove)\nusing this:\n  f \\<in> g ` A \\<rightarrow> carrier G \\<Longrightarrow>\n  finprod G f (g ` A) = (\\<Otimes>x\\<in>A. f (g x))\n  (f \\<circ> g) ` A \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. finprod G f (g ` A) = finprod G (f \\<circ> g) A", "unfolding comp_def"], ["proof (prove)\nusing this:\n  f \\<in> g ` A \\<rightarrow> carrier G \\<Longrightarrow>\n  finprod G f (g ` A) = (\\<Otimes>x\\<in>A. f (g x))\n  (\\<lambda>x. f (g x)) ` A \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. finprod G f (g ` A) = (\\<Otimes>x\\<in>A. f (g x))", "by blast"], ["", "text \\<open>The subgroup generated by a set of generators (in an abelian group) is exactly the set of\nelements that can be written as a finite product using only powers of these elements.\\<close>"], ["", "lemma (in comm_group) generate_eq_finprod_PiE_image:\n  assumes \"finite gs\" \"gs \\<subseteq> carrier G\"\n  shows \"generate G gs = (\\<lambda>x. finprod G x gs) ` Pi\\<^sub>E gs (\\<lambda>a. generate G {a})\" (is \"?g = ?fp\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. generate G gs =\n    (\\<lambda>x. finprod G x gs) ` (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. generate G gs\n    \\<subseteq> (\\<lambda>x. finprod G x gs) `\n                (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n 2. (\\<lambda>x. finprod G x gs) ` (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n    \\<subseteq> generate G gs", "show \"?g \\<subseteq> ?fp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. generate G gs\n    \\<subseteq> (\\<lambda>x. finprod G x gs) `\n                (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> generate G gs \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> generate G gs \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "assume x: \"x \\<in> ?g\""], ["proof (state)\nthis:\n  x \\<in> generate G gs\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> generate G gs \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "thus \"x \\<in> ?fp\""], ["proof (prove)\nusing this:\n  x \\<in> generate G gs\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<lambda>x. finprod G x gs) `\n            (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "proof (induction rule: generate.induct)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<one>\n    \\<in> (\\<lambda>x. finprod G x gs) `\n          (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n 2. \\<And>h.\n       h \\<in> gs \\<Longrightarrow>\n       h \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n 3. \\<And>h.\n       h \\<in> gs \\<Longrightarrow>\n       inv h\n       \\<in> (\\<lambda>x. finprod G x gs) `\n             (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n 4. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G gs;\n        h1 \\<in> (\\<lambda>x. finprod G x gs) `\n                 (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a});\n        h2 \\<in> generate G gs;\n        h2 \\<in> (\\<lambda>x. finprod G x gs) `\n                 (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x gs) `\n                               (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "case one"], ["proof (state)\nthis:\n  \n\ngoal (4 subgoals):\n 1. \\<one>\n    \\<in> (\\<lambda>x. finprod G x gs) `\n          (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n 2. \\<And>h.\n       h \\<in> gs \\<Longrightarrow>\n       h \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n 3. \\<And>h.\n       h \\<in> gs \\<Longrightarrow>\n       inv h\n       \\<in> (\\<lambda>x. finprod G x gs) `\n             (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n 4. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G gs;\n        h1 \\<in> (\\<lambda>x. finprod G x gs) `\n                 (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a});\n        h2 \\<in> generate G gs;\n        h2 \\<in> (\\<lambda>x. finprod G x gs) `\n                 (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x gs) `\n                               (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<one>\n    \\<in> (\\<lambda>x. finprod G x gs) `\n          (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<one> = finprod G ?x gs\n 2. ?x \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "let ?r = \"restrict (\\<lambda>_. \\<one>) gs\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<one> = finprod G ?x gs\n 2. ?x \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "show \"?r \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>_\\<in>gs. \\<one>)\n    \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "using generate.one"], ["proof (prove)\nusing this:\n  \\<one>\\<^bsub>?G\\<^esub> \\<in> generate ?G ?H\n\ngoal (1 subgoal):\n 1. (\\<lambda>_\\<in>gs. \\<one>)\n    \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>_\\<in>gs. \\<one>) \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n\ngoal (1 subgoal):\n 1. \\<one> = finprod G (\\<lambda>_\\<in>gs. \\<one>) gs", "show \"\\<one> = finprod G ?r gs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<one> = finprod G (\\<lambda>_\\<in>gs. \\<one>) gs", "by(intro finprod_one_eqI[symmetric], simp)"], ["proof (state)\nthis:\n  \\<one> = finprod G (\\<lambda>_\\<in>gs. \\<one>) gs\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<one>\n  \\<in> (\\<lambda>x. finprod G x gs) `\n        (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n\ngoal (3 subgoals):\n 1. \\<And>h.\n       h \\<in> gs \\<Longrightarrow>\n       h \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n 2. \\<And>h.\n       h \\<in> gs \\<Longrightarrow>\n       inv h\n       \\<in> (\\<lambda>x. finprod G x gs) `\n             (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n 3. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G gs;\n        h1 \\<in> (\\<lambda>x. finprod G x gs) `\n                 (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a});\n        h2 \\<in> generate G gs;\n        h2 \\<in> (\\<lambda>x. finprod G x gs) `\n                 (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x gs) `\n                               (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>h.\n       h \\<in> gs \\<Longrightarrow>\n       h \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n 2. \\<And>h.\n       h \\<in> gs \\<Longrightarrow>\n       inv h\n       \\<in> (\\<lambda>x. finprod G x gs) `\n             (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n 3. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G gs;\n        h1 \\<in> (\\<lambda>x. finprod G x gs) `\n                 (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a});\n        h2 \\<in> generate G gs;\n        h2 \\<in> (\\<lambda>x. finprod G x gs) `\n                 (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x gs) `\n                               (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "case g: (incl g)"], ["proof (state)\nthis:\n  g \\<in> gs\n\ngoal (3 subgoals):\n 1. \\<And>h.\n       h \\<in> gs \\<Longrightarrow>\n       h \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n 2. \\<And>h.\n       h \\<in> gs \\<Longrightarrow>\n       inv h\n       \\<in> (\\<lambda>x. finprod G x gs) `\n             (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n 3. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G gs;\n        h1 \\<in> (\\<lambda>x. finprod G x gs) `\n                 (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a});\n        h2 \\<in> generate G gs;\n        h2 \\<in> (\\<lambda>x. finprod G x gs) `\n                 (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x gs) `\n                               (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<in> (\\<lambda>x. finprod G x gs) `\n            (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. g = finprod G ?x gs\n 2. ?x \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "let ?r = \"restrict ((\\<lambda>_. \\<one>)(g := g)) gs\""], ["proof (state)\ngoal (2 subgoals):\n 1. g = finprod G ?x gs\n 2. ?x \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "show \"?r \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict ((\\<lambda>_. \\<one>)(g := g)) gs\n    \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "using generate.one generate.incl[of g \"{g}\" G]"], ["proof (prove)\nusing this:\n  \\<one>\\<^bsub>?G\\<^esub> \\<in> generate ?G ?H\n  g \\<in> {g} \\<Longrightarrow> g \\<in> generate G {g}\n\ngoal (1 subgoal):\n 1. restrict ((\\<lambda>_. \\<one>)(g := g)) gs\n    \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "by fastforce"], ["proof (state)\nthis:\n  restrict ((\\<lambda>_. \\<one>)(g := g)) gs\n  \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n\ngoal (1 subgoal):\n 1. g = finprod G (restrict ((\\<lambda>_. \\<one>)(g := g)) gs) gs", "show \"g = finprod G ?r gs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g = finprod G (restrict ((\\<lambda>_. \\<one>)(g := g)) gs) gs", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. g = finprod G (restrict ((\\<lambda>_. \\<one>)(g := g)) gs) gs", "have \"finprod G ?r gs = ?r g \\<otimes> finprod G ?r (gs - {g})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G (restrict ((\\<lambda>_. \\<one>)(g := g)) gs) gs =\n    restrict ((\\<lambda>_. \\<one>)(g := g)) gs g \\<otimes>\n    finprod G (restrict ((\\<lambda>_. \\<one>)(g := g)) gs) (gs - {g})", "by (intro finprod_minus, use assms g in auto)"], ["proof (state)\nthis:\n  finprod G (restrict ((\\<lambda>_. \\<one>)(g := g)) gs) gs =\n  restrict ((\\<lambda>_. \\<one>)(g := g)) gs g \\<otimes>\n  finprod G (restrict ((\\<lambda>_. \\<one>)(g := g)) gs) (gs - {g})\n\ngoal (1 subgoal):\n 1. g = finprod G (restrict ((\\<lambda>_. \\<one>)(g := g)) gs) gs", "moreover"], ["proof (state)\nthis:\n  finprod G (restrict ((\\<lambda>_. \\<one>)(g := g)) gs) gs =\n  restrict ((\\<lambda>_. \\<one>)(g := g)) gs g \\<otimes>\n  finprod G (restrict ((\\<lambda>_. \\<one>)(g := g)) gs) (gs - {g})\n\ngoal (1 subgoal):\n 1. g = finprod G (restrict ((\\<lambda>_. \\<one>)(g := g)) gs) gs", "have \"?r g = g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict ((\\<lambda>_. \\<one>)(g := g)) gs g = g", "using g"], ["proof (prove)\nusing this:\n  g \\<in> gs\n\ngoal (1 subgoal):\n 1. restrict ((\\<lambda>_. \\<one>)(g := g)) gs g = g", "by simp"], ["proof (state)\nthis:\n  restrict ((\\<lambda>_. \\<one>)(g := g)) gs g = g\n\ngoal (1 subgoal):\n 1. g = finprod G (restrict ((\\<lambda>_. \\<one>)(g := g)) gs) gs", "moreover"], ["proof (state)\nthis:\n  restrict ((\\<lambda>_. \\<one>)(g := g)) gs g = g\n\ngoal (1 subgoal):\n 1. g = finprod G (restrict ((\\<lambda>_. \\<one>)(g := g)) gs) gs", "have \"finprod G ?r (gs - {g}) = \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G (restrict ((\\<lambda>_. \\<one>)(g := g)) gs) (gs - {g}) =\n    \\<one>", "by(rule finprod_one_eqI; use g in simp)"], ["proof (state)\nthis:\n  finprod G (restrict ((\\<lambda>_. \\<one>)(g := g)) gs) (gs - {g}) = \\<one>\n\ngoal (1 subgoal):\n 1. g = finprod G (restrict ((\\<lambda>_. \\<one>)(g := g)) gs) gs", "ultimately"], ["proof (chain)\npicking this:\n  finprod G (restrict ((\\<lambda>_. \\<one>)(g := g)) gs) gs =\n  restrict ((\\<lambda>_. \\<one>)(g := g)) gs g \\<otimes>\n  finprod G (restrict ((\\<lambda>_. \\<one>)(g := g)) gs) (gs - {g})\n  restrict ((\\<lambda>_. \\<one>)(g := g)) gs g = g\n  finprod G (restrict ((\\<lambda>_. \\<one>)(g := g)) gs) (gs - {g}) = \\<one>", "show ?thesis"], ["proof (prove)\nusing this:\n  finprod G (restrict ((\\<lambda>_. \\<one>)(g := g)) gs) gs =\n  restrict ((\\<lambda>_. \\<one>)(g := g)) gs g \\<otimes>\n  finprod G (restrict ((\\<lambda>_. \\<one>)(g := g)) gs) (gs - {g})\n  restrict ((\\<lambda>_. \\<one>)(g := g)) gs g = g\n  finprod G (restrict ((\\<lambda>_. \\<one>)(g := g)) gs) (gs - {g}) = \\<one>\n\ngoal (1 subgoal):\n 1. g = finprod G (restrict ((\\<lambda>_. \\<one>)(g := g)) gs) gs", "using assms g"], ["proof (prove)\nusing this:\n  finprod G (restrict ((\\<lambda>_. \\<one>)(g := g)) gs) gs =\n  restrict ((\\<lambda>_. \\<one>)(g := g)) gs g \\<otimes>\n  finprod G (restrict ((\\<lambda>_. \\<one>)(g := g)) gs) (gs - {g})\n  restrict ((\\<lambda>_. \\<one>)(g := g)) gs g = g\n  finprod G (restrict ((\\<lambda>_. \\<one>)(g := g)) gs) (gs - {g}) = \\<one>\n  finite gs\n  gs \\<subseteq> carrier G\n  g \\<in> gs\n\ngoal (1 subgoal):\n 1. g = finprod G (restrict ((\\<lambda>_. \\<one>)(g := g)) gs) gs", "by auto"], ["proof (state)\nthis:\n  g = finprod G (restrict ((\\<lambda>_. \\<one>)(g := g)) gs) gs\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  g = finprod G (restrict ((\\<lambda>_. \\<one>)(g := g)) gs) gs\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  g \\<in> (\\<lambda>x. finprod G x gs) `\n          (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n\ngoal (2 subgoals):\n 1. \\<And>h.\n       h \\<in> gs \\<Longrightarrow>\n       inv h\n       \\<in> (\\<lambda>x. finprod G x gs) `\n             (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n 2. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G gs;\n        h1 \\<in> (\\<lambda>x. finprod G x gs) `\n                 (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a});\n        h2 \\<in> generate G gs;\n        h2 \\<in> (\\<lambda>x. finprod G x gs) `\n                 (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x gs) `\n                               (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>h.\n       h \\<in> gs \\<Longrightarrow>\n       inv h\n       \\<in> (\\<lambda>x. finprod G x gs) `\n             (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n 2. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G gs;\n        h1 \\<in> (\\<lambda>x. finprod G x gs) `\n                 (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a});\n        h2 \\<in> generate G gs;\n        h2 \\<in> (\\<lambda>x. finprod G x gs) `\n                 (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x gs) `\n                               (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "case g: (inv g)"], ["proof (state)\nthis:\n  g \\<in> gs\n\ngoal (2 subgoals):\n 1. \\<And>h.\n       h \\<in> gs \\<Longrightarrow>\n       inv h\n       \\<in> (\\<lambda>x. finprod G x gs) `\n             (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n 2. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G gs;\n        h1 \\<in> (\\<lambda>x. finprod G x gs) `\n                 (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a});\n        h2 \\<in> generate G gs;\n        h2 \\<in> (\\<lambda>x. finprod G x gs) `\n                 (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x gs) `\n                               (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. inv g\n    \\<in> (\\<lambda>x. finprod G x gs) `\n          (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. inv g = finprod G ?x gs\n 2. ?x \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "let ?r = \"restrict ((\\<lambda>_. \\<one>)(g := inv g)) gs\""], ["proof (state)\ngoal (2 subgoals):\n 1. inv g = finprod G ?x gs\n 2. ?x \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "show \"?r \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict ((\\<lambda>_. \\<one>)(g := inv g)) gs\n    \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "using generate.one generate.inv[of g \"{g}\" G]"], ["proof (prove)\nusing this:\n  \\<one>\\<^bsub>?G\\<^esub> \\<in> generate ?G ?H\n  g \\<in> {g} \\<Longrightarrow> inv g \\<in> generate G {g}\n\ngoal (1 subgoal):\n 1. restrict ((\\<lambda>_. \\<one>)(g := inv g)) gs\n    \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "by fastforce"], ["proof (state)\nthis:\n  restrict ((\\<lambda>_. \\<one>)(g := inv g)) gs\n  \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n\ngoal (1 subgoal):\n 1. inv g = finprod G (restrict ((\\<lambda>_. \\<one>)(g := inv g)) gs) gs", "show \"inv g = finprod G ?r gs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv g = finprod G (restrict ((\\<lambda>_. \\<one>)(g := inv g)) gs) gs", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. inv g = finprod G (restrict ((\\<lambda>_. \\<one>)(g := inv g)) gs) gs", "have \"finprod G ?r gs = ?r g \\<otimes> finprod G ?r (gs - {g})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G (restrict ((\\<lambda>_. \\<one>)(g := inv g)) gs) gs =\n    restrict ((\\<lambda>_. \\<one>)(g := inv g)) gs g \\<otimes>\n    finprod G (restrict ((\\<lambda>_. \\<one>)(g := inv g)) gs) (gs - {g})", "by (intro finprod_minus, use assms g in auto)"], ["proof (state)\nthis:\n  finprod G (restrict ((\\<lambda>_. \\<one>)(g := inv g)) gs) gs =\n  restrict ((\\<lambda>_. \\<one>)(g := inv g)) gs g \\<otimes>\n  finprod G (restrict ((\\<lambda>_. \\<one>)(g := inv g)) gs) (gs - {g})\n\ngoal (1 subgoal):\n 1. inv g = finprod G (restrict ((\\<lambda>_. \\<one>)(g := inv g)) gs) gs", "moreover"], ["proof (state)\nthis:\n  finprod G (restrict ((\\<lambda>_. \\<one>)(g := inv g)) gs) gs =\n  restrict ((\\<lambda>_. \\<one>)(g := inv g)) gs g \\<otimes>\n  finprod G (restrict ((\\<lambda>_. \\<one>)(g := inv g)) gs) (gs - {g})\n\ngoal (1 subgoal):\n 1. inv g = finprod G (restrict ((\\<lambda>_. \\<one>)(g := inv g)) gs) gs", "have \"?r g = inv g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict ((\\<lambda>_. \\<one>)(g := inv g)) gs g = inv g", "using g"], ["proof (prove)\nusing this:\n  g \\<in> gs\n\ngoal (1 subgoal):\n 1. restrict ((\\<lambda>_. \\<one>)(g := inv g)) gs g = inv g", "by simp"], ["proof (state)\nthis:\n  restrict ((\\<lambda>_. \\<one>)(g := inv g)) gs g = inv g\n\ngoal (1 subgoal):\n 1. inv g = finprod G (restrict ((\\<lambda>_. \\<one>)(g := inv g)) gs) gs", "moreover"], ["proof (state)\nthis:\n  restrict ((\\<lambda>_. \\<one>)(g := inv g)) gs g = inv g\n\ngoal (1 subgoal):\n 1. inv g = finprod G (restrict ((\\<lambda>_. \\<one>)(g := inv g)) gs) gs", "have \"finprod G ?r (gs - {g}) = \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G (restrict ((\\<lambda>_. \\<one>)(g := inv g)) gs) (gs - {g}) =\n    \\<one>", "by(rule finprod_one_eqI; use g in simp)"], ["proof (state)\nthis:\n  finprod G (restrict ((\\<lambda>_. \\<one>)(g := inv g)) gs) (gs - {g}) =\n  \\<one>\n\ngoal (1 subgoal):\n 1. inv g = finprod G (restrict ((\\<lambda>_. \\<one>)(g := inv g)) gs) gs", "ultimately"], ["proof (chain)\npicking this:\n  finprod G (restrict ((\\<lambda>_. \\<one>)(g := inv g)) gs) gs =\n  restrict ((\\<lambda>_. \\<one>)(g := inv g)) gs g \\<otimes>\n  finprod G (restrict ((\\<lambda>_. \\<one>)(g := inv g)) gs) (gs - {g})\n  restrict ((\\<lambda>_. \\<one>)(g := inv g)) gs g = inv g\n  finprod G (restrict ((\\<lambda>_. \\<one>)(g := inv g)) gs) (gs - {g}) =\n  \\<one>", "show ?thesis"], ["proof (prove)\nusing this:\n  finprod G (restrict ((\\<lambda>_. \\<one>)(g := inv g)) gs) gs =\n  restrict ((\\<lambda>_. \\<one>)(g := inv g)) gs g \\<otimes>\n  finprod G (restrict ((\\<lambda>_. \\<one>)(g := inv g)) gs) (gs - {g})\n  restrict ((\\<lambda>_. \\<one>)(g := inv g)) gs g = inv g\n  finprod G (restrict ((\\<lambda>_. \\<one>)(g := inv g)) gs) (gs - {g}) =\n  \\<one>\n\ngoal (1 subgoal):\n 1. inv g = finprod G (restrict ((\\<lambda>_. \\<one>)(g := inv g)) gs) gs", "using assms g"], ["proof (prove)\nusing this:\n  finprod G (restrict ((\\<lambda>_. \\<one>)(g := inv g)) gs) gs =\n  restrict ((\\<lambda>_. \\<one>)(g := inv g)) gs g \\<otimes>\n  finprod G (restrict ((\\<lambda>_. \\<one>)(g := inv g)) gs) (gs - {g})\n  restrict ((\\<lambda>_. \\<one>)(g := inv g)) gs g = inv g\n  finprod G (restrict ((\\<lambda>_. \\<one>)(g := inv g)) gs) (gs - {g}) =\n  \\<one>\n  finite gs\n  gs \\<subseteq> carrier G\n  g \\<in> gs\n\ngoal (1 subgoal):\n 1. inv g = finprod G (restrict ((\\<lambda>_. \\<one>)(g := inv g)) gs) gs", "by auto"], ["proof (state)\nthis:\n  inv g = finprod G (restrict ((\\<lambda>_. \\<one>)(g := inv g)) gs) gs\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inv g = finprod G (restrict ((\\<lambda>_. \\<one>)(g := inv g)) gs) gs\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inv g\n  \\<in> (\\<lambda>x. finprod G x gs) `\n        (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n\ngoal (1 subgoal):\n 1. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G gs;\n        h1 \\<in> (\\<lambda>x. finprod G x gs) `\n                 (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a});\n        h2 \\<in> generate G gs;\n        h2 \\<in> (\\<lambda>x. finprod G x gs) `\n                 (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x gs) `\n                               (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G gs;\n        h1 \\<in> (\\<lambda>x. finprod G x gs) `\n                 (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a});\n        h2 \\<in> generate G gs;\n        h2 \\<in> (\\<lambda>x. finprod G x gs) `\n                 (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x gs) `\n                               (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "case gh: (eng g h)"], ["proof (state)\nthis:\n  g \\<in> generate G gs\n  h \\<in> generate G gs\n  g \\<in> (\\<lambda>x. finprod G x gs) `\n          (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n  h \\<in> (\\<lambda>x. finprod G x gs) `\n          (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n\ngoal (1 subgoal):\n 1. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G gs;\n        h1 \\<in> (\\<lambda>x. finprod G x gs) `\n                 (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a});\n        h2 \\<in> generate G gs;\n        h2 \\<in> (\\<lambda>x. finprod G x gs) `\n                 (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x gs) `\n                               (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "from gh"], ["proof (chain)\npicking this:\n  g \\<in> generate G gs\n  h \\<in> generate G gs\n  g \\<in> (\\<lambda>x. finprod G x gs) `\n          (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n  h \\<in> (\\<lambda>x. finprod G x gs) `\n          (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "obtain i where i: \"i \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\" \"g = finprod G i gs\""], ["proof (prove)\nusing this:\n  g \\<in> generate G gs\n  h \\<in> generate G gs\n  g \\<in> (\\<lambda>x. finprod G x gs) `\n          (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n  h \\<in> (\\<lambda>x. finprod G x gs) `\n          (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>i \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a});\n         g = finprod G i gs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  i \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n  g = finprod G i gs\n\ngoal (1 subgoal):\n 1. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G gs;\n        h1 \\<in> (\\<lambda>x. finprod G x gs) `\n                 (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a});\n        h2 \\<in> generate G gs;\n        h2 \\<in> (\\<lambda>x. finprod G x gs) `\n                 (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x gs) `\n                               (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "from gh"], ["proof (chain)\npicking this:\n  g \\<in> generate G gs\n  h \\<in> generate G gs\n  g \\<in> (\\<lambda>x. finprod G x gs) `\n          (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n  h \\<in> (\\<lambda>x. finprod G x gs) `\n          (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "obtain j where j: \"j \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\" \"h = finprod G j gs\""], ["proof (prove)\nusing this:\n  g \\<in> generate G gs\n  h \\<in> generate G gs\n  g \\<in> (\\<lambda>x. finprod G x gs) `\n          (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n  h \\<in> (\\<lambda>x. finprod G x gs) `\n          (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n\ngoal (1 subgoal):\n 1. (\\<And>j.\n        \\<lbrakk>j \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a});\n         h = finprod G j gs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  j \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n  h = finprod G j gs\n\ngoal (1 subgoal):\n 1. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G gs;\n        h1 \\<in> (\\<lambda>x. finprod G x gs) `\n                 (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a});\n        h2 \\<in> generate G gs;\n        h2 \\<in> (\\<lambda>x. finprod G x gs) `\n                 (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x gs) `\n                               (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "from i j"], ["proof (chain)\npicking this:\n  i \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n  g = finprod G i gs\n  j \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n  h = finprod G j gs", "have \"g \\<otimes> h = finprod G i gs \\<otimes> finprod G j gs\""], ["proof (prove)\nusing this:\n  i \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n  g = finprod G i gs\n  j \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n  h = finprod G j gs\n\ngoal (1 subgoal):\n 1. g \\<otimes> h = finprod G i gs \\<otimes> finprod G j gs", "by blast"], ["proof (state)\nthis:\n  g \\<otimes> h = finprod G i gs \\<otimes> finprod G j gs\n\ngoal (1 subgoal):\n 1. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G gs;\n        h1 \\<in> (\\<lambda>x. finprod G x gs) `\n                 (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a});\n        h2 \\<in> generate G gs;\n        h2 \\<in> (\\<lambda>x. finprod G x gs) `\n                 (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x gs) `\n                               (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "also"], ["proof (state)\nthis:\n  g \\<otimes> h = finprod G i gs \\<otimes> finprod G j gs\n\ngoal (1 subgoal):\n 1. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G gs;\n        h1 \\<in> (\\<lambda>x. finprod G x gs) `\n                 (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a});\n        h2 \\<in> generate G gs;\n        h2 \\<in> (\\<lambda>x. finprod G x gs) `\n                 (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x gs) `\n                               (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "have \"\\<dots> = finprod G (\\<lambda>a. i a \\<otimes> j a) gs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G i gs \\<otimes> finprod G j gs =\n    (\\<Otimes>a\\<in>gs. i a \\<otimes> j a)", "proof(intro finprod_multf[symmetric]; rule)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> gs \\<Longrightarrow> i x \\<in> carrier G\n 2. \\<And>x. x \\<in> gs \\<Longrightarrow> j x \\<in> carrier G", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> gs \\<Longrightarrow> i x \\<in> carrier G\n 2. \\<And>x. x \\<in> gs \\<Longrightarrow> j x \\<in> carrier G", "assume x: \"x \\<in> gs\""], ["proof (state)\nthis:\n  x \\<in> gs\n\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> gs \\<Longrightarrow> i x \\<in> carrier G\n 2. \\<And>x. x \\<in> gs \\<Longrightarrow> j x \\<in> carrier G", "have \"i x \\<in> generate G {x}\" \"j x \\<in> generate G {x}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i x \\<in> generate G {x} &&& j x \\<in> generate G {x}", "using i(1) j(1) x"], ["proof (prove)\nusing this:\n  i \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n  j \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n  x \\<in> gs\n\ngoal (1 subgoal):\n 1. i x \\<in> generate G {x} &&& j x \\<in> generate G {x}", "by blast+"], ["proof (state)\nthis:\n  i x \\<in> generate G {x}\n  j x \\<in> generate G {x}\n\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> gs \\<Longrightarrow> i x \\<in> carrier G\n 2. \\<And>x. x \\<in> gs \\<Longrightarrow> j x \\<in> carrier G", "thus \"i x \\<in> carrier G\" \"j x \\<in> carrier G\""], ["proof (prove)\nusing this:\n  i x \\<in> generate G {x}\n  j x \\<in> generate G {x}\n\ngoal (1 subgoal):\n 1. i x \\<in> carrier G &&& j x \\<in> carrier G", "using generate_incl[of \"{x}\"] x assms(2)"], ["proof (prove)\nusing this:\n  i x \\<in> generate G {x}\n  j x \\<in> generate G {x}\n  {x} \\<subseteq> carrier G \\<Longrightarrow>\n  generate G {x} \\<subseteq> carrier G\n  x \\<in> gs\n  gs \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. i x \\<in> carrier G &&& j x \\<in> carrier G", "by blast+"], ["proof (state)\nthis:\n  i x \\<in> carrier G\n  j x \\<in> carrier G\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finprod G i gs \\<otimes> finprod G j gs =\n  (\\<Otimes>a\\<in>gs. i a \\<otimes> j a)\n\ngoal (1 subgoal):\n 1. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G gs;\n        h1 \\<in> (\\<lambda>x. finprod G x gs) `\n                 (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a});\n        h2 \\<in> generate G gs;\n        h2 \\<in> (\\<lambda>x. finprod G x gs) `\n                 (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x gs) `\n                               (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "also"], ["proof (state)\nthis:\n  finprod G i gs \\<otimes> finprod G j gs =\n  (\\<Otimes>a\\<in>gs. i a \\<otimes> j a)\n\ngoal (1 subgoal):\n 1. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G gs;\n        h1 \\<in> (\\<lambda>x. finprod G x gs) `\n                 (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a});\n        h2 \\<in> generate G gs;\n        h2 \\<in> (\\<lambda>x. finprod G x gs) `\n                 (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x gs) `\n                               (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "have \"\\<dots> = finprod G (restrict (\\<lambda>a. i a \\<otimes> j a) gs) gs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Otimes>a\\<in>gs. i a \\<otimes> j a) =\n    finprod G (\\<lambda>a\\<in>gs. i a \\<otimes> j a) gs", "proof(intro finprod_cong)"], ["proof (state)\ngoal (3 subgoals):\n 1. gs = gs\n 2. ((\\<lambda>a. i a \\<otimes> j a) \\<in> gs \\<rightarrow> carrier G) =\n    True\n 3. \\<And>ia.\n       ia \\<in> gs =simp=>\n       i ia \\<otimes> j ia = (\\<lambda>a\\<in>gs. i a \\<otimes> j a) ia", "have ip: \"i g \\<in> generate G {g}\" if \"g \\<in> gs\" for g"], ["proof (prove)\ngoal (1 subgoal):\n 1. i g \\<in> generate G {g}", "using i that"], ["proof (prove)\nusing this:\n  i \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n  g__ = finprod G i gs\n  g \\<in> gs\n\ngoal (1 subgoal):\n 1. i g \\<in> generate G {g}", "by auto"], ["proof (state)\nthis:\n  ?g2 \\<in> gs \\<Longrightarrow> i ?g2 \\<in> generate G {?g2}\n\ngoal (3 subgoals):\n 1. gs = gs\n 2. ((\\<lambda>a. i a \\<otimes> j a) \\<in> gs \\<rightarrow> carrier G) =\n    True\n 3. \\<And>ia.\n       ia \\<in> gs =simp=>\n       i ia \\<otimes> j ia = (\\<lambda>a\\<in>gs. i a \\<otimes> j a) ia", "have jp: \"j g \\<in> generate G {g}\" if \"g \\<in> gs\" for g"], ["proof (prove)\ngoal (1 subgoal):\n 1. j g \\<in> generate G {g}", "using j that"], ["proof (prove)\nusing this:\n  j \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n  h = finprod G j gs\n  g \\<in> gs\n\ngoal (1 subgoal):\n 1. j g \\<in> generate G {g}", "by auto"], ["proof (state)\nthis:\n  ?g2 \\<in> gs \\<Longrightarrow> j ?g2 \\<in> generate G {?g2}\n\ngoal (3 subgoals):\n 1. gs = gs\n 2. ((\\<lambda>a. i a \\<otimes> j a) \\<in> gs \\<rightarrow> carrier G) =\n    True\n 3. \\<And>ia.\n       ia \\<in> gs =simp=>\n       i ia \\<otimes> j ia = (\\<lambda>a\\<in>gs. i a \\<otimes> j a) ia", "have \"i g \\<otimes> j g \\<in> generate G {g}\" if \"g \\<in> gs\" for g"], ["proof (prove)\ngoal (1 subgoal):\n 1. i g \\<otimes> j g \\<in> generate G {g}", "using generate.eng[OF ip[OF that] jp[OF that]]"], ["proof (prove)\nusing this:\n  i g \\<otimes> j g \\<in> generate G {g}\n\ngoal (1 subgoal):\n 1. i g \\<otimes> j g \\<in> generate G {g}", "."], ["proof (state)\nthis:\n  ?g2 \\<in> gs \\<Longrightarrow>\n  i ?g2 \\<otimes> j ?g2 \\<in> generate G {?g2}\n\ngoal (3 subgoals):\n 1. gs = gs\n 2. ((\\<lambda>a. i a \\<otimes> j a) \\<in> gs \\<rightarrow> carrier G) =\n    True\n 3. \\<And>ia.\n       ia \\<in> gs =simp=>\n       i ia \\<otimes> j ia = (\\<lambda>a\\<in>gs. i a \\<otimes> j a) ia", "thus \"((\\<lambda>a. i a \\<otimes> j a) \\<in> gs \\<rightarrow> carrier G) = True\""], ["proof (prove)\nusing this:\n  ?g2 \\<in> gs \\<Longrightarrow>\n  i ?g2 \\<otimes> j ?g2 \\<in> generate G {?g2}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>a. i a \\<otimes> j a) \\<in> gs \\<rightarrow> carrier G) =\n    True", "using generate_incl assms(2)"], ["proof (prove)\nusing this:\n  ?g2 \\<in> gs \\<Longrightarrow>\n  i ?g2 \\<otimes> j ?g2 \\<in> generate G {?g2}\n  ?H \\<subseteq> carrier G \\<Longrightarrow>\n  generate G ?H \\<subseteq> carrier G\n  gs \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. ((\\<lambda>a. i a \\<otimes> j a) \\<in> gs \\<rightarrow> carrier G) =\n    True", "by blast"], ["proof (state)\nthis:\n  ((\\<lambda>a. i a \\<otimes> j a) \\<in> gs \\<rightarrow> carrier G) = True\n\ngoal (2 subgoals):\n 1. gs = gs\n 2. \\<And>ia.\n       ia \\<in> gs =simp=>\n       i ia \\<otimes> j ia = (\\<lambda>a\\<in>gs. i a \\<otimes> j a) ia", "qed auto"], ["proof (state)\nthis:\n  (\\<Otimes>a\\<in>gs. i a \\<otimes> j a) =\n  finprod G (\\<lambda>a\\<in>gs. i a \\<otimes> j a) gs\n\ngoal (1 subgoal):\n 1. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G gs;\n        h1 \\<in> (\\<lambda>x. finprod G x gs) `\n                 (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a});\n        h2 \\<in> generate G gs;\n        h2 \\<in> (\\<lambda>x. finprod G x gs) `\n                 (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x gs) `\n                               (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "finally"], ["proof (chain)\npicking this:\n  g \\<otimes> h = finprod G (\\<lambda>a\\<in>gs. i a \\<otimes> j a) gs", "have \"g \\<otimes> h = finprod G (restrict (\\<lambda>a. i a \\<otimes> j a) gs) gs\""], ["proof (prove)\nusing this:\n  g \\<otimes> h = finprod G (\\<lambda>a\\<in>gs. i a \\<otimes> j a) gs\n\ngoal (1 subgoal):\n 1. g \\<otimes> h = finprod G (\\<lambda>a\\<in>gs. i a \\<otimes> j a) gs", "."], ["proof (state)\nthis:\n  g \\<otimes> h = finprod G (\\<lambda>a\\<in>gs. i a \\<otimes> j a) gs\n\ngoal (1 subgoal):\n 1. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G gs;\n        h1 \\<in> (\\<lambda>x. finprod G x gs) `\n                 (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a});\n        h2 \\<in> generate G gs;\n        h2 \\<in> (\\<lambda>x. finprod G x gs) `\n                 (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x gs) `\n                               (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "moreover"], ["proof (state)\nthis:\n  g \\<otimes> h = finprod G (\\<lambda>a\\<in>gs. i a \\<otimes> j a) gs\n\ngoal (1 subgoal):\n 1. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G gs;\n        h1 \\<in> (\\<lambda>x. finprod G x gs) `\n                 (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a});\n        h2 \\<in> generate G gs;\n        h2 \\<in> (\\<lambda>x. finprod G x gs) `\n                 (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x gs) `\n                               (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "have \"(restrict (\\<lambda>a. i a \\<otimes> j a) gs) \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>a\\<in>gs. i a \\<otimes> j a)\n    \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>a\\<in>gs. i a \\<otimes> j a)\n    \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "have ip: \"i g \\<in> generate G {g}\" if \"g \\<in> gs\" for g"], ["proof (prove)\ngoal (1 subgoal):\n 1. i g \\<in> generate G {g}", "using i that"], ["proof (prove)\nusing this:\n  i \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n  g__ = finprod G i gs\n  g \\<in> gs\n\ngoal (1 subgoal):\n 1. i g \\<in> generate G {g}", "by auto"], ["proof (state)\nthis:\n  ?g2 \\<in> gs \\<Longrightarrow> i ?g2 \\<in> generate G {?g2}\n\ngoal (1 subgoal):\n 1. (\\<lambda>a\\<in>gs. i a \\<otimes> j a)\n    \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "have jp: \"j g \\<in> generate G {g}\" if \"g \\<in> gs\" for g"], ["proof (prove)\ngoal (1 subgoal):\n 1. j g \\<in> generate G {g}", "using j that"], ["proof (prove)\nusing this:\n  j \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n  h = finprod G j gs\n  g \\<in> gs\n\ngoal (1 subgoal):\n 1. j g \\<in> generate G {g}", "by auto"], ["proof (state)\nthis:\n  ?g2 \\<in> gs \\<Longrightarrow> j ?g2 \\<in> generate G {?g2}\n\ngoal (1 subgoal):\n 1. (\\<lambda>a\\<in>gs. i a \\<otimes> j a)\n    \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "have \"i g \\<otimes> j g \\<in> generate G {g}\" if \"g \\<in> gs\" for g"], ["proof (prove)\ngoal (1 subgoal):\n 1. i g \\<otimes> j g \\<in> generate G {g}", "using generate.eng[OF ip[OF that] jp[OF that]]"], ["proof (prove)\nusing this:\n  i g \\<otimes> j g \\<in> generate G {g}\n\ngoal (1 subgoal):\n 1. i g \\<otimes> j g \\<in> generate G {g}", "."], ["proof (state)\nthis:\n  ?g2 \\<in> gs \\<Longrightarrow>\n  i ?g2 \\<otimes> j ?g2 \\<in> generate G {?g2}\n\ngoal (1 subgoal):\n 1. (\\<lambda>a\\<in>gs. i a \\<otimes> j a)\n    \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "thus ?thesis"], ["proof (prove)\nusing this:\n  ?g2 \\<in> gs \\<Longrightarrow>\n  i ?g2 \\<otimes> j ?g2 \\<in> generate G {?g2}\n\ngoal (1 subgoal):\n 1. (\\<lambda>a\\<in>gs. i a \\<otimes> j a)\n    \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>a\\<in>gs. i a \\<otimes> j a)\n  \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>a\\<in>gs. i a \\<otimes> j a)\n  \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n\ngoal (1 subgoal):\n 1. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G gs;\n        h1 \\<in> (\\<lambda>x. finprod G x gs) `\n                 (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a});\n        h2 \\<in> generate G gs;\n        h2 \\<in> (\\<lambda>x. finprod G x gs) `\n                 (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x gs) `\n                               (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "ultimately"], ["proof (chain)\npicking this:\n  g \\<otimes> h = finprod G (\\<lambda>a\\<in>gs. i a \\<otimes> j a) gs\n  (\\<lambda>a\\<in>gs. i a \\<otimes> j a)\n  \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "show ?case"], ["proof (prove)\nusing this:\n  g \\<otimes> h = finprod G (\\<lambda>a\\<in>gs. i a \\<otimes> j a) gs\n  (\\<lambda>a\\<in>gs. i a \\<otimes> j a)\n  \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n\ngoal (1 subgoal):\n 1. g \\<otimes> h\n    \\<in> (\\<lambda>x. finprod G x gs) `\n          (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "using i j"], ["proof (prove)\nusing this:\n  g \\<otimes> h = finprod G (\\<lambda>a\\<in>gs. i a \\<otimes> j a) gs\n  (\\<lambda>a\\<in>gs. i a \\<otimes> j a)\n  \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n  i \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n  g = finprod G i gs\n  j \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n  h = finprod G j gs\n\ngoal (1 subgoal):\n 1. g \\<otimes> h\n    \\<in> (\\<lambda>x. finprod G x gs) `\n          (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "by blast"], ["proof (state)\nthis:\n  g \\<otimes> h\n  \\<in> (\\<lambda>x. finprod G x gs) `\n        (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> (\\<lambda>x. finprod G x gs) `\n          (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  generate G gs\n  \\<subseteq> (\\<lambda>x. finprod G x gs) `\n              (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. finprod G x gs) ` (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n    \\<subseteq> generate G gs", "show \"?fp \\<subseteq> ?g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. finprod G x gs) ` (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n    \\<subseteq> generate G gs", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a}) \\<Longrightarrow>\n       x \\<in> generate G gs", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a}) \\<Longrightarrow>\n       x \\<in> generate G gs", "assume x: \"x \\<in> ?fp\""], ["proof (state)\nthis:\n  x \\<in> (\\<lambda>x. finprod G x gs) `\n          (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a}) \\<Longrightarrow>\n       x \\<in> generate G gs", "then"], ["proof (chain)\npicking this:\n  x \\<in> (\\<lambda>x. finprod G x gs) `\n          (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "obtain f where f: \"f \\<in> (Pi\\<^sub>E gs (\\<lambda>a. generate G {a}))\" \"x = finprod G f gs\""], ["proof (prove)\nusing this:\n  x \\<in> (\\<lambda>x. finprod G x gs) `\n          (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>f \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a});\n         x = finprod G f gs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  f \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n  x = finprod G f gs\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a}) \\<Longrightarrow>\n       x \\<in> generate G gs", "have sg: \"subgroup ?g G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup (generate G gs) G", "by(intro generate_is_subgroup, fact)"], ["proof (state)\nthis:\n  subgroup (generate G gs) G\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a}) \\<Longrightarrow>\n       x \\<in> generate G gs", "have \"finprod G f gs \\<in> ?g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G f gs \\<in> generate G gs", "proof(intro finprod_closed_subgroup[OF sg])"], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<in> gs \\<rightarrow> generate G gs", "have \"f g \\<in> generate G gs\" if \"g \\<in> gs\" for g"], ["proof (prove)\ngoal (1 subgoal):\n 1. f g \\<in> generate G gs", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f g \\<in> generate G gs", "have \"f g \\<in> generate G {g}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f g \\<in> generate G {g}", "using f(1) that"], ["proof (prove)\nusing this:\n  f \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n  g \\<in> gs\n\ngoal (1 subgoal):\n 1. f g \\<in> generate G {g}", "by auto"], ["proof (state)\nthis:\n  f g \\<in> generate G {g}\n\ngoal (1 subgoal):\n 1. f g \\<in> generate G gs", "moreover"], ["proof (state)\nthis:\n  f g \\<in> generate G {g}\n\ngoal (1 subgoal):\n 1. f g \\<in> generate G gs", "have \"generate G {g} \\<subseteq> generate G gs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. generate G {g} \\<subseteq> generate G gs", "by(intro mono_generate, use that in simp)"], ["proof (state)\nthis:\n  generate G {g} \\<subseteq> generate G gs\n\ngoal (1 subgoal):\n 1. f g \\<in> generate G gs", "ultimately"], ["proof (chain)\npicking this:\n  f g \\<in> generate G {g}\n  generate G {g} \\<subseteq> generate G gs", "show ?thesis"], ["proof (prove)\nusing this:\n  f g \\<in> generate G {g}\n  generate G {g} \\<subseteq> generate G gs\n\ngoal (1 subgoal):\n 1. f g \\<in> generate G gs", "by fast"], ["proof (state)\nthis:\n  f g \\<in> generate G gs\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?g2 \\<in> gs \\<Longrightarrow> f ?g2 \\<in> generate G gs\n\ngoal (1 subgoal):\n 1. f \\<in> gs \\<rightarrow> generate G gs", "thus \"f \\<in> gs \\<rightarrow> generate G gs\""], ["proof (prove)\nusing this:\n  ?g2 \\<in> gs \\<Longrightarrow> f ?g2 \\<in> generate G gs\n\ngoal (1 subgoal):\n 1. f \\<in> gs \\<rightarrow> generate G gs", "by simp"], ["proof (state)\nthis:\n  f \\<in> gs \\<rightarrow> generate G gs\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finprod G f gs \\<in> generate G gs\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a}) \\<Longrightarrow>\n       x \\<in> generate G gs", "thus \"x \\<in> ?g\""], ["proof (prove)\nusing this:\n  finprod G f gs \\<in> generate G gs\n\ngoal (1 subgoal):\n 1. x \\<in> generate G gs", "using f"], ["proof (prove)\nusing this:\n  finprod G f gs \\<in> generate G gs\n  f \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n  x = finprod G f gs\n\ngoal (1 subgoal):\n 1. x \\<in> generate G gs", "by blast"], ["proof (state)\nthis:\n  x \\<in> generate G gs\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>x. finprod G x gs) ` (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n  \\<subseteq> generate G gs\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in comm_group) generate_eq_finprod_Pi_image:\n  assumes \"finite gs\" \"gs \\<subseteq> carrier G\"\n  shows \"generate G gs = (\\<lambda>x. finprod G x gs) ` Pi gs (\\<lambda>a. generate G {a})\" (is \"?g = ?fp\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. generate G gs =\n    (\\<lambda>x. finprod G x gs) ` (\\<Pi> a\\<in>gs. generate G {a})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. generate G gs =\n    (\\<lambda>x. finprod G x gs) ` (\\<Pi> a\\<in>gs. generate G {a})", "have \"(\\<lambda>x. finprod G x gs) ` Pi\\<^sub>E gs (\\<lambda>a. generate G {a})\n      = (\\<lambda>x. finprod G x gs) ` Pi gs (\\<lambda>a. generate G {a})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. finprod G x gs) `\n    (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a}) =\n    (\\<lambda>x. finprod G x gs) ` (\\<Pi> a\\<in>gs. generate G {a})", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>x. finprod G x gs) ` (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n    \\<subseteq> (\\<lambda>x. finprod G x gs) `\n                (\\<Pi> a\\<in>gs. generate G {a})\n 2. (\\<lambda>x. finprod G x gs) ` (\\<Pi> a\\<in>gs. generate G {a})\n    \\<subseteq> (\\<lambda>x. finprod G x gs) `\n                (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "have \"Pi\\<^sub>E gs (\\<lambda>a. generate G {a}) \\<subseteq> Pi gs (\\<lambda>a. generate G {a})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n    \\<subseteq> (\\<Pi> a\\<in>gs. generate G {a})", "by blast"], ["proof (state)\nthis:\n  (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n  \\<subseteq> (\\<Pi> a\\<in>gs. generate G {a})\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. finprod G x gs) ` (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n    \\<subseteq> (\\<lambda>x. finprod G x gs) `\n                (\\<Pi> a\\<in>gs. generate G {a})\n 2. (\\<lambda>x. finprod G x gs) ` (\\<Pi> a\\<in>gs. generate G {a})\n    \\<subseteq> (\\<lambda>x. finprod G x gs) `\n                (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "thus \"(\\<lambda>x. finprod G x gs) ` Pi\\<^sub>E gs (\\<lambda>a. generate G {a})\n        \\<subseteq> (\\<lambda>x. finprod G x gs) ` Pi gs (\\<lambda>a. generate G {a})\""], ["proof (prove)\nusing this:\n  (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n  \\<subseteq> (\\<Pi> a\\<in>gs. generate G {a})\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. finprod G x gs) ` (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n    \\<subseteq> (\\<lambda>x. finprod G x gs) `\n                (\\<Pi> a\\<in>gs. generate G {a})", "by blast"], ["proof (state)\nthis:\n  (\\<lambda>x. finprod G x gs) ` (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n  \\<subseteq> (\\<lambda>x. finprod G x gs) `\n              (\\<Pi> a\\<in>gs. generate G {a})\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. finprod G x gs) ` (\\<Pi> a\\<in>gs. generate G {a})\n    \\<subseteq> (\\<lambda>x. finprod G x gs) `\n                (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "show \"(\\<lambda>x. finprod G x gs) ` Pi gs (\\<lambda>a. generate G {a})\n        \\<subseteq> (\\<lambda>x. finprod G x gs) ` Pi\\<^sub>E gs (\\<lambda>a. generate G {a})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. finprod G x gs) ` (\\<Pi> a\\<in>gs. generate G {a})\n    \\<subseteq> (\\<lambda>x. finprod G x gs) `\n                (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi> a\\<in>gs. generate G {a}) \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi> a\\<in>gs. generate G {a}) \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "assume x: \"x \\<in> (\\<lambda>x. finprod G x gs) ` Pi gs (\\<lambda>a. generate G {a})\""], ["proof (state)\nthis:\n  x \\<in> (\\<lambda>x. finprod G x gs) ` (\\<Pi> a\\<in>gs. generate G {a})\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi> a\\<in>gs. generate G {a}) \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "then"], ["proof (chain)\npicking this:\n  x \\<in> (\\<lambda>x. finprod G x gs) ` (\\<Pi> a\\<in>gs. generate G {a})", "obtain f where f: \"x = finprod G f gs\" \"f \\<in> Pi gs (\\<lambda>a. generate G {a})\""], ["proof (prove)\nusing this:\n  x \\<in> (\\<lambda>x. finprod G x gs) ` (\\<Pi> a\\<in>gs. generate G {a})\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>x = finprod G f gs;\n         f \\<in> (\\<Pi> a\\<in>gs. generate G {a})\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  x = finprod G f gs\n  f \\<in> (\\<Pi> a\\<in>gs. generate G {a})\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi> a\\<in>gs. generate G {a}) \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "moreover"], ["proof (state)\nthis:\n  x = finprod G f gs\n  f \\<in> (\\<Pi> a\\<in>gs. generate G {a})\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi> a\\<in>gs. generate G {a}) \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "have \"finprod G f gs = finprod G (restrict f gs) gs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G f gs = finprod G (restrict f gs) gs", "proof(intro finprod_cong)"], ["proof (state)\ngoal (3 subgoals):\n 1. gs = gs\n 2. (f \\<in> gs \\<rightarrow> carrier G) = True\n 3. \\<And>i. i \\<in> gs =simp=> f i = restrict f gs i", "have \"f g \\<in> carrier G\" if \"g \\<in> gs\" for g"], ["proof (prove)\ngoal (1 subgoal):\n 1. f g \\<in> carrier G", "using that f(2) mono_generate[of \"{g}\" gs] generate_incl[OF assms(2)]"], ["proof (prove)\nusing this:\n  g \\<in> gs\n  f \\<in> (\\<Pi> a\\<in>gs. generate G {a})\n  {g} \\<subseteq> gs \\<Longrightarrow>\n  generate G {g} \\<subseteq> generate G gs\n  generate G gs \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. f g \\<in> carrier G", "by fast"], ["proof (state)\nthis:\n  ?g2 \\<in> gs \\<Longrightarrow> f ?g2 \\<in> carrier G\n\ngoal (3 subgoals):\n 1. gs = gs\n 2. (f \\<in> gs \\<rightarrow> carrier G) = True\n 3. \\<And>i. i \\<in> gs =simp=> f i = restrict f gs i", "thus \"(f \\<in> gs \\<rightarrow> carrier G) = True\""], ["proof (prove)\nusing this:\n  ?g2 \\<in> gs \\<Longrightarrow> f ?g2 \\<in> carrier G\n\ngoal (1 subgoal):\n 1. (f \\<in> gs \\<rightarrow> carrier G) = True", "by blast"], ["proof (state)\nthis:\n  (f \\<in> gs \\<rightarrow> carrier G) = True\n\ngoal (2 subgoals):\n 1. gs = gs\n 2. \\<And>i. i \\<in> gs =simp=> f i = restrict f gs i", "qed auto"], ["proof (state)\nthis:\n  finprod G f gs = finprod G (restrict f gs) gs\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi> a\\<in>gs. generate G {a}) \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "moreover"], ["proof (state)\nthis:\n  finprod G f gs = finprod G (restrict f gs) gs\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi> a\\<in>gs. generate G {a}) \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "have \"restrict f gs \\<in> Pi\\<^sub>E gs (\\<lambda>a. generate G {a})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict f gs \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "using f(2)"], ["proof (prove)\nusing this:\n  f \\<in> (\\<Pi> a\\<in>gs. generate G {a})\n\ngoal (1 subgoal):\n 1. restrict f gs \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "by simp"], ["proof (state)\nthis:\n  restrict f gs \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi> a\\<in>gs. generate G {a}) \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "ultimately"], ["proof (chain)\npicking this:\n  x = finprod G f gs\n  f \\<in> (\\<Pi> a\\<in>gs. generate G {a})\n  finprod G f gs = finprod G (restrict f gs) gs\n  restrict f gs \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "show \"x \\<in> (\\<lambda>x. finprod G x gs) ` Pi\\<^sub>E gs (\\<lambda>a. generate G {a})\""], ["proof (prove)\nusing this:\n  x = finprod G f gs\n  f \\<in> (\\<Pi> a\\<in>gs. generate G {a})\n  finprod G f gs = finprod G (restrict f gs) gs\n  restrict f gs \\<in> (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<lambda>x. finprod G x gs) `\n            (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})", "by blast"], ["proof (state)\nthis:\n  x \\<in> (\\<lambda>x. finprod G x gs) `\n          (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>x. finprod G x gs) ` (\\<Pi> a\\<in>gs. generate G {a})\n  \\<subseteq> (\\<lambda>x. finprod G x gs) `\n              (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>x. finprod G x gs) ` (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a}) =\n  (\\<lambda>x. finprod G x gs) ` (\\<Pi> a\\<in>gs. generate G {a})\n\ngoal (1 subgoal):\n 1. generate G gs =\n    (\\<lambda>x. finprod G x gs) ` (\\<Pi> a\\<in>gs. generate G {a})", "with generate_eq_finprod_PiE_image[OF assms]"], ["proof (chain)\npicking this:\n  generate G gs =\n  (\\<lambda>x. finprod G x gs) ` (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n  (\\<lambda>x. finprod G x gs) ` (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a}) =\n  (\\<lambda>x. finprod G x gs) ` (\\<Pi> a\\<in>gs. generate G {a})", "show ?thesis"], ["proof (prove)\nusing this:\n  generate G gs =\n  (\\<lambda>x. finprod G x gs) ` (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a})\n  (\\<lambda>x. finprod G x gs) ` (\\<Pi>\\<^sub>E a\\<in>gs. generate G {a}) =\n  (\\<lambda>x. finprod G x gs) ` (\\<Pi> a\\<in>gs. generate G {a})\n\ngoal (1 subgoal):\n 1. generate G gs =\n    (\\<lambda>x. finprod G x gs) ` (\\<Pi> a\\<in>gs. generate G {a})", "by auto"], ["proof (state)\nthis:\n  generate G gs =\n  (\\<lambda>x. finprod G x gs) ` (\\<Pi> a\\<in>gs. generate G {a})\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in comm_group) generate_eq_finprod_Pi_int_image:\n  assumes \"finite gs\" \"gs \\<subseteq> carrier G\"\n  shows \"generate G gs = (\\<lambda>x. finprod G (\\<lambda>g. g [^] x g) gs) ` Pi gs (\\<lambda>_. (UNIV::int set))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. generate G gs =\n    (\\<lambda>x. \\<Otimes>g\\<in>gs. g [^] x g) ` (gs \\<rightarrow> UNIV)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. generate G gs =\n    (\\<lambda>x. \\<Otimes>g\\<in>gs. g [^] x g) ` (gs \\<rightarrow> UNIV)", "from generate_eq_finprod_Pi_image[OF assms]"], ["proof (chain)\npicking this:\n  generate G gs =\n  (\\<lambda>x. finprod G x gs) ` (\\<Pi> a\\<in>gs. generate G {a})", "have \"generate G gs = (\\<lambda>x. finprod G x gs) ` (\\<Pi> a\\<in>gs. generate G {a})\""], ["proof (prove)\nusing this:\n  generate G gs =\n  (\\<lambda>x. finprod G x gs) ` (\\<Pi> a\\<in>gs. generate G {a})\n\ngoal (1 subgoal):\n 1. generate G gs =\n    (\\<lambda>x. finprod G x gs) ` (\\<Pi> a\\<in>gs. generate G {a})", "."], ["proof (state)\nthis:\n  generate G gs =\n  (\\<lambda>x. finprod G x gs) ` (\\<Pi> a\\<in>gs. generate G {a})\n\ngoal (1 subgoal):\n 1. generate G gs =\n    (\\<lambda>x. \\<Otimes>g\\<in>gs. g [^] x g) ` (gs \\<rightarrow> UNIV)", "also"], ["proof (state)\nthis:\n  generate G gs =\n  (\\<lambda>x. finprod G x gs) ` (\\<Pi> a\\<in>gs. generate G {a})\n\ngoal (1 subgoal):\n 1. generate G gs =\n    (\\<lambda>x. \\<Otimes>g\\<in>gs. g [^] x g) ` (gs \\<rightarrow> UNIV)", "have \"\\<dots> = (\\<lambda>x. finprod G (\\<lambda>g. g [^] x g) gs) ` Pi gs (\\<lambda>_. (UNIV::int set))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. finprod G x gs) ` (\\<Pi> a\\<in>gs. generate G {a}) =\n    (\\<lambda>x. \\<Otimes>g\\<in>gs. g [^] x g) ` (gs \\<rightarrow> UNIV)", "proof(rule; rule)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi> a\\<in>gs. generate G {a}) \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. \\<Otimes>g\\<in>gs. g [^] x g) `\n               (gs \\<rightarrow> UNIV)\n 2. \\<And>x.\n       x \\<in> (\\<lambda>x. \\<Otimes>g\\<in>gs. g [^] x g) `\n               (gs \\<rightarrow> UNIV) \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi> a\\<in>gs. generate G {a})", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi> a\\<in>gs. generate G {a}) \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. \\<Otimes>g\\<in>gs. g [^] x g) `\n               (gs \\<rightarrow> UNIV)\n 2. \\<And>x.\n       x \\<in> (\\<lambda>x. \\<Otimes>g\\<in>gs. g [^] x g) `\n               (gs \\<rightarrow> UNIV) \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi> a\\<in>gs. generate G {a})", "assume x: \"x \\<in> (\\<lambda>x. finprod G x gs) ` (\\<Pi> a\\<in>gs. generate G {a})\""], ["proof (state)\nthis:\n  x \\<in> (\\<lambda>x. finprod G x gs) ` (\\<Pi> a\\<in>gs. generate G {a})\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi> a\\<in>gs. generate G {a}) \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. \\<Otimes>g\\<in>gs. g [^] x g) `\n               (gs \\<rightarrow> UNIV)\n 2. \\<And>x.\n       x \\<in> (\\<lambda>x. \\<Otimes>g\\<in>gs. g [^] x g) `\n               (gs \\<rightarrow> UNIV) \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi> a\\<in>gs. generate G {a})", "then"], ["proof (chain)\npicking this:\n  x \\<in> (\\<lambda>x. finprod G x gs) ` (\\<Pi> a\\<in>gs. generate G {a})", "obtain f where f: \"f \\<in> (\\<Pi> a\\<in>gs. generate G {a})\" \"x = finprod G f gs\""], ["proof (prove)\nusing this:\n  x \\<in> (\\<lambda>x. finprod G x gs) ` (\\<Pi> a\\<in>gs. generate G {a})\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>f \\<in> (\\<Pi> a\\<in>gs. generate G {a});\n         x = finprod G f gs\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  f \\<in> (\\<Pi> a\\<in>gs. generate G {a})\n  x = finprod G f gs\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi> a\\<in>gs. generate G {a}) \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. \\<Otimes>g\\<in>gs. g [^] x g) `\n               (gs \\<rightarrow> UNIV)\n 2. \\<And>x.\n       x \\<in> (\\<lambda>x. \\<Otimes>g\\<in>gs. g [^] x g) `\n               (gs \\<rightarrow> UNIV) \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi> a\\<in>gs. generate G {a})", "hence \"\\<exists>k::int. f a = a [^] k\" if \"a \\<in> gs\" for a"], ["proof (prove)\nusing this:\n  f \\<in> (\\<Pi> a\\<in>gs. generate G {a})\n  x = finprod G f gs\n\ngoal (1 subgoal):\n 1. \\<exists>k. f a = a [^] k", "using generate_pow[of a] that assms(2)"], ["proof (prove)\nusing this:\n  f \\<in> (\\<Pi> a\\<in>gs. generate G {a})\n  x = finprod G f gs\n  a \\<in> carrier G \\<Longrightarrow>\n  generate G {a} = {a [^] k |k. k \\<in> UNIV}\n  a \\<in> gs\n  gs \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. \\<exists>k. f a = a [^] k", "by blast"], ["proof (state)\nthis:\n  ?a2 \\<in> gs \\<Longrightarrow> \\<exists>k. f ?a2 = ?a2 [^] k\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi> a\\<in>gs. generate G {a}) \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. \\<Otimes>g\\<in>gs. g [^] x g) `\n               (gs \\<rightarrow> UNIV)\n 2. \\<And>x.\n       x \\<in> (\\<lambda>x. \\<Otimes>g\\<in>gs. g [^] x g) `\n               (gs \\<rightarrow> UNIV) \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi> a\\<in>gs. generate G {a})", "hence \"\\<exists>(h::'a \\<Rightarrow> int). \\<forall>a\\<in>gs. f a = a [^] h a\""], ["proof (prove)\nusing this:\n  ?a2 \\<in> gs \\<Longrightarrow> \\<exists>k. f ?a2 = ?a2 [^] k\n\ngoal (1 subgoal):\n 1. \\<exists>h. \\<forall>a\\<in>gs. f a = a [^] h a", "by meson"], ["proof (state)\nthis:\n  \\<exists>h. \\<forall>a\\<in>gs. f a = a [^] h a\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi> a\\<in>gs. generate G {a}) \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. \\<Otimes>g\\<in>gs. g [^] x g) `\n               (gs \\<rightarrow> UNIV)\n 2. \\<And>x.\n       x \\<in> (\\<lambda>x. \\<Otimes>g\\<in>gs. g [^] x g) `\n               (gs \\<rightarrow> UNIV) \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi> a\\<in>gs. generate G {a})", "then"], ["proof (chain)\npicking this:\n  \\<exists>h. \\<forall>a\\<in>gs. f a = a [^] h a", "obtain h where h: \"\\<forall>a\\<in>gs. f a = a [^] h a\" \"h \\<in> gs \\<rightarrow> (UNIV :: int set)\""], ["proof (prove)\nusing this:\n  \\<exists>h. \\<forall>a\\<in>gs. f a = a [^] h a\n\ngoal (1 subgoal):\n 1. (\\<And>h.\n        \\<lbrakk>\\<forall>a\\<in>gs. f a = a [^] h a;\n         h \\<in> gs \\<rightarrow> UNIV\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  \\<forall>a\\<in>gs. f a = a [^] h a\n  h \\<in> gs \\<rightarrow> UNIV\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi> a\\<in>gs. generate G {a}) \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. \\<Otimes>g\\<in>gs. g [^] x g) `\n               (gs \\<rightarrow> UNIV)\n 2. \\<And>x.\n       x \\<in> (\\<lambda>x. \\<Otimes>g\\<in>gs. g [^] x g) `\n               (gs \\<rightarrow> UNIV) \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi> a\\<in>gs. generate G {a})", "have \"finprod G (\\<lambda>g. g [^] h g) gs = finprod G f gs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Otimes>g\\<in>gs. g [^] h g) = finprod G f gs", "by (intro finprod_cong, use int_pow_closed h assms(2) in auto)"], ["proof (state)\nthis:\n  (\\<Otimes>g\\<in>gs. g [^] h g) = finprod G f gs\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi> a\\<in>gs. generate G {a}) \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. \\<Otimes>g\\<in>gs. g [^] x g) `\n               (gs \\<rightarrow> UNIV)\n 2. \\<And>x.\n       x \\<in> (\\<lambda>x. \\<Otimes>g\\<in>gs. g [^] x g) `\n               (gs \\<rightarrow> UNIV) \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi> a\\<in>gs. generate G {a})", "with f"], ["proof (chain)\npicking this:\n  f \\<in> (\\<Pi> a\\<in>gs. generate G {a})\n  x = finprod G f gs\n  (\\<Otimes>g\\<in>gs. g [^] h g) = finprod G f gs", "have \"x = finprod G (\\<lambda>g. g [^] h g) gs\""], ["proof (prove)\nusing this:\n  f \\<in> (\\<Pi> a\\<in>gs. generate G {a})\n  x = finprod G f gs\n  (\\<Otimes>g\\<in>gs. g [^] h g) = finprod G f gs\n\ngoal (1 subgoal):\n 1. x = (\\<Otimes>g\\<in>gs. g [^] h g)", "by argo"], ["proof (state)\nthis:\n  x = (\\<Otimes>g\\<in>gs. g [^] h g)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi> a\\<in>gs. generate G {a}) \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. \\<Otimes>g\\<in>gs. g [^] x g) `\n               (gs \\<rightarrow> UNIV)\n 2. \\<And>x.\n       x \\<in> (\\<lambda>x. \\<Otimes>g\\<in>gs. g [^] x g) `\n               (gs \\<rightarrow> UNIV) \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi> a\\<in>gs. generate G {a})", "with h(2)"], ["proof (chain)\npicking this:\n  h \\<in> gs \\<rightarrow> UNIV\n  x = (\\<Otimes>g\\<in>gs. g [^] h g)", "show \"x \\<in> (\\<lambda>x. finprod G (\\<lambda>g. g [^] x g) gs) ` (gs \\<rightarrow> (UNIV::int set))\""], ["proof (prove)\nusing this:\n  h \\<in> gs \\<rightarrow> UNIV\n  x = (\\<Otimes>g\\<in>gs. g [^] h g)\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<lambda>x. \\<Otimes>g\\<in>gs. g [^] x g) `\n            (gs \\<rightarrow> UNIV)", "by auto"], ["proof (state)\nthis:\n  x \\<in> (\\<lambda>x. \\<Otimes>g\\<in>gs. g [^] x g) `\n          (gs \\<rightarrow> UNIV)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. \\<Otimes>g\\<in>gs. g [^] x g) `\n               (gs \\<rightarrow> UNIV) \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi> a\\<in>gs. generate G {a})", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. \\<Otimes>g\\<in>gs. g [^] x g) `\n               (gs \\<rightarrow> UNIV) \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi> a\\<in>gs. generate G {a})", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. \\<Otimes>g\\<in>gs. g [^] x g) `\n               (gs \\<rightarrow> UNIV) \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi> a\\<in>gs. generate G {a})", "assume x: \"x \\<in> (\\<lambda>x. finprod G (\\<lambda>g. g [^] x g) gs) ` (gs \\<rightarrow> (UNIV::int set))\""], ["proof (state)\nthis:\n  x \\<in> (\\<lambda>x. \\<Otimes>g\\<in>gs. g [^] x g) `\n          (gs \\<rightarrow> UNIV)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. \\<Otimes>g\\<in>gs. g [^] x g) `\n               (gs \\<rightarrow> UNIV) \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi> a\\<in>gs. generate G {a})", "then"], ["proof (chain)\npicking this:\n  x \\<in> (\\<lambda>x. \\<Otimes>g\\<in>gs. g [^] x g) `\n          (gs \\<rightarrow> UNIV)", "obtain h where h: \"x = finprod G (\\<lambda>g. g [^] h g) gs\" \"h \\<in> gs \\<rightarrow> (UNIV :: int set)\""], ["proof (prove)\nusing this:\n  x \\<in> (\\<lambda>x. \\<Otimes>g\\<in>gs. g [^] x g) `\n          (gs \\<rightarrow> UNIV)\n\ngoal (1 subgoal):\n 1. (\\<And>h.\n        \\<lbrakk>x = (\\<Otimes>g\\<in>gs. g [^] h g);\n         h \\<in> gs \\<rightarrow> UNIV\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  x = (\\<Otimes>g\\<in>gs. g [^] h g)\n  h \\<in> gs \\<rightarrow> UNIV\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. \\<Otimes>g\\<in>gs. g [^] x g) `\n               (gs \\<rightarrow> UNIV) \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi> a\\<in>gs. generate G {a})", "hence \"\\<exists>k\\<in>generate G {a}. a [^] h a = k\" if \"a \\<in> gs\" for a"], ["proof (prove)\nusing this:\n  x = (\\<Otimes>g\\<in>gs. g [^] h g)\n  h \\<in> gs \\<rightarrow> UNIV\n\ngoal (1 subgoal):\n 1. \\<exists>k\\<in>generate G {a}. a [^] h a = k", "using generate_pow[of a] that assms(2)"], ["proof (prove)\nusing this:\n  x = (\\<Otimes>g\\<in>gs. g [^] h g)\n  h \\<in> gs \\<rightarrow> UNIV\n  a \\<in> carrier G \\<Longrightarrow>\n  generate G {a} = {a [^] k |k. k \\<in> UNIV}\n  a \\<in> gs\n  gs \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. \\<exists>k\\<in>generate G {a}. a [^] h a = k", "by blast"], ["proof (state)\nthis:\n  ?a2 \\<in> gs \\<Longrightarrow>\n  \\<exists>k\\<in>generate G {?a2}. ?a2 [^] h ?a2 = k\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. \\<Otimes>g\\<in>gs. g [^] x g) `\n               (gs \\<rightarrow> UNIV) \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi> a\\<in>gs. generate G {a})", "then"], ["proof (chain)\npicking this:\n  ?a2 \\<in> gs \\<Longrightarrow>\n  \\<exists>k\\<in>generate G {?a2}. ?a2 [^] h ?a2 = k", "obtain f where f: \"\\<forall>a\\<in>gs. a [^] h a = f a\" \"f \\<in> (\\<Pi> a\\<in>gs. generate G {a})\""], ["proof (prove)\nusing this:\n  ?a2 \\<in> gs \\<Longrightarrow>\n  \\<exists>k\\<in>generate G {?a2}. ?a2 [^] h ?a2 = k\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>\\<forall>a\\<in>gs. a [^] h a = f a;\n         f \\<in> (\\<Pi> a\\<in>gs. generate G {a})\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fast"], ["proof (state)\nthis:\n  \\<forall>a\\<in>gs. a [^] h a = f a\n  f \\<in> (\\<Pi> a\\<in>gs. generate G {a})\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. \\<Otimes>g\\<in>gs. g [^] x g) `\n               (gs \\<rightarrow> UNIV) \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi> a\\<in>gs. generate G {a})", "have \"finprod G f gs = finprod G (\\<lambda>g. g [^] h g) gs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G f gs = (\\<Otimes>g\\<in>gs. g [^] h g)", "proof(intro finprod_cong)"], ["proof (state)\ngoal (3 subgoals):\n 1. gs = gs\n 2. (f \\<in> gs \\<rightarrow> carrier G) = True\n 3. \\<And>i. i \\<in> gs =simp=> f i = i [^] h i", "have \"f a \\<in> carrier G\" if \"a \\<in> gs\" for a"], ["proof (prove)\ngoal (1 subgoal):\n 1. f a \\<in> carrier G", "using generate_incl[of \"{a}\"] assms(2) that f(2)"], ["proof (prove)\nusing this:\n  {a} \\<subseteq> carrier G \\<Longrightarrow>\n  generate G {a} \\<subseteq> carrier G\n  gs \\<subseteq> carrier G\n  a \\<in> gs\n  f \\<in> (\\<Pi> a\\<in>gs. generate G {a})\n\ngoal (1 subgoal):\n 1. f a \\<in> carrier G", "by fast"], ["proof (state)\nthis:\n  ?a2 \\<in> gs \\<Longrightarrow> f ?a2 \\<in> carrier G\n\ngoal (3 subgoals):\n 1. gs = gs\n 2. (f \\<in> gs \\<rightarrow> carrier G) = True\n 3. \\<And>i. i \\<in> gs =simp=> f i = i [^] h i", "thus \"(f \\<in> gs \\<rightarrow> carrier G) = True\""], ["proof (prove)\nusing this:\n  ?a2 \\<in> gs \\<Longrightarrow> f ?a2 \\<in> carrier G\n\ngoal (1 subgoal):\n 1. (f \\<in> gs \\<rightarrow> carrier G) = True", "by blast"], ["proof (state)\nthis:\n  (f \\<in> gs \\<rightarrow> carrier G) = True\n\ngoal (2 subgoals):\n 1. gs = gs\n 2. \\<And>i. i \\<in> gs =simp=> f i = i [^] h i", "qed (use f in auto)"], ["proof (state)\nthis:\n  finprod G f gs = (\\<Otimes>g\\<in>gs. g [^] h g)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. \\<Otimes>g\\<in>gs. g [^] x g) `\n               (gs \\<rightarrow> UNIV) \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi> a\\<in>gs. generate G {a})", "with h"], ["proof (chain)\npicking this:\n  x = (\\<Otimes>g\\<in>gs. g [^] h g)\n  h \\<in> gs \\<rightarrow> UNIV\n  finprod G f gs = (\\<Otimes>g\\<in>gs. g [^] h g)", "have \"x = finprod G f gs\""], ["proof (prove)\nusing this:\n  x = (\\<Otimes>g\\<in>gs. g [^] h g)\n  h \\<in> gs \\<rightarrow> UNIV\n  finprod G f gs = (\\<Otimes>g\\<in>gs. g [^] h g)\n\ngoal (1 subgoal):\n 1. x = finprod G f gs", "by argo"], ["proof (state)\nthis:\n  x = finprod G f gs\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. \\<Otimes>g\\<in>gs. g [^] x g) `\n               (gs \\<rightarrow> UNIV) \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. finprod G x gs) `\n               (\\<Pi> a\\<in>gs. generate G {a})", "with f(2)"], ["proof (chain)\npicking this:\n  f \\<in> (\\<Pi> a\\<in>gs. generate G {a})\n  x = finprod G f gs", "show \"x \\<in> (\\<lambda>x. finprod G x gs) ` (\\<Pi> a\\<in>gs. generate G {a})\""], ["proof (prove)\nusing this:\n  f \\<in> (\\<Pi> a\\<in>gs. generate G {a})\n  x = finprod G f gs\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<lambda>x. finprod G x gs) ` (\\<Pi> a\\<in>gs. generate G {a})", "by blast"], ["proof (state)\nthis:\n  x \\<in> (\\<lambda>x. finprod G x gs) ` (\\<Pi> a\\<in>gs. generate G {a})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>x. finprod G x gs) ` (\\<Pi> a\\<in>gs. generate G {a}) =\n  (\\<lambda>x. \\<Otimes>g\\<in>gs. g [^] x g) ` (gs \\<rightarrow> UNIV)\n\ngoal (1 subgoal):\n 1. generate G gs =\n    (\\<lambda>x. \\<Otimes>g\\<in>gs. g [^] x g) ` (gs \\<rightarrow> UNIV)", "finally"], ["proof (chain)\npicking this:\n  generate G gs =\n  (\\<lambda>x. \\<Otimes>g\\<in>gs. g [^] x g) ` (gs \\<rightarrow> UNIV)", "show ?thesis"], ["proof (prove)\nusing this:\n  generate G gs =\n  (\\<lambda>x. \\<Otimes>g\\<in>gs. g [^] x g) ` (gs \\<rightarrow> UNIV)\n\ngoal (1 subgoal):\n 1. generate G gs =\n    (\\<lambda>x. \\<Otimes>g\\<in>gs. g [^] x g) ` (gs \\<rightarrow> UNIV)", "."], ["proof (state)\nthis:\n  generate G gs =\n  (\\<lambda>x. \\<Otimes>g\\<in>gs. g [^] x g) ` (gs \\<rightarrow> UNIV)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in comm_group) IDirProds_eq_finprod_PiE:\n  assumes \"finite I\" \"\\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\"\n  shows \"IDirProds G S I = (\\<lambda>x. finprod G x I) ` (Pi\\<^sub>E I S)\" (is \"?DP = ?fp\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. IDirProds G S I = (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. IDirProds G S I \\<subseteq> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n 2. (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S \\<subseteq> IDirProds G S I", "show \"?fp \\<subseteq> ?DP\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S \\<subseteq> IDirProds G S I", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. finprod G x I) `\n               Pi\\<^sub>E I S \\<Longrightarrow>\n       x \\<in> IDirProds G S I", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. finprod G x I) `\n               Pi\\<^sub>E I S \\<Longrightarrow>\n       x \\<in> IDirProds G S I", "assume x: \"x \\<in> ?fp\""], ["proof (state)\nthis:\n  x \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. finprod G x I) `\n               Pi\\<^sub>E I S \\<Longrightarrow>\n       x \\<in> IDirProds G S I", "then"], ["proof (chain)\npicking this:\n  x \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "obtain f where f: \"f \\<in> (Pi\\<^sub>E I S)\" \"x = finprod G f I\""], ["proof (prove)\nusing this:\n  x \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>f \\<in> Pi\\<^sub>E I S; x = finprod G f I\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  f \\<in> Pi\\<^sub>E I S\n  x = finprod G f I\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. finprod G x I) `\n               Pi\\<^sub>E I S \\<Longrightarrow>\n       x \\<in> IDirProds G S I", "have sDP: \"subgroup ?DP G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup (IDirProds G S I) G", "by (intro IDirProds_is_subgroup; use subgroup.subset[OF assms(2)] in blast)"], ["proof (state)\nthis:\n  subgroup (IDirProds G S I) G\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. finprod G x I) `\n               Pi\\<^sub>E I S \\<Longrightarrow>\n       x \\<in> IDirProds G S I", "have \"finprod G f I \\<in> ?DP\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G f I \\<in> IDirProds G S I", "proof(intro finprod_closed_subgroup[OF sDP])"], ["proof (state)\ngoal (1 subgoal):\n 1. f \\<in> I \\<rightarrow> IDirProds G S I", "have \"f i \\<in> IDirProds G S I\" if \"i \\<in> I\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. f i \\<in> IDirProds G S I", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. f i \\<in> ?A\n 2. ?A \\<subseteq> IDirProds G S I", "show \"f i \\<in> (S i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f i \\<in> S i", "using f(1) that"], ["proof (prove)\nusing this:\n  f \\<in> Pi\\<^sub>E I S\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. f i \\<in> S i", "by auto"], ["proof (state)\nthis:\n  f i \\<in> S i\n\ngoal (1 subgoal):\n 1. S i \\<subseteq> IDirProds G S I", "show \"(S i) \\<subseteq> IDirProds G S I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S i \\<subseteq> IDirProds G S I", "by (intro IDirProds_incl[OF that])"], ["proof (state)\nthis:\n  S i \\<subseteq> IDirProds G S I\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?i2 \\<in> I \\<Longrightarrow> f ?i2 \\<in> IDirProds G S I\n\ngoal (1 subgoal):\n 1. f \\<in> I \\<rightarrow> IDirProds G S I", "thus \"f \\<in> I \\<rightarrow> IDirProds G S I\""], ["proof (prove)\nusing this:\n  ?i2 \\<in> I \\<Longrightarrow> f ?i2 \\<in> IDirProds G S I\n\ngoal (1 subgoal):\n 1. f \\<in> I \\<rightarrow> IDirProds G S I", "by simp"], ["proof (state)\nthis:\n  f \\<in> I \\<rightarrow> IDirProds G S I\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finprod G f I \\<in> IDirProds G S I\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. finprod G x I) `\n               Pi\\<^sub>E I S \\<Longrightarrow>\n       x \\<in> IDirProds G S I", "thus \"x \\<in> ?DP\""], ["proof (prove)\nusing this:\n  finprod G f I \\<in> IDirProds G S I\n\ngoal (1 subgoal):\n 1. x \\<in> IDirProds G S I", "using f"], ["proof (prove)\nusing this:\n  finprod G f I \\<in> IDirProds G S I\n  f \\<in> Pi\\<^sub>E I S\n  x = finprod G f I\n\ngoal (1 subgoal):\n 1. x \\<in> IDirProds G S I", "by blast"], ["proof (state)\nthis:\n  x \\<in> IDirProds G S I\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S \\<subseteq> IDirProds G S I\n\ngoal (1 subgoal):\n 1. IDirProds G S I \\<subseteq> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "show \"?DP \\<subseteq> ?fp\""], ["proof (prove)\ngoal (1 subgoal):\n 1. IDirProds G S I \\<subseteq> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "proof(unfold IDirProds_def; rule subsetI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> generate G (\\<Union> (S ` I)) \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> generate G (\\<Union> (S ` I)) \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "assume x: \"x \\<in> generate G (\\<Union>(S ` I))\""], ["proof (state)\nthis:\n  x \\<in> generate G (\\<Union> (S ` I))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> generate G (\\<Union> (S ` I)) \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "thus \"x \\<in> ?fp\""], ["proof (prove)\nusing this:\n  x \\<in> generate G (\\<Union> (S ` I))\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> generate G (\\<Union> (S ` I))\n  finite I\n  ?i2 \\<in> I \\<Longrightarrow> subgroup (S ?i2) G\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "proof (induction rule: generate.induct)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<lbrakk>finite I;\n     \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n    \\<Longrightarrow> \\<one>\n                      \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n 2. \\<And>h.\n       \\<lbrakk>h \\<in> \\<Union> (S ` I); finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h \\<in> (\\<lambda>x. finprod G x I) `\n                                 Pi\\<^sub>E I S\n 3. \\<And>h.\n       \\<lbrakk>h \\<in> \\<Union> (S ` I); finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> inv h\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n 4. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h1 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        h2 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h2 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "case one"], ["proof (state)\nthis:\n  finite I\n  ?i2 \\<in> I \\<Longrightarrow> subgroup (S ?i2) G\n\ngoal (4 subgoals):\n 1. \\<lbrakk>finite I;\n     \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n    \\<Longrightarrow> \\<one>\n                      \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n 2. \\<And>h.\n       \\<lbrakk>h \\<in> \\<Union> (S ` I); finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h \\<in> (\\<lambda>x. finprod G x I) `\n                                 Pi\\<^sub>E I S\n 3. \\<And>h.\n       \\<lbrakk>h \\<in> \\<Union> (S ` I); finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> inv h\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n 4. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h1 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        h2 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h2 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "define g where g: \"g = (\\<lambda>x. if x \\<in> I then \\<one> else undefined)\""], ["proof (state)\nthis:\n  g = (\\<lambda>x. if x \\<in> I then \\<one> else undefined)\n\ngoal (4 subgoals):\n 1. \\<lbrakk>finite I;\n     \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n    \\<Longrightarrow> \\<one>\n                      \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n 2. \\<And>h.\n       \\<lbrakk>h \\<in> \\<Union> (S ` I); finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h \\<in> (\\<lambda>x. finprod G x I) `\n                                 Pi\\<^sub>E I S\n 3. \\<And>h.\n       \\<lbrakk>h \\<in> \\<Union> (S ` I); finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> inv h\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n 4. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h1 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        h2 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h2 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "then"], ["proof (chain)\npicking this:\n  g = (\\<lambda>x. if x \\<in> I then \\<one> else undefined)", "have \"g \\<in> Pi\\<^sub>E I S\""], ["proof (prove)\nusing this:\n  g = (\\<lambda>x. if x \\<in> I then \\<one> else undefined)\n\ngoal (1 subgoal):\n 1. g \\<in> Pi\\<^sub>E I S", "using subgroup.one_closed[OF one(2)]"], ["proof (prove)\nusing this:\n  g = (\\<lambda>x. if x \\<in> I then \\<one> else undefined)\n  ?i3 \\<in> I \\<Longrightarrow> \\<one> \\<in> S ?i3\n\ngoal (1 subgoal):\n 1. g \\<in> Pi\\<^sub>E I S", "by auto"], ["proof (state)\nthis:\n  g \\<in> Pi\\<^sub>E I S\n\ngoal (4 subgoals):\n 1. \\<lbrakk>finite I;\n     \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n    \\<Longrightarrow> \\<one>\n                      \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n 2. \\<And>h.\n       \\<lbrakk>h \\<in> \\<Union> (S ` I); finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h \\<in> (\\<lambda>x. finprod G x I) `\n                                 Pi\\<^sub>E I S\n 3. \\<And>h.\n       \\<lbrakk>h \\<in> \\<Union> (S ` I); finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> inv h\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n 4. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h1 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        h2 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h2 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "moreover"], ["proof (state)\nthis:\n  g \\<in> Pi\\<^sub>E I S\n\ngoal (4 subgoals):\n 1. \\<lbrakk>finite I;\n     \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n    \\<Longrightarrow> \\<one>\n                      \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n 2. \\<And>h.\n       \\<lbrakk>h \\<in> \\<Union> (S ` I); finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h \\<in> (\\<lambda>x. finprod G x I) `\n                                 Pi\\<^sub>E I S\n 3. \\<And>h.\n       \\<lbrakk>h \\<in> \\<Union> (S ` I); finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> inv h\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n 4. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h1 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        h2 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h2 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "have \"finprod G g I = \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G g I = \\<one>", "by (intro finprod_one_eqI; use g in simp)"], ["proof (state)\nthis:\n  finprod G g I = \\<one>\n\ngoal (4 subgoals):\n 1. \\<lbrakk>finite I;\n     \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n    \\<Longrightarrow> \\<one>\n                      \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n 2. \\<And>h.\n       \\<lbrakk>h \\<in> \\<Union> (S ` I); finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h \\<in> (\\<lambda>x. finprod G x I) `\n                                 Pi\\<^sub>E I S\n 3. \\<And>h.\n       \\<lbrakk>h \\<in> \\<Union> (S ` I); finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> inv h\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n 4. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h1 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        h2 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h2 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "ultimately"], ["proof (chain)\npicking this:\n  g \\<in> Pi\\<^sub>E I S\n  finprod G g I = \\<one>", "show ?case"], ["proof (prove)\nusing this:\n  g \\<in> Pi\\<^sub>E I S\n  finprod G g I = \\<one>\n\ngoal (1 subgoal):\n 1. \\<one> \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "unfolding image_def"], ["proof (prove)\nusing this:\n  g \\<in> Pi\\<^sub>E I S\n  finprod G g I = \\<one>\n\ngoal (1 subgoal):\n 1. \\<one> \\<in> {y. \\<exists>x\\<in>Pi\\<^sub>E I S. y = finprod G x I}", "by (auto; metis)"], ["proof (state)\nthis:\n  \\<one> \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n\ngoal (3 subgoals):\n 1. \\<And>h.\n       \\<lbrakk>h \\<in> \\<Union> (S ` I); finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h \\<in> (\\<lambda>x. finprod G x I) `\n                                 Pi\\<^sub>E I S\n 2. \\<And>h.\n       \\<lbrakk>h \\<in> \\<Union> (S ` I); finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> inv h\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n 3. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h1 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        h2 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h2 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>h.\n       \\<lbrakk>h \\<in> \\<Union> (S ` I); finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h \\<in> (\\<lambda>x. finprod G x I) `\n                                 Pi\\<^sub>E I S\n 2. \\<And>h.\n       \\<lbrakk>h \\<in> \\<Union> (S ` I); finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> inv h\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n 3. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h1 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        h2 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h2 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "case i: (incl h)"], ["proof (state)\nthis:\n  h \\<in> \\<Union> (S ` I)\n  finite I\n  ?i2 \\<in> I \\<Longrightarrow> subgroup (S ?i2) G\n\ngoal (3 subgoals):\n 1. \\<And>h.\n       \\<lbrakk>h \\<in> \\<Union> (S ` I); finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h \\<in> (\\<lambda>x. finprod G x I) `\n                                 Pi\\<^sub>E I S\n 2. \\<And>h.\n       \\<lbrakk>h \\<in> \\<Union> (S ` I); finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> inv h\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n 3. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h1 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        h2 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h2 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "from i"], ["proof (chain)\npicking this:\n  h \\<in> \\<Union> (S ` I)\n  finite I\n  ?i2 \\<in> I \\<Longrightarrow> subgroup (S ?i2) G", "obtain j where j: \"j \\<in> I\" \"h \\<in> (S j)\""], ["proof (prove)\nusing this:\n  h \\<in> \\<Union> (S ` I)\n  finite I\n  ?i2 \\<in> I \\<Longrightarrow> subgroup (S ?i2) G\n\ngoal (1 subgoal):\n 1. (\\<And>j.\n        \\<lbrakk>j \\<in> I; h \\<in> S j\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  j \\<in> I\n  h \\<in> S j\n\ngoal (3 subgoals):\n 1. \\<And>h.\n       \\<lbrakk>h \\<in> \\<Union> (S ` I); finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h \\<in> (\\<lambda>x. finprod G x I) `\n                                 Pi\\<^sub>E I S\n 2. \\<And>h.\n       \\<lbrakk>h \\<in> \\<Union> (S ` I); finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> inv h\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n 3. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h1 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        h2 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h2 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "define hf where \"hf = (\\<lambda>x. (if x \\<in> I then \\<one> else undefined))(j := h)\""], ["proof (state)\nthis:\n  hf = (\\<lambda>x. if x \\<in> I then \\<one> else undefined)(j := h)\n\ngoal (3 subgoals):\n 1. \\<And>h.\n       \\<lbrakk>h \\<in> \\<Union> (S ` I); finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h \\<in> (\\<lambda>x. finprod G x I) `\n                                 Pi\\<^sub>E I S\n 2. \\<And>h.\n       \\<lbrakk>h \\<in> \\<Union> (S ` I); finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> inv h\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n 3. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h1 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        h2 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h2 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "with j"], ["proof (chain)\npicking this:\n  j \\<in> I\n  h \\<in> S j\n  hf = (\\<lambda>x. if x \\<in> I then \\<one> else undefined)(j := h)", "have \"hf \\<in> Pi\\<^sub>E I S\""], ["proof (prove)\nusing this:\n  j \\<in> I\n  h \\<in> S j\n  hf = (\\<lambda>x. if x \\<in> I then \\<one> else undefined)(j := h)\n\ngoal (1 subgoal):\n 1. hf \\<in> Pi\\<^sub>E I S", "using subgroup.one_closed[OF i(3)]"], ["proof (prove)\nusing this:\n  j \\<in> I\n  h \\<in> S j\n  hf = (\\<lambda>x. if x \\<in> I then \\<one> else undefined)(j := h)\n  ?i3 \\<in> I \\<Longrightarrow> \\<one> \\<in> S ?i3\n\ngoal (1 subgoal):\n 1. hf \\<in> Pi\\<^sub>E I S", "by force"], ["proof (state)\nthis:\n  hf \\<in> Pi\\<^sub>E I S\n\ngoal (3 subgoals):\n 1. \\<And>h.\n       \\<lbrakk>h \\<in> \\<Union> (S ` I); finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h \\<in> (\\<lambda>x. finprod G x I) `\n                                 Pi\\<^sub>E I S\n 2. \\<And>h.\n       \\<lbrakk>h \\<in> \\<Union> (S ` I); finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> inv h\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n 3. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h1 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        h2 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h2 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "moreover"], ["proof (state)\nthis:\n  hf \\<in> Pi\\<^sub>E I S\n\ngoal (3 subgoals):\n 1. \\<And>h.\n       \\<lbrakk>h \\<in> \\<Union> (S ` I); finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h \\<in> (\\<lambda>x. finprod G x I) `\n                                 Pi\\<^sub>E I S\n 2. \\<And>h.\n       \\<lbrakk>h \\<in> \\<Union> (S ` I); finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> inv h\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n 3. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h1 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        h2 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h2 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "have \"finprod G hf I = h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G hf I = h", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finprod G hf I = h", "have \"finprod G hf I = hf j \\<otimes> finprod G hf (I - {j})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G hf I = hf j \\<otimes> finprod G hf (I - {j})", "by (intro finprod_minus, use assms hf_def subgroup.subset[OF i(3)[OF j(1)]] j in auto)"], ["proof (state)\nthis:\n  finprod G hf I = hf j \\<otimes> finprod G hf (I - {j})\n\ngoal (1 subgoal):\n 1. finprod G hf I = h", "moreover"], ["proof (state)\nthis:\n  finprod G hf I = hf j \\<otimes> finprod G hf (I - {j})\n\ngoal (1 subgoal):\n 1. finprod G hf I = h", "have \"hf j = h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hf j = h", "using hf_def"], ["proof (prove)\nusing this:\n  hf = (\\<lambda>x. if x \\<in> I then \\<one> else undefined)(j := h)\n\ngoal (1 subgoal):\n 1. hf j = h", "by simp"], ["proof (state)\nthis:\n  hf j = h\n\ngoal (1 subgoal):\n 1. finprod G hf I = h", "moreover"], ["proof (state)\nthis:\n  hf j = h\n\ngoal (1 subgoal):\n 1. finprod G hf I = h", "have \"finprod G hf (I - {j}) = \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G hf (I - {j}) = \\<one>", "by (rule finprod_one_eqI; use hf_def in simp)"], ["proof (state)\nthis:\n  finprod G hf (I - {j}) = \\<one>\n\ngoal (1 subgoal):\n 1. finprod G hf I = h", "ultimately"], ["proof (chain)\npicking this:\n  finprod G hf I = hf j \\<otimes> finprod G hf (I - {j})\n  hf j = h\n  finprod G hf (I - {j}) = \\<one>", "show ?thesis"], ["proof (prove)\nusing this:\n  finprod G hf I = hf j \\<otimes> finprod G hf (I - {j})\n  hf j = h\n  finprod G hf (I - {j}) = \\<one>\n\ngoal (1 subgoal):\n 1. finprod G hf I = h", "using subgroup.subset[OF i(3)[OF j(1)]] j(2)"], ["proof (prove)\nusing this:\n  finprod G hf I = hf j \\<otimes> finprod G hf (I - {j})\n  hf j = h\n  finprod G hf (I - {j}) = \\<one>\n  S j \\<subseteq> carrier G\n  h \\<in> S j\n\ngoal (1 subgoal):\n 1. finprod G hf I = h", "by auto"], ["proof (state)\nthis:\n  finprod G hf I = h\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finprod G hf I = h\n\ngoal (3 subgoals):\n 1. \\<And>h.\n       \\<lbrakk>h \\<in> \\<Union> (S ` I); finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h \\<in> (\\<lambda>x. finprod G x I) `\n                                 Pi\\<^sub>E I S\n 2. \\<And>h.\n       \\<lbrakk>h \\<in> \\<Union> (S ` I); finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> inv h\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n 3. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h1 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        h2 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h2 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "ultimately"], ["proof (chain)\npicking this:\n  hf \\<in> Pi\\<^sub>E I S\n  finprod G hf I = h", "show ?case"], ["proof (prove)\nusing this:\n  hf \\<in> Pi\\<^sub>E I S\n  finprod G hf I = h\n\ngoal (1 subgoal):\n 1. h \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "unfolding image_def"], ["proof (prove)\nusing this:\n  hf \\<in> Pi\\<^sub>E I S\n  finprod G hf I = h\n\ngoal (1 subgoal):\n 1. h \\<in> {y. \\<exists>x\\<in>Pi\\<^sub>E I S. y = finprod G x I}", "by (auto; metis)"], ["proof (state)\nthis:\n  h \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n\ngoal (2 subgoals):\n 1. \\<And>h.\n       \\<lbrakk>h \\<in> \\<Union> (S ` I); finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> inv h\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n 2. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h1 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        h2 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h2 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>h.\n       \\<lbrakk>h \\<in> \\<Union> (S ` I); finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> inv h\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n 2. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h1 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        h2 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h2 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "case i: (inv h)"], ["proof (state)\nthis:\n  h \\<in> \\<Union> (S ` I)\n  finite I\n  ?i2 \\<in> I \\<Longrightarrow> subgroup (S ?i2) G\n\ngoal (2 subgoals):\n 1. \\<And>h.\n       \\<lbrakk>h \\<in> \\<Union> (S ` I); finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> inv h\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n 2. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h1 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        h2 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h2 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "from i"], ["proof (chain)\npicking this:\n  h \\<in> \\<Union> (S ` I)\n  finite I\n  ?i2 \\<in> I \\<Longrightarrow> subgroup (S ?i2) G", "obtain j where j: \"j \\<in> I\" \"h \\<in> (S j)\""], ["proof (prove)\nusing this:\n  h \\<in> \\<Union> (S ` I)\n  finite I\n  ?i2 \\<in> I \\<Longrightarrow> subgroup (S ?i2) G\n\ngoal (1 subgoal):\n 1. (\\<And>j.\n        \\<lbrakk>j \\<in> I; h \\<in> S j\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  j \\<in> I\n  h \\<in> S j\n\ngoal (2 subgoals):\n 1. \\<And>h.\n       \\<lbrakk>h \\<in> \\<Union> (S ` I); finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> inv h\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n 2. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h1 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        h2 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h2 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "have ih: \"inv h \\<in> (S j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv h \\<in> S j", "using subgroup.m_inv_closed[OF i(3)[OF j(1)] j(2)]"], ["proof (prove)\nusing this:\n  inv h \\<in> S j\n\ngoal (1 subgoal):\n 1. inv h \\<in> S j", "."], ["proof (state)\nthis:\n  inv h \\<in> S j\n\ngoal (2 subgoals):\n 1. \\<And>h.\n       \\<lbrakk>h \\<in> \\<Union> (S ` I); finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> inv h\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n 2. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h1 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        h2 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h2 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "define hf where \"hf = (\\<lambda>x. (if x \\<in> I then \\<one> else undefined))(j := inv h)\""], ["proof (state)\nthis:\n  hf = (\\<lambda>x. if x \\<in> I then \\<one> else undefined)(j := inv h)\n\ngoal (2 subgoals):\n 1. \\<And>h.\n       \\<lbrakk>h \\<in> \\<Union> (S ` I); finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> inv h\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n 2. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h1 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        h2 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h2 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "with j ih"], ["proof (chain)\npicking this:\n  j \\<in> I\n  h \\<in> S j\n  inv h \\<in> S j\n  hf = (\\<lambda>x. if x \\<in> I then \\<one> else undefined)(j := inv h)", "have \"hf \\<in> Pi\\<^sub>E I S\""], ["proof (prove)\nusing this:\n  j \\<in> I\n  h \\<in> S j\n  inv h \\<in> S j\n  hf = (\\<lambda>x. if x \\<in> I then \\<one> else undefined)(j := inv h)\n\ngoal (1 subgoal):\n 1. hf \\<in> Pi\\<^sub>E I S", "using subgroup.one_closed[OF i(3)]"], ["proof (prove)\nusing this:\n  j \\<in> I\n  h \\<in> S j\n  inv h \\<in> S j\n  hf = (\\<lambda>x. if x \\<in> I then \\<one> else undefined)(j := inv h)\n  ?i3 \\<in> I \\<Longrightarrow> \\<one> \\<in> S ?i3\n\ngoal (1 subgoal):\n 1. hf \\<in> Pi\\<^sub>E I S", "by force"], ["proof (state)\nthis:\n  hf \\<in> Pi\\<^sub>E I S\n\ngoal (2 subgoals):\n 1. \\<And>h.\n       \\<lbrakk>h \\<in> \\<Union> (S ` I); finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> inv h\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n 2. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h1 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        h2 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h2 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "moreover"], ["proof (state)\nthis:\n  hf \\<in> Pi\\<^sub>E I S\n\ngoal (2 subgoals):\n 1. \\<And>h.\n       \\<lbrakk>h \\<in> \\<Union> (S ` I); finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> inv h\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n 2. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h1 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        h2 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h2 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "have \"finprod G hf I = inv h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G hf I = inv h", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finprod G hf I = inv h", "have \"finprod G hf I = hf j \\<otimes> finprod G hf (I - {j})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G hf I = hf j \\<otimes> finprod G hf (I - {j})", "by (intro finprod_minus, use assms hf_def subgroup.subset[OF i(3)[OF j(1)]] j in auto)"], ["proof (state)\nthis:\n  finprod G hf I = hf j \\<otimes> finprod G hf (I - {j})\n\ngoal (1 subgoal):\n 1. finprod G hf I = inv h", "moreover"], ["proof (state)\nthis:\n  finprod G hf I = hf j \\<otimes> finprod G hf (I - {j})\n\ngoal (1 subgoal):\n 1. finprod G hf I = inv h", "have \"hf j = inv h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hf j = inv h", "using hf_def"], ["proof (prove)\nusing this:\n  hf = (\\<lambda>x. if x \\<in> I then \\<one> else undefined)(j := inv h)\n\ngoal (1 subgoal):\n 1. hf j = inv h", "by simp"], ["proof (state)\nthis:\n  hf j = inv h\n\ngoal (1 subgoal):\n 1. finprod G hf I = inv h", "moreover"], ["proof (state)\nthis:\n  hf j = inv h\n\ngoal (1 subgoal):\n 1. finprod G hf I = inv h", "have \"finprod G hf (I - {j}) = \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G hf (I - {j}) = \\<one>", "by (rule finprod_one_eqI; use hf_def in simp)"], ["proof (state)\nthis:\n  finprod G hf (I - {j}) = \\<one>\n\ngoal (1 subgoal):\n 1. finprod G hf I = inv h", "ultimately"], ["proof (chain)\npicking this:\n  finprod G hf I = hf j \\<otimes> finprod G hf (I - {j})\n  hf j = inv h\n  finprod G hf (I - {j}) = \\<one>", "show ?thesis"], ["proof (prove)\nusing this:\n  finprod G hf I = hf j \\<otimes> finprod G hf (I - {j})\n  hf j = inv h\n  finprod G hf (I - {j}) = \\<one>\n\ngoal (1 subgoal):\n 1. finprod G hf I = inv h", "using subgroup.subset[OF i(3)[OF j(1)]] j(2)"], ["proof (prove)\nusing this:\n  finprod G hf I = hf j \\<otimes> finprod G hf (I - {j})\n  hf j = inv h\n  finprod G hf (I - {j}) = \\<one>\n  S j \\<subseteq> carrier G\n  h \\<in> S j\n\ngoal (1 subgoal):\n 1. finprod G hf I = inv h", "by auto"], ["proof (state)\nthis:\n  finprod G hf I = inv h\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finprod G hf I = inv h\n\ngoal (2 subgoals):\n 1. \\<And>h.\n       \\<lbrakk>h \\<in> \\<Union> (S ` I); finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> inv h\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n 2. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h1 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        h2 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h2 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "ultimately"], ["proof (chain)\npicking this:\n  hf \\<in> Pi\\<^sub>E I S\n  finprod G hf I = inv h", "show ?case"], ["proof (prove)\nusing this:\n  hf \\<in> Pi\\<^sub>E I S\n  finprod G hf I = inv h\n\ngoal (1 subgoal):\n 1. inv h \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "unfolding image_def"], ["proof (prove)\nusing this:\n  hf \\<in> Pi\\<^sub>E I S\n  finprod G hf I = inv h\n\ngoal (1 subgoal):\n 1. inv h \\<in> {y. \\<exists>x\\<in>Pi\\<^sub>E I S. y = finprod G x I}", "by (auto; metis)"], ["proof (state)\nthis:\n  inv h \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n\ngoal (1 subgoal):\n 1. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h1 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        h2 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h2 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h1 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        h2 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h2 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "case e: (eng a b)"], ["proof (state)\nthis:\n  a \\<in> generate G (\\<Union> (S ` I))\n  b \\<in> generate G (\\<Union> (S ` I))\n  \\<lbrakk>finite I;\n   \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n  \\<Longrightarrow> a \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n  \\<lbrakk>finite I;\n   \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n  \\<Longrightarrow> b \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n  finite I\n  ?i2 \\<in> I \\<Longrightarrow> subgroup (S ?i2) G\n\ngoal (1 subgoal):\n 1. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h1 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        h2 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h2 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "from e"], ["proof (chain)\npicking this:\n  a \\<in> generate G (\\<Union> (S ` I))\n  b \\<in> generate G (\\<Union> (S ` I))\n  \\<lbrakk>finite I;\n   \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n  \\<Longrightarrow> a \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n  \\<lbrakk>finite I;\n   \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n  \\<Longrightarrow> b \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n  finite I\n  ?i2 \\<in> I \\<Longrightarrow> subgroup (S ?i2) G", "obtain f where f: \"f \\<in> Pi\\<^sub>E I S\" \"a = finprod G f I\""], ["proof (prove)\nusing this:\n  a \\<in> generate G (\\<Union> (S ` I))\n  b \\<in> generate G (\\<Union> (S ` I))\n  \\<lbrakk>finite I;\n   \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n  \\<Longrightarrow> a \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n  \\<lbrakk>finite I;\n   \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n  \\<Longrightarrow> b \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n  finite I\n  ?i2 \\<in> I \\<Longrightarrow> subgroup (S ?i2) G\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>f \\<in> Pi\\<^sub>E I S; a = finprod G f I\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  f \\<in> Pi\\<^sub>E I S\n  a = finprod G f I\n\ngoal (1 subgoal):\n 1. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h1 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        h2 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h2 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "from e"], ["proof (chain)\npicking this:\n  a \\<in> generate G (\\<Union> (S ` I))\n  b \\<in> generate G (\\<Union> (S ` I))\n  \\<lbrakk>finite I;\n   \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n  \\<Longrightarrow> a \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n  \\<lbrakk>finite I;\n   \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n  \\<Longrightarrow> b \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n  finite I\n  ?i2 \\<in> I \\<Longrightarrow> subgroup (S ?i2) G", "obtain g where g: \"g \\<in> Pi\\<^sub>E I S\" \"b = finprod G g I\""], ["proof (prove)\nusing this:\n  a \\<in> generate G (\\<Union> (S ` I))\n  b \\<in> generate G (\\<Union> (S ` I))\n  \\<lbrakk>finite I;\n   \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n  \\<Longrightarrow> a \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n  \\<lbrakk>finite I;\n   \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n  \\<Longrightarrow> b \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n  finite I\n  ?i2 \\<in> I \\<Longrightarrow> subgroup (S ?i2) G\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> Pi\\<^sub>E I S; b = finprod G g I\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  g \\<in> Pi\\<^sub>E I S\n  b = finprod G g I\n\ngoal (1 subgoal):\n 1. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h1 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        h2 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h2 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "from f g"], ["proof (chain)\npicking this:\n  f \\<in> Pi\\<^sub>E I S\n  a = finprod G f I\n  g \\<in> Pi\\<^sub>E I S\n  b = finprod G g I", "have \"a \\<otimes> b = finprod G f I \\<otimes> finprod G g I\""], ["proof (prove)\nusing this:\n  f \\<in> Pi\\<^sub>E I S\n  a = finprod G f I\n  g \\<in> Pi\\<^sub>E I S\n  b = finprod G g I\n\ngoal (1 subgoal):\n 1. a \\<otimes> b = finprod G f I \\<otimes> finprod G g I", "by blast"], ["proof (state)\nthis:\n  a \\<otimes> b = finprod G f I \\<otimes> finprod G g I\n\ngoal (1 subgoal):\n 1. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h1 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        h2 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h2 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "also"], ["proof (state)\nthis:\n  a \\<otimes> b = finprod G f I \\<otimes> finprod G g I\n\ngoal (1 subgoal):\n 1. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h1 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        h2 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h2 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "have \"\\<dots> = finprod G (\\<lambda>a. f a \\<otimes> g a) I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G f I \\<otimes> finprod G g I =\n    (\\<Otimes>a\\<in>I. f a \\<otimes> g a)", "proof(intro finprod_multf[symmetric])"], ["proof (state)\ngoal (2 subgoals):\n 1. f \\<in> I \\<rightarrow> carrier G\n 2. g \\<in> I \\<rightarrow> carrier G", "have \"\\<Union>(S ` I) \\<subseteq> carrier G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (S ` I) \\<subseteq> carrier G", "using subgroup.subset[OF e(6)]"], ["proof (prove)\nusing this:\n  ?i3 \\<in> I \\<Longrightarrow> S ?i3 \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. \\<Union> (S ` I) \\<subseteq> carrier G", "by blast"], ["proof (state)\nthis:\n  \\<Union> (S ` I) \\<subseteq> carrier G\n\ngoal (2 subgoals):\n 1. f \\<in> I \\<rightarrow> carrier G\n 2. g \\<in> I \\<rightarrow> carrier G", "thus \"f \\<in> I \\<rightarrow> carrier G\" \"g \\<in> I \\<rightarrow> carrier G\""], ["proof (prove)\nusing this:\n  \\<Union> (S ` I) \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. f \\<in> I \\<rightarrow> carrier G &&& g \\<in> I \\<rightarrow> carrier G", "using f(1) g(1)"], ["proof (prove)\nusing this:\n  \\<Union> (S ` I) \\<subseteq> carrier G\n  f \\<in> Pi\\<^sub>E I S\n  g \\<in> Pi\\<^sub>E I S\n\ngoal (1 subgoal):\n 1. f \\<in> I \\<rightarrow> carrier G &&& g \\<in> I \\<rightarrow> carrier G", "unfolding PiE_def Pi_def"], ["proof (prove)\nusing this:\n  \\<Union> (S ` I) \\<subseteq> carrier G\n  f \\<in> {f. \\<forall>x.\n                 x \\<in> I \\<longrightarrow> f x \\<in> S x} \\<inter>\n          extensional I\n  g \\<in> {f. \\<forall>x.\n                 x \\<in> I \\<longrightarrow> f x \\<in> S x} \\<inter>\n          extensional I\n\ngoal (1 subgoal):\n 1. f \\<in> {f. \\<forall>x.\n                   x \\<in> I \\<longrightarrow> f x \\<in> carrier G} &&&\n    g \\<in> {f. \\<forall>x. x \\<in> I \\<longrightarrow> f x \\<in> carrier G}", "by auto"], ["proof (state)\nthis:\n  f \\<in> I \\<rightarrow> carrier G\n  g \\<in> I \\<rightarrow> carrier G\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finprod G f I \\<otimes> finprod G g I =\n  (\\<Otimes>a\\<in>I. f a \\<otimes> g a)\n\ngoal (1 subgoal):\n 1. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h1 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        h2 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h2 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "also"], ["proof (state)\nthis:\n  finprod G f I \\<otimes> finprod G g I =\n  (\\<Otimes>a\\<in>I. f a \\<otimes> g a)\n\ngoal (1 subgoal):\n 1. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h1 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        h2 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h2 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "have \"\\<dots> = finprod G (restrict (\\<lambda>a. f a \\<otimes> g a) I) I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Otimes>a\\<in>I. f a \\<otimes> g a) =\n    finprod G (\\<lambda>a\\<in>I. f a \\<otimes> g a) I", "proof(intro finprod_cong)"], ["proof (state)\ngoal (3 subgoals):\n 1. I = I\n 2. ((\\<lambda>a. f a \\<otimes> g a) \\<in> I \\<rightarrow> carrier G) = True\n 3. \\<And>i.\n       i \\<in> I =simp=>\n       f i \\<otimes> g i = (\\<lambda>a\\<in>I. f a \\<otimes> g a) i", "show \"I = I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I = I", "by simp"], ["proof (state)\nthis:\n  I = I\n\ngoal (2 subgoals):\n 1. ((\\<lambda>a. f a \\<otimes> g a) \\<in> I \\<rightarrow> carrier G) = True\n 2. \\<And>i.\n       i \\<in> I =simp=>\n       f i \\<otimes> g i = (\\<lambda>a\\<in>I. f a \\<otimes> g a) i", "show \"\\<And>i. i \\<in> I =simp=> f i \\<otimes> g i = (\\<lambda>a\\<in>I. f a \\<otimes> g a) i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> I =simp=>\n       f i \\<otimes> g i = (\\<lambda>a\\<in>I. f a \\<otimes> g a) i", "by simp"], ["proof (state)\nthis:\n  ?i2 \\<in> I =simp=>\n  f ?i2 \\<otimes> g ?i2 = (\\<lambda>a\\<in>I. f a \\<otimes> g a) ?i2\n\ngoal (1 subgoal):\n 1. ((\\<lambda>a. f a \\<otimes> g a) \\<in> I \\<rightarrow> carrier G) = True", "have fp: \"f i \\<in> (S i)\" if \"i \\<in> I\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. f i \\<in> S i", "using f that"], ["proof (prove)\nusing this:\n  f \\<in> Pi\\<^sub>E I S\n  a = finprod G f I\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. f i \\<in> S i", "by auto"], ["proof (state)\nthis:\n  ?i2 \\<in> I \\<Longrightarrow> f ?i2 \\<in> S ?i2\n\ngoal (1 subgoal):\n 1. ((\\<lambda>a. f a \\<otimes> g a) \\<in> I \\<rightarrow> carrier G) = True", "have gp: \"g i \\<in> (S i)\" if \"i \\<in> I\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. g i \\<in> S i", "using g that"], ["proof (prove)\nusing this:\n  g \\<in> Pi\\<^sub>E I S\n  b = finprod G g I\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. g i \\<in> S i", "by auto"], ["proof (state)\nthis:\n  ?i2 \\<in> I \\<Longrightarrow> g ?i2 \\<in> S ?i2\n\ngoal (1 subgoal):\n 1. ((\\<lambda>a. f a \\<otimes> g a) \\<in> I \\<rightarrow> carrier G) = True", "have \"f i \\<otimes> g i \\<in> (S i)\" if \"i \\<in> I\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. f i \\<otimes> g i \\<in> S i", "using subgroup.m_closed[OF e(6)[OF that] fp[OF that] gp[OF that]]"], ["proof (prove)\nusing this:\n  f i \\<otimes> g i \\<in> S i\n\ngoal (1 subgoal):\n 1. f i \\<otimes> g i \\<in> S i", "."], ["proof (state)\nthis:\n  ?i2 \\<in> I \\<Longrightarrow> f ?i2 \\<otimes> g ?i2 \\<in> S ?i2\n\ngoal (1 subgoal):\n 1. ((\\<lambda>a. f a \\<otimes> g a) \\<in> I \\<rightarrow> carrier G) = True", "thus \"((\\<lambda>a. f a \\<otimes> g a) \\<in> I \\<rightarrow> carrier G) = True\""], ["proof (prove)\nusing this:\n  ?i2 \\<in> I \\<Longrightarrow> f ?i2 \\<otimes> g ?i2 \\<in> S ?i2\n\ngoal (1 subgoal):\n 1. ((\\<lambda>a. f a \\<otimes> g a) \\<in> I \\<rightarrow> carrier G) = True", "using subgroup.subset[OF e(6)]"], ["proof (prove)\nusing this:\n  ?i2 \\<in> I \\<Longrightarrow> f ?i2 \\<otimes> g ?i2 \\<in> S ?i2\n  ?i3 \\<in> I \\<Longrightarrow> S ?i3 \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. ((\\<lambda>a. f a \\<otimes> g a) \\<in> I \\<rightarrow> carrier G) = True", "by auto"], ["proof (state)\nthis:\n  ((\\<lambda>a. f a \\<otimes> g a) \\<in> I \\<rightarrow> carrier G) = True\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Otimes>a\\<in>I. f a \\<otimes> g a) =\n  finprod G (\\<lambda>a\\<in>I. f a \\<otimes> g a) I\n\ngoal (1 subgoal):\n 1. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h1 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        h2 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h2 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "finally"], ["proof (chain)\npicking this:\n  a \\<otimes> b = finprod G (\\<lambda>a\\<in>I. f a \\<otimes> g a) I", "have \"a \\<otimes> b = finprod G (restrict (\\<lambda>a. f a \\<otimes> g a) I) I\""], ["proof (prove)\nusing this:\n  a \\<otimes> b = finprod G (\\<lambda>a\\<in>I. f a \\<otimes> g a) I\n\ngoal (1 subgoal):\n 1. a \\<otimes> b = finprod G (\\<lambda>a\\<in>I. f a \\<otimes> g a) I", "."], ["proof (state)\nthis:\n  a \\<otimes> b = finprod G (\\<lambda>a\\<in>I. f a \\<otimes> g a) I\n\ngoal (1 subgoal):\n 1. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h1 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        h2 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h2 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "moreover"], ["proof (state)\nthis:\n  a \\<otimes> b = finprod G (\\<lambda>a\\<in>I. f a \\<otimes> g a) I\n\ngoal (1 subgoal):\n 1. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h1 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        h2 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h2 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "have \"(restrict (\\<lambda>a. f a \\<otimes> g a) I) \\<in> Pi\\<^sub>E I S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>a\\<in>I. f a \\<otimes> g a) \\<in> Pi\\<^sub>E I S", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>a\\<in>I. f a \\<otimes> g a) \\<in> Pi\\<^sub>E I S", "have fp: \"f i \\<in> (S i)\" if \"i \\<in> I\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. f i \\<in> S i", "using f that"], ["proof (prove)\nusing this:\n  f \\<in> Pi\\<^sub>E I S\n  a = finprod G f I\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. f i \\<in> S i", "by auto"], ["proof (state)\nthis:\n  ?i2 \\<in> I \\<Longrightarrow> f ?i2 \\<in> S ?i2\n\ngoal (1 subgoal):\n 1. (\\<lambda>a\\<in>I. f a \\<otimes> g a) \\<in> Pi\\<^sub>E I S", "have gp: \"g i \\<in> (S i)\" if \"i \\<in> I\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. g i \\<in> S i", "using g that"], ["proof (prove)\nusing this:\n  g \\<in> Pi\\<^sub>E I S\n  b = finprod G g I\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. g i \\<in> S i", "by auto"], ["proof (state)\nthis:\n  ?i2 \\<in> I \\<Longrightarrow> g ?i2 \\<in> S ?i2\n\ngoal (1 subgoal):\n 1. (\\<lambda>a\\<in>I. f a \\<otimes> g a) \\<in> Pi\\<^sub>E I S", "have \"f i \\<otimes> g i \\<in> (S i)\" if \"i \\<in> I\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. f i \\<otimes> g i \\<in> S i", "using subgroup.m_closed[OF e(6)[OF that] fp[OF that] gp[OF that]]"], ["proof (prove)\nusing this:\n  f i \\<otimes> g i \\<in> S i\n\ngoal (1 subgoal):\n 1. f i \\<otimes> g i \\<in> S i", "."], ["proof (state)\nthis:\n  ?i2 \\<in> I \\<Longrightarrow> f ?i2 \\<otimes> g ?i2 \\<in> S ?i2\n\ngoal (1 subgoal):\n 1. (\\<lambda>a\\<in>I. f a \\<otimes> g a) \\<in> Pi\\<^sub>E I S", "thus ?thesis"], ["proof (prove)\nusing this:\n  ?i2 \\<in> I \\<Longrightarrow> f ?i2 \\<otimes> g ?i2 \\<in> S ?i2\n\ngoal (1 subgoal):\n 1. (\\<lambda>a\\<in>I. f a \\<otimes> g a) \\<in> Pi\\<^sub>E I S", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>a\\<in>I. f a \\<otimes> g a) \\<in> Pi\\<^sub>E I S\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>a\\<in>I. f a \\<otimes> g a) \\<in> Pi\\<^sub>E I S\n\ngoal (1 subgoal):\n 1. \\<And>h1 h2.\n       \\<lbrakk>h1 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h1 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        h2 \\<in> generate G (\\<Union> (S ` I));\n        \\<lbrakk>finite I;\n         \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n        \\<Longrightarrow> h2 \\<in> (\\<lambda>x. finprod G x I) `\n                                   Pi\\<^sub>E I S;\n        finite I;\n        \\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\\<rbrakk>\n       \\<Longrightarrow> h1 \\<otimes> h2\n                         \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "ultimately"], ["proof (chain)\npicking this:\n  a \\<otimes> b = finprod G (\\<lambda>a\\<in>I. f a \\<otimes> g a) I\n  (\\<lambda>a\\<in>I. f a \\<otimes> g a) \\<in> Pi\\<^sub>E I S", "show ?case"], ["proof (prove)\nusing this:\n  a \\<otimes> b = finprod G (\\<lambda>a\\<in>I. f a \\<otimes> g a) I\n  (\\<lambda>a\\<in>I. f a \\<otimes> g a) \\<in> Pi\\<^sub>E I S\n\ngoal (1 subgoal):\n 1. a \\<otimes> b \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "using f g"], ["proof (prove)\nusing this:\n  a \\<otimes> b = finprod G (\\<lambda>a\\<in>I. f a \\<otimes> g a) I\n  (\\<lambda>a\\<in>I. f a \\<otimes> g a) \\<in> Pi\\<^sub>E I S\n  f \\<in> Pi\\<^sub>E I S\n  a = finprod G f I\n  g \\<in> Pi\\<^sub>E I S\n  b = finprod G g I\n\ngoal (1 subgoal):\n 1. a \\<otimes> b \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "by blast"], ["proof (state)\nthis:\n  a \\<otimes> b \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  IDirProds G S I \\<subseteq> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in comm_group) IDirProds_eq_finprod_Pi:\n  assumes \"finite I\" \"\\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\"\n  shows \"IDirProds G S I = (\\<lambda>x. finprod G x I) ` (Pi I S)\" (is \"?DP = ?fp\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. IDirProds G S I = (\\<lambda>x. finprod G x I) ` Pi I S", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. IDirProds G S I = (\\<lambda>x. finprod G x I) ` Pi I S", "have \"(\\<lambda>x. finprod G x I) ` (Pi I S) = (\\<lambda>x. finprod G x I) ` (Pi\\<^sub>E I S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. finprod G x I) ` Pi I S =\n    (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>x. finprod G x I) ` Pi I S\n    \\<subseteq> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n 2. (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n    \\<subseteq> (\\<lambda>x. finprod G x I) ` Pi I S", "have \"Pi\\<^sub>E I S \\<subseteq> Pi I S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Pi\\<^sub>E I S \\<subseteq> Pi I S", "by blast"], ["proof (state)\nthis:\n  Pi\\<^sub>E I S \\<subseteq> Pi I S\n\ngoal (2 subgoals):\n 1. (\\<lambda>x. finprod G x I) ` Pi I S\n    \\<subseteq> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n 2. (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n    \\<subseteq> (\\<lambda>x. finprod G x I) ` Pi I S", "thus \"(\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S \\<subseteq> (\\<lambda>x. finprod G x I) ` Pi I S\""], ["proof (prove)\nusing this:\n  Pi\\<^sub>E I S \\<subseteq> Pi I S\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n    \\<subseteq> (\\<lambda>x. finprod G x I) ` Pi I S", "by blast"], ["proof (state)\nthis:\n  (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n  \\<subseteq> (\\<lambda>x. finprod G x I) ` Pi I S\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. finprod G x I) ` Pi I S\n    \\<subseteq> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "show \"(\\<lambda>x. finprod G x I) ` Pi I S \\<subseteq> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. finprod G x I) ` Pi I S\n    \\<subseteq> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. finprod G x I) ` Pi I S \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. finprod G x I) ` Pi I S \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "assume x: \"x \\<in> (\\<lambda>x. finprod G x I) ` Pi I S\""], ["proof (state)\nthis:\n  x \\<in> (\\<lambda>x. finprod G x I) ` Pi I S\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. finprod G x I) ` Pi I S \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "then"], ["proof (chain)\npicking this:\n  x \\<in> (\\<lambda>x. finprod G x I) ` Pi I S", "obtain f where f: \"x = finprod G f I\" \"f \\<in> Pi I S\""], ["proof (prove)\nusing this:\n  x \\<in> (\\<lambda>x. finprod G x I) ` Pi I S\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>x = finprod G f I; f \\<in> Pi I S\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  x = finprod G f I\n  f \\<in> Pi I S\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. finprod G x I) ` Pi I S \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "moreover"], ["proof (state)\nthis:\n  x = finprod G f I\n  f \\<in> Pi I S\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. finprod G x I) ` Pi I S \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "have \"finprod G f I = finprod G (restrict f I) I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G f I = finprod G (restrict f I) I", "by (intro finprod_cong; use f(2) subgroup.subset[OF assms(2)] in fastforce)"], ["proof (state)\nthis:\n  finprod G f I = finprod G (restrict f I) I\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. finprod G x I) ` Pi I S \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "moreover"], ["proof (state)\nthis:\n  finprod G f I = finprod G (restrict f I) I\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. finprod G x I) ` Pi I S \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "have \"restrict f I \\<in> Pi\\<^sub>E I S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict f I \\<in> Pi\\<^sub>E I S", "using f(2)"], ["proof (prove)\nusing this:\n  f \\<in> Pi I S\n\ngoal (1 subgoal):\n 1. restrict f I \\<in> Pi\\<^sub>E I S", "by simp"], ["proof (state)\nthis:\n  restrict f I \\<in> Pi\\<^sub>E I S\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> (\\<lambda>x. finprod G x I) ` Pi I S \\<Longrightarrow>\n       x \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "ultimately"], ["proof (chain)\npicking this:\n  x = finprod G f I\n  f \\<in> Pi I S\n  finprod G f I = finprod G (restrict f I) I\n  restrict f I \\<in> Pi\\<^sub>E I S", "show \"x \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\""], ["proof (prove)\nusing this:\n  x = finprod G f I\n  f \\<in> Pi I S\n  finprod G f I = finprod G (restrict f I) I\n  restrict f I \\<in> Pi\\<^sub>E I S\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "by blast"], ["proof (state)\nthis:\n  x \\<in> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>x. finprod G x I) ` Pi I S\n  \\<subseteq> (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>x. finprod G x I) ` Pi I S =\n  (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n\ngoal (1 subgoal):\n 1. IDirProds G S I = (\\<lambda>x. finprod G x I) ` Pi I S", "with IDirProds_eq_finprod_PiE[OF assms]"], ["proof (chain)\npicking this:\n  (\\<And>i. i \\<in> I \\<Longrightarrow> ?i3 i \\<in> I) \\<Longrightarrow>\n  IDirProds G (\\<lambda>i. S (?i3 i)) I =\n  (\\<lambda>x. finprod G x I) ` (\\<Pi>\\<^sub>E i\\<in>I. S (?i3 i))\n  (\\<lambda>x. finprod G x I) ` Pi I S =\n  (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<And>i. i \\<in> I \\<Longrightarrow> ?i3 i \\<in> I) \\<Longrightarrow>\n  IDirProds G (\\<lambda>i. S (?i3 i)) I =\n  (\\<lambda>x. finprod G x I) ` (\\<Pi>\\<^sub>E i\\<in>I. S (?i3 i))\n  (\\<lambda>x. finprod G x I) ` Pi I S =\n  (\\<lambda>x. finprod G x I) ` Pi\\<^sub>E I S\n\ngoal (1 subgoal):\n 1. IDirProds G S I = (\\<lambda>x. finprod G x I) ` Pi I S", "by auto"], ["proof (state)\nthis:\n  IDirProds G S I = (\\<lambda>x. finprod G x I) ` Pi I S\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>If we switch one element from a set of generators, the generated set stays the same if both\nelements can be generated from the others together with the switched element respectively.\\<close>"], ["", "lemma (in comm_group) generate_one_switched_exp_eqI:\n  assumes \"A \\<subseteq> carrier G\" \"a \\<in> A\" \"B = (A - {a}) \\<union> {b}\"\n  and \"f \\<in> A \\<rightarrow> (UNIV::int set)\" \"g \\<in> B \\<rightarrow> (UNIV::int set)\"\n  and \"a = finprod G (\\<lambda>x. x [^] g x) B\" \"b = finprod G (\\<lambda>x. x [^] f x) A\"\n  shows \"generate G A = generate G B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. generate G A = generate G B", "proof(intro generate_one_switched_eqI[OF assms(1, 2, 3)]; cases \"finite A\")"], ["proof (state)\ngoal (4 subgoals):\n 1. finite A \\<Longrightarrow> b \\<in> generate G A\n 2. infinite A \\<Longrightarrow> b \\<in> generate G A\n 3. finite A \\<Longrightarrow> a \\<in> generate G B\n 4. infinite A \\<Longrightarrow> a \\<in> generate G B", "case True"], ["proof (state)\nthis:\n  finite A\n\ngoal (4 subgoals):\n 1. finite A \\<Longrightarrow> b \\<in> generate G A\n 2. infinite A \\<Longrightarrow> b \\<in> generate G A\n 3. finite A \\<Longrightarrow> a \\<in> generate G B\n 4. infinite A \\<Longrightarrow> a \\<in> generate G B", "hence fB: \"finite B\""], ["proof (prove)\nusing this:\n  finite A\n\ngoal (1 subgoal):\n 1. finite B", "using assms(3)"], ["proof (prove)\nusing this:\n  finite A\n  B = A - {a} \\<union> {b}\n\ngoal (1 subgoal):\n 1. finite B", "by blast"], ["proof (state)\nthis:\n  finite B\n\ngoal (4 subgoals):\n 1. finite A \\<Longrightarrow> b \\<in> generate G A\n 2. infinite A \\<Longrightarrow> b \\<in> generate G A\n 3. finite A \\<Longrightarrow> a \\<in> generate G B\n 4. infinite A \\<Longrightarrow> a \\<in> generate G B", "have cB: \"B \\<subseteq> carrier G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<subseteq> carrier G", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. B \\<subseteq> carrier G", "have \"b \\<in> carrier G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<in> carrier G", "by (subst assms(7), intro finprod_closed, use assms(1, 4) int_pow_closed in fast)"], ["proof (state)\nthis:\n  b \\<in> carrier G\n\ngoal (1 subgoal):\n 1. B \\<subseteq> carrier G", "thus ?thesis"], ["proof (prove)\nusing this:\n  b \\<in> carrier G\n\ngoal (1 subgoal):\n 1. B \\<subseteq> carrier G", "using assms(1, 3)"], ["proof (prove)\nusing this:\n  b \\<in> carrier G\n  A \\<subseteq> carrier G\n  B = A - {a} \\<union> {b}\n\ngoal (1 subgoal):\n 1. B \\<subseteq> carrier G", "by blast"], ["proof (state)\nthis:\n  B \\<subseteq> carrier G\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  B \\<subseteq> carrier G\n\ngoal (4 subgoals):\n 1. finite A \\<Longrightarrow> b \\<in> generate G A\n 2. infinite A \\<Longrightarrow> b \\<in> generate G A\n 3. finite A \\<Longrightarrow> a \\<in> generate G B\n 4. infinite A \\<Longrightarrow> a \\<in> generate G B", "show \"a \\<in> generate G B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> generate G B", "proof(subst generate_eq_finprod_Pi_image[OF fB cB], rule)"], ["proof (state)\ngoal (2 subgoals):\n 1. a = finprod G ?x B\n 2. ?x \\<in> (\\<Pi> a\\<in>B. generate G {a})", "show \"a = finprod G (\\<lambda>x. x [^] g x) B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a = (\\<Otimes>x\\<in>B. x [^] g x)", "by fact"], ["proof (state)\nthis:\n  a = (\\<Otimes>x\\<in>B. x [^] g x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. x [^] g x) \\<in> (\\<Pi> a\\<in>B. generate G {a})", "have \"x [^] g x \\<in> generate G {x}\" if \"x \\<in> B\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. x [^] g x \\<in> generate G {x}", "using generate_pow[of x] cB that"], ["proof (prove)\nusing this:\n  x \\<in> carrier G \\<Longrightarrow>\n  generate G {x} = {x [^] k |k. k \\<in> UNIV}\n  B \\<subseteq> carrier G\n  x \\<in> B\n\ngoal (1 subgoal):\n 1. x [^] g x \\<in> generate G {x}", "by blast"], ["proof (state)\nthis:\n  ?x2 \\<in> B \\<Longrightarrow> ?x2 [^] g ?x2 \\<in> generate G {?x2}\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. x [^] g x) \\<in> (\\<Pi> a\\<in>B. generate G {a})", "thus \"(\\<lambda>x. x [^] g x) \\<in> (\\<Pi> a\\<in>B. generate G {a})\""], ["proof (prove)\nusing this:\n  ?x2 \\<in> B \\<Longrightarrow> ?x2 [^] g ?x2 \\<in> generate G {?x2}\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. x [^] g x) \\<in> (\\<Pi> a\\<in>B. generate G {a})", "unfolding Pi_def"], ["proof (prove)\nusing this:\n  ?x2 \\<in> B \\<Longrightarrow> ?x2 [^] g ?x2 \\<in> generate G {?x2}\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. x [^] g x)\n    \\<in> {f. \\<forall>x.\n                 x \\<in> B \\<longrightarrow> f x \\<in> generate G {x}}", "by blast"], ["proof (state)\nthis:\n  (\\<lambda>x. x [^] g x) \\<in> (\\<Pi> a\\<in>B. generate G {a})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  a \\<in> generate G B\n\ngoal (3 subgoals):\n 1. finite A \\<Longrightarrow> b \\<in> generate G A\n 2. infinite A \\<Longrightarrow> b \\<in> generate G A\n 3. infinite A \\<Longrightarrow> a \\<in> generate G B", "show \"b \\<in> generate G A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<in> generate G A", "proof(subst generate_eq_finprod_Pi_image[OF True assms(1)], rule)"], ["proof (state)\ngoal (2 subgoals):\n 1. b = finprod G ?x A\n 2. ?x \\<in> (\\<Pi> a\\<in>A. generate G {a})", "show \"b = finprod G (\\<lambda>x. x [^] f x) A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b = (\\<Otimes>x\\<in>A. x [^] f x)", "by fact"], ["proof (state)\nthis:\n  b = (\\<Otimes>x\\<in>A. x [^] f x)\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. x [^] f x) \\<in> (\\<Pi> a\\<in>A. generate G {a})", "have \"x [^] f x \\<in> generate G {x}\" if \"x \\<in> A\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. x [^] f x \\<in> generate G {x}", "using generate_pow[of x] assms(1) that"], ["proof (prove)\nusing this:\n  x \\<in> carrier G \\<Longrightarrow>\n  generate G {x} = {x [^] k |k. k \\<in> UNIV}\n  A \\<subseteq> carrier G\n  x \\<in> A\n\ngoal (1 subgoal):\n 1. x [^] f x \\<in> generate G {x}", "by blast"], ["proof (state)\nthis:\n  ?x2 \\<in> A \\<Longrightarrow> ?x2 [^] f ?x2 \\<in> generate G {?x2}\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. x [^] f x) \\<in> (\\<Pi> a\\<in>A. generate G {a})", "thus \"(\\<lambda>x. x [^] f x) \\<in> (\\<Pi> a\\<in>A. generate G {a})\""], ["proof (prove)\nusing this:\n  ?x2 \\<in> A \\<Longrightarrow> ?x2 [^] f ?x2 \\<in> generate G {?x2}\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. x [^] f x) \\<in> (\\<Pi> a\\<in>A. generate G {a})", "unfolding Pi_def"], ["proof (prove)\nusing this:\n  ?x2 \\<in> A \\<Longrightarrow> ?x2 [^] f ?x2 \\<in> generate G {?x2}\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. x [^] f x)\n    \\<in> {f. \\<forall>x.\n                 x \\<in> A \\<longrightarrow> f x \\<in> generate G {x}}", "by blast"], ["proof (state)\nthis:\n  (\\<lambda>x. x [^] f x) \\<in> (\\<Pi> a\\<in>A. generate G {a})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  b \\<in> generate G A\n\ngoal (2 subgoals):\n 1. infinite A \\<Longrightarrow> b \\<in> generate G A\n 2. infinite A \\<Longrightarrow> a \\<in> generate G B", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. infinite A \\<Longrightarrow> b \\<in> generate G A\n 2. infinite A \\<Longrightarrow> a \\<in> generate G B", "case False"], ["proof (state)\nthis:\n  infinite A\n\ngoal (2 subgoals):\n 1. infinite A \\<Longrightarrow> b \\<in> generate G A\n 2. infinite A \\<Longrightarrow> a \\<in> generate G B", "hence b: \"b = \\<one>\""], ["proof (prove)\nusing this:\n  infinite A\n\ngoal (1 subgoal):\n 1. b = \\<one>", "using assms(7)"], ["proof (prove)\nusing this:\n  infinite A\n  b = (\\<Otimes>x\\<in>A. x [^] f x)\n\ngoal (1 subgoal):\n 1. b = \\<one>", "unfolding finprod_def"], ["proof (prove)\nusing this:\n  infinite A\n  b =\n  (if finite A\n   then foldD (carrier G) ((\\<otimes>) \\<circ> (\\<lambda>x. x [^] f x))\n         \\<one> A\n   else \\<one>)\n\ngoal (1 subgoal):\n 1. b = \\<one>", "by simp"], ["proof (state)\nthis:\n  b = \\<one>\n\ngoal (2 subgoals):\n 1. infinite A \\<Longrightarrow> b \\<in> generate G A\n 2. infinite A \\<Longrightarrow> a \\<in> generate G B", "from False assms(3)"], ["proof (chain)\npicking this:\n  infinite A\n  B = A - {a} \\<union> {b}", "have \"infinite B\""], ["proof (prove)\nusing this:\n  infinite A\n  B = A - {a} \\<union> {b}\n\ngoal (1 subgoal):\n 1. infinite B", "by simp"], ["proof (state)\nthis:\n  infinite B\n\ngoal (2 subgoals):\n 1. infinite A \\<Longrightarrow> b \\<in> generate G A\n 2. infinite A \\<Longrightarrow> a \\<in> generate G B", "hence a: \"a = \\<one>\""], ["proof (prove)\nusing this:\n  infinite B\n\ngoal (1 subgoal):\n 1. a = \\<one>", "using assms(6)"], ["proof (prove)\nusing this:\n  infinite B\n  a = (\\<Otimes>x\\<in>B. x [^] g x)\n\ngoal (1 subgoal):\n 1. a = \\<one>", "unfolding finprod_def"], ["proof (prove)\nusing this:\n  infinite B\n  a =\n  (if finite B\n   then foldD (carrier G) ((\\<otimes>) \\<circ> (\\<lambda>x. x [^] g x))\n         \\<one> B\n   else \\<one>)\n\ngoal (1 subgoal):\n 1. a = \\<one>", "by simp"], ["proof (state)\nthis:\n  a = \\<one>\n\ngoal (2 subgoals):\n 1. infinite A \\<Longrightarrow> b \\<in> generate G A\n 2. infinite A \\<Longrightarrow> a \\<in> generate G B", "show \"a \\<in> generate G B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> generate G B", "using generate.one a"], ["proof (prove)\nusing this:\n  \\<one>\\<^bsub>?G\\<^esub> \\<in> generate ?G ?H\n  a = \\<one>\n\ngoal (1 subgoal):\n 1. a \\<in> generate G B", "by blast"], ["proof (state)\nthis:\n  a \\<in> generate G B\n\ngoal (1 subgoal):\n 1. infinite A \\<Longrightarrow> b \\<in> generate G A", "show \"b \\<in> generate G A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<in> generate G A", "using generate.one b"], ["proof (prove)\nusing this:\n  \\<one>\\<^bsub>?G\\<^esub> \\<in> generate ?G ?H\n  b = \\<one>\n\ngoal (1 subgoal):\n 1. b \\<in> generate G A", "by blast"], ["proof (state)\nthis:\n  b \\<in> generate G A\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>We can characterize a complementary family of subgroups when the only way to form the neutral\nelement as a product of picked elements from each subgroup is to pick the neutral element from each\nsubgroup.\\<close>"], ["", "lemma (in comm_group) compl_fam_imp_triv_finprod:\n  assumes \"compl_fam S I\" \"finite I\" \"\\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\"\n  and \"finprod G f I = \\<one>\" \"f \\<in> Pi I S\"\n  shows \"\\<forall>i\\<in>I. f i = \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>I. f i = \\<one>", "proof (rule ccontr; clarify)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<not> False; i \\<in> I\\<rbrakk>\n       \\<Longrightarrow> f i = \\<one>", "from assms(5)"], ["proof (chain)\npicking this:\n  f \\<in> Pi I S", "have f: \"f i \\<in> (S i)\" if \"i \\<in> I\" for i"], ["proof (prove)\nusing this:\n  f \\<in> Pi I S\n\ngoal (1 subgoal):\n 1. f i \\<in> S i", "using that"], ["proof (prove)\nusing this:\n  f \\<in> Pi I S\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. f i \\<in> S i", "by fastforce"], ["proof (state)\nthis:\n  ?i2 \\<in> I \\<Longrightarrow> f ?i2 \\<in> S ?i2\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<not> False; i \\<in> I\\<rbrakk>\n       \\<Longrightarrow> f i = \\<one>", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<not> False; i \\<in> I\\<rbrakk>\n       \\<Longrightarrow> f i = \\<one>", "assume i: \"i \\<in> I\""], ["proof (state)\nthis:\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<not> False; i \\<in> I\\<rbrakk>\n       \\<Longrightarrow> f i = \\<one>", "have si: \"subgroup (S i) G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup (S i) G", "using assms(3)[OF i]"], ["proof (prove)\nusing this:\n  subgroup (S i) G\n\ngoal (1 subgoal):\n 1. subgroup (S i) G", "."], ["proof (state)\nthis:\n  subgroup (S i) G\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<not> False; i \\<in> I\\<rbrakk>\n       \\<Longrightarrow> f i = \\<one>", "consider (triv) \"(S i) = {\\<one>}\" | (not_triv) \"(S i) \\<noteq> {\\<one>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>S i = {\\<one>} \\<Longrightarrow> thesis;\n     S i \\<noteq> {\\<one>} \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  \\<lbrakk>S i = {\\<one>} \\<Longrightarrow> ?thesis2;\n   S i \\<noteq> {\\<one>} \\<Longrightarrow> ?thesis2\\<rbrakk>\n  \\<Longrightarrow> ?thesis2\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>\\<not> False; i \\<in> I\\<rbrakk>\n       \\<Longrightarrow> f i = \\<one>", "thus \"f i = \\<one>\""], ["proof (prove)\nusing this:\n  \\<lbrakk>S i = {\\<one>} \\<Longrightarrow> ?thesis2;\n   S i \\<noteq> {\\<one>} \\<Longrightarrow> ?thesis2\\<rbrakk>\n  \\<Longrightarrow> ?thesis2\n\ngoal (1 subgoal):\n 1. f i = \\<one>", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. S i = {\\<one>} \\<Longrightarrow> f i = \\<one>\n 2. S i \\<noteq> {\\<one>} \\<Longrightarrow> f i = \\<one>", "case triv"], ["proof (state)\nthis:\n  S i = {\\<one>}\n\ngoal (2 subgoals):\n 1. S i = {\\<one>} \\<Longrightarrow> f i = \\<one>\n 2. S i \\<noteq> {\\<one>} \\<Longrightarrow> f i = \\<one>", "then"], ["proof (chain)\npicking this:\n  S i = {\\<one>}", "show ?thesis"], ["proof (prove)\nusing this:\n  S i = {\\<one>}\n\ngoal (1 subgoal):\n 1. f i = \\<one>", "using f[OF i]"], ["proof (prove)\nusing this:\n  S i = {\\<one>}\n  f i \\<in> S i\n\ngoal (1 subgoal):\n 1. f i = \\<one>", "by blast"], ["proof (state)\nthis:\n  f i = \\<one>\n\ngoal (1 subgoal):\n 1. S i \\<noteq> {\\<one>} \\<Longrightarrow> f i = \\<one>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. S i \\<noteq> {\\<one>} \\<Longrightarrow> f i = \\<one>", "case not_triv"], ["proof (state)\nthis:\n  S i \\<noteq> {\\<one>}\n\ngoal (1 subgoal):\n 1. S i \\<noteq> {\\<one>} \\<Longrightarrow> f i = \\<one>", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. f i = \\<one>", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. f i \\<noteq> \\<one> \\<Longrightarrow> False", "have fc: \"f i \\<in> carrier G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f i \\<in> carrier G", "using f[OF i] subgroup.subset[OF si]"], ["proof (prove)\nusing this:\n  f i \\<in> S i\n  S i \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. f i \\<in> carrier G", "by blast"], ["proof (state)\nthis:\n  f i \\<in> carrier G\n\ngoal (1 subgoal):\n 1. f i \\<noteq> \\<one> \\<Longrightarrow> False", "assume no: \"f i \\<noteq> \\<one>\""], ["proof (state)\nthis:\n  f i \\<noteq> \\<one>\n\ngoal (1 subgoal):\n 1. f i \\<noteq> \\<one> \\<Longrightarrow> False", "have fH: \"f i \\<in> (S i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f i \\<in> S i", "using f[OF i]"], ["proof (prove)\nusing this:\n  f i \\<in> S i\n\ngoal (1 subgoal):\n 1. f i \\<in> S i", "."], ["proof (state)\nthis:\n  f i \\<in> S i\n\ngoal (1 subgoal):\n 1. f i \\<noteq> \\<one> \\<Longrightarrow> False", "from subgroup.m_inv_closed[OF si this]"], ["proof (chain)\npicking this:\n  inv f i \\<in> S i", "have ifi: \"inv (f i) \\<in> (S i)\""], ["proof (prove)\nusing this:\n  inv f i \\<in> S i\n\ngoal (1 subgoal):\n 1. inv f i \\<in> S i", "."], ["proof (state)\nthis:\n  inv f i \\<in> S i\n\ngoal (1 subgoal):\n 1. f i \\<noteq> \\<one> \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  inv f i \\<in> S i\n\ngoal (1 subgoal):\n 1. f i \\<noteq> \\<one> \\<Longrightarrow> False", "have \"inv (f i) \\<noteq> \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv f i \\<noteq> \\<one>", "using no fc"], ["proof (prove)\nusing this:\n  f i \\<noteq> \\<one>\n  f i \\<in> carrier G\n\ngoal (1 subgoal):\n 1. inv f i \\<noteq> \\<one>", "by simp"], ["proof (state)\nthis:\n  inv f i \\<noteq> \\<one>\n\ngoal (1 subgoal):\n 1. f i \\<noteq> \\<one> \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  inv f i \\<noteq> \\<one>\n\ngoal (1 subgoal):\n 1. f i \\<noteq> \\<one> \\<Longrightarrow> False", "have \"inv (f i) = finprod G f (I - {i})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inv f i = finprod G f (I - {i})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. inv f i = finprod G f (I - {i})", "have \"\\<one> = finprod G f I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<one> = finprod G f I", "using assms(4)"], ["proof (prove)\nusing this:\n  finprod G f I = \\<one>\n\ngoal (1 subgoal):\n 1. \\<one> = finprod G f I", "by simp"], ["proof (state)\nthis:\n  \\<one> = finprod G f I\n\ngoal (1 subgoal):\n 1. inv f i = finprod G f (I - {i})", "also"], ["proof (state)\nthis:\n  \\<one> = finprod G f I\n\ngoal (1 subgoal):\n 1. inv f i = finprod G f (I - {i})", "have \"\\<dots> = finprod G f (insert i (I - {i}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G f I = finprod G f (insert i (I - {i}))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finprod G f I = finprod G f (insert i (I - {i}))", "have \"I = insert i (I - {i})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I = insert i (I - {i})", "using i"], ["proof (prove)\nusing this:\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. I = insert i (I - {i})", "by fast"], ["proof (state)\nthis:\n  I = insert i (I - {i})\n\ngoal (1 subgoal):\n 1. finprod G f I = finprod G f (insert i (I - {i}))", "thus ?thesis"], ["proof (prove)\nusing this:\n  I = insert i (I - {i})\n\ngoal (1 subgoal):\n 1. finprod G f I = finprod G f (insert i (I - {i}))", "by simp"], ["proof (state)\nthis:\n  finprod G f I = finprod G f (insert i (I - {i}))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finprod G f I = finprod G f (insert i (I - {i}))\n\ngoal (1 subgoal):\n 1. inv f i = finprod G f (I - {i})", "also"], ["proof (state)\nthis:\n  finprod G f I = finprod G f (insert i (I - {i}))\n\ngoal (1 subgoal):\n 1. inv f i = finprod G f (I - {i})", "have \"\\<dots> = f i \\<otimes> finprod G f (I - {i})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G f (insert i (I - {i})) = f i \\<otimes> finprod G f (I - {i})", "proof(intro finprod_insert)"], ["proof (state)\ngoal (4 subgoals):\n 1. finite (I - {i})\n 2. i \\<notin> I - {i}\n 3. f \\<in> I - {i} \\<rightarrow> carrier G\n 4. f i \\<in> carrier G", "show \"finite (I - {i})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (I - {i})", "using assms(2)"], ["proof (prove)\nusing this:\n  finite I\n\ngoal (1 subgoal):\n 1. finite (I - {i})", "by blast"], ["proof (state)\nthis:\n  finite (I - {i})\n\ngoal (3 subgoals):\n 1. i \\<notin> I - {i}\n 2. f \\<in> I - {i} \\<rightarrow> carrier G\n 3. f i \\<in> carrier G", "show \"i \\<notin> I - {i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<notin> I - {i}", "by blast"], ["proof (state)\nthis:\n  i \\<notin> I - {i}\n\ngoal (2 subgoals):\n 1. f \\<in> I - {i} \\<rightarrow> carrier G\n 2. f i \\<in> carrier G", "show \"f \\<in> I - {i} \\<rightarrow> carrier G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> I - {i} \\<rightarrow> carrier G", "using assms(3) f subgroup.subset"], ["proof (prove)\nusing this:\n  ?i2 \\<in> I \\<Longrightarrow> subgroup (S ?i2) G\n  ?i2 \\<in> I \\<Longrightarrow> f ?i2 \\<in> S ?i2\n  subgroup ?H ?G \\<Longrightarrow> ?H \\<subseteq> carrier ?G\n\ngoal (1 subgoal):\n 1. f \\<in> I - {i} \\<rightarrow> carrier G", "by blast"], ["proof (state)\nthis:\n  f \\<in> I - {i} \\<rightarrow> carrier G\n\ngoal (1 subgoal):\n 1. f i \\<in> carrier G", "show \"f i \\<in> carrier G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f i \\<in> carrier G", "by fact"], ["proof (state)\nthis:\n  f i \\<in> carrier G\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finprod G f (insert i (I - {i})) = f i \\<otimes> finprod G f (I - {i})\n\ngoal (1 subgoal):\n 1. inv f i = finprod G f (I - {i})", "finally"], ["proof (chain)\npicking this:\n  \\<one> = f i \\<otimes> finprod G f (I - {i})", "have o: \"\\<one> = f i \\<otimes> finprod G f (I - {i})\""], ["proof (prove)\nusing this:\n  \\<one> = f i \\<otimes> finprod G f (I - {i})\n\ngoal (1 subgoal):\n 1. \\<one> = f i \\<otimes> finprod G f (I - {i})", "."], ["proof (state)\nthis:\n  \\<one> = f i \\<otimes> finprod G f (I - {i})\n\ngoal (1 subgoal):\n 1. inv f i = finprod G f (I - {i})", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. inv f i = finprod G f (I - {i})", "proof(intro inv_equality)"], ["proof (state)\ngoal (3 subgoals):\n 1. finprod G f (I - {i}) \\<otimes> f i = \\<one>\n 2. f i \\<in> carrier G\n 3. finprod G f (I - {i}) \\<in> carrier G", "show \"f i \\<in> carrier G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f i \\<in> carrier G", "by fact"], ["proof (state)\nthis:\n  f i \\<in> carrier G\n\ngoal (2 subgoals):\n 1. finprod G f (I - {i}) \\<otimes> f i = \\<one>\n 2. finprod G f (I - {i}) \\<in> carrier G", "show \"finprod G f (I - {i}) \\<in> carrier G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G f (I - {i}) \\<in> carrier G", "by (intro finprod_closed; use assms(3) f subgroup.subset in blast)"], ["proof (state)\nthis:\n  finprod G f (I - {i}) \\<in> carrier G\n\ngoal (1 subgoal):\n 1. finprod G f (I - {i}) \\<otimes> f i = \\<one>", "from m_comm[OF this fc] o"], ["proof (chain)\npicking this:\n  finprod G f (I - {i}) \\<otimes> f i = f i \\<otimes> finprod G f (I - {i})\n  \\<one> = f i \\<otimes> finprod G f (I - {i})", "show \"finprod G f (I - {i}) \\<otimes> f i = \\<one>\""], ["proof (prove)\nusing this:\n  finprod G f (I - {i}) \\<otimes> f i = f i \\<otimes> finprod G f (I - {i})\n  \\<one> = f i \\<otimes> finprod G f (I - {i})\n\ngoal (1 subgoal):\n 1. finprod G f (I - {i}) \\<otimes> f i = \\<one>", "by simp"], ["proof (state)\nthis:\n  finprod G f (I - {i}) \\<otimes> f i = \\<one>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inv f i = finprod G f (I - {i})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inv f i = finprod G f (I - {i})\n\ngoal (1 subgoal):\n 1. f i \\<noteq> \\<one> \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  inv f i = finprod G f (I - {i})\n\ngoal (1 subgoal):\n 1. f i \\<noteq> \\<one> \\<Longrightarrow> False", "have \"finprod G f (I - {i}) \\<in> IDirProds G S (I - {i})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G f (I - {i}) \\<in> IDirProds G S (I - {i})", "proof (intro finprod_closed_subgroup IDirProds_is_subgroup)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<Union> (S ` (I - {i})) \\<subseteq> carrier G\n 2. f \\<in> I - {i} \\<rightarrow> IDirProds G S (I - {i})", "show \"\\<Union> (S ` (I - {i})) \\<subseteq> carrier G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Union> (S ` (I - {i})) \\<subseteq> carrier G", "using assms(3) subgroup.subset"], ["proof (prove)\nusing this:\n  ?i2 \\<in> I \\<Longrightarrow> subgroup (S ?i2) G\n  subgroup ?H ?G \\<Longrightarrow> ?H \\<subseteq> carrier ?G\n\ngoal (1 subgoal):\n 1. \\<Union> (S ` (I - {i})) \\<subseteq> carrier G", "by auto"], ["proof (state)\nthis:\n  \\<Union> (S ` (I - {i})) \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. f \\<in> I - {i} \\<rightarrow> IDirProds G S (I - {i})", "have \"f j \\<in> (IDirProds G S (I - {i}))\" if \"j \\<in> (I - {i})\" for j"], ["proof (prove)\ngoal (1 subgoal):\n 1. f j \\<in> IDirProds G S (I - {i})", "using IDirProds_incl[OF that] f that"], ["proof (prove)\nusing this:\n  ?S j \\<subseteq> IDirProds G ?S (I - {i})\n  ?i2 \\<in> I \\<Longrightarrow> f ?i2 \\<in> S ?i2\n  j \\<in> I - {i}\n\ngoal (1 subgoal):\n 1. f j \\<in> IDirProds G S (I - {i})", "by blast"], ["proof (state)\nthis:\n  ?j2 \\<in> I - {i} \\<Longrightarrow> f ?j2 \\<in> IDirProds G S (I - {i})\n\ngoal (1 subgoal):\n 1. f \\<in> I - {i} \\<rightarrow> IDirProds G S (I - {i})", "thus \"f \\<in> I - {i} \\<rightarrow> IDirProds G S (I - {i})\""], ["proof (prove)\nusing this:\n  ?j2 \\<in> I - {i} \\<Longrightarrow> f ?j2 \\<in> IDirProds G S (I - {i})\n\ngoal (1 subgoal):\n 1. f \\<in> I - {i} \\<rightarrow> IDirProds G S (I - {i})", "by blast"], ["proof (state)\nthis:\n  f \\<in> I - {i} \\<rightarrow> IDirProds G S (I - {i})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finprod G f (I - {i}) \\<in> IDirProds G S (I - {i})\n\ngoal (1 subgoal):\n 1. f i \\<noteq> \\<one> \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  inv f i \\<in> S i\n  inv f i \\<noteq> \\<one>\n  inv f i = finprod G f (I - {i})\n  finprod G f (I - {i}) \\<in> IDirProds G S (I - {i})", "have \"\\<not>complementary (S i) (IDirProds G S (I - {i}))\""], ["proof (prove)\nusing this:\n  inv f i \\<in> S i\n  inv f i \\<noteq> \\<one>\n  inv f i = finprod G f (I - {i})\n  finprod G f (I - {i}) \\<in> IDirProds G S (I - {i})\n\ngoal (1 subgoal):\n 1. \\<not> complementary (S i) (IDirProds G S (I - {i}))", "unfolding complementary_def"], ["proof (prove)\nusing this:\n  inv f i \\<in> S i\n  inv f i \\<noteq> \\<one>\n  inv f i = finprod G f (I - {i})\n  finprod G f (I - {i}) \\<in> IDirProds G S (I - {i})\n\ngoal (1 subgoal):\n 1. S i \\<inter> IDirProds G S (I - {i}) \\<noteq> {\\<one>}", "by auto"], ["proof (state)\nthis:\n  \\<not> complementary (S i) (IDirProds G S (I - {i}))\n\ngoal (1 subgoal):\n 1. f i \\<noteq> \\<one> \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  \\<not> complementary (S i) (IDirProds G S (I - {i}))\n\ngoal (1 subgoal):\n 1. False", "using assms(1) i"], ["proof (prove)\nusing this:\n  \\<not> complementary (S i) (IDirProds G S (I - {i}))\n  compl_fam S I\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. False", "unfolding compl_fam_def"], ["proof (prove)\nusing this:\n  \\<not> complementary (S i) (IDirProds G S (I - {i}))\n  \\<forall>i\\<in>I. complementary (S i) (IDirProds G S (I - {i}))\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f i = \\<one>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f i = \\<one>\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in comm_group) triv_finprod_imp_compl_fam:\n  assumes \"finite I\" \"\\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\"\n  and \"\\<forall>f \\<in> Pi I S. finprod G f I = \\<one> \\<longrightarrow> (\\<forall>i\\<in>I. f i = \\<one>)\"\n  shows \"compl_fam S I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compl_fam S I", "proof (unfold compl_fam_def; rule)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> I \\<Longrightarrow>\n       complementary (S i) (IDirProds G S (I - {i}))", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> I \\<Longrightarrow>\n       complementary (S i) (IDirProds G S (I - {i}))", "assume k: \"k \\<in> I\""], ["proof (state)\nthis:\n  k \\<in> I\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> I \\<Longrightarrow>\n       complementary (S i) (IDirProds G S (I - {i}))", "let ?DP = \"IDirProds G S (I - {k})\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<in> I \\<Longrightarrow>\n       complementary (S i) (IDirProds G S (I - {i}))", "show \"complementary (S k) ?DP\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complementary (S k) (IDirProds G S (I - {k}))", "proof (rule ccontr; unfold complementary_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. S k \\<inter> IDirProds G S (I - {k}) \\<noteq> {\\<one>} \\<Longrightarrow>\n    False", "have sk: \"subgroup (S k) G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup (S k) G", "using assms(2)[OF k]"], ["proof (prove)\nusing this:\n  subgroup (S k) G\n\ngoal (1 subgoal):\n 1. subgroup (S k) G", "."], ["proof (state)\nthis:\n  subgroup (S k) G\n\ngoal (1 subgoal):\n 1. S k \\<inter> IDirProds G S (I - {k}) \\<noteq> {\\<one>} \\<Longrightarrow>\n    False", "have sDP: \"subgroup ?DP G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup (IDirProds G S (I - {k})) G", "by (intro IDirProds_is_subgroup; use subgroup.subset[OF assms(2)] in blast)"], ["proof (state)\nthis:\n  subgroup (IDirProds G S (I - {k})) G\n\ngoal (1 subgoal):\n 1. S k \\<inter> IDirProds G S (I - {k}) \\<noteq> {\\<one>} \\<Longrightarrow>\n    False", "assume a: \"(S k) \\<inter> IDirProds G S (I - {k}) \\<noteq> {\\<one>}\""], ["proof (state)\nthis:\n  S k \\<inter> IDirProds G S (I - {k}) \\<noteq> {\\<one>}\n\ngoal (1 subgoal):\n 1. S k \\<inter> IDirProds G S (I - {k}) \\<noteq> {\\<one>} \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  S k \\<inter> IDirProds G S (I - {k}) \\<noteq> {\\<one>}", "obtain x where x: \"x \\<in> (S k)\" \"x \\<in> IDirProds G S (I - {k})\" \"x \\<noteq> \\<one>\""], ["proof (prove)\nusing this:\n  S k \\<inter> IDirProds G S (I - {k}) \\<noteq> {\\<one>}\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> S k; x \\<in> IDirProds G S (I - {k});\n         x \\<noteq> \\<one>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using subgroup.one_closed sk sDP"], ["proof (prove)\nusing this:\n  S k \\<inter> IDirProds G S (I - {k}) \\<noteq> {\\<one>}\n  subgroup ?H ?G \\<Longrightarrow> \\<one>\\<^bsub>?G\\<^esub> \\<in> ?H\n  subgroup (S k) G\n  subgroup (IDirProds G S (I - {k})) G\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<in> S k; x \\<in> IDirProds G S (I - {k});\n         x \\<noteq> \\<one>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  x \\<in> S k\n  x \\<in> IDirProds G S (I - {k})\n  x \\<noteq> \\<one>\n\ngoal (1 subgoal):\n 1. S k \\<inter> IDirProds G S (I - {k}) \\<noteq> {\\<one>} \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  x \\<in> S k\n  x \\<in> IDirProds G S (I - {k})\n  x \\<noteq> \\<one>", "have \"x \\<in> (\\<lambda>x. finprod G x (I - {k})) ` (Pi (I - {k}) S)\""], ["proof (prove)\nusing this:\n  x \\<in> S k\n  x \\<in> IDirProds G S (I - {k})\n  x \\<noteq> \\<one>\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<lambda>x. finprod G x (I - {k})) ` Pi (I - {k}) S", "using IDirProds_eq_finprod_Pi[of \"(I - {k})\"] assms(1, 2)"], ["proof (prove)\nusing this:\n  x \\<in> S k\n  x \\<in> IDirProds G S (I - {k})\n  x \\<noteq> \\<one>\n  \\<lbrakk>finite (I - {k});\n   \\<And>i. i \\<in> I - {k} \\<Longrightarrow> subgroup (?S i) G\\<rbrakk>\n  \\<Longrightarrow> IDirProds G ?S (I - {k}) =\n                    (\\<lambda>x. finprod G x (I - {k})) ` Pi (I - {k}) ?S\n  finite I\n  ?i2 \\<in> I \\<Longrightarrow> subgroup (S ?i2) G\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<lambda>x. finprod G x (I - {k})) ` Pi (I - {k}) S", "by blast"], ["proof (state)\nthis:\n  x \\<in> (\\<lambda>x. finprod G x (I - {k})) ` Pi (I - {k}) S\n\ngoal (1 subgoal):\n 1. S k \\<inter> IDirProds G S (I - {k}) \\<noteq> {\\<one>} \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  x \\<in> (\\<lambda>x. finprod G x (I - {k})) ` Pi (I - {k}) S", "obtain ht where ht: \"finprod G ht (I - {k}) = x\" \"ht \\<in> Pi (I - {k}) S\""], ["proof (prove)\nusing this:\n  x \\<in> (\\<lambda>x. finprod G x (I - {k})) ` Pi (I - {k}) S\n\ngoal (1 subgoal):\n 1. (\\<And>ht.\n        \\<lbrakk>finprod G ht (I - {k}) = x;\n         ht \\<in> Pi (I - {k}) S\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  finprod G ht (I - {k}) = x\n  ht \\<in> Pi (I - {k}) S\n\ngoal (1 subgoal):\n 1. S k \\<inter> IDirProds G S (I - {k}) \\<noteq> {\\<one>} \\<Longrightarrow>\n    False", "define h where h: \"h = (ht(k := inv x))\""], ["proof (state)\nthis:\n  h = ht(k := inv x)\n\ngoal (1 subgoal):\n 1. S k \\<inter> IDirProds G S (I - {k}) \\<noteq> {\\<one>} \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  h = ht(k := inv x)", "have hPi: \"h \\<in> Pi I S\""], ["proof (prove)\nusing this:\n  h = ht(k := inv x)\n\ngoal (1 subgoal):\n 1. h \\<in> Pi I S", "using ht subgroup.m_inv_closed[OF assms(2)[OF k] x(1)]"], ["proof (prove)\nusing this:\n  h = ht(k := inv x)\n  finprod G ht (I - {k}) = x\n  ht \\<in> Pi (I - {k}) S\n  inv x \\<in> S k\n\ngoal (1 subgoal):\n 1. h \\<in> Pi I S", "by auto"], ["proof (state)\nthis:\n  h \\<in> Pi I S\n\ngoal (1 subgoal):\n 1. S k \\<inter> IDirProds G S (I - {k}) \\<noteq> {\\<one>} \\<Longrightarrow>\n    False", "have \"finprod G h (I - {k}) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G h (I - {k}) = x", "proof (subst ht(1)[symmetric], intro finprod_cong)"], ["proof (state)\ngoal (3 subgoals):\n 1. I - {k} = I - {k}\n 2. (h \\<in> I - {k} \\<rightarrow> carrier G) = True\n 3. \\<And>i. i \\<in> I - {k} =simp=> h i = ht i", "show \"I - {k} = I - {k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I - {k} = I - {k}", "by simp"], ["proof (state)\nthis:\n  I - {k} = I - {k}\n\ngoal (2 subgoals):\n 1. (h \\<in> I - {k} \\<rightarrow> carrier G) = True\n 2. \\<And>i. i \\<in> I - {k} =simp=> h i = ht i", "show \"(h \\<in> I - {k} \\<rightarrow> carrier G) = True\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (h \\<in> I - {k} \\<rightarrow> carrier G) = True", "using h ht(2) subgroup.subset[OF assms(2)]"], ["proof (prove)\nusing this:\n  h = ht(k := inv x)\n  ht \\<in> Pi (I - {k}) S\n  ?i3 \\<in> I \\<Longrightarrow> S ?i3 \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. (h \\<in> I - {k} \\<rightarrow> carrier G) = True", "unfolding Pi_def id_def"], ["proof (prove)\nusing this:\n  h = ht(k := inv x)\n  ht \\<in> {f. \\<forall>x. x \\<in> I - {k} \\<longrightarrow> f x \\<in> S x}\n  ?i3 \\<in> I \\<Longrightarrow> S ?i3 \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. (h \\<in> {f. \\<forall>x.\n                    x \\<in> I - {k} \\<longrightarrow>\n                    f x \\<in> carrier G}) =\n    True", "by auto"], ["proof (state)\nthis:\n  (h \\<in> I - {k} \\<rightarrow> carrier G) = True\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> I - {k} =simp=> h i = ht i", "show \"\\<And>i. i \\<in> I - {k} =simp=> h i = ht i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> I - {k} =simp=> h i = ht i", "using ht(2) h"], ["proof (prove)\nusing this:\n  ht \\<in> Pi (I - {k}) S\n  h = ht(k := inv x)\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> I - {k} =simp=> h i = ht i", "by simp"], ["proof (state)\nthis:\n  ?i2 \\<in> I - {k} =simp=> h ?i2 = ht ?i2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finprod G h (I - {k}) = x\n\ngoal (1 subgoal):\n 1. S k \\<inter> IDirProds G S (I - {k}) \\<noteq> {\\<one>} \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  finprod G h (I - {k}) = x\n\ngoal (1 subgoal):\n 1. S k \\<inter> IDirProds G S (I - {k}) \\<noteq> {\\<one>} \\<Longrightarrow>\n    False", "have \"finprod G h I = h k \\<otimes> finprod G h (I - {k})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G h I = h k \\<otimes> finprod G h (I - {k})", "by (intro finprod_minus; use k assms hPi subgroup.subset[OF assms(2)] Pi_def in blast)"], ["proof (state)\nthis:\n  finprod G h I = h k \\<otimes> finprod G h (I - {k})\n\ngoal (1 subgoal):\n 1. S k \\<inter> IDirProds G S (I - {k}) \\<noteq> {\\<one>} \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  finprod G h (I - {k}) = x\n  finprod G h I = h k \\<otimes> finprod G h (I - {k})", "have \"finprod G h I = inv x \\<otimes> x\""], ["proof (prove)\nusing this:\n  finprod G h (I - {k}) = x\n  finprod G h I = h k \\<otimes> finprod G h (I - {k})\n\ngoal (1 subgoal):\n 1. finprod G h I = inv x \\<otimes> x", "using h"], ["proof (prove)\nusing this:\n  finprod G h (I - {k}) = x\n  finprod G h I = h k \\<otimes> finprod G h (I - {k})\n  h = ht(k := inv x)\n\ngoal (1 subgoal):\n 1. finprod G h I = inv x \\<otimes> x", "by simp"], ["proof (state)\nthis:\n  finprod G h I = inv x \\<otimes> x\n\ngoal (1 subgoal):\n 1. S k \\<inter> IDirProds G S (I - {k}) \\<noteq> {\\<one>} \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  finprod G h I = inv x \\<otimes> x", "have \"finprod G h I = \\<one>\""], ["proof (prove)\nusing this:\n  finprod G h I = inv x \\<otimes> x\n\ngoal (1 subgoal):\n 1. finprod G h I = \\<one>", "using subgroup.subset[OF sk] x(1)"], ["proof (prove)\nusing this:\n  finprod G h I = inv x \\<otimes> x\n  S k \\<subseteq> carrier G\n  x \\<in> S k\n\ngoal (1 subgoal):\n 1. finprod G h I = \\<one>", "by auto"], ["proof (state)\nthis:\n  finprod G h I = \\<one>\n\ngoal (1 subgoal):\n 1. S k \\<inter> IDirProds G S (I - {k}) \\<noteq> {\\<one>} \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  finprod G h I = \\<one>\n\ngoal (1 subgoal):\n 1. S k \\<inter> IDirProds G S (I - {k}) \\<noteq> {\\<one>} \\<Longrightarrow>\n    False", "have \"h k \\<noteq> \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. h k \\<noteq> \\<one>", "using h x(3) subgroup.subset[OF sk] x(1)"], ["proof (prove)\nusing this:\n  h = ht(k := inv x)\n  x \\<noteq> \\<one>\n  S k \\<subseteq> carrier G\n  x \\<in> S k\n\ngoal (1 subgoal):\n 1. h k \\<noteq> \\<one>", "by force"], ["proof (state)\nthis:\n  h k \\<noteq> \\<one>\n\ngoal (1 subgoal):\n 1. S k \\<inter> IDirProds G S (I - {k}) \\<noteq> {\\<one>} \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  finprod G h I = \\<one>\n  h k \\<noteq> \\<one>", "show False"], ["proof (prove)\nusing this:\n  finprod G h I = \\<one>\n  h k \\<noteq> \\<one>\n\ngoal (1 subgoal):\n 1. False", "using assms(3) k hPi"], ["proof (prove)\nusing this:\n  finprod G h I = \\<one>\n  h k \\<noteq> \\<one>\n  \\<forall>f\\<in>Pi I S.\n     finprod G f I = \\<one> \\<longrightarrow>\n     (\\<forall>i\\<in>I. f i = \\<one>)\n  k \\<in> I\n  h \\<in> Pi I S\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  complementary (S k) (IDirProds G S (I - {k}))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in comm_group) triv_finprod_iff_compl_fam_Pi:\n  assumes \"finite I\" \"\\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\"\n  shows \"compl_fam S I \\<longleftrightarrow> (\\<forall>f \\<in> Pi I S. finprod G f I = \\<one> \\<longrightarrow> (\\<forall>i\\<in>I. f i = \\<one>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compl_fam S I =\n    (\\<forall>f\\<in>Pi I S.\n        finprod G f I = \\<one> \\<longrightarrow>\n        (\\<forall>i\\<in>I. f i = \\<one>))", "using compl_fam_imp_triv_finprod triv_finprod_imp_compl_fam assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>compl_fam ?S ?I; finite ?I;\n   \\<And>i. i \\<in> ?I \\<Longrightarrow> subgroup (?S i) G;\n   finprod G ?f ?I = \\<one>; ?f \\<in> Pi ?I ?S\\<rbrakk>\n  \\<Longrightarrow> \\<forall>i\\<in>?I. ?f i = \\<one>\n  \\<lbrakk>finite ?I;\n   \\<And>i. i \\<in> ?I \\<Longrightarrow> subgroup (?S i) G;\n   \\<forall>f\\<in>Pi ?I ?S.\n      finprod G f ?I = \\<one> \\<longrightarrow>\n      (\\<forall>i\\<in>?I. f i = \\<one>)\\<rbrakk>\n  \\<Longrightarrow> compl_fam ?S ?I\n  finite I\n  ?i2 \\<in> I \\<Longrightarrow> subgroup (S ?i2) G\n\ngoal (1 subgoal):\n 1. compl_fam S I =\n    (\\<forall>f\\<in>Pi I S.\n        finprod G f I = \\<one> \\<longrightarrow>\n        (\\<forall>i\\<in>I. f i = \\<one>))", "by blast"], ["", "lemma (in comm_group) triv_finprod_iff_compl_fam_PiE:\n  assumes \"finite I\" \"\\<And>i. i \\<in> I \\<Longrightarrow> subgroup (S i) G\"\n  shows \"compl_fam S I \\<longleftrightarrow> (\\<forall>f \\<in> Pi\\<^sub>E I S. finprod G f I = \\<one> \\<longrightarrow> (\\<forall>i\\<in>I. f i = \\<one>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compl_fam S I =\n    (\\<forall>f\\<in>Pi\\<^sub>E I S.\n        finprod G f I = \\<one> \\<longrightarrow>\n        (\\<forall>i\\<in>I. f i = \\<one>))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. compl_fam S I \\<Longrightarrow>\n    \\<forall>f\\<in>Pi\\<^sub>E I S.\n       finprod G f I = \\<one> \\<longrightarrow>\n       (\\<forall>i\\<in>I. f i = \\<one>)\n 2. \\<forall>f\\<in>Pi\\<^sub>E I S.\n       finprod G f I = \\<one> \\<longrightarrow>\n       (\\<forall>i\\<in>I. f i = \\<one>) \\<Longrightarrow>\n    compl_fam S I", "show \"compl_fam S I \\<Longrightarrow> \\<forall>f\\<in>Pi\\<^sub>E I S. finprod G f I = \\<one> \\<longrightarrow> (\\<forall>i\\<in>I. f i = \\<one>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compl_fam S I \\<Longrightarrow>\n    \\<forall>f\\<in>Pi\\<^sub>E I S.\n       finprod G f I = \\<one> \\<longrightarrow>\n       (\\<forall>i\\<in>I. f i = \\<one>)", "using triv_finprod_iff_compl_fam_Pi[OF assms]"], ["proof (prove)\nusing this:\n  (\\<And>i. i \\<in> I \\<Longrightarrow> ?i3 i \\<in> I) \\<Longrightarrow>\n  compl_fam (\\<lambda>i. S (?i3 i)) I =\n  (\\<forall>f\\<in>\\<Pi> i\\<in>I. S (?i3 i).\n      finprod G f I = \\<one> \\<longrightarrow>\n      (\\<forall>i\\<in>I. f i = \\<one>))\n\ngoal (1 subgoal):\n 1. compl_fam S I \\<Longrightarrow>\n    \\<forall>f\\<in>Pi\\<^sub>E I S.\n       finprod G f I = \\<one> \\<longrightarrow>\n       (\\<forall>i\\<in>I. f i = \\<one>)", "by auto"], ["proof (state)\nthis:\n  compl_fam S I \\<Longrightarrow>\n  \\<forall>f\\<in>Pi\\<^sub>E I S.\n     finprod G f I = \\<one> \\<longrightarrow>\n     (\\<forall>i\\<in>I. f i = \\<one>)\n\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>Pi\\<^sub>E I S.\n       finprod G f I = \\<one> \\<longrightarrow>\n       (\\<forall>i\\<in>I. f i = \\<one>) \\<Longrightarrow>\n    compl_fam S I", "have \"\\<forall>f\\<in>Pi\\<^sub>E I S. finprod G f I = \\<one> \\<longrightarrow> (\\<forall>i\\<in>I. f i = \\<one>)\n    \\<Longrightarrow> \\<forall>f\\<in>Pi I S. finprod G f I = \\<one> \\<longrightarrow> (\\<forall>i\\<in>I. f i = \\<one>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>Pi\\<^sub>E I S.\n       finprod G f I = \\<one> \\<longrightarrow>\n       (\\<forall>i\\<in>I. f i = \\<one>) \\<Longrightarrow>\n    \\<forall>f\\<in>Pi I S.\n       finprod G f I = \\<one> \\<longrightarrow>\n       (\\<forall>i\\<in>I. f i = \\<one>)", "proof(rule+)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f i.\n       \\<lbrakk>\\<forall>f\\<in>Pi\\<^sub>E I S.\n                   finprod G f I = \\<one> \\<longrightarrow>\n                   (\\<forall>i\\<in>I. f i = \\<one>);\n        f \\<in> Pi I S; finprod G f I = \\<one>; i \\<in> I\\<rbrakk>\n       \\<Longrightarrow> f i = \\<one>", "fix f i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>f i.\n       \\<lbrakk>\\<forall>f\\<in>Pi\\<^sub>E I S.\n                   finprod G f I = \\<one> \\<longrightarrow>\n                   (\\<forall>i\\<in>I. f i = \\<one>);\n        f \\<in> Pi I S; finprod G f I = \\<one>; i \\<in> I\\<rbrakk>\n       \\<Longrightarrow> f i = \\<one>", "assume f: \"f \\<in> Pi I S\" \"finprod G f I = \\<one>\" and i: \"i \\<in> I\""], ["proof (state)\nthis:\n  f \\<in> Pi I S\n  finprod G f I = \\<one>\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. \\<And>f i.\n       \\<lbrakk>\\<forall>f\\<in>Pi\\<^sub>E I S.\n                   finprod G f I = \\<one> \\<longrightarrow>\n                   (\\<forall>i\\<in>I. f i = \\<one>);\n        f \\<in> Pi I S; finprod G f I = \\<one>; i \\<in> I\\<rbrakk>\n       \\<Longrightarrow> f i = \\<one>", "assume allf: \"\\<forall>f\\<in>Pi\\<^sub>E I S. finprod G f I = \\<one> \\<longrightarrow> (\\<forall>i\\<in>I. f i = \\<one>)\""], ["proof (state)\nthis:\n  \\<forall>f\\<in>Pi\\<^sub>E I S.\n     finprod G f I = \\<one> \\<longrightarrow>\n     (\\<forall>i\\<in>I. f i = \\<one>)\n\ngoal (1 subgoal):\n 1. \\<And>f i.\n       \\<lbrakk>\\<forall>f\\<in>Pi\\<^sub>E I S.\n                   finprod G f I = \\<one> \\<longrightarrow>\n                   (\\<forall>i\\<in>I. f i = \\<one>);\n        f \\<in> Pi I S; finprod G f I = \\<one>; i \\<in> I\\<rbrakk>\n       \\<Longrightarrow> f i = \\<one>", "have \"f i = restrict f I i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f i = restrict f I i", "using i"], ["proof (prove)\nusing this:\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. f i = restrict f I i", "by simp"], ["proof (state)\nthis:\n  f i = restrict f I i\n\ngoal (1 subgoal):\n 1. \\<And>f i.\n       \\<lbrakk>\\<forall>f\\<in>Pi\\<^sub>E I S.\n                   finprod G f I = \\<one> \\<longrightarrow>\n                   (\\<forall>i\\<in>I. f i = \\<one>);\n        f \\<in> Pi I S; finprod G f I = \\<one>; i \\<in> I\\<rbrakk>\n       \\<Longrightarrow> f i = \\<one>", "moreover"], ["proof (state)\nthis:\n  f i = restrict f I i\n\ngoal (1 subgoal):\n 1. \\<And>f i.\n       \\<lbrakk>\\<forall>f\\<in>Pi\\<^sub>E I S.\n                   finprod G f I = \\<one> \\<longrightarrow>\n                   (\\<forall>i\\<in>I. f i = \\<one>);\n        f \\<in> Pi I S; finprod G f I = \\<one>; i \\<in> I\\<rbrakk>\n       \\<Longrightarrow> f i = \\<one>", "have \"finprod G (restrict f I) I = finprod G f I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G (restrict f I) I = finprod G f I", "using f subgroup.subset[OF assms(2)]"], ["proof (prove)\nusing this:\n  f \\<in> Pi I S\n  finprod G f I = \\<one>\n  ?i3 \\<in> I \\<Longrightarrow> S ?i3 \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. finprod G (restrict f I) I = finprod G f I", "unfolding Pi_def"], ["proof (prove)\nusing this:\n  f \\<in> {f. \\<forall>x. x \\<in> I \\<longrightarrow> f x \\<in> S x}\n  finprod G f I = \\<one>\n  ?i3 \\<in> I \\<Longrightarrow> S ?i3 \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. finprod G (restrict f I) I = finprod G f I", "by (intro finprod_cong; auto)"], ["proof (state)\nthis:\n  finprod G (restrict f I) I = finprod G f I\n\ngoal (1 subgoal):\n 1. \\<And>f i.\n       \\<lbrakk>\\<forall>f\\<in>Pi\\<^sub>E I S.\n                   finprod G f I = \\<one> \\<longrightarrow>\n                   (\\<forall>i\\<in>I. f i = \\<one>);\n        f \\<in> Pi I S; finprod G f I = \\<one>; i \\<in> I\\<rbrakk>\n       \\<Longrightarrow> f i = \\<one>", "moreover"], ["proof (state)\nthis:\n  finprod G (restrict f I) I = finprod G f I\n\ngoal (1 subgoal):\n 1. \\<And>f i.\n       \\<lbrakk>\\<forall>f\\<in>Pi\\<^sub>E I S.\n                   finprod G f I = \\<one> \\<longrightarrow>\n                   (\\<forall>i\\<in>I. f i = \\<one>);\n        f \\<in> Pi I S; finprod G f I = \\<one>; i \\<in> I\\<rbrakk>\n       \\<Longrightarrow> f i = \\<one>", "have \"restrict f I \\<in> Pi\\<^sub>E I S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. restrict f I \\<in> Pi\\<^sub>E I S", "using f"], ["proof (prove)\nusing this:\n  f \\<in> Pi I S\n  finprod G f I = \\<one>\n\ngoal (1 subgoal):\n 1. restrict f I \\<in> Pi\\<^sub>E I S", "by simp"], ["proof (state)\nthis:\n  restrict f I \\<in> Pi\\<^sub>E I S\n\ngoal (1 subgoal):\n 1. \\<And>f i.\n       \\<lbrakk>\\<forall>f\\<in>Pi\\<^sub>E I S.\n                   finprod G f I = \\<one> \\<longrightarrow>\n                   (\\<forall>i\\<in>I. f i = \\<one>);\n        f \\<in> Pi I S; finprod G f I = \\<one>; i \\<in> I\\<rbrakk>\n       \\<Longrightarrow> f i = \\<one>", "ultimately"], ["proof (chain)\npicking this:\n  f i = restrict f I i\n  finprod G (restrict f I) I = finprod G f I\n  restrict f I \\<in> Pi\\<^sub>E I S", "show \"f i = \\<one>\""], ["proof (prove)\nusing this:\n  f i = restrict f I i\n  finprod G (restrict f I) I = finprod G f I\n  restrict f I \\<in> Pi\\<^sub>E I S\n\ngoal (1 subgoal):\n 1. f i = \\<one>", "using allf f i"], ["proof (prove)\nusing this:\n  f i = restrict f I i\n  finprod G (restrict f I) I = finprod G f I\n  restrict f I \\<in> Pi\\<^sub>E I S\n  \\<forall>f\\<in>Pi\\<^sub>E I S.\n     finprod G f I = \\<one> \\<longrightarrow>\n     (\\<forall>i\\<in>I. f i = \\<one>)\n  f \\<in> Pi I S\n  finprod G f I = \\<one>\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. f i = \\<one>", "by metis"], ["proof (state)\nthis:\n  f i = \\<one>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>f\\<in>Pi\\<^sub>E I S.\n     finprod G f I = \\<one> \\<longrightarrow>\n     (\\<forall>i\\<in>I. f i = \\<one>) \\<Longrightarrow>\n  \\<forall>f\\<in>Pi I S.\n     finprod G f I = \\<one> \\<longrightarrow>\n     (\\<forall>i\\<in>I. f i = \\<one>)\n\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>Pi\\<^sub>E I S.\n       finprod G f I = \\<one> \\<longrightarrow>\n       (\\<forall>i\\<in>I. f i = \\<one>) \\<Longrightarrow>\n    compl_fam S I", "thus \"\\<forall>f\\<in>Pi\\<^sub>E I S. finprod G f I = \\<one> \\<longrightarrow> (\\<forall>i\\<in>I. f i = \\<one>) \\<Longrightarrow> compl_fam S I\""], ["proof (prove)\nusing this:\n  \\<forall>f\\<in>Pi\\<^sub>E I S.\n     finprod G f I = \\<one> \\<longrightarrow>\n     (\\<forall>i\\<in>I. f i = \\<one>) \\<Longrightarrow>\n  \\<forall>f\\<in>Pi I S.\n     finprod G f I = \\<one> \\<longrightarrow>\n     (\\<forall>i\\<in>I. f i = \\<one>)\n\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>Pi\\<^sub>E I S.\n       finprod G f I = \\<one> \\<longrightarrow>\n       (\\<forall>i\\<in>I. f i = \\<one>) \\<Longrightarrow>\n    compl_fam S I", "using triv_finprod_iff_compl_fam_Pi[OF assms]"], ["proof (prove)\nusing this:\n  \\<forall>f\\<in>Pi\\<^sub>E I S.\n     finprod G f I = \\<one> \\<longrightarrow>\n     (\\<forall>i\\<in>I. f i = \\<one>) \\<Longrightarrow>\n  \\<forall>f\\<in>Pi I S.\n     finprod G f I = \\<one> \\<longrightarrow>\n     (\\<forall>i\\<in>I. f i = \\<one>)\n  (\\<And>i. i \\<in> I \\<Longrightarrow> ?i3 i \\<in> I) \\<Longrightarrow>\n  compl_fam (\\<lambda>i. S (?i3 i)) I =\n  (\\<forall>f\\<in>\\<Pi> i\\<in>I. S (?i3 i).\n      finprod G f I = \\<one> \\<longrightarrow>\n      (\\<forall>i\\<in>I. f i = \\<one>))\n\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>Pi\\<^sub>E I S.\n       finprod G f I = \\<one> \\<longrightarrow>\n       (\\<forall>i\\<in>I. f i = \\<one>) \\<Longrightarrow>\n    compl_fam S I", "by presburger"], ["proof (state)\nthis:\n  \\<forall>f\\<in>Pi\\<^sub>E I S.\n     finprod G f I = \\<one> \\<longrightarrow>\n     (\\<forall>i\\<in>I. f i = \\<one>) \\<Longrightarrow>\n  compl_fam S I\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The finite product also distributes when nested.\\<close>"], ["", "(* Manuel Eberl, TODO: move to library *)"], ["", "lemma (in comm_monoid) finprod_Sigma:\n  assumes \"finite A\" \"\\<And>x. x \\<in> A \\<Longrightarrow> finite (B x)\"\n  assumes \"\\<And>x y. x \\<in> A \\<Longrightarrow> y \\<in> B x \\<Longrightarrow> g x y \\<in> carrier G\"\n  shows   \"(\\<Otimes>x\\<in>A. \\<Otimes>y\\<in>B x. g x y) = (\\<Otimes>z\\<in>Sigma A B. case z of (x, y) \\<Rightarrow> g x y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Otimes>x\\<in>A. finprod G (g x) (B x)) =\n    (\\<Otimes>z\\<in>Sigma A B. case z of (x, y) \\<Rightarrow> g x y)", "using assms"], ["proof (prove)\nusing this:\n  finite A\n  ?x \\<in> A \\<Longrightarrow> finite (B ?x)\n  \\<lbrakk>?x \\<in> A; ?y \\<in> B ?x\\<rbrakk>\n  \\<Longrightarrow> g ?x ?y \\<in> carrier G\n\ngoal (1 subgoal):\n 1. (\\<Otimes>x\\<in>A. finprod G (g x) (B x)) =\n    (\\<Otimes>z\\<in>Sigma A B. case z of (x, y) \\<Rightarrow> g x y)", "proof (induction A rule: finite_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>x. x \\<in> {} \\<Longrightarrow> finite (B x);\n     \\<And>x y.\n        \\<lbrakk>x \\<in> {}; y \\<in> B x\\<rbrakk>\n        \\<Longrightarrow> g x y \\<in> carrier G\\<rbrakk>\n    \\<Longrightarrow> (\\<Otimes>x\\<in>{}. finprod G (g x) (B x)) =\n                      (\\<Otimes>(x, y)\\<in>Sigma {} B. g x y)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<And>x. x \\<in> F \\<Longrightarrow> finite (B x);\n         \\<And>x y.\n            \\<lbrakk>x \\<in> F; y \\<in> B x\\<rbrakk>\n            \\<Longrightarrow> g x y \\<in> carrier G\\<rbrakk>\n        \\<Longrightarrow> (\\<Otimes>x\\<in>F. finprod G (g x) (B x)) =\n                          (\\<Otimes>(x, y)\\<in>Sigma F B. g x y);\n        \\<And>xa. xa \\<in> insert x F \\<Longrightarrow> finite (B xa);\n        \\<And>xa y.\n           \\<lbrakk>xa \\<in> insert x F; y \\<in> B xa\\<rbrakk>\n           \\<Longrightarrow> g xa y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (\\<Otimes>x\\<in>insert x\n    F. finprod G (g x) (B x)) =\n                         (\\<Otimes>(x, y)\\<in>Sigma (insert x F) B. g x y)", "case (insert x A)"], ["proof (state)\nthis:\n  finite A\n  x \\<notin> A\n  \\<lbrakk>\\<And>x. x \\<in> A \\<Longrightarrow> finite (B x);\n   \\<And>x y.\n      \\<lbrakk>x \\<in> A; y \\<in> B x\\<rbrakk>\n      \\<Longrightarrow> g x y \\<in> carrier G\\<rbrakk>\n  \\<Longrightarrow> (\\<Otimes>x\\<in>A. finprod G (g x) (B x)) =\n                    (\\<Otimes>a\\<in>Sigma A\n                                     B. case a of\n  (a, b) \\<Rightarrow> g a b)\n  ?x \\<in> insert x A \\<Longrightarrow> finite (B ?x)\n  \\<lbrakk>?x \\<in> insert x A; ?y \\<in> B ?x\\<rbrakk>\n  \\<Longrightarrow> g ?x ?y \\<in> carrier G\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>x. x \\<in> {} \\<Longrightarrow> finite (B x);\n     \\<And>x y.\n        \\<lbrakk>x \\<in> {}; y \\<in> B x\\<rbrakk>\n        \\<Longrightarrow> g x y \\<in> carrier G\\<rbrakk>\n    \\<Longrightarrow> (\\<Otimes>x\\<in>{}. finprod G (g x) (B x)) =\n                      (\\<Otimes>(x, y)\\<in>Sigma {} B. g x y)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<And>x. x \\<in> F \\<Longrightarrow> finite (B x);\n         \\<And>x y.\n            \\<lbrakk>x \\<in> F; y \\<in> B x\\<rbrakk>\n            \\<Longrightarrow> g x y \\<in> carrier G\\<rbrakk>\n        \\<Longrightarrow> (\\<Otimes>x\\<in>F. finprod G (g x) (B x)) =\n                          (\\<Otimes>(x, y)\\<in>Sigma F B. g x y);\n        \\<And>xa. xa \\<in> insert x F \\<Longrightarrow> finite (B xa);\n        \\<And>xa y.\n           \\<lbrakk>xa \\<in> insert x F; y \\<in> B xa\\<rbrakk>\n           \\<Longrightarrow> g xa y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (\\<Otimes>x\\<in>insert x\n    F. finprod G (g x) (B x)) =\n                         (\\<Otimes>(x, y)\\<in>Sigma (insert x F) B. g x y)", "have \"(\\<Otimes>z\\<in>Sigma (insert x A) B. case z of (x, y) \\<Rightarrow> g x y) =\n          (\\<Otimes>z\\<in>Pair x ` B x. case z of (x, y) \\<Rightarrow> g x y) \\<otimes> (\\<Otimes>z\\<in>Sigma A B. case z of (x, y) \\<Rightarrow> g x y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Otimes>z\\<in>Sigma (insert x A)\n                     B. case z of (x, y) \\<Rightarrow> g x y) =\n    (\\<Otimes>z\\<in>Pair x `\n                    B x. case z of (x, y) \\<Rightarrow> g x y) \\<otimes>\n    (\\<Otimes>z\\<in>Sigma A B. case z of (x, y) \\<Rightarrow> g x y)", "unfolding Sigma_insert"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Otimes>z\\<in>Pair x ` B x \\<union>\n                    Sigma A B. case z of (x, y) \\<Rightarrow> g x y) =\n    (\\<Otimes>z\\<in>Pair x `\n                    B x. case z of (x, y) \\<Rightarrow> g x y) \\<otimes>\n    (\\<Otimes>z\\<in>Sigma A B. case z of (x, y) \\<Rightarrow> g x y)", "using insert.prems insert.hyps"], ["proof (prove)\nusing this:\n  ?x \\<in> insert x A \\<Longrightarrow> finite (B ?x)\n  \\<lbrakk>?x \\<in> insert x A; ?y \\<in> B ?x\\<rbrakk>\n  \\<Longrightarrow> g ?x ?y \\<in> carrier G\n  finite A\n  x \\<notin> A\n\ngoal (1 subgoal):\n 1. (\\<Otimes>z\\<in>Pair x ` B x \\<union>\n                    Sigma A B. case z of (x, y) \\<Rightarrow> g x y) =\n    (\\<Otimes>z\\<in>Pair x `\n                    B x. case z of (x, y) \\<Rightarrow> g x y) \\<otimes>\n    (\\<Otimes>z\\<in>Sigma A B. case z of (x, y) \\<Rightarrow> g x y)", "by (subst finprod_Un_disjoint) auto"], ["proof (state)\nthis:\n  (\\<Otimes>z\\<in>Sigma (insert x A)\n                   B. case z of (x, y) \\<Rightarrow> g x y) =\n  (\\<Otimes>z\\<in>Pair x `\n                  B x. case z of (x, y) \\<Rightarrow> g x y) \\<otimes>\n  (\\<Otimes>z\\<in>Sigma A B. case z of (x, y) \\<Rightarrow> g x y)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>x. x \\<in> {} \\<Longrightarrow> finite (B x);\n     \\<And>x y.\n        \\<lbrakk>x \\<in> {}; y \\<in> B x\\<rbrakk>\n        \\<Longrightarrow> g x y \\<in> carrier G\\<rbrakk>\n    \\<Longrightarrow> (\\<Otimes>x\\<in>{}. finprod G (g x) (B x)) =\n                      (\\<Otimes>(x, y)\\<in>Sigma {} B. g x y)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<And>x. x \\<in> F \\<Longrightarrow> finite (B x);\n         \\<And>x y.\n            \\<lbrakk>x \\<in> F; y \\<in> B x\\<rbrakk>\n            \\<Longrightarrow> g x y \\<in> carrier G\\<rbrakk>\n        \\<Longrightarrow> (\\<Otimes>x\\<in>F. finprod G (g x) (B x)) =\n                          (\\<Otimes>(x, y)\\<in>Sigma F B. g x y);\n        \\<And>xa. xa \\<in> insert x F \\<Longrightarrow> finite (B xa);\n        \\<And>xa y.\n           \\<lbrakk>xa \\<in> insert x F; y \\<in> B xa\\<rbrakk>\n           \\<Longrightarrow> g xa y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (\\<Otimes>x\\<in>insert x\n    F. finprod G (g x) (B x)) =\n                         (\\<Otimes>(x, y)\\<in>Sigma (insert x F) B. g x y)", "also"], ["proof (state)\nthis:\n  (\\<Otimes>z\\<in>Sigma (insert x A)\n                   B. case z of (x, y) \\<Rightarrow> g x y) =\n  (\\<Otimes>z\\<in>Pair x `\n                  B x. case z of (x, y) \\<Rightarrow> g x y) \\<otimes>\n  (\\<Otimes>z\\<in>Sigma A B. case z of (x, y) \\<Rightarrow> g x y)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>x. x \\<in> {} \\<Longrightarrow> finite (B x);\n     \\<And>x y.\n        \\<lbrakk>x \\<in> {}; y \\<in> B x\\<rbrakk>\n        \\<Longrightarrow> g x y \\<in> carrier G\\<rbrakk>\n    \\<Longrightarrow> (\\<Otimes>x\\<in>{}. finprod G (g x) (B x)) =\n                      (\\<Otimes>(x, y)\\<in>Sigma {} B. g x y)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<And>x. x \\<in> F \\<Longrightarrow> finite (B x);\n         \\<And>x y.\n            \\<lbrakk>x \\<in> F; y \\<in> B x\\<rbrakk>\n            \\<Longrightarrow> g x y \\<in> carrier G\\<rbrakk>\n        \\<Longrightarrow> (\\<Otimes>x\\<in>F. finprod G (g x) (B x)) =\n                          (\\<Otimes>(x, y)\\<in>Sigma F B. g x y);\n        \\<And>xa. xa \\<in> insert x F \\<Longrightarrow> finite (B xa);\n        \\<And>xa y.\n           \\<lbrakk>xa \\<in> insert x F; y \\<in> B xa\\<rbrakk>\n           \\<Longrightarrow> g xa y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (\\<Otimes>x\\<in>insert x\n    F. finprod G (g x) (B x)) =\n                         (\\<Otimes>(x, y)\\<in>Sigma (insert x F) B. g x y)", "have \"(\\<Otimes>z\\<in>Sigma A B. case z of (x, y) \\<Rightarrow> g x y) = (\\<Otimes>x\\<in>A. \\<Otimes>y\\<in>B x. g x y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Otimes>z\\<in>Sigma A B. case z of (x, y) \\<Rightarrow> g x y) =\n    (\\<Otimes>x\\<in>A. finprod G (g x) (B x))", "using insert.prems insert.hyps"], ["proof (prove)\nusing this:\n  ?x \\<in> insert x A \\<Longrightarrow> finite (B ?x)\n  \\<lbrakk>?x \\<in> insert x A; ?y \\<in> B ?x\\<rbrakk>\n  \\<Longrightarrow> g ?x ?y \\<in> carrier G\n  finite A\n  x \\<notin> A\n\ngoal (1 subgoal):\n 1. (\\<Otimes>z\\<in>Sigma A B. case z of (x, y) \\<Rightarrow> g x y) =\n    (\\<Otimes>x\\<in>A. finprod G (g x) (B x))", "by (subst insert.IH [symmetric]) auto"], ["proof (state)\nthis:\n  (\\<Otimes>z\\<in>Sigma A B. case z of (x, y) \\<Rightarrow> g x y) =\n  (\\<Otimes>x\\<in>A. finprod G (g x) (B x))\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>x. x \\<in> {} \\<Longrightarrow> finite (B x);\n     \\<And>x y.\n        \\<lbrakk>x \\<in> {}; y \\<in> B x\\<rbrakk>\n        \\<Longrightarrow> g x y \\<in> carrier G\\<rbrakk>\n    \\<Longrightarrow> (\\<Otimes>x\\<in>{}. finprod G (g x) (B x)) =\n                      (\\<Otimes>(x, y)\\<in>Sigma {} B. g x y)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<And>x. x \\<in> F \\<Longrightarrow> finite (B x);\n         \\<And>x y.\n            \\<lbrakk>x \\<in> F; y \\<in> B x\\<rbrakk>\n            \\<Longrightarrow> g x y \\<in> carrier G\\<rbrakk>\n        \\<Longrightarrow> (\\<Otimes>x\\<in>F. finprod G (g x) (B x)) =\n                          (\\<Otimes>(x, y)\\<in>Sigma F B. g x y);\n        \\<And>xa. xa \\<in> insert x F \\<Longrightarrow> finite (B xa);\n        \\<And>xa y.\n           \\<lbrakk>xa \\<in> insert x F; y \\<in> B xa\\<rbrakk>\n           \\<Longrightarrow> g xa y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (\\<Otimes>x\\<in>insert x\n    F. finprod G (g x) (B x)) =\n                         (\\<Otimes>(x, y)\\<in>Sigma (insert x F) B. g x y)", "also"], ["proof (state)\nthis:\n  (\\<Otimes>z\\<in>Sigma A B. case z of (x, y) \\<Rightarrow> g x y) =\n  (\\<Otimes>x\\<in>A. finprod G (g x) (B x))\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>x. x \\<in> {} \\<Longrightarrow> finite (B x);\n     \\<And>x y.\n        \\<lbrakk>x \\<in> {}; y \\<in> B x\\<rbrakk>\n        \\<Longrightarrow> g x y \\<in> carrier G\\<rbrakk>\n    \\<Longrightarrow> (\\<Otimes>x\\<in>{}. finprod G (g x) (B x)) =\n                      (\\<Otimes>(x, y)\\<in>Sigma {} B. g x y)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<And>x. x \\<in> F \\<Longrightarrow> finite (B x);\n         \\<And>x y.\n            \\<lbrakk>x \\<in> F; y \\<in> B x\\<rbrakk>\n            \\<Longrightarrow> g x y \\<in> carrier G\\<rbrakk>\n        \\<Longrightarrow> (\\<Otimes>x\\<in>F. finprod G (g x) (B x)) =\n                          (\\<Otimes>(x, y)\\<in>Sigma F B. g x y);\n        \\<And>xa. xa \\<in> insert x F \\<Longrightarrow> finite (B xa);\n        \\<And>xa y.\n           \\<lbrakk>xa \\<in> insert x F; y \\<in> B xa\\<rbrakk>\n           \\<Longrightarrow> g xa y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (\\<Otimes>x\\<in>insert x\n    F. finprod G (g x) (B x)) =\n                         (\\<Otimes>(x, y)\\<in>Sigma (insert x F) B. g x y)", "have \"(\\<Otimes>z\\<in>Pair x ` B x. case z of (x, y) \\<Rightarrow> g x y) = (\\<Otimes>y\\<in>B x. g x y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Otimes>z\\<in>Pair x ` B x. case z of (x, y) \\<Rightarrow> g x y) =\n    finprod G (g x) (B x)", "using insert.prems insert.hyps"], ["proof (prove)\nusing this:\n  ?x \\<in> insert x A \\<Longrightarrow> finite (B ?x)\n  \\<lbrakk>?x \\<in> insert x A; ?y \\<in> B ?x\\<rbrakk>\n  \\<Longrightarrow> g ?x ?y \\<in> carrier G\n  finite A\n  x \\<notin> A\n\ngoal (1 subgoal):\n 1. (\\<Otimes>z\\<in>Pair x ` B x. case z of (x, y) \\<Rightarrow> g x y) =\n    finprod G (g x) (B x)", "by (subst finprod_reindex) (auto intro: inj_onI)"], ["proof (state)\nthis:\n  (\\<Otimes>z\\<in>Pair x ` B x. case z of (x, y) \\<Rightarrow> g x y) =\n  finprod G (g x) (B x)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>x. x \\<in> {} \\<Longrightarrow> finite (B x);\n     \\<And>x y.\n        \\<lbrakk>x \\<in> {}; y \\<in> B x\\<rbrakk>\n        \\<Longrightarrow> g x y \\<in> carrier G\\<rbrakk>\n    \\<Longrightarrow> (\\<Otimes>x\\<in>{}. finprod G (g x) (B x)) =\n                      (\\<Otimes>(x, y)\\<in>Sigma {} B. g x y)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<lbrakk>\\<And>x. x \\<in> F \\<Longrightarrow> finite (B x);\n         \\<And>x y.\n            \\<lbrakk>x \\<in> F; y \\<in> B x\\<rbrakk>\n            \\<Longrightarrow> g x y \\<in> carrier G\\<rbrakk>\n        \\<Longrightarrow> (\\<Otimes>x\\<in>F. finprod G (g x) (B x)) =\n                          (\\<Otimes>(x, y)\\<in>Sigma F B. g x y);\n        \\<And>xa. xa \\<in> insert x F \\<Longrightarrow> finite (B xa);\n        \\<And>xa y.\n           \\<lbrakk>xa \\<in> insert x F; y \\<in> B xa\\<rbrakk>\n           \\<Longrightarrow> g xa y \\<in> carrier G\\<rbrakk>\n       \\<Longrightarrow> (\\<Otimes>x\\<in>insert x\n    F. finprod G (g x) (B x)) =\n                         (\\<Otimes>(x, y)\\<in>Sigma (insert x F) B. g x y)", "finally"], ["proof (chain)\npicking this:\n  (\\<Otimes>z\\<in>Sigma (insert x A)\n                   B. case z of (x, y) \\<Rightarrow> g x y) =\n  finprod G (g x) (B x) \\<otimes> (\\<Otimes>x\\<in>A. finprod G (g x) (B x))", "show ?case"], ["proof (prove)\nusing this:\n  (\\<Otimes>z\\<in>Sigma (insert x A)\n                   B. case z of (x, y) \\<Rightarrow> g x y) =\n  finprod G (g x) (B x) \\<otimes> (\\<Otimes>x\\<in>A. finprod G (g x) (B x))\n\ngoal (1 subgoal):\n 1. (\\<Otimes>x\\<in>insert x A. finprod G (g x) (B x)) =\n    (\\<Otimes>a\\<in>Sigma (insert x A)\n                     B. case a of (a, b) \\<Rightarrow> g a b)", "using insert.hyps insert.prems"], ["proof (prove)\nusing this:\n  (\\<Otimes>z\\<in>Sigma (insert x A)\n                   B. case z of (x, y) \\<Rightarrow> g x y) =\n  finprod G (g x) (B x) \\<otimes> (\\<Otimes>x\\<in>A. finprod G (g x) (B x))\n  finite A\n  x \\<notin> A\n  ?x \\<in> insert x A \\<Longrightarrow> finite (B ?x)\n  \\<lbrakk>?x \\<in> insert x A; ?y \\<in> B ?x\\<rbrakk>\n  \\<Longrightarrow> g ?x ?y \\<in> carrier G\n\ngoal (1 subgoal):\n 1. (\\<Otimes>x\\<in>insert x A. finprod G (g x) (B x)) =\n    (\\<Otimes>a\\<in>Sigma (insert x A)\n                     B. case a of (a, b) \\<Rightarrow> g a b)", "by simp"], ["proof (state)\nthis:\n  (\\<Otimes>x\\<in>insert x A. finprod G (g x) (B x)) =\n  (\\<Otimes>a\\<in>Sigma (insert x A)\n                   B. case a of (a, b) \\<Rightarrow> g a b)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>x. x \\<in> {} \\<Longrightarrow> finite (B x);\n     \\<And>x y.\n        \\<lbrakk>x \\<in> {}; y \\<in> B x\\<rbrakk>\n        \\<Longrightarrow> g x y \\<in> carrier G\\<rbrakk>\n    \\<Longrightarrow> (\\<Otimes>x\\<in>{}. finprod G (g x) (B x)) =\n                      (\\<Otimes>(x, y)\\<in>Sigma {} B. g x y)", "qed auto"], ["", "text \\<open>With the now proven facts, we are able to provide criterias to inductively construct a\ngroup that is the internal direct product of a set of generators.\\<close>"], ["", "(* belongs to IDirProd, but uses finprod stuff *)"], ["", "lemma (in comm_group) idirprod_generate_ind:\n  assumes \"finite gs\" \"gs \\<subseteq> carrier G\" \"g \\<in> carrier G\"\n          \"is_idirprod (generate G gs) (\\<lambda>g. generate G {g}) gs\"\n          \"complementary (generate G {g}) (generate G gs)\"\n  shows \"is_idirprod (generate G (gs \\<union> {g})) (\\<lambda>g. generate G {g}) (gs \\<union> {g})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_idirprod (generate G (gs \\<union> {g})) (\\<lambda>g. generate G {g})\n     (gs \\<union> {g})", "proof(cases \"g \\<in> gs\")"], ["proof (state)\ngoal (2 subgoals):\n 1. g \\<in> gs \\<Longrightarrow>\n    is_idirprod (generate G (gs \\<union> {g})) (\\<lambda>g. generate G {g})\n     (gs \\<union> {g})\n 2. g \\<notin> gs \\<Longrightarrow>\n    is_idirprod (generate G (gs \\<union> {g})) (\\<lambda>g. generate G {g})\n     (gs \\<union> {g})", "case True"], ["proof (state)\nthis:\n  g \\<in> gs\n\ngoal (2 subgoals):\n 1. g \\<in> gs \\<Longrightarrow>\n    is_idirprod (generate G (gs \\<union> {g})) (\\<lambda>g. generate G {g})\n     (gs \\<union> {g})\n 2. g \\<notin> gs \\<Longrightarrow>\n    is_idirprod (generate G (gs \\<union> {g})) (\\<lambda>g. generate G {g})\n     (gs \\<union> {g})", "hence \"gs = (gs \\<union> {g})\""], ["proof (prove)\nusing this:\n  g \\<in> gs\n\ngoal (1 subgoal):\n 1. gs = gs \\<union> {g}", "by blast"], ["proof (state)\nthis:\n  gs = gs \\<union> {g}\n\ngoal (2 subgoals):\n 1. g \\<in> gs \\<Longrightarrow>\n    is_idirprod (generate G (gs \\<union> {g})) (\\<lambda>g. generate G {g})\n     (gs \\<union> {g})\n 2. g \\<notin> gs \\<Longrightarrow>\n    is_idirprod (generate G (gs \\<union> {g})) (\\<lambda>g. generate G {g})\n     (gs \\<union> {g})", "thus ?thesis"], ["proof (prove)\nusing this:\n  gs = gs \\<union> {g}\n\ngoal (1 subgoal):\n 1. is_idirprod (generate G (gs \\<union> {g})) (\\<lambda>g. generate G {g})\n     (gs \\<union> {g})", "using assms(4)"], ["proof (prove)\nusing this:\n  gs = gs \\<union> {g}\n  is_idirprod (generate G gs) (\\<lambda>g. generate G {g}) gs\n\ngoal (1 subgoal):\n 1. is_idirprod (generate G (gs \\<union> {g})) (\\<lambda>g. generate G {g})\n     (gs \\<union> {g})", "by auto"], ["proof (state)\nthis:\n  is_idirprod (generate G (gs \\<union> {g})) (\\<lambda>g. generate G {g})\n   (gs \\<union> {g})\n\ngoal (1 subgoal):\n 1. g \\<notin> gs \\<Longrightarrow>\n    is_idirprod (generate G (gs \\<union> {g})) (\\<lambda>g. generate G {g})\n     (gs \\<union> {g})", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. g \\<notin> gs \\<Longrightarrow>\n    is_idirprod (generate G (gs \\<union> {g})) (\\<lambda>g. generate G {g})\n     (gs \\<union> {g})", "case gngs: False"], ["proof (state)\nthis:\n  g \\<notin> gs\n\ngoal (1 subgoal):\n 1. g \\<notin> gs \\<Longrightarrow>\n    is_idirprod (generate G (gs \\<union> {g})) (\\<lambda>g. generate G {g})\n     (gs \\<union> {g})", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. is_idirprod (generate G (gs \\<union> {g})) (\\<lambda>g. generate G {g})\n     (gs \\<union> {g})", "proof (intro is_idirprod_subgroup_suffices)"], ["proof (state)\ngoal (3 subgoals):\n 1. generate G (gs \\<union> {g}) =\n    IDirProds G (\\<lambda>g. generate G {g}) (gs \\<union> {g})\n 2. \\<forall>i\\<in>gs \\<union> {g}. subgroup (generate G {i}) G\n 3. compl_fam (\\<lambda>g. generate G {g}) (gs \\<union> {g})", "have gsgc: \"gs \\<union> {g} \\<subseteq> carrier G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gs \\<union> {g} \\<subseteq> carrier G", "using assms(2, 3)"], ["proof (prove)\nusing this:\n  gs \\<subseteq> carrier G\n  g \\<in> carrier G\n\ngoal (1 subgoal):\n 1. gs \\<union> {g} \\<subseteq> carrier G", "by blast"], ["proof (state)\nthis:\n  gs \\<union> {g} \\<subseteq> carrier G\n\ngoal (3 subgoals):\n 1. generate G (gs \\<union> {g}) =\n    IDirProds G (\\<lambda>g. generate G {g}) (gs \\<union> {g})\n 2. \\<forall>i\\<in>gs \\<union> {g}. subgroup (generate G {i}) G\n 3. compl_fam (\\<lambda>g. generate G {g}) (gs \\<union> {g})", "thus \"generate G (gs \\<union> {g}) = IDirProds G (\\<lambda>g. generate G {g}) (gs \\<union> {g})\""], ["proof (prove)\nusing this:\n  gs \\<union> {g} \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. generate G (gs \\<union> {g}) =\n    IDirProds G (\\<lambda>g. generate G {g}) (gs \\<union> {g})", "unfolding IDirProds_def"], ["proof (prove)\nusing this:\n  gs \\<union> {g} \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. generate G (gs \\<union> {g}) =\n    generate G (\\<Union>g\\<in>gs \\<union> {g}. generate G {g})", "using generate_idem_Un"], ["proof (prove)\nusing this:\n  gs \\<union> {g} \\<subseteq> carrier G\n  ?A \\<subseteq> carrier G \\<Longrightarrow>\n  generate G (\\<Union>x\\<in>?A. generate G {x}) = generate G ?A\n\ngoal (1 subgoal):\n 1. generate G (gs \\<union> {g}) =\n    generate G (\\<Union>g\\<in>gs \\<union> {g}. generate G {g})", "by presburger"], ["proof (state)\nthis:\n  generate G (gs \\<union> {g}) =\n  IDirProds G (\\<lambda>g. generate G {g}) (gs \\<union> {g})\n\ngoal (2 subgoals):\n 1. \\<forall>i\\<in>gs \\<union> {g}. subgroup (generate G {i}) G\n 2. compl_fam (\\<lambda>g. generate G {g}) (gs \\<union> {g})", "show \"\\<forall>i\\<in>gs \\<union> {g}. subgroup (generate G {i}) G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>gs \\<union> {g}. subgroup (generate G {i}) G", "using generate_is_subgroup gsgc"], ["proof (prove)\nusing this:\n  ?H \\<subseteq> carrier G \\<Longrightarrow> subgroup (generate G ?H) G\n  gs \\<union> {g} \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>gs \\<union> {g}. subgroup (generate G {i}) G", "by auto"], ["proof (state)\nthis:\n  \\<forall>i\\<in>gs \\<union> {g}. subgroup (generate G {i}) G\n\ngoal (1 subgoal):\n 1. compl_fam (\\<lambda>g. generate G {g}) (gs \\<union> {g})", "have sg: \"subgroup (generate G {g}) G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subgroup (generate G {g}) G", "by (intro generate_is_subgroup, use assms(3) in blast)"], ["proof (state)\nthis:\n  subgroup (generate G {g}) G\n\ngoal (1 subgoal):\n 1. compl_fam (\\<lambda>g. generate G {g}) (gs \\<union> {g})", "from assms(4) is_idirprod_def"], ["proof (chain)\npicking this:\n  is_idirprod (generate G gs) (\\<lambda>g. generate G {g}) gs\n  is_idirprod ?A ?S ?I =\n  ((\\<forall>i\\<in>?I. ?S i \\<lhd> G) \\<and>\n   ?A = IDirProds G ?S ?I \\<and> compl_fam ?S ?I)", "have ih: \"\\<forall>x. x \\<in> gs \\<longrightarrow> generate G {x} \\<lhd> G\"\n                                           \"compl_fam (\\<lambda>g. generate G {g}) gs\""], ["proof (prove)\nusing this:\n  is_idirprod (generate G gs) (\\<lambda>g. generate G {g}) gs\n  is_idirprod ?A ?S ?I =\n  ((\\<forall>i\\<in>?I. ?S i \\<lhd> G) \\<and>\n   ?A = IDirProds G ?S ?I \\<and> compl_fam ?S ?I)\n\ngoal (1 subgoal):\n 1. \\<forall>x. x \\<in> gs \\<longrightarrow> generate G {x} \\<lhd> G &&&\n    compl_fam (\\<lambda>g. generate G {g}) gs", "by fastforce+"], ["proof (state)\nthis:\n  \\<forall>x. x \\<in> gs \\<longrightarrow> generate G {x} \\<lhd> G\n  compl_fam (\\<lambda>g. generate G {g}) gs\n\ngoal (1 subgoal):\n 1. compl_fam (\\<lambda>g. generate G {g}) (gs \\<union> {g})", "hence ca: \"complementary (generate G {a}) (generate G (gs - {a}))\" if \"a \\<in> gs\" for a"], ["proof (prove)\nusing this:\n  \\<forall>x. x \\<in> gs \\<longrightarrow> generate G {x} \\<lhd> G\n  compl_fam (\\<lambda>g. generate G {g}) gs\n\ngoal (1 subgoal):\n 1. complementary (generate G {a}) (generate G (gs - {a}))", "unfolding compl_fam_def IDirProds_def"], ["proof (prove)\nusing this:\n  \\<forall>x. x \\<in> gs \\<longrightarrow> generate G {x} \\<lhd> G\n  \\<forall>i\\<in>gs.\n     complementary (generate G {i})\n      (generate G (\\<Union>g\\<in>gs - {i}. generate G {g}))\n\ngoal (1 subgoal):\n 1. complementary (generate G {a}) (generate G (gs - {a}))", "using gsgc generate_idem_Un[of \"gs - {a}\"] that"], ["proof (prove)\nusing this:\n  \\<forall>x. x \\<in> gs \\<longrightarrow> generate G {x} \\<lhd> G\n  \\<forall>i\\<in>gs.\n     complementary (generate G {i})\n      (generate G (\\<Union>g\\<in>gs - {i}. generate G {g}))\n  gs \\<union> {g} \\<subseteq> carrier G\n  gs - {a} \\<subseteq> carrier G \\<Longrightarrow>\n  generate G (\\<Union>x\\<in>gs - {a}. generate G {x}) =\n  generate G (gs - {a})\n  a \\<in> gs\n\ngoal (1 subgoal):\n 1. complementary (generate G {a}) (generate G (gs - {a}))", "by fastforce"], ["proof (state)\nthis:\n  ?a2 \\<in> gs \\<Longrightarrow>\n  complementary (generate G {?a2}) (generate G (gs - {?a2}))\n\ngoal (1 subgoal):\n 1. compl_fam (\\<lambda>g. generate G {g}) (gs \\<union> {g})", "have aux: \"gs \\<union> {g} - {i} \\<subseteq> carrier G\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. gs \\<union> {g} - {i} \\<subseteq> carrier G", "using gsgc"], ["proof (prove)\nusing this:\n  gs \\<union> {g} \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. gs \\<union> {g} - {i} \\<subseteq> carrier G", "by blast"], ["proof (state)\nthis:\n  gs \\<union> {g} - {?i2} \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. compl_fam (\\<lambda>g. generate G {g}) (gs \\<union> {g})", "show \"compl_fam (\\<lambda>g. generate G {g}) (gs \\<union> {g})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. compl_fam (\\<lambda>g. generate G {g}) (gs \\<union> {g})", "proof(unfold compl_fam_def IDirProds_def, subst generate_idem_Un[OF aux],\n          rule, rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<in> gs \\<union> {g};\n        \\<not> complementary (generate G {i})\n                (generate G (gs \\<union> {g} - {i}))\\<rbrakk>\n       \\<Longrightarrow> False", "fix h"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<in> gs \\<union> {g};\n        \\<not> complementary (generate G {i})\n                (generate G (gs \\<union> {g} - {i}))\\<rbrakk>\n       \\<Longrightarrow> False", "assume h: \"h \\<in> gs \\<union> {g}\""], ["proof (state)\nthis:\n  h \\<in> gs \\<union> {g}\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<in> gs \\<union> {g};\n        \\<not> complementary (generate G {i})\n                (generate G (gs \\<union> {g} - {i}))\\<rbrakk>\n       \\<Longrightarrow> False", "assume c: \"\\<not> complementary (generate G {h}) (generate G (gs \\<union> {g} - {h}))\""], ["proof (state)\nthis:\n  \\<not> complementary (generate G {h}) (generate G (gs \\<union> {g} - {h}))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<in> gs \\<union> {g};\n        \\<not> complementary (generate G {i})\n                (generate G (gs \\<union> {g} - {i}))\\<rbrakk>\n       \\<Longrightarrow> False", "show \"False\""], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof (cases \"h = g\")"], ["proof (state)\ngoal (2 subgoals):\n 1. h = g \\<Longrightarrow> False\n 2. h \\<noteq> g \\<Longrightarrow> False", "case True"], ["proof (state)\nthis:\n  h = g\n\ngoal (2 subgoals):\n 1. h = g \\<Longrightarrow> False\n 2. h \\<noteq> g \\<Longrightarrow> False", "with c"], ["proof (chain)\npicking this:\n  \\<not> complementary (generate G {h}) (generate G (gs \\<union> {g} - {h}))\n  h = g", "have \"\\<not> complementary (generate G {g}) (generate G (gs - {g}))\""], ["proof (prove)\nusing this:\n  \\<not> complementary (generate G {h}) (generate G (gs \\<union> {g} - {h}))\n  h = g\n\ngoal (1 subgoal):\n 1. \\<not> complementary (generate G {g}) (generate G (gs - {g}))", "by auto"], ["proof (state)\nthis:\n  \\<not> complementary (generate G {g}) (generate G (gs - {g}))\n\ngoal (2 subgoals):\n 1. h = g \\<Longrightarrow> False\n 2. h \\<noteq> g \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  \\<not> complementary (generate G {g}) (generate G (gs - {g}))\n\ngoal (2 subgoals):\n 1. h = g \\<Longrightarrow> False\n 2. h \\<noteq> g \\<Longrightarrow> False", "have \"complementary (generate G {g}) (generate G (gs - {g}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. complementary (generate G {g}) (generate G (gs - {g}))", "by (rule subgroup_subset_complementary[OF generate_is_subgroup generate_is_subgroup[of gs]\n                   generate_is_subgroup mono_generate], use assms(2, 3, 5) in auto)"], ["proof (state)\nthis:\n  complementary (generate G {g}) (generate G (gs - {g}))\n\ngoal (2 subgoals):\n 1. h = g \\<Longrightarrow> False\n 2. h \\<noteq> g \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  \\<not> complementary (generate G {g}) (generate G (gs - {g}))\n  complementary (generate G {g}) (generate G (gs - {g}))", "show False"], ["proof (prove)\nusing this:\n  \\<not> complementary (generate G {g}) (generate G (gs - {g}))\n  complementary (generate G {g}) (generate G (gs - {g}))\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. h \\<noteq> g \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. h \\<noteq> g \\<Longrightarrow> False", "case hng: False"], ["proof (state)\nthis:\n  h \\<noteq> g\n\ngoal (1 subgoal):\n 1. h \\<noteq> g \\<Longrightarrow> False", "hence h: \"h \\<in> gs\" \"h \\<noteq> g\""], ["proof (prove)\nusing this:\n  h \\<noteq> g\n\ngoal (1 subgoal):\n 1. h \\<in> gs &&& h \\<noteq> g", "using h"], ["proof (prove)\nusing this:\n  h \\<noteq> g\n  h \\<in> gs \\<union> {g}\n\ngoal (1 subgoal):\n 1. h \\<in> gs &&& h \\<noteq> g", "by blast+"], ["proof (state)\nthis:\n  h \\<in> gs\n  h \\<noteq> g\n\ngoal (1 subgoal):\n 1. h \\<noteq> g \\<Longrightarrow> False", "hence \"gs \\<union> {g} - {h} = gs - {h} \\<union> {g}\""], ["proof (prove)\nusing this:\n  h \\<in> gs\n  h \\<noteq> g\n\ngoal (1 subgoal):\n 1. gs \\<union> {g} - {h} = gs - {h} \\<union> {g}", "by blast"], ["proof (state)\nthis:\n  gs \\<union> {g} - {h} = gs - {h} \\<union> {g}\n\ngoal (1 subgoal):\n 1. h \\<noteq> g \\<Longrightarrow> False", "with c"], ["proof (chain)\npicking this:\n  \\<not> complementary (generate G {h}) (generate G (gs \\<union> {g} - {h}))\n  gs \\<union> {g} - {h} = gs - {h} \\<union> {g}", "have c: \"\\<not> complementary (generate G {h}) (generate G (gs - {h} \\<union> {g}))\""], ["proof (prove)\nusing this:\n  \\<not> complementary (generate G {h}) (generate G (gs \\<union> {g} - {h}))\n  gs \\<union> {g} - {h} = gs - {h} \\<union> {g}\n\ngoal (1 subgoal):\n 1. \\<not> complementary (generate G {h})\n            (generate G (gs - {h} \\<union> {g}))", "by argo"], ["proof (state)\nthis:\n  \\<not> complementary (generate G {h}) (generate G (gs - {h} \\<union> {g}))\n\ngoal (1 subgoal):\n 1. h \\<noteq> g \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> complementary (generate G {h}) (generate G (gs - {h} \\<union> {g}))", "obtain k where k: \"k \\<in> generate G {h}\" \"k \\<in> generate G (gs - {h} \\<union> {g})\" \"k \\<noteq> \\<one>\""], ["proof (prove)\nusing this:\n  \\<not> complementary (generate G {h}) (generate G (gs - {h} \\<union> {g}))\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>k \\<in> generate G {h};\n         k \\<in> generate G (gs - {h} \\<union> {g});\n         k \\<noteq> \\<one>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding complementary_def"], ["proof (prove)\nusing this:\n  generate G {h} \\<inter> generate G (gs - {h} \\<union> {g}) \\<noteq>\n  {\\<one>}\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>k \\<in> generate G {h};\n         k \\<in> generate G (gs - {h} \\<union> {g});\n         k \\<noteq> \\<one>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using generate.one"], ["proof (prove)\nusing this:\n  generate G {h} \\<inter> generate G (gs - {h} \\<union> {g}) \\<noteq>\n  {\\<one>}\n  \\<one>\\<^bsub>?G\\<^esub> \\<in> generate ?G ?H\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<lbrakk>k \\<in> generate G {h};\n         k \\<in> generate G (gs - {h} \\<union> {g});\n         k \\<noteq> \\<one>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  k \\<in> generate G {h}\n  k \\<in> generate G (gs - {h} \\<union> {g})\n  k \\<noteq> \\<one>\n\ngoal (1 subgoal):\n 1. h \\<noteq> g \\<Longrightarrow> False", "with ca"], ["proof (chain)\npicking this:\n  ?a2 \\<in> gs \\<Longrightarrow>\n  complementary (generate G {?a2}) (generate G (gs - {?a2}))\n  k \\<in> generate G {h}\n  k \\<in> generate G (gs - {h} \\<union> {g})\n  k \\<noteq> \\<one>", "have kngh: \"k \\<notin> generate G (gs - {h})\""], ["proof (prove)\nusing this:\n  ?a2 \\<in> gs \\<Longrightarrow>\n  complementary (generate G {?a2}) (generate G (gs - {?a2}))\n  k \\<in> generate G {h}\n  k \\<in> generate G (gs - {h} \\<union> {g})\n  k \\<noteq> \\<one>\n\ngoal (1 subgoal):\n 1. k \\<notin> generate G (gs - {h})", "using h"], ["proof (prove)\nusing this:\n  ?a2 \\<in> gs \\<Longrightarrow>\n  complementary (generate G {?a2}) (generate G (gs - {?a2}))\n  k \\<in> generate G {h}\n  k \\<in> generate G (gs - {h} \\<union> {g})\n  k \\<noteq> \\<one>\n  h \\<in> gs\n  h \\<noteq> g\n\ngoal (1 subgoal):\n 1. k \\<notin> generate G (gs - {h})", "unfolding complementary_def"], ["proof (prove)\nusing this:\n  ?a2 \\<in> gs \\<Longrightarrow>\n  generate G {?a2} \\<inter> generate G (gs - {?a2}) = {\\<one>}\n  k \\<in> generate G {h}\n  k \\<in> generate G (gs - {h} \\<union> {g})\n  k \\<noteq> \\<one>\n  h \\<in> gs\n  h \\<noteq> g\n\ngoal (1 subgoal):\n 1. k \\<notin> generate G (gs - {h})", "by blast"], ["proof (state)\nthis:\n  k \\<notin> generate G (gs - {h})\n\ngoal (1 subgoal):\n 1. h \\<noteq> g \\<Longrightarrow> False", "from k(2) generate_eq_finprod_PiE_image[of \"gs - {h} \\<union> {g}\"] assms(1) gsgc"], ["proof (chain)\npicking this:\n  k \\<in> generate G (gs - {h} \\<union> {g})\n  \\<lbrakk>finite (gs - {h} \\<union> {g});\n   gs - {h} \\<union> {g} \\<subseteq> carrier G\\<rbrakk>\n  \\<Longrightarrow> generate G (gs - {h} \\<union> {g}) =\n                    (\\<lambda>x. finprod G x (gs - {h} \\<union> {g})) `\n                    (\\<Pi>\\<^sub>E a\\<in>gs - {h} \\<union> {g}.\n                        generate G {a})\n  finite gs\n  gs \\<union> {g} \\<subseteq> carrier G", "obtain f where f:\n          \"k = finprod G f (gs - {h} \\<union> {g})\" \"f \\<in> (\\<Pi>\\<^sub>E a\\<in>gs - {h} \\<union> {g}. generate G {a})\""], ["proof (prove)\nusing this:\n  k \\<in> generate G (gs - {h} \\<union> {g})\n  \\<lbrakk>finite (gs - {h} \\<union> {g});\n   gs - {h} \\<union> {g} \\<subseteq> carrier G\\<rbrakk>\n  \\<Longrightarrow> generate G (gs - {h} \\<union> {g}) =\n                    (\\<lambda>x. finprod G x (gs - {h} \\<union> {g})) `\n                    (\\<Pi>\\<^sub>E a\\<in>gs - {h} \\<union> {g}.\n                        generate G {a})\n  finite gs\n  gs \\<union> {g} \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>k = finprod G f (gs - {h} \\<union> {g});\n         f \\<in> (\\<Pi>\\<^sub>E a\\<in>gs - {h} \\<union> {g}.\n                     generate G {a})\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  k = finprod G f (gs - {h} \\<union> {g})\n  f \\<in> (\\<Pi>\\<^sub>E a\\<in>gs - {h} \\<union> {g}. generate G {a})\n\ngoal (1 subgoal):\n 1. h \\<noteq> g \\<Longrightarrow> False", "have fg: \"f a \\<in> generate G {a}\" if \"a \\<in> (gs - {h} \\<union> {g})\" for a"], ["proof (prove)\ngoal (1 subgoal):\n 1. f a \\<in> generate G {a}", "using that f(2)"], ["proof (prove)\nusing this:\n  a \\<in> gs - {h} \\<union> {g}\n  f \\<in> (\\<Pi>\\<^sub>E a\\<in>gs - {h} \\<union> {g}. generate G {a})\n\ngoal (1 subgoal):\n 1. f a \\<in> generate G {a}", "by blast"], ["proof (state)\nthis:\n  ?a2 \\<in> gs - {h} \\<union> {g} \\<Longrightarrow>\n  f ?a2 \\<in> generate G {?a2}\n\ngoal (1 subgoal):\n 1. h \\<noteq> g \\<Longrightarrow> False", "have fc: \"f a \\<in> carrier G\" if \"a \\<in> (gs - {h} \\<union> {g})\" for a"], ["proof (prove)\ngoal (1 subgoal):\n 1. f a \\<in> carrier G", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f a \\<in> carrier G", "have \"generate G {a} \\<subseteq> carrier G\" if \"a \\<in> (gs - {h} \\<union> {g})\" for a"], ["proof (prove)\ngoal (1 subgoal):\n 1. generate G {a} \\<subseteq> carrier G", "using that generate_incl[of \"{a}\"] gsgc"], ["proof (prove)\nusing this:\n  a \\<in> gs - {h} \\<union> {g}\n  {a} \\<subseteq> carrier G \\<Longrightarrow>\n  generate G {a} \\<subseteq> carrier G\n  gs \\<union> {g} \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. generate G {a} \\<subseteq> carrier G", "by blast"], ["proof (state)\nthis:\n  ?a2 \\<in> gs - {h} \\<union> {g} \\<Longrightarrow>\n  generate G {?a2} \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. f a \\<in> carrier G", "thus \"f a \\<in> carrier G\""], ["proof (prove)\nusing this:\n  ?a2 \\<in> gs - {h} \\<union> {g} \\<Longrightarrow>\n  generate G {?a2} \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. f a \\<in> carrier G", "using that fg"], ["proof (prove)\nusing this:\n  ?a2 \\<in> gs - {h} \\<union> {g} \\<Longrightarrow>\n  generate G {?a2} \\<subseteq> carrier G\n  a \\<in> gs - {h} \\<union> {g}\n  ?a2 \\<in> gs - {h} \\<union> {g} \\<Longrightarrow>\n  f ?a2 \\<in> generate G {?a2}\n\ngoal (1 subgoal):\n 1. f a \\<in> carrier G", "by auto"], ["proof (state)\nthis:\n  f a \\<in> carrier G\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?a2 \\<in> gs - {h} \\<union> {g} \\<Longrightarrow> f ?a2 \\<in> carrier G\n\ngoal (1 subgoal):\n 1. h \\<noteq> g \\<Longrightarrow> False", "have kp: \"k = f g \\<otimes> finprod G f (gs - {h})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k = f g \\<otimes> finprod G f (gs - {h})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. k = f g \\<otimes> finprod G f (gs - {h})", "have \"(gs - {h} \\<union> {g}) = insert g (gs - {h})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gs - {h} \\<union> {g} = insert g (gs - {h})", "by fast"], ["proof (state)\nthis:\n  gs - {h} \\<union> {g} = insert g (gs - {h})\n\ngoal (1 subgoal):\n 1. k = f g \\<otimes> finprod G f (gs - {h})", "moreover"], ["proof (state)\nthis:\n  gs - {h} \\<union> {g} = insert g (gs - {h})\n\ngoal (1 subgoal):\n 1. k = f g \\<otimes> finprod G f (gs - {h})", "have \"finprod G f (insert g (gs - {h})) = f g \\<otimes> finprod G f (gs - {h})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G f (insert g (gs - {h})) = f g \\<otimes> finprod G f (gs - {h})", "by (intro finprod_insert, use fc assms(1) gngs in auto)"], ["proof (state)\nthis:\n  finprod G f (insert g (gs - {h})) = f g \\<otimes> finprod G f (gs - {h})\n\ngoal (1 subgoal):\n 1. k = f g \\<otimes> finprod G f (gs - {h})", "ultimately"], ["proof (chain)\npicking this:\n  gs - {h} \\<union> {g} = insert g (gs - {h})\n  finprod G f (insert g (gs - {h})) = f g \\<otimes> finprod G f (gs - {h})", "show ?thesis"], ["proof (prove)\nusing this:\n  gs - {h} \\<union> {g} = insert g (gs - {h})\n  finprod G f (insert g (gs - {h})) = f g \\<otimes> finprod G f (gs - {h})\n\ngoal (1 subgoal):\n 1. k = f g \\<otimes> finprod G f (gs - {h})", "using f(1)"], ["proof (prove)\nusing this:\n  gs - {h} \\<union> {g} = insert g (gs - {h})\n  finprod G f (insert g (gs - {h})) = f g \\<otimes> finprod G f (gs - {h})\n  k = finprod G f (gs - {h} \\<union> {g})\n\ngoal (1 subgoal):\n 1. k = f g \\<otimes> finprod G f (gs - {h})", "by argo"], ["proof (state)\nthis:\n  k = f g \\<otimes> finprod G f (gs - {h})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  k = f g \\<otimes> finprod G f (gs - {h})\n\ngoal (1 subgoal):\n 1. h \\<noteq> g \\<Longrightarrow> False", "have fgsh: \"finprod G f (gs - {h}) \\<in> generate G (gs - {h})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finprod G f (gs - {h}) \\<in> generate G (gs - {h})", "proof(intro finprod_closed_subgroup[OF generate_is_subgroup])"], ["proof (state)\ngoal (2 subgoals):\n 1. gs - {h} \\<subseteq> carrier G\n 2. f \\<in> gs - {h} \\<rightarrow> generate G (gs - {h})", "show \"gs - {h} \\<subseteq> carrier G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gs - {h} \\<subseteq> carrier G", "using gsgc"], ["proof (prove)\nusing this:\n  gs \\<union> {g} \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. gs - {h} \\<subseteq> carrier G", "by blast"], ["proof (state)\nthis:\n  gs - {h} \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. f \\<in> gs - {h} \\<rightarrow> generate G (gs - {h})", "have \"f a \\<in> generate G (gs - {h})\" if \"a \\<in> (gs - {h})\" for a"], ["proof (prove)\ngoal (1 subgoal):\n 1. f a \\<in> generate G (gs - {h})", "using mono_generate[of \"{a}\" \"gs - {h}\"] fg that"], ["proof (prove)\nusing this:\n  {a} \\<subseteq> gs - {h} \\<Longrightarrow>\n  generate G {a} \\<subseteq> generate G (gs - {h})\n  ?a2 \\<in> gs - {h} \\<union> {g} \\<Longrightarrow>\n  f ?a2 \\<in> generate G {?a2}\n  a \\<in> gs - {h}\n\ngoal (1 subgoal):\n 1. f a \\<in> generate G (gs - {h})", "by blast"], ["proof (state)\nthis:\n  ?a2 \\<in> gs - {h} \\<Longrightarrow> f ?a2 \\<in> generate G (gs - {h})\n\ngoal (1 subgoal):\n 1. f \\<in> gs - {h} \\<rightarrow> generate G (gs - {h})", "thus \"f \\<in> gs - {h} \\<rightarrow> generate G (gs - {h})\""], ["proof (prove)\nusing this:\n  ?a2 \\<in> gs - {h} \\<Longrightarrow> f ?a2 \\<in> generate G (gs - {h})\n\ngoal (1 subgoal):\n 1. f \\<in> gs - {h} \\<rightarrow> generate G (gs - {h})", "by blast"], ["proof (state)\nthis:\n  f \\<in> gs - {h} \\<rightarrow> generate G (gs - {h})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finprod G f (gs - {h}) \\<in> generate G (gs - {h})\n\ngoal (1 subgoal):\n 1. h \\<noteq> g \\<Longrightarrow> False", "have \"f g \\<otimes> finprod G f (gs - {h}) \\<notin> generate G gs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f g \\<otimes> finprod G f (gs - {h}) \\<notin> generate G gs", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. f g \\<otimes> finprod G f (gs - {h})\n    \\<in> generate G gs \\<Longrightarrow>\n    False", "assume fpgs: \"f g \\<otimes> finprod G f (gs - {h}) \\<in> generate G gs\""], ["proof (state)\nthis:\n  f g \\<otimes> finprod G f (gs - {h}) \\<in> generate G gs\n\ngoal (1 subgoal):\n 1. f g \\<otimes> finprod G f (gs - {h})\n    \\<in> generate G gs \\<Longrightarrow>\n    False", "from fgsh"], ["proof (chain)\npicking this:\n  finprod G f (gs - {h}) \\<in> generate G (gs - {h})", "have fgsgs: \"finprod G f (gs - {h}) \\<in> generate G gs\""], ["proof (prove)\nusing this:\n  finprod G f (gs - {h}) \\<in> generate G (gs - {h})\n\ngoal (1 subgoal):\n 1. finprod G f (gs - {h}) \\<in> generate G gs", "using mono_generate[of \"gs - {h}\" gs]"], ["proof (prove)\nusing this:\n  finprod G f (gs - {h}) \\<in> generate G (gs - {h})\n  gs - {h} \\<subseteq> gs \\<Longrightarrow>\n  generate G (gs - {h}) \\<subseteq> generate G gs\n\ngoal (1 subgoal):\n 1. finprod G f (gs - {h}) \\<in> generate G gs", "by blast"], ["proof (state)\nthis:\n  finprod G f (gs - {h}) \\<in> generate G gs\n\ngoal (1 subgoal):\n 1. f g \\<otimes> finprod G f (gs - {h})\n    \\<in> generate G gs \\<Longrightarrow>\n    False", "have fPi: \"f \\<in> (\\<Pi> a\\<in>(gs - {h}). generate G {a})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> (\\<Pi> a\\<in>gs - {h}. generate G {a})", "using f"], ["proof (prove)\nusing this:\n  k = finprod G f (gs - {h} \\<union> {g})\n  f \\<in> (\\<Pi>\\<^sub>E a\\<in>gs - {h} \\<union> {g}. generate G {a})\n\ngoal (1 subgoal):\n 1. f \\<in> (\\<Pi> a\\<in>gs - {h}. generate G {a})", "by blast"], ["proof (state)\nthis:\n  f \\<in> (\\<Pi> a\\<in>gs - {h}. generate G {a})\n\ngoal (1 subgoal):\n 1. f g \\<otimes> finprod G f (gs - {h})\n    \\<in> generate G gs \\<Longrightarrow>\n    False", "have gI: \"generate G (gs - {h})\n                  = (\\<lambda>x. finprod G x (gs - {h})) ` (\\<Pi> a\\<in>gs - {h}. generate G {a})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. generate G (gs - {h}) =\n    (\\<lambda>x. finprod G x (gs - {h})) `\n    (\\<Pi> a\\<in>gs - {h}. generate G {a})", "using generate_eq_finprod_Pi_image[of \"gs - {h}\"] assms(1, 2)"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite (gs - {h}); gs - {h} \\<subseteq> carrier G\\<rbrakk>\n  \\<Longrightarrow> generate G (gs - {h}) =\n                    (\\<lambda>x. finprod G x (gs - {h})) `\n                    (\\<Pi> a\\<in>gs - {h}. generate G {a})\n  finite gs\n  gs \\<subseteq> carrier G\n\ngoal (1 subgoal):\n 1. generate G (gs - {h}) =\n    (\\<lambda>x. finprod G x (gs - {h})) `\n    (\\<Pi> a\\<in>gs - {h}. generate G {a})", "by blast"], ["proof (state)\nthis:\n  generate G (gs - {h}) =\n  (\\<lambda>x. finprod G x (gs - {h})) `\n  (\\<Pi> a\\<in>gs - {h}. generate G {a})\n\ngoal (1 subgoal):\n 1. f g \\<otimes> finprod G f (gs - {h})\n    \\<in> generate G gs \\<Longrightarrow>\n    False", "have fgno: \"f g \\<noteq> \\<one>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f g \\<noteq> \\<one>", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> f g \\<noteq> \\<one> \\<Longrightarrow> False", "assume o: \"\\<not> f g \\<noteq> \\<one>\""], ["proof (state)\nthis:\n  \\<not> f g \\<noteq> \\<one>\n\ngoal (1 subgoal):\n 1. \\<not> f g \\<noteq> \\<one> \\<Longrightarrow> False", "hence kf: \"k = finprod G f (gs - {h})\""], ["proof (prove)\nusing this:\n  \\<not> f g \\<noteq> \\<one>\n\ngoal (1 subgoal):\n 1. k = finprod G f (gs - {h})", "using kp finprod_closed fc"], ["proof (prove)\nusing this:\n  \\<not> f g \\<noteq> \\<one>\n  k = f g \\<otimes> finprod G f (gs - {h})\n  ?f \\<in> ?A \\<rightarrow> carrier G \\<Longrightarrow>\n  finprod G ?f ?A \\<in> carrier G\n  ?a2 \\<in> gs - {h} \\<union> {g} \\<Longrightarrow> f ?a2 \\<in> carrier G\n\ngoal (1 subgoal):\n 1. k = finprod G f (gs - {h})", "by auto"], ["proof (state)\nthis:\n  k = finprod G f (gs - {h})\n\ngoal (1 subgoal):\n 1. \\<not> f g \\<noteq> \\<one> \\<Longrightarrow> False", "hence \"k \\<in> generate G (gs - {h})\""], ["proof (prove)\nusing this:\n  k = finprod G f (gs - {h})\n\ngoal (1 subgoal):\n 1. k \\<in> generate G (gs - {h})", "using fPi gI"], ["proof (prove)\nusing this:\n  k = finprod G f (gs - {h})\n  f \\<in> (\\<Pi> a\\<in>gs - {h}. generate G {a})\n  generate G (gs - {h}) =\n  (\\<lambda>x. finprod G x (gs - {h})) `\n  (\\<Pi> a\\<in>gs - {h}. generate G {a})\n\ngoal (1 subgoal):\n 1. k \\<in> generate G (gs - {h})", "by blast"], ["proof (state)\nthis:\n  k \\<in> generate G (gs - {h})\n\ngoal (1 subgoal):\n 1. \\<not> f g \\<noteq> \\<one> \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  k \\<in> generate G (gs - {h})\n\ngoal (1 subgoal):\n 1. False", "using k ca h"], ["proof (prove)\nusing this:\n  k \\<in> generate G (gs - {h})\n  k \\<in> generate G {h}\n  k \\<in> generate G (gs - {h} \\<union> {g})\n  k \\<noteq> \\<one>\n  ?a2 \\<in> gs \\<Longrightarrow>\n  complementary (generate G {?a2}) (generate G (gs - {?a2}))\n  h \\<in> gs\n  h \\<noteq> g\n\ngoal (1 subgoal):\n 1. False", "unfolding complementary_def"], ["proof (prove)\nusing this:\n  k \\<in> generate G (gs - {h})\n  k \\<in> generate G {h}\n  k \\<in> generate G (gs - {h} \\<union> {g})\n  k \\<noteq> \\<one>\n  ?a2 \\<in> gs \\<Longrightarrow>\n  generate G {?a2} \\<inter> generate G (gs - {?a2}) = {\\<one>}\n  h \\<in> gs\n  h \\<noteq> g\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f g \\<noteq> \\<one>\n\ngoal (1 subgoal):\n 1. f g \\<otimes> finprod G f (gs - {h})\n    \\<in> generate G gs \\<Longrightarrow>\n    False", "from fpgs"], ["proof (chain)\npicking this:\n  f g \\<otimes> finprod G f (gs - {h}) \\<in> generate G gs", "have \"f g \\<in> generate G gs\""], ["proof (prove)\nusing this:\n  f g \\<otimes> finprod G f (gs - {h}) \\<in> generate G gs\n\ngoal (1 subgoal):\n 1. f g \\<in> generate G gs", "using subgroup.mult_in_cancel_right[OF generate_is_subgroup[OF assms(2)] fc[of g] fgsgs]"], ["proof (prove)\nusing this:\n  f g \\<otimes> finprod G f (gs - {h}) \\<in> generate G gs\n  \\<lbrakk>g \\<in> gs - {h} \\<union> {g}; Group.group G\\<rbrakk>\n  \\<Longrightarrow> (f g \\<otimes> finprod G f (gs - {h})\n                     \\<in> generate G gs) =\n                    (f g \\<in> generate G gs)\n\ngoal (1 subgoal):\n 1. f g \\<in> generate G gs", "by blast"], ["proof (state)\nthis:\n  f g \\<in> generate G gs\n\ngoal (1 subgoal):\n 1. f g \\<otimes> finprod G f (gs - {h})\n    \\<in> generate G gs \\<Longrightarrow>\n    False", "with fgno assms(5) fg[of g]"], ["proof (chain)\npicking this:\n  f g \\<noteq> \\<one>\n  complementary (generate G {g}) (generate G gs)\n  g \\<in> gs - {h} \\<union> {g} \\<Longrightarrow> f g \\<in> generate G {g}\n  f g \\<in> generate G gs", "show \"False\""], ["proof (prove)\nusing this:\n  f g \\<noteq> \\<one>\n  complementary (generate G {g}) (generate G gs)\n  g \\<in> gs - {h} \\<union> {g} \\<Longrightarrow> f g \\<in> generate G {g}\n  f g \\<in> generate G gs\n\ngoal (1 subgoal):\n 1. False", "unfolding complementary_def"], ["proof (prove)\nusing this:\n  f g \\<noteq> \\<one>\n  generate G {g} \\<inter> generate G gs = {\\<one>}\n  g \\<in> gs - {h} \\<union> {g} \\<Longrightarrow> f g \\<in> generate G {g}\n  f g \\<in> generate G gs\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f g \\<otimes> finprod G f (gs - {h}) \\<notin> generate G gs\n\ngoal (1 subgoal):\n 1. h \\<noteq> g \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  f g \\<otimes> finprod G f (gs - {h}) \\<notin> generate G gs\n\ngoal (1 subgoal):\n 1. h \\<noteq> g \\<Longrightarrow> False", "have \"k \\<in> generate G gs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k \\<in> generate G gs", "using k(1) mono_generate[of \"{h}\" gs] h(1)"], ["proof (prove)\nusing this:\n  k \\<in> generate G {h}\n  {h} \\<subseteq> gs \\<Longrightarrow>\n  generate G {h} \\<subseteq> generate G gs\n  h \\<in> gs\n\ngoal (1 subgoal):\n 1. k \\<in> generate G gs", "by blast"], ["proof (state)\nthis:\n  k \\<in> generate G gs\n\ngoal (1 subgoal):\n 1. h \\<noteq> g \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  f g \\<otimes> finprod G f (gs - {h}) \\<notin> generate G gs\n  k \\<in> generate G gs", "show False"], ["proof (prove)\nusing this:\n  f g \\<otimes> finprod G f (gs - {h}) \\<notin> generate G gs\n  k \\<in> generate G gs\n\ngoal (1 subgoal):\n 1. False", "using kp"], ["proof (prove)\nusing this:\n  f g \\<otimes> finprod G f (gs - {h}) \\<notin> generate G gs\n  k \\<in> generate G gs\n  k = f g \\<otimes> finprod G f (gs - {h})\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  compl_fam (\\<lambda>g. generate G {g}) (gs \\<union> {g})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  is_idirprod (generate G (gs \\<union> {g})) (\\<lambda>g. generate G {g})\n   (gs \\<union> {g})\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}