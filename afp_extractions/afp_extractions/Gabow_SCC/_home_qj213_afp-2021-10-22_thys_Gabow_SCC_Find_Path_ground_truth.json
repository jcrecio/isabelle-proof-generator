{"file_name": "/home/qj213/afp-2021-10-22/thys/Gabow_SCC/Find_Path.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Gabow_SCC", "problem_names": ["lemma find_path_ex_rule:\n    assumes \"finite U0\"\n    assumes \"finite (E\\<^sup>*``U0)\"\n    assumes \"\\<exists>v\\<in>E\\<^sup>*``U0. P v\"\n    shows \"find_path E U0 P \\<le> SPEC (\\<lambda>r. \n      \\<exists>p v. r = Some (p,v) \\<and> P v \\<and> (\\<forall>v\\<in>set p. \\<not>P v) \\<and> (\\<exists>u0\\<in>U0. path E u0 p v))\"", "lemma (in -) find_path1_ex_rule:\n    assumes \"finite (E\\<^sup>*``{u0})\"\n    assumes \"\\<exists>v\\<in>E\\<^sup>+``{u0}. P v\"\n    shows \"find_path1 E u0 P \\<le> SPEC (\\<lambda>r. \n      \\<exists>p v. r = Some (p,v) \\<and> p\\<noteq>[] \\<and> P v \\<and> path E u0 p v)\""], "translations": [["", "lemma find_path_ex_rule:\n    assumes \"finite U0\"\n    assumes \"finite (E\\<^sup>*``U0)\"\n    assumes \"\\<exists>v\\<in>E\\<^sup>*``U0. P v\"\n    shows \"find_path E U0 P \\<le> SPEC (\\<lambda>r. \n      \\<exists>p v. r = Some (p,v) \\<and> P v \\<and> (\\<forall>v\\<in>set p. \\<not>P v) \\<and> (\\<exists>u0\\<in>U0. path E u0 p v))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. find_path E U0 P\n    \\<le> SPEC\n           (\\<lambda>r.\n               \\<exists>p v.\n                  r = Some (p, v) \\<and>\n                  P v \\<and>\n                  (\\<forall>v\\<in>set p. \\<not> P v) \\<and>\n                  (\\<exists>u0\\<in>U0. path E u0 p v))", "unfolding find_path_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ASSERT (finite U0) \\<bind>\n    (\\<lambda>_.\n        ASSERT (finite (E\\<^sup>* `` U0)) \\<bind>\n        (\\<lambda>_.\n            SPEC\n             (\\<lambda>p.\n                 case p of\n                 None \\<Rightarrow>\n                   \\<forall>u0\\<in>U0.\n                      \\<forall>v\\<in>E\\<^sup>* `` {u0}. \\<not> P v\n                 | Some (p, v) \\<Rightarrow>\n                     \\<exists>u0\\<in>U0.\n                        path E u0 p v \\<and>\n                        P v \\<and> (\\<forall>v\\<in>set p. \\<not> P v))))\n    \\<le> SPEC\n           (\\<lambda>r.\n               \\<exists>p v.\n                  r = Some (p, v) \\<and>\n                  P v \\<and>\n                  (\\<forall>v\\<in>set p. \\<not> P v) \\<and>\n                  (\\<exists>u0\\<in>U0. path E u0 p v))", "using assms"], ["proof (prove)\nusing this:\n  finite U0\n  finite (E\\<^sup>* `` U0)\n  \\<exists>v\\<in>E\\<^sup>* `` U0. P v\n\ngoal (1 subgoal):\n 1. ASSERT (finite U0) \\<bind>\n    (\\<lambda>_.\n        ASSERT (finite (E\\<^sup>* `` U0)) \\<bind>\n        (\\<lambda>_.\n            SPEC\n             (\\<lambda>p.\n                 case p of\n                 None \\<Rightarrow>\n                   \\<forall>u0\\<in>U0.\n                      \\<forall>v\\<in>E\\<^sup>* `` {u0}. \\<not> P v\n                 | Some (p, v) \\<Rightarrow>\n                     \\<exists>u0\\<in>U0.\n                        path E u0 p v \\<and>\n                        P v \\<and> (\\<forall>v\\<in>set p. \\<not> P v))))\n    \\<le> SPEC\n           (\\<lambda>r.\n               \\<exists>p v.\n                  r = Some (p, v) \\<and>\n                  P v \\<and>\n                  (\\<forall>v\\<in>set p. \\<not> P v) \\<and>\n                  (\\<exists>u0\\<in>U0. path E u0 p v))", "by (fastforce split: option.splits)"], ["", "subsection \\<open>Nontrivial Paths\\<close>"], ["", "definition \"find_path1 E u0 P \\<equiv> do { \n    ASSERT (finite (E\\<^sup>*``{u0}));\n    SPEC (\\<lambda>p. case p of \n      Some (p,v) \\<Rightarrow> path E u0 p v \\<and> P v \\<and> p\\<noteq>[]\n    | None \\<Rightarrow> \\<forall>v\\<in>E\\<^sup>+``{u0}. \\<not>P v)}\""], ["", "lemma (in -) find_path1_ex_rule:\n    assumes \"finite (E\\<^sup>*``{u0})\"\n    assumes \"\\<exists>v\\<in>E\\<^sup>+``{u0}. P v\"\n    shows \"find_path1 E u0 P \\<le> SPEC (\\<lambda>r. \n      \\<exists>p v. r = Some (p,v) \\<and> p\\<noteq>[] \\<and> P v \\<and> path E u0 p v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. find_path1 E u0 P\n    \\<le> SPEC\n           (\\<lambda>r.\n               \\<exists>p v.\n                  r = Some (p, v) \\<and>\n                  p \\<noteq> [] \\<and> P v \\<and> path E u0 p v)", "unfolding find_path1_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ASSERT (finite (E\\<^sup>* `` {u0})) \\<bind>\n    (\\<lambda>_.\n        SPEC\n         (\\<lambda>p.\n             case p of\n             None \\<Rightarrow> \\<forall>v\\<in>E\\<^sup>+ `` {u0}. \\<not> P v\n             | Some (p, v) \\<Rightarrow>\n                 path E u0 p v \\<and> P v \\<and> p \\<noteq> []))\n    \\<le> SPEC\n           (\\<lambda>r.\n               \\<exists>p v.\n                  r = Some (p, v) \\<and>\n                  p \\<noteq> [] \\<and> P v \\<and> path E u0 p v)", "using assms"], ["proof (prove)\nusing this:\n  finite (E\\<^sup>* `` {u0})\n  \\<exists>v\\<in>E\\<^sup>+ `` {u0}. P v\n\ngoal (1 subgoal):\n 1. ASSERT (finite (E\\<^sup>* `` {u0})) \\<bind>\n    (\\<lambda>_.\n        SPEC\n         (\\<lambda>p.\n             case p of\n             None \\<Rightarrow> \\<forall>v\\<in>E\\<^sup>+ `` {u0}. \\<not> P v\n             | Some (p, v) \\<Rightarrow>\n                 path E u0 p v \\<and> P v \\<and> p \\<noteq> []))\n    \\<le> SPEC\n           (\\<lambda>r.\n               \\<exists>p v.\n                  r = Some (p, v) \\<and>\n                  p \\<noteq> [] \\<and> P v \\<and> path E u0 p v)", "by (fastforce split: option.splits)"], ["", "end"]]}