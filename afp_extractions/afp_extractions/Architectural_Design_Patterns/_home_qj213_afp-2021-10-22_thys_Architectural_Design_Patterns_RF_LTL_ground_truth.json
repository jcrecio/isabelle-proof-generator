{"file_name": "/home/qj213/afp-2021-10-22/thys/Architectural_Design_Patterns/RF_LTL.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Architectural_Design_Patterns", "problem_names": ["lemma ccard_same:\n  assumes \"\\<not> p (Suc n')\"\n  shows \"ccard n n' p = ccard n (Suc n') p\"", "lemma ccard_zero[simp]:\n  fixes n::nat\n  shows \"ccard n n p = 0\"", "lemma ccard_inc:\n  assumes \"p (Suc n')\"\n    and \"n' \\<ge> n\"\n  shows \"ccard n (Suc n') p = Suc (ccard n n' p)\"", "lemma ccard_mono:\n  assumes \"n'\\<ge>n\"\n  shows \"n''\\<ge>n' \\<Longrightarrow> ccard n (n''::nat) p \\<ge> ccard n n' p\"", "lemma ccard_ub[simp]:\n  \"ccard n n' p \\<le> Suc n' - n\"", "lemma ccard_sum:\n  fixes n::nat\n  assumes \"n'\\<ge>n''\"\n    and \"n''\\<ge>n\"\n  shows \"ccard n n' P = ccard n n'' P + ccard n'' n' P\"", "lemma ccard_ex:\n  fixes n::nat\n  shows \"c\\<ge>1 \\<Longrightarrow> c < ccard n n'' P \\<Longrightarrow> \\<exists>n'<n''. n'>n \\<and> ccard n n' P = c\"", "lemma ccard_freq:\n  assumes \"(n'::nat)\\<ge>n\"\n    and \"ccard n n' P > ccard n n' Q + cnf\"\n  shows \"\\<exists>n' n''. ccard n' n'' P > cnf \\<and> ccard n' n'' Q \\<le> cnf\"", "lemma prefix_save:\n  assumes \"prefix sbc (bc n')\"\n    and \"\\<forall>n'''>n'. n'''\\<le>n'' \\<longrightarrow> length (bc n''') \\<ge> length sbc\"\n  shows \"n''\\<ge>n' \\<Longrightarrow> prefix sbc (bc n'')\"", "theorem prefix_length:\n  assumes \"prefix sbc (bc n')\" and \"\\<not> prefix sbc (bc n'')\" and \"n'\\<le>n''\"\n  shows \"\\<exists>n'''>n'. n'''\\<le>n'' \\<and> length (bc n''') < length sbc\"", "theorem grow_mining:\n  assumes \"length (bc n) < length (bc (Suc n))\"\n  shows \"mining (Suc n)\"", "lemma length_suc_length:\n  \"length (bc (Suc n)) \\<le> Suc (length (bc n))\"", "theorem ccard_diff_lgth:\n    \"n'\\<ge>n \\<Longrightarrow> ccard n n' (\\<lambda>n. mining n) \\<ge> (bc n' - bc n)\"", "lemma grow_mono: \"n'\\<ge>n\\<Longrightarrow>bc n'\\<ge>bc n\"", "theorem ccard_diff_lgth:\n    shows \"n'\\<ge>n \\<Longrightarrow> bc n' - bc n \\<ge> ccard n n' (\\<lambda>n. mining n)\"", "theorem hn_upper_bound: shows \"dbc n < hbc n\""], "translations": [["", "lemma ccard_same:\n  assumes \"\\<not> p (Suc n')\"\n  shows \"ccard n n' p = ccard n (Suc n') p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> p i} =\n    card {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> p i} =\n    card {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}", "have \"{i. i > n \\<and> i \\<le> Suc n' \\<and> p i} = {i. i>n \\<and> i \\<le> n' \\<and> p i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. n < i \\<and> i \\<le> Suc n' \\<and> p i} =\n    {i. n < i \\<and> i \\<le> n' \\<and> p i}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}\n    \\<subseteq> {i. n < i \\<and> i \\<le> n' \\<and> p i}\n 2. {i. n < i \\<and> i \\<le> n' \\<and> p i}\n    \\<subseteq> {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}", "show \"{i. n < i \\<and> i \\<le> Suc n' \\<and> p i} \\<subseteq> {i. n < i \\<and> i \\<le> n' \\<and> p i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}\n    \\<subseteq> {i. n < i \\<and> i \\<le> n' \\<and> p i}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {i. n < i \\<and> i \\<le> Suc n' \\<and> p i} \\<Longrightarrow>\n       x \\<in> {i. n < i \\<and> i \\<le> n' \\<and> p i}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {i. n < i \\<and> i \\<le> Suc n' \\<and> p i} \\<Longrightarrow>\n       x \\<in> {i. n < i \\<and> i \\<le> n' \\<and> p i}", "assume \"x \\<in> {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}\""], ["proof (state)\nthis:\n  x \\<in> {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {i. n < i \\<and> i \\<le> Suc n' \\<and> p i} \\<Longrightarrow>\n       x \\<in> {i. n < i \\<and> i \\<le> n' \\<and> p i}", "hence \"n<x\" and \"x\\<le>Suc n'\" and \"p x\""], ["proof (prove)\nusing this:\n  x \\<in> {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}\n\ngoal (1 subgoal):\n 1. n < x &&& x \\<le> Suc n' &&& p x", "by auto"], ["proof (state)\nthis:\n  n < x\n  x \\<le> Suc n'\n  p x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {i. n < i \\<and> i \\<le> Suc n' \\<and> p i} \\<Longrightarrow>\n       x \\<in> {i. n < i \\<and> i \\<le> n' \\<and> p i}", "with assms (1)"], ["proof (chain)\npicking this:\n  \\<not> p (Suc n')\n  n < x\n  x \\<le> Suc n'\n  p x", "have \"x\\<noteq>Suc n'\""], ["proof (prove)\nusing this:\n  \\<not> p (Suc n')\n  n < x\n  x \\<le> Suc n'\n  p x\n\ngoal (1 subgoal):\n 1. x \\<noteq> Suc n'", "by auto"], ["proof (state)\nthis:\n  x \\<noteq> Suc n'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {i. n < i \\<and> i \\<le> Suc n' \\<and> p i} \\<Longrightarrow>\n       x \\<in> {i. n < i \\<and> i \\<le> n' \\<and> p i}", "with \\<open>x\\<le>Suc n'\\<close>"], ["proof (chain)\npicking this:\n  x \\<le> Suc n'\n  x \\<noteq> Suc n'", "have \"x \\<le> n'\""], ["proof (prove)\nusing this:\n  x \\<le> Suc n'\n  x \\<noteq> Suc n'\n\ngoal (1 subgoal):\n 1. x \\<le> n'", "by simp"], ["proof (state)\nthis:\n  x \\<le> n'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {i. n < i \\<and> i \\<le> Suc n' \\<and> p i} \\<Longrightarrow>\n       x \\<in> {i. n < i \\<and> i \\<le> n' \\<and> p i}", "with \\<open>n<x\\<close> \\<open>p x\\<close>"], ["proof (chain)\npicking this:\n  n < x\n  p x\n  x \\<le> n'", "show \"x \\<in> {i. n < i \\<and> i \\<le> n' \\<and> p i}\""], ["proof (prove)\nusing this:\n  n < x\n  p x\n  x \\<le> n'\n\ngoal (1 subgoal):\n 1. x \\<in> {i. n < i \\<and> i \\<le> n' \\<and> p i}", "by simp"], ["proof (state)\nthis:\n  x \\<in> {i. n < i \\<and> i \\<le> n' \\<and> p i}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}\n  \\<subseteq> {i. n < i \\<and> i \\<le> n' \\<and> p i}\n\ngoal (1 subgoal):\n 1. {i. n < i \\<and> i \\<le> n' \\<and> p i}\n    \\<subseteq> {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. {i. n < i \\<and> i \\<le> n' \\<and> p i}\n    \\<subseteq> {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}", "show \"{i. n < i \\<and> i \\<le> n' \\<and> p i} \\<subseteq> {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. n < i \\<and> i \\<le> n' \\<and> p i}\n    \\<subseteq> {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}", "by auto"], ["proof (state)\nthis:\n  {i. n < i \\<and> i \\<le> n' \\<and> p i}\n  \\<subseteq> {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {i. n < i \\<and> i \\<le> Suc n' \\<and> p i} =\n  {i. n < i \\<and> i \\<le> n' \\<and> p i}\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> p i} =\n    card {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}", "thus ?thesis"], ["proof (prove)\nusing this:\n  {i. n < i \\<and> i \\<le> Suc n' \\<and> p i} =\n  {i. n < i \\<and> i \\<le> n' \\<and> p i}\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> p i} =\n    card {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}", "by simp"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> n' \\<and> p i} =\n  card {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ccard_zero[simp]:\n  fixes n::nat\n  shows \"ccard n n p = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n \\<and> p i} = 0", "by auto"], ["", "lemma ccard_inc:\n  assumes \"p (Suc n')\"\n    and \"n' \\<ge> n\"\n  shows \"ccard n (Suc n') p = Suc (ccard n n' p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> Suc n' \\<and> p i} =\n    Suc (card {i. n < i \\<and> i \\<le> n' \\<and> p i})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> Suc n' \\<and> p i} =\n    Suc (card {i. n < i \\<and> i \\<le> n' \\<and> p i})", "let ?A = \"{i. i > n \\<and> i \\<le> n' \\<and> p i}\""], ["proof (state)\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> Suc n' \\<and> p i} =\n    Suc (card {i. n < i \\<and> i \\<le> n' \\<and> p i})", "have \"finite ?A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {i. n < i \\<and> i \\<le> n' \\<and> p i}", "by simp"], ["proof (state)\nthis:\n  finite {i. n < i \\<and> i \\<le> n' \\<and> p i}\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> Suc n' \\<and> p i} =\n    Suc (card {i. n < i \\<and> i \\<le> n' \\<and> p i})", "moreover"], ["proof (state)\nthis:\n  finite {i. n < i \\<and> i \\<le> n' \\<and> p i}\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> Suc n' \\<and> p i} =\n    Suc (card {i. n < i \\<and> i \\<le> n' \\<and> p i})", "have \"Suc n' \\<notin> ?A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc n' \\<notin> {i. n < i \\<and> i \\<le> n' \\<and> p i}", "by simp"], ["proof (state)\nthis:\n  Suc n' \\<notin> {i. n < i \\<and> i \\<le> n' \\<and> p i}\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> Suc n' \\<and> p i} =\n    Suc (card {i. n < i \\<and> i \\<le> n' \\<and> p i})", "ultimately"], ["proof (chain)\npicking this:\n  finite {i. n < i \\<and> i \\<le> n' \\<and> p i}\n  Suc n' \\<notin> {i. n < i \\<and> i \\<le> n' \\<and> p i}", "have \"card (insert (Suc n') ?A) = Suc (card ?A)\""], ["proof (prove)\nusing this:\n  finite {i. n < i \\<and> i \\<le> n' \\<and> p i}\n  Suc n' \\<notin> {i. n < i \\<and> i \\<le> n' \\<and> p i}\n\ngoal (1 subgoal):\n 1. card (insert (Suc n') {i. n < i \\<and> i \\<le> n' \\<and> p i}) =\n    Suc (card {i. n < i \\<and> i \\<le> n' \\<and> p i})", "using card_insert_disjoint[of ?A]"], ["proof (prove)\nusing this:\n  finite {i. n < i \\<and> i \\<le> n' \\<and> p i}\n  Suc n' \\<notin> {i. n < i \\<and> i \\<le> n' \\<and> p i}\n  \\<lbrakk>finite {i. n < i \\<and> i \\<le> n' \\<and> p i};\n   ?x \\<notin> {i. n < i \\<and> i \\<le> n' \\<and> p i}\\<rbrakk>\n  \\<Longrightarrow> card\n                     (insert ?x {i. n < i \\<and> i \\<le> n' \\<and> p i}) =\n                    Suc (card {i. n < i \\<and> i \\<le> n' \\<and> p i})\n\ngoal (1 subgoal):\n 1. card (insert (Suc n') {i. n < i \\<and> i \\<le> n' \\<and> p i}) =\n    Suc (card {i. n < i \\<and> i \\<le> n' \\<and> p i})", "by simp"], ["proof (state)\nthis:\n  card (insert (Suc n') {i. n < i \\<and> i \\<le> n' \\<and> p i}) =\n  Suc (card {i. n < i \\<and> i \\<le> n' \\<and> p i})\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> Suc n' \\<and> p i} =\n    Suc (card {i. n < i \\<and> i \\<le> n' \\<and> p i})", "moreover"], ["proof (state)\nthis:\n  card (insert (Suc n') {i. n < i \\<and> i \\<le> n' \\<and> p i}) =\n  Suc (card {i. n < i \\<and> i \\<le> n' \\<and> p i})\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> Suc n' \\<and> p i} =\n    Suc (card {i. n < i \\<and> i \\<le> n' \\<and> p i})", "have \"insert (Suc n') ?A = {i. i>n \\<and> i \\<le> (Suc n') \\<and> p i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (Suc n') {i. n < i \\<and> i \\<le> n' \\<and> p i} =\n    {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. insert (Suc n') {i. n < i \\<and> i \\<le> n' \\<and> p i}\n    \\<subseteq> {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}\n 2. {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}\n    \\<subseteq> insert (Suc n') {i. n < i \\<and> i \\<le> n' \\<and> p i}", "show \"insert (Suc n') ?A \\<subseteq> {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (Suc n') {i. n < i \\<and> i \\<le> n' \\<and> p i}\n    \\<subseteq> {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> insert (Suc n')\n                {i. n < i \\<and> i \\<le> n' \\<and> p i} \\<Longrightarrow>\n       x \\<in> {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> insert (Suc n')\n                {i. n < i \\<and> i \\<le> n' \\<and> p i} \\<Longrightarrow>\n       x \\<in> {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}", "assume \"x \\<in> insert (Suc n') {i. n < i \\<and> i \\<le> n' \\<and> p i}\""], ["proof (state)\nthis:\n  x \\<in> insert (Suc n') {i. n < i \\<and> i \\<le> n' \\<and> p i}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> insert (Suc n')\n                {i. n < i \\<and> i \\<le> n' \\<and> p i} \\<Longrightarrow>\n       x \\<in> {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}", "hence \"x=Suc n' \\<or> n < x \\<and> x \\<le> n' \\<and> p x\""], ["proof (prove)\nusing this:\n  x \\<in> insert (Suc n') {i. n < i \\<and> i \\<le> n' \\<and> p i}\n\ngoal (1 subgoal):\n 1. x = Suc n' \\<or> n < x \\<and> x \\<le> n' \\<and> p x", "by simp"], ["proof (state)\nthis:\n  x = Suc n' \\<or> n < x \\<and> x \\<le> n' \\<and> p x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> insert (Suc n')\n                {i. n < i \\<and> i \\<le> n' \\<and> p i} \\<Longrightarrow>\n       x \\<in> {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}", "thus \"x \\<in> {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}\""], ["proof (prove)\nusing this:\n  x = Suc n' \\<or> n < x \\<and> x \\<le> n' \\<and> p x\n\ngoal (1 subgoal):\n 1. x \\<in> {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. x = Suc n' \\<Longrightarrow>\n    x \\<in> {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}\n 2. n < x \\<and> x \\<le> n' \\<and> p x \\<Longrightarrow>\n    x \\<in> {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}", "assume \"x = Suc n'\""], ["proof (state)\nthis:\n  x = Suc n'\n\ngoal (2 subgoals):\n 1. x = Suc n' \\<Longrightarrow>\n    x \\<in> {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}\n 2. n < x \\<and> x \\<le> n' \\<and> p x \\<Longrightarrow>\n    x \\<in> {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}", "with assms (1) assms (2)"], ["proof (chain)\npicking this:\n  p (Suc n')\n  n \\<le> n'\n  x = Suc n'", "show ?thesis"], ["proof (prove)\nusing this:\n  p (Suc n')\n  n \\<le> n'\n  x = Suc n'\n\ngoal (1 subgoal):\n 1. x \\<in> {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}", "by simp"], ["proof (state)\nthis:\n  x \\<in> {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}\n\ngoal (1 subgoal):\n 1. n < x \\<and> x \\<le> n' \\<and> p x \\<Longrightarrow>\n    x \\<in> {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n < x \\<and> x \\<le> n' \\<and> p x \\<Longrightarrow>\n    x \\<in> {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}", "assume \"n < x \\<and> x \\<le> n' \\<and> p x\""], ["proof (state)\nthis:\n  n < x \\<and> x \\<le> n' \\<and> p x\n\ngoal (1 subgoal):\n 1. n < x \\<and> x \\<le> n' \\<and> p x \\<Longrightarrow>\n    x \\<in> {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}", "thus ?thesis"], ["proof (prove)\nusing this:\n  n < x \\<and> x \\<le> n' \\<and> p x\n\ngoal (1 subgoal):\n 1. x \\<in> {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}", "by simp"], ["proof (state)\nthis:\n  x \\<in> {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  insert (Suc n') {i. n < i \\<and> i \\<le> n' \\<and> p i}\n  \\<subseteq> {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}\n\ngoal (1 subgoal):\n 1. {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}\n    \\<subseteq> insert (Suc n') {i. n < i \\<and> i \\<le> n' \\<and> p i}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}\n    \\<subseteq> insert (Suc n') {i. n < i \\<and> i \\<le> n' \\<and> p i}", "show \"{i. n < i \\<and> i \\<le> Suc n' \\<and> p i} \\<subseteq> insert (Suc n') ?A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}\n    \\<subseteq> insert (Suc n') {i. n < i \\<and> i \\<le> n' \\<and> p i}", "by auto"], ["proof (state)\nthis:\n  {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}\n  \\<subseteq> insert (Suc n') {i. n < i \\<and> i \\<le> n' \\<and> p i}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  insert (Suc n') {i. n < i \\<and> i \\<le> n' \\<and> p i} =\n  {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> Suc n' \\<and> p i} =\n    Suc (card {i. n < i \\<and> i \\<le> n' \\<and> p i})", "ultimately"], ["proof (chain)\npicking this:\n  card (insert (Suc n') {i. n < i \\<and> i \\<le> n' \\<and> p i}) =\n  Suc (card {i. n < i \\<and> i \\<le> n' \\<and> p i})\n  insert (Suc n') {i. n < i \\<and> i \\<le> n' \\<and> p i} =\n  {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}", "show ?thesis"], ["proof (prove)\nusing this:\n  card (insert (Suc n') {i. n < i \\<and> i \\<le> n' \\<and> p i}) =\n  Suc (card {i. n < i \\<and> i \\<le> n' \\<and> p i})\n  insert (Suc n') {i. n < i \\<and> i \\<le> n' \\<and> p i} =\n  {i. n < i \\<and> i \\<le> Suc n' \\<and> p i}\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> Suc n' \\<and> p i} =\n    Suc (card {i. n < i \\<and> i \\<le> n' \\<and> p i})", "by simp"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> Suc n' \\<and> p i} =\n  Suc (card {i. n < i \\<and> i \\<le> n' \\<and> p i})\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ccard_mono:\n  assumes \"n'\\<ge>n\"\n  shows \"n''\\<ge>n' \\<Longrightarrow> ccard n (n''::nat) p \\<ge> ccard n n' p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n' \\<le> n'' \\<Longrightarrow>\n    card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n    \\<le> card {i. n < i \\<and> i \\<le> n'' \\<and> p i}", "proof (induction n'' rule: dec_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n    \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n 2. \\<And>na.\n       \\<lbrakk>n' \\<le> na; na < n'';\n        card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n        \\<le> card {i. n < i \\<and> i \\<le> na \\<and> p i}\\<rbrakk>\n       \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n                         \\<le> card\n                                {i. n < i \\<and> i \\<le> Suc na \\<and> p i}", "case base"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n    \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n 2. \\<And>na.\n       \\<lbrakk>n' \\<le> na; na < n'';\n        card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n        \\<le> card {i. n < i \\<and> i \\<le> na \\<and> p i}\\<rbrakk>\n       \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n                         \\<le> card\n                                {i. n < i \\<and> i \\<le> Suc na \\<and> p i}", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n    \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> p i}", ".."], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n  \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>n' \\<le> na; na < n'';\n        card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n        \\<le> card {i. n < i \\<and> i \\<le> na \\<and> p i}\\<rbrakk>\n       \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n                         \\<le> card\n                                {i. n < i \\<and> i \\<le> Suc na \\<and> p i}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>n' \\<le> na; na < n'';\n        card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n        \\<le> card {i. n < i \\<and> i \\<le> na \\<and> p i}\\<rbrakk>\n       \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n                         \\<le> card\n                                {i. n < i \\<and> i \\<le> Suc na \\<and> p i}", "case (step n'')"], ["proof (state)\nthis:\n  n' \\<le> n''\n  n'' < n''\n  card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n  \\<le> card {i. n < i \\<and> i \\<le> n'' \\<and> p i}\n\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>n' \\<le> na; na < n'';\n        card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n        \\<le> card {i. n < i \\<and> i \\<le> na \\<and> p i}\\<rbrakk>\n       \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n                         \\<le> card\n                                {i. n < i \\<and> i \\<le> Suc na \\<and> p i}", "then"], ["proof (chain)\npicking this:\n  n' \\<le> n''\n  n'' < n''\n  card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n  \\<le> card {i. n < i \\<and> i \\<le> n'' \\<and> p i}", "show ?case"], ["proof (prove)\nusing this:\n  n' \\<le> n''\n  n'' < n''\n  card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n  \\<le> card {i. n < i \\<and> i \\<le> n'' \\<and> p i}\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n    \\<le> card {i. n < i \\<and> i \\<le> Suc n'' \\<and> p i}", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>n' \\<le> n''; n'' < n'';\n     card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n     \\<le> card {i. n < i \\<and> i \\<le> n'' \\<and> p i};\n     ?P3\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n                      \\<le> card\n                             {i. n < i \\<and> i \\<le> Suc n'' \\<and> p i}\n 2. \\<lbrakk>n' \\<le> n''; n'' < n'';\n     card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n     \\<le> card {i. n < i \\<and> i \\<le> n'' \\<and> p i};\n     \\<not> ?P3\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n                      \\<le> card\n                             {i. n < i \\<and> i \\<le> Suc n'' \\<and> p i}", "assume \"p (Suc n'')\""], ["proof (state)\nthis:\n  p (Suc n'')\n\ngoal (2 subgoals):\n 1. \\<lbrakk>n' \\<le> n''; n'' < n'';\n     card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n     \\<le> card {i. n < i \\<and> i \\<le> n'' \\<and> p i};\n     ?P3\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n                      \\<le> card\n                             {i. n < i \\<and> i \\<le> Suc n'' \\<and> p i}\n 2. \\<lbrakk>n' \\<le> n''; n'' < n'';\n     card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n     \\<le> card {i. n < i \\<and> i \\<le> n'' \\<and> p i};\n     \\<not> ?P3\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n                      \\<le> card\n                             {i. n < i \\<and> i \\<le> Suc n'' \\<and> p i}", "moreover"], ["proof (state)\nthis:\n  p (Suc n'')\n\ngoal (2 subgoals):\n 1. \\<lbrakk>n' \\<le> n''; n'' < n'';\n     card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n     \\<le> card {i. n < i \\<and> i \\<le> n'' \\<and> p i};\n     ?P3\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n                      \\<le> card\n                             {i. n < i \\<and> i \\<le> Suc n'' \\<and> p i}\n 2. \\<lbrakk>n' \\<le> n''; n'' < n'';\n     card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n     \\<le> card {i. n < i \\<and> i \\<le> n'' \\<and> p i};\n     \\<not> ?P3\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n                      \\<le> card\n                             {i. n < i \\<and> i \\<le> Suc n'' \\<and> p i}", "from step.hyps assms"], ["proof (chain)\npicking this:\n  n' \\<le> n''\n  n'' < n''\n  n \\<le> n'", "have \"n\\<le>n''\""], ["proof (prove)\nusing this:\n  n' \\<le> n''\n  n'' < n''\n  n \\<le> n'\n\ngoal (1 subgoal):\n 1. n \\<le> n''", "by simp"], ["proof (state)\nthis:\n  n \\<le> n''\n\ngoal (2 subgoals):\n 1. \\<lbrakk>n' \\<le> n''; n'' < n'';\n     card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n     \\<le> card {i. n < i \\<and> i \\<le> n'' \\<and> p i};\n     ?P3\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n                      \\<le> card\n                             {i. n < i \\<and> i \\<le> Suc n'' \\<and> p i}\n 2. \\<lbrakk>n' \\<le> n''; n'' < n'';\n     card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n     \\<le> card {i. n < i \\<and> i \\<le> n'' \\<and> p i};\n     \\<not> ?P3\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n                      \\<le> card\n                             {i. n < i \\<and> i \\<le> Suc n'' \\<and> p i}", "ultimately"], ["proof (chain)\npicking this:\n  p (Suc n'')\n  n \\<le> n''", "have \"ccard n (Suc n'') p = Suc (ccard n n'' p)\""], ["proof (prove)\nusing this:\n  p (Suc n'')\n  n \\<le> n''\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> Suc n'' \\<and> p i} =\n    Suc (card {i. n < i \\<and> i \\<le> n'' \\<and> p i})", "using ccard_inc[of p n'' n]"], ["proof (prove)\nusing this:\n  p (Suc n'')\n  n \\<le> n''\n  \\<lbrakk>p (Suc n''); n \\<le> n''\\<rbrakk>\n  \\<Longrightarrow> card {i. n < i \\<and> i \\<le> Suc n'' \\<and> p i} =\n                    Suc (card {i. n < i \\<and> i \\<le> n'' \\<and> p i})\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> Suc n'' \\<and> p i} =\n    Suc (card {i. n < i \\<and> i \\<le> n'' \\<and> p i})", "by simp"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> Suc n'' \\<and> p i} =\n  Suc (card {i. n < i \\<and> i \\<le> n'' \\<and> p i})\n\ngoal (2 subgoals):\n 1. \\<lbrakk>n' \\<le> n''; n'' < n'';\n     card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n     \\<le> card {i. n < i \\<and> i \\<le> n'' \\<and> p i};\n     ?P3\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n                      \\<le> card\n                             {i. n < i \\<and> i \\<le> Suc n'' \\<and> p i}\n 2. \\<lbrakk>n' \\<le> n''; n'' < n'';\n     card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n     \\<le> card {i. n < i \\<and> i \\<le> n'' \\<and> p i};\n     \\<not> ?P3\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n                      \\<le> card\n                             {i. n < i \\<and> i \\<le> Suc n'' \\<and> p i}", "also"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> Suc n'' \\<and> p i} =\n  Suc (card {i. n < i \\<and> i \\<le> n'' \\<and> p i})\n\ngoal (2 subgoals):\n 1. \\<lbrakk>n' \\<le> n''; n'' < n'';\n     card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n     \\<le> card {i. n < i \\<and> i \\<le> n'' \\<and> p i};\n     ?P3\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n                      \\<le> card\n                             {i. n < i \\<and> i \\<le> Suc n'' \\<and> p i}\n 2. \\<lbrakk>n' \\<le> n''; n'' < n'';\n     card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n     \\<le> card {i. n < i \\<and> i \\<le> n'' \\<and> p i};\n     \\<not> ?P3\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n                      \\<le> card\n                             {i. n < i \\<and> i \\<le> Suc n'' \\<and> p i}", "have \"\\<dots> \\<ge> ccard n n' p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n    \\<le> Suc (card {i. n < i \\<and> i \\<le> n'' \\<and> p i})", "using step.IH"], ["proof (prove)\nusing this:\n  card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n  \\<le> card {i. n < i \\<and> i \\<le> n'' \\<and> p i}\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n    \\<le> Suc (card {i. n < i \\<and> i \\<le> n'' \\<and> p i})", "by simp"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n  \\<le> Suc (card {i. n < i \\<and> i \\<le> n'' \\<and> p i})\n\ngoal (2 subgoals):\n 1. \\<lbrakk>n' \\<le> n''; n'' < n'';\n     card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n     \\<le> card {i. n < i \\<and> i \\<le> n'' \\<and> p i};\n     ?P3\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n                      \\<le> card\n                             {i. n < i \\<and> i \\<le> Suc n'' \\<and> p i}\n 2. \\<lbrakk>n' \\<le> n''; n'' < n'';\n     card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n     \\<le> card {i. n < i \\<and> i \\<le> n'' \\<and> p i};\n     \\<not> ?P3\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n                      \\<le> card\n                             {i. n < i \\<and> i \\<le> Suc n'' \\<and> p i}", "finally"], ["proof (chain)\npicking this:\n  card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n  \\<le> card {i. n < i \\<and> i \\<le> Suc n'' \\<and> p i}", "show ?case"], ["proof (prove)\nusing this:\n  card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n  \\<le> card {i. n < i \\<and> i \\<le> Suc n'' \\<and> p i}\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n    \\<le> card {i. n < i \\<and> i \\<le> Suc n'' \\<and> p i}", "."], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n  \\<le> card {i. n < i \\<and> i \\<le> Suc n'' \\<and> p i}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>n' \\<le> n''; n'' < n'';\n     card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n     \\<le> card {i. n < i \\<and> i \\<le> n'' \\<and> p i};\n     \\<not> p (Suc n'')\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n                      \\<le> card\n                             {i. n < i \\<and> i \\<le> Suc n'' \\<and> p i}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>n' \\<le> n''; n'' < n'';\n     card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n     \\<le> card {i. n < i \\<and> i \\<le> n'' \\<and> p i};\n     \\<not> p (Suc n'')\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n                      \\<le> card\n                             {i. n < i \\<and> i \\<le> Suc n'' \\<and> p i}", "assume \"\\<not> p (Suc n'')\""], ["proof (state)\nthis:\n  \\<not> p (Suc n'')\n\ngoal (1 subgoal):\n 1. \\<lbrakk>n' \\<le> n''; n'' < n'';\n     card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n     \\<le> card {i. n < i \\<and> i \\<le> n'' \\<and> p i};\n     \\<not> p (Suc n'')\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n                      \\<le> card\n                             {i. n < i \\<and> i \\<le> Suc n'' \\<and> p i}", "moreover"], ["proof (state)\nthis:\n  \\<not> p (Suc n'')\n\ngoal (1 subgoal):\n 1. \\<lbrakk>n' \\<le> n''; n'' < n'';\n     card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n     \\<le> card {i. n < i \\<and> i \\<le> n'' \\<and> p i};\n     \\<not> p (Suc n'')\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n                      \\<le> card\n                             {i. n < i \\<and> i \\<le> Suc n'' \\<and> p i}", "from step.hyps assms"], ["proof (chain)\npicking this:\n  n' \\<le> n''\n  n'' < n''\n  n \\<le> n'", "have \"n\\<le>n''\""], ["proof (prove)\nusing this:\n  n' \\<le> n''\n  n'' < n''\n  n \\<le> n'\n\ngoal (1 subgoal):\n 1. n \\<le> n''", "by simp"], ["proof (state)\nthis:\n  n \\<le> n''\n\ngoal (1 subgoal):\n 1. \\<lbrakk>n' \\<le> n''; n'' < n'';\n     card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n     \\<le> card {i. n < i \\<and> i \\<le> n'' \\<and> p i};\n     \\<not> p (Suc n'')\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n                      \\<le> card\n                             {i. n < i \\<and> i \\<le> Suc n'' \\<and> p i}", "ultimately"], ["proof (chain)\npicking this:\n  \\<not> p (Suc n'')\n  n \\<le> n''", "have \"ccard n (Suc n'') p = ccard n n'' p\""], ["proof (prove)\nusing this:\n  \\<not> p (Suc n'')\n  n \\<le> n''\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> Suc n'' \\<and> p i} =\n    card {i. n < i \\<and> i \\<le> n'' \\<and> p i}", "using ccard_same[of p n'' n]"], ["proof (prove)\nusing this:\n  \\<not> p (Suc n'')\n  n \\<le> n''\n  \\<not> p (Suc n'') \\<Longrightarrow>\n  card {i. n < i \\<and> i \\<le> n'' \\<and> p i} =\n  card {i. n < i \\<and> i \\<le> Suc n'' \\<and> p i}\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> Suc n'' \\<and> p i} =\n    card {i. n < i \\<and> i \\<le> n'' \\<and> p i}", "by simp"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> Suc n'' \\<and> p i} =\n  card {i. n < i \\<and> i \\<le> n'' \\<and> p i}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>n' \\<le> n''; n'' < n'';\n     card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n     \\<le> card {i. n < i \\<and> i \\<le> n'' \\<and> p i};\n     \\<not> p (Suc n'')\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n                      \\<le> card\n                             {i. n < i \\<and> i \\<le> Suc n'' \\<and> p i}", "also"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> Suc n'' \\<and> p i} =\n  card {i. n < i \\<and> i \\<le> n'' \\<and> p i}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>n' \\<le> n''; n'' < n'';\n     card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n     \\<le> card {i. n < i \\<and> i \\<le> n'' \\<and> p i};\n     \\<not> p (Suc n'')\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n                      \\<le> card\n                             {i. n < i \\<and> i \\<le> Suc n'' \\<and> p i}", "have \"\\<dots> \\<ge> ccard n n' p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n    \\<le> card {i. n < i \\<and> i \\<le> n'' \\<and> p i}", "using step.IH"], ["proof (prove)\nusing this:\n  card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n  \\<le> card {i. n < i \\<and> i \\<le> n'' \\<and> p i}\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n    \\<le> card {i. n < i \\<and> i \\<le> n'' \\<and> p i}", "by simp"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n  \\<le> card {i. n < i \\<and> i \\<le> n'' \\<and> p i}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>n' \\<le> n''; n'' < n'';\n     card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n     \\<le> card {i. n < i \\<and> i \\<le> n'' \\<and> p i};\n     \\<not> p (Suc n'')\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n                      \\<le> card\n                             {i. n < i \\<and> i \\<le> Suc n'' \\<and> p i}", "finally"], ["proof (chain)\npicking this:\n  card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n  \\<le> card {i. n < i \\<and> i \\<le> Suc n'' \\<and> p i}", "show ?case"], ["proof (prove)\nusing this:\n  card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n  \\<le> card {i. n < i \\<and> i \\<le> Suc n'' \\<and> p i}\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n    \\<le> card {i. n < i \\<and> i \\<le> Suc n'' \\<and> p i}", "by simp"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n  \\<le> card {i. n < i \\<and> i \\<le> Suc n'' \\<and> p i}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n  \\<le> card {i. n < i \\<and> i \\<le> Suc n'' \\<and> p i}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ccard_ub[simp]:\n  \"ccard n n' p \\<le> Suc n' - n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> p i} \\<le> Suc n' - n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> p i} \\<le> Suc n' - n", "have \"{i. i>n \\<and> i \\<le> n' \\<and> p i} \\<subseteq> {i. i\\<ge>n \\<and> i \\<le> n'}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. n < i \\<and> i \\<le> n' \\<and> p i}\n    \\<subseteq> {i. n \\<le> i \\<and> i \\<le> n'}", "by auto"], ["proof (state)\nthis:\n  {i. n < i \\<and> i \\<le> n' \\<and> p i}\n  \\<subseteq> {i. n \\<le> i \\<and> i \\<le> n'}\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> p i} \\<le> Suc n' - n", "hence \"ccard n n' p \\<le> card {i. i\\<ge>n \\<and> i \\<le> n'}\""], ["proof (prove)\nusing this:\n  {i. n < i \\<and> i \\<le> n' \\<and> p i}\n  \\<subseteq> {i. n \\<le> i \\<and> i \\<le> n'}\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n    \\<le> card {i. n \\<le> i \\<and> i \\<le> n'}", "by (simp add: card_mono)"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n  \\<le> card {i. n \\<le> i \\<and> i \\<le> n'}\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> p i} \\<le> Suc n' - n", "moreover"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n  \\<le> card {i. n \\<le> i \\<and> i \\<le> n'}\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> p i} \\<le> Suc n' - n", "have \"{i. i\\<ge>n \\<and> i \\<le> n'} = {n..n'}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. n \\<le> i \\<and> i \\<le> n'} = {n..n'}", "by auto"], ["proof (state)\nthis:\n  {i. n \\<le> i \\<and> i \\<le> n'} = {n..n'}\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> p i} \\<le> Suc n' - n", "hence \"card {i. i\\<ge>n \\<and> i \\<le> n'} = Suc n' - n\""], ["proof (prove)\nusing this:\n  {i. n \\<le> i \\<and> i \\<le> n'} = {n..n'}\n\ngoal (1 subgoal):\n 1. card {i. n \\<le> i \\<and> i \\<le> n'} = Suc n' - n", "by simp"], ["proof (state)\nthis:\n  card {i. n \\<le> i \\<and> i \\<le> n'} = Suc n' - n\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> p i} \\<le> Suc n' - n", "ultimately"], ["proof (chain)\npicking this:\n  card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n  \\<le> card {i. n \\<le> i \\<and> i \\<le> n'}\n  card {i. n \\<le> i \\<and> i \\<le> n'} = Suc n' - n", "show ?thesis"], ["proof (prove)\nusing this:\n  card {i. n < i \\<and> i \\<le> n' \\<and> p i}\n  \\<le> card {i. n \\<le> i \\<and> i \\<le> n'}\n  card {i. n \\<le> i \\<and> i \\<le> n'} = Suc n' - n\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> p i} \\<le> Suc n' - n", "by simp"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> n' \\<and> p i} \\<le> Suc n' - n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ccard_sum:\n  fixes n::nat\n  assumes \"n'\\<ge>n''\"\n    and \"n''\\<ge>n\"\n  shows \"ccard n n' P = ccard n n'' P + ccard n'' n' P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n    card {i. n < i \\<and> i \\<le> n'' \\<and> P i} +\n    card {i. n'' < i \\<and> i \\<le> n' \\<and> P i}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n    card {i. n < i \\<and> i \\<le> n'' \\<and> P i} +\n    card {i. n'' < i \\<and> i \\<le> n' \\<and> P i}", "have \"ccard n n' P = card {i. i>n \\<and> i \\<le> n' \\<and> P i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n    card {i. n < i \\<and> i \\<le> n' \\<and> P i}", "by simp"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n  card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n    card {i. n < i \\<and> i \\<le> n'' \\<and> P i} +\n    card {i. n'' < i \\<and> i \\<le> n' \\<and> P i}", "moreover"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n  card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n    card {i. n < i \\<and> i \\<le> n'' \\<and> P i} +\n    card {i. n'' < i \\<and> i \\<le> n' \\<and> P i}", "have \"{i. i>n \\<and> i \\<le> n' \\<and> P i} =\n    {i. i>n \\<and> i \\<le> n'' \\<and> P i} \\<union> {i. i>n'' \\<and> i \\<le> n' \\<and> P i}\" (is \"?LHS = ?RHS\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n    {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<union>\n    {i. n'' < i \\<and> i \\<le> n' \\<and> P i}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. {i. n < i \\<and> i \\<le> n' \\<and> P i}\n    \\<subseteq> {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<union>\n                {i. n'' < i \\<and> i \\<le> n' \\<and> P i}\n 2. {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<union>\n    {i. n'' < i \\<and> i \\<le> n' \\<and> P i}\n    \\<subseteq> {i. n < i \\<and> i \\<le> n' \\<and> P i}", "show \"?LHS \\<subseteq> ?RHS\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. n < i \\<and> i \\<le> n' \\<and> P i}\n    \\<subseteq> {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<union>\n                {i. n'' < i \\<and> i \\<le> n' \\<and> P i}", "by auto"], ["proof (state)\nthis:\n  {i. n < i \\<and> i \\<le> n' \\<and> P i}\n  \\<subseteq> {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<union>\n              {i. n'' < i \\<and> i \\<le> n' \\<and> P i}\n\ngoal (1 subgoal):\n 1. {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<union>\n    {i. n'' < i \\<and> i \\<le> n' \\<and> P i}\n    \\<subseteq> {i. n < i \\<and> i \\<le> n' \\<and> P i}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<union>\n    {i. n'' < i \\<and> i \\<le> n' \\<and> P i}\n    \\<subseteq> {i. n < i \\<and> i \\<le> n' \\<and> P i}", "show \"?RHS \\<subseteq> ?LHS\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<union>\n    {i. n'' < i \\<and> i \\<le> n' \\<and> P i}\n    \\<subseteq> {i. n < i \\<and> i \\<le> n' \\<and> P i}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<union>\n               {i. n'' < i \\<and> i \\<le> n' \\<and> P i} \\<Longrightarrow>\n       x \\<in> {i. n < i \\<and> i \\<le> n' \\<and> P i}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<union>\n               {i. n'' < i \\<and> i \\<le> n' \\<and> P i} \\<Longrightarrow>\n       x \\<in> {i. n < i \\<and> i \\<le> n' \\<and> P i}", "assume \"x\\<in>?RHS\""], ["proof (state)\nthis:\n  x \\<in> {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<union>\n          {i. n'' < i \\<and> i \\<le> n' \\<and> P i}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<union>\n               {i. n'' < i \\<and> i \\<le> n' \\<and> P i} \\<Longrightarrow>\n       x \\<in> {i. n < i \\<and> i \\<le> n' \\<and> P i}", "hence \"x>n \\<and> x \\<le> n'' \\<and> P x \\<or> x>n'' \\<and> x \\<le> n' \\<and> P x\""], ["proof (prove)\nusing this:\n  x \\<in> {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<union>\n          {i. n'' < i \\<and> i \\<le> n' \\<and> P i}\n\ngoal (1 subgoal):\n 1. n < x \\<and> x \\<le> n'' \\<and> P x \\<or>\n    n'' < x \\<and> x \\<le> n' \\<and> P x", "by auto"], ["proof (state)\nthis:\n  n < x \\<and> x \\<le> n'' \\<and> P x \\<or>\n  n'' < x \\<and> x \\<le> n' \\<and> P x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<union>\n               {i. n'' < i \\<and> i \\<le> n' \\<and> P i} \\<Longrightarrow>\n       x \\<in> {i. n < i \\<and> i \\<le> n' \\<and> P i}", "thus \"x\\<in>?LHS\""], ["proof (prove)\nusing this:\n  n < x \\<and> x \\<le> n'' \\<and> P x \\<or>\n  n'' < x \\<and> x \\<le> n' \\<and> P x\n\ngoal (1 subgoal):\n 1. x \\<in> {i. n < i \\<and> i \\<le> n' \\<and> P i}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. n < x \\<and> x \\<le> n'' \\<and> P x \\<Longrightarrow>\n    x \\<in> {i. n < i \\<and> i \\<le> n' \\<and> P i}\n 2. n'' < x \\<and> x \\<le> n' \\<and> P x \\<Longrightarrow>\n    x \\<in> {i. n < i \\<and> i \\<le> n' \\<and> P i}", "assume \"n < x \\<and> x \\<le> n'' \\<and> P x\""], ["proof (state)\nthis:\n  n < x \\<and> x \\<le> n'' \\<and> P x\n\ngoal (2 subgoals):\n 1. n < x \\<and> x \\<le> n'' \\<and> P x \\<Longrightarrow>\n    x \\<in> {i. n < i \\<and> i \\<le> n' \\<and> P i}\n 2. n'' < x \\<and> x \\<le> n' \\<and> P x \\<Longrightarrow>\n    x \\<in> {i. n < i \\<and> i \\<le> n' \\<and> P i}", "with assms"], ["proof (chain)\npicking this:\n  n'' \\<le> n'\n  n \\<le> n''\n  n < x \\<and> x \\<le> n'' \\<and> P x", "show ?thesis"], ["proof (prove)\nusing this:\n  n'' \\<le> n'\n  n \\<le> n''\n  n < x \\<and> x \\<le> n'' \\<and> P x\n\ngoal (1 subgoal):\n 1. x \\<in> {i. n < i \\<and> i \\<le> n' \\<and> P i}", "by simp"], ["proof (state)\nthis:\n  x \\<in> {i. n < i \\<and> i \\<le> n' \\<and> P i}\n\ngoal (1 subgoal):\n 1. n'' < x \\<and> x \\<le> n' \\<and> P x \\<Longrightarrow>\n    x \\<in> {i. n < i \\<and> i \\<le> n' \\<and> P i}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n'' < x \\<and> x \\<le> n' \\<and> P x \\<Longrightarrow>\n    x \\<in> {i. n < i \\<and> i \\<le> n' \\<and> P i}", "assume \"n'' < x \\<and> x \\<le> n' \\<and> P x\""], ["proof (state)\nthis:\n  n'' < x \\<and> x \\<le> n' \\<and> P x\n\ngoal (1 subgoal):\n 1. n'' < x \\<and> x \\<le> n' \\<and> P x \\<Longrightarrow>\n    x \\<in> {i. n < i \\<and> i \\<le> n' \\<and> P i}", "with assms"], ["proof (chain)\npicking this:\n  n'' \\<le> n'\n  n \\<le> n''\n  n'' < x \\<and> x \\<le> n' \\<and> P x", "show ?thesis"], ["proof (prove)\nusing this:\n  n'' \\<le> n'\n  n \\<le> n''\n  n'' < x \\<and> x \\<le> n' \\<and> P x\n\ngoal (1 subgoal):\n 1. x \\<in> {i. n < i \\<and> i \\<le> n' \\<and> P i}", "by simp"], ["proof (state)\nthis:\n  x \\<in> {i. n < i \\<and> i \\<le> n' \\<and> P i}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> {i. n < i \\<and> i \\<le> n' \\<and> P i}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<union>\n  {i. n'' < i \\<and> i \\<le> n' \\<and> P i}\n  \\<subseteq> {i. n < i \\<and> i \\<le> n' \\<and> P i}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n  {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<union>\n  {i. n'' < i \\<and> i \\<le> n' \\<and> P i}\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n    card {i. n < i \\<and> i \\<le> n'' \\<and> P i} +\n    card {i. n'' < i \\<and> i \\<le> n' \\<and> P i}", "hence \"card ?LHS = card ?RHS\""], ["proof (prove)\nusing this:\n  {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n  {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<union>\n  {i. n'' < i \\<and> i \\<le> n' \\<and> P i}\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n    card\n     ({i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<union>\n      {i. n'' < i \\<and> i \\<le> n' \\<and> P i})", "by simp"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n  card\n   ({i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<union>\n    {i. n'' < i \\<and> i \\<le> n' \\<and> P i})\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n    card {i. n < i \\<and> i \\<le> n'' \\<and> P i} +\n    card {i. n'' < i \\<and> i \\<le> n' \\<and> P i}", "ultimately"], ["proof (chain)\npicking this:\n  card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n  card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n  card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n  card\n   ({i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<union>\n    {i. n'' < i \\<and> i \\<le> n' \\<and> P i})", "have \"ccard n n' P = card ?RHS\""], ["proof (prove)\nusing this:\n  card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n  card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n  card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n  card\n   ({i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<union>\n    {i. n'' < i \\<and> i \\<le> n' \\<and> P i})\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n    card\n     ({i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<union>\n      {i. n'' < i \\<and> i \\<le> n' \\<and> P i})", "by simp"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n  card\n   ({i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<union>\n    {i. n'' < i \\<and> i \\<le> n' \\<and> P i})\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n    card {i. n < i \\<and> i \\<le> n'' \\<and> P i} +\n    card {i. n'' < i \\<and> i \\<le> n' \\<and> P i}", "moreover"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n  card\n   ({i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<union>\n    {i. n'' < i \\<and> i \\<le> n' \\<and> P i})\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n    card {i. n < i \\<and> i \\<le> n'' \\<and> P i} +\n    card {i. n'' < i \\<and> i \\<le> n' \\<and> P i}", "have \"card ?RHS = card {i. i>n \\<and> i \\<le> n'' \\<and> P i} + card {i. i>n'' \\<and> i \\<le> n' \\<and> P i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     ({i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<union>\n      {i. n'' < i \\<and> i \\<le> n' \\<and> P i}) =\n    card {i. n < i \\<and> i \\<le> n'' \\<and> P i} +\n    card {i. n'' < i \\<and> i \\<le> n' \\<and> P i}", "proof (rule card_Un_disjoint)"], ["proof (state)\ngoal (3 subgoals):\n 1. finite {i. n < i \\<and> i \\<le> n'' \\<and> P i}\n 2. finite {i. n'' < i \\<and> i \\<le> n' \\<and> P i}\n 3. {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<inter>\n    {i. n'' < i \\<and> i \\<le> n' \\<and> P i} =\n    {}", "show \"finite {i. n < i \\<and> i \\<le> n'' \\<and> P i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {i. n < i \\<and> i \\<le> n'' \\<and> P i}", "by simp"], ["proof (state)\nthis:\n  finite {i. n < i \\<and> i \\<le> n'' \\<and> P i}\n\ngoal (2 subgoals):\n 1. finite {i. n'' < i \\<and> i \\<le> n' \\<and> P i}\n 2. {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<inter>\n    {i. n'' < i \\<and> i \\<le> n' \\<and> P i} =\n    {}", "show \"finite {i. n'' < i \\<and> i \\<le> n' \\<and> P i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {i. n'' < i \\<and> i \\<le> n' \\<and> P i}", "by simp"], ["proof (state)\nthis:\n  finite {i. n'' < i \\<and> i \\<le> n' \\<and> P i}\n\ngoal (1 subgoal):\n 1. {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<inter>\n    {i. n'' < i \\<and> i \\<le> n' \\<and> P i} =\n    {}", "show \"{i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<inter> {i. n'' < i \\<and> i \\<le> n' \\<and> P i} = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<inter>\n    {i. n'' < i \\<and> i \\<le> n' \\<and> P i} =\n    {}", "by auto"], ["proof (state)\nthis:\n  {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<inter>\n  {i. n'' < i \\<and> i \\<le> n' \\<and> P i} =\n  {}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card\n   ({i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<union>\n    {i. n'' < i \\<and> i \\<le> n' \\<and> P i}) =\n  card {i. n < i \\<and> i \\<le> n'' \\<and> P i} +\n  card {i. n'' < i \\<and> i \\<le> n' \\<and> P i}\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n    card {i. n < i \\<and> i \\<le> n'' \\<and> P i} +\n    card {i. n'' < i \\<and> i \\<le> n' \\<and> P i}", "moreover"], ["proof (state)\nthis:\n  card\n   ({i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<union>\n    {i. n'' < i \\<and> i \\<le> n' \\<and> P i}) =\n  card {i. n < i \\<and> i \\<le> n'' \\<and> P i} +\n  card {i. n'' < i \\<and> i \\<le> n' \\<and> P i}\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n    card {i. n < i \\<and> i \\<le> n'' \\<and> P i} +\n    card {i. n'' < i \\<and> i \\<le> n' \\<and> P i}", "have \"ccard n n'' P = card {i. i>n \\<and> i \\<le> n'' \\<and> P i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n'' \\<and> P i} =\n    card {i. n < i \\<and> i \\<le> n'' \\<and> P i}", "by simp"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> n'' \\<and> P i} =\n  card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n    card {i. n < i \\<and> i \\<le> n'' \\<and> P i} +\n    card {i. n'' < i \\<and> i \\<le> n' \\<and> P i}", "moreover"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> n'' \\<and> P i} =\n  card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n    card {i. n < i \\<and> i \\<le> n'' \\<and> P i} +\n    card {i. n'' < i \\<and> i \\<le> n' \\<and> P i}", "have \"ccard n'' n' P= card {i. i>n'' \\<and> i \\<le> n' \\<and> P i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {i. n'' < i \\<and> i \\<le> n' \\<and> P i} =\n    card {i. n'' < i \\<and> i \\<le> n' \\<and> P i}", "by simp"], ["proof (state)\nthis:\n  card {i. n'' < i \\<and> i \\<le> n' \\<and> P i} =\n  card {i. n'' < i \\<and> i \\<le> n' \\<and> P i}\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n    card {i. n < i \\<and> i \\<le> n'' \\<and> P i} +\n    card {i. n'' < i \\<and> i \\<le> n' \\<and> P i}", "ultimately"], ["proof (chain)\npicking this:\n  card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n  card\n   ({i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<union>\n    {i. n'' < i \\<and> i \\<le> n' \\<and> P i})\n  card\n   ({i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<union>\n    {i. n'' < i \\<and> i \\<le> n' \\<and> P i}) =\n  card {i. n < i \\<and> i \\<le> n'' \\<and> P i} +\n  card {i. n'' < i \\<and> i \\<le> n' \\<and> P i}\n  card {i. n < i \\<and> i \\<le> n'' \\<and> P i} =\n  card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\n  card {i. n'' < i \\<and> i \\<le> n' \\<and> P i} =\n  card {i. n'' < i \\<and> i \\<le> n' \\<and> P i}", "show ?thesis"], ["proof (prove)\nusing this:\n  card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n  card\n   ({i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<union>\n    {i. n'' < i \\<and> i \\<le> n' \\<and> P i})\n  card\n   ({i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<union>\n    {i. n'' < i \\<and> i \\<le> n' \\<and> P i}) =\n  card {i. n < i \\<and> i \\<le> n'' \\<and> P i} +\n  card {i. n'' < i \\<and> i \\<le> n' \\<and> P i}\n  card {i. n < i \\<and> i \\<le> n'' \\<and> P i} =\n  card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\n  card {i. n'' < i \\<and> i \\<le> n' \\<and> P i} =\n  card {i. n'' < i \\<and> i \\<le> n' \\<and> P i}\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n    card {i. n < i \\<and> i \\<le> n'' \\<and> P i} +\n    card {i. n'' < i \\<and> i \\<le> n' \\<and> P i}", "by simp"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n  card {i. n < i \\<and> i \\<le> n'' \\<and> P i} +\n  card {i. n'' < i \\<and> i \\<le> n' \\<and> P i}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ccard_ex:\n  fixes n::nat\n  shows \"c\\<ge>1 \\<Longrightarrow> c < ccard n n'' P \\<Longrightarrow> \\<exists>n'<n''. n'>n \\<and> ccard n n' P = c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 \\<le> c;\n     c < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>n'<n''.\n                         n < n' \\<and>\n                         card {i. n < i \\<and> i \\<le> n' \\<and> P i} = c", "proof (induction c rule: dec_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. 1 < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n    \\<exists>n'<n''.\n       n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = 1\n 2. \\<And>na.\n       \\<lbrakk>1 \\<le> na; na < c;\n        na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n        \\<exists>n'<n''.\n           n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = na;\n        Suc na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n'<n''.\n                            n < n' \\<and>\n                            card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n                            Suc na", "let ?l = \"LEAST i::nat. n < i \\<and> i < n'' \\<and> P i\""], ["proof (state)\ngoal (2 subgoals):\n 1. 1 < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n    \\<exists>n'<n''.\n       n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = 1\n 2. \\<And>na.\n       \\<lbrakk>1 \\<le> na; na < c;\n        na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n        \\<exists>n'<n''.\n           n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = na;\n        Suc na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n'<n''.\n                            n < n' \\<and>\n                            card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n                            Suc na", "case base"], ["proof (state)\nthis:\n  1 < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\n\ngoal (2 subgoals):\n 1. 1 < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n    \\<exists>n'<n''.\n       n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = 1\n 2. \\<And>na.\n       \\<lbrakk>1 \\<le> na; na < c;\n        na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n        \\<exists>n'<n''.\n           n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = na;\n        Suc na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n'<n''.\n                            n < n' \\<and>\n                            card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n                            Suc na", "moreover"], ["proof (state)\nthis:\n  1 < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\n\ngoal (2 subgoals):\n 1. 1 < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n    \\<exists>n'<n''.\n       n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = 1\n 2. \\<And>na.\n       \\<lbrakk>1 \\<le> na; na < c;\n        na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n        \\<exists>n'<n''.\n           n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = na;\n        Suc na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n'<n''.\n                            n < n' \\<and>\n                            card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n                            Suc na", "have \"ccard n n'' P \\<le> Suc (card {i. n < i \\<and> i < n'' \\<and> P i})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\n    \\<le> Suc (card {i. n < i \\<and> i < n'' \\<and> P i})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\n    \\<le> Suc (card {i. n < i \\<and> i < n'' \\<and> P i})", "from \\<open>ccard n n'' P > 1\\<close>"], ["proof (chain)\npicking this:\n  1 < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}", "have \"n''>n\""], ["proof (prove)\nusing this:\n  1 < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\n\ngoal (1 subgoal):\n 1. n < n''", "using less_le_trans"], ["proof (prove)\nusing this:\n  1 < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\n  \\<lbrakk>?x < ?y; ?y \\<le> ?z\\<rbrakk> \\<Longrightarrow> ?x < ?z\n\ngoal (1 subgoal):\n 1. n < n''", "by force"], ["proof (state)\nthis:\n  n < n''\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\n    \\<le> Suc (card {i. n < i \\<and> i < n'' \\<and> P i})", "then"], ["proof (chain)\npicking this:\n  n < n''", "obtain n' where \"Suc n' = n''\" and \"Suc n' \\<ge> n\""], ["proof (prove)\nusing this:\n  n < n''\n\ngoal (1 subgoal):\n 1. (\\<And>n'.\n        \\<lbrakk>Suc n' = n''; n \\<le> Suc n'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis lessE less_imp_le_nat)"], ["proof (state)\nthis:\n  Suc n' = n''\n  n \\<le> Suc n'\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\n    \\<le> Suc (card {i. n < i \\<and> i < n'' \\<and> P i})", "moreover"], ["proof (state)\nthis:\n  Suc n' = n''\n  n \\<le> Suc n'\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\n    \\<le> Suc (card {i. n < i \\<and> i < n'' \\<and> P i})", "have \"{i. n < i \\<and> i < Suc n' \\<and> P i} = {i. n < i \\<and> i \\<le> n' \\<and> P i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. n < i \\<and> i < Suc n' \\<and> P i} =\n    {i. n < i \\<and> i \\<le> n' \\<and> P i}", "by auto"], ["proof (state)\nthis:\n  {i. n < i \\<and> i < Suc n' \\<and> P i} =\n  {i. n < i \\<and> i \\<le> n' \\<and> P i}\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\n    \\<le> Suc (card {i. n < i \\<and> i < n'' \\<and> P i})", "hence \"card {i. n < i \\<and> i < Suc n' \\<and> P i} = card {i. n < i \\<and> i \\<le> n' \\<and> P i}\""], ["proof (prove)\nusing this:\n  {i. n < i \\<and> i < Suc n' \\<and> P i} =\n  {i. n < i \\<and> i \\<le> n' \\<and> P i}\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i < Suc n' \\<and> P i} =\n    card {i. n < i \\<and> i \\<le> n' \\<and> P i}", "by simp"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i < Suc n' \\<and> P i} =\n  card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\n    \\<le> Suc (card {i. n < i \\<and> i < n'' \\<and> P i})", "moreover"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i < Suc n' \\<and> P i} =\n  card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\n    \\<le> Suc (card {i. n < i \\<and> i < n'' \\<and> P i})", "have \"card {i. n < i \\<and> i \\<le> Suc n' \\<and> P i} \\<le> Suc (card {i. n < i \\<and> i \\<le> n' \\<and> P i})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> Suc n' \\<and> P i}\n    \\<le> Suc (card {i. n < i \\<and> i \\<le> n' \\<and> P i})", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    card {i. n < i \\<and> i \\<le> Suc n' \\<and> P i}\n    \\<le> Suc (card {i. n < i \\<and> i \\<le> n' \\<and> P i})\n 2. \\<not> ?P \\<Longrightarrow>\n    card {i. n < i \\<and> i \\<le> Suc n' \\<and> P i}\n    \\<le> Suc (card {i. n < i \\<and> i \\<le> n' \\<and> P i})", "assume \"P (Suc n')\""], ["proof (state)\nthis:\n  P (Suc n')\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    card {i. n < i \\<and> i \\<le> Suc n' \\<and> P i}\n    \\<le> Suc (card {i. n < i \\<and> i \\<le> n' \\<and> P i})\n 2. \\<not> ?P \\<Longrightarrow>\n    card {i. n < i \\<and> i \\<le> Suc n' \\<and> P i}\n    \\<le> Suc (card {i. n < i \\<and> i \\<le> n' \\<and> P i})", "moreover"], ["proof (state)\nthis:\n  P (Suc n')\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    card {i. n < i \\<and> i \\<le> Suc n' \\<and> P i}\n    \\<le> Suc (card {i. n < i \\<and> i \\<le> n' \\<and> P i})\n 2. \\<not> ?P \\<Longrightarrow>\n    card {i. n < i \\<and> i \\<le> Suc n' \\<and> P i}\n    \\<le> Suc (card {i. n < i \\<and> i \\<le> n' \\<and> P i})", "from \\<open>n''>n\\<close> \\<open>Suc n'=n''\\<close>"], ["proof (chain)\npicking this:\n  n < n''\n  Suc n' = n''", "have \"n'\\<ge>n\""], ["proof (prove)\nusing this:\n  n < n''\n  Suc n' = n''\n\ngoal (1 subgoal):\n 1. n \\<le> n'", "by simp"], ["proof (state)\nthis:\n  n \\<le> n'\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    card {i. n < i \\<and> i \\<le> Suc n' \\<and> P i}\n    \\<le> Suc (card {i. n < i \\<and> i \\<le> n' \\<and> P i})\n 2. \\<not> ?P \\<Longrightarrow>\n    card {i. n < i \\<and> i \\<le> Suc n' \\<and> P i}\n    \\<le> Suc (card {i. n < i \\<and> i \\<le> n' \\<and> P i})", "ultimately"], ["proof (chain)\npicking this:\n  P (Suc n')\n  n \\<le> n'", "show ?thesis"], ["proof (prove)\nusing this:\n  P (Suc n')\n  n \\<le> n'\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> Suc n' \\<and> P i}\n    \\<le> Suc (card {i. n < i \\<and> i \\<le> n' \\<and> P i})", "using ccard_inc[of P n' n]"], ["proof (prove)\nusing this:\n  P (Suc n')\n  n \\<le> n'\n  \\<lbrakk>P (Suc n'); n \\<le> n'\\<rbrakk>\n  \\<Longrightarrow> card {i. n < i \\<and> i \\<le> Suc n' \\<and> P i} =\n                    Suc (card {i. n < i \\<and> i \\<le> n' \\<and> P i})\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> Suc n' \\<and> P i}\n    \\<le> Suc (card {i. n < i \\<and> i \\<le> n' \\<and> P i})", "by simp"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> Suc n' \\<and> P i}\n  \\<le> Suc (card {i. n < i \\<and> i \\<le> n' \\<and> P i})\n\ngoal (1 subgoal):\n 1. \\<not> P (Suc n') \\<Longrightarrow>\n    card {i. n < i \\<and> i \\<le> Suc n' \\<and> P i}\n    \\<le> Suc (card {i. n < i \\<and> i \\<le> n' \\<and> P i})", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> P (Suc n') \\<Longrightarrow>\n    card {i. n < i \\<and> i \\<le> Suc n' \\<and> P i}\n    \\<le> Suc (card {i. n < i \\<and> i \\<le> n' \\<and> P i})", "assume \"\\<not> P (Suc n')\""], ["proof (state)\nthis:\n  \\<not> P (Suc n')\n\ngoal (1 subgoal):\n 1. \\<not> P (Suc n') \\<Longrightarrow>\n    card {i. n < i \\<and> i \\<le> Suc n' \\<and> P i}\n    \\<le> Suc (card {i. n < i \\<and> i \\<le> n' \\<and> P i})", "moreover"], ["proof (state)\nthis:\n  \\<not> P (Suc n')\n\ngoal (1 subgoal):\n 1. \\<not> P (Suc n') \\<Longrightarrow>\n    card {i. n < i \\<and> i \\<le> Suc n' \\<and> P i}\n    \\<le> Suc (card {i. n < i \\<and> i \\<le> n' \\<and> P i})", "from \\<open>n''>n\\<close> \\<open>Suc n'=n''\\<close>"], ["proof (chain)\npicking this:\n  n < n''\n  Suc n' = n''", "have \"n'\\<ge>n\""], ["proof (prove)\nusing this:\n  n < n''\n  Suc n' = n''\n\ngoal (1 subgoal):\n 1. n \\<le> n'", "by simp"], ["proof (state)\nthis:\n  n \\<le> n'\n\ngoal (1 subgoal):\n 1. \\<not> P (Suc n') \\<Longrightarrow>\n    card {i. n < i \\<and> i \\<le> Suc n' \\<and> P i}\n    \\<le> Suc (card {i. n < i \\<and> i \\<le> n' \\<and> P i})", "ultimately"], ["proof (chain)\npicking this:\n  \\<not> P (Suc n')\n  n \\<le> n'", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> P (Suc n')\n  n \\<le> n'\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> Suc n' \\<and> P i}\n    \\<le> Suc (card {i. n < i \\<and> i \\<le> n' \\<and> P i})", "using ccard_same[of P n' n]"], ["proof (prove)\nusing this:\n  \\<not> P (Suc n')\n  n \\<le> n'\n  \\<not> P (Suc n') \\<Longrightarrow>\n  card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n  card {i. n < i \\<and> i \\<le> Suc n' \\<and> P i}\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> Suc n' \\<and> P i}\n    \\<le> Suc (card {i. n < i \\<and> i \\<le> n' \\<and> P i})", "by simp"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> Suc n' \\<and> P i}\n  \\<le> Suc (card {i. n < i \\<and> i \\<le> n' \\<and> P i})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> Suc n' \\<and> P i}\n  \\<le> Suc (card {i. n < i \\<and> i \\<le> n' \\<and> P i})\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\n    \\<le> Suc (card {i. n < i \\<and> i < n'' \\<and> P i})", "ultimately"], ["proof (chain)\npicking this:\n  Suc n' = n''\n  n \\<le> Suc n'\n  card {i. n < i \\<and> i < Suc n' \\<and> P i} =\n  card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n  card {i. n < i \\<and> i \\<le> Suc n' \\<and> P i}\n  \\<le> Suc (card {i. n < i \\<and> i \\<le> n' \\<and> P i})", "show ?thesis"], ["proof (prove)\nusing this:\n  Suc n' = n''\n  n \\<le> Suc n'\n  card {i. n < i \\<and> i < Suc n' \\<and> P i} =\n  card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n  card {i. n < i \\<and> i \\<le> Suc n' \\<and> P i}\n  \\<le> Suc (card {i. n < i \\<and> i \\<le> n' \\<and> P i})\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\n    \\<le> Suc (card {i. n < i \\<and> i < n'' \\<and> P i})", "by simp"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\n  \\<le> Suc (card {i. n < i \\<and> i < n'' \\<and> P i})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\n  \\<le> Suc (card {i. n < i \\<and> i < n'' \\<and> P i})\n\ngoal (2 subgoals):\n 1. 1 < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n    \\<exists>n'<n''.\n       n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = 1\n 2. \\<And>na.\n       \\<lbrakk>1 \\<le> na; na < c;\n        na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n        \\<exists>n'<n''.\n           n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = na;\n        Suc na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n'<n''.\n                            n < n' \\<and>\n                            card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n                            Suc na", "ultimately"], ["proof (chain)\npicking this:\n  1 < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\n  card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\n  \\<le> Suc (card {i. n < i \\<and> i < n'' \\<and> P i})", "have \"card {i. n < i \\<and> i < n'' \\<and> P i} \\<ge> 1\""], ["proof (prove)\nusing this:\n  1 < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\n  card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\n  \\<le> Suc (card {i. n < i \\<and> i < n'' \\<and> P i})\n\ngoal (1 subgoal):\n 1. 1 \\<le> card {i. n < i \\<and> i < n'' \\<and> P i}", "by simp"], ["proof (state)\nthis:\n  1 \\<le> card {i. n < i \\<and> i < n'' \\<and> P i}\n\ngoal (2 subgoals):\n 1. 1 < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n    \\<exists>n'<n''.\n       n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = 1\n 2. \\<And>na.\n       \\<lbrakk>1 \\<le> na; na < c;\n        na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n        \\<exists>n'<n''.\n           n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = na;\n        Suc na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n'<n''.\n                            n < n' \\<and>\n                            card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n                            Suc na", "hence \"{i. n < i \\<and> i < n'' \\<and> P i} \\<noteq> {}\""], ["proof (prove)\nusing this:\n  1 \\<le> card {i. n < i \\<and> i < n'' \\<and> P i}\n\ngoal (1 subgoal):\n 1. {i. n < i \\<and> i < n'' \\<and> P i} \\<noteq> {}", "by fastforce"], ["proof (state)\nthis:\n  {i. n < i \\<and> i < n'' \\<and> P i} \\<noteq> {}\n\ngoal (2 subgoals):\n 1. 1 < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n    \\<exists>n'<n''.\n       n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = 1\n 2. \\<And>na.\n       \\<lbrakk>1 \\<le> na; na < c;\n        na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n        \\<exists>n'<n''.\n           n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = na;\n        Suc na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n'<n''.\n                            n < n' \\<and>\n                            card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n                            Suc na", "hence \"\\<exists>i. n < i \\<and> i < n'' \\<and> P i\""], ["proof (prove)\nusing this:\n  {i. n < i \\<and> i < n'' \\<and> P i} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>i>n. i < n'' \\<and> P i", "by auto"], ["proof (state)\nthis:\n  \\<exists>i>n. i < n'' \\<and> P i\n\ngoal (2 subgoals):\n 1. 1 < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n    \\<exists>n'<n''.\n       n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = 1\n 2. \\<And>na.\n       \\<lbrakk>1 \\<le> na; na < c;\n        na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n        \\<exists>n'<n''.\n           n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = na;\n        Suc na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n'<n''.\n                            n < n' \\<and>\n                            card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n                            Suc na", "hence \"?l>n\" and \"?l<n''\" and \"P ?l\""], ["proof (prove)\nusing this:\n  \\<exists>i>n. i < n'' \\<and> P i\n\ngoal (1 subgoal):\n 1. n < (LEAST i. n < i \\<and> i < n'' \\<and> P i) &&&\n    (LEAST i. n < i \\<and> i < n'' \\<and> P i) < n'' &&&\n    P (LEAST i. n < i \\<and> i < n'' \\<and> P i)", "using LeastI_ex[of \"\\<lambda>i::nat. n < i \\<and> i < n'' \\<and> P i\"]"], ["proof (prove)\nusing this:\n  \\<exists>i>n. i < n'' \\<and> P i\n  \\<exists>x>n. x < n'' \\<and> P x \\<Longrightarrow>\n  n < (LEAST i. n < i \\<and> i < n'' \\<and> P i) \\<and>\n  (LEAST i. n < i \\<and> i < n'' \\<and> P i) < n'' \\<and>\n  P (LEAST i. n < i \\<and> i < n'' \\<and> P i)\n\ngoal (1 subgoal):\n 1. n < (LEAST i. n < i \\<and> i < n'' \\<and> P i) &&&\n    (LEAST i. n < i \\<and> i < n'' \\<and> P i) < n'' &&&\n    P (LEAST i. n < i \\<and> i < n'' \\<and> P i)", "by auto"], ["proof (state)\nthis:\n  n < (LEAST i. n < i \\<and> i < n'' \\<and> P i)\n  (LEAST i. n < i \\<and> i < n'' \\<and> P i) < n''\n  P (LEAST i. n < i \\<and> i < n'' \\<and> P i)\n\ngoal (2 subgoals):\n 1. 1 < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n    \\<exists>n'<n''.\n       n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = 1\n 2. \\<And>na.\n       \\<lbrakk>1 \\<le> na; na < c;\n        na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n        \\<exists>n'<n''.\n           n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = na;\n        Suc na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n'<n''.\n                            n < n' \\<and>\n                            card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n                            Suc na", "moreover"], ["proof (state)\nthis:\n  n < (LEAST i. n < i \\<and> i < n'' \\<and> P i)\n  (LEAST i. n < i \\<and> i < n'' \\<and> P i) < n''\n  P (LEAST i. n < i \\<and> i < n'' \\<and> P i)\n\ngoal (2 subgoals):\n 1. 1 < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n    \\<exists>n'<n''.\n       n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = 1\n 2. \\<And>na.\n       \\<lbrakk>1 \\<le> na; na < c;\n        na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n        \\<exists>n'<n''.\n           n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = na;\n        Suc na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n'<n''.\n                            n < n' \\<and>\n                            card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n                            Suc na", "have \"{i. n < i \\<and> i \\<le> ?l \\<and> P i} = {?l}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. n < i \\<and>\n        i \\<le> (LEAST i. n < i \\<and> i < n'' \\<and> P i) \\<and> P i} =\n    {LEAST i. n < i \\<and> i < n'' \\<and> P i}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. {i. n < i \\<and>\n        i \\<le> (LEAST i. n < i \\<and> i < n'' \\<and> P i) \\<and> P i}\n    \\<subseteq> {LEAST i. n < i \\<and> i < n'' \\<and> P i}\n 2. {LEAST i. n < i \\<and> i < n'' \\<and> P i}\n    \\<subseteq> {i. n < i \\<and>\n                    i \\<le> (LEAST i.\n                                n < i \\<and> i < n'' \\<and> P i) \\<and>\n                    P i}", "show \"{i. n < i \\<and> i \\<le> ?l \\<and> P i} \\<subseteq> {?l}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. n < i \\<and>\n        i \\<le> (LEAST i. n < i \\<and> i < n'' \\<and> P i) \\<and> P i}\n    \\<subseteq> {LEAST i. n < i \\<and> i < n'' \\<and> P i}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {i. n < i \\<and>\n                   i \\<le> (LEAST i. n < i \\<and> i < n'' \\<and> P i) \\<and>\n                   P i} \\<Longrightarrow>\n       x \\<in> {LEAST i. n < i \\<and> i < n'' \\<and> P i}", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {i. n < i \\<and>\n                   i \\<le> (LEAST i. n < i \\<and> i < n'' \\<and> P i) \\<and>\n                   P i} \\<Longrightarrow>\n       x \\<in> {LEAST i. n < i \\<and> i < n'' \\<and> P i}", "assume \"i\\<in>{i. n < i \\<and> i \\<le> ?l \\<and> P i}\""], ["proof (state)\nthis:\n  i \\<in> {i. n < i \\<and>\n              i \\<le> (LEAST i. n < i \\<and> i < n'' \\<and> P i) \\<and> P i}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {i. n < i \\<and>\n                   i \\<le> (LEAST i. n < i \\<and> i < n'' \\<and> P i) \\<and>\n                   P i} \\<Longrightarrow>\n       x \\<in> {LEAST i. n < i \\<and> i < n'' \\<and> P i}", "hence \"n < i\" and \"i \\<le> ?l\" and \"P i\""], ["proof (prove)\nusing this:\n  i \\<in> {i. n < i \\<and>\n              i \\<le> (LEAST i. n < i \\<and> i < n'' \\<and> P i) \\<and> P i}\n\ngoal (1 subgoal):\n 1. n < i &&& i \\<le> (LEAST i. n < i \\<and> i < n'' \\<and> P i) &&& P i", "by auto"], ["proof (state)\nthis:\n  n < i\n  i \\<le> (LEAST i. n < i \\<and> i < n'' \\<and> P i)\n  P i\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {i. n < i \\<and>\n                   i \\<le> (LEAST i. n < i \\<and> i < n'' \\<and> P i) \\<and>\n                   P i} \\<Longrightarrow>\n       x \\<in> {LEAST i. n < i \\<and> i < n'' \\<and> P i}", "with \\<open>\\<exists>i. n < i \\<and> i < n'' \\<and> P i\\<close>"], ["proof (chain)\npicking this:\n  \\<exists>i>n. i < n'' \\<and> P i\n  n < i\n  i \\<le> (LEAST i. n < i \\<and> i < n'' \\<and> P i)\n  P i", "have \"i=?l\""], ["proof (prove)\nusing this:\n  \\<exists>i>n. i < n'' \\<and> P i\n  n < i\n  i \\<le> (LEAST i. n < i \\<and> i < n'' \\<and> P i)\n  P i\n\ngoal (1 subgoal):\n 1. i = (LEAST i. n < i \\<and> i < n'' \\<and> P i)", "using Least_le[of \"\\<lambda>i. n < i \\<and> i < n'' \\<and> P i\"]"], ["proof (prove)\nusing this:\n  \\<exists>i>n. i < n'' \\<and> P i\n  n < i\n  i \\<le> (LEAST i. n < i \\<and> i < n'' \\<and> P i)\n  P i\n  n < ?k \\<and> ?k < n'' \\<and> P ?k \\<Longrightarrow>\n  (LEAST x. n < x \\<and> x < n'' \\<and> P x) \\<le> ?k\n\ngoal (1 subgoal):\n 1. i = (LEAST i. n < i \\<and> i < n'' \\<and> P i)", "by (meson antisym le_less_trans)"], ["proof (state)\nthis:\n  i = (LEAST i. n < i \\<and> i < n'' \\<and> P i)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {i. n < i \\<and>\n                   i \\<le> (LEAST i. n < i \\<and> i < n'' \\<and> P i) \\<and>\n                   P i} \\<Longrightarrow>\n       x \\<in> {LEAST i. n < i \\<and> i < n'' \\<and> P i}", "thus \"i\\<in>{?l}\""], ["proof (prove)\nusing this:\n  i = (LEAST i. n < i \\<and> i < n'' \\<and> P i)\n\ngoal (1 subgoal):\n 1. i \\<in> {LEAST i. n < i \\<and> i < n'' \\<and> P i}", "by simp"], ["proof (state)\nthis:\n  i \\<in> {LEAST i. n < i \\<and> i < n'' \\<and> P i}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {i. n < i \\<and>\n      i \\<le> (LEAST i. n < i \\<and> i < n'' \\<and> P i) \\<and> P i}\n  \\<subseteq> {LEAST i. n < i \\<and> i < n'' \\<and> P i}\n\ngoal (1 subgoal):\n 1. {LEAST i. n < i \\<and> i < n'' \\<and> P i}\n    \\<subseteq> {i. n < i \\<and>\n                    i \\<le> (LEAST i.\n                                n < i \\<and> i < n'' \\<and> P i) \\<and>\n                    P i}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. {LEAST i. n < i \\<and> i < n'' \\<and> P i}\n    \\<subseteq> {i. n < i \\<and>\n                    i \\<le> (LEAST i.\n                                n < i \\<and> i < n'' \\<and> P i) \\<and>\n                    P i}", "show \"{?l} \\<subseteq> {i. n < i \\<and> i \\<le> ?l \\<and> P i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {LEAST i. n < i \\<and> i < n'' \\<and> P i}\n    \\<subseteq> {i. n < i \\<and>\n                    i \\<le> (LEAST i.\n                                n < i \\<and> i < n'' \\<and> P i) \\<and>\n                    P i}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {LEAST i. n < i \\<and> i < n'' \\<and> P i} \\<Longrightarrow>\n       x \\<in> {i. n < i \\<and>\n                   i \\<le> (LEAST i. n < i \\<and> i < n'' \\<and> P i) \\<and>\n                   P i}", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {LEAST i. n < i \\<and> i < n'' \\<and> P i} \\<Longrightarrow>\n       x \\<in> {i. n < i \\<and>\n                   i \\<le> (LEAST i. n < i \\<and> i < n'' \\<and> P i) \\<and>\n                   P i}", "assume \"i\\<in>{?l}\""], ["proof (state)\nthis:\n  i \\<in> {LEAST i. n < i \\<and> i < n'' \\<and> P i}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {LEAST i. n < i \\<and> i < n'' \\<and> P i} \\<Longrightarrow>\n       x \\<in> {i. n < i \\<and>\n                   i \\<le> (LEAST i. n < i \\<and> i < n'' \\<and> P i) \\<and>\n                   P i}", "hence \"i=?l\""], ["proof (prove)\nusing this:\n  i \\<in> {LEAST i. n < i \\<and> i < n'' \\<and> P i}\n\ngoal (1 subgoal):\n 1. i = (LEAST i. n < i \\<and> i < n'' \\<and> P i)", "by simp"], ["proof (state)\nthis:\n  i = (LEAST i. n < i \\<and> i < n'' \\<and> P i)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {LEAST i. n < i \\<and> i < n'' \\<and> P i} \\<Longrightarrow>\n       x \\<in> {i. n < i \\<and>\n                   i \\<le> (LEAST i. n < i \\<and> i < n'' \\<and> P i) \\<and>\n                   P i}", "with \\<open>?l>n\\<close> \\<open>?l<n''\\<close> \\<open>P ?l\\<close>"], ["proof (chain)\npicking this:\n  n < (LEAST i. n < i \\<and> i < n'' \\<and> P i)\n  (LEAST i. n < i \\<and> i < n'' \\<and> P i) < n''\n  P (LEAST i. n < i \\<and> i < n'' \\<and> P i)\n  i = (LEAST i. n < i \\<and> i < n'' \\<and> P i)", "show \"i\\<in>{i. n < i \\<and> i \\<le> ?l \\<and> P i}\""], ["proof (prove)\nusing this:\n  n < (LEAST i. n < i \\<and> i < n'' \\<and> P i)\n  (LEAST i. n < i \\<and> i < n'' \\<and> P i) < n''\n  P (LEAST i. n < i \\<and> i < n'' \\<and> P i)\n  i = (LEAST i. n < i \\<and> i < n'' \\<and> P i)\n\ngoal (1 subgoal):\n 1. i \\<in> {i. n < i \\<and>\n                i \\<le> (LEAST i. n < i \\<and> i < n'' \\<and> P i) \\<and>\n                P i}", "by simp"], ["proof (state)\nthis:\n  i \\<in> {i. n < i \\<and>\n              i \\<le> (LEAST i. n < i \\<and> i < n'' \\<and> P i) \\<and> P i}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {LEAST i. n < i \\<and> i < n'' \\<and> P i}\n  \\<subseteq> {i. n < i \\<and>\n                  i \\<le> (LEAST i. n < i \\<and> i < n'' \\<and> P i) \\<and>\n                  P i}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {i. n < i \\<and>\n      i \\<le> (LEAST i. n < i \\<and> i < n'' \\<and> P i) \\<and> P i} =\n  {LEAST i. n < i \\<and> i < n'' \\<and> P i}\n\ngoal (2 subgoals):\n 1. 1 < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n    \\<exists>n'<n''.\n       n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = 1\n 2. \\<And>na.\n       \\<lbrakk>1 \\<le> na; na < c;\n        na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n        \\<exists>n'<n''.\n           n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = na;\n        Suc na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n'<n''.\n                            n < n' \\<and>\n                            card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n                            Suc na", "hence \"ccard n ?l P = 1\""], ["proof (prove)\nusing this:\n  {i. n < i \\<and>\n      i \\<le> (LEAST i. n < i \\<and> i < n'' \\<and> P i) \\<and> P i} =\n  {LEAST i. n < i \\<and> i < n'' \\<and> P i}\n\ngoal (1 subgoal):\n 1. card\n     {i. n < i \\<and>\n         i \\<le> (LEAST i. n < i \\<and> i < n'' \\<and> P i) \\<and> P i} =\n    1", "by simp"], ["proof (state)\nthis:\n  card\n   {i. n < i \\<and>\n       i \\<le> (LEAST i. n < i \\<and> i < n'' \\<and> P i) \\<and> P i} =\n  1\n\ngoal (2 subgoals):\n 1. 1 < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n    \\<exists>n'<n''.\n       n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = 1\n 2. \\<And>na.\n       \\<lbrakk>1 \\<le> na; na < c;\n        na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n        \\<exists>n'<n''.\n           n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = na;\n        Suc na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n'<n''.\n                            n < n' \\<and>\n                            card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n                            Suc na", "ultimately"], ["proof (chain)\npicking this:\n  n < (LEAST i. n < i \\<and> i < n'' \\<and> P i)\n  (LEAST i. n < i \\<and> i < n'' \\<and> P i) < n''\n  P (LEAST i. n < i \\<and> i < n'' \\<and> P i)\n  card\n   {i. n < i \\<and>\n       i \\<le> (LEAST i. n < i \\<and> i < n'' \\<and> P i) \\<and> P i} =\n  1", "show ?case"], ["proof (prove)\nusing this:\n  n < (LEAST i. n < i \\<and> i < n'' \\<and> P i)\n  (LEAST i. n < i \\<and> i < n'' \\<and> P i) < n''\n  P (LEAST i. n < i \\<and> i < n'' \\<and> P i)\n  card\n   {i. n < i \\<and>\n       i \\<le> (LEAST i. n < i \\<and> i < n'' \\<and> P i) \\<and> P i} =\n  1\n\ngoal (1 subgoal):\n 1. \\<exists>n'<n''.\n       n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = 1", "by auto"], ["proof (state)\nthis:\n  \\<exists>n'<n''.\n     n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = 1\n\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>1 \\<le> na; na < c;\n        na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n        \\<exists>n'<n''.\n           n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = na;\n        Suc na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n'<n''.\n                            n < n' \\<and>\n                            card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n                            Suc na", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>1 \\<le> na; na < c;\n        na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n        \\<exists>n'<n''.\n           n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = na;\n        Suc na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n'<n''.\n                            n < n' \\<and>\n                            card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n                            Suc na", "case (step c)"], ["proof (state)\nthis:\n  1 \\<le> c\n  c < c\n  c < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n  \\<exists>n'<n''.\n     n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = c\n  Suc c < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\n\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>1 \\<le> na; na < c;\n        na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n        \\<exists>n'<n''.\n           n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = na;\n        Suc na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n'<n''.\n                            n < n' \\<and>\n                            card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n                            Suc na", "moreover"], ["proof (state)\nthis:\n  1 \\<le> c\n  c < c\n  c < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n  \\<exists>n'<n''.\n     n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = c\n  Suc c < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\n\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>1 \\<le> na; na < c;\n        na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n        \\<exists>n'<n''.\n           n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = na;\n        Suc na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n'<n''.\n                            n < n' \\<and>\n                            card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n                            Suc na", "from step.prems"], ["proof (chain)\npicking this:\n  Suc c < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}", "have \"Suc c<ccard n n'' P\""], ["proof (prove)\nusing this:\n  Suc c < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\n\ngoal (1 subgoal):\n 1. Suc c < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}", "by simp"], ["proof (state)\nthis:\n  Suc c < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\n\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>1 \\<le> na; na < c;\n        na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n        \\<exists>n'<n''.\n           n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = na;\n        Suc na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n'<n''.\n                            n < n' \\<and>\n                            card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n                            Suc na", "ultimately"], ["proof (chain)\npicking this:\n  1 \\<le> c\n  c < c\n  c < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n  \\<exists>n'<n''.\n     n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = c\n  Suc c < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\n  Suc c < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}", "obtain n' where \"n'<n''\" and \"n < n'\" and \"ccard n n' P = c\""], ["proof (prove)\nusing this:\n  1 \\<le> c\n  c < c\n  c < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n  \\<exists>n'<n''.\n     n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = c\n  Suc c < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\n  Suc c < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\n\ngoal (1 subgoal):\n 1. (\\<And>n'.\n        \\<lbrakk>n' < n''; n < n';\n         card {i. n < i \\<and> i \\<le> n' \\<and> P i} = c\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  n' < n''\n  n < n'\n  card {i. n < i \\<and> i \\<le> n' \\<and> P i} = c\n\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>1 \\<le> na; na < c;\n        na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n        \\<exists>n'<n''.\n           n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = na;\n        Suc na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n'<n''.\n                            n < n' \\<and>\n                            card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n                            Suc na", "hence \"ccard n n'' P = ccard n n' P + ccard n' n'' P\""], ["proof (prove)\nusing this:\n  n' < n''\n  n < n'\n  card {i. n < i \\<and> i \\<le> n' \\<and> P i} = c\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n'' \\<and> P i} =\n    card {i. n < i \\<and> i \\<le> n' \\<and> P i} +\n    card {i. n' < i \\<and> i \\<le> n'' \\<and> P i}", "using ccard_sum[of n' n'' n]"], ["proof (prove)\nusing this:\n  n' < n''\n  n < n'\n  card {i. n < i \\<and> i \\<le> n' \\<and> P i} = c\n  \\<lbrakk>n' \\<le> n''; n \\<le> n'\\<rbrakk>\n  \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n'' \\<and> ?P i} =\n                    card {i. n < i \\<and> i \\<le> n' \\<and> ?P i} +\n                    card {i. n' < i \\<and> i \\<le> n'' \\<and> ?P i}\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n'' \\<and> P i} =\n    card {i. n < i \\<and> i \\<le> n' \\<and> P i} +\n    card {i. n' < i \\<and> i \\<le> n'' \\<and> P i}", "by simp"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> n'' \\<and> P i} =\n  card {i. n < i \\<and> i \\<le> n' \\<and> P i} +\n  card {i. n' < i \\<and> i \\<le> n'' \\<and> P i}\n\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>1 \\<le> na; na < c;\n        na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n        \\<exists>n'<n''.\n           n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = na;\n        Suc na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n'<n''.\n                            n < n' \\<and>\n                            card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n                            Suc na", "with \\<open>Suc c<ccard n n'' P\\<close> \\<open>ccard n n' P = c\\<close>"], ["proof (chain)\npicking this:\n  Suc c < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\n  card {i. n < i \\<and> i \\<le> n' \\<and> P i} = c\n  card {i. n < i \\<and> i \\<le> n'' \\<and> P i} =\n  card {i. n < i \\<and> i \\<le> n' \\<and> P i} +\n  card {i. n' < i \\<and> i \\<le> n'' \\<and> P i}", "have \"ccard n' n'' P>1\""], ["proof (prove)\nusing this:\n  Suc c < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\n  card {i. n < i \\<and> i \\<le> n' \\<and> P i} = c\n  card {i. n < i \\<and> i \\<le> n'' \\<and> P i} =\n  card {i. n < i \\<and> i \\<le> n' \\<and> P i} +\n  card {i. n' < i \\<and> i \\<le> n'' \\<and> P i}\n\ngoal (1 subgoal):\n 1. 1 < card {i. n' < i \\<and> i \\<le> n'' \\<and> P i}", "by simp"], ["proof (state)\nthis:\n  1 < card {i. n' < i \\<and> i \\<le> n'' \\<and> P i}\n\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>1 \\<le> na; na < c;\n        na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n        \\<exists>n'<n''.\n           n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = na;\n        Suc na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n'<n''.\n                            n < n' \\<and>\n                            card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n                            Suc na", "moreover"], ["proof (state)\nthis:\n  1 < card {i. n' < i \\<and> i \\<le> n'' \\<and> P i}\n\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>1 \\<le> na; na < c;\n        na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n        \\<exists>n'<n''.\n           n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = na;\n        Suc na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n'<n''.\n                            n < n' \\<and>\n                            card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n                            Suc na", "have \"ccard n' n'' P \\<le> Suc (card {i. n' < i \\<and> i < n'' \\<and> P i})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {i. n' < i \\<and> i \\<le> n'' \\<and> P i}\n    \\<le> Suc (card {i. n' < i \\<and> i < n'' \\<and> P i})", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card {i. n' < i \\<and> i \\<le> n'' \\<and> P i}\n    \\<le> Suc (card {i. n' < i \\<and> i < n'' \\<and> P i})", "from \\<open>ccard n' n'' P > 1\\<close>"], ["proof (chain)\npicking this:\n  1 < card {i. n' < i \\<and> i \\<le> n'' \\<and> P i}", "have \"n''>n'\""], ["proof (prove)\nusing this:\n  1 < card {i. n' < i \\<and> i \\<le> n'' \\<and> P i}\n\ngoal (1 subgoal):\n 1. n' < n''", "using less_le_trans"], ["proof (prove)\nusing this:\n  1 < card {i. n' < i \\<and> i \\<le> n'' \\<and> P i}\n  \\<lbrakk>?x < ?y; ?y \\<le> ?z\\<rbrakk> \\<Longrightarrow> ?x < ?z\n\ngoal (1 subgoal):\n 1. n' < n''", "by force"], ["proof (state)\nthis:\n  n' < n''\n\ngoal (1 subgoal):\n 1. card {i. n' < i \\<and> i \\<le> n'' \\<and> P i}\n    \\<le> Suc (card {i. n' < i \\<and> i < n'' \\<and> P i})", "then"], ["proof (chain)\npicking this:\n  n' < n''", "obtain n''' where \"Suc n''' = n''\" and \"Suc n''' \\<ge> n'\""], ["proof (prove)\nusing this:\n  n' < n''\n\ngoal (1 subgoal):\n 1. (\\<And>n'''.\n        \\<lbrakk>Suc n''' = n''; n' \\<le> Suc n'''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis lessE less_imp_le_nat)"], ["proof (state)\nthis:\n  Suc n''' = n''\n  n' \\<le> Suc n'''\n\ngoal (1 subgoal):\n 1. card {i. n' < i \\<and> i \\<le> n'' \\<and> P i}\n    \\<le> Suc (card {i. n' < i \\<and> i < n'' \\<and> P i})", "moreover"], ["proof (state)\nthis:\n  Suc n''' = n''\n  n' \\<le> Suc n'''\n\ngoal (1 subgoal):\n 1. card {i. n' < i \\<and> i \\<le> n'' \\<and> P i}\n    \\<le> Suc (card {i. n' < i \\<and> i < n'' \\<and> P i})", "have \"{i. n' < i \\<and> i < Suc n''' \\<and> P i} = {i. n' < i \\<and> i \\<le> n''' \\<and> P i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. n' < i \\<and> i < Suc n''' \\<and> P i} =\n    {i. n' < i \\<and> i \\<le> n''' \\<and> P i}", "by auto"], ["proof (state)\nthis:\n  {i. n' < i \\<and> i < Suc n''' \\<and> P i} =\n  {i. n' < i \\<and> i \\<le> n''' \\<and> P i}\n\ngoal (1 subgoal):\n 1. card {i. n' < i \\<and> i \\<le> n'' \\<and> P i}\n    \\<le> Suc (card {i. n' < i \\<and> i < n'' \\<and> P i})", "hence \"card {i. n' < i \\<and> i < Suc n''' \\<and> P i} = card {i. n' < i \\<and> i \\<le> n''' \\<and> P i}\""], ["proof (prove)\nusing this:\n  {i. n' < i \\<and> i < Suc n''' \\<and> P i} =\n  {i. n' < i \\<and> i \\<le> n''' \\<and> P i}\n\ngoal (1 subgoal):\n 1. card {i. n' < i \\<and> i < Suc n''' \\<and> P i} =\n    card {i. n' < i \\<and> i \\<le> n''' \\<and> P i}", "by simp"], ["proof (state)\nthis:\n  card {i. n' < i \\<and> i < Suc n''' \\<and> P i} =\n  card {i. n' < i \\<and> i \\<le> n''' \\<and> P i}\n\ngoal (1 subgoal):\n 1. card {i. n' < i \\<and> i \\<le> n'' \\<and> P i}\n    \\<le> Suc (card {i. n' < i \\<and> i < n'' \\<and> P i})", "moreover"], ["proof (state)\nthis:\n  card {i. n' < i \\<and> i < Suc n''' \\<and> P i} =\n  card {i. n' < i \\<and> i \\<le> n''' \\<and> P i}\n\ngoal (1 subgoal):\n 1. card {i. n' < i \\<and> i \\<le> n'' \\<and> P i}\n    \\<le> Suc (card {i. n' < i \\<and> i < n'' \\<and> P i})", "have \"card {i. n' < i \\<and> i \\<le> Suc n''' \\<and> P i} \\<le> Suc (card {i. n' < i \\<and> i \\<le> n''' \\<and> P i})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {i. n' < i \\<and> i \\<le> Suc n''' \\<and> P i}\n    \\<le> Suc (card {i. n' < i \\<and> i \\<le> n''' \\<and> P i})", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    card {i. n' < i \\<and> i \\<le> Suc n''' \\<and> P i}\n    \\<le> Suc (card {i. n' < i \\<and> i \\<le> n''' \\<and> P i})\n 2. \\<not> ?P \\<Longrightarrow>\n    card {i. n' < i \\<and> i \\<le> Suc n''' \\<and> P i}\n    \\<le> Suc (card {i. n' < i \\<and> i \\<le> n''' \\<and> P i})", "assume \"P (Suc n''')\""], ["proof (state)\nthis:\n  P (Suc n''')\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    card {i. n' < i \\<and> i \\<le> Suc n''' \\<and> P i}\n    \\<le> Suc (card {i. n' < i \\<and> i \\<le> n''' \\<and> P i})\n 2. \\<not> ?P \\<Longrightarrow>\n    card {i. n' < i \\<and> i \\<le> Suc n''' \\<and> P i}\n    \\<le> Suc (card {i. n' < i \\<and> i \\<le> n''' \\<and> P i})", "moreover"], ["proof (state)\nthis:\n  P (Suc n''')\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    card {i. n' < i \\<and> i \\<le> Suc n''' \\<and> P i}\n    \\<le> Suc (card {i. n' < i \\<and> i \\<le> n''' \\<and> P i})\n 2. \\<not> ?P \\<Longrightarrow>\n    card {i. n' < i \\<and> i \\<le> Suc n''' \\<and> P i}\n    \\<le> Suc (card {i. n' < i \\<and> i \\<le> n''' \\<and> P i})", "from \\<open>n''>n'\\<close> \\<open>Suc n'''=n''\\<close>"], ["proof (chain)\npicking this:\n  n' < n''\n  Suc n''' = n''", "have \"n'''\\<ge>n'\""], ["proof (prove)\nusing this:\n  n' < n''\n  Suc n''' = n''\n\ngoal (1 subgoal):\n 1. n' \\<le> n'''", "by simp"], ["proof (state)\nthis:\n  n' \\<le> n'''\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    card {i. n' < i \\<and> i \\<le> Suc n''' \\<and> P i}\n    \\<le> Suc (card {i. n' < i \\<and> i \\<le> n''' \\<and> P i})\n 2. \\<not> ?P \\<Longrightarrow>\n    card {i. n' < i \\<and> i \\<le> Suc n''' \\<and> P i}\n    \\<le> Suc (card {i. n' < i \\<and> i \\<le> n''' \\<and> P i})", "ultimately"], ["proof (chain)\npicking this:\n  P (Suc n''')\n  n' \\<le> n'''", "show ?thesis"], ["proof (prove)\nusing this:\n  P (Suc n''')\n  n' \\<le> n'''\n\ngoal (1 subgoal):\n 1. card {i. n' < i \\<and> i \\<le> Suc n''' \\<and> P i}\n    \\<le> Suc (card {i. n' < i \\<and> i \\<le> n''' \\<and> P i})", "using ccard_inc[of P n''' n']"], ["proof (prove)\nusing this:\n  P (Suc n''')\n  n' \\<le> n'''\n  \\<lbrakk>P (Suc n'''); n' \\<le> n'''\\<rbrakk>\n  \\<Longrightarrow> card {i. n' < i \\<and> i \\<le> Suc n''' \\<and> P i} =\n                    Suc (card {i. n' < i \\<and> i \\<le> n''' \\<and> P i})\n\ngoal (1 subgoal):\n 1. card {i. n' < i \\<and> i \\<le> Suc n''' \\<and> P i}\n    \\<le> Suc (card {i. n' < i \\<and> i \\<le> n''' \\<and> P i})", "by simp"], ["proof (state)\nthis:\n  card {i. n' < i \\<and> i \\<le> Suc n''' \\<and> P i}\n  \\<le> Suc (card {i. n' < i \\<and> i \\<le> n''' \\<and> P i})\n\ngoal (1 subgoal):\n 1. \\<not> P (Suc n''') \\<Longrightarrow>\n    card {i. n' < i \\<and> i \\<le> Suc n''' \\<and> P i}\n    \\<le> Suc (card {i. n' < i \\<and> i \\<le> n''' \\<and> P i})", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> P (Suc n''') \\<Longrightarrow>\n    card {i. n' < i \\<and> i \\<le> Suc n''' \\<and> P i}\n    \\<le> Suc (card {i. n' < i \\<and> i \\<le> n''' \\<and> P i})", "assume \"\\<not> P (Suc n''')\""], ["proof (state)\nthis:\n  \\<not> P (Suc n''')\n\ngoal (1 subgoal):\n 1. \\<not> P (Suc n''') \\<Longrightarrow>\n    card {i. n' < i \\<and> i \\<le> Suc n''' \\<and> P i}\n    \\<le> Suc (card {i. n' < i \\<and> i \\<le> n''' \\<and> P i})", "moreover"], ["proof (state)\nthis:\n  \\<not> P (Suc n''')\n\ngoal (1 subgoal):\n 1. \\<not> P (Suc n''') \\<Longrightarrow>\n    card {i. n' < i \\<and> i \\<le> Suc n''' \\<and> P i}\n    \\<le> Suc (card {i. n' < i \\<and> i \\<le> n''' \\<and> P i})", "from \\<open>n''>n'\\<close> \\<open>Suc n'''=n''\\<close>"], ["proof (chain)\npicking this:\n  n' < n''\n  Suc n''' = n''", "have \"n'''\\<ge>n'\""], ["proof (prove)\nusing this:\n  n' < n''\n  Suc n''' = n''\n\ngoal (1 subgoal):\n 1. n' \\<le> n'''", "by simp"], ["proof (state)\nthis:\n  n' \\<le> n'''\n\ngoal (1 subgoal):\n 1. \\<not> P (Suc n''') \\<Longrightarrow>\n    card {i. n' < i \\<and> i \\<le> Suc n''' \\<and> P i}\n    \\<le> Suc (card {i. n' < i \\<and> i \\<le> n''' \\<and> P i})", "ultimately"], ["proof (chain)\npicking this:\n  \\<not> P (Suc n''')\n  n' \\<le> n'''", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> P (Suc n''')\n  n' \\<le> n'''\n\ngoal (1 subgoal):\n 1. card {i. n' < i \\<and> i \\<le> Suc n''' \\<and> P i}\n    \\<le> Suc (card {i. n' < i \\<and> i \\<le> n''' \\<and> P i})", "using ccard_same[of P n''' n']"], ["proof (prove)\nusing this:\n  \\<not> P (Suc n''')\n  n' \\<le> n'''\n  \\<not> P (Suc n''') \\<Longrightarrow>\n  card {i. n' < i \\<and> i \\<le> n''' \\<and> P i} =\n  card {i. n' < i \\<and> i \\<le> Suc n''' \\<and> P i}\n\ngoal (1 subgoal):\n 1. card {i. n' < i \\<and> i \\<le> Suc n''' \\<and> P i}\n    \\<le> Suc (card {i. n' < i \\<and> i \\<le> n''' \\<and> P i})", "by simp"], ["proof (state)\nthis:\n  card {i. n' < i \\<and> i \\<le> Suc n''' \\<and> P i}\n  \\<le> Suc (card {i. n' < i \\<and> i \\<le> n''' \\<and> P i})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card {i. n' < i \\<and> i \\<le> Suc n''' \\<and> P i}\n  \\<le> Suc (card {i. n' < i \\<and> i \\<le> n''' \\<and> P i})\n\ngoal (1 subgoal):\n 1. card {i. n' < i \\<and> i \\<le> n'' \\<and> P i}\n    \\<le> Suc (card {i. n' < i \\<and> i < n'' \\<and> P i})", "ultimately"], ["proof (chain)\npicking this:\n  Suc n''' = n''\n  n' \\<le> Suc n'''\n  card {i. n' < i \\<and> i < Suc n''' \\<and> P i} =\n  card {i. n' < i \\<and> i \\<le> n''' \\<and> P i}\n  card {i. n' < i \\<and> i \\<le> Suc n''' \\<and> P i}\n  \\<le> Suc (card {i. n' < i \\<and> i \\<le> n''' \\<and> P i})", "show ?thesis"], ["proof (prove)\nusing this:\n  Suc n''' = n''\n  n' \\<le> Suc n'''\n  card {i. n' < i \\<and> i < Suc n''' \\<and> P i} =\n  card {i. n' < i \\<and> i \\<le> n''' \\<and> P i}\n  card {i. n' < i \\<and> i \\<le> Suc n''' \\<and> P i}\n  \\<le> Suc (card {i. n' < i \\<and> i \\<le> n''' \\<and> P i})\n\ngoal (1 subgoal):\n 1. card {i. n' < i \\<and> i \\<le> n'' \\<and> P i}\n    \\<le> Suc (card {i. n' < i \\<and> i < n'' \\<and> P i})", "by simp"], ["proof (state)\nthis:\n  card {i. n' < i \\<and> i \\<le> n'' \\<and> P i}\n  \\<le> Suc (card {i. n' < i \\<and> i < n'' \\<and> P i})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card {i. n' < i \\<and> i \\<le> n'' \\<and> P i}\n  \\<le> Suc (card {i. n' < i \\<and> i < n'' \\<and> P i})\n\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>1 \\<le> na; na < c;\n        na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n        \\<exists>n'<n''.\n           n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = na;\n        Suc na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n'<n''.\n                            n < n' \\<and>\n                            card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n                            Suc na", "ultimately"], ["proof (chain)\npicking this:\n  1 < card {i. n' < i \\<and> i \\<le> n'' \\<and> P i}\n  card {i. n' < i \\<and> i \\<le> n'' \\<and> P i}\n  \\<le> Suc (card {i. n' < i \\<and> i < n'' \\<and> P i})", "have \"card {i. n' < i \\<and> i < n'' \\<and> P i} \\<ge> 1\""], ["proof (prove)\nusing this:\n  1 < card {i. n' < i \\<and> i \\<le> n'' \\<and> P i}\n  card {i. n' < i \\<and> i \\<le> n'' \\<and> P i}\n  \\<le> Suc (card {i. n' < i \\<and> i < n'' \\<and> P i})\n\ngoal (1 subgoal):\n 1. 1 \\<le> card {i. n' < i \\<and> i < n'' \\<and> P i}", "by simp"], ["proof (state)\nthis:\n  1 \\<le> card {i. n' < i \\<and> i < n'' \\<and> P i}\n\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>1 \\<le> na; na < c;\n        na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n        \\<exists>n'<n''.\n           n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = na;\n        Suc na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n'<n''.\n                            n < n' \\<and>\n                            card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n                            Suc na", "hence \"{i. n' < i \\<and> i < n'' \\<and> P i} \\<noteq> {}\""], ["proof (prove)\nusing this:\n  1 \\<le> card {i. n' < i \\<and> i < n'' \\<and> P i}\n\ngoal (1 subgoal):\n 1. {i. n' < i \\<and> i < n'' \\<and> P i} \\<noteq> {}", "by fastforce"], ["proof (state)\nthis:\n  {i. n' < i \\<and> i < n'' \\<and> P i} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>1 \\<le> na; na < c;\n        na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n        \\<exists>n'<n''.\n           n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = na;\n        Suc na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n'<n''.\n                            n < n' \\<and>\n                            card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n                            Suc na", "hence \"\\<exists>i. n' < i \\<and> i < n'' \\<and> P i\""], ["proof (prove)\nusing this:\n  {i. n' < i \\<and> i < n'' \\<and> P i} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>i>n'. i < n'' \\<and> P i", "by auto"], ["proof (state)\nthis:\n  \\<exists>i>n'. i < n'' \\<and> P i\n\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>1 \\<le> na; na < c;\n        na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n        \\<exists>n'<n''.\n           n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = na;\n        Suc na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n'<n''.\n                            n < n' \\<and>\n                            card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n                            Suc na", "let ?l = \"LEAST i::nat. n' < i \\<and> i < n'' \\<and> P i\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>1 \\<le> na; na < c;\n        na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n        \\<exists>n'<n''.\n           n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = na;\n        Suc na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n'<n''.\n                            n < n' \\<and>\n                            card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n                            Suc na", "from \\<open>\\<exists>i. n' < i \\<and> i < n'' \\<and> P i\\<close>"], ["proof (chain)\npicking this:\n  \\<exists>i>n'. i < n'' \\<and> P i", "have \"n' < ?l\""], ["proof (prove)\nusing this:\n  \\<exists>i>n'. i < n'' \\<and> P i\n\ngoal (1 subgoal):\n 1. n' < (LEAST i. n' < i \\<and> i < n'' \\<and> P i)", "using LeastI_ex[of \"\\<lambda>i::nat. n' < i \\<and> i < n'' \\<and> P i\"]"], ["proof (prove)\nusing this:\n  \\<exists>i>n'. i < n'' \\<and> P i\n  \\<exists>x>n'. x < n'' \\<and> P x \\<Longrightarrow>\n  n' < (LEAST i. n' < i \\<and> i < n'' \\<and> P i) \\<and>\n  (LEAST i. n' < i \\<and> i < n'' \\<and> P i) < n'' \\<and>\n  P (LEAST i. n' < i \\<and> i < n'' \\<and> P i)\n\ngoal (1 subgoal):\n 1. n' < (LEAST i. n' < i \\<and> i < n'' \\<and> P i)", "by auto"], ["proof (state)\nthis:\n  n' < (LEAST i. n' < i \\<and> i < n'' \\<and> P i)\n\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>1 \\<le> na; na < c;\n        na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n        \\<exists>n'<n''.\n           n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = na;\n        Suc na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n'<n''.\n                            n < n' \\<and>\n                            card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n                            Suc na", "with \\<open>n < n'\\<close>"], ["proof (chain)\npicking this:\n  n < n'\n  n' < (LEAST i. n' < i \\<and> i < n'' \\<and> P i)", "have \"ccard n ?l P = ccard n n' P + ccard n' ?l P\""], ["proof (prove)\nusing this:\n  n < n'\n  n' < (LEAST i. n' < i \\<and> i < n'' \\<and> P i)\n\ngoal (1 subgoal):\n 1. card\n     {i. n < i \\<and>\n         i \\<le> (LEAST i. n' < i \\<and> i < n'' \\<and> P i) \\<and> P i} =\n    card {i. n < i \\<and> i \\<le> n' \\<and> P i} +\n    card\n     {i. n' < i \\<and>\n         i \\<le> (LEAST i. n' < i \\<and> i < n'' \\<and> P i) \\<and> P i}", "using ccard_sum[of n' ?l n]"], ["proof (prove)\nusing this:\n  n < n'\n  n' < (LEAST i. n' < i \\<and> i < n'' \\<and> P i)\n  \\<lbrakk>n' \\<le> (LEAST i. n' < i \\<and> i < n'' \\<and> P i);\n   n \\<le> n'\\<rbrakk>\n  \\<Longrightarrow> card\n                     {i. n < i \\<and>\n                         i \\<le> (LEAST i.\n                                     n' < i \\<and>\n                                     i < n'' \\<and> P i) \\<and>\n                         ?P i} =\n                    card {i. n < i \\<and> i \\<le> n' \\<and> ?P i} +\n                    card\n                     {i. n' < i \\<and>\n                         i \\<le> (LEAST i.\n                                     n' < i \\<and>\n                                     i < n'' \\<and> P i) \\<and>\n                         ?P i}\n\ngoal (1 subgoal):\n 1. card\n     {i. n < i \\<and>\n         i \\<le> (LEAST i. n' < i \\<and> i < n'' \\<and> P i) \\<and> P i} =\n    card {i. n < i \\<and> i \\<le> n' \\<and> P i} +\n    card\n     {i. n' < i \\<and>\n         i \\<le> (LEAST i. n' < i \\<and> i < n'' \\<and> P i) \\<and> P i}", "by simp"], ["proof (state)\nthis:\n  card\n   {i. n < i \\<and>\n       i \\<le> (LEAST i. n' < i \\<and> i < n'' \\<and> P i) \\<and> P i} =\n  card {i. n < i \\<and> i \\<le> n' \\<and> P i} +\n  card\n   {i. n' < i \\<and>\n       i \\<le> (LEAST i. n' < i \\<and> i < n'' \\<and> P i) \\<and> P i}\n\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>1 \\<le> na; na < c;\n        na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n        \\<exists>n'<n''.\n           n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = na;\n        Suc na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n'<n''.\n                            n < n' \\<and>\n                            card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n                            Suc na", "moreover"], ["proof (state)\nthis:\n  card\n   {i. n < i \\<and>\n       i \\<le> (LEAST i. n' < i \\<and> i < n'' \\<and> P i) \\<and> P i} =\n  card {i. n < i \\<and> i \\<le> n' \\<and> P i} +\n  card\n   {i. n' < i \\<and>\n       i \\<le> (LEAST i. n' < i \\<and> i < n'' \\<and> P i) \\<and> P i}\n\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>1 \\<le> na; na < c;\n        na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n        \\<exists>n'<n''.\n           n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = na;\n        Suc na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n'<n''.\n                            n < n' \\<and>\n                            card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n                            Suc na", "have \"{i. n' < i \\<and> i \\<le> ?l \\<and> P i} = {?l}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. n' < i \\<and>\n        i \\<le> (LEAST i. n' < i \\<and> i < n'' \\<and> P i) \\<and> P i} =\n    {LEAST i. n' < i \\<and> i < n'' \\<and> P i}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. {i. n' < i \\<and>\n        i \\<le> (LEAST i. n' < i \\<and> i < n'' \\<and> P i) \\<and> P i}\n    \\<subseteq> {LEAST i. n' < i \\<and> i < n'' \\<and> P i}\n 2. {LEAST i. n' < i \\<and> i < n'' \\<and> P i}\n    \\<subseteq> {i. n' < i \\<and>\n                    i \\<le> (LEAST i.\n                                n' < i \\<and> i < n'' \\<and> P i) \\<and>\n                    P i}", "show \"{i. n' < i \\<and> i \\<le> ?l \\<and> P i} \\<subseteq> {?l}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. n' < i \\<and>\n        i \\<le> (LEAST i. n' < i \\<and> i < n'' \\<and> P i) \\<and> P i}\n    \\<subseteq> {LEAST i. n' < i \\<and> i < n'' \\<and> P i}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {i. n' < i \\<and>\n                   i \\<le> (LEAST i.\n                               n' < i \\<and> i < n'' \\<and> P i) \\<and>\n                   P i} \\<Longrightarrow>\n       x \\<in> {LEAST i. n' < i \\<and> i < n'' \\<and> P i}", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {i. n' < i \\<and>\n                   i \\<le> (LEAST i.\n                               n' < i \\<and> i < n'' \\<and> P i) \\<and>\n                   P i} \\<Longrightarrow>\n       x \\<in> {LEAST i. n' < i \\<and> i < n'' \\<and> P i}", "assume \"i\\<in>{i. n' < i \\<and> i \\<le> ?l \\<and> P i}\""], ["proof (state)\nthis:\n  i \\<in> {i. n' < i \\<and>\n              i \\<le> (LEAST i. n' < i \\<and> i < n'' \\<and> P i) \\<and>\n              P i}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {i. n' < i \\<and>\n                   i \\<le> (LEAST i.\n                               n' < i \\<and> i < n'' \\<and> P i) \\<and>\n                   P i} \\<Longrightarrow>\n       x \\<in> {LEAST i. n' < i \\<and> i < n'' \\<and> P i}", "hence \"n' < i\" and \"i \\<le> ?l\" and \"P i\""], ["proof (prove)\nusing this:\n  i \\<in> {i. n' < i \\<and>\n              i \\<le> (LEAST i. n' < i \\<and> i < n'' \\<and> P i) \\<and>\n              P i}\n\ngoal (1 subgoal):\n 1. n' < i &&& i \\<le> (LEAST i. n' < i \\<and> i < n'' \\<and> P i) &&& P i", "by auto"], ["proof (state)\nthis:\n  n' < i\n  i \\<le> (LEAST i. n' < i \\<and> i < n'' \\<and> P i)\n  P i\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {i. n' < i \\<and>\n                   i \\<le> (LEAST i.\n                               n' < i \\<and> i < n'' \\<and> P i) \\<and>\n                   P i} \\<Longrightarrow>\n       x \\<in> {LEAST i. n' < i \\<and> i < n'' \\<and> P i}", "with \\<open>\\<exists>i. n' < i \\<and> i < n'' \\<and> P i\\<close>"], ["proof (chain)\npicking this:\n  \\<exists>i>n'. i < n'' \\<and> P i\n  n' < i\n  i \\<le> (LEAST i. n' < i \\<and> i < n'' \\<and> P i)\n  P i", "have \"i=?l\""], ["proof (prove)\nusing this:\n  \\<exists>i>n'. i < n'' \\<and> P i\n  n' < i\n  i \\<le> (LEAST i. n' < i \\<and> i < n'' \\<and> P i)\n  P i\n\ngoal (1 subgoal):\n 1. i = (LEAST i. n' < i \\<and> i < n'' \\<and> P i)", "using Least_le[of \"\\<lambda>i. n' < i \\<and> i < n'' \\<and> P i\"]"], ["proof (prove)\nusing this:\n  \\<exists>i>n'. i < n'' \\<and> P i\n  n' < i\n  i \\<le> (LEAST i. n' < i \\<and> i < n'' \\<and> P i)\n  P i\n  n' < ?k \\<and> ?k < n'' \\<and> P ?k \\<Longrightarrow>\n  (LEAST x. n' < x \\<and> x < n'' \\<and> P x) \\<le> ?k\n\ngoal (1 subgoal):\n 1. i = (LEAST i. n' < i \\<and> i < n'' \\<and> P i)", "by (meson antisym le_less_trans)"], ["proof (state)\nthis:\n  i = (LEAST i. n' < i \\<and> i < n'' \\<and> P i)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {i. n' < i \\<and>\n                   i \\<le> (LEAST i.\n                               n' < i \\<and> i < n'' \\<and> P i) \\<and>\n                   P i} \\<Longrightarrow>\n       x \\<in> {LEAST i. n' < i \\<and> i < n'' \\<and> P i}", "thus \"i\\<in>{?l}\""], ["proof (prove)\nusing this:\n  i = (LEAST i. n' < i \\<and> i < n'' \\<and> P i)\n\ngoal (1 subgoal):\n 1. i \\<in> {LEAST i. n' < i \\<and> i < n'' \\<and> P i}", "by simp"], ["proof (state)\nthis:\n  i \\<in> {LEAST i. n' < i \\<and> i < n'' \\<and> P i}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {i. n' < i \\<and>\n      i \\<le> (LEAST i. n' < i \\<and> i < n'' \\<and> P i) \\<and> P i}\n  \\<subseteq> {LEAST i. n' < i \\<and> i < n'' \\<and> P i}\n\ngoal (1 subgoal):\n 1. {LEAST i. n' < i \\<and> i < n'' \\<and> P i}\n    \\<subseteq> {i. n' < i \\<and>\n                    i \\<le> (LEAST i.\n                                n' < i \\<and> i < n'' \\<and> P i) \\<and>\n                    P i}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. {LEAST i. n' < i \\<and> i < n'' \\<and> P i}\n    \\<subseteq> {i. n' < i \\<and>\n                    i \\<le> (LEAST i.\n                                n' < i \\<and> i < n'' \\<and> P i) \\<and>\n                    P i}", "show \"{?l} \\<subseteq> {i. n' < i \\<and> i \\<le> ?l \\<and> P i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {LEAST i. n' < i \\<and> i < n'' \\<and> P i}\n    \\<subseteq> {i. n' < i \\<and>\n                    i \\<le> (LEAST i.\n                                n' < i \\<and> i < n'' \\<and> P i) \\<and>\n                    P i}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {LEAST i. n' < i \\<and> i < n'' \\<and> P i} \\<Longrightarrow>\n       x \\<in> {i. n' < i \\<and>\n                   i \\<le> (LEAST i.\n                               n' < i \\<and> i < n'' \\<and> P i) \\<and>\n                   P i}", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {LEAST i. n' < i \\<and> i < n'' \\<and> P i} \\<Longrightarrow>\n       x \\<in> {i. n' < i \\<and>\n                   i \\<le> (LEAST i.\n                               n' < i \\<and> i < n'' \\<and> P i) \\<and>\n                   P i}", "assume \"i\\<in>{?l}\""], ["proof (state)\nthis:\n  i \\<in> {LEAST i. n' < i \\<and> i < n'' \\<and> P i}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {LEAST i. n' < i \\<and> i < n'' \\<and> P i} \\<Longrightarrow>\n       x \\<in> {i. n' < i \\<and>\n                   i \\<le> (LEAST i.\n                               n' < i \\<and> i < n'' \\<and> P i) \\<and>\n                   P i}", "hence \"i=?l\""], ["proof (prove)\nusing this:\n  i \\<in> {LEAST i. n' < i \\<and> i < n'' \\<and> P i}\n\ngoal (1 subgoal):\n 1. i = (LEAST i. n' < i \\<and> i < n'' \\<and> P i)", "by simp"], ["proof (state)\nthis:\n  i = (LEAST i. n' < i \\<and> i < n'' \\<and> P i)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {LEAST i. n' < i \\<and> i < n'' \\<and> P i} \\<Longrightarrow>\n       x \\<in> {i. n' < i \\<and>\n                   i \\<le> (LEAST i.\n                               n' < i \\<and> i < n'' \\<and> P i) \\<and>\n                   P i}", "moreover"], ["proof (state)\nthis:\n  i = (LEAST i. n' < i \\<and> i < n'' \\<and> P i)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {LEAST i. n' < i \\<and> i < n'' \\<and> P i} \\<Longrightarrow>\n       x \\<in> {i. n' < i \\<and>\n                   i \\<le> (LEAST i.\n                               n' < i \\<and> i < n'' \\<and> P i) \\<and>\n                   P i}", "from \\<open>\\<exists>i. n' < i \\<and> i < n'' \\<and> P i\\<close>"], ["proof (chain)\npicking this:\n  \\<exists>i>n'. i < n'' \\<and> P i", "have \"?l<n''\" and \"P ?l\""], ["proof (prove)\nusing this:\n  \\<exists>i>n'. i < n'' \\<and> P i\n\ngoal (1 subgoal):\n 1. (LEAST i. n' < i \\<and> i < n'' \\<and> P i) < n'' &&&\n    P (LEAST i. n' < i \\<and> i < n'' \\<and> P i)", "using LeastI_ex[of \"\\<lambda>i. n' < i \\<and> i < n'' \\<and> P i\"]"], ["proof (prove)\nusing this:\n  \\<exists>i>n'. i < n'' \\<and> P i\n  \\<exists>x>n'. x < n'' \\<and> P x \\<Longrightarrow>\n  n' < (LEAST i. n' < i \\<and> i < n'' \\<and> P i) \\<and>\n  (LEAST i. n' < i \\<and> i < n'' \\<and> P i) < n'' \\<and>\n  P (LEAST i. n' < i \\<and> i < n'' \\<and> P i)\n\ngoal (1 subgoal):\n 1. (LEAST i. n' < i \\<and> i < n'' \\<and> P i) < n'' &&&\n    P (LEAST i. n' < i \\<and> i < n'' \\<and> P i)", "by auto"], ["proof (state)\nthis:\n  (LEAST i. n' < i \\<and> i < n'' \\<and> P i) < n''\n  P (LEAST i. n' < i \\<and> i < n'' \\<and> P i)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {LEAST i. n' < i \\<and> i < n'' \\<and> P i} \\<Longrightarrow>\n       x \\<in> {i. n' < i \\<and>\n                   i \\<le> (LEAST i.\n                               n' < i \\<and> i < n'' \\<and> P i) \\<and>\n                   P i}", "ultimately"], ["proof (chain)\npicking this:\n  i = (LEAST i. n' < i \\<and> i < n'' \\<and> P i)\n  (LEAST i. n' < i \\<and> i < n'' \\<and> P i) < n''\n  P (LEAST i. n' < i \\<and> i < n'' \\<and> P i)", "show \"i\\<in>{i. n' < i \\<and> i \\<le> ?l \\<and> P i}\""], ["proof (prove)\nusing this:\n  i = (LEAST i. n' < i \\<and> i < n'' \\<and> P i)\n  (LEAST i. n' < i \\<and> i < n'' \\<and> P i) < n''\n  P (LEAST i. n' < i \\<and> i < n'' \\<and> P i)\n\ngoal (1 subgoal):\n 1. i \\<in> {i. n' < i \\<and>\n                i \\<le> (LEAST i. n' < i \\<and> i < n'' \\<and> P i) \\<and>\n                P i}", "using \\<open>?l>n'\\<close>"], ["proof (prove)\nusing this:\n  i = (LEAST i. n' < i \\<and> i < n'' \\<and> P i)\n  (LEAST i. n' < i \\<and> i < n'' \\<and> P i) < n''\n  P (LEAST i. n' < i \\<and> i < n'' \\<and> P i)\n  n' < (LEAST i. n' < i \\<and> i < n'' \\<and> P i)\n\ngoal (1 subgoal):\n 1. i \\<in> {i. n' < i \\<and>\n                i \\<le> (LEAST i. n' < i \\<and> i < n'' \\<and> P i) \\<and>\n                P i}", "by simp"], ["proof (state)\nthis:\n  i \\<in> {i. n' < i \\<and>\n              i \\<le> (LEAST i. n' < i \\<and> i < n'' \\<and> P i) \\<and>\n              P i}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {LEAST i. n' < i \\<and> i < n'' \\<and> P i}\n  \\<subseteq> {i. n' < i \\<and>\n                  i \\<le> (LEAST i. n' < i \\<and> i < n'' \\<and> P i) \\<and>\n                  P i}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {i. n' < i \\<and>\n      i \\<le> (LEAST i. n' < i \\<and> i < n'' \\<and> P i) \\<and> P i} =\n  {LEAST i. n' < i \\<and> i < n'' \\<and> P i}\n\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>1 \\<le> na; na < c;\n        na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n        \\<exists>n'<n''.\n           n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = na;\n        Suc na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n'<n''.\n                            n < n' \\<and>\n                            card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n                            Suc na", "hence \"ccard n' ?l P = 1\""], ["proof (prove)\nusing this:\n  {i. n' < i \\<and>\n      i \\<le> (LEAST i. n' < i \\<and> i < n'' \\<and> P i) \\<and> P i} =\n  {LEAST i. n' < i \\<and> i < n'' \\<and> P i}\n\ngoal (1 subgoal):\n 1. card\n     {i. n' < i \\<and>\n         i \\<le> (LEAST i. n' < i \\<and> i < n'' \\<and> P i) \\<and> P i} =\n    1", "by simp"], ["proof (state)\nthis:\n  card\n   {i. n' < i \\<and>\n       i \\<le> (LEAST i. n' < i \\<and> i < n'' \\<and> P i) \\<and> P i} =\n  1\n\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>1 \\<le> na; na < c;\n        na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n        \\<exists>n'<n''.\n           n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = na;\n        Suc na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n'<n''.\n                            n < n' \\<and>\n                            card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n                            Suc na", "ultimately"], ["proof (chain)\npicking this:\n  card\n   {i. n < i \\<and>\n       i \\<le> (LEAST i. n' < i \\<and> i < n'' \\<and> P i) \\<and> P i} =\n  card {i. n < i \\<and> i \\<le> n' \\<and> P i} +\n  card\n   {i. n' < i \\<and>\n       i \\<le> (LEAST i. n' < i \\<and> i < n'' \\<and> P i) \\<and> P i}\n  card\n   {i. n' < i \\<and>\n       i \\<le> (LEAST i. n' < i \\<and> i < n'' \\<and> P i) \\<and> P i} =\n  1", "have \"card {i. n < i \\<and> i \\<le> ?l \\<and> P i} = Suc c\""], ["proof (prove)\nusing this:\n  card\n   {i. n < i \\<and>\n       i \\<le> (LEAST i. n' < i \\<and> i < n'' \\<and> P i) \\<and> P i} =\n  card {i. n < i \\<and> i \\<le> n' \\<and> P i} +\n  card\n   {i. n' < i \\<and>\n       i \\<le> (LEAST i. n' < i \\<and> i < n'' \\<and> P i) \\<and> P i}\n  card\n   {i. n' < i \\<and>\n       i \\<le> (LEAST i. n' < i \\<and> i < n'' \\<and> P i) \\<and> P i} =\n  1\n\ngoal (1 subgoal):\n 1. card\n     {i. n < i \\<and>\n         i \\<le> (LEAST i. n' < i \\<and> i < n'' \\<and> P i) \\<and> P i} =\n    Suc c", "using \\<open>ccard n n' P = c\\<close>"], ["proof (prove)\nusing this:\n  card\n   {i. n < i \\<and>\n       i \\<le> (LEAST i. n' < i \\<and> i < n'' \\<and> P i) \\<and> P i} =\n  card {i. n < i \\<and> i \\<le> n' \\<and> P i} +\n  card\n   {i. n' < i \\<and>\n       i \\<le> (LEAST i. n' < i \\<and> i < n'' \\<and> P i) \\<and> P i}\n  card\n   {i. n' < i \\<and>\n       i \\<le> (LEAST i. n' < i \\<and> i < n'' \\<and> P i) \\<and> P i} =\n  1\n  card {i. n < i \\<and> i \\<le> n' \\<and> P i} = c\n\ngoal (1 subgoal):\n 1. card\n     {i. n < i \\<and>\n         i \\<le> (LEAST i. n' < i \\<and> i < n'' \\<and> P i) \\<and> P i} =\n    Suc c", "by simp"], ["proof (state)\nthis:\n  card\n   {i. n < i \\<and>\n       i \\<le> (LEAST i. n' < i \\<and> i < n'' \\<and> P i) \\<and> P i} =\n  Suc c\n\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>1 \\<le> na; na < c;\n        na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n        \\<exists>n'<n''.\n           n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = na;\n        Suc na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n'<n''.\n                            n < n' \\<and>\n                            card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n                            Suc na", "moreover"], ["proof (state)\nthis:\n  card\n   {i. n < i \\<and>\n       i \\<le> (LEAST i. n' < i \\<and> i < n'' \\<and> P i) \\<and> P i} =\n  Suc c\n\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>1 \\<le> na; na < c;\n        na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n        \\<exists>n'<n''.\n           n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = na;\n        Suc na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n'<n''.\n                            n < n' \\<and>\n                            card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n                            Suc na", "from \\<open>\\<exists>i. n' < i \\<and> i < n'' \\<and> P i\\<close>"], ["proof (chain)\npicking this:\n  \\<exists>i>n'. i < n'' \\<and> P i", "have \"n' < ?l\" and \"?l < n''\" and \"P ?l\""], ["proof (prove)\nusing this:\n  \\<exists>i>n'. i < n'' \\<and> P i\n\ngoal (1 subgoal):\n 1. n' < (LEAST i. n' < i \\<and> i < n'' \\<and> P i) &&&\n    (LEAST i. n' < i \\<and> i < n'' \\<and> P i) < n'' &&&\n    P (LEAST i. n' < i \\<and> i < n'' \\<and> P i)", "using LeastI_ex[of \"\\<lambda>i::nat. n' < i \\<and> i < n'' \\<and> P i\"]"], ["proof (prove)\nusing this:\n  \\<exists>i>n'. i < n'' \\<and> P i\n  \\<exists>x>n'. x < n'' \\<and> P x \\<Longrightarrow>\n  n' < (LEAST i. n' < i \\<and> i < n'' \\<and> P i) \\<and>\n  (LEAST i. n' < i \\<and> i < n'' \\<and> P i) < n'' \\<and>\n  P (LEAST i. n' < i \\<and> i < n'' \\<and> P i)\n\ngoal (1 subgoal):\n 1. n' < (LEAST i. n' < i \\<and> i < n'' \\<and> P i) &&&\n    (LEAST i. n' < i \\<and> i < n'' \\<and> P i) < n'' &&&\n    P (LEAST i. n' < i \\<and> i < n'' \\<and> P i)", "by auto"], ["proof (state)\nthis:\n  n' < (LEAST i. n' < i \\<and> i < n'' \\<and> P i)\n  (LEAST i. n' < i \\<and> i < n'' \\<and> P i) < n''\n  P (LEAST i. n' < i \\<and> i < n'' \\<and> P i)\n\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>1 \\<le> na; na < c;\n        na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n        \\<exists>n'<n''.\n           n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = na;\n        Suc na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n'<n''.\n                            n < n' \\<and>\n                            card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n                            Suc na", "with \\<open>n < n'\\<close>"], ["proof (chain)\npicking this:\n  n < n'\n  n' < (LEAST i. n' < i \\<and> i < n'' \\<and> P i)\n  (LEAST i. n' < i \\<and> i < n'' \\<and> P i) < n''\n  P (LEAST i. n' < i \\<and> i < n'' \\<and> P i)", "have \"n<?l\" and \"?l<n''\""], ["proof (prove)\nusing this:\n  n < n'\n  n' < (LEAST i. n' < i \\<and> i < n'' \\<and> P i)\n  (LEAST i. n' < i \\<and> i < n'' \\<and> P i) < n''\n  P (LEAST i. n' < i \\<and> i < n'' \\<and> P i)\n\ngoal (1 subgoal):\n 1. n < (LEAST i. n' < i \\<and> i < n'' \\<and> P i) &&&\n    (LEAST i. n' < i \\<and> i < n'' \\<and> P i) < n''", "by auto"], ["proof (state)\nthis:\n  n < (LEAST i. n' < i \\<and> i < n'' \\<and> P i)\n  (LEAST i. n' < i \\<and> i < n'' \\<and> P i) < n''\n\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>1 \\<le> na; na < c;\n        na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i} \\<Longrightarrow>\n        \\<exists>n'<n''.\n           n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = na;\n        Suc na < card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>n'<n''.\n                            n < n' \\<and>\n                            card {i. n < i \\<and> i \\<le> n' \\<and> P i} =\n                            Suc na", "ultimately"], ["proof (chain)\npicking this:\n  card\n   {i. n < i \\<and>\n       i \\<le> (LEAST i. n' < i \\<and> i < n'' \\<and> P i) \\<and> P i} =\n  Suc c\n  n < (LEAST i. n' < i \\<and> i < n'' \\<and> P i)\n  (LEAST i. n' < i \\<and> i < n'' \\<and> P i) < n''", "show ?case"], ["proof (prove)\nusing this:\n  card\n   {i. n < i \\<and>\n       i \\<le> (LEAST i. n' < i \\<and> i < n'' \\<and> P i) \\<and> P i} =\n  Suc c\n  n < (LEAST i. n' < i \\<and> i < n'' \\<and> P i)\n  (LEAST i. n' < i \\<and> i < n'' \\<and> P i) < n''\n\ngoal (1 subgoal):\n 1. \\<exists>n'<n''.\n       n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = Suc c", "by auto"], ["proof (state)\nthis:\n  \\<exists>n'<n''.\n     n < n' \\<and> card {i. n < i \\<and> i \\<le> n' \\<and> P i} = Suc c\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ccard_freq:\n  assumes \"(n'::nat)\\<ge>n\"\n    and \"ccard n n' P > ccard n n' Q + cnf\"\n  shows \"\\<exists>n' n''. ccard n' n'' P > cnf \\<and> ccard n' n'' Q \\<le> cnf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n' n''.\n       cnf < card {i. n' < i \\<and> i \\<le> n'' \\<and> P i} \\<and>\n       card {i. n' < i \\<and> i \\<le> n'' \\<and> Q i} \\<le> cnf", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>n' n''.\n       cnf < card {i. n' < i \\<and> i \\<le> n'' \\<and> P i} \\<and>\n       card {i. n' < i \\<and> i \\<le> n'' \\<and> Q i} \\<le> cnf\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>n' n''.\n       cnf < card {i. n' < i \\<and> i \\<le> n'' \\<and> P i} \\<and>\n       card {i. n' < i \\<and> i \\<le> n'' \\<and> Q i} \\<le> cnf", "assume \"cnf = 0\""], ["proof (state)\nthis:\n  cnf = 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>n' n''.\n       cnf < card {i. n' < i \\<and> i \\<le> n'' \\<and> P i} \\<and>\n       card {i. n' < i \\<and> i \\<le> n'' \\<and> Q i} \\<le> cnf\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>n' n''.\n       cnf < card {i. n' < i \\<and> i \\<le> n'' \\<and> P i} \\<and>\n       card {i. n' < i \\<and> i \\<le> n'' \\<and> Q i} \\<le> cnf", "with assms(2)"], ["proof (chain)\npicking this:\n  card {i. n < i \\<and> i \\<le> n' \\<and> Q i} + cnf\n  < card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n  cnf = 0", "have \"ccard n n' P > ccard n n' Q\""], ["proof (prove)\nusing this:\n  card {i. n < i \\<and> i \\<le> n' \\<and> Q i} + cnf\n  < card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n  cnf = 0\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> Q i}\n    < card {i. n < i \\<and> i \\<le> n' \\<and> P i}", "by simp"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> n' \\<and> Q i}\n  < card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>n' n''.\n       cnf < card {i. n' < i \\<and> i \\<le> n'' \\<and> P i} \\<and>\n       card {i. n' < i \\<and> i \\<le> n'' \\<and> Q i} \\<le> cnf\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>n' n''.\n       cnf < card {i. n' < i \\<and> i \\<le> n'' \\<and> P i} \\<and>\n       card {i. n' < i \\<and> i \\<le> n'' \\<and> Q i} \\<le> cnf", "hence \"card {i. n < i \\<and> i \\<le> n' \\<and> P i}>card {i. n < i \\<and> i \\<le> n' \\<and> Q i}\" (is \"card ?LHS>card ?RHS\")"], ["proof (prove)\nusing this:\n  card {i. n < i \\<and> i \\<le> n' \\<and> Q i}\n  < card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> Q i}\n    < card {i. n < i \\<and> i \\<le> n' \\<and> P i}", "by simp"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> n' \\<and> Q i}\n  < card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>n' n''.\n       cnf < card {i. n' < i \\<and> i \\<le> n'' \\<and> P i} \\<and>\n       card {i. n' < i \\<and> i \\<le> n'' \\<and> Q i} \\<le> cnf\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>n' n''.\n       cnf < card {i. n' < i \\<and> i \\<le> n'' \\<and> P i} \\<and>\n       card {i. n' < i \\<and> i \\<le> n'' \\<and> Q i} \\<le> cnf", "then"], ["proof (chain)\npicking this:\n  card {i. n < i \\<and> i \\<le> n' \\<and> Q i}\n  < card {i. n < i \\<and> i \\<le> n' \\<and> P i}", "obtain i where \"i\\<in>?LHS\" and \"\\<not> i \\<in> ?RHS\" and \"i>0\""], ["proof (prove)\nusing this:\n  card {i. n < i \\<and> i \\<le> n' \\<and> Q i}\n  < card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>i \\<in> {i. n < i \\<and> i \\<le> n' \\<and> P i};\n         i \\<notin> {i. n < i \\<and> i \\<le> n' \\<and> Q i}; 0 < i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using cardEx[of ?LHS ?RHS]"], ["proof (prove)\nusing this:\n  card {i. n < i \\<and> i \\<le> n' \\<and> Q i}\n  < card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n  \\<lbrakk>finite {i. n < i \\<and> i \\<le> n' \\<and> P i};\n   finite {i. n < i \\<and> i \\<le> n' \\<and> Q i};\n   card {i. n < i \\<and> i \\<le> n' \\<and> Q i}\n   < card {i. n < i \\<and> i \\<le> n' \\<and> P i}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x\\<in>{i. n < i \\<and> i \\<le> n' \\<and> P i}.\n                       x \\<notin> {i. n < i \\<and> i \\<le> n' \\<and> Q i}\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>i \\<in> {i. n < i \\<and> i \\<le> n' \\<and> P i};\n         i \\<notin> {i. n < i \\<and> i \\<le> n' \\<and> Q i}; 0 < i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  i \\<in> {i. n < i \\<and> i \\<le> n' \\<and> P i}\n  i \\<notin> {i. n < i \\<and> i \\<le> n' \\<and> Q i}\n  0 < i\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>n' n''.\n       cnf < card {i. n' < i \\<and> i \\<le> n'' \\<and> P i} \\<and>\n       card {i. n' < i \\<and> i \\<le> n'' \\<and> Q i} \\<le> cnf\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>n' n''.\n       cnf < card {i. n' < i \\<and> i \\<le> n'' \\<and> P i} \\<and>\n       card {i. n' < i \\<and> i \\<le> n'' \\<and> Q i} \\<le> cnf", "hence \"P i\" and \"\\<not> Q i\""], ["proof (prove)\nusing this:\n  i \\<in> {i. n < i \\<and> i \\<le> n' \\<and> P i}\n  i \\<notin> {i. n < i \\<and> i \\<le> n' \\<and> Q i}\n  0 < i\n\ngoal (1 subgoal):\n 1. P i &&& \\<not> Q i", "by auto"], ["proof (state)\nthis:\n  P i\n  \\<not> Q i\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>n' n''.\n       cnf < card {i. n' < i \\<and> i \\<le> n'' \\<and> P i} \\<and>\n       card {i. n' < i \\<and> i \\<le> n'' \\<and> Q i} \\<le> cnf\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>n' n''.\n       cnf < card {i. n' < i \\<and> i \\<le> n'' \\<and> P i} \\<and>\n       card {i. n' < i \\<and> i \\<le> n'' \\<and> Q i} \\<le> cnf", "with \\<open>i>0\\<close>"], ["proof (chain)\npicking this:\n  0 < i\n  P i\n  \\<not> Q i", "obtain n'' where \"P (Suc n'')\" and \"\\<not>Q (Suc n'')\""], ["proof (prove)\nusing this:\n  0 < i\n  P i\n  \\<not> Q i\n\ngoal (1 subgoal):\n 1. (\\<And>n''.\n        \\<lbrakk>P (Suc n''); \\<not> Q (Suc n'')\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using gr0_implies_Suc"], ["proof (prove)\nusing this:\n  0 < i\n  P i\n  \\<not> Q i\n  0 < ?n \\<Longrightarrow> \\<exists>m. ?n = Suc m\n\ngoal (1 subgoal):\n 1. (\\<And>n''.\n        \\<lbrakk>P (Suc n''); \\<not> Q (Suc n'')\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  P (Suc n'')\n  \\<not> Q (Suc n'')\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>n' n''.\n       cnf < card {i. n' < i \\<and> i \\<le> n'' \\<and> P i} \\<and>\n       card {i. n' < i \\<and> i \\<le> n'' \\<and> Q i} \\<le> cnf\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>n' n''.\n       cnf < card {i. n' < i \\<and> i \\<le> n'' \\<and> P i} \\<and>\n       card {i. n' < i \\<and> i \\<le> n'' \\<and> Q i} \\<le> cnf", "hence \"ccard n'' (Suc n'') P = 1\""], ["proof (prove)\nusing this:\n  P (Suc n'')\n  \\<not> Q (Suc n'')\n\ngoal (1 subgoal):\n 1. card {i. n'' < i \\<and> i \\<le> Suc n'' \\<and> P i} = 1", "using ccard_inc"], ["proof (prove)\nusing this:\n  P (Suc n'')\n  \\<not> Q (Suc n'')\n  \\<lbrakk>?p (Suc ?n'); ?n \\<le> ?n'\\<rbrakk>\n  \\<Longrightarrow> card {i. ?n < i \\<and> i \\<le> Suc ?n' \\<and> ?p i} =\n                    Suc (card {i. ?n < i \\<and> i \\<le> ?n' \\<and> ?p i})\n\ngoal (1 subgoal):\n 1. card {i. n'' < i \\<and> i \\<le> Suc n'' \\<and> P i} = 1", "by auto"], ["proof (state)\nthis:\n  card {i. n'' < i \\<and> i \\<le> Suc n'' \\<and> P i} = 1\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>n' n''.\n       cnf < card {i. n' < i \\<and> i \\<le> n'' \\<and> P i} \\<and>\n       card {i. n' < i \\<and> i \\<le> n'' \\<and> Q i} \\<le> cnf\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>n' n''.\n       cnf < card {i. n' < i \\<and> i \\<le> n'' \\<and> P i} \\<and>\n       card {i. n' < i \\<and> i \\<le> n'' \\<and> Q i} \\<le> cnf", "with \\<open>cnf = 0\\<close>"], ["proof (chain)\npicking this:\n  cnf = 0\n  card {i. n'' < i \\<and> i \\<le> Suc n'' \\<and> P i} = 1", "have \"ccard n'' (Suc n'') P > cnf\""], ["proof (prove)\nusing this:\n  cnf = 0\n  card {i. n'' < i \\<and> i \\<le> Suc n'' \\<and> P i} = 1\n\ngoal (1 subgoal):\n 1. cnf < card {i. n'' < i \\<and> i \\<le> Suc n'' \\<and> P i}", "by simp"], ["proof (state)\nthis:\n  cnf < card {i. n'' < i \\<and> i \\<le> Suc n'' \\<and> P i}\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>n' n''.\n       cnf < card {i. n' < i \\<and> i \\<le> n'' \\<and> P i} \\<and>\n       card {i. n' < i \\<and> i \\<le> n'' \\<and> Q i} \\<le> cnf\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>n' n''.\n       cnf < card {i. n' < i \\<and> i \\<le> n'' \\<and> P i} \\<and>\n       card {i. n' < i \\<and> i \\<le> n'' \\<and> Q i} \\<le> cnf", "moreover"], ["proof (state)\nthis:\n  cnf < card {i. n'' < i \\<and> i \\<le> Suc n'' \\<and> P i}\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>n' n''.\n       cnf < card {i. n' < i \\<and> i \\<le> n'' \\<and> P i} \\<and>\n       card {i. n' < i \\<and> i \\<le> n'' \\<and> Q i} \\<le> cnf\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>n' n''.\n       cnf < card {i. n' < i \\<and> i \\<le> n'' \\<and> P i} \\<and>\n       card {i. n' < i \\<and> i \\<le> n'' \\<and> Q i} \\<le> cnf", "from \\<open>\\<not>Q (Suc n'')\\<close>"], ["proof (chain)\npicking this:\n  \\<not> Q (Suc n'')", "have \"ccard n'' (Suc n'') Q = 0\""], ["proof (prove)\nusing this:\n  \\<not> Q (Suc n'')\n\ngoal (1 subgoal):\n 1. card {i. n'' < i \\<and> i \\<le> Suc n'' \\<and> Q i} = 0", "using ccard_same[of Q n'' n'']"], ["proof (prove)\nusing this:\n  \\<not> Q (Suc n'')\n  \\<not> Q (Suc n'') \\<Longrightarrow>\n  card {i. n'' < i \\<and> i \\<le> n'' \\<and> Q i} =\n  card {i. n'' < i \\<and> i \\<le> Suc n'' \\<and> Q i}\n\ngoal (1 subgoal):\n 1. card {i. n'' < i \\<and> i \\<le> Suc n'' \\<and> Q i} = 0", "by auto"], ["proof (state)\nthis:\n  card {i. n'' < i \\<and> i \\<le> Suc n'' \\<and> Q i} = 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>n' n''.\n       cnf < card {i. n' < i \\<and> i \\<le> n'' \\<and> P i} \\<and>\n       card {i. n' < i \\<and> i \\<le> n'' \\<and> Q i} \\<le> cnf\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>n' n''.\n       cnf < card {i. n' < i \\<and> i \\<le> n'' \\<and> P i} \\<and>\n       card {i. n' < i \\<and> i \\<le> n'' \\<and> Q i} \\<le> cnf", "with \\<open>cnf = 0\\<close>"], ["proof (chain)\npicking this:\n  cnf = 0\n  card {i. n'' < i \\<and> i \\<le> Suc n'' \\<and> Q i} = 0", "have \"ccard n'' (Suc n'') Q \\<le> cnf\""], ["proof (prove)\nusing this:\n  cnf = 0\n  card {i. n'' < i \\<and> i \\<le> Suc n'' \\<and> Q i} = 0\n\ngoal (1 subgoal):\n 1. card {i. n'' < i \\<and> i \\<le> Suc n'' \\<and> Q i} \\<le> cnf", "by simp"], ["proof (state)\nthis:\n  card {i. n'' < i \\<and> i \\<le> Suc n'' \\<and> Q i} \\<le> cnf\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>n' n''.\n       cnf < card {i. n' < i \\<and> i \\<le> n'' \\<and> P i} \\<and>\n       card {i. n' < i \\<and> i \\<le> n'' \\<and> Q i} \\<le> cnf\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>n' n''.\n       cnf < card {i. n' < i \\<and> i \\<le> n'' \\<and> P i} \\<and>\n       card {i. n' < i \\<and> i \\<le> n'' \\<and> Q i} \\<le> cnf", "ultimately"], ["proof (chain)\npicking this:\n  cnf < card {i. n'' < i \\<and> i \\<le> Suc n'' \\<and> P i}\n  card {i. n'' < i \\<and> i \\<le> Suc n'' \\<and> Q i} \\<le> cnf", "show ?thesis"], ["proof (prove)\nusing this:\n  cnf < card {i. n'' < i \\<and> i \\<le> Suc n'' \\<and> P i}\n  card {i. n'' < i \\<and> i \\<le> Suc n'' \\<and> Q i} \\<le> cnf\n\ngoal (1 subgoal):\n 1. \\<exists>n' n''.\n       cnf < card {i. n' < i \\<and> i \\<le> n'' \\<and> P i} \\<and>\n       card {i. n' < i \\<and> i \\<le> n'' \\<and> Q i} \\<le> cnf", "by auto"], ["proof (state)\nthis:\n  \\<exists>n' n''.\n     cnf < card {i. n' < i \\<and> i \\<le> n'' \\<and> P i} \\<and>\n     card {i. n' < i \\<and> i \\<le> n'' \\<and> Q i} \\<le> cnf\n\ngoal (1 subgoal):\n 1. cnf \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>n' n''.\n       cnf < card {i. n' < i \\<and> i \\<le> n'' \\<and> P i} \\<and>\n       card {i. n' < i \\<and> i \\<le> n'' \\<and> Q i} \\<le> cnf", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. cnf \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>n' n''.\n       cnf < card {i. n' < i \\<and> i \\<le> n'' \\<and> P i} \\<and>\n       card {i. n' < i \\<and> i \\<le> n'' \\<and> Q i} \\<le> cnf", "assume \"\\<not> cnf = 0\""], ["proof (state)\nthis:\n  cnf \\<noteq> 0\n\ngoal (1 subgoal):\n 1. cnf \\<noteq> 0 \\<Longrightarrow>\n    \\<exists>n' n''.\n       cnf < card {i. n' < i \\<and> i \\<le> n'' \\<and> P i} \\<and>\n       card {i. n' < i \\<and> i \\<le> n'' \\<and> Q i} \\<le> cnf", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n' n''.\n       cnf < card {i. n' < i \\<and> i \\<le> n'' \\<and> P i} \\<and>\n       card {i. n' < i \\<and> i \\<le> n'' \\<and> Q i} \\<le> cnf", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<nexists>n' n''.\n       cnf < card {i. n' < i \\<and> i \\<le> n'' \\<and> P i} \\<and>\n       card {i. n' < i \\<and> i \\<le> n'' \\<and> Q i}\n       \\<le> cnf \\<Longrightarrow>\n    False", "assume \"\\<not> (\\<exists>n' n''. ccard n' n'' P > cnf \\<and> ccard n' n'' Q \\<le> cnf)\""], ["proof (state)\nthis:\n  \\<nexists>n' n''.\n     cnf < card {i. n' < i \\<and> i \\<le> n'' \\<and> P i} \\<and>\n     card {i. n' < i \\<and> i \\<le> n'' \\<and> Q i} \\<le> cnf\n\ngoal (1 subgoal):\n 1. \\<nexists>n' n''.\n       cnf < card {i. n' < i \\<and> i \\<le> n'' \\<and> P i} \\<and>\n       card {i. n' < i \\<and> i \\<le> n'' \\<and> Q i}\n       \\<le> cnf \\<Longrightarrow>\n    False", "hence hyp: \"\\<forall>n' n''. ccard n' n'' Q \\<le> cnf \\<longrightarrow> ccard n' n'' P \\<le> cnf\""], ["proof (prove)\nusing this:\n  \\<nexists>n' n''.\n     cnf < card {i. n' < i \\<and> i \\<le> n'' \\<and> P i} \\<and>\n     card {i. n' < i \\<and> i \\<le> n'' \\<and> Q i} \\<le> cnf\n\ngoal (1 subgoal):\n 1. \\<forall>n' n''.\n       card {i. n' < i \\<and> i \\<le> n'' \\<and> Q i}\n       \\<le> cnf \\<longrightarrow>\n       card {i. n' < i \\<and> i \\<le> n'' \\<and> P i} \\<le> cnf", "using leI less_imp_le_nat"], ["proof (prove)\nusing this:\n  \\<nexists>n' n''.\n     cnf < card {i. n' < i \\<and> i \\<le> n'' \\<and> P i} \\<and>\n     card {i. n' < i \\<and> i \\<le> n'' \\<and> Q i} \\<le> cnf\n  \\<not> ?x < ?y \\<Longrightarrow> ?y \\<le> ?x\n  ?m < ?n \\<Longrightarrow> ?m \\<le> ?n\n\ngoal (1 subgoal):\n 1. \\<forall>n' n''.\n       card {i. n' < i \\<and> i \\<le> n'' \\<and> Q i}\n       \\<le> cnf \\<longrightarrow>\n       card {i. n' < i \\<and> i \\<le> n'' \\<and> P i} \\<le> cnf", "by blast"], ["proof (state)\nthis:\n  \\<forall>n' n''.\n     card {i. n' < i \\<and> i \\<le> n'' \\<and> Q i}\n     \\<le> cnf \\<longrightarrow>\n     card {i. n' < i \\<and> i \\<le> n'' \\<and> P i} \\<le> cnf\n\ngoal (1 subgoal):\n 1. \\<nexists>n' n''.\n       cnf < card {i. n' < i \\<and> i \\<le> n'' \\<and> P i} \\<and>\n       card {i. n' < i \\<and> i \\<le> n'' \\<and> Q i}\n       \\<le> cnf \\<Longrightarrow>\n    False", "show False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "assume \"ccard n n' Q \\<le> cnf\""], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> n' \\<and> Q i} \\<le> cnf\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "with hyp"], ["proof (chain)\npicking this:\n  \\<forall>n' n''.\n     card {i. n' < i \\<and> i \\<le> n'' \\<and> Q i}\n     \\<le> cnf \\<longrightarrow>\n     card {i. n' < i \\<and> i \\<le> n'' \\<and> P i} \\<le> cnf\n  card {i. n < i \\<and> i \\<le> n' \\<and> Q i} \\<le> cnf", "have \"ccard n n' P \\<le> cnf\""], ["proof (prove)\nusing this:\n  \\<forall>n' n''.\n     card {i. n' < i \\<and> i \\<le> n'' \\<and> Q i}\n     \\<le> cnf \\<longrightarrow>\n     card {i. n' < i \\<and> i \\<le> n'' \\<and> P i} \\<le> cnf\n  card {i. n < i \\<and> i \\<le> n' \\<and> Q i} \\<le> cnf\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> P i} \\<le> cnf", "by simp"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> n' \\<and> P i} \\<le> cnf\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "with assms"], ["proof (chain)\npicking this:\n  n \\<le> n'\n  card {i. n < i \\<and> i \\<le> n' \\<and> Q i} + cnf\n  < card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n  card {i. n < i \\<and> i \\<le> n' \\<and> P i} \\<le> cnf", "show False"], ["proof (prove)\nusing this:\n  n \\<le> n'\n  card {i. n < i \\<and> i \\<le> n' \\<and> Q i} + cnf\n  < card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n  card {i. n < i \\<and> i \\<le> n' \\<and> P i} \\<le> cnf\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}\n           \\<le> cnf \\<Longrightarrow>\n    False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}\n           \\<le> cnf \\<Longrightarrow>\n    False", "let ?gcond=\"\\<lambda>n''. n''\\<ge>n \\<and> n''\\<le>n' \\<and> (\\<exists>x\\<ge>1. ccard n n'' Q = x * cnf)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}\n           \\<le> cnf \\<Longrightarrow>\n    False", "let ?g= \"GREATEST n''. ?gcond n''\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}\n           \\<le> cnf \\<Longrightarrow>\n    False", "assume \"\\<not> ccard n n' Q \\<le> cnf\""], ["proof (state)\nthis:\n  \\<not> card {i. n < i \\<and> i \\<le> n' \\<and> Q i} \\<le> cnf\n\ngoal (1 subgoal):\n 1. \\<not> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}\n           \\<le> cnf \\<Longrightarrow>\n    False", "hence \"ccard n n' Q > cnf\""], ["proof (prove)\nusing this:\n  \\<not> card {i. n < i \\<and> i \\<le> n' \\<and> Q i} \\<le> cnf\n\ngoal (1 subgoal):\n 1. cnf < card {i. n < i \\<and> i \\<le> n' \\<and> Q i}", "by simp"], ["proof (state)\nthis:\n  cnf < card {i. n < i \\<and> i \\<le> n' \\<and> Q i}\n\ngoal (1 subgoal):\n 1. \\<not> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}\n           \\<le> cnf \\<Longrightarrow>\n    False", "hence \"\\<exists>n''. ?gcond n''\""], ["proof (prove)\nusing this:\n  cnf < card {i. n < i \\<and> i \\<le> n' \\<and> Q i}\n\ngoal (1 subgoal):\n 1. \\<exists>n''\\<ge>n.\n       n'' \\<le> n' \\<and>\n       (\\<exists>x\\<ge>1.\n           card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. cnf < card {i. n < i \\<and> i \\<le> n' \\<and> Q i} \\<Longrightarrow>\n    \\<exists>n''\\<ge>n.\n       n'' \\<le> n' \\<and>\n       (\\<exists>x\\<ge>1.\n           card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf)", "from \\<open>ccard n n' Q > cnf\\<close> \\<open>\\<not>cnf=0\\<close>"], ["proof (chain)\npicking this:\n  cnf < card {i. n < i \\<and> i \\<le> n' \\<and> Q i}\n  cnf \\<noteq> 0", "obtain n'' where \"n''>n\" and \"n''\\<le>n'\" and \"ccard n n'' Q = cnf\""], ["proof (prove)\nusing this:\n  cnf < card {i. n < i \\<and> i \\<le> n' \\<and> Q i}\n  cnf \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>n''.\n        \\<lbrakk>n < n''; n'' \\<le> n';\n         card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = cnf\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using ccard_ex[of cnf n n' Q ]"], ["proof (prove)\nusing this:\n  cnf < card {i. n < i \\<and> i \\<le> n' \\<and> Q i}\n  cnf \\<noteq> 0\n  \\<lbrakk>1 \\<le> cnf;\n   cnf < card {i. n < i \\<and> i \\<le> n' \\<and> Q i}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>n'a<n'.\n                       n < n'a \\<and>\n                       card {i. n < i \\<and> i \\<le> n'a \\<and> Q i} = cnf\n\ngoal (1 subgoal):\n 1. (\\<And>n''.\n        \\<lbrakk>n < n''; n'' \\<le> n';\n         card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = cnf\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  n < n''\n  n'' \\<le> n'\n  card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = cnf\n\ngoal (1 subgoal):\n 1. cnf < card {i. n < i \\<and> i \\<le> n' \\<and> Q i} \\<Longrightarrow>\n    \\<exists>n''\\<ge>n.\n       n'' \\<le> n' \\<and>\n       (\\<exists>x\\<ge>1.\n           card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf)", "moreover"], ["proof (state)\nthis:\n  n < n''\n  n'' \\<le> n'\n  card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = cnf\n\ngoal (1 subgoal):\n 1. cnf < card {i. n < i \\<and> i \\<le> n' \\<and> Q i} \\<Longrightarrow>\n    \\<exists>n''\\<ge>n.\n       n'' \\<le> n' \\<and>\n       (\\<exists>x\\<ge>1.\n           card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf)", "from \\<open>ccard n n'' Q = cnf\\<close>"], ["proof (chain)\npicking this:\n  card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = cnf", "have \"\\<exists>x\\<ge>1. ccard n n'' Q = x * cnf\""], ["proof (prove)\nusing this:\n  card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = cnf\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<ge>1.\n       card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf", "by auto"], ["proof (state)\nthis:\n  \\<exists>x\\<ge>1. card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf\n\ngoal (1 subgoal):\n 1. cnf < card {i. n < i \\<and> i \\<le> n' \\<and> Q i} \\<Longrightarrow>\n    \\<exists>n''\\<ge>n.\n       n'' \\<le> n' \\<and>\n       (\\<exists>x\\<ge>1.\n           card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf)", "ultimately"], ["proof (chain)\npicking this:\n  n < n''\n  n'' \\<le> n'\n  card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = cnf\n  \\<exists>x\\<ge>1. card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf", "show ?thesis"], ["proof (prove)\nusing this:\n  n < n''\n  n'' \\<le> n'\n  card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = cnf\n  \\<exists>x\\<ge>1. card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf\n\ngoal (1 subgoal):\n 1. \\<exists>n''\\<ge>n.\n       n'' \\<le> n' \\<and>\n       (\\<exists>x\\<ge>1.\n           card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf)", "using less_imp_le_nat"], ["proof (prove)\nusing this:\n  n < n''\n  n'' \\<le> n'\n  card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = cnf\n  \\<exists>x\\<ge>1. card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf\n  ?m < ?n \\<Longrightarrow> ?m \\<le> ?n\n\ngoal (1 subgoal):\n 1. \\<exists>n''\\<ge>n.\n       n'' \\<le> n' \\<and>\n       (\\<exists>x\\<ge>1.\n           card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf)", "by blast"], ["proof (state)\nthis:\n  \\<exists>n''\\<ge>n.\n     n'' \\<le> n' \\<and>\n     (\\<exists>x\\<ge>1.\n         card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>n''\\<ge>n.\n     n'' \\<le> n' \\<and>\n     (\\<exists>x\\<ge>1.\n         card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf)\n\ngoal (1 subgoal):\n 1. \\<not> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}\n           \\<le> cnf \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  \\<exists>n''\\<ge>n.\n     n'' \\<le> n' \\<and>\n     (\\<exists>x\\<ge>1.\n         card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf)\n\ngoal (1 subgoal):\n 1. \\<not> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}\n           \\<le> cnf \\<Longrightarrow>\n    False", "have \"\\<forall>n''>n'. \\<not> ?gcond n''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>n''>n'.\n       \\<not> (n \\<le> n'' \\<and>\n               n'' \\<le> n' \\<and>\n               (\\<exists>x\\<ge>1.\n                   card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))", "by simp"], ["proof (state)\nthis:\n  \\<forall>n''>n'.\n     \\<not> (n \\<le> n'' \\<and>\n             n'' \\<le> n' \\<and>\n             (\\<exists>x\\<ge>1.\n                 card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n\ngoal (1 subgoal):\n 1. \\<not> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}\n           \\<le> cnf \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  \\<exists>n''\\<ge>n.\n     n'' \\<le> n' \\<and>\n     (\\<exists>x\\<ge>1.\n         card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf)\n  \\<forall>n''>n'.\n     \\<not> (n \\<le> n'' \\<and>\n             n'' \\<le> n' \\<and>\n             (\\<exists>x\\<ge>1.\n                 card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))", "have gex: \"\\<exists>n''. ?gcond n'' \\<and> (\\<forall>n'''. ?gcond n''' \\<longrightarrow> n'''\\<le>n'')\""], ["proof (prove)\nusing this:\n  \\<exists>n''\\<ge>n.\n     n'' \\<le> n' \\<and>\n     (\\<exists>x\\<ge>1.\n         card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf)\n  \\<forall>n''>n'.\n     \\<not> (n \\<le> n'' \\<and>\n             n'' \\<le> n' \\<and>\n             (\\<exists>x\\<ge>1.\n                 card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n\ngoal (1 subgoal):\n 1. \\<exists>n''.\n       (n \\<le> n'' \\<and>\n        n'' \\<le> n' \\<and>\n        (\\<exists>x\\<ge>1.\n            card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf)) \\<and>\n       (\\<forall>n'''.\n           n \\<le> n''' \\<and>\n           n''' \\<le> n' \\<and>\n           (\\<exists>x\\<ge>1.\n               card {i. n < i \\<and> i \\<le> n''' \\<and> Q i} =\n               x * cnf) \\<longrightarrow>\n           n''' \\<le> n'')", "using boundedGreatest[of ?gcond _ n']"], ["proof (prove)\nusing this:\n  \\<exists>n''\\<ge>n.\n     n'' \\<le> n' \\<and>\n     (\\<exists>x\\<ge>1.\n         card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf)\n  \\<forall>n''>n'.\n     \\<not> (n \\<le> n'' \\<and>\n             n'' \\<le> n' \\<and>\n             (\\<exists>x\\<ge>1.\n                 card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n  \\<lbrakk>n \\<le> ?i \\<and>\n           ?i \\<le> n' \\<and>\n           (\\<exists>x\\<ge>1.\n               card {i. n < i \\<and> i \\<le> ?i \\<and> Q i} = x * cnf);\n   \\<forall>n'a>n'.\n      \\<not> (n \\<le> n'a \\<and>\n              n'a \\<le> n' \\<and>\n              (\\<exists>x\\<ge>1.\n                  card {i. n < i \\<and> i \\<le> n'a \\<and> Q i} =\n                  x * cnf))\\<rbrakk>\n  \\<Longrightarrow> \\<exists>i'\\<le>n'.\n                       (n \\<le> i' \\<and>\n                        i' \\<le> n' \\<and>\n                        (\\<exists>x\\<ge>1.\n                            card {i. n < i \\<and> i \\<le> i' \\<and> Q i} =\n                            x * cnf)) \\<and>\n                       (\\<forall>n'a.\n                           n \\<le> n'a \\<and>\n                           n'a \\<le> n' \\<and>\n                           (\\<exists>x\\<ge>1.\n                               card\n                                {i. n < i \\<and> i \\<le> n'a \\<and> Q i} =\n                               x * cnf) \\<longrightarrow>\n                           n'a \\<le> i')\n\ngoal (1 subgoal):\n 1. \\<exists>n''.\n       (n \\<le> n'' \\<and>\n        n'' \\<le> n' \\<and>\n        (\\<exists>x\\<ge>1.\n            card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf)) \\<and>\n       (\\<forall>n'''.\n           n \\<le> n''' \\<and>\n           n''' \\<le> n' \\<and>\n           (\\<exists>x\\<ge>1.\n               card {i. n < i \\<and> i \\<le> n''' \\<and> Q i} =\n               x * cnf) \\<longrightarrow>\n           n''' \\<le> n'')", "by blast"], ["proof (state)\nthis:\n  \\<exists>n''.\n     (n \\<le> n'' \\<and>\n      n'' \\<le> n' \\<and>\n      (\\<exists>x\\<ge>1.\n          card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf)) \\<and>\n     (\\<forall>n'''.\n         n \\<le> n''' \\<and>\n         n''' \\<le> n' \\<and>\n         (\\<exists>x\\<ge>1.\n             card {i. n < i \\<and> i \\<le> n''' \\<and> Q i} =\n             x * cnf) \\<longrightarrow>\n         n''' \\<le> n'')\n\ngoal (1 subgoal):\n 1. \\<not> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}\n           \\<le> cnf \\<Longrightarrow>\n    False", "hence \"\\<exists>x\\<ge>1. ccard n ?g Q = x * cnf\" and \"?g \\<ge> n\""], ["proof (prove)\nusing this:\n  \\<exists>n''.\n     (n \\<le> n'' \\<and>\n      n'' \\<le> n' \\<and>\n      (\\<exists>x\\<ge>1.\n          card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf)) \\<and>\n     (\\<forall>n'''.\n         n \\<le> n''' \\<and>\n         n''' \\<le> n' \\<and>\n         (\\<exists>x\\<ge>1.\n             card {i. n < i \\<and> i \\<le> n''' \\<and> Q i} =\n             x * cnf) \\<longrightarrow>\n         n''' \\<le> n'')\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<ge>1.\n       card\n        {i. n < i \\<and>\n            i \\<le> (GREATEST n''.\n                        n \\<le> n'' \\<and>\n                        n'' \\<le> n' \\<and>\n                        (\\<exists>x\\<ge>1.\n                            card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                            x * cnf)) \\<and>\n            Q i} =\n       x * cnf &&&\n    n \\<le> (GREATEST n''.\n                n \\<le> n'' \\<and>\n                n'' \\<le> n' \\<and>\n                (\\<exists>x\\<ge>1.\n                    card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                    x * cnf))", "using GreatestI_ex_nat[of ?gcond]"], ["proof (prove)\nusing this:\n  \\<exists>n''.\n     (n \\<le> n'' \\<and>\n      n'' \\<le> n' \\<and>\n      (\\<exists>x\\<ge>1.\n          card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf)) \\<and>\n     (\\<forall>n'''.\n         n \\<le> n''' \\<and>\n         n''' \\<le> n' \\<and>\n         (\\<exists>x\\<ge>1.\n             card {i. n < i \\<and> i \\<le> n''' \\<and> Q i} =\n             x * cnf) \\<longrightarrow>\n         n''' \\<le> n'')\n  \\<lbrakk>\\<exists>k\\<ge>n.\n              k \\<le> n' \\<and>\n              (\\<exists>x\\<ge>1.\n                  card {i. n < i \\<and> i \\<le> k \\<and> Q i} = x * cnf);\n   \\<And>y.\n      n \\<le> y \\<and>\n      y \\<le> n' \\<and>\n      (\\<exists>x\\<ge>1.\n          card {i. n < i \\<and> i \\<le> y \\<and> Q i} =\n          x * cnf) \\<Longrightarrow>\n      y \\<le> ?b\\<rbrakk>\n  \\<Longrightarrow> n \\<le> (GREATEST n''.\n                                n \\<le> n'' \\<and>\n                                n'' \\<le> n' \\<and>\n                                (\\<exists>x\\<ge>1.\n                                    card\n                                     {i.\nn < i \\<and> i \\<le> n'' \\<and> Q i} =\n                                    x * cnf)) \\<and>\n                    (GREATEST n''.\n                        n \\<le> n'' \\<and>\n                        n'' \\<le> n' \\<and>\n                        (\\<exists>x\\<ge>1.\n                            card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                            x * cnf))\n                    \\<le> n' \\<and>\n                    (\\<exists>x\\<ge>1.\n                        card\n                         {i. n < i \\<and>\n                             i \\<le> (GREATEST n''.\n   n \\<le> n'' \\<and>\n   n'' \\<le> n' \\<and>\n   (\\<exists>x\\<ge>1.\n       card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf)) \\<and>\n                             Q i} =\n                        x * cnf)\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<ge>1.\n       card\n        {i. n < i \\<and>\n            i \\<le> (GREATEST n''.\n                        n \\<le> n'' \\<and>\n                        n'' \\<le> n' \\<and>\n                        (\\<exists>x\\<ge>1.\n                            card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                            x * cnf)) \\<and>\n            Q i} =\n       x * cnf &&&\n    n \\<le> (GREATEST n''.\n                n \\<le> n'' \\<and>\n                n'' \\<le> n' \\<and>\n                (\\<exists>x\\<ge>1.\n                    card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                    x * cnf))", "by auto"], ["proof (state)\nthis:\n  \\<exists>x\\<ge>1.\n     card\n      {i. n < i \\<and>\n          i \\<le> (GREATEST n''.\n                      n \\<le> n'' \\<and>\n                      n'' \\<le> n' \\<and>\n                      (\\<exists>x\\<ge>1.\n                          card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                          x * cnf)) \\<and>\n          Q i} =\n     x * cnf\n  n \\<le> (GREATEST n''.\n              n \\<le> n'' \\<and>\n              n'' \\<le> n' \\<and>\n              (\\<exists>x\\<ge>1.\n                  card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n\ngoal (1 subgoal):\n 1. \\<not> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}\n           \\<le> cnf \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  \\<exists>x\\<ge>1.\n     card\n      {i. n < i \\<and>\n          i \\<le> (GREATEST n''.\n                      n \\<le> n'' \\<and>\n                      n'' \\<le> n' \\<and>\n                      (\\<exists>x\\<ge>1.\n                          card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                          x * cnf)) \\<and>\n          Q i} =\n     x * cnf\n  n \\<le> (GREATEST n''.\n              n \\<le> n'' \\<and>\n              n'' \\<le> n' \\<and>\n              (\\<exists>x\\<ge>1.\n                  card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n\ngoal (1 subgoal):\n 1. \\<not> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}\n           \\<le> cnf \\<Longrightarrow>\n    False", "{"], ["proof (state)\nthis:\n  \\<exists>x\\<ge>1.\n     card\n      {i. n < i \\<and>\n          i \\<le> (GREATEST n''.\n                      n \\<le> n'' \\<and>\n                      n'' \\<le> n' \\<and>\n                      (\\<exists>x\\<ge>1.\n                          card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                          x * cnf)) \\<and>\n          Q i} =\n     x * cnf\n  n \\<le> (GREATEST n''.\n              n \\<le> n'' \\<and>\n              n'' \\<le> n' \\<and>\n              (\\<exists>x\\<ge>1.\n                  card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n\ngoal (1 subgoal):\n 1. \\<not> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}\n           \\<le> cnf \\<Longrightarrow>\n    False", "fix n''"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}\n           \\<le> cnf \\<Longrightarrow>\n    False", "have \"n''\\<ge>n \\<Longrightarrow> \\<exists>x\\<ge>1. ccard n n'' Q = x * cnf \\<Longrightarrow> ccard n n'' P \\<le> ccard n n'' Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>n \\<le> n'';\n     \\<exists>x\\<ge>1.\n        card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\n                      \\<le> card {i. n < i \\<and> i \\<le> n'' \\<and> Q i}", "proof (induction n'' rule: ge_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>n \\<le> na;\n        \\<forall>m\\<ge>n.\n           m < na \\<longrightarrow>\n           (\\<exists>x\\<ge>1.\n               card {i. n < i \\<and> i \\<le> m \\<and> Q i} =\n               x * cnf) \\<longrightarrow>\n           card {i. n < i \\<and> i \\<le> m \\<and> P i}\n           \\<le> card {i. n < i \\<and> i \\<le> m \\<and> Q i};\n        \\<exists>x\\<ge>1.\n           card {i. n < i \\<and> i \\<le> na \\<and> Q i} = x * cnf\\<rbrakk>\n       \\<Longrightarrow> card {i. n < i \\<and> i \\<le> na \\<and> P i}\n                         \\<le> card {i. n < i \\<and> i \\<le> na \\<and> Q i}", "case (step n')"], ["proof (state)\nthis:\n  n \\<le> n'\n  \\<forall>m\\<ge>n.\n     m < n' \\<longrightarrow>\n     (\\<exists>x\\<ge>1.\n         card {i. n < i \\<and> i \\<le> m \\<and> Q i} =\n         x * cnf) \\<longrightarrow>\n     card {i. n < i \\<and> i \\<le> m \\<and> P i}\n     \\<le> card {i. n < i \\<and> i \\<le> m \\<and> Q i}\n  \\<exists>x\\<ge>1. card {i. n < i \\<and> i \\<le> n' \\<and> Q i} = x * cnf\n\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>n \\<le> na;\n        \\<forall>m\\<ge>n.\n           m < na \\<longrightarrow>\n           (\\<exists>x\\<ge>1.\n               card {i. n < i \\<and> i \\<le> m \\<and> Q i} =\n               x * cnf) \\<longrightarrow>\n           card {i. n < i \\<and> i \\<le> m \\<and> P i}\n           \\<le> card {i. n < i \\<and> i \\<le> m \\<and> Q i};\n        \\<exists>x\\<ge>1.\n           card {i. n < i \\<and> i \\<le> na \\<and> Q i} = x * cnf\\<rbrakk>\n       \\<Longrightarrow> card {i. n < i \\<and> i \\<le> na \\<and> P i}\n                         \\<le> card {i. n < i \\<and> i \\<le> na \\<and> Q i}", "from step.prems"], ["proof (chain)\npicking this:\n  \\<exists>x\\<ge>1. card {i. n < i \\<and> i \\<le> n' \\<and> Q i} = x * cnf", "obtain x where \"x\\<ge>1\" and cas: \"ccard n n' Q = x * cnf\""], ["proof (prove)\nusing this:\n  \\<exists>x\\<ge>1. card {i. n < i \\<and> i \\<le> n' \\<and> Q i} = x * cnf\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>1 \\<le> x;\n         card {i. n < i \\<and> i \\<le> n' \\<and> Q i} = x * cnf\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  1 \\<le> x\n  card {i. n < i \\<and> i \\<le> n' \\<and> Q i} = x * cnf\n\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>n \\<le> na;\n        \\<forall>m\\<ge>n.\n           m < na \\<longrightarrow>\n           (\\<exists>x\\<ge>1.\n               card {i. n < i \\<and> i \\<le> m \\<and> Q i} =\n               x * cnf) \\<longrightarrow>\n           card {i. n < i \\<and> i \\<le> m \\<and> P i}\n           \\<le> card {i. n < i \\<and> i \\<le> m \\<and> Q i};\n        \\<exists>x\\<ge>1.\n           card {i. n < i \\<and> i \\<le> na \\<and> Q i} = x * cnf\\<rbrakk>\n       \\<Longrightarrow> card {i. n < i \\<and> i \\<le> na \\<and> P i}\n                         \\<le> card {i. n < i \\<and> i \\<le> na \\<and> Q i}", "then"], ["proof (chain)\npicking this:\n  1 \\<le> x\n  card {i. n < i \\<and> i \\<le> n' \\<and> Q i} = x * cnf", "show ?case"], ["proof (prove)\nusing this:\n  1 \\<le> x\n  card {i. n < i \\<and> i \\<le> n' \\<and> Q i} = x * cnf\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n    \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>1 \\<le> x;\n     card {i. n < i \\<and> i \\<le> n' \\<and> Q i} = x * cnf; ?P2\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n                      \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}\n 2. \\<lbrakk>1 \\<le> x;\n     card {i. n < i \\<and> i \\<le> n' \\<and> Q i} = x * cnf;\n     \\<not> ?P2\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n                      \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}", "assume \"x=1\""], ["proof (state)\nthis:\n  x = 1\n\ngoal (2 subgoals):\n 1. \\<lbrakk>1 \\<le> x;\n     card {i. n < i \\<and> i \\<le> n' \\<and> Q i} = x * cnf; ?P2\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n                      \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}\n 2. \\<lbrakk>1 \\<le> x;\n     card {i. n < i \\<and> i \\<le> n' \\<and> Q i} = x * cnf;\n     \\<not> ?P2\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n                      \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}", "with cas"], ["proof (chain)\npicking this:\n  card {i. n < i \\<and> i \\<le> n' \\<and> Q i} = x * cnf\n  x = 1", "have \"ccard n n' Q = cnf\""], ["proof (prove)\nusing this:\n  card {i. n < i \\<and> i \\<le> n' \\<and> Q i} = x * cnf\n  x = 1\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> Q i} = cnf", "by simp"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> n' \\<and> Q i} = cnf\n\ngoal (2 subgoals):\n 1. \\<lbrakk>1 \\<le> x;\n     card {i. n < i \\<and> i \\<le> n' \\<and> Q i} = x * cnf; ?P2\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n                      \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}\n 2. \\<lbrakk>1 \\<le> x;\n     card {i. n < i \\<and> i \\<le> n' \\<and> Q i} = x * cnf;\n     \\<not> ?P2\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n                      \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}", "with hyp"], ["proof (chain)\npicking this:\n  \\<forall>n' n''.\n     card {i. n' < i \\<and> i \\<le> n'' \\<and> Q i}\n     \\<le> cnf \\<longrightarrow>\n     card {i. n' < i \\<and> i \\<le> n'' \\<and> P i} \\<le> cnf\n  card {i. n < i \\<and> i \\<le> n' \\<and> Q i} = cnf", "have \"ccard n n' P \\<le> cnf\""], ["proof (prove)\nusing this:\n  \\<forall>n' n''.\n     card {i. n' < i \\<and> i \\<le> n'' \\<and> Q i}\n     \\<le> cnf \\<longrightarrow>\n     card {i. n' < i \\<and> i \\<le> n'' \\<and> P i} \\<le> cnf\n  card {i. n < i \\<and> i \\<le> n' \\<and> Q i} = cnf\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> P i} \\<le> cnf", "by simp"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> n' \\<and> P i} \\<le> cnf\n\ngoal (2 subgoals):\n 1. \\<lbrakk>1 \\<le> x;\n     card {i. n < i \\<and> i \\<le> n' \\<and> Q i} = x * cnf; ?P2\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n                      \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}\n 2. \\<lbrakk>1 \\<le> x;\n     card {i. n < i \\<and> i \\<le> n' \\<and> Q i} = x * cnf;\n     \\<not> ?P2\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n                      \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}", "with \\<open>ccard n n' Q = cnf\\<close>"], ["proof (chain)\npicking this:\n  card {i. n < i \\<and> i \\<le> n' \\<and> Q i} = cnf\n  card {i. n < i \\<and> i \\<le> n' \\<and> P i} \\<le> cnf", "show ?thesis"], ["proof (prove)\nusing this:\n  card {i. n < i \\<and> i \\<le> n' \\<and> Q i} = cnf\n  card {i. n < i \\<and> i \\<le> n' \\<and> P i} \\<le> cnf\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n    \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}", "by simp"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n  \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 \\<le> x;\n     card {i. n < i \\<and> i \\<le> n' \\<and> Q i} = x * cnf;\n     x \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n                      \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>1 \\<le> x;\n     card {i. n < i \\<and> i \\<le> n' \\<and> Q i} = x * cnf;\n     x \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n                      \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}", "assume \"\\<not>x=1\""], ["proof (state)\nthis:\n  x \\<noteq> 1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 \\<le> x;\n     card {i. n < i \\<and> i \\<le> n' \\<and> Q i} = x * cnf;\n     x \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n                      \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}", "with \\<open>x\\<ge>1\\<close>"], ["proof (chain)\npicking this:\n  1 \\<le> x\n  x \\<noteq> 1", "have \"x>1\""], ["proof (prove)\nusing this:\n  1 \\<le> x\n  x \\<noteq> 1\n\ngoal (1 subgoal):\n 1. 1 < x", "by simp"], ["proof (state)\nthis:\n  1 < x\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 \\<le> x;\n     card {i. n < i \\<and> i \\<le> n' \\<and> Q i} = x * cnf;\n     x \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n                      \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}", "hence \"x-1 \\<ge> 1\""], ["proof (prove)\nusing this:\n  1 < x\n\ngoal (1 subgoal):\n 1. 1 \\<le> x - 1", "by simp"], ["proof (state)\nthis:\n  1 \\<le> x - 1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 \\<le> x;\n     card {i. n < i \\<and> i \\<le> n' \\<and> Q i} = x * cnf;\n     x \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n                      \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}", "moreover"], ["proof (state)\nthis:\n  1 \\<le> x - 1\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 \\<le> x;\n     card {i. n < i \\<and> i \\<le> n' \\<and> Q i} = x * cnf;\n     x \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n                      \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}", "from \\<open>cnf\\<noteq>0\\<close> \\<open>x-1 \\<ge> 1\\<close>"], ["proof (chain)\npicking this:\n  cnf \\<noteq> 0\n  1 \\<le> x - 1", "have \"(x-1) * cnf < x * cnf \\<and> (x - 1) * cnf \\<noteq> 0\""], ["proof (prove)\nusing this:\n  cnf \\<noteq> 0\n  1 \\<le> x - 1\n\ngoal (1 subgoal):\n 1. (x - 1) * cnf < x * cnf \\<and> (x - 1) * cnf \\<noteq> 0", "by auto"], ["proof (state)\nthis:\n  (x - 1) * cnf < x * cnf \\<and> (x - 1) * cnf \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 \\<le> x;\n     card {i. n < i \\<and> i \\<le> n' \\<and> Q i} = x * cnf;\n     x \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n                      \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}", "with \\<open>x-1 \\<ge> 1\\<close> \\<open>cnf\\<noteq>0\\<close>\\<open>ccard n n' Q = x * cnf\\<close>"], ["proof (chain)\npicking this:\n  1 \\<le> x - 1\n  cnf \\<noteq> 0\n  card {i. n < i \\<and> i \\<le> n' \\<and> Q i} = x * cnf\n  (x - 1) * cnf < x * cnf \\<and> (x - 1) * cnf \\<noteq> 0", "obtain n''\n            where \"n''>n\" and \"n''<n'\" and \"ccard n n'' Q = (x-1) * cnf\""], ["proof (prove)\nusing this:\n  1 \\<le> x - 1\n  cnf \\<noteq> 0\n  card {i. n < i \\<and> i \\<le> n' \\<and> Q i} = x * cnf\n  (x - 1) * cnf < x * cnf \\<and> (x - 1) * cnf \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>n''.\n        \\<lbrakk>n < n''; n'' < n';\n         card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n         (x - 1) * cnf\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using ccard_ex[of \"(x-1)*cnf\" n n' Q ]"], ["proof (prove)\nusing this:\n  1 \\<le> x - 1\n  cnf \\<noteq> 0\n  card {i. n < i \\<and> i \\<le> n' \\<and> Q i} = x * cnf\n  (x - 1) * cnf < x * cnf \\<and> (x - 1) * cnf \\<noteq> 0\n  \\<lbrakk>1 \\<le> (x - 1) * cnf;\n   (x - 1) * cnf < card {i. n < i \\<and> i \\<le> n' \\<and> Q i}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>n'<n'.\n                       n < n' \\<and>\n                       card {i. n < i \\<and> i \\<le> n' \\<and> Q i} =\n                       (x - 1) * cnf\n\ngoal (1 subgoal):\n 1. (\\<And>n''.\n        \\<lbrakk>n < n''; n'' < n';\n         card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n         (x - 1) * cnf\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  n < n''\n  n'' < n'\n  card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = (x - 1) * cnf\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 \\<le> x;\n     card {i. n < i \\<and> i \\<le> n' \\<and> Q i} = x * cnf;\n     x \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n                      \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}", "ultimately"], ["proof (chain)\npicking this:\n  1 \\<le> x - 1\n  n < n''\n  n'' < n'\n  card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = (x - 1) * cnf", "have \"\\<exists>x\\<ge>1. ccard n n'' Q = x * cnf\" and \"n''\\<ge>n\""], ["proof (prove)\nusing this:\n  1 \\<le> x - 1\n  n < n''\n  n'' < n'\n  card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = (x - 1) * cnf\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<ge>1.\n       card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf &&&\n    n \\<le> n''", "by auto"], ["proof (state)\nthis:\n  \\<exists>x\\<ge>1. card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf\n  n \\<le> n''\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 \\<le> x;\n     card {i. n < i \\<and> i \\<le> n' \\<and> Q i} = x * cnf;\n     x \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n                      \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}", "with \\<open>n''\\<ge>n\\<close> \\<open>n''<n'\\<close>"], ["proof (chain)\npicking this:\n  n \\<le> n''\n  n'' < n'\n  \\<exists>x\\<ge>1. card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf\n  n \\<le> n''", "have \"ccard n n'' P \\<le> ccard n n'' Q\""], ["proof (prove)\nusing this:\n  n \\<le> n''\n  n'' < n'\n  \\<exists>x\\<ge>1. card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf\n  n \\<le> n''\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\n    \\<le> card {i. n < i \\<and> i \\<le> n'' \\<and> Q i}", "using step.IH"], ["proof (prove)\nusing this:\n  n \\<le> n''\n  n'' < n'\n  \\<exists>x\\<ge>1. card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf\n  n \\<le> n''\n  \\<forall>m\\<ge>n.\n     m < n' \\<longrightarrow>\n     (\\<exists>x\\<ge>1.\n         card {i. n < i \\<and> i \\<le> m \\<and> Q i} =\n         x * cnf) \\<longrightarrow>\n     card {i. n < i \\<and> i \\<le> m \\<and> P i}\n     \\<le> card {i. n < i \\<and> i \\<le> m \\<and> Q i}\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\n    \\<le> card {i. n < i \\<and> i \\<le> n'' \\<and> Q i}", "by simp"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\n  \\<le> card {i. n < i \\<and> i \\<le> n'' \\<and> Q i}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 \\<le> x;\n     card {i. n < i \\<and> i \\<le> n' \\<and> Q i} = x * cnf;\n     x \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n                      \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}", "moreover"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\n  \\<le> card {i. n < i \\<and> i \\<le> n'' \\<and> Q i}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 \\<le> x;\n     card {i. n < i \\<and> i \\<le> n' \\<and> Q i} = x * cnf;\n     x \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n                      \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}", "have \"ccard n'' n' Q = cnf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {i. n'' < i \\<and> i \\<le> n' \\<and> Q i} = cnf", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. card {i. n'' < i \\<and> i \\<le> n' \\<and> Q i} = cnf", "from \\<open>x-1 \\<ge> 1\\<close>"], ["proof (chain)\npicking this:\n  1 \\<le> x - 1", "have \"x*cnf = ((x-1) * cnf) + cnf\""], ["proof (prove)\nusing this:\n  1 \\<le> x - 1\n\ngoal (1 subgoal):\n 1. x * cnf = (x - 1) * cnf + cnf", "using semiring_normalization_rules(2)[of \"(x - 1)\" cnf]"], ["proof (prove)\nusing this:\n  1 \\<le> x - 1\n  (x - 1) * cnf + cnf = (x - 1 + 1) * cnf\n\ngoal (1 subgoal):\n 1. x * cnf = (x - 1) * cnf + cnf", "by simp"], ["proof (state)\nthis:\n  x * cnf = (x - 1) * cnf + cnf\n\ngoal (1 subgoal):\n 1. card {i. n'' < i \\<and> i \\<le> n' \\<and> Q i} = cnf", "with \\<open>ccard n n'' Q = (x-1) * cnf\\<close> \\<open>ccard n n' Q = x * cnf\\<close>"], ["proof (chain)\npicking this:\n  card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = (x - 1) * cnf\n  card {i. n < i \\<and> i \\<le> n' \\<and> Q i} = x * cnf\n  x * cnf = (x - 1) * cnf + cnf", "have \"ccard n n' Q = ccard n n'' Q + cnf\""], ["proof (prove)\nusing this:\n  card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = (x - 1) * cnf\n  card {i. n < i \\<and> i \\<le> n' \\<and> Q i} = x * cnf\n  x * cnf = (x - 1) * cnf + cnf\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> Q i} =\n    card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} + cnf", "by simp"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> n' \\<and> Q i} =\n  card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} + cnf\n\ngoal (1 subgoal):\n 1. card {i. n'' < i \\<and> i \\<le> n' \\<and> Q i} = cnf", "moreover"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> n' \\<and> Q i} =\n  card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} + cnf\n\ngoal (1 subgoal):\n 1. card {i. n'' < i \\<and> i \\<le> n' \\<and> Q i} = cnf", "from \\<open>n''\\<ge>n\\<close> \\<open>n''<n'\\<close>"], ["proof (chain)\npicking this:\n  n \\<le> n''\n  n'' < n'", "have \"ccard n n' Q = ccard n n'' Q + ccard n'' n' Q\""], ["proof (prove)\nusing this:\n  n \\<le> n''\n  n'' < n'\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> Q i} =\n    card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} +\n    card {i. n'' < i \\<and> i \\<le> n' \\<and> Q i}", "using ccard_sum[of n'' n' n]"], ["proof (prove)\nusing this:\n  n \\<le> n''\n  n'' < n'\n  \\<lbrakk>n'' \\<le> n'; n \\<le> n''\\<rbrakk>\n  \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> ?P i} =\n                    card {i. n < i \\<and> i \\<le> n'' \\<and> ?P i} +\n                    card {i. n'' < i \\<and> i \\<le> n' \\<and> ?P i}\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> Q i} =\n    card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} +\n    card {i. n'' < i \\<and> i \\<le> n' \\<and> Q i}", "by simp"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> n' \\<and> Q i} =\n  card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} +\n  card {i. n'' < i \\<and> i \\<le> n' \\<and> Q i}\n\ngoal (1 subgoal):\n 1. card {i. n'' < i \\<and> i \\<le> n' \\<and> Q i} = cnf", "ultimately"], ["proof (chain)\npicking this:\n  card {i. n < i \\<and> i \\<le> n' \\<and> Q i} =\n  card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} + cnf\n  card {i. n < i \\<and> i \\<le> n' \\<and> Q i} =\n  card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} +\n  card {i. n'' < i \\<and> i \\<le> n' \\<and> Q i}", "show ?thesis"], ["proof (prove)\nusing this:\n  card {i. n < i \\<and> i \\<le> n' \\<and> Q i} =\n  card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} + cnf\n  card {i. n < i \\<and> i \\<le> n' \\<and> Q i} =\n  card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} +\n  card {i. n'' < i \\<and> i \\<le> n' \\<and> Q i}\n\ngoal (1 subgoal):\n 1. card {i. n'' < i \\<and> i \\<le> n' \\<and> Q i} = cnf", "by simp"], ["proof (state)\nthis:\n  card {i. n'' < i \\<and> i \\<le> n' \\<and> Q i} = cnf\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card {i. n'' < i \\<and> i \\<le> n' \\<and> Q i} = cnf\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 \\<le> x;\n     card {i. n < i \\<and> i \\<le> n' \\<and> Q i} = x * cnf;\n     x \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n                      \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}", "moreover"], ["proof (state)\nthis:\n  card {i. n'' < i \\<and> i \\<le> n' \\<and> Q i} = cnf\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 \\<le> x;\n     card {i. n < i \\<and> i \\<le> n' \\<and> Q i} = x * cnf;\n     x \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n                      \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}", "from \\<open>ccard n'' n' Q = cnf\\<close>"], ["proof (chain)\npicking this:\n  card {i. n'' < i \\<and> i \\<le> n' \\<and> Q i} = cnf", "have \"ccard n'' n' P \\<le> cnf\""], ["proof (prove)\nusing this:\n  card {i. n'' < i \\<and> i \\<le> n' \\<and> Q i} = cnf\n\ngoal (1 subgoal):\n 1. card {i. n'' < i \\<and> i \\<le> n' \\<and> P i} \\<le> cnf", "using hyp"], ["proof (prove)\nusing this:\n  card {i. n'' < i \\<and> i \\<le> n' \\<and> Q i} = cnf\n  \\<forall>n' n''.\n     card {i. n' < i \\<and> i \\<le> n'' \\<and> Q i}\n     \\<le> cnf \\<longrightarrow>\n     card {i. n' < i \\<and> i \\<le> n'' \\<and> P i} \\<le> cnf\n\ngoal (1 subgoal):\n 1. card {i. n'' < i \\<and> i \\<le> n' \\<and> P i} \\<le> cnf", "by simp"], ["proof (state)\nthis:\n  card {i. n'' < i \\<and> i \\<le> n' \\<and> P i} \\<le> cnf\n\ngoal (1 subgoal):\n 1. \\<lbrakk>1 \\<le> x;\n     card {i. n < i \\<and> i \\<le> n' \\<and> Q i} = x * cnf;\n     x \\<noteq> 1\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n                      \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}", "ultimately"], ["proof (chain)\npicking this:\n  card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\n  \\<le> card {i. n < i \\<and> i \\<le> n'' \\<and> Q i}\n  card {i. n'' < i \\<and> i \\<le> n' \\<and> Q i} = cnf\n  card {i. n'' < i \\<and> i \\<le> n' \\<and> P i} \\<le> cnf", "show ?thesis"], ["proof (prove)\nusing this:\n  card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\n  \\<le> card {i. n < i \\<and> i \\<le> n'' \\<and> Q i}\n  card {i. n'' < i \\<and> i \\<le> n' \\<and> Q i} = cnf\n  card {i. n'' < i \\<and> i \\<le> n' \\<and> P i} \\<le> cnf\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n    \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}", "using \\<open>n''\\<ge>n\\<close> \\<open>n''<n'\\<close> ccard_sum[of n'' n' n]"], ["proof (prove)\nusing this:\n  card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\n  \\<le> card {i. n < i \\<and> i \\<le> n'' \\<and> Q i}\n  card {i. n'' < i \\<and> i \\<le> n' \\<and> Q i} = cnf\n  card {i. n'' < i \\<and> i \\<le> n' \\<and> P i} \\<le> cnf\n  n \\<le> n''\n  n'' < n'\n  \\<lbrakk>n'' \\<le> n'; n \\<le> n''\\<rbrakk>\n  \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> ?P i} =\n                    card {i. n < i \\<and> i \\<le> n'' \\<and> ?P i} +\n                    card {i. n'' < i \\<and> i \\<le> n' \\<and> ?P i}\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n    \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}", "by simp"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n  \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n  \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>n \\<le> n'';\n   \\<exists>x\\<ge>1.\n      card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf\\<rbrakk>\n  \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n'' \\<and> P i}\n                    \\<le> card {i. n < i \\<and> i \\<le> n'' \\<and> Q i}\n\ngoal (1 subgoal):\n 1. \\<not> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}\n           \\<le> cnf \\<Longrightarrow>\n    False", "}"], ["proof (state)\nthis:\n  \\<lbrakk>n \\<le> ?n''2;\n   \\<exists>x\\<ge>1.\n      card {i. n < i \\<and> i \\<le> ?n''2 \\<and> Q i} = x * cnf\\<rbrakk>\n  \\<Longrightarrow> card {i. n < i \\<and> i \\<le> ?n''2 \\<and> P i}\n                    \\<le> card {i. n < i \\<and> i \\<le> ?n''2 \\<and> Q i}\n\ngoal (1 subgoal):\n 1. \\<not> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}\n           \\<le> cnf \\<Longrightarrow>\n    False", "note geq = this"], ["proof (state)\nthis:\n  \\<lbrakk>n \\<le> ?n''2;\n   \\<exists>x\\<ge>1.\n      card {i. n < i \\<and> i \\<le> ?n''2 \\<and> Q i} = x * cnf\\<rbrakk>\n  \\<Longrightarrow> card {i. n < i \\<and> i \\<le> ?n''2 \\<and> P i}\n                    \\<le> card {i. n < i \\<and> i \\<le> ?n''2 \\<and> Q i}\n\ngoal (1 subgoal):\n 1. \\<not> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}\n           \\<le> cnf \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  \\<exists>x\\<ge>1.\n     card\n      {i. n < i \\<and>\n          i \\<le> (GREATEST n''.\n                      n \\<le> n'' \\<and>\n                      n'' \\<le> n' \\<and>\n                      (\\<exists>x\\<ge>1.\n                          card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                          x * cnf)) \\<and>\n          Q i} =\n     x * cnf\n  n \\<le> (GREATEST n''.\n              n \\<le> n'' \\<and>\n              n'' \\<le> n' \\<and>\n              (\\<exists>x\\<ge>1.\n                  card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n  \\<lbrakk>n \\<le> ?n''2;\n   \\<exists>x\\<ge>1.\n      card {i. n < i \\<and> i \\<le> ?n''2 \\<and> Q i} = x * cnf\\<rbrakk>\n  \\<Longrightarrow> card {i. n < i \\<and> i \\<le> ?n''2 \\<and> P i}\n                    \\<le> card {i. n < i \\<and> i \\<le> ?n''2 \\<and> Q i}", "have \"ccard n ?g P \\<le> ccard n ?g Q\""], ["proof (prove)\nusing this:\n  \\<exists>x\\<ge>1.\n     card\n      {i. n < i \\<and>\n          i \\<le> (GREATEST n''.\n                      n \\<le> n'' \\<and>\n                      n'' \\<le> n' \\<and>\n                      (\\<exists>x\\<ge>1.\n                          card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                          x * cnf)) \\<and>\n          Q i} =\n     x * cnf\n  n \\<le> (GREATEST n''.\n              n \\<le> n'' \\<and>\n              n'' \\<le> n' \\<and>\n              (\\<exists>x\\<ge>1.\n                  card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n  \\<lbrakk>n \\<le> ?n''2;\n   \\<exists>x\\<ge>1.\n      card {i. n < i \\<and> i \\<le> ?n''2 \\<and> Q i} = x * cnf\\<rbrakk>\n  \\<Longrightarrow> card {i. n < i \\<and> i \\<le> ?n''2 \\<and> P i}\n                    \\<le> card {i. n < i \\<and> i \\<le> ?n''2 \\<and> Q i}\n\ngoal (1 subgoal):\n 1. card\n     {i. n < i \\<and>\n         i \\<le> (GREATEST n''.\n                     n \\<le> n'' \\<and>\n                     n'' \\<le> n' \\<and>\n                     (\\<exists>x\\<ge>1.\n                         card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                         x * cnf)) \\<and>\n         P i}\n    \\<le> card\n           {i. n < i \\<and>\n               i \\<le> (GREATEST n''.\n                           n \\<le> n'' \\<and>\n                           n'' \\<le> n' \\<and>\n                           (\\<exists>x\\<ge>1.\n                               card\n                                {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                               x * cnf)) \\<and>\n               Q i}", "by simp"], ["proof (state)\nthis:\n  card\n   {i. n < i \\<and>\n       i \\<le> (GREATEST n''.\n                   n \\<le> n'' \\<and>\n                   n'' \\<le> n' \\<and>\n                   (\\<exists>x\\<ge>1.\n                       card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                       x * cnf)) \\<and>\n       P i}\n  \\<le> card\n         {i. n < i \\<and>\n             i \\<le> (GREATEST n''.\n                         n \\<le> n'' \\<and>\n                         n'' \\<le> n' \\<and>\n                         (\\<exists>x\\<ge>1.\n                             card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                             x * cnf)) \\<and>\n             Q i}\n\ngoal (1 subgoal):\n 1. \\<not> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}\n           \\<le> cnf \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  card\n   {i. n < i \\<and>\n       i \\<le> (GREATEST n''.\n                   n \\<le> n'' \\<and>\n                   n'' \\<le> n' \\<and>\n                   (\\<exists>x\\<ge>1.\n                       card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                       x * cnf)) \\<and>\n       P i}\n  \\<le> card\n         {i. n < i \\<and>\n             i \\<le> (GREATEST n''.\n                         n \\<le> n'' \\<and>\n                         n'' \\<le> n' \\<and>\n                         (\\<exists>x\\<ge>1.\n                             card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                             x * cnf)) \\<and>\n             Q i}\n\ngoal (1 subgoal):\n 1. \\<not> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}\n           \\<le> cnf \\<Longrightarrow>\n    False", "have \"ccard ?g n' P \\<le> cnf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card\n     {i. (GREATEST n''.\n             n \\<le> n'' \\<and>\n             n'' \\<le> n' \\<and>\n             (\\<exists>x\\<ge>1.\n                 card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n         < i \\<and>\n         i \\<le> n' \\<and> P i}\n    \\<le> cnf", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> card\n            {i. (GREATEST n''.\n                    n \\<le> n'' \\<and>\n                    n'' \\<le> n' \\<and>\n                    (\\<exists>x\\<ge>1.\n                        card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                        x * cnf))\n                < i \\<and>\n                i \\<le> n' \\<and> P i}\n           \\<le> cnf \\<Longrightarrow>\n    False", "assume \"\\<not> ccard ?g n' P \\<le> cnf\""], ["proof (state)\nthis:\n  \\<not> card\n          {i. (GREATEST n''.\n                  n \\<le> n'' \\<and>\n                  n'' \\<le> n' \\<and>\n                  (\\<exists>x\\<ge>1.\n                      card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                      x * cnf))\n              < i \\<and>\n              i \\<le> n' \\<and> P i}\n         \\<le> cnf\n\ngoal (1 subgoal):\n 1. \\<not> card\n            {i. (GREATEST n''.\n                    n \\<le> n'' \\<and>\n                    n'' \\<le> n' \\<and>\n                    (\\<exists>x\\<ge>1.\n                        card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                        x * cnf))\n                < i \\<and>\n                i \\<le> n' \\<and> P i}\n           \\<le> cnf \\<Longrightarrow>\n    False", "hence \"ccard ?g n' P > cnf\""], ["proof (prove)\nusing this:\n  \\<not> card\n          {i. (GREATEST n''.\n                  n \\<le> n'' \\<and>\n                  n'' \\<le> n' \\<and>\n                  (\\<exists>x\\<ge>1.\n                      card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                      x * cnf))\n              < i \\<and>\n              i \\<le> n' \\<and> P i}\n         \\<le> cnf\n\ngoal (1 subgoal):\n 1. cnf\n    < card\n       {i. (GREATEST n''.\n               n \\<le> n'' \\<and>\n               n'' \\<le> n' \\<and>\n               (\\<exists>x\\<ge>1.\n                   card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n           < i \\<and>\n           i \\<le> n' \\<and> P i}", "by simp"], ["proof (state)\nthis:\n  cnf\n  < card\n     {i. (GREATEST n''.\n             n \\<le> n'' \\<and>\n             n'' \\<le> n' \\<and>\n             (\\<exists>x\\<ge>1.\n                 card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n         < i \\<and>\n         i \\<le> n' \\<and> P i}\n\ngoal (1 subgoal):\n 1. \\<not> card\n            {i. (GREATEST n''.\n                    n \\<le> n'' \\<and>\n                    n'' \\<le> n' \\<and>\n                    (\\<exists>x\\<ge>1.\n                        card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                        x * cnf))\n                < i \\<and>\n                i \\<le> n' \\<and> P i}\n           \\<le> cnf \\<Longrightarrow>\n    False", "have \"ccard ?g n' Q > cnf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. cnf\n    < card\n       {i. (GREATEST n''.\n               n \\<le> n'' \\<and>\n               n'' \\<le> n' \\<and>\n               (\\<exists>x\\<ge>1.\n                   card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n           < i \\<and>\n           i \\<le> n' \\<and> Q i}", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> cnf\n           < card\n              {i. (GREATEST n''.\n                      n \\<le> n'' \\<and>\n                      n'' \\<le> n' \\<and>\n                      (\\<exists>x\\<ge>1.\n                          card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                          x * cnf))\n                  < i \\<and>\n                  i \\<le> n' \\<and> Q i} \\<Longrightarrow>\n    False", "assume \"\\<not>ccard ?g n' Q > cnf\""], ["proof (state)\nthis:\n  \\<not> cnf\n         < card\n            {i. (GREATEST n''.\n                    n \\<le> n'' \\<and>\n                    n'' \\<le> n' \\<and>\n                    (\\<exists>x\\<ge>1.\n                        card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                        x * cnf))\n                < i \\<and>\n                i \\<le> n' \\<and> Q i}\n\ngoal (1 subgoal):\n 1. \\<not> cnf\n           < card\n              {i. (GREATEST n''.\n                      n \\<le> n'' \\<and>\n                      n'' \\<le> n' \\<and>\n                      (\\<exists>x\\<ge>1.\n                          card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                          x * cnf))\n                  < i \\<and>\n                  i \\<le> n' \\<and> Q i} \\<Longrightarrow>\n    False", "hence \"ccard ?g n' Q \\<le> cnf\""], ["proof (prove)\nusing this:\n  \\<not> cnf\n         < card\n            {i. (GREATEST n''.\n                    n \\<le> n'' \\<and>\n                    n'' \\<le> n' \\<and>\n                    (\\<exists>x\\<ge>1.\n                        card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                        x * cnf))\n                < i \\<and>\n                i \\<le> n' \\<and> Q i}\n\ngoal (1 subgoal):\n 1. card\n     {i. (GREATEST n''.\n             n \\<le> n'' \\<and>\n             n'' \\<le> n' \\<and>\n             (\\<exists>x\\<ge>1.\n                 card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n         < i \\<and>\n         i \\<le> n' \\<and> Q i}\n    \\<le> cnf", "by simp"], ["proof (state)\nthis:\n  card\n   {i. (GREATEST n''.\n           n \\<le> n'' \\<and>\n           n'' \\<le> n' \\<and>\n           (\\<exists>x\\<ge>1.\n               card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n       < i \\<and>\n       i \\<le> n' \\<and> Q i}\n  \\<le> cnf\n\ngoal (1 subgoal):\n 1. \\<not> cnf\n           < card\n              {i. (GREATEST n''.\n                      n \\<le> n'' \\<and>\n                      n'' \\<le> n' \\<and>\n                      (\\<exists>x\\<ge>1.\n                          card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                          x * cnf))\n                  < i \\<and>\n                  i \\<le> n' \\<and> Q i} \\<Longrightarrow>\n    False", "with \\<open>ccard ?g n' P > cnf\\<close>"], ["proof (chain)\npicking this:\n  cnf\n  < card\n     {i. (GREATEST n''.\n             n \\<le> n'' \\<and>\n             n'' \\<le> n' \\<and>\n             (\\<exists>x\\<ge>1.\n                 card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n         < i \\<and>\n         i \\<le> n' \\<and> P i}\n  card\n   {i. (GREATEST n''.\n           n \\<le> n'' \\<and>\n           n'' \\<le> n' \\<and>\n           (\\<exists>x\\<ge>1.\n               card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n       < i \\<and>\n       i \\<le> n' \\<and> Q i}\n  \\<le> cnf", "show False"], ["proof (prove)\nusing this:\n  cnf\n  < card\n     {i. (GREATEST n''.\n             n \\<le> n'' \\<and>\n             n'' \\<le> n' \\<and>\n             (\\<exists>x\\<ge>1.\n                 card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n         < i \\<and>\n         i \\<le> n' \\<and> P i}\n  card\n   {i. (GREATEST n''.\n           n \\<le> n'' \\<and>\n           n'' \\<le> n' \\<and>\n           (\\<exists>x\\<ge>1.\n               card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n       < i \\<and>\n       i \\<le> n' \\<and> Q i}\n  \\<le> cnf\n\ngoal (1 subgoal):\n 1. False", "using \\<open>\\<not> (\\<exists>n' n''. ccard n' n'' P > cnf \\<and> ccard n' n'' Q \\<le> cnf)\\<close>"], ["proof (prove)\nusing this:\n  cnf\n  < card\n     {i. (GREATEST n''.\n             n \\<le> n'' \\<and>\n             n'' \\<le> n' \\<and>\n             (\\<exists>x\\<ge>1.\n                 card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n         < i \\<and>\n         i \\<le> n' \\<and> P i}\n  card\n   {i. (GREATEST n''.\n           n \\<le> n'' \\<and>\n           n'' \\<le> n' \\<and>\n           (\\<exists>x\\<ge>1.\n               card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n       < i \\<and>\n       i \\<le> n' \\<and> Q i}\n  \\<le> cnf\n  \\<nexists>n' n''.\n     cnf < card {i. n' < i \\<and> i \\<le> n'' \\<and> P i} \\<and>\n     card {i. n' < i \\<and> i \\<le> n'' \\<and> Q i} \\<le> cnf\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  cnf\n  < card\n     {i. (GREATEST n''.\n             n \\<le> n'' \\<and>\n             n'' \\<le> n' \\<and>\n             (\\<exists>x\\<ge>1.\n                 card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n         < i \\<and>\n         i \\<le> n' \\<and> Q i}\n\ngoal (1 subgoal):\n 1. \\<not> card\n            {i. (GREATEST n''.\n                    n \\<le> n'' \\<and>\n                    n'' \\<le> n' \\<and>\n                    (\\<exists>x\\<ge>1.\n                        card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                        x * cnf))\n                < i \\<and>\n                i \\<le> n' \\<and> P i}\n           \\<le> cnf \\<Longrightarrow>\n    False", "with \\<open>\\<not> cnf=0\\<close>"], ["proof (chain)\npicking this:\n  cnf \\<noteq> 0\n  cnf\n  < card\n     {i. (GREATEST n''.\n             n \\<le> n'' \\<and>\n             n'' \\<le> n' \\<and>\n             (\\<exists>x\\<ge>1.\n                 card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n         < i \\<and>\n         i \\<le> n' \\<and> Q i}", "obtain n'' where \"n''>?g\" and \"n''<n'\" and \"ccard ?g n'' Q = cnf\""], ["proof (prove)\nusing this:\n  cnf \\<noteq> 0\n  cnf\n  < card\n     {i. (GREATEST n''.\n             n \\<le> n'' \\<and>\n             n'' \\<le> n' \\<and>\n             (\\<exists>x\\<ge>1.\n                 card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n         < i \\<and>\n         i \\<le> n' \\<and> Q i}\n\ngoal (1 subgoal):\n 1. (\\<And>n''.\n        \\<lbrakk>(GREATEST n''.\n                     n \\<le> n'' \\<and>\n                     n'' \\<le> n' \\<and>\n                     (\\<exists>x\\<ge>1.\n                         card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                         x * cnf))\n                 < n'';\n         n'' < n';\n         card\n          {i. (GREATEST n''.\n                  n \\<le> n'' \\<and>\n                  n'' \\<le> n' \\<and>\n                  (\\<exists>x\\<ge>1.\n                      card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                      x * cnf))\n              < i \\<and>\n              i \\<le> n'' \\<and> Q i} =\n         cnf\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using ccard_ex[of cnf ?g n' Q]"], ["proof (prove)\nusing this:\n  cnf \\<noteq> 0\n  cnf\n  < card\n     {i. (GREATEST n''.\n             n \\<le> n'' \\<and>\n             n'' \\<le> n' \\<and>\n             (\\<exists>x\\<ge>1.\n                 card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n         < i \\<and>\n         i \\<le> n' \\<and> Q i}\n  \\<lbrakk>1 \\<le> cnf;\n   cnf\n   < card\n      {i. (GREATEST n''.\n              n \\<le> n'' \\<and>\n              n'' \\<le> n' \\<and>\n              (\\<exists>x\\<ge>1.\n                  card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n          < i \\<and>\n          i \\<le> n' \\<and> Q i}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>n'a<n'.\n                       (GREATEST n''.\n                           n \\<le> n'' \\<and>\n                           n'' \\<le> n' \\<and>\n                           (\\<exists>x\\<ge>1.\n                               card\n                                {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                               x * cnf))\n                       < n'a \\<and>\n                       card\n                        {i. (GREATEST n''.\n                                n \\<le> n'' \\<and>\n                                n'' \\<le> n' \\<and>\n                                (\\<exists>x\\<ge>1.\n                                    card\n                                     {i.\nn < i \\<and> i \\<le> n'' \\<and> Q i} =\n                                    x * cnf))\n                            < i \\<and>\n                            i \\<le> n'a \\<and> Q i} =\n                       cnf\n\ngoal (1 subgoal):\n 1. (\\<And>n''.\n        \\<lbrakk>(GREATEST n''.\n                     n \\<le> n'' \\<and>\n                     n'' \\<le> n' \\<and>\n                     (\\<exists>x\\<ge>1.\n                         card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                         x * cnf))\n                 < n'';\n         n'' < n';\n         card\n          {i. (GREATEST n''.\n                  n \\<le> n'' \\<and>\n                  n'' \\<le> n' \\<and>\n                  (\\<exists>x\\<ge>1.\n                      card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                      x * cnf))\n              < i \\<and>\n              i \\<le> n'' \\<and> Q i} =\n         cnf\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (GREATEST n''.\n      n \\<le> n'' \\<and>\n      n'' \\<le> n' \\<and>\n      (\\<exists>x\\<ge>1.\n          card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n  < n''\n  n'' < n'\n  card\n   {i. (GREATEST n''.\n           n \\<le> n'' \\<and>\n           n'' \\<le> n' \\<and>\n           (\\<exists>x\\<ge>1.\n               card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n       < i \\<and>\n       i \\<le> n'' \\<and> Q i} =\n  cnf\n\ngoal (1 subgoal):\n 1. \\<not> card\n            {i. (GREATEST n''.\n                    n \\<le> n'' \\<and>\n                    n'' \\<le> n' \\<and>\n                    (\\<exists>x\\<ge>1.\n                        card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                        x * cnf))\n                < i \\<and>\n                i \\<le> n' \\<and> P i}\n           \\<le> cnf \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  (GREATEST n''.\n      n \\<le> n'' \\<and>\n      n'' \\<le> n' \\<and>\n      (\\<exists>x\\<ge>1.\n          card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n  < n''\n  n'' < n'\n  card\n   {i. (GREATEST n''.\n           n \\<le> n'' \\<and>\n           n'' \\<le> n' \\<and>\n           (\\<exists>x\\<ge>1.\n               card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n       < i \\<and>\n       i \\<le> n'' \\<and> Q i} =\n  cnf\n\ngoal (1 subgoal):\n 1. \\<not> card\n            {i. (GREATEST n''.\n                    n \\<le> n'' \\<and>\n                    n'' \\<le> n' \\<and>\n                    (\\<exists>x\\<ge>1.\n                        card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                        x * cnf))\n                < i \\<and>\n                i \\<le> n' \\<and> P i}\n           \\<le> cnf \\<Longrightarrow>\n    False", "have \"\\<exists>x\\<ge>1. ccard n n'' Q = x * cnf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x\\<ge>1.\n       card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>x\\<ge>1.\n       card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf", "from \\<open>\\<exists>x\\<ge>1. ccard n ?g Q = x * cnf\\<close>"], ["proof (chain)\npicking this:\n  \\<exists>x\\<ge>1.\n     card\n      {i. n < i \\<and>\n          i \\<le> (GREATEST n''.\n                      n \\<le> n'' \\<and>\n                      n'' \\<le> n' \\<and>\n                      (\\<exists>x\\<ge>1.\n                          card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                          x * cnf)) \\<and>\n          Q i} =\n     x * cnf", "obtain x where \"x\\<ge>1\" and \"ccard n ?g Q = x * cnf\""], ["proof (prove)\nusing this:\n  \\<exists>x\\<ge>1.\n     card\n      {i. n < i \\<and>\n          i \\<le> (GREATEST n''.\n                      n \\<le> n'' \\<and>\n                      n'' \\<le> n' \\<and>\n                      (\\<exists>x\\<ge>1.\n                          card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                          x * cnf)) \\<and>\n          Q i} =\n     x * cnf\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>1 \\<le> x;\n         card\n          {i. n < i \\<and>\n              i \\<le> (GREATEST n''.\n                          n \\<le> n'' \\<and>\n                          n'' \\<le> n' \\<and>\n                          (\\<exists>x\\<ge>1.\n                              card\n                               {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                              x * cnf)) \\<and>\n              Q i} =\n         x * cnf\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  1 \\<le> x\n  card\n   {i. n < i \\<and>\n       i \\<le> (GREATEST n''.\n                   n \\<le> n'' \\<and>\n                   n'' \\<le> n' \\<and>\n                   (\\<exists>x\\<ge>1.\n                       card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                       x * cnf)) \\<and>\n       Q i} =\n  x * cnf\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<ge>1.\n       card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf", "from \\<open>n''>?g\\<close> \\<open>?g\\<ge>n\\<close>"], ["proof (chain)\npicking this:\n  (GREATEST n''.\n      n \\<le> n'' \\<and>\n      n'' \\<le> n' \\<and>\n      (\\<exists>x\\<ge>1.\n          card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n  < n''\n  n \\<le> (GREATEST n''.\n              n \\<le> n'' \\<and>\n              n'' \\<le> n' \\<and>\n              (\\<exists>x\\<ge>1.\n                  card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))", "have \"ccard n n'' Q = ccard n ?g Q + ccard ?g n'' Q\""], ["proof (prove)\nusing this:\n  (GREATEST n''.\n      n \\<le> n'' \\<and>\n      n'' \\<le> n' \\<and>\n      (\\<exists>x\\<ge>1.\n          card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n  < n''\n  n \\<le> (GREATEST n''.\n              n \\<le> n'' \\<and>\n              n'' \\<le> n' \\<and>\n              (\\<exists>x\\<ge>1.\n                  card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n    card\n     {i. n < i \\<and>\n         i \\<le> (GREATEST n''.\n                     n \\<le> n'' \\<and>\n                     n'' \\<le> n' \\<and>\n                     (\\<exists>x\\<ge>1.\n                         card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                         x * cnf)) \\<and>\n         Q i} +\n    card\n     {i. (GREATEST n''.\n             n \\<le> n'' \\<and>\n             n'' \\<le> n' \\<and>\n             (\\<exists>x\\<ge>1.\n                 card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n         < i \\<and>\n         i \\<le> n'' \\<and> Q i}", "using ccard_sum[of ?g n'' n Q]"], ["proof (prove)\nusing this:\n  (GREATEST n''.\n      n \\<le> n'' \\<and>\n      n'' \\<le> n' \\<and>\n      (\\<exists>x\\<ge>1.\n          card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n  < n''\n  n \\<le> (GREATEST n''.\n              n \\<le> n'' \\<and>\n              n'' \\<le> n' \\<and>\n              (\\<exists>x\\<ge>1.\n                  card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n  \\<lbrakk>(GREATEST n''.\n               n \\<le> n'' \\<and>\n               n'' \\<le> n' \\<and>\n               (\\<exists>x\\<ge>1.\n                   card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n           \\<le> n'';\n   n \\<le> (GREATEST n''.\n               n \\<le> n'' \\<and>\n               n'' \\<le> n' \\<and>\n               (\\<exists>x\\<ge>1.\n                   card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                   x * cnf))\\<rbrakk>\n  \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                    card\n                     {i. n < i \\<and>\n                         i \\<le> (GREATEST n''.\n                                     n \\<le> n'' \\<and>\n                                     n'' \\<le> n' \\<and>\n                                     (\\<exists>x\\<ge>1.\n   card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf)) \\<and>\n                         Q i} +\n                    card\n                     {i. (GREATEST n''.\n                             n \\<le> n'' \\<and>\n                             n'' \\<le> n' \\<and>\n                             (\\<exists>x\\<ge>1.\n                                 card\n                                  {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                                 x * cnf))\n                         < i \\<and>\n                         i \\<le> n'' \\<and> Q i}\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n    card\n     {i. n < i \\<and>\n         i \\<le> (GREATEST n''.\n                     n \\<le> n'' \\<and>\n                     n'' \\<le> n' \\<and>\n                     (\\<exists>x\\<ge>1.\n                         card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                         x * cnf)) \\<and>\n         Q i} +\n    card\n     {i. (GREATEST n''.\n             n \\<le> n'' \\<and>\n             n'' \\<le> n' \\<and>\n             (\\<exists>x\\<ge>1.\n                 card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n         < i \\<and>\n         i \\<le> n'' \\<and> Q i}", "by simp"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n  card\n   {i. n < i \\<and>\n       i \\<le> (GREATEST n''.\n                   n \\<le> n'' \\<and>\n                   n'' \\<le> n' \\<and>\n                   (\\<exists>x\\<ge>1.\n                       card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                       x * cnf)) \\<and>\n       Q i} +\n  card\n   {i. (GREATEST n''.\n           n \\<le> n'' \\<and>\n           n'' \\<le> n' \\<and>\n           (\\<exists>x\\<ge>1.\n               card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n       < i \\<and>\n       i \\<le> n'' \\<and> Q i}\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<ge>1.\n       card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf", "with \\<open>ccard n ?g Q = x * cnf\\<close>"], ["proof (chain)\npicking this:\n  card\n   {i. n < i \\<and>\n       i \\<le> (GREATEST n''.\n                   n \\<le> n'' \\<and>\n                   n'' \\<le> n' \\<and>\n                   (\\<exists>x\\<ge>1.\n                       card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                       x * cnf)) \\<and>\n       Q i} =\n  x * cnf\n  card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n  card\n   {i. n < i \\<and>\n       i \\<le> (GREATEST n''.\n                   n \\<le> n'' \\<and>\n                   n'' \\<le> n' \\<and>\n                   (\\<exists>x\\<ge>1.\n                       card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                       x * cnf)) \\<and>\n       Q i} +\n  card\n   {i. (GREATEST n''.\n           n \\<le> n'' \\<and>\n           n'' \\<le> n' \\<and>\n           (\\<exists>x\\<ge>1.\n               card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n       < i \\<and>\n       i \\<le> n'' \\<and> Q i}", "have \"ccard n n'' Q = x * cnf + ccard ?g n'' Q\""], ["proof (prove)\nusing this:\n  card\n   {i. n < i \\<and>\n       i \\<le> (GREATEST n''.\n                   n \\<le> n'' \\<and>\n                   n'' \\<le> n' \\<and>\n                   (\\<exists>x\\<ge>1.\n                       card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                       x * cnf)) \\<and>\n       Q i} =\n  x * cnf\n  card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n  card\n   {i. n < i \\<and>\n       i \\<le> (GREATEST n''.\n                   n \\<le> n'' \\<and>\n                   n'' \\<le> n' \\<and>\n                   (\\<exists>x\\<ge>1.\n                       card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                       x * cnf)) \\<and>\n       Q i} +\n  card\n   {i. (GREATEST n''.\n           n \\<le> n'' \\<and>\n           n'' \\<le> n' \\<and>\n           (\\<exists>x\\<ge>1.\n               card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n       < i \\<and>\n       i \\<le> n'' \\<and> Q i}\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n    x * cnf +\n    card\n     {i. (GREATEST n''.\n             n \\<le> n'' \\<and>\n             n'' \\<le> n' \\<and>\n             (\\<exists>x\\<ge>1.\n                 card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n         < i \\<and>\n         i \\<le> n'' \\<and> Q i}", "by simp"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n  x * cnf +\n  card\n   {i. (GREATEST n''.\n           n \\<le> n'' \\<and>\n           n'' \\<le> n' \\<and>\n           (\\<exists>x\\<ge>1.\n               card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n       < i \\<and>\n       i \\<le> n'' \\<and> Q i}\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<ge>1.\n       card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf", "with \\<open>ccard ?g n'' Q = cnf\\<close>"], ["proof (chain)\npicking this:\n  card\n   {i. (GREATEST n''.\n           n \\<le> n'' \\<and>\n           n'' \\<le> n' \\<and>\n           (\\<exists>x\\<ge>1.\n               card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n       < i \\<and>\n       i \\<le> n'' \\<and> Q i} =\n  cnf\n  card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n  x * cnf +\n  card\n   {i. (GREATEST n''.\n           n \\<le> n'' \\<and>\n           n'' \\<le> n' \\<and>\n           (\\<exists>x\\<ge>1.\n               card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n       < i \\<and>\n       i \\<le> n'' \\<and> Q i}", "have \"ccard n n'' Q = Suc x * cnf\""], ["proof (prove)\nusing this:\n  card\n   {i. (GREATEST n''.\n           n \\<le> n'' \\<and>\n           n'' \\<le> n' \\<and>\n           (\\<exists>x\\<ge>1.\n               card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n       < i \\<and>\n       i \\<le> n'' \\<and> Q i} =\n  cnf\n  card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n  x * cnf +\n  card\n   {i. (GREATEST n''.\n           n \\<le> n'' \\<and>\n           n'' \\<le> n' \\<and>\n           (\\<exists>x\\<ge>1.\n               card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n       < i \\<and>\n       i \\<le> n'' \\<and> Q i}\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = Suc x * cnf", "by simp"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = Suc x * cnf\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<ge>1.\n       card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf", "thus ?thesis"], ["proof (prove)\nusing this:\n  card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = Suc x * cnf\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<ge>1.\n       card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf", "by auto"], ["proof (state)\nthis:\n  \\<exists>x\\<ge>1. card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>x\\<ge>1. card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf\n\ngoal (1 subgoal):\n 1. \\<not> card\n            {i. (GREATEST n''.\n                    n \\<le> n'' \\<and>\n                    n'' \\<le> n' \\<and>\n                    (\\<exists>x\\<ge>1.\n                        card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                        x * cnf))\n                < i \\<and>\n                i \\<le> n' \\<and> P i}\n           \\<le> cnf \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  \\<exists>x\\<ge>1. card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf\n\ngoal (1 subgoal):\n 1. \\<not> card\n            {i. (GREATEST n''.\n                    n \\<le> n'' \\<and>\n                    n'' \\<le> n' \\<and>\n                    (\\<exists>x\\<ge>1.\n                        card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                        x * cnf))\n                < i \\<and>\n                i \\<le> n' \\<and> P i}\n           \\<le> cnf \\<Longrightarrow>\n    False", "from \\<open>n''>?g\\<close> \\<open>?g\\<ge>n\\<close>"], ["proof (chain)\npicking this:\n  (GREATEST n''.\n      n \\<le> n'' \\<and>\n      n'' \\<le> n' \\<and>\n      (\\<exists>x\\<ge>1.\n          card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n  < n''\n  n \\<le> (GREATEST n''.\n              n \\<le> n'' \\<and>\n              n'' \\<le> n' \\<and>\n              (\\<exists>x\\<ge>1.\n                  card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))", "have \"n''\\<ge>n\""], ["proof (prove)\nusing this:\n  (GREATEST n''.\n      n \\<le> n'' \\<and>\n      n'' \\<le> n' \\<and>\n      (\\<exists>x\\<ge>1.\n          card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n  < n''\n  n \\<le> (GREATEST n''.\n              n \\<le> n'' \\<and>\n              n'' \\<le> n' \\<and>\n              (\\<exists>x\\<ge>1.\n                  card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n\ngoal (1 subgoal):\n 1. n \\<le> n''", "by simp"], ["proof (state)\nthis:\n  n \\<le> n''\n\ngoal (1 subgoal):\n 1. \\<not> card\n            {i. (GREATEST n''.\n                    n \\<le> n'' \\<and>\n                    n'' \\<le> n' \\<and>\n                    (\\<exists>x\\<ge>1.\n                        card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                        x * cnf))\n                < i \\<and>\n                i \\<le> n' \\<and> P i}\n           \\<le> cnf \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  (GREATEST n''.\n      n \\<le> n'' \\<and>\n      n'' \\<le> n' \\<and>\n      (\\<exists>x\\<ge>1.\n          card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n  < n''\n  n'' < n'\n  card\n   {i. (GREATEST n''.\n           n \\<le> n'' \\<and>\n           n'' \\<le> n' \\<and>\n           (\\<exists>x\\<ge>1.\n               card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n       < i \\<and>\n       i \\<le> n'' \\<and> Q i} =\n  cnf\n  \\<exists>x\\<ge>1. card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf\n  n \\<le> n''", "have \"\\<exists>n''>?g. ?gcond n''\""], ["proof (prove)\nusing this:\n  (GREATEST n''.\n      n \\<le> n'' \\<and>\n      n'' \\<le> n' \\<and>\n      (\\<exists>x\\<ge>1.\n          card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n  < n''\n  n'' < n'\n  card\n   {i. (GREATEST n''.\n           n \\<le> n'' \\<and>\n           n'' \\<le> n' \\<and>\n           (\\<exists>x\\<ge>1.\n               card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n       < i \\<and>\n       i \\<le> n'' \\<and> Q i} =\n  cnf\n  \\<exists>x\\<ge>1. card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf\n  n \\<le> n''\n\ngoal (1 subgoal):\n 1. \\<exists>n''>GREATEST n''.\n                    n \\<le> n'' \\<and>\n                    n'' \\<le> n' \\<and>\n                    (\\<exists>x\\<ge>1.\n                        card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                        x * cnf).\n       n \\<le> n'' \\<and>\n       n'' \\<le> n' \\<and>\n       (\\<exists>x\\<ge>1.\n           card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf)", "by auto"], ["proof (state)\nthis:\n  \\<exists>n''>GREATEST n''.\n                  n \\<le> n'' \\<and>\n                  n'' \\<le> n' \\<and>\n                  (\\<exists>x\\<ge>1.\n                      card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                      x * cnf).\n     n \\<le> n'' \\<and>\n     n'' \\<le> n' \\<and>\n     (\\<exists>x\\<ge>1.\n         card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf)\n\ngoal (1 subgoal):\n 1. \\<not> card\n            {i. (GREATEST n''.\n                    n \\<le> n'' \\<and>\n                    n'' \\<le> n' \\<and>\n                    (\\<exists>x\\<ge>1.\n                        card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                        x * cnf))\n                < i \\<and>\n                i \\<le> n' \\<and> P i}\n           \\<le> cnf \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  \\<exists>n''>GREATEST n''.\n                  n \\<le> n'' \\<and>\n                  n'' \\<le> n' \\<and>\n                  (\\<exists>x\\<ge>1.\n                      card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                      x * cnf).\n     n \\<le> n'' \\<and>\n     n'' \\<le> n' \\<and>\n     (\\<exists>x\\<ge>1.\n         card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf)\n\ngoal (1 subgoal):\n 1. \\<not> card\n            {i. (GREATEST n''.\n                    n \\<le> n'' \\<and>\n                    n'' \\<le> n' \\<and>\n                    (\\<exists>x\\<ge>1.\n                        card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                        x * cnf))\n                < i \\<and>\n                i \\<le> n' \\<and> P i}\n           \\<le> cnf \\<Longrightarrow>\n    False", "from gex"], ["proof (chain)\npicking this:\n  \\<exists>n''.\n     (n \\<le> n'' \\<and>\n      n'' \\<le> n' \\<and>\n      (\\<exists>x\\<ge>1.\n          card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf)) \\<and>\n     (\\<forall>n'''.\n         n \\<le> n''' \\<and>\n         n''' \\<le> n' \\<and>\n         (\\<exists>x\\<ge>1.\n             card {i. n < i \\<and> i \\<le> n''' \\<and> Q i} =\n             x * cnf) \\<longrightarrow>\n         n''' \\<le> n'')", "have \"\\<forall>n'''. ?gcond n''' \\<longrightarrow> n'''\\<le>?g\""], ["proof (prove)\nusing this:\n  \\<exists>n''.\n     (n \\<le> n'' \\<and>\n      n'' \\<le> n' \\<and>\n      (\\<exists>x\\<ge>1.\n          card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf)) \\<and>\n     (\\<forall>n'''.\n         n \\<le> n''' \\<and>\n         n''' \\<le> n' \\<and>\n         (\\<exists>x\\<ge>1.\n             card {i. n < i \\<and> i \\<le> n''' \\<and> Q i} =\n             x * cnf) \\<longrightarrow>\n         n''' \\<le> n'')\n\ngoal (1 subgoal):\n 1. \\<forall>n'''.\n       n \\<le> n''' \\<and>\n       n''' \\<le> n' \\<and>\n       (\\<exists>x\\<ge>1.\n           card {i. n < i \\<and> i \\<le> n''' \\<and> Q i} =\n           x * cnf) \\<longrightarrow>\n       n'''\n       \\<le> (GREATEST n''.\n                 n \\<le> n'' \\<and>\n                 n'' \\<le> n' \\<and>\n                 (\\<exists>x\\<ge>1.\n                     card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                     x * cnf))", "using Greatest_le_nat[of ?gcond]"], ["proof (prove)\nusing this:\n  \\<exists>n''.\n     (n \\<le> n'' \\<and>\n      n'' \\<le> n' \\<and>\n      (\\<exists>x\\<ge>1.\n          card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf)) \\<and>\n     (\\<forall>n'''.\n         n \\<le> n''' \\<and>\n         n''' \\<le> n' \\<and>\n         (\\<exists>x\\<ge>1.\n             card {i. n < i \\<and> i \\<le> n''' \\<and> Q i} =\n             x * cnf) \\<longrightarrow>\n         n''' \\<le> n'')\n  \\<lbrakk>n \\<le> ?k \\<and>\n           ?k \\<le> n' \\<and>\n           (\\<exists>x\\<ge>1.\n               card {i. n < i \\<and> i \\<le> ?k \\<and> Q i} = x * cnf);\n   \\<And>y.\n      n \\<le> y \\<and>\n      y \\<le> n' \\<and>\n      (\\<exists>x\\<ge>1.\n          card {i. n < i \\<and> i \\<le> y \\<and> Q i} =\n          x * cnf) \\<Longrightarrow>\n      y \\<le> ?b\\<rbrakk>\n  \\<Longrightarrow> ?k \\<le> (GREATEST n''.\n                                 n \\<le> n'' \\<and>\n                                 n'' \\<le> n' \\<and>\n                                 (\\<exists>x\\<ge>1.\n                                     card\n{i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                                     x * cnf))\n\ngoal (1 subgoal):\n 1. \\<forall>n'''.\n       n \\<le> n''' \\<and>\n       n''' \\<le> n' \\<and>\n       (\\<exists>x\\<ge>1.\n           card {i. n < i \\<and> i \\<le> n''' \\<and> Q i} =\n           x * cnf) \\<longrightarrow>\n       n'''\n       \\<le> (GREATEST n''.\n                 n \\<le> n'' \\<and>\n                 n'' \\<le> n' \\<and>\n                 (\\<exists>x\\<ge>1.\n                     card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                     x * cnf))", "by auto"], ["proof (state)\nthis:\n  \\<forall>n'''.\n     n \\<le> n''' \\<and>\n     n''' \\<le> n' \\<and>\n     (\\<exists>x\\<ge>1.\n         card {i. n < i \\<and> i \\<le> n''' \\<and> Q i} =\n         x * cnf) \\<longrightarrow>\n     n'''\n     \\<le> (GREATEST n''.\n               n \\<le> n'' \\<and>\n               n'' \\<le> n' \\<and>\n               (\\<exists>x\\<ge>1.\n                   card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n\ngoal (1 subgoal):\n 1. \\<not> card\n            {i. (GREATEST n''.\n                    n \\<le> n'' \\<and>\n                    n'' \\<le> n' \\<and>\n                    (\\<exists>x\\<ge>1.\n                        card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                        x * cnf))\n                < i \\<and>\n                i \\<le> n' \\<and> P i}\n           \\<le> cnf \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  \\<exists>n''>GREATEST n''.\n                  n \\<le> n'' \\<and>\n                  n'' \\<le> n' \\<and>\n                  (\\<exists>x\\<ge>1.\n                      card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                      x * cnf).\n     n \\<le> n'' \\<and>\n     n'' \\<le> n' \\<and>\n     (\\<exists>x\\<ge>1.\n         card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf)\n  \\<forall>n'''.\n     n \\<le> n''' \\<and>\n     n''' \\<le> n' \\<and>\n     (\\<exists>x\\<ge>1.\n         card {i. n < i \\<and> i \\<le> n''' \\<and> Q i} =\n         x * cnf) \\<longrightarrow>\n     n'''\n     \\<le> (GREATEST n''.\n               n \\<le> n'' \\<and>\n               n'' \\<le> n' \\<and>\n               (\\<exists>x\\<ge>1.\n                   card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))", "show False"], ["proof (prove)\nusing this:\n  \\<exists>n''>GREATEST n''.\n                  n \\<le> n'' \\<and>\n                  n'' \\<le> n' \\<and>\n                  (\\<exists>x\\<ge>1.\n                      card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                      x * cnf).\n     n \\<le> n'' \\<and>\n     n'' \\<le> n' \\<and>\n     (\\<exists>x\\<ge>1.\n         card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf)\n  \\<forall>n'''.\n     n \\<le> n''' \\<and>\n     n''' \\<le> n' \\<and>\n     (\\<exists>x\\<ge>1.\n         card {i. n < i \\<and> i \\<le> n''' \\<and> Q i} =\n         x * cnf) \\<longrightarrow>\n     n'''\n     \\<le> (GREATEST n''.\n               n \\<le> n'' \\<and>\n               n'' \\<le> n' \\<and>\n               (\\<exists>x\\<ge>1.\n                   card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card\n   {i. (GREATEST n''.\n           n \\<le> n'' \\<and>\n           n'' \\<le> n' \\<and>\n           (\\<exists>x\\<ge>1.\n               card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n       < i \\<and>\n       i \\<le> n' \\<and> P i}\n  \\<le> cnf\n\ngoal (1 subgoal):\n 1. \\<not> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}\n           \\<le> cnf \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  card\n   {i. (GREATEST n''.\n           n \\<le> n'' \\<and>\n           n'' \\<le> n' \\<and>\n           (\\<exists>x\\<ge>1.\n               card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n       < i \\<and>\n       i \\<le> n' \\<and> P i}\n  \\<le> cnf\n\ngoal (1 subgoal):\n 1. \\<not> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}\n           \\<le> cnf \\<Longrightarrow>\n    False", "from gex"], ["proof (chain)\npicking this:\n  \\<exists>n''.\n     (n \\<le> n'' \\<and>\n      n'' \\<le> n' \\<and>\n      (\\<exists>x\\<ge>1.\n          card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf)) \\<and>\n     (\\<forall>n'''.\n         n \\<le> n''' \\<and>\n         n''' \\<le> n' \\<and>\n         (\\<exists>x\\<ge>1.\n             card {i. n < i \\<and> i \\<le> n''' \\<and> Q i} =\n             x * cnf) \\<longrightarrow>\n         n''' \\<le> n'')", "have \"n'\\<ge>?g\""], ["proof (prove)\nusing this:\n  \\<exists>n''.\n     (n \\<le> n'' \\<and>\n      n'' \\<le> n' \\<and>\n      (\\<exists>x\\<ge>1.\n          card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf)) \\<and>\n     (\\<forall>n'''.\n         n \\<le> n''' \\<and>\n         n''' \\<le> n' \\<and>\n         (\\<exists>x\\<ge>1.\n             card {i. n < i \\<and> i \\<le> n''' \\<and> Q i} =\n             x * cnf) \\<longrightarrow>\n         n''' \\<le> n'')\n\ngoal (1 subgoal):\n 1. (GREATEST n''.\n        n \\<le> n'' \\<and>\n        n'' \\<le> n' \\<and>\n        (\\<exists>x\\<ge>1.\n            card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n    \\<le> n'", "using GreatestI_ex_nat[of ?gcond]"], ["proof (prove)\nusing this:\n  \\<exists>n''.\n     (n \\<le> n'' \\<and>\n      n'' \\<le> n' \\<and>\n      (\\<exists>x\\<ge>1.\n          card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf)) \\<and>\n     (\\<forall>n'''.\n         n \\<le> n''' \\<and>\n         n''' \\<le> n' \\<and>\n         (\\<exists>x\\<ge>1.\n             card {i. n < i \\<and> i \\<le> n''' \\<and> Q i} =\n             x * cnf) \\<longrightarrow>\n         n''' \\<le> n'')\n  \\<lbrakk>\\<exists>k\\<ge>n.\n              k \\<le> n' \\<and>\n              (\\<exists>x\\<ge>1.\n                  card {i. n < i \\<and> i \\<le> k \\<and> Q i} = x * cnf);\n   \\<And>y.\n      n \\<le> y \\<and>\n      y \\<le> n' \\<and>\n      (\\<exists>x\\<ge>1.\n          card {i. n < i \\<and> i \\<le> y \\<and> Q i} =\n          x * cnf) \\<Longrightarrow>\n      y \\<le> ?b\\<rbrakk>\n  \\<Longrightarrow> n \\<le> (GREATEST n''.\n                                n \\<le> n'' \\<and>\n                                n'' \\<le> n' \\<and>\n                                (\\<exists>x\\<ge>1.\n                                    card\n                                     {i.\nn < i \\<and> i \\<le> n'' \\<and> Q i} =\n                                    x * cnf)) \\<and>\n                    (GREATEST n''.\n                        n \\<le> n'' \\<and>\n                        n'' \\<le> n' \\<and>\n                        (\\<exists>x\\<ge>1.\n                            card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                            x * cnf))\n                    \\<le> n' \\<and>\n                    (\\<exists>x\\<ge>1.\n                        card\n                         {i. n < i \\<and>\n                             i \\<le> (GREATEST n''.\n   n \\<le> n'' \\<and>\n   n'' \\<le> n' \\<and>\n   (\\<exists>x\\<ge>1.\n       card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf)) \\<and>\n                             Q i} =\n                        x * cnf)\n\ngoal (1 subgoal):\n 1. (GREATEST n''.\n        n \\<le> n'' \\<and>\n        n'' \\<le> n' \\<and>\n        (\\<exists>x\\<ge>1.\n            card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n    \\<le> n'", "by auto"], ["proof (state)\nthis:\n  (GREATEST n''.\n      n \\<le> n'' \\<and>\n      n'' \\<le> n' \\<and>\n      (\\<exists>x\\<ge>1.\n          card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n  \\<le> n'\n\ngoal (1 subgoal):\n 1. \\<not> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}\n           \\<le> cnf \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  card\n   {i. n < i \\<and>\n       i \\<le> (GREATEST n''.\n                   n \\<le> n'' \\<and>\n                   n'' \\<le> n' \\<and>\n                   (\\<exists>x\\<ge>1.\n                       card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                       x * cnf)) \\<and>\n       P i}\n  \\<le> card\n         {i. n < i \\<and>\n             i \\<le> (GREATEST n''.\n                         n \\<le> n'' \\<and>\n                         n'' \\<le> n' \\<and>\n                         (\\<exists>x\\<ge>1.\n                             card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                             x * cnf)) \\<and>\n             Q i}\n  card\n   {i. (GREATEST n''.\n           n \\<le> n'' \\<and>\n           n'' \\<le> n' \\<and>\n           (\\<exists>x\\<ge>1.\n               card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n       < i \\<and>\n       i \\<le> n' \\<and> P i}\n  \\<le> cnf\n  (GREATEST n''.\n      n \\<le> n'' \\<and>\n      n'' \\<le> n' \\<and>\n      (\\<exists>x\\<ge>1.\n          card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n  \\<le> n'", "have \"ccard n n' P\\<le>ccard n n' Q + cnf\""], ["proof (prove)\nusing this:\n  card\n   {i. n < i \\<and>\n       i \\<le> (GREATEST n''.\n                   n \\<le> n'' \\<and>\n                   n'' \\<le> n' \\<and>\n                   (\\<exists>x\\<ge>1.\n                       card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                       x * cnf)) \\<and>\n       P i}\n  \\<le> card\n         {i. n < i \\<and>\n             i \\<le> (GREATEST n''.\n                         n \\<le> n'' \\<and>\n                         n'' \\<le> n' \\<and>\n                         (\\<exists>x\\<ge>1.\n                             card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                             x * cnf)) \\<and>\n             Q i}\n  card\n   {i. (GREATEST n''.\n           n \\<le> n'' \\<and>\n           n'' \\<le> n' \\<and>\n           (\\<exists>x\\<ge>1.\n               card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n       < i \\<and>\n       i \\<le> n' \\<and> P i}\n  \\<le> cnf\n  (GREATEST n''.\n      n \\<le> n'' \\<and>\n      n'' \\<le> n' \\<and>\n      (\\<exists>x\\<ge>1.\n          card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n  \\<le> n'\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n    \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> Q i} + cnf", "using ccard_sum[of ?g n' n]"], ["proof (prove)\nusing this:\n  card\n   {i. n < i \\<and>\n       i \\<le> (GREATEST n''.\n                   n \\<le> n'' \\<and>\n                   n'' \\<le> n' \\<and>\n                   (\\<exists>x\\<ge>1.\n                       card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                       x * cnf)) \\<and>\n       P i}\n  \\<le> card\n         {i. n < i \\<and>\n             i \\<le> (GREATEST n''.\n                         n \\<le> n'' \\<and>\n                         n'' \\<le> n' \\<and>\n                         (\\<exists>x\\<ge>1.\n                             card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                             x * cnf)) \\<and>\n             Q i}\n  card\n   {i. (GREATEST n''.\n           n \\<le> n'' \\<and>\n           n'' \\<le> n' \\<and>\n           (\\<exists>x\\<ge>1.\n               card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n       < i \\<and>\n       i \\<le> n' \\<and> P i}\n  \\<le> cnf\n  (GREATEST n''.\n      n \\<le> n'' \\<and>\n      n'' \\<le> n' \\<and>\n      (\\<exists>x\\<ge>1.\n          card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n  \\<le> n'\n  \\<lbrakk>(GREATEST n''.\n               n \\<le> n'' \\<and>\n               n'' \\<le> n' \\<and>\n               (\\<exists>x\\<ge>1.\n                   card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n           \\<le> n';\n   n \\<le> (GREATEST n''.\n               n \\<le> n'' \\<and>\n               n'' \\<le> n' \\<and>\n               (\\<exists>x\\<ge>1.\n                   card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                   x * cnf))\\<rbrakk>\n  \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> ?P i} =\n                    card\n                     {i. n < i \\<and>\n                         i \\<le> (GREATEST n''.\n                                     n \\<le> n'' \\<and>\n                                     n'' \\<le> n' \\<and>\n                                     (\\<exists>x\\<ge>1.\n   card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf)) \\<and>\n                         ?P i} +\n                    card\n                     {i. (GREATEST n''.\n                             n \\<le> n'' \\<and>\n                             n'' \\<le> n' \\<and>\n                             (\\<exists>x\\<ge>1.\n                                 card\n                                  {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                                 x * cnf))\n                         < i \\<and>\n                         i \\<le> n' \\<and> ?P i}\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n    \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> Q i} + cnf", "using \\<open>?g \\<ge> n\\<close>"], ["proof (prove)\nusing this:\n  card\n   {i. n < i \\<and>\n       i \\<le> (GREATEST n''.\n                   n \\<le> n'' \\<and>\n                   n'' \\<le> n' \\<and>\n                   (\\<exists>x\\<ge>1.\n                       card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                       x * cnf)) \\<and>\n       P i}\n  \\<le> card\n         {i. n < i \\<and>\n             i \\<le> (GREATEST n''.\n                         n \\<le> n'' \\<and>\n                         n'' \\<le> n' \\<and>\n                         (\\<exists>x\\<ge>1.\n                             card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                             x * cnf)) \\<and>\n             Q i}\n  card\n   {i. (GREATEST n''.\n           n \\<le> n'' \\<and>\n           n'' \\<le> n' \\<and>\n           (\\<exists>x\\<ge>1.\n               card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n       < i \\<and>\n       i \\<le> n' \\<and> P i}\n  \\<le> cnf\n  (GREATEST n''.\n      n \\<le> n'' \\<and>\n      n'' \\<le> n' \\<and>\n      (\\<exists>x\\<ge>1.\n          card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n  \\<le> n'\n  \\<lbrakk>(GREATEST n''.\n               n \\<le> n'' \\<and>\n               n'' \\<le> n' \\<and>\n               (\\<exists>x\\<ge>1.\n                   card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n           \\<le> n';\n   n \\<le> (GREATEST n''.\n               n \\<le> n'' \\<and>\n               n'' \\<le> n' \\<and>\n               (\\<exists>x\\<ge>1.\n                   card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                   x * cnf))\\<rbrakk>\n  \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> ?P i} =\n                    card\n                     {i. n < i \\<and>\n                         i \\<le> (GREATEST n''.\n                                     n \\<le> n'' \\<and>\n                                     n'' \\<le> n' \\<and>\n                                     (\\<exists>x\\<ge>1.\n   card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf)) \\<and>\n                         ?P i} +\n                    card\n                     {i. (GREATEST n''.\n                             n \\<le> n'' \\<and>\n                             n'' \\<le> n' \\<and>\n                             (\\<exists>x\\<ge>1.\n                                 card\n                                  {i. n < i \\<and> i \\<le> n'' \\<and> Q i} =\n                                 x * cnf))\n                         < i \\<and>\n                         i \\<le> n' \\<and> ?P i}\n  n \\<le> (GREATEST n''.\n              n \\<le> n'' \\<and>\n              n'' \\<le> n' \\<and>\n              (\\<exists>x\\<ge>1.\n                  card {i. n < i \\<and> i \\<le> n'' \\<and> Q i} = x * cnf))\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n    \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> Q i} + cnf", "by simp"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n  \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> Q i} + cnf\n\ngoal (1 subgoal):\n 1. \\<not> card {i. n < i \\<and> i \\<le> n' \\<and> Q i}\n           \\<le> cnf \\<Longrightarrow>\n    False", "with assms"], ["proof (chain)\npicking this:\n  n \\<le> n'\n  card {i. n < i \\<and> i \\<le> n' \\<and> Q i} + cnf\n  < card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n  card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n  \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> Q i} + cnf", "show False"], ["proof (prove)\nusing this:\n  n \\<le> n'\n  card {i. n < i \\<and> i \\<le> n' \\<and> Q i} + cnf\n  < card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n  card {i. n < i \\<and> i \\<le> n' \\<and> P i}\n  \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> Q i} + cnf\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>n' n''.\n     cnf < card {i. n' < i \\<and> i \\<le> n'' \\<and> P i} \\<and>\n     card {i. n' < i \\<and> i \\<le> n'' \\<and> Q i} \\<le> cnf\n\ngoal:\nNo subgoals!", "qed"], ["", "locale honest =\n  fixes bc:: \"('a list) seq\"\n    and n::nat\n  assumes growth: \"n'\\<noteq>0 \\<Longrightarrow> n'\\<le>n \\<Longrightarrow> bc n' = bc (n'-1) \\<or> (\\<exists>b. bc n' = bc (n' - 1) @ b)\"\nbegin"], ["", "end"], ["", "locale dishonest =\n  fixes bc:: \"('a list) seq\"\n    and mining::\"bool seq\"\n  assumes growth: \"\\<And>n::nat. prefix (bc (Suc n)) (bc n) \\<or> (\\<exists>b::'a. bc (Suc n) = bc n @ [b]) \\<and> mining (Suc n)\"\nbegin"], ["", "lemma prefix_save:\n  assumes \"prefix sbc (bc n')\"\n    and \"\\<forall>n'''>n'. n'''\\<le>n'' \\<longrightarrow> length (bc n''') \\<ge> length sbc\"\n  shows \"n''\\<ge>n' \\<Longrightarrow> prefix sbc (bc n'')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n' \\<le> n'' \\<Longrightarrow> prefix sbc (bc n'')", "proof (induction n'' rule: dec_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. prefix sbc (bc n')\n 2. \\<And>n.\n       \\<lbrakk>n' \\<le> n; n < n''; prefix sbc (bc n)\\<rbrakk>\n       \\<Longrightarrow> prefix sbc (bc (Suc n))", "case base"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. prefix sbc (bc n')\n 2. \\<And>n.\n       \\<lbrakk>n' \\<le> n; n < n''; prefix sbc (bc n)\\<rbrakk>\n       \\<Longrightarrow> prefix sbc (bc (Suc n))", "with assms(1)"], ["proof (chain)\npicking this:\n  prefix sbc (bc n')", "show ?case"], ["proof (prove)\nusing this:\n  prefix sbc (bc n')\n\ngoal (1 subgoal):\n 1. prefix sbc (bc n')", "by simp"], ["proof (state)\nthis:\n  prefix sbc (bc n')\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>n' \\<le> n; n < n''; prefix sbc (bc n)\\<rbrakk>\n       \\<Longrightarrow> prefix sbc (bc (Suc n))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>n' \\<le> n; n < n''; prefix sbc (bc n)\\<rbrakk>\n       \\<Longrightarrow> prefix sbc (bc (Suc n))", "case (step n)"], ["proof (state)\nthis:\n  n' \\<le> n\n  n < n''\n  prefix sbc (bc n)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>n' \\<le> n; n < n''; prefix sbc (bc n)\\<rbrakk>\n       \\<Longrightarrow> prefix sbc (bc (Suc n))", "from growth[of n]"], ["proof (chain)\npicking this:\n  prefix (bc (Suc n)) (bc n) \\<or>\n  (\\<exists>b. bc (Suc n) = bc n @ [b]) \\<and> mining (Suc n)", "show ?case"], ["proof (prove)\nusing this:\n  prefix (bc (Suc n)) (bc n) \\<or>\n  (\\<exists>b. bc (Suc n) = bc n @ [b]) \\<and> mining (Suc n)\n\ngoal (1 subgoal):\n 1. prefix sbc (bc (Suc n))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. prefix (bc (Suc n)) (bc n) \\<Longrightarrow> prefix sbc (bc (Suc n))\n 2. (\\<exists>b. bc (Suc n) = bc n @ [b]) \\<and>\n    mining (Suc n) \\<Longrightarrow>\n    prefix sbc (bc (Suc n))", "assume \"prefix (bc (Suc n)) (bc n)\""], ["proof (state)\nthis:\n  prefix (bc (Suc n)) (bc n)\n\ngoal (2 subgoals):\n 1. prefix (bc (Suc n)) (bc n) \\<Longrightarrow> prefix sbc (bc (Suc n))\n 2. (\\<exists>b. bc (Suc n) = bc n @ [b]) \\<and>\n    mining (Suc n) \\<Longrightarrow>\n    prefix sbc (bc (Suc n))", "moreover"], ["proof (state)\nthis:\n  prefix (bc (Suc n)) (bc n)\n\ngoal (2 subgoals):\n 1. prefix (bc (Suc n)) (bc n) \\<Longrightarrow> prefix sbc (bc (Suc n))\n 2. (\\<exists>b. bc (Suc n) = bc n @ [b]) \\<and>\n    mining (Suc n) \\<Longrightarrow>\n    prefix sbc (bc (Suc n))", "from step.hyps"], ["proof (chain)\npicking this:\n  n' \\<le> n\n  n < n''", "have \"length (bc (Suc n)) \\<ge> length sbc\""], ["proof (prove)\nusing this:\n  n' \\<le> n\n  n < n''\n\ngoal (1 subgoal):\n 1. length sbc \\<le> length (bc (Suc n))", "using assms(2)"], ["proof (prove)\nusing this:\n  n' \\<le> n\n  n < n''\n  \\<forall>n'''>n'.\n     n''' \\<le> n'' \\<longrightarrow> length sbc \\<le> length (bc n''')\n\ngoal (1 subgoal):\n 1. length sbc \\<le> length (bc (Suc n))", "by simp"], ["proof (state)\nthis:\n  length sbc \\<le> length (bc (Suc n))\n\ngoal (2 subgoals):\n 1. prefix (bc (Suc n)) (bc n) \\<Longrightarrow> prefix sbc (bc (Suc n))\n 2. (\\<exists>b. bc (Suc n) = bc n @ [b]) \\<and>\n    mining (Suc n) \\<Longrightarrow>\n    prefix sbc (bc (Suc n))", "ultimately"], ["proof (chain)\npicking this:\n  prefix (bc (Suc n)) (bc n)\n  length sbc \\<le> length (bc (Suc n))", "show ?thesis"], ["proof (prove)\nusing this:\n  prefix (bc (Suc n)) (bc n)\n  length sbc \\<le> length (bc (Suc n))\n\ngoal (1 subgoal):\n 1. prefix sbc (bc (Suc n))", "using step.IH"], ["proof (prove)\nusing this:\n  prefix (bc (Suc n)) (bc n)\n  length sbc \\<le> length (bc (Suc n))\n  prefix sbc (bc n)\n\ngoal (1 subgoal):\n 1. prefix sbc (bc (Suc n))", "using prefix_length_prefix"], ["proof (prove)\nusing this:\n  prefix (bc (Suc n)) (bc n)\n  length sbc \\<le> length (bc (Suc n))\n  prefix sbc (bc n)\n  \\<lbrakk>prefix ?ps ?xs; prefix ?qs ?xs;\n   length ?ps \\<le> length ?qs\\<rbrakk>\n  \\<Longrightarrow> prefix ?ps ?qs\n\ngoal (1 subgoal):\n 1. prefix sbc (bc (Suc n))", "by auto"], ["proof (state)\nthis:\n  prefix sbc (bc (Suc n))\n\ngoal (1 subgoal):\n 1. (\\<exists>b. bc (Suc n) = bc n @ [b]) \\<and>\n    mining (Suc n) \\<Longrightarrow>\n    prefix sbc (bc (Suc n))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<exists>b. bc (Suc n) = bc n @ [b]) \\<and>\n    mining (Suc n) \\<Longrightarrow>\n    prefix sbc (bc (Suc n))", "assume \"(\\<exists>b. bc (Suc n) = bc n @ [b]) \\<and> mining (Suc n)\""], ["proof (state)\nthis:\n  (\\<exists>b. bc (Suc n) = bc n @ [b]) \\<and> mining (Suc n)\n\ngoal (1 subgoal):\n 1. (\\<exists>b. bc (Suc n) = bc n @ [b]) \\<and>\n    mining (Suc n) \\<Longrightarrow>\n    prefix sbc (bc (Suc n))", "with step.IH"], ["proof (chain)\npicking this:\n  prefix sbc (bc n)\n  (\\<exists>b. bc (Suc n) = bc n @ [b]) \\<and> mining (Suc n)", "show ?thesis"], ["proof (prove)\nusing this:\n  prefix sbc (bc n)\n  (\\<exists>b. bc (Suc n) = bc n @ [b]) \\<and> mining (Suc n)\n\ngoal (1 subgoal):\n 1. prefix sbc (bc (Suc n))", "by auto"], ["proof (state)\nthis:\n  prefix sbc (bc (Suc n))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  prefix sbc (bc (Suc n))\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem prefix_length:\n  assumes \"prefix sbc (bc n')\" and \"\\<not> prefix sbc (bc n'')\" and \"n'\\<le>n''\"\n  shows \"\\<exists>n'''>n'. n'''\\<le>n'' \\<and> length (bc n''') < length sbc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>n'''>n'. n''' \\<le> n'' \\<and> length (bc n''') < length sbc", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>n'''>n'.\n               n''' \\<le> n'' \\<and>\n               length (bc n''') < length sbc) \\<Longrightarrow>\n    False", "assume \"\\<not> (\\<exists>n'''>n'. n'''\\<le>n'' \\<and> length (bc n''') < length sbc)\""], ["proof (state)\nthis:\n  \\<not> (\\<exists>n'''>n'.\n             n''' \\<le> n'' \\<and> length (bc n''') < length sbc)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>n'''>n'.\n               n''' \\<le> n'' \\<and>\n               length (bc n''') < length sbc) \\<Longrightarrow>\n    False", "hence \"\\<forall>n'''>n'. n'''\\<le>n'' \\<longrightarrow> length (bc n''') \\<ge> length sbc\""], ["proof (prove)\nusing this:\n  \\<not> (\\<exists>n'''>n'.\n             n''' \\<le> n'' \\<and> length (bc n''') < length sbc)\n\ngoal (1 subgoal):\n 1. \\<forall>n'''>n'.\n       n''' \\<le> n'' \\<longrightarrow> length sbc \\<le> length (bc n''')", "by auto"], ["proof (state)\nthis:\n  \\<forall>n'''>n'.\n     n''' \\<le> n'' \\<longrightarrow> length sbc \\<le> length (bc n''')\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>n'''>n'.\n               n''' \\<le> n'' \\<and>\n               length (bc n''') < length sbc) \\<Longrightarrow>\n    False", "with assms"], ["proof (chain)\npicking this:\n  prefix sbc (bc n')\n  \\<not> prefix sbc (bc n'')\n  n' \\<le> n''\n  \\<forall>n'''>n'.\n     n''' \\<le> n'' \\<longrightarrow> length sbc \\<le> length (bc n''')", "have \"prefix sbc (bc n'')\""], ["proof (prove)\nusing this:\n  prefix sbc (bc n')\n  \\<not> prefix sbc (bc n'')\n  n' \\<le> n''\n  \\<forall>n'''>n'.\n     n''' \\<le> n'' \\<longrightarrow> length sbc \\<le> length (bc n''')\n\ngoal (1 subgoal):\n 1. prefix sbc (bc n'')", "using prefix_save[of sbc n' n'']"], ["proof (prove)\nusing this:\n  prefix sbc (bc n')\n  \\<not> prefix sbc (bc n'')\n  n' \\<le> n''\n  \\<forall>n'''>n'.\n     n''' \\<le> n'' \\<longrightarrow> length sbc \\<le> length (bc n''')\n  \\<lbrakk>prefix sbc (bc n');\n   \\<forall>n'''>n'.\n      n''' \\<le> n'' \\<longrightarrow> length sbc \\<le> length (bc n''');\n   n' \\<le> n''\\<rbrakk>\n  \\<Longrightarrow> prefix sbc (bc n'')\n\ngoal (1 subgoal):\n 1. prefix sbc (bc n'')", "by simp"], ["proof (state)\nthis:\n  prefix sbc (bc n'')\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>n'''>n'.\n               n''' \\<le> n'' \\<and>\n               length (bc n''') < length sbc) \\<Longrightarrow>\n    False", "with assms (2)"], ["proof (chain)\npicking this:\n  \\<not> prefix sbc (bc n'')\n  prefix sbc (bc n'')", "show False"], ["proof (prove)\nusing this:\n  \\<not> prefix sbc (bc n'')\n  prefix sbc (bc n'')\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem grow_mining:\n  assumes \"length (bc n) < length (bc (Suc n))\"\n  shows \"mining (Suc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mining (Suc n)", "using assms growth leD prefix_length_le"], ["proof (prove)\nusing this:\n  length (bc n) < length (bc (Suc n))\n  prefix (bc (Suc ?n)) (bc ?n) \\<or>\n  (\\<exists>b. bc (Suc ?n) = bc ?n @ [b]) \\<and> mining (Suc ?n)\n  ?y \\<le> ?x \\<Longrightarrow> \\<not> ?x < ?y\n  prefix ?xs ?ys \\<Longrightarrow> length ?xs \\<le> length ?ys\n\ngoal (1 subgoal):\n 1. mining (Suc n)", "by blast"], ["", "lemma length_suc_length:\n  \"length (bc (Suc n)) \\<le> Suc (length (bc n))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length (bc (Suc n)) \\<le> Suc (length (bc n))", "by (metis eq_iff growth le_SucI length_append_singleton prefix_length_le)"], ["", "end"], ["", "locale dishonest_growth =\n  fixes bc:: \"nat seq\"\n    and mining:: \"nat \\<Rightarrow> bool\"\n  assumes as1: \"\\<And>n::nat. bc (Suc n) \\<le> Suc (bc n)\"\n    and as2: \"\\<And>n::nat. bc (Suc n) > bc n \\<Longrightarrow> mining (Suc n)\"\nbegin"], ["", "end"], ["", "sublocale dishonest \\<subseteq> dishonest_growth \"\\<lambda>n. length (bc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dishonest_growth (\\<lambda>n. length (bc n)) mining", "using grow_mining length_suc_length"], ["proof (prove)\nusing this:\n  length (bc ?n) < length (bc (Suc ?n)) \\<Longrightarrow> mining (Suc ?n)\n  length (bc (Suc ?n)) \\<le> Suc (length (bc ?n))\n\ngoal (1 subgoal):\n 1. dishonest_growth (\\<lambda>n. length (bc n)) mining", "by unfold_locales auto"], ["", "context dishonest_growth\nbegin"], ["", "theorem ccard_diff_lgth:\n    \"n'\\<ge>n \\<Longrightarrow> ccard n n' (\\<lambda>n. mining n) \\<ge> (bc n' - bc n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<le> n' \\<Longrightarrow>\n    bc n' - bc n \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> mining i}", "proof (induction n' rule: dec_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. bc n - bc n \\<le> card {i. n < i \\<and> i \\<le> n \\<and> mining i}\n 2. \\<And>na.\n       \\<lbrakk>n \\<le> na; na < n';\n        bc na - bc n\n        \\<le> card {i. n < i \\<and> i \\<le> na \\<and> mining i}\\<rbrakk>\n       \\<Longrightarrow> bc (Suc na) - bc n\n                         \\<le> card\n                                {i. n < i \\<and>\n                                    i \\<le> Suc na \\<and> mining i}", "case base"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. bc n - bc n \\<le> card {i. n < i \\<and> i \\<le> n \\<and> mining i}\n 2. \\<And>na.\n       \\<lbrakk>n \\<le> na; na < n';\n        bc na - bc n\n        \\<le> card {i. n < i \\<and> i \\<le> na \\<and> mining i}\\<rbrakk>\n       \\<Longrightarrow> bc (Suc na) - bc n\n                         \\<le> card\n                                {i. n < i \\<and>\n                                    i \\<le> Suc na \\<and> mining i}", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. bc n - bc n \\<le> card {i. n < i \\<and> i \\<le> n \\<and> mining i}", "by simp"], ["proof (state)\nthis:\n  bc n - bc n \\<le> card {i. n < i \\<and> i \\<le> n \\<and> mining i}\n\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>n \\<le> na; na < n';\n        bc na - bc n\n        \\<le> card {i. n < i \\<and> i \\<le> na \\<and> mining i}\\<rbrakk>\n       \\<Longrightarrow> bc (Suc na) - bc n\n                         \\<le> card\n                                {i. n < i \\<and>\n                                    i \\<le> Suc na \\<and> mining i}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>n \\<le> na; na < n';\n        bc na - bc n\n        \\<le> card {i. n < i \\<and> i \\<le> na \\<and> mining i}\\<rbrakk>\n       \\<Longrightarrow> bc (Suc na) - bc n\n                         \\<le> card\n                                {i. n < i \\<and>\n                                    i \\<le> Suc na \\<and> mining i}", "case (step n')"], ["proof (state)\nthis:\n  n \\<le> n'\n  n' < n'\n  bc n' - bc n \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> mining i}\n\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>n \\<le> na; na < n';\n        bc na - bc n\n        \\<le> card {i. n < i \\<and> i \\<le> na \\<and> mining i}\\<rbrakk>\n       \\<Longrightarrow> bc (Suc na) - bc n\n                         \\<le> card\n                                {i. n < i \\<and>\n                                    i \\<le> Suc na \\<and> mining i}", "from as1"], ["proof (chain)\npicking this:\n  bc (Suc ?n) \\<le> Suc (bc ?n)", "have \"bc (Suc n') < Suc (bc n') \\<or> bc (Suc n') = Suc (bc n')\""], ["proof (prove)\nusing this:\n  bc (Suc ?n) \\<le> Suc (bc ?n)\n\ngoal (1 subgoal):\n 1. bc (Suc n') < Suc (bc n') \\<or> bc (Suc n') = Suc (bc n')", "using le_neq_implies_less"], ["proof (prove)\nusing this:\n  bc (Suc ?n) \\<le> Suc (bc ?n)\n  \\<lbrakk>?m \\<le> ?n; ?m \\<noteq> ?n\\<rbrakk> \\<Longrightarrow> ?m < ?n\n\ngoal (1 subgoal):\n 1. bc (Suc n') < Suc (bc n') \\<or> bc (Suc n') = Suc (bc n')", "by blast"], ["proof (state)\nthis:\n  bc (Suc n') < Suc (bc n') \\<or> bc (Suc n') = Suc (bc n')\n\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>n \\<le> na; na < n';\n        bc na - bc n\n        \\<le> card {i. n < i \\<and> i \\<le> na \\<and> mining i}\\<rbrakk>\n       \\<Longrightarrow> bc (Suc na) - bc n\n                         \\<le> card\n                                {i. n < i \\<and>\n                                    i \\<le> Suc na \\<and> mining i}", "then"], ["proof (chain)\npicking this:\n  bc (Suc n') < Suc (bc n') \\<or> bc (Suc n') = Suc (bc n')", "show ?case"], ["proof (prove)\nusing this:\n  bc (Suc n') < Suc (bc n') \\<or> bc (Suc n') = Suc (bc n')\n\ngoal (1 subgoal):\n 1. bc (Suc n') - bc n\n    \\<le> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. bc (Suc n') < Suc (bc n') \\<Longrightarrow>\n    bc (Suc n') - bc n\n    \\<le> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n 2. bc (Suc n') = Suc (bc n') \\<Longrightarrow>\n    bc (Suc n') - bc n\n    \\<le> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}", "assume \"bc (Suc n') < Suc (bc n')\""], ["proof (state)\nthis:\n  bc (Suc n') < Suc (bc n')\n\ngoal (2 subgoals):\n 1. bc (Suc n') < Suc (bc n') \\<Longrightarrow>\n    bc (Suc n') - bc n\n    \\<le> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n 2. bc (Suc n') = Suc (bc n') \\<Longrightarrow>\n    bc (Suc n') - bc n\n    \\<le> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}", "hence \"bc (Suc n') - bc n \\<le> bc n' - bc n\""], ["proof (prove)\nusing this:\n  bc (Suc n') < Suc (bc n')\n\ngoal (1 subgoal):\n 1. bc (Suc n') - bc n \\<le> bc n' - bc n", "by simp"], ["proof (state)\nthis:\n  bc (Suc n') - bc n \\<le> bc n' - bc n\n\ngoal (2 subgoals):\n 1. bc (Suc n') < Suc (bc n') \\<Longrightarrow>\n    bc (Suc n') - bc n\n    \\<le> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n 2. bc (Suc n') = Suc (bc n') \\<Longrightarrow>\n    bc (Suc n') - bc n\n    \\<le> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}", "moreover"], ["proof (state)\nthis:\n  bc (Suc n') - bc n \\<le> bc n' - bc n\n\ngoal (2 subgoals):\n 1. bc (Suc n') < Suc (bc n') \\<Longrightarrow>\n    bc (Suc n') - bc n\n    \\<le> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n 2. bc (Suc n') = Suc (bc n') \\<Longrightarrow>\n    bc (Suc n') - bc n\n    \\<le> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}", "from step.hyps"], ["proof (chain)\npicking this:\n  n \\<le> n'\n  n' < n'", "have \"ccard n (Suc n') (\\<lambda>n. mining n) \\<ge> ccard n n' (\\<lambda>n. mining n)\""], ["proof (prove)\nusing this:\n  n \\<le> n'\n  n' < n'\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> mining i}\n    \\<le> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}", "using ccard_mono[of n n' \"Suc n'\"]"], ["proof (prove)\nusing this:\n  n \\<le> n'\n  n' < n'\n  \\<lbrakk>n \\<le> n'; n' \\<le> Suc n'\\<rbrakk>\n  \\<Longrightarrow> card {i. n < i \\<and> i \\<le> n' \\<and> ?p i}\n                    \\<le> card {i. n < i \\<and> i \\<le> Suc n' \\<and> ?p i}\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n' \\<and> mining i}\n    \\<le> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}", "by simp"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> n' \\<and> mining i}\n  \\<le> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n\ngoal (2 subgoals):\n 1. bc (Suc n') < Suc (bc n') \\<Longrightarrow>\n    bc (Suc n') - bc n\n    \\<le> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n 2. bc (Suc n') = Suc (bc n') \\<Longrightarrow>\n    bc (Suc n') - bc n\n    \\<le> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}", "ultimately"], ["proof (chain)\npicking this:\n  bc (Suc n') - bc n \\<le> bc n' - bc n\n  card {i. n < i \\<and> i \\<le> n' \\<and> mining i}\n  \\<le> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}", "show ?thesis"], ["proof (prove)\nusing this:\n  bc (Suc n') - bc n \\<le> bc n' - bc n\n  card {i. n < i \\<and> i \\<le> n' \\<and> mining i}\n  \\<le> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n\ngoal (1 subgoal):\n 1. bc (Suc n') - bc n\n    \\<le> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}", "using step.IH"], ["proof (prove)\nusing this:\n  bc (Suc n') - bc n \\<le> bc n' - bc n\n  card {i. n < i \\<and> i \\<le> n' \\<and> mining i}\n  \\<le> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n  bc n' - bc n \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> mining i}\n\ngoal (1 subgoal):\n 1. bc (Suc n') - bc n\n    \\<le> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}", "by simp"], ["proof (state)\nthis:\n  bc (Suc n') - bc n\n  \\<le> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n\ngoal (1 subgoal):\n 1. bc (Suc n') = Suc (bc n') \\<Longrightarrow>\n    bc (Suc n') - bc n\n    \\<le> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. bc (Suc n') = Suc (bc n') \\<Longrightarrow>\n    bc (Suc n') - bc n\n    \\<le> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}", "assume \"bc (Suc n') = Suc (bc n')\""], ["proof (state)\nthis:\n  bc (Suc n') = Suc (bc n')\n\ngoal (1 subgoal):\n 1. bc (Suc n') = Suc (bc n') \\<Longrightarrow>\n    bc (Suc n') - bc n\n    \\<le> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}", "hence \"bc (Suc n') - bc n \\<le> Suc (bc n' - bc n)\""], ["proof (prove)\nusing this:\n  bc (Suc n') = Suc (bc n')\n\ngoal (1 subgoal):\n 1. bc (Suc n') - bc n \\<le> Suc (bc n' - bc n)", "by simp"], ["proof (state)\nthis:\n  bc (Suc n') - bc n \\<le> Suc (bc n' - bc n)\n\ngoal (1 subgoal):\n 1. bc (Suc n') = Suc (bc n') \\<Longrightarrow>\n    bc (Suc n') - bc n\n    \\<le> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}", "moreover"], ["proof (state)\nthis:\n  bc (Suc n') - bc n \\<le> Suc (bc n' - bc n)\n\ngoal (1 subgoal):\n 1. bc (Suc n') = Suc (bc n') \\<Longrightarrow>\n    bc (Suc n') - bc n\n    \\<le> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}", "from \\<open>bc (Suc n') = Suc (bc n')\\<close>"], ["proof (chain)\npicking this:\n  bc (Suc n') = Suc (bc n')", "have \"mining (Suc n')\""], ["proof (prove)\nusing this:\n  bc (Suc n') = Suc (bc n')\n\ngoal (1 subgoal):\n 1. mining (Suc n')", "using as2"], ["proof (prove)\nusing this:\n  bc (Suc n') = Suc (bc n')\n  bc ?n < bc (Suc ?n) \\<Longrightarrow> mining (Suc ?n)\n\ngoal (1 subgoal):\n 1. mining (Suc n')", "by simp"], ["proof (state)\nthis:\n  mining (Suc n')\n\ngoal (1 subgoal):\n 1. bc (Suc n') = Suc (bc n') \\<Longrightarrow>\n    bc (Suc n') - bc n\n    \\<le> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}", "with step.hyps"], ["proof (chain)\npicking this:\n  n \\<le> n'\n  n' < n'\n  mining (Suc n')", "have \"ccard n (Suc n') (\\<lambda>n. mining n) \\<ge> Suc (ccard n n' (\\<lambda>n. mining n))\""], ["proof (prove)\nusing this:\n  n \\<le> n'\n  n' < n'\n  mining (Suc n')\n\ngoal (1 subgoal):\n 1. Suc (card {i. n < i \\<and> i \\<le> n' \\<and> mining i})\n    \\<le> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}", "using ccard_inc"], ["proof (prove)\nusing this:\n  n \\<le> n'\n  n' < n'\n  mining (Suc n')\n  \\<lbrakk>?p (Suc ?n'); ?n \\<le> ?n'\\<rbrakk>\n  \\<Longrightarrow> card {i. ?n < i \\<and> i \\<le> Suc ?n' \\<and> ?p i} =\n                    Suc (card {i. ?n < i \\<and> i \\<le> ?n' \\<and> ?p i})\n\ngoal (1 subgoal):\n 1. Suc (card {i. n < i \\<and> i \\<le> n' \\<and> mining i})\n    \\<le> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}", "by simp"], ["proof (state)\nthis:\n  Suc (card {i. n < i \\<and> i \\<le> n' \\<and> mining i})\n  \\<le> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n\ngoal (1 subgoal):\n 1. bc (Suc n') = Suc (bc n') \\<Longrightarrow>\n    bc (Suc n') - bc n\n    \\<le> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}", "ultimately"], ["proof (chain)\npicking this:\n  bc (Suc n') - bc n \\<le> Suc (bc n' - bc n)\n  Suc (card {i. n < i \\<and> i \\<le> n' \\<and> mining i})\n  \\<le> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}", "show ?thesis"], ["proof (prove)\nusing this:\n  bc (Suc n') - bc n \\<le> Suc (bc n' - bc n)\n  Suc (card {i. n < i \\<and> i \\<le> n' \\<and> mining i})\n  \\<le> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n\ngoal (1 subgoal):\n 1. bc (Suc n') - bc n\n    \\<le> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}", "using step.IH"], ["proof (prove)\nusing this:\n  bc (Suc n') - bc n \\<le> Suc (bc n' - bc n)\n  Suc (card {i. n < i \\<and> i \\<le> n' \\<and> mining i})\n  \\<le> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n  bc n' - bc n \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> mining i}\n\ngoal (1 subgoal):\n 1. bc (Suc n') - bc n\n    \\<le> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}", "by simp"], ["proof (state)\nthis:\n  bc (Suc n') - bc n\n  \\<le> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  bc (Suc n') - bc n\n  \\<le> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "locale honest_growth =\n  fixes bc:: \"nat seq\"\n    and mining:: \"nat \\<Rightarrow> bool\"\n    and init:: nat\n  assumes as1: \"\\<And>n::nat. bc (Suc n) \\<ge> bc n\"\n    and as2: \"\\<And>n::nat. mining (Suc n) \\<Longrightarrow> bc (Suc n) > bc n\"\nbegin"], ["", "lemma grow_mono: \"n'\\<ge>n\\<Longrightarrow>bc n'\\<ge>bc n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<le> n' \\<Longrightarrow> bc n \\<le> bc n'", "proof (induction n' rule: dec_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. bc n \\<le> bc n\n 2. \\<And>na.\n       \\<lbrakk>n \\<le> na; na < n'; bc n \\<le> bc na\\<rbrakk>\n       \\<Longrightarrow> bc n \\<le> bc (Suc na)", "case base"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. bc n \\<le> bc n\n 2. \\<And>na.\n       \\<lbrakk>n \\<le> na; na < n'; bc n \\<le> bc na\\<rbrakk>\n       \\<Longrightarrow> bc n \\<le> bc (Suc na)", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. bc n \\<le> bc n", "by simp"], ["proof (state)\nthis:\n  bc n \\<le> bc n\n\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>n \\<le> na; na < n'; bc n \\<le> bc na\\<rbrakk>\n       \\<Longrightarrow> bc n \\<le> bc (Suc na)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>n \\<le> na; na < n'; bc n \\<le> bc na\\<rbrakk>\n       \\<Longrightarrow> bc n \\<le> bc (Suc na)", "case (step n')"], ["proof (state)\nthis:\n  n \\<le> n'\n  n' < n'\n  bc n \\<le> bc n'\n\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>n \\<le> na; na < n'; bc n \\<le> bc na\\<rbrakk>\n       \\<Longrightarrow> bc n \\<le> bc (Suc na)", "then"], ["proof (chain)\npicking this:\n  n \\<le> n'\n  n' < n'\n  bc n \\<le> bc n'", "show ?case"], ["proof (prove)\nusing this:\n  n \\<le> n'\n  n' < n'\n  bc n \\<le> bc n'\n\ngoal (1 subgoal):\n 1. bc n \\<le> bc (Suc n')", "using as1[of n']"], ["proof (prove)\nusing this:\n  n \\<le> n'\n  n' < n'\n  bc n \\<le> bc n'\n  bc n' \\<le> bc (Suc n')\n\ngoal (1 subgoal):\n 1. bc n \\<le> bc (Suc n')", "by simp"], ["proof (state)\nthis:\n  bc n \\<le> bc (Suc n')\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem ccard_diff_lgth:\n    shows \"n'\\<ge>n \\<Longrightarrow> bc n' - bc n \\<ge> ccard n n' (\\<lambda>n. mining n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<le> n' \\<Longrightarrow>\n    card {i. n < i \\<and> i \\<le> n' \\<and> mining i} \\<le> bc n' - bc n", "proof (induction n' rule: dec_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. card {i. n < i \\<and> i \\<le> n \\<and> mining i} \\<le> bc n - bc n\n 2. \\<And>na.\n       \\<lbrakk>n \\<le> na; na < n';\n        card {i. n < i \\<and> i \\<le> na \\<and> mining i}\n        \\<le> bc na - bc n\\<rbrakk>\n       \\<Longrightarrow> card\n                          {i. n < i \\<and> i \\<le> Suc na \\<and> mining i}\n                         \\<le> bc (Suc na) - bc n", "case base"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. card {i. n < i \\<and> i \\<le> n \\<and> mining i} \\<le> bc n - bc n\n 2. \\<And>na.\n       \\<lbrakk>n \\<le> na; na < n';\n        card {i. n < i \\<and> i \\<le> na \\<and> mining i}\n        \\<le> bc na - bc n\\<rbrakk>\n       \\<Longrightarrow> card\n                          {i. n < i \\<and> i \\<le> Suc na \\<and> mining i}\n                         \\<le> bc (Suc na) - bc n", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> n \\<and> mining i} \\<le> bc n - bc n", "by simp"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> n \\<and> mining i} \\<le> bc n - bc n\n\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>n \\<le> na; na < n';\n        card {i. n < i \\<and> i \\<le> na \\<and> mining i}\n        \\<le> bc na - bc n\\<rbrakk>\n       \\<Longrightarrow> card\n                          {i. n < i \\<and> i \\<le> Suc na \\<and> mining i}\n                         \\<le> bc (Suc na) - bc n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>n \\<le> na; na < n';\n        card {i. n < i \\<and> i \\<le> na \\<and> mining i}\n        \\<le> bc na - bc n\\<rbrakk>\n       \\<Longrightarrow> card\n                          {i. n < i \\<and> i \\<le> Suc na \\<and> mining i}\n                         \\<le> bc (Suc na) - bc n", "case (step n')"], ["proof (state)\nthis:\n  n \\<le> n'\n  n' < n'\n  card {i. n < i \\<and> i \\<le> n' \\<and> mining i} \\<le> bc n' - bc n\n\ngoal (1 subgoal):\n 1. \\<And>na.\n       \\<lbrakk>n \\<le> na; na < n';\n        card {i. n < i \\<and> i \\<le> na \\<and> mining i}\n        \\<le> bc na - bc n\\<rbrakk>\n       \\<Longrightarrow> card\n                          {i. n < i \\<and> i \\<le> Suc na \\<and> mining i}\n                         \\<le> bc (Suc na) - bc n", "then"], ["proof (chain)\npicking this:\n  n \\<le> n'\n  n' < n'\n  card {i. n < i \\<and> i \\<le> n' \\<and> mining i} \\<le> bc n' - bc n", "show ?case"], ["proof (prove)\nusing this:\n  n \\<le> n'\n  n' < n'\n  card {i. n < i \\<and> i \\<le> n' \\<and> mining i} \\<le> bc n' - bc n\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n    \\<le> bc (Suc n') - bc n", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>n \\<le> n'; n' < n';\n     card {i. n < i \\<and> i \\<le> n' \\<and> mining i} \\<le> bc n' - bc n;\n     ?P3\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n                      \\<le> bc (Suc n') - bc n\n 2. \\<lbrakk>n \\<le> n'; n' < n';\n     card {i. n < i \\<and> i \\<le> n' \\<and> mining i} \\<le> bc n' - bc n;\n     \\<not> ?P3\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n                      \\<le> bc (Suc n') - bc n", "assume \"mining (Suc n')\""], ["proof (state)\nthis:\n  mining (Suc n')\n\ngoal (2 subgoals):\n 1. \\<lbrakk>n \\<le> n'; n' < n';\n     card {i. n < i \\<and> i \\<le> n' \\<and> mining i} \\<le> bc n' - bc n;\n     ?P3\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n                      \\<le> bc (Suc n') - bc n\n 2. \\<lbrakk>n \\<le> n'; n' < n';\n     card {i. n < i \\<and> i \\<le> n' \\<and> mining i} \\<le> bc n' - bc n;\n     \\<not> ?P3\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n                      \\<le> bc (Suc n') - bc n", "with as2"], ["proof (chain)\npicking this:\n  mining (Suc ?n) \\<Longrightarrow> bc ?n < bc (Suc ?n)\n  mining (Suc n')", "have \"bc (Suc n') > bc n'\""], ["proof (prove)\nusing this:\n  mining (Suc ?n) \\<Longrightarrow> bc ?n < bc (Suc ?n)\n  mining (Suc n')\n\ngoal (1 subgoal):\n 1. bc n' < bc (Suc n')", "by simp"], ["proof (state)\nthis:\n  bc n' < bc (Suc n')\n\ngoal (2 subgoals):\n 1. \\<lbrakk>n \\<le> n'; n' < n';\n     card {i. n < i \\<and> i \\<le> n' \\<and> mining i} \\<le> bc n' - bc n;\n     ?P3\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n                      \\<le> bc (Suc n') - bc n\n 2. \\<lbrakk>n \\<le> n'; n' < n';\n     card {i. n < i \\<and> i \\<le> n' \\<and> mining i} \\<le> bc n' - bc n;\n     \\<not> ?P3\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n                      \\<le> bc (Suc n') - bc n", "moreover"], ["proof (state)\nthis:\n  bc n' < bc (Suc n')\n\ngoal (2 subgoals):\n 1. \\<lbrakk>n \\<le> n'; n' < n';\n     card {i. n < i \\<and> i \\<le> n' \\<and> mining i} \\<le> bc n' - bc n;\n     ?P3\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n                      \\<le> bc (Suc n') - bc n\n 2. \\<lbrakk>n \\<le> n'; n' < n';\n     card {i. n < i \\<and> i \\<le> n' \\<and> mining i} \\<le> bc n' - bc n;\n     \\<not> ?P3\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n                      \\<le> bc (Suc n') - bc n", "from step.hyps"], ["proof (chain)\npicking this:\n  n \\<le> n'\n  n' < n'", "have \"bc n'\\<ge>bc n\""], ["proof (prove)\nusing this:\n  n \\<le> n'\n  n' < n'\n\ngoal (1 subgoal):\n 1. bc n \\<le> bc n'", "using grow_mono"], ["proof (prove)\nusing this:\n  n \\<le> n'\n  n' < n'\n  ?n \\<le> ?n' \\<Longrightarrow> bc ?n \\<le> bc ?n'\n\ngoal (1 subgoal):\n 1. bc n \\<le> bc n'", "by simp"], ["proof (state)\nthis:\n  bc n \\<le> bc n'\n\ngoal (2 subgoals):\n 1. \\<lbrakk>n \\<le> n'; n' < n';\n     card {i. n < i \\<and> i \\<le> n' \\<and> mining i} \\<le> bc n' - bc n;\n     ?P3\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n                      \\<le> bc (Suc n') - bc n\n 2. \\<lbrakk>n \\<le> n'; n' < n';\n     card {i. n < i \\<and> i \\<le> n' \\<and> mining i} \\<le> bc n' - bc n;\n     \\<not> ?P3\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n                      \\<le> bc (Suc n') - bc n", "ultimately"], ["proof (chain)\npicking this:\n  bc n' < bc (Suc n')\n  bc n \\<le> bc n'", "have \"bc (Suc n') - bc n > bc n' - bc n\""], ["proof (prove)\nusing this:\n  bc n' < bc (Suc n')\n  bc n \\<le> bc n'\n\ngoal (1 subgoal):\n 1. bc n' - bc n < bc (Suc n') - bc n", "by simp"], ["proof (state)\nthis:\n  bc n' - bc n < bc (Suc n') - bc n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>n \\<le> n'; n' < n';\n     card {i. n < i \\<and> i \\<le> n' \\<and> mining i} \\<le> bc n' - bc n;\n     ?P3\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n                      \\<le> bc (Suc n') - bc n\n 2. \\<lbrakk>n \\<le> n'; n' < n';\n     card {i. n < i \\<and> i \\<le> n' \\<and> mining i} \\<le> bc n' - bc n;\n     \\<not> ?P3\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n                      \\<le> bc (Suc n') - bc n", "moreover"], ["proof (state)\nthis:\n  bc n' - bc n < bc (Suc n') - bc n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>n \\<le> n'; n' < n';\n     card {i. n < i \\<and> i \\<le> n' \\<and> mining i} \\<le> bc n' - bc n;\n     ?P3\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n                      \\<le> bc (Suc n') - bc n\n 2. \\<lbrakk>n \\<le> n'; n' < n';\n     card {i. n < i \\<and> i \\<le> n' \\<and> mining i} \\<le> bc n' - bc n;\n     \\<not> ?P3\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n                      \\<le> bc (Suc n') - bc n", "from as1"], ["proof (chain)\npicking this:\n  bc ?n \\<le> bc (Suc ?n)", "have \"bc (Suc n') - bc n \\<ge> bc n' - bc n\""], ["proof (prove)\nusing this:\n  bc ?n \\<le> bc (Suc ?n)\n\ngoal (1 subgoal):\n 1. bc n' - bc n \\<le> bc (Suc n') - bc n", "by (simp add: diff_le_mono)"], ["proof (state)\nthis:\n  bc n' - bc n \\<le> bc (Suc n') - bc n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>n \\<le> n'; n' < n';\n     card {i. n < i \\<and> i \\<le> n' \\<and> mining i} \\<le> bc n' - bc n;\n     ?P3\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n                      \\<le> bc (Suc n') - bc n\n 2. \\<lbrakk>n \\<le> n'; n' < n';\n     card {i. n < i \\<and> i \\<le> n' \\<and> mining i} \\<le> bc n' - bc n;\n     \\<not> ?P3\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n                      \\<le> bc (Suc n') - bc n", "moreover"], ["proof (state)\nthis:\n  bc n' - bc n \\<le> bc (Suc n') - bc n\n\ngoal (2 subgoals):\n 1. \\<lbrakk>n \\<le> n'; n' < n';\n     card {i. n < i \\<and> i \\<le> n' \\<and> mining i} \\<le> bc n' - bc n;\n     ?P3\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n                      \\<le> bc (Suc n') - bc n\n 2. \\<lbrakk>n \\<le> n'; n' < n';\n     card {i. n < i \\<and> i \\<le> n' \\<and> mining i} \\<le> bc n' - bc n;\n     \\<not> ?P3\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n                      \\<le> bc (Suc n') - bc n", "from \\<open>mining (Suc n')\\<close> step.hyps"], ["proof (chain)\npicking this:\n  mining (Suc n')\n  n \\<le> n'\n  n' < n'", "have \"ccard n (Suc n') (\\<lambda>n. mining n) \\<le> Suc (ccard n n' (\\<lambda>n. mining n))\""], ["proof (prove)\nusing this:\n  mining (Suc n')\n  n \\<le> n'\n  n' < n'\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n    \\<le> Suc (card {i. n < i \\<and> i \\<le> n' \\<and> mining i})", "using ccard_inc"], ["proof (prove)\nusing this:\n  mining (Suc n')\n  n \\<le> n'\n  n' < n'\n  \\<lbrakk>?p (Suc ?n'); ?n \\<le> ?n'\\<rbrakk>\n  \\<Longrightarrow> card {i. ?n < i \\<and> i \\<le> Suc ?n' \\<and> ?p i} =\n                    Suc (card {i. ?n < i \\<and> i \\<le> ?n' \\<and> ?p i})\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n    \\<le> Suc (card {i. n < i \\<and> i \\<le> n' \\<and> mining i})", "by simp"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n  \\<le> Suc (card {i. n < i \\<and> i \\<le> n' \\<and> mining i})\n\ngoal (2 subgoals):\n 1. \\<lbrakk>n \\<le> n'; n' < n';\n     card {i. n < i \\<and> i \\<le> n' \\<and> mining i} \\<le> bc n' - bc n;\n     ?P3\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n                      \\<le> bc (Suc n') - bc n\n 2. \\<lbrakk>n \\<le> n'; n' < n';\n     card {i. n < i \\<and> i \\<le> n' \\<and> mining i} \\<le> bc n' - bc n;\n     \\<not> ?P3\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n                      \\<le> bc (Suc n') - bc n", "ultimately"], ["proof (chain)\npicking this:\n  bc n' - bc n < bc (Suc n') - bc n\n  bc n' - bc n \\<le> bc (Suc n') - bc n\n  card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n  \\<le> Suc (card {i. n < i \\<and> i \\<le> n' \\<and> mining i})", "show ?thesis"], ["proof (prove)\nusing this:\n  bc n' - bc n < bc (Suc n') - bc n\n  bc n' - bc n \\<le> bc (Suc n') - bc n\n  card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n  \\<le> Suc (card {i. n < i \\<and> i \\<le> n' \\<and> mining i})\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n    \\<le> bc (Suc n') - bc n", "using step.IH"], ["proof (prove)\nusing this:\n  bc n' - bc n < bc (Suc n') - bc n\n  bc n' - bc n \\<le> bc (Suc n') - bc n\n  card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n  \\<le> Suc (card {i. n < i \\<and> i \\<le> n' \\<and> mining i})\n  card {i. n < i \\<and> i \\<le> n' \\<and> mining i} \\<le> bc n' - bc n\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n    \\<le> bc (Suc n') - bc n", "by simp"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n  \\<le> bc (Suc n') - bc n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>n \\<le> n'; n' < n';\n     card {i. n < i \\<and> i \\<le> n' \\<and> mining i} \\<le> bc n' - bc n;\n     \\<not> mining (Suc n')\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n                      \\<le> bc (Suc n') - bc n", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>n \\<le> n'; n' < n';\n     card {i. n < i \\<and> i \\<le> n' \\<and> mining i} \\<le> bc n' - bc n;\n     \\<not> mining (Suc n')\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n                      \\<le> bc (Suc n') - bc n", "assume \"\\<not> mining (Suc n')\""], ["proof (state)\nthis:\n  \\<not> mining (Suc n')\n\ngoal (1 subgoal):\n 1. \\<lbrakk>n \\<le> n'; n' < n';\n     card {i. n < i \\<and> i \\<le> n' \\<and> mining i} \\<le> bc n' - bc n;\n     \\<not> mining (Suc n')\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n                      \\<le> bc (Suc n') - bc n", "hence \"ccard n (Suc n') (\\<lambda>n. mining n) \\<le> (ccard n n' (\\<lambda>n. mining n))\""], ["proof (prove)\nusing this:\n  \\<not> mining (Suc n')\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n    \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> mining i}", "using ccard_same"], ["proof (prove)\nusing this:\n  \\<not> mining (Suc n')\n  \\<not> ?p (Suc ?n') \\<Longrightarrow>\n  card {i. ?n < i \\<and> i \\<le> ?n' \\<and> ?p i} =\n  card {i. ?n < i \\<and> i \\<le> Suc ?n' \\<and> ?p i}\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n    \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> mining i}", "by simp"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n  \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> mining i}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>n \\<le> n'; n' < n';\n     card {i. n < i \\<and> i \\<le> n' \\<and> mining i} \\<le> bc n' - bc n;\n     \\<not> mining (Suc n')\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n                      \\<le> bc (Suc n') - bc n", "moreover"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n  \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> mining i}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>n \\<le> n'; n' < n';\n     card {i. n < i \\<and> i \\<le> n' \\<and> mining i} \\<le> bc n' - bc n;\n     \\<not> mining (Suc n')\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n                      \\<le> bc (Suc n') - bc n", "from as1"], ["proof (chain)\npicking this:\n  bc ?n \\<le> bc (Suc ?n)", "have \"bc (Suc n') - bc n \\<ge> bc n' - bc n\""], ["proof (prove)\nusing this:\n  bc ?n \\<le> bc (Suc ?n)\n\ngoal (1 subgoal):\n 1. bc n' - bc n \\<le> bc (Suc n') - bc n", "by (simp add: diff_le_mono)"], ["proof (state)\nthis:\n  bc n' - bc n \\<le> bc (Suc n') - bc n\n\ngoal (1 subgoal):\n 1. \\<lbrakk>n \\<le> n'; n' < n';\n     card {i. n < i \\<and> i \\<le> n' \\<and> mining i} \\<le> bc n' - bc n;\n     \\<not> mining (Suc n')\\<rbrakk>\n    \\<Longrightarrow> card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n                      \\<le> bc (Suc n') - bc n", "ultimately"], ["proof (chain)\npicking this:\n  card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n  \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> mining i}\n  bc n' - bc n \\<le> bc (Suc n') - bc n", "show ?thesis"], ["proof (prove)\nusing this:\n  card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n  \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> mining i}\n  bc n' - bc n \\<le> bc (Suc n') - bc n\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n    \\<le> bc (Suc n') - bc n", "using step.IH"], ["proof (prove)\nusing this:\n  card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n  \\<le> card {i. n < i \\<and> i \\<le> n' \\<and> mining i}\n  bc n' - bc n \\<le> bc (Suc n') - bc n\n  card {i. n < i \\<and> i \\<le> n' \\<and> mining i} \\<le> bc n' - bc n\n\ngoal (1 subgoal):\n 1. card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n    \\<le> bc (Suc n') - bc n", "by simp"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n  \\<le> bc (Suc n') - bc n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card {i. n < i \\<and> i \\<le> Suc n' \\<and> mining i}\n  \\<le> bc (Suc n') - bc n\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "locale bounded_growth = hg: honest_growth hbc hmining + dg: dishonest_growth dbc dmining\n    for hbc:: \"nat seq\"\n    and dbc:: \"nat seq\"\n    and hmining:: \"nat \\<Rightarrow> bool\"\n    and dmining:: \"nat \\<Rightarrow> bool\"\n    and sbc::nat\n    and cnf::nat +\n  assumes fair: \"\\<And>n n'. ccard n n' (\\<lambda>n. dmining n) > cnf \\<Longrightarrow> ccard n n' (\\<lambda>n. hmining n) > cnf\"\n    and a2: \"hbc 0 \\<ge> sbc+cnf\"\n    and a3: \"dbc 0 < sbc\"\nbegin"], ["", "theorem hn_upper_bound: shows \"dbc n < hbc n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dbc n < hbc n", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> dbc n < hbc n \\<Longrightarrow> False", "assume \"\\<not> dbc n < hbc n\""], ["proof (state)\nthis:\n  \\<not> dbc n < hbc n\n\ngoal (1 subgoal):\n 1. \\<not> dbc n < hbc n \\<Longrightarrow> False", "hence \"dbc n \\<ge> hbc n\""], ["proof (prove)\nusing this:\n  \\<not> dbc n < hbc n\n\ngoal (1 subgoal):\n 1. hbc n \\<le> dbc n", "by simp"], ["proof (state)\nthis:\n  hbc n \\<le> dbc n\n\ngoal (1 subgoal):\n 1. \\<not> dbc n < hbc n \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  hbc n \\<le> dbc n\n\ngoal (1 subgoal):\n 1. \\<not> dbc n < hbc n \\<Longrightarrow> False", "from a2 a3"], ["proof (chain)\npicking this:\n  sbc + cnf \\<le> hbc 0\n  dbc 0 < sbc", "have \"hbc 0 > dbc 0 + cnf\""], ["proof (prove)\nusing this:\n  sbc + cnf \\<le> hbc 0\n  dbc 0 < sbc\n\ngoal (1 subgoal):\n 1. dbc 0 + cnf < hbc 0", "by simp"], ["proof (state)\nthis:\n  dbc 0 + cnf < hbc 0\n\ngoal (1 subgoal):\n 1. \\<not> dbc n < hbc n \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  dbc 0 + cnf < hbc 0\n\ngoal (1 subgoal):\n 1. \\<not> dbc n < hbc n \\<Longrightarrow> False", "have \"hbc n\\<ge>hbc 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hbc 0 \\<le> hbc n", "using hg.grow_mono"], ["proof (prove)\nusing this:\n  ?n \\<le> ?n' \\<Longrightarrow> hbc ?n \\<le> hbc ?n'\n\ngoal (1 subgoal):\n 1. hbc 0 \\<le> hbc n", "by simp"], ["proof (state)\nthis:\n  hbc 0 \\<le> hbc n\n\ngoal (1 subgoal):\n 1. \\<not> dbc n < hbc n \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  hbc n \\<le> dbc n\n  dbc 0 + cnf < hbc 0\n  hbc 0 \\<le> hbc n", "have \"dbc n - dbc 0 > hbc n - hbc 0 + cnf\""], ["proof (prove)\nusing this:\n  hbc n \\<le> dbc n\n  dbc 0 + cnf < hbc 0\n  hbc 0 \\<le> hbc n\n\ngoal (1 subgoal):\n 1. hbc n - hbc 0 + cnf < dbc n - dbc 0", "by simp"], ["proof (state)\nthis:\n  hbc n - hbc 0 + cnf < dbc n - dbc 0\n\ngoal (1 subgoal):\n 1. \\<not> dbc n < hbc n \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  hbc n - hbc 0 + cnf < dbc n - dbc 0\n\ngoal (1 subgoal):\n 1. \\<not> dbc n < hbc n \\<Longrightarrow> False", "have \"ccard 0 n (\\<lambda>n. hmining n) \\<le> hbc n - hbc 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {i. 0 < i \\<and> i \\<le> n \\<and> hmining i} \\<le> hbc n - hbc 0", "using hg.ccard_diff_lgth"], ["proof (prove)\nusing this:\n  ?n \\<le> ?n' \\<Longrightarrow>\n  card {i. ?n < i \\<and> i \\<le> ?n' \\<and> hmining i}\n  \\<le> hbc ?n' - hbc ?n\n\ngoal (1 subgoal):\n 1. card {i. 0 < i \\<and> i \\<le> n \\<and> hmining i} \\<le> hbc n - hbc 0", "by simp"], ["proof (state)\nthis:\n  card {i. 0 < i \\<and> i \\<le> n \\<and> hmining i} \\<le> hbc n - hbc 0\n\ngoal (1 subgoal):\n 1. \\<not> dbc n < hbc n \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  card {i. 0 < i \\<and> i \\<le> n \\<and> hmining i} \\<le> hbc n - hbc 0\n\ngoal (1 subgoal):\n 1. \\<not> dbc n < hbc n \\<Longrightarrow> False", "have \"dbc n - dbc 0 \\<le> ccard 0 n (\\<lambda>n. dmining n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dbc n - dbc 0 \\<le> card {i. 0 < i \\<and> i \\<le> n \\<and> dmining i}", "using dg.ccard_diff_lgth"], ["proof (prove)\nusing this:\n  ?n \\<le> ?n' \\<Longrightarrow>\n  dbc ?n' - dbc ?n\n  \\<le> card {i. ?n < i \\<and> i \\<le> ?n' \\<and> dmining i}\n\ngoal (1 subgoal):\n 1. dbc n - dbc 0 \\<le> card {i. 0 < i \\<and> i \\<le> n \\<and> dmining i}", "by simp"], ["proof (state)\nthis:\n  dbc n - dbc 0 \\<le> card {i. 0 < i \\<and> i \\<le> n \\<and> dmining i}\n\ngoal (1 subgoal):\n 1. \\<not> dbc n < hbc n \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  hbc n - hbc 0 + cnf < dbc n - dbc 0\n  card {i. 0 < i \\<and> i \\<le> n \\<and> hmining i} \\<le> hbc n - hbc 0\n  dbc n - dbc 0 \\<le> card {i. 0 < i \\<and> i \\<le> n \\<and> dmining i}", "have \"ccard 0 n (\\<lambda>n. dmining n) > ccard 0 n (\\<lambda>n. hmining n) + cnf\""], ["proof (prove)\nusing this:\n  hbc n - hbc 0 + cnf < dbc n - dbc 0\n  card {i. 0 < i \\<and> i \\<le> n \\<and> hmining i} \\<le> hbc n - hbc 0\n  dbc n - dbc 0 \\<le> card {i. 0 < i \\<and> i \\<le> n \\<and> dmining i}\n\ngoal (1 subgoal):\n 1. card {i. 0 < i \\<and> i \\<le> n \\<and> hmining i} + cnf\n    < card {i. 0 < i \\<and> i \\<le> n \\<and> dmining i}", "by simp"], ["proof (state)\nthis:\n  card {i. 0 < i \\<and> i \\<le> n \\<and> hmining i} + cnf\n  < card {i. 0 < i \\<and> i \\<le> n \\<and> dmining i}\n\ngoal (1 subgoal):\n 1. \\<not> dbc n < hbc n \\<Longrightarrow> False", "hence \"\\<exists>n' n''. ccard n' n'' (\\<lambda>n. dmining n) > cnf \\<and> ccard n' n'' (\\<lambda>n. hmining n) \\<le> cnf\""], ["proof (prove)\nusing this:\n  card {i. 0 < i \\<and> i \\<le> n \\<and> hmining i} + cnf\n  < card {i. 0 < i \\<and> i \\<le> n \\<and> dmining i}\n\ngoal (1 subgoal):\n 1. \\<exists>n' n''.\n       cnf < card {i. n' < i \\<and> i \\<le> n'' \\<and> dmining i} \\<and>\n       card {i. n' < i \\<and> i \\<le> n'' \\<and> hmining i} \\<le> cnf", "using ccard_freq"], ["proof (prove)\nusing this:\n  card {i. 0 < i \\<and> i \\<le> n \\<and> hmining i} + cnf\n  < card {i. 0 < i \\<and> i \\<le> n \\<and> dmining i}\n  \\<lbrakk>?n \\<le> ?n';\n   card {i. ?n < i \\<and> i \\<le> ?n' \\<and> ?Q i} + ?cnf\n   < card {i. ?n < i \\<and> i \\<le> ?n' \\<and> ?P i}\\<rbrakk>\n  \\<Longrightarrow> \\<exists>n' n''.\n                       ?cnf\n                       < card\n                          {i. n' < i \\<and> i \\<le> n'' \\<and> ?P i} \\<and>\n                       card {i. n' < i \\<and> i \\<le> n'' \\<and> ?Q i}\n                       \\<le> ?cnf\n\ngoal (1 subgoal):\n 1. \\<exists>n' n''.\n       cnf < card {i. n' < i \\<and> i \\<le> n'' \\<and> dmining i} \\<and>\n       card {i. n' < i \\<and> i \\<le> n'' \\<and> hmining i} \\<le> cnf", "by blast"], ["proof (state)\nthis:\n  \\<exists>n' n''.\n     cnf < card {i. n' < i \\<and> i \\<le> n'' \\<and> dmining i} \\<and>\n     card {i. n' < i \\<and> i \\<le> n'' \\<and> hmining i} \\<le> cnf\n\ngoal (1 subgoal):\n 1. \\<not> dbc n < hbc n \\<Longrightarrow> False", "with fair"], ["proof (chain)\npicking this:\n  cnf\n  < card {i. ?n < i \\<and> i \\<le> ?n' \\<and> dmining i} \\<Longrightarrow>\n  cnf < card {i. ?n < i \\<and> i \\<le> ?n' \\<and> hmining i}\n  \\<exists>n' n''.\n     cnf < card {i. n' < i \\<and> i \\<le> n'' \\<and> dmining i} \\<and>\n     card {i. n' < i \\<and> i \\<le> n'' \\<and> hmining i} \\<le> cnf", "show False"], ["proof (prove)\nusing this:\n  cnf\n  < card {i. ?n < i \\<and> i \\<le> ?n' \\<and> dmining i} \\<Longrightarrow>\n  cnf < card {i. ?n < i \\<and> i \\<le> ?n' \\<and> hmining i}\n  \\<exists>n' n''.\n     cnf < card {i. n' < i \\<and> i \\<le> n'' \\<and> dmining i} \\<and>\n     card {i. n' < i \\<and> i \\<le> n'' \\<and> hmining i} \\<le> cnf\n\ngoal (1 subgoal):\n 1. False", "using leD"], ["proof (prove)\nusing this:\n  cnf\n  < card {i. ?n < i \\<and> i \\<le> ?n' \\<and> dmining i} \\<Longrightarrow>\n  cnf < card {i. ?n < i \\<and> i \\<le> ?n' \\<and> hmining i}\n  \\<exists>n' n''.\n     cnf < card {i. n' < i \\<and> i \\<le> n'' \\<and> dmining i} \\<and>\n     card {i. n' < i \\<and> i \\<le> n'' \\<and> hmining i} \\<le> cnf\n  ?y \\<le> ?x \\<Longrightarrow> \\<not> ?x < ?y\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}