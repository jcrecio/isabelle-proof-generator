{"file_name": "/home/qj213/afp-2021-10-22/thys/GPU_Kernel_PL/KPL_execution_thread.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/GPU_Kernel_PL", "problem_names": ["lemma T_Assign_helper: \n  \"\\<lbrakk> eval_bool p \\<tau> ; l' = (l \\<tau>) (Inl v := eval_word e \\<tau>) ; \\<tau>' = \\<tau> (| l := l' |) \\<rbrakk> \n  \\<Longrightarrow> step_t a (\\<tau>, (Assign (Var v) e, p)) \\<tau>'\"", "lemma T_Read_helper: \n  \"\\<lbrakk> eval_bool p \\<tau> ; l' = (l \\<tau>) (Inl v := sh \\<tau> (eval_word e \\<tau>)) ;\n  R' = R \\<tau> \\<union> { eval_word e \\<tau> } ; a \\<in> {No_Abst, Eq_Abst} ; \n  \\<tau>' = \\<tau> (| l := l', R := R' |) \\<rbrakk> \n  \\<Longrightarrow> step_t a (\\<tau>, (Read (Var v) e, p)) \\<tau>'\"", "lemma T_Write_helper:\n  \"\\<lbrakk> eval_bool p \\<tau> ; \n  sh' = (sh \\<tau>) (eval_word e1 \\<tau> := eval_word e2 \\<tau>) ;\n  W' = W \\<tau> \\<union> { eval_word e1 \\<tau> } ; a \\<in> {No_Abst, Eq_Abst} ;\n  \\<tau>' = \\<tau> (| sh := sh', W := W' |) \\<rbrakk> \n  \\<Longrightarrow> step_t a (\\<tau>, (Write e1 e2, p)) \\<tau>'\""], "translations": [["", "lemma T_Assign_helper: \n  \"\\<lbrakk> eval_bool p \\<tau> ; l' = (l \\<tau>) (Inl v := eval_word e \\<tau>) ; \\<tau>' = \\<tau> (| l := l' |) \\<rbrakk> \n  \\<Longrightarrow> step_t a (\\<tau>, (Assign (Var v) e, p)) \\<tau>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>eval_bool p \\<tau>;\n     l' = (l \\<tau>)(Inl v := eval_word e \\<tau>);\n     \\<tau>' = \\<tau>\\<lparr>l := l'\\<rparr>\\<rbrakk>\n    \\<Longrightarrow> step_t a (\\<tau>, Assign (Var v) e, p) \\<tau>'", "by (auto simp add: step_t.T_Assign)"], ["", "text \\<open>Rephrasing \\<open>T_Read\\<close> to make it more usable\\<close>"], ["", "lemma T_Read_helper: \n  \"\\<lbrakk> eval_bool p \\<tau> ; l' = (l \\<tau>) (Inl v := sh \\<tau> (eval_word e \\<tau>)) ;\n  R' = R \\<tau> \\<union> { eval_word e \\<tau> } ; a \\<in> {No_Abst, Eq_Abst} ; \n  \\<tau>' = \\<tau> (| l := l', R := R' |) \\<rbrakk> \n  \\<Longrightarrow> step_t a (\\<tau>, (Read (Var v) e, p)) \\<tau>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>eval_bool p \\<tau>;\n     l' = (l \\<tau>)(Inl v := sh \\<tau> (eval_word e \\<tau>));\n     R' = R \\<tau> \\<union> {eval_word e \\<tau>};\n     a \\<in> {No_Abst, Eq_Abst};\n     \\<tau>' = \\<tau>\\<lparr>l := l', R := R'\\<rparr>\\<rbrakk>\n    \\<Longrightarrow> step_t a (\\<tau>, Read (Var v) e, p) \\<tau>'", "by (auto simp add: step_t.T_Read)"], ["", "text \\<open>Rephrasing \\<open>T_Write\\<close> to make it more usable\\<close>"], ["", "lemma T_Write_helper:\n  \"\\<lbrakk> eval_bool p \\<tau> ; \n  sh' = (sh \\<tau>) (eval_word e1 \\<tau> := eval_word e2 \\<tau>) ;\n  W' = W \\<tau> \\<union> { eval_word e1 \\<tau> } ; a \\<in> {No_Abst, Eq_Abst} ;\n  \\<tau>' = \\<tau> (| sh := sh', W := W' |) \\<rbrakk> \n  \\<Longrightarrow> step_t a (\\<tau>, (Write e1 e2, p)) \\<tau>'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>eval_bool p \\<tau>;\n     sh' = (sh \\<tau>)(eval_word e1 \\<tau> := eval_word e2 \\<tau>);\n     W' = W \\<tau> \\<union> {eval_word e1 \\<tau>};\n     a \\<in> {No_Abst, Eq_Abst};\n     \\<tau>' = \\<tau>\\<lparr>sh := sh', W := W'\\<rparr>\\<rbrakk>\n    \\<Longrightarrow> step_t a (\\<tau>, Write e1 e2, p) \\<tau>'", "by (auto simp add: step_t.T_Write)"], ["", "end"]]}