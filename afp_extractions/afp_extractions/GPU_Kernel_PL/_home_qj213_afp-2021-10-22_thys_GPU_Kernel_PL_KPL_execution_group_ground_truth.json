{"file_name": "/home/qj213/afp-2021-10-22/thys/GPU_Kernel_PL/KPL_execution_group.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/GPU_Kernel_PL", "problem_names": ["lemma no_races_imp_no_write_overlap: \n  \"\\<not> (group_race T \\<gamma>) \\<Longrightarrow> \n  \\<forall>i \\<in> T. \\<forall>j \\<in> T. \n  i \\<noteq> j \\<longrightarrow> W (the (\\<gamma> i)) \\<inter> W (the (\\<gamma> j)) = {}\"", "lemma merge_is_unique:\n  assumes \"dom \\<gamma> = T\"\n  assumes \"\\<not> (group_race T \\<gamma>)\"\n  shows \"\\<exists>!z'. pre_merge T \\<gamma> z z'\"", "lemma G_No_Op_helper:\n  \"\\<lbrakk> \\<forall>j \\<in> the (T i). \\<not> (eval_bool p (the (\\<gamma> \\<^sub>t\\<^sub>s j))) ; \\<gamma> = \\<gamma>' \\<rbrakk>\n  \\<Longrightarrow> step_g a i T (\\<gamma>, (Barrier, p)) (Some \\<gamma>')\""], "translations": [["", "lemma no_races_imp_no_write_overlap: \n  \"\\<not> (group_race T \\<gamma>) \\<Longrightarrow> \n  \\<forall>i \\<in> T. \\<forall>j \\<in> T. \n  i \\<noteq> j \\<longrightarrow> W (the (\\<gamma> i)) \\<inter> W (the (\\<gamma> j)) = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> group_race T \\<gamma> \\<Longrightarrow>\n    \\<forall>i\\<in>T.\n       \\<forall>j\\<in>T.\n          i \\<noteq> j \\<longrightarrow>\n          W (the (\\<gamma> i)) \\<inter> W (the (\\<gamma> j)) = {}", "unfolding group_race_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>j\\<in>T.\n               \\<exists>k\\<in>T.\n                  j \\<noteq> k \\<and>\n                  W (the (\\<gamma> j)) \\<inter>\n                  (R (the (\\<gamma> k)) \\<union>\n                   W (the (\\<gamma> k))) \\<noteq>\n                  {}) \\<Longrightarrow>\n    \\<forall>i\\<in>T.\n       \\<forall>j\\<in>T.\n          i \\<noteq> j \\<longrightarrow>\n          W (the (\\<gamma> i)) \\<inter> W (the (\\<gamma> j)) = {}", "by blast"], ["", "lemma merge_is_unique:\n  assumes \"dom \\<gamma> = T\"\n  assumes \"\\<not> (group_race T \\<gamma>)\"\n  shows \"\\<exists>!z'. pre_merge T \\<gamma> z z'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!z'. pre_merge T \\<gamma> z z'", "apply (insert assms)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>dom \\<gamma> = T; \\<not> group_race T \\<gamma>\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!z'. pre_merge T \\<gamma> z z'", "apply (drule no_races_imp_no_write_overlap)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>dom \\<gamma> = T;\n     \\<forall>i\\<in>T.\n        \\<forall>j\\<in>T.\n           i \\<noteq> j \\<longrightarrow>\n           W (the (\\<gamma> i)) \\<inter> W (the (\\<gamma> j)) = {}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>!z'. pre_merge T \\<gamma> z z'", "apply (intro allI ex_ex1I)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>dom \\<gamma> = T;\n     \\<forall>i\\<in>T.\n        \\<forall>j\\<in>T.\n           i \\<noteq> j \\<longrightarrow>\n           W (the (\\<gamma> i)) \\<inter> W (the (\\<gamma> j)) = {}\\<rbrakk>\n    \\<Longrightarrow> \\<exists>z'. pre_merge T \\<gamma> z z'\n 2. \\<And>z' y.\n       \\<lbrakk>dom \\<gamma> = T;\n        \\<forall>i\\<in>T.\n           \\<forall>j\\<in>T.\n              i \\<noteq> j \\<longrightarrow>\n              W (the (\\<gamma> i)) \\<inter> W (the (\\<gamma> j)) = {};\n        pre_merge T \\<gamma> z z'; pre_merge T \\<gamma> z y\\<rbrakk>\n       \\<Longrightarrow> z' = y", "apply (metis pre_merge.intros)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z' y.\n       \\<lbrakk>dom \\<gamma> = T;\n        \\<forall>i\\<in>T.\n           \\<forall>j\\<in>T.\n              i \\<noteq> j \\<longrightarrow>\n              W (the (\\<gamma> i)) \\<inter> W (the (\\<gamma> j)) = {};\n        pre_merge T \\<gamma> z z'; pre_merge T \\<gamma> z y\\<rbrakk>\n       \\<Longrightarrow> z' = y", "apply clarify"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>z' y.\n       \\<lbrakk>\\<forall>i\\<in>dom \\<gamma>.\n                   \\<forall>j\\<in>dom \\<gamma>.\n                      i \\<noteq> j \\<longrightarrow>\n                      W (the (\\<gamma> i)) \\<inter> W (the (\\<gamma> j)) =\n                      {};\n        pre_merge (dom \\<gamma>) \\<gamma> z z';\n        pre_merge (dom \\<gamma>) \\<gamma> z y; T = dom \\<gamma>\\<rbrakk>\n       \\<Longrightarrow> z' = y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z' y.\n       \\<lbrakk>\\<forall>i\\<in>dom \\<gamma>.\n                   \\<forall>j\\<in>dom \\<gamma>.\n                      i \\<noteq> j \\<longrightarrow>\n                      W (the (\\<gamma> i)) \\<inter> W (the (\\<gamma> j)) =\n                      {};\n        pre_merge (dom \\<gamma>) \\<gamma> z z';\n        pre_merge (dom \\<gamma>) \\<gamma> z y; T = dom \\<gamma>\\<rbrakk>\n       \\<Longrightarrow> z' = y", "fix z1 z2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>z' y.\n       \\<lbrakk>\\<forall>i\\<in>dom \\<gamma>.\n                   \\<forall>j\\<in>dom \\<gamma>.\n                      i \\<noteq> j \\<longrightarrow>\n                      W (the (\\<gamma> i)) \\<inter> W (the (\\<gamma> j)) =\n                      {};\n        pre_merge (dom \\<gamma>) \\<gamma> z z';\n        pre_merge (dom \\<gamma>) \\<gamma> z y; T = dom \\<gamma>\\<rbrakk>\n       \\<Longrightarrow> z' = y", "assume a: \"\\<forall>i\\<in>dom \\<gamma>. \\<forall>j\\<in>dom \\<gamma>. i \\<noteq> j \\<longrightarrow> W (the (\\<gamma> i)) \\<inter> W (the (\\<gamma> j)) = {}\""], ["proof (state)\nthis:\n  \\<forall>i\\<in>dom \\<gamma>.\n     \\<forall>j\\<in>dom \\<gamma>.\n        i \\<noteq> j \\<longrightarrow>\n        W (the (\\<gamma> i)) \\<inter> W (the (\\<gamma> j)) = {}\n\ngoal (1 subgoal):\n 1. \\<And>z' y.\n       \\<lbrakk>\\<forall>i\\<in>dom \\<gamma>.\n                   \\<forall>j\\<in>dom \\<gamma>.\n                      i \\<noteq> j \\<longrightarrow>\n                      W (the (\\<gamma> i)) \\<inter> W (the (\\<gamma> j)) =\n                      {};\n        pre_merge (dom \\<gamma>) \\<gamma> z z';\n        pre_merge (dom \\<gamma>) \\<gamma> z y; T = dom \\<gamma>\\<rbrakk>\n       \\<Longrightarrow> z' = y", "assume \"pre_merge (dom \\<gamma>) \\<gamma> z z1\" \n  and \"pre_merge (dom \\<gamma>) \\<gamma> z z2\""], ["proof (state)\nthis:\n  pre_merge (dom \\<gamma>) \\<gamma> z z1\n  pre_merge (dom \\<gamma>) \\<gamma> z z2\n\ngoal (1 subgoal):\n 1. \\<And>z' y.\n       \\<lbrakk>\\<forall>i\\<in>dom \\<gamma>.\n                   \\<forall>j\\<in>dom \\<gamma>.\n                      i \\<noteq> j \\<longrightarrow>\n                      W (the (\\<gamma> i)) \\<inter> W (the (\\<gamma> j)) =\n                      {};\n        pre_merge (dom \\<gamma>) \\<gamma> z z';\n        pre_merge (dom \\<gamma>) \\<gamma> z y; T = dom \\<gamma>\\<rbrakk>\n       \\<Longrightarrow> z' = y", "thus \"z1 = z2\""], ["proof (prove)\nusing this:\n  pre_merge (dom \\<gamma>) \\<gamma> z z1\n  pre_merge (dom \\<gamma>) \\<gamma> z z2\n\ngoal (1 subgoal):\n 1. z1 = z2", "apply (elim pre_merge_inv)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>j ja.\n       \\<lbrakk>z1 = sh (the (\\<gamma> j)) z; j \\<in> dom \\<gamma>;\n        z \\<in> W (the (\\<gamma> j)); dom \\<gamma> = dom \\<gamma>;\n        z2 = sh (the (\\<gamma> ja)) z; ja \\<in> dom \\<gamma>;\n        z \\<in> W (the (\\<gamma> ja)); dom \\<gamma> = dom \\<gamma>\\<rbrakk>\n       \\<Longrightarrow> z1 = z2\n 2. \\<And>j.\n       \\<lbrakk>z1 = sh (the (\\<gamma> j)) z; j \\<in> dom \\<gamma>;\n        z \\<in> W (the (\\<gamma> j)); dom \\<gamma> = dom \\<gamma>;\n        z2 = sh (the (\\<gamma> 0)) z;\n        \\<forall>j\\<in>dom \\<gamma>. z \\<notin> W (the (\\<gamma> j));\n        dom \\<gamma> = dom \\<gamma>\\<rbrakk>\n       \\<Longrightarrow> z1 = z2\n 3. \\<And>j.\n       \\<lbrakk>z1 = sh (the (\\<gamma> 0)) z;\n        \\<forall>j\\<in>dom \\<gamma>. z \\<notin> W (the (\\<gamma> j));\n        dom \\<gamma> = dom \\<gamma>; z2 = sh (the (\\<gamma> j)) z;\n        j \\<in> dom \\<gamma>; z \\<in> W (the (\\<gamma> j));\n        dom \\<gamma> = dom \\<gamma>\\<rbrakk>\n       \\<Longrightarrow> z1 = z2\n 4. \\<lbrakk>z1 = sh (the (\\<gamma> 0)) z;\n     \\<forall>j\\<in>dom \\<gamma>. z \\<notin> W (the (\\<gamma> j));\n     dom \\<gamma> = dom \\<gamma>; z2 = sh (the (\\<gamma> 0)) z;\n     \\<forall>j\\<in>dom \\<gamma>. z \\<notin> W (the (\\<gamma> j));\n     dom \\<gamma> = dom \\<gamma>\\<rbrakk>\n    \\<Longrightarrow> z1 = z2", "apply (rename_tac j1 j2)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>j1 j2.\n       \\<lbrakk>z1 = sh (the (\\<gamma> j1)) z; j1 \\<in> dom \\<gamma>;\n        z \\<in> W (the (\\<gamma> j1)); dom \\<gamma> = dom \\<gamma>;\n        z2 = sh (the (\\<gamma> j2)) z; j2 \\<in> dom \\<gamma>;\n        z \\<in> W (the (\\<gamma> j2)); dom \\<gamma> = dom \\<gamma>\\<rbrakk>\n       \\<Longrightarrow> z1 = z2\n 2. \\<And>j.\n       \\<lbrakk>z1 = sh (the (\\<gamma> j)) z; j \\<in> dom \\<gamma>;\n        z \\<in> W (the (\\<gamma> j)); dom \\<gamma> = dom \\<gamma>;\n        z2 = sh (the (\\<gamma> 0)) z;\n        \\<forall>j\\<in>dom \\<gamma>. z \\<notin> W (the (\\<gamma> j));\n        dom \\<gamma> = dom \\<gamma>\\<rbrakk>\n       \\<Longrightarrow> z1 = z2\n 3. \\<And>j.\n       \\<lbrakk>z1 = sh (the (\\<gamma> 0)) z;\n        \\<forall>j\\<in>dom \\<gamma>. z \\<notin> W (the (\\<gamma> j));\n        dom \\<gamma> = dom \\<gamma>; z2 = sh (the (\\<gamma> j)) z;\n        j \\<in> dom \\<gamma>; z \\<in> W (the (\\<gamma> j));\n        dom \\<gamma> = dom \\<gamma>\\<rbrakk>\n       \\<Longrightarrow> z1 = z2\n 4. \\<lbrakk>z1 = sh (the (\\<gamma> 0)) z;\n     \\<forall>j\\<in>dom \\<gamma>. z \\<notin> W (the (\\<gamma> j));\n     dom \\<gamma> = dom \\<gamma>; z2 = sh (the (\\<gamma> 0)) z;\n     \\<forall>j\\<in>dom \\<gamma>. z \\<notin> W (the (\\<gamma> j));\n     dom \\<gamma> = dom \\<gamma>\\<rbrakk>\n    \\<Longrightarrow> z1 = z2", "apply (case_tac \"j1 = j2\")"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>j1 j2.\n       \\<lbrakk>z1 = sh (the (\\<gamma> j1)) z; j1 \\<in> dom \\<gamma>;\n        z \\<in> W (the (\\<gamma> j1)); dom \\<gamma> = dom \\<gamma>;\n        z2 = sh (the (\\<gamma> j2)) z; j2 \\<in> dom \\<gamma>;\n        z \\<in> W (the (\\<gamma> j2)); dom \\<gamma> = dom \\<gamma>;\n        j1 = j2\\<rbrakk>\n       \\<Longrightarrow> z1 = z2\n 2. \\<And>j1 j2.\n       \\<lbrakk>z1 = sh (the (\\<gamma> j1)) z; j1 \\<in> dom \\<gamma>;\n        z \\<in> W (the (\\<gamma> j1)); dom \\<gamma> = dom \\<gamma>;\n        z2 = sh (the (\\<gamma> j2)) z; j2 \\<in> dom \\<gamma>;\n        z \\<in> W (the (\\<gamma> j2)); dom \\<gamma> = dom \\<gamma>;\n        j1 \\<noteq> j2\\<rbrakk>\n       \\<Longrightarrow> z1 = z2\n 3. \\<And>j.\n       \\<lbrakk>z1 = sh (the (\\<gamma> j)) z; j \\<in> dom \\<gamma>;\n        z \\<in> W (the (\\<gamma> j)); dom \\<gamma> = dom \\<gamma>;\n        z2 = sh (the (\\<gamma> 0)) z;\n        \\<forall>j\\<in>dom \\<gamma>. z \\<notin> W (the (\\<gamma> j));\n        dom \\<gamma> = dom \\<gamma>\\<rbrakk>\n       \\<Longrightarrow> z1 = z2\n 4. \\<And>j.\n       \\<lbrakk>z1 = sh (the (\\<gamma> 0)) z;\n        \\<forall>j\\<in>dom \\<gamma>. z \\<notin> W (the (\\<gamma> j));\n        dom \\<gamma> = dom \\<gamma>; z2 = sh (the (\\<gamma> j)) z;\n        j \\<in> dom \\<gamma>; z \\<in> W (the (\\<gamma> j));\n        dom \\<gamma> = dom \\<gamma>\\<rbrakk>\n       \\<Longrightarrow> z1 = z2\n 5. \\<lbrakk>z1 = sh (the (\\<gamma> 0)) z;\n     \\<forall>j\\<in>dom \\<gamma>. z \\<notin> W (the (\\<gamma> j));\n     dom \\<gamma> = dom \\<gamma>; z2 = sh (the (\\<gamma> 0)) z;\n     \\<forall>j\\<in>dom \\<gamma>. z \\<notin> W (the (\\<gamma> j));\n     dom \\<gamma> = dom \\<gamma>\\<rbrakk>\n    \\<Longrightarrow> z1 = z2", "apply auto[1]"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>j1 j2.\n       \\<lbrakk>z1 = sh (the (\\<gamma> j1)) z; j1 \\<in> dom \\<gamma>;\n        z \\<in> W (the (\\<gamma> j1)); dom \\<gamma> = dom \\<gamma>;\n        z2 = sh (the (\\<gamma> j2)) z; j2 \\<in> dom \\<gamma>;\n        z \\<in> W (the (\\<gamma> j2)); dom \\<gamma> = dom \\<gamma>;\n        j1 \\<noteq> j2\\<rbrakk>\n       \\<Longrightarrow> z1 = z2\n 2. \\<And>j.\n       \\<lbrakk>z1 = sh (the (\\<gamma> j)) z; j \\<in> dom \\<gamma>;\n        z \\<in> W (the (\\<gamma> j)); dom \\<gamma> = dom \\<gamma>;\n        z2 = sh (the (\\<gamma> 0)) z;\n        \\<forall>j\\<in>dom \\<gamma>. z \\<notin> W (the (\\<gamma> j));\n        dom \\<gamma> = dom \\<gamma>\\<rbrakk>\n       \\<Longrightarrow> z1 = z2\n 3. \\<And>j.\n       \\<lbrakk>z1 = sh (the (\\<gamma> 0)) z;\n        \\<forall>j\\<in>dom \\<gamma>. z \\<notin> W (the (\\<gamma> j));\n        dom \\<gamma> = dom \\<gamma>; z2 = sh (the (\\<gamma> j)) z;\n        j \\<in> dom \\<gamma>; z \\<in> W (the (\\<gamma> j));\n        dom \\<gamma> = dom \\<gamma>\\<rbrakk>\n       \\<Longrightarrow> z1 = z2\n 4. \\<lbrakk>z1 = sh (the (\\<gamma> 0)) z;\n     \\<forall>j\\<in>dom \\<gamma>. z \\<notin> W (the (\\<gamma> j));\n     dom \\<gamma> = dom \\<gamma>; z2 = sh (the (\\<gamma> 0)) z;\n     \\<forall>j\\<in>dom \\<gamma>. z \\<notin> W (the (\\<gamma> j));\n     dom \\<gamma> = dom \\<gamma>\\<rbrakk>\n    \\<Longrightarrow> z1 = z2", "apply simp"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>j1 j2.\n       \\<lbrakk>z1 = sh (the (\\<gamma> j1)) z; j1 \\<in> dom \\<gamma>;\n        z \\<in> W (the (\\<gamma> j1)); z2 = sh (the (\\<gamma> j2)) z;\n        j2 \\<in> dom \\<gamma>; z \\<in> W (the (\\<gamma> j2));\n        j1 \\<noteq> j2\\<rbrakk>\n       \\<Longrightarrow> sh (the (\\<gamma> j1)) z = sh (the (\\<gamma> j2)) z\n 2. \\<And>j.\n       \\<lbrakk>z1 = sh (the (\\<gamma> j)) z; j \\<in> dom \\<gamma>;\n        z \\<in> W (the (\\<gamma> j)); dom \\<gamma> = dom \\<gamma>;\n        z2 = sh (the (\\<gamma> 0)) z;\n        \\<forall>j\\<in>dom \\<gamma>. z \\<notin> W (the (\\<gamma> j));\n        dom \\<gamma> = dom \\<gamma>\\<rbrakk>\n       \\<Longrightarrow> z1 = z2\n 3. \\<And>j.\n       \\<lbrakk>z1 = sh (the (\\<gamma> 0)) z;\n        \\<forall>j\\<in>dom \\<gamma>. z \\<notin> W (the (\\<gamma> j));\n        dom \\<gamma> = dom \\<gamma>; z2 = sh (the (\\<gamma> j)) z;\n        j \\<in> dom \\<gamma>; z \\<in> W (the (\\<gamma> j));\n        dom \\<gamma> = dom \\<gamma>\\<rbrakk>\n       \\<Longrightarrow> z1 = z2\n 4. \\<lbrakk>z1 = sh (the (\\<gamma> 0)) z;\n     \\<forall>j\\<in>dom \\<gamma>. z \\<notin> W (the (\\<gamma> j));\n     dom \\<gamma> = dom \\<gamma>; z2 = sh (the (\\<gamma> 0)) z;\n     \\<forall>j\\<in>dom \\<gamma>. z \\<notin> W (the (\\<gamma> j));\n     dom \\<gamma> = dom \\<gamma>\\<rbrakk>\n    \\<Longrightarrow> z1 = z2", "apply (subgoal_tac \"W (the (\\<gamma> j1)) \\<inter> W (the (\\<gamma> j2)) = {}\")"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>j1 j2.\n       \\<lbrakk>z1 = sh (the (\\<gamma> j1)) z; j1 \\<in> dom \\<gamma>;\n        z \\<in> W (the (\\<gamma> j1)); z2 = sh (the (\\<gamma> j2)) z;\n        j2 \\<in> dom \\<gamma>; z \\<in> W (the (\\<gamma> j2));\n        j1 \\<noteq> j2;\n        W (the (\\<gamma> j1)) \\<inter> W (the (\\<gamma> j2)) = {}\\<rbrakk>\n       \\<Longrightarrow> sh (the (\\<gamma> j1)) z = sh (the (\\<gamma> j2)) z\n 2. \\<And>j1 j2.\n       \\<lbrakk>z1 = sh (the (\\<gamma> j1)) z; j1 \\<in> dom \\<gamma>;\n        z \\<in> W (the (\\<gamma> j1)); z2 = sh (the (\\<gamma> j2)) z;\n        j2 \\<in> dom \\<gamma>; z \\<in> W (the (\\<gamma> j2));\n        j1 \\<noteq> j2\\<rbrakk>\n       \\<Longrightarrow> W (the (\\<gamma> j1)) \\<inter>\n                         W (the (\\<gamma> j2)) =\n                         {}\n 3. \\<And>j.\n       \\<lbrakk>z1 = sh (the (\\<gamma> j)) z; j \\<in> dom \\<gamma>;\n        z \\<in> W (the (\\<gamma> j)); dom \\<gamma> = dom \\<gamma>;\n        z2 = sh (the (\\<gamma> 0)) z;\n        \\<forall>j\\<in>dom \\<gamma>. z \\<notin> W (the (\\<gamma> j));\n        dom \\<gamma> = dom \\<gamma>\\<rbrakk>\n       \\<Longrightarrow> z1 = z2\n 4. \\<And>j.\n       \\<lbrakk>z1 = sh (the (\\<gamma> 0)) z;\n        \\<forall>j\\<in>dom \\<gamma>. z \\<notin> W (the (\\<gamma> j));\n        dom \\<gamma> = dom \\<gamma>; z2 = sh (the (\\<gamma> j)) z;\n        j \\<in> dom \\<gamma>; z \\<in> W (the (\\<gamma> j));\n        dom \\<gamma> = dom \\<gamma>\\<rbrakk>\n       \\<Longrightarrow> z1 = z2\n 5. \\<lbrakk>z1 = sh (the (\\<gamma> 0)) z;\n     \\<forall>j\\<in>dom \\<gamma>. z \\<notin> W (the (\\<gamma> j));\n     dom \\<gamma> = dom \\<gamma>; z2 = sh (the (\\<gamma> 0)) z;\n     \\<forall>j\\<in>dom \\<gamma>. z \\<notin> W (the (\\<gamma> j));\n     dom \\<gamma> = dom \\<gamma>\\<rbrakk>\n    \\<Longrightarrow> z1 = z2", "apply auto[1]"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>j1 j2.\n       \\<lbrakk>z1 = sh (the (\\<gamma> j1)) z; j1 \\<in> dom \\<gamma>;\n        z \\<in> W (the (\\<gamma> j1)); z2 = sh (the (\\<gamma> j2)) z;\n        j2 \\<in> dom \\<gamma>; z \\<in> W (the (\\<gamma> j2));\n        j1 \\<noteq> j2\\<rbrakk>\n       \\<Longrightarrow> W (the (\\<gamma> j1)) \\<inter>\n                         W (the (\\<gamma> j2)) =\n                         {}\n 2. \\<And>j.\n       \\<lbrakk>z1 = sh (the (\\<gamma> j)) z; j \\<in> dom \\<gamma>;\n        z \\<in> W (the (\\<gamma> j)); dom \\<gamma> = dom \\<gamma>;\n        z2 = sh (the (\\<gamma> 0)) z;\n        \\<forall>j\\<in>dom \\<gamma>. z \\<notin> W (the (\\<gamma> j));\n        dom \\<gamma> = dom \\<gamma>\\<rbrakk>\n       \\<Longrightarrow> z1 = z2\n 3. \\<And>j.\n       \\<lbrakk>z1 = sh (the (\\<gamma> 0)) z;\n        \\<forall>j\\<in>dom \\<gamma>. z \\<notin> W (the (\\<gamma> j));\n        dom \\<gamma> = dom \\<gamma>; z2 = sh (the (\\<gamma> j)) z;\n        j \\<in> dom \\<gamma>; z \\<in> W (the (\\<gamma> j));\n        dom \\<gamma> = dom \\<gamma>\\<rbrakk>\n       \\<Longrightarrow> z1 = z2\n 4. \\<lbrakk>z1 = sh (the (\\<gamma> 0)) z;\n     \\<forall>j\\<in>dom \\<gamma>. z \\<notin> W (the (\\<gamma> j));\n     dom \\<gamma> = dom \\<gamma>; z2 = sh (the (\\<gamma> 0)) z;\n     \\<forall>j\\<in>dom \\<gamma>. z \\<notin> W (the (\\<gamma> j));\n     dom \\<gamma> = dom \\<gamma>\\<rbrakk>\n    \\<Longrightarrow> z1 = z2", "apply (auto simp add: a)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  z1 = z2\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The rules of Figure 5, plus an additional rule for\n  equality abstraction (Fig 7a), plus an additional rule for\n  adversarial abstraction (Fig 7b)\\<close>"], ["", "inductive step_g\n  :: \"abs_level \\<Rightarrow> gid \\<Rightarrow> (gid \\<rightharpoonup> lid set) \\<Rightarrow> (group_state \\<times> pred_stmt) \\<Rightarrow> group_state option \\<Rightarrow> bool\"\nwhere\n  G_Race:\n  \"\\<lbrakk> \\<forall>j \\<in> the (T i). step_t a (the (\\<gamma> \\<^sub>t\\<^sub>s j), (s, p)) (the (\\<gamma>' \\<^sub>t\\<^sub>s j)) ; \n    group_race (the (T i)) ((\\<gamma>' :: group_state)\\<^sub>t\\<^sub>s) \\<rbrakk>\n  \\<Longrightarrow> step_g a i T (\\<gamma>, (Basic s, p)) None\"\n| G_Basic:\n  \"\\<lbrakk> \\<forall>j \\<in> the (T i). step_t a (the (\\<gamma> \\<^sub>t\\<^sub>s j), (s, p)) (the (\\<gamma>' \\<^sub>t\\<^sub>s j)) ; \n    \\<not> (group_race (the (T i)) (\\<gamma>' \\<^sub>t\\<^sub>s)) ;\n    R_group \\<gamma>' = R_group \\<gamma> \\<union> (\\<Union>j \\<in> the (T i). ({j} \\<times> R (the (\\<gamma>' \\<^sub>t\\<^sub>s j)))) ;\n    W_group \\<gamma>' = W_group \\<gamma> \\<union> (\\<Union>j \\<in> the (T i). ({j} \\<times> W (the (\\<gamma>' \\<^sub>t\\<^sub>s j)))) \\<rbrakk>\n  \\<Longrightarrow> step_g a i T (\\<gamma>, (Basic s, p)) (Some \\<gamma>')\"\n| G_No_Op:\n  \"\\<forall>j \\<in> the (T i). \\<not> (eval_bool p (the (\\<gamma> \\<^sub>t\\<^sub>s j)))\n  \\<Longrightarrow> step_g a i T (\\<gamma>, (Barrier, p)) (Some \\<gamma>)\"\n| G_Divergence:\n  \"\\<lbrakk> j \\<noteq> k ; j \\<in> the (T i) ; k \\<in> the (T i) ;\n   eval_bool p (the (\\<gamma> \\<^sub>t\\<^sub>s j)) ; \\<not> (eval_bool p (the (\\<gamma> \\<^sub>t\\<^sub>s k))) \\<rbrakk>\n  \\<Longrightarrow> step_g a i T (\\<gamma>, (Barrier, p)) None\"\n| G_Sync:\n  \"\\<lbrakk> \\<forall>j \\<in> the (T i). eval_bool p (the (\\<gamma> \\<^sub>t\\<^sub>s j)) ;\n    \\<forall>j \\<in> the (T i). the (\\<gamma>' \\<^sub>t\\<^sub>s j) = (the (\\<gamma> \\<^sub>t\\<^sub>s j)) (| \n    sh := merge P (\\<gamma> \\<^sub>t\\<^sub>s), R := {}, W := {} |) \\<rbrakk> \n  \\<Longrightarrow> step_g No_Abst i T (\\<gamma>, (Barrier, p)) (Some \\<gamma>')\"\n| G_Sync_Eq:\n  \"\\<lbrakk> \\<forall>j \\<in> the (T i). eval_bool p (the (\\<gamma> \\<^sub>t\\<^sub>s j)) ;\n    \\<forall>j \\<in> the (T i). the (\\<gamma>' \\<^sub>t\\<^sub>s j) = (the (\\<gamma> \\<^sub>t\\<^sub>s j)) (| \n    sh := sh', R := {}, W := {} |) \\<rbrakk> \n  \\<Longrightarrow> step_g Eq_Abst i T (\\<gamma>, (Barrier, p)) (Some \\<gamma>')\"\n| G_Sync_Adv:\n  \"\\<lbrakk> \\<forall>j \\<in> the (T i). eval_bool p (the (\\<gamma> \\<^sub>t\\<^sub>s j)) ;\n    \\<forall>j \\<in> the (T i). \\<exists>sh'. the (\\<gamma>' \\<^sub>t\\<^sub>s j) = (the (\\<gamma> \\<^sub>t\\<^sub>s j)) (| \n    sh := sh', R := {}, W := {} |) \\<rbrakk> \n  \\<Longrightarrow> step_g Adv_Abst i T (\\<gamma>, (Barrier, p)) (Some \\<gamma>')\""], ["", "text \\<open>Rephrasing \\<open>G_No_Op\\<close> to make it more usable\\<close>"], ["", "lemma G_No_Op_helper:\n  \"\\<lbrakk> \\<forall>j \\<in> the (T i). \\<not> (eval_bool p (the (\\<gamma> \\<^sub>t\\<^sub>s j))) ; \\<gamma> = \\<gamma>' \\<rbrakk>\n  \\<Longrightarrow> step_g a i T (\\<gamma>, (Barrier, p)) (Some \\<gamma>')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<forall>j\\<in>the (T i).\n                \\<not> eval_bool p (the (\\<gamma> \\<^sub>t\\<^sub>s j));\n     \\<gamma> = \\<gamma>'\\<rbrakk>\n    \\<Longrightarrow> step_g a i T (\\<gamma>, Barrier, p) (Some \\<gamma>')", "by (simp add: step_g.G_No_Op)"], ["", "end"]]}