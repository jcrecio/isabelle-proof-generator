{"file_name": "/home/qj213/afp-2021-10-22/thys/Concurrent_Ref_Alg/Parallel.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Concurrent_Ref_Alg", "problem_names": ["lemmas [algebra_simps, field_simps] =\n  par.assoc\n  par.commute\n  par.left_commute", "lemmas par_assoc = par.assoc", "lemmas par_commute = par.commute", "lemmas par_skip = par.right_neutral", "lemmas par_skip_left = par.left_neutral", "lemma Inf_par_distrib: \"D \\<noteq> {} \\<Longrightarrow> (\\<Sqinter> D) \\<parallel> c = (\\<Sqinter>d\\<in>D. d \\<parallel> c)\"", "lemma par_INF_distrib: \"X \\<noteq> {} \\<Longrightarrow> c \\<parallel> (\\<Sqinter>x\\<in>X. d x) = (\\<Sqinter>x\\<in>X. c \\<parallel> d x)\"", "lemma INF_par_distrib: \"X \\<noteq> {} \\<Longrightarrow> (\\<Sqinter>x\\<in>X. d x) \\<parallel> c = (\\<Sqinter>x\\<in>X. d x \\<parallel> c)\"", "lemma INF_INF_par_distrib: \n    \"X \\<noteq> {} \\<Longrightarrow> Y \\<noteq> {} \\<Longrightarrow> (\\<Sqinter>x\\<in>X. c x) \\<parallel> (\\<Sqinter>y\\<in>Y. d y) = (\\<Sqinter>x\\<in>X. \\<Sqinter>y\\<in>Y. c x \\<parallel> d y)\"", "lemma inf_par_distrib: \"(c\\<^sub>0 \\<sqinter> c\\<^sub>1) \\<parallel> d = (c\\<^sub>0 \\<parallel> d) \\<sqinter> (c\\<^sub>1 \\<parallel> d)\"", "lemma inf_par_distrib2: \"d \\<parallel> (c\\<^sub>0 \\<sqinter> c\\<^sub>1) = (d \\<parallel> c\\<^sub>0) \\<sqinter> (d \\<parallel> c\\<^sub>1)\"", "lemma inf_par_product: \"(a \\<sqinter> b) \\<parallel> (c \\<sqinter> d) = (a \\<parallel> c) \\<sqinter> (a \\<parallel> d) \\<sqinter> (b \\<parallel> c) \\<sqinter> (b \\<parallel> d)\"", "lemma par_mono: \"c\\<^sub>1 \\<sqsubseteq> d\\<^sub>1 \\<Longrightarrow> c\\<^sub>2 \\<sqsubseteq> d\\<^sub>2 \\<Longrightarrow> c\\<^sub>1 \\<parallel> c\\<^sub>2 \\<sqsubseteq> d\\<^sub>1 \\<parallel> d\\<^sub>2\""], "translations": [["", "lemmas [algebra_simps, field_simps] =\n  par.assoc\n  par.commute\n  par.left_commute"], ["", "lemmas par_assoc = par.assoc"], ["", "(* 36 *)"], ["", "lemmas par_commute = par.commute"], ["", "(* 37 *)"], ["", "lemmas par_skip = par.right_neutral"], ["", "(* 38 *)"], ["", "lemmas par_skip_left = par.left_neutral"], ["", "(* 38 + 37 *)"], ["", "end"], ["", "subsection \\<open>Distributed parallel\\<close>"], ["", "text \\<open>\n  The parallel operator distributes across arbitrary non-empty infima.\n\\<close>"], ["", "locale par_distrib = parallel + \n  assumes par_Inf_distrib: \"D \\<noteq> {} \\<Longrightarrow> c \\<parallel> (\\<Sqinter> D) = (\\<Sqinter>d\\<in>D. c \\<parallel> d)\"    (* 39+ *)\n\nbegin"], ["", "lemma Inf_par_distrib: \"D \\<noteq> {} \\<Longrightarrow> (\\<Sqinter> D) \\<parallel> c = (\\<Sqinter>d\\<in>D. d \\<parallel> c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D \\<noteq> {} \\<Longrightarrow>\n    \\<Sqinter> D \\<parallel> c = (\\<Sqinter>d::'a\\<in>D. d \\<parallel> c)\nvariables:\n  c :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  D :: 'a set\ntype variables:\n  'a :: refinement_lattice", "using par_Inf_distrib par_commute"], ["proof (prove)\nusing this:\n  (?D::'a::refinement_lattice set) \\<noteq> {} \\<Longrightarrow>\n  (?c::'a::refinement_lattice) \\<parallel> \\<Sqinter> ?D =\n  \\<Sqinter> ((\\<parallel>) ?c ` ?D)\n  (?a::'a::refinement_lattice) \\<parallel> (?b::'a::refinement_lattice) =\n  ?b \\<parallel> ?a\n\ngoal (1 subgoal):\n 1. D \\<noteq> {} \\<Longrightarrow>\n    \\<Sqinter> D \\<parallel> c = (\\<Sqinter>d::'a\\<in>D. d \\<parallel> c)\nvariables:\n  c :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  D :: 'a set\ntype variables:\n  'a :: refinement_lattice", "by simp"], ["", "lemma par_INF_distrib: \"X \\<noteq> {} \\<Longrightarrow> c \\<parallel> (\\<Sqinter>x\\<in>X. d x) = (\\<Sqinter>x\\<in>X. c \\<parallel> d x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow>\n    c \\<parallel> \\<Sqinter> (d ` X) =\n    (\\<Sqinter>x::'b\\<in>X. c \\<parallel> d x)\nvariables:\n  d :: 'b \\<Rightarrow> 'a\n  c :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  X :: 'b set\ntype variables:\n  'b :: type\n  'a :: refinement_lattice", "using par_Inf_distrib"], ["proof (prove)\nusing this:\n  (?D::'a::refinement_lattice set) \\<noteq> {} \\<Longrightarrow>\n  (?c::'a::refinement_lattice) \\<parallel> \\<Sqinter> ?D =\n  \\<Sqinter> ((\\<parallel>) ?c ` ?D)\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow>\n    c \\<parallel> \\<Sqinter> (d ` X) =\n    (\\<Sqinter>x::'b\\<in>X. c \\<parallel> d x)\nvariables:\n  d :: 'b \\<Rightarrow> 'a\n  c :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  X :: 'b set\ntype variables:\n  'b :: type\n  'a :: refinement_lattice", "by (auto simp add: image_comp)"], ["", "lemma INF_par_distrib: \"X \\<noteq> {} \\<Longrightarrow> (\\<Sqinter>x\\<in>X. d x) \\<parallel> c = (\\<Sqinter>x\\<in>X. d x \\<parallel> c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow>\n    \\<Sqinter> (d ` X) \\<parallel> c =\n    (\\<Sqinter>x::'b\\<in>X. d x \\<parallel> c)\nvariables:\n  c :: 'a\n  d :: 'b \\<Rightarrow> 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  X :: 'b set\ntype variables:\n  'b :: type\n  'a :: refinement_lattice", "using par_INF_distrib par_commute"], ["proof (prove)\nusing this:\n  (?X::?'b::type set) \\<noteq> {} \\<Longrightarrow>\n  (?c::'a::refinement_lattice) \\<parallel>\n  \\<Sqinter> ((?d::?'b::type \\<Rightarrow> 'a::refinement_lattice) ` ?X) =\n  (\\<Sqinter>x::?'b::type\\<in>?X. ?c \\<parallel> ?d x)\n  (?a::'a::refinement_lattice) \\<parallel> (?b::'a::refinement_lattice) =\n  ?b \\<parallel> ?a\n\ngoal (1 subgoal):\n 1. X \\<noteq> {} \\<Longrightarrow>\n    \\<Sqinter> (d ` X) \\<parallel> c =\n    (\\<Sqinter>x::'b\\<in>X. d x \\<parallel> c)\nvariables:\n  c :: 'a\n  d :: 'b \\<Rightarrow> 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  X :: 'b set\ntype variables:\n  'b :: type\n  'a :: refinement_lattice", "by (metis (mono_tags, lifting) INF_cong)"], ["", "lemma INF_INF_par_distrib: \n    \"X \\<noteq> {} \\<Longrightarrow> Y \\<noteq> {} \\<Longrightarrow> (\\<Sqinter>x\\<in>X. c x) \\<parallel> (\\<Sqinter>y\\<in>Y. d y) = (\\<Sqinter>x\\<in>X. \\<Sqinter>y\\<in>Y. c x \\<parallel> d y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<noteq> {}; Y \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<Sqinter> (c ` X) \\<parallel> \\<Sqinter> (d ` Y) =\n                      (\\<Sqinter>x::'b\\<in>X.\n                          \\<Sqinter>y::'c\\<in>Y. c x \\<parallel> d y)\nvariables:\n  d :: 'c \\<Rightarrow> 'a\n  c :: 'b \\<Rightarrow> 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  Y :: 'c set\n  X :: 'b set\ntype variables:\n  'b, 'c :: type\n  'a :: refinement_lattice", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<noteq> {}; Y \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<Sqinter> (c ` X) \\<parallel> \\<Sqinter> (d ` Y) =\n                      (\\<Sqinter>x::'b\\<in>X.\n                          \\<Sqinter>y::'c\\<in>Y. c x \\<parallel> d y)\nvariables:\n  d :: 'c \\<Rightarrow> 'a\n  c :: 'b \\<Rightarrow> 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  Y :: 'c set\n  X :: 'b set\ntype variables:\n  'b, 'c :: type\n  'a :: refinement_lattice", "assume nonempty_X: \"X \\<noteq> {}\""], ["proof (state)\nthis:\n  (X::'b::type set) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<noteq> {}; Y \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<Sqinter> (c ` X) \\<parallel> \\<Sqinter> (d ` Y) =\n                      (\\<Sqinter>x::'b\\<in>X.\n                          \\<Sqinter>y::'c\\<in>Y. c x \\<parallel> d y)\nvariables:\n  d :: 'c \\<Rightarrow> 'a\n  c :: 'b \\<Rightarrow> 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  Y :: 'c set\n  X :: 'b set\ntype variables:\n  'b, 'c :: type\n  'a :: refinement_lattice", "assume nonempty_Y: \"Y \\<noteq> {}\""], ["proof (state)\nthis:\n  (Y::'c::type set) \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<noteq> {}; Y \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<Sqinter> (c ` X) \\<parallel> \\<Sqinter> (d ` Y) =\n                      (\\<Sqinter>x::'b\\<in>X.\n                          \\<Sqinter>y::'c\\<in>Y. c x \\<parallel> d y)\nvariables:\n  d :: 'c \\<Rightarrow> 'a\n  c :: 'b \\<Rightarrow> 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  Y :: 'c set\n  X :: 'b set\ntype variables:\n  'b, 'c :: type\n  'a :: refinement_lattice", "have \"(\\<Sqinter>x\\<in>X. c x) \\<parallel> (\\<Sqinter>y\\<in>Y. d y) = (\\<Sqinter>x\\<in>X. c x \\<parallel> (\\<Sqinter>y\\<in>Y. d y))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sqinter> (c ` X) \\<parallel> \\<Sqinter> (d ` Y) =\n    (\\<Sqinter>x::'b\\<in>X. c x \\<parallel> \\<Sqinter> (d ` Y))\nvariables:\n  Y :: 'c set\n  d :: 'c \\<Rightarrow> 'a\n  X :: 'b set\n  c :: 'b \\<Rightarrow> 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice\n  'b, 'c :: type", "using INF_par_distrib"], ["proof (prove)\nusing this:\n  (?X::?'b::type set) \\<noteq> {} \\<Longrightarrow>\n  \\<Sqinter> ((?d::?'b::type \\<Rightarrow> 'a::refinement_lattice) `\n              ?X) \\<parallel>\n  (?c::'a::refinement_lattice) =\n  (\\<Sqinter>x::?'b::type\\<in>?X. ?d x \\<parallel> ?c)\n\ngoal (1 subgoal):\n 1. \\<Sqinter> (c ` X) \\<parallel> \\<Sqinter> (d ` Y) =\n    (\\<Sqinter>x::'b\\<in>X. c x \\<parallel> \\<Sqinter> (d ` Y))\nvariables:\n  Y :: 'c set\n  d :: 'c \\<Rightarrow> 'a\n  X :: 'b set\n  c :: 'b \\<Rightarrow> 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice\n  'b, 'c :: type", "by (metis nonempty_X)"], ["proof (state)\nthis:\n  \\<Sqinter> ((c::'b::type \\<Rightarrow> 'a::refinement_lattice) `\n              (X::'b::type set)) \\<parallel>\n  \\<Sqinter> ((d::'c::type \\<Rightarrow> 'a::refinement_lattice) `\n              (Y::'c::type set)) =\n  (\\<Sqinter>x::'b::type\\<in>X. c x \\<parallel> \\<Sqinter> (d ` Y))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<noteq> {}; Y \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<Sqinter> (c ` X) \\<parallel> \\<Sqinter> (d ` Y) =\n                      (\\<Sqinter>x::'b\\<in>X.\n                          \\<Sqinter>y::'c\\<in>Y. c x \\<parallel> d y)\nvariables:\n  d :: 'c \\<Rightarrow> 'a\n  c :: 'b \\<Rightarrow> 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  Y :: 'c set\n  X :: 'b set\ntype variables:\n  'b, 'c :: type\n  'a :: refinement_lattice", "also"], ["proof (state)\nthis:\n  \\<Sqinter> ((c::'b::type \\<Rightarrow> 'a::refinement_lattice) `\n              (X::'b::type set)) \\<parallel>\n  \\<Sqinter> ((d::'c::type \\<Rightarrow> 'a::refinement_lattice) `\n              (Y::'c::type set)) =\n  (\\<Sqinter>x::'b::type\\<in>X. c x \\<parallel> \\<Sqinter> (d ` Y))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<noteq> {}; Y \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<Sqinter> (c ` X) \\<parallel> \\<Sqinter> (d ` Y) =\n                      (\\<Sqinter>x::'b\\<in>X.\n                          \\<Sqinter>y::'c\\<in>Y. c x \\<parallel> d y)\nvariables:\n  d :: 'c \\<Rightarrow> 'a\n  c :: 'b \\<Rightarrow> 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  Y :: 'c set\n  X :: 'b set\ntype variables:\n  'b, 'c :: type\n  'a :: refinement_lattice", "have \"\\<dots> = (\\<Sqinter>x\\<in>X. \\<Sqinter>y\\<in>Y. c x \\<parallel> d y)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sqinter>x::'b\\<in>X. c x \\<parallel> \\<Sqinter> (d ` Y)) =\n    (\\<Sqinter>x::'b\\<in>X. \\<Sqinter>y::'c\\<in>Y. c x \\<parallel> d y)\nvariables:\n  X :: 'b set\n  Y :: 'c set\n  d :: 'c \\<Rightarrow> 'a\n  c :: 'b \\<Rightarrow> 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice\n  'b, 'c :: type", "using par_INF_distrib"], ["proof (prove)\nusing this:\n  (?X::?'b::type set) \\<noteq> {} \\<Longrightarrow>\n  (?c::'a::refinement_lattice) \\<parallel>\n  \\<Sqinter> ((?d::?'b::type \\<Rightarrow> 'a::refinement_lattice) ` ?X) =\n  (\\<Sqinter>x::?'b::type\\<in>?X. ?c \\<parallel> ?d x)\n\ngoal (1 subgoal):\n 1. (\\<Sqinter>x::'b\\<in>X. c x \\<parallel> \\<Sqinter> (d ` Y)) =\n    (\\<Sqinter>x::'b\\<in>X. \\<Sqinter>y::'c\\<in>Y. c x \\<parallel> d y)\nvariables:\n  X :: 'b set\n  Y :: 'c set\n  d :: 'c \\<Rightarrow> 'a\n  c :: 'b \\<Rightarrow> 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice\n  'b, 'c :: type", "by (metis nonempty_Y)"], ["proof (state)\nthis:\n  (\\<Sqinter>x::'b::type\\<in>X::'b::type set.\n      (c::'b::type \\<Rightarrow> 'a::refinement_lattice) x \\<parallel>\n      \\<Sqinter> ((d::'c::type \\<Rightarrow> 'a::refinement_lattice) `\n                  (Y::'c::type set))) =\n  (\\<Sqinter>x::'b::type\\<in>X.\n      \\<Sqinter>y::'c::type\\<in>Y. c x \\<parallel> d y)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>X \\<noteq> {}; Y \\<noteq> {}\\<rbrakk>\n    \\<Longrightarrow> \\<Sqinter> (c ` X) \\<parallel> \\<Sqinter> (d ` Y) =\n                      (\\<Sqinter>x::'b\\<in>X.\n                          \\<Sqinter>y::'c\\<in>Y. c x \\<parallel> d y)\nvariables:\n  d :: 'c \\<Rightarrow> 'a\n  c :: 'b \\<Rightarrow> 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  Y :: 'c set\n  X :: 'b set\ntype variables:\n  'b, 'c :: type\n  'a :: refinement_lattice", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sqinter>x::'b::type\\<in>X::'b::type set.\n      (c::'b::type \\<Rightarrow> 'a::refinement_lattice) x \\<parallel>\n      \\<Sqinter> ((d::'c::type \\<Rightarrow> 'a::refinement_lattice) `\n                  (Y::'c::type set))) =\n  (\\<Sqinter>x::'b::type\\<in>X.\n      \\<Sqinter>y::'c::type\\<in>Y. c x \\<parallel> d y)\n\ngoal (1 subgoal):\n 1. \\<Sqinter> (c ` X) \\<parallel> \\<Sqinter> (d ` Y) =\n    (\\<Sqinter>x::'b\\<in>X. \\<Sqinter>y::'c\\<in>Y. c x \\<parallel> d y)\nvariables:\n  Y :: 'c set\n  d :: 'c \\<Rightarrow> 'a\n  X :: 'b set\n  c :: 'b \\<Rightarrow> 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice\n  'b, 'c :: type", "by (simp add: calculation)"], ["proof (state)\nthis:\n  \\<Sqinter> ((c::'b::type \\<Rightarrow> 'a::refinement_lattice) `\n              (X::'b::type set)) \\<parallel>\n  \\<Sqinter> ((d::'c::type \\<Rightarrow> 'a::refinement_lattice) `\n              (Y::'c::type set)) =\n  (\\<Sqinter>x::'b::type\\<in>X.\n      \\<Sqinter>y::'c::type\\<in>Y. c x \\<parallel> d y)\n\ngoal:\nNo subgoals!\nvariables:\n  d :: 'c \\<Rightarrow> 'a\n  c :: 'b \\<Rightarrow> 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  Y :: 'c set\n  X :: 'b set\ntype variables:\n  'b, 'c :: type\n  'a :: refinement_lattice", "qed"], ["", "lemma inf_par_distrib: \"(c\\<^sub>0 \\<sqinter> c\\<^sub>1) \\<parallel> d = (c\\<^sub>0 \\<parallel> d) \\<sqinter> (c\\<^sub>1 \\<parallel> d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (c\\<^sub>0 \\<sqinter> c\\<^sub>1) \\<parallel> d =\n    c\\<^sub>0 \\<parallel> d \\<sqinter> c\\<^sub>1 \\<parallel> d\nvariables:\n  c\\<^sub>0, c\\<^sub>1, d :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (c\\<^sub>0 \\<sqinter> c\\<^sub>1) \\<parallel> d =\n    c\\<^sub>0 \\<parallel> d \\<sqinter> c\\<^sub>1 \\<parallel> d\nvariables:\n  c\\<^sub>0, c\\<^sub>1, d :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "have \"(c\\<^sub>0 \\<sqinter> c\\<^sub>1) \\<parallel> d = (\\<Sqinter> {c\\<^sub>0, c\\<^sub>1}) \\<parallel> d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (c\\<^sub>0 \\<sqinter> c\\<^sub>1) \\<parallel> d =\n    \\<Sqinter> {c\\<^sub>0, c\\<^sub>1} \\<parallel> d\nvariables:\n  c\\<^sub>0, c\\<^sub>1, d :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by simp"], ["proof (state)\nthis:\n  ((c\\<^sub>0::'a::refinement_lattice) \\<sqinter>\n   (c\\<^sub>1::'a::refinement_lattice)) \\<parallel>\n  (d::'a::refinement_lattice) =\n  \\<Sqinter> {c\\<^sub>0, c\\<^sub>1} \\<parallel> d\n\ngoal (1 subgoal):\n 1. (c\\<^sub>0 \\<sqinter> c\\<^sub>1) \\<parallel> d =\n    c\\<^sub>0 \\<parallel> d \\<sqinter> c\\<^sub>1 \\<parallel> d\nvariables:\n  c\\<^sub>0, c\\<^sub>1, d :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "also"], ["proof (state)\nthis:\n  ((c\\<^sub>0::'a::refinement_lattice) \\<sqinter>\n   (c\\<^sub>1::'a::refinement_lattice)) \\<parallel>\n  (d::'a::refinement_lattice) =\n  \\<Sqinter> {c\\<^sub>0, c\\<^sub>1} \\<parallel> d\n\ngoal (1 subgoal):\n 1. (c\\<^sub>0 \\<sqinter> c\\<^sub>1) \\<parallel> d =\n    c\\<^sub>0 \\<parallel> d \\<sqinter> c\\<^sub>1 \\<parallel> d\nvariables:\n  c\\<^sub>0, c\\<^sub>1, d :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "have \"... = (\\<Sqinter>c \\<in> {c\\<^sub>0, c\\<^sub>1}. c \\<parallel> d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sqinter> {c\\<^sub>0, c\\<^sub>1} \\<parallel> d =\n    (\\<Sqinter>c::'a\\<in>{c\\<^sub>0, c\\<^sub>1}. c \\<parallel> d)\nvariables:\n  c\\<^sub>0, c\\<^sub>1, d :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "using Inf_par_distrib"], ["proof (prove)\nusing this:\n  (?D::'a::refinement_lattice set) \\<noteq> {} \\<Longrightarrow>\n  \\<Sqinter> ?D \\<parallel> (?c::'a::refinement_lattice) =\n  (\\<Sqinter>d::'a::refinement_lattice\\<in>?D. d \\<parallel> ?c)\n\ngoal (1 subgoal):\n 1. \\<Sqinter> {c\\<^sub>0, c\\<^sub>1} \\<parallel> d =\n    (\\<Sqinter>c::'a\\<in>{c\\<^sub>0, c\\<^sub>1}. c \\<parallel> d)\nvariables:\n  c\\<^sub>0, c\\<^sub>1, d :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by (meson insert_not_empty)"], ["proof (state)\nthis:\n  \\<Sqinter> {c\\<^sub>0::'a::refinement_lattice,\n              c\\<^sub>1::'a::refinement_lattice} \\<parallel>\n  (d::'a::refinement_lattice) =\n  (\\<Sqinter>c::'a::refinement_lattice\\<in>{c\\<^sub>0, c\\<^sub>1}.\n      c \\<parallel> d)\n\ngoal (1 subgoal):\n 1. (c\\<^sub>0 \\<sqinter> c\\<^sub>1) \\<parallel> d =\n    c\\<^sub>0 \\<parallel> d \\<sqinter> c\\<^sub>1 \\<parallel> d\nvariables:\n  c\\<^sub>0, c\\<^sub>1, d :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "also"], ["proof (state)\nthis:\n  \\<Sqinter> {c\\<^sub>0::'a::refinement_lattice,\n              c\\<^sub>1::'a::refinement_lattice} \\<parallel>\n  (d::'a::refinement_lattice) =\n  (\\<Sqinter>c::'a::refinement_lattice\\<in>{c\\<^sub>0, c\\<^sub>1}.\n      c \\<parallel> d)\n\ngoal (1 subgoal):\n 1. (c\\<^sub>0 \\<sqinter> c\\<^sub>1) \\<parallel> d =\n    c\\<^sub>0 \\<parallel> d \\<sqinter> c\\<^sub>1 \\<parallel> d\nvariables:\n  c\\<^sub>0, c\\<^sub>1, d :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "have \"... = c\\<^sub>0 \\<parallel> d \\<sqinter> c\\<^sub>1 \\<parallel> d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sqinter>c::'a\\<in>{c\\<^sub>0, c\\<^sub>1}. c \\<parallel> d) =\n    c\\<^sub>0 \\<parallel> d \\<sqinter> c\\<^sub>1 \\<parallel> d\nvariables:\n  c\\<^sub>0, c\\<^sub>1, d :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by simp"], ["proof (state)\nthis:\n  (\\<Sqinter>c::'a::refinement_lattice\\<in>{c\\<^sub>0::'a::refinement_lattice,\n      c\\<^sub>1::'a::refinement_lattice}.\n      c \\<parallel> (d::'a::refinement_lattice)) =\n  c\\<^sub>0 \\<parallel> d \\<sqinter> c\\<^sub>1 \\<parallel> d\n\ngoal (1 subgoal):\n 1. (c\\<^sub>0 \\<sqinter> c\\<^sub>1) \\<parallel> d =\n    c\\<^sub>0 \\<parallel> d \\<sqinter> c\\<^sub>1 \\<parallel> d\nvariables:\n  c\\<^sub>0, c\\<^sub>1, d :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "finally"], ["proof (chain)\npicking this:\n  ((c\\<^sub>0::'a::refinement_lattice) \\<sqinter>\n   (c\\<^sub>1::'a::refinement_lattice)) \\<parallel>\n  (d::'a::refinement_lattice) =\n  c\\<^sub>0 \\<parallel> d \\<sqinter> c\\<^sub>1 \\<parallel> d", "show ?thesis"], ["proof (prove)\nusing this:\n  ((c\\<^sub>0::'a::refinement_lattice) \\<sqinter>\n   (c\\<^sub>1::'a::refinement_lattice)) \\<parallel>\n  (d::'a::refinement_lattice) =\n  c\\<^sub>0 \\<parallel> d \\<sqinter> c\\<^sub>1 \\<parallel> d\n\ngoal (1 subgoal):\n 1. (c\\<^sub>0 \\<sqinter> c\\<^sub>1) \\<parallel> d =\n    c\\<^sub>0 \\<parallel> d \\<sqinter> c\\<^sub>1 \\<parallel> d\nvariables:\n  c\\<^sub>0, c\\<^sub>1, d :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "."], ["proof (state)\nthis:\n  ((c\\<^sub>0::'a::refinement_lattice) \\<sqinter>\n   (c\\<^sub>1::'a::refinement_lattice)) \\<parallel>\n  (d::'a::refinement_lattice) =\n  c\\<^sub>0 \\<parallel> d \\<sqinter> c\\<^sub>1 \\<parallel> d\n\ngoal:\nNo subgoals!\nvariables:\n  c\\<^sub>0, c\\<^sub>1, d :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "qed"], ["", "lemma inf_par_distrib2: \"d \\<parallel> (c\\<^sub>0 \\<sqinter> c\\<^sub>1) = (d \\<parallel> c\\<^sub>0) \\<sqinter> (d \\<parallel> c\\<^sub>1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d \\<parallel> (c\\<^sub>0 \\<sqinter> c\\<^sub>1) =\n    d \\<parallel> c\\<^sub>0 \\<sqinter> d \\<parallel> c\\<^sub>1\nvariables:\n  c\\<^sub>0, c\\<^sub>1, d :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "using inf_par_distrib par_commute"], ["proof (prove)\nusing this:\n  ((?c\\<^sub>0::'a::refinement_lattice) \\<sqinter>\n   (?c\\<^sub>1::'a::refinement_lattice)) \\<parallel>\n  (?d::'a::refinement_lattice) =\n  ?c\\<^sub>0 \\<parallel> ?d \\<sqinter> ?c\\<^sub>1 \\<parallel> ?d\n  (?a::'a::refinement_lattice) \\<parallel> (?b::'a::refinement_lattice) =\n  ?b \\<parallel> ?a\n\ngoal (1 subgoal):\n 1. d \\<parallel> (c\\<^sub>0 \\<sqinter> c\\<^sub>1) =\n    d \\<parallel> c\\<^sub>0 \\<sqinter> d \\<parallel> c\\<^sub>1\nvariables:\n  c\\<^sub>0, c\\<^sub>1, d :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by auto"], ["", "lemma inf_par_product: \"(a \\<sqinter> b) \\<parallel> (c \\<sqinter> d) = (a \\<parallel> c) \\<sqinter> (a \\<parallel> d) \\<sqinter> (b \\<parallel> c) \\<sqinter> (b \\<parallel> d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a \\<sqinter> b) \\<parallel> (c \\<sqinter> d) =\n    a \\<parallel> c \\<sqinter> a \\<parallel> d \\<sqinter>\n    b \\<parallel> c \\<sqinter>\n    b \\<parallel> d\nvariables:\n  a, b, c, d :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by (simp add: inf_commute inf_par_distrib inf_par_distrib2 inf_sup_aci(3))"], ["", "lemma par_mono: \"c\\<^sub>1 \\<sqsubseteq> d\\<^sub>1 \\<Longrightarrow> c\\<^sub>2 \\<sqsubseteq> d\\<^sub>2 \\<Longrightarrow> c\\<^sub>1 \\<parallel> c\\<^sub>2 \\<sqsubseteq> d\\<^sub>1 \\<parallel> d\\<^sub>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>c\\<^sub>1 \\<sqsubseteq> d\\<^sub>1;\n     c\\<^sub>2 \\<sqsubseteq> d\\<^sub>2\\<rbrakk>\n    \\<Longrightarrow> c\\<^sub>1 \\<parallel> c\\<^sub>2 \\<sqsubseteq>\n                      d\\<^sub>1 \\<parallel> d\\<^sub>2\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c\\<^sub>1, c\\<^sub>2, d\\<^sub>1, d\\<^sub>2 :: 'a\ntype variables:\n  'a :: refinement_lattice", "by (metis inf.orderE le_inf_iff order_refl inf_par_distrib par_commute)"], ["", "end"], ["", "end"]]}