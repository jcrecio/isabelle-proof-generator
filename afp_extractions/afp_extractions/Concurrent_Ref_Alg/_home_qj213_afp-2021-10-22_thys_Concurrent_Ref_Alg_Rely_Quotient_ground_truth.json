{"file_name": "/home/qj213/afp-2021-10-22/thys/Concurrent_Ref_Alg/Rely_Quotient.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Concurrent_Ref_Alg", "problem_names": ["lemma quotient_identity: \"c // skip = c\"", "theorem rely_quotient: \n  assumes nonabort_i: \"chaos \\<sqsubseteq> i\"\n  shows \"c \\<sqsubseteq> (c // i) \\<parallel> i\"", "theorem rely_refinement: \n  assumes nonabort_i: \"chaos \\<sqsubseteq> i\"\n  shows \"c // i \\<sqsubseteq> d \\<longleftrightarrow> c \\<sqsubseteq> d \\<parallel> i\"", "lemma rely_mono:\n  assumes c_refsto_d: \"c \\<sqsubseteq> d\"\n  shows \"(c // i) \\<sqsubseteq> (d // i)\"", "lemma weaken_rely: \n  assumes i_refsto_j: \"i \\<sqsubseteq> j\"\n  shows \"(c // j) \\<sqsubseteq> (c // i)\"", "lemma par_nonabort: \n  assumes nonabort_i: \"chaos \\<sqsubseteq> i\"\n  assumes nonabort_j: \"chaos \\<sqsubseteq> j\"\n  shows \"chaos \\<sqsubseteq> i \\<parallel> j\"", "lemma nested_rely: \n  assumes j_nonabort: \"chaos \\<sqsubseteq> j\"\n  shows \"((c // j) // i) = c // (i \\<parallel> j)\"", "lemma introduce_parallel: \n  assumes nonabort_i: \"chaos \\<sqsubseteq>  i\"\n  assumes nonabort_j: \"chaos \\<sqsubseteq>  j\"\n  shows \"c \\<iinter> d \\<sqsubseteq>  (j \\<iinter> (c // i)) \\<parallel> (i \\<iinter> (d // j))\"", "lemma distribute_rely_conjunction: \n  assumes nonabort_i: \"chaos \\<sqsubseteq>  i\"\n  shows \"(c \\<iinter> d) // i  \\<sqsubseteq>  (c // i) \\<iinter> (d // i)\"", "lemma distribute_rely_choice: \n  assumes nonabort_i: \"chaos \\<sqsubseteq>  i\"\n  shows \"(c \\<sqinter> d) // i  \\<sqsubseteq>  (c // i) \\<sqinter> (d // i)\"", "lemma distribute_rely_parallel1: \n  assumes nonabort_i: \"chaos \\<sqsubseteq>  i\"\n  assumes nonabort_j: \"chaos \\<sqsubseteq>  j\"\n  shows \"(c \\<parallel> d) // (i \\<parallel> j)  \\<sqsubseteq>  (c // i) \\<parallel> (d // j)\"", "lemma distribute_rely_parallel2: \n  assumes nonabort_i: \"chaos \\<sqsubseteq> i\"\n  assumes i_par_i: \"i \\<parallel> i \\<sqsubseteq> i\"\n  shows \"(c \\<parallel> d) // i  \\<sqsubseteq>  (c // i) \\<parallel> (d // i)\"", "lemma distribute_rely_sequential: \n  assumes nonabort_i: \"chaos \\<sqsubseteq> i\"\n  assumes \"(\\<forall> c. (\\<forall> d. ((c \\<parallel> i);(d \\<parallel> i) \\<sqsubseteq> (c;d) \\<parallel> i)))\"\n  shows \"(c;d) // i \\<sqsubseteq> (c // i);(d // i)\"", "lemma distribute_rely_sequential_event: \n  assumes nonabort_i: \"chaos \\<sqsubseteq> i\"\n  assumes nonabort_j: \"chaos \\<sqsubseteq> j\"\n  assumes nonabort_e: \"chaos \\<sqsubseteq> e\"\n  assumes \"(\\<forall> c. (\\<forall> d. ((c \\<parallel> i);e;(d \\<parallel> j) \\<sqsubseteq> (c;e;d) \\<parallel> (i;e;j))))\" \n  shows \"(c;e;d) // (i;e;j) \\<sqsubseteq> (c // i);e;(d // j)\"", "lemma introduce_parallel_with_rely: \n  assumes nonabort_i: \"chaos \\<sqsubseteq> i\"\n  assumes nonabort_j0: \"chaos \\<sqsubseteq>  j\\<^sub>0\"\n  assumes nonabort_j1: \"chaos \\<sqsubseteq>  j\\<^sub>1\"\n  shows \"(c \\<iinter> d) // i \\<sqsubseteq> (j\\<^sub>1 \\<iinter> (c // (j\\<^sub>0 \\<parallel> i))) \\<parallel> (j\\<^sub>0 \\<iinter> (d // (j\\<^sub>1 \\<parallel> i)))\"", "lemma introduce_parallel_with_rely_guarantee: \n  assumes nonabort_i: \"chaos \\<sqsubseteq>  i\"\n  assumes nonabort_j0: \"chaos \\<sqsubseteq>  j\\<^sub>0\"\n  assumes nonabort_j1: \"chaos \\<sqsubseteq>  j\\<^sub>1\"\n  shows \"(j\\<^sub>1 \\<parallel> j\\<^sub>0) \\<iinter> (c \\<iinter> d) // i \\<sqsubseteq> (j\\<^sub>1 \\<iinter> (c // (j\\<^sub>0 \\<parallel> i))) \\<parallel> (j\\<^sub>0 \\<iinter> (d // (j\\<^sub>1 \\<parallel> i)))\"", "lemma wrap_rely_guar:\n  assumes nonabort_rg: \"chaos \\<sqsubseteq> rg\" \n  and skippable: \"rg \\<sqsubseteq> skip\"\n  shows \"c \\<sqsubseteq> rg \\<iinter> c // rg\"", "lemma distribute_rely_iteration: \n  assumes nonabort_i: \"chaos \\<sqsubseteq> i\"\n  assumes \"(\\<forall> c. (\\<forall> d. ((c \\<parallel> i);(d \\<parallel> i) \\<sqsubseteq> (c;d) \\<parallel> i)))\"\n  shows \"(c\\<^sup>\\<omega>;d) // i \\<sqsubseteq> (c // i)\\<^sup>\\<omega>;(d // i)\""], "translations": [["", "lemma quotient_identity: \"c // skip = c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c // skip = c\nvariables:\n  c, skip :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c // skip = c\nvariables:\n  c, skip :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "have \"c // skip = \\<Sqinter>{ d. (c \\<sqsubseteq> d \\<parallel> skip) }\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c // skip = \\<Sqinter> {d::'a. c \\<sqsubseteq> d \\<parallel> skip}\nvariables:\n  c, skip :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by (metis rely_quotient_def)"], ["proof (state)\nthis:\n  (c::'a::refinement_lattice) // skip =\n  \\<Sqinter> {d::'a::refinement_lattice. c \\<sqsubseteq> d \\<parallel> skip}\n\ngoal (1 subgoal):\n 1. c // skip = c\nvariables:\n  c, skip :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "then"], ["proof (chain)\npicking this:\n  (c::'a::refinement_lattice) // skip =\n  \\<Sqinter> {d::'a::refinement_lattice. c \\<sqsubseteq> d \\<parallel> skip}", "have \"c // skip = \\<Sqinter>{ d. (c \\<sqsubseteq> d)  }\""], ["proof (prove)\nusing this:\n  (c::'a::refinement_lattice) // skip =\n  \\<Sqinter> {d::'a::refinement_lattice. c \\<sqsubseteq> d \\<parallel> skip}\n\ngoal (1 subgoal):\n 1. c // skip = \\<Sqinter> {d::'a. c \\<sqsubseteq> d}\nvariables:\n  c, skip :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by (metis (mono_tags, lifting) Collect_cong par_skip)"], ["proof (state)\nthis:\n  (c::'a::refinement_lattice) // skip =\n  \\<Sqinter> {d::'a::refinement_lattice. c \\<sqsubseteq> d}\n\ngoal (1 subgoal):\n 1. c // skip = c\nvariables:\n  c, skip :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "thus ?thesis"], ["proof (prove)\nusing this:\n  (c::'a::refinement_lattice) // skip =\n  \\<Sqinter> {d::'a::refinement_lattice. c \\<sqsubseteq> d}\n\ngoal (1 subgoal):\n 1. c // skip = c\nvariables:\n  c, skip :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by (metis Inf_greatest Inf_lower2 dual_order.antisym dual_order.refl mem_Collect_eq)"], ["proof (state)\nthis:\n  (c::'a::refinement_lattice) // skip = c\n\ngoal:\nNo subgoals!\nvariables:\n  c, skip :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "qed"], ["", "text \\<open>\n  Provided the interference process $i$ is non-aborting (i.e. it refines chaos), \n  any process $c$ is refined by its rely quotient with $i$ in parallel with $i$.\n  If interference $i$ was allowed to be aborting then, \n  because $(c \\quotient \\bot) \\parallel \\bot$ equals $\\bot$,\n  it does not refine $c$ in general. \n\\<close>"], ["", "theorem rely_quotient: \n  assumes nonabort_i: \"chaos \\<sqsubseteq> i\"\n  shows \"c \\<sqsubseteq> (c // i) \\<parallel> i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<sqsubseteq> c // i \\<parallel> i\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, i :: 'a\ntype variables:\n  'a :: refinement_lattice", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c \\<sqsubseteq> c // i \\<parallel> i\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, i :: 'a\ntype variables:\n  'a :: refinement_lattice", "define D where \"D = { d \\<parallel> i | d. (c \\<sqsubseteq> d \\<parallel> i)}\""], ["proof (state)\nthis:\n  (D::'a::refinement_lattice set) =\n  {d \\<parallel> (i::'a::refinement_lattice) |d::'a::refinement_lattice.\n   (c::'a::refinement_lattice) \\<sqsubseteq> d \\<parallel> i}\n\ngoal (1 subgoal):\n 1. c \\<sqsubseteq> c // i \\<parallel> i\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, i :: 'a\ntype variables:\n  'a :: refinement_lattice", "define C where \"C = {c}\""], ["proof (state)\nthis:\n  (C::'a::refinement_lattice set) = {c::'a::refinement_lattice}\n\ngoal (1 subgoal):\n 1. c \\<sqsubseteq> c // i \\<parallel> i\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, i :: 'a\ntype variables:\n  'a :: refinement_lattice", "have \"(\\<forall>d \\<in> D. (\\<exists> c \\<in> C. c \\<sqsubseteq> d))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>d::'a\\<in>D. \\<exists>c::'a\\<in>C. c \\<sqsubseteq> d\nvariables:\n  C, D :: 'a set\ntype variables:\n  'a :: refinement_lattice", "using D_def C_def CollectD singletonI"], ["proof (prove)\nusing this:\n  (D::'a::refinement_lattice set) =\n  {d \\<parallel> (i::'a::refinement_lattice) |d::'a::refinement_lattice.\n   (c::'a::refinement_lattice) \\<sqsubseteq> d \\<parallel> i}\n  (C::'a::refinement_lattice set) = {c::'a::refinement_lattice}\n  (?a::?'a::type)\n  \\<in> {x::?'a::type.\n         (?P::?'a::type \\<Rightarrow> bool) x} \\<Longrightarrow>\n  ?P ?a\n  (?a::?'a::type) \\<in> {?a}\n\ngoal (1 subgoal):\n 1. \\<forall>d::'a\\<in>D. \\<exists>c::'a\\<in>C. c \\<sqsubseteq> d\nvariables:\n  C, D :: 'a set\ntype variables:\n  'a :: refinement_lattice", "by auto"], ["proof (state)\nthis:\n  \\<forall>d::'a::refinement_lattice\\<in>D::'a::refinement_lattice set.\n     \\<exists>c::'a::refinement_lattice\\<in>C::'a::refinement_lattice set.\n        c \\<sqsubseteq> d\n\ngoal (1 subgoal):\n 1. c \\<sqsubseteq> c // i \\<parallel> i\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, i :: 'a\ntype variables:\n  'a :: refinement_lattice", "then"], ["proof (chain)\npicking this:\n  \\<forall>d::'a::refinement_lattice\\<in>D::'a::refinement_lattice set.\n     \\<exists>c::'a::refinement_lattice\\<in>C::'a::refinement_lattice set.\n        c \\<sqsubseteq> d", "have \"\\<Sqinter> C \\<sqsubseteq> (\\<Sqinter> D)\""], ["proof (prove)\nusing this:\n  \\<forall>d::'a::refinement_lattice\\<in>D::'a::refinement_lattice set.\n     \\<exists>c::'a::refinement_lattice\\<in>C::'a::refinement_lattice set.\n        c \\<sqsubseteq> d\n\ngoal (1 subgoal):\n 1. \\<Sqinter> C \\<sqsubseteq> \\<Sqinter> D\nvariables:\n  C, D :: 'a set\ntype variables:\n  'a :: refinement_lattice", "by (simp add: Inf_mono)"], ["proof (state)\nthis:\n  \\<Sqinter> (C::'a::refinement_lattice set) \\<sqsubseteq>\n  \\<Sqinter> (D::'a::refinement_lattice set)\n\ngoal (1 subgoal):\n 1. c \\<sqsubseteq> c // i \\<parallel> i\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, i :: 'a\ntype variables:\n  'a :: refinement_lattice", "then"], ["proof (chain)\npicking this:\n  \\<Sqinter> (C::'a::refinement_lattice set) \\<sqsubseteq>\n  \\<Sqinter> (D::'a::refinement_lattice set)", "have \"c \\<sqsubseteq> \\<Sqinter>{ d \\<parallel> i | d. (c \\<sqsubseteq> d \\<parallel> i)}\""], ["proof (prove)\nusing this:\n  \\<Sqinter> (C::'a::refinement_lattice set) \\<sqsubseteq>\n  \\<Sqinter> (D::'a::refinement_lattice set)\n\ngoal (1 subgoal):\n 1. c \\<sqsubseteq>\n    \\<Sqinter> {d \\<parallel> i |d::'a. c \\<sqsubseteq> d \\<parallel> i}\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, i :: 'a\ntype variables:\n  'a :: refinement_lattice", "by (simp add: C_def D_def)"], ["proof (state)\nthis:\n  (c::'a::refinement_lattice) \\<sqsubseteq>\n  \\<Sqinter> {d \\<parallel> (i::'a::refinement_lattice) |\n              d::'a::refinement_lattice. c \\<sqsubseteq> d \\<parallel> i}\n\ngoal (1 subgoal):\n 1. c \\<sqsubseteq> c // i \\<parallel> i\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, i :: 'a\ntype variables:\n  'a :: refinement_lattice", "also"], ["proof (state)\nthis:\n  (c::'a::refinement_lattice) \\<sqsubseteq>\n  \\<Sqinter> {d \\<parallel> (i::'a::refinement_lattice) |\n              d::'a::refinement_lattice. c \\<sqsubseteq> d \\<parallel> i}\n\ngoal (1 subgoal):\n 1. c \\<sqsubseteq> c // i \\<parallel> i\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, i :: 'a\ntype variables:\n  'a :: refinement_lattice", "have \"... = \\<Sqinter>{ d \\<parallel> i | d. d \\<in> {d. (c \\<sqsubseteq> d \\<parallel> i)}}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sqinter> {d \\<parallel> i |d::'a. c \\<sqsubseteq> d \\<parallel> i} =\n    \\<Sqinter> {d \\<parallel> i |d::'a.\n                d \\<in> {d::'a. c \\<sqsubseteq> d \\<parallel> i}}\nvariables:\n  c, i :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by simp"], ["proof (state)\nthis:\n  \\<Sqinter> {d \\<parallel> (i::'a::refinement_lattice) |\n              d::'a::refinement_lattice.\n              (c::'a::refinement_lattice) \\<sqsubseteq> d \\<parallel> i} =\n  \\<Sqinter> {d \\<parallel> i |d::'a::refinement_lattice.\n              d \\<in> {d::'a::refinement_lattice.\n                       c \\<sqsubseteq> d \\<parallel> i}}\n\ngoal (1 subgoal):\n 1. c \\<sqsubseteq> c // i \\<parallel> i\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, i :: 'a\ntype variables:\n  'a :: refinement_lattice", "also"], ["proof (state)\nthis:\n  \\<Sqinter> {d \\<parallel> (i::'a::refinement_lattice) |\n              d::'a::refinement_lattice.\n              (c::'a::refinement_lattice) \\<sqsubseteq> d \\<parallel> i} =\n  \\<Sqinter> {d \\<parallel> i |d::'a::refinement_lattice.\n              d \\<in> {d::'a::refinement_lattice.\n                       c \\<sqsubseteq> d \\<parallel> i}}\n\ngoal (1 subgoal):\n 1. c \\<sqsubseteq> c // i \\<parallel> i\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, i :: 'a\ntype variables:\n  'a :: refinement_lattice", "have \"... = (\\<Sqinter>d \\<in> {d. (c \\<sqsubseteq> d \\<parallel> i)}. d \\<parallel> i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sqinter> {d \\<parallel> i |d::'a.\n                d \\<in> {d::'a. c \\<sqsubseteq> d \\<parallel> i}} =\n    (\\<Sqinter>d::'a\\<in>{d::'a. c \\<sqsubseteq> d \\<parallel> i}.\n        d \\<parallel> i)\nvariables:\n  c, i :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by (simp add: INF_Inf)"], ["proof (state)\nthis:\n  \\<Sqinter> {d \\<parallel> (i::'a::refinement_lattice) |\n              d::'a::refinement_lattice.\n              d \\<in> {d::'a::refinement_lattice.\n                       (c::'a::refinement_lattice) \\<sqsubseteq>\n                       d \\<parallel> i}} =\n  (\\<Sqinter>d::'a::refinement_lattice\\<in>{d::'a::refinement_lattice.\n      c \\<sqsubseteq> d \\<parallel> i}.\n      d \\<parallel> i)\n\ngoal (1 subgoal):\n 1. c \\<sqsubseteq> c // i \\<parallel> i\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, i :: 'a\ntype variables:\n  'a :: refinement_lattice", "also"], ["proof (state)\nthis:\n  \\<Sqinter> {d \\<parallel> (i::'a::refinement_lattice) |\n              d::'a::refinement_lattice.\n              d \\<in> {d::'a::refinement_lattice.\n                       (c::'a::refinement_lattice) \\<sqsubseteq>\n                       d \\<parallel> i}} =\n  (\\<Sqinter>d::'a::refinement_lattice\\<in>{d::'a::refinement_lattice.\n      c \\<sqsubseteq> d \\<parallel> i}.\n      d \\<parallel> i)\n\ngoal (1 subgoal):\n 1. c \\<sqsubseteq> c // i \\<parallel> i\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, i :: 'a\ntype variables:\n  'a :: refinement_lattice", "have \"... = \\<Sqinter>{ d | d. (c \\<sqsubseteq> d \\<parallel> i)} \\<parallel> i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sqinter>d::'a\\<in>{d::'a. c \\<sqsubseteq> d \\<parallel> i}.\n        d \\<parallel> i) =\n    \\<Sqinter> {d |d::'a. c \\<sqsubseteq> d \\<parallel> i} \\<parallel> i\nvariables:\n  c, i :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "proof (cases \"{ d | d. (c \\<sqsubseteq> d \\<parallel> i)} = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. {d |d::'a. c \\<sqsubseteq> d \\<parallel> i} = {} \\<Longrightarrow>\n    (\\<Sqinter>d::'a\\<in>{d::'a. c \\<sqsubseteq> d \\<parallel> i}.\n        d \\<parallel> i) =\n    \\<Sqinter> {d |d::'a. c \\<sqsubseteq> d \\<parallel> i} \\<parallel> i\n 2. {d |d::'a. c \\<sqsubseteq> d \\<parallel> i} \\<noteq>\n    {} \\<Longrightarrow>\n    (\\<Sqinter>d::'a\\<in>{d::'a. c \\<sqsubseteq> d \\<parallel> i}.\n        d \\<parallel> i) =\n    \\<Sqinter> {d |d::'a. c \\<sqsubseteq> d \\<parallel> i} \\<parallel> i\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, i :: 'a\ntype variables:\n  'a :: refinement_lattice", "assume \"{ d | d. (c \\<sqsubseteq> d \\<parallel> i)} = {}\""], ["proof (state)\nthis:\n  {d |d::'a::refinement_lattice.\n   (c::'a::refinement_lattice) \\<sqsubseteq>\n   d \\<parallel> (i::'a::refinement_lattice)} =\n  {}\n\ngoal (2 subgoals):\n 1. {d |d::'a. c \\<sqsubseteq> d \\<parallel> i} = {} \\<Longrightarrow>\n    (\\<Sqinter>d::'a\\<in>{d::'a. c \\<sqsubseteq> d \\<parallel> i}.\n        d \\<parallel> i) =\n    \\<Sqinter> {d |d::'a. c \\<sqsubseteq> d \\<parallel> i} \\<parallel> i\n 2. {d |d::'a. c \\<sqsubseteq> d \\<parallel> i} \\<noteq>\n    {} \\<Longrightarrow>\n    (\\<Sqinter>d::'a\\<in>{d::'a. c \\<sqsubseteq> d \\<parallel> i}.\n        d \\<parallel> i) =\n    \\<Sqinter> {d |d::'a. c \\<sqsubseteq> d \\<parallel> i} \\<parallel> i\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, i :: 'a\ntype variables:\n  'a :: refinement_lattice", "then"], ["proof (chain)\npicking this:\n  {d |d::'a::refinement_lattice.\n   (c::'a::refinement_lattice) \\<sqsubseteq>\n   d \\<parallel> (i::'a::refinement_lattice)} =\n  {}", "show \"(\\<Sqinter>d \\<in> {d. (c \\<sqsubseteq> d \\<parallel> i)}. d \\<parallel> i) = \\<Sqinter>{ d | d. (c \\<sqsubseteq> d \\<parallel> i)} \\<parallel> i\""], ["proof (prove)\nusing this:\n  {d |d::'a::refinement_lattice.\n   (c::'a::refinement_lattice) \\<sqsubseteq>\n   d \\<parallel> (i::'a::refinement_lattice)} =\n  {}\n\ngoal (1 subgoal):\n 1. (\\<Sqinter>d::'a\\<in>{d::'a. c \\<sqsubseteq> d \\<parallel> i}.\n        d \\<parallel> i) =\n    \\<Sqinter> {d |d::'a. c \\<sqsubseteq> d \\<parallel> i} \\<parallel> i\nvariables:\n  c, i :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "using nonabort_i Collect_empty_eq top_greatest\n            nonabort_par_top par_commute"], ["proof (prove)\nusing this:\n  {d |d::'a::refinement_lattice.\n   (c::'a::refinement_lattice) \\<sqsubseteq>\n   d \\<parallel> (i::'a::refinement_lattice)} =\n  {}\n  chaos \\<sqsubseteq> (i::'a::refinement_lattice)\n  (Collect (?P::?'a::type \\<Rightarrow> bool) = {}) =\n  (\\<forall>x::?'a::type. \\<not> ?P x)\n  (?a::?'a::order_top) \\<le> \\<top>\n  chaos \\<sqsubseteq> (?c::'a::refinement_lattice) \\<Longrightarrow>\n  ?c \\<parallel> \\<top> = \\<top>\n  (?a::'a::refinement_lattice) \\<parallel> (?b::'a::refinement_lattice) =\n  ?b \\<parallel> ?a\n\ngoal (1 subgoal):\n 1. (\\<Sqinter>d::'a\\<in>{d::'a. c \\<sqsubseteq> d \\<parallel> i}.\n        d \\<parallel> i) =\n    \\<Sqinter> {d |d::'a. c \\<sqsubseteq> d \\<parallel> i} \\<parallel> i\nvariables:\n  c, i :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by fastforce"], ["proof (state)\nthis:\n  (\\<Sqinter>d::'a::refinement_lattice\\<in>{d::'a::refinement_lattice.\n      (c::'a::refinement_lattice) \\<sqsubseteq> d \\<parallel> i}.\n      d \\<parallel> (i::'a::refinement_lattice)) =\n  \\<Sqinter> {d |d::'a::refinement_lattice.\n              c \\<sqsubseteq> d \\<parallel> i} \\<parallel>\n  i\n\ngoal (1 subgoal):\n 1. {d |d::'a. c \\<sqsubseteq> d \\<parallel> i} \\<noteq>\n    {} \\<Longrightarrow>\n    (\\<Sqinter>d::'a\\<in>{d::'a. c \\<sqsubseteq> d \\<parallel> i}.\n        d \\<parallel> i) =\n    \\<Sqinter> {d |d::'a. c \\<sqsubseteq> d \\<parallel> i} \\<parallel> i\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, i :: 'a\ntype variables:\n  'a :: refinement_lattice", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. {d |d::'a. c \\<sqsubseteq> d \\<parallel> i} \\<noteq>\n    {} \\<Longrightarrow>\n    (\\<Sqinter>d::'a\\<in>{d::'a. c \\<sqsubseteq> d \\<parallel> i}.\n        d \\<parallel> i) =\n    \\<Sqinter> {d |d::'a. c \\<sqsubseteq> d \\<parallel> i} \\<parallel> i\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, i :: 'a\ntype variables:\n  'a :: refinement_lattice", "assume a: \"{ d | d. (c \\<sqsubseteq> d \\<parallel> i)} \\<noteq> {}\""], ["proof (state)\nthis:\n  {d |d::'a::refinement_lattice.\n   (c::'a::refinement_lattice) \\<sqsubseteq>\n   d \\<parallel> (i::'a::refinement_lattice)} \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. {d |d::'a. c \\<sqsubseteq> d \\<parallel> i} \\<noteq>\n    {} \\<Longrightarrow>\n    (\\<Sqinter>d::'a\\<in>{d::'a. c \\<sqsubseteq> d \\<parallel> i}.\n        d \\<parallel> i) =\n    \\<Sqinter> {d |d::'a. c \\<sqsubseteq> d \\<parallel> i} \\<parallel> i\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, i :: 'a\ntype variables:\n  'a :: refinement_lattice", "have b: \"{d. (c \\<sqsubseteq> d \\<parallel> i)}  \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {d::'a. c \\<sqsubseteq> d \\<parallel> i} \\<noteq> {}\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, i :: 'a\ntype variables:\n  'a :: refinement_lattice", "using a"], ["proof (prove)\nusing this:\n  {d |d::'a::refinement_lattice.\n   (c::'a::refinement_lattice) \\<sqsubseteq>\n   d \\<parallel> (i::'a::refinement_lattice)} \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. {d::'a. c \\<sqsubseteq> d \\<parallel> i} \\<noteq> {}\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, i :: 'a\ntype variables:\n  'a :: refinement_lattice", "by blast"], ["proof (state)\nthis:\n  {d::'a::refinement_lattice.\n   (c::'a::refinement_lattice) \\<sqsubseteq>\n   d \\<parallel> (i::'a::refinement_lattice)} \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. {d |d::'a. c \\<sqsubseteq> d \\<parallel> i} \\<noteq>\n    {} \\<Longrightarrow>\n    (\\<Sqinter>d::'a\\<in>{d::'a. c \\<sqsubseteq> d \\<parallel> i}.\n        d \\<parallel> i) =\n    \\<Sqinter> {d |d::'a. c \\<sqsubseteq> d \\<parallel> i} \\<parallel> i\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, i :: 'a\ntype variables:\n  'a :: refinement_lattice", "then"], ["proof (chain)\npicking this:\n  {d::'a::refinement_lattice.\n   (c::'a::refinement_lattice) \\<sqsubseteq>\n   d \\<parallel> (i::'a::refinement_lattice)} \\<noteq>\n  {}", "have \"(\\<Sqinter>d \\<in> {d. (c \\<sqsubseteq> d \\<parallel> i)}. d \\<parallel> i) = \\<Sqinter>{ d. (c \\<sqsubseteq> d \\<parallel> i)} \\<parallel> i\""], ["proof (prove)\nusing this:\n  {d::'a::refinement_lattice.\n   (c::'a::refinement_lattice) \\<sqsubseteq>\n   d \\<parallel> (i::'a::refinement_lattice)} \\<noteq>\n  {}\n\ngoal (1 subgoal):\n 1. (\\<Sqinter>d::'a\\<in>{d::'a. c \\<sqsubseteq> d \\<parallel> i}.\n        d \\<parallel> i) =\n    \\<Sqinter> {d::'a. c \\<sqsubseteq> d \\<parallel> i} \\<parallel> i\nvariables:\n  c, i :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "using Inf_par_distrib"], ["proof (prove)\nusing this:\n  {d::'a::refinement_lattice.\n   (c::'a::refinement_lattice) \\<sqsubseteq>\n   d \\<parallel> (i::'a::refinement_lattice)} \\<noteq>\n  {}\n  (?D::'a::refinement_lattice set) \\<noteq> {} \\<Longrightarrow>\n  \\<Sqinter> ?D \\<parallel> (?c::'a::refinement_lattice) =\n  (\\<Sqinter>d::'a::refinement_lattice\\<in>?D. d \\<parallel> ?c)\n\ngoal (1 subgoal):\n 1. (\\<Sqinter>d::'a\\<in>{d::'a. c \\<sqsubseteq> d \\<parallel> i}.\n        d \\<parallel> i) =\n    \\<Sqinter> {d::'a. c \\<sqsubseteq> d \\<parallel> i} \\<parallel> i\nvariables:\n  c, i :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by simp"], ["proof (state)\nthis:\n  (\\<Sqinter>d::'a::refinement_lattice\\<in>{d::'a::refinement_lattice.\n      (c::'a::refinement_lattice) \\<sqsubseteq> d \\<parallel> i}.\n      d \\<parallel> (i::'a::refinement_lattice)) =\n  \\<Sqinter> {d::'a::refinement_lattice.\n              c \\<sqsubseteq> d \\<parallel> i} \\<parallel>\n  i\n\ngoal (1 subgoal):\n 1. {d |d::'a. c \\<sqsubseteq> d \\<parallel> i} \\<noteq>\n    {} \\<Longrightarrow>\n    (\\<Sqinter>d::'a\\<in>{d::'a. c \\<sqsubseteq> d \\<parallel> i}.\n        d \\<parallel> i) =\n    \\<Sqinter> {d |d::'a. c \\<sqsubseteq> d \\<parallel> i} \\<parallel> i\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, i :: 'a\ntype variables:\n  'a :: refinement_lattice", "then"], ["proof (chain)\npicking this:\n  (\\<Sqinter>d::'a::refinement_lattice\\<in>{d::'a::refinement_lattice.\n      (c::'a::refinement_lattice) \\<sqsubseteq> d \\<parallel> i}.\n      d \\<parallel> (i::'a::refinement_lattice)) =\n  \\<Sqinter> {d::'a::refinement_lattice.\n              c \\<sqsubseteq> d \\<parallel> i} \\<parallel>\n  i", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sqinter>d::'a::refinement_lattice\\<in>{d::'a::refinement_lattice.\n      (c::'a::refinement_lattice) \\<sqsubseteq> d \\<parallel> i}.\n      d \\<parallel> (i::'a::refinement_lattice)) =\n  \\<Sqinter> {d::'a::refinement_lattice.\n              c \\<sqsubseteq> d \\<parallel> i} \\<parallel>\n  i\n\ngoal (1 subgoal):\n 1. (\\<Sqinter>d::'a\\<in>{d::'a. c \\<sqsubseteq> d \\<parallel> i}.\n        d \\<parallel> i) =\n    \\<Sqinter> {d |d::'a. c \\<sqsubseteq> d \\<parallel> i} \\<parallel> i\nvariables:\n  c, i :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by auto"], ["proof (state)\nthis:\n  (\\<Sqinter>d::'a::refinement_lattice\\<in>{d::'a::refinement_lattice.\n      (c::'a::refinement_lattice) \\<sqsubseteq> d \\<parallel> i}.\n      d \\<parallel> (i::'a::refinement_lattice)) =\n  \\<Sqinter> {d |d::'a::refinement_lattice.\n              c \\<sqsubseteq> d \\<parallel> i} \\<parallel>\n  i\n\ngoal:\nNo subgoals!\nvariables:\n  c, i :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "qed"], ["proof (state)\nthis:\n  (\\<Sqinter>d::'a::refinement_lattice\\<in>{d::'a::refinement_lattice.\n      (c::'a::refinement_lattice) \\<sqsubseteq> d \\<parallel> i}.\n      d \\<parallel> (i::'a::refinement_lattice)) =\n  \\<Sqinter> {d |d::'a::refinement_lattice.\n              c \\<sqsubseteq> d \\<parallel> i} \\<parallel>\n  i\n\ngoal (1 subgoal):\n 1. c \\<sqsubseteq> c // i \\<parallel> i\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, i :: 'a\ntype variables:\n  'a :: refinement_lattice", "also"], ["proof (state)\nthis:\n  (\\<Sqinter>d::'a::refinement_lattice\\<in>{d::'a::refinement_lattice.\n      (c::'a::refinement_lattice) \\<sqsubseteq> d \\<parallel> i}.\n      d \\<parallel> (i::'a::refinement_lattice)) =\n  \\<Sqinter> {d |d::'a::refinement_lattice.\n              c \\<sqsubseteq> d \\<parallel> i} \\<parallel>\n  i\n\ngoal (1 subgoal):\n 1. c \\<sqsubseteq> c // i \\<parallel> i\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, i :: 'a\ntype variables:\n  'a :: refinement_lattice", "have \"... = (c // i) \\<parallel> i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Sqinter> {d |d::'a. c \\<sqsubseteq> d \\<parallel> i} \\<parallel> i =\n    c // i \\<parallel> i\nvariables:\n  c, i :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by (metis rely_quotient_def)"], ["proof (state)\nthis:\n  \\<Sqinter> {d |d::'a::refinement_lattice.\n              (c::'a::refinement_lattice) \\<sqsubseteq>\n              d \\<parallel> (i::'a::refinement_lattice)} \\<parallel>\n  i =\n  c // i \\<parallel> i\n\ngoal (1 subgoal):\n 1. c \\<sqsubseteq> c // i \\<parallel> i\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, i :: 'a\ntype variables:\n  'a :: refinement_lattice", "finally"], ["proof (chain)\npicking this:\n  (c::'a::refinement_lattice) \\<sqsubseteq>\n  c // (i::'a::refinement_lattice) \\<parallel> i", "show ?thesis"], ["proof (prove)\nusing this:\n  (c::'a::refinement_lattice) \\<sqsubseteq>\n  c // (i::'a::refinement_lattice) \\<parallel> i\n\ngoal (1 subgoal):\n 1. c \\<sqsubseteq> c // i \\<parallel> i\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, i :: 'a\ntype variables:\n  'a :: refinement_lattice", "."], ["proof (state)\nthis:\n  (c::'a::refinement_lattice) \\<sqsubseteq>\n  c // (i::'a::refinement_lattice) \\<parallel> i\n\ngoal:\nNo subgoals!\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, i :: 'a\ntype variables:\n  'a :: refinement_lattice", "qed"], ["", "text \\<open>\n  The following theorem represents the Galois connection between \n  the parallel operator (upper adjoint) and the rely quotient operator\n  (lower adjoint). This basic relationship is used to prove the majority\n  of the theorems about rely quotient.\n\\<close>"], ["", "theorem rely_refinement: \n  assumes nonabort_i: \"chaos \\<sqsubseteq> i\"\n  shows \"c // i \\<sqsubseteq> d \\<longleftrightarrow> c \\<sqsubseteq> d \\<parallel> i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (c // i \\<sqsubseteq> d) = (c \\<sqsubseteq> d \\<parallel> i)\nvariables:\n  c, d, i :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. c // i \\<sqsubseteq> d \\<Longrightarrow> c \\<sqsubseteq> d \\<parallel> i\n 2. c \\<sqsubseteq> d \\<parallel> i \\<Longrightarrow> c // i \\<sqsubseteq> d\nvariables:\n  c, d, i :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "assume a: \"c // i \\<sqsubseteq> d\""], ["proof (state)\nthis:\n  (c::'a::refinement_lattice) // (i::'a::refinement_lattice) \\<sqsubseteq>\n  (d::'a::refinement_lattice)\n\ngoal (2 subgoals):\n 1. c // i \\<sqsubseteq> d \\<Longrightarrow> c \\<sqsubseteq> d \\<parallel> i\n 2. c \\<sqsubseteq> d \\<parallel> i \\<Longrightarrow> c // i \\<sqsubseteq> d\nvariables:\n  c, d, i :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "have \"c \\<sqsubseteq> (c // i) \\<parallel> i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<sqsubseteq> c // i \\<parallel> i\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, i :: 'a\ntype variables:\n  'a :: refinement_lattice", "using rely_quotient nonabort_i"], ["proof (prove)\nusing this:\n  chaos \\<sqsubseteq> (?i::'a::refinement_lattice) \\<Longrightarrow>\n  (?c::'a::refinement_lattice) \\<sqsubseteq> ?c // ?i \\<parallel> ?i\n  chaos \\<sqsubseteq> (i::'a::refinement_lattice)\n\ngoal (1 subgoal):\n 1. c \\<sqsubseteq> c // i \\<parallel> i\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, i :: 'a\ntype variables:\n  'a :: refinement_lattice", "by simp"], ["proof (state)\nthis:\n  (c::'a::refinement_lattice) \\<sqsubseteq>\n  c // (i::'a::refinement_lattice) \\<parallel> i\n\ngoal (2 subgoals):\n 1. c // i \\<sqsubseteq> d \\<Longrightarrow> c \\<sqsubseteq> d \\<parallel> i\n 2. c \\<sqsubseteq> d \\<parallel> i \\<Longrightarrow> c // i \\<sqsubseteq> d\nvariables:\n  c, d, i :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "thus \"c \\<sqsubseteq> d \\<parallel> i\""], ["proof (prove)\nusing this:\n  (c::'a::refinement_lattice) \\<sqsubseteq>\n  c // (i::'a::refinement_lattice) \\<parallel> i\n\ngoal (1 subgoal):\n 1. c \\<sqsubseteq> d \\<parallel> i\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, d, i :: 'a\ntype variables:\n  'a :: refinement_lattice", "using par_mono a"], ["proof (prove)\nusing this:\n  (c::'a::refinement_lattice) \\<sqsubseteq>\n  c // (i::'a::refinement_lattice) \\<parallel> i\n  \\<lbrakk>(?c\\<^sub>1::'a::refinement_lattice) \\<sqsubseteq>\n           (?d\\<^sub>1::'a::refinement_lattice);\n   (?c\\<^sub>2::'a::refinement_lattice) \\<sqsubseteq>\n   (?d\\<^sub>2::'a::refinement_lattice)\\<rbrakk>\n  \\<Longrightarrow> ?c\\<^sub>1 \\<parallel> ?c\\<^sub>2 \\<sqsubseteq>\n                    ?d\\<^sub>1 \\<parallel> ?d\\<^sub>2\n  (c::'a::refinement_lattice) // (i::'a::refinement_lattice) \\<sqsubseteq>\n  (d::'a::refinement_lattice)\n\ngoal (1 subgoal):\n 1. c \\<sqsubseteq> d \\<parallel> i\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, d, i :: 'a\ntype variables:\n  'a :: refinement_lattice", "by (metis inf.absorb_iff2 inf_commute le_infI2 order_refl)"], ["proof (state)\nthis:\n  (c::'a::refinement_lattice) \\<sqsubseteq>\n  (d::'a::refinement_lattice) \\<parallel> (i::'a::refinement_lattice)\n\ngoal (1 subgoal):\n 1. c \\<sqsubseteq> d \\<parallel> i \\<Longrightarrow> c // i \\<sqsubseteq> d\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, d, i :: 'a\ntype variables:\n  'a :: refinement_lattice", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. c \\<sqsubseteq> d \\<parallel> i \\<Longrightarrow> c // i \\<sqsubseteq> d\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, d, i :: 'a\ntype variables:\n  'a :: refinement_lattice", "assume b: \"c \\<sqsubseteq> d \\<parallel> i\""], ["proof (state)\nthis:\n  (c::'a::refinement_lattice) \\<sqsubseteq>\n  (d::'a::refinement_lattice) \\<parallel> (i::'a::refinement_lattice)\n\ngoal (1 subgoal):\n 1. c \\<sqsubseteq> d \\<parallel> i \\<Longrightarrow> c // i \\<sqsubseteq> d\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, d, i :: 'a\ntype variables:\n  'a :: refinement_lattice", "then"], ["proof (chain)\npicking this:\n  (c::'a::refinement_lattice) \\<sqsubseteq>\n  (d::'a::refinement_lattice) \\<parallel> (i::'a::refinement_lattice)", "have \"\\<Sqinter>{ d. (c \\<sqsubseteq> d \\<parallel> i)} \\<sqsubseteq> d\""], ["proof (prove)\nusing this:\n  (c::'a::refinement_lattice) \\<sqsubseteq>\n  (d::'a::refinement_lattice) \\<parallel> (i::'a::refinement_lattice)\n\ngoal (1 subgoal):\n 1. \\<Sqinter> {d::'a. c \\<sqsubseteq> d \\<parallel> i} \\<sqsubseteq> d\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, d, i :: 'a\ntype variables:\n  'a :: refinement_lattice", "by (simp add: Inf_lower)"], ["proof (state)\nthis:\n  \\<Sqinter> {d::'a::refinement_lattice.\n              (c::'a::refinement_lattice) \\<sqsubseteq>\n              d \\<parallel> (i::'a::refinement_lattice)} \\<sqsubseteq>\n  (d::'a::refinement_lattice)\n\ngoal (1 subgoal):\n 1. c \\<sqsubseteq> d \\<parallel> i \\<Longrightarrow> c // i \\<sqsubseteq> d\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, d, i :: 'a\ntype variables:\n  'a :: refinement_lattice", "thus \"c // i \\<sqsubseteq> d\""], ["proof (prove)\nusing this:\n  \\<Sqinter> {d::'a::refinement_lattice.\n              (c::'a::refinement_lattice) \\<sqsubseteq>\n              d \\<parallel> (i::'a::refinement_lattice)} \\<sqsubseteq>\n  (d::'a::refinement_lattice)\n\ngoal (1 subgoal):\n 1. c // i \\<sqsubseteq> d\nvariables:\n  c, d, i :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by (metis rely_quotient_def)"], ["proof (state)\nthis:\n  (c::'a::refinement_lattice) // (i::'a::refinement_lattice) \\<sqsubseteq>\n  (d::'a::refinement_lattice)\n\ngoal:\nNo subgoals!\nvariables:\n  c, d, i :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "qed"], ["", "text \\<open>\n  Refining the ``numerator'' in a quotient, refines the quotient.\n\\<close>"], ["", "lemma rely_mono:\n  assumes c_refsto_d: \"c \\<sqsubseteq> d\"\n  shows \"(c // i) \\<sqsubseteq> (d // i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c // i \\<sqsubseteq> d // i\nvariables:\n  c, d, i :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c // i \\<sqsubseteq> d // i\nvariables:\n  c, d, i :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "have \"\\<And> f. ((d \\<sqsubseteq> f \\<parallel> i) \\<Longrightarrow> \\<exists> e. (c \\<sqsubseteq> e \\<parallel> i) \\<and> (e \\<sqsubseteq> f))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f::'a.\n       d \\<sqsubseteq> f \\<parallel> i \\<Longrightarrow>\n       \\<exists>e::'a.\n          c \\<sqsubseteq> e \\<parallel> i \\<and> e \\<sqsubseteq> f\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, d, i :: 'a\ntype variables:\n  'a :: refinement_lattice", "using c_refsto_d order.trans"], ["proof (prove)\nusing this:\n  (c::'a::refinement_lattice) \\<sqsubseteq> (d::'a::refinement_lattice)\n  \\<lbrakk>(?a::?'a::order) \\<le> (?b::?'a::order);\n   ?b \\<le> (?c::?'a::order)\\<rbrakk>\n  \\<Longrightarrow> ?a \\<le> ?c\n\ngoal (1 subgoal):\n 1. \\<And>f::'a.\n       d \\<sqsubseteq> f \\<parallel> i \\<Longrightarrow>\n       \\<exists>e::'a.\n          c \\<sqsubseteq> e \\<parallel> i \\<and> e \\<sqsubseteq> f\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, d, i :: 'a\ntype variables:\n  'a :: refinement_lattice", "by blast"], ["proof (state)\nthis:\n  (d::'a::refinement_lattice) \\<sqsubseteq>\n  (?f::'a::refinement_lattice) \\<parallel>\n  (i::'a::refinement_lattice) \\<Longrightarrow>\n  \\<exists>e::'a::refinement_lattice.\n     (c::'a::refinement_lattice) \\<sqsubseteq> e \\<parallel> i \\<and>\n     e \\<sqsubseteq> ?f\n\ngoal (1 subgoal):\n 1. c // i \\<sqsubseteq> d // i\nvariables:\n  c, d, i :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "then"], ["proof (chain)\npicking this:\n  (d::'a::refinement_lattice) \\<sqsubseteq>\n  (?f::'a::refinement_lattice) \\<parallel>\n  (i::'a::refinement_lattice) \\<Longrightarrow>\n  \\<exists>e::'a::refinement_lattice.\n     (c::'a::refinement_lattice) \\<sqsubseteq> e \\<parallel> i \\<and>\n     e \\<sqsubseteq> ?f", "have b: \"\\<Sqinter>{ e. (c \\<sqsubseteq> e \\<parallel> i)} \\<sqsubseteq>  \\<Sqinter>{ f. (d \\<sqsubseteq> f \\<parallel> i)}\""], ["proof (prove)\nusing this:\n  (d::'a::refinement_lattice) \\<sqsubseteq>\n  (?f::'a::refinement_lattice) \\<parallel>\n  (i::'a::refinement_lattice) \\<Longrightarrow>\n  \\<exists>e::'a::refinement_lattice.\n     (c::'a::refinement_lattice) \\<sqsubseteq> e \\<parallel> i \\<and>\n     e \\<sqsubseteq> ?f\n\ngoal (1 subgoal):\n 1. \\<Sqinter> {e::'a. c \\<sqsubseteq> e \\<parallel> i} \\<sqsubseteq>\n    \\<Sqinter> {f::'a. d \\<sqsubseteq> f \\<parallel> i}\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, d, i :: 'a\ntype variables:\n  'a :: refinement_lattice", "by (metis Inf_mono mem_Collect_eq)"], ["proof (state)\nthis:\n  \\<Sqinter> {e::'a::refinement_lattice.\n              (c::'a::refinement_lattice) \\<sqsubseteq>\n              e \\<parallel> (i::'a::refinement_lattice)} \\<sqsubseteq>\n  \\<Sqinter> {f::'a::refinement_lattice.\n              (d::'a::refinement_lattice) \\<sqsubseteq> f \\<parallel> i}\n\ngoal (1 subgoal):\n 1. c // i \\<sqsubseteq> d // i\nvariables:\n  c, d, i :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. c // i \\<sqsubseteq> d // i\nvariables:\n  c, d, i :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "using rely_quotient_def b"], ["proof (prove)\nusing this:\n  (?c::'a::refinement_lattice) // (?i::'a::refinement_lattice) \\<equiv>\n  \\<Sqinter> {d::'a::refinement_lattice. ?c \\<sqsubseteq> d \\<parallel> ?i}\n  \\<Sqinter> {e::'a::refinement_lattice.\n              (c::'a::refinement_lattice) \\<sqsubseteq>\n              e \\<parallel> (i::'a::refinement_lattice)} \\<sqsubseteq>\n  \\<Sqinter> {f::'a::refinement_lattice.\n              (d::'a::refinement_lattice) \\<sqsubseteq> f \\<parallel> i}\n\ngoal (1 subgoal):\n 1. c // i \\<sqsubseteq> d // i\nvariables:\n  c, d, i :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by simp"], ["proof (state)\nthis:\n  (c::'a::refinement_lattice) // (i::'a::refinement_lattice) \\<sqsubseteq>\n  (d::'a::refinement_lattice) // i\n\ngoal:\nNo subgoals!\nvariables:\n  c, d, i :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "qed"], ["", "text \\<open>\n  Refining the ``denominator'' in a quotient, gives a reverse refinement \n  for the quotients. This corresponds to weaken rely condition law of\n  Jones \\cite{jon83a}, \n  i.e. assuming less about the environment.\n\\<close>"], ["", "lemma weaken_rely: \n  assumes i_refsto_j: \"i \\<sqsubseteq> j\"\n  shows \"(c // j) \\<sqsubseteq> (c // i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c // j \\<sqsubseteq> c // i\nvariables:\n  c, i, j :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c // j \\<sqsubseteq> c // i\nvariables:\n  c, i, j :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "have \"\\<And> f. ((c \\<sqsubseteq> f \\<parallel> i) \\<Longrightarrow> \\<exists> e. (c \\<sqsubseteq> e \\<parallel> j) \\<and> (e \\<sqsubseteq> f))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f::'a.\n       c \\<sqsubseteq> f \\<parallel> i \\<Longrightarrow>\n       \\<exists>e::'a.\n          c \\<sqsubseteq> e \\<parallel> j \\<and> e \\<sqsubseteq> f\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, i, j :: 'a\ntype variables:\n  'a :: refinement_lattice", "using i_refsto_j order.trans"], ["proof (prove)\nusing this:\n  (i::'a::refinement_lattice) \\<sqsubseteq> (j::'a::refinement_lattice)\n  \\<lbrakk>(?a::?'a::order) \\<le> (?b::?'a::order);\n   ?b \\<le> (?c::?'a::order)\\<rbrakk>\n  \\<Longrightarrow> ?a \\<le> ?c\n\ngoal (1 subgoal):\n 1. \\<And>f::'a.\n       c \\<sqsubseteq> f \\<parallel> i \\<Longrightarrow>\n       \\<exists>e::'a.\n          c \\<sqsubseteq> e \\<parallel> j \\<and> e \\<sqsubseteq> f\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, i, j :: 'a\ntype variables:\n  'a :: refinement_lattice", "by (metis inf.absorb_iff2 inf_le1 inf_par_distrib inf_sup_ord(2) par_commute)"], ["proof (state)\nthis:\n  (c::'a::refinement_lattice) \\<sqsubseteq>\n  (?f::'a::refinement_lattice) \\<parallel>\n  (i::'a::refinement_lattice) \\<Longrightarrow>\n  \\<exists>e::'a::refinement_lattice.\n     c \\<sqsubseteq> e \\<parallel> (j::'a::refinement_lattice) \\<and>\n     e \\<sqsubseteq> ?f\n\ngoal (1 subgoal):\n 1. c // j \\<sqsubseteq> c // i\nvariables:\n  c, i, j :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "then"], ["proof (chain)\npicking this:\n  (c::'a::refinement_lattice) \\<sqsubseteq>\n  (?f::'a::refinement_lattice) \\<parallel>\n  (i::'a::refinement_lattice) \\<Longrightarrow>\n  \\<exists>e::'a::refinement_lattice.\n     c \\<sqsubseteq> e \\<parallel> (j::'a::refinement_lattice) \\<and>\n     e \\<sqsubseteq> ?f", "have b: \"\\<Sqinter>{ e. (c \\<sqsubseteq> e \\<parallel> j)} \\<sqsubseteq>  \\<Sqinter>{ f. (c \\<sqsubseteq> f \\<parallel> i)}\""], ["proof (prove)\nusing this:\n  (c::'a::refinement_lattice) \\<sqsubseteq>\n  (?f::'a::refinement_lattice) \\<parallel>\n  (i::'a::refinement_lattice) \\<Longrightarrow>\n  \\<exists>e::'a::refinement_lattice.\n     c \\<sqsubseteq> e \\<parallel> (j::'a::refinement_lattice) \\<and>\n     e \\<sqsubseteq> ?f\n\ngoal (1 subgoal):\n 1. \\<Sqinter> {e::'a. c \\<sqsubseteq> e \\<parallel> j} \\<sqsubseteq>\n    \\<Sqinter> {f::'a. c \\<sqsubseteq> f \\<parallel> i}\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, i, j :: 'a\ntype variables:\n  'a :: refinement_lattice", "by (metis Inf_mono mem_Collect_eq)"], ["proof (state)\nthis:\n  \\<Sqinter> {e::'a::refinement_lattice.\n              (c::'a::refinement_lattice) \\<sqsubseteq>\n              e \\<parallel> (j::'a::refinement_lattice)} \\<sqsubseteq>\n  \\<Sqinter> {f::'a::refinement_lattice.\n              c \\<sqsubseteq> f \\<parallel> (i::'a::refinement_lattice)}\n\ngoal (1 subgoal):\n 1. c // j \\<sqsubseteq> c // i\nvariables:\n  c, i, j :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. c // j \\<sqsubseteq> c // i\nvariables:\n  c, i, j :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "using rely_quotient_def b"], ["proof (prove)\nusing this:\n  (?c::'a::refinement_lattice) // (?i::'a::refinement_lattice) \\<equiv>\n  \\<Sqinter> {d::'a::refinement_lattice. ?c \\<sqsubseteq> d \\<parallel> ?i}\n  \\<Sqinter> {e::'a::refinement_lattice.\n              (c::'a::refinement_lattice) \\<sqsubseteq>\n              e \\<parallel> (j::'a::refinement_lattice)} \\<sqsubseteq>\n  \\<Sqinter> {f::'a::refinement_lattice.\n              c \\<sqsubseteq> f \\<parallel> (i::'a::refinement_lattice)}\n\ngoal (1 subgoal):\n 1. c // j \\<sqsubseteq> c // i\nvariables:\n  c, i, j :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by simp"], ["proof (state)\nthis:\n  (c::'a::refinement_lattice) // (j::'a::refinement_lattice) \\<sqsubseteq>\n  c // (i::'a::refinement_lattice)\n\ngoal:\nNo subgoals!\nvariables:\n  c, i, j :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "qed"], ["", "lemma par_nonabort: \n  assumes nonabort_i: \"chaos \\<sqsubseteq> i\"\n  assumes nonabort_j: \"chaos \\<sqsubseteq> j\"\n  shows \"chaos \\<sqsubseteq> i \\<parallel> j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. chaos \\<sqsubseteq> i \\<parallel> j\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  chaos, i, j :: 'a\ntype variables:\n  'a :: refinement_lattice", "by (meson chaos_par_chaos nonabort_i nonabort_j order_trans par_mono)"], ["", "text \\<open>\n  Nesting rely quotients of $j$ and $i$ means the same as a single quotient\n  which is the parallel composition of $i$ and $j$.\n\\<close>"], ["", "lemma nested_rely: \n  assumes j_nonabort: \"chaos \\<sqsubseteq> j\"\n  shows \"((c // j) // i) = c // (i \\<parallel> j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c // j // i = c // (i \\<parallel> j)\nvariables:\n  c, i, j :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "proof (rule antisym)"], ["proof (state)\ngoal (2 subgoals):\n 1. c // j // i \\<sqsubseteq> c // (i \\<parallel> j)\n 2. c // (i \\<parallel> j) \\<sqsubseteq> c // j // i\nvariables:\n  c, i, j :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "show \"((c // j) // i) \\<sqsubseteq> c // (i \\<parallel> j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c // j // i \\<sqsubseteq> c // (i \\<parallel> j)\nvariables:\n  c, i, j :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c // j // i \\<sqsubseteq> c // (i \\<parallel> j)\nvariables:\n  c, i, j :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "have \"\\<And> f. ((c \\<sqsubseteq> f \\<parallel> i \\<parallel> j) \\<Longrightarrow> \\<exists> e. (c \\<sqsubseteq> e \\<parallel> j) \\<and> (e \\<sqsubseteq> f \\<parallel> i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f::'a.\n       c \\<sqsubseteq> f \\<parallel> i \\<parallel> j \\<Longrightarrow>\n       \\<exists>e::'a.\n          c \\<sqsubseteq> e \\<parallel> j \\<and>\n          e \\<sqsubseteq> f \\<parallel> i\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, i, j :: 'a\ntype variables:\n  'a :: refinement_lattice", "by blast"], ["proof (state)\nthis:\n  (c::'a::refinement_lattice) \\<sqsubseteq>\n  (?f::'a::refinement_lattice) \\<parallel>\n  (i::'a::refinement_lattice) \\<parallel>\n  (j::'a::refinement_lattice) \\<Longrightarrow>\n  \\<exists>e::'a::refinement_lattice.\n     c \\<sqsubseteq> e \\<parallel> j \\<and> e \\<sqsubseteq> ?f \\<parallel> i\n\ngoal (1 subgoal):\n 1. c // j // i \\<sqsubseteq> c // (i \\<parallel> j)\nvariables:\n  c, i, j :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "then"], ["proof (chain)\npicking this:\n  (c::'a::refinement_lattice) \\<sqsubseteq>\n  (?f::'a::refinement_lattice) \\<parallel>\n  (i::'a::refinement_lattice) \\<parallel>\n  (j::'a::refinement_lattice) \\<Longrightarrow>\n  \\<exists>e::'a::refinement_lattice.\n     c \\<sqsubseteq> e \\<parallel> j \\<and> e \\<sqsubseteq> ?f \\<parallel> i", "have \"\\<Sqinter>{ d. (\\<Sqinter>{ e. (c \\<sqsubseteq> e \\<parallel> j)} \\<sqsubseteq> d \\<parallel> i)} \\<sqsubseteq>  \\<Sqinter>{ f. (c \\<sqsubseteq> f \\<parallel> i \\<parallel> j)}\""], ["proof (prove)\nusing this:\n  (c::'a::refinement_lattice) \\<sqsubseteq>\n  (?f::'a::refinement_lattice) \\<parallel>\n  (i::'a::refinement_lattice) \\<parallel>\n  (j::'a::refinement_lattice) \\<Longrightarrow>\n  \\<exists>e::'a::refinement_lattice.\n     c \\<sqsubseteq> e \\<parallel> j \\<and> e \\<sqsubseteq> ?f \\<parallel> i\n\ngoal (1 subgoal):\n 1. \\<Sqinter> {d::'a.\n                \\<Sqinter> {e::'a.\n                            c \\<sqsubseteq> e \\<parallel> j} \\<sqsubseteq>\n                d \\<parallel> i} \\<sqsubseteq>\n    \\<Sqinter> {f::'a. c \\<sqsubseteq> f \\<parallel> i \\<parallel> j}\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, i, j :: 'a\ntype variables:\n  'a :: refinement_lattice", "by (simp add: Collect_mono Inf_lower Inf_superset_mono)"], ["proof (state)\nthis:\n  \\<Sqinter> {d::'a::refinement_lattice.\n              \\<Sqinter> {e::'a::refinement_lattice.\n                          (c::'a::refinement_lattice) \\<sqsubseteq>\n                          e \\<parallel>\n                          (j::'a::refinement_lattice)} \\<sqsubseteq>\n              d \\<parallel> (i::'a::refinement_lattice)} \\<sqsubseteq>\n  \\<Sqinter> {f::'a::refinement_lattice.\n              c \\<sqsubseteq> f \\<parallel> i \\<parallel> j}\n\ngoal (1 subgoal):\n 1. c // j // i \\<sqsubseteq> c // (i \\<parallel> j)\nvariables:\n  c, i, j :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<Sqinter> {d::'a::refinement_lattice.\n              \\<Sqinter> {e::'a::refinement_lattice.\n                          (c::'a::refinement_lattice) \\<sqsubseteq>\n                          e \\<parallel>\n                          (j::'a::refinement_lattice)} \\<sqsubseteq>\n              d \\<parallel> (i::'a::refinement_lattice)} \\<sqsubseteq>\n  \\<Sqinter> {f::'a::refinement_lattice.\n              c \\<sqsubseteq> f \\<parallel> i \\<parallel> j}\n\ngoal (1 subgoal):\n 1. c // j // i \\<sqsubseteq> c // (i \\<parallel> j)\nvariables:\n  c, i, j :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "using local.rely_quotient_def par_assoc"], ["proof (prove)\nusing this:\n  \\<Sqinter> {d::'a::refinement_lattice.\n              \\<Sqinter> {e::'a::refinement_lattice.\n                          (c::'a::refinement_lattice) \\<sqsubseteq>\n                          e \\<parallel>\n                          (j::'a::refinement_lattice)} \\<sqsubseteq>\n              d \\<parallel> (i::'a::refinement_lattice)} \\<sqsubseteq>\n  \\<Sqinter> {f::'a::refinement_lattice.\n              c \\<sqsubseteq> f \\<parallel> i \\<parallel> j}\n  (?c::'a::refinement_lattice) // (?i::'a::refinement_lattice) \\<equiv>\n  \\<Sqinter> {d::'a::refinement_lattice. ?c \\<sqsubseteq> d \\<parallel> ?i}\n  (?a::'a::refinement_lattice) \\<parallel>\n  (?b::'a::refinement_lattice) \\<parallel>\n  (?c::'a::refinement_lattice) =\n  ?a \\<parallel> (?b \\<parallel> ?c)\n\ngoal (1 subgoal):\n 1. c // j // i \\<sqsubseteq> c // (i \\<parallel> j)\nvariables:\n  c, i, j :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by auto"], ["proof (state)\nthis:\n  (c::'a::refinement_lattice) // (j::'a::refinement_lattice) //\n  (i::'a::refinement_lattice) \\<sqsubseteq>\n  c // (i \\<parallel> j)\n\ngoal:\nNo subgoals!\nvariables:\n  c, i, j :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "qed"], ["proof (state)\nthis:\n  (c::'a::refinement_lattice) // (j::'a::refinement_lattice) //\n  (i::'a::refinement_lattice) \\<sqsubseteq>\n  c // (i \\<parallel> j)\n\ngoal (1 subgoal):\n 1. c // (i \\<parallel> j) \\<sqsubseteq> c // j // i\nvariables:\n  c, i, j :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. c // (i \\<parallel> j) \\<sqsubseteq> c // j // i\nvariables:\n  c, i, j :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "show \"c // (i \\<parallel> j) \\<sqsubseteq> ((c // j) // i) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. c // (i \\<parallel> j) \\<sqsubseteq> c // j // i\nvariables:\n  c, i, j :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c // (i \\<parallel> j) \\<sqsubseteq> c // j // i\nvariables:\n  c, i, j :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "have \"c \\<sqsubseteq> \\<Sqinter>{ e. (c \\<sqsubseteq> e \\<parallel> j)} \\<parallel> j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<sqsubseteq>\n    \\<Sqinter> {e::'a. c \\<sqsubseteq> e \\<parallel> j} \\<parallel> j\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, j :: 'a\ntype variables:\n  'a :: refinement_lattice", "using j_nonabort local.rely_quotient_def rely_quotient"], ["proof (prove)\nusing this:\n  chaos \\<sqsubseteq> (j::'a::refinement_lattice)\n  (?c::'a::refinement_lattice) // (?i::'a::refinement_lattice) \\<equiv>\n  \\<Sqinter> {d::'a::refinement_lattice. ?c \\<sqsubseteq> d \\<parallel> ?i}\n  chaos \\<sqsubseteq> (?i::'a::refinement_lattice) \\<Longrightarrow>\n  (?c::'a::refinement_lattice) \\<sqsubseteq> ?c // ?i \\<parallel> ?i\n\ngoal (1 subgoal):\n 1. c \\<sqsubseteq>\n    \\<Sqinter> {e::'a. c \\<sqsubseteq> e \\<parallel> j} \\<parallel> j\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, j :: 'a\ntype variables:\n  'a :: refinement_lattice", "by auto"], ["proof (state)\nthis:\n  (c::'a::refinement_lattice) \\<sqsubseteq>\n  \\<Sqinter> {e::'a::refinement_lattice.\n              c \\<sqsubseteq>\n              e \\<parallel> (j::'a::refinement_lattice)} \\<parallel>\n  j\n\ngoal (1 subgoal):\n 1. c // (i \\<parallel> j) \\<sqsubseteq> c // j // i\nvariables:\n  c, i, j :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "then"], ["proof (chain)\npicking this:\n  (c::'a::refinement_lattice) \\<sqsubseteq>\n  \\<Sqinter> {e::'a::refinement_lattice.\n              c \\<sqsubseteq>\n              e \\<parallel> (j::'a::refinement_lattice)} \\<parallel>\n  j", "have \"\\<And> d. \\<Sqinter>{ e. (c \\<sqsubseteq> e \\<parallel> j)} \\<sqsubseteq> d \\<parallel> i  \\<Longrightarrow> (c \\<sqsubseteq> d \\<parallel> i \\<parallel> j)\""], ["proof (prove)\nusing this:\n  (c::'a::refinement_lattice) \\<sqsubseteq>\n  \\<Sqinter> {e::'a::refinement_lattice.\n              c \\<sqsubseteq>\n              e \\<parallel> (j::'a::refinement_lattice)} \\<parallel>\n  j\n\ngoal (1 subgoal):\n 1. \\<And>d::'a.\n       \\<Sqinter> {e::'a. c \\<sqsubseteq> e \\<parallel> j} \\<sqsubseteq>\n       d \\<parallel> i \\<Longrightarrow>\n       c \\<sqsubseteq> d \\<parallel> i \\<parallel> j\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, i, j :: 'a\ntype variables:\n  'a :: refinement_lattice", "by (meson j_nonabort order_trans rely_refinement)"], ["proof (state)\nthis:\n  \\<Sqinter> {e::'a::refinement_lattice.\n              (c::'a::refinement_lattice) \\<sqsubseteq>\n              e \\<parallel> (j::'a::refinement_lattice)} \\<sqsubseteq>\n  (?d::'a::refinement_lattice) \\<parallel>\n  (i::'a::refinement_lattice) \\<Longrightarrow>\n  c \\<sqsubseteq> ?d \\<parallel> i \\<parallel> j\n\ngoal (1 subgoal):\n 1. c // (i \\<parallel> j) \\<sqsubseteq> c // j // i\nvariables:\n  c, i, j :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<Sqinter> {e::'a::refinement_lattice.\n              (c::'a::refinement_lattice) \\<sqsubseteq>\n              e \\<parallel> (j::'a::refinement_lattice)} \\<sqsubseteq>\n  (?d::'a::refinement_lattice) \\<parallel>\n  (i::'a::refinement_lattice) \\<Longrightarrow>\n  c \\<sqsubseteq> ?d \\<parallel> i \\<parallel> j\n\ngoal (1 subgoal):\n 1. c // (i \\<parallel> j) \\<sqsubseteq> c // j // i\nvariables:\n  c, i, j :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by (simp add: Collect_mono Inf_superset_mono local.rely_quotient_def par_assoc)"], ["proof (state)\nthis:\n  (c::'a::refinement_lattice) //\n  ((i::'a::refinement_lattice) \\<parallel>\n   (j::'a::refinement_lattice)) \\<sqsubseteq>\n  c // j // i\n\ngoal:\nNo subgoals!\nvariables:\n  c, i, j :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "qed"], ["proof (state)\nthis:\n  (c::'a::refinement_lattice) //\n  ((i::'a::refinement_lattice) \\<parallel>\n   (j::'a::refinement_lattice)) \\<sqsubseteq>\n  c // j // i\n\ngoal:\nNo subgoals!\nvariables:\n  c, i, j :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "qed"], ["", "end"], ["", "subsection \\<open>Distributed rely quotient\\<close>"], ["", "locale rely_distrib = rely_quotient + conjunction_sequential\nbegin"], ["", "text \\<open>\n  The following is a fundamental law for introducing a parallel composition\n  of process to refine a conjunction of specifications. \n  It represents an abstract view of the parallel introduction law of Jones \\cite{jon83a}.\n\\<close>"], ["", "lemma introduce_parallel: \n  assumes nonabort_i: \"chaos \\<sqsubseteq>  i\"\n  assumes nonabort_j: \"chaos \\<sqsubseteq>  j\"\n  shows \"c \\<iinter> d \\<sqsubseteq>  (j \\<iinter> (c // i)) \\<parallel> (i \\<iinter> (d // j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<iinter> d \\<sqsubseteq>\n    j \\<iinter> c // i \\<parallel> i \\<iinter> d // j\nvariables:\n  c, d, i, j :: 'a\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c \\<iinter> d \\<sqsubseteq>\n    j \\<iinter> c // i \\<parallel> i \\<iinter> d // j\nvariables:\n  c, d, i, j :: 'a\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "have a: \"c \\<sqsubseteq> (c // i) \\<parallel> i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<sqsubseteq> c // i \\<parallel> i\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, i :: 'a\ntype variables:\n  'a :: refinement_lattice", "using nonabort_i nonabort_j rely_quotient"], ["proof (prove)\nusing this:\n  chaos \\<sqsubseteq> (i::'a::refinement_lattice)\n  chaos \\<sqsubseteq> (j::'a::refinement_lattice)\n  chaos \\<sqsubseteq> (?i::'a::refinement_lattice) \\<Longrightarrow>\n  (?c::'a::refinement_lattice) \\<sqsubseteq> ?c // ?i \\<parallel> ?i\n\ngoal (1 subgoal):\n 1. c \\<sqsubseteq> c // i \\<parallel> i\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, i :: 'a\ntype variables:\n  'a :: refinement_lattice", "by auto"], ["proof (state)\nthis:\n  (c::'a::refinement_lattice) \\<sqsubseteq>\n  c // (i::'a::refinement_lattice) \\<parallel> i\n\ngoal (1 subgoal):\n 1. c \\<iinter> d \\<sqsubseteq>\n    j \\<iinter> c // i \\<parallel> i \\<iinter> d // j\nvariables:\n  c, d, i, j :: 'a\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "have b: \"d \\<sqsubseteq> j \\<parallel> (d // j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d \\<sqsubseteq> j \\<parallel> d // j\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  d, j :: 'a\ntype variables:\n  'a :: refinement_lattice", "using rely_quotient par_commute"], ["proof (prove)\nusing this:\n  chaos \\<sqsubseteq> (?i::'a::refinement_lattice) \\<Longrightarrow>\n  (?c::'a::refinement_lattice) \\<sqsubseteq> ?c // ?i \\<parallel> ?i\n  (?a::'a::refinement_lattice) \\<parallel> (?b::'a::refinement_lattice) =\n  ?b \\<parallel> ?a\n\ngoal (1 subgoal):\n 1. d \\<sqsubseteq> j \\<parallel> d // j\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  d, j :: 'a\ntype variables:\n  'a :: refinement_lattice", "by (simp add: nonabort_j)"], ["proof (state)\nthis:\n  (d::'a::refinement_lattice) \\<sqsubseteq>\n  (j::'a::refinement_lattice) \\<parallel> d // j\n\ngoal (1 subgoal):\n 1. c \\<iinter> d \\<sqsubseteq>\n    j \\<iinter> c // i \\<parallel> i \\<iinter> d // j\nvariables:\n  c, d, i, j :: 'a\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "have \"c \\<iinter> d \\<sqsubseteq>  ((c // i) \\<parallel> i) \\<iinter> ( j \\<parallel> (d // j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<iinter> d \\<sqsubseteq>\n    (c // i \\<parallel> i) \\<iinter> (j \\<parallel> d // j)\nvariables:\n  c, d, i, j :: 'a\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "using a b"], ["proof (prove)\nusing this:\n  (c::'a::refinement_lattice) \\<sqsubseteq>\n  c // (i::'a::refinement_lattice) \\<parallel> i\n  (d::'a::refinement_lattice) \\<sqsubseteq>\n  (j::'a::refinement_lattice) \\<parallel> d // j\n\ngoal (1 subgoal):\n 1. c \\<iinter> d \\<sqsubseteq>\n    (c // i \\<parallel> i) \\<iinter> (j \\<parallel> d // j)\nvariables:\n  c, d, i, j :: 'a\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by (metis conj_mono)"], ["proof (state)\nthis:\n  (c::'a::refinement_lattice) \\<iinter>\n  (d::'a::refinement_lattice) \\<sqsubseteq>\n  (c // (i::'a::refinement_lattice) \\<parallel> i) \\<iinter>\n  ((j::'a::refinement_lattice) \\<parallel> d // j)\n\ngoal (1 subgoal):\n 1. c \\<iinter> d \\<sqsubseteq>\n    j \\<iinter> c // i \\<parallel> i \\<iinter> d // j\nvariables:\n  c, d, i, j :: 'a\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "also"], ["proof (state)\nthis:\n  (c::'a::refinement_lattice) \\<iinter>\n  (d::'a::refinement_lattice) \\<sqsubseteq>\n  (c // (i::'a::refinement_lattice) \\<parallel> i) \\<iinter>\n  ((j::'a::refinement_lattice) \\<parallel> d // j)\n\ngoal (1 subgoal):\n 1. c \\<iinter> d \\<sqsubseteq>\n    j \\<iinter> c // i \\<parallel> i \\<iinter> d // j\nvariables:\n  c, d, i, j :: 'a\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "have interchange: \"c \\<iinter> d \\<sqsubseteq>  ((c // i) \\<iinter> j) \\<parallel> ( i \\<iinter> (d // j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<iinter> d \\<sqsubseteq>\n    c // i \\<iinter> j \\<parallel> i \\<iinter> d // j\nvariables:\n  c, d, i, j :: 'a\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "using parallel_interchange refine_trans calculation"], ["proof (prove)\nusing this:\n  ((?c\\<^sub>0::'a::refinement_lattice) \\<parallel>\n   (?c\\<^sub>1::'a::refinement_lattice)) \\<iinter>\n  ((?d\\<^sub>0::'a::refinement_lattice) \\<parallel>\n   (?d\\<^sub>1::'a::refinement_lattice)) \\<sqsubseteq>\n  ?c\\<^sub>0 \\<iinter> ?d\\<^sub>0 \\<parallel>\n  ?c\\<^sub>1 \\<iinter> ?d\\<^sub>1\n  \\<lbrakk>(?a::?'a::order) \\<le> (?b::?'a::order);\n   ?b \\<le> (?c::?'a::order)\\<rbrakk>\n  \\<Longrightarrow> ?a \\<le> ?c\n  (c::'a::refinement_lattice) \\<iinter>\n  (d::'a::refinement_lattice) \\<sqsubseteq>\n  (c // (i::'a::refinement_lattice) \\<parallel> i) \\<iinter>\n  ((j::'a::refinement_lattice) \\<parallel> d // j)\n\ngoal (1 subgoal):\n 1. c \\<iinter> d \\<sqsubseteq>\n    c // i \\<iinter> j \\<parallel> i \\<iinter> d // j\nvariables:\n  c, d, i, j :: 'a\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by blast"], ["proof (state)\nthis:\n  (c::'a::refinement_lattice) \\<iinter>\n  (d::'a::refinement_lattice) \\<sqsubseteq>\n  c // (i::'a::refinement_lattice) \\<iinter>\n  (j::'a::refinement_lattice) \\<parallel>\n  i \\<iinter> d // j\n\ngoal (1 subgoal):\n 1. c \\<iinter> d \\<sqsubseteq>\n    j \\<iinter> c // i \\<parallel> i \\<iinter> d // j\nvariables:\n  c, d, i, j :: 'a\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<iinter> d \\<sqsubseteq>\n    j \\<iinter> c // i \\<parallel> i \\<iinter> d // j\nvariables:\n  c, d, i, j :: 'a\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "using interchange"], ["proof (prove)\nusing this:\n  (c::'a::refinement_lattice) \\<iinter>\n  (d::'a::refinement_lattice) \\<sqsubseteq>\n  c // (i::'a::refinement_lattice) \\<iinter>\n  (j::'a::refinement_lattice) \\<parallel>\n  i \\<iinter> d // j\n\ngoal (1 subgoal):\n 1. c \\<iinter> d \\<sqsubseteq>\n    j \\<iinter> c // i \\<parallel> i \\<iinter> d // j\nvariables:\n  c, d, i, j :: 'a\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by (simp add: local.conj_commute)"], ["proof (state)\nthis:\n  (c::'a::refinement_lattice) \\<iinter>\n  (d::'a::refinement_lattice) \\<sqsubseteq>\n  (j::'a::refinement_lattice) \\<iinter>\n  c // (i::'a::refinement_lattice) \\<parallel>\n  i \\<iinter> d // j\n\ngoal:\nNo subgoals!\nvariables:\n  c, d, i, j :: 'a\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "qed"], ["", "text \\<open>\n  Rely quotients satisfy a range of distribution properties with respect\n  to the other operators.\n\\<close>"], ["", "lemma distribute_rely_conjunction: \n  assumes nonabort_i: \"chaos \\<sqsubseteq>  i\"\n  shows \"(c \\<iinter> d) // i  \\<sqsubseteq>  (c // i) \\<iinter> (d // i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (c \\<iinter> d) // i \\<sqsubseteq> c // i \\<iinter> d // i\nvariables:\n  c, d, i :: 'a\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (c \\<iinter> d) // i \\<sqsubseteq> c // i \\<iinter> d // i\nvariables:\n  c, d, i :: 'a\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "have \"c \\<iinter> d \\<sqsubseteq> ((c // i) \\<parallel> i) \\<iinter> ((d // i) \\<parallel> i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<iinter> d \\<sqsubseteq>\n    (c // i \\<parallel> i) \\<iinter> (d // i \\<parallel> i)\nvariables:\n  c, d, i :: 'a\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "using conj_mono rely_quotient"], ["proof (prove)\nusing this:\n  \\<lbrakk>(?c\\<^sub>0::'a::refinement_lattice) \\<sqsubseteq>\n           (?d\\<^sub>0::'a::refinement_lattice);\n   (?c\\<^sub>1::'a::refinement_lattice) \\<sqsubseteq>\n   (?d\\<^sub>1::'a::refinement_lattice)\\<rbrakk>\n  \\<Longrightarrow> ?c\\<^sub>0 \\<iinter> ?c\\<^sub>1 \\<sqsubseteq>\n                    ?d\\<^sub>0 \\<iinter> ?d\\<^sub>1\n  chaos \\<sqsubseteq> (?i::'a::refinement_lattice) \\<Longrightarrow>\n  (?c::'a::refinement_lattice) \\<sqsubseteq> ?c // ?i \\<parallel> ?i\n\ngoal (1 subgoal):\n 1. c \\<iinter> d \\<sqsubseteq>\n    (c // i \\<parallel> i) \\<iinter> (d // i \\<parallel> i)\nvariables:\n  c, d, i :: 'a\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by (simp add: nonabort_i)"], ["proof (state)\nthis:\n  (c::'a::refinement_lattice) \\<iinter>\n  (d::'a::refinement_lattice) \\<sqsubseteq>\n  (c // (i::'a::refinement_lattice) \\<parallel> i) \\<iinter>\n  (d // i \\<parallel> i)\n\ngoal (1 subgoal):\n 1. (c \\<iinter> d) // i \\<sqsubseteq> c // i \\<iinter> d // i\nvariables:\n  c, d, i :: 'a\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "then"], ["proof (chain)\npicking this:\n  (c::'a::refinement_lattice) \\<iinter>\n  (d::'a::refinement_lattice) \\<sqsubseteq>\n  (c // (i::'a::refinement_lattice) \\<parallel> i) \\<iinter>\n  (d // i \\<parallel> i)", "have \"c \\<iinter> d \\<sqsubseteq> ((c // i) \\<iinter> (d // i)) \\<parallel> (i \\<iinter> i)\""], ["proof (prove)\nusing this:\n  (c::'a::refinement_lattice) \\<iinter>\n  (d::'a::refinement_lattice) \\<sqsubseteq>\n  (c // (i::'a::refinement_lattice) \\<parallel> i) \\<iinter>\n  (d // i \\<parallel> i)\n\ngoal (1 subgoal):\n 1. c \\<iinter> d \\<sqsubseteq>\n    c // i \\<iinter> d // i \\<parallel> i \\<iinter> i\nvariables:\n  c, d, i :: 'a\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by (metis parallel_interchange refine_trans)"], ["proof (state)\nthis:\n  (c::'a::refinement_lattice) \\<iinter>\n  (d::'a::refinement_lattice) \\<sqsubseteq>\n  c // (i::'a::refinement_lattice) \\<iinter> d // i \\<parallel>\n  i \\<iinter> i\n\ngoal (1 subgoal):\n 1. (c \\<iinter> d) // i \\<sqsubseteq> c // i \\<iinter> d // i\nvariables:\n  c, d, i :: 'a\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "then"], ["proof (chain)\npicking this:\n  (c::'a::refinement_lattice) \\<iinter>\n  (d::'a::refinement_lattice) \\<sqsubseteq>\n  c // (i::'a::refinement_lattice) \\<iinter> d // i \\<parallel>\n  i \\<iinter> i", "have \"c \\<iinter> d \\<sqsubseteq> ((c // i) \\<iinter> (d // i)) \\<parallel> i\""], ["proof (prove)\nusing this:\n  (c::'a::refinement_lattice) \\<iinter>\n  (d::'a::refinement_lattice) \\<sqsubseteq>\n  c // (i::'a::refinement_lattice) \\<iinter> d // i \\<parallel>\n  i \\<iinter> i\n\ngoal (1 subgoal):\n 1. c \\<iinter> d \\<sqsubseteq> c // i \\<iinter> d // i \\<parallel> i\nvariables:\n  c, d, i :: 'a\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by (metis conj_idem)"], ["proof (state)\nthis:\n  (c::'a::refinement_lattice) \\<iinter>\n  (d::'a::refinement_lattice) \\<sqsubseteq>\n  c // (i::'a::refinement_lattice) \\<iinter> d // i \\<parallel> i\n\ngoal (1 subgoal):\n 1. (c \\<iinter> d) // i \\<sqsubseteq> c // i \\<iinter> d // i\nvariables:\n  c, d, i :: 'a\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "thus ?thesis"], ["proof (prove)\nusing this:\n  (c::'a::refinement_lattice) \\<iinter>\n  (d::'a::refinement_lattice) \\<sqsubseteq>\n  c // (i::'a::refinement_lattice) \\<iinter> d // i \\<parallel> i\n\ngoal (1 subgoal):\n 1. (c \\<iinter> d) // i \\<sqsubseteq> c // i \\<iinter> d // i\nvariables:\n  c, d, i :: 'a\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "using rely_refinement"], ["proof (prove)\nusing this:\n  (c::'a::refinement_lattice) \\<iinter>\n  (d::'a::refinement_lattice) \\<sqsubseteq>\n  c // (i::'a::refinement_lattice) \\<iinter> d // i \\<parallel> i\n  chaos \\<sqsubseteq> (?i::'a::refinement_lattice) \\<Longrightarrow>\n  ((?c::'a::refinement_lattice) // ?i \\<sqsubseteq>\n   (?d::'a::refinement_lattice)) =\n  (?c \\<sqsubseteq> ?d \\<parallel> ?i)\n\ngoal (1 subgoal):\n 1. (c \\<iinter> d) // i \\<sqsubseteq> c // i \\<iinter> d // i\nvariables:\n  c, d, i :: 'a\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by (simp add: nonabort_i)"], ["proof (state)\nthis:\n  ((c::'a::refinement_lattice) \\<iinter> (d::'a::refinement_lattice)) //\n  (i::'a::refinement_lattice) \\<sqsubseteq>\n  c // i \\<iinter> d // i\n\ngoal:\nNo subgoals!\nvariables:\n  c, d, i :: 'a\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "qed"], ["", "lemma distribute_rely_choice: \n  assumes nonabort_i: \"chaos \\<sqsubseteq>  i\"\n  shows \"(c \\<sqinter> d) // i  \\<sqsubseteq>  (c // i) \\<sqinter> (d // i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (c \\<sqinter> d) // i \\<sqsubseteq> c // i \\<sqinter> d // i\nvariables:\n  c, d, i :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (c \\<sqinter> d) // i \\<sqsubseteq> c // i \\<sqinter> d // i\nvariables:\n  c, d, i :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "have \"c \\<sqinter> d \\<sqsubseteq> ((c // i) \\<parallel> i) \\<sqinter> ((d // i) \\<parallel> i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<sqinter> d \\<sqsubseteq>\n    c // i \\<parallel> i \\<sqinter> d // i \\<parallel> i\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, d, i :: 'a\ntype variables:\n  'a :: refinement_lattice", "by (metis nonabort_i inf_mono rely_quotient)"], ["proof (state)\nthis:\n  (c::'a::refinement_lattice) \\<sqinter>\n  (d::'a::refinement_lattice) \\<sqsubseteq>\n  c // (i::'a::refinement_lattice) \\<parallel> i \\<sqinter>\n  d // i \\<parallel> i\n\ngoal (1 subgoal):\n 1. (c \\<sqinter> d) // i \\<sqsubseteq> c // i \\<sqinter> d // i\nvariables:\n  c, d, i :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "then"], ["proof (chain)\npicking this:\n  (c::'a::refinement_lattice) \\<sqinter>\n  (d::'a::refinement_lattice) \\<sqsubseteq>\n  c // (i::'a::refinement_lattice) \\<parallel> i \\<sqinter>\n  d // i \\<parallel> i", "have \"c \\<sqinter> d \\<sqsubseteq> ((c // i) \\<sqinter> (d // i)) \\<parallel> i\""], ["proof (prove)\nusing this:\n  (c::'a::refinement_lattice) \\<sqinter>\n  (d::'a::refinement_lattice) \\<sqsubseteq>\n  c // (i::'a::refinement_lattice) \\<parallel> i \\<sqinter>\n  d // i \\<parallel> i\n\ngoal (1 subgoal):\n 1. c \\<sqinter> d \\<sqsubseteq> (c // i \\<sqinter> d // i) \\<parallel> i\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, d, i :: 'a\ntype variables:\n  'a :: refinement_lattice", "by (metis inf_par_distrib)"], ["proof (state)\nthis:\n  (c::'a::refinement_lattice) \\<sqinter>\n  (d::'a::refinement_lattice) \\<sqsubseteq>\n  (c // (i::'a::refinement_lattice) \\<sqinter> d // i) \\<parallel> i\n\ngoal (1 subgoal):\n 1. (c \\<sqinter> d) // i \\<sqsubseteq> c // i \\<sqinter> d // i\nvariables:\n  c, d, i :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "thus ?thesis"], ["proof (prove)\nusing this:\n  (c::'a::refinement_lattice) \\<sqinter>\n  (d::'a::refinement_lattice) \\<sqsubseteq>\n  (c // (i::'a::refinement_lattice) \\<sqinter> d // i) \\<parallel> i\n\ngoal (1 subgoal):\n 1. (c \\<sqinter> d) // i \\<sqsubseteq> c // i \\<sqinter> d // i\nvariables:\n  c, d, i :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by (metis nonabort_i rely_refinement)"], ["proof (state)\nthis:\n  ((c::'a::refinement_lattice) \\<sqinter> (d::'a::refinement_lattice)) //\n  (i::'a::refinement_lattice) \\<sqsubseteq>\n  c // i \\<sqinter> d // i\n\ngoal:\nNo subgoals!\nvariables:\n  c, d, i :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "qed"], ["", "lemma distribute_rely_parallel1: \n  assumes nonabort_i: \"chaos \\<sqsubseteq>  i\"\n  assumes nonabort_j: \"chaos \\<sqsubseteq>  j\"\n  shows \"(c \\<parallel> d) // (i \\<parallel> j)  \\<sqsubseteq>  (c // i) \\<parallel> (d // j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (c \\<parallel> d) // (i \\<parallel> j) \\<sqsubseteq>\n    c // i \\<parallel> d // j\nvariables:\n  c, d, i, j :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (c \\<parallel> d) // (i \\<parallel> j) \\<sqsubseteq>\n    c // i \\<parallel> d // j\nvariables:\n  c, d, i, j :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "have \"(c \\<parallel> d) \\<sqsubseteq> ((c // i) \\<parallel> i) \\<parallel> ((d // j) \\<parallel> j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<parallel> d \\<sqsubseteq>\n    c // i \\<parallel> i \\<parallel> (d // j \\<parallel> j)\nvariables:\n  c, d, i, j :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "using par_mono rely_quotient nonabort_i nonabort_j"], ["proof (prove)\nusing this:\n  \\<lbrakk>(?c\\<^sub>1::'a::refinement_lattice) \\<sqsubseteq>\n           (?d\\<^sub>1::'a::refinement_lattice);\n   (?c\\<^sub>2::'a::refinement_lattice) \\<sqsubseteq>\n   (?d\\<^sub>2::'a::refinement_lattice)\\<rbrakk>\n  \\<Longrightarrow> ?c\\<^sub>1 \\<parallel> ?c\\<^sub>2 \\<sqsubseteq>\n                    ?d\\<^sub>1 \\<parallel> ?d\\<^sub>2\n  chaos \\<sqsubseteq> (?i::'a::refinement_lattice) \\<Longrightarrow>\n  (?c::'a::refinement_lattice) \\<sqsubseteq> ?c // ?i \\<parallel> ?i\n  chaos \\<sqsubseteq> (i::'a::refinement_lattice)\n  chaos \\<sqsubseteq> (j::'a::refinement_lattice)\n\ngoal (1 subgoal):\n 1. c \\<parallel> d \\<sqsubseteq>\n    c // i \\<parallel> i \\<parallel> (d // j \\<parallel> j)\nvariables:\n  c, d, i, j :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by simp"], ["proof (state)\nthis:\n  (c::'a::refinement_lattice) \\<parallel>\n  (d::'a::refinement_lattice) \\<sqsubseteq>\n  c // (i::'a::refinement_lattice) \\<parallel> i \\<parallel>\n  (d // (j::'a::refinement_lattice) \\<parallel> j)\n\ngoal (1 subgoal):\n 1. (c \\<parallel> d) // (i \\<parallel> j) \\<sqsubseteq>\n    c // i \\<parallel> d // j\nvariables:\n  c, d, i, j :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "then"], ["proof (chain)\npicking this:\n  (c::'a::refinement_lattice) \\<parallel>\n  (d::'a::refinement_lattice) \\<sqsubseteq>\n  c // (i::'a::refinement_lattice) \\<parallel> i \\<parallel>\n  (d // (j::'a::refinement_lattice) \\<parallel> j)", "have \"(c \\<parallel> d) \\<sqsubseteq> (c // i) \\<parallel> (d // j) \\<parallel> j \\<parallel> i\""], ["proof (prove)\nusing this:\n  (c::'a::refinement_lattice) \\<parallel>\n  (d::'a::refinement_lattice) \\<sqsubseteq>\n  c // (i::'a::refinement_lattice) \\<parallel> i \\<parallel>\n  (d // (j::'a::refinement_lattice) \\<parallel> j)\n\ngoal (1 subgoal):\n 1. c \\<parallel> d \\<sqsubseteq>\n    c // i \\<parallel> d // j \\<parallel> j \\<parallel> i\nvariables:\n  c, d, i, j :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by (metis par_assoc par_commute)"], ["proof (state)\nthis:\n  (c::'a::refinement_lattice) \\<parallel>\n  (d::'a::refinement_lattice) \\<sqsubseteq>\n  c // (i::'a::refinement_lattice) \\<parallel>\n  d // (j::'a::refinement_lattice) \\<parallel>\n  j \\<parallel>\n  i\n\ngoal (1 subgoal):\n 1. (c \\<parallel> d) // (i \\<parallel> j) \\<sqsubseteq>\n    c // i \\<parallel> d // j\nvariables:\n  c, d, i, j :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "thus ?thesis"], ["proof (prove)\nusing this:\n  (c::'a::refinement_lattice) \\<parallel>\n  (d::'a::refinement_lattice) \\<sqsubseteq>\n  c // (i::'a::refinement_lattice) \\<parallel>\n  d // (j::'a::refinement_lattice) \\<parallel>\n  j \\<parallel>\n  i\n\ngoal (1 subgoal):\n 1. (c \\<parallel> d) // (i \\<parallel> j) \\<sqsubseteq>\n    c // i \\<parallel> d // j\nvariables:\n  c, d, i, j :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "using par_assoc par_commute rely_refinement"], ["proof (prove)\nusing this:\n  (c::'a::refinement_lattice) \\<parallel>\n  (d::'a::refinement_lattice) \\<sqsubseteq>\n  c // (i::'a::refinement_lattice) \\<parallel>\n  d // (j::'a::refinement_lattice) \\<parallel>\n  j \\<parallel>\n  i\n  (?a::'a::refinement_lattice) \\<parallel>\n  (?b::'a::refinement_lattice) \\<parallel>\n  (?c::'a::refinement_lattice) =\n  ?a \\<parallel> (?b \\<parallel> ?c)\n  (?a::'a::refinement_lattice) \\<parallel> (?b::'a::refinement_lattice) =\n  ?b \\<parallel> ?a\n  chaos \\<sqsubseteq> (?i::'a::refinement_lattice) \\<Longrightarrow>\n  ((?c::'a::refinement_lattice) // ?i \\<sqsubseteq>\n   (?d::'a::refinement_lattice)) =\n  (?c \\<sqsubseteq> ?d \\<parallel> ?i)\n\ngoal (1 subgoal):\n 1. (c \\<parallel> d) // (i \\<parallel> j) \\<sqsubseteq>\n    c // i \\<parallel> d // j\nvariables:\n  c, d, i, j :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by (metis nonabort_i nonabort_j par_nonabort)"], ["proof (state)\nthis:\n  ((c::'a::refinement_lattice) \\<parallel> (d::'a::refinement_lattice)) //\n  ((i::'a::refinement_lattice) \\<parallel>\n   (j::'a::refinement_lattice)) \\<sqsubseteq>\n  c // i \\<parallel> d // j\n\ngoal:\nNo subgoals!\nvariables:\n  c, d, i, j :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "qed"], ["", "lemma distribute_rely_parallel2: \n  assumes nonabort_i: \"chaos \\<sqsubseteq> i\"\n  assumes i_par_i: \"i \\<parallel> i \\<sqsubseteq> i\"\n  shows \"(c \\<parallel> d) // i  \\<sqsubseteq>  (c // i) \\<parallel> (d // i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (c \\<parallel> d) // i \\<sqsubseteq> c // i \\<parallel> d // i\nvariables:\n  c, d, i :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (c \\<parallel> d) // i \\<sqsubseteq> c // i \\<parallel> d // i\nvariables:\n  c, d, i :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "have \"(c \\<parallel> d) // i \\<sqsubseteq> ((c \\<parallel> d) // (i \\<parallel> i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (c \\<parallel> d) // i \\<sqsubseteq>\n    (c \\<parallel> d) // (i \\<parallel> i)\nvariables:\n  c, d, i :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "using assms(1)"], ["proof (prove)\nusing this:\n  chaos \\<sqsubseteq> (i::'a::refinement_lattice)\n\ngoal (1 subgoal):\n 1. (c \\<parallel> d) // i \\<sqsubseteq>\n    (c \\<parallel> d) // (i \\<parallel> i)\nvariables:\n  c, d, i :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "using weaken_rely"], ["proof (prove)\nusing this:\n  chaos \\<sqsubseteq> (i::'a::refinement_lattice)\n  (?i::'a::refinement_lattice) \\<sqsubseteq>\n  (?j::'a::refinement_lattice) \\<Longrightarrow>\n  (?c::'a::refinement_lattice) // ?j \\<sqsubseteq> ?c // ?i\n\ngoal (1 subgoal):\n 1. (c \\<parallel> d) // i \\<sqsubseteq>\n    (c \\<parallel> d) // (i \\<parallel> i)\nvariables:\n  c, d, i :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by (simp add: i_par_i par_nonabort)"], ["proof (state)\nthis:\n  ((c::'a::refinement_lattice) \\<parallel> (d::'a::refinement_lattice)) //\n  (i::'a::refinement_lattice) \\<sqsubseteq>\n  (c \\<parallel> d) // (i \\<parallel> i)\n\ngoal (1 subgoal):\n 1. (c \\<parallel> d) // i \\<sqsubseteq> c // i \\<parallel> d // i\nvariables:\n  c, d, i :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "thus ?thesis"], ["proof (prove)\nusing this:\n  ((c::'a::refinement_lattice) \\<parallel> (d::'a::refinement_lattice)) //\n  (i::'a::refinement_lattice) \\<sqsubseteq>\n  (c \\<parallel> d) // (i \\<parallel> i)\n\ngoal (1 subgoal):\n 1. (c \\<parallel> d) // i \\<sqsubseteq> c // i \\<parallel> d // i\nvariables:\n  c, d, i :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by (metis distribute_rely_parallel1 refine_trans nonabort_i)"], ["proof (state)\nthis:\n  ((c::'a::refinement_lattice) \\<parallel> (d::'a::refinement_lattice)) //\n  (i::'a::refinement_lattice) \\<sqsubseteq>\n  c // i \\<parallel> d // i\n\ngoal:\nNo subgoals!\nvariables:\n  c, d, i :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "qed"], ["", "lemma distribute_rely_sequential: \n  assumes nonabort_i: \"chaos \\<sqsubseteq> i\"\n  assumes \"(\\<forall> c. (\\<forall> d. ((c \\<parallel> i);(d \\<parallel> i) \\<sqsubseteq> (c;d) \\<parallel> i)))\"\n  shows \"(c;d) // i \\<sqsubseteq> (c // i);(d // i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c ; d // i \\<sqsubseteq> (c // i) ; (d // i)\nvariables:\n  c, d, i :: 'a\n  (\\<parallel>), (;) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c ; d // i \\<sqsubseteq> (c // i) ; (d // i)\nvariables:\n  c, d, i :: 'a\n  (\\<parallel>), (;) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "have \"c;d \\<sqsubseteq> ((c // i) \\<parallel> i);((d // i) \\<parallel> i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c ; d \\<sqsubseteq> (c // i \\<parallel> i) ; (d // i \\<parallel> i)\nvariables:\n  c, d, i :: 'a\n  (\\<parallel>), (;) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by (metis rely_quotient nonabort_i seq_mono)"], ["proof (state)\nthis:\n  (c::'a::refinement_lattice) ; (d::'a::refinement_lattice) \\<sqsubseteq>\n  (c // (i::'a::refinement_lattice) \\<parallel> i) ; (d // i \\<parallel> i)\n\ngoal (1 subgoal):\n 1. c ; d // i \\<sqsubseteq> (c // i) ; (d // i)\nvariables:\n  c, d, i :: 'a\n  (\\<parallel>), (;) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "then"], ["proof (chain)\npicking this:\n  (c::'a::refinement_lattice) ; (d::'a::refinement_lattice) \\<sqsubseteq>\n  (c // (i::'a::refinement_lattice) \\<parallel> i) ; (d // i \\<parallel> i)", "have \"c;d \\<sqsubseteq> (c // i) ; (d // i) \\<parallel> i\""], ["proof (prove)\nusing this:\n  (c::'a::refinement_lattice) ; (d::'a::refinement_lattice) \\<sqsubseteq>\n  (c // (i::'a::refinement_lattice) \\<parallel> i) ; (d // i \\<parallel> i)\n\ngoal (1 subgoal):\n 1. c ; d \\<sqsubseteq> (c // i) ; (d // i) \\<parallel> i\nvariables:\n  c, d, i :: 'a\n  (\\<parallel>), (;) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "using assms(2)"], ["proof (prove)\nusing this:\n  (c::'a::refinement_lattice) ; (d::'a::refinement_lattice) \\<sqsubseteq>\n  (c // (i::'a::refinement_lattice) \\<parallel> i) ; (d // i \\<parallel> i)\n  \\<forall>(c::'a::refinement_lattice) d::'a::refinement_lattice.\n     (c \\<parallel> (i::'a::refinement_lattice)) ;\n     (d \\<parallel> i) \\<sqsubseteq>\n     c ; d \\<parallel> i\n\ngoal (1 subgoal):\n 1. c ; d \\<sqsubseteq> (c // i) ; (d // i) \\<parallel> i\nvariables:\n  c, d, i :: 'a\n  (\\<parallel>), (;) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by (metis refine_trans)"], ["proof (state)\nthis:\n  (c::'a::refinement_lattice) ; (d::'a::refinement_lattice) \\<sqsubseteq>\n  (c // (i::'a::refinement_lattice)) ; (d // i) \\<parallel> i\n\ngoal (1 subgoal):\n 1. c ; d // i \\<sqsubseteq> (c // i) ; (d // i)\nvariables:\n  c, d, i :: 'a\n  (\\<parallel>), (;) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "thus ?thesis"], ["proof (prove)\nusing this:\n  (c::'a::refinement_lattice) ; (d::'a::refinement_lattice) \\<sqsubseteq>\n  (c // (i::'a::refinement_lattice)) ; (d // i) \\<parallel> i\n\ngoal (1 subgoal):\n 1. c ; d // i \\<sqsubseteq> (c // i) ; (d // i)\nvariables:\n  c, d, i :: 'a\n  (\\<parallel>), (;) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by (metis rely_refinement nonabort_i)"], ["proof (state)\nthis:\n  (c::'a::refinement_lattice) ; (d::'a::refinement_lattice) //\n  (i::'a::refinement_lattice) \\<sqsubseteq>\n  (c // i) ; (d // i)\n\ngoal:\nNo subgoals!\nvariables:\n  c, d, i :: 'a\n  (\\<parallel>), (;) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "qed"], ["", "lemma distribute_rely_sequential_event: \n  assumes nonabort_i: \"chaos \\<sqsubseteq> i\"\n  assumes nonabort_j: \"chaos \\<sqsubseteq> j\"\n  assumes nonabort_e: \"chaos \\<sqsubseteq> e\"\n  assumes \"(\\<forall> c. (\\<forall> d. ((c \\<parallel> i);e;(d \\<parallel> j) \\<sqsubseteq> (c;e;d) \\<parallel> (i;e;j))))\" \n  shows \"(c;e;d) // (i;e;j) \\<sqsubseteq> (c // i);e;(d // j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c ; e ; d // i ; e ; j \\<sqsubseteq> (c // i) ; e ; (d // j)\nvariables:\n  c, d, e, i, j :: 'a\n  (\\<parallel>), (;) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c ; e ; d // i ; e ; j \\<sqsubseteq> (c // i) ; e ; (d // j)\nvariables:\n  c, d, e, i, j :: 'a\n  (\\<parallel>), (;) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "have \"c;e;d \\<sqsubseteq> ((c // i) \\<parallel> i);e;((d // j) \\<parallel> j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c ; e ; d \\<sqsubseteq>\n    (c // i \\<parallel> i) ; e ; (d // j \\<parallel> j)\nvariables:\n  c, d, e, i, j :: 'a\n  (\\<parallel>), (;) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by (metis order.refl rely_quotient nonabort_i nonabort_j seq_mono)"], ["proof (state)\nthis:\n  (c::'a::refinement_lattice) ; (e::'a::refinement_lattice) ;\n  (d::'a::refinement_lattice) \\<sqsubseteq>\n  (c // (i::'a::refinement_lattice) \\<parallel> i) ; e ;\n  (d // (j::'a::refinement_lattice) \\<parallel> j)\n\ngoal (1 subgoal):\n 1. c ; e ; d // i ; e ; j \\<sqsubseteq> (c // i) ; e ; (d // j)\nvariables:\n  c, d, e, i, j :: 'a\n  (\\<parallel>), (;) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "then"], ["proof (chain)\npicking this:\n  (c::'a::refinement_lattice) ; (e::'a::refinement_lattice) ;\n  (d::'a::refinement_lattice) \\<sqsubseteq>\n  (c // (i::'a::refinement_lattice) \\<parallel> i) ; e ;\n  (d // (j::'a::refinement_lattice) \\<parallel> j)", "have \"c;e;d \\<sqsubseteq> ((c // i);e;(d // j)) \\<parallel> (i;e;j)\""], ["proof (prove)\nusing this:\n  (c::'a::refinement_lattice) ; (e::'a::refinement_lattice) ;\n  (d::'a::refinement_lattice) \\<sqsubseteq>\n  (c // (i::'a::refinement_lattice) \\<parallel> i) ; e ;\n  (d // (j::'a::refinement_lattice) \\<parallel> j)\n\ngoal (1 subgoal):\n 1. c ; e ; d \\<sqsubseteq> (c // i) ; e ; (d // j) \\<parallel> i ; e ; j\nvariables:\n  c, d, e, i, j :: 'a\n  (\\<parallel>), (;) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "using assms"], ["proof (prove)\nusing this:\n  (c::'a::refinement_lattice) ; (e::'a::refinement_lattice) ;\n  (d::'a::refinement_lattice) \\<sqsubseteq>\n  (c // (i::'a::refinement_lattice) \\<parallel> i) ; e ;\n  (d // (j::'a::refinement_lattice) \\<parallel> j)\n  chaos \\<sqsubseteq> (i::'a::refinement_lattice)\n  chaos \\<sqsubseteq> (j::'a::refinement_lattice)\n  chaos \\<sqsubseteq> (e::'a::refinement_lattice)\n  \\<forall>(c::'a::refinement_lattice) d::'a::refinement_lattice.\n     (c \\<parallel> (i::'a::refinement_lattice)) ;\n     (e::'a::refinement_lattice) ;\n     (d \\<parallel> (j::'a::refinement_lattice)) \\<sqsubseteq>\n     c ; e ; d \\<parallel> i ; e ; j\n\ngoal (1 subgoal):\n 1. c ; e ; d \\<sqsubseteq> (c // i) ; e ; (d // j) \\<parallel> i ; e ; j\nvariables:\n  c, d, e, i, j :: 'a\n  (\\<parallel>), (;) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by (metis refine_trans)"], ["proof (state)\nthis:\n  (c::'a::refinement_lattice) ; (e::'a::refinement_lattice) ;\n  (d::'a::refinement_lattice) \\<sqsubseteq>\n  (c // (i::'a::refinement_lattice)) ; e ;\n  (d // (j::'a::refinement_lattice)) \\<parallel>\n  i ; e ; j\n\ngoal (1 subgoal):\n 1. c ; e ; d // i ; e ; j \\<sqsubseteq> (c // i) ; e ; (d // j)\nvariables:\n  c, d, e, i, j :: 'a\n  (\\<parallel>), (;) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "thus ?thesis"], ["proof (prove)\nusing this:\n  (c::'a::refinement_lattice) ; (e::'a::refinement_lattice) ;\n  (d::'a::refinement_lattice) \\<sqsubseteq>\n  (c // (i::'a::refinement_lattice)) ; e ;\n  (d // (j::'a::refinement_lattice)) \\<parallel>\n  i ; e ; j\n\ngoal (1 subgoal):\n 1. c ; e ; d // i ; e ; j \\<sqsubseteq> (c // i) ; e ; (d // j)\nvariables:\n  c, d, e, i, j :: 'a\n  (\\<parallel>), (;) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "using rely_refinement nonabort_i nonabort_j nonabort_e"], ["proof (prove)\nusing this:\n  (c::'a::refinement_lattice) ; (e::'a::refinement_lattice) ;\n  (d::'a::refinement_lattice) \\<sqsubseteq>\n  (c // (i::'a::refinement_lattice)) ; e ;\n  (d // (j::'a::refinement_lattice)) \\<parallel>\n  i ; e ; j\n  chaos \\<sqsubseteq> (?i::'a::refinement_lattice) \\<Longrightarrow>\n  ((?c::'a::refinement_lattice) // ?i \\<sqsubseteq>\n   (?d::'a::refinement_lattice)) =\n  (?c \\<sqsubseteq> ?d \\<parallel> ?i)\n  chaos \\<sqsubseteq> (i::'a::refinement_lattice)\n  chaos \\<sqsubseteq> (j::'a::refinement_lattice)\n  chaos \\<sqsubseteq> (e::'a::refinement_lattice)\n\ngoal (1 subgoal):\n 1. c ; e ; d // i ; e ; j \\<sqsubseteq> (c // i) ; e ; (d // j)\nvariables:\n  c, d, e, i, j :: 'a\n  (\\<parallel>), (;) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by (simp add: Inf_lower local.rely_quotient_def)"], ["proof (state)\nthis:\n  (c::'a::refinement_lattice) ; (e::'a::refinement_lattice) ;\n  (d::'a::refinement_lattice) //\n  (i::'a::refinement_lattice) ; e ;\n  (j::'a::refinement_lattice) \\<sqsubseteq>\n  (c // i) ; e ; (d // j)\n\ngoal:\nNo subgoals!\nvariables:\n  c, d, e, i, j :: 'a\n  (\\<parallel>), (;) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "qed"], ["", "lemma introduce_parallel_with_rely: \n  assumes nonabort_i: \"chaos \\<sqsubseteq> i\"\n  assumes nonabort_j0: \"chaos \\<sqsubseteq>  j\\<^sub>0\"\n  assumes nonabort_j1: \"chaos \\<sqsubseteq>  j\\<^sub>1\"\n  shows \"(c \\<iinter> d) // i \\<sqsubseteq> (j\\<^sub>1 \\<iinter> (c // (j\\<^sub>0 \\<parallel> i))) \\<parallel> (j\\<^sub>0 \\<iinter> (d // (j\\<^sub>1 \\<parallel> i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (c \\<iinter> d) // i \\<sqsubseteq>\n    j\\<^sub>1 \\<iinter> c // (j\\<^sub>0 \\<parallel> i) \\<parallel>\n    j\\<^sub>0 \\<iinter> d // (j\\<^sub>1 \\<parallel> i)\nvariables:\n  c, d, i, j\\<^sub>0, j\\<^sub>1 :: 'a\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (c \\<iinter> d) // i \\<sqsubseteq>\n    j\\<^sub>1 \\<iinter> c // (j\\<^sub>0 \\<parallel> i) \\<parallel>\n    j\\<^sub>0 \\<iinter> d // (j\\<^sub>1 \\<parallel> i)\nvariables:\n  c, d, i, j\\<^sub>0, j\\<^sub>1 :: 'a\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "have \"(c \\<iinter> d) // i \\<sqsubseteq> (c // i) \\<iinter> (d // i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (c \\<iinter> d) // i \\<sqsubseteq> c // i \\<iinter> d // i\nvariables:\n  c, d, i :: 'a\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by (metis distribute_rely_conjunction nonabort_i)"], ["proof (state)\nthis:\n  ((c::'a::refinement_lattice) \\<iinter> (d::'a::refinement_lattice)) //\n  (i::'a::refinement_lattice) \\<sqsubseteq>\n  c // i \\<iinter> d // i\n\ngoal (1 subgoal):\n 1. (c \\<iinter> d) // i \\<sqsubseteq>\n    j\\<^sub>1 \\<iinter> c // (j\\<^sub>0 \\<parallel> i) \\<parallel>\n    j\\<^sub>0 \\<iinter> d // (j\\<^sub>1 \\<parallel> i)\nvariables:\n  c, d, i, j\\<^sub>0, j\\<^sub>1 :: 'a\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "then"], ["proof (chain)\npicking this:\n  ((c::'a::refinement_lattice) \\<iinter> (d::'a::refinement_lattice)) //\n  (i::'a::refinement_lattice) \\<sqsubseteq>\n  c // i \\<iinter> d // i", "have \"(c \\<iinter> d) // i \\<sqsubseteq> (j\\<^sub>1 \\<iinter> ((c // i) // j\\<^sub>0)) \\<parallel> (j\\<^sub>0 \\<iinter> ((d // i) // j\\<^sub>1))\""], ["proof (prove)\nusing this:\n  ((c::'a::refinement_lattice) \\<iinter> (d::'a::refinement_lattice)) //\n  (i::'a::refinement_lattice) \\<sqsubseteq>\n  c // i \\<iinter> d // i\n\ngoal (1 subgoal):\n 1. (c \\<iinter> d) // i \\<sqsubseteq>\n    j\\<^sub>1 \\<iinter> c // i // j\\<^sub>0 \\<parallel>\n    j\\<^sub>0 \\<iinter> d // i // j\\<^sub>1\nvariables:\n  c, d, i, j\\<^sub>0, j\\<^sub>1 :: 'a\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by (metis introduce_parallel nonabort_j0 nonabort_j1 inf_assoc inf.absorb_iff1)"], ["proof (state)\nthis:\n  ((c::'a::refinement_lattice) \\<iinter> (d::'a::refinement_lattice)) //\n  (i::'a::refinement_lattice) \\<sqsubseteq>\n  (j\\<^sub>1::'a::refinement_lattice) \\<iinter>\n  c // i // (j\\<^sub>0::'a::refinement_lattice) \\<parallel>\n  j\\<^sub>0 \\<iinter> d // i // j\\<^sub>1\n\ngoal (1 subgoal):\n 1. (c \\<iinter> d) // i \\<sqsubseteq>\n    j\\<^sub>1 \\<iinter> c // (j\\<^sub>0 \\<parallel> i) \\<parallel>\n    j\\<^sub>0 \\<iinter> d // (j\\<^sub>1 \\<parallel> i)\nvariables:\n  c, d, i, j\\<^sub>0, j\\<^sub>1 :: 'a\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "thus ?thesis"], ["proof (prove)\nusing this:\n  ((c::'a::refinement_lattice) \\<iinter> (d::'a::refinement_lattice)) //\n  (i::'a::refinement_lattice) \\<sqsubseteq>\n  (j\\<^sub>1::'a::refinement_lattice) \\<iinter>\n  c // i // (j\\<^sub>0::'a::refinement_lattice) \\<parallel>\n  j\\<^sub>0 \\<iinter> d // i // j\\<^sub>1\n\ngoal (1 subgoal):\n 1. (c \\<iinter> d) // i \\<sqsubseteq>\n    j\\<^sub>1 \\<iinter> c // (j\\<^sub>0 \\<parallel> i) \\<parallel>\n    j\\<^sub>0 \\<iinter> d // (j\\<^sub>1 \\<parallel> i)\nvariables:\n  c, d, i, j\\<^sub>0, j\\<^sub>1 :: 'a\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by (simp add: nested_rely nonabort_i)"], ["proof (state)\nthis:\n  ((c::'a::refinement_lattice) \\<iinter> (d::'a::refinement_lattice)) //\n  (i::'a::refinement_lattice) \\<sqsubseteq>\n  (j\\<^sub>1::'a::refinement_lattice) \\<iinter>\n  c // ((j\\<^sub>0::'a::refinement_lattice) \\<parallel> i) \\<parallel>\n  j\\<^sub>0 \\<iinter> d // (j\\<^sub>1 \\<parallel> i)\n\ngoal:\nNo subgoals!\nvariables:\n  c, d, i, j\\<^sub>0, j\\<^sub>1 :: 'a\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "qed"], ["", "lemma introduce_parallel_with_rely_guarantee: \n  assumes nonabort_i: \"chaos \\<sqsubseteq>  i\"\n  assumes nonabort_j0: \"chaos \\<sqsubseteq>  j\\<^sub>0\"\n  assumes nonabort_j1: \"chaos \\<sqsubseteq>  j\\<^sub>1\"\n  shows \"(j\\<^sub>1 \\<parallel> j\\<^sub>0) \\<iinter> (c \\<iinter> d) // i \\<sqsubseteq> (j\\<^sub>1 \\<iinter> (c // (j\\<^sub>0 \\<parallel> i))) \\<parallel> (j\\<^sub>0 \\<iinter> (d // (j\\<^sub>1 \\<parallel> i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (j\\<^sub>1 \\<parallel> j\\<^sub>0) \\<iinter>\n    (c \\<iinter> d) // i \\<sqsubseteq>\n    j\\<^sub>1 \\<iinter> c // (j\\<^sub>0 \\<parallel> i) \\<parallel>\n    j\\<^sub>0 \\<iinter> d // (j\\<^sub>1 \\<parallel> i)\nvariables:\n  c, d, i, j\\<^sub>0, j\\<^sub>1 :: 'a\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (j\\<^sub>1 \\<parallel> j\\<^sub>0) \\<iinter>\n    (c \\<iinter> d) // i \\<sqsubseteq>\n    j\\<^sub>1 \\<iinter> c // (j\\<^sub>0 \\<parallel> i) \\<parallel>\n    j\\<^sub>0 \\<iinter> d // (j\\<^sub>1 \\<parallel> i)\nvariables:\n  c, d, i, j\\<^sub>0, j\\<^sub>1 :: 'a\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "have \"(j\\<^sub>1 \\<parallel> j\\<^sub>0) \\<iinter> (c \\<iinter> d) // i \\<sqsubseteq> (j\\<^sub>1 \\<parallel> j\\<^sub>0) \\<iinter> ((j\\<^sub>1 \\<iinter> (c // (j\\<^sub>0 \\<parallel> i))) \\<parallel> (j\\<^sub>0 \\<iinter> (d // (j\\<^sub>1 \\<parallel> i))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (j\\<^sub>1 \\<parallel> j\\<^sub>0) \\<iinter>\n    (c \\<iinter> d) // i \\<sqsubseteq>\n    (j\\<^sub>1 \\<parallel> j\\<^sub>0) \\<iinter>\n    (j\\<^sub>1 \\<iinter> c // (j\\<^sub>0 \\<parallel> i) \\<parallel>\n     j\\<^sub>0 \\<iinter> d // (j\\<^sub>1 \\<parallel> i))\nvariables:\n  c, d, i, j\\<^sub>0, j\\<^sub>1 :: 'a\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by (metis introduce_parallel_with_rely nonabort_i nonabort_j0 nonabort_j1 \n        conj_mono order.refl)"], ["proof (state)\nthis:\n  ((j\\<^sub>1::'a::refinement_lattice) \\<parallel>\n   (j\\<^sub>0::'a::refinement_lattice)) \\<iinter>\n  ((c::'a::refinement_lattice) \\<iinter> (d::'a::refinement_lattice)) //\n  (i::'a::refinement_lattice) \\<sqsubseteq>\n  (j\\<^sub>1 \\<parallel> j\\<^sub>0) \\<iinter>\n  (j\\<^sub>1 \\<iinter> c // (j\\<^sub>0 \\<parallel> i) \\<parallel>\n   j\\<^sub>0 \\<iinter> d // (j\\<^sub>1 \\<parallel> i))\n\ngoal (1 subgoal):\n 1. (j\\<^sub>1 \\<parallel> j\\<^sub>0) \\<iinter>\n    (c \\<iinter> d) // i \\<sqsubseteq>\n    j\\<^sub>1 \\<iinter> c // (j\\<^sub>0 \\<parallel> i) \\<parallel>\n    j\\<^sub>0 \\<iinter> d // (j\\<^sub>1 \\<parallel> i)\nvariables:\n  c, d, i, j\\<^sub>0, j\\<^sub>1 :: 'a\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "also"], ["proof (state)\nthis:\n  ((j\\<^sub>1::'a::refinement_lattice) \\<parallel>\n   (j\\<^sub>0::'a::refinement_lattice)) \\<iinter>\n  ((c::'a::refinement_lattice) \\<iinter> (d::'a::refinement_lattice)) //\n  (i::'a::refinement_lattice) \\<sqsubseteq>\n  (j\\<^sub>1 \\<parallel> j\\<^sub>0) \\<iinter>\n  (j\\<^sub>1 \\<iinter> c // (j\\<^sub>0 \\<parallel> i) \\<parallel>\n   j\\<^sub>0 \\<iinter> d // (j\\<^sub>1 \\<parallel> i))\n\ngoal (1 subgoal):\n 1. (j\\<^sub>1 \\<parallel> j\\<^sub>0) \\<iinter>\n    (c \\<iinter> d) // i \\<sqsubseteq>\n    j\\<^sub>1 \\<iinter> c // (j\\<^sub>0 \\<parallel> i) \\<parallel>\n    j\\<^sub>0 \\<iinter> d // (j\\<^sub>1 \\<parallel> i)\nvariables:\n  c, d, i, j\\<^sub>0, j\\<^sub>1 :: 'a\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "have \"... \\<sqsubseteq> (j\\<^sub>1 \\<iinter> j\\<^sub>1 \\<iinter> (c // (j\\<^sub>0 \\<parallel> i))) \\<parallel> (j\\<^sub>0 \\<iinter> j\\<^sub>0 \\<iinter> (d // (j\\<^sub>1 \\<parallel> i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (j\\<^sub>1 \\<parallel> j\\<^sub>0) \\<iinter>\n    (j\\<^sub>1 \\<iinter> c // (j\\<^sub>0 \\<parallel> i) \\<parallel>\n     j\\<^sub>0 \\<iinter> d // (j\\<^sub>1 \\<parallel> i)) \\<sqsubseteq>\n    j\\<^sub>1 \\<iinter> j\\<^sub>1 \\<iinter>\n    c // (j\\<^sub>0 \\<parallel> i) \\<parallel>\n    j\\<^sub>0 \\<iinter> j\\<^sub>0 \\<iinter> d // (j\\<^sub>1 \\<parallel> i)\nvariables:\n  c, d, i, j\\<^sub>0, j\\<^sub>1 :: 'a\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by (metis conj_assoc parallel_interchange)"], ["proof (state)\nthis:\n  ((j\\<^sub>1::'a::refinement_lattice) \\<parallel>\n   (j\\<^sub>0::'a::refinement_lattice)) \\<iinter>\n  (j\\<^sub>1 \\<iinter>\n   (c::'a::refinement_lattice) //\n   (j\\<^sub>0 \\<parallel> (i::'a::refinement_lattice)) \\<parallel>\n   j\\<^sub>0 \\<iinter>\n   (d::'a::refinement_lattice) // (j\\<^sub>1 \\<parallel> i)) \\<sqsubseteq>\n  j\\<^sub>1 \\<iinter> j\\<^sub>1 \\<iinter>\n  c // (j\\<^sub>0 \\<parallel> i) \\<parallel>\n  j\\<^sub>0 \\<iinter> j\\<^sub>0 \\<iinter> d // (j\\<^sub>1 \\<parallel> i)\n\ngoal (1 subgoal):\n 1. (j\\<^sub>1 \\<parallel> j\\<^sub>0) \\<iinter>\n    (c \\<iinter> d) // i \\<sqsubseteq>\n    j\\<^sub>1 \\<iinter> c // (j\\<^sub>0 \\<parallel> i) \\<parallel>\n    j\\<^sub>0 \\<iinter> d // (j\\<^sub>1 \\<parallel> i)\nvariables:\n  c, d, i, j\\<^sub>0, j\\<^sub>1 :: 'a\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "finally"], ["proof (chain)\npicking this:\n  ((j\\<^sub>1::'a::refinement_lattice) \\<parallel>\n   (j\\<^sub>0::'a::refinement_lattice)) \\<iinter>\n  ((c::'a::refinement_lattice) \\<iinter> (d::'a::refinement_lattice)) //\n  (i::'a::refinement_lattice) \\<sqsubseteq>\n  j\\<^sub>1 \\<iinter> j\\<^sub>1 \\<iinter>\n  c // (j\\<^sub>0 \\<parallel> i) \\<parallel>\n  j\\<^sub>0 \\<iinter> j\\<^sub>0 \\<iinter> d // (j\\<^sub>1 \\<parallel> i)", "show ?thesis"], ["proof (prove)\nusing this:\n  ((j\\<^sub>1::'a::refinement_lattice) \\<parallel>\n   (j\\<^sub>0::'a::refinement_lattice)) \\<iinter>\n  ((c::'a::refinement_lattice) \\<iinter> (d::'a::refinement_lattice)) //\n  (i::'a::refinement_lattice) \\<sqsubseteq>\n  j\\<^sub>1 \\<iinter> j\\<^sub>1 \\<iinter>\n  c // (j\\<^sub>0 \\<parallel> i) \\<parallel>\n  j\\<^sub>0 \\<iinter> j\\<^sub>0 \\<iinter> d // (j\\<^sub>1 \\<parallel> i)\n\ngoal (1 subgoal):\n 1. (j\\<^sub>1 \\<parallel> j\\<^sub>0) \\<iinter>\n    (c \\<iinter> d) // i \\<sqsubseteq>\n    j\\<^sub>1 \\<iinter> c // (j\\<^sub>0 \\<parallel> i) \\<parallel>\n    j\\<^sub>0 \\<iinter> d // (j\\<^sub>1 \\<parallel> i)\nvariables:\n  c, d, i, j\\<^sub>0, j\\<^sub>1 :: 'a\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by (metis conj_idem)"], ["proof (state)\nthis:\n  ((j\\<^sub>1::'a::refinement_lattice) \\<parallel>\n   (j\\<^sub>0::'a::refinement_lattice)) \\<iinter>\n  ((c::'a::refinement_lattice) \\<iinter> (d::'a::refinement_lattice)) //\n  (i::'a::refinement_lattice) \\<sqsubseteq>\n  j\\<^sub>1 \\<iinter> c // (j\\<^sub>0 \\<parallel> i) \\<parallel>\n  j\\<^sub>0 \\<iinter> d // (j\\<^sub>1 \\<parallel> i)\n\ngoal:\nNo subgoals!\nvariables:\n  c, d, i, j\\<^sub>0, j\\<^sub>1 :: 'a\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "qed"], ["", "lemma wrap_rely_guar:\n  assumes nonabort_rg: \"chaos \\<sqsubseteq> rg\" \n  and skippable: \"rg \\<sqsubseteq> skip\"\n  shows \"c \\<sqsubseteq> rg \\<iinter> c // rg\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<sqsubseteq> rg \\<iinter> c // rg\nvariables:\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, rg :: 'a\ntype variables:\n  'a :: refinement_lattice", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c \\<sqsubseteq> rg \\<iinter> c // rg\nvariables:\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, rg :: 'a\ntype variables:\n  'a :: refinement_lattice", "have \"c = c // skip\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c = c // skip\nvariables:\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, skip :: 'a\ntype variables:\n  'a :: refinement_lattice", "by (simp add: quotient_identity)"], ["proof (state)\nthis:\n  (c::'a::refinement_lattice) = c // skip\n\ngoal (1 subgoal):\n 1. c \\<sqsubseteq> rg \\<iinter> c // rg\nvariables:\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, rg :: 'a\ntype variables:\n  'a :: refinement_lattice", "also"], ["proof (state)\nthis:\n  (c::'a::refinement_lattice) = c // skip\n\ngoal (1 subgoal):\n 1. c \\<sqsubseteq> rg \\<iinter> c // rg\nvariables:\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, rg :: 'a\ntype variables:\n  'a :: refinement_lattice", "have \"... \\<sqsubseteq> c // rg\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c // skip \\<sqsubseteq> c // rg\nvariables:\n  c, rg, skip :: 'a\n  (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by (simp add: skippable weaken_rely nonabort_rg)"], ["proof (state)\nthis:\n  (c::'a::refinement_lattice) // skip \\<sqsubseteq>\n  c // (rg::'a::refinement_lattice)\n\ngoal (1 subgoal):\n 1. c \\<sqsubseteq> rg \\<iinter> c // rg\nvariables:\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, rg :: 'a\ntype variables:\n  'a :: refinement_lattice", "also"], ["proof (state)\nthis:\n  (c::'a::refinement_lattice) // skip \\<sqsubseteq>\n  c // (rg::'a::refinement_lattice)\n\ngoal (1 subgoal):\n 1. c \\<sqsubseteq> rg \\<iinter> c // rg\nvariables:\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, rg :: 'a\ntype variables:\n  'a :: refinement_lattice", "have \"... \\<sqsubseteq> rg \\<iinter> c // rg\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c // rg \\<sqsubseteq> rg \\<iinter> c // rg\nvariables:\n  c, rg :: 'a\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "using conjoin_non_aborting conj_commute nonabort_rg"], ["proof (prove)\nusing this:\n  chaos \\<sqsubseteq> (?c::'a::refinement_lattice) \\<Longrightarrow>\n  (?d::'a::refinement_lattice) \\<sqsubseteq> ?d \\<iinter> ?c\n  (?a::'a::refinement_lattice) \\<iinter> (?b::'a::refinement_lattice) =\n  ?b \\<iinter> ?a\n  chaos \\<sqsubseteq> (rg::'a::refinement_lattice)\n\ngoal (1 subgoal):\n 1. c // rg \\<sqsubseteq> rg \\<iinter> c // rg\nvariables:\n  c, rg :: 'a\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by auto"], ["proof (state)\nthis:\n  (c::'a::refinement_lattice) // (rg::'a::refinement_lattice) \\<sqsubseteq>\n  rg \\<iinter> c // rg\n\ngoal (1 subgoal):\n 1. c \\<sqsubseteq> rg \\<iinter> c // rg\nvariables:\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, rg :: 'a\ntype variables:\n  'a :: refinement_lattice", "finally"], ["proof (chain)\npicking this:\n  (c::'a::refinement_lattice) \\<sqsubseteq>\n  (rg::'a::refinement_lattice) \\<iinter> c // rg", "show \"c \\<sqsubseteq> rg \\<iinter> c // rg\""], ["proof (prove)\nusing this:\n  (c::'a::refinement_lattice) \\<sqsubseteq>\n  (rg::'a::refinement_lattice) \\<iinter> c // rg\n\ngoal (1 subgoal):\n 1. c \\<sqsubseteq> rg \\<iinter> c // rg\nvariables:\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, rg :: 'a\ntype variables:\n  'a :: refinement_lattice", "."], ["proof (state)\nthis:\n  (c::'a::refinement_lattice) \\<sqsubseteq>\n  (rg::'a::refinement_lattice) \\<iinter> c // rg\n\ngoal:\nNo subgoals!\nvariables:\n  (\\<iinter>), (\\<parallel>) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, rg :: 'a\ntype variables:\n  'a :: refinement_lattice", "qed"], ["", "end"], ["", "locale rely_distrib_iteration = rely_distrib + iteration_finite_conjunctive\n\nbegin"], ["", "lemma distribute_rely_iteration: \n  assumes nonabort_i: \"chaos \\<sqsubseteq> i\"\n  assumes \"(\\<forall> c. (\\<forall> d. ((c \\<parallel> i);(d \\<parallel> i) \\<sqsubseteq> (c;d) \\<parallel> i)))\"\n  shows \"(c\\<^sup>\\<omega>;d) // i \\<sqsubseteq> (c // i)\\<^sup>\\<omega>;(d // i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c\\<^sup>\\<omega> ; d // i \\<sqsubseteq>\n    (c // i)\\<^sup>\\<omega> ; (d // i)\nvariables:\n  c, d, i, nil :: 'a\n  (\\<parallel>), (;) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. c\\<^sup>\\<omega> ; d // i \\<sqsubseteq>\n    (c // i)\\<^sup>\\<omega> ; (d // i)\nvariables:\n  c, d, i, nil :: 'a\n  (\\<parallel>), (;) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "have \"d \\<sqinter> c ; ((c // i)\\<^sup>\\<omega>;(d // i) \\<parallel> i) \\<sqsubseteq> ((d // i) \\<parallel> i) \\<sqinter> ((c // i) \\<parallel> i);((c // i)\\<^sup>\\<omega>;(d // i) \\<parallel> i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d \\<sqinter>\n    c ; ((c // i)\\<^sup>\\<omega> ; (d // i) \\<parallel> i) \\<sqsubseteq>\n    d // i \\<parallel> i \\<sqinter>\n    (c // i \\<parallel> i) ;\n    ((c // i)\\<^sup>\\<omega> ; (d // i) \\<parallel> i)\nvariables:\n  (\\<parallel>), (;) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\n  c, d, i, nil :: 'a\ntype variables:\n  'a :: refinement_lattice", "by (metis inf_mono order.refl rely_quotient nonabort_i seq_mono)"], ["proof (state)\nthis:\n  (d::'a::refinement_lattice) \\<sqinter>\n  (c::'a::refinement_lattice) ;\n  ((c // (i::'a::refinement_lattice))\\<^sup>\\<omega> ; (d // i) \\<parallel>\n   i) \\<sqsubseteq>\n  d // i \\<parallel> i \\<sqinter>\n  (c // i \\<parallel> i) ;\n  ((c // i)\\<^sup>\\<omega> ; (d // i) \\<parallel> i)\n\ngoal (1 subgoal):\n 1. c\\<^sup>\\<omega> ; d // i \\<sqsubseteq>\n    (c // i)\\<^sup>\\<omega> ; (d // i)\nvariables:\n  c, d, i, nil :: 'a\n  (\\<parallel>), (;) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "also"], ["proof (state)\nthis:\n  (d::'a::refinement_lattice) \\<sqinter>\n  (c::'a::refinement_lattice) ;\n  ((c // (i::'a::refinement_lattice))\\<^sup>\\<omega> ; (d // i) \\<parallel>\n   i) \\<sqsubseteq>\n  d // i \\<parallel> i \\<sqinter>\n  (c // i \\<parallel> i) ;\n  ((c // i)\\<^sup>\\<omega> ; (d // i) \\<parallel> i)\n\ngoal (1 subgoal):\n 1. c\\<^sup>\\<omega> ; d // i \\<sqsubseteq>\n    (c // i)\\<^sup>\\<omega> ; (d // i)\nvariables:\n  c, d, i, nil :: 'a\n  (\\<parallel>), (;) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "have \"... \\<sqsubseteq> ((d // i) \\<parallel> i) \\<sqinter> ((c // i);(c // i)\\<^sup>\\<omega>;(d // i) \\<parallel> i )\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d // i \\<parallel> i \\<sqinter>\n    (c // i \\<parallel> i) ;\n    ((c // i)\\<^sup>\\<omega> ; (d // i) \\<parallel> i) \\<sqsubseteq>\n    d // i \\<parallel> i \\<sqinter>\n    (c // i) ; (c // i)\\<^sup>\\<omega> ; (d // i) \\<parallel> i\nvariables:\n  c, d, i, nil :: 'a\n  (\\<parallel>), (;) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "using assms inf_mono_right seq_assoc"], ["proof (prove)\nusing this:\n  chaos \\<sqsubseteq> (i::'a::refinement_lattice)\n  \\<forall>(c::'a::refinement_lattice) d::'a::refinement_lattice.\n     (c \\<parallel> (i::'a::refinement_lattice)) ;\n     (d \\<parallel> i) \\<sqsubseteq>\n     c ; d \\<parallel> i\n  (?c::?'a::refinement_lattice) \\<sqsubseteq>\n  (?d::?'a::refinement_lattice) \\<Longrightarrow>\n  (?a::?'a::refinement_lattice) \\<sqinter> ?c \\<sqsubseteq> ?a \\<sqinter> ?d\n  (?a::'a::refinement_lattice) ; (?b::'a::refinement_lattice) ;\n  (?c::'a::refinement_lattice) =\n  ?a ; (?b ; ?c)\n\ngoal (1 subgoal):\n 1. d // i \\<parallel> i \\<sqinter>\n    (c // i \\<parallel> i) ;\n    ((c // i)\\<^sup>\\<omega> ; (d // i) \\<parallel> i) \\<sqsubseteq>\n    d // i \\<parallel> i \\<sqinter>\n    (c // i) ; (c // i)\\<^sup>\\<omega> ; (d // i) \\<parallel> i\nvariables:\n  c, d, i, nil :: 'a\n  (\\<parallel>), (;) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by fastforce"], ["proof (state)\nthis:\n  (d::'a::refinement_lattice) // (i::'a::refinement_lattice) \\<parallel>\n  i \\<sqinter>\n  ((c::'a::refinement_lattice) // i \\<parallel> i) ;\n  ((c // i)\\<^sup>\\<omega> ; (d // i) \\<parallel> i) \\<sqsubseteq>\n  d // i \\<parallel> i \\<sqinter>\n  (c // i) ; (c // i)\\<^sup>\\<omega> ; (d // i) \\<parallel> i\n\ngoal (1 subgoal):\n 1. c\\<^sup>\\<omega> ; d // i \\<sqsubseteq>\n    (c // i)\\<^sup>\\<omega> ; (d // i)\nvariables:\n  c, d, i, nil :: 'a\n  (\\<parallel>), (;) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "also"], ["proof (state)\nthis:\n  (d::'a::refinement_lattice) // (i::'a::refinement_lattice) \\<parallel>\n  i \\<sqinter>\n  ((c::'a::refinement_lattice) // i \\<parallel> i) ;\n  ((c // i)\\<^sup>\\<omega> ; (d // i) \\<parallel> i) \\<sqsubseteq>\n  d // i \\<parallel> i \\<sqinter>\n  (c // i) ; (c // i)\\<^sup>\\<omega> ; (d // i) \\<parallel> i\n\ngoal (1 subgoal):\n 1. c\\<^sup>\\<omega> ; d // i \\<sqsubseteq>\n    (c // i)\\<^sup>\\<omega> ; (d // i)\nvariables:\n  c, d, i, nil :: 'a\n  (\\<parallel>), (;) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "have \"... \\<sqsubseteq> ((d // i) \\<sqinter> (c // i);(c // i)\\<^sup>\\<omega>;(d // i)) \\<parallel> i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d // i \\<parallel> i \\<sqinter>\n    (c // i) ; (c // i)\\<^sup>\\<omega> ; (d // i) \\<parallel>\n    i \\<sqsubseteq>\n    (d // i \\<sqinter>\n     (c // i) ; (c // i)\\<^sup>\\<omega> ; (d // i)) \\<parallel>\n    i\nvariables:\n  c, d, i, nil :: 'a\n  (\\<parallel>), (;) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by (simp add: inf_par_distrib)"], ["proof (state)\nthis:\n  (d::'a::refinement_lattice) // (i::'a::refinement_lattice) \\<parallel>\n  i \\<sqinter>\n  ((c::'a::refinement_lattice) // i) ; (c // i)\\<^sup>\\<omega> ;\n  (d // i) \\<parallel>\n  i \\<sqsubseteq>\n  (d // i \\<sqinter>\n   (c // i) ; (c // i)\\<^sup>\\<omega> ; (d // i)) \\<parallel>\n  i\n\ngoal (1 subgoal):\n 1. c\\<^sup>\\<omega> ; d // i \\<sqsubseteq>\n    (c // i)\\<^sup>\\<omega> ; (d // i)\nvariables:\n  c, d, i, nil :: 'a\n  (\\<parallel>), (;) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "also"], ["proof (state)\nthis:\n  (d::'a::refinement_lattice) // (i::'a::refinement_lattice) \\<parallel>\n  i \\<sqinter>\n  ((c::'a::refinement_lattice) // i) ; (c // i)\\<^sup>\\<omega> ;\n  (d // i) \\<parallel>\n  i \\<sqsubseteq>\n  (d // i \\<sqinter>\n   (c // i) ; (c // i)\\<^sup>\\<omega> ; (d // i)) \\<parallel>\n  i\n\ngoal (1 subgoal):\n 1. c\\<^sup>\\<omega> ; d // i \\<sqsubseteq>\n    (c // i)\\<^sup>\\<omega> ; (d // i)\nvariables:\n  c, d, i, nil :: 'a\n  (\\<parallel>), (;) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "have \"... = ((c // i)\\<^sup>\\<omega>;(d // i)) \\<parallel> i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (d // i \\<sqinter>\n     (c // i) ; (c // i)\\<^sup>\\<omega> ; (d // i)) \\<parallel>\n    i =\n    (c // i)\\<^sup>\\<omega> ; (d // i) \\<parallel> i\nvariables:\n  c, d, i, nil :: 'a\n  (\\<parallel>), (;) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by (metis iter_unfold inf_seq_distrib seq_nil_left)"], ["proof (state)\nthis:\n  ((d::'a::refinement_lattice) // (i::'a::refinement_lattice) \\<sqinter>\n   ((c::'a::refinement_lattice) // i) ; (c // i)\\<^sup>\\<omega> ;\n   (d // i)) \\<parallel>\n  i =\n  (c // i)\\<^sup>\\<omega> ; (d // i) \\<parallel> i\n\ngoal (1 subgoal):\n 1. c\\<^sup>\\<omega> ; d // i \\<sqsubseteq>\n    (c // i)\\<^sup>\\<omega> ; (d // i)\nvariables:\n  c, d, i, nil :: 'a\n  (\\<parallel>), (;) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "finally"], ["proof (chain)\npicking this:\n  (d::'a::refinement_lattice) \\<sqinter>\n  (c::'a::refinement_lattice) ;\n  ((c // (i::'a::refinement_lattice))\\<^sup>\\<omega> ; (d // i) \\<parallel>\n   i) \\<sqsubseteq>\n  (c // i)\\<^sup>\\<omega> ; (d // i) \\<parallel> i", "show ?thesis"], ["proof (prove)\nusing this:\n  (d::'a::refinement_lattice) \\<sqinter>\n  (c::'a::refinement_lattice) ;\n  ((c // (i::'a::refinement_lattice))\\<^sup>\\<omega> ; (d // i) \\<parallel>\n   i) \\<sqsubseteq>\n  (c // i)\\<^sup>\\<omega> ; (d // i) \\<parallel> i\n\ngoal (1 subgoal):\n 1. c\\<^sup>\\<omega> ; d // i \\<sqsubseteq>\n    (c // i)\\<^sup>\\<omega> ; (d // i)\nvariables:\n  c, d, i, nil :: 'a\n  (\\<parallel>), (;) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "by (metis rely_refinement nonabort_i iter_induct)"], ["proof (state)\nthis:\n  (c::'a::refinement_lattice)\\<^sup>\\<omega> ;\n  (d::'a::refinement_lattice) //\n  (i::'a::refinement_lattice) \\<sqsubseteq>\n  (c // i)\\<^sup>\\<omega> ; (d // i)\n\ngoal:\nNo subgoals!\nvariables:\n  c, d, i, nil :: 'a\n  (\\<parallel>), (;) :: 'a \\<Rightarrow> 'a \\<Rightarrow> 'a\ntype variables:\n  'a :: refinement_lattice", "qed"], ["", "end"], ["", "end"]]}