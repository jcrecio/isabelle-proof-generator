{"file_name": "/home/qj213/afp-2021-10-22/thys/Matrices_for_ODEs/MTX_Examples.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Matrices_for_ODEs", "problem_names": ["lemma mtx_circ_flow_eq: \"exp (t *\\<^sub>R A) *\\<^sub>V s = \\<phi> t s\"", "lemma mtx_circ: \n  \"PRE(\\<lambda>s. r\\<^sup>2 = (s $ 1)\\<^sup>2 + (s $ 2)\\<^sup>2) \n  HP x\\<acute>=(*\\<^sub>V) A & G \n  POST (\\<lambda>s. r\\<^sup>2 = (s $ 1)\\<^sup>2 + (s $ 2)\\<^sup>2)\"", "lemma inv_mtx_chB_hOsc: \n  \"a \\<noteq> b \\<Longrightarrow> (P a b)\\<^sup>-\\<^sup>1 = (1/(a - b)) *\\<^sub>R mtx \n   ([ 1, -b] # \n    [-1,  a] # [])\"", "lemma invertible_mtx_chB_hOsc: \"a \\<noteq> b \\<Longrightarrow> mtx_invertible (P a b)\"", "lemma mtx_hOsc_diagonalizable:\n  fixes a b :: real\n  defines \"\\<iota>\\<^sub>1 \\<equiv> (b - sqrt (b^2+4*a))/2\" and \"\\<iota>\\<^sub>2 \\<equiv> (b + sqrt (b^2+4*a))/2\"\n  assumes \"b\\<^sup>2 + a * 4 > 0\" and \"a \\<noteq> 0\"\n  shows \"A a b = P (-\\<iota>\\<^sub>2/a) (-\\<iota>\\<^sub>1/a) * (\\<d>\\<i>\\<a>\\<g> i. if i = 1 then \\<iota>\\<^sub>1 else \\<iota>\\<^sub>2) * (P (-\\<iota>\\<^sub>2/a) (-\\<iota>\\<^sub>1/a))\\<^sup>-\\<^sup>1\"", "lemma mtx_hOsc_solution_eq:\n  fixes a b :: real\n  defines \"\\<iota>\\<^sub>1 \\<equiv> (b - sqrt (b\\<^sup>2+4*a))/2\" and \"\\<iota>\\<^sub>2 \\<equiv> (b + sqrt (b\\<^sup>2+4*a))/2\"\n  defines \"\\<Phi> t \\<equiv> mtx (\n   [\\<iota>\\<^sub>2*exp(t*\\<iota>\\<^sub>1) - \\<iota>\\<^sub>1*exp(t*\\<iota>\\<^sub>2),     exp(t*\\<iota>\\<^sub>2)-exp(t*\\<iota>\\<^sub>1)]#\n   [a*exp(t*\\<iota>\\<^sub>2) - a*exp(t*\\<iota>\\<^sub>1), \\<iota>\\<^sub>2*exp(t*\\<iota>\\<^sub>2)-\\<iota>\\<^sub>1*exp(t*\\<iota>\\<^sub>1)]#[])\"\n  assumes \"b\\<^sup>2 + a * 4 > 0\" and \"a \\<noteq> 0\"\n  shows \"P (-\\<iota>\\<^sub>2/a) (-\\<iota>\\<^sub>1/a) * (\\<d>\\<i>\\<a>\\<g> i. exp (t * (if i=1 then \\<iota>\\<^sub>1 else \\<iota>\\<^sub>2))) * (P (-\\<iota>\\<^sub>2/a) (-\\<iota>\\<^sub>1/a))\\<^sup>-\\<^sup>1 \n  = (1/sqrt (b\\<^sup>2 + a * 4)) *\\<^sub>R (\\<Phi> t)\"", "lemma local_flow_mtx_hOsc:\n  fixes a b\n  defines \"\\<iota>\\<^sub>1 \\<equiv> (b - sqrt (b^2+4*a))/2\" and \"\\<iota>\\<^sub>2 \\<equiv> (b + sqrt (b^2+4*a))/2\"\n  defines \"\\<Phi> t \\<equiv> mtx (\n   [\\<iota>\\<^sub>2*exp(t*\\<iota>\\<^sub>1) - \\<iota>\\<^sub>1*exp(t*\\<iota>\\<^sub>2),     exp(t*\\<iota>\\<^sub>2)-exp(t*\\<iota>\\<^sub>1)]#\n   [a*exp(t*\\<iota>\\<^sub>2) - a*exp(t*\\<iota>\\<^sub>1), \\<iota>\\<^sub>2*exp(t*\\<iota>\\<^sub>2)-\\<iota>\\<^sub>1*exp(t*\\<iota>\\<^sub>1)]#[])\"\n  assumes \"b\\<^sup>2 + a * 4 > 0\" and \"a \\<noteq> 0\"\n  shows \"local_flow ((*\\<^sub>V) (A a b)) UNIV UNIV (\\<lambda>t. (*\\<^sub>V) ((1/sqrt (b\\<^sup>2 + a * 4)) *\\<^sub>R \\<Phi> t))\"", "lemma overdamped_door_arith:\n  assumes \"b\\<^sup>2 + a * 4 > 0\" and \"a < 0\" and \"b \\<le> 0\" and \"t \\<ge> 0\" and \"s1 > 0\"\n  shows \"0 \\<le> ((b + sqrt (b\\<^sup>2 + 4 * a)) * exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2) / 2 - \n(b - sqrt (b\\<^sup>2 + 4 * a)) * exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2) / 2) * s1 / sqrt (b\\<^sup>2 + a * 4)\"", "lemma overdamped_door:\n  assumes \"b\\<^sup>2 + a * 4 > 0\" and \"a < 0\" and \"b \\<le> 0\"\n  shows \"PRE (\\<lambda>s. s$1 = 0)\n  HP (LOOP open_door; (x\\<acute>=((*\\<^sub>V) (A a b)) & G) INV (\\<lambda>s. 0 \\<le> s$1))\n  POST (\\<lambda>s. 0 \\<le> s $ 1)\"", "lemma pow2_scaleR_mtx_cnst_acc: \"(t *\\<^sub>R K)\\<^sup>2 = mtx (\n  [0,0,t\\<^sup>2] #\n  [0,0,0] # \n  [0,0,0] # [])\"", "lemma powN_scaleR_mtx_cnst_acc: \"n > 2 \\<Longrightarrow> (t *\\<^sub>R K)^n = 0\"", "lemma exp_mtx_cnst_acc: \"exp (t *\\<^sub>R K) = ((t *\\<^sub>R K)\\<^sup>2/\\<^sub>R 2) + (t *\\<^sub>R K) + 1\"", "lemma exp_mtx_cnst_acc_simps:\n  \"exp (t *\\<^sub>R K) $$ 1 $ 1 = 1\" \"exp (t *\\<^sub>R K) $$ 1 $ 2 = t\" \"exp (t *\\<^sub>R K) $$ 1 $ 3 = t^2/2\"\n  \"exp (t *\\<^sub>R K) $$ 2 $ 1 = 0\" \"exp (t *\\<^sub>R K) $$ 2 $ 2 = 1\" \"exp (t *\\<^sub>R K) $$ 2 $ 3 = t\"\n  \"exp (t *\\<^sub>R K) $$ 3 $ 1 = 0\" \"exp (t *\\<^sub>R K) $$ 3 $ 2 = 0\" \"exp (t *\\<^sub>R K) $$ 3 $ 3 = 1\"", "lemma exp_mtx_cnst_acc_vec_mult_eq: \"exp (t *\\<^sub>R K) *\\<^sub>V s = \n  vector [s$3 * t^2/2 + s$2 * t + s$1, s$3 * t + s$2, s$3]\"", "lemma local_flow_mtx_cnst_acc:\n  \"local_flow ((*\\<^sub>V) K) UNIV UNIV (\\<lambda>t s. ((t *\\<^sub>R K)\\<^sup>2/\\<^sub>R 2 + (t *\\<^sub>R K) + 1) *\\<^sub>V s)\"", "lemma docking_station_arith:\n  assumes \"(d::real) > x\" and \"v > 0\"\n  shows \"(v = v\\<^sup>2 * t / (2 * d - 2 * x)) \\<longleftrightarrow> (v * t - v\\<^sup>2 * t\\<^sup>2 / (4 * d - 4 * x) + x = d)\"", "lemma docking_station:\n  assumes \"d > x\\<^sub>0\" and \"v\\<^sub>0 > 0\"\n  shows \"PRE (\\<lambda>s. s$1 = x\\<^sub>0 \\<and> s$2 = v\\<^sub>0)\n  HP ((3 ::= (\\<lambda>s. -(v\\<^sub>0^2/(2*(d-x\\<^sub>0))))); x\\<acute>=(*\\<^sub>V) K & G)\n  POST (\\<lambda>s. s$2 = 0 \\<longleftrightarrow> s$1 = d)\""], "translations": [["", "lemma mtx_circ_flow_eq: \"exp (t *\\<^sub>R A) *\\<^sub>V s = \\<phi> t s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (t *\\<^sub>R A) *\\<^sub>V s = \\<phi> t s", "apply(rule local_flow.eq_solution[OF local_flow_sq_mtx_linear, symmetric, of _ \"\\<lambda>s. UNIV\"], simp_all)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>a. \\<phi> a s)\n    \\<in> Sols (\\<lambda>t. (*\\<^sub>V) A) (\\<lambda>s. UNIV) UNIV 0 s", "apply(rule ivp_solsI, simp_all add: sq_mtx_vec_mult_eq vec_eq_iff)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>i.\n       (i = 2 \\<longrightarrow>\n         D (\\<lambda>x.\n               s $ 2 * cos x -\n               s $ 1 *\n               sin x) = (\\<lambda>x.\n                            \\<Sum>j\\<in>UNIV.\n                              (if j = 1 then - 1\n                               else ((\\<lambda>x. 0)(2 := 0)) j) *\n                              (if j = 1 then s $ 1 * cos x + s $ 2 * sin x\n                               else - s $ 1 * sin x + s $ 2 * cos x))\n         on UNIV) \\<and>\n       (i \\<noteq> 2 \\<longrightarrow>\n        (i = 1 \\<longrightarrow>\n          D (\\<lambda>x.\n                s $ 1 * cos x +\n                s $ 2 *\n                sin x) = (\\<lambda>x.\n                             \\<Sum>j\\<in>UNIV.\n                               (if j = 1 then 0\n                                else ((\\<lambda>x. 0)(2 := 1)) j) *\n                               (if j = 1 then s $ 1 * cos x + s $ 2 * sin x\n                                else - s $ 1 * sin x + s $ 2 * cos x))\n          on UNIV) \\<and>\n        (i \\<noteq> 1 \\<longrightarrow>\n          D (\\<lambda>x. s $ 2 * cos x - s $ 1 * sin x) = (\\<lambda>x. 0)\n          on UNIV))\n 2. \\<forall>i. i \\<noteq> 1 \\<longrightarrow> s $ 2 = s $ i", "unfolding UNIV_2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<forall>i.\n       (i = 2 \\<longrightarrow>\n         D (\\<lambda>x.\n               s $ 2 * cos x -\n               s $ 1 *\n               sin x) = (\\<lambda>x.\n                            \\<Sum>j\\<in>insert 1 (skip 2).\n                              (if j = 1 then - 1\n                               else ((\\<lambda>x. 0)(2 := 0)) j) *\n                              (if j = 1 then s $ 1 * cos x + s $ 2 * sin x\n                               else - s $ 1 * sin x + s $ 2 * cos x))\n         on UNIV) \\<and>\n       (i \\<noteq> 2 \\<longrightarrow>\n        (i = 1 \\<longrightarrow>\n          D (\\<lambda>x.\n                s $ 1 * cos x +\n                s $ 2 *\n                sin x) = (\\<lambda>x.\n                             \\<Sum>j\\<in>insert 1 (skip 2).\n                               (if j = 1 then 0\n                                else ((\\<lambda>x. 0)(2 := 1)) j) *\n                               (if j = 1 then s $ 1 * cos x + s $ 2 * sin x\n                                else - s $ 1 * sin x + s $ 2 * cos x))\n          on UNIV) \\<and>\n        (i \\<noteq> 1 \\<longrightarrow>\n          D (\\<lambda>x. s $ 2 * cos x - s $ 1 * sin x) = (\\<lambda>x. 0)\n          on UNIV))\n 2. \\<forall>i. i \\<noteq> 1 \\<longrightarrow> s $ 2 = s $ i", "using exhaust_2"], ["proof (prove)\nusing this:\n  ?x = 1 \\<or> ?x = 2\n\ngoal (2 subgoals):\n 1. \\<forall>i.\n       (i = 2 \\<longrightarrow>\n         D (\\<lambda>x.\n               s $ 2 * cos x -\n               s $ 1 *\n               sin x) = (\\<lambda>x.\n                            \\<Sum>j\\<in>insert 1 (skip 2).\n                              (if j = 1 then - 1\n                               else ((\\<lambda>x. 0)(2 := 0)) j) *\n                              (if j = 1 then s $ 1 * cos x + s $ 2 * sin x\n                               else - s $ 1 * sin x + s $ 2 * cos x))\n         on UNIV) \\<and>\n       (i \\<noteq> 2 \\<longrightarrow>\n        (i = 1 \\<longrightarrow>\n          D (\\<lambda>x.\n                s $ 1 * cos x +\n                s $ 2 *\n                sin x) = (\\<lambda>x.\n                             \\<Sum>j\\<in>insert 1 (skip 2).\n                               (if j = 1 then 0\n                                else ((\\<lambda>x. 0)(2 := 1)) j) *\n                               (if j = 1 then s $ 1 * cos x + s $ 2 * sin x\n                                else - s $ 1 * sin x + s $ 2 * cos x))\n          on UNIV) \\<and>\n        (i \\<noteq> 1 \\<longrightarrow>\n          D (\\<lambda>x. s $ 2 * cos x - s $ 1 * sin x) = (\\<lambda>x. 0)\n          on UNIV))\n 2. \\<forall>i. i \\<noteq> 1 \\<longrightarrow> s $ 2 = s $ i", "by (force intro!: poly_derivatives simp: matrix_vector_mult_def)+"], ["", "lemma mtx_circ: \n  \"PRE(\\<lambda>s. r\\<^sup>2 = (s $ 1)\\<^sup>2 + (s $ 2)\\<^sup>2) \n  HP x\\<acute>=(*\\<^sub>V) A & G \n  POST (\\<lambda>s. r\\<^sup>2 = (s $ 1)\\<^sup>2 + (s $ 2)\\<^sup>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. PRE(\\<lambda>s.\n           r\\<^sup>2 =\n           (s $ 1)\\<^sup>2 +\n           (s $\n            2)\\<^sup>2) HP x\\<acute>=\\<lambda>t.\n  (*\\<^sub>V)\n   A & G on \\<lambda>s.\n               {t. 0 \\<le> t} UNIV @ 0 POST \\<lambda>s.\n         r\\<^sup>2 = (s $ 1)\\<^sup>2 + (s $ 2)\\<^sup>2", "apply(subst local_flow.fbox_g_ode_subset[OF local_flow_sq_mtx_linear])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s.\n       s \\<in> UNIV \\<Longrightarrow>\n       0 \\<in> Collect ((\\<le>) 0) \\<and>\n       is_interval (Collect ((\\<le>) 0)) \\<and>\n       Collect ((\\<le>) 0) \\<subseteq> UNIV\n 2. (\\<lambda>s. r\\<^sup>2 = (s $ 1)\\<^sup>2 + (s $ 2)\\<^sup>2)\n    \\<le> (\\<lambda>s.\n              s \\<in> UNIV \\<longrightarrow>\n              (\\<forall>t\\<in>Collect ((\\<le>) 0).\n                  (\\<forall>\\<tau>\\<in>down (Collect ((\\<le>) 0)) t.\n                      G (exp (\\<tau> *\\<^sub>R A) *\\<^sub>V\n                         s)) \\<longrightarrow>\n                  r\\<^sup>2 =\n                  (exp (t *\\<^sub>R A) *\\<^sub>V s $ 1)\\<^sup>2 +\n                  (exp (t *\\<^sub>R A) *\\<^sub>V s $ 2)\\<^sup>2))", "unfolding mtx_circ_flow_eq"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s.\n       s \\<in> UNIV \\<Longrightarrow>\n       0 \\<in> Collect ((\\<le>) 0) \\<and>\n       is_interval (Collect ((\\<le>) 0)) \\<and>\n       Collect ((\\<le>) 0) \\<subseteq> UNIV\n 2. (\\<lambda>s. r\\<^sup>2 = (s $ 1)\\<^sup>2 + (s $ 2)\\<^sup>2)\n    \\<le> (\\<lambda>s.\n              s \\<in> UNIV \\<longrightarrow>\n              (\\<forall>t\\<in>Collect ((\\<le>) 0).\n                  (\\<forall>\\<tau>\\<in>down (Collect ((\\<le>) 0)) t.\n                      G (\\<phi> \\<tau> s)) \\<longrightarrow>\n                  r\\<^sup>2 =\n                  (\\<phi> t s $ 1)\\<^sup>2 + (\\<phi> t s $ 2)\\<^sup>2))", "by auto"], ["", "no_notation mtx_circ (\"A\")\n        and mtx_circ_flow (\"\\<phi>\")"], ["", "subsubsection \\<open> Flow of diagonalisable matrix. \\<close>"], ["", "abbreviation mtx_hOsc :: \"real \\<Rightarrow> real \\<Rightarrow> 2 sq_mtx\" (\"A\")\n  where \"A a b \\<equiv> mtx  \n   ([0, 1] # \n    [a, b] # [])\""], ["", "abbreviation mtx_chB_hOsc :: \"real \\<Rightarrow> real \\<Rightarrow> 2 sq_mtx\" (\"P\")\n  where \"P a b \\<equiv> mtx\n   ([a, b] # \n    [1, 1] # [])\""], ["", "lemma inv_mtx_chB_hOsc: \n  \"a \\<noteq> b \\<Longrightarrow> (P a b)\\<^sup>-\\<^sup>1 = (1/(a - b)) *\\<^sub>R mtx \n   ([ 1, -b] # \n    [-1,  a] # [])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    P a b\\<^sup>-\\<^sup>1 = (1 / (a - b)) *\\<^sub>R mtx [[1, - b], [- 1, a]]", "apply(rule sq_mtx_inv_unique, unfold scaleR_mtx2 times_mtx2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. a \\<noteq> b \\<Longrightarrow>\n    mtx [[a * (1 / (a - b) * 1) + b * (1 / (a - b) * - 1),\n          a * (1 / (a - b) * - b) + b * (1 / (a - b) * a)],\n         [1 * (1 / (a - b) * 1) + 1 * (1 / (a - b) * - 1),\n          1 * (1 / (a - b) * - b) + 1 * (1 / (a - b) * a)]] =\n    1\n 2. a \\<noteq> b \\<Longrightarrow>\n    mtx [[1 / (a - b) * 1 * a + 1 / (a - b) * - b * 1,\n          1 / (a - b) * 1 * b + 1 / (a - b) * - b * 1],\n         [1 / (a - b) * - 1 * a + 1 / (a - b) * a * 1,\n          1 / (a - b) * - 1 * b + 1 / (a - b) * a * 1]] =\n    1", "by (simp add: diff_divide_distrib[symmetric] one_mtx2)+"], ["", "lemma invertible_mtx_chB_hOsc: \"a \\<noteq> b \\<Longrightarrow> mtx_invertible (P a b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> mtx_invertible (P a b)", "apply(rule mtx_invertibleI[of _ \"(P a b)\\<^sup>-\\<^sup>1\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. a \\<noteq> b \\<Longrightarrow> P a b * P a b\\<^sup>-\\<^sup>1 = 1\n 2. a \\<noteq> b \\<Longrightarrow> P a b\\<^sup>-\\<^sup>1 * P a b = 1", "apply(unfold inv_mtx_chB_hOsc scaleR_mtx2 times_mtx2 one_mtx2)"], ["proof (prove)\ngoal (2 subgoals):\n 1. a \\<noteq> b \\<Longrightarrow>\n    mtx [[a * (1 / (a - b) * 1) + b * (1 / (a - b) * - 1),\n          a * (1 / (a - b) * - b) + b * (1 / (a - b) * a)],\n         [1 * (1 / (a - b) * 1) + 1 * (1 / (a - b) * - 1),\n          1 * (1 / (a - b) * - b) + 1 * (1 / (a - b) * a)]] =\n    diag2 1 1\n 2. a \\<noteq> b \\<Longrightarrow>\n    mtx [[1 / (a - b) * 1 * a + 1 / (a - b) * - b * 1,\n          1 / (a - b) * 1 * b + 1 / (a - b) * - b * 1],\n         [1 / (a - b) * - 1 * a + 1 / (a - b) * a * 1,\n          1 / (a - b) * - 1 * b + 1 / (a - b) * a * 1]] =\n    diag2 1 1", "by (subst sq_mtx_eq_iff, simp add: vector_def frac_diff_eq1)+"], ["", "lemma mtx_hOsc_diagonalizable:\n  fixes a b :: real\n  defines \"\\<iota>\\<^sub>1 \\<equiv> (b - sqrt (b^2+4*a))/2\" and \"\\<iota>\\<^sub>2 \\<equiv> (b + sqrt (b^2+4*a))/2\"\n  assumes \"b\\<^sup>2 + a * 4 > 0\" and \"a \\<noteq> 0\"\n  shows \"A a b = P (-\\<iota>\\<^sub>2/a) (-\\<iota>\\<^sub>1/a) * (\\<d>\\<i>\\<a>\\<g> i. if i = 1 then \\<iota>\\<^sub>1 else \\<iota>\\<^sub>2) * (P (-\\<iota>\\<^sub>2/a) (-\\<iota>\\<^sub>1/a))\\<^sup>-\\<^sup>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A a b =\n    P (- \\<iota>\\<^sub>2 / a) (- \\<iota>\\<^sub>1 / a) *\n    (\\<d>\\<i>\\<a>\\<g> i.\n        if i = 1 then \\<iota>\\<^sub>1 else \\<iota>\\<^sub>2) *\n    P (- \\<iota>\\<^sub>2 / a) (- \\<iota>\\<^sub>1 / a)\\<^sup>-\\<^sup>1", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. A a b =\n    P (- ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2) / a)\n     (- ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2) / a) *\n    (\\<d>\\<i>\\<a>\\<g> i.\n        if i = 1 then (b - sqrt (b\\<^sup>2 + 4 * a)) / 2\n        else (b + sqrt (b\\<^sup>2 + 4 * a)) / 2) *\n    P (- ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2) / a)\n     (- ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2) / a)\\<^sup>-\\<^sup>1", "apply(subst inv_mtx_chB_hOsc)"], ["proof (prove)\ngoal (2 subgoals):\n 1. - ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2) / a \\<noteq>\n    - ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2) / a\n 2. A a b =\n    P (- ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2) / a)\n     (- ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2) / a) *\n    (\\<d>\\<i>\\<a>\\<g> i.\n        if i = 1 then (b - sqrt (b\\<^sup>2 + 4 * a)) / 2\n        else (b + sqrt (b\\<^sup>2 + 4 * a)) / 2) *\n    (1 /\n     (- ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2) / a -\n      - ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2) / a)) *\\<^sub>R\n    mtx [[1, - (- ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2) / a)],\n         [- 1, - ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2) / a]]", "using assms(3,4)"], ["proof (prove)\nusing this:\n  0 < b\\<^sup>2 + a * 4\n  a \\<noteq> 0\n\ngoal (2 subgoals):\n 1. - ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2) / a \\<noteq>\n    - ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2) / a\n 2. A a b =\n    P (- ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2) / a)\n     (- ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2) / a) *\n    (\\<d>\\<i>\\<a>\\<g> i.\n        if i = 1 then (b - sqrt (b\\<^sup>2 + 4 * a)) / 2\n        else (b + sqrt (b\\<^sup>2 + 4 * a)) / 2) *\n    (1 /\n     (- ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2) / a -\n      - ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2) / a)) *\\<^sub>R\n    mtx [[1, - (- ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2) / a)],\n         [- 1, - ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2) / a]]", "apply(simp_all add: diag2_eq[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < b\\<^sup>2 + a * 4; a \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> A a b =\n                      (1 /\n                       ((b - sqrt (b\\<^sup>2 + 4 * a)) / (2 * a) -\n                        (b + sqrt (b\\<^sup>2 + 4 * a)) / (2 * a))) *\\<^sub>R\n                      (P (- ((b + sqrt (b\\<^sup>2 + 4 * a)) / (2 * a)))\n                        (- ((b - sqrt (b\\<^sup>2 + 4 * a)) / (2 * a))) *\n                       diag2 ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2)\n                        ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2) *\n                       mtx [[1, (b - sqrt (b\\<^sup>2 + 4 * a)) / (2 * a)],\n                            [- 1,\n                             - ((b + sqrt (b\\<^sup>2 + 4 * a)) / (2 * a))]])", "unfolding sq_mtx_times_eq sq_mtx_scaleR_eq UNIV_2"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < b\\<^sup>2 + a * 4; a \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> A a b =\n                      to_mtx\n                       (\\<chi>i j.\n                           (1 /\n                            ((b - sqrt (b\\<^sup>2 + 4 * a)) / (2 * a) -\n                             (b + sqrt (b\\<^sup>2 + 4 * a)) /\n                             (2 * a))) *\\<^sub>R\n                           to_mtx\n                            (\\<chi>i j.\n                                \\<Sum>k\\<in>insert 1 (skip 2).\n                                  to_mtx\n                                   (\\<chi>i j.\n \\<Sum>k\\<in>insert 1 (skip 2).\n   P (- ((b + sqrt (b\\<^sup>2 + 4 * a)) / (2 * a)))\n    (- ((b - sqrt (b\\<^sup>2 + 4 * a)) / (2 * a))) $$\n   i $\n   k *\n   diag2 ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2)\n    ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2) $$\n   k $\n   j) $$\n                                  i $\n                                  k *\n                                  mtx [[1,\n  (b - sqrt (b\\<^sup>2 + 4 * a)) / (2 * a)],\n [- 1, - ((b + sqrt (b\\<^sup>2 + 4 * a)) / (2 * a))]] $$\n                                  k $\n                                  j) $$\n                           i $\n                           j)", "apply(subst sq_mtx_eq_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < b\\<^sup>2 + a * 4; a \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i j.\n                         A a b $$ i $ j =\n                         to_mtx\n                          (\\<chi>i j.\n                              (1 /\n                               ((b - sqrt (b\\<^sup>2 + 4 * a)) / (2 * a) -\n                                (b + sqrt (b\\<^sup>2 + 4 * a)) /\n                                (2 * a))) *\\<^sub>R\n                              to_mtx\n                               (\\<chi>i j.\n                                   \\<Sum>k\\<in>insert 1 (skip 2).\n                                     to_mtx\n(\\<chi>i j.\n    \\<Sum>k\\<in>insert 1 (skip 2).\n      P (- ((b + sqrt (b\\<^sup>2 + 4 * a)) / (2 * a)))\n       (- ((b - sqrt (b\\<^sup>2 + 4 * a)) / (2 * a))) $$\n      i $\n      k *\n      diag2 ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2)\n       ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2) $$\n      k $\n      j) $$\n                                     i $\n                                     k *\n                                     mtx\n[[1, (b - sqrt (b\\<^sup>2 + 4 * a)) / (2 * a)],\n [- 1, - ((b + sqrt (b\\<^sup>2 + 4 * a)) / (2 * a))]] $$\n                                     k $\n                                     j) $$\n                              i $\n                              j) $$\n                         i $\n                         j", "using exhaust_2 assms"], ["proof (prove)\nusing this:\n  ?x = 1 \\<or> ?x = 2\n  \\<iota>\\<^sub>1 \\<equiv> (b - sqrt (b\\<^sup>2 + 4 * a)) / 2\n  \\<iota>\\<^sub>2 \\<equiv> (b + sqrt (b\\<^sup>2 + 4 * a)) / 2\n  0 < b\\<^sup>2 + a * 4\n  a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < b\\<^sup>2 + a * 4; a \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i j.\n                         A a b $$ i $ j =\n                         to_mtx\n                          (\\<chi>i j.\n                              (1 /\n                               ((b - sqrt (b\\<^sup>2 + 4 * a)) / (2 * a) -\n                                (b + sqrt (b\\<^sup>2 + 4 * a)) /\n                                (2 * a))) *\\<^sub>R\n                              to_mtx\n                               (\\<chi>i j.\n                                   \\<Sum>k\\<in>insert 1 (skip 2).\n                                     to_mtx\n(\\<chi>i j.\n    \\<Sum>k\\<in>insert 1 (skip 2).\n      P (- ((b + sqrt (b\\<^sup>2 + 4 * a)) / (2 * a)))\n       (- ((b - sqrt (b\\<^sup>2 + 4 * a)) / (2 * a))) $$\n      i $\n      k *\n      diag2 ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2)\n       ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2) $$\n      k $\n      j) $$\n                                     i $\n                                     k *\n                                     mtx\n[[1, (b - sqrt (b\\<^sup>2 + 4 * a)) / (2 * a)],\n [- 1, - ((b + sqrt (b\\<^sup>2 + 4 * a)) / (2 * a))]] $$\n                                     k $\n                                     j) $$\n                              i $\n                              j) $$\n                         i $\n                         j", "by (auto simp: field_simps, auto simp: field_power_simps)"], ["", "lemma mtx_hOsc_solution_eq:\n  fixes a b :: real\n  defines \"\\<iota>\\<^sub>1 \\<equiv> (b - sqrt (b\\<^sup>2+4*a))/2\" and \"\\<iota>\\<^sub>2 \\<equiv> (b + sqrt (b\\<^sup>2+4*a))/2\"\n  defines \"\\<Phi> t \\<equiv> mtx (\n   [\\<iota>\\<^sub>2*exp(t*\\<iota>\\<^sub>1) - \\<iota>\\<^sub>1*exp(t*\\<iota>\\<^sub>2),     exp(t*\\<iota>\\<^sub>2)-exp(t*\\<iota>\\<^sub>1)]#\n   [a*exp(t*\\<iota>\\<^sub>2) - a*exp(t*\\<iota>\\<^sub>1), \\<iota>\\<^sub>2*exp(t*\\<iota>\\<^sub>2)-\\<iota>\\<^sub>1*exp(t*\\<iota>\\<^sub>1)]#[])\"\n  assumes \"b\\<^sup>2 + a * 4 > 0\" and \"a \\<noteq> 0\"\n  shows \"P (-\\<iota>\\<^sub>2/a) (-\\<iota>\\<^sub>1/a) * (\\<d>\\<i>\\<a>\\<g> i. exp (t * (if i=1 then \\<iota>\\<^sub>1 else \\<iota>\\<^sub>2))) * (P (-\\<iota>\\<^sub>2/a) (-\\<iota>\\<^sub>1/a))\\<^sup>-\\<^sup>1 \n  = (1/sqrt (b\\<^sup>2 + a * 4)) *\\<^sub>R (\\<Phi> t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P (- \\<iota>\\<^sub>2 / a) (- \\<iota>\\<^sub>1 / a) *\n    (\\<d>\\<i>\\<a>\\<g> i.\n        exp (t * (if i = 1 then \\<iota>\\<^sub>1 else \\<iota>\\<^sub>2))) *\n    P (- \\<iota>\\<^sub>2 / a) (- \\<iota>\\<^sub>1 / a)\\<^sup>-\\<^sup>1 =\n    (1 / sqrt (b\\<^sup>2 + a * 4)) *\\<^sub>R \\<Phi> t", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. P (- ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2) / a)\n     (- ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2) / a) *\n    (\\<d>\\<i>\\<a>\\<g> i.\n        exp (t *\n             (if i = 1 then (b - sqrt (b\\<^sup>2 + 4 * a)) / 2\n              else (b + sqrt (b\\<^sup>2 + 4 * a)) / 2))) *\n    P (- ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2) / a)\n     (- ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2) / a)\\<^sup>-\\<^sup>1 =\n    (1 / sqrt (b\\<^sup>2 + a * 4)) *\\<^sub>R\n    mtx [[(b + sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n          exp (t * ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n          (b - sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n          exp (t * ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)),\n          exp (t * ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n          exp (t * ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2))],\n         [a * exp (t * ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n          a * exp (t * ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2)),\n          (b + sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n          exp (t * ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n          (b - sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n          exp (t * ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2))]]", "apply(subst inv_mtx_chB_hOsc)"], ["proof (prove)\ngoal (2 subgoals):\n 1. - ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2) / a \\<noteq>\n    - ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2) / a\n 2. P (- ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2) / a)\n     (- ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2) / a) *\n    (\\<d>\\<i>\\<a>\\<g> i.\n        exp (t *\n             (if i = 1 then (b - sqrt (b\\<^sup>2 + 4 * a)) / 2\n              else (b + sqrt (b\\<^sup>2 + 4 * a)) / 2))) *\n    (1 /\n     (- ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2) / a -\n      - ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2) / a)) *\\<^sub>R\n    mtx [[1, - (- ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2) / a)],\n         [- 1, - ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2) / a]] =\n    (1 / sqrt (b\\<^sup>2 + a * 4)) *\\<^sub>R\n    mtx [[(b + sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n          exp (t * ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n          (b - sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n          exp (t * ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)),\n          exp (t * ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n          exp (t * ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2))],\n         [a * exp (t * ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n          a * exp (t * ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2)),\n          (b + sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n          exp (t * ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n          (b - sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n          exp (t * ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2))]]", "using assms"], ["proof (prove)\nusing this:\n  \\<iota>\\<^sub>1 \\<equiv> (b - sqrt (b\\<^sup>2 + 4 * a)) / 2\n  \\<iota>\\<^sub>2 \\<equiv> (b + sqrt (b\\<^sup>2 + 4 * a)) / 2\n  \\<Phi> ?t \\<equiv>\n  mtx [[\\<iota>\\<^sub>2 * exp (?t * \\<iota>\\<^sub>1) -\n        \\<iota>\\<^sub>1 * exp (?t * \\<iota>\\<^sub>2),\n        exp (?t * \\<iota>\\<^sub>2) - exp (?t * \\<iota>\\<^sub>1)],\n       [a * exp (?t * \\<iota>\\<^sub>2) - a * exp (?t * \\<iota>\\<^sub>1),\n        \\<iota>\\<^sub>2 * exp (?t * \\<iota>\\<^sub>2) -\n        \\<iota>\\<^sub>1 * exp (?t * \\<iota>\\<^sub>1)]]\n  0 < b\\<^sup>2 + a * 4\n  a \\<noteq> 0\n\ngoal (2 subgoals):\n 1. - ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2) / a \\<noteq>\n    - ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2) / a\n 2. P (- ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2) / a)\n     (- ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2) / a) *\n    (\\<d>\\<i>\\<a>\\<g> i.\n        exp (t *\n             (if i = 1 then (b - sqrt (b\\<^sup>2 + 4 * a)) / 2\n              else (b + sqrt (b\\<^sup>2 + 4 * a)) / 2))) *\n    (1 /\n     (- ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2) / a -\n      - ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2) / a)) *\\<^sub>R\n    mtx [[1, - (- ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2) / a)],\n         [- 1, - ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2) / a]] =\n    (1 / sqrt (b\\<^sup>2 + a * 4)) *\\<^sub>R\n    mtx [[(b + sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n          exp (t * ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n          (b - sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n          exp (t * ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)),\n          exp (t * ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n          exp (t * ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2))],\n         [a * exp (t * ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n          a * exp (t * ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2)),\n          (b + sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n          exp (t * ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n          (b - sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n          exp (t * ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2))]]", "apply(simp_all add: mtx_times_scaleR_commute, subst sq_mtx_eq_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<iota>\\<^sub>1 \\<equiv> (b - sqrt (b\\<^sup>2 + 4 * a)) / 2;\n     \\<iota>\\<^sub>2 \\<equiv> (b + sqrt (b\\<^sup>2 + 4 * a)) / 2;\n     \\<And>t.\n        \\<Phi> t \\<equiv>\n        mtx [[(b + sqrt (b\\<^sup>2 + 4 * a)) *\n              exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2) /\n              2 -\n              (b - sqrt (b\\<^sup>2 + 4 * a)) *\n              exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2) /\n              2,\n              exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2) -\n              exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2)],\n             [a * exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2) -\n              a * exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2),\n              (b + sqrt (b\\<^sup>2 + 4 * a)) *\n              exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2) /\n              2 -\n              (b - sqrt (b\\<^sup>2 + 4 * a)) *\n              exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2) /\n              2]];\n     0 < b\\<^sup>2 + a * 4; a \\<noteq> 0;\n     \\<iota>\\<^sub>1 \\<equiv> (b - sqrt (b\\<^sup>2 + 4 * a)) / 2;\n     \\<iota>\\<^sub>2 \\<equiv> (b + sqrt (b\\<^sup>2 + 4 * a)) / 2;\n     \\<And>t.\n        \\<Phi> t \\<equiv>\n        mtx [[\\<iota>\\<^sub>2 * exp (t * \\<iota>\\<^sub>1) -\n              \\<iota>\\<^sub>1 * exp (t * \\<iota>\\<^sub>2),\n              exp (t * \\<iota>\\<^sub>2) - exp (t * \\<iota>\\<^sub>1)],\n             [a * exp (t * \\<iota>\\<^sub>2) - a * exp (t * \\<iota>\\<^sub>1),\n              \\<iota>\\<^sub>2 * exp (t * \\<iota>\\<^sub>2) -\n              \\<iota>\\<^sub>1 * exp (t * \\<iota>\\<^sub>1)]];\n     0 < b\\<^sup>2 + a * 4; a \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i j.\n                         ((1 /\n                           ((b - sqrt (b\\<^sup>2 + 4 * a)) / (2 * a) -\n                            (b + sqrt (b\\<^sup>2 + 4 * a)) /\n                            (2 * a))) *\\<^sub>R\n                          (P (- ((b + sqrt (b\\<^sup>2 + 4 * a)) / (2 * a)))\n                            (- ((b - sqrt (b\\<^sup>2 + 4 * a)) / (2 * a))) *\n                           (\\<d>\\<i>\\<a>\\<g> i.\n                               exp (t *\n                                    (if i = 1\n                                     then (b - sqrt (b\\<^sup>2 + 4 * a)) / 2\n                                     else (b + sqrt (b\\<^sup>2 + 4 * a)) /\n    2))) *\n                           mtx [[1, (b - sqrt (b\\<^sup>2 + 4 * a)) /\n                                    (2 * a)],\n                                [- 1,\n                                 - ((b + sqrt (b\\<^sup>2 + 4 * a)) /\n                                    (2 * a))]])) $$\n                         i $\n                         j =\n                         ((1 / sqrt (b\\<^sup>2 + a * 4)) *\\<^sub>R\n                          mtx [[(b + sqrt (b\\<^sup>2 + 4 * a)) *\n                                exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) /\n                                     2) /\n                                2 -\n                                (b - sqrt (b\\<^sup>2 + 4 * a)) *\n                                exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) /\n                                     2) /\n                                2,\n                                exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) /\n                                     2) -\n                                exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) /\n                                     2)],\n                               [a *\n                                exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) /\n                                     2) -\n                                a *\n                                exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) /\n                                     2),\n                                (b + sqrt (b\\<^sup>2 + 4 * a)) *\n                                exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) /\n                                     2) /\n                                2 -\n                                (b - sqrt (b\\<^sup>2 + 4 * a)) *\n                                exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) /\n                                     2) /\n                                2]]) $$\n                         i $\n                         j", "unfolding UNIV_2 sq_mtx_times_eq sq_mtx_scaleR_eq sq_mtx_uminus_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(b - sqrt (b\\<^sup>2 + 4 * a)) / 2 \\<equiv>\n             (b - sqrt (b\\<^sup>2 + 4 * a)) / 2;\n     (b + sqrt (b\\<^sup>2 + 4 * a)) / 2 \\<equiv>\n     (b + sqrt (b\\<^sup>2 + 4 * a)) / 2;\n     \\<And>t.\n        \\<Phi> t \\<equiv>\n        mtx [[(b + sqrt (b\\<^sup>2 + 4 * a)) *\n              exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2) /\n              2 -\n              (b - sqrt (b\\<^sup>2 + 4 * a)) *\n              exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2) /\n              2,\n              exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2) -\n              exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2)],\n             [a * exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2) -\n              a * exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2),\n              (b + sqrt (b\\<^sup>2 + 4 * a)) *\n              exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2) /\n              2 -\n              (b - sqrt (b\\<^sup>2 + 4 * a)) *\n              exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2) /\n              2]];\n     0 < b\\<^sup>2 + a * 4; a \\<noteq> 0;\n     \\<iota>\\<^sub>1 \\<equiv> (b - sqrt (b\\<^sup>2 + 4 * a)) / 2;\n     \\<iota>\\<^sub>2 \\<equiv> (b + sqrt (b\\<^sup>2 + 4 * a)) / 2;\n     \\<And>t.\n        \\<Phi> t \\<equiv>\n        mtx [[(b + sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n              exp (t * ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n              (b - sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n              exp (t * ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)),\n              exp (t * ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n              exp (t * ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2))],\n             [a * exp (t * ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n              a * exp (t * ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2)),\n              (b + sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n              exp (t * ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n              (b - sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n              exp (t * ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2))]];\n     0 < b\\<^sup>2 + a * 4; a \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i j.\n                         to_mtx\n                          (\\<chi>i j.\n                              (1 /\n                               ((b - sqrt (b\\<^sup>2 + 4 * a)) / (2 * a) -\n                                (b + sqrt (b\\<^sup>2 + 4 * a)) /\n                                (2 * a))) *\\<^sub>R\n                              to_mtx\n                               (\\<chi>i j.\n                                   \\<Sum>k\\<in>insert 1 (skip 2).\n                                     to_mtx\n(\\<chi>i j.\n    \\<Sum>k\\<in>insert 1 (skip 2).\n      P (- ((b + sqrt (b\\<^sup>2 + 4 * a)) / (2 * a)))\n       (- ((b - sqrt (b\\<^sup>2 + 4 * a)) / (2 * a))) $$\n      i $\n      k *\n      (\\<d>\\<i>\\<a>\\<g> i.\n          exp (t *\n               (if i = 1 then (b - sqrt (b\\<^sup>2 + 4 * a)) / 2\n                else (b + sqrt (b\\<^sup>2 + 4 * a)) / 2))) $$\n      k $\n      j) $$\n                                     i $\n                                     k *\n                                     mtx\n[[1, (b - sqrt (b\\<^sup>2 + 4 * a)) / (2 * a)],\n [- 1, - ((b + sqrt (b\\<^sup>2 + 4 * a)) / (2 * a))]] $$\n                                     k $\n                                     j) $$\n                              i $\n                              j) $$\n                         i $\n                         j =\n                         to_mtx\n                          (\\<chi>i j.\n                              (1 / sqrt (b\\<^sup>2 + a * 4)) *\\<^sub>R\n                              mtx [[(b + sqrt (b\\<^sup>2 + 4 * a)) *\n                                    exp (t *\n   (b - sqrt (b\\<^sup>2 + 4 * a)) /\n   2) /\n                                    2 -\n                                    (b - sqrt (b\\<^sup>2 + 4 * a)) *\n                                    exp (t *\n   (b + sqrt (b\\<^sup>2 + 4 * a)) /\n   2) /\n                                    2,\n                                    exp (t *\n   (b + sqrt (b\\<^sup>2 + 4 * a)) /\n   2) -\n                                    exp (t *\n   (b - sqrt (b\\<^sup>2 + 4 * a)) /\n   2)],\n                                   [a *\n                                    exp (t *\n   (b + sqrt (b\\<^sup>2 + 4 * a)) /\n   2) -\n                                    a *\n                                    exp (t *\n   (b - sqrt (b\\<^sup>2 + 4 * a)) /\n   2),\n                                    (b + sqrt (b\\<^sup>2 + 4 * a)) *\n                                    exp (t *\n   (b + sqrt (b\\<^sup>2 + 4 * a)) /\n   2) /\n                                    2 -\n                                    (b - sqrt (b\\<^sup>2 + 4 * a)) *\n                                    exp (t *\n   (b - sqrt (b\\<^sup>2 + 4 * a)) /\n   2) /\n                                    2]] $$\n                              i $\n                              j) $$\n                         i $\n                         j", "apply(simp_all add: axis_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(b - sqrt (b\\<^sup>2 + 4 * a)) / 2 \\<equiv>\n             (b - sqrt (b\\<^sup>2 + 4 * a)) / 2;\n     (b + sqrt (b\\<^sup>2 + 4 * a)) / 2 \\<equiv>\n     (b + sqrt (b\\<^sup>2 + 4 * a)) / 2;\n     \\<And>t.\n        mtx [[(b + sqrt (b\\<^sup>2 + 4 * a)) *\n              exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2) /\n              2 -\n              (b - sqrt (b\\<^sup>2 + 4 * a)) *\n              exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2) /\n              2,\n              exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2) -\n              exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2)],\n             [a * exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2) -\n              a * exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2),\n              (b + sqrt (b\\<^sup>2 + 4 * a)) *\n              exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2) /\n              2 -\n              (b - sqrt (b\\<^sup>2 + 4 * a)) *\n              exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2) /\n              2]] \\<equiv>\n        mtx [[(b + sqrt (b\\<^sup>2 + 4 * a)) *\n              exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2) /\n              2 -\n              (b - sqrt (b\\<^sup>2 + 4 * a)) *\n              exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2) /\n              2,\n              exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2) -\n              exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2)],\n             [a * exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2) -\n              a * exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2),\n              (b + sqrt (b\\<^sup>2 + 4 * a)) *\n              exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2) /\n              2 -\n              (b - sqrt (b\\<^sup>2 + 4 * a)) *\n              exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2) /\n              2]];\n     \\<iota>\\<^sub>1 \\<equiv> (b - sqrt (b\\<^sup>2 + 4 * a)) / 2;\n     \\<iota>\\<^sub>2 \\<equiv> (b + sqrt (b\\<^sup>2 + 4 * a)) / 2;\n     \\<And>t.\n        \\<Phi> t \\<equiv>\n        mtx [[(b + sqrt (b\\<^sup>2 + 4 * a)) *\n              exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2) /\n              2 -\n              (b - sqrt (b\\<^sup>2 + 4 * a)) *\n              exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2) /\n              2,\n              exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2) -\n              exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2)],\n             [a * exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2) -\n              a * exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2),\n              (b + sqrt (b\\<^sup>2 + 4 * a)) *\n              exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2) /\n              2 -\n              (b - sqrt (b\\<^sup>2 + 4 * a)) *\n              exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2) /\n              2]];\n     0 < b\\<^sup>2 + a * 4; a \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> \\<forall>i.\n                         (i = 2 \\<longrightarrow>\n                          (\\<forall>j.\n                              (j = 2 \\<longrightarrow>\n                               (exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) /\n                                     2) *\n                                (b - sqrt (b\\<^sup>2 + 4 * a)) /\n                                (2 * a) -\n                                exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) /\n                                     2) *\n                                (b + sqrt (b\\<^sup>2 + 4 * a)) /\n                                (2 * a)) /\n                               ((b - sqrt (b\\<^sup>2 + 4 * a)) / (2 * a) -\n                                (b + sqrt (b\\<^sup>2 + 4 * a)) / (2 * a)) =\n                               ((b + sqrt (b\\<^sup>2 + 4 * a)) *\n                                exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) /\n                                     2) /\n                                2 -\n                                (b - sqrt (b\\<^sup>2 + 4 * a)) *\n                                exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) /\n                                     2) /\n                                2) /\n                               sqrt (b\\<^sup>2 + a * 4)) \\<and>\n                              (j \\<noteq> 2 \\<longrightarrow>\n                               j = 1 \\<longrightarrow>\n                               (exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) /\n                                     2) -\n                                exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) /\n                                     2)) /\n                               ((b - sqrt (b\\<^sup>2 + 4 * a)) / (2 * a) -\n                                (b + sqrt (b\\<^sup>2 + 4 * a)) / (2 * a)) =\n                               (a *\n                                exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) /\n                                     2) -\n                                a *\n                                exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) /\n                                     2)) /\n                               sqrt (b\\<^sup>2 + a * 4)))) \\<and>\n                         (i \\<noteq> 2 \\<longrightarrow>\n                          i = 1 \\<longrightarrow>\n                          (\\<forall>j.\n                              (j = 2 \\<longrightarrow>\n                               ((b - sqrt (b\\<^sup>2 + 4 * a)) *\n                                exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) /\n                                     2) *\n                                (b + sqrt (b\\<^sup>2 + 4 * a)) /\n                                (4 * (a * a)) -\n                                (b + sqrt (b\\<^sup>2 + 4 * a)) *\n                                exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) /\n                                     2) *\n                                (b - sqrt (b\\<^sup>2 + 4 * a)) /\n                                (4 * (a * a))) /\n                               ((b - sqrt (b\\<^sup>2 + 4 * a)) / (2 * a) -\n                                (b + sqrt (b\\<^sup>2 + 4 * a)) / (2 * a)) =\n                               (exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) /\n                                     2) -\n                                exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) /\n                                     2)) /\n                               sqrt (b\\<^sup>2 + a * 4)) \\<and>\n                              (j \\<noteq> 2 \\<longrightarrow>\n                               j = 1 \\<longrightarrow>\n                               ((b - sqrt (b\\<^sup>2 + 4 * a)) *\n                                exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) /\n                                     2) /\n                                (2 * a) -\n                                (b + sqrt (b\\<^sup>2 + 4 * a)) *\n                                exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) /\n                                     2) /\n                                (2 * a)) /\n                               ((b - sqrt (b\\<^sup>2 + 4 * a)) / (2 * a) -\n                                (b + sqrt (b\\<^sup>2 + 4 * a)) / (2 * a)) =\n                               ((b + sqrt (b\\<^sup>2 + 4 * a)) *\n                                exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) /\n                                     2) /\n                                2 -\n                                (b - sqrt (b\\<^sup>2 + 4 * a)) *\n                                exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) /\n                                     2) /\n                                2) /\n                               sqrt (b\\<^sup>2 + a * 4))))", "by (auto simp: field_simps, auto simp: field_power_simps)+"], ["", "lemma local_flow_mtx_hOsc:\n  fixes a b\n  defines \"\\<iota>\\<^sub>1 \\<equiv> (b - sqrt (b^2+4*a))/2\" and \"\\<iota>\\<^sub>2 \\<equiv> (b + sqrt (b^2+4*a))/2\"\n  defines \"\\<Phi> t \\<equiv> mtx (\n   [\\<iota>\\<^sub>2*exp(t*\\<iota>\\<^sub>1) - \\<iota>\\<^sub>1*exp(t*\\<iota>\\<^sub>2),     exp(t*\\<iota>\\<^sub>2)-exp(t*\\<iota>\\<^sub>1)]#\n   [a*exp(t*\\<iota>\\<^sub>2) - a*exp(t*\\<iota>\\<^sub>1), \\<iota>\\<^sub>2*exp(t*\\<iota>\\<^sub>2)-\\<iota>\\<^sub>1*exp(t*\\<iota>\\<^sub>1)]#[])\"\n  assumes \"b\\<^sup>2 + a * 4 > 0\" and \"a \\<noteq> 0\"\n  shows \"local_flow ((*\\<^sub>V) (A a b)) UNIV UNIV (\\<lambda>t. (*\\<^sub>V) ((1/sqrt (b\\<^sup>2 + a * 4)) *\\<^sub>R \\<Phi> t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local_flow ((*\\<^sub>V) (A a b)) UNIV UNIV\n     (\\<lambda>t.\n         (*\\<^sub>V) ((1 / sqrt (b\\<^sup>2 + a * 4)) *\\<^sub>R \\<Phi> t))", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1. local_flow ((*\\<^sub>V) (A a b)) UNIV UNIV\n     (\\<lambda>t.\n         (*\\<^sub>V)\n          ((1 / sqrt (b\\<^sup>2 + a * 4)) *\\<^sub>R\n           mtx [[(b + sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n                 exp (t * ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n                 (b - sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n                 exp (t * ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)),\n                 exp (t * ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n                 exp (t * ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2))],\n                [a * exp (t * ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n                 a * exp (t * ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2)),\n                 (b + sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n                 exp (t * ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n                 (b - sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n                 exp (t * ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2))]]))", "using local_flow_sq_mtx_linear[of \"A a b\"] assms"], ["proof (prove)\nusing this:\n  local_flow ((*\\<^sub>V) (A a b)) UNIV UNIV\n   (\\<lambda>t. (*\\<^sub>V) (exp (t *\\<^sub>R A a b)))\n  \\<iota>\\<^sub>1 \\<equiv> (b - sqrt (b\\<^sup>2 + 4 * a)) / 2\n  \\<iota>\\<^sub>2 \\<equiv> (b + sqrt (b\\<^sup>2 + 4 * a)) / 2\n  \\<Phi> ?t \\<equiv>\n  mtx [[\\<iota>\\<^sub>2 * exp (?t * \\<iota>\\<^sub>1) -\n        \\<iota>\\<^sub>1 * exp (?t * \\<iota>\\<^sub>2),\n        exp (?t * \\<iota>\\<^sub>2) - exp (?t * \\<iota>\\<^sub>1)],\n       [a * exp (?t * \\<iota>\\<^sub>2) - a * exp (?t * \\<iota>\\<^sub>1),\n        \\<iota>\\<^sub>2 * exp (?t * \\<iota>\\<^sub>2) -\n        \\<iota>\\<^sub>1 * exp (?t * \\<iota>\\<^sub>1)]]\n  0 < b\\<^sup>2 + a * 4\n  a \\<noteq> 0\n\ngoal (1 subgoal):\n 1. local_flow ((*\\<^sub>V) (A a b)) UNIV UNIV\n     (\\<lambda>t.\n         (*\\<^sub>V)\n          ((1 / sqrt (b\\<^sup>2 + a * 4)) *\\<^sub>R\n           mtx [[(b + sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n                 exp (t * ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n                 (b - sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n                 exp (t * ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)),\n                 exp (t * ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n                 exp (t * ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2))],\n                [a * exp (t * ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n                 a * exp (t * ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2)),\n                 (b + sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n                 exp (t * ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n                 (b - sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n                 exp (t * ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2))]]))", "apply(subst (asm) exp_scaleR_diagonal2[OF invertible_mtx_chB_hOsc mtx_hOsc_diagonalizable])"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>\\<iota>\\<^sub>1 \\<equiv> (b - sqrt (b\\<^sup>2 + 4 * a)) / 2;\n     \\<iota>\\<^sub>2 \\<equiv> (b + sqrt (b\\<^sup>2 + 4 * a)) / 2;\n     \\<And>t.\n        \\<Phi> t \\<equiv>\n        mtx [[\\<iota>\\<^sub>2 * exp (t * \\<iota>\\<^sub>1) -\n              \\<iota>\\<^sub>1 * exp (t * \\<iota>\\<^sub>2),\n              exp (t * \\<iota>\\<^sub>2) - exp (t * \\<iota>\\<^sub>1)],\n             [a * exp (t * \\<iota>\\<^sub>2) - a * exp (t * \\<iota>\\<^sub>1),\n              \\<iota>\\<^sub>2 * exp (t * \\<iota>\\<^sub>2) -\n              \\<iota>\\<^sub>1 * exp (t * \\<iota>\\<^sub>1)]];\n     0 < b\\<^sup>2 + a * 4; a \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> - ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2) / a \\<noteq>\n                      - ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2) / a\n 2. \\<lbrakk>\\<iota>\\<^sub>1 \\<equiv> (b - sqrt (b\\<^sup>2 + 4 * a)) / 2;\n     \\<iota>\\<^sub>2 \\<equiv> (b + sqrt (b\\<^sup>2 + 4 * a)) / 2;\n     \\<And>t.\n        \\<Phi> t \\<equiv>\n        mtx [[\\<iota>\\<^sub>2 * exp (t * \\<iota>\\<^sub>1) -\n              \\<iota>\\<^sub>1 * exp (t * \\<iota>\\<^sub>2),\n              exp (t * \\<iota>\\<^sub>2) - exp (t * \\<iota>\\<^sub>1)],\n             [a * exp (t * \\<iota>\\<^sub>2) - a * exp (t * \\<iota>\\<^sub>1),\n              \\<iota>\\<^sub>2 * exp (t * \\<iota>\\<^sub>2) -\n              \\<iota>\\<^sub>1 * exp (t * \\<iota>\\<^sub>1)]];\n     0 < b\\<^sup>2 + a * 4; a \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> 0 < b\\<^sup>2 + a * 4\n 3. \\<lbrakk>\\<iota>\\<^sub>1 \\<equiv> (b - sqrt (b\\<^sup>2 + 4 * a)) / 2;\n     \\<iota>\\<^sub>2 \\<equiv> (b + sqrt (b\\<^sup>2 + 4 * a)) / 2;\n     \\<And>t.\n        \\<Phi> t \\<equiv>\n        mtx [[\\<iota>\\<^sub>2 * exp (t * \\<iota>\\<^sub>1) -\n              \\<iota>\\<^sub>1 * exp (t * \\<iota>\\<^sub>2),\n              exp (t * \\<iota>\\<^sub>2) - exp (t * \\<iota>\\<^sub>1)],\n             [a * exp (t * \\<iota>\\<^sub>2) - a * exp (t * \\<iota>\\<^sub>1),\n              \\<iota>\\<^sub>2 * exp (t * \\<iota>\\<^sub>2) -\n              \\<iota>\\<^sub>1 * exp (t * \\<iota>\\<^sub>1)]];\n     0 < b\\<^sup>2 + a * 4; a \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> a \\<noteq> 0\n 4. \\<lbrakk>local_flow ((*\\<^sub>V) (A a b)) UNIV UNIV\n              (\\<lambda>t.\n                  (*\\<^sub>V)\n                   (P (- ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2) / a)\n                     (- ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2) / a) *\n                    (\\<d>\\<i>\\<a>\\<g> i.\n                        exp (t *\n                             (if i = 1\n                              then (b - sqrt (b\\<^sup>2 + 4 * a)) / 2\n                              else (b + sqrt (b\\<^sup>2 + 4 * a)) / 2))) *\n                    P (- ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2) / a)\n                     (- ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2) /\n                      a)\\<^sup>-\\<^sup>1));\n     \\<iota>\\<^sub>1 \\<equiv> (b - sqrt (b\\<^sup>2 + 4 * a)) / 2;\n     \\<iota>\\<^sub>2 \\<equiv> (b + sqrt (b\\<^sup>2 + 4 * a)) / 2;\n     \\<And>t.\n        \\<Phi> t \\<equiv>\n        mtx [[\\<iota>\\<^sub>2 * exp (t * \\<iota>\\<^sub>1) -\n              \\<iota>\\<^sub>1 * exp (t * \\<iota>\\<^sub>2),\n              exp (t * \\<iota>\\<^sub>2) - exp (t * \\<iota>\\<^sub>1)],\n             [a * exp (t * \\<iota>\\<^sub>2) - a * exp (t * \\<iota>\\<^sub>1),\n              \\<iota>\\<^sub>2 * exp (t * \\<iota>\\<^sub>2) -\n              \\<iota>\\<^sub>1 * exp (t * \\<iota>\\<^sub>1)]];\n     0 < b\\<^sup>2 + a * 4; a \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> local_flow ((*\\<^sub>V) (A a b)) UNIV UNIV\n                       (\\<lambda>t.\n                           (*\\<^sub>V)\n                            ((1 / sqrt (b\\<^sup>2 + a * 4)) *\\<^sub>R\n                             mtx [[(b + sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n                                   exp (t *\n  ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n                                   (b - sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n                                   exp (t *\n  ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)),\n                                   exp (t *\n  ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n                                   exp (t *\n  ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2))],\n                                  [a *\n                                   exp (t *\n  ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n                                   a *\n                                   exp (t *\n  ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2)),\n                                   (b + sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n                                   exp (t *\n  ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n                                   (b - sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n                                   exp (t *\n  ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2))]]))", "apply(simp, simp, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>local_flow ((*\\<^sub>V) (A a b)) UNIV UNIV\n              (\\<lambda>t.\n                  (*\\<^sub>V)\n                   (P (- ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2) / a)\n                     (- ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2) / a) *\n                    (\\<d>\\<i>\\<a>\\<g> i.\n                        exp (t *\n                             (if i = 1\n                              then (b - sqrt (b\\<^sup>2 + 4 * a)) / 2\n                              else (b + sqrt (b\\<^sup>2 + 4 * a)) / 2))) *\n                    P (- ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2) / a)\n                     (- ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2) /\n                      a)\\<^sup>-\\<^sup>1));\n     \\<iota>\\<^sub>1 \\<equiv> (b - sqrt (b\\<^sup>2 + 4 * a)) / 2;\n     \\<iota>\\<^sub>2 \\<equiv> (b + sqrt (b\\<^sup>2 + 4 * a)) / 2;\n     \\<And>t.\n        \\<Phi> t \\<equiv>\n        mtx [[\\<iota>\\<^sub>2 * exp (t * \\<iota>\\<^sub>1) -\n              \\<iota>\\<^sub>1 * exp (t * \\<iota>\\<^sub>2),\n              exp (t * \\<iota>\\<^sub>2) - exp (t * \\<iota>\\<^sub>1)],\n             [a * exp (t * \\<iota>\\<^sub>2) - a * exp (t * \\<iota>\\<^sub>1),\n              \\<iota>\\<^sub>2 * exp (t * \\<iota>\\<^sub>2) -\n              \\<iota>\\<^sub>1 * exp (t * \\<iota>\\<^sub>1)]];\n     0 < b\\<^sup>2 + a * 4; a \\<noteq> 0\\<rbrakk>\n    \\<Longrightarrow> local_flow ((*\\<^sub>V) (A a b)) UNIV UNIV\n                       (\\<lambda>t.\n                           (*\\<^sub>V)\n                            ((1 / sqrt (b\\<^sup>2 + a * 4)) *\\<^sub>R\n                             mtx [[(b + sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n                                   exp (t *\n  ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n                                   (b - sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n                                   exp (t *\n  ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)),\n                                   exp (t *\n  ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n                                   exp (t *\n  ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2))],\n                                  [a *\n                                   exp (t *\n  ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n                                   a *\n                                   exp (t *\n  ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2)),\n                                   (b + sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n                                   exp (t *\n  ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n                                   (b - sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n                                   exp (t *\n  ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2))]]))", "by (subst (asm) mtx_hOsc_solution_eq) simp_all"], ["", "lemma overdamped_door_arith:\n  assumes \"b\\<^sup>2 + a * 4 > 0\" and \"a < 0\" and \"b \\<le> 0\" and \"t \\<ge> 0\" and \"s1 > 0\"\n  shows \"0 \\<le> ((b + sqrt (b\\<^sup>2 + 4 * a)) * exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2) / 2 - \n(b - sqrt (b\\<^sup>2 + 4 * a)) * exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2) / 2) * s1 / sqrt (b\\<^sup>2 + a * 4)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> ((b + sqrt (b\\<^sup>2 + 4 * a)) *\n             exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2) /\n             2 -\n             (b - sqrt (b\\<^sup>2 + 4 * a)) *\n             exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2) /\n             2) *\n            s1 /\n            sqrt (b\\<^sup>2 + a * 4)", "proof(subst diff_divide_distrib[symmetric], simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. 0 \\<le> ((b + sqrt (b\\<^sup>2 + 4 * a)) *\n             exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2) -\n             (b - sqrt (b\\<^sup>2 + 4 * a)) *\n             exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) *\n            s1 /\n            (2 * sqrt (b\\<^sup>2 + a * 4))", "have f0: \"s1 / (2 * sqrt (b\\<^sup>2 + a * 4)) > 0\"  (is \"s1/?c3 > 0\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < s1 / (2 * sqrt (b\\<^sup>2 + a * 4))", "using assms(1,5)"], ["proof (prove)\nusing this:\n  0 < b\\<^sup>2 + a * 4\n  0 < s1\n\ngoal (1 subgoal):\n 1. 0 < s1 / (2 * sqrt (b\\<^sup>2 + a * 4))", "by simp"], ["proof (state)\nthis:\n  0 < s1 / (2 * sqrt (b\\<^sup>2 + a * 4))\n\ngoal (1 subgoal):\n 1. 0 \\<le> ((b + sqrt (b\\<^sup>2 + 4 * a)) *\n             exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2) -\n             (b - sqrt (b\\<^sup>2 + 4 * a)) *\n             exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) *\n            s1 /\n            (2 * sqrt (b\\<^sup>2 + a * 4))", "have f1: \"(b - sqrt (b\\<^sup>2 + 4 * a)) < (b + sqrt (b\\<^sup>2 + 4 * a))\" (is \"?c2 < ?c1\") \n    and f2: \"(b + sqrt (b\\<^sup>2 + 4 * a)) < 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b - sqrt (b\\<^sup>2 + 4 * a) < b + sqrt (b\\<^sup>2 + 4 * a) &&&\n    b + sqrt (b\\<^sup>2 + 4 * a) < 0", "using sqrt_ge_absD[of b \"b\\<^sup>2 + 4 * a\"] assms"], ["proof (prove)\nusing this:\n  \\<bar>b\\<bar> \\<le> sqrt (b\\<^sup>2 + 4 * a) \\<Longrightarrow>\n  b\\<^sup>2 \\<le> b\\<^sup>2 + 4 * a\n  0 < b\\<^sup>2 + a * 4\n  a < 0\n  b \\<le> 0\n  0 \\<le> t\n  0 < s1\n\ngoal (1 subgoal):\n 1. b - sqrt (b\\<^sup>2 + 4 * a) < b + sqrt (b\\<^sup>2 + 4 * a) &&&\n    b + sqrt (b\\<^sup>2 + 4 * a) < 0", "by (force, linarith)"], ["proof (state)\nthis:\n  b - sqrt (b\\<^sup>2 + 4 * a) < b + sqrt (b\\<^sup>2 + 4 * a)\n  b + sqrt (b\\<^sup>2 + 4 * a) < 0\n\ngoal (1 subgoal):\n 1. 0 \\<le> ((b + sqrt (b\\<^sup>2 + 4 * a)) *\n             exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2) -\n             (b - sqrt (b\\<^sup>2 + 4 * a)) *\n             exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) *\n            s1 /\n            (2 * sqrt (b\\<^sup>2 + a * 4))", "hence f3: \"exp (t * ?c2 / 2) \\<le> exp (t * ?c1 / 2)\" (is \"exp ?t1 \\<le> exp ?t2\")"], ["proof (prove)\nusing this:\n  b - sqrt (b\\<^sup>2 + 4 * a) < b + sqrt (b\\<^sup>2 + 4 * a)\n  b + sqrt (b\\<^sup>2 + 4 * a) < 0\n\ngoal (1 subgoal):\n 1. exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2)\n    \\<le> exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2)", "unfolding exp_le_cancel_iff"], ["proof (prove)\nusing this:\n  b - sqrt (b\\<^sup>2 + 4 * a) < b + sqrt (b\\<^sup>2 + 4 * a)\n  b + sqrt (b\\<^sup>2 + 4 * a) < 0\n\ngoal (1 subgoal):\n 1. t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2\n    \\<le> t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2", "using assms(4)"], ["proof (prove)\nusing this:\n  b - sqrt (b\\<^sup>2 + 4 * a) < b + sqrt (b\\<^sup>2 + 4 * a)\n  b + sqrt (b\\<^sup>2 + 4 * a) < 0\n  0 \\<le> t\n\ngoal (1 subgoal):\n 1. t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2\n    \\<le> t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2", "by (case_tac \"t=0\", simp_all)"], ["proof (state)\nthis:\n  exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2)\n  \\<le> exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2)\n\ngoal (1 subgoal):\n 1. 0 \\<le> ((b + sqrt (b\\<^sup>2 + 4 * a)) *\n             exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2) -\n             (b - sqrt (b\\<^sup>2 + 4 * a)) *\n             exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) *\n            s1 /\n            (2 * sqrt (b\\<^sup>2 + a * 4))", "hence \"?c2 * exp ?t2 \\<le> ?c2 * exp ?t1\""], ["proof (prove)\nusing this:\n  exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2)\n  \\<le> exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2)\n\ngoal (1 subgoal):\n 1. (b - sqrt (b\\<^sup>2 + 4 * a)) *\n    exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2)\n    \\<le> (b - sqrt (b\\<^sup>2 + 4 * a)) *\n          exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2)", "using f1 f2 mult_le_cancel_left_pos[of \"-?c2\" \"exp ?t1\" \"exp ?t2\"]"], ["proof (prove)\nusing this:\n  exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2)\n  \\<le> exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2)\n  b - sqrt (b\\<^sup>2 + 4 * a) < b + sqrt (b\\<^sup>2 + 4 * a)\n  b + sqrt (b\\<^sup>2 + 4 * a) < 0\n  0 < - (b - sqrt (b\\<^sup>2 + 4 * a)) \\<Longrightarrow>\n  (- (b - sqrt (b\\<^sup>2 + 4 * a)) *\n   exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2)\n   \\<le> - (b - sqrt (b\\<^sup>2 + 4 * a)) *\n         exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) =\n  (exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2)\n   \\<le> exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2))\n\ngoal (1 subgoal):\n 1. (b - sqrt (b\\<^sup>2 + 4 * a)) *\n    exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2)\n    \\<le> (b - sqrt (b\\<^sup>2 + 4 * a)) *\n          exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2)", "by linarith"], ["proof (state)\nthis:\n  (b - sqrt (b\\<^sup>2 + 4 * a)) *\n  exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2)\n  \\<le> (b - sqrt (b\\<^sup>2 + 4 * a)) *\n        exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2)\n\ngoal (1 subgoal):\n 1. 0 \\<le> ((b + sqrt (b\\<^sup>2 + 4 * a)) *\n             exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2) -\n             (b - sqrt (b\\<^sup>2 + 4 * a)) *\n             exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) *\n            s1 /\n            (2 * sqrt (b\\<^sup>2 + a * 4))", "also"], ["proof (state)\nthis:\n  (b - sqrt (b\\<^sup>2 + 4 * a)) *\n  exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2)\n  \\<le> (b - sqrt (b\\<^sup>2 + 4 * a)) *\n        exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2)\n\ngoal (1 subgoal):\n 1. 0 \\<le> ((b + sqrt (b\\<^sup>2 + 4 * a)) *\n             exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2) -\n             (b - sqrt (b\\<^sup>2 + 4 * a)) *\n             exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) *\n            s1 /\n            (2 * sqrt (b\\<^sup>2 + a * 4))", "have \"... < ?c1 * exp ?t1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (b - sqrt (b\\<^sup>2 + 4 * a)) *\n    exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2)\n    < (b + sqrt (b\\<^sup>2 + 4 * a)) *\n      exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2)", "using f1"], ["proof (prove)\nusing this:\n  b - sqrt (b\\<^sup>2 + 4 * a) < b + sqrt (b\\<^sup>2 + 4 * a)\n\ngoal (1 subgoal):\n 1. (b - sqrt (b\\<^sup>2 + 4 * a)) *\n    exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2)\n    < (b + sqrt (b\\<^sup>2 + 4 * a)) *\n      exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2)", "by auto"], ["proof (state)\nthis:\n  (b - sqrt (b\\<^sup>2 + 4 * a)) *\n  exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2)\n  < (b + sqrt (b\\<^sup>2 + 4 * a)) *\n    exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2)\n\ngoal (1 subgoal):\n 1. 0 \\<le> ((b + sqrt (b\\<^sup>2 + 4 * a)) *\n             exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2) -\n             (b - sqrt (b\\<^sup>2 + 4 * a)) *\n             exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) *\n            s1 /\n            (2 * sqrt (b\\<^sup>2 + a * 4))", "also"], ["proof (state)\nthis:\n  (b - sqrt (b\\<^sup>2 + 4 * a)) *\n  exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2)\n  < (b + sqrt (b\\<^sup>2 + 4 * a)) *\n    exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2)\n\ngoal (1 subgoal):\n 1. 0 \\<le> ((b + sqrt (b\\<^sup>2 + 4 * a)) *\n             exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2) -\n             (b - sqrt (b\\<^sup>2 + 4 * a)) *\n             exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) *\n            s1 /\n            (2 * sqrt (b\\<^sup>2 + a * 4))", "have\"... \\<le> ?c1 * exp ?t1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (b + sqrt (b\\<^sup>2 + 4 * a)) *\n    exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2)\n    \\<le> (b + sqrt (b\\<^sup>2 + 4 * a)) *\n          exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2)", "using f1 f2"], ["proof (prove)\nusing this:\n  b - sqrt (b\\<^sup>2 + 4 * a) < b + sqrt (b\\<^sup>2 + 4 * a)\n  b + sqrt (b\\<^sup>2 + 4 * a) < 0\n\ngoal (1 subgoal):\n 1. (b + sqrt (b\\<^sup>2 + 4 * a)) *\n    exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2)\n    \\<le> (b + sqrt (b\\<^sup>2 + 4 * a)) *\n          exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2)", "by auto"], ["proof (state)\nthis:\n  (b + sqrt (b\\<^sup>2 + 4 * a)) *\n  exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2)\n  \\<le> (b + sqrt (b\\<^sup>2 + 4 * a)) *\n        exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2)\n\ngoal (1 subgoal):\n 1. 0 \\<le> ((b + sqrt (b\\<^sup>2 + 4 * a)) *\n             exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2) -\n             (b - sqrt (b\\<^sup>2 + 4 * a)) *\n             exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) *\n            s1 /\n            (2 * sqrt (b\\<^sup>2 + a * 4))", "ultimately"], ["proof (chain)\npicking this:\n  (b - sqrt (b\\<^sup>2 + 4 * a)) *\n  exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2)\n  < (b + sqrt (b\\<^sup>2 + 4 * a)) *\n    exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2)\n  (b + sqrt (b\\<^sup>2 + 4 * a)) *\n  exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2)\n  \\<le> (b + sqrt (b\\<^sup>2 + 4 * a)) *\n        exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2)", "show \"0 \\<le> (?c1 * exp ?t1 - ?c2 * exp ?t2) * s1 / ?c3\""], ["proof (prove)\nusing this:\n  (b - sqrt (b\\<^sup>2 + 4 * a)) *\n  exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2)\n  < (b + sqrt (b\\<^sup>2 + 4 * a)) *\n    exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2)\n  (b + sqrt (b\\<^sup>2 + 4 * a)) *\n  exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2)\n  \\<le> (b + sqrt (b\\<^sup>2 + 4 * a)) *\n        exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2)\n\ngoal (1 subgoal):\n 1. 0 \\<le> ((b + sqrt (b\\<^sup>2 + 4 * a)) *\n             exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2) -\n             (b - sqrt (b\\<^sup>2 + 4 * a)) *\n             exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) *\n            s1 /\n            (2 * sqrt (b\\<^sup>2 + a * 4))", "using f0 f1 assms(5)"], ["proof (prove)\nusing this:\n  (b - sqrt (b\\<^sup>2 + 4 * a)) *\n  exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2)\n  < (b + sqrt (b\\<^sup>2 + 4 * a)) *\n    exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2)\n  (b + sqrt (b\\<^sup>2 + 4 * a)) *\n  exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2)\n  \\<le> (b + sqrt (b\\<^sup>2 + 4 * a)) *\n        exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2)\n  0 < s1 / (2 * sqrt (b\\<^sup>2 + a * 4))\n  b - sqrt (b\\<^sup>2 + 4 * a) < b + sqrt (b\\<^sup>2 + 4 * a)\n  0 < s1\n\ngoal (1 subgoal):\n 1. 0 \\<le> ((b + sqrt (b\\<^sup>2 + 4 * a)) *\n             exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2) -\n             (b - sqrt (b\\<^sup>2 + 4 * a)) *\n             exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) *\n            s1 /\n            (2 * sqrt (b\\<^sup>2 + a * 4))", "by auto"], ["proof (state)\nthis:\n  0 \\<le> ((b + sqrt (b\\<^sup>2 + 4 * a)) *\n           exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2) -\n           (b - sqrt (b\\<^sup>2 + 4 * a)) *\n           exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) *\n          s1 /\n          (2 * sqrt (b\\<^sup>2 + a * 4))\n\ngoal:\nNo subgoals!", "qed"], ["", "abbreviation \"open_door s \\<equiv> {s. s$1 > 0 \\<and> s$2 = 0}\""], ["", "lemma overdamped_door:\n  assumes \"b\\<^sup>2 + a * 4 > 0\" and \"a < 0\" and \"b \\<le> 0\"\n  shows \"PRE (\\<lambda>s. s$1 = 0)\n  HP (LOOP open_door; (x\\<acute>=((*\\<^sub>V) (A a b)) & G) INV (\\<lambda>s. 0 \\<le> s$1))\n  POST (\\<lambda>s. 0 \\<le> s $ 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. PRE(\\<lambda>s.\n           s $ 1 =\n           0) HP (LOOP (\\<lambda>s. {s. 0 < s $ 1 \\<and> s $ 2 = 0}) ;\n                       x\\<acute>=\\<lambda>t.\n                                    (*\\<^sub>V)\n                                     (A a\n b) & G on \\<lambda>s.\n              {t. 0 \\<le> t} UNIV @ 0 INV (\\<lambda>s.\n        0 \\<le> s $ 1) ) POST \\<lambda>s. 0 \\<le> s $ 1", "apply(rule fbox_loopI, simp_all add: le_fun_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x.\n       0 \\<le> x $ 1 \\<longrightarrow>\n       (|(\\<lambda>s.\n             {s. 0 < s $ 1 \\<and>\n                 s $ 2 =\n                 0})] |x\\<acute>=\\<lambda>t.\n                                    (*\\<^sub>V)\n                                     (A a\n b) & G on \\<lambda>s.\n              Collect ((\\<le>) 0) UNIV @ 0] (\\<lambda>s. 0 \\<le> s $ 1))\n        x", "apply(subst local_flow.fbox_g_ode_subset[OF local_flow_mtx_hOsc[OF assms(1)]])"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x. a \\<noteq> 0\n 2. \\<And>x s.\n       s \\<in> UNIV \\<Longrightarrow>\n       0 \\<in> Collect ((\\<le>) 0) \\<and>\n       is_interval (Collect ((\\<le>) 0)) \\<and>\n       Collect ((\\<le>) 0) \\<subseteq> UNIV\n 3. \\<forall>x.\n       0 \\<le> x $ 1 \\<longrightarrow>\n       (|(\\<lambda>s.\n             {s. 0 < s $ 1 \\<and>\n                 s $ 2 =\n                 0})] (\\<lambda>s.\n                          s \\<in> UNIV \\<longrightarrow>\n                          (\\<forall>t\\<in>Collect ((\\<le>) 0).\n                              (\\<forall>\\<tau>\n  \\<in>down (Collect ((\\<le>) 0)) t.\n                                  G (((1 /\n sqrt (b\\<^sup>2 + a * 4)) *\\<^sub>R\nmtx [[(b + sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n      exp (\\<tau> * ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n      (b - sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n      exp (\\<tau> * ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)),\n      exp (\\<tau> * ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n      exp (\\<tau> * ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2))],\n     [a * exp (\\<tau> * ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n      a * exp (\\<tau> * ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2)),\n      (b + sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n      exp (\\<tau> * ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n      (b - sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n      exp (\\<tau> * ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2))]]) *\\<^sub>V\n                                     s)) \\<longrightarrow>\n                              0 \\<le> ((1 /\n  sqrt (b\\<^sup>2 + a * 4)) *\\<^sub>R\n mtx [[(b + sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n       exp (t * ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n       (b - sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n       exp (t * ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)),\n       exp (t * ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n       exp (t * ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2))],\n      [a * exp (t * ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n       a * exp (t * ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2)),\n       (b + sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n       exp (t * ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n       (b - sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n       exp (t * ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2))]]) *\\<^sub>V\ns $\n1)))\n        x", "using assms"], ["proof (prove)\nusing this:\n  0 < b\\<^sup>2 + a * 4\n  a < 0\n  b \\<le> 0\n\ngoal (3 subgoals):\n 1. \\<And>x. a \\<noteq> 0\n 2. \\<And>x s.\n       s \\<in> UNIV \\<Longrightarrow>\n       0 \\<in> Collect ((\\<le>) 0) \\<and>\n       is_interval (Collect ((\\<le>) 0)) \\<and>\n       Collect ((\\<le>) 0) \\<subseteq> UNIV\n 3. \\<forall>x.\n       0 \\<le> x $ 1 \\<longrightarrow>\n       (|(\\<lambda>s.\n             {s. 0 < s $ 1 \\<and>\n                 s $ 2 =\n                 0})] (\\<lambda>s.\n                          s \\<in> UNIV \\<longrightarrow>\n                          (\\<forall>t\\<in>Collect ((\\<le>) 0).\n                              (\\<forall>\\<tau>\n  \\<in>down (Collect ((\\<le>) 0)) t.\n                                  G (((1 /\n sqrt (b\\<^sup>2 + a * 4)) *\\<^sub>R\nmtx [[(b + sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n      exp (\\<tau> * ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n      (b - sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n      exp (\\<tau> * ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)),\n      exp (\\<tau> * ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n      exp (\\<tau> * ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2))],\n     [a * exp (\\<tau> * ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n      a * exp (\\<tau> * ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2)),\n      (b + sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n      exp (\\<tau> * ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n      (b - sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n      exp (\\<tau> * ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2))]]) *\\<^sub>V\n                                     s)) \\<longrightarrow>\n                              0 \\<le> ((1 /\n  sqrt (b\\<^sup>2 + a * 4)) *\\<^sub>R\n mtx [[(b + sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n       exp (t * ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n       (b - sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n       exp (t * ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)),\n       exp (t * ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n       exp (t * ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2))],\n      [a * exp (t * ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n       a * exp (t * ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2)),\n       (b + sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n       exp (t * ((b + sqrt (b\\<^sup>2 + 4 * a)) / 2)) -\n       (b - sqrt (b\\<^sup>2 + 4 * a)) / 2 *\n       exp (t * ((b - sqrt (b\\<^sup>2 + 4 * a)) / 2))]]) *\\<^sub>V\ns $\n1)))\n        x", "apply(simp_all add: le_fun_def fbox_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < b\\<^sup>2 + a * 4; a < 0; b \\<le> 0\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>x. 0 \\<le> x $ 1) \\<longrightarrow>\n                      (\\<forall>s'.\n                          0 < s' $ 1 \\<and> s' $ 2 = 0 \\<longrightarrow>\n                          (\\<forall>t\\<ge>0.\n                              (\\<forall>\\<tau>.\n                                  0 \\<le> \\<tau> \\<and>\n                                  \\<tau> \\<le> t \\<longrightarrow>\n                                  G (((1 /\n sqrt (b\\<^sup>2 + a * 4)) *\\<^sub>R\nmtx [[(b + sqrt (b\\<^sup>2 + 4 * a)) *\n      exp (\\<tau> * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2) /\n      2 -\n      (b - sqrt (b\\<^sup>2 + 4 * a)) *\n      exp (\\<tau> * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2) /\n      2,\n      exp (\\<tau> * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2) -\n      exp (\\<tau> * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2)],\n     [a * exp (\\<tau> * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2) -\n      a * exp (\\<tau> * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2),\n      (b + sqrt (b\\<^sup>2 + 4 * a)) *\n      exp (\\<tau> * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2) /\n      2 -\n      (b - sqrt (b\\<^sup>2 + 4 * a)) *\n      exp (\\<tau> * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2) /\n      2]]) *\\<^sub>V\n                                     s')) \\<longrightarrow>\n                              0 \\<le> ((1 /\n  sqrt (b\\<^sup>2 + a * 4)) *\\<^sub>R\n mtx [[(b + sqrt (b\\<^sup>2 + 4 * a)) *\n       exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2) /\n       2 -\n       (b - sqrt (b\\<^sup>2 + 4 * a)) *\n       exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2) /\n       2,\n       exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2) -\n       exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2)],\n      [a * exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2) -\n       a * exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2),\n       (b + sqrt (b\\<^sup>2 + 4 * a)) *\n       exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2) /\n       2 -\n       (b - sqrt (b\\<^sup>2 + 4 * a)) *\n       exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2) /\n       2]]) *\\<^sub>V\ns' $\n1))", "unfolding sq_mtx_scaleR_eq UNIV_2 sq_mtx_vec_mult_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>0 < b\\<^sup>2 + a * 4; a < 0; b \\<le> 0\\<rbrakk>\n    \\<Longrightarrow> (\\<exists>x. 0 \\<le> x $ 1) \\<longrightarrow>\n                      (\\<forall>s'.\n                          0 < s' $ 1 \\<and> s' $ 2 = 0 \\<longrightarrow>\n                          (\\<forall>t\\<ge>0.\n                              (\\<forall>\\<tau>.\n                                  0 \\<le> \\<tau> \\<and>\n                                  \\<tau> \\<le> t \\<longrightarrow>\n                                  G (\\<chi>i.\n  \\<Sum>j\\<in>insert 1 (skip 2).\n    to_mtx\n     (\\<chi>i j.\n         (1 / sqrt (b\\<^sup>2 + a * 4)) *\\<^sub>R\n         mtx [[(b + sqrt (b\\<^sup>2 + 4 * a)) *\n               exp (\\<tau> * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2) /\n               2 -\n               (b - sqrt (b\\<^sup>2 + 4 * a)) *\n               exp (\\<tau> * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2) /\n               2,\n               exp (\\<tau> * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2) -\n               exp (\\<tau> * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2)],\n              [a * exp (\\<tau> * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2) -\n               a * exp (\\<tau> * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2),\n               (b + sqrt (b\\<^sup>2 + 4 * a)) *\n               exp (\\<tau> * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2) /\n               2 -\n               (b - sqrt (b\\<^sup>2 + 4 * a)) *\n               exp (\\<tau> * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2) /\n               2]] $$\n         i $\n         j) $$\n    i $\n    j *\n    s' $ j)) \\<longrightarrow>\n                              0 \\<le> (\\<chi>i.\n    \\<Sum>j\\<in>insert 1 (skip 2).\n      to_mtx\n       (\\<chi>i j.\n           (1 / sqrt (b\\<^sup>2 + a * 4)) *\\<^sub>R\n           mtx [[(b + sqrt (b\\<^sup>2 + 4 * a)) *\n                 exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2) /\n                 2 -\n                 (b - sqrt (b\\<^sup>2 + 4 * a)) *\n                 exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2) /\n                 2,\n                 exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2) -\n                 exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2)],\n                [a * exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2) -\n                 a * exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2),\n                 (b + sqrt (b\\<^sup>2 + 4 * a)) *\n                 exp (t * (b + sqrt (b\\<^sup>2 + 4 * a)) / 2) /\n                 2 -\n                 (b - sqrt (b\\<^sup>2 + 4 * a)) *\n                 exp (t * (b - sqrt (b\\<^sup>2 + 4 * a)) / 2) /\n                 2]] $$\n           i $\n           j) $$\n      i $\n      j *\n      s' $ j) $\n1))", "by (clarsimp simp: overdamped_door_arith)"], ["", "no_notation mtx_hOsc (\"A\")\n        and mtx_chB_hOsc (\"P\")"], ["", "subsubsection \\<open> Flow of non-diagonalisable matrix. \\<close>"], ["", "abbreviation mtx_cnst_acc :: \"3 sq_mtx\" (\"K\")\n  where \"K \\<equiv> mtx (\n  [0,1,0] #\n  [0,0,1] # \n  [0,0,0] # [])\""], ["", "lemma pow2_scaleR_mtx_cnst_acc: \"(t *\\<^sub>R K)\\<^sup>2 = mtx (\n  [0,0,t\\<^sup>2] #\n  [0,0,0] # \n  [0,0,0] # [])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (t *\\<^sub>R K)\\<^sup>2 = mtx [[0, 0, t\\<^sup>2], [0, 0, 0], [0, 0, 0]]", "unfolding power2_eq_square"], ["proof (prove)\ngoal (1 subgoal):\n 1. t *\\<^sub>R K * t *\\<^sub>R K =\n    mtx [[0, 0, t * t], [0, 0, 0], [0, 0, 0]]", "apply(subst sq_mtx_eq_iff)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i j.\n       (t *\\<^sub>R K * t *\\<^sub>R K) $$ i $ j =\n       mtx [[0, 0, t * t], [0, 0, 0], [0, 0, 0]] $$ i $ j", "unfolding sq_mtx_times_eq UNIV_3"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i j.\n       to_mtx\n        (\\<chi>i j.\n            \\<Sum>k\\<in>insert 1 (insert 2 (skip 3)).\n              (t *\\<^sub>R K) $$ i $ k * (t *\\<^sub>R K) $$ k $ j) $$\n       i $\n       j =\n       mtx [[0, 0, t * t], [0, 0, 0], [0, 0, 0]] $$ i $ j", "by auto"], ["", "lemma powN_scaleR_mtx_cnst_acc: \"n > 2 \\<Longrightarrow> (t *\\<^sub>R K)^n = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 < n \\<Longrightarrow> (t *\\<^sub>R K) ^ n = 0", "apply(induct n, simp, case_tac \"n \\<le> 2\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n.\n       \\<lbrakk>2 < n \\<Longrightarrow> (t *\\<^sub>R K) ^ n = 0; 2 < Suc n;\n        n \\<le> 2\\<rbrakk>\n       \\<Longrightarrow> (t *\\<^sub>R K) ^ Suc n = 0\n 2. \\<And>n.\n       \\<lbrakk>2 < n \\<Longrightarrow> (t *\\<^sub>R K) ^ n = 0; 2 < Suc n;\n        \\<not> n \\<le> 2\\<rbrakk>\n       \\<Longrightarrow> (t *\\<^sub>R K) ^ Suc n = 0", "apply(subgoal_tac \"n = 2\", erule ssubst)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n.\n       \\<lbrakk>2 < n \\<Longrightarrow> (t *\\<^sub>R K) ^ n = 0; 2 < Suc n;\n        n \\<le> 2\\<rbrakk>\n       \\<Longrightarrow> (t *\\<^sub>R K) ^ Suc 2 = 0\n 2. \\<And>n.\n       \\<lbrakk>2 < n \\<Longrightarrow> (t *\\<^sub>R K) ^ n = 0; 2 < Suc n;\n        n \\<le> 2\\<rbrakk>\n       \\<Longrightarrow> n = 2\n 3. \\<And>n.\n       \\<lbrakk>2 < n \\<Longrightarrow> (t *\\<^sub>R K) ^ n = 0; 2 < Suc n;\n        \\<not> n \\<le> 2\\<rbrakk>\n       \\<Longrightarrow> (t *\\<^sub>R K) ^ Suc n = 0", "unfolding power_Suc2 pow2_scaleR_mtx_cnst_acc sq_mtx_times_eq UNIV_3"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>n.\n       \\<lbrakk>2 < n \\<Longrightarrow> (t *\\<^sub>R K) ^ n = 0; 2 < Suc n;\n        n \\<le> 2\\<rbrakk>\n       \\<Longrightarrow> to_mtx\n                          (\\<chi>i j.\n                              \\<Sum>k\\<in>insert 1 (insert 2 (skip 3)).\n                                mtx [[0, 0, t\\<^sup>2], [0, 0, 0],\n                                     [0, 0, 0]] $$\n                                i $\n                                k *\n                                (t *\\<^sub>R K) $$ k $ j) =\n                         0\n 2. \\<And>n.\n       \\<lbrakk>2 < n \\<Longrightarrow> (t *\\<^sub>R K) ^ n = 0; 2 < Suc n;\n        n \\<le> 2\\<rbrakk>\n       \\<Longrightarrow> n = 2\n 3. \\<And>n.\n       \\<lbrakk>2 < n \\<Longrightarrow> (t *\\<^sub>R K) ^ n = 0; 2 < Suc n;\n        \\<not> n \\<le> 2\\<rbrakk>\n       \\<Longrightarrow> to_mtx\n                          (\\<chi>i j.\n                              \\<Sum>k\\<in>insert 1 (insert 2 (skip 3)).\n                                ((t *\\<^sub>R K) ^ n) $$ i $ k *\n                                (t *\\<^sub>R K) $$ k $ j) =\n                         0", "by (auto simp: sq_mtx_eq_iff)"], ["", "lemma exp_mtx_cnst_acc: \"exp (t *\\<^sub>R K) = ((t *\\<^sub>R K)\\<^sup>2/\\<^sub>R 2) + (t *\\<^sub>R K) + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (t *\\<^sub>R K) =\n    (t *\\<^sub>R K)\\<^sup>2 /\\<^sub>R 2 + t *\\<^sub>R K + 1", "unfolding exp_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>n. (t *\\<^sub>R K) ^ n /\\<^sub>R fact n) =\n    (t *\\<^sub>R K)\\<^sup>2 /\\<^sub>R 2 + t *\\<^sub>R K + 1", "apply(subst suminf_eq_sum[of 2])"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>n.\n       2 < n \\<Longrightarrow> (t *\\<^sub>R K) ^ n /\\<^sub>R fact n = 0\n 2. (\\<Sum>n\\<le>2. (t *\\<^sub>R K) ^ n /\\<^sub>R fact n) =\n    (t *\\<^sub>R K)\\<^sup>2 /\\<^sub>R 2 + t *\\<^sub>R K + 1", "using powN_scaleR_mtx_cnst_acc"], ["proof (prove)\nusing this:\n  2 < ?n \\<Longrightarrow> (?t *\\<^sub>R K) ^ ?n = 0\n\ngoal (2 subgoals):\n 1. \\<And>n.\n       2 < n \\<Longrightarrow> (t *\\<^sub>R K) ^ n /\\<^sub>R fact n = 0\n 2. (\\<Sum>n\\<le>2. (t *\\<^sub>R K) ^ n /\\<^sub>R fact n) =\n    (t *\\<^sub>R K)\\<^sup>2 /\\<^sub>R 2 + t *\\<^sub>R K + 1", "by (simp_all add: numeral_2_eq_2)"], ["", "lemma exp_mtx_cnst_acc_simps:\n  \"exp (t *\\<^sub>R K) $$ 1 $ 1 = 1\" \"exp (t *\\<^sub>R K) $$ 1 $ 2 = t\" \"exp (t *\\<^sub>R K) $$ 1 $ 3 = t^2/2\"\n  \"exp (t *\\<^sub>R K) $$ 2 $ 1 = 0\" \"exp (t *\\<^sub>R K) $$ 2 $ 2 = 1\" \"exp (t *\\<^sub>R K) $$ 2 $ 3 = t\"\n  \"exp (t *\\<^sub>R K) $$ 3 $ 1 = 0\" \"exp (t *\\<^sub>R K) $$ 3 $ 2 = 0\" \"exp (t *\\<^sub>R K) $$ 3 $ 3 = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((exp (t *\\<^sub>R K) $$ 1 $ 1 = 1 &&&\n      exp (t *\\<^sub>R K) $$ 1 $ 2 = t) &&&\n     exp (t *\\<^sub>R K) $$ 1 $ 3 = t\\<^sup>2 / 2 &&&\n     exp (t *\\<^sub>R K) $$ 2 $ 1 = 0) &&&\n    (exp (t *\\<^sub>R K) $$ 2 $ 2 = 1 &&&\n     exp (t *\\<^sub>R K) $$ 2 $ 3 = t) &&&\n    exp (t *\\<^sub>R K) $$ 3 $ 1 = 0 &&&\n    exp (t *\\<^sub>R K) $$ 3 $ 2 = 0 &&& exp (t *\\<^sub>R K) $$ 3 $ 3 = 1", "unfolding exp_mtx_cnst_acc one_mtx3 pow2_scaleR_mtx_cnst_acc"], ["proof (prove)\ngoal (1 subgoal):\n 1. (((mtx [[0, 0, t\\<^sup>2], [0, 0, 0], [0, 0, 0]] /\\<^sub>R 2 +\n       t *\\<^sub>R K +\n       diag3 1 1 1) $$\n      1 $\n      1 =\n      1 &&&\n      (mtx [[0, 0, t\\<^sup>2], [0, 0, 0], [0, 0, 0]] /\\<^sub>R 2 +\n       t *\\<^sub>R K +\n       diag3 1 1 1) $$\n      1 $\n      2 =\n      t) &&&\n     (mtx [[0, 0, t\\<^sup>2], [0, 0, 0], [0, 0, 0]] /\\<^sub>R 2 +\n      t *\\<^sub>R K +\n      diag3 1 1 1) $$\n     1 $\n     3 =\n     t\\<^sup>2 / 2 &&&\n     (mtx [[0, 0, t\\<^sup>2], [0, 0, 0], [0, 0, 0]] /\\<^sub>R 2 +\n      t *\\<^sub>R K +\n      diag3 1 1 1) $$\n     2 $\n     1 =\n     0) &&&\n    ((mtx [[0, 0, t\\<^sup>2], [0, 0, 0], [0, 0, 0]] /\\<^sub>R 2 +\n      t *\\<^sub>R K +\n      diag3 1 1 1) $$\n     2 $\n     2 =\n     1 &&&\n     (mtx [[0, 0, t\\<^sup>2], [0, 0, 0], [0, 0, 0]] /\\<^sub>R 2 +\n      t *\\<^sub>R K +\n      diag3 1 1 1) $$\n     2 $\n     3 =\n     t) &&&\n    (mtx [[0, 0, t\\<^sup>2], [0, 0, 0], [0, 0, 0]] /\\<^sub>R 2 +\n     t *\\<^sub>R K +\n     diag3 1 1 1) $$\n    3 $\n    1 =\n    0 &&&\n    (mtx [[0, 0, t\\<^sup>2], [0, 0, 0], [0, 0, 0]] /\\<^sub>R 2 +\n     t *\\<^sub>R K +\n     diag3 1 1 1) $$\n    3 $\n    2 =\n    0 &&&\n    (mtx [[0, 0, t\\<^sup>2], [0, 0, 0], [0, 0, 0]] /\\<^sub>R 2 +\n     t *\\<^sub>R K +\n     diag3 1 1 1) $$\n    3 $\n    3 =\n    1", "by simp_all"], ["", "lemma exp_mtx_cnst_acc_vec_mult_eq: \"exp (t *\\<^sub>R K) *\\<^sub>V s = \n  vector [s$3 * t^2/2 + s$2 * t + s$1, s$3 * t + s$2, s$3]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. exp (t *\\<^sub>R K) *\\<^sub>V s =\n    vector\n     [s $ 3 * t\\<^sup>2 / 2 + s $ 2 * t + s $ 1, s $ 3 * t + s $ 2, s $ 3]", "apply(subst exp_mtx_cnst_acc, subst pow2_scaleR_mtx_cnst_acc)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (mtx [[0, 0, t\\<^sup>2], [0, 0, 0], [0, 0, 0]] /\\<^sub>R 2 +\n     t *\\<^sub>R K +\n     1) *\\<^sub>V\n    s =\n    vector\n     [s $ 3 * t\\<^sup>2 / 2 + s $ 2 * t + s $ 1, s $ 3 * t + s $ 2, s $ 3]", "apply(simp add: sq_mtx_vec_mult_eq vector_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>i.\n        \\<Sum>j\\<in>UNIV.\n          ((if i = 1\n            then vec_lambda\n                  ((\\<lambda>x. 0)(3 := t\\<^sup>2, 2 := 0, 1 := 0))\n            else ((\\<lambda>x. 0)\n                  (3 := vec_lambda\n                         ((\\<lambda>x. 0)(3 := 0, 2 := 0, 1 := 0)),\n                   2 := vec_lambda\n                         ((\\<lambda>x. 0)(3 := 0, 2 := 0, 1 := 0))))\n                  i) $\n           j /\n           2 +\n           t *\n           (if i = 1\n            then vec_lambda ((\\<lambda>x. 0)(3 := 0, 2 := 1, 1 := 0))\n            else ((\\<lambda>x. 0)\n                  (3 := vec_lambda\n                         ((\\<lambda>x. 0)(3 := 0, 2 := 0, 1 := 0)),\n                   2 := vec_lambda\n                         ((\\<lambda>x. 0)(3 := 1, 2 := 0, 1 := 0))))\n                  i) $\n           j +\n           1 $$ i $ j) *\n          s $ j) =\n    (\\<lambda>i.\n        if i = 1 then s $ 3 * t\\<^sup>2 / 2 + s $ 2 * t + s $ 1\n        else ((\\<lambda>x. 0)(3 := s $ 3, 2 := s $ 3 * t + s $ 2)) i)", "unfolding UNIV_3"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>i.\n        \\<Sum>j\\<in>insert 1 (insert 2 (skip 3)).\n          ((if i = 1\n            then vec_lambda\n                  ((\\<lambda>x. 0)(3 := t\\<^sup>2, 2 := 0, 1 := 0))\n            else ((\\<lambda>x. 0)\n                  (3 := vec_lambda\n                         ((\\<lambda>x. 0)(3 := 0, 2 := 0, 1 := 0)),\n                   2 := vec_lambda\n                         ((\\<lambda>x. 0)(3 := 0, 2 := 0, 1 := 0))))\n                  i) $\n           j /\n           2 +\n           t *\n           (if i = 1\n            then vec_lambda ((\\<lambda>x. 0)(3 := 0, 2 := 1, 1 := 0))\n            else ((\\<lambda>x. 0)\n                  (3 := vec_lambda\n                         ((\\<lambda>x. 0)(3 := 0, 2 := 0, 1 := 0)),\n                   2 := vec_lambda\n                         ((\\<lambda>x. 0)(3 := 1, 2 := 0, 1 := 0))))\n                  i) $\n           j +\n           1 $$ i $ j) *\n          s $ j) =\n    (\\<lambda>i.\n        if i = 1 then s $ 3 * t\\<^sup>2 / 2 + s $ 2 * t + s $ 1\n        else ((\\<lambda>x. 0)(3 := s $ 3, 2 := s $ 3 * t + s $ 2)) i)", "by (simp add: fun_eq_iff)"], ["", "lemma local_flow_mtx_cnst_acc:\n  \"local_flow ((*\\<^sub>V) K) UNIV UNIV (\\<lambda>t s. ((t *\\<^sub>R K)\\<^sup>2/\\<^sub>R 2 + (t *\\<^sub>R K) + 1) *\\<^sub>V s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local_flow ((*\\<^sub>V) K) UNIV UNIV\n     (\\<lambda>t.\n         (*\\<^sub>V)\n          ((t *\\<^sub>R K)\\<^sup>2 /\\<^sub>R 2 + t *\\<^sub>R K + 1))", "using local_flow_sq_mtx_linear[of K]"], ["proof (prove)\nusing this:\n  local_flow ((*\\<^sub>V) K) UNIV UNIV\n   (\\<lambda>t. (*\\<^sub>V) (exp (t *\\<^sub>R K)))\n\ngoal (1 subgoal):\n 1. local_flow ((*\\<^sub>V) K) UNIV UNIV\n     (\\<lambda>t.\n         (*\\<^sub>V)\n          ((t *\\<^sub>R K)\\<^sup>2 /\\<^sub>R 2 + t *\\<^sub>R K + 1))", "unfolding exp_mtx_cnst_acc"], ["proof (prove)\nusing this:\n  local_flow ((*\\<^sub>V) K) UNIV UNIV\n   (\\<lambda>t.\n       (*\\<^sub>V)\n        ((t *\\<^sub>R K)\\<^sup>2 /\\<^sub>R 2 + t *\\<^sub>R K + 1))\n\ngoal (1 subgoal):\n 1. local_flow ((*\\<^sub>V) K) UNIV UNIV\n     (\\<lambda>t.\n         (*\\<^sub>V)\n          ((t *\\<^sub>R K)\\<^sup>2 /\\<^sub>R 2 + t *\\<^sub>R K + 1))", "."], ["", "lemma docking_station_arith:\n  assumes \"(d::real) > x\" and \"v > 0\"\n  shows \"(v = v\\<^sup>2 * t / (2 * d - 2 * x)) \\<longleftrightarrow> (v * t - v\\<^sup>2 * t\\<^sup>2 / (4 * d - 4 * x) + x = d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (v = v\\<^sup>2 * t / (2 * d - 2 * x)) =\n    (v * t - v\\<^sup>2 * t\\<^sup>2 / (4 * d - 4 * x) + x = d)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. v = v\\<^sup>2 * t / (2 * d - 2 * x) \\<Longrightarrow>\n    v * t - v\\<^sup>2 * t\\<^sup>2 / (4 * d - 4 * x) + x = d\n 2. v * t - v\\<^sup>2 * t\\<^sup>2 / (4 * d - 4 * x) + x =\n    d \\<Longrightarrow>\n    v = v\\<^sup>2 * t / (2 * d - 2 * x)", "assume \"v = v\\<^sup>2 * t / (2 * d - 2 * x)\""], ["proof (state)\nthis:\n  v = v\\<^sup>2 * t / (2 * d - 2 * x)\n\ngoal (2 subgoals):\n 1. v = v\\<^sup>2 * t / (2 * d - 2 * x) \\<Longrightarrow>\n    v * t - v\\<^sup>2 * t\\<^sup>2 / (4 * d - 4 * x) + x = d\n 2. v * t - v\\<^sup>2 * t\\<^sup>2 / (4 * d - 4 * x) + x =\n    d \\<Longrightarrow>\n    v = v\\<^sup>2 * t / (2 * d - 2 * x)", "hence \"v * t = 2 * (d - x)\""], ["proof (prove)\nusing this:\n  v = v\\<^sup>2 * t / (2 * d - 2 * x)\n\ngoal (1 subgoal):\n 1. v * t = 2 * (d - x)", "using assms"], ["proof (prove)\nusing this:\n  v = v\\<^sup>2 * t / (2 * d - 2 * x)\n  x < d\n  0 < v\n\ngoal (1 subgoal):\n 1. v * t = 2 * (d - x)", "by (simp add: eq_divide_eq power2_eq_square)"], ["proof (state)\nthis:\n  v * t = 2 * (d - x)\n\ngoal (2 subgoals):\n 1. v = v\\<^sup>2 * t / (2 * d - 2 * x) \\<Longrightarrow>\n    v * t - v\\<^sup>2 * t\\<^sup>2 / (4 * d - 4 * x) + x = d\n 2. v * t - v\\<^sup>2 * t\\<^sup>2 / (4 * d - 4 * x) + x =\n    d \\<Longrightarrow>\n    v = v\\<^sup>2 * t / (2 * d - 2 * x)", "hence \"v * t - v\\<^sup>2 * t\\<^sup>2 / (4 * d - 4 * x) + x = 2 * (d - x) - 4 * (d - x)\\<^sup>2 / (4 * (d - x)) + x\""], ["proof (prove)\nusing this:\n  v * t = 2 * (d - x)\n\ngoal (1 subgoal):\n 1. v * t - v\\<^sup>2 * t\\<^sup>2 / (4 * d - 4 * x) + x =\n    2 * (d - x) - 4 * (d - x)\\<^sup>2 / (4 * (d - x)) + x", "apply(subst power_mult_distrib[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. v * t = 2 * (d - x) \\<Longrightarrow>\n    v * t - (v * t)\\<^sup>2 / (4 * d - 4 * x) + x =\n    2 * (d - x) - 4 * (d - x)\\<^sup>2 / (4 * (d - x)) + x", "by (erule ssubst, subst power_mult_distrib, simp)"], ["proof (state)\nthis:\n  v * t - v\\<^sup>2 * t\\<^sup>2 / (4 * d - 4 * x) + x =\n  2 * (d - x) - 4 * (d - x)\\<^sup>2 / (4 * (d - x)) + x\n\ngoal (2 subgoals):\n 1. v = v\\<^sup>2 * t / (2 * d - 2 * x) \\<Longrightarrow>\n    v * t - v\\<^sup>2 * t\\<^sup>2 / (4 * d - 4 * x) + x = d\n 2. v * t - v\\<^sup>2 * t\\<^sup>2 / (4 * d - 4 * x) + x =\n    d \\<Longrightarrow>\n    v = v\\<^sup>2 * t / (2 * d - 2 * x)", "also"], ["proof (state)\nthis:\n  v * t - v\\<^sup>2 * t\\<^sup>2 / (4 * d - 4 * x) + x =\n  2 * (d - x) - 4 * (d - x)\\<^sup>2 / (4 * (d - x)) + x\n\ngoal (2 subgoals):\n 1. v = v\\<^sup>2 * t / (2 * d - 2 * x) \\<Longrightarrow>\n    v * t - v\\<^sup>2 * t\\<^sup>2 / (4 * d - 4 * x) + x = d\n 2. v * t - v\\<^sup>2 * t\\<^sup>2 / (4 * d - 4 * x) + x =\n    d \\<Longrightarrow>\n    v = v\\<^sup>2 * t / (2 * d - 2 * x)", "have \"... = d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * (d - x) - 4 * (d - x)\\<^sup>2 / (4 * (d - x)) + x = d", "apply(simp only: mult_divide_mult_cancel_left_if)"], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * (d - x) - (if 4 = 0 then 0 else (d - x)\\<^sup>2 / (d - x)) + x = d", "using assms"], ["proof (prove)\nusing this:\n  x < d\n  0 < v\n\ngoal (1 subgoal):\n 1. 2 * (d - x) - (if 4 = 0 then 0 else (d - x)\\<^sup>2 / (d - x)) + x = d", "by (auto simp: power2_eq_square)"], ["proof (state)\nthis:\n  2 * (d - x) - 4 * (d - x)\\<^sup>2 / (4 * (d - x)) + x = d\n\ngoal (2 subgoals):\n 1. v = v\\<^sup>2 * t / (2 * d - 2 * x) \\<Longrightarrow>\n    v * t - v\\<^sup>2 * t\\<^sup>2 / (4 * d - 4 * x) + x = d\n 2. v * t - v\\<^sup>2 * t\\<^sup>2 / (4 * d - 4 * x) + x =\n    d \\<Longrightarrow>\n    v = v\\<^sup>2 * t / (2 * d - 2 * x)", "finally"], ["proof (chain)\npicking this:\n  v * t - v\\<^sup>2 * t\\<^sup>2 / (4 * d - 4 * x) + x = d", "show \"v * t - v\\<^sup>2 * t\\<^sup>2 / (4 * d - 4 * x) + x = d\""], ["proof (prove)\nusing this:\n  v * t - v\\<^sup>2 * t\\<^sup>2 / (4 * d - 4 * x) + x = d\n\ngoal (1 subgoal):\n 1. v * t - v\\<^sup>2 * t\\<^sup>2 / (4 * d - 4 * x) + x = d", "."], ["proof (state)\nthis:\n  v * t - v\\<^sup>2 * t\\<^sup>2 / (4 * d - 4 * x) + x = d\n\ngoal (1 subgoal):\n 1. v * t - v\\<^sup>2 * t\\<^sup>2 / (4 * d - 4 * x) + x =\n    d \\<Longrightarrow>\n    v = v\\<^sup>2 * t / (2 * d - 2 * x)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. v * t - v\\<^sup>2 * t\\<^sup>2 / (4 * d - 4 * x) + x =\n    d \\<Longrightarrow>\n    v = v\\<^sup>2 * t / (2 * d - 2 * x)", "assume \"v * t - v\\<^sup>2 * t\\<^sup>2 / (4 * d - 4 * x) + x = d\""], ["proof (state)\nthis:\n  v * t - v\\<^sup>2 * t\\<^sup>2 / (4 * d - 4 * x) + x = d\n\ngoal (1 subgoal):\n 1. v * t - v\\<^sup>2 * t\\<^sup>2 / (4 * d - 4 * x) + x =\n    d \\<Longrightarrow>\n    v = v\\<^sup>2 * t / (2 * d - 2 * x)", "hence \"0 = v\\<^sup>2 * t\\<^sup>2 / (4 * (d - x)) + (d - x) - v * t\""], ["proof (prove)\nusing this:\n  v * t - v\\<^sup>2 * t\\<^sup>2 / (4 * d - 4 * x) + x = d\n\ngoal (1 subgoal):\n 1. 0 = v\\<^sup>2 * t\\<^sup>2 / (4 * (d - x)) + (d - x) - v * t", "by auto"], ["proof (state)\nthis:\n  0 = v\\<^sup>2 * t\\<^sup>2 / (4 * (d - x)) + (d - x) - v * t\n\ngoal (1 subgoal):\n 1. v * t - v\\<^sup>2 * t\\<^sup>2 / (4 * d - 4 * x) + x =\n    d \\<Longrightarrow>\n    v = v\\<^sup>2 * t / (2 * d - 2 * x)", "hence \"0 = (4 * (d - x)) * (v\\<^sup>2 * t\\<^sup>2 / (4 * (d - x)) + (d - x) - v * t)\""], ["proof (prove)\nusing this:\n  0 = v\\<^sup>2 * t\\<^sup>2 / (4 * (d - x)) + (d - x) - v * t\n\ngoal (1 subgoal):\n 1. 0 =\n    4 * (d - x) * (v\\<^sup>2 * t\\<^sup>2 / (4 * (d - x)) + (d - x) - v * t)", "by auto"], ["proof (state)\nthis:\n  0 =\n  4 * (d - x) * (v\\<^sup>2 * t\\<^sup>2 / (4 * (d - x)) + (d - x) - v * t)\n\ngoal (1 subgoal):\n 1. v * t - v\\<^sup>2 * t\\<^sup>2 / (4 * d - 4 * x) + x =\n    d \\<Longrightarrow>\n    v = v\\<^sup>2 * t / (2 * d - 2 * x)", "also"], ["proof (state)\nthis:\n  0 =\n  4 * (d - x) * (v\\<^sup>2 * t\\<^sup>2 / (4 * (d - x)) + (d - x) - v * t)\n\ngoal (1 subgoal):\n 1. v * t - v\\<^sup>2 * t\\<^sup>2 / (4 * d - 4 * x) + x =\n    d \\<Longrightarrow>\n    v = v\\<^sup>2 * t / (2 * d - 2 * x)", "have \"... = v\\<^sup>2 * t\\<^sup>2 + 4 * (d - x)\\<^sup>2  - (4 * (d - x)) * (v * t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 4 * (d - x) *\n    (v\\<^sup>2 * t\\<^sup>2 / (4 * (d - x)) + (d - x) - v * t) =\n    v\\<^sup>2 * t\\<^sup>2 + 4 * (d - x)\\<^sup>2 - 4 * (d - x) * (v * t)", "using assms"], ["proof (prove)\nusing this:\n  x < d\n  0 < v\n\ngoal (1 subgoal):\n 1. 4 * (d - x) *\n    (v\\<^sup>2 * t\\<^sup>2 / (4 * (d - x)) + (d - x) - v * t) =\n    v\\<^sup>2 * t\\<^sup>2 + 4 * (d - x)\\<^sup>2 - 4 * (d - x) * (v * t)", "apply(simp add: distrib_left right_diff_distrib)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x < d; 0 < v\\<rbrakk>\n    \\<Longrightarrow> (4 * d - 4 * x) * d - (4 * d - 4 * x) * x =\n                      4 * (d - x)\\<^sup>2", "apply(subst right_diff_distrib[symmetric])+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x < d; 0 < v\\<rbrakk>\n    \\<Longrightarrow> 4 * (d - x) * (d - x) = 4 * (d - x)\\<^sup>2", "by (simp add: power2_eq_square)"], ["proof (state)\nthis:\n  4 * (d - x) * (v\\<^sup>2 * t\\<^sup>2 / (4 * (d - x)) + (d - x) - v * t) =\n  v\\<^sup>2 * t\\<^sup>2 + 4 * (d - x)\\<^sup>2 - 4 * (d - x) * (v * t)\n\ngoal (1 subgoal):\n 1. v * t - v\\<^sup>2 * t\\<^sup>2 / (4 * d - 4 * x) + x =\n    d \\<Longrightarrow>\n    v = v\\<^sup>2 * t / (2 * d - 2 * x)", "also"], ["proof (state)\nthis:\n  4 * (d - x) * (v\\<^sup>2 * t\\<^sup>2 / (4 * (d - x)) + (d - x) - v * t) =\n  v\\<^sup>2 * t\\<^sup>2 + 4 * (d - x)\\<^sup>2 - 4 * (d - x) * (v * t)\n\ngoal (1 subgoal):\n 1. v * t - v\\<^sup>2 * t\\<^sup>2 / (4 * d - 4 * x) + x =\n    d \\<Longrightarrow>\n    v = v\\<^sup>2 * t / (2 * d - 2 * x)", "have \"... = (v * t - 2 * (d - x))\\<^sup>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. v\\<^sup>2 * t\\<^sup>2 + 4 * (d - x)\\<^sup>2 - 4 * (d - x) * (v * t) =\n    (v * t - 2 * (d - x))\\<^sup>2", "by (simp only: power2_diff, auto simp: field_simps power2_diff)"], ["proof (state)\nthis:\n  v\\<^sup>2 * t\\<^sup>2 + 4 * (d - x)\\<^sup>2 - 4 * (d - x) * (v * t) =\n  (v * t - 2 * (d - x))\\<^sup>2\n\ngoal (1 subgoal):\n 1. v * t - v\\<^sup>2 * t\\<^sup>2 / (4 * d - 4 * x) + x =\n    d \\<Longrightarrow>\n    v = v\\<^sup>2 * t / (2 * d - 2 * x)", "finally"], ["proof (chain)\npicking this:\n  0 = (v * t - 2 * (d - x))\\<^sup>2", "have \"0 = (v * t - 2 * (d - x))\\<^sup>2\""], ["proof (prove)\nusing this:\n  0 = (v * t - 2 * (d - x))\\<^sup>2\n\ngoal (1 subgoal):\n 1. 0 = (v * t - 2 * (d - x))\\<^sup>2", "."], ["proof (state)\nthis:\n  0 = (v * t - 2 * (d - x))\\<^sup>2\n\ngoal (1 subgoal):\n 1. v * t - v\\<^sup>2 * t\\<^sup>2 / (4 * d - 4 * x) + x =\n    d \\<Longrightarrow>\n    v = v\\<^sup>2 * t / (2 * d - 2 * x)", "hence \"v * t = 2 * (d - x)\""], ["proof (prove)\nusing this:\n  0 = (v * t - 2 * (d - x))\\<^sup>2\n\ngoal (1 subgoal):\n 1. v * t = 2 * (d - x)", "by auto"], ["proof (state)\nthis:\n  v * t = 2 * (d - x)\n\ngoal (1 subgoal):\n 1. v * t - v\\<^sup>2 * t\\<^sup>2 / (4 * d - 4 * x) + x =\n    d \\<Longrightarrow>\n    v = v\\<^sup>2 * t / (2 * d - 2 * x)", "thus \"v = v\\<^sup>2 * t / (2 * d - 2 * x)\""], ["proof (prove)\nusing this:\n  v * t = 2 * (d - x)\n\ngoal (1 subgoal):\n 1. v = v\\<^sup>2 * t / (2 * d - 2 * x)", "apply(subst power2_eq_square, subst mult.assoc)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>v * t = 2 * (d - x); v * t = 2 * (d - x)\\<rbrakk>\n    \\<Longrightarrow> v = v * (v * t) / (2 * d - 2 * x)", "apply(erule ssubst, subst right_diff_distrib[symmetric])"], ["proof (prove)\ngoal (1 subgoal):\n 1. v * t = 2 * (d - x) \\<Longrightarrow>\n    v = v * (2 * (d - x)) / (2 * (d - x))", "using assms"], ["proof (prove)\nusing this:\n  x < d\n  0 < v\n\ngoal (1 subgoal):\n 1. v * t = 2 * (d - x) \\<Longrightarrow>\n    v = v * (2 * (d - x)) / (2 * (d - x))", "by auto"], ["proof (state)\nthis:\n  v = v\\<^sup>2 * t / (2 * d - 2 * x)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma docking_station:\n  assumes \"d > x\\<^sub>0\" and \"v\\<^sub>0 > 0\"\n  shows \"PRE (\\<lambda>s. s$1 = x\\<^sub>0 \\<and> s$2 = v\\<^sub>0)\n  HP ((3 ::= (\\<lambda>s. -(v\\<^sub>0^2/(2*(d-x\\<^sub>0))))); x\\<acute>=(*\\<^sub>V) K & G)\n  POST (\\<lambda>s. s$2 = 0 \\<longleftrightarrow> s$1 = d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. PRE(\\<lambda>s.\n           s $ 1 = x\\<^sub>0 \\<and>\n           s $ 2 =\n           v\\<^sub>0) HP ((3 ::= (\\<lambda>s.\n                                     - (v\\<^sub>0\\<^sup>2 /\n  (2 * (d - x\\<^sub>0))))) ;\n                          x\\<acute>=\\<lambda>t.\n (*\\<^sub>V)\n  K & G on \\<lambda>s.\n              {t. 0 \\<le> t} UNIV @ 0) POST \\<lambda>s.\n         (s $ 2 = 0) = (s $ 1 = d)", "apply(clarsimp simp: le_fun_def local_flow.fbox_g_ode_subset[OF local_flow_sq_mtx_linear[of K]])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x t.\n       \\<lbrakk>x\\<^sub>0 = x $ 1; v\\<^sub>0 = x $ 2; 0 \\<le> t;\n        \\<forall>\\<tau>.\n           0 \\<le> \\<tau> \\<and> \\<tau> \\<le> t \\<longrightarrow>\n           G (exp (\\<tau> *\\<^sub>R K) *\\<^sub>V\n              (\\<chi>j.\n                  if j = 3 then - ((x $ 2)\\<^sup>2 / (2 * d - 2 * x $ 1))\n                  else x $ j))\\<rbrakk>\n       \\<Longrightarrow> (exp (t *\\<^sub>R K) *\\<^sub>V\n                          (\\<chi>j.\n                              if j = 3\n                              then - ((x $ 2)\\<^sup>2 / (2 * d - 2 * x $ 1))\n                              else x $ j) $\n                          2 =\n                          0) =\n                         (exp (t *\\<^sub>R K) *\\<^sub>V\n                          (\\<chi>j.\n                              if j = 3\n                              then - ((x $ 2)\\<^sup>2 / (2 * d - 2 * x $ 1))\n                              else x $ j) $\n                          1 =\n                          d)", "unfolding exp_mtx_cnst_acc_vec_mult_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x t.\n       \\<lbrakk>x\\<^sub>0 = x $ 1; v\\<^sub>0 = x $ 2; 0 \\<le> t;\n        \\<forall>\\<tau>.\n           0 \\<le> \\<tau> \\<and> \\<tau> \\<le> t \\<longrightarrow>\n           G (vector\n               [(\\<chi>j.\n                    if j = 3 then - ((x $ 2)\\<^sup>2 / (2 * d - 2 * x $ 1))\n                    else x $ j) $\n                3 *\n                \\<tau>\\<^sup>2 /\n                2 +\n                (\\<chi>j.\n                    if j = 3 then - ((x $ 2)\\<^sup>2 / (2 * d - 2 * x $ 1))\n                    else x $ j) $\n                2 *\n                \\<tau> +\n                (\\<chi>j.\n                    if j = 3 then - ((x $ 2)\\<^sup>2 / (2 * d - 2 * x $ 1))\n                    else x $ j) $\n                1,\n                (\\<chi>j.\n                    if j = 3 then - ((x $ 2)\\<^sup>2 / (2 * d - 2 * x $ 1))\n                    else x $ j) $\n                3 *\n                \\<tau> +\n                (\\<chi>j.\n                    if j = 3 then - ((x $ 2)\\<^sup>2 / (2 * d - 2 * x $ 1))\n                    else x $ j) $\n                2,\n                (\\<chi>j.\n                    if j = 3 then - ((x $ 2)\\<^sup>2 / (2 * d - 2 * x $ 1))\n                    else x $ j) $\n                3])\\<rbrakk>\n       \\<Longrightarrow> (vector\n                           [(\\<chi>j.\n                                if j = 3\n                                then - ((x $ 2)\\<^sup>2 /\n  (2 * d - 2 * x $ 1))\n                                else x $ j) $\n                            3 *\n                            t\\<^sup>2 /\n                            2 +\n                            (\\<chi>j.\n                                if j = 3\n                                then - ((x $ 2)\\<^sup>2 /\n  (2 * d - 2 * x $ 1))\n                                else x $ j) $\n                            2 *\n                            t +\n                            (\\<chi>j.\n                                if j = 3\n                                then - ((x $ 2)\\<^sup>2 /\n  (2 * d - 2 * x $ 1))\n                                else x $ j) $\n                            1,\n                            (\\<chi>j.\n                                if j = 3\n                                then - ((x $ 2)\\<^sup>2 /\n  (2 * d - 2 * x $ 1))\n                                else x $ j) $\n                            3 *\n                            t +\n                            (\\<chi>j.\n                                if j = 3\n                                then - ((x $ 2)\\<^sup>2 /\n  (2 * d - 2 * x $ 1))\n                                else x $ j) $\n                            2,\n                            (\\<chi>j.\n                                if j = 3\n                                then - ((x $ 2)\\<^sup>2 /\n  (2 * d - 2 * x $ 1))\n                                else x $ j) $\n                            3] $\n                          2 =\n                          0) =\n                         (vector\n                           [(\\<chi>j.\n                                if j = 3\n                                then - ((x $ 2)\\<^sup>2 /\n  (2 * d - 2 * x $ 1))\n                                else x $ j) $\n                            3 *\n                            t\\<^sup>2 /\n                            2 +\n                            (\\<chi>j.\n                                if j = 3\n                                then - ((x $ 2)\\<^sup>2 /\n  (2 * d - 2 * x $ 1))\n                                else x $ j) $\n                            2 *\n                            t +\n                            (\\<chi>j.\n                                if j = 3\n                                then - ((x $ 2)\\<^sup>2 /\n  (2 * d - 2 * x $ 1))\n                                else x $ j) $\n                            1,\n                            (\\<chi>j.\n                                if j = 3\n                                then - ((x $ 2)\\<^sup>2 /\n  (2 * d - 2 * x $ 1))\n                                else x $ j) $\n                            3 *\n                            t +\n                            (\\<chi>j.\n                                if j = 3\n                                then - ((x $ 2)\\<^sup>2 /\n  (2 * d - 2 * x $ 1))\n                                else x $ j) $\n                            2,\n                            (\\<chi>j.\n                                if j = 3\n                                then - ((x $ 2)\\<^sup>2 /\n  (2 * d - 2 * x $ 1))\n                                else x $ j) $\n                            3] $\n                          1 =\n                          d)", "using assms"], ["proof (prove)\nusing this:\n  x\\<^sub>0 < d\n  0 < v\\<^sub>0\n\ngoal (1 subgoal):\n 1. \\<And>x t.\n       \\<lbrakk>x\\<^sub>0 = x $ 1; v\\<^sub>0 = x $ 2; 0 \\<le> t;\n        \\<forall>\\<tau>.\n           0 \\<le> \\<tau> \\<and> \\<tau> \\<le> t \\<longrightarrow>\n           G (vector\n               [(\\<chi>j.\n                    if j = 3 then - ((x $ 2)\\<^sup>2 / (2 * d - 2 * x $ 1))\n                    else x $ j) $\n                3 *\n                \\<tau>\\<^sup>2 /\n                2 +\n                (\\<chi>j.\n                    if j = 3 then - ((x $ 2)\\<^sup>2 / (2 * d - 2 * x $ 1))\n                    else x $ j) $\n                2 *\n                \\<tau> +\n                (\\<chi>j.\n                    if j = 3 then - ((x $ 2)\\<^sup>2 / (2 * d - 2 * x $ 1))\n                    else x $ j) $\n                1,\n                (\\<chi>j.\n                    if j = 3 then - ((x $ 2)\\<^sup>2 / (2 * d - 2 * x $ 1))\n                    else x $ j) $\n                3 *\n                \\<tau> +\n                (\\<chi>j.\n                    if j = 3 then - ((x $ 2)\\<^sup>2 / (2 * d - 2 * x $ 1))\n                    else x $ j) $\n                2,\n                (\\<chi>j.\n                    if j = 3 then - ((x $ 2)\\<^sup>2 / (2 * d - 2 * x $ 1))\n                    else x $ j) $\n                3])\\<rbrakk>\n       \\<Longrightarrow> (vector\n                           [(\\<chi>j.\n                                if j = 3\n                                then - ((x $ 2)\\<^sup>2 /\n  (2 * d - 2 * x $ 1))\n                                else x $ j) $\n                            3 *\n                            t\\<^sup>2 /\n                            2 +\n                            (\\<chi>j.\n                                if j = 3\n                                then - ((x $ 2)\\<^sup>2 /\n  (2 * d - 2 * x $ 1))\n                                else x $ j) $\n                            2 *\n                            t +\n                            (\\<chi>j.\n                                if j = 3\n                                then - ((x $ 2)\\<^sup>2 /\n  (2 * d - 2 * x $ 1))\n                                else x $ j) $\n                            1,\n                            (\\<chi>j.\n                                if j = 3\n                                then - ((x $ 2)\\<^sup>2 /\n  (2 * d - 2 * x $ 1))\n                                else x $ j) $\n                            3 *\n                            t +\n                            (\\<chi>j.\n                                if j = 3\n                                then - ((x $ 2)\\<^sup>2 /\n  (2 * d - 2 * x $ 1))\n                                else x $ j) $\n                            2,\n                            (\\<chi>j.\n                                if j = 3\n                                then - ((x $ 2)\\<^sup>2 /\n  (2 * d - 2 * x $ 1))\n                                else x $ j) $\n                            3] $\n                          2 =\n                          0) =\n                         (vector\n                           [(\\<chi>j.\n                                if j = 3\n                                then - ((x $ 2)\\<^sup>2 /\n  (2 * d - 2 * x $ 1))\n                                else x $ j) $\n                            3 *\n                            t\\<^sup>2 /\n                            2 +\n                            (\\<chi>j.\n                                if j = 3\n                                then - ((x $ 2)\\<^sup>2 /\n  (2 * d - 2 * x $ 1))\n                                else x $ j) $\n                            2 *\n                            t +\n                            (\\<chi>j.\n                                if j = 3\n                                then - ((x $ 2)\\<^sup>2 /\n  (2 * d - 2 * x $ 1))\n                                else x $ j) $\n                            1,\n                            (\\<chi>j.\n                                if j = 3\n                                then - ((x $ 2)\\<^sup>2 /\n  (2 * d - 2 * x $ 1))\n                                else x $ j) $\n                            3 *\n                            t +\n                            (\\<chi>j.\n                                if j = 3\n                                then - ((x $ 2)\\<^sup>2 /\n  (2 * d - 2 * x $ 1))\n                                else x $ j) $\n                            2,\n                            (\\<chi>j.\n                                if j = 3\n                                then - ((x $ 2)\\<^sup>2 /\n  (2 * d - 2 * x $ 1))\n                                else x $ j) $\n                            3] $\n                          1 =\n                          d)", "by (simp add: docking_station_arith)"], ["", "no_notation mtx_cnst_acc (\"K\")"], ["", "end"]]}