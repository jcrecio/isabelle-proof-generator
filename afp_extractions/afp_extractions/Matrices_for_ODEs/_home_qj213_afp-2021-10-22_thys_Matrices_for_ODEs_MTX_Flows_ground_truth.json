{"file_name": "/home/qj213/afp-2021-10-22/thys/Matrices_for_ODEs/MTX_Flows.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Matrices_for_ODEs", "problem_names": ["lemma continuous_on_matrix_vector_multl:\n  assumes \"matrix_continuous_on T A\"\n  shows \"continuous_on T (\\<lambda>t. A t *v s)\"", "lemma lipschitz_cond_affine:\n  fixes A :: \"real \\<Rightarrow> 'a::real_normed_algebra_1^'n^'m\" and T::\"real set\"\n  defines \"L \\<equiv> Sup {\\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p |t. t \\<in> T}\"\n  assumes \"t \\<in> T\" and \"bdd_above {\\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p |t. t \\<in> T}\"\n  shows \"\\<parallel>A t *v x - A t *v y\\<parallel> \\<le> L * (\\<parallel>x - y\\<parallel>)\"", "lemma local_lipschitz_affine:\n  fixes A :: \"real \\<Rightarrow> 'a::real_normed_algebra_1^'n^'m\"\n  assumes \"open T\" and \"open S\" \n    and Ahyp: \"\\<And>\\<tau> \\<epsilon>. \\<epsilon> > 0 \\<Longrightarrow> \\<tau> \\<in> T \\<Longrightarrow> cball \\<tau> \\<epsilon> \\<subseteq> T \\<Longrightarrow> bdd_above {\\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p |t. t \\<in> cball \\<tau> \\<epsilon>}\"\n  shows \"local_lipschitz T S (\\<lambda>t s. A t *v s + B t)\"", "lemma picard_lindeloef_affine:\n  fixes A :: \"real \\<Rightarrow> 'a::{banach,real_normed_algebra_1,heine_borel}^'n^'n\"\n  assumes Ahyp: \"matrix_continuous_on T A\"\n      and \"\\<And>\\<tau> \\<epsilon>. \\<tau> \\<in> T \\<Longrightarrow> \\<epsilon> > 0 \\<Longrightarrow> bdd_above {\\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p |t. dist \\<tau> t \\<le> \\<epsilon>}\"\n      and Bhyp: \"continuous_on T B\" and \"open S\" \n      and \"t\\<^sub>0 \\<in> T\" and Thyp: \"open T\" \"is_interval T\" \n    shows \"picard_lindeloef (\\<lambda> t s. A t *v s + B t) T S t\\<^sub>0\"", "lemma picard_lindeloef_autonomous_affine: \n  fixes A :: \"'a::{banach,real_normed_field,heine_borel}^'n^'n\"\n  shows \"picard_lindeloef (\\<lambda> t s. A *v s + B) UNIV UNIV t\\<^sub>0\"", "lemma picard_lindeloef_autonomous_linear:\n  fixes A :: \"'a::{banach,real_normed_field,heine_borel}^'n^'n\"\n  shows \"picard_lindeloef (\\<lambda> t. (*v) A) UNIV UNIV t\\<^sub>0\"", "lemmas unique_sol_autonomous_affine = picard_lindeloef.ivp_unique_solution[OF \n    picard_lindeloef_autonomous_affine UNIV_I _ subset_UNIV]", "lemmas unique_sol_autonomous_linear = picard_lindeloef.ivp_unique_solution[OF \n    picard_lindeloef_autonomous_linear UNIV_I _ subset_UNIV]", "lemma has_derivative_exp_scaleRl[derivative_intros]:\n  fixes f::\"real \\<Rightarrow> real\" (* by Fabian Immler and Johannes H?lzl *)\n  assumes \"D f \\<mapsto> f' at t within T\"\n  shows \"D (\\<lambda>t. exp (f t *\\<^sub>R A)) \\<mapsto> (\\<lambda>h. f' h *\\<^sub>R (exp (f t *\\<^sub>R A) * A)) at t within T\"", "lemma vderiv_on_exp_scaleRlI[poly_derivatives]:\n  assumes \"D f = f' on T\" and \"g' = (\\<lambda>x. f' x *\\<^sub>R exp (f x *\\<^sub>R A) * A)\"\n  shows \"D (\\<lambda>x. exp (f x *\\<^sub>R A)) = g' on T\"", "lemma has_derivative_mtx_ith[derivative_intros]:\n  fixes t::real and T :: \"real set\"\n  defines \"t\\<^sub>0 \\<equiv> netlimit (at t within T)\"\n  assumes \"D A \\<mapsto> (\\<lambda>h. h *\\<^sub>R A' t) at t within T\"\n  shows \"D (\\<lambda>t. A t $$ i) \\<mapsto> (\\<lambda>h. h *\\<^sub>R A' t $$ i) at t within T\"", "lemmas has_derivative_mtx_vec_mult[derivative_intros] = \n  bounded_bilinear.FDERIV[OF bounded_bilinear_sq_mtx_vec_mult]", "lemma vderiv_on_mtx_vec_multI[poly_derivatives]:\n  assumes \"D u = u' on T\" and \"D A = A' on T\"\n      and \"g = (\\<lambda>t. A t *\\<^sub>V u' t + A' t *\\<^sub>V u t )\"\n    shows \"D (\\<lambda>t. A t *\\<^sub>V u t) = g on T\"", "lemmas has_vderiv_on_ivl_integral = ivl_integral_has_vderiv_on[OF vderiv_on_continuous_on]", "lemma has_derivative_mtx_vec_multl[derivative_intros]:\n  assumes \"\\<And> i j. D (\\<lambda>t. (A t) $$ i $ j) \\<mapsto> (\\<lambda>\\<tau>. \\<tau> *\\<^sub>R (A' t) $$ i $ j) (at t within T)\"\n  shows \"D (\\<lambda>t. A t *\\<^sub>V x) \\<mapsto> (\\<lambda>\\<tau>. \\<tau> *\\<^sub>R (A' t) *\\<^sub>V x) at t within T\"", "lemma continuous_on_mtx_vec_multr: \"continuous_on S ((*\\<^sub>V) A)\"", "lemma continuous_on_sq_mtx_vec_multl:\n  fixes A :: \"real \\<Rightarrow> ('n::finite) sq_mtx\"\n  assumes \"continuous_on T A\"\n  shows \"continuous_on T (\\<lambda>t. A t *\\<^sub>V s)\"", "lemmas continuous_on_affine = continuous_on_add[OF continuous_on_sq_mtx_vec_multl]", "lemma local_lipschitz_sq_mtx_affine:\n  fixes A :: \"real \\<Rightarrow> ('n::finite) sq_mtx\"\n  assumes \"continuous_on T A\" \"open T\" \"open S\"\n  shows \"local_lipschitz T S (\\<lambda>t s. A t *\\<^sub>V s + B t)\"", "lemma picard_lindeloef_sq_mtx_affine:\n  assumes \"continuous_on T A\" and \"continuous_on T B\" \n    and \"t\\<^sub>0 \\<in> T\" \"is_interval T\" \"open T\" and \"open S\"\n  shows \"picard_lindeloef (\\<lambda>t s. A t *\\<^sub>V s + B t) T S t\\<^sub>0\"", "lemmas sq_mtx_unique_sol_autonomous_affine = picard_lindeloef.ivp_unique_solution[OF \n    picard_lindeloef_sq_mtx_affine[OF\n      continuous_on_const \n      continuous_on_const \n      UNIV_I is_interval_univ \n      open_UNIV open_UNIV] \n    UNIV_I _ subset_UNIV]", "lemma has_vderiv_on_sq_mtx_linear:\n  \"D (\\<lambda>t. exp ((t - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V s) = (\\<lambda>t. A *\\<^sub>V (exp ((t - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V s)) on {t\\<^sub>0--t}\"", "lemma has_vderiv_on_sq_mtx_affine:\n  fixes t\\<^sub>0::real and A :: \"('a::finite) sq_mtx\"\n  defines \"lSol c t \\<equiv> exp ((c * (t - t\\<^sub>0)) *\\<^sub>R A)\"\n  shows \"D (\\<lambda>t. lSol 1 t *\\<^sub>V s + lSol 1 t *\\<^sub>V (\\<integral>\\<^sub>t\\<^sub>0\\<^sup>t (lSol (-1) \\<tau> *\\<^sub>V B) \\<partial>\\<tau>)) = \n  (\\<lambda>t. A *\\<^sub>V (lSol 1 t *\\<^sub>V s + lSol 1 t *\\<^sub>V (\\<integral>\\<^sub>t\\<^sub>0\\<^sup>t (lSol (-1) \\<tau> *\\<^sub>V B) \\<partial>\\<tau>)) + B) on {t\\<^sub>0--t}\"", "lemma autonomous_linear_sol_is_exp:\n  assumes \"D X = (\\<lambda>t. A *\\<^sub>V X t) on {t\\<^sub>0--t}\" and \"X t\\<^sub>0 = s\" \n  shows \"X t = exp ((t - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V s\"", "lemma autonomous_affine_sol_is_exp_plus_int:\n  assumes \"D X = (\\<lambda>t. A *\\<^sub>V X t + B) on {t\\<^sub>0--t}\" and \"X t\\<^sub>0 = s\" \n  shows \"X t = exp ((t - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V s + exp ((t - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V (\\<integral>\\<^sub>t\\<^sub>0\\<^sup>t(exp (- (\\<tau> - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V B)\\<partial>\\<tau>)\"", "lemma local_flow_sq_mtx_linear: \"local_flow ((*\\<^sub>V) A) UNIV UNIV (\\<lambda>t s. exp (t *\\<^sub>R A) *\\<^sub>V s)\"", "lemma local_flow_sq_mtx_affine: \"local_flow (\\<lambda>s. A *\\<^sub>V s + B) UNIV UNIV \n  (\\<lambda>t s. exp (t *\\<^sub>R A) *\\<^sub>V s + exp (t *\\<^sub>R A) *\\<^sub>V (\\<integral>\\<^sub>0\\<^sup>t(exp (- \\<tau> *\\<^sub>R A) *\\<^sub>V B)\\<partial>\\<tau>))\""], "translations": [["", "lemma continuous_on_matrix_vector_multl:\n  assumes \"matrix_continuous_on T A\"\n  shows \"continuous_on T (\\<lambda>t. A t *v s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on T (\\<lambda>t. A t *v s)", "proof(rule continuous_onI, simp add: dist_norm)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x e.\n       \\<lbrakk>0 < e; x \\<in> T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>d>0.\n                            \\<forall>x'\\<in>T.\n                               \\<bar>x' - x\\<bar> < d \\<longrightarrow>\n                               \\<parallel>A x' *v s - A x *v s\\<parallel>\n                               \\<le> e", "fix e t::real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x e.\n       \\<lbrakk>0 < e; x \\<in> T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>d>0.\n                            \\<forall>x'\\<in>T.\n                               \\<bar>x' - x\\<bar> < d \\<longrightarrow>\n                               \\<parallel>A x' *v s - A x *v s\\<parallel>\n                               \\<le> e", "assume \"0 < e\" and \"t \\<in> T\""], ["proof (state)\nthis:\n  0 < e\n  t \\<in> T\n\ngoal (1 subgoal):\n 1. \\<And>x e.\n       \\<lbrakk>0 < e; x \\<in> T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>d>0.\n                            \\<forall>x'\\<in>T.\n                               \\<bar>x' - x\\<bar> < d \\<longrightarrow>\n                               \\<parallel>A x' *v s - A x *v s\\<parallel>\n                               \\<le> e", "let ?\\<epsilon> = \"e/(\\<parallel>(if s = 0 then 1 else s)\\<parallel>)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x e.\n       \\<lbrakk>0 < e; x \\<in> T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>d>0.\n                            \\<forall>x'\\<in>T.\n                               \\<bar>x' - x\\<bar> < d \\<longrightarrow>\n                               \\<parallel>A x' *v s - A x *v s\\<parallel>\n                               \\<le> e", "have \"?\\<epsilon> > 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < e / (\\<parallel>(if s = 0 then 1 else s)\\<parallel>)", "using \\<open>0 < e\\<close>"], ["proof (prove)\nusing this:\n  0 < e\n\ngoal (1 subgoal):\n 1. 0 < e / (\\<parallel>(if s = 0 then 1 else s)\\<parallel>)", "by simp"], ["proof (state)\nthis:\n  0 < e / (\\<parallel>(if s = 0 then 1 else s)\\<parallel>)\n\ngoal (1 subgoal):\n 1. \\<And>x e.\n       \\<lbrakk>0 < e; x \\<in> T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>d>0.\n                            \\<forall>x'\\<in>T.\n                               \\<bar>x' - x\\<bar> < d \\<longrightarrow>\n                               \\<parallel>A x' *v s - A x *v s\\<parallel>\n                               \\<le> e", "then"], ["proof (chain)\npicking this:\n  0 < e / (\\<parallel>(if s = 0 then 1 else s)\\<parallel>)", "obtain \\<delta> where dHyp: \"\\<delta> > 0 \\<and> (\\<forall>\\<tau>\\<in>T. \\<bar>\\<tau> - t\\<bar> < \\<delta> \\<longrightarrow> \\<parallel>A \\<tau> - A t\\<parallel>\\<^sub>o\\<^sub>p \\<le> ?\\<epsilon>)\""], ["proof (prove)\nusing this:\n  0 < e / (\\<parallel>(if s = 0 then 1 else s)\\<parallel>)\n\ngoal (1 subgoal):\n 1. (\\<And>\\<delta>.\n        0 < \\<delta> \\<and>\n        (\\<forall>\\<tau>\\<in>T.\n            \\<bar>\\<tau> - t\\<bar> < \\<delta> \\<longrightarrow>\n            \\<parallel>A \\<tau> - A t\\<parallel>\\<^sub>o\\<^sub>p\n            \\<le> e /\n                  (\\<parallel>(if s = 0 then 1\n                               else s)\\<parallel>)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using assms \\<open>t \\<in> T\\<close>"], ["proof (prove)\nusing this:\n  0 < e / (\\<parallel>(if s = 0 then 1 else s)\\<parallel>)\n  matrix_continuous_on T A\n  t \\<in> T\n\ngoal (1 subgoal):\n 1. (\\<And>\\<delta>.\n        0 < \\<delta> \\<and>\n        (\\<forall>\\<tau>\\<in>T.\n            \\<bar>\\<tau> - t\\<bar> < \\<delta> \\<longrightarrow>\n            \\<parallel>A \\<tau> - A t\\<parallel>\\<^sub>o\\<^sub>p\n            \\<le> e /\n                  (\\<parallel>(if s = 0 then 1\n                               else s)\\<parallel>)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding dist_norm matrix_continuous_on_def"], ["proof (prove)\nusing this:\n  0 < e / (\\<parallel>(if s = 0 then 1 else s)\\<parallel>)\n  \\<forall>t\\<in>T.\n     \\<forall>\\<epsilon>>0.\n        \\<exists>\\<delta>>0.\n           \\<forall>\\<tau>\\<in>T.\n              \\<bar>\\<tau> - t\\<bar> < \\<delta> \\<longrightarrow>\n              \\<parallel>A \\<tau> - A t\\<parallel>\\<^sub>o\\<^sub>p\n              \\<le> \\<epsilon>\n  t \\<in> T\n\ngoal (1 subgoal):\n 1. (\\<And>\\<delta>.\n        0 < \\<delta> \\<and>\n        (\\<forall>\\<tau>\\<in>T.\n            \\<bar>\\<tau> - t\\<bar> < \\<delta> \\<longrightarrow>\n            \\<parallel>A \\<tau> - A t\\<parallel>\\<^sub>o\\<^sub>p\n            \\<le> e /\n                  (\\<parallel>(if s = 0 then 1\n                               else s)\\<parallel>)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  0 < \\<delta> \\<and>\n  (\\<forall>\\<tau>\\<in>T.\n      \\<bar>\\<tau> - t\\<bar> < \\<delta> \\<longrightarrow>\n      \\<parallel>A \\<tau> - A t\\<parallel>\\<^sub>o\\<^sub>p\n      \\<le> e / (\\<parallel>(if s = 0 then 1 else s)\\<parallel>))\n\ngoal (1 subgoal):\n 1. \\<And>x e.\n       \\<lbrakk>0 < e; x \\<in> T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>d>0.\n                            \\<forall>x'\\<in>T.\n                               \\<bar>x' - x\\<bar> < d \\<longrightarrow>\n                               \\<parallel>A x' *v s - A x *v s\\<parallel>\n                               \\<le> e", "{"], ["proof (state)\nthis:\n  0 < \\<delta> \\<and>\n  (\\<forall>\\<tau>\\<in>T.\n      \\<bar>\\<tau> - t\\<bar> < \\<delta> \\<longrightarrow>\n      \\<parallel>A \\<tau> - A t\\<parallel>\\<^sub>o\\<^sub>p\n      \\<le> e / (\\<parallel>(if s = 0 then 1 else s)\\<parallel>))\n\ngoal (1 subgoal):\n 1. \\<And>x e.\n       \\<lbrakk>0 < e; x \\<in> T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>d>0.\n                            \\<forall>x'\\<in>T.\n                               \\<bar>x' - x\\<bar> < d \\<longrightarrow>\n                               \\<parallel>A x' *v s - A x *v s\\<parallel>\n                               \\<le> e", "fix \\<tau>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x e.\n       \\<lbrakk>0 < e; x \\<in> T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>d>0.\n                            \\<forall>x'\\<in>T.\n                               \\<bar>x' - x\\<bar> < d \\<longrightarrow>\n                               \\<parallel>A x' *v s - A x *v s\\<parallel>\n                               \\<le> e", "assume \"\\<tau> \\<in> T\" and \"\\<bar>\\<tau> - t\\<bar> < \\<delta>\""], ["proof (state)\nthis:\n  \\<tau> \\<in> T\n  \\<bar>\\<tau> - t\\<bar> < \\<delta>\n\ngoal (1 subgoal):\n 1. \\<And>x e.\n       \\<lbrakk>0 < e; x \\<in> T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>d>0.\n                            \\<forall>x'\\<in>T.\n                               \\<bar>x' - x\\<bar> < d \\<longrightarrow>\n                               \\<parallel>A x' *v s - A x *v s\\<parallel>\n                               \\<le> e", "have obs: \"?\\<epsilon> * (\\<parallel>s\\<parallel>) = (if s = 0 then 0 else e)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. e / (\\<parallel>(if s = 0 then 1 else s)\\<parallel>) *\n    (\\<parallel>s\\<parallel>) =\n    (if s = 0 then 0 else e)", "by auto"], ["proof (state)\nthis:\n  e / (\\<parallel>(if s = 0 then 1 else s)\\<parallel>) *\n  (\\<parallel>s\\<parallel>) =\n  (if s = 0 then 0 else e)\n\ngoal (1 subgoal):\n 1. \\<And>x e.\n       \\<lbrakk>0 < e; x \\<in> T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>d>0.\n                            \\<forall>x'\\<in>T.\n                               \\<bar>x' - x\\<bar> < d \\<longrightarrow>\n                               \\<parallel>A x' *v s - A x *v s\\<parallel>\n                               \\<le> e", "have \"\\<parallel>A \\<tau> *v s - A t *v s\\<parallel> = \\<parallel>(A \\<tau> - A t) *v s\\<parallel>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>A \\<tau> *v s - A t *v s\\<parallel> =\n    \\<parallel>(A \\<tau> - A t) *v s\\<parallel>", "by (simp add: matrix_vector_mult_diff_rdistrib)"], ["proof (state)\nthis:\n  \\<parallel>A \\<tau> *v s - A t *v s\\<parallel> =\n  \\<parallel>(A \\<tau> - A t) *v s\\<parallel>\n\ngoal (1 subgoal):\n 1. \\<And>x e.\n       \\<lbrakk>0 < e; x \\<in> T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>d>0.\n                            \\<forall>x'\\<in>T.\n                               \\<bar>x' - x\\<bar> < d \\<longrightarrow>\n                               \\<parallel>A x' *v s - A x *v s\\<parallel>\n                               \\<le> e", "also"], ["proof (state)\nthis:\n  \\<parallel>A \\<tau> *v s - A t *v s\\<parallel> =\n  \\<parallel>(A \\<tau> - A t) *v s\\<parallel>\n\ngoal (1 subgoal):\n 1. \\<And>x e.\n       \\<lbrakk>0 < e; x \\<in> T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>d>0.\n                            \\<forall>x'\\<in>T.\n                               \\<bar>x' - x\\<bar> < d \\<longrightarrow>\n                               \\<parallel>A x' *v s - A x *v s\\<parallel>\n                               \\<le> e", "have \"... \\<le> (\\<parallel>A \\<tau> - A t\\<parallel>\\<^sub>o\\<^sub>p) * (\\<parallel>s\\<parallel>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>(A \\<tau> - A t) *v s\\<parallel>\n    \\<le> (\\<parallel>A \\<tau> - A t\\<parallel>\\<^sub>o\\<^sub>p) *\n          (\\<parallel>s\\<parallel>)", "using norm_matrix_le_mult_op_norm"], ["proof (prove)\nusing this:\n  \\<parallel>?A *v ?x\\<parallel>\n  \\<le> (\\<parallel>?A\\<parallel>\\<^sub>o\\<^sub>p) *\n        (\\<parallel>?x\\<parallel>)\n\ngoal (1 subgoal):\n 1. \\<parallel>(A \\<tau> - A t) *v s\\<parallel>\n    \\<le> (\\<parallel>A \\<tau> - A t\\<parallel>\\<^sub>o\\<^sub>p) *\n          (\\<parallel>s\\<parallel>)", "by blast"], ["proof (state)\nthis:\n  \\<parallel>(A \\<tau> - A t) *v s\\<parallel>\n  \\<le> (\\<parallel>A \\<tau> - A t\\<parallel>\\<^sub>o\\<^sub>p) *\n        (\\<parallel>s\\<parallel>)\n\ngoal (1 subgoal):\n 1. \\<And>x e.\n       \\<lbrakk>0 < e; x \\<in> T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>d>0.\n                            \\<forall>x'\\<in>T.\n                               \\<bar>x' - x\\<bar> < d \\<longrightarrow>\n                               \\<parallel>A x' *v s - A x *v s\\<parallel>\n                               \\<le> e", "also"], ["proof (state)\nthis:\n  \\<parallel>(A \\<tau> - A t) *v s\\<parallel>\n  \\<le> (\\<parallel>A \\<tau> - A t\\<parallel>\\<^sub>o\\<^sub>p) *\n        (\\<parallel>s\\<parallel>)\n\ngoal (1 subgoal):\n 1. \\<And>x e.\n       \\<lbrakk>0 < e; x \\<in> T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>d>0.\n                            \\<forall>x'\\<in>T.\n                               \\<bar>x' - x\\<bar> < d \\<longrightarrow>\n                               \\<parallel>A x' *v s - A x *v s\\<parallel>\n                               \\<le> e", "have \"... \\<le> ?\\<epsilon> * (\\<parallel>s\\<parallel>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<parallel>A \\<tau> - A t\\<parallel>\\<^sub>o\\<^sub>p) *\n    (\\<parallel>s\\<parallel>)\n    \\<le> e / (\\<parallel>(if s = 0 then 1 else s)\\<parallel>) *\n          (\\<parallel>s\\<parallel>)", "using dHyp \\<open>\\<tau> \\<in> T\\<close> \\<open>\\<bar>\\<tau> - t\\<bar> < \\<delta>\\<close> mult_right_mono norm_ge_zero"], ["proof (prove)\nusing this:\n  0 < \\<delta> \\<and>\n  (\\<forall>\\<tau>\\<in>T.\n      \\<bar>\\<tau> - t\\<bar> < \\<delta> \\<longrightarrow>\n      \\<parallel>A \\<tau> - A t\\<parallel>\\<^sub>o\\<^sub>p\n      \\<le> e / (\\<parallel>(if s = 0 then 1 else s)\\<parallel>))\n  \\<tau> \\<in> T\n  \\<bar>\\<tau> - t\\<bar> < \\<delta>\n  \\<lbrakk>?a \\<le> ?b; (0::?'a) \\<le> ?c\\<rbrakk>\n  \\<Longrightarrow> ?a * ?c \\<le> ?b * ?c\n  0 \\<le> \\<parallel>?x\\<parallel>\n\ngoal (1 subgoal):\n 1. (\\<parallel>A \\<tau> - A t\\<parallel>\\<^sub>o\\<^sub>p) *\n    (\\<parallel>s\\<parallel>)\n    \\<le> e / (\\<parallel>(if s = 0 then 1 else s)\\<parallel>) *\n          (\\<parallel>s\\<parallel>)", "by blast"], ["proof (state)\nthis:\n  (\\<parallel>A \\<tau> - A t\\<parallel>\\<^sub>o\\<^sub>p) *\n  (\\<parallel>s\\<parallel>)\n  \\<le> e / (\\<parallel>(if s = 0 then 1 else s)\\<parallel>) *\n        (\\<parallel>s\\<parallel>)\n\ngoal (1 subgoal):\n 1. \\<And>x e.\n       \\<lbrakk>0 < e; x \\<in> T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>d>0.\n                            \\<forall>x'\\<in>T.\n                               \\<bar>x' - x\\<bar> < d \\<longrightarrow>\n                               \\<parallel>A x' *v s - A x *v s\\<parallel>\n                               \\<le> e", "finally"], ["proof (chain)\npicking this:\n  \\<parallel>A \\<tau> *v s - A t *v s\\<parallel>\n  \\<le> e / (\\<parallel>(if s = 0 then 1 else s)\\<parallel>) *\n        (\\<parallel>s\\<parallel>)", "have \"\\<parallel>A \\<tau> *v s - A t *v s\\<parallel> \\<le> e\""], ["proof (prove)\nusing this:\n  \\<parallel>A \\<tau> *v s - A t *v s\\<parallel>\n  \\<le> e / (\\<parallel>(if s = 0 then 1 else s)\\<parallel>) *\n        (\\<parallel>s\\<parallel>)\n\ngoal (1 subgoal):\n 1. \\<parallel>A \\<tau> *v s - A t *v s\\<parallel> \\<le> e", "by (subst (asm) obs) (metis (mono_tags, hide_lams) \\<open>0 < e\\<close> less_eq_real_def order_trans)"], ["proof (state)\nthis:\n  \\<parallel>A \\<tau> *v s - A t *v s\\<parallel> \\<le> e\n\ngoal (1 subgoal):\n 1. \\<And>x e.\n       \\<lbrakk>0 < e; x \\<in> T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>d>0.\n                            \\<forall>x'\\<in>T.\n                               \\<bar>x' - x\\<bar> < d \\<longrightarrow>\n                               \\<parallel>A x' *v s - A x *v s\\<parallel>\n                               \\<le> e", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?\\<tau>2 \\<in> T; \\<bar>?\\<tau>2 - t\\<bar> < \\<delta>\\<rbrakk>\n  \\<Longrightarrow> \\<parallel>A ?\\<tau>2 *v s - A t *v s\\<parallel> \\<le> e\n\ngoal (1 subgoal):\n 1. \\<And>x e.\n       \\<lbrakk>0 < e; x \\<in> T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>d>0.\n                            \\<forall>x'\\<in>T.\n                               \\<bar>x' - x\\<bar> < d \\<longrightarrow>\n                               \\<parallel>A x' *v s - A x *v s\\<parallel>\n                               \\<le> e", "thus \"\\<exists>d>0. \\<forall>\\<tau>\\<in>T. \\<bar>\\<tau> - t\\<bar> < d \\<longrightarrow> \\<parallel>A \\<tau> *v s - A t *v s\\<parallel> \\<le> e\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?\\<tau>2 \\<in> T; \\<bar>?\\<tau>2 - t\\<bar> < \\<delta>\\<rbrakk>\n  \\<Longrightarrow> \\<parallel>A ?\\<tau>2 *v s - A t *v s\\<parallel> \\<le> e\n\ngoal (1 subgoal):\n 1. \\<exists>d>0.\n       \\<forall>\\<tau>\\<in>T.\n          \\<bar>\\<tau> - t\\<bar> < d \\<longrightarrow>\n          \\<parallel>A \\<tau> *v s - A t *v s\\<parallel> \\<le> e", "using dHyp"], ["proof (prove)\nusing this:\n  \\<lbrakk>?\\<tau>2 \\<in> T; \\<bar>?\\<tau>2 - t\\<bar> < \\<delta>\\<rbrakk>\n  \\<Longrightarrow> \\<parallel>A ?\\<tau>2 *v s - A t *v s\\<parallel> \\<le> e\n  0 < \\<delta> \\<and>\n  (\\<forall>\\<tau>\\<in>T.\n      \\<bar>\\<tau> - t\\<bar> < \\<delta> \\<longrightarrow>\n      \\<parallel>A \\<tau> - A t\\<parallel>\\<^sub>o\\<^sub>p\n      \\<le> e / (\\<parallel>(if s = 0 then 1 else s)\\<parallel>))\n\ngoal (1 subgoal):\n 1. \\<exists>d>0.\n       \\<forall>\\<tau>\\<in>T.\n          \\<bar>\\<tau> - t\\<bar> < d \\<longrightarrow>\n          \\<parallel>A \\<tau> *v s - A t *v s\\<parallel> \\<le> e", "by blast"], ["proof (state)\nthis:\n  \\<exists>d>0.\n     \\<forall>\\<tau>\\<in>T.\n        \\<bar>\\<tau> - t\\<bar> < d \\<longrightarrow>\n        \\<parallel>A \\<tau> *v s - A t *v s\\<parallel> \\<le> e\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lipschitz_cond_affine:\n  fixes A :: \"real \\<Rightarrow> 'a::real_normed_algebra_1^'n^'m\" and T::\"real set\"\n  defines \"L \\<equiv> Sup {\\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p |t. t \\<in> T}\"\n  assumes \"t \\<in> T\" and \"bdd_above {\\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p |t. t \\<in> T}\"\n  shows \"\\<parallel>A t *v x - A t *v y\\<parallel> \\<le> L * (\\<parallel>x - y\\<parallel>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>A t *v x - A t *v y\\<parallel>\n    \\<le> L * (\\<parallel>x - y\\<parallel>)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<parallel>A t *v x - A t *v y\\<parallel>\n    \\<le> L * (\\<parallel>x - y\\<parallel>)", "have obs: \"\\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p \\<le> Sup {\\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p |t. t \\<in> T}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p\n    \\<le> Sup {\\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p |t. t \\<in> T}", "apply(rule cSup_upper)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p\n    \\<in> {\\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p |t. t \\<in> T}\n 2. bdd_above {\\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p |t. t \\<in> T}", "using continuous_on_subset assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>continuous_on ?s ?f; ?t \\<subseteq> ?s\\<rbrakk>\n  \\<Longrightarrow> continuous_on ?t ?f\n  L \\<equiv> Sup {\\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p |t. t \\<in> T}\n  t \\<in> T\n  bdd_above {\\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p |t. t \\<in> T}\n\ngoal (2 subgoals):\n 1. \\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p\n    \\<in> {\\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p |t. t \\<in> T}\n 2. bdd_above {\\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p |t. t \\<in> T}", "by (auto simp: dist_norm)"], ["proof (state)\nthis:\n  \\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p\n  \\<le> Sup {\\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p |t. t \\<in> T}\n\ngoal (1 subgoal):\n 1. \\<parallel>A t *v x - A t *v y\\<parallel>\n    \\<le> L * (\\<parallel>x - y\\<parallel>)", "have \"\\<parallel>A t *v x - A t *v y\\<parallel> = \\<parallel>A t *v (x - y)\\<parallel>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>A t *v x - A t *v y\\<parallel> =\n    \\<parallel>A t *v (x - y)\\<parallel>", "by (simp add: matrix_vector_mult_diff_distrib)"], ["proof (state)\nthis:\n  \\<parallel>A t *v x - A t *v y\\<parallel> =\n  \\<parallel>A t *v (x - y)\\<parallel>\n\ngoal (1 subgoal):\n 1. \\<parallel>A t *v x - A t *v y\\<parallel>\n    \\<le> L * (\\<parallel>x - y\\<parallel>)", "also"], ["proof (state)\nthis:\n  \\<parallel>A t *v x - A t *v y\\<parallel> =\n  \\<parallel>A t *v (x - y)\\<parallel>\n\ngoal (1 subgoal):\n 1. \\<parallel>A t *v x - A t *v y\\<parallel>\n    \\<le> L * (\\<parallel>x - y\\<parallel>)", "have \"... \\<le> (\\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p) * (\\<parallel>x - y\\<parallel>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>A t *v (x - y)\\<parallel>\n    \\<le> (\\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p) *\n          (\\<parallel>x - y\\<parallel>)", "using norm_matrix_le_mult_op_norm"], ["proof (prove)\nusing this:\n  \\<parallel>?A *v ?x\\<parallel>\n  \\<le> (\\<parallel>?A\\<parallel>\\<^sub>o\\<^sub>p) *\n        (\\<parallel>?x\\<parallel>)\n\ngoal (1 subgoal):\n 1. \\<parallel>A t *v (x - y)\\<parallel>\n    \\<le> (\\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p) *\n          (\\<parallel>x - y\\<parallel>)", "by blast"], ["proof (state)\nthis:\n  \\<parallel>A t *v (x - y)\\<parallel>\n  \\<le> (\\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p) *\n        (\\<parallel>x - y\\<parallel>)\n\ngoal (1 subgoal):\n 1. \\<parallel>A t *v x - A t *v y\\<parallel>\n    \\<le> L * (\\<parallel>x - y\\<parallel>)", "also"], ["proof (state)\nthis:\n  \\<parallel>A t *v (x - y)\\<parallel>\n  \\<le> (\\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p) *\n        (\\<parallel>x - y\\<parallel>)\n\ngoal (1 subgoal):\n 1. \\<parallel>A t *v x - A t *v y\\<parallel>\n    \\<le> L * (\\<parallel>x - y\\<parallel>)", "have \"... \\<le> Sup {\\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p |t. t \\<in> T} * (\\<parallel>x - y\\<parallel>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p) *\n    (\\<parallel>x - y\\<parallel>)\n    \\<le> Sup {\\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p |t. t \\<in> T} *\n          (\\<parallel>x - y\\<parallel>)", "using obs mult_right_mono norm_ge_zero"], ["proof (prove)\nusing this:\n  \\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p\n  \\<le> Sup {\\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p |t. t \\<in> T}\n  \\<lbrakk>?a \\<le> ?b; (0::?'a) \\<le> ?c\\<rbrakk>\n  \\<Longrightarrow> ?a * ?c \\<le> ?b * ?c\n  0 \\<le> \\<parallel>?x\\<parallel>\n\ngoal (1 subgoal):\n 1. (\\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p) *\n    (\\<parallel>x - y\\<parallel>)\n    \\<le> Sup {\\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p |t. t \\<in> T} *\n          (\\<parallel>x - y\\<parallel>)", "by blast"], ["proof (state)\nthis:\n  (\\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p) *\n  (\\<parallel>x - y\\<parallel>)\n  \\<le> Sup {\\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p |t. t \\<in> T} *\n        (\\<parallel>x - y\\<parallel>)\n\ngoal (1 subgoal):\n 1. \\<parallel>A t *v x - A t *v y\\<parallel>\n    \\<le> L * (\\<parallel>x - y\\<parallel>)", "finally"], ["proof (chain)\npicking this:\n  \\<parallel>A t *v x - A t *v y\\<parallel>\n  \\<le> Sup {\\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p |t. t \\<in> T} *\n        (\\<parallel>x - y\\<parallel>)", "show \"\\<parallel>A t *v x - A t *v y\\<parallel> \\<le> L * (\\<parallel>x - y\\<parallel>)\""], ["proof (prove)\nusing this:\n  \\<parallel>A t *v x - A t *v y\\<parallel>\n  \\<le> Sup {\\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p |t. t \\<in> T} *\n        (\\<parallel>x - y\\<parallel>)\n\ngoal (1 subgoal):\n 1. \\<parallel>A t *v x - A t *v y\\<parallel>\n    \\<le> L * (\\<parallel>x - y\\<parallel>)", "unfolding assms"], ["proof (prove)\nusing this:\n  \\<parallel>A t *v x - A t *v y\\<parallel>\n  \\<le> Sup {\\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p |t. t \\<in> T} *\n        (\\<parallel>x - y\\<parallel>)\n\ngoal (1 subgoal):\n 1. \\<parallel>A t *v x - A t *v y\\<parallel>\n    \\<le> Sup {\\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p |t. t \\<in> T} *\n          (\\<parallel>x - y\\<parallel>)", "."], ["proof (state)\nthis:\n  \\<parallel>A t *v x - A t *v y\\<parallel>\n  \\<le> L * (\\<parallel>x - y\\<parallel>)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma local_lipschitz_affine:\n  fixes A :: \"real \\<Rightarrow> 'a::real_normed_algebra_1^'n^'m\"\n  assumes \"open T\" and \"open S\" \n    and Ahyp: \"\\<And>\\<tau> \\<epsilon>. \\<epsilon> > 0 \\<Longrightarrow> \\<tau> \\<in> T \\<Longrightarrow> cball \\<tau> \\<epsilon> \\<subseteq> T \\<Longrightarrow> bdd_above {\\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p |t. t \\<in> cball \\<tau> \\<epsilon>}\"\n  shows \"local_lipschitz T S (\\<lambda>t s. A t *v s + B t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local_lipschitz T S (\\<lambda>t s. A t *v s + B t)", "proof(unfold local_lipschitz_def lipschitz_on_def, clarsimp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x t.\n       \\<lbrakk>x \\<in> S; t \\<in> T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u>0.\n                            \\<exists>L.\n                               \\<forall>t\\<in>cball t u \\<inter> T.\n                                  0 \\<le> L \\<and>\n                                  (\\<forall>xa\\<in>cball x u \\<inter> S.\n\\<forall>y\\<in>cball x u \\<inter> S.\n   dist (A t *v xa) (A t *v y) \\<le> L * dist xa y)", "fix s t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x t.\n       \\<lbrakk>x \\<in> S; t \\<in> T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u>0.\n                            \\<exists>L.\n                               \\<forall>t\\<in>cball t u \\<inter> T.\n                                  0 \\<le> L \\<and>\n                                  (\\<forall>xa\\<in>cball x u \\<inter> S.\n\\<forall>y\\<in>cball x u \\<inter> S.\n   dist (A t *v xa) (A t *v y) \\<le> L * dist xa y)", "assume \"s \\<in> S\" and \"t \\<in> T\""], ["proof (state)\nthis:\n  s \\<in> S\n  t \\<in> T\n\ngoal (1 subgoal):\n 1. \\<And>x t.\n       \\<lbrakk>x \\<in> S; t \\<in> T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u>0.\n                            \\<exists>L.\n                               \\<forall>t\\<in>cball t u \\<inter> T.\n                                  0 \\<le> L \\<and>\n                                  (\\<forall>xa\\<in>cball x u \\<inter> S.\n\\<forall>y\\<in>cball x u \\<inter> S.\n   dist (A t *v xa) (A t *v y) \\<le> L * dist xa y)", "then"], ["proof (chain)\npicking this:\n  s \\<in> S\n  t \\<in> T", "obtain e1 e2 where \"cball t e1 \\<subseteq> T\" and \"cball s e2 \\<subseteq> S\" and \"min e1 e2 > 0\""], ["proof (prove)\nusing this:\n  s \\<in> S\n  t \\<in> T\n\ngoal (1 subgoal):\n 1. (\\<And>e1 e2.\n        \\<lbrakk>cball t e1 \\<subseteq> T; cball s e2 \\<subseteq> S;\n         0 < min e1 e2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using open_cballE[OF _ \\<open>open T\\<close>] open_cballE[OF _ \\<open>open S\\<close>]"], ["proof (prove)\nusing this:\n  s \\<in> S\n  t \\<in> T\n  ?t\\<^sub>0 \\<in> T \\<Longrightarrow>\n  \\<exists>e>0. cball ?t\\<^sub>0 e \\<subseteq> T\n  ?t\\<^sub>0 \\<in> S \\<Longrightarrow>\n  \\<exists>e>0. cball ?t\\<^sub>0 e \\<subseteq> S\n\ngoal (1 subgoal):\n 1. (\\<And>e1 e2.\n        \\<lbrakk>cball t e1 \\<subseteq> T; cball s e2 \\<subseteq> S;\n         0 < min e1 e2\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  cball t e1 \\<subseteq> T\n  cball s e2 \\<subseteq> S\n  0 < min e1 e2\n\ngoal (1 subgoal):\n 1. \\<And>x t.\n       \\<lbrakk>x \\<in> S; t \\<in> T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u>0.\n                            \\<exists>L.\n                               \\<forall>t\\<in>cball t u \\<inter> T.\n                                  0 \\<le> L \\<and>\n                                  (\\<forall>xa\\<in>cball x u \\<inter> S.\n\\<forall>y\\<in>cball x u \\<inter> S.\n   dist (A t *v xa) (A t *v y) \\<le> L * dist xa y)", "hence obs: \"cball t (min e1 e2) \\<subseteq> T\""], ["proof (prove)\nusing this:\n  cball t e1 \\<subseteq> T\n  cball s e2 \\<subseteq> S\n  0 < min e1 e2\n\ngoal (1 subgoal):\n 1. cball t (min e1 e2) \\<subseteq> T", "by auto"], ["proof (state)\nthis:\n  cball t (min e1 e2) \\<subseteq> T\n\ngoal (1 subgoal):\n 1. \\<And>x t.\n       \\<lbrakk>x \\<in> S; t \\<in> T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u>0.\n                            \\<exists>L.\n                               \\<forall>t\\<in>cball t u \\<inter> T.\n                                  0 \\<le> L \\<and>\n                                  (\\<forall>xa\\<in>cball x u \\<inter> S.\n\\<forall>y\\<in>cball x u \\<inter> S.\n   dist (A t *v xa) (A t *v y) \\<le> L * dist xa y)", "let ?L = \"Sup {\\<parallel>A \\<tau>\\<parallel>\\<^sub>o\\<^sub>p |\\<tau>. \\<tau> \\<in> cball t (min e1 e2)}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x t.\n       \\<lbrakk>x \\<in> S; t \\<in> T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u>0.\n                            \\<exists>L.\n                               \\<forall>t\\<in>cball t u \\<inter> T.\n                                  0 \\<le> L \\<and>\n                                  (\\<forall>xa\\<in>cball x u \\<inter> S.\n\\<forall>y\\<in>cball x u \\<inter> S.\n   dist (A t *v xa) (A t *v y) \\<le> L * dist xa y)", "have \"\\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p \\<in> {\\<parallel>A \\<tau>\\<parallel>\\<^sub>o\\<^sub>p |\\<tau>. \\<tau> \\<in> cball t (min e1 e2)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p\n    \\<in> {\\<parallel>A \\<tau>\\<parallel>\\<^sub>o\\<^sub>p |\\<tau>.\n           \\<tau> \\<in> cball t (min e1 e2)}", "using \\<open>min e1 e2 > 0\\<close>"], ["proof (prove)\nusing this:\n  0 < min e1 e2\n\ngoal (1 subgoal):\n 1. \\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p\n    \\<in> {\\<parallel>A \\<tau>\\<parallel>\\<^sub>o\\<^sub>p |\\<tau>.\n           \\<tau> \\<in> cball t (min e1 e2)}", "by auto"], ["proof (state)\nthis:\n  \\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p\n  \\<in> {\\<parallel>A \\<tau>\\<parallel>\\<^sub>o\\<^sub>p |\\<tau>.\n         \\<tau> \\<in> cball t (min e1 e2)}\n\ngoal (1 subgoal):\n 1. \\<And>x t.\n       \\<lbrakk>x \\<in> S; t \\<in> T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u>0.\n                            \\<exists>L.\n                               \\<forall>t\\<in>cball t u \\<inter> T.\n                                  0 \\<le> L \\<and>\n                                  (\\<forall>xa\\<in>cball x u \\<inter> S.\n\\<forall>y\\<in>cball x u \\<inter> S.\n   dist (A t *v xa) (A t *v y) \\<le> L * dist xa y)", "moreover"], ["proof (state)\nthis:\n  \\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p\n  \\<in> {\\<parallel>A \\<tau>\\<parallel>\\<^sub>o\\<^sub>p |\\<tau>.\n         \\<tau> \\<in> cball t (min e1 e2)}\n\ngoal (1 subgoal):\n 1. \\<And>x t.\n       \\<lbrakk>x \\<in> S; t \\<in> T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u>0.\n                            \\<exists>L.\n                               \\<forall>t\\<in>cball t u \\<inter> T.\n                                  0 \\<le> L \\<and>\n                                  (\\<forall>xa\\<in>cball x u \\<inter> S.\n\\<forall>y\\<in>cball x u \\<inter> S.\n   dist (A t *v xa) (A t *v y) \\<le> L * dist xa y)", "have bdd: \"bdd_above {\\<parallel>A \\<tau>\\<parallel>\\<^sub>o\\<^sub>p |\\<tau>. \\<tau> \\<in> cball t (min e1 e2)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bdd_above\n     {\\<parallel>A \\<tau>\\<parallel>\\<^sub>o\\<^sub>p |\\<tau>.\n      \\<tau> \\<in> cball t (min e1 e2)}", "by (rule Ahyp, simp only: \\<open>min e1 e2 > 0\\<close>, simp_all add: \\<open>t \\<in> T\\<close> obs)"], ["proof (state)\nthis:\n  bdd_above\n   {\\<parallel>A \\<tau>\\<parallel>\\<^sub>o\\<^sub>p |\\<tau>.\n    \\<tau> \\<in> cball t (min e1 e2)}\n\ngoal (1 subgoal):\n 1. \\<And>x t.\n       \\<lbrakk>x \\<in> S; t \\<in> T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u>0.\n                            \\<exists>L.\n                               \\<forall>t\\<in>cball t u \\<inter> T.\n                                  0 \\<le> L \\<and>\n                                  (\\<forall>xa\\<in>cball x u \\<inter> S.\n\\<forall>y\\<in>cball x u \\<inter> S.\n   dist (A t *v xa) (A t *v y) \\<le> L * dist xa y)", "moreover"], ["proof (state)\nthis:\n  bdd_above\n   {\\<parallel>A \\<tau>\\<parallel>\\<^sub>o\\<^sub>p |\\<tau>.\n    \\<tau> \\<in> cball t (min e1 e2)}\n\ngoal (1 subgoal):\n 1. \\<And>x t.\n       \\<lbrakk>x \\<in> S; t \\<in> T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u>0.\n                            \\<exists>L.\n                               \\<forall>t\\<in>cball t u \\<inter> T.\n                                  0 \\<le> L \\<and>\n                                  (\\<forall>xa\\<in>cball x u \\<inter> S.\n\\<forall>y\\<in>cball x u \\<inter> S.\n   dist (A t *v xa) (A t *v y) \\<le> L * dist xa y)", "have \"Sup {\\<parallel>A \\<tau>\\<parallel>\\<^sub>o\\<^sub>p |\\<tau>. \\<tau> \\<in> cball t (min e1 e2)} \\<ge> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> Sup {\\<parallel>A \\<tau>\\<parallel>\\<^sub>o\\<^sub>p |\\<tau>.\n                 \\<tau> \\<in> cball t (min e1 e2)}", "apply(rule order.trans[OF op_norm_ge_0[of \"A t\"]])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p\n    \\<le> Sup {\\<parallel>A \\<tau>\\<parallel>\\<^sub>o\\<^sub>p |\\<tau>.\n               \\<tau> \\<in> cball t (min e1 e2)}", "by (rule cSup_upper[OF calculation])"], ["proof (state)\nthis:\n  0 \\<le> Sup {\\<parallel>A \\<tau>\\<parallel>\\<^sub>o\\<^sub>p |\\<tau>.\n               \\<tau> \\<in> cball t (min e1 e2)}\n\ngoal (1 subgoal):\n 1. \\<And>x t.\n       \\<lbrakk>x \\<in> S; t \\<in> T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u>0.\n                            \\<exists>L.\n                               \\<forall>t\\<in>cball t u \\<inter> T.\n                                  0 \\<le> L \\<and>\n                                  (\\<forall>xa\\<in>cball x u \\<inter> S.\n\\<forall>y\\<in>cball x u \\<inter> S.\n   dist (A t *v xa) (A t *v y) \\<le> L * dist xa y)", "moreover"], ["proof (state)\nthis:\n  0 \\<le> Sup {\\<parallel>A \\<tau>\\<parallel>\\<^sub>o\\<^sub>p |\\<tau>.\n               \\<tau> \\<in> cball t (min e1 e2)}\n\ngoal (1 subgoal):\n 1. \\<And>x t.\n       \\<lbrakk>x \\<in> S; t \\<in> T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u>0.\n                            \\<exists>L.\n                               \\<forall>t\\<in>cball t u \\<inter> T.\n                                  0 \\<le> L \\<and>\n                                  (\\<forall>xa\\<in>cball x u \\<inter> S.\n\\<forall>y\\<in>cball x u \\<inter> S.\n   dist (A t *v xa) (A t *v y) \\<le> L * dist xa y)", "have \"\\<forall>x\\<in>cball s (min e1 e2) \\<inter> S. \\<forall>y\\<in>cball s (min e1 e2) \\<inter> S. \n    \\<forall>\\<tau>\\<in>cball t (min e1 e2) \\<inter> T. dist (A \\<tau> *v x) (A \\<tau> *v y) \\<le> ?L * dist x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>cball s (min e1 e2) \\<inter> S.\n       \\<forall>y\\<in>cball s (min e1 e2) \\<inter> S.\n          \\<forall>\\<tau>\\<in>cball t (min e1 e2) \\<inter> T.\n             dist (A \\<tau> *v x) (A \\<tau> *v y)\n             \\<le> Sup {\\<parallel>A \\<tau>\\<parallel>\\<^sub>o\\<^sub>p |\n                        \\<tau>. \\<tau> \\<in> cball t (min e1 e2)} *\n                   dist x y", "apply(clarify, simp only: dist_norm, rule lipschitz_cond_affine)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x y \\<tau>.\n       \\<lbrakk>x \\<in> cball s (min e1 e2); x \\<in> S;\n        y \\<in> cball s (min e1 e2); y \\<in> S;\n        \\<tau> \\<in> cball t (min e1 e2); \\<tau> \\<in> T\\<rbrakk>\n       \\<Longrightarrow> \\<tau> \\<in> cball t (min e1 e2)\n 2. \\<And>x y \\<tau>.\n       \\<lbrakk>x \\<in> cball s (min e1 e2); x \\<in> S;\n        y \\<in> cball s (min e1 e2); y \\<in> S;\n        \\<tau> \\<in> cball t (min e1 e2); \\<tau> \\<in> T\\<rbrakk>\n       \\<Longrightarrow> bdd_above\n                          {\\<parallel>A \\<tau>\\<parallel>\\<^sub>o\\<^sub>p |\n                           \\<tau>. \\<tau> \\<in> cball t (min e1 e2)}", "using \\<open>min e1 e2 > 0\\<close> bdd"], ["proof (prove)\nusing this:\n  0 < min e1 e2\n  bdd_above\n   {\\<parallel>A \\<tau>\\<parallel>\\<^sub>o\\<^sub>p |\\<tau>.\n    \\<tau> \\<in> cball t (min e1 e2)}\n\ngoal (2 subgoals):\n 1. \\<And>x y \\<tau>.\n       \\<lbrakk>x \\<in> cball s (min e1 e2); x \\<in> S;\n        y \\<in> cball s (min e1 e2); y \\<in> S;\n        \\<tau> \\<in> cball t (min e1 e2); \\<tau> \\<in> T\\<rbrakk>\n       \\<Longrightarrow> \\<tau> \\<in> cball t (min e1 e2)\n 2. \\<And>x y \\<tau>.\n       \\<lbrakk>x \\<in> cball s (min e1 e2); x \\<in> S;\n        y \\<in> cball s (min e1 e2); y \\<in> S;\n        \\<tau> \\<in> cball t (min e1 e2); \\<tau> \\<in> T\\<rbrakk>\n       \\<Longrightarrow> bdd_above\n                          {\\<parallel>A \\<tau>\\<parallel>\\<^sub>o\\<^sub>p |\n                           \\<tau>. \\<tau> \\<in> cball t (min e1 e2)}", "by auto"], ["proof (state)\nthis:\n  \\<forall>x\\<in>cball s (min e1 e2) \\<inter> S.\n     \\<forall>y\\<in>cball s (min e1 e2) \\<inter> S.\n        \\<forall>\\<tau>\\<in>cball t (min e1 e2) \\<inter> T.\n           dist (A \\<tau> *v x) (A \\<tau> *v y)\n           \\<le> Sup {\\<parallel>A \\<tau>\\<parallel>\\<^sub>o\\<^sub>p |\n                      \\<tau>. \\<tau> \\<in> cball t (min e1 e2)} *\n                 dist x y\n\ngoal (1 subgoal):\n 1. \\<And>x t.\n       \\<lbrakk>x \\<in> S; t \\<in> T\\<rbrakk>\n       \\<Longrightarrow> \\<exists>u>0.\n                            \\<exists>L.\n                               \\<forall>t\\<in>cball t u \\<inter> T.\n                                  0 \\<le> L \\<and>\n                                  (\\<forall>xa\\<in>cball x u \\<inter> S.\n\\<forall>y\\<in>cball x u \\<inter> S.\n   dist (A t *v xa) (A t *v y) \\<le> L * dist xa y)", "ultimately"], ["proof (chain)\npicking this:\n  \\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p\n  \\<in> {\\<parallel>A \\<tau>\\<parallel>\\<^sub>o\\<^sub>p |\\<tau>.\n         \\<tau> \\<in> cball t (min e1 e2)}\n  bdd_above\n   {\\<parallel>A \\<tau>\\<parallel>\\<^sub>o\\<^sub>p |\\<tau>.\n    \\<tau> \\<in> cball t (min e1 e2)}\n  0 \\<le> Sup {\\<parallel>A \\<tau>\\<parallel>\\<^sub>o\\<^sub>p |\\<tau>.\n               \\<tau> \\<in> cball t (min e1 e2)}\n  \\<forall>x\\<in>cball s (min e1 e2) \\<inter> S.\n     \\<forall>y\\<in>cball s (min e1 e2) \\<inter> S.\n        \\<forall>\\<tau>\\<in>cball t (min e1 e2) \\<inter> T.\n           dist (A \\<tau> *v x) (A \\<tau> *v y)\n           \\<le> Sup {\\<parallel>A \\<tau>\\<parallel>\\<^sub>o\\<^sub>p |\n                      \\<tau>. \\<tau> \\<in> cball t (min e1 e2)} *\n                 dist x y", "show \"\\<exists>e>0. \\<exists>L. \\<forall>t\\<in>cball t e \\<inter> T. 0 \\<le> L \\<and> \n    (\\<forall>x\\<in>cball s e \\<inter> S. \\<forall>y\\<in>cball s e \\<inter> S. dist (A t *v x) (A t *v y) \\<le> L * dist x y)\""], ["proof (prove)\nusing this:\n  \\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p\n  \\<in> {\\<parallel>A \\<tau>\\<parallel>\\<^sub>o\\<^sub>p |\\<tau>.\n         \\<tau> \\<in> cball t (min e1 e2)}\n  bdd_above\n   {\\<parallel>A \\<tau>\\<parallel>\\<^sub>o\\<^sub>p |\\<tau>.\n    \\<tau> \\<in> cball t (min e1 e2)}\n  0 \\<le> Sup {\\<parallel>A \\<tau>\\<parallel>\\<^sub>o\\<^sub>p |\\<tau>.\n               \\<tau> \\<in> cball t (min e1 e2)}\n  \\<forall>x\\<in>cball s (min e1 e2) \\<inter> S.\n     \\<forall>y\\<in>cball s (min e1 e2) \\<inter> S.\n        \\<forall>\\<tau>\\<in>cball t (min e1 e2) \\<inter> T.\n           dist (A \\<tau> *v x) (A \\<tau> *v y)\n           \\<le> Sup {\\<parallel>A \\<tau>\\<parallel>\\<^sub>o\\<^sub>p |\n                      \\<tau>. \\<tau> \\<in> cball t (min e1 e2)} *\n                 dist x y\n\ngoal (1 subgoal):\n 1. \\<exists>e>0.\n       \\<exists>L.\n          \\<forall>t\\<in>cball t e \\<inter> T.\n             0 \\<le> L \\<and>\n             (\\<forall>x\\<in>cball s e \\<inter> S.\n                 \\<forall>y\\<in>cball s e \\<inter> S.\n                    dist (A t *v x) (A t *v y) \\<le> L * dist x y)", "using \\<open>min e1 e2 > 0\\<close>"], ["proof (prove)\nusing this:\n  \\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p\n  \\<in> {\\<parallel>A \\<tau>\\<parallel>\\<^sub>o\\<^sub>p |\\<tau>.\n         \\<tau> \\<in> cball t (min e1 e2)}\n  bdd_above\n   {\\<parallel>A \\<tau>\\<parallel>\\<^sub>o\\<^sub>p |\\<tau>.\n    \\<tau> \\<in> cball t (min e1 e2)}\n  0 \\<le> Sup {\\<parallel>A \\<tau>\\<parallel>\\<^sub>o\\<^sub>p |\\<tau>.\n               \\<tau> \\<in> cball t (min e1 e2)}\n  \\<forall>x\\<in>cball s (min e1 e2) \\<inter> S.\n     \\<forall>y\\<in>cball s (min e1 e2) \\<inter> S.\n        \\<forall>\\<tau>\\<in>cball t (min e1 e2) \\<inter> T.\n           dist (A \\<tau> *v x) (A \\<tau> *v y)\n           \\<le> Sup {\\<parallel>A \\<tau>\\<parallel>\\<^sub>o\\<^sub>p |\n                      \\<tau>. \\<tau> \\<in> cball t (min e1 e2)} *\n                 dist x y\n  0 < min e1 e2\n\ngoal (1 subgoal):\n 1. \\<exists>e>0.\n       \\<exists>L.\n          \\<forall>t\\<in>cball t e \\<inter> T.\n             0 \\<le> L \\<and>\n             (\\<forall>x\\<in>cball s e \\<inter> S.\n                 \\<forall>y\\<in>cball s e \\<inter> S.\n                    dist (A t *v x) (A t *v y) \\<le> L * dist x y)", "by blast"], ["proof (state)\nthis:\n  \\<exists>e>0.\n     \\<exists>L.\n        \\<forall>t\\<in>cball t e \\<inter> T.\n           0 \\<le> L \\<and>\n           (\\<forall>x\\<in>cball s e \\<inter> S.\n               \\<forall>y\\<in>cball s e \\<inter> S.\n                  dist (A t *v x) (A t *v y) \\<le> L * dist x y)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma picard_lindeloef_affine:\n  fixes A :: \"real \\<Rightarrow> 'a::{banach,real_normed_algebra_1,heine_borel}^'n^'n\"\n  assumes Ahyp: \"matrix_continuous_on T A\"\n      and \"\\<And>\\<tau> \\<epsilon>. \\<tau> \\<in> T \\<Longrightarrow> \\<epsilon> > 0 \\<Longrightarrow> bdd_above {\\<parallel>A t\\<parallel>\\<^sub>o\\<^sub>p |t. dist \\<tau> t \\<le> \\<epsilon>}\"\n      and Bhyp: \"continuous_on T B\" and \"open S\" \n      and \"t\\<^sub>0 \\<in> T\" and Thyp: \"open T\" \"is_interval T\" \n    shows \"picard_lindeloef (\\<lambda> t s. A t *v s + B t) T S t\\<^sub>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. picard_lindeloef (\\<lambda>t s. A t *v s + B t) T S t\\<^sub>0", "apply (unfold_locales, simp_all add: assms, clarsimp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s.\n       s \\<in> S \\<Longrightarrow>\n       continuous_on T (\\<lambda>t. A t *v s + B t)\n 2. local_lipschitz T S (\\<lambda>t s. A t *v s + B t)", "apply (rule continuous_on_add[OF continuous_on_matrix_vector_multl[OF Ahyp] Bhyp])"], ["proof (prove)\ngoal (1 subgoal):\n 1. local_lipschitz T S (\\<lambda>t s. A t *v s + B t)", "by (rule local_lipschitz_affine) (simp_all add: assms)"], ["", "lemma picard_lindeloef_autonomous_affine: \n  fixes A :: \"'a::{banach,real_normed_field,heine_borel}^'n^'n\"\n  shows \"picard_lindeloef (\\<lambda> t s. A *v s + B) UNIV UNIV t\\<^sub>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. picard_lindeloef (\\<lambda>t s. A *v s + B) UNIV UNIV t\\<^sub>0", "using picard_lindeloef_affine[of _ \"\\<lambda>t. A\" \"\\<lambda>t. B\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>matrix_continuous_on ?T (\\<lambda>t. A);\n   \\<And>\\<tau> \\<epsilon>.\n      \\<lbrakk>\\<tau> \\<in> ?T; 0 < \\<epsilon>\\<rbrakk>\n      \\<Longrightarrow> bdd_above\n                         {uu_.\n                          \\<exists>t.\n                             uu_ =\n                             \\<parallel>A\\<parallel>\\<^sub>o\\<^sub>p \\<and>\n                             dist \\<tau> t \\<le> \\<epsilon>};\n   continuous_on ?T (\\<lambda>t. B); open ?S; ?t\\<^sub>0 \\<in> ?T; open ?T;\n   is_interval ?T\\<rbrakk>\n  \\<Longrightarrow> picard_lindeloef (\\<lambda>t s. A *v s + B) ?T ?S\n                     ?t\\<^sub>0\n\ngoal (1 subgoal):\n 1. picard_lindeloef (\\<lambda>t s. A *v s + B) UNIV UNIV t\\<^sub>0", "unfolding matrix_continuous_on_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<forall>t\\<in>?T.\n              \\<forall>\\<epsilon>>0.\n                 \\<exists>\\<delta>>0.\n                    \\<forall>\\<tau>\\<in>?T.\n                       \\<bar>\\<tau> - t\\<bar> < \\<delta> \\<longrightarrow>\n                       \\<parallel>A - A\\<parallel>\\<^sub>o\\<^sub>p\n                       \\<le> \\<epsilon>;\n   \\<And>\\<tau> \\<epsilon>.\n      \\<lbrakk>\\<tau> \\<in> ?T; 0 < \\<epsilon>\\<rbrakk>\n      \\<Longrightarrow> bdd_above\n                         {uu_.\n                          \\<exists>t.\n                             uu_ =\n                             \\<parallel>A\\<parallel>\\<^sub>o\\<^sub>p \\<and>\n                             dist \\<tau> t \\<le> \\<epsilon>};\n   continuous_on ?T (\\<lambda>t. B); open ?S; ?t\\<^sub>0 \\<in> ?T; open ?T;\n   is_interval ?T\\<rbrakk>\n  \\<Longrightarrow> picard_lindeloef (\\<lambda>t s. A *v s + B) ?T ?S\n                     ?t\\<^sub>0\n\ngoal (1 subgoal):\n 1. picard_lindeloef (\\<lambda>t s. A *v s + B) UNIV UNIV t\\<^sub>0", "by (simp only: diff_self op_norm0, auto)"], ["", "lemma picard_lindeloef_autonomous_linear:\n  fixes A :: \"'a::{banach,real_normed_field,heine_borel}^'n^'n\"\n  shows \"picard_lindeloef (\\<lambda> t. (*v) A) UNIV UNIV t\\<^sub>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. picard_lindeloef (\\<lambda>t. (*v) A) UNIV UNIV t\\<^sub>0", "using picard_lindeloef_autonomous_affine[of A 0]"], ["proof (prove)\nusing this:\n  picard_lindeloef (\\<lambda>t s. A *v s + 0) UNIV UNIV ?t\\<^sub>0\n\ngoal (1 subgoal):\n 1. picard_lindeloef (\\<lambda>t. (*v) A) UNIV UNIV t\\<^sub>0", "by force"], ["", "lemmas unique_sol_autonomous_affine = picard_lindeloef.ivp_unique_solution[OF \n    picard_lindeloef_autonomous_affine UNIV_I _ subset_UNIV]"], ["", "lemmas unique_sol_autonomous_linear = picard_lindeloef.ivp_unique_solution[OF \n    picard_lindeloef_autonomous_linear UNIV_I _ subset_UNIV]"], ["", "subsection \\<open> Flow for affine systems \\<close>"], ["", "subsubsection \\<open> Derivative rules for square matrices \\<close>"], ["", "lemma has_derivative_exp_scaleRl[derivative_intros]:\n  fixes f::\"real \\<Rightarrow> real\" (* by Fabian Immler and Johannes H?lzl *)\n  assumes \"D f \\<mapsto> f' at t within T\"\n  shows \"D (\\<lambda>t. exp (f t *\\<^sub>R A)) \\<mapsto> (\\<lambda>h. f' h *\\<^sub>R (exp (f t *\\<^sub>R A) * A)) at t within T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D (\\<lambda>t.\n          exp (f t *\\<^sub>R\n               A)) \\<mapsto> (\\<lambda>h.\n                                 f' h *\\<^sub>R (exp (f t *\\<^sub>R A) * A))\n     at t within T", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. D (\\<lambda>t.\n          exp (f t *\\<^sub>R\n               A)) \\<mapsto> (\\<lambda>h.\n                                 f' h *\\<^sub>R (exp (f t *\\<^sub>R A) * A))\n     at t within T", "have \"bounded_linear f'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bounded_linear f'", "using assms"], ["proof (prove)\nusing this:\n  D f \\<mapsto> f' at t within T\n\ngoal (1 subgoal):\n 1. bounded_linear f'", "by auto"], ["proof (state)\nthis:\n  bounded_linear f'\n\ngoal (1 subgoal):\n 1. D (\\<lambda>t.\n          exp (f t *\\<^sub>R\n               A)) \\<mapsto> (\\<lambda>h.\n                                 f' h *\\<^sub>R (exp (f t *\\<^sub>R A) * A))\n     at t within T", "then"], ["proof (chain)\npicking this:\n  bounded_linear f'", "obtain m where obs: \"f' = (\\<lambda>h. h * m)\""], ["proof (prove)\nusing this:\n  bounded_linear f'\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        f' = (\\<lambda>h. h * m) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using real_bounded_linear"], ["proof (prove)\nusing this:\n  bounded_linear f'\n  bounded_linear ?f = (\\<exists>c. ?f = (\\<lambda>x. x * c))\n\ngoal (1 subgoal):\n 1. (\\<And>m.\n        f' = (\\<lambda>h. h * m) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  f' = (\\<lambda>h. h * m)\n\ngoal (1 subgoal):\n 1. D (\\<lambda>t.\n          exp (f t *\\<^sub>R\n               A)) \\<mapsto> (\\<lambda>h.\n                                 f' h *\\<^sub>R (exp (f t *\\<^sub>R A) * A))\n     at t within T", "thus ?thesis"], ["proof (prove)\nusing this:\n  f' = (\\<lambda>h. h * m)\n\ngoal (1 subgoal):\n 1. D (\\<lambda>t.\n          exp (f t *\\<^sub>R\n               A)) \\<mapsto> (\\<lambda>h.\n                                 f' h *\\<^sub>R (exp (f t *\\<^sub>R A) * A))\n     at t within T", "using vector_diff_chain_within[OF _ exp_scaleR_has_vector_derivative_right] \n      assms obs"], ["proof (prove)\nusing this:\n  f' = (\\<lambda>h. h * m)\n  (?f has_vector_derivative ?f') (at ?x within ?s) \\<Longrightarrow>\n  ((\\<lambda>t. exp (t *\\<^sub>R ?A1)) \\<circ> ?f has_vector_derivative\n   ?f' *\\<^sub>R (exp (?f ?x *\\<^sub>R ?A1) * ?A1))\n   (at ?x within ?s)\n  D f \\<mapsto> f' at t within T\n  f' = (\\<lambda>h. h * m)\n\ngoal (1 subgoal):\n 1. D (\\<lambda>t.\n          exp (f t *\\<^sub>R\n               A)) \\<mapsto> (\\<lambda>h.\n                                 f' h *\\<^sub>R (exp (f t *\\<^sub>R A) * A))\n     at t within T", "by (auto simp: has_vector_derivative_def comp_def)"], ["proof (state)\nthis:\n  D (\\<lambda>t.\n        exp (f t *\\<^sub>R\n             A)) \\<mapsto> (\\<lambda>h.\n                               f' h *\\<^sub>R (exp (f t *\\<^sub>R A) * A))\n   at t within T\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma vderiv_on_exp_scaleRlI[poly_derivatives]:\n  assumes \"D f = f' on T\" and \"g' = (\\<lambda>x. f' x *\\<^sub>R exp (f x *\\<^sub>R A) * A)\"\n  shows \"D (\\<lambda>x. exp (f x *\\<^sub>R A)) = g' on T\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  D (\\<lambda>x. exp (f x *\\<^sub>R A)) = g' on T", "using assms"], ["proof (prove)\nusing this:\n   D f = f' on T\n  g' = (\\<lambda>x. f' x *\\<^sub>R exp (f x *\\<^sub>R A) * A)\n\ngoal (1 subgoal):\n 1.  D (\\<lambda>x. exp (f x *\\<^sub>R A)) = g' on T", "unfolding has_vderiv_on_def has_vector_derivative_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>T.\n     D f \\<mapsto> (\\<lambda>xa. xa *\\<^sub>R f' x) at x within T\n  g' = (\\<lambda>x. f' x *\\<^sub>R exp (f x *\\<^sub>R A) * A)\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>T.\n       D (\\<lambda>x.\n             exp (f x *\\<^sub>R\n                  A)) \\<mapsto> (\\<lambda>xa. xa *\\<^sub>R g' x)\n        at x within T", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>x\\<in>T.\n                   D f \\<mapsto> (\\<lambda>xa. xa * f' x) at x within T;\n        g' = (\\<lambda>x. f' x *\\<^sub>R (exp (f x *\\<^sub>R A) * A));\n        x \\<in> T\\<rbrakk>\n       \\<Longrightarrow> D (\\<lambda>x.\n                               exp (f x *\\<^sub>R\n                                    A)) \\<mapsto> (\\<lambda>xa.\n                (xa * f' x) *\\<^sub>R (exp (f x *\\<^sub>R A) * A))\n                          at x within T", "by (rule has_derivative_exp_scaleRl, auto simp: fun_eq_iff)"], ["", "lemma has_derivative_mtx_ith[derivative_intros]:\n  fixes t::real and T :: \"real set\"\n  defines \"t\\<^sub>0 \\<equiv> netlimit (at t within T)\"\n  assumes \"D A \\<mapsto> (\\<lambda>h. h *\\<^sub>R A' t) at t within T\"\n  shows \"D (\\<lambda>t. A t $$ i) \\<mapsto> (\\<lambda>h. h *\\<^sub>R A' t $$ i) at t within T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D (\\<lambda>t. A t $$ i) \\<mapsto> (\\<lambda>h. h *\\<^sub>R A' t $$ i)\n     at t within T", "using assms"], ["proof (prove)\nusing this:\n  t\\<^sub>0 \\<equiv> netlimit (at t within T)\n  D A \\<mapsto> (\\<lambda>h. h *\\<^sub>R A' t) at t within T\n\ngoal (1 subgoal):\n 1. D (\\<lambda>t. A t $$ i) \\<mapsto> (\\<lambda>h. h *\\<^sub>R A' t $$ i)\n     at t within T", "unfolding has_derivative_def"], ["proof (prove)\nusing this:\n  t\\<^sub>0 \\<equiv> netlimit (at t within T)\n  bounded_linear (\\<lambda>h. h *\\<^sub>R A' t) \\<and>\n  ((\\<lambda>y.\n       (A y - A (netlimit (at t within T)) -\n        (y - netlimit (at t within T)) *\\<^sub>R A' t) /\\<^sub>R\n       (\\<parallel>y -\n                   netlimit\n                    (at t within T)\\<parallel>)) \\<longlongrightarrow>\n   0)\n   (at t within T)\n\ngoal (1 subgoal):\n 1. bounded_linear (\\<lambda>h. h *\\<^sub>R A' t $$ i) \\<and>\n    ((\\<lambda>y.\n         (A y $$ i - A (netlimit (at t within T)) $$ i -\n          (y - netlimit (at t within T)) *\\<^sub>R A' t $$ i) /\\<^sub>R\n         (\\<parallel>y -\n                     netlimit\n                      (at t within T)\\<parallel>)) \\<longlongrightarrow>\n     0)\n     (at t within T)", "apply safe"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>t\\<^sub>0 \\<equiv> netlimit (at t within T);\n     bounded_linear (\\<lambda>h. h *\\<^sub>R A' t);\n     ((\\<lambda>y.\n          (A y - A (netlimit (at t within T)) -\n           (y - netlimit (at t within T)) *\\<^sub>R A' t) /\\<^sub>R\n          (\\<parallel>y -\n                      netlimit\n                       (at t within T)\\<parallel>)) \\<longlongrightarrow>\n      0)\n      (at t within T)\\<rbrakk>\n    \\<Longrightarrow> bounded_linear (\\<lambda>h. h *\\<^sub>R A' t $$ i)\n 2. \\<lbrakk>t\\<^sub>0 \\<equiv> netlimit (at t within T);\n     bounded_linear (\\<lambda>h. h *\\<^sub>R A' t);\n     ((\\<lambda>y.\n          (A y - A (netlimit (at t within T)) -\n           (y - netlimit (at t within T)) *\\<^sub>R A' t) /\\<^sub>R\n          (\\<parallel>y -\n                      netlimit\n                       (at t within T)\\<parallel>)) \\<longlongrightarrow>\n      0)\n      (at t within T)\\<rbrakk>\n    \\<Longrightarrow> ((\\<lambda>y.\n                           (A y $$ i - A (netlimit (at t within T)) $$ i -\n                            (y - netlimit (at t within T)) *\\<^sub>R\n                            A' t $$ i) /\\<^sub>R\n                           (\\<parallel>y -\n netlimit (at t within T)\\<parallel>)) \\<longlongrightarrow>\n                       0)\n                       (at t within T)", "apply(force simp: bounded_linear_def bounded_linear_axioms_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t\\<^sub>0 \\<equiv> netlimit (at t within T);\n     bounded_linear (\\<lambda>h. h *\\<^sub>R A' t);\n     ((\\<lambda>y.\n          (A y - A (netlimit (at t within T)) -\n           (y - netlimit (at t within T)) *\\<^sub>R A' t) /\\<^sub>R\n          (\\<parallel>y -\n                      netlimit\n                       (at t within T)\\<parallel>)) \\<longlongrightarrow>\n      0)\n      (at t within T)\\<rbrakk>\n    \\<Longrightarrow> ((\\<lambda>y.\n                           (A y $$ i - A (netlimit (at t within T)) $$ i -\n                            (y - netlimit (at t within T)) *\\<^sub>R\n                            A' t $$ i) /\\<^sub>R\n                           (\\<parallel>y -\n netlimit (at t within T)\\<parallel>)) \\<longlongrightarrow>\n                       0)\n                       (at t within T)", "apply(rule_tac F=\"\\<lambda>\\<tau>. (A \\<tau> - A t\\<^sub>0 - (\\<tau> - t\\<^sub>0) *\\<^sub>R A' t) /\\<^sub>R (\\<parallel>\\<tau> - t\\<^sub>0\\<parallel>)\" in tendsto_zero_norm_bound)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>t\\<^sub>0 \\<equiv> netlimit (at t within T);\n     bounded_linear (\\<lambda>h. h *\\<^sub>R A' t);\n     ((\\<lambda>y.\n          (A y - A (netlimit (at t within T)) -\n           (y - netlimit (at t within T)) *\\<^sub>R A' t) /\\<^sub>R\n          (\\<parallel>y -\n                      netlimit\n                       (at t within T)\\<parallel>)) \\<longlongrightarrow>\n      0)\n      (at t within T)\\<rbrakk>\n    \\<Longrightarrow> \\<forall>x.\n                         \\<parallel>(A x $$ i -\n                                     A (netlimit (at t within T)) $$ i -\n                                     (x -\nnetlimit (at t within T)) *\\<^sub>R\n                                     A' t $$ i) /\\<^sub>R\n                                    (\\<parallel>x -\n          netlimit (at t within T)\\<parallel>)\\<parallel>\n                         \\<le> \\<parallel>(A x - A t\\<^sub>0 -\n     (x - t\\<^sub>0) *\\<^sub>R A' t) /\\<^sub>R\n    (\\<parallel>x - t\\<^sub>0\\<parallel>)\\<parallel>\n 2. \\<lbrakk>t\\<^sub>0 \\<equiv> netlimit (at t within T);\n     bounded_linear (\\<lambda>h. h *\\<^sub>R A' t);\n     ((\\<lambda>y.\n          (A y - A (netlimit (at t within T)) -\n           (y - netlimit (at t within T)) *\\<^sub>R A' t) /\\<^sub>R\n          (\\<parallel>y -\n                      netlimit\n                       (at t within T)\\<parallel>)) \\<longlongrightarrow>\n      0)\n      (at t within T)\\<rbrakk>\n    \\<Longrightarrow> ((\\<lambda>\\<tau>.\n                           (A \\<tau> - A t\\<^sub>0 -\n                            (\\<tau> - t\\<^sub>0) *\\<^sub>R A' t) /\\<^sub>R\n                           (\\<parallel>\\<tau> -\n t\\<^sub>0\\<parallel>)) \\<longlongrightarrow>\n                       0)\n                       (at t within T)", "by (clarsimp, rule mult_left_mono, metis (no_types, lifting) norm_column_le_norm \n      sq_mtx_minus_ith sq_mtx_scaleR_ith) simp_all"], ["", "lemmas has_derivative_mtx_vec_mult[derivative_intros] = \n  bounded_bilinear.FDERIV[OF bounded_bilinear_sq_mtx_vec_mult]"], ["", "lemma vderiv_on_mtx_vec_multI[poly_derivatives]:\n  assumes \"D u = u' on T\" and \"D A = A' on T\"\n      and \"g = (\\<lambda>t. A t *\\<^sub>V u' t + A' t *\\<^sub>V u t )\"\n    shows \"D (\\<lambda>t. A t *\\<^sub>V u t) = g on T\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  D (\\<lambda>t. A t *\\<^sub>V u t) = g on T", "using assms"], ["proof (prove)\nusing this:\n   D u = u' on T\n   D A = A' on T\n  g = (\\<lambda>t. A t *\\<^sub>V u' t + A' t *\\<^sub>V u t)\n\ngoal (1 subgoal):\n 1.  D (\\<lambda>t. A t *\\<^sub>V u t) = g on T", "unfolding has_vderiv_on_def has_vector_derivative_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>T.\n     D u \\<mapsto> (\\<lambda>xa. xa *\\<^sub>R u' x) at x within T\n  \\<forall>x\\<in>T.\n     D A \\<mapsto> (\\<lambda>xa. xa *\\<^sub>R A' x) at x within T\n  g = (\\<lambda>t. A t *\\<^sub>V u' t + A' t *\\<^sub>V u t)\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>T.\n       D (\\<lambda>t.\n             A t *\\<^sub>V u t) \\<mapsto> (\\<lambda>xa. xa *\\<^sub>R g x)\n        at x within T", "apply clarsimp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>\\<forall>x\\<in>T.\n                   D u \\<mapsto> (\\<lambda>xa. xa *\\<^sub>R u' x) at x\n                    within T;\n        \\<forall>x\\<in>T.\n           D A \\<mapsto> (\\<lambda>xa. xa *\\<^sub>R A' x) at x within T;\n        g = (\\<lambda>t. A t *\\<^sub>V u' t + A' t *\\<^sub>V u t);\n        x \\<in> T\\<rbrakk>\n       \\<Longrightarrow> D (\\<lambda>t.\n                               A t *\\<^sub>V\n                               u t) \\<mapsto> (\\<lambda>xa.\n            xa *\\<^sub>R (A x *\\<^sub>V u' x + A' x *\\<^sub>V u x))\n                          at x within T", "apply(erule_tac x=x in ballE, simp_all)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>g = (\\<lambda>t. A t *\\<^sub>V u' t + A' t *\\<^sub>V u t);\n        x \\<in> T;\n        D u \\<mapsto> (\\<lambda>xa. xa *\\<^sub>R u' x) at x within T;\n        D A \\<mapsto> (\\<lambda>xa. xa *\\<^sub>R A' x) at x\n         within T\\<rbrakk>\n       \\<Longrightarrow> D (\\<lambda>t.\n                               A t *\\<^sub>V\n                               u t) \\<mapsto> (\\<lambda>xa.\n            xa *\\<^sub>R (A x *\\<^sub>V u' x + A' x *\\<^sub>V u x))\n                          at x within T", "apply(rule derivative_eq_intros)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>g = (\\<lambda>t. A t *\\<^sub>V u' t + A' t *\\<^sub>V u t);\n        x \\<in> T;\n        D u \\<mapsto> (\\<lambda>xa. xa *\\<^sub>R u' x) at x within T;\n        D A \\<mapsto> (\\<lambda>xa. xa *\\<^sub>R A' x) at x\n         within T\\<rbrakk>\n       \\<Longrightarrow> D A \\<mapsto> ?f'10 x at x within T\n 2. \\<And>x.\n       \\<lbrakk>g = (\\<lambda>t. A t *\\<^sub>V u' t + A' t *\\<^sub>V u t);\n        x \\<in> T;\n        D u \\<mapsto> (\\<lambda>xa. xa *\\<^sub>R u' x) at x within T;\n        D A \\<mapsto> (\\<lambda>xa. xa *\\<^sub>R A' x) at x\n         within T\\<rbrakk>\n       \\<Longrightarrow> D u \\<mapsto> ?g'10 x at x within T\n 3. \\<And>x.\n       \\<lbrakk>g = (\\<lambda>t. A t *\\<^sub>V u' t + A' t *\\<^sub>V u t);\n        x \\<in> T;\n        D u \\<mapsto> (\\<lambda>xa. xa *\\<^sub>R u' x) at x within T;\n        D A \\<mapsto> (\\<lambda>xa. xa *\\<^sub>R A' x) at x\n         within T\\<rbrakk>\n       \\<Longrightarrow> (\\<lambda>h.\n                             A x *\\<^sub>V ?g'10 x h +\n                             ?f'10 x h *\\<^sub>V u x) =\n                         (\\<lambda>xa.\n                             xa *\\<^sub>R\n                             (A x *\\<^sub>V u' x + A' x *\\<^sub>V u x))", "by (auto simp: fun_eq_iff mtx_vec_scaleR_commute pth_6 scaleR_mtx_vec_assoc)"], ["", "lemmas has_vderiv_on_ivl_integral = ivl_integral_has_vderiv_on[OF vderiv_on_continuous_on]"], ["", "declare has_vderiv_on_ivl_integral [poly_derivatives]"], ["", "lemma has_derivative_mtx_vec_multl[derivative_intros]:\n  assumes \"\\<And> i j. D (\\<lambda>t. (A t) $$ i $ j) \\<mapsto> (\\<lambda>\\<tau>. \\<tau> *\\<^sub>R (A' t) $$ i $ j) (at t within T)\"\n  shows \"D (\\<lambda>t. A t *\\<^sub>V x) \\<mapsto> (\\<lambda>\\<tau>. \\<tau> *\\<^sub>R (A' t) *\\<^sub>V x) at t within T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D (\\<lambda>t.\n          A t *\\<^sub>V\n          x) \\<mapsto> (\\<lambda>\\<tau>. \\<tau> *\\<^sub>R A' t *\\<^sub>V x)\n     at t within T", "unfolding sq_mtx_vec_mult_sum_cols"], ["proof (prove)\ngoal (1 subgoal):\n 1. D (\\<lambda>t.\n          \\<Sum>i\\<in>UNIV.\n            x $ i *\\<^sub>R\n            \\<c>\\<o>\\<l> i\n             (A t)) \\<mapsto> (\\<lambda>\\<tau>.\n                                  \\<tau> *\\<^sub>R\n                                  (\\<Sum>i\\<in>UNIV.\n                                     x $ i *\\<^sub>R \\<c>\\<o>\\<l> i (A' t)))\n     at t within T", "apply(rule_tac f'1=\"\\<lambda>i \\<tau>. \\<tau> *\\<^sub>R  (x $ i *\\<^sub>R \\<c>\\<o>\\<l> i (A' t))\" in derivative_eq_intros(10))"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>i.\n       i \\<in> UNIV \\<Longrightarrow>\n       D (\\<lambda>xa.\n             x $ i *\\<^sub>R\n             \\<c>\\<o>\\<l> i\n              (A xa)) \\<mapsto> (\\<lambda>\\<tau>.\n                                    \\<tau> *\\<^sub>R\n                                    x $ i *\\<^sub>R \\<c>\\<o>\\<l> i (A' t))\n        at t within T\n 2. (\\<lambda>xa.\n        \\<Sum>i\\<in>UNIV.\n          xa *\\<^sub>R x $ i *\\<^sub>R \\<c>\\<o>\\<l> i (A' t)) =\n    (\\<lambda>\\<tau>.\n        \\<tau> *\\<^sub>R\n        (\\<Sum>i\\<in>UNIV. x $ i *\\<^sub>R \\<c>\\<o>\\<l> i (A' t)))", "apply(simp_all add: scaleR_right.sum)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       D (\\<lambda>xa.\n             x $ i *\\<^sub>R\n             \\<c>\\<o>\\<l> i\n              (A xa)) \\<mapsto> (\\<lambda>\\<tau>.\n                                    (\\<tau> * x $ i) *\\<^sub>R\n                                    \\<c>\\<o>\\<l> i (A' t))\n        at t within T", "apply(rule_tac g'1=\"\\<lambda>\\<tau>. \\<tau> *\\<^sub>R \\<c>\\<o>\\<l> i (A' t)\" in derivative_eq_intros(4), simp_all add: mult.commute)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       D (\\<lambda>x.\n             \\<c>\\<o>\\<l> i\n              (A x)) \\<mapsto> (\\<lambda>\\<tau>.\n                                   \\<tau> *\\<^sub>R \\<c>\\<o>\\<l> i (A' t))\n        at t within T", "using assms"], ["proof (prove)\nusing this:\n  D (\\<lambda>t.\n        A t $$ ?i $\n        ?j) \\<mapsto> (\\<lambda>\\<tau>. \\<tau> *\\<^sub>R A' t $$ ?i $ ?j)\n   at t within T\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       D (\\<lambda>x.\n             \\<c>\\<o>\\<l> i\n              (A x)) \\<mapsto> (\\<lambda>\\<tau>.\n                                   \\<tau> *\\<^sub>R \\<c>\\<o>\\<l> i (A' t))\n        at t within T", "unfolding sq_mtx_col_def column_def"], ["proof (prove)\nusing this:\n  D (\\<lambda>t.\n        A t $$ ?i $\n        ?j) \\<mapsto> (\\<lambda>\\<tau>. \\<tau> *\\<^sub>R A' t $$ ?i $ ?j)\n   at t within T\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       D (\\<lambda>x.\n             map_fun id (map_fun to_vec id)\n              (\\<lambda>j A. \\<chi>i. A $ i $ j) i\n              (A x)) \\<mapsto> (\\<lambda>\\<tau>.\n                                   \\<tau> *\\<^sub>R\n                                   map_fun id (map_fun to_vec id)\n                                    (\\<lambda>j A. \\<chi>i. A $ i $ j) i\n                                    (A' t))\n        at t within T", "apply(transfer, simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i Aa A'a ta Ta.\n       \\<lbrakk>\\<And>i j.\n                   D (\\<lambda>t.\n                         Aa t $ i $\n                         j) \\<mapsto> (\\<lambda>\\<tau>.\n    \\<tau> * A'a ta $ i $ j)\n                    at ta within Ta;\n        \\<And>i j.\n           D (\\<lambda>t.\n                 A t $$ i $\n                 j) \\<mapsto> (\\<lambda>\\<tau>. \\<tau> * A' t $$ i $ j)\n            at t within T\\<rbrakk>\n       \\<Longrightarrow> D (\\<lambda>x.\n                               \\<chi>ia.\n                                  Aa x $ ia $\n                                  i) \\<mapsto> (\\<lambda>\\<tau>.\n             \\<tau> *\\<^sub>R (\\<chi>ia. A'a ta $ ia $ i))\n                          at ta within Ta", "apply(rule has_derivative_vec_lambda)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i Aa A'a ta Ta.\n       \\<lbrakk>\\<And>i j.\n                   D (\\<lambda>t.\n                         Aa t $ i $\n                         j) \\<mapsto> (\\<lambda>\\<tau>.\n    \\<tau> * A'a ta $ i $ j)\n                    at ta within Ta;\n        \\<And>i j.\n           D (\\<lambda>t.\n                 A t $$ i $\n                 j) \\<mapsto> (\\<lambda>\\<tau>. \\<tau> * A' t $$ i $ j)\n            at t within T\\<rbrakk>\n       \\<Longrightarrow> \\<forall>ia.\n                            D (\\<lambda>t.\n                                  (\\<chi>ia. Aa t $ ia $ i) $\n                                  ia) \\<mapsto> (\\<lambda>\\<tau>.\n              \\<tau> *\\<^sub>R (\\<chi>ia. A'a ta $ ia $ i) $ ia)\n                             at ta within Ta", "by (simp add: scaleR_vec_def)"], ["", "lemma continuous_on_mtx_vec_multr: \"continuous_on S ((*\\<^sub>V) A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on S ((*\\<^sub>V) A)", "by transfer (simp add: matrix_vector_mult_linear_continuous_on)\n\n\\<comment> \\<open>Automatically generated derivative rules from this subsubsection \\<close>"], ["", "thm derivative_eq_intros(140,141,142,143)"], ["", "subsubsection \\<open> Existence and uniqueness with square matrices \\<close>"], ["", "text \\<open>Finally, we can use the @{term exp} operation to characterize the general solutions for affine \nsystems of ODEs. We show that they satisfy the @{term \"local_flow\"} locale.\\<close>"], ["", "lemma continuous_on_sq_mtx_vec_multl:\n  fixes A :: \"real \\<Rightarrow> ('n::finite) sq_mtx\"\n  assumes \"continuous_on T A\"\n  shows \"continuous_on T (\\<lambda>t. A t *\\<^sub>V s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on T (\\<lambda>t. A t *\\<^sub>V s)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. continuous_on T (\\<lambda>t. A t *\\<^sub>V s)", "have \"matrix_continuous_on T (\\<lambda>t. to_vec (A t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. matrix_continuous_on T (\\<lambda>t. to_vec (A t))", "using assms"], ["proof (prove)\nusing this:\n  continuous_on T A\n\ngoal (1 subgoal):\n 1. matrix_continuous_on T (\\<lambda>t. to_vec (A t))", "by (force simp: continuous_on_iff dist_norm norm_sq_mtx_def matrix_continuous_on_def)"], ["proof (state)\nthis:\n  matrix_continuous_on T (\\<lambda>t. to_vec (A t))\n\ngoal (1 subgoal):\n 1. continuous_on T (\\<lambda>t. A t *\\<^sub>V s)", "hence \"continuous_on T (\\<lambda>t. to_vec (A t) *v s)\""], ["proof (prove)\nusing this:\n  matrix_continuous_on T (\\<lambda>t. to_vec (A t))\n\ngoal (1 subgoal):\n 1. continuous_on T (\\<lambda>t. to_vec (A t) *v s)", "by (rule continuous_on_matrix_vector_multl)"], ["proof (state)\nthis:\n  continuous_on T (\\<lambda>t. to_vec (A t) *v s)\n\ngoal (1 subgoal):\n 1. continuous_on T (\\<lambda>t. A t *\\<^sub>V s)", "thus ?thesis"], ["proof (prove)\nusing this:\n  continuous_on T (\\<lambda>t. to_vec (A t) *v s)\n\ngoal (1 subgoal):\n 1. continuous_on T (\\<lambda>t. A t *\\<^sub>V s)", "by transfer"], ["proof (state)\nthis:\n  continuous_on T (\\<lambda>t. A t *\\<^sub>V s)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemmas continuous_on_affine = continuous_on_add[OF continuous_on_sq_mtx_vec_multl]"], ["", "lemma local_lipschitz_sq_mtx_affine:\n  fixes A :: \"real \\<Rightarrow> ('n::finite) sq_mtx\"\n  assumes \"continuous_on T A\" \"open T\" \"open S\"\n  shows \"local_lipschitz T S (\\<lambda>t s. A t *\\<^sub>V s + B t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local_lipschitz T S (\\<lambda>t s. A t *\\<^sub>V s + B t)", "proof-"], ["proof (state)\ngoal (1 subgoal):\n 1. local_lipschitz T S (\\<lambda>t s. A t *\\<^sub>V s + B t)", "have obs: \"\\<And>\\<tau> \\<epsilon>. 0 < \\<epsilon> \\<Longrightarrow>  \\<tau> \\<in> T \\<Longrightarrow> cball \\<tau> \\<epsilon> \\<subseteq> T \\<Longrightarrow> bdd_above {\\<parallel>A t\\<parallel> |t. t \\<in> cball \\<tau> \\<epsilon>}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<tau> \\<epsilon>.\n       \\<lbrakk>0 < \\<epsilon>; \\<tau> \\<in> T;\n        cball \\<tau> \\<epsilon> \\<subseteq> T\\<rbrakk>\n       \\<Longrightarrow> bdd_above\n                          {\\<parallel>A t\\<parallel> |t.\n                           t \\<in> cball \\<tau> \\<epsilon>}", "by (rule bdd_above_norm_cont_comp, rule continuous_on_subset[OF assms(1)], simp_all)"], ["proof (state)\nthis:\n  \\<lbrakk>0 < ?\\<epsilon>; ?\\<tau> \\<in> T;\n   cball ?\\<tau> ?\\<epsilon> \\<subseteq> T\\<rbrakk>\n  \\<Longrightarrow> bdd_above\n                     {\\<parallel>A t\\<parallel> |t.\n                      t \\<in> cball ?\\<tau> ?\\<epsilon>}\n\ngoal (1 subgoal):\n 1. local_lipschitz T S (\\<lambda>t s. A t *\\<^sub>V s + B t)", "hence \"\\<And>\\<tau> \\<epsilon>. 0 < \\<epsilon> \\<Longrightarrow> \\<tau> \\<in> T \\<Longrightarrow> cball \\<tau> \\<epsilon> \\<subseteq> T \\<Longrightarrow> bdd_above {\\<parallel>to_vec (A t)\\<parallel>\\<^sub>o\\<^sub>p |t. t \\<in> cball \\<tau> \\<epsilon>}\""], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < ?\\<epsilon>; ?\\<tau> \\<in> T;\n   cball ?\\<tau> ?\\<epsilon> \\<subseteq> T\\<rbrakk>\n  \\<Longrightarrow> bdd_above\n                     {\\<parallel>A t\\<parallel> |t.\n                      t \\<in> cball ?\\<tau> ?\\<epsilon>}\n\ngoal (1 subgoal):\n 1. \\<And>\\<tau> \\<epsilon>.\n       \\<lbrakk>0 < \\<epsilon>; \\<tau> \\<in> T;\n        cball \\<tau> \\<epsilon> \\<subseteq> T\\<rbrakk>\n       \\<Longrightarrow> bdd_above\n                          {\\<parallel>to_vec\n (A t)\\<parallel>\\<^sub>o\\<^sub>p |\n                           t. t \\<in> cball \\<tau> \\<epsilon>}", "by (simp add: norm_sq_mtx_def)"], ["proof (state)\nthis:\n  \\<lbrakk>0 < ?\\<epsilon>; ?\\<tau> \\<in> T;\n   cball ?\\<tau> ?\\<epsilon> \\<subseteq> T\\<rbrakk>\n  \\<Longrightarrow> bdd_above\n                     {\\<parallel>to_vec (A t)\\<parallel>\\<^sub>o\\<^sub>p |t.\n                      t \\<in> cball ?\\<tau> ?\\<epsilon>}\n\ngoal (1 subgoal):\n 1. local_lipschitz T S (\\<lambda>t s. A t *\\<^sub>V s + B t)", "hence \"local_lipschitz T S (\\<lambda>t s. to_vec (A t) *v s + B t)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < ?\\<epsilon>; ?\\<tau> \\<in> T;\n   cball ?\\<tau> ?\\<epsilon> \\<subseteq> T\\<rbrakk>\n  \\<Longrightarrow> bdd_above\n                     {\\<parallel>to_vec (A t)\\<parallel>\\<^sub>o\\<^sub>p |t.\n                      t \\<in> cball ?\\<tau> ?\\<epsilon>}\n\ngoal (1 subgoal):\n 1. local_lipschitz T S (\\<lambda>t s. to_vec (A t) *v s + B t)", "using local_lipschitz_affine[OF assms(2,3), of \"\\<lambda>t. to_vec (A t)\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>0 < ?\\<epsilon>; ?\\<tau> \\<in> T;\n   cball ?\\<tau> ?\\<epsilon> \\<subseteq> T\\<rbrakk>\n  \\<Longrightarrow> bdd_above\n                     {\\<parallel>to_vec (A t)\\<parallel>\\<^sub>o\\<^sub>p |t.\n                      t \\<in> cball ?\\<tau> ?\\<epsilon>}\n  (\\<And>\\<tau> \\<epsilon>.\n      \\<lbrakk>0 < \\<epsilon>; \\<tau> \\<in> T;\n       cball \\<tau> \\<epsilon> \\<subseteq> T\\<rbrakk>\n      \\<Longrightarrow> bdd_above\n                         {\\<parallel>to_vec\n(A t)\\<parallel>\\<^sub>o\\<^sub>p |\n                          t. t \\<in> cball \\<tau>\n\\<epsilon>}) \\<Longrightarrow>\n  local_lipschitz T S (\\<lambda>t s. to_vec (A t) *v s + ?B t)\n\ngoal (1 subgoal):\n 1. local_lipschitz T S (\\<lambda>t s. to_vec (A t) *v s + B t)", "by force"], ["proof (state)\nthis:\n  local_lipschitz T S (\\<lambda>t s. to_vec (A t) *v s + B t)\n\ngoal (1 subgoal):\n 1. local_lipschitz T S (\\<lambda>t s. A t *\\<^sub>V s + B t)", "thus ?thesis"], ["proof (prove)\nusing this:\n  local_lipschitz T S (\\<lambda>t s. to_vec (A t) *v s + B t)\n\ngoal (1 subgoal):\n 1. local_lipschitz T S (\\<lambda>t s. A t *\\<^sub>V s + B t)", "by transfer"], ["proof (state)\nthis:\n  local_lipschitz T S (\\<lambda>t s. A t *\\<^sub>V s + B t)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma picard_lindeloef_sq_mtx_affine:\n  assumes \"continuous_on T A\" and \"continuous_on T B\" \n    and \"t\\<^sub>0 \\<in> T\" \"is_interval T\" \"open T\" and \"open S\"\n  shows \"picard_lindeloef (\\<lambda>t s. A t *\\<^sub>V s + B t) T S t\\<^sub>0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. picard_lindeloef (\\<lambda>t s. A t *\\<^sub>V s + B t) T S t\\<^sub>0", "apply(unfold_locales, simp_all add: assms, clarsimp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s.\n       s \\<in> S \\<Longrightarrow>\n       continuous_on T (\\<lambda>t. A t *\\<^sub>V s + B t)\n 2. local_lipschitz T S (\\<lambda>t s. A t *\\<^sub>V s + B t)", "using continuous_on_affine assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>continuous_on ?s ?A; continuous_on ?s ?g\\<rbrakk>\n  \\<Longrightarrow> continuous_on ?s (\\<lambda>x. ?A x *\\<^sub>V ?sa + ?g x)\n  continuous_on T A\n  continuous_on T B\n  t\\<^sub>0 \\<in> T\n  is_interval T\n  open T\n  open S\n\ngoal (2 subgoals):\n 1. \\<And>s.\n       s \\<in> S \\<Longrightarrow>\n       continuous_on T (\\<lambda>t. A t *\\<^sub>V s + B t)\n 2. local_lipschitz T S (\\<lambda>t s. A t *\\<^sub>V s + B t)", "apply blast"], ["proof (prove)\ngoal (1 subgoal):\n 1. local_lipschitz T S (\\<lambda>t s. A t *\\<^sub>V s + B t)", "by (rule local_lipschitz_sq_mtx_affine, simp_all add: assms)"], ["", "lemmas sq_mtx_unique_sol_autonomous_affine = picard_lindeloef.ivp_unique_solution[OF \n    picard_lindeloef_sq_mtx_affine[OF\n      continuous_on_const \n      continuous_on_const \n      UNIV_I is_interval_univ \n      open_UNIV open_UNIV] \n    UNIV_I _ subset_UNIV]"], ["", "lemma has_vderiv_on_sq_mtx_linear:\n  \"D (\\<lambda>t. exp ((t - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V s) = (\\<lambda>t. A *\\<^sub>V (exp ((t - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V s)) on {t\\<^sub>0--t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  D (\\<lambda>t.\n           exp ((t - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V\n           s) = (\\<lambda>t.\n                    A *\\<^sub>V\n                    (exp ((t - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V s))\n     on {t\\<^sub>0--t}", "by (rule poly_derivatives)+ (auto simp: exp_times_scaleR_commute sq_mtx_times_vec_assoc)"], ["", "lemma has_vderiv_on_sq_mtx_affine:\n  fixes t\\<^sub>0::real and A :: \"('a::finite) sq_mtx\"\n  defines \"lSol c t \\<equiv> exp ((c * (t - t\\<^sub>0)) *\\<^sub>R A)\"\n  shows \"D (\\<lambda>t. lSol 1 t *\\<^sub>V s + lSol 1 t *\\<^sub>V (\\<integral>\\<^sub>t\\<^sub>0\\<^sup>t (lSol (-1) \\<tau> *\\<^sub>V B) \\<partial>\\<tau>)) = \n  (\\<lambda>t. A *\\<^sub>V (lSol 1 t *\\<^sub>V s + lSol 1 t *\\<^sub>V (\\<integral>\\<^sub>t\\<^sub>0\\<^sup>t (lSol (-1) \\<tau> *\\<^sub>V B) \\<partial>\\<tau>)) + B) on {t\\<^sub>0--t}\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  D (\\<lambda>t.\n           lSol 1 t *\\<^sub>V s +\n           lSol 1 t *\\<^sub>V\n           (\\<integral>\\<^sub>t\\<^sub>0\\<^sup>t lSol (- 1) \\<tau> *\\<^sub>V\n          B\\<partial>\n               \\<tau>)) = (\\<lambda>t.\n                              A *\\<^sub>V\n                              (lSol 1 t *\\<^sub>V s +\n                               lSol 1 t *\\<^sub>V\n                               (\\<integral>\\<^sub>t\\<^sub>0\\<^sup>t lSol\n                               (- 1) \\<tau> *\\<^sub>V\n                              B\\<partial>\n                                   \\<tau>)) +\n                              B)\n     on {t\\<^sub>0--t}", "unfolding assms"], ["proof (prove)\ngoal (1 subgoal):\n 1.  D (\\<lambda>t.\n           exp ((1 * (t - t\\<^sub>0)) *\\<^sub>R A) *\\<^sub>V s +\n           exp ((1 * (t - t\\<^sub>0)) *\\<^sub>R A) *\\<^sub>V\n           (\\<integral>\\<^sub>t\\<^sub>0\\<^sup>t exp\n           ((- 1 * (\\<tau> - t\\<^sub>0)) *\\<^sub>R A) *\\<^sub>V\n          B\\<partial>\n               \\<tau>)) = (\\<lambda>t.\n                              A *\\<^sub>V\n                              (exp ((1 * (t - t\\<^sub>0)) *\\<^sub>R\n                                    A) *\\<^sub>V\n                               s +\n                               exp ((1 * (t - t\\<^sub>0)) *\\<^sub>R\n                                    A) *\\<^sub>V\n                               (\\<integral>\\<^sub>t\\<^sub>0\\<^sup>t exp\n                               ((- 1 * (\\<tau> - t\\<^sub>0)) *\\<^sub>R\n                                A) *\\<^sub>V\n                              B\\<partial>\n                                   \\<tau>)) +\n                              B)\n     on {t\\<^sub>0--t}", "apply(simp only: mult.left_neutral mult_minus1)"], ["proof (prove)\ngoal (1 subgoal):\n 1.  D (\\<lambda>t.\n           exp ((t - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V s +\n           exp ((t - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V\n           (\\<integral>\\<^sub>t\\<^sub>0\\<^sup>t exp\n           (- (\\<tau> - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V\n          B\\<partial>\n               \\<tau>)) = (\\<lambda>t.\n                              A *\\<^sub>V\n                              (exp ((t - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V\n                               s +\n                               exp ((t - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V\n                               (\\<integral>\\<^sub>t\\<^sub>0\\<^sup>t exp\n                               (- (\\<tau> - t\\<^sub>0) *\\<^sub>R\n                                A) *\\<^sub>V\n                              B\\<partial>\n                                   \\<tau>)) +\n                              B)\n     on {t\\<^sub>0--t}", "apply(rule poly_derivatives, (force)?, (force)?, (force)?, (force)?)+"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ta.\n       ta \\<in> {t\\<^sub>0--t} \\<Longrightarrow>\n       (exp ((ta - t\\<^sub>0) *\\<^sub>R A) * A) *\\<^sub>V s +\n       (exp ((ta - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V\n        (exp ((t\\<^sub>0 - ta) *\\<^sub>R A) *\\<^sub>V B) +\n        (exp ((ta - t\\<^sub>0) *\\<^sub>R A) * A) *\\<^sub>V\n        (\\<integral>\\<^sub>t\\<^sub>0\\<^sup>ta exp\n         ((t\\<^sub>0 - \\<tau>) *\\<^sub>R A) *\\<^sub>V\n        B\\<partial>\n            \\<tau>)) =\n       A *\\<^sub>V\n       (exp ((ta - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V s +\n        exp ((ta - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V\n        (\\<integral>\\<^sub>t\\<^sub>0\\<^sup>ta exp\n         (- (\\<tau> - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V\n        B\\<partial>\n            \\<tau>)) +\n       B", "by (simp add: mtx_vec_mult_add_rdistl sq_mtx_times_vec_assoc[symmetric] \n      exp_minus_inverse exp_times_scaleR_commute mult_exp_exp  scale_left_distrib[symmetric])"], ["", "lemma autonomous_linear_sol_is_exp:\n  assumes \"D X = (\\<lambda>t. A *\\<^sub>V X t) on {t\\<^sub>0--t}\" and \"X t\\<^sub>0 = s\" \n  shows \"X t = exp ((t - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X t = exp ((t - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V s", "apply(rule sq_mtx_unique_sol_autonomous_affine[of \"\\<lambda>s. {t\\<^sub>0--t}\" _ t X A 0])"], ["proof (prove)\ngoal (4 subgoals):\n 1. is_interval {t\\<^sub>0--t}\n 2. t \\<in> {t\\<^sub>0--t}\n 3. X \\<in> Sols (\\<lambda>t s. A *\\<^sub>V s + 0)\n             (\\<lambda>s. {t\\<^sub>0--t}) UNIV ?t\\<^sub>0 ?s\n 4. (\\<lambda>a. exp ((a - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V s)\n    \\<in> Sols (\\<lambda>t s. A *\\<^sub>V s + 0)\n           (\\<lambda>s. {t\\<^sub>0--t}) UNIV ?t\\<^sub>0 ?s", "using assms"], ["proof (prove)\nusing this:\n   D X = (\\<lambda>t. A *\\<^sub>V X t) on {t\\<^sub>0--t}\n  X t\\<^sub>0 = s\n\ngoal (4 subgoals):\n 1. is_interval {t\\<^sub>0--t}\n 2. t \\<in> {t\\<^sub>0--t}\n 3. X \\<in> Sols (\\<lambda>t s. A *\\<^sub>V s + 0)\n             (\\<lambda>s. {t\\<^sub>0--t}) UNIV ?t\\<^sub>0 ?s\n 4. (\\<lambda>a. exp ((a - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V s)\n    \\<in> Sols (\\<lambda>t s. A *\\<^sub>V s + 0)\n           (\\<lambda>s. {t\\<^sub>0--t}) UNIV ?t\\<^sub>0 ?s", "apply(simp_all add: ivp_sols_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>i.\n                 D (\\<lambda>x. X x $ i) = (\\<lambda>x. A *\\<^sub>V X x $ i)\n                 on {t\\<^sub>0--t};\n     X t\\<^sub>0 = s\\<rbrakk>\n    \\<Longrightarrow> X ?t\\<^sub>0 = ?s \\<and>\n                      ?t\\<^sub>0 \\<in> {t\\<^sub>0--t}\n 2. \\<lbrakk>\\<forall>i.\n                 D (\\<lambda>x. X x $ i) = (\\<lambda>x. A *\\<^sub>V X x $ i)\n                 on {t\\<^sub>0--t};\n     X t\\<^sub>0 = s\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>i.\n                           D (\\<lambda>x.\n                                 exp ((x - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V\n                                 s $\n                                 i) = (\\<lambda>x.\n    A *\\<^sub>V (exp ((x - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V s) $ i)\n                           on {t\\<^sub>0--t}) \\<and>\n                      exp ((?t\\<^sub>0 - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V\n                      s =\n                      ?s \\<and>\n                      ?t\\<^sub>0 \\<in> {t\\<^sub>0--t}", "using has_vderiv_on_sq_mtx_linear"], ["proof (prove)\nusing this:\n   D (\\<lambda>t.\n         exp ((t - ?t\\<^sub>0) *\\<^sub>R ?A) *\\<^sub>V\n         ?s) = (\\<lambda>t.\n                   ?A *\\<^sub>V\n                   (exp ((t - ?t\\<^sub>0) *\\<^sub>R ?A) *\\<^sub>V ?s))\n   on {?t\\<^sub>0--?t}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>i.\n                 D (\\<lambda>x. X x $ i) = (\\<lambda>x. A *\\<^sub>V X x $ i)\n                 on {t\\<^sub>0--t};\n     X t\\<^sub>0 = s\\<rbrakk>\n    \\<Longrightarrow> X ?t\\<^sub>0 = ?s \\<and>\n                      ?t\\<^sub>0 \\<in> {t\\<^sub>0--t}\n 2. \\<lbrakk>\\<forall>i.\n                 D (\\<lambda>x. X x $ i) = (\\<lambda>x. A *\\<^sub>V X x $ i)\n                 on {t\\<^sub>0--t};\n     X t\\<^sub>0 = s\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>i.\n                           D (\\<lambda>x.\n                                 exp ((x - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V\n                                 s $\n                                 i) = (\\<lambda>x.\n    A *\\<^sub>V (exp ((x - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V s) $ i)\n                           on {t\\<^sub>0--t}) \\<and>\n                      exp ((?t\\<^sub>0 - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V\n                      s =\n                      ?s \\<and>\n                      ?t\\<^sub>0 \\<in> {t\\<^sub>0--t}", "by force+"], ["", "lemma autonomous_affine_sol_is_exp_plus_int:\n  assumes \"D X = (\\<lambda>t. A *\\<^sub>V X t + B) on {t\\<^sub>0--t}\" and \"X t\\<^sub>0 = s\" \n  shows \"X t = exp ((t - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V s + exp ((t - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V (\\<integral>\\<^sub>t\\<^sub>0\\<^sup>t(exp (- (\\<tau> - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V B)\\<partial>\\<tau>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. X t =\n    exp ((t - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V s +\n    exp ((t - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V\n    (\\<integral>\\<^sub>t\\<^sub>0\\<^sup>t exp\n    (- (\\<tau> - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V\n   B\\<partial>\n        \\<tau>)", "apply(rule sq_mtx_unique_sol_autonomous_affine[of \"\\<lambda>s. {t\\<^sub>0--t}\" _ t X A B])"], ["proof (prove)\ngoal (4 subgoals):\n 1. is_interval {t\\<^sub>0--t}\n 2. t \\<in> {t\\<^sub>0--t}\n 3. X \\<in> Sols (\\<lambda>t s. A *\\<^sub>V s + B)\n             (\\<lambda>s. {t\\<^sub>0--t}) UNIV ?t\\<^sub>0 ?s\n 4. (\\<lambda>a.\n        exp ((a - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V s +\n        exp ((a - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V\n        (\\<integral>\\<^sub>t\\<^sub>0\\<^sup>a exp\n        (- (\\<tau> - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V\n       B\\<partial>\n            \\<tau>))\n    \\<in> Sols (\\<lambda>t s. A *\\<^sub>V s + B)\n           (\\<lambda>s. {t\\<^sub>0--t}) UNIV ?t\\<^sub>0 ?s", "using assms"], ["proof (prove)\nusing this:\n   D X = (\\<lambda>t. A *\\<^sub>V X t + B) on {t\\<^sub>0--t}\n  X t\\<^sub>0 = s\n\ngoal (4 subgoals):\n 1. is_interval {t\\<^sub>0--t}\n 2. t \\<in> {t\\<^sub>0--t}\n 3. X \\<in> Sols (\\<lambda>t s. A *\\<^sub>V s + B)\n             (\\<lambda>s. {t\\<^sub>0--t}) UNIV ?t\\<^sub>0 ?s\n 4. (\\<lambda>a.\n        exp ((a - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V s +\n        exp ((a - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V\n        (\\<integral>\\<^sub>t\\<^sub>0\\<^sup>a exp\n        (- (\\<tau> - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V\n       B\\<partial>\n            \\<tau>))\n    \\<in> Sols (\\<lambda>t s. A *\\<^sub>V s + B)\n           (\\<lambda>s. {t\\<^sub>0--t}) UNIV ?t\\<^sub>0 ?s", "apply(simp_all add: ivp_sols_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>i.\n                 D (\\<lambda>x.\n                       X x $ i) = (\\<lambda>x. A *\\<^sub>V X x $ i + B $ i)\n                 on {t\\<^sub>0--t};\n     X t\\<^sub>0 = s\\<rbrakk>\n    \\<Longrightarrow> X ?t\\<^sub>0 = ?s \\<and>\n                      ?t\\<^sub>0 \\<in> {t\\<^sub>0--t}\n 2. \\<lbrakk>\\<forall>i.\n                 D (\\<lambda>x.\n                       X x $ i) = (\\<lambda>x. A *\\<^sub>V X x $ i + B $ i)\n                 on {t\\<^sub>0--t};\n     X t\\<^sub>0 = s\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>i.\n                           D (\\<lambda>x.\n                                 exp ((x - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V\n                                 s $\n                                 i +\n                                 exp ((x - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V\n                                 (\\<integral>\\<^sub>t\\<^sub>0\\<^sup>x exp\n                                 ((t\\<^sub>0 - \\<tau>) *\\<^sub>R\n                                  A) *\\<^sub>V\n                                B\\<partial>\n                                     \\<tau>) $\n                                 i) = (\\<lambda>x.\n    A *\\<^sub>V\n    (exp ((x - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V s +\n     exp ((x - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V\n     (\\<integral>\\<^sub>t\\<^sub>0\\<^sup>x exp\n     ((t\\<^sub>0 - \\<tau>) *\\<^sub>R A) *\\<^sub>V\n    B\\<partial>\n         \\<tau>)) $\n    i +\n    B $ i)\n                           on {t\\<^sub>0--t}) \\<and>\n                      exp ((?t\\<^sub>0 - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V\n                      s +\n                      exp ((?t\\<^sub>0 - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V\n                      (\\<integral>\\<^sub>t\\<^sub>0\\<^sup>?t\\<^sub>0 exp\n                               ((t\\<^sub>0 - \\<tau>) *\\<^sub>R A) *\\<^sub>V\n                              B\\<partial>\n                          \\<tau>) =\n                      ?s \\<and>\n                      ?t\\<^sub>0 \\<in> {t\\<^sub>0--t}", "using has_vderiv_on_sq_mtx_affine"], ["proof (prove)\nusing this:\n   D (\\<lambda>t.\n         exp ((1 * (t - ?t\\<^sub>0)) *\\<^sub>R ?A) *\\<^sub>V ?s +\n         exp ((1 * (t - ?t\\<^sub>0)) *\\<^sub>R ?A) *\\<^sub>V\n         (\\<integral>\\<^sub>?t\\<^sub>0\\<^sup>t exp\n          ((- 1 * (\\<tau> - ?t\\<^sub>0)) *\\<^sub>R ?A) *\\<^sub>V\n         ?B\\<partial>\n             \\<tau>)) = (\\<lambda>t.\n                            ?A *\\<^sub>V\n                            (exp ((1 * (t - ?t\\<^sub>0)) *\\<^sub>R\n                                  ?A) *\\<^sub>V\n                             ?s +\n                             exp ((1 * (t - ?t\\<^sub>0)) *\\<^sub>R\n                                  ?A) *\\<^sub>V\n                             (\\<integral>\\<^sub>?t\\<^sub>0\\<^sup>t exp\n                              ((- 1 * (\\<tau> - ?t\\<^sub>0)) *\\<^sub>R\n                               ?A) *\\<^sub>V\n                             ?B\\<partial>\n                                 \\<tau>)) +\n                            ?B)\n   on {?t\\<^sub>0--?t}\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<forall>i.\n                 D (\\<lambda>x.\n                       X x $ i) = (\\<lambda>x. A *\\<^sub>V X x $ i + B $ i)\n                 on {t\\<^sub>0--t};\n     X t\\<^sub>0 = s\\<rbrakk>\n    \\<Longrightarrow> X ?t\\<^sub>0 = ?s \\<and>\n                      ?t\\<^sub>0 \\<in> {t\\<^sub>0--t}\n 2. \\<lbrakk>\\<forall>i.\n                 D (\\<lambda>x.\n                       X x $ i) = (\\<lambda>x. A *\\<^sub>V X x $ i + B $ i)\n                 on {t\\<^sub>0--t};\n     X t\\<^sub>0 = s\\<rbrakk>\n    \\<Longrightarrow> (\\<forall>i.\n                           D (\\<lambda>x.\n                                 exp ((x - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V\n                                 s $\n                                 i +\n                                 exp ((x - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V\n                                 (\\<integral>\\<^sub>t\\<^sub>0\\<^sup>x exp\n                                 ((t\\<^sub>0 - \\<tau>) *\\<^sub>R\n                                  A) *\\<^sub>V\n                                B\\<partial>\n                                     \\<tau>) $\n                                 i) = (\\<lambda>x.\n    A *\\<^sub>V\n    (exp ((x - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V s +\n     exp ((x - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V\n     (\\<integral>\\<^sub>t\\<^sub>0\\<^sup>x exp\n     ((t\\<^sub>0 - \\<tau>) *\\<^sub>R A) *\\<^sub>V\n    B\\<partial>\n         \\<tau>)) $\n    i +\n    B $ i)\n                           on {t\\<^sub>0--t}) \\<and>\n                      exp ((?t\\<^sub>0 - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V\n                      s +\n                      exp ((?t\\<^sub>0 - t\\<^sub>0) *\\<^sub>R A) *\\<^sub>V\n                      (\\<integral>\\<^sub>t\\<^sub>0\\<^sup>?t\\<^sub>0 exp\n                               ((t\\<^sub>0 - \\<tau>) *\\<^sub>R A) *\\<^sub>V\n                              B\\<partial>\n                          \\<tau>) =\n                      ?s \\<and>\n                      ?t\\<^sub>0 \\<in> {t\\<^sub>0--t}", "by force+"], ["", "lemma local_flow_sq_mtx_linear: \"local_flow ((*\\<^sub>V) A) UNIV UNIV (\\<lambda>t s. exp (t *\\<^sub>R A) *\\<^sub>V s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local_flow ((*\\<^sub>V) A) UNIV UNIV\n     (\\<lambda>t. (*\\<^sub>V) (exp (t *\\<^sub>R A)))", "unfolding local_flow_def local_flow_axioms_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. picard_lindeloef (\\<lambda>t. (*\\<^sub>V) A) UNIV UNIV 0 \\<and>\n    (\\<forall>t s.\n        t \\<in> UNIV \\<longrightarrow>\n        s \\<in> UNIV \\<longrightarrow>\n         D (\\<lambda>t.\n               exp (t *\\<^sub>R A) *\\<^sub>V\n               s) = (\\<lambda>t.\n                        A *\\<^sub>V (exp (t *\\<^sub>R A) *\\<^sub>V s))\n         on {0--t}) \\<and>\n    (\\<forall>s.\n        s \\<in> UNIV \\<longrightarrow>\n        exp (0 *\\<^sub>R A) *\\<^sub>V s = s) \\<and>\n    (\\<forall>t s.\n        t \\<in> UNIV \\<longrightarrow>\n        s \\<in> UNIV \\<longrightarrow>\n        (\\<lambda>t. exp (t *\\<^sub>R A) *\\<^sub>V s)\n        \\<in> {0--t} \\<rightarrow> UNIV)", "apply safe"], ["proof (prove)\ngoal (4 subgoals):\n 1. picard_lindeloef (\\<lambda>t. (*\\<^sub>V) A) UNIV UNIV 0\n 2. \\<And>t s.\n       \\<lbrakk>t \\<in> UNIV; s \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow>  D (\\<lambda>t.\n                                exp (t *\\<^sub>R A) *\\<^sub>V\n                                s) = (\\<lambda>t.\n   A *\\<^sub>V (exp (t *\\<^sub>R A) *\\<^sub>V s))\n                          on {0--t}\n 3. \\<And>s.\n       s \\<in> UNIV \\<Longrightarrow> exp (0 *\\<^sub>R A) *\\<^sub>V s = s\n 4. \\<And>t s x.\n       \\<lbrakk>t \\<in> UNIV; s \\<in> UNIV; x \\<in> {0--t}\\<rbrakk>\n       \\<Longrightarrow> exp (x *\\<^sub>R A) *\\<^sub>V s \\<in> UNIV", "using picard_lindeloef_sq_mtx_affine[of _ \"\\<lambda>t. A\" \"\\<lambda>t. 0\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>continuous_on ?T (\\<lambda>t. A);\n   continuous_on ?T (\\<lambda>t. 0); ?t\\<^sub>0 \\<in> ?T; is_interval ?T;\n   open ?T; open ?S\\<rbrakk>\n  \\<Longrightarrow> picard_lindeloef (\\<lambda>t s. A *\\<^sub>V s + 0) ?T ?S\n                     ?t\\<^sub>0\n\ngoal (4 subgoals):\n 1. picard_lindeloef (\\<lambda>t. (*\\<^sub>V) A) UNIV UNIV 0\n 2. \\<And>t s.\n       \\<lbrakk>t \\<in> UNIV; s \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow>  D (\\<lambda>t.\n                                exp (t *\\<^sub>R A) *\\<^sub>V\n                                s) = (\\<lambda>t.\n   A *\\<^sub>V (exp (t *\\<^sub>R A) *\\<^sub>V s))\n                          on {0--t}\n 3. \\<And>s.\n       s \\<in> UNIV \\<Longrightarrow> exp (0 *\\<^sub>R A) *\\<^sub>V s = s\n 4. \\<And>t s x.\n       \\<lbrakk>t \\<in> UNIV; s \\<in> UNIV; x \\<in> {0--t}\\<rbrakk>\n       \\<Longrightarrow> exp (x *\\<^sub>R A) *\\<^sub>V s \\<in> UNIV", "apply force"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t s.\n       \\<lbrakk>t \\<in> UNIV; s \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow>  D (\\<lambda>t.\n                                exp (t *\\<^sub>R A) *\\<^sub>V\n                                s) = (\\<lambda>t.\n   A *\\<^sub>V (exp (t *\\<^sub>R A) *\\<^sub>V s))\n                          on {0--t}\n 2. \\<And>s.\n       s \\<in> UNIV \\<Longrightarrow> exp (0 *\\<^sub>R A) *\\<^sub>V s = s\n 3. \\<And>t s x.\n       \\<lbrakk>t \\<in> UNIV; s \\<in> UNIV; x \\<in> {0--t}\\<rbrakk>\n       \\<Longrightarrow> exp (x *\\<^sub>R A) *\\<^sub>V s \\<in> UNIV", "using has_vderiv_on_sq_mtx_linear[of 0]"], ["proof (prove)\nusing this:\n   D (\\<lambda>t.\n         exp ((t - 0) *\\<^sub>R ?A) *\\<^sub>V\n         ?s) = (\\<lambda>t.\n                   ?A *\\<^sub>V (exp ((t - 0) *\\<^sub>R ?A) *\\<^sub>V ?s))\n   on {0--?t}\n\ngoal (3 subgoals):\n 1. \\<And>t s.\n       \\<lbrakk>t \\<in> UNIV; s \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow>  D (\\<lambda>t.\n                                exp (t *\\<^sub>R A) *\\<^sub>V\n                                s) = (\\<lambda>t.\n   A *\\<^sub>V (exp (t *\\<^sub>R A) *\\<^sub>V s))\n                          on {0--t}\n 2. \\<And>s.\n       s \\<in> UNIV \\<Longrightarrow> exp (0 *\\<^sub>R A) *\\<^sub>V s = s\n 3. \\<And>t s x.\n       \\<lbrakk>t \\<in> UNIV; s \\<in> UNIV; x \\<in> {0--t}\\<rbrakk>\n       \\<Longrightarrow> exp (x *\\<^sub>R A) *\\<^sub>V s \\<in> UNIV", "by auto"], ["", "lemma local_flow_sq_mtx_affine: \"local_flow (\\<lambda>s. A *\\<^sub>V s + B) UNIV UNIV \n  (\\<lambda>t s. exp (t *\\<^sub>R A) *\\<^sub>V s + exp (t *\\<^sub>R A) *\\<^sub>V (\\<integral>\\<^sub>0\\<^sup>t(exp (- \\<tau> *\\<^sub>R A) *\\<^sub>V B)\\<partial>\\<tau>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. local_flow (\\<lambda>s. A *\\<^sub>V s + B) UNIV UNIV\n     (\\<lambda>t s.\n         exp (t *\\<^sub>R A) *\\<^sub>V s +\n         exp (t *\\<^sub>R A) *\\<^sub>V\n         (\\<integral>\\<^sub>0\\<^sup>t exp (- \\<tau> *\\<^sub>R A) *\\<^sub>V\nB\\<partial>\n             \\<tau>))", "unfolding local_flow_def local_flow_axioms_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. picard_lindeloef (\\<lambda>t s. A *\\<^sub>V s + B) UNIV UNIV 0 \\<and>\n    (\\<forall>t s.\n        t \\<in> UNIV \\<longrightarrow>\n        s \\<in> UNIV \\<longrightarrow>\n         D (\\<lambda>t.\n               exp (t *\\<^sub>R A) *\\<^sub>V s +\n               exp (t *\\<^sub>R A) *\\<^sub>V\n               (\\<integral>\\<^sub>0\\<^sup>t exp\n       (- \\<tau> *\\<^sub>R A) *\\<^sub>V\n      B\\<partial>\n                   \\<tau>)) = (\\<lambda>t.\n                                  A *\\<^sub>V\n                                  (exp (t *\\<^sub>R A) *\\<^sub>V s +\n                                   exp (t *\\<^sub>R A) *\\<^sub>V\n                                   (\\<integral>\\<^sub>0\\<^sup>t exp\n                           (- \\<tau> *\\<^sub>R A) *\\<^sub>V\n                          B\\<partial>\n \\<tau>)) +\n                                  B)\n         on {0--t}) \\<and>\n    (\\<forall>s.\n        s \\<in> UNIV \\<longrightarrow>\n        exp (0 *\\<^sub>R A) *\\<^sub>V s +\n        exp (0 *\\<^sub>R A) *\\<^sub>V\n        (\\<integral>\\<^sub>0\\<^sup>0 exp (- \\<tau> *\\<^sub>R A) *\\<^sub>V\n                                     B\\<partial>\n            \\<tau>) =\n        s) \\<and>\n    (\\<forall>t s.\n        t \\<in> UNIV \\<longrightarrow>\n        s \\<in> UNIV \\<longrightarrow>\n        (\\<lambda>t.\n            exp (t *\\<^sub>R A) *\\<^sub>V s +\n            exp (t *\\<^sub>R A) *\\<^sub>V\n            (\\<integral>\\<^sub>0\\<^sup>t exp\n    (- \\<tau> *\\<^sub>R A) *\\<^sub>V\n   B\\<partial>\n                \\<tau>))\n        \\<in> {0--t} \\<rightarrow> UNIV)", "apply safe"], ["proof (prove)\ngoal (4 subgoals):\n 1. picard_lindeloef (\\<lambda>t s. A *\\<^sub>V s + B) UNIV UNIV 0\n 2. \\<And>t s.\n       \\<lbrakk>t \\<in> UNIV; s \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow>  D (\\<lambda>t.\n                                exp (t *\\<^sub>R A) *\\<^sub>V s +\n                                exp (t *\\<^sub>R A) *\\<^sub>V\n                                (\\<integral>\\<^sub>0\\<^sup>t exp\n                        (- \\<tau> *\\<^sub>R A) *\\<^sub>V\n                       B\\<partial>\n                                    \\<tau>)) = (\\<lambda>t.\n             A *\\<^sub>V\n             (exp (t *\\<^sub>R A) *\\<^sub>V s +\n              exp (t *\\<^sub>R A) *\\<^sub>V\n              (\\<integral>\\<^sub>0\\<^sup>t exp\n      (- \\<tau> *\\<^sub>R A) *\\<^sub>V\n     B\\<partial>\n                  \\<tau>)) +\n             B)\n                          on {0--t}\n 3. \\<And>s.\n       s \\<in> UNIV \\<Longrightarrow>\n       exp (0 *\\<^sub>R A) *\\<^sub>V s +\n       exp (0 *\\<^sub>R A) *\\<^sub>V\n       (\\<integral>\\<^sub>0\\<^sup>0 exp (- \\<tau> *\\<^sub>R A) *\\<^sub>V\n                                    B\\<partial>\n           \\<tau>) =\n       s\n 4. \\<And>t s x.\n       \\<lbrakk>t \\<in> UNIV; s \\<in> UNIV; x \\<in> {0--t}\\<rbrakk>\n       \\<Longrightarrow> exp (x *\\<^sub>R A) *\\<^sub>V s +\n                         exp (x *\\<^sub>R A) *\\<^sub>V\n                         (\\<integral>\\<^sub>0\\<^sup>x exp\n                 (- \\<tau> *\\<^sub>R A) *\\<^sub>V\n                B\\<partial>\n                             \\<tau>)\n                         \\<in> UNIV", "using picard_lindeloef_sq_mtx_affine[of _ \"\\<lambda>t. A\" \"\\<lambda>t. B\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>continuous_on ?T (\\<lambda>t. A);\n   continuous_on ?T (\\<lambda>t. B); ?t\\<^sub>0 \\<in> ?T; is_interval ?T;\n   open ?T; open ?S\\<rbrakk>\n  \\<Longrightarrow> picard_lindeloef (\\<lambda>t s. A *\\<^sub>V s + B) ?T ?S\n                     ?t\\<^sub>0\n\ngoal (4 subgoals):\n 1. picard_lindeloef (\\<lambda>t s. A *\\<^sub>V s + B) UNIV UNIV 0\n 2. \\<And>t s.\n       \\<lbrakk>t \\<in> UNIV; s \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow>  D (\\<lambda>t.\n                                exp (t *\\<^sub>R A) *\\<^sub>V s +\n                                exp (t *\\<^sub>R A) *\\<^sub>V\n                                (\\<integral>\\<^sub>0\\<^sup>t exp\n                        (- \\<tau> *\\<^sub>R A) *\\<^sub>V\n                       B\\<partial>\n                                    \\<tau>)) = (\\<lambda>t.\n             A *\\<^sub>V\n             (exp (t *\\<^sub>R A) *\\<^sub>V s +\n              exp (t *\\<^sub>R A) *\\<^sub>V\n              (\\<integral>\\<^sub>0\\<^sup>t exp\n      (- \\<tau> *\\<^sub>R A) *\\<^sub>V\n     B\\<partial>\n                  \\<tau>)) +\n             B)\n                          on {0--t}\n 3. \\<And>s.\n       s \\<in> UNIV \\<Longrightarrow>\n       exp (0 *\\<^sub>R A) *\\<^sub>V s +\n       exp (0 *\\<^sub>R A) *\\<^sub>V\n       (\\<integral>\\<^sub>0\\<^sup>0 exp (- \\<tau> *\\<^sub>R A) *\\<^sub>V\n                                    B\\<partial>\n           \\<tau>) =\n       s\n 4. \\<And>t s x.\n       \\<lbrakk>t \\<in> UNIV; s \\<in> UNIV; x \\<in> {0--t}\\<rbrakk>\n       \\<Longrightarrow> exp (x *\\<^sub>R A) *\\<^sub>V s +\n                         exp (x *\\<^sub>R A) *\\<^sub>V\n                         (\\<integral>\\<^sub>0\\<^sup>x exp\n                 (- \\<tau> *\\<^sub>R A) *\\<^sub>V\n                B\\<partial>\n                             \\<tau>)\n                         \\<in> UNIV", "apply force"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>t s.\n       \\<lbrakk>t \\<in> UNIV; s \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow>  D (\\<lambda>t.\n                                exp (t *\\<^sub>R A) *\\<^sub>V s +\n                                exp (t *\\<^sub>R A) *\\<^sub>V\n                                (\\<integral>\\<^sub>0\\<^sup>t exp\n                        (- \\<tau> *\\<^sub>R A) *\\<^sub>V\n                       B\\<partial>\n                                    \\<tau>)) = (\\<lambda>t.\n             A *\\<^sub>V\n             (exp (t *\\<^sub>R A) *\\<^sub>V s +\n              exp (t *\\<^sub>R A) *\\<^sub>V\n              (\\<integral>\\<^sub>0\\<^sup>t exp\n      (- \\<tau> *\\<^sub>R A) *\\<^sub>V\n     B\\<partial>\n                  \\<tau>)) +\n             B)\n                          on {0--t}\n 2. \\<And>s.\n       s \\<in> UNIV \\<Longrightarrow>\n       exp (0 *\\<^sub>R A) *\\<^sub>V s +\n       exp (0 *\\<^sub>R A) *\\<^sub>V\n       (\\<integral>\\<^sub>0\\<^sup>0 exp (- \\<tau> *\\<^sub>R A) *\\<^sub>V\n                                    B\\<partial>\n           \\<tau>) =\n       s\n 3. \\<And>t s x.\n       \\<lbrakk>t \\<in> UNIV; s \\<in> UNIV; x \\<in> {0--t}\\<rbrakk>\n       \\<Longrightarrow> exp (x *\\<^sub>R A) *\\<^sub>V s +\n                         exp (x *\\<^sub>R A) *\\<^sub>V\n                         (\\<integral>\\<^sub>0\\<^sup>x exp\n                 (- \\<tau> *\\<^sub>R A) *\\<^sub>V\n                B\\<partial>\n                             \\<tau>)\n                         \\<in> UNIV", "using has_vderiv_on_sq_mtx_affine[of 0 A]"], ["proof (prove)\nusing this:\n   D (\\<lambda>t.\n         exp ((1 * (t - 0)) *\\<^sub>R A) *\\<^sub>V ?s +\n         exp ((1 * (t - 0)) *\\<^sub>R A) *\\<^sub>V\n         (\\<integral>\\<^sub>0\\<^sup>t exp\n ((- 1 * (\\<tau> - 0)) *\\<^sub>R A) *\\<^sub>V\n?B\\<partial>\n             \\<tau>)) = (\\<lambda>t.\n                            A *\\<^sub>V\n                            (exp ((1 * (t - 0)) *\\<^sub>R A) *\\<^sub>V ?s +\n                             exp ((1 * (t - 0)) *\\<^sub>R A) *\\<^sub>V\n                             (\\<integral>\\<^sub>0\\<^sup>t exp\n                     ((- 1 * (\\<tau> - 0)) *\\<^sub>R A) *\\<^sub>V\n                    ?B\\<partial>\n                                 \\<tau>)) +\n                            ?B)\n   on {0--?t}\n\ngoal (3 subgoals):\n 1. \\<And>t s.\n       \\<lbrakk>t \\<in> UNIV; s \\<in> UNIV\\<rbrakk>\n       \\<Longrightarrow>  D (\\<lambda>t.\n                                exp (t *\\<^sub>R A) *\\<^sub>V s +\n                                exp (t *\\<^sub>R A) *\\<^sub>V\n                                (\\<integral>\\<^sub>0\\<^sup>t exp\n                        (- \\<tau> *\\<^sub>R A) *\\<^sub>V\n                       B\\<partial>\n                                    \\<tau>)) = (\\<lambda>t.\n             A *\\<^sub>V\n             (exp (t *\\<^sub>R A) *\\<^sub>V s +\n              exp (t *\\<^sub>R A) *\\<^sub>V\n              (\\<integral>\\<^sub>0\\<^sup>t exp\n      (- \\<tau> *\\<^sub>R A) *\\<^sub>V\n     B\\<partial>\n                  \\<tau>)) +\n             B)\n                          on {0--t}\n 2. \\<And>s.\n       s \\<in> UNIV \\<Longrightarrow>\n       exp (0 *\\<^sub>R A) *\\<^sub>V s +\n       exp (0 *\\<^sub>R A) *\\<^sub>V\n       (\\<integral>\\<^sub>0\\<^sup>0 exp (- \\<tau> *\\<^sub>R A) *\\<^sub>V\n                                    B\\<partial>\n           \\<tau>) =\n       s\n 3. \\<And>t s x.\n       \\<lbrakk>t \\<in> UNIV; s \\<in> UNIV; x \\<in> {0--t}\\<rbrakk>\n       \\<Longrightarrow> exp (x *\\<^sub>R A) *\\<^sub>V s +\n                         exp (x *\\<^sub>R A) *\\<^sub>V\n                         (\\<integral>\\<^sub>0\\<^sup>x exp\n                 (- \\<tau> *\\<^sub>R A) *\\<^sub>V\n                B\\<partial>\n                             \\<tau>)\n                         \\<in> UNIV", "by auto"], ["", "end"]]}