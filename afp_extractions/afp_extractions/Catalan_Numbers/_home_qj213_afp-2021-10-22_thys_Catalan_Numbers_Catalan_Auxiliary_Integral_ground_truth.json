{"file_name": "/home/qj213/afp-2021-10-22/thys/Catalan_Numbers/Catalan_Auxiliary_Integral.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Catalan_Numbers", "problem_names": ["lemma limit1: \"filterlim (\\<lambda>x::real. sqrt (4/x - 1) / (x - 4)) at_bot (at_left 4)\"", "lemma limit2: \"((\\<lambda>x. sqrt (4/x - 1) * x) \\<longlongrightarrow> 0) (at_right 0)\"", "lemma catalan_aux_integral:\n  \"((\\<lambda>x::real. sqrt ((4 - x) / x)) has_integral 2 * pi) {0..4}\""], "translations": [["", "lemma limit1: \"filterlim (\\<lambda>x::real. sqrt (4/x - 1) / (x - 4)) at_bot (at_left 4)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LIM x at_left 4. sqrt (4 / x - 1) / (x - 4) :> at_bot", "proof (rule lhopital_left)"], ["proof (state)\ngoal (7 subgoals):\n 1. ((\\<lambda>x. sqrt (4 / x - 1)) \\<longlongrightarrow> 0) (at_left 4)\n 2. ((\\<lambda>x. x - 4) \\<longlongrightarrow> 0) (at_left 4)\n 3. \\<forall>\\<^sub>F x in at_left 4. x - 4 \\<noteq> 0\n 4. \\<forall>\\<^sub>F x in at_left 4. ?g' x \\<noteq> 0\n 5. \\<forall>\\<^sub>F x in at_left 4.\n       ((\\<lambda>x. sqrt (4 / x - 1)) has_real_derivative ?f' x) (at x)\n 6. \\<forall>\\<^sub>F x in at_left 4.\n       ((\\<lambda>x. x - 4) has_real_derivative ?g' x) (at x)\n 7. LIM x at_left 4. ?f' x / ?g' x :> at_bot", "show \"((\\<lambda>x::real. sqrt (4 / x - 1)) \\<longlongrightarrow> 0) (at_left 4)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. sqrt (4 / x - 1)) \\<longlongrightarrow> 0) (at_left 4)", "by (force intro: tendsto_eq_intros)"], ["proof (state)\nthis:\n  ((\\<lambda>x. sqrt (4 / x - 1)) \\<longlongrightarrow> 0) (at_left 4)\n\ngoal (6 subgoals):\n 1. ((\\<lambda>x. x - 4) \\<longlongrightarrow> 0) (at_left 4)\n 2. \\<forall>\\<^sub>F x in at_left 4. x - 4 \\<noteq> 0\n 3. \\<forall>\\<^sub>F x in at_left 4. ?g' x \\<noteq> 0\n 4. \\<forall>\\<^sub>F x in at_left 4.\n       ((\\<lambda>x. sqrt (4 / x - 1)) has_real_derivative ?f' x) (at x)\n 5. \\<forall>\\<^sub>F x in at_left 4.\n       ((\\<lambda>x. x - 4) has_real_derivative ?g' x) (at x)\n 6. LIM x at_left 4. ?f' x / ?g' x :> at_bot", "show \"((\\<lambda>x::real. x - 4) \\<longlongrightarrow> 0) (at_left 4)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. x - 4) \\<longlongrightarrow> 0) (at_left 4)", "by (force intro: tendsto_eq_intros)"], ["proof (state)\nthis:\n  ((\\<lambda>x. x - 4) \\<longlongrightarrow> 0) (at_left 4)\n\ngoal (5 subgoals):\n 1. \\<forall>\\<^sub>F x in at_left 4. x - 4 \\<noteq> 0\n 2. \\<forall>\\<^sub>F x in at_left 4. ?g' x \\<noteq> 0\n 3. \\<forall>\\<^sub>F x in at_left 4.\n       ((\\<lambda>x. sqrt (4 / x - 1)) has_real_derivative ?f' x) (at x)\n 4. \\<forall>\\<^sub>F x in at_left 4.\n       ((\\<lambda>x. x - 4) has_real_derivative ?g' x) (at x)\n 5. LIM x at_left 4. ?f' x / ?g' x :> at_bot", "show \"\\<forall>\\<^sub>F x in at_left 4. ((\\<lambda>x. x - 4) has_real_derivative 1) (at x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_left 4.\n       ((\\<lambda>x. x - 4) has_real_derivative 1) (at x)", "by (intro always_eventually) (auto intro!: derivative_eq_intros)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_left 4.\n     ((\\<lambda>x. x - 4) has_real_derivative 1) (at x)\n\ngoal (4 subgoals):\n 1. \\<forall>\\<^sub>F x in at_left 4. x - 4 \\<noteq> 0\n 2. \\<forall>\\<^sub>F x in at_left 4. 1 \\<noteq> 0\n 3. \\<forall>\\<^sub>F x in at_left 4.\n       ((\\<lambda>x. sqrt (4 / x - 1)) has_real_derivative ?f' x) (at x)\n 4. LIM x at_left 4. ?f' x / 1 :> at_bot", "show \"\\<forall>\\<^sub>F x in at_left 4. ((\\<lambda>x. sqrt (4/x - 1)) has_real_derivative \n          -2 / (sqrt (4/x - 1) * x^2)) (at x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_left 4.\n       ((\\<lambda>x. sqrt (4 / x - 1)) has_real_derivative\n        - 2 / (sqrt (4 / x - 1) * x\\<^sup>2))\n        (at x)", "by (intro eventually_at_leftI[of 0])\n       (auto intro!: derivative_eq_intros simp: field_simps power2_eq_square)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_left 4.\n     ((\\<lambda>x. sqrt (4 / x - 1)) has_real_derivative\n      - 2 / (sqrt (4 / x - 1) * x\\<^sup>2))\n      (at x)\n\ngoal (3 subgoals):\n 1. \\<forall>\\<^sub>F x in at_left 4. x - 4 \\<noteq> 0\n 2. \\<forall>\\<^sub>F x in at_left 4. 1 \\<noteq> 0\n 3. LIM x at_left 4. - 2 / (sqrt (4 / x - 1) * x\\<^sup>2) / 1 :> at_bot", "have *: \"((\\<lambda>x::real. sqrt (4 / x - 1) * x\\<^sup>2) \\<longlongrightarrow> 0) (at_left 4)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. sqrt (4 / x - 1) * x\\<^sup>2) \\<longlongrightarrow> 0)\n     (at_left 4)", "by (force intro!: tendsto_eq_intros)"], ["proof (state)\nthis:\n  ((\\<lambda>x. sqrt (4 / x - 1) * x\\<^sup>2) \\<longlongrightarrow> 0)\n   (at_left 4)\n\ngoal (3 subgoals):\n 1. \\<forall>\\<^sub>F x in at_left 4. x - 4 \\<noteq> 0\n 2. \\<forall>\\<^sub>F x in at_left 4. 1 \\<noteq> 0\n 3. LIM x at_left 4. - 2 / (sqrt (4 / x - 1) * x\\<^sup>2) / 1 :> at_bot", "have \"filterlim (\\<lambda>x. - (2 / (sqrt (4 / x - 1) * x\\<^sup>2))) at_bot (at_left 4)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LIM x at_left 4. - (2 / (sqrt (4 / x - 1) * x\\<^sup>2)) :> at_bot", "unfolding filterlim_uminus_at_top [symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. LIM x at_left 4. 2 / (sqrt (4 / x - 1) * x\\<^sup>2) :> at_top", "by (rule LIM_at_top_divide tendsto_const eventually_at_leftI[of 0] * | simp)+"], ["proof (state)\nthis:\n  LIM x at_left 4. - (2 / (sqrt (4 / x - 1) * x\\<^sup>2)) :> at_bot\n\ngoal (3 subgoals):\n 1. \\<forall>\\<^sub>F x in at_left 4. x - 4 \\<noteq> 0\n 2. \\<forall>\\<^sub>F x in at_left 4. 1 \\<noteq> 0\n 3. LIM x at_left 4. - 2 / (sqrt (4 / x - 1) * x\\<^sup>2) / 1 :> at_bot", "thus \"filterlim (\\<lambda>x::real. - 2 / (sqrt (4 / x - 1) * x\\<^sup>2) / 1) at_bot (at_left 4)\""], ["proof (prove)\nusing this:\n  LIM x at_left 4. - (2 / (sqrt (4 / x - 1) * x\\<^sup>2)) :> at_bot\n\ngoal (1 subgoal):\n 1. LIM x at_left 4. - 2 / (sqrt (4 / x - 1) * x\\<^sup>2) / 1 :> at_bot", "by simp"], ["proof (state)\nthis:\n  LIM x at_left 4. - 2 / (sqrt (4 / x - 1) * x\\<^sup>2) / 1 :> at_bot\n\ngoal (2 subgoals):\n 1. \\<forall>\\<^sub>F x in at_left 4. x - 4 \\<noteq> 0\n 2. \\<forall>\\<^sub>F x in at_left 4. 1 \\<noteq> 0", "qed (auto intro: eventually_at_leftI[of 0])"], ["", "private"], ["", "lemma limit2: \"((\\<lambda>x. sqrt (4/x - 1) * x) \\<longlongrightarrow> 0) (at_right 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. sqrt (4 / x - 1) * x) \\<longlongrightarrow> 0)\n     (at_right 0)", "proof (rule Lim_transform_eventually)"], ["proof (state)\ngoal (2 subgoals):\n 1. (?f \\<longlongrightarrow> 0) (at_right 0)\n 2. \\<forall>\\<^sub>F x in at_right 0. ?f x = sqrt (4 / x - 1) * x", "show \"((\\<lambda>x::real. sqrt ((4 - x) * x)) \\<longlongrightarrow> 0) (at_right 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. sqrt ((4 - x) * x)) \\<longlongrightarrow> 0) (at_right 0)", "by (force intro: tendsto_eq_intros)"], ["proof (state)\nthis:\n  ((\\<lambda>x. sqrt ((4 - x) * x)) \\<longlongrightarrow> 0) (at_right 0)\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_right 0.\n       sqrt ((4 - x) * x) = sqrt (4 / x - 1) * x", "show \"\\<forall>\\<^sub>F x in at_right 0. sqrt ((4 - x) * x) = sqrt (4 / x - 1) * x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in at_right 0.\n       sqrt ((4 - x) * x) = sqrt (4 / x - 1) * x", "proof (rule eventually_at_rightI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> {0<..<?b} \\<Longrightarrow>\n       sqrt ((4 - x) * x) = sqrt (4 / x - 1) * x\n 2. 0 < ?b", "fix x :: real"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> {0<..<?b} \\<Longrightarrow>\n       sqrt ((4 - x) * x) = sqrt (4 / x - 1) * x\n 2. 0 < ?b", "assume x: \"x \\<in> {0<..<1}\""], ["proof (state)\nthis:\n  x \\<in> {0<..<1}\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> {0<..<?b} \\<Longrightarrow>\n       sqrt ((4 - x) * x) = sqrt (4 / x - 1) * x\n 2. 0 < ?b", "from x"], ["proof (chain)\npicking this:\n  x \\<in> {0<..<1}", "have \"(4 - x) * x = (4/x - 1) * x^2\""], ["proof (prove)\nusing this:\n  x \\<in> {0<..<1}\n\ngoal (1 subgoal):\n 1. (4 - x) * x = (4 / x - 1) * x\\<^sup>2", "by (simp add: field_simps power2_eq_square)"], ["proof (state)\nthis:\n  (4 - x) * x = (4 / x - 1) * x\\<^sup>2\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> {0<..<?b} \\<Longrightarrow>\n       sqrt ((4 - x) * x) = sqrt (4 / x - 1) * x\n 2. 0 < ?b", "also"], ["proof (state)\nthis:\n  (4 - x) * x = (4 / x - 1) * x\\<^sup>2\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> {0<..<?b} \\<Longrightarrow>\n       sqrt ((4 - x) * x) = sqrt (4 / x - 1) * x\n 2. 0 < ?b", "from x"], ["proof (chain)\npicking this:\n  x \\<in> {0<..<1}", "have \"sqrt \\<dots> = sqrt (4/x - 1) * x\""], ["proof (prove)\nusing this:\n  x \\<in> {0<..<1}\n\ngoal (1 subgoal):\n 1. sqrt ((4 / x - 1) * x\\<^sup>2) = sqrt (4 / x - 1) * x", "by (subst real_sqrt_mult) simp_all"], ["proof (state)\nthis:\n  sqrt ((4 / x - 1) * x\\<^sup>2) = sqrt (4 / x - 1) * x\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       x \\<in> {0<..<?b} \\<Longrightarrow>\n       sqrt ((4 - x) * x) = sqrt (4 / x - 1) * x\n 2. 0 < ?b", "finally"], ["proof (chain)\npicking this:\n  sqrt ((4 - x) * x) = sqrt (4 / x - 1) * x", "show \"sqrt ((4 - x) * x) = sqrt (4/x - 1) * x\""], ["proof (prove)\nusing this:\n  sqrt ((4 - x) * x) = sqrt (4 / x - 1) * x\n\ngoal (1 subgoal):\n 1. sqrt ((4 - x) * x) = sqrt (4 / x - 1) * x", "."], ["proof (state)\nthis:\n  sqrt ((4 - x) * x) = sqrt (4 / x - 1) * x\n\ngoal (1 subgoal):\n 1. 0 < 1", "qed simp_all"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in at_right 0.\n     sqrt ((4 - x) * x) = sqrt (4 / x - 1) * x\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>\n  Now we prove the integral by explicitly constructing the indefinite integral.\n\\<close>"], ["", "lemma catalan_aux_integral:\n  \"((\\<lambda>x::real. sqrt ((4 - x) / x)) has_integral 2 * pi) {0..4}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. sqrt ((4 - x) / x)) has_integral 2 * pi) {0..4}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. sqrt ((4 - x) / x)) has_integral 2 * pi) {0..4}", "define F where \"F \\<equiv> \\<lambda>x. sqrt (4/x - 1) * x - 2 * arctan ((sqrt (4/x - 1) * (x - 2)) / (x - 4))\"\n    \\<comment> \\<open>The nice part of the indefinite integral. The endpoints are removable singularities.\\<close>"], ["proof (state)\nthis:\n  F \\<equiv>\n  \\<lambda>x.\n     sqrt (4 / x - 1) * x -\n     2 * arctan (sqrt (4 / x - 1) * (x - 2) / (x - 4))\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. sqrt ((4 - x) / x)) has_integral 2 * pi) {0..4}", "define G where \"G \\<equiv> \\<lambda>x. if x = 4 then pi else if x = 0 then -pi else F x\"\n    \\<comment> \\<open>The actual indefinite integral including the endpoints.\\<close>\n\n  \\<comment> \\<open>We now prove that the indefinite integral indeed tends to @{term \"pi\"} resp. @{term \"-pi\"} \n      at the edges of the integration interval.\\<close>"], ["proof (state)\nthis:\n  G \\<equiv> \\<lambda>x. if x = 4 then pi else if x = 0 then - pi else F x\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. sqrt ((4 - x) / x)) has_integral 2 * pi) {0..4}", "have \"filterlim (\\<lambda>x. (x - 2) / (x - 4) * sqrt (-1 + 4/x)) at_top (at_right 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LIM x at_right 0. (x - 2) / (x - 4) * sqrt (- 1 + 4 / x) :> at_top", "by (rule filterlim_tendsto_pos_mult_at_top tendsto_intros filterlim_tendsto_add_at_top\n          filterlim_compose[OF sqrt_at_top] LIM_at_top_divide eventually_at_rightI[of 0 1] | simp)+"], ["proof (state)\nthis:\n  LIM x at_right 0. (x - 2) / (x - 4) * sqrt (- 1 + 4 / x) :> at_top\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. sqrt ((4 - x) / x)) has_integral 2 * pi) {0..4}", "hence *: \"filterlim (\\<lambda>x. (sqrt (4/x - 1) * (x - 2)) / (x - 4)) at_top (at_right 0)\""], ["proof (prove)\nusing this:\n  LIM x at_right 0. (x - 2) / (x - 4) * sqrt (- 1 + 4 / x) :> at_top\n\ngoal (1 subgoal):\n 1. LIM x at_right 0. sqrt (4 / x - 1) * (x - 2) / (x - 4) :> at_top", "by (simp add: field_simps)"], ["proof (state)\nthis:\n  LIM x at_right 0. sqrt (4 / x - 1) * (x - 2) / (x - 4) :> at_top\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. sqrt ((4 - x) / x)) has_integral 2 * pi) {0..4}", "have \"(F \\<longlongrightarrow> 0 - 2 * (pi/2)) (at_right 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (F \\<longlongrightarrow> 0 - 2 * (pi / 2)) (at_right 0)", "unfolding F_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         sqrt (4 / x - 1) * x -\n         2 *\n         arctan\n          (sqrt (4 / x - 1) * (x - 2) / (x - 4))) \\<longlongrightarrow>\n     0 - 2 * (pi / 2))\n     (at_right 0)", "by (intro tendsto_intros limit2 filterlim_compose[OF tendsto_arctan_at_top] *)"], ["proof (state)\nthis:\n  (F \\<longlongrightarrow> 0 - 2 * (pi / 2)) (at_right 0)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. sqrt ((4 - x) / x)) has_integral 2 * pi) {0..4}", "hence \"(F \\<longlongrightarrow> -pi) (at_right 0)\""], ["proof (prove)\nusing this:\n  (F \\<longlongrightarrow> 0 - 2 * (pi / 2)) (at_right 0)\n\ngoal (1 subgoal):\n 1. (F \\<longlongrightarrow> - pi) (at_right 0)", "by simp"], ["proof (state)\nthis:\n  (F \\<longlongrightarrow> - pi) (at_right 0)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. sqrt ((4 - x) / x)) has_integral 2 * pi) {0..4}", "hence G_0: \"(G \\<longlongrightarrow> -pi) (at_right 0)\""], ["proof (prove)\nusing this:\n  (F \\<longlongrightarrow> - pi) (at_right 0)\n\ngoal (1 subgoal):\n 1. (G \\<longlongrightarrow> - pi) (at_right 0)", "unfolding G_def"], ["proof (prove)\nusing this:\n  (F \\<longlongrightarrow> - pi) (at_right 0)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         if x = 4 then pi\n         else if x = 0 then - pi else F x) \\<longlongrightarrow>\n     - pi)\n     (at_right 0)", "by (rule Lim_transform_eventually) (auto intro!: eventually_at_rightI[of 0 1])"], ["proof (state)\nthis:\n  (G \\<longlongrightarrow> - pi) (at_right 0)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. sqrt ((4 - x) / x)) has_integral 2 * pi) {0..4}", "have *: \"((\\<lambda>x. sqrt (4 / x - 1) * x) \\<longlongrightarrow> 0) (at_left 4)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. sqrt (4 / x - 1) * x) \\<longlongrightarrow> 0) (at_left 4)", "by (force intro: tendsto_eq_intros)"], ["proof (state)\nthis:\n  ((\\<lambda>x. sqrt (4 / x - 1) * x) \\<longlongrightarrow> 0) (at_left 4)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. sqrt ((4 - x) / x)) has_integral 2 * pi) {0..4}", "have \"filterlim (\\<lambda>x. (x - 2) * (sqrt (4 / x - 1) / (x - 4))) at_bot (at_left 4)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. LIM x at_left 4. (x - 2) * (sqrt (4 / x - 1) / (x - 4)) :> at_bot", "by (rule filterlim_tendsto_pos_mult_at_bot tendsto_intros limit1 | simp)+"], ["proof (state)\nthis:\n  LIM x at_left 4. (x - 2) * (sqrt (4 / x - 1) / (x - 4)) :> at_bot\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. sqrt ((4 - x) / x)) has_integral 2 * pi) {0..4}", "hence **: \"LIM x at_left 4. sqrt (4 / x - 1) * (x - 2) / (x - 4) :> at_bot\""], ["proof (prove)\nusing this:\n  LIM x at_left 4. (x - 2) * (sqrt (4 / x - 1) / (x - 4)) :> at_bot\n\ngoal (1 subgoal):\n 1. LIM x at_left 4. sqrt (4 / x - 1) * (x - 2) / (x - 4) :> at_bot", "by (simp add: mult_ac)"], ["proof (state)\nthis:\n  LIM x at_left 4. sqrt (4 / x - 1) * (x - 2) / (x - 4) :> at_bot\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. sqrt ((4 - x) / x)) has_integral 2 * pi) {0..4}", "have \"(F \\<longlongrightarrow> 0 - 2 * -(pi/2)) (at_left 4)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (F \\<longlongrightarrow> 0 - 2 * - (pi / 2)) (at_left 4)", "unfolding F_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         sqrt (4 / x - 1) * x -\n         2 *\n         arctan\n          (sqrt (4 / x - 1) * (x - 2) / (x - 4))) \\<longlongrightarrow>\n     0 - 2 * - (pi / 2))\n     (at_left 4)", "by (intro tendsto_intros * ** filterlim_compose[OF tendsto_arctan_at_bot])"], ["proof (state)\nthis:\n  (F \\<longlongrightarrow> 0 - 2 * - (pi / 2)) (at_left 4)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. sqrt ((4 - x) / x)) has_integral 2 * pi) {0..4}", "hence \"(F \\<longlongrightarrow> pi) (at_left 4)\""], ["proof (prove)\nusing this:\n  (F \\<longlongrightarrow> 0 - 2 * - (pi / 2)) (at_left 4)\n\ngoal (1 subgoal):\n 1. (F \\<longlongrightarrow> pi) (at_left 4)", "by simp"], ["proof (state)\nthis:\n  (F \\<longlongrightarrow> pi) (at_left 4)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. sqrt ((4 - x) / x)) has_integral 2 * pi) {0..4}", "hence G_4: \"(G \\<longlongrightarrow> pi) (at_left 4)\""], ["proof (prove)\nusing this:\n  (F \\<longlongrightarrow> pi) (at_left 4)\n\ngoal (1 subgoal):\n 1. (G \\<longlongrightarrow> pi) (at_left 4)", "unfolding G_def"], ["proof (prove)\nusing this:\n  (F \\<longlongrightarrow> pi) (at_left 4)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         if x = 4 then pi\n         else if x = 0 then - pi else F x) \\<longlongrightarrow>\n     pi)\n     (at_left 4)", "by (rule Lim_transform_eventually) (auto intro!: eventually_at_leftI[of 1])\n  \n  \\<comment> \\<open>The derivative of @{term G} is indeed the integrand in the interior of \n      the integration interval.\\<close>"], ["proof (state)\nthis:\n  (G \\<longlongrightarrow> pi) (at_left 4)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. sqrt ((4 - x) / x)) has_integral 2 * pi) {0..4}", "have deriv_G: \"(G has_field_derivative sqrt ((4 - x) / x)) (at x)\" if x: \"x \\<in> {0<..<4}\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. (G has_real_derivative sqrt ((4 - x) / x)) (at x)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (G has_real_derivative sqrt ((4 - x) / x)) (at x)", "from x"], ["proof (chain)\npicking this:\n  x \\<in> {0<..<4}", "have \"eventually (\\<lambda>y. y \\<in> {0<..<4}) (nhds x)\""], ["proof (prove)\nusing this:\n  x \\<in> {0<..<4}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F y in nhds x. y \\<in> {0<..<4}", "by (intro eventually_nhds_in_open) simp_all"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F y in nhds x. y \\<in> {0<..<4}\n\ngoal (1 subgoal):\n 1. (G has_real_derivative sqrt ((4 - x) / x)) (at x)", "hence eq: \"eventually (\\<lambda>x. F x = G x) (nhds x)\""], ["proof (prove)\nusing this:\n  \\<forall>\\<^sub>F y in nhds x. y \\<in> {0<..<4}\n\ngoal (1 subgoal):\n 1. \\<forall>\\<^sub>F x in nhds x. F x = G x", "by eventually_elim (simp add: G_def)"], ["proof (state)\nthis:\n  \\<forall>\\<^sub>F x in nhds x. F x = G x\n\ngoal (1 subgoal):\n 1. (G has_real_derivative sqrt ((4 - x) / x)) (at x)", "define T where \"T \\<equiv> \\<lambda>x::real. 4 / (sqrt (4/x - 1) * (x - 4) * x^2)\""], ["proof (state)\nthis:\n  T \\<equiv> \\<lambda>x. 4 / (sqrt (4 / x - 1) * (x - 4) * x\\<^sup>2)\n\ngoal (1 subgoal):\n 1. (G has_real_derivative sqrt ((4 - x) / x)) (at x)", "have *: \"((\\<lambda>x. (sqrt (4/x - 1) * (x - 2)) / (x - 4)) has_field_derivative T x) (at x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. sqrt (4 / x - 1) * (x - 2) / (x - 4)) has_real_derivative\n     T x)\n     (at x)", "by (insert x, rule derivative_eq_intros refl | simp)+\n         (simp add: divide_simps T_def, simp add: field_simps power2_eq_square)"], ["proof (state)\nthis:\n  ((\\<lambda>x. sqrt (4 / x - 1) * (x - 2) / (x - 4)) has_real_derivative\n   T x)\n   (at x)\n\ngoal (1 subgoal):\n 1. (G has_real_derivative sqrt ((4 - x) / x)) (at x)", "have \"((\\<lambda>x. 2 * arctan ((sqrt (4/x - 1) * (x - 2)) / (x - 4))) has_field_derivative \n             2 * T x / (1 + (sqrt (4 / x - 1) * (x - 2) / (x - 4))\\<^sup>2)) (at x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         2 *\n         arctan (sqrt (4 / x - 1) * (x - 2) / (x - 4))) has_real_derivative\n     2 * T x / (1 + (sqrt (4 / x - 1) * (x - 2) / (x - 4))\\<^sup>2))\n     (at x)", "by (rule * derivative_eq_intros refl | simp)+ (simp add: field_simps)"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       2 *\n       arctan (sqrt (4 / x - 1) * (x - 2) / (x - 4))) has_real_derivative\n   2 * T x / (1 + (sqrt (4 / x - 1) * (x - 2) / (x - 4))\\<^sup>2))\n   (at x)\n\ngoal (1 subgoal):\n 1. (G has_real_derivative sqrt ((4 - x) / x)) (at x)", "also"], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       2 *\n       arctan (sqrt (4 / x - 1) * (x - 2) / (x - 4))) has_real_derivative\n   2 * T x / (1 + (sqrt (4 / x - 1) * (x - 2) / (x - 4))\\<^sup>2))\n   (at x)\n\ngoal (1 subgoal):\n 1. (G has_real_derivative sqrt ((4 - x) / x)) (at x)", "from x"], ["proof (chain)\npicking this:\n  x \\<in> {0<..<4}", "have \"(sqrt (4 / x - 1) * (x - 2) / (x - 4))\\<^sup>2 = (4/x - 1) * (x-2)^2 / (x - 4)^2\""], ["proof (prove)\nusing this:\n  x \\<in> {0<..<4}\n\ngoal (1 subgoal):\n 1. (sqrt (4 / x - 1) * (x - 2) / (x - 4))\\<^sup>2 =\n    (4 / x - 1) * (x - 2)\\<^sup>2 / (x - 4)\\<^sup>2", "by (simp add: power_mult_distrib power_divide)"], ["proof (state)\nthis:\n  (sqrt (4 / x - 1) * (x - 2) / (x - 4))\\<^sup>2 =\n  (4 / x - 1) * (x - 2)\\<^sup>2 / (x - 4)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (G has_real_derivative sqrt ((4 - x) / x)) (at x)", "also"], ["proof (state)\nthis:\n  (sqrt (4 / x - 1) * (x - 2) / (x - 4))\\<^sup>2 =\n  (4 / x - 1) * (x - 2)\\<^sup>2 / (x - 4)\\<^sup>2\n\ngoal (1 subgoal):\n 1. (G has_real_derivative sqrt ((4 - x) / x)) (at x)", "from x"], ["proof (chain)\npicking this:\n  x \\<in> {0<..<4}", "have \"1 + \\<dots> = -4 / ((x - 4) * x)\""], ["proof (prove)\nusing this:\n  x \\<in> {0<..<4}\n\ngoal (1 subgoal):\n 1. 1 + (4 / x - 1) * (x - 2)\\<^sup>2 / (x - 4)\\<^sup>2 =\n    - 4 / ((x - 4) * x)", "by (simp add: divide_simps power2_eq_square mult_ac) (simp add: algebra_simps)?"], ["proof (state)\nthis:\n  1 + (4 / x - 1) * (x - 2)\\<^sup>2 / (x - 4)\\<^sup>2 = - 4 / ((x - 4) * x)\n\ngoal (1 subgoal):\n 1. (G has_real_derivative sqrt ((4 - x) / x)) (at x)", "also"], ["proof (state)\nthis:\n  1 + (4 / x - 1) * (x - 2)\\<^sup>2 / (x - 4)\\<^sup>2 = - 4 / ((x - 4) * x)\n\ngoal (1 subgoal):\n 1. (G has_real_derivative sqrt ((4 - x) / x)) (at x)", "from x"], ["proof (chain)\npicking this:\n  x \\<in> {0<..<4}", "have \"2 * T x / \\<dots> = - (2 / (x * sqrt (4 / x - 1)))\""], ["proof (prove)\nusing this:\n  x \\<in> {0<..<4}\n\ngoal (1 subgoal):\n 1. 2 * T x / (- 4 / ((x - 4) * x)) = - (2 / (x * sqrt (4 / x - 1)))", "by (simp add: T_def power2_eq_square)"], ["proof (state)\nthis:\n  2 * T x / (- 4 / ((x - 4) * x)) = - (2 / (x * sqrt (4 / x - 1)))\n\ngoal (1 subgoal):\n 1. (G has_real_derivative sqrt ((4 - x) / x)) (at x)", "finally"], ["proof (chain)\npicking this:\n  ((\\<lambda>x.\n       2 *\n       arctan (sqrt (4 / x - 1) * (x - 2) / (x - 4))) has_real_derivative\n   - (2 / (x * sqrt (4 / x - 1))))\n   (at x)", "have *: \"((\\<lambda>x. 2 * arctan (sqrt (4 / x - 1) * (x - 2) / (x - 4))) has_real_derivative\n                        - (2 / (x * sqrt (4 / x - 1)))) (at x)\""], ["proof (prove)\nusing this:\n  ((\\<lambda>x.\n       2 *\n       arctan (sqrt (4 / x - 1) * (x - 2) / (x - 4))) has_real_derivative\n   - (2 / (x * sqrt (4 / x - 1))))\n   (at x)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         2 *\n         arctan (sqrt (4 / x - 1) * (x - 2) / (x - 4))) has_real_derivative\n     - (2 / (x * sqrt (4 / x - 1))))\n     (at x)", "."], ["proof (state)\nthis:\n  ((\\<lambda>x.\n       2 *\n       arctan (sqrt (4 / x - 1) * (x - 2) / (x - 4))) has_real_derivative\n   - (2 / (x * sqrt (4 / x - 1))))\n   (at x)\n\ngoal (1 subgoal):\n 1. (G has_real_derivative sqrt ((4 - x) / x)) (at x)", "have \"(F has_field_derivative sqrt (4 / x - 1)) (at x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (F has_real_derivative sqrt (4 / x - 1)) (at x)", "unfolding F_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x.\n         sqrt (4 / x - 1) * x -\n         2 *\n         arctan (sqrt (4 / x - 1) * (x - 2) / (x - 4))) has_real_derivative\n     sqrt (4 / x - 1))\n     (at x)", "by (insert x, (rule * derivative_eq_intros refl | simp)+) (simp add: field_simps)"], ["proof (state)\nthis:\n  (F has_real_derivative sqrt (4 / x - 1)) (at x)\n\ngoal (1 subgoal):\n 1. (G has_real_derivative sqrt ((4 - x) / x)) (at x)", "thus ?thesis"], ["proof (prove)\nusing this:\n  (F has_real_derivative sqrt (4 / x - 1)) (at x)\n\ngoal (1 subgoal):\n 1. (G has_real_derivative sqrt ((4 - x) / x)) (at x)", "by (subst (asm) DERIV_cong_ev[OF refl eq refl]) (insert x, simp add: field_simps)"], ["proof (state)\nthis:\n  (G has_real_derivative sqrt ((4 - x) / x)) (at x)\n\ngoal:\nNo subgoals!", "qed\n  \n  \\<comment> \\<open>It is now obvious that @{term G} is continuous over the entire integration interval.\\<close>"], ["proof (state)\nthis:\n  ?x \\<in> {0<..<4} \\<Longrightarrow>\n  (G has_real_derivative sqrt ((4 - ?x) / ?x)) (at ?x)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. sqrt ((4 - x) / x)) has_integral 2 * pi) {0..4}", "have cont_G: \"continuous_on {0..4} G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. continuous_on {0..4} G", "unfolding continuous_on"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>{0..4}.\n       (G \\<longlongrightarrow> G x) (at x within {0..4})", "proof safe"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {0..4} \\<Longrightarrow>\n       (G \\<longlongrightarrow> G x) (at x within {0..4})", "fix x :: real"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {0..4} \\<Longrightarrow>\n       (G \\<longlongrightarrow> G x) (at x within {0..4})", "assume \"x \\<in> {0..4}\""], ["proof (state)\nthis:\n  x \\<in> {0..4}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {0..4} \\<Longrightarrow>\n       (G \\<longlongrightarrow> G x) (at x within {0..4})", "then"], ["proof (chain)\npicking this:\n  x \\<in> {0..4}", "consider \"x = 0\" | \"x = 4\" | \"x \\<in> {0<..<4}\""], ["proof (prove)\nusing this:\n  x \\<in> {0..4}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>x = 0 \\<Longrightarrow> thesis; x = 4 \\<Longrightarrow> thesis;\n     x \\<in> {0<..<4} \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by force"], ["proof (state)\nthis:\n  \\<lbrakk>x = 0 \\<Longrightarrow> ?thesis; x = 4 \\<Longrightarrow> ?thesis;\n   x \\<in> {0<..<4} \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {0..4} \\<Longrightarrow>\n       (G \\<longlongrightarrow> G x) (at x within {0..4})", "thus \"(G \\<longlongrightarrow> G x) (at x within {0..4})\""], ["proof (prove)\nusing this:\n  \\<lbrakk>x = 0 \\<Longrightarrow> ?thesis; x = 4 \\<Longrightarrow> ?thesis;\n   x \\<in> {0<..<4} \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (G \\<longlongrightarrow> G x) (at x within {0..4})", "proof cases"], ["proof (state)\ngoal (3 subgoals):\n 1. x = 0 \\<Longrightarrow>\n    (G \\<longlongrightarrow> G x) (at x within {0..4})\n 2. x = 4 \\<Longrightarrow>\n    (G \\<longlongrightarrow> G x) (at x within {0..4})\n 3. x \\<in> {0<..<4} \\<Longrightarrow>\n    (G \\<longlongrightarrow> G x) (at x within {0..4})", "assume \"x = 0\""], ["proof (state)\nthis:\n  x = 0\n\ngoal (3 subgoals):\n 1. x = 0 \\<Longrightarrow>\n    (G \\<longlongrightarrow> G x) (at x within {0..4})\n 2. x = 4 \\<Longrightarrow>\n    (G \\<longlongrightarrow> G x) (at x within {0..4})\n 3. x \\<in> {0<..<4} \\<Longrightarrow>\n    (G \\<longlongrightarrow> G x) (at x within {0..4})", "have *: \"at (0::real) within {0..4} \\<le> at_right 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. at 0 within {0..4} \\<le> at_right 0", "unfolding at_within_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. inf (nhds 0) (principal ({0..4} - {0}))\n    \\<le> inf (nhds 0) (principal ({0<..} - {0}))", "by (rule inf_mono) auto"], ["proof (state)\nthis:\n  at 0 within {0..4} \\<le> at_right 0\n\ngoal (3 subgoals):\n 1. x = 0 \\<Longrightarrow>\n    (G \\<longlongrightarrow> G x) (at x within {0..4})\n 2. x = 4 \\<Longrightarrow>\n    (G \\<longlongrightarrow> G x) (at x within {0..4})\n 3. x \\<in> {0<..<4} \\<Longrightarrow>\n    (G \\<longlongrightarrow> G x) (at x within {0..4})", "from G_0"], ["proof (chain)\npicking this:\n  (G \\<longlongrightarrow> - pi) (at_right 0)", "have \"(G \\<longlongrightarrow> -pi) (at x within {0..4})\""], ["proof (prove)\nusing this:\n  (G \\<longlongrightarrow> - pi) (at_right 0)\n\ngoal (1 subgoal):\n 1. (G \\<longlongrightarrow> - pi) (at x within {0..4})", "by (rule filterlim_mono) (simp_all add: * \\<open>x = 0\\<close>)"], ["proof (state)\nthis:\n  (G \\<longlongrightarrow> - pi) (at x within {0..4})\n\ngoal (3 subgoals):\n 1. x = 0 \\<Longrightarrow>\n    (G \\<longlongrightarrow> G x) (at x within {0..4})\n 2. x = 4 \\<Longrightarrow>\n    (G \\<longlongrightarrow> G x) (at x within {0..4})\n 3. x \\<in> {0<..<4} \\<Longrightarrow>\n    (G \\<longlongrightarrow> G x) (at x within {0..4})", "also"], ["proof (state)\nthis:\n  (G \\<longlongrightarrow> - pi) (at x within {0..4})\n\ngoal (3 subgoals):\n 1. x = 0 \\<Longrightarrow>\n    (G \\<longlongrightarrow> G x) (at x within {0..4})\n 2. x = 4 \\<Longrightarrow>\n    (G \\<longlongrightarrow> G x) (at x within {0..4})\n 3. x \\<in> {0<..<4} \\<Longrightarrow>\n    (G \\<longlongrightarrow> G x) (at x within {0..4})", "have \"-pi = G x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. - pi = G x", "by (simp add: G_def \\<open>x = 0\\<close>)"], ["proof (state)\nthis:\n  - pi = G x\n\ngoal (3 subgoals):\n 1. x = 0 \\<Longrightarrow>\n    (G \\<longlongrightarrow> G x) (at x within {0..4})\n 2. x = 4 \\<Longrightarrow>\n    (G \\<longlongrightarrow> G x) (at x within {0..4})\n 3. x \\<in> {0<..<4} \\<Longrightarrow>\n    (G \\<longlongrightarrow> G x) (at x within {0..4})", "finally"], ["proof (chain)\npicking this:\n  (G \\<longlongrightarrow> G x) (at x within {0..4})", "show ?thesis"], ["proof (prove)\nusing this:\n  (G \\<longlongrightarrow> G x) (at x within {0..4})\n\ngoal (1 subgoal):\n 1. (G \\<longlongrightarrow> G x) (at x within {0..4})", "."], ["proof (state)\nthis:\n  (G \\<longlongrightarrow> G x) (at x within {0..4})\n\ngoal (2 subgoals):\n 1. x = 4 \\<Longrightarrow>\n    (G \\<longlongrightarrow> G x) (at x within {0..4})\n 2. x \\<in> {0<..<4} \\<Longrightarrow>\n    (G \\<longlongrightarrow> G x) (at x within {0..4})", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. x = 4 \\<Longrightarrow>\n    (G \\<longlongrightarrow> G x) (at x within {0..4})\n 2. x \\<in> {0<..<4} \\<Longrightarrow>\n    (G \\<longlongrightarrow> G x) (at x within {0..4})", "assume \"x = 4\""], ["proof (state)\nthis:\n  x = 4\n\ngoal (2 subgoals):\n 1. x = 4 \\<Longrightarrow>\n    (G \\<longlongrightarrow> G x) (at x within {0..4})\n 2. x \\<in> {0<..<4} \\<Longrightarrow>\n    (G \\<longlongrightarrow> G x) (at x within {0..4})", "have *: \"at (4::real) within {0..4} \\<le> at_left 4\""], ["proof (prove)\ngoal (1 subgoal):\n 1. at 4 within {0..4} \\<le> at_left 4", "unfolding at_within_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. inf (nhds 4) (principal ({0..4} - {4}))\n    \\<le> inf (nhds 4) (principal ({..<4} - {4}))", "by (rule inf_mono) auto"], ["proof (state)\nthis:\n  at 4 within {0..4} \\<le> at_left 4\n\ngoal (2 subgoals):\n 1. x = 4 \\<Longrightarrow>\n    (G \\<longlongrightarrow> G x) (at x within {0..4})\n 2. x \\<in> {0<..<4} \\<Longrightarrow>\n    (G \\<longlongrightarrow> G x) (at x within {0..4})", "from G_4"], ["proof (chain)\npicking this:\n  (G \\<longlongrightarrow> pi) (at_left 4)", "have \"(G \\<longlongrightarrow> pi) (at x within {0..4})\""], ["proof (prove)\nusing this:\n  (G \\<longlongrightarrow> pi) (at_left 4)\n\ngoal (1 subgoal):\n 1. (G \\<longlongrightarrow> pi) (at x within {0..4})", "by (rule filterlim_mono) (simp_all add: * \\<open>x = 4\\<close>)"], ["proof (state)\nthis:\n  (G \\<longlongrightarrow> pi) (at x within {0..4})\n\ngoal (2 subgoals):\n 1. x = 4 \\<Longrightarrow>\n    (G \\<longlongrightarrow> G x) (at x within {0..4})\n 2. x \\<in> {0<..<4} \\<Longrightarrow>\n    (G \\<longlongrightarrow> G x) (at x within {0..4})", "also"], ["proof (state)\nthis:\n  (G \\<longlongrightarrow> pi) (at x within {0..4})\n\ngoal (2 subgoals):\n 1. x = 4 \\<Longrightarrow>\n    (G \\<longlongrightarrow> G x) (at x within {0..4})\n 2. x \\<in> {0<..<4} \\<Longrightarrow>\n    (G \\<longlongrightarrow> G x) (at x within {0..4})", "have \"pi = G x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pi = G x", "by (simp add: G_def \\<open>x = 4\\<close>)"], ["proof (state)\nthis:\n  pi = G x\n\ngoal (2 subgoals):\n 1. x = 4 \\<Longrightarrow>\n    (G \\<longlongrightarrow> G x) (at x within {0..4})\n 2. x \\<in> {0<..<4} \\<Longrightarrow>\n    (G \\<longlongrightarrow> G x) (at x within {0..4})", "finally"], ["proof (chain)\npicking this:\n  (G \\<longlongrightarrow> G x) (at x within {0..4})", "show ?thesis"], ["proof (prove)\nusing this:\n  (G \\<longlongrightarrow> G x) (at x within {0..4})\n\ngoal (1 subgoal):\n 1. (G \\<longlongrightarrow> G x) (at x within {0..4})", "."], ["proof (state)\nthis:\n  (G \\<longlongrightarrow> G x) (at x within {0..4})\n\ngoal (1 subgoal):\n 1. x \\<in> {0<..<4} \\<Longrightarrow>\n    (G \\<longlongrightarrow> G x) (at x within {0..4})", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> {0<..<4} \\<Longrightarrow>\n    (G \\<longlongrightarrow> G x) (at x within {0..4})", "assume \"x \\<in> {0<..<4}\""], ["proof (state)\nthis:\n  x \\<in> {0<..<4}\n\ngoal (1 subgoal):\n 1. x \\<in> {0<..<4} \\<Longrightarrow>\n    (G \\<longlongrightarrow> G x) (at x within {0..4})", "from deriv_G[OF this]"], ["proof (chain)\npicking this:\n  (G has_real_derivative sqrt ((4 - x) / x)) (at x)", "have \"isCont G x\""], ["proof (prove)\nusing this:\n  (G has_real_derivative sqrt ((4 - x) / x)) (at x)\n\ngoal (1 subgoal):\n 1. isCont G x", "by (rule DERIV_isCont)"], ["proof (state)\nthis:\n  isCont G x\n\ngoal (1 subgoal):\n 1. x \\<in> {0<..<4} \\<Longrightarrow>\n    (G \\<longlongrightarrow> G x) (at x within {0..4})", "thus ?thesis"], ["proof (prove)\nusing this:\n  isCont G x\n\ngoal (1 subgoal):\n 1. (G \\<longlongrightarrow> G x) (at x within {0..4})", "unfolding isCont_def"], ["proof (prove)\nusing this:\n  G \\<midarrow>x\\<rightarrow> G x\n\ngoal (1 subgoal):\n 1. (G \\<longlongrightarrow> G x) (at x within {0..4})", "by (rule filterlim_mono) (auto simp: at_le)"], ["proof (state)\nthis:\n  (G \\<longlongrightarrow> G x) (at x within {0..4})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (G \\<longlongrightarrow> G x) (at x within {0..4})\n\ngoal:\nNo subgoals!", "qed\n  \n  \\<comment> \\<open>Finally, we can apply the Fundamental Theorem of Calculus.\\<close>"], ["proof (state)\nthis:\n  continuous_on {0..4} G\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. sqrt ((4 - x) / x)) has_integral 2 * pi) {0..4}", "have \"((\\<lambda>x. sqrt ((4 - x) / x)) has_integral G 4 - G 0) {0..4}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>x. sqrt ((4 - x) / x)) has_integral G 4 - G 0) {0..4}", "using cont_G deriv_G"], ["proof (prove)\nusing this:\n  continuous_on {0..4} G\n  ?x \\<in> {0<..<4} \\<Longrightarrow>\n  (G has_real_derivative sqrt ((4 - ?x) / ?x)) (at ?x)\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. sqrt ((4 - x) / x)) has_integral G 4 - G 0) {0..4}", "by (intro fundamental_theorem_of_calculus_interior)\n       (auto simp: has_field_derivative_iff_has_vector_derivative)"], ["proof (state)\nthis:\n  ((\\<lambda>x. sqrt ((4 - x) / x)) has_integral G 4 - G 0) {0..4}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. sqrt ((4 - x) / x)) has_integral 2 * pi) {0..4}", "also"], ["proof (state)\nthis:\n  ((\\<lambda>x. sqrt ((4 - x) / x)) has_integral G 4 - G 0) {0..4}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. sqrt ((4 - x) / x)) has_integral 2 * pi) {0..4}", "have \"G 4 - G 0 = 2 * pi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. G 4 - G 0 = 2 * pi", "by (simp add: G_def)"], ["proof (state)\nthis:\n  G 4 - G 0 = 2 * pi\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. sqrt ((4 - x) / x)) has_integral 2 * pi) {0..4}", "finally"], ["proof (chain)\npicking this:\n  ((\\<lambda>x. sqrt ((4 - x) / x)) has_integral 2 * pi) {0..4}", "show ?thesis"], ["proof (prove)\nusing this:\n  ((\\<lambda>x. sqrt ((4 - x) / x)) has_integral 2 * pi) {0..4}\n\ngoal (1 subgoal):\n 1. ((\\<lambda>x. sqrt ((4 - x) / x)) has_integral 2 * pi) {0..4}", "."], ["proof (state)\nthis:\n  ((\\<lambda>x. sqrt ((4 - x) / x)) has_integral 2 * pi) {0..4}\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}