{"file_name": "/home/qj213/afp-2021-10-22/thys/Flyspeck-Tame/Relative_Completeness.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Flyspeck-Tame", "problem_names": ["theorem TameEnum_Archive:  \"fgraph ` TameEnum \\<subseteq>\\<^sub>\\<simeq> Archive\"", "lemma TameEnum_comp:\nassumes \"Seed\\<^bsub>p\\<^esub> [next_plane\\<^bsub>p\\<^esub>]\\<rightarrow>* g\" and \"final g\" and \"tame g\"\nshows \"Seed\\<^bsub>p\\<^esub> [next_tame\\<^bsub>p\\<^esub>]\\<rightarrow>* g\"", "lemma tame5:\nassumes g: \"Seed\\<^bsub>p\\<^esub> [next_plane0\\<^bsub>p\\<^esub>]\\<rightarrow>* g\" and \"final g\" and \"tame g\"\nshows \"p \\<le> 3\"", "theorem completeness:\nassumes \"g \\<in> PlaneGraphs\" and \"tame g\" shows \"fgraph g \\<in>\\<^sub>\\<simeq> Archive\""], "translations": [["", "theorem TameEnum_Archive:  \"fgraph ` TameEnum \\<subseteq>\\<^sub>\\<simeq> Archive\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fgraph ` TameEnum \\<subseteq>\\<^sub>\\<simeq> Archive", "using combine_evals_filter[OF pre_iso_test3 same3]\n      combine_evals_filter[OF pre_iso_test4 same4]\n      combine_evals_filter[OF pre_iso_test5 same5]\n      combine_evals_filter[OF pre_iso_test6 same6]"], ["proof (prove)\nusing this:\n  fgraph ` TameEnum\\<^bsub>0\\<^esub> \\<subseteq>\\<^sub>\\<simeq> set Tri\n  fgraph ` TameEnum\\<^bsub>1\\<^esub> \\<subseteq>\\<^sub>\\<simeq> set Quad\n  fgraph ` TameEnum\\<^bsub>2\\<^esub> \\<subseteq>\\<^sub>\\<simeq> set Pent\n  fgraph ` TameEnum\\<^bsub>3\\<^esub> \\<subseteq>\\<^sub>\\<simeq> set Hex\n\ngoal (1 subgoal):\n 1. fgraph ` TameEnum \\<subseteq>\\<^sub>\\<simeq> Archive", "by(fastforce simp:TameEnum_def Archive_def image_def qle_gr.defs\n       eval_nat_numeral le_Suc_eq)"], ["", "lemma TameEnum_comp:\nassumes \"Seed\\<^bsub>p\\<^esub> [next_plane\\<^bsub>p\\<^esub>]\\<rightarrow>* g\" and \"final g\" and \"tame g\"\nshows \"Seed\\<^bsub>p\\<^esub> [next_tame\\<^bsub>p\\<^esub>]\\<rightarrow>* g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Seed\\<^bsub>p\\<^esub> [next_tame\\<^bsub>p\\<^esub>]\\<rightarrow>* g", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Seed\\<^bsub>p\\<^esub> [next_tame\\<^bsub>p\\<^esub>]\\<rightarrow>* g", "from assms"], ["proof (chain)\npicking this:\n  Seed\\<^bsub>p\\<^esub> [next_plane\\<^bsub>p\\<^esub>]\\<rightarrow>* g\n  final g\n  tame g", "have \"Seed\\<^bsub>p\\<^esub> [next_tame0 p]\\<rightarrow>* g\""], ["proof (prove)\nusing this:\n  Seed\\<^bsub>p\\<^esub> [next_plane\\<^bsub>p\\<^esub>]\\<rightarrow>* g\n  final g\n  tame g\n\ngoal (1 subgoal):\n 1. Seed\\<^bsub>p\\<^esub> [next_tame0\\<^bsub>p\\<^esub>]\\<rightarrow>* g", "by(rule next_tame0_comp)"], ["proof (state)\nthis:\n  Seed\\<^bsub>p\\<^esub> [next_tame0\\<^bsub>p\\<^esub>]\\<rightarrow>* g\n\ngoal (1 subgoal):\n 1. Seed\\<^bsub>p\\<^esub> [next_tame\\<^bsub>p\\<^esub>]\\<rightarrow>* g", "with assms"], ["proof (chain)\npicking this:\n  Seed\\<^bsub>p\\<^esub> [next_plane\\<^bsub>p\\<^esub>]\\<rightarrow>* g\n  final g\n  tame g\n  Seed\\<^bsub>p\\<^esub> [next_tame0\\<^bsub>p\\<^esub>]\\<rightarrow>* g", "show \"Seed\\<^bsub>p\\<^esub> [next_tame\\<^bsub>p\\<^esub>]\\<rightarrow>* g\""], ["proof (prove)\nusing this:\n  Seed\\<^bsub>p\\<^esub> [next_plane\\<^bsub>p\\<^esub>]\\<rightarrow>* g\n  final g\n  tame g\n  Seed\\<^bsub>p\\<^esub> [next_tame0\\<^bsub>p\\<^esub>]\\<rightarrow>* g\n\ngoal (1 subgoal):\n 1. Seed\\<^bsub>p\\<^esub> [next_tame\\<^bsub>p\\<^esub>]\\<rightarrow>* g", "by(blast intro: next_tame_comp)"], ["proof (state)\nthis:\n  Seed\\<^bsub>p\\<^esub> [next_tame\\<^bsub>p\\<^esub>]\\<rightarrow>* g\n\ngoal:\nNo subgoals!", "qed"], ["", "(* final not necessary but slightly simpler because of lemmas *)"], ["", "lemma tame5:\nassumes g: \"Seed\\<^bsub>p\\<^esub> [next_plane0\\<^bsub>p\\<^esub>]\\<rightarrow>* g\" and \"final g\" and \"tame g\"\nshows \"p \\<le> 3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<le> 3", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. p \\<le> 3", "from \\<open>tame g\\<close>"], ["proof (chain)\npicking this:\n  tame g", "have bound: \"\\<forall>f \\<in> \\<F> g. |vertices f| \\<le> 6\""], ["proof (prove)\nusing this:\n  tame g\n\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>\\<F> g. |vertices f| \\<le> 6", "by (simp add: tame_def tame9a_def)"], ["proof (state)\nthis:\n  \\<forall>f\\<in>\\<F> g. |vertices f| \\<le> 6\n\ngoal (1 subgoal):\n 1. p \\<le> 3", "show \"p \\<le> 3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<le> 3", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> p \\<le> 3 \\<Longrightarrow> False", "assume 6: \"\\<not> p \\<le> 3\""], ["proof (state)\nthis:\n  \\<not> p \\<le> 3\n\ngoal (1 subgoal):\n 1. \\<not> p \\<le> 3 \\<Longrightarrow> False", "obtain f where \"f \\<in> set (finals g) \\<and> |vertices f| = p+3\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>f.\n        f \\<in> set (finals g) \\<and> |vertices f| = p + 3 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using max_face_ex[OF g]"], ["proof (prove)\nusing this:\n  \\<exists>f\\<in>set (finals g). |vertices f| = maxGon p\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        f \\<in> set (finals g) \\<and> |vertices f| = p + 3 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  f \\<in> set (finals g) \\<and> |vertices f| = p + 3\n\ngoal (1 subgoal):\n 1. \\<not> p \\<le> 3 \\<Longrightarrow> False", "also"], ["proof (state)\nthis:\n  f \\<in> set (finals g) \\<and> |vertices f| = p + 3\n\ngoal (1 subgoal):\n 1. \\<not> p \\<le> 3 \\<Longrightarrow> False", "from \\<open>final g\\<close>"], ["proof (chain)\npicking this:\n  final g", "have \"set (finals g) = set (faces g)\""], ["proof (prove)\nusing this:\n  final g\n\ngoal (1 subgoal):\n 1. set (finals g) = \\<F> g", "by simp"], ["proof (state)\nthis:\n  set (finals g) = \\<F> g\n\ngoal (1 subgoal):\n 1. \\<not> p \\<le> 3 \\<Longrightarrow> False", "finally"], ["proof (chain)\npicking this:\n  f \\<in> \\<F> g \\<and> |vertices f| = p + 3", "have \"f \\<in> \\<F> g \\<and> 6 < |vertices f|\""], ["proof (prove)\nusing this:\n  f \\<in> \\<F> g \\<and> |vertices f| = p + 3\n\ngoal (1 subgoal):\n 1. f \\<in> \\<F> g \\<and> 6 < |vertices f|", "using 6"], ["proof (prove)\nusing this:\n  f \\<in> \\<F> g \\<and> |vertices f| = p + 3\n  \\<not> p \\<le> 3\n\ngoal (1 subgoal):\n 1. f \\<in> \\<F> g \\<and> 6 < |vertices f|", "by arith"], ["proof (state)\nthis:\n  f \\<in> \\<F> g \\<and> 6 < |vertices f|\n\ngoal (1 subgoal):\n 1. \\<not> p \\<le> 3 \\<Longrightarrow> False", "with bound"], ["proof (chain)\npicking this:\n  \\<forall>f\\<in>\\<F> g. |vertices f| \\<le> 6\n  f \\<in> \\<F> g \\<and> 6 < |vertices f|", "show False"], ["proof (prove)\nusing this:\n  \\<forall>f\\<in>\\<F> g. |vertices f| \\<le> 6\n  f \\<in> \\<F> g \\<and> 6 < |vertices f|\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  p \\<le> 3\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem completeness:\nassumes \"g \\<in> PlaneGraphs\" and \"tame g\" shows \"fgraph g \\<in>\\<^sub>\\<simeq> Archive\""], ["proof (prove)\ngoal (1 subgoal):\n 1. fgraph g \\<in>\\<^sub>\\<simeq> Archive", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. fgraph g \\<in>\\<^sub>\\<simeq> Archive", "from \\<open>g \\<in> PlaneGraphs\\<close>"], ["proof (chain)\npicking this:\n  g \\<in> PlaneGraphs", "obtain p where g1: \"Seed\\<^bsub>p\\<^esub> [next_plane\\<^bsub>p\\<^esub>]\\<rightarrow>* g\"\n    and \"final g\""], ["proof (prove)\nusing this:\n  g \\<in> PlaneGraphs\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>Seed\\<^bsub>p\\<^esub> [next_plane\\<^bsub>p\\<^esub>]\\<rightarrow>* g;\n         final g\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto simp:PlaneGraphs_def PlaneGraphsP_def)"], ["proof (state)\nthis:\n  Seed\\<^bsub>p\\<^esub> [next_plane\\<^bsub>p\\<^esub>]\\<rightarrow>* g\n  final g\n\ngoal (1 subgoal):\n 1. fgraph g \\<in>\\<^sub>\\<simeq> Archive", "have \"Seed\\<^bsub>p\\<^esub> [next_plane0\\<^bsub>p\\<^esub>]\\<rightarrow>* g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Seed\\<^bsub>p\\<^esub> [next_plane0\\<^bsub>p\\<^esub>]\\<rightarrow>* g", "by(rule RTranCl_subset2[OF g1])\n      (blast intro:inv_mgp inv_Seed mgp_next_plane0_if_next_plane\n        dest:RTranCl_inv[OF inv_inv_next_plane])"], ["proof (state)\nthis:\n  Seed\\<^bsub>p\\<^esub> [next_plane0\\<^bsub>p\\<^esub>]\\<rightarrow>* g\n\ngoal (1 subgoal):\n 1. fgraph g \\<in>\\<^sub>\\<simeq> Archive", "with \\<open>tame g\\<close> \\<open>final g\\<close>"], ["proof (chain)\npicking this:\n  tame g\n  final g\n  Seed\\<^bsub>p\\<^esub> [next_plane0\\<^bsub>p\\<^esub>]\\<rightarrow>* g", "have \"p \\<le> 3\""], ["proof (prove)\nusing this:\n  tame g\n  final g\n  Seed\\<^bsub>p\\<^esub> [next_plane0\\<^bsub>p\\<^esub>]\\<rightarrow>* g\n\ngoal (1 subgoal):\n 1. p \\<le> 3", "by(blast intro:tame5)"], ["proof (state)\nthis:\n  p \\<le> 3\n\ngoal (1 subgoal):\n 1. fgraph g \\<in>\\<^sub>\\<simeq> Archive", "with g1 \\<open>tame g\\<close> \\<open>final g\\<close>"], ["proof (chain)\npicking this:\n  Seed\\<^bsub>p\\<^esub> [next_plane\\<^bsub>p\\<^esub>]\\<rightarrow>* g\n  tame g\n  final g\n  p \\<le> 3", "show ?thesis"], ["proof (prove)\nusing this:\n  Seed\\<^bsub>p\\<^esub> [next_plane\\<^bsub>p\\<^esub>]\\<rightarrow>* g\n  tame g\n  final g\n  p \\<le> 3\n\ngoal (1 subgoal):\n 1. fgraph g \\<in>\\<^sub>\\<simeq> Archive", "using TameEnum_Archive"], ["proof (prove)\nusing this:\n  Seed\\<^bsub>p\\<^esub> [next_plane\\<^bsub>p\\<^esub>]\\<rightarrow>* g\n  tame g\n  final g\n  p \\<le> 3\n  fgraph ` TameEnum \\<subseteq>\\<^sub>\\<simeq> Archive\n\ngoal (1 subgoal):\n 1. fgraph g \\<in>\\<^sub>\\<simeq> Archive", "by(simp add: qle_gr.defs TameEnum_def TameEnumP_def)\n      (blast intro: TameEnum_comp)"], ["proof (state)\nthis:\n  fgraph g \\<in>\\<^sub>\\<simeq> Archive\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}