{"file_name": "/home/qj213/afp-2021-10-22/thys/Flyspeck-Tame/RTranCl.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Flyspeck-Tame", "problem_names": ["lemma RTranCl_induct(*<*) [induct set: RTranCl, consumes 1, case_names refl succs] (*>*):\n \"(h, h') \\<in> RTranCl succs \\<Longrightarrow> \n  P h \\<Longrightarrow> \n  (\\<And>g g'. g' \\<in> set (succs g) \\<Longrightarrow> P g \\<Longrightarrow> P g') \\<Longrightarrow> \n  P h'\"", "lemma invariantE:\n  \"invariant P succs  \\<Longrightarrow> g [succs]\\<rightarrow> g' \\<Longrightarrow> P g \\<Longrightarrow> P g'\"", "lemma inv_subset:\n \"invariant P f \\<Longrightarrow> (\\<And>g. P g \\<Longrightarrow> set(f' g) \\<subseteq> set(f g)) \\<Longrightarrow> invariant P f'\"", "lemma RTranCl_inv:\n  \"invariant P succs \\<Longrightarrow> (g,g') \\<in> RTranCl succs \\<Longrightarrow> P g \\<Longrightarrow> P g'\"", "lemma RTranCl_subset2:\nassumes a: \"(s,g) : RTranCl f\"\nshows \"(\\<And>g. (s,g) \\<in> RTranCl f \\<Longrightarrow> set(f g) \\<subseteq> set(h g)) \\<Longrightarrow> (s,g) : RTranCl h\""], "translations": [["", "lemma RTranCl_induct(*<*) [induct set: RTranCl, consumes 1, case_names refl succs] (*>*):\n \"(h, h') \\<in> RTranCl succs \\<Longrightarrow> \n  P h \\<Longrightarrow> \n  (\\<And>g g'. g' \\<in> set (succs g) \\<Longrightarrow> P g \\<Longrightarrow> P g') \\<Longrightarrow> \n  P h'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>h [succs]\\<rightarrow>* h'; P h;\n     \\<And>g g'.\n        \\<lbrakk>g' \\<in> set (succs g); P g\\<rbrakk>\n        \\<Longrightarrow> P g'\\<rbrakk>\n    \\<Longrightarrow> P h'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>h [succs]\\<rightarrow>* h'; P h;\n     \\<And>g g'.\n        \\<lbrakk>g' \\<in> set (succs g); P g\\<rbrakk>\n        \\<Longrightarrow> P g'\\<rbrakk>\n    \\<Longrightarrow> P h'", "assume s: \"\\<And>g g'. g' \\<in> set (succs g) \\<Longrightarrow> P g \\<Longrightarrow> P g'\""], ["proof (state)\nthis:\n  \\<lbrakk>?g' \\<in> set (succs ?g); P ?g\\<rbrakk> \\<Longrightarrow> P ?g'\n\ngoal (1 subgoal):\n 1. \\<lbrakk>h [succs]\\<rightarrow>* h'; P h;\n     \\<And>g g'.\n        \\<lbrakk>g' \\<in> set (succs g); P g\\<rbrakk>\n        \\<Longrightarrow> P g'\\<rbrakk>\n    \\<Longrightarrow> P h'", "assume \"(h, h') \\<in> RTranCl succs\" \"P h\""], ["proof (state)\nthis:\n  h [succs]\\<rightarrow>* h'\n  P h\n\ngoal (1 subgoal):\n 1. \\<lbrakk>h [succs]\\<rightarrow>* h'; P h;\n     \\<And>g g'.\n        \\<lbrakk>g' \\<in> set (succs g); P g\\<rbrakk>\n        \\<Longrightarrow> P g'\\<rbrakk>\n    \\<Longrightarrow> P h'", "then"], ["proof (chain)\npicking this:\n  h [succs]\\<rightarrow>* h'\n  P h", "show \"P h'\""], ["proof (prove)\nusing this:\n  h [succs]\\<rightarrow>* h'\n  P h\n\ngoal (1 subgoal):\n 1. P h'", "proof (induct rule: RTranCl.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>g. P g \\<Longrightarrow> P g\n 2. \\<And>g g' g''.\n       \\<lbrakk>g' \\<in> set (succs g); g' [succs]\\<rightarrow>* g'';\n        P g' \\<Longrightarrow> P g''; P g\\<rbrakk>\n       \\<Longrightarrow> P g''", "fix g"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>g. P g \\<Longrightarrow> P g\n 2. \\<And>g g' g''.\n       \\<lbrakk>g' \\<in> set (succs g); g' [succs]\\<rightarrow>* g'';\n        P g' \\<Longrightarrow> P g''; P g\\<rbrakk>\n       \\<Longrightarrow> P g''", "assume \"P g\""], ["proof (state)\nthis:\n  P g\n\ngoal (2 subgoals):\n 1. \\<And>g. P g \\<Longrightarrow> P g\n 2. \\<And>g g' g''.\n       \\<lbrakk>g' \\<in> set (succs g); g' [succs]\\<rightarrow>* g'';\n        P g' \\<Longrightarrow> P g''; P g\\<rbrakk>\n       \\<Longrightarrow> P g''", "then"], ["proof (chain)\npicking this:\n  P g", "show \"P g\""], ["proof (prove)\nusing this:\n  P g\n\ngoal (1 subgoal):\n 1. P g", "."], ["proof (state)\nthis:\n  P g\n\ngoal (1 subgoal):\n 1. \\<And>g g' g''.\n       \\<lbrakk>g' \\<in> set (succs g); g' [succs]\\<rightarrow>* g'';\n        P g' \\<Longrightarrow> P g''; P g\\<rbrakk>\n       \\<Longrightarrow> P g''", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>g g' g''.\n       \\<lbrakk>g' \\<in> set (succs g); g' [succs]\\<rightarrow>* g'';\n        P g' \\<Longrightarrow> P g''; P g\\<rbrakk>\n       \\<Longrightarrow> P g''", "fix g g' g''"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>g g' g''.\n       \\<lbrakk>g' \\<in> set (succs g); g' [succs]\\<rightarrow>* g'';\n        P g' \\<Longrightarrow> P g''; P g\\<rbrakk>\n       \\<Longrightarrow> P g''", "assume IH: \"P g' \\<Longrightarrow> P g''\""], ["proof (state)\nthis:\n  P g' \\<Longrightarrow> P g''\n\ngoal (1 subgoal):\n 1. \\<And>g g' g''.\n       \\<lbrakk>g' \\<in> set (succs g); g' [succs]\\<rightarrow>* g'';\n        P g' \\<Longrightarrow> P g''; P g\\<rbrakk>\n       \\<Longrightarrow> P g''", "assume \"g' \\<in> set(succs g)\" \"P g\""], ["proof (state)\nthis:\n  g' \\<in> set (succs g)\n  P g\n\ngoal (1 subgoal):\n 1. \\<And>g g' g''.\n       \\<lbrakk>g' \\<in> set (succs g); g' [succs]\\<rightarrow>* g'';\n        P g' \\<Longrightarrow> P g''; P g\\<rbrakk>\n       \\<Longrightarrow> P g''", "then"], ["proof (chain)\npicking this:\n  g' \\<in> set (succs g)\n  P g", "have \"P g'\""], ["proof (prove)\nusing this:\n  g' \\<in> set (succs g)\n  P g\n\ngoal (1 subgoal):\n 1. P g'", "by (rule s)"], ["proof (state)\nthis:\n  P g'\n\ngoal (1 subgoal):\n 1. \\<And>g g' g''.\n       \\<lbrakk>g' \\<in> set (succs g); g' [succs]\\<rightarrow>* g'';\n        P g' \\<Longrightarrow> P g''; P g\\<rbrakk>\n       \\<Longrightarrow> P g''", "then"], ["proof (chain)\npicking this:\n  P g'", "show \"P g''\""], ["proof (prove)\nusing this:\n  P g'\n\ngoal (1 subgoal):\n 1. P g''", "by (rule IH)"], ["proof (state)\nthis:\n  P g''\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P h'\n\ngoal:\nNo subgoals!", "qed"], ["", "definition invariant :: \"('a \\<Rightarrow> bool) \\<Rightarrow> ('a \\<Rightarrow> 'a list) \\<Rightarrow> bool\" where\n\"invariant P succs \\<equiv> \\<forall>g g'. g' \\<in> set(succs g) \\<longrightarrow> P g \\<longrightarrow> P g'\""], ["", "lemma invariantE:\n  \"invariant P succs  \\<Longrightarrow> g [succs]\\<rightarrow> g' \\<Longrightarrow> P g \\<Longrightarrow> P g'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>invariant P succs; g' \\<in> set (succs g); P g\\<rbrakk>\n    \\<Longrightarrow> P g'", "by(simp add:invariant_def)"], ["", "lemma inv_subset:\n \"invariant P f \\<Longrightarrow> (\\<And>g. P g \\<Longrightarrow> set(f' g) \\<subseteq> set(f g)) \\<Longrightarrow> invariant P f'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>invariant P f;\n     \\<And>g.\n        P g \\<Longrightarrow> set (f' g) \\<subseteq> set (f g)\\<rbrakk>\n    \\<Longrightarrow> invariant P f'", "by(auto simp:invariant_def)"], ["", "lemma RTranCl_inv:\n  \"invariant P succs \\<Longrightarrow> (g,g') \\<in> RTranCl succs \\<Longrightarrow> P g \\<Longrightarrow> P g'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>invariant P succs; g [succs]\\<rightarrow>* g'; P g\\<rbrakk>\n    \\<Longrightarrow> P g'", "by (erule RTranCl_induct)(auto simp:invariant_def)"], ["", "lemma RTranCl_subset2:\nassumes a: \"(s,g) : RTranCl f\"\nshows \"(\\<And>g. (s,g) \\<in> RTranCl f \\<Longrightarrow> set(f g) \\<subseteq> set(h g)) \\<Longrightarrow> (s,g) : RTranCl h\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        s [f]\\<rightarrow>* g \\<Longrightarrow>\n        set (f g) \\<subseteq> set (h g)) \\<Longrightarrow>\n    s [h]\\<rightarrow>* g", "using a"], ["proof (prove)\nusing this:\n  s [f]\\<rightarrow>* g\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        s [f]\\<rightarrow>* g \\<Longrightarrow>\n        set (f g) \\<subseteq> set (h g)) \\<Longrightarrow>\n    s [h]\\<rightarrow>* g", "proof (induct rule: RTranCl.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>g.\n       (\\<And>ga.\n           g [f]\\<rightarrow>* ga \\<Longrightarrow>\n           set (f ga) \\<subseteq> set (h ga)) \\<Longrightarrow>\n       g [h]\\<rightarrow>* g\n 2. \\<And>g g' g''.\n       \\<lbrakk>g' \\<in> set (f g); g' [f]\\<rightarrow>* g'';\n        (\\<And>g.\n            g' [f]\\<rightarrow>* g \\<Longrightarrow>\n            set (f g) \\<subseteq> set (h g)) \\<Longrightarrow>\n        g' [h]\\<rightarrow>* g'';\n        \\<And>ga.\n           g [f]\\<rightarrow>* ga \\<Longrightarrow>\n           set (f ga) \\<subseteq> set (h ga)\\<rbrakk>\n       \\<Longrightarrow> g [h]\\<rightarrow>* g''", "case refl"], ["proof (state)\nthis:\n  g_ [f]\\<rightarrow>* ?g \\<Longrightarrow>\n  set (f ?g) \\<subseteq> set (h ?g)\n\ngoal (2 subgoals):\n 1. \\<And>g.\n       (\\<And>ga.\n           g [f]\\<rightarrow>* ga \\<Longrightarrow>\n           set (f ga) \\<subseteq> set (h ga)) \\<Longrightarrow>\n       g [h]\\<rightarrow>* g\n 2. \\<And>g g' g''.\n       \\<lbrakk>g' \\<in> set (f g); g' [f]\\<rightarrow>* g'';\n        (\\<And>g.\n            g' [f]\\<rightarrow>* g \\<Longrightarrow>\n            set (f g) \\<subseteq> set (h g)) \\<Longrightarrow>\n        g' [h]\\<rightarrow>* g'';\n        \\<And>ga.\n           g [f]\\<rightarrow>* ga \\<Longrightarrow>\n           set (f ga) \\<subseteq> set (h ga)\\<rbrakk>\n       \\<Longrightarrow> g [h]\\<rightarrow>* g''", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. g_ [h]\\<rightarrow>* g_", "by(rule RTranCl.intros)"], ["proof (state)\nthis:\n  g_ [h]\\<rightarrow>* g_\n\ngoal (1 subgoal):\n 1. \\<And>g g' g''.\n       \\<lbrakk>g' \\<in> set (f g); g' [f]\\<rightarrow>* g'';\n        (\\<And>g.\n            g' [f]\\<rightarrow>* g \\<Longrightarrow>\n            set (f g) \\<subseteq> set (h g)) \\<Longrightarrow>\n        g' [h]\\<rightarrow>* g'';\n        \\<And>ga.\n           g [f]\\<rightarrow>* ga \\<Longrightarrow>\n           set (f ga) \\<subseteq> set (h ga)\\<rbrakk>\n       \\<Longrightarrow> g [h]\\<rightarrow>* g''", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>g g' g''.\n       \\<lbrakk>g' \\<in> set (f g); g' [f]\\<rightarrow>* g'';\n        (\\<And>g.\n            g' [f]\\<rightarrow>* g \\<Longrightarrow>\n            set (f g) \\<subseteq> set (h g)) \\<Longrightarrow>\n        g' [h]\\<rightarrow>* g'';\n        \\<And>ga.\n           g [f]\\<rightarrow>* ga \\<Longrightarrow>\n           set (f ga) \\<subseteq> set (h ga)\\<rbrakk>\n       \\<Longrightarrow> g [h]\\<rightarrow>* g''", "case succs"], ["proof (state)\nthis:\n  g'_ \\<in> set (f g_)\n  g'_ [f]\\<rightarrow>* g''_\n  (\\<And>g.\n      g'_ [f]\\<rightarrow>* g \\<Longrightarrow>\n      set (f g) \\<subseteq> set (h g)) \\<Longrightarrow>\n  g'_ [h]\\<rightarrow>* g''_\n  g_ [f]\\<rightarrow>* ?g \\<Longrightarrow>\n  set (f ?g) \\<subseteq> set (h ?g)\n\ngoal (1 subgoal):\n 1. \\<And>g g' g''.\n       \\<lbrakk>g' \\<in> set (f g); g' [f]\\<rightarrow>* g'';\n        (\\<And>g.\n            g' [f]\\<rightarrow>* g \\<Longrightarrow>\n            set (f g) \\<subseteq> set (h g)) \\<Longrightarrow>\n        g' [h]\\<rightarrow>* g'';\n        \\<And>ga.\n           g [f]\\<rightarrow>* ga \\<Longrightarrow>\n           set (f ga) \\<subseteq> set (h ga)\\<rbrakk>\n       \\<Longrightarrow> g [h]\\<rightarrow>* g''", "thus ?case"], ["proof (prove)\nusing this:\n  g'_ \\<in> set (f g_)\n  g'_ [f]\\<rightarrow>* g''_\n  (\\<And>g.\n      g'_ [f]\\<rightarrow>* g \\<Longrightarrow>\n      set (f g) \\<subseteq> set (h g)) \\<Longrightarrow>\n  g'_ [h]\\<rightarrow>* g''_\n  g_ [f]\\<rightarrow>* ?g \\<Longrightarrow>\n  set (f ?g) \\<subseteq> set (h ?g)\n\ngoal (1 subgoal):\n 1. g_ [h]\\<rightarrow>* g''_", "by(blast intro: RTranCl.intros)"], ["proof (state)\nthis:\n  g_ [h]\\<rightarrow>* g''_\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}