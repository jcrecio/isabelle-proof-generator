{"file_name": "/home/qj213/afp-2021-10-22/thys/Flyspeck-Tame/TameEnumProps.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Flyspeck-Tame", "problem_names": ["lemma untame_negFin:\nassumes pl: \"inv g\" and fin: \"final g\" and tame: \"tame g\"\nshows \"is_tame g\"", "lemma next_tame_comp:\n \"\\<lbrakk> tame g; final g; Seed\\<^bsub>p\\<^esub> [next_tame0 p]\\<rightarrow>* g \\<rbrakk>\n \\<Longrightarrow> Seed\\<^bsub>p\\<^esub> [next_tame\\<^bsub>p\\<^esub>]\\<rightarrow>* g\""], "translations": [["", "lemma untame_negFin:\nassumes pl: \"inv g\" and fin: \"final g\" and tame: \"tame g\"\nshows \"is_tame g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_tame g", "proof (unfold is_tame_def, intro conjI)"], ["proof (state)\ngoal (4 subgoals):\n 1. tame10 g\n 2. tame11a g\n 3. tame12o g\n 4. is_tame13a g", "show \"tame10 g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tame10 g", "using tame"], ["proof (prove)\nusing this:\n  tame g\n\ngoal (1 subgoal):\n 1. tame10 g", "by(auto simp:tame_def)"], ["proof (state)\nthis:\n  tame10 g\n\ngoal (3 subgoals):\n 1. tame11a g\n 2. tame12o g\n 3. is_tame13a g", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. tame11a g\n 2. tame12o g\n 3. is_tame13a g", "show \"tame11a g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tame11a g", "using tame"], ["proof (prove)\nusing this:\n  tame g\n\ngoal (1 subgoal):\n 1. tame11a g", "by(auto simp:tame_def)"], ["proof (state)\nthis:\n  tame11a g\n\ngoal (2 subgoals):\n 1. tame12o g\n 2. is_tame13a g", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. tame12o g\n 2. is_tame13a g", "show \"tame12o g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. tame12o g", "using tame"], ["proof (prove)\nusing this:\n  tame g\n\ngoal (1 subgoal):\n 1. tame12o g", "by(auto simp:tame_def)"], ["proof (state)\nthis:\n  tame12o g\n\ngoal (1 subgoal):\n 1. is_tame13a g", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. is_tame13a g", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. is_tame13a g", "from tame"], ["proof (chain)\npicking this:\n  tame g", "obtain w where adm: \"admissible w g\"\n    and sqn: \"(\\<Sum>\\<^bsub>f \\<in> faces g\\<^esub> w f) < squanderTarget\""], ["proof (prove)\nusing this:\n  tame g\n\ngoal (1 subgoal):\n 1. (\\<And>w.\n        \\<lbrakk>admissible w g;\n         ListSum (faces g) w < squanderTarget\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto simp:tame_def tame13a_def)"], ["proof (state)\nthis:\n  admissible w g\n  ListSum (faces g) w < squanderTarget\n\ngoal (1 subgoal):\n 1. is_tame13a g", "moreover"], ["proof (state)\nthis:\n  admissible w g\n  ListSum (faces g) w < squanderTarget\n\ngoal (1 subgoal):\n 1. is_tame13a g", "have \"squanderLowerBound g \\<le>  (\\<Sum>\\<^bsub>f \\<in> faces g\\<^esub> w f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. squanderLowerBound g \\<le> ListSum (faces g) w", "using pl fin tame adm sqn"], ["proof (prove)\nusing this:\n  Invariants.inv g\n  final g\n  tame g\n  admissible w g\n  ListSum (faces g) w < squanderTarget\n\ngoal (1 subgoal):\n 1. squanderLowerBound g \\<le> ListSum (faces g) w", "by (rule total_weight_lowerbound)"], ["proof (state)\nthis:\n  squanderLowerBound g \\<le> ListSum (faces g) w\n\ngoal (1 subgoal):\n 1. is_tame13a g", "ultimately"], ["proof (chain)\npicking this:\n  admissible w g\n  ListSum (faces g) w < squanderTarget\n  squanderLowerBound g \\<le> ListSum (faces g) w", "show \"is_tame13a g\""], ["proof (prove)\nusing this:\n  admissible w g\n  ListSum (faces g) w < squanderTarget\n  squanderLowerBound g \\<le> ListSum (faces g) w\n\ngoal (1 subgoal):\n 1. is_tame13a g", "by(auto simp:is_tame13a_def)"], ["proof (state)\nthis:\n  is_tame13a g\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma next_tame_comp:\n \"\\<lbrakk> tame g; final g; Seed\\<^bsub>p\\<^esub> [next_tame0 p]\\<rightarrow>* g \\<rbrakk>\n \\<Longrightarrow> Seed\\<^bsub>p\\<^esub> [next_tame\\<^bsub>p\\<^esub>]\\<rightarrow>* g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>tame g; final g;\n     Seed\\<^bsub>p\\<^esub> [next_tame0\\<^bsub>p\\<^esub>]\\<rightarrow>* g\\<rbrakk>\n    \\<Longrightarrow> Seed\\<^bsub>p\\<^esub> [next_tame\\<^bsub>p\\<^esub>]\\<rightarrow>* g", "apply (unfold next_tame_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>tame g; final g;\n     Seed\\<^bsub>p\\<^esub> [next_tame0\\<^bsub>p\\<^esub>]\\<rightarrow>* g\\<rbrakk>\n    \\<Longrightarrow> Seed\\<^bsub>p\\<^esub> [filter\n        (\\<lambda>g. \\<not> final g \\<or> is_tame g) \\<circ>\n       next_tame0\\<^bsub>p\\<^esub>]\\<rightarrow>* g", "apply(rule filter_tame_succs[OF inv_inv_next_tame0])"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>ga.\n       \\<lbrakk>tame g; final g;\n        Seed\\<^bsub>p\\<^esub> [next_tame0\\<^bsub>p\\<^esub>]\\<rightarrow>* g;\n        final ga\\<rbrakk>\n       \\<Longrightarrow> next_tame0\\<^bsub>p\\<^esub> ga = []\n 2. \\<And>ga.\n       \\<lbrakk>tame g; final g;\n        Seed\\<^bsub>p\\<^esub> [next_tame0\\<^bsub>p\\<^esub>]\\<rightarrow>* g;\n        Invariants.inv ga;\n        \\<not> (\\<not> final ga \\<or> is_tame ga)\\<rbrakk>\n       \\<Longrightarrow> final ga \\<and> \\<not> tame ga\n 3. \\<lbrakk>tame g; final g;\n     Seed\\<^bsub>p\\<^esub> [next_tame0\\<^bsub>p\\<^esub>]\\<rightarrow>* g\\<rbrakk>\n    \\<Longrightarrow> Seed\\<^bsub>p\\<^esub> [next_tame0\\<^bsub>p\\<^esub>]\\<rightarrow>* g\n 4. \\<lbrakk>tame g; final g;\n     Seed\\<^bsub>p\\<^esub> [next_tame0\\<^bsub>p\\<^esub>]\\<rightarrow>* g\\<rbrakk>\n    \\<Longrightarrow> Invariants.inv Seed\\<^bsub>p\\<^esub>\n 5. \\<lbrakk>tame g; final g;\n     Seed\\<^bsub>p\\<^esub> [next_tame0\\<^bsub>p\\<^esub>]\\<rightarrow>* g\\<rbrakk>\n    \\<Longrightarrow> final g\n 6. \\<lbrakk>tame g; final g;\n     Seed\\<^bsub>p\\<^esub> [next_tame0\\<^bsub>p\\<^esub>]\\<rightarrow>* g\\<rbrakk>\n    \\<Longrightarrow> tame g", "apply(simp add:next_tame0_def finalGraph_def)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>ga.\n       \\<lbrakk>tame g; final g;\n        Seed\\<^bsub>p\\<^esub> [next_tame0\\<^bsub>p\\<^esub>]\\<rightarrow>* g;\n        Invariants.inv ga;\n        \\<not> (\\<not> final ga \\<or> is_tame ga)\\<rbrakk>\n       \\<Longrightarrow> final ga \\<and> \\<not> tame ga\n 2. \\<lbrakk>tame g; final g;\n     Seed\\<^bsub>p\\<^esub> [next_tame0\\<^bsub>p\\<^esub>]\\<rightarrow>* g\\<rbrakk>\n    \\<Longrightarrow> Seed\\<^bsub>p\\<^esub> [next_tame0\\<^bsub>p\\<^esub>]\\<rightarrow>* g\n 3. \\<lbrakk>tame g; final g;\n     Seed\\<^bsub>p\\<^esub> [next_tame0\\<^bsub>p\\<^esub>]\\<rightarrow>* g\\<rbrakk>\n    \\<Longrightarrow> Invariants.inv Seed\\<^bsub>p\\<^esub>\n 4. \\<lbrakk>tame g; final g;\n     Seed\\<^bsub>p\\<^esub> [next_tame0\\<^bsub>p\\<^esub>]\\<rightarrow>* g\\<rbrakk>\n    \\<Longrightarrow> final g\n 5. \\<lbrakk>tame g; final g;\n     Seed\\<^bsub>p\\<^esub> [next_tame0\\<^bsub>p\\<^esub>]\\<rightarrow>* g\\<rbrakk>\n    \\<Longrightarrow> tame g", "apply(rule context_conjI)"], ["proof (prove)\ngoal (6 subgoals):\n 1. \\<And>ga.\n       \\<lbrakk>tame g; final g;\n        Seed\\<^bsub>p\\<^esub> [next_tame0\\<^bsub>p\\<^esub>]\\<rightarrow>* g;\n        Invariants.inv ga;\n        \\<not> (\\<not> final ga \\<or> is_tame ga)\\<rbrakk>\n       \\<Longrightarrow> final ga\n 2. \\<And>ga.\n       \\<lbrakk>tame g; final g;\n        Seed\\<^bsub>p\\<^esub> [next_tame0\\<^bsub>p\\<^esub>]\\<rightarrow>* g;\n        Invariants.inv ga; \\<not> (\\<not> final ga \\<or> is_tame ga);\n        final ga\\<rbrakk>\n       \\<Longrightarrow> \\<not> tame ga\n 3. \\<lbrakk>tame g; final g;\n     Seed\\<^bsub>p\\<^esub> [next_tame0\\<^bsub>p\\<^esub>]\\<rightarrow>* g\\<rbrakk>\n    \\<Longrightarrow> Seed\\<^bsub>p\\<^esub> [next_tame0\\<^bsub>p\\<^esub>]\\<rightarrow>* g\n 4. \\<lbrakk>tame g; final g;\n     Seed\\<^bsub>p\\<^esub> [next_tame0\\<^bsub>p\\<^esub>]\\<rightarrow>* g\\<rbrakk>\n    \\<Longrightarrow> Invariants.inv Seed\\<^bsub>p\\<^esub>\n 5. \\<lbrakk>tame g; final g;\n     Seed\\<^bsub>p\\<^esub> [next_tame0\\<^bsub>p\\<^esub>]\\<rightarrow>* g\\<rbrakk>\n    \\<Longrightarrow> final g\n 6. \\<lbrakk>tame g; final g;\n     Seed\\<^bsub>p\\<^esub> [next_tame0\\<^bsub>p\\<^esub>]\\<rightarrow>* g\\<rbrakk>\n    \\<Longrightarrow> tame g", "apply(simp)"], ["proof (prove)\ngoal (5 subgoals):\n 1. \\<And>ga.\n       \\<lbrakk>tame g; final g;\n        Seed\\<^bsub>p\\<^esub> [next_tame0\\<^bsub>p\\<^esub>]\\<rightarrow>* g;\n        Invariants.inv ga; \\<not> (\\<not> final ga \\<or> is_tame ga);\n        final ga\\<rbrakk>\n       \\<Longrightarrow> \\<not> tame ga\n 2. \\<lbrakk>tame g; final g;\n     Seed\\<^bsub>p\\<^esub> [next_tame0\\<^bsub>p\\<^esub>]\\<rightarrow>* g\\<rbrakk>\n    \\<Longrightarrow> Seed\\<^bsub>p\\<^esub> [next_tame0\\<^bsub>p\\<^esub>]\\<rightarrow>* g\n 3. \\<lbrakk>tame g; final g;\n     Seed\\<^bsub>p\\<^esub> [next_tame0\\<^bsub>p\\<^esub>]\\<rightarrow>* g\\<rbrakk>\n    \\<Longrightarrow> Invariants.inv Seed\\<^bsub>p\\<^esub>\n 4. \\<lbrakk>tame g; final g;\n     Seed\\<^bsub>p\\<^esub> [next_tame0\\<^bsub>p\\<^esub>]\\<rightarrow>* g\\<rbrakk>\n    \\<Longrightarrow> final g\n 5. \\<lbrakk>tame g; final g;\n     Seed\\<^bsub>p\\<^esub> [next_tame0\\<^bsub>p\\<^esub>]\\<rightarrow>* g\\<rbrakk>\n    \\<Longrightarrow> tame g", "apply(blast dest:untame_negFin)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<lbrakk>tame g; final g;\n     Seed\\<^bsub>p\\<^esub> [next_tame0\\<^bsub>p\\<^esub>]\\<rightarrow>* g\\<rbrakk>\n    \\<Longrightarrow> Seed\\<^bsub>p\\<^esub> [next_tame0\\<^bsub>p\\<^esub>]\\<rightarrow>* g\n 2. \\<lbrakk>tame g; final g;\n     Seed\\<^bsub>p\\<^esub> [next_tame0\\<^bsub>p\\<^esub>]\\<rightarrow>* g\\<rbrakk>\n    \\<Longrightarrow> Invariants.inv Seed\\<^bsub>p\\<^esub>\n 3. \\<lbrakk>tame g; final g;\n     Seed\\<^bsub>p\\<^esub> [next_tame0\\<^bsub>p\\<^esub>]\\<rightarrow>* g\\<rbrakk>\n    \\<Longrightarrow> final g\n 4. \\<lbrakk>tame g; final g;\n     Seed\\<^bsub>p\\<^esub> [next_tame0\\<^bsub>p\\<^esub>]\\<rightarrow>* g\\<rbrakk>\n    \\<Longrightarrow> tame g", "apply assumption"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>tame g; final g;\n     Seed\\<^bsub>p\\<^esub> [next_tame0\\<^bsub>p\\<^esub>]\\<rightarrow>* g\\<rbrakk>\n    \\<Longrightarrow> Invariants.inv Seed\\<^bsub>p\\<^esub>\n 2. \\<lbrakk>tame g; final g;\n     Seed\\<^bsub>p\\<^esub> [next_tame0\\<^bsub>p\\<^esub>]\\<rightarrow>* g\\<rbrakk>\n    \\<Longrightarrow> final g\n 3. \\<lbrakk>tame g; final g;\n     Seed\\<^bsub>p\\<^esub> [next_tame0\\<^bsub>p\\<^esub>]\\<rightarrow>* g\\<rbrakk>\n    \\<Longrightarrow> tame g", "apply(rule inv_Seed)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>tame g; final g;\n     Seed\\<^bsub>p\\<^esub> [next_tame0\\<^bsub>p\\<^esub>]\\<rightarrow>* g\\<rbrakk>\n    \\<Longrightarrow> final g\n 2. \\<lbrakk>tame g; final g;\n     Seed\\<^bsub>p\\<^esub> [next_tame0\\<^bsub>p\\<^esub>]\\<rightarrow>* g\\<rbrakk>\n    \\<Longrightarrow> tame g", "apply assumption+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"]]}