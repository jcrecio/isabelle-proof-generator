{"file_name": "/home/qj213/afp-2021-10-22/thys/Flyspeck-Tame/ListSum.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Flyspeck-Tame", "problem_names": ["lemma [simp]: \"(\\<Sum>\\<^bsub>v \\<in> V\\<^esub> 0) = (0::nat)\"", "lemma ListSum_compl1: \n  \"(\\<Sum>\\<^bsub>x \\<in> [x\\<leftarrow>xs. \\<not> P x]\\<^esub> f x) + (\\<Sum>\\<^bsub>x \\<in> [x\\<leftarrow>xs. P x]\\<^esub> f x) = (\\<Sum>\\<^bsub>x \\<in> xs\\<^esub> (f x::nat))\"", "lemma ListSum_compl2: \n  \"(\\<Sum>\\<^bsub>x \\<in>  [x\\<leftarrow>xs. P x]\\<^esub> f x) + (\\<Sum>\\<^bsub>x \\<in>  [x\\<leftarrow>xs. \\<not> P x]\\<^esub> f x) = (\\<Sum>\\<^bsub>x \\<in> xs\\<^esub> (f x::nat))\"", "lemmas ListSum_compl = ListSum_compl1 ListSum_compl2", "lemma ListSum_conv_sum:\n \"distinct xs \\<Longrightarrow> ListSum xs f =  sum f (set xs)\"", "lemma listsum_cong:\n \"\\<lbrakk> xs = ys; \\<And>y. y \\<in> set ys \\<Longrightarrow> f y = g y \\<rbrakk>\n  \\<Longrightarrow> ListSum xs f = ListSum ys g\"", "lemma strong_listsum_cong[cong]:\n \"\\<lbrakk> xs = ys; \\<And>y. y \\<in> set ys =simp=> f y = g y \\<rbrakk>\n  \\<Longrightarrow> ListSum xs f = ListSum ys g\"", "lemma ListSum_eq [trans]: \n  \"(\\<And>v. v \\<in> set V \\<Longrightarrow> f v = g v) \\<Longrightarrow> (\\<Sum>\\<^bsub>v \\<in> V\\<^esub> f v) = (\\<Sum>\\<^bsub>v \\<in> V\\<^esub> g v)\"", "lemma ListSum_disj_union: \n  \"distinct A \\<Longrightarrow> distinct B \\<Longrightarrow> distinct C \\<Longrightarrow> \n  set C = set A \\<union> set B  \\<Longrightarrow> \n  set A \\<inter> set B = {} \\<Longrightarrow>\n  (\\<Sum>\\<^bsub>a \\<in> C\\<^esub> (f a)) = (\\<Sum>\\<^bsub>a \\<in> A\\<^esub> f a) + (\\<Sum>\\<^bsub>a \\<in> B\\<^esub> (f a::nat))\"", "lemma listsum_const[simp]: \n  \"(\\<Sum>\\<^bsub>x \\<in> xs\\<^esub> k) = length xs * k\"", "lemma ListSum_add: \n  \"(\\<Sum>\\<^bsub>x \\<in> V\\<^esub> f x) + (\\<Sum>\\<^bsub>x \\<in> V\\<^esub> g x) = (\\<Sum>\\<^bsub>x \\<in> V\\<^esub> (f x + (g x::nat)))\"", "lemma ListSum_le: \n  \"(\\<And>v. v \\<in> set V \\<Longrightarrow> f v \\<le> g v) \\<Longrightarrow> (\\<Sum>\\<^bsub>v \\<in> V\\<^esub> f v) \\<le> (\\<Sum>\\<^bsub>v \\<in> V\\<^esub> (g v::nat))\"", "lemma ListSum1_bound:\n \"a \\<in> set F \\<Longrightarrow> (d a::nat)\\<le> (\\<Sum>\\<^bsub>f \\<in> F\\<^esub> d f)\""], "translations": [["", "lemma [simp]: \"(\\<Sum>\\<^bsub>v \\<in> V\\<^esub> 0) = (0::nat)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^bsub>v\\<in>V\\<^esub> 0) = 0", "by (induct V) simp_all"], ["", "lemma ListSum_compl1: \n  \"(\\<Sum>\\<^bsub>x \\<in> [x\\<leftarrow>xs. \\<not> P x]\\<^esub> f x) + (\\<Sum>\\<^bsub>x \\<in> [x\\<leftarrow>xs. P x]\\<^esub> f x) = (\\<Sum>\\<^bsub>x \\<in> xs\\<^esub> (f x::nat))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ListSum (filter (\\<lambda>x. \\<not> P x) xs) f +\n    ListSum (filter P xs) f =\n    ListSum xs f", "by (induct xs) simp_all"], ["", "lemma ListSum_compl2: \n  \"(\\<Sum>\\<^bsub>x \\<in>  [x\\<leftarrow>xs. P x]\\<^esub> f x) + (\\<Sum>\\<^bsub>x \\<in>  [x\\<leftarrow>xs. \\<not> P x]\\<^esub> f x) = (\\<Sum>\\<^bsub>x \\<in> xs\\<^esub> (f x::nat))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ListSum (filter P xs) f +\n    ListSum (filter (\\<lambda>x. \\<not> P x) xs) f =\n    ListSum xs f", "by (induct xs) simp_all"], ["", "lemmas ListSum_compl = ListSum_compl1 ListSum_compl2"], ["", "lemma ListSum_conv_sum:\n \"distinct xs \\<Longrightarrow> ListSum xs f =  sum f (set xs)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct xs \\<Longrightarrow> ListSum xs f = sum f (set xs)", "by(induct xs) simp_all"], ["", "lemma listsum_cong:\n \"\\<lbrakk> xs = ys; \\<And>y. y \\<in> set ys \\<Longrightarrow> f y = g y \\<rbrakk>\n  \\<Longrightarrow> ListSum xs f = ListSum ys g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>xs = ys;\n     \\<And>y. y \\<in> set ys \\<Longrightarrow> f y = g y\\<rbrakk>\n    \\<Longrightarrow> ListSum xs f = ListSum ys g", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>xs = ys;\n     \\<And>y. y \\<in> set ys \\<Longrightarrow> f y = g y\\<rbrakk>\n    \\<Longrightarrow> ListSum ys f = ListSum ys g", "apply(erule thin_rl)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>y. y \\<in> set ys \\<Longrightarrow> f y = g y) \\<Longrightarrow>\n    ListSum ys f = ListSum ys g", "by (induct ys) simp_all"], ["", "lemma strong_listsum_cong[cong]:\n \"\\<lbrakk> xs = ys; \\<And>y. y \\<in> set ys =simp=> f y = g y \\<rbrakk>\n  \\<Longrightarrow> ListSum xs f = ListSum ys g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>xs = ys; \\<And>y. y \\<in> set ys =simp=> f y = g y\\<rbrakk>\n    \\<Longrightarrow> ListSum xs f = ListSum ys g", "by(auto simp:simp_implies_def intro!:listsum_cong)"], ["", "lemma ListSum_eq [trans]: \n  \"(\\<And>v. v \\<in> set V \\<Longrightarrow> f v = g v) \\<Longrightarrow> (\\<Sum>\\<^bsub>v \\<in> V\\<^esub> f v) = (\\<Sum>\\<^bsub>v \\<in> V\\<^esub> g v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>v. v \\<in> set V \\<Longrightarrow> f v = g v) \\<Longrightarrow>\n    ListSum V f = ListSum V g", "by(auto intro!:listsum_cong)"], ["", "lemma ListSum_disj_union: \n  \"distinct A \\<Longrightarrow> distinct B \\<Longrightarrow> distinct C \\<Longrightarrow> \n  set C = set A \\<union> set B  \\<Longrightarrow> \n  set A \\<inter> set B = {} \\<Longrightarrow>\n  (\\<Sum>\\<^bsub>a \\<in> C\\<^esub> (f a)) = (\\<Sum>\\<^bsub>a \\<in> A\\<^esub> f a) + (\\<Sum>\\<^bsub>a \\<in> B\\<^esub> (f a::nat))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>distinct A; distinct B; distinct C;\n     set C = set A \\<union> set B; set A \\<inter> set B = {}\\<rbrakk>\n    \\<Longrightarrow> ListSum C f = ListSum A f + ListSum B f", "by (simp add: ListSum_conv_sum sum.union_disjoint)"], ["", "lemma listsum_const[simp]: \n  \"(\\<Sum>\\<^bsub>x \\<in> xs\\<^esub> k) = length xs * k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<^bsub>x\\<in>xs\\<^esub> k) = |xs| * k", "by (induct xs) (simp_all add: ring_distribs)"], ["", "lemma ListSum_add: \n  \"(\\<Sum>\\<^bsub>x \\<in> V\\<^esub> f x) + (\\<Sum>\\<^bsub>x \\<in> V\\<^esub> g x) = (\\<Sum>\\<^bsub>x \\<in> V\\<^esub> (f x + (g x::nat)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ListSum V f + ListSum V g = (\\<Sum>\\<^bsub>x\\<in>V\\<^esub> f x + g x)", "by (induct V) auto"], ["", "lemma ListSum_le: \n  \"(\\<And>v. v \\<in> set V \\<Longrightarrow> f v \\<le> g v) \\<Longrightarrow> (\\<Sum>\\<^bsub>v \\<in> V\\<^esub> f v) \\<le> (\\<Sum>\\<^bsub>v \\<in> V\\<^esub> (g v::nat))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>v.\n        v \\<in> set V \\<Longrightarrow> f v \\<le> g v) \\<Longrightarrow>\n    ListSum V f \\<le> ListSum V g", "proof (induct V)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<And>v.\n        v \\<in> set [] \\<Longrightarrow> f v \\<le> g v) \\<Longrightarrow>\n    ListSum [] f \\<le> ListSum [] g\n 2. \\<And>a V.\n       \\<lbrakk>(\\<And>v.\n                    v \\<in> set V \\<Longrightarrow>\n                    f v \\<le> g v) \\<Longrightarrow>\n                ListSum V f \\<le> ListSum V g;\n        \\<And>v.\n           v \\<in> set (a # V) \\<Longrightarrow> f v \\<le> g v\\<rbrakk>\n       \\<Longrightarrow> ListSum (a # V) f \\<le> ListSum (a # V) g", "case Nil"], ["proof (state)\nthis:\n  ?v \\<in> set [] \\<Longrightarrow> f ?v \\<le> g ?v\n\ngoal (2 subgoals):\n 1. (\\<And>v.\n        v \\<in> set [] \\<Longrightarrow> f v \\<le> g v) \\<Longrightarrow>\n    ListSum [] f \\<le> ListSum [] g\n 2. \\<And>a V.\n       \\<lbrakk>(\\<And>v.\n                    v \\<in> set V \\<Longrightarrow>\n                    f v \\<le> g v) \\<Longrightarrow>\n                ListSum V f \\<le> ListSum V g;\n        \\<And>v.\n           v \\<in> set (a # V) \\<Longrightarrow> f v \\<le> g v\\<rbrakk>\n       \\<Longrightarrow> ListSum (a # V) f \\<le> ListSum (a # V) g", "then"], ["proof (chain)\npicking this:\n  ?v \\<in> set [] \\<Longrightarrow> f ?v \\<le> g ?v", "show ?case"], ["proof (prove)\nusing this:\n  ?v \\<in> set [] \\<Longrightarrow> f ?v \\<le> g ?v\n\ngoal (1 subgoal):\n 1. ListSum [] f \\<le> ListSum [] g", "by simp"], ["proof (state)\nthis:\n  ListSum [] f \\<le> ListSum [] g\n\ngoal (1 subgoal):\n 1. \\<And>a V.\n       \\<lbrakk>(\\<And>v.\n                    v \\<in> set V \\<Longrightarrow>\n                    f v \\<le> g v) \\<Longrightarrow>\n                ListSum V f \\<le> ListSum V g;\n        \\<And>v.\n           v \\<in> set (a # V) \\<Longrightarrow> f v \\<le> g v\\<rbrakk>\n       \\<Longrightarrow> ListSum (a # V) f \\<le> ListSum (a # V) g", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a V.\n       \\<lbrakk>(\\<And>v.\n                    v \\<in> set V \\<Longrightarrow>\n                    f v \\<le> g v) \\<Longrightarrow>\n                ListSum V f \\<le> ListSum V g;\n        \\<And>v.\n           v \\<in> set (a # V) \\<Longrightarrow> f v \\<le> g v\\<rbrakk>\n       \\<Longrightarrow> ListSum (a # V) f \\<le> ListSum (a # V) g", "case (Cons v V)"], ["proof (state)\nthis:\n  (\\<And>v. v \\<in> set V \\<Longrightarrow> f v \\<le> g v) \\<Longrightarrow>\n  ListSum V f \\<le> ListSum V g\n  ?v \\<in> set (v # V) \\<Longrightarrow> f ?v \\<le> g ?v\n\ngoal (1 subgoal):\n 1. \\<And>a V.\n       \\<lbrakk>(\\<And>v.\n                    v \\<in> set V \\<Longrightarrow>\n                    f v \\<le> g v) \\<Longrightarrow>\n                ListSum V f \\<le> ListSum V g;\n        \\<And>v.\n           v \\<in> set (a # V) \\<Longrightarrow> f v \\<le> g v\\<rbrakk>\n       \\<Longrightarrow> ListSum (a # V) f \\<le> ListSum (a # V) g", "then"], ["proof (chain)\npicking this:\n  (\\<And>v. v \\<in> set V \\<Longrightarrow> f v \\<le> g v) \\<Longrightarrow>\n  ListSum V f \\<le> ListSum V g\n  ?v \\<in> set (v # V) \\<Longrightarrow> f ?v \\<le> g ?v", "have \"(\\<Sum>\\<^bsub>v \\<in> V\\<^esub> f v) \\<le> (\\<Sum>\\<^bsub>v \\<in> V\\<^esub> g v)\""], ["proof (prove)\nusing this:\n  (\\<And>v. v \\<in> set V \\<Longrightarrow> f v \\<le> g v) \\<Longrightarrow>\n  ListSum V f \\<le> ListSum V g\n  ?v \\<in> set (v # V) \\<Longrightarrow> f ?v \\<le> g ?v\n\ngoal (1 subgoal):\n 1. ListSum V f \\<le> ListSum V g", "by simp"], ["proof (state)\nthis:\n  ListSum V f \\<le> ListSum V g\n\ngoal (1 subgoal):\n 1. \\<And>a V.\n       \\<lbrakk>(\\<And>v.\n                    v \\<in> set V \\<Longrightarrow>\n                    f v \\<le> g v) \\<Longrightarrow>\n                ListSum V f \\<le> ListSum V g;\n        \\<And>v.\n           v \\<in> set (a # V) \\<Longrightarrow> f v \\<le> g v\\<rbrakk>\n       \\<Longrightarrow> ListSum (a # V) f \\<le> ListSum (a # V) g", "moreover"], ["proof (state)\nthis:\n  ListSum V f \\<le> ListSum V g\n\ngoal (1 subgoal):\n 1. \\<And>a V.\n       \\<lbrakk>(\\<And>v.\n                    v \\<in> set V \\<Longrightarrow>\n                    f v \\<le> g v) \\<Longrightarrow>\n                ListSum V f \\<le> ListSum V g;\n        \\<And>v.\n           v \\<in> set (a # V) \\<Longrightarrow> f v \\<le> g v\\<rbrakk>\n       \\<Longrightarrow> ListSum (a # V) f \\<le> ListSum (a # V) g", "from Cons"], ["proof (chain)\npicking this:\n  (\\<And>v. v \\<in> set V \\<Longrightarrow> f v \\<le> g v) \\<Longrightarrow>\n  ListSum V f \\<le> ListSum V g\n  ?v \\<in> set (v # V) \\<Longrightarrow> f ?v \\<le> g ?v", "have \"f v \\<le> g v\""], ["proof (prove)\nusing this:\n  (\\<And>v. v \\<in> set V \\<Longrightarrow> f v \\<le> g v) \\<Longrightarrow>\n  ListSum V f \\<le> ListSum V g\n  ?v \\<in> set (v # V) \\<Longrightarrow> f ?v \\<le> g ?v\n\ngoal (1 subgoal):\n 1. f v \\<le> g v", "by simp"], ["proof (state)\nthis:\n  f v \\<le> g v\n\ngoal (1 subgoal):\n 1. \\<And>a V.\n       \\<lbrakk>(\\<And>v.\n                    v \\<in> set V \\<Longrightarrow>\n                    f v \\<le> g v) \\<Longrightarrow>\n                ListSum V f \\<le> ListSum V g;\n        \\<And>v.\n           v \\<in> set (a # V) \\<Longrightarrow> f v \\<le> g v\\<rbrakk>\n       \\<Longrightarrow> ListSum (a # V) f \\<le> ListSum (a # V) g", "ultimately"], ["proof (chain)\npicking this:\n  ListSum V f \\<le> ListSum V g\n  f v \\<le> g v", "show ?case"], ["proof (prove)\nusing this:\n  ListSum V f \\<le> ListSum V g\n  f v \\<le> g v\n\ngoal (1 subgoal):\n 1. ListSum (v # V) f \\<le> ListSum (v # V) g", "by simp"], ["proof (state)\nthis:\n  ListSum (v # V) f \\<le> ListSum (v # V) g\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ListSum1_bound:\n \"a \\<in> set F \\<Longrightarrow> (d a::nat)\\<le> (\\<Sum>\\<^bsub>f \\<in> F\\<^esub> d f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> set F \\<Longrightarrow> d a \\<le> ListSum F d", "by (induct F) auto"], ["", "end"]]}