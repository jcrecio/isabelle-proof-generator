{"file_name": "/home/qj213/afp-2021-10-22/thys/Smith_Normal_Form/SNF_Uniqueness.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Smith_Normal_Form", "problem_names": ["lemma dvd_associated1:\n  fixes a::\"'a::comm_ring_1\"\n  assumes \"\\<exists>u. u dvd 1 \\<and> a = u*b\"\n  shows \"a dvd b \\<and> b dvd a\"", "lemma dvd_associated2:\n  fixes a::\"'a::idom\"\n  assumes ab: \"a dvd b\" and ba: \"b dvd a\" and a: \"a\\<noteq>0\"\n  shows \"\\<exists>u. u dvd 1 \\<and> a = u*b\"", "lemma exists_inj_ge_index:\n  assumes S: \"S \\<subseteq> {0..<n}\" and Sk: \"card S = k\"\n  shows \"\\<exists>f. inj_on f {0..<k} \\<and> f`{0..<k} = S \\<and> (\\<forall>i\\<in>{0..<k}. i \\<le> f i)\"", "lemma diagonal_imp_submatrix0:\n  assumes dA: \"diagonal_mat A\" and A_carrier: \"A\\<in> carrier_mat n m\"\n  and Ik: \"card I = k\" and Jk: \"card J = k\"\n  and r: \"\\<forall>row_index \\<in> I. row_index < n\" (*I \\<subseteq> {0..<n}*)\n  and c: \"\\<forall>col_index \\<in> J. col_index < m\"\n  and a: \"a<k\" and b: \"b<k\"\nshows \"submatrix A I J $$ (a, b) = 0 \\<or> submatrix A I J $$ (a,b) = A $$(pick I a, pick I a)\"", "lemma diagonal_imp_submatrix_element_not0:\n  assumes dA: \"diagonal_mat A\"\n  and A_carrier: \"A \\<in> carrier_mat n m\"\n  and Ik: \"card I = k\" and Jk: \"card J = k\"\n  and I: \"I \\<subseteq> {0..<n}\"\n  and J: \"J \\<subseteq> {0..<m}\"\n  and b: \"b < k\"\n  and ex_not0: \"\\<exists>i. i<k \\<and> submatrix A I J $$ (i, b) \\<noteq> 0\"\nshows \"\\<exists>!i. i<k \\<and> submatrix A I J $$ (i, b) \\<noteq> 0\"", "lemma submatrix_index_exists:\n  assumes A_carrier: \"A\\<in> carrier_mat n m\"\n  and Ik: \"card I = k\" and Jk: \"card J = k\"\n  and a: \"a \\<in> I\" and b: \"b \\<in> J\" and k: \"k > 0\"\n  and I: \"I \\<subseteq> {0..<n}\" and J: \"J \\<subseteq> {0..<m}\"\nshows \"\\<exists>a' b'. a' < k \\<and> b' < k \\<and> submatrix A I J $$ (a',b') = A $$ (a,b)\n        \\<and> a = pick I a' \\<and> b = pick J b'\"", "lemma mat_delete_submatrix_insert:\n  assumes A_carrier: \"A \\<in> carrier_mat n m\"\n  and Ik: \"card I = k\" and Jk: \"card J = k\"\n  and I: \"I \\<subseteq> {0..<n}\" and J: \"J \\<subseteq> {0..<m}\"\n  and a: \"a < n\" and b: \"b < m\"\n  and k: \"k < min n m\"\n  and a_notin_I: \"a \\<notin> I\" and b_notin_J: \"b \\<notin> J\"\n  and a'k: \"a' < Suc k\" and b'k:  \"b' < Suc k\"\n  and a_def: \"pick (insert a I) a' = a\"\n  and b_def: \"pick (insert b J) b' = b\"\nshows \"mat_delete (submatrix A (insert a I) (insert b J)) a' b' = submatrix A I J\" (is \"?lhs = ?rhs\")", "lemma det_minors_diagonal:\n  assumes dA: \"diagonal_mat A\" and A_carrier: \"A \\<in> carrier_mat n m\"\n    and Ik: \"card I = k\" and Jk: \"card J = k\"\n    and r: \"I \\<subseteq> {0..<n}\"\n    and c: \"J \\<subseteq> {0..<m}\" and k: \"k>0\"\n  shows \"det (submatrix A I J) = 0\n  \\<or> (\\<exists>xs. (det (submatrix A I J) = prod_list xs \\<or> det (submatrix A I J) = - prod_list xs)\n  \\<and> set xs \\<subseteq> {A$$(i,i)|i. i<min n m \\<and> A$$(i,i)\\<noteq> 0} \\<and> length xs = k)\"", "lemma Gcd_minors_dvd:\n  fixes A::\"'a::{semiring_Gcd,comm_ring_1} mat\"\n  assumes PAQ_B: \"P * A * Q = B\"\n  and P: \"P \\<in> carrier_mat m m\"\n  and A: \"A \\<in> carrier_mat m n\"\n  and Q: \"Q \\<in> carrier_mat n n\"\n  and I: \"I \\<subseteq> {0..<dim_row A}\" and J: \"J \\<subseteq> {0..<dim_col A}\"\n  and Ik: \"card I = k\" and Jk: \"card J = k\"\n  shows \"Gcd (minors A k) dvd det (submatrix B I J)\"", "lemma det_minors_diagonal2:\n  assumes dA: \"diagonal_mat A\" and A_carrier: \"A \\<in> carrier_mat n m\"\n    and Ik: \"card I = k\" and Jk: \"card J = k\"\n    and r: \"I \\<subseteq> {0..<n}\"\n    and c: \"J \\<subseteq> {0..<m}\" and k: \"k>0\"\n  shows \"det (submatrix A I J) = 0 \\<or> (\\<exists>S. S \\<subseteq> {0..<min n m} \\<and> card S = k \\<and> S=I \\<and>\n   (det (submatrix A I J) = (\\<Prod>i\\<in>S. A $$ (i,i)) \\<or> det (submatrix A I J) = - (\\<Prod>i\\<in>S. A $$ (i,i))))\"", "lemma diagonal_dvd_Gcd_minors:\n  fixes A::\"'a::{semiring_Gcd,comm_ring_1} mat\"\n  assumes A: \"A \\<in> carrier_mat n m\"\n    and SNF_A: \"Smith_normal_form_mat A\"\nshows \"(\\<Prod>i=0..<k. A $$ (i,i)) dvd Gcd (minors A k)\"", "lemma Gcd_minors_dvd_diagonal:\n  fixes A::\"'a::{semiring_Gcd,comm_ring_1} mat\"\n  assumes A: \"A \\<in> carrier_mat n m\"\n    and SNF_A: \"Smith_normal_form_mat A\"\n    and k: \"k \\<le> min n m\"\n  shows \"Gcd (minors A k) dvd (\\<Prod>i=0..<k. A $$ (i,i))\"", "lemma Gcd_minors_A_dvd_Gcd_minors_PAQ:\n fixes A::\"'a::{semiring_Gcd,comm_ring_1} mat\"\n assumes A: \"A \\<in> carrier_mat m n\"\n    and P: \"P \\<in> carrier_mat m m\" and Q: \"Q \\<in> carrier_mat n n\"\n  shows \"Gcd (minors A k) dvd Gcd (minors (P*A*Q) k)\"", "lemma Gcd_minors_PAQ_dvd_Gcd_minors_A:\n fixes A::\"'a::{semiring_Gcd,comm_ring_1} mat\"\n assumes A: \"A \\<in> carrier_mat m n\"\n    and P: \"P \\<in> carrier_mat m m\"\n    and Q: \"Q \\<in> carrier_mat n n\"\n    and inv_P: \"invertible_mat P\"\n    and inv_Q: \"invertible_mat Q\"\n  shows \"Gcd (minors (P*A*Q) k) dvd Gcd (minors A k)\"", "lemma Gcd_minors_dvd_diag_PAQ:\n  fixes P A Q::\"'a::{semiring_Gcd,comm_ring_1} mat\"\n assumes A: \"A \\<in> carrier_mat m n\"\n    and P: \"P \\<in> carrier_mat m m\"\n    and Q: \"Q \\<in> carrier_mat n n\"\n    and SNF: \"Smith_normal_form_mat (P*A*Q)\"\n    and k: \"k\\<le>min m n\"\n  shows \"Gcd (minors A k) dvd (\\<Prod>i=0..<k. (P * A * Q) $$ (i,i))\"", "lemma diag_PAQ_dvd_Gcd_minors:\n  fixes P A Q::\"'a::{semiring_Gcd,comm_ring_1} mat\"\n assumes A: \"A \\<in> carrier_mat m n\"\n    and P: \"P \\<in> carrier_mat m m\"\n    and Q: \"Q \\<in> carrier_mat n n\"\n    and inv_P: \"invertible_mat P\"\n    and inv_Q: \"invertible_mat Q\"\n    and SNF: \"Smith_normal_form_mat (P*A*Q)\"\n  shows \"(\\<Prod>i=0..<k. (P * A * Q) $$ (i,i)) dvd Gcd (minors A k)\"", "lemma Smith_prod_zero_imp_last_zero:\n  fixes A::\"'a::{semidom,comm_ring_1} mat\"\n  assumes  A: \"A \\<in> carrier_mat m n\"\n    and SNF: \"Smith_normal_form_mat A\"\n    and prod_0: \"(\\<Prod>j=0..<Suc i. A $$ (j,j)) = 0\"\n  and i: \"i<min m n\"\n  shows \"A $$(i,i) = 0\"", "lemma Smith_normal_form_uniqueness_aux:\n  fixes P A Q::\"'a::{idom,semiring_Gcd} mat\"\n  assumes A: \"A \\<in> carrier_mat m n\"\n  (*PAQ = B with B in SNF and P,Q invertible matrices*)\n  and P: \"P \\<in> carrier_mat m m\"\n  and Q: \"Q \\<in> carrier_mat n n\"\n  and inv_P: \"invertible_mat P\"\n  and inv_Q: \"invertible_mat Q\"\n  and PAQ_B: \"P*A*Q = B\"\n  and SNF: \"Smith_normal_form_mat B\"\n  (*P'AQ' = B' with B' in SNF and P',Q' invertible matrices*)\n  and P': \"P' \\<in> carrier_mat m m\"\n  and Q': \"Q' \\<in> carrier_mat n n\"\n  and inv_P': \"invertible_mat P'\"\n  and inv_Q': \"invertible_mat Q'\"\n  and P'AQ'_B': \"P'*A*Q' = B'\"\n  and SNF_B': \"Smith_normal_form_mat B'\"\n  and k: \"k<min m n\"\nshows \"\\<forall>i\\<le>k. B$$(i,i) dvd B'$$(i,i) \\<and> B'$$(i,i) dvd B$$(i,i)\"", "lemma Smith_normal_form_uniqueness:\n  fixes P A Q::\"'a::{idom,semiring_Gcd} mat\"\n  assumes A: \"A \\<in> carrier_mat m n\"\n    (*PAQ = B with B in SNF and P,Q invertible matrices*)\n    and P: \"P \\<in> carrier_mat m m\"\n    and Q: \"Q \\<in> carrier_mat n n\"\n    and inv_P: \"invertible_mat P\"\n    and inv_Q: \"invertible_mat Q\"\n    and PAQ_B: \"P*A*Q = B\"\n    and SNF: \"Smith_normal_form_mat B\"\n    (*P'AQ' = B' with B' in SNF and P',Q' invertible matrices*)\n    and P': \"P' \\<in> carrier_mat m m\"\n    and Q': \"Q' \\<in> carrier_mat n n\"\n    and inv_P': \"invertible_mat P'\"\n    and inv_Q': \"invertible_mat Q'\"\n    and P'AQ'_B': \"P'*A*Q' = B'\"\n    and SNF_B': \"Smith_normal_form_mat B'\"\n    and i: \"i < min m n\"\n  shows \"\\<exists>u. u dvd 1 \\<and> B $$ (i,i) = u * B' $$ (i,i)\"", "lemma Smith_normal_form_uniqueness_HOL_Analysis:\n  fixes A::\"'a::{idom,semiring_Gcd}^'m::mod_type^'n::mod_type\"\n  and P P'::\"'a^'n::mod_type^'n::mod_type\"\n  and Q Q'::\"'a^'m::mod_type^'m::mod_type\"\n  assumes\n    (*PAQ = B with B in SNF and P,Q invertible matrices*)\n    inv_P: \"invertible P\"\n    and inv_Q: \"invertible Q\"\n    and PAQ_B: \"P**A**Q = B\"\n    and SNF: \"Smith_normal_form B\"\n    (*P'AQ' = B' with B' in SNF and P',Q' invertible matrices*)\n    and inv_P': \"invertible P'\"\n    and inv_Q': \"invertible Q'\"\n    and P'AQ'_B': \"P'**A**Q' = B'\"\n    and SNF_B': \"Smith_normal_form B'\"\n    and i: \"i < min (nrows A) (ncols A)\"\n  shows \"\\<exists>u. u dvd 1 \\<and> B $h Mod_Type.from_nat i $h Mod_Type.from_nat i\n  = u * B' $h Mod_Type.from_nat i $h Mod_Type.from_nat i\"", "lemma Smith_normal_form_wrt_uniqueness_HOL_Analysis:\n  fixes A::\"'a::{idom,semiring_Gcd}^'m::mod_type^'n::mod_type\"\n  and P P'::\"'a^'n::mod_type^'n::mod_type\"\n  and Q Q'::\"'a^'m::mod_type^'m::mod_type\"\n  assumes\n    (*PAQ = S with S in SNF and P,Q invertible matrices*)\n    P: \"invertible P\"\n    and Q: \"invertible Q\"\n    and PAQ_S: \"P**A**Q = S\"\n    and SNF: \"Smith_normal_form_wrt S \\<Q>\"\n    (*P'AQ' = S' with S' in SNF and P',Q' invertible matrices*)\n    and P': \"invertible P'\"\n    and Q': \"invertible Q'\"\n    and P'AQ'_S': \"P'**A**Q' = S'\"\n    and SNF_S': \"Smith_normal_form_wrt S' \\<Q>\"\n  shows \"S = S'\""], "translations": [["", "lemma dvd_associated1:\n  fixes a::\"'a::comm_ring_1\"\n  assumes \"\\<exists>u. u dvd 1 \\<and> a = u*b\"\n  shows \"a dvd b \\<and> b dvd a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a dvd b \\<and> b dvd a", "using assms"], ["proof (prove)\nusing this:\n  \\<exists>u. u dvd (1::'a) \\<and> a = u * b\n\ngoal (1 subgoal):\n 1. a dvd b \\<and> b dvd a", "by auto"], ["", "text \\<open>This is a key lemma. It demands the type class to be an integral domain. This means that\nthe uniqueness result will be obtained for GCD domains, instead of rings.\\<close>"], ["", "lemma dvd_associated2:\n  fixes a::\"'a::idom\"\n  assumes ab: \"a dvd b\" and ba: \"b dvd a\" and a: \"a\\<noteq>0\"\n  shows \"\\<exists>u. u dvd 1 \\<and> a = u*b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>u. u dvd (1::'a) \\<and> a = u * b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>u. u dvd (1::'a) \\<and> a = u * b", "obtain k where a_kb: \"a = k*b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k. a = k * b \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using ab"], ["proof (prove)\nusing this:\n  a dvd b\n\ngoal (1 subgoal):\n 1. (\\<And>k. a = k * b \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "unfolding dvd_def"], ["proof (prove)\nusing this:\n  \\<exists>k. b = a * k\n\ngoal (1 subgoal):\n 1. (\\<And>k. a = k * b \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (metis Groups.mult_ac(2) ba dvdE)"], ["proof (state)\nthis:\n  a = k * b\n\ngoal (1 subgoal):\n 1. \\<exists>u. u dvd (1::'a) \\<and> a = u * b", "obtain q where b_qa: \"b = q*a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>q. b = q * a \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using ba"], ["proof (prove)\nusing this:\n  b dvd a\n\ngoal (1 subgoal):\n 1. (\\<And>q. b = q * a \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "unfolding dvd_def"], ["proof (prove)\nusing this:\n  \\<exists>k. a = b * k\n\ngoal (1 subgoal):\n 1. (\\<And>q. b = q * a \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (metis Groups.mult_ac(2) ab dvdE)"], ["proof (state)\nthis:\n  b = q * a\n\ngoal (1 subgoal):\n 1. \\<exists>u. u dvd (1::'a) \\<and> a = u * b", "have 1: \"a = k*q*a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a = k * q * a", "using a_kb b_qa"], ["proof (prove)\nusing this:\n  a = k * b\n  b = q * a\n\ngoal (1 subgoal):\n 1. a = k * q * a", "by auto"], ["proof (state)\nthis:\n  a = k * q * a\n\ngoal (1 subgoal):\n 1. \\<exists>u. u dvd (1::'a) \\<and> a = u * b", "hence \"k*q = 1\""], ["proof (prove)\nusing this:\n  a = k * q * a\n\ngoal (1 subgoal):\n 1. k * q = (1::'a)", "using a"], ["proof (prove)\nusing this:\n  a = k * q * a\n  a \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. k * q = (1::'a)", "by simp"], ["proof (state)\nthis:\n  k * q = (1::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>u. u dvd (1::'a) \\<and> a = u * b", "thus ?thesis"], ["proof (prove)\nusing this:\n  k * q = (1::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>u. u dvd (1::'a) \\<and> a = u * b", "using 1"], ["proof (prove)\nusing this:\n  k * q = (1::'a)\n  a = k * q * a\n\ngoal (1 subgoal):\n 1. \\<exists>u. u dvd (1::'a) \\<and> a = u * b", "by (metis a_kb dvd_triv_left)"], ["proof (state)\nthis:\n  \\<exists>u. u dvd (1::'a) \\<and> a = u * b\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary dvd_associated:\n  fixes a::\"'a::idom\"\n  assumes \"a\\<noteq>0\"\n  shows \"(a dvd b \\<and> b dvd a) = (\\<exists>u. u dvd 1 \\<and> a = u*b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a dvd b \\<and> b dvd a) = (\\<exists>u. u dvd (1::'a) \\<and> a = u * b)", "using assms dvd_associated1 dvd_associated2"], ["proof (prove)\nusing this:\n  a \\<noteq> (0::'a)\n  \\<exists>u. u dvd (1::?'a) \\<and> ?a = u * ?b \\<Longrightarrow>\n  ?a dvd ?b \\<and> ?b dvd ?a\n  \\<lbrakk>?a dvd ?b; ?b dvd ?a; ?a \\<noteq> (0::?'a)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>u. u dvd (1::?'a) \\<and> ?a = u * ?b\n\ngoal (1 subgoal):\n 1. (a dvd b \\<and> b dvd a) = (\\<exists>u. u dvd (1::'a) \\<and> a = u * b)", "by metis"], ["", "lemma exists_inj_ge_index:\n  assumes S: \"S \\<subseteq> {0..<n}\" and Sk: \"card S = k\"\n  shows \"\\<exists>f. inj_on f {0..<k} \\<and> f`{0..<k} = S \\<and> (\\<forall>i\\<in>{0..<k}. i \\<le> f i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>f.\n       inj_on f {0..<k} \\<and>\n       f ` {0..<k} = S \\<and> (\\<forall>i\\<in>{0..<k}. i \\<le> f i)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>f.\n       inj_on f {0..<k} \\<and>\n       f ` {0..<k} = S \\<and> (\\<forall>i\\<in>{0..<k}. i \\<le> f i)", "have \"\\<exists>h. bij_betw h {0..<k} S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>h. bij_betw h {0..<k} S", "using S Sk ex_bij_betw_nat_finite subset_eq_atLeast0_lessThan_finite"], ["proof (prove)\nusing this:\n  S \\<subseteq> {0..<n}\n  card S = k\n  finite ?M \\<Longrightarrow> \\<exists>h. bij_betw h {0..<card ?M} ?M\n  ?N \\<subseteq> {0..<?n} \\<Longrightarrow> finite ?N\n\ngoal (1 subgoal):\n 1. \\<exists>h. bij_betw h {0..<k} S", "by blast"], ["proof (state)\nthis:\n  \\<exists>h. bij_betw h {0..<k} S\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       inj_on f {0..<k} \\<and>\n       f ` {0..<k} = S \\<and> (\\<forall>i\\<in>{0..<k}. i \\<le> f i)", "from this"], ["proof (chain)\npicking this:\n  \\<exists>h. bij_betw h {0..<k} S", "obtain g where inj_on_g: \"inj_on g {0..<k}\" and gk_S: \"g`{0..<k} = S\""], ["proof (prove)\nusing this:\n  \\<exists>h. bij_betw h {0..<k} S\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>inj_on g {0..<k}; g ` {0..<k} = S\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding bij_betw_def"], ["proof (prove)\nusing this:\n  \\<exists>h. inj_on h {0..<k} \\<and> h ` {0..<k} = S\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>inj_on g {0..<k}; g ` {0..<k} = S\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  inj_on g {0..<k}\n  g ` {0..<k} = S\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       inj_on f {0..<k} \\<and>\n       f ` {0..<k} = S \\<and> (\\<forall>i\\<in>{0..<k}. i \\<le> f i)", "let ?f = \"strict_from_inj k g\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>f.\n       inj_on f {0..<k} \\<and>\n       f ` {0..<k} = S \\<and> (\\<forall>i\\<in>{0..<k}. i \\<le> f i)", "have \"strict_mono_on ?f {0..<k}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strict_mono_on (strict_from_inj k g) {0..<k}", "by (rule strict_strict_from_inj[OF inj_on_g])"], ["proof (state)\nthis:\n  strict_mono_on (strict_from_inj k g) {0..<k}\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       inj_on f {0..<k} \\<and>\n       f ` {0..<k} = S \\<and> (\\<forall>i\\<in>{0..<k}. i \\<le> f i)", "hence 1: \"inj_on ?f {0..<k}\""], ["proof (prove)\nusing this:\n  strict_mono_on (strict_from_inj k g) {0..<k}\n\ngoal (1 subgoal):\n 1. inj_on (strict_from_inj k g) {0..<k}", "using strict_mono_on_imp_inj_on"], ["proof (prove)\nusing this:\n  strict_mono_on (strict_from_inj k g) {0..<k}\n  strict_mono_on ?f ?A \\<Longrightarrow> inj_on ?f ?A\n\ngoal (1 subgoal):\n 1. inj_on (strict_from_inj k g) {0..<k}", "by blast"], ["proof (state)\nthis:\n  inj_on (strict_from_inj k g) {0..<k}\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       inj_on f {0..<k} \\<and>\n       f ` {0..<k} = S \\<and> (\\<forall>i\\<in>{0..<k}. i \\<le> f i)", "have 2: \"?f`{0..<k} = S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strict_from_inj k g ` {0..<k} = S", "by (simp add: strict_from_inj_image' inj_on_g gk_S)"], ["proof (state)\nthis:\n  strict_from_inj k g ` {0..<k} = S\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       inj_on f {0..<k} \\<and>\n       f ` {0..<k} = S \\<and> (\\<forall>i\\<in>{0..<k}. i \\<le> f i)", "have 3: \"\\<forall>i\\<in>{0..<k}. i \\<le> ?f i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<in>{0..<k}. i \\<le> strict_from_inj k g i", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> {0..<k} \\<Longrightarrow> i \\<le> strict_from_inj k g i", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> {0..<k} \\<Longrightarrow> i \\<le> strict_from_inj k g i", "assume i: \"i \\<in> {0..<k}\""], ["proof (state)\nthis:\n  i \\<in> {0..<k}\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> {0..<k} \\<Longrightarrow> i \\<le> strict_from_inj k g i", "let ?xs = \"sorted_list_of_set (g`{0..<k})\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> {0..<k} \\<Longrightarrow> i \\<le> strict_from_inj k g i", "have \"strict_from_inj k g i = ?xs ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strict_from_inj k g i = sorted_list_of_set (g ` {0..<k}) ! i", "unfolding strict_from_inj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if i \\<in> {0..<k} then sorted_list_of_set (g ` {0..<k}) ! i else i) =\n    sorted_list_of_set (g ` {0..<k}) ! i", "using i"], ["proof (prove)\nusing this:\n  i \\<in> {0..<k}\n\ngoal (1 subgoal):\n 1. (if i \\<in> {0..<k} then sorted_list_of_set (g ` {0..<k}) ! i else i) =\n    sorted_list_of_set (g ` {0..<k}) ! i", "by auto"], ["proof (state)\nthis:\n  strict_from_inj k g i = sorted_list_of_set (g ` {0..<k}) ! i\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> {0..<k} \\<Longrightarrow> i \\<le> strict_from_inj k g i", "moreover"], ["proof (state)\nthis:\n  strict_from_inj k g i = sorted_list_of_set (g ` {0..<k}) ! i\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> {0..<k} \\<Longrightarrow> i \\<le> strict_from_inj k g i", "have \"i \\<le> ?xs ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i \\<le> sorted_list_of_set (g ` {0..<k}) ! i", "proof (rule sorted_wrt_less_idx, rule sorted_distinct_imp_sorted_wrt)"], ["proof (state)\ngoal (3 subgoals):\n 1. sorted (sorted_list_of_set (g ` {0..<k}))\n 2. distinct (sorted_list_of_set (g ` {0..<k}))\n 3. i < length (sorted_list_of_set (g ` {0..<k}))", "show \"sorted ?xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted (sorted_list_of_set (g ` {0..<k}))", "using sorted_sorted_list_of_set"], ["proof (prove)\nusing this:\n  sorted (sorted_list_of_set ?A)\n\ngoal (1 subgoal):\n 1. sorted (sorted_list_of_set (g ` {0..<k}))", "by blast"], ["proof (state)\nthis:\n  sorted (sorted_list_of_set (g ` {0..<k}))\n\ngoal (2 subgoals):\n 1. distinct (sorted_list_of_set (g ` {0..<k}))\n 2. i < length (sorted_list_of_set (g ` {0..<k}))", "show \"distinct ?xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. distinct (sorted_list_of_set (g ` {0..<k}))", "using distinct_sorted_list_of_set"], ["proof (prove)\nusing this:\n  distinct (sorted_list_of_set ?A)\n\ngoal (1 subgoal):\n 1. distinct (sorted_list_of_set (g ` {0..<k}))", "by blast"], ["proof (state)\nthis:\n  distinct (sorted_list_of_set (g ` {0..<k}))\n\ngoal (1 subgoal):\n 1. i < length (sorted_list_of_set (g ` {0..<k}))", "show \"i < length ?xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < length (sorted_list_of_set (g ` {0..<k}))", "by (metis S Sk atLeast0LessThan distinct_card distinct_sorted_list_of_set gk_S i\n            lessThan_iff set_sorted_list_of_set subset_eq_atLeast0_lessThan_finite)"], ["proof (state)\nthis:\n  i < length (sorted_list_of_set (g ` {0..<k}))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  i \\<le> sorted_list_of_set (g ` {0..<k}) ! i\n\ngoal (1 subgoal):\n 1. \\<And>i. i \\<in> {0..<k} \\<Longrightarrow> i \\<le> strict_from_inj k g i", "ultimately"], ["proof (chain)\npicking this:\n  strict_from_inj k g i = sorted_list_of_set (g ` {0..<k}) ! i\n  i \\<le> sorted_list_of_set (g ` {0..<k}) ! i", "show \"i \\<le> ?f i\""], ["proof (prove)\nusing this:\n  strict_from_inj k g i = sorted_list_of_set (g ` {0..<k}) ! i\n  i \\<le> sorted_list_of_set (g ` {0..<k}) ! i\n\ngoal (1 subgoal):\n 1. i \\<le> strict_from_inj k g i", "by auto"], ["proof (state)\nthis:\n  i \\<le> strict_from_inj k g i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>i\\<in>{0..<k}. i \\<le> strict_from_inj k g i\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       inj_on f {0..<k} \\<and>\n       f ` {0..<k} = S \\<and> (\\<forall>i\\<in>{0..<k}. i \\<le> f i)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>f.\n       inj_on f {0..<k} \\<and>\n       f ` {0..<k} = S \\<and> (\\<forall>i\\<in>{0..<k}. i \\<le> f i)", "using 1 2 3"], ["proof (prove)\nusing this:\n  inj_on (strict_from_inj k g) {0..<k}\n  strict_from_inj k g ` {0..<k} = S\n  \\<forall>i\\<in>{0..<k}. i \\<le> strict_from_inj k g i\n\ngoal (1 subgoal):\n 1. \\<exists>f.\n       inj_on f {0..<k} \\<and>\n       f ` {0..<k} = S \\<and> (\\<forall>i\\<in>{0..<k}. i \\<le> f i)", "by auto"], ["proof (state)\nthis:\n  \\<exists>f.\n     inj_on f {0..<k} \\<and>\n     f ` {0..<k} = S \\<and> (\\<forall>i\\<in>{0..<k}. i \\<le> f i)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>More specific results about submatrices\\<close>"], ["", "lemma diagonal_imp_submatrix0:\n  assumes dA: \"diagonal_mat A\" and A_carrier: \"A\\<in> carrier_mat n m\"\n  and Ik: \"card I = k\" and Jk: \"card J = k\"\n  and r: \"\\<forall>row_index \\<in> I. row_index < n\" (*I \\<subseteq> {0..<n}*)\n  and c: \"\\<forall>col_index \\<in> J. col_index < m\"\n  and a: \"a<k\" and b: \"b<k\"\nshows \"submatrix A I J $$ (a, b) = 0 \\<or> submatrix A I J $$ (a,b) = A $$(pick I a, pick I a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix A I J $$ (a, b) = (0::'a) \\<or>\n    submatrix A I J $$ (a, b) = A $$ (pick I a, pick I a)", "proof (cases \"submatrix A I J $$ (a, b) = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. submatrix A I J $$ (a, b) = (0::'a) \\<Longrightarrow>\n    submatrix A I J $$ (a, b) = (0::'a) \\<or>\n    submatrix A I J $$ (a, b) = A $$ (pick I a, pick I a)\n 2. submatrix A I J $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    submatrix A I J $$ (a, b) = (0::'a) \\<or>\n    submatrix A I J $$ (a, b) = A $$ (pick I a, pick I a)", "case True"], ["proof (state)\nthis:\n  submatrix A I J $$ (a, b) = (0::'a)\n\ngoal (2 subgoals):\n 1. submatrix A I J $$ (a, b) = (0::'a) \\<Longrightarrow>\n    submatrix A I J $$ (a, b) = (0::'a) \\<or>\n    submatrix A I J $$ (a, b) = A $$ (pick I a, pick I a)\n 2. submatrix A I J $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    submatrix A I J $$ (a, b) = (0::'a) \\<or>\n    submatrix A I J $$ (a, b) = A $$ (pick I a, pick I a)", "then"], ["proof (chain)\npicking this:\n  submatrix A I J $$ (a, b) = (0::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  submatrix A I J $$ (a, b) = (0::'a)\n\ngoal (1 subgoal):\n 1. submatrix A I J $$ (a, b) = (0::'a) \\<or>\n    submatrix A I J $$ (a, b) = A $$ (pick I a, pick I a)", "by auto"], ["proof (state)\nthis:\n  submatrix A I J $$ (a, b) = (0::'a) \\<or>\n  submatrix A I J $$ (a, b) = A $$ (pick I a, pick I a)\n\ngoal (1 subgoal):\n 1. submatrix A I J $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    submatrix A I J $$ (a, b) = (0::'a) \\<or>\n    submatrix A I J $$ (a, b) = A $$ (pick I a, pick I a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. submatrix A I J $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    submatrix A I J $$ (a, b) = (0::'a) \\<or>\n    submatrix A I J $$ (a, b) = A $$ (pick I a, pick I a)", "case False"], ["proof (state)\nthis:\n  submatrix A I J $$ (a, b) \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. submatrix A I J $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    submatrix A I J $$ (a, b) = (0::'a) \\<or>\n    submatrix A I J $$ (a, b) = A $$ (pick I a, pick I a)", "note not0 = False"], ["proof (state)\nthis:\n  submatrix A I J $$ (a, b) \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. submatrix A I J $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    submatrix A I J $$ (a, b) = (0::'a) \\<or>\n    submatrix A I J $$ (a, b) = A $$ (pick I a, pick I a)", "have aux: \"submatrix A I J $$ (a, b) = A $$(pick I a, pick J b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix A I J $$ (a, b) = A $$ (pick I a, pick J b)", "proof (rule submatrix_index)"], ["proof (state)\ngoal (2 subgoals):\n 1. a < card {i. i < dim_row A \\<and> i \\<in> I}\n 2. b < card {j. j < dim_col A \\<and> j \\<in> J}", "have \"card {i. i < dim_row A \\<and> i \\<in> I} = k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {i. i < dim_row A \\<and> i \\<in> I} = k", "by (smt A_carrier Ik carrier_matD(1) equalityI mem_Collect_eq r subsetI)"], ["proof (state)\nthis:\n  card {i. i < dim_row A \\<and> i \\<in> I} = k\n\ngoal (2 subgoals):\n 1. a < card {i. i < dim_row A \\<and> i \\<in> I}\n 2. b < card {j. j < dim_col A \\<and> j \\<in> J}", "moreover"], ["proof (state)\nthis:\n  card {i. i < dim_row A \\<and> i \\<in> I} = k\n\ngoal (2 subgoals):\n 1. a < card {i. i < dim_row A \\<and> i \\<in> I}\n 2. b < card {j. j < dim_col A \\<and> j \\<in> J}", "have \"card {i. i < dim_col A \\<and> i \\<in> J} = k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {i. i < dim_col A \\<and> i \\<in> J} = k", "by (metis (no_types, lifting) A_carrier Jk c carrier_matD(2) carrier_mat_def\n         equalityI mem_Collect_eq subsetI)"], ["proof (state)\nthis:\n  card {i. i < dim_col A \\<and> i \\<in> J} = k\n\ngoal (2 subgoals):\n 1. a < card {i. i < dim_row A \\<and> i \\<in> I}\n 2. b < card {j. j < dim_col A \\<and> j \\<in> J}", "ultimately"], ["proof (chain)\npicking this:\n  card {i. i < dim_row A \\<and> i \\<in> I} = k\n  card {i. i < dim_col A \\<and> i \\<in> J} = k", "show \" a < card {i. i < dim_row A \\<and> i \\<in> I}\"\n      and \"b < card {i. i < dim_col A \\<and> i \\<in> J}\""], ["proof (prove)\nusing this:\n  card {i. i < dim_row A \\<and> i \\<in> I} = k\n  card {i. i < dim_col A \\<and> i \\<in> J} = k\n\ngoal (1 subgoal):\n 1. a < card {i. i < dim_row A \\<and> i \\<in> I} &&&\n    b < card {i. i < dim_col A \\<and> i \\<in> J}", "using a b"], ["proof (prove)\nusing this:\n  card {i. i < dim_row A \\<and> i \\<in> I} = k\n  card {i. i < dim_col A \\<and> i \\<in> J} = k\n  a < k\n  b < k\n\ngoal (1 subgoal):\n 1. a < card {i. i < dim_row A \\<and> i \\<in> I} &&&\n    b < card {i. i < dim_col A \\<and> i \\<in> J}", "by auto"], ["proof (state)\nthis:\n  a < card {i. i < dim_row A \\<and> i \\<in> I}\n  b < card {i. i < dim_col A \\<and> i \\<in> J}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  submatrix A I J $$ (a, b) = A $$ (pick I a, pick J b)\n\ngoal (1 subgoal):\n 1. submatrix A I J $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    submatrix A I J $$ (a, b) = (0::'a) \\<or>\n    submatrix A I J $$ (a, b) = A $$ (pick I a, pick I a)", "thus ?thesis"], ["proof (prove)\nusing this:\n  submatrix A I J $$ (a, b) = A $$ (pick I a, pick J b)\n\ngoal (1 subgoal):\n 1. submatrix A I J $$ (a, b) = (0::'a) \\<or>\n    submatrix A I J $$ (a, b) = A $$ (pick I a, pick I a)", "proof (cases \"pick I a = pick J b\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>submatrix A I J $$ (a, b) = A $$ (pick I a, pick J b);\n     pick I a = pick J b\\<rbrakk>\n    \\<Longrightarrow> submatrix A I J $$ (a, b) = (0::'a) \\<or>\n                      submatrix A I J $$ (a, b) = A $$ (pick I a, pick I a)\n 2. \\<lbrakk>submatrix A I J $$ (a, b) = A $$ (pick I a, pick J b);\n     pick I a \\<noteq> pick J b\\<rbrakk>\n    \\<Longrightarrow> submatrix A I J $$ (a, b) = (0::'a) \\<or>\n                      submatrix A I J $$ (a, b) = A $$ (pick I a, pick I a)", "case True"], ["proof (state)\nthis:\n  pick I a = pick J b\n\ngoal (2 subgoals):\n 1. \\<lbrakk>submatrix A I J $$ (a, b) = A $$ (pick I a, pick J b);\n     pick I a = pick J b\\<rbrakk>\n    \\<Longrightarrow> submatrix A I J $$ (a, b) = (0::'a) \\<or>\n                      submatrix A I J $$ (a, b) = A $$ (pick I a, pick I a)\n 2. \\<lbrakk>submatrix A I J $$ (a, b) = A $$ (pick I a, pick J b);\n     pick I a \\<noteq> pick J b\\<rbrakk>\n    \\<Longrightarrow> submatrix A I J $$ (a, b) = (0::'a) \\<or>\n                      submatrix A I J $$ (a, b) = A $$ (pick I a, pick I a)", "then"], ["proof (chain)\npicking this:\n  pick I a = pick J b", "show ?thesis"], ["proof (prove)\nusing this:\n  pick I a = pick J b\n\ngoal (1 subgoal):\n 1. submatrix A I J $$ (a, b) = (0::'a) \\<or>\n    submatrix A I J $$ (a, b) = A $$ (pick I a, pick I a)", "using aux"], ["proof (prove)\nusing this:\n  pick I a = pick J b\n  submatrix A I J $$ (a, b) = A $$ (pick I a, pick J b)\n\ngoal (1 subgoal):\n 1. submatrix A I J $$ (a, b) = (0::'a) \\<or>\n    submatrix A I J $$ (a, b) = A $$ (pick I a, pick I a)", "by auto"], ["proof (state)\nthis:\n  submatrix A I J $$ (a, b) = (0::'a) \\<or>\n  submatrix A I J $$ (a, b) = A $$ (pick I a, pick I a)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>submatrix A I J $$ (a, b) = A $$ (pick I a, pick J b);\n     pick I a \\<noteq> pick J b\\<rbrakk>\n    \\<Longrightarrow> submatrix A I J $$ (a, b) = (0::'a) \\<or>\n                      submatrix A I J $$ (a, b) = A $$ (pick I a, pick I a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>submatrix A I J $$ (a, b) = A $$ (pick I a, pick J b);\n     pick I a \\<noteq> pick J b\\<rbrakk>\n    \\<Longrightarrow> submatrix A I J $$ (a, b) = (0::'a) \\<or>\n                      submatrix A I J $$ (a, b) = A $$ (pick I a, pick I a)", "case False"], ["proof (state)\nthis:\n  pick I a \\<noteq> pick J b\n\ngoal (1 subgoal):\n 1. \\<lbrakk>submatrix A I J $$ (a, b) = A $$ (pick I a, pick J b);\n     pick I a \\<noteq> pick J b\\<rbrakk>\n    \\<Longrightarrow> submatrix A I J $$ (a, b) = (0::'a) \\<or>\n                      submatrix A I J $$ (a, b) = A $$ (pick I a, pick I a)", "then"], ["proof (chain)\npicking this:\n  pick I a \\<noteq> pick J b", "show ?thesis"], ["proof (prove)\nusing this:\n  pick I a \\<noteq> pick J b\n\ngoal (1 subgoal):\n 1. submatrix A I J $$ (a, b) = (0::'a) \\<or>\n    submatrix A I J $$ (a, b) = A $$ (pick I a, pick I a)", "by (metis aux A_carrier Ik Jk a b c carrier_matD dA diagonal_mat_def pick_in_set_le r)"], ["proof (state)\nthis:\n  submatrix A I J $$ (a, b) = (0::'a) \\<or>\n  submatrix A I J $$ (a, b) = A $$ (pick I a, pick I a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  submatrix A I J $$ (a, b) = (0::'a) \\<or>\n  submatrix A I J $$ (a, b) = A $$ (pick I a, pick I a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma diagonal_imp_submatrix_element_not0:\n  assumes dA: \"diagonal_mat A\"\n  and A_carrier: \"A \\<in> carrier_mat n m\"\n  and Ik: \"card I = k\" and Jk: \"card J = k\"\n  and I: \"I \\<subseteq> {0..<n}\"\n  and J: \"J \\<subseteq> {0..<m}\"\n  and b: \"b < k\"\n  and ex_not0: \"\\<exists>i. i<k \\<and> submatrix A I J $$ (i, b) \\<noteq> 0\"\nshows \"\\<exists>!i. i<k \\<and> submatrix A I J $$ (i, b) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!i. i < k \\<and> submatrix A I J $$ (i, b) \\<noteq> (0::'a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>!i. i < k \\<and> submatrix A I J $$ (i, b) \\<noteq> (0::'a)", "have I_eq: \"I = {i. i < dim_row A \\<and> i \\<in> I}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I = {i. i < dim_row A \\<and> i \\<in> I}", "using I A_carrier"], ["proof (prove)\nusing this:\n  I \\<subseteq> {0..<n}\n  A \\<in> carrier_mat n m\n\ngoal (1 subgoal):\n 1. I = {i. i < dim_row A \\<and> i \\<in> I}", "unfolding carrier_mat_def"], ["proof (prove)\nusing this:\n  I \\<subseteq> {0..<n}\n  A \\<in> {ma. dim_row ma = n \\<and> dim_col ma = m}\n\ngoal (1 subgoal):\n 1. I = {i. i < dim_row A \\<and> i \\<in> I}", "by auto"], ["proof (state)\nthis:\n  I = {i. i < dim_row A \\<and> i \\<in> I}\n\ngoal (1 subgoal):\n 1. \\<exists>!i. i < k \\<and> submatrix A I J $$ (i, b) \\<noteq> (0::'a)", "have J_eq: \"J = {i. i < dim_col A \\<and> i \\<in> J}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. J = {i. i < dim_col A \\<and> i \\<in> J}", "using J A_carrier"], ["proof (prove)\nusing this:\n  J \\<subseteq> {0..<m}\n  A \\<in> carrier_mat n m\n\ngoal (1 subgoal):\n 1. J = {i. i < dim_col A \\<and> i \\<in> J}", "unfolding carrier_mat_def"], ["proof (prove)\nusing this:\n  J \\<subseteq> {0..<m}\n  A \\<in> {ma. dim_row ma = n \\<and> dim_col ma = m}\n\ngoal (1 subgoal):\n 1. J = {i. i < dim_col A \\<and> i \\<in> J}", "by auto"], ["proof (state)\nthis:\n  J = {i. i < dim_col A \\<and> i \\<in> J}\n\ngoal (1 subgoal):\n 1. \\<exists>!i. i < k \\<and> submatrix A I J $$ (i, b) \\<noteq> (0::'a)", "obtain a where sub_ab: \"submatrix A I J $$ (a, b) \\<noteq> 0\" and ak: \"a < k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>submatrix A I J $$ (a, b) \\<noteq> (0::'a); a < k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using ex_not0"], ["proof (prove)\nusing this:\n  \\<exists>i<k. submatrix A I J $$ (i, b) \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>submatrix A I J $$ (a, b) \\<noteq> (0::'a); a < k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  submatrix A I J $$ (a, b) \\<noteq> (0::'a)\n  a < k\n\ngoal (1 subgoal):\n 1. \\<exists>!i. i < k \\<and> submatrix A I J $$ (i, b) \\<noteq> (0::'a)", "moreover"], ["proof (state)\nthis:\n  submatrix A I J $$ (a, b) \\<noteq> (0::'a)\n  a < k\n\ngoal (1 subgoal):\n 1. \\<exists>!i. i < k \\<and> submatrix A I J $$ (i, b) \\<noteq> (0::'a)", "have \"i = a\" if sub_ib: \"submatrix A I J $$ (i, b) \\<noteq> 0\" and ik: \"i < k\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. i = a", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. i = a", "have 1: \"pick I i < dim_row A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pick I i < dim_row A", "using I_eq Ik ik pick_in_set_le"], ["proof (prove)\nusing this:\n  I = {i. i < dim_row A \\<and> i \\<in> I}\n  card I = k\n  i < k\n  ?n < card ?S \\<Longrightarrow> pick ?S ?n \\<in> ?S\n\ngoal (1 subgoal):\n 1. pick I i < dim_row A", "by auto"], ["proof (state)\nthis:\n  pick I i < dim_row A\n\ngoal (1 subgoal):\n 1. i = a", "have 2: \"pick J b < dim_col A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pick J b < dim_col A", "using J_eq Jk b pick_le"], ["proof (prove)\nusing this:\n  J = {i. i < dim_col A \\<and> i \\<in> J}\n  card J = k\n  b < k\n  ?n < card {a. a < ?i \\<and> a \\<in> ?S} \\<Longrightarrow> pick ?S ?n < ?i\n\ngoal (1 subgoal):\n 1. pick J b < dim_col A", "by auto"], ["proof (state)\nthis:\n  pick J b < dim_col A\n\ngoal (1 subgoal):\n 1. i = a", "have 3: \"pick I a < dim_row A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pick I a < dim_row A", "using I_eq Ik calculation(2) pick_le"], ["proof (prove)\nusing this:\n  I = {i. i < dim_row A \\<and> i \\<in> I}\n  card I = k\n  a < k\n  ?n < card {a. a < ?i \\<and> a \\<in> ?S} \\<Longrightarrow> pick ?S ?n < ?i\n\ngoal (1 subgoal):\n 1. pick I a < dim_row A", "by auto"], ["proof (state)\nthis:\n  pick I a < dim_row A\n\ngoal (1 subgoal):\n 1. i = a", "have \"submatrix A I J $$ (i, b) = A $$ (pick I i, pick J b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix A I J $$ (i, b) = A $$ (pick I i, pick J b)", "by (rule submatrix_index, insert I_eq Ik ik J_eq Jk b, auto)"], ["proof (state)\nthis:\n  submatrix A I J $$ (i, b) = A $$ (pick I i, pick J b)\n\ngoal (1 subgoal):\n 1. i = a", "hence pick_Ii_Jb: \"pick I i = pick J b\""], ["proof (prove)\nusing this:\n  submatrix A I J $$ (i, b) = A $$ (pick I i, pick J b)\n\ngoal (1 subgoal):\n 1. pick I i = pick J b", "using dA sub_ib 1 2"], ["proof (prove)\nusing this:\n  submatrix A I J $$ (i, b) = A $$ (pick I i, pick J b)\n  diagonal_mat A\n  submatrix A I J $$ (i, b) \\<noteq> (0::'a)\n  pick I i < dim_row A\n  pick J b < dim_col A\n\ngoal (1 subgoal):\n 1. pick I i = pick J b", "unfolding diagonal_mat_def"], ["proof (prove)\nusing this:\n  submatrix A I J $$ (i, b) = A $$ (pick I i, pick J b)\n  \\<forall>i<dim_row A.\n     \\<forall>j<dim_col A.\n        i \\<noteq> j \\<longrightarrow> A $$ (i, j) = (0::'a)\n  submatrix A I J $$ (i, b) \\<noteq> (0::'a)\n  pick I i < dim_row A\n  pick J b < dim_col A\n\ngoal (1 subgoal):\n 1. pick I i = pick J b", "by auto"], ["proof (state)\nthis:\n  pick I i = pick J b\n\ngoal (1 subgoal):\n 1. i = a", "have \"submatrix A I J $$ (a, b) = A $$ (pick I a, pick J b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix A I J $$ (a, b) = A $$ (pick I a, pick J b)", "by (rule submatrix_index, insert I_eq Ik ak J_eq Jk b, auto)"], ["proof (state)\nthis:\n  submatrix A I J $$ (a, b) = A $$ (pick I a, pick J b)\n\ngoal (1 subgoal):\n 1. i = a", "hence pick_Ia_Jb: \"pick I a = pick J b\""], ["proof (prove)\nusing this:\n  submatrix A I J $$ (a, b) = A $$ (pick I a, pick J b)\n\ngoal (1 subgoal):\n 1. pick I a = pick J b", "using dA sub_ab 3 2"], ["proof (prove)\nusing this:\n  submatrix A I J $$ (a, b) = A $$ (pick I a, pick J b)\n  diagonal_mat A\n  submatrix A I J $$ (a, b) \\<noteq> (0::'a)\n  pick I a < dim_row A\n  pick J b < dim_col A\n\ngoal (1 subgoal):\n 1. pick I a = pick J b", "unfolding diagonal_mat_def"], ["proof (prove)\nusing this:\n  submatrix A I J $$ (a, b) = A $$ (pick I a, pick J b)\n  \\<forall>i<dim_row A.\n     \\<forall>j<dim_col A.\n        i \\<noteq> j \\<longrightarrow> A $$ (i, j) = (0::'a)\n  submatrix A I J $$ (a, b) \\<noteq> (0::'a)\n  pick I a < dim_row A\n  pick J b < dim_col A\n\ngoal (1 subgoal):\n 1. pick I a = pick J b", "by auto"], ["proof (state)\nthis:\n  pick I a = pick J b\n\ngoal (1 subgoal):\n 1. i = a", "have pick_Ia_Ii: \"pick I a = pick I i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pick I a = pick I i", "using pick_Ii_Jb pick_Ia_Jb"], ["proof (prove)\nusing this:\n  pick I i = pick J b\n  pick I a = pick J b\n\ngoal (1 subgoal):\n 1. pick I a = pick I i", "by simp"], ["proof (state)\nthis:\n  pick I a = pick I i\n\ngoal (1 subgoal):\n 1. i = a", "thus ?thesis"], ["proof (prove)\nusing this:\n  pick I a = pick I i\n\ngoal (1 subgoal):\n 1. i = a", "by (metis Ik ak ik nat_neq_iff pick_mono_le)"], ["proof (state)\nthis:\n  i = a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>submatrix A I J $$ (?i, b) \\<noteq> (0::'a); ?i < k\\<rbrakk>\n  \\<Longrightarrow> ?i = a\n\ngoal (1 subgoal):\n 1. \\<exists>!i. i < k \\<and> submatrix A I J $$ (i, b) \\<noteq> (0::'a)", "ultimately"], ["proof (chain)\npicking this:\n  submatrix A I J $$ (a, b) \\<noteq> (0::'a)\n  a < k\n  \\<lbrakk>submatrix A I J $$ (?i, b) \\<noteq> (0::'a); ?i < k\\<rbrakk>\n  \\<Longrightarrow> ?i = a", "show ?thesis"], ["proof (prove)\nusing this:\n  submatrix A I J $$ (a, b) \\<noteq> (0::'a)\n  a < k\n  \\<lbrakk>submatrix A I J $$ (?i, b) \\<noteq> (0::'a); ?i < k\\<rbrakk>\n  \\<Longrightarrow> ?i = a\n\ngoal (1 subgoal):\n 1. \\<exists>!i. i < k \\<and> submatrix A I J $$ (i, b) \\<noteq> (0::'a)", "by auto"], ["proof (state)\nthis:\n  \\<exists>!i. i < k \\<and> submatrix A I J $$ (i, b) \\<noteq> (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma submatrix_index_exists:\n  assumes A_carrier: \"A\\<in> carrier_mat n m\"\n  and Ik: \"card I = k\" and Jk: \"card J = k\"\n  and a: \"a \\<in> I\" and b: \"b \\<in> J\" and k: \"k > 0\"\n  and I: \"I \\<subseteq> {0..<n}\" and J: \"J \\<subseteq> {0..<m}\"\nshows \"\\<exists>a' b'. a' < k \\<and> b' < k \\<and> submatrix A I J $$ (a',b') = A $$ (a,b)\n        \\<and> a = pick I a' \\<and> b = pick J b'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a' b'.\n       a' < k \\<and>\n       b' < k \\<and>\n       submatrix A I J $$ (a', b') = A $$ (a, b) \\<and>\n       a = pick I a' \\<and> b = pick J b'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>a' b'.\n       a' < k \\<and>\n       b' < k \\<and>\n       submatrix A I J $$ (a', b') = A $$ (a, b) \\<and>\n       a = pick I a' \\<and> b = pick J b'", "let ?xs = \"sorted_list_of_set I\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>a' b'.\n       a' < k \\<and>\n       b' < k \\<and>\n       submatrix A I J $$ (a', b') = A $$ (a, b) \\<and>\n       a = pick I a' \\<and> b = pick J b'", "let ?ys = \"sorted_list_of_set J\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>a' b'.\n       a' < k \\<and>\n       b' < k \\<and>\n       submatrix A I J $$ (a', b') = A $$ (a, b) \\<and>\n       a = pick I a' \\<and> b = pick J b'", "have finI: \"finite I\" and finJ: \"finite J\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite I &&& finite J", "using k Ik Jk card_ge_0_finite"], ["proof (prove)\nusing this:\n  0 < k\n  card I = k\n  card J = k\n  0 < card ?A \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. finite I &&& finite J", "by metis+"], ["proof (state)\nthis:\n  finite I\n  finite J\n\ngoal (1 subgoal):\n 1. \\<exists>a' b'.\n       a' < k \\<and>\n       b' < k \\<and>\n       submatrix A I J $$ (a', b') = A $$ (a, b) \\<and>\n       a = pick I a' \\<and> b = pick J b'", "have set_xs: \"set ?xs = I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (sorted_list_of_set I) = I", "by (rule set_sorted_list_of_set[OF finI])"], ["proof (state)\nthis:\n  set (sorted_list_of_set I) = I\n\ngoal (1 subgoal):\n 1. \\<exists>a' b'.\n       a' < k \\<and>\n       b' < k \\<and>\n       submatrix A I J $$ (a', b') = A $$ (a, b) \\<and>\n       a = pick I a' \\<and> b = pick J b'", "have set_ys: \"set ?ys = J\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (sorted_list_of_set J) = J", "by (rule set_sorted_list_of_set[OF finJ])"], ["proof (state)\nthis:\n  set (sorted_list_of_set J) = J\n\ngoal (1 subgoal):\n 1. \\<exists>a' b'.\n       a' < k \\<and>\n       b' < k \\<and>\n       submatrix A I J $$ (a', b') = A $$ (a, b) \\<and>\n       a = pick I a' \\<and> b = pick J b'", "have a_in_xs: \"a \\<in> set ?xs\" and b_in_ys: \"b \\<in> set ?ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> set (sorted_list_of_set I) &&&\n    b \\<in> set (sorted_list_of_set J)", "using set_xs a set_ys b"], ["proof (prove)\nusing this:\n  set (sorted_list_of_set I) = I\n  a \\<in> I\n  set (sorted_list_of_set J) = J\n  b \\<in> J\n\ngoal (1 subgoal):\n 1. a \\<in> set (sorted_list_of_set I) &&&\n    b \\<in> set (sorted_list_of_set J)", "by auto"], ["proof (state)\nthis:\n  a \\<in> set (sorted_list_of_set I)\n  b \\<in> set (sorted_list_of_set J)\n\ngoal (1 subgoal):\n 1. \\<exists>a' b'.\n       a' < k \\<and>\n       b' < k \\<and>\n       submatrix A I J $$ (a', b') = A $$ (a, b) \\<and>\n       a = pick I a' \\<and> b = pick J b'", "have length_xs: \"length ?xs = k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length (sorted_list_of_set I) = k", "by (metis Ik distinct_card set_xs sorted_list_of_set(3))"], ["proof (state)\nthis:\n  length (sorted_list_of_set I) = k\n\ngoal (1 subgoal):\n 1. \\<exists>a' b'.\n       a' < k \\<and>\n       b' < k \\<and>\n       submatrix A I J $$ (a', b') = A $$ (a, b) \\<and>\n       a = pick I a' \\<and> b = pick J b'", "have length_ys: \"length ?ys = k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length (sorted_list_of_set J) = k", "by (metis Jk distinct_card set_ys sorted_list_of_set(3))"], ["proof (state)\nthis:\n  length (sorted_list_of_set J) = k\n\ngoal (1 subgoal):\n 1. \\<exists>a' b'.\n       a' < k \\<and>\n       b' < k \\<and>\n       submatrix A I J $$ (a', b') = A $$ (a, b) \\<and>\n       a = pick I a' \\<and> b = pick J b'", "obtain a' where a': \"?xs ! a' = a\" and a'_length: \"a' < length ?xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a'.\n        \\<lbrakk>sorted_list_of_set I ! a' = a;\n         a' < length (sorted_list_of_set I)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson a_in_xs in_set_conv_nth)"], ["proof (state)\nthis:\n  sorted_list_of_set I ! a' = a\n  a' < length (sorted_list_of_set I)\n\ngoal (1 subgoal):\n 1. \\<exists>a' b'.\n       a' < k \\<and>\n       b' < k \\<and>\n       submatrix A I J $$ (a', b') = A $$ (a, b) \\<and>\n       a = pick I a' \\<and> b = pick J b'", "obtain b' where b': \"?ys ! b' = b\" and b'_length: \"b' < length ?ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>b'.\n        \\<lbrakk>sorted_list_of_set J ! b' = b;\n         b' < length (sorted_list_of_set J)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson b_in_ys in_set_conv_nth)"], ["proof (state)\nthis:\n  sorted_list_of_set J ! b' = b\n  b' < length (sorted_list_of_set J)\n\ngoal (1 subgoal):\n 1. \\<exists>a' b'.\n       a' < k \\<and>\n       b' < k \\<and>\n       submatrix A I J $$ (a', b') = A $$ (a, b) \\<and>\n       a = pick I a' \\<and> b = pick J b'", "have pick_a: \"a = pick I a'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a = pick I a'", "using a' a'_length finI sorted_list_of_set_eq_pick"], ["proof (prove)\nusing this:\n  sorted_list_of_set I ! a' = a\n  a' < length (sorted_list_of_set I)\n  finite I\n  ?i < length (sorted_list_of_set ?I) \\<Longrightarrow>\n  sorted_list_of_set ?I ! ?i = pick ?I ?i\n\ngoal (1 subgoal):\n 1. a = pick I a'", "by auto"], ["proof (state)\nthis:\n  a = pick I a'\n\ngoal (1 subgoal):\n 1. \\<exists>a' b'.\n       a' < k \\<and>\n       b' < k \\<and>\n       submatrix A I J $$ (a', b') = A $$ (a, b) \\<and>\n       a = pick I a' \\<and> b = pick J b'", "have pick_b: \"b = pick J b'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b = pick J b'", "using b' b'_length finJ sorted_list_of_set_eq_pick"], ["proof (prove)\nusing this:\n  sorted_list_of_set J ! b' = b\n  b' < length (sorted_list_of_set J)\n  finite J\n  ?i < length (sorted_list_of_set ?I) \\<Longrightarrow>\n  sorted_list_of_set ?I ! ?i = pick ?I ?i\n\ngoal (1 subgoal):\n 1. b = pick J b'", "by auto"], ["proof (state)\nthis:\n  b = pick J b'\n\ngoal (1 subgoal):\n 1. \\<exists>a' b'.\n       a' < k \\<and>\n       b' < k \\<and>\n       submatrix A I J $$ (a', b') = A $$ (a, b) \\<and>\n       a = pick I a' \\<and> b = pick J b'", "have I_rw: \"I = {i. i < dim_row A \\<and> i \\<in> I}\" and J_rw: \"J = {i. i < dim_col A \\<and> i \\<in> J}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I = {i. i < dim_row A \\<and> i \\<in> I} &&&\n    J = {i. i < dim_col A \\<and> i \\<in> J}", "using I A_carrier J"], ["proof (prove)\nusing this:\n  I \\<subseteq> {0..<n}\n  A \\<in> carrier_mat n m\n  J \\<subseteq> {0..<m}\n\ngoal (1 subgoal):\n 1. I = {i. i < dim_row A \\<and> i \\<in> I} &&&\n    J = {i. i < dim_col A \\<and> i \\<in> J}", "by auto"], ["proof (state)\nthis:\n  I = {i. i < dim_row A \\<and> i \\<in> I}\n  J = {i. i < dim_col A \\<and> i \\<in> J}\n\ngoal (1 subgoal):\n 1. \\<exists>a' b'.\n       a' < k \\<and>\n       b' < k \\<and>\n       submatrix A I J $$ (a', b') = A $$ (a, b) \\<and>\n       a = pick I a' \\<and> b = pick J b'", "have a'k: \"a' < k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a' < k", "using a'_length length_xs"], ["proof (prove)\nusing this:\n  a' < length (sorted_list_of_set I)\n  length (sorted_list_of_set I) = k\n\ngoal (1 subgoal):\n 1. a' < k", "by auto"], ["proof (state)\nthis:\n  a' < k\n\ngoal (1 subgoal):\n 1. \\<exists>a' b'.\n       a' < k \\<and>\n       b' < k \\<and>\n       submatrix A I J $$ (a', b') = A $$ (a, b) \\<and>\n       a = pick I a' \\<and> b = pick J b'", "moreover"], ["proof (state)\nthis:\n  a' < k\n\ngoal (1 subgoal):\n 1. \\<exists>a' b'.\n       a' < k \\<and>\n       b' < k \\<and>\n       submatrix A I J $$ (a', b') = A $$ (a, b) \\<and>\n       a = pick I a' \\<and> b = pick J b'", "have b'k: \"b'<k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b' < k", "using b'_length length_ys"], ["proof (prove)\nusing this:\n  b' < length (sorted_list_of_set J)\n  length (sorted_list_of_set J) = k\n\ngoal (1 subgoal):\n 1. b' < k", "by auto"], ["proof (state)\nthis:\n  b' < k\n\ngoal (1 subgoal):\n 1. \\<exists>a' b'.\n       a' < k \\<and>\n       b' < k \\<and>\n       submatrix A I J $$ (a', b') = A $$ (a, b) \\<and>\n       a = pick I a' \\<and> b = pick J b'", "moreover"], ["proof (state)\nthis:\n  b' < k\n\ngoal (1 subgoal):\n 1. \\<exists>a' b'.\n       a' < k \\<and>\n       b' < k \\<and>\n       submatrix A I J $$ (a', b') = A $$ (a, b) \\<and>\n       a = pick I a' \\<and> b = pick J b'", "have sub_eq: \"submatrix A I J $$ (a', b') = A $$ (a, b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix A I J $$ (a', b') = A $$ (a, b)", "unfolding pick_a pick_b"], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix A I J $$ (a', b') = A $$ (pick I a', pick J b')", "by (rule submatrix_index, insert J_rw I_rw Ik Jk a'_length length_xs b'_length length_ys, auto)"], ["proof (state)\nthis:\n  submatrix A I J $$ (a', b') = A $$ (a, b)\n\ngoal (1 subgoal):\n 1. \\<exists>a' b'.\n       a' < k \\<and>\n       b' < k \\<and>\n       submatrix A I J $$ (a', b') = A $$ (a, b) \\<and>\n       a = pick I a' \\<and> b = pick J b'", "ultimately"], ["proof (chain)\npicking this:\n  a' < k\n  b' < k\n  submatrix A I J $$ (a', b') = A $$ (a, b)", "show ?thesis"], ["proof (prove)\nusing this:\n  a' < k\n  b' < k\n  submatrix A I J $$ (a', b') = A $$ (a, b)\n\ngoal (1 subgoal):\n 1. \\<exists>a' b'.\n       a' < k \\<and>\n       b' < k \\<and>\n       submatrix A I J $$ (a', b') = A $$ (a, b) \\<and>\n       a = pick I a' \\<and> b = pick J b'", "using pick_a pick_b"], ["proof (prove)\nusing this:\n  a' < k\n  b' < k\n  submatrix A I J $$ (a', b') = A $$ (a, b)\n  a = pick I a'\n  b = pick J b'\n\ngoal (1 subgoal):\n 1. \\<exists>a' b'.\n       a' < k \\<and>\n       b' < k \\<and>\n       submatrix A I J $$ (a', b') = A $$ (a, b) \\<and>\n       a = pick I a' \\<and> b = pick J b'", "by auto"], ["proof (state)\nthis:\n  \\<exists>a' b'.\n     a' < k \\<and>\n     b' < k \\<and>\n     submatrix A I J $$ (a', b') = A $$ (a, b) \\<and>\n     a = pick I a' \\<and> b = pick J b'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mat_delete_submatrix_insert:\n  assumes A_carrier: \"A \\<in> carrier_mat n m\"\n  and Ik: \"card I = k\" and Jk: \"card J = k\"\n  and I: \"I \\<subseteq> {0..<n}\" and J: \"J \\<subseteq> {0..<m}\"\n  and a: \"a < n\" and b: \"b < m\"\n  and k: \"k < min n m\"\n  and a_notin_I: \"a \\<notin> I\" and b_notin_J: \"b \\<notin> J\"\n  and a'k: \"a' < Suc k\" and b'k:  \"b' < Suc k\"\n  and a_def: \"pick (insert a I) a' = a\"\n  and b_def: \"pick (insert b J) b' = b\"\nshows \"mat_delete (submatrix A (insert a I) (insert b J)) a' b' = submatrix A I J\" (is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. mat_delete (submatrix A (insert a I) (insert b J)) a' b' =\n    submatrix A I J", "proof (rule eq_matI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (submatrix A I J);\n        j < dim_col (submatrix A I J)\\<rbrakk>\n       \\<Longrightarrow> mat_delete (submatrix A (insert a I) (insert b J))\n                          a' b' $$\n                         (i, j) =\n                         submatrix A I J $$ (i, j)\n 2. dim_row (mat_delete (submatrix A (insert a I) (insert b J)) a' b') =\n    dim_row (submatrix A I J)\n 3. dim_col (mat_delete (submatrix A (insert a I) (insert b J)) a' b') =\n    dim_col (submatrix A I J)", "have I_eq: \"I = {i. i < dim_row A \\<and> i \\<in> I}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I = {i. i < dim_row A \\<and> i \\<in> I}", "using I A_carrier"], ["proof (prove)\nusing this:\n  I \\<subseteq> {0..<n}\n  A \\<in> carrier_mat n m\n\ngoal (1 subgoal):\n 1. I = {i. i < dim_row A \\<and> i \\<in> I}", "unfolding carrier_mat_def"], ["proof (prove)\nusing this:\n  I \\<subseteq> {0..<n}\n  A \\<in> {ma. dim_row ma = n \\<and> dim_col ma = m}\n\ngoal (1 subgoal):\n 1. I = {i. i < dim_row A \\<and> i \\<in> I}", "by auto"], ["proof (state)\nthis:\n  I = {i. i < dim_row A \\<and> i \\<in> I}\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (submatrix A I J);\n        j < dim_col (submatrix A I J)\\<rbrakk>\n       \\<Longrightarrow> mat_delete (submatrix A (insert a I) (insert b J))\n                          a' b' $$\n                         (i, j) =\n                         submatrix A I J $$ (i, j)\n 2. dim_row (mat_delete (submatrix A (insert a I) (insert b J)) a' b') =\n    dim_row (submatrix A I J)\n 3. dim_col (mat_delete (submatrix A (insert a I) (insert b J)) a' b') =\n    dim_col (submatrix A I J)", "have J_eq: \"J = {i. i < dim_col A \\<and> i \\<in> J}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. J = {i. i < dim_col A \\<and> i \\<in> J}", "using J A_carrier"], ["proof (prove)\nusing this:\n  J \\<subseteq> {0..<m}\n  A \\<in> carrier_mat n m\n\ngoal (1 subgoal):\n 1. J = {i. i < dim_col A \\<and> i \\<in> J}", "unfolding carrier_mat_def"], ["proof (prove)\nusing this:\n  J \\<subseteq> {0..<m}\n  A \\<in> {ma. dim_row ma = n \\<and> dim_col ma = m}\n\ngoal (1 subgoal):\n 1. J = {i. i < dim_col A \\<and> i \\<in> J}", "by auto"], ["proof (state)\nthis:\n  J = {i. i < dim_col A \\<and> i \\<in> J}\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (submatrix A I J);\n        j < dim_col (submatrix A I J)\\<rbrakk>\n       \\<Longrightarrow> mat_delete (submatrix A (insert a I) (insert b J))\n                          a' b' $$\n                         (i, j) =\n                         submatrix A I J $$ (i, j)\n 2. dim_row (mat_delete (submatrix A (insert a I) (insert b J)) a' b') =\n    dim_row (submatrix A I J)\n 3. dim_col (mat_delete (submatrix A (insert a I) (insert b J)) a' b') =\n    dim_col (submatrix A I J)", "have insert_I_eq: \"insert a I = {i. i < dim_row A \\<and> i \\<in> insert a I}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert a I = {i. i < dim_row A \\<and> i \\<in> insert a I}", "using I A_carrier a k"], ["proof (prove)\nusing this:\n  I \\<subseteq> {0..<n}\n  A \\<in> carrier_mat n m\n  a < n\n  k < min n m\n\ngoal (1 subgoal):\n 1. insert a I = {i. i < dim_row A \\<and> i \\<in> insert a I}", "unfolding carrier_mat_def"], ["proof (prove)\nusing this:\n  I \\<subseteq> {0..<n}\n  A \\<in> {ma. dim_row ma = n \\<and> dim_col ma = m}\n  a < n\n  k < min n m\n\ngoal (1 subgoal):\n 1. insert a I = {i. i < dim_row A \\<and> i \\<in> insert a I}", "by auto"], ["proof (state)\nthis:\n  insert a I = {i. i < dim_row A \\<and> i \\<in> insert a I}\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (submatrix A I J);\n        j < dim_col (submatrix A I J)\\<rbrakk>\n       \\<Longrightarrow> mat_delete (submatrix A (insert a I) (insert b J))\n                          a' b' $$\n                         (i, j) =\n                         submatrix A I J $$ (i, j)\n 2. dim_row (mat_delete (submatrix A (insert a I) (insert b J)) a' b') =\n    dim_row (submatrix A I J)\n 3. dim_col (mat_delete (submatrix A (insert a I) (insert b J)) a' b') =\n    dim_col (submatrix A I J)", "have card_Suc_k: \"card {i. i < dim_row A \\<and> i \\<in> insert a I} = Suc k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {i. i < dim_row A \\<and> i \\<in> insert a I} = Suc k", "using insert_I_eq Ik a_notin_I"], ["proof (prove)\nusing this:\n  insert a I = {i. i < dim_row A \\<and> i \\<in> insert a I}\n  card I = k\n  a \\<notin> I\n\ngoal (1 subgoal):\n 1. card {i. i < dim_row A \\<and> i \\<in> insert a I} = Suc k", "by (metis I card_insert_disjoint finite_atLeastLessThan finite_subset)"], ["proof (state)\nthis:\n  card {i. i < dim_row A \\<and> i \\<in> insert a I} = Suc k\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (submatrix A I J);\n        j < dim_col (submatrix A I J)\\<rbrakk>\n       \\<Longrightarrow> mat_delete (submatrix A (insert a I) (insert b J))\n                          a' b' $$\n                         (i, j) =\n                         submatrix A I J $$ (i, j)\n 2. dim_row (mat_delete (submatrix A (insert a I) (insert b J)) a' b') =\n    dim_row (submatrix A I J)\n 3. dim_col (mat_delete (submatrix A (insert a I) (insert b J)) a' b') =\n    dim_col (submatrix A I J)", "have insert_J_eq: \"insert b J = {i. i < dim_col A \\<and> i \\<in> insert b J}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert b J = {i. i < dim_col A \\<and> i \\<in> insert b J}", "using J A_carrier b k"], ["proof (prove)\nusing this:\n  J \\<subseteq> {0..<m}\n  A \\<in> carrier_mat n m\n  b < m\n  k < min n m\n\ngoal (1 subgoal):\n 1. insert b J = {i. i < dim_col A \\<and> i \\<in> insert b J}", "unfolding carrier_mat_def"], ["proof (prove)\nusing this:\n  J \\<subseteq> {0..<m}\n  A \\<in> {ma. dim_row ma = n \\<and> dim_col ma = m}\n  b < m\n  k < min n m\n\ngoal (1 subgoal):\n 1. insert b J = {i. i < dim_col A \\<and> i \\<in> insert b J}", "by auto"], ["proof (state)\nthis:\n  insert b J = {i. i < dim_col A \\<and> i \\<in> insert b J}\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (submatrix A I J);\n        j < dim_col (submatrix A I J)\\<rbrakk>\n       \\<Longrightarrow> mat_delete (submatrix A (insert a I) (insert b J))\n                          a' b' $$\n                         (i, j) =\n                         submatrix A I J $$ (i, j)\n 2. dim_row (mat_delete (submatrix A (insert a I) (insert b J)) a' b') =\n    dim_row (submatrix A I J)\n 3. dim_col (mat_delete (submatrix A (insert a I) (insert b J)) a' b') =\n    dim_col (submatrix A I J)", "have card_Suc_k': \"card {i. i < dim_col A \\<and> i \\<in> insert b J} = Suc k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {i. i < dim_col A \\<and> i \\<in> insert b J} = Suc k", "using insert_J_eq Jk b_notin_J"], ["proof (prove)\nusing this:\n  insert b J = {i. i < dim_col A \\<and> i \\<in> insert b J}\n  card J = k\n  b \\<notin> J\n\ngoal (1 subgoal):\n 1. card {i. i < dim_col A \\<and> i \\<in> insert b J} = Suc k", "by (metis J card_insert_disjoint finite_atLeastLessThan finite_subset)"], ["proof (state)\nthis:\n  card {i. i < dim_col A \\<and> i \\<in> insert b J} = Suc k\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (submatrix A I J);\n        j < dim_col (submatrix A I J)\\<rbrakk>\n       \\<Longrightarrow> mat_delete (submatrix A (insert a I) (insert b J))\n                          a' b' $$\n                         (i, j) =\n                         submatrix A I J $$ (i, j)\n 2. dim_row (mat_delete (submatrix A (insert a I) (insert b J)) a' b') =\n    dim_row (submatrix A I J)\n 3. dim_col (mat_delete (submatrix A (insert a I) (insert b J)) a' b') =\n    dim_col (submatrix A I J)", "show \"dim_row ?lhs = dim_row ?rhs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row (mat_delete (submatrix A (insert a I) (insert b J)) a' b') =\n    dim_row (submatrix A I J)", "unfolding mat_delete_dim"], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row (submatrix A (insert a I) (insert b J)) - 1 =\n    dim_row (submatrix A I J)", "unfolding dim_submatrix"], ["proof (prove)\ngoal (1 subgoal):\n 1. card {i. i < dim_row A \\<and> i \\<in> insert a I} - 1 =\n    card {i. i < dim_row A \\<and> i \\<in> I}", "using card_Suc_k I_eq Ik"], ["proof (prove)\nusing this:\n  card {i. i < dim_row A \\<and> i \\<in> insert a I} = Suc k\n  I = {i. i < dim_row A \\<and> i \\<in> I}\n  card I = k\n\ngoal (1 subgoal):\n 1. card {i. i < dim_row A \\<and> i \\<in> insert a I} - 1 =\n    card {i. i < dim_row A \\<and> i \\<in> I}", "by auto"], ["proof (state)\nthis:\n  dim_row (mat_delete (submatrix A (insert a I) (insert b J)) a' b') =\n  dim_row (submatrix A I J)\n\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (submatrix A I J);\n        j < dim_col (submatrix A I J)\\<rbrakk>\n       \\<Longrightarrow> mat_delete (submatrix A (insert a I) (insert b J))\n                          a' b' $$\n                         (i, j) =\n                         submatrix A I J $$ (i, j)\n 2. dim_col (mat_delete (submatrix A (insert a I) (insert b J)) a' b') =\n    dim_col (submatrix A I J)", "show \"dim_col ?lhs = dim_col ?rhs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col (mat_delete (submatrix A (insert a I) (insert b J)) a' b') =\n    dim_col (submatrix A I J)", "unfolding mat_delete_dim"], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col (submatrix A (insert a I) (insert b J)) - 1 =\n    dim_col (submatrix A I J)", "unfolding dim_submatrix"], ["proof (prove)\ngoal (1 subgoal):\n 1. card {j. j < dim_col A \\<and> j \\<in> insert b J} - 1 =\n    card {j. j < dim_col A \\<and> j \\<in> J}", "using card_Suc_k' J_eq Jk"], ["proof (prove)\nusing this:\n  card {i. i < dim_col A \\<and> i \\<in> insert b J} = Suc k\n  J = {i. i < dim_col A \\<and> i \\<in> J}\n  card J = k\n\ngoal (1 subgoal):\n 1. card {j. j < dim_col A \\<and> j \\<in> insert b J} - 1 =\n    card {j. j < dim_col A \\<and> j \\<in> J}", "by auto"], ["proof (state)\nthis:\n  dim_col (mat_delete (submatrix A (insert a I) (insert b J)) a' b') =\n  dim_col (submatrix A I J)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (submatrix A I J);\n        j < dim_col (submatrix A I J)\\<rbrakk>\n       \\<Longrightarrow> mat_delete (submatrix A (insert a I) (insert b J))\n                          a' b' $$\n                         (i, j) =\n                         submatrix A I J $$ (i, j)", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (submatrix A I J);\n        j < dim_col (submatrix A I J)\\<rbrakk>\n       \\<Longrightarrow> mat_delete (submatrix A (insert a I) (insert b J))\n                          a' b' $$\n                         (i, j) =\n                         submatrix A I J $$ (i, j)", "assume i: \"i < dim_row (submatrix A I J)\"\n    and j: \"j < dim_col (submatrix A I J)\""], ["proof (state)\nthis:\n  i < dim_row (submatrix A I J)\n  j < dim_col (submatrix A I J)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (submatrix A I J);\n        j < dim_col (submatrix A I J)\\<rbrakk>\n       \\<Longrightarrow> mat_delete (submatrix A (insert a I) (insert b J))\n                          a' b' $$\n                         (i, j) =\n                         submatrix A I J $$ (i, j)", "have ik: \"i < k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < k", "by (metis I_eq Ik dim_submatrix(1) i)"], ["proof (state)\nthis:\n  i < k\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (submatrix A I J);\n        j < dim_col (submatrix A I J)\\<rbrakk>\n       \\<Longrightarrow> mat_delete (submatrix A (insert a I) (insert b J))\n                          a' b' $$\n                         (i, j) =\n                         submatrix A I J $$ (i, j)", "have jk: \"j < k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j < k", "by (metis J_eq Jk dim_submatrix(2) j)"], ["proof (state)\nthis:\n  j < k\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (submatrix A I J);\n        j < dim_col (submatrix A I J)\\<rbrakk>\n       \\<Longrightarrow> mat_delete (submatrix A (insert a I) (insert b J))\n                          a' b' $$\n                         (i, j) =\n                         submatrix A I J $$ (i, j)", "show \"?lhs $$ (i, j) = ?rhs $$ (i, j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mat_delete (submatrix A (insert a I) (insert b J)) a' b' $$ (i, j) =\n    submatrix A I J $$ (i, j)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. mat_delete (submatrix A (insert a I) (insert b J)) a' b' $$ (i, j) =\n    submatrix A I J $$ (i, j)", "have index_eq1: \"pick (insert a I) (insert_index a' i) = pick I i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pick (insert a I) (insert_index a' i) = pick I i", "by (rule pick_insert_index[OF Ik a_notin_I ik a_def], simp add: Ik a'k)"], ["proof (state)\nthis:\n  pick (insert a I) (insert_index a' i) = pick I i\n\ngoal (1 subgoal):\n 1. mat_delete (submatrix A (insert a I) (insert b J)) a' b' $$ (i, j) =\n    submatrix A I J $$ (i, j)", "have index_eq2: \"pick (insert b J) (insert_index b' j) = pick J j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pick (insert b J) (insert_index b' j) = pick J j", "by (rule pick_insert_index[OF Jk b_notin_J jk b_def], simp add: Jk b'k)"], ["proof (state)\nthis:\n  pick (insert b J) (insert_index b' j) = pick J j\n\ngoal (1 subgoal):\n 1. mat_delete (submatrix A (insert a I) (insert b J)) a' b' $$ (i, j) =\n    submatrix A I J $$ (i, j)", "have \"?lhs $$ (i,j)\n        = (submatrix A (insert a I) (insert b J)) $$ (insert_index a' i, insert_index b' j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mat_delete (submatrix A (insert a I) (insert b J)) a' b' $$ (i, j) =\n    submatrix A (insert a I) (insert b J) $$\n    (insert_index a' i, insert_index b' j)", "proof (rule mat_delete_index[symmetric, OF _ a'k b'k ik jk])"], ["proof (state)\ngoal (1 subgoal):\n 1. submatrix A (insert a I) (insert b J) \\<in> carrier_mat (Suc k) (Suc k)", "show \"submatrix A (insert a I) (insert b J) \\<in> carrier_mat (Suc k) (Suc k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix A (insert a I) (insert b J) \\<in> carrier_mat (Suc k) (Suc k)", "by (metis card_Suc_k card_Suc_k' carrier_matI dim_submatrix(1) dim_submatrix(2))"], ["proof (state)\nthis:\n  submatrix A (insert a I) (insert b J) \\<in> carrier_mat (Suc k) (Suc k)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  mat_delete (submatrix A (insert a I) (insert b J)) a' b' $$ (i, j) =\n  submatrix A (insert a I) (insert b J) $$\n  (insert_index a' i, insert_index b' j)\n\ngoal (1 subgoal):\n 1. mat_delete (submatrix A (insert a I) (insert b J)) a' b' $$ (i, j) =\n    submatrix A I J $$ (i, j)", "also"], ["proof (state)\nthis:\n  mat_delete (submatrix A (insert a I) (insert b J)) a' b' $$ (i, j) =\n  submatrix A (insert a I) (insert b J) $$\n  (insert_index a' i, insert_index b' j)\n\ngoal (1 subgoal):\n 1. mat_delete (submatrix A (insert a I) (insert b J)) a' b' $$ (i, j) =\n    submatrix A I J $$ (i, j)", "have \"... = A $$ (pick (insert a I) (insert_index a' i), pick (insert b J) (insert_index b' j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix A (insert a I) (insert b J) $$\n    (insert_index a' i, insert_index b' j) =\n    A $$\n    (pick (insert a I) (insert_index a' i),\n     pick (insert b J) (insert_index b' j))", "proof (rule submatrix_index)"], ["proof (state)\ngoal (2 subgoals):\n 1. insert_index a' i < card {i. i < dim_row A \\<and> i \\<in> insert a I}\n 2. insert_index b' j < card {j. j < dim_col A \\<and> j \\<in> insert b J}", "show \"insert_index a' i < card {i. i < dim_row A \\<and> i \\<in> insert a I}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert_index a' i < card {i. i < dim_row A \\<and> i \\<in> insert a I}", "using card_Suc_k ik insert_index_def"], ["proof (prove)\nusing this:\n  card {i. i < dim_row A \\<and> i \\<in> insert a I} = Suc k\n  i < k\n  insert_index ?i \\<equiv> \\<lambda>i'. if i' < ?i then i' else Suc i'\n\ngoal (1 subgoal):\n 1. insert_index a' i < card {i. i < dim_row A \\<and> i \\<in> insert a I}", "by auto"], ["proof (state)\nthis:\n  insert_index a' i < card {i. i < dim_row A \\<and> i \\<in> insert a I}\n\ngoal (1 subgoal):\n 1. insert_index b' j < card {j. j < dim_col A \\<and> j \\<in> insert b J}", "show \"insert_index b' j < card {j. j < dim_col A \\<and> j \\<in> insert b J}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert_index b' j < card {j. j < dim_col A \\<and> j \\<in> insert b J}", "using card_Suc_k' insert_index_def jk"], ["proof (prove)\nusing this:\n  card {i. i < dim_col A \\<and> i \\<in> insert b J} = Suc k\n  insert_index ?i \\<equiv> \\<lambda>i'. if i' < ?i then i' else Suc i'\n  j < k\n\ngoal (1 subgoal):\n 1. insert_index b' j < card {j. j < dim_col A \\<and> j \\<in> insert b J}", "by auto"], ["proof (state)\nthis:\n  insert_index b' j < card {j. j < dim_col A \\<and> j \\<in> insert b J}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  submatrix A (insert a I) (insert b J) $$\n  (insert_index a' i, insert_index b' j) =\n  A $$\n  (pick (insert a I) (insert_index a' i),\n   pick (insert b J) (insert_index b' j))\n\ngoal (1 subgoal):\n 1. mat_delete (submatrix A (insert a I) (insert b J)) a' b' $$ (i, j) =\n    submatrix A I J $$ (i, j)", "also"], ["proof (state)\nthis:\n  submatrix A (insert a I) (insert b J) $$\n  (insert_index a' i, insert_index b' j) =\n  A $$\n  (pick (insert a I) (insert_index a' i),\n   pick (insert b J) (insert_index b' j))\n\ngoal (1 subgoal):\n 1. mat_delete (submatrix A (insert a I) (insert b J)) a' b' $$ (i, j) =\n    submatrix A I J $$ (i, j)", "have \"... = A $$ (pick I i, pick J j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A $$\n    (pick (insert a I) (insert_index a' i),\n     pick (insert b J) (insert_index b' j)) =\n    A $$ (pick I i, pick J j)", "unfolding index_eq1 index_eq2"], ["proof (prove)\ngoal (1 subgoal):\n 1. A $$ (pick I i, pick J j) = A $$ (pick I i, pick J j)", "by auto"], ["proof (state)\nthis:\n  A $$\n  (pick (insert a I) (insert_index a' i),\n   pick (insert b J) (insert_index b' j)) =\n  A $$ (pick I i, pick J j)\n\ngoal (1 subgoal):\n 1. mat_delete (submatrix A (insert a I) (insert b J)) a' b' $$ (i, j) =\n    submatrix A I J $$ (i, j)", "also"], ["proof (state)\nthis:\n  A $$\n  (pick (insert a I) (insert_index a' i),\n   pick (insert b J) (insert_index b' j)) =\n  A $$ (pick I i, pick J j)\n\ngoal (1 subgoal):\n 1. mat_delete (submatrix A (insert a I) (insert b J)) a' b' $$ (i, j) =\n    submatrix A I J $$ (i, j)", "have \"... = submatrix A I J $$ (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A $$ (pick I i, pick J j) = submatrix A I J $$ (i, j)", "by (rule submatrix_index[symmetric], insert ik I_eq Ik Jk J_eq jk, auto)"], ["proof (state)\nthis:\n  A $$ (pick I i, pick J j) = submatrix A I J $$ (i, j)\n\ngoal (1 subgoal):\n 1. mat_delete (submatrix A (insert a I) (insert b J)) a' b' $$ (i, j) =\n    submatrix A I J $$ (i, j)", "finally"], ["proof (chain)\npicking this:\n  mat_delete (submatrix A (insert a I) (insert b J)) a' b' $$ (i, j) =\n  submatrix A I J $$ (i, j)", "show ?thesis"], ["proof (prove)\nusing this:\n  mat_delete (submatrix A (insert a I) (insert b J)) a' b' $$ (i, j) =\n  submatrix A I J $$ (i, j)\n\ngoal (1 subgoal):\n 1. mat_delete (submatrix A (insert a I) (insert b J)) a' b' $$ (i, j) =\n    submatrix A I J $$ (i, j)", "."], ["proof (state)\nthis:\n  mat_delete (submatrix A (insert a I) (insert b J)) a' b' $$ (i, j) =\n  submatrix A I J $$ (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  mat_delete (submatrix A (insert a I) (insert b J)) a' b' $$ (i, j) =\n  submatrix A I J $$ (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>On the minors of a diagonal matrix\\<close>"], ["", "lemma det_minors_diagonal:\n  assumes dA: \"diagonal_mat A\" and A_carrier: \"A \\<in> carrier_mat n m\"\n    and Ik: \"card I = k\" and Jk: \"card J = k\"\n    and r: \"I \\<subseteq> {0..<n}\"\n    and c: \"J \\<subseteq> {0..<m}\" and k: \"k>0\"\n  shows \"det (submatrix A I J) = 0\n  \\<or> (\\<exists>xs. (det (submatrix A I J) = prod_list xs \\<or> det (submatrix A I J) = - prod_list xs)\n  \\<and> set xs \\<subseteq> {A$$(i,i)|i. i<min n m \\<and> A$$(i,i)\\<noteq> 0} \\<and> length xs = k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = k)", "using Ik Jk r c k"], ["proof (prove)\nusing this:\n  card I = k\n  card J = k\n  I \\<subseteq> {0..<n}\n  J \\<subseteq> {0..<m}\n  0 < k\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = k)", "proof (induct k arbitrary: I J)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>I J.\n       \\<lbrakk>card I = 0; card J = 0; I \\<subseteq> {0..<n};\n        J \\<subseteq> {0..<m}; 0 < 0\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (submatrix A I J) = (0::'a) \\<or>\n                         (\\<exists>xs.\n                             (Determinant.det (submatrix A I J) =\n                              prod_list xs \\<or>\n                              Determinant.det (submatrix A I J) =\n                              - prod_list xs) \\<and>\n                             set xs\n                             \\<subseteq> {A $$ (i, i) |i.\n    i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n                             length xs = 0)\n 2. \\<And>k I J.\n       \\<lbrakk>\\<And>I J.\n                   \\<lbrakk>card I = k; card J = k; I \\<subseteq> {0..<n};\n                    J \\<subseteq> {0..<m}; 0 < k\\<rbrakk>\n                   \\<Longrightarrow> Determinant.det (submatrix A I J) =\n                                     (0::'a) \\<or>\n                                     (\\<exists>xs.\n   (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n    Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n   set xs\n   \\<subseteq> {A $$ (i, i) |i.\n                i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n   length xs = k);\n        card I = Suc k; card J = Suc k; I \\<subseteq> {0..<n};\n        J \\<subseteq> {0..<m}; 0 < Suc k\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (submatrix A I J) = (0::'a) \\<or>\n                         (\\<exists>xs.\n                             (Determinant.det (submatrix A I J) =\n                              prod_list xs \\<or>\n                              Determinant.det (submatrix A I J) =\n                              - prod_list xs) \\<and>\n                             set xs\n                             \\<subseteq> {A $$ (i, i) |i.\n    i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n                             length xs = Suc k)", "case 0"], ["proof (state)\nthis:\n  card I = 0\n  card J = 0\n  I \\<subseteq> {0..<n}\n  J \\<subseteq> {0..<m}\n  0 < 0\n\ngoal (2 subgoals):\n 1. \\<And>I J.\n       \\<lbrakk>card I = 0; card J = 0; I \\<subseteq> {0..<n};\n        J \\<subseteq> {0..<m}; 0 < 0\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (submatrix A I J) = (0::'a) \\<or>\n                         (\\<exists>xs.\n                             (Determinant.det (submatrix A I J) =\n                              prod_list xs \\<or>\n                              Determinant.det (submatrix A I J) =\n                              - prod_list xs) \\<and>\n                             set xs\n                             \\<subseteq> {A $$ (i, i) |i.\n    i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n                             length xs = 0)\n 2. \\<And>k I J.\n       \\<lbrakk>\\<And>I J.\n                   \\<lbrakk>card I = k; card J = k; I \\<subseteq> {0..<n};\n                    J \\<subseteq> {0..<m}; 0 < k\\<rbrakk>\n                   \\<Longrightarrow> Determinant.det (submatrix A I J) =\n                                     (0::'a) \\<or>\n                                     (\\<exists>xs.\n   (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n    Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n   set xs\n   \\<subseteq> {A $$ (i, i) |i.\n                i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n   length xs = k);\n        card I = Suc k; card J = Suc k; I \\<subseteq> {0..<n};\n        J \\<subseteq> {0..<m}; 0 < Suc k\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (submatrix A I J) = (0::'a) \\<or>\n                         (\\<exists>xs.\n                             (Determinant.det (submatrix A I J) =\n                              prod_list xs \\<or>\n                              Determinant.det (submatrix A I J) =\n                              - prod_list xs) \\<and>\n                             set xs\n                             \\<subseteq> {A $$ (i, i) |i.\n    i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n                             length xs = Suc k)", "then"], ["proof (chain)\npicking this:\n  card I = 0\n  card J = 0\n  I \\<subseteq> {0..<n}\n  J \\<subseteq> {0..<m}\n  0 < 0", "show ?case"], ["proof (prove)\nusing this:\n  card I = 0\n  card J = 0\n  I \\<subseteq> {0..<n}\n  J \\<subseteq> {0..<m}\n  0 < 0\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = 0)", "by auto"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) = (0::'a) \\<or>\n  (\\<exists>xs.\n      (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n       Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n      set xs\n      \\<subseteq> {A $$ (i, i) |i.\n                   i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n      length xs = 0)\n\ngoal (1 subgoal):\n 1. \\<And>k I J.\n       \\<lbrakk>\\<And>I J.\n                   \\<lbrakk>card I = k; card J = k; I \\<subseteq> {0..<n};\n                    J \\<subseteq> {0..<m}; 0 < k\\<rbrakk>\n                   \\<Longrightarrow> Determinant.det (submatrix A I J) =\n                                     (0::'a) \\<or>\n                                     (\\<exists>xs.\n   (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n    Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n   set xs\n   \\<subseteq> {A $$ (i, i) |i.\n                i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n   length xs = k);\n        card I = Suc k; card J = Suc k; I \\<subseteq> {0..<n};\n        J \\<subseteq> {0..<m}; 0 < Suc k\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (submatrix A I J) = (0::'a) \\<or>\n                         (\\<exists>xs.\n                             (Determinant.det (submatrix A I J) =\n                              prod_list xs \\<or>\n                              Determinant.det (submatrix A I J) =\n                              - prod_list xs) \\<and>\n                             set xs\n                             \\<subseteq> {A $$ (i, i) |i.\n    i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n                             length xs = Suc k)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k I J.\n       \\<lbrakk>\\<And>I J.\n                   \\<lbrakk>card I = k; card J = k; I \\<subseteq> {0..<n};\n                    J \\<subseteq> {0..<m}; 0 < k\\<rbrakk>\n                   \\<Longrightarrow> Determinant.det (submatrix A I J) =\n                                     (0::'a) \\<or>\n                                     (\\<exists>xs.\n   (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n    Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n   set xs\n   \\<subseteq> {A $$ (i, i) |i.\n                i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n   length xs = k);\n        card I = Suc k; card J = Suc k; I \\<subseteq> {0..<n};\n        J \\<subseteq> {0..<m}; 0 < Suc k\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (submatrix A I J) = (0::'a) \\<or>\n                         (\\<exists>xs.\n                             (Determinant.det (submatrix A I J) =\n                              prod_list xs \\<or>\n                              Determinant.det (submatrix A I J) =\n                              - prod_list xs) \\<and>\n                             set xs\n                             \\<subseteq> {A $$ (i, i) |i.\n    i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n                             length xs = Suc k)", "case (Suc k)"], ["proof (state)\nthis:\n  \\<lbrakk>card ?I = k; card ?J = k; ?I \\<subseteq> {0..<n};\n   ?J \\<subseteq> {0..<m}; 0 < k\\<rbrakk>\n  \\<Longrightarrow> Determinant.det (submatrix A ?I ?J) = (0::'a) \\<or>\n                    (\\<exists>xs.\n                        (Determinant.det (submatrix A ?I ?J) =\n                         prod_list xs \\<or>\n                         Determinant.det (submatrix A ?I ?J) =\n                         - prod_list xs) \\<and>\n                        set xs\n                        \\<subseteq> {A $$ (i, i) |i.\n                                     i < min n m \\<and>\n                                     A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n                        length xs = k)\n  card I = Suc k\n  card J = Suc k\n  I \\<subseteq> {0..<n}\n  J \\<subseteq> {0..<m}\n  0 < Suc k\n\ngoal (1 subgoal):\n 1. \\<And>k I J.\n       \\<lbrakk>\\<And>I J.\n                   \\<lbrakk>card I = k; card J = k; I \\<subseteq> {0..<n};\n                    J \\<subseteq> {0..<m}; 0 < k\\<rbrakk>\n                   \\<Longrightarrow> Determinant.det (submatrix A I J) =\n                                     (0::'a) \\<or>\n                                     (\\<exists>xs.\n   (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n    Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n   set xs\n   \\<subseteq> {A $$ (i, i) |i.\n                i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n   length xs = k);\n        card I = Suc k; card J = Suc k; I \\<subseteq> {0..<n};\n        J \\<subseteq> {0..<m}; 0 < Suc k\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (submatrix A I J) = (0::'a) \\<or>\n                         (\\<exists>xs.\n                             (Determinant.det (submatrix A I J) =\n                              prod_list xs \\<or>\n                              Determinant.det (submatrix A I J) =\n                              - prod_list xs) \\<and>\n                             set xs\n                             \\<subseteq> {A $$ (i, i) |i.\n    i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n                             length xs = Suc k)", "note cardI = Suc.prems(1)"], ["proof (state)\nthis:\n  card I = Suc k\n\ngoal (1 subgoal):\n 1. \\<And>k I J.\n       \\<lbrakk>\\<And>I J.\n                   \\<lbrakk>card I = k; card J = k; I \\<subseteq> {0..<n};\n                    J \\<subseteq> {0..<m}; 0 < k\\<rbrakk>\n                   \\<Longrightarrow> Determinant.det (submatrix A I J) =\n                                     (0::'a) \\<or>\n                                     (\\<exists>xs.\n   (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n    Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n   set xs\n   \\<subseteq> {A $$ (i, i) |i.\n                i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n   length xs = k);\n        card I = Suc k; card J = Suc k; I \\<subseteq> {0..<n};\n        J \\<subseteq> {0..<m}; 0 < Suc k\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (submatrix A I J) = (0::'a) \\<or>\n                         (\\<exists>xs.\n                             (Determinant.det (submatrix A I J) =\n                              prod_list xs \\<or>\n                              Determinant.det (submatrix A I J) =\n                              - prod_list xs) \\<and>\n                             set xs\n                             \\<subseteq> {A $$ (i, i) |i.\n    i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n                             length xs = Suc k)", "note cardJ = Suc.prems(2)"], ["proof (state)\nthis:\n  card J = Suc k\n\ngoal (1 subgoal):\n 1. \\<And>k I J.\n       \\<lbrakk>\\<And>I J.\n                   \\<lbrakk>card I = k; card J = k; I \\<subseteq> {0..<n};\n                    J \\<subseteq> {0..<m}; 0 < k\\<rbrakk>\n                   \\<Longrightarrow> Determinant.det (submatrix A I J) =\n                                     (0::'a) \\<or>\n                                     (\\<exists>xs.\n   (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n    Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n   set xs\n   \\<subseteq> {A $$ (i, i) |i.\n                i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n   length xs = k);\n        card I = Suc k; card J = Suc k; I \\<subseteq> {0..<n};\n        J \\<subseteq> {0..<m}; 0 < Suc k\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (submatrix A I J) = (0::'a) \\<or>\n                         (\\<exists>xs.\n                             (Determinant.det (submatrix A I J) =\n                              prod_list xs \\<or>\n                              Determinant.det (submatrix A I J) =\n                              - prod_list xs) \\<and>\n                             set xs\n                             \\<subseteq> {A $$ (i, i) |i.\n    i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n                             length xs = Suc k)", "note I = Suc.prems(3)"], ["proof (state)\nthis:\n  I \\<subseteq> {0..<n}\n\ngoal (1 subgoal):\n 1. \\<And>k I J.\n       \\<lbrakk>\\<And>I J.\n                   \\<lbrakk>card I = k; card J = k; I \\<subseteq> {0..<n};\n                    J \\<subseteq> {0..<m}; 0 < k\\<rbrakk>\n                   \\<Longrightarrow> Determinant.det (submatrix A I J) =\n                                     (0::'a) \\<or>\n                                     (\\<exists>xs.\n   (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n    Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n   set xs\n   \\<subseteq> {A $$ (i, i) |i.\n                i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n   length xs = k);\n        card I = Suc k; card J = Suc k; I \\<subseteq> {0..<n};\n        J \\<subseteq> {0..<m}; 0 < Suc k\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (submatrix A I J) = (0::'a) \\<or>\n                         (\\<exists>xs.\n                             (Determinant.det (submatrix A I J) =\n                              prod_list xs \\<or>\n                              Determinant.det (submatrix A I J) =\n                              - prod_list xs) \\<and>\n                             set xs\n                             \\<subseteq> {A $$ (i, i) |i.\n    i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n                             length xs = Suc k)", "note J = Suc.prems(4)"], ["proof (state)\nthis:\n  J \\<subseteq> {0..<m}\n\ngoal (1 subgoal):\n 1. \\<And>k I J.\n       \\<lbrakk>\\<And>I J.\n                   \\<lbrakk>card I = k; card J = k; I \\<subseteq> {0..<n};\n                    J \\<subseteq> {0..<m}; 0 < k\\<rbrakk>\n                   \\<Longrightarrow> Determinant.det (submatrix A I J) =\n                                     (0::'a) \\<or>\n                                     (\\<exists>xs.\n   (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n    Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n   set xs\n   \\<subseteq> {A $$ (i, i) |i.\n                i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n   length xs = k);\n        card I = Suc k; card J = Suc k; I \\<subseteq> {0..<n};\n        J \\<subseteq> {0..<m}; 0 < Suc k\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (submatrix A I J) = (0::'a) \\<or>\n                         (\\<exists>xs.\n                             (Determinant.det (submatrix A I J) =\n                              prod_list xs \\<or>\n                              Determinant.det (submatrix A I J) =\n                              - prod_list xs) \\<and>\n                             set xs\n                             \\<subseteq> {A $$ (i, i) |i.\n    i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n                             length xs = Suc k)", "have *: \"{i. i < dim_row A \\<and> i \\<in> I} = I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. i < dim_row A \\<and> i \\<in> I} = I", "using I Ik A_carrier carrier_mat_def"], ["proof (prove)\nusing this:\n  I \\<subseteq> {0..<n}\n  card I = k\n  A \\<in> carrier_mat n m\n  carrier_mat ?nr ?nc = {m. dim_row m = ?nr \\<and> dim_col m = ?nc}\n\ngoal (1 subgoal):\n 1. {i. i < dim_row A \\<and> i \\<in> I} = I", "by auto"], ["proof (state)\nthis:\n  {i. i < dim_row A \\<and> i \\<in> I} = I\n\ngoal (1 subgoal):\n 1. \\<And>k I J.\n       \\<lbrakk>\\<And>I J.\n                   \\<lbrakk>card I = k; card J = k; I \\<subseteq> {0..<n};\n                    J \\<subseteq> {0..<m}; 0 < k\\<rbrakk>\n                   \\<Longrightarrow> Determinant.det (submatrix A I J) =\n                                     (0::'a) \\<or>\n                                     (\\<exists>xs.\n   (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n    Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n   set xs\n   \\<subseteq> {A $$ (i, i) |i.\n                i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n   length xs = k);\n        card I = Suc k; card J = Suc k; I \\<subseteq> {0..<n};\n        J \\<subseteq> {0..<m}; 0 < Suc k\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (submatrix A I J) = (0::'a) \\<or>\n                         (\\<exists>xs.\n                             (Determinant.det (submatrix A I J) =\n                              prod_list xs \\<or>\n                              Determinant.det (submatrix A I J) =\n                              - prod_list xs) \\<and>\n                             set xs\n                             \\<subseteq> {A $$ (i, i) |i.\n    i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n                             length xs = Suc k)", "have **: \"{j. j < dim_col A \\<and> j \\<in> J} = J\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {j. j < dim_col A \\<and> j \\<in> J} = J", "using J Jk A_carrier carrier_mat_def"], ["proof (prove)\nusing this:\n  J \\<subseteq> {0..<m}\n  card J = k\n  A \\<in> carrier_mat n m\n  carrier_mat ?nr ?nc = {m. dim_row m = ?nr \\<and> dim_col m = ?nc}\n\ngoal (1 subgoal):\n 1. {j. j < dim_col A \\<and> j \\<in> J} = J", "by auto"], ["proof (state)\nthis:\n  {j. j < dim_col A \\<and> j \\<in> J} = J\n\ngoal (1 subgoal):\n 1. \\<And>k I J.\n       \\<lbrakk>\\<And>I J.\n                   \\<lbrakk>card I = k; card J = k; I \\<subseteq> {0..<n};\n                    J \\<subseteq> {0..<m}; 0 < k\\<rbrakk>\n                   \\<Longrightarrow> Determinant.det (submatrix A I J) =\n                                     (0::'a) \\<or>\n                                     (\\<exists>xs.\n   (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n    Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n   set xs\n   \\<subseteq> {A $$ (i, i) |i.\n                i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n   length xs = k);\n        card I = Suc k; card J = Suc k; I \\<subseteq> {0..<n};\n        J \\<subseteq> {0..<m}; 0 < Suc k\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (submatrix A I J) = (0::'a) \\<or>\n                         (\\<exists>xs.\n                             (Determinant.det (submatrix A I J) =\n                              prod_list xs \\<or>\n                              Determinant.det (submatrix A I J) =\n                              - prod_list xs) \\<and>\n                             set xs\n                             \\<subseteq> {A $$ (i, i) |i.\n    i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n                             length xs = Suc k)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "proof (cases \"k = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. k \\<noteq> 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "case True"], ["proof (state)\nthis:\n  k = 0\n\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. k \\<noteq> 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "note k0 = True"], ["proof (state)\nthis:\n  k = 0\n\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. k \\<noteq> 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "from this"], ["proof (chain)\npicking this:\n  k = 0", "obtain a where aI: \"I = {a}\""], ["proof (prove)\nusing this:\n  k = 0\n\ngoal (1 subgoal):\n 1. (\\<And>a. I = {a} \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using True cardI card_1_singletonE"], ["proof (prove)\nusing this:\n  k = 0\n  k = 0\n  card I = Suc k\n  \\<lbrakk>card ?A = 1; \\<And>x. ?A = {x} \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>a. I = {a} \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  I = {a}\n\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. k \\<noteq> 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "from this"], ["proof (chain)\npicking this:\n  I = {a}", "obtain b where bJ: \"J = {b}\""], ["proof (prove)\nusing this:\n  I = {a}\n\ngoal (1 subgoal):\n 1. (\\<And>b. J = {b} \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using True cardJ card_1_singletonE"], ["proof (prove)\nusing this:\n  I = {a}\n  k = 0\n  card J = Suc k\n  \\<lbrakk>card ?A = 1; \\<And>x. ?A = {x} \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>b. J = {b} \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  J = {b}\n\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. k \\<noteq> 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "have an: \"a<n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a < n", "using aI I"], ["proof (prove)\nusing this:\n  I = {a}\n  I \\<subseteq> {0..<n}\n\ngoal (1 subgoal):\n 1. a < n", "by auto"], ["proof (state)\nthis:\n  a < n\n\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. k \\<noteq> 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "have bm: \"b<m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b < m", "using bJ J"], ["proof (prove)\nusing this:\n  J = {b}\n  J \\<subseteq> {0..<m}\n\ngoal (1 subgoal):\n 1. b < m", "by auto"], ["proof (state)\nthis:\n  b < m\n\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. k \\<noteq> 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "have sub_carrier: \"submatrix A {a} {b} \\<in> carrier_mat 1 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix A {a} {b} \\<in> carrier_mat 1 1", "unfolding carrier_mat_def submatrix_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Matrix.mat (card {i. i < dim_row A \\<and> i \\<in> {a}})\n     (card {j. j < dim_col A \\<and> j \\<in> {b}})\n     (\\<lambda>(i, j). A $$ (pick {a} i, pick {b} j))\n    \\<in> {m. dim_row m = 1 \\<and> dim_col m = 1}", "using * ** aI bJ"], ["proof (prove)\nusing this:\n  {i. i < dim_row A \\<and> i \\<in> I} = I\n  {j. j < dim_col A \\<and> j \\<in> J} = J\n  I = {a}\n  J = {b}\n\ngoal (1 subgoal):\n 1. Matrix.mat (card {i. i < dim_row A \\<and> i \\<in> {a}})\n     (card {j. j < dim_col A \\<and> j \\<in> {b}})\n     (\\<lambda>(i, j). A $$ (pick {a} i, pick {b} j))\n    \\<in> {m. dim_row m = 1 \\<and> dim_col m = 1}", "by auto"], ["proof (state)\nthis:\n  submatrix A {a} {b} \\<in> carrier_mat 1 1\n\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. k \\<noteq> 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "have 1: \"det (submatrix A {a} {b}) = (submatrix A {a} {b}) $$ (0,0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A {a} {b}) = submatrix A {a} {b} $$ (0, 0)", "by (rule det_singleton[OF sub_carrier])"], ["proof (state)\nthis:\n  Determinant.det (submatrix A {a} {b}) = submatrix A {a} {b} $$ (0, 0)\n\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. k \\<noteq> 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "have 2: \"... = A $$ (a,b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix A {a} {b} $$ (0, 0) = A $$ (a, b)", "by (rule submatrix_singleton_index[OF A_carrier an bm])"], ["proof (state)\nthis:\n  submatrix A {a} {b} $$ (0, 0) = A $$ (a, b)\n\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. k \\<noteq> 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "proof (cases \"A $$ (a,b) \\<noteq> 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. A $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. \\<not> A $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "let ?xs = \"[submatrix A {a} {b} $$ (0,0)]\""], ["proof (state)\ngoal (2 subgoals):\n 1. A $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. \\<not> A $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "case True"], ["proof (state)\nthis:\n  A $$ (a, b) \\<noteq> (0::'a)\n\ngoal (2 subgoals):\n 1. A $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. \\<not> A $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "hence \"a = b\""], ["proof (prove)\nusing this:\n  A $$ (a, b) \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. a = b", "using dA A_carrier an bm"], ["proof (prove)\nusing this:\n  A $$ (a, b) \\<noteq> (0::'a)\n  diagonal_mat A\n  A \\<in> carrier_mat n m\n  a < n\n  b < m\n\ngoal (1 subgoal):\n 1. a = b", "unfolding diagonal_mat_def carrier_mat_def"], ["proof (prove)\nusing this:\n  A $$ (a, b) \\<noteq> (0::'a)\n  \\<forall>i<dim_row A.\n     \\<forall>j<dim_col A.\n        i \\<noteq> j \\<longrightarrow> A $$ (i, j) = (0::'a)\n  A \\<in> {ma. dim_row ma = n \\<and> dim_col ma = m}\n  a < n\n  b < m\n\ngoal (1 subgoal):\n 1. a = b", "by auto"], ["proof (state)\nthis:\n  a = b\n\ngoal (2 subgoals):\n 1. A $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. \\<not> A $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "hence \"set ?xs \\<subseteq> {A $$ (i, i) |i. i < min n m \\<and> A $$ (i, i) \\<noteq> 0}\""], ["proof (prove)\nusing this:\n  a = b\n\ngoal (1 subgoal):\n 1. set [submatrix A {a} {b} $$ (0, 0)]\n    \\<subseteq> {A $$ (i, i) |i.\n                 i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)}", "using 2 True an bm"], ["proof (prove)\nusing this:\n  a = b\n  submatrix A {a} {b} $$ (0, 0) = A $$ (a, b)\n  A $$ (a, b) \\<noteq> (0::'a)\n  a < n\n  b < m\n\ngoal (1 subgoal):\n 1. set [submatrix A {a} {b} $$ (0, 0)]\n    \\<subseteq> {A $$ (i, i) |i.\n                 i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)}", "by auto"], ["proof (state)\nthis:\n  set [submatrix A {a} {b} $$ (0, 0)]\n  \\<subseteq> {A $$ (i, i) |i.\n               i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)}\n\ngoal (2 subgoals):\n 1. A $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. \\<not> A $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "moreover"], ["proof (state)\nthis:\n  set [submatrix A {a} {b} $$ (0, 0)]\n  \\<subseteq> {A $$ (i, i) |i.\n               i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)}\n\ngoal (2 subgoals):\n 1. A $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. \\<not> A $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "have \"det (submatrix A {a} {b}) = prod_list ?xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A {a} {b}) =\n    prod_list [submatrix A {a} {b} $$ (0, 0)]", "using 1"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A {a} {b}) = submatrix A {a} {b} $$ (0, 0)\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A {a} {b}) =\n    prod_list [submatrix A {a} {b} $$ (0, 0)]", "by auto"], ["proof (state)\nthis:\n  Determinant.det (submatrix A {a} {b}) =\n  prod_list [submatrix A {a} {b} $$ (0, 0)]\n\ngoal (2 subgoals):\n 1. A $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. \\<not> A $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "moreover"], ["proof (state)\nthis:\n  Determinant.det (submatrix A {a} {b}) =\n  prod_list [submatrix A {a} {b} $$ (0, 0)]\n\ngoal (2 subgoals):\n 1. A $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. \\<not> A $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "have \"length ?xs = Suc k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length [submatrix A {a} {b} $$ (0, 0)] = Suc k", "using k0"], ["proof (prove)\nusing this:\n  k = 0\n\ngoal (1 subgoal):\n 1. length [submatrix A {a} {b} $$ (0, 0)] = Suc k", "by auto"], ["proof (state)\nthis:\n  length [submatrix A {a} {b} $$ (0, 0)] = Suc k\n\ngoal (2 subgoals):\n 1. A $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. \\<not> A $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "ultimately"], ["proof (chain)\npicking this:\n  set [submatrix A {a} {b} $$ (0, 0)]\n  \\<subseteq> {A $$ (i, i) |i.\n               i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)}\n  Determinant.det (submatrix A {a} {b}) =\n  prod_list [submatrix A {a} {b} $$ (0, 0)]\n  length [submatrix A {a} {b} $$ (0, 0)] = Suc k", "show ?thesis"], ["proof (prove)\nusing this:\n  set [submatrix A {a} {b} $$ (0, 0)]\n  \\<subseteq> {A $$ (i, i) |i.\n               i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)}\n  Determinant.det (submatrix A {a} {b}) =\n  prod_list [submatrix A {a} {b} $$ (0, 0)]\n  length [submatrix A {a} {b} $$ (0, 0)] = Suc k\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "using an bm"], ["proof (prove)\nusing this:\n  set [submatrix A {a} {b} $$ (0, 0)]\n  \\<subseteq> {A $$ (i, i) |i.\n               i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)}\n  Determinant.det (submatrix A {a} {b}) =\n  prod_list [submatrix A {a} {b} $$ (0, 0)]\n  length [submatrix A {a} {b} $$ (0, 0)] = Suc k\n  a < n\n  b < m\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "unfolding aI bJ"], ["proof (prove)\nusing this:\n  set [submatrix A {a} {b} $$ (0, 0)]\n  \\<subseteq> {A $$ (i, i) |i.\n               i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)}\n  Determinant.det (submatrix A {a} {b}) =\n  prod_list [submatrix A {a} {b} $$ (0, 0)]\n  length [submatrix A {a} {b} $$ (0, 0)] = Suc k\n  a < n\n  b < m\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A {a} {b}) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A {a} {b}) = prod_list xs \\<or>\n         Determinant.det (submatrix A {a} {b}) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "by blast"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) = (0::'a) \\<or>\n  (\\<exists>xs.\n      (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n       Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n      set xs\n      \\<subseteq> {A $$ (i, i) |i.\n                   i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n      length xs = Suc k)\n\ngoal (1 subgoal):\n 1. \\<not> A $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> A $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "case False"], ["proof (state)\nthis:\n  \\<not> A $$ (a, b) \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> A $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "then"], ["proof (chain)\npicking this:\n  \\<not> A $$ (a, b) \\<noteq> (0::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> A $$ (a, b) \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "using 1 2 aI bJ"], ["proof (prove)\nusing this:\n  \\<not> A $$ (a, b) \\<noteq> (0::'a)\n  Determinant.det (submatrix A {a} {b}) = submatrix A {a} {b} $$ (0, 0)\n  submatrix A {a} {b} $$ (0, 0) = A $$ (a, b)\n  I = {a}\n  J = {b}\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "by auto"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) = (0::'a) \\<or>\n  (\\<exists>xs.\n      (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n       Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n      set xs\n      \\<subseteq> {A $$ (i, i) |i.\n                   i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n      length xs = Suc k)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) = (0::'a) \\<or>\n  (\\<exists>xs.\n      (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n       Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n      set xs\n      \\<subseteq> {A $$ (i, i) |i.\n                   i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n      length xs = Suc k)\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "case False"], ["proof (state)\nthis:\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "hence k0: \"0 < k\""], ["proof (prove)\nusing this:\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < k", "by simp"], ["proof (state)\nthis:\n  0 < k\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "have k: \"k < min n m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k < min n m", "by (metis I J cardI cardJ le_imp_less_Suc less_Suc_eq_le min.commute\n          min_def not_less subset_eq_atLeast0_lessThan_card)"], ["proof (state)\nthis:\n  k < min n m\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "have subIJ_carrier: \"(submatrix A I J) \\<in> carrier_mat (Suc k) (Suc k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix A I J \\<in> carrier_mat (Suc k) (Suc k)", "unfolding carrier_mat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix A I J \\<in> {m. dim_row m = Suc k \\<and> dim_col m = Suc k}", "using * ** cardI cardJ"], ["proof (prove)\nusing this:\n  {i. i < dim_row A \\<and> i \\<in> I} = I\n  {j. j < dim_col A \\<and> j \\<in> J} = J\n  card I = Suc k\n  card J = Suc k\n\ngoal (1 subgoal):\n 1. submatrix A I J \\<in> {m. dim_row m = Suc k \\<and> dim_col m = Suc k}", "unfolding submatrix_def"], ["proof (prove)\nusing this:\n  {i. i < dim_row A \\<and> i \\<in> I} = I\n  {j. j < dim_col A \\<and> j \\<in> J} = J\n  card I = Suc k\n  card J = Suc k\n\ngoal (1 subgoal):\n 1. Matrix.mat (card {i. i < dim_row A \\<and> i \\<in> I})\n     (card {j. j < dim_col A \\<and> j \\<in> J})\n     (\\<lambda>(i, j). A $$ (pick I i, pick J j))\n    \\<in> {m. dim_row m = Suc k \\<and> dim_col m = Suc k}", "by auto"], ["proof (state)\nthis:\n  submatrix A I J \\<in> carrier_mat (Suc k) (Suc k)\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "obtain b' where b'k: \"b' < Suc k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>b'. b' < Suc k \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  b' < Suc k\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "let ?f=\"\\<lambda>i. submatrix A I J $$ (i, b') * cofactor (submatrix A I J) i b'\""], ["proof (state)\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "have det_rw: \"det (submatrix A I J)\n        = (\\<Sum>i<Suc k. submatrix A I J $$ (i, b') * cofactor (submatrix A I J) i b')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) =\n    (\\<Sum>i<Suc k.\n        submatrix A I J $$ (i, b') *\n        Determinant.cofactor (submatrix A I J) i b')", "by (rule laplace_expansion_column[OF subIJ_carrier b'k])"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) =\n  (\\<Sum>i<Suc k.\n      submatrix A I J $$ (i, b') *\n      Determinant.cofactor (submatrix A I J) i b')\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "proof (cases \"\\<exists>a'<Suc k. submatrix A I J $$ (a',b') \\<noteq> 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "case True"], ["proof (state)\nthis:\n  \\<exists>a'<Suc k. submatrix A I J $$ (a', b') \\<noteq> (0::'a)\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "obtain a' where sub_IJ_0: \"submatrix A I J $$ (a',b') \\<noteq> 0\"\n        and a'k: \"a' < Suc k\"\n        and unique: \"\\<forall>j. j<Suc k \\<and> submatrix A I J $$ (j,b') \\<noteq> 0 \\<longrightarrow> j = a'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a'.\n        \\<lbrakk>submatrix A I J $$ (a', b') \\<noteq> (0::'a); a' < Suc k;\n         \\<forall>j.\n            j < Suc k \\<and>\n            submatrix A I J $$ (j, b') \\<noteq> (0::'a) \\<longrightarrow>\n            j = a'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using diagonal_imp_submatrix_element_not0[OF dA A_carrier cardI cardJ I J b'k True]"], ["proof (prove)\nusing this:\n  \\<exists>!i. i < Suc k \\<and> submatrix A I J $$ (i, b') \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<And>a'.\n        \\<lbrakk>submatrix A I J $$ (a', b') \\<noteq> (0::'a); a' < Suc k;\n         \\<forall>j.\n            j < Suc k \\<and>\n            submatrix A I J $$ (j, b') \\<noteq> (0::'a) \\<longrightarrow>\n            j = a'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  submatrix A I J $$ (a', b') \\<noteq> (0::'a)\n  a' < Suc k\n  \\<forall>j.\n     j < Suc k \\<and>\n     submatrix A I J $$ (j, b') \\<noteq> (0::'a) \\<longrightarrow>\n     j = a'\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "have \"submatrix A I J $$ (a', b') = A $$ (pick I a', pick J b')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix A I J $$ (a', b') = A $$ (pick I a', pick J b')", "by (rule submatrix_index, auto simp add: \"*\" a'k cardI \"**\" b'k cardJ)"], ["proof (state)\nthis:\n  submatrix A I J $$ (a', b') = A $$ (pick I a', pick J b')\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "from this"], ["proof (chain)\npicking this:\n  submatrix A I J $$ (a', b') = A $$ (pick I a', pick J b')", "obtain a b where an: \"a < n\" and bm:  \"b < m\"\n        and sub_index: \"submatrix A I J $$ (a', b') = A $$ (a, b)\"\n        and pick_a: \"pick I a' = a\" and pick_b: \"pick J b' = b\""], ["proof (prove)\nusing this:\n  submatrix A I J $$ (a', b') = A $$ (pick I a', pick J b')\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        \\<lbrakk>a < n; b < m; submatrix A I J $$ (a', b') = A $$ (a, b);\n         pick I a' = a; pick J b' = b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using * ** A_carrier a'k b'k cardI cardJ pick_le"], ["proof (prove)\nusing this:\n  submatrix A I J $$ (a', b') = A $$ (pick I a', pick J b')\n  {i. i < dim_row A \\<and> i \\<in> I} = I\n  {j. j < dim_col A \\<and> j \\<in> J} = J\n  A \\<in> carrier_mat n m\n  a' < Suc k\n  b' < Suc k\n  card I = Suc k\n  card J = Suc k\n  ?n < card {a. a < ?i \\<and> a \\<in> ?S} \\<Longrightarrow> pick ?S ?n < ?i\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        \\<lbrakk>a < n; b < m; submatrix A I J $$ (a', b') = A $$ (a, b);\n         pick I a' = a; pick J b' = b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  a < n\n  b < m\n  submatrix A I J $$ (a', b') = A $$ (a, b)\n  pick I a' = a\n  pick J b' = b\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "obtain I' where aI': \"I = insert a I'\" and a_notin: \"a \\<notin> I'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>I'.\n        \\<lbrakk>I = insert a I'; a \\<notin> I'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis Set.set_insert a'k cardI pick_a pick_in_set_le)"], ["proof (state)\nthis:\n  I = insert a I'\n  a \\<notin> I'\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "obtain J' where bJ': \"J = insert b J'\" and b_notin: \"b \\<notin> J'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>J'.\n        \\<lbrakk>J = insert b J'; b \\<notin> J'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis Set.set_insert b'k cardJ pick_b pick_in_set_le)"], ["proof (state)\nthis:\n  J = insert b J'\n  b \\<notin> J'\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "have Suc_k0: \"0 < Suc k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < Suc k", "by simp"], ["proof (state)\nthis:\n  0 < Suc k\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "have aI: \"a \\<in> I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> I", "using aI'"], ["proof (prove)\nusing this:\n  I = insert a I'\n\ngoal (1 subgoal):\n 1. a \\<in> I", "by auto"], ["proof (state)\nthis:\n  a \\<in> I\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "have bJ: \"b \\<in> J\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<in> J", "using bJ'"], ["proof (prove)\nusing this:\n  J = insert b J'\n\ngoal (1 subgoal):\n 1. b \\<in> J", "by auto"], ["proof (state)\nthis:\n  b \\<in> J\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "have cardI':  \"card I' = k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card I' = k", "by (metis aI' a_notin cardI card.infinite card_insert_disjoint\n            finite_insert nat.inject nat.simps(3))"], ["proof (state)\nthis:\n  card I' = k\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "have cardJ':  \"card J' = k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card J' = k", "by (metis bJ' b_notin cardJ card.infinite card_insert_disjoint\n            finite_insert nat.inject nat.simps(3))"], ["proof (state)\nthis:\n  card J' = k\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "have I': \"I' \\<subseteq> {0..<n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I' \\<subseteq> {0..<n}", "using I aI'"], ["proof (prove)\nusing this:\n  I \\<subseteq> {0..<n}\n  I = insert a I'\n\ngoal (1 subgoal):\n 1. I' \\<subseteq> {0..<n}", "by blast"], ["proof (state)\nthis:\n  I' \\<subseteq> {0..<n}\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "have J': \"J' \\<subseteq> {0..<m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. J' \\<subseteq> {0..<m}", "using J bJ'"], ["proof (prove)\nusing this:\n  J \\<subseteq> {0..<m}\n  J = insert b J'\n\ngoal (1 subgoal):\n 1. J' \\<subseteq> {0..<m}", "by blast"], ["proof (state)\nthis:\n  J' \\<subseteq> {0..<m}\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "have det_sub_I'J': \"Determinant.det (submatrix A I' J') = 0 \\<or>\n      (\\<exists>xs. (det (submatrix A I' J') = prod_list xs \\<or> det (submatrix A I' J') = - prod_list xs)\n      \\<and> set xs \\<subseteq> {A $$ (i, i) |i. i < min n m \\<and> A $$ (i, i) \\<noteq> 0} \\<and> length xs = k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I' J') = prod_list xs \\<or>\n         Determinant.det (submatrix A I' J') = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = k)", "proof (rule Suc.hyps[OF cardI' cardJ' _ _ k0])"], ["proof (state)\ngoal (2 subgoals):\n 1. I' \\<subseteq> {0..<n}\n 2. J' \\<subseteq> {0..<m}", "show \"I' \\<subseteq> {0..<n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I' \\<subseteq> {0..<n}", "using I aI'"], ["proof (prove)\nusing this:\n  I \\<subseteq> {0..<n}\n  I = insert a I'\n\ngoal (1 subgoal):\n 1. I' \\<subseteq> {0..<n}", "by blast"], ["proof (state)\nthis:\n  I' \\<subseteq> {0..<n}\n\ngoal (1 subgoal):\n 1. J' \\<subseteq> {0..<m}", "show \"J' \\<subseteq> {0..<m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. J' \\<subseteq> {0..<m}", "using J bJ'"], ["proof (prove)\nusing this:\n  J \\<subseteq> {0..<m}\n  J = insert b J'\n\ngoal (1 subgoal):\n 1. J' \\<subseteq> {0..<m}", "by blast"], ["proof (state)\nthis:\n  J' \\<subseteq> {0..<m}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I' J') = (0::'a) \\<or>\n  (\\<exists>xs.\n      (Determinant.det (submatrix A I' J') = prod_list xs \\<or>\n       Determinant.det (submatrix A I' J') = - prod_list xs) \\<and>\n      set xs\n      \\<subseteq> {A $$ (i, i) |i.\n                   i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n      length xs = k)\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "have mat_delete_sub:\n        \"mat_delete (submatrix A (insert a I') (insert b J')) a' b' = submatrix A I' J'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mat_delete (submatrix A (insert a I') (insert b J')) a' b' =\n    submatrix A I' J'", "by (rule mat_delete_submatrix_insert[OF A_carrier cardI' cardJ' I' J' an bm k\n              a_notin b_notin a'k b'k],insert pick_a pick_b aI' bJ', auto)"], ["proof (state)\nthis:\n  mat_delete (submatrix A (insert a I') (insert b J')) a' b' =\n  submatrix A I' J'\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "have set_rw: \"{0..<Suc k} = insert a' ({0..<Suc k}-{a'})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {0..<Suc k} = insert a' ({0..<Suc k} - {a'})", "by (simp add: a'k insert_absorb)"], ["proof (state)\nthis:\n  {0..<Suc k} = insert a' ({0..<Suc k} - {a'})\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "have rw0: \"sum ?f ({0..<Suc k}-{a'}) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{0..<Suc k} - {a'}.\n       submatrix A I J $$ (i, b') *\n       Determinant.cofactor (submatrix A I J) i b') =\n    (0::'a)", "by (rule sum.neutral, insert unique, auto)"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{0..<Suc k} - {a'}.\n     submatrix A I J $$ (i, b') *\n     Determinant.cofactor (submatrix A I J) i b') =\n  (0::'a)\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "have \"det (submatrix A I J)\n        = (\\<Sum>i<Suc k. submatrix A I J $$ (i, b') * cofactor (submatrix A I J) i b')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) =\n    (\\<Sum>i<Suc k.\n        submatrix A I J $$ (i, b') *\n        Determinant.cofactor (submatrix A I J) i b')", "by (rule laplace_expansion_column[OF subIJ_carrier b'k])"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) =\n  (\\<Sum>i<Suc k.\n      submatrix A I J $$ (i, b') *\n      Determinant.cofactor (submatrix A I J) i b')\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "also"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) =\n  (\\<Sum>i<Suc k.\n      submatrix A I J $$ (i, b') *\n      Determinant.cofactor (submatrix A I J) i b')\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "have \"... = ?f a' + sum ?f ({0..<Suc k}-{a'})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<Suc k.\n        submatrix A I J $$ (i, b') *\n        Determinant.cofactor (submatrix A I J) i b') =\n    submatrix A I J $$ (a', b') *\n    Determinant.cofactor (submatrix A I J) a' b' +\n    (\\<Sum>i\\<in>{0..<Suc k} - {a'}.\n       submatrix A I J $$ (i, b') *\n       Determinant.cofactor (submatrix A I J) i b')", "by (metis (no_types, lifting) Diff_iff atLeast0LessThan finite_atLeastLessThan\n            finite_insert set_rw singletonI sum.insert)"], ["proof (state)\nthis:\n  (\\<Sum>i<Suc k.\n      submatrix A I J $$ (i, b') *\n      Determinant.cofactor (submatrix A I J) i b') =\n  submatrix A I J $$ (a', b') *\n  Determinant.cofactor (submatrix A I J) a' b' +\n  (\\<Sum>i\\<in>{0..<Suc k} - {a'}.\n     submatrix A I J $$ (i, b') *\n     Determinant.cofactor (submatrix A I J) i b')\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "also"], ["proof (state)\nthis:\n  (\\<Sum>i<Suc k.\n      submatrix A I J $$ (i, b') *\n      Determinant.cofactor (submatrix A I J) i b') =\n  submatrix A I J $$ (a', b') *\n  Determinant.cofactor (submatrix A I J) a' b' +\n  (\\<Sum>i\\<in>{0..<Suc k} - {a'}.\n     submatrix A I J $$ (i, b') *\n     Determinant.cofactor (submatrix A I J) i b')\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "have \"... = ?f a'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix A I J $$ (a', b') *\n    Determinant.cofactor (submatrix A I J) a' b' +\n    (\\<Sum>i\\<in>{0..<Suc k} - {a'}.\n       submatrix A I J $$ (i, b') *\n       Determinant.cofactor (submatrix A I J) i b') =\n    submatrix A I J $$ (a', b') *\n    Determinant.cofactor (submatrix A I J) a' b'", "using rw0"], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>{0..<Suc k} - {a'}.\n     submatrix A I J $$ (i, b') *\n     Determinant.cofactor (submatrix A I J) i b') =\n  (0::'a)\n\ngoal (1 subgoal):\n 1. submatrix A I J $$ (a', b') *\n    Determinant.cofactor (submatrix A I J) a' b' +\n    (\\<Sum>i\\<in>{0..<Suc k} - {a'}.\n       submatrix A I J $$ (i, b') *\n       Determinant.cofactor (submatrix A I J) i b') =\n    submatrix A I J $$ (a', b') *\n    Determinant.cofactor (submatrix A I J) a' b'", "unfolding cofactor_def"], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>{0..<Suc k} - {a'}.\n     submatrix A I J $$ (i, b') *\n     ((- (1::'a)) ^ (i + b') *\n      Determinant.det (mat_delete (submatrix A I J) i b'))) =\n  (0::'a)\n\ngoal (1 subgoal):\n 1. submatrix A I J $$ (a', b') *\n    ((- (1::'a)) ^ (a' + b') *\n     Determinant.det (mat_delete (submatrix A I J) a' b')) +\n    (\\<Sum>i\\<in>{0..<Suc k} - {a'}.\n       submatrix A I J $$ (i, b') *\n       ((- (1::'a)) ^ (i + b') *\n        Determinant.det (mat_delete (submatrix A I J) i b'))) =\n    submatrix A I J $$ (a', b') *\n    ((- (1::'a)) ^ (a' + b') *\n     Determinant.det (mat_delete (submatrix A I J) a' b'))", "by auto"], ["proof (state)\nthis:\n  submatrix A I J $$ (a', b') *\n  Determinant.cofactor (submatrix A I J) a' b' +\n  (\\<Sum>i\\<in>{0..<Suc k} - {a'}.\n     submatrix A I J $$ (i, b') *\n     Determinant.cofactor (submatrix A I J) i b') =\n  submatrix A I J $$ (a', b') * Determinant.cofactor (submatrix A I J) a' b'\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "also"], ["proof (state)\nthis:\n  submatrix A I J $$ (a', b') *\n  Determinant.cofactor (submatrix A I J) a' b' +\n  (\\<Sum>i\\<in>{0..<Suc k} - {a'}.\n     submatrix A I J $$ (i, b') *\n     Determinant.cofactor (submatrix A I J) i b') =\n  submatrix A I J $$ (a', b') * Determinant.cofactor (submatrix A I J) a' b'\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "have \"... = submatrix A I J $$ (a', b') * ((-1) ^ (a' + b') * det (submatrix A I' J'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix A I J $$ (a', b') *\n    Determinant.cofactor (submatrix A I J) a' b' =\n    submatrix A I J $$ (a', b') *\n    ((- (1::'a)) ^ (a' + b') * Determinant.det (submatrix A I' J'))", "unfolding cofactor_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix A I J $$ (a', b') *\n    ((- (1::'a)) ^ (a' + b') *\n     Determinant.det (mat_delete (submatrix A I J) a' b')) =\n    submatrix A I J $$ (a', b') *\n    ((- (1::'a)) ^ (a' + b') * Determinant.det (submatrix A I' J'))", "using mat_delete_sub aI' bJ'"], ["proof (prove)\nusing this:\n  mat_delete (submatrix A (insert a I') (insert b J')) a' b' =\n  submatrix A I' J'\n  I = insert a I'\n  J = insert b J'\n\ngoal (1 subgoal):\n 1. submatrix A I J $$ (a', b') *\n    ((- (1::'a)) ^ (a' + b') *\n     Determinant.det (mat_delete (submatrix A I J) a' b')) =\n    submatrix A I J $$ (a', b') *\n    ((- (1::'a)) ^ (a' + b') * Determinant.det (submatrix A I' J'))", "by simp"], ["proof (state)\nthis:\n  submatrix A I J $$ (a', b') *\n  Determinant.cofactor (submatrix A I J) a' b' =\n  submatrix A I J $$ (a', b') *\n  ((- (1::'a)) ^ (a' + b') * Determinant.det (submatrix A I' J'))\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "finally"], ["proof (chain)\npicking this:\n  Determinant.det (submatrix A I J) =\n  submatrix A I J $$ (a', b') *\n  ((- (1::'a)) ^ (a' + b') * Determinant.det (submatrix A I' J'))", "have det_submatrix_IJ: \"det (submatrix A I J)\n         = A $$ (a, b) * ((- 1) ^ (a' + b') * det (submatrix A I' J'))\""], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I J) =\n  submatrix A I J $$ (a', b') *\n  ((- (1::'a)) ^ (a' + b') * Determinant.det (submatrix A I' J'))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) =\n    A $$ (a, b) *\n    ((- (1::'a)) ^ (a' + b') * Determinant.det (submatrix A I' J'))", "unfolding sub_index"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I J) =\n  A $$ (a, b) *\n  ((- (1::'a)) ^ (a' + b') * Determinant.det (submatrix A I' J'))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) =\n    A $$ (a, b) *\n    ((- (1::'a)) ^ (a' + b') * Determinant.det (submatrix A I' J'))", "."], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) =\n  A $$ (a, b) *\n  ((- (1::'a)) ^ (a' + b') * Determinant.det (submatrix A I' J'))\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "proof (cases \"det (submatrix A I' J') = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Determinant.det (submatrix A I' J') = (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. Determinant.det (submatrix A I' J') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "case True"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I' J') = (0::'a)\n\ngoal (2 subgoals):\n 1. Determinant.det (submatrix A I' J') = (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. Determinant.det (submatrix A I' J') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "then"], ["proof (chain)\npicking this:\n  Determinant.det (submatrix A I' J') = (0::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I' J') = (0::'a)\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "using det_submatrix_IJ"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I' J') = (0::'a)\n  Determinant.det (submatrix A I J) =\n  A $$ (a, b) *\n  ((- (1::'a)) ^ (a' + b') * Determinant.det (submatrix A I' J'))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "by auto"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) = (0::'a) \\<or>\n  (\\<exists>xs.\n      (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n       Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n      set xs\n      \\<subseteq> {A $$ (i, i) |i.\n                   i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n      length xs = Suc k)\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "case False"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I' J') \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "note det_not0 = False"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I' J') \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "from this"], ["proof (chain)\npicking this:\n  Determinant.det (submatrix A I' J') \\<noteq> (0::'a)", "obtain xs where prod_list_xs: \"det (submatrix A I' J') = prod_list xs\n          \\<or> det (submatrix A I' J') = - prod_list xs\"\n          and xs: \"set xs \\<subseteq> {A $$ (i, i) |i. i < min n m \\<and> A $$ (i, i) \\<noteq> 0}\"\n          and length_xs: \"length xs = k\""], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I' J') \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<And>xs.\n        \\<lbrakk>Determinant.det (submatrix A I' J') = prod_list xs \\<or>\n                 Determinant.det (submatrix A I' J') = - prod_list xs;\n         set xs\n         \\<subseteq> {A $$ (i, i) |i.\n                      i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)};\n         length xs = k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using det_sub_I'J'"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I' J') \\<noteq> (0::'a)\n  Determinant.det (submatrix A I' J') = (0::'a) \\<or>\n  (\\<exists>xs.\n      (Determinant.det (submatrix A I' J') = prod_list xs \\<or>\n       Determinant.det (submatrix A I' J') = - prod_list xs) \\<and>\n      set xs\n      \\<subseteq> {A $$ (i, i) |i.\n                   i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n      length xs = k)\n\ngoal (1 subgoal):\n 1. (\\<And>xs.\n        \\<lbrakk>Determinant.det (submatrix A I' J') = prod_list xs \\<or>\n                 Determinant.det (submatrix A I' J') = - prod_list xs;\n         set xs\n         \\<subseteq> {A $$ (i, i) |i.\n                      i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)};\n         length xs = k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I' J') = prod_list xs \\<or>\n  Determinant.det (submatrix A I' J') = - prod_list xs\n  set xs\n  \\<subseteq> {A $$ (i, i) |i.\n               i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)}\n  length xs = k\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "let ?ys = \"A$$(a,b) # xs\""], ["proof (state)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "have length_ys: \"length ?ys = Suc k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length (A $$ (a, b) # xs) = Suc k", "using length_xs"], ["proof (prove)\nusing this:\n  length xs = k\n\ngoal (1 subgoal):\n 1. length (A $$ (a, b) # xs) = Suc k", "by auto"], ["proof (state)\nthis:\n  length (A $$ (a, b) # xs) = Suc k\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "have a_eq_b: \"a=b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a = b", "using A_carrier an bm sub_IJ_0 sub_index dA"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat n m\n  a < n\n  b < m\n  submatrix A I J $$ (a', b') \\<noteq> (0::'a)\n  submatrix A I J $$ (a', b') = A $$ (a, b)\n  diagonal_mat A\n\ngoal (1 subgoal):\n 1. a = b", "unfolding diagonal_mat_def"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat n m\n  a < n\n  b < m\n  submatrix A I J $$ (a', b') \\<noteq> (0::'a)\n  submatrix A I J $$ (a', b') = A $$ (a, b)\n  \\<forall>i<dim_row A.\n     \\<forall>j<dim_col A.\n        i \\<noteq> j \\<longrightarrow> A $$ (i, j) = (0::'a)\n\ngoal (1 subgoal):\n 1. a = b", "by auto"], ["proof (state)\nthis:\n  a = b\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "have A_aa_in: \"A$$(a,a) \\<in> {A $$ (i, i) |i. i < min n m \\<and> A $$ (i, i) \\<noteq> 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A $$ (a, a)\n    \\<in> {A $$ (i, i) |i. i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)}", "using a_eq_b an bm sub_IJ_0 sub_index"], ["proof (prove)\nusing this:\n  a = b\n  a < n\n  b < m\n  submatrix A I J $$ (a', b') \\<noteq> (0::'a)\n  submatrix A I J $$ (a', b') = A $$ (a, b)\n\ngoal (1 subgoal):\n 1. A $$ (a, a)\n    \\<in> {A $$ (i, i) |i. i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)}", "by auto"], ["proof (state)\nthis:\n  A $$ (a, a)\n  \\<in> {A $$ (i, i) |i. i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)}\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "have ys: \"set ?ys \\<subseteq> {A $$ (i, i) |i. i < min n m \\<and> A $$ (i, i) \\<noteq> 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set (A $$ (a, b) # xs)\n    \\<subseteq> {A $$ (i, i) |i.\n                 i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)}", "using xs A_aa_in a_eq_b"], ["proof (prove)\nusing this:\n  set xs\n  \\<subseteq> {A $$ (i, i) |i.\n               i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)}\n  A $$ (a, a)\n  \\<in> {A $$ (i, i) |i. i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)}\n  a = b\n\ngoal (1 subgoal):\n 1. set (A $$ (a, b) # xs)\n    \\<subseteq> {A $$ (i, i) |i.\n                 i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)}", "by auto"], ["proof (state)\nthis:\n  set (A $$ (a, b) # xs)\n  \\<subseteq> {A $$ (i, i) |i.\n               i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)}\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "proof (cases \"even (a'+b')\")"], ["proof (state)\ngoal (2 subgoals):\n 1. even (a' + b') \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. odd (a' + b') \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "case True"], ["proof (state)\nthis:\n  even (a' + b')\n\ngoal (2 subgoals):\n 1. even (a' + b') \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. odd (a' + b') \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "have det_submatrix_IJ: \"det (submatrix A I J) = A $$ (a, b) * det (submatrix A I' J')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) =\n    A $$ (a, b) * Determinant.det (submatrix A I' J')", "using det_submatrix_IJ True"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I J) =\n  A $$ (a, b) *\n  ((- (1::'a)) ^ (a' + b') * Determinant.det (submatrix A I' J'))\n  even (a' + b')\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) =\n    A $$ (a, b) * Determinant.det (submatrix A I' J')", "by auto"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) =\n  A $$ (a, b) * Determinant.det (submatrix A I' J')\n\ngoal (2 subgoals):\n 1. even (a' + b') \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. odd (a' + b') \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "proof (cases \"det (submatrix A I' J') = prod_list xs\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Determinant.det (submatrix A I' J') = prod_list xs \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. Determinant.det (submatrix A I' J') \\<noteq>\n    prod_list xs \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "case True"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I' J') = prod_list xs\n\ngoal (2 subgoals):\n 1. Determinant.det (submatrix A I' J') = prod_list xs \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. Determinant.det (submatrix A I' J') \\<noteq>\n    prod_list xs \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "have \"det (submatrix A I J) = prod_list ?ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = prod_list (A $$ (a, b) # xs)", "using det_submatrix_IJ"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I J) =\n  A $$ (a, b) * Determinant.det (submatrix A I' J')\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = prod_list (A $$ (a, b) # xs)", "unfolding True"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I J) = A $$ (a, b) * prod_list xs\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = prod_list (A $$ (a, b) # xs)", "by auto"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) = prod_list (A $$ (a, b) # xs)\n\ngoal (2 subgoals):\n 1. Determinant.det (submatrix A I' J') = prod_list xs \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. Determinant.det (submatrix A I' J') \\<noteq>\n    prod_list xs \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "then"], ["proof (chain)\npicking this:\n  Determinant.det (submatrix A I J) = prod_list (A $$ (a, b) # xs)", "show ?thesis"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I J) = prod_list (A $$ (a, b) # xs)\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "using ys length_ys"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I J) = prod_list (A $$ (a, b) # xs)\n  set (A $$ (a, b) # xs)\n  \\<subseteq> {A $$ (i, i) |i.\n               i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)}\n  length (A $$ (a, b) # xs) = Suc k\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "by blast"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) = (0::'a) \\<or>\n  (\\<exists>xs.\n      (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n       Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n      set xs\n      \\<subseteq> {A $$ (i, i) |i.\n                   i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n      length xs = Suc k)\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') \\<noteq>\n    prod_list xs \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') \\<noteq>\n    prod_list xs \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "case False"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I' J') \\<noteq> prod_list xs\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') \\<noteq>\n    prod_list xs \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "hence \"det (submatrix A I' J') = - prod_list xs\""], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I' J') \\<noteq> prod_list xs\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') = - prod_list xs", "using prod_list_xs"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I' J') \\<noteq> prod_list xs\n  Determinant.det (submatrix A I' J') = prod_list xs \\<or>\n  Determinant.det (submatrix A I' J') = - prod_list xs\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') = - prod_list xs", "by simp"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I' J') = - prod_list xs\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') \\<noteq>\n    prod_list xs \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "hence \"det (submatrix A I J) = - prod_list ?ys\""], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I' J') = - prod_list xs\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = - prod_list (A $$ (a, b) # xs)", "using det_submatrix_IJ"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I' J') = - prod_list xs\n  Determinant.det (submatrix A I J) =\n  A $$ (a, b) * Determinant.det (submatrix A I' J')\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = - prod_list (A $$ (a, b) # xs)", "by auto"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) = - prod_list (A $$ (a, b) # xs)\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') \\<noteq>\n    prod_list xs \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "then"], ["proof (chain)\npicking this:\n  Determinant.det (submatrix A I J) = - prod_list (A $$ (a, b) # xs)", "show ?thesis"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I J) = - prod_list (A $$ (a, b) # xs)\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "using ys length_ys"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I J) = - prod_list (A $$ (a, b) # xs)\n  set (A $$ (a, b) # xs)\n  \\<subseteq> {A $$ (i, i) |i.\n               i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)}\n  length (A $$ (a, b) # xs) = Suc k\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "by blast"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) = (0::'a) \\<or>\n  (\\<exists>xs.\n      (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n       Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n      set xs\n      \\<subseteq> {A $$ (i, i) |i.\n                   i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n      length xs = Suc k)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) = (0::'a) \\<or>\n  (\\<exists>xs.\n      (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n       Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n      set xs\n      \\<subseteq> {A $$ (i, i) |i.\n                   i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n      length xs = Suc k)\n\ngoal (1 subgoal):\n 1. odd (a' + b') \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. odd (a' + b') \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "case False"], ["proof (state)\nthis:\n  odd (a' + b')\n\ngoal (1 subgoal):\n 1. odd (a' + b') \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "have det_submatrix_IJ: \"det (submatrix A I J) = A $$ (a, b) * - det (submatrix A I' J')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) =\n    A $$ (a, b) * - Determinant.det (submatrix A I' J')", "using det_submatrix_IJ False"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I J) =\n  A $$ (a, b) *\n  ((- (1::'a)) ^ (a' + b') * Determinant.det (submatrix A I' J'))\n  odd (a' + b')\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) =\n    A $$ (a, b) * - Determinant.det (submatrix A I' J')", "by auto"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) =\n  A $$ (a, b) * - Determinant.det (submatrix A I' J')\n\ngoal (1 subgoal):\n 1. odd (a' + b') \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "proof (cases \"det (submatrix A I' J') = prod_list xs\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Determinant.det (submatrix A I' J') = prod_list xs \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. Determinant.det (submatrix A I' J') \\<noteq>\n    prod_list xs \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "case True"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I' J') = prod_list xs\n\ngoal (2 subgoals):\n 1. Determinant.det (submatrix A I' J') = prod_list xs \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. Determinant.det (submatrix A I' J') \\<noteq>\n    prod_list xs \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "have \"det (submatrix A I J) = - prod_list ?ys\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = - prod_list (A $$ (a, b) # xs)", "using det_submatrix_IJ"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I J) =\n  A $$ (a, b) * - Determinant.det (submatrix A I' J')\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = - prod_list (A $$ (a, b) # xs)", "unfolding True"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I J) = A $$ (a, b) * - prod_list xs\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = - prod_list (A $$ (a, b) # xs)", "by auto"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) = - prod_list (A $$ (a, b) # xs)\n\ngoal (2 subgoals):\n 1. Determinant.det (submatrix A I' J') = prod_list xs \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)\n 2. Determinant.det (submatrix A I' J') \\<noteq>\n    prod_list xs \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "then"], ["proof (chain)\npicking this:\n  Determinant.det (submatrix A I J) = - prod_list (A $$ (a, b) # xs)", "show ?thesis"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I J) = - prod_list (A $$ (a, b) # xs)\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "using ys length_ys"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I J) = - prod_list (A $$ (a, b) # xs)\n  set (A $$ (a, b) # xs)\n  \\<subseteq> {A $$ (i, i) |i.\n               i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)}\n  length (A $$ (a, b) # xs) = Suc k\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "by blast"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) = (0::'a) \\<or>\n  (\\<exists>xs.\n      (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n       Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n      set xs\n      \\<subseteq> {A $$ (i, i) |i.\n                   i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n      length xs = Suc k)\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') \\<noteq>\n    prod_list xs \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') \\<noteq>\n    prod_list xs \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "case False"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I' J') \\<noteq> prod_list xs\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') \\<noteq>\n    prod_list xs \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "hence \"det (submatrix A I' J') = - prod_list xs\""], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I' J') \\<noteq> prod_list xs\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') = - prod_list xs", "using prod_list_xs"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I' J') \\<noteq> prod_list xs\n  Determinant.det (submatrix A I' J') = prod_list xs \\<or>\n  Determinant.det (submatrix A I' J') = - prod_list xs\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') = - prod_list xs", "by simp"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I' J') = - prod_list xs\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') \\<noteq>\n    prod_list xs \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "hence \"det (submatrix A I J) = prod_list ?ys\""], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I' J') = - prod_list xs\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = prod_list (A $$ (a, b) # xs)", "using det_submatrix_IJ"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I' J') = - prod_list xs\n  Determinant.det (submatrix A I J) =\n  A $$ (a, b) * - Determinant.det (submatrix A I' J')\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = prod_list (A $$ (a, b) # xs)", "by auto"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) = prod_list (A $$ (a, b) # xs)\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') \\<noteq>\n    prod_list xs \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "then"], ["proof (chain)\npicking this:\n  Determinant.det (submatrix A I J) = prod_list (A $$ (a, b) # xs)", "show ?thesis"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I J) = prod_list (A $$ (a, b) # xs)\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "using ys length_ys"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I J) = prod_list (A $$ (a, b) # xs)\n  set (A $$ (a, b) # xs)\n  \\<subseteq> {A $$ (i, i) |i.\n               i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)}\n  length (A $$ (a, b) # xs) = Suc k\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "by blast"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) = (0::'a) \\<or>\n  (\\<exists>xs.\n      (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n       Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n      set xs\n      \\<subseteq> {A $$ (i, i) |i.\n                   i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n      length xs = Suc k)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) = (0::'a) \\<or>\n  (\\<exists>xs.\n      (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n       Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n      set xs\n      \\<subseteq> {A $$ (i, i) |i.\n                   i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n      length xs = Suc k)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) = (0::'a) \\<or>\n  (\\<exists>xs.\n      (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n       Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n      set xs\n      \\<subseteq> {A $$ (i, i) |i.\n                   i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n      length xs = Suc k)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) = (0::'a) \\<or>\n  (\\<exists>xs.\n      (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n       Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n      set xs\n      \\<subseteq> {A $$ (i, i) |i.\n                   i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n      length xs = Suc k)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "case False"], ["proof (state)\nthis:\n  \\<not> (\\<exists>a'<Suc k. submatrix A I J $$ (a', b') \\<noteq> (0::'a))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "have \"sum ?f {0..<Suc k} = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<Suc k.\n        submatrix A I J $$ (i, b') *\n        Determinant.cofactor (submatrix A I J) i b') =\n    (0::'a)", "by (rule sum.neutral, insert False, auto)"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..<Suc k.\n      submatrix A I J $$ (i, b') *\n      Determinant.cofactor (submatrix A I J) i b') =\n  (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>i = 0..<Suc k.\n      submatrix A I J $$ (i, b') *\n      Determinant.cofactor (submatrix A I J) i b') =\n  (0::'a)\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "using det_rw"], ["proof (prove)\nusing this:\n  (\\<Sum>i = 0..<Suc k.\n      submatrix A I J $$ (i, b') *\n      Determinant.cofactor (submatrix A I J) i b') =\n  (0::'a)\n  Determinant.det (submatrix A I J) =\n  (\\<Sum>i<Suc k.\n      submatrix A I J $$ (i, b') *\n      Determinant.cofactor (submatrix A I J) i b')\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>xs.\n        (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n         Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n        set xs\n        \\<subseteq> {A $$ (i, i) |i.\n                     i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n        length xs = Suc k)", "by (simp add: atLeast0LessThan)"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) = (0::'a) \\<or>\n  (\\<exists>xs.\n      (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n       Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n      set xs\n      \\<subseteq> {A $$ (i, i) |i.\n                   i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n      length xs = Suc k)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) = (0::'a) \\<or>\n  (\\<exists>xs.\n      (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n       Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n      set xs\n      \\<subseteq> {A $$ (i, i) |i.\n                   i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n      length xs = Suc k)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) = (0::'a) \\<or>\n  (\\<exists>xs.\n      (Determinant.det (submatrix A I J) = prod_list xs \\<or>\n       Determinant.det (submatrix A I J) = - prod_list xs) \\<and>\n      set xs\n      \\<subseteq> {A $$ (i, i) |i.\n                   i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)} \\<and>\n      length xs = Suc k)\n\ngoal:\nNo subgoals!", "qed"], ["", "definition \"minors A k = {det (submatrix A I J)| I J. I \\<subseteq> {0..<dim_row A}\n  \\<and> J \\<subseteq> {0..<dim_col A} \\<and> card I = k \\<and> card J = k}\""], ["", "lemma Gcd_minors_dvd:\n  fixes A::\"'a::{semiring_Gcd,comm_ring_1} mat\"\n  assumes PAQ_B: \"P * A * Q = B\"\n  and P: \"P \\<in> carrier_mat m m\"\n  and A: \"A \\<in> carrier_mat m n\"\n  and Q: \"Q \\<in> carrier_mat n n\"\n  and I: \"I \\<subseteq> {0..<dim_row A}\" and J: \"J \\<subseteq> {0..<dim_col A}\"\n  and Ik: \"card I = k\" and Jk: \"card J = k\"\n  shows \"Gcd (minors A k) dvd det (submatrix B I J)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Gcd (minors A k) dvd Determinant.det (submatrix B I J)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Gcd (minors A k) dvd Determinant.det (submatrix B I J)", "let ?subPA = \"submatrix (P * A) I UNIV\""], ["proof (state)\ngoal (1 subgoal):\n 1. Gcd (minors A k) dvd Determinant.det (submatrix B I J)", "let ?subQ = \"submatrix Q UNIV J\""], ["proof (state)\ngoal (1 subgoal):\n 1. Gcd (minors A k) dvd Determinant.det (submatrix B I J)", "have subPA: \"?subPA \\<in> carrier_mat k n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix (P * A) I UNIV \\<in> carrier_mat k n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. submatrix (P * A) I UNIV \\<in> carrier_mat k n", "have \"I = {i. i < dim_row P \\<and> i \\<in> I}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I = {i. i < dim_row P \\<and> i \\<in> I}", "using P I A"], ["proof (prove)\nusing this:\n  P \\<in> carrier_mat m m\n  I \\<subseteq> {0..<dim_row A}\n  A \\<in> carrier_mat m n\n\ngoal (1 subgoal):\n 1. I = {i. i < dim_row P \\<and> i \\<in> I}", "by auto"], ["proof (state)\nthis:\n  I = {i. i < dim_row P \\<and> i \\<in> I}\n\ngoal (1 subgoal):\n 1. submatrix (P * A) I UNIV \\<in> carrier_mat k n", "hence \"card {i. i < dim_row P \\<and> i \\<in> I} = k\""], ["proof (prove)\nusing this:\n  I = {i. i < dim_row P \\<and> i \\<in> I}\n\ngoal (1 subgoal):\n 1. card {i. i < dim_row P \\<and> i \\<in> I} = k", "using Ik"], ["proof (prove)\nusing this:\n  I = {i. i < dim_row P \\<and> i \\<in> I}\n  card I = k\n\ngoal (1 subgoal):\n 1. card {i. i < dim_row P \\<and> i \\<in> I} = k", "by auto"], ["proof (state)\nthis:\n  card {i. i < dim_row P \\<and> i \\<in> I} = k\n\ngoal (1 subgoal):\n 1. submatrix (P * A) I UNIV \\<in> carrier_mat k n", "thus ?thesis"], ["proof (prove)\nusing this:\n  card {i. i < dim_row P \\<and> i \\<in> I} = k\n\ngoal (1 subgoal):\n 1. submatrix (P * A) I UNIV \\<in> carrier_mat k n", "using A"], ["proof (prove)\nusing this:\n  card {i. i < dim_row P \\<and> i \\<in> I} = k\n  A \\<in> carrier_mat m n\n\ngoal (1 subgoal):\n 1. submatrix (P * A) I UNIV \\<in> carrier_mat k n", "unfolding submatrix_def"], ["proof (prove)\nusing this:\n  card {i. i < dim_row P \\<and> i \\<in> I} = k\n  A \\<in> carrier_mat m n\n\ngoal (1 subgoal):\n 1. Matrix.mat (card {i. i < dim_row (P * A) \\<and> i \\<in> I})\n     (card {j. j < dim_col (P * A) \\<and> j \\<in> UNIV})\n     (\\<lambda>(i, j). (P * A) $$ (pick I i, pick UNIV j))\n    \\<in> carrier_mat k n", "by auto"], ["proof (state)\nthis:\n  submatrix (P * A) I UNIV \\<in> carrier_mat k n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  submatrix (P * A) I UNIV \\<in> carrier_mat k n\n\ngoal (1 subgoal):\n 1. Gcd (minors A k) dvd Determinant.det (submatrix B I J)", "have subQ: \"submatrix Q UNIV J \\<in> carrier_mat n k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix Q UNIV J \\<in> carrier_mat n k", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. submatrix Q UNIV J \\<in> carrier_mat n k", "have J_eq: \"J = {j. j < dim_col Q \\<and> j \\<in> J}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. J = {j. j < dim_col Q \\<and> j \\<in> J}", "using Q J A"], ["proof (prove)\nusing this:\n  Q \\<in> carrier_mat n n\n  J \\<subseteq> {0..<dim_col A}\n  A \\<in> carrier_mat m n\n\ngoal (1 subgoal):\n 1. J = {j. j < dim_col Q \\<and> j \\<in> J}", "by auto"], ["proof (state)\nthis:\n  J = {j. j < dim_col Q \\<and> j \\<in> J}\n\ngoal (1 subgoal):\n 1. submatrix Q UNIV J \\<in> carrier_mat n k", "hence \"card {j. j < dim_col Q \\<and> j \\<in> J} = k\""], ["proof (prove)\nusing this:\n  J = {j. j < dim_col Q \\<and> j \\<in> J}\n\ngoal (1 subgoal):\n 1. card {j. j < dim_col Q \\<and> j \\<in> J} = k", "using Jk"], ["proof (prove)\nusing this:\n  J = {j. j < dim_col Q \\<and> j \\<in> J}\n  card J = k\n\ngoal (1 subgoal):\n 1. card {j. j < dim_col Q \\<and> j \\<in> J} = k", "by auto"], ["proof (state)\nthis:\n  card {j. j < dim_col Q \\<and> j \\<in> J} = k\n\ngoal (1 subgoal):\n 1. submatrix Q UNIV J \\<in> carrier_mat n k", "moreover"], ["proof (state)\nthis:\n  card {j. j < dim_col Q \\<and> j \\<in> J} = k\n\ngoal (1 subgoal):\n 1. submatrix Q UNIV J \\<in> carrier_mat n k", "have \"card {i. i < dim_row Q \\<and> i \\<in> UNIV} = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {i. i < dim_row Q \\<and> i \\<in> UNIV} = n", "using Q"], ["proof (prove)\nusing this:\n  Q \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. card {i. i < dim_row Q \\<and> i \\<in> UNIV} = n", "by auto"], ["proof (state)\nthis:\n  card {i. i < dim_row Q \\<and> i \\<in> UNIV} = n\n\ngoal (1 subgoal):\n 1. submatrix Q UNIV J \\<in> carrier_mat n k", "ultimately"], ["proof (chain)\npicking this:\n  card {j. j < dim_col Q \\<and> j \\<in> J} = k\n  card {i. i < dim_row Q \\<and> i \\<in> UNIV} = n", "show ?thesis"], ["proof (prove)\nusing this:\n  card {j. j < dim_col Q \\<and> j \\<in> J} = k\n  card {i. i < dim_row Q \\<and> i \\<in> UNIV} = n\n\ngoal (1 subgoal):\n 1. submatrix Q UNIV J \\<in> carrier_mat n k", "unfolding submatrix_def"], ["proof (prove)\nusing this:\n  card {j. j < dim_col Q \\<and> j \\<in> J} = k\n  card {i. i < dim_row Q \\<and> i \\<in> UNIV} = n\n\ngoal (1 subgoal):\n 1. Matrix.mat (card {i. i < dim_row Q \\<and> i \\<in> UNIV})\n     (card {j. j < dim_col Q \\<and> j \\<in> J})\n     (\\<lambda>(i, j). Q $$ (pick UNIV i, pick J j))\n    \\<in> carrier_mat n k", "by auto"], ["proof (state)\nthis:\n  submatrix Q UNIV J \\<in> carrier_mat n k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  submatrix Q UNIV J \\<in> carrier_mat n k\n\ngoal (1 subgoal):\n 1. Gcd (minors A k) dvd Determinant.det (submatrix B I J)", "have sub_sub_PA: \"(submatrix ?subPA UNIV I') = submatrix (P * A) I I'\" for I'"], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix (submatrix (P * A) I UNIV) UNIV I' = submatrix (P * A) I I'", "using submatrix_split2[symmetric]"], ["proof (prove)\nusing this:\n  submatrix (submatrix ?A ?I UNIV) UNIV ?J = submatrix ?A ?I ?J\n\ngoal (1 subgoal):\n 1. submatrix (submatrix (P * A) I UNIV) UNIV I' = submatrix (P * A) I I'", "by auto"], ["proof (state)\nthis:\n  submatrix (submatrix (P * A) I UNIV) UNIV ?I' = submatrix (P * A) I ?I'\n\ngoal (1 subgoal):\n 1. Gcd (minors A k) dvd Determinant.det (submatrix B I J)", "have det_subPA_rw: \"det (submatrix (P * A) I I') =\n    (\\<Sum>J' | J' \\<subseteq> {0..<m} \\<and> card J' = k. det ((submatrix P I J')) * det (submatrix A J' I'))\"\n    if I'1: \"I' \\<subseteq> {0..<n}\" and I'2: \"card I' = k\" for I'"], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix (P * A) I I') =\n    (\\<Sum>J' | J' \\<subseteq> {0..<m} \\<and> card J' = k.\n       Determinant.det (submatrix P I J') *\n       Determinant.det (submatrix A J' I'))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix (P * A) I I') =\n    (\\<Sum>J' | J' \\<subseteq> {0..<m} \\<and> card J' = k.\n       Determinant.det (submatrix P I J') *\n       Determinant.det (submatrix A J' I'))", "have \"submatrix (P * A) I I' = submatrix P I UNIV * submatrix A UNIV I'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix (P * A) I I' = submatrix P I UNIV * submatrix A UNIV I'", "unfolding submatrix_mult"], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix P I UNIV * submatrix A UNIV I' =\n    submatrix P I UNIV * submatrix A UNIV I'", ".."], ["proof (state)\nthis:\n  submatrix (P * A) I I' = submatrix P I UNIV * submatrix A UNIV I'\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix (P * A) I I') =\n    (\\<Sum>J' | J' \\<subseteq> {0..<m} \\<and> card J' = k.\n       Determinant.det (submatrix P I J') *\n       Determinant.det (submatrix A J' I'))", "also"], ["proof (state)\nthis:\n  submatrix (P * A) I I' = submatrix P I UNIV * submatrix A UNIV I'\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix (P * A) I I') =\n    (\\<Sum>J' | J' \\<subseteq> {0..<m} \\<and> card J' = k.\n       Determinant.det (submatrix P I J') *\n       Determinant.det (submatrix A J' I'))", "have \"det ... = (\\<Sum>C | C \\<subseteq> {0..<m} \\<and> card C = k.\n     det (submatrix (submatrix P I UNIV) UNIV C) * det (submatrix (submatrix A UNIV I') C UNIV))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix P I UNIV * submatrix A UNIV I') =\n    (\\<Sum>C | C \\<subseteq> {0..<m} \\<and> card C = k.\n       Determinant.det (submatrix (submatrix P I UNIV) UNIV C) *\n       Determinant.det (submatrix (submatrix A UNIV I') C UNIV))", "proof (rule Cauchy_Binet)"], ["proof (state)\ngoal (2 subgoals):\n 1. submatrix P I UNIV \\<in> carrier_mat k m\n 2. submatrix A UNIV I' \\<in> carrier_mat m k", "have \"I = {i. i < dim_row P \\<and> i \\<in> I}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I = {i. i < dim_row P \\<and> i \\<in> I}", "using P I A"], ["proof (prove)\nusing this:\n  P \\<in> carrier_mat m m\n  I \\<subseteq> {0..<dim_row A}\n  A \\<in> carrier_mat m n\n\ngoal (1 subgoal):\n 1. I = {i. i < dim_row P \\<and> i \\<in> I}", "by auto"], ["proof (state)\nthis:\n  I = {i. i < dim_row P \\<and> i \\<in> I}\n\ngoal (2 subgoals):\n 1. submatrix P I UNIV \\<in> carrier_mat k m\n 2. submatrix A UNIV I' \\<in> carrier_mat m k", "thus \"submatrix P I UNIV \\<in> carrier_mat k m\""], ["proof (prove)\nusing this:\n  I = {i. i < dim_row P \\<and> i \\<in> I}\n\ngoal (1 subgoal):\n 1. submatrix P I UNIV \\<in> carrier_mat k m", "using Ik P"], ["proof (prove)\nusing this:\n  I = {i. i < dim_row P \\<and> i \\<in> I}\n  card I = k\n  P \\<in> carrier_mat m m\n\ngoal (1 subgoal):\n 1. submatrix P I UNIV \\<in> carrier_mat k m", "unfolding submatrix_def"], ["proof (prove)\nusing this:\n  I = {i. i < dim_row P \\<and> i \\<in> I}\n  card I = k\n  P \\<in> carrier_mat m m\n\ngoal (1 subgoal):\n 1. Matrix.mat (card {i. i < dim_row P \\<and> i \\<in> I})\n     (card {j. j < dim_col P \\<and> j \\<in> UNIV})\n     (\\<lambda>(i, j). P $$ (pick I i, pick UNIV j))\n    \\<in> carrier_mat k m", "by auto"], ["proof (state)\nthis:\n  submatrix P I UNIV \\<in> carrier_mat k m\n\ngoal (1 subgoal):\n 1. submatrix A UNIV I' \\<in> carrier_mat m k", "have \"I' = {j. j < dim_col A \\<and> j \\<in> I'}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I' = {j. j < dim_col A \\<and> j \\<in> I'}", "using I'1 A"], ["proof (prove)\nusing this:\n  I' \\<subseteq> {0..<n}\n  A \\<in> carrier_mat m n\n\ngoal (1 subgoal):\n 1. I' = {j. j < dim_col A \\<and> j \\<in> I'}", "by auto"], ["proof (state)\nthis:\n  I' = {j. j < dim_col A \\<and> j \\<in> I'}\n\ngoal (1 subgoal):\n 1. submatrix A UNIV I' \\<in> carrier_mat m k", "thus \"submatrix A UNIV I' \\<in> carrier_mat m k\""], ["proof (prove)\nusing this:\n  I' = {j. j < dim_col A \\<and> j \\<in> I'}\n\ngoal (1 subgoal):\n 1. submatrix A UNIV I' \\<in> carrier_mat m k", "using I'2 A"], ["proof (prove)\nusing this:\n  I' = {j. j < dim_col A \\<and> j \\<in> I'}\n  card I' = k\n  A \\<in> carrier_mat m n\n\ngoal (1 subgoal):\n 1. submatrix A UNIV I' \\<in> carrier_mat m k", "unfolding submatrix_def"], ["proof (prove)\nusing this:\n  I' = {j. j < dim_col A \\<and> j \\<in> I'}\n  card I' = k\n  A \\<in> carrier_mat m n\n\ngoal (1 subgoal):\n 1. Matrix.mat (card {i. i < dim_row A \\<and> i \\<in> UNIV})\n     (card {j. j < dim_col A \\<and> j \\<in> I'})\n     (\\<lambda>(i, j). A $$ (pick UNIV i, pick I' j))\n    \\<in> carrier_mat m k", "by auto"], ["proof (state)\nthis:\n  submatrix A UNIV I' \\<in> carrier_mat m k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Determinant.det (submatrix P I UNIV * submatrix A UNIV I') =\n  (\\<Sum>C | C \\<subseteq> {0..<m} \\<and> card C = k.\n     Determinant.det (submatrix (submatrix P I UNIV) UNIV C) *\n     Determinant.det (submatrix (submatrix A UNIV I') C UNIV))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix (P * A) I I') =\n    (\\<Sum>J' | J' \\<subseteq> {0..<m} \\<and> card J' = k.\n       Determinant.det (submatrix P I J') *\n       Determinant.det (submatrix A J' I'))", "also"], ["proof (state)\nthis:\n  Determinant.det (submatrix P I UNIV * submatrix A UNIV I') =\n  (\\<Sum>C | C \\<subseteq> {0..<m} \\<and> card C = k.\n     Determinant.det (submatrix (submatrix P I UNIV) UNIV C) *\n     Determinant.det (submatrix (submatrix A UNIV I') C UNIV))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix (P * A) I I') =\n    (\\<Sum>J' | J' \\<subseteq> {0..<m} \\<and> card J' = k.\n       Determinant.det (submatrix P I J') *\n       Determinant.det (submatrix A J' I'))", "have \"... =  (\\<Sum>J' | J' \\<subseteq> {0..<m} \\<and> card J' = k.\n      det (submatrix P I J') * det (submatrix A J' I'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>C | C \\<subseteq> {0..<m} \\<and> card C = k.\n       Determinant.det (submatrix (submatrix P I UNIV) UNIV C) *\n       Determinant.det (submatrix (submatrix A UNIV I') C UNIV)) =\n    (\\<Sum>J' | J' \\<subseteq> {0..<m} \\<and> card J' = k.\n       Determinant.det (submatrix P I J') *\n       Determinant.det (submatrix A J' I'))", "unfolding submatrix_split2[symmetric] submatrix_split[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>C | C \\<subseteq> {0..<m} \\<and> card C = k.\n       Determinant.det (submatrix P I C) *\n       Determinant.det (submatrix A C I')) =\n    (\\<Sum>J' | J' \\<subseteq> {0..<m} \\<and> card J' = k.\n       Determinant.det (submatrix P I J') *\n       Determinant.det (submatrix A J' I'))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>C | C \\<subseteq> {0..<m} \\<and> card C = k.\n     Determinant.det (submatrix (submatrix P I UNIV) UNIV C) *\n     Determinant.det (submatrix (submatrix A UNIV I') C UNIV)) =\n  (\\<Sum>J' | J' \\<subseteq> {0..<m} \\<and> card J' = k.\n     Determinant.det (submatrix P I J') *\n     Determinant.det (submatrix A J' I'))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix (P * A) I I') =\n    (\\<Sum>J' | J' \\<subseteq> {0..<m} \\<and> card J' = k.\n       Determinant.det (submatrix P I J') *\n       Determinant.det (submatrix A J' I'))", "finally"], ["proof (chain)\npicking this:\n  Determinant.det (submatrix (P * A) I I') =\n  (\\<Sum>J' | J' \\<subseteq> {0..<m} \\<and> card J' = k.\n     Determinant.det (submatrix P I J') *\n     Determinant.det (submatrix A J' I'))", "show ?thesis"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix (P * A) I I') =\n  (\\<Sum>J' | J' \\<subseteq> {0..<m} \\<and> card J' = k.\n     Determinant.det (submatrix P I J') *\n     Determinant.det (submatrix A J' I'))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix (P * A) I I') =\n    (\\<Sum>J' | J' \\<subseteq> {0..<m} \\<and> card J' = k.\n       Determinant.det (submatrix P I J') *\n       Determinant.det (submatrix A J' I'))", "."], ["proof (state)\nthis:\n  Determinant.det (submatrix (P * A) I I') =\n  (\\<Sum>J' | J' \\<subseteq> {0..<m} \\<and> card J' = k.\n     Determinant.det (submatrix P I J') *\n     Determinant.det (submatrix A J' I'))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?I' \\<subseteq> {0..<n}; card ?I' = k\\<rbrakk>\n  \\<Longrightarrow> Determinant.det (submatrix (P * A) I ?I') =\n                    (\\<Sum>J' | J' \\<subseteq> {0..<m} \\<and> card J' = k.\n                       Determinant.det (submatrix P I J') *\n                       Determinant.det (submatrix A J' ?I'))\n\ngoal (1 subgoal):\n 1. Gcd (minors A k) dvd Determinant.det (submatrix B I J)", "have \"det (submatrix B I J) = det (submatrix (P*A*Q) I J)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix B I J) =\n    Determinant.det (submatrix (P * A * Q) I J)", "using PAQ_B"], ["proof (prove)\nusing this:\n  P * A * Q = B\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix B I J) =\n    Determinant.det (submatrix (P * A * Q) I J)", "by simp"], ["proof (state)\nthis:\n  Determinant.det (submatrix B I J) =\n  Determinant.det (submatrix (P * A * Q) I J)\n\ngoal (1 subgoal):\n 1. Gcd (minors A k) dvd Determinant.det (submatrix B I J)", "also"], ["proof (state)\nthis:\n  Determinant.det (submatrix B I J) =\n  Determinant.det (submatrix (P * A * Q) I J)\n\ngoal (1 subgoal):\n 1. Gcd (minors A k) dvd Determinant.det (submatrix B I J)", "have \"... = det (?subPA * ?subQ)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix (P * A * Q) I J) =\n    Determinant.det (submatrix (P * A) I UNIV * submatrix Q UNIV J)", "unfolding submatrix_mult"], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det\n     (submatrix P I UNIV * submatrix A UNIV UNIV * submatrix Q UNIV J) =\n    Determinant.det\n     (submatrix P I UNIV * submatrix A UNIV UNIV * submatrix Q UNIV J)", "by auto"], ["proof (state)\nthis:\n  Determinant.det (submatrix (P * A * Q) I J) =\n  Determinant.det (submatrix (P * A) I UNIV * submatrix Q UNIV J)\n\ngoal (1 subgoal):\n 1. Gcd (minors A k) dvd Determinant.det (submatrix B I J)", "also"], ["proof (state)\nthis:\n  Determinant.det (submatrix (P * A * Q) I J) =\n  Determinant.det (submatrix (P * A) I UNIV * submatrix Q UNIV J)\n\ngoal (1 subgoal):\n 1. Gcd (minors A k) dvd Determinant.det (submatrix B I J)", "have \"... = (\\<Sum>I' | I' \\<subseteq> {0..<n} \\<and> card I' = k. det (submatrix ?subPA UNIV I')\n    * det (submatrix ?subQ I' UNIV))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix (P * A) I UNIV * submatrix Q UNIV J) =\n    (\\<Sum>I' | I' \\<subseteq> {0..<n} \\<and> card I' = k.\n       Determinant.det (submatrix (submatrix (P * A) I UNIV) UNIV I') *\n       Determinant.det (submatrix (submatrix Q UNIV J) I' UNIV))", "by (rule Cauchy_Binet[OF subPA subQ])"], ["proof (state)\nthis:\n  Determinant.det (submatrix (P * A) I UNIV * submatrix Q UNIV J) =\n  (\\<Sum>I' | I' \\<subseteq> {0..<n} \\<and> card I' = k.\n     Determinant.det (submatrix (submatrix (P * A) I UNIV) UNIV I') *\n     Determinant.det (submatrix (submatrix Q UNIV J) I' UNIV))\n\ngoal (1 subgoal):\n 1. Gcd (minors A k) dvd Determinant.det (submatrix B I J)", "also"], ["proof (state)\nthis:\n  Determinant.det (submatrix (P * A) I UNIV * submatrix Q UNIV J) =\n  (\\<Sum>I' | I' \\<subseteq> {0..<n} \\<and> card I' = k.\n     Determinant.det (submatrix (submatrix (P * A) I UNIV) UNIV I') *\n     Determinant.det (submatrix (submatrix Q UNIV J) I' UNIV))\n\ngoal (1 subgoal):\n 1. Gcd (minors A k) dvd Determinant.det (submatrix B I J)", "have \"... = (\\<Sum>I' | I' \\<subseteq> {0..<n} \\<and> card I' = k.\n    det (submatrix (P * A) I I') * det (submatrix Q I' J))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>I' | I' \\<subseteq> {0..<n} \\<and> card I' = k.\n       Determinant.det (submatrix (submatrix (P * A) I UNIV) UNIV I') *\n       Determinant.det (submatrix (submatrix Q UNIV J) I' UNIV)) =\n    (\\<Sum>I' | I' \\<subseteq> {0..<n} \\<and> card I' = k.\n       Determinant.det (submatrix (P * A) I I') *\n       Determinant.det (submatrix Q I' J))", "using submatrix_split[symmetric, of Q] submatrix_split2[symmetric, of \"P*A\"]"], ["proof (prove)\nusing this:\n  submatrix (submatrix Q UNIV ?J) ?I UNIV = submatrix Q ?I ?J\n  submatrix (submatrix (P * A) ?I UNIV) UNIV ?J = submatrix (P * A) ?I ?J\n\ngoal (1 subgoal):\n 1. (\\<Sum>I' | I' \\<subseteq> {0..<n} \\<and> card I' = k.\n       Determinant.det (submatrix (submatrix (P * A) I UNIV) UNIV I') *\n       Determinant.det (submatrix (submatrix Q UNIV J) I' UNIV)) =\n    (\\<Sum>I' | I' \\<subseteq> {0..<n} \\<and> card I' = k.\n       Determinant.det (submatrix (P * A) I I') *\n       Determinant.det (submatrix Q I' J))", "by presburger"], ["proof (state)\nthis:\n  (\\<Sum>I' | I' \\<subseteq> {0..<n} \\<and> card I' = k.\n     Determinant.det (submatrix (submatrix (P * A) I UNIV) UNIV I') *\n     Determinant.det (submatrix (submatrix Q UNIV J) I' UNIV)) =\n  (\\<Sum>I' | I' \\<subseteq> {0..<n} \\<and> card I' = k.\n     Determinant.det (submatrix (P * A) I I') *\n     Determinant.det (submatrix Q I' J))\n\ngoal (1 subgoal):\n 1. Gcd (minors A k) dvd Determinant.det (submatrix B I J)", "also"], ["proof (state)\nthis:\n  (\\<Sum>I' | I' \\<subseteq> {0..<n} \\<and> card I' = k.\n     Determinant.det (submatrix (submatrix (P * A) I UNIV) UNIV I') *\n     Determinant.det (submatrix (submatrix Q UNIV J) I' UNIV)) =\n  (\\<Sum>I' | I' \\<subseteq> {0..<n} \\<and> card I' = k.\n     Determinant.det (submatrix (P * A) I I') *\n     Determinant.det (submatrix Q I' J))\n\ngoal (1 subgoal):\n 1. Gcd (minors A k) dvd Determinant.det (submatrix B I J)", "have \"... = (\\<Sum>I' | I' \\<subseteq> {0..<n} \\<and> card I' = k. \\<Sum>J' | J' \\<subseteq> {0..<m} \\<and> card J' = k.\n    det (submatrix P I J') * det (submatrix A J' I') * det (submatrix Q I' J))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>I' | I' \\<subseteq> {0..<n} \\<and> card I' = k.\n       Determinant.det (submatrix (P * A) I I') *\n       Determinant.det (submatrix Q I' J)) =\n    (\\<Sum>I' | I' \\<subseteq> {0..<n} \\<and> card I' = k.\n       \\<Sum>J' | J' \\<subseteq> {0..<m} \\<and> card J' = k.\n         Determinant.det (submatrix P I J') *\n         Determinant.det (submatrix A J' I') *\n         Determinant.det (submatrix Q I' J))", "using det_subPA_rw"], ["proof (prove)\nusing this:\n  \\<lbrakk>?I' \\<subseteq> {0..<n}; card ?I' = k\\<rbrakk>\n  \\<Longrightarrow> Determinant.det (submatrix (P * A) I ?I') =\n                    (\\<Sum>J' | J' \\<subseteq> {0..<m} \\<and> card J' = k.\n                       Determinant.det (submatrix P I J') *\n                       Determinant.det (submatrix A J' ?I'))\n\ngoal (1 subgoal):\n 1. (\\<Sum>I' | I' \\<subseteq> {0..<n} \\<and> card I' = k.\n       Determinant.det (submatrix (P * A) I I') *\n       Determinant.det (submatrix Q I' J)) =\n    (\\<Sum>I' | I' \\<subseteq> {0..<n} \\<and> card I' = k.\n       \\<Sum>J' | J' \\<subseteq> {0..<m} \\<and> card J' = k.\n         Determinant.det (submatrix P I J') *\n         Determinant.det (submatrix A J' I') *\n         Determinant.det (submatrix Q I' J))", "by (simp add: semiring_0_class.sum_distrib_right)"], ["proof (state)\nthis:\n  (\\<Sum>I' | I' \\<subseteq> {0..<n} \\<and> card I' = k.\n     Determinant.det (submatrix (P * A) I I') *\n     Determinant.det (submatrix Q I' J)) =\n  (\\<Sum>I' | I' \\<subseteq> {0..<n} \\<and> card I' = k.\n     \\<Sum>J' | J' \\<subseteq> {0..<m} \\<and> card J' = k.\n       Determinant.det (submatrix P I J') *\n       Determinant.det (submatrix A J' I') *\n       Determinant.det (submatrix Q I' J))\n\ngoal (1 subgoal):\n 1. Gcd (minors A k) dvd Determinant.det (submatrix B I J)", "finally"], ["proof (chain)\npicking this:\n  Determinant.det (submatrix B I J) =\n  (\\<Sum>I' | I' \\<subseteq> {0..<n} \\<and> card I' = k.\n     \\<Sum>J' | J' \\<subseteq> {0..<m} \\<and> card J' = k.\n       Determinant.det (submatrix P I J') *\n       Determinant.det (submatrix A J' I') *\n       Determinant.det (submatrix Q I' J))", "have det_rw: \"det (submatrix B I J) = (\\<Sum>I' | I' \\<subseteq> {0..<n} \\<and> card I' = k.\n    \\<Sum>J' | J' \\<subseteq> {0..<m} \\<and> card J' = k.\n    det (submatrix P I J') * det (submatrix A J' I') * det (submatrix Q I' J))\""], ["proof (prove)\nusing this:\n  Determinant.det (submatrix B I J) =\n  (\\<Sum>I' | I' \\<subseteq> {0..<n} \\<and> card I' = k.\n     \\<Sum>J' | J' \\<subseteq> {0..<m} \\<and> card J' = k.\n       Determinant.det (submatrix P I J') *\n       Determinant.det (submatrix A J' I') *\n       Determinant.det (submatrix Q I' J))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix B I J) =\n    (\\<Sum>I' | I' \\<subseteq> {0..<n} \\<and> card I' = k.\n       \\<Sum>J' | J' \\<subseteq> {0..<m} \\<and> card J' = k.\n         Determinant.det (submatrix P I J') *\n         Determinant.det (submatrix A J' I') *\n         Determinant.det (submatrix Q I' J))", "."], ["proof (state)\nthis:\n  Determinant.det (submatrix B I J) =\n  (\\<Sum>I' | I' \\<subseteq> {0..<n} \\<and> card I' = k.\n     \\<Sum>J' | J' \\<subseteq> {0..<m} \\<and> card J' = k.\n       Determinant.det (submatrix P I J') *\n       Determinant.det (submatrix A J' I') *\n       Determinant.det (submatrix Q I' J))\n\ngoal (1 subgoal):\n 1. Gcd (minors A k) dvd Determinant.det (submatrix B I J)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Gcd (minors A k) dvd Determinant.det (submatrix B I J)", "proof (unfold det_rw, (rule dvd_sum)+)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a aa.\n       \\<lbrakk>a \\<in> {I'. I' \\<subseteq> {0..<n} \\<and> card I' = k};\n        aa \\<in> {J'. J' \\<subseteq> {0..<m} \\<and> card J' = k}\\<rbrakk>\n       \\<Longrightarrow> Gcd (minors A k) dvd\n                         Determinant.det (submatrix P I aa) *\n                         Determinant.det (submatrix A aa a) *\n                         Determinant.det (submatrix Q a J)", "fix I' J'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a aa.\n       \\<lbrakk>a \\<in> {I'. I' \\<subseteq> {0..<n} \\<and> card I' = k};\n        aa \\<in> {J'. J' \\<subseteq> {0..<m} \\<and> card J' = k}\\<rbrakk>\n       \\<Longrightarrow> Gcd (minors A k) dvd\n                         Determinant.det (submatrix P I aa) *\n                         Determinant.det (submatrix A aa a) *\n                         Determinant.det (submatrix Q a J)", "assume I': \"I' \\<in> {I'. I' \\<subseteq> {0..<n} \\<and> card I' = k}\"\n      and J': \"J' \\<in> {J'. J' \\<subseteq> {0..<m} \\<and> card J' = k}\""], ["proof (state)\nthis:\n  I' \\<in> {I'. I' \\<subseteq> {0..<n} \\<and> card I' = k}\n  J' \\<in> {J'. J' \\<subseteq> {0..<m} \\<and> card J' = k}\n\ngoal (1 subgoal):\n 1. \\<And>a aa.\n       \\<lbrakk>a \\<in> {I'. I' \\<subseteq> {0..<n} \\<and> card I' = k};\n        aa \\<in> {J'. J' \\<subseteq> {0..<m} \\<and> card J' = k}\\<rbrakk>\n       \\<Longrightarrow> Gcd (minors A k) dvd\n                         Determinant.det (submatrix P I aa) *\n                         Determinant.det (submatrix A aa a) *\n                         Determinant.det (submatrix Q a J)", "have \"Gcd (minors A k) dvd  det (submatrix A J' I')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Gcd (minors A k) dvd Determinant.det (submatrix A J' I')", "by (rule Gcd_dvd, unfold minors_def, insert A I' J', auto)"], ["proof (state)\nthis:\n  Gcd (minors A k) dvd Determinant.det (submatrix A J' I')\n\ngoal (1 subgoal):\n 1. \\<And>a aa.\n       \\<lbrakk>a \\<in> {I'. I' \\<subseteq> {0..<n} \\<and> card I' = k};\n        aa \\<in> {J'. J' \\<subseteq> {0..<m} \\<and> card J' = k}\\<rbrakk>\n       \\<Longrightarrow> Gcd (minors A k) dvd\n                         Determinant.det (submatrix P I aa) *\n                         Determinant.det (submatrix A aa a) *\n                         Determinant.det (submatrix Q a J)", "then"], ["proof (chain)\npicking this:\n  Gcd (minors A k) dvd Determinant.det (submatrix A J' I')", "show \"Gcd (minors A k) dvd det (submatrix P I J') * det (submatrix A J' I')\n          * det (submatrix Q I' J)\""], ["proof (prove)\nusing this:\n  Gcd (minors A k) dvd Determinant.det (submatrix A J' I')\n\ngoal (1 subgoal):\n 1. Gcd (minors A k) dvd\n    Determinant.det (submatrix P I J') *\n    Determinant.det (submatrix A J' I') *\n    Determinant.det (submatrix Q I' J)", "by auto"], ["proof (state)\nthis:\n  Gcd (minors A k) dvd\n  Determinant.det (submatrix P I J') * Determinant.det (submatrix A J' I') *\n  Determinant.det (submatrix Q I' J)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Gcd (minors A k) dvd Determinant.det (submatrix B I J)\n\ngoal:\nNo subgoals!", "qed"], ["", "(*The conclusion could be simplified since we have S = I.*)"], ["", "lemma det_minors_diagonal2:\n  assumes dA: \"diagonal_mat A\" and A_carrier: \"A \\<in> carrier_mat n m\"\n    and Ik: \"card I = k\" and Jk: \"card J = k\"\n    and r: \"I \\<subseteq> {0..<n}\"\n    and c: \"J \\<subseteq> {0..<m}\" and k: \"k>0\"\n  shows \"det (submatrix A I J) = 0 \\<or> (\\<exists>S. S \\<subseteq> {0..<min n m} \\<and> card S = k \\<and> S=I \\<and>\n   (det (submatrix A I J) = (\\<Prod>i\\<in>S. A $$ (i,i)) \\<or> det (submatrix A I J) = - (\\<Prod>i\\<in>S. A $$ (i,i))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "using Ik Jk r c k"], ["proof (prove)\nusing this:\n  card I = k\n  card J = k\n  I \\<subseteq> {0..<n}\n  J \\<subseteq> {0..<m}\n  0 < k\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "proof (induct k arbitrary: I J)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>I J.\n       \\<lbrakk>card I = 0; card J = 0; I \\<subseteq> {0..<n};\n        J \\<subseteq> {0..<m}; 0 < 0\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (submatrix A I J) = (0::'a) \\<or>\n                         (\\<exists>S\\<subseteq>{0..<min n m}.\n                             card S = 0 \\<and>\n                             S = I \\<and>\n                             (Determinant.det (submatrix A I J) =\n                              (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n                              Determinant.det (submatrix A I J) =\n                              - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. \\<And>k I J.\n       \\<lbrakk>\\<And>I J.\n                   \\<lbrakk>card I = k; card J = k; I \\<subseteq> {0..<n};\n                    J \\<subseteq> {0..<m}; 0 < k\\<rbrakk>\n                   \\<Longrightarrow> Determinant.det (submatrix A I J) =\n                                     (0::'a) \\<or>\n                                     (\\<exists>S\\<subseteq>{0..<min n m}.\n   card S = k \\<and>\n   S = I \\<and>\n   (Determinant.det (submatrix A I J) = (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n    Determinant.det (submatrix A I J) = - (\\<Prod>i\\<in>S. A $$ (i, i))));\n        card I = Suc k; card J = Suc k; I \\<subseteq> {0..<n};\n        J \\<subseteq> {0..<m}; 0 < Suc k\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (submatrix A I J) = (0::'a) \\<or>\n                         (\\<exists>S\\<subseteq>{0..<min n m}.\n                             card S = Suc k \\<and>\n                             S = I \\<and>\n                             (Determinant.det (submatrix A I J) =\n                              (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n                              Determinant.det (submatrix A I J) =\n                              - (\\<Prod>i\\<in>S. A $$ (i, i))))", "case 0"], ["proof (state)\nthis:\n  card I = 0\n  card J = 0\n  I \\<subseteq> {0..<n}\n  J \\<subseteq> {0..<m}\n  0 < 0\n\ngoal (2 subgoals):\n 1. \\<And>I J.\n       \\<lbrakk>card I = 0; card J = 0; I \\<subseteq> {0..<n};\n        J \\<subseteq> {0..<m}; 0 < 0\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (submatrix A I J) = (0::'a) \\<or>\n                         (\\<exists>S\\<subseteq>{0..<min n m}.\n                             card S = 0 \\<and>\n                             S = I \\<and>\n                             (Determinant.det (submatrix A I J) =\n                              (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n                              Determinant.det (submatrix A I J) =\n                              - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. \\<And>k I J.\n       \\<lbrakk>\\<And>I J.\n                   \\<lbrakk>card I = k; card J = k; I \\<subseteq> {0..<n};\n                    J \\<subseteq> {0..<m}; 0 < k\\<rbrakk>\n                   \\<Longrightarrow> Determinant.det (submatrix A I J) =\n                                     (0::'a) \\<or>\n                                     (\\<exists>S\\<subseteq>{0..<min n m}.\n   card S = k \\<and>\n   S = I \\<and>\n   (Determinant.det (submatrix A I J) = (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n    Determinant.det (submatrix A I J) = - (\\<Prod>i\\<in>S. A $$ (i, i))));\n        card I = Suc k; card J = Suc k; I \\<subseteq> {0..<n};\n        J \\<subseteq> {0..<m}; 0 < Suc k\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (submatrix A I J) = (0::'a) \\<or>\n                         (\\<exists>S\\<subseteq>{0..<min n m}.\n                             card S = Suc k \\<and>\n                             S = I \\<and>\n                             (Determinant.det (submatrix A I J) =\n                              (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n                              Determinant.det (submatrix A I J) =\n                              - (\\<Prod>i\\<in>S. A $$ (i, i))))", "then"], ["proof (chain)\npicking this:\n  card I = 0\n  card J = 0\n  I \\<subseteq> {0..<n}\n  J \\<subseteq> {0..<m}\n  0 < 0", "show ?case"], ["proof (prove)\nusing this:\n  card I = 0\n  card J = 0\n  I \\<subseteq> {0..<n}\n  J \\<subseteq> {0..<m}\n  0 < 0\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = 0 \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "by auto"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) = (0::'a) \\<or>\n  (\\<exists>S\\<subseteq>{0..<min n m}.\n      card S = 0 \\<and>\n      S = I \\<and>\n      (Determinant.det (submatrix A I J) =\n       (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n       Determinant.det (submatrix A I J) = - (\\<Prod>i\\<in>S. A $$ (i, i))))\n\ngoal (1 subgoal):\n 1. \\<And>k I J.\n       \\<lbrakk>\\<And>I J.\n                   \\<lbrakk>card I = k; card J = k; I \\<subseteq> {0..<n};\n                    J \\<subseteq> {0..<m}; 0 < k\\<rbrakk>\n                   \\<Longrightarrow> Determinant.det (submatrix A I J) =\n                                     (0::'a) \\<or>\n                                     (\\<exists>S\\<subseteq>{0..<min n m}.\n   card S = k \\<and>\n   S = I \\<and>\n   (Determinant.det (submatrix A I J) = (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n    Determinant.det (submatrix A I J) = - (\\<Prod>i\\<in>S. A $$ (i, i))));\n        card I = Suc k; card J = Suc k; I \\<subseteq> {0..<n};\n        J \\<subseteq> {0..<m}; 0 < Suc k\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (submatrix A I J) = (0::'a) \\<or>\n                         (\\<exists>S\\<subseteq>{0..<min n m}.\n                             card S = Suc k \\<and>\n                             S = I \\<and>\n                             (Determinant.det (submatrix A I J) =\n                              (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n                              Determinant.det (submatrix A I J) =\n                              - (\\<Prod>i\\<in>S. A $$ (i, i))))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k I J.\n       \\<lbrakk>\\<And>I J.\n                   \\<lbrakk>card I = k; card J = k; I \\<subseteq> {0..<n};\n                    J \\<subseteq> {0..<m}; 0 < k\\<rbrakk>\n                   \\<Longrightarrow> Determinant.det (submatrix A I J) =\n                                     (0::'a) \\<or>\n                                     (\\<exists>S\\<subseteq>{0..<min n m}.\n   card S = k \\<and>\n   S = I \\<and>\n   (Determinant.det (submatrix A I J) = (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n    Determinant.det (submatrix A I J) = - (\\<Prod>i\\<in>S. A $$ (i, i))));\n        card I = Suc k; card J = Suc k; I \\<subseteq> {0..<n};\n        J \\<subseteq> {0..<m}; 0 < Suc k\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (submatrix A I J) = (0::'a) \\<or>\n                         (\\<exists>S\\<subseteq>{0..<min n m}.\n                             card S = Suc k \\<and>\n                             S = I \\<and>\n                             (Determinant.det (submatrix A I J) =\n                              (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n                              Determinant.det (submatrix A I J) =\n                              - (\\<Prod>i\\<in>S. A $$ (i, i))))", "case (Suc k)"], ["proof (state)\nthis:\n  \\<lbrakk>card ?I = k; card ?J = k; ?I \\<subseteq> {0..<n};\n   ?J \\<subseteq> {0..<m}; 0 < k\\<rbrakk>\n  \\<Longrightarrow> Determinant.det (submatrix A ?I ?J) = (0::'a) \\<or>\n                    (\\<exists>S\\<subseteq>{0..<min n m}.\n                        card S = k \\<and>\n                        S = ?I \\<and>\n                        (Determinant.det (submatrix A ?I ?J) =\n                         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n                         Determinant.det (submatrix A ?I ?J) =\n                         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n  card I = Suc k\n  card J = Suc k\n  I \\<subseteq> {0..<n}\n  J \\<subseteq> {0..<m}\n  0 < Suc k\n\ngoal (1 subgoal):\n 1. \\<And>k I J.\n       \\<lbrakk>\\<And>I J.\n                   \\<lbrakk>card I = k; card J = k; I \\<subseteq> {0..<n};\n                    J \\<subseteq> {0..<m}; 0 < k\\<rbrakk>\n                   \\<Longrightarrow> Determinant.det (submatrix A I J) =\n                                     (0::'a) \\<or>\n                                     (\\<exists>S\\<subseteq>{0..<min n m}.\n   card S = k \\<and>\n   S = I \\<and>\n   (Determinant.det (submatrix A I J) = (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n    Determinant.det (submatrix A I J) = - (\\<Prod>i\\<in>S. A $$ (i, i))));\n        card I = Suc k; card J = Suc k; I \\<subseteq> {0..<n};\n        J \\<subseteq> {0..<m}; 0 < Suc k\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (submatrix A I J) = (0::'a) \\<or>\n                         (\\<exists>S\\<subseteq>{0..<min n m}.\n                             card S = Suc k \\<and>\n                             S = I \\<and>\n                             (Determinant.det (submatrix A I J) =\n                              (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n                              Determinant.det (submatrix A I J) =\n                              - (\\<Prod>i\\<in>S. A $$ (i, i))))", "note cardI = Suc.prems(1)"], ["proof (state)\nthis:\n  card I = Suc k\n\ngoal (1 subgoal):\n 1. \\<And>k I J.\n       \\<lbrakk>\\<And>I J.\n                   \\<lbrakk>card I = k; card J = k; I \\<subseteq> {0..<n};\n                    J \\<subseteq> {0..<m}; 0 < k\\<rbrakk>\n                   \\<Longrightarrow> Determinant.det (submatrix A I J) =\n                                     (0::'a) \\<or>\n                                     (\\<exists>S\\<subseteq>{0..<min n m}.\n   card S = k \\<and>\n   S = I \\<and>\n   (Determinant.det (submatrix A I J) = (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n    Determinant.det (submatrix A I J) = - (\\<Prod>i\\<in>S. A $$ (i, i))));\n        card I = Suc k; card J = Suc k; I \\<subseteq> {0..<n};\n        J \\<subseteq> {0..<m}; 0 < Suc k\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (submatrix A I J) = (0::'a) \\<or>\n                         (\\<exists>S\\<subseteq>{0..<min n m}.\n                             card S = Suc k \\<and>\n                             S = I \\<and>\n                             (Determinant.det (submatrix A I J) =\n                              (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n                              Determinant.det (submatrix A I J) =\n                              - (\\<Prod>i\\<in>S. A $$ (i, i))))", "note cardJ = Suc.prems(2)"], ["proof (state)\nthis:\n  card J = Suc k\n\ngoal (1 subgoal):\n 1. \\<And>k I J.\n       \\<lbrakk>\\<And>I J.\n                   \\<lbrakk>card I = k; card J = k; I \\<subseteq> {0..<n};\n                    J \\<subseteq> {0..<m}; 0 < k\\<rbrakk>\n                   \\<Longrightarrow> Determinant.det (submatrix A I J) =\n                                     (0::'a) \\<or>\n                                     (\\<exists>S\\<subseteq>{0..<min n m}.\n   card S = k \\<and>\n   S = I \\<and>\n   (Determinant.det (submatrix A I J) = (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n    Determinant.det (submatrix A I J) = - (\\<Prod>i\\<in>S. A $$ (i, i))));\n        card I = Suc k; card J = Suc k; I \\<subseteq> {0..<n};\n        J \\<subseteq> {0..<m}; 0 < Suc k\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (submatrix A I J) = (0::'a) \\<or>\n                         (\\<exists>S\\<subseteq>{0..<min n m}.\n                             card S = Suc k \\<and>\n                             S = I \\<and>\n                             (Determinant.det (submatrix A I J) =\n                              (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n                              Determinant.det (submatrix A I J) =\n                              - (\\<Prod>i\\<in>S. A $$ (i, i))))", "note I = Suc.prems(3)"], ["proof (state)\nthis:\n  I \\<subseteq> {0..<n}\n\ngoal (1 subgoal):\n 1. \\<And>k I J.\n       \\<lbrakk>\\<And>I J.\n                   \\<lbrakk>card I = k; card J = k; I \\<subseteq> {0..<n};\n                    J \\<subseteq> {0..<m}; 0 < k\\<rbrakk>\n                   \\<Longrightarrow> Determinant.det (submatrix A I J) =\n                                     (0::'a) \\<or>\n                                     (\\<exists>S\\<subseteq>{0..<min n m}.\n   card S = k \\<and>\n   S = I \\<and>\n   (Determinant.det (submatrix A I J) = (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n    Determinant.det (submatrix A I J) = - (\\<Prod>i\\<in>S. A $$ (i, i))));\n        card I = Suc k; card J = Suc k; I \\<subseteq> {0..<n};\n        J \\<subseteq> {0..<m}; 0 < Suc k\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (submatrix A I J) = (0::'a) \\<or>\n                         (\\<exists>S\\<subseteq>{0..<min n m}.\n                             card S = Suc k \\<and>\n                             S = I \\<and>\n                             (Determinant.det (submatrix A I J) =\n                              (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n                              Determinant.det (submatrix A I J) =\n                              - (\\<Prod>i\\<in>S. A $$ (i, i))))", "note J = Suc.prems(4)"], ["proof (state)\nthis:\n  J \\<subseteq> {0..<m}\n\ngoal (1 subgoal):\n 1. \\<And>k I J.\n       \\<lbrakk>\\<And>I J.\n                   \\<lbrakk>card I = k; card J = k; I \\<subseteq> {0..<n};\n                    J \\<subseteq> {0..<m}; 0 < k\\<rbrakk>\n                   \\<Longrightarrow> Determinant.det (submatrix A I J) =\n                                     (0::'a) \\<or>\n                                     (\\<exists>S\\<subseteq>{0..<min n m}.\n   card S = k \\<and>\n   S = I \\<and>\n   (Determinant.det (submatrix A I J) = (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n    Determinant.det (submatrix A I J) = - (\\<Prod>i\\<in>S. A $$ (i, i))));\n        card I = Suc k; card J = Suc k; I \\<subseteq> {0..<n};\n        J \\<subseteq> {0..<m}; 0 < Suc k\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (submatrix A I J) = (0::'a) \\<or>\n                         (\\<exists>S\\<subseteq>{0..<min n m}.\n                             card S = Suc k \\<and>\n                             S = I \\<and>\n                             (Determinant.det (submatrix A I J) =\n                              (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n                              Determinant.det (submatrix A I J) =\n                              - (\\<Prod>i\\<in>S. A $$ (i, i))))", "have *: \"{i. i < dim_row A \\<and> i \\<in> I} = I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. i < dim_row A \\<and> i \\<in> I} = I", "using I Ik A_carrier carrier_mat_def"], ["proof (prove)\nusing this:\n  I \\<subseteq> {0..<n}\n  card I = k\n  A \\<in> carrier_mat n m\n  carrier_mat ?nr ?nc = {m. dim_row m = ?nr \\<and> dim_col m = ?nc}\n\ngoal (1 subgoal):\n 1. {i. i < dim_row A \\<and> i \\<in> I} = I", "by auto"], ["proof (state)\nthis:\n  {i. i < dim_row A \\<and> i \\<in> I} = I\n\ngoal (1 subgoal):\n 1. \\<And>k I J.\n       \\<lbrakk>\\<And>I J.\n                   \\<lbrakk>card I = k; card J = k; I \\<subseteq> {0..<n};\n                    J \\<subseteq> {0..<m}; 0 < k\\<rbrakk>\n                   \\<Longrightarrow> Determinant.det (submatrix A I J) =\n                                     (0::'a) \\<or>\n                                     (\\<exists>S\\<subseteq>{0..<min n m}.\n   card S = k \\<and>\n   S = I \\<and>\n   (Determinant.det (submatrix A I J) = (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n    Determinant.det (submatrix A I J) = - (\\<Prod>i\\<in>S. A $$ (i, i))));\n        card I = Suc k; card J = Suc k; I \\<subseteq> {0..<n};\n        J \\<subseteq> {0..<m}; 0 < Suc k\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (submatrix A I J) = (0::'a) \\<or>\n                         (\\<exists>S\\<subseteq>{0..<min n m}.\n                             card S = Suc k \\<and>\n                             S = I \\<and>\n                             (Determinant.det (submatrix A I J) =\n                              (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n                              Determinant.det (submatrix A I J) =\n                              - (\\<Prod>i\\<in>S. A $$ (i, i))))", "have **: \"{j. j < dim_col A \\<and> j \\<in> J} = J\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {j. j < dim_col A \\<and> j \\<in> J} = J", "using J Jk A_carrier carrier_mat_def"], ["proof (prove)\nusing this:\n  J \\<subseteq> {0..<m}\n  card J = k\n  A \\<in> carrier_mat n m\n  carrier_mat ?nr ?nc = {m. dim_row m = ?nr \\<and> dim_col m = ?nc}\n\ngoal (1 subgoal):\n 1. {j. j < dim_col A \\<and> j \\<in> J} = J", "by auto"], ["proof (state)\nthis:\n  {j. j < dim_col A \\<and> j \\<in> J} = J\n\ngoal (1 subgoal):\n 1. \\<And>k I J.\n       \\<lbrakk>\\<And>I J.\n                   \\<lbrakk>card I = k; card J = k; I \\<subseteq> {0..<n};\n                    J \\<subseteq> {0..<m}; 0 < k\\<rbrakk>\n                   \\<Longrightarrow> Determinant.det (submatrix A I J) =\n                                     (0::'a) \\<or>\n                                     (\\<exists>S\\<subseteq>{0..<min n m}.\n   card S = k \\<and>\n   S = I \\<and>\n   (Determinant.det (submatrix A I J) = (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n    Determinant.det (submatrix A I J) = - (\\<Prod>i\\<in>S. A $$ (i, i))));\n        card I = Suc k; card J = Suc k; I \\<subseteq> {0..<n};\n        J \\<subseteq> {0..<m}; 0 < Suc k\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (submatrix A I J) = (0::'a) \\<or>\n                         (\\<exists>S\\<subseteq>{0..<min n m}.\n                             card S = Suc k \\<and>\n                             S = I \\<and>\n                             (Determinant.det (submatrix A I J) =\n                              (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n                              Determinant.det (submatrix A I J) =\n                              - (\\<Prod>i\\<in>S. A $$ (i, i))))", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "proof (cases \"k = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. k \\<noteq> 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "case True"], ["proof (state)\nthis:\n  k = 0\n\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. k \\<noteq> 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "note k0 = True"], ["proof (state)\nthis:\n  k = 0\n\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. k \\<noteq> 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "from this"], ["proof (chain)\npicking this:\n  k = 0", "obtain a where aI: \"I = {a}\""], ["proof (prove)\nusing this:\n  k = 0\n\ngoal (1 subgoal):\n 1. (\\<And>a. I = {a} \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using True cardI card_1_singletonE"], ["proof (prove)\nusing this:\n  k = 0\n  k = 0\n  card I = Suc k\n  \\<lbrakk>card ?A = 1; \\<And>x. ?A = {x} \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>a. I = {a} \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  I = {a}\n\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. k \\<noteq> 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "from this"], ["proof (chain)\npicking this:\n  I = {a}", "obtain b where bJ: \"J = {b}\""], ["proof (prove)\nusing this:\n  I = {a}\n\ngoal (1 subgoal):\n 1. (\\<And>b. J = {b} \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using True cardJ card_1_singletonE"], ["proof (prove)\nusing this:\n  I = {a}\n  k = 0\n  card J = Suc k\n  \\<lbrakk>card ?A = 1; \\<And>x. ?A = {x} \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>b. J = {b} \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  J = {b}\n\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. k \\<noteq> 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "have an: \"a<n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a < n", "using aI I"], ["proof (prove)\nusing this:\n  I = {a}\n  I \\<subseteq> {0..<n}\n\ngoal (1 subgoal):\n 1. a < n", "by auto"], ["proof (state)\nthis:\n  a < n\n\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. k \\<noteq> 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "have bm: \"b<m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b < m", "using bJ J"], ["proof (prove)\nusing this:\n  J = {b}\n  J \\<subseteq> {0..<m}\n\ngoal (1 subgoal):\n 1. b < m", "by auto"], ["proof (state)\nthis:\n  b < m\n\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. k \\<noteq> 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "have sub_carrier: \"submatrix A {a} {b} \\<in> carrier_mat 1 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix A {a} {b} \\<in> carrier_mat 1 1", "unfolding carrier_mat_def submatrix_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Matrix.mat (card {i. i < dim_row A \\<and> i \\<in> {a}})\n     (card {j. j < dim_col A \\<and> j \\<in> {b}})\n     (\\<lambda>(i, j). A $$ (pick {a} i, pick {b} j))\n    \\<in> {m. dim_row m = 1 \\<and> dim_col m = 1}", "using * ** aI bJ"], ["proof (prove)\nusing this:\n  {i. i < dim_row A \\<and> i \\<in> I} = I\n  {j. j < dim_col A \\<and> j \\<in> J} = J\n  I = {a}\n  J = {b}\n\ngoal (1 subgoal):\n 1. Matrix.mat (card {i. i < dim_row A \\<and> i \\<in> {a}})\n     (card {j. j < dim_col A \\<and> j \\<in> {b}})\n     (\\<lambda>(i, j). A $$ (pick {a} i, pick {b} j))\n    \\<in> {m. dim_row m = 1 \\<and> dim_col m = 1}", "by auto"], ["proof (state)\nthis:\n  submatrix A {a} {b} \\<in> carrier_mat 1 1\n\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. k \\<noteq> 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "have 1: \"det (submatrix A {a} {b}) = (submatrix A {a} {b}) $$ (0,0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A {a} {b}) = submatrix A {a} {b} $$ (0, 0)", "by (rule det_singleton[OF sub_carrier])"], ["proof (state)\nthis:\n  Determinant.det (submatrix A {a} {b}) = submatrix A {a} {b} $$ (0, 0)\n\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. k \\<noteq> 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "have 2: \"... = A $$ (a,b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix A {a} {b} $$ (0, 0) = A $$ (a, b)", "by (rule submatrix_singleton_index[OF A_carrier an bm])"], ["proof (state)\nthis:\n  submatrix A {a} {b} $$ (0, 0) = A $$ (a, b)\n\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. k \\<noteq> 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "proof (cases \"A $$ (a,b) \\<noteq> 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. A $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. \\<not> A $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "let ?S=\"{a}\""], ["proof (state)\ngoal (2 subgoals):\n 1. A $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. \\<not> A $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "case True"], ["proof (state)\nthis:\n  A $$ (a, b) \\<noteq> (0::'a)\n\ngoal (2 subgoals):\n 1. A $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. \\<not> A $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "hence ab: \"a = b\""], ["proof (prove)\nusing this:\n  A $$ (a, b) \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. a = b", "using dA A_carrier an bm"], ["proof (prove)\nusing this:\n  A $$ (a, b) \\<noteq> (0::'a)\n  diagonal_mat A\n  A \\<in> carrier_mat n m\n  a < n\n  b < m\n\ngoal (1 subgoal):\n 1. a = b", "unfolding diagonal_mat_def carrier_mat_def"], ["proof (prove)\nusing this:\n  A $$ (a, b) \\<noteq> (0::'a)\n  \\<forall>i<dim_row A.\n     \\<forall>j<dim_col A.\n        i \\<noteq> j \\<longrightarrow> A $$ (i, j) = (0::'a)\n  A \\<in> {ma. dim_row ma = n \\<and> dim_col ma = m}\n  a < n\n  b < m\n\ngoal (1 subgoal):\n 1. a = b", "by auto"], ["proof (state)\nthis:\n  a = b\n\ngoal (2 subgoals):\n 1. A $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. \\<not> A $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "hence \"?S \\<subseteq> {0..<min n m}\""], ["proof (prove)\nusing this:\n  a = b\n\ngoal (1 subgoal):\n 1. {a} \\<subseteq> {0..<min n m}", "using an bm"], ["proof (prove)\nusing this:\n  a = b\n  a < n\n  b < m\n\ngoal (1 subgoal):\n 1. {a} \\<subseteq> {0..<min n m}", "by auto"], ["proof (state)\nthis:\n  {a} \\<subseteq> {0..<min n m}\n\ngoal (2 subgoals):\n 1. A $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. \\<not> A $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "moreover"], ["proof (state)\nthis:\n  {a} \\<subseteq> {0..<min n m}\n\ngoal (2 subgoals):\n 1. A $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. \\<not> A $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "have \"det (submatrix A {a} {b}) = (\\<Prod>i\\<in>?S. A $$ (i, i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A {a} {b}) = (\\<Prod>i\\<in>{a}. A $$ (i, i))", "using 1 2 ab"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A {a} {b}) = submatrix A {a} {b} $$ (0, 0)\n  submatrix A {a} {b} $$ (0, 0) = A $$ (a, b)\n  a = b\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A {a} {b}) = (\\<Prod>i\\<in>{a}. A $$ (i, i))", "by auto"], ["proof (state)\nthis:\n  Determinant.det (submatrix A {a} {b}) = (\\<Prod>i\\<in>{a}. A $$ (i, i))\n\ngoal (2 subgoals):\n 1. A $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. \\<not> A $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "moreover"], ["proof (state)\nthis:\n  Determinant.det (submatrix A {a} {b}) = (\\<Prod>i\\<in>{a}. A $$ (i, i))\n\ngoal (2 subgoals):\n 1. A $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. \\<not> A $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "have \"card ?S = Suc k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {a} = Suc k", "using k0"], ["proof (prove)\nusing this:\n  k = 0\n\ngoal (1 subgoal):\n 1. card {a} = Suc k", "by auto"], ["proof (state)\nthis:\n  card {a} = Suc k\n\ngoal (2 subgoals):\n 1. A $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. \\<not> A $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "ultimately"], ["proof (chain)\npicking this:\n  {a} \\<subseteq> {0..<min n m}\n  Determinant.det (submatrix A {a} {b}) = (\\<Prod>i\\<in>{a}. A $$ (i, i))\n  card {a} = Suc k", "show ?thesis"], ["proof (prove)\nusing this:\n  {a} \\<subseteq> {0..<min n m}\n  Determinant.det (submatrix A {a} {b}) = (\\<Prod>i\\<in>{a}. A $$ (i, i))\n  card {a} = Suc k\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "using an bm"], ["proof (prove)\nusing this:\n  {a} \\<subseteq> {0..<min n m}\n  Determinant.det (submatrix A {a} {b}) = (\\<Prod>i\\<in>{a}. A $$ (i, i))\n  card {a} = Suc k\n  a < n\n  b < m\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "unfolding aI bJ"], ["proof (prove)\nusing this:\n  {a} \\<subseteq> {0..<min n m}\n  Determinant.det (submatrix A {a} {b}) = (\\<Prod>i\\<in>{a}. A $$ (i, i))\n  card {a} = Suc k\n  a < n\n  b < m\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A {a} {b}) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = {a} \\<and>\n        (Determinant.det (submatrix A {a} {b}) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A {a} {b}) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "by blast"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) = (0::'a) \\<or>\n  (\\<exists>S\\<subseteq>{0..<min n m}.\n      card S = Suc k \\<and>\n      S = I \\<and>\n      (Determinant.det (submatrix A I J) =\n       (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n       Determinant.det (submatrix A I J) = - (\\<Prod>i\\<in>S. A $$ (i, i))))\n\ngoal (1 subgoal):\n 1. \\<not> A $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> A $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "case False"], ["proof (state)\nthis:\n  \\<not> A $$ (a, b) \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> A $$ (a, b) \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "then"], ["proof (chain)\npicking this:\n  \\<not> A $$ (a, b) \\<noteq> (0::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> A $$ (a, b) \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "using 1 2 aI bJ"], ["proof (prove)\nusing this:\n  \\<not> A $$ (a, b) \\<noteq> (0::'a)\n  Determinant.det (submatrix A {a} {b}) = submatrix A {a} {b} $$ (0, 0)\n  submatrix A {a} {b} $$ (0, 0) = A $$ (a, b)\n  I = {a}\n  J = {b}\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "by auto"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) = (0::'a) \\<or>\n  (\\<exists>S\\<subseteq>{0..<min n m}.\n      card S = Suc k \\<and>\n      S = I \\<and>\n      (Determinant.det (submatrix A I J) =\n       (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n       Determinant.det (submatrix A I J) = - (\\<Prod>i\\<in>S. A $$ (i, i))))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) = (0::'a) \\<or>\n  (\\<exists>S\\<subseteq>{0..<min n m}.\n      card S = Suc k \\<and>\n      S = I \\<and>\n      (Determinant.det (submatrix A I J) =\n       (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n       Determinant.det (submatrix A I J) = - (\\<Prod>i\\<in>S. A $$ (i, i))))\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "case False"], ["proof (state)\nthis:\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "hence k0: \"0 < k\""], ["proof (prove)\nusing this:\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < k", "by simp"], ["proof (state)\nthis:\n  0 < k\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "have k: \"k < min n m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k < min n m", "by (metis I J cardI cardJ le_imp_less_Suc less_Suc_eq_le min.commute\n          min_def not_less subset_eq_atLeast0_lessThan_card)"], ["proof (state)\nthis:\n  k < min n m\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "have subIJ_carrier: \"(submatrix A I J) \\<in> carrier_mat (Suc k) (Suc k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix A I J \\<in> carrier_mat (Suc k) (Suc k)", "unfolding carrier_mat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix A I J \\<in> {m. dim_row m = Suc k \\<and> dim_col m = Suc k}", "using * ** cardI cardJ"], ["proof (prove)\nusing this:\n  {i. i < dim_row A \\<and> i \\<in> I} = I\n  {j. j < dim_col A \\<and> j \\<in> J} = J\n  card I = Suc k\n  card J = Suc k\n\ngoal (1 subgoal):\n 1. submatrix A I J \\<in> {m. dim_row m = Suc k \\<and> dim_col m = Suc k}", "unfolding submatrix_def"], ["proof (prove)\nusing this:\n  {i. i < dim_row A \\<and> i \\<in> I} = I\n  {j. j < dim_col A \\<and> j \\<in> J} = J\n  card I = Suc k\n  card J = Suc k\n\ngoal (1 subgoal):\n 1. Matrix.mat (card {i. i < dim_row A \\<and> i \\<in> I})\n     (card {j. j < dim_col A \\<and> j \\<in> J})\n     (\\<lambda>(i, j). A $$ (pick I i, pick J j))\n    \\<in> {m. dim_row m = Suc k \\<and> dim_col m = Suc k}", "by auto"], ["proof (state)\nthis:\n  submatrix A I J \\<in> carrier_mat (Suc k) (Suc k)\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "obtain b' where b'k: \"b' < Suc k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>b'. b' < Suc k \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  b' < Suc k\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "let ?f=\"\\<lambda>i. submatrix A I J $$ (i, b') * cofactor (submatrix A I J) i b'\""], ["proof (state)\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "have det_rw: \"det (submatrix A I J)\n        = (\\<Sum>i<Suc k. submatrix A I J $$ (i, b') * cofactor (submatrix A I J) i b')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) =\n    (\\<Sum>i<Suc k.\n        submatrix A I J $$ (i, b') *\n        Determinant.cofactor (submatrix A I J) i b')", "by (rule laplace_expansion_column[OF subIJ_carrier b'k])"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) =\n  (\\<Sum>i<Suc k.\n      submatrix A I J $$ (i, b') *\n      Determinant.cofactor (submatrix A I J) i b')\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "proof (cases \"\\<exists>a'<Suc k. submatrix A I J $$ (a',b') \\<noteq> 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "case True"], ["proof (state)\nthis:\n  \\<exists>a'<Suc k. submatrix A I J $$ (a', b') \\<noteq> (0::'a)\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "obtain a' where sub_IJ_0: \"submatrix A I J $$ (a',b') \\<noteq> 0\"\n        and a'k: \"a' < Suc k\"\n        and unique: \"\\<forall>j. j<Suc k \\<and> submatrix A I J $$ (j,b') \\<noteq> 0 \\<longrightarrow> j = a'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a'.\n        \\<lbrakk>submatrix A I J $$ (a', b') \\<noteq> (0::'a); a' < Suc k;\n         \\<forall>j.\n            j < Suc k \\<and>\n            submatrix A I J $$ (j, b') \\<noteq> (0::'a) \\<longrightarrow>\n            j = a'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using diagonal_imp_submatrix_element_not0[OF dA A_carrier cardI cardJ I J b'k True]"], ["proof (prove)\nusing this:\n  \\<exists>!i. i < Suc k \\<and> submatrix A I J $$ (i, b') \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<And>a'.\n        \\<lbrakk>submatrix A I J $$ (a', b') \\<noteq> (0::'a); a' < Suc k;\n         \\<forall>j.\n            j < Suc k \\<and>\n            submatrix A I J $$ (j, b') \\<noteq> (0::'a) \\<longrightarrow>\n            j = a'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  submatrix A I J $$ (a', b') \\<noteq> (0::'a)\n  a' < Suc k\n  \\<forall>j.\n     j < Suc k \\<and>\n     submatrix A I J $$ (j, b') \\<noteq> (0::'a) \\<longrightarrow>\n     j = a'\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "have \"submatrix A I J $$ (a', b') = A $$ (pick I a', pick J b')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix A I J $$ (a', b') = A $$ (pick I a', pick J b')", "by (rule submatrix_index, auto simp add: \"*\" a'k cardI \"**\" b'k cardJ)"], ["proof (state)\nthis:\n  submatrix A I J $$ (a', b') = A $$ (pick I a', pick J b')\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "from this"], ["proof (chain)\npicking this:\n  submatrix A I J $$ (a', b') = A $$ (pick I a', pick J b')", "obtain a b where an: \"a < n\" and bm:  \"b < m\"\n        and sub_index: \"submatrix A I J $$ (a', b') = A $$ (a, b)\"\n        and pick_a: \"pick I a' = a\" and pick_b: \"pick J b' = b\""], ["proof (prove)\nusing this:\n  submatrix A I J $$ (a', b') = A $$ (pick I a', pick J b')\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        \\<lbrakk>a < n; b < m; submatrix A I J $$ (a', b') = A $$ (a, b);\n         pick I a' = a; pick J b' = b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using * ** A_carrier a'k b'k cardI cardJ pick_le"], ["proof (prove)\nusing this:\n  submatrix A I J $$ (a', b') = A $$ (pick I a', pick J b')\n  {i. i < dim_row A \\<and> i \\<in> I} = I\n  {j. j < dim_col A \\<and> j \\<in> J} = J\n  A \\<in> carrier_mat n m\n  a' < Suc k\n  b' < Suc k\n  card I = Suc k\n  card J = Suc k\n  ?n < card {a. a < ?i \\<and> a \\<in> ?S} \\<Longrightarrow> pick ?S ?n < ?i\n\ngoal (1 subgoal):\n 1. (\\<And>a b.\n        \\<lbrakk>a < n; b < m; submatrix A I J $$ (a', b') = A $$ (a, b);\n         pick I a' = a; pick J b' = b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  a < n\n  b < m\n  submatrix A I J $$ (a', b') = A $$ (a, b)\n  pick I a' = a\n  pick J b' = b\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "obtain I' where aI': \"I = insert a I'\" and a_notin: \"a \\<notin> I'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>I'.\n        \\<lbrakk>I = insert a I'; a \\<notin> I'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis Set.set_insert a'k cardI pick_a pick_in_set_le)"], ["proof (state)\nthis:\n  I = insert a I'\n  a \\<notin> I'\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "obtain J' where bJ': \"J = insert b J'\" and b_notin: \"b \\<notin> J'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>J'.\n        \\<lbrakk>J = insert b J'; b \\<notin> J'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis Set.set_insert b'k cardJ pick_b pick_in_set_le)"], ["proof (state)\nthis:\n  J = insert b J'\n  b \\<notin> J'\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "have Suc_k0: \"0 < Suc k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 < Suc k", "by simp"], ["proof (state)\nthis:\n  0 < Suc k\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "have aI: \"a \\<in> I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> I", "using aI'"], ["proof (prove)\nusing this:\n  I = insert a I'\n\ngoal (1 subgoal):\n 1. a \\<in> I", "by auto"], ["proof (state)\nthis:\n  a \\<in> I\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "have bJ: \"b \\<in> J\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<in> J", "using bJ'"], ["proof (prove)\nusing this:\n  J = insert b J'\n\ngoal (1 subgoal):\n 1. b \\<in> J", "by auto"], ["proof (state)\nthis:\n  b \\<in> J\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "have cardI':  \"card I' = k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card I' = k", "by (metis aI' a_notin cardI card.infinite card_insert_disjoint\n            finite_insert nat.inject nat.simps(3))"], ["proof (state)\nthis:\n  card I' = k\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "have cardJ':  \"card J' = k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card J' = k", "by (metis bJ' b_notin cardJ card.infinite card_insert_disjoint\n            finite_insert nat.inject nat.simps(3))"], ["proof (state)\nthis:\n  card J' = k\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "have I': \"I' \\<subseteq> {0..<n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I' \\<subseteq> {0..<n}", "using I aI'"], ["proof (prove)\nusing this:\n  I \\<subseteq> {0..<n}\n  I = insert a I'\n\ngoal (1 subgoal):\n 1. I' \\<subseteq> {0..<n}", "by blast"], ["proof (state)\nthis:\n  I' \\<subseteq> {0..<n}\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "have J': \"J' \\<subseteq> {0..<m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. J' \\<subseteq> {0..<m}", "using J bJ'"], ["proof (prove)\nusing this:\n  J \\<subseteq> {0..<m}\n  J = insert b J'\n\ngoal (1 subgoal):\n 1. J' \\<subseteq> {0..<m}", "by blast"], ["proof (state)\nthis:\n  J' \\<subseteq> {0..<m}\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "have det_sub_I'J': \"det (submatrix A I' J') = 0 \\<or> (\\<exists>S\\<subseteq>{0..<min n m}. card S = k \\<and> S=I'\n        \\<and> (det (submatrix A I' J') = (\\<Prod>i\\<in>S. A $$ (i, i))\n        \\<or> det (submatrix A I' J') = - (\\<Prod>i\\<in>S. A $$ (i, i))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = k \\<and>\n        S = I' \\<and>\n        (Determinant.det (submatrix A I' J') =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I' J') =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "proof (rule Suc.hyps[OF cardI' cardJ' _ _ k0])"], ["proof (state)\ngoal (2 subgoals):\n 1. I' \\<subseteq> {0..<n}\n 2. J' \\<subseteq> {0..<m}", "show \"I' \\<subseteq> {0..<n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I' \\<subseteq> {0..<n}", "using I aI'"], ["proof (prove)\nusing this:\n  I \\<subseteq> {0..<n}\n  I = insert a I'\n\ngoal (1 subgoal):\n 1. I' \\<subseteq> {0..<n}", "by blast"], ["proof (state)\nthis:\n  I' \\<subseteq> {0..<n}\n\ngoal (1 subgoal):\n 1. J' \\<subseteq> {0..<m}", "show \"J' \\<subseteq> {0..<m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. J' \\<subseteq> {0..<m}", "using J bJ'"], ["proof (prove)\nusing this:\n  J \\<subseteq> {0..<m}\n  J = insert b J'\n\ngoal (1 subgoal):\n 1. J' \\<subseteq> {0..<m}", "by blast"], ["proof (state)\nthis:\n  J' \\<subseteq> {0..<m}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I' J') = (0::'a) \\<or>\n  (\\<exists>S\\<subseteq>{0..<min n m}.\n      card S = k \\<and>\n      S = I' \\<and>\n      (Determinant.det (submatrix A I' J') =\n       (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n       Determinant.det (submatrix A I' J') =\n       - (\\<Prod>i\\<in>S. A $$ (i, i))))\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "have mat_delete_sub:\n        \"mat_delete (submatrix A (insert a I') (insert b J')) a' b' = submatrix A I' J'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mat_delete (submatrix A (insert a I') (insert b J')) a' b' =\n    submatrix A I' J'", "by (rule mat_delete_submatrix_insert[OF A_carrier cardI' cardJ' I' J' an bm k\n              a_notin b_notin a'k b'k],insert pick_a pick_b aI' bJ', auto)"], ["proof (state)\nthis:\n  mat_delete (submatrix A (insert a I') (insert b J')) a' b' =\n  submatrix A I' J'\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "have set_rw: \"{0..<Suc k} = insert a' ({0..<Suc k}-{a'})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {0..<Suc k} = insert a' ({0..<Suc k} - {a'})", "by (simp add: a'k insert_absorb)"], ["proof (state)\nthis:\n  {0..<Suc k} = insert a' ({0..<Suc k} - {a'})\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "have rw0: \"sum ?f ({0..<Suc k}-{a'}) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{0..<Suc k} - {a'}.\n       submatrix A I J $$ (i, b') *\n       Determinant.cofactor (submatrix A I J) i b') =\n    (0::'a)", "by (rule sum.neutral, insert unique, auto)"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{0..<Suc k} - {a'}.\n     submatrix A I J $$ (i, b') *\n     Determinant.cofactor (submatrix A I J) i b') =\n  (0::'a)\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "have \"det (submatrix A I J)\n        = (\\<Sum>i<Suc k. submatrix A I J $$ (i, b') * cofactor (submatrix A I J) i b')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) =\n    (\\<Sum>i<Suc k.\n        submatrix A I J $$ (i, b') *\n        Determinant.cofactor (submatrix A I J) i b')", "by (rule laplace_expansion_column[OF subIJ_carrier b'k])"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) =\n  (\\<Sum>i<Suc k.\n      submatrix A I J $$ (i, b') *\n      Determinant.cofactor (submatrix A I J) i b')\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "also"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) =\n  (\\<Sum>i<Suc k.\n      submatrix A I J $$ (i, b') *\n      Determinant.cofactor (submatrix A I J) i b')\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "have \"... = ?f a' + sum ?f ({0..<Suc k}-{a'})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<Suc k.\n        submatrix A I J $$ (i, b') *\n        Determinant.cofactor (submatrix A I J) i b') =\n    submatrix A I J $$ (a', b') *\n    Determinant.cofactor (submatrix A I J) a' b' +\n    (\\<Sum>i\\<in>{0..<Suc k} - {a'}.\n       submatrix A I J $$ (i, b') *\n       Determinant.cofactor (submatrix A I J) i b')", "by (metis (no_types, lifting) Diff_iff atLeast0LessThan finite_atLeastLessThan\n            finite_insert set_rw singletonI sum.insert)"], ["proof (state)\nthis:\n  (\\<Sum>i<Suc k.\n      submatrix A I J $$ (i, b') *\n      Determinant.cofactor (submatrix A I J) i b') =\n  submatrix A I J $$ (a', b') *\n  Determinant.cofactor (submatrix A I J) a' b' +\n  (\\<Sum>i\\<in>{0..<Suc k} - {a'}.\n     submatrix A I J $$ (i, b') *\n     Determinant.cofactor (submatrix A I J) i b')\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "also"], ["proof (state)\nthis:\n  (\\<Sum>i<Suc k.\n      submatrix A I J $$ (i, b') *\n      Determinant.cofactor (submatrix A I J) i b') =\n  submatrix A I J $$ (a', b') *\n  Determinant.cofactor (submatrix A I J) a' b' +\n  (\\<Sum>i\\<in>{0..<Suc k} - {a'}.\n     submatrix A I J $$ (i, b') *\n     Determinant.cofactor (submatrix A I J) i b')\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "have \"... = ?f a'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix A I J $$ (a', b') *\n    Determinant.cofactor (submatrix A I J) a' b' +\n    (\\<Sum>i\\<in>{0..<Suc k} - {a'}.\n       submatrix A I J $$ (i, b') *\n       Determinant.cofactor (submatrix A I J) i b') =\n    submatrix A I J $$ (a', b') *\n    Determinant.cofactor (submatrix A I J) a' b'", "using rw0"], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>{0..<Suc k} - {a'}.\n     submatrix A I J $$ (i, b') *\n     Determinant.cofactor (submatrix A I J) i b') =\n  (0::'a)\n\ngoal (1 subgoal):\n 1. submatrix A I J $$ (a', b') *\n    Determinant.cofactor (submatrix A I J) a' b' +\n    (\\<Sum>i\\<in>{0..<Suc k} - {a'}.\n       submatrix A I J $$ (i, b') *\n       Determinant.cofactor (submatrix A I J) i b') =\n    submatrix A I J $$ (a', b') *\n    Determinant.cofactor (submatrix A I J) a' b'", "unfolding cofactor_def"], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>{0..<Suc k} - {a'}.\n     submatrix A I J $$ (i, b') *\n     ((- (1::'a)) ^ (i + b') *\n      Determinant.det (mat_delete (submatrix A I J) i b'))) =\n  (0::'a)\n\ngoal (1 subgoal):\n 1. submatrix A I J $$ (a', b') *\n    ((- (1::'a)) ^ (a' + b') *\n     Determinant.det (mat_delete (submatrix A I J) a' b')) +\n    (\\<Sum>i\\<in>{0..<Suc k} - {a'}.\n       submatrix A I J $$ (i, b') *\n       ((- (1::'a)) ^ (i + b') *\n        Determinant.det (mat_delete (submatrix A I J) i b'))) =\n    submatrix A I J $$ (a', b') *\n    ((- (1::'a)) ^ (a' + b') *\n     Determinant.det (mat_delete (submatrix A I J) a' b'))", "by auto"], ["proof (state)\nthis:\n  submatrix A I J $$ (a', b') *\n  Determinant.cofactor (submatrix A I J) a' b' +\n  (\\<Sum>i\\<in>{0..<Suc k} - {a'}.\n     submatrix A I J $$ (i, b') *\n     Determinant.cofactor (submatrix A I J) i b') =\n  submatrix A I J $$ (a', b') * Determinant.cofactor (submatrix A I J) a' b'\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "also"], ["proof (state)\nthis:\n  submatrix A I J $$ (a', b') *\n  Determinant.cofactor (submatrix A I J) a' b' +\n  (\\<Sum>i\\<in>{0..<Suc k} - {a'}.\n     submatrix A I J $$ (i, b') *\n     Determinant.cofactor (submatrix A I J) i b') =\n  submatrix A I J $$ (a', b') * Determinant.cofactor (submatrix A I J) a' b'\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "have \"... = submatrix A I J $$ (a', b') * ((-1) ^ (a' + b') * det (submatrix A I' J'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix A I J $$ (a', b') *\n    Determinant.cofactor (submatrix A I J) a' b' =\n    submatrix A I J $$ (a', b') *\n    ((- (1::'a)) ^ (a' + b') * Determinant.det (submatrix A I' J'))", "unfolding cofactor_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix A I J $$ (a', b') *\n    ((- (1::'a)) ^ (a' + b') *\n     Determinant.det (mat_delete (submatrix A I J) a' b')) =\n    submatrix A I J $$ (a', b') *\n    ((- (1::'a)) ^ (a' + b') * Determinant.det (submatrix A I' J'))", "using mat_delete_sub aI' bJ'"], ["proof (prove)\nusing this:\n  mat_delete (submatrix A (insert a I') (insert b J')) a' b' =\n  submatrix A I' J'\n  I = insert a I'\n  J = insert b J'\n\ngoal (1 subgoal):\n 1. submatrix A I J $$ (a', b') *\n    ((- (1::'a)) ^ (a' + b') *\n     Determinant.det (mat_delete (submatrix A I J) a' b')) =\n    submatrix A I J $$ (a', b') *\n    ((- (1::'a)) ^ (a' + b') * Determinant.det (submatrix A I' J'))", "by simp"], ["proof (state)\nthis:\n  submatrix A I J $$ (a', b') *\n  Determinant.cofactor (submatrix A I J) a' b' =\n  submatrix A I J $$ (a', b') *\n  ((- (1::'a)) ^ (a' + b') * Determinant.det (submatrix A I' J'))\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "finally"], ["proof (chain)\npicking this:\n  Determinant.det (submatrix A I J) =\n  submatrix A I J $$ (a', b') *\n  ((- (1::'a)) ^ (a' + b') * Determinant.det (submatrix A I' J'))", "have det_submatrix_IJ: \"det (submatrix A I J)\n         = A $$ (a, b) * ((- 1) ^ (a' + b') * det (submatrix A I' J'))\""], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I J) =\n  submatrix A I J $$ (a', b') *\n  ((- (1::'a)) ^ (a' + b') * Determinant.det (submatrix A I' J'))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) =\n    A $$ (a, b) *\n    ((- (1::'a)) ^ (a' + b') * Determinant.det (submatrix A I' J'))", "unfolding sub_index"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I J) =\n  A $$ (a, b) *\n  ((- (1::'a)) ^ (a' + b') * Determinant.det (submatrix A I' J'))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) =\n    A $$ (a, b) *\n    ((- (1::'a)) ^ (a' + b') * Determinant.det (submatrix A I' J'))", "."], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) =\n  A $$ (a, b) *\n  ((- (1::'a)) ^ (a' + b') * Determinant.det (submatrix A I' J'))\n\ngoal (2 subgoals):\n 1. \\<exists>a'<Suc k.\n       submatrix A I J $$ (a', b') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "proof (cases \"det (submatrix A I' J') = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Determinant.det (submatrix A I' J') = (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. Determinant.det (submatrix A I' J') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "case True"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I' J') = (0::'a)\n\ngoal (2 subgoals):\n 1. Determinant.det (submatrix A I' J') = (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. Determinant.det (submatrix A I' J') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "then"], ["proof (chain)\npicking this:\n  Determinant.det (submatrix A I' J') = (0::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I' J') = (0::'a)\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "using det_submatrix_IJ"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I' J') = (0::'a)\n  Determinant.det (submatrix A I J) =\n  A $$ (a, b) *\n  ((- (1::'a)) ^ (a' + b') * Determinant.det (submatrix A I' J'))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "by auto"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) = (0::'a) \\<or>\n  (\\<exists>S\\<subseteq>{0..<min n m}.\n      card S = Suc k \\<and>\n      S = I \\<and>\n      (Determinant.det (submatrix A I J) =\n       (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n       Determinant.det (submatrix A I J) = - (\\<Prod>i\\<in>S. A $$ (i, i))))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "case False"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I' J') \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "note det_not0 = False"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I' J') \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "from this"], ["proof (chain)\npicking this:\n  Determinant.det (submatrix A I' J') \\<noteq> (0::'a)", "obtain xs where prod_list_xs: \"det (submatrix A I' J') = (\\<Prod>i\\<in>xs. A $$ (i, i))\n          \\<or> det (submatrix A I' J') = - (\\<Prod>i\\<in>xs. A $$ (i, i))\"\n          and xs: \"xs\\<subseteq>{0..<min n m}\"\n          and length_xs: \"card xs = k\"\n          and xs_I': \"xs=I'\""], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I' J') \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<And>xs.\n        \\<lbrakk>Determinant.det (submatrix A I' J') =\n                 (\\<Prod>i\\<in>xs. A $$ (i, i)) \\<or>\n                 Determinant.det (submatrix A I' J') =\n                 - (\\<Prod>i\\<in>xs. A $$ (i, i));\n         xs \\<subseteq> {0..<min n m}; card xs = k; xs = I'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using det_sub_I'J'"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I' J') \\<noteq> (0::'a)\n  Determinant.det (submatrix A I' J') = (0::'a) \\<or>\n  (\\<exists>S\\<subseteq>{0..<min n m}.\n      card S = k \\<and>\n      S = I' \\<and>\n      (Determinant.det (submatrix A I' J') =\n       (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n       Determinant.det (submatrix A I' J') =\n       - (\\<Prod>i\\<in>S. A $$ (i, i))))\n\ngoal (1 subgoal):\n 1. (\\<And>xs.\n        \\<lbrakk>Determinant.det (submatrix A I' J') =\n                 (\\<Prod>i\\<in>xs. A $$ (i, i)) \\<or>\n                 Determinant.det (submatrix A I' J') =\n                 - (\\<Prod>i\\<in>xs. A $$ (i, i));\n         xs \\<subseteq> {0..<min n m}; card xs = k; xs = I'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I' J') = (\\<Prod>i\\<in>xs. A $$ (i, i)) \\<or>\n  Determinant.det (submatrix A I' J') = - (\\<Prod>i\\<in>xs. A $$ (i, i))\n  xs \\<subseteq> {0..<min n m}\n  card xs = k\n  xs = I'\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "let ?ys = \"insert a xs\""], ["proof (state)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "have a_notin_xs: \"a \\<notin> xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<notin> xs", "by (simp add: xs_I' a_notin)"], ["proof (state)\nthis:\n  a \\<notin> xs\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "have length_ys: \"card ?ys = Suc k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (insert a xs) = Suc k", "using length_xs a_notin_xs"], ["proof (prove)\nusing this:\n  card xs = k\n  a \\<notin> xs\n\ngoal (1 subgoal):\n 1. card (insert a xs) = Suc k", "by (simp add: card_ge_0_finite k0)"], ["proof (state)\nthis:\n  card (insert a xs) = Suc k\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "have a_eq_b: \"a=b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a = b", "using A_carrier an bm sub_IJ_0 sub_index dA"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat n m\n  a < n\n  b < m\n  submatrix A I J $$ (a', b') \\<noteq> (0::'a)\n  submatrix A I J $$ (a', b') = A $$ (a, b)\n  diagonal_mat A\n\ngoal (1 subgoal):\n 1. a = b", "unfolding diagonal_mat_def"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat n m\n  a < n\n  b < m\n  submatrix A I J $$ (a', b') \\<noteq> (0::'a)\n  submatrix A I J $$ (a', b') = A $$ (a, b)\n  \\<forall>i<dim_row A.\n     \\<forall>j<dim_col A.\n        i \\<noteq> j \\<longrightarrow> A $$ (i, j) = (0::'a)\n\ngoal (1 subgoal):\n 1. a = b", "by auto"], ["proof (state)\nthis:\n  a = b\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "have A_aa_in: \"A$$(a,a) \\<in> {A $$ (i, i) |i. i < min n m \\<and> A $$ (i, i) \\<noteq> 0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A $$ (a, a)\n    \\<in> {A $$ (i, i) |i. i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)}", "using a_eq_b an bm sub_IJ_0 sub_index"], ["proof (prove)\nusing this:\n  a = b\n  a < n\n  b < m\n  submatrix A I J $$ (a', b') \\<noteq> (0::'a)\n  submatrix A I J $$ (a', b') = A $$ (a, b)\n\ngoal (1 subgoal):\n 1. A $$ (a, a)\n    \\<in> {A $$ (i, i) |i. i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)}", "by auto"], ["proof (state)\nthis:\n  A $$ (a, a)\n  \\<in> {A $$ (i, i) |i. i < min n m \\<and> A $$ (i, i) \\<noteq> (0::'a)}\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') \\<noteq> (0::'a) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "proof (cases \"even (a'+b')\")"], ["proof (state)\ngoal (2 subgoals):\n 1. even (a' + b') \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. odd (a' + b') \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "case True"], ["proof (state)\nthis:\n  even (a' + b')\n\ngoal (2 subgoals):\n 1. even (a' + b') \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. odd (a' + b') \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "have det_submatrix_IJ: \"det (submatrix A I J) = A $$ (a, b) * det (submatrix A I' J')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) =\n    A $$ (a, b) * Determinant.det (submatrix A I' J')", "using det_submatrix_IJ True"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I J) =\n  A $$ (a, b) *\n  ((- (1::'a)) ^ (a' + b') * Determinant.det (submatrix A I' J'))\n  even (a' + b')\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) =\n    A $$ (a, b) * Determinant.det (submatrix A I' J')", "by auto"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) =\n  A $$ (a, b) * Determinant.det (submatrix A I' J')\n\ngoal (2 subgoals):\n 1. even (a' + b') \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. odd (a' + b') \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "proof (cases \"det (submatrix A I' J') = (\\<Prod>i\\<in>xs. A $$ (i, i))\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Determinant.det (submatrix A I' J') =\n    (\\<Prod>i\\<in>xs. A $$ (i, i)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. Determinant.det (submatrix A I' J') \\<noteq>\n    (\\<Prod>i\\<in>xs. A $$ (i, i)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "case True"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I' J') = (\\<Prod>i\\<in>xs. A $$ (i, i))\n\ngoal (2 subgoals):\n 1. Determinant.det (submatrix A I' J') =\n    (\\<Prod>i\\<in>xs. A $$ (i, i)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. Determinant.det (submatrix A I' J') \\<noteq>\n    (\\<Prod>i\\<in>xs. A $$ (i, i)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "have \"det (submatrix A I J) = (\\<Prod>i\\<in>?ys. A $$ (i, i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) =\n    (\\<Prod>i\\<in>insert a xs. A $$ (i, i))", "using det_submatrix_IJ"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I J) =\n  A $$ (a, b) * Determinant.det (submatrix A I' J')\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) =\n    (\\<Prod>i\\<in>insert a xs. A $$ (i, i))", "unfolding True a_eq_b"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I J) =\n  A $$ (b, b) * (\\<Prod>i\\<in>xs. A $$ (i, i))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) =\n    (\\<Prod>i\\<in>insert b xs. A $$ (i, i))", "by (metis (no_types, lifting) a_notin_xs a_eq_b\n                  card_ge_0_finite k0 length_xs prod.insert)"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) =\n  (\\<Prod>i\\<in>insert a xs. A $$ (i, i))\n\ngoal (2 subgoals):\n 1. Determinant.det (submatrix A I' J') =\n    (\\<Prod>i\\<in>xs. A $$ (i, i)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. Determinant.det (submatrix A I' J') \\<noteq>\n    (\\<Prod>i\\<in>xs. A $$ (i, i)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "then"], ["proof (chain)\npicking this:\n  Determinant.det (submatrix A I J) =\n  (\\<Prod>i\\<in>insert a xs. A $$ (i, i))", "show ?thesis"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I J) =\n  (\\<Prod>i\\<in>insert a xs. A $$ (i, i))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "using length_ys"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I J) =\n  (\\<Prod>i\\<in>insert a xs. A $$ (i, i))\n  card (insert a xs) = Suc k\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "using a_eq_b an bm xs xs_I'"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I J) =\n  (\\<Prod>i\\<in>insert a xs. A $$ (i, i))\n  card (insert a xs) = Suc k\n  a = b\n  a < n\n  b < m\n  xs \\<subseteq> {0..<min n m}\n  xs = I'\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "by (simp add: aI')"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) = (0::'a) \\<or>\n  (\\<exists>S\\<subseteq>{0..<min n m}.\n      card S = Suc k \\<and>\n      S = I \\<and>\n      (Determinant.det (submatrix A I J) =\n       (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n       Determinant.det (submatrix A I J) = - (\\<Prod>i\\<in>S. A $$ (i, i))))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') \\<noteq>\n    (\\<Prod>i\\<in>xs. A $$ (i, i)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') \\<noteq>\n    (\\<Prod>i\\<in>xs. A $$ (i, i)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "case False"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I' J') \\<noteq>\n  (\\<Prod>i\\<in>xs. A $$ (i, i))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') \\<noteq>\n    (\\<Prod>i\\<in>xs. A $$ (i, i)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "hence \"det (submatrix A I' J') = - (\\<Prod>i\\<in>xs. A $$ (i, i))\""], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I' J') \\<noteq>\n  (\\<Prod>i\\<in>xs. A $$ (i, i))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') = - (\\<Prod>i\\<in>xs. A $$ (i, i))", "using prod_list_xs"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I' J') \\<noteq>\n  (\\<Prod>i\\<in>xs. A $$ (i, i))\n  Determinant.det (submatrix A I' J') = (\\<Prod>i\\<in>xs. A $$ (i, i)) \\<or>\n  Determinant.det (submatrix A I' J') = - (\\<Prod>i\\<in>xs. A $$ (i, i))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') = - (\\<Prod>i\\<in>xs. A $$ (i, i))", "by simp"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I' J') = - (\\<Prod>i\\<in>xs. A $$ (i, i))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') \\<noteq>\n    (\\<Prod>i\\<in>xs. A $$ (i, i)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "hence \"det (submatrix A I J) = -(\\<Prod>i\\<in>?ys. A $$ (i, i))\""], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I' J') = - (\\<Prod>i\\<in>xs. A $$ (i, i))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) =\n    - (\\<Prod>i\\<in>insert a xs. A $$ (i, i))", "using det_submatrix_IJ a_eq_b"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I' J') = - (\\<Prod>i\\<in>xs. A $$ (i, i))\n  Determinant.det (submatrix A I J) =\n  A $$ (a, b) * Determinant.det (submatrix A I' J')\n  a = b\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) =\n    - (\\<Prod>i\\<in>insert a xs. A $$ (i, i))", "by (metis (no_types, lifting) a_notin_xs card_ge_0_finite k0\n                  length_xs mult_minus_right prod.insert)"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) =\n  - (\\<Prod>i\\<in>insert a xs. A $$ (i, i))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') \\<noteq>\n    (\\<Prod>i\\<in>xs. A $$ (i, i)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "then"], ["proof (chain)\npicking this:\n  Determinant.det (submatrix A I J) =\n  - (\\<Prod>i\\<in>insert a xs. A $$ (i, i))", "show ?thesis"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I J) =\n  - (\\<Prod>i\\<in>insert a xs. A $$ (i, i))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "using length_ys"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I J) =\n  - (\\<Prod>i\\<in>insert a xs. A $$ (i, i))\n  card (insert a xs) = Suc k\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "using a_eq_b an bm xs aI' xs_I'"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I J) =\n  - (\\<Prod>i\\<in>insert a xs. A $$ (i, i))\n  card (insert a xs) = Suc k\n  a = b\n  a < n\n  b < m\n  xs \\<subseteq> {0..<min n m}\n  I = insert a I'\n  xs = I'\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "by force"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) = (0::'a) \\<or>\n  (\\<exists>S\\<subseteq>{0..<min n m}.\n      card S = Suc k \\<and>\n      S = I \\<and>\n      (Determinant.det (submatrix A I J) =\n       (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n       Determinant.det (submatrix A I J) = - (\\<Prod>i\\<in>S. A $$ (i, i))))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) = (0::'a) \\<or>\n  (\\<exists>S\\<subseteq>{0..<min n m}.\n      card S = Suc k \\<and>\n      S = I \\<and>\n      (Determinant.det (submatrix A I J) =\n       (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n       Determinant.det (submatrix A I J) = - (\\<Prod>i\\<in>S. A $$ (i, i))))\n\ngoal (1 subgoal):\n 1. odd (a' + b') \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. odd (a' + b') \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "case False"], ["proof (state)\nthis:\n  odd (a' + b')\n\ngoal (1 subgoal):\n 1. odd (a' + b') \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "have det_submatrix_IJ: \"det (submatrix A I J) = A $$ (a, b) * - det (submatrix A I' J')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) =\n    A $$ (a, b) * - Determinant.det (submatrix A I' J')", "using det_submatrix_IJ False"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I J) =\n  A $$ (a, b) *\n  ((- (1::'a)) ^ (a' + b') * Determinant.det (submatrix A I' J'))\n  odd (a' + b')\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) =\n    A $$ (a, b) * - Determinant.det (submatrix A I' J')", "by auto"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) =\n  A $$ (a, b) * - Determinant.det (submatrix A I' J')\n\ngoal (1 subgoal):\n 1. odd (a' + b') \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "proof (cases \"det (submatrix A I' J') = (\\<Prod>i\\<in>xs. A $$ (i, i))\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Determinant.det (submatrix A I' J') =\n    (\\<Prod>i\\<in>xs. A $$ (i, i)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. Determinant.det (submatrix A I' J') \\<noteq>\n    (\\<Prod>i\\<in>xs. A $$ (i, i)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "case True"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I' J') = (\\<Prod>i\\<in>xs. A $$ (i, i))\n\ngoal (2 subgoals):\n 1. Determinant.det (submatrix A I' J') =\n    (\\<Prod>i\\<in>xs. A $$ (i, i)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. Determinant.det (submatrix A I' J') \\<noteq>\n    (\\<Prod>i\\<in>xs. A $$ (i, i)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "have \"det (submatrix A I J) = - (\\<Prod>i\\<in>?ys. A $$ (i, i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) =\n    - (\\<Prod>i\\<in>insert a xs. A $$ (i, i))", "using det_submatrix_IJ"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I J) =\n  A $$ (a, b) * - Determinant.det (submatrix A I' J')\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) =\n    - (\\<Prod>i\\<in>insert a xs. A $$ (i, i))", "unfolding True"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I J) =\n  A $$ (a, b) * - (\\<Prod>i\\<in>xs. A $$ (i, i))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) =\n    - (\\<Prod>i\\<in>insert a xs. A $$ (i, i))", "by (metis (no_types, lifting) a_eq_b a_notin_xs card_ge_0_finite k0\n                  length_xs mult_minus_right prod.insert)"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) =\n  - (\\<Prod>i\\<in>insert a xs. A $$ (i, i))\n\ngoal (2 subgoals):\n 1. Determinant.det (submatrix A I' J') =\n    (\\<Prod>i\\<in>xs. A $$ (i, i)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n 2. Determinant.det (submatrix A I' J') \\<noteq>\n    (\\<Prod>i\\<in>xs. A $$ (i, i)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "then"], ["proof (chain)\npicking this:\n  Determinant.det (submatrix A I J) =\n  - (\\<Prod>i\\<in>insert a xs. A $$ (i, i))", "show ?thesis"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I J) =\n  - (\\<Prod>i\\<in>insert a xs. A $$ (i, i))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "using length_ys"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I J) =\n  - (\\<Prod>i\\<in>insert a xs. A $$ (i, i))\n  card (insert a xs) = Suc k\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "using a_eq_b an bm xs aI' xs_I'"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I J) =\n  - (\\<Prod>i\\<in>insert a xs. A $$ (i, i))\n  card (insert a xs) = Suc k\n  a = b\n  a < n\n  b < m\n  xs \\<subseteq> {0..<min n m}\n  I = insert a I'\n  xs = I'\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "by force"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) = (0::'a) \\<or>\n  (\\<exists>S\\<subseteq>{0..<min n m}.\n      card S = Suc k \\<and>\n      S = I \\<and>\n      (Determinant.det (submatrix A I J) =\n       (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n       Determinant.det (submatrix A I J) = - (\\<Prod>i\\<in>S. A $$ (i, i))))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') \\<noteq>\n    (\\<Prod>i\\<in>xs. A $$ (i, i)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') \\<noteq>\n    (\\<Prod>i\\<in>xs. A $$ (i, i)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "case False"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I' J') \\<noteq>\n  (\\<Prod>i\\<in>xs. A $$ (i, i))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') \\<noteq>\n    (\\<Prod>i\\<in>xs. A $$ (i, i)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "hence \"det (submatrix A I' J') = - (\\<Prod>i\\<in>xs. A $$ (i, i))\""], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I' J') \\<noteq>\n  (\\<Prod>i\\<in>xs. A $$ (i, i))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') = - (\\<Prod>i\\<in>xs. A $$ (i, i))", "using prod_list_xs"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I' J') \\<noteq>\n  (\\<Prod>i\\<in>xs. A $$ (i, i))\n  Determinant.det (submatrix A I' J') = (\\<Prod>i\\<in>xs. A $$ (i, i)) \\<or>\n  Determinant.det (submatrix A I' J') = - (\\<Prod>i\\<in>xs. A $$ (i, i))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') = - (\\<Prod>i\\<in>xs. A $$ (i, i))", "by simp"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I' J') = - (\\<Prod>i\\<in>xs. A $$ (i, i))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') \\<noteq>\n    (\\<Prod>i\\<in>xs. A $$ (i, i)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "hence \"det (submatrix A I J) = (\\<Prod>i\\<in>?ys. A $$ (i, i))\""], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I' J') = - (\\<Prod>i\\<in>xs. A $$ (i, i))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) =\n    (\\<Prod>i\\<in>insert a xs. A $$ (i, i))", "using det_submatrix_IJ"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I' J') = - (\\<Prod>i\\<in>xs. A $$ (i, i))\n  Determinant.det (submatrix A I J) =\n  A $$ (a, b) * - Determinant.det (submatrix A I' J')\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) =\n    (\\<Prod>i\\<in>insert a xs. A $$ (i, i))", "by (metis (mono_tags, lifting) a_eq_b a_notin_xs card_ge_0_finite\n                  equation_minus_iff k0 length_xs prod.insert)"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) =\n  (\\<Prod>i\\<in>insert a xs. A $$ (i, i))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I' J') \\<noteq>\n    (\\<Prod>i\\<in>xs. A $$ (i, i)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "then"], ["proof (chain)\npicking this:\n  Determinant.det (submatrix A I J) =\n  (\\<Prod>i\\<in>insert a xs. A $$ (i, i))", "show ?thesis"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I J) =\n  (\\<Prod>i\\<in>insert a xs. A $$ (i, i))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "using length_ys"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I J) =\n  (\\<Prod>i\\<in>insert a xs. A $$ (i, i))\n  card (insert a xs) = Suc k\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "using a_eq_b an bm xs aI' xs_I'"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I J) =\n  (\\<Prod>i\\<in>insert a xs. A $$ (i, i))\n  card (insert a xs) = Suc k\n  a = b\n  a < n\n  b < m\n  xs \\<subseteq> {0..<min n m}\n  I = insert a I'\n  xs = I'\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "by force"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) = (0::'a) \\<or>\n  (\\<exists>S\\<subseteq>{0..<min n m}.\n      card S = Suc k \\<and>\n      S = I \\<and>\n      (Determinant.det (submatrix A I J) =\n       (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n       Determinant.det (submatrix A I J) = - (\\<Prod>i\\<in>S. A $$ (i, i))))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) = (0::'a) \\<or>\n  (\\<exists>S\\<subseteq>{0..<min n m}.\n      card S = Suc k \\<and>\n      S = I \\<and>\n      (Determinant.det (submatrix A I J) =\n       (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n       Determinant.det (submatrix A I J) = - (\\<Prod>i\\<in>S. A $$ (i, i))))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) = (0::'a) \\<or>\n  (\\<exists>S\\<subseteq>{0..<min n m}.\n      card S = Suc k \\<and>\n      S = I \\<and>\n      (Determinant.det (submatrix A I J) =\n       (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n       Determinant.det (submatrix A I J) = - (\\<Prod>i\\<in>S. A $$ (i, i))))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) = (0::'a) \\<or>\n  (\\<exists>S\\<subseteq>{0..<min n m}.\n      card S = Suc k \\<and>\n      S = I \\<and>\n      (Determinant.det (submatrix A I J) =\n       (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n       Determinant.det (submatrix A I J) = - (\\<Prod>i\\<in>S. A $$ (i, i))))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "case False"], ["proof (state)\nthis:\n  \\<not> (\\<exists>a'<Suc k. submatrix A I J $$ (a', b') \\<noteq> (0::'a))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "have \"sum ?f {0..<Suc k} = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i = 0..<Suc k.\n        submatrix A I J $$ (i, b') *\n        Determinant.cofactor (submatrix A I J) i b') =\n    (0::'a)", "by (rule sum.neutral, insert False, auto)"], ["proof (state)\nthis:\n  (\\<Sum>i = 0..<Suc k.\n      submatrix A I J $$ (i, b') *\n      Determinant.cofactor (submatrix A I J) i b') =\n  (0::'a)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<exists>a'<Suc k.\n               submatrix A I J $$ (a', b') \\<noteq>\n               (0::'a)) \\<Longrightarrow>\n    Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>i = 0..<Suc k.\n      submatrix A I J $$ (i, b') *\n      Determinant.cofactor (submatrix A I J) i b') =\n  (0::'a)\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "using det_rw"], ["proof (prove)\nusing this:\n  (\\<Sum>i = 0..<Suc k.\n      submatrix A I J $$ (i, b') *\n      Determinant.cofactor (submatrix A I J) i b') =\n  (0::'a)\n  Determinant.det (submatrix A I J) =\n  (\\<Sum>i<Suc k.\n      submatrix A I J $$ (i, b') *\n      Determinant.cofactor (submatrix A I J) i b')\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I J) = (0::'a) \\<or>\n    (\\<exists>S\\<subseteq>{0..<min n m}.\n        card S = Suc k \\<and>\n        S = I \\<and>\n        (Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))))", "by (simp add: atLeast0LessThan)"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) = (0::'a) \\<or>\n  (\\<exists>S\\<subseteq>{0..<min n m}.\n      card S = Suc k \\<and>\n      S = I \\<and>\n      (Determinant.det (submatrix A I J) =\n       (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n       Determinant.det (submatrix A I J) = - (\\<Prod>i\\<in>S. A $$ (i, i))))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) = (0::'a) \\<or>\n  (\\<exists>S\\<subseteq>{0..<min n m}.\n      card S = Suc k \\<and>\n      S = I \\<and>\n      (Determinant.det (submatrix A I J) =\n       (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n       Determinant.det (submatrix A I J) = - (\\<Prod>i\\<in>S. A $$ (i, i))))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I J) = (0::'a) \\<or>\n  (\\<exists>S\\<subseteq>{0..<min n m}.\n      card S = Suc k \\<and>\n      S = I \\<and>\n      (Determinant.det (submatrix A I J) =\n       (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n       Determinant.det (submatrix A I J) = - (\\<Prod>i\\<in>S. A $$ (i, i))))\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Relating minors and GCD\\<close>"], ["", "lemma diagonal_dvd_Gcd_minors:\n  fixes A::\"'a::{semiring_Gcd,comm_ring_1} mat\"\n  assumes A: \"A \\<in> carrier_mat n m\"\n    and SNF_A: \"Smith_normal_form_mat A\"\nshows \"(\\<Prod>i=0..<k. A $$ (i,i)) dvd Gcd (minors A k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<k. A $$ (i, i)) dvd Gcd (minors A k)", "proof (cases \"k=0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow>\n    (\\<Prod>i = 0..<k. A $$ (i, i)) dvd Gcd (minors A k)\n 2. k \\<noteq> 0 \\<Longrightarrow>\n    (\\<Prod>i = 0..<k. A $$ (i, i)) dvd Gcd (minors A k)", "case True"], ["proof (state)\nthis:\n  k = 0\n\ngoal (2 subgoals):\n 1. k = 0 \\<Longrightarrow>\n    (\\<Prod>i = 0..<k. A $$ (i, i)) dvd Gcd (minors A k)\n 2. k \\<noteq> 0 \\<Longrightarrow>\n    (\\<Prod>i = 0..<k. A $$ (i, i)) dvd Gcd (minors A k)", "then"], ["proof (chain)\npicking this:\n  k = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  k = 0\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<k. A $$ (i, i)) dvd Gcd (minors A k)", "by auto"], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<k. A $$ (i, i)) dvd Gcd (minors A k)\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow>\n    (\\<Prod>i = 0..<k. A $$ (i, i)) dvd Gcd (minors A k)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow>\n    (\\<Prod>i = 0..<k. A $$ (i, i)) dvd Gcd (minors A k)", "case False"], ["proof (state)\nthis:\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow>\n    (\\<Prod>i = 0..<k. A $$ (i, i)) dvd Gcd (minors A k)", "hence k: \"0<k\""], ["proof (prove)\nusing this:\n  k \\<noteq> 0\n\ngoal (1 subgoal):\n 1. 0 < k", "by simp"], ["proof (state)\nthis:\n  0 < k\n\ngoal (1 subgoal):\n 1. k \\<noteq> 0 \\<Longrightarrow>\n    (\\<Prod>i = 0..<k. A $$ (i, i)) dvd Gcd (minors A k)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<k. A $$ (i, i)) dvd Gcd (minors A k)", "proof (rule Gcd_greatest)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in> minors A k \\<Longrightarrow>\n       (\\<Prod>i = 0..<k. A $$ (i, i)) dvd b", "have diag_A: \"diagonal_mat A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. diagonal_mat A", "using SNF_A"], ["proof (prove)\nusing this:\n  Smith_normal_form_mat A\n\ngoal (1 subgoal):\n 1. diagonal_mat A", "unfolding Smith_normal_form_mat_def isDiagonal_mat_def diagonal_mat_def"], ["proof (prove)\nusing this:\n  (\\<forall>a.\n      a + 1 < min (dim_row A) (dim_col A) \\<longrightarrow>\n      A $$ (a, a) dvd A $$ (a + 1, a + 1)) \\<and>\n  (\\<forall>i j.\n      i \\<noteq> j \\<and>\n      i < dim_row A \\<and> j < dim_col A \\<longrightarrow>\n      A $$ (i, j) = (0::'a))\n\ngoal (1 subgoal):\n 1. \\<forall>i<dim_row A.\n       \\<forall>j<dim_col A.\n          i \\<noteq> j \\<longrightarrow> A $$ (i, j) = (0::'a)", "by auto"], ["proof (state)\nthis:\n  diagonal_mat A\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in> minors A k \\<Longrightarrow>\n       (\\<Prod>i = 0..<k. A $$ (i, i)) dvd b", "fix b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in> minors A k \\<Longrightarrow>\n       (\\<Prod>i = 0..<k. A $$ (i, i)) dvd b", "assume b_in_minors: \"b \\<in> minors A k\""], ["proof (state)\nthis:\n  b \\<in> minors A k\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in> minors A k \\<Longrightarrow>\n       (\\<Prod>i = 0..<k. A $$ (i, i)) dvd b", "show \"(\\<Prod>i = 0..<k. A $$ (i, i)) dvd b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<k. A $$ (i, i)) dvd b", "proof (cases \"b=0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. b = (0::'a) \\<Longrightarrow> (\\<Prod>i = 0..<k. A $$ (i, i)) dvd b\n 2. b \\<noteq> (0::'a) \\<Longrightarrow>\n    (\\<Prod>i = 0..<k. A $$ (i, i)) dvd b", "case True"], ["proof (state)\nthis:\n  b = (0::'a)\n\ngoal (2 subgoals):\n 1. b = (0::'a) \\<Longrightarrow> (\\<Prod>i = 0..<k. A $$ (i, i)) dvd b\n 2. b \\<noteq> (0::'a) \\<Longrightarrow>\n    (\\<Prod>i = 0..<k. A $$ (i, i)) dvd b", "then"], ["proof (chain)\npicking this:\n  b = (0::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  b = (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<k. A $$ (i, i)) dvd b", "by auto"], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<k. A $$ (i, i)) dvd b\n\ngoal (1 subgoal):\n 1. b \\<noteq> (0::'a) \\<Longrightarrow>\n    (\\<Prod>i = 0..<k. A $$ (i, i)) dvd b", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. b \\<noteq> (0::'a) \\<Longrightarrow>\n    (\\<Prod>i = 0..<k. A $$ (i, i)) dvd b", "case False"], ["proof (state)\nthis:\n  b \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. b \\<noteq> (0::'a) \\<Longrightarrow>\n    (\\<Prod>i = 0..<k. A $$ (i, i)) dvd b", "obtain I J where b: \"b = det (submatrix A I J)\" and I: \"I \\<subseteq> {0..<dim_row A} \"\n    and J: \"J \\<subseteq> {0..<dim_col A}\" and Ik: \"card I = k\" and Jk: \"card J = k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>I J.\n        \\<lbrakk>b = Determinant.det (submatrix A I J);\n         I \\<subseteq> {0..<dim_row A}; J \\<subseteq> {0..<dim_col A};\n         card I = k; card J = k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using b_in_minors"], ["proof (prove)\nusing this:\n  b \\<in> minors A k\n\ngoal (1 subgoal):\n 1. (\\<And>I J.\n        \\<lbrakk>b = Determinant.det (submatrix A I J);\n         I \\<subseteq> {0..<dim_row A}; J \\<subseteq> {0..<dim_col A};\n         card I = k; card J = k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding minors_def"], ["proof (prove)\nusing this:\n  b \\<in> {Determinant.det (submatrix A I J) |I J.\n           I \\<subseteq> {0..<dim_row A} \\<and>\n           J \\<subseteq> {0..<dim_col A} \\<and>\n           card I = k \\<and> card J = k}\n\ngoal (1 subgoal):\n 1. (\\<And>I J.\n        \\<lbrakk>b = Determinant.det (submatrix A I J);\n         I \\<subseteq> {0..<dim_row A}; J \\<subseteq> {0..<dim_col A};\n         card I = k; card J = k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  b = Determinant.det (submatrix A I J)\n  I \\<subseteq> {0..<dim_row A}\n  J \\<subseteq> {0..<dim_col A}\n  card I = k\n  card J = k\n\ngoal (1 subgoal):\n 1. b \\<noteq> (0::'a) \\<Longrightarrow>\n    (\\<Prod>i = 0..<k. A $$ (i, i)) dvd b", "obtain S where S: \"S \\<subseteq> {0..<min n m}\" and Sk: \"card S = k\"\n      and det_subS: \"det (submatrix A I J) = (\\<Prod>i\\<in>S. A $$ (i,i))\n        \\<or> det (submatrix A I J) = -(\\<Prod>i\\<in>S. A $$ (i,i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>S.\n        \\<lbrakk>S \\<subseteq> {0..<min n m}; card S = k;\n         Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using det_minors_diagonal2[OF diag_A A Ik Jk _ _ k] I J A False b"], ["proof (prove)\nusing this:\n  \\<lbrakk>I \\<subseteq> {0..<n}; J \\<subseteq> {0..<m}\\<rbrakk>\n  \\<Longrightarrow> Determinant.det (submatrix A I J) = (0::'a) \\<or>\n                    (\\<exists>S\\<subseteq>{0..<min n m}.\n                        card S = k \\<and>\n                        S = I \\<and>\n                        (Determinant.det (submatrix A I J) =\n                         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n                         Determinant.det (submatrix A I J) =\n                         - (\\<Prod>i\\<in>S. A $$ (i, i))))\n  I \\<subseteq> {0..<dim_row A}\n  J \\<subseteq> {0..<dim_col A}\n  A \\<in> carrier_mat n m\n  b \\<noteq> (0::'a)\n  b = Determinant.det (submatrix A I J)\n\ngoal (1 subgoal):\n 1. (\\<And>S.\n        \\<lbrakk>S \\<subseteq> {0..<min n m}; card S = k;\n         Determinant.det (submatrix A I J) =\n         (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n         Determinant.det (submatrix A I J) =\n         - (\\<Prod>i\\<in>S. A $$ (i, i))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  S \\<subseteq> {0..<min n m}\n  card S = k\n  Determinant.det (submatrix A I J) = (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n  Determinant.det (submatrix A I J) = - (\\<Prod>i\\<in>S. A $$ (i, i))\n\ngoal (1 subgoal):\n 1. b \\<noteq> (0::'a) \\<Longrightarrow>\n    (\\<Prod>i = 0..<k. A $$ (i, i)) dvd b", "obtain f where inj_f: \"inj_on f {0..<k}\" and fk_S: \"f`{0..<k} = S\"\n      and i_fi: \" (\\<forall>i\\<in>{0..<k}. i \\<le> f i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>inj_on f {0..<k}; f ` {0..<k} = S;\n         \\<forall>i\\<in>{0..<k}. i \\<le> f i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using exists_inj_ge_index[OF S Sk]"], ["proof (prove)\nusing this:\n  \\<exists>f.\n     inj_on f {0..<k} \\<and>\n     f ` {0..<k} = S \\<and> (\\<forall>i\\<in>{0..<k}. i \\<le> f i)\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>inj_on f {0..<k}; f ` {0..<k} = S;\n         \\<forall>i\\<in>{0..<k}. i \\<le> f i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  inj_on f {0..<k}\n  f ` {0..<k} = S\n  \\<forall>i\\<in>{0..<k}. i \\<le> f i\n\ngoal (1 subgoal):\n 1. b \\<noteq> (0::'a) \\<Longrightarrow>\n    (\\<Prod>i = 0..<k. A $$ (i, i)) dvd b", "have \"(\\<Prod>i = 0..<k. A $$ (i, i)) dvd (\\<Prod>i\\<in>{0..<k}. A $$ (f i,f i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<k. A $$ (i, i)) dvd (\\<Prod>i = 0..<k. A $$ (f i, f i))", "by (rule prod_dvd_prod, rule SNF_divides_diagonal[OF A SNF_A], insert fk_S S i_fi, force+)"], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<k. A $$ (i, i)) dvd (\\<Prod>i = 0..<k. A $$ (f i, f i))\n\ngoal (1 subgoal):\n 1. b \\<noteq> (0::'a) \\<Longrightarrow>\n    (\\<Prod>i = 0..<k. A $$ (i, i)) dvd b", "also"], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<k. A $$ (i, i)) dvd (\\<Prod>i = 0..<k. A $$ (f i, f i))\n\ngoal (1 subgoal):\n 1. b \\<noteq> (0::'a) \\<Longrightarrow>\n    (\\<Prod>i = 0..<k. A $$ (i, i)) dvd b", "have \"... = (\\<Prod>i\\<in>f`{0..<k}. A $$ (i,i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<k. A $$ (f i, f i)) =\n    (\\<Prod>i\\<in>f ` {0..<k}. A $$ (i, i))", "by (rule prod.reindex[symmetric, unfolded o_def, OF inj_f])"], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<k. A $$ (f i, f i)) =\n  (\\<Prod>i\\<in>f ` {0..<k}. A $$ (i, i))\n\ngoal (1 subgoal):\n 1. b \\<noteq> (0::'a) \\<Longrightarrow>\n    (\\<Prod>i = 0..<k. A $$ (i, i)) dvd b", "also"], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<k. A $$ (f i, f i)) =\n  (\\<Prod>i\\<in>f ` {0..<k}. A $$ (i, i))\n\ngoal (1 subgoal):\n 1. b \\<noteq> (0::'a) \\<Longrightarrow>\n    (\\<Prod>i = 0..<k. A $$ (i, i)) dvd b", "have \"... = (\\<Prod>i\\<in>S. A $$ (i, i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>i\\<in>f ` {0..<k}. A $$ (i, i)) = (\\<Prod>i\\<in>S. A $$ (i, i))", "using fk_S"], ["proof (prove)\nusing this:\n  f ` {0..<k} = S\n\ngoal (1 subgoal):\n 1. (\\<Prod>i\\<in>f ` {0..<k}. A $$ (i, i)) = (\\<Prod>i\\<in>S. A $$ (i, i))", "by auto"], ["proof (state)\nthis:\n  (\\<Prod>i\\<in>f ` {0..<k}. A $$ (i, i)) = (\\<Prod>i\\<in>S. A $$ (i, i))\n\ngoal (1 subgoal):\n 1. b \\<noteq> (0::'a) \\<Longrightarrow>\n    (\\<Prod>i = 0..<k. A $$ (i, i)) dvd b", "finally"], ["proof (chain)\npicking this:\n  (\\<Prod>i = 0..<k. A $$ (i, i)) dvd (\\<Prod>i\\<in>S. A $$ (i, i))", "have *: \"(\\<Prod>i = 0..<k. A $$ (i, i)) dvd (\\<Prod>i\\<in>S. A $$ (i, i))\""], ["proof (prove)\nusing this:\n  (\\<Prod>i = 0..<k. A $$ (i, i)) dvd (\\<Prod>i\\<in>S. A $$ (i, i))\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<k. A $$ (i, i)) dvd (\\<Prod>i\\<in>S. A $$ (i, i))", "."], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<k. A $$ (i, i)) dvd (\\<Prod>i\\<in>S. A $$ (i, i))\n\ngoal (1 subgoal):\n 1. b \\<noteq> (0::'a) \\<Longrightarrow>\n    (\\<Prod>i = 0..<k. A $$ (i, i)) dvd b", "show \"(\\<Prod>i = 0..<k. A $$ (i, i)) dvd b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<k. A $$ (i, i)) dvd b", "using det_subS b *"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I J) = (\\<Prod>i\\<in>S. A $$ (i, i)) \\<or>\n  Determinant.det (submatrix A I J) = - (\\<Prod>i\\<in>S. A $$ (i, i))\n  b = Determinant.det (submatrix A I J)\n  (\\<Prod>i = 0..<k. A $$ (i, i)) dvd (\\<Prod>i\\<in>S. A $$ (i, i))\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<k. A $$ (i, i)) dvd b", "by auto"], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<k. A $$ (i, i)) dvd b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<k. A $$ (i, i)) dvd b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<k. A $$ (i, i)) dvd Gcd (minors A k)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Gcd_minors_dvd_diagonal:\n  fixes A::\"'a::{semiring_Gcd,comm_ring_1} mat\"\n  assumes A: \"A \\<in> carrier_mat n m\"\n    and SNF_A: \"Smith_normal_form_mat A\"\n    and k: \"k \\<le> min n m\"\n  shows \"Gcd (minors A k) dvd (\\<Prod>i=0..<k. A $$ (i,i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Gcd (minors A k) dvd (\\<Prod>i = 0..<k. A $$ (i, i))", "proof (rule Gcd_dvd)"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<k. A $$ (i, i)) \\<in> minors A k", "define I where \"I = {0..<k}\""], ["proof (state)\nthis:\n  I = {0..<k}\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<k. A $$ (i, i)) \\<in> minors A k", "have \"(\\<Prod>i = 0..<k. A $$ (i, i)) = det (submatrix A I I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<k. A $$ (i, i)) = Determinant.det (submatrix A I I)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<k. A $$ (i, i)) = Determinant.det (submatrix A I I)", "have sub_eq: \"submatrix A I I = mat k k (\\<lambda>(i, j). A $$ (i, j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix A I I = Matrix.mat k k (\\<lambda>(i, j). A $$ (i, j))", "proof (rule eq_matI, auto)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < k; j < k\\<rbrakk>\n       \\<Longrightarrow> submatrix A I I $$ (i, j) = A $$ (i, j)\n 2. dim_row (submatrix A I I) = k\n 3. dim_col (submatrix A I I) = k", "have \"I = {i. i < dim_row A \\<and> i \\<in> I}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I = {i. i < dim_row A \\<and> i \\<in> I}", "unfolding I_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {0..<k} = {i. i < dim_row A \\<and> i \\<in> {0..<k}}", "using A k"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat n m\n  k \\<le> min n m\n\ngoal (1 subgoal):\n 1. {0..<k} = {i. i < dim_row A \\<and> i \\<in> {0..<k}}", "by auto"], ["proof (state)\nthis:\n  I = {i. i < dim_row A \\<and> i \\<in> I}\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < k; j < k\\<rbrakk>\n       \\<Longrightarrow> submatrix A I I $$ (i, j) = A $$ (i, j)\n 2. dim_row (submatrix A I I) = k\n 3. dim_col (submatrix A I I) = k", "hence ck: \"card {i. i < dim_row A \\<and> i \\<in> I} = k\""], ["proof (prove)\nusing this:\n  I = {i. i < dim_row A \\<and> i \\<in> I}\n\ngoal (1 subgoal):\n 1. card {i. i < dim_row A \\<and> i \\<in> I} = k", "unfolding I_def"], ["proof (prove)\nusing this:\n  {0..<k} = {i. i < dim_row A \\<and> i \\<in> {0..<k}}\n\ngoal (1 subgoal):\n 1. card {i. i < dim_row A \\<and> i \\<in> {0..<k}} = k", "using card_atLeastLessThan"], ["proof (prove)\nusing this:\n  {0..<k} = {i. i < dim_row A \\<and> i \\<in> {0..<k}}\n  card {?l..<?u} = ?u - ?l\n\ngoal (1 subgoal):\n 1. card {i. i < dim_row A \\<and> i \\<in> {0..<k}} = k", "by presburger"], ["proof (state)\nthis:\n  card {i. i < dim_row A \\<and> i \\<in> I} = k\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < k; j < k\\<rbrakk>\n       \\<Longrightarrow> submatrix A I I $$ (i, j) = A $$ (i, j)\n 2. dim_row (submatrix A I I) = k\n 3. dim_col (submatrix A I I) = k", "have \"I = {i. i < dim_col A \\<and> i \\<in> I}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I = {i. i < dim_col A \\<and> i \\<in> I}", "unfolding I_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {0..<k} = {i. i < dim_col A \\<and> i \\<in> {0..<k}}", "using A k"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat n m\n  k \\<le> min n m\n\ngoal (1 subgoal):\n 1. {0..<k} = {i. i < dim_col A \\<and> i \\<in> {0..<k}}", "by auto"], ["proof (state)\nthis:\n  I = {i. i < dim_col A \\<and> i \\<in> I}\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < k; j < k\\<rbrakk>\n       \\<Longrightarrow> submatrix A I I $$ (i, j) = A $$ (i, j)\n 2. dim_row (submatrix A I I) = k\n 3. dim_col (submatrix A I I) = k", "hence ck2: \"card {j. j < dim_col A \\<and> j \\<in> I} = k\""], ["proof (prove)\nusing this:\n  I = {i. i < dim_col A \\<and> i \\<in> I}\n\ngoal (1 subgoal):\n 1. card {j. j < dim_col A \\<and> j \\<in> I} = k", "unfolding I_def"], ["proof (prove)\nusing this:\n  {0..<k} = {i. i < dim_col A \\<and> i \\<in> {0..<k}}\n\ngoal (1 subgoal):\n 1. card {j. j < dim_col A \\<and> j \\<in> {0..<k}} = k", "using card_atLeastLessThan"], ["proof (prove)\nusing this:\n  {0..<k} = {i. i < dim_col A \\<and> i \\<in> {0..<k}}\n  card {?l..<?u} = ?u - ?l\n\ngoal (1 subgoal):\n 1. card {j. j < dim_col A \\<and> j \\<in> {0..<k}} = k", "by presburger"], ["proof (state)\nthis:\n  card {j. j < dim_col A \\<and> j \\<in> I} = k\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < k; j < k\\<rbrakk>\n       \\<Longrightarrow> submatrix A I I $$ (i, j) = A $$ (i, j)\n 2. dim_row (submatrix A I I) = k\n 3. dim_col (submatrix A I I) = k", "show dr: \"dim_row (submatrix A I I) = k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row (submatrix A I I) = k", "using ck"], ["proof (prove)\nusing this:\n  card {i. i < dim_row A \\<and> i \\<in> I} = k\n\ngoal (1 subgoal):\n 1. dim_row (submatrix A I I) = k", "unfolding submatrix_def"], ["proof (prove)\nusing this:\n  card {i. i < dim_row A \\<and> i \\<in> I} = k\n\ngoal (1 subgoal):\n 1. dim_row\n     (Matrix.mat (card {i. i < dim_row A \\<and> i \\<in> I})\n       (card {j. j < dim_col A \\<and> j \\<in> I})\n       (\\<lambda>(i, j). A $$ (pick I i, pick I j))) =\n    k", "by auto"], ["proof (state)\nthis:\n  dim_row (submatrix A I I) = k\n\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < k; j < k\\<rbrakk>\n       \\<Longrightarrow> submatrix A I I $$ (i, j) = A $$ (i, j)\n 2. dim_col (submatrix A I I) = k", "show dc: \"dim_col (submatrix A I I) = k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col (submatrix A I I) = k", "using ck2"], ["proof (prove)\nusing this:\n  card {j. j < dim_col A \\<and> j \\<in> I} = k\n\ngoal (1 subgoal):\n 1. dim_col (submatrix A I I) = k", "unfolding submatrix_def"], ["proof (prove)\nusing this:\n  card {j. j < dim_col A \\<and> j \\<in> I} = k\n\ngoal (1 subgoal):\n 1. dim_col\n     (Matrix.mat (card {i. i < dim_row A \\<and> i \\<in> I})\n       (card {j. j < dim_col A \\<and> j \\<in> I})\n       (\\<lambda>(i, j). A $$ (pick I i, pick I j))) =\n    k", "by auto"], ["proof (state)\nthis:\n  dim_col (submatrix A I I) = k\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < k; j < k\\<rbrakk>\n       \\<Longrightarrow> submatrix A I I $$ (i, j) = A $$ (i, j)", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < k; j < k\\<rbrakk>\n       \\<Longrightarrow> submatrix A I I $$ (i, j) = A $$ (i, j)", "assume i: \"i < k\" and j: \"j < k\""], ["proof (state)\nthis:\n  i < k\n  j < k\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < k; j < k\\<rbrakk>\n       \\<Longrightarrow> submatrix A I I $$ (i, j) = A $$ (i, j)", "have p1: \"pick I i = i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pick I i = i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pick I i = i", "have \"{0..<i} = {a \\<in> I. a < i}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {0..<i} = {a \\<in> I. a < i}", "using I_def i"], ["proof (prove)\nusing this:\n  I = {0..<k}\n  i < k\n\ngoal (1 subgoal):\n 1. {0..<i} = {a \\<in> I. a < i}", "by auto"], ["proof (state)\nthis:\n  {0..<i} = {a \\<in> I. a < i}\n\ngoal (1 subgoal):\n 1. pick I i = i", "hence i_eq: \"i = card {a \\<in> I. a < i}\""], ["proof (prove)\nusing this:\n  {0..<i} = {a \\<in> I. a < i}\n\ngoal (1 subgoal):\n 1. i = card {a \\<in> I. a < i}", "by (metis card_atLeastLessThan diff_zero)"], ["proof (state)\nthis:\n  i = card {a \\<in> I. a < i}\n\ngoal (1 subgoal):\n 1. pick I i = i", "have \"pick I i = pick I (card {a \\<in> I. a < i})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pick I i = pick I (card {a \\<in> I. a < i})", "using i_eq"], ["proof (prove)\nusing this:\n  i = card {a \\<in> I. a < i}\n\ngoal (1 subgoal):\n 1. pick I i = pick I (card {a \\<in> I. a < i})", "by simp"], ["proof (state)\nthis:\n  pick I i = pick I (card {a \\<in> I. a < i})\n\ngoal (1 subgoal):\n 1. pick I i = i", "also"], ["proof (state)\nthis:\n  pick I i = pick I (card {a \\<in> I. a < i})\n\ngoal (1 subgoal):\n 1. pick I i = i", "have \"... = i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pick I (card {a \\<in> I. a < i}) = i", "by (rule pick_card_in_set, insert i I_def, simp)"], ["proof (state)\nthis:\n  pick I (card {a \\<in> I. a < i}) = i\n\ngoal (1 subgoal):\n 1. pick I i = i", "finally"], ["proof (chain)\npicking this:\n  pick I i = i", "show ?thesis"], ["proof (prove)\nusing this:\n  pick I i = i\n\ngoal (1 subgoal):\n 1. pick I i = i", "."], ["proof (state)\nthis:\n  pick I i = i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pick I i = i\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < k; j < k\\<rbrakk>\n       \\<Longrightarrow> submatrix A I I $$ (i, j) = A $$ (i, j)", "have p2: \"pick I j = j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pick I j = j", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pick I j = j", "have \"{0..<j} = {a \\<in> I. a < j}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {0..<j} = {a \\<in> I. a < j}", "using I_def j"], ["proof (prove)\nusing this:\n  I = {0..<k}\n  j < k\n\ngoal (1 subgoal):\n 1. {0..<j} = {a \\<in> I. a < j}", "by auto"], ["proof (state)\nthis:\n  {0..<j} = {a \\<in> I. a < j}\n\ngoal (1 subgoal):\n 1. pick I j = j", "hence j_eq: \"j = card {a \\<in> I. a < j}\""], ["proof (prove)\nusing this:\n  {0..<j} = {a \\<in> I. a < j}\n\ngoal (1 subgoal):\n 1. j = card {a \\<in> I. a < j}", "by (metis card_atLeastLessThan diff_zero)"], ["proof (state)\nthis:\n  j = card {a \\<in> I. a < j}\n\ngoal (1 subgoal):\n 1. pick I j = j", "have \"pick I j = pick I (card {a \\<in> I. a < j})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pick I j = pick I (card {a \\<in> I. a < j})", "using j_eq"], ["proof (prove)\nusing this:\n  j = card {a \\<in> I. a < j}\n\ngoal (1 subgoal):\n 1. pick I j = pick I (card {a \\<in> I. a < j})", "by simp"], ["proof (state)\nthis:\n  pick I j = pick I (card {a \\<in> I. a < j})\n\ngoal (1 subgoal):\n 1. pick I j = j", "also"], ["proof (state)\nthis:\n  pick I j = pick I (card {a \\<in> I. a < j})\n\ngoal (1 subgoal):\n 1. pick I j = j", "have \"... = j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pick I (card {a \\<in> I. a < j}) = j", "by (rule pick_card_in_set, insert j I_def, simp)"], ["proof (state)\nthis:\n  pick I (card {a \\<in> I. a < j}) = j\n\ngoal (1 subgoal):\n 1. pick I j = j", "finally"], ["proof (chain)\npicking this:\n  pick I j = j", "show ?thesis"], ["proof (prove)\nusing this:\n  pick I j = j\n\ngoal (1 subgoal):\n 1. pick I j = j", "."], ["proof (state)\nthis:\n  pick I j = j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pick I j = j\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < k; j < k\\<rbrakk>\n       \\<Longrightarrow> submatrix A I I $$ (i, j) = A $$ (i, j)", "have \"submatrix A I I $$ (i, j) = A $$ (pick I i, pick I j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix A I I $$ (i, j) = A $$ (pick I i, pick I j)", "proof (rule submatrix_index)"], ["proof (state)\ngoal (2 subgoals):\n 1. i < card {i. i < dim_row A \\<and> i \\<in> I}\n 2. j < card {j. j < dim_col A \\<and> j \\<in> I}", "show \"i < card {i. i < dim_row A \\<and> i \\<in> I}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < card {i. i < dim_row A \\<and> i \\<in> I}", "by (metis dim_submatrix(1) dr i)"], ["proof (state)\nthis:\n  i < card {i. i < dim_row A \\<and> i \\<in> I}\n\ngoal (1 subgoal):\n 1. j < card {j. j < dim_col A \\<and> j \\<in> I}", "show \"j < card {j. j < dim_col A \\<and> j \\<in> I}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j < card {j. j < dim_col A \\<and> j \\<in> I}", "by (metis dim_submatrix(2) dc j)"], ["proof (state)\nthis:\n  j < card {j. j < dim_col A \\<and> j \\<in> I}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  submatrix A I I $$ (i, j) = A $$ (pick I i, pick I j)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < k; j < k\\<rbrakk>\n       \\<Longrightarrow> submatrix A I I $$ (i, j) = A $$ (i, j)", "also"], ["proof (state)\nthis:\n  submatrix A I I $$ (i, j) = A $$ (pick I i, pick I j)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < k; j < k\\<rbrakk>\n       \\<Longrightarrow> submatrix A I I $$ (i, j) = A $$ (i, j)", "have \"... = A $$ (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A $$ (pick I i, pick I j) = A $$ (i, j)", "using p1 p2"], ["proof (prove)\nusing this:\n  pick I i = i\n  pick I j = j\n\ngoal (1 subgoal):\n 1. A $$ (pick I i, pick I j) = A $$ (i, j)", "by simp"], ["proof (state)\nthis:\n  A $$ (pick I i, pick I j) = A $$ (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < k; j < k\\<rbrakk>\n       \\<Longrightarrow> submatrix A I I $$ (i, j) = A $$ (i, j)", "finally"], ["proof (chain)\npicking this:\n  submatrix A I I $$ (i, j) = A $$ (i, j)", "show \"submatrix A I I $$ (i, j) = A $$ (i, j)\""], ["proof (prove)\nusing this:\n  submatrix A I I $$ (i, j) = A $$ (i, j)\n\ngoal (1 subgoal):\n 1. submatrix A I I $$ (i, j) = A $$ (i, j)", "."], ["proof (state)\nthis:\n  submatrix A I I $$ (i, j) = A $$ (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  submatrix A I I = Matrix.mat k k (\\<lambda>(i, j). A $$ (i, j))\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<k. A $$ (i, i)) = Determinant.det (submatrix A I I)", "hence \"det (submatrix A I I) = det (mat k k (\\<lambda>(i, j). A $$ (i, j)))\""], ["proof (prove)\nusing this:\n  submatrix A I I = Matrix.mat k k (\\<lambda>(i, j). A $$ (i, j))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A I I) =\n    Determinant.det (Matrix.mat k k (\\<lambda>(i, j). A $$ (i, j)))", "by simp"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I I) =\n  Determinant.det (Matrix.mat k k (\\<lambda>(i, j). A $$ (i, j)))\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<k. A $$ (i, i)) = Determinant.det (submatrix A I I)", "also"], ["proof (state)\nthis:\n  Determinant.det (submatrix A I I) =\n  Determinant.det (Matrix.mat k k (\\<lambda>(i, j). A $$ (i, j)))\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<k. A $$ (i, i)) = Determinant.det (submatrix A I I)", "have \"... = prod_list (diag_mat (mat k k (\\<lambda>(i, j). A $$ (i, j))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (Matrix.mat k k (\\<lambda>(i, j). A $$ (i, j))) =\n    prod_list (diag_mat (Matrix.mat k k (\\<lambda>(i, j). A $$ (i, j))))", "proof (rule det_upper_triangular)"], ["proof (state)\ngoal (2 subgoals):\n 1. Matrix.upper_triangular (Matrix.mat k k (\\<lambda>(i, j). A $$ (i, j)))\n 2. Matrix.mat k k (\\<lambda>(i, j). A $$ (i, j)) \\<in> carrier_mat ?n ?n", "show \"mat k k (\\<lambda>(i, j). A $$ (i, j)) \\<in> carrier_mat k k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Matrix.mat k k (\\<lambda>(i, j). A $$ (i, j)) \\<in> carrier_mat k k", "by auto"], ["proof (state)\nthis:\n  Matrix.mat k k (\\<lambda>(i, j). A $$ (i, j)) \\<in> carrier_mat k k\n\ngoal (1 subgoal):\n 1. Matrix.upper_triangular (Matrix.mat k k (\\<lambda>(i, j). A $$ (i, j)))", "show \"upper_triangular (Matrix.mat k k (\\<lambda>(i, j). A $$ (i, j)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Matrix.upper_triangular (Matrix.mat k k (\\<lambda>(i, j). A $$ (i, j)))", "using SNF_A A k"], ["proof (prove)\nusing this:\n  Smith_normal_form_mat A\n  A \\<in> carrier_mat n m\n  k \\<le> min n m\n\ngoal (1 subgoal):\n 1. Matrix.upper_triangular (Matrix.mat k k (\\<lambda>(i, j). A $$ (i, j)))", "unfolding Smith_normal_form_mat_def isDiagonal_mat_def"], ["proof (prove)\nusing this:\n  (\\<forall>a.\n      a + 1 < min (dim_row A) (dim_col A) \\<longrightarrow>\n      A $$ (a, a) dvd A $$ (a + 1, a + 1)) \\<and>\n  (\\<forall>i j.\n      i \\<noteq> j \\<and>\n      i < dim_row A \\<and> j < dim_col A \\<longrightarrow>\n      A $$ (i, j) = (0::'a))\n  A \\<in> carrier_mat n m\n  k \\<le> min n m\n\ngoal (1 subgoal):\n 1. Matrix.upper_triangular (Matrix.mat k k (\\<lambda>(i, j). A $$ (i, j)))", "by auto"], ["proof (state)\nthis:\n  Matrix.upper_triangular (Matrix.mat k k (\\<lambda>(i, j). A $$ (i, j)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Determinant.det (Matrix.mat k k (\\<lambda>(i, j). A $$ (i, j))) =\n  prod_list (diag_mat (Matrix.mat k k (\\<lambda>(i, j). A $$ (i, j))))\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<k. A $$ (i, i)) = Determinant.det (submatrix A I I)", "also"], ["proof (state)\nthis:\n  Determinant.det (Matrix.mat k k (\\<lambda>(i, j). A $$ (i, j))) =\n  prod_list (diag_mat (Matrix.mat k k (\\<lambda>(i, j). A $$ (i, j))))\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<k. A $$ (i, i)) = Determinant.det (submatrix A I I)", "have \"... = (\\<Prod>i = 0..<k. A $$ (i, i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prod_list (diag_mat (Matrix.mat k k (\\<lambda>(i, j). A $$ (i, j)))) =\n    (\\<Prod>i = 0..<k. A $$ (i, i))", "by (metis (mono_tags, lifting) atLeastLessThan_iff dim_row_mat(1) index_mat(1)\n          prod.cong prod_list_diag_prod split_conv)"], ["proof (state)\nthis:\n  prod_list (diag_mat (Matrix.mat k k (\\<lambda>(i, j). A $$ (i, j)))) =\n  (\\<Prod>i = 0..<k. A $$ (i, i))\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<k. A $$ (i, i)) = Determinant.det (submatrix A I I)", "finally"], ["proof (chain)\npicking this:\n  Determinant.det (submatrix A I I) = (\\<Prod>i = 0..<k. A $$ (i, i))", "show ?thesis"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A I I) = (\\<Prod>i = 0..<k. A $$ (i, i))\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<k. A $$ (i, i)) = Determinant.det (submatrix A I I)", ".."], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<k. A $$ (i, i)) = Determinant.det (submatrix A I I)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<k. A $$ (i, i)) = Determinant.det (submatrix A I I)\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<k. A $$ (i, i)) \\<in> minors A k", "moreover"], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<k. A $$ (i, i)) = Determinant.det (submatrix A I I)\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<k. A $$ (i, i)) \\<in> minors A k", "have \"I \\<subseteq> {0..<dim_row A}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I \\<subseteq> {0..<dim_row A}", "using k A I_def"], ["proof (prove)\nusing this:\n  k \\<le> min n m\n  A \\<in> carrier_mat n m\n  I = {0..<k}\n\ngoal (1 subgoal):\n 1. I \\<subseteq> {0..<dim_row A}", "by auto"], ["proof (state)\nthis:\n  I \\<subseteq> {0..<dim_row A}\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<k. A $$ (i, i)) \\<in> minors A k", "moreover"], ["proof (state)\nthis:\n  I \\<subseteq> {0..<dim_row A}\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<k. A $$ (i, i)) \\<in> minors A k", "have \"I \\<subseteq> {0..<dim_col A}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I \\<subseteq> {0..<dim_col A}", "using k A I_def"], ["proof (prove)\nusing this:\n  k \\<le> min n m\n  A \\<in> carrier_mat n m\n  I = {0..<k}\n\ngoal (1 subgoal):\n 1. I \\<subseteq> {0..<dim_col A}", "by auto"], ["proof (state)\nthis:\n  I \\<subseteq> {0..<dim_col A}\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<k. A $$ (i, i)) \\<in> minors A k", "moreover"], ["proof (state)\nthis:\n  I \\<subseteq> {0..<dim_col A}\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<k. A $$ (i, i)) \\<in> minors A k", "have \"card I = k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card I = k", "using I_def"], ["proof (prove)\nusing this:\n  I = {0..<k}\n\ngoal (1 subgoal):\n 1. card I = k", "by auto"], ["proof (state)\nthis:\n  card I = k\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<k. A $$ (i, i)) \\<in> minors A k", "ultimately"], ["proof (chain)\npicking this:\n  (\\<Prod>i = 0..<k. A $$ (i, i)) = Determinant.det (submatrix A I I)\n  I \\<subseteq> {0..<dim_row A}\n  I \\<subseteq> {0..<dim_col A}\n  card I = k", "show \"(\\<Prod>i = 0..<k. A $$ (i, i)) \\<in> minors A k\""], ["proof (prove)\nusing this:\n  (\\<Prod>i = 0..<k. A $$ (i, i)) = Determinant.det (submatrix A I I)\n  I \\<subseteq> {0..<dim_row A}\n  I \\<subseteq> {0..<dim_col A}\n  card I = k\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<k. A $$ (i, i)) \\<in> minors A k", "unfolding minors_def"], ["proof (prove)\nusing this:\n  (\\<Prod>i = 0..<k. A $$ (i, i)) = Determinant.det (submatrix A I I)\n  I \\<subseteq> {0..<dim_row A}\n  I \\<subseteq> {0..<dim_col A}\n  card I = k\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<k. A $$ (i, i))\n    \\<in> {Determinant.det (submatrix A I J) |I J.\n           I \\<subseteq> {0..<dim_row A} \\<and>\n           J \\<subseteq> {0..<dim_col A} \\<and>\n           card I = k \\<and> card J = k}", "by auto"], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<k. A $$ (i, i)) \\<in> minors A k\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Gcd_minors_A_dvd_Gcd_minors_PAQ:\n fixes A::\"'a::{semiring_Gcd,comm_ring_1} mat\"\n assumes A: \"A \\<in> carrier_mat m n\"\n    and P: \"P \\<in> carrier_mat m m\" and Q: \"Q \\<in> carrier_mat n n\"\n  shows \"Gcd (minors A k) dvd Gcd (minors (P*A*Q) k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Gcd (minors A k) dvd Gcd (minors (P * A * Q) k)", "proof (rule Gcd_greatest)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in> minors (P * A * Q) k \\<Longrightarrow> Gcd (minors A k) dvd b", "let ?B=\"(P * A * Q)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in> minors (P * A * Q) k \\<Longrightarrow> Gcd (minors A k) dvd b", "fix b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in> minors (P * A * Q) k \\<Longrightarrow> Gcd (minors A k) dvd b", "assume \"b \\<in> minors ?B k\""], ["proof (state)\nthis:\n  b \\<in> minors (P * A * Q) k\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in> minors (P * A * Q) k \\<Longrightarrow> Gcd (minors A k) dvd b", "from this"], ["proof (chain)\npicking this:\n  b \\<in> minors (P * A * Q) k", "obtain I J where b: \"b = det (submatrix ?B I J)\" and I: \"I \\<subseteq> {0..<dim_row ?B}\"\n    and J: \"J \\<subseteq> {0..<dim_col ?B}\" and Ik: \"card I = k\" and Jk: \"card J = k\""], ["proof (prove)\nusing this:\n  b \\<in> minors (P * A * Q) k\n\ngoal (1 subgoal):\n 1. (\\<And>I J.\n        \\<lbrakk>b = Determinant.det (submatrix (P * A * Q) I J);\n         I \\<subseteq> {0..<dim_row (P * A * Q)};\n         J \\<subseteq> {0..<dim_col (P * A * Q)}; card I = k;\n         card J = k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding minors_def"], ["proof (prove)\nusing this:\n  b \\<in> {Determinant.det (submatrix (P * A * Q) I J) |I J.\n           I \\<subseteq> {0..<dim_row (P * A * Q)} \\<and>\n           J \\<subseteq> {0..<dim_col (P * A * Q)} \\<and>\n           card I = k \\<and> card J = k}\n\ngoal (1 subgoal):\n 1. (\\<And>I J.\n        \\<lbrakk>b = Determinant.det (submatrix (P * A * Q) I J);\n         I \\<subseteq> {0..<dim_row (P * A * Q)};\n         J \\<subseteq> {0..<dim_col (P * A * Q)}; card I = k;\n         card J = k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  b = Determinant.det (submatrix (P * A * Q) I J)\n  I \\<subseteq> {0..<dim_row (P * A * Q)}\n  J \\<subseteq> {0..<dim_col (P * A * Q)}\n  card I = k\n  card J = k\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in> minors (P * A * Q) k \\<Longrightarrow> Gcd (minors A k) dvd b", "have \"Gcd (minors A k) dvd det (submatrix ?B I J)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Gcd (minors A k) dvd Determinant.det (submatrix (P * A * Q) I J)", "by (rule Gcd_minors_dvd[OF _ P A Q _ _ Ik Jk], insert A I J P Q, auto)"], ["proof (state)\nthis:\n  Gcd (minors A k) dvd Determinant.det (submatrix (P * A * Q) I J)\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in> minors (P * A * Q) k \\<Longrightarrow> Gcd (minors A k) dvd b", "thus \"Gcd (minors A k) dvd b\""], ["proof (prove)\nusing this:\n  Gcd (minors A k) dvd Determinant.det (submatrix (P * A * Q) I J)\n\ngoal (1 subgoal):\n 1. Gcd (minors A k) dvd b", "using b"], ["proof (prove)\nusing this:\n  Gcd (minors A k) dvd Determinant.det (submatrix (P * A * Q) I J)\n  b = Determinant.det (submatrix (P * A * Q) I J)\n\ngoal (1 subgoal):\n 1. Gcd (minors A k) dvd b", "by simp"], ["proof (state)\nthis:\n  Gcd (minors A k) dvd b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Gcd_minors_PAQ_dvd_Gcd_minors_A:\n fixes A::\"'a::{semiring_Gcd,comm_ring_1} mat\"\n assumes A: \"A \\<in> carrier_mat m n\"\n    and P: \"P \\<in> carrier_mat m m\"\n    and Q: \"Q \\<in> carrier_mat n n\"\n    and inv_P: \"invertible_mat P\"\n    and inv_Q: \"invertible_mat Q\"\n  shows \"Gcd (minors (P*A*Q) k) dvd Gcd (minors A k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Gcd (minors (P * A * Q) k) dvd Gcd (minors A k)", "proof (rule Gcd_greatest)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in> minors A k \\<Longrightarrow> Gcd (minors (P * A * Q) k) dvd b", "let ?B = \"P * A * Q\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in> minors A k \\<Longrightarrow> Gcd (minors (P * A * Q) k) dvd b", "fix b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in> minors A k \\<Longrightarrow> Gcd (minors (P * A * Q) k) dvd b", "assume \"b \\<in> minors A k\""], ["proof (state)\nthis:\n  b \\<in> minors A k\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in> minors A k \\<Longrightarrow> Gcd (minors (P * A * Q) k) dvd b", "from this"], ["proof (chain)\npicking this:\n  b \\<in> minors A k", "obtain I J where b: \"b = det (submatrix A I J)\" and I: \"I \\<subseteq> {0..<dim_row A} \"\n    and J: \"J \\<subseteq> {0..<dim_col A}\" and Ik: \"card I = k\" and Jk: \"card J = k\""], ["proof (prove)\nusing this:\n  b \\<in> minors A k\n\ngoal (1 subgoal):\n 1. (\\<And>I J.\n        \\<lbrakk>b = Determinant.det (submatrix A I J);\n         I \\<subseteq> {0..<dim_row A}; J \\<subseteq> {0..<dim_col A};\n         card I = k; card J = k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding minors_def"], ["proof (prove)\nusing this:\n  b \\<in> {Determinant.det (submatrix A I J) |I J.\n           I \\<subseteq> {0..<dim_row A} \\<and>\n           J \\<subseteq> {0..<dim_col A} \\<and>\n           card I = k \\<and> card J = k}\n\ngoal (1 subgoal):\n 1. (\\<And>I J.\n        \\<lbrakk>b = Determinant.det (submatrix A I J);\n         I \\<subseteq> {0..<dim_row A}; J \\<subseteq> {0..<dim_col A};\n         card I = k; card J = k\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  b = Determinant.det (submatrix A I J)\n  I \\<subseteq> {0..<dim_row A}\n  J \\<subseteq> {0..<dim_col A}\n  card I = k\n  card J = k\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in> minors A k \\<Longrightarrow> Gcd (minors (P * A * Q) k) dvd b", "obtain P' where PP': \"inverts_mat P P'\" and P'P: \"inverts_mat P' P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>inverts_mat P P'; inverts_mat P' P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using inv_P"], ["proof (prove)\nusing this:\n  invertible_mat P\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>inverts_mat P P'; inverts_mat P' P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding invertible_mat_def"], ["proof (prove)\nusing this:\n  square_mat P \\<and> (\\<exists>B. inverts_mat P B \\<and> inverts_mat B P)\n\ngoal (1 subgoal):\n 1. (\\<And>P'.\n        \\<lbrakk>inverts_mat P P'; inverts_mat P' P\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  inverts_mat P P'\n  inverts_mat P' P\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in> minors A k \\<Longrightarrow> Gcd (minors (P * A * Q) k) dvd b", "obtain Q' where QQ': \"inverts_mat Q Q'\" and Q'Q: \"inverts_mat Q' Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>inverts_mat Q Q'; inverts_mat Q' Q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using inv_Q"], ["proof (prove)\nusing this:\n  invertible_mat Q\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>inverts_mat Q Q'; inverts_mat Q' Q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding invertible_mat_def"], ["proof (prove)\nusing this:\n  square_mat Q \\<and> (\\<exists>B. inverts_mat Q B \\<and> inverts_mat B Q)\n\ngoal (1 subgoal):\n 1. (\\<And>Q'.\n        \\<lbrakk>inverts_mat Q Q'; inverts_mat Q' Q\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  inverts_mat Q Q'\n  inverts_mat Q' Q\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in> minors A k \\<Longrightarrow> Gcd (minors (P * A * Q) k) dvd b", "have P': \"P' \\<in> carrier_mat m m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P' \\<in> carrier_mat m m", "using PP' P'P"], ["proof (prove)\nusing this:\n  inverts_mat P P'\n  inverts_mat P' P\n\ngoal (1 subgoal):\n 1. P' \\<in> carrier_mat m m", "unfolding inverts_mat_def"], ["proof (prove)\nusing this:\n  P * P' = 1\\<^sub>m (dim_row P)\n  P' * P = 1\\<^sub>m (dim_row P')\n\ngoal (1 subgoal):\n 1. P' \\<in> carrier_mat m m", "by (metis P carrier_matD(1) carrier_matD(2) carrier_matI index_mult_mat(3) index_one_mat(3))"], ["proof (state)\nthis:\n  P' \\<in> carrier_mat m m\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in> minors A k \\<Longrightarrow> Gcd (minors (P * A * Q) k) dvd b", "have Q': \"Q' \\<in> carrier_mat n n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q' \\<in> carrier_mat n n", "using QQ' Q'Q"], ["proof (prove)\nusing this:\n  inverts_mat Q Q'\n  inverts_mat Q' Q\n\ngoal (1 subgoal):\n 1. Q' \\<in> carrier_mat n n", "unfolding inverts_mat_def"], ["proof (prove)\nusing this:\n  Q * Q' = 1\\<^sub>m (dim_row Q)\n  Q' * Q = 1\\<^sub>m (dim_row Q')\n\ngoal (1 subgoal):\n 1. Q' \\<in> carrier_mat n n", "by (metis Q carrier_matD(1) carrier_matD(2) carrier_matI index_mult_mat(3) index_one_mat(3))"], ["proof (state)\nthis:\n  Q' \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in> minors A k \\<Longrightarrow> Gcd (minors (P * A * Q) k) dvd b", "have rw: \"P' *?B *Q' = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P' * (P * A * Q) * Q' = A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P' * (P * A * Q) * Q' = A", "have f1: \"P' * P = 1\\<^sub>m m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P' * P = 1\\<^sub>m m", "by (metis (no_types) P' P'P carrier_matD(1) inverts_mat_def)"], ["proof (state)\nthis:\n  P' * P = 1\\<^sub>m m\n\ngoal (1 subgoal):\n 1. P' * (P * A * Q) * Q' = A", "have *: \"P' * P * A = P' * (P * A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P' * P * A = P' * (P * A)", "by (meson A P P' assoc_mult_mat)"], ["proof (state)\nthis:\n  P' * P * A = P' * (P * A)\n\ngoal (1 subgoal):\n 1. P' * (P * A * Q) * Q' = A", "have \" P' * (P * A * Q) * Q' =  P' * P * A * Q * Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P' * (P * A * Q) * Q' = P' * P * A * Q * Q'", "by (smt A P P' Q assoc_mult_mat mult_carrier_mat)"], ["proof (state)\nthis:\n  P' * (P * A * Q) * Q' = P' * P * A * Q * Q'\n\ngoal (1 subgoal):\n 1. P' * (P * A * Q) * Q' = A", "also"], ["proof (state)\nthis:\n  P' * (P * A * Q) * Q' = P' * P * A * Q * Q'\n\ngoal (1 subgoal):\n 1. P' * (P * A * Q) * Q' = A", "have \"... =  P' * P * (A * Q * Q')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P' * P * A * Q * Q' = P' * P * (A * Q * Q')", "using A P P' Q Q' f1 *"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat m n\n  P \\<in> carrier_mat m m\n  P' \\<in> carrier_mat m m\n  Q \\<in> carrier_mat n n\n  Q' \\<in> carrier_mat n n\n  P' * P = 1\\<^sub>m m\n  P' * P * A = P' * (P * A)\n\ngoal (1 subgoal):\n 1. P' * P * A * Q * Q' = P' * P * (A * Q * Q')", "by auto"], ["proof (state)\nthis:\n  P' * P * A * Q * Q' = P' * P * (A * Q * Q')\n\ngoal (1 subgoal):\n 1. P' * (P * A * Q) * Q' = A", "also"], ["proof (state)\nthis:\n  P' * P * A * Q * Q' = P' * P * (A * Q * Q')\n\ngoal (1 subgoal):\n 1. P' * (P * A * Q) * Q' = A", "have \"... = A * Q * Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P' * P * (A * Q * Q') = A * Q * Q'", "using P'P A P'"], ["proof (prove)\nusing this:\n  inverts_mat P' P\n  A \\<in> carrier_mat m n\n  P' \\<in> carrier_mat m m\n\ngoal (1 subgoal):\n 1. P' * P * (A * Q * Q') = A * Q * Q'", "unfolding inverts_mat_def"], ["proof (prove)\nusing this:\n  P' * P = 1\\<^sub>m (dim_row P')\n  A \\<in> carrier_mat m n\n  P' \\<in> carrier_mat m m\n\ngoal (1 subgoal):\n 1. P' * P * (A * Q * Q') = A * Q * Q'", "by auto"], ["proof (state)\nthis:\n  P' * P * (A * Q * Q') = A * Q * Q'\n\ngoal (1 subgoal):\n 1. P' * (P * A * Q) * Q' = A", "also"], ["proof (state)\nthis:\n  P' * P * (A * Q * Q') = A * Q * Q'\n\ngoal (1 subgoal):\n 1. P' * (P * A * Q) * Q' = A", "have \"... = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A * Q * Q' = A", "using QQ' A Q' Q"], ["proof (prove)\nusing this:\n  inverts_mat Q Q'\n  A \\<in> carrier_mat m n\n  Q' \\<in> carrier_mat n n\n  Q \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. A * Q * Q' = A", "unfolding inverts_mat_def"], ["proof (prove)\nusing this:\n  Q * Q' = 1\\<^sub>m (dim_row Q)\n  A \\<in> carrier_mat m n\n  Q' \\<in> carrier_mat n n\n  Q \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. A * Q * Q' = A", "by auto"], ["proof (state)\nthis:\n  A * Q * Q' = A\n\ngoal (1 subgoal):\n 1. P' * (P * A * Q) * Q' = A", "finally"], ["proof (chain)\npicking this:\n  P' * (P * A * Q) * Q' = A", "show ?thesis"], ["proof (prove)\nusing this:\n  P' * (P * A * Q) * Q' = A\n\ngoal (1 subgoal):\n 1. P' * (P * A * Q) * Q' = A", "."], ["proof (state)\nthis:\n  P' * (P * A * Q) * Q' = A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P' * (P * A * Q) * Q' = A\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in> minors A k \\<Longrightarrow> Gcd (minors (P * A * Q) k) dvd b", "have \"Gcd (minors ?B k) dvd det (submatrix (P'*?B*Q') I J)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Gcd (minors (P * A * Q) k) dvd\n    Determinant.det (submatrix (P' * (P * A * Q) * Q') I J)", "by (rule Gcd_minors_dvd[OF _ P' _ Q' _ _ Ik Jk], insert P A Q I J, auto)"], ["proof (state)\nthis:\n  Gcd (minors (P * A * Q) k) dvd\n  Determinant.det (submatrix (P' * (P * A * Q) * Q') I J)\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in> minors A k \\<Longrightarrow> Gcd (minors (P * A * Q) k) dvd b", "also"], ["proof (state)\nthis:\n  Gcd (minors (P * A * Q) k) dvd\n  Determinant.det (submatrix (P' * (P * A * Q) * Q') I J)\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in> minors A k \\<Longrightarrow> Gcd (minors (P * A * Q) k) dvd b", "have \"... = det (submatrix A I J)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix (P' * (P * A * Q) * Q') I J) =\n    Determinant.det (submatrix A I J)", "using rw"], ["proof (prove)\nusing this:\n  P' * (P * A * Q) * Q' = A\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix (P' * (P * A * Q) * Q') I J) =\n    Determinant.det (submatrix A I J)", "by simp"], ["proof (state)\nthis:\n  Determinant.det (submatrix (P' * (P * A * Q) * Q') I J) =\n  Determinant.det (submatrix A I J)\n\ngoal (1 subgoal):\n 1. \\<And>b.\n       b \\<in> minors A k \\<Longrightarrow> Gcd (minors (P * A * Q) k) dvd b", "finally"], ["proof (chain)\npicking this:\n  Gcd (minors (P * A * Q) k) dvd Determinant.det (submatrix A I J)", "show \"Gcd (minors ?B k) dvd b\""], ["proof (prove)\nusing this:\n  Gcd (minors (P * A * Q) k) dvd Determinant.det (submatrix A I J)\n\ngoal (1 subgoal):\n 1. Gcd (minors (P * A * Q) k) dvd b", "using b"], ["proof (prove)\nusing this:\n  Gcd (minors (P * A * Q) k) dvd Determinant.det (submatrix A I J)\n  b = Determinant.det (submatrix A I J)\n\ngoal (1 subgoal):\n 1. Gcd (minors (P * A * Q) k) dvd b", "by simp"], ["proof (state)\nthis:\n  Gcd (minors (P * A * Q) k) dvd b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Gcd_minors_dvd_diag_PAQ:\n  fixes P A Q::\"'a::{semiring_Gcd,comm_ring_1} mat\"\n assumes A: \"A \\<in> carrier_mat m n\"\n    and P: \"P \\<in> carrier_mat m m\"\n    and Q: \"Q \\<in> carrier_mat n n\"\n    and SNF: \"Smith_normal_form_mat (P*A*Q)\"\n    and k: \"k\\<le>min m n\"\n  shows \"Gcd (minors A k) dvd (\\<Prod>i=0..<k. (P * A * Q) $$ (i,i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Gcd (minors A k) dvd (\\<Prod>i = 0..<k. (P * A * Q) $$ (i, i))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Gcd (minors A k) dvd (\\<Prod>i = 0..<k. (P * A * Q) $$ (i, i))", "have \"Gcd (minors A k) dvd Gcd (minors (P * A * Q) k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Gcd (minors A k) dvd Gcd (minors (P * A * Q) k)", "by (rule Gcd_minors_A_dvd_Gcd_minors_PAQ[OF A P Q])"], ["proof (state)\nthis:\n  Gcd (minors A k) dvd Gcd (minors (P * A * Q) k)\n\ngoal (1 subgoal):\n 1. Gcd (minors A k) dvd (\\<Prod>i = 0..<k. (P * A * Q) $$ (i, i))", "also"], ["proof (state)\nthis:\n  Gcd (minors A k) dvd Gcd (minors (P * A * Q) k)\n\ngoal (1 subgoal):\n 1. Gcd (minors A k) dvd (\\<Prod>i = 0..<k. (P * A * Q) $$ (i, i))", "have \"... dvd (\\<Prod>i=0..<k. (P*A*Q) $$ (i,i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Gcd (minors (P * A * Q) k) dvd (\\<Prod>i = 0..<k. (P * A * Q) $$ (i, i))", "by (rule Gcd_minors_dvd_diagonal[OF _ SNF k], insert P A Q, auto)"], ["proof (state)\nthis:\n  Gcd (minors (P * A * Q) k) dvd (\\<Prod>i = 0..<k. (P * A * Q) $$ (i, i))\n\ngoal (1 subgoal):\n 1. Gcd (minors A k) dvd (\\<Prod>i = 0..<k. (P * A * Q) $$ (i, i))", "finally"], ["proof (chain)\npicking this:\n  Gcd (minors A k) dvd (\\<Prod>i = 0..<k. (P * A * Q) $$ (i, i))", "show ?thesis"], ["proof (prove)\nusing this:\n  Gcd (minors A k) dvd (\\<Prod>i = 0..<k. (P * A * Q) $$ (i, i))\n\ngoal (1 subgoal):\n 1. Gcd (minors A k) dvd (\\<Prod>i = 0..<k. (P * A * Q) $$ (i, i))", "."], ["proof (state)\nthis:\n  Gcd (minors A k) dvd (\\<Prod>i = 0..<k. (P * A * Q) $$ (i, i))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma diag_PAQ_dvd_Gcd_minors:\n  fixes P A Q::\"'a::{semiring_Gcd,comm_ring_1} mat\"\n assumes A: \"A \\<in> carrier_mat m n\"\n    and P: \"P \\<in> carrier_mat m m\"\n    and Q: \"Q \\<in> carrier_mat n n\"\n    and inv_P: \"invertible_mat P\"\n    and inv_Q: \"invertible_mat Q\"\n    and SNF: \"Smith_normal_form_mat (P*A*Q)\"\n  shows \"(\\<Prod>i=0..<k. (P * A * Q) $$ (i,i)) dvd Gcd (minors A k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<k. (P * A * Q) $$ (i, i)) dvd Gcd (minors A k)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<k. (P * A * Q) $$ (i, i)) dvd Gcd (minors A k)", "have \"(\\<Prod>i=0..<k. (P*A*Q) $$ (i,i)) dvd Gcd (minors (P * A * Q) k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<k. (P * A * Q) $$ (i, i)) dvd Gcd (minors (P * A * Q) k)", "by (rule diagonal_dvd_Gcd_minors[OF _ SNF], auto)"], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<k. (P * A * Q) $$ (i, i)) dvd Gcd (minors (P * A * Q) k)\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<k. (P * A * Q) $$ (i, i)) dvd Gcd (minors A k)", "also"], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<k. (P * A * Q) $$ (i, i)) dvd Gcd (minors (P * A * Q) k)\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<k. (P * A * Q) $$ (i, i)) dvd Gcd (minors A k)", "have \"... dvd Gcd (minors A k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Gcd (minors (P * A * Q) k) dvd Gcd (minors A k)", "by (rule Gcd_minors_PAQ_dvd_Gcd_minors_A[OF _ _ _ inv_P inv_Q], insert P A Q, auto)"], ["proof (state)\nthis:\n  Gcd (minors (P * A * Q) k) dvd Gcd (minors A k)\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<k. (P * A * Q) $$ (i, i)) dvd Gcd (minors A k)", "finally"], ["proof (chain)\npicking this:\n  (\\<Prod>i = 0..<k. (P * A * Q) $$ (i, i)) dvd Gcd (minors A k)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Prod>i = 0..<k. (P * A * Q) $$ (i, i)) dvd Gcd (minors A k)\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<k. (P * A * Q) $$ (i, i)) dvd Gcd (minors A k)", "."], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<k. (P * A * Q) $$ (i, i)) dvd Gcd (minors A k)\n\ngoal:\nNo subgoals!", "qed"], ["", "(*This lemma requires semidom in order to apply prod_zero_iff*)"], ["", "lemma Smith_prod_zero_imp_last_zero:\n  fixes A::\"'a::{semidom,comm_ring_1} mat\"\n  assumes  A: \"A \\<in> carrier_mat m n\"\n    and SNF: \"Smith_normal_form_mat A\"\n    and prod_0: \"(\\<Prod>j=0..<Suc i. A $$ (j,j)) = 0\"\n  and i: \"i<min m n\"\n  shows \"A $$(i,i) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A $$ (i, i) = (0::'a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. A $$ (i, i) = (0::'a)", "obtain j where Ajj: \"A$$(j,j) = 0\" and j: \"j<Suc i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>j.\n        \\<lbrakk>A $$ (j, j) = (0::'a); j < Suc i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using prod_0 prod_zero_iff"], ["proof (prove)\nusing this:\n  (\\<Prod>j = 0..<Suc i. A $$ (j, j)) = (0::'a)\n  finite ?A \\<Longrightarrow>\n  (prod ?f ?A = (0::?'a)) = (\\<exists>a\\<in>?A. ?f a = (0::?'a))\n\ngoal (1 subgoal):\n 1. (\\<And>j.\n        \\<lbrakk>A $$ (j, j) = (0::'a); j < Suc i\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  A $$ (j, j) = (0::'a)\n  j < Suc i\n\ngoal (1 subgoal):\n 1. A $$ (i, i) = (0::'a)", "show \"A $$(i,i) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A $$ (i, i) = (0::'a)", "by (rule Smith_zero_imp_zero[OF A SNF Ajj i], insert j, auto)"], ["proof (state)\nthis:\n  A $$ (i, i) = (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Final theorem\\<close>"], ["", "lemma Smith_normal_form_uniqueness_aux:\n  fixes P A Q::\"'a::{idom,semiring_Gcd} mat\"\n  assumes A: \"A \\<in> carrier_mat m n\"\n  (*PAQ = B with B in SNF and P,Q invertible matrices*)\n  and P: \"P \\<in> carrier_mat m m\"\n  and Q: \"Q \\<in> carrier_mat n n\"\n  and inv_P: \"invertible_mat P\"\n  and inv_Q: \"invertible_mat Q\"\n  and PAQ_B: \"P*A*Q = B\"\n  and SNF: \"Smith_normal_form_mat B\"\n  (*P'AQ' = B' with B' in SNF and P',Q' invertible matrices*)\n  and P': \"P' \\<in> carrier_mat m m\"\n  and Q': \"Q' \\<in> carrier_mat n n\"\n  and inv_P': \"invertible_mat P'\"\n  and inv_Q': \"invertible_mat Q'\"\n  and P'AQ'_B': \"P'*A*Q' = B'\"\n  and SNF_B': \"Smith_normal_form_mat B'\"\n  and k: \"k<min m n\"\nshows \"\\<forall>i\\<le>k. B$$(i,i) dvd B'$$(i,i) \\<and> B'$$(i,i) dvd B$$(i,i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i\\<le>k.\n       B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "proof (rule allI, rule impI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<le> k \\<Longrightarrow>\n       B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<le> k \\<Longrightarrow>\n       B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "assume ik: \"i \\<le> k\""], ["proof (state)\nthis:\n  i \\<le> k\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i \\<le> k \\<Longrightarrow>\n       B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "show \" B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "let ?\\<Pi>Bi = \"(\\<Prod>i=0..<i. B $$ (i,i))\""], ["proof (state)\ngoal (1 subgoal):\n 1. B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "let ?\\<Pi>B'i = \"(\\<Prod>i=0..<i. B' $$ (i,i))\""], ["proof (state)\ngoal (1 subgoal):\n 1. B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "have \"?\\<Pi>B'i dvd Gcd (minors A i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<i. B' $$ (i, i)) dvd Gcd (minors A i)", "by (unfold P'AQ'_B'[symmetric], rule diag_PAQ_dvd_Gcd_minors[OF A P' Q' inv_P' inv_Q'],\n          insert P'AQ'_B' SNF_B' ik k, auto )"], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<i. B' $$ (i, i)) dvd Gcd (minors A i)\n\ngoal (1 subgoal):\n 1. B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "also"], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<i. B' $$ (i, i)) dvd Gcd (minors A i)\n\ngoal (1 subgoal):\n 1. B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "have \"... dvd ?\\<Pi>Bi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Gcd (minors A i) dvd (\\<Prod>i = 0..<i. B $$ (i, i))", "by (unfold PAQ_B[symmetric], rule Gcd_minors_dvd_diag_PAQ[OF A P Q],\n          insert PAQ_B SNF ik k, auto)"], ["proof (state)\nthis:\n  Gcd (minors A i) dvd (\\<Prod>i = 0..<i. B $$ (i, i))\n\ngoal (1 subgoal):\n 1. B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "finally"], ["proof (chain)\npicking this:\n  (\\<Prod>i = 0..<i. B' $$ (i, i)) dvd (\\<Prod>i = 0..<i. B $$ (i, i))", "have B'_i_dvd_B_i: \"?\\<Pi>B'i dvd ?\\<Pi>Bi\""], ["proof (prove)\nusing this:\n  (\\<Prod>i = 0..<i. B' $$ (i, i)) dvd (\\<Prod>i = 0..<i. B $$ (i, i))\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<i. B' $$ (i, i)) dvd (\\<Prod>i = 0..<i. B $$ (i, i))", "."], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<i. B' $$ (i, i)) dvd (\\<Prod>i = 0..<i. B $$ (i, i))\n\ngoal (1 subgoal):\n 1. B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "have \"?\\<Pi>Bi dvd Gcd (minors A i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<i. B $$ (i, i)) dvd Gcd (minors A i)", "by (unfold PAQ_B[symmetric], rule diag_PAQ_dvd_Gcd_minors[OF A P Q inv_P inv_Q],\n          insert PAQ_B SNF ik k, auto )"], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<i. B $$ (i, i)) dvd Gcd (minors A i)\n\ngoal (1 subgoal):\n 1. B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "also"], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<i. B $$ (i, i)) dvd Gcd (minors A i)\n\ngoal (1 subgoal):\n 1. B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "have \"... dvd ?\\<Pi>B'i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Gcd (minors A i) dvd (\\<Prod>i = 0..<i. B' $$ (i, i))", "by (unfold P'AQ'_B'[symmetric], rule Gcd_minors_dvd_diag_PAQ[OF A P' Q'],\n          insert P'AQ'_B' SNF_B' ik k, auto)"], ["proof (state)\nthis:\n  Gcd (minors A i) dvd (\\<Prod>i = 0..<i. B' $$ (i, i))\n\ngoal (1 subgoal):\n 1. B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "finally"], ["proof (chain)\npicking this:\n  (\\<Prod>i = 0..<i. B $$ (i, i)) dvd (\\<Prod>i = 0..<i. B' $$ (i, i))", "have B_i_dvd_B'_i: \"?\\<Pi>Bi dvd ?\\<Pi>B'i\""], ["proof (prove)\nusing this:\n  (\\<Prod>i = 0..<i. B $$ (i, i)) dvd (\\<Prod>i = 0..<i. B' $$ (i, i))\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<i. B $$ (i, i)) dvd (\\<Prod>i = 0..<i. B' $$ (i, i))", "."], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<i. B $$ (i, i)) dvd (\\<Prod>i = 0..<i. B' $$ (i, i))\n\ngoal (1 subgoal):\n 1. B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "let ?\\<Pi>B_Suc = \"(\\<Prod>i=0..<Suc i. B $$ (i,i))\""], ["proof (state)\ngoal (1 subgoal):\n 1. B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "let ?\\<Pi>B'_Suc = \"(\\<Prod>i=0..<Suc i. B' $$ (i,i))\""], ["proof (state)\ngoal (1 subgoal):\n 1. B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "have \"?\\<Pi>B'_Suc dvd Gcd (minors A (Suc i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<Suc i. B' $$ (i, i)) dvd Gcd (minors A (Suc i))", "by (unfold P'AQ'_B'[symmetric], rule diag_PAQ_dvd_Gcd_minors[OF A P' Q' inv_P' inv_Q'],\n          insert P'AQ'_B' SNF_B' ik k, auto )"], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<Suc i. B' $$ (i, i)) dvd Gcd (minors A (Suc i))\n\ngoal (1 subgoal):\n 1. B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "also"], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<Suc i. B' $$ (i, i)) dvd Gcd (minors A (Suc i))\n\ngoal (1 subgoal):\n 1. B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "have \"... dvd ?\\<Pi>B_Suc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Gcd (minors A (Suc i)) dvd (\\<Prod>i = 0..<Suc i. B $$ (i, i))", "by (unfold PAQ_B[symmetric], rule Gcd_minors_dvd_diag_PAQ[OF A P Q],\n          insert PAQ_B SNF ik k, auto)"], ["proof (state)\nthis:\n  Gcd (minors A (Suc i)) dvd (\\<Prod>i = 0..<Suc i. B $$ (i, i))\n\ngoal (1 subgoal):\n 1. B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "finally"], ["proof (chain)\npicking this:\n  (\\<Prod>i = 0..<Suc i. B' $$ (i, i)) dvd\n  (\\<Prod>i = 0..<Suc i. B $$ (i, i))", "have 3: \"?\\<Pi>B'_Suc dvd ?\\<Pi>B_Suc\""], ["proof (prove)\nusing this:\n  (\\<Prod>i = 0..<Suc i. B' $$ (i, i)) dvd\n  (\\<Prod>i = 0..<Suc i. B $$ (i, i))\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<Suc i. B' $$ (i, i)) dvd\n    (\\<Prod>i = 0..<Suc i. B $$ (i, i))", "."], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<Suc i. B' $$ (i, i)) dvd\n  (\\<Prod>i = 0..<Suc i. B $$ (i, i))\n\ngoal (1 subgoal):\n 1. B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "have \"?\\<Pi>B_Suc dvd Gcd (minors A (Suc i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<Suc i. B $$ (i, i)) dvd Gcd (minors A (Suc i))", "by (unfold PAQ_B[symmetric], rule diag_PAQ_dvd_Gcd_minors[OF A P Q inv_P inv_Q],\n          insert PAQ_B SNF ik k, auto )"], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<Suc i. B $$ (i, i)) dvd Gcd (minors A (Suc i))\n\ngoal (1 subgoal):\n 1. B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "also"], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<Suc i. B $$ (i, i)) dvd Gcd (minors A (Suc i))\n\ngoal (1 subgoal):\n 1. B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "have \"... dvd ?\\<Pi>B'_Suc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Gcd (minors A (Suc i)) dvd (\\<Prod>i = 0..<Suc i. B' $$ (i, i))", "by (unfold P'AQ'_B'[symmetric], rule Gcd_minors_dvd_diag_PAQ[OF A P' Q'],\n          insert P'AQ'_B' SNF_B' ik k, auto)"], ["proof (state)\nthis:\n  Gcd (minors A (Suc i)) dvd (\\<Prod>i = 0..<Suc i. B' $$ (i, i))\n\ngoal (1 subgoal):\n 1. B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "finally"], ["proof (chain)\npicking this:\n  (\\<Prod>i = 0..<Suc i. B $$ (i, i)) dvd\n  (\\<Prod>i = 0..<Suc i. B' $$ (i, i))", "have 4: \"?\\<Pi>B_Suc dvd ?\\<Pi>B'_Suc\""], ["proof (prove)\nusing this:\n  (\\<Prod>i = 0..<Suc i. B $$ (i, i)) dvd\n  (\\<Prod>i = 0..<Suc i. B' $$ (i, i))\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<Suc i. B $$ (i, i)) dvd\n    (\\<Prod>i = 0..<Suc i. B' $$ (i, i))", "."], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<Suc i. B $$ (i, i)) dvd\n  (\\<Prod>i = 0..<Suc i. B' $$ (i, i))\n\ngoal (1 subgoal):\n 1. B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "proof (cases \"?\\<Pi>B_Suc = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<Prod>i = 0..<Suc i. B $$ (i, i)) = (0::'a) \\<Longrightarrow>\n    B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)\n 2. (\\<Prod>i = 0..<Suc i. B $$ (i, i)) \\<noteq> (0::'a) \\<Longrightarrow>\n    B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "case True"], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<Suc i. B $$ (i, i)) = (0::'a)\n\ngoal (2 subgoals):\n 1. (\\<Prod>i = 0..<Suc i. B $$ (i, i)) = (0::'a) \\<Longrightarrow>\n    B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)\n 2. (\\<Prod>i = 0..<Suc i. B $$ (i, i)) \\<noteq> (0::'a) \\<Longrightarrow>\n    B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "have True2: \"?\\<Pi>B'_Suc = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<Suc i. B' $$ (i, i)) = (0::'a)", "using 4 True"], ["proof (prove)\nusing this:\n  (\\<Prod>i = 0..<Suc i. B $$ (i, i)) dvd\n  (\\<Prod>i = 0..<Suc i. B' $$ (i, i))\n  (\\<Prod>i = 0..<Suc i. B $$ (i, i)) = (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<Suc i. B' $$ (i, i)) = (0::'a)", "by fastforce"], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<Suc i. B' $$ (i, i)) = (0::'a)\n\ngoal (2 subgoals):\n 1. (\\<Prod>i = 0..<Suc i. B $$ (i, i)) = (0::'a) \\<Longrightarrow>\n    B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)\n 2. (\\<Prod>i = 0..<Suc i. B $$ (i, i)) \\<noteq> (0::'a) \\<Longrightarrow>\n    B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "have \"B$$(i,i) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B $$ (i, i) = (0::'a)", "by (rule Smith_prod_zero_imp_last_zero[OF _ SNF True], insert ik k PAQ_B P Q, auto)"], ["proof (state)\nthis:\n  B $$ (i, i) = (0::'a)\n\ngoal (2 subgoals):\n 1. (\\<Prod>i = 0..<Suc i. B $$ (i, i)) = (0::'a) \\<Longrightarrow>\n    B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)\n 2. (\\<Prod>i = 0..<Suc i. B $$ (i, i)) \\<noteq> (0::'a) \\<Longrightarrow>\n    B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "moreover"], ["proof (state)\nthis:\n  B $$ (i, i) = (0::'a)\n\ngoal (2 subgoals):\n 1. (\\<Prod>i = 0..<Suc i. B $$ (i, i)) = (0::'a) \\<Longrightarrow>\n    B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)\n 2. (\\<Prod>i = 0..<Suc i. B $$ (i, i)) \\<noteq> (0::'a) \\<Longrightarrow>\n    B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "have \"B'$$(i,i) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B' $$ (i, i) = (0::'a)", "by (rule Smith_prod_zero_imp_last_zero[OF _ SNF_B' True2],\n            insert ik k P'AQ'_B' P' Q', auto)"], ["proof (state)\nthis:\n  B' $$ (i, i) = (0::'a)\n\ngoal (2 subgoals):\n 1. (\\<Prod>i = 0..<Suc i. B $$ (i, i)) = (0::'a) \\<Longrightarrow>\n    B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)\n 2. (\\<Prod>i = 0..<Suc i. B $$ (i, i)) \\<noteq> (0::'a) \\<Longrightarrow>\n    B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "ultimately"], ["proof (chain)\npicking this:\n  B $$ (i, i) = (0::'a)\n  B' $$ (i, i) = (0::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  B $$ (i, i) = (0::'a)\n  B' $$ (i, i) = (0::'a)\n\ngoal (1 subgoal):\n 1. B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "by auto"], ["proof (state)\nthis:\n  B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<Suc i. B $$ (i, i)) \\<noteq> (0::'a) \\<Longrightarrow>\n    B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<Suc i. B $$ (i, i)) \\<noteq> (0::'a) \\<Longrightarrow>\n    B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "case False"], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<Suc i. B $$ (i, i)) \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<Suc i. B $$ (i, i)) \\<noteq> (0::'a) \\<Longrightarrow>\n    B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "have \"\\<exists>u. u dvd 1 \\<and> ?\\<Pi>B'i = u * ?\\<Pi>Bi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>u.\n       is_unit u \\<and>\n       (\\<Prod>i = 0..<i. B' $$ (i, i)) =\n       u * (\\<Prod>i = 0..<i. B $$ (i, i))", "by (rule dvd_associated2[OF B'_i_dvd_B_i B_i_dvd_B'_i], insert False B'_i_dvd_B_i, force)"], ["proof (state)\nthis:\n  \\<exists>u.\n     is_unit u \\<and>\n     (\\<Prod>i = 0..<i. B' $$ (i, i)) = u * (\\<Prod>i = 0..<i. B $$ (i, i))\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<Suc i. B $$ (i, i)) \\<noteq> (0::'a) \\<Longrightarrow>\n    B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "from this"], ["proof (chain)\npicking this:\n  \\<exists>u.\n     is_unit u \\<and>\n     (\\<Prod>i = 0..<i. B' $$ (i, i)) = u * (\\<Prod>i = 0..<i. B $$ (i, i))", "obtain u where eq1: \"(\\<Prod>i=0..<i. B' $$ (i,i)) = u * (\\<Prod>i=0..<i. B $$ (i,i))\"\n        and u_dvd_1: \"u dvd 1\""], ["proof (prove)\nusing this:\n  \\<exists>u.\n     is_unit u \\<and>\n     (\\<Prod>i = 0..<i. B' $$ (i, i)) = u * (\\<Prod>i = 0..<i. B $$ (i, i))\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>(\\<Prod>i = 0..<i. B' $$ (i, i)) =\n                 u * (\\<Prod>i = 0..<i. B $$ (i, i));\n         is_unit u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<i. B' $$ (i, i)) = u * (\\<Prod>i = 0..<i. B $$ (i, i))\n  is_unit u\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<Suc i. B $$ (i, i)) \\<noteq> (0::'a) \\<Longrightarrow>\n    B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "have \"\\<exists>u. u dvd 1 \\<and> ?\\<Pi>B_Suc = u * ?\\<Pi>B'_Suc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>u.\n       is_unit u \\<and>\n       (\\<Prod>i = 0..<Suc i. B $$ (i, i)) =\n       u * (\\<Prod>i = 0..<Suc i. B' $$ (i, i))", "by (rule dvd_associated2[OF 4 3 False])"], ["proof (state)\nthis:\n  \\<exists>u.\n     is_unit u \\<and>\n     (\\<Prod>i = 0..<Suc i. B $$ (i, i)) =\n     u * (\\<Prod>i = 0..<Suc i. B' $$ (i, i))\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<Suc i. B $$ (i, i)) \\<noteq> (0::'a) \\<Longrightarrow>\n    B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "from this"], ["proof (chain)\npicking this:\n  \\<exists>u.\n     is_unit u \\<and>\n     (\\<Prod>i = 0..<Suc i. B $$ (i, i)) =\n     u * (\\<Prod>i = 0..<Suc i. B' $$ (i, i))", "obtain w where eq2: \"(\\<Prod>i=0..<Suc i. B $$ (i,i)) = w * (\\<Prod>i=0..<Suc i. B' $$ (i,i))\"\n        and w_dvd_1: \"w dvd 1\""], ["proof (prove)\nusing this:\n  \\<exists>u.\n     is_unit u \\<and>\n     (\\<Prod>i = 0..<Suc i. B $$ (i, i)) =\n     u * (\\<Prod>i = 0..<Suc i. B' $$ (i, i))\n\ngoal (1 subgoal):\n 1. (\\<And>w.\n        \\<lbrakk>(\\<Prod>i = 0..<Suc i. B $$ (i, i)) =\n                 w * (\\<Prod>i = 0..<Suc i. B' $$ (i, i));\n         is_unit w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<Suc i. B $$ (i, i)) =\n  w * (\\<Prod>i = 0..<Suc i. B' $$ (i, i))\n  is_unit w\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<Suc i. B $$ (i, i)) \\<noteq> (0::'a) \\<Longrightarrow>\n    B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "have \"B $$ (i, i) * (\\<Prod>i=0..<i. B $$ (i,i)) = (\\<Prod>i=0..<Suc i. B $$ (i,i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B $$ (i, i) * (\\<Prod>i = 0..<i. B $$ (i, i)) =\n    (\\<Prod>i = 0..<Suc i. B $$ (i, i))", "by (simp add: prod.atLeast0_lessThan_Suc ik)"], ["proof (state)\nthis:\n  B $$ (i, i) * (\\<Prod>i = 0..<i. B $$ (i, i)) =\n  (\\<Prod>i = 0..<Suc i. B $$ (i, i))\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<Suc i. B $$ (i, i)) \\<noteq> (0::'a) \\<Longrightarrow>\n    B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "also"], ["proof (state)\nthis:\n  B $$ (i, i) * (\\<Prod>i = 0..<i. B $$ (i, i)) =\n  (\\<Prod>i = 0..<Suc i. B $$ (i, i))\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<Suc i. B $$ (i, i)) \\<noteq> (0::'a) \\<Longrightarrow>\n    B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "have \"... = w * (\\<Prod>i=0..<Suc i. B' $$ (i,i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<Suc i. B $$ (i, i)) =\n    w * (\\<Prod>i = 0..<Suc i. B' $$ (i, i))", "unfolding eq2"], ["proof (prove)\ngoal (1 subgoal):\n 1. w * (\\<Prod>i = 0..<Suc i. B' $$ (i, i)) =\n    w * (\\<Prod>i = 0..<Suc i. B' $$ (i, i))", "by auto"], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<Suc i. B $$ (i, i)) =\n  w * (\\<Prod>i = 0..<Suc i. B' $$ (i, i))\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<Suc i. B $$ (i, i)) \\<noteq> (0::'a) \\<Longrightarrow>\n    B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "also"], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<Suc i. B $$ (i, i)) =\n  w * (\\<Prod>i = 0..<Suc i. B' $$ (i, i))\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<Suc i. B $$ (i, i)) \\<noteq> (0::'a) \\<Longrightarrow>\n    B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "have \"... = w * (B' $$ (i,i) * (\\<Prod>i=0..<i. B' $$ (i,i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w * (\\<Prod>i = 0..<Suc i. B' $$ (i, i)) =\n    w * (B' $$ (i, i) * (\\<Prod>i = 0..<i. B' $$ (i, i)))", "by (simp add: prod.atLeast0_lessThan_Suc ik)"], ["proof (state)\nthis:\n  w * (\\<Prod>i = 0..<Suc i. B' $$ (i, i)) =\n  w * (B' $$ (i, i) * (\\<Prod>i = 0..<i. B' $$ (i, i)))\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<Suc i. B $$ (i, i)) \\<noteq> (0::'a) \\<Longrightarrow>\n    B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "also"], ["proof (state)\nthis:\n  w * (\\<Prod>i = 0..<Suc i. B' $$ (i, i)) =\n  w * (B' $$ (i, i) * (\\<Prod>i = 0..<i. B' $$ (i, i)))\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<Suc i. B $$ (i, i)) \\<noteq> (0::'a) \\<Longrightarrow>\n    B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "have \"... = w * (B' $$ (i,i) * u * (\\<Prod>i=0..<i. B $$ (i,i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. w * (B' $$ (i, i) * (\\<Prod>i = 0..<i. B' $$ (i, i))) =\n    w * (B' $$ (i, i) * u * (\\<Prod>i = 0..<i. B $$ (i, i)))", "unfolding eq1"], ["proof (prove)\ngoal (1 subgoal):\n 1. w * (B' $$ (i, i) * (u * (\\<Prod>i = 0..<i. B $$ (i, i)))) =\n    w * (B' $$ (i, i) * u * (\\<Prod>i = 0..<i. B $$ (i, i)))", "by auto"], ["proof (state)\nthis:\n  w * (B' $$ (i, i) * (\\<Prod>i = 0..<i. B' $$ (i, i))) =\n  w * (B' $$ (i, i) * u * (\\<Prod>i = 0..<i. B $$ (i, i)))\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<Suc i. B $$ (i, i)) \\<noteq> (0::'a) \\<Longrightarrow>\n    B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "finally"], ["proof (chain)\npicking this:\n  B $$ (i, i) * (\\<Prod>i = 0..<i. B $$ (i, i)) =\n  w * (B' $$ (i, i) * u * (\\<Prod>i = 0..<i. B $$ (i, i)))", "have \"B $$ (i,i) = w * u * B' $$ (i,i)\""], ["proof (prove)\nusing this:\n  B $$ (i, i) * (\\<Prod>i = 0..<i. B $$ (i, i)) =\n  w * (B' $$ (i, i) * u * (\\<Prod>i = 0..<i. B $$ (i, i)))\n\ngoal (1 subgoal):\n 1. B $$ (i, i) = w * u * B' $$ (i, i)", "using False"], ["proof (prove)\nusing this:\n  B $$ (i, i) * (\\<Prod>i = 0..<i. B $$ (i, i)) =\n  w * (B' $$ (i, i) * u * (\\<Prod>i = 0..<i. B $$ (i, i)))\n  (\\<Prod>i = 0..<Suc i. B $$ (i, i)) \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. B $$ (i, i) = w * u * B' $$ (i, i)", "by auto"], ["proof (state)\nthis:\n  B $$ (i, i) = w * u * B' $$ (i, i)\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<Suc i. B $$ (i, i)) \\<noteq> (0::'a) \\<Longrightarrow>\n    B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "moreover"], ["proof (state)\nthis:\n  B $$ (i, i) = w * u * B' $$ (i, i)\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<Suc i. B $$ (i, i)) \\<noteq> (0::'a) \\<Longrightarrow>\n    B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "have \"w*u dvd 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_unit (w * u)", "using u_dvd_1 w_dvd_1"], ["proof (prove)\nusing this:\n  is_unit u\n  is_unit w\n\ngoal (1 subgoal):\n 1. is_unit (w * u)", "by auto"], ["proof (state)\nthis:\n  is_unit (w * u)\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<Suc i. B $$ (i, i)) \\<noteq> (0::'a) \\<Longrightarrow>\n    B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "ultimately"], ["proof (chain)\npicking this:\n  B $$ (i, i) = w * u * B' $$ (i, i)\n  is_unit (w * u)", "have \"\\<exists>u. is_unit u \\<and> B $$ (i, i) = u * B' $$ (i, i)\""], ["proof (prove)\nusing this:\n  B $$ (i, i) = w * u * B' $$ (i, i)\n  is_unit (w * u)\n\ngoal (1 subgoal):\n 1. \\<exists>u. is_unit u \\<and> B $$ (i, i) = u * B' $$ (i, i)", "by auto"], ["proof (state)\nthis:\n  \\<exists>u. is_unit u \\<and> B $$ (i, i) = u * B' $$ (i, i)\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<Suc i. B $$ (i, i)) \\<noteq> (0::'a) \\<Longrightarrow>\n    B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>u. is_unit u \\<and> B $$ (i, i) = u * B' $$ (i, i)\n\ngoal (1 subgoal):\n 1. B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "using dvd_associated2"], ["proof (prove)\nusing this:\n  \\<exists>u. is_unit u \\<and> B $$ (i, i) = u * B' $$ (i, i)\n  \\<lbrakk>?a dvd ?b; ?b dvd ?a; ?a \\<noteq> (0::?'a)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>u. u dvd (1::?'a) \\<and> ?a = u * ?b\n\ngoal (1 subgoal):\n 1. B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "by force"], ["proof (state)\nthis:\n  B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Smith_normal_form_uniqueness:\n  fixes P A Q::\"'a::{idom,semiring_Gcd} mat\"\n  assumes A: \"A \\<in> carrier_mat m n\"\n    (*PAQ = B with B in SNF and P,Q invertible matrices*)\n    and P: \"P \\<in> carrier_mat m m\"\n    and Q: \"Q \\<in> carrier_mat n n\"\n    and inv_P: \"invertible_mat P\"\n    and inv_Q: \"invertible_mat Q\"\n    and PAQ_B: \"P*A*Q = B\"\n    and SNF: \"Smith_normal_form_mat B\"\n    (*P'AQ' = B' with B' in SNF and P',Q' invertible matrices*)\n    and P': \"P' \\<in> carrier_mat m m\"\n    and Q': \"Q' \\<in> carrier_mat n n\"\n    and inv_P': \"invertible_mat P'\"\n    and inv_Q': \"invertible_mat Q'\"\n    and P'AQ'_B': \"P'*A*Q' = B'\"\n    and SNF_B': \"Smith_normal_form_mat B'\"\n    and i: \"i < min m n\"\n  shows \"\\<exists>u. u dvd 1 \\<and> B $$ (i,i) = u * B' $$ (i,i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>u. is_unit u \\<and> B $$ (i, i) = u * B' $$ (i, i)", "proof (cases \"B $$ (i,i) = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. B $$ (i, i) = (0::'a) \\<Longrightarrow>\n    \\<exists>u. is_unit u \\<and> B $$ (i, i) = u * B' $$ (i, i)\n 2. B $$ (i, i) \\<noteq> (0::'a) \\<Longrightarrow>\n    \\<exists>u. is_unit u \\<and> B $$ (i, i) = u * B' $$ (i, i)", "case True"], ["proof (state)\nthis:\n  B $$ (i, i) = (0::'a)\n\ngoal (2 subgoals):\n 1. B $$ (i, i) = (0::'a) \\<Longrightarrow>\n    \\<exists>u. is_unit u \\<and> B $$ (i, i) = u * B' $$ (i, i)\n 2. B $$ (i, i) \\<noteq> (0::'a) \\<Longrightarrow>\n    \\<exists>u. is_unit u \\<and> B $$ (i, i) = u * B' $$ (i, i)", "let ?\\<Pi>B_Suc = \"(\\<Prod>i=0..<Suc i. B $$ (i,i))\""], ["proof (state)\ngoal (2 subgoals):\n 1. B $$ (i, i) = (0::'a) \\<Longrightarrow>\n    \\<exists>u. is_unit u \\<and> B $$ (i, i) = u * B' $$ (i, i)\n 2. B $$ (i, i) \\<noteq> (0::'a) \\<Longrightarrow>\n    \\<exists>u. is_unit u \\<and> B $$ (i, i) = u * B' $$ (i, i)", "let ?\\<Pi>B'_Suc = \"(\\<Prod>i=0..<Suc i. B' $$ (i,i))\""], ["proof (state)\ngoal (2 subgoals):\n 1. B $$ (i, i) = (0::'a) \\<Longrightarrow>\n    \\<exists>u. is_unit u \\<and> B $$ (i, i) = u * B' $$ (i, i)\n 2. B $$ (i, i) \\<noteq> (0::'a) \\<Longrightarrow>\n    \\<exists>u. is_unit u \\<and> B $$ (i, i) = u * B' $$ (i, i)", "have \"?\\<Pi>B_Suc dvd Gcd (minors A (Suc i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<Suc i. B $$ (i, i)) dvd Gcd (minors A (Suc i))", "by (unfold PAQ_B[symmetric], rule diag_PAQ_dvd_Gcd_minors[OF A P Q inv_P inv_Q],\n        insert PAQ_B SNF i, auto)"], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<Suc i. B $$ (i, i)) dvd Gcd (minors A (Suc i))\n\ngoal (2 subgoals):\n 1. B $$ (i, i) = (0::'a) \\<Longrightarrow>\n    \\<exists>u. is_unit u \\<and> B $$ (i, i) = u * B' $$ (i, i)\n 2. B $$ (i, i) \\<noteq> (0::'a) \\<Longrightarrow>\n    \\<exists>u. is_unit u \\<and> B $$ (i, i) = u * B' $$ (i, i)", "also"], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<Suc i. B $$ (i, i)) dvd Gcd (minors A (Suc i))\n\ngoal (2 subgoals):\n 1. B $$ (i, i) = (0::'a) \\<Longrightarrow>\n    \\<exists>u. is_unit u \\<and> B $$ (i, i) = u * B' $$ (i, i)\n 2. B $$ (i, i) \\<noteq> (0::'a) \\<Longrightarrow>\n    \\<exists>u. is_unit u \\<and> B $$ (i, i) = u * B' $$ (i, i)", "have \"... dvd ?\\<Pi>B'_Suc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Gcd (minors A (Suc i)) dvd (\\<Prod>i = 0..<Suc i. B' $$ (i, i))", "by (unfold P'AQ'_B'[symmetric], rule Gcd_minors_dvd_diag_PAQ[OF A P' Q'],\n        insert P'AQ'_B' SNF_B' i, auto)"], ["proof (state)\nthis:\n  Gcd (minors A (Suc i)) dvd (\\<Prod>i = 0..<Suc i. B' $$ (i, i))\n\ngoal (2 subgoals):\n 1. B $$ (i, i) = (0::'a) \\<Longrightarrow>\n    \\<exists>u. is_unit u \\<and> B $$ (i, i) = u * B' $$ (i, i)\n 2. B $$ (i, i) \\<noteq> (0::'a) \\<Longrightarrow>\n    \\<exists>u. is_unit u \\<and> B $$ (i, i) = u * B' $$ (i, i)", "finally"], ["proof (chain)\npicking this:\n  (\\<Prod>i = 0..<Suc i. B $$ (i, i)) dvd\n  (\\<Prod>i = 0..<Suc i. B' $$ (i, i))", "have 4: \"?\\<Pi>B_Suc dvd ?\\<Pi>B'_Suc\""], ["proof (prove)\nusing this:\n  (\\<Prod>i = 0..<Suc i. B $$ (i, i)) dvd\n  (\\<Prod>i = 0..<Suc i. B' $$ (i, i))\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<Suc i. B $$ (i, i)) dvd\n    (\\<Prod>i = 0..<Suc i. B' $$ (i, i))", "."], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<Suc i. B $$ (i, i)) dvd\n  (\\<Prod>i = 0..<Suc i. B' $$ (i, i))\n\ngoal (2 subgoals):\n 1. B $$ (i, i) = (0::'a) \\<Longrightarrow>\n    \\<exists>u. is_unit u \\<and> B $$ (i, i) = u * B' $$ (i, i)\n 2. B $$ (i, i) \\<noteq> (0::'a) \\<Longrightarrow>\n    \\<exists>u. is_unit u \\<and> B $$ (i, i) = u * B' $$ (i, i)", "have prod0: \"?\\<Pi>B_Suc=0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<Suc i. B $$ (i, i)) = (0::'a)", "using True"], ["proof (prove)\nusing this:\n  B $$ (i, i) = (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<Suc i. B $$ (i, i)) = (0::'a)", "by auto"], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<Suc i. B $$ (i, i)) = (0::'a)\n\ngoal (2 subgoals):\n 1. B $$ (i, i) = (0::'a) \\<Longrightarrow>\n    \\<exists>u. is_unit u \\<and> B $$ (i, i) = u * B' $$ (i, i)\n 2. B $$ (i, i) \\<noteq> (0::'a) \\<Longrightarrow>\n    \\<exists>u. is_unit u \\<and> B $$ (i, i) = u * B' $$ (i, i)", "have True2: \"?\\<Pi>B'_Suc = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<Suc i. B' $$ (i, i)) = (0::'a)", "using 4"], ["proof (prove)\nusing this:\n  (\\<Prod>i = 0..<Suc i. B $$ (i, i)) dvd\n  (\\<Prod>i = 0..<Suc i. B' $$ (i, i))\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<Suc i. B' $$ (i, i)) = (0::'a)", "by (metis dvd_0_left_iff prod0)"], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<Suc i. B' $$ (i, i)) = (0::'a)\n\ngoal (2 subgoals):\n 1. B $$ (i, i) = (0::'a) \\<Longrightarrow>\n    \\<exists>u. is_unit u \\<and> B $$ (i, i) = u * B' $$ (i, i)\n 2. B $$ (i, i) \\<noteq> (0::'a) \\<Longrightarrow>\n    \\<exists>u. is_unit u \\<and> B $$ (i, i) = u * B' $$ (i, i)", "have \"B'$$(i,i) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B' $$ (i, i) = (0::'a)", "by (rule Smith_prod_zero_imp_last_zero[OF _ SNF_B' True2],\n        insert i P'AQ'_B' P' Q', auto)"], ["proof (state)\nthis:\n  B' $$ (i, i) = (0::'a)\n\ngoal (2 subgoals):\n 1. B $$ (i, i) = (0::'a) \\<Longrightarrow>\n    \\<exists>u. is_unit u \\<and> B $$ (i, i) = u * B' $$ (i, i)\n 2. B $$ (i, i) \\<noteq> (0::'a) \\<Longrightarrow>\n    \\<exists>u. is_unit u \\<and> B $$ (i, i) = u * B' $$ (i, i)", "thus ?thesis"], ["proof (prove)\nusing this:\n  B' $$ (i, i) = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>u. is_unit u \\<and> B $$ (i, i) = u * B' $$ (i, i)", "using True"], ["proof (prove)\nusing this:\n  B' $$ (i, i) = (0::'a)\n  B $$ (i, i) = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>u. is_unit u \\<and> B $$ (i, i) = u * B' $$ (i, i)", "by auto"], ["proof (state)\nthis:\n  \\<exists>u. is_unit u \\<and> B $$ (i, i) = u * B' $$ (i, i)\n\ngoal (1 subgoal):\n 1. B $$ (i, i) \\<noteq> (0::'a) \\<Longrightarrow>\n    \\<exists>u. is_unit u \\<and> B $$ (i, i) = u * B' $$ (i, i)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. B $$ (i, i) \\<noteq> (0::'a) \\<Longrightarrow>\n    \\<exists>u. is_unit u \\<and> B $$ (i, i) = u * B' $$ (i, i)", "case False"], ["proof (state)\nthis:\n  B $$ (i, i) \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. B $$ (i, i) \\<noteq> (0::'a) \\<Longrightarrow>\n    \\<exists>u. is_unit u \\<and> B $$ (i, i) = u * B' $$ (i, i)", "have \"\\<forall>a\\<le>i. B$$(a,a) dvd B'$$(a,a) \\<and> B'$$(a,a) dvd B$$(a,a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a\\<le>i.\n       B $$ (a, a) dvd B' $$ (a, a) \\<and> B' $$ (a, a) dvd B $$ (a, a)", "by (rule Smith_normal_form_uniqueness_aux[OF assms])"], ["proof (state)\nthis:\n  \\<forall>a\\<le>i.\n     B $$ (a, a) dvd B' $$ (a, a) \\<and> B' $$ (a, a) dvd B $$ (a, a)\n\ngoal (1 subgoal):\n 1. B $$ (i, i) \\<noteq> (0::'a) \\<Longrightarrow>\n    \\<exists>u. is_unit u \\<and> B $$ (i, i) = u * B' $$ (i, i)", "hence \"B$$(i,i) dvd B'$$(i,i) \\<and> B'$$(i,i) dvd B$$(i,i)\""], ["proof (prove)\nusing this:\n  \\<forall>a\\<le>i.\n     B $$ (a, a) dvd B' $$ (a, a) \\<and> B' $$ (a, a) dvd B $$ (a, a)\n\ngoal (1 subgoal):\n 1. B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "using i"], ["proof (prove)\nusing this:\n  \\<forall>a\\<le>i.\n     B $$ (a, a) dvd B' $$ (a, a) \\<and> B' $$ (a, a) dvd B $$ (a, a)\n  i < min m n\n\ngoal (1 subgoal):\n 1. B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)", "by auto"], ["proof (state)\nthis:\n  B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)\n\ngoal (1 subgoal):\n 1. B $$ (i, i) \\<noteq> (0::'a) \\<Longrightarrow>\n    \\<exists>u. is_unit u \\<and> B $$ (i, i) = u * B' $$ (i, i)", "thus ?thesis"], ["proof (prove)\nusing this:\n  B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)\n\ngoal (1 subgoal):\n 1. \\<exists>u. is_unit u \\<and> B $$ (i, i) = u * B' $$ (i, i)", "using dvd_associated2 False"], ["proof (prove)\nusing this:\n  B $$ (i, i) dvd B' $$ (i, i) \\<and> B' $$ (i, i) dvd B $$ (i, i)\n  \\<lbrakk>?a dvd ?b; ?b dvd ?a; ?a \\<noteq> (0::?'a)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>u. u dvd (1::?'a) \\<and> ?a = u * ?b\n  B $$ (i, i) \\<noteq> (0::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>u. is_unit u \\<and> B $$ (i, i) = u * B' $$ (i, i)", "by blast"], ["proof (state)\nthis:\n  \\<exists>u. is_unit u \\<and> B $$ (i, i) = u * B' $$ (i, i)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The final theorem, moved to HOL Analysis\\<close>"], ["", "lemma Smith_normal_form_uniqueness_HOL_Analysis:\n  fixes A::\"'a::{idom,semiring_Gcd}^'m::mod_type^'n::mod_type\"\n  and P P'::\"'a^'n::mod_type^'n::mod_type\"\n  and Q Q'::\"'a^'m::mod_type^'m::mod_type\"\n  assumes\n    (*PAQ = B with B in SNF and P,Q invertible matrices*)\n    inv_P: \"invertible P\"\n    and inv_Q: \"invertible Q\"\n    and PAQ_B: \"P**A**Q = B\"\n    and SNF: \"Smith_normal_form B\"\n    (*P'AQ' = B' with B' in SNF and P',Q' invertible matrices*)\n    and inv_P': \"invertible P'\"\n    and inv_Q': \"invertible Q'\"\n    and P'AQ'_B': \"P'**A**Q' = B'\"\n    and SNF_B': \"Smith_normal_form B'\"\n    and i: \"i < min (nrows A) (ncols A)\"\n  shows \"\\<exists>u. u dvd 1 \\<and> B $h Mod_Type.from_nat i $h Mod_Type.from_nat i\n  = u * B' $h Mod_Type.from_nat i $h Mod_Type.from_nat i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>u.\n       is_unit u \\<and>\n       B $h mod_type_class.from_nat i $h mod_type_class.from_nat i =\n       u * B' $h mod_type_class.from_nat i $h mod_type_class.from_nat i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>u.\n       is_unit u \\<and>\n       B $h mod_type_class.from_nat i $h mod_type_class.from_nat i =\n       u * B' $h mod_type_class.from_nat i $h mod_type_class.from_nat i", "let ?P = \"Mod_Type_Connect.from_hma\\<^sub>m P\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>u.\n       is_unit u \\<and>\n       B $h mod_type_class.from_nat i $h mod_type_class.from_nat i =\n       u * B' $h mod_type_class.from_nat i $h mod_type_class.from_nat i", "let ?A = \"Mod_Type_Connect.from_hma\\<^sub>m A\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>u.\n       is_unit u \\<and>\n       B $h mod_type_class.from_nat i $h mod_type_class.from_nat i =\n       u * B' $h mod_type_class.from_nat i $h mod_type_class.from_nat i", "let ?Q = \"Mod_Type_Connect.from_hma\\<^sub>m Q\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>u.\n       is_unit u \\<and>\n       B $h mod_type_class.from_nat i $h mod_type_class.from_nat i =\n       u * B' $h mod_type_class.from_nat i $h mod_type_class.from_nat i", "let ?B = \"Mod_Type_Connect.from_hma\\<^sub>m B\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>u.\n       is_unit u \\<and>\n       B $h mod_type_class.from_nat i $h mod_type_class.from_nat i =\n       u * B' $h mod_type_class.from_nat i $h mod_type_class.from_nat i", "let ?P' = \"Mod_Type_Connect.from_hma\\<^sub>m P'\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>u.\n       is_unit u \\<and>\n       B $h mod_type_class.from_nat i $h mod_type_class.from_nat i =\n       u * B' $h mod_type_class.from_nat i $h mod_type_class.from_nat i", "let ?Q' = \"Mod_Type_Connect.from_hma\\<^sub>m Q'\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>u.\n       is_unit u \\<and>\n       B $h mod_type_class.from_nat i $h mod_type_class.from_nat i =\n       u * B' $h mod_type_class.from_nat i $h mod_type_class.from_nat i", "let ?B' = \"Mod_Type_Connect.from_hma\\<^sub>m B'\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>u.\n       is_unit u \\<and>\n       B $h mod_type_class.from_nat i $h mod_type_class.from_nat i =\n       u * B' $h mod_type_class.from_nat i $h mod_type_class.from_nat i", "let ?i = \"(Mod_Type.from_nat i)::'n\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>u.\n       is_unit u \\<and>\n       B $h mod_type_class.from_nat i $h mod_type_class.from_nat i =\n       u * B' $h mod_type_class.from_nat i $h mod_type_class.from_nat i", "let ?i' = \"(Mod_Type.from_nat i)::'m\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>u.\n       is_unit u \\<and>\n       B $h mod_type_class.from_nat i $h mod_type_class.from_nat i =\n       u * B' $h mod_type_class.from_nat i $h mod_type_class.from_nat i", "have [transfer_rule]: \"Mod_Type_Connect.HMA_M ?P P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Mod_Type_Connect.HMA_M (Mod_Type_Connect.from_hma\\<^sub>m P) P", "by (simp add: Mod_Type_Connect.HMA_M_def)"], ["proof (state)\nthis:\n  Mod_Type_Connect.HMA_M (Mod_Type_Connect.from_hma\\<^sub>m P) P\n\ngoal (1 subgoal):\n 1. \\<exists>u.\n       is_unit u \\<and>\n       B $h mod_type_class.from_nat i $h mod_type_class.from_nat i =\n       u * B' $h mod_type_class.from_nat i $h mod_type_class.from_nat i", "have [transfer_rule]: \"Mod_Type_Connect.HMA_M ?A A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Mod_Type_Connect.HMA_M (Mod_Type_Connect.from_hma\\<^sub>m A) A", "by (simp add: Mod_Type_Connect.HMA_M_def)"], ["proof (state)\nthis:\n  Mod_Type_Connect.HMA_M (Mod_Type_Connect.from_hma\\<^sub>m A) A\n\ngoal (1 subgoal):\n 1. \\<exists>u.\n       is_unit u \\<and>\n       B $h mod_type_class.from_nat i $h mod_type_class.from_nat i =\n       u * B' $h mod_type_class.from_nat i $h mod_type_class.from_nat i", "have [transfer_rule]: \"Mod_Type_Connect.HMA_M ?Q Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Mod_Type_Connect.HMA_M (Mod_Type_Connect.from_hma\\<^sub>m Q) Q", "by (simp add: Mod_Type_Connect.HMA_M_def)"], ["proof (state)\nthis:\n  Mod_Type_Connect.HMA_M (Mod_Type_Connect.from_hma\\<^sub>m Q) Q\n\ngoal (1 subgoal):\n 1. \\<exists>u.\n       is_unit u \\<and>\n       B $h mod_type_class.from_nat i $h mod_type_class.from_nat i =\n       u * B' $h mod_type_class.from_nat i $h mod_type_class.from_nat i", "have [transfer_rule]: \"Mod_Type_Connect.HMA_M ?B B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Mod_Type_Connect.HMA_M (Mod_Type_Connect.from_hma\\<^sub>m B) B", "by (simp add: Mod_Type_Connect.HMA_M_def)"], ["proof (state)\nthis:\n  Mod_Type_Connect.HMA_M (Mod_Type_Connect.from_hma\\<^sub>m B) B\n\ngoal (1 subgoal):\n 1. \\<exists>u.\n       is_unit u \\<and>\n       B $h mod_type_class.from_nat i $h mod_type_class.from_nat i =\n       u * B' $h mod_type_class.from_nat i $h mod_type_class.from_nat i", "have [transfer_rule]: \"Mod_Type_Connect.HMA_M ?P' P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Mod_Type_Connect.HMA_M (Mod_Type_Connect.from_hma\\<^sub>m P') P'", "by (simp add: Mod_Type_Connect.HMA_M_def)"], ["proof (state)\nthis:\n  Mod_Type_Connect.HMA_M (Mod_Type_Connect.from_hma\\<^sub>m P') P'\n\ngoal (1 subgoal):\n 1. \\<exists>u.\n       is_unit u \\<and>\n       B $h mod_type_class.from_nat i $h mod_type_class.from_nat i =\n       u * B' $h mod_type_class.from_nat i $h mod_type_class.from_nat i", "have [transfer_rule]: \"Mod_Type_Connect.HMA_M ?Q' Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Mod_Type_Connect.HMA_M (Mod_Type_Connect.from_hma\\<^sub>m Q') Q'", "by (simp add: Mod_Type_Connect.HMA_M_def)"], ["proof (state)\nthis:\n  Mod_Type_Connect.HMA_M (Mod_Type_Connect.from_hma\\<^sub>m Q') Q'\n\ngoal (1 subgoal):\n 1. \\<exists>u.\n       is_unit u \\<and>\n       B $h mod_type_class.from_nat i $h mod_type_class.from_nat i =\n       u * B' $h mod_type_class.from_nat i $h mod_type_class.from_nat i", "have [transfer_rule]: \"Mod_Type_Connect.HMA_M ?B' B'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Mod_Type_Connect.HMA_M (Mod_Type_Connect.from_hma\\<^sub>m B') B'", "by (simp add: Mod_Type_Connect.HMA_M_def)"], ["proof (state)\nthis:\n  Mod_Type_Connect.HMA_M (Mod_Type_Connect.from_hma\\<^sub>m B') B'\n\ngoal (1 subgoal):\n 1. \\<exists>u.\n       is_unit u \\<and>\n       B $h mod_type_class.from_nat i $h mod_type_class.from_nat i =\n       u * B' $h mod_type_class.from_nat i $h mod_type_class.from_nat i", "have [transfer_rule]: \"Mod_Type_Connect.HMA_I i ?i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Mod_Type_Connect.HMA_I i (mod_type_class.from_nat i)", "by (metis Mod_Type_Connect.HMA_I_def i min.strict_boundedE\n        mod_type_class.to_nat_from_nat_id nrows_def)"], ["proof (state)\nthis:\n  Mod_Type_Connect.HMA_I i (mod_type_class.from_nat i)\n\ngoal (1 subgoal):\n 1. \\<exists>u.\n       is_unit u \\<and>\n       B $h mod_type_class.from_nat i $h mod_type_class.from_nat i =\n       u * B' $h mod_type_class.from_nat i $h mod_type_class.from_nat i", "have [transfer_rule]: \"Mod_Type_Connect.HMA_I i ?i'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Mod_Type_Connect.HMA_I i (mod_type_class.from_nat i)", "by (metis Mod_Type_Connect.HMA_I_def i min.strict_boundedE\n        mod_type_class.to_nat_from_nat_id ncols_def)"], ["proof (state)\nthis:\n  Mod_Type_Connect.HMA_I i (mod_type_class.from_nat i)\n\ngoal (1 subgoal):\n 1. \\<exists>u.\n       is_unit u \\<and>\n       B $h mod_type_class.from_nat i $h mod_type_class.from_nat i =\n       u * B' $h mod_type_class.from_nat i $h mod_type_class.from_nat i", "have i2: \"i < min CARD('m) CARD('n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < min CARD('m) CARD('n)", "using i"], ["proof (prove)\nusing this:\n  i < min (nrows A) (ncols A)\n\ngoal (1 subgoal):\n 1. i < min CARD('m) CARD('n)", "unfolding nrows_def ncols_def"], ["proof (prove)\nusing this:\n  i < min CARD('n) CARD('m)\n\ngoal (1 subgoal):\n 1. i < min CARD('m) CARD('n)", "by auto"], ["proof (state)\nthis:\n  i < min CARD('m) CARD('n)\n\ngoal (1 subgoal):\n 1. \\<exists>u.\n       is_unit u \\<and>\n       B $h mod_type_class.from_nat i $h mod_type_class.from_nat i =\n       u * B' $h mod_type_class.from_nat i $h mod_type_class.from_nat i", "have \"\\<exists>u. u dvd 1 \\<and> ?B $$(i,i) = u * ?B' $$ (i,i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>u.\n       is_unit u \\<and>\n       Mod_Type_Connect.from_hma\\<^sub>m B $$ (i, i) =\n       u * Mod_Type_Connect.from_hma\\<^sub>m B' $$ (i, i)", "proof (rule Smith_normal_form_uniqueness[of _ \"CARD('n)\" \"CARD('m)\"])"], ["proof (state)\ngoal (14 subgoals):\n 1. ?A \\<in> carrier_mat CARD('n) CARD('m)\n 2. ?P \\<in> carrier_mat CARD('n) CARD('n)\n 3. ?Q \\<in> carrier_mat CARD('m) CARD('m)\n 4. invertible_mat ?P\n 5. invertible_mat ?Q\n 6. ?P * ?A * ?Q = Mod_Type_Connect.from_hma\\<^sub>m B\n 7. Smith_normal_form_mat (Mod_Type_Connect.from_hma\\<^sub>m B)\n 8. ?P' \\<in> carrier_mat CARD('n) CARD('n)\n 9. ?Q' \\<in> carrier_mat CARD('m) CARD('m)\n 10. invertible_mat ?P'\nA total of 14 subgoals...", "show \"?P*?A*?Q=?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Mod_Type_Connect.from_hma\\<^sub>m P *\n    Mod_Type_Connect.from_hma\\<^sub>m A *\n    Mod_Type_Connect.from_hma\\<^sub>m Q =\n    Mod_Type_Connect.from_hma\\<^sub>m B", "using PAQ_B"], ["proof (prove)\nusing this:\n  P ** A ** Q = B\n\ngoal (1 subgoal):\n 1. Mod_Type_Connect.from_hma\\<^sub>m P *\n    Mod_Type_Connect.from_hma\\<^sub>m A *\n    Mod_Type_Connect.from_hma\\<^sub>m Q =\n    Mod_Type_Connect.from_hma\\<^sub>m B", "by (transfer', auto)"], ["proof (state)\nthis:\n  Mod_Type_Connect.from_hma\\<^sub>m P *\n  Mod_Type_Connect.from_hma\\<^sub>m A *\n  Mod_Type_Connect.from_hma\\<^sub>m Q =\n  Mod_Type_Connect.from_hma\\<^sub>m B\n\ngoal (13 subgoals):\n 1. Mod_Type_Connect.from_hma\\<^sub>m A \\<in> carrier_mat CARD('n) CARD('m)\n 2. Mod_Type_Connect.from_hma\\<^sub>m P \\<in> carrier_mat CARD('n) CARD('n)\n 3. Mod_Type_Connect.from_hma\\<^sub>m Q \\<in> carrier_mat CARD('m) CARD('m)\n 4. invertible_mat (Mod_Type_Connect.from_hma\\<^sub>m P)\n 5. invertible_mat (Mod_Type_Connect.from_hma\\<^sub>m Q)\n 6. Smith_normal_form_mat (Mod_Type_Connect.from_hma\\<^sub>m B)\n 7. ?P' \\<in> carrier_mat CARD('n) CARD('n)\n 8. ?Q' \\<in> carrier_mat CARD('m) CARD('m)\n 9. invertible_mat ?P'\n 10. invertible_mat ?Q'\nA total of 13 subgoals...", "show \"Smith_normal_form_mat ?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Smith_normal_form_mat (Mod_Type_Connect.from_hma\\<^sub>m B)", "using SNF"], ["proof (prove)\nusing this:\n  Smith_normal_form B\n\ngoal (1 subgoal):\n 1. Smith_normal_form_mat (Mod_Type_Connect.from_hma\\<^sub>m B)", "by (transfer', auto)"], ["proof (state)\nthis:\n  Smith_normal_form_mat (Mod_Type_Connect.from_hma\\<^sub>m B)\n\ngoal (12 subgoals):\n 1. Mod_Type_Connect.from_hma\\<^sub>m A \\<in> carrier_mat CARD('n) CARD('m)\n 2. Mod_Type_Connect.from_hma\\<^sub>m P \\<in> carrier_mat CARD('n) CARD('n)\n 3. Mod_Type_Connect.from_hma\\<^sub>m Q \\<in> carrier_mat CARD('m) CARD('m)\n 4. invertible_mat (Mod_Type_Connect.from_hma\\<^sub>m P)\n 5. invertible_mat (Mod_Type_Connect.from_hma\\<^sub>m Q)\n 6. ?P' \\<in> carrier_mat CARD('n) CARD('n)\n 7. ?Q' \\<in> carrier_mat CARD('m) CARD('m)\n 8. invertible_mat ?P'\n 9. invertible_mat ?Q'\n 10. ?P' * Mod_Type_Connect.from_hma\\<^sub>m A * ?Q' =\n     Mod_Type_Connect.from_hma\\<^sub>m B'\nA total of 12 subgoals...", "show \"?P'*?A*?Q'=?B'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Mod_Type_Connect.from_hma\\<^sub>m P' *\n    Mod_Type_Connect.from_hma\\<^sub>m A *\n    Mod_Type_Connect.from_hma\\<^sub>m Q' =\n    Mod_Type_Connect.from_hma\\<^sub>m B'", "using P'AQ'_B'"], ["proof (prove)\nusing this:\n  P' ** A ** Q' = B'\n\ngoal (1 subgoal):\n 1. Mod_Type_Connect.from_hma\\<^sub>m P' *\n    Mod_Type_Connect.from_hma\\<^sub>m A *\n    Mod_Type_Connect.from_hma\\<^sub>m Q' =\n    Mod_Type_Connect.from_hma\\<^sub>m B'", "by (transfer', auto)"], ["proof (state)\nthis:\n  Mod_Type_Connect.from_hma\\<^sub>m P' *\n  Mod_Type_Connect.from_hma\\<^sub>m A *\n  Mod_Type_Connect.from_hma\\<^sub>m Q' =\n  Mod_Type_Connect.from_hma\\<^sub>m B'\n\ngoal (11 subgoals):\n 1. Mod_Type_Connect.from_hma\\<^sub>m A \\<in> carrier_mat CARD('n) CARD('m)\n 2. Mod_Type_Connect.from_hma\\<^sub>m P \\<in> carrier_mat CARD('n) CARD('n)\n 3. Mod_Type_Connect.from_hma\\<^sub>m Q \\<in> carrier_mat CARD('m) CARD('m)\n 4. invertible_mat (Mod_Type_Connect.from_hma\\<^sub>m P)\n 5. invertible_mat (Mod_Type_Connect.from_hma\\<^sub>m Q)\n 6. Mod_Type_Connect.from_hma\\<^sub>m P' \\<in> carrier_mat CARD('n) CARD('n)\n 7. Mod_Type_Connect.from_hma\\<^sub>m Q' \\<in> carrier_mat CARD('m) CARD('m)\n 8. invertible_mat (Mod_Type_Connect.from_hma\\<^sub>m P')\n 9. invertible_mat (Mod_Type_Connect.from_hma\\<^sub>m Q')\n 10. Smith_normal_form_mat (Mod_Type_Connect.from_hma\\<^sub>m B')\nA total of 11 subgoals...", "show \"Smith_normal_form_mat ?B'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Smith_normal_form_mat (Mod_Type_Connect.from_hma\\<^sub>m B')", "using SNF_B'"], ["proof (prove)\nusing this:\n  Smith_normal_form B'\n\ngoal (1 subgoal):\n 1. Smith_normal_form_mat (Mod_Type_Connect.from_hma\\<^sub>m B')", "by (transfer', auto)"], ["proof (state)\nthis:\n  Smith_normal_form_mat (Mod_Type_Connect.from_hma\\<^sub>m B')\n\ngoal (10 subgoals):\n 1. Mod_Type_Connect.from_hma\\<^sub>m A \\<in> carrier_mat CARD('n) CARD('m)\n 2. Mod_Type_Connect.from_hma\\<^sub>m P \\<in> carrier_mat CARD('n) CARD('n)\n 3. Mod_Type_Connect.from_hma\\<^sub>m Q \\<in> carrier_mat CARD('m) CARD('m)\n 4. invertible_mat (Mod_Type_Connect.from_hma\\<^sub>m P)\n 5. invertible_mat (Mod_Type_Connect.from_hma\\<^sub>m Q)\n 6. Mod_Type_Connect.from_hma\\<^sub>m P' \\<in> carrier_mat CARD('n) CARD('n)\n 7. Mod_Type_Connect.from_hma\\<^sub>m Q' \\<in> carrier_mat CARD('m) CARD('m)\n 8. invertible_mat (Mod_Type_Connect.from_hma\\<^sub>m P')\n 9. invertible_mat (Mod_Type_Connect.from_hma\\<^sub>m Q')\n 10. i < min CARD('n) CARD('m)", "show \"invertible_mat ?P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible_mat (Mod_Type_Connect.from_hma\\<^sub>m P)", "using inv_P"], ["proof (prove)\nusing this:\n  invertible P\n\ngoal (1 subgoal):\n 1. invertible_mat (Mod_Type_Connect.from_hma\\<^sub>m P)", "by (transfer, auto)"], ["proof (state)\nthis:\n  invertible_mat (Mod_Type_Connect.from_hma\\<^sub>m P)\n\ngoal (9 subgoals):\n 1. Mod_Type_Connect.from_hma\\<^sub>m A \\<in> carrier_mat CARD('n) CARD('m)\n 2. Mod_Type_Connect.from_hma\\<^sub>m P \\<in> carrier_mat CARD('n) CARD('n)\n 3. Mod_Type_Connect.from_hma\\<^sub>m Q \\<in> carrier_mat CARD('m) CARD('m)\n 4. invertible_mat (Mod_Type_Connect.from_hma\\<^sub>m Q)\n 5. Mod_Type_Connect.from_hma\\<^sub>m P' \\<in> carrier_mat CARD('n) CARD('n)\n 6. Mod_Type_Connect.from_hma\\<^sub>m Q' \\<in> carrier_mat CARD('m) CARD('m)\n 7. invertible_mat (Mod_Type_Connect.from_hma\\<^sub>m P')\n 8. invertible_mat (Mod_Type_Connect.from_hma\\<^sub>m Q')\n 9. i < min CARD('n) CARD('m)", "show \"invertible_mat ?P'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible_mat (Mod_Type_Connect.from_hma\\<^sub>m P')", "using inv_P'"], ["proof (prove)\nusing this:\n  invertible P'\n\ngoal (1 subgoal):\n 1. invertible_mat (Mod_Type_Connect.from_hma\\<^sub>m P')", "by (transfer, auto)"], ["proof (state)\nthis:\n  invertible_mat (Mod_Type_Connect.from_hma\\<^sub>m P')\n\ngoal (8 subgoals):\n 1. Mod_Type_Connect.from_hma\\<^sub>m A \\<in> carrier_mat CARD('n) CARD('m)\n 2. Mod_Type_Connect.from_hma\\<^sub>m P \\<in> carrier_mat CARD('n) CARD('n)\n 3. Mod_Type_Connect.from_hma\\<^sub>m Q \\<in> carrier_mat CARD('m) CARD('m)\n 4. invertible_mat (Mod_Type_Connect.from_hma\\<^sub>m Q)\n 5. Mod_Type_Connect.from_hma\\<^sub>m P' \\<in> carrier_mat CARD('n) CARD('n)\n 6. Mod_Type_Connect.from_hma\\<^sub>m Q' \\<in> carrier_mat CARD('m) CARD('m)\n 7. invertible_mat (Mod_Type_Connect.from_hma\\<^sub>m Q')\n 8. i < min CARD('n) CARD('m)", "show \"invertible_mat ?Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible_mat (Mod_Type_Connect.from_hma\\<^sub>m Q)", "using inv_Q"], ["proof (prove)\nusing this:\n  invertible Q\n\ngoal (1 subgoal):\n 1. invertible_mat (Mod_Type_Connect.from_hma\\<^sub>m Q)", "by (transfer, auto)"], ["proof (state)\nthis:\n  invertible_mat (Mod_Type_Connect.from_hma\\<^sub>m Q)\n\ngoal (7 subgoals):\n 1. Mod_Type_Connect.from_hma\\<^sub>m A \\<in> carrier_mat CARD('n) CARD('m)\n 2. Mod_Type_Connect.from_hma\\<^sub>m P \\<in> carrier_mat CARD('n) CARD('n)\n 3. Mod_Type_Connect.from_hma\\<^sub>m Q \\<in> carrier_mat CARD('m) CARD('m)\n 4. Mod_Type_Connect.from_hma\\<^sub>m P' \\<in> carrier_mat CARD('n) CARD('n)\n 5. Mod_Type_Connect.from_hma\\<^sub>m Q' \\<in> carrier_mat CARD('m) CARD('m)\n 6. invertible_mat (Mod_Type_Connect.from_hma\\<^sub>m Q')\n 7. i < min CARD('n) CARD('m)", "show \"invertible_mat ?Q'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible_mat (Mod_Type_Connect.from_hma\\<^sub>m Q')", "using inv_Q'"], ["proof (prove)\nusing this:\n  invertible Q'\n\ngoal (1 subgoal):\n 1. invertible_mat (Mod_Type_Connect.from_hma\\<^sub>m Q')", "by (transfer, auto)"], ["proof (state)\nthis:\n  invertible_mat (Mod_Type_Connect.from_hma\\<^sub>m Q')\n\ngoal (6 subgoals):\n 1. Mod_Type_Connect.from_hma\\<^sub>m A \\<in> carrier_mat CARD('n) CARD('m)\n 2. Mod_Type_Connect.from_hma\\<^sub>m P \\<in> carrier_mat CARD('n) CARD('n)\n 3. Mod_Type_Connect.from_hma\\<^sub>m Q \\<in> carrier_mat CARD('m) CARD('m)\n 4. Mod_Type_Connect.from_hma\\<^sub>m P' \\<in> carrier_mat CARD('n) CARD('n)\n 5. Mod_Type_Connect.from_hma\\<^sub>m Q' \\<in> carrier_mat CARD('m) CARD('m)\n 6. i < min CARD('n) CARD('m)", "qed (insert i2, auto)"], ["proof (state)\nthis:\n  \\<exists>u.\n     is_unit u \\<and>\n     Mod_Type_Connect.from_hma\\<^sub>m B $$ (i, i) =\n     u * Mod_Type_Connect.from_hma\\<^sub>m B' $$ (i, i)\n\ngoal (1 subgoal):\n 1. \\<exists>u.\n       is_unit u \\<and>\n       B $h mod_type_class.from_nat i $h mod_type_class.from_nat i =\n       u * B' $h mod_type_class.from_nat i $h mod_type_class.from_nat i", "hence \"\\<exists>u. u dvd 1 \\<and> (index_hma B ?i ?i') = u * (index_hma B' ?i ?i')\""], ["proof (prove)\nusing this:\n  \\<exists>u.\n     is_unit u \\<and>\n     Mod_Type_Connect.from_hma\\<^sub>m B $$ (i, i) =\n     u * Mod_Type_Connect.from_hma\\<^sub>m B' $$ (i, i)\n\ngoal (1 subgoal):\n 1. \\<exists>u.\n       is_unit u \\<and>\n       index_hma B (mod_type_class.from_nat i) (mod_type_class.from_nat i) =\n       u *\n       index_hma B' (mod_type_class.from_nat i) (mod_type_class.from_nat i)", "by (transfer', rule)"], ["proof (state)\nthis:\n  \\<exists>u.\n     is_unit u \\<and>\n     index_hma B (mod_type_class.from_nat i) (mod_type_class.from_nat i) =\n     u *\n     index_hma B' (mod_type_class.from_nat i) (mod_type_class.from_nat i)\n\ngoal (1 subgoal):\n 1. \\<exists>u.\n       is_unit u \\<and>\n       B $h mod_type_class.from_nat i $h mod_type_class.from_nat i =\n       u * B' $h mod_type_class.from_nat i $h mod_type_class.from_nat i", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>u.\n     is_unit u \\<and>\n     index_hma B (mod_type_class.from_nat i) (mod_type_class.from_nat i) =\n     u *\n     index_hma B' (mod_type_class.from_nat i) (mod_type_class.from_nat i)\n\ngoal (1 subgoal):\n 1. \\<exists>u.\n       is_unit u \\<and>\n       B $h mod_type_class.from_nat i $h mod_type_class.from_nat i =\n       u * B' $h mod_type_class.from_nat i $h mod_type_class.from_nat i", "unfolding index_hma_def"], ["proof (prove)\nusing this:\n  \\<exists>u.\n     is_unit u \\<and>\n     B $h mod_type_class.from_nat i $h mod_type_class.from_nat i =\n     u * B' $h mod_type_class.from_nat i $h mod_type_class.from_nat i\n\ngoal (1 subgoal):\n 1. \\<exists>u.\n       is_unit u \\<and>\n       B $h mod_type_class.from_nat i $h mod_type_class.from_nat i =\n       u * B' $h mod_type_class.from_nat i $h mod_type_class.from_nat i", "by simp"], ["proof (state)\nthis:\n  \\<exists>u.\n     is_unit u \\<and>\n     B $h mod_type_class.from_nat i $h mod_type_class.from_nat i =\n     u * B' $h mod_type_class.from_nat i $h mod_type_class.from_nat i\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Uniqueness fixing a complete set of non-associates\\<close>"], ["", "definition \"Smith_normal_form_wrt A \\<Q> = (\n    (\\<forall>a b. Mod_Type.to_nat a = Mod_Type.to_nat b \\<and> Mod_Type.to_nat a + 1 < nrows A\n            \\<and> Mod_Type.to_nat b + 1 < ncols A \\<longrightarrow> A $h a $h b dvd A $h (a+1) $h (b+1))\n    \\<and> isDiagonal A \\<and> Complete_set_non_associates \\<Q>\n    \\<and> (\\<forall>a b. Mod_Type.to_nat a = Mod_Type.to_nat b \\<and> Mod_Type.to_nat a < min (nrows A) (ncols A)\n       \\<and> Mod_Type.to_nat b < min (nrows A) (ncols A) \\<longrightarrow> A $h a $h b \\<in> \\<Q>)\n  )\""], ["", "lemma Smith_normal_form_wrt_uniqueness_HOL_Analysis:\n  fixes A::\"'a::{idom,semiring_Gcd}^'m::mod_type^'n::mod_type\"\n  and P P'::\"'a^'n::mod_type^'n::mod_type\"\n  and Q Q'::\"'a^'m::mod_type^'m::mod_type\"\n  assumes\n    (*PAQ = S with S in SNF and P,Q invertible matrices*)\n    P: \"invertible P\"\n    and Q: \"invertible Q\"\n    and PAQ_S: \"P**A**Q = S\"\n    and SNF: \"Smith_normal_form_wrt S \\<Q>\"\n    (*P'AQ' = S' with S' in SNF and P',Q' invertible matrices*)\n    and P': \"invertible P'\"\n    and Q': \"invertible Q'\"\n    and P'AQ'_S': \"P'**A**Q' = S'\"\n    and SNF_S': \"Smith_normal_form_wrt S' \\<Q>\"\n  shows \"S = S'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S = S'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. S = S'", "have \"S $h i $h j = S' $h i $h j\" for i j"], ["proof (prove)\ngoal (1 subgoal):\n 1. S $h i $h j = S' $h i $h j", "proof (cases \"Mod_Type.to_nat i \\<noteq> Mod_Type.to_nat j\")"], ["proof (state)\ngoal (2 subgoals):\n 1. mod_type_class.to_nat i \\<noteq>\n    mod_type_class.to_nat j \\<Longrightarrow>\n    S $h i $h j = S' $h i $h j\n 2. \\<not> mod_type_class.to_nat i \\<noteq>\n           mod_type_class.to_nat j \\<Longrightarrow>\n    S $h i $h j = S' $h i $h j", "case True"], ["proof (state)\nthis:\n  mod_type_class.to_nat i \\<noteq> mod_type_class.to_nat j\n\ngoal (2 subgoals):\n 1. mod_type_class.to_nat i \\<noteq>\n    mod_type_class.to_nat j \\<Longrightarrow>\n    S $h i $h j = S' $h i $h j\n 2. \\<not> mod_type_class.to_nat i \\<noteq>\n           mod_type_class.to_nat j \\<Longrightarrow>\n    S $h i $h j = S' $h i $h j", "then"], ["proof (chain)\npicking this:\n  mod_type_class.to_nat i \\<noteq> mod_type_class.to_nat j", "show ?thesis"], ["proof (prove)\nusing this:\n  mod_type_class.to_nat i \\<noteq> mod_type_class.to_nat j\n\ngoal (1 subgoal):\n 1. S $h i $h j = S' $h i $h j", "using SNF SNF_S'"], ["proof (prove)\nusing this:\n  mod_type_class.to_nat i \\<noteq> mod_type_class.to_nat j\n  Smith_normal_form_wrt S \\<Q>\n  Smith_normal_form_wrt S' \\<Q>\n\ngoal (1 subgoal):\n 1. S $h i $h j = S' $h i $h j", "unfolding Smith_normal_form_wrt_def isDiagonal_def"], ["proof (prove)\nusing this:\n  mod_type_class.to_nat i \\<noteq> mod_type_class.to_nat j\n  (\\<forall>a b.\n      mod_type_class.to_nat a = mod_type_class.to_nat b \\<and>\n      mod_type_class.to_nat a + 1 < nrows S \\<and>\n      mod_type_class.to_nat b + 1 < ncols S \\<longrightarrow>\n      S $h a $h b dvd S $h (a + (1::'n)) $h (b + (1::'m))) \\<and>\n  (\\<forall>a b.\n      mod_type_class.to_nat a \\<noteq>\n      mod_type_class.to_nat b \\<longrightarrow>\n      S $h a $h b = (0::'a)) \\<and>\n  Complete_set_non_associates \\<Q> \\<and>\n  (\\<forall>a b.\n      mod_type_class.to_nat a = mod_type_class.to_nat b \\<and>\n      mod_type_class.to_nat a < min (nrows S) (ncols S) \\<and>\n      mod_type_class.to_nat b < min (nrows S) (ncols S) \\<longrightarrow>\n      S $h a $h b \\<in> \\<Q>)\n  (\\<forall>a b.\n      mod_type_class.to_nat a = mod_type_class.to_nat b \\<and>\n      mod_type_class.to_nat a + 1 < nrows S' \\<and>\n      mod_type_class.to_nat b + 1 < ncols S' \\<longrightarrow>\n      S' $h a $h b dvd S' $h (a + (1::'n)) $h (b + (1::'m))) \\<and>\n  (\\<forall>a b.\n      mod_type_class.to_nat a \\<noteq>\n      mod_type_class.to_nat b \\<longrightarrow>\n      S' $h a $h b = (0::'a)) \\<and>\n  Complete_set_non_associates \\<Q> \\<and>\n  (\\<forall>a b.\n      mod_type_class.to_nat a = mod_type_class.to_nat b \\<and>\n      mod_type_class.to_nat a < min (nrows S') (ncols S') \\<and>\n      mod_type_class.to_nat b < min (nrows S') (ncols S') \\<longrightarrow>\n      S' $h a $h b \\<in> \\<Q>)\n\ngoal (1 subgoal):\n 1. S $h i $h j = S' $h i $h j", "by auto"], ["proof (state)\nthis:\n  S $h i $h j = S' $h i $h j\n\ngoal (1 subgoal):\n 1. \\<not> mod_type_class.to_nat i \\<noteq>\n           mod_type_class.to_nat j \\<Longrightarrow>\n    S $h i $h j = S' $h i $h j", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> mod_type_class.to_nat i \\<noteq>\n           mod_type_class.to_nat j \\<Longrightarrow>\n    S $h i $h j = S' $h i $h j", "case False"], ["proof (state)\nthis:\n  \\<not> mod_type_class.to_nat i \\<noteq> mod_type_class.to_nat j\n\ngoal (1 subgoal):\n 1. \\<not> mod_type_class.to_nat i \\<noteq>\n           mod_type_class.to_nat j \\<Longrightarrow>\n    S $h i $h j = S' $h i $h j", "let ?i = \"Mod_Type.to_nat i\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> mod_type_class.to_nat i \\<noteq>\n           mod_type_class.to_nat j \\<Longrightarrow>\n    S $h i $h j = S' $h i $h j", "let ?j = \"Mod_Type.to_nat j\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> mod_type_class.to_nat i \\<noteq>\n           mod_type_class.to_nat j \\<Longrightarrow>\n    S $h i $h j = S' $h i $h j", "have complete_set: \"Complete_set_non_associates \\<Q>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Complete_set_non_associates \\<Q>", "using SNF_S'"], ["proof (prove)\nusing this:\n  Smith_normal_form_wrt S' \\<Q>\n\ngoal (1 subgoal):\n 1. Complete_set_non_associates \\<Q>", "unfolding Smith_normal_form_wrt_def"], ["proof (prove)\nusing this:\n  (\\<forall>a b.\n      mod_type_class.to_nat a = mod_type_class.to_nat b \\<and>\n      mod_type_class.to_nat a + 1 < nrows S' \\<and>\n      mod_type_class.to_nat b + 1 < ncols S' \\<longrightarrow>\n      S' $h a $h b dvd S' $h (a + (1::'n)) $h (b + (1::'m))) \\<and>\n  isDiagonal S' \\<and>\n  Complete_set_non_associates \\<Q> \\<and>\n  (\\<forall>a b.\n      mod_type_class.to_nat a = mod_type_class.to_nat b \\<and>\n      mod_type_class.to_nat a < min (nrows S') (ncols S') \\<and>\n      mod_type_class.to_nat b < min (nrows S') (ncols S') \\<longrightarrow>\n      S' $h a $h b \\<in> \\<Q>)\n\ngoal (1 subgoal):\n 1. Complete_set_non_associates \\<Q>", "by simp"], ["proof (state)\nthis:\n  Complete_set_non_associates \\<Q>\n\ngoal (1 subgoal):\n 1. \\<not> mod_type_class.to_nat i \\<noteq>\n           mod_type_class.to_nat j \\<Longrightarrow>\n    S $h i $h j = S' $h i $h j", "have ij: \"?i = ?j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mod_type_class.to_nat i = mod_type_class.to_nat j", "using False"], ["proof (prove)\nusing this:\n  \\<not> mod_type_class.to_nat i \\<noteq> mod_type_class.to_nat j\n\ngoal (1 subgoal):\n 1. mod_type_class.to_nat i = mod_type_class.to_nat j", "by auto"], ["proof (state)\nthis:\n  mod_type_class.to_nat i = mod_type_class.to_nat j\n\ngoal (1 subgoal):\n 1. \\<not> mod_type_class.to_nat i \\<noteq>\n           mod_type_class.to_nat j \\<Longrightarrow>\n    S $h i $h j = S' $h i $h j", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. S $h i $h j = S' $h i $h j", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. S $h i $h j \\<noteq> S' $h i $h j \\<Longrightarrow> False", "assume d: \"S $h i $h j \\<noteq> S' $h i $h j\""], ["proof (state)\nthis:\n  S $h i $h j \\<noteq> S' $h i $h j\n\ngoal (1 subgoal):\n 1. S $h i $h j \\<noteq> S' $h i $h j \\<Longrightarrow> False", "have n: \"normalize (S $h i $h j) \\<noteq> normalize (S' $h i $h j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. normalize (S $h i $h j) \\<noteq> normalize (S' $h i $h j)", "proof (rule in_Ass_not_associated[OF complete_set _ _ d])"], ["proof (state)\ngoal (2 subgoals):\n 1. S $h i $h j \\<in> \\<Q>\n 2. S' $h i $h j \\<in> \\<Q>", "show \"S $h i $h j \\<in> \\<Q>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S $h i $h j \\<in> \\<Q>", "using SNF"], ["proof (prove)\nusing this:\n  Smith_normal_form_wrt S \\<Q>\n\ngoal (1 subgoal):\n 1. S $h i $h j \\<in> \\<Q>", "unfolding Smith_normal_form_wrt_def"], ["proof (prove)\nusing this:\n  (\\<forall>a b.\n      mod_type_class.to_nat a = mod_type_class.to_nat b \\<and>\n      mod_type_class.to_nat a + 1 < nrows S \\<and>\n      mod_type_class.to_nat b + 1 < ncols S \\<longrightarrow>\n      S $h a $h b dvd S $h (a + (1::'n)) $h (b + (1::'m))) \\<and>\n  isDiagonal S \\<and>\n  Complete_set_non_associates \\<Q> \\<and>\n  (\\<forall>a b.\n      mod_type_class.to_nat a = mod_type_class.to_nat b \\<and>\n      mod_type_class.to_nat a < min (nrows S) (ncols S) \\<and>\n      mod_type_class.to_nat b < min (nrows S) (ncols S) \\<longrightarrow>\n      S $h a $h b \\<in> \\<Q>)\n\ngoal (1 subgoal):\n 1. S $h i $h j \\<in> \\<Q>", "by (metis False min_less_iff_conj mod_type_class.to_nat_less_card ncols_def nrows_def)"], ["proof (state)\nthis:\n  S $h i $h j \\<in> \\<Q>\n\ngoal (1 subgoal):\n 1. S' $h i $h j \\<in> \\<Q>", "show \"S' $h i $h j \\<in> \\<Q>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. S' $h i $h j \\<in> \\<Q>", "using SNF_S'"], ["proof (prove)\nusing this:\n  Smith_normal_form_wrt S' \\<Q>\n\ngoal (1 subgoal):\n 1. S' $h i $h j \\<in> \\<Q>", "unfolding Smith_normal_form_wrt_def"], ["proof (prove)\nusing this:\n  (\\<forall>a b.\n      mod_type_class.to_nat a = mod_type_class.to_nat b \\<and>\n      mod_type_class.to_nat a + 1 < nrows S' \\<and>\n      mod_type_class.to_nat b + 1 < ncols S' \\<longrightarrow>\n      S' $h a $h b dvd S' $h (a + (1::'n)) $h (b + (1::'m))) \\<and>\n  isDiagonal S' \\<and>\n  Complete_set_non_associates \\<Q> \\<and>\n  (\\<forall>a b.\n      mod_type_class.to_nat a = mod_type_class.to_nat b \\<and>\n      mod_type_class.to_nat a < min (nrows S') (ncols S') \\<and>\n      mod_type_class.to_nat b < min (nrows S') (ncols S') \\<longrightarrow>\n      S' $h a $h b \\<in> \\<Q>)\n\ngoal (1 subgoal):\n 1. S' $h i $h j \\<in> \\<Q>", "by (metis False min_less_iff_conj mod_type_class.to_nat_less_card ncols_def nrows_def)"], ["proof (state)\nthis:\n  S' $h i $h j \\<in> \\<Q>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  normalize (S $h i $h j) \\<noteq> normalize (S' $h i $h j)\n\ngoal (1 subgoal):\n 1. S $h i $h j \\<noteq> S' $h i $h j \\<Longrightarrow> False", "have \"\\<exists>u. u dvd 1 \\<and> S $h i $h j = u * S' $h i $h j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>u. is_unit u \\<and> S $h i $h j = u * S' $h i $h j", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>u. is_unit u \\<and> S $h i $h j = u * S' $h i $h j", "have \"\\<exists>u. u dvd 1 \\<and> S $h Mod_Type.from_nat ?i $h Mod_Type.from_nat ?i\n          = u * S' $h Mod_Type.from_nat ?i $h Mod_Type.from_nat ?i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>u.\n       is_unit u \\<and>\n       S $h mod_type_class.from_nat (mod_type_class.to_nat i) $h\n       mod_type_class.from_nat (mod_type_class.to_nat i) =\n       u *\n       S' $h mod_type_class.from_nat (mod_type_class.to_nat i) $h\n       mod_type_class.from_nat (mod_type_class.to_nat i)", "proof (rule Smith_normal_form_uniqueness_HOL_Analysis[OF P Q PAQ_S _ P' Q' P'AQ'_S' _])"], ["proof (state)\ngoal (3 subgoals):\n 1. Smith_normal_form S\n 2. Smith_normal_form S'\n 3. mod_type_class.to_nat i < min (nrows A) (ncols A)", "show \"Smith_normal_form S\" and \"Smith_normal_form S'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Smith_normal_form S &&& Smith_normal_form S'", "using SNF SNF_S' Smith_normal_form_def Smith_normal_form_wrt_def"], ["proof (prove)\nusing this:\n  Smith_normal_form_wrt S \\<Q>\n  Smith_normal_form_wrt S' \\<Q>\n  Smith_normal_form ?A =\n  ((\\<forall>a b.\n       mod_type_class.to_nat a = mod_type_class.to_nat b \\<and>\n       mod_type_class.to_nat a + 1 < nrows ?A \\<and>\n       mod_type_class.to_nat b + 1 < ncols ?A \\<longrightarrow>\n       ?A $h a $h b dvd ?A $h (a + (1::?'c)) $h (b + (1::?'b))) \\<and>\n   isDiagonal ?A)\n  Smith_normal_form_wrt ?A ?\\<Q> =\n  ((\\<forall>a b.\n       mod_type_class.to_nat a = mod_type_class.to_nat b \\<and>\n       mod_type_class.to_nat a + 1 < nrows ?A \\<and>\n       mod_type_class.to_nat b + 1 < ncols ?A \\<longrightarrow>\n       ?A $h a $h b dvd ?A $h (a + (1::?'c)) $h (b + (1::?'b))) \\<and>\n   isDiagonal ?A \\<and>\n   Complete_set_non_associates ?\\<Q> \\<and>\n   (\\<forall>a b.\n       mod_type_class.to_nat a = mod_type_class.to_nat b \\<and>\n       mod_type_class.to_nat a < min (nrows ?A) (ncols ?A) \\<and>\n       mod_type_class.to_nat b < min (nrows ?A) (ncols ?A) \\<longrightarrow>\n       ?A $h a $h b \\<in> ?\\<Q>))\n\ngoal (1 subgoal):\n 1. Smith_normal_form S &&& Smith_normal_form S'", "by blast+"], ["proof (state)\nthis:\n  Smith_normal_form S\n  Smith_normal_form S'\n\ngoal (1 subgoal):\n 1. mod_type_class.to_nat i < min (nrows A) (ncols A)", "show \"?i < min (nrows A) (ncols A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mod_type_class.to_nat i < min (nrows A) (ncols A)", "by (metis ij min_less_iff_conj mod_type_class.to_nat_less_card ncols_def nrows_def)"], ["proof (state)\nthis:\n  mod_type_class.to_nat i < min (nrows A) (ncols A)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>u.\n     is_unit u \\<and>\n     S $h mod_type_class.from_nat (mod_type_class.to_nat i) $h\n     mod_type_class.from_nat (mod_type_class.to_nat i) =\n     u *\n     S' $h mod_type_class.from_nat (mod_type_class.to_nat i) $h\n     mod_type_class.from_nat (mod_type_class.to_nat i)\n\ngoal (1 subgoal):\n 1. \\<exists>u. is_unit u \\<and> S $h i $h j = u * S' $h i $h j", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>u.\n     is_unit u \\<and>\n     S $h mod_type_class.from_nat (mod_type_class.to_nat i) $h\n     mod_type_class.from_nat (mod_type_class.to_nat i) =\n     u *\n     S' $h mod_type_class.from_nat (mod_type_class.to_nat i) $h\n     mod_type_class.from_nat (mod_type_class.to_nat i)\n\ngoal (1 subgoal):\n 1. \\<exists>u. is_unit u \\<and> S $h i $h j = u * S' $h i $h j", "using False"], ["proof (prove)\nusing this:\n  \\<exists>u.\n     is_unit u \\<and>\n     S $h mod_type_class.from_nat (mod_type_class.to_nat i) $h\n     mod_type_class.from_nat (mod_type_class.to_nat i) =\n     u *\n     S' $h mod_type_class.from_nat (mod_type_class.to_nat i) $h\n     mod_type_class.from_nat (mod_type_class.to_nat i)\n  \\<not> mod_type_class.to_nat i \\<noteq> mod_type_class.to_nat j\n\ngoal (1 subgoal):\n 1. \\<exists>u. is_unit u \\<and> S $h i $h j = u * S' $h i $h j", "by auto"], ["proof (state)\nthis:\n  \\<exists>u. is_unit u \\<and> S $h i $h j = u * S' $h i $h j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>u. is_unit u \\<and> S $h i $h j = u * S' $h i $h j\n\ngoal (1 subgoal):\n 1. S $h i $h j \\<noteq> S' $h i $h j \\<Longrightarrow> False", "from this"], ["proof (chain)\npicking this:\n  \\<exists>u. is_unit u \\<and> S $h i $h j = u * S' $h i $h j", "obtain u where \"is_unit u\" and \"S $h i $h j = u * S' $h i $h j\""], ["proof (prove)\nusing this:\n  \\<exists>u. is_unit u \\<and> S $h i $h j = u * S' $h i $h j\n\ngoal (1 subgoal):\n 1. (\\<And>u.\n        \\<lbrakk>is_unit u; S $h i $h j = u * S' $h i $h j\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  is_unit u\n  S $h i $h j = u * S' $h i $h j\n\ngoal (1 subgoal):\n 1. S $h i $h j \\<noteq> S' $h i $h j \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  is_unit u\n  S $h i $h j = u * S' $h i $h j\n\ngoal (1 subgoal):\n 1. False", "using n"], ["proof (prove)\nusing this:\n  is_unit u\n  S $h i $h j = u * S' $h i $h j\n  normalize (S $h i $h j) \\<noteq> normalize (S' $h i $h j)\n\ngoal (1 subgoal):\n 1. False", "by (simp add: normalize_1_iff normalize_mult)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  S $h i $h j = S' $h i $h j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  S $h ?i $h ?j = S' $h ?i $h ?j\n\ngoal (1 subgoal):\n 1. S = S'", "thus ?thesis"], ["proof (prove)\nusing this:\n  S $h ?i $h ?j = S' $h ?i $h ?j\n\ngoal (1 subgoal):\n 1. S = S'", "by vector"], ["proof (state)\nthis:\n  S = S'\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}