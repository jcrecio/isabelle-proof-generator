{"file_name": "/home/qj213/afp-2021-10-22/thys/Smith_Normal_Form/Cauchy_Binet.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Smith_Normal_Form", "problem_names": ["lemma pick_insert:\n  assumes a_notin_I: \"a \\<notin> I\" and i2: \"i < card I\"\n    and a_def: \"pick (insert a I) a' = a\" (*Alternative: index (insort a (sorted_list_of_set I)) a = a'*)\n    and ia': \"i < a'\" (*Case 1*)\n    and a'_card: \"a' < card I + 1\"\n  shows \"pick (insert a I) i = pick I i\"", "lemma pick_insert2:\n  assumes a_notin_I: \"a \\<notin> I\" and i2: \"i < card I\"\n    and a_def: \"pick (insert a I) a' = a\" (*Alternative: index (sorted_list_of_set (insert a I)) a = a'*)\n    and ia': \"i \\<ge> a'\" (*Case 2*)\n    and a'_card: \"a' < card I + 1\"\n  shows \"pick (insert a I) i < pick I i\"", "lemma pick_insert3:\n  assumes a_notin_I: \"a \\<notin> I\" and i2: \"i < card I\"\n    and a_def: \"pick (insert a I) a' = a\" (*Alternative: index (sorted_list_of_set (insert a I)) a = a'.*)\n    and ia': \"i \\<ge> a'\" (*Case 2*)\n    and a'_card: \"a' < card I + 1\"\n  shows \"pick (insert a I) (Suc i) = pick I i\"", "lemma pick_insert_index:\n  assumes Ik: \"card I = k\"\n  and a_notin_I: \"a \\<notin> I\"\n  and ik: \"i < k\"\n  and a_def: \"pick (insert a I) a' = a\"\n  and a'k: \"a' < card I + 1\"\nshows \"pick (insert a I) (insert_index a' i) = pick I i\"", "lemma strict_strict_from_inj:\n  fixes f::\"nat \\<Rightarrow> nat\"\n  assumes \"inj_on f {0..<n}\" shows \"strict_mono_on (strict_from_inj n f) {0..<n}\"", "lemma strict_from_inj_image':\n  assumes f: \"inj_on f {0..<n}\"\n  shows \"strict_from_inj n f ` {0..<n} = f`{0..<n}\"", "lemma Z_alt_def: \"Z n m = {f. f \\<in> {0..<n} \\<rightarrow> {0..<m} \\<and> (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)} \\<times> {\\<pi>. \\<pi> permutes {0..<n}}\"", "lemma det_mul_finsum_alt:\n  assumes A: \"A \\<in> carrier_mat n m\"\n    and B: \"B \\<in> carrier_mat m n\"\n  shows \"det (A*B) = det (mat\\<^sub>r n n (\\<lambda>i. finsum_vec TYPE('a::comm_ring_1) n\n  (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v Matrix.col A k) {0..<m}))\"", "lemma det_cols_mul:\n  assumes A: \"A \\<in> carrier_mat n m\"\n    and B: \"B \\<in> carrier_mat m n\"\n  shows \"det (A*B) = (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and> (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       (\\<Prod>i = 0..<n. B $$ (f i, i)) * Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col A (f i))))\"", "lemma det_cols_mul':\n  assumes A: \"A \\<in> carrier_mat n m\"\n    and B: \"B \\<in> carrier_mat m n\"\n  shows \"det (A*B) = (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and> (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       (\\<Prod>i = 0..<n. A $$ (i, f i)) * det (mat\\<^sub>r n n (\\<lambda>i. row B (f i))))\"", "lemma\n  assumes F: \"F= {f. f \\<in> {0..<n} \\<rightarrow> {0..<m} \\<and> (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)}\"\n  and p: \" \\<pi> permutes {0..<n}\"\n  shows \" (\\<Sum>f\\<in>F. (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i))) = (\\<Sum>f\\<in>F. (\\<Prod>i = 0..<n. B $$ (f i, i)))\"", "lemma detAB_Znm_aux:\n  assumes F: \"F= {f. f \\<in> {0..<n} \\<rightarrow> {0..<m} \\<and> (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)}\"\n  shows\"(\\<Sum>\\<pi> | \\<pi> permutes {0..<n}. (\\<Sum>f\\<in>F. prod (\\<lambda>i. B $$ (f i, i)) {0..<n}\n        * (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f i)))))\n    = (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}. \\<Sum>f\\<in>F. (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i))\n        * (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i))))\"", "lemma detAB_Znm:\n  assumes A: \"A \\<in> carrier_mat n m\"\n    and B: \"B \\<in> carrier_mat m n\"\n  shows \"det (A*B) = (\\<Sum>(f, \\<pi>)\\<in>Z n m. signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))\"", "lemma step_weight:\n  fixes \\<phi> \\<pi>\n  defines \"\\<sigma> \\<equiv> \\<pi> \\<circ> Hilbert_Choice.inv \\<phi>\"\n  assumes f_inj: \"f \\<in> F_inj\" and gF: \"g \\<in> F\" and pi: \"\\<pi> permutes {0..<n}\"\n  and phi: \"\\<phi> permutes {0..<n}\" and fg_phi: \"\\<forall>x \\<in> {0..<n}. f x = g (\\<phi> x)\"\nshows \"weight f \\<pi> = (signof \\<phi>) * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i)))\n  * (signof \\<sigma>) * (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i))\"", "lemma Z_good_fun_alt_sum:\n  fixes g\n  defines \"Z_good_fun \\<equiv> {f. f \\<in> {0..<n} \\<rightarrow> {0..<m} \\<and> (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)\n    \\<and> inj_on f {0..<n} \\<and> (f`{0..<n} = g`{0..<n})}\"\n  assumes g: \"g \\<in> F_inj\"\n  shows \"(\\<Sum>f\\<in>Z_good_fun. P f)= (\\<Sum>\\<pi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}. P (g \\<circ> \\<pi>))\"", "lemma F_injI:\n  assumes \"f \\<in> {0..<n} \\<rightarrow> {0..<m}\"\n  and \"(\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)\" and \"inj_on f {0..<n}\"\n  shows \"f \\<in> F_inj\"", "lemma F_inj_composition_permutation:\n  assumes phi: \"\\<phi> permutes {0..<n}\"\n  and g: \"g \\<in> F_inj\"\n  shows \"g \\<circ> \\<phi> \\<in> F_inj\"", "lemma F_strict_imp_F_inj:\n  assumes f: \"f \\<in> F_strict\"\n  shows \"f \\<in> F_inj\"", "lemma one_step:\n  assumes g1: \"g \\<in> F_strict\"\n  shows \"det (submatrix A UNIV (g`{0..<n})) * det (submatrix B (g`{0..<n}) UNIV)\n    = (\\<Sum>(x, y) \\<in> Z_good g. weight x y)\" (is \"?lhs = ?rhs\")", "lemma gather_by_strictness:\n\"sum (\\<lambda>g. sum (\\<lambda>(f,\\<pi>). weight f \\<pi>) (Z_good g)) F_strict\n  = sum (\\<lambda>g. det (submatrix A UNIV (g`{0..<n})) * det (submatrix B (g`{0..<n}) UNIV)) F_strict\"", "lemma finite_Z_strict[simp]: \"finite Z_strict\"", "lemma finite_Z_not_strict[simp]: \"finite Z_not_strict\"", "lemma finite_Znm[simp]: \"finite (Z n m)\"", "lemma finite_F_inj[simp]: \"finite F_inj\"", "lemma finite_F_strict[simp]: \"finite F_strict\"", "lemma nth_strict_mono:\n  fixes f::\"nat \\<Rightarrow> nat\"\n  assumes  strictf: \"strict_mono f\" and i: \"i<n\"\nshows \"f i = (sorted_list_of_set (f`{0..<n})) ! i\"", "lemma nth_strict_mono_on:\n  fixes f::\"nat \\<Rightarrow> nat\"\n  assumes  strictf: \"strict_mono_on f {0..<n}\" and i: \"i<n\"\nshows \"f i = (sorted_list_of_set (f`{0..<n})) ! i\"", "lemma strict_fun_eq:\n  assumes f: \"f \\<in> F_strict\" and g: \"g \\<in> F_strict\" and fg: \"f`{0..<n} = g`{0..<n}\"\n  shows \"f = g\"", "lemma strict_from_inj_preserves_F:\n  assumes f: \"f \\<in> F_inj\"\n  shows \"strict_from_inj n f \\<in> F\"", "lemma strict_from_inj_F_strict: \"strict_from_inj n xa \\<in> F_strict\"\n  if xa: \"xa \\<in> F_inj\" for xa", "lemma strict_from_inj_image:\n  assumes f: \"f\\<in> F_inj\"\n  shows \"strict_from_inj n f ` {0..<n} = f`{0..<n}\"", "lemma Z_good_alt:\n  assumes g: \"g \\<in> F_strict\"\n  shows \"Z_good g = {x \\<in> F_inj. strict_from_inj n x = g} \\<times> {\\<pi>. \\<pi> permutes {0..<n}}\"", "lemma weight_0: \"(\\<Sum>(f, \\<pi>) \\<in> Z_not_inj. weight f \\<pi>) = 0\"", "lemma Cauchy_Binet1:\n  shows \"det (A*B) =\n  sum (\\<lambda>f. det (submatrix A UNIV (f`{0..<n})) * det (submatrix B (f`{0..<n}) UNIV)) F_strict\"\n(is \"?lhs = ?rhs\")", "lemma Cauchy_Binet:\n  \"det (A*B) = (\\<Sum>I\\<in>{I. I\\<subseteq>{0..<m} \\<and> card I=n}. det (submatrix A UNIV I) * det (submatrix B I UNIV))\""], "translations": [["", "lemma pick_insert:\n  assumes a_notin_I: \"a \\<notin> I\" and i2: \"i < card I\"\n    and a_def: \"pick (insert a I) a' = a\" (*Alternative: index (insort a (sorted_list_of_set I)) a = a'*)\n    and ia': \"i < a'\" (*Case 1*)\n    and a'_card: \"a' < card I + 1\"\n  shows \"pick (insert a I) i = pick I i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pick (insert a I) i = pick I i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pick (insert a I) i = pick I i", "have finI: \"finite I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite I", "using i2"], ["proof (prove)\nusing this:\n  i < card I\n\ngoal (1 subgoal):\n 1. finite I", "using card.infinite"], ["proof (prove)\nusing this:\n  i < card I\n  infinite ?A \\<Longrightarrow> card ?A = 0\n\ngoal (1 subgoal):\n 1. finite I", "by force"], ["proof (state)\nthis:\n  finite I\n\ngoal (1 subgoal):\n 1. pick (insert a I) i = pick I i", "have \"pick (insert a I) i = sorted_list_of_set (insert a I) ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pick (insert a I) i = sorted_list_of_set (insert a I) ! i", "proof (rule sorted_list_of_set_eq_pick[symmetric])"], ["proof (state)\ngoal (1 subgoal):\n 1. i < length (sorted_list_of_set (insert a I))", "have \"finite (insert a I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (insert a I)", "using card.infinite i2"], ["proof (prove)\nusing this:\n  infinite ?A \\<Longrightarrow> card ?A = 0\n  i < card I\n\ngoal (1 subgoal):\n 1. finite (insert a I)", "by force"], ["proof (state)\nthis:\n  finite (insert a I)\n\ngoal (1 subgoal):\n 1. i < length (sorted_list_of_set (insert a I))", "thus \"i < length (sorted_list_of_set (insert a I))\""], ["proof (prove)\nusing this:\n  finite (insert a I)\n\ngoal (1 subgoal):\n 1. i < length (sorted_list_of_set (insert a I))", "by (metis a_notin_I card_insert_disjoint distinct_card finite_insert\n          i2 less_Suc_eq sorted_list_of_set(1) sorted_list_of_set(3))"], ["proof (state)\nthis:\n  i < length (sorted_list_of_set (insert a I))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pick (insert a I) i = sorted_list_of_set (insert a I) ! i\n\ngoal (1 subgoal):\n 1. pick (insert a I) i = pick I i", "also"], ["proof (state)\nthis:\n  pick (insert a I) i = sorted_list_of_set (insert a I) ! i\n\ngoal (1 subgoal):\n 1. pick (insert a I) i = pick I i", "have \"... = insort a (sorted_list_of_set I) ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_list_of_set (insert a I) ! i =\n    insort a (sorted_list_of_set I) ! i", "using sorted_list_of_set.insert"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?A; ?x \\<notin> ?A\\<rbrakk>\n  \\<Longrightarrow> sorted_list_of_set (insert ?x ?A) =\n                    insort ?x (sorted_list_of_set ?A)\n\ngoal (1 subgoal):\n 1. sorted_list_of_set (insert a I) ! i =\n    insort a (sorted_list_of_set I) ! i", "by (metis a_notin_I card.infinite i2 not_less0)"], ["proof (state)\nthis:\n  sorted_list_of_set (insert a I) ! i = insort a (sorted_list_of_set I) ! i\n\ngoal (1 subgoal):\n 1. pick (insert a I) i = pick I i", "also"], ["proof (state)\nthis:\n  sorted_list_of_set (insert a I) ! i = insort a (sorted_list_of_set I) ! i\n\ngoal (1 subgoal):\n 1. pick (insert a I) i = pick I i", "have \"... = (sorted_list_of_set I) ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insort a (sorted_list_of_set I) ! i = sorted_list_of_set I ! i", "proof (rule insort_nth[OF])"], ["proof (state)\ngoal (4 subgoals):\n 1. sorted (sorted_list_of_set I)\n 2. a \\<notin> set (sorted_list_of_set I)\n 3. i < index (insort a (sorted_list_of_set I)) a\n 4. sorted_list_of_set I \\<noteq> []", "show \"sorted (sorted_list_of_set I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted (sorted_list_of_set I)", "by auto"], ["proof (state)\nthis:\n  sorted (sorted_list_of_set I)\n\ngoal (3 subgoals):\n 1. a \\<notin> set (sorted_list_of_set I)\n 2. i < index (insort a (sorted_list_of_set I)) a\n 3. sorted_list_of_set I \\<noteq> []", "show \"a \\<notin> set (sorted_list_of_set I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<notin> set (sorted_list_of_set I)", "using a_notin_I"], ["proof (prove)\nusing this:\n  a \\<notin> I\n\ngoal (1 subgoal):\n 1. a \\<notin> set (sorted_list_of_set I)", "by (metis card.infinite i2 not_less_zero set_sorted_list_of_set)"], ["proof (state)\nthis:\n  a \\<notin> set (sorted_list_of_set I)\n\ngoal (2 subgoals):\n 1. i < index (insort a (sorted_list_of_set I)) a\n 2. sorted_list_of_set I \\<noteq> []", "have \"index (sorted_list_of_set (insert a I)) a = a'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. index (sorted_list_of_set (insert a I)) a = a'", "using pick_index a_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<in> ?I; ?a' < card ?I\\<rbrakk>\n  \\<Longrightarrow> (pick ?I ?a' = ?a) =\n                    (index (sorted_list_of_set ?I) ?a = ?a')\n  pick (insert a I) a' = a\n\ngoal (1 subgoal):\n 1. index (sorted_list_of_set (insert a I)) a = a'", "using a'_card a_notin_I finI"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<in> ?I; ?a' < card ?I\\<rbrakk>\n  \\<Longrightarrow> (pick ?I ?a' = ?a) =\n                    (index (sorted_list_of_set ?I) ?a = ?a')\n  pick (insert a I) a' = a\n  a' < card I + 1\n  a \\<notin> I\n  finite I\n\ngoal (1 subgoal):\n 1. index (sorted_list_of_set (insert a I)) a = a'", "by auto"], ["proof (state)\nthis:\n  index (sorted_list_of_set (insert a I)) a = a'\n\ngoal (2 subgoals):\n 1. i < index (insort a (sorted_list_of_set I)) a\n 2. sorted_list_of_set I \\<noteq> []", "hence \"index (insort a (sorted_list_of_set I)) a = a'\""], ["proof (prove)\nusing this:\n  index (sorted_list_of_set (insert a I)) a = a'\n\ngoal (1 subgoal):\n 1. index (insort a (sorted_list_of_set I)) a = a'", "by (simp add: a_notin_I finI)"], ["proof (state)\nthis:\n  index (insort a (sorted_list_of_set I)) a = a'\n\ngoal (2 subgoals):\n 1. i < index (insort a (sorted_list_of_set I)) a\n 2. sorted_list_of_set I \\<noteq> []", "thus \"i < index (insort a (sorted_list_of_set I)) a\""], ["proof (prove)\nusing this:\n  index (insort a (sorted_list_of_set I)) a = a'\n\ngoal (1 subgoal):\n 1. i < index (insort a (sorted_list_of_set I)) a", "using ia'"], ["proof (prove)\nusing this:\n  index (insort a (sorted_list_of_set I)) a = a'\n  i < a'\n\ngoal (1 subgoal):\n 1. i < index (insort a (sorted_list_of_set I)) a", "by auto"], ["proof (state)\nthis:\n  i < index (insort a (sorted_list_of_set I)) a\n\ngoal (1 subgoal):\n 1. sorted_list_of_set I \\<noteq> []", "show \"sorted_list_of_set I \\<noteq> []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_list_of_set I \\<noteq> []", "using finI i2"], ["proof (prove)\nusing this:\n  finite I\n  i < card I\n\ngoal (1 subgoal):\n 1. sorted_list_of_set I \\<noteq> []", "by fastforce"], ["proof (state)\nthis:\n  sorted_list_of_set I \\<noteq> []\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  insort a (sorted_list_of_set I) ! i = sorted_list_of_set I ! i\n\ngoal (1 subgoal):\n 1. pick (insert a I) i = pick I i", "also"], ["proof (state)\nthis:\n  insort a (sorted_list_of_set I) ! i = sorted_list_of_set I ! i\n\ngoal (1 subgoal):\n 1. pick (insert a I) i = pick I i", "have \"... = pick I i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_list_of_set I ! i = pick I i", "proof (rule sorted_list_of_set_eq_pick)"], ["proof (state)\ngoal (1 subgoal):\n 1. i < length (sorted_list_of_set I)", "have \"finite I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite I", "using card.infinite i2"], ["proof (prove)\nusing this:\n  infinite ?A \\<Longrightarrow> card ?A = 0\n  i < card I\n\ngoal (1 subgoal):\n 1. finite I", "by fastforce"], ["proof (state)\nthis:\n  finite I\n\ngoal (1 subgoal):\n 1. i < length (sorted_list_of_set I)", "thus \"i < length (sorted_list_of_set I)\""], ["proof (prove)\nusing this:\n  finite I\n\ngoal (1 subgoal):\n 1. i < length (sorted_list_of_set I)", "by (metis distinct_card distinct_sorted_list_of_set i2 set_sorted_list_of_set)"], ["proof (state)\nthis:\n  i < length (sorted_list_of_set I)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sorted_list_of_set I ! i = pick I i\n\ngoal (1 subgoal):\n 1. pick (insert a I) i = pick I i", "finally"], ["proof (chain)\npicking this:\n  pick (insert a I) i = pick I i", "show ?thesis"], ["proof (prove)\nusing this:\n  pick (insert a I) i = pick I i\n\ngoal (1 subgoal):\n 1. pick (insert a I) i = pick I i", "."], ["proof (state)\nthis:\n  pick (insert a I) i = pick I i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pick_insert2:\n  assumes a_notin_I: \"a \\<notin> I\" and i2: \"i < card I\"\n    and a_def: \"pick (insert a I) a' = a\" (*Alternative: index (sorted_list_of_set (insert a I)) a = a'*)\n    and ia': \"i \\<ge> a'\" (*Case 2*)\n    and a'_card: \"a' < card I + 1\"\n  shows \"pick (insert a I) i < pick I i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pick (insert a I) i < pick I i", "proof (cases \"i = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow> pick (insert a I) i < pick I i\n 2. i \\<noteq> 0 \\<Longrightarrow> pick (insert a I) i < pick I i", "case True"], ["proof (state)\nthis:\n  i = 0\n\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow> pick (insert a I) i < pick I i\n 2. i \\<noteq> 0 \\<Longrightarrow> pick (insert a I) i < pick I i", "then"], ["proof (chain)\npicking this:\n  i = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  i = 0\n\ngoal (1 subgoal):\n 1. pick (insert a I) i < pick I i", "by (auto, metis (mono_tags, lifting) DL_Missing_Sublist.pick.simps(1) Least_le a_def a_notin_I\n        dual_order.order_iff_strict i2 ia' insertCI le_zero_eq not_less_Least pick_in_set_le)"], ["proof (state)\nthis:\n  pick (insert a I) i < pick I i\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> pick (insert a I) i < pick I i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> pick (insert a I) i < pick I i", "case False"], ["proof (state)\nthis:\n  i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> pick (insert a I) i < pick I i", "hence i0: \"i = Suc (i - 1)\""], ["proof (prove)\nusing this:\n  i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. i = Suc (i - 1)", "using a'_card ia'"], ["proof (prove)\nusing this:\n  i \\<noteq> 0\n  a' < card I + 1\n  a' \\<le> i\n\ngoal (1 subgoal):\n 1. i = Suc (i - 1)", "by auto"], ["proof (state)\nthis:\n  i = Suc (i - 1)\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> pick (insert a I) i < pick I i", "have finI: \"finite I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite I", "using i2 card.infinite"], ["proof (prove)\nusing this:\n  i < card I\n  infinite ?A \\<Longrightarrow> card ?A = 0\n\ngoal (1 subgoal):\n 1. finite I", "by force"], ["proof (state)\nthis:\n  finite I\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> pick (insert a I) i < pick I i", "have index_a'1: \"index (sorted_list_of_set (insert a I)) a = a'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. index (sorted_list_of_set (insert a I)) a = a'", "using pick_index"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<in> ?I; ?a' < card ?I\\<rbrakk>\n  \\<Longrightarrow> (pick ?I ?a' = ?a) =\n                    (index (sorted_list_of_set ?I) ?a = ?a')\n\ngoal (1 subgoal):\n 1. index (sorted_list_of_set (insert a I)) a = a'", "using a'_card a_def a_notin_I finI"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<in> ?I; ?a' < card ?I\\<rbrakk>\n  \\<Longrightarrow> (pick ?I ?a' = ?a) =\n                    (index (sorted_list_of_set ?I) ?a = ?a')\n  a' < card I + 1\n  pick (insert a I) a' = a\n  a \\<notin> I\n  finite I\n\ngoal (1 subgoal):\n 1. index (sorted_list_of_set (insert a I)) a = a'", "by auto"], ["proof (state)\nthis:\n  index (sorted_list_of_set (insert a I)) a = a'\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> pick (insert a I) i < pick I i", "hence index_a': \"index (insort a (sorted_list_of_set I)) a = a'\""], ["proof (prove)\nusing this:\n  index (sorted_list_of_set (insert a I)) a = a'\n\ngoal (1 subgoal):\n 1. index (insort a (sorted_list_of_set I)) a = a'", "by (simp add: a_notin_I finI)"], ["proof (state)\nthis:\n  index (insort a (sorted_list_of_set I)) a = a'\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> pick (insert a I) i < pick I i", "have i1_length: \"i - 1 < length (sorted_list_of_set I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i - 1 < length (sorted_list_of_set I)", "using i2"], ["proof (prove)\nusing this:\n  i < card I\n\ngoal (1 subgoal):\n 1. i - 1 < length (sorted_list_of_set I)", "by (metis distinct_card distinct_sorted_list_of_set finI\n        less_imp_diff_less set_sorted_list_of_set)"], ["proof (state)\nthis:\n  i - 1 < length (sorted_list_of_set I)\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> pick (insert a I) i < pick I i", "have 1: \"pick (insert a I) i = sorted_list_of_set (insert a I) ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pick (insert a I) i = sorted_list_of_set (insert a I) ! i", "proof (rule sorted_list_of_set_eq_pick[symmetric])"], ["proof (state)\ngoal (1 subgoal):\n 1. i < length (sorted_list_of_set (insert a I))", "have \"finite (insert a I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (insert a I)", "using card.infinite i2"], ["proof (prove)\nusing this:\n  infinite ?A \\<Longrightarrow> card ?A = 0\n  i < card I\n\ngoal (1 subgoal):\n 1. finite (insert a I)", "by force"], ["proof (state)\nthis:\n  finite (insert a I)\n\ngoal (1 subgoal):\n 1. i < length (sorted_list_of_set (insert a I))", "thus \"i < length (sorted_list_of_set (insert a I))\""], ["proof (prove)\nusing this:\n  finite (insert a I)\n\ngoal (1 subgoal):\n 1. i < length (sorted_list_of_set (insert a I))", "by (metis a_notin_I card_insert_disjoint distinct_card finite_insert\n          i2 less_Suc_eq sorted_list_of_set(1) sorted_list_of_set(3))"], ["proof (state)\nthis:\n  i < length (sorted_list_of_set (insert a I))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pick (insert a I) i = sorted_list_of_set (insert a I) ! i\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> pick (insert a I) i < pick I i", "also"], ["proof (state)\nthis:\n  pick (insert a I) i = sorted_list_of_set (insert a I) ! i\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> pick (insert a I) i < pick I i", "have 2: \"... = insort a (sorted_list_of_set I) ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_list_of_set (insert a I) ! i =\n    insort a (sorted_list_of_set I) ! i", "using sorted_list_of_set.insert"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?A; ?x \\<notin> ?A\\<rbrakk>\n  \\<Longrightarrow> sorted_list_of_set (insert ?x ?A) =\n                    insort ?x (sorted_list_of_set ?A)\n\ngoal (1 subgoal):\n 1. sorted_list_of_set (insert a I) ! i =\n    insort a (sorted_list_of_set I) ! i", "by (metis a_notin_I card.infinite i2 not_less0)"], ["proof (state)\nthis:\n  sorted_list_of_set (insert a I) ! i = insort a (sorted_list_of_set I) ! i\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> pick (insert a I) i < pick I i", "also"], ["proof (state)\nthis:\n  sorted_list_of_set (insert a I) ! i = insort a (sorted_list_of_set I) ! i\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> pick (insert a I) i < pick I i", "have \"... = insort a (sorted_list_of_set I) ! Suc (i-1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insort a (sorted_list_of_set I) ! i =\n    insort a (sorted_list_of_set I) ! Suc (i - 1)", "using i0"], ["proof (prove)\nusing this:\n  i = Suc (i - 1)\n\ngoal (1 subgoal):\n 1. insort a (sorted_list_of_set I) ! i =\n    insort a (sorted_list_of_set I) ! Suc (i - 1)", "by auto"], ["proof (state)\nthis:\n  insort a (sorted_list_of_set I) ! i =\n  insort a (sorted_list_of_set I) ! Suc (i - 1)\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> pick (insert a I) i < pick I i", "also"], ["proof (state)\nthis:\n  insort a (sorted_list_of_set I) ! i =\n  insort a (sorted_list_of_set I) ! Suc (i - 1)\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> pick (insert a I) i < pick I i", "have \"... < pick I i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insort a (sorted_list_of_set I) ! Suc (i - 1) < pick I i", "proof (cases \"i = a'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i = a' \\<Longrightarrow>\n    insort a (sorted_list_of_set I) ! Suc (i - 1) < pick I i\n 2. i \\<noteq> a' \\<Longrightarrow>\n    insort a (sorted_list_of_set I) ! Suc (i - 1) < pick I i", "case True"], ["proof (state)\nthis:\n  i = a'\n\ngoal (2 subgoals):\n 1. i = a' \\<Longrightarrow>\n    insort a (sorted_list_of_set I) ! Suc (i - 1) < pick I i\n 2. i \\<noteq> a' \\<Longrightarrow>\n    insort a (sorted_list_of_set I) ! Suc (i - 1) < pick I i", "have \"(sorted_list_of_set I) ! i > a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a < sorted_list_of_set I ! i", "by (smt \"1\" Suc_less_eq True a_def a_notin_I distinct_card distinct_sorted_list_of_set finI i2\n          ia' index_a' insort_nth2 length_insort lessI list.size(3) nat_less_le not_less_zero\n          pick_in_set_le set_sorted_list_of_set sorted_list_of_set(2) sorted_list_of_set.insert\n          sorted_list_of_set_eq_pick sorted_sorted_wrt sorted_wrt_nth_less)"], ["proof (state)\nthis:\n  a < sorted_list_of_set I ! i\n\ngoal (2 subgoals):\n 1. i = a' \\<Longrightarrow>\n    insort a (sorted_list_of_set I) ! Suc (i - 1) < pick I i\n 2. i \\<noteq> a' \\<Longrightarrow>\n    insort a (sorted_list_of_set I) ! Suc (i - 1) < pick I i", "moreover"], ["proof (state)\nthis:\n  a < sorted_list_of_set I ! i\n\ngoal (2 subgoals):\n 1. i = a' \\<Longrightarrow>\n    insort a (sorted_list_of_set I) ! Suc (i - 1) < pick I i\n 2. i \\<noteq> a' \\<Longrightarrow>\n    insort a (sorted_list_of_set I) ! Suc (i - 1) < pick I i", "have \"a = insort a (sorted_list_of_set I) ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a = insort a (sorted_list_of_set I) ! i", "using True 1 2 a_def"], ["proof (prove)\nusing this:\n  i = a'\n  pick (insert a I) i = sorted_list_of_set (insert a I) ! i\n  sorted_list_of_set (insert a I) ! i = insort a (sorted_list_of_set I) ! i\n  pick (insert a I) a' = a\n\ngoal (1 subgoal):\n 1. a = insort a (sorted_list_of_set I) ! i", "by auto"], ["proof (state)\nthis:\n  a = insort a (sorted_list_of_set I) ! i\n\ngoal (2 subgoals):\n 1. i = a' \\<Longrightarrow>\n    insort a (sorted_list_of_set I) ! Suc (i - 1) < pick I i\n 2. i \\<noteq> a' \\<Longrightarrow>\n    insort a (sorted_list_of_set I) ! Suc (i - 1) < pick I i", "ultimately"], ["proof (chain)\npicking this:\n  a < sorted_list_of_set I ! i\n  a = insort a (sorted_list_of_set I) ! i", "show ?thesis"], ["proof (prove)\nusing this:\n  a < sorted_list_of_set I ! i\n  a = insort a (sorted_list_of_set I) ! i\n\ngoal (1 subgoal):\n 1. insort a (sorted_list_of_set I) ! Suc (i - 1) < pick I i", "using 1 2"], ["proof (prove)\nusing this:\n  a < sorted_list_of_set I ! i\n  a = insort a (sorted_list_of_set I) ! i\n  pick (insert a I) i = sorted_list_of_set (insert a I) ! i\n  sorted_list_of_set (insert a I) ! i = insort a (sorted_list_of_set I) ! i\n\ngoal (1 subgoal):\n 1. insort a (sorted_list_of_set I) ! Suc (i - 1) < pick I i", "by (metis distinct_card finI i0 i2 set_sorted_list_of_set\n          sorted_list_of_set(3) sorted_list_of_set_eq_pick)"], ["proof (state)\nthis:\n  insort a (sorted_list_of_set I) ! Suc (i - 1) < pick I i\n\ngoal (1 subgoal):\n 1. i \\<noteq> a' \\<Longrightarrow>\n    insort a (sorted_list_of_set I) ! Suc (i - 1) < pick I i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<noteq> a' \\<Longrightarrow>\n    insort a (sorted_list_of_set I) ! Suc (i - 1) < pick I i", "case False"], ["proof (state)\nthis:\n  i \\<noteq> a'\n\ngoal (1 subgoal):\n 1. i \\<noteq> a' \\<Longrightarrow>\n    insort a (sorted_list_of_set I) ! Suc (i - 1) < pick I i", "have \"insort a (sorted_list_of_set I) ! Suc (i-1) = (sorted_list_of_set I) ! (i-1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insort a (sorted_list_of_set I) ! Suc (i - 1) =\n    sorted_list_of_set I ! (i - 1)", "by (rule insort_nth2, insert i1_length False ia' index_a', auto simp add: a_notin_I finI)"], ["proof (state)\nthis:\n  insort a (sorted_list_of_set I) ! Suc (i - 1) =\n  sorted_list_of_set I ! (i - 1)\n\ngoal (1 subgoal):\n 1. i \\<noteq> a' \\<Longrightarrow>\n    insort a (sorted_list_of_set I) ! Suc (i - 1) < pick I i", "also"], ["proof (state)\nthis:\n  insort a (sorted_list_of_set I) ! Suc (i - 1) =\n  sorted_list_of_set I ! (i - 1)\n\ngoal (1 subgoal):\n 1. i \\<noteq> a' \\<Longrightarrow>\n    insort a (sorted_list_of_set I) ! Suc (i - 1) < pick I i", "have \"... = pick I (i-1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_list_of_set I ! (i - 1) = pick I (i - 1)", "by (rule sorted_list_of_set_eq_pick[OF i1_length])"], ["proof (state)\nthis:\n  sorted_list_of_set I ! (i - 1) = pick I (i - 1)\n\ngoal (1 subgoal):\n 1. i \\<noteq> a' \\<Longrightarrow>\n    insort a (sorted_list_of_set I) ! Suc (i - 1) < pick I i", "also"], ["proof (state)\nthis:\n  sorted_list_of_set I ! (i - 1) = pick I (i - 1)\n\ngoal (1 subgoal):\n 1. i \\<noteq> a' \\<Longrightarrow>\n    insort a (sorted_list_of_set I) ! Suc (i - 1) < pick I i", "have \"... < pick I i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pick I (i - 1) < pick I i", "using i0 i2 pick_mono_le"], ["proof (prove)\nusing this:\n  i = Suc (i - 1)\n  i < card I\n  \\<lbrakk>?n < card ?S; ?m < ?n\\<rbrakk>\n  \\<Longrightarrow> pick ?S ?m < pick ?S ?n\n\ngoal (1 subgoal):\n 1. pick I (i - 1) < pick I i", "by auto"], ["proof (state)\nthis:\n  pick I (i - 1) < pick I i\n\ngoal (1 subgoal):\n 1. i \\<noteq> a' \\<Longrightarrow>\n    insort a (sorted_list_of_set I) ! Suc (i - 1) < pick I i", "finally"], ["proof (chain)\npicking this:\n  insort a (sorted_list_of_set I) ! Suc (i - 1) < pick I i", "show ?thesis"], ["proof (prove)\nusing this:\n  insort a (sorted_list_of_set I) ! Suc (i - 1) < pick I i\n\ngoal (1 subgoal):\n 1. insort a (sorted_list_of_set I) ! Suc (i - 1) < pick I i", "."], ["proof (state)\nthis:\n  insort a (sorted_list_of_set I) ! Suc (i - 1) < pick I i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  insort a (sorted_list_of_set I) ! Suc (i - 1) < pick I i\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> pick (insert a I) i < pick I i", "finally"], ["proof (chain)\npicking this:\n  pick (insert a I) i < pick I i", "show ?thesis"], ["proof (prove)\nusing this:\n  pick (insert a I) i < pick I i\n\ngoal (1 subgoal):\n 1. pick (insert a I) i < pick I i", "."], ["proof (state)\nthis:\n  pick (insert a I) i < pick I i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pick_insert3:\n  assumes a_notin_I: \"a \\<notin> I\" and i2: \"i < card I\"\n    and a_def: \"pick (insert a I) a' = a\" (*Alternative: index (sorted_list_of_set (insert a I)) a = a'.*)\n    and ia': \"i \\<ge> a'\" (*Case 2*)\n    and a'_card: \"a' < card I + 1\"\n  shows \"pick (insert a I) (Suc i) = pick I i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pick (insert a I) (Suc i) = pick I i", "proof (cases \"i = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow> pick (insert a I) (Suc i) = pick I i\n 2. i \\<noteq> 0 \\<Longrightarrow> pick (insert a I) (Suc i) = pick I i", "case True"], ["proof (state)\nthis:\n  i = 0\n\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow> pick (insert a I) (Suc i) = pick I i\n 2. i \\<noteq> 0 \\<Longrightarrow> pick (insert a I) (Suc i) = pick I i", "have a_LEAST: \"a < (LEAST aa. aa\\<in>I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a < (LEAST aa. aa \\<in> I)", "using True a_def a_notin_I i2 ia' pick_insert2"], ["proof (prove)\nusing this:\n  i = 0\n  pick (insert a I) a' = a\n  a \\<notin> I\n  i < card I\n  a' \\<le> i\n  \\<lbrakk>?a \\<notin> ?I; ?i < card ?I; pick (insert ?a ?I) ?a' = ?a;\n   ?a' \\<le> ?i; ?a' < card ?I + 1\\<rbrakk>\n  \\<Longrightarrow> pick (insert ?a ?I) ?i < pick ?I ?i\n\ngoal (1 subgoal):\n 1. a < (LEAST aa. aa \\<in> I)", "by fastforce"], ["proof (state)\nthis:\n  a < (LEAST aa. aa \\<in> I)\n\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow> pick (insert a I) (Suc i) = pick I i\n 2. i \\<noteq> 0 \\<Longrightarrow> pick (insert a I) (Suc i) = pick I i", "have Least_rw: \"(LEAST aa. aa = a \\<or> aa \\<in> I) = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (LEAST aa. aa = a \\<or> aa \\<in> I) = a", "by (rule Least_equality, insert a_notin_I, auto,\n        metis a_LEAST le_less_trans nat_le_linear not_less_Least)"], ["proof (state)\nthis:\n  (LEAST aa. aa = a \\<or> aa \\<in> I) = a\n\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow> pick (insert a I) (Suc i) = pick I i\n 2. i \\<noteq> 0 \\<Longrightarrow> pick (insert a I) (Suc i) = pick I i", "let ?P = \"\\<lambda>aa. (aa = a \\<or> aa \\<in> I) \\<and> (LEAST aa. aa = a \\<or> aa \\<in> I) < aa\""], ["proof (state)\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow> pick (insert a I) (Suc i) = pick I i\n 2. i \\<noteq> 0 \\<Longrightarrow> pick (insert a I) (Suc i) = pick I i", "let ?Q = \"\\<lambda>aa. aa \\<in> I\""], ["proof (state)\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow> pick (insert a I) (Suc i) = pick I i\n 2. i \\<noteq> 0 \\<Longrightarrow> pick (insert a I) (Suc i) = pick I i", "have \"?P = ?Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>aa.\n        (aa = a \\<or> aa \\<in> I) \\<and>\n        (LEAST aa. aa = a \\<or> aa \\<in> I) < aa) =\n    (\\<lambda>aa. aa \\<in> I)", "unfolding Least_rw fun_eq_iff"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x. ((x = a \\<or> x \\<in> I) \\<and> a < x) = (x \\<in> I)", "by (auto, metis a_LEAST le_less_trans not_le not_less_Least)"], ["proof (state)\nthis:\n  (\\<lambda>aa.\n      (aa = a \\<or> aa \\<in> I) \\<and>\n      (LEAST aa. aa = a \\<or> aa \\<in> I) < aa) =\n  (\\<lambda>aa. aa \\<in> I)\n\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow> pick (insert a I) (Suc i) = pick I i\n 2. i \\<noteq> 0 \\<Longrightarrow> pick (insert a I) (Suc i) = pick I i", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<lambda>aa.\n      (aa = a \\<or> aa \\<in> I) \\<and>\n      (LEAST aa. aa = a \\<or> aa \\<in> I) < aa) =\n  (\\<lambda>aa. aa \\<in> I)\n\ngoal (1 subgoal):\n 1. pick (insert a I) (Suc i) = pick I i", "using True"], ["proof (prove)\nusing this:\n  (\\<lambda>aa.\n      (aa = a \\<or> aa \\<in> I) \\<and>\n      (LEAST aa. aa = a \\<or> aa \\<in> I) < aa) =\n  (\\<lambda>aa. aa \\<in> I)\n  i = 0\n\ngoal (1 subgoal):\n 1. pick (insert a I) (Suc i) = pick I i", "by auto"], ["proof (state)\nthis:\n  pick (insert a I) (Suc i) = pick I i\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> pick (insert a I) (Suc i) = pick I i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> pick (insert a I) (Suc i) = pick I i", "case False"], ["proof (state)\nthis:\n  i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> pick (insert a I) (Suc i) = pick I i", "have finI: \"finite I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite I", "using i2 card.infinite"], ["proof (prove)\nusing this:\n  i < card I\n  infinite ?A \\<Longrightarrow> card ?A = 0\n\ngoal (1 subgoal):\n 1. finite I", "by force"], ["proof (state)\nthis:\n  finite I\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> pick (insert a I) (Suc i) = pick I i", "have index_a'1: \"index (sorted_list_of_set (insert a I)) a = a'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. index (sorted_list_of_set (insert a I)) a = a'", "using pick_index"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<in> ?I; ?a' < card ?I\\<rbrakk>\n  \\<Longrightarrow> (pick ?I ?a' = ?a) =\n                    (index (sorted_list_of_set ?I) ?a = ?a')\n\ngoal (1 subgoal):\n 1. index (sorted_list_of_set (insert a I)) a = a'", "using a'_card a_def a_notin_I finI"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<in> ?I; ?a' < card ?I\\<rbrakk>\n  \\<Longrightarrow> (pick ?I ?a' = ?a) =\n                    (index (sorted_list_of_set ?I) ?a = ?a')\n  a' < card I + 1\n  pick (insert a I) a' = a\n  a \\<notin> I\n  finite I\n\ngoal (1 subgoal):\n 1. index (sorted_list_of_set (insert a I)) a = a'", "by auto"], ["proof (state)\nthis:\n  index (sorted_list_of_set (insert a I)) a = a'\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> pick (insert a I) (Suc i) = pick I i", "hence index_a': \"index (insort a (sorted_list_of_set I)) a = a'\""], ["proof (prove)\nusing this:\n  index (sorted_list_of_set (insert a I)) a = a'\n\ngoal (1 subgoal):\n 1. index (insort a (sorted_list_of_set I)) a = a'", "by (simp add: a_notin_I finI)"], ["proof (state)\nthis:\n  index (insort a (sorted_list_of_set I)) a = a'\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> pick (insert a I) (Suc i) = pick I i", "have i1_length: \"i < length (sorted_list_of_set I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < length (sorted_list_of_set I)", "using i2"], ["proof (prove)\nusing this:\n  i < card I\n\ngoal (1 subgoal):\n 1. i < length (sorted_list_of_set I)", "by (metis distinct_card distinct_sorted_list_of_set finI set_sorted_list_of_set)"], ["proof (state)\nthis:\n  i < length (sorted_list_of_set I)\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> pick (insert a I) (Suc i) = pick I i", "have 1: \"pick (insert a I) (Suc i) = sorted_list_of_set (insert a I) ! (Suc i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pick (insert a I) (Suc i) = sorted_list_of_set (insert a I) ! Suc i", "proof (rule sorted_list_of_set_eq_pick[symmetric])"], ["proof (state)\ngoal (1 subgoal):\n 1. Suc i < length (sorted_list_of_set (insert a I))", "have \"finite (insert a I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (insert a I)", "using card.infinite i2"], ["proof (prove)\nusing this:\n  infinite ?A \\<Longrightarrow> card ?A = 0\n  i < card I\n\ngoal (1 subgoal):\n 1. finite (insert a I)", "by force"], ["proof (state)\nthis:\n  finite (insert a I)\n\ngoal (1 subgoal):\n 1. Suc i < length (sorted_list_of_set (insert a I))", "thus \"Suc i < length (sorted_list_of_set (insert a I))\""], ["proof (prove)\nusing this:\n  finite (insert a I)\n\ngoal (1 subgoal):\n 1. Suc i < length (sorted_list_of_set (insert a I))", "by (metis Suc_mono a_notin_I card_insert_disjoint distinct_card distinct_sorted_list_of_set\n          finI i2 set_sorted_list_of_set)"], ["proof (state)\nthis:\n  Suc i < length (sorted_list_of_set (insert a I))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pick (insert a I) (Suc i) = sorted_list_of_set (insert a I) ! Suc i\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> pick (insert a I) (Suc i) = pick I i", "also"], ["proof (state)\nthis:\n  pick (insert a I) (Suc i) = sorted_list_of_set (insert a I) ! Suc i\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> pick (insert a I) (Suc i) = pick I i", "have 2: \"... = insort a (sorted_list_of_set I) ! Suc i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_list_of_set (insert a I) ! Suc i =\n    insort a (sorted_list_of_set I) ! Suc i", "using sorted_list_of_set.insert"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite ?A; ?x \\<notin> ?A\\<rbrakk>\n  \\<Longrightarrow> sorted_list_of_set (insert ?x ?A) =\n                    insort ?x (sorted_list_of_set ?A)\n\ngoal (1 subgoal):\n 1. sorted_list_of_set (insert a I) ! Suc i =\n    insort a (sorted_list_of_set I) ! Suc i", "by (metis a_notin_I card.infinite i2 not_less0)"], ["proof (state)\nthis:\n  sorted_list_of_set (insert a I) ! Suc i =\n  insort a (sorted_list_of_set I) ! Suc i\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> pick (insert a I) (Suc i) = pick I i", "also"], ["proof (state)\nthis:\n  sorted_list_of_set (insert a I) ! Suc i =\n  insort a (sorted_list_of_set I) ! Suc i\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> pick (insert a I) (Suc i) = pick I i", "have \"... = pick I i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insort a (sorted_list_of_set I) ! Suc i = pick I i", "proof (cases \"i = a'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i = a' \\<Longrightarrow>\n    insort a (sorted_list_of_set I) ! Suc i = pick I i\n 2. i \\<noteq> a' \\<Longrightarrow>\n    insort a (sorted_list_of_set I) ! Suc i = pick I i", "case True"], ["proof (state)\nthis:\n  i = a'\n\ngoal (2 subgoals):\n 1. i = a' \\<Longrightarrow>\n    insort a (sorted_list_of_set I) ! Suc i = pick I i\n 2. i \\<noteq> a' \\<Longrightarrow>\n    insort a (sorted_list_of_set I) ! Suc i = pick I i", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. insort a (sorted_list_of_set I) ! Suc i = pick I i", "by (metis True a_notin_I finI i1_length index_a' insort_nth2 le_refl list.size(3) not_less0\n          set_sorted_list_of_set sorted_list_of_set(2) sorted_list_of_set_eq_pick)"], ["proof (state)\nthis:\n  insort a (sorted_list_of_set I) ! Suc i = pick I i\n\ngoal (1 subgoal):\n 1. i \\<noteq> a' \\<Longrightarrow>\n    insort a (sorted_list_of_set I) ! Suc i = pick I i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<noteq> a' \\<Longrightarrow>\n    insort a (sorted_list_of_set I) ! Suc i = pick I i", "case False"], ["proof (state)\nthis:\n  i \\<noteq> a'\n\ngoal (1 subgoal):\n 1. i \\<noteq> a' \\<Longrightarrow>\n    insort a (sorted_list_of_set I) ! Suc i = pick I i", "have \"insort a (sorted_list_of_set I) ! Suc i = (sorted_list_of_set I) ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insort a (sorted_list_of_set I) ! Suc i = sorted_list_of_set I ! i", "by (rule insort_nth2, insert i1_length False ia' index_a', auto simp add: a_notin_I finI)"], ["proof (state)\nthis:\n  insort a (sorted_list_of_set I) ! Suc i = sorted_list_of_set I ! i\n\ngoal (1 subgoal):\n 1. i \\<noteq> a' \\<Longrightarrow>\n    insort a (sorted_list_of_set I) ! Suc i = pick I i", "also"], ["proof (state)\nthis:\n  insort a (sorted_list_of_set I) ! Suc i = sorted_list_of_set I ! i\n\ngoal (1 subgoal):\n 1. i \\<noteq> a' \\<Longrightarrow>\n    insort a (sorted_list_of_set I) ! Suc i = pick I i", "have \"... = pick I i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_list_of_set I ! i = pick I i", "by (rule sorted_list_of_set_eq_pick[OF i1_length])"], ["proof (state)\nthis:\n  sorted_list_of_set I ! i = pick I i\n\ngoal (1 subgoal):\n 1. i \\<noteq> a' \\<Longrightarrow>\n    insort a (sorted_list_of_set I) ! Suc i = pick I i", "finally"], ["proof (chain)\npicking this:\n  insort a (sorted_list_of_set I) ! Suc i = pick I i", "show ?thesis"], ["proof (prove)\nusing this:\n  insort a (sorted_list_of_set I) ! Suc i = pick I i\n\ngoal (1 subgoal):\n 1. insort a (sorted_list_of_set I) ! Suc i = pick I i", "."], ["proof (state)\nthis:\n  insort a (sorted_list_of_set I) ! Suc i = pick I i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  insort a (sorted_list_of_set I) ! Suc i = pick I i\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> pick (insert a I) (Suc i) = pick I i", "finally"], ["proof (chain)\npicking this:\n  pick (insert a I) (Suc i) = pick I i", "show ?thesis"], ["proof (prove)\nusing this:\n  pick (insert a I) (Suc i) = pick I i\n\ngoal (1 subgoal):\n 1. pick (insert a I) (Suc i) = pick I i", "."], ["proof (state)\nthis:\n  pick (insert a I) (Suc i) = pick I i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pick_insert_index:\n  assumes Ik: \"card I = k\"\n  and a_notin_I: \"a \\<notin> I\"\n  and ik: \"i < k\"\n  and a_def: \"pick (insert a I) a' = a\"\n  and a'k: \"a' < card I + 1\"\nshows \"pick (insert a I) (insert_index a' i) = pick I i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pick (insert a I) (insert_index a' i) = pick I i", "proof (cases \"i<a'\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i < a' \\<Longrightarrow>\n    pick (insert a I) (insert_index a' i) = pick I i\n 2. \\<not> i < a' \\<Longrightarrow>\n    pick (insert a I) (insert_index a' i) = pick I i", "case True"], ["proof (state)\nthis:\n  i < a'\n\ngoal (2 subgoals):\n 1. i < a' \\<Longrightarrow>\n    pick (insert a I) (insert_index a' i) = pick I i\n 2. \\<not> i < a' \\<Longrightarrow>\n    pick (insert a I) (insert_index a' i) = pick I i", "have \"pick (insert a I) i = pick I i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pick (insert a I) i = pick I i", "by (rule pick_insert[OF a_notin_I _ a_def _ a'k], auto simp add: Ik ik True)"], ["proof (state)\nthis:\n  pick (insert a I) i = pick I i\n\ngoal (2 subgoals):\n 1. i < a' \\<Longrightarrow>\n    pick (insert a I) (insert_index a' i) = pick I i\n 2. \\<not> i < a' \\<Longrightarrow>\n    pick (insert a I) (insert_index a' i) = pick I i", "thus ?thesis"], ["proof (prove)\nusing this:\n  pick (insert a I) i = pick I i\n\ngoal (1 subgoal):\n 1. pick (insert a I) (insert_index a' i) = pick I i", "using True"], ["proof (prove)\nusing this:\n  pick (insert a I) i = pick I i\n  i < a'\n\ngoal (1 subgoal):\n 1. pick (insert a I) (insert_index a' i) = pick I i", "unfolding insert_index_def"], ["proof (prove)\nusing this:\n  pick (insert a I) i = pick I i\n  i < a'\n\ngoal (1 subgoal):\n 1. pick (insert a I) (if i < a' then i else Suc i) = pick I i", "by auto"], ["proof (state)\nthis:\n  pick (insert a I) (insert_index a' i) = pick I i\n\ngoal (1 subgoal):\n 1. \\<not> i < a' \\<Longrightarrow>\n    pick (insert a I) (insert_index a' i) = pick I i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> i < a' \\<Longrightarrow>\n    pick (insert a I) (insert_index a' i) = pick I i", "case False"], ["proof (state)\nthis:\n  \\<not> i < a'\n\ngoal (1 subgoal):\n 1. \\<not> i < a' \\<Longrightarrow>\n    pick (insert a I) (insert_index a' i) = pick I i", "note i_ge_a' = False"], ["proof (state)\nthis:\n  \\<not> i < a'\n\ngoal (1 subgoal):\n 1. \\<not> i < a' \\<Longrightarrow>\n    pick (insert a I) (insert_index a' i) = pick I i", "have fin_aI: \"finite (insert a I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (insert a I)", "using Ik finite_insert ik"], ["proof (prove)\nusing this:\n  card I = k\n  finite (insert ?a ?A) = finite ?A\n  i < k\n\ngoal (1 subgoal):\n 1. finite (insert a I)", "by fastforce"], ["proof (state)\nthis:\n  finite (insert a I)\n\ngoal (1 subgoal):\n 1. \\<not> i < a' \\<Longrightarrow>\n    pick (insert a I) (insert_index a' i) = pick I i", "let ?P = \"\\<lambda>aa. (aa = a \\<or> aa \\<in> I) \\<and> pick (insert a I) i < aa\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> i < a' \\<Longrightarrow>\n    pick (insert a I) (insert_index a' i) = pick I i", "let ?Q = \"\\<lambda>aa. aa \\<in> I \\<and> pick (insert a I) i < aa\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> i < a' \\<Longrightarrow>\n    pick (insert a I) (insert_index a' i) = pick I i", "have \"?P = ?Q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>aa.\n        (aa = a \\<or> aa \\<in> I) \\<and> pick (insert a I) i < aa) =\n    (\\<lambda>aa. aa \\<in> I \\<and> pick (insert a I) i < aa)", "using a_notin_I"], ["proof (prove)\nusing this:\n  a \\<notin> I\n\ngoal (1 subgoal):\n 1. (\\<lambda>aa.\n        (aa = a \\<or> aa \\<in> I) \\<and> pick (insert a I) i < aa) =\n    (\\<lambda>aa. aa \\<in> I \\<and> pick (insert a I) i < aa)", "unfolding fun_eq_iff"], ["proof (prove)\nusing this:\n  a \\<notin> I\n\ngoal (1 subgoal):\n 1. \\<forall>x.\n       ((x = a \\<or> x \\<in> I) \\<and> pick (insert a I) i < x) =\n       (x \\<in> I \\<and> pick (insert a I) i < x)", "by (auto, metis False Ik a_def card.infinite card_insert_disjoint ik less_SucI\n        linorder_neqE_nat not_less_zero order.asym pick_mono_le)"], ["proof (state)\nthis:\n  (\\<lambda>aa. (aa = a \\<or> aa \\<in> I) \\<and> pick (insert a I) i < aa) =\n  (\\<lambda>aa. aa \\<in> I \\<and> pick (insert a I) i < aa)\n\ngoal (1 subgoal):\n 1. \\<not> i < a' \\<Longrightarrow>\n    pick (insert a I) (insert_index a' i) = pick I i", "hence \"Least ?P = Least ?Q\""], ["proof (prove)\nusing this:\n  (\\<lambda>aa. (aa = a \\<or> aa \\<in> I) \\<and> pick (insert a I) i < aa) =\n  (\\<lambda>aa. aa \\<in> I \\<and> pick (insert a I) i < aa)\n\ngoal (1 subgoal):\n 1. (LEAST aa. (aa = a \\<or> aa \\<in> I) \\<and> pick (insert a I) i < aa) =\n    (LEAST aa. aa \\<in> I \\<and> pick (insert a I) i < aa)", "by simp"], ["proof (state)\nthis:\n  (LEAST aa. (aa = a \\<or> aa \\<in> I) \\<and> pick (insert a I) i < aa) =\n  (LEAST aa. aa \\<in> I \\<and> pick (insert a I) i < aa)\n\ngoal (1 subgoal):\n 1. \\<not> i < a' \\<Longrightarrow>\n    pick (insert a I) (insert_index a' i) = pick I i", "also"], ["proof (state)\nthis:\n  (LEAST aa. (aa = a \\<or> aa \\<in> I) \\<and> pick (insert a I) i < aa) =\n  (LEAST aa. aa \\<in> I \\<and> pick (insert a I) i < aa)\n\ngoal (1 subgoal):\n 1. \\<not> i < a' \\<Longrightarrow>\n    pick (insert a I) (insert_index a' i) = pick I i", "have \"... = pick I i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (LEAST aa. aa \\<in> I \\<and> pick (insert a I) i < aa) = pick I i", "proof (rule Least_equality, rule conjI)"], ["proof (state)\ngoal (3 subgoals):\n 1. pick I i \\<in> I\n 2. pick (insert a I) i < pick I i\n 3. \\<And>y.\n       y \\<in> I \\<and> pick (insert a I) i < y \\<Longrightarrow>\n       pick I i \\<le> y", "show \"pick I i \\<in> I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pick I i \\<in> I", "by (simp add: Ik ik pick_in_set_le)"], ["proof (state)\nthis:\n  pick I i \\<in> I\n\ngoal (2 subgoals):\n 1. pick (insert a I) i < pick I i\n 2. \\<And>y.\n       y \\<in> I \\<and> pick (insert a I) i < y \\<Longrightarrow>\n       pick I i \\<le> y", "show \"pick (insert a I) i < pick I i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pick (insert a I) i < pick I i", "by (rule pick_insert2[OF a_notin_I _ a_def _ a'k], insert False, auto simp add: Ik ik)"], ["proof (state)\nthis:\n  pick (insert a I) i < pick I i\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> I \\<and> pick (insert a I) i < y \\<Longrightarrow>\n       pick I i \\<le> y", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> I \\<and> pick (insert a I) i < y \\<Longrightarrow>\n       pick I i \\<le> y", "assume y: \"y \\<in> I \\<and> pick (insert a I) i < y\""], ["proof (state)\nthis:\n  y \\<in> I \\<and> pick (insert a I) i < y\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> I \\<and> pick (insert a I) i < y \\<Longrightarrow>\n       pick I i \\<le> y", "let ?xs = \"sorted_list_of_set (insert a I)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> I \\<and> pick (insert a I) i < y \\<Longrightarrow>\n       pick I i \\<le> y", "have \"y \\<in> set ?xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<in> set (sorted_list_of_set (insert a I))", "using y"], ["proof (prove)\nusing this:\n  y \\<in> I \\<and> pick (insert a I) i < y\n\ngoal (1 subgoal):\n 1. y \\<in> set (sorted_list_of_set (insert a I))", "by (metis fin_aI insertI2 set_sorted_list_of_set y)"], ["proof (state)\nthis:\n  y \\<in> set (sorted_list_of_set (insert a I))\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> I \\<and> pick (insert a I) i < y \\<Longrightarrow>\n       pick I i \\<le> y", "from this"], ["proof (chain)\npicking this:\n  y \\<in> set (sorted_list_of_set (insert a I))", "obtain j where xs_j_y: \"?xs ! j = y\" and j: \"j < length ?xs\""], ["proof (prove)\nusing this:\n  y \\<in> set (sorted_list_of_set (insert a I))\n\ngoal (1 subgoal):\n 1. (\\<And>j.\n        \\<lbrakk>sorted_list_of_set (insert a I) ! j = y;\n         j < length (sorted_list_of_set (insert a I))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using in_set_conv_nth"], ["proof (prove)\nusing this:\n  y \\<in> set (sorted_list_of_set (insert a I))\n  (?x \\<in> set ?xs) = (\\<exists>i<length ?xs. ?xs ! i = ?x)\n\ngoal (1 subgoal):\n 1. (\\<And>j.\n        \\<lbrakk>sorted_list_of_set (insert a I) ! j = y;\n         j < length (sorted_list_of_set (insert a I))\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  sorted_list_of_set (insert a I) ! j = y\n  j < length (sorted_list_of_set (insert a I))\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> I \\<and> pick (insert a I) i < y \\<Longrightarrow>\n       pick I i \\<le> y", "have ij: \"i<j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < j", "by (metis (no_types, lifting) Ik a_notin_I card.infinite card_insert_disjoint ik j less_SucI\n          linorder_neqE_nat not_less_zero order.asym pick_mono_le sorted_list_of_set_eq_pick xs_j_y y)"], ["proof (state)\nthis:\n  i < j\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> I \\<and> pick (insert a I) i < y \\<Longrightarrow>\n       pick I i \\<le> y", "have \"pick I i = pick (insert a I) (Suc i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pick I i = pick (insert a I) (Suc i)", "by (rule pick_insert3[symmetric, OF a_notin_I _ a_def _ a'k], insert False Ik ik, auto)"], ["proof (state)\nthis:\n  pick I i = pick (insert a I) (Suc i)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> I \\<and> pick (insert a I) i < y \\<Longrightarrow>\n       pick I i \\<le> y", "also"], ["proof (state)\nthis:\n  pick I i = pick (insert a I) (Suc i)\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> I \\<and> pick (insert a I) i < y \\<Longrightarrow>\n       pick I i \\<le> y", "have \"... \\<le> pick (insert a I) j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pick (insert a I) (Suc i) \\<le> pick (insert a I) j", "by (metis Ik Suc_lessI card.infinite distinct_card distinct_sorted_list_of_set eq_iff\n          finite_insert ij ik j less_imp_le_nat not_less_zero pick_mono_le set_sorted_list_of_set)"], ["proof (state)\nthis:\n  pick (insert a I) (Suc i) \\<le> pick (insert a I) j\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> I \\<and> pick (insert a I) i < y \\<Longrightarrow>\n       pick I i \\<le> y", "also"], ["proof (state)\nthis:\n  pick (insert a I) (Suc i) \\<le> pick (insert a I) j\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> I \\<and> pick (insert a I) i < y \\<Longrightarrow>\n       pick I i \\<le> y", "have \"... = ?xs ! j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pick (insert a I) j = sorted_list_of_set (insert a I) ! j", "by (rule sorted_list_of_set_eq_pick[symmetric, OF j])"], ["proof (state)\nthis:\n  pick (insert a I) j = sorted_list_of_set (insert a I) ! j\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> I \\<and> pick (insert a I) i < y \\<Longrightarrow>\n       pick I i \\<le> y", "also"], ["proof (state)\nthis:\n  pick (insert a I) j = sorted_list_of_set (insert a I) ! j\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> I \\<and> pick (insert a I) i < y \\<Longrightarrow>\n       pick I i \\<le> y", "have \"... = y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_list_of_set (insert a I) ! j = y", "by (rule xs_j_y)"], ["proof (state)\nthis:\n  sorted_list_of_set (insert a I) ! j = y\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> I \\<and> pick (insert a I) i < y \\<Longrightarrow>\n       pick I i \\<le> y", "finally"], ["proof (chain)\npicking this:\n  pick I i \\<le> y", "show \"pick I i \\<le> y\""], ["proof (prove)\nusing this:\n  pick I i \\<le> y\n\ngoal (1 subgoal):\n 1. pick I i \\<le> y", "."], ["proof (state)\nthis:\n  pick I i \\<le> y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (LEAST aa. aa \\<in> I \\<and> pick (insert a I) i < aa) = pick I i\n\ngoal (1 subgoal):\n 1. \\<not> i < a' \\<Longrightarrow>\n    pick (insert a I) (insert_index a' i) = pick I i", "finally"], ["proof (chain)\npicking this:\n  (LEAST aa. (aa = a \\<or> aa \\<in> I) \\<and> pick (insert a I) i < aa) =\n  pick I i", "show ?thesis"], ["proof (prove)\nusing this:\n  (LEAST aa. (aa = a \\<or> aa \\<in> I) \\<and> pick (insert a I) i < aa) =\n  pick I i\n\ngoal (1 subgoal):\n 1. pick (insert a I) (insert_index a' i) = pick I i", "unfolding insert_index_def"], ["proof (prove)\nusing this:\n  (LEAST aa. (aa = a \\<or> aa \\<in> I) \\<and> pick (insert a I) i < aa) =\n  pick I i\n\ngoal (1 subgoal):\n 1. pick (insert a I) (if i < a' then i else Suc i) = pick I i", "using False"], ["proof (prove)\nusing this:\n  (LEAST aa. (aa = a \\<or> aa \\<in> I) \\<and> pick (insert a I) i < aa) =\n  pick I i\n  \\<not> i < a'\n\ngoal (1 subgoal):\n 1. pick (insert a I) (if i < a' then i else Suc i) = pick I i", "by auto"], ["proof (state)\nthis:\n  pick (insert a I) (insert_index a' i) = pick I i\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection\\<open>Start of the proof\\<close>"], ["", "definition \"strict_from_inj n f = (\\<lambda>i. if i\\<in>{0..<n} then (sorted_list_of_set (f`{0..<n})) ! i else i)\""], ["", "lemma strict_strict_from_inj:\n  fixes f::\"nat \\<Rightarrow> nat\"\n  assumes \"inj_on f {0..<n}\" shows \"strict_mono_on (strict_from_inj n f) {0..<n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strict_mono_on (strict_from_inj n f) {0..<n}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. strict_mono_on (strict_from_inj n f) {0..<n}", "let ?I=\"f`{0..<n}\""], ["proof (state)\ngoal (1 subgoal):\n 1. strict_mono_on (strict_from_inj n f) {0..<n}", "have \"strict_from_inj n f x < strict_from_inj n f y\"\n    if xy: \"x < y\" and x: \"x \\<in> {0..<n}\" and y: \"y \\<in> {0..<n}\" for x y"], ["proof (prove)\ngoal (1 subgoal):\n 1. strict_from_inj n f x < strict_from_inj n f y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. strict_from_inj n f x < strict_from_inj n f y", "let ?xs = \"(sorted_list_of_set ?I)\""], ["proof (state)\ngoal (1 subgoal):\n 1. strict_from_inj n f x < strict_from_inj n f y", "have sorted_xs: \"sorted ?xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted (sorted_list_of_set (f ` {0..<n}))", "by (rule sorted_sorted_list_of_set)"], ["proof (state)\nthis:\n  sorted (sorted_list_of_set (f ` {0..<n}))\n\ngoal (1 subgoal):\n 1. strict_from_inj n f x < strict_from_inj n f y", "have \"strict_from_inj n f x = (sorted_list_of_set ?I) ! x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strict_from_inj n f x = sorted_list_of_set (f ` {0..<n}) ! x", "unfolding strict_from_inj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if x \\<in> {0..<n} then sorted_list_of_set (f ` {0..<n}) ! x else x) =\n    sorted_list_of_set (f ` {0..<n}) ! x", "using x"], ["proof (prove)\nusing this:\n  x \\<in> {0..<n}\n\ngoal (1 subgoal):\n 1. (if x \\<in> {0..<n} then sorted_list_of_set (f ` {0..<n}) ! x else x) =\n    sorted_list_of_set (f ` {0..<n}) ! x", "by auto"], ["proof (state)\nthis:\n  strict_from_inj n f x = sorted_list_of_set (f ` {0..<n}) ! x\n\ngoal (1 subgoal):\n 1. strict_from_inj n f x < strict_from_inj n f y", "also"], ["proof (state)\nthis:\n  strict_from_inj n f x = sorted_list_of_set (f ` {0..<n}) ! x\n\ngoal (1 subgoal):\n 1. strict_from_inj n f x < strict_from_inj n f y", "have \"... < (sorted_list_of_set ?I) ! y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_list_of_set (f ` {0..<n}) ! x\n    < sorted_list_of_set (f ` {0..<n}) ! y", "proof (rule sorted_nth_strict_mono; clarsimp?)"], ["proof (state)\ngoal (2 subgoals):\n 1. x < y\n 2. y < card (f ` {0..<n})", "show \"y < card (f ` {0..<n})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y < card (f ` {0..<n})", "by (metis assms atLeastLessThan_iff card_atLeastLessThan card_image diff_zero y)"], ["proof (state)\nthis:\n  y < card (f ` {0..<n})\n\ngoal (1 subgoal):\n 1. x < y", "qed (simp add: xy)"], ["proof (state)\nthis:\n  sorted_list_of_set (f ` {0..<n}) ! x\n  < sorted_list_of_set (f ` {0..<n}) ! y\n\ngoal (1 subgoal):\n 1. strict_from_inj n f x < strict_from_inj n f y", "also"], ["proof (state)\nthis:\n  sorted_list_of_set (f ` {0..<n}) ! x\n  < sorted_list_of_set (f ` {0..<n}) ! y\n\ngoal (1 subgoal):\n 1. strict_from_inj n f x < strict_from_inj n f y", "have \"... = strict_from_inj n f y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_list_of_set (f ` {0..<n}) ! y = strict_from_inj n f y", "using y"], ["proof (prove)\nusing this:\n  y \\<in> {0..<n}\n\ngoal (1 subgoal):\n 1. sorted_list_of_set (f ` {0..<n}) ! y = strict_from_inj n f y", "unfolding strict_from_inj_def"], ["proof (prove)\nusing this:\n  y \\<in> {0..<n}\n\ngoal (1 subgoal):\n 1. sorted_list_of_set (f ` {0..<n}) ! y =\n    (if y \\<in> {0..<n} then sorted_list_of_set (f ` {0..<n}) ! y else y)", "by simp"], ["proof (state)\nthis:\n  sorted_list_of_set (f ` {0..<n}) ! y = strict_from_inj n f y\n\ngoal (1 subgoal):\n 1. strict_from_inj n f x < strict_from_inj n f y", "finally"], ["proof (chain)\npicking this:\n  strict_from_inj n f x < strict_from_inj n f y", "show ?thesis"], ["proof (prove)\nusing this:\n  strict_from_inj n f x < strict_from_inj n f y\n\ngoal (1 subgoal):\n 1. strict_from_inj n f x < strict_from_inj n f y", "."], ["proof (state)\nthis:\n  strict_from_inj n f x < strict_from_inj n f y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?x < ?y; ?x \\<in> {0..<n}; ?y \\<in> {0..<n}\\<rbrakk>\n  \\<Longrightarrow> strict_from_inj n f ?x < strict_from_inj n f ?y\n\ngoal (1 subgoal):\n 1. strict_mono_on (strict_from_inj n f) {0..<n}", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x < ?y; ?x \\<in> {0..<n}; ?y \\<in> {0..<n}\\<rbrakk>\n  \\<Longrightarrow> strict_from_inj n f ?x < strict_from_inj n f ?y\n\ngoal (1 subgoal):\n 1. strict_mono_on (strict_from_inj n f) {0..<n}", "unfolding strict_mono_on_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?x < ?y; ?x \\<in> {0..<n}; ?y \\<in> {0..<n}\\<rbrakk>\n  \\<Longrightarrow> strict_from_inj n f ?x < strict_from_inj n f ?y\n\ngoal (1 subgoal):\n 1. \\<forall>r s.\n       r \\<in> {0..<n} \\<and> s \\<in> {0..<n} \\<and> r < s \\<longrightarrow>\n       strict_from_inj n f r < strict_from_inj n f s", "by simp"], ["proof (state)\nthis:\n  strict_mono_on (strict_from_inj n f) {0..<n}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma strict_from_inj_image':\n  assumes f: \"inj_on f {0..<n}\"\n  shows \"strict_from_inj n f ` {0..<n} = f`{0..<n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strict_from_inj n f ` {0..<n} = f ` {0..<n}", "proof (auto)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa < n \\<Longrightarrow> strict_from_inj n f xa \\<in> f ` {0..<n}\n 2. \\<And>xa.\n       xa < n \\<Longrightarrow> f xa \\<in> strict_from_inj n f ` {0..<n}", "let ?I = \"f ` {0..<n}\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa < n \\<Longrightarrow> strict_from_inj n f xa \\<in> f ` {0..<n}\n 2. \\<And>xa.\n       xa < n \\<Longrightarrow> f xa \\<in> strict_from_inj n f ` {0..<n}", "fix xa"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa < n \\<Longrightarrow> strict_from_inj n f xa \\<in> f ` {0..<n}\n 2. \\<And>xa.\n       xa < n \\<Longrightarrow> f xa \\<in> strict_from_inj n f ` {0..<n}", "assume xa: \"xa < n\""], ["proof (state)\nthis:\n  xa < n\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa < n \\<Longrightarrow> strict_from_inj n f xa \\<in> f ` {0..<n}\n 2. \\<And>xa.\n       xa < n \\<Longrightarrow> f xa \\<in> strict_from_inj n f ` {0..<n}", "have inj_on: \"inj_on f {0..<n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on f {0..<n}", "using f"], ["proof (prove)\nusing this:\n  inj_on f {0..<n}\n\ngoal (1 subgoal):\n 1. inj_on f {0..<n}", "by auto"], ["proof (state)\nthis:\n  inj_on f {0..<n}\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa < n \\<Longrightarrow> strict_from_inj n f xa \\<in> f ` {0..<n}\n 2. \\<And>xa.\n       xa < n \\<Longrightarrow> f xa \\<in> strict_from_inj n f ` {0..<n}", "have length_I: \"length (sorted_list_of_set ?I) = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length (sorted_list_of_set (f ` {0..<n})) = n", "by (metis card_atLeastLessThan card_image diff_zero distinct_card distinct_sorted_list_of_set\n        finite_atLeastLessThan finite_imageI inj_on sorted_list_of_set(1))"], ["proof (state)\nthis:\n  length (sorted_list_of_set (f ` {0..<n})) = n\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa < n \\<Longrightarrow> strict_from_inj n f xa \\<in> f ` {0..<n}\n 2. \\<And>xa.\n       xa < n \\<Longrightarrow> f xa \\<in> strict_from_inj n f ` {0..<n}", "have \"strict_from_inj n f xa = sorted_list_of_set ?I ! xa\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strict_from_inj n f xa = sorted_list_of_set (f ` {0..<n}) ! xa", "using xa"], ["proof (prove)\nusing this:\n  xa < n\n\ngoal (1 subgoal):\n 1. strict_from_inj n f xa = sorted_list_of_set (f ` {0..<n}) ! xa", "unfolding strict_from_inj_def"], ["proof (prove)\nusing this:\n  xa < n\n\ngoal (1 subgoal):\n 1. (if xa \\<in> {0..<n} then sorted_list_of_set (f ` {0..<n}) ! xa\n     else xa) =\n    sorted_list_of_set (f ` {0..<n}) ! xa", "by auto"], ["proof (state)\nthis:\n  strict_from_inj n f xa = sorted_list_of_set (f ` {0..<n}) ! xa\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa < n \\<Longrightarrow> strict_from_inj n f xa \\<in> f ` {0..<n}\n 2. \\<And>xa.\n       xa < n \\<Longrightarrow> f xa \\<in> strict_from_inj n f ` {0..<n}", "also"], ["proof (state)\nthis:\n  strict_from_inj n f xa = sorted_list_of_set (f ` {0..<n}) ! xa\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa < n \\<Longrightarrow> strict_from_inj n f xa \\<in> f ` {0..<n}\n 2. \\<And>xa.\n       xa < n \\<Longrightarrow> f xa \\<in> strict_from_inj n f ` {0..<n}", "have \"... = pick ?I xa\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_list_of_set (f ` {0..<n}) ! xa = pick (f ` {0..<n}) xa", "by (rule sorted_list_of_set_eq_pick, unfold length_I, auto simp add: xa)"], ["proof (state)\nthis:\n  sorted_list_of_set (f ` {0..<n}) ! xa = pick (f ` {0..<n}) xa\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa < n \\<Longrightarrow> strict_from_inj n f xa \\<in> f ` {0..<n}\n 2. \\<And>xa.\n       xa < n \\<Longrightarrow> f xa \\<in> strict_from_inj n f ` {0..<n}", "also"], ["proof (state)\nthis:\n  sorted_list_of_set (f ` {0..<n}) ! xa = pick (f ` {0..<n}) xa\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa < n \\<Longrightarrow> strict_from_inj n f xa \\<in> f ` {0..<n}\n 2. \\<And>xa.\n       xa < n \\<Longrightarrow> f xa \\<in> strict_from_inj n f ` {0..<n}", "have \"... \\<in> f ` {0..<n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pick (f ` {0..<n}) xa \\<in> f ` {0..<n}", "by (rule pick_in_set_le, simp add: card_image inj_on xa)"], ["proof (state)\nthis:\n  pick (f ` {0..<n}) xa \\<in> f ` {0..<n}\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa < n \\<Longrightarrow> strict_from_inj n f xa \\<in> f ` {0..<n}\n 2. \\<And>xa.\n       xa < n \\<Longrightarrow> f xa \\<in> strict_from_inj n f ` {0..<n}", "finally"], ["proof (chain)\npicking this:\n  strict_from_inj n f xa \\<in> f ` {0..<n}", "show \"strict_from_inj n f xa \\<in> f ` {0..<n}\""], ["proof (prove)\nusing this:\n  strict_from_inj n f xa \\<in> f ` {0..<n}\n\ngoal (1 subgoal):\n 1. strict_from_inj n f xa \\<in> f ` {0..<n}", "."], ["proof (state)\nthis:\n  strict_from_inj n f xa \\<in> f ` {0..<n}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa < n \\<Longrightarrow> f xa \\<in> strict_from_inj n f ` {0..<n}", "obtain i where \"sorted_list_of_set (f`{0..<n}) ! i = f xa\" and \"i<n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>sorted_list_of_set (f ` {0..<n}) ! i = f xa; i < n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis atLeast0LessThan finite_atLeastLessThan finite_imageI imageI\n        in_set_conv_nth length_I lessThan_iff sorted_list_of_set(1) xa)"], ["proof (state)\nthis:\n  sorted_list_of_set (f ` {0..<n}) ! i = f xa\n  i < n\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa < n \\<Longrightarrow> f xa \\<in> strict_from_inj n f ` {0..<n}", "thus \"f xa \\<in> strict_from_inj n f ` {0..<n}\""], ["proof (prove)\nusing this:\n  sorted_list_of_set (f ` {0..<n}) ! i = f xa\n  i < n\n\ngoal (1 subgoal):\n 1. f xa \\<in> strict_from_inj n f ` {0..<n}", "by (metis atLeast0LessThan imageI lessThan_iff strict_from_inj_def)"], ["proof (state)\nthis:\n  f xa \\<in> strict_from_inj n f ` {0..<n}\n\ngoal:\nNo subgoals!", "qed"], ["", "definition \"Z (n::nat) (m::nat) = {(f,\\<pi>)|f \\<pi>. f \\<in> {0..<n} \\<rightarrow> {0..<m}\n  \\<and> (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)\n  \\<and> \\<pi> permutes {0..<n}}\""], ["", "lemma Z_alt_def: \"Z n m = {f. f \\<in> {0..<n} \\<rightarrow> {0..<m} \\<and> (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)} \\<times> {\\<pi>. \\<pi> permutes {0..<n}}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Z n m =\n    {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n     \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i} \\<times>\n    {\\<pi>. \\<pi> permutes {0..<n}}", "unfolding Z_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {(f, \\<pi>) |f \\<pi>.\n     f \\<in> {0..<n} \\<rightarrow> {0..<m} \\<and>\n     (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n     \\<pi> permutes {0..<n}} =\n    {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n     \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i} \\<times>\n    {\\<pi>. \\<pi> permutes {0..<n}}", "by auto"], ["", "lemma det_mul_finsum_alt:\n  assumes A: \"A \\<in> carrier_mat n m\"\n    and B: \"B \\<in> carrier_mat m n\"\n  shows \"det (A*B) = det (mat\\<^sub>r n n (\\<lambda>i. finsum_vec TYPE('a::comm_ring_1) n\n  (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v Matrix.col A k) {0..<m}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    Determinant.det\n     (mat\\<^sub>r n n\n       (\\<lambda>i.\n           finsum_vec TYPE('a) n\n            (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m}))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    Determinant.det\n     (mat\\<^sub>r n n\n       (\\<lambda>i.\n           finsum_vec TYPE('a) n\n            (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m}))", "have AT: \"A\\<^sup>T \\<in> carrier_mat m n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A\\<^sup>T \\<in> carrier_mat m n", "using A"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat n m\n\ngoal (1 subgoal):\n 1. A\\<^sup>T \\<in> carrier_mat m n", "by auto"], ["proof (state)\nthis:\n  A\\<^sup>T \\<in> carrier_mat m n\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    Determinant.det\n     (mat\\<^sub>r n n\n       (\\<lambda>i.\n           finsum_vec TYPE('a) n\n            (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m}))", "have BT: \"B\\<^sup>T \\<in> carrier_mat n m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B\\<^sup>T \\<in> carrier_mat n m", "using B"], ["proof (prove)\nusing this:\n  B \\<in> carrier_mat m n\n\ngoal (1 subgoal):\n 1. B\\<^sup>T \\<in> carrier_mat n m", "by auto"], ["proof (state)\nthis:\n  B\\<^sup>T \\<in> carrier_mat n m\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    Determinant.det\n     (mat\\<^sub>r n n\n       (\\<lambda>i.\n           finsum_vec TYPE('a) n\n            (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m}))", "let ?f = \"(\\<lambda>i. finsum_vec TYPE('a) n (\\<lambda>k. B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T k) {0..<m})\""], ["proof (state)\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    Determinant.det\n     (mat\\<^sub>r n n\n       (\\<lambda>i.\n           finsum_vec TYPE('a) n\n            (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m}))", "let ?g = \"(\\<lambda>i. finsum_vec TYPE('a) n (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v Matrix.col A k) {0..<m})\""], ["proof (state)\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    Determinant.det\n     (mat\\<^sub>r n n\n       (\\<lambda>i.\n           finsum_vec TYPE('a) n\n            (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m}))", "let ?lhs = \"mat\\<^sub>r n n ?f\""], ["proof (state)\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    Determinant.det\n     (mat\\<^sub>r n n\n       (\\<lambda>i.\n           finsum_vec TYPE('a) n\n            (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m}))", "let ?rhs = \"mat\\<^sub>r n n ?g\""], ["proof (state)\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    Determinant.det\n     (mat\\<^sub>r n n\n       (\\<lambda>i.\n           finsum_vec TYPE('a) n\n            (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m}))", "have lhs_rhs: \"?lhs = ?rhs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mat\\<^sub>r n n\n     (\\<lambda>i.\n         finsum_vec TYPE('a) n\n          (\\<lambda>k.\n              B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T k)\n          {0..<m}) =\n    mat\\<^sub>r n n\n     (\\<lambda>i.\n         finsum_vec TYPE('a) n\n          (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m})", "proof (rule eq_matI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (mat\\<^sub>r n n\n                       (\\<lambda>i.\n                           finsum_vec TYPE('a) n\n                            (\\<lambda>k.\n                                B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n                            {0..<m}));\n        j < dim_col\n             (mat\\<^sub>r n n\n               (\\<lambda>i.\n                   finsum_vec TYPE('a) n\n                    (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n                    {0..<m}))\\<rbrakk>\n       \\<Longrightarrow> mat\\<^sub>r n n\n                          (\\<lambda>i.\n                              finsum_vec TYPE('a) n\n                               (\\<lambda>k.\n                                   B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v\n                                   Matrix.row A\\<^sup>T k)\n                               {0..<m}) $$\n                         (i, j) =\n                         mat\\<^sub>r n n\n                          (\\<lambda>i.\n                              finsum_vec TYPE('a) n\n                               (\\<lambda>k.\n                                   B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n                               {0..<m}) $$\n                         (i, j)\n 2. dim_row\n     (mat\\<^sub>r n n\n       (\\<lambda>i.\n           finsum_vec TYPE('a) n\n            (\\<lambda>k.\n                B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T k)\n            {0..<m})) =\n    dim_row\n     (mat\\<^sub>r n n\n       (\\<lambda>i.\n           finsum_vec TYPE('a) n\n            (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m}))\n 3. dim_col\n     (mat\\<^sub>r n n\n       (\\<lambda>i.\n           finsum_vec TYPE('a) n\n            (\\<lambda>k.\n                B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T k)\n            {0..<m})) =\n    dim_col\n     (mat\\<^sub>r n n\n       (\\<lambda>i.\n           finsum_vec TYPE('a) n\n            (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m}))", "show \"dim_row ?lhs = dim_row ?rhs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row\n     (mat\\<^sub>r n n\n       (\\<lambda>i.\n           finsum_vec TYPE('a) n\n            (\\<lambda>k.\n                B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T k)\n            {0..<m})) =\n    dim_row\n     (mat\\<^sub>r n n\n       (\\<lambda>i.\n           finsum_vec TYPE('a) n\n            (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m}))", "by auto"], ["proof (state)\nthis:\n  dim_row\n   (mat\\<^sub>r n n\n     (\\<lambda>i.\n         finsum_vec TYPE('a) n\n          (\\<lambda>k.\n              B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T k)\n          {0..<m})) =\n  dim_row\n   (mat\\<^sub>r n n\n     (\\<lambda>i.\n         finsum_vec TYPE('a) n\n          (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m}))\n\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (mat\\<^sub>r n n\n                       (\\<lambda>i.\n                           finsum_vec TYPE('a) n\n                            (\\<lambda>k.\n                                B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n                            {0..<m}));\n        j < dim_col\n             (mat\\<^sub>r n n\n               (\\<lambda>i.\n                   finsum_vec TYPE('a) n\n                    (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n                    {0..<m}))\\<rbrakk>\n       \\<Longrightarrow> mat\\<^sub>r n n\n                          (\\<lambda>i.\n                              finsum_vec TYPE('a) n\n                               (\\<lambda>k.\n                                   B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v\n                                   Matrix.row A\\<^sup>T k)\n                               {0..<m}) $$\n                         (i, j) =\n                         mat\\<^sub>r n n\n                          (\\<lambda>i.\n                              finsum_vec TYPE('a) n\n                               (\\<lambda>k.\n                                   B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n                               {0..<m}) $$\n                         (i, j)\n 2. dim_col\n     (mat\\<^sub>r n n\n       (\\<lambda>i.\n           finsum_vec TYPE('a) n\n            (\\<lambda>k.\n                B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T k)\n            {0..<m})) =\n    dim_col\n     (mat\\<^sub>r n n\n       (\\<lambda>i.\n           finsum_vec TYPE('a) n\n            (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m}))", "show \"dim_col ?lhs = dim_col ?rhs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col\n     (mat\\<^sub>r n n\n       (\\<lambda>i.\n           finsum_vec TYPE('a) n\n            (\\<lambda>k.\n                B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T k)\n            {0..<m})) =\n    dim_col\n     (mat\\<^sub>r n n\n       (\\<lambda>i.\n           finsum_vec TYPE('a) n\n            (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m}))", "by auto"], ["proof (state)\nthis:\n  dim_col\n   (mat\\<^sub>r n n\n     (\\<lambda>i.\n         finsum_vec TYPE('a) n\n          (\\<lambda>k.\n              B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T k)\n          {0..<m})) =\n  dim_col\n   (mat\\<^sub>r n n\n     (\\<lambda>i.\n         finsum_vec TYPE('a) n\n          (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m}))\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (mat\\<^sub>r n n\n                       (\\<lambda>i.\n                           finsum_vec TYPE('a) n\n                            (\\<lambda>k.\n                                B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n                            {0..<m}));\n        j < dim_col\n             (mat\\<^sub>r n n\n               (\\<lambda>i.\n                   finsum_vec TYPE('a) n\n                    (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n                    {0..<m}))\\<rbrakk>\n       \\<Longrightarrow> mat\\<^sub>r n n\n                          (\\<lambda>i.\n                              finsum_vec TYPE('a) n\n                               (\\<lambda>k.\n                                   B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v\n                                   Matrix.row A\\<^sup>T k)\n                               {0..<m}) $$\n                         (i, j) =\n                         mat\\<^sub>r n n\n                          (\\<lambda>i.\n                              finsum_vec TYPE('a) n\n                               (\\<lambda>k.\n                                   B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n                               {0..<m}) $$\n                         (i, j)", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (mat\\<^sub>r n n\n                       (\\<lambda>i.\n                           finsum_vec TYPE('a) n\n                            (\\<lambda>k.\n                                B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n                            {0..<m}));\n        j < dim_col\n             (mat\\<^sub>r n n\n               (\\<lambda>i.\n                   finsum_vec TYPE('a) n\n                    (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n                    {0..<m}))\\<rbrakk>\n       \\<Longrightarrow> mat\\<^sub>r n n\n                          (\\<lambda>i.\n                              finsum_vec TYPE('a) n\n                               (\\<lambda>k.\n                                   B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v\n                                   Matrix.row A\\<^sup>T k)\n                               {0..<m}) $$\n                         (i, j) =\n                         mat\\<^sub>r n n\n                          (\\<lambda>i.\n                              finsum_vec TYPE('a) n\n                               (\\<lambda>k.\n                                   B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n                               {0..<m}) $$\n                         (i, j)", "assume i: \"i < dim_row ?rhs\" and j: \"j < dim_col ?rhs\""], ["proof (state)\nthis:\n  i < dim_row\n       (mat\\<^sub>r n n\n         (\\<lambda>i.\n             finsum_vec TYPE('a) n\n              (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m}))\n  j < dim_col\n       (mat\\<^sub>r n n\n         (\\<lambda>i.\n             finsum_vec TYPE('a) n\n              (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m}))\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (mat\\<^sub>r n n\n                       (\\<lambda>i.\n                           finsum_vec TYPE('a) n\n                            (\\<lambda>k.\n                                B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n                            {0..<m}));\n        j < dim_col\n             (mat\\<^sub>r n n\n               (\\<lambda>i.\n                   finsum_vec TYPE('a) n\n                    (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n                    {0..<m}))\\<rbrakk>\n       \\<Longrightarrow> mat\\<^sub>r n n\n                          (\\<lambda>i.\n                              finsum_vec TYPE('a) n\n                               (\\<lambda>k.\n                                   B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v\n                                   Matrix.row A\\<^sup>T k)\n                               {0..<m}) $$\n                         (i, j) =\n                         mat\\<^sub>r n n\n                          (\\<lambda>i.\n                              finsum_vec TYPE('a) n\n                               (\\<lambda>k.\n                                   B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n                               {0..<m}) $$\n                         (i, j)", "have j_n: \"j<n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j < n", "using j"], ["proof (prove)\nusing this:\n  j < dim_col\n       (mat\\<^sub>r n n\n         (\\<lambda>i.\n             finsum_vec TYPE('a) n\n              (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m}))\n\ngoal (1 subgoal):\n 1. j < n", "by auto"], ["proof (state)\nthis:\n  j < n\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (mat\\<^sub>r n n\n                       (\\<lambda>i.\n                           finsum_vec TYPE('a) n\n                            (\\<lambda>k.\n                                B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n                            {0..<m}));\n        j < dim_col\n             (mat\\<^sub>r n n\n               (\\<lambda>i.\n                   finsum_vec TYPE('a) n\n                    (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n                    {0..<m}))\\<rbrakk>\n       \\<Longrightarrow> mat\\<^sub>r n n\n                          (\\<lambda>i.\n                              finsum_vec TYPE('a) n\n                               (\\<lambda>k.\n                                   B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v\n                                   Matrix.row A\\<^sup>T k)\n                               {0..<m}) $$\n                         (i, j) =\n                         mat\\<^sub>r n n\n                          (\\<lambda>i.\n                              finsum_vec TYPE('a) n\n                               (\\<lambda>k.\n                                   B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n                               {0..<m}) $$\n                         (i, j)", "have \"?lhs $$ (i, j) = ?f i $v j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mat\\<^sub>r n n\n     (\\<lambda>i.\n         finsum_vec TYPE('a) n\n          (\\<lambda>k.\n              B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T k)\n          {0..<m}) $$\n    (i, j) =\n    finsum_vec TYPE('a) n\n     (\\<lambda>k.\n         B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T k)\n     {0..<m} $v\n    j", "by (rule index_mat, insert i j, auto)"], ["proof (state)\nthis:\n  mat\\<^sub>r n n\n   (\\<lambda>i.\n       finsum_vec TYPE('a) n\n        (\\<lambda>k.\n            B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T k)\n        {0..<m}) $$\n  (i, j) =\n  finsum_vec TYPE('a) n\n   (\\<lambda>k. B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T k)\n   {0..<m} $v\n  j\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (mat\\<^sub>r n n\n                       (\\<lambda>i.\n                           finsum_vec TYPE('a) n\n                            (\\<lambda>k.\n                                B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n                            {0..<m}));\n        j < dim_col\n             (mat\\<^sub>r n n\n               (\\<lambda>i.\n                   finsum_vec TYPE('a) n\n                    (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n                    {0..<m}))\\<rbrakk>\n       \\<Longrightarrow> mat\\<^sub>r n n\n                          (\\<lambda>i.\n                              finsum_vec TYPE('a) n\n                               (\\<lambda>k.\n                                   B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v\n                                   Matrix.row A\\<^sup>T k)\n                               {0..<m}) $$\n                         (i, j) =\n                         mat\\<^sub>r n n\n                          (\\<lambda>i.\n                              finsum_vec TYPE('a) n\n                               (\\<lambda>k.\n                                   B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n                               {0..<m}) $$\n                         (i, j)", "also"], ["proof (state)\nthis:\n  mat\\<^sub>r n n\n   (\\<lambda>i.\n       finsum_vec TYPE('a) n\n        (\\<lambda>k.\n            B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T k)\n        {0..<m}) $$\n  (i, j) =\n  finsum_vec TYPE('a) n\n   (\\<lambda>k. B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T k)\n   {0..<m} $v\n  j\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (mat\\<^sub>r n n\n                       (\\<lambda>i.\n                           finsum_vec TYPE('a) n\n                            (\\<lambda>k.\n                                B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n                            {0..<m}));\n        j < dim_col\n             (mat\\<^sub>r n n\n               (\\<lambda>i.\n                   finsum_vec TYPE('a) n\n                    (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n                    {0..<m}))\\<rbrakk>\n       \\<Longrightarrow> mat\\<^sub>r n n\n                          (\\<lambda>i.\n                              finsum_vec TYPE('a) n\n                               (\\<lambda>k.\n                                   B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v\n                                   Matrix.row A\\<^sup>T k)\n                               {0..<m}) $$\n                         (i, j) =\n                         mat\\<^sub>r n n\n                          (\\<lambda>i.\n                              finsum_vec TYPE('a) n\n                               (\\<lambda>k.\n                                   B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n                               {0..<m}) $$\n                         (i, j)", "have \"... = (\\<Sum>k\\<in>{0..<m}. (B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v row A\\<^sup>T k) $ j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finsum_vec TYPE('a) n\n     (\\<lambda>k.\n         B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T k)\n     {0..<m} $v\n    j =\n    (\\<Sum>k = 0..<m.\n        (B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T k) $v j)", "by (rule index_finsum_vec[OF _ j_n], auto simp add: A)"], ["proof (state)\nthis:\n  finsum_vec TYPE('a) n\n   (\\<lambda>k. B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T k)\n   {0..<m} $v\n  j =\n  (\\<Sum>k = 0..<m.\n      (B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T k) $v j)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (mat\\<^sub>r n n\n                       (\\<lambda>i.\n                           finsum_vec TYPE('a) n\n                            (\\<lambda>k.\n                                B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n                            {0..<m}));\n        j < dim_col\n             (mat\\<^sub>r n n\n               (\\<lambda>i.\n                   finsum_vec TYPE('a) n\n                    (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n                    {0..<m}))\\<rbrakk>\n       \\<Longrightarrow> mat\\<^sub>r n n\n                          (\\<lambda>i.\n                              finsum_vec TYPE('a) n\n                               (\\<lambda>k.\n                                   B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v\n                                   Matrix.row A\\<^sup>T k)\n                               {0..<m}) $$\n                         (i, j) =\n                         mat\\<^sub>r n n\n                          (\\<lambda>i.\n                              finsum_vec TYPE('a) n\n                               (\\<lambda>k.\n                                   B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n                               {0..<m}) $$\n                         (i, j)", "also"], ["proof (state)\nthis:\n  finsum_vec TYPE('a) n\n   (\\<lambda>k. B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T k)\n   {0..<m} $v\n  j =\n  (\\<Sum>k = 0..<m.\n      (B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T k) $v j)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (mat\\<^sub>r n n\n                       (\\<lambda>i.\n                           finsum_vec TYPE('a) n\n                            (\\<lambda>k.\n                                B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n                            {0..<m}));\n        j < dim_col\n             (mat\\<^sub>r n n\n               (\\<lambda>i.\n                   finsum_vec TYPE('a) n\n                    (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n                    {0..<m}))\\<rbrakk>\n       \\<Longrightarrow> mat\\<^sub>r n n\n                          (\\<lambda>i.\n                              finsum_vec TYPE('a) n\n                               (\\<lambda>k.\n                                   B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v\n                                   Matrix.row A\\<^sup>T k)\n                               {0..<m}) $$\n                         (i, j) =\n                         mat\\<^sub>r n n\n                          (\\<lambda>i.\n                              finsum_vec TYPE('a) n\n                               (\\<lambda>k.\n                                   B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n                               {0..<m}) $$\n                         (i, j)", "have \"... = (\\<Sum>k\\<in>{0..<m}. (B $$ (k, i) \\<cdot>\\<^sub>v col A k) $ j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..<m.\n        (B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T k) $v j) =\n    (\\<Sum>k = 0..<m. (B $$ (k, i) \\<cdot>\\<^sub>v col A k) $v j)", "proof (rule sum.cong, auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x < m \\<Longrightarrow>\n       (B\\<^sup>T $$ (i, x) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T x) $v j =\n       (B $$ (x, i) \\<cdot>\\<^sub>v col A x) $v j", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x < m \\<Longrightarrow>\n       (B\\<^sup>T $$ (i, x) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T x) $v j =\n       (B $$ (x, i) \\<cdot>\\<^sub>v col A x) $v j", "assume x: \"x<m\""], ["proof (state)\nthis:\n  x < m\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x < m \\<Longrightarrow>\n       (B\\<^sup>T $$ (i, x) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T x) $v j =\n       (B $$ (x, i) \\<cdot>\\<^sub>v col A x) $v j", "have row_rw: \"Matrix.row A\\<^sup>T x = col A x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Matrix.row A\\<^sup>T x = col A x", "by (rule row_transpose, insert A x, auto)"], ["proof (state)\nthis:\n  Matrix.row A\\<^sup>T x = col A x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x < m \\<Longrightarrow>\n       (B\\<^sup>T $$ (i, x) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T x) $v j =\n       (B $$ (x, i) \\<cdot>\\<^sub>v col A x) $v j", "have B_rw: \"B\\<^sup>T $$ (i,x) = B $$ (x, i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B\\<^sup>T $$ (i, x) = B $$ (x, i)", "by (rule index_transpose_mat, insert x i B, auto)"], ["proof (state)\nthis:\n  B\\<^sup>T $$ (i, x) = B $$ (x, i)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x < m \\<Longrightarrow>\n       (B\\<^sup>T $$ (i, x) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T x) $v j =\n       (B $$ (x, i) \\<cdot>\\<^sub>v col A x) $v j", "have \"(B\\<^sup>T $$ (i, x) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T x) $v j = B\\<^sup>T $$ (i, x) * Matrix.row A\\<^sup>T x $v j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (B\\<^sup>T $$ (i, x) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T x) $v j =\n    B\\<^sup>T $$ (i, x) * Matrix.row A\\<^sup>T x $v j", "by (rule index_smult_vec, insert A j_n, auto)"], ["proof (state)\nthis:\n  (B\\<^sup>T $$ (i, x) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T x) $v j =\n  B\\<^sup>T $$ (i, x) * Matrix.row A\\<^sup>T x $v j\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x < m \\<Longrightarrow>\n       (B\\<^sup>T $$ (i, x) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T x) $v j =\n       (B $$ (x, i) \\<cdot>\\<^sub>v col A x) $v j", "also"], ["proof (state)\nthis:\n  (B\\<^sup>T $$ (i, x) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T x) $v j =\n  B\\<^sup>T $$ (i, x) * Matrix.row A\\<^sup>T x $v j\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x < m \\<Longrightarrow>\n       (B\\<^sup>T $$ (i, x) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T x) $v j =\n       (B $$ (x, i) \\<cdot>\\<^sub>v col A x) $v j", "have \"... = B $$ (x, i) * col A x $v j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B\\<^sup>T $$ (i, x) * Matrix.row A\\<^sup>T x $v j =\n    B $$ (x, i) * col A x $v j", "unfolding row_rw B_rw"], ["proof (prove)\ngoal (1 subgoal):\n 1. B $$ (x, i) * col A x $v j = B $$ (x, i) * col A x $v j", "by simp"], ["proof (state)\nthis:\n  B\\<^sup>T $$ (i, x) * Matrix.row A\\<^sup>T x $v j =\n  B $$ (x, i) * col A x $v j\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x < m \\<Longrightarrow>\n       (B\\<^sup>T $$ (i, x) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T x) $v j =\n       (B $$ (x, i) \\<cdot>\\<^sub>v col A x) $v j", "also"], ["proof (state)\nthis:\n  B\\<^sup>T $$ (i, x) * Matrix.row A\\<^sup>T x $v j =\n  B $$ (x, i) * col A x $v j\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x < m \\<Longrightarrow>\n       (B\\<^sup>T $$ (i, x) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T x) $v j =\n       (B $$ (x, i) \\<cdot>\\<^sub>v col A x) $v j", "have \"... = (B $$ (x, i) \\<cdot>\\<^sub>v col A x) $v j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B $$ (x, i) * col A x $v j = (B $$ (x, i) \\<cdot>\\<^sub>v col A x) $v j", "by (rule index_smult_vec[symmetric], insert A j_n, auto)"], ["proof (state)\nthis:\n  B $$ (x, i) * col A x $v j = (B $$ (x, i) \\<cdot>\\<^sub>v col A x) $v j\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x < m \\<Longrightarrow>\n       (B\\<^sup>T $$ (i, x) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T x) $v j =\n       (B $$ (x, i) \\<cdot>\\<^sub>v col A x) $v j", "finally"], ["proof (chain)\npicking this:\n  (B\\<^sup>T $$ (i, x) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T x) $v j =\n  (B $$ (x, i) \\<cdot>\\<^sub>v col A x) $v j", "show \" (B\\<^sup>T $$ (i, x) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T x) $v j = (B $$ (x, i) \\<cdot>\\<^sub>v col A x) $v j\""], ["proof (prove)\nusing this:\n  (B\\<^sup>T $$ (i, x) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T x) $v j =\n  (B $$ (x, i) \\<cdot>\\<^sub>v col A x) $v j\n\ngoal (1 subgoal):\n 1. (B\\<^sup>T $$ (i, x) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T x) $v j =\n    (B $$ (x, i) \\<cdot>\\<^sub>v col A x) $v j", "."], ["proof (state)\nthis:\n  (B\\<^sup>T $$ (i, x) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T x) $v j =\n  (B $$ (x, i) \\<cdot>\\<^sub>v col A x) $v j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..<m.\n      (B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T k) $v j) =\n  (\\<Sum>k = 0..<m. (B $$ (k, i) \\<cdot>\\<^sub>v col A k) $v j)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (mat\\<^sub>r n n\n                       (\\<lambda>i.\n                           finsum_vec TYPE('a) n\n                            (\\<lambda>k.\n                                B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n                            {0..<m}));\n        j < dim_col\n             (mat\\<^sub>r n n\n               (\\<lambda>i.\n                   finsum_vec TYPE('a) n\n                    (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n                    {0..<m}))\\<rbrakk>\n       \\<Longrightarrow> mat\\<^sub>r n n\n                          (\\<lambda>i.\n                              finsum_vec TYPE('a) n\n                               (\\<lambda>k.\n                                   B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v\n                                   Matrix.row A\\<^sup>T k)\n                               {0..<m}) $$\n                         (i, j) =\n                         mat\\<^sub>r n n\n                          (\\<lambda>i.\n                              finsum_vec TYPE('a) n\n                               (\\<lambda>k.\n                                   B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n                               {0..<m}) $$\n                         (i, j)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..<m.\n      (B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T k) $v j) =\n  (\\<Sum>k = 0..<m. (B $$ (k, i) \\<cdot>\\<^sub>v col A k) $v j)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (mat\\<^sub>r n n\n                       (\\<lambda>i.\n                           finsum_vec TYPE('a) n\n                            (\\<lambda>k.\n                                B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n                            {0..<m}));\n        j < dim_col\n             (mat\\<^sub>r n n\n               (\\<lambda>i.\n                   finsum_vec TYPE('a) n\n                    (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n                    {0..<m}))\\<rbrakk>\n       \\<Longrightarrow> mat\\<^sub>r n n\n                          (\\<lambda>i.\n                              finsum_vec TYPE('a) n\n                               (\\<lambda>k.\n                                   B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v\n                                   Matrix.row A\\<^sup>T k)\n                               {0..<m}) $$\n                         (i, j) =\n                         mat\\<^sub>r n n\n                          (\\<lambda>i.\n                              finsum_vec TYPE('a) n\n                               (\\<lambda>k.\n                                   B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n                               {0..<m}) $$\n                         (i, j)", "have \"... = ?g i $v j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>k = 0..<m. (B $$ (k, i) \\<cdot>\\<^sub>v col A k) $v j) =\n    finsum_vec TYPE('a) n (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n     {0..<m} $v\n    j", "by (rule index_finsum_vec[symmetric, OF _ j_n], auto simp add: A)"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..<m. (B $$ (k, i) \\<cdot>\\<^sub>v col A k) $v j) =\n  finsum_vec TYPE('a) n (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n   {0..<m} $v\n  j\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (mat\\<^sub>r n n\n                       (\\<lambda>i.\n                           finsum_vec TYPE('a) n\n                            (\\<lambda>k.\n                                B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n                            {0..<m}));\n        j < dim_col\n             (mat\\<^sub>r n n\n               (\\<lambda>i.\n                   finsum_vec TYPE('a) n\n                    (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n                    {0..<m}))\\<rbrakk>\n       \\<Longrightarrow> mat\\<^sub>r n n\n                          (\\<lambda>i.\n                              finsum_vec TYPE('a) n\n                               (\\<lambda>k.\n                                   B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v\n                                   Matrix.row A\\<^sup>T k)\n                               {0..<m}) $$\n                         (i, j) =\n                         mat\\<^sub>r n n\n                          (\\<lambda>i.\n                              finsum_vec TYPE('a) n\n                               (\\<lambda>k.\n                                   B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n                               {0..<m}) $$\n                         (i, j)", "also"], ["proof (state)\nthis:\n  (\\<Sum>k = 0..<m. (B $$ (k, i) \\<cdot>\\<^sub>v col A k) $v j) =\n  finsum_vec TYPE('a) n (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n   {0..<m} $v\n  j\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (mat\\<^sub>r n n\n                       (\\<lambda>i.\n                           finsum_vec TYPE('a) n\n                            (\\<lambda>k.\n                                B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n                            {0..<m}));\n        j < dim_col\n             (mat\\<^sub>r n n\n               (\\<lambda>i.\n                   finsum_vec TYPE('a) n\n                    (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n                    {0..<m}))\\<rbrakk>\n       \\<Longrightarrow> mat\\<^sub>r n n\n                          (\\<lambda>i.\n                              finsum_vec TYPE('a) n\n                               (\\<lambda>k.\n                                   B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v\n                                   Matrix.row A\\<^sup>T k)\n                               {0..<m}) $$\n                         (i, j) =\n                         mat\\<^sub>r n n\n                          (\\<lambda>i.\n                              finsum_vec TYPE('a) n\n                               (\\<lambda>k.\n                                   B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n                               {0..<m}) $$\n                         (i, j)", "have \"... = ?rhs $$ (i, j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finsum_vec TYPE('a) n (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n     {0..<m} $v\n    j =\n    mat\\<^sub>r n n\n     (\\<lambda>i.\n         finsum_vec TYPE('a) n\n          (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m}) $$\n    (i, j)", "by (rule index_mat[symmetric], insert i j, auto)"], ["proof (state)\nthis:\n  finsum_vec TYPE('a) n (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n   {0..<m} $v\n  j =\n  mat\\<^sub>r n n\n   (\\<lambda>i.\n       finsum_vec TYPE('a) n\n        (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m}) $$\n  (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (mat\\<^sub>r n n\n                       (\\<lambda>i.\n                           finsum_vec TYPE('a) n\n                            (\\<lambda>k.\n                                B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n                            {0..<m}));\n        j < dim_col\n             (mat\\<^sub>r n n\n               (\\<lambda>i.\n                   finsum_vec TYPE('a) n\n                    (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n                    {0..<m}))\\<rbrakk>\n       \\<Longrightarrow> mat\\<^sub>r n n\n                          (\\<lambda>i.\n                              finsum_vec TYPE('a) n\n                               (\\<lambda>k.\n                                   B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v\n                                   Matrix.row A\\<^sup>T k)\n                               {0..<m}) $$\n                         (i, j) =\n                         mat\\<^sub>r n n\n                          (\\<lambda>i.\n                              finsum_vec TYPE('a) n\n                               (\\<lambda>k.\n                                   B $$ (k, i) \\<cdot>\\<^sub>v col A k)\n                               {0..<m}) $$\n                         (i, j)", "finally"], ["proof (chain)\npicking this:\n  mat\\<^sub>r n n\n   (\\<lambda>i.\n       finsum_vec TYPE('a) n\n        (\\<lambda>k.\n            B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T k)\n        {0..<m}) $$\n  (i, j) =\n  mat\\<^sub>r n n\n   (\\<lambda>i.\n       finsum_vec TYPE('a) n\n        (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m}) $$\n  (i, j)", "show \"?lhs $$ (i, j) = ?rhs $$ (i, j)\""], ["proof (prove)\nusing this:\n  mat\\<^sub>r n n\n   (\\<lambda>i.\n       finsum_vec TYPE('a) n\n        (\\<lambda>k.\n            B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T k)\n        {0..<m}) $$\n  (i, j) =\n  mat\\<^sub>r n n\n   (\\<lambda>i.\n       finsum_vec TYPE('a) n\n        (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m}) $$\n  (i, j)\n\ngoal (1 subgoal):\n 1. mat\\<^sub>r n n\n     (\\<lambda>i.\n         finsum_vec TYPE('a) n\n          (\\<lambda>k.\n              B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T k)\n          {0..<m}) $$\n    (i, j) =\n    mat\\<^sub>r n n\n     (\\<lambda>i.\n         finsum_vec TYPE('a) n\n          (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m}) $$\n    (i, j)", "."], ["proof (state)\nthis:\n  mat\\<^sub>r n n\n   (\\<lambda>i.\n       finsum_vec TYPE('a) n\n        (\\<lambda>k.\n            B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T k)\n        {0..<m}) $$\n  (i, j) =\n  mat\\<^sub>r n n\n   (\\<lambda>i.\n       finsum_vec TYPE('a) n\n        (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m}) $$\n  (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  mat\\<^sub>r n n\n   (\\<lambda>i.\n       finsum_vec TYPE('a) n\n        (\\<lambda>k.\n            B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T k)\n        {0..<m}) =\n  mat\\<^sub>r n n\n   (\\<lambda>i.\n       finsum_vec TYPE('a) n\n        (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m})\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    Determinant.det\n     (mat\\<^sub>r n n\n       (\\<lambda>i.\n           finsum_vec TYPE('a) n\n            (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m}))", "have \"det (A*B) = det (B\\<^sup>T*A\\<^sup>T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (A * B) = Determinant.det (B\\<^sup>T * A\\<^sup>T)", "using det_transpose"], ["proof (prove)\nusing this:\n  ?A \\<in> carrier_mat ?n ?n \\<Longrightarrow>\n  Determinant.det ?A\\<^sup>T = Determinant.det ?A\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) = Determinant.det (B\\<^sup>T * A\\<^sup>T)", "by (metis A B Matrix.transpose_mult mult_carrier_mat)"], ["proof (state)\nthis:\n  Determinant.det (A * B) = Determinant.det (B\\<^sup>T * A\\<^sup>T)\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    Determinant.det\n     (mat\\<^sub>r n n\n       (\\<lambda>i.\n           finsum_vec TYPE('a) n\n            (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m}))", "also"], ["proof (state)\nthis:\n  Determinant.det (A * B) = Determinant.det (B\\<^sup>T * A\\<^sup>T)\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    Determinant.det\n     (mat\\<^sub>r n n\n       (\\<lambda>i.\n           finsum_vec TYPE('a) n\n            (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m}))", "have \"... =  det (mat\\<^sub>r n n (\\<lambda>i. finsum_vec TYPE('a) n (\\<lambda>k. B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T k) {0..<m}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (B\\<^sup>T * A\\<^sup>T) =\n    Determinant.det\n     (mat\\<^sub>r n n\n       (\\<lambda>i.\n           finsum_vec TYPE('a) n\n            (\\<lambda>k.\n                B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T k)\n            {0..<m}))", "using mat_mul_finsum_alt[OF BT AT]"], ["proof (prove)\nusing this:\n  B\\<^sup>T * A\\<^sup>T =\n  mat\\<^sub>r n n\n   (\\<lambda>i.\n       finsum_vec TYPE('a) n\n        (\\<lambda>k.\n            B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T k)\n        {0..<m})\n\ngoal (1 subgoal):\n 1. Determinant.det (B\\<^sup>T * A\\<^sup>T) =\n    Determinant.det\n     (mat\\<^sub>r n n\n       (\\<lambda>i.\n           finsum_vec TYPE('a) n\n            (\\<lambda>k.\n                B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T k)\n            {0..<m}))", "by auto"], ["proof (state)\nthis:\n  Determinant.det (B\\<^sup>T * A\\<^sup>T) =\n  Determinant.det\n   (mat\\<^sub>r n n\n     (\\<lambda>i.\n         finsum_vec TYPE('a) n\n          (\\<lambda>k.\n              B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T k)\n          {0..<m}))\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    Determinant.det\n     (mat\\<^sub>r n n\n       (\\<lambda>i.\n           finsum_vec TYPE('a) n\n            (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m}))", "also"], ["proof (state)\nthis:\n  Determinant.det (B\\<^sup>T * A\\<^sup>T) =\n  Determinant.det\n   (mat\\<^sub>r n n\n     (\\<lambda>i.\n         finsum_vec TYPE('a) n\n          (\\<lambda>k.\n              B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T k)\n          {0..<m}))\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    Determinant.det\n     (mat\\<^sub>r n n\n       (\\<lambda>i.\n           finsum_vec TYPE('a) n\n            (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m}))", "have \"... = det (mat\\<^sub>r n n (\\<lambda>i. finsum_vec TYPE('a) n (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v Matrix.col A k) {0..<m}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det\n     (mat\\<^sub>r n n\n       (\\<lambda>i.\n           finsum_vec TYPE('a) n\n            (\\<lambda>k.\n                B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T k)\n            {0..<m})) =\n    Determinant.det\n     (mat\\<^sub>r n n\n       (\\<lambda>i.\n           finsum_vec TYPE('a) n\n            (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m}))", "by (rule arg_cong[of _ _ det], rule lhs_rhs)"], ["proof (state)\nthis:\n  Determinant.det\n   (mat\\<^sub>r n n\n     (\\<lambda>i.\n         finsum_vec TYPE('a) n\n          (\\<lambda>k.\n              B\\<^sup>T $$ (i, k) \\<cdot>\\<^sub>v Matrix.row A\\<^sup>T k)\n          {0..<m})) =\n  Determinant.det\n   (mat\\<^sub>r n n\n     (\\<lambda>i.\n         finsum_vec TYPE('a) n\n          (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m}))\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    Determinant.det\n     (mat\\<^sub>r n n\n       (\\<lambda>i.\n           finsum_vec TYPE('a) n\n            (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m}))", "finally"], ["proof (chain)\npicking this:\n  Determinant.det (A * B) =\n  Determinant.det\n   (mat\\<^sub>r n n\n     (\\<lambda>i.\n         finsum_vec TYPE('a) n\n          (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m}))", "show ?thesis"], ["proof (prove)\nusing this:\n  Determinant.det (A * B) =\n  Determinant.det\n   (mat\\<^sub>r n n\n     (\\<lambda>i.\n         finsum_vec TYPE('a) n\n          (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m}))\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    Determinant.det\n     (mat\\<^sub>r n n\n       (\\<lambda>i.\n           finsum_vec TYPE('a) n\n            (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m}))", "."], ["proof (state)\nthis:\n  Determinant.det (A * B) =\n  Determinant.det\n   (mat\\<^sub>r n n\n     (\\<lambda>i.\n         finsum_vec TYPE('a) n\n          (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m}))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma det_cols_mul:\n  assumes A: \"A \\<in> carrier_mat n m\"\n    and B: \"B \\<in> carrier_mat m n\"\n  shows \"det (A*B) = (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and> (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       (\\<Prod>i = 0..<n. B $$ (f i, i)) * Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col A (f i))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col A (f i))))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col A (f i))))", "let ?V=\"{0..<n}\""], ["proof (state)\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col A (f i))))", "let ?U = \"{0..<m}\""], ["proof (state)\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col A (f i))))", "let ?F = \" {f. (\\<forall>i\\<in> {0..<n}. f i \\<in> ?U) \\<and> (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)}\""], ["proof (state)\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col A (f i))))", "let ?g = \"\\<lambda>f. det (mat\\<^sub>r n n (\\<lambda> i. B $$ (f i, i) \\<cdot>\\<^sub>v col A (f i)))\""], ["proof (state)\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col A (f i))))", "have fm: \"finite {0..<m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {0..<m}", "by auto"], ["proof (state)\nthis:\n  finite {0..<m}\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col A (f i))))", "have fn: \"finite {0..<n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {0..<n}", "by auto"], ["proof (state)\nthis:\n  finite {0..<n}\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col A (f i))))", "have det_rw: \"det (mat\\<^sub>r n n (\\<lambda>i. B $$ (f i, i) \\<cdot>\\<^sub>v col A (f i))) =\n    (prod (\\<lambda>i. B $$ (f i, i)) {0..<n}) * det (mat\\<^sub>r n n (\\<lambda>i. col A (f i)))\"\n    if  f: \"(\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and> (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)\" for f"], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det\n     (mat\\<^sub>r n n\n       (\\<lambda>i. B $$ (f i, i) \\<cdot>\\<^sub>v col A (f i))) =\n    (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n    Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col A (f i)))", "by (rule det_rows_mul, insert A col_dim, auto)"], ["proof (state)\nthis:\n  (\\<forall>i\\<in>{0..<n}. ?f i \\<in> {0..<m}) \\<and>\n  (\\<forall>i.\n      i \\<notin> {0..<n} \\<longrightarrow> ?f i = i) \\<Longrightarrow>\n  Determinant.det\n   (mat\\<^sub>r n n\n     (\\<lambda>i. B $$ (?f i, i) \\<cdot>\\<^sub>v col A (?f i))) =\n  (\\<Prod>i = 0..<n. B $$ (?f i, i)) *\n  Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col A (?f i)))\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col A (f i))))", "have \"det (A*B) = det (mat\\<^sub>r n n (\\<lambda>i. finsum_vec TYPE('a::comm_ring_1) n (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v Matrix.col A k) ?U))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    Determinant.det\n     (mat\\<^sub>r n n\n       (\\<lambda>i.\n           finsum_vec TYPE('a) n\n            (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m}))", "by (rule det_mul_finsum_alt[OF A B])"], ["proof (state)\nthis:\n  Determinant.det (A * B) =\n  Determinant.det\n   (mat\\<^sub>r n n\n     (\\<lambda>i.\n         finsum_vec TYPE('a) n\n          (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m}))\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col A (f i))))", "also"], ["proof (state)\nthis:\n  Determinant.det (A * B) =\n  Determinant.det\n   (mat\\<^sub>r n n\n     (\\<lambda>i.\n         finsum_vec TYPE('a) n\n          (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m}))\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col A (f i))))", "have \"... = sum ?g ?F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det\n     (mat\\<^sub>r n n\n       (\\<lambda>i.\n           finsum_vec TYPE('a) n\n            (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m})) =\n    (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       Determinant.det\n        (mat\\<^sub>r n n\n          (\\<lambda>i. B $$ (f i, i) \\<cdot>\\<^sub>v col A (f i))))", "by (rule det_linear_rows_sum[OF fm], auto simp add: A)"], ["proof (state)\nthis:\n  Determinant.det\n   (mat\\<^sub>r n n\n     (\\<lambda>i.\n         finsum_vec TYPE('a) n\n          (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m})) =\n  (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n             (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n     Determinant.det\n      (mat\\<^sub>r n n\n        (\\<lambda>i. B $$ (f i, i) \\<cdot>\\<^sub>v col A (f i))))\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col A (f i))))", "also"], ["proof (state)\nthis:\n  Determinant.det\n   (mat\\<^sub>r n n\n     (\\<lambda>i.\n         finsum_vec TYPE('a) n\n          (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m})) =\n  (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n             (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n     Determinant.det\n      (mat\\<^sub>r n n\n        (\\<lambda>i. B $$ (f i, i) \\<cdot>\\<^sub>v col A (f i))))\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col A (f i))))", "have \"... = (\\<Sum>f\\<in>?F. prod (\\<lambda>i. B $$ (f i, i)) {0..<n} * det (mat\\<^sub>r n n (\\<lambda>i. col A (f i))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       Determinant.det\n        (mat\\<^sub>r n n\n          (\\<lambda>i. B $$ (f i, i) \\<cdot>\\<^sub>v col A (f i)))) =\n    (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col A (f i))))", "using det_rw"], ["proof (prove)\nusing this:\n  (\\<forall>i\\<in>{0..<n}. ?f i \\<in> {0..<m}) \\<and>\n  (\\<forall>i.\n      i \\<notin> {0..<n} \\<longrightarrow> ?f i = i) \\<Longrightarrow>\n  Determinant.det\n   (mat\\<^sub>r n n\n     (\\<lambda>i. B $$ (?f i, i) \\<cdot>\\<^sub>v col A (?f i))) =\n  (\\<Prod>i = 0..<n. B $$ (?f i, i)) *\n  Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col A (?f i)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       Determinant.det\n        (mat\\<^sub>r n n\n          (\\<lambda>i. B $$ (f i, i) \\<cdot>\\<^sub>v col A (f i)))) =\n    (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col A (f i))))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n             (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n     Determinant.det\n      (mat\\<^sub>r n n\n        (\\<lambda>i. B $$ (f i, i) \\<cdot>\\<^sub>v col A (f i)))) =\n  (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n             (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n     (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n     Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col A (f i))))\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col A (f i))))", "finally"], ["proof (chain)\npicking this:\n  Determinant.det (A * B) =\n  (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n             (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n     (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n     Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col A (f i))))", "show ?thesis"], ["proof (prove)\nusing this:\n  Determinant.det (A * B) =\n  (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n             (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n     (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n     Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col A (f i))))\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col A (f i))))", "."], ["proof (state)\nthis:\n  Determinant.det (A * B) =\n  (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n             (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n     (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n     Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col A (f i))))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma det_cols_mul':\n  assumes A: \"A \\<in> carrier_mat n m\"\n    and B: \"B \\<in> carrier_mat m n\"\n  shows \"det (A*B) = (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and> (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       (\\<Prod>i = 0..<n. A $$ (i, f i)) * det (mat\\<^sub>r n n (\\<lambda>i. row B (f i))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))))", "let ?F=\"{f. (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and> (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)}\""], ["proof (state)\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))))", "have t: \"A * B = (B\\<^sup>T*A\\<^sup>T)\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A * B = (B\\<^sup>T * A\\<^sup>T)\\<^sup>T", "using transpose_mult[OF A B] transpose_transpose"], ["proof (prove)\nusing this:\n  (A * B)\\<^sup>T = B\\<^sup>T * A\\<^sup>T\n  ?A\\<^sup>T\\<^sup>T = ?A\n\ngoal (1 subgoal):\n 1. A * B = (B\\<^sup>T * A\\<^sup>T)\\<^sup>T", "by metis"], ["proof (state)\nthis:\n  A * B = (B\\<^sup>T * A\\<^sup>T)\\<^sup>T\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))))", "have \"det (B\\<^sup>T*A\\<^sup>T) = (\\<Sum>f\\<in>?F. (\\<Prod>i = 0..<n. A\\<^sup>T $$ (f i, i)) * det (mat\\<^sub>r n n (\\<lambda>i. col B\\<^sup>T (f i))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (B\\<^sup>T * A\\<^sup>T) =\n    (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       (\\<Prod>i = 0..<n. A\\<^sup>T $$ (f i, i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col B\\<^sup>T (f i))))", "by (rule det_cols_mul, auto simp add: A B)"], ["proof (state)\nthis:\n  Determinant.det (B\\<^sup>T * A\\<^sup>T) =\n  (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n             (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n     (\\<Prod>i = 0..<n. A\\<^sup>T $$ (f i, i)) *\n     Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col B\\<^sup>T (f i))))\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))))", "also"], ["proof (state)\nthis:\n  Determinant.det (B\\<^sup>T * A\\<^sup>T) =\n  (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n             (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n     (\\<Prod>i = 0..<n. A\\<^sup>T $$ (f i, i)) *\n     Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col B\\<^sup>T (f i))))\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))))", "have \"... = (\\<Sum>f \\<in>?F. (\\<Prod>i = 0..<n. A $$ (i, f i)) * det (mat\\<^sub>r n n (\\<lambda>i. row B (f i))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       (\\<Prod>i = 0..<n. A\\<^sup>T $$ (f i, i)) *\n       Determinant.det\n        (mat\\<^sub>r n n (\\<lambda>i. col B\\<^sup>T (f i)))) =\n    (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))))", "proof (rule sum.cong, rule refl)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {f. (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n                   (\\<forall>i.\n                       i \\<notin> {0..<n} \\<longrightarrow>\n                       f i = i)} \\<Longrightarrow>\n       (\\<Prod>i = 0..<n. A\\<^sup>T $$ (x i, i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col B\\<^sup>T (x i))) =\n       (\\<Prod>i = 0..<n. A $$ (i, x i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (x i)))", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {f. (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n                   (\\<forall>i.\n                       i \\<notin> {0..<n} \\<longrightarrow>\n                       f i = i)} \\<Longrightarrow>\n       (\\<Prod>i = 0..<n. A\\<^sup>T $$ (x i, i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col B\\<^sup>T (x i))) =\n       (\\<Prod>i = 0..<n. A $$ (i, x i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (x i)))", "assume f: \"f \\<in> ?F\""], ["proof (state)\nthis:\n  f \\<in> {f. (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n              (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {f. (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n                   (\\<forall>i.\n                       i \\<notin> {0..<n} \\<longrightarrow>\n                       f i = i)} \\<Longrightarrow>\n       (\\<Prod>i = 0..<n. A\\<^sup>T $$ (x i, i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col B\\<^sup>T (x i))) =\n       (\\<Prod>i = 0..<n. A $$ (i, x i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (x i)))", "have \"(\\<Prod>i = 0..<n. A\\<^sup>T $$ (f i, i)) = (\\<Prod>i = 0..<n. A $$ (i, f i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<n. A\\<^sup>T $$ (f i, i)) =\n    (\\<Prod>i = 0..<n. A $$ (i, f i))", "proof (rule prod.cong, rule refl)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {0..<n} \\<Longrightarrow>\n       A\\<^sup>T $$ (f x, x) = A $$ (x, f x)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {0..<n} \\<Longrightarrow>\n       A\\<^sup>T $$ (f x, x) = A $$ (x, f x)", "assume x: \"x \\<in> {0..<n}\""], ["proof (state)\nthis:\n  x \\<in> {0..<n}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {0..<n} \\<Longrightarrow>\n       A\\<^sup>T $$ (f x, x) = A $$ (x, f x)", "show \"A\\<^sup>T $$ (f x, x) = A $$ (x, f x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A\\<^sup>T $$ (f x, x) = A $$ (x, f x)", "by (rule index_transpose_mat(1), insert f A x, auto)"], ["proof (state)\nthis:\n  A\\<^sup>T $$ (f x, x) = A $$ (x, f x)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<n. A\\<^sup>T $$ (f i, i)) =\n  (\\<Prod>i = 0..<n. A $$ (i, f i))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {f. (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n                   (\\<forall>i.\n                       i \\<notin> {0..<n} \\<longrightarrow>\n                       f i = i)} \\<Longrightarrow>\n       (\\<Prod>i = 0..<n. A\\<^sup>T $$ (x i, i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col B\\<^sup>T (x i))) =\n       (\\<Prod>i = 0..<n. A $$ (i, x i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (x i)))", "moreover"], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<n. A\\<^sup>T $$ (f i, i)) =\n  (\\<Prod>i = 0..<n. A $$ (i, f i))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {f. (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n                   (\\<forall>i.\n                       i \\<notin> {0..<n} \\<longrightarrow>\n                       f i = i)} \\<Longrightarrow>\n       (\\<Prod>i = 0..<n. A\\<^sup>T $$ (x i, i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col B\\<^sup>T (x i))) =\n       (\\<Prod>i = 0..<n. A $$ (i, x i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (x i)))", "have \"det (mat\\<^sub>r n n (\\<lambda>i. col B\\<^sup>T (f i))) = det (mat\\<^sub>r n n (\\<lambda>i. row B (f i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col B\\<^sup>T (f i))) =\n    Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col B\\<^sup>T (f i))) =\n    Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i)))", "have row_eq_colT: \"row B (f i) $v j = col B\\<^sup>T (f i) $v j\" if i: \"i < n\" and j: \"j < n\" for i j"], ["proof (prove)\ngoal (1 subgoal):\n 1. Matrix.row B (f i) $v j = col B\\<^sup>T (f i) $v j", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Matrix.row B (f i) $v j = col B\\<^sup>T (f i) $v j", "have fi_m: \"f i < m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f i < m", "using f i"], ["proof (prove)\nusing this:\n  f \\<in> {f. (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n              (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)}\n  i < n\n\ngoal (1 subgoal):\n 1. f i < m", "by auto"], ["proof (state)\nthis:\n  f i < m\n\ngoal (1 subgoal):\n 1. Matrix.row B (f i) $v j = col B\\<^sup>T (f i) $v j", "have \"col B\\<^sup>T (f i) $v j = B\\<^sup>T $$(j, f i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col B\\<^sup>T (f i) $v j = B\\<^sup>T $$ (j, f i)", "by (rule index_col, insert B fi_m j, auto)"], ["proof (state)\nthis:\n  col B\\<^sup>T (f i) $v j = B\\<^sup>T $$ (j, f i)\n\ngoal (1 subgoal):\n 1. Matrix.row B (f i) $v j = col B\\<^sup>T (f i) $v j", "also"], ["proof (state)\nthis:\n  col B\\<^sup>T (f i) $v j = B\\<^sup>T $$ (j, f i)\n\ngoal (1 subgoal):\n 1. Matrix.row B (f i) $v j = col B\\<^sup>T (f i) $v j", "have \"... = B $$ (f i, j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B\\<^sup>T $$ (j, f i) = B $$ (f i, j)", "using B fi_m j"], ["proof (prove)\nusing this:\n  B \\<in> carrier_mat m n\n  f i < m\n  j < n\n\ngoal (1 subgoal):\n 1. B\\<^sup>T $$ (j, f i) = B $$ (f i, j)", "by auto"], ["proof (state)\nthis:\n  B\\<^sup>T $$ (j, f i) = B $$ (f i, j)\n\ngoal (1 subgoal):\n 1. Matrix.row B (f i) $v j = col B\\<^sup>T (f i) $v j", "also"], ["proof (state)\nthis:\n  B\\<^sup>T $$ (j, f i) = B $$ (f i, j)\n\ngoal (1 subgoal):\n 1. Matrix.row B (f i) $v j = col B\\<^sup>T (f i) $v j", "have \"... = row B (f i) $v j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B $$ (f i, j) = Matrix.row B (f i) $v j", "by (rule index_row[symmetric], insert B fi_m j, auto)"], ["proof (state)\nthis:\n  B $$ (f i, j) = Matrix.row B (f i) $v j\n\ngoal (1 subgoal):\n 1. Matrix.row B (f i) $v j = col B\\<^sup>T (f i) $v j", "finally"], ["proof (chain)\npicking this:\n  col B\\<^sup>T (f i) $v j = Matrix.row B (f i) $v j", "show ?thesis"], ["proof (prove)\nusing this:\n  col B\\<^sup>T (f i) $v j = Matrix.row B (f i) $v j\n\ngoal (1 subgoal):\n 1. Matrix.row B (f i) $v j = col B\\<^sup>T (f i) $v j", ".."], ["proof (state)\nthis:\n  Matrix.row B (f i) $v j = col B\\<^sup>T (f i) $v j\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?i < n; ?j < n\\<rbrakk>\n  \\<Longrightarrow> Matrix.row B (f ?i) $v ?j = col B\\<^sup>T (f ?i) $v ?j\n\ngoal (1 subgoal):\n 1. Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col B\\<^sup>T (f i))) =\n    Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i)))", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col B\\<^sup>T (f i))) =\n    Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i)))", "by (rule arg_cong[of _ _ det], rule eq_matI, insert row_eq_colT, auto)"], ["proof (state)\nthis:\n  Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col B\\<^sup>T (f i))) =\n  Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col B\\<^sup>T (f i))) =\n  Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i)))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {f. (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n                   (\\<forall>i.\n                       i \\<notin> {0..<n} \\<longrightarrow>\n                       f i = i)} \\<Longrightarrow>\n       (\\<Prod>i = 0..<n. A\\<^sup>T $$ (x i, i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col B\\<^sup>T (x i))) =\n       (\\<Prod>i = 0..<n. A $$ (i, x i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (x i)))", "ultimately"], ["proof (chain)\npicking this:\n  (\\<Prod>i = 0..<n. A\\<^sup>T $$ (f i, i)) =\n  (\\<Prod>i = 0..<n. A $$ (i, f i))\n  Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col B\\<^sup>T (f i))) =\n  Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i)))", "show \"(\\<Prod>i = 0..<n. A\\<^sup>T $$ (f i, i)) * det (mat\\<^sub>r n n (\\<lambda>i. col B\\<^sup>T (f i))) =\n         (\\<Prod>i = 0..<n. A $$ (i, f i)) * det (mat\\<^sub>r n n (\\<lambda>i. row B (f i)))\""], ["proof (prove)\nusing this:\n  (\\<Prod>i = 0..<n. A\\<^sup>T $$ (f i, i)) =\n  (\\<Prod>i = 0..<n. A $$ (i, f i))\n  Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col B\\<^sup>T (f i))) =\n  Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i)))\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<n. A\\<^sup>T $$ (f i, i)) *\n    Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col B\\<^sup>T (f i))) =\n    (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n    Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i)))", "by simp"], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<n. A\\<^sup>T $$ (f i, i)) *\n  Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col B\\<^sup>T (f i))) =\n  (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n  Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n             (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n     (\\<Prod>i = 0..<n. A\\<^sup>T $$ (f i, i)) *\n     Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col B\\<^sup>T (f i)))) =\n  (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n             (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n     (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n     Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))))\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))))", "finally"], ["proof (chain)\npicking this:\n  Determinant.det (B\\<^sup>T * A\\<^sup>T) =\n  (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n             (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n     (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n     Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))))", "show ?thesis"], ["proof (prove)\nusing this:\n  Determinant.det (B\\<^sup>T * A\\<^sup>T) =\n  (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n             (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n     (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n     Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))))\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))))", "by (metis (no_types, lifting) A B det_transpose transpose_mult mult_carrier_mat)"], ["proof (state)\nthis:\n  Determinant.det (A * B) =\n  (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n             (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n     (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n     Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))))\n\ngoal:\nNo subgoals!", "qed"], ["", "(*We need a more general version of this lemma*)"], ["", "lemma\n  assumes F: \"F= {f. f \\<in> {0..<n} \\<rightarrow> {0..<m} \\<and> (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)}\"\n  and p: \" \\<pi> permutes {0..<n}\"\n  shows \" (\\<Sum>f\\<in>F. (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i))) = (\\<Sum>f\\<in>F. (\\<Prod>i = 0..<n. B $$ (f i, i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) =\n    (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f i, i))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) =\n    (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f i, i))", "let ?h = \"(\\<lambda>f. f \\<circ> \\<pi>)\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) =\n    (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f i, i))", "have inj_on_F: \"inj_on ?h F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>f. f \\<circ> \\<pi>) F", "proof (rule inj_onI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> F; y \\<in> F;\n        x \\<circ> \\<pi> = y \\<circ> \\<pi>\\<rbrakk>\n       \\<Longrightarrow> x = y", "fix f g"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> F; y \\<in> F;\n        x \\<circ> \\<pi> = y \\<circ> \\<pi>\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume fop: \"f \\<circ> \\<pi> = g \\<circ> \\<pi>\""], ["proof (state)\nthis:\n  f \\<circ> \\<pi> = g \\<circ> \\<pi>\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> F; y \\<in> F;\n        x \\<circ> \\<pi> = y \\<circ> \\<pi>\\<rbrakk>\n       \\<Longrightarrow> x = y", "have \"f x = g x\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. f x = g x", "proof (cases \"x \\<in> {0..<n}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<in> {0..<n} \\<Longrightarrow> f x = g x\n 2. x \\<notin> {0..<n} \\<Longrightarrow> f x = g x", "case True"], ["proof (state)\nthis:\n  x \\<in> {0..<n}\n\ngoal (2 subgoals):\n 1. x \\<in> {0..<n} \\<Longrightarrow> f x = g x\n 2. x \\<notin> {0..<n} \\<Longrightarrow> f x = g x", "then"], ["proof (chain)\npicking this:\n  x \\<in> {0..<n}", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> {0..<n}\n\ngoal (1 subgoal):\n 1. f x = g x", "by (metis fop comp_apply p permutes_def)"], ["proof (state)\nthis:\n  f x = g x\n\ngoal (1 subgoal):\n 1. x \\<notin> {0..<n} \\<Longrightarrow> f x = g x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<notin> {0..<n} \\<Longrightarrow> f x = g x", "case False"], ["proof (state)\nthis:\n  x \\<notin> {0..<n}\n\ngoal (1 subgoal):\n 1. x \\<notin> {0..<n} \\<Longrightarrow> f x = g x", "then"], ["proof (chain)\npicking this:\n  x \\<notin> {0..<n}", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<notin> {0..<n}\n\ngoal (1 subgoal):\n 1. f x = g x", "by (metis fop comp_eq_elim p permutes_def)"], ["proof (state)\nthis:\n  f x = g x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f ?x1 = g ?x1\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> F; y \\<in> F;\n        x \\<circ> \\<pi> = y \\<circ> \\<pi>\\<rbrakk>\n       \\<Longrightarrow> x = y", "thus \"f = g\""], ["proof (prove)\nusing this:\n  f ?x1 = g ?x1\n\ngoal (1 subgoal):\n 1. f = g", "by auto"], ["proof (state)\nthis:\n  f = g\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inj_on (\\<lambda>f. f \\<circ> \\<pi>) F\n\ngoal (1 subgoal):\n 1. (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) =\n    (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f i, i))", "have hF: \"?h` F = F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>f. f \\<circ> \\<pi>) ` F = F", "unfolding image_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {y. \\<exists>x\\<in>F. y = x \\<circ> \\<pi>} = F", "proof auto"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa. xa \\<in> F \\<Longrightarrow> xa \\<circ> \\<pi> \\<in> F\n 2. \\<And>x.\n       x \\<in> F \\<Longrightarrow> \\<exists>xa\\<in>F. x = xa \\<circ> \\<pi>", "fix xa"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa. xa \\<in> F \\<Longrightarrow> xa \\<circ> \\<pi> \\<in> F\n 2. \\<And>x.\n       x \\<in> F \\<Longrightarrow> \\<exists>xa\\<in>F. x = xa \\<circ> \\<pi>", "assume xa: \"xa \\<in> F\""], ["proof (state)\nthis:\n  xa \\<in> F\n\ngoal (2 subgoals):\n 1. \\<And>xa. xa \\<in> F \\<Longrightarrow> xa \\<circ> \\<pi> \\<in> F\n 2. \\<And>x.\n       x \\<in> F \\<Longrightarrow> \\<exists>xa\\<in>F. x = xa \\<circ> \\<pi>", "show \"xa \\<circ> \\<pi> \\<in> F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xa \\<circ> \\<pi> \\<in> F", "unfolding o_def F"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. xa (\\<pi> x))\n    \\<in> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n           \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}", "using F PiE p xa"], ["proof (prove)\nusing this:\n  F =\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n  \\<lbrakk>?f \\<in> Pi ?A ?B; ?f ?x \\<in> ?B ?x \\<Longrightarrow> ?Q;\n   ?x \\<notin> ?A \\<Longrightarrow> ?Q\\<rbrakk>\n  \\<Longrightarrow> ?Q\n  \\<pi> permutes {0..<n}\n  xa \\<in> F\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. xa (\\<pi> x))\n    \\<in> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n           \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}", "by (auto, smt F atLeastLessThan_iff mem_Collect_eq p permutes_def xa)"], ["proof (state)\nthis:\n  xa \\<circ> \\<pi> \\<in> F\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> F \\<Longrightarrow> \\<exists>xa\\<in>F. x = xa \\<circ> \\<pi>", "show \"\\<exists>x\\<in>F. xa = x \\<circ> \\<pi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>F. xa = x \\<circ> \\<pi>", "proof (rule bexI[of _ \"xa \\<circ> Hilbert_Choice.inv \\<pi>\"])"], ["proof (state)\ngoal (2 subgoals):\n 1. xa = xa \\<circ> inv \\<pi> \\<circ> \\<pi>\n 2. xa \\<circ> inv \\<pi> \\<in> F", "show \"xa = xa \\<circ> Hilbert_Choice.inv \\<pi> \\<circ> \\<pi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xa = xa \\<circ> inv \\<pi> \\<circ> \\<pi>", "using p"], ["proof (prove)\nusing this:\n  \\<pi> permutes {0..<n}\n\ngoal (1 subgoal):\n 1. xa = xa \\<circ> inv \\<pi> \\<circ> \\<pi>", "by auto"], ["proof (state)\nthis:\n  xa = xa \\<circ> inv \\<pi> \\<circ> \\<pi>\n\ngoal (1 subgoal):\n 1. xa \\<circ> inv \\<pi> \\<in> F", "show \"xa \\<circ> Hilbert_Choice.inv \\<pi> \\<in> F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xa \\<circ> inv \\<pi> \\<in> F", "unfolding o_def F"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. xa (inv \\<pi> x))\n    \\<in> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n           \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}", "using F PiE p xa"], ["proof (prove)\nusing this:\n  F =\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n  \\<lbrakk>?f \\<in> Pi ?A ?B; ?f ?x \\<in> ?B ?x \\<Longrightarrow> ?Q;\n   ?x \\<notin> ?A \\<Longrightarrow> ?Q\\<rbrakk>\n  \\<Longrightarrow> ?Q\n  \\<pi> permutes {0..<n}\n  xa \\<in> F\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. xa (inv \\<pi> x))\n    \\<in> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n           \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}", "by (auto, smt atLeastLessThan_iff permutes_def permutes_less(3))"], ["proof (state)\nthis:\n  xa \\<circ> inv \\<pi> \\<in> F\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>x\\<in>F. xa = x \\<circ> \\<pi>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>f. f \\<circ> \\<pi>) ` F = F\n\ngoal (1 subgoal):\n 1. (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) =\n    (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f i, i))", "have prod_rw: \"(\\<Prod>i = 0..<n. B $$ (f i, i)) = (\\<Prod>i = 0..<n. B $$ (f (\\<pi> i), \\<pi> i))\" if \"f\\<in>F\" for f"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<n. B $$ (f i, i)) =\n    (\\<Prod>i = 0..<n. B $$ (f (\\<pi> i), \\<pi> i))", "using prod.permute[OF p]"], ["proof (prove)\nusing this:\n  prod ?g {0..<n} = prod (?g \\<circ> \\<pi>) {0..<n}\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<n. B $$ (f i, i)) =\n    (\\<Prod>i = 0..<n. B $$ (f (\\<pi> i), \\<pi> i))", "by auto"], ["proof (state)\nthis:\n  ?f1 \\<in> F \\<Longrightarrow>\n  (\\<Prod>i = 0..<n. B $$ (?f1 i, i)) =\n  (\\<Prod>i = 0..<n. B $$ (?f1 (\\<pi> i), \\<pi> i))\n\ngoal (1 subgoal):\n 1. (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) =\n    (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f i, i))", "let ?g = \"\\<lambda>f. (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i))\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) =\n    (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f i, i))", "have \"(\\<Sum>f\\<in>F. (\\<Prod>i = 0..<n. B $$ (f i, i))) = (\\<Sum>f\\<in>F. (\\<Prod>i = 0..<n. B $$ (f (\\<pi> i), \\<pi> i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f i, i)) =\n    (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f (\\<pi> i), \\<pi> i))", "using prod_rw"], ["proof (prove)\nusing this:\n  ?f1 \\<in> F \\<Longrightarrow>\n  (\\<Prod>i = 0..<n. B $$ (?f1 i, i)) =\n  (\\<Prod>i = 0..<n. B $$ (?f1 (\\<pi> i), \\<pi> i))\n\ngoal (1 subgoal):\n 1. (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f i, i)) =\n    (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f (\\<pi> i), \\<pi> i))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f i, i)) =\n  (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f (\\<pi> i), \\<pi> i))\n\ngoal (1 subgoal):\n 1. (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) =\n    (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f i, i))", "also"], ["proof (state)\nthis:\n  (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f i, i)) =\n  (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f (\\<pi> i), \\<pi> i))\n\ngoal (1 subgoal):\n 1. (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) =\n    (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f i, i))", "have \"... = (\\<Sum>f\\<in>(?h`F). \\<Prod>i = 0..<n. B $$ (f i, \\<pi> i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f (\\<pi> i), \\<pi> i)) =\n    (\\<Sum>f\\<in>(\\<lambda>f. f \\<circ> \\<pi>) ` F.\n       \\<Prod>i = 0..<n. B $$ (f i, \\<pi> i))", "using sum.reindex[OF inj_on_F, of ?g]"], ["proof (prove)\nusing this:\n  (\\<Sum>f\\<in>(\\<lambda>f. f \\<circ> \\<pi>) ` F.\n     \\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) =\n  sum ((\\<lambda>f. \\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) \\<circ>\n       (\\<lambda>f. f \\<circ> \\<pi>))\n   F\n\ngoal (1 subgoal):\n 1. (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f (\\<pi> i), \\<pi> i)) =\n    (\\<Sum>f\\<in>(\\<lambda>f. f \\<circ> \\<pi>) ` F.\n       \\<Prod>i = 0..<n. B $$ (f i, \\<pi> i))", "unfolding hF"], ["proof (prove)\nusing this:\n  (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) =\n  sum ((\\<lambda>f. \\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) \\<circ>\n       (\\<lambda>f. f \\<circ> \\<pi>))\n   F\n\ngoal (1 subgoal):\n 1. (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f (\\<pi> i), \\<pi> i)) =\n    (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f i, \\<pi> i))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f (\\<pi> i), \\<pi> i)) =\n  (\\<Sum>f\\<in>(\\<lambda>f. f \\<circ> \\<pi>) ` F.\n     \\<Prod>i = 0..<n. B $$ (f i, \\<pi> i))\n\ngoal (1 subgoal):\n 1. (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) =\n    (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f i, i))", "also"], ["proof (state)\nthis:\n  (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f (\\<pi> i), \\<pi> i)) =\n  (\\<Sum>f\\<in>(\\<lambda>f. f \\<circ> \\<pi>) ` F.\n     \\<Prod>i = 0..<n. B $$ (f i, \\<pi> i))\n\ngoal (1 subgoal):\n 1. (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) =\n    (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f i, i))", "have \"... = (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f i, \\<pi> i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>f\\<in>(\\<lambda>f. f \\<circ> \\<pi>) ` F.\n       \\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) =\n    (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f i, \\<pi> i))", "unfolding hF"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) =\n    (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f i, \\<pi> i))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>f\\<in>(\\<lambda>f. f \\<circ> \\<pi>) ` F.\n     \\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) =\n  (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f i, \\<pi> i))\n\ngoal (1 subgoal):\n 1. (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) =\n    (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f i, i))", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f i, i)) =\n  (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f i, \\<pi> i))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f i, i)) =\n  (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f i, \\<pi> i))\n\ngoal (1 subgoal):\n 1. (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) =\n    (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f i, i))", ".."], ["proof (state)\nthis:\n  (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) =\n  (\\<Sum>f\\<in>F. \\<Prod>i = 0..<n. B $$ (f i, i))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma detAB_Znm_aux:\n  assumes F: \"F= {f. f \\<in> {0..<n} \\<rightarrow> {0..<m} \\<and> (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)}\"\n  shows\"(\\<Sum>\\<pi> | \\<pi> permutes {0..<n}. (\\<Sum>f\\<in>F. prod (\\<lambda>i. B $$ (f i, i)) {0..<n}\n        * (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f i)))))\n    = (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}. \\<Sum>f\\<in>F. (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i))\n        * (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       \\<Sum>f\\<in>F.\n         (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n         (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f i)))) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       \\<Sum>f\\<in>F.\n         (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) *\n         (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i))))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       \\<Sum>f\\<in>F.\n         (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n         (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f i)))) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       \\<Sum>f\\<in>F.\n         (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) *\n         (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i))))", "have \"(\\<Sum>\\<pi> | \\<pi> permutes {0..<n}. (\\<Sum>f\\<in>F. prod (\\<lambda>i. B $$ (f i, i)) {0..<n}\n      * (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f i))))) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}. \\<Sum>f\\<in>F. signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (f i, i) * A $$ (\\<pi> i, f i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       \\<Sum>f\\<in>F.\n         (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n         (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f i)))) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       \\<Sum>f\\<in>F.\n         signof \\<pi> *\n         (\\<Prod>i = 0..<n. B $$ (f i, i) * A $$ (\\<pi> i, f i)))", "by (smt mult.left_commute prod.cong prod.distrib sum.cong)"], ["proof (state)\nthis:\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     \\<Sum>f\\<in>F.\n       (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n       (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f i)))) =\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     \\<Sum>f\\<in>F.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. B $$ (f i, i) * A $$ (\\<pi> i, f i)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       \\<Sum>f\\<in>F.\n         (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n         (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f i)))) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       \\<Sum>f\\<in>F.\n         (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) *\n         (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i))))", "also"], ["proof (state)\nthis:\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     \\<Sum>f\\<in>F.\n       (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n       (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f i)))) =\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     \\<Sum>f\\<in>F.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. B $$ (f i, i) * A $$ (\\<pi> i, f i)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       \\<Sum>f\\<in>F.\n         (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n         (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f i)))) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       \\<Sum>f\\<in>F.\n         (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) *\n         (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i))))", "have \"... = (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}. \\<Sum>f\\<in>F. signof (Hilbert_Choice.inv \\<pi>)\n    * (\\<Prod>i = 0..<n. B $$ (f i, i) * A $$ (Hilbert_Choice.inv \\<pi> i, f i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       \\<Sum>f\\<in>F.\n         signof \\<pi> *\n         (\\<Prod>i = 0..<n. B $$ (f i, i) * A $$ (\\<pi> i, f i))) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       \\<Sum>f\\<in>F.\n         signof (inv \\<pi>) *\n         (\\<Prod>i = 0..<n. B $$ (f i, i) * A $$ (inv \\<pi> i, f i)))", "by (rule sum_permutations_inverse)"], ["proof (state)\nthis:\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     \\<Sum>f\\<in>F.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. B $$ (f i, i) * A $$ (\\<pi> i, f i))) =\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     \\<Sum>f\\<in>F.\n       signof (inv \\<pi>) *\n       (\\<Prod>i = 0..<n. B $$ (f i, i) * A $$ (inv \\<pi> i, f i)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       \\<Sum>f\\<in>F.\n         (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n         (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f i)))) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       \\<Sum>f\\<in>F.\n         (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) *\n         (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i))))", "also"], ["proof (state)\nthis:\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     \\<Sum>f\\<in>F.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. B $$ (f i, i) * A $$ (\\<pi> i, f i))) =\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     \\<Sum>f\\<in>F.\n       signof (inv \\<pi>) *\n       (\\<Prod>i = 0..<n. B $$ (f i, i) * A $$ (inv \\<pi> i, f i)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       \\<Sum>f\\<in>F.\n         (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n         (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f i)))) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       \\<Sum>f\\<in>F.\n         (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) *\n         (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i))))", "have \"... = (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}. \\<Sum>f\\<in>F. signof (Hilbert_Choice.inv \\<pi>)\n    * (\\<Prod>i = 0..<n. B $$ (f (\\<pi> i), (\\<pi> i)) * A $$ (Hilbert_Choice.inv \\<pi> (\\<pi> i), f (\\<pi> i))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       \\<Sum>f\\<in>F.\n         signof (inv \\<pi>) *\n         (\\<Prod>i = 0..<n. B $$ (f i, i) * A $$ (inv \\<pi> i, f i))) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       \\<Sum>f\\<in>F.\n         signof (inv \\<pi>) *\n         (\\<Prod>i = 0..<n.\n             B $$ (f (\\<pi> i), \\<pi> i) *\n             A $$ (inv \\<pi> (\\<pi> i), f (\\<pi> i))))", "proof (rule sum.cong)"], ["proof (state)\ngoal (2 subgoals):\n 1. {\\<pi>. \\<pi> permutes {0..<n}} = {\\<pi>. \\<pi> permutes {0..<n}}\n 2. \\<And>x.\n       x \\<in> {\\<pi>. \\<pi> permutes {0..<n}} \\<Longrightarrow>\n       (\\<Sum>f\\<in>F.\n          signof (inv x) *\n          (\\<Prod>i = 0..<n. B $$ (f i, i) * A $$ (inv x i, f i))) =\n       (\\<Sum>f\\<in>F.\n          signof (inv x) *\n          (\\<Prod>i = 0..<n.\n              B $$ (f (x i), x i) * A $$ (inv x (x i), f (x i))))", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. {\\<pi>. \\<pi> permutes {0..<n}} = {\\<pi>. \\<pi> permutes {0..<n}}\n 2. \\<And>x.\n       x \\<in> {\\<pi>. \\<pi> permutes {0..<n}} \\<Longrightarrow>\n       (\\<Sum>f\\<in>F.\n          signof (inv x) *\n          (\\<Prod>i = 0..<n. B $$ (f i, i) * A $$ (inv x i, f i))) =\n       (\\<Sum>f\\<in>F.\n          signof (inv x) *\n          (\\<Prod>i = 0..<n.\n              B $$ (f (x i), x i) * A $$ (inv x (x i), f (x i))))", "assume x: \"x \\<in> {\\<pi>. \\<pi> permutes {0..<n}}\""], ["proof (state)\nthis:\n  x \\<in> {\\<pi>. \\<pi> permutes {0..<n}}\n\ngoal (2 subgoals):\n 1. {\\<pi>. \\<pi> permutes {0..<n}} = {\\<pi>. \\<pi> permutes {0..<n}}\n 2. \\<And>x.\n       x \\<in> {\\<pi>. \\<pi> permutes {0..<n}} \\<Longrightarrow>\n       (\\<Sum>f\\<in>F.\n          signof (inv x) *\n          (\\<Prod>i = 0..<n. B $$ (f i, i) * A $$ (inv x i, f i))) =\n       (\\<Sum>f\\<in>F.\n          signof (inv x) *\n          (\\<Prod>i = 0..<n.\n              B $$ (f (x i), x i) * A $$ (inv x (x i), f (x i))))", "let ?inv_x = \"Hilbert_Choice.inv x\""], ["proof (state)\ngoal (2 subgoals):\n 1. {\\<pi>. \\<pi> permutes {0..<n}} = {\\<pi>. \\<pi> permutes {0..<n}}\n 2. \\<And>x.\n       x \\<in> {\\<pi>. \\<pi> permutes {0..<n}} \\<Longrightarrow>\n       (\\<Sum>f\\<in>F.\n          signof (inv x) *\n          (\\<Prod>i = 0..<n. B $$ (f i, i) * A $$ (inv x i, f i))) =\n       (\\<Sum>f\\<in>F.\n          signof (inv x) *\n          (\\<Prod>i = 0..<n.\n              B $$ (f (x i), x i) * A $$ (inv x (x i), f (x i))))", "have p: \"x permutes {0..<n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x permutes {0..<n}", "using x"], ["proof (prove)\nusing this:\n  x \\<in> {\\<pi>. \\<pi> permutes {0..<n}}\n\ngoal (1 subgoal):\n 1. x permutes {0..<n}", "by simp"], ["proof (state)\nthis:\n  x permutes {0..<n}\n\ngoal (2 subgoals):\n 1. {\\<pi>. \\<pi> permutes {0..<n}} = {\\<pi>. \\<pi> permutes {0..<n}}\n 2. \\<And>x.\n       x \\<in> {\\<pi>. \\<pi> permutes {0..<n}} \\<Longrightarrow>\n       (\\<Sum>f\\<in>F.\n          signof (inv x) *\n          (\\<Prod>i = 0..<n. B $$ (f i, i) * A $$ (inv x i, f i))) =\n       (\\<Sum>f\\<in>F.\n          signof (inv x) *\n          (\\<Prod>i = 0..<n.\n              B $$ (f (x i), x i) * A $$ (inv x (x i), f (x i))))", "have prod_rw: \"(\\<Prod>i = 0..<n. B $$ (f i, i) * A $$ (?inv_x i, f i))\n        = (\\<Prod>i = 0..<n. B $$ (f (x i), x i) * A $$ (?inv_x (x i), f (x i)))\" if \"f \\<in> F\" for f"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<n. B $$ (f i, i) * A $$ (inv x i, f i)) =\n    (\\<Prod>i = 0..<n. B $$ (f (x i), x i) * A $$ (inv x (x i), f (x i)))", "using prod.permute[OF p]"], ["proof (prove)\nusing this:\n  prod ?g {0..<n} = prod (?g \\<circ> x) {0..<n}\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<n. B $$ (f i, i) * A $$ (inv x i, f i)) =\n    (\\<Prod>i = 0..<n. B $$ (f (x i), x i) * A $$ (inv x (x i), f (x i)))", "by auto"], ["proof (state)\nthis:\n  ?f \\<in> F \\<Longrightarrow>\n  (\\<Prod>i = 0..<n. B $$ (?f i, i) * A $$ (inv x i, ?f i)) =\n  (\\<Prod>i = 0..<n. B $$ (?f (x i), x i) * A $$ (inv x (x i), ?f (x i)))\n\ngoal (2 subgoals):\n 1. {\\<pi>. \\<pi> permutes {0..<n}} = {\\<pi>. \\<pi> permutes {0..<n}}\n 2. \\<And>x.\n       x \\<in> {\\<pi>. \\<pi> permutes {0..<n}} \\<Longrightarrow>\n       (\\<Sum>f\\<in>F.\n          signof (inv x) *\n          (\\<Prod>i = 0..<n. B $$ (f i, i) * A $$ (inv x i, f i))) =\n       (\\<Sum>f\\<in>F.\n          signof (inv x) *\n          (\\<Prod>i = 0..<n.\n              B $$ (f (x i), x i) * A $$ (inv x (x i), f (x i))))", "then"], ["proof (chain)\npicking this:\n  ?f \\<in> F \\<Longrightarrow>\n  (\\<Prod>i = 0..<n. B $$ (?f i, i) * A $$ (inv x i, ?f i)) =\n  (\\<Prod>i = 0..<n. B $$ (?f (x i), x i) * A $$ (inv x (x i), ?f (x i)))", "show \"(\\<Sum>f\\<in>F. signof ?inv_x * (\\<Prod>i = 0..<n. B $$ (f i, i) * A $$ (?inv_x i, f i))) =\n         (\\<Sum>f\\<in>F. signof ?inv_x * (\\<Prod>i = 0..<n. B $$ (f (x i), x i) * A $$ (?inv_x (x i), f (x i))))\""], ["proof (prove)\nusing this:\n  ?f \\<in> F \\<Longrightarrow>\n  (\\<Prod>i = 0..<n. B $$ (?f i, i) * A $$ (inv x i, ?f i)) =\n  (\\<Prod>i = 0..<n. B $$ (?f (x i), x i) * A $$ (inv x (x i), ?f (x i)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>f\\<in>F.\n       signof (inv x) *\n       (\\<Prod>i = 0..<n. B $$ (f i, i) * A $$ (inv x i, f i))) =\n    (\\<Sum>f\\<in>F.\n       signof (inv x) *\n       (\\<Prod>i = 0..<n.\n           B $$ (f (x i), x i) * A $$ (inv x (x i), f (x i))))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>f\\<in>F.\n     signof (inv x) *\n     (\\<Prod>i = 0..<n. B $$ (f i, i) * A $$ (inv x i, f i))) =\n  (\\<Sum>f\\<in>F.\n     signof (inv x) *\n     (\\<Prod>i = 0..<n. B $$ (f (x i), x i) * A $$ (inv x (x i), f (x i))))\n\ngoal (1 subgoal):\n 1. {\\<pi>. \\<pi> permutes {0..<n}} = {\\<pi>. \\<pi> permutes {0..<n}}", "qed (simp)"], ["proof (state)\nthis:\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     \\<Sum>f\\<in>F.\n       signof (inv \\<pi>) *\n       (\\<Prod>i = 0..<n. B $$ (f i, i) * A $$ (inv \\<pi> i, f i))) =\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     \\<Sum>f\\<in>F.\n       signof (inv \\<pi>) *\n       (\\<Prod>i = 0..<n.\n           B $$ (f (\\<pi> i), \\<pi> i) *\n           A $$ (inv \\<pi> (\\<pi> i), f (\\<pi> i))))\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       \\<Sum>f\\<in>F.\n         (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n         (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f i)))) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       \\<Sum>f\\<in>F.\n         (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) *\n         (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i))))", "also"], ["proof (state)\nthis:\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     \\<Sum>f\\<in>F.\n       signof (inv \\<pi>) *\n       (\\<Prod>i = 0..<n. B $$ (f i, i) * A $$ (inv \\<pi> i, f i))) =\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     \\<Sum>f\\<in>F.\n       signof (inv \\<pi>) *\n       (\\<Prod>i = 0..<n.\n           B $$ (f (\\<pi> i), \\<pi> i) *\n           A $$ (inv \\<pi> (\\<pi> i), f (\\<pi> i))))\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       \\<Sum>f\\<in>F.\n         (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n         (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f i)))) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       \\<Sum>f\\<in>F.\n         (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) *\n         (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i))))", "have \"... = (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}. \\<Sum>f\\<in>F. signof \\<pi>\n    * (\\<Prod>i = 0..<n. B $$ (f (\\<pi> i), (\\<pi> i)) * A $$ (i, f (\\<pi> i))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       \\<Sum>f\\<in>F.\n         signof (inv \\<pi>) *\n         (\\<Prod>i = 0..<n.\n             B $$ (f (\\<pi> i), \\<pi> i) *\n             A $$ (inv \\<pi> (\\<pi> i), f (\\<pi> i)))) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       \\<Sum>f\\<in>F.\n         signof \\<pi> *\n         (\\<Prod>i = 0..<n.\n             B $$ (f (\\<pi> i), \\<pi> i) * A $$ (i, f (\\<pi> i))))", "by (rule sum.cong, auto, rule sum.cong, auto)\n        (metis (no_types, lifting) finite_atLeastLessThan signof_inv)"], ["proof (state)\nthis:\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     \\<Sum>f\\<in>F.\n       signof (inv \\<pi>) *\n       (\\<Prod>i = 0..<n.\n           B $$ (f (\\<pi> i), \\<pi> i) *\n           A $$ (inv \\<pi> (\\<pi> i), f (\\<pi> i)))) =\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     \\<Sum>f\\<in>F.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n.\n           B $$ (f (\\<pi> i), \\<pi> i) * A $$ (i, f (\\<pi> i))))\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       \\<Sum>f\\<in>F.\n         (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n         (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f i)))) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       \\<Sum>f\\<in>F.\n         (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) *\n         (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i))))", "also"], ["proof (state)\nthis:\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     \\<Sum>f\\<in>F.\n       signof (inv \\<pi>) *\n       (\\<Prod>i = 0..<n.\n           B $$ (f (\\<pi> i), \\<pi> i) *\n           A $$ (inv \\<pi> (\\<pi> i), f (\\<pi> i)))) =\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     \\<Sum>f\\<in>F.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n.\n           B $$ (f (\\<pi> i), \\<pi> i) * A $$ (i, f (\\<pi> i))))\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       \\<Sum>f\\<in>F.\n         (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n         (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f i)))) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       \\<Sum>f\\<in>F.\n         (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) *\n         (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i))))", "have \"... = (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}. \\<Sum>f\\<in>F. signof \\<pi>\n    * (\\<Prod>i = 0..<n. B $$ (f i, (\\<pi> i)) * A $$ (i, f i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       \\<Sum>f\\<in>F.\n         signof \\<pi> *\n         (\\<Prod>i = 0..<n.\n             B $$ (f (\\<pi> i), \\<pi> i) * A $$ (i, f (\\<pi> i)))) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       \\<Sum>f\\<in>F.\n         signof \\<pi> *\n         (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i) * A $$ (i, f i)))", "proof (rule sum.cong)"], ["proof (state)\ngoal (2 subgoals):\n 1. {\\<pi>. \\<pi> permutes {0..<n}} = {\\<pi>. \\<pi> permutes {0..<n}}\n 2. \\<And>x.\n       x \\<in> {\\<pi>. \\<pi> permutes {0..<n}} \\<Longrightarrow>\n       (\\<Sum>f\\<in>F.\n          signof x *\n          (\\<Prod>i = 0..<n. B $$ (f (x i), x i) * A $$ (i, f (x i)))) =\n       (\\<Sum>f\\<in>F.\n          signof x * (\\<Prod>i = 0..<n. B $$ (f i, x i) * A $$ (i, f i)))", "fix \\<pi>"], ["proof (state)\ngoal (2 subgoals):\n 1. {\\<pi>. \\<pi> permutes {0..<n}} = {\\<pi>. \\<pi> permutes {0..<n}}\n 2. \\<And>x.\n       x \\<in> {\\<pi>. \\<pi> permutes {0..<n}} \\<Longrightarrow>\n       (\\<Sum>f\\<in>F.\n          signof x *\n          (\\<Prod>i = 0..<n. B $$ (f (x i), x i) * A $$ (i, f (x i)))) =\n       (\\<Sum>f\\<in>F.\n          signof x * (\\<Prod>i = 0..<n. B $$ (f i, x i) * A $$ (i, f i)))", "assume p: \"\\<pi> \\<in> {\\<pi>. \\<pi> permutes {0..<n}}\""], ["proof (state)\nthis:\n  \\<pi> \\<in> {\\<pi>. \\<pi> permutes {0..<n}}\n\ngoal (2 subgoals):\n 1. {\\<pi>. \\<pi> permutes {0..<n}} = {\\<pi>. \\<pi> permutes {0..<n}}\n 2. \\<And>x.\n       x \\<in> {\\<pi>. \\<pi> permutes {0..<n}} \\<Longrightarrow>\n       (\\<Sum>f\\<in>F.\n          signof x *\n          (\\<Prod>i = 0..<n. B $$ (f (x i), x i) * A $$ (i, f (x i)))) =\n       (\\<Sum>f\\<in>F.\n          signof x * (\\<Prod>i = 0..<n. B $$ (f i, x i) * A $$ (i, f i)))", "hence p: \"\\<pi> permutes {0..<n}\""], ["proof (prove)\nusing this:\n  \\<pi> \\<in> {\\<pi>. \\<pi> permutes {0..<n}}\n\ngoal (1 subgoal):\n 1. \\<pi> permutes {0..<n}", "by auto"], ["proof (state)\nthis:\n  \\<pi> permutes {0..<n}\n\ngoal (2 subgoals):\n 1. {\\<pi>. \\<pi> permutes {0..<n}} = {\\<pi>. \\<pi> permutes {0..<n}}\n 2. \\<And>x.\n       x \\<in> {\\<pi>. \\<pi> permutes {0..<n}} \\<Longrightarrow>\n       (\\<Sum>f\\<in>F.\n          signof x *\n          (\\<Prod>i = 0..<n. B $$ (f (x i), x i) * A $$ (i, f (x i)))) =\n       (\\<Sum>f\\<in>F.\n          signof x * (\\<Prod>i = 0..<n. B $$ (f i, x i) * A $$ (i, f i)))", "let ?inv_pi = \"(Hilbert_Choice.inv \\<pi>)\""], ["proof (state)\ngoal (2 subgoals):\n 1. {\\<pi>. \\<pi> permutes {0..<n}} = {\\<pi>. \\<pi> permutes {0..<n}}\n 2. \\<And>x.\n       x \\<in> {\\<pi>. \\<pi> permutes {0..<n}} \\<Longrightarrow>\n       (\\<Sum>f\\<in>F.\n          signof x *\n          (\\<Prod>i = 0..<n. B $$ (f (x i), x i) * A $$ (i, f (x i)))) =\n       (\\<Sum>f\\<in>F.\n          signof x * (\\<Prod>i = 0..<n. B $$ (f i, x i) * A $$ (i, f i)))", "let ?h = \"(\\<lambda>f. f \\<circ> (Hilbert_Choice.inv \\<pi>))\""], ["proof (state)\ngoal (2 subgoals):\n 1. {\\<pi>. \\<pi> permutes {0..<n}} = {\\<pi>. \\<pi> permutes {0..<n}}\n 2. \\<And>x.\n       x \\<in> {\\<pi>. \\<pi> permutes {0..<n}} \\<Longrightarrow>\n       (\\<Sum>f\\<in>F.\n          signof x *\n          (\\<Prod>i = 0..<n. B $$ (f (x i), x i) * A $$ (i, f (x i)))) =\n       (\\<Sum>f\\<in>F.\n          signof x * (\\<Prod>i = 0..<n. B $$ (f i, x i) * A $$ (i, f i)))", "have inj_on_F: \"inj_on ?h F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>f. f \\<circ> inv \\<pi>) F", "proof (rule inj_onI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> F; y \\<in> F;\n        x \\<circ> inv \\<pi> = y \\<circ> inv \\<pi>\\<rbrakk>\n       \\<Longrightarrow> x = y", "fix f g"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> F; y \\<in> F;\n        x \\<circ> inv \\<pi> = y \\<circ> inv \\<pi>\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume fop: \"f \\<circ> ?inv_pi = g \\<circ> ?inv_pi\""], ["proof (state)\nthis:\n  f \\<circ> inv \\<pi> = g \\<circ> inv \\<pi>\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> F; y \\<in> F;\n        x \\<circ> inv \\<pi> = y \\<circ> inv \\<pi>\\<rbrakk>\n       \\<Longrightarrow> x = y", "have \"f x = g x\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. f x = g x", "proof (cases \"x \\<in> {0..<n}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x \\<in> {0..<n} \\<Longrightarrow> f x = g x\n 2. x \\<notin> {0..<n} \\<Longrightarrow> f x = g x", "case True"], ["proof (state)\nthis:\n  x \\<in> {0..<n}\n\ngoal (2 subgoals):\n 1. x \\<in> {0..<n} \\<Longrightarrow> f x = g x\n 2. x \\<notin> {0..<n} \\<Longrightarrow> f x = g x", "then"], ["proof (chain)\npicking this:\n  x \\<in> {0..<n}", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> {0..<n}\n\ngoal (1 subgoal):\n 1. f x = g x", "by (metis fop o_inv_o_cancel p permutes_inj)"], ["proof (state)\nthis:\n  f x = g x\n\ngoal (1 subgoal):\n 1. x \\<notin> {0..<n} \\<Longrightarrow> f x = g x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<notin> {0..<n} \\<Longrightarrow> f x = g x", "case False"], ["proof (state)\nthis:\n  x \\<notin> {0..<n}\n\ngoal (1 subgoal):\n 1. x \\<notin> {0..<n} \\<Longrightarrow> f x = g x", "then"], ["proof (chain)\npicking this:\n  x \\<notin> {0..<n}", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<notin> {0..<n}\n\ngoal (1 subgoal):\n 1. f x = g x", "by (metis fop o_inv_o_cancel p permutes_inj)"], ["proof (state)\nthis:\n  f x = g x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f ?x1 = g ?x1\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> F; y \\<in> F;\n        x \\<circ> inv \\<pi> = y \\<circ> inv \\<pi>\\<rbrakk>\n       \\<Longrightarrow> x = y", "thus \"f = g\""], ["proof (prove)\nusing this:\n  f ?x1 = g ?x1\n\ngoal (1 subgoal):\n 1. f = g", "by auto"], ["proof (state)\nthis:\n  f = g\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inj_on (\\<lambda>f. f \\<circ> inv \\<pi>) F\n\ngoal (2 subgoals):\n 1. {\\<pi>. \\<pi> permutes {0..<n}} = {\\<pi>. \\<pi> permutes {0..<n}}\n 2. \\<And>x.\n       x \\<in> {\\<pi>. \\<pi> permutes {0..<n}} \\<Longrightarrow>\n       (\\<Sum>f\\<in>F.\n          signof x *\n          (\\<Prod>i = 0..<n. B $$ (f (x i), x i) * A $$ (i, f (x i)))) =\n       (\\<Sum>f\\<in>F.\n          signof x * (\\<Prod>i = 0..<n. B $$ (f i, x i) * A $$ (i, f i)))", "have hF: \"?h` F = F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>f. f \\<circ> inv \\<pi>) ` F = F", "unfolding image_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {y. \\<exists>x\\<in>F. y = x \\<circ> inv \\<pi>} = F", "proof auto"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa. xa \\<in> F \\<Longrightarrow> xa \\<circ> inv \\<pi> \\<in> F\n 2. \\<And>x.\n       x \\<in> F \\<Longrightarrow>\n       \\<exists>xa\\<in>F. x = xa \\<circ> inv \\<pi>", "fix xa"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa. xa \\<in> F \\<Longrightarrow> xa \\<circ> inv \\<pi> \\<in> F\n 2. \\<And>x.\n       x \\<in> F \\<Longrightarrow>\n       \\<exists>xa\\<in>F. x = xa \\<circ> inv \\<pi>", "assume xa: \"xa \\<in> F\""], ["proof (state)\nthis:\n  xa \\<in> F\n\ngoal (2 subgoals):\n 1. \\<And>xa. xa \\<in> F \\<Longrightarrow> xa \\<circ> inv \\<pi> \\<in> F\n 2. \\<And>x.\n       x \\<in> F \\<Longrightarrow>\n       \\<exists>xa\\<in>F. x = xa \\<circ> inv \\<pi>", "show \"xa \\<circ> ?inv_pi \\<in> F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xa \\<circ> inv \\<pi> \\<in> F", "unfolding o_def F"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. xa (inv \\<pi> x))\n    \\<in> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n           \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}", "using F PiE p xa"], ["proof (prove)\nusing this:\n  F =\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n  \\<lbrakk>?f \\<in> Pi ?A ?B; ?f ?x \\<in> ?B ?x \\<Longrightarrow> ?Q;\n   ?x \\<notin> ?A \\<Longrightarrow> ?Q\\<rbrakk>\n  \\<Longrightarrow> ?Q\n  \\<pi> permutes {0..<n}\n  xa \\<in> F\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. xa (inv \\<pi> x))\n    \\<in> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n           \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}", "by (auto, smt atLeastLessThan_iff permutes_def permutes_less(3))"], ["proof (state)\nthis:\n  xa \\<circ> inv \\<pi> \\<in> F\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> F \\<Longrightarrow>\n       \\<exists>xa\\<in>F. x = xa \\<circ> inv \\<pi>", "show \"\\<exists>x\\<in>F. xa = x \\<circ> ?inv_pi\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>F. xa = x \\<circ> inv \\<pi>", "proof (rule bexI[of _ \"xa \\<circ> \\<pi>\"])"], ["proof (state)\ngoal (2 subgoals):\n 1. xa = xa \\<circ> \\<pi> \\<circ> inv \\<pi>\n 2. xa \\<circ> \\<pi> \\<in> F", "show \"xa = xa \\<circ> \\<pi> \\<circ> Hilbert_Choice.inv \\<pi> \""], ["proof (prove)\ngoal (1 subgoal):\n 1. xa = xa \\<circ> \\<pi> \\<circ> inv \\<pi>", "using p"], ["proof (prove)\nusing this:\n  \\<pi> permutes {0..<n}\n\ngoal (1 subgoal):\n 1. xa = xa \\<circ> \\<pi> \\<circ> inv \\<pi>", "by auto"], ["proof (state)\nthis:\n  xa = xa \\<circ> \\<pi> \\<circ> inv \\<pi>\n\ngoal (1 subgoal):\n 1. xa \\<circ> \\<pi> \\<in> F", "show \"xa \\<circ> \\<pi> \\<in> F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xa \\<circ> \\<pi> \\<in> F", "unfolding o_def F"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>x. xa (\\<pi> x))\n    \\<in> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n           \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}", "using F PiE p xa"], ["proof (prove)\nusing this:\n  F =\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n  \\<lbrakk>?f \\<in> Pi ?A ?B; ?f ?x \\<in> ?B ?x \\<Longrightarrow> ?Q;\n   ?x \\<notin> ?A \\<Longrightarrow> ?Q\\<rbrakk>\n  \\<Longrightarrow> ?Q\n  \\<pi> permutes {0..<n}\n  xa \\<in> F\n\ngoal (1 subgoal):\n 1. (\\<lambda>x. xa (\\<pi> x))\n    \\<in> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n           \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}", "by (auto, smt atLeastLessThan_iff permutes_def permutes_less(3))"], ["proof (state)\nthis:\n  xa \\<circ> \\<pi> \\<in> F\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>x\\<in>F. xa = x \\<circ> inv \\<pi>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>f. f \\<circ> inv \\<pi>) ` F = F\n\ngoal (2 subgoals):\n 1. {\\<pi>. \\<pi> permutes {0..<n}} = {\\<pi>. \\<pi> permutes {0..<n}}\n 2. \\<And>x.\n       x \\<in> {\\<pi>. \\<pi> permutes {0..<n}} \\<Longrightarrow>\n       (\\<Sum>f\\<in>F.\n          signof x *\n          (\\<Prod>i = 0..<n. B $$ (f (x i), x i) * A $$ (i, f (x i)))) =\n       (\\<Sum>f\\<in>F.\n          signof x * (\\<Prod>i = 0..<n. B $$ (f i, x i) * A $$ (i, f i)))", "let ?g = \"\\<lambda>f. signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (f (\\<pi> i), \\<pi> i) * A $$ (i, f (\\<pi> i)))\""], ["proof (state)\ngoal (2 subgoals):\n 1. {\\<pi>. \\<pi> permutes {0..<n}} = {\\<pi>. \\<pi> permutes {0..<n}}\n 2. \\<And>x.\n       x \\<in> {\\<pi>. \\<pi> permutes {0..<n}} \\<Longrightarrow>\n       (\\<Sum>f\\<in>F.\n          signof x *\n          (\\<Prod>i = 0..<n. B $$ (f (x i), x i) * A $$ (i, f (x i)))) =\n       (\\<Sum>f\\<in>F.\n          signof x * (\\<Prod>i = 0..<n. B $$ (f i, x i) * A $$ (i, f i)))", "show \"(\\<Sum>f\\<in>F. signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (f (\\<pi> i), \\<pi> i) * A $$ (i, f (\\<pi> i)))) =\n         (\\<Sum>f\\<in>F. signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i) * A $$ (i, f i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>f\\<in>F.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n.\n           B $$ (f (\\<pi> i), \\<pi> i) * A $$ (i, f (\\<pi> i)))) =\n    (\\<Sum>f\\<in>F.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i) * A $$ (i, f i)))", "using sum.reindex[OF inj_on_F, of \"?g\"] p"], ["proof (prove)\nusing this:\n  (\\<Sum>f\\<in>(\\<lambda>f. f \\<circ> inv \\<pi>) ` F.\n     signof \\<pi> *\n     (\\<Prod>i = 0..<n.\n         B $$ (f (\\<pi> i), \\<pi> i) * A $$ (i, f (\\<pi> i)))) =\n  sum ((\\<lambda>f.\n           signof \\<pi> *\n           (\\<Prod>i = 0..<n.\n               B $$ (f (\\<pi> i), \\<pi> i) * A $$ (i, f (\\<pi> i)))) \\<circ>\n       (\\<lambda>f. f \\<circ> inv \\<pi>))\n   F\n  \\<pi> permutes {0..<n}\n\ngoal (1 subgoal):\n 1. (\\<Sum>f\\<in>F.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n.\n           B $$ (f (\\<pi> i), \\<pi> i) * A $$ (i, f (\\<pi> i)))) =\n    (\\<Sum>f\\<in>F.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i) * A $$ (i, f i)))", "unfolding hF"], ["proof (prove)\nusing this:\n  (\\<Sum>f\\<in>F.\n     signof \\<pi> *\n     (\\<Prod>i = 0..<n.\n         B $$ (f (\\<pi> i), \\<pi> i) * A $$ (i, f (\\<pi> i)))) =\n  sum ((\\<lambda>f.\n           signof \\<pi> *\n           (\\<Prod>i = 0..<n.\n               B $$ (f (\\<pi> i), \\<pi> i) * A $$ (i, f (\\<pi> i)))) \\<circ>\n       (\\<lambda>f. f \\<circ> inv \\<pi>))\n   F\n  \\<pi> permutes {0..<n}\n\ngoal (1 subgoal):\n 1. (\\<Sum>f\\<in>F.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n.\n           B $$ (f (\\<pi> i), \\<pi> i) * A $$ (i, f (\\<pi> i)))) =\n    (\\<Sum>f\\<in>F.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i) * A $$ (i, f i)))", "unfolding o_def"], ["proof (prove)\nusing this:\n  (\\<Sum>f\\<in>F.\n     signof \\<pi> *\n     (\\<Prod>i = 0..<n.\n         B $$ (f (\\<pi> i), \\<pi> i) * A $$ (i, f (\\<pi> i)))) =\n  (\\<Sum>x\\<in>F.\n     signof \\<pi> *\n     (\\<Prod>i = 0..<n.\n         B $$ (x (inv \\<pi> (\\<pi> i)), \\<pi> i) *\n         A $$ (i, x (inv \\<pi> (\\<pi> i)))))\n  \\<pi> permutes {0..<n}\n\ngoal (1 subgoal):\n 1. (\\<Sum>f\\<in>F.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n.\n           B $$ (f (\\<pi> i), \\<pi> i) * A $$ (i, f (\\<pi> i)))) =\n    (\\<Sum>f\\<in>F.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i) * A $$ (i, f i)))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>f\\<in>F.\n     signof \\<pi> *\n     (\\<Prod>i = 0..<n.\n         B $$ (f (\\<pi> i), \\<pi> i) * A $$ (i, f (\\<pi> i)))) =\n  (\\<Sum>f\\<in>F.\n     signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i) * A $$ (i, f i)))\n\ngoal (1 subgoal):\n 1. {\\<pi>. \\<pi> permutes {0..<n}} = {\\<pi>. \\<pi> permutes {0..<n}}", "qed (simp)"], ["proof (state)\nthis:\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     \\<Sum>f\\<in>F.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n.\n           B $$ (f (\\<pi> i), \\<pi> i) * A $$ (i, f (\\<pi> i)))) =\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     \\<Sum>f\\<in>F.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i) * A $$ (i, f i)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       \\<Sum>f\\<in>F.\n         (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n         (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f i)))) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       \\<Sum>f\\<in>F.\n         (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) *\n         (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i))))", "also"], ["proof (state)\nthis:\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     \\<Sum>f\\<in>F.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n.\n           B $$ (f (\\<pi> i), \\<pi> i) * A $$ (i, f (\\<pi> i)))) =\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     \\<Sum>f\\<in>F.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i) * A $$ (i, f i)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       \\<Sum>f\\<in>F.\n         (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n         (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f i)))) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       \\<Sum>f\\<in>F.\n         (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) *\n         (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i))))", "have \"... = (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}. \\<Sum>f\\<in>F. (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i))\n  * (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       \\<Sum>f\\<in>F.\n         signof \\<pi> *\n         (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i) * A $$ (i, f i))) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       \\<Sum>f\\<in>F.\n         (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) *\n         (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i))))", "by (smt mult.left_commute prod.cong prod.distrib sum.cong)"], ["proof (state)\nthis:\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     \\<Sum>f\\<in>F.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i) * A $$ (i, f i))) =\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     \\<Sum>f\\<in>F.\n       (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) *\n       (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i))))\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       \\<Sum>f\\<in>F.\n         (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n         (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f i)))) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       \\<Sum>f\\<in>F.\n         (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) *\n         (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i))))", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     \\<Sum>f\\<in>F.\n       (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n       (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f i)))) =\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     \\<Sum>f\\<in>F.\n       (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) *\n       (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i))))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     \\<Sum>f\\<in>F.\n       (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n       (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f i)))) =\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     \\<Sum>f\\<in>F.\n       (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) *\n       (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i))))\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       \\<Sum>f\\<in>F.\n         (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n         (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f i)))) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       \\<Sum>f\\<in>F.\n         (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) *\n         (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i))))", "."], ["proof (state)\nthis:\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     \\<Sum>f\\<in>F.\n       (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n       (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f i)))) =\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     \\<Sum>f\\<in>F.\n       (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) *\n       (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i))))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma detAB_Znm:\n  assumes A: \"A \\<in> carrier_mat n m\"\n    and B: \"B \\<in> carrier_mat m n\"\n  shows \"det (A*B) = (\\<Sum>(f, \\<pi>)\\<in>Z n m. signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>(f, \\<pi>)\\<in>Z n m.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>(f, \\<pi>)\\<in>Z n m.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))", "let ?V=\"{0..<n}\""], ["proof (state)\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>(f, \\<pi>)\\<in>Z n m.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))", "let ?U = \"{0..<m}\""], ["proof (state)\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>(f, \\<pi>)\\<in>Z n m.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))", "let ?PU = \"{p. p permutes ?U}\""], ["proof (state)\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>(f, \\<pi>)\\<in>Z n m.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))", "let ?F = \" {f. (\\<forall>i\\<in> {0..<n}. f i \\<in> ?U) \\<and> (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)}\""], ["proof (state)\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>(f, \\<pi>)\\<in>Z n m.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))", "let ?f = \"\\<lambda>f. det (mat\\<^sub>r n n (\\<lambda> i. A $$ (i, f i) \\<cdot>\\<^sub>v row B (f i)))\""], ["proof (state)\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>(f, \\<pi>)\\<in>Z n m.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))", "let ?g = \"\\<lambda>f. det (mat\\<^sub>r n n (\\<lambda> i. B $$ (f i, i) \\<cdot>\\<^sub>v col A (f i)))\""], ["proof (state)\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>(f, \\<pi>)\\<in>Z n m.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))", "have fm: \"finite {0..<m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {0..<m}", "by auto"], ["proof (state)\nthis:\n  finite {0..<m}\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>(f, \\<pi>)\\<in>Z n m.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))", "have fn: \"finite {0..<n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {0..<n}", "by auto"], ["proof (state)\nthis:\n  finite {0..<n}\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>(f, \\<pi>)\\<in>Z n m.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))", "have F: \"?F= {f. f \\<in> {0..<n} \\<rightarrow> {0..<m} \\<and> (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {f. (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n        (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)} =\n    {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n     \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}", "by auto"], ["proof (state)\nthis:\n  {f. (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n      (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)} =\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>(f, \\<pi>)\\<in>Z n m.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))", "have det_rw: \"det (mat\\<^sub>r n n (\\<lambda>i. B $$ (f i, i) \\<cdot>\\<^sub>v col A (f i))) =\n    (prod (\\<lambda>i. B $$ (f i, i)) {0..<n}) * det (mat\\<^sub>r n n (\\<lambda>i. col A (f i)))\"\n    if  f: \"(\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and> (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)\" for f"], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det\n     (mat\\<^sub>r n n\n       (\\<lambda>i. B $$ (f i, i) \\<cdot>\\<^sub>v col A (f i))) =\n    (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n    Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col A (f i)))", "by (rule det_rows_mul, insert A col_dim, auto)"], ["proof (state)\nthis:\n  (\\<forall>i\\<in>{0..<n}. ?f i \\<in> {0..<m}) \\<and>\n  (\\<forall>i.\n      i \\<notin> {0..<n} \\<longrightarrow> ?f i = i) \\<Longrightarrow>\n  Determinant.det\n   (mat\\<^sub>r n n\n     (\\<lambda>i. B $$ (?f i, i) \\<cdot>\\<^sub>v col A (?f i))) =\n  (\\<Prod>i = 0..<n. B $$ (?f i, i)) *\n  Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col A (?f i)))\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>(f, \\<pi>)\\<in>Z n m.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))", "have det_rw2: \"det (mat\\<^sub>r n n (\\<lambda>i. col A (f i)))\n  = (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}. signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f i)))\"\n    if f: \"f \\<in> ?F\" for f"], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col A (f i))) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f i)))", "proof (unfold Determinant.det_def, auto, rule sum.cong, auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x permutes {0..<n} \\<Longrightarrow>\n       signof x * (\\<Prod>i = 0..<n. col A (f i) $v x i) =\n       signof x * (\\<Prod>i = 0..<n. A $$ (x i, f i))", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x permutes {0..<n} \\<Longrightarrow>\n       signof x * (\\<Prod>i = 0..<n. col A (f i) $v x i) =\n       signof x * (\\<Prod>i = 0..<n. A $$ (x i, f i))", "assume x: \"x permutes {0..<n}\""], ["proof (state)\nthis:\n  x permutes {0..<n}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x permutes {0..<n} \\<Longrightarrow>\n       signof x * (\\<Prod>i = 0..<n. col A (f i) $v x i) =\n       signof x * (\\<Prod>i = 0..<n. A $$ (x i, f i))", "have \"(\\<Prod>i = 0..<n. col A (f i) $v x i) = (\\<Prod>i = 0..<n. A $$ (x i, f i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<n. col A (f i) $v x i) =\n    (\\<Prod>i = 0..<n. A $$ (x i, f i))", "proof (rule prod.cong)"], ["proof (state)\ngoal (2 subgoals):\n 1. {0..<n} = {0..<n}\n 2. \\<And>xa.\n       xa \\<in> {0..<n} \\<Longrightarrow>\n       col A (f xa) $v x xa = A $$ (x xa, f xa)", "fix xa"], ["proof (state)\ngoal (2 subgoals):\n 1. {0..<n} = {0..<n}\n 2. \\<And>xa.\n       xa \\<in> {0..<n} \\<Longrightarrow>\n       col A (f xa) $v x xa = A $$ (x xa, f xa)", "assume xa: \"xa \\<in> {0..<n}\""], ["proof (state)\nthis:\n  xa \\<in> {0..<n}\n\ngoal (2 subgoals):\n 1. {0..<n} = {0..<n}\n 2. \\<And>xa.\n       xa \\<in> {0..<n} \\<Longrightarrow>\n       col A (f xa) $v x xa = A $$ (x xa, f xa)", "show \"col A (f xa) $v x xa = A $$ (x xa, f  xa)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col A (f xa) $v x xa = A $$ (x xa, f xa)", "by (metis A atLeastLessThan_iff carrier_matD(1) col_def index_vec permutes_less(1) x xa)"], ["proof (state)\nthis:\n  col A (f xa) $v x xa = A $$ (x xa, f xa)\n\ngoal (1 subgoal):\n 1. {0..<n} = {0..<n}", "qed (auto)"], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<n. col A (f i) $v x i) =\n  (\\<Prod>i = 0..<n. A $$ (x i, f i))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x permutes {0..<n} \\<Longrightarrow>\n       signof x * (\\<Prod>i = 0..<n. col A (f i) $v x i) =\n       signof x * (\\<Prod>i = 0..<n. A $$ (x i, f i))", "then"], ["proof (chain)\npicking this:\n  (\\<Prod>i = 0..<n. col A (f i) $v x i) =\n  (\\<Prod>i = 0..<n. A $$ (x i, f i))", "show \"signof x * (\\<Prod>i = 0..<n. col A (f i) $v x i)\n      = signof x * (\\<Prod>i = 0..<n. A $$ (x i, f i))\""], ["proof (prove)\nusing this:\n  (\\<Prod>i = 0..<n. col A (f i) $v x i) =\n  (\\<Prod>i = 0..<n. A $$ (x i, f i))\n\ngoal (1 subgoal):\n 1. signof x * (\\<Prod>i = 0..<n. col A (f i) $v x i) =\n    signof x * (\\<Prod>i = 0..<n. A $$ (x i, f i))", "by auto"], ["proof (state)\nthis:\n  signof x * (\\<Prod>i = 0..<n. col A (f i) $v x i) =\n  signof x * (\\<Prod>i = 0..<n. A $$ (x i, f i))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?f \\<in> {f. (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i.\n                   i \\<notin> {0..<n} \\<longrightarrow>\n                   f i = i)} \\<Longrightarrow>\n  Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col A (?f i))) =\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, ?f i)))\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>(f, \\<pi>)\\<in>Z n m.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))", "have fin_n: \"finite {0..<n}\" and fin_m: \"finite {0..<m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {0..<n} &&& finite {0..<m}", "by auto"], ["proof (state)\nthis:\n  finite {0..<n}\n  finite {0..<m}\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>(f, \\<pi>)\\<in>Z n m.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))", "have \"det (A*B) = det (mat\\<^sub>r n n (\\<lambda>i. finsum_vec TYPE('a::comm_ring_1) n\n    (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v Matrix.col A k) {0..<m}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    Determinant.det\n     (mat\\<^sub>r n n\n       (\\<lambda>i.\n           finsum_vec TYPE('a) n\n            (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m}))", "by (rule det_mul_finsum_alt[OF A B])"], ["proof (state)\nthis:\n  Determinant.det (A * B) =\n  Determinant.det\n   (mat\\<^sub>r n n\n     (\\<lambda>i.\n         finsum_vec TYPE('a) n\n          (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m}))\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>(f, \\<pi>)\\<in>Z n m.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))", "also"], ["proof (state)\nthis:\n  Determinant.det (A * B) =\n  Determinant.det\n   (mat\\<^sub>r n n\n     (\\<lambda>i.\n         finsum_vec TYPE('a) n\n          (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m}))\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>(f, \\<pi>)\\<in>Z n m.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))", "have \"... = sum ?g ?F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det\n     (mat\\<^sub>r n n\n       (\\<lambda>i.\n           finsum_vec TYPE('a) n\n            (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m})) =\n    (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       Determinant.det\n        (mat\\<^sub>r n n\n          (\\<lambda>i. B $$ (f i, i) \\<cdot>\\<^sub>v col A (f i))))", "by (rule det_linear_rows_sum[OF fm], auto simp add: A)"], ["proof (state)\nthis:\n  Determinant.det\n   (mat\\<^sub>r n n\n     (\\<lambda>i.\n         finsum_vec TYPE('a) n\n          (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m})) =\n  (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n             (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n     Determinant.det\n      (mat\\<^sub>r n n\n        (\\<lambda>i. B $$ (f i, i) \\<cdot>\\<^sub>v col A (f i))))\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>(f, \\<pi>)\\<in>Z n m.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))", "also"], ["proof (state)\nthis:\n  Determinant.det\n   (mat\\<^sub>r n n\n     (\\<lambda>i.\n         finsum_vec TYPE('a) n\n          (\\<lambda>k. B $$ (k, i) \\<cdot>\\<^sub>v col A k) {0..<m})) =\n  (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n             (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n     Determinant.det\n      (mat\\<^sub>r n n\n        (\\<lambda>i. B $$ (f i, i) \\<cdot>\\<^sub>v col A (f i))))\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>(f, \\<pi>)\\<in>Z n m.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))", "have \"... = (\\<Sum>f\\<in>?F. prod (\\<lambda>i. B $$ (f i, i)) {0..<n} * det (mat\\<^sub>r n n (\\<lambda>i. col A (f i))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       Determinant.det\n        (mat\\<^sub>r n n\n          (\\<lambda>i. B $$ (f i, i) \\<cdot>\\<^sub>v col A (f i)))) =\n    (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col A (f i))))", "using det_rw"], ["proof (prove)\nusing this:\n  (\\<forall>i\\<in>{0..<n}. ?f i \\<in> {0..<m}) \\<and>\n  (\\<forall>i.\n      i \\<notin> {0..<n} \\<longrightarrow> ?f i = i) \\<Longrightarrow>\n  Determinant.det\n   (mat\\<^sub>r n n\n     (\\<lambda>i. B $$ (?f i, i) \\<cdot>\\<^sub>v col A (?f i))) =\n  (\\<Prod>i = 0..<n. B $$ (?f i, i)) *\n  Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col A (?f i)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       Determinant.det\n        (mat\\<^sub>r n n\n          (\\<lambda>i. B $$ (f i, i) \\<cdot>\\<^sub>v col A (f i)))) =\n    (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col A (f i))))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n             (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n     Determinant.det\n      (mat\\<^sub>r n n\n        (\\<lambda>i. B $$ (f i, i) \\<cdot>\\<^sub>v col A (f i)))) =\n  (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n             (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n     (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n     Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col A (f i))))\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>(f, \\<pi>)\\<in>Z n m.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))", "also"], ["proof (state)\nthis:\n  (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n             (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n     Determinant.det\n      (mat\\<^sub>r n n\n        (\\<lambda>i. B $$ (f i, i) \\<cdot>\\<^sub>v col A (f i)))) =\n  (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n             (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n     (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n     Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col A (f i))))\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>(f, \\<pi>)\\<in>Z n m.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))", "have \"... = (\\<Sum>f\\<in>?F. prod (\\<lambda>i. B $$ (f i, i)) {0..<n} *\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}. signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f (i)))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col A (f i)))) =\n    (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n       (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n          signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f i))))", "by (rule sum.cong, auto simp add: det_rw2)"], ["proof (state)\nthis:\n  (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n             (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n     (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n     Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col A (f i)))) =\n  (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n             (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n     (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n     (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n        signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f i))))\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>(f, \\<pi>)\\<in>Z n m.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))", "also"], ["proof (state)\nthis:\n  (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n             (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n     (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n     Determinant.det (mat\\<^sub>r n n (\\<lambda>i. col A (f i)))) =\n  (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n             (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n     (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n     (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n        signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f i))))\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>(f, \\<pi>)\\<in>Z n m.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))", "have \"... =\n  (\\<Sum>f\\<in>?F. \\<Sum>\\<pi> | \\<pi> permutes {0..<n}. prod (\\<lambda>i. B $$ (f i, i)) {0..<n}\n    * (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f (i)))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n       (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n          signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f i)))) =\n    (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       \\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n         (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n         (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f i))))", "by (simp add: mult_hom.hom_sum)"], ["proof (state)\nthis:\n  (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n             (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n     (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n     (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n        signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f i)))) =\n  (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n             (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n     \\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n       (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f i))))\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>(f, \\<pi>)\\<in>Z n m.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))", "also"], ["proof (state)\nthis:\n  (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n             (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n     (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n     (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n        signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f i)))) =\n  (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n             (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n     \\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n       (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f i))))\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>(f, \\<pi>)\\<in>Z n m.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))", "have \"... = (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}. \\<Sum>f\\<in>?F.prod (\\<lambda>i. B $$ (f i, i)) {0..<n}\n    * (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f i))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       \\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n         (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n         (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f i)))) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       \\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n                 (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n         (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n         (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f i))))", "by (rule VS_Connect.class_semiring.finsum_finsum_swap,\n      insert finite_permutations finite_bounded_functions[OF fin_m fin_n], auto)"], ["proof (state)\nthis:\n  (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n             (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n     \\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n       (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f i)))) =\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     \\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n       (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f i))))\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>(f, \\<pi>)\\<in>Z n m.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))", "thm detAB_Znm_aux"], ["proof (state)\nthis:\n  (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n             (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n     \\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n       (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f i)))) =\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     \\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n       (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f i))))\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>(f, \\<pi>)\\<in>Z n m.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))", "also"], ["proof (state)\nthis:\n  (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n             (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n     \\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n       (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f i)))) =\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     \\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n       (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f i))))\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>(f, \\<pi>)\\<in>Z n m.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))", "have \"... = (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}. \\<Sum>f\\<in>?F. (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i))\n  * (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       \\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n                 (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n         (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n         (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f i)))) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       \\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n                 (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n         (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) *\n         (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i))))", "by (rule detAB_Znm_aux, auto)"], ["proof (state)\nthis:\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     \\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n       (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f i)))) =\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     \\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) *\n       (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i))))\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>(f, \\<pi>)\\<in>Z n m.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))", "also"], ["proof (state)\nthis:\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     \\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       (\\<Prod>i = 0..<n. B $$ (f i, i)) *\n       (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (\\<pi> i, f i)))) =\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     \\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) *\n       (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i))))\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>(f, \\<pi>)\\<in>Z n m.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))", "have \"... = (\\<Sum>f\\<in>?F.\\<Sum>\\<pi> | \\<pi> permutes {0..<n}. (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i))\n  * (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       \\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n                 (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n         (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) *\n         (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i)))) =\n    (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       \\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n         (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) *\n         (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i))))", "by (rule VS_Connect.class_semiring.finsum_finsum_swap,\n      insert finite_permutations finite_bounded_functions[OF fin_m fin_n], auto)"], ["proof (state)\nthis:\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     \\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) *\n       (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i)))) =\n  (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n             (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n     \\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) *\n       (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i))))\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>(f, \\<pi>)\\<in>Z n m.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))", "also"], ["proof (state)\nthis:\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     \\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) *\n       (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i)))) =\n  (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n             (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n     \\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) *\n       (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i))))\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>(f, \\<pi>)\\<in>Z n m.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))", "have \"... =  (\\<Sum>f\\<in>?F.\\<Sum>\\<pi> | \\<pi> permutes {0..<n}. signof \\<pi>\n    * (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       \\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n         (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) *\n         (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i)))) =\n    (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       \\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n         signof \\<pi> *\n         (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))", "unfolding prod.distrib"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       \\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n         (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) *\n         (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i)))) =\n    (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       \\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n         signof \\<pi> *\n         ((\\<Prod>i = 0..<n. A $$ (i, f i)) *\n          (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i))))", "by (rule sum.cong, auto, rule sum.cong, auto)"], ["proof (state)\nthis:\n  (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n             (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n     \\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) *\n       (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i)))) =\n  (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n             (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n     \\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>(f, \\<pi>)\\<in>Z n m.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))", "also"], ["proof (state)\nthis:\n  (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n             (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n     \\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) *\n       (signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i)))) =\n  (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n             (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n     \\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>(f, \\<pi>)\\<in>Z n m.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))", "have \"... = sum (\\<lambda>(f,\\<pi>). (signof \\<pi>)\n    * (prod (\\<lambda>i. A$$(i,f i) * B $$ (f i, \\<pi> i)) {0..<n})) (Z n m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       \\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n         signof \\<pi> *\n         (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i))) =\n    (\\<Sum>(f, \\<pi>)\\<in>Z n m.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))", "unfolding Z_alt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       \\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n         signof \\<pi> *\n         (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i))) =\n    (\\<Sum>(f, \\<pi>)\n           \\<in>{f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n                 \\<forall>i.\n                    i \\<notin> {0..<n} \\<longrightarrow> f i = i} \\<times>\n                {\\<pi>. \\<pi> permutes {0..<n}}.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))", "unfolding sum.cartesian_product[symmetric] F"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>f | f \\<in> {0..<n} \\<rightarrow> {0..<m} \\<and>\n               (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n       \\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n         signof \\<pi> *\n         (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i))) =\n    (\\<Sum>x\\<in>{f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n                  \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}.\n       \\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n         signof \\<pi> *\n         (\\<Prod>i = 0..<n. A $$ (i, x i) * B $$ (x i, \\<pi> i)))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>f | (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n             (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i).\n     \\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i))) =\n  (\\<Sum>(f, \\<pi>)\\<in>Z n m.\n     signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>(f, \\<pi>)\\<in>Z n m.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))", "finally"], ["proof (chain)\npicking this:\n  Determinant.det (A * B) =\n  (\\<Sum>(f, \\<pi>)\\<in>Z n m.\n     signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))", "show ?thesis"], ["proof (prove)\nusing this:\n  Determinant.det (A * B) =\n  (\\<Sum>(f, \\<pi>)\\<in>Z n m.\n     signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>(f, \\<pi>)\\<in>Z n m.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))", "."], ["proof (state)\nthis:\n  Determinant.det (A * B) =\n  (\\<Sum>(f, \\<pi>)\\<in>Z n m.\n     signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))\n\ngoal:\nNo subgoals!", "qed"], ["", "(*Several lemmas here can be moved outside the context*)"], ["", "context\n  fixes n m and A B::\"'a::comm_ring_1 mat\"\n  assumes A: \"A \\<in> carrier_mat n m\"\n    and B: \"B \\<in> carrier_mat m n\"\nbegin"], ["", "private"], ["", "definition \"Z_inj = ({f. f \\<in> {0..<n} \\<rightarrow> {0..<m} \\<and> (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)\n  \\<and> inj_on f {0..<n}} \\<times> {\\<pi>. \\<pi> permutes {0..<n}})\""], ["", "private"], ["", "definition \"Z_not_inj = ({f. f \\<in> {0..<n} \\<rightarrow> {0..<m} \\<and> (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)\n  \\<and> \\<not> inj_on f {0..<n}} \\<times> {\\<pi>. \\<pi> permutes {0..<n}})\""], ["", "private"], ["", "definition \"Z_strict = ({f. f \\<in> {0..<n} \\<rightarrow> {0..<m} \\<and> (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)\n  \\<and> strict_mono_on f {0..<n}} \\<times> {\\<pi>. \\<pi> permutes {0..<n}})\""], ["", "private"], ["", "definition \"Z_not_strict = ({f. f \\<in> {0..<n} \\<rightarrow> {0..<m} \\<and> (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)\n  \\<and> \\<not> strict_mono_on f {0..<n}} \\<times> {\\<pi>. \\<pi> permutes {0..<n}})\""], ["", "private"], ["", "definition \"weight f \\<pi>\n  = (signof \\<pi>) * (prod (\\<lambda>i. A$$(i,f i) * B $$ (f i, \\<pi> i)) {0..<n})\""], ["", "private"], ["", "definition \"Z_good g = ({f. f \\<in> {0..<n} \\<rightarrow> {0..<m} \\<and> (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)\n  \\<and> inj_on f {0..<n} \\<and> (f`{0..<n} = g`{0..<n})} \\<times> {\\<pi>. \\<pi> permutes {0..<n}})\""], ["", "private"], ["", "definition \"F_strict = {f. f \\<in> {0..<n} \\<rightarrow> {0..<m}\n  \\<and> (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and> strict_mono_on f {0..<n}}\""], ["", "private"], ["", "definition \"F_inj = {f. f \\<in> {0..<n} \\<rightarrow> {0..<m}\n  \\<and> (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and> inj_on f {0..<n}}\""], ["", "private"], ["", "definition \"F_not_inj = {f. f \\<in> {0..<n} \\<rightarrow> {0..<m}\n  \\<and> (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and> \\<not> inj_on f {0..<n}}\""], ["", "private"], ["", "definition \"F = {f. f \\<in> {0..<n} \\<rightarrow> {0..<m} \\<and> (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)}\""], ["", "text\\<open>The Cauchy--Binet formula is proven in \\url{https://core.ac.uk/download/pdf/82475020.pdf}\n  In that work, they define @{text \"\\<sigma> \\<equiv> inv \\<phi> \\<circ> \\<pi>\"}. I had problems following this proof\n  in Isabelle, since I was demanded to show that such permutations commute, which is false.\n  It is a notation problem of the  @{text \"\\<circ>\"} operator, the author means @{text \"\\<sigma> \\<equiv> \\<pi> \\<circ> inv \\<phi>\"} using\n  the Isabelle notation (i.e., @{text \"\\<sigma> x = \\<pi> ((inv \\<phi>) x)\"}).\n\\<close>"], ["", "lemma step_weight:\n  fixes \\<phi> \\<pi>\n  defines \"\\<sigma> \\<equiv> \\<pi> \\<circ> Hilbert_Choice.inv \\<phi>\"\n  assumes f_inj: \"f \\<in> F_inj\" and gF: \"g \\<in> F\" and pi: \"\\<pi> permutes {0..<n}\"\n  and phi: \"\\<phi> permutes {0..<n}\" and fg_phi: \"\\<forall>x \\<in> {0..<n}. f x = g (\\<phi> x)\"\nshows \"weight f \\<pi> = (signof \\<phi>) * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i)))\n  * (signof \\<sigma>) * (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weight f \\<pi> =\n    signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n    signof \\<sigma> *\n    (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. weight f \\<pi> =\n    signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n    signof \\<sigma> *\n    (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i))", "let ?A = \"(\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) \""], ["proof (state)\ngoal (1 subgoal):\n 1. weight f \\<pi> =\n    signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n    signof \\<sigma> *\n    (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i))", "let ?B = \"(\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i))\""], ["proof (state)\ngoal (1 subgoal):\n 1. weight f \\<pi> =\n    signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n    signof \\<sigma> *\n    (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i))", "have sigma: \"\\<sigma> permutes {0..<n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<sigma> permutes {0..<n}", "unfolding \\<sigma>_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> \\<circ> inv \\<phi> permutes {0..<n}", "by (rule permutes_compose[OF permutes_inv[OF phi] pi])"], ["proof (state)\nthis:\n  \\<sigma> permutes {0..<n}\n\ngoal (1 subgoal):\n 1. weight f \\<pi> =\n    signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n    signof \\<sigma> *\n    (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i))", "have A_rw: \"?A = (\\<Prod>i = 0..<n. A $$ (i, f i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) =\n    (\\<Prod>i = 0..<n. A $$ (i, f i))", "using fg_phi"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>{0..<n}. f x = g (\\<phi> x)\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) =\n    (\\<Prod>i = 0..<n. A $$ (i, f i))", "by auto"], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) =\n  (\\<Prod>i = 0..<n. A $$ (i, f i))\n\ngoal (1 subgoal):\n 1. weight f \\<pi> =\n    signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n    signof \\<sigma> *\n    (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i))", "have \"?B = (\\<Prod>i = 0..<n. B $$ (g (\\<phi> i), \\<sigma> (\\<phi> i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i)) =\n    (\\<Prod>i = 0..<n. B $$ (g (\\<phi> i), \\<sigma> (\\<phi> i)))", "by (rule prod.permute[unfolded o_def, OF phi])"], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i)) =\n  (\\<Prod>i = 0..<n. B $$ (g (\\<phi> i), \\<sigma> (\\<phi> i)))\n\ngoal (1 subgoal):\n 1. weight f \\<pi> =\n    signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n    signof \\<sigma> *\n    (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i))", "also"], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i)) =\n  (\\<Prod>i = 0..<n. B $$ (g (\\<phi> i), \\<sigma> (\\<phi> i)))\n\ngoal (1 subgoal):\n 1. weight f \\<pi> =\n    signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n    signof \\<sigma> *\n    (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i))", "have \"... = (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<n. B $$ (g (\\<phi> i), \\<sigma> (\\<phi> i))) =\n    (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i))", "using fg_phi"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>{0..<n}. f x = g (\\<phi> x)\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<n. B $$ (g (\\<phi> i), \\<sigma> (\\<phi> i))) =\n    (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i))", "unfolding \\<sigma>_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>{0..<n}. f x = g (\\<phi> x)\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<n.\n        B $$ (g (\\<phi> i), (\\<pi> \\<circ> inv \\<phi>) (\\<phi> i))) =\n    (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i))", "unfolding o_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>{0..<n}. f x = g (\\<phi> x)\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<n. B $$ (g (\\<phi> i), \\<pi> (inv \\<phi> (\\<phi> i)))) =\n    (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i))", "unfolding permutes_inverses(2)[OF phi]"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>{0..<n}. f x = g (\\<phi> x)\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<n. B $$ (g (\\<phi> i), \\<pi> i)) =\n    (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i))", "by auto"], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<n. B $$ (g (\\<phi> i), \\<sigma> (\\<phi> i))) =\n  (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i))\n\ngoal (1 subgoal):\n 1. weight f \\<pi> =\n    signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n    signof \\<sigma> *\n    (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i))", "finally"], ["proof (chain)\npicking this:\n  (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i)) =\n  (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i))", "have B_rw: \"?B = (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i))\""], ["proof (prove)\nusing this:\n  (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i)) =\n  (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i))\n\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i)) =\n    (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i))", "."], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i)) =\n  (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i))\n\ngoal (1 subgoal):\n 1. weight f \\<pi> =\n    signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n    signof \\<sigma> *\n    (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i))", "have \"(signof \\<phi>) * ?A * (signof \\<sigma>) * ?B = (signof \\<phi>) * (signof \\<sigma>) * ?A * ?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n    signof \\<sigma> *\n    (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i)) =\n    signof \\<phi> * signof \\<sigma> *\n    (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n    (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i))", "by auto"], ["proof (state)\nthis:\n  signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n  signof \\<sigma> *\n  (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i)) =\n  signof \\<phi> * signof \\<sigma> *\n  (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n  (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i))\n\ngoal (1 subgoal):\n 1. weight f \\<pi> =\n    signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n    signof \\<sigma> *\n    (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i))", "also"], ["proof (state)\nthis:\n  signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n  signof \\<sigma> *\n  (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i)) =\n  signof \\<phi> * signof \\<sigma> *\n  (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n  (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i))\n\ngoal (1 subgoal):\n 1. weight f \\<pi> =\n    signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n    signof \\<sigma> *\n    (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i))", "have \"... = signof (\\<phi> \\<circ> \\<sigma>) * ?A * ?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. signof \\<phi> * signof \\<sigma> *\n    (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n    (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i)) =\n    signof (\\<phi> \\<circ> \\<sigma>) *\n    (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n    (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i))", "unfolding signof_compose[OF phi sigma]"], ["proof (prove)\ngoal (1 subgoal):\n 1. signof \\<phi> * signof \\<sigma> *\n    (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n    (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i)) =\n    signof \\<phi> * signof \\<sigma> *\n    (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n    (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i))", "by simp"], ["proof (state)\nthis:\n  signof \\<phi> * signof \\<sigma> *\n  (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n  (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i)) =\n  signof (\\<phi> \\<circ> \\<sigma>) *\n  (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n  (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i))\n\ngoal (1 subgoal):\n 1. weight f \\<pi> =\n    signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n    signof \\<sigma> *\n    (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i))", "also"], ["proof (state)\nthis:\n  signof \\<phi> * signof \\<sigma> *\n  (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n  (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i)) =\n  signof (\\<phi> \\<circ> \\<sigma>) *\n  (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n  (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i))\n\ngoal (1 subgoal):\n 1. weight f \\<pi> =\n    signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n    signof \\<sigma> *\n    (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i))", "have \"... = signof \\<pi> * ?A * ?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. signof (\\<phi> \\<circ> \\<sigma>) *\n    (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n    (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i)) =\n    signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n    (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i))", "by (metis (no_types, lifting) \\<sigma>_def mult.commute o_inv_o_cancel permutes_inj\n        phi sigma signof_compose)"], ["proof (state)\nthis:\n  signof (\\<phi> \\<circ> \\<sigma>) *\n  (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n  (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i)) =\n  signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n  (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i))\n\ngoal (1 subgoal):\n 1. weight f \\<pi> =\n    signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n    signof \\<sigma> *\n    (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i))", "also"], ["proof (state)\nthis:\n  signof (\\<phi> \\<circ> \\<sigma>) *\n  (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n  (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i)) =\n  signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n  (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i))\n\ngoal (1 subgoal):\n 1. weight f \\<pi> =\n    signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n    signof \\<sigma> *\n    (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i))", "have \"... = signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i)) * (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n    (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i)) =\n    signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n    (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i))", "using A_rw B_rw"], ["proof (prove)\nusing this:\n  (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) =\n  (\\<Prod>i = 0..<n. A $$ (i, f i))\n  (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i)) =\n  (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i))\n\ngoal (1 subgoal):\n 1. signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n    (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i)) =\n    signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n    (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i))", "by auto"], ["proof (state)\nthis:\n  signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n  (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i)) =\n  signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n  (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i))\n\ngoal (1 subgoal):\n 1. weight f \\<pi> =\n    signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n    signof \\<sigma> *\n    (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i))", "also"], ["proof (state)\nthis:\n  signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n  (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i)) =\n  signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n  (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i))\n\ngoal (1 subgoal):\n 1. weight f \\<pi> =\n    signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n    signof \\<sigma> *\n    (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i))", "have \"... = signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n    (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) =\n    signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i))", "by auto"], ["proof (state)\nthis:\n  signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n  (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) =\n  signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i))\n\ngoal (1 subgoal):\n 1. weight f \\<pi> =\n    signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n    signof \\<sigma> *\n    (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i))", "also"], ["proof (state)\nthis:\n  signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n  (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) =\n  signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i))\n\ngoal (1 subgoal):\n 1. weight f \\<pi> =\n    signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n    signof \\<sigma> *\n    (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i))", "have \"... = weight f \\<pi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)) =\n    weight f \\<pi>", "unfolding weight_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)) =\n    signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i))", "by simp"], ["proof (state)\nthis:\n  signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)) =\n  weight f \\<pi>\n\ngoal (1 subgoal):\n 1. weight f \\<pi> =\n    signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n    signof \\<sigma> *\n    (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i))", "finally"], ["proof (chain)\npicking this:\n  signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n  signof \\<sigma> *\n  (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i)) =\n  weight f \\<pi>", "show ?thesis"], ["proof (prove)\nusing this:\n  signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n  signof \\<sigma> *\n  (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i)) =\n  weight f \\<pi>\n\ngoal (1 subgoal):\n 1. weight f \\<pi> =\n    signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n    signof \\<sigma> *\n    (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i))", ".."], ["proof (state)\nthis:\n  weight f \\<pi> =\n  signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n  signof \\<sigma> *\n  (\\<Prod>i = 0..<n. B $$ (g i, \\<sigma> i))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Z_good_fun_alt_sum:\n  fixes g\n  defines \"Z_good_fun \\<equiv> {f. f \\<in> {0..<n} \\<rightarrow> {0..<m} \\<and> (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)\n    \\<and> inj_on f {0..<n} \\<and> (f`{0..<n} = g`{0..<n})}\"\n  assumes g: \"g \\<in> F_inj\"\n  shows \"(\\<Sum>f\\<in>Z_good_fun. P f)= (\\<Sum>\\<pi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}. P (g \\<circ> \\<pi>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum P Z_good_fun =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}. P (g \\<circ> \\<pi>))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sum P Z_good_fun =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}. P (g \\<circ> \\<pi>))", "let ?f = \"\\<lambda>\\<pi>. g \\<circ> \\<pi>\""], ["proof (state)\ngoal (1 subgoal):\n 1. sum P Z_good_fun =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}. P (g \\<circ> \\<pi>))", "let ?P = \"{\\<pi>. \\<pi> permutes {0..<n}}\""], ["proof (state)\ngoal (1 subgoal):\n 1. sum P Z_good_fun =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}. P (g \\<circ> \\<pi>))", "have fP: \"?f`?P = Z_good_fun\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<circ>) g ` {\\<pi>. \\<pi> permutes {0..<n}} = Z_good_fun", "proof (unfold Z_good_fun_def, auto)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>\\<pi> xa.\n       \\<lbrakk>\\<pi> permutes {0..<n}; xa < n\\<rbrakk>\n       \\<Longrightarrow> g (\\<pi> xa) < m\n 2. \\<And>\\<pi> i.\n       \\<lbrakk>\\<pi> permutes {0..<n}; \\<not> i < n\\<rbrakk>\n       \\<Longrightarrow> g (\\<pi> i) = i\n 3. \\<And>\\<pi>.\n       \\<pi> permutes {0..<n} \\<Longrightarrow>\n       inj_on (g \\<circ> \\<pi>) {0..<n}\n 4. \\<And>\\<pi> xb.\n       \\<lbrakk>\\<pi> permutes {0..<n}; xb < n\\<rbrakk>\n       \\<Longrightarrow> g xb \\<in> (\\<lambda>x. g (\\<pi> x)) ` {0..<n}\n 5. \\<And>x.\n       \\<lbrakk>x \\<in> {0..<n} \\<rightarrow> {0..<m};\n        \\<forall>i. \\<not> i < n \\<longrightarrow> x i = i;\n        inj_on x {0..<n}; x ` {0..<n} = g ` {0..<n}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> (\\<circ>) g `\n                                 {\\<pi>. \\<pi> permutes {0..<n}}", "fix xa xb"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>\\<pi> xa.\n       \\<lbrakk>\\<pi> permutes {0..<n}; xa < n\\<rbrakk>\n       \\<Longrightarrow> g (\\<pi> xa) < m\n 2. \\<And>\\<pi> i.\n       \\<lbrakk>\\<pi> permutes {0..<n}; \\<not> i < n\\<rbrakk>\n       \\<Longrightarrow> g (\\<pi> i) = i\n 3. \\<And>\\<pi>.\n       \\<pi> permutes {0..<n} \\<Longrightarrow>\n       inj_on (g \\<circ> \\<pi>) {0..<n}\n 4. \\<And>\\<pi> xb.\n       \\<lbrakk>\\<pi> permutes {0..<n}; xb < n\\<rbrakk>\n       \\<Longrightarrow> g xb \\<in> (\\<lambda>x. g (\\<pi> x)) ` {0..<n}\n 5. \\<And>x.\n       \\<lbrakk>x \\<in> {0..<n} \\<rightarrow> {0..<m};\n        \\<forall>i. \\<not> i < n \\<longrightarrow> x i = i;\n        inj_on x {0..<n}; x ` {0..<n} = g ` {0..<n}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> (\\<circ>) g `\n                                 {\\<pi>. \\<pi> permutes {0..<n}}", "assume \"xa permutes {0..<n}\" and \"xb < n\""], ["proof (state)\nthis:\n  xa permutes {0..<n}\n  xb < n\n\ngoal (5 subgoals):\n 1. \\<And>\\<pi> xa.\n       \\<lbrakk>\\<pi> permutes {0..<n}; xa < n\\<rbrakk>\n       \\<Longrightarrow> g (\\<pi> xa) < m\n 2. \\<And>\\<pi> i.\n       \\<lbrakk>\\<pi> permutes {0..<n}; \\<not> i < n\\<rbrakk>\n       \\<Longrightarrow> g (\\<pi> i) = i\n 3. \\<And>\\<pi>.\n       \\<pi> permutes {0..<n} \\<Longrightarrow>\n       inj_on (g \\<circ> \\<pi>) {0..<n}\n 4. \\<And>\\<pi> xb.\n       \\<lbrakk>\\<pi> permutes {0..<n}; xb < n\\<rbrakk>\n       \\<Longrightarrow> g xb \\<in> (\\<lambda>x. g (\\<pi> x)) ` {0..<n}\n 5. \\<And>x.\n       \\<lbrakk>x \\<in> {0..<n} \\<rightarrow> {0..<m};\n        \\<forall>i. \\<not> i < n \\<longrightarrow> x i = i;\n        inj_on x {0..<n}; x ` {0..<n} = g ` {0..<n}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> (\\<circ>) g `\n                                 {\\<pi>. \\<pi> permutes {0..<n}}", "hence \"xa xb < n\""], ["proof (prove)\nusing this:\n  xa permutes {0..<n}\n  xb < n\n\ngoal (1 subgoal):\n 1. xa xb < n", "by auto"], ["proof (state)\nthis:\n  xa xb < n\n\ngoal (5 subgoals):\n 1. \\<And>\\<pi> xa.\n       \\<lbrakk>\\<pi> permutes {0..<n}; xa < n\\<rbrakk>\n       \\<Longrightarrow> g (\\<pi> xa) < m\n 2. \\<And>\\<pi> i.\n       \\<lbrakk>\\<pi> permutes {0..<n}; \\<not> i < n\\<rbrakk>\n       \\<Longrightarrow> g (\\<pi> i) = i\n 3. \\<And>\\<pi>.\n       \\<pi> permutes {0..<n} \\<Longrightarrow>\n       inj_on (g \\<circ> \\<pi>) {0..<n}\n 4. \\<And>\\<pi> xb.\n       \\<lbrakk>\\<pi> permutes {0..<n}; xb < n\\<rbrakk>\n       \\<Longrightarrow> g xb \\<in> (\\<lambda>x. g (\\<pi> x)) ` {0..<n}\n 5. \\<And>x.\n       \\<lbrakk>x \\<in> {0..<n} \\<rightarrow> {0..<m};\n        \\<forall>i. \\<not> i < n \\<longrightarrow> x i = i;\n        inj_on x {0..<n}; x ` {0..<n} = g ` {0..<n}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> (\\<circ>) g `\n                                 {\\<pi>. \\<pi> permutes {0..<n}}", "thus \"g (xa xb) < m\""], ["proof (prove)\nusing this:\n  xa xb < n\n\ngoal (1 subgoal):\n 1. g (xa xb) < m", "using g"], ["proof (prove)\nusing this:\n  xa xb < n\n  g \\<in> F_inj\n\ngoal (1 subgoal):\n 1. g (xa xb) < m", "unfolding F_inj_def"], ["proof (prove)\nusing this:\n  xa xb < n\n  g \\<in> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n           (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n           inj_on f {0..<n}}\n\ngoal (1 subgoal):\n 1. g (xa xb) < m", "by fastforce"], ["proof (state)\nthis:\n  g (xa xb) < m\n\ngoal (4 subgoals):\n 1. \\<And>\\<pi> i.\n       \\<lbrakk>\\<pi> permutes {0..<n}; \\<not> i < n\\<rbrakk>\n       \\<Longrightarrow> g (\\<pi> i) = i\n 2. \\<And>\\<pi>.\n       \\<pi> permutes {0..<n} \\<Longrightarrow>\n       inj_on (g \\<circ> \\<pi>) {0..<n}\n 3. \\<And>\\<pi> xb.\n       \\<lbrakk>\\<pi> permutes {0..<n}; xb < n\\<rbrakk>\n       \\<Longrightarrow> g xb \\<in> (\\<lambda>x. g (\\<pi> x)) ` {0..<n}\n 4. \\<And>x.\n       \\<lbrakk>x \\<in> {0..<n} \\<rightarrow> {0..<m};\n        \\<forall>i. \\<not> i < n \\<longrightarrow> x i = i;\n        inj_on x {0..<n}; x ` {0..<n} = g ` {0..<n}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> (\\<circ>) g `\n                                 {\\<pi>. \\<pi> permutes {0..<n}}", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>\\<pi> i.\n       \\<lbrakk>\\<pi> permutes {0..<n}; \\<not> i < n\\<rbrakk>\n       \\<Longrightarrow> g (\\<pi> i) = i\n 2. \\<And>\\<pi>.\n       \\<pi> permutes {0..<n} \\<Longrightarrow>\n       inj_on (g \\<circ> \\<pi>) {0..<n}\n 3. \\<And>\\<pi> xb.\n       \\<lbrakk>\\<pi> permutes {0..<n}; xb < n\\<rbrakk>\n       \\<Longrightarrow> g xb \\<in> (\\<lambda>x. g (\\<pi> x)) ` {0..<n}\n 4. \\<And>x.\n       \\<lbrakk>x \\<in> {0..<n} \\<rightarrow> {0..<m};\n        \\<forall>i. \\<not> i < n \\<longrightarrow> x i = i;\n        inj_on x {0..<n}; x ` {0..<n} = g ` {0..<n}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> (\\<circ>) g `\n                                 {\\<pi>. \\<pi> permutes {0..<n}}", "fix xa i"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>\\<pi> i.\n       \\<lbrakk>\\<pi> permutes {0..<n}; \\<not> i < n\\<rbrakk>\n       \\<Longrightarrow> g (\\<pi> i) = i\n 2. \\<And>\\<pi>.\n       \\<pi> permutes {0..<n} \\<Longrightarrow>\n       inj_on (g \\<circ> \\<pi>) {0..<n}\n 3. \\<And>\\<pi> xb.\n       \\<lbrakk>\\<pi> permutes {0..<n}; xb < n\\<rbrakk>\n       \\<Longrightarrow> g xb \\<in> (\\<lambda>x. g (\\<pi> x)) ` {0..<n}\n 4. \\<And>x.\n       \\<lbrakk>x \\<in> {0..<n} \\<rightarrow> {0..<m};\n        \\<forall>i. \\<not> i < n \\<longrightarrow> x i = i;\n        inj_on x {0..<n}; x ` {0..<n} = g ` {0..<n}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> (\\<circ>) g `\n                                 {\\<pi>. \\<pi> permutes {0..<n}}", "assume \"xa permutes {0..<n}\" and i_ge_n: \"\\<not> i < n\""], ["proof (state)\nthis:\n  xa permutes {0..<n}\n  \\<not> i < n\n\ngoal (4 subgoals):\n 1. \\<And>\\<pi> i.\n       \\<lbrakk>\\<pi> permutes {0..<n}; \\<not> i < n\\<rbrakk>\n       \\<Longrightarrow> g (\\<pi> i) = i\n 2. \\<And>\\<pi>.\n       \\<pi> permutes {0..<n} \\<Longrightarrow>\n       inj_on (g \\<circ> \\<pi>) {0..<n}\n 3. \\<And>\\<pi> xb.\n       \\<lbrakk>\\<pi> permutes {0..<n}; xb < n\\<rbrakk>\n       \\<Longrightarrow> g xb \\<in> (\\<lambda>x. g (\\<pi> x)) ` {0..<n}\n 4. \\<And>x.\n       \\<lbrakk>x \\<in> {0..<n} \\<rightarrow> {0..<m};\n        \\<forall>i. \\<not> i < n \\<longrightarrow> x i = i;\n        inj_on x {0..<n}; x ` {0..<n} = g ` {0..<n}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> (\\<circ>) g `\n                                 {\\<pi>. \\<pi> permutes {0..<n}}", "hence \"xa i = i\""], ["proof (prove)\nusing this:\n  xa permutes {0..<n}\n  \\<not> i < n\n\ngoal (1 subgoal):\n 1. xa i = i", "unfolding permutes_def"], ["proof (prove)\nusing this:\n  (\\<forall>x. x \\<notin> {0..<n} \\<longrightarrow> xa x = x) \\<and>\n  (\\<forall>y. \\<exists>!x. xa x = y)\n  \\<not> i < n\n\ngoal (1 subgoal):\n 1. xa i = i", "by auto"], ["proof (state)\nthis:\n  xa i = i\n\ngoal (4 subgoals):\n 1. \\<And>\\<pi> i.\n       \\<lbrakk>\\<pi> permutes {0..<n}; \\<not> i < n\\<rbrakk>\n       \\<Longrightarrow> g (\\<pi> i) = i\n 2. \\<And>\\<pi>.\n       \\<pi> permutes {0..<n} \\<Longrightarrow>\n       inj_on (g \\<circ> \\<pi>) {0..<n}\n 3. \\<And>\\<pi> xb.\n       \\<lbrakk>\\<pi> permutes {0..<n}; xb < n\\<rbrakk>\n       \\<Longrightarrow> g xb \\<in> (\\<lambda>x. g (\\<pi> x)) ` {0..<n}\n 4. \\<And>x.\n       \\<lbrakk>x \\<in> {0..<n} \\<rightarrow> {0..<m};\n        \\<forall>i. \\<not> i < n \\<longrightarrow> x i = i;\n        inj_on x {0..<n}; x ` {0..<n} = g ` {0..<n}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> (\\<circ>) g `\n                                 {\\<pi>. \\<pi> permutes {0..<n}}", "thus \"g (xa i) = i\""], ["proof (prove)\nusing this:\n  xa i = i\n\ngoal (1 subgoal):\n 1. g (xa i) = i", "using g i_ge_n"], ["proof (prove)\nusing this:\n  xa i = i\n  g \\<in> F_inj\n  \\<not> i < n\n\ngoal (1 subgoal):\n 1. g (xa i) = i", "unfolding F_inj_def"], ["proof (prove)\nusing this:\n  xa i = i\n  g \\<in> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n           (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n           inj_on f {0..<n}}\n  \\<not> i < n\n\ngoal (1 subgoal):\n 1. g (xa i) = i", "by auto"], ["proof (state)\nthis:\n  g (xa i) = i\n\ngoal (3 subgoals):\n 1. \\<And>\\<pi>.\n       \\<pi> permutes {0..<n} \\<Longrightarrow>\n       inj_on (g \\<circ> \\<pi>) {0..<n}\n 2. \\<And>\\<pi> xb.\n       \\<lbrakk>\\<pi> permutes {0..<n}; xb < n\\<rbrakk>\n       \\<Longrightarrow> g xb \\<in> (\\<lambda>x. g (\\<pi> x)) ` {0..<n}\n 3. \\<And>x.\n       \\<lbrakk>x \\<in> {0..<n} \\<rightarrow> {0..<m};\n        \\<forall>i. \\<not> i < n \\<longrightarrow> x i = i;\n        inj_on x {0..<n}; x ` {0..<n} = g ` {0..<n}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> (\\<circ>) g `\n                                 {\\<pi>. \\<pi> permutes {0..<n}}", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>\\<pi>.\n       \\<pi> permutes {0..<n} \\<Longrightarrow>\n       inj_on (g \\<circ> \\<pi>) {0..<n}\n 2. \\<And>\\<pi> xb.\n       \\<lbrakk>\\<pi> permutes {0..<n}; xb < n\\<rbrakk>\n       \\<Longrightarrow> g xb \\<in> (\\<lambda>x. g (\\<pi> x)) ` {0..<n}\n 3. \\<And>x.\n       \\<lbrakk>x \\<in> {0..<n} \\<rightarrow> {0..<m};\n        \\<forall>i. \\<not> i < n \\<longrightarrow> x i = i;\n        inj_on x {0..<n}; x ` {0..<n} = g ` {0..<n}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> (\\<circ>) g `\n                                 {\\<pi>. \\<pi> permutes {0..<n}}", "fix xa"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>\\<pi>.\n       \\<pi> permutes {0..<n} \\<Longrightarrow>\n       inj_on (g \\<circ> \\<pi>) {0..<n}\n 2. \\<And>\\<pi> xb.\n       \\<lbrakk>\\<pi> permutes {0..<n}; xb < n\\<rbrakk>\n       \\<Longrightarrow> g xb \\<in> (\\<lambda>x. g (\\<pi> x)) ` {0..<n}\n 3. \\<And>x.\n       \\<lbrakk>x \\<in> {0..<n} \\<rightarrow> {0..<m};\n        \\<forall>i. \\<not> i < n \\<longrightarrow> x i = i;\n        inj_on x {0..<n}; x ` {0..<n} = g ` {0..<n}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> (\\<circ>) g `\n                                 {\\<pi>. \\<pi> permutes {0..<n}}", "assume \"xa permutes {0..<n}\""], ["proof (state)\nthis:\n  xa permutes {0..<n}\n\ngoal (3 subgoals):\n 1. \\<And>\\<pi>.\n       \\<pi> permutes {0..<n} \\<Longrightarrow>\n       inj_on (g \\<circ> \\<pi>) {0..<n}\n 2. \\<And>\\<pi> xb.\n       \\<lbrakk>\\<pi> permutes {0..<n}; xb < n\\<rbrakk>\n       \\<Longrightarrow> g xb \\<in> (\\<lambda>x. g (\\<pi> x)) ` {0..<n}\n 3. \\<And>x.\n       \\<lbrakk>x \\<in> {0..<n} \\<rightarrow> {0..<m};\n        \\<forall>i. \\<not> i < n \\<longrightarrow> x i = i;\n        inj_on x {0..<n}; x ` {0..<n} = g ` {0..<n}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> (\\<circ>) g `\n                                 {\\<pi>. \\<pi> permutes {0..<n}}", "thus \"inj_on (g \\<circ> xa) {0..<n}\""], ["proof (prove)\nusing this:\n  xa permutes {0..<n}\n\ngoal (1 subgoal):\n 1. inj_on (g \\<circ> xa) {0..<n}", "by (metis (mono_tags, lifting) F_inj_def atLeast0LessThan comp_inj_on g\n          mem_Collect_eq permutes_image permutes_inj_on)"], ["proof (state)\nthis:\n  inj_on (g \\<circ> xa) {0..<n}\n\ngoal (2 subgoals):\n 1. \\<And>\\<pi> xb.\n       \\<lbrakk>\\<pi> permutes {0..<n}; xb < n\\<rbrakk>\n       \\<Longrightarrow> g xb \\<in> (\\<lambda>x. g (\\<pi> x)) ` {0..<n}\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> {0..<n} \\<rightarrow> {0..<m};\n        \\<forall>i. \\<not> i < n \\<longrightarrow> x i = i;\n        inj_on x {0..<n}; x ` {0..<n} = g ` {0..<n}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> (\\<circ>) g `\n                                 {\\<pi>. \\<pi> permutes {0..<n}}", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<pi> xb.\n       \\<lbrakk>\\<pi> permutes {0..<n}; xb < n\\<rbrakk>\n       \\<Longrightarrow> g xb \\<in> (\\<lambda>x. g (\\<pi> x)) ` {0..<n}\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> {0..<n} \\<rightarrow> {0..<m};\n        \\<forall>i. \\<not> i < n \\<longrightarrow> x i = i;\n        inj_on x {0..<n}; x ` {0..<n} = g ` {0..<n}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> (\\<circ>) g `\n                                 {\\<pi>. \\<pi> permutes {0..<n}}", "fix \\<pi> xb"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>\\<pi> xb.\n       \\<lbrakk>\\<pi> permutes {0..<n}; xb < n\\<rbrakk>\n       \\<Longrightarrow> g xb \\<in> (\\<lambda>x. g (\\<pi> x)) ` {0..<n}\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> {0..<n} \\<rightarrow> {0..<m};\n        \\<forall>i. \\<not> i < n \\<longrightarrow> x i = i;\n        inj_on x {0..<n}; x ` {0..<n} = g ` {0..<n}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> (\\<circ>) g `\n                                 {\\<pi>. \\<pi> permutes {0..<n}}", "assume \"\\<pi> permutes {0..<n}\" and \"xb < n\""], ["proof (state)\nthis:\n  \\<pi> permutes {0..<n}\n  xb < n\n\ngoal (2 subgoals):\n 1. \\<And>\\<pi> xb.\n       \\<lbrakk>\\<pi> permutes {0..<n}; xb < n\\<rbrakk>\n       \\<Longrightarrow> g xb \\<in> (\\<lambda>x. g (\\<pi> x)) ` {0..<n}\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> {0..<n} \\<rightarrow> {0..<m};\n        \\<forall>i. \\<not> i < n \\<longrightarrow> x i = i;\n        inj_on x {0..<n}; x ` {0..<n} = g ` {0..<n}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> (\\<circ>) g `\n                                 {\\<pi>. \\<pi> permutes {0..<n}}", "thus \" g xb \\<in> (\\<lambda>x. g (\\<pi> x)) ` {0..<n}\""], ["proof (prove)\nusing this:\n  \\<pi> permutes {0..<n}\n  xb < n\n\ngoal (1 subgoal):\n 1. g xb \\<in> (\\<lambda>x. g (\\<pi> x)) ` {0..<n}", "by (metis (full_types) atLeast0LessThan imageI image_image lessThan_iff permutes_image)"], ["proof (state)\nthis:\n  g xb \\<in> (\\<lambda>x. g (\\<pi> x)) ` {0..<n}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> {0..<n} \\<rightarrow> {0..<m};\n        \\<forall>i. \\<not> i < n \\<longrightarrow> x i = i;\n        inj_on x {0..<n}; x ` {0..<n} = g ` {0..<n}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> (\\<circ>) g `\n                                 {\\<pi>. \\<pi> permutes {0..<n}}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> {0..<n} \\<rightarrow> {0..<m};\n        \\<forall>i. \\<not> i < n \\<longrightarrow> x i = i;\n        inj_on x {0..<n}; x ` {0..<n} = g ` {0..<n}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> (\\<circ>) g `\n                                 {\\<pi>. \\<pi> permutes {0..<n}}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> {0..<n} \\<rightarrow> {0..<m};\n        \\<forall>i. \\<not> i < n \\<longrightarrow> x i = i;\n        inj_on x {0..<n}; x ` {0..<n} = g ` {0..<n}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> (\\<circ>) g `\n                                 {\\<pi>. \\<pi> permutes {0..<n}}", "assume x1: \"x \\<in> {0..<n} \\<rightarrow> {0..<m}\" and x2: \"\\<forall>i. \\<not> i < n \\<longrightarrow> x i = i\"\n     and inj_on_x: \"inj_on x {0..<n}\" and xg: \"x ` {0..<n} = g ` {0..<n}\""], ["proof (state)\nthis:\n  x \\<in> {0..<n} \\<rightarrow> {0..<m}\n  \\<forall>i. \\<not> i < n \\<longrightarrow> x i = i\n  inj_on x {0..<n}\n  x ` {0..<n} = g ` {0..<n}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> {0..<n} \\<rightarrow> {0..<m};\n        \\<forall>i. \\<not> i < n \\<longrightarrow> x i = i;\n        inj_on x {0..<n}; x ` {0..<n} = g ` {0..<n}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> (\\<circ>) g `\n                                 {\\<pi>. \\<pi> permutes {0..<n}}", "let ?\\<tau> = \"\\<lambda>i. if i<n then (THE j. j<n \\<and> x i = g j) else i\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> {0..<n} \\<rightarrow> {0..<m};\n        \\<forall>i. \\<not> i < n \\<longrightarrow> x i = i;\n        inj_on x {0..<n}; x ` {0..<n} = g ` {0..<n}\\<rbrakk>\n       \\<Longrightarrow> x \\<in> (\\<circ>) g `\n                                 {\\<pi>. \\<pi> permutes {0..<n}}", "show \"x \\<in> (\\<circ>) g ` {\\<pi>. \\<pi> permutes {0..<n}}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> (\\<circ>) g ` {\\<pi>. \\<pi> permutes {0..<n}}", "proof (unfold image_def, auto, rule exI[of _ ?\\<tau>], rule conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<lambda>i.\n        if i < n then THE j. j < n \\<and> x i = g j else i) permutes\n    {0..<n}\n 2. x =\n    g \\<circ>\n    (\\<lambda>i. if i < n then THE j. j < n \\<and> x i = g j else i)", "have \"?\\<tau> i = i\" if i: \"i \\<notin> {0..<n}\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if i < n then THE j. j < n \\<and> x i = g j else i) = i", "using i"], ["proof (prove)\nusing this:\n  i \\<notin> {0..<n}\n\ngoal (1 subgoal):\n 1. (if i < n then THE j. j < n \\<and> x i = g j else i) = i", "by auto"], ["proof (state)\nthis:\n  ?i1 \\<notin> {0..<n} \\<Longrightarrow>\n  (if ?i1 < n then THE j. j < n \\<and> x ?i1 = g j else ?i1) = ?i1\n\ngoal (2 subgoals):\n 1. (\\<lambda>i.\n        if i < n then THE j. j < n \\<and> x i = g j else i) permutes\n    {0..<n}\n 2. x =\n    g \\<circ>\n    (\\<lambda>i. if i < n then THE j. j < n \\<and> x i = g j else i)", "moreover"], ["proof (state)\nthis:\n  ?i1 \\<notin> {0..<n} \\<Longrightarrow>\n  (if ?i1 < n then THE j. j < n \\<and> x ?i1 = g j else ?i1) = ?i1\n\ngoal (2 subgoals):\n 1. (\\<lambda>i.\n        if i < n then THE j. j < n \\<and> x i = g j else i) permutes\n    {0..<n}\n 2. x =\n    g \\<circ>\n    (\\<lambda>i. if i < n then THE j. j < n \\<and> x i = g j else i)", "have \"\\<exists>!j. ?\\<tau> j = i\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!j. (if j < n then THE ja. ja < n \\<and> x j = g ja else j) = i", "proof (cases \"i<n\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i < n \\<Longrightarrow>\n    \\<exists>!j. (if j < n then THE ja. ja < n \\<and> x j = g ja else j) = i\n 2. \\<not> i < n \\<Longrightarrow>\n    \\<exists>!j. (if j < n then THE ja. ja < n \\<and> x j = g ja else j) = i", "case True"], ["proof (state)\nthis:\n  i < n\n\ngoal (2 subgoals):\n 1. i < n \\<Longrightarrow>\n    \\<exists>!j. (if j < n then THE ja. ja < n \\<and> x j = g ja else j) = i\n 2. \\<not> i < n \\<Longrightarrow>\n    \\<exists>!j. (if j < n then THE ja. ja < n \\<and> x j = g ja else j) = i", "obtain a where xa_gi: \"x a = g i\" and a: \"a < n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>x a = g i; a < n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using xg True"], ["proof (prove)\nusing this:\n  x ` {0..<n} = g ` {0..<n}\n  i < n\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>x a = g i; a < n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis (mono_tags, hide_lams) atLeast0LessThan imageE imageI lessThan_iff)"], ["proof (state)\nthis:\n  x a = g i\n  a < n\n\ngoal (2 subgoals):\n 1. i < n \\<Longrightarrow>\n    \\<exists>!j. (if j < n then THE ja. ja < n \\<and> x j = g ja else j) = i\n 2. \\<not> i < n \\<Longrightarrow>\n    \\<exists>!j. (if j < n then THE ja. ja < n \\<and> x j = g ja else j) = i", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!j. (if j < n then THE ja. ja < n \\<and> x j = g ja else j) = i", "proof (rule ex1I[of _ a])"], ["proof (state)\ngoal (2 subgoals):\n 1. (if a < n then THE j. j < n \\<and> x a = g j else a) = i\n 2. \\<And>j.\n       (if j < n then THE ja. ja < n \\<and> x j = g ja else j) =\n       i \\<Longrightarrow>\n       j = a", "have the_ai: \"(THE j. j < n \\<and> x a = g j) = i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (THE j. j < n \\<and> x a = g j) = i", "proof (rule theI2)"], ["proof (state)\ngoal (3 subgoals):\n 1. ?a < n \\<and> x a = g ?a\n 2. \\<And>xa. xa < n \\<and> x a = g xa \\<Longrightarrow> xa = ?a\n 3. \\<And>xa. xa < n \\<and> x a = g xa \\<Longrightarrow> xa = i", "show \"i < n \\<and> x a = g i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < n \\<and> x a = g i", "using xa_gi True"], ["proof (prove)\nusing this:\n  x a = g i\n  i < n\n\ngoal (1 subgoal):\n 1. i < n \\<and> x a = g i", "by auto"], ["proof (state)\nthis:\n  i < n \\<and> x a = g i\n\ngoal (2 subgoals):\n 1. \\<And>xa. xa < n \\<and> x a = g xa \\<Longrightarrow> xa = i\n 2. \\<And>xa. xa < n \\<and> x a = g xa \\<Longrightarrow> xa = i", "fix xa"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa. xa < n \\<and> x a = g xa \\<Longrightarrow> xa = i\n 2. \\<And>xa. xa < n \\<and> x a = g xa \\<Longrightarrow> xa = i", "assume \"xa < n \\<and> x a = g xa\""], ["proof (state)\nthis:\n  xa < n \\<and> x a = g xa\n\ngoal (2 subgoals):\n 1. \\<And>xa. xa < n \\<and> x a = g xa \\<Longrightarrow> xa = i\n 2. \\<And>xa. xa < n \\<and> x a = g xa \\<Longrightarrow> xa = i", "thus \"xa = i\""], ["proof (prove)\nusing this:\n  xa < n \\<and> x a = g xa\n\ngoal (1 subgoal):\n 1. xa = i", "by (metis (mono_tags, lifting) F_inj_def True atLeast0LessThan\n                g inj_onD lessThan_iff mem_Collect_eq xa_gi)"], ["proof (state)\nthis:\n  xa = i\n\ngoal (1 subgoal):\n 1. \\<And>xa. xa < n \\<and> x a = g xa \\<Longrightarrow> xa = i", "thus \"xa = i\""], ["proof (prove)\nusing this:\n  xa = i\n\ngoal (1 subgoal):\n 1. xa = i", "."], ["proof (state)\nthis:\n  xa = i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (THE j. j < n \\<and> x a = g j) = i\n\ngoal (2 subgoals):\n 1. (if a < n then THE j. j < n \\<and> x a = g j else a) = i\n 2. \\<And>j.\n       (if j < n then THE ja. ja < n \\<and> x j = g ja else j) =\n       i \\<Longrightarrow>\n       j = a", "thus ta: \"?\\<tau> a = i\""], ["proof (prove)\nusing this:\n  (THE j. j < n \\<and> x a = g j) = i\n\ngoal (1 subgoal):\n 1. (if a < n then THE j. j < n \\<and> x a = g j else a) = i", "using a"], ["proof (prove)\nusing this:\n  (THE j. j < n \\<and> x a = g j) = i\n  a < n\n\ngoal (1 subgoal):\n 1. (if a < n then THE j. j < n \\<and> x a = g j else a) = i", "by auto"], ["proof (state)\nthis:\n  (if a < n then THE j. j < n \\<and> x a = g j else a) = i\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       (if j < n then THE ja. ja < n \\<and> x j = g ja else j) =\n       i \\<Longrightarrow>\n       j = a", "fix j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       (if j < n then THE ja. ja < n \\<and> x j = g ja else j) =\n       i \\<Longrightarrow>\n       j = a", "assume tj: \"?\\<tau> j = i\""], ["proof (state)\nthis:\n  (if j < n then THE ja. ja < n \\<and> x j = g ja else j) = i\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       (if j < n then THE ja. ja < n \\<and> x j = g ja else j) =\n       i \\<Longrightarrow>\n       j = a", "show \"j = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j = a", "proof (cases \"j<n\")"], ["proof (state)\ngoal (2 subgoals):\n 1. j < n \\<Longrightarrow> j = a\n 2. \\<not> j < n \\<Longrightarrow> j = a", "case True"], ["proof (state)\nthis:\n  j < n\n\ngoal (2 subgoals):\n 1. j < n \\<Longrightarrow> j = a\n 2. \\<not> j < n \\<Longrightarrow> j = a", "obtain b where xj_gb: \"x j = g b\" and b: \"b < n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<lbrakk>x j = g b; b < n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using xg True"], ["proof (prove)\nusing this:\n  x ` {0..<n} = g ` {0..<n}\n  j < n\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<lbrakk>x j = g b; b < n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis (mono_tags, hide_lams) atLeast0LessThan imageE imageI lessThan_iff)"], ["proof (state)\nthis:\n  x j = g b\n  b < n\n\ngoal (2 subgoals):\n 1. j < n \\<Longrightarrow> j = a\n 2. \\<not> j < n \\<Longrightarrow> j = a", "let ?P = \"\\<lambda>ja. ja < n \\<and> x j = g ja\""], ["proof (state)\ngoal (2 subgoals):\n 1. j < n \\<Longrightarrow> j = a\n 2. \\<not> j < n \\<Longrightarrow> j = a", "have the_ji: \"(THE ja. ja < n \\<and> x j = g ja) = i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (THE ja. ja < n \\<and> x j = g ja) = i", "using tj True"], ["proof (prove)\nusing this:\n  (if j < n then THE ja. ja < n \\<and> x j = g ja else j) = i\n  j < n\n\ngoal (1 subgoal):\n 1. (THE ja. ja < n \\<and> x j = g ja) = i", "by auto"], ["proof (state)\nthis:\n  (THE ja. ja < n \\<and> x j = g ja) = i\n\ngoal (2 subgoals):\n 1. j < n \\<Longrightarrow> j = a\n 2. \\<not> j < n \\<Longrightarrow> j = a", "have \"?P (THE ja. ?P ja)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (THE ja. ja < n \\<and> x j = g ja) < n \\<and>\n    x j = g (THE ja. ja < n \\<and> x j = g ja)", "proof (rule theI)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?a < n \\<and> x j = g ?a\n 2. \\<And>xa. xa < n \\<and> x j = g xa \\<Longrightarrow> xa = ?a", "show \"b < n \\<and> x j = g b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b < n \\<and> x j = g b", "using xj_gb b"], ["proof (prove)\nusing this:\n  x j = g b\n  b < n\n\ngoal (1 subgoal):\n 1. b < n \\<and> x j = g b", "by auto"], ["proof (state)\nthis:\n  b < n \\<and> x j = g b\n\ngoal (1 subgoal):\n 1. \\<And>xa. xa < n \\<and> x j = g xa \\<Longrightarrow> xa = b", "fix xa"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa. xa < n \\<and> x j = g xa \\<Longrightarrow> xa = b", "assume \"xa < n \\<and> x j = g xa\""], ["proof (state)\nthis:\n  xa < n \\<and> x j = g xa\n\ngoal (1 subgoal):\n 1. \\<And>xa. xa < n \\<and> x j = g xa \\<Longrightarrow> xa = b", "thus \"xa = b\""], ["proof (prove)\nusing this:\n  xa < n \\<and> x j = g xa\n\ngoal (1 subgoal):\n 1. xa = b", "by (metis (mono_tags, lifting) F_inj_def b atLeast0LessThan\n                  g inj_onD lessThan_iff mem_Collect_eq xj_gb)"], ["proof (state)\nthis:\n  xa = b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (THE ja. ja < n \\<and> x j = g ja) < n \\<and>\n  x j = g (THE ja. ja < n \\<and> x j = g ja)\n\ngoal (2 subgoals):\n 1. j < n \\<Longrightarrow> j = a\n 2. \\<not> j < n \\<Longrightarrow> j = a", "hence \"x j = g i\""], ["proof (prove)\nusing this:\n  (THE ja. ja < n \\<and> x j = g ja) < n \\<and>\n  x j = g (THE ja. ja < n \\<and> x j = g ja)\n\ngoal (1 subgoal):\n 1. x j = g i", "unfolding the_ji"], ["proof (prove)\nusing this:\n  i < n \\<and> x j = g i\n\ngoal (1 subgoal):\n 1. x j = g i", "by auto"], ["proof (state)\nthis:\n  x j = g i\n\ngoal (2 subgoals):\n 1. j < n \\<Longrightarrow> j = a\n 2. \\<not> j < n \\<Longrightarrow> j = a", "hence \"x j = x a\""], ["proof (prove)\nusing this:\n  x j = g i\n\ngoal (1 subgoal):\n 1. x j = x a", "using xa_gi"], ["proof (prove)\nusing this:\n  x j = g i\n  x a = g i\n\ngoal (1 subgoal):\n 1. x j = x a", "by auto"], ["proof (state)\nthis:\n  x j = x a\n\ngoal (2 subgoals):\n 1. j < n \\<Longrightarrow> j = a\n 2. \\<not> j < n \\<Longrightarrow> j = a", "then"], ["proof (chain)\npicking this:\n  x j = x a", "show ?thesis"], ["proof (prove)\nusing this:\n  x j = x a\n\ngoal (1 subgoal):\n 1. j = a", "using inj_on_x a True"], ["proof (prove)\nusing this:\n  x j = x a\n  inj_on x {0..<n}\n  a < n\n  j < n\n\ngoal (1 subgoal):\n 1. j = a", "unfolding inj_on_def"], ["proof (prove)\nusing this:\n  x j = x a\n  \\<forall>xa\\<in>{0..<n}.\n     \\<forall>y\\<in>{0..<n}. x xa = x y \\<longrightarrow> xa = y\n  a < n\n  j < n\n\ngoal (1 subgoal):\n 1. j = a", "by auto"], ["proof (state)\nthis:\n  j = a\n\ngoal (1 subgoal):\n 1. \\<not> j < n \\<Longrightarrow> j = a", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> j < n \\<Longrightarrow> j = a", "case False"], ["proof (state)\nthis:\n  \\<not> j < n\n\ngoal (1 subgoal):\n 1. \\<not> j < n \\<Longrightarrow> j = a", "then"], ["proof (chain)\npicking this:\n  \\<not> j < n", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> j < n\n\ngoal (1 subgoal):\n 1. j = a", "using tj True"], ["proof (prove)\nusing this:\n  \\<not> j < n\n  (if j < n then THE ja. ja < n \\<and> x j = g ja else j) = i\n  i < n\n\ngoal (1 subgoal):\n 1. j = a", "by auto"], ["proof (state)\nthis:\n  j = a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  j = a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>!j. (if j < n then THE ja. ja < n \\<and> x j = g ja else j) = i\n\ngoal (1 subgoal):\n 1. \\<not> i < n \\<Longrightarrow>\n    \\<exists>!j. (if j < n then THE ja. ja < n \\<and> x j = g ja else j) = i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> i < n \\<Longrightarrow>\n    \\<exists>!j. (if j < n then THE ja. ja < n \\<and> x j = g ja else j) = i", "case False"], ["proof (state)\nthis:\n  \\<not> i < n\n\ngoal (1 subgoal):\n 1. \\<not> i < n \\<Longrightarrow>\n    \\<exists>!j. (if j < n then THE ja. ja < n \\<and> x j = g ja else j) = i", "note i_ge_n = False"], ["proof (state)\nthis:\n  \\<not> i < n\n\ngoal (1 subgoal):\n 1. \\<not> i < n \\<Longrightarrow>\n    \\<exists>!j. (if j < n then THE ja. ja < n \\<and> x j = g ja else j) = i", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>!j. (if j < n then THE ja. ja < n \\<and> x j = g ja else j) = i", "proof (rule ex1I[of _ i])"], ["proof (state)\ngoal (2 subgoals):\n 1. (if i < n then THE j. j < n \\<and> x i = g j else i) = i\n 2. \\<And>j.\n       (if j < n then THE ja. ja < n \\<and> x j = g ja else j) =\n       i \\<Longrightarrow>\n       j = i", "show \"?\\<tau> i = i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (if i < n then THE j. j < n \\<and> x i = g j else i) = i", "using False"], ["proof (prove)\nusing this:\n  \\<not> i < n\n\ngoal (1 subgoal):\n 1. (if i < n then THE j. j < n \\<and> x i = g j else i) = i", "by simp"], ["proof (state)\nthis:\n  (if i < n then THE j. j < n \\<and> x i = g j else i) = i\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       (if j < n then THE ja. ja < n \\<and> x j = g ja else j) =\n       i \\<Longrightarrow>\n       j = i", "fix j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>j.\n       (if j < n then THE ja. ja < n \\<and> x j = g ja else j) =\n       i \\<Longrightarrow>\n       j = i", "assume tj: \"?\\<tau> j = i\""], ["proof (state)\nthis:\n  (if j < n then THE ja. ja < n \\<and> x j = g ja else j) = i\n\ngoal (1 subgoal):\n 1. \\<And>j.\n       (if j < n then THE ja. ja < n \\<and> x j = g ja else j) =\n       i \\<Longrightarrow>\n       j = i", "show \"j = i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j = i", "proof (cases \"j<n\")"], ["proof (state)\ngoal (2 subgoals):\n 1. j < n \\<Longrightarrow> j = i\n 2. \\<not> j < n \\<Longrightarrow> j = i", "case True"], ["proof (state)\nthis:\n  j < n\n\ngoal (2 subgoals):\n 1. j < n \\<Longrightarrow> j = i\n 2. \\<not> j < n \\<Longrightarrow> j = i", "obtain a where xj_ga: \"x j = g a\" and a: \"a < n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>x j = g a; a < n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using xg True"], ["proof (prove)\nusing this:\n  x ` {0..<n} = g ` {0..<n}\n  j < n\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>x j = g a; a < n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis (mono_tags, hide_lams) atLeast0LessThan imageE imageI lessThan_iff)"], ["proof (state)\nthis:\n  x j = g a\n  a < n\n\ngoal (2 subgoals):\n 1. j < n \\<Longrightarrow> j = i\n 2. \\<not> j < n \\<Longrightarrow> j = i", "have \"(THE ja. ja < n \\<and> x j = g ja) < n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (THE ja. ja < n \\<and> x j = g ja) < n", "proof (rule theI2)"], ["proof (state)\ngoal (3 subgoals):\n 1. ?a < n \\<and> x j = g ?a\n 2. \\<And>xa. xa < n \\<and> x j = g xa \\<Longrightarrow> xa = ?a\n 3. \\<And>xa. xa < n \\<and> x j = g xa \\<Longrightarrow> xa < n", "show \"a < n \\<and> x j = g a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a < n \\<and> x j = g a", "using xj_ga a"], ["proof (prove)\nusing this:\n  x j = g a\n  a < n\n\ngoal (1 subgoal):\n 1. a < n \\<and> x j = g a", "by auto"], ["proof (state)\nthis:\n  a < n \\<and> x j = g a\n\ngoal (2 subgoals):\n 1. \\<And>xa. xa < n \\<and> x j = g xa \\<Longrightarrow> xa = a\n 2. \\<And>xa. xa < n \\<and> x j = g xa \\<Longrightarrow> xa < n", "fix xa"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa. xa < n \\<and> x j = g xa \\<Longrightarrow> xa = a\n 2. \\<And>xa. xa < n \\<and> x j = g xa \\<Longrightarrow> xa < n", "assume a1: \"xa < n \\<and> x j = g xa\""], ["proof (state)\nthis:\n  xa < n \\<and> x j = g xa\n\ngoal (2 subgoals):\n 1. \\<And>xa. xa < n \\<and> x j = g xa \\<Longrightarrow> xa = a\n 2. \\<And>xa. xa < n \\<and> x j = g xa \\<Longrightarrow> xa < n", "thus \"xa = a\""], ["proof (prove)\nusing this:\n  xa < n \\<and> x j = g xa\n\ngoal (1 subgoal):\n 1. xa = a", "using F_inj_def  a atLeast0LessThan g inj_on_eq_iff xj_ga"], ["proof (prove)\nusing this:\n  xa < n \\<and> x j = g xa\n  F_inj =\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n   inj_on f {0..<n}}\n  a < n\n  {0..<?n} = {..<?n}\n  g \\<in> F_inj\n  \\<lbrakk>inj_on ?f ?A; ?x \\<in> ?A; ?y \\<in> ?A\\<rbrakk>\n  \\<Longrightarrow> (?f ?x = ?f ?y) = (?x = ?y)\n  x j = g a\n\ngoal (1 subgoal):\n 1. xa = a", "by fastforce"], ["proof (state)\nthis:\n  xa = a\n\ngoal (1 subgoal):\n 1. \\<And>xa. xa < n \\<and> x j = g xa \\<Longrightarrow> xa < n", "show \"xa < n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xa < n", "by (simp add: a1)"], ["proof (state)\nthis:\n  xa < n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (THE ja. ja < n \\<and> x j = g ja) < n\n\ngoal (2 subgoals):\n 1. j < n \\<Longrightarrow> j = i\n 2. \\<not> j < n \\<Longrightarrow> j = i", "then"], ["proof (chain)\npicking this:\n  (THE ja. ja < n \\<and> x j = g ja) < n", "show ?thesis"], ["proof (prove)\nusing this:\n  (THE ja. ja < n \\<and> x j = g ja) < n\n\ngoal (1 subgoal):\n 1. j = i", "using tj i_ge_n"], ["proof (prove)\nusing this:\n  (THE ja. ja < n \\<and> x j = g ja) < n\n  (if j < n then THE ja. ja < n \\<and> x j = g ja else j) = i\n  \\<not> i < n\n\ngoal (1 subgoal):\n 1. j = i", "by auto"], ["proof (state)\nthis:\n  j = i\n\ngoal (1 subgoal):\n 1. \\<not> j < n \\<Longrightarrow> j = i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> j < n \\<Longrightarrow> j = i", "case False"], ["proof (state)\nthis:\n  \\<not> j < n\n\ngoal (1 subgoal):\n 1. \\<not> j < n \\<Longrightarrow> j = i", "then"], ["proof (chain)\npicking this:\n  \\<not> j < n", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> j < n\n\ngoal (1 subgoal):\n 1. j = i", "using tj"], ["proof (prove)\nusing this:\n  \\<not> j < n\n  (if j < n then THE ja. ja < n \\<and> x j = g ja else j) = i\n\ngoal (1 subgoal):\n 1. j = i", "by auto"], ["proof (state)\nthis:\n  j = i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  j = i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>!j. (if j < n then THE ja. ja < n \\<and> x j = g ja else j) = i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>!j. (if j < n then THE ja. ja < n \\<and> x j = g ja else j) = ?i1\n\ngoal (2 subgoals):\n 1. (\\<lambda>i.\n        if i < n then THE j. j < n \\<and> x i = g j else i) permutes\n    {0..<n}\n 2. x =\n    g \\<circ>\n    (\\<lambda>i. if i < n then THE j. j < n \\<and> x i = g j else i)", "ultimately"], ["proof (chain)\npicking this:\n  ?i1 \\<notin> {0..<n} \\<Longrightarrow>\n  (if ?i1 < n then THE j. j < n \\<and> x ?i1 = g j else ?i1) = ?i1\n  \\<exists>!j. (if j < n then THE ja. ja < n \\<and> x j = g ja else j) = ?i1", "show \"?\\<tau> permutes {0..<n}\""], ["proof (prove)\nusing this:\n  ?i1 \\<notin> {0..<n} \\<Longrightarrow>\n  (if ?i1 < n then THE j. j < n \\<and> x ?i1 = g j else ?i1) = ?i1\n  \\<exists>!j. (if j < n then THE ja. ja < n \\<and> x j = g ja else j) = ?i1\n\ngoal (1 subgoal):\n 1. (\\<lambda>i.\n        if i < n then THE j. j < n \\<and> x i = g j else i) permutes\n    {0..<n}", "unfolding permutes_def"], ["proof (prove)\nusing this:\n  ?i1 \\<notin> {0..<n} \\<Longrightarrow>\n  (if ?i1 < n then THE j. j < n \\<and> x ?i1 = g j else ?i1) = ?i1\n  \\<exists>!j. (if j < n then THE ja. ja < n \\<and> x j = g ja else j) = ?i1\n\ngoal (1 subgoal):\n 1. (\\<forall>xa.\n        xa \\<notin> {0..<n} \\<longrightarrow>\n        (if xa < n then THE j. j < n \\<and> x xa = g j else xa) = xa) \\<and>\n    (\\<forall>y.\n        \\<exists>!xa.\n           (if xa < n then THE j. j < n \\<and> x xa = g j else xa) = y)", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>i. if i < n then THE j. j < n \\<and> x i = g j else i) permutes\n  {0..<n}\n\ngoal (1 subgoal):\n 1. x =\n    g \\<circ>\n    (\\<lambda>i. if i < n then THE j. j < n \\<and> x i = g j else i)", "show \"x = g \\<circ> ?\\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x =\n    g \\<circ>\n    (\\<lambda>i. if i < n then THE j. j < n \\<and> x i = g j else i)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x =\n    g \\<circ>\n    (\\<lambda>i. if i < n then THE j. j < n \\<and> x i = g j else i)", "have \"x xa = g (THE j. j < n \\<and> x xa = g j)\" if xa: \"xa < n\" for xa"], ["proof (prove)\ngoal (1 subgoal):\n 1. x xa = g (THE j. j < n \\<and> x xa = g j)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x xa = g (THE j. j < n \\<and> x xa = g j)", "obtain c where c: \"c < n\" and xxa_gc: \"x xa = g c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>c < n; x xa = g c\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis (mono_tags, hide_lams) atLeast0LessThan imageE imageI lessThan_iff xa xg)"], ["proof (state)\nthis:\n  c < n\n  x xa = g c\n\ngoal (1 subgoal):\n 1. x xa = g (THE j. j < n \\<and> x xa = g j)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. x xa = g (THE j. j < n \\<and> x xa = g j)", "proof (rule theI2)"], ["proof (state)\ngoal (3 subgoals):\n 1. ?a < n \\<and> x xa = g ?a\n 2. \\<And>xb. xb < n \\<and> x xa = g xb \\<Longrightarrow> xb = ?a\n 3. \\<And>xb. xb < n \\<and> x xa = g xb \\<Longrightarrow> x xa = g xb", "show c1: \"c < n \\<and> x xa = g c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c < n \\<and> x xa = g c", "using c xxa_gc"], ["proof (prove)\nusing this:\n  c < n\n  x xa = g c\n\ngoal (1 subgoal):\n 1. c < n \\<and> x xa = g c", "by auto"], ["proof (state)\nthis:\n  c < n \\<and> x xa = g c\n\ngoal (2 subgoals):\n 1. \\<And>xb. xb < n \\<and> x xa = g xb \\<Longrightarrow> xb = c\n 2. \\<And>xb. xb < n \\<and> x xa = g xb \\<Longrightarrow> x xa = g xb", "fix xb"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xb. xb < n \\<and> x xa = g xb \\<Longrightarrow> xb = c\n 2. \\<And>xb. xb < n \\<and> x xa = g xb \\<Longrightarrow> x xa = g xb", "assume c2: \"xb < n \\<and> x xa = g xb\""], ["proof (state)\nthis:\n  xb < n \\<and> x xa = g xb\n\ngoal (2 subgoals):\n 1. \\<And>xb. xb < n \\<and> x xa = g xb \\<Longrightarrow> xb = c\n 2. \\<And>xb. xb < n \\<and> x xa = g xb \\<Longrightarrow> x xa = g xb", "thus \"xb = c\""], ["proof (prove)\nusing this:\n  xb < n \\<and> x xa = g xb\n\ngoal (1 subgoal):\n 1. xb = c", "by (metis (mono_tags, lifting) F_inj_def c1 atLeast0LessThan\n                 g inj_onD lessThan_iff mem_Collect_eq)"], ["proof (state)\nthis:\n  xb = c\n\ngoal (1 subgoal):\n 1. \\<And>xb. xb < n \\<and> x xa = g xb \\<Longrightarrow> x xa = g xb", "show \"x xa = g xb\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x xa = g xb", "using c1 c2"], ["proof (prove)\nusing this:\n  c < n \\<and> x xa = g c\n  xb < n \\<and> x xa = g xb\n\ngoal (1 subgoal):\n 1. x xa = g xb", "by simp"], ["proof (state)\nthis:\n  x xa = g xb\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x xa = g (THE j. j < n \\<and> x xa = g j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?xa1 < n \\<Longrightarrow> x ?xa1 = g (THE j. j < n \\<and> x ?xa1 = g j)\n\ngoal (1 subgoal):\n 1. x =\n    g \\<circ>\n    (\\<lambda>i. if i < n then THE j. j < n \\<and> x i = g j else i)", "moreover"], ["proof (state)\nthis:\n  ?xa1 < n \\<Longrightarrow> x ?xa1 = g (THE j. j < n \\<and> x ?xa1 = g j)\n\ngoal (1 subgoal):\n 1. x =\n    g \\<circ>\n    (\\<lambda>i. if i < n then THE j. j < n \\<and> x i = g j else i)", "have \"x xa = g xa\" if xa: \"\\<not> xa < n\" for xa"], ["proof (prove)\ngoal (1 subgoal):\n 1. x xa = g xa", "using g x1 x2 xa"], ["proof (prove)\nusing this:\n  g \\<in> F_inj\n  x \\<in> {0..<n} \\<rightarrow> {0..<m}\n  \\<forall>i. \\<not> i < n \\<longrightarrow> x i = i\n  \\<not> xa < n\n\ngoal (1 subgoal):\n 1. x xa = g xa", "unfolding F_inj_def"], ["proof (prove)\nusing this:\n  g \\<in> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n           (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n           inj_on f {0..<n}}\n  x \\<in> {0..<n} \\<rightarrow> {0..<m}\n  \\<forall>i. \\<not> i < n \\<longrightarrow> x i = i\n  \\<not> xa < n\n\ngoal (1 subgoal):\n 1. x xa = g xa", "by simp"], ["proof (state)\nthis:\n  \\<not> ?xa1 < n \\<Longrightarrow> x ?xa1 = g ?xa1\n\ngoal (1 subgoal):\n 1. x =\n    g \\<circ>\n    (\\<lambda>i. if i < n then THE j. j < n \\<and> x i = g j else i)", "ultimately"], ["proof (chain)\npicking this:\n  ?xa1 < n \\<Longrightarrow> x ?xa1 = g (THE j. j < n \\<and> x ?xa1 = g j)\n  \\<not> ?xa1 < n \\<Longrightarrow> x ?xa1 = g ?xa1", "show ?thesis"], ["proof (prove)\nusing this:\n  ?xa1 < n \\<Longrightarrow> x ?xa1 = g (THE j. j < n \\<and> x ?xa1 = g j)\n  \\<not> ?xa1 < n \\<Longrightarrow> x ?xa1 = g ?xa1\n\ngoal (1 subgoal):\n 1. x =\n    g \\<circ>\n    (\\<lambda>i. if i < n then THE j. j < n \\<and> x i = g j else i)", "unfolding o_def fun_eq_iff"], ["proof (prove)\nusing this:\n  ?xa1 < n \\<Longrightarrow> x ?xa1 = g (THE j. j < n \\<and> x ?xa1 = g j)\n  \\<not> ?xa1 < n \\<Longrightarrow> x ?xa1 = g ?xa1\n\ngoal (1 subgoal):\n 1. \\<forall>xa.\n       x xa = g (if xa < n then THE j. j < n \\<and> x xa = g j else xa)", "by auto"], ["proof (state)\nthis:\n  x =\n  g \\<circ> (\\<lambda>i. if i < n then THE j. j < n \\<and> x i = g j else i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x =\n  g \\<circ> (\\<lambda>i. if i < n then THE j. j < n \\<and> x i = g j else i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> (\\<circ>) g ` {\\<pi>. \\<pi> permutes {0..<n}}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<circ>) g ` {\\<pi>. \\<pi> permutes {0..<n}} = Z_good_fun\n\ngoal (1 subgoal):\n 1. sum P Z_good_fun =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}. P (g \\<circ> \\<pi>))", "have inj: \"inj_on ?f ?P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on ((\\<circ>) g) {\\<pi>. \\<pi> permutes {0..<n}}", "proof (rule inj_onI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {\\<pi>. \\<pi> permutes {0..<n}};\n        y \\<in> {\\<pi>. \\<pi> permutes {0..<n}};\n        g \\<circ> x = g \\<circ> y\\<rbrakk>\n       \\<Longrightarrow> x = y", "fix x y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {\\<pi>. \\<pi> permutes {0..<n}};\n        y \\<in> {\\<pi>. \\<pi> permutes {0..<n}};\n        g \\<circ> x = g \\<circ> y\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume x: \"x \\<in> ?P\" and y: \"y \\<in> ?P\" and gx_gy: \"g \\<circ> x = g \\<circ> y\""], ["proof (state)\nthis:\n  x \\<in> {\\<pi>. \\<pi> permutes {0..<n}}\n  y \\<in> {\\<pi>. \\<pi> permutes {0..<n}}\n  g \\<circ> x = g \\<circ> y\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {\\<pi>. \\<pi> permutes {0..<n}};\n        y \\<in> {\\<pi>. \\<pi> permutes {0..<n}};\n        g \\<circ> x = g \\<circ> y\\<rbrakk>\n       \\<Longrightarrow> x = y", "have \"x i = y i\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. x i = y i", "proof (cases \"i<n\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i < n \\<Longrightarrow> x i = y i\n 2. \\<not> i < n \\<Longrightarrow> x i = y i", "case True"], ["proof (state)\nthis:\n  i < n\n\ngoal (2 subgoals):\n 1. i < n \\<Longrightarrow> x i = y i\n 2. \\<not> i < n \\<Longrightarrow> x i = y i", "hence xi: \"x i \\<in> {0..<n}\" and yi: \"y i \\<in> {0..<n}\""], ["proof (prove)\nusing this:\n  i < n\n\ngoal (1 subgoal):\n 1. x i \\<in> {0..<n} &&& y i \\<in> {0..<n}", "using x y"], ["proof (prove)\nusing this:\n  i < n\n  x \\<in> {\\<pi>. \\<pi> permutes {0..<n}}\n  y \\<in> {\\<pi>. \\<pi> permutes {0..<n}}\n\ngoal (1 subgoal):\n 1. x i \\<in> {0..<n} &&& y i \\<in> {0..<n}", "by auto"], ["proof (state)\nthis:\n  x i \\<in> {0..<n}\n  y i \\<in> {0..<n}\n\ngoal (2 subgoals):\n 1. i < n \\<Longrightarrow> x i = y i\n 2. \\<not> i < n \\<Longrightarrow> x i = y i", "have \"g (x i) = g (y i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g (x i) = g (y i)", "using gx_gy"], ["proof (prove)\nusing this:\n  g \\<circ> x = g \\<circ> y\n\ngoal (1 subgoal):\n 1. g (x i) = g (y i)", "unfolding o_def"], ["proof (prove)\nusing this:\n  (\\<lambda>xa. g (x xa)) = (\\<lambda>x. g (y x))\n\ngoal (1 subgoal):\n 1. g (x i) = g (y i)", "by meson"], ["proof (state)\nthis:\n  g (x i) = g (y i)\n\ngoal (2 subgoals):\n 1. i < n \\<Longrightarrow> x i = y i\n 2. \\<not> i < n \\<Longrightarrow> x i = y i", "thus ?thesis"], ["proof (prove)\nusing this:\n  g (x i) = g (y i)\n\ngoal (1 subgoal):\n 1. x i = y i", "using xi yi"], ["proof (prove)\nusing this:\n  g (x i) = g (y i)\n  x i \\<in> {0..<n}\n  y i \\<in> {0..<n}\n\ngoal (1 subgoal):\n 1. x i = y i", "using g"], ["proof (prove)\nusing this:\n  g (x i) = g (y i)\n  x i \\<in> {0..<n}\n  y i \\<in> {0..<n}\n  g \\<in> F_inj\n\ngoal (1 subgoal):\n 1. x i = y i", "unfolding F_inj_def inj_on_def"], ["proof (prove)\nusing this:\n  g (x i) = g (y i)\n  x i \\<in> {0..<n}\n  y i \\<in> {0..<n}\n  g \\<in> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n           (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n           (\\<forall>x\\<in>{0..<n}.\n               \\<forall>y\\<in>{0..<n}. f x = f y \\<longrightarrow> x = y)}\n\ngoal (1 subgoal):\n 1. x i = y i", "by blast"], ["proof (state)\nthis:\n  x i = y i\n\ngoal (1 subgoal):\n 1. \\<not> i < n \\<Longrightarrow> x i = y i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> i < n \\<Longrightarrow> x i = y i", "case False"], ["proof (state)\nthis:\n  \\<not> i < n\n\ngoal (1 subgoal):\n 1. \\<not> i < n \\<Longrightarrow> x i = y i", "then"], ["proof (chain)\npicking this:\n  \\<not> i < n", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> i < n\n\ngoal (1 subgoal):\n 1. x i = y i", "using x y"], ["proof (prove)\nusing this:\n  \\<not> i < n\n  x \\<in> {\\<pi>. \\<pi> permutes {0..<n}}\n  y \\<in> {\\<pi>. \\<pi> permutes {0..<n}}\n\ngoal (1 subgoal):\n 1. x i = y i", "unfolding permutes_def"], ["proof (prove)\nusing this:\n  \\<not> i < n\n  x \\<in> {\\<pi>.\n           (\\<forall>x.\n               x \\<notin> {0..<n} \\<longrightarrow> \\<pi> x = x) \\<and>\n           (\\<forall>y. \\<exists>!x. \\<pi> x = y)}\n  y \\<in> {\\<pi>.\n           (\\<forall>x.\n               x \\<notin> {0..<n} \\<longrightarrow> \\<pi> x = x) \\<and>\n           (\\<forall>y. \\<exists>!x. \\<pi> x = y)}\n\ngoal (1 subgoal):\n 1. x i = y i", "by auto"], ["proof (state)\nthis:\n  x i = y i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x ?i1 = y ?i1\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {\\<pi>. \\<pi> permutes {0..<n}};\n        y \\<in> {\\<pi>. \\<pi> permutes {0..<n}};\n        g \\<circ> x = g \\<circ> y\\<rbrakk>\n       \\<Longrightarrow> x = y", "thus \"x = y\""], ["proof (prove)\nusing this:\n  x ?i1 = y ?i1\n\ngoal (1 subgoal):\n 1. x = y", "unfolding fun_eq_iff"], ["proof (prove)\nusing this:\n  x ?i1 = y ?i1\n\ngoal (1 subgoal):\n 1. \\<forall>xa. x xa = y xa", "by auto"], ["proof (state)\nthis:\n  x = y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inj_on ((\\<circ>) g) {\\<pi>. \\<pi> permutes {0..<n}}\n\ngoal (1 subgoal):\n 1. sum P Z_good_fun =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}. P (g \\<circ> \\<pi>))", "have \"(\\<Sum>f\\<in>Z_good_fun. P f) = (\\<Sum>f\\<in>?f`?P. P f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum P Z_good_fun = sum P ((\\<circ>) g ` {\\<pi>. \\<pi> permutes {0..<n}})", "using fP"], ["proof (prove)\nusing this:\n  (\\<circ>) g ` {\\<pi>. \\<pi> permutes {0..<n}} = Z_good_fun\n\ngoal (1 subgoal):\n 1. sum P Z_good_fun = sum P ((\\<circ>) g ` {\\<pi>. \\<pi> permutes {0..<n}})", "by simp"], ["proof (state)\nthis:\n  sum P Z_good_fun = sum P ((\\<circ>) g ` {\\<pi>. \\<pi> permutes {0..<n}})\n\ngoal (1 subgoal):\n 1. sum P Z_good_fun =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}. P (g \\<circ> \\<pi>))", "also"], ["proof (state)\nthis:\n  sum P Z_good_fun = sum P ((\\<circ>) g ` {\\<pi>. \\<pi> permutes {0..<n}})\n\ngoal (1 subgoal):\n 1. sum P Z_good_fun =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}. P (g \\<circ> \\<pi>))", "have \"... =  sum (P \\<circ> (\\<circ>) g) {\\<pi>. \\<pi> permutes {0..<n}}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum P ((\\<circ>) g ` {\\<pi>. \\<pi> permutes {0..<n}}) =\n    sum (P \\<circ> (\\<circ>) g) {\\<pi>. \\<pi> permutes {0..<n}}", "by (rule sum.reindex[OF inj])"], ["proof (state)\nthis:\n  sum P ((\\<circ>) g ` {\\<pi>. \\<pi> permutes {0..<n}}) =\n  sum (P \\<circ> (\\<circ>) g) {\\<pi>. \\<pi> permutes {0..<n}}\n\ngoal (1 subgoal):\n 1. sum P Z_good_fun =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}. P (g \\<circ> \\<pi>))", "also"], ["proof (state)\nthis:\n  sum P ((\\<circ>) g ` {\\<pi>. \\<pi> permutes {0..<n}}) =\n  sum (P \\<circ> (\\<circ>) g) {\\<pi>. \\<pi> permutes {0..<n}}\n\ngoal (1 subgoal):\n 1. sum P Z_good_fun =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}. P (g \\<circ> \\<pi>))", "have \"... =  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}. P (g \\<circ> \\<pi>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum (P \\<circ> (\\<circ>) g) {\\<pi>. \\<pi> permutes {0..<n}} =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}. P (g \\<circ> \\<pi>))", "by auto"], ["proof (state)\nthis:\n  sum (P \\<circ> (\\<circ>) g) {\\<pi>. \\<pi> permutes {0..<n}} =\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}. P (g \\<circ> \\<pi>))\n\ngoal (1 subgoal):\n 1. sum P Z_good_fun =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}. P (g \\<circ> \\<pi>))", "finally"], ["proof (chain)\npicking this:\n  sum P Z_good_fun =\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}. P (g \\<circ> \\<pi>))", "show ?thesis"], ["proof (prove)\nusing this:\n  sum P Z_good_fun =\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}. P (g \\<circ> \\<pi>))\n\ngoal (1 subgoal):\n 1. sum P Z_good_fun =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}. P (g \\<circ> \\<pi>))", "."], ["proof (state)\nthis:\n  sum P Z_good_fun =\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}. P (g \\<circ> \\<pi>))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma F_injI:\n  assumes \"f \\<in> {0..<n} \\<rightarrow> {0..<m}\"\n  and \"(\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)\" and \"inj_on f {0..<n}\"\n  shows \"f \\<in> F_inj\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> F_inj", "using assms"], ["proof (prove)\nusing this:\n  f \\<in> {0..<n} \\<rightarrow> {0..<m}\n  \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i\n  inj_on f {0..<n}\n\ngoal (1 subgoal):\n 1. f \\<in> F_inj", "unfolding F_inj_def"], ["proof (prove)\nusing this:\n  f \\<in> {0..<n} \\<rightarrow> {0..<m}\n  \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i\n  inj_on f {0..<n}\n\ngoal (1 subgoal):\n 1. f \\<in> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n             (\\<forall>i.\n                 i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n             inj_on f {0..<n}}", "by simp"], ["", "lemma F_inj_composition_permutation:\n  assumes phi: \"\\<phi> permutes {0..<n}\"\n  and g: \"g \\<in> F_inj\"\n  shows \"g \\<circ> \\<phi> \\<in> F_inj\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<circ> \\<phi> \\<in> F_inj", "proof (rule F_injI)"], ["proof (state)\ngoal (3 subgoals):\n 1. g \\<circ> \\<phi> \\<in> {0..<n} \\<rightarrow> {0..<m}\n 2. \\<forall>i.\n       i \\<notin> {0..<n} \\<longrightarrow> (g \\<circ> \\<phi>) i = i\n 3. inj_on (g \\<circ> \\<phi>) {0..<n}", "show \"g \\<circ> \\<phi> \\<in> {0..<n} \\<rightarrow> {0..<m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<circ> \\<phi> \\<in> {0..<n} \\<rightarrow> {0..<m}", "using g"], ["proof (prove)\nusing this:\n  g \\<in> F_inj\n\ngoal (1 subgoal):\n 1. g \\<circ> \\<phi> \\<in> {0..<n} \\<rightarrow> {0..<m}", "unfolding permutes_def F_inj_def"], ["proof (prove)\nusing this:\n  g \\<in> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n           (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n           inj_on f {0..<n}}\n\ngoal (1 subgoal):\n 1. g \\<circ> \\<phi> \\<in> {0..<n} \\<rightarrow> {0..<m}", "by (simp add: Pi_iff phi)"], ["proof (state)\nthis:\n  g \\<circ> \\<phi> \\<in> {0..<n} \\<rightarrow> {0..<m}\n\ngoal (2 subgoals):\n 1. \\<forall>i.\n       i \\<notin> {0..<n} \\<longrightarrow> (g \\<circ> \\<phi>) i = i\n 2. inj_on (g \\<circ> \\<phi>) {0..<n}", "show \"\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> (g \\<circ> \\<phi>) i = i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i.\n       i \\<notin> {0..<n} \\<longrightarrow> (g \\<circ> \\<phi>) i = i", "using g phi"], ["proof (prove)\nusing this:\n  g \\<in> F_inj\n  \\<phi> permutes {0..<n}\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       i \\<notin> {0..<n} \\<longrightarrow> (g \\<circ> \\<phi>) i = i", "unfolding permutes_def F_inj_def"], ["proof (prove)\nusing this:\n  g \\<in> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n           (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n           inj_on f {0..<n}}\n  (\\<forall>x. x \\<notin> {0..<n} \\<longrightarrow> \\<phi> x = x) \\<and>\n  (\\<forall>y. \\<exists>!x. \\<phi> x = y)\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       i \\<notin> {0..<n} \\<longrightarrow> (g \\<circ> \\<phi>) i = i", "by simp"], ["proof (state)\nthis:\n  \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> (g \\<circ> \\<phi>) i = i\n\ngoal (1 subgoal):\n 1. inj_on (g \\<circ> \\<phi>) {0..<n}", "show \"inj_on (g \\<circ> \\<phi>) {0..<n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (g \\<circ> \\<phi>) {0..<n}", "by (rule comp_inj_on, insert g permutes_inj_on[OF phi] permutes_image[OF phi])\n       (auto simp add: F_inj_def)"], ["proof (state)\nthis:\n  inj_on (g \\<circ> \\<phi>) {0..<n}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma F_strict_imp_F_inj:\n  assumes f: \"f \\<in> F_strict\"\n  shows \"f \\<in> F_inj\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> F_inj", "using f strict_mono_on_imp_inj_on"], ["proof (prove)\nusing this:\n  f \\<in> F_strict\n  strict_mono_on ?f ?A \\<Longrightarrow> inj_on ?f ?A\n\ngoal (1 subgoal):\n 1. f \\<in> F_inj", "unfolding F_strict_def F_inj_def"], ["proof (prove)\nusing this:\n  f \\<in> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n           (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n           strict_mono_on f {0..<n}}\n  strict_mono_on ?f ?A \\<Longrightarrow> inj_on ?f ?A\n\ngoal (1 subgoal):\n 1. f \\<in> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n             (\\<forall>i.\n                 i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n             inj_on f {0..<n}}", "by auto"], ["", "lemma one_step:\n  assumes g1: \"g \\<in> F_strict\"\n  shows \"det (submatrix A UNIV (g`{0..<n})) * det (submatrix B (g`{0..<n}) UNIV)\n    = (\\<Sum>(x, y) \\<in> Z_good g. weight x y)\" (is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A UNIV (g ` {0..<n})) *\n    Determinant.det (submatrix B (g ` {0..<n}) UNIV) =\n    (\\<Sum>(x, y)\\<in>Z_good g. weight x y)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A UNIV (g ` {0..<n})) *\n    Determinant.det (submatrix B (g ` {0..<n}) UNIV) =\n    (\\<Sum>(x, y)\\<in>Z_good g. weight x y)", "define Z_good_fun where \"Z_good_fun = {f. f \\<in> {0..<n} \\<rightarrow> {0..<m} \\<and> (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)\n    \\<and> inj_on f {0..<n} \\<and> (f`{0..<n} = g`{0..<n})}\""], ["proof (state)\nthis:\n  Z_good_fun =\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n   inj_on f {0..<n} \\<and> f ` {0..<n} = g ` {0..<n}}\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A UNIV (g ` {0..<n})) *\n    Determinant.det (submatrix B (g ` {0..<n}) UNIV) =\n    (\\<Sum>(x, y)\\<in>Z_good g. weight x y)", "let ?Perm = \"{\\<pi>. \\<pi> permutes {0..<n}}\""], ["proof (state)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A UNIV (g ` {0..<n})) *\n    Determinant.det (submatrix B (g ` {0..<n}) UNIV) =\n    (\\<Sum>(x, y)\\<in>Z_good g. weight x y)", "let ?P = \"(\\<lambda>f. \\<Sum>\\<pi> \\<in> ?Perm. weight f \\<pi>)\""], ["proof (state)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A UNIV (g ` {0..<n})) *\n    Determinant.det (submatrix B (g ` {0..<n}) UNIV) =\n    (\\<Sum>(x, y)\\<in>Z_good g. weight x y)", "let ?inv = \"Hilbert_Choice.inv\""], ["proof (state)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A UNIV (g ` {0..<n})) *\n    Determinant.det (submatrix B (g ` {0..<n}) UNIV) =\n    (\\<Sum>(x, y)\\<in>Z_good g. weight x y)", "have g: \"g \\<in> F_inj\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<in> F_inj", "by (rule F_strict_imp_F_inj[OF g1])"], ["proof (state)\nthis:\n  g \\<in> F_inj\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A UNIV (g ` {0..<n})) *\n    Determinant.det (submatrix B (g ` {0..<n}) UNIV) =\n    (\\<Sum>(x, y)\\<in>Z_good g. weight x y)", "have detA: \"(\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}. signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))))\n    = det (submatrix A UNIV (g`{0..<n}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n       signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i)))) =\n    Determinant.det (submatrix A UNIV (g ` {0..<n}))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n       signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i)))) =\n    Determinant.det (submatrix A UNIV (g ` {0..<n}))", "have \"{j. j < dim_col A \\<and> j \\<in> g ` {0..<n}} = {j. j \\<in> g ` {0..<n}}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {j. j < dim_col A \\<and> j \\<in> g ` {0..<n}} = {j. j \\<in> g ` {0..<n}}", "using g A"], ["proof (prove)\nusing this:\n  g \\<in> F_inj\n  A \\<in> carrier_mat n m\n\ngoal (1 subgoal):\n 1. {j. j < dim_col A \\<and> j \\<in> g ` {0..<n}} = {j. j \\<in> g ` {0..<n}}", "unfolding F_inj_def"], ["proof (prove)\nusing this:\n  g \\<in> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n           (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n           inj_on f {0..<n}}\n  A \\<in> carrier_mat n m\n\ngoal (1 subgoal):\n 1. {j. j < dim_col A \\<and> j \\<in> g ` {0..<n}} = {j. j \\<in> g ` {0..<n}}", "by fastforce"], ["proof (state)\nthis:\n  {j. j < dim_col A \\<and> j \\<in> g ` {0..<n}} = {j. j \\<in> g ` {0..<n}}\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n       signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i)))) =\n    Determinant.det (submatrix A UNIV (g ` {0..<n}))", "also"], ["proof (state)\nthis:\n  {j. j < dim_col A \\<and> j \\<in> g ` {0..<n}} = {j. j \\<in> g ` {0..<n}}\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n       signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i)))) =\n    Determinant.det (submatrix A UNIV (g ` {0..<n}))", "have \"card ... = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {j. j \\<in> g ` {0..<n}} = n", "using F_inj_def card_image g"], ["proof (prove)\nusing this:\n  F_inj =\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n   inj_on f {0..<n}}\n  inj_on ?f ?A \\<Longrightarrow> card (?f ` ?A) = card ?A\n  g \\<in> F_inj\n\ngoal (1 subgoal):\n 1. card {j. j \\<in> g ` {0..<n}} = n", "by force"], ["proof (state)\nthis:\n  card {j. j \\<in> g ` {0..<n}} = n\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n       signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i)))) =\n    Determinant.det (submatrix A UNIV (g ` {0..<n}))", "finally"], ["proof (chain)\npicking this:\n  card {j. j < dim_col A \\<and> j \\<in> g ` {0..<n}} = n", "have card_J: \"card {j. j < dim_col A \\<and> j \\<in> g ` {0..<n}} = n\""], ["proof (prove)\nusing this:\n  card {j. j < dim_col A \\<and> j \\<in> g ` {0..<n}} = n\n\ngoal (1 subgoal):\n 1. card {j. j < dim_col A \\<and> j \\<in> g ` {0..<n}} = n", "by simp"], ["proof (state)\nthis:\n  card {j. j < dim_col A \\<and> j \\<in> g ` {0..<n}} = n\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n       signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i)))) =\n    Determinant.det (submatrix A UNIV (g ` {0..<n}))", "have subA_carrier: \"submatrix A UNIV (g ` {0..<n}) \\<in> carrier_mat n n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix A UNIV (g ` {0..<n}) \\<in> carrier_mat n n", "unfolding submatrix_def card_J"], ["proof (prove)\ngoal (1 subgoal):\n 1. Matrix.mat (card {i. i < dim_row A \\<and> i \\<in> UNIV}) n\n     (\\<lambda>(i, j). A $$ (pick UNIV i, pick (g ` {0..<n}) j))\n    \\<in> carrier_mat n n", "using A"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat n m\n\ngoal (1 subgoal):\n 1. Matrix.mat (card {i. i < dim_row A \\<and> i \\<in> UNIV}) n\n     (\\<lambda>(i, j). A $$ (pick UNIV i, pick (g ` {0..<n}) j))\n    \\<in> carrier_mat n n", "by auto"], ["proof (state)\nthis:\n  submatrix A UNIV (g ` {0..<n}) \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n       signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i)))) =\n    Determinant.det (submatrix A UNIV (g ` {0..<n}))", "have \"det (submatrix A UNIV (g`{0..<n})) = (\\<Sum>p | p permutes {0..<n}.\n            signof p * (\\<Prod>i = 0..<n. submatrix A UNIV (g ` {0..<n}) $$ (i, p i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A UNIV (g ` {0..<n})) =\n    (\\<Sum>p | p permutes {0..<n}.\n       signof p *\n       (\\<Prod>i = 0..<n. submatrix A UNIV (g ` {0..<n}) $$ (i, p i)))", "using subA_carrier"], ["proof (prove)\nusing this:\n  submatrix A UNIV (g ` {0..<n}) \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A UNIV (g ` {0..<n})) =\n    (\\<Sum>p | p permutes {0..<n}.\n       signof p *\n       (\\<Prod>i = 0..<n. submatrix A UNIV (g ` {0..<n}) $$ (i, p i)))", "unfolding Determinant.det_def"], ["proof (prove)\nusing this:\n  submatrix A UNIV (g ` {0..<n}) \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. (if dim_row (submatrix A UNIV (g ` {0..<n})) =\n        dim_col (submatrix A UNIV (g ` {0..<n}))\n     then \\<Sum>p | p permutes\n                    {0..<dim_row (submatrix A UNIV (g ` {0..<n}))}.\n            signof p *\n            (\\<Prod>i = 0..<dim_row (submatrix A UNIV (g ` {0..<n})).\n                submatrix A UNIV (g ` {0..<n}) $$ (i, p i))\n     else (0::'a)) =\n    (\\<Sum>p | p permutes {0..<n}.\n       signof p *\n       (\\<Prod>i = 0..<n. submatrix A UNIV (g ` {0..<n}) $$ (i, p i)))", "by auto"], ["proof (state)\nthis:\n  Determinant.det (submatrix A UNIV (g ` {0..<n})) =\n  (\\<Sum>p | p permutes {0..<n}.\n     signof p *\n     (\\<Prod>i = 0..<n. submatrix A UNIV (g ` {0..<n}) $$ (i, p i)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n       signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i)))) =\n    Determinant.det (submatrix A UNIV (g ` {0..<n}))", "also"], ["proof (state)\nthis:\n  Determinant.det (submatrix A UNIV (g ` {0..<n})) =\n  (\\<Sum>p | p permutes {0..<n}.\n     signof p *\n     (\\<Prod>i = 0..<n. submatrix A UNIV (g ` {0..<n}) $$ (i, p i)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n       signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i)))) =\n    Determinant.det (submatrix A UNIV (g ` {0..<n}))", "have \"... = (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}. signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>p | p permutes {0..<n}.\n       signof p *\n       (\\<Prod>i = 0..<n. submatrix A UNIV (g ` {0..<n}) $$ (i, p i))) =\n    (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n       signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))))", "proof (rule sum.cong)"], ["proof (state)\ngoal (2 subgoals):\n 1. {p. p permutes {0..<n}} = {\\<pi>. \\<pi> permutes {0..<n}}\n 2. \\<And>x.\n       x \\<in> {\\<pi>. \\<pi> permutes {0..<n}} \\<Longrightarrow>\n       signof x *\n       (\\<Prod>i = 0..<n. submatrix A UNIV (g ` {0..<n}) $$ (i, x i)) =\n       signof x * (\\<Prod>i = 0..<n. A $$ (i, g (x i)))", "fix x"], ["proof (state)\ngoal (2 subgoals):\n 1. {p. p permutes {0..<n}} = {\\<pi>. \\<pi> permutes {0..<n}}\n 2. \\<And>x.\n       x \\<in> {\\<pi>. \\<pi> permutes {0..<n}} \\<Longrightarrow>\n       signof x *\n       (\\<Prod>i = 0..<n. submatrix A UNIV (g ` {0..<n}) $$ (i, x i)) =\n       signof x * (\\<Prod>i = 0..<n. A $$ (i, g (x i)))", "assume x: \"x \\<in> {\\<pi>. \\<pi> permutes {0..<n}}\""], ["proof (state)\nthis:\n  x \\<in> {\\<pi>. \\<pi> permutes {0..<n}}\n\ngoal (2 subgoals):\n 1. {p. p permutes {0..<n}} = {\\<pi>. \\<pi> permutes {0..<n}}\n 2. \\<And>x.\n       x \\<in> {\\<pi>. \\<pi> permutes {0..<n}} \\<Longrightarrow>\n       signof x *\n       (\\<Prod>i = 0..<n. submatrix A UNIV (g ` {0..<n}) $$ (i, x i)) =\n       signof x * (\\<Prod>i = 0..<n. A $$ (i, g (x i)))", "have \"(\\<Prod>i = 0..<n. submatrix A UNIV (g ` {0..<n}) $$ (i, x i))\n          = (\\<Prod>i = 0..<n. A $$ (i, g (x i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<n. submatrix A UNIV (g ` {0..<n}) $$ (i, x i)) =\n    (\\<Prod>i = 0..<n. A $$ (i, g (x i)))", "proof (rule prod.cong, rule refl)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {0..<n} \\<Longrightarrow>\n       submatrix A UNIV (g ` {0..<n}) $$ (xa, x xa) = A $$ (xa, g (x xa))", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {0..<n} \\<Longrightarrow>\n       submatrix A UNIV (g ` {0..<n}) $$ (xa, x xa) = A $$ (xa, g (x xa))", "assume i: \"i \\<in> {0..<n}\""], ["proof (state)\nthis:\n  i \\<in> {0..<n}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {0..<n} \\<Longrightarrow>\n       submatrix A UNIV (g ` {0..<n}) $$ (xa, x xa) = A $$ (xa, g (x xa))", "have pick_rw: \"pick (g ` {0..<n}) (x i) = g (x i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pick (g ` {0..<n}) (x i) = g (x i)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pick (g ` {0..<n}) (x i) = g (x i)", "have \"index (sorted_list_of_set (g ` {0..<n})) (g (x i)) = x i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. index (sorted_list_of_set (g ` {0..<n})) (g (x i)) = x i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. index (sorted_list_of_set (g ` {0..<n})) (g (x i)) = x i", "have rw: \"sorted_list_of_set (g ` {0..<n}) = map g [0..<n]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_list_of_set (g ` {0..<n}) = map g [0..<n]", "by (rule sorted_list_of_set_map_strict, insert g1, simp add: F_strict_def)"], ["proof (state)\nthis:\n  sorted_list_of_set (g ` {0..<n}) = map g [0..<n]\n\ngoal (1 subgoal):\n 1. index (sorted_list_of_set (g ` {0..<n})) (g (x i)) = x i", "have \"index (sorted_list_of_set (g`{0..<n})) (g (x i)) = index (map g [0..<n]) (g (x i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. index (sorted_list_of_set (g ` {0..<n})) (g (x i)) =\n    index (map g [0..<n]) (g (x i))", "unfolding rw"], ["proof (prove)\ngoal (1 subgoal):\n 1. index (map g [0..<n]) (g (x i)) = index (map g [0..<n]) (g (x i))", "by auto"], ["proof (state)\nthis:\n  index (sorted_list_of_set (g ` {0..<n})) (g (x i)) =\n  index (map g [0..<n]) (g (x i))\n\ngoal (1 subgoal):\n 1. index (sorted_list_of_set (g ` {0..<n})) (g (x i)) = x i", "also"], ["proof (state)\nthis:\n  index (sorted_list_of_set (g ` {0..<n})) (g (x i)) =\n  index (map g [0..<n]) (g (x i))\n\ngoal (1 subgoal):\n 1. index (sorted_list_of_set (g ` {0..<n})) (g (x i)) = x i", "have \"... = index [0..<n] (x i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. index (map g [0..<n]) (g (x i)) = index [0..<n] (x i)", "by (rule index_map_inj_on[of _ \"{0..<n}\"], insert x i g, auto simp add: F_inj_def)"], ["proof (state)\nthis:\n  index (map g [0..<n]) (g (x i)) = index [0..<n] (x i)\n\ngoal (1 subgoal):\n 1. index (sorted_list_of_set (g ` {0..<n})) (g (x i)) = x i", "also"], ["proof (state)\nthis:\n  index (map g [0..<n]) (g (x i)) = index [0..<n] (x i)\n\ngoal (1 subgoal):\n 1. index (sorted_list_of_set (g ` {0..<n})) (g (x i)) = x i", "have \"... = x i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. index [0..<n] (x i) = x i", "using x i"], ["proof (prove)\nusing this:\n  x \\<in> {\\<pi>. \\<pi> permutes {0..<n}}\n  i \\<in> {0..<n}\n\ngoal (1 subgoal):\n 1. index [0..<n] (x i) = x i", "by auto"], ["proof (state)\nthis:\n  index [0..<n] (x i) = x i\n\ngoal (1 subgoal):\n 1. index (sorted_list_of_set (g ` {0..<n})) (g (x i)) = x i", "finally"], ["proof (chain)\npicking this:\n  index (sorted_list_of_set (g ` {0..<n})) (g (x i)) = x i", "show ?thesis"], ["proof (prove)\nusing this:\n  index (sorted_list_of_set (g ` {0..<n})) (g (x i)) = x i\n\ngoal (1 subgoal):\n 1. index (sorted_list_of_set (g ` {0..<n})) (g (x i)) = x i", "."], ["proof (state)\nthis:\n  index (sorted_list_of_set (g ` {0..<n})) (g (x i)) = x i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  index (sorted_list_of_set (g ` {0..<n})) (g (x i)) = x i\n\ngoal (1 subgoal):\n 1. pick (g ` {0..<n}) (x i) = g (x i)", "moreover"], ["proof (state)\nthis:\n  index (sorted_list_of_set (g ` {0..<n})) (g (x i)) = x i\n\ngoal (1 subgoal):\n 1. pick (g ` {0..<n}) (x i) = g (x i)", "have \"(g (x i))  \\<in> (g ` {0..<n})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g (x i) \\<in> g ` {0..<n}", "using x g i"], ["proof (prove)\nusing this:\n  x \\<in> {\\<pi>. \\<pi> permutes {0..<n}}\n  g \\<in> F_inj\n  i \\<in> {0..<n}\n\ngoal (1 subgoal):\n 1. g (x i) \\<in> g ` {0..<n}", "unfolding F_inj_def"], ["proof (prove)\nusing this:\n  x \\<in> {\\<pi>. \\<pi> permutes {0..<n}}\n  g \\<in> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n           (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n           inj_on f {0..<n}}\n  i \\<in> {0..<n}\n\ngoal (1 subgoal):\n 1. g (x i) \\<in> g ` {0..<n}", "by auto"], ["proof (state)\nthis:\n  g (x i) \\<in> g ` {0..<n}\n\ngoal (1 subgoal):\n 1. pick (g ` {0..<n}) (x i) = g (x i)", "moreover"], ["proof (state)\nthis:\n  g (x i) \\<in> g ` {0..<n}\n\ngoal (1 subgoal):\n 1. pick (g ` {0..<n}) (x i) = g (x i)", "have \"x i < card (g ` {0..<n})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x i < card (g ` {0..<n})", "using x i g"], ["proof (prove)\nusing this:\n  x \\<in> {\\<pi>. \\<pi> permutes {0..<n}}\n  i \\<in> {0..<n}\n  g \\<in> F_inj\n\ngoal (1 subgoal):\n 1. x i < card (g ` {0..<n})", "by (simp add: F_inj_def card_image)"], ["proof (state)\nthis:\n  x i < card (g ` {0..<n})\n\ngoal (1 subgoal):\n 1. pick (g ` {0..<n}) (x i) = g (x i)", "ultimately"], ["proof (chain)\npicking this:\n  index (sorted_list_of_set (g ` {0..<n})) (g (x i)) = x i\n  g (x i) \\<in> g ` {0..<n}\n  x i < card (g ` {0..<n})", "show ?thesis"], ["proof (prove)\nusing this:\n  index (sorted_list_of_set (g ` {0..<n})) (g (x i)) = x i\n  g (x i) \\<in> g ` {0..<n}\n  x i < card (g ` {0..<n})\n\ngoal (1 subgoal):\n 1. pick (g ` {0..<n}) (x i) = g (x i)", "using pick_index"], ["proof (prove)\nusing this:\n  index (sorted_list_of_set (g ` {0..<n})) (g (x i)) = x i\n  g (x i) \\<in> g ` {0..<n}\n  x i < card (g ` {0..<n})\n  \\<lbrakk>?a \\<in> ?I; ?a' < card ?I\\<rbrakk>\n  \\<Longrightarrow> (pick ?I ?a' = ?a) =\n                    (index (sorted_list_of_set ?I) ?a = ?a')\n\ngoal (1 subgoal):\n 1. pick (g ` {0..<n}) (x i) = g (x i)", "by auto"], ["proof (state)\nthis:\n  pick (g ` {0..<n}) (x i) = g (x i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pick (g ` {0..<n}) (x i) = g (x i)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {0..<n} \\<Longrightarrow>\n       submatrix A UNIV (g ` {0..<n}) $$ (xa, x xa) = A $$ (xa, g (x xa))", "have \"submatrix A UNIV (g`{0..<n}) $$ (i, x i) = A $$ (pick UNIV i, pick (g`{0..<n}) (x i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix A UNIV (g ` {0..<n}) $$ (i, x i) =\n    A $$ (pick UNIV i, pick (g ` {0..<n}) (x i))", "by (rule submatrix_index, insert i A card_J x, auto)"], ["proof (state)\nthis:\n  submatrix A UNIV (g ` {0..<n}) $$ (i, x i) =\n  A $$ (pick UNIV i, pick (g ` {0..<n}) (x i))\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {0..<n} \\<Longrightarrow>\n       submatrix A UNIV (g ` {0..<n}) $$ (xa, x xa) = A $$ (xa, g (x xa))", "also"], ["proof (state)\nthis:\n  submatrix A UNIV (g ` {0..<n}) $$ (i, x i) =\n  A $$ (pick UNIV i, pick (g ` {0..<n}) (x i))\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {0..<n} \\<Longrightarrow>\n       submatrix A UNIV (g ` {0..<n}) $$ (xa, x xa) = A $$ (xa, g (x xa))", "have \"... = A $$ (i, g (x i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A $$ (pick UNIV i, pick (g ` {0..<n}) (x i)) = A $$ (i, g (x i))", "using pick_rw pick_UNIV"], ["proof (prove)\nusing this:\n  pick (g ` {0..<n}) (x i) = g (x i)\n  pick UNIV ?j = ?j\n\ngoal (1 subgoal):\n 1. A $$ (pick UNIV i, pick (g ` {0..<n}) (x i)) = A $$ (i, g (x i))", "by auto"], ["proof (state)\nthis:\n  A $$ (pick UNIV i, pick (g ` {0..<n}) (x i)) = A $$ (i, g (x i))\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {0..<n} \\<Longrightarrow>\n       submatrix A UNIV (g ` {0..<n}) $$ (xa, x xa) = A $$ (xa, g (x xa))", "finally"], ["proof (chain)\npicking this:\n  submatrix A UNIV (g ` {0..<n}) $$ (i, x i) = A $$ (i, g (x i))", "show \"submatrix A UNIV (g ` {0..<n}) $$ (i, x i) = A $$ (i, g (x i))\""], ["proof (prove)\nusing this:\n  submatrix A UNIV (g ` {0..<n}) $$ (i, x i) = A $$ (i, g (x i))\n\ngoal (1 subgoal):\n 1. submatrix A UNIV (g ` {0..<n}) $$ (i, x i) = A $$ (i, g (x i))", "."], ["proof (state)\nthis:\n  submatrix A UNIV (g ` {0..<n}) $$ (i, x i) = A $$ (i, g (x i))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<n. submatrix A UNIV (g ` {0..<n}) $$ (i, x i)) =\n  (\\<Prod>i = 0..<n. A $$ (i, g (x i)))\n\ngoal (2 subgoals):\n 1. {p. p permutes {0..<n}} = {\\<pi>. \\<pi> permutes {0..<n}}\n 2. \\<And>x.\n       x \\<in> {\\<pi>. \\<pi> permutes {0..<n}} \\<Longrightarrow>\n       signof x *\n       (\\<Prod>i = 0..<n. submatrix A UNIV (g ` {0..<n}) $$ (i, x i)) =\n       signof x * (\\<Prod>i = 0..<n. A $$ (i, g (x i)))", "thus \"signof x * (\\<Prod>i = 0..<n. submatrix A UNIV (g ` {0..<n}) $$ (i, x i))\n        = signof x * (\\<Prod>i = 0..<n. A $$ (i, g (x i)))\""], ["proof (prove)\nusing this:\n  (\\<Prod>i = 0..<n. submatrix A UNIV (g ` {0..<n}) $$ (i, x i)) =\n  (\\<Prod>i = 0..<n. A $$ (i, g (x i)))\n\ngoal (1 subgoal):\n 1. signof x *\n    (\\<Prod>i = 0..<n. submatrix A UNIV (g ` {0..<n}) $$ (i, x i)) =\n    signof x * (\\<Prod>i = 0..<n. A $$ (i, g (x i)))", "by auto"], ["proof (state)\nthis:\n  signof x *\n  (\\<Prod>i = 0..<n. submatrix A UNIV (g ` {0..<n}) $$ (i, x i)) =\n  signof x * (\\<Prod>i = 0..<n. A $$ (i, g (x i)))\n\ngoal (1 subgoal):\n 1. {p. p permutes {0..<n}} = {\\<pi>. \\<pi> permutes {0..<n}}", "qed (simp)"], ["proof (state)\nthis:\n  (\\<Sum>p | p permutes {0..<n}.\n     signof p *\n     (\\<Prod>i = 0..<n. submatrix A UNIV (g ` {0..<n}) $$ (i, p i))) =\n  (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n     signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))))\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n       signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i)))) =\n    Determinant.det (submatrix A UNIV (g ` {0..<n}))", "finally"], ["proof (chain)\npicking this:\n  Determinant.det (submatrix A UNIV (g ` {0..<n})) =\n  (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n     signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))))", "show ?thesis"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix A UNIV (g ` {0..<n})) =\n  (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n     signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))))\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n       signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i)))) =\n    Determinant.det (submatrix A UNIV (g ` {0..<n}))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n     signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i)))) =\n  Determinant.det (submatrix A UNIV (g ` {0..<n}))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n     signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i)))) =\n  Determinant.det (submatrix A UNIV (g ` {0..<n}))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A UNIV (g ` {0..<n})) *\n    Determinant.det (submatrix B (g ` {0..<n}) UNIV) =\n    (\\<Sum>(x, y)\\<in>Z_good g. weight x y)", "have detB_rw: \"(\\<Sum>\\<pi> \\<in> ?Perm. signof (\\<pi> \\<circ> ?inv \\<phi>) * (\\<Prod>i = 0..<n. B $$ (g i, (\\<pi> \\<circ> ?inv \\<phi>) i)))\n   = (\\<Sum>\\<pi> \\<in> ?Perm. signof (\\<pi>) * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i)))\"\n    if phi: \"\\<phi> permutes {0..<n}\" for \\<phi>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof (\\<pi> \\<circ> inv \\<phi>) *\n       (\\<Prod>i = 0..<n. B $$ (g i, (\\<pi> \\<circ> inv \\<phi>) i))) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof (\\<pi> \\<circ> inv \\<phi>) *\n       (\\<Prod>i = 0..<n. B $$ (g i, (\\<pi> \\<circ> inv \\<phi>) i))) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i)))", "let ?h=\"\\<lambda>\\<pi>. \\<pi> \\<circ> ?inv \\<phi>\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof (\\<pi> \\<circ> inv \\<phi>) *\n       (\\<Prod>i = 0..<n. B $$ (g i, (\\<pi> \\<circ> inv \\<phi>) i))) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i)))", "let ?g = \"\\<lambda>\\<pi>. signof (\\<pi>) * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i))\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof (\\<pi> \\<circ> inv \\<phi>) *\n       (\\<Prod>i = 0..<n. B $$ (g i, (\\<pi> \\<circ> inv \\<phi>) i))) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i)))", "have \"?h`?Perm = ?Perm\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>\\<pi>. \\<pi> \\<circ> inv \\<phi>) `\n    {\\<pi>. \\<pi> permutes {0..<n}} =\n    {\\<pi>. \\<pi> permutes {0..<n}}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>\\<pi>. \\<pi> \\<circ> inv \\<phi>) `\n    {\\<pi>. \\<pi> permutes {0..<n}} =\n    {\\<pi>. \\<pi> permutes {0..<n}}", "have \"\\<pi> \\<circ> ?inv \\<phi> permutes {0..<n}\" if pi: \"\\<pi> permutes {0..<n}\" for \\<pi>"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> \\<circ> inv \\<phi> permutes {0..<n}", "using permutes_compose permutes_inv phi that"], ["proof (prove)\nusing this:\n  \\<lbrakk>?p permutes ?S; ?q permutes ?S\\<rbrakk>\n  \\<Longrightarrow> ?q \\<circ> ?p permutes ?S\n  ?p permutes ?S \\<Longrightarrow> inv ?p permutes ?S\n  \\<phi> permutes {0..<n}\n  \\<pi> permutes {0..<n}\n\ngoal (1 subgoal):\n 1. \\<pi> \\<circ> inv \\<phi> permutes {0..<n}", "by blast"], ["proof (state)\nthis:\n  ?\\<pi>2 permutes {0..<n} \\<Longrightarrow>\n  ?\\<pi>2 \\<circ> inv \\<phi> permutes {0..<n}\n\ngoal (1 subgoal):\n 1. (\\<lambda>\\<pi>. \\<pi> \\<circ> inv \\<phi>) `\n    {\\<pi>. \\<pi> permutes {0..<n}} =\n    {\\<pi>. \\<pi> permutes {0..<n}}", "moreover"], ["proof (state)\nthis:\n  ?\\<pi>2 permutes {0..<n} \\<Longrightarrow>\n  ?\\<pi>2 \\<circ> inv \\<phi> permutes {0..<n}\n\ngoal (1 subgoal):\n 1. (\\<lambda>\\<pi>. \\<pi> \\<circ> inv \\<phi>) `\n    {\\<pi>. \\<pi> permutes {0..<n}} =\n    {\\<pi>. \\<pi> permutes {0..<n}}", "have \"x \\<in> (\\<lambda>\\<pi>. \\<pi> \\<circ> ?inv \\<phi>) ` ?Perm\" if \"x permutes {0..<n}\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> (\\<lambda>\\<pi>. \\<pi> \\<circ> inv \\<phi>) `\n            {\\<pi>. \\<pi> permutes {0..<n}}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> (\\<lambda>\\<pi>. \\<pi> \\<circ> inv \\<phi>) `\n            {\\<pi>. \\<pi> permutes {0..<n}}", "have \"x \\<circ> \\<phi> permutes {0..<n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<circ> \\<phi> permutes {0..<n}", "using permutes_compose phi that"], ["proof (prove)\nusing this:\n  \\<lbrakk>?p permutes ?S; ?q permutes ?S\\<rbrakk>\n  \\<Longrightarrow> ?q \\<circ> ?p permutes ?S\n  \\<phi> permutes {0..<n}\n  x permutes {0..<n}\n\ngoal (1 subgoal):\n 1. x \\<circ> \\<phi> permutes {0..<n}", "by blast"], ["proof (state)\nthis:\n  x \\<circ> \\<phi> permutes {0..<n}\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<lambda>\\<pi>. \\<pi> \\<circ> inv \\<phi>) `\n            {\\<pi>. \\<pi> permutes {0..<n}}", "moreover"], ["proof (state)\nthis:\n  x \\<circ> \\<phi> permutes {0..<n}\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<lambda>\\<pi>. \\<pi> \\<circ> inv \\<phi>) `\n            {\\<pi>. \\<pi> permutes {0..<n}}", "have \"x = x \\<circ> \\<phi> \\<circ> ?inv \\<phi>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = x \\<circ> \\<phi> \\<circ> inv \\<phi>", "using phi"], ["proof (prove)\nusing this:\n  \\<phi> permutes {0..<n}\n\ngoal (1 subgoal):\n 1. x = x \\<circ> \\<phi> \\<circ> inv \\<phi>", "by auto"], ["proof (state)\nthis:\n  x = x \\<circ> \\<phi> \\<circ> inv \\<phi>\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<lambda>\\<pi>. \\<pi> \\<circ> inv \\<phi>) `\n            {\\<pi>. \\<pi> permutes {0..<n}}", "ultimately"], ["proof (chain)\npicking this:\n  x \\<circ> \\<phi> permutes {0..<n}\n  x = x \\<circ> \\<phi> \\<circ> inv \\<phi>", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<circ> \\<phi> permutes {0..<n}\n  x = x \\<circ> \\<phi> \\<circ> inv \\<phi>\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<lambda>\\<pi>. \\<pi> \\<circ> inv \\<phi>) `\n            {\\<pi>. \\<pi> permutes {0..<n}}", "unfolding image_def"], ["proof (prove)\nusing this:\n  x \\<circ> \\<phi> permutes {0..<n}\n  x = x \\<circ> \\<phi> \\<circ> inv \\<phi>\n\ngoal (1 subgoal):\n 1. x \\<in> {y. \\<exists>x\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n                   y = x \\<circ> inv \\<phi>}", "by auto"], ["proof (state)\nthis:\n  x \\<in> (\\<lambda>\\<pi>. \\<pi> \\<circ> inv \\<phi>) `\n          {\\<pi>. \\<pi> permutes {0..<n}}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x2 permutes {0..<n} \\<Longrightarrow>\n  ?x2\n  \\<in> (\\<lambda>\\<pi>. \\<pi> \\<circ> inv \\<phi>) `\n        {\\<pi>. \\<pi> permutes {0..<n}}\n\ngoal (1 subgoal):\n 1. (\\<lambda>\\<pi>. \\<pi> \\<circ> inv \\<phi>) `\n    {\\<pi>. \\<pi> permutes {0..<n}} =\n    {\\<pi>. \\<pi> permutes {0..<n}}", "ultimately"], ["proof (chain)\npicking this:\n  ?\\<pi>2 permutes {0..<n} \\<Longrightarrow>\n  ?\\<pi>2 \\<circ> inv \\<phi> permutes {0..<n}\n  ?x2 permutes {0..<n} \\<Longrightarrow>\n  ?x2\n  \\<in> (\\<lambda>\\<pi>. \\<pi> \\<circ> inv \\<phi>) `\n        {\\<pi>. \\<pi> permutes {0..<n}}", "show ?thesis"], ["proof (prove)\nusing this:\n  ?\\<pi>2 permutes {0..<n} \\<Longrightarrow>\n  ?\\<pi>2 \\<circ> inv \\<phi> permutes {0..<n}\n  ?x2 permutes {0..<n} \\<Longrightarrow>\n  ?x2\n  \\<in> (\\<lambda>\\<pi>. \\<pi> \\<circ> inv \\<phi>) `\n        {\\<pi>. \\<pi> permutes {0..<n}}\n\ngoal (1 subgoal):\n 1. (\\<lambda>\\<pi>. \\<pi> \\<circ> inv \\<phi>) `\n    {\\<pi>. \\<pi> permutes {0..<n}} =\n    {\\<pi>. \\<pi> permutes {0..<n}}", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>\\<pi>. \\<pi> \\<circ> inv \\<phi>) `\n  {\\<pi>. \\<pi> permutes {0..<n}} =\n  {\\<pi>. \\<pi> permutes {0..<n}}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>\\<pi>. \\<pi> \\<circ> inv \\<phi>) `\n  {\\<pi>. \\<pi> permutes {0..<n}} =\n  {\\<pi>. \\<pi> permutes {0..<n}}\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof (\\<pi> \\<circ> inv \\<phi>) *\n       (\\<Prod>i = 0..<n. B $$ (g i, (\\<pi> \\<circ> inv \\<phi>) i))) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i)))", "hence \"(\\<Sum>\\<pi> \\<in> ?Perm. ?g \\<pi>) = (\\<Sum>\\<pi> \\<in> ?h`?Perm. ?g \\<pi>)\""], ["proof (prove)\nusing this:\n  (\\<lambda>\\<pi>. \\<pi> \\<circ> inv \\<phi>) `\n  {\\<pi>. \\<pi> permutes {0..<n}} =\n  {\\<pi>. \\<pi> permutes {0..<n}}\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i))) =\n    (\\<Sum>\\<pi>\n           \\<in>(\\<lambda>\\<pi>. \\<pi> \\<circ> inv \\<phi>) `\n                {\\<pi>. \\<pi> permutes {0..<n}}.\n       signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i)))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i))) =\n  (\\<Sum>\\<pi>\n         \\<in>(\\<lambda>\\<pi>. \\<pi> \\<circ> inv \\<phi>) `\n              {\\<pi>. \\<pi> permutes {0..<n}}.\n     signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof (\\<pi> \\<circ> inv \\<phi>) *\n       (\\<Prod>i = 0..<n. B $$ (g i, (\\<pi> \\<circ> inv \\<phi>) i))) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i)))", "also"], ["proof (state)\nthis:\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i))) =\n  (\\<Sum>\\<pi>\n         \\<in>(\\<lambda>\\<pi>. \\<pi> \\<circ> inv \\<phi>) `\n              {\\<pi>. \\<pi> permutes {0..<n}}.\n     signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof (\\<pi> \\<circ> inv \\<phi>) *\n       (\\<Prod>i = 0..<n. B $$ (g i, (\\<pi> \\<circ> inv \\<phi>) i))) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i)))", "have \"... = sum (?g \\<circ> ?h) ?Perm\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<pi>\n           \\<in>(\\<lambda>\\<pi>. \\<pi> \\<circ> inv \\<phi>) `\n                {\\<pi>. \\<pi> permutes {0..<n}}.\n       signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i))) =\n    sum ((\\<lambda>\\<pi>.\n             signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i))) \\<circ>\n         (\\<lambda>\\<pi>. \\<pi> \\<circ> inv \\<phi>))\n     {\\<pi>. \\<pi> permutes {0..<n}}", "proof (rule sum.reindex)"], ["proof (state)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>\\<pi>. \\<pi> \\<circ> inv \\<phi>)\n     {\\<pi>. \\<pi> permutes {0..<n}}", "show \"inj_on (\\<lambda>\\<pi>. \\<pi> \\<circ> ?inv \\<phi>) {\\<pi>. \\<pi> permutes {0..<n}}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>\\<pi>. \\<pi> \\<circ> inv \\<phi>)\n     {\\<pi>. \\<pi> permutes {0..<n}}", "by (metis (no_types, lifting) inj_onI o_inv_o_cancel permutes_inj phi)"], ["proof (state)\nthis:\n  inj_on (\\<lambda>\\<pi>. \\<pi> \\<circ> inv \\<phi>)\n   {\\<pi>. \\<pi> permutes {0..<n}}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>\\<pi>\n         \\<in>(\\<lambda>\\<pi>. \\<pi> \\<circ> inv \\<phi>) `\n              {\\<pi>. \\<pi> permutes {0..<n}}.\n     signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i))) =\n  sum ((\\<lambda>\\<pi>.\n           signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i))) \\<circ>\n       (\\<lambda>\\<pi>. \\<pi> \\<circ> inv \\<phi>))\n   {\\<pi>. \\<pi> permutes {0..<n}}\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof (\\<pi> \\<circ> inv \\<phi>) *\n       (\\<Prod>i = 0..<n. B $$ (g i, (\\<pi> \\<circ> inv \\<phi>) i))) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i)))", "also"], ["proof (state)\nthis:\n  (\\<Sum>\\<pi>\n         \\<in>(\\<lambda>\\<pi>. \\<pi> \\<circ> inv \\<phi>) `\n              {\\<pi>. \\<pi> permutes {0..<n}}.\n     signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i))) =\n  sum ((\\<lambda>\\<pi>.\n           signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i))) \\<circ>\n       (\\<lambda>\\<pi>. \\<pi> \\<circ> inv \\<phi>))\n   {\\<pi>. \\<pi> permutes {0..<n}}\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof (\\<pi> \\<circ> inv \\<phi>) *\n       (\\<Prod>i = 0..<n. B $$ (g i, (\\<pi> \\<circ> inv \\<phi>) i))) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i)))", "have \"... = (\\<Sum>\\<pi> \\<in> ?Perm. signof (\\<pi> \\<circ> ?inv \\<phi>) * (\\<Prod>i = 0..<n. B $$ (g i, (\\<pi> \\<circ> ?inv \\<phi>) i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum ((\\<lambda>\\<pi>.\n             signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i))) \\<circ>\n         (\\<lambda>\\<pi>. \\<pi> \\<circ> inv \\<phi>))\n     {\\<pi>. \\<pi> permutes {0..<n}} =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof (\\<pi> \\<circ> inv \\<phi>) *\n       (\\<Prod>i = 0..<n. B $$ (g i, (\\<pi> \\<circ> inv \\<phi>) i)))", "unfolding o_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n       signof (\\<lambda>xa. x (inv \\<phi> xa)) *\n       (\\<Prod>i = 0..<n. B $$ (g i, x (inv \\<phi> i)))) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof (\\<lambda>x. \\<pi> (inv \\<phi> x)) *\n       (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> (inv \\<phi> i))))", "by auto"], ["proof (state)\nthis:\n  sum ((\\<lambda>\\<pi>.\n           signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i))) \\<circ>\n       (\\<lambda>\\<pi>. \\<pi> \\<circ> inv \\<phi>))\n   {\\<pi>. \\<pi> permutes {0..<n}} =\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     signof (\\<pi> \\<circ> inv \\<phi>) *\n     (\\<Prod>i = 0..<n. B $$ (g i, (\\<pi> \\<circ> inv \\<phi>) i)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof (\\<pi> \\<circ> inv \\<phi>) *\n       (\\<Prod>i = 0..<n. B $$ (g i, (\\<pi> \\<circ> inv \\<phi>) i))) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i)))", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i))) =\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     signof (\\<pi> \\<circ> inv \\<phi>) *\n     (\\<Prod>i = 0..<n. B $$ (g i, (\\<pi> \\<circ> inv \\<phi>) i)))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i))) =\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     signof (\\<pi> \\<circ> inv \\<phi>) *\n     (\\<Prod>i = 0..<n. B $$ (g i, (\\<pi> \\<circ> inv \\<phi>) i)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof (\\<pi> \\<circ> inv \\<phi>) *\n       (\\<Prod>i = 0..<n. B $$ (g i, (\\<pi> \\<circ> inv \\<phi>) i))) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i)))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     signof (\\<pi> \\<circ> inv \\<phi>) *\n     (\\<Prod>i = 0..<n. B $$ (g i, (\\<pi> \\<circ> inv \\<phi>) i))) =\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?\\<phi>1 permutes {0..<n} \\<Longrightarrow>\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     signof (\\<pi> \\<circ> inv ?\\<phi>1) *\n     (\\<Prod>i = 0..<n. B $$ (g i, (\\<pi> \\<circ> inv ?\\<phi>1) i))) =\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i)))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A UNIV (g ` {0..<n})) *\n    Determinant.det (submatrix B (g ` {0..<n}) UNIV) =\n    (\\<Sum>(x, y)\\<in>Z_good g. weight x y)", "have detB: \"det (submatrix B (g`{0..<n}) UNIV)\n    = (\\<Sum>\\<pi> \\<in> ?Perm. signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix B (g ` {0..<n}) UNIV) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i)))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix B (g ` {0..<n}) UNIV) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i)))", "have \"{i. i < dim_row B \\<and> i \\<in> g ` {0..<n}} = {i. i \\<in> g ` {0..<n}}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. i < dim_row B \\<and> i \\<in> g ` {0..<n}} = {i. i \\<in> g ` {0..<n}}", "using g B"], ["proof (prove)\nusing this:\n  g \\<in> F_inj\n  B \\<in> carrier_mat m n\n\ngoal (1 subgoal):\n 1. {i. i < dim_row B \\<and> i \\<in> g ` {0..<n}} = {i. i \\<in> g ` {0..<n}}", "unfolding F_inj_def"], ["proof (prove)\nusing this:\n  g \\<in> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n           (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n           inj_on f {0..<n}}\n  B \\<in> carrier_mat m n\n\ngoal (1 subgoal):\n 1. {i. i < dim_row B \\<and> i \\<in> g ` {0..<n}} = {i. i \\<in> g ` {0..<n}}", "by fastforce"], ["proof (state)\nthis:\n  {i. i < dim_row B \\<and> i \\<in> g ` {0..<n}} = {i. i \\<in> g ` {0..<n}}\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix B (g ` {0..<n}) UNIV) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i)))", "also"], ["proof (state)\nthis:\n  {i. i < dim_row B \\<and> i \\<in> g ` {0..<n}} = {i. i \\<in> g ` {0..<n}}\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix B (g ` {0..<n}) UNIV) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i)))", "have \"card ... = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {i. i \\<in> g ` {0..<n}} = n", "using F_inj_def card_image g"], ["proof (prove)\nusing this:\n  F_inj =\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n   inj_on f {0..<n}}\n  inj_on ?f ?A \\<Longrightarrow> card (?f ` ?A) = card ?A\n  g \\<in> F_inj\n\ngoal (1 subgoal):\n 1. card {i. i \\<in> g ` {0..<n}} = n", "by force"], ["proof (state)\nthis:\n  card {i. i \\<in> g ` {0..<n}} = n\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix B (g ` {0..<n}) UNIV) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i)))", "finally"], ["proof (chain)\npicking this:\n  card {i. i < dim_row B \\<and> i \\<in> g ` {0..<n}} = n", "have card_I: \"card {j. j < dim_row B \\<and> j \\<in> g ` {0..<n}} = n\""], ["proof (prove)\nusing this:\n  card {i. i < dim_row B \\<and> i \\<in> g ` {0..<n}} = n\n\ngoal (1 subgoal):\n 1. card {j. j < dim_row B \\<and> j \\<in> g ` {0..<n}} = n", "by simp"], ["proof (state)\nthis:\n  card {j. j < dim_row B \\<and> j \\<in> g ` {0..<n}} = n\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix B (g ` {0..<n}) UNIV) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i)))", "have subB_carrier: \"submatrix B (g ` {0..<n}) UNIV \\<in> carrier_mat n n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix B (g ` {0..<n}) UNIV \\<in> carrier_mat n n", "unfolding submatrix_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Matrix.mat (card {i. i < dim_row B \\<and> i \\<in> g ` {0..<n}})\n     (card {j. j < dim_col B \\<and> j \\<in> UNIV})\n     (\\<lambda>(i, j). B $$ (pick (g ` {0..<n}) i, pick UNIV j))\n    \\<in> carrier_mat n n", "using card_I B"], ["proof (prove)\nusing this:\n  card {j. j < dim_row B \\<and> j \\<in> g ` {0..<n}} = n\n  B \\<in> carrier_mat m n\n\ngoal (1 subgoal):\n 1. Matrix.mat (card {i. i < dim_row B \\<and> i \\<in> g ` {0..<n}})\n     (card {j. j < dim_col B \\<and> j \\<in> UNIV})\n     (\\<lambda>(i, j). B $$ (pick (g ` {0..<n}) i, pick UNIV j))\n    \\<in> carrier_mat n n", "by auto"], ["proof (state)\nthis:\n  submatrix B (g ` {0..<n}) UNIV \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix B (g ` {0..<n}) UNIV) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i)))", "have \"det (submatrix B (g`{0..<n}) UNIV) = (\\<Sum>p \\<in> ?Perm. signof p\n      * (\\<Prod>i=0..<n. submatrix B (g ` {0..<n}) UNIV $$ (i, p i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix B (g ` {0..<n}) UNIV) =\n    (\\<Sum>p\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n       signof p *\n       (\\<Prod>i = 0..<n. submatrix B (g ` {0..<n}) UNIV $$ (i, p i)))", "unfolding Determinant.det_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if dim_row (submatrix B (g ` {0..<n}) UNIV) =\n        dim_col (submatrix B (g ` {0..<n}) UNIV)\n     then \\<Sum>p | p permutes\n                    {0..<dim_row (submatrix B (g ` {0..<n}) UNIV)}.\n            signof p *\n            (\\<Prod>i = 0..<dim_row (submatrix B (g ` {0..<n}) UNIV).\n                submatrix B (g ` {0..<n}) UNIV $$ (i, p i))\n     else (0::'a)) =\n    (\\<Sum>p\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n       signof p *\n       (\\<Prod>i = 0..<n. submatrix B (g ` {0..<n}) UNIV $$ (i, p i)))", "using subB_carrier"], ["proof (prove)\nusing this:\n  submatrix B (g ` {0..<n}) UNIV \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. (if dim_row (submatrix B (g ` {0..<n}) UNIV) =\n        dim_col (submatrix B (g ` {0..<n}) UNIV)\n     then \\<Sum>p | p permutes\n                    {0..<dim_row (submatrix B (g ` {0..<n}) UNIV)}.\n            signof p *\n            (\\<Prod>i = 0..<dim_row (submatrix B (g ` {0..<n}) UNIV).\n                submatrix B (g ` {0..<n}) UNIV $$ (i, p i))\n     else (0::'a)) =\n    (\\<Sum>p\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n       signof p *\n       (\\<Prod>i = 0..<n. submatrix B (g ` {0..<n}) UNIV $$ (i, p i)))", "by auto"], ["proof (state)\nthis:\n  Determinant.det (submatrix B (g ` {0..<n}) UNIV) =\n  (\\<Sum>p\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n     signof p *\n     (\\<Prod>i = 0..<n. submatrix B (g ` {0..<n}) UNIV $$ (i, p i)))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix B (g ` {0..<n}) UNIV) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i)))", "also"], ["proof (state)\nthis:\n  Determinant.det (submatrix B (g ` {0..<n}) UNIV) =\n  (\\<Sum>p\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n     signof p *\n     (\\<Prod>i = 0..<n. submatrix B (g ` {0..<n}) UNIV $$ (i, p i)))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix B (g ` {0..<n}) UNIV) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i)))", "have \"... = (\\<Sum>\\<pi> \\<in> ?Perm. signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>p\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n       signof p *\n       (\\<Prod>i = 0..<n. submatrix B (g ` {0..<n}) UNIV $$ (i, p i))) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i)))", "proof (rule sum.cong, rule refl)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {\\<pi>. \\<pi> permutes {0..<n}} \\<Longrightarrow>\n       signof x *\n       (\\<Prod>i = 0..<n. submatrix B (g ` {0..<n}) UNIV $$ (i, x i)) =\n       signof x * (\\<Prod>i = 0..<n. B $$ (g i, x i))", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {\\<pi>. \\<pi> permutes {0..<n}} \\<Longrightarrow>\n       signof x *\n       (\\<Prod>i = 0..<n. submatrix B (g ` {0..<n}) UNIV $$ (i, x i)) =\n       signof x * (\\<Prod>i = 0..<n. B $$ (g i, x i))", "assume x: \"x \\<in> {\\<pi>. \\<pi> permutes {0..<n}}\""], ["proof (state)\nthis:\n  x \\<in> {\\<pi>. \\<pi> permutes {0..<n}}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {\\<pi>. \\<pi> permutes {0..<n}} \\<Longrightarrow>\n       signof x *\n       (\\<Prod>i = 0..<n. submatrix B (g ` {0..<n}) UNIV $$ (i, x i)) =\n       signof x * (\\<Prod>i = 0..<n. B $$ (g i, x i))", "have \"(\\<Prod>i=0..<n. submatrix B (g`{0..<n}) UNIV $$ (i, x i)) = (\\<Prod>i=0..<n. B $$ (g i, x i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<n. submatrix B (g ` {0..<n}) UNIV $$ (i, x i)) =\n    (\\<Prod>i = 0..<n. B $$ (g i, x i))", "proof (rule prod.cong, rule refl)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {0..<n} \\<Longrightarrow>\n       submatrix B (g ` {0..<n}) UNIV $$ (xa, x xa) = B $$ (g xa, x xa)", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {0..<n} \\<Longrightarrow>\n       submatrix B (g ` {0..<n}) UNIV $$ (xa, x xa) = B $$ (g xa, x xa)", "assume i: \"i \\<in> {0..<n}\""], ["proof (state)\nthis:\n  i \\<in> {0..<n}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {0..<n} \\<Longrightarrow>\n       submatrix B (g ` {0..<n}) UNIV $$ (xa, x xa) = B $$ (g xa, x xa)", "have pick_rw: \"pick (g ` {0..<n}) i = g i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pick (g ` {0..<n}) i = g i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. pick (g ` {0..<n}) i = g i", "have \"index (sorted_list_of_set (g ` {0..<n})) (g i) = i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. index (sorted_list_of_set (g ` {0..<n})) (g i) = i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. index (sorted_list_of_set (g ` {0..<n})) (g i) = i", "have rw: \"sorted_list_of_set (g ` {0..<n}) = map g [0..<n]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_list_of_set (g ` {0..<n}) = map g [0..<n]", "by (rule sorted_list_of_set_map_strict, insert g1, simp add: F_strict_def)"], ["proof (state)\nthis:\n  sorted_list_of_set (g ` {0..<n}) = map g [0..<n]\n\ngoal (1 subgoal):\n 1. index (sorted_list_of_set (g ` {0..<n})) (g i) = i", "have \"index (sorted_list_of_set (g`{0..<n})) (g i) = index (map g [0..<n]) (g i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. index (sorted_list_of_set (g ` {0..<n})) (g i) =\n    index (map g [0..<n]) (g i)", "unfolding rw"], ["proof (prove)\ngoal (1 subgoal):\n 1. index (map g [0..<n]) (g i) = index (map g [0..<n]) (g i)", "by auto"], ["proof (state)\nthis:\n  index (sorted_list_of_set (g ` {0..<n})) (g i) =\n  index (map g [0..<n]) (g i)\n\ngoal (1 subgoal):\n 1. index (sorted_list_of_set (g ` {0..<n})) (g i) = i", "also"], ["proof (state)\nthis:\n  index (sorted_list_of_set (g ` {0..<n})) (g i) =\n  index (map g [0..<n]) (g i)\n\ngoal (1 subgoal):\n 1. index (sorted_list_of_set (g ` {0..<n})) (g i) = i", "have \"... = index [0..<n] (i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. index (map g [0..<n]) (g i) = index [0..<n] i", "by (rule index_map_inj_on[of _ \"{0..<n}\"], insert x i g, auto simp add: F_inj_def)"], ["proof (state)\nthis:\n  index (map g [0..<n]) (g i) = index [0..<n] i\n\ngoal (1 subgoal):\n 1. index (sorted_list_of_set (g ` {0..<n})) (g i) = i", "also"], ["proof (state)\nthis:\n  index (map g [0..<n]) (g i) = index [0..<n] i\n\ngoal (1 subgoal):\n 1. index (sorted_list_of_set (g ` {0..<n})) (g i) = i", "have \"... = i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. index [0..<n] i = i", "using i"], ["proof (prove)\nusing this:\n  i \\<in> {0..<n}\n\ngoal (1 subgoal):\n 1. index [0..<n] i = i", "by auto"], ["proof (state)\nthis:\n  index [0..<n] i = i\n\ngoal (1 subgoal):\n 1. index (sorted_list_of_set (g ` {0..<n})) (g i) = i", "finally"], ["proof (chain)\npicking this:\n  index (sorted_list_of_set (g ` {0..<n})) (g i) = i", "show ?thesis"], ["proof (prove)\nusing this:\n  index (sorted_list_of_set (g ` {0..<n})) (g i) = i\n\ngoal (1 subgoal):\n 1. index (sorted_list_of_set (g ` {0..<n})) (g i) = i", "."], ["proof (state)\nthis:\n  index (sorted_list_of_set (g ` {0..<n})) (g i) = i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  index (sorted_list_of_set (g ` {0..<n})) (g i) = i\n\ngoal (1 subgoal):\n 1. pick (g ` {0..<n}) i = g i", "moreover"], ["proof (state)\nthis:\n  index (sorted_list_of_set (g ` {0..<n})) (g i) = i\n\ngoal (1 subgoal):\n 1. pick (g ` {0..<n}) i = g i", "have \"(g i)  \\<in> (g ` {0..<n})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g i \\<in> g ` {0..<n}", "using x g i"], ["proof (prove)\nusing this:\n  x \\<in> {\\<pi>. \\<pi> permutes {0..<n}}\n  g \\<in> F_inj\n  i \\<in> {0..<n}\n\ngoal (1 subgoal):\n 1. g i \\<in> g ` {0..<n}", "unfolding F_inj_def"], ["proof (prove)\nusing this:\n  x \\<in> {\\<pi>. \\<pi> permutes {0..<n}}\n  g \\<in> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n           (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n           inj_on f {0..<n}}\n  i \\<in> {0..<n}\n\ngoal (1 subgoal):\n 1. g i \\<in> g ` {0..<n}", "by auto"], ["proof (state)\nthis:\n  g i \\<in> g ` {0..<n}\n\ngoal (1 subgoal):\n 1. pick (g ` {0..<n}) i = g i", "moreover"], ["proof (state)\nthis:\n  g i \\<in> g ` {0..<n}\n\ngoal (1 subgoal):\n 1. pick (g ` {0..<n}) i = g i", "have \"i < card (g ` {0..<n})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < card (g ` {0..<n})", "using x i g"], ["proof (prove)\nusing this:\n  x \\<in> {\\<pi>. \\<pi> permutes {0..<n}}\n  i \\<in> {0..<n}\n  g \\<in> F_inj\n\ngoal (1 subgoal):\n 1. i < card (g ` {0..<n})", "by (simp add: F_inj_def card_image)"], ["proof (state)\nthis:\n  i < card (g ` {0..<n})\n\ngoal (1 subgoal):\n 1. pick (g ` {0..<n}) i = g i", "ultimately"], ["proof (chain)\npicking this:\n  index (sorted_list_of_set (g ` {0..<n})) (g i) = i\n  g i \\<in> g ` {0..<n}\n  i < card (g ` {0..<n})", "show ?thesis"], ["proof (prove)\nusing this:\n  index (sorted_list_of_set (g ` {0..<n})) (g i) = i\n  g i \\<in> g ` {0..<n}\n  i < card (g ` {0..<n})\n\ngoal (1 subgoal):\n 1. pick (g ` {0..<n}) i = g i", "using pick_index"], ["proof (prove)\nusing this:\n  index (sorted_list_of_set (g ` {0..<n})) (g i) = i\n  g i \\<in> g ` {0..<n}\n  i < card (g ` {0..<n})\n  \\<lbrakk>?a \\<in> ?I; ?a' < card ?I\\<rbrakk>\n  \\<Longrightarrow> (pick ?I ?a' = ?a) =\n                    (index (sorted_list_of_set ?I) ?a = ?a')\n\ngoal (1 subgoal):\n 1. pick (g ` {0..<n}) i = g i", "by auto"], ["proof (state)\nthis:\n  pick (g ` {0..<n}) i = g i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  pick (g ` {0..<n}) i = g i\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {0..<n} \\<Longrightarrow>\n       submatrix B (g ` {0..<n}) UNIV $$ (xa, x xa) = B $$ (g xa, x xa)", "have \"submatrix B (g`{0..<n}) UNIV $$ (i, x i) = B $$ (pick (g`{0..<n}) i, pick UNIV (x i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix B (g ` {0..<n}) UNIV $$ (i, x i) =\n    B $$ (pick (g ` {0..<n}) i, pick UNIV (x i))", "by (rule submatrix_index, insert i B card_I x, auto)"], ["proof (state)\nthis:\n  submatrix B (g ` {0..<n}) UNIV $$ (i, x i) =\n  B $$ (pick (g ` {0..<n}) i, pick UNIV (x i))\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {0..<n} \\<Longrightarrow>\n       submatrix B (g ` {0..<n}) UNIV $$ (xa, x xa) = B $$ (g xa, x xa)", "also"], ["proof (state)\nthis:\n  submatrix B (g ` {0..<n}) UNIV $$ (i, x i) =\n  B $$ (pick (g ` {0..<n}) i, pick UNIV (x i))\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {0..<n} \\<Longrightarrow>\n       submatrix B (g ` {0..<n}) UNIV $$ (xa, x xa) = B $$ (g xa, x xa)", "have \"... = B $$ (g i, x i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B $$ (pick (g ` {0..<n}) i, pick UNIV (x i)) = B $$ (g i, x i)", "using pick_rw pick_UNIV"], ["proof (prove)\nusing this:\n  pick (g ` {0..<n}) i = g i\n  pick UNIV ?j = ?j\n\ngoal (1 subgoal):\n 1. B $$ (pick (g ` {0..<n}) i, pick UNIV (x i)) = B $$ (g i, x i)", "by auto"], ["proof (state)\nthis:\n  B $$ (pick (g ` {0..<n}) i, pick UNIV (x i)) = B $$ (g i, x i)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa \\<in> {0..<n} \\<Longrightarrow>\n       submatrix B (g ` {0..<n}) UNIV $$ (xa, x xa) = B $$ (g xa, x xa)", "finally"], ["proof (chain)\npicking this:\n  submatrix B (g ` {0..<n}) UNIV $$ (i, x i) = B $$ (g i, x i)", "show \"submatrix B (g ` {0..<n}) UNIV $$ (i, x i) = B $$ (g i, x i)\""], ["proof (prove)\nusing this:\n  submatrix B (g ` {0..<n}) UNIV $$ (i, x i) = B $$ (g i, x i)\n\ngoal (1 subgoal):\n 1. submatrix B (g ` {0..<n}) UNIV $$ (i, x i) = B $$ (g i, x i)", "."], ["proof (state)\nthis:\n  submatrix B (g ` {0..<n}) UNIV $$ (i, x i) = B $$ (g i, x i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Prod>i = 0..<n. submatrix B (g ` {0..<n}) UNIV $$ (i, x i)) =\n  (\\<Prod>i = 0..<n. B $$ (g i, x i))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {\\<pi>. \\<pi> permutes {0..<n}} \\<Longrightarrow>\n       signof x *\n       (\\<Prod>i = 0..<n. submatrix B (g ` {0..<n}) UNIV $$ (i, x i)) =\n       signof x * (\\<Prod>i = 0..<n. B $$ (g i, x i))", "thus \"signof x * (\\<Prod>i = 0..<n. submatrix B (g ` {0..<n}) UNIV $$ (i, x i))\n          = signof x * (\\<Prod>i = 0..<n. B $$ (g i, x i))\""], ["proof (prove)\nusing this:\n  (\\<Prod>i = 0..<n. submatrix B (g ` {0..<n}) UNIV $$ (i, x i)) =\n  (\\<Prod>i = 0..<n. B $$ (g i, x i))\n\ngoal (1 subgoal):\n 1. signof x *\n    (\\<Prod>i = 0..<n. submatrix B (g ` {0..<n}) UNIV $$ (i, x i)) =\n    signof x * (\\<Prod>i = 0..<n. B $$ (g i, x i))", "by simp"], ["proof (state)\nthis:\n  signof x *\n  (\\<Prod>i = 0..<n. submatrix B (g ` {0..<n}) UNIV $$ (i, x i)) =\n  signof x * (\\<Prod>i = 0..<n. B $$ (g i, x i))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>p\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n     signof p *\n     (\\<Prod>i = 0..<n. submatrix B (g ` {0..<n}) UNIV $$ (i, p i))) =\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i)))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix B (g ` {0..<n}) UNIV) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i)))", "finally"], ["proof (chain)\npicking this:\n  Determinant.det (submatrix B (g ` {0..<n}) UNIV) =\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i)))", "show ?thesis"], ["proof (prove)\nusing this:\n  Determinant.det (submatrix B (g ` {0..<n}) UNIV) =\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i)))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix B (g ` {0..<n}) UNIV) =\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i)))", "."], ["proof (state)\nthis:\n  Determinant.det (submatrix B (g ` {0..<n}) UNIV) =\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Determinant.det (submatrix B (g ` {0..<n}) UNIV) =\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i)))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A UNIV (g ` {0..<n})) *\n    Determinant.det (submatrix B (g ` {0..<n}) UNIV) =\n    (\\<Sum>(x, y)\\<in>Z_good g. weight x y)", "have \"?rhs = (\\<Sum>f\\<in>Z_good_fun. \\<Sum>\\<pi>\\<in>?Perm. weight f \\<pi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>(x, y)\\<in>Z_good g. weight x y) =\n    (\\<Sum>f\\<in>Z_good_fun.\n       \\<Sum>\\<pi> | \\<pi> permutes {0..<n}. weight f \\<pi>)", "unfolding Z_good_def sum.cartesian_product Z_good_fun_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>(x, y)\n           \\<in>{f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n                 (\\<forall>i.\n                     i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n                 inj_on f {0..<n} \\<and> f ` {0..<n} = g ` {0..<n}} \\<times>\n                {\\<pi>. \\<pi> permutes {0..<n}}.\n       weight x y) =\n    (\\<Sum>(x, y)\n           \\<in>{f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n                 (\\<forall>i.\n                     i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n                 inj_on f {0..<n} \\<and> f ` {0..<n} = g ` {0..<n}} \\<times>\n                {\\<pi>. \\<pi> permutes {0..<n}}.\n       weight x y)", "by blast"], ["proof (state)\nthis:\n  (\\<Sum>(x, y)\\<in>Z_good g. weight x y) =\n  (\\<Sum>f\\<in>Z_good_fun.\n     \\<Sum>\\<pi> | \\<pi> permutes {0..<n}. weight f \\<pi>)\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A UNIV (g ` {0..<n})) *\n    Determinant.det (submatrix B (g ` {0..<n}) UNIV) =\n    (\\<Sum>(x, y)\\<in>Z_good g. weight x y)", "also"], ["proof (state)\nthis:\n  (\\<Sum>(x, y)\\<in>Z_good g. weight x y) =\n  (\\<Sum>f\\<in>Z_good_fun.\n     \\<Sum>\\<pi> | \\<pi> permutes {0..<n}. weight f \\<pi>)\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A UNIV (g ` {0..<n})) *\n    Determinant.det (submatrix B (g ` {0..<n}) UNIV) =\n    (\\<Sum>(x, y)\\<in>Z_good g. weight x y)", "have \"... = (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}. ?P (g \\<circ> \\<phi>))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>f\\<in>Z_good_fun.\n       \\<Sum>\\<pi> | \\<pi> permutes {0..<n}. weight f \\<pi>) =\n    (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n       \\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n         weight (g \\<circ> \\<phi>) \\<pi>)", "unfolding Z_good_fun_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>f | f \\<in> {0..<n} \\<rightarrow> {0..<m} \\<and>\n               (\\<forall>i.\n                   i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n               inj_on f {0..<n} \\<and> f ` {0..<n} = g ` {0..<n}.\n       \\<Sum>\\<pi> | \\<pi> permutes {0..<n}. weight f \\<pi>) =\n    (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n       \\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n         weight (g \\<circ> \\<phi>) \\<pi>)", "by (rule Z_good_fun_alt_sum[OF g])"], ["proof (state)\nthis:\n  (\\<Sum>f\\<in>Z_good_fun.\n     \\<Sum>\\<pi> | \\<pi> permutes {0..<n}. weight f \\<pi>) =\n  (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n     \\<Sum>\\<pi> | \\<pi> permutes {0..<n}. weight (g \\<circ> \\<phi>) \\<pi>)\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A UNIV (g ` {0..<n})) *\n    Determinant.det (submatrix B (g ` {0..<n}) UNIV) =\n    (\\<Sum>(x, y)\\<in>Z_good g. weight x y)", "also"], ["proof (state)\nthis:\n  (\\<Sum>f\\<in>Z_good_fun.\n     \\<Sum>\\<pi> | \\<pi> permutes {0..<n}. weight f \\<pi>) =\n  (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n     \\<Sum>\\<pi> | \\<pi> permutes {0..<n}. weight (g \\<circ> \\<phi>) \\<pi>)\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A UNIV (g ` {0..<n})) *\n    Determinant.det (submatrix B (g ` {0..<n}) UNIV) =\n    (\\<Sum>(x, y)\\<in>Z_good g. weight x y)", "have \"... = (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}. \\<Sum>\\<pi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n    signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) * signof (\\<pi> \\<circ> ?inv \\<phi>)\n    * (\\<Prod>i = 0..<n. B $$ (g i, (\\<pi> \\<circ> ?inv \\<phi>) i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n       \\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n         weight (g \\<circ> \\<phi>) \\<pi>) =\n    (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n       \\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n         signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n         signof (\\<pi> \\<circ> inv \\<phi>) *\n         (\\<Prod>i = 0..<n. B $$ (g i, (\\<pi> \\<circ> inv \\<phi>) i)))", "proof (rule sum.cong, simp, rule sum.cong, simp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> {\\<pi>. \\<pi> permutes {0..<n}};\n        xa \\<in> {\\<pi>. \\<pi> permutes {0..<n}}\\<rbrakk>\n       \\<Longrightarrow> weight (g \\<circ> x) xa =\n                         signof x * (\\<Prod>i = 0..<n. A $$ (i, g (x i))) *\n                         signof (xa \\<circ> inv x) *\n                         (\\<Prod>i = 0..<n.\n                             B $$ (g i, (xa \\<circ> inv x) i))", "fix \\<phi> \\<pi>"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> {\\<pi>. \\<pi> permutes {0..<n}};\n        xa \\<in> {\\<pi>. \\<pi> permutes {0..<n}}\\<rbrakk>\n       \\<Longrightarrow> weight (g \\<circ> x) xa =\n                         signof x * (\\<Prod>i = 0..<n. A $$ (i, g (x i))) *\n                         signof (xa \\<circ> inv x) *\n                         (\\<Prod>i = 0..<n.\n                             B $$ (g i, (xa \\<circ> inv x) i))", "assume phi: \"\\<phi> \\<in> ?Perm\" and pi: \"\\<pi> \\<in> ?Perm\""], ["proof (state)\nthis:\n  \\<phi> \\<in> {\\<pi>. \\<pi> permutes {0..<n}}\n  \\<pi> \\<in> {\\<pi>. \\<pi> permutes {0..<n}}\n\ngoal (1 subgoal):\n 1. \\<And>x xa.\n       \\<lbrakk>x \\<in> {\\<pi>. \\<pi> permutes {0..<n}};\n        xa \\<in> {\\<pi>. \\<pi> permutes {0..<n}}\\<rbrakk>\n       \\<Longrightarrow> weight (g \\<circ> x) xa =\n                         signof x * (\\<Prod>i = 0..<n. A $$ (i, g (x i))) *\n                         signof (xa \\<circ> inv x) *\n                         (\\<Prod>i = 0..<n.\n                             B $$ (g i, (xa \\<circ> inv x) i))", "show \"weight (g \\<circ> \\<phi>) \\<pi> = signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n      signof (\\<pi> \\<circ> ?inv \\<phi>) * (\\<Prod>i = 0..<n. B $$ (g i, (\\<pi> \\<circ> ?inv \\<phi>) i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. weight (g \\<circ> \\<phi>) \\<pi> =\n    signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n    signof (\\<pi> \\<circ> inv \\<phi>) *\n    (\\<Prod>i = 0..<n. B $$ (g i, (\\<pi> \\<circ> inv \\<phi>) i))", "proof (rule step_weight)"], ["proof (state)\ngoal (5 subgoals):\n 1. g \\<circ> \\<phi> \\<in> F_inj\n 2. g \\<in> F\n 3. \\<pi> permutes {0..<n}\n 4. \\<phi> permutes {0..<n}\n 5. \\<forall>x\\<in>{0..<n}. (g \\<circ> \\<phi>) x = g (\\<phi> x)", "show \"g \\<circ> \\<phi> \\<in> F_inj\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<circ> \\<phi> \\<in> F_inj", "by (rule F_inj_composition_permutation[OF _ g], insert phi, auto)"], ["proof (state)\nthis:\n  g \\<circ> \\<phi> \\<in> F_inj\n\ngoal (4 subgoals):\n 1. g \\<in> F\n 2. \\<pi> permutes {0..<n}\n 3. \\<phi> permutes {0..<n}\n 4. \\<forall>x\\<in>{0..<n}. (g \\<circ> \\<phi>) x = g (\\<phi> x)", "show \"g \\<in> F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<in> F", "using g"], ["proof (prove)\nusing this:\n  g \\<in> F_inj\n\ngoal (1 subgoal):\n 1. g \\<in> F", "unfolding F_def F_inj_def"], ["proof (prove)\nusing this:\n  g \\<in> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n           (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n           inj_on f {0..<n}}\n\ngoal (1 subgoal):\n 1. g \\<in> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n             \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}", "by simp"], ["proof (state)\nthis:\n  g \\<in> F\n\ngoal (3 subgoals):\n 1. \\<pi> permutes {0..<n}\n 2. \\<phi> permutes {0..<n}\n 3. \\<forall>x\\<in>{0..<n}. (g \\<circ> \\<phi>) x = g (\\<phi> x)", "qed (insert phi pi, auto)"], ["proof (state)\nthis:\n  weight (g \\<circ> \\<phi>) \\<pi> =\n  signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n  signof (\\<pi> \\<circ> inv \\<phi>) *\n  (\\<Prod>i = 0..<n. B $$ (g i, (\\<pi> \\<circ> inv \\<phi>) i))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n     \\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       weight (g \\<circ> \\<phi>) \\<pi>) =\n  (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n     \\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n       signof (\\<pi> \\<circ> inv \\<phi>) *\n       (\\<Prod>i = 0..<n. B $$ (g i, (\\<pi> \\<circ> inv \\<phi>) i)))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A UNIV (g ` {0..<n})) *\n    Determinant.det (submatrix B (g ` {0..<n}) UNIV) =\n    (\\<Sum>(x, y)\\<in>Z_good g. weight x y)", "also"], ["proof (state)\nthis:\n  (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n     \\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       weight (g \\<circ> \\<phi>) \\<pi>) =\n  (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n     \\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n       signof (\\<pi> \\<circ> inv \\<phi>) *\n       (\\<Prod>i = 0..<n. B $$ (g i, (\\<pi> \\<circ> inv \\<phi>) i)))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A UNIV (g ` {0..<n})) *\n    Determinant.det (submatrix B (g ` {0..<n}) UNIV) =\n    (\\<Sum>(x, y)\\<in>Z_good g. weight x y)", "have \"... = (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}. signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n     (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}. signof (\\<pi> \\<circ> ?inv \\<phi>) * (\\<Prod>i = 0..<n. B $$ (g i, (\\<pi> \\<circ> ?inv \\<phi>) i))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n       \\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n         signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n         signof (\\<pi> \\<circ> inv \\<phi>) *\n         (\\<Prod>i = 0..<n. B $$ (g i, (\\<pi> \\<circ> inv \\<phi>) i))) =\n    (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n       signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n       (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n          signof (\\<pi> \\<circ> inv \\<phi>) *\n          (\\<Prod>i = 0..<n. B $$ (g i, (\\<pi> \\<circ> inv \\<phi>) i))))", "by (metis (mono_tags, lifting) Groups.mult_ac(1) semiring_0_class.sum_distrib_left sum.cong)"], ["proof (state)\nthis:\n  (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n     \\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n       signof (\\<pi> \\<circ> inv \\<phi>) *\n       (\\<Prod>i = 0..<n. B $$ (g i, (\\<pi> \\<circ> inv \\<phi>) i))) =\n  (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n     signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n     (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n        signof (\\<pi> \\<circ> inv \\<phi>) *\n        (\\<Prod>i = 0..<n. B $$ (g i, (\\<pi> \\<circ> inv \\<phi>) i))))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A UNIV (g ` {0..<n})) *\n    Determinant.det (submatrix B (g ` {0..<n}) UNIV) =\n    (\\<Sum>(x, y)\\<in>Z_good g. weight x y)", "also"], ["proof (state)\nthis:\n  (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n     \\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n       signof (\\<pi> \\<circ> inv \\<phi>) *\n       (\\<Prod>i = 0..<n. B $$ (g i, (\\<pi> \\<circ> inv \\<phi>) i))) =\n  (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n     signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n     (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n        signof (\\<pi> \\<circ> inv \\<phi>) *\n        (\\<Prod>i = 0..<n. B $$ (g i, (\\<pi> \\<circ> inv \\<phi>) i))))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A UNIV (g ` {0..<n})) *\n    Determinant.det (submatrix B (g ` {0..<n}) UNIV) =\n    (\\<Sum>(x, y)\\<in>Z_good g. weight x y)", "have \"... = (\\<Sum>\\<phi> \\<in> ?Perm. signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n    (\\<Sum>\\<pi> \\<in> ?Perm. signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n       signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n       (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n          signof (\\<pi> \\<circ> inv \\<phi>) *\n          (\\<Prod>i = 0..<n. B $$ (g i, (\\<pi> \\<circ> inv \\<phi>) i)))) =\n    (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n       signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n       (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n          signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i))))", "using detB_rw"], ["proof (prove)\nusing this:\n  ?\\<phi>1 permutes {0..<n} \\<Longrightarrow>\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     signof (\\<pi> \\<circ> inv ?\\<phi>1) *\n     (\\<Prod>i = 0..<n. B $$ (g i, (\\<pi> \\<circ> inv ?\\<phi>1) i))) =\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n       signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n       (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n          signof (\\<pi> \\<circ> inv \\<phi>) *\n          (\\<Prod>i = 0..<n. B $$ (g i, (\\<pi> \\<circ> inv \\<phi>) i)))) =\n    (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n       signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n       (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n          signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i))))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n     signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n     (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n        signof (\\<pi> \\<circ> inv \\<phi>) *\n        (\\<Prod>i = 0..<n. B $$ (g i, (\\<pi> \\<circ> inv \\<phi>) i)))) =\n  (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n     signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n     (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n        signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i))))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A UNIV (g ` {0..<n})) *\n    Determinant.det (submatrix B (g ` {0..<n}) UNIV) =\n    (\\<Sum>(x, y)\\<in>Z_good g. weight x y)", "also"], ["proof (state)\nthis:\n  (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n     signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n     (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n        signof (\\<pi> \\<circ> inv \\<phi>) *\n        (\\<Prod>i = 0..<n. B $$ (g i, (\\<pi> \\<circ> inv \\<phi>) i)))) =\n  (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n     signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n     (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n        signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i))))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A UNIV (g ` {0..<n})) *\n    Determinant.det (submatrix B (g ` {0..<n}) UNIV) =\n    (\\<Sum>(x, y)\\<in>Z_good g. weight x y)", "have \"... = (\\<Sum>\\<phi> \\<in> ?Perm. signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i)))) *\n    (\\<Sum>\\<pi> \\<in> ?Perm. signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n       signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n       (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n          signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i)))) =\n    (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n       signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i)))) *\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i)))", "by (simp add: semiring_0_class.sum_distrib_right)"], ["proof (state)\nthis:\n  (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n     signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n     (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n        signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i)))) =\n  (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n     signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i)))) *\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i)))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A UNIV (g ` {0..<n})) *\n    Determinant.det (submatrix B (g ` {0..<n}) UNIV) =\n    (\\<Sum>(x, y)\\<in>Z_good g. weight x y)", "also"], ["proof (state)\nthis:\n  (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n     signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i))) *\n     (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n        signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i)))) =\n  (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n     signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i)))) *\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i)))\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A UNIV (g ` {0..<n})) *\n    Determinant.det (submatrix B (g ` {0..<n}) UNIV) =\n    (\\<Sum>(x, y)\\<in>Z_good g. weight x y)", "have \"... = ?lhs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n       signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i)))) *\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i))) =\n    Determinant.det (submatrix A UNIV (g ` {0..<n})) *\n    Determinant.det (submatrix B (g ` {0..<n}) UNIV)", "unfolding detA detB"], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A UNIV (g ` {0..<n})) *\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i))) =\n    Determinant.det (submatrix A UNIV (g ` {0..<n})) *\n    (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i)))", ".."], ["proof (state)\nthis:\n  (\\<Sum>\\<phi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}.\n     signof \\<phi> * (\\<Prod>i = 0..<n. A $$ (i, g (\\<phi> i)))) *\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (g i, \\<pi> i))) =\n  Determinant.det (submatrix A UNIV (g ` {0..<n})) *\n  Determinant.det (submatrix B (g ` {0..<n}) UNIV)\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A UNIV (g ` {0..<n})) *\n    Determinant.det (submatrix B (g ` {0..<n}) UNIV) =\n    (\\<Sum>(x, y)\\<in>Z_good g. weight x y)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>(x, y)\\<in>Z_good g. weight x y) =\n  Determinant.det (submatrix A UNIV (g ` {0..<n})) *\n  Determinant.det (submatrix B (g ` {0..<n}) UNIV)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>(x, y)\\<in>Z_good g. weight x y) =\n  Determinant.det (submatrix A UNIV (g ` {0..<n})) *\n  Determinant.det (submatrix B (g ` {0..<n}) UNIV)\n\ngoal (1 subgoal):\n 1. Determinant.det (submatrix A UNIV (g ` {0..<n})) *\n    Determinant.det (submatrix B (g ` {0..<n}) UNIV) =\n    (\\<Sum>(x, y)\\<in>Z_good g. weight x y)", ".."], ["proof (state)\nthis:\n  Determinant.det (submatrix A UNIV (g ` {0..<n})) *\n  Determinant.det (submatrix B (g ` {0..<n}) UNIV) =\n  (\\<Sum>(x, y)\\<in>Z_good g. weight x y)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma gather_by_strictness:\n\"sum (\\<lambda>g. sum (\\<lambda>(f,\\<pi>). weight f \\<pi>) (Z_good g)) F_strict\n  = sum (\\<lambda>g. det (submatrix A UNIV (g`{0..<n})) * det (submatrix B (g`{0..<n}) UNIV)) F_strict\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>g\\<in>F_strict. \\<Sum>(x, y)\\<in>Z_good g. weight x y) =\n    (\\<Sum>g\\<in>F_strict.\n       Determinant.det (submatrix A UNIV (g ` {0..<n})) *\n       Determinant.det (submatrix B (g ` {0..<n}) UNIV))", "proof (rule sum.cong)"], ["proof (state)\ngoal (2 subgoals):\n 1. F_strict = F_strict\n 2. \\<And>x.\n       x \\<in> F_strict \\<Longrightarrow>\n       (\\<Sum>(x, y)\\<in>Z_good x. weight x y) =\n       Determinant.det (submatrix A UNIV (x ` {0..<n})) *\n       Determinant.det (submatrix B (x ` {0..<n}) UNIV)", "fix f"], ["proof (state)\ngoal (2 subgoals):\n 1. F_strict = F_strict\n 2. \\<And>x.\n       x \\<in> F_strict \\<Longrightarrow>\n       (\\<Sum>(x, y)\\<in>Z_good x. weight x y) =\n       Determinant.det (submatrix A UNIV (x ` {0..<n})) *\n       Determinant.det (submatrix B (x ` {0..<n}) UNIV)", "assume f: \"f \\<in> F_strict\""], ["proof (state)\nthis:\n  f \\<in> F_strict\n\ngoal (2 subgoals):\n 1. F_strict = F_strict\n 2. \\<And>x.\n       x \\<in> F_strict \\<Longrightarrow>\n       (\\<Sum>(x, y)\\<in>Z_good x. weight x y) =\n       Determinant.det (submatrix A UNIV (x ` {0..<n})) *\n       Determinant.det (submatrix B (x ` {0..<n}) UNIV)", "show \"(\\<Sum>(x, y)\\<in>Z_good f. weight x y)\n    = det (submatrix A UNIV (f ` {0..<n})) * det (submatrix B (f ` {0..<n}) UNIV)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>(x, y)\\<in>Z_good f. weight x y) =\n    Determinant.det (submatrix A UNIV (f ` {0..<n})) *\n    Determinant.det (submatrix B (f ` {0..<n}) UNIV)", "by (rule one_step[symmetric], rule f)"], ["proof (state)\nthis:\n  (\\<Sum>(x, y)\\<in>Z_good f. weight x y) =\n  Determinant.det (submatrix A UNIV (f ` {0..<n})) *\n  Determinant.det (submatrix B (f ` {0..<n}) UNIV)\n\ngoal (1 subgoal):\n 1. F_strict = F_strict", "qed (simp)"], ["", "lemma finite_Z_strict[simp]: \"finite Z_strict\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite Z_strict", "proof (unfold Z_strict_def, rule finite_cartesian_product)"], ["proof (state)\ngoal (2 subgoals):\n 1. finite\n     {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n      (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n      strict_mono_on f {0..<n}}\n 2. finite {\\<pi>. \\<pi> permutes {0..<n}}", "have finN: \"finite {0..<n}\" and finM: \"finite {0..<m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {0..<n} &&& finite {0..<m}", "by auto"], ["proof (state)\nthis:\n  finite {0..<n}\n  finite {0..<m}\n\ngoal (2 subgoals):\n 1. finite\n     {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n      (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n      strict_mono_on f {0..<n}}\n 2. finite {\\<pi>. \\<pi> permutes {0..<n}}", "let ?A=\"{f \\<in> {0..<n} \\<rightarrow> {0..<m}. (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and> strict_mono_on f {0..<n}}\""], ["proof (state)\ngoal (2 subgoals):\n 1. finite\n     {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n      (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n      strict_mono_on f {0..<n}}\n 2. finite {\\<pi>. \\<pi> permutes {0..<n}}", "let ?B=\"{f \\<in> {0..<n} \\<rightarrow> {0..<m}. (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)}\""], ["proof (state)\ngoal (2 subgoals):\n 1. finite\n     {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n      (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n      strict_mono_on f {0..<n}}\n 2. finite {\\<pi>. \\<pi> permutes {0..<n}}", "have B: \"{f. (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and> (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)} = ?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {f. (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n        (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)} =\n    {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n     \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}", "by auto"], ["proof (state)\nthis:\n  {f. (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n      (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)} =\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n\ngoal (2 subgoals):\n 1. finite\n     {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n      (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n      strict_mono_on f {0..<n}}\n 2. finite {\\<pi>. \\<pi> permutes {0..<n}}", "have \"?A\\<subseteq>?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n     (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n     strict_mono_on f {0..<n}}\n    \\<subseteq> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n                 \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}", "by auto"], ["proof (state)\nthis:\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n   strict_mono_on f {0..<n}}\n  \\<subseteq> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n               \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n\ngoal (2 subgoals):\n 1. finite\n     {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n      (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n      strict_mono_on f {0..<n}}\n 2. finite {\\<pi>. \\<pi> permutes {0..<n}}", "moreover"], ["proof (state)\nthis:\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n   strict_mono_on f {0..<n}}\n  \\<subseteq> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n               \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n\ngoal (2 subgoals):\n 1. finite\n     {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n      (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n      strict_mono_on f {0..<n}}\n 2. finite {\\<pi>. \\<pi> permutes {0..<n}}", "have \"finite ?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n      \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}", "using B finite_bounded_functions[OF finM finN]"], ["proof (prove)\nusing this:\n  {f. (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n      (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)} =\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n  finite\n   {f. (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n       (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)}\n\ngoal (1 subgoal):\n 1. finite\n     {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n      \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}", "by auto"], ["proof (state)\nthis:\n  finite\n   {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n    \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n\ngoal (2 subgoals):\n 1. finite\n     {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n      (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n      strict_mono_on f {0..<n}}\n 2. finite {\\<pi>. \\<pi> permutes {0..<n}}", "ultimately"], ["proof (chain)\npicking this:\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n   strict_mono_on f {0..<n}}\n  \\<subseteq> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n               \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n  finite\n   {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n    \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}", "show \"finite ?A\""], ["proof (prove)\nusing this:\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n   strict_mono_on f {0..<n}}\n  \\<subseteq> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n               \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n  finite\n   {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n    \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n\ngoal (1 subgoal):\n 1. finite\n     {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n      (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n      strict_mono_on f {0..<n}}", "using rev_finite_subset"], ["proof (prove)\nusing this:\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n   strict_mono_on f {0..<n}}\n  \\<subseteq> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n               \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n  finite\n   {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n    \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n  \\<lbrakk>finite ?B; ?A \\<subseteq> ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. finite\n     {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n      (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n      strict_mono_on f {0..<n}}", "by blast"], ["proof (state)\nthis:\n  finite\n   {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n    (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n    strict_mono_on f {0..<n}}\n\ngoal (1 subgoal):\n 1. finite {\\<pi>. \\<pi> permutes {0..<n}}", "show \"finite {\\<pi>. \\<pi> permutes {0..<n}}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {\\<pi>. \\<pi> permutes {0..<n}}", "using finite_permutations"], ["proof (prove)\nusing this:\n  finite ?S \\<Longrightarrow> finite {p. p permutes ?S}\n\ngoal (1 subgoal):\n 1. finite {\\<pi>. \\<pi> permutes {0..<n}}", "by blast"], ["proof (state)\nthis:\n  finite {\\<pi>. \\<pi> permutes {0..<n}}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma finite_Z_not_strict[simp]: \"finite Z_not_strict\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite Z_not_strict", "proof (unfold Z_not_strict_def, rule finite_cartesian_product)"], ["proof (state)\ngoal (2 subgoals):\n 1. finite\n     {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n      (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n      \\<not> strict_mono_on f {0..<n}}\n 2. finite {\\<pi>. \\<pi> permutes {0..<n}}", "have finN: \"finite {0..<n}\" and finM: \"finite {0..<m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {0..<n} &&& finite {0..<m}", "by auto"], ["proof (state)\nthis:\n  finite {0..<n}\n  finite {0..<m}\n\ngoal (2 subgoals):\n 1. finite\n     {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n      (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n      \\<not> strict_mono_on f {0..<n}}\n 2. finite {\\<pi>. \\<pi> permutes {0..<n}}", "let ?A=\"{f \\<in> {0..<n} \\<rightarrow> {0..<m}. (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and> \\<not> strict_mono_on f {0..<n}}\""], ["proof (state)\ngoal (2 subgoals):\n 1. finite\n     {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n      (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n      \\<not> strict_mono_on f {0..<n}}\n 2. finite {\\<pi>. \\<pi> permutes {0..<n}}", "let ?B=\"{f \\<in> {0..<n} \\<rightarrow> {0..<m}. (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)}\""], ["proof (state)\ngoal (2 subgoals):\n 1. finite\n     {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n      (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n      \\<not> strict_mono_on f {0..<n}}\n 2. finite {\\<pi>. \\<pi> permutes {0..<n}}", "have B: \"{f. (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and> (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)} = ?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {f. (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n        (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)} =\n    {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n     \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}", "by auto"], ["proof (state)\nthis:\n  {f. (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n      (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)} =\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n\ngoal (2 subgoals):\n 1. finite\n     {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n      (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n      \\<not> strict_mono_on f {0..<n}}\n 2. finite {\\<pi>. \\<pi> permutes {0..<n}}", "have \"?A\\<subseteq>?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n     (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n     \\<not> strict_mono_on f {0..<n}}\n    \\<subseteq> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n                 \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}", "by auto"], ["proof (state)\nthis:\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n   \\<not> strict_mono_on f {0..<n}}\n  \\<subseteq> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n               \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n\ngoal (2 subgoals):\n 1. finite\n     {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n      (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n      \\<not> strict_mono_on f {0..<n}}\n 2. finite {\\<pi>. \\<pi> permutes {0..<n}}", "moreover"], ["proof (state)\nthis:\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n   \\<not> strict_mono_on f {0..<n}}\n  \\<subseteq> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n               \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n\ngoal (2 subgoals):\n 1. finite\n     {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n      (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n      \\<not> strict_mono_on f {0..<n}}\n 2. finite {\\<pi>. \\<pi> permutes {0..<n}}", "have \"finite ?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n      \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}", "using B finite_bounded_functions[OF finM finN]"], ["proof (prove)\nusing this:\n  {f. (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n      (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)} =\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n  finite\n   {f. (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n       (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)}\n\ngoal (1 subgoal):\n 1. finite\n     {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n      \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}", "by auto"], ["proof (state)\nthis:\n  finite\n   {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n    \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n\ngoal (2 subgoals):\n 1. finite\n     {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n      (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n      \\<not> strict_mono_on f {0..<n}}\n 2. finite {\\<pi>. \\<pi> permutes {0..<n}}", "ultimately"], ["proof (chain)\npicking this:\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n   \\<not> strict_mono_on f {0..<n}}\n  \\<subseteq> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n               \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n  finite\n   {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n    \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}", "show \"finite ?A\""], ["proof (prove)\nusing this:\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n   \\<not> strict_mono_on f {0..<n}}\n  \\<subseteq> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n               \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n  finite\n   {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n    \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n\ngoal (1 subgoal):\n 1. finite\n     {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n      (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n      \\<not> strict_mono_on f {0..<n}}", "using rev_finite_subset"], ["proof (prove)\nusing this:\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n   \\<not> strict_mono_on f {0..<n}}\n  \\<subseteq> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n               \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n  finite\n   {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n    \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n  \\<lbrakk>finite ?B; ?A \\<subseteq> ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. finite\n     {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n      (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n      \\<not> strict_mono_on f {0..<n}}", "by blast"], ["proof (state)\nthis:\n  finite\n   {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n    (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n    \\<not> strict_mono_on f {0..<n}}\n\ngoal (1 subgoal):\n 1. finite {\\<pi>. \\<pi> permutes {0..<n}}", "show \"finite {\\<pi>. \\<pi> permutes {0..<n}}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {\\<pi>. \\<pi> permutes {0..<n}}", "using finite_permutations"], ["proof (prove)\nusing this:\n  finite ?S \\<Longrightarrow> finite {p. p permutes ?S}\n\ngoal (1 subgoal):\n 1. finite {\\<pi>. \\<pi> permutes {0..<n}}", "by blast"], ["proof (state)\nthis:\n  finite {\\<pi>. \\<pi> permutes {0..<n}}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma finite_Znm[simp]: \"finite (Z n m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (Z n m)", "proof (unfold Z_alt_def, rule finite_cartesian_product)"], ["proof (state)\ngoal (2 subgoals):\n 1. finite\n     {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n      \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n 2. finite {\\<pi>. \\<pi> permutes {0..<n}}", "have finN: \"finite {0..<n}\" and finM: \"finite {0..<m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {0..<n} &&& finite {0..<m}", "by auto"], ["proof (state)\nthis:\n  finite {0..<n}\n  finite {0..<m}\n\ngoal (2 subgoals):\n 1. finite\n     {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n      \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n 2. finite {\\<pi>. \\<pi> permutes {0..<n}}", "let ?A=\"{f \\<in> {0..<n} \\<rightarrow> {0..<m}. (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) }\""], ["proof (state)\ngoal (2 subgoals):\n 1. finite\n     {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n      \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n 2. finite {\\<pi>. \\<pi> permutes {0..<n}}", "let ?B=\"{f \\<in> {0..<n} \\<rightarrow> {0..<m}. (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)}\""], ["proof (state)\ngoal (2 subgoals):\n 1. finite\n     {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n      \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n 2. finite {\\<pi>. \\<pi> permutes {0..<n}}", "have B: \"{f. (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and> (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)} = ?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {f. (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n        (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)} =\n    {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n     \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}", "by auto"], ["proof (state)\nthis:\n  {f. (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n      (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)} =\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n\ngoal (2 subgoals):\n 1. finite\n     {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n      \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n 2. finite {\\<pi>. \\<pi> permutes {0..<n}}", "have \"?A\\<subseteq>?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n     \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n    \\<subseteq> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n                 \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}", "by auto"], ["proof (state)\nthis:\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n  \\<subseteq> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n               \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n\ngoal (2 subgoals):\n 1. finite\n     {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n      \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n 2. finite {\\<pi>. \\<pi> permutes {0..<n}}", "moreover"], ["proof (state)\nthis:\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n  \\<subseteq> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n               \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n\ngoal (2 subgoals):\n 1. finite\n     {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n      \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n 2. finite {\\<pi>. \\<pi> permutes {0..<n}}", "have \"finite ?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n      \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}", "using B finite_bounded_functions[OF finM finN]"], ["proof (prove)\nusing this:\n  {f. (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n      (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)} =\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n  finite\n   {f. (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n       (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)}\n\ngoal (1 subgoal):\n 1. finite\n     {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n      \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}", "by auto"], ["proof (state)\nthis:\n  finite\n   {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n    \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n\ngoal (2 subgoals):\n 1. finite\n     {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n      \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n 2. finite {\\<pi>. \\<pi> permutes {0..<n}}", "ultimately"], ["proof (chain)\npicking this:\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n  \\<subseteq> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n               \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n  finite\n   {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n    \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}", "show \"finite ?A\""], ["proof (prove)\nusing this:\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n  \\<subseteq> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n               \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n  finite\n   {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n    \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n\ngoal (1 subgoal):\n 1. finite\n     {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n      \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}", "using rev_finite_subset"], ["proof (prove)\nusing this:\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n  \\<subseteq> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n               \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n  finite\n   {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n    \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n  \\<lbrakk>finite ?B; ?A \\<subseteq> ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. finite\n     {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n      \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}", "by blast"], ["proof (state)\nthis:\n  finite\n   {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n    \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n\ngoal (1 subgoal):\n 1. finite {\\<pi>. \\<pi> permutes {0..<n}}", "show \"finite {\\<pi>. \\<pi> permutes {0..<n}}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {\\<pi>. \\<pi> permutes {0..<n}}", "using finite_permutations"], ["proof (prove)\nusing this:\n  finite ?S \\<Longrightarrow> finite {p. p permutes ?S}\n\ngoal (1 subgoal):\n 1. finite {\\<pi>. \\<pi> permutes {0..<n}}", "by blast"], ["proof (state)\nthis:\n  finite {\\<pi>. \\<pi> permutes {0..<n}}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma finite_F_inj[simp]: \"finite F_inj\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite F_inj", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite F_inj", "have finN: \"finite {0..<n}\" and finM: \"finite {0..<m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {0..<n} &&& finite {0..<m}", "by auto"], ["proof (state)\nthis:\n  finite {0..<n}\n  finite {0..<m}\n\ngoal (1 subgoal):\n 1. finite F_inj", "let ?A=\"{f \\<in> {0..<n} \\<rightarrow> {0..<m}. (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and> inj_on f {0..<n}}\""], ["proof (state)\ngoal (1 subgoal):\n 1. finite F_inj", "let ?B=\"{f \\<in> {0..<n} \\<rightarrow> {0..<m}. (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)}\""], ["proof (state)\ngoal (1 subgoal):\n 1. finite F_inj", "have B: \"{f. (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and> (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)} = ?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {f. (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n        (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)} =\n    {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n     \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}", "by auto"], ["proof (state)\nthis:\n  {f. (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n      (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)} =\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n\ngoal (1 subgoal):\n 1. finite F_inj", "have \"?A\\<subseteq>?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n     (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n     inj_on f {0..<n}}\n    \\<subseteq> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n                 \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}", "by auto"], ["proof (state)\nthis:\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n   inj_on f {0..<n}}\n  \\<subseteq> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n               \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n\ngoal (1 subgoal):\n 1. finite F_inj", "moreover"], ["proof (state)\nthis:\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n   inj_on f {0..<n}}\n  \\<subseteq> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n               \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n\ngoal (1 subgoal):\n 1. finite F_inj", "have \"finite ?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n      \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}", "using B finite_bounded_functions[OF finM finN]"], ["proof (prove)\nusing this:\n  {f. (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n      (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)} =\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n  finite\n   {f. (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n       (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)}\n\ngoal (1 subgoal):\n 1. finite\n     {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n      \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}", "by auto"], ["proof (state)\nthis:\n  finite\n   {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n    \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n\ngoal (1 subgoal):\n 1. finite F_inj", "ultimately"], ["proof (chain)\npicking this:\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n   inj_on f {0..<n}}\n  \\<subseteq> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n               \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n  finite\n   {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n    \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}", "show \"finite F_inj\""], ["proof (prove)\nusing this:\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n   inj_on f {0..<n}}\n  \\<subseteq> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n               \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n  finite\n   {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n    \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n\ngoal (1 subgoal):\n 1. finite F_inj", "unfolding F_inj_def"], ["proof (prove)\nusing this:\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n   inj_on f {0..<n}}\n  \\<subseteq> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n               \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n  finite\n   {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n    \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n\ngoal (1 subgoal):\n 1. finite\n     {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n      (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n      inj_on f {0..<n}}", "using rev_finite_subset"], ["proof (prove)\nusing this:\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n   inj_on f {0..<n}}\n  \\<subseteq> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n               \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n  finite\n   {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n    \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n  \\<lbrakk>finite ?B; ?A \\<subseteq> ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. finite\n     {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n      (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n      inj_on f {0..<n}}", "by blast"], ["proof (state)\nthis:\n  finite F_inj\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma finite_F_strict[simp]: \"finite F_strict\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite F_strict", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. finite F_strict", "have finN: \"finite {0..<n}\" and finM: \"finite {0..<m}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {0..<n} &&& finite {0..<m}", "by auto"], ["proof (state)\nthis:\n  finite {0..<n}\n  finite {0..<m}\n\ngoal (1 subgoal):\n 1. finite F_strict", "let ?A=\"{f \\<in> {0..<n} \\<rightarrow> {0..<m}. (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and> strict_mono_on f {0..<n}}\""], ["proof (state)\ngoal (1 subgoal):\n 1. finite F_strict", "let ?B=\"{f \\<in> {0..<n} \\<rightarrow> {0..<m}. (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)}\""], ["proof (state)\ngoal (1 subgoal):\n 1. finite F_strict", "have B: \"{f. (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and> (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)} = ?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {f. (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n        (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)} =\n    {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n     \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}", "by auto"], ["proof (state)\nthis:\n  {f. (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n      (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)} =\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n\ngoal (1 subgoal):\n 1. finite F_strict", "have \"?A\\<subseteq>?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n     (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n     strict_mono_on f {0..<n}}\n    \\<subseteq> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n                 \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}", "by auto"], ["proof (state)\nthis:\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n   strict_mono_on f {0..<n}}\n  \\<subseteq> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n               \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n\ngoal (1 subgoal):\n 1. finite F_strict", "moreover"], ["proof (state)\nthis:\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n   strict_mono_on f {0..<n}}\n  \\<subseteq> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n               \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n\ngoal (1 subgoal):\n 1. finite F_strict", "have \"finite ?B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite\n     {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n      \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}", "using B finite_bounded_functions[OF finM finN]"], ["proof (prove)\nusing this:\n  {f. (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n      (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)} =\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n  finite\n   {f. (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and>\n       (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)}\n\ngoal (1 subgoal):\n 1. finite\n     {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n      \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}", "by auto"], ["proof (state)\nthis:\n  finite\n   {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n    \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n\ngoal (1 subgoal):\n 1. finite F_strict", "ultimately"], ["proof (chain)\npicking this:\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n   strict_mono_on f {0..<n}}\n  \\<subseteq> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n               \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n  finite\n   {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n    \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}", "show \"finite F_strict\""], ["proof (prove)\nusing this:\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n   strict_mono_on f {0..<n}}\n  \\<subseteq> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n               \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n  finite\n   {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n    \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n\ngoal (1 subgoal):\n 1. finite F_strict", "unfolding F_strict_def"], ["proof (prove)\nusing this:\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n   strict_mono_on f {0..<n}}\n  \\<subseteq> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n               \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n  finite\n   {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n    \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n\ngoal (1 subgoal):\n 1. finite\n     {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n      (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n      strict_mono_on f {0..<n}}", "using rev_finite_subset"], ["proof (prove)\nusing this:\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n   strict_mono_on f {0..<n}}\n  \\<subseteq> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n               \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n  finite\n   {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n    \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n  \\<lbrakk>finite ?B; ?A \\<subseteq> ?B\\<rbrakk> \\<Longrightarrow> finite ?A\n\ngoal (1 subgoal):\n 1. finite\n     {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n      (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n      strict_mono_on f {0..<n}}", "by blast"], ["proof (state)\nthis:\n  finite F_strict\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nth_strict_mono:\n  fixes f::\"nat \\<Rightarrow> nat\"\n  assumes  strictf: \"strict_mono f\" and i: \"i<n\"\nshows \"f i = (sorted_list_of_set (f`{0..<n})) ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f i = sorted_list_of_set (f ` {0..<n}) ! i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f i = sorted_list_of_set (f ` {0..<n}) ! i", "let ?I = \"f`{0..<n}\""], ["proof (state)\ngoal (1 subgoal):\n 1. f i = sorted_list_of_set (f ` {0..<n}) ! i", "have \"length (sorted_list_of_set (f ` {0..<n})) = card ?I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length (sorted_list_of_set (f ` {0..<n})) = card (f ` {0..<n})", "by (metis distinct_card finite_atLeastLessThan finite_imageI\n        sorted_list_of_set(1) sorted_list_of_set(3))"], ["proof (state)\nthis:\n  length (sorted_list_of_set (f ` {0..<n})) = card (f ` {0..<n})\n\ngoal (1 subgoal):\n 1. f i = sorted_list_of_set (f ` {0..<n}) ! i", "also"], ["proof (state)\nthis:\n  length (sorted_list_of_set (f ` {0..<n})) = card (f ` {0..<n})\n\ngoal (1 subgoal):\n 1. f i = sorted_list_of_set (f ` {0..<n}) ! i", "have \"... = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (f ` {0..<n}) = n", "by (simp add: card_image strict_mono_imp_inj_on strictf)"], ["proof (state)\nthis:\n  card (f ` {0..<n}) = n\n\ngoal (1 subgoal):\n 1. f i = sorted_list_of_set (f ` {0..<n}) ! i", "finally"], ["proof (chain)\npicking this:\n  length (sorted_list_of_set (f ` {0..<n})) = n", "have length_I: \"length (sorted_list_of_set ?I) = n\""], ["proof (prove)\nusing this:\n  length (sorted_list_of_set (f ` {0..<n})) = n\n\ngoal (1 subgoal):\n 1. length (sorted_list_of_set (f ` {0..<n})) = n", "."], ["proof (state)\nthis:\n  length (sorted_list_of_set (f ` {0..<n})) = n\n\ngoal (1 subgoal):\n 1. f i = sorted_list_of_set (f ` {0..<n}) ! i", "have card_eq: \"card {a \\<in> ?I. a < f i} = i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {a \\<in> f ` {0..<n}. a < f i} = i", "using i"], ["proof (prove)\nusing this:\n  i < n\n\ngoal (1 subgoal):\n 1. card {a \\<in> f ` {0..<n}. a < f i} = i", "proof (induct i)"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < n \\<Longrightarrow> card {a \\<in> f ` {0..<n}. a < f 0} = 0\n 2. \\<And>i.\n       \\<lbrakk>i < n \\<Longrightarrow>\n                card {a \\<in> f ` {0..<n}. a < f i} = i;\n        Suc i < n\\<rbrakk>\n       \\<Longrightarrow> card {a \\<in> f ` {0..<n}. a < f (Suc i)} = Suc i", "case 0"], ["proof (state)\nthis:\n  0 < n\n\ngoal (2 subgoals):\n 1. 0 < n \\<Longrightarrow> card {a \\<in> f ` {0..<n}. a < f 0} = 0\n 2. \\<And>i.\n       \\<lbrakk>i < n \\<Longrightarrow>\n                card {a \\<in> f ` {0..<n}. a < f i} = i;\n        Suc i < n\\<rbrakk>\n       \\<Longrightarrow> card {a \\<in> f ` {0..<n}. a < f (Suc i)} = Suc i", "then"], ["proof (chain)\npicking this:\n  0 < n", "show ?case"], ["proof (prove)\nusing this:\n  0 < n\n\ngoal (1 subgoal):\n 1. card {a \\<in> f ` {0..<n}. a < f 0} = 0", "by (auto simp add: strict_mono_less strictf)"], ["proof (state)\nthis:\n  card {a \\<in> f ` {0..<n}. a < f 0} = 0\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i < n \\<Longrightarrow>\n                card {a \\<in> f ` {0..<n}. a < f i} = i;\n        Suc i < n\\<rbrakk>\n       \\<Longrightarrow> card {a \\<in> f ` {0..<n}. a < f (Suc i)} = Suc i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i < n \\<Longrightarrow>\n                card {a \\<in> f ` {0..<n}. a < f i} = i;\n        Suc i < n\\<rbrakk>\n       \\<Longrightarrow> card {a \\<in> f ` {0..<n}. a < f (Suc i)} = Suc i", "case (Suc i)"], ["proof (state)\nthis:\n  i < n \\<Longrightarrow> card {a \\<in> f ` {0..<n}. a < f i} = i\n  Suc i < n\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i < n \\<Longrightarrow>\n                card {a \\<in> f ` {0..<n}. a < f i} = i;\n        Suc i < n\\<rbrakk>\n       \\<Longrightarrow> card {a \\<in> f ` {0..<n}. a < f (Suc i)} = Suc i", "have i: \"i < n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < n", "using Suc.prems"], ["proof (prove)\nusing this:\n  Suc i < n\n\ngoal (1 subgoal):\n 1. i < n", "by auto"], ["proof (state)\nthis:\n  i < n\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i < n \\<Longrightarrow>\n                card {a \\<in> f ` {0..<n}. a < f i} = i;\n        Suc i < n\\<rbrakk>\n       \\<Longrightarrow> card {a \\<in> f ` {0..<n}. a < f (Suc i)} = Suc i", "let ?J'=\"{a \\<in> f ` {0..<n}. a < f i}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i < n \\<Longrightarrow>\n                card {a \\<in> f ` {0..<n}. a < f i} = i;\n        Suc i < n\\<rbrakk>\n       \\<Longrightarrow> card {a \\<in> f ` {0..<n}. a < f (Suc i)} = Suc i", "let ?J = \"{a \\<in> f ` {0..<n}. a < f (Suc i)}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i < n \\<Longrightarrow>\n                card {a \\<in> f ` {0..<n}. a < f i} = i;\n        Suc i < n\\<rbrakk>\n       \\<Longrightarrow> card {a \\<in> f ` {0..<n}. a < f (Suc i)} = Suc i", "have cardJ': \"card ?J' = i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {a \\<in> f ` {0..<n}. a < f i} = i", "by (rule Suc.hyps[OF i])"], ["proof (state)\nthis:\n  card {a \\<in> f ` {0..<n}. a < f i} = i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i < n \\<Longrightarrow>\n                card {a \\<in> f ` {0..<n}. a < f i} = i;\n        Suc i < n\\<rbrakk>\n       \\<Longrightarrow> card {a \\<in> f ` {0..<n}. a < f (Suc i)} = Suc i", "have J: \"?J = insert (f i) ?J'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {a \\<in> f ` {0..<n}. a < f (Suc i)} =\n    insert (f i) {a \\<in> f ` {0..<n}. a < f i}", "proof (auto)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>f xa \\<noteq> f i; f xa < f (Suc i); xa < n\\<rbrakk>\n       \\<Longrightarrow> f xa < f i\n 2. f i \\<in> f ` {0..<n}\n 3. f i < f (Suc i)\n 4. \\<And>xa.\n       \\<lbrakk>f xa < f i; xa < n\\<rbrakk>\n       \\<Longrightarrow> f xa < f (Suc i)", "fix xa"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>f xa \\<noteq> f i; f xa < f (Suc i); xa < n\\<rbrakk>\n       \\<Longrightarrow> f xa < f i\n 2. f i \\<in> f ` {0..<n}\n 3. f i < f (Suc i)\n 4. \\<And>xa.\n       \\<lbrakk>f xa < f i; xa < n\\<rbrakk>\n       \\<Longrightarrow> f xa < f (Suc i)", "assume 1: \"f xa \\<noteq> f i\" and 2: \"f xa < f (Suc i)\""], ["proof (state)\nthis:\n  f xa \\<noteq> f i\n  f xa < f (Suc i)\n\ngoal (4 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>f xa \\<noteq> f i; f xa < f (Suc i); xa < n\\<rbrakk>\n       \\<Longrightarrow> f xa < f i\n 2. f i \\<in> f ` {0..<n}\n 3. f i < f (Suc i)\n 4. \\<And>xa.\n       \\<lbrakk>f xa < f i; xa < n\\<rbrakk>\n       \\<Longrightarrow> f xa < f (Suc i)", "show \"f xa < f i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f xa < f i", "using 1 2 not_less_less_Suc_eq strict_mono_less strictf"], ["proof (prove)\nusing this:\n  f xa \\<noteq> f i\n  f xa < f (Suc i)\n  \\<not> ?n < ?m \\<Longrightarrow> (?n < Suc ?m) = (?n = ?m)\n  strict_mono ?f \\<Longrightarrow> (?f ?x < ?f ?y) = (?x < ?y)\n  strict_mono f\n\ngoal (1 subgoal):\n 1. f xa < f i", "by fastforce"], ["proof (state)\nthis:\n  f xa < f i\n\ngoal (3 subgoals):\n 1. f i \\<in> f ` {0..<n}\n 2. f i < f (Suc i)\n 3. \\<And>xa.\n       \\<lbrakk>f xa < f i; xa < n\\<rbrakk>\n       \\<Longrightarrow> f xa < f (Suc i)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. f i \\<in> f ` {0..<n}\n 2. f i < f (Suc i)\n 3. \\<And>xa.\n       \\<lbrakk>f xa < f i; xa < n\\<rbrakk>\n       \\<Longrightarrow> f xa < f (Suc i)", "fix xa"], ["proof (state)\ngoal (3 subgoals):\n 1. f i \\<in> f ` {0..<n}\n 2. f i < f (Suc i)\n 3. \\<And>xa.\n       \\<lbrakk>f xa < f i; xa < n\\<rbrakk>\n       \\<Longrightarrow> f xa < f (Suc i)", "assume \"f xa < f i\""], ["proof (state)\nthis:\n  f xa < f i\n\ngoal (3 subgoals):\n 1. f i \\<in> f ` {0..<n}\n 2. f i < f (Suc i)\n 3. \\<And>xa.\n       \\<lbrakk>f xa < f i; xa < n\\<rbrakk>\n       \\<Longrightarrow> f xa < f (Suc i)", "thus \"f xa < f (Suc i)\""], ["proof (prove)\nusing this:\n  f xa < f i\n\ngoal (1 subgoal):\n 1. f xa < f (Suc i)", "using less_SucI strict_mono_less strictf"], ["proof (prove)\nusing this:\n  f xa < f i\n  ?m < ?n \\<Longrightarrow> ?m < Suc ?n\n  strict_mono ?f \\<Longrightarrow> (?f ?x < ?f ?y) = (?x < ?y)\n  strict_mono f\n\ngoal (1 subgoal):\n 1. f xa < f (Suc i)", "by blast"], ["proof (state)\nthis:\n  f xa < f (Suc i)\n\ngoal (2 subgoals):\n 1. f i \\<in> f ` {0..<n}\n 2. f i < f (Suc i)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. f i \\<in> f ` {0..<n}\n 2. f i < f (Suc i)", "show \"f i \\<in> f ` {0..<n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f i \\<in> f ` {0..<n}", "using i"], ["proof (prove)\nusing this:\n  i < n\n\ngoal (1 subgoal):\n 1. f i \\<in> f ` {0..<n}", "by auto"], ["proof (state)\nthis:\n  f i \\<in> f ` {0..<n}\n\ngoal (1 subgoal):\n 1. f i < f (Suc i)", "show \"f i < f (Suc i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f i < f (Suc i)", "using strictf strict_mono_less"], ["proof (prove)\nusing this:\n  strict_mono f\n  strict_mono ?f \\<Longrightarrow> (?f ?x < ?f ?y) = (?x < ?y)\n\ngoal (1 subgoal):\n 1. f i < f (Suc i)", "by auto"], ["proof (state)\nthis:\n  f i < f (Suc i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {a \\<in> f ` {0..<n}. a < f (Suc i)} =\n  insert (f i) {a \\<in> f ` {0..<n}. a < f i}\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i < n \\<Longrightarrow>\n                card {a \\<in> f ` {0..<n}. a < f i} = i;\n        Suc i < n\\<rbrakk>\n       \\<Longrightarrow> card {a \\<in> f ` {0..<n}. a < f (Suc i)} = Suc i", "have \"card ?J = Suc (card ?J')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {a \\<in> f ` {0..<n}. a < f (Suc i)} =\n    Suc (card {a \\<in> f ` {0..<n}. a < f i})", "by (unfold J, rule card_insert_disjoint, auto)"], ["proof (state)\nthis:\n  card {a \\<in> f ` {0..<n}. a < f (Suc i)} =\n  Suc (card {a \\<in> f ` {0..<n}. a < f i})\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i < n \\<Longrightarrow>\n                card {a \\<in> f ` {0..<n}. a < f i} = i;\n        Suc i < n\\<rbrakk>\n       \\<Longrightarrow> card {a \\<in> f ` {0..<n}. a < f (Suc i)} = Suc i", "then"], ["proof (chain)\npicking this:\n  card {a \\<in> f ` {0..<n}. a < f (Suc i)} =\n  Suc (card {a \\<in> f ` {0..<n}. a < f i})", "show ?case"], ["proof (prove)\nusing this:\n  card {a \\<in> f ` {0..<n}. a < f (Suc i)} =\n  Suc (card {a \\<in> f ` {0..<n}. a < f i})\n\ngoal (1 subgoal):\n 1. card {a \\<in> f ` {0..<n}. a < f (Suc i)} = Suc i", "using cardJ'"], ["proof (prove)\nusing this:\n  card {a \\<in> f ` {0..<n}. a < f (Suc i)} =\n  Suc (card {a \\<in> f ` {0..<n}. a < f i})\n  card {a \\<in> f ` {0..<n}. a < f i} = i\n\ngoal (1 subgoal):\n 1. card {a \\<in> f ` {0..<n}. a < f (Suc i)} = Suc i", "by auto"], ["proof (state)\nthis:\n  card {a \\<in> f ` {0..<n}. a < f (Suc i)} = Suc i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card {a \\<in> f ` {0..<n}. a < f i} = i\n\ngoal (1 subgoal):\n 1. f i = sorted_list_of_set (f ` {0..<n}) ! i", "have \"sorted_list_of_set ?I ! i = pick ?I i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_list_of_set (f ` {0..<n}) ! i = pick (f ` {0..<n}) i", "by (rule sorted_list_of_set_eq_pick, simp add: \\<open>card (f ` {0..<n}) = n\\<close> i)"], ["proof (state)\nthis:\n  sorted_list_of_set (f ` {0..<n}) ! i = pick (f ` {0..<n}) i\n\ngoal (1 subgoal):\n 1. f i = sorted_list_of_set (f ` {0..<n}) ! i", "also"], ["proof (state)\nthis:\n  sorted_list_of_set (f ` {0..<n}) ! i = pick (f ` {0..<n}) i\n\ngoal (1 subgoal):\n 1. f i = sorted_list_of_set (f ` {0..<n}) ! i", "have \"... =  pick ?I (card {a \\<in> ?I. a < f i})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pick (f ` {0..<n}) i =\n    pick (f ` {0..<n}) (card {a \\<in> f ` {0..<n}. a < f i})", "unfolding card_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. pick (f ` {0..<n}) i = pick (f ` {0..<n}) i", "by simp"], ["proof (state)\nthis:\n  pick (f ` {0..<n}) i =\n  pick (f ` {0..<n}) (card {a \\<in> f ` {0..<n}. a < f i})\n\ngoal (1 subgoal):\n 1. f i = sorted_list_of_set (f ` {0..<n}) ! i", "also"], ["proof (state)\nthis:\n  pick (f ` {0..<n}) i =\n  pick (f ` {0..<n}) (card {a \\<in> f ` {0..<n}. a < f i})\n\ngoal (1 subgoal):\n 1. f i = sorted_list_of_set (f ` {0..<n}) ! i", "have \"... = f i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pick (f ` {0..<n}) (card {a \\<in> f ` {0..<n}. a < f i}) = f i", "by (rule pick_card_in_set, simp add: i)"], ["proof (state)\nthis:\n  pick (f ` {0..<n}) (card {a \\<in> f ` {0..<n}. a < f i}) = f i\n\ngoal (1 subgoal):\n 1. f i = sorted_list_of_set (f ` {0..<n}) ! i", "finally"], ["proof (chain)\npicking this:\n  sorted_list_of_set (f ` {0..<n}) ! i = f i", "show ?thesis"], ["proof (prove)\nusing this:\n  sorted_list_of_set (f ` {0..<n}) ! i = f i\n\ngoal (1 subgoal):\n 1. f i = sorted_list_of_set (f ` {0..<n}) ! i", ".."], ["proof (state)\nthis:\n  f i = sorted_list_of_set (f ` {0..<n}) ! i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma nth_strict_mono_on:\n  fixes f::\"nat \\<Rightarrow> nat\"\n  assumes  strictf: \"strict_mono_on f {0..<n}\" and i: \"i<n\"\nshows \"f i = (sorted_list_of_set (f`{0..<n})) ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f i = sorted_list_of_set (f ` {0..<n}) ! i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f i = sorted_list_of_set (f ` {0..<n}) ! i", "let ?I = \"f`{0..<n}\""], ["proof (state)\ngoal (1 subgoal):\n 1. f i = sorted_list_of_set (f ` {0..<n}) ! i", "have \"length (sorted_list_of_set (f ` {0..<n})) = card ?I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length (sorted_list_of_set (f ` {0..<n})) = card (f ` {0..<n})", "by (metis distinct_card finite_atLeastLessThan finite_imageI\n        sorted_list_of_set(1) sorted_list_of_set(3))"], ["proof (state)\nthis:\n  length (sorted_list_of_set (f ` {0..<n})) = card (f ` {0..<n})\n\ngoal (1 subgoal):\n 1. f i = sorted_list_of_set (f ` {0..<n}) ! i", "also"], ["proof (state)\nthis:\n  length (sorted_list_of_set (f ` {0..<n})) = card (f ` {0..<n})\n\ngoal (1 subgoal):\n 1. f i = sorted_list_of_set (f ` {0..<n}) ! i", "have \"... = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (f ` {0..<n}) = n", "by (metis (mono_tags, lifting) card_atLeastLessThan card_image diff_zero\n        inj_on_def strict_mono_on_eqD strictf)"], ["proof (state)\nthis:\n  card (f ` {0..<n}) = n\n\ngoal (1 subgoal):\n 1. f i = sorted_list_of_set (f ` {0..<n}) ! i", "finally"], ["proof (chain)\npicking this:\n  length (sorted_list_of_set (f ` {0..<n})) = n", "have length_I: \"length (sorted_list_of_set ?I) = n\""], ["proof (prove)\nusing this:\n  length (sorted_list_of_set (f ` {0..<n})) = n\n\ngoal (1 subgoal):\n 1. length (sorted_list_of_set (f ` {0..<n})) = n", "."], ["proof (state)\nthis:\n  length (sorted_list_of_set (f ` {0..<n})) = n\n\ngoal (1 subgoal):\n 1. f i = sorted_list_of_set (f ` {0..<n}) ! i", "have card_eq: \"card {a \\<in> ?I. a < f i} = i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {a \\<in> f ` {0..<n}. a < f i} = i", "using i"], ["proof (prove)\nusing this:\n  i < n\n\ngoal (1 subgoal):\n 1. card {a \\<in> f ` {0..<n}. a < f i} = i", "proof (induct i)"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < n \\<Longrightarrow> card {a \\<in> f ` {0..<n}. a < f 0} = 0\n 2. \\<And>i.\n       \\<lbrakk>i < n \\<Longrightarrow>\n                card {a \\<in> f ` {0..<n}. a < f i} = i;\n        Suc i < n\\<rbrakk>\n       \\<Longrightarrow> card {a \\<in> f ` {0..<n}. a < f (Suc i)} = Suc i", "case 0"], ["proof (state)\nthis:\n  0 < n\n\ngoal (2 subgoals):\n 1. 0 < n \\<Longrightarrow> card {a \\<in> f ` {0..<n}. a < f 0} = 0\n 2. \\<And>i.\n       \\<lbrakk>i < n \\<Longrightarrow>\n                card {a \\<in> f ` {0..<n}. a < f i} = i;\n        Suc i < n\\<rbrakk>\n       \\<Longrightarrow> card {a \\<in> f ` {0..<n}. a < f (Suc i)} = Suc i", "then"], ["proof (chain)\npicking this:\n  0 < n", "show ?case"], ["proof (prove)\nusing this:\n  0 < n\n\ngoal (1 subgoal):\n 1. card {a \\<in> f ` {0..<n}. a < f 0} = 0", "by (auto, metis (no_types, lifting) atLeast0LessThan lessThan_iff less_Suc_eq\n          not_less0 not_less_eq strict_mono_on_def strictf)"], ["proof (state)\nthis:\n  card {a \\<in> f ` {0..<n}. a < f 0} = 0\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i < n \\<Longrightarrow>\n                card {a \\<in> f ` {0..<n}. a < f i} = i;\n        Suc i < n\\<rbrakk>\n       \\<Longrightarrow> card {a \\<in> f ` {0..<n}. a < f (Suc i)} = Suc i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i < n \\<Longrightarrow>\n                card {a \\<in> f ` {0..<n}. a < f i} = i;\n        Suc i < n\\<rbrakk>\n       \\<Longrightarrow> card {a \\<in> f ` {0..<n}. a < f (Suc i)} = Suc i", "case (Suc i)"], ["proof (state)\nthis:\n  i < n \\<Longrightarrow> card {a \\<in> f ` {0..<n}. a < f i} = i\n  Suc i < n\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i < n \\<Longrightarrow>\n                card {a \\<in> f ` {0..<n}. a < f i} = i;\n        Suc i < n\\<rbrakk>\n       \\<Longrightarrow> card {a \\<in> f ` {0..<n}. a < f (Suc i)} = Suc i", "have i: \"i < n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < n", "using Suc.prems"], ["proof (prove)\nusing this:\n  Suc i < n\n\ngoal (1 subgoal):\n 1. i < n", "by auto"], ["proof (state)\nthis:\n  i < n\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i < n \\<Longrightarrow>\n                card {a \\<in> f ` {0..<n}. a < f i} = i;\n        Suc i < n\\<rbrakk>\n       \\<Longrightarrow> card {a \\<in> f ` {0..<n}. a < f (Suc i)} = Suc i", "let ?J'=\"{a \\<in> f ` {0..<n}. a < f i}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i < n \\<Longrightarrow>\n                card {a \\<in> f ` {0..<n}. a < f i} = i;\n        Suc i < n\\<rbrakk>\n       \\<Longrightarrow> card {a \\<in> f ` {0..<n}. a < f (Suc i)} = Suc i", "let ?J = \"{a \\<in> f ` {0..<n}. a < f (Suc i)}\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i < n \\<Longrightarrow>\n                card {a \\<in> f ` {0..<n}. a < f i} = i;\n        Suc i < n\\<rbrakk>\n       \\<Longrightarrow> card {a \\<in> f ` {0..<n}. a < f (Suc i)} = Suc i", "have cardJ': \"card ?J' = i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {a \\<in> f ` {0..<n}. a < f i} = i", "by (rule Suc.hyps[OF i])"], ["proof (state)\nthis:\n  card {a \\<in> f ` {0..<n}. a < f i} = i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i < n \\<Longrightarrow>\n                card {a \\<in> f ` {0..<n}. a < f i} = i;\n        Suc i < n\\<rbrakk>\n       \\<Longrightarrow> card {a \\<in> f ` {0..<n}. a < f (Suc i)} = Suc i", "have J: \"?J = insert (f i) ?J'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {a \\<in> f ` {0..<n}. a < f (Suc i)} =\n    insert (f i) {a \\<in> f ` {0..<n}. a < f i}", "proof (auto)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>f xa \\<noteq> f i; f xa < f (Suc i); xa < n\\<rbrakk>\n       \\<Longrightarrow> f xa < f i\n 2. f i \\<in> f ` {0..<n}\n 3. f i < f (Suc i)\n 4. \\<And>xa.\n       \\<lbrakk>f xa < f i; xa < n\\<rbrakk>\n       \\<Longrightarrow> f xa < f (Suc i)", "fix xa"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>f xa \\<noteq> f i; f xa < f (Suc i); xa < n\\<rbrakk>\n       \\<Longrightarrow> f xa < f i\n 2. f i \\<in> f ` {0..<n}\n 3. f i < f (Suc i)\n 4. \\<And>xa.\n       \\<lbrakk>f xa < f i; xa < n\\<rbrakk>\n       \\<Longrightarrow> f xa < f (Suc i)", "assume 1: \"f xa \\<noteq> f i\" and 2: \"f xa < f (Suc i)\" and 3: \"xa < n\""], ["proof (state)\nthis:\n  f xa \\<noteq> f i\n  f xa < f (Suc i)\n  xa < n\n\ngoal (4 subgoals):\n 1. \\<And>xa.\n       \\<lbrakk>f xa \\<noteq> f i; f xa < f (Suc i); xa < n\\<rbrakk>\n       \\<Longrightarrow> f xa < f i\n 2. f i \\<in> f ` {0..<n}\n 3. f i < f (Suc i)\n 4. \\<And>xa.\n       \\<lbrakk>f xa < f i; xa < n\\<rbrakk>\n       \\<Longrightarrow> f xa < f (Suc i)", "show \"f xa < f i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f xa < f i", "by (metis (full_types) 1 2 3 antisym_conv3 atLeast0LessThan i lessThan_iff\n            less_SucE order.asym strict_mono_onD strictf)"], ["proof (state)\nthis:\n  f xa < f i\n\ngoal (3 subgoals):\n 1. f i \\<in> f ` {0..<n}\n 2. f i < f (Suc i)\n 3. \\<And>xa.\n       \\<lbrakk>f xa < f i; xa < n\\<rbrakk>\n       \\<Longrightarrow> f xa < f (Suc i)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. f i \\<in> f ` {0..<n}\n 2. f i < f (Suc i)\n 3. \\<And>xa.\n       \\<lbrakk>f xa < f i; xa < n\\<rbrakk>\n       \\<Longrightarrow> f xa < f (Suc i)", "fix xa"], ["proof (state)\ngoal (3 subgoals):\n 1. f i \\<in> f ` {0..<n}\n 2. f i < f (Suc i)\n 3. \\<And>xa.\n       \\<lbrakk>f xa < f i; xa < n\\<rbrakk>\n       \\<Longrightarrow> f xa < f (Suc i)", "assume \"f xa < f i\" and \"xa < n\""], ["proof (state)\nthis:\n  f xa < f i\n  xa < n\n\ngoal (3 subgoals):\n 1. f i \\<in> f ` {0..<n}\n 2. f i < f (Suc i)\n 3. \\<And>xa.\n       \\<lbrakk>f xa < f i; xa < n\\<rbrakk>\n       \\<Longrightarrow> f xa < f (Suc i)", "thus \"f xa < f (Suc i)\""], ["proof (prove)\nusing this:\n  f xa < f i\n  xa < n\n\ngoal (1 subgoal):\n 1. f xa < f (Suc i)", "using less_SucI strictf"], ["proof (prove)\nusing this:\n  f xa < f i\n  xa < n\n  ?m < ?n \\<Longrightarrow> ?m < Suc ?n\n  strict_mono_on f {0..<n}\n\ngoal (1 subgoal):\n 1. f xa < f (Suc i)", "by (metis (no_types, lifting) Suc.prems atLeast0LessThan\n            lessI lessThan_iff less_trans strict_mono_onD)"], ["proof (state)\nthis:\n  f xa < f (Suc i)\n\ngoal (2 subgoals):\n 1. f i \\<in> f ` {0..<n}\n 2. f i < f (Suc i)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. f i \\<in> f ` {0..<n}\n 2. f i < f (Suc i)", "show \"f i \\<in> f ` {0..<n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f i \\<in> f ` {0..<n}", "using i"], ["proof (prove)\nusing this:\n  i < n\n\ngoal (1 subgoal):\n 1. f i \\<in> f ` {0..<n}", "by auto"], ["proof (state)\nthis:\n  f i \\<in> f ` {0..<n}\n\ngoal (1 subgoal):\n 1. f i < f (Suc i)", "show \"f i < f (Suc i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f i < f (Suc i)", "using Suc.prems strict_mono_onD strictf"], ["proof (prove)\nusing this:\n  Suc i < n\n  \\<lbrakk>strict_mono_on ?f ?A; ?r \\<in> ?A; ?s \\<in> ?A; ?r < ?s\\<rbrakk>\n  \\<Longrightarrow> ?f ?r < ?f ?s\n  strict_mono_on f {0..<n}\n\ngoal (1 subgoal):\n 1. f i < f (Suc i)", "by fastforce"], ["proof (state)\nthis:\n  f i < f (Suc i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {a \\<in> f ` {0..<n}. a < f (Suc i)} =\n  insert (f i) {a \\<in> f ` {0..<n}. a < f i}\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i < n \\<Longrightarrow>\n                card {a \\<in> f ` {0..<n}. a < f i} = i;\n        Suc i < n\\<rbrakk>\n       \\<Longrightarrow> card {a \\<in> f ` {0..<n}. a < f (Suc i)} = Suc i", "have \"card ?J = Suc (card ?J')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card {a \\<in> f ` {0..<n}. a < f (Suc i)} =\n    Suc (card {a \\<in> f ` {0..<n}. a < f i})", "by (unfold J, rule card_insert_disjoint, auto)"], ["proof (state)\nthis:\n  card {a \\<in> f ` {0..<n}. a < f (Suc i)} =\n  Suc (card {a \\<in> f ` {0..<n}. a < f i})\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i < n \\<Longrightarrow>\n                card {a \\<in> f ` {0..<n}. a < f i} = i;\n        Suc i < n\\<rbrakk>\n       \\<Longrightarrow> card {a \\<in> f ` {0..<n}. a < f (Suc i)} = Suc i", "then"], ["proof (chain)\npicking this:\n  card {a \\<in> f ` {0..<n}. a < f (Suc i)} =\n  Suc (card {a \\<in> f ` {0..<n}. a < f i})", "show ?case"], ["proof (prove)\nusing this:\n  card {a \\<in> f ` {0..<n}. a < f (Suc i)} =\n  Suc (card {a \\<in> f ` {0..<n}. a < f i})\n\ngoal (1 subgoal):\n 1. card {a \\<in> f ` {0..<n}. a < f (Suc i)} = Suc i", "using cardJ'"], ["proof (prove)\nusing this:\n  card {a \\<in> f ` {0..<n}. a < f (Suc i)} =\n  Suc (card {a \\<in> f ` {0..<n}. a < f i})\n  card {a \\<in> f ` {0..<n}. a < f i} = i\n\ngoal (1 subgoal):\n 1. card {a \\<in> f ` {0..<n}. a < f (Suc i)} = Suc i", "by auto"], ["proof (state)\nthis:\n  card {a \\<in> f ` {0..<n}. a < f (Suc i)} = Suc i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  card {a \\<in> f ` {0..<n}. a < f i} = i\n\ngoal (1 subgoal):\n 1. f i = sorted_list_of_set (f ` {0..<n}) ! i", "have \"sorted_list_of_set ?I ! i = pick ?I i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_list_of_set (f ` {0..<n}) ! i = pick (f ` {0..<n}) i", "by (rule sorted_list_of_set_eq_pick, simp add: \\<open>card (f ` {0..<n}) = n\\<close> i)"], ["proof (state)\nthis:\n  sorted_list_of_set (f ` {0..<n}) ! i = pick (f ` {0..<n}) i\n\ngoal (1 subgoal):\n 1. f i = sorted_list_of_set (f ` {0..<n}) ! i", "also"], ["proof (state)\nthis:\n  sorted_list_of_set (f ` {0..<n}) ! i = pick (f ` {0..<n}) i\n\ngoal (1 subgoal):\n 1. f i = sorted_list_of_set (f ` {0..<n}) ! i", "have \"... =  pick ?I (card {a \\<in> ?I. a < f i})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pick (f ` {0..<n}) i =\n    pick (f ` {0..<n}) (card {a \\<in> f ` {0..<n}. a < f i})", "unfolding card_eq"], ["proof (prove)\ngoal (1 subgoal):\n 1. pick (f ` {0..<n}) i = pick (f ` {0..<n}) i", "by simp"], ["proof (state)\nthis:\n  pick (f ` {0..<n}) i =\n  pick (f ` {0..<n}) (card {a \\<in> f ` {0..<n}. a < f i})\n\ngoal (1 subgoal):\n 1. f i = sorted_list_of_set (f ` {0..<n}) ! i", "also"], ["proof (state)\nthis:\n  pick (f ` {0..<n}) i =\n  pick (f ` {0..<n}) (card {a \\<in> f ` {0..<n}. a < f i})\n\ngoal (1 subgoal):\n 1. f i = sorted_list_of_set (f ` {0..<n}) ! i", "have \"... = f i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pick (f ` {0..<n}) (card {a \\<in> f ` {0..<n}. a < f i}) = f i", "by (rule pick_card_in_set, simp add: i)"], ["proof (state)\nthis:\n  pick (f ` {0..<n}) (card {a \\<in> f ` {0..<n}. a < f i}) = f i\n\ngoal (1 subgoal):\n 1. f i = sorted_list_of_set (f ` {0..<n}) ! i", "finally"], ["proof (chain)\npicking this:\n  sorted_list_of_set (f ` {0..<n}) ! i = f i", "show ?thesis"], ["proof (prove)\nusing this:\n  sorted_list_of_set (f ` {0..<n}) ! i = f i\n\ngoal (1 subgoal):\n 1. f i = sorted_list_of_set (f ` {0..<n}) ! i", ".."], ["proof (state)\nthis:\n  f i = sorted_list_of_set (f ` {0..<n}) ! i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma strict_fun_eq:\n  assumes f: \"f \\<in> F_strict\" and g: \"g \\<in> F_strict\" and fg: \"f`{0..<n} = g`{0..<n}\"\n  shows \"f = g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f = g", "proof (unfold fun_eq_iff, auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. f x = g x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x. f x = g x", "show \"f x = g x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f x = g x", "proof (cases \"x<n\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x < n \\<Longrightarrow> f x = g x\n 2. \\<not> x < n \\<Longrightarrow> f x = g x", "case True"], ["proof (state)\nthis:\n  x < n\n\ngoal (2 subgoals):\n 1. x < n \\<Longrightarrow> f x = g x\n 2. \\<not> x < n \\<Longrightarrow> f x = g x", "have strictf: \"strict_mono_on f {0..<n}\" and strictg: \"strict_mono_on g {0..<n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strict_mono_on f {0..<n} &&& strict_mono_on g {0..<n}", "using f g"], ["proof (prove)\nusing this:\n  f \\<in> F_strict\n  g \\<in> F_strict\n\ngoal (1 subgoal):\n 1. strict_mono_on f {0..<n} &&& strict_mono_on g {0..<n}", "unfolding F_strict_def"], ["proof (prove)\nusing this:\n  f \\<in> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n           (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n           strict_mono_on f {0..<n}}\n  g \\<in> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n           (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n           strict_mono_on f {0..<n}}\n\ngoal (1 subgoal):\n 1. strict_mono_on f {0..<n} &&& strict_mono_on g {0..<n}", "by auto"], ["proof (state)\nthis:\n  strict_mono_on f {0..<n}\n  strict_mono_on g {0..<n}\n\ngoal (2 subgoals):\n 1. x < n \\<Longrightarrow> f x = g x\n 2. \\<not> x < n \\<Longrightarrow> f x = g x", "have \"f x = (sorted_list_of_set (f`{0..<n})) ! x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f x = sorted_list_of_set (f ` {0..<n}) ! x", "by (rule nth_strict_mono_on[OF strictf True])"], ["proof (state)\nthis:\n  f x = sorted_list_of_set (f ` {0..<n}) ! x\n\ngoal (2 subgoals):\n 1. x < n \\<Longrightarrow> f x = g x\n 2. \\<not> x < n \\<Longrightarrow> f x = g x", "also"], ["proof (state)\nthis:\n  f x = sorted_list_of_set (f ` {0..<n}) ! x\n\ngoal (2 subgoals):\n 1. x < n \\<Longrightarrow> f x = g x\n 2. \\<not> x < n \\<Longrightarrow> f x = g x", "have \"... = (sorted_list_of_set (g`{0..<n})) ! x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_list_of_set (f ` {0..<n}) ! x =\n    sorted_list_of_set (g ` {0..<n}) ! x", "unfolding fg"], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_list_of_set (g ` {0..<n}) ! x =\n    sorted_list_of_set (g ` {0..<n}) ! x", "by simp"], ["proof (state)\nthis:\n  sorted_list_of_set (f ` {0..<n}) ! x =\n  sorted_list_of_set (g ` {0..<n}) ! x\n\ngoal (2 subgoals):\n 1. x < n \\<Longrightarrow> f x = g x\n 2. \\<not> x < n \\<Longrightarrow> f x = g x", "also"], ["proof (state)\nthis:\n  sorted_list_of_set (f ` {0..<n}) ! x =\n  sorted_list_of_set (g ` {0..<n}) ! x\n\ngoal (2 subgoals):\n 1. x < n \\<Longrightarrow> f x = g x\n 2. \\<not> x < n \\<Longrightarrow> f x = g x", "have \"... = g x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_list_of_set (g ` {0..<n}) ! x = g x", "by (rule nth_strict_mono_on[symmetric, OF strictg True])"], ["proof (state)\nthis:\n  sorted_list_of_set (g ` {0..<n}) ! x = g x\n\ngoal (2 subgoals):\n 1. x < n \\<Longrightarrow> f x = g x\n 2. \\<not> x < n \\<Longrightarrow> f x = g x", "finally"], ["proof (chain)\npicking this:\n  f x = g x", "show ?thesis"], ["proof (prove)\nusing this:\n  f x = g x\n\ngoal (1 subgoal):\n 1. f x = g x", "."], ["proof (state)\nthis:\n  f x = g x\n\ngoal (1 subgoal):\n 1. \\<not> x < n \\<Longrightarrow> f x = g x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> x < n \\<Longrightarrow> f x = g x", "case False"], ["proof (state)\nthis:\n  \\<not> x < n\n\ngoal (1 subgoal):\n 1. \\<not> x < n \\<Longrightarrow> f x = g x", "then"], ["proof (chain)\npicking this:\n  \\<not> x < n", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> x < n\n\ngoal (1 subgoal):\n 1. f x = g x", "using f g"], ["proof (prove)\nusing this:\n  \\<not> x < n\n  f \\<in> F_strict\n  g \\<in> F_strict\n\ngoal (1 subgoal):\n 1. f x = g x", "unfolding F_strict_def"], ["proof (prove)\nusing this:\n  \\<not> x < n\n  f \\<in> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n           (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n           strict_mono_on f {0..<n}}\n  g \\<in> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n           (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n           strict_mono_on f {0..<n}}\n\ngoal (1 subgoal):\n 1. f x = g x", "by auto"], ["proof (state)\nthis:\n  f x = g x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f x = g x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma strict_from_inj_preserves_F:\n  assumes f: \"f \\<in> F_inj\"\n  shows \"strict_from_inj n f \\<in> F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strict_from_inj n f \\<in> F", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. strict_from_inj n f \\<in> F", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. strict_from_inj n f \\<in> F", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. strict_from_inj n f \\<in> F", "assume x: \"x < n\""], ["proof (state)\nthis:\n  x < n\n\ngoal (1 subgoal):\n 1. strict_from_inj n f \\<in> F", "have inj_on: \"inj_on f {0..<n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on f {0..<n}", "using f"], ["proof (prove)\nusing this:\n  f \\<in> F_inj\n\ngoal (1 subgoal):\n 1. inj_on f {0..<n}", "unfolding F_inj_def"], ["proof (prove)\nusing this:\n  f \\<in> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n           (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n           inj_on f {0..<n}}\n\ngoal (1 subgoal):\n 1. inj_on f {0..<n}", "by auto"], ["proof (state)\nthis:\n  inj_on f {0..<n}\n\ngoal (1 subgoal):\n 1. strict_from_inj n f \\<in> F", "have \"{a. a < m \\<and> a \\<in> f ` {0..<n}} = f`{0..<n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {a. a < m \\<and> a \\<in> f ` {0..<n}} = f ` {0..<n}", "using f"], ["proof (prove)\nusing this:\n  f \\<in> F_inj\n\ngoal (1 subgoal):\n 1. {a. a < m \\<and> a \\<in> f ` {0..<n}} = f ` {0..<n}", "unfolding F_inj_def"], ["proof (prove)\nusing this:\n  f \\<in> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n           (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n           inj_on f {0..<n}}\n\ngoal (1 subgoal):\n 1. {a. a < m \\<and> a \\<in> f ` {0..<n}} = f ` {0..<n}", "by auto"], ["proof (state)\nthis:\n  {a. a < m \\<and> a \\<in> f ` {0..<n}} = f ` {0..<n}\n\ngoal (1 subgoal):\n 1. strict_from_inj n f \\<in> F", "hence card_eq: \"card {a. a < m \\<and> a \\<in> f ` {0..<n}} = n\""], ["proof (prove)\nusing this:\n  {a. a < m \\<and> a \\<in> f ` {0..<n}} = f ` {0..<n}\n\ngoal (1 subgoal):\n 1. card {a. a < m \\<and> a \\<in> f ` {0..<n}} = n", "by (simp add: card_image inj_on)"], ["proof (state)\nthis:\n  card {a. a < m \\<and> a \\<in> f ` {0..<n}} = n\n\ngoal (1 subgoal):\n 1. strict_from_inj n f \\<in> F", "let ?I = \"f`{0..<n}\""], ["proof (state)\ngoal (1 subgoal):\n 1. strict_from_inj n f \\<in> F", "have \"length (sorted_list_of_set (f ` {0..<n})) = card ?I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length (sorted_list_of_set (f ` {0..<n})) = card (f ` {0..<n})", "by (metis distinct_card finite_atLeastLessThan finite_imageI\n          sorted_list_of_set(1) sorted_list_of_set(3))"], ["proof (state)\nthis:\n  length (sorted_list_of_set (f ` {0..<n})) = card (f ` {0..<n})\n\ngoal (1 subgoal):\n 1. strict_from_inj n f \\<in> F", "also"], ["proof (state)\nthis:\n  length (sorted_list_of_set (f ` {0..<n})) = card (f ` {0..<n})\n\ngoal (1 subgoal):\n 1. strict_from_inj n f \\<in> F", "have \"... = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (f ` {0..<n}) = n", "by (simp add: card_image strict_mono_imp_inj_on inj_on)"], ["proof (state)\nthis:\n  card (f ` {0..<n}) = n\n\ngoal (1 subgoal):\n 1. strict_from_inj n f \\<in> F", "finally"], ["proof (chain)\npicking this:\n  length (sorted_list_of_set (f ` {0..<n})) = n", "have length_I: \"length (sorted_list_of_set ?I) = n\""], ["proof (prove)\nusing this:\n  length (sorted_list_of_set (f ` {0..<n})) = n\n\ngoal (1 subgoal):\n 1. length (sorted_list_of_set (f ` {0..<n})) = n", "."], ["proof (state)\nthis:\n  length (sorted_list_of_set (f ` {0..<n})) = n\n\ngoal (1 subgoal):\n 1. strict_from_inj n f \\<in> F", "have \"sorted_list_of_set (f ` {0..<n}) ! x = pick (f ` {0..<n}) x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_list_of_set (f ` {0..<n}) ! x = pick (f ` {0..<n}) x", "by (rule sorted_list_of_set_eq_pick, unfold length_I, auto simp add: x)"], ["proof (state)\nthis:\n  sorted_list_of_set (f ` {0..<n}) ! x = pick (f ` {0..<n}) x\n\ngoal (1 subgoal):\n 1. strict_from_inj n f \\<in> F", "also"], ["proof (state)\nthis:\n  sorted_list_of_set (f ` {0..<n}) ! x = pick (f ` {0..<n}) x\n\ngoal (1 subgoal):\n 1. strict_from_inj n f \\<in> F", "have \"... < m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pick (f ` {0..<n}) x < m", "by (rule pick_le, unfold card_eq, rule x)"], ["proof (state)\nthis:\n  pick (f ` {0..<n}) x < m\n\ngoal (1 subgoal):\n 1. strict_from_inj n f \\<in> F", "finally"], ["proof (chain)\npicking this:\n  sorted_list_of_set (f ` {0..<n}) ! x < m", "have \"sorted_list_of_set (f ` {0..<n}) ! x < m\""], ["proof (prove)\nusing this:\n  sorted_list_of_set (f ` {0..<n}) ! x < m\n\ngoal (1 subgoal):\n 1. sorted_list_of_set (f ` {0..<n}) ! x < m", "."], ["proof (state)\nthis:\n  sorted_list_of_set (f ` {0..<n}) ! x < m\n\ngoal (1 subgoal):\n 1. strict_from_inj n f \\<in> F", "}"], ["proof (state)\nthis:\n  ?x2 < n \\<Longrightarrow> sorted_list_of_set (f ` {0..<n}) ! ?x2 < m\n\ngoal (1 subgoal):\n 1. strict_from_inj n f \\<in> F", "thus ?thesis"], ["proof (prove)\nusing this:\n  ?x2 < n \\<Longrightarrow> sorted_list_of_set (f ` {0..<n}) ! ?x2 < m\n\ngoal (1 subgoal):\n 1. strict_from_inj n f \\<in> F", "unfolding strict_from_inj_def F_def"], ["proof (prove)\nusing this:\n  ?x2 < n \\<Longrightarrow> sorted_list_of_set (f ` {0..<n}) ! ?x2 < m\n\ngoal (1 subgoal):\n 1. (\\<lambda>i.\n        if i \\<in> {0..<n} then sorted_list_of_set (f ` {0..<n}) ! i else i)\n    \\<in> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n           \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}", "by auto"], ["proof (state)\nthis:\n  strict_from_inj n f \\<in> F\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma strict_from_inj_F_strict: \"strict_from_inj n xa \\<in> F_strict\"\n  if xa: \"xa \\<in> F_inj\" for xa"], ["proof (prove)\ngoal (1 subgoal):\n 1. strict_from_inj n xa \\<in> F_strict", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. strict_from_inj n xa \\<in> F_strict", "have \"strict_mono_on (strict_from_inj n xa) {0..<n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strict_mono_on (strict_from_inj n xa) {0..<n}", "by (rule strict_strict_from_inj, insert xa, simp add: F_inj_def)"], ["proof (state)\nthis:\n  strict_mono_on (strict_from_inj n xa) {0..<n}\n\ngoal (1 subgoal):\n 1. strict_from_inj n xa \\<in> F_strict", "thus ?thesis"], ["proof (prove)\nusing this:\n  strict_mono_on (strict_from_inj n xa) {0..<n}\n\ngoal (1 subgoal):\n 1. strict_from_inj n xa \\<in> F_strict", "using strict_from_inj_preserves_F[OF xa]"], ["proof (prove)\nusing this:\n  strict_mono_on (strict_from_inj n xa) {0..<n}\n  strict_from_inj n xa \\<in> F\n\ngoal (1 subgoal):\n 1. strict_from_inj n xa \\<in> F_strict", "unfolding F_def F_strict_def"], ["proof (prove)\nusing this:\n  strict_mono_on (strict_from_inj n xa) {0..<n}\n  strict_from_inj n xa\n  \\<in> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n         \\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i}\n\ngoal (1 subgoal):\n 1. strict_from_inj n xa\n    \\<in> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n           (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n           strict_mono_on f {0..<n}}", "by auto"], ["proof (state)\nthis:\n  strict_from_inj n xa \\<in> F_strict\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma strict_from_inj_image:\n  assumes f: \"f\\<in> F_inj\"\n  shows \"strict_from_inj n f ` {0..<n} = f`{0..<n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strict_from_inj n f ` {0..<n} = f ` {0..<n}", "proof (auto)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa < n \\<Longrightarrow> strict_from_inj n f xa \\<in> f ` {0..<n}\n 2. \\<And>xa.\n       xa < n \\<Longrightarrow> f xa \\<in> strict_from_inj n f ` {0..<n}", "let ?I = \"f ` {0..<n}\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa < n \\<Longrightarrow> strict_from_inj n f xa \\<in> f ` {0..<n}\n 2. \\<And>xa.\n       xa < n \\<Longrightarrow> f xa \\<in> strict_from_inj n f ` {0..<n}", "fix xa"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa < n \\<Longrightarrow> strict_from_inj n f xa \\<in> f ` {0..<n}\n 2. \\<And>xa.\n       xa < n \\<Longrightarrow> f xa \\<in> strict_from_inj n f ` {0..<n}", "assume xa: \"xa < n\""], ["proof (state)\nthis:\n  xa < n\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa < n \\<Longrightarrow> strict_from_inj n f xa \\<in> f ` {0..<n}\n 2. \\<And>xa.\n       xa < n \\<Longrightarrow> f xa \\<in> strict_from_inj n f ` {0..<n}", "have inj_on: \"inj_on f {0..<n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on f {0..<n}", "using f"], ["proof (prove)\nusing this:\n  f \\<in> F_inj\n\ngoal (1 subgoal):\n 1. inj_on f {0..<n}", "unfolding F_inj_def"], ["proof (prove)\nusing this:\n  f \\<in> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n           (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n           inj_on f {0..<n}}\n\ngoal (1 subgoal):\n 1. inj_on f {0..<n}", "by auto"], ["proof (state)\nthis:\n  inj_on f {0..<n}\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa < n \\<Longrightarrow> strict_from_inj n f xa \\<in> f ` {0..<n}\n 2. \\<And>xa.\n       xa < n \\<Longrightarrow> f xa \\<in> strict_from_inj n f ` {0..<n}", "have \"{a. a < m \\<and> a \\<in> f ` {0..<n}} = f`{0..<n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {a. a < m \\<and> a \\<in> f ` {0..<n}} = f ` {0..<n}", "using f"], ["proof (prove)\nusing this:\n  f \\<in> F_inj\n\ngoal (1 subgoal):\n 1. {a. a < m \\<and> a \\<in> f ` {0..<n}} = f ` {0..<n}", "unfolding F_inj_def"], ["proof (prove)\nusing this:\n  f \\<in> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n           (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n           inj_on f {0..<n}}\n\ngoal (1 subgoal):\n 1. {a. a < m \\<and> a \\<in> f ` {0..<n}} = f ` {0..<n}", "by auto"], ["proof (state)\nthis:\n  {a. a < m \\<and> a \\<in> f ` {0..<n}} = f ` {0..<n}\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa < n \\<Longrightarrow> strict_from_inj n f xa \\<in> f ` {0..<n}\n 2. \\<And>xa.\n       xa < n \\<Longrightarrow> f xa \\<in> strict_from_inj n f ` {0..<n}", "hence card_eq: \"card {a. a < m \\<and> a \\<in> f ` {0..<n}} = n\""], ["proof (prove)\nusing this:\n  {a. a < m \\<and> a \\<in> f ` {0..<n}} = f ` {0..<n}\n\ngoal (1 subgoal):\n 1. card {a. a < m \\<and> a \\<in> f ` {0..<n}} = n", "by (simp add: card_image inj_on)"], ["proof (state)\nthis:\n  card {a. a < m \\<and> a \\<in> f ` {0..<n}} = n\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa < n \\<Longrightarrow> strict_from_inj n f xa \\<in> f ` {0..<n}\n 2. \\<And>xa.\n       xa < n \\<Longrightarrow> f xa \\<in> strict_from_inj n f ` {0..<n}", "let ?I = \"f`{0..<n}\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa < n \\<Longrightarrow> strict_from_inj n f xa \\<in> f ` {0..<n}\n 2. \\<And>xa.\n       xa < n \\<Longrightarrow> f xa \\<in> strict_from_inj n f ` {0..<n}", "have \"length (sorted_list_of_set (f ` {0..<n})) = card ?I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length (sorted_list_of_set (f ` {0..<n})) = card (f ` {0..<n})", "by (metis distinct_card finite_atLeastLessThan finite_imageI\n          sorted_list_of_set(1) sorted_list_of_set(3))"], ["proof (state)\nthis:\n  length (sorted_list_of_set (f ` {0..<n})) = card (f ` {0..<n})\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa < n \\<Longrightarrow> strict_from_inj n f xa \\<in> f ` {0..<n}\n 2. \\<And>xa.\n       xa < n \\<Longrightarrow> f xa \\<in> strict_from_inj n f ` {0..<n}", "also"], ["proof (state)\nthis:\n  length (sorted_list_of_set (f ` {0..<n})) = card (f ` {0..<n})\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa < n \\<Longrightarrow> strict_from_inj n f xa \\<in> f ` {0..<n}\n 2. \\<And>xa.\n       xa < n \\<Longrightarrow> f xa \\<in> strict_from_inj n f ` {0..<n}", "have \"... = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. card (f ` {0..<n}) = n", "by (simp add: card_image strict_mono_imp_inj_on inj_on)"], ["proof (state)\nthis:\n  card (f ` {0..<n}) = n\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa < n \\<Longrightarrow> strict_from_inj n f xa \\<in> f ` {0..<n}\n 2. \\<And>xa.\n       xa < n \\<Longrightarrow> f xa \\<in> strict_from_inj n f ` {0..<n}", "finally"], ["proof (chain)\npicking this:\n  length (sorted_list_of_set (f ` {0..<n})) = n", "have length_I: \"length (sorted_list_of_set ?I) = n\""], ["proof (prove)\nusing this:\n  length (sorted_list_of_set (f ` {0..<n})) = n\n\ngoal (1 subgoal):\n 1. length (sorted_list_of_set (f ` {0..<n})) = n", "."], ["proof (state)\nthis:\n  length (sorted_list_of_set (f ` {0..<n})) = n\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa < n \\<Longrightarrow> strict_from_inj n f xa \\<in> f ` {0..<n}\n 2. \\<And>xa.\n       xa < n \\<Longrightarrow> f xa \\<in> strict_from_inj n f ` {0..<n}", "have \"strict_from_inj n f xa = sorted_list_of_set ?I ! xa\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strict_from_inj n f xa = sorted_list_of_set (f ` {0..<n}) ! xa", "using xa"], ["proof (prove)\nusing this:\n  xa < n\n\ngoal (1 subgoal):\n 1. strict_from_inj n f xa = sorted_list_of_set (f ` {0..<n}) ! xa", "unfolding strict_from_inj_def"], ["proof (prove)\nusing this:\n  xa < n\n\ngoal (1 subgoal):\n 1. (if xa \\<in> {0..<n} then sorted_list_of_set (f ` {0..<n}) ! xa\n     else xa) =\n    sorted_list_of_set (f ` {0..<n}) ! xa", "by auto"], ["proof (state)\nthis:\n  strict_from_inj n f xa = sorted_list_of_set (f ` {0..<n}) ! xa\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa < n \\<Longrightarrow> strict_from_inj n f xa \\<in> f ` {0..<n}\n 2. \\<And>xa.\n       xa < n \\<Longrightarrow> f xa \\<in> strict_from_inj n f ` {0..<n}", "also"], ["proof (state)\nthis:\n  strict_from_inj n f xa = sorted_list_of_set (f ` {0..<n}) ! xa\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa < n \\<Longrightarrow> strict_from_inj n f xa \\<in> f ` {0..<n}\n 2. \\<And>xa.\n       xa < n \\<Longrightarrow> f xa \\<in> strict_from_inj n f ` {0..<n}", "have \"... = pick ?I xa\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_list_of_set (f ` {0..<n}) ! xa = pick (f ` {0..<n}) xa", "by (rule sorted_list_of_set_eq_pick, unfold length_I, auto simp add: xa)"], ["proof (state)\nthis:\n  sorted_list_of_set (f ` {0..<n}) ! xa = pick (f ` {0..<n}) xa\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa < n \\<Longrightarrow> strict_from_inj n f xa \\<in> f ` {0..<n}\n 2. \\<And>xa.\n       xa < n \\<Longrightarrow> f xa \\<in> strict_from_inj n f ` {0..<n}", "also"], ["proof (state)\nthis:\n  sorted_list_of_set (f ` {0..<n}) ! xa = pick (f ` {0..<n}) xa\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa < n \\<Longrightarrow> strict_from_inj n f xa \\<in> f ` {0..<n}\n 2. \\<And>xa.\n       xa < n \\<Longrightarrow> f xa \\<in> strict_from_inj n f ` {0..<n}", "have \"... \\<in> f ` {0..<n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pick (f ` {0..<n}) xa \\<in> f ` {0..<n}", "by (rule pick_in_set_le, simp add: \\<open>card (f ` {0..<n}) = n\\<close> xa)"], ["proof (state)\nthis:\n  pick (f ` {0..<n}) xa \\<in> f ` {0..<n}\n\ngoal (2 subgoals):\n 1. \\<And>xa.\n       xa < n \\<Longrightarrow> strict_from_inj n f xa \\<in> f ` {0..<n}\n 2. \\<And>xa.\n       xa < n \\<Longrightarrow> f xa \\<in> strict_from_inj n f ` {0..<n}", "finally"], ["proof (chain)\npicking this:\n  strict_from_inj n f xa \\<in> f ` {0..<n}", "show \"strict_from_inj n f xa \\<in> f ` {0..<n}\""], ["proof (prove)\nusing this:\n  strict_from_inj n f xa \\<in> f ` {0..<n}\n\ngoal (1 subgoal):\n 1. strict_from_inj n f xa \\<in> f ` {0..<n}", "."], ["proof (state)\nthis:\n  strict_from_inj n f xa \\<in> f ` {0..<n}\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa < n \\<Longrightarrow> f xa \\<in> strict_from_inj n f ` {0..<n}", "obtain i where \"sorted_list_of_set (f`{0..<n}) ! i = f xa\" and \"i<n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i.\n        \\<lbrakk>sorted_list_of_set (f ` {0..<n}) ! i = f xa; i < n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis atLeast0LessThan finite_atLeastLessThan finite_imageI imageI\n        in_set_conv_nth length_I lessThan_iff sorted_list_of_set(1) xa)"], ["proof (state)\nthis:\n  sorted_list_of_set (f ` {0..<n}) ! i = f xa\n  i < n\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       xa < n \\<Longrightarrow> f xa \\<in> strict_from_inj n f ` {0..<n}", "thus \"f xa \\<in> strict_from_inj n f ` {0..<n}\""], ["proof (prove)\nusing this:\n  sorted_list_of_set (f ` {0..<n}) ! i = f xa\n  i < n\n\ngoal (1 subgoal):\n 1. f xa \\<in> strict_from_inj n f ` {0..<n}", "by (metis atLeast0LessThan imageI lessThan_iff strict_from_inj_def)"], ["proof (state)\nthis:\n  f xa \\<in> strict_from_inj n f ` {0..<n}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Z_good_alt:\n  assumes g: \"g \\<in> F_strict\"\n  shows \"Z_good g = {x \\<in> F_inj. strict_from_inj n x = g} \\<times> {\\<pi>. \\<pi> permutes {0..<n}}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Z_good g =\n    {x \\<in> F_inj. strict_from_inj n x = g} \\<times>\n    {\\<pi>. \\<pi> permutes {0..<n}}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Z_good g =\n    {x \\<in> F_inj. strict_from_inj n x = g} \\<times>\n    {\\<pi>. \\<pi> permutes {0..<n}}", "define Z_good_fun where \"Z_good_fun = {f. f \\<in> {0..<n} \\<rightarrow> {0..<m} \\<and> (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)\n  \\<and> inj_on f {0..<n} \\<and> (f`{0..<n} = g`{0..<n})}\""], ["proof (state)\nthis:\n  Z_good_fun =\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n   inj_on f {0..<n} \\<and> f ` {0..<n} = g ` {0..<n}}\n\ngoal (1 subgoal):\n 1. Z_good g =\n    {x \\<in> F_inj. strict_from_inj n x = g} \\<times>\n    {\\<pi>. \\<pi> permutes {0..<n}}", "have \"Z_good_fun = {x \\<in> F_inj. strict_from_inj n x = g}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Z_good_fun = {x \\<in> F_inj. strict_from_inj n x = g}", "proof (auto)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x. x \\<in> Z_good_fun \\<Longrightarrow> x \\<in> F_inj\n 2. \\<And>x. x \\<in> Z_good_fun \\<Longrightarrow> strict_from_inj n x = g\n 3. \\<And>x.\n       \\<lbrakk>x \\<in> F_inj; g = strict_from_inj n x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Z_good_fun", "fix f"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>x. x \\<in> Z_good_fun \\<Longrightarrow> x \\<in> F_inj\n 2. \\<And>x. x \\<in> Z_good_fun \\<Longrightarrow> strict_from_inj n x = g\n 3. \\<And>x.\n       \\<lbrakk>x \\<in> F_inj; g = strict_from_inj n x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Z_good_fun", "assume f: \"f \\<in> Z_good_fun\""], ["proof (state)\nthis:\n  f \\<in> Z_good_fun\n\ngoal (3 subgoals):\n 1. \\<And>x. x \\<in> Z_good_fun \\<Longrightarrow> x \\<in> F_inj\n 2. \\<And>x. x \\<in> Z_good_fun \\<Longrightarrow> strict_from_inj n x = g\n 3. \\<And>x.\n       \\<lbrakk>x \\<in> F_inj; g = strict_from_inj n x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Z_good_fun", "thus f_inj: \"f \\<in> F_inj\""], ["proof (prove)\nusing this:\n  f \\<in> Z_good_fun\n\ngoal (1 subgoal):\n 1. f \\<in> F_inj", "unfolding F_inj_def Z_good_fun_def"], ["proof (prove)\nusing this:\n  f \\<in> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n           (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n           inj_on f {0..<n} \\<and> f ` {0..<n} = g ` {0..<n}}\n\ngoal (1 subgoal):\n 1. f \\<in> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n             (\\<forall>i.\n                 i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n             inj_on f {0..<n}}", "by auto"], ["proof (state)\nthis:\n  f \\<in> F_inj\n\ngoal (2 subgoals):\n 1. \\<And>x. x \\<in> Z_good_fun \\<Longrightarrow> strict_from_inj n x = g\n 2. \\<And>x.\n       \\<lbrakk>x \\<in> F_inj; g = strict_from_inj n x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Z_good_fun", "show \"strict_from_inj n f = g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strict_from_inj n f = g", "proof (rule strict_fun_eq[OF _ g])"], ["proof (state)\ngoal (2 subgoals):\n 1. strict_from_inj n f \\<in> F_strict\n 2. strict_from_inj n f ` {0..<n} = g ` {0..<n}", "show \"strict_from_inj n f ` {0..<n} = g ` {0..<n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strict_from_inj n f ` {0..<n} = g ` {0..<n}", "using f_inj f strict_from_inj_image"], ["proof (prove)\nusing this:\n  f \\<in> F_inj\n  f \\<in> Z_good_fun\n  ?f \\<in> F_inj \\<Longrightarrow>\n  strict_from_inj n ?f ` {0..<n} = ?f ` {0..<n}\n\ngoal (1 subgoal):\n 1. strict_from_inj n f ` {0..<n} = g ` {0..<n}", "unfolding Z_good_fun_def F_inj_def"], ["proof (prove)\nusing this:\n  f \\<in> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n           (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n           inj_on f {0..<n}}\n  f \\<in> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n           (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n           inj_on f {0..<n} \\<and> f ` {0..<n} = g ` {0..<n}}\n  ?f \\<in> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n            (\\<forall>i.\n                i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n            inj_on f {0..<n}} \\<Longrightarrow>\n  strict_from_inj n ?f ` {0..<n} = ?f ` {0..<n}\n\ngoal (1 subgoal):\n 1. strict_from_inj n f ` {0..<n} = g ` {0..<n}", "by auto"], ["proof (state)\nthis:\n  strict_from_inj n f ` {0..<n} = g ` {0..<n}\n\ngoal (1 subgoal):\n 1. strict_from_inj n f \\<in> F_strict", "show \"strict_from_inj n f \\<in> F_strict\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strict_from_inj n f \\<in> F_strict", "using F_strict_def f_inj strict_from_inj_F_strict"], ["proof (prove)\nusing this:\n  F_strict =\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n   strict_mono_on f {0..<n}}\n  f \\<in> F_inj\n  ?xa \\<in> F_inj \\<Longrightarrow> strict_from_inj n ?xa \\<in> F_strict\n\ngoal (1 subgoal):\n 1. strict_from_inj n f \\<in> F_strict", "by blast"], ["proof (state)\nthis:\n  strict_from_inj n f \\<in> F_strict\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  strict_from_inj n f = g\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> F_inj; g = strict_from_inj n x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Z_good_fun", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> F_inj; g = strict_from_inj n x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Z_good_fun", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> F_inj; g = strict_from_inj n x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Z_good_fun", "assume f_inj: \"f \\<in> F_inj\" and g_strict_f: \"g = strict_from_inj n f\""], ["proof (state)\nthis:\n  f \\<in> F_inj\n  g = strict_from_inj n f\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> F_inj; g = strict_from_inj n x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Z_good_fun", "have \"f xa \\<in> g ` {0..<n}\" if \"xa < n\" for xa"], ["proof (prove)\ngoal (1 subgoal):\n 1. f xa \\<in> g ` {0..<n}", "using f_inj g_strict_f strict_from_inj_image that"], ["proof (prove)\nusing this:\n  f \\<in> F_inj\n  g = strict_from_inj n f\n  ?f \\<in> F_inj \\<Longrightarrow>\n  strict_from_inj n ?f ` {0..<n} = ?f ` {0..<n}\n  xa < n\n\ngoal (1 subgoal):\n 1. f xa \\<in> g ` {0..<n}", "by auto"], ["proof (state)\nthis:\n  ?xa < n \\<Longrightarrow> f ?xa \\<in> g ` {0..<n}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> F_inj; g = strict_from_inj n x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Z_good_fun", "moreover"], ["proof (state)\nthis:\n  ?xa < n \\<Longrightarrow> f ?xa \\<in> g ` {0..<n}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> F_inj; g = strict_from_inj n x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Z_good_fun", "have \"g xa \\<in> f ` {0..<n}\" if \"xa < n\" for xa"], ["proof (prove)\ngoal (1 subgoal):\n 1. g xa \\<in> f ` {0..<n}", "by (metis f_inj g_strict_f imageI lessThan_atLeast0 lessThan_iff strict_from_inj_image that)"], ["proof (state)\nthis:\n  ?xa < n \\<Longrightarrow> g ?xa \\<in> f ` {0..<n}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>x \\<in> F_inj; g = strict_from_inj n x\\<rbrakk>\n       \\<Longrightarrow> x \\<in> Z_good_fun", "ultimately"], ["proof (chain)\npicking this:\n  ?xa < n \\<Longrightarrow> f ?xa \\<in> g ` {0..<n}\n  ?xa < n \\<Longrightarrow> g ?xa \\<in> f ` {0..<n}", "show \"f \\<in> Z_good_fun\""], ["proof (prove)\nusing this:\n  ?xa < n \\<Longrightarrow> f ?xa \\<in> g ` {0..<n}\n  ?xa < n \\<Longrightarrow> g ?xa \\<in> f ` {0..<n}\n\ngoal (1 subgoal):\n 1. f \\<in> Z_good_fun", "using f_inj g_strict_f"], ["proof (prove)\nusing this:\n  ?xa < n \\<Longrightarrow> f ?xa \\<in> g ` {0..<n}\n  ?xa < n \\<Longrightarrow> g ?xa \\<in> f ` {0..<n}\n  f \\<in> F_inj\n  g = strict_from_inj n f\n\ngoal (1 subgoal):\n 1. f \\<in> Z_good_fun", "unfolding Z_good_fun_def F_inj_def"], ["proof (prove)\nusing this:\n  ?xa < n \\<Longrightarrow> f ?xa \\<in> g ` {0..<n}\n  ?xa < n \\<Longrightarrow> g ?xa \\<in> f ` {0..<n}\n  f \\<in> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n           (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n           inj_on f {0..<n}}\n  g = strict_from_inj n f\n\ngoal (1 subgoal):\n 1. f \\<in> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n             (\\<forall>i.\n                 i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n             inj_on f {0..<n} \\<and> f ` {0..<n} = g ` {0..<n}}", "by auto"], ["proof (state)\nthis:\n  f \\<in> Z_good_fun\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Z_good_fun = {x \\<in> F_inj. strict_from_inj n x = g}\n\ngoal (1 subgoal):\n 1. Z_good g =\n    {x \\<in> F_inj. strict_from_inj n x = g} \\<times>\n    {\\<pi>. \\<pi> permutes {0..<n}}", "thus ?thesis"], ["proof (prove)\nusing this:\n  Z_good_fun = {x \\<in> F_inj. strict_from_inj n x = g}\n\ngoal (1 subgoal):\n 1. Z_good g =\n    {x \\<in> F_inj. strict_from_inj n x = g} \\<times>\n    {\\<pi>. \\<pi> permutes {0..<n}}", "unfolding Z_good_fun_def Z_good_def"], ["proof (prove)\nusing this:\n  {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n   (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n   inj_on f {0..<n} \\<and> f ` {0..<n} = g ` {0..<n}} =\n  {x \\<in> F_inj. strict_from_inj n x = g}\n\ngoal (1 subgoal):\n 1. {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n     (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n     inj_on f {0..<n} \\<and> f ` {0..<n} = g ` {0..<n}} \\<times>\n    {\\<pi>. \\<pi> permutes {0..<n}} =\n    {x \\<in> F_inj. strict_from_inj n x = g} \\<times>\n    {\\<pi>. \\<pi> permutes {0..<n}}", "by simp"], ["proof (state)\nthis:\n  Z_good g =\n  {x \\<in> F_inj. strict_from_inj n x = g} \\<times>\n  {\\<pi>. \\<pi> permutes {0..<n}}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma weight_0: \"(\\<Sum>(f, \\<pi>) \\<in> Z_not_inj. weight f \\<pi>) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>(x, y)\\<in>Z_not_inj. weight x y) = (0::'a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>(x, y)\\<in>Z_not_inj. weight x y) = (0::'a)", "let ?F=\"{f. (\\<forall>i\\<in>{0..<n}. f i \\<in> {0..<m}) \\<and> (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i)}\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>(x, y)\\<in>Z_not_inj. weight x y) = (0::'a)", "let ?Perm = \"{\\<pi>. \\<pi> permutes {0..<n}}\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>(x, y)\\<in>Z_not_inj. weight x y) = (0::'a)", "have \"(\\<Sum>(f, \\<pi>)\\<in>Z_not_inj. weight f \\<pi>)\n    = (\\<Sum>f \\<in> F_not_inj. (\\<Prod>i = 0..<n. A $$ (i, f i)) * det (mat\\<^sub>r n n (\\<lambda>i. row B (f i))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>(x, y)\\<in>Z_not_inj. weight x y) =\n    (\\<Sum>f\\<in>F_not_inj.\n       (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>(x, y)\\<in>Z_not_inj. weight x y) =\n    (\\<Sum>f\\<in>F_not_inj.\n       (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))))", "have dim_row_rw: \"dim_row (mat\\<^sub>r n n (\\<lambda>i. col A (f i))) = n\" for f"], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row (mat\\<^sub>r n n (\\<lambda>i. col A (f i))) = n", "by auto"], ["proof (state)\nthis:\n  dim_row (mat\\<^sub>r n n (\\<lambda>i. col A (?f i))) = n\n\ngoal (1 subgoal):\n 1. (\\<Sum>(x, y)\\<in>Z_not_inj. weight x y) =\n    (\\<Sum>f\\<in>F_not_inj.\n       (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))))", "have dim_row_rw2: \"dim_row (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) = n\" for f"], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) = n", "by auto"], ["proof (state)\nthis:\n  dim_row (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (?f i))) = n\n\ngoal (1 subgoal):\n 1. (\\<Sum>(x, y)\\<in>Z_not_inj. weight x y) =\n    (\\<Sum>f\\<in>F_not_inj.\n       (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))))", "have prod_rw: \"(\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) =  (\\<Prod>i = 0..<n. row B (f i) $v \\<pi> i)\"\n      if f: \"f \\<in> F_not_inj\" and pi: \"\\<pi> \\<in> ?Perm\" for f \\<pi>"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)) =\n    (\\<Prod>i = 0..<n. Matrix.row B (f i) $v \\<pi> i)", "proof (rule prod.cong, rule refl)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {0..<n} \\<Longrightarrow>\n       B $$ (f x, \\<pi> x) = Matrix.row B (f x) $v \\<pi> x", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {0..<n} \\<Longrightarrow>\n       B $$ (f x, \\<pi> x) = Matrix.row B (f x) $v \\<pi> x", "assume x: \"x \\<in> {0..<n}\""], ["proof (state)\nthis:\n  x \\<in> {0..<n}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {0..<n} \\<Longrightarrow>\n       B $$ (f x, \\<pi> x) = Matrix.row B (f x) $v \\<pi> x", "have \"f x < dim_row B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f x < dim_row B", "using f B x"], ["proof (prove)\nusing this:\n  f \\<in> F_not_inj\n  B \\<in> carrier_mat m n\n  x \\<in> {0..<n}\n\ngoal (1 subgoal):\n 1. f x < dim_row B", "unfolding F_not_inj_def"], ["proof (prove)\nusing this:\n  f \\<in> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n           (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n           \\<not> inj_on f {0..<n}}\n  B \\<in> carrier_mat m n\n  x \\<in> {0..<n}\n\ngoal (1 subgoal):\n 1. f x < dim_row B", "by fastforce"], ["proof (state)\nthis:\n  f x < dim_row B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {0..<n} \\<Longrightarrow>\n       B $$ (f x, \\<pi> x) = Matrix.row B (f x) $v \\<pi> x", "moreover"], ["proof (state)\nthis:\n  f x < dim_row B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {0..<n} \\<Longrightarrow>\n       B $$ (f x, \\<pi> x) = Matrix.row B (f x) $v \\<pi> x", "have \"\\<pi> x < dim_col B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<pi> x < dim_col B", "using x pi B"], ["proof (prove)\nusing this:\n  x \\<in> {0..<n}\n  \\<pi> \\<in> {\\<pi>. \\<pi> permutes {0..<n}}\n  B \\<in> carrier_mat m n\n\ngoal (1 subgoal):\n 1. \\<pi> x < dim_col B", "by auto"], ["proof (state)\nthis:\n  \\<pi> x < dim_col B\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {0..<n} \\<Longrightarrow>\n       B $$ (f x, \\<pi> x) = Matrix.row B (f x) $v \\<pi> x", "ultimately"], ["proof (chain)\npicking this:\n  f x < dim_row B\n  \\<pi> x < dim_col B", "show \"B $$ (f x, \\<pi> x) = Matrix.row B (f x) $v \\<pi> x\""], ["proof (prove)\nusing this:\n  f x < dim_row B\n  \\<pi> x < dim_col B\n\ngoal (1 subgoal):\n 1. B $$ (f x, \\<pi> x) = Matrix.row B (f x) $v \\<pi> x", "by (rule index_row[symmetric])"], ["proof (state)\nthis:\n  B $$ (f x, \\<pi> x) = Matrix.row B (f x) $v \\<pi> x\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?f \\<in> F_not_inj;\n   ?\\<pi> \\<in> {\\<pi>. \\<pi> permutes {0..<n}}\\<rbrakk>\n  \\<Longrightarrow> (\\<Prod>i = 0..<n. B $$ (?f i, ?\\<pi> i)) =\n                    (\\<Prod>i = 0..<n. Matrix.row B (?f i) $v ?\\<pi> i)\n\ngoal (1 subgoal):\n 1. (\\<Sum>(x, y)\\<in>Z_not_inj. weight x y) =\n    (\\<Sum>f\\<in>F_not_inj.\n       (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))))", "have sum_rw: \"(\\<Sum>\\<pi> | \\<pi> permutes {0..<n}. signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)))\n      = det (mat\\<^sub>r n n (\\<lambda>i. row B (f i)))\" if f: \"f \\<in> F_not_inj\" for f"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i))) =\n    Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i)))", "unfolding Determinant.det_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i))) =\n    (if dim_row (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) =\n        dim_col (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i)))\n     then \\<Sum>p | p permutes\n                    {0..<dim_row\n                          (mat\\<^sub>r n n\n                            (\\<lambda>i. Matrix.row B (f i)))}.\n            signof p *\n            (\\<Prod>i = 0..<dim_row\n                             (mat\\<^sub>r n n\n                               (\\<lambda>i. Matrix.row B (f i))).\n                mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i)) $$\n                (i, p i))\n     else (0::'a))", "using dim_row_rw2 prod_rw f"], ["proof (prove)\nusing this:\n  dim_row (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (?f i))) = n\n  \\<lbrakk>?f \\<in> F_not_inj;\n   ?\\<pi> \\<in> {\\<pi>. \\<pi> permutes {0..<n}}\\<rbrakk>\n  \\<Longrightarrow> (\\<Prod>i = 0..<n. B $$ (?f i, ?\\<pi> i)) =\n                    (\\<Prod>i = 0..<n. Matrix.row B (?f i) $v ?\\<pi> i)\n  f \\<in> F_not_inj\n\ngoal (1 subgoal):\n 1. (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i))) =\n    (if dim_row (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) =\n        dim_col (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i)))\n     then \\<Sum>p | p permutes\n                    {0..<dim_row\n                          (mat\\<^sub>r n n\n                            (\\<lambda>i. Matrix.row B (f i)))}.\n            signof p *\n            (\\<Prod>i = 0..<dim_row\n                             (mat\\<^sub>r n n\n                               (\\<lambda>i. Matrix.row B (f i))).\n                mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i)) $$\n                (i, p i))\n     else (0::'a))", "by auto"], ["proof (state)\nthis:\n  ?f \\<in> F_not_inj \\<Longrightarrow>\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (?f i, \\<pi> i))) =\n  Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (?f i)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>(x, y)\\<in>Z_not_inj. weight x y) =\n    (\\<Sum>f\\<in>F_not_inj.\n       (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))))", "have \"(\\<Sum>(f, \\<pi>)\\<in>Z_not_inj. weight f \\<pi>) = (\\<Sum>f\\<in>F_not_inj.\\<Sum>\\<pi> \\<in> ?Perm. weight f \\<pi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>(x, y)\\<in>Z_not_inj. weight x y) =\n    (\\<Sum>f\\<in>F_not_inj.\n       \\<Sum>\\<pi> | \\<pi> permutes {0..<n}. weight f \\<pi>)", "unfolding Z_not_inj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>(x, y)\n           \\<in>{f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n                 (\\<forall>i.\n                     i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n                 \\<not> inj_on f {0..<n}} \\<times>\n                {\\<pi>. \\<pi> permutes {0..<n}}.\n       weight x y) =\n    (\\<Sum>f\\<in>F_not_inj.\n       \\<Sum>\\<pi> | \\<pi> permutes {0..<n}. weight f \\<pi>)", "unfolding sum.cartesian_product"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>(x, y)\n           \\<in>{f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n                 (\\<forall>i.\n                     i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n                 \\<not> inj_on f {0..<n}} \\<times>\n                {\\<pi>. \\<pi> permutes {0..<n}}.\n       weight x y) =\n    (\\<Sum>(x, y)\\<in>F_not_inj \\<times> {\\<pi>. \\<pi> permutes {0..<n}}.\n       weight x y)", "unfolding F_not_inj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>(x, y)\n           \\<in>{f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n                 (\\<forall>i.\n                     i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n                 \\<not> inj_on f {0..<n}} \\<times>\n                {\\<pi>. \\<pi> permutes {0..<n}}.\n       weight x y) =\n    (\\<Sum>(x, y)\n           \\<in>{f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n                 (\\<forall>i.\n                     i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n                 \\<not> inj_on f {0..<n}} \\<times>\n                {\\<pi>. \\<pi> permutes {0..<n}}.\n       weight x y)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>(x, y)\\<in>Z_not_inj. weight x y) =\n  (\\<Sum>f\\<in>F_not_inj.\n     \\<Sum>\\<pi> | \\<pi> permutes {0..<n}. weight f \\<pi>)\n\ngoal (1 subgoal):\n 1. (\\<Sum>(x, y)\\<in>Z_not_inj. weight x y) =\n    (\\<Sum>f\\<in>F_not_inj.\n       (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))))", "also"], ["proof (state)\nthis:\n  (\\<Sum>(x, y)\\<in>Z_not_inj. weight x y) =\n  (\\<Sum>f\\<in>F_not_inj.\n     \\<Sum>\\<pi> | \\<pi> permutes {0..<n}. weight f \\<pi>)\n\ngoal (1 subgoal):\n 1. (\\<Sum>(x, y)\\<in>Z_not_inj. weight x y) =\n    (\\<Sum>f\\<in>F_not_inj.\n       (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))))", "have \"... = (\\<Sum>f\\<in>F_not_inj. \\<Sum>\\<pi> | \\<pi> permutes {0..<n}. signof \\<pi>\n      * (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>f\\<in>F_not_inj.\n       \\<Sum>\\<pi> | \\<pi> permutes {0..<n}. weight f \\<pi>) =\n    (\\<Sum>f\\<in>F_not_inj.\n       \\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n         signof \\<pi> *\n         (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))", "unfolding weight_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>f\\<in>F_not_inj.\n       \\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n         signof \\<pi> *\n         (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i))) =\n    (\\<Sum>f\\<in>F_not_inj.\n       \\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n         signof \\<pi> *\n         (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>f\\<in>F_not_inj.\n     \\<Sum>\\<pi> | \\<pi> permutes {0..<n}. weight f \\<pi>) =\n  (\\<Sum>f\\<in>F_not_inj.\n     \\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>(x, y)\\<in>Z_not_inj. weight x y) =\n    (\\<Sum>f\\<in>F_not_inj.\n       (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))))", "also"], ["proof (state)\nthis:\n  (\\<Sum>f\\<in>F_not_inj.\n     \\<Sum>\\<pi> | \\<pi> permutes {0..<n}. weight f \\<pi>) =\n  (\\<Sum>f\\<in>F_not_inj.\n     \\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>(x, y)\\<in>Z_not_inj. weight x y) =\n    (\\<Sum>f\\<in>F_not_inj.\n       (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))))", "have \"... = (\\<Sum>f\\<in>F_not_inj. (\\<Prod>i = 0..<n. A $$ (i, f i))\n      * (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}. signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>f\\<in>F_not_inj.\n       \\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n         signof \\<pi> *\n         (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i))) =\n    (\\<Sum>f\\<in>F_not_inj.\n       (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n       (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n          signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i))))", "by (rule sum.cong, rule refl, auto)\n         (metis (no_types, lifting) mult.left_commute mult_hom.hom_sum sum.cong)"], ["proof (state)\nthis:\n  (\\<Sum>f\\<in>F_not_inj.\n     \\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i))) =\n  (\\<Sum>f\\<in>F_not_inj.\n     (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n     (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n        signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i))))\n\ngoal (1 subgoal):\n 1. (\\<Sum>(x, y)\\<in>Z_not_inj. weight x y) =\n    (\\<Sum>f\\<in>F_not_inj.\n       (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))))", "also"], ["proof (state)\nthis:\n  (\\<Sum>f\\<in>F_not_inj.\n     \\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i))) =\n  (\\<Sum>f\\<in>F_not_inj.\n     (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n     (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n        signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i))))\n\ngoal (1 subgoal):\n 1. (\\<Sum>(x, y)\\<in>Z_not_inj. weight x y) =\n    (\\<Sum>f\\<in>F_not_inj.\n       (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))))", "have \"... = (\\<Sum>f \\<in> F_not_inj. (\\<Prod>i = 0..<n. A $$ (i, f i))\n      * det (mat\\<^sub>r n n (\\<lambda>i. row B (f i))))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>f\\<in>F_not_inj.\n       (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n       (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n          signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)))) =\n    (\\<Sum>f\\<in>F_not_inj.\n       (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))))", "using sum_rw"], ["proof (prove)\nusing this:\n  ?f \\<in> F_not_inj \\<Longrightarrow>\n  (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n     signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (?f i, \\<pi> i))) =\n  Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (?f i)))\n\ngoal (1 subgoal):\n 1. (\\<Sum>f\\<in>F_not_inj.\n       (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n       (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n          signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)))) =\n    (\\<Sum>f\\<in>F_not_inj.\n       (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>f\\<in>F_not_inj.\n     (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n     (\\<Sum>\\<pi> | \\<pi> permutes {0..<n}.\n        signof \\<pi> * (\\<Prod>i = 0..<n. B $$ (f i, \\<pi> i)))) =\n  (\\<Sum>f\\<in>F_not_inj.\n     (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n     Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))))\n\ngoal (1 subgoal):\n 1. (\\<Sum>(x, y)\\<in>Z_not_inj. weight x y) =\n    (\\<Sum>f\\<in>F_not_inj.\n       (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))))", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>(x, y)\\<in>Z_not_inj. weight x y) =\n  (\\<Sum>f\\<in>F_not_inj.\n     (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n     Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>(x, y)\\<in>Z_not_inj. weight x y) =\n  (\\<Sum>f\\<in>F_not_inj.\n     (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n     Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))))\n\ngoal (1 subgoal):\n 1. (\\<Sum>(x, y)\\<in>Z_not_inj. weight x y) =\n    (\\<Sum>f\\<in>F_not_inj.\n       (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))))", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>(x, y)\\<in>Z_not_inj. weight x y) =\n  (\\<Sum>f\\<in>F_not_inj.\n     (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n     Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>(x, y)\\<in>Z_not_inj. weight x y) =\n  (\\<Sum>f\\<in>F_not_inj.\n     (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n     Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))))\n\ngoal (1 subgoal):\n 1. (\\<Sum>(x, y)\\<in>Z_not_inj. weight x y) = (0::'a)", "also"], ["proof (state)\nthis:\n  (\\<Sum>(x, y)\\<in>Z_not_inj. weight x y) =\n  (\\<Sum>f\\<in>F_not_inj.\n     (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n     Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))))\n\ngoal (1 subgoal):\n 1. (\\<Sum>(x, y)\\<in>Z_not_inj. weight x y) = (0::'a)", "have \"... = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>f\\<in>F_not_inj.\n       (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n       Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i)))) =\n    (0::'a)", "by (rule sum.neutral, insert det_not_inj_on[of _ n B], auto simp add: F_not_inj_def)"], ["proof (state)\nthis:\n  (\\<Sum>f\\<in>F_not_inj.\n     (\\<Prod>i = 0..<n. A $$ (i, f i)) *\n     Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i)))) =\n  (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>(x, y)\\<in>Z_not_inj. weight x y) = (0::'a)", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>(x, y)\\<in>Z_not_inj. weight x y) = (0::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>(x, y)\\<in>Z_not_inj. weight x y) = (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>(x, y)\\<in>Z_not_inj. weight x y) = (0::'a)", "."], ["proof (state)\nthis:\n  (\\<Sum>(x, y)\\<in>Z_not_inj. weight x y) = (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Final theorem\\<close>"], ["", "lemma Cauchy_Binet1:\n  shows \"det (A*B) =\n  sum (\\<lambda>f. det (submatrix A UNIV (f`{0..<n})) * det (submatrix B (f`{0..<n}) UNIV)) F_strict\"\n(is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>f\\<in>F_strict.\n       Determinant.det (submatrix A UNIV (f ` {0..<n})) *\n       Determinant.det (submatrix B (f ` {0..<n}) UNIV))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>f\\<in>F_strict.\n       Determinant.det (submatrix A UNIV (f ` {0..<n})) *\n       Determinant.det (submatrix B (f ` {0..<n}) UNIV))", "have sum0: \"(\\<Sum>(f, \\<pi>) \\<in> Z_not_inj. weight f \\<pi>) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>(x, y)\\<in>Z_not_inj. weight x y) = (0::'a)", "by (rule weight_0)"], ["proof (state)\nthis:\n  (\\<Sum>(x, y)\\<in>Z_not_inj. weight x y) = (0::'a)\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>f\\<in>F_strict.\n       Determinant.det (submatrix A UNIV (f ` {0..<n})) *\n       Determinant.det (submatrix B (f ` {0..<n}) UNIV))", "let ?f = \"strict_from_inj n\""], ["proof (state)\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>f\\<in>F_strict.\n       Determinant.det (submatrix A UNIV (f ` {0..<n})) *\n       Determinant.det (submatrix B (f ` {0..<n}) UNIV))", "have sum_rw: \"sum g F_inj = (\\<Sum>y \\<in> F_strict. sum g {x \\<in> F_inj. ?f x = y})\" for g"], ["proof (prove)\ngoal (1 subgoal):\n 1. sum g F_inj =\n    (\\<Sum>y\\<in>F_strict. sum g {x \\<in> F_inj. strict_from_inj n x = y})", "by (rule sum.group[symmetric], insert strict_from_inj_F_strict, auto)"], ["proof (state)\nthis:\n  sum ?g1 F_inj =\n  (\\<Sum>y\\<in>F_strict. sum ?g1 {x \\<in> F_inj. strict_from_inj n x = y})\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>f\\<in>F_strict.\n       Determinant.det (submatrix A UNIV (f ` {0..<n})) *\n       Determinant.det (submatrix B (f ` {0..<n}) UNIV))", "have Z_Union: \"Z_inj \\<union> Z_not_inj = Z n m\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Z_inj \\<union> Z_not_inj = Z n m", "unfolding Z_def Z_not_inj_def Z_inj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n     (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n     inj_on f {0..<n}} \\<times>\n    {\\<pi>. \\<pi> permutes {0..<n}} \\<union>\n    {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n     (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n     \\<not> inj_on f {0..<n}} \\<times>\n    {\\<pi>. \\<pi> permutes {0..<n}} =\n    {(f, \\<pi>) |f \\<pi>.\n     f \\<in> {0..<n} \\<rightarrow> {0..<m} \\<and>\n     (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n     \\<pi> permutes {0..<n}}", "by auto"], ["proof (state)\nthis:\n  Z_inj \\<union> Z_not_inj = Z n m\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>f\\<in>F_strict.\n       Determinant.det (submatrix A UNIV (f ` {0..<n})) *\n       Determinant.det (submatrix B (f ` {0..<n}) UNIV))", "have Z_Inter: \"Z_inj \\<inter> Z_not_inj = {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Z_inj \\<inter> Z_not_inj = {}", "unfolding Z_def Z_not_inj_def Z_inj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n     (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n     inj_on f {0..<n}} \\<times>\n    {\\<pi>. \\<pi> permutes {0..<n}} \\<inter>\n    {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n     (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n     \\<not> inj_on f {0..<n}} \\<times>\n    {\\<pi>. \\<pi> permutes {0..<n}} =\n    {}", "by auto"], ["proof (state)\nthis:\n  Z_inj \\<inter> Z_not_inj = {}\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>f\\<in>F_strict.\n       Determinant.det (submatrix A UNIV (f ` {0..<n})) *\n       Determinant.det (submatrix B (f ` {0..<n}) UNIV))", "have \"det (A*B) = (\\<Sum>(f, \\<pi>)\\<in>Z n m. weight f \\<pi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (A * B) = (\\<Sum>(x, y)\\<in>Z n m. weight x y)", "using detAB_Znm[OF A B]"], ["proof (prove)\nusing this:\n  Determinant.det (A * B) =\n  (\\<Sum>(f, \\<pi>)\\<in>Z n m.\n     signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) = (\\<Sum>(x, y)\\<in>Z n m. weight x y)", "unfolding weight_def"], ["proof (prove)\nusing this:\n  Determinant.det (A * B) =\n  (\\<Sum>(f, \\<pi>)\\<in>Z n m.\n     signof \\<pi> * (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>(f, \\<pi>)\\<in>Z n m.\n       signof \\<pi> *\n       (\\<Prod>i = 0..<n. A $$ (i, f i) * B $$ (f i, \\<pi> i)))", "by auto"], ["proof (state)\nthis:\n  Determinant.det (A * B) = (\\<Sum>(x, y)\\<in>Z n m. weight x y)\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>f\\<in>F_strict.\n       Determinant.det (submatrix A UNIV (f ` {0..<n})) *\n       Determinant.det (submatrix B (f ` {0..<n}) UNIV))", "also"], ["proof (state)\nthis:\n  Determinant.det (A * B) = (\\<Sum>(x, y)\\<in>Z n m. weight x y)\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>f\\<in>F_strict.\n       Determinant.det (submatrix A UNIV (f ` {0..<n})) *\n       Determinant.det (submatrix B (f ` {0..<n}) UNIV))", "have \"... = (\\<Sum>(f, \\<pi>)\\<in>Z_inj. weight f \\<pi>) + (\\<Sum>(f, \\<pi>)\\<in>Z_not_inj. weight f \\<pi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>(x, y)\\<in>Z n m. weight x y) =\n    (\\<Sum>(x, y)\\<in>Z_inj. weight x y) +\n    (\\<Sum>(x, y)\\<in>Z_not_inj. weight x y)", "by (metis Z_Inter Z_Union finite_Un finite_Znm sum.union_disjoint)"], ["proof (state)\nthis:\n  (\\<Sum>(x, y)\\<in>Z n m. weight x y) =\n  (\\<Sum>(x, y)\\<in>Z_inj. weight x y) +\n  (\\<Sum>(x, y)\\<in>Z_not_inj. weight x y)\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>f\\<in>F_strict.\n       Determinant.det (submatrix A UNIV (f ` {0..<n})) *\n       Determinant.det (submatrix B (f ` {0..<n}) UNIV))", "also"], ["proof (state)\nthis:\n  (\\<Sum>(x, y)\\<in>Z n m. weight x y) =\n  (\\<Sum>(x, y)\\<in>Z_inj. weight x y) +\n  (\\<Sum>(x, y)\\<in>Z_not_inj. weight x y)\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>f\\<in>F_strict.\n       Determinant.det (submatrix A UNIV (f ` {0..<n})) *\n       Determinant.det (submatrix B (f ` {0..<n}) UNIV))", "have \"... = (\\<Sum>(f, \\<pi>)\\<in>Z_inj. weight f \\<pi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>(x, y)\\<in>Z_inj. weight x y) +\n    (\\<Sum>(x, y)\\<in>Z_not_inj. weight x y) =\n    (\\<Sum>(x, y)\\<in>Z_inj. weight x y)", "using sum0"], ["proof (prove)\nusing this:\n  (\\<Sum>(x, y)\\<in>Z_not_inj. weight x y) = (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>(x, y)\\<in>Z_inj. weight x y) +\n    (\\<Sum>(x, y)\\<in>Z_not_inj. weight x y) =\n    (\\<Sum>(x, y)\\<in>Z_inj. weight x y)", "by force"], ["proof (state)\nthis:\n  (\\<Sum>(x, y)\\<in>Z_inj. weight x y) +\n  (\\<Sum>(x, y)\\<in>Z_not_inj. weight x y) =\n  (\\<Sum>(x, y)\\<in>Z_inj. weight x y)\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>f\\<in>F_strict.\n       Determinant.det (submatrix A UNIV (f ` {0..<n})) *\n       Determinant.det (submatrix B (f ` {0..<n}) UNIV))", "also"], ["proof (state)\nthis:\n  (\\<Sum>(x, y)\\<in>Z_inj. weight x y) +\n  (\\<Sum>(x, y)\\<in>Z_not_inj. weight x y) =\n  (\\<Sum>(x, y)\\<in>Z_inj. weight x y)\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>f\\<in>F_strict.\n       Determinant.det (submatrix A UNIV (f ` {0..<n})) *\n       Determinant.det (submatrix B (f ` {0..<n}) UNIV))", "have \"... = (\\<Sum>f \\<in> F_inj. \\<Sum>\\<pi>\\<in>{\\<pi>. \\<pi> permutes {0..<n}}. weight f \\<pi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>(x, y)\\<in>Z_inj. weight x y) =\n    (\\<Sum>f\\<in>F_inj.\n       \\<Sum>\\<pi> | \\<pi> permutes {0..<n}. weight f \\<pi>)", "unfolding Z_inj_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>(x, y)\n           \\<in>{f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n                 (\\<forall>i.\n                     i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n                 inj_on f {0..<n}} \\<times>\n                {\\<pi>. \\<pi> permutes {0..<n}}.\n       weight x y) =\n    (\\<Sum>f\\<in>F_inj.\n       \\<Sum>\\<pi> | \\<pi> permutes {0..<n}. weight f \\<pi>)", "unfolding F_inj_def sum.cartesian_product"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>(x, y)\n           \\<in>{f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n                 (\\<forall>i.\n                     i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n                 inj_on f {0..<n}} \\<times>\n                {\\<pi>. \\<pi> permutes {0..<n}}.\n       weight x y) =\n    (\\<Sum>(x, y)\n           \\<in>{f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n                 (\\<forall>i.\n                     i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n                 inj_on f {0..<n}} \\<times>\n                {\\<pi>. \\<pi> permutes {0..<n}}.\n       weight x y)", ".."], ["proof (state)\nthis:\n  (\\<Sum>(x, y)\\<in>Z_inj. weight x y) =\n  (\\<Sum>f\\<in>F_inj. \\<Sum>\\<pi> | \\<pi> permutes {0..<n}. weight f \\<pi>)\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>f\\<in>F_strict.\n       Determinant.det (submatrix A UNIV (f ` {0..<n})) *\n       Determinant.det (submatrix B (f ` {0..<n}) UNIV))", "also"], ["proof (state)\nthis:\n  (\\<Sum>(x, y)\\<in>Z_inj. weight x y) =\n  (\\<Sum>f\\<in>F_inj. \\<Sum>\\<pi> | \\<pi> permutes {0..<n}. weight f \\<pi>)\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>f\\<in>F_strict.\n       Determinant.det (submatrix A UNIV (f ` {0..<n})) *\n       Determinant.det (submatrix B (f ` {0..<n}) UNIV))", "have \"... =  (\\<Sum>y\\<in>F_strict. \\<Sum>f\\<in>{x \\<in> F_inj. strict_from_inj n x = y}.\n    sum (weight f) {\\<pi>. \\<pi> permutes {0..<n}})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>f\\<in>F_inj.\n       \\<Sum>\\<pi> | \\<pi> permutes {0..<n}. weight f \\<pi>) =\n    (\\<Sum>y\\<in>F_strict.\n       \\<Sum>f\\<in>{x \\<in> F_inj. strict_from_inj n x = y}.\n         sum (weight f) {\\<pi>. \\<pi> permutes {0..<n}})", "unfolding sum_rw"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>y\\<in>F_strict.\n       \\<Sum>f\\<in>{x \\<in> F_inj. strict_from_inj n x = y}.\n         sum (weight f) {\\<pi>. \\<pi> permutes {0..<n}}) =\n    (\\<Sum>y\\<in>F_strict.\n       \\<Sum>f\\<in>{x \\<in> F_inj. strict_from_inj n x = y}.\n         sum (weight f) {\\<pi>. \\<pi> permutes {0..<n}})", ".."], ["proof (state)\nthis:\n  (\\<Sum>f\\<in>F_inj.\n     \\<Sum>\\<pi> | \\<pi> permutes {0..<n}. weight f \\<pi>) =\n  (\\<Sum>y\\<in>F_strict.\n     \\<Sum>f\\<in>{x \\<in> F_inj. strict_from_inj n x = y}.\n       sum (weight f) {\\<pi>. \\<pi> permutes {0..<n}})\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>f\\<in>F_strict.\n       Determinant.det (submatrix A UNIV (f ` {0..<n})) *\n       Determinant.det (submatrix B (f ` {0..<n}) UNIV))", "also"], ["proof (state)\nthis:\n  (\\<Sum>f\\<in>F_inj.\n     \\<Sum>\\<pi> | \\<pi> permutes {0..<n}. weight f \\<pi>) =\n  (\\<Sum>y\\<in>F_strict.\n     \\<Sum>f\\<in>{x \\<in> F_inj. strict_from_inj n x = y}.\n       sum (weight f) {\\<pi>. \\<pi> permutes {0..<n}})\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>f\\<in>F_strict.\n       Determinant.det (submatrix A UNIV (f ` {0..<n})) *\n       Determinant.det (submatrix B (f ` {0..<n}) UNIV))", "have \"... =  (\\<Sum>y\\<in>F_strict. \\<Sum>(f,\\<pi>)\\<in>({x \\<in> F_inj. strict_from_inj n x = y}\n  \\<times> {\\<pi>. \\<pi> permutes {0..<n}}). weight f \\<pi>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>y\\<in>F_strict.\n       \\<Sum>f\\<in>{x \\<in> F_inj. strict_from_inj n x = y}.\n         sum (weight f) {\\<pi>. \\<pi> permutes {0..<n}}) =\n    (\\<Sum>y\\<in>F_strict.\n       \\<Sum>(x, y)\n             \\<in>{x \\<in> F_inj. strict_from_inj n x = y} \\<times>\n                  {\\<pi>. \\<pi> permutes {0..<n}}.\n         weight x y)", "unfolding F_inj_def sum.cartesian_product"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>y\\<in>F_strict.\n       \\<Sum>(x, y)\n             \\<in>{x \\<in> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n                            (\\<forall>i.\n                                i \\<notin> {0..<n} \\<longrightarrow>\n                                f i = i) \\<and>\n                            inj_on f {0..<n}}.\n                   strict_from_inj n x = y} \\<times>\n                  {\\<pi>. \\<pi> permutes {0..<n}}.\n         weight x y) =\n    (\\<Sum>y\\<in>F_strict.\n       \\<Sum>(x, y)\n             \\<in>{x \\<in> {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n                            (\\<forall>i.\n                                i \\<notin> {0..<n} \\<longrightarrow>\n                                f i = i) \\<and>\n                            inj_on f {0..<n}}.\n                   strict_from_inj n x = y} \\<times>\n                  {\\<pi>. \\<pi> permutes {0..<n}}.\n         weight x y)", ".."], ["proof (state)\nthis:\n  (\\<Sum>y\\<in>F_strict.\n     \\<Sum>f\\<in>{x \\<in> F_inj. strict_from_inj n x = y}.\n       sum (weight f) {\\<pi>. \\<pi> permutes {0..<n}}) =\n  (\\<Sum>y\\<in>F_strict.\n     \\<Sum>(x, y)\n           \\<in>{x \\<in> F_inj. strict_from_inj n x = y} \\<times>\n                {\\<pi>. \\<pi> permutes {0..<n}}.\n       weight x y)\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>f\\<in>F_strict.\n       Determinant.det (submatrix A UNIV (f ` {0..<n})) *\n       Determinant.det (submatrix B (f ` {0..<n}) UNIV))", "also"], ["proof (state)\nthis:\n  (\\<Sum>y\\<in>F_strict.\n     \\<Sum>f\\<in>{x \\<in> F_inj. strict_from_inj n x = y}.\n       sum (weight f) {\\<pi>. \\<pi> permutes {0..<n}}) =\n  (\\<Sum>y\\<in>F_strict.\n     \\<Sum>(x, y)\n           \\<in>{x \\<in> F_inj. strict_from_inj n x = y} \\<times>\n                {\\<pi>. \\<pi> permutes {0..<n}}.\n       weight x y)\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>f\\<in>F_strict.\n       Determinant.det (submatrix A UNIV (f ` {0..<n})) *\n       Determinant.det (submatrix B (f ` {0..<n}) UNIV))", "have \"... = sum (\\<lambda>g. sum (\\<lambda>(f,\\<pi>). weight f \\<pi>) (Z_good g)) F_strict\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>y\\<in>F_strict.\n       \\<Sum>(x, y)\n             \\<in>{x \\<in> F_inj. strict_from_inj n x = y} \\<times>\n                  {\\<pi>. \\<pi> permutes {0..<n}}.\n         weight x y) =\n    (\\<Sum>g\\<in>F_strict. \\<Sum>(x, y)\\<in>Z_good g. weight x y)", "using Z_good_alt"], ["proof (prove)\nusing this:\n  ?g \\<in> F_strict \\<Longrightarrow>\n  Z_good ?g =\n  {x \\<in> F_inj. strict_from_inj n x = ?g} \\<times>\n  {\\<pi>. \\<pi> permutes {0..<n}}\n\ngoal (1 subgoal):\n 1. (\\<Sum>y\\<in>F_strict.\n       \\<Sum>(x, y)\n             \\<in>{x \\<in> F_inj. strict_from_inj n x = y} \\<times>\n                  {\\<pi>. \\<pi> permutes {0..<n}}.\n         weight x y) =\n    (\\<Sum>g\\<in>F_strict. \\<Sum>(x, y)\\<in>Z_good g. weight x y)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>y\\<in>F_strict.\n     \\<Sum>(x, y)\n           \\<in>{x \\<in> F_inj. strict_from_inj n x = y} \\<times>\n                {\\<pi>. \\<pi> permutes {0..<n}}.\n       weight x y) =\n  (\\<Sum>g\\<in>F_strict. \\<Sum>(x, y)\\<in>Z_good g. weight x y)\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>f\\<in>F_strict.\n       Determinant.det (submatrix A UNIV (f ` {0..<n})) *\n       Determinant.det (submatrix B (f ` {0..<n}) UNIV))", "also"], ["proof (state)\nthis:\n  (\\<Sum>y\\<in>F_strict.\n     \\<Sum>(x, y)\n           \\<in>{x \\<in> F_inj. strict_from_inj n x = y} \\<times>\n                {\\<pi>. \\<pi> permutes {0..<n}}.\n       weight x y) =\n  (\\<Sum>g\\<in>F_strict. \\<Sum>(x, y)\\<in>Z_good g. weight x y)\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>f\\<in>F_strict.\n       Determinant.det (submatrix A UNIV (f ` {0..<n})) *\n       Determinant.det (submatrix B (f ` {0..<n}) UNIV))", "have \"... = ?rhs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>g\\<in>F_strict. \\<Sum>(x, y)\\<in>Z_good g. weight x y) =\n    (\\<Sum>f\\<in>F_strict.\n       Determinant.det (submatrix A UNIV (f ` {0..<n})) *\n       Determinant.det (submatrix B (f ` {0..<n}) UNIV))", "unfolding gather_by_strictness"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>g\\<in>F_strict.\n       Determinant.det (submatrix A UNIV (g ` {0..<n})) *\n       Determinant.det (submatrix B (g ` {0..<n}) UNIV)) =\n    (\\<Sum>f\\<in>F_strict.\n       Determinant.det (submatrix A UNIV (f ` {0..<n})) *\n       Determinant.det (submatrix B (f ` {0..<n}) UNIV))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>g\\<in>F_strict. \\<Sum>(x, y)\\<in>Z_good g. weight x y) =\n  (\\<Sum>f\\<in>F_strict.\n     Determinant.det (submatrix A UNIV (f ` {0..<n})) *\n     Determinant.det (submatrix B (f ` {0..<n}) UNIV))\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>f\\<in>F_strict.\n       Determinant.det (submatrix A UNIV (f ` {0..<n})) *\n       Determinant.det (submatrix B (f ` {0..<n}) UNIV))", "finally"], ["proof (chain)\npicking this:\n  Determinant.det (A * B) =\n  (\\<Sum>f\\<in>F_strict.\n     Determinant.det (submatrix A UNIV (f ` {0..<n})) *\n     Determinant.det (submatrix B (f ` {0..<n}) UNIV))", "show ?thesis"], ["proof (prove)\nusing this:\n  Determinant.det (A * B) =\n  (\\<Sum>f\\<in>F_strict.\n     Determinant.det (submatrix A UNIV (f ` {0..<n})) *\n     Determinant.det (submatrix B (f ` {0..<n}) UNIV))\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>f\\<in>F_strict.\n       Determinant.det (submatrix A UNIV (f ` {0..<n})) *\n       Determinant.det (submatrix B (f ` {0..<n}) UNIV))", "."], ["proof (state)\nthis:\n  Determinant.det (A * B) =\n  (\\<Sum>f\\<in>F_strict.\n     Determinant.det (submatrix A UNIV (f ` {0..<n})) *\n     Determinant.det (submatrix B (f ` {0..<n}) UNIV))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma Cauchy_Binet:\n  \"det (A*B) = (\\<Sum>I\\<in>{I. I\\<subseteq>{0..<m} \\<and> card I=n}. det (submatrix A UNIV I) * det (submatrix B I UNIV))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>I | I \\<subseteq> {0..<m} \\<and> card I = n.\n       Determinant.det (submatrix A UNIV I) *\n       Determinant.det (submatrix B I UNIV))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>I | I \\<subseteq> {0..<m} \\<and> card I = n.\n       Determinant.det (submatrix A UNIV I) *\n       Determinant.det (submatrix B I UNIV))", "let ?f=\"(\\<lambda>I. (\\<lambda>i. if i<n then sorted_list_of_set I ! i else i))\""], ["proof (state)\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>I | I \\<subseteq> {0..<m} \\<and> card I = n.\n       Determinant.det (submatrix A UNIV I) *\n       Determinant.det (submatrix B I UNIV))", "let ?setI = \"{I. I \\<subseteq> {0..<m} \\<and> card I = n}\""], ["proof (state)\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>I | I \\<subseteq> {0..<m} \\<and> card I = n.\n       Determinant.det (submatrix A UNIV I) *\n       Determinant.det (submatrix B I UNIV))", "have inj_on: \"inj_on ?f ?setI\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on (\\<lambda>I i. if i < n then sorted_list_of_set I ! i else i)\n     {I. I \\<subseteq> {0..<m} \\<and> card I = n}", "proof (rule inj_onI)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {I. I \\<subseteq> {0..<m} \\<and> card I = n};\n        y \\<in> {I. I \\<subseteq> {0..<m} \\<and> card I = n};\n        (\\<lambda>i. if i < n then sorted_list_of_set x ! i else i) =\n        (\\<lambda>i. if i < n then sorted_list_of_set y ! i else i)\\<rbrakk>\n       \\<Longrightarrow> x = y", "fix I J"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {I. I \\<subseteq> {0..<m} \\<and> card I = n};\n        y \\<in> {I. I \\<subseteq> {0..<m} \\<and> card I = n};\n        (\\<lambda>i. if i < n then sorted_list_of_set x ! i else i) =\n        (\\<lambda>i. if i < n then sorted_list_of_set y ! i else i)\\<rbrakk>\n       \\<Longrightarrow> x = y", "assume I: \"I \\<in> ?setI\" and J: \"J \\<in> ?setI\" and fI_fJ: \"?f I = ?f J\""], ["proof (state)\nthis:\n  I \\<in> {I. I \\<subseteq> {0..<m} \\<and> card I = n}\n  J \\<in> {I. I \\<subseteq> {0..<m} \\<and> card I = n}\n  (\\<lambda>i. if i < n then sorted_list_of_set I ! i else i) =\n  (\\<lambda>i. if i < n then sorted_list_of_set J ! i else i)\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {I. I \\<subseteq> {0..<m} \\<and> card I = n};\n        y \\<in> {I. I \\<subseteq> {0..<m} \\<and> card I = n};\n        (\\<lambda>i. if i < n then sorted_list_of_set x ! i else i) =\n        (\\<lambda>i. if i < n then sorted_list_of_set y ! i else i)\\<rbrakk>\n       \\<Longrightarrow> x = y", "have \"x \\<in> J\" if x: \"x \\<in> I\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> J", "by (metis (mono_tags) fI_fJ I J distinct_card in_set_conv_nth mem_Collect_eq\n          sorted_list_of_set(1) sorted_list_of_set(3) subset_eq_atLeast0_lessThan_finite x)"], ["proof (state)\nthis:\n  ?x \\<in> I \\<Longrightarrow> ?x \\<in> J\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {I. I \\<subseteq> {0..<m} \\<and> card I = n};\n        y \\<in> {I. I \\<subseteq> {0..<m} \\<and> card I = n};\n        (\\<lambda>i. if i < n then sorted_list_of_set x ! i else i) =\n        (\\<lambda>i. if i < n then sorted_list_of_set y ! i else i)\\<rbrakk>\n       \\<Longrightarrow> x = y", "moreover"], ["proof (state)\nthis:\n  ?x \\<in> I \\<Longrightarrow> ?x \\<in> J\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {I. I \\<subseteq> {0..<m} \\<and> card I = n};\n        y \\<in> {I. I \\<subseteq> {0..<m} \\<and> card I = n};\n        (\\<lambda>i. if i < n then sorted_list_of_set x ! i else i) =\n        (\\<lambda>i. if i < n then sorted_list_of_set y ! i else i)\\<rbrakk>\n       \\<Longrightarrow> x = y", "have \"x \\<in> I\" if x: \"x \\<in> J\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> I", "by (metis (mono_tags) fI_fJ I J distinct_card in_set_conv_nth mem_Collect_eq\n          sorted_list_of_set(1) sorted_list_of_set(3) subset_eq_atLeast0_lessThan_finite x)"], ["proof (state)\nthis:\n  ?x \\<in> J \\<Longrightarrow> ?x \\<in> I\n\ngoal (1 subgoal):\n 1. \\<And>x y.\n       \\<lbrakk>x \\<in> {I. I \\<subseteq> {0..<m} \\<and> card I = n};\n        y \\<in> {I. I \\<subseteq> {0..<m} \\<and> card I = n};\n        (\\<lambda>i. if i < n then sorted_list_of_set x ! i else i) =\n        (\\<lambda>i. if i < n then sorted_list_of_set y ! i else i)\\<rbrakk>\n       \\<Longrightarrow> x = y", "ultimately"], ["proof (chain)\npicking this:\n  ?x \\<in> I \\<Longrightarrow> ?x \\<in> J\n  ?x \\<in> J \\<Longrightarrow> ?x \\<in> I", "show \"I = J\""], ["proof (prove)\nusing this:\n  ?x \\<in> I \\<Longrightarrow> ?x \\<in> J\n  ?x \\<in> J \\<Longrightarrow> ?x \\<in> I\n\ngoal (1 subgoal):\n 1. I = J", "by auto"], ["proof (state)\nthis:\n  I = J\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  inj_on (\\<lambda>I i. if i < n then sorted_list_of_set I ! i else i)\n   {I. I \\<subseteq> {0..<m} \\<and> card I = n}\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>I | I \\<subseteq> {0..<m} \\<and> card I = n.\n       Determinant.det (submatrix A UNIV I) *\n       Determinant.det (submatrix B I UNIV))", "have rw: \"?f I ` {0..<n} = I\" if I: \"I \\<in> ?setI\" for I"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>i. if i < n then sorted_list_of_set I ! i else i) ` {0..<n} =\n    I", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>i. if i < n then sorted_list_of_set I ! i else i) ` {0..<n} =\n    I", "have \"sorted_list_of_set I ! xa \\<in> I\" if \"xa < n\" for xa"], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_list_of_set I ! xa \\<in> I", "by (metis (mono_tags, lifting) I distinct_card distinct_sorted_list_of_set mem_Collect_eq\n          nth_mem set_sorted_list_of_set subset_eq_atLeast0_lessThan_finite that)"], ["proof (state)\nthis:\n  ?xa < n \\<Longrightarrow> sorted_list_of_set I ! ?xa \\<in> I\n\ngoal (1 subgoal):\n 1. (\\<lambda>i. if i < n then sorted_list_of_set I ! i else i) ` {0..<n} =\n    I", "moreover"], ["proof (state)\nthis:\n  ?xa < n \\<Longrightarrow> sorted_list_of_set I ! ?xa \\<in> I\n\ngoal (1 subgoal):\n 1. (\\<lambda>i. if i < n then sorted_list_of_set I ! i else i) ` {0..<n} =\n    I", "have \"\\<exists>xa\\<in>{0..<n}. x = sorted_list_of_set I ! xa\" if x: \"x\\<in>I\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>xa\\<in>{0..<n}. x = sorted_list_of_set I ! xa", "by (metis (full_types) x I atLeast0LessThan distinct_card in_set_conv_nth mem_Collect_eq\n         lessThan_iff sorted_list_of_set(1) sorted_list_of_set(3) subset_eq_atLeast0_lessThan_finite)"], ["proof (state)\nthis:\n  ?x \\<in> I \\<Longrightarrow>\n  \\<exists>xa\\<in>{0..<n}. ?x = sorted_list_of_set I ! xa\n\ngoal (1 subgoal):\n 1. (\\<lambda>i. if i < n then sorted_list_of_set I ! i else i) ` {0..<n} =\n    I", "ultimately"], ["proof (chain)\npicking this:\n  ?xa < n \\<Longrightarrow> sorted_list_of_set I ! ?xa \\<in> I\n  ?x \\<in> I \\<Longrightarrow>\n  \\<exists>xa\\<in>{0..<n}. ?x = sorted_list_of_set I ! xa", "show ?thesis"], ["proof (prove)\nusing this:\n  ?xa < n \\<Longrightarrow> sorted_list_of_set I ! ?xa \\<in> I\n  ?x \\<in> I \\<Longrightarrow>\n  \\<exists>xa\\<in>{0..<n}. ?x = sorted_list_of_set I ! xa\n\ngoal (1 subgoal):\n 1. (\\<lambda>i. if i < n then sorted_list_of_set I ! i else i) ` {0..<n} =\n    I", "unfolding image_def"], ["proof (prove)\nusing this:\n  ?xa < n \\<Longrightarrow> sorted_list_of_set I ! ?xa \\<in> I\n  ?x \\<in> I \\<Longrightarrow>\n  \\<exists>xa\\<in>{0..<n}. ?x = sorted_list_of_set I ! xa\n\ngoal (1 subgoal):\n 1. {y. \\<exists>x\\<in>{0..<n}.\n           y = (if x < n then sorted_list_of_set I ! x else x)} =\n    I", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>i. if i < n then sorted_list_of_set I ! i else i) ` {0..<n} = I\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?I \\<in> {I. I \\<subseteq> {0..<m} \\<and> card I = n} \\<Longrightarrow>\n  (\\<lambda>i. if i < n then sorted_list_of_set ?I ! i else i) ` {0..<n} =\n  ?I\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>I | I \\<subseteq> {0..<m} \\<and> card I = n.\n       Determinant.det (submatrix A UNIV I) *\n       Determinant.det (submatrix B I UNIV))", "have f_setI: \"?f` ?setI = F_strict\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>I i. if i < n then sorted_list_of_set I ! i else i) `\n    {I. I \\<subseteq> {0..<m} \\<and> card I = n} =\n    F_strict", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<lambda>I i. if i < n then sorted_list_of_set I ! i else i) `\n    {I. I \\<subseteq> {0..<m} \\<and> card I = n} =\n    F_strict", "have \"sorted_list_of_set I ! xa < m\" if I: \"I \\<subseteq> {0..<m}\" and \"n = card I\" and \"xa < card I\"\n        for I xa"], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_list_of_set I ! xa < m", "by (metis I \\<open>xa < card I\\<close> atLeast0LessThan distinct_card finite_atLeastLessThan lessThan_iff\n          pick_in_set_le rev_finite_subset sorted_list_of_set(1)\n          sorted_list_of_set(3) sorted_list_of_set_eq_pick subsetCE)"], ["proof (state)\nthis:\n  \\<lbrakk>?I \\<subseteq> {0..<m}; n = card ?I; ?xa < card ?I\\<rbrakk>\n  \\<Longrightarrow> sorted_list_of_set ?I ! ?xa < m\n\ngoal (1 subgoal):\n 1. (\\<lambda>I i. if i < n then sorted_list_of_set I ! i else i) `\n    {I. I \\<subseteq> {0..<m} \\<and> card I = n} =\n    F_strict", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>?I \\<subseteq> {0..<m}; n = card ?I; ?xa < card ?I\\<rbrakk>\n  \\<Longrightarrow> sorted_list_of_set ?I ! ?xa < m\n\ngoal (1 subgoal):\n 1. (\\<lambda>I i. if i < n then sorted_list_of_set I ! i else i) `\n    {I. I \\<subseteq> {0..<m} \\<and> card I = n} =\n    F_strict", "have \"strict_mono_on (\\<lambda>i. if i < card I then sorted_list_of_set I ! i else i) {0..<card I}\"\n      if \"I \\<subseteq> {0..<m}\" and \"n = card I\" for I"], ["proof (prove)\ngoal (1 subgoal):\n 1. strict_mono_on\n     (\\<lambda>i. if i < card I then sorted_list_of_set I ! i else i)\n     {0..<card I}", "by (smt \\<open>I \\<subseteq> {0..<m}\\<close> atLeastLessThan_iff distinct_card finite_atLeastLessThan pick_mono_le\n          rev_finite_subset sorted_list_of_set(1) sorted_list_of_set(3)\n          sorted_list_of_set_eq_pick strict_mono_on_def)"], ["proof (state)\nthis:\n  \\<lbrakk>?I \\<subseteq> {0..<m}; n = card ?I\\<rbrakk>\n  \\<Longrightarrow> strict_mono_on\n                     (\\<lambda>i.\n                         if i < card ?I then sorted_list_of_set ?I ! i\n                         else i)\n                     {0..<card ?I}\n\ngoal (1 subgoal):\n 1. (\\<lambda>I i. if i < n then sorted_list_of_set I ! i else i) `\n    {I. I \\<subseteq> {0..<m} \\<and> card I = n} =\n    F_strict", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>?I \\<subseteq> {0..<m}; n = card ?I\\<rbrakk>\n  \\<Longrightarrow> strict_mono_on\n                     (\\<lambda>i.\n                         if i < card ?I then sorted_list_of_set ?I ! i\n                         else i)\n                     {0..<card ?I}\n\ngoal (1 subgoal):\n 1. (\\<lambda>I i. if i < n then sorted_list_of_set I ! i else i) `\n    {I. I \\<subseteq> {0..<m} \\<and> card I = n} =\n    F_strict", "have \"x \\<in> ?f ` {I. I \\<subseteq> {0..<m} \\<and> card I = n}\"\n      if x1: \"x \\<in> {0..<n} \\<rightarrow> {0..<m}\" and x2: \"\\<forall>i. \\<not> i < n \\<longrightarrow> x i = i\"\n      and s: \"strict_mono_on x {0..<n}\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> (\\<lambda>I i. if i < n then sorted_list_of_set I ! i else i) `\n            {I. I \\<subseteq> {0..<m} \\<and> card I = n}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> (\\<lambda>I i. if i < n then sorted_list_of_set I ! i else i) `\n            {I. I \\<subseteq> {0..<m} \\<and> card I = n}", "have inj_x: \"inj_on x {0..<n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on x {0..<n}", "using s strict_mono_on_imp_inj_on"], ["proof (prove)\nusing this:\n  strict_mono_on x {0..<n}\n  strict_mono_on ?f ?A \\<Longrightarrow> inj_on ?f ?A\n\ngoal (1 subgoal):\n 1. inj_on x {0..<n}", "by blast"], ["proof (state)\nthis:\n  inj_on x {0..<n}\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<lambda>I i. if i < n then sorted_list_of_set I ! i else i) `\n            {I. I \\<subseteq> {0..<m} \\<and> card I = n}", "hence card_xn: \"card (x ` {0..<n}) = n\""], ["proof (prove)\nusing this:\n  inj_on x {0..<n}\n\ngoal (1 subgoal):\n 1. card (x ` {0..<n}) = n", "by (simp add: card_image)"], ["proof (state)\nthis:\n  card (x ` {0..<n}) = n\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<lambda>I i. if i < n then sorted_list_of_set I ! i else i) `\n            {I. I \\<subseteq> {0..<m} \\<and> card I = n}", "have x_eq: \"x = (\\<lambda>i. if i < n then sorted_list_of_set (x ` {0..<n}) ! i else i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x =\n    (\\<lambda>i. if i < n then sorted_list_of_set (x ` {0..<n}) ! i else i)", "unfolding fun_eq_iff"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>xa.\n       x xa = (if xa < n then sorted_list_of_set (x ` {0..<n}) ! xa else xa)", "using nth_strict_mono_on s"], ["proof (prove)\nusing this:\n  \\<lbrakk>strict_mono_on ?f {0..<n}; ?i < n\\<rbrakk>\n  \\<Longrightarrow> ?f ?i = sorted_list_of_set (?f ` {0..<n}) ! ?i\n  strict_mono_on x {0..<n}\n\ngoal (1 subgoal):\n 1. \\<forall>xa.\n       x xa = (if xa < n then sorted_list_of_set (x ` {0..<n}) ! xa else xa)", "using x2"], ["proof (prove)\nusing this:\n  \\<lbrakk>strict_mono_on ?f {0..<n}; ?i < n\\<rbrakk>\n  \\<Longrightarrow> ?f ?i = sorted_list_of_set (?f ` {0..<n}) ! ?i\n  strict_mono_on x {0..<n}\n  \\<forall>i. \\<not> i < n \\<longrightarrow> x i = i\n\ngoal (1 subgoal):\n 1. \\<forall>xa.\n       x xa = (if xa < n then sorted_list_of_set (x ` {0..<n}) ! xa else xa)", "by auto"], ["proof (state)\nthis:\n  x =\n  (\\<lambda>i. if i < n then sorted_list_of_set (x ` {0..<n}) ! i else i)\n\ngoal (1 subgoal):\n 1. x \\<in> (\\<lambda>I i. if i < n then sorted_list_of_set I ! i else i) `\n            {I. I \\<subseteq> {0..<m} \\<and> card I = n}", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> (\\<lambda>I i. if i < n then sorted_list_of_set I ! i else i) `\n            {I. I \\<subseteq> {0..<m} \\<and> card I = n}", "unfolding image_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> {y. \\<exists>x\\<in>{I. I \\<subseteq> {0..<m} \\<and> card I = n}.\n                   y =\n                   (\\<lambda>i.\n                       if i < n then sorted_list_of_set x ! i else i)}", "by (auto, rule exI[of _\"x`{0..<n}\"], insert card_xn x1 x_eq, auto)"], ["proof (state)\nthis:\n  x \\<in> (\\<lambda>I i. if i < n then sorted_list_of_set I ! i else i) `\n          {I. I \\<subseteq> {0..<m} \\<and> card I = n}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?x \\<in> {0..<n} \\<rightarrow> {0..<m};\n   \\<forall>i. \\<not> i < n \\<longrightarrow> ?x i = i;\n   strict_mono_on ?x {0..<n}\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> (\\<lambda>I i.\n                                 if i < n then sorted_list_of_set I ! i\n                                 else i) `\n                             {I. I \\<subseteq> {0..<m} \\<and> card I = n}\n\ngoal (1 subgoal):\n 1. (\\<lambda>I i. if i < n then sorted_list_of_set I ! i else i) `\n    {I. I \\<subseteq> {0..<m} \\<and> card I = n} =\n    F_strict", "ultimately"], ["proof (chain)\npicking this:\n  \\<lbrakk>?I \\<subseteq> {0..<m}; n = card ?I; ?xa < card ?I\\<rbrakk>\n  \\<Longrightarrow> sorted_list_of_set ?I ! ?xa < m\n  \\<lbrakk>?I \\<subseteq> {0..<m}; n = card ?I\\<rbrakk>\n  \\<Longrightarrow> strict_mono_on\n                     (\\<lambda>i.\n                         if i < card ?I then sorted_list_of_set ?I ! i\n                         else i)\n                     {0..<card ?I}\n  \\<lbrakk>?x \\<in> {0..<n} \\<rightarrow> {0..<m};\n   \\<forall>i. \\<not> i < n \\<longrightarrow> ?x i = i;\n   strict_mono_on ?x {0..<n}\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> (\\<lambda>I i.\n                                 if i < n then sorted_list_of_set I ! i\n                                 else i) `\n                             {I. I \\<subseteq> {0..<m} \\<and> card I = n}", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?I \\<subseteq> {0..<m}; n = card ?I; ?xa < card ?I\\<rbrakk>\n  \\<Longrightarrow> sorted_list_of_set ?I ! ?xa < m\n  \\<lbrakk>?I \\<subseteq> {0..<m}; n = card ?I\\<rbrakk>\n  \\<Longrightarrow> strict_mono_on\n                     (\\<lambda>i.\n                         if i < card ?I then sorted_list_of_set ?I ! i\n                         else i)\n                     {0..<card ?I}\n  \\<lbrakk>?x \\<in> {0..<n} \\<rightarrow> {0..<m};\n   \\<forall>i. \\<not> i < n \\<longrightarrow> ?x i = i;\n   strict_mono_on ?x {0..<n}\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> (\\<lambda>I i.\n                                 if i < n then sorted_list_of_set I ! i\n                                 else i) `\n                             {I. I \\<subseteq> {0..<m} \\<and> card I = n}\n\ngoal (1 subgoal):\n 1. (\\<lambda>I i. if i < n then sorted_list_of_set I ! i else i) `\n    {I. I \\<subseteq> {0..<m} \\<and> card I = n} =\n    F_strict", "unfolding F_strict_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?I \\<subseteq> {0..<m}; n = card ?I; ?xa < card ?I\\<rbrakk>\n  \\<Longrightarrow> sorted_list_of_set ?I ! ?xa < m\n  \\<lbrakk>?I \\<subseteq> {0..<m}; n = card ?I\\<rbrakk>\n  \\<Longrightarrow> strict_mono_on\n                     (\\<lambda>i.\n                         if i < card ?I then sorted_list_of_set ?I ! i\n                         else i)\n                     {0..<card ?I}\n  \\<lbrakk>?x \\<in> {0..<n} \\<rightarrow> {0..<m};\n   \\<forall>i. \\<not> i < n \\<longrightarrow> ?x i = i;\n   strict_mono_on ?x {0..<n}\\<rbrakk>\n  \\<Longrightarrow> ?x \\<in> (\\<lambda>I i.\n                                 if i < n then sorted_list_of_set I ! i\n                                 else i) `\n                             {I. I \\<subseteq> {0..<m} \\<and> card I = n}\n\ngoal (1 subgoal):\n 1. (\\<lambda>I i. if i < n then sorted_list_of_set I ! i else i) `\n    {I. I \\<subseteq> {0..<m} \\<and> card I = n} =\n    {f \\<in> {0..<n} \\<rightarrow> {0..<m}.\n     (\\<forall>i. i \\<notin> {0..<n} \\<longrightarrow> f i = i) \\<and>\n     strict_mono_on f {0..<n}}", "by auto"], ["proof (state)\nthis:\n  (\\<lambda>I i. if i < n then sorted_list_of_set I ! i else i) `\n  {I. I \\<subseteq> {0..<m} \\<and> card I = n} =\n  F_strict\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<lambda>I i. if i < n then sorted_list_of_set I ! i else i) `\n  {I. I \\<subseteq> {0..<m} \\<and> card I = n} =\n  F_strict\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>I | I \\<subseteq> {0..<m} \\<and> card I = n.\n       Determinant.det (submatrix A UNIV I) *\n       Determinant.det (submatrix B I UNIV))", "let ?g = \"(\\<lambda>f. det (submatrix A UNIV (f`{0..<n})) * det(submatrix B (f`{0..<n}) UNIV))\""], ["proof (state)\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>I | I \\<subseteq> {0..<m} \\<and> card I = n.\n       Determinant.det (submatrix A UNIV I) *\n       Determinant.det (submatrix B I UNIV))", "have \"det (A*B) = sum ((\\<lambda>f. det (submatrix A UNIV (f ` {0..<n}))\n    * det (submatrix B (f ` {0..<n}) UNIV)) \\<circ> ?f) {I. I \\<subseteq> {0..<m} \\<and> card I = n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    sum ((\\<lambda>f.\n             Determinant.det (submatrix A UNIV (f ` {0..<n})) *\n             Determinant.det (submatrix B (f ` {0..<n}) UNIV)) \\<circ>\n         (\\<lambda>I i. if i < n then sorted_list_of_set I ! i else i))\n     {I. I \\<subseteq> {0..<m} \\<and> card I = n}", "unfolding Cauchy_Binet1 f_setI[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>f\\<in>(\\<lambda>I i.\n                     if i < n then sorted_list_of_set I ! i else i) `\n                 {I. I \\<subseteq> {0..<m} \\<and> card I = n}.\n       Determinant.det (submatrix A UNIV (f ` {0..<n})) *\n       Determinant.det (submatrix B (f ` {0..<n}) UNIV)) =\n    sum ((\\<lambda>f.\n             Determinant.det (submatrix A UNIV (f ` {0..<n})) *\n             Determinant.det (submatrix B (f ` {0..<n}) UNIV)) \\<circ>\n         (\\<lambda>I i. if i < n then sorted_list_of_set I ! i else i))\n     {I. I \\<subseteq> {0..<m} \\<and> card I = n}", "by (rule sum.reindex[OF inj_on])"], ["proof (state)\nthis:\n  Determinant.det (A * B) =\n  sum ((\\<lambda>f.\n           Determinant.det (submatrix A UNIV (f ` {0..<n})) *\n           Determinant.det (submatrix B (f ` {0..<n}) UNIV)) \\<circ>\n       (\\<lambda>I i. if i < n then sorted_list_of_set I ! i else i))\n   {I. I \\<subseteq> {0..<m} \\<and> card I = n}\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>I | I \\<subseteq> {0..<m} \\<and> card I = n.\n       Determinant.det (submatrix A UNIV I) *\n       Determinant.det (submatrix B I UNIV))", "also"], ["proof (state)\nthis:\n  Determinant.det (A * B) =\n  sum ((\\<lambda>f.\n           Determinant.det (submatrix A UNIV (f ` {0..<n})) *\n           Determinant.det (submatrix B (f ` {0..<n}) UNIV)) \\<circ>\n       (\\<lambda>I i. if i < n then sorted_list_of_set I ! i else i))\n   {I. I \\<subseteq> {0..<m} \\<and> card I = n}\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>I | I \\<subseteq> {0..<m} \\<and> card I = n.\n       Determinant.det (submatrix A UNIV I) *\n       Determinant.det (submatrix B I UNIV))", "have \"... = (\\<Sum>I\\<in>{I. I\\<subseteq>{0..<m} \\<and> card I=n}.det(submatrix A UNIV I)*det(submatrix B I UNIV))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum ((\\<lambda>f.\n             Determinant.det (submatrix A UNIV (f ` {0..<n})) *\n             Determinant.det (submatrix B (f ` {0..<n}) UNIV)) \\<circ>\n         (\\<lambda>I i. if i < n then sorted_list_of_set I ! i else i))\n     {I. I \\<subseteq> {0..<m} \\<and> card I = n} =\n    (\\<Sum>I | I \\<subseteq> {0..<m} \\<and> card I = n.\n       Determinant.det (submatrix A UNIV I) *\n       Determinant.det (submatrix B I UNIV))", "by (rule sum.cong, insert rw, auto)"], ["proof (state)\nthis:\n  sum ((\\<lambda>f.\n           Determinant.det (submatrix A UNIV (f ` {0..<n})) *\n           Determinant.det (submatrix B (f ` {0..<n}) UNIV)) \\<circ>\n       (\\<lambda>I i. if i < n then sorted_list_of_set I ! i else i))\n   {I. I \\<subseteq> {0..<m} \\<and> card I = n} =\n  (\\<Sum>I | I \\<subseteq> {0..<m} \\<and> card I = n.\n     Determinant.det (submatrix A UNIV I) *\n     Determinant.det (submatrix B I UNIV))\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>I | I \\<subseteq> {0..<m} \\<and> card I = n.\n       Determinant.det (submatrix A UNIV I) *\n       Determinant.det (submatrix B I UNIV))", "finally"], ["proof (chain)\npicking this:\n  Determinant.det (A * B) =\n  (\\<Sum>I | I \\<subseteq> {0..<m} \\<and> card I = n.\n     Determinant.det (submatrix A UNIV I) *\n     Determinant.det (submatrix B I UNIV))", "show ?thesis"], ["proof (prove)\nusing this:\n  Determinant.det (A * B) =\n  (\\<Sum>I | I \\<subseteq> {0..<m} \\<and> card I = n.\n     Determinant.det (submatrix A UNIV I) *\n     Determinant.det (submatrix B I UNIV))\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) =\n    (\\<Sum>I | I \\<subseteq> {0..<m} \\<and> card I = n.\n       Determinant.det (submatrix A UNIV I) *\n       Determinant.det (submatrix B I UNIV))", "."], ["proof (state)\nthis:\n  Determinant.det (A * B) =\n  (\\<Sum>I | I \\<subseteq> {0..<m} \\<and> card I = n.\n     Determinant.det (submatrix A UNIV I) *\n     Determinant.det (submatrix B I UNIV))\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}