{"file_name": "/home/qj213/afp-2021-10-22/thys/Smith_Normal_Form/Rings2_Extended.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Smith_Normal_Form", "problem_names": ["lemma ideal_generated_subset2:\n  assumes  \"\\<forall>b\\<in>B. b \\<in> ideal_generated A\"\n  shows \"ideal_generated B \\<subseteq> ideal_generated A\"", "lemma ideal_explicit: \"ideal_generated S\n      = {y. \\<exists>f U. finite U \\<and> U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. f i * i) = y}\"", "lemma ideal_generated_minus:\n  assumes a: \"a \\<in> ideal_generated (S-{a})\"\n  shows \"ideal_generated S = ideal_generated (S-{a})\"", "lemma ideal_generated_dvd_eq:\n  assumes a_dvd_b: \"a dvd b\"\n  and a: \"a \\<in> S\"\n  and a_not_b: \"a \\<noteq> b\"\n  shows \"ideal_generated S = ideal_generated (S - {b})\"", "lemma ideal_generated_dvd_eq_diff_set:\n  assumes i_in_I: \"i\\<in>I\" and i_in_J: \"i \\<notin> J\" and i_dvd_j: \"\\<forall>j\\<in>J. i dvd j\"\n  and f: \"finite J\"\n  shows \"ideal_generated I = ideal_generated (I - J)\"", "lemma ideal_generated_singleton_subset:\n  assumes d: \"d \\<in> ideal_generated S\" and fin_S: \"finite S\"\n  shows \"ideal_generated {d} \\<subseteq> ideal_generated S\"", "lemma ideal_generated_singleton_dvd:\n  assumes i: \"ideal_generated S = ideal_generated {d}\" and x: \"x \\<in> S\"\n  shows \"d dvd x\"", "lemma ideal_generated_UNIV_insert:\n  assumes \"ideal_generated S = UNIV\"\n  shows \"ideal_generated (insert a S) = UNIV\"", "lemma ideal_generated_UNIV_union:\n  assumes \"ideal_generated S = UNIV\"\n  shows \"ideal_generated (A \\<union> S) = UNIV\"", "lemma ideal_explicit2:\n  assumes \"finite S\"\n  shows \"ideal_generated S = {y. \\<exists>f. (\\<Sum>i\\<in>S. f i * i) = y}\"", "lemma ideal_generated_unit:\n  assumes u: \"u dvd 1\"\n  shows \"ideal_generated {u} = UNIV\"", "lemma ideal_generated_dvd_subset:\n  assumes x: \"\\<forall>x \\<in> S. d dvd x\" and S: \"finite S\"\n  shows \"ideal_generated S \\<subseteq> ideal_generated {d}\"", "lemma ideal_generated_mult_unit:\n  assumes f: \"finite S\" and u: \"u dvd 1\"\n  shows \"ideal_generated ((\\<lambda>x. u*x)` S) = ideal_generated S\"", "lemma ideal_generated_1[simp]: \"ideal_generated {1} = UNIV\"", "lemma ideal_generated_pair: \"ideal_generated {a,b} = {p*a+q*b | p q. True}\"", "lemma ideal_generated_pair_exists_pq1:\n  assumes i: \"ideal_generated {a,b} = (UNIV::'a set)\"\n  shows \"\\<exists>p q. p*a + q*b = 1\"", "lemma ideal_generated_pair_UNIV:\n  assumes sa_tb_u: \"s*a+t*b = u\" and u: \"u dvd 1\"\n  shows \"ideal_generated {a,b} = UNIV\"", "lemma ideal_generated_pair_exists:\n  assumes l: \"(ideal_generated {a,b} = ideal_generated {d})\"\n  shows \"(\\<exists> p q. p*a+q*b = d)\"", "lemma obtain_ideal_generated_pair:\n  assumes \"c \\<in> ideal_generated {a,b}\"\n  obtains p q where \"p*a+q*b=c\"", "lemma ideal_generated_pair_exists_UNIV:\n  shows \"(ideal_generated {a,b} = ideal_generated {1}) = (\\<exists>p q. p*a+q*b = 1)\" (is \"?lhs = ?rhs\")", "lemma sum_three_elements:\n  shows \"\\<exists>x y z::'a. (\\<Sum>i\\<in>{a,b,c}. f i * i) = x * a + y * b + z * c\"", "lemma sum_three_elements':\n  shows \"\\<exists>f::'a\\<Rightarrow>'a. (\\<Sum>i\\<in>{a,b,c}. f i * i) = x * a + y * b + z * c\"", "lemma ideal_generated_triple_pair_rewrite:\n  assumes i1: \"ideal_generated {a, b, c} = ideal_generated {d}\"\n    and i2: \"ideal_generated {a, b} = ideal_generated {d'}\"\n  shows \"ideal_generated{d',c} = ideal_generated {d}\"", "lemma ideal_generated_dvd:\n  assumes i: \"ideal_generated {a,b::'a} = ideal_generated{d} \"\n  and a: \"d' dvd a\" and b: \"d' dvd b\"\nshows \"d' dvd d\"", "lemma ideal_generated_dvd2:\n  assumes i: \"ideal_generated S = ideal_generated{d::'a} \"\n  and \"finite S\"\n  and x: \"\\<forall>x\\<in>S. d' dvd x\"\nshows \"d' dvd d\"", "lemma sum_two_elements':\n  fixes d::'a\n  assumes s: \"(\\<Sum>i\\<in>{a,b}. f i * i) = d\"\n  obtains p and q where \"d = p * a + q * b\"", "lemma all_fin_gen_ideals_are_principal_imp_bezout:\n  assumes all: \"\\<forall>I::'a set. finitely_generated_ideal I \\<longrightarrow> principal_ideal I\"\n  shows \"OFCLASS ('a, bezout_ring_class)\"", "lemma exists_bezout_extended:\n  assumes S: \"finite S\" and ne: \"S \\<noteq> {}\"\n  shows \"\\<exists>f d. (\\<Sum>a\\<in>S. f a * a) = d \\<and> (\\<forall>a\\<in>S. d dvd a) \\<and> (\\<forall>d'. (\\<forall>a\\<in>S. d' dvd a) \\<longrightarrow> d' dvd d)\"", "lemma ideal_generated_empty: \"ideal_generated {} = {0}\"", "lemma bezout_imp_all_fin_gen_ideals_are_principal:\n  fixes I::\"'a :: bezout_ring set\"\n  assumes fin: \"finitely_generated_ideal I\"\n  shows \"principal_ideal I\"", "lemma bezout_imp_all_fin_gen_ideals_are_principal_unsatisfactory:\n  assumes a1: \"class.bezout_ring (*) (1::'b::comm_ring_1) (+) 0 (-) uminus\" (*It is algo possible to prove it using OFCLASS*)\n  shows \"\\<forall>I::'b set. finitely_generated_ideal I \\<longrightarrow> principal_ideal I\"", "lemma OFCLASS_bezout_ring_imp_class_bezout_ring:\n  assumes \"OFCLASS('a::comm_ring_1,bezout_ring_class)\"\n  shows \"class.bezout_ring ((*)::'a\\<Rightarrow>'a\\<Rightarrow>'a) 1 (+) 0 (-) uminus\"", "lemma bezout_ring_iff_fin_gen_principal_ideal:\n    \"(\\<And>I::'a::comm_ring_1 set. finitely_generated_ideal I \\<Longrightarrow> principal_ideal I)\n    \\<equiv> OFCLASS('a, bezout_ring_class)\"", "lemma bezout_ring_iff_fin_gen_principal_ideal2:\n    \"(\\<forall>I::'a::comm_ring_1 set. finitely_generated_ideal I \\<longrightarrow> principal_ideal I)\n    = (class.bezout_ring ((*)::'a\\<Rightarrow>'a\\<Rightarrow>'a) 1 (+) 0 (-) uminus)\""], "translations": [["", "lemma ideal_generated_subset2:\n  assumes  \"\\<forall>b\\<in>B. b \\<in> ideal_generated A\"\n  shows \"ideal_generated B \\<subseteq> ideal_generated A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated B \\<subseteq> ideal_generated A", "by (metis (mono_tags, lifting) InterE assms ideal_generated_def\nideal_ideal_generated mem_Collect_eq subsetI)"], ["", "context comm_ring_1\nbegin"], ["", "lemma ideal_explicit: \"ideal_generated S\n      = {y. \\<exists>f U. finite U \\<and> U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. f i * i) = y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated S =\n    {y. \\<exists>f U.\n           finite U \\<and>\n           U \\<subseteq> S \\<and> (\\<Sum>i\\<in>U. f i * i) = y}", "by (simp add: ideal_generated_eq_left_ideal left_ideal_explicit)"], ["", "end"], ["", "lemma ideal_generated_minus:\n  assumes a: \"a \\<in> ideal_generated (S-{a})\"\n  shows \"ideal_generated S = ideal_generated (S-{a})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated S = ideal_generated (S - {a})", "proof (cases \"a \\<in> S\")"], ["proof (state)\ngoal (2 subgoals):\n 1. a \\<in> S \\<Longrightarrow>\n    ideal_generated S = ideal_generated (S - {a})\n 2. a \\<notin> S \\<Longrightarrow>\n    ideal_generated S = ideal_generated (S - {a})", "case True"], ["proof (state)\nthis:\n  a \\<in> S\n\ngoal (2 subgoals):\n 1. a \\<in> S \\<Longrightarrow>\n    ideal_generated S = ideal_generated (S - {a})\n 2. a \\<notin> S \\<Longrightarrow>\n    ideal_generated S = ideal_generated (S - {a})", "note a_in_S = True"], ["proof (state)\nthis:\n  a \\<in> S\n\ngoal (2 subgoals):\n 1. a \\<in> S \\<Longrightarrow>\n    ideal_generated S = ideal_generated (S - {a})\n 2. a \\<notin> S \\<Longrightarrow>\n    ideal_generated S = ideal_generated (S - {a})", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated S = ideal_generated (S - {a})", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. ideal_generated S \\<subseteq> ideal_generated (S - {a})\n 2. ideal_generated (S - {a}) \\<subseteq> ideal_generated S", "show \"ideal_generated S \\<subseteq> ideal_generated (S - {a})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated S \\<subseteq> ideal_generated (S - {a})", "proof (rule ideal_generated_subset2, auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b. b \\<in> S \\<Longrightarrow> b \\<in> ideal_generated (S - {a})", "fix b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>b. b \\<in> S \\<Longrightarrow> b \\<in> ideal_generated (S - {a})", "assume b: \"b \\<in> S\""], ["proof (state)\nthis:\n  b \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>b. b \\<in> S \\<Longrightarrow> b \\<in> ideal_generated (S - {a})", "show \"b \\<in> ideal_generated (S - {a})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<in> ideal_generated (S - {a})", "proof (cases \"b = a\")"], ["proof (state)\ngoal (2 subgoals):\n 1. b = a \\<Longrightarrow> b \\<in> ideal_generated (S - {a})\n 2. b \\<noteq> a \\<Longrightarrow> b \\<in> ideal_generated (S - {a})", "case True"], ["proof (state)\nthis:\n  b = a\n\ngoal (2 subgoals):\n 1. b = a \\<Longrightarrow> b \\<in> ideal_generated (S - {a})\n 2. b \\<noteq> a \\<Longrightarrow> b \\<in> ideal_generated (S - {a})", "then"], ["proof (chain)\npicking this:\n  b = a", "show ?thesis"], ["proof (prove)\nusing this:\n  b = a\n\ngoal (1 subgoal):\n 1. b \\<in> ideal_generated (S - {a})", "using a"], ["proof (prove)\nusing this:\n  b = a\n  a \\<in> ideal_generated (S - {a})\n\ngoal (1 subgoal):\n 1. b \\<in> ideal_generated (S - {a})", "by auto"], ["proof (state)\nthis:\n  b \\<in> ideal_generated (S - {a})\n\ngoal (1 subgoal):\n 1. b \\<noteq> a \\<Longrightarrow> b \\<in> ideal_generated (S - {a})", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. b \\<noteq> a \\<Longrightarrow> b \\<in> ideal_generated (S - {a})", "case False"], ["proof (state)\nthis:\n  b \\<noteq> a\n\ngoal (1 subgoal):\n 1. b \\<noteq> a \\<Longrightarrow> b \\<in> ideal_generated (S - {a})", "then"], ["proof (chain)\npicking this:\n  b \\<noteq> a", "show ?thesis"], ["proof (prove)\nusing this:\n  b \\<noteq> a\n\ngoal (1 subgoal):\n 1. b \\<in> ideal_generated (S - {a})", "using b"], ["proof (prove)\nusing this:\n  b \\<noteq> a\n  b \\<in> S\n\ngoal (1 subgoal):\n 1. b \\<in> ideal_generated (S - {a})", "by (simp add: ideal_generated_in)"], ["proof (state)\nthis:\n  b \\<in> ideal_generated (S - {a})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  b \\<in> ideal_generated (S - {a})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ideal_generated S \\<subseteq> ideal_generated (S - {a})\n\ngoal (1 subgoal):\n 1. ideal_generated (S - {a}) \\<subseteq> ideal_generated S", "show \"ideal_generated (S - {a}) \\<subseteq> ideal_generated S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated (S - {a}) \\<subseteq> ideal_generated S", "by (rule ideal_generated_subset, auto)"], ["proof (state)\nthis:\n  ideal_generated (S - {a}) \\<subseteq> ideal_generated S\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ideal_generated S = ideal_generated (S - {a})\n\ngoal (1 subgoal):\n 1. a \\<notin> S \\<Longrightarrow>\n    ideal_generated S = ideal_generated (S - {a})", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<notin> S \\<Longrightarrow>\n    ideal_generated S = ideal_generated (S - {a})", "case False"], ["proof (state)\nthis:\n  a \\<notin> S\n\ngoal (1 subgoal):\n 1. a \\<notin> S \\<Longrightarrow>\n    ideal_generated S = ideal_generated (S - {a})", "then"], ["proof (chain)\npicking this:\n  a \\<notin> S", "show ?thesis"], ["proof (prove)\nusing this:\n  a \\<notin> S\n\ngoal (1 subgoal):\n 1. ideal_generated S = ideal_generated (S - {a})", "by simp"], ["proof (state)\nthis:\n  ideal_generated S = ideal_generated (S - {a})\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ideal_generated_dvd_eq:\n  assumes a_dvd_b: \"a dvd b\"\n  and a: \"a \\<in> S\"\n  and a_not_b: \"a \\<noteq> b\"\n  shows \"ideal_generated S = ideal_generated (S - {b})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated S = ideal_generated (S - {b})", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. ideal_generated S \\<subseteq> ideal_generated (S - {b})\n 2. ideal_generated (S - {b}) \\<subseteq> ideal_generated S", "show \"ideal_generated S \\<subseteq> ideal_generated (S - {b})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated S \\<subseteq> ideal_generated (S - {b})", "proof (rule ideal_generated_subset2, auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ba.\n       ba \\<in> S \\<Longrightarrow> ba \\<in> ideal_generated (S - {b})", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ba.\n       ba \\<in> S \\<Longrightarrow> ba \\<in> ideal_generated (S - {b})", "assume x: \"x \\<in> S\""], ["proof (state)\nthis:\n  x \\<in> S\n\ngoal (1 subgoal):\n 1. \\<And>ba.\n       ba \\<in> S \\<Longrightarrow> ba \\<in> ideal_generated (S - {b})", "show \"x \\<in> ideal_generated (S - {b})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> ideal_generated (S - {b})", "proof (cases \"x = b\")"], ["proof (state)\ngoal (2 subgoals):\n 1. x = b \\<Longrightarrow> x \\<in> ideal_generated (S - {b})\n 2. x \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated (S - {b})", "case True"], ["proof (state)\nthis:\n  x = b\n\ngoal (2 subgoals):\n 1. x = b \\<Longrightarrow> x \\<in> ideal_generated (S - {b})\n 2. x \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated (S - {b})", "obtain k where b_ak: \"b = a * k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k. b = a * k \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using a_dvd_b"], ["proof (prove)\nusing this:\n  a dvd b\n\ngoal (1 subgoal):\n 1. (\\<And>k. b = a * k \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "unfolding dvd_def"], ["proof (prove)\nusing this:\n  \\<exists>k. b = a * k\n\ngoal (1 subgoal):\n 1. (\\<And>k. b = a * k \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  b = a * k\n\ngoal (2 subgoals):\n 1. x = b \\<Longrightarrow> x \\<in> ideal_generated (S - {b})\n 2. x \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated (S - {b})", "let ?f = \"\\<lambda>c. k\""], ["proof (state)\ngoal (2 subgoals):\n 1. x = b \\<Longrightarrow> x \\<in> ideal_generated (S - {b})\n 2. x \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated (S - {b})", "have \"(\\<Sum>i\\<in>{a}. i * ?f i) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{a}. i * k) = x", "using True b_ak"], ["proof (prove)\nusing this:\n  x = b\n  b = a * k\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{a}. i * k) = x", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{a}. i * k) = x\n\ngoal (2 subgoals):\n 1. x = b \\<Longrightarrow> x \\<in> ideal_generated (S - {b})\n 2. x \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated (S - {b})", "moreover"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{a}. i * k) = x\n\ngoal (2 subgoals):\n 1. x = b \\<Longrightarrow> x \\<in> ideal_generated (S - {b})\n 2. x \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated (S - {b})", "have \"{a} \\<subseteq> S - {b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {a} \\<subseteq> S - {b}", "using a_not_b a"], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  a \\<in> S\n\ngoal (1 subgoal):\n 1. {a} \\<subseteq> S - {b}", "by auto"], ["proof (state)\nthis:\n  {a} \\<subseteq> S - {b}\n\ngoal (2 subgoals):\n 1. x = b \\<Longrightarrow> x \\<in> ideal_generated (S - {b})\n 2. x \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated (S - {b})", "moreover"], ["proof (state)\nthis:\n  {a} \\<subseteq> S - {b}\n\ngoal (2 subgoals):\n 1. x = b \\<Longrightarrow> x \\<in> ideal_generated (S - {b})\n 2. x \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated (S - {b})", "have \"finite {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {a}", "by auto"], ["proof (state)\nthis:\n  finite {a}\n\ngoal (2 subgoals):\n 1. x = b \\<Longrightarrow> x \\<in> ideal_generated (S - {b})\n 2. x \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated (S - {b})", "ultimately"], ["proof (chain)\npicking this:\n  (\\<Sum>i\\<in>{a}. i * k) = x\n  {a} \\<subseteq> S - {b}\n  finite {a}", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>{a}. i * k) = x\n  {a} \\<subseteq> S - {b}\n  finite {a}\n\ngoal (1 subgoal):\n 1. x \\<in> ideal_generated (S - {b})", "unfolding ideal_def"], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>{a}. i * k) = x\n  {a} \\<subseteq> S - {b}\n  finite {a}\n\ngoal (1 subgoal):\n 1. x \\<in> ideal_generated (S - {b})", "by (metis True b_ak ideal_def ideal_generated_in ideal_ideal_generated insert_subset right_ideal_def)"], ["proof (state)\nthis:\n  x \\<in> ideal_generated (S - {b})\n\ngoal (1 subgoal):\n 1. x \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated (S - {b})", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated (S - {b})", "case False"], ["proof (state)\nthis:\n  x \\<noteq> b\n\ngoal (1 subgoal):\n 1. x \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated (S - {b})", "then"], ["proof (chain)\npicking this:\n  x \\<noteq> b", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<noteq> b\n\ngoal (1 subgoal):\n 1. x \\<in> ideal_generated (S - {b})", "by (simp add: ideal_generated_in x)"], ["proof (state)\nthis:\n  x \\<in> ideal_generated (S - {b})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> ideal_generated (S - {b})\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ideal_generated S \\<subseteq> ideal_generated (S - {b})\n\ngoal (1 subgoal):\n 1. ideal_generated (S - {b}) \\<subseteq> ideal_generated S", "show \"ideal_generated (S - {b}) \\<subseteq> ideal_generated S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated (S - {b}) \\<subseteq> ideal_generated S", "by (rule ideal_generated_subset, auto)"], ["proof (state)\nthis:\n  ideal_generated (S - {b}) \\<subseteq> ideal_generated S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ideal_generated_dvd_eq_diff_set:\n  assumes i_in_I: \"i\\<in>I\" and i_in_J: \"i \\<notin> J\" and i_dvd_j: \"\\<forall>j\\<in>J. i dvd j\"\n  and f: \"finite J\"\n  shows \"ideal_generated I = ideal_generated (I - J)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated I = ideal_generated (I - J)", "using f i_in_J i_dvd_j i_in_I"], ["proof (prove)\nusing this:\n  finite J\n  i \\<notin> J\n  \\<forall>j\\<in>J. i dvd j\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. ideal_generated I = ideal_generated (I - J)", "proof (induct J arbitrary: I)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>I.\n       \\<lbrakk>i \\<notin> {}; Ball {} ((dvd) i); i \\<in> I\\<rbrakk>\n       \\<Longrightarrow> ideal_generated I = ideal_generated (I - {})\n 2. \\<And>x F I.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>I.\n           \\<lbrakk>i \\<notin> F; Ball F ((dvd) i); i \\<in> I\\<rbrakk>\n           \\<Longrightarrow> ideal_generated I = ideal_generated (I - F);\n        i \\<notin> insert x F; Ball (insert x F) ((dvd) i);\n        i \\<in> I\\<rbrakk>\n       \\<Longrightarrow> ideal_generated I =\n                         ideal_generated (I - insert x F)", "case empty"], ["proof (state)\nthis:\n  i \\<notin> {}\n  \\<forall>a\\<in>{}. i dvd a\n  i \\<in> I\n\ngoal (2 subgoals):\n 1. \\<And>I.\n       \\<lbrakk>i \\<notin> {}; Ball {} ((dvd) i); i \\<in> I\\<rbrakk>\n       \\<Longrightarrow> ideal_generated I = ideal_generated (I - {})\n 2. \\<And>x F I.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>I.\n           \\<lbrakk>i \\<notin> F; Ball F ((dvd) i); i \\<in> I\\<rbrakk>\n           \\<Longrightarrow> ideal_generated I = ideal_generated (I - F);\n        i \\<notin> insert x F; Ball (insert x F) ((dvd) i);\n        i \\<in> I\\<rbrakk>\n       \\<Longrightarrow> ideal_generated I =\n                         ideal_generated (I - insert x F)", "then"], ["proof (chain)\npicking this:\n  i \\<notin> {}\n  \\<forall>a\\<in>{}. i dvd a\n  i \\<in> I", "show ?case"], ["proof (prove)\nusing this:\n  i \\<notin> {}\n  \\<forall>a\\<in>{}. i dvd a\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. ideal_generated I = ideal_generated (I - {})", "by auto"], ["proof (state)\nthis:\n  ideal_generated I = ideal_generated (I - {})\n\ngoal (1 subgoal):\n 1. \\<And>x F I.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>I.\n           \\<lbrakk>i \\<notin> F; Ball F ((dvd) i); i \\<in> I\\<rbrakk>\n           \\<Longrightarrow> ideal_generated I = ideal_generated (I - F);\n        i \\<notin> insert x F; Ball (insert x F) ((dvd) i);\n        i \\<in> I\\<rbrakk>\n       \\<Longrightarrow> ideal_generated I =\n                         ideal_generated (I - insert x F)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F I.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>I.\n           \\<lbrakk>i \\<notin> F; Ball F ((dvd) i); i \\<in> I\\<rbrakk>\n           \\<Longrightarrow> ideal_generated I = ideal_generated (I - F);\n        i \\<notin> insert x F; Ball (insert x F) ((dvd) i);\n        i \\<in> I\\<rbrakk>\n       \\<Longrightarrow> ideal_generated I =\n                         ideal_generated (I - insert x F)", "case (insert x J)"], ["proof (state)\nthis:\n  finite J\n  x \\<notin> J\n  \\<lbrakk>i \\<notin> J; \\<forall>a\\<in>J. i dvd a; i \\<in> ?I\\<rbrakk>\n  \\<Longrightarrow> ideal_generated ?I = ideal_generated (?I - J)\n  i \\<notin> insert x J\n  \\<forall>a\\<in>insert x J. i dvd a\n  i \\<in> I\n\ngoal (1 subgoal):\n 1. \\<And>x F I.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>I.\n           \\<lbrakk>i \\<notin> F; Ball F ((dvd) i); i \\<in> I\\<rbrakk>\n           \\<Longrightarrow> ideal_generated I = ideal_generated (I - F);\n        i \\<notin> insert x F; Ball (insert x F) ((dvd) i);\n        i \\<in> I\\<rbrakk>\n       \\<Longrightarrow> ideal_generated I =\n                         ideal_generated (I - insert x F)", "have \"ideal_generated I = ideal_generated (I-{x})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated I = ideal_generated (I - {x})", "by (rule ideal_generated_dvd_eq[of i], insert insert.prems , auto)"], ["proof (state)\nthis:\n  ideal_generated I = ideal_generated (I - {x})\n\ngoal (1 subgoal):\n 1. \\<And>x F I.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>I.\n           \\<lbrakk>i \\<notin> F; Ball F ((dvd) i); i \\<in> I\\<rbrakk>\n           \\<Longrightarrow> ideal_generated I = ideal_generated (I - F);\n        i \\<notin> insert x F; Ball (insert x F) ((dvd) i);\n        i \\<in> I\\<rbrakk>\n       \\<Longrightarrow> ideal_generated I =\n                         ideal_generated (I - insert x F)", "also"], ["proof (state)\nthis:\n  ideal_generated I = ideal_generated (I - {x})\n\ngoal (1 subgoal):\n 1. \\<And>x F I.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>I.\n           \\<lbrakk>i \\<notin> F; Ball F ((dvd) i); i \\<in> I\\<rbrakk>\n           \\<Longrightarrow> ideal_generated I = ideal_generated (I - F);\n        i \\<notin> insert x F; Ball (insert x F) ((dvd) i);\n        i \\<in> I\\<rbrakk>\n       \\<Longrightarrow> ideal_generated I =\n                         ideal_generated (I - insert x F)", "have \"... = ideal_generated ((I-{x}) - J)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated (I - {x}) = ideal_generated (I - {x} - J)", "by (rule insert.hyps, insert insert.prems insert.hyps, auto)"], ["proof (state)\nthis:\n  ideal_generated (I - {x}) = ideal_generated (I - {x} - J)\n\ngoal (1 subgoal):\n 1. \\<And>x F I.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>I.\n           \\<lbrakk>i \\<notin> F; Ball F ((dvd) i); i \\<in> I\\<rbrakk>\n           \\<Longrightarrow> ideal_generated I = ideal_generated (I - F);\n        i \\<notin> insert x F; Ball (insert x F) ((dvd) i);\n        i \\<in> I\\<rbrakk>\n       \\<Longrightarrow> ideal_generated I =\n                         ideal_generated (I - insert x F)", "also"], ["proof (state)\nthis:\n  ideal_generated (I - {x}) = ideal_generated (I - {x} - J)\n\ngoal (1 subgoal):\n 1. \\<And>x F I.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>I.\n           \\<lbrakk>i \\<notin> F; Ball F ((dvd) i); i \\<in> I\\<rbrakk>\n           \\<Longrightarrow> ideal_generated I = ideal_generated (I - F);\n        i \\<notin> insert x F; Ball (insert x F) ((dvd) i);\n        i \\<in> I\\<rbrakk>\n       \\<Longrightarrow> ideal_generated I =\n                         ideal_generated (I - insert x F)", "have \"... = ideal_generated (I - insert x J)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated (I - {x} - J) = ideal_generated (I - insert x J)", "using Diff_insert2[of I x J]"], ["proof (prove)\nusing this:\n  I - insert x J = I - {x} - J\n\ngoal (1 subgoal):\n 1. ideal_generated (I - {x} - J) = ideal_generated (I - insert x J)", "by auto"], ["proof (state)\nthis:\n  ideal_generated (I - {x} - J) = ideal_generated (I - insert x J)\n\ngoal (1 subgoal):\n 1. \\<And>x F I.\n       \\<lbrakk>finite F; x \\<notin> F;\n        \\<And>I.\n           \\<lbrakk>i \\<notin> F; Ball F ((dvd) i); i \\<in> I\\<rbrakk>\n           \\<Longrightarrow> ideal_generated I = ideal_generated (I - F);\n        i \\<notin> insert x F; Ball (insert x F) ((dvd) i);\n        i \\<in> I\\<rbrakk>\n       \\<Longrightarrow> ideal_generated I =\n                         ideal_generated (I - insert x F)", "finally"], ["proof (chain)\npicking this:\n  ideal_generated I = ideal_generated (I - insert x J)", "show ?case"], ["proof (prove)\nusing this:\n  ideal_generated I = ideal_generated (I - insert x J)\n\ngoal (1 subgoal):\n 1. ideal_generated I = ideal_generated (I - insert x J)", "."], ["proof (state)\nthis:\n  ideal_generated I = ideal_generated (I - insert x J)\n\ngoal:\nNo subgoals!", "qed"], ["", "context comm_ring_1\nbegin"], ["", "lemma ideal_generated_singleton_subset:\n  assumes d: \"d \\<in> ideal_generated S\" and fin_S: \"finite S\"\n  shows \"ideal_generated {d} \\<subseteq> ideal_generated S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated {d} \\<subseteq> ideal_generated S", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ideal_generated {d} \\<Longrightarrow>\n       x \\<in> ideal_generated S", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ideal_generated {d} \\<Longrightarrow>\n       x \\<in> ideal_generated S", "assume x: \"x \\<in> ideal_generated {d}\""], ["proof (state)\nthis:\n  x \\<in> ideal_generated {d}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ideal_generated {d} \\<Longrightarrow>\n       x \\<in> ideal_generated S", "obtain k where x_kd: \"x = k*d \""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k. x = k * d \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using x"], ["proof (prove)\nusing this:\n  x \\<in> ideal_generated {d}\n\ngoal (1 subgoal):\n 1. (\\<And>k. x = k * d \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using obtain_sum_ideal_generated[OF x]"], ["proof (prove)\nusing this:\n  x \\<in> ideal_generated {d}\n  \\<lbrakk>finite {d};\n   \\<And>f.\n      (\\<Sum>i\\<in>{d}. f i * i) = x \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>k. x = k * d \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (metis finite.emptyI finite.insertI sum_singleton)"], ["proof (state)\nthis:\n  x = k * d\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ideal_generated {d} \\<Longrightarrow>\n       x \\<in> ideal_generated S", "show \"x \\<in> ideal_generated S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> ideal_generated S", "using d ideal_eq_right_ideal ideal_ideal_generated right_ideal_def mult_commute x_kd"], ["proof (prove)\nusing this:\n  d \\<in> ideal_generated S\n  ideal ?I = right_ideal ?I\n  ideal (ideal_generated ?S)\n  right_ideal ?I =\n  (subgroup ?I \\<and> (\\<forall>x\\<in>?I. \\<forall>r. x * r \\<in> ?I))\n  ?a * ?b = ?b * ?a\n  x = k * d\n\ngoal (1 subgoal):\n 1. x \\<in> ideal_generated S", "by auto"], ["proof (state)\nthis:\n  x \\<in> ideal_generated S\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ideal_generated_singleton_dvd:\n  assumes i: \"ideal_generated S = ideal_generated {d}\" and x: \"x \\<in> S\"\n  shows \"d dvd x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d dvd x", "by (metis i x finite.intros dvd_ideal_generated_singleton\n      ideal_generated_in ideal_generated_singleton_subset)"], ["", "lemma ideal_generated_UNIV_insert:\n  assumes \"ideal_generated S = UNIV\"\n  shows \"ideal_generated (insert a S) = UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated (insert a S) = UNIV", "using assms"], ["proof (prove)\nusing this:\n  ideal_generated S = UNIV\n\ngoal (1 subgoal):\n 1. ideal_generated (insert a S) = UNIV", "using local.ideal_generated_subset"], ["proof (prove)\nusing this:\n  ideal_generated S = UNIV\n  ?S \\<subseteq> ?T \\<Longrightarrow>\n  ideal_generated ?S \\<subseteq> ideal_generated ?T\n\ngoal (1 subgoal):\n 1. ideal_generated (insert a S) = UNIV", "by blast"], ["", "lemma ideal_generated_UNIV_union:\n  assumes \"ideal_generated S = UNIV\"\n  shows \"ideal_generated (A \\<union> S) = UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated (A \\<union> S) = UNIV", "using assms local.ideal_generated_subset"], ["proof (prove)\nusing this:\n  ideal_generated S = UNIV\n  ?S \\<subseteq> ?T \\<Longrightarrow>\n  ideal_generated ?S \\<subseteq> ideal_generated ?T\n\ngoal (1 subgoal):\n 1. ideal_generated (A \\<union> S) = UNIV", "by (metis UNIV_I Un_subset_iff equalityI subsetI)"], ["", "lemma ideal_explicit2:\n  assumes \"finite S\"\n  shows \"ideal_generated S = {y. \\<exists>f. (\\<Sum>i\\<in>S. f i * i) = y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated S = {y. \\<exists>f. (\\<Sum>i\\<in>S. f i * i) = y}", "by (smt Collect_cong assms ideal_explicit obtain_sum_ideal_generated mem_Collect_eq subsetI)"], ["", "lemma ideal_generated_unit:\n  assumes u: \"u dvd 1\"\n  shows \"ideal_generated {u} = UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated {u} = UNIV", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ideal_generated {u} = UNIV", "have \"x \\<in> ideal_generated {u}\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> ideal_generated {u}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> ideal_generated {u}", "obtain inv_u where inv_u: \"inv_u * u = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>inv_u.\n        inv_u * u = (1::'a) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using u"], ["proof (prove)\nusing this:\n  u dvd (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<And>inv_u.\n        inv_u * u = (1::'a) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding dvd_def"], ["proof (prove)\nusing this:\n  \\<exists>k. (1::'a) = u * k\n\ngoal (1 subgoal):\n 1. (\\<And>inv_u.\n        inv_u * u = (1::'a) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using local.mult_ac(2)"], ["proof (prove)\nusing this:\n  \\<exists>k. (1::'a) = u * k\n  ?a * ?b = ?b * ?a\n\ngoal (1 subgoal):\n 1. (\\<And>inv_u.\n        inv_u * u = (1::'a) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  inv_u * u = (1::'a)\n\ngoal (1 subgoal):\n 1. x \\<in> ideal_generated {u}", "have \"x = x * inv_u * u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = x * inv_u * u", "using inv_u"], ["proof (prove)\nusing this:\n  inv_u * u = (1::'a)\n\ngoal (1 subgoal):\n 1. x = x * inv_u * u", "by (simp add: local.mult_ac(1))"], ["proof (state)\nthis:\n  x = x * inv_u * u\n\ngoal (1 subgoal):\n 1. x \\<in> ideal_generated {u}", "also"], ["proof (state)\nthis:\n  x = x * inv_u * u\n\ngoal (1 subgoal):\n 1. x \\<in> ideal_generated {u}", "have \"... \\<in> {k * u |k. k \\<in> UNIV}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * inv_u * u \\<in> {k * u |k. k \\<in> UNIV}", "by auto"], ["proof (state)\nthis:\n  x * inv_u * u \\<in> {k * u |k. k \\<in> UNIV}\n\ngoal (1 subgoal):\n 1. x \\<in> ideal_generated {u}", "also"], ["proof (state)\nthis:\n  x * inv_u * u \\<in> {k * u |k. k \\<in> UNIV}\n\ngoal (1 subgoal):\n 1. x \\<in> ideal_generated {u}", "have \"... = ideal_generated {u}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {k * u |k. k \\<in> UNIV} = ideal_generated {u}", "unfolding ideal_generated_singleton"], ["proof (prove)\ngoal (1 subgoal):\n 1. {k * u |k. k \\<in> UNIV} = {k * u |k. k \\<in> UNIV}", "by simp"], ["proof (state)\nthis:\n  {k * u |k. k \\<in> UNIV} = ideal_generated {u}\n\ngoal (1 subgoal):\n 1. x \\<in> ideal_generated {u}", "finally"], ["proof (chain)\npicking this:\n  x \\<in> ideal_generated {u}", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<in> ideal_generated {u}\n\ngoal (1 subgoal):\n 1. x \\<in> ideal_generated {u}", "."], ["proof (state)\nthis:\n  x \\<in> ideal_generated {u}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x1 \\<in> ideal_generated {u}\n\ngoal (1 subgoal):\n 1. ideal_generated {u} = UNIV", "thus ?thesis"], ["proof (prove)\nusing this:\n  ?x1 \\<in> ideal_generated {u}\n\ngoal (1 subgoal):\n 1. ideal_generated {u} = UNIV", "by auto"], ["proof (state)\nthis:\n  ideal_generated {u} = UNIV\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ideal_generated_dvd_subset:\n  assumes x: \"\\<forall>x \\<in> S. d dvd x\" and S: \"finite S\"\n  shows \"ideal_generated S \\<subseteq> ideal_generated {d}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated S \\<subseteq> ideal_generated {d}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ideal_generated S \\<Longrightarrow>\n       x \\<in> ideal_generated {d}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ideal_generated S \\<Longrightarrow>\n       x \\<in> ideal_generated {d}", "assume \"x\\<in> ideal_generated S\""], ["proof (state)\nthis:\n  x \\<in> ideal_generated S\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ideal_generated S \\<Longrightarrow>\n       x \\<in> ideal_generated {d}", "from this"], ["proof (chain)\npicking this:\n  x \\<in> ideal_generated S", "obtain f where f: \"(\\<Sum>i\\<in>S. f i * i) = x\""], ["proof (prove)\nusing this:\n  x \\<in> ideal_generated S\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        (\\<Sum>i\\<in>S. f i * i) = x \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using ideal_explicit2[OF S]"], ["proof (prove)\nusing this:\n  x \\<in> ideal_generated S\n  ideal_generated S = {y. \\<exists>f. (\\<Sum>i\\<in>S. f i * i) = y}\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        (\\<Sum>i\\<in>S. f i * i) = x \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>S. f i * i) = x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ideal_generated S \\<Longrightarrow>\n       x \\<in> ideal_generated {d}", "have \"d dvd (\\<Sum>i\\<in>S. f i * i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d dvd (\\<Sum>i\\<in>S. f i * i)", "by (rule dvd_sum, insert x, auto)"], ["proof (state)\nthis:\n  d dvd (\\<Sum>i\\<in>S. f i * i)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ideal_generated S \\<Longrightarrow>\n       x \\<in> ideal_generated {d}", "thus \"x \\<in> ideal_generated {d}\""], ["proof (prove)\nusing this:\n  d dvd (\\<Sum>i\\<in>S. f i * i)\n\ngoal (1 subgoal):\n 1. x \\<in> ideal_generated {d}", "using f dvd_ideal_generated_singleton' ideal_generated_in singletonI"], ["proof (prove)\nusing this:\n  d dvd (\\<Sum>i\\<in>S. f i * i)\n  (\\<Sum>i\\<in>S. f i * i) = x\n  ?b dvd ?a \\<Longrightarrow>\n  ideal_generated {?a} \\<subseteq> ideal_generated {?b}\n  ?a \\<in> ?A \\<Longrightarrow> ?a \\<in> ideal_generated ?A\n  ?a \\<in> {?a}\n\ngoal (1 subgoal):\n 1. x \\<in> ideal_generated {d}", "by blast"], ["proof (state)\nthis:\n  x \\<in> ideal_generated {d}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ideal_generated_mult_unit:\n  assumes f: \"finite S\" and u: \"u dvd 1\"\n  shows \"ideal_generated ((\\<lambda>x. u*x)` S) = ideal_generated S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated ((*) u ` S) = ideal_generated S", "using f"], ["proof (prove)\nusing this:\n  finite S\n\ngoal (1 subgoal):\n 1. ideal_generated ((*) u ` S) = ideal_generated S", "proof (induct S)"], ["proof (state)\ngoal (2 subgoals):\n 1. ideal_generated ((*) u ` {}) = ideal_generated {}\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        ideal_generated ((*) u ` F) = ideal_generated F\\<rbrakk>\n       \\<Longrightarrow> ideal_generated ((*) u ` insert x F) =\n                         ideal_generated (insert x F)", "case empty"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. ideal_generated ((*) u ` {}) = ideal_generated {}\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        ideal_generated ((*) u ` F) = ideal_generated F\\<rbrakk>\n       \\<Longrightarrow> ideal_generated ((*) u ` insert x F) =\n                         ideal_generated (insert x F)", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated ((*) u ` {}) = ideal_generated {}", "by auto"], ["proof (state)\nthis:\n  ideal_generated ((*) u ` {}) = ideal_generated {}\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        ideal_generated ((*) u ` F) = ideal_generated F\\<rbrakk>\n       \\<Longrightarrow> ideal_generated ((*) u ` insert x F) =\n                         ideal_generated (insert x F)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        ideal_generated ((*) u ` F) = ideal_generated F\\<rbrakk>\n       \\<Longrightarrow> ideal_generated ((*) u ` insert x F) =\n                         ideal_generated (insert x F)", "case (insert x S)"], ["proof (state)\nthis:\n  finite S\n  x \\<notin> S\n  ideal_generated ((*) u ` S) = ideal_generated S\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        ideal_generated ((*) u ` F) = ideal_generated F\\<rbrakk>\n       \\<Longrightarrow> ideal_generated ((*) u ` insert x F) =\n                         ideal_generated (insert x F)", "obtain inv_u where inv_u: \"inv_u * u = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>inv_u.\n        inv_u * u = (1::'a) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using u"], ["proof (prove)\nusing this:\n  u dvd (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<And>inv_u.\n        inv_u * u = (1::'a) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding dvd_def"], ["proof (prove)\nusing this:\n  \\<exists>k. (1::'a) = u * k\n\ngoal (1 subgoal):\n 1. (\\<And>inv_u.\n        inv_u * u = (1::'a) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using mult_ac"], ["proof (prove)\nusing this:\n  \\<exists>k. (1::'a) = u * k\n  ?a * ?b * ?c = ?a * (?b * ?c)\n  ?a * ?b = ?b * ?a\n  ?b * (?a * ?c) = ?a * (?b * ?c)\n\ngoal (1 subgoal):\n 1. (\\<And>inv_u.\n        inv_u * u = (1::'a) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  inv_u * u = (1::'a)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        ideal_generated ((*) u ` F) = ideal_generated F\\<rbrakk>\n       \\<Longrightarrow> ideal_generated ((*) u ` insert x F) =\n                         ideal_generated (insert x F)", "have f: \"finite (insert (u*x) ((\\<lambda>x. u*x)` S))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (insert (u * x) ((*) u ` S))", "using insert.hyps"], ["proof (prove)\nusing this:\n  finite S\n  x \\<notin> S\n  ideal_generated ((*) u ` S) = ideal_generated S\n\ngoal (1 subgoal):\n 1. finite (insert (u * x) ((*) u ` S))", "by auto"], ["proof (state)\nthis:\n  finite (insert (u * x) ((*) u ` S))\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        ideal_generated ((*) u ` F) = ideal_generated F\\<rbrakk>\n       \\<Longrightarrow> ideal_generated ((*) u ` insert x F) =\n                         ideal_generated (insert x F)", "have f2: \"finite (insert x S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite (insert x S)", "by (simp add: insert(1))"], ["proof (state)\nthis:\n  finite (insert x S)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        ideal_generated ((*) u ` F) = ideal_generated F\\<rbrakk>\n       \\<Longrightarrow> ideal_generated ((*) u ` insert x F) =\n                         ideal_generated (insert x F)", "have f3: \"finite S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite S", "by (simp add: insert)"], ["proof (state)\nthis:\n  finite S\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        ideal_generated ((*) u ` F) = ideal_generated F\\<rbrakk>\n       \\<Longrightarrow> ideal_generated ((*) u ` insert x F) =\n                         ideal_generated (insert x F)", "have f4: \"finite ((*) u ` S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite ((*) u ` S)", "by (simp add: insert)"], ["proof (state)\nthis:\n  finite ((*) u ` S)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        ideal_generated ((*) u ` F) = ideal_generated F\\<rbrakk>\n       \\<Longrightarrow> ideal_generated ((*) u ` insert x F) =\n                         ideal_generated (insert x F)", "have inj_ux: \"inj_on (\\<lambda>x. u*x) S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on ((*) u) S", "unfolding inj_on_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>S.\n       \\<forall>y\\<in>S. u * x = u * y \\<longrightarrow> x = y", "by (auto, metis inv_u local.mult_1_left local.semiring_normalization_rules(18))"], ["proof (state)\nthis:\n  inj_on ((*) u) S\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        ideal_generated ((*) u ` F) = ideal_generated F\\<rbrakk>\n       \\<Longrightarrow> ideal_generated ((*) u ` insert x F) =\n                         ideal_generated (insert x F)", "have \"ideal_generated ((\\<lambda>x. u*x)` (insert x S)) = ideal_generated (insert (u*x) ((\\<lambda>x. u*x)` S))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated ((*) u ` insert x S) =\n    ideal_generated (insert (u * x) ((*) u ` S))", "by auto"], ["proof (state)\nthis:\n  ideal_generated ((*) u ` insert x S) =\n  ideal_generated (insert (u * x) ((*) u ` S))\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        ideal_generated ((*) u ` F) = ideal_generated F\\<rbrakk>\n       \\<Longrightarrow> ideal_generated ((*) u ` insert x F) =\n                         ideal_generated (insert x F)", "also"], ["proof (state)\nthis:\n  ideal_generated ((*) u ` insert x S) =\n  ideal_generated (insert (u * x) ((*) u ` S))\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        ideal_generated ((*) u ` F) = ideal_generated F\\<rbrakk>\n       \\<Longrightarrow> ideal_generated ((*) u ` insert x F) =\n                         ideal_generated (insert x F)", "have \"... = {y. \\<exists>f. (\\<Sum>i\\<in>insert (u*x) ((\\<lambda>x. u*x)` S). f i * i) = y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated (insert (u * x) ((*) u ` S)) =\n    {y. \\<exists>f. (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y}", "using ideal_explicit2[OF f]"], ["proof (prove)\nusing this:\n  ideal_generated (insert (u * x) ((*) u ` S)) =\n  {y. \\<exists>f. (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y}\n\ngoal (1 subgoal):\n 1. ideal_generated (insert (u * x) ((*) u ` S)) =\n    {y. \\<exists>f. (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y}", "by auto"], ["proof (state)\nthis:\n  ideal_generated (insert (u * x) ((*) u ` S)) =\n  {y. \\<exists>f. (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y}\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        ideal_generated ((*) u ` F) = ideal_generated F\\<rbrakk>\n       \\<Longrightarrow> ideal_generated ((*) u ` insert x F) =\n                         ideal_generated (insert x F)", "also"], ["proof (state)\nthis:\n  ideal_generated (insert (u * x) ((*) u ` S)) =\n  {y. \\<exists>f. (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y}\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        ideal_generated ((*) u ` F) = ideal_generated F\\<rbrakk>\n       \\<Longrightarrow> ideal_generated ((*) u ` insert x F) =\n                         ideal_generated (insert x F)", "have \"... = {y. \\<exists>f. (\\<Sum>i\\<in>(insert x S). f i * i) = y}\" (is \"?L = ?R\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. {y. \\<exists>f. (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y} =\n    {y. \\<exists>f. (\\<Sum>i\\<in>insert x S. f i * i) = y}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. {y. \\<exists>f. (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y} =\n    {y. \\<exists>f. (\\<Sum>i\\<in>insert x S. f i * i) = y}", "have \"a \\<in> ?L\"  if a: \"a \\<in> ?R\" for a"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f.\n                   (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f.\n                   (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y}", "obtain f where sum_rw: \"(\\<Sum>i\\<in>(insert x S). f i * i) = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>f.\n        (\\<Sum>i\\<in>insert x S. f i * i) = a \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using a"], ["proof (prove)\nusing this:\n  a \\<in> {y. \\<exists>f. (\\<Sum>i\\<in>insert x S. f i * i) = y}\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        (\\<Sum>i\\<in>insert x S. f i * i) = a \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>insert x S. f i * i) = a\n\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f.\n                   (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y}", "define b where \"b=(\\<Sum>i\\<in>S. f i * i)\""], ["proof (state)\nthis:\n  b = (\\<Sum>i\\<in>S. f i * i)\n\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f.\n                   (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y}", "have \"b \\<in> ideal_generated S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<in> ideal_generated S", "unfolding b_def ideal_explicit2[OF f3]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>S. f i * i)\n    \\<in> {y. \\<exists>f. (\\<Sum>i\\<in>S. f i * i) = y}", "by auto"], ["proof (state)\nthis:\n  b \\<in> ideal_generated S\n\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f.\n                   (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y}", "hence \"b \\<in> ideal_generated ((*) u ` S)\""], ["proof (prove)\nusing this:\n  b \\<in> ideal_generated S\n\ngoal (1 subgoal):\n 1. b \\<in> ideal_generated ((*) u ` S)", "using insert.hyps(3)"], ["proof (prove)\nusing this:\n  b \\<in> ideal_generated S\n  ideal_generated ((*) u ` S) = ideal_generated S\n\ngoal (1 subgoal):\n 1. b \\<in> ideal_generated ((*) u ` S)", "by auto"], ["proof (state)\nthis:\n  b \\<in> ideal_generated ((*) u ` S)\n\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f.\n                   (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y}", "from this"], ["proof (chain)\npicking this:\n  b \\<in> ideal_generated ((*) u ` S)", "obtain g where \"(\\<Sum>i\\<in>((*) u ` S). g i * i) = b\""], ["proof (prove)\nusing this:\n  b \\<in> ideal_generated ((*) u ` S)\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        (\\<Sum>i\\<in>(*) u ` S. g i * i) = b \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding ideal_explicit2[OF f4]"], ["proof (prove)\nusing this:\n  b \\<in> {y. \\<exists>f. (\\<Sum>i\\<in>(*) u ` S. f i * i) = y}\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        (\\<Sum>i\\<in>(*) u ` S. g i * i) = b \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>(*) u ` S. g i * i) = b\n\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f.\n                   (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y}", "hence sum_rw2: \"(\\<Sum>i\\<in>S. f i * i) = (\\<Sum>i\\<in>((*) u ` S). g i * i)\""], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>(*) u ` S. g i * i) = b\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>S. f i * i) = (\\<Sum>i\\<in>(*) u ` S. g i * i)", "unfolding b_def"], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>(*) u ` S. g i * i) = (\\<Sum>i\\<in>S. f i * i)\n\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>S. f i * i) = (\\<Sum>i\\<in>(*) u ` S. g i * i)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>S. f i * i) = (\\<Sum>i\\<in>(*) u ` S. g i * i)\n\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f.\n                   (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y}", "let ?g = \"\\<lambda>i. if i = u*x then f x * inv_u else g i\""], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f.\n                   (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y}", "have sum_rw3: \"sum ((\\<lambda>i. g i * i) \\<circ> (\\<lambda>x. u*x)) S = sum ((\\<lambda>i. ?g i * i) \\<circ> (\\<lambda>x. u*x)) S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum ((\\<lambda>i. g i * i) \\<circ> (*) u) S =\n    sum ((\\<lambda>i. (if i = u * x then f x * inv_u else g i) * i) \\<circ>\n         (*) u)\n     S", "by (rule sum.cong, auto, metis inv_u local.insert(2) local.mult_1_right\n              local.mult_ac(2) local.semiring_normalization_rules(18))"], ["proof (state)\nthis:\n  sum ((\\<lambda>i. g i * i) \\<circ> (*) u) S =\n  sum ((\\<lambda>i. (if i = u * x then f x * inv_u else g i) * i) \\<circ>\n       (*) u)\n   S\n\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f.\n                   (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y}", "have sum_rw4: \"(\\<Sum>i\\<in>(\\<lambda>x. u*x)` S. g i * i) = sum ((\\<lambda>i. g i * i) \\<circ> (\\<lambda>x. u*x)) S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>(*) u ` S. g i * i) =\n    sum ((\\<lambda>i. g i * i) \\<circ> (*) u) S", "by (rule sum.reindex[OF inj_ux])"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>(*) u ` S. g i * i) =\n  sum ((\\<lambda>i. g i * i) \\<circ> (*) u) S\n\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f.\n                   (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y}", "have \"a = f x * x + (\\<Sum>i\\<in>S. f i * i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a = f x * x + (\\<Sum>i\\<in>S. f i * i)", "using sum_rw local.insert(1) local.insert(2)"], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>insert x S. f i * i) = a\n  finite S\n  x \\<notin> S\n\ngoal (1 subgoal):\n 1. a = f x * x + (\\<Sum>i\\<in>S. f i * i)", "by auto"], ["proof (state)\nthis:\n  a = f x * x + (\\<Sum>i\\<in>S. f i * i)\n\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f.\n                   (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y}", "also"], ["proof (state)\nthis:\n  a = f x * x + (\\<Sum>i\\<in>S. f i * i)\n\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f.\n                   (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y}", "have \"... = f x * x + (\\<Sum>i\\<in>(\\<lambda>x. u*x)` S. g i * i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f x * x + (\\<Sum>i\\<in>S. f i * i) =\n    f x * x + (\\<Sum>i\\<in>(*) u ` S. g i * i)", "using sum_rw2"], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>S. f i * i) = (\\<Sum>i\\<in>(*) u ` S. g i * i)\n\ngoal (1 subgoal):\n 1. f x * x + (\\<Sum>i\\<in>S. f i * i) =\n    f x * x + (\\<Sum>i\\<in>(*) u ` S. g i * i)", "by auto"], ["proof (state)\nthis:\n  f x * x + (\\<Sum>i\\<in>S. f i * i) =\n  f x * x + (\\<Sum>i\\<in>(*) u ` S. g i * i)\n\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f.\n                   (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y}", "also"], ["proof (state)\nthis:\n  f x * x + (\\<Sum>i\\<in>S. f i * i) =\n  f x * x + (\\<Sum>i\\<in>(*) u ` S. g i * i)\n\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f.\n                   (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y}", "have \"... = ?g (u * x) * (u * x) + (\\<Sum>i\\<in>(\\<lambda>x. u*x)` S. g i * i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f x * x + (\\<Sum>i\\<in>(*) u ` S. g i * i) =\n    (if u * x = u * x then f x * inv_u else g (u * x)) * (u * x) +\n    (\\<Sum>i\\<in>(*) u ` S. g i * i)", "using inv_u"], ["proof (prove)\nusing this:\n  inv_u * u = (1::'a)\n\ngoal (1 subgoal):\n 1. f x * x + (\\<Sum>i\\<in>(*) u ` S. g i * i) =\n    (if u * x = u * x then f x * inv_u else g (u * x)) * (u * x) +\n    (\\<Sum>i\\<in>(*) u ` S. g i * i)", "by (smt local.mult_1_right local.mult_ac(1))"], ["proof (state)\nthis:\n  f x * x + (\\<Sum>i\\<in>(*) u ` S. g i * i) =\n  (if u * x = u * x then f x * inv_u else g (u * x)) * (u * x) +\n  (\\<Sum>i\\<in>(*) u ` S. g i * i)\n\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f.\n                   (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y}", "also"], ["proof (state)\nthis:\n  f x * x + (\\<Sum>i\\<in>(*) u ` S. g i * i) =\n  (if u * x = u * x then f x * inv_u else g (u * x)) * (u * x) +\n  (\\<Sum>i\\<in>(*) u ` S. g i * i)\n\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f.\n                   (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y}", "have \"... =  ?g (u * x) * (u * x) + sum ((\\<lambda>i. g i * i) \\<circ> (\\<lambda>x. u*x)) S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (if u * x = u * x then f x * inv_u else g (u * x)) * (u * x) +\n    (\\<Sum>i\\<in>(*) u ` S. g i * i) =\n    (if u * x = u * x then f x * inv_u else g (u * x)) * (u * x) +\n    sum ((\\<lambda>i. g i * i) \\<circ> (*) u) S", "using sum_rw4"], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>(*) u ` S. g i * i) =\n  sum ((\\<lambda>i. g i * i) \\<circ> (*) u) S\n\ngoal (1 subgoal):\n 1. (if u * x = u * x then f x * inv_u else g (u * x)) * (u * x) +\n    (\\<Sum>i\\<in>(*) u ` S. g i * i) =\n    (if u * x = u * x then f x * inv_u else g (u * x)) * (u * x) +\n    sum ((\\<lambda>i. g i * i) \\<circ> (*) u) S", "by auto"], ["proof (state)\nthis:\n  (if u * x = u * x then f x * inv_u else g (u * x)) * (u * x) +\n  (\\<Sum>i\\<in>(*) u ` S. g i * i) =\n  (if u * x = u * x then f x * inv_u else g (u * x)) * (u * x) +\n  sum ((\\<lambda>i. g i * i) \\<circ> (*) u) S\n\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f.\n                   (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y}", "also"], ["proof (state)\nthis:\n  (if u * x = u * x then f x * inv_u else g (u * x)) * (u * x) +\n  (\\<Sum>i\\<in>(*) u ` S. g i * i) =\n  (if u * x = u * x then f x * inv_u else g (u * x)) * (u * x) +\n  sum ((\\<lambda>i. g i * i) \\<circ> (*) u) S\n\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f.\n                   (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y}", "have \"... = ((\\<lambda>i. ?g i * i) \\<circ> (\\<lambda>x. u*x)) x + sum ((\\<lambda>i. g i * i) \\<circ> (\\<lambda>x. u*x)) S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (if u * x = u * x then f x * inv_u else g (u * x)) * (u * x) +\n    sum ((\\<lambda>i. g i * i) \\<circ> (*) u) S =\n    ((\\<lambda>i. (if i = u * x then f x * inv_u else g i) * i) \\<circ>\n     (*) u)\n     x +\n    sum ((\\<lambda>i. g i * i) \\<circ> (*) u) S", "by auto"], ["proof (state)\nthis:\n  (if u * x = u * x then f x * inv_u else g (u * x)) * (u * x) +\n  sum ((\\<lambda>i. g i * i) \\<circ> (*) u) S =\n  ((\\<lambda>i. (if i = u * x then f x * inv_u else g i) * i) \\<circ> (*) u)\n   x +\n  sum ((\\<lambda>i. g i * i) \\<circ> (*) u) S\n\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f.\n                   (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y}", "also"], ["proof (state)\nthis:\n  (if u * x = u * x then f x * inv_u else g (u * x)) * (u * x) +\n  sum ((\\<lambda>i. g i * i) \\<circ> (*) u) S =\n  ((\\<lambda>i. (if i = u * x then f x * inv_u else g i) * i) \\<circ> (*) u)\n   x +\n  sum ((\\<lambda>i. g i * i) \\<circ> (*) u) S\n\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f.\n                   (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y}", "have \"... = ((\\<lambda>i. ?g i * i) \\<circ> (\\<lambda>x. u*x)) x + sum ((\\<lambda>i. ?g i * i) \\<circ> (\\<lambda>x. u*x)) S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>i. (if i = u * x then f x * inv_u else g i) * i) \\<circ>\n     (*) u)\n     x +\n    sum ((\\<lambda>i. g i * i) \\<circ> (*) u) S =\n    ((\\<lambda>i. (if i = u * x then f x * inv_u else g i) * i) \\<circ>\n     (*) u)\n     x +\n    sum ((\\<lambda>i. (if i = u * x then f x * inv_u else g i) * i) \\<circ>\n         (*) u)\n     S", "using sum_rw3"], ["proof (prove)\nusing this:\n  sum ((\\<lambda>i. g i * i) \\<circ> (*) u) S =\n  sum ((\\<lambda>i. (if i = u * x then f x * inv_u else g i) * i) \\<circ>\n       (*) u)\n   S\n\ngoal (1 subgoal):\n 1. ((\\<lambda>i. (if i = u * x then f x * inv_u else g i) * i) \\<circ>\n     (*) u)\n     x +\n    sum ((\\<lambda>i. g i * i) \\<circ> (*) u) S =\n    ((\\<lambda>i. (if i = u * x then f x * inv_u else g i) * i) \\<circ>\n     (*) u)\n     x +\n    sum ((\\<lambda>i. (if i = u * x then f x * inv_u else g i) * i) \\<circ>\n         (*) u)\n     S", "by auto"], ["proof (state)\nthis:\n  ((\\<lambda>i. (if i = u * x then f x * inv_u else g i) * i) \\<circ> (*) u)\n   x +\n  sum ((\\<lambda>i. g i * i) \\<circ> (*) u) S =\n  ((\\<lambda>i. (if i = u * x then f x * inv_u else g i) * i) \\<circ> (*) u)\n   x +\n  sum ((\\<lambda>i. (if i = u * x then f x * inv_u else g i) * i) \\<circ>\n       (*) u)\n   S\n\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f.\n                   (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y}", "also"], ["proof (state)\nthis:\n  ((\\<lambda>i. (if i = u * x then f x * inv_u else g i) * i) \\<circ> (*) u)\n   x +\n  sum ((\\<lambda>i. g i * i) \\<circ> (*) u) S =\n  ((\\<lambda>i. (if i = u * x then f x * inv_u else g i) * i) \\<circ> (*) u)\n   x +\n  sum ((\\<lambda>i. (if i = u * x then f x * inv_u else g i) * i) \\<circ>\n       (*) u)\n   S\n\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f.\n                   (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y}", "have \"... = sum ((\\<lambda>i. ?g i * i) \\<circ> (\\<lambda>x. u*x)) (insert x S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<lambda>i. (if i = u * x then f x * inv_u else g i) * i) \\<circ>\n     (*) u)\n     x +\n    sum ((\\<lambda>i. (if i = u * x then f x * inv_u else g i) * i) \\<circ>\n         (*) u)\n     S =\n    sum ((\\<lambda>i. (if i = u * x then f x * inv_u else g i) * i) \\<circ>\n         (*) u)\n     (insert x S)", "by (rule sum.insert[symmetric], auto simp add: insert)"], ["proof (state)\nthis:\n  ((\\<lambda>i. (if i = u * x then f x * inv_u else g i) * i) \\<circ> (*) u)\n   x +\n  sum ((\\<lambda>i. (if i = u * x then f x * inv_u else g i) * i) \\<circ>\n       (*) u)\n   S =\n  sum ((\\<lambda>i. (if i = u * x then f x * inv_u else g i) * i) \\<circ>\n       (*) u)\n   (insert x S)\n\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f.\n                   (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y}", "also"], ["proof (state)\nthis:\n  ((\\<lambda>i. (if i = u * x then f x * inv_u else g i) * i) \\<circ> (*) u)\n   x +\n  sum ((\\<lambda>i. (if i = u * x then f x * inv_u else g i) * i) \\<circ>\n       (*) u)\n   S =\n  sum ((\\<lambda>i. (if i = u * x then f x * inv_u else g i) * i) \\<circ>\n       (*) u)\n   (insert x S)\n\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f.\n                   (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y}", "have \"... = (\\<Sum>i\\<in>insert (u * x) ((\\<lambda>x. u*x)` S). ?g i * i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum ((\\<lambda>i. (if i = u * x then f x * inv_u else g i) * i) \\<circ>\n         (*) u)\n     (insert x S) =\n    (\\<Sum>i\\<in>insert (u * x) ((*) u ` S).\n       (if i = u * x then f x * inv_u else g i) * i)", "by (smt abel_semigroup.commute f2 image_insert inv_u mult.abel_semigroup_axioms mult_1_right\n            semiring_normalization_rules(18) sum.reindex_nontrivial)"], ["proof (state)\nthis:\n  sum ((\\<lambda>i. (if i = u * x then f x * inv_u else g i) * i) \\<circ>\n       (*) u)\n   (insert x S) =\n  (\\<Sum>i\\<in>insert (u * x) ((*) u ` S).\n     (if i = u * x then f x * inv_u else g i) * i)\n\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f.\n                   (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y}", "also"], ["proof (state)\nthis:\n  sum ((\\<lambda>i. (if i = u * x then f x * inv_u else g i) * i) \\<circ>\n       (*) u)\n   (insert x S) =\n  (\\<Sum>i\\<in>insert (u * x) ((*) u ` S).\n     (if i = u * x then f x * inv_u else g i) * i)\n\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f.\n                   (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y}", "have \"... = (\\<Sum>i\\<in>(\\<lambda>x. u*x)` (insert x S). ?g i * i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>insert (u * x) ((*) u ` S).\n       (if i = u * x then f x * inv_u else g i) * i) =\n    (\\<Sum>i\\<in>(*) u ` insert x S.\n       (if i = u * x then f x * inv_u else g i) * i)", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>insert (u * x) ((*) u ` S).\n     (if i = u * x then f x * inv_u else g i) * i) =\n  (\\<Sum>i\\<in>(*) u ` insert x S.\n     (if i = u * x then f x * inv_u else g i) * i)\n\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f.\n                   (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y}", "finally"], ["proof (chain)\npicking this:\n  a =\n  (\\<Sum>i\\<in>(*) u ` insert x S.\n     (if i = u * x then f x * inv_u else g i) * i)", "show ?thesis"], ["proof (prove)\nusing this:\n  a =\n  (\\<Sum>i\\<in>(*) u ` insert x S.\n     (if i = u * x then f x * inv_u else g i) * i)\n\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f.\n                   (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y}", "by auto"], ["proof (state)\nthis:\n  a \\<in> {y. \\<exists>f.\n                 (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?a1\n  \\<in> {y. \\<exists>f.\n               (\\<Sum>i\\<in>insert x S. f i * i) = y} \\<Longrightarrow>\n  ?a1\n  \\<in> {y. \\<exists>f.\n               (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y}\n\ngoal (1 subgoal):\n 1. {y. \\<exists>f. (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y} =\n    {y. \\<exists>f. (\\<Sum>i\\<in>insert x S. f i * i) = y}", "moreover"], ["proof (state)\nthis:\n  ?a1\n  \\<in> {y. \\<exists>f.\n               (\\<Sum>i\\<in>insert x S. f i * i) = y} \\<Longrightarrow>\n  ?a1\n  \\<in> {y. \\<exists>f.\n               (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y}\n\ngoal (1 subgoal):\n 1. {y. \\<exists>f. (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y} =\n    {y. \\<exists>f. (\\<Sum>i\\<in>insert x S. f i * i) = y}", "have \"a \\<in> ?R\" if a: \"a \\<in> ?L\" for a"], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f. (\\<Sum>i\\<in>insert x S. f i * i) = y}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f. (\\<Sum>i\\<in>insert x S. f i * i) = y}", "obtain f where sum_rw: \"(\\<Sum>i\\<in>(insert (u * x) ((*) u ` S)). f i * i) = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>f.\n        (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) =\n        a \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using a"], ["proof (prove)\nusing this:\n  a \\<in> {y. \\<exists>f.\n                 (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y}\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) =\n        a \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = a\n\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f. (\\<Sum>i\\<in>insert x S. f i * i) = y}", "have ux_notin: \"u*x \\<notin> ((*) u ` S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u * x \\<notin> (*) u ` S", "by (metis UNIV_I inj_on_image_mem_iff inj_on_inverseI inv_u local.insert(2) local.mult_1_left\n            local.semiring_normalization_rules(18) subsetI)"], ["proof (state)\nthis:\n  u * x \\<notin> (*) u ` S\n\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f. (\\<Sum>i\\<in>insert x S. f i * i) = y}", "let ?f = \"(\\<lambda>x. f x * x)\""], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f. (\\<Sum>i\\<in>insert x S. f i * i) = y}", "have \"sum ?f ((*) u ` S) \\<in> ideal_generated ((*) u ` S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>(*) u ` S. f x * x) \\<in> ideal_generated ((*) u ` S)", "unfolding ideal_explicit2[OF f4]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>(*) u ` S. f x * x)\n    \\<in> {y. \\<exists>f. (\\<Sum>i\\<in>(*) u ` S. f i * i) = y}", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>x\\<in>(*) u ` S. f x * x) \\<in> ideal_generated ((*) u ` S)\n\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f. (\\<Sum>i\\<in>insert x S. f i * i) = y}", "from this"], ["proof (chain)\npicking this:\n  (\\<Sum>x\\<in>(*) u ` S. f x * x) \\<in> ideal_generated ((*) u ` S)", "obtain g where sum_rw1: \"sum (\\<lambda>i. g i * i) S = sum ?f (((*) u ` S))\""], ["proof (prove)\nusing this:\n  (\\<Sum>x\\<in>(*) u ` S. f x * x) \\<in> ideal_generated ((*) u ` S)\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        (\\<Sum>i\\<in>S. g i * i) =\n        (\\<Sum>x\\<in>(*) u ` S. f x * x) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using insert.hyps(3)"], ["proof (prove)\nusing this:\n  (\\<Sum>x\\<in>(*) u ` S. f x * x) \\<in> ideal_generated ((*) u ` S)\n  ideal_generated ((*) u ` S) = ideal_generated S\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        (\\<Sum>i\\<in>S. g i * i) =\n        (\\<Sum>x\\<in>(*) u ` S. f x * x) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding ideal_explicit2[OF f3]"], ["proof (prove)\nusing this:\n  (\\<Sum>x\\<in>(*) u ` S. f x * x) \\<in> ideal_generated ((*) u ` S)\n  ideal_generated ((*) u ` S) =\n  {y. \\<exists>f. (\\<Sum>i\\<in>S. f i * i) = y}\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        (\\<Sum>i\\<in>S. g i * i) =\n        (\\<Sum>x\\<in>(*) u ` S. f x * x) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>S. g i * i) = (\\<Sum>x\\<in>(*) u ` S. f x * x)\n\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f. (\\<Sum>i\\<in>insert x S. f i * i) = y}", "let ?g = \"(\\<lambda>i. if i = x  then (f (u*x) *u) * x else g i * i)\""], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f. (\\<Sum>i\\<in>insert x S. f i * i) = y}", "let ?g' = \"\\<lambda>i. if i = x  then f (u*x) * u else g i\""], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f. (\\<Sum>i\\<in>insert x S. f i * i) = y}", "have sum_rw2: \"sum (\\<lambda>i. g i * i) S = sum ?g S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>S. g i * i) =\n    (\\<Sum>i\\<in>S. if i = x then f (u * x) * u * x else g i * i)", "by (rule sum.cong, insert inj_ux ux_notin, auto)"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>S. g i * i) =\n  (\\<Sum>i\\<in>S. if i = x then f (u * x) * u * x else g i * i)\n\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f. (\\<Sum>i\\<in>insert x S. f i * i) = y}", "have \"a = (\\<Sum>i\\<in>(insert (u * x) ((*) u ` S)). f i * i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a = (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i)", "using sum_rw"], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = a\n\ngoal (1 subgoal):\n 1. a = (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i)", "by simp"], ["proof (state)\nthis:\n  a = (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i)\n\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f. (\\<Sum>i\\<in>insert x S. f i * i) = y}", "also"], ["proof (state)\nthis:\n  a = (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i)\n\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f. (\\<Sum>i\\<in>insert x S. f i * i) = y}", "have \"... = ?f (u*x) +  sum ?f (((*) u ` S))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) =\n    f (u * x) * (u * x) + (\\<Sum>x\\<in>(*) u ` S. f x * x)", "by (rule sum.insert[OF f4], insert inj_ux) (metis UNIV_I inj_on_image_mem_iff inj_on_inverseI\n            inv_u local.insert(2) local.mult_1_left local.semiring_normalization_rules(18) subsetI)"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) =\n  f (u * x) * (u * x) + (\\<Sum>x\\<in>(*) u ` S. f x * x)\n\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f. (\\<Sum>i\\<in>insert x S. f i * i) = y}", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) =\n  f (u * x) * (u * x) + (\\<Sum>x\\<in>(*) u ` S. f x * x)\n\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f. (\\<Sum>i\\<in>insert x S. f i * i) = y}", "have \"... = ?f (u*x) + sum (\\<lambda>i. g i * i) S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (u * x) * (u * x) + (\\<Sum>x\\<in>(*) u ` S. f x * x) =\n    f (u * x) * (u * x) + (\\<Sum>i\\<in>S. g i * i)", "unfolding sum_rw1"], ["proof (prove)\ngoal (1 subgoal):\n 1. f (u * x) * (u * x) + (\\<Sum>x\\<in>(*) u ` S. f x * x) =\n    f (u * x) * (u * x) + (\\<Sum>x\\<in>(*) u ` S. f x * x)", "by auto"], ["proof (state)\nthis:\n  f (u * x) * (u * x) + (\\<Sum>x\\<in>(*) u ` S. f x * x) =\n  f (u * x) * (u * x) + (\\<Sum>i\\<in>S. g i * i)\n\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f. (\\<Sum>i\\<in>insert x S. f i * i) = y}", "also"], ["proof (state)\nthis:\n  f (u * x) * (u * x) + (\\<Sum>x\\<in>(*) u ` S. f x * x) =\n  f (u * x) * (u * x) + (\\<Sum>i\\<in>S. g i * i)\n\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f. (\\<Sum>i\\<in>insert x S. f i * i) = y}", "have \"... = ?g x + sum ?g S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (u * x) * (u * x) + (\\<Sum>i\\<in>S. g i * i) =\n    (if x = x then f (u * x) * u * x else g x * x) +\n    (\\<Sum>i\\<in>S. if i = x then f (u * x) * u * x else g i * i)", "unfolding sum_rw2"], ["proof (prove)\ngoal (1 subgoal):\n 1. f (u * x) * (u * x) +\n    (\\<Sum>i\\<in>S. if i = x then f (u * x) * u * x else g i * i) =\n    (if x = x then f (u * x) * u * x else g x * x) +\n    (\\<Sum>i\\<in>S. if i = x then f (u * x) * u * x else g i * i)", "using mult.assoc"], ["proof (prove)\nusing this:\n  ?a * ?b * ?c = ?a * (?b * ?c)\n\ngoal (1 subgoal):\n 1. f (u * x) * (u * x) +\n    (\\<Sum>i\\<in>S. if i = x then f (u * x) * u * x else g i * i) =\n    (if x = x then f (u * x) * u * x else g x * x) +\n    (\\<Sum>i\\<in>S. if i = x then f (u * x) * u * x else g i * i)", "by auto"], ["proof (state)\nthis:\n  f (u * x) * (u * x) + (\\<Sum>i\\<in>S. g i * i) =\n  (if x = x then f (u * x) * u * x else g x * x) +\n  (\\<Sum>i\\<in>S. if i = x then f (u * x) * u * x else g i * i)\n\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f. (\\<Sum>i\\<in>insert x S. f i * i) = y}", "also"], ["proof (state)\nthis:\n  f (u * x) * (u * x) + (\\<Sum>i\\<in>S. g i * i) =\n  (if x = x then f (u * x) * u * x else g x * x) +\n  (\\<Sum>i\\<in>S. if i = x then f (u * x) * u * x else g i * i)\n\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f. (\\<Sum>i\\<in>insert x S. f i * i) = y}", "have \"... = sum ?g (insert x S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (if x = x then f (u * x) * u * x else g x * x) +\n    (\\<Sum>i\\<in>S. if i = x then f (u * x) * u * x else g i * i) =\n    (\\<Sum>i\\<in>insert x S. if i = x then f (u * x) * u * x else g i * i)", "by (rule sum.insert[symmetric, OF f3 insert.hyps(2)])"], ["proof (state)\nthis:\n  (if x = x then f (u * x) * u * x else g x * x) +\n  (\\<Sum>i\\<in>S. if i = x then f (u * x) * u * x else g i * i) =\n  (\\<Sum>i\\<in>insert x S. if i = x then f (u * x) * u * x else g i * i)\n\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f. (\\<Sum>i\\<in>insert x S. f i * i) = y}", "also"], ["proof (state)\nthis:\n  (if x = x then f (u * x) * u * x else g x * x) +\n  (\\<Sum>i\\<in>S. if i = x then f (u * x) * u * x else g i * i) =\n  (\\<Sum>i\\<in>insert x S. if i = x then f (u * x) * u * x else g i * i)\n\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f. (\\<Sum>i\\<in>insert x S. f i * i) = y}", "have \"... = sum (\\<lambda>i. ?g' i * i) (insert x S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>insert x S. if i = x then f (u * x) * u * x else g i * i) =\n    (\\<Sum>i\\<in>insert x S. (if i = x then f (u * x) * u else g i) * i)", "by (rule sum.cong, auto)"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>insert x S. if i = x then f (u * x) * u * x else g i * i) =\n  (\\<Sum>i\\<in>insert x S. (if i = x then f (u * x) * u else g i) * i)\n\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f. (\\<Sum>i\\<in>insert x S. f i * i) = y}", "finally"], ["proof (chain)\npicking this:\n  a = (\\<Sum>i\\<in>insert x S. (if i = x then f (u * x) * u else g i) * i)", "show ?thesis"], ["proof (prove)\nusing this:\n  a = (\\<Sum>i\\<in>insert x S. (if i = x then f (u * x) * u else g i) * i)\n\ngoal (1 subgoal):\n 1. a \\<in> {y. \\<exists>f. (\\<Sum>i\\<in>insert x S. f i * i) = y}", "by fast"], ["proof (state)\nthis:\n  a \\<in> {y. \\<exists>f. (\\<Sum>i\\<in>insert x S. f i * i) = y}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?a1\n  \\<in> {y. \\<exists>f.\n               (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) =\n               y} \\<Longrightarrow>\n  ?a1 \\<in> {y. \\<exists>f. (\\<Sum>i\\<in>insert x S. f i * i) = y}\n\ngoal (1 subgoal):\n 1. {y. \\<exists>f. (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y} =\n    {y. \\<exists>f. (\\<Sum>i\\<in>insert x S. f i * i) = y}", "ultimately"], ["proof (chain)\npicking this:\n  ?a1\n  \\<in> {y. \\<exists>f.\n               (\\<Sum>i\\<in>insert x S. f i * i) = y} \\<Longrightarrow>\n  ?a1\n  \\<in> {y. \\<exists>f.\n               (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y}\n  ?a1\n  \\<in> {y. \\<exists>f.\n               (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) =\n               y} \\<Longrightarrow>\n  ?a1 \\<in> {y. \\<exists>f. (\\<Sum>i\\<in>insert x S. f i * i) = y}", "show ?thesis"], ["proof (prove)\nusing this:\n  ?a1\n  \\<in> {y. \\<exists>f.\n               (\\<Sum>i\\<in>insert x S. f i * i) = y} \\<Longrightarrow>\n  ?a1\n  \\<in> {y. \\<exists>f.\n               (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y}\n  ?a1\n  \\<in> {y. \\<exists>f.\n               (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) =\n               y} \\<Longrightarrow>\n  ?a1 \\<in> {y. \\<exists>f. (\\<Sum>i\\<in>insert x S. f i * i) = y}\n\ngoal (1 subgoal):\n 1. {y. \\<exists>f. (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y} =\n    {y. \\<exists>f. (\\<Sum>i\\<in>insert x S. f i * i) = y}", "by blast"], ["proof (state)\nthis:\n  {y. \\<exists>f. (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y} =\n  {y. \\<exists>f. (\\<Sum>i\\<in>insert x S. f i * i) = y}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {y. \\<exists>f. (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y} =\n  {y. \\<exists>f. (\\<Sum>i\\<in>insert x S. f i * i) = y}\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        ideal_generated ((*) u ` F) = ideal_generated F\\<rbrakk>\n       \\<Longrightarrow> ideal_generated ((*) u ` insert x F) =\n                         ideal_generated (insert x F)", "also"], ["proof (state)\nthis:\n  {y. \\<exists>f. (\\<Sum>i\\<in>insert (u * x) ((*) u ` S). f i * i) = y} =\n  {y. \\<exists>f. (\\<Sum>i\\<in>insert x S. f i * i) = y}\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        ideal_generated ((*) u ` F) = ideal_generated F\\<rbrakk>\n       \\<Longrightarrow> ideal_generated ((*) u ` insert x F) =\n                         ideal_generated (insert x F)", "have \"... = ideal_generated (insert x S)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {y. \\<exists>f. (\\<Sum>i\\<in>insert x S. f i * i) = y} =\n    ideal_generated (insert x S)", "using ideal_explicit2[OF f2]"], ["proof (prove)\nusing this:\n  ideal_generated (insert x S) =\n  {y. \\<exists>f. (\\<Sum>i\\<in>insert x S. f i * i) = y}\n\ngoal (1 subgoal):\n 1. {y. \\<exists>f. (\\<Sum>i\\<in>insert x S. f i * i) = y} =\n    ideal_generated (insert x S)", "by auto"], ["proof (state)\nthis:\n  {y. \\<exists>f. (\\<Sum>i\\<in>insert x S. f i * i) = y} =\n  ideal_generated (insert x S)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        ideal_generated ((*) u ` F) = ideal_generated F\\<rbrakk>\n       \\<Longrightarrow> ideal_generated ((*) u ` insert x F) =\n                         ideal_generated (insert x F)", "finally"], ["proof (chain)\npicking this:\n  ideal_generated ((*) u ` insert x S) = ideal_generated (insert x S)", "show ?case"], ["proof (prove)\nusing this:\n  ideal_generated ((*) u ` insert x S) = ideal_generated (insert x S)\n\ngoal (1 subgoal):\n 1. ideal_generated ((*) u ` insert x S) = ideal_generated (insert x S)", "by auto"], ["proof (state)\nthis:\n  ideal_generated ((*) u ` insert x S) = ideal_generated (insert x S)\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary ideal_generated_mult_unit2:\n  assumes u: \"u dvd 1\"\n  shows \"ideal_generated {u*a,u*b} = ideal_generated {a,b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated {u * a, u * b} = ideal_generated {a, b}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ideal_generated {u * a, u * b} = ideal_generated {a, b}", "let ?S = \"{a,b}\""], ["proof (state)\ngoal (1 subgoal):\n 1. ideal_generated {u * a, u * b} = ideal_generated {a, b}", "have \"ideal_generated {u*a,u*b} = ideal_generated ((\\<lambda>x. u*x)` {a,b})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated {u * a, u * b} = ideal_generated ((*) u ` {a, b})", "by auto"], ["proof (state)\nthis:\n  ideal_generated {u * a, u * b} = ideal_generated ((*) u ` {a, b})\n\ngoal (1 subgoal):\n 1. ideal_generated {u * a, u * b} = ideal_generated {a, b}", "also"], ["proof (state)\nthis:\n  ideal_generated {u * a, u * b} = ideal_generated ((*) u ` {a, b})\n\ngoal (1 subgoal):\n 1. ideal_generated {u * a, u * b} = ideal_generated {a, b}", "have \"... = ideal_generated {a,b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated ((*) u ` {a, b}) = ideal_generated {a, b}", "by (rule ideal_generated_mult_unit[OF _ u], simp)"], ["proof (state)\nthis:\n  ideal_generated ((*) u ` {a, b}) = ideal_generated {a, b}\n\ngoal (1 subgoal):\n 1. ideal_generated {u * a, u * b} = ideal_generated {a, b}", "finally"], ["proof (chain)\npicking this:\n  ideal_generated {u * a, u * b} = ideal_generated {a, b}", "show ?thesis"], ["proof (prove)\nusing this:\n  ideal_generated {u * a, u * b} = ideal_generated {a, b}\n\ngoal (1 subgoal):\n 1. ideal_generated {u * a, u * b} = ideal_generated {a, b}", "."], ["proof (state)\nthis:\n  ideal_generated {u * a, u * b} = ideal_generated {a, b}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ideal_generated_1[simp]: \"ideal_generated {1} = UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated {1::'a} = UNIV", "by (metis ideal_generated_unit dvd_ideal_generated_singleton order_refl)"], ["", "lemma ideal_generated_pair: \"ideal_generated {a,b} = {p*a+q*b | p q. True}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated {a, b} = {p * a + q * b |p q. True}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ideal_generated {a, b} = {p * a + q * b |p q. True}", "have i: \"ideal_generated {a,b} = {y. \\<exists>f. (\\<Sum>i\\<in>{a,b}. f i * i) = y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated {a, b} =\n    {y. \\<exists>f. (\\<Sum>i\\<in>{a, b}. f i * i) = y}", "using ideal_explicit2"], ["proof (prove)\nusing this:\n  finite ?S \\<Longrightarrow>\n  ideal_generated ?S = {y. \\<exists>f. (\\<Sum>i\\<in>?S. f i * i) = y}\n\ngoal (1 subgoal):\n 1. ideal_generated {a, b} =\n    {y. \\<exists>f. (\\<Sum>i\\<in>{a, b}. f i * i) = y}", "by auto"], ["proof (state)\nthis:\n  ideal_generated {a, b} =\n  {y. \\<exists>f. (\\<Sum>i\\<in>{a, b}. f i * i) = y}\n\ngoal (1 subgoal):\n 1. ideal_generated {a, b} = {p * a + q * b |p q. True}", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated {a, b} = {p * a + q * b |p q. True}", "proof (cases \"a=b\")"], ["proof (state)\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    ideal_generated {a, b} = {p * a + q * b |p q. True}\n 2. a \\<noteq> b \\<Longrightarrow>\n    ideal_generated {a, b} = {p * a + q * b |p q. True}", "case True"], ["proof (state)\nthis:\n  a = b\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow>\n    ideal_generated {a, b} = {p * a + q * b |p q. True}\n 2. a \\<noteq> b \\<Longrightarrow>\n    ideal_generated {a, b} = {p * a + q * b |p q. True}", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated {a, b} = {p * a + q * b |p q. True}", "using True i"], ["proof (prove)\nusing this:\n  a = b\n  ideal_generated {a, b} =\n  {y. \\<exists>f. (\\<Sum>i\\<in>{a, b}. f i * i) = y}\n\ngoal (1 subgoal):\n 1. ideal_generated {a, b} = {p * a + q * b |p q. True}", "by (auto, metis mult_ac(2) semiring_normalization_rules)\n      (metis (no_types, hide_lams) add_minus_cancel mult_ac ring_distribs semiring_normalization_rules)"], ["proof (state)\nthis:\n  ideal_generated {a, b} = {p * a + q * b |p q. True}\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    ideal_generated {a, b} = {p * a + q * b |p q. True}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    ideal_generated {a, b} = {p * a + q * b |p q. True}", "case False"], ["proof (state)\nthis:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    ideal_generated {a, b} = {p * a + q * b |p q. True}", "have 1: \"\\<exists>p q. (\\<Sum>i\\<in>{a, b}. f i * i) = p * a + q * b\" for f"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p q. (\\<Sum>i\\<in>{a, b}. f i * i) = p * a + q * b", "by (rule exI[of _ \"f a\"], rule exI[of _ \"f b\"], rule sum_two_elements[OF False])"], ["proof (state)\nthis:\n  \\<exists>p q. (\\<Sum>i\\<in>{a, b}. ?f1 i * i) = p * a + q * b\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    ideal_generated {a, b} = {p * a + q * b |p q. True}", "moreover"], ["proof (state)\nthis:\n  \\<exists>p q. (\\<Sum>i\\<in>{a, b}. ?f1 i * i) = p * a + q * b\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    ideal_generated {a, b} = {p * a + q * b |p q. True}", "have \"\\<exists>f. (\\<Sum>i\\<in>{a, b}. f i * i) = p * a + q * b\" for p q"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>f. (\\<Sum>i\\<in>{a, b}. f i * i) = p * a + q * b", "by (rule exI[of _ \"\\<lambda>i. if i=a then p else q\"],\n          unfold sum_two_elements[OF False], insert False, auto)"], ["proof (state)\nthis:\n  \\<exists>f. (\\<Sum>i\\<in>{a, b}. f i * i) = ?p1 * a + ?q1 * b\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow>\n    ideal_generated {a, b} = {p * a + q * b |p q. True}", "ultimately"], ["proof (chain)\npicking this:\n  \\<exists>p q. (\\<Sum>i\\<in>{a, b}. ?f1 i * i) = p * a + q * b\n  \\<exists>f. (\\<Sum>i\\<in>{a, b}. f i * i) = ?p1 * a + ?q1 * b", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>p q. (\\<Sum>i\\<in>{a, b}. ?f1 i * i) = p * a + q * b\n  \\<exists>f. (\\<Sum>i\\<in>{a, b}. f i * i) = ?p1 * a + ?q1 * b\n\ngoal (1 subgoal):\n 1. ideal_generated {a, b} = {p * a + q * b |p q. True}", "using i"], ["proof (prove)\nusing this:\n  \\<exists>p q. (\\<Sum>i\\<in>{a, b}. ?f1 i * i) = p * a + q * b\n  \\<exists>f. (\\<Sum>i\\<in>{a, b}. f i * i) = ?p1 * a + ?q1 * b\n  ideal_generated {a, b} =\n  {y. \\<exists>f. (\\<Sum>i\\<in>{a, b}. f i * i) = y}\n\ngoal (1 subgoal):\n 1. ideal_generated {a, b} = {p * a + q * b |p q. True}", "by auto"], ["proof (state)\nthis:\n  ideal_generated {a, b} = {p * a + q * b |p q. True}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ideal_generated {a, b} = {p * a + q * b |p q. True}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ideal_generated_pair_exists_pq1:\n  assumes i: \"ideal_generated {a,b} = (UNIV::'a set)\"\n  shows \"\\<exists>p q. p*a + q*b = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p q. p * a + q * b = (1::'a)", "using i"], ["proof (prove)\nusing this:\n  ideal_generated {a, b} = UNIV\n\ngoal (1 subgoal):\n 1. \\<exists>p q. p * a + q * b = (1::'a)", "unfolding ideal_generated_pair"], ["proof (prove)\nusing this:\n  {p * a + q * b |p q. True} = UNIV\n\ngoal (1 subgoal):\n 1. \\<exists>p q. p * a + q * b = (1::'a)", "by (smt iso_tuple_UNIV_I mem_Collect_eq)"], ["", "lemma ideal_generated_pair_UNIV:\n  assumes sa_tb_u: \"s*a+t*b = u\" and u: \"u dvd 1\"\n  shows \"ideal_generated {a,b} = UNIV\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated {a, b} = UNIV", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. ideal_generated {a, b} = UNIV", "have f: \"finite {a,b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {a, b}", "by simp"], ["proof (state)\nthis:\n  finite {a, b}\n\ngoal (1 subgoal):\n 1. ideal_generated {a, b} = UNIV", "obtain inv_u where inv_u: \"inv_u * u = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>inv_u.\n        inv_u * u = (1::'a) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using u"], ["proof (prove)\nusing this:\n  u dvd (1::'a)\n\ngoal (1 subgoal):\n 1. (\\<And>inv_u.\n        inv_u * u = (1::'a) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding dvd_def"], ["proof (prove)\nusing this:\n  \\<exists>k. (1::'a) = u * k\n\ngoal (1 subgoal):\n 1. (\\<And>inv_u.\n        inv_u * u = (1::'a) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis mult.commute)"], ["proof (state)\nthis:\n  inv_u * u = (1::'a)\n\ngoal (1 subgoal):\n 1. ideal_generated {a, b} = UNIV", "have \"x \\<in> ideal_generated {a,b}\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> ideal_generated {a, b}", "proof (cases \"a = b\")"], ["proof (state)\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow> x \\<in> ideal_generated {a, b}\n 2. a \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated {a, b}", "case True"], ["proof (state)\nthis:\n  a = b\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow> x \\<in> ideal_generated {a, b}\n 2. a \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated {a, b}", "then"], ["proof (chain)\npicking this:\n  a = b", "show ?thesis"], ["proof (prove)\nusing this:\n  a = b\n\ngoal (1 subgoal):\n 1. x \\<in> ideal_generated {a, b}", "by (metis UNIV_I dvd_def dvd_ideal_generated_singleton' ideal_generated_unit insert_absorb2\n          mult.commute sa_tb_u semiring_normalization_rules(34) subsetI subset_antisym u)"], ["proof (state)\nthis:\n  x \\<in> ideal_generated {a, b}\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated {a, b}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated {a, b}", "case False"], ["proof (state)\nthis:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated {a, b}", "note a_not_b = False"], ["proof (state)\nthis:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated {a, b}", "let ?f = \"\\<lambda>y. if y = a then inv_u * x * s else inv_u * x * t\""], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated {a, b}", "have \"(\\<Sum>i\\<in>{a,b}. ?f i * i) = ?f a * a + ?f b * b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{a, b}.\n       (if i = a then inv_u * x * s else inv_u * x * t) * i) =\n    (if a = a then inv_u * x * s else inv_u * x * t) * a +\n    (if b = a then inv_u * x * s else inv_u * x * t) * b", "by (rule sum_two_elements[OF a_not_b])"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{a, b}.\n     (if i = a then inv_u * x * s else inv_u * x * t) * i) =\n  (if a = a then inv_u * x * s else inv_u * x * t) * a +\n  (if b = a then inv_u * x * s else inv_u * x * t) * b\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated {a, b}", "also"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{a, b}.\n     (if i = a then inv_u * x * s else inv_u * x * t) * i) =\n  (if a = a then inv_u * x * s else inv_u * x * t) * a +\n  (if b = a then inv_u * x * s else inv_u * x * t) * b\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated {a, b}", "have \"... = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (if a = a then inv_u * x * s else inv_u * x * t) * a +\n    (if b = a then inv_u * x * s else inv_u * x * t) * b =\n    x", "using a_not_b sa_tb_u inv_u"], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  s * a + t * b = u\n  inv_u * u = (1::'a)\n\ngoal (1 subgoal):\n 1. (if a = a then inv_u * x * s else inv_u * x * t) * a +\n    (if b = a then inv_u * x * s else inv_u * x * t) * b =\n    x", "by (auto, metis mult_ac(1) mult_ac(2) ring_distribs(1) semiring_normalization_rules(12))"], ["proof (state)\nthis:\n  (if a = a then inv_u * x * s else inv_u * x * t) * a +\n  (if b = a then inv_u * x * s else inv_u * x * t) * b =\n  x\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated {a, b}", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>i\\<in>{a, b}.\n     (if i = a then inv_u * x * s else inv_u * x * t) * i) =\n  x", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>{a, b}.\n     (if i = a then inv_u * x * s else inv_u * x * t) * i) =\n  x\n\ngoal (1 subgoal):\n 1. x \\<in> ideal_generated {a, b}", "unfolding ideal_explicit2[OF f]"], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>{a, b}.\n     (if i = a then inv_u * x * s else inv_u * x * t) * i) =\n  x\n\ngoal (1 subgoal):\n 1. x \\<in> {y. \\<exists>f. (\\<Sum>i\\<in>{a, b}. f i * i) = y}", "by auto"], ["proof (state)\nthis:\n  x \\<in> ideal_generated {a, b}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x1 \\<in> ideal_generated {a, b}\n\ngoal (1 subgoal):\n 1. ideal_generated {a, b} = UNIV", "thus ?thesis"], ["proof (prove)\nusing this:\n  ?x1 \\<in> ideal_generated {a, b}\n\ngoal (1 subgoal):\n 1. ideal_generated {a, b} = UNIV", "by auto"], ["proof (state)\nthis:\n  ideal_generated {a, b} = UNIV\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ideal_generated_pair_exists:\n  assumes l: \"(ideal_generated {a,b} = ideal_generated {d})\"\n  shows \"(\\<exists> p q. p*a+q*b = d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p q. p * a + q * b = d", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>p q. p * a + q * b = d", "have d: \"d \\<in> ideal_generated {d}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d \\<in> ideal_generated {d}", "by (simp add: ideal_generated_in)"], ["proof (state)\nthis:\n  d \\<in> ideal_generated {d}\n\ngoal (1 subgoal):\n 1. \\<exists>p q. p * a + q * b = d", "hence \"d \\<in> ideal_generated {a,b}\""], ["proof (prove)\nusing this:\n  d \\<in> ideal_generated {d}\n\ngoal (1 subgoal):\n 1. d \\<in> ideal_generated {a, b}", "using l"], ["proof (prove)\nusing this:\n  d \\<in> ideal_generated {d}\n  ideal_generated {a, b} = ideal_generated {d}\n\ngoal (1 subgoal):\n 1. d \\<in> ideal_generated {a, b}", "by auto"], ["proof (state)\nthis:\n  d \\<in> ideal_generated {a, b}\n\ngoal (1 subgoal):\n 1. \\<exists>p q. p * a + q * b = d", "from this"], ["proof (chain)\npicking this:\n  d \\<in> ideal_generated {a, b}", "obtain p q where \"d = p*a+q*b\""], ["proof (prove)\nusing this:\n  d \\<in> ideal_generated {a, b}\n\ngoal (1 subgoal):\n 1. (\\<And>p q.\n        d = p * a + q * b \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using ideal_generated_pair[of a b]"], ["proof (prove)\nusing this:\n  d \\<in> ideal_generated {a, b}\n  ideal_generated {a, b} = {p * a + q * b |p q. True}\n\ngoal (1 subgoal):\n 1. (\\<And>p q.\n        d = p * a + q * b \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  d = p * a + q * b\n\ngoal (1 subgoal):\n 1. \\<exists>p q. p * a + q * b = d", "thus ?thesis"], ["proof (prove)\nusing this:\n  d = p * a + q * b\n\ngoal (1 subgoal):\n 1. \\<exists>p q. p * a + q * b = d", "by auto"], ["proof (state)\nthis:\n  \\<exists>p q. p * a + q * b = d\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma obtain_ideal_generated_pair:\n  assumes \"c \\<in> ideal_generated {a,b}\"\n  obtains p q where \"p*a+q*b=c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p q.\n        p * a + q * b = c \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>p q.\n        p * a + q * b = c \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"c \\<in> {p * a + q * b |p q. True}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. c \\<in> {p * a + q * b |p q. True}", "using assms ideal_generated_pair"], ["proof (prove)\nusing this:\n  c \\<in> ideal_generated {a, b}\n  ideal_generated {?a, ?b} = {p * ?a + q * ?b |p q. True}\n\ngoal (1 subgoal):\n 1. c \\<in> {p * a + q * b |p q. True}", "by auto"], ["proof (state)\nthis:\n  c \\<in> {p * a + q * b |p q. True}\n\ngoal (1 subgoal):\n 1. (\\<And>p q.\n        p * a + q * b = c \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  c \\<in> {p * a + q * b |p q. True}\n\ngoal (1 subgoal):\n 1. thesis", "using that"], ["proof (prove)\nusing this:\n  c \\<in> {p * a + q * b |p q. True}\n  ?p1 * a + ?q1 * b = c \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ideal_generated_pair_exists_UNIV:\n  shows \"(ideal_generated {a,b} = ideal_generated {1}) = (\\<exists>p q. p*a+q*b = 1)\" (is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (ideal_generated {a, b} = ideal_generated {1::'a}) =\n    (\\<exists>p q. p * a + q * b = (1::'a))", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. ideal_generated {a, b} = ideal_generated {1::'a} \\<Longrightarrow>\n    \\<exists>p q. p * a + q * b = (1::'a)\n 2. \\<exists>p q. p * a + q * b = (1::'a) \\<Longrightarrow>\n    ideal_generated {a, b} = ideal_generated {1::'a}", "assume r: ?rhs"], ["proof (state)\nthis:\n  \\<exists>p q. p * a + q * b = (1::'a)\n\ngoal (2 subgoals):\n 1. ideal_generated {a, b} = ideal_generated {1::'a} \\<Longrightarrow>\n    \\<exists>p q. p * a + q * b = (1::'a)\n 2. \\<exists>p q. p * a + q * b = (1::'a) \\<Longrightarrow>\n    ideal_generated {a, b} = ideal_generated {1::'a}", "have \"x \\<in> ideal_generated {a,b}\" for x"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> ideal_generated {a, b}", "proof (cases \"a=b\")"], ["proof (state)\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow> x \\<in> ideal_generated {a, b}\n 2. a \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated {a, b}", "case True"], ["proof (state)\nthis:\n  a = b\n\ngoal (2 subgoals):\n 1. a = b \\<Longrightarrow> x \\<in> ideal_generated {a, b}\n 2. a \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated {a, b}", "then"], ["proof (chain)\npicking this:\n  a = b", "show ?thesis"], ["proof (prove)\nusing this:\n  a = b\n\ngoal (1 subgoal):\n 1. x \\<in> ideal_generated {a, b}", "by (metis UNIV_I r dvd_ideal_generated_singleton finite.intros ideal_generated_1\n          ideal_generated_pair_UNIV ideal_generated_singleton_subset)"], ["proof (state)\nthis:\n  x \\<in> ideal_generated {a, b}\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated {a, b}", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated {a, b}", "case False"], ["proof (state)\nthis:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated {a, b}", "have f: \"finite {a,b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite {a, b}", "by simp"], ["proof (state)\nthis:\n  finite {a, b}\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated {a, b}", "have 1: \"1 \\<in> ideal_generated {a,b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (1::'a) \\<in> ideal_generated {a, b}", "using ideal_generated_pair_UNIV local.one_dvd r"], ["proof (prove)\nusing this:\n  \\<lbrakk>?s * ?a + ?t * ?b = ?u; ?u dvd (1::'a)\\<rbrakk>\n  \\<Longrightarrow> ideal_generated {?a, ?b} = UNIV\n  (1::'a) dvd ?a\n  \\<exists>p q. p * a + q * b = (1::'a)\n\ngoal (1 subgoal):\n 1. (1::'a) \\<in> ideal_generated {a, b}", "by blast"], ["proof (state)\nthis:\n  (1::'a) \\<in> ideal_generated {a, b}\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated {a, b}", "hence i: \"ideal_generated {a,b} = {y. \\<exists>f. (\\<Sum>i\\<in>{a,b}. f i * i) = y}\""], ["proof (prove)\nusing this:\n  (1::'a) \\<in> ideal_generated {a, b}\n\ngoal (1 subgoal):\n 1. ideal_generated {a, b} =\n    {y. \\<exists>f. (\\<Sum>i\\<in>{a, b}. f i * i) = y}", "using ideal_explicit2[of \"{a,b}\"]"], ["proof (prove)\nusing this:\n  (1::'a) \\<in> ideal_generated {a, b}\n  finite {a, b} \\<Longrightarrow>\n  ideal_generated {a, b} =\n  {y. \\<exists>f. (\\<Sum>i\\<in>{a, b}. f i * i) = y}\n\ngoal (1 subgoal):\n 1. ideal_generated {a, b} =\n    {y. \\<exists>f. (\\<Sum>i\\<in>{a, b}. f i * i) = y}", "by auto"], ["proof (state)\nthis:\n  ideal_generated {a, b} =\n  {y. \\<exists>f. (\\<Sum>i\\<in>{a, b}. f i * i) = y}\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated {a, b}", "from this"], ["proof (chain)\npicking this:\n  ideal_generated {a, b} =\n  {y. \\<exists>f. (\\<Sum>i\\<in>{a, b}. f i * i) = y}", "obtain f where f: \"f a * a + f b * b = 1\""], ["proof (prove)\nusing this:\n  ideal_generated {a, b} =\n  {y. \\<exists>f. (\\<Sum>i\\<in>{a, b}. f i * i) = y}\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        f a * a + f b * b = (1::'a) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using sum_two_elements 1 False"], ["proof (prove)\nusing this:\n  ideal_generated {a, b} =\n  {y. \\<exists>f. (\\<Sum>i\\<in>{a, b}. f i * i) = y}\n  ?a \\<noteq> ?b \\<Longrightarrow> sum ?f {?a, ?b} = ?f ?a + ?f ?b\n  (1::'a) \\<in> ideal_generated {a, b}\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        f a * a + f b * b = (1::'a) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  f a * a + f b * b = (1::'a)\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated {a, b}", "let ?f = \"\\<lambda>y. if y = a then x * f a else x * f b\""], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated {a, b}", "have \"(\\<Sum>i\\<in>{a,b}. ?f i * i) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>{a, b}. (if i = a then x * f a else x * f b) * i) = x", "unfolding sum_two_elements[OF False]"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if a = a then x * f a else x * f b) * a +\n    (if b = a then x * f a else x * f b) * b =\n    x", "using f False"], ["proof (prove)\nusing this:\n  f a * a + f b * b = (1::'a)\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. (if a = a then x * f a else x * f b) * a +\n    (if b = a then x * f a else x * f b) * b =\n    x", "using mult_ac(1) ring_distribs(1) semiring_normalization_rules(12)"], ["proof (prove)\nusing this:\n  f a * a + f b * b = (1::'a)\n  a \\<noteq> b\n  ?a * ?b * ?c = ?a * (?b * ?c)\n  ?a * (?b + ?c) = ?a * ?b + ?a * ?c\n  ?a * (1::'a) = ?a\n\ngoal (1 subgoal):\n 1. (if a = a then x * f a else x * f b) * a +\n    (if b = a then x * f a else x * f b) * b =\n    x", "by force"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{a, b}. (if i = a then x * f a else x * f b) * i) = x\n\ngoal (1 subgoal):\n 1. a \\<noteq> b \\<Longrightarrow> x \\<in> ideal_generated {a, b}", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>{a, b}. (if i = a then x * f a else x * f b) * i) = x\n\ngoal (1 subgoal):\n 1. x \\<in> ideal_generated {a, b}", "unfolding i"], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>{a, b}. (if i = a then x * f a else x * f b) * i) = x\n\ngoal (1 subgoal):\n 1. x \\<in> {y. \\<exists>f. (\\<Sum>i\\<in>{a, b}. f i * i) = y}", "by auto"], ["proof (state)\nthis:\n  x \\<in> ideal_generated {a, b}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?x1 \\<in> ideal_generated {a, b}\n\ngoal (2 subgoals):\n 1. ideal_generated {a, b} = ideal_generated {1::'a} \\<Longrightarrow>\n    \\<exists>p q. p * a + q * b = (1::'a)\n 2. \\<exists>p q. p * a + q * b = (1::'a) \\<Longrightarrow>\n    ideal_generated {a, b} = ideal_generated {1::'a}", "thus ?lhs"], ["proof (prove)\nusing this:\n  ?x1 \\<in> ideal_generated {a, b}\n\ngoal (1 subgoal):\n 1. ideal_generated {a, b} = ideal_generated {1::'a}", "by auto"], ["proof (state)\nthis:\n  ideal_generated {a, b} = ideal_generated {1::'a}\n\ngoal (1 subgoal):\n 1. ideal_generated {a, b} = ideal_generated {1::'a} \\<Longrightarrow>\n    \\<exists>p q. p * a + q * b = (1::'a)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. ideal_generated {a, b} = ideal_generated {1::'a} \\<Longrightarrow>\n    \\<exists>p q. p * a + q * b = (1::'a)", "assume ?lhs"], ["proof (state)\nthis:\n  ideal_generated {a, b} = ideal_generated {1::'a}\n\ngoal (1 subgoal):\n 1. ideal_generated {a, b} = ideal_generated {1::'a} \\<Longrightarrow>\n    \\<exists>p q. p * a + q * b = (1::'a)", "thus ?rhs"], ["proof (prove)\nusing this:\n  ideal_generated {a, b} = ideal_generated {1::'a}\n\ngoal (1 subgoal):\n 1. \\<exists>p q. p * a + q * b = (1::'a)", "using ideal_generated_pair_exists[of a b 1]"], ["proof (prove)\nusing this:\n  ideal_generated {a, b} = ideal_generated {1::'a}\n  ideal_generated {a, b} = ideal_generated {1::'a} \\<Longrightarrow>\n  \\<exists>p q. p * a + q * b = (1::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>p q. p * a + q * b = (1::'a)", "by auto"], ["proof (state)\nthis:\n  \\<exists>p q. p * a + q * b = (1::'a)\n\ngoal:\nNo subgoals!", "qed"], ["", "corollary ideal_generated_UNIV_obtain_pair:\n  assumes \"ideal_generated {a,b} = ideal_generated {1}\"\n  shows \" (\\<exists>p q. p*a+q*b = d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p q. p * a + q * b = d", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>p q. p * a + q * b = d", "obtain x y where \"x*a+y*b = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x y.\n        x * a + y * b = (1::'a) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using ideal_generated_pair_exists_UNIV assms"], ["proof (prove)\nusing this:\n  (ideal_generated {?a, ?b} = ideal_generated {1::'a}) =\n  (\\<exists>p q. p * ?a + q * ?b = (1::'a))\n  ideal_generated {a, b} = ideal_generated {1::'a}\n\ngoal (1 subgoal):\n 1. (\\<And>x y.\n        x * a + y * b = (1::'a) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  x * a + y * b = (1::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>p q. p * a + q * b = d", "hence \"d*x*a+d*y*b=d\""], ["proof (prove)\nusing this:\n  x * a + y * b = (1::'a)\n\ngoal (1 subgoal):\n 1. d * x * a + d * y * b = d", "using local.mult_ac(1) local.ring_distribs(1) local.semiring_normalization_rules(12)"], ["proof (prove)\nusing this:\n  x * a + y * b = (1::'a)\n  ?a * ?b * ?c = ?a * (?b * ?c)\n  ?a * (?b + ?c) = ?a * ?b + ?a * ?c\n  ?a * (1::'a) = ?a\n\ngoal (1 subgoal):\n 1. d * x * a + d * y * b = d", "by force"], ["proof (state)\nthis:\n  d * x * a + d * y * b = d\n\ngoal (1 subgoal):\n 1. \\<exists>p q. p * a + q * b = d", "thus ?thesis"], ["proof (prove)\nusing this:\n  d * x * a + d * y * b = d\n\ngoal (1 subgoal):\n 1. \\<exists>p q. p * a + q * b = d", "by auto"], ["proof (state)\nthis:\n  \\<exists>p q. p * a + q * b = d\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_three_elements:\n  shows \"\\<exists>x y z::'a. (\\<Sum>i\\<in>{a,b,c}. f i * i) = x * a + y * b + z * c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x y z. (\\<Sum>i\\<in>{a, b, c}. f i * i) = x * a + y * b + z * c", "proof (cases \"a \\<noteq> b \\<and> b \\<noteq> c \\<and> a \\<noteq> c\")"], ["proof (state)\ngoal (2 subgoals):\n 1. a \\<noteq> b \\<and> b \\<noteq> c \\<and> a \\<noteq> c \\<Longrightarrow>\n    \\<exists>x y z. (\\<Sum>i\\<in>{a, b, c}. f i * i) = x * a + y * b + z * c\n 2. \\<not> (a \\<noteq> b \\<and>\n            b \\<noteq> c \\<and> a \\<noteq> c) \\<Longrightarrow>\n    \\<exists>x y z. (\\<Sum>i\\<in>{a, b, c}. f i * i) = x * a + y * b + z * c", "case True"], ["proof (state)\nthis:\n  a \\<noteq> b \\<and> b \\<noteq> c \\<and> a \\<noteq> c\n\ngoal (2 subgoals):\n 1. a \\<noteq> b \\<and> b \\<noteq> c \\<and> a \\<noteq> c \\<Longrightarrow>\n    \\<exists>x y z. (\\<Sum>i\\<in>{a, b, c}. f i * i) = x * a + y * b + z * c\n 2. \\<not> (a \\<noteq> b \\<and>\n            b \\<noteq> c \\<and> a \\<noteq> c) \\<Longrightarrow>\n    \\<exists>x y z. (\\<Sum>i\\<in>{a, b, c}. f i * i) = x * a + y * b + z * c", "then"], ["proof (chain)\npicking this:\n  a \\<noteq> b \\<and> b \\<noteq> c \\<and> a \\<noteq> c", "show ?thesis"], ["proof (prove)\nusing this:\n  a \\<noteq> b \\<and> b \\<noteq> c \\<and> a \\<noteq> c\n\ngoal (1 subgoal):\n 1. \\<exists>x y z. (\\<Sum>i\\<in>{a, b, c}. f i * i) = x * a + y * b + z * c", "by (auto, metis add.assoc)"], ["proof (state)\nthis:\n  \\<exists>x y z. (\\<Sum>i\\<in>{a, b, c}. f i * i) = x * a + y * b + z * c\n\ngoal (1 subgoal):\n 1. \\<not> (a \\<noteq> b \\<and>\n            b \\<noteq> c \\<and> a \\<noteq> c) \\<Longrightarrow>\n    \\<exists>x y z. (\\<Sum>i\\<in>{a, b, c}. f i * i) = x * a + y * b + z * c", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (a \\<noteq> b \\<and>\n            b \\<noteq> c \\<and> a \\<noteq> c) \\<Longrightarrow>\n    \\<exists>x y z. (\\<Sum>i\\<in>{a, b, c}. f i * i) = x * a + y * b + z * c", "case False"], ["proof (state)\nthis:\n  \\<not> (a \\<noteq> b \\<and> b \\<noteq> c \\<and> a \\<noteq> c)\n\ngoal (1 subgoal):\n 1. \\<not> (a \\<noteq> b \\<and>\n            b \\<noteq> c \\<and> a \\<noteq> c) \\<Longrightarrow>\n    \\<exists>x y z. (\\<Sum>i\\<in>{a, b, c}. f i * i) = x * a + y * b + z * c", "have 1: \"\\<exists>x y z. f c * c = x * c + y * c + z * c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x y z. f c * c = x * c + y * c + z * c", "by (rule exI[of _ 0],rule exI[of _ 0], rule exI[of _ \"f c\"], auto)"], ["proof (state)\nthis:\n  \\<exists>x y z. f c * c = x * c + y * c + z * c\n\ngoal (1 subgoal):\n 1. \\<not> (a \\<noteq> b \\<and>\n            b \\<noteq> c \\<and> a \\<noteq> c) \\<Longrightarrow>\n    \\<exists>x y z. (\\<Sum>i\\<in>{a, b, c}. f i * i) = x * a + y * b + z * c", "have 2: \"\\<exists>x y z. f b * b + f c * c = x * b + y * b + z * c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x y z. f b * b + f c * c = x * b + y * b + z * c", "by (rule exI[of _ 0],rule exI[of _ \"f b\"], rule exI[of _ \"f c\"], auto)"], ["proof (state)\nthis:\n  \\<exists>x y z. f b * b + f c * c = x * b + y * b + z * c\n\ngoal (1 subgoal):\n 1. \\<not> (a \\<noteq> b \\<and>\n            b \\<noteq> c \\<and> a \\<noteq> c) \\<Longrightarrow>\n    \\<exists>x y z. (\\<Sum>i\\<in>{a, b, c}. f i * i) = x * a + y * b + z * c", "have 3: \"\\<exists>x y z. f a * a + f c * c = x * a + y * c + z * c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x y z. f a * a + f c * c = x * a + y * c + z * c", "by (rule exI[of _ \"f a\"],rule exI[of _ 0], rule exI[of _ \"f c\"], auto)"], ["proof (state)\nthis:\n  \\<exists>x y z. f a * a + f c * c = x * a + y * c + z * c\n\ngoal (1 subgoal):\n 1. \\<not> (a \\<noteq> b \\<and>\n            b \\<noteq> c \\<and> a \\<noteq> c) \\<Longrightarrow>\n    \\<exists>x y z. (\\<Sum>i\\<in>{a, b, c}. f i * i) = x * a + y * b + z * c", "have 4: \"\\<exists>x y z. (\\<Sum>i\\<in>{c, b, c}. f i * i) = x * c + y * b + z * c\" if a: \"a = c\" and b: \"b \\<noteq> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x y z. (\\<Sum>i\\<in>{c, b, c}. f i * i) = x * c + y * b + z * c", "by (rule exI[of _ 0],rule exI[of _ \"f b\"], rule exI[of _ \"f c\"], insert a b,\n        auto simp add: insert_commute)"], ["proof (state)\nthis:\n  \\<lbrakk>a = c; b \\<noteq> c\\<rbrakk>\n  \\<Longrightarrow> \\<exists>x y z.\n                       (\\<Sum>i\\<in>{c, b, c}. f i * i) =\n                       x * c + y * b + z * c\n\ngoal (1 subgoal):\n 1. \\<not> (a \\<noteq> b \\<and>\n            b \\<noteq> c \\<and> a \\<noteq> c) \\<Longrightarrow>\n    \\<exists>x y z. (\\<Sum>i\\<in>{a, b, c}. f i * i) = x * a + y * b + z * c", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>x y z. (\\<Sum>i\\<in>{a, b, c}. f i * i) = x * a + y * b + z * c", "using False"], ["proof (prove)\nusing this:\n  \\<not> (a \\<noteq> b \\<and> b \\<noteq> c \\<and> a \\<noteq> c)\n\ngoal (1 subgoal):\n 1. \\<exists>x y z. (\\<Sum>i\\<in>{a, b, c}. f i * i) = x * a + y * b + z * c", "by (cases \"b=c\", cases \"a=c\", auto simp add: 1 2 3 4)"], ["proof (state)\nthis:\n  \\<exists>x y z. (\\<Sum>i\\<in>{a, b, c}. f i * i) = x * a + y * b + z * c\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sum_three_elements':\n  shows \"\\<exists>f::'a\\<Rightarrow>'a. (\\<Sum>i\\<in>{a,b,c}. f i * i) = x * a + y * b + z * c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>f. (\\<Sum>i\\<in>{a, b, c}. f i * i) = x * a + y * b + z * c", "proof (cases \"a \\<noteq> b \\<and> b \\<noteq> c \\<and> a \\<noteq> c\")"], ["proof (state)\ngoal (2 subgoals):\n 1. a \\<noteq> b \\<and> b \\<noteq> c \\<and> a \\<noteq> c \\<Longrightarrow>\n    \\<exists>f. (\\<Sum>i\\<in>{a, b, c}. f i * i) = x * a + y * b + z * c\n 2. \\<not> (a \\<noteq> b \\<and>\n            b \\<noteq> c \\<and> a \\<noteq> c) \\<Longrightarrow>\n    \\<exists>f. (\\<Sum>i\\<in>{a, b, c}. f i * i) = x * a + y * b + z * c", "case True"], ["proof (state)\nthis:\n  a \\<noteq> b \\<and> b \\<noteq> c \\<and> a \\<noteq> c\n\ngoal (2 subgoals):\n 1. a \\<noteq> b \\<and> b \\<noteq> c \\<and> a \\<noteq> c \\<Longrightarrow>\n    \\<exists>f. (\\<Sum>i\\<in>{a, b, c}. f i * i) = x * a + y * b + z * c\n 2. \\<not> (a \\<noteq> b \\<and>\n            b \\<noteq> c \\<and> a \\<noteq> c) \\<Longrightarrow>\n    \\<exists>f. (\\<Sum>i\\<in>{a, b, c}. f i * i) = x * a + y * b + z * c", "let ?f = \"\\<lambda>i. if i = a then x else if i = b then y else if i = c then z else 0\""], ["proof (state)\ngoal (2 subgoals):\n 1. a \\<noteq> b \\<and> b \\<noteq> c \\<and> a \\<noteq> c \\<Longrightarrow>\n    \\<exists>f. (\\<Sum>i\\<in>{a, b, c}. f i * i) = x * a + y * b + z * c\n 2. \\<not> (a \\<noteq> b \\<and>\n            b \\<noteq> c \\<and> a \\<noteq> c) \\<Longrightarrow>\n    \\<exists>f. (\\<Sum>i\\<in>{a, b, c}. f i * i) = x * a + y * b + z * c", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>f. (\\<Sum>i\\<in>{a, b, c}. f i * i) = x * a + y * b + z * c", "by (rule exI[of _ \"?f\"], insert True mult.assoc, auto simp add: local.add_ac)"], ["proof (state)\nthis:\n  \\<exists>f. (\\<Sum>i\\<in>{a, b, c}. f i * i) = x * a + y * b + z * c\n\ngoal (1 subgoal):\n 1. \\<not> (a \\<noteq> b \\<and>\n            b \\<noteq> c \\<and> a \\<noteq> c) \\<Longrightarrow>\n    \\<exists>f. (\\<Sum>i\\<in>{a, b, c}. f i * i) = x * a + y * b + z * c", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (a \\<noteq> b \\<and>\n            b \\<noteq> c \\<and> a \\<noteq> c) \\<Longrightarrow>\n    \\<exists>f. (\\<Sum>i\\<in>{a, b, c}. f i * i) = x * a + y * b + z * c", "case False"], ["proof (state)\nthis:\n  \\<not> (a \\<noteq> b \\<and> b \\<noteq> c \\<and> a \\<noteq> c)\n\ngoal (1 subgoal):\n 1. \\<not> (a \\<noteq> b \\<and>\n            b \\<noteq> c \\<and> a \\<noteq> c) \\<Longrightarrow>\n    \\<exists>f. (\\<Sum>i\\<in>{a, b, c}. f i * i) = x * a + y * b + z * c", "have 1: \"\\<exists>f. f c * c = x * c + y * c + z * c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>f. f c * c = x * c + y * c + z * c", "by (rule exI[of _ \"\\<lambda>i. if i = c then x+y+z else 0\"], auto simp add: local.ring_distribs)"], ["proof (state)\nthis:\n  \\<exists>f. f c * c = x * c + y * c + z * c\n\ngoal (1 subgoal):\n 1. \\<not> (a \\<noteq> b \\<and>\n            b \\<noteq> c \\<and> a \\<noteq> c) \\<Longrightarrow>\n    \\<exists>f. (\\<Sum>i\\<in>{a, b, c}. f i * i) = x * a + y * b + z * c", "have 2: \"\\<exists>f. f a * a + f c * c = x * a + y * c + z * c\" if bc: \" b = c\" and ac: \"a \\<noteq> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>f. f a * a + f c * c = x * a + y * c + z * c", "by (rule exI[of _ \"\\<lambda>i. if i = a then x else y+z\"], insert ac bc add_ac ring_distribs, auto)"], ["proof (state)\nthis:\n  \\<lbrakk>b = c; a \\<noteq> c\\<rbrakk>\n  \\<Longrightarrow> \\<exists>f. f a * a + f c * c = x * a + y * c + z * c\n\ngoal (1 subgoal):\n 1. \\<not> (a \\<noteq> b \\<and>\n            b \\<noteq> c \\<and> a \\<noteq> c) \\<Longrightarrow>\n    \\<exists>f. (\\<Sum>i\\<in>{a, b, c}. f i * i) = x * a + y * b + z * c", "have 3: \"\\<exists>f. f b * b + f c * c = x * b + y * b + z * c\" if bc: \" b \\<noteq> c\" and ac: \"a = b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>f. f b * b + f c * c = x * b + y * b + z * c", "by (rule exI[of _ \"\\<lambda>i. if i = a then x+y else z\"], insert ac bc add_ac ring_distribs, auto)"], ["proof (state)\nthis:\n  \\<lbrakk>b \\<noteq> c; a = b\\<rbrakk>\n  \\<Longrightarrow> \\<exists>f. f b * b + f c * c = x * b + y * b + z * c\n\ngoal (1 subgoal):\n 1. \\<not> (a \\<noteq> b \\<and>\n            b \\<noteq> c \\<and> a \\<noteq> c) \\<Longrightarrow>\n    \\<exists>f. (\\<Sum>i\\<in>{a, b, c}. f i * i) = x * a + y * b + z * c", "have 4: \"\\<exists>f. (\\<Sum>i\\<in>{c, b, c}. f i * i) = x * c + y * b + z * c\" if a: \"a = c\" and b: \"b \\<noteq> c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>f. (\\<Sum>i\\<in>{c, b, c}. f i * i) = x * c + y * b + z * c", "by (rule exI[of _ \"\\<lambda>i. if i = c then x+z else y\"], insert a b add_ac ring_distribs,\n        auto simp add: insert_commute)"], ["proof (state)\nthis:\n  \\<lbrakk>a = c; b \\<noteq> c\\<rbrakk>\n  \\<Longrightarrow> \\<exists>f.\n                       (\\<Sum>i\\<in>{c, b, c}. f i * i) =\n                       x * c + y * b + z * c\n\ngoal (1 subgoal):\n 1. \\<not> (a \\<noteq> b \\<and>\n            b \\<noteq> c \\<and> a \\<noteq> c) \\<Longrightarrow>\n    \\<exists>f. (\\<Sum>i\\<in>{a, b, c}. f i * i) = x * a + y * b + z * c", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>f. (\\<Sum>i\\<in>{a, b, c}. f i * i) = x * a + y * b + z * c", "using False"], ["proof (prove)\nusing this:\n  \\<not> (a \\<noteq> b \\<and> b \\<noteq> c \\<and> a \\<noteq> c)\n\ngoal (1 subgoal):\n 1. \\<exists>f. (\\<Sum>i\\<in>{a, b, c}. f i * i) = x * a + y * b + z * c", "by (cases \"b=c\", cases \"a=c\", auto simp add: 1 2 3 4)"], ["proof (state)\nthis:\n  \\<exists>f. (\\<Sum>i\\<in>{a, b, c}. f i * i) = x * a + y * b + z * c\n\ngoal:\nNo subgoals!", "qed"], ["", "(*This is generalizable to arbitrary sets.*)"], ["", "lemma ideal_generated_triple_pair_rewrite:\n  assumes i1: \"ideal_generated {a, b, c} = ideal_generated {d}\"\n    and i2: \"ideal_generated {a, b} = ideal_generated {d'}\"\n  shows \"ideal_generated{d',c} = ideal_generated {d}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated {d', c} = ideal_generated {d}", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. ideal_generated {d', c} \\<subseteq> ideal_generated {d}\n 2. ideal_generated {d} \\<subseteq> ideal_generated {d', c}", "have d': \"d' \\<in> ideal_generated {a,b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d' \\<in> ideal_generated {a, b}", "using i2"], ["proof (prove)\nusing this:\n  ideal_generated {a, b} = ideal_generated {d'}\n\ngoal (1 subgoal):\n 1. d' \\<in> ideal_generated {a, b}", "by (simp add: ideal_generated_in)"], ["proof (state)\nthis:\n  d' \\<in> ideal_generated {a, b}\n\ngoal (2 subgoals):\n 1. ideal_generated {d', c} \\<subseteq> ideal_generated {d}\n 2. ideal_generated {d} \\<subseteq> ideal_generated {d', c}", "show \"ideal_generated {d', c} \\<subseteq> ideal_generated {d}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated {d', c} \\<subseteq> ideal_generated {d}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ideal_generated {d', c} \\<Longrightarrow>\n       x \\<in> ideal_generated {d}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ideal_generated {d', c} \\<Longrightarrow>\n       x \\<in> ideal_generated {d}", "assume x: \"x \\<in> ideal_generated {d', c}\""], ["proof (state)\nthis:\n  x \\<in> ideal_generated {d', c}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ideal_generated {d', c} \\<Longrightarrow>\n       x \\<in> ideal_generated {d}", "obtain f1 f2 where f: \"f1*d' + f2*c = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>f1 f2.\n        f1 * d' + f2 * c = x \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using obtain_ideal_generated_pair[OF x]"], ["proof (prove)\nusing this:\n  (\\<And>p q.\n      p * d' + q * c = x \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>f1 f2.\n        f1 * d' + f2 * c = x \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  f1 * d' + f2 * c = x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ideal_generated {d', c} \\<Longrightarrow>\n       x \\<in> ideal_generated {d}", "obtain g1 g2 where g: \"g1*a + g2*b = d'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g1 g2.\n        g1 * a + g2 * b = d' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using obtain_ideal_generated_pair[OF d']"], ["proof (prove)\nusing this:\n  (\\<And>p q.\n      p * a + q * b = d' \\<Longrightarrow> ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>g1 g2.\n        g1 * a + g2 * b = d' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  g1 * a + g2 * b = d'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ideal_generated {d', c} \\<Longrightarrow>\n       x \\<in> ideal_generated {d}", "have 1: \"f1*g1*a + f1*g2*b + f2*c = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f1 * g1 * a + f1 * g2 * b + f2 * c = x", "using f g local.ring_distribs(1) local.semiring_normalization_rules(18)"], ["proof (prove)\nusing this:\n  f1 * d' + f2 * c = x\n  g1 * a + g2 * b = d'\n  ?a * (?b + ?c) = ?a * ?b + ?a * ?c\n  ?lx * (?rx * ?ry) = ?lx * ?rx * ?ry\n\ngoal (1 subgoal):\n 1. f1 * g1 * a + f1 * g2 * b + f2 * c = x", "by auto"], ["proof (state)\nthis:\n  f1 * g1 * a + f1 * g2 * b + f2 * c = x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ideal_generated {d', c} \\<Longrightarrow>\n       x \\<in> ideal_generated {d}", "have \"x \\<in> ideal_generated {a, b, c}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> ideal_generated {a, b, c}", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<in> ideal_generated {a, b, c}", "obtain f where \"(\\<Sum>i\\<in>{a,b,c}. f i * i) = f1*g1*a + f1*g2*b + f2*c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>f.\n        (\\<Sum>i\\<in>{a, b, c}. f i * i) =\n        f1 * g1 * a + f1 * g2 * b + f2 * c \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using sum_three_elements' 1"], ["proof (prove)\nusing this:\n  \\<exists>f.\n     (\\<Sum>i\\<in>{?a, ?b, ?c}. f i * i) = ?x * ?a + ?y * ?b + ?z * ?c\n  f1 * g1 * a + f1 * g2 * b + f2 * c = x\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        (\\<Sum>i\\<in>{a, b, c}. f i * i) =\n        f1 * g1 * a + f1 * g2 * b + f2 * c \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{a, b, c}. f i * i) = f1 * g1 * a + f1 * g2 * b + f2 * c\n\ngoal (1 subgoal):\n 1. x \\<in> ideal_generated {a, b, c}", "moreover"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{a, b, c}. f i * i) = f1 * g1 * a + f1 * g2 * b + f2 * c\n\ngoal (1 subgoal):\n 1. x \\<in> ideal_generated {a, b, c}", "have \"ideal_generated {a,b,c} = {y. \\<exists>f. (\\<Sum>i\\<in>{a,b,c}. f i * i) = y}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated {a, b, c} =\n    {y. \\<exists>f. (\\<Sum>i\\<in>{a, b, c}. f i * i) = y}", "using ideal_explicit2[of \"{a,b,c}\"]"], ["proof (prove)\nusing this:\n  finite {a, b, c} \\<Longrightarrow>\n  ideal_generated {a, b, c} =\n  {y. \\<exists>f. (\\<Sum>i\\<in>{a, b, c}. f i * i) = y}\n\ngoal (1 subgoal):\n 1. ideal_generated {a, b, c} =\n    {y. \\<exists>f. (\\<Sum>i\\<in>{a, b, c}. f i * i) = y}", "by simp"], ["proof (state)\nthis:\n  ideal_generated {a, b, c} =\n  {y. \\<exists>f. (\\<Sum>i\\<in>{a, b, c}. f i * i) = y}\n\ngoal (1 subgoal):\n 1. x \\<in> ideal_generated {a, b, c}", "ultimately"], ["proof (chain)\npicking this:\n  (\\<Sum>i\\<in>{a, b, c}. f i * i) = f1 * g1 * a + f1 * g2 * b + f2 * c\n  ideal_generated {a, b, c} =\n  {y. \\<exists>f. (\\<Sum>i\\<in>{a, b, c}. f i * i) = y}", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>{a, b, c}. f i * i) = f1 * g1 * a + f1 * g2 * b + f2 * c\n  ideal_generated {a, b, c} =\n  {y. \\<exists>f. (\\<Sum>i\\<in>{a, b, c}. f i * i) = y}\n\ngoal (1 subgoal):\n 1. x \\<in> ideal_generated {a, b, c}", "using 1"], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>{a, b, c}. f i * i) = f1 * g1 * a + f1 * g2 * b + f2 * c\n  ideal_generated {a, b, c} =\n  {y. \\<exists>f. (\\<Sum>i\\<in>{a, b, c}. f i * i) = y}\n  f1 * g1 * a + f1 * g2 * b + f2 * c = x\n\ngoal (1 subgoal):\n 1. x \\<in> ideal_generated {a, b, c}", "by auto"], ["proof (state)\nthis:\n  x \\<in> ideal_generated {a, b, c}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  x \\<in> ideal_generated {a, b, c}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ideal_generated {d', c} \\<Longrightarrow>\n       x \\<in> ideal_generated {d}", "thus \"x \\<in> ideal_generated {d}\""], ["proof (prove)\nusing this:\n  x \\<in> ideal_generated {a, b, c}\n\ngoal (1 subgoal):\n 1. x \\<in> ideal_generated {d}", "using i1"], ["proof (prove)\nusing this:\n  x \\<in> ideal_generated {a, b, c}\n  ideal_generated {a, b, c} = ideal_generated {d}\n\ngoal (1 subgoal):\n 1. x \\<in> ideal_generated {d}", "by auto"], ["proof (state)\nthis:\n  x \\<in> ideal_generated {d}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ideal_generated {d', c} \\<subseteq> ideal_generated {d}\n\ngoal (1 subgoal):\n 1. ideal_generated {d} \\<subseteq> ideal_generated {d', c}", "show \"ideal_generated {d} \\<subseteq> ideal_generated {d', c}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated {d} \\<subseteq> ideal_generated {d', c}", "proof (rule ideal_generated_singleton_subset)"], ["proof (state)\ngoal (2 subgoals):\n 1. d \\<in> ideal_generated {d', c}\n 2. finite {d', c}", "obtain f1 f2 f3 where f: \"f1*a + f2*b + f3*c = d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>f1 f2 f3.\n        f1 * a + f2 * b + f3 * c = d \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>f1 f2 f3.\n        f1 * a + f2 * b + f3 * c = d \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "have \"d \\<in> ideal_generated {a,b,c}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d \\<in> ideal_generated {a, b, c}", "using i1"], ["proof (prove)\nusing this:\n  ideal_generated {a, b, c} = ideal_generated {d}\n\ngoal (1 subgoal):\n 1. d \\<in> ideal_generated {a, b, c}", "by (simp add: ideal_generated_in)"], ["proof (state)\nthis:\n  d \\<in> ideal_generated {a, b, c}\n\ngoal (1 subgoal):\n 1. (\\<And>f1 f2 f3.\n        f1 * a + f2 * b + f3 * c = d \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "from this"], ["proof (chain)\npicking this:\n  d \\<in> ideal_generated {a, b, c}", "obtain f where d: \"(\\<Sum>i\\<in>{a,b,c}. f i * i) = d\""], ["proof (prove)\nusing this:\n  d \\<in> ideal_generated {a, b, c}\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        (\\<Sum>i\\<in>{a, b, c}. f i * i) = d \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using ideal_explicit2[of \"{a,b,c}\"]"], ["proof (prove)\nusing this:\n  d \\<in> ideal_generated {a, b, c}\n  finite {a, b, c} \\<Longrightarrow>\n  ideal_generated {a, b, c} =\n  {y. \\<exists>f. (\\<Sum>i\\<in>{a, b, c}. f i * i) = y}\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        (\\<Sum>i\\<in>{a, b, c}. f i * i) = d \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{a, b, c}. f i * i) = d\n\ngoal (1 subgoal):\n 1. (\\<And>f1 f2 f3.\n        f1 * a + f2 * b + f3 * c = d \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "obtain x y z where \"(\\<Sum>i\\<in>{a,b,c}. f i * i) = x * a + y * b + z * c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x y z.\n        (\\<Sum>i\\<in>{a, b, c}. f i * i) =\n        x * a + y * b + z * c \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using sum_three_elements"], ["proof (prove)\nusing this:\n  \\<exists>x y z.\n     (\\<Sum>i\\<in>{?a, ?b, ?c}. ?f i * i) = x * ?a + y * ?b + z * ?c\n\ngoal (1 subgoal):\n 1. (\\<And>x y z.\n        (\\<Sum>i\\<in>{a, b, c}. f i * i) =\n        x * a + y * b + z * c \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{a, b, c}. f i * i) = x * a + y * b + z * c\n\ngoal (1 subgoal):\n 1. (\\<And>f1 f2 f3.\n        f1 * a + f2 * b + f3 * c = d \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "thus ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>{a, b, c}. f i * i) = x * a + y * b + z * c\n\ngoal (1 subgoal):\n 1. thesis", "using d that"], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>{a, b, c}. f i * i) = x * a + y * b + z * c\n  (\\<Sum>i\\<in>{a, b, c}. f i * i) = d\n  ?f1.1 * a + ?f2.1 * b + ?f3.1 * c = d \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f1 * a + f2 * b + f3 * c = d\n\ngoal (2 subgoals):\n 1. d \\<in> ideal_generated {d', c}\n 2. finite {d', c}", "obtain k where k: \"f1*a + f2*b = k*d'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k.\n        f1 * a + f2 * b = k * d' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>k.\n        f1 * a + f2 * b = k * d' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"f1*a + f2*b \\<in> ideal_generated{a,b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f1 * a + f2 * b \\<in> ideal_generated {a, b}", "using ideal_generated_pair"], ["proof (prove)\nusing this:\n  ideal_generated {?a, ?b} = {p * ?a + q * ?b |p q. True}\n\ngoal (1 subgoal):\n 1. f1 * a + f2 * b \\<in> ideal_generated {a, b}", "by blast"], ["proof (state)\nthis:\n  f1 * a + f2 * b \\<in> ideal_generated {a, b}\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        f1 * a + f2 * b = k * d' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  f1 * a + f2 * b \\<in> ideal_generated {a, b}\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        f1 * a + f2 * b = k * d' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"... = ideal_generated {d'}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated {a, b} = ideal_generated {d'}", "using i2"], ["proof (prove)\nusing this:\n  ideal_generated {a, b} = ideal_generated {d'}\n\ngoal (1 subgoal):\n 1. ideal_generated {a, b} = ideal_generated {d'}", "by simp"], ["proof (state)\nthis:\n  ideal_generated {a, b} = ideal_generated {d'}\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        f1 * a + f2 * b = k * d' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "also"], ["proof (state)\nthis:\n  ideal_generated {a, b} = ideal_generated {d'}\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        f1 * a + f2 * b = k * d' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"... = {k*d' |k. k\\<in>UNIV}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated {d'} = {k * d' |k. k \\<in> UNIV}", "using ideal_generated_singleton"], ["proof (prove)\nusing this:\n  ideal_generated {?a} = {k * ?a |k. k \\<in> UNIV}\n\ngoal (1 subgoal):\n 1. ideal_generated {d'} = {k * d' |k. k \\<in> UNIV}", "by auto"], ["proof (state)\nthis:\n  ideal_generated {d'} = {k * d' |k. k \\<in> UNIV}\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        f1 * a + f2 * b = k * d' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "finally"], ["proof (chain)\npicking this:\n  f1 * a + f2 * b \\<in> {k * d' |k. k \\<in> UNIV}", "show ?thesis"], ["proof (prove)\nusing this:\n  f1 * a + f2 * b \\<in> {k * d' |k. k \\<in> UNIV}\n\ngoal (1 subgoal):\n 1. thesis", "using that"], ["proof (prove)\nusing this:\n  f1 * a + f2 * b \\<in> {k * d' |k. k \\<in> UNIV}\n  f1 * a + f2 * b = ?k1 * d' \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f1 * a + f2 * b = k * d'\n\ngoal (2 subgoals):\n 1. d \\<in> ideal_generated {d', c}\n 2. finite {d', c}", "have \"k*d'+f3*c=d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k * d' + f3 * c = d", "using f k"], ["proof (prove)\nusing this:\n  f1 * a + f2 * b + f3 * c = d\n  f1 * a + f2 * b = k * d'\n\ngoal (1 subgoal):\n 1. k * d' + f3 * c = d", "by auto"], ["proof (state)\nthis:\n  k * d' + f3 * c = d\n\ngoal (2 subgoals):\n 1. d \\<in> ideal_generated {d', c}\n 2. finite {d', c}", "thus \"d \\<in> ideal_generated {d', c}\""], ["proof (prove)\nusing this:\n  k * d' + f3 * c = d\n\ngoal (1 subgoal):\n 1. d \\<in> ideal_generated {d', c}", "using ideal_generated_pair"], ["proof (prove)\nusing this:\n  k * d' + f3 * c = d\n  ideal_generated {?a, ?b} = {p * ?a + q * ?b |p q. True}\n\ngoal (1 subgoal):\n 1. d \\<in> ideal_generated {d', c}", "by blast"], ["proof (state)\nthis:\n  d \\<in> ideal_generated {d', c}\n\ngoal (1 subgoal):\n 1. finite {d', c}", "qed (simp)"], ["proof (state)\nthis:\n  ideal_generated {d} \\<subseteq> ideal_generated {d', c}\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ideal_generated_dvd:\n  assumes i: \"ideal_generated {a,b::'a} = ideal_generated{d} \"\n  and a: \"d' dvd a\" and b: \"d' dvd b\"\nshows \"d' dvd d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d' dvd d", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. d' dvd d", "obtain p q where \"p*a+q*b = d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p q.\n        p * a + q * b = d \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using i ideal_generated_pair_exists"], ["proof (prove)\nusing this:\n  ideal_generated {a, b} = ideal_generated {d}\n  ideal_generated {?a, ?b} = ideal_generated {?d} \\<Longrightarrow>\n  \\<exists>p q. p * ?a + q * ?b = ?d\n\ngoal (1 subgoal):\n 1. (\\<And>p q.\n        p * a + q * b = d \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  p * a + q * b = d\n\ngoal (1 subgoal):\n 1. d' dvd d", "thus ?thesis"], ["proof (prove)\nusing this:\n  p * a + q * b = d\n\ngoal (1 subgoal):\n 1. d' dvd d", "using a b"], ["proof (prove)\nusing this:\n  p * a + q * b = d\n  d' dvd a\n  d' dvd b\n\ngoal (1 subgoal):\n 1. d' dvd d", "by auto"], ["proof (state)\nthis:\n  d' dvd d\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma ideal_generated_dvd2:\n  assumes i: \"ideal_generated S = ideal_generated{d::'a} \"\n  and \"finite S\"\n  and x: \"\\<forall>x\\<in>S. d' dvd x\"\nshows \"d' dvd d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d' dvd d", "by (metis assms dvd_ideal_generated_singleton ideal_generated_dvd_subset)"], ["", "end"], ["", "subsection \\<open>An equivalent characterization of B\\'ezout rings\\<close>"], ["", "text \\<open>The goal of this subsection is to prove that a ring is B\\'ezout ring if and only if every\n  finitely generated ideal is principal.\\<close>"], ["", "definition \"finitely_generated_ideal I = (ideal I \\<and> (\\<exists>S. finite S \\<and> ideal_generated S = I))\""], ["", "context\n  assumes \"SORT_CONSTRAINT('a::comm_ring_1)\"\nbegin"], ["", "lemma sum_two_elements':\n  fixes d::'a\n  assumes s: \"(\\<Sum>i\\<in>{a,b}. f i * i) = d\"\n  obtains p and q where \"d = p * a + q * b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p q.\n        d = p * a + q * b \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof (cases \"a=b\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>p q. d = p * a + q * b \\<Longrightarrow> thesis;\n     a = b\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>p q. d = p * a + q * b \\<Longrightarrow> thesis;\n     a \\<noteq> b\\<rbrakk>\n    \\<Longrightarrow> thesis", "case True"], ["proof (state)\nthis:\n  a = b\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>p q. d = p * a + q * b \\<Longrightarrow> thesis;\n     a = b\\<rbrakk>\n    \\<Longrightarrow> thesis\n 2. \\<lbrakk>\\<And>p q. d = p * a + q * b \\<Longrightarrow> thesis;\n     a \\<noteq> b\\<rbrakk>\n    \\<Longrightarrow> thesis", "then"], ["proof (chain)\npicking this:\n  a = b", "show ?thesis"], ["proof (prove)\nusing this:\n  a = b\n\ngoal (1 subgoal):\n 1. thesis", "by (metis (no_types, lifting) add_diff_cancel_left' emptyE finite.emptyI insert_absorb2\n        left_diff_distrib' s sum.insert sum_singleton that)"], ["proof (state)\nthis:\n  thesis\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>p q. d = p * a + q * b \\<Longrightarrow> thesis;\n     a \\<noteq> b\\<rbrakk>\n    \\<Longrightarrow> thesis", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>p q. d = p * a + q * b \\<Longrightarrow> thesis;\n     a \\<noteq> b\\<rbrakk>\n    \\<Longrightarrow> thesis", "case False"], ["proof (state)\nthis:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>p q. d = p * a + q * b \\<Longrightarrow> thesis;\n     a \\<noteq> b\\<rbrakk>\n    \\<Longrightarrow> thesis", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. thesis", "using s"], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>{a, b}. f i * i) = d\n\ngoal (1 subgoal):\n 1. thesis", "unfolding sum_two_elements[OF False]"], ["proof (prove)\nusing this:\n  f a * a + f b * b = d\n\ngoal (1 subgoal):\n 1. thesis", "using that"], ["proof (prove)\nusing this:\n  f a * a + f b * b = d\n  d = ?p * a + ?q * b \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by auto"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>This proof follows Theorem 6-3 in \"First Course in Rings and Ideals\" by Burton\\<close>"], ["", "lemma all_fin_gen_ideals_are_principal_imp_bezout:\n  assumes all: \"\\<forall>I::'a set. finitely_generated_ideal I \\<longrightarrow> principal_ideal I\"\n  shows \"OFCLASS ('a, bezout_ring_class)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. OFCLASS('a, bezout_ring_class)", "proof (intro_classes)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<exists>p q d.\n          p * a + q * b = d \\<and>\n          d dvd a \\<and>\n          d dvd b \\<and>\n          (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)", "fix a b::'a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<exists>p q d.\n          p * a + q * b = d \\<and>\n          d dvd a \\<and>\n          d dvd b \\<and>\n          (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)", "obtain d where ideal_d: \"ideal_generated {a,b} = ideal_generated {d}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>d.\n        ideal_generated {a, b} = ideal_generated {d} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using all"], ["proof (prove)\nusing this:\n  \\<forall>I. finitely_generated_ideal I \\<longrightarrow> principal_ideal I\n\ngoal (1 subgoal):\n 1. (\\<And>d.\n        ideal_generated {a, b} = ideal_generated {d} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding finitely_generated_ideal_def"], ["proof (prove)\nusing this:\n  \\<forall>I.\n     ideal I \\<and>\n     (\\<exists>S. finite S \\<and> ideal_generated S = I) \\<longrightarrow>\n     principal_ideal I\n\ngoal (1 subgoal):\n 1. (\\<And>d.\n        ideal_generated {a, b} = ideal_generated {d} \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (metis finite.emptyI finite_insert ideal_ideal_generated principal_ideal_def)"], ["proof (state)\nthis:\n  ideal_generated {a, b} = ideal_generated {d}\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<exists>p q d.\n          p * a + q * b = d \\<and>\n          d dvd a \\<and>\n          d dvd b \\<and>\n          (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)", "have a_in_d: \"a \\<in> ideal_generated {d}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<in> ideal_generated {d}", "using ideal_d ideal_generated_subset_generator"], ["proof (prove)\nusing this:\n  ideal_generated {a, b} = ideal_generated {d}\n  ideal_generated ?A = ?I \\<Longrightarrow> ?A \\<subseteq> ?I\n\ngoal (1 subgoal):\n 1. a \\<in> ideal_generated {d}", "by blast"], ["proof (state)\nthis:\n  a \\<in> ideal_generated {d}\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<exists>p q d.\n          p * a + q * b = d \\<and>\n          d dvd a \\<and>\n          d dvd b \\<and>\n          (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)", "have b_in_d: \"b \\<in> ideal_generated {d}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b \\<in> ideal_generated {d}", "using ideal_d ideal_generated_subset_generator"], ["proof (prove)\nusing this:\n  ideal_generated {a, b} = ideal_generated {d}\n  ideal_generated ?A = ?I \\<Longrightarrow> ?A \\<subseteq> ?I\n\ngoal (1 subgoal):\n 1. b \\<in> ideal_generated {d}", "by blast"], ["proof (state)\nthis:\n  b \\<in> ideal_generated {d}\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<exists>p q d.\n          p * a + q * b = d \\<and>\n          d dvd a \\<and>\n          d dvd b \\<and>\n          (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)", "have d_in_ab: \"d \\<in> ideal_generated {a,b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d \\<in> ideal_generated {a, b}", "using ideal_d ideal_generated_subset_generator"], ["proof (prove)\nusing this:\n  ideal_generated {a, b} = ideal_generated {d}\n  ideal_generated ?A = ?I \\<Longrightarrow> ?A \\<subseteq> ?I\n\ngoal (1 subgoal):\n 1. d \\<in> ideal_generated {a, b}", "by auto"], ["proof (state)\nthis:\n  d \\<in> ideal_generated {a, b}\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<exists>p q d.\n          p * a + q * b = d \\<and>\n          d dvd a \\<and>\n          d dvd b \\<and>\n          (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)", "obtain f where \"(\\<Sum>i\\<in>{a,b}. f i * i) = d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>f.\n        (\\<Sum>i\\<in>{a, b}. f i * i) = d \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using obtain_sum_ideal_generated[OF d_in_ab]"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite {a, b};\n   \\<And>f.\n      (\\<Sum>i\\<in>{a, b}. f i * i) = d \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        (\\<Sum>i\\<in>{a, b}. f i * i) = d \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>{a, b}. f i * i) = d\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<exists>p q d.\n          p * a + q * b = d \\<and>\n          d dvd a \\<and>\n          d dvd b \\<and>\n          (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)", "from this"], ["proof (chain)\npicking this:\n  (\\<Sum>i\\<in>{a, b}. f i * i) = d", "obtain p q where d_eq: \"d = p*a + q*b\""], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>{a, b}. f i * i) = d\n\ngoal (1 subgoal):\n 1. (\\<And>p q.\n        d = p * a + q * b \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using sum_two_elements'"], ["proof (prove)\nusing this:\n  (\\<Sum>i\\<in>{a, b}. f i * i) = d\n  \\<lbrakk>(\\<Sum>i\\<in>{?a, ?b}. ?f i * i) = ?d;\n   \\<And>p q. ?d = p * ?a + q * ?b \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>p q.\n        d = p * a + q * b \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  d = p * a + q * b\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<exists>p q d.\n          p * a + q * b = d \\<and>\n          d dvd a \\<and>\n          d dvd b \\<and>\n          (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)", "moreover"], ["proof (state)\nthis:\n  d = p * a + q * b\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<exists>p q d.\n          p * a + q * b = d \\<and>\n          d dvd a \\<and>\n          d dvd b \\<and>\n          (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)", "have d_dvd_a: \"d dvd a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d dvd a", "by (metis dvd_ideal_generated_singleton ideal_d ideal_generated_subset insert_commute\n        subset_insertI)"], ["proof (state)\nthis:\n  d dvd a\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<exists>p q d.\n          p * a + q * b = d \\<and>\n          d dvd a \\<and>\n          d dvd b \\<and>\n          (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)", "moreover"], ["proof (state)\nthis:\n  d dvd a\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<exists>p q d.\n          p * a + q * b = d \\<and>\n          d dvd a \\<and>\n          d dvd b \\<and>\n          (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)", "have \"d dvd b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d dvd b", "by (metis dvd_ideal_generated_singleton ideal_d ideal_generated_subset subset_insertI)"], ["proof (state)\nthis:\n  d dvd b\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<exists>p q d.\n          p * a + q * b = d \\<and>\n          d dvd a \\<and>\n          d dvd b \\<and>\n          (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)", "moreover"], ["proof (state)\nthis:\n  d dvd b\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<exists>p q d.\n          p * a + q * b = d \\<and>\n          d dvd a \\<and>\n          d dvd b \\<and>\n          (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)", "have \"d' dvd d\" if d'_dvd: \"d' dvd a \\<and> d' dvd b\" for d'"], ["proof (prove)\ngoal (1 subgoal):\n 1. d' dvd d", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. d' dvd d", "obtain s1 s2 where s1_dvd: \"a = s1*d'\" and s2_dvd: \"b = s2*d'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>s1 s2.\n        \\<lbrakk>a = s1 * d'; b = s2 * d'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using mult.commute d'_dvd"], ["proof (prove)\nusing this:\n  ?a * ?b = ?b * ?a\n  d' dvd a \\<and> d' dvd b\n\ngoal (1 subgoal):\n 1. (\\<And>s1 s2.\n        \\<lbrakk>a = s1 * d'; b = s2 * d'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding dvd_def"], ["proof (prove)\nusing this:\n  ?a * ?b = ?b * ?a\n  (\\<exists>k. a = d' * k) \\<and> (\\<exists>k. b = d' * k)\n\ngoal (1 subgoal):\n 1. (\\<And>s1 s2.\n        \\<lbrakk>a = s1 * d'; b = s2 * d'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  a = s1 * d'\n  b = s2 * d'\n\ngoal (1 subgoal):\n 1. d' dvd d", "have \"d = p*a + q*b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d = p * a + q * b", "using d_eq"], ["proof (prove)\nusing this:\n  d = p * a + q * b\n\ngoal (1 subgoal):\n 1. d = p * a + q * b", "."], ["proof (state)\nthis:\n  d = p * a + q * b\n\ngoal (1 subgoal):\n 1. d' dvd d", "also"], ["proof (state)\nthis:\n  d = p * a + q * b\n\ngoal (1 subgoal):\n 1. d' dvd d", "have \"...= p * s1 * d' + q * s2 *d'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p * a + q * b = p * s1 * d' + q * s2 * d'", "unfolding s1_dvd s2_dvd"], ["proof (prove)\ngoal (1 subgoal):\n 1. p * (s1 * d') + q * (s2 * d') = p * s1 * d' + q * s2 * d'", "by auto"], ["proof (state)\nthis:\n  p * a + q * b = p * s1 * d' + q * s2 * d'\n\ngoal (1 subgoal):\n 1. d' dvd d", "also"], ["proof (state)\nthis:\n  p * a + q * b = p * s1 * d' + q * s2 * d'\n\ngoal (1 subgoal):\n 1. d' dvd d", "have \"... = (p * s1 + q * s2) * d'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p * s1 * d' + q * s2 * d' = (p * s1 + q * s2) * d'", "by (simp add: ring_class.ring_distribs(2))"], ["proof (state)\nthis:\n  p * s1 * d' + q * s2 * d' = (p * s1 + q * s2) * d'\n\ngoal (1 subgoal):\n 1. d' dvd d", "finally"], ["proof (chain)\npicking this:\n  d = (p * s1 + q * s2) * d'", "show \"d' dvd d\""], ["proof (prove)\nusing this:\n  d = (p * s1 + q * s2) * d'\n\ngoal (1 subgoal):\n 1. d' dvd d", "using mult.commute"], ["proof (prove)\nusing this:\n  d = (p * s1 + q * s2) * d'\n  ?a * ?b = ?b * ?a\n\ngoal (1 subgoal):\n 1. d' dvd d", "unfolding dvd_def"], ["proof (prove)\nusing this:\n  d = (p * s1 + q * s2) * d'\n  ?a * ?b = ?b * ?a\n\ngoal (1 subgoal):\n 1. \\<exists>k. d = d' * k", "by auto"], ["proof (state)\nthis:\n  d' dvd d\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?d' dvd a \\<and> ?d' dvd b \\<Longrightarrow> ?d' dvd d\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<exists>p q d.\n          p * a + q * b = d \\<and>\n          d dvd a \\<and>\n          d dvd b \\<and>\n          (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)", "ultimately"], ["proof (chain)\npicking this:\n  d = p * a + q * b\n  d dvd a\n  d dvd b\n  ?d' dvd a \\<and> ?d' dvd b \\<Longrightarrow> ?d' dvd d", "show \"\\<exists>p q d. p * a + q * b = d \\<and> d dvd a \\<and> d dvd b\n  \\<and> (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)\""], ["proof (prove)\nusing this:\n  d = p * a + q * b\n  d dvd a\n  d dvd b\n  ?d' dvd a \\<and> ?d' dvd b \\<Longrightarrow> ?d' dvd d\n\ngoal (1 subgoal):\n 1. \\<exists>p q d.\n       p * a + q * b = d \\<and>\n       d dvd a \\<and>\n       d dvd b \\<and>\n       (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)", "by auto"], ["proof (state)\nthis:\n  \\<exists>p q d.\n     p * a + q * b = d \\<and>\n     d dvd a \\<and>\n     d dvd b \\<and>\n     (\\<forall>d'. d' dvd a \\<and> d' dvd b \\<longrightarrow> d' dvd d)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "context bezout_ring\nbegin"], ["", "lemma exists_bezout_extended:\n  assumes S: \"finite S\" and ne: \"S \\<noteq> {}\"\n  shows \"\\<exists>f d. (\\<Sum>a\\<in>S. f a * a) = d \\<and> (\\<forall>a\\<in>S. d dvd a) \\<and> (\\<forall>d'. (\\<forall>a\\<in>S. d' dvd a) \\<longrightarrow> d' dvd d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>f d.\n       (\\<Sum>a\\<in>S. f a * a) = d \\<and>\n       (\\<forall>a\\<in>S. d dvd a) \\<and>\n       (\\<forall>d'.\n           (\\<forall>a\\<in>S. d' dvd a) \\<longrightarrow> d' dvd d)", "using S ne"], ["proof (prove)\nusing this:\n  finite S\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>f d.\n       (\\<Sum>a\\<in>S. f a * a) = d \\<and>\n       (\\<forall>a\\<in>S. d dvd a) \\<and>\n       (\\<forall>d'.\n           (\\<forall>a\\<in>S. d' dvd a) \\<longrightarrow> d' dvd d)", "proof (induct S)"], ["proof (state)\ngoal (2 subgoals):\n 1. {} \\<noteq> {} \\<Longrightarrow>\n    \\<exists>f d.\n       (\\<Sum>a\\<in>{}. f a * a) = d \\<and>\n       Ball {} ((dvd) d) \\<and>\n       (\\<forall>d'. Ball {} ((dvd) d') \\<longrightarrow> d' dvd d)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<noteq> {} \\<Longrightarrow>\n        \\<exists>f d.\n           (\\<Sum>a\\<in>F. f a * a) = d \\<and>\n           Ball F ((dvd) d) \\<and>\n           (\\<forall>d'. Ball F ((dvd) d') \\<longrightarrow> d' dvd d);\n        insert x F \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f d.\n                            (\\<Sum>a\\<in>insert x F. f a * a) = d \\<and>\n                            Ball (insert x F) ((dvd) d) \\<and>\n                            (\\<forall>d'.\n                                Ball (insert x F)\n                                 ((dvd) d') \\<longrightarrow>\n                                d' dvd d)", "case empty"], ["proof (state)\nthis:\n  {} \\<noteq> {}\n\ngoal (2 subgoals):\n 1. {} \\<noteq> {} \\<Longrightarrow>\n    \\<exists>f d.\n       (\\<Sum>a\\<in>{}. f a * a) = d \\<and>\n       Ball {} ((dvd) d) \\<and>\n       (\\<forall>d'. Ball {} ((dvd) d') \\<longrightarrow> d' dvd d)\n 2. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<noteq> {} \\<Longrightarrow>\n        \\<exists>f d.\n           (\\<Sum>a\\<in>F. f a * a) = d \\<and>\n           Ball F ((dvd) d) \\<and>\n           (\\<forall>d'. Ball F ((dvd) d') \\<longrightarrow> d' dvd d);\n        insert x F \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f d.\n                            (\\<Sum>a\\<in>insert x F. f a * a) = d \\<and>\n                            Ball (insert x F) ((dvd) d) \\<and>\n                            (\\<forall>d'.\n                                Ball (insert x F)\n                                 ((dvd) d') \\<longrightarrow>\n                                d' dvd d)", "then"], ["proof (chain)\npicking this:\n  {} \\<noteq> {}", "show ?case"], ["proof (prove)\nusing this:\n  {} \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<exists>f d.\n       (\\<Sum>a\\<in>{}. f a * a) = d \\<and>\n       (\\<forall>a\\<in>{}. d dvd a) \\<and>\n       (\\<forall>d'.\n           (\\<forall>a\\<in>{}. d' dvd a) \\<longrightarrow> d' dvd d)", "by auto"], ["proof (state)\nthis:\n  \\<exists>f d.\n     (\\<Sum>a\\<in>{}. f a * a) = d \\<and>\n     (\\<forall>a\\<in>{}. d dvd a) \\<and>\n     (\\<forall>d'. (\\<forall>a\\<in>{}. d' dvd a) \\<longrightarrow> d' dvd d)\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<noteq> {} \\<Longrightarrow>\n        \\<exists>f d.\n           (\\<Sum>a\\<in>F. f a * a) = d \\<and>\n           Ball F ((dvd) d) \\<and>\n           (\\<forall>d'. Ball F ((dvd) d') \\<longrightarrow> d' dvd d);\n        insert x F \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f d.\n                            (\\<Sum>a\\<in>insert x F. f a * a) = d \\<and>\n                            Ball (insert x F) ((dvd) d) \\<and>\n                            (\\<forall>d'.\n                                Ball (insert x F)\n                                 ((dvd) d') \\<longrightarrow>\n                                d' dvd d)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<noteq> {} \\<Longrightarrow>\n        \\<exists>f d.\n           (\\<Sum>a\\<in>F. f a * a) = d \\<and>\n           Ball F ((dvd) d) \\<and>\n           (\\<forall>d'. Ball F ((dvd) d') \\<longrightarrow> d' dvd d);\n        insert x F \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f d.\n                            (\\<Sum>a\\<in>insert x F. f a * a) = d \\<and>\n                            Ball (insert x F) ((dvd) d) \\<and>\n                            (\\<forall>d'.\n                                Ball (insert x F)\n                                 ((dvd) d') \\<longrightarrow>\n                                d' dvd d)", "case (insert x S)"], ["proof (state)\nthis:\n  finite S\n  x \\<notin> S\n  S \\<noteq> {} \\<Longrightarrow>\n  \\<exists>f d.\n     (\\<Sum>a\\<in>S. f a * a) = d \\<and>\n     (\\<forall>a\\<in>S. d dvd a) \\<and>\n     (\\<forall>d'. (\\<forall>a\\<in>S. d' dvd a) \\<longrightarrow> d' dvd d)\n  insert x S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. \\<And>x F.\n       \\<lbrakk>finite F; x \\<notin> F;\n        F \\<noteq> {} \\<Longrightarrow>\n        \\<exists>f d.\n           (\\<Sum>a\\<in>F. f a * a) = d \\<and>\n           Ball F ((dvd) d) \\<and>\n           (\\<forall>d'. Ball F ((dvd) d') \\<longrightarrow> d' dvd d);\n        insert x F \\<noteq> {}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>f d.\n                            (\\<Sum>a\\<in>insert x F. f a * a) = d \\<and>\n                            Ball (insert x F) ((dvd) d) \\<and>\n                            (\\<forall>d'.\n                                Ball (insert x F)\n                                 ((dvd) d') \\<longrightarrow>\n                                d' dvd d)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>f d.\n       (\\<Sum>a\\<in>insert x S. f a * a) = d \\<and>\n       (\\<forall>a\\<in>insert x S. d dvd a) \\<and>\n       (\\<forall>d'.\n           (\\<forall>a\\<in>insert x S. d' dvd a) \\<longrightarrow> d' dvd d)", "proof (cases  \"S={}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. S = {} \\<Longrightarrow>\n    \\<exists>f d.\n       (\\<Sum>a\\<in>insert x S. f a * a) = d \\<and>\n       (\\<forall>a\\<in>insert x S. d dvd a) \\<and>\n       (\\<forall>d'.\n           (\\<forall>a\\<in>insert x S. d' dvd a) \\<longrightarrow> d' dvd d)\n 2. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>f d.\n       (\\<Sum>a\\<in>insert x S. f a * a) = d \\<and>\n       (\\<forall>a\\<in>insert x S. d dvd a) \\<and>\n       (\\<forall>d'.\n           (\\<forall>a\\<in>insert x S. d' dvd a) \\<longrightarrow> d' dvd d)", "case True"], ["proof (state)\nthis:\n  S = {}\n\ngoal (2 subgoals):\n 1. S = {} \\<Longrightarrow>\n    \\<exists>f d.\n       (\\<Sum>a\\<in>insert x S. f a * a) = d \\<and>\n       (\\<forall>a\\<in>insert x S. d dvd a) \\<and>\n       (\\<forall>d'.\n           (\\<forall>a\\<in>insert x S. d' dvd a) \\<longrightarrow> d' dvd d)\n 2. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>f d.\n       (\\<Sum>a\\<in>insert x S. f a * a) = d \\<and>\n       (\\<forall>a\\<in>insert x S. d dvd a) \\<and>\n       (\\<forall>d'.\n           (\\<forall>a\\<in>insert x S. d' dvd a) \\<longrightarrow> d' dvd d)", "let ?f = \"\\<lambda>x. 1\""], ["proof (state)\ngoal (2 subgoals):\n 1. S = {} \\<Longrightarrow>\n    \\<exists>f d.\n       (\\<Sum>a\\<in>insert x S. f a * a) = d \\<and>\n       (\\<forall>a\\<in>insert x S. d dvd a) \\<and>\n       (\\<forall>d'.\n           (\\<forall>a\\<in>insert x S. d' dvd a) \\<longrightarrow> d' dvd d)\n 2. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>f d.\n       (\\<Sum>a\\<in>insert x S. f a * a) = d \\<and>\n       (\\<forall>a\\<in>insert x S. d dvd a) \\<and>\n       (\\<forall>d'.\n           (\\<forall>a\\<in>insert x S. d' dvd a) \\<longrightarrow> d' dvd d)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>f d.\n       (\\<Sum>a\\<in>insert x S. f a * a) = d \\<and>\n       (\\<forall>a\\<in>insert x S. d dvd a) \\<and>\n       (\\<forall>d'.\n           (\\<forall>a\\<in>insert x S. d' dvd a) \\<longrightarrow> d' dvd d)", "by (rule exI[of _ ?f], insert True, auto)"], ["proof (state)\nthis:\n  \\<exists>f d.\n     (\\<Sum>a\\<in>insert x S. f a * a) = d \\<and>\n     (\\<forall>a\\<in>insert x S. d dvd a) \\<and>\n     (\\<forall>d'.\n         (\\<forall>a\\<in>insert x S. d' dvd a) \\<longrightarrow> d' dvd d)\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>f d.\n       (\\<Sum>a\\<in>insert x S. f a * a) = d \\<and>\n       (\\<forall>a\\<in>insert x S. d dvd a) \\<and>\n       (\\<forall>d'.\n           (\\<forall>a\\<in>insert x S. d' dvd a) \\<longrightarrow> d' dvd d)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>f d.\n       (\\<Sum>a\\<in>insert x S. f a * a) = d \\<and>\n       (\\<forall>a\\<in>insert x S. d dvd a) \\<and>\n       (\\<forall>d'.\n           (\\<forall>a\\<in>insert x S. d' dvd a) \\<longrightarrow> d' dvd d)", "case False"], ["proof (state)\nthis:\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>f d.\n       (\\<Sum>a\\<in>insert x S. f a * a) = d \\<and>\n       (\\<forall>a\\<in>insert x S. d dvd a) \\<and>\n       (\\<forall>d'.\n           (\\<forall>a\\<in>insert x S. d' dvd a) \\<longrightarrow> d' dvd d)", "note ne = False"], ["proof (state)\nthis:\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>f d.\n       (\\<Sum>a\\<in>insert x S. f a * a) = d \\<and>\n       (\\<forall>a\\<in>insert x S. d dvd a) \\<and>\n       (\\<forall>d'.\n           (\\<forall>a\\<in>insert x S. d' dvd a) \\<longrightarrow> d' dvd d)", "note x_notin_S = insert.hyps(2)"], ["proof (state)\nthis:\n  x \\<notin> S\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>f d.\n       (\\<Sum>a\\<in>insert x S. f a * a) = d \\<and>\n       (\\<forall>a\\<in>insert x S. d dvd a) \\<and>\n       (\\<forall>d'.\n           (\\<forall>a\\<in>insert x S. d' dvd a) \\<longrightarrow> d' dvd d)", "obtain f d where sum_eq_d: \"(\\<Sum>a\\<in>S. f a * a) = d\"\n      and d_dvd_each_a: \"(\\<forall>a\\<in>S. d dvd a)\"\n      and d_is_gcd: \"(\\<forall>d'. (\\<forall>a\\<in>S. d' dvd a) \\<longrightarrow> d' dvd d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>f d.\n        \\<lbrakk>(\\<Sum>a\\<in>S. f a * a) = d; \\<forall>a\\<in>S. d dvd a;\n         \\<forall>d'.\n            (\\<forall>a\\<in>S. d' dvd a) \\<longrightarrow> d' dvd d\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using insert.hyps(3)[OF ne]"], ["proof (prove)\nusing this:\n  \\<exists>f d.\n     (\\<Sum>a\\<in>S. f a * a) = d \\<and>\n     (\\<forall>a\\<in>S. d dvd a) \\<and>\n     (\\<forall>d'. (\\<forall>a\\<in>S. d' dvd a) \\<longrightarrow> d' dvd d)\n\ngoal (1 subgoal):\n 1. (\\<And>f d.\n        \\<lbrakk>(\\<Sum>a\\<in>S. f a * a) = d; \\<forall>a\\<in>S. d dvd a;\n         \\<forall>d'.\n            (\\<forall>a\\<in>S. d' dvd a) \\<longrightarrow> d' dvd d\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>S. f a * a) = d\n  \\<forall>a\\<in>S. d dvd a\n  \\<forall>d'. (\\<forall>a\\<in>S. d' dvd a) \\<longrightarrow> d' dvd d\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>f d.\n       (\\<Sum>a\\<in>insert x S. f a * a) = d \\<and>\n       (\\<forall>a\\<in>insert x S. d dvd a) \\<and>\n       (\\<forall>d'.\n           (\\<forall>a\\<in>insert x S. d' dvd a) \\<longrightarrow> d' dvd d)", "have \"\\<exists>p q d'. p * d + q * x = d' \\<and> d' dvd d \\<and> d' dvd x \\<and> (\\<forall>c. c dvd d \\<and> c dvd x \\<longrightarrow> c dvd d')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p q d'.\n       p * d + q * x = d' \\<and>\n       d' dvd d \\<and>\n       d' dvd x \\<and>\n       (\\<forall>c. c dvd d \\<and> c dvd x \\<longrightarrow> c dvd d')", "using exists_bezout"], ["proof (prove)\nusing this:\n  \\<exists>p q d.\n     p * ?a + q * ?b = d \\<and>\n     d dvd ?a \\<and>\n     d dvd ?b \\<and>\n     (\\<forall>d'. d' dvd ?a \\<and> d' dvd ?b \\<longrightarrow> d' dvd d)\n\ngoal (1 subgoal):\n 1. \\<exists>p q d'.\n       p * d + q * x = d' \\<and>\n       d' dvd d \\<and>\n       d' dvd x \\<and>\n       (\\<forall>c. c dvd d \\<and> c dvd x \\<longrightarrow> c dvd d')", "by auto"], ["proof (state)\nthis:\n  \\<exists>p q d'.\n     p * d + q * x = d' \\<and>\n     d' dvd d \\<and>\n     d' dvd x \\<and>\n     (\\<forall>c. c dvd d \\<and> c dvd x \\<longrightarrow> c dvd d')\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>f d.\n       (\\<Sum>a\\<in>insert x S. f a * a) = d \\<and>\n       (\\<forall>a\\<in>insert x S. d dvd a) \\<and>\n       (\\<forall>d'.\n           (\\<forall>a\\<in>insert x S. d' dvd a) \\<longrightarrow> d' dvd d)", "from this"], ["proof (chain)\npicking this:\n  \\<exists>p q d'.\n     p * d + q * x = d' \\<and>\n     d' dvd d \\<and>\n     d' dvd x \\<and>\n     (\\<forall>c. c dvd d \\<and> c dvd x \\<longrightarrow> c dvd d')", "obtain p q d' where pd_qx_d': \"p*d + q*x = d'\"\n      and d'_dvd_d: \"d' dvd d\" and d'_dvd_x: \"d' dvd x\"\n      and d'_dvd: \"\\<forall>c. (c dvd d \\<and> c dvd x) \\<longrightarrow> c dvd d'\""], ["proof (prove)\nusing this:\n  \\<exists>p q d'.\n     p * d + q * x = d' \\<and>\n     d' dvd d \\<and>\n     d' dvd x \\<and>\n     (\\<forall>c. c dvd d \\<and> c dvd x \\<longrightarrow> c dvd d')\n\ngoal (1 subgoal):\n 1. (\\<And>p q d'.\n        \\<lbrakk>p * d + q * x = d'; d' dvd d; d' dvd x;\n         \\<forall>c.\n            c dvd d \\<and> c dvd x \\<longrightarrow> c dvd d'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  p * d + q * x = d'\n  d' dvd d\n  d' dvd x\n  \\<forall>c. c dvd d \\<and> c dvd x \\<longrightarrow> c dvd d'\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>f d.\n       (\\<Sum>a\\<in>insert x S. f a * a) = d \\<and>\n       (\\<forall>a\\<in>insert x S. d dvd a) \\<and>\n       (\\<forall>d'.\n           (\\<forall>a\\<in>insert x S. d' dvd a) \\<longrightarrow> d' dvd d)", "let ?f = \"\\<lambda>a. if a = x then q else p * f a\""], ["proof (state)\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>f d.\n       (\\<Sum>a\\<in>insert x S. f a * a) = d \\<and>\n       (\\<forall>a\\<in>insert x S. d dvd a) \\<and>\n       (\\<forall>d'.\n           (\\<forall>a\\<in>insert x S. d' dvd a) \\<longrightarrow> d' dvd d)", "have \"(\\<Sum>a\\<in>insert x S. ?f a * a) = d'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>a\\<in>insert x S. (if a = x then q else p * f a) * a) = d'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>a\\<in>insert x S. (if a = x then q else p * f a) * a) = d'", "have \"(\\<Sum>a\\<in>insert x S. ?f a * a) = (\\<Sum>a\\<in>S. ?f a * a) + ?f x * x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>a\\<in>insert x S. (if a = x then q else p * f a) * a) =\n    (\\<Sum>a\\<in>S. (if a = x then q else p * f a) * a) +\n    (if x = x then q else p * f x) * x", "by (simp add: add_commute insert.hyps(1) insert.hyps(2))"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>insert x S. (if a = x then q else p * f a) * a) =\n  (\\<Sum>a\\<in>S. (if a = x then q else p * f a) * a) +\n  (if x = x then q else p * f x) * x\n\ngoal (1 subgoal):\n 1. (\\<Sum>a\\<in>insert x S. (if a = x then q else p * f a) * a) = d'", "also"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>insert x S. (if a = x then q else p * f a) * a) =\n  (\\<Sum>a\\<in>S. (if a = x then q else p * f a) * a) +\n  (if x = x then q else p * f x) * x\n\ngoal (1 subgoal):\n 1. (\\<Sum>a\\<in>insert x S. (if a = x then q else p * f a) * a) = d'", "have \"... = p * (\\<Sum>a\\<in>S. f a * a) + q * x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>a\\<in>S. (if a = x then q else p * f a) * a) +\n    (if x = x then q else p * f x) * x =\n    p * (\\<Sum>a\\<in>S. f a * a) + q * x", "unfolding sum_distrib_left"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>a\\<in>S. (if a = x then q else p * f a) * a) +\n    (if x = x then q else p * f x) * x =\n    (\\<Sum>n\\<in>S. p * (f n * n)) + q * x", "by (auto, rule sum.cong, insert x_notin_S,\n            auto simp add: mult.semigroup_axioms semigroup.assoc)"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>S. (if a = x then q else p * f a) * a) +\n  (if x = x then q else p * f x) * x =\n  p * (\\<Sum>a\\<in>S. f a * a) + q * x\n\ngoal (1 subgoal):\n 1. (\\<Sum>a\\<in>insert x S. (if a = x then q else p * f a) * a) = d'", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>a\\<in>insert x S. (if a = x then q else p * f a) * a) =\n  p * (\\<Sum>a\\<in>S. f a * a) + q * x", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>a\\<in>insert x S. (if a = x then q else p * f a) * a) =\n  p * (\\<Sum>a\\<in>S. f a * a) + q * x\n\ngoal (1 subgoal):\n 1. (\\<Sum>a\\<in>insert x S. (if a = x then q else p * f a) * a) = d'", "using pd_qx_d' sum_eq_d"], ["proof (prove)\nusing this:\n  (\\<Sum>a\\<in>insert x S. (if a = x then q else p * f a) * a) =\n  p * (\\<Sum>a\\<in>S. f a * a) + q * x\n  p * d + q * x = d'\n  (\\<Sum>a\\<in>S. f a * a) = d\n\ngoal (1 subgoal):\n 1. (\\<Sum>a\\<in>insert x S. (if a = x then q else p * f a) * a) = d'", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>insert x S. (if a = x then q else p * f a) * a) = d'\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>insert x S. (if a = x then q else p * f a) * a) = d'\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>f d.\n       (\\<Sum>a\\<in>insert x S. f a * a) = d \\<and>\n       (\\<forall>a\\<in>insert x S. d dvd a) \\<and>\n       (\\<forall>d'.\n           (\\<forall>a\\<in>insert x S. d' dvd a) \\<longrightarrow> d' dvd d)", "moreover"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>insert x S. (if a = x then q else p * f a) * a) = d'\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>f d.\n       (\\<Sum>a\\<in>insert x S. f a * a) = d \\<and>\n       (\\<forall>a\\<in>insert x S. d dvd a) \\<and>\n       (\\<forall>d'.\n           (\\<forall>a\\<in>insert x S. d' dvd a) \\<longrightarrow> d' dvd d)", "have \"(\\<forall>a\\<in>insert x S. d' dvd a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>a\\<in>insert x S. d' dvd a", "by (metis d'_dvd_d d'_dvd_x d_dvd_each_a insert_iff local.dvdE local.dvd_mult_left)"], ["proof (state)\nthis:\n  \\<forall>a\\<in>insert x S. d' dvd a\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>f d.\n       (\\<Sum>a\\<in>insert x S. f a * a) = d \\<and>\n       (\\<forall>a\\<in>insert x S. d dvd a) \\<and>\n       (\\<forall>d'.\n           (\\<forall>a\\<in>insert x S. d' dvd a) \\<longrightarrow> d' dvd d)", "moreover"], ["proof (state)\nthis:\n  \\<forall>a\\<in>insert x S. d' dvd a\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>f d.\n       (\\<Sum>a\\<in>insert x S. f a * a) = d \\<and>\n       (\\<forall>a\\<in>insert x S. d dvd a) \\<and>\n       (\\<forall>d'.\n           (\\<forall>a\\<in>insert x S. d' dvd a) \\<longrightarrow> d' dvd d)", "have \" (\\<forall>c. (\\<forall>a\\<in>insert x S. c dvd a) \\<longrightarrow> c dvd d')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>c.\n       (\\<forall>a\\<in>insert x S. c dvd a) \\<longrightarrow> c dvd d'", "by (simp add: d'_dvd d_is_gcd)"], ["proof (state)\nthis:\n  \\<forall>c.\n     (\\<forall>a\\<in>insert x S. c dvd a) \\<longrightarrow> c dvd d'\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow>\n    \\<exists>f d.\n       (\\<Sum>a\\<in>insert x S. f a * a) = d \\<and>\n       (\\<forall>a\\<in>insert x S. d dvd a) \\<and>\n       (\\<forall>d'.\n           (\\<forall>a\\<in>insert x S. d' dvd a) \\<longrightarrow> d' dvd d)", "ultimately"], ["proof (chain)\npicking this:\n  (\\<Sum>a\\<in>insert x S. (if a = x then q else p * f a) * a) = d'\n  \\<forall>a\\<in>insert x S. d' dvd a\n  \\<forall>c.\n     (\\<forall>a\\<in>insert x S. c dvd a) \\<longrightarrow> c dvd d'", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>a\\<in>insert x S. (if a = x then q else p * f a) * a) = d'\n  \\<forall>a\\<in>insert x S. d' dvd a\n  \\<forall>c.\n     (\\<forall>a\\<in>insert x S. c dvd a) \\<longrightarrow> c dvd d'\n\ngoal (1 subgoal):\n 1. \\<exists>f d.\n       (\\<Sum>a\\<in>insert x S. f a * a) = d \\<and>\n       (\\<forall>a\\<in>insert x S. d dvd a) \\<and>\n       (\\<forall>d'.\n           (\\<forall>a\\<in>insert x S. d' dvd a) \\<longrightarrow> d' dvd d)", "by auto"], ["proof (state)\nthis:\n  \\<exists>f d.\n     (\\<Sum>a\\<in>insert x S. f a * a) = d \\<and>\n     (\\<forall>a\\<in>insert x S. d dvd a) \\<and>\n     (\\<forall>d'.\n         (\\<forall>a\\<in>insert x S. d' dvd a) \\<longrightarrow> d' dvd d)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>f d.\n     (\\<Sum>a\\<in>insert x S. f a * a) = d \\<and>\n     (\\<forall>a\\<in>insert x S. d dvd a) \\<and>\n     (\\<forall>d'.\n         (\\<forall>a\\<in>insert x S. d' dvd a) \\<longrightarrow> d' dvd d)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "lemma ideal_generated_empty: \"ideal_generated {} = {0}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated {} = {0::'a}", "unfolding ideal_generated_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Inter> {I. ideal I \\<and> {} \\<subseteq> I} = {0::'a}", "using ideal_generated_0"], ["proof (prove)\nusing this:\n  ideal_generated {0::?'a} = {0::?'a}\n\ngoal (1 subgoal):\n 1. \\<Inter> {I. ideal I \\<and> {} \\<subseteq> I} = {0::'a}", "by (metis empty_subsetI ideal_generated_def ideal_generated_subset ideal_ideal_generated\n      ideal_not_empty subset_singletonD)"], ["", "lemma bezout_imp_all_fin_gen_ideals_are_principal:\n  fixes I::\"'a :: bezout_ring set\"\n  assumes fin: \"finitely_generated_ideal I\"\n  shows \"principal_ideal I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. principal_ideal I", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. principal_ideal I", "obtain S where fin_S: \"finite S\" and ideal_gen_S: \"ideal_generated S = I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>S.\n        \\<lbrakk>finite S; ideal_generated S = I\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using fin"], ["proof (prove)\nusing this:\n  finitely_generated_ideal I\n\ngoal (1 subgoal):\n 1. (\\<And>S.\n        \\<lbrakk>finite S; ideal_generated S = I\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding finitely_generated_ideal_def"], ["proof (prove)\nusing this:\n  ideal I \\<and> (\\<exists>S. finite S \\<and> ideal_generated S = I)\n\ngoal (1 subgoal):\n 1. (\\<And>S.\n        \\<lbrakk>finite S; ideal_generated S = I\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  finite S\n  ideal_generated S = I\n\ngoal (1 subgoal):\n 1. principal_ideal I", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. principal_ideal I", "proof (cases \"S = {}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. S = {} \\<Longrightarrow> principal_ideal I\n 2. S \\<noteq> {} \\<Longrightarrow> principal_ideal I", "case True"], ["proof (state)\nthis:\n  S = {}\n\ngoal (2 subgoals):\n 1. S = {} \\<Longrightarrow> principal_ideal I\n 2. S \\<noteq> {} \\<Longrightarrow> principal_ideal I", "then"], ["proof (chain)\npicking this:\n  S = {}", "show ?thesis"], ["proof (prove)\nusing this:\n  S = {}\n\ngoal (1 subgoal):\n 1. principal_ideal I", "using ideal_gen_S"], ["proof (prove)\nusing this:\n  S = {}\n  ideal_generated S = I\n\ngoal (1 subgoal):\n 1. principal_ideal I", "unfolding True"], ["proof (prove)\nusing this:\n  {} = {}\n  ideal_generated {} = I\n\ngoal (1 subgoal):\n 1. principal_ideal I", "using ideal_generated_empty ideal_generated_0 principal_ideal_def"], ["proof (prove)\nusing this:\n  {} = {}\n  ideal_generated {} = I\n  ideal_generated {} = {0::?'a}\n  ideal_generated {0::?'a} = {0::?'a}\n  principal_ideal ?S = (\\<exists>a. ideal_generated {a} = ?S)\n\ngoal (1 subgoal):\n 1. principal_ideal I", "by fastforce"], ["proof (state)\nthis:\n  principal_ideal I\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow> principal_ideal I", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow> principal_ideal I", "case False"], ["proof (state)\nthis:\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow> principal_ideal I", "note ne = False"], ["proof (state)\nthis:\n  S \\<noteq> {}\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow> principal_ideal I", "obtain d f where sum_S_d: \"(\\<Sum>i\\<in>S. f i * i) = d\"\n    and d_dvd_a: \"(\\<forall>a\\<in>S. d dvd a)\" and d_is_gcd: \"(\\<forall>d'. (\\<forall>a\\<in>S. d' dvd a) \\<longrightarrow> d' dvd d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>f d.\n        \\<lbrakk>(\\<Sum>i\\<in>S. f i * i) = d; \\<forall>a\\<in>S. d dvd a;\n         \\<forall>d'.\n            (\\<forall>a\\<in>S. d' dvd a) \\<longrightarrow> d' dvd d\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using exists_bezout_extended[OF fin_S ne]"], ["proof (prove)\nusing this:\n  \\<exists>f d.\n     (\\<Sum>a\\<in>S. f a * a) = d \\<and>\n     (\\<forall>a\\<in>S. d dvd a) \\<and>\n     (\\<forall>d'. (\\<forall>a\\<in>S. d' dvd a) \\<longrightarrow> d' dvd d)\n\ngoal (1 subgoal):\n 1. (\\<And>f d.\n        \\<lbrakk>(\\<Sum>i\\<in>S. f i * i) = d; \\<forall>a\\<in>S. d dvd a;\n         \\<forall>d'.\n            (\\<forall>a\\<in>S. d' dvd a) \\<longrightarrow> d' dvd d\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>i\\<in>S. f i * i) = d\n  \\<forall>a\\<in>S. d dvd a\n  \\<forall>d'. (\\<forall>a\\<in>S. d' dvd a) \\<longrightarrow> d' dvd d\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow> principal_ideal I", "have d_in_S: \"d \\<in> ideal_generated S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. d \\<in> ideal_generated S", "by (metis fin_S ideal_def ideal_generated_subset_generator\n          ideal_ideal_generated sum_S_d sum_left_ideal)"], ["proof (state)\nthis:\n  d \\<in> ideal_generated S\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow> principal_ideal I", "have \"ideal_generated {d} \\<subseteq> ideal_generated S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated {d} \\<subseteq> ideal_generated S", "by (rule ideal_generated_singleton_subset[OF d_in_S fin_S])"], ["proof (state)\nthis:\n  ideal_generated {d} \\<subseteq> ideal_generated S\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow> principal_ideal I", "moreover"], ["proof (state)\nthis:\n  ideal_generated {d} \\<subseteq> ideal_generated S\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow> principal_ideal I", "have \"ideal_generated S \\<subseteq> ideal_generated {d}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ideal_generated S \\<subseteq> ideal_generated {d}", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ideal_generated S \\<Longrightarrow>\n       x \\<in> ideal_generated {d}", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ideal_generated S \\<Longrightarrow>\n       x \\<in> ideal_generated {d}", "assume x_in_S: \"x \\<in> ideal_generated S\""], ["proof (state)\nthis:\n  x \\<in> ideal_generated S\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ideal_generated S \\<Longrightarrow>\n       x \\<in> ideal_generated {d}", "obtain f where sum_S_x: \"(\\<Sum>a\\<in>S. f a * a) = x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>f.\n        (\\<Sum>a\\<in>S. f a * a) = x \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using fin_S obtain_sum_ideal_generated x_in_S"], ["proof (prove)\nusing this:\n  finite S\n  \\<lbrakk>?a \\<in> ideal_generated ?A; finite ?A;\n   \\<And>f.\n      (\\<Sum>i\\<in>?A. f i * i) = ?a \\<Longrightarrow> ?thesis\\<rbrakk>\n  \\<Longrightarrow> ?thesis\n  x \\<in> ideal_generated S\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        (\\<Sum>a\\<in>S. f a * a) = x \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>S. f a * a) = x\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ideal_generated S \\<Longrightarrow>\n       x \\<in> ideal_generated {d}", "have d_dvd_each_a: \"\\<exists>k. a = k * d\" if \"a \\<in> S\" for a"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>k. a = k * d", "by (metis d_dvd_a dvdE mult.commute that)"], ["proof (state)\nthis:\n  ?a \\<in> S \\<Longrightarrow> \\<exists>k. ?a = k * d\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ideal_generated S \\<Longrightarrow>\n       x \\<in> ideal_generated {d}", "let ?g = \"\\<lambda>a. SOME k. a = k*d\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ideal_generated S \\<Longrightarrow>\n       x \\<in> ideal_generated {d}", "have \"x = (\\<Sum>a\\<in>S. f a * a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = (\\<Sum>a\\<in>S. f a * a)", "using sum_S_x"], ["proof (prove)\nusing this:\n  (\\<Sum>a\\<in>S. f a * a) = x\n\ngoal (1 subgoal):\n 1. x = (\\<Sum>a\\<in>S. f a * a)", "by simp"], ["proof (state)\nthis:\n  x = (\\<Sum>a\\<in>S. f a * a)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ideal_generated S \\<Longrightarrow>\n       x \\<in> ideal_generated {d}", "also"], ["proof (state)\nthis:\n  x = (\\<Sum>a\\<in>S. f a * a)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ideal_generated S \\<Longrightarrow>\n       x \\<in> ideal_generated {d}", "have \"... = (\\<Sum>a\\<in>S. f a * (?g a * d))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>a\\<in>S. f a * a) =\n    (\\<Sum>a\\<in>S. f a * ((SOME k. a = k * d) * d))", "proof (rule sum.cong)"], ["proof (state)\ngoal (2 subgoals):\n 1. S = S\n 2. \\<And>x.\n       x \\<in> S \\<Longrightarrow> f x * x = f x * ((SOME k. x = k * d) * d)", "fix a"], ["proof (state)\ngoal (2 subgoals):\n 1. S = S\n 2. \\<And>x.\n       x \\<in> S \\<Longrightarrow> f x * x = f x * ((SOME k. x = k * d) * d)", "assume a_in_S: \"a \\<in> S\""], ["proof (state)\nthis:\n  a \\<in> S\n\ngoal (2 subgoals):\n 1. S = S\n 2. \\<And>x.\n       x \\<in> S \\<Longrightarrow> f x * x = f x * ((SOME k. x = k * d) * d)", "obtain k where a_kd: \"a = k * d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k. a = k * d \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using d_dvd_each_a a_in_S"], ["proof (prove)\nusing this:\n  ?a \\<in> S \\<Longrightarrow> \\<exists>k. ?a = k * d\n  a \\<in> S\n\ngoal (1 subgoal):\n 1. (\\<And>k. a = k * d \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by auto"], ["proof (state)\nthis:\n  a = k * d\n\ngoal (2 subgoals):\n 1. S = S\n 2. \\<And>x.\n       x \\<in> S \\<Longrightarrow> f x * x = f x * ((SOME k. x = k * d) * d)", "have \"a = ((SOME k. a = k * d) * d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a = (SOME k. a = k * d) * d", "by (rule someI_ex, auto simp add: a_kd)"], ["proof (state)\nthis:\n  a = (SOME k. a = k * d) * d\n\ngoal (2 subgoals):\n 1. S = S\n 2. \\<And>x.\n       x \\<in> S \\<Longrightarrow> f x * x = f x * ((SOME k. x = k * d) * d)", "thus \"f a * a = f a * ((SOME k. a = k * d) * d)\""], ["proof (prove)\nusing this:\n  a = (SOME k. a = k * d) * d\n\ngoal (1 subgoal):\n 1. f a * a = f a * ((SOME k. a = k * d) * d)", "by auto"], ["proof (state)\nthis:\n  f a * a = f a * ((SOME k. a = k * d) * d)\n\ngoal (1 subgoal):\n 1. S = S", "qed (simp)"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>S. f a * a) =\n  (\\<Sum>a\\<in>S. f a * ((SOME k. a = k * d) * d))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ideal_generated S \\<Longrightarrow>\n       x \\<in> ideal_generated {d}", "also"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>S. f a * a) =\n  (\\<Sum>a\\<in>S. f a * ((SOME k. a = k * d) * d))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ideal_generated S \\<Longrightarrow>\n       x \\<in> ideal_generated {d}", "have \"... = (\\<Sum>a\\<in>S. f a * ?g a * d)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>a\\<in>S. f a * ((SOME k. a = k * d) * d)) =\n    (\\<Sum>a\\<in>S. f a * (SOME k. a = k * d) * d)", "by (rule sum.cong, auto)"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>S. f a * ((SOME k. a = k * d) * d)) =\n  (\\<Sum>a\\<in>S. f a * (SOME k. a = k * d) * d)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ideal_generated S \\<Longrightarrow>\n       x \\<in> ideal_generated {d}", "also"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>S. f a * ((SOME k. a = k * d) * d)) =\n  (\\<Sum>a\\<in>S. f a * (SOME k. a = k * d) * d)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ideal_generated S \\<Longrightarrow>\n       x \\<in> ideal_generated {d}", "have \"... = (\\<Sum>a\\<in>S. f a * ?g a)*d\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>a\\<in>S. f a * (SOME k. a = k * d) * d) =\n    (\\<Sum>a\\<in>S. f a * (SOME k. a = k * d)) * d", "using sum_distrib_right[of _ S d]"], ["proof (prove)\nusing this:\n  sum ?f S * d = (\\<Sum>n\\<in>S. ?f n * d)\n\ngoal (1 subgoal):\n 1. (\\<Sum>a\\<in>S. f a * (SOME k. a = k * d) * d) =\n    (\\<Sum>a\\<in>S. f a * (SOME k. a = k * d)) * d", "by auto"], ["proof (state)\nthis:\n  (\\<Sum>a\\<in>S. f a * (SOME k. a = k * d) * d) =\n  (\\<Sum>a\\<in>S. f a * (SOME k. a = k * d)) * d\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> ideal_generated S \\<Longrightarrow>\n       x \\<in> ideal_generated {d}", "finally"], ["proof (chain)\npicking this:\n  x = (\\<Sum>a\\<in>S. f a * (SOME k. a = k * d)) * d", "show \"x \\<in> ideal_generated {d}\""], ["proof (prove)\nusing this:\n  x = (\\<Sum>a\\<in>S. f a * (SOME k. a = k * d)) * d\n\ngoal (1 subgoal):\n 1. x \\<in> ideal_generated {d}", "by (meson contra_subsetD dvd_ideal_generated_singleton' dvd_triv_right\n            ideal_generated_in singletonI)"], ["proof (state)\nthis:\n  x \\<in> ideal_generated {d}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ideal_generated S \\<subseteq> ideal_generated {d}\n\ngoal (1 subgoal):\n 1. S \\<noteq> {} \\<Longrightarrow> principal_ideal I", "ultimately"], ["proof (chain)\npicking this:\n  ideal_generated {d} \\<subseteq> ideal_generated S\n  ideal_generated S \\<subseteq> ideal_generated {d}", "show ?thesis"], ["proof (prove)\nusing this:\n  ideal_generated {d} \\<subseteq> ideal_generated S\n  ideal_generated S \\<subseteq> ideal_generated {d}\n\ngoal (1 subgoal):\n 1. principal_ideal I", "unfolding principal_ideal_def"], ["proof (prove)\nusing this:\n  ideal_generated {d} \\<subseteq> ideal_generated S\n  ideal_generated S \\<subseteq> ideal_generated {d}\n\ngoal (1 subgoal):\n 1. \\<exists>a. ideal_generated {a} = I", "using ideal_gen_S"], ["proof (prove)\nusing this:\n  ideal_generated {d} \\<subseteq> ideal_generated S\n  ideal_generated S \\<subseteq> ideal_generated {d}\n  ideal_generated S = I\n\ngoal (1 subgoal):\n 1. \\<exists>a. ideal_generated {a} = I", "by auto"], ["proof (state)\nthis:\n  principal_ideal I\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  principal_ideal I\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Now we have the required lemmas to prove the theorem that states that\n  a ring is B\\'ezout ring if and only if every\n  finitely generated ideal is principal. They are the following ones.\n\n\\begin{itemize}\n\\item @{text \"all_fin_gen_ideals_are_principal_imp_bezout\"}\n\\item @{text \"bezout_imp_all_fin_gen_ideals_are_principal\"}\n\\end{itemize}\n\nHowever, in order to prove the final lemma, we need the lemmas with no type restrictions.\nFor instance, we need a version of theorem @{text \"bezout_imp_all_fin_gen_ideals_are_principal\"}\nas\n\n@{text \"OFCLASS('a,bezout_ring) \\<Longrightarrow>\"} the theorem with generic types\n  (i.e., @{text \"'a\"} with no type restrictions)\n\n\nor as\n\n@{text \"class.bezout_ring _ _ _ _ \\<Longrightarrow>\"} the theorem with generic\n  types (i.e., @{text \"'a\"} with no type restrictions)\n\\<close>"], ["", "(*A possible workaround is to adapt the proof*)\n(*\nlemma bezout_imp_all_fin_gen_ideals_are_principal_unsatisfactory:\n  assumes a1: \"class.bezout_ring ( * ) (1::'a::comm_ring_1) (+) 0 (-) uminus\" (*Me da igual esto que OFCLASS*)\n  shows \"\\<forall>I::'a set. finitely_generated_ideal I \\<longrightarrow> principal_ideal I\"\nproof (rule allI, rule impI)\n  fix I::\"'a set\" assume fin: \"finitely_generated_ideal I\"\n  interpret a: bezout_ring \"( * )\" \"(1::'a)\" \"(+)\" 0 \"(-)\" uminus using a1 .\n  interpret dvd \"( * )::'a\\<Rightarrow>'a\\<Rightarrow>'a\" .\n  interpret b: comm_monoid_add \"(+)\" \"(0::'a)\" using a1 by intro_locales\n  have c: \" class.comm_monoid_add (+) (0::'a)\"  using a1 by intro_locales\n  have [simp]: \"(dvd.dvd ( * ) d a) = (d dvd a)\" for d a::'a\n    by (auto simp add: dvd.dvd_def dvd_def)\n  have [simp]: \"comm_monoid_add.sum (+) 0 (\\<lambda>a. f a * a) S = sum (\\<lambda>a. f a * a) S\"\n    for f and S::\"'a set\"\n    unfolding sum_def unfolding comm_monoid_add.sum_def[OF c] ..\n  obtain S where fin_S: \"finite S\" and ideal_gen_S: \"ideal_generated S = I\"\n    using fin unfolding finitely_generated_ideal_def by auto\n  show \"principal_ideal I\"\n  proof (cases \"S = {}\")\n    case True\n    then show ?thesis\n      using ideal_gen_S unfolding True\n      using ideal_generated_empty ideal_generated_0 principal_ideal_def by fastforce\n  next\n    case False note ne = False\n    obtain d f where sum_S_d: \"(\\<Sum>i\\<in>S. f i * i) = d\"\n    and d_dvd_a: \"(\\<forall>a\\<in>S. d dvd a)\" and d_is_gcd: \"(\\<forall>d'. (\\<forall>a\\<in>S. d' dvd a) \\<longrightarrow> d' dvd d)\"\n      using a.exists_bezout_extended[OF fin_S ne] by auto\n    have d_in_S: \"d \\<in> ideal_generated S\"\n      by (metis fin_S ideal_def ideal_generated_subset_generator\n          ideal_ideal_generated sum_S_d sum_left_ideal)\n    have \"ideal_generated {d} \\<subseteq> ideal_generated S\"\n      by (rule ideal_generated_singleton_subset[OF d_in_S fin_S])\n    moreover have \"ideal_generated S \\<subseteq> ideal_generated {d}\"\n    proof\n      fix x assume x_in_S: \"x \\<in> ideal_generated S\"\n      obtain f where sum_S_x: \"(\\<Sum>a\\<in>S. f a * a) = x\"\n        using fin_S obtain_sum_ideal_generated x_in_S by blast\n      have d_dvd_each_a: \"\\<exists>k. a = k * d\" if \"a \\<in> S\" for a\n        by (metis d_dvd_a dvdE mult.commute that)\n      let ?g = \"\\<lambda>a. SOME k. a = k*d\"\n      have \"x = (\\<Sum>a\\<in>S. f a * a)\" using sum_S_x by simp\n      also have \"... = (\\<Sum>a\\<in>S. f a * (?g a * d))\"\n      proof (rule sum.cong)\n        fix a assume a_in_S: \"a \\<in> S\"\n        obtain k where a_kd: \"a = k * d\" using d_dvd_each_a a_in_S by auto\n        have \"a = ((SOME k. a = k * d) * d)\" by (rule someI_ex, auto simp add: a_kd)\n        thus \"f a * a = f a * ((SOME k. a = k * d) * d)\" by auto\n      qed (simp)\n      also have \"... = (\\<Sum>a\\<in>S. f a * ?g a * d)\" by (rule sum.cong, auto)\n      also have \"... = (\\<Sum>a\\<in>S. f a * ?g a)*d\" using sum_distrib_right[of _ S d] by auto\n      finally show \"x \\<in> ideal_generated {d}\"\n        by (meson contra_subsetD dvd_ideal_generated_singleton' dvd_triv_right\n            ideal_generated_in singletonI)\n    qed\n    ultimately show ?thesis unfolding principal_ideal_def using ideal_gen_S by auto\n  qed\nqed\n*)"], ["", "text \\<open>Thanks to local type definitions, we can obtain it automatically by means\n  of @{text \"internalize-sort\"}.\\<close>"], ["", "lemma bezout_imp_all_fin_gen_ideals_are_principal_unsatisfactory:\n  assumes a1: \"class.bezout_ring (*) (1::'b::comm_ring_1) (+) 0 (-) uminus\" (*It is algo possible to prove it using OFCLASS*)\n  shows \"\\<forall>I::'b set. finitely_generated_ideal I \\<longrightarrow> principal_ideal I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>I.\n       finitely_generated_ideal I \\<longrightarrow> principal_ideal I", "using bezout_imp_all_fin_gen_ideals_are_principal[internalize_sort \"'a::bezout_ring\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>class.bezout_ring (*) (1::?'a) (+) (0::?'a) (-) uminus;\n   finitely_generated_ideal ?I\\<rbrakk>\n  \\<Longrightarrow> principal_ideal ?I\n\ngoal (1 subgoal):\n 1. \\<forall>I.\n       finitely_generated_ideal I \\<longrightarrow> principal_ideal I", "using a1"], ["proof (prove)\nusing this:\n  \\<lbrakk>class.bezout_ring (*) (1::?'a) (+) (0::?'a) (-) uminus;\n   finitely_generated_ideal ?I\\<rbrakk>\n  \\<Longrightarrow> principal_ideal ?I\n  class.bezout_ring (*) (1::'b) (+) (0::'b) (-) uminus\n\ngoal (1 subgoal):\n 1. \\<forall>I.\n       finitely_generated_ideal I \\<longrightarrow> principal_ideal I", "by auto"], ["", "text \\<open>The standard library does not connect @{text \"OFCLASS\"} and @{text \"class.bezout_ring\"}\nin both directions. Here we show that @{text \"OFCLASS \\<Longrightarrow> class.bezout_ring\"}. \\<close>"], ["", "lemma OFCLASS_bezout_ring_imp_class_bezout_ring:\n  assumes \"OFCLASS('a::comm_ring_1,bezout_ring_class)\"\n  shows \"class.bezout_ring ((*)::'a\\<Rightarrow>'a\\<Rightarrow>'a) 1 (+) 0 (-) uminus\""], ["proof (prove)\ngoal (1 subgoal):\n 1. class.bezout_ring (*) (1::'a) (+) (0::'a) (-) uminus", "using assms"], ["proof (prove)\nusing this:\n  OFCLASS('a, bezout_ring_class)\n\ngoal (1 subgoal):\n 1. class.bezout_ring (*) (1::'a) (+) (0::'a) (-) uminus", "unfolding bezout_ring_class_def class.bezout_ring_def"], ["proof (prove)\nusing this:\n  OFCLASS('a, comm_ring_1_class) &&& class.bezout_ring_axioms (*) (+)\n\ngoal (1 subgoal):\n 1. class.comm_ring_1 (*) (1::'a) (+) (0::'a) (-) uminus \\<and>\n    class.bezout_ring_axioms (*) (+)", "using conjunctionD2[of \"OFCLASS('a, comm_ring_1_class)\"\n                         \"class.bezout_ring_axioms ((*)::'a\\<Rightarrow>'a\\<Rightarrow>'a) (+)\"]"], ["proof (prove)\nusing this:\n  OFCLASS('a, comm_ring_1_class) &&& class.bezout_ring_axioms (*) (+)\n  OFCLASS('a, comm_ring_1_class) &&&\n  class.bezout_ring_axioms (*) (+) \\<Longrightarrow>\n  class.bezout_ring_axioms (*) (+)\n\ngoal (1 subgoal):\n 1. class.comm_ring_1 (*) (1::'a) (+) (0::'a) (-) uminus \\<and>\n    class.bezout_ring_axioms (*) (+)", "by (auto, intro_locales)"], ["", "text \\<open>The other implication can be obtained\n  by thm @{text \"Rings2.class.Rings2.bezout_ring.of_class.intro\"} \\<close>"], ["", "thm Rings2.class.Rings2.bezout_ring.of_class.intro"], ["", "(*OFCLASS is a proposition (Prop), and then the following statement is not valid.*)\n\n(*\nlemma\n  shows \"(\\<forall>I::'a::comm_ring_1 set. finitely_generated_ideal I \\<longrightarrow> principal_ideal I)\n    = OFCLASS('a, bezout_ring_class)\"\n*)\n\n(*Thus, we use the meta-equality and the meta universal quantifier.*)"], ["", "text \\<open>Final theorem (with OFCLASS)\\<close>"], ["", "lemma bezout_ring_iff_fin_gen_principal_ideal:\n    \"(\\<And>I::'a::comm_ring_1 set. finitely_generated_ideal I \\<Longrightarrow> principal_ideal I)\n    \\<equiv> OFCLASS('a, bezout_ring_class)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>I.\n        finitely_generated_ideal I \\<Longrightarrow>\n        principal_ideal I) \\<equiv>\n    OFCLASS('a, bezout_ring_class)", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. (\\<And>I.\n        finitely_generated_ideal I \\<Longrightarrow>\n        principal_ideal I) \\<Longrightarrow>\n    OFCLASS('a, bezout_ring_class)\n 2. \\<And>I.\n       \\<lbrakk>OFCLASS('a, bezout_ring_class);\n        finitely_generated_ideal I\\<rbrakk>\n       \\<Longrightarrow> principal_ideal I", "show \"(\\<And>I::'a::comm_ring_1 set. finitely_generated_ideal I \\<Longrightarrow> principal_ideal I)\n    \\<Longrightarrow> OFCLASS('a, bezout_ring_class)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>I.\n        finitely_generated_ideal I \\<Longrightarrow>\n        principal_ideal I) \\<Longrightarrow>\n    OFCLASS('a, bezout_ring_class)", "using all_fin_gen_ideals_are_principal_imp_bezout [where ?'a='a]"], ["proof (prove)\nusing this:\n  \\<forall>I.\n     finitely_generated_ideal I \\<longrightarrow>\n     principal_ideal I \\<Longrightarrow>\n  OFCLASS('a, bezout_ring_class)\n\ngoal (1 subgoal):\n 1. (\\<And>I.\n        finitely_generated_ideal I \\<Longrightarrow>\n        principal_ideal I) \\<Longrightarrow>\n    OFCLASS('a, bezout_ring_class)", "by auto"], ["proof (state)\nthis:\n  (\\<And>I.\n      finitely_generated_ideal I \\<Longrightarrow>\n      principal_ideal I) \\<Longrightarrow>\n  OFCLASS('a, bezout_ring_class)\n\ngoal (1 subgoal):\n 1. \\<And>I.\n       \\<lbrakk>OFCLASS('a, bezout_ring_class);\n        finitely_generated_ideal I\\<rbrakk>\n       \\<Longrightarrow> principal_ideal I", "show \"\\<And>I::'a::comm_ring_1 set. OFCLASS('a, bezout_ring_class)\n    \\<Longrightarrow> finitely_generated_ideal I \\<Longrightarrow> principal_ideal I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>I.\n       \\<lbrakk>OFCLASS('a, bezout_ring_class);\n        finitely_generated_ideal I\\<rbrakk>\n       \\<Longrightarrow> principal_ideal I", "using bezout_imp_all_fin_gen_ideals_are_principal_unsatisfactory[where ?'b='a]"], ["proof (prove)\nusing this:\n  class.bezout_ring (*) (1::'a) (+) (0::'a) (-) uminus \\<Longrightarrow>\n  \\<forall>I. finitely_generated_ideal I \\<longrightarrow> principal_ideal I\n\ngoal (1 subgoal):\n 1. \\<And>I.\n       \\<lbrakk>OFCLASS('a, bezout_ring_class);\n        finitely_generated_ideal I\\<rbrakk>\n       \\<Longrightarrow> principal_ideal I", "using OFCLASS_bezout_ring_imp_class_bezout_ring[where ?'a='a]"], ["proof (prove)\nusing this:\n  class.bezout_ring (*) (1::'a) (+) (0::'a) (-) uminus \\<Longrightarrow>\n  \\<forall>I. finitely_generated_ideal I \\<longrightarrow> principal_ideal I\n  OFCLASS('a, bezout_ring_class) \\<Longrightarrow>\n  class.bezout_ring (*) (1::'a) (+) (0::'a) (-) uminus\n\ngoal (1 subgoal):\n 1. \\<And>I.\n       \\<lbrakk>OFCLASS('a, bezout_ring_class);\n        finitely_generated_ideal I\\<rbrakk>\n       \\<Longrightarrow> principal_ideal I", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>OFCLASS('a, bezout_ring_class);\n   finitely_generated_ideal ?I\\<rbrakk>\n  \\<Longrightarrow> principal_ideal ?I\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Final theorem (with @{text \"class.bezout_ring\"})\\<close>"], ["", "lemma bezout_ring_iff_fin_gen_principal_ideal2:\n    \"(\\<forall>I::'a::comm_ring_1 set. finitely_generated_ideal I \\<longrightarrow> principal_ideal I)\n    = (class.bezout_ring ((*)::'a\\<Rightarrow>'a\\<Rightarrow>'a) 1 (+) 0 (-) uminus)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<forall>I.\n        finitely_generated_ideal I \\<longrightarrow> principal_ideal I) =\n    class.bezout_ring (*) (1::'a) (+) (0::'a) (-) uminus", "proof"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<forall>I.\n       finitely_generated_ideal I \\<longrightarrow>\n       principal_ideal I \\<Longrightarrow>\n    class.bezout_ring (*) (1::'a) (+) (0::'a) (-) uminus\n 2. class.bezout_ring (*) (1::'a) (+) (0::'a) (-) uminus \\<Longrightarrow>\n    \\<forall>I.\n       finitely_generated_ideal I \\<longrightarrow> principal_ideal I", "show \"\\<forall>I::'a::comm_ring_1 set. finitely_generated_ideal I \\<longrightarrow> principal_ideal I\n      \\<Longrightarrow> class.bezout_ring (*) 1 (+) (0::'a) (-) uminus\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>I.\n       finitely_generated_ideal I \\<longrightarrow>\n       principal_ideal I \\<Longrightarrow>\n    class.bezout_ring (*) (1::'a) (+) (0::'a) (-) uminus", "using all_fin_gen_ideals_are_principal_imp_bezout[where ?'a='a]"], ["proof (prove)\nusing this:\n  \\<forall>I.\n     finitely_generated_ideal I \\<longrightarrow>\n     principal_ideal I \\<Longrightarrow>\n  OFCLASS('a, bezout_ring_class)\n\ngoal (1 subgoal):\n 1. \\<forall>I.\n       finitely_generated_ideal I \\<longrightarrow>\n       principal_ideal I \\<Longrightarrow>\n    class.bezout_ring (*) (1::'a) (+) (0::'a) (-) uminus", "using OFCLASS_bezout_ring_imp_class_bezout_ring[where ?'a='a]"], ["proof (prove)\nusing this:\n  \\<forall>I.\n     finitely_generated_ideal I \\<longrightarrow>\n     principal_ideal I \\<Longrightarrow>\n  OFCLASS('a, bezout_ring_class)\n  OFCLASS('a, bezout_ring_class) \\<Longrightarrow>\n  class.bezout_ring (*) (1::'a) (+) (0::'a) (-) uminus\n\ngoal (1 subgoal):\n 1. \\<forall>I.\n       finitely_generated_ideal I \\<longrightarrow>\n       principal_ideal I \\<Longrightarrow>\n    class.bezout_ring (*) (1::'a) (+) (0::'a) (-) uminus", "by auto"], ["proof (state)\nthis:\n  \\<forall>I.\n     finitely_generated_ideal I \\<longrightarrow>\n     principal_ideal I \\<Longrightarrow>\n  class.bezout_ring (*) (1::'a) (+) (0::'a) (-) uminus\n\ngoal (1 subgoal):\n 1. class.bezout_ring (*) (1::'a) (+) (0::'a) (-) uminus \\<Longrightarrow>\n    \\<forall>I.\n       finitely_generated_ideal I \\<longrightarrow> principal_ideal I", "show \"class.bezout_ring (*) 1 (+) (0::'a) (-) uminus \\<Longrightarrow> \\<forall>I::'a set.\n    finitely_generated_ideal I \\<longrightarrow> principal_ideal I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. class.bezout_ring (*) (1::'a) (+) (0::'a) (-) uminus \\<Longrightarrow>\n    \\<forall>I.\n       finitely_generated_ideal I \\<longrightarrow> principal_ideal I", "using bezout_imp_all_fin_gen_ideals_are_principal_unsatisfactory"], ["proof (prove)\nusing this:\n  class.bezout_ring (*) (1::?'b) (+) (0::?'b) (-) uminus \\<Longrightarrow>\n  \\<forall>I. finitely_generated_ideal I \\<longrightarrow> principal_ideal I\n\ngoal (1 subgoal):\n 1. class.bezout_ring (*) (1::'a) (+) (0::'a) (-) uminus \\<Longrightarrow>\n    \\<forall>I.\n       finitely_generated_ideal I \\<longrightarrow> principal_ideal I", "by auto"], ["proof (state)\nthis:\n  class.bezout_ring (*) (1::'a) (+) (0::'a) (-) uminus \\<Longrightarrow>\n  \\<forall>I. finitely_generated_ideal I \\<longrightarrow> principal_ideal I\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}