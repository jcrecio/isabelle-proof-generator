{"file_name": "/home/qj213/afp-2021-10-22/thys/Smith_Normal_Form/SNF_Missing_Lemmas.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Smith_Normal_Form", "problem_names": ["lemma sum_two_rw: \"(\\<Sum>i = 0..<2. f i) = (\\<Sum>i \\<in> {0,1::nat}. f i)\"", "lemma sum_common_left:\n  fixes f::\"'a \\<Rightarrow> 'b::comm_ring_1\"\n  assumes \"finite A\"\n  shows \"sum (\\<lambda>i. c * f i) A = c * sum f A\"", "lemma prod3_intro:\n  assumes \"fst A = a\" and \"fst (snd A) = b\" and \"snd (snd A) = c\"\n  shows \"A = (a,b,c)\"", "lemma HMA_invertible_matrix[transfer_rule]:\n  \"((HMA_Connect.HMA_M :: _ \\<Rightarrow> 'a :: comm_ring_1 ^ 'n ^ 'n \\<Rightarrow> _) ===> (=)) invertible_mat invertible\"", "lemma invertible_mat_zero:\n  assumes A: \"A \\<in> carrier_mat 0 0\"\n  shows \"invertible_mat A\"", "lemma invertible_mult_JNF:\n  fixes A::\"'a::comm_ring_1 mat\"\n  assumes A: \"A\\<in>carrier_mat n n\" and B: \"B\\<in>carrier_mat n n\"\n    and inv_A: \"invertible_mat A\" and inv_B: \"invertible_mat B\"\nshows \"invertible_mat (A*B)\"", "lemma invertible_iff_is_unit_JNF:\n  assumes A: \"A \\<in> carrier_mat n n\"\n  shows \"invertible_mat A \\<longleftrightarrow> (Determinant.det A) dvd 1\"", "lemma mat_mult_left_right_inverse:\n  fixes A :: \"'a::comm_ring_1 mat\"\n  assumes A: \"A \\<in> carrier_mat n n\"\n    and B: \"B \\<in> carrier_mat n n\" and AB: \"A * B = 1\\<^sub>m n\"\n  shows \"B * A = 1\\<^sub>m n\"", "lemma col_submatrix_UNIV:\nassumes \"j < card {i. i < dim_col A \\<and> i \\<in> J}\"\nshows \"col (submatrix A UNIV J) j = col A (pick J j)\"", "lemma submatrix_split2: \"submatrix A I J = submatrix (submatrix A I UNIV) UNIV J\" (is \"?lhs = ?rhs\")", "lemma submatrix_mult:\n  \"submatrix (A*B) I J = submatrix A I UNIV * submatrix B UNIV J\" (is \"?lhs = ?rhs\")", "lemma det_singleton:\n  assumes A: \"A \\<in> carrier_mat 1 1\"\n  shows \"det A = A $$ (0,0)\"", "lemma submatrix_singleton_index:\n  assumes A: \"A \\<in> carrier_mat n m\"\n    and an: \"a < n\" and bm: \"b < m\"\n    shows \"submatrix A {a} {b} $$ (0,0) = A $$ (a,b)\"", "lemma det_not_inj_on:\n  assumes not_inj_on: \"\\<not> inj_on f {0..<n}\"\n  shows \"det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) = 0\"", "lemma mat_row_transpose: \"(mat\\<^sub>r nr nc f)\\<^sup>T = mat nc nr (\\<lambda>(i,j). vec_index (f j) i)\"", "lemma obtain_inverse_matrix:\n  assumes A: \"A \\<in> carrier_mat n n\" and i: \"invertible_mat A\"\n  obtains B where \"inverts_mat A B\" and \"inverts_mat B A\" and \"B \\<in> carrier_mat n n\"", "lemma invertible_mat_smult_mat:\n  fixes A :: \"'a::comm_ring_1 mat\"\n  assumes inv_A: \"invertible_mat A\" and k: \"k dvd 1\"\n  shows \"invertible_mat (k \\<cdot>\\<^sub>m A)\"", "lemma invertible_mat_one[simp]: \"invertible_mat (1\\<^sub>m n)\"", "lemma four_block_mat_dim0:\n  assumes A: \"A \\<in> carrier_mat n n\"\n  and B: \"B \\<in> carrier_mat n 0\"\n  and C: \"C \\<in> carrier_mat 0 n\"\n  and D: \"D \\<in> carrier_mat 0 0\"\nshows \"four_block_mat A B C D = A\"", "lemma det_four_block_mat_lower_right_id:\n  assumes A: \"A \\<in> carrier_mat m m\"\nand B: \"B = 0\\<^sub>m m (n-m)\"\nand C: \"C = 0\\<^sub>m (n-m) m\"\nand D: \"D = 1\\<^sub>m (n-m)\"\nand \"n>m\"\nshows \"Determinant.det (four_block_mat A B C D) = Determinant.det A\"", "lemma mult_eq_first_row:\n  assumes A: \"A \\<in> carrier_mat 1 n\"\n  and B: \"B \\<in> carrier_mat m n\"\n  and m0: \"m \\<noteq> 0\"\n  and r: \"Matrix.row A 0 = Matrix.row B 0\"\nshows \"Matrix.row (A * V) 0 = Matrix.row (B * V) 0\"", "lemma smult_mat_mat_one_element:\n  assumes A: \"A \\<in> carrier_mat 1 1\" and B: \"B \\<in> carrier_mat 1 n\"\n  shows \"A * B = A $$ (0,0) \\<cdot>\\<^sub>m B\"", "lemma determinant_one_element:\n  assumes A: \"A \\<in> carrier_mat 1 1\" shows \"Determinant.det A = A $$ (0,0)\"", "lemma invertible_mat_transpose:\n  assumes inv_A: \"invertible_mat (A::'a::comm_ring_1 mat)\"\n  shows \"invertible_mat A\\<^sup>T\"", "lemma dvd_elements_mult_matrix_left:\n  assumes A: \"(A::'a::comm_ring_1 mat) \\<in> carrier_mat m n\"\n  and P: \"P \\<in> carrier_mat m m\"\n  and x: \"(\\<forall>i j. i<m \\<and> j<n \\<longrightarrow> x dvd A$$(i,j))\"\n  shows \"(\\<forall>i j. i<m \\<and> j<n \\<longrightarrow> x dvd (P*A)$$(i,j))\"", "lemma dvd_elements_mult_matrix_right:\n  assumes A: \"(A::'a::comm_ring_1 mat) \\<in> carrier_mat m n\"\n  and Q: \"Q \\<in> carrier_mat n n\"\n  and x: \"(\\<forall>i j. i<m \\<and> j<n \\<longrightarrow> x dvd A$$(i,j))\"\n  shows \"(\\<forall>i j. i<m \\<and> j<n \\<longrightarrow> x dvd (A*Q)$$(i,j))\"", "lemma dvd_elements_mult_matrix_left_right:\n  assumes A: \"(A::'a::comm_ring_1 mat) \\<in> carrier_mat m n\"\n  and P: \"P \\<in> carrier_mat m m\"\n  and Q: \"Q \\<in> carrier_mat n n\"\n  and x: \"(\\<forall>i j. i<m \\<and> j<n \\<longrightarrow> x dvd A$$(i,j))\"\nshows \"(\\<forall>i j. i<m \\<and> j<n \\<longrightarrow> x dvd (P*A*Q)$$(i,j))\"", "lemma append_cols_carrier[simp,intro]:\n  \"A \\<in> carrier_mat n a \\<Longrightarrow> B \\<in> carrier_mat n b \\<Longrightarrow> (A @\\<^sub>c B) \\<in> carrier_mat n (a+b)\"", "lemma append_cols_mult_left:\n  assumes A: \"A \\<in> carrier_mat n a\"\n  and B: \"B \\<in> carrier_mat n b\"\n  and P: \"P \\<in> carrier_mat n n\"\nshows \"P * (A @\\<^sub>c B) = (P*A) @\\<^sub>c (P*B)\"", "lemma append_cols_mult_right_id:\n  assumes A: \"(A::'a::semiring_1 mat) \\<in> carrier_mat n 1\"\n  and B: \"B \\<in> carrier_mat n (m-1)\"\n  and C: \"C = four_block_mat (1\\<^sub>m 1) (0\\<^sub>m 1 (m - 1)) (0\\<^sub>m (m - 1) 1) D\"\n  and D: \"D \\<in> carrier_mat (m-1) (m-1)\"\nshows \"(A @\\<^sub>c B) * C = A @\\<^sub>c (B * D)\"", "lemma append_cols_mult_right_id2:\n assumes A: \"(A::'a::semiring_1 mat) \\<in> carrier_mat n a\"\n   and B: \"B \\<in> carrier_mat n b\"\n   and C: \"C = four_block_mat D (0\\<^sub>m a b) (0\\<^sub>m b a) (1\\<^sub>m b)\"\n   and D: \"D \\<in> carrier_mat a a\"\nshows \"(A @\\<^sub>c B) * C = (A * D) @\\<^sub>c B\"", "lemma append_cols_nth:\n  assumes A: \"A \\<in> carrier_mat n a\"\n  and B: \"B \\<in> carrier_mat n b\"\n  and i: \"i<n\" and j: \"j < a + b\"\nshows \"(A @\\<^sub>c B) $$ (i, j) = (if j < dim_col A then A $$(i,j) else B$$(i,j-a))\" (is \"?lhs = ?rhs\")", "lemma append_cols_split:\n  assumes d: \"dim_col A > 0\"\n  shows \"A = mat_of_cols (dim_row A) [col A 0] @\\<^sub>c\n             mat_of_cols (dim_row A) (map (col A) [1..<dim_col A])\" (is \"?lhs = ?A1 @\\<^sub>c ?A2\")", "lemma append_rows_nth:\n  assumes A: \"A \\<in> carrier_mat a n\"\n  and B: \"B \\<in> carrier_mat b n\"\n  and i: \"i<a+b\" and j: \"j < n\"\nshows \"(A @\\<^sub>r B) $$ (i, j) = (if i < dim_row A then A $$(i,j) else B$$(i-a,j))\" (is \"?lhs = ?rhs\")", "lemma append_rows_split:\n  assumes k: \"k\\<le>dim_row A\"\n  shows \"A = (mat_of_rows (dim_col A) [Matrix.row A i. i \\<leftarrow> [0..<k]]) @\\<^sub>r\n             (mat_of_rows (dim_col A) [Matrix.row A i. i \\<leftarrow> [k..<dim_row A]])\" (is \"?lhs = ?A1 @\\<^sub>r ?A2\")", "lemma transpose_mat_append_rows:\n assumes A: \"A \\<in> carrier_mat a n\" and B: \"B \\<in> carrier_mat b n\"\n shows \"(A @\\<^sub>r B)\\<^sup>T = A\\<^sup>T @\\<^sub>c B\\<^sup>T\"", "lemma transpose_mat_append_cols:\n assumes A: \"A \\<in> carrier_mat n a\" and B: \"B \\<in> carrier_mat n b\"\n shows \"(A @\\<^sub>c B)\\<^sup>T = A\\<^sup>T @\\<^sub>r B\\<^sup>T\"", "lemma append_rows_mult_right:\n  assumes A: \"(A::'a::comm_semiring_1 mat) \\<in> carrier_mat a n\" and B: \"B \\<in> carrier_mat b n\"\n    and Q: \"Q\\<in> carrier_mat n n\"\n  shows \"(A @\\<^sub>r B) * Q = (A * Q) @\\<^sub>r (B*Q)\"", "lemma append_rows_mult_left_id:\n  assumes A: \"(A::'a::comm_semiring_1 mat) \\<in> carrier_mat 1 n\"\n  and B: \"B \\<in> carrier_mat (m-1) n\"\n  and C: \"C = four_block_mat (1\\<^sub>m 1) (0\\<^sub>m 1 (m - 1)) (0\\<^sub>m (m - 1) 1) D\"\n  and D: \"D \\<in> carrier_mat (m-1) (m-1)\"\nshows \"C * (A @\\<^sub>r B) = A @\\<^sub>r (D * B)\"", "lemma append_rows_mult_left_id2:\n assumes A: \"(A::'a::comm_semiring_1 mat) \\<in> carrier_mat a n\"\n   and B: \"B \\<in> carrier_mat b n\"\n   and C: \"C = four_block_mat D (0\\<^sub>m a b) (0\\<^sub>m b a) (1\\<^sub>m b)\"\n   and D: \"D \\<in> carrier_mat a a\"\n shows \"C * (A @\\<^sub>r B) = (D * A) @\\<^sub>r B\"", "lemma four_block_mat_preserves_column:\n  assumes A: \"(A::'a::semiring_1 mat) \\<in> carrier_mat n m\"\n    and B: \"B = four_block_mat (1\\<^sub>m 1) (0\\<^sub>m 1 (m - 1)) (0\\<^sub>m (m - 1) 1) C\"\n  and C: \"C \\<in> carrier_mat (m-1) (m-1)\"\n  and i: \"i<n\" and m: \"0<m\"\nshows \"(A*B) $$ (i,0) = A $$ (i,0)\"", "lemma lower_triangular_index:\n  assumes \"lower_triangular A\" \"i<j\" \"i < dim_row A\" \"j < dim_col A\"\n  shows \"A $$ (i,j) = 0\"", "lemma commute_multiples_identity:\n  assumes A: \"(A::'a::comm_ring_1 mat) \\<in> carrier_mat n n\"\n  shows \"A * (k \\<cdot>\\<^sub>m (1\\<^sub>m n)) = (k \\<cdot>\\<^sub>m (1\\<^sub>m n)) * A\"", "lemma det_2:\n  assumes A: \"A \\<in> carrier_mat 2 2\"\n  shows \"Determinant.det A = A$$(0,0) * A $$ (1,1) - A$$(0,1)*A$$(1,0)\"", "lemma mat_diag_smult: \"mat_diag n (\\<lambda> x. (k::'a::comm_ring_1)) = (k \\<cdot>\\<^sub>m 1\\<^sub>m n)\"", "lemma invertible_mat_four_block_mat_lower_right:\n  assumes A: \"(A::'a::comm_ring_1 mat) \\<in> carrier_mat n n\" and inv_A: \"invertible_mat A\"\n  shows \"invertible_mat (four_block_mat (1\\<^sub>m 1) (0\\<^sub>m 1 n) (0\\<^sub>m n 1) A)\"", "lemma invertible_mat_four_block_mat_lower_right_id:\n  assumes A: \"(A::'a::comm_ring_1 mat) \\<in> carrier_mat m m\" and B: \"B = 0\\<^sub>m m (n-m)\" and C: \"C = 0\\<^sub>m (n-m) m\"\n    and D: \"D = 1\\<^sub>m (n-m)\" and \"n>m\" and inv_A: \"invertible_mat A\"\n  shows \"invertible_mat (four_block_mat A B C D)\"", "lemma split_block4_decreases_dim_row:\n  assumes E: \"(A,B,C,D) = split_block E 1 1\"\n    and E1: \"dim_row E > 1\" and E2: \"dim_col E > 1\"\n  shows \"dim_row D < dim_row E\"", "lemma inv_P'PAQQ':\n  assumes A: \"A \\<in> carrier_mat n n\"\n    and P: \"P \\<in> carrier_mat n n\"\n    and inv_P: \"inverts_mat P' P\"\n    and inv_Q: \"inverts_mat Q Q'\"\n    and Q: \"Q \\<in> carrier_mat n n\"\n    and P': \"P' \\<in> carrier_mat n n\"\n    and Q': \"Q' \\<in> carrier_mat n n\"\nshows  \"(P'*(P*A*Q)*Q') = A\"", "lemma\n  assumes \"U \\<in> carrier_mat 2 2\" and \"V \\<in> carrier_mat 2 2\" and \"A = U * V\"\nshows mat_mult2_00: \"A $$ (0,0) = U $$ (0,0)*V $$ (0,0) + U $$ (0,1)*V $$ (1,0)\"\n  and mat_mult2_01: \"A $$ (0,1) = U $$ (0,0)*V $$ (0,1) + U $$ (0,1)*V $$ (1,1)\"\n  and mat_mult2_10: \"A $$ (1,0) = U $$ (1,0)*V $$ (0,0) + U $$ (1,1)*V $$ (1,0)\"\n  and mat_mult2_11: \"A $$ (1,1) = U $$ (1,0)*V $$ (0,1) + U $$ (1,1)*V $$ (1,1)\"", "lemma sorted_distinct_imp_sorted_wrt:\n  assumes \"sorted xs\" and \"distinct xs\"\n  shows \"sorted_wrt (<) xs\"", "lemma sorted_map_strict:\n  assumes \"strict_mono_on g {0..<n}\"\n  shows \"sorted (map g [0..<n])\"", "lemma sorted_list_of_set_map_strict:\n  assumes \"strict_mono_on g {0..<n}\"\n  shows \"sorted_list_of_set (g ` {0..<n}) = map g [0..<n]\"", "lemma sorted_nth_strict_mono:\n  \"sorted xs \\<Longrightarrow> distinct xs \\<Longrightarrow>i < j \\<Longrightarrow> j < length xs \\<Longrightarrow> xs!i < xs!j\"", "lemma sorted_list_of_set_0_LEAST:\n  assumes finI: \"finite I\" and I: \"I \\<noteq> {}\"\n  shows \"sorted_list_of_set I ! 0 = (LEAST n. n\\<in>I)\"", "lemma sorted_list_of_set_eq_pick:\n  assumes i: \"i < length (sorted_list_of_set I)\"\n  shows \"sorted_list_of_set I ! i = pick I i\"", "lemma insort_nth':\n  assumes \"\\<forall>j<b. xs ! j < a\" and \"sorted xs\" and \"a \\<notin> set xs\"\n    and \"i < length xs + 1\" and \"i < b\"\n    and \"xs \\<noteq> []\" and \"b < length xs\"\n  shows \"insort a xs ! i = xs ! i\"", "lemma insort_nth:\n  assumes  \"sorted xs\" and \"a \\<notin> set xs\"\n    and \"i < index (insort a xs) a\"\n    and \"xs \\<noteq> []\"\n  shows \"insort a xs ! i = xs ! i\"", "lemma insort_nth2:\n  assumes \"sorted xs\" and \"a \\<notin> set xs\"\n    and \"i < length xs\" and \"i \\<ge> index (insort a xs) a\"\n    and \"xs \\<noteq> []\"\n  shows \"insort a xs ! (Suc i) = xs ! i\"", "lemma pick_index:\n  assumes a: \"a \\<in> I\" and a'_card: \"a' < card I\"\n  shows \"(pick I a' = a) = (index (sorted_list_of_set I) a = a')\""], "translations": [["", "lemma sum_two_rw: \"(\\<Sum>i = 0..<2. f i) = (\\<Sum>i \\<in> {0,1::nat}. f i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sum f {0..<2} = sum f {0, 1}", "by (rule sum.cong, auto)"], ["", "lemma sum_common_left:\n  fixes f::\"'a \\<Rightarrow> 'b::comm_ring_1\"\n  assumes \"finite A\"\n  shows \"sum (\\<lambda>i. c * f i) A = c * sum f A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i\\<in>A. c * f i) = c * sum f A", "by (simp add: mult_hom.hom_sum)"], ["", "lemma prod3_intro:\n  assumes \"fst A = a\" and \"fst (snd A) = b\" and \"snd (snd A) = c\"\n  shows \"A = (a,b,c)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A = (a, b, c)", "using assms"], ["proof (prove)\nusing this:\n  fst A = a\n  fst (snd A) = b\n  snd (snd A) = c\n\ngoal (1 subgoal):\n 1. A = (a, b, c)", "by auto"], ["", "subsection \\<open>Transfer rules for the HMA\\_Connect file of the Perron-Frobenius development\\<close>"], ["", "hide_const (open) HMA_M HMA_I to_hma\\<^sub>m from_hma\\<^sub>m"], ["", "hide_fact (open) from_hma\\<^sub>m_def from_hma_to_hma\\<^sub>m HMA_M_def HMA_I_def dim_row_transfer_rule\n                  dim_col_transfer_rule"], ["", "context\n  includes lifting_syntax\nbegin"], ["", "lemma HMA_invertible_matrix[transfer_rule]:\n  \"((HMA_Connect.HMA_M :: _ \\<Rightarrow> 'a :: comm_ring_1 ^ 'n ^ 'n \\<Rightarrow> _) ===> (=)) invertible_mat invertible\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (HMA_M ===> (=)) invertible_mat invertible", "proof (intro rel_funI, goal_cases)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x y. HMA_M x y \\<Longrightarrow> invertible_mat x = invertible y", "case (1 x y)"], ["proof (state)\nthis:\n  HMA_M x y\n\ngoal (1 subgoal):\n 1. \\<And>x y. HMA_M x y \\<Longrightarrow> invertible_mat x = invertible y", "note rel_xy[transfer_rule] = \"1\""], ["proof (state)\nthis:\n  HMA_M x y\n\ngoal (1 subgoal):\n 1. \\<And>x y. HMA_M x y \\<Longrightarrow> invertible_mat x = invertible y", "have eq_dim: \"dim_col x = dim_row x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col x = dim_row x", "using HMA_Connect.dim_col_transfer_rule HMA_Connect.dim_row_transfer_rule rel_xy"], ["proof (prove)\nusing this:\n  HMA_M ?A ?A' \\<Longrightarrow> dim_col ?A = CARD(?'nc)\n  HMA_M ?A ?A' \\<Longrightarrow> dim_row ?A = CARD(?'nr)\n  HMA_M x y\n\ngoal (1 subgoal):\n 1. dim_col x = dim_row x", "by fastforce"], ["proof (state)\nthis:\n  dim_col x = dim_row x\n\ngoal (1 subgoal):\n 1. \\<And>x y. HMA_M x y \\<Longrightarrow> invertible_mat x = invertible y", "moreover"], ["proof (state)\nthis:\n  dim_col x = dim_row x\n\ngoal (1 subgoal):\n 1. \\<And>x y. HMA_M x y \\<Longrightarrow> invertible_mat x = invertible y", "have \"\\<exists>A'. y ** A' = Finite_Cartesian_Product.mat 1 \\<and> A' ** y = Finite_Cartesian_Product.mat 1\"\n    if xB: \"x * B = 1\\<^sub>m (dim_row x)\" and Bx: \"B * x = 1\\<^sub>m (dim_row B)\" for B"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>A'.\n       y ** A' = Finite_Cartesian_Product.mat (1::'a) \\<and>\n       A' ** y = Finite_Cartesian_Product.mat (1::'a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>A'.\n       y ** A' = Finite_Cartesian_Product.mat (1::'a) \\<and>\n       A' ** y = Finite_Cartesian_Product.mat (1::'a)", "let ?A' = \"HMA_Connect.to_hma\\<^sub>m B:: 'a :: comm_ring_1 ^ 'n ^ 'n\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>A'.\n       y ** A' = Finite_Cartesian_Product.mat (1::'a) \\<and>\n       A' ** y = Finite_Cartesian_Product.mat (1::'a)", "have rel_BA[transfer_rule]: \"HMA_M B ?A'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HMA_M B (to_hma\\<^sub>m B)", "by (metis (no_types, lifting) Bx HMA_M_def eq_dim carrier_mat_triv dim_col_mat(1)\n          from_hma\\<^sub>m_def from_hma_to_hma\\<^sub>m index_mult_mat(3) index_one_mat(3) rel_xy xB)"], ["proof (state)\nthis:\n  HMA_M B (to_hma\\<^sub>m B)\n\ngoal (1 subgoal):\n 1. \\<exists>A'.\n       y ** A' = Finite_Cartesian_Product.mat (1::'a) \\<and>\n       A' ** y = Finite_Cartesian_Product.mat (1::'a)", "have [simp]: \"dim_row B = CARD('n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row B = CARD('n)", "using dim_row_transfer_rule rel_BA"], ["proof (prove)\nusing this:\n  HMA_M ?A ?A' \\<Longrightarrow> dim_row ?A = CARD(?'nr)\n  HMA_M B (to_hma\\<^sub>m B)\n\ngoal (1 subgoal):\n 1. dim_row B = CARD('n)", "by blast"], ["proof (state)\nthis:\n  dim_row B = CARD('n)\n\ngoal (1 subgoal):\n 1. \\<exists>A'.\n       y ** A' = Finite_Cartesian_Product.mat (1::'a) \\<and>\n       A' ** y = Finite_Cartesian_Product.mat (1::'a)", "have [simp]: \"dim_row x = CARD('n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row x = CARD('n)", "using dim_row_transfer_rule rel_xy"], ["proof (prove)\nusing this:\n  HMA_M ?A ?A' \\<Longrightarrow> dim_row ?A = CARD(?'nr)\n  HMA_M x y\n\ngoal (1 subgoal):\n 1. dim_row x = CARD('n)", "by blast"], ["proof (state)\nthis:\n  dim_row x = CARD('n)\n\ngoal (1 subgoal):\n 1. \\<exists>A'.\n       y ** A' = Finite_Cartesian_Product.mat (1::'a) \\<and>\n       A' ** y = Finite_Cartesian_Product.mat (1::'a)", "have \"y ** ?A' = Finite_Cartesian_Product.mat 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y ** to_hma\\<^sub>m B = Finite_Cartesian_Product.mat (1::'a)", "using xB"], ["proof (prove)\nusing this:\n  x * B = 1\\<^sub>m (dim_row x)\n\ngoal (1 subgoal):\n 1. y ** to_hma\\<^sub>m B = Finite_Cartesian_Product.mat (1::'a)", "by (transfer, simp)"], ["proof (state)\nthis:\n  y ** to_hma\\<^sub>m B = Finite_Cartesian_Product.mat (1::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>A'.\n       y ** A' = Finite_Cartesian_Product.mat (1::'a) \\<and>\n       A' ** y = Finite_Cartesian_Product.mat (1::'a)", "moreover"], ["proof (state)\nthis:\n  y ** to_hma\\<^sub>m B = Finite_Cartesian_Product.mat (1::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>A'.\n       y ** A' = Finite_Cartesian_Product.mat (1::'a) \\<and>\n       A' ** y = Finite_Cartesian_Product.mat (1::'a)", "have \"?A' ** y  = Finite_Cartesian_Product.mat 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. to_hma\\<^sub>m B ** y = Finite_Cartesian_Product.mat (1::'a)", "using Bx"], ["proof (prove)\nusing this:\n  B * x = 1\\<^sub>m (dim_row B)\n\ngoal (1 subgoal):\n 1. to_hma\\<^sub>m B ** y = Finite_Cartesian_Product.mat (1::'a)", "by (transfer, simp)"], ["proof (state)\nthis:\n  to_hma\\<^sub>m B ** y = Finite_Cartesian_Product.mat (1::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>A'.\n       y ** A' = Finite_Cartesian_Product.mat (1::'a) \\<and>\n       A' ** y = Finite_Cartesian_Product.mat (1::'a)", "ultimately"], ["proof (chain)\npicking this:\n  y ** to_hma\\<^sub>m B = Finite_Cartesian_Product.mat (1::'a)\n  to_hma\\<^sub>m B ** y = Finite_Cartesian_Product.mat (1::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  y ** to_hma\\<^sub>m B = Finite_Cartesian_Product.mat (1::'a)\n  to_hma\\<^sub>m B ** y = Finite_Cartesian_Product.mat (1::'a)\n\ngoal (1 subgoal):\n 1. \\<exists>A'.\n       y ** A' = Finite_Cartesian_Product.mat (1::'a) \\<and>\n       A' ** y = Finite_Cartesian_Product.mat (1::'a)", "by blast"], ["proof (state)\nthis:\n  \\<exists>A'.\n     y ** A' = Finite_Cartesian_Product.mat (1::'a) \\<and>\n     A' ** y = Finite_Cartesian_Product.mat (1::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>x * ?B = 1\\<^sub>m (dim_row x);\n   ?B * x = 1\\<^sub>m (dim_row ?B)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>A'.\n                       y ** A' = Finite_Cartesian_Product.mat (1::'a) \\<and>\n                       A' ** y = Finite_Cartesian_Product.mat (1::'a)\n\ngoal (1 subgoal):\n 1. \\<And>x y. HMA_M x y \\<Longrightarrow> invertible_mat x = invertible y", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>x * ?B = 1\\<^sub>m (dim_row x);\n   ?B * x = 1\\<^sub>m (dim_row ?B)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>A'.\n                       y ** A' = Finite_Cartesian_Product.mat (1::'a) \\<and>\n                       A' ** y = Finite_Cartesian_Product.mat (1::'a)\n\ngoal (1 subgoal):\n 1. \\<And>x y. HMA_M x y \\<Longrightarrow> invertible_mat x = invertible y", "have \"\\<exists>B. x * B = 1\\<^sub>m (dim_row x) \\<and> B * x = 1\\<^sub>m (dim_row B)\"\n    if yA: \"y ** A' = Finite_Cartesian_Product.mat 1\" and Ay: \"A' ** y = Finite_Cartesian_Product.mat 1\" for A'"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>B.\n       x * B = 1\\<^sub>m (dim_row x) \\<and> B * x = 1\\<^sub>m (dim_row B)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>B.\n       x * B = 1\\<^sub>m (dim_row x) \\<and> B * x = 1\\<^sub>m (dim_row B)", "let ?B = \"(from_hma\\<^sub>m A')\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>B.\n       x * B = 1\\<^sub>m (dim_row x) \\<and> B * x = 1\\<^sub>m (dim_row B)", "have [simp]: \"dim_row x = CARD('n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row x = CARD('n)", "using dim_row_transfer_rule rel_xy"], ["proof (prove)\nusing this:\n  HMA_M ?A ?A' \\<Longrightarrow> dim_row ?A = CARD(?'nr)\n  HMA_M x y\n\ngoal (1 subgoal):\n 1. dim_row x = CARD('n)", "by blast"], ["proof (state)\nthis:\n  dim_row x = CARD('n)\n\ngoal (1 subgoal):\n 1. \\<exists>B.\n       x * B = 1\\<^sub>m (dim_row x) \\<and> B * x = 1\\<^sub>m (dim_row B)", "have [transfer_rule]: \"HMA_M ?B A'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. HMA_M (from_hma\\<^sub>m A') A'", "by (simp add: HMA_M_def)"], ["proof (state)\nthis:\n  HMA_M (from_hma\\<^sub>m A') A'\n\ngoal (1 subgoal):\n 1. \\<exists>B.\n       x * B = 1\\<^sub>m (dim_row x) \\<and> B * x = 1\\<^sub>m (dim_row B)", "hence [simp]: \"dim_row ?B = CARD('n)\""], ["proof (prove)\nusing this:\n  HMA_M (from_hma\\<^sub>m A') A'\n\ngoal (1 subgoal):\n 1. dim_row (from_hma\\<^sub>m A') = CARD('n)", "using dim_row_transfer_rule"], ["proof (prove)\nusing this:\n  HMA_M (from_hma\\<^sub>m A') A'\n  HMA_M ?A ?A' \\<Longrightarrow> dim_row ?A = CARD(?'nr)\n\ngoal (1 subgoal):\n 1. dim_row (from_hma\\<^sub>m A') = CARD('n)", "by auto"], ["proof (state)\nthis:\n  dim_row (from_hma\\<^sub>m A') = CARD('n)\n\ngoal (1 subgoal):\n 1. \\<exists>B.\n       x * B = 1\\<^sub>m (dim_row x) \\<and> B * x = 1\\<^sub>m (dim_row B)", "have \"x * ?B = 1\\<^sub>m (dim_row x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x * from_hma\\<^sub>m A' = 1\\<^sub>m (dim_row x)", "using yA"], ["proof (prove)\nusing this:\n  y ** A' = Finite_Cartesian_Product.mat (1::'a)\n\ngoal (1 subgoal):\n 1. x * from_hma\\<^sub>m A' = 1\\<^sub>m (dim_row x)", "by (transfer', auto)"], ["proof (state)\nthis:\n  x * from_hma\\<^sub>m A' = 1\\<^sub>m (dim_row x)\n\ngoal (1 subgoal):\n 1. \\<exists>B.\n       x * B = 1\\<^sub>m (dim_row x) \\<and> B * x = 1\\<^sub>m (dim_row B)", "moreover"], ["proof (state)\nthis:\n  x * from_hma\\<^sub>m A' = 1\\<^sub>m (dim_row x)\n\ngoal (1 subgoal):\n 1. \\<exists>B.\n       x * B = 1\\<^sub>m (dim_row x) \\<and> B * x = 1\\<^sub>m (dim_row B)", "have \"?B * x = 1\\<^sub>m (dim_row ?B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. from_hma\\<^sub>m A' * x = 1\\<^sub>m (dim_row (from_hma\\<^sub>m A'))", "using Ay"], ["proof (prove)\nusing this:\n  A' ** y = Finite_Cartesian_Product.mat (1::'a)\n\ngoal (1 subgoal):\n 1. from_hma\\<^sub>m A' * x = 1\\<^sub>m (dim_row (from_hma\\<^sub>m A'))", "by (transfer', auto)"], ["proof (state)\nthis:\n  from_hma\\<^sub>m A' * x = 1\\<^sub>m (dim_row (from_hma\\<^sub>m A'))\n\ngoal (1 subgoal):\n 1. \\<exists>B.\n       x * B = 1\\<^sub>m (dim_row x) \\<and> B * x = 1\\<^sub>m (dim_row B)", "ultimately"], ["proof (chain)\npicking this:\n  x * from_hma\\<^sub>m A' = 1\\<^sub>m (dim_row x)\n  from_hma\\<^sub>m A' * x = 1\\<^sub>m (dim_row (from_hma\\<^sub>m A'))", "show ?thesis"], ["proof (prove)\nusing this:\n  x * from_hma\\<^sub>m A' = 1\\<^sub>m (dim_row x)\n  from_hma\\<^sub>m A' * x = 1\\<^sub>m (dim_row (from_hma\\<^sub>m A'))\n\ngoal (1 subgoal):\n 1. \\<exists>B.\n       x * B = 1\\<^sub>m (dim_row x) \\<and> B * x = 1\\<^sub>m (dim_row B)", "by auto"], ["proof (state)\nthis:\n  \\<exists>B.\n     x * B = 1\\<^sub>m (dim_row x) \\<and> B * x = 1\\<^sub>m (dim_row B)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>y ** ?A' = Finite_Cartesian_Product.mat (1::'a);\n   ?A' ** y = Finite_Cartesian_Product.mat (1::'a)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>B.\n                       x * B = 1\\<^sub>m (dim_row x) \\<and>\n                       B * x = 1\\<^sub>m (dim_row B)\n\ngoal (1 subgoal):\n 1. \\<And>x y. HMA_M x y \\<Longrightarrow> invertible_mat x = invertible y", "ultimately"], ["proof (chain)\npicking this:\n  dim_col x = dim_row x\n  \\<lbrakk>x * ?B = 1\\<^sub>m (dim_row x);\n   ?B * x = 1\\<^sub>m (dim_row ?B)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>A'.\n                       y ** A' = Finite_Cartesian_Product.mat (1::'a) \\<and>\n                       A' ** y = Finite_Cartesian_Product.mat (1::'a)\n  \\<lbrakk>y ** ?A' = Finite_Cartesian_Product.mat (1::'a);\n   ?A' ** y = Finite_Cartesian_Product.mat (1::'a)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>B.\n                       x * B = 1\\<^sub>m (dim_row x) \\<and>\n                       B * x = 1\\<^sub>m (dim_row B)", "show ?case"], ["proof (prove)\nusing this:\n  dim_col x = dim_row x\n  \\<lbrakk>x * ?B = 1\\<^sub>m (dim_row x);\n   ?B * x = 1\\<^sub>m (dim_row ?B)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>A'.\n                       y ** A' = Finite_Cartesian_Product.mat (1::'a) \\<and>\n                       A' ** y = Finite_Cartesian_Product.mat (1::'a)\n  \\<lbrakk>y ** ?A' = Finite_Cartesian_Product.mat (1::'a);\n   ?A' ** y = Finite_Cartesian_Product.mat (1::'a)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>B.\n                       x * B = 1\\<^sub>m (dim_row x) \\<and>\n                       B * x = 1\\<^sub>m (dim_row B)\n\ngoal (1 subgoal):\n 1. invertible_mat x = invertible y", "unfolding invertible_mat_def invertible_def inverts_mat_def"], ["proof (prove)\nusing this:\n  dim_col x = dim_row x\n  \\<lbrakk>x * ?B = 1\\<^sub>m (dim_row x);\n   ?B * x = 1\\<^sub>m (dim_row ?B)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>A'.\n                       y ** A' = Finite_Cartesian_Product.mat (1::'a) \\<and>\n                       A' ** y = Finite_Cartesian_Product.mat (1::'a)\n  \\<lbrakk>y ** ?A' = Finite_Cartesian_Product.mat (1::'a);\n   ?A' ** y = Finite_Cartesian_Product.mat (1::'a)\\<rbrakk>\n  \\<Longrightarrow> \\<exists>B.\n                       x * B = 1\\<^sub>m (dim_row x) \\<and>\n                       B * x = 1\\<^sub>m (dim_row B)\n\ngoal (1 subgoal):\n 1. (square_mat x \\<and>\n     (\\<exists>B.\n         x * B = 1\\<^sub>m (dim_row x) \\<and>\n         B * x = 1\\<^sub>m (dim_row B))) =\n    (\\<exists>A'.\n        y ** A' = Finite_Cartesian_Product.mat (1::'a) \\<and>\n        A' ** y = Finite_Cartesian_Product.mat (1::'a))", "by auto"], ["proof (state)\nthis:\n  invertible_mat x = invertible y\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "subsection \\<open>Lemmas obtained from HOL Analysis using local type definitions\\<close>"], ["", "thm Cartesian_Space.invertible_mult"], ["", "(*In HOL Analysis*)"], ["", "thm invertible_iff_is_unit"], ["", "(*In HOL Analysis*)"], ["", "thm det_non_zero_imp_unit"], ["", "(*In JNF, but only for fields*)"], ["", "thm mat_mult_left_right_inverse"], ["", "(*In JNF, but only for fields*)"], ["", "lemma invertible_mat_zero:\n  assumes A: \"A \\<in> carrier_mat 0 0\"\n  shows \"invertible_mat A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible_mat A", "using A"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat 0 0\n\ngoal (1 subgoal):\n 1. invertible_mat A", "unfolding invertible_mat_def inverts_mat_def one_mat_def times_mat_def scalar_prod_def\n    Matrix.row_def col_def carrier_mat_def"], ["proof (prove)\nusing this:\n  A \\<in> {m. dim_row m = 0 \\<and> dim_col m = 0}\n\ngoal (1 subgoal):\n 1. square_mat A \\<and>\n    (\\<exists>B.\n        Matrix.mat (dim_row A) (dim_col B)\n         (\\<lambda>(i, j).\n             \\<Sum>ia = 0..<dim_vec\n                             (Matrix.vec (dim_row B)\n                               (\\<lambda>i. B $$ (i, j))).\n                Matrix.vec (dim_col A) (\\<lambda>j. A $$ (i, j)) $v ia *\n                Matrix.vec (dim_row B) (\\<lambda>i. B $$ (i, j)) $v ia) =\n        Matrix.mat (dim_row A) (dim_row A)\n         (\\<lambda>(i, j). if i = j then 1::'a else (0::'a)) \\<and>\n        Matrix.mat (dim_row B) (dim_col A)\n         (\\<lambda>(i, j).\n             \\<Sum>ia = 0..<dim_vec\n                             (Matrix.vec (dim_row A)\n                               (\\<lambda>i. A $$ (i, j))).\n                Matrix.vec (dim_col B) (\\<lambda>j. B $$ (i, j)) $v ia *\n                Matrix.vec (dim_row A) (\\<lambda>i. A $$ (i, j)) $v ia) =\n        Matrix.mat (dim_row B) (dim_row B)\n         (\\<lambda>(i, j). if i = j then 1::'a else (0::'a)))", "by (auto, metis (no_types, lifting) cong_mat not_less_zero)"], ["", "lemma invertible_mult_JNF:\n  fixes A::\"'a::comm_ring_1 mat\"\n  assumes A: \"A\\<in>carrier_mat n n\" and B: \"B\\<in>carrier_mat n n\"\n    and inv_A: \"invertible_mat A\" and inv_B: \"invertible_mat B\"\nshows \"invertible_mat (A*B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible_mat (A * B)", "proof (cases \"n = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> invertible_mat (A * B)\n 2. n \\<noteq> 0 \\<Longrightarrow> invertible_mat (A * B)", "case True"], ["proof (state)\nthis:\n  n = 0\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow> invertible_mat (A * B)\n 2. n \\<noteq> 0 \\<Longrightarrow> invertible_mat (A * B)", "then"], ["proof (chain)\npicking this:\n  n = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  n = 0\n\ngoal (1 subgoal):\n 1. invertible_mat (A * B)", "using assms"], ["proof (prove)\nusing this:\n  n = 0\n  A \\<in> carrier_mat n n\n  B \\<in> carrier_mat n n\n  invertible_mat A\n  invertible_mat B\n\ngoal (1 subgoal):\n 1. invertible_mat (A * B)", "by (simp add: invertible_mat_zero)"], ["proof (state)\nthis:\n  invertible_mat (A * B)\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> invertible_mat (A * B)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> invertible_mat (A * B)", "case False"], ["proof (state)\nthis:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow> invertible_mat (A * B)", "then"], ["proof (chain)\npicking this:\n  n \\<noteq> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. invertible_mat (A * B)", "using\n      invertible_mult[where ?'a=\"'a::comm_ring_1\", where ?'b=\"'n::finite\", where ?'c=\"'n::finite\",\n      where ?'d=\"'n::finite\", untransferred, cancel_card_constraint, OF assms]"], ["proof (prove)\nusing this:\n  n \\<noteq> 0\n  n \\<noteq> 0 \\<Longrightarrow> invertible_mat (A * B)\n\ngoal (1 subgoal):\n 1. invertible_mat (A * B)", "by auto"], ["proof (state)\nthis:\n  invertible_mat (A * B)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma invertible_iff_is_unit_JNF:\n  assumes A: \"A \\<in> carrier_mat n n\"\n  shows \"invertible_mat A \\<longleftrightarrow> (Determinant.det A) dvd 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible_mat A = (Determinant.det A dvd (1::'a))", "proof (cases \"n=0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    invertible_mat A = (Determinant.det A dvd (1::'a))\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    invertible_mat A = (Determinant.det A dvd (1::'a))", "case True"], ["proof (state)\nthis:\n  n = 0\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    invertible_mat A = (Determinant.det A dvd (1::'a))\n 2. n \\<noteq> 0 \\<Longrightarrow>\n    invertible_mat A = (Determinant.det A dvd (1::'a))", "then"], ["proof (chain)\npicking this:\n  n = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  n = 0\n\ngoal (1 subgoal):\n 1. invertible_mat A = (Determinant.det A dvd (1::'a))", "using det_dim_zero invertible_mat_zero A"], ["proof (prove)\nusing this:\n  n = 0\n  ?A \\<in> carrier_mat 0 0 \\<Longrightarrow> Determinant.det ?A = (1::?'a)\n  ?A \\<in> carrier_mat 0 0 \\<Longrightarrow> invertible_mat ?A\n  A \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. invertible_mat A = (Determinant.det A dvd (1::'a))", "by auto"], ["proof (state)\nthis:\n  invertible_mat A = (Determinant.det A dvd (1::'a))\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    invertible_mat A = (Determinant.det A dvd (1::'a))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    invertible_mat A = (Determinant.det A dvd (1::'a))", "case False"], ["proof (state)\nthis:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. n \\<noteq> 0 \\<Longrightarrow>\n    invertible_mat A = (Determinant.det A dvd (1::'a))", "then"], ["proof (chain)\npicking this:\n  n \\<noteq> 0", "show ?thesis"], ["proof (prove)\nusing this:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. invertible_mat A = (Determinant.det A dvd (1::'a))", "using invertible_iff_is_unit[untransferred, cancel_card_constraint] A"], ["proof (prove)\nusing this:\n  n \\<noteq> 0\n  \\<lbrakk>?A \\<in> carrier_mat ?n0.0 ?n0.0; ?n0.0 \\<noteq> 0\\<rbrakk>\n  \\<Longrightarrow> invertible_mat ?A = (Determinant.det ?A dvd (1::?'b))\n  A \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. invertible_mat A = (Determinant.det A dvd (1::'a))", "by auto"], ["proof (state)\nthis:\n  invertible_mat A = (Determinant.det A dvd (1::'a))\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Lemmas about matrices, submatrices and determinants\\<close>"], ["", "(*This is a generalization of thm mat_mult_left_right_inverse*)"], ["", "thm mat_mult_left_right_inverse"], ["", "lemma mat_mult_left_right_inverse:\n  fixes A :: \"'a::comm_ring_1 mat\"\n  assumes A: \"A \\<in> carrier_mat n n\"\n    and B: \"B \\<in> carrier_mat n n\" and AB: \"A * B = 1\\<^sub>m n\"\n  shows \"B * A = 1\\<^sub>m n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B * A = 1\\<^sub>m n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. B * A = 1\\<^sub>m n", "have \"Determinant.det (A * B) = Determinant.det (1\\<^sub>m n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (A * B) = Determinant.det (1\\<^sub>m n)", "using AB"], ["proof (prove)\nusing this:\n  A * B = 1\\<^sub>m n\n\ngoal (1 subgoal):\n 1. Determinant.det (A * B) = Determinant.det (1\\<^sub>m n)", "by auto"], ["proof (state)\nthis:\n  Determinant.det (A * B) = Determinant.det (1\\<^sub>m n)\n\ngoal (1 subgoal):\n 1. B * A = 1\\<^sub>m n", "hence \"Determinant.det A * Determinant.det B = 1\""], ["proof (prove)\nusing this:\n  Determinant.det (A * B) = Determinant.det (1\\<^sub>m n)\n\ngoal (1 subgoal):\n 1. Determinant.det A * Determinant.det B = (1::'a)", "using Determinant.det_mult[OF A B] det_one"], ["proof (prove)\nusing this:\n  Determinant.det (A * B) = Determinant.det (1\\<^sub>m n)\n  Determinant.det (A * B) = Determinant.det A * Determinant.det B\n  Determinant.det (1\\<^sub>m ?n) = (1::?'a)\n\ngoal (1 subgoal):\n 1. Determinant.det A * Determinant.det B = (1::'a)", "by auto"], ["proof (state)\nthis:\n  Determinant.det A * Determinant.det B = (1::'a)\n\ngoal (1 subgoal):\n 1. B * A = 1\\<^sub>m n", "hence det_A: \"(Determinant.det A) dvd 1\" and det_B: \"(Determinant.det B) dvd 1\""], ["proof (prove)\nusing this:\n  Determinant.det A * Determinant.det B = (1::'a)\n\ngoal (1 subgoal):\n 1. Determinant.det A dvd (1::'a) &&& Determinant.det B dvd (1::'a)", "using dvd_triv_left dvd_triv_right"], ["proof (prove)\nusing this:\n  Determinant.det A * Determinant.det B = (1::'a)\n  ?a dvd ?a * ?b\n  ?a dvd ?b * ?a\n\ngoal (1 subgoal):\n 1. Determinant.det A dvd (1::'a) &&& Determinant.det B dvd (1::'a)", "by metis+"], ["proof (state)\nthis:\n  Determinant.det A dvd (1::'a)\n  Determinant.det B dvd (1::'a)\n\ngoal (1 subgoal):\n 1. B * A = 1\\<^sub>m n", "hence inv_A: \"invertible_mat A\" and inv_B: \"invertible_mat B\""], ["proof (prove)\nusing this:\n  Determinant.det A dvd (1::'a)\n  Determinant.det B dvd (1::'a)\n\ngoal (1 subgoal):\n 1. invertible_mat A &&& invertible_mat B", "using A B invertible_iff_is_unit_JNF"], ["proof (prove)\nusing this:\n  Determinant.det A dvd (1::'a)\n  Determinant.det B dvd (1::'a)\n  A \\<in> carrier_mat n n\n  B \\<in> carrier_mat n n\n  ?A \\<in> carrier_mat ?n ?n \\<Longrightarrow>\n  invertible_mat ?A = (Determinant.det ?A dvd (1::?'a))\n\ngoal (1 subgoal):\n 1. invertible_mat A &&& invertible_mat B", "by blast+"], ["proof (state)\nthis:\n  invertible_mat A\n  invertible_mat B\n\ngoal (1 subgoal):\n 1. B * A = 1\\<^sub>m n", "obtain B' where inv_BB': \"inverts_mat B B'\" and inv_B'B: \"inverts_mat B' B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>B'.\n        \\<lbrakk>inverts_mat B B'; inverts_mat B' B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using inv_B"], ["proof (prove)\nusing this:\n  invertible_mat B\n\ngoal (1 subgoal):\n 1. (\\<And>B'.\n        \\<lbrakk>inverts_mat B B'; inverts_mat B' B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding invertible_mat_def"], ["proof (prove)\nusing this:\n  square_mat B \\<and>\n  (\\<exists>Ba. inverts_mat B Ba \\<and> inverts_mat Ba B)\n\ngoal (1 subgoal):\n 1. (\\<And>B'.\n        \\<lbrakk>inverts_mat B B'; inverts_mat B' B\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  inverts_mat B B'\n  inverts_mat B' B\n\ngoal (1 subgoal):\n 1. B * A = 1\\<^sub>m n", "have B'_carrier: \"B' \\<in> carrier_mat n n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B' \\<in> carrier_mat n n", "by (metis B inv_B'B inv_BB' carrier_matD(1) carrier_matD(2) carrier_mat_triv\n        index_mult_mat(3) index_one_mat(3) inverts_mat_def)"], ["proof (state)\nthis:\n  B' \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. B * A = 1\\<^sub>m n", "have \"B * A * B = B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B * A * B = B", "using A AB B"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat n n\n  A * B = 1\\<^sub>m n\n  B \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. B * A * B = B", "by auto"], ["proof (state)\nthis:\n  B * A * B = B\n\ngoal (1 subgoal):\n 1. B * A = 1\\<^sub>m n", "hence \"B * A * (B * B') = B * B'\""], ["proof (prove)\nusing this:\n  B * A * B = B\n\ngoal (1 subgoal):\n 1. B * A * (B * B') = B * B'", "by (smt A AB B B'_carrier assoc_mult_mat carrier_matD(1) inv_BB' inverts_mat_def one_carrier_mat)"], ["proof (state)\nthis:\n  B * A * (B * B') = B * B'\n\ngoal (1 subgoal):\n 1. B * A = 1\\<^sub>m n", "thus ?thesis"], ["proof (prove)\nusing this:\n  B * A * (B * B') = B * B'\n\ngoal (1 subgoal):\n 1. B * A = 1\\<^sub>m n", "by (metis A B carrier_matD(1) carrier_matD(2) index_mult_mat(3) inv_BB'\n        inverts_mat_def right_mult_one_mat')"], ["proof (state)\nthis:\n  B * A = 1\\<^sub>m n\n\ngoal:\nNo subgoals!", "qed"], ["", "context comm_ring_1\nbegin"], ["", "lemma col_submatrix_UNIV:\nassumes \"j < card {i. i < dim_col A \\<and> i \\<in> J}\"\nshows \"col (submatrix A UNIV J) j = col A (pick J j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col (submatrix A UNIV J) j = col A (pick J j)", "proof (rule eq_vecI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       i < dim_vec (col A (pick J j)) \\<Longrightarrow>\n       col (submatrix A UNIV J) j $v i = col A (pick J j) $v i\n 2. dim_vec (col (submatrix A UNIV J) j) = dim_vec (col A (pick J j))", "show dim_eq:\"dim_vec (col (submatrix A UNIV J) j) = dim_vec (col A (pick J j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_vec (col (submatrix A UNIV J) j) = dim_vec (col A (pick J j))", "by (simp add: dim_submatrix(1))"], ["proof (state)\nthis:\n  dim_vec (col (submatrix A UNIV J) j) = dim_vec (col A (pick J j))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec (col A (pick J j)) \\<Longrightarrow>\n       col (submatrix A UNIV J) j $v i = col A (pick J j) $v i", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec (col A (pick J j)) \\<Longrightarrow>\n       col (submatrix A UNIV J) j $v i = col A (pick J j) $v i", "assume \"i < dim_vec (col A (pick J j))\""], ["proof (state)\nthis:\n  i < dim_vec (col A (pick J j))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec (col A (pick J j)) \\<Longrightarrow>\n       col (submatrix A UNIV J) j $v i = col A (pick J j) $v i", "show \"col (submatrix A UNIV J) j $v i = col A (pick J j) $v i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col (submatrix A UNIV J) j $v i = col A (pick J j) $v i", "by (smt Collect_cong assms col_def dim_col dim_eq dim_submatrix(1)\n        eq_vecI index_vec pick_UNIV submatrix_index)"], ["proof (state)\nthis:\n  col (submatrix A UNIV J) j $v i = col A (pick J j) $v i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma submatrix_split2: \"submatrix A I J = submatrix (submatrix A I UNIV) UNIV J\" (is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix A I J = submatrix (submatrix A I UNIV) UNIV J", "proof (rule eq_matI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (submatrix (submatrix A I UNIV) UNIV J);\n        j < dim_col (submatrix (submatrix A I UNIV) UNIV J)\\<rbrakk>\n       \\<Longrightarrow> submatrix A I J $$ (i, j) =\n                         submatrix (submatrix A I UNIV) UNIV J $$ (i, j)\n 2. dim_row (submatrix A I J) =\n    dim_row (submatrix (submatrix A I UNIV) UNIV J)\n 3. dim_col (submatrix A I J) =\n    dim_col (submatrix (submatrix A I UNIV) UNIV J)", "show dr: \"dim_row ?lhs = dim_row ?rhs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row (submatrix A I J) =\n    dim_row (submatrix (submatrix A I UNIV) UNIV J)", "by (simp add: dim_submatrix(1))"], ["proof (state)\nthis:\n  dim_row (submatrix A I J) =\n  dim_row (submatrix (submatrix A I UNIV) UNIV J)\n\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (submatrix (submatrix A I UNIV) UNIV J);\n        j < dim_col (submatrix (submatrix A I UNIV) UNIV J)\\<rbrakk>\n       \\<Longrightarrow> submatrix A I J $$ (i, j) =\n                         submatrix (submatrix A I UNIV) UNIV J $$ (i, j)\n 2. dim_col (submatrix A I J) =\n    dim_col (submatrix (submatrix A I UNIV) UNIV J)", "show dc: \"dim_col ?lhs = dim_col ?rhs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col (submatrix A I J) =\n    dim_col (submatrix (submatrix A I UNIV) UNIV J)", "by (simp add: dim_submatrix(2))"], ["proof (state)\nthis:\n  dim_col (submatrix A I J) =\n  dim_col (submatrix (submatrix A I UNIV) UNIV J)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (submatrix (submatrix A I UNIV) UNIV J);\n        j < dim_col (submatrix (submatrix A I UNIV) UNIV J)\\<rbrakk>\n       \\<Longrightarrow> submatrix A I J $$ (i, j) =\n                         submatrix (submatrix A I UNIV) UNIV J $$ (i, j)", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (submatrix (submatrix A I UNIV) UNIV J);\n        j < dim_col (submatrix (submatrix A I UNIV) UNIV J)\\<rbrakk>\n       \\<Longrightarrow> submatrix A I J $$ (i, j) =\n                         submatrix (submatrix A I UNIV) UNIV J $$ (i, j)", "assume i: \"i < dim_row ?rhs\"\n    and j: \"j < dim_col ?rhs\""], ["proof (state)\nthis:\n  i < dim_row (submatrix (submatrix A I UNIV) UNIV J)\n  j < dim_col (submatrix (submatrix A I UNIV) UNIV J)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (submatrix (submatrix A I UNIV) UNIV J);\n        j < dim_col (submatrix (submatrix A I UNIV) UNIV J)\\<rbrakk>\n       \\<Longrightarrow> submatrix A I J $$ (i, j) =\n                         submatrix (submatrix A I UNIV) UNIV J $$ (i, j)", "have \"?rhs $$ (i, j) = (submatrix A I UNIV) $$ (pick UNIV i, pick J j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix (submatrix A I UNIV) UNIV J $$ (i, j) =\n    submatrix A I UNIV $$ (pick UNIV i, pick J j)", "proof (rule submatrix_index)"], ["proof (state)\ngoal (2 subgoals):\n 1. i < card {i. i < dim_row (submatrix A I UNIV) \\<and> i \\<in> UNIV}\n 2. j < card {j. j < dim_col (submatrix A I UNIV) \\<and> j \\<in> J}", "show \"i < card {i. i < dim_row (submatrix A I UNIV) \\<and> i \\<in> UNIV}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < card {i. i < dim_row (submatrix A I UNIV) \\<and> i \\<in> UNIV}", "by (metis (full_types) dim_submatrix(1) i)"], ["proof (state)\nthis:\n  i < card {i. i < dim_row (submatrix A I UNIV) \\<and> i \\<in> UNIV}\n\ngoal (1 subgoal):\n 1. j < card {j. j < dim_col (submatrix A I UNIV) \\<and> j \\<in> J}", "show \"j < card {j. j < dim_col (submatrix A I UNIV) \\<and> j \\<in> J}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j < card {j. j < dim_col (submatrix A I UNIV) \\<and> j \\<in> J}", "by (metis (full_types) dim_submatrix(2) j)"], ["proof (state)\nthis:\n  j < card {j. j < dim_col (submatrix A I UNIV) \\<and> j \\<in> J}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  submatrix (submatrix A I UNIV) UNIV J $$ (i, j) =\n  submatrix A I UNIV $$ (pick UNIV i, pick J j)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (submatrix (submatrix A I UNIV) UNIV J);\n        j < dim_col (submatrix (submatrix A I UNIV) UNIV J)\\<rbrakk>\n       \\<Longrightarrow> submatrix A I J $$ (i, j) =\n                         submatrix (submatrix A I UNIV) UNIV J $$ (i, j)", "also"], ["proof (state)\nthis:\n  submatrix (submatrix A I UNIV) UNIV J $$ (i, j) =\n  submatrix A I UNIV $$ (pick UNIV i, pick J j)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (submatrix (submatrix A I UNIV) UNIV J);\n        j < dim_col (submatrix (submatrix A I UNIV) UNIV J)\\<rbrakk>\n       \\<Longrightarrow> submatrix A I J $$ (i, j) =\n                         submatrix (submatrix A I UNIV) UNIV J $$ (i, j)", "have \"... = A $$ (pick I (pick UNIV i), pick UNIV (pick J j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix A I UNIV $$ (pick UNIV i, pick J j) =\n    A $$ (pick I (pick UNIV i), pick UNIV (pick J j))", "proof (rule submatrix_index)"], ["proof (state)\ngoal (2 subgoals):\n 1. pick UNIV i < card {i. i < dim_row A \\<and> i \\<in> I}\n 2. pick J j < card {j. j < dim_col A \\<and> j \\<in> UNIV}", "show \"pick UNIV i < card {i. i < dim_row A \\<and> i \\<in> I}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pick UNIV i < card {i. i < dim_row A \\<and> i \\<in> I}", "by (metis (full_types) dr dim_submatrix(1) i pick_UNIV)"], ["proof (state)\nthis:\n  pick UNIV i < card {i. i < dim_row A \\<and> i \\<in> I}\n\ngoal (1 subgoal):\n 1. pick J j < card {j. j < dim_col A \\<and> j \\<in> UNIV}", "show \"pick J j < card {j. j < dim_col A \\<and> j \\<in> UNIV}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pick J j < card {j. j < dim_col A \\<and> j \\<in> UNIV}", "by (metis (full_types) dim_submatrix(2) j pick_le)"], ["proof (state)\nthis:\n  pick J j < card {j. j < dim_col A \\<and> j \\<in> UNIV}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  submatrix A I UNIV $$ (pick UNIV i, pick J j) =\n  A $$ (pick I (pick UNIV i), pick UNIV (pick J j))\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (submatrix (submatrix A I UNIV) UNIV J);\n        j < dim_col (submatrix (submatrix A I UNIV) UNIV J)\\<rbrakk>\n       \\<Longrightarrow> submatrix A I J $$ (i, j) =\n                         submatrix (submatrix A I UNIV) UNIV J $$ (i, j)", "also"], ["proof (state)\nthis:\n  submatrix A I UNIV $$ (pick UNIV i, pick J j) =\n  A $$ (pick I (pick UNIV i), pick UNIV (pick J j))\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (submatrix (submatrix A I UNIV) UNIV J);\n        j < dim_col (submatrix (submatrix A I UNIV) UNIV J)\\<rbrakk>\n       \\<Longrightarrow> submatrix A I J $$ (i, j) =\n                         submatrix (submatrix A I UNIV) UNIV J $$ (i, j)", "have \"... = ?lhs $$ (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A $$ (pick I (pick UNIV i), pick UNIV (pick J j)) =\n    submatrix A I J $$ (i, j)", "proof (unfold pick_UNIV, rule submatrix_index[symmetric])"], ["proof (state)\ngoal (2 subgoals):\n 1. i < card {i. i < dim_row A \\<and> i \\<in> I}\n 2. j < card {j. j < dim_col A \\<and> j \\<in> J}", "show \"i < card {i. i < dim_row A \\<and> i \\<in> I}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < card {i. i < dim_row A \\<and> i \\<in> I}", "by (metis (full_types) dim_submatrix(1) dr i)"], ["proof (state)\nthis:\n  i < card {i. i < dim_row A \\<and> i \\<in> I}\n\ngoal (1 subgoal):\n 1. j < card {j. j < dim_col A \\<and> j \\<in> J}", "show \"j < card {j. j < dim_col A \\<and> j \\<in> J}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j < card {j. j < dim_col A \\<and> j \\<in> J}", "by (metis (full_types) dim_submatrix(2) dc j)"], ["proof (state)\nthis:\n  j < card {j. j < dim_col A \\<and> j \\<in> J}\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  A $$ (pick I (pick UNIV i), pick UNIV (pick J j)) =\n  submatrix A I J $$ (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (submatrix (submatrix A I UNIV) UNIV J);\n        j < dim_col (submatrix (submatrix A I UNIV) UNIV J)\\<rbrakk>\n       \\<Longrightarrow> submatrix A I J $$ (i, j) =\n                         submatrix (submatrix A I UNIV) UNIV J $$ (i, j)", "finally"], ["proof (chain)\npicking this:\n  submatrix (submatrix A I UNIV) UNIV J $$ (i, j) =\n  submatrix A I J $$ (i, j)", "show \"?lhs $$ (i, j) = ?rhs $$ (i, j)\""], ["proof (prove)\nusing this:\n  submatrix (submatrix A I UNIV) UNIV J $$ (i, j) =\n  submatrix A I J $$ (i, j)\n\ngoal (1 subgoal):\n 1. submatrix A I J $$ (i, j) =\n    submatrix (submatrix A I UNIV) UNIV J $$ (i, j)", ".."], ["proof (state)\nthis:\n  submatrix A I J $$ (i, j) =\n  submatrix (submatrix A I UNIV) UNIV J $$ (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma submatrix_mult:\n  \"submatrix (A*B) I J = submatrix A I UNIV * submatrix B UNIV J\" (is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix (A * B) I J = submatrix A I UNIV * submatrix B UNIV J", "proof (rule eq_matI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (submatrix A I UNIV * submatrix B UNIV J);\n        j < dim_col (submatrix A I UNIV * submatrix B UNIV J)\\<rbrakk>\n       \\<Longrightarrow> submatrix (A * B) I J $$ (i, j) =\n                         (submatrix A I UNIV * submatrix B UNIV J) $$ (i, j)\n 2. dim_row (submatrix (A * B) I J) =\n    dim_row (submatrix A I UNIV * submatrix B UNIV J)\n 3. dim_col (submatrix (A * B) I J) =\n    dim_col (submatrix A I UNIV * submatrix B UNIV J)", "show \"dim_row ?lhs = dim_row ?rhs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row (submatrix (A * B) I J) =\n    dim_row (submatrix A I UNIV * submatrix B UNIV J)", "unfolding submatrix_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row\n     (Matrix.mat (card {i. i < dim_row (A * B) \\<and> i \\<in> I})\n       (card {j. j < dim_col (A * B) \\<and> j \\<in> J})\n       (\\<lambda>(i, j). (A * B) $$ (pick I i, pick J j))) =\n    dim_row\n     (Matrix.mat (card {i. i < dim_row A \\<and> i \\<in> I})\n       (card {j. j < dim_col A \\<and> j \\<in> UNIV})\n       (\\<lambda>(i, j). A $$ (pick I i, pick UNIV j)) *\n      Matrix.mat (card {i. i < dim_row B \\<and> i \\<in> UNIV})\n       (card {j. j < dim_col B \\<and> j \\<in> J})\n       (\\<lambda>(i, j). B $$ (pick UNIV i, pick J j)))", "by auto"], ["proof (state)\nthis:\n  dim_row (submatrix (A * B) I J) =\n  dim_row (submatrix A I UNIV * submatrix B UNIV J)\n\ngoal (2 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (submatrix A I UNIV * submatrix B UNIV J);\n        j < dim_col (submatrix A I UNIV * submatrix B UNIV J)\\<rbrakk>\n       \\<Longrightarrow> submatrix (A * B) I J $$ (i, j) =\n                         (submatrix A I UNIV * submatrix B UNIV J) $$ (i, j)\n 2. dim_col (submatrix (A * B) I J) =\n    dim_col (submatrix A I UNIV * submatrix B UNIV J)", "show \"dim_col ?lhs = dim_col ?rhs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col (submatrix (A * B) I J) =\n    dim_col (submatrix A I UNIV * submatrix B UNIV J)", "unfolding submatrix_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_col\n     (Matrix.mat (card {i. i < dim_row (A * B) \\<and> i \\<in> I})\n       (card {j. j < dim_col (A * B) \\<and> j \\<in> J})\n       (\\<lambda>(i, j). (A * B) $$ (pick I i, pick J j))) =\n    dim_col\n     (Matrix.mat (card {i. i < dim_row A \\<and> i \\<in> I})\n       (card {j. j < dim_col A \\<and> j \\<in> UNIV})\n       (\\<lambda>(i, j). A $$ (pick I i, pick UNIV j)) *\n      Matrix.mat (card {i. i < dim_row B \\<and> i \\<in> UNIV})\n       (card {j. j < dim_col B \\<and> j \\<in> J})\n       (\\<lambda>(i, j). B $$ (pick UNIV i, pick J j)))", "by auto"], ["proof (state)\nthis:\n  dim_col (submatrix (A * B) I J) =\n  dim_col (submatrix A I UNIV * submatrix B UNIV J)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (submatrix A I UNIV * submatrix B UNIV J);\n        j < dim_col (submatrix A I UNIV * submatrix B UNIV J)\\<rbrakk>\n       \\<Longrightarrow> submatrix (A * B) I J $$ (i, j) =\n                         (submatrix A I UNIV * submatrix B UNIV J) $$ (i, j)", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (submatrix A I UNIV * submatrix B UNIV J);\n        j < dim_col (submatrix A I UNIV * submatrix B UNIV J)\\<rbrakk>\n       \\<Longrightarrow> submatrix (A * B) I J $$ (i, j) =\n                         (submatrix A I UNIV * submatrix B UNIV J) $$ (i, j)", "assume i: \"i < dim_row ?rhs\" and j: \"j < dim_col ?rhs\""], ["proof (state)\nthis:\n  i < dim_row (submatrix A I UNIV * submatrix B UNIV J)\n  j < dim_col (submatrix A I UNIV * submatrix B UNIV J)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (submatrix A I UNIV * submatrix B UNIV J);\n        j < dim_col (submatrix A I UNIV * submatrix B UNIV J)\\<rbrakk>\n       \\<Longrightarrow> submatrix (A * B) I J $$ (i, j) =\n                         (submatrix A I UNIV * submatrix B UNIV J) $$ (i, j)", "have i1: \"i < card {i. i < dim_row (A * B) \\<and> i \\<in> I}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < card {i. i < dim_row (A * B) \\<and> i \\<in> I}", "by (metis (full_types) dim_submatrix(1) i index_mult_mat(2))"], ["proof (state)\nthis:\n  i < card {i. i < dim_row (A * B) \\<and> i \\<in> I}\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (submatrix A I UNIV * submatrix B UNIV J);\n        j < dim_col (submatrix A I UNIV * submatrix B UNIV J)\\<rbrakk>\n       \\<Longrightarrow> submatrix (A * B) I J $$ (i, j) =\n                         (submatrix A I UNIV * submatrix B UNIV J) $$ (i, j)", "have j1: \"j < card {j. j < dim_col (A * B) \\<and> j \\<in> J}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j < card {j. j < dim_col (A * B) \\<and> j \\<in> J}", "by (metis dim_submatrix(2) index_mult_mat(3) j)"], ["proof (state)\nthis:\n  j < card {j. j < dim_col (A * B) \\<and> j \\<in> J}\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (submatrix A I UNIV * submatrix B UNIV J);\n        j < dim_col (submatrix A I UNIV * submatrix B UNIV J)\\<rbrakk>\n       \\<Longrightarrow> submatrix (A * B) I J $$ (i, j) =\n                         (submatrix A I UNIV * submatrix B UNIV J) $$ (i, j)", "have pi: \"pick I i < dim_row A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pick I i < dim_row A", "using i1 pick_le"], ["proof (prove)\nusing this:\n  i < card {i. i < dim_row (A * B) \\<and> i \\<in> I}\n  ?n < card {a. a < ?i \\<and> a \\<in> ?S} \\<Longrightarrow> pick ?S ?n < ?i\n\ngoal (1 subgoal):\n 1. pick I i < dim_row A", "by auto"], ["proof (state)\nthis:\n  pick I i < dim_row A\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (submatrix A I UNIV * submatrix B UNIV J);\n        j < dim_col (submatrix A I UNIV * submatrix B UNIV J)\\<rbrakk>\n       \\<Longrightarrow> submatrix (A * B) I J $$ (i, j) =\n                         (submatrix A I UNIV * submatrix B UNIV J) $$ (i, j)", "have pj: \"pick J j < dim_col B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pick J j < dim_col B", "using j1 pick_le"], ["proof (prove)\nusing this:\n  j < card {j. j < dim_col (A * B) \\<and> j \\<in> J}\n  ?n < card {a. a < ?i \\<and> a \\<in> ?S} \\<Longrightarrow> pick ?S ?n < ?i\n\ngoal (1 subgoal):\n 1. pick J j < dim_col B", "by auto"], ["proof (state)\nthis:\n  pick J j < dim_col B\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (submatrix A I UNIV * submatrix B UNIV J);\n        j < dim_col (submatrix A I UNIV * submatrix B UNIV J)\\<rbrakk>\n       \\<Longrightarrow> submatrix (A * B) I J $$ (i, j) =\n                         (submatrix A I UNIV * submatrix B UNIV J) $$ (i, j)", "have row_rw: \"Matrix.row (submatrix A I UNIV) i = Matrix.row A (pick I i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Matrix.row (submatrix A I UNIV) i = Matrix.row A (pick I i)", "using i1 row_submatrix_UNIV"], ["proof (prove)\nusing this:\n  i < card {i. i < dim_row (A * B) \\<and> i \\<in> I}\n  ?i < card {i. i < dim_row ?A \\<and> i \\<in> ?I} \\<Longrightarrow>\n  Matrix.row (submatrix ?A ?I UNIV) ?i = Matrix.row ?A (pick ?I ?i)\n\ngoal (1 subgoal):\n 1. Matrix.row (submatrix A I UNIV) i = Matrix.row A (pick I i)", "by auto"], ["proof (state)\nthis:\n  Matrix.row (submatrix A I UNIV) i = Matrix.row A (pick I i)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (submatrix A I UNIV * submatrix B UNIV J);\n        j < dim_col (submatrix A I UNIV * submatrix B UNIV J)\\<rbrakk>\n       \\<Longrightarrow> submatrix (A * B) I J $$ (i, j) =\n                         (submatrix A I UNIV * submatrix B UNIV J) $$ (i, j)", "have col_rw: \"col (submatrix B UNIV J) j = col B (pick J j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. col (submatrix B UNIV J) j = col B (pick J j)", "using j1 col_submatrix_UNIV"], ["proof (prove)\nusing this:\n  j < card {j. j < dim_col (A * B) \\<and> j \\<in> J}\n  ?j < card {i. i < dim_col ?A \\<and> i \\<in> ?J} \\<Longrightarrow>\n  col (submatrix ?A UNIV ?J) ?j = col ?A (pick ?J ?j)\n\ngoal (1 subgoal):\n 1. col (submatrix B UNIV J) j = col B (pick J j)", "by auto"], ["proof (state)\nthis:\n  col (submatrix B UNIV J) j = col B (pick J j)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (submatrix A I UNIV * submatrix B UNIV J);\n        j < dim_col (submatrix A I UNIV * submatrix B UNIV J)\\<rbrakk>\n       \\<Longrightarrow> submatrix (A * B) I J $$ (i, j) =\n                         (submatrix A I UNIV * submatrix B UNIV J) $$ (i, j)", "have \"?lhs $$ (i,j) =  (A*B) $$ (pick I i, pick J j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix (A * B) I J $$ (i, j) = (A * B) $$ (pick I i, pick J j)", "by (rule submatrix_index[OF i1 j1])"], ["proof (state)\nthis:\n  submatrix (A * B) I J $$ (i, j) = (A * B) $$ (pick I i, pick J j)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (submatrix A I UNIV * submatrix B UNIV J);\n        j < dim_col (submatrix A I UNIV * submatrix B UNIV J)\\<rbrakk>\n       \\<Longrightarrow> submatrix (A * B) I J $$ (i, j) =\n                         (submatrix A I UNIV * submatrix B UNIV J) $$ (i, j)", "also"], ["proof (state)\nthis:\n  submatrix (A * B) I J $$ (i, j) = (A * B) $$ (pick I i, pick J j)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (submatrix A I UNIV * submatrix B UNIV J);\n        j < dim_col (submatrix A I UNIV * submatrix B UNIV J)\\<rbrakk>\n       \\<Longrightarrow> submatrix (A * B) I J $$ (i, j) =\n                         (submatrix A I UNIV * submatrix B UNIV J) $$ (i, j)", "have \"... = Matrix.row A (pick I i) \\<bullet> col B (pick J j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A * B) $$ (pick I i, pick J j) =\n    Matrix.row A (pick I i) \\<bullet> col B (pick J j)", "by (rule index_mult_mat(1)[OF pi pj])"], ["proof (state)\nthis:\n  (A * B) $$ (pick I i, pick J j) =\n  Matrix.row A (pick I i) \\<bullet> col B (pick J j)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (submatrix A I UNIV * submatrix B UNIV J);\n        j < dim_col (submatrix A I UNIV * submatrix B UNIV J)\\<rbrakk>\n       \\<Longrightarrow> submatrix (A * B) I J $$ (i, j) =\n                         (submatrix A I UNIV * submatrix B UNIV J) $$ (i, j)", "also"], ["proof (state)\nthis:\n  (A * B) $$ (pick I i, pick J j) =\n  Matrix.row A (pick I i) \\<bullet> col B (pick J j)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (submatrix A I UNIV * submatrix B UNIV J);\n        j < dim_col (submatrix A I UNIV * submatrix B UNIV J)\\<rbrakk>\n       \\<Longrightarrow> submatrix (A * B) I J $$ (i, j) =\n                         (submatrix A I UNIV * submatrix B UNIV J) $$ (i, j)", "have \"... = Matrix.row (submatrix A I UNIV) i \\<bullet> col (submatrix B UNIV J) j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Matrix.row A (pick I i) \\<bullet> col B (pick J j) =\n    Matrix.row (submatrix A I UNIV) i \\<bullet> col (submatrix B UNIV J) j", "using row_rw col_rw"], ["proof (prove)\nusing this:\n  Matrix.row (submatrix A I UNIV) i = Matrix.row A (pick I i)\n  col (submatrix B UNIV J) j = col B (pick J j)\n\ngoal (1 subgoal):\n 1. Matrix.row A (pick I i) \\<bullet> col B (pick J j) =\n    Matrix.row (submatrix A I UNIV) i \\<bullet> col (submatrix B UNIV J) j", "by simp"], ["proof (state)\nthis:\n  Matrix.row A (pick I i) \\<bullet> col B (pick J j) =\n  Matrix.row (submatrix A I UNIV) i \\<bullet> col (submatrix B UNIV J) j\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (submatrix A I UNIV * submatrix B UNIV J);\n        j < dim_col (submatrix A I UNIV * submatrix B UNIV J)\\<rbrakk>\n       \\<Longrightarrow> submatrix (A * B) I J $$ (i, j) =\n                         (submatrix A I UNIV * submatrix B UNIV J) $$ (i, j)", "also"], ["proof (state)\nthis:\n  Matrix.row A (pick I i) \\<bullet> col B (pick J j) =\n  Matrix.row (submatrix A I UNIV) i \\<bullet> col (submatrix B UNIV J) j\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (submatrix A I UNIV * submatrix B UNIV J);\n        j < dim_col (submatrix A I UNIV * submatrix B UNIV J)\\<rbrakk>\n       \\<Longrightarrow> submatrix (A * B) I J $$ (i, j) =\n                         (submatrix A I UNIV * submatrix B UNIV J) $$ (i, j)", "have \"... = (?rhs) $$ (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Matrix.row (submatrix A I UNIV) i \\<bullet> col (submatrix B UNIV J) j =\n    (submatrix A I UNIV * submatrix B UNIV J) $$ (i, j)", "by (rule index_mult_mat[symmetric], insert i j, auto)"], ["proof (state)\nthis:\n  Matrix.row (submatrix A I UNIV) i \\<bullet> col (submatrix B UNIV J) j =\n  (submatrix A I UNIV * submatrix B UNIV J) $$ (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (submatrix A I UNIV * submatrix B UNIV J);\n        j < dim_col (submatrix A I UNIV * submatrix B UNIV J)\\<rbrakk>\n       \\<Longrightarrow> submatrix (A * B) I J $$ (i, j) =\n                         (submatrix A I UNIV * submatrix B UNIV J) $$ (i, j)", "finally"], ["proof (chain)\npicking this:\n  submatrix (A * B) I J $$ (i, j) =\n  (submatrix A I UNIV * submatrix B UNIV J) $$ (i, j)", "show \"?lhs $$ (i, j) = ?rhs $$ (i, j)\""], ["proof (prove)\nusing this:\n  submatrix (A * B) I J $$ (i, j) =\n  (submatrix A I UNIV * submatrix B UNIV J) $$ (i, j)\n\ngoal (1 subgoal):\n 1. submatrix (A * B) I J $$ (i, j) =\n    (submatrix A I UNIV * submatrix B UNIV J) $$ (i, j)", "."], ["proof (state)\nthis:\n  submatrix (A * B) I J $$ (i, j) =\n  (submatrix A I UNIV * submatrix B UNIV J) $$ (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma det_singleton:\n  assumes A: \"A \\<in> carrier_mat 1 1\"\n  shows \"det A = A $$ (0,0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det A = A $$ (0, 0)", "using A"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat 1 1\n\ngoal (1 subgoal):\n 1. Determinant.det A = A $$ (0, 0)", "unfolding carrier_mat_def Determinant.det_def"], ["proof (prove)\nusing this:\n  A \\<in> {m. dim_row m = 1 \\<and> dim_col m = 1}\n\ngoal (1 subgoal):\n 1. (if dim_row A = dim_col A\n     then \\<Sum>p | p permutes {0..<dim_row A}.\n            signof p * (\\<Prod>i = 0..<dim_row A. A $$ (i, p i))\n     else (0::'b)) =\n    A $$ (0, 0)", "by auto"], ["", "lemma submatrix_singleton_index:\n  assumes A: \"A \\<in> carrier_mat n m\"\n    and an: \"a < n\" and bm: \"b < m\"\n    shows \"submatrix A {a} {b} $$ (0,0) = A $$ (a,b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix A {a} {b} $$ (0, 0) = A $$ (a, b)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. submatrix A {a} {b} $$ (0, 0) = A $$ (a, b)", "have a: \"{i. i = a \\<and> i < dim_row A} = {a}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. i = a \\<and> i < dim_row A} = {a}", "using an A"], ["proof (prove)\nusing this:\n  a < n\n  A \\<in> carrier_mat n m\n\ngoal (1 subgoal):\n 1. {i. i = a \\<and> i < dim_row A} = {a}", "unfolding carrier_mat_def"], ["proof (prove)\nusing this:\n  a < n\n  A \\<in> {ma. dim_row ma = n \\<and> dim_col ma = m}\n\ngoal (1 subgoal):\n 1. {i. i = a \\<and> i < dim_row A} = {a}", "by auto"], ["proof (state)\nthis:\n  {i. i = a \\<and> i < dim_row A} = {a}\n\ngoal (1 subgoal):\n 1. submatrix A {a} {b} $$ (0, 0) = A $$ (a, b)", "have b: \"{i. i = b \\<and> i < dim_col A} = {b}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {i. i = b \\<and> i < dim_col A} = {b}", "using bm A"], ["proof (prove)\nusing this:\n  b < m\n  A \\<in> carrier_mat n m\n\ngoal (1 subgoal):\n 1. {i. i = b \\<and> i < dim_col A} = {b}", "unfolding carrier_mat_def"], ["proof (prove)\nusing this:\n  b < m\n  A \\<in> {ma. dim_row ma = n \\<and> dim_col ma = m}\n\ngoal (1 subgoal):\n 1. {i. i = b \\<and> i < dim_col A} = {b}", "by auto"], ["proof (state)\nthis:\n  {i. i = b \\<and> i < dim_col A} = {b}\n\ngoal (1 subgoal):\n 1. submatrix A {a} {b} $$ (0, 0) = A $$ (a, b)", "have \"submatrix A {a} {b} $$ (0,0) = A $$ (pick {a} 0,pick {b} 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. submatrix A {a} {b} $$ (0, 0) = A $$ (pick {a} 0, pick {b} 0)", "by (rule submatrix_index, insert a b, auto)"], ["proof (state)\nthis:\n  submatrix A {a} {b} $$ (0, 0) = A $$ (pick {a} 0, pick {b} 0)\n\ngoal (1 subgoal):\n 1. submatrix A {a} {b} $$ (0, 0) = A $$ (a, b)", "moreover"], ["proof (state)\nthis:\n  submatrix A {a} {b} $$ (0, 0) = A $$ (pick {a} 0, pick {b} 0)\n\ngoal (1 subgoal):\n 1. submatrix A {a} {b} $$ (0, 0) = A $$ (a, b)", "have \"pick {a} 0 = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pick {a} 0 = a", "by (auto, metis (full_types) LeastI)"], ["proof (state)\nthis:\n  pick {a} 0 = a\n\ngoal (1 subgoal):\n 1. submatrix A {a} {b} $$ (0, 0) = A $$ (a, b)", "moreover"], ["proof (state)\nthis:\n  pick {a} 0 = a\n\ngoal (1 subgoal):\n 1. submatrix A {a} {b} $$ (0, 0) = A $$ (a, b)", "have \"pick {b} 0 = b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pick {b} 0 = b", "by (auto, metis (full_types) LeastI)"], ["proof (state)\nthis:\n  pick {b} 0 = b\n\ngoal (1 subgoal):\n 1. submatrix A {a} {b} $$ (0, 0) = A $$ (a, b)", "ultimately"], ["proof (chain)\npicking this:\n  submatrix A {a} {b} $$ (0, 0) = A $$ (pick {a} 0, pick {b} 0)\n  pick {a} 0 = a\n  pick {b} 0 = b", "show ?thesis"], ["proof (prove)\nusing this:\n  submatrix A {a} {b} $$ (0, 0) = A $$ (pick {a} 0, pick {b} 0)\n  pick {a} 0 = a\n  pick {b} 0 = b\n\ngoal (1 subgoal):\n 1. submatrix A {a} {b} $$ (0, 0) = A $$ (a, b)", "by simp"], ["proof (state)\nthis:\n  submatrix A {a} {b} $$ (0, 0) = A $$ (a, b)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "lemma det_not_inj_on:\n  assumes not_inj_on: \"\\<not> inj_on f {0..<n}\"\n  shows \"det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) =\n    (0::'a)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) =\n    (0::'a)", "obtain i j where i: \"i<n\" and j: \"j<n\" and fi_fj: \"f i = f j\" and ij: \"i\\<noteq>j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        \\<lbrakk>i < n; j < n; f i = f j; i \\<noteq> j\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using not_inj_on"], ["proof (prove)\nusing this:\n  \\<not> inj_on f {0..<n}\n\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        \\<lbrakk>i < n; j < n; f i = f j; i \\<noteq> j\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding inj_on_def"], ["proof (prove)\nusing this:\n  \\<not> (\\<forall>x\\<in>{0..<n}.\n             \\<forall>y\\<in>{0..<n}. f x = f y \\<longrightarrow> x = y)\n\ngoal (1 subgoal):\n 1. (\\<And>i j.\n        \\<lbrakk>i < n; j < n; f i = f j; i \\<noteq> j\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  i < n\n  j < n\n  f i = f j\n  i \\<noteq> j\n\ngoal (1 subgoal):\n 1. Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) =\n    (0::'a)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) =\n    (0::'a)", "proof (rule det_identical_rows[OF _ ij i j])"], ["proof (state)\ngoal (2 subgoals):\n 1. mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i)) \\<in> carrier_mat n n\n 2. Matrix.row (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) i =\n    Matrix.row (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) j", "let ?B=\"(mat\\<^sub>r n n (\\<lambda>i. row B (f i)))\""], ["proof (state)\ngoal (2 subgoals):\n 1. mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i)) \\<in> carrier_mat n n\n 2. Matrix.row (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) i =\n    Matrix.row (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) j", "show \"row ?B i = row ?B j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Matrix.row (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) i =\n    Matrix.row (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) j", "proof (rule eq_vecI, auto)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < n \\<Longrightarrow>\n       Matrix.row (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) i $v\n       ia =\n       Matrix.row (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) j $v ia", "fix ia"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < n \\<Longrightarrow>\n       Matrix.row (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) i $v\n       ia =\n       Matrix.row (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) j $v ia", "assume ia: \"ia < n\""], ["proof (state)\nthis:\n  ia < n\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < n \\<Longrightarrow>\n       Matrix.row (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) i $v\n       ia =\n       Matrix.row (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) j $v ia", "have \"row ?B i $ ia = ?B $$ (i, ia)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Matrix.row (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) i $v ia =\n    mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i)) $$ (i, ia)", "by (rule index_row(1), insert i ia, auto)"], ["proof (state)\nthis:\n  Matrix.row (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) i $v ia =\n  mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i)) $$ (i, ia)\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < n \\<Longrightarrow>\n       Matrix.row (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) i $v\n       ia =\n       Matrix.row (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) j $v ia", "also"], ["proof (state)\nthis:\n  Matrix.row (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) i $v ia =\n  mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i)) $$ (i, ia)\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < n \\<Longrightarrow>\n       Matrix.row (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) i $v\n       ia =\n       Matrix.row (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) j $v ia", "have \"... = ?B $$ (j, ia)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i)) $$ (i, ia) =\n    mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i)) $$ (j, ia)", "by (simp add: fi_fj i ia j)"], ["proof (state)\nthis:\n  mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i)) $$ (i, ia) =\n  mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i)) $$ (j, ia)\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < n \\<Longrightarrow>\n       Matrix.row (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) i $v\n       ia =\n       Matrix.row (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) j $v ia", "also"], ["proof (state)\nthis:\n  mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i)) $$ (i, ia) =\n  mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i)) $$ (j, ia)\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < n \\<Longrightarrow>\n       Matrix.row (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) i $v\n       ia =\n       Matrix.row (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) j $v ia", "have \"... = row ?B j $ ia\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i)) $$ (j, ia) =\n    Matrix.row (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) j $v ia", "by (rule index_row(1)[symmetric], insert j ia, auto)"], ["proof (state)\nthis:\n  mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i)) $$ (j, ia) =\n  Matrix.row (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) j $v ia\n\ngoal (1 subgoal):\n 1. \\<And>ia.\n       ia < n \\<Longrightarrow>\n       Matrix.row (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) i $v\n       ia =\n       Matrix.row (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) j $v ia", "finally"], ["proof (chain)\npicking this:\n  Matrix.row (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) i $v ia =\n  Matrix.row (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) j $v ia", "show \"row ?B i $ ia = row (mat\\<^sub>r n n (\\<lambda>i. row B (f i))) j $ ia\""], ["proof (prove)\nusing this:\n  Matrix.row (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) i $v ia =\n  Matrix.row (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) j $v ia\n\ngoal (1 subgoal):\n 1. Matrix.row (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) i $v ia =\n    Matrix.row (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) j $v ia", "by simp"], ["proof (state)\nthis:\n  Matrix.row (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) i $v ia =\n  Matrix.row (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) j $v ia\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Matrix.row (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) i =\n  Matrix.row (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) j\n\ngoal (1 subgoal):\n 1. mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i)) \\<in> carrier_mat n n", "show \"mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i)) \\<in> carrier_mat n n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i)) \\<in> carrier_mat n n", "by auto"], ["proof (state)\nthis:\n  mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i)) \\<in> carrier_mat n n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Determinant.det (mat\\<^sub>r n n (\\<lambda>i. Matrix.row B (f i))) =\n  (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mat_row_transpose: \"(mat\\<^sub>r nr nc f)\\<^sup>T = mat nc nr (\\<lambda>(i,j). vec_index (f j) i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (mat\\<^sub>r nr nc f)\\<^sup>T =\n    Matrix.mat nc nr (\\<lambda>(i, j). f j $v i)", "by (rule eq_matI, auto)"], ["", "lemma obtain_inverse_matrix:\n  assumes A: \"A \\<in> carrier_mat n n\" and i: \"invertible_mat A\"\n  obtains B where \"inverts_mat A B\" and \"inverts_mat B A\" and \"B \\<in> carrier_mat n n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>B.\n        \\<lbrakk>inverts_mat A B; inverts_mat B A;\n         B \\<in> carrier_mat n n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<And>B.\n        \\<lbrakk>inverts_mat A B; inverts_mat B A;\n         B \\<in> carrier_mat n n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"(\\<exists>B. inverts_mat A B \\<and> inverts_mat B A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>B. inverts_mat A B \\<and> inverts_mat B A", "using i"], ["proof (prove)\nusing this:\n  invertible_mat A\n\ngoal (1 subgoal):\n 1. \\<exists>B. inverts_mat A B \\<and> inverts_mat B A", "unfolding invertible_mat_def"], ["proof (prove)\nusing this:\n  square_mat A \\<and> (\\<exists>B. inverts_mat A B \\<and> inverts_mat B A)\n\ngoal (1 subgoal):\n 1. \\<exists>B. inverts_mat A B \\<and> inverts_mat B A", "by auto"], ["proof (state)\nthis:\n  \\<exists>B. inverts_mat A B \\<and> inverts_mat B A\n\ngoal (1 subgoal):\n 1. (\\<And>B.\n        \\<lbrakk>inverts_mat A B; inverts_mat B A;\n         B \\<in> carrier_mat n n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "from this"], ["proof (chain)\npicking this:\n  \\<exists>B. inverts_mat A B \\<and> inverts_mat B A", "obtain B where AB: \"inverts_mat A B\" and BA: \"inverts_mat B A\""], ["proof (prove)\nusing this:\n  \\<exists>B. inverts_mat A B \\<and> inverts_mat B A\n\ngoal (1 subgoal):\n 1. (\\<And>B.\n        \\<lbrakk>inverts_mat A B; inverts_mat B A\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  inverts_mat A B\n  inverts_mat B A\n\ngoal (1 subgoal):\n 1. (\\<And>B.\n        \\<lbrakk>inverts_mat A B; inverts_mat B A;\n         B \\<in> carrier_mat n n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "moreover"], ["proof (state)\nthis:\n  inverts_mat A B\n  inverts_mat B A\n\ngoal (1 subgoal):\n 1. (\\<And>B.\n        \\<lbrakk>inverts_mat A B; inverts_mat B A;\n         B \\<in> carrier_mat n n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "have \"B \\<in> carrier_mat n n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<in> carrier_mat n n", "using A AB BA"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat n n\n  inverts_mat A B\n  inverts_mat B A\n\ngoal (1 subgoal):\n 1. B \\<in> carrier_mat n n", "unfolding carrier_mat_def inverts_mat_def"], ["proof (prove)\nusing this:\n  A \\<in> {m. dim_row m = n \\<and> dim_col m = n}\n  A * B = 1\\<^sub>m (dim_row A)\n  B * A = 1\\<^sub>m (dim_row B)\n\ngoal (1 subgoal):\n 1. B \\<in> {m. dim_row m = n \\<and> dim_col m = n}", "by (auto, metis index_mult_mat(3) index_one_mat(3))+"], ["proof (state)\nthis:\n  B \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. (\\<And>B.\n        \\<lbrakk>inverts_mat A B; inverts_mat B A;\n         B \\<in> carrier_mat n n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "ultimately"], ["proof (chain)\npicking this:\n  inverts_mat A B\n  inverts_mat B A\n  B \\<in> carrier_mat n n", "show ?thesis"], ["proof (prove)\nusing this:\n  inverts_mat A B\n  inverts_mat B A\n  B \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. thesis", "using that"], ["proof (prove)\nusing this:\n  inverts_mat A B\n  inverts_mat B A\n  B \\<in> carrier_mat n n\n  \\<lbrakk>inverts_mat A ?B; inverts_mat ?B A;\n   ?B \\<in> carrier_mat n n\\<rbrakk>\n  \\<Longrightarrow> thesis\n\ngoal (1 subgoal):\n 1. thesis", "by blast"], ["proof (state)\nthis:\n  thesis\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma invertible_mat_smult_mat:\n  fixes A :: \"'a::comm_ring_1 mat\"\n  assumes inv_A: \"invertible_mat A\" and k: \"k dvd 1\"\n  shows \"invertible_mat (k \\<cdot>\\<^sub>m A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible_mat (k \\<cdot>\\<^sub>m A)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. invertible_mat (k \\<cdot>\\<^sub>m A)", "obtain n where A: \"A \\<in> carrier_mat n n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n.\n        A \\<in> carrier_mat n n \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using inv_A"], ["proof (prove)\nusing this:\n  invertible_mat A\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        A \\<in> carrier_mat n n \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding invertible_mat_def"], ["proof (prove)\nusing this:\n  square_mat A \\<and> (\\<exists>B. inverts_mat A B \\<and> inverts_mat B A)\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        A \\<in> carrier_mat n n \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  A \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. invertible_mat (k \\<cdot>\\<^sub>m A)", "have det_dvd_1: \"Determinant.det A dvd 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det A dvd (1::'a)", "using inv_A invertible_iff_is_unit_JNF[OF A]"], ["proof (prove)\nusing this:\n  invertible_mat A\n  invertible_mat A = (Determinant.det A dvd (1::'a))\n\ngoal (1 subgoal):\n 1. Determinant.det A dvd (1::'a)", "by auto"], ["proof (state)\nthis:\n  Determinant.det A dvd (1::'a)\n\ngoal (1 subgoal):\n 1. invertible_mat (k \\<cdot>\\<^sub>m A)", "have \"Determinant.det (k \\<cdot>\\<^sub>m A) = k ^ dim_col A * Determinant.det A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (k \\<cdot>\\<^sub>m A) =\n    k ^ dim_col A * Determinant.det A", "by simp"], ["proof (state)\nthis:\n  Determinant.det (k \\<cdot>\\<^sub>m A) = k ^ dim_col A * Determinant.det A\n\ngoal (1 subgoal):\n 1. invertible_mat (k \\<cdot>\\<^sub>m A)", "also"], ["proof (state)\nthis:\n  Determinant.det (k \\<cdot>\\<^sub>m A) = k ^ dim_col A * Determinant.det A\n\ngoal (1 subgoal):\n 1. invertible_mat (k \\<cdot>\\<^sub>m A)", "have \"... dvd 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k ^ dim_col A * Determinant.det A dvd (1::'a)", "by (rule unit_prod, insert k det_dvd_1 dvd_power_same, force+)"], ["proof (state)\nthis:\n  k ^ dim_col A * Determinant.det A dvd (1::'a)\n\ngoal (1 subgoal):\n 1. invertible_mat (k \\<cdot>\\<^sub>m A)", "finally"], ["proof (chain)\npicking this:\n  Determinant.det (k \\<cdot>\\<^sub>m A) dvd (1::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  Determinant.det (k \\<cdot>\\<^sub>m A) dvd (1::'a)\n\ngoal (1 subgoal):\n 1. invertible_mat (k \\<cdot>\\<^sub>m A)", "using invertible_iff_is_unit_JNF"], ["proof (prove)\nusing this:\n  Determinant.det (k \\<cdot>\\<^sub>m A) dvd (1::'a)\n  ?A \\<in> carrier_mat ?n ?n \\<Longrightarrow>\n  invertible_mat ?A = (Determinant.det ?A dvd (1::?'a))\n\ngoal (1 subgoal):\n 1. invertible_mat (k \\<cdot>\\<^sub>m A)", "by (metis A smult_carrier_mat)"], ["proof (state)\nthis:\n  invertible_mat (k \\<cdot>\\<^sub>m A)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma invertible_mat_one[simp]: \"invertible_mat (1\\<^sub>m n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible_mat (1\\<^sub>m n)", "unfolding invertible_mat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. square_mat (1\\<^sub>m n) \\<and>\n    (\\<exists>B.\n        inverts_mat (1\\<^sub>m n) B \\<and> inverts_mat B (1\\<^sub>m n))", "using inverts_mat_def"], ["proof (prove)\nusing this:\n  inverts_mat ?A ?B \\<equiv> ?A * ?B = 1\\<^sub>m (dim_row ?A)\n\ngoal (1 subgoal):\n 1. square_mat (1\\<^sub>m n) \\<and>\n    (\\<exists>B.\n        inverts_mat (1\\<^sub>m n) B \\<and> inverts_mat B (1\\<^sub>m n))", "by fastforce"], ["", "lemma four_block_mat_dim0:\n  assumes A: \"A \\<in> carrier_mat n n\"\n  and B: \"B \\<in> carrier_mat n 0\"\n  and C: \"C \\<in> carrier_mat 0 n\"\n  and D: \"D \\<in> carrier_mat 0 0\"\nshows \"four_block_mat A B C D = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. four_block_mat A B C D = A", "unfolding four_block_mat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (let nra = dim_row A; nrd = dim_row D; nca = dim_col A; ncd = dim_col D\n     in Matrix.mat (nra + nrd) (nca + ncd)\n         (\\<lambda>(i, j).\n             if i < nra\n             then if j < nca then A $$ (i, j) else B $$ (i, j - nca)\n             else if j < nca then C $$ (i - nra, j)\n                  else D $$ (i - nra, j - nca))) =\n    A", "using assms"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat n n\n  B \\<in> carrier_mat n 0\n  C \\<in> carrier_mat 0 n\n  D \\<in> carrier_mat 0 0\n\ngoal (1 subgoal):\n 1. (let nra = dim_row A; nrd = dim_row D; nca = dim_col A; ncd = dim_col D\n     in Matrix.mat (nra + nrd) (nca + ncd)\n         (\\<lambda>(i, j).\n             if i < nra\n             then if j < nca then A $$ (i, j) else B $$ (i, j - nca)\n             else if j < nca then C $$ (i - nra, j)\n                  else D $$ (i - nra, j - nca))) =\n    A", "by auto"], ["", "lemma det_four_block_mat_lower_right_id:\n  assumes A: \"A \\<in> carrier_mat m m\"\nand B: \"B = 0\\<^sub>m m (n-m)\"\nand C: \"C = 0\\<^sub>m (n-m) m\"\nand D: \"D = 1\\<^sub>m (n-m)\"\nand \"n>m\"\nshows \"Determinant.det (four_block_mat A B C D) = Determinant.det A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (four_block_mat A B C D) = Determinant.det A", "using assms"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat m m\n  B = 0\\<^sub>m m (n - m)\n  C = 0\\<^sub>m (n - m) m\n  D = 1\\<^sub>m (n - m)\n  m < n\n\ngoal (1 subgoal):\n 1. Determinant.det (four_block_mat A B C D) = Determinant.det A", "proof (induct n arbitrary: A B C D)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>A B C D.\n       \\<lbrakk>A \\<in> carrier_mat m m; B = 0\\<^sub>m m (0 - m);\n        C = 0\\<^sub>m (0 - m) m; D = 1\\<^sub>m (0 - m); m < 0\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (four_block_mat A B C D) =\n                         Determinant.det A\n 2. \\<And>n A B C D.\n       \\<lbrakk>\\<And>A B C D.\n                   \\<lbrakk>A \\<in> carrier_mat m m;\n                    B = 0\\<^sub>m m (n - m); C = 0\\<^sub>m (n - m) m;\n                    D = 1\\<^sub>m (n - m); m < n\\<rbrakk>\n                   \\<Longrightarrow> Determinant.det\n(four_block_mat A B C D) =\n                                     Determinant.det A;\n        A \\<in> carrier_mat m m; B = 0\\<^sub>m m (Suc n - m);\n        C = 0\\<^sub>m (Suc n - m) m; D = 1\\<^sub>m (Suc n - m);\n        m < Suc n\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (four_block_mat A B C D) =\n                         Determinant.det A", "case 0"], ["proof (state)\nthis:\n  A \\<in> carrier_mat m m\n  B = 0\\<^sub>m m (0 - m)\n  C = 0\\<^sub>m (0 - m) m\n  D = 1\\<^sub>m (0 - m)\n  m < 0\n\ngoal (2 subgoals):\n 1. \\<And>A B C D.\n       \\<lbrakk>A \\<in> carrier_mat m m; B = 0\\<^sub>m m (0 - m);\n        C = 0\\<^sub>m (0 - m) m; D = 1\\<^sub>m (0 - m); m < 0\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (four_block_mat A B C D) =\n                         Determinant.det A\n 2. \\<And>n A B C D.\n       \\<lbrakk>\\<And>A B C D.\n                   \\<lbrakk>A \\<in> carrier_mat m m;\n                    B = 0\\<^sub>m m (n - m); C = 0\\<^sub>m (n - m) m;\n                    D = 1\\<^sub>m (n - m); m < n\\<rbrakk>\n                   \\<Longrightarrow> Determinant.det\n(four_block_mat A B C D) =\n                                     Determinant.det A;\n        A \\<in> carrier_mat m m; B = 0\\<^sub>m m (Suc n - m);\n        C = 0\\<^sub>m (Suc n - m) m; D = 1\\<^sub>m (Suc n - m);\n        m < Suc n\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (four_block_mat A B C D) =\n                         Determinant.det A", "then"], ["proof (chain)\npicking this:\n  A \\<in> carrier_mat m m\n  B = 0\\<^sub>m m (0 - m)\n  C = 0\\<^sub>m (0 - m) m\n  D = 1\\<^sub>m (0 - m)\n  m < 0", "show ?case"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat m m\n  B = 0\\<^sub>m m (0 - m)\n  C = 0\\<^sub>m (0 - m) m\n  D = 1\\<^sub>m (0 - m)\n  m < 0\n\ngoal (1 subgoal):\n 1. Determinant.det (four_block_mat A B C D) = Determinant.det A", "by auto"], ["proof (state)\nthis:\n  Determinant.det (four_block_mat A B C D) = Determinant.det A\n\ngoal (1 subgoal):\n 1. \\<And>n A B C D.\n       \\<lbrakk>\\<And>A B C D.\n                   \\<lbrakk>A \\<in> carrier_mat m m;\n                    B = 0\\<^sub>m m (n - m); C = 0\\<^sub>m (n - m) m;\n                    D = 1\\<^sub>m (n - m); m < n\\<rbrakk>\n                   \\<Longrightarrow> Determinant.det\n(four_block_mat A B C D) =\n                                     Determinant.det A;\n        A \\<in> carrier_mat m m; B = 0\\<^sub>m m (Suc n - m);\n        C = 0\\<^sub>m (Suc n - m) m; D = 1\\<^sub>m (Suc n - m);\n        m < Suc n\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (four_block_mat A B C D) =\n                         Determinant.det A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n A B C D.\n       \\<lbrakk>\\<And>A B C D.\n                   \\<lbrakk>A \\<in> carrier_mat m m;\n                    B = 0\\<^sub>m m (n - m); C = 0\\<^sub>m (n - m) m;\n                    D = 1\\<^sub>m (n - m); m < n\\<rbrakk>\n                   \\<Longrightarrow> Determinant.det\n(four_block_mat A B C D) =\n                                     Determinant.det A;\n        A \\<in> carrier_mat m m; B = 0\\<^sub>m m (Suc n - m);\n        C = 0\\<^sub>m (Suc n - m) m; D = 1\\<^sub>m (Suc n - m);\n        m < Suc n\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (four_block_mat A B C D) =\n                         Determinant.det A", "case (Suc n)"], ["proof (state)\nthis:\n  \\<lbrakk>?A \\<in> carrier_mat m m; ?B = 0\\<^sub>m m (n - m);\n   ?C = 0\\<^sub>m (n - m) m; ?D = 1\\<^sub>m (n - m); m < n\\<rbrakk>\n  \\<Longrightarrow> Determinant.det (four_block_mat ?A ?B ?C ?D) =\n                    Determinant.det ?A\n  A \\<in> carrier_mat m m\n  B = 0\\<^sub>m m (Suc n - m)\n  C = 0\\<^sub>m (Suc n - m) m\n  D = 1\\<^sub>m (Suc n - m)\n  m < Suc n\n\ngoal (1 subgoal):\n 1. \\<And>n A B C D.\n       \\<lbrakk>\\<And>A B C D.\n                   \\<lbrakk>A \\<in> carrier_mat m m;\n                    B = 0\\<^sub>m m (n - m); C = 0\\<^sub>m (n - m) m;\n                    D = 1\\<^sub>m (n - m); m < n\\<rbrakk>\n                   \\<Longrightarrow> Determinant.det\n(four_block_mat A B C D) =\n                                     Determinant.det A;\n        A \\<in> carrier_mat m m; B = 0\\<^sub>m m (Suc n - m);\n        C = 0\\<^sub>m (Suc n - m) m; D = 1\\<^sub>m (Suc n - m);\n        m < Suc n\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (four_block_mat A B C D) =\n                         Determinant.det A", "let ?block = \"(four_block_mat A B C D)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n A B C D.\n       \\<lbrakk>\\<And>A B C D.\n                   \\<lbrakk>A \\<in> carrier_mat m m;\n                    B = 0\\<^sub>m m (n - m); C = 0\\<^sub>m (n - m) m;\n                    D = 1\\<^sub>m (n - m); m < n\\<rbrakk>\n                   \\<Longrightarrow> Determinant.det\n(four_block_mat A B C D) =\n                                     Determinant.det A;\n        A \\<in> carrier_mat m m; B = 0\\<^sub>m m (Suc n - m);\n        C = 0\\<^sub>m (Suc n - m) m; D = 1\\<^sub>m (Suc n - m);\n        m < Suc n\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (four_block_mat A B C D) =\n                         Determinant.det A", "let ?B = \"Matrix.mat m (n-m) (\\<lambda>(i,j). 0)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n A B C D.\n       \\<lbrakk>\\<And>A B C D.\n                   \\<lbrakk>A \\<in> carrier_mat m m;\n                    B = 0\\<^sub>m m (n - m); C = 0\\<^sub>m (n - m) m;\n                    D = 1\\<^sub>m (n - m); m < n\\<rbrakk>\n                   \\<Longrightarrow> Determinant.det\n(four_block_mat A B C D) =\n                                     Determinant.det A;\n        A \\<in> carrier_mat m m; B = 0\\<^sub>m m (Suc n - m);\n        C = 0\\<^sub>m (Suc n - m) m; D = 1\\<^sub>m (Suc n - m);\n        m < Suc n\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (four_block_mat A B C D) =\n                         Determinant.det A", "let ?C = \"Matrix.mat (n-m) m (\\<lambda>(i,j). 0)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n A B C D.\n       \\<lbrakk>\\<And>A B C D.\n                   \\<lbrakk>A \\<in> carrier_mat m m;\n                    B = 0\\<^sub>m m (n - m); C = 0\\<^sub>m (n - m) m;\n                    D = 1\\<^sub>m (n - m); m < n\\<rbrakk>\n                   \\<Longrightarrow> Determinant.det\n(four_block_mat A B C D) =\n                                     Determinant.det A;\n        A \\<in> carrier_mat m m; B = 0\\<^sub>m m (Suc n - m);\n        C = 0\\<^sub>m (Suc n - m) m; D = 1\\<^sub>m (Suc n - m);\n        m < Suc n\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (four_block_mat A B C D) =\n                         Determinant.det A", "let ?D = \"1\\<^sub>m (n-m)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n A B C D.\n       \\<lbrakk>\\<And>A B C D.\n                   \\<lbrakk>A \\<in> carrier_mat m m;\n                    B = 0\\<^sub>m m (n - m); C = 0\\<^sub>m (n - m) m;\n                    D = 1\\<^sub>m (n - m); m < n\\<rbrakk>\n                   \\<Longrightarrow> Determinant.det\n(four_block_mat A B C D) =\n                                     Determinant.det A;\n        A \\<in> carrier_mat m m; B = 0\\<^sub>m m (Suc n - m);\n        C = 0\\<^sub>m (Suc n - m) m; D = 1\\<^sub>m (Suc n - m);\n        m < Suc n\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (four_block_mat A B C D) =\n                         Determinant.det A", "have mat_eq: \"(mat_delete ?block n n) = four_block_mat A ?B ?C ?D\" (is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. mat_delete (four_block_mat A B C D) n n =\n    four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n     (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a)) (1\\<^sub>m (n - m))", "proof (rule eq_matI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (four_block_mat A\n                       (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n                       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n                       (1\\<^sub>m (n - m)));\n        j < dim_col\n             (four_block_mat A\n               (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n               (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n               (1\\<^sub>m (n - m)))\\<rbrakk>\n       \\<Longrightarrow> mat_delete (four_block_mat A B C D) n n $$ (i, j) =\n                         four_block_mat A\n                          (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n                          (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n                          (1\\<^sub>m (n - m)) $$\n                         (i, j)\n 2. dim_row (mat_delete (four_block_mat A B C D) n n) =\n    dim_row\n     (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a)) (1\\<^sub>m (n - m)))\n 3. dim_col (mat_delete (four_block_mat A B C D) n n) =\n    dim_col\n     (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a)) (1\\<^sub>m (n - m)))", "fix i j"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (four_block_mat A\n                       (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n                       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n                       (1\\<^sub>m (n - m)));\n        j < dim_col\n             (four_block_mat A\n               (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n               (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n               (1\\<^sub>m (n - m)))\\<rbrakk>\n       \\<Longrightarrow> mat_delete (four_block_mat A B C D) n n $$ (i, j) =\n                         four_block_mat A\n                          (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n                          (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n                          (1\\<^sub>m (n - m)) $$\n                         (i, j)\n 2. dim_row (mat_delete (four_block_mat A B C D) n n) =\n    dim_row\n     (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a)) (1\\<^sub>m (n - m)))\n 3. dim_col (mat_delete (four_block_mat A B C D) n n) =\n    dim_col\n     (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a)) (1\\<^sub>m (n - m)))", "assume i: \"i < dim_row (four_block_mat A ?B ?C ?D)\"\n      and j: \"j < dim_col (four_block_mat A ?B ?C ?D)\""], ["proof (state)\nthis:\n  i < dim_row\n       (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n         (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n         (1\\<^sub>m (n - m)))\n  j < dim_col\n       (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n         (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n         (1\\<^sub>m (n - m)))\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (four_block_mat A\n                       (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n                       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n                       (1\\<^sub>m (n - m)));\n        j < dim_col\n             (four_block_mat A\n               (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n               (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n               (1\\<^sub>m (n - m)))\\<rbrakk>\n       \\<Longrightarrow> mat_delete (four_block_mat A B C D) n n $$ (i, j) =\n                         four_block_mat A\n                          (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n                          (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n                          (1\\<^sub>m (n - m)) $$\n                         (i, j)\n 2. dim_row (mat_delete (four_block_mat A B C D) n n) =\n    dim_row\n     (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a)) (1\\<^sub>m (n - m)))\n 3. dim_col (mat_delete (four_block_mat A B C D) n n) =\n    dim_col\n     (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a)) (1\\<^sub>m (n - m)))", "let ?f = \" (if i < dim_row A then if j < dim_col A then A $$ (i, j) else B $$ (i, j - dim_col A)\n     else if j < dim_col A then C $$ (i - dim_row A, j) else D $$ (i - dim_row A, j - dim_col A))\""], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (four_block_mat A\n                       (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n                       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n                       (1\\<^sub>m (n - m)));\n        j < dim_col\n             (four_block_mat A\n               (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n               (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n               (1\\<^sub>m (n - m)))\\<rbrakk>\n       \\<Longrightarrow> mat_delete (four_block_mat A B C D) n n $$ (i, j) =\n                         four_block_mat A\n                          (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n                          (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n                          (1\\<^sub>m (n - m)) $$\n                         (i, j)\n 2. dim_row (mat_delete (four_block_mat A B C D) n n) =\n    dim_row\n     (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a)) (1\\<^sub>m (n - m)))\n 3. dim_col (mat_delete (four_block_mat A B C D) n n) =\n    dim_col\n     (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a)) (1\\<^sub>m (n - m)))", "let ?g = \"(if i < dim_row A then if j < dim_col A then A $$ (i, j) else ?B $$ (i, j - dim_col A)\n     else if j < dim_col A then ?C $$ (i - dim_row A, j) else ?D $$ (i - dim_row A, j - dim_col A))\""], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (four_block_mat A\n                       (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n                       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n                       (1\\<^sub>m (n - m)));\n        j < dim_col\n             (four_block_mat A\n               (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n               (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n               (1\\<^sub>m (n - m)))\\<rbrakk>\n       \\<Longrightarrow> mat_delete (four_block_mat A B C D) n n $$ (i, j) =\n                         four_block_mat A\n                          (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n                          (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n                          (1\\<^sub>m (n - m)) $$\n                         (i, j)\n 2. dim_row (mat_delete (four_block_mat A B C D) n n) =\n    dim_row\n     (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a)) (1\\<^sub>m (n - m)))\n 3. dim_col (mat_delete (four_block_mat A B C D) n n) =\n    dim_col\n     (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a)) (1\\<^sub>m (n - m)))", "have \"(mat_delete ?block n n) $$ (i,j) = ?block $$ (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mat_delete (four_block_mat A B C D) n n $$ (i, j) =\n    four_block_mat A B C D $$ (i, j)", "using i j Suc.prems"], ["proof (prove)\nusing this:\n  i < dim_row\n       (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n         (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n         (1\\<^sub>m (n - m)))\n  j < dim_col\n       (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n         (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n         (1\\<^sub>m (n - m)))\n  A \\<in> carrier_mat m m\n  B = 0\\<^sub>m m (Suc n - m)\n  C = 0\\<^sub>m (Suc n - m) m\n  D = 1\\<^sub>m (Suc n - m)\n  m < Suc n\n\ngoal (1 subgoal):\n 1. mat_delete (four_block_mat A B C D) n n $$ (i, j) =\n    four_block_mat A B C D $$ (i, j)", "unfolding mat_delete_def"], ["proof (prove)\nusing this:\n  i < dim_row\n       (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n         (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n         (1\\<^sub>m (n - m)))\n  j < dim_col\n       (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n         (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n         (1\\<^sub>m (n - m)))\n  A \\<in> carrier_mat m m\n  B = 0\\<^sub>m m (Suc n - m)\n  C = 0\\<^sub>m (Suc n - m) m\n  D = 1\\<^sub>m (Suc n - m)\n  m < Suc n\n\ngoal (1 subgoal):\n 1. Matrix.mat (dim_row (four_block_mat A B C D) - 1)\n     (dim_col (four_block_mat A B C D) - 1)\n     (\\<lambda>(i', j').\n         four_block_mat A B C D $$\n         (if i' < n then i' else Suc i', if j' < n then j' else Suc j')) $$\n    (i, j) =\n    four_block_mat A B C D $$ (i, j)", "by auto"], ["proof (state)\nthis:\n  mat_delete (four_block_mat A B C D) n n $$ (i, j) =\n  four_block_mat A B C D $$ (i, j)\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (four_block_mat A\n                       (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n                       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n                       (1\\<^sub>m (n - m)));\n        j < dim_col\n             (four_block_mat A\n               (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n               (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n               (1\\<^sub>m (n - m)))\\<rbrakk>\n       \\<Longrightarrow> mat_delete (four_block_mat A B C D) n n $$ (i, j) =\n                         four_block_mat A\n                          (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n                          (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n                          (1\\<^sub>m (n - m)) $$\n                         (i, j)\n 2. dim_row (mat_delete (four_block_mat A B C D) n n) =\n    dim_row\n     (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a)) (1\\<^sub>m (n - m)))\n 3. dim_col (mat_delete (four_block_mat A B C D) n n) =\n    dim_col\n     (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a)) (1\\<^sub>m (n - m)))", "also"], ["proof (state)\nthis:\n  mat_delete (four_block_mat A B C D) n n $$ (i, j) =\n  four_block_mat A B C D $$ (i, j)\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (four_block_mat A\n                       (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n                       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n                       (1\\<^sub>m (n - m)));\n        j < dim_col\n             (four_block_mat A\n               (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n               (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n               (1\\<^sub>m (n - m)))\\<rbrakk>\n       \\<Longrightarrow> mat_delete (four_block_mat A B C D) n n $$ (i, j) =\n                         four_block_mat A\n                          (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n                          (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n                          (1\\<^sub>m (n - m)) $$\n                         (i, j)\n 2. dim_row (mat_delete (four_block_mat A B C D) n n) =\n    dim_row\n     (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a)) (1\\<^sub>m (n - m)))\n 3. dim_col (mat_delete (four_block_mat A B C D) n n) =\n    dim_col\n     (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a)) (1\\<^sub>m (n - m)))", "have \"... = ?f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. four_block_mat A B C D $$ (i, j) =\n    (if i < dim_row A\n     then if j < dim_col A then A $$ (i, j) else B $$ (i, j - dim_col A)\n     else if j < dim_col A then C $$ (i - dim_row A, j)\n          else D $$ (i - dim_row A, j - dim_col A))", "by (rule index_mat_four_block, insert Suc.prems i j, auto)"], ["proof (state)\nthis:\n  four_block_mat A B C D $$ (i, j) =\n  (if i < dim_row A\n   then if j < dim_col A then A $$ (i, j) else B $$ (i, j - dim_col A)\n   else if j < dim_col A then C $$ (i - dim_row A, j)\n        else D $$ (i - dim_row A, j - dim_col A))\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (four_block_mat A\n                       (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n                       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n                       (1\\<^sub>m (n - m)));\n        j < dim_col\n             (four_block_mat A\n               (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n               (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n               (1\\<^sub>m (n - m)))\\<rbrakk>\n       \\<Longrightarrow> mat_delete (four_block_mat A B C D) n n $$ (i, j) =\n                         four_block_mat A\n                          (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n                          (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n                          (1\\<^sub>m (n - m)) $$\n                         (i, j)\n 2. dim_row (mat_delete (four_block_mat A B C D) n n) =\n    dim_row\n     (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a)) (1\\<^sub>m (n - m)))\n 3. dim_col (mat_delete (four_block_mat A B C D) n n) =\n    dim_col\n     (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a)) (1\\<^sub>m (n - m)))", "also"], ["proof (state)\nthis:\n  four_block_mat A B C D $$ (i, j) =\n  (if i < dim_row A\n   then if j < dim_col A then A $$ (i, j) else B $$ (i, j - dim_col A)\n   else if j < dim_col A then C $$ (i - dim_row A, j)\n        else D $$ (i - dim_row A, j - dim_col A))\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (four_block_mat A\n                       (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n                       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n                       (1\\<^sub>m (n - m)));\n        j < dim_col\n             (four_block_mat A\n               (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n               (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n               (1\\<^sub>m (n - m)))\\<rbrakk>\n       \\<Longrightarrow> mat_delete (four_block_mat A B C D) n n $$ (i, j) =\n                         four_block_mat A\n                          (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n                          (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n                          (1\\<^sub>m (n - m)) $$\n                         (i, j)\n 2. dim_row (mat_delete (four_block_mat A B C D) n n) =\n    dim_row\n     (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a)) (1\\<^sub>m (n - m)))\n 3. dim_col (mat_delete (four_block_mat A B C D) n n) =\n    dim_col\n     (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a)) (1\\<^sub>m (n - m)))", "have \"... = ?g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (if i < dim_row A\n     then if j < dim_col A then A $$ (i, j) else B $$ (i, j - dim_col A)\n     else if j < dim_col A then C $$ (i - dim_row A, j)\n          else D $$ (i - dim_row A, j - dim_col A)) =\n    (if i < dim_row A\n     then if j < dim_col A then A $$ (i, j)\n          else Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a) $$\n               (i, j - dim_col A)\n     else if j < dim_col A\n          then Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a) $$\n               (i - dim_row A, j)\n          else 1\\<^sub>m (n - m) $$ (i - dim_row A, j - dim_col A))", "using i j Suc.prems"], ["proof (prove)\nusing this:\n  i < dim_row\n       (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n         (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n         (1\\<^sub>m (n - m)))\n  j < dim_col\n       (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n         (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n         (1\\<^sub>m (n - m)))\n  A \\<in> carrier_mat m m\n  B = 0\\<^sub>m m (Suc n - m)\n  C = 0\\<^sub>m (Suc n - m) m\n  D = 1\\<^sub>m (Suc n - m)\n  m < Suc n\n\ngoal (1 subgoal):\n 1. (if i < dim_row A\n     then if j < dim_col A then A $$ (i, j) else B $$ (i, j - dim_col A)\n     else if j < dim_col A then C $$ (i - dim_row A, j)\n          else D $$ (i - dim_row A, j - dim_col A)) =\n    (if i < dim_row A\n     then if j < dim_col A then A $$ (i, j)\n          else Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a) $$\n               (i, j - dim_col A)\n     else if j < dim_col A\n          then Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a) $$\n               (i - dim_row A, j)\n          else 1\\<^sub>m (n - m) $$ (i - dim_row A, j - dim_col A))", "by auto"], ["proof (state)\nthis:\n  (if i < dim_row A\n   then if j < dim_col A then A $$ (i, j) else B $$ (i, j - dim_col A)\n   else if j < dim_col A then C $$ (i - dim_row A, j)\n        else D $$ (i - dim_row A, j - dim_col A)) =\n  (if i < dim_row A\n   then if j < dim_col A then A $$ (i, j)\n        else Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a) $$\n             (i, j - dim_col A)\n   else if j < dim_col A\n        then Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a) $$\n             (i - dim_row A, j)\n        else 1\\<^sub>m (n - m) $$ (i - dim_row A, j - dim_col A))\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (four_block_mat A\n                       (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n                       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n                       (1\\<^sub>m (n - m)));\n        j < dim_col\n             (four_block_mat A\n               (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n               (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n               (1\\<^sub>m (n - m)))\\<rbrakk>\n       \\<Longrightarrow> mat_delete (four_block_mat A B C D) n n $$ (i, j) =\n                         four_block_mat A\n                          (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n                          (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n                          (1\\<^sub>m (n - m)) $$\n                         (i, j)\n 2. dim_row (mat_delete (four_block_mat A B C D) n n) =\n    dim_row\n     (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a)) (1\\<^sub>m (n - m)))\n 3. dim_col (mat_delete (four_block_mat A B C D) n n) =\n    dim_col\n     (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a)) (1\\<^sub>m (n - m)))", "also"], ["proof (state)\nthis:\n  (if i < dim_row A\n   then if j < dim_col A then A $$ (i, j) else B $$ (i, j - dim_col A)\n   else if j < dim_col A then C $$ (i - dim_row A, j)\n        else D $$ (i - dim_row A, j - dim_col A)) =\n  (if i < dim_row A\n   then if j < dim_col A then A $$ (i, j)\n        else Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a) $$\n             (i, j - dim_col A)\n   else if j < dim_col A\n        then Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a) $$\n             (i - dim_row A, j)\n        else 1\\<^sub>m (n - m) $$ (i - dim_row A, j - dim_col A))\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (four_block_mat A\n                       (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n                       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n                       (1\\<^sub>m (n - m)));\n        j < dim_col\n             (four_block_mat A\n               (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n               (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n               (1\\<^sub>m (n - m)))\\<rbrakk>\n       \\<Longrightarrow> mat_delete (four_block_mat A B C D) n n $$ (i, j) =\n                         four_block_mat A\n                          (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n                          (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n                          (1\\<^sub>m (n - m)) $$\n                         (i, j)\n 2. dim_row (mat_delete (four_block_mat A B C D) n n) =\n    dim_row\n     (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a)) (1\\<^sub>m (n - m)))\n 3. dim_col (mat_delete (four_block_mat A B C D) n n) =\n    dim_col\n     (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a)) (1\\<^sub>m (n - m)))", "have \"... = four_block_mat A ?B ?C ?D $$ (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (if i < dim_row A\n     then if j < dim_col A then A $$ (i, j)\n          else Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a) $$\n               (i, j - dim_col A)\n     else if j < dim_col A\n          then Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a) $$\n               (i - dim_row A, j)\n          else 1\\<^sub>m (n - m) $$ (i - dim_row A, j - dim_col A)) =\n    four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n     (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a)) (1\\<^sub>m (n - m)) $$\n    (i, j)", "by (rule index_mat_four_block[symmetric], insert Suc.prems i j, auto)"], ["proof (state)\nthis:\n  (if i < dim_row A\n   then if j < dim_col A then A $$ (i, j)\n        else Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a) $$\n             (i, j - dim_col A)\n   else if j < dim_col A\n        then Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a) $$\n             (i - dim_row A, j)\n        else 1\\<^sub>m (n - m) $$ (i - dim_row A, j - dim_col A)) =\n  four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n   (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a)) (1\\<^sub>m (n - m)) $$\n  (i, j)\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (four_block_mat A\n                       (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n                       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n                       (1\\<^sub>m (n - m)));\n        j < dim_col\n             (four_block_mat A\n               (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n               (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n               (1\\<^sub>m (n - m)))\\<rbrakk>\n       \\<Longrightarrow> mat_delete (four_block_mat A B C D) n n $$ (i, j) =\n                         four_block_mat A\n                          (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n                          (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n                          (1\\<^sub>m (n - m)) $$\n                         (i, j)\n 2. dim_row (mat_delete (four_block_mat A B C D) n n) =\n    dim_row\n     (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a)) (1\\<^sub>m (n - m)))\n 3. dim_col (mat_delete (four_block_mat A B C D) n n) =\n    dim_col\n     (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a)) (1\\<^sub>m (n - m)))", "finally"], ["proof (chain)\npicking this:\n  mat_delete (four_block_mat A B C D) n n $$ (i, j) =\n  four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n   (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a)) (1\\<^sub>m (n - m)) $$\n  (i, j)", "show \"?lhs $$ (i,j) = ?rhs $$ (i,j)\""], ["proof (prove)\nusing this:\n  mat_delete (four_block_mat A B C D) n n $$ (i, j) =\n  four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n   (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a)) (1\\<^sub>m (n - m)) $$\n  (i, j)\n\ngoal (1 subgoal):\n 1. mat_delete (four_block_mat A B C D) n n $$ (i, j) =\n    four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n     (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a)) (1\\<^sub>m (n - m)) $$\n    (i, j)", "."], ["proof (state)\nthis:\n  mat_delete (four_block_mat A B C D) n n $$ (i, j) =\n  four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n   (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a)) (1\\<^sub>m (n - m)) $$\n  (i, j)\n\ngoal (2 subgoals):\n 1. dim_row (mat_delete (four_block_mat A B C D) n n) =\n    dim_row\n     (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a)) (1\\<^sub>m (n - m)))\n 2. dim_col (mat_delete (four_block_mat A B C D) n n) =\n    dim_col\n     (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a)) (1\\<^sub>m (n - m)))", "qed (insert Suc.prems, auto)"], ["proof (state)\nthis:\n  mat_delete (four_block_mat A B C D) n n =\n  four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n   (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a)) (1\\<^sub>m (n - m))\n\ngoal (1 subgoal):\n 1. \\<And>n A B C D.\n       \\<lbrakk>\\<And>A B C D.\n                   \\<lbrakk>A \\<in> carrier_mat m m;\n                    B = 0\\<^sub>m m (n - m); C = 0\\<^sub>m (n - m) m;\n                    D = 1\\<^sub>m (n - m); m < n\\<rbrakk>\n                   \\<Longrightarrow> Determinant.det\n(four_block_mat A B C D) =\n                                     Determinant.det A;\n        A \\<in> carrier_mat m m; B = 0\\<^sub>m m (Suc n - m);\n        C = 0\\<^sub>m (Suc n - m) m; D = 1\\<^sub>m (Suc n - m);\n        m < Suc n\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (four_block_mat A B C D) =\n                         Determinant.det A", "have nn_1: \"?block $$ (n, n) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. four_block_mat A B C D $$ (n, n) = (1::'a)", "using Suc.prems"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat m m\n  B = 0\\<^sub>m m (Suc n - m)\n  C = 0\\<^sub>m (Suc n - m) m\n  D = 1\\<^sub>m (Suc n - m)\n  m < Suc n\n\ngoal (1 subgoal):\n 1. four_block_mat A B C D $$ (n, n) = (1::'a)", "by auto"], ["proof (state)\nthis:\n  four_block_mat A B C D $$ (n, n) = (1::'a)\n\ngoal (1 subgoal):\n 1. \\<And>n A B C D.\n       \\<lbrakk>\\<And>A B C D.\n                   \\<lbrakk>A \\<in> carrier_mat m m;\n                    B = 0\\<^sub>m m (n - m); C = 0\\<^sub>m (n - m) m;\n                    D = 1\\<^sub>m (n - m); m < n\\<rbrakk>\n                   \\<Longrightarrow> Determinant.det\n(four_block_mat A B C D) =\n                                     Determinant.det A;\n        A \\<in> carrier_mat m m; B = 0\\<^sub>m m (Suc n - m);\n        C = 0\\<^sub>m (Suc n - m) m; D = 1\\<^sub>m (Suc n - m);\n        m < Suc n\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (four_block_mat A B C D) =\n                         Determinant.det A", "have rw0: \"(\\<Sum>i<n. ?block $$ (i,n) * Determinant.cofactor ?block i n) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<n.\n        four_block_mat A B C D $$ (i, n) *\n        Determinant.cofactor (four_block_mat A B C D) i n) =\n    (0::'a)", "proof (rule sum.neutral, rule)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {..<n} \\<Longrightarrow>\n       four_block_mat A B C D $$ (x, n) *\n       Determinant.cofactor (four_block_mat A B C D) x n =\n       (0::'a)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {..<n} \\<Longrightarrow>\n       four_block_mat A B C D $$ (x, n) *\n       Determinant.cofactor (four_block_mat A B C D) x n =\n       (0::'a)", "assume x: \"x \\<in> {..<n}\""], ["proof (state)\nthis:\n  x \\<in> {..<n}\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {..<n} \\<Longrightarrow>\n       four_block_mat A B C D $$ (x, n) *\n       Determinant.cofactor (four_block_mat A B C D) x n =\n       (0::'a)", "have block_index: \"?block $$ (x,n) = (if x < dim_row A then if n < dim_col A then A $$ (x, n)\n      else B $$ (x, n - dim_col A) else if n < dim_col A then C $$ (x - dim_row A, n)\n      else D $$ (x - dim_row A, n - dim_col A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. four_block_mat A B C D $$ (x, n) =\n    (if x < dim_row A\n     then if n < dim_col A then A $$ (x, n) else B $$ (x, n - dim_col A)\n     else if n < dim_col A then C $$ (x - dim_row A, n)\n          else D $$ (x - dim_row A, n - dim_col A))", "by (rule index_mat_four_block, insert Suc.prems x, auto)"], ["proof (state)\nthis:\n  four_block_mat A B C D $$ (x, n) =\n  (if x < dim_row A\n   then if n < dim_col A then A $$ (x, n) else B $$ (x, n - dim_col A)\n   else if n < dim_col A then C $$ (x - dim_row A, n)\n        else D $$ (x - dim_row A, n - dim_col A))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {..<n} \\<Longrightarrow>\n       four_block_mat A B C D $$ (x, n) *\n       Determinant.cofactor (four_block_mat A B C D) x n =\n       (0::'a)", "have \"four_block_mat A B C D $$ (x,n) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. four_block_mat A B C D $$ (x, n) = (0::'a)", "using x Suc.prems"], ["proof (prove)\nusing this:\n  x \\<in> {..<n}\n  A \\<in> carrier_mat m m\n  B = 0\\<^sub>m m (Suc n - m)\n  C = 0\\<^sub>m (Suc n - m) m\n  D = 1\\<^sub>m (Suc n - m)\n  m < Suc n\n\ngoal (1 subgoal):\n 1. four_block_mat A B C D $$ (x, n) = (0::'a)", "by auto"], ["proof (state)\nthis:\n  four_block_mat A B C D $$ (x, n) = (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       x \\<in> {..<n} \\<Longrightarrow>\n       four_block_mat A B C D $$ (x, n) *\n       Determinant.cofactor (four_block_mat A B C D) x n =\n       (0::'a)", "thus \"four_block_mat A B C D $$ (x, n) * Determinant.cofactor (four_block_mat A B C D) x n = 0\""], ["proof (prove)\nusing this:\n  four_block_mat A B C D $$ (x, n) = (0::'a)\n\ngoal (1 subgoal):\n 1. four_block_mat A B C D $$ (x, n) *\n    Determinant.cofactor (four_block_mat A B C D) x n =\n    (0::'a)", "by simp"], ["proof (state)\nthis:\n  four_block_mat A B C D $$ (x, n) *\n  Determinant.cofactor (four_block_mat A B C D) x n =\n  (0::'a)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (\\<Sum>i<n.\n      four_block_mat A B C D $$ (i, n) *\n      Determinant.cofactor (four_block_mat A B C D) i n) =\n  (0::'a)\n\ngoal (1 subgoal):\n 1. \\<And>n A B C D.\n       \\<lbrakk>\\<And>A B C D.\n                   \\<lbrakk>A \\<in> carrier_mat m m;\n                    B = 0\\<^sub>m m (n - m); C = 0\\<^sub>m (n - m) m;\n                    D = 1\\<^sub>m (n - m); m < n\\<rbrakk>\n                   \\<Longrightarrow> Determinant.det\n(four_block_mat A B C D) =\n                                     Determinant.det A;\n        A \\<in> carrier_mat m m; B = 0\\<^sub>m m (Suc n - m);\n        C = 0\\<^sub>m (Suc n - m) m; D = 1\\<^sub>m (Suc n - m);\n        m < Suc n\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (four_block_mat A B C D) =\n                         Determinant.det A", "have \"Determinant.det ?block = (\\<Sum>i<Suc n. ?block $$ (i, n) * Determinant.cofactor ?block i n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (four_block_mat A B C D) =\n    (\\<Sum>i<Suc n.\n        four_block_mat A B C D $$ (i, n) *\n        Determinant.cofactor (four_block_mat A B C D) i n)", "by (rule laplace_expansion_column, insert Suc.prems, auto)"], ["proof (state)\nthis:\n  Determinant.det (four_block_mat A B C D) =\n  (\\<Sum>i<Suc n.\n      four_block_mat A B C D $$ (i, n) *\n      Determinant.cofactor (four_block_mat A B C D) i n)\n\ngoal (1 subgoal):\n 1. \\<And>n A B C D.\n       \\<lbrakk>\\<And>A B C D.\n                   \\<lbrakk>A \\<in> carrier_mat m m;\n                    B = 0\\<^sub>m m (n - m); C = 0\\<^sub>m (n - m) m;\n                    D = 1\\<^sub>m (n - m); m < n\\<rbrakk>\n                   \\<Longrightarrow> Determinant.det\n(four_block_mat A B C D) =\n                                     Determinant.det A;\n        A \\<in> carrier_mat m m; B = 0\\<^sub>m m (Suc n - m);\n        C = 0\\<^sub>m (Suc n - m) m; D = 1\\<^sub>m (Suc n - m);\n        m < Suc n\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (four_block_mat A B C D) =\n                         Determinant.det A", "also"], ["proof (state)\nthis:\n  Determinant.det (four_block_mat A B C D) =\n  (\\<Sum>i<Suc n.\n      four_block_mat A B C D $$ (i, n) *\n      Determinant.cofactor (four_block_mat A B C D) i n)\n\ngoal (1 subgoal):\n 1. \\<And>n A B C D.\n       \\<lbrakk>\\<And>A B C D.\n                   \\<lbrakk>A \\<in> carrier_mat m m;\n                    B = 0\\<^sub>m m (n - m); C = 0\\<^sub>m (n - m) m;\n                    D = 1\\<^sub>m (n - m); m < n\\<rbrakk>\n                   \\<Longrightarrow> Determinant.det\n(four_block_mat A B C D) =\n                                     Determinant.det A;\n        A \\<in> carrier_mat m m; B = 0\\<^sub>m m (Suc n - m);\n        C = 0\\<^sub>m (Suc n - m) m; D = 1\\<^sub>m (Suc n - m);\n        m < Suc n\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (four_block_mat A B C D) =\n                         Determinant.det A", "have \"... = ?block $$ (n, n) * Determinant.cofactor ?block n n\n    + (\\<Sum>i<n. ?block $$ (i,n) * Determinant.cofactor ?block i n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>i<Suc n.\n        four_block_mat A B C D $$ (i, n) *\n        Determinant.cofactor (four_block_mat A B C D) i n) =\n    four_block_mat A B C D $$ (n, n) *\n    Determinant.cofactor (four_block_mat A B C D) n n +\n    (\\<Sum>i<n.\n        four_block_mat A B C D $$ (i, n) *\n        Determinant.cofactor (four_block_mat A B C D) i n)", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>i<Suc n.\n      four_block_mat A B C D $$ (i, n) *\n      Determinant.cofactor (four_block_mat A B C D) i n) =\n  four_block_mat A B C D $$ (n, n) *\n  Determinant.cofactor (four_block_mat A B C D) n n +\n  (\\<Sum>i<n.\n      four_block_mat A B C D $$ (i, n) *\n      Determinant.cofactor (four_block_mat A B C D) i n)\n\ngoal (1 subgoal):\n 1. \\<And>n A B C D.\n       \\<lbrakk>\\<And>A B C D.\n                   \\<lbrakk>A \\<in> carrier_mat m m;\n                    B = 0\\<^sub>m m (n - m); C = 0\\<^sub>m (n - m) m;\n                    D = 1\\<^sub>m (n - m); m < n\\<rbrakk>\n                   \\<Longrightarrow> Determinant.det\n(four_block_mat A B C D) =\n                                     Determinant.det A;\n        A \\<in> carrier_mat m m; B = 0\\<^sub>m m (Suc n - m);\n        C = 0\\<^sub>m (Suc n - m) m; D = 1\\<^sub>m (Suc n - m);\n        m < Suc n\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (four_block_mat A B C D) =\n                         Determinant.det A", "also"], ["proof (state)\nthis:\n  (\\<Sum>i<Suc n.\n      four_block_mat A B C D $$ (i, n) *\n      Determinant.cofactor (four_block_mat A B C D) i n) =\n  four_block_mat A B C D $$ (n, n) *\n  Determinant.cofactor (four_block_mat A B C D) n n +\n  (\\<Sum>i<n.\n      four_block_mat A B C D $$ (i, n) *\n      Determinant.cofactor (four_block_mat A B C D) i n)\n\ngoal (1 subgoal):\n 1. \\<And>n A B C D.\n       \\<lbrakk>\\<And>A B C D.\n                   \\<lbrakk>A \\<in> carrier_mat m m;\n                    B = 0\\<^sub>m m (n - m); C = 0\\<^sub>m (n - m) m;\n                    D = 1\\<^sub>m (n - m); m < n\\<rbrakk>\n                   \\<Longrightarrow> Determinant.det\n(four_block_mat A B C D) =\n                                     Determinant.det A;\n        A \\<in> carrier_mat m m; B = 0\\<^sub>m m (Suc n - m);\n        C = 0\\<^sub>m (Suc n - m) m; D = 1\\<^sub>m (Suc n - m);\n        m < Suc n\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (four_block_mat A B C D) =\n                         Determinant.det A", "have \"... = ?block $$ (n, n) * Determinant.cofactor ?block n n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. four_block_mat A B C D $$ (n, n) *\n    Determinant.cofactor (four_block_mat A B C D) n n +\n    (\\<Sum>i<n.\n        four_block_mat A B C D $$ (i, n) *\n        Determinant.cofactor (four_block_mat A B C D) i n) =\n    four_block_mat A B C D $$ (n, n) *\n    Determinant.cofactor (four_block_mat A B C D) n n", "using rw0"], ["proof (prove)\nusing this:\n  (\\<Sum>i<n.\n      four_block_mat A B C D $$ (i, n) *\n      Determinant.cofactor (four_block_mat A B C D) i n) =\n  (0::'a)\n\ngoal (1 subgoal):\n 1. four_block_mat A B C D $$ (n, n) *\n    Determinant.cofactor (four_block_mat A B C D) n n +\n    (\\<Sum>i<n.\n        four_block_mat A B C D $$ (i, n) *\n        Determinant.cofactor (four_block_mat A B C D) i n) =\n    four_block_mat A B C D $$ (n, n) *\n    Determinant.cofactor (four_block_mat A B C D) n n", "by auto"], ["proof (state)\nthis:\n  four_block_mat A B C D $$ (n, n) *\n  Determinant.cofactor (four_block_mat A B C D) n n +\n  (\\<Sum>i<n.\n      four_block_mat A B C D $$ (i, n) *\n      Determinant.cofactor (four_block_mat A B C D) i n) =\n  four_block_mat A B C D $$ (n, n) *\n  Determinant.cofactor (four_block_mat A B C D) n n\n\ngoal (1 subgoal):\n 1. \\<And>n A B C D.\n       \\<lbrakk>\\<And>A B C D.\n                   \\<lbrakk>A \\<in> carrier_mat m m;\n                    B = 0\\<^sub>m m (n - m); C = 0\\<^sub>m (n - m) m;\n                    D = 1\\<^sub>m (n - m); m < n\\<rbrakk>\n                   \\<Longrightarrow> Determinant.det\n(four_block_mat A B C D) =\n                                     Determinant.det A;\n        A \\<in> carrier_mat m m; B = 0\\<^sub>m m (Suc n - m);\n        C = 0\\<^sub>m (Suc n - m) m; D = 1\\<^sub>m (Suc n - m);\n        m < Suc n\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (four_block_mat A B C D) =\n                         Determinant.det A", "also"], ["proof (state)\nthis:\n  four_block_mat A B C D $$ (n, n) *\n  Determinant.cofactor (four_block_mat A B C D) n n +\n  (\\<Sum>i<n.\n      four_block_mat A B C D $$ (i, n) *\n      Determinant.cofactor (four_block_mat A B C D) i n) =\n  four_block_mat A B C D $$ (n, n) *\n  Determinant.cofactor (four_block_mat A B C D) n n\n\ngoal (1 subgoal):\n 1. \\<And>n A B C D.\n       \\<lbrakk>\\<And>A B C D.\n                   \\<lbrakk>A \\<in> carrier_mat m m;\n                    B = 0\\<^sub>m m (n - m); C = 0\\<^sub>m (n - m) m;\n                    D = 1\\<^sub>m (n - m); m < n\\<rbrakk>\n                   \\<Longrightarrow> Determinant.det\n(four_block_mat A B C D) =\n                                     Determinant.det A;\n        A \\<in> carrier_mat m m; B = 0\\<^sub>m m (Suc n - m);\n        C = 0\\<^sub>m (Suc n - m) m; D = 1\\<^sub>m (Suc n - m);\n        m < Suc n\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (four_block_mat A B C D) =\n                         Determinant.det A", "have \"... = Determinant.cofactor ?block n n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. four_block_mat A B C D $$ (n, n) *\n    Determinant.cofactor (four_block_mat A B C D) n n =\n    Determinant.cofactor (four_block_mat A B C D) n n", "using nn_1"], ["proof (prove)\nusing this:\n  four_block_mat A B C D $$ (n, n) = (1::'a)\n\ngoal (1 subgoal):\n 1. four_block_mat A B C D $$ (n, n) *\n    Determinant.cofactor (four_block_mat A B C D) n n =\n    Determinant.cofactor (four_block_mat A B C D) n n", "by simp"], ["proof (state)\nthis:\n  four_block_mat A B C D $$ (n, n) *\n  Determinant.cofactor (four_block_mat A B C D) n n =\n  Determinant.cofactor (four_block_mat A B C D) n n\n\ngoal (1 subgoal):\n 1. \\<And>n A B C D.\n       \\<lbrakk>\\<And>A B C D.\n                   \\<lbrakk>A \\<in> carrier_mat m m;\n                    B = 0\\<^sub>m m (n - m); C = 0\\<^sub>m (n - m) m;\n                    D = 1\\<^sub>m (n - m); m < n\\<rbrakk>\n                   \\<Longrightarrow> Determinant.det\n(four_block_mat A B C D) =\n                                     Determinant.det A;\n        A \\<in> carrier_mat m m; B = 0\\<^sub>m m (Suc n - m);\n        C = 0\\<^sub>m (Suc n - m) m; D = 1\\<^sub>m (Suc n - m);\n        m < Suc n\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (four_block_mat A B C D) =\n                         Determinant.det A", "also"], ["proof (state)\nthis:\n  four_block_mat A B C D $$ (n, n) *\n  Determinant.cofactor (four_block_mat A B C D) n n =\n  Determinant.cofactor (four_block_mat A B C D) n n\n\ngoal (1 subgoal):\n 1. \\<And>n A B C D.\n       \\<lbrakk>\\<And>A B C D.\n                   \\<lbrakk>A \\<in> carrier_mat m m;\n                    B = 0\\<^sub>m m (n - m); C = 0\\<^sub>m (n - m) m;\n                    D = 1\\<^sub>m (n - m); m < n\\<rbrakk>\n                   \\<Longrightarrow> Determinant.det\n(four_block_mat A B C D) =\n                                     Determinant.det A;\n        A \\<in> carrier_mat m m; B = 0\\<^sub>m m (Suc n - m);\n        C = 0\\<^sub>m (Suc n - m) m; D = 1\\<^sub>m (Suc n - m);\n        m < Suc n\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (four_block_mat A B C D) =\n                         Determinant.det A", "have \"... = Determinant.det (mat_delete ?block n n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.cofactor (four_block_mat A B C D) n n =\n    Determinant.det (mat_delete (four_block_mat A B C D) n n)", "unfolding cofactor_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (- (1::'a)) ^ (n + n) *\n    Determinant.det (mat_delete (four_block_mat A B C D) n n) =\n    Determinant.det (mat_delete (four_block_mat A B C D) n n)", "by auto"], ["proof (state)\nthis:\n  Determinant.cofactor (four_block_mat A B C D) n n =\n  Determinant.det (mat_delete (four_block_mat A B C D) n n)\n\ngoal (1 subgoal):\n 1. \\<And>n A B C D.\n       \\<lbrakk>\\<And>A B C D.\n                   \\<lbrakk>A \\<in> carrier_mat m m;\n                    B = 0\\<^sub>m m (n - m); C = 0\\<^sub>m (n - m) m;\n                    D = 1\\<^sub>m (n - m); m < n\\<rbrakk>\n                   \\<Longrightarrow> Determinant.det\n(four_block_mat A B C D) =\n                                     Determinant.det A;\n        A \\<in> carrier_mat m m; B = 0\\<^sub>m m (Suc n - m);\n        C = 0\\<^sub>m (Suc n - m) m; D = 1\\<^sub>m (Suc n - m);\n        m < Suc n\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (four_block_mat A B C D) =\n                         Determinant.det A", "also"], ["proof (state)\nthis:\n  Determinant.cofactor (four_block_mat A B C D) n n =\n  Determinant.det (mat_delete (four_block_mat A B C D) n n)\n\ngoal (1 subgoal):\n 1. \\<And>n A B C D.\n       \\<lbrakk>\\<And>A B C D.\n                   \\<lbrakk>A \\<in> carrier_mat m m;\n                    B = 0\\<^sub>m m (n - m); C = 0\\<^sub>m (n - m) m;\n                    D = 1\\<^sub>m (n - m); m < n\\<rbrakk>\n                   \\<Longrightarrow> Determinant.det\n(four_block_mat A B C D) =\n                                     Determinant.det A;\n        A \\<in> carrier_mat m m; B = 0\\<^sub>m m (Suc n - m);\n        C = 0\\<^sub>m (Suc n - m) m; D = 1\\<^sub>m (Suc n - m);\n        m < Suc n\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (four_block_mat A B C D) =\n                         Determinant.det A", "have \"... = Determinant.det (four_block_mat A ?B ?C ?D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (mat_delete (four_block_mat A B C D) n n) =\n    Determinant.det\n     (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a)) (1\\<^sub>m (n - m)))", "using mat_eq"], ["proof (prove)\nusing this:\n  mat_delete (four_block_mat A B C D) n n =\n  four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n   (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a)) (1\\<^sub>m (n - m))\n\ngoal (1 subgoal):\n 1. Determinant.det (mat_delete (four_block_mat A B C D) n n) =\n    Determinant.det\n     (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a)) (1\\<^sub>m (n - m)))", "by simp"], ["proof (state)\nthis:\n  Determinant.det (mat_delete (four_block_mat A B C D) n n) =\n  Determinant.det\n   (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n     (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a)) (1\\<^sub>m (n - m)))\n\ngoal (1 subgoal):\n 1. \\<And>n A B C D.\n       \\<lbrakk>\\<And>A B C D.\n                   \\<lbrakk>A \\<in> carrier_mat m m;\n                    B = 0\\<^sub>m m (n - m); C = 0\\<^sub>m (n - m) m;\n                    D = 1\\<^sub>m (n - m); m < n\\<rbrakk>\n                   \\<Longrightarrow> Determinant.det\n(four_block_mat A B C D) =\n                                     Determinant.det A;\n        A \\<in> carrier_mat m m; B = 0\\<^sub>m m (Suc n - m);\n        C = 0\\<^sub>m (Suc n - m) m; D = 1\\<^sub>m (Suc n - m);\n        m < Suc n\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (four_block_mat A B C D) =\n                         Determinant.det A", "also"], ["proof (state)\nthis:\n  Determinant.det (mat_delete (four_block_mat A B C D) n n) =\n  Determinant.det\n   (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n     (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a)) (1\\<^sub>m (n - m)))\n\ngoal (1 subgoal):\n 1. \\<And>n A B C D.\n       \\<lbrakk>\\<And>A B C D.\n                   \\<lbrakk>A \\<in> carrier_mat m m;\n                    B = 0\\<^sub>m m (n - m); C = 0\\<^sub>m (n - m) m;\n                    D = 1\\<^sub>m (n - m); m < n\\<rbrakk>\n                   \\<Longrightarrow> Determinant.det\n(four_block_mat A B C D) =\n                                     Determinant.det A;\n        A \\<in> carrier_mat m m; B = 0\\<^sub>m m (Suc n - m);\n        C = 0\\<^sub>m (Suc n - m) m; D = 1\\<^sub>m (Suc n - m);\n        m < Suc n\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (four_block_mat A B C D) =\n                         Determinant.det A", "have \"... = Determinant.det A\" (is \"Determinant.det ?lhs = Determinant.det ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det\n     (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n       (1\\<^sub>m (n - m))) =\n    Determinant.det A", "proof (cases \"n = m\")"], ["proof (state)\ngoal (2 subgoals):\n 1. n = m \\<Longrightarrow>\n    Determinant.det\n     (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n       (1\\<^sub>m (n - m))) =\n    Determinant.det A\n 2. n \\<noteq> m \\<Longrightarrow>\n    Determinant.det\n     (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n       (1\\<^sub>m (n - m))) =\n    Determinant.det A", "case True"], ["proof (state)\nthis:\n  n = m\n\ngoal (2 subgoals):\n 1. n = m \\<Longrightarrow>\n    Determinant.det\n     (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n       (1\\<^sub>m (n - m))) =\n    Determinant.det A\n 2. n \\<noteq> m \\<Longrightarrow>\n    Determinant.det\n     (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n       (1\\<^sub>m (n - m))) =\n    Determinant.det A", "have \"?lhs = ?rhs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n     (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a)) (1\\<^sub>m (n - m)) =\n    A", "by (rule four_block_mat_dim0, insert Suc.prems True, auto)"], ["proof (state)\nthis:\n  four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n   (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a)) (1\\<^sub>m (n - m)) =\n  A\n\ngoal (2 subgoals):\n 1. n = m \\<Longrightarrow>\n    Determinant.det\n     (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n       (1\\<^sub>m (n - m))) =\n    Determinant.det A\n 2. n \\<noteq> m \\<Longrightarrow>\n    Determinant.det\n     (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n       (1\\<^sub>m (n - m))) =\n    Determinant.det A", "then"], ["proof (chain)\npicking this:\n  four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n   (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a)) (1\\<^sub>m (n - m)) =\n  A", "show ?thesis"], ["proof (prove)\nusing this:\n  four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n   (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a)) (1\\<^sub>m (n - m)) =\n  A\n\ngoal (1 subgoal):\n 1. Determinant.det\n     (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n       (1\\<^sub>m (n - m))) =\n    Determinant.det A", "by simp"], ["proof (state)\nthis:\n  Determinant.det\n   (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n     (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a)) (1\\<^sub>m (n - m))) =\n  Determinant.det A\n\ngoal (1 subgoal):\n 1. n \\<noteq> m \\<Longrightarrow>\n    Determinant.det\n     (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n       (1\\<^sub>m (n - m))) =\n    Determinant.det A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. n \\<noteq> m \\<Longrightarrow>\n    Determinant.det\n     (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n       (1\\<^sub>m (n - m))) =\n    Determinant.det A", "case False"], ["proof (state)\nthis:\n  n \\<noteq> m\n\ngoal (1 subgoal):\n 1. n \\<noteq> m \\<Longrightarrow>\n    Determinant.det\n     (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n       (1\\<^sub>m (n - m))) =\n    Determinant.det A", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det\n     (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n       (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a))\n       (1\\<^sub>m (n - m))) =\n    Determinant.det A", "by (rule Suc.hyps, insert Suc.prems False, auto)"], ["proof (state)\nthis:\n  Determinant.det\n   (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n     (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a)) (1\\<^sub>m (n - m))) =\n  Determinant.det A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Determinant.det\n   (four_block_mat A (Matrix.mat m (n - m) (\\<lambda>(i, j). 0::'a))\n     (Matrix.mat (n - m) m (\\<lambda>(i, j). 0::'a)) (1\\<^sub>m (n - m))) =\n  Determinant.det A\n\ngoal (1 subgoal):\n 1. \\<And>n A B C D.\n       \\<lbrakk>\\<And>A B C D.\n                   \\<lbrakk>A \\<in> carrier_mat m m;\n                    B = 0\\<^sub>m m (n - m); C = 0\\<^sub>m (n - m) m;\n                    D = 1\\<^sub>m (n - m); m < n\\<rbrakk>\n                   \\<Longrightarrow> Determinant.det\n(four_block_mat A B C D) =\n                                     Determinant.det A;\n        A \\<in> carrier_mat m m; B = 0\\<^sub>m m (Suc n - m);\n        C = 0\\<^sub>m (Suc n - m) m; D = 1\\<^sub>m (Suc n - m);\n        m < Suc n\\<rbrakk>\n       \\<Longrightarrow> Determinant.det (four_block_mat A B C D) =\n                         Determinant.det A", "finally"], ["proof (chain)\npicking this:\n  Determinant.det (four_block_mat A B C D) = Determinant.det A", "show ?case"], ["proof (prove)\nusing this:\n  Determinant.det (four_block_mat A B C D) = Determinant.det A\n\ngoal (1 subgoal):\n 1. Determinant.det (four_block_mat A B C D) = Determinant.det A", "."], ["proof (state)\nthis:\n  Determinant.det (four_block_mat A B C D) = Determinant.det A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mult_eq_first_row:\n  assumes A: \"A \\<in> carrier_mat 1 n\"\n  and B: \"B \\<in> carrier_mat m n\"\n  and m0: \"m \\<noteq> 0\"\n  and r: \"Matrix.row A 0 = Matrix.row B 0\"\nshows \"Matrix.row (A * V) 0 = Matrix.row (B * V) 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Matrix.row (A * V) 0 = Matrix.row (B * V) 0", "proof (rule eq_vecI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       i < dim_vec (Matrix.row (B * V) 0) \\<Longrightarrow>\n       Matrix.row (A * V) 0 $v i = Matrix.row (B * V) 0 $v i\n 2. dim_vec (Matrix.row (A * V) 0) = dim_vec (Matrix.row (B * V) 0)", "show \"dim_vec (Matrix.row (A * V) 0) = dim_vec (Matrix.row (B * V) 0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_vec (Matrix.row (A * V) 0) = dim_vec (Matrix.row (B * V) 0)", "using A B r"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat 1 n\n  B \\<in> carrier_mat m n\n  Matrix.row A 0 = Matrix.row B 0\n\ngoal (1 subgoal):\n 1. dim_vec (Matrix.row (A * V) 0) = dim_vec (Matrix.row (B * V) 0)", "by auto"], ["proof (state)\nthis:\n  dim_vec (Matrix.row (A * V) 0) = dim_vec (Matrix.row (B * V) 0)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec (Matrix.row (B * V) 0) \\<Longrightarrow>\n       Matrix.row (A * V) 0 $v i = Matrix.row (B * V) 0 $v i", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec (Matrix.row (B * V) 0) \\<Longrightarrow>\n       Matrix.row (A * V) 0 $v i = Matrix.row (B * V) 0 $v i", "assume i: \"i < dim_vec (Matrix.row (B * V) 0)\""], ["proof (state)\nthis:\n  i < dim_vec (Matrix.row (B * V) 0)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec (Matrix.row (B * V) 0) \\<Longrightarrow>\n       Matrix.row (A * V) 0 $v i = Matrix.row (B * V) 0 $v i", "have \"Matrix.row (A * V) 0 $v i = (A * V) $$ (0,i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Matrix.row (A * V) 0 $v i = (A * V) $$ (0, i)", "by (rule index_row, insert i A, auto)"], ["proof (state)\nthis:\n  Matrix.row (A * V) 0 $v i = (A * V) $$ (0, i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec (Matrix.row (B * V) 0) \\<Longrightarrow>\n       Matrix.row (A * V) 0 $v i = Matrix.row (B * V) 0 $v i", "also"], ["proof (state)\nthis:\n  Matrix.row (A * V) 0 $v i = (A * V) $$ (0, i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec (Matrix.row (B * V) 0) \\<Longrightarrow>\n       Matrix.row (A * V) 0 $v i = Matrix.row (B * V) 0 $v i", "have \"... = Matrix.row A 0 \\<bullet> col V i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A * V) $$ (0, i) = Matrix.row A 0 \\<bullet> col V i", "by (rule index_mult_mat, insert A i, auto)"], ["proof (state)\nthis:\n  (A * V) $$ (0, i) = Matrix.row A 0 \\<bullet> col V i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec (Matrix.row (B * V) 0) \\<Longrightarrow>\n       Matrix.row (A * V) 0 $v i = Matrix.row (B * V) 0 $v i", "also"], ["proof (state)\nthis:\n  (A * V) $$ (0, i) = Matrix.row A 0 \\<bullet> col V i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec (Matrix.row (B * V) 0) \\<Longrightarrow>\n       Matrix.row (A * V) 0 $v i = Matrix.row (B * V) 0 $v i", "have \"... = Matrix.row B 0 \\<bullet> col V i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Matrix.row A 0 \\<bullet> col V i = Matrix.row B 0 \\<bullet> col V i", "using r"], ["proof (prove)\nusing this:\n  Matrix.row A 0 = Matrix.row B 0\n\ngoal (1 subgoal):\n 1. Matrix.row A 0 \\<bullet> col V i = Matrix.row B 0 \\<bullet> col V i", "by auto"], ["proof (state)\nthis:\n  Matrix.row A 0 \\<bullet> col V i = Matrix.row B 0 \\<bullet> col V i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec (Matrix.row (B * V) 0) \\<Longrightarrow>\n       Matrix.row (A * V) 0 $v i = Matrix.row (B * V) 0 $v i", "also"], ["proof (state)\nthis:\n  Matrix.row A 0 \\<bullet> col V i = Matrix.row B 0 \\<bullet> col V i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec (Matrix.row (B * V) 0) \\<Longrightarrow>\n       Matrix.row (A * V) 0 $v i = Matrix.row (B * V) 0 $v i", "have \"... = (B * V) $$ (0,i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Matrix.row B 0 \\<bullet> col V i = (B * V) $$ (0, i)", "by (rule index_mult_mat[symmetric], insert m0 B i, auto)"], ["proof (state)\nthis:\n  Matrix.row B 0 \\<bullet> col V i = (B * V) $$ (0, i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec (Matrix.row (B * V) 0) \\<Longrightarrow>\n       Matrix.row (A * V) 0 $v i = Matrix.row (B * V) 0 $v i", "also"], ["proof (state)\nthis:\n  Matrix.row B 0 \\<bullet> col V i = (B * V) $$ (0, i)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec (Matrix.row (B * V) 0) \\<Longrightarrow>\n       Matrix.row (A * V) 0 $v i = Matrix.row (B * V) 0 $v i", "have \"... = Matrix.row (B * V) 0 $v i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (B * V) $$ (0, i) = Matrix.row (B * V) 0 $v i", "by (rule index_row[symmetric], insert i B m0, auto)"], ["proof (state)\nthis:\n  (B * V) $$ (0, i) = Matrix.row (B * V) 0 $v i\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       i < dim_vec (Matrix.row (B * V) 0) \\<Longrightarrow>\n       Matrix.row (A * V) 0 $v i = Matrix.row (B * V) 0 $v i", "finally"], ["proof (chain)\npicking this:\n  Matrix.row (A * V) 0 $v i = Matrix.row (B * V) 0 $v i", "show \"Matrix.row (A * V) 0 $v i = Matrix.row (B * V) 0 $v i\""], ["proof (prove)\nusing this:\n  Matrix.row (A * V) 0 $v i = Matrix.row (B * V) 0 $v i\n\ngoal (1 subgoal):\n 1. Matrix.row (A * V) 0 $v i = Matrix.row (B * V) 0 $v i", "."], ["proof (state)\nthis:\n  Matrix.row (A * V) 0 $v i = Matrix.row (B * V) 0 $v i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma smult_mat_mat_one_element:\n  assumes A: \"A \\<in> carrier_mat 1 1\" and B: \"B \\<in> carrier_mat 1 n\"\n  shows \"A * B = A $$ (0,0) \\<cdot>\\<^sub>m B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A * B = A $$ (0, 0) \\<cdot>\\<^sub>m B", "proof (rule eq_matI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (A $$ (0, 0) \\<cdot>\\<^sub>m B);\n        j < dim_col (A $$ (0, 0) \\<cdot>\\<^sub>m B)\\<rbrakk>\n       \\<Longrightarrow> (A * B) $$ (i, j) =\n                         (A $$ (0, 0) \\<cdot>\\<^sub>m B) $$ (i, j)\n 2. dim_row (A * B) = dim_row (A $$ (0, 0) \\<cdot>\\<^sub>m B)\n 3. dim_col (A * B) = dim_col (A $$ (0, 0) \\<cdot>\\<^sub>m B)", "fix i j"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (A $$ (0, 0) \\<cdot>\\<^sub>m B);\n        j < dim_col (A $$ (0, 0) \\<cdot>\\<^sub>m B)\\<rbrakk>\n       \\<Longrightarrow> (A * B) $$ (i, j) =\n                         (A $$ (0, 0) \\<cdot>\\<^sub>m B) $$ (i, j)\n 2. dim_row (A * B) = dim_row (A $$ (0, 0) \\<cdot>\\<^sub>m B)\n 3. dim_col (A * B) = dim_col (A $$ (0, 0) \\<cdot>\\<^sub>m B)", "assume i: \"i < dim_row (A $$ (0, 0) \\<cdot>\\<^sub>m B)\" and j: \"j < dim_col (A $$ (0, 0) \\<cdot>\\<^sub>m B)\""], ["proof (state)\nthis:\n  i < dim_row (A $$ (0, 0) \\<cdot>\\<^sub>m B)\n  j < dim_col (A $$ (0, 0) \\<cdot>\\<^sub>m B)\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (A $$ (0, 0) \\<cdot>\\<^sub>m B);\n        j < dim_col (A $$ (0, 0) \\<cdot>\\<^sub>m B)\\<rbrakk>\n       \\<Longrightarrow> (A * B) $$ (i, j) =\n                         (A $$ (0, 0) \\<cdot>\\<^sub>m B) $$ (i, j)\n 2. dim_row (A * B) = dim_row (A $$ (0, 0) \\<cdot>\\<^sub>m B)\n 3. dim_col (A * B) = dim_col (A $$ (0, 0) \\<cdot>\\<^sub>m B)", "have i0: \"i = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i = 0", "using A B i"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat 1 1\n  B \\<in> carrier_mat 1 n\n  i < dim_row (A $$ (0, 0) \\<cdot>\\<^sub>m B)\n\ngoal (1 subgoal):\n 1. i = 0", "by auto"], ["proof (state)\nthis:\n  i = 0\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (A $$ (0, 0) \\<cdot>\\<^sub>m B);\n        j < dim_col (A $$ (0, 0) \\<cdot>\\<^sub>m B)\\<rbrakk>\n       \\<Longrightarrow> (A * B) $$ (i, j) =\n                         (A $$ (0, 0) \\<cdot>\\<^sub>m B) $$ (i, j)\n 2. dim_row (A * B) = dim_row (A $$ (0, 0) \\<cdot>\\<^sub>m B)\n 3. dim_col (A * B) = dim_col (A $$ (0, 0) \\<cdot>\\<^sub>m B)", "have \"(A * B) $$ (i, j) =  Matrix.row A i \\<bullet> col B j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A * B) $$ (i, j) = Matrix.row A i \\<bullet> col B j", "by (rule index_mult_mat, insert i j A B, auto)"], ["proof (state)\nthis:\n  (A * B) $$ (i, j) = Matrix.row A i \\<bullet> col B j\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (A $$ (0, 0) \\<cdot>\\<^sub>m B);\n        j < dim_col (A $$ (0, 0) \\<cdot>\\<^sub>m B)\\<rbrakk>\n       \\<Longrightarrow> (A * B) $$ (i, j) =\n                         (A $$ (0, 0) \\<cdot>\\<^sub>m B) $$ (i, j)\n 2. dim_row (A * B) = dim_row (A $$ (0, 0) \\<cdot>\\<^sub>m B)\n 3. dim_col (A * B) = dim_col (A $$ (0, 0) \\<cdot>\\<^sub>m B)", "also"], ["proof (state)\nthis:\n  (A * B) $$ (i, j) = Matrix.row A i \\<bullet> col B j\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (A $$ (0, 0) \\<cdot>\\<^sub>m B);\n        j < dim_col (A $$ (0, 0) \\<cdot>\\<^sub>m B)\\<rbrakk>\n       \\<Longrightarrow> (A * B) $$ (i, j) =\n                         (A $$ (0, 0) \\<cdot>\\<^sub>m B) $$ (i, j)\n 2. dim_row (A * B) = dim_row (A $$ (0, 0) \\<cdot>\\<^sub>m B)\n 3. dim_col (A * B) = dim_col (A $$ (0, 0) \\<cdot>\\<^sub>m B)", "have \"... =  Matrix.row A i $v 0 * col B j $v 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Matrix.row A i \\<bullet> col B j = Matrix.row A i $v 0 * col B j $v 0", "unfolding scalar_prod_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ia = 0..<dim_vec (col B j).\n        Matrix.row A i $v ia * col B j $v ia) =\n    Matrix.row A i $v 0 * col B j $v 0", "using B"], ["proof (prove)\nusing this:\n  B \\<in> carrier_mat 1 n\n\ngoal (1 subgoal):\n 1. (\\<Sum>ia = 0..<dim_vec (col B j).\n        Matrix.row A i $v ia * col B j $v ia) =\n    Matrix.row A i $v 0 * col B j $v 0", "by auto"], ["proof (state)\nthis:\n  Matrix.row A i \\<bullet> col B j = Matrix.row A i $v 0 * col B j $v 0\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (A $$ (0, 0) \\<cdot>\\<^sub>m B);\n        j < dim_col (A $$ (0, 0) \\<cdot>\\<^sub>m B)\\<rbrakk>\n       \\<Longrightarrow> (A * B) $$ (i, j) =\n                         (A $$ (0, 0) \\<cdot>\\<^sub>m B) $$ (i, j)\n 2. dim_row (A * B) = dim_row (A $$ (0, 0) \\<cdot>\\<^sub>m B)\n 3. dim_col (A * B) = dim_col (A $$ (0, 0) \\<cdot>\\<^sub>m B)", "also"], ["proof (state)\nthis:\n  Matrix.row A i \\<bullet> col B j = Matrix.row A i $v 0 * col B j $v 0\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (A $$ (0, 0) \\<cdot>\\<^sub>m B);\n        j < dim_col (A $$ (0, 0) \\<cdot>\\<^sub>m B)\\<rbrakk>\n       \\<Longrightarrow> (A * B) $$ (i, j) =\n                         (A $$ (0, 0) \\<cdot>\\<^sub>m B) $$ (i, j)\n 2. dim_row (A * B) = dim_row (A $$ (0, 0) \\<cdot>\\<^sub>m B)\n 3. dim_col (A * B) = dim_col (A $$ (0, 0) \\<cdot>\\<^sub>m B)", "have \"... = A$$(i,i) * B$$(i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Matrix.row A i $v 0 * col B j $v 0 = A $$ (i, i) * B $$ (i, j)", "using A i i0 j"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat 1 1\n  i < dim_row (A $$ (0, 0) \\<cdot>\\<^sub>m B)\n  i = 0\n  j < dim_col (A $$ (0, 0) \\<cdot>\\<^sub>m B)\n\ngoal (1 subgoal):\n 1. Matrix.row A i $v 0 * col B j $v 0 = A $$ (i, i) * B $$ (i, j)", "by auto"], ["proof (state)\nthis:\n  Matrix.row A i $v 0 * col B j $v 0 = A $$ (i, i) * B $$ (i, j)\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (A $$ (0, 0) \\<cdot>\\<^sub>m B);\n        j < dim_col (A $$ (0, 0) \\<cdot>\\<^sub>m B)\\<rbrakk>\n       \\<Longrightarrow> (A * B) $$ (i, j) =\n                         (A $$ (0, 0) \\<cdot>\\<^sub>m B) $$ (i, j)\n 2. dim_row (A * B) = dim_row (A $$ (0, 0) \\<cdot>\\<^sub>m B)\n 3. dim_col (A * B) = dim_col (A $$ (0, 0) \\<cdot>\\<^sub>m B)", "also"], ["proof (state)\nthis:\n  Matrix.row A i $v 0 * col B j $v 0 = A $$ (i, i) * B $$ (i, j)\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (A $$ (0, 0) \\<cdot>\\<^sub>m B);\n        j < dim_col (A $$ (0, 0) \\<cdot>\\<^sub>m B)\\<rbrakk>\n       \\<Longrightarrow> (A * B) $$ (i, j) =\n                         (A $$ (0, 0) \\<cdot>\\<^sub>m B) $$ (i, j)\n 2. dim_row (A * B) = dim_row (A $$ (0, 0) \\<cdot>\\<^sub>m B)\n 3. dim_col (A * B) = dim_col (A $$ (0, 0) \\<cdot>\\<^sub>m B)", "have \"... = (A $$ (i, i) \\<cdot>\\<^sub>m B) $$ (i, j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A $$ (i, i) * B $$ (i, j) = (A $$ (i, i) \\<cdot>\\<^sub>m B) $$ (i, j)", "unfolding i"], ["proof (prove)\ngoal (1 subgoal):\n 1. A $$ (i, i) * B $$ (i, j) = (A $$ (i, i) \\<cdot>\\<^sub>m B) $$ (i, j)", "by (rule index_smult_mat[symmetric], insert i j B, auto)"], ["proof (state)\nthis:\n  A $$ (i, i) * B $$ (i, j) = (A $$ (i, i) \\<cdot>\\<^sub>m B) $$ (i, j)\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row (A $$ (0, 0) \\<cdot>\\<^sub>m B);\n        j < dim_col (A $$ (0, 0) \\<cdot>\\<^sub>m B)\\<rbrakk>\n       \\<Longrightarrow> (A * B) $$ (i, j) =\n                         (A $$ (0, 0) \\<cdot>\\<^sub>m B) $$ (i, j)\n 2. dim_row (A * B) = dim_row (A $$ (0, 0) \\<cdot>\\<^sub>m B)\n 3. dim_col (A * B) = dim_col (A $$ (0, 0) \\<cdot>\\<^sub>m B)", "finally"], ["proof (chain)\npicking this:\n  (A * B) $$ (i, j) = (A $$ (i, i) \\<cdot>\\<^sub>m B) $$ (i, j)", "show \"(A * B) $$ (i, j) = (A $$ (0, 0) \\<cdot>\\<^sub>m B) $$ (i, j)\""], ["proof (prove)\nusing this:\n  (A * B) $$ (i, j) = (A $$ (i, i) \\<cdot>\\<^sub>m B) $$ (i, j)\n\ngoal (1 subgoal):\n 1. (A * B) $$ (i, j) = (A $$ (0, 0) \\<cdot>\\<^sub>m B) $$ (i, j)", "using i0"], ["proof (prove)\nusing this:\n  (A * B) $$ (i, j) = (A $$ (i, i) \\<cdot>\\<^sub>m B) $$ (i, j)\n  i = 0\n\ngoal (1 subgoal):\n 1. (A * B) $$ (i, j) = (A $$ (0, 0) \\<cdot>\\<^sub>m B) $$ (i, j)", "by simp"], ["proof (state)\nthis:\n  (A * B) $$ (i, j) = (A $$ (0, 0) \\<cdot>\\<^sub>m B) $$ (i, j)\n\ngoal (2 subgoals):\n 1. dim_row (A * B) = dim_row (A $$ (0, 0) \\<cdot>\\<^sub>m B)\n 2. dim_col (A * B) = dim_col (A $$ (0, 0) \\<cdot>\\<^sub>m B)", "qed (insert A B, auto)"], ["", "lemma determinant_one_element:\n  assumes A: \"A \\<in> carrier_mat 1 1\" shows \"Determinant.det A = A $$ (0,0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det A = A $$ (0, 0)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Determinant.det A = A $$ (0, 0)", "have \"Determinant.det A = prod_list (diag_mat A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det A = prod_list (diag_mat A)", "by (rule det_upper_triangular[OF _ A], insert A, unfold upper_triangular_def, auto)"], ["proof (state)\nthis:\n  Determinant.det A = prod_list (diag_mat A)\n\ngoal (1 subgoal):\n 1. Determinant.det A = A $$ (0, 0)", "also"], ["proof (state)\nthis:\n  Determinant.det A = prod_list (diag_mat A)\n\ngoal (1 subgoal):\n 1. Determinant.det A = A $$ (0, 0)", "have \"... = A $$ (0,0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. prod_list (diag_mat A) = A $$ (0, 0)", "using A"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat 1 1\n\ngoal (1 subgoal):\n 1. prod_list (diag_mat A) = A $$ (0, 0)", "unfolding diag_mat_def"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat 1 1\n\ngoal (1 subgoal):\n 1. (\\<Prod>i\\<leftarrow>[0..<dim_row A]. A $$ (i, i)) = A $$ (0, 0)", "by auto"], ["proof (state)\nthis:\n  prod_list (diag_mat A) = A $$ (0, 0)\n\ngoal (1 subgoal):\n 1. Determinant.det A = A $$ (0, 0)", "finally"], ["proof (chain)\npicking this:\n  Determinant.det A = A $$ (0, 0)", "show ?thesis"], ["proof (prove)\nusing this:\n  Determinant.det A = A $$ (0, 0)\n\ngoal (1 subgoal):\n 1. Determinant.det A = A $$ (0, 0)", "."], ["proof (state)\nthis:\n  Determinant.det A = A $$ (0, 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma invertible_mat_transpose:\n  assumes inv_A: \"invertible_mat (A::'a::comm_ring_1 mat)\"\n  shows \"invertible_mat A\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible_mat A\\<^sup>T", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. invertible_mat A\\<^sup>T", "obtain n where A: \"A \\<in> carrier_mat n n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>n.\n        A \\<in> carrier_mat n n \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using inv_A"], ["proof (prove)\nusing this:\n  invertible_mat A\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        A \\<in> carrier_mat n n \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding invertible_mat_def square_mat.simps"], ["proof (prove)\nusing this:\n  dim_col A = dim_row A \\<and>\n  (\\<exists>B. inverts_mat A B \\<and> inverts_mat B A)\n\ngoal (1 subgoal):\n 1. (\\<And>n.\n        A \\<in> carrier_mat n n \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  A \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. invertible_mat A\\<^sup>T", "hence At: \"A\\<^sup>T \\<in> carrier_mat n n\""], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. A\\<^sup>T \\<in> carrier_mat n n", "by simp"], ["proof (state)\nthis:\n  A\\<^sup>T \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. invertible_mat A\\<^sup>T", "have \"Determinant.det A\\<^sup>T = Determinant.det A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det A\\<^sup>T = Determinant.det A", "by (metis Determinant.det_def Determinant.det_transpose carrier_matI\n        index_transpose_mat(2) index_transpose_mat(3))"], ["proof (state)\nthis:\n  Determinant.det A\\<^sup>T = Determinant.det A\n\ngoal (1 subgoal):\n 1. invertible_mat A\\<^sup>T", "also"], ["proof (state)\nthis:\n  Determinant.det A\\<^sup>T = Determinant.det A\n\ngoal (1 subgoal):\n 1. invertible_mat A\\<^sup>T", "have \"... dvd 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det A dvd (1::'a)", "using invertible_iff_is_unit_JNF[OF A] inv_A"], ["proof (prove)\nusing this:\n  invertible_mat A = (Determinant.det A dvd (1::'a))\n  invertible_mat A\n\ngoal (1 subgoal):\n 1. Determinant.det A dvd (1::'a)", "by simp"], ["proof (state)\nthis:\n  Determinant.det A dvd (1::'a)\n\ngoal (1 subgoal):\n 1. invertible_mat A\\<^sup>T", "finally"], ["proof (chain)\npicking this:\n  Determinant.det A\\<^sup>T dvd (1::'a)", "show ?thesis"], ["proof (prove)\nusing this:\n  Determinant.det A\\<^sup>T dvd (1::'a)\n\ngoal (1 subgoal):\n 1. invertible_mat A\\<^sup>T", "using invertible_iff_is_unit_JNF[OF At]"], ["proof (prove)\nusing this:\n  Determinant.det A\\<^sup>T dvd (1::'a)\n  invertible_mat A\\<^sup>T = (Determinant.det A\\<^sup>T dvd (1::'a))\n\ngoal (1 subgoal):\n 1. invertible_mat A\\<^sup>T", "by auto"], ["proof (state)\nthis:\n  invertible_mat A\\<^sup>T\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dvd_elements_mult_matrix_left:\n  assumes A: \"(A::'a::comm_ring_1 mat) \\<in> carrier_mat m n\"\n  and P: \"P \\<in> carrier_mat m m\"\n  and x: \"(\\<forall>i j. i<m \\<and> j<n \\<longrightarrow> x dvd A$$(i,j))\"\n  shows \"(\\<forall>i j. i<m \\<and> j<n \\<longrightarrow> x dvd (P*A)$$(i,j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i j.\n       i < m \\<and> j < n \\<longrightarrow> x dvd (P * A) $$ (i, j)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>i j.\n       i < m \\<and> j < n \\<longrightarrow> x dvd (P * A) $$ (i, j)", "have \"x dvd (P * A) $$ (i, j)\" if i: \"i < m\" and j: \"j < n\" for i j"], ["proof (prove)\ngoal (1 subgoal):\n 1. x dvd (P * A) $$ (i, j)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x dvd (P * A) $$ (i, j)", "have \"(P * A) $$ (i, j) =  (\\<Sum>ia = 0..<m. Matrix.row P i $v ia * col A j $v ia)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (P * A) $$ (i, j) =\n    (\\<Sum>ia = 0..<m. Matrix.row P i $v ia * col A j $v ia)", "unfolding times_mat_def scalar_prod_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Matrix.mat (dim_row P) (dim_col A)\n     (\\<lambda>(i, j).\n         \\<Sum>ia = 0..<dim_vec (col A j).\n            Matrix.row P i $v ia * col A j $v ia) $$\n    (i, j) =\n    (\\<Sum>ia = 0..<m. Matrix.row P i $v ia * col A j $v ia)", "using A P j i"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat m n\n  P \\<in> carrier_mat m m\n  j < n\n  i < m\n\ngoal (1 subgoal):\n 1. Matrix.mat (dim_row P) (dim_col A)\n     (\\<lambda>(i, j).\n         \\<Sum>ia = 0..<dim_vec (col A j).\n            Matrix.row P i $v ia * col A j $v ia) $$\n    (i, j) =\n    (\\<Sum>ia = 0..<m. Matrix.row P i $v ia * col A j $v ia)", "by auto"], ["proof (state)\nthis:\n  (P * A) $$ (i, j) =\n  (\\<Sum>ia = 0..<m. Matrix.row P i $v ia * col A j $v ia)\n\ngoal (1 subgoal):\n 1. x dvd (P * A) $$ (i, j)", "also"], ["proof (state)\nthis:\n  (P * A) $$ (i, j) =\n  (\\<Sum>ia = 0..<m. Matrix.row P i $v ia * col A j $v ia)\n\ngoal (1 subgoal):\n 1. x dvd (P * A) $$ (i, j)", "have \"... = (\\<Sum>ia = 0..<m. Matrix.row P i $v ia *  A $$ (ia,j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ia = 0..<m. Matrix.row P i $v ia * col A j $v ia) =\n    (\\<Sum>ia = 0..<m. Matrix.row P i $v ia * A $$ (ia, j))", "by (rule sum.cong, insert A j, auto)"], ["proof (state)\nthis:\n  (\\<Sum>ia = 0..<m. Matrix.row P i $v ia * col A j $v ia) =\n  (\\<Sum>ia = 0..<m. Matrix.row P i $v ia * A $$ (ia, j))\n\ngoal (1 subgoal):\n 1. x dvd (P * A) $$ (i, j)", "also"], ["proof (state)\nthis:\n  (\\<Sum>ia = 0..<m. Matrix.row P i $v ia * col A j $v ia) =\n  (\\<Sum>ia = 0..<m. Matrix.row P i $v ia * A $$ (ia, j))\n\ngoal (1 subgoal):\n 1. x dvd (P * A) $$ (i, j)", "have \"x dvd ...\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x dvd (\\<Sum>ia = 0..<m. Matrix.row P i $v ia * A $$ (ia, j))", "using x"], ["proof (prove)\nusing this:\n  \\<forall>i j. i < m \\<and> j < n \\<longrightarrow> x dvd A $$ (i, j)\n\ngoal (1 subgoal):\n 1. x dvd (\\<Sum>ia = 0..<m. Matrix.row P i $v ia * A $$ (ia, j))", "by (meson atLeastLessThan_iff dvd_mult dvd_sum j)"], ["proof (state)\nthis:\n  x dvd (\\<Sum>ia = 0..<m. Matrix.row P i $v ia * A $$ (ia, j))\n\ngoal (1 subgoal):\n 1. x dvd (P * A) $$ (i, j)", "finally"], ["proof (chain)\npicking this:\n  x dvd (P * A) $$ (i, j)", "show ?thesis"], ["proof (prove)\nusing this:\n  x dvd (P * A) $$ (i, j)\n\ngoal (1 subgoal):\n 1. x dvd (P * A) $$ (i, j)", "."], ["proof (state)\nthis:\n  x dvd (P * A) $$ (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?i < m; ?j < n\\<rbrakk>\n  \\<Longrightarrow> x dvd (P * A) $$ (?i, ?j)\n\ngoal (1 subgoal):\n 1. \\<forall>i j.\n       i < m \\<and> j < n \\<longrightarrow> x dvd (P * A) $$ (i, j)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i < m; ?j < n\\<rbrakk>\n  \\<Longrightarrow> x dvd (P * A) $$ (?i, ?j)\n\ngoal (1 subgoal):\n 1. \\<forall>i j.\n       i < m \\<and> j < n \\<longrightarrow> x dvd (P * A) $$ (i, j)", "by auto"], ["proof (state)\nthis:\n  \\<forall>i j. i < m \\<and> j < n \\<longrightarrow> x dvd (P * A) $$ (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dvd_elements_mult_matrix_right:\n  assumes A: \"(A::'a::comm_ring_1 mat) \\<in> carrier_mat m n\"\n  and Q: \"Q \\<in> carrier_mat n n\"\n  and x: \"(\\<forall>i j. i<m \\<and> j<n \\<longrightarrow> x dvd A$$(i,j))\"\n  shows \"(\\<forall>i j. i<m \\<and> j<n \\<longrightarrow> x dvd (A*Q)$$(i,j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i j.\n       i < m \\<and> j < n \\<longrightarrow> x dvd (A * Q) $$ (i, j)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<forall>i j.\n       i < m \\<and> j < n \\<longrightarrow> x dvd (A * Q) $$ (i, j)", "have \"x dvd (A*Q) $$ (i, j)\" if i: \"i < m\" and j: \"j < n\" for i j"], ["proof (prove)\ngoal (1 subgoal):\n 1. x dvd (A * Q) $$ (i, j)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x dvd (A * Q) $$ (i, j)", "have \"(A*Q) $$ (i, j) =  (\\<Sum>ia = 0..<n. Matrix.row A i $v ia * col Q j $v ia)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A * Q) $$ (i, j) =\n    (\\<Sum>ia = 0..<n. Matrix.row A i $v ia * col Q j $v ia)", "unfolding times_mat_def scalar_prod_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Matrix.mat (dim_row A) (dim_col Q)\n     (\\<lambda>(i, j).\n         \\<Sum>ia = 0..<dim_vec (col Q j).\n            Matrix.row A i $v ia * col Q j $v ia) $$\n    (i, j) =\n    (\\<Sum>ia = 0..<n. Matrix.row A i $v ia * col Q j $v ia)", "using A Q j i"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat m n\n  Q \\<in> carrier_mat n n\n  j < n\n  i < m\n\ngoal (1 subgoal):\n 1. Matrix.mat (dim_row A) (dim_col Q)\n     (\\<lambda>(i, j).\n         \\<Sum>ia = 0..<dim_vec (col Q j).\n            Matrix.row A i $v ia * col Q j $v ia) $$\n    (i, j) =\n    (\\<Sum>ia = 0..<n. Matrix.row A i $v ia * col Q j $v ia)", "by auto"], ["proof (state)\nthis:\n  (A * Q) $$ (i, j) =\n  (\\<Sum>ia = 0..<n. Matrix.row A i $v ia * col Q j $v ia)\n\ngoal (1 subgoal):\n 1. x dvd (A * Q) $$ (i, j)", "also"], ["proof (state)\nthis:\n  (A * Q) $$ (i, j) =\n  (\\<Sum>ia = 0..<n. Matrix.row A i $v ia * col Q j $v ia)\n\ngoal (1 subgoal):\n 1. x dvd (A * Q) $$ (i, j)", "have \"... = (\\<Sum>ia = 0..<n. A $$ (i, ia) * col Q j $v ia)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ia = 0..<n. Matrix.row A i $v ia * col Q j $v ia) =\n    (\\<Sum>ia = 0..<n. A $$ (i, ia) * col Q j $v ia)", "by (rule sum.cong, insert A Q i, auto)"], ["proof (state)\nthis:\n  (\\<Sum>ia = 0..<n. Matrix.row A i $v ia * col Q j $v ia) =\n  (\\<Sum>ia = 0..<n. A $$ (i, ia) * col Q j $v ia)\n\ngoal (1 subgoal):\n 1. x dvd (A * Q) $$ (i, j)", "also"], ["proof (state)\nthis:\n  (\\<Sum>ia = 0..<n. Matrix.row A i $v ia * col Q j $v ia) =\n  (\\<Sum>ia = 0..<n. A $$ (i, ia) * col Q j $v ia)\n\ngoal (1 subgoal):\n 1. x dvd (A * Q) $$ (i, j)", "have \"x dvd ...\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x dvd (\\<Sum>ia = 0..<n. A $$ (i, ia) * col Q j $v ia)", "using x"], ["proof (prove)\nusing this:\n  \\<forall>i j. i < m \\<and> j < n \\<longrightarrow> x dvd A $$ (i, j)\n\ngoal (1 subgoal):\n 1. x dvd (\\<Sum>ia = 0..<n. A $$ (i, ia) * col Q j $v ia)", "by (meson atLeastLessThan_iff dvd_mult2 dvd_sum i)"], ["proof (state)\nthis:\n  x dvd (\\<Sum>ia = 0..<n. A $$ (i, ia) * col Q j $v ia)\n\ngoal (1 subgoal):\n 1. x dvd (A * Q) $$ (i, j)", "finally"], ["proof (chain)\npicking this:\n  x dvd (A * Q) $$ (i, j)", "show ?thesis"], ["proof (prove)\nusing this:\n  x dvd (A * Q) $$ (i, j)\n\ngoal (1 subgoal):\n 1. x dvd (A * Q) $$ (i, j)", "."], ["proof (state)\nthis:\n  x dvd (A * Q) $$ (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?i < m; ?j < n\\<rbrakk>\n  \\<Longrightarrow> x dvd (A * Q) $$ (?i, ?j)\n\ngoal (1 subgoal):\n 1. \\<forall>i j.\n       i < m \\<and> j < n \\<longrightarrow> x dvd (A * Q) $$ (i, j)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i < m; ?j < n\\<rbrakk>\n  \\<Longrightarrow> x dvd (A * Q) $$ (?i, ?j)\n\ngoal (1 subgoal):\n 1. \\<forall>i j.\n       i < m \\<and> j < n \\<longrightarrow> x dvd (A * Q) $$ (i, j)", "by auto"], ["proof (state)\nthis:\n  \\<forall>i j. i < m \\<and> j < n \\<longrightarrow> x dvd (A * Q) $$ (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dvd_elements_mult_matrix_left_right:\n  assumes A: \"(A::'a::comm_ring_1 mat) \\<in> carrier_mat m n\"\n  and P: \"P \\<in> carrier_mat m m\"\n  and Q: \"Q \\<in> carrier_mat n n\"\n  and x: \"(\\<forall>i j. i<m \\<and> j<n \\<longrightarrow> x dvd A$$(i,j))\"\nshows \"(\\<forall>i j. i<m \\<and> j<n \\<longrightarrow> x dvd (P*A*Q)$$(i,j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>i j.\n       i < m \\<and> j < n \\<longrightarrow> x dvd (P * A * Q) $$ (i, j)", "using dvd_elements_mult_matrix_left[OF A P x]"], ["proof (prove)\nusing this:\n  \\<forall>i j. i < m \\<and> j < n \\<longrightarrow> x dvd (P * A) $$ (i, j)\n\ngoal (1 subgoal):\n 1. \\<forall>i j.\n       i < m \\<and> j < n \\<longrightarrow> x dvd (P * A * Q) $$ (i, j)", "by (meson P A Q dvd_elements_mult_matrix_right mult_carrier_mat)"], ["", "definition append_cols :: \"'a :: zero mat \\<Rightarrow> 'a mat \\<Rightarrow> 'a mat\" (infixr \"@\\<^sub>c\" 65)where\n  \"A @\\<^sub>c B = four_block_mat A B (0\\<^sub>m 0 (dim_col A)) (0\\<^sub>m 0 (dim_col B))\""], ["", "lemma append_cols_carrier[simp,intro]:\n  \"A \\<in> carrier_mat n a \\<Longrightarrow> B \\<in> carrier_mat n b \\<Longrightarrow> (A @\\<^sub>c B) \\<in> carrier_mat n (a+b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> carrier_mat n a; B \\<in> carrier_mat n b\\<rbrakk>\n    \\<Longrightarrow> A @\\<^sub>c B \\<in> carrier_mat n (a + b)", "unfolding append_cols_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>A \\<in> carrier_mat n a; B \\<in> carrier_mat n b\\<rbrakk>\n    \\<Longrightarrow> four_block_mat A B (0\\<^sub>m 0 (dim_col A))\n                       (0\\<^sub>m 0 (dim_col B))\n                      \\<in> carrier_mat n (a + b)", "by auto"], ["", "lemma append_cols_mult_left:\n  assumes A: \"A \\<in> carrier_mat n a\"\n  and B: \"B \\<in> carrier_mat n b\"\n  and P: \"P \\<in> carrier_mat n n\"\nshows \"P * (A @\\<^sub>c B) = (P*A) @\\<^sub>c (P*B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P * (A @\\<^sub>c B) = P * A @\\<^sub>c P * B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P * (A @\\<^sub>c B) = P * A @\\<^sub>c P * B", "let ?P = \"four_block_mat P (0\\<^sub>m n 0) (0\\<^sub>m 0 n) (0\\<^sub>m 0 0)\""], ["proof (state)\ngoal (1 subgoal):\n 1. P * (A @\\<^sub>c B) = P * A @\\<^sub>c P * B", "have \"P = ?P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P = four_block_mat P (0\\<^sub>m n 0) (0\\<^sub>m 0 n) (0\\<^sub>m 0 0)", "by (rule eq_matI, auto)"], ["proof (state)\nthis:\n  P = four_block_mat P (0\\<^sub>m n 0) (0\\<^sub>m 0 n) (0\\<^sub>m 0 0)\n\ngoal (1 subgoal):\n 1. P * (A @\\<^sub>c B) = P * A @\\<^sub>c P * B", "hence \"P * (A @\\<^sub>c B) = ?P * (A @\\<^sub>c B)\""], ["proof (prove)\nusing this:\n  P = four_block_mat P (0\\<^sub>m n 0) (0\\<^sub>m 0 n) (0\\<^sub>m 0 0)\n\ngoal (1 subgoal):\n 1. P * (A @\\<^sub>c B) =\n    four_block_mat P (0\\<^sub>m n 0) (0\\<^sub>m 0 n) (0\\<^sub>m 0 0) *\n    (A @\\<^sub>c B)", "by simp"], ["proof (state)\nthis:\n  P * (A @\\<^sub>c B) =\n  four_block_mat P (0\\<^sub>m n 0) (0\\<^sub>m 0 n) (0\\<^sub>m 0 0) *\n  (A @\\<^sub>c B)\n\ngoal (1 subgoal):\n 1. P * (A @\\<^sub>c B) = P * A @\\<^sub>c P * B", "also"], ["proof (state)\nthis:\n  P * (A @\\<^sub>c B) =\n  four_block_mat P (0\\<^sub>m n 0) (0\\<^sub>m 0 n) (0\\<^sub>m 0 0) *\n  (A @\\<^sub>c B)\n\ngoal (1 subgoal):\n 1. P * (A @\\<^sub>c B) = P * A @\\<^sub>c P * B", "have \"?P * (A @\\<^sub>c B) = four_block_mat (P * A + 0\\<^sub>m n 0 * 0\\<^sub>m 0 (dim_col A))\n  (P * B + 0\\<^sub>m n 0 * 0\\<^sub>m 0 (dim_col B)) (0\\<^sub>m 0 n * A + 0\\<^sub>m 0 0 * 0\\<^sub>m 0 (dim_col A))\n  (0\\<^sub>m 0 n * B + 0\\<^sub>m 0 0 * 0\\<^sub>m 0 (dim_col B))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. four_block_mat P (0\\<^sub>m n 0) (0\\<^sub>m 0 n) (0\\<^sub>m 0 0) *\n    (A @\\<^sub>c B) =\n    four_block_mat (P * A + 0\\<^sub>m n 0 * 0\\<^sub>m 0 (dim_col A))\n     (P * B + 0\\<^sub>m n 0 * 0\\<^sub>m 0 (dim_col B))\n     (0\\<^sub>m 0 n * A + 0\\<^sub>m 0 0 * 0\\<^sub>m 0 (dim_col A))\n     (0\\<^sub>m 0 n * B + 0\\<^sub>m 0 0 * 0\\<^sub>m 0 (dim_col B))", "unfolding append_cols_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. four_block_mat P (0\\<^sub>m n 0) (0\\<^sub>m 0 n) (0\\<^sub>m 0 0) *\n    four_block_mat A B (0\\<^sub>m 0 (dim_col A)) (0\\<^sub>m 0 (dim_col B)) =\n    four_block_mat (P * A + 0\\<^sub>m n 0 * 0\\<^sub>m 0 (dim_col A))\n     (P * B + 0\\<^sub>m n 0 * 0\\<^sub>m 0 (dim_col B))\n     (0\\<^sub>m 0 n * A + 0\\<^sub>m 0 0 * 0\\<^sub>m 0 (dim_col A))\n     (0\\<^sub>m 0 n * B + 0\\<^sub>m 0 0 * 0\\<^sub>m 0 (dim_col B))", "by (rule mult_four_block_mat, insert A B P, auto)"], ["proof (state)\nthis:\n  four_block_mat P (0\\<^sub>m n 0) (0\\<^sub>m 0 n) (0\\<^sub>m 0 0) *\n  (A @\\<^sub>c B) =\n  four_block_mat (P * A + 0\\<^sub>m n 0 * 0\\<^sub>m 0 (dim_col A))\n   (P * B + 0\\<^sub>m n 0 * 0\\<^sub>m 0 (dim_col B))\n   (0\\<^sub>m 0 n * A + 0\\<^sub>m 0 0 * 0\\<^sub>m 0 (dim_col A))\n   (0\\<^sub>m 0 n * B + 0\\<^sub>m 0 0 * 0\\<^sub>m 0 (dim_col B))\n\ngoal (1 subgoal):\n 1. P * (A @\\<^sub>c B) = P * A @\\<^sub>c P * B", "also"], ["proof (state)\nthis:\n  four_block_mat P (0\\<^sub>m n 0) (0\\<^sub>m 0 n) (0\\<^sub>m 0 0) *\n  (A @\\<^sub>c B) =\n  four_block_mat (P * A + 0\\<^sub>m n 0 * 0\\<^sub>m 0 (dim_col A))\n   (P * B + 0\\<^sub>m n 0 * 0\\<^sub>m 0 (dim_col B))\n   (0\\<^sub>m 0 n * A + 0\\<^sub>m 0 0 * 0\\<^sub>m 0 (dim_col A))\n   (0\\<^sub>m 0 n * B + 0\\<^sub>m 0 0 * 0\\<^sub>m 0 (dim_col B))\n\ngoal (1 subgoal):\n 1. P * (A @\\<^sub>c B) = P * A @\\<^sub>c P * B", "have \"... = four_block_mat (P * A) (P * B) (0\\<^sub>m 0 (dim_col (P*A))) (0\\<^sub>m 0 (dim_col (P*B)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. four_block_mat (P * A + 0\\<^sub>m n 0 * 0\\<^sub>m 0 (dim_col A))\n     (P * B + 0\\<^sub>m n 0 * 0\\<^sub>m 0 (dim_col B))\n     (0\\<^sub>m 0 n * A + 0\\<^sub>m 0 0 * 0\\<^sub>m 0 (dim_col A))\n     (0\\<^sub>m 0 n * B + 0\\<^sub>m 0 0 * 0\\<^sub>m 0 (dim_col B)) =\n    four_block_mat (P * A) (P * B) (0\\<^sub>m 0 (dim_col (P * A)))\n     (0\\<^sub>m 0 (dim_col (P * B)))", "by (rule cong_four_block_mat, insert P, auto)"], ["proof (state)\nthis:\n  four_block_mat (P * A + 0\\<^sub>m n 0 * 0\\<^sub>m 0 (dim_col A))\n   (P * B + 0\\<^sub>m n 0 * 0\\<^sub>m 0 (dim_col B))\n   (0\\<^sub>m 0 n * A + 0\\<^sub>m 0 0 * 0\\<^sub>m 0 (dim_col A))\n   (0\\<^sub>m 0 n * B + 0\\<^sub>m 0 0 * 0\\<^sub>m 0 (dim_col B)) =\n  four_block_mat (P * A) (P * B) (0\\<^sub>m 0 (dim_col (P * A)))\n   (0\\<^sub>m 0 (dim_col (P * B)))\n\ngoal (1 subgoal):\n 1. P * (A @\\<^sub>c B) = P * A @\\<^sub>c P * B", "also"], ["proof (state)\nthis:\n  four_block_mat (P * A + 0\\<^sub>m n 0 * 0\\<^sub>m 0 (dim_col A))\n   (P * B + 0\\<^sub>m n 0 * 0\\<^sub>m 0 (dim_col B))\n   (0\\<^sub>m 0 n * A + 0\\<^sub>m 0 0 * 0\\<^sub>m 0 (dim_col A))\n   (0\\<^sub>m 0 n * B + 0\\<^sub>m 0 0 * 0\\<^sub>m 0 (dim_col B)) =\n  four_block_mat (P * A) (P * B) (0\\<^sub>m 0 (dim_col (P * A)))\n   (0\\<^sub>m 0 (dim_col (P * B)))\n\ngoal (1 subgoal):\n 1. P * (A @\\<^sub>c B) = P * A @\\<^sub>c P * B", "have \"... = (P*A) @\\<^sub>c (P*B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. four_block_mat (P * A) (P * B) (0\\<^sub>m 0 (dim_col (P * A)))\n     (0\\<^sub>m 0 (dim_col (P * B))) =\n    P * A @\\<^sub>c P * B", "unfolding append_cols_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. four_block_mat (P * A) (P * B) (0\\<^sub>m 0 (dim_col (P * A)))\n     (0\\<^sub>m 0 (dim_col (P * B))) =\n    four_block_mat (P * A) (P * B) (0\\<^sub>m 0 (dim_col (P * A)))\n     (0\\<^sub>m 0 (dim_col (P * B)))", "by auto"], ["proof (state)\nthis:\n  four_block_mat (P * A) (P * B) (0\\<^sub>m 0 (dim_col (P * A)))\n   (0\\<^sub>m 0 (dim_col (P * B))) =\n  P * A @\\<^sub>c P * B\n\ngoal (1 subgoal):\n 1. P * (A @\\<^sub>c B) = P * A @\\<^sub>c P * B", "finally"], ["proof (chain)\npicking this:\n  P * (A @\\<^sub>c B) = P * A @\\<^sub>c P * B", "show ?thesis"], ["proof (prove)\nusing this:\n  P * (A @\\<^sub>c B) = P * A @\\<^sub>c P * B\n\ngoal (1 subgoal):\n 1. P * (A @\\<^sub>c B) = P * A @\\<^sub>c P * B", "."], ["proof (state)\nthis:\n  P * (A @\\<^sub>c B) = P * A @\\<^sub>c P * B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma append_cols_mult_right_id:\n  assumes A: \"(A::'a::semiring_1 mat) \\<in> carrier_mat n 1\"\n  and B: \"B \\<in> carrier_mat n (m-1)\"\n  and C: \"C = four_block_mat (1\\<^sub>m 1) (0\\<^sub>m 1 (m - 1)) (0\\<^sub>m (m - 1) 1) D\"\n  and D: \"D \\<in> carrier_mat (m-1) (m-1)\"\nshows \"(A @\\<^sub>c B) * C = A @\\<^sub>c (B * D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A @\\<^sub>c B) * C = A @\\<^sub>c B * D", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (A @\\<^sub>c B) * C = A @\\<^sub>c B * D", "let ?C = \"four_block_mat (1\\<^sub>m 1) (0\\<^sub>m 1 (m - 1)) (0\\<^sub>m (m - 1) 1) D\""], ["proof (state)\ngoal (1 subgoal):\n 1. (A @\\<^sub>c B) * C = A @\\<^sub>c B * D", "have \"(A @\\<^sub>c B) * C = (A @\\<^sub>c B) * ?C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A @\\<^sub>c B) * C =\n    (A @\\<^sub>c B) *\n    four_block_mat (1\\<^sub>m 1) (0\\<^sub>m 1 (m - 1)) (0\\<^sub>m (m - 1) 1)\n     D", "unfolding C"], ["proof (prove)\ngoal (1 subgoal):\n 1. (A @\\<^sub>c B) *\n    four_block_mat (1\\<^sub>m 1) (0\\<^sub>m 1 (m - 1)) (0\\<^sub>m (m - 1) 1)\n     D =\n    (A @\\<^sub>c B) *\n    four_block_mat (1\\<^sub>m 1) (0\\<^sub>m 1 (m - 1)) (0\\<^sub>m (m - 1) 1)\n     D", "by auto"], ["proof (state)\nthis:\n  (A @\\<^sub>c B) * C =\n  (A @\\<^sub>c B) *\n  four_block_mat (1\\<^sub>m 1) (0\\<^sub>m 1 (m - 1)) (0\\<^sub>m (m - 1) 1) D\n\ngoal (1 subgoal):\n 1. (A @\\<^sub>c B) * C = A @\\<^sub>c B * D", "also"], ["proof (state)\nthis:\n  (A @\\<^sub>c B) * C =\n  (A @\\<^sub>c B) *\n  four_block_mat (1\\<^sub>m 1) (0\\<^sub>m 1 (m - 1)) (0\\<^sub>m (m - 1) 1) D\n\ngoal (1 subgoal):\n 1. (A @\\<^sub>c B) * C = A @\\<^sub>c B * D", "have \"... = four_block_mat A B (0\\<^sub>m 0 (dim_col A)) (0\\<^sub>m 0 (dim_col B)) * ?C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A @\\<^sub>c B) *\n    four_block_mat (1\\<^sub>m 1) (0\\<^sub>m 1 (m - 1)) (0\\<^sub>m (m - 1) 1)\n     D =\n    four_block_mat A B (0\\<^sub>m 0 (dim_col A)) (0\\<^sub>m 0 (dim_col B)) *\n    four_block_mat (1\\<^sub>m 1) (0\\<^sub>m 1 (m - 1)) (0\\<^sub>m (m - 1) 1)\n     D", "unfolding append_cols_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. four_block_mat A B (0\\<^sub>m 0 (dim_col A)) (0\\<^sub>m 0 (dim_col B)) *\n    four_block_mat (1\\<^sub>m 1) (0\\<^sub>m 1 (m - 1)) (0\\<^sub>m (m - 1) 1)\n     D =\n    four_block_mat A B (0\\<^sub>m 0 (dim_col A)) (0\\<^sub>m 0 (dim_col B)) *\n    four_block_mat (1\\<^sub>m 1) (0\\<^sub>m 1 (m - 1)) (0\\<^sub>m (m - 1) 1)\n     D", "by auto"], ["proof (state)\nthis:\n  (A @\\<^sub>c B) *\n  four_block_mat (1\\<^sub>m 1) (0\\<^sub>m 1 (m - 1)) (0\\<^sub>m (m - 1) 1)\n   D =\n  four_block_mat A B (0\\<^sub>m 0 (dim_col A)) (0\\<^sub>m 0 (dim_col B)) *\n  four_block_mat (1\\<^sub>m 1) (0\\<^sub>m 1 (m - 1)) (0\\<^sub>m (m - 1) 1) D\n\ngoal (1 subgoal):\n 1. (A @\\<^sub>c B) * C = A @\\<^sub>c B * D", "also"], ["proof (state)\nthis:\n  (A @\\<^sub>c B) *\n  four_block_mat (1\\<^sub>m 1) (0\\<^sub>m 1 (m - 1)) (0\\<^sub>m (m - 1) 1)\n   D =\n  four_block_mat A B (0\\<^sub>m 0 (dim_col A)) (0\\<^sub>m 0 (dim_col B)) *\n  four_block_mat (1\\<^sub>m 1) (0\\<^sub>m 1 (m - 1)) (0\\<^sub>m (m - 1) 1) D\n\ngoal (1 subgoal):\n 1. (A @\\<^sub>c B) * C = A @\\<^sub>c B * D", "have \"... = four_block_mat (A * 1\\<^sub>m 1 + B * 0\\<^sub>m (m - 1) 1) (A * 0\\<^sub>m 1 (m - 1) + B * D)\n    (0\\<^sub>m 0 (dim_col A) * 1\\<^sub>m 1 + 0\\<^sub>m 0 (dim_col B) * 0\\<^sub>m (m - 1) 1)\n    (0\\<^sub>m 0 (dim_col A) * 0\\<^sub>m 1 (m - 1) + 0\\<^sub>m 0 (dim_col B) * D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. four_block_mat A B (0\\<^sub>m 0 (dim_col A)) (0\\<^sub>m 0 (dim_col B)) *\n    four_block_mat (1\\<^sub>m 1) (0\\<^sub>m 1 (m - 1)) (0\\<^sub>m (m - 1) 1)\n     D =\n    four_block_mat (A * 1\\<^sub>m 1 + B * 0\\<^sub>m (m - 1) 1)\n     (A * 0\\<^sub>m 1 (m - 1) + B * D)\n     (0\\<^sub>m 0 (dim_col A) * 1\\<^sub>m 1 +\n      0\\<^sub>m 0 (dim_col B) * 0\\<^sub>m (m - 1) 1)\n     (0\\<^sub>m 0 (dim_col A) * 0\\<^sub>m 1 (m - 1) +\n      0\\<^sub>m 0 (dim_col B) * D)", "by (rule mult_four_block_mat, insert assms, auto)"], ["proof (state)\nthis:\n  four_block_mat A B (0\\<^sub>m 0 (dim_col A)) (0\\<^sub>m 0 (dim_col B)) *\n  four_block_mat (1\\<^sub>m 1) (0\\<^sub>m 1 (m - 1)) (0\\<^sub>m (m - 1) 1)\n   D =\n  four_block_mat (A * 1\\<^sub>m 1 + B * 0\\<^sub>m (m - 1) 1)\n   (A * 0\\<^sub>m 1 (m - 1) + B * D)\n   (0\\<^sub>m 0 (dim_col A) * 1\\<^sub>m 1 +\n    0\\<^sub>m 0 (dim_col B) * 0\\<^sub>m (m - 1) 1)\n   (0\\<^sub>m 0 (dim_col A) * 0\\<^sub>m 1 (m - 1) +\n    0\\<^sub>m 0 (dim_col B) * D)\n\ngoal (1 subgoal):\n 1. (A @\\<^sub>c B) * C = A @\\<^sub>c B * D", "also"], ["proof (state)\nthis:\n  four_block_mat A B (0\\<^sub>m 0 (dim_col A)) (0\\<^sub>m 0 (dim_col B)) *\n  four_block_mat (1\\<^sub>m 1) (0\\<^sub>m 1 (m - 1)) (0\\<^sub>m (m - 1) 1)\n   D =\n  four_block_mat (A * 1\\<^sub>m 1 + B * 0\\<^sub>m (m - 1) 1)\n   (A * 0\\<^sub>m 1 (m - 1) + B * D)\n   (0\\<^sub>m 0 (dim_col A) * 1\\<^sub>m 1 +\n    0\\<^sub>m 0 (dim_col B) * 0\\<^sub>m (m - 1) 1)\n   (0\\<^sub>m 0 (dim_col A) * 0\\<^sub>m 1 (m - 1) +\n    0\\<^sub>m 0 (dim_col B) * D)\n\ngoal (1 subgoal):\n 1. (A @\\<^sub>c B) * C = A @\\<^sub>c B * D", "have \"... = four_block_mat A (B * D) (0\\<^sub>m 0 (dim_col A)) (0\\<^sub>m 0 (dim_col (B*D)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. four_block_mat (A * 1\\<^sub>m 1 + B * 0\\<^sub>m (m - 1) 1)\n     (A * 0\\<^sub>m 1 (m - 1) + B * D)\n     (0\\<^sub>m 0 (dim_col A) * 1\\<^sub>m 1 +\n      0\\<^sub>m 0 (dim_col B) * 0\\<^sub>m (m - 1) 1)\n     (0\\<^sub>m 0 (dim_col A) * 0\\<^sub>m 1 (m - 1) +\n      0\\<^sub>m 0 (dim_col B) * D) =\n    four_block_mat A (B * D) (0\\<^sub>m 0 (dim_col A))\n     (0\\<^sub>m 0 (dim_col (B * D)))", "by (rule cong_four_block_mat, insert assms, auto)"], ["proof (state)\nthis:\n  four_block_mat (A * 1\\<^sub>m 1 + B * 0\\<^sub>m (m - 1) 1)\n   (A * 0\\<^sub>m 1 (m - 1) + B * D)\n   (0\\<^sub>m 0 (dim_col A) * 1\\<^sub>m 1 +\n    0\\<^sub>m 0 (dim_col B) * 0\\<^sub>m (m - 1) 1)\n   (0\\<^sub>m 0 (dim_col A) * 0\\<^sub>m 1 (m - 1) +\n    0\\<^sub>m 0 (dim_col B) * D) =\n  four_block_mat A (B * D) (0\\<^sub>m 0 (dim_col A))\n   (0\\<^sub>m 0 (dim_col (B * D)))\n\ngoal (1 subgoal):\n 1. (A @\\<^sub>c B) * C = A @\\<^sub>c B * D", "also"], ["proof (state)\nthis:\n  four_block_mat (A * 1\\<^sub>m 1 + B * 0\\<^sub>m (m - 1) 1)\n   (A * 0\\<^sub>m 1 (m - 1) + B * D)\n   (0\\<^sub>m 0 (dim_col A) * 1\\<^sub>m 1 +\n    0\\<^sub>m 0 (dim_col B) * 0\\<^sub>m (m - 1) 1)\n   (0\\<^sub>m 0 (dim_col A) * 0\\<^sub>m 1 (m - 1) +\n    0\\<^sub>m 0 (dim_col B) * D) =\n  four_block_mat A (B * D) (0\\<^sub>m 0 (dim_col A))\n   (0\\<^sub>m 0 (dim_col (B * D)))\n\ngoal (1 subgoal):\n 1. (A @\\<^sub>c B) * C = A @\\<^sub>c B * D", "have \"... = A @\\<^sub>c (B * D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. four_block_mat A (B * D) (0\\<^sub>m 0 (dim_col A))\n     (0\\<^sub>m 0 (dim_col (B * D))) =\n    A @\\<^sub>c B * D", "unfolding append_cols_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. four_block_mat A (B * D) (0\\<^sub>m 0 (dim_col A))\n     (0\\<^sub>m 0 (dim_col (B * D))) =\n    four_block_mat A (B * D) (0\\<^sub>m 0 (dim_col A))\n     (0\\<^sub>m 0 (dim_col (B * D)))", "by auto"], ["proof (state)\nthis:\n  four_block_mat A (B * D) (0\\<^sub>m 0 (dim_col A))\n   (0\\<^sub>m 0 (dim_col (B * D))) =\n  A @\\<^sub>c B * D\n\ngoal (1 subgoal):\n 1. (A @\\<^sub>c B) * C = A @\\<^sub>c B * D", "finally"], ["proof (chain)\npicking this:\n  (A @\\<^sub>c B) * C = A @\\<^sub>c B * D", "show ?thesis"], ["proof (prove)\nusing this:\n  (A @\\<^sub>c B) * C = A @\\<^sub>c B * D\n\ngoal (1 subgoal):\n 1. (A @\\<^sub>c B) * C = A @\\<^sub>c B * D", "."], ["proof (state)\nthis:\n  (A @\\<^sub>c B) * C = A @\\<^sub>c B * D\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma append_cols_mult_right_id2:\n assumes A: \"(A::'a::semiring_1 mat) \\<in> carrier_mat n a\"\n   and B: \"B \\<in> carrier_mat n b\"\n   and C: \"C = four_block_mat D (0\\<^sub>m a b) (0\\<^sub>m b a) (1\\<^sub>m b)\"\n   and D: \"D \\<in> carrier_mat a a\"\nshows \"(A @\\<^sub>c B) * C = (A * D) @\\<^sub>c B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A @\\<^sub>c B) * C = A * D @\\<^sub>c B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (A @\\<^sub>c B) * C = A * D @\\<^sub>c B", "let ?C = \"four_block_mat D (0\\<^sub>m a b) (0\\<^sub>m b a) (1\\<^sub>m b)\""], ["proof (state)\ngoal (1 subgoal):\n 1. (A @\\<^sub>c B) * C = A * D @\\<^sub>c B", "have \"(A @\\<^sub>c B) * C = (A @\\<^sub>c B) * ?C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A @\\<^sub>c B) * C =\n    (A @\\<^sub>c B) *\n    four_block_mat D (0\\<^sub>m a b) (0\\<^sub>m b a) (1\\<^sub>m b)", "unfolding C"], ["proof (prove)\ngoal (1 subgoal):\n 1. (A @\\<^sub>c B) *\n    four_block_mat D (0\\<^sub>m a b) (0\\<^sub>m b a) (1\\<^sub>m b) =\n    (A @\\<^sub>c B) *\n    four_block_mat D (0\\<^sub>m a b) (0\\<^sub>m b a) (1\\<^sub>m b)", "by auto"], ["proof (state)\nthis:\n  (A @\\<^sub>c B) * C =\n  (A @\\<^sub>c B) *\n  four_block_mat D (0\\<^sub>m a b) (0\\<^sub>m b a) (1\\<^sub>m b)\n\ngoal (1 subgoal):\n 1. (A @\\<^sub>c B) * C = A * D @\\<^sub>c B", "also"], ["proof (state)\nthis:\n  (A @\\<^sub>c B) * C =\n  (A @\\<^sub>c B) *\n  four_block_mat D (0\\<^sub>m a b) (0\\<^sub>m b a) (1\\<^sub>m b)\n\ngoal (1 subgoal):\n 1. (A @\\<^sub>c B) * C = A * D @\\<^sub>c B", "have \"... = four_block_mat A B (0\\<^sub>m 0 a) (0\\<^sub>m 0 b) * ?C\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A @\\<^sub>c B) *\n    four_block_mat D (0\\<^sub>m a b) (0\\<^sub>m b a) (1\\<^sub>m b) =\n    four_block_mat A B (0\\<^sub>m 0 a) (0\\<^sub>m 0 b) *\n    four_block_mat D (0\\<^sub>m a b) (0\\<^sub>m b a) (1\\<^sub>m b)", "unfolding append_cols_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. four_block_mat A B (0\\<^sub>m 0 (dim_col A)) (0\\<^sub>m 0 (dim_col B)) *\n    four_block_mat D (0\\<^sub>m a b) (0\\<^sub>m b a) (1\\<^sub>m b) =\n    four_block_mat A B (0\\<^sub>m 0 a) (0\\<^sub>m 0 b) *\n    four_block_mat D (0\\<^sub>m a b) (0\\<^sub>m b a) (1\\<^sub>m b)", "using A B"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat n a\n  B \\<in> carrier_mat n b\n\ngoal (1 subgoal):\n 1. four_block_mat A B (0\\<^sub>m 0 (dim_col A)) (0\\<^sub>m 0 (dim_col B)) *\n    four_block_mat D (0\\<^sub>m a b) (0\\<^sub>m b a) (1\\<^sub>m b) =\n    four_block_mat A B (0\\<^sub>m 0 a) (0\\<^sub>m 0 b) *\n    four_block_mat D (0\\<^sub>m a b) (0\\<^sub>m b a) (1\\<^sub>m b)", "by auto"], ["proof (state)\nthis:\n  (A @\\<^sub>c B) *\n  four_block_mat D (0\\<^sub>m a b) (0\\<^sub>m b a) (1\\<^sub>m b) =\n  four_block_mat A B (0\\<^sub>m 0 a) (0\\<^sub>m 0 b) *\n  four_block_mat D (0\\<^sub>m a b) (0\\<^sub>m b a) (1\\<^sub>m b)\n\ngoal (1 subgoal):\n 1. (A @\\<^sub>c B) * C = A * D @\\<^sub>c B", "also"], ["proof (state)\nthis:\n  (A @\\<^sub>c B) *\n  four_block_mat D (0\\<^sub>m a b) (0\\<^sub>m b a) (1\\<^sub>m b) =\n  four_block_mat A B (0\\<^sub>m 0 a) (0\\<^sub>m 0 b) *\n  four_block_mat D (0\\<^sub>m a b) (0\\<^sub>m b a) (1\\<^sub>m b)\n\ngoal (1 subgoal):\n 1. (A @\\<^sub>c B) * C = A * D @\\<^sub>c B", "have \"... = four_block_mat (A * D + B * 0\\<^sub>m b a) (A * 0\\<^sub>m a b + B * 1\\<^sub>m b)\n    (0\\<^sub>m 0 a * D + 0\\<^sub>m 0 b * 0\\<^sub>m b a) (0\\<^sub>m 0 a * 0\\<^sub>m a b + 0\\<^sub>m 0 b * 1\\<^sub>m b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. four_block_mat A B (0\\<^sub>m 0 a) (0\\<^sub>m 0 b) *\n    four_block_mat D (0\\<^sub>m a b) (0\\<^sub>m b a) (1\\<^sub>m b) =\n    four_block_mat (A * D + B * 0\\<^sub>m b a)\n     (A * 0\\<^sub>m a b + B * 1\\<^sub>m b)\n     (0\\<^sub>m 0 a * D + 0\\<^sub>m 0 b * 0\\<^sub>m b a)\n     (0\\<^sub>m 0 a * 0\\<^sub>m a b + 0\\<^sub>m 0 b * 1\\<^sub>m b)", "by (rule mult_four_block_mat, insert A B C D, auto)"], ["proof (state)\nthis:\n  four_block_mat A B (0\\<^sub>m 0 a) (0\\<^sub>m 0 b) *\n  four_block_mat D (0\\<^sub>m a b) (0\\<^sub>m b a) (1\\<^sub>m b) =\n  four_block_mat (A * D + B * 0\\<^sub>m b a)\n   (A * 0\\<^sub>m a b + B * 1\\<^sub>m b)\n   (0\\<^sub>m 0 a * D + 0\\<^sub>m 0 b * 0\\<^sub>m b a)\n   (0\\<^sub>m 0 a * 0\\<^sub>m a b + 0\\<^sub>m 0 b * 1\\<^sub>m b)\n\ngoal (1 subgoal):\n 1. (A @\\<^sub>c B) * C = A * D @\\<^sub>c B", "also"], ["proof (state)\nthis:\n  four_block_mat A B (0\\<^sub>m 0 a) (0\\<^sub>m 0 b) *\n  four_block_mat D (0\\<^sub>m a b) (0\\<^sub>m b a) (1\\<^sub>m b) =\n  four_block_mat (A * D + B * 0\\<^sub>m b a)\n   (A * 0\\<^sub>m a b + B * 1\\<^sub>m b)\n   (0\\<^sub>m 0 a * D + 0\\<^sub>m 0 b * 0\\<^sub>m b a)\n   (0\\<^sub>m 0 a * 0\\<^sub>m a b + 0\\<^sub>m 0 b * 1\\<^sub>m b)\n\ngoal (1 subgoal):\n 1. (A @\\<^sub>c B) * C = A * D @\\<^sub>c B", "have \"... = four_block_mat (A * D) B (0\\<^sub>m 0 (dim_col (A*D))) (0\\<^sub>m 0 (dim_col B))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. four_block_mat (A * D + B * 0\\<^sub>m b a)\n     (A * 0\\<^sub>m a b + B * 1\\<^sub>m b)\n     (0\\<^sub>m 0 a * D + 0\\<^sub>m 0 b * 0\\<^sub>m b a)\n     (0\\<^sub>m 0 a * 0\\<^sub>m a b + 0\\<^sub>m 0 b * 1\\<^sub>m b) =\n    four_block_mat (A * D) B (0\\<^sub>m 0 (dim_col (A * D)))\n     (0\\<^sub>m 0 (dim_col B))", "by (rule cong_four_block_mat, insert assms, auto)"], ["proof (state)\nthis:\n  four_block_mat (A * D + B * 0\\<^sub>m b a)\n   (A * 0\\<^sub>m a b + B * 1\\<^sub>m b)\n   (0\\<^sub>m 0 a * D + 0\\<^sub>m 0 b * 0\\<^sub>m b a)\n   (0\\<^sub>m 0 a * 0\\<^sub>m a b + 0\\<^sub>m 0 b * 1\\<^sub>m b) =\n  four_block_mat (A * D) B (0\\<^sub>m 0 (dim_col (A * D)))\n   (0\\<^sub>m 0 (dim_col B))\n\ngoal (1 subgoal):\n 1. (A @\\<^sub>c B) * C = A * D @\\<^sub>c B", "also"], ["proof (state)\nthis:\n  four_block_mat (A * D + B * 0\\<^sub>m b a)\n   (A * 0\\<^sub>m a b + B * 1\\<^sub>m b)\n   (0\\<^sub>m 0 a * D + 0\\<^sub>m 0 b * 0\\<^sub>m b a)\n   (0\\<^sub>m 0 a * 0\\<^sub>m a b + 0\\<^sub>m 0 b * 1\\<^sub>m b) =\n  four_block_mat (A * D) B (0\\<^sub>m 0 (dim_col (A * D)))\n   (0\\<^sub>m 0 (dim_col B))\n\ngoal (1 subgoal):\n 1. (A @\\<^sub>c B) * C = A * D @\\<^sub>c B", "have \"... = (A * D) @\\<^sub>c B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. four_block_mat (A * D) B (0\\<^sub>m 0 (dim_col (A * D)))\n     (0\\<^sub>m 0 (dim_col B)) =\n    A * D @\\<^sub>c B", "unfolding append_cols_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. four_block_mat (A * D) B (0\\<^sub>m 0 (dim_col (A * D)))\n     (0\\<^sub>m 0 (dim_col B)) =\n    four_block_mat (A * D) B (0\\<^sub>m 0 (dim_col (A * D)))\n     (0\\<^sub>m 0 (dim_col B))", "by auto"], ["proof (state)\nthis:\n  four_block_mat (A * D) B (0\\<^sub>m 0 (dim_col (A * D)))\n   (0\\<^sub>m 0 (dim_col B)) =\n  A * D @\\<^sub>c B\n\ngoal (1 subgoal):\n 1. (A @\\<^sub>c B) * C = A * D @\\<^sub>c B", "finally"], ["proof (chain)\npicking this:\n  (A @\\<^sub>c B) * C = A * D @\\<^sub>c B", "show ?thesis"], ["proof (prove)\nusing this:\n  (A @\\<^sub>c B) * C = A * D @\\<^sub>c B\n\ngoal (1 subgoal):\n 1. (A @\\<^sub>c B) * C = A * D @\\<^sub>c B", "."], ["proof (state)\nthis:\n  (A @\\<^sub>c B) * C = A * D @\\<^sub>c B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma append_cols_nth:\n  assumes A: \"A \\<in> carrier_mat n a\"\n  and B: \"B \\<in> carrier_mat n b\"\n  and i: \"i<n\" and j: \"j < a + b\"\nshows \"(A @\\<^sub>c B) $$ (i, j) = (if j < dim_col A then A $$(i,j) else B$$(i,j-a))\" (is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (A @\\<^sub>c B) $$ (i, j) =\n    (if j < dim_col A then A $$ (i, j) else B $$ (i, j - a))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (A @\\<^sub>c B) $$ (i, j) =\n    (if j < dim_col A then A $$ (i, j) else B $$ (i, j - a))", "let ?C = \"(0\\<^sub>m 0 (dim_col A))\""], ["proof (state)\ngoal (1 subgoal):\n 1. (A @\\<^sub>c B) $$ (i, j) =\n    (if j < dim_col A then A $$ (i, j) else B $$ (i, j - a))", "let ?D = \"(0\\<^sub>m 0 (dim_col B))\""], ["proof (state)\ngoal (1 subgoal):\n 1. (A @\\<^sub>c B) $$ (i, j) =\n    (if j < dim_col A then A $$ (i, j) else B $$ (i, j - a))", "have i2: \"i < dim_row A + dim_row ?D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < dim_row A + dim_row (0\\<^sub>m 0 (dim_col B))", "using i A"], ["proof (prove)\nusing this:\n  i < n\n  A \\<in> carrier_mat n a\n\ngoal (1 subgoal):\n 1. i < dim_row A + dim_row (0\\<^sub>m 0 (dim_col B))", "by auto"], ["proof (state)\nthis:\n  i < dim_row A + dim_row (0\\<^sub>m 0 (dim_col B))\n\ngoal (1 subgoal):\n 1. (A @\\<^sub>c B) $$ (i, j) =\n    (if j < dim_col A then A $$ (i, j) else B $$ (i, j - a))", "have j2: \"j < dim_col A + dim_col (0\\<^sub>m 0 (dim_col B))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j < dim_col A + dim_col (0\\<^sub>m 0 (dim_col B))", "using j B A"], ["proof (prove)\nusing this:\n  j < a + b\n  B \\<in> carrier_mat n b\n  A \\<in> carrier_mat n a\n\ngoal (1 subgoal):\n 1. j < dim_col A + dim_col (0\\<^sub>m 0 (dim_col B))", "by auto"], ["proof (state)\nthis:\n  j < dim_col A + dim_col (0\\<^sub>m 0 (dim_col B))\n\ngoal (1 subgoal):\n 1. (A @\\<^sub>c B) $$ (i, j) =\n    (if j < dim_col A then A $$ (i, j) else B $$ (i, j - a))", "have \"(A @\\<^sub>c B) $$ (i, j) = four_block_mat A B ?C ?D $$ (i, j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A @\\<^sub>c B) $$ (i, j) =\n    four_block_mat A B (0\\<^sub>m 0 (dim_col A))\n     (0\\<^sub>m 0 (dim_col B)) $$\n    (i, j)", "unfolding append_cols_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. four_block_mat A B (0\\<^sub>m 0 (dim_col A))\n     (0\\<^sub>m 0 (dim_col B)) $$\n    (i, j) =\n    four_block_mat A B (0\\<^sub>m 0 (dim_col A))\n     (0\\<^sub>m 0 (dim_col B)) $$\n    (i, j)", "by auto"], ["proof (state)\nthis:\n  (A @\\<^sub>c B) $$ (i, j) =\n  four_block_mat A B (0\\<^sub>m 0 (dim_col A)) (0\\<^sub>m 0 (dim_col B)) $$\n  (i, j)\n\ngoal (1 subgoal):\n 1. (A @\\<^sub>c B) $$ (i, j) =\n    (if j < dim_col A then A $$ (i, j) else B $$ (i, j - a))", "also"], ["proof (state)\nthis:\n  (A @\\<^sub>c B) $$ (i, j) =\n  four_block_mat A B (0\\<^sub>m 0 (dim_col A)) (0\\<^sub>m 0 (dim_col B)) $$\n  (i, j)\n\ngoal (1 subgoal):\n 1. (A @\\<^sub>c B) $$ (i, j) =\n    (if j < dim_col A then A $$ (i, j) else B $$ (i, j - a))", "have \"... = (if i < dim_row A then if j < dim_col A then A $$ (i, j)\n  else B $$ (i, j - dim_col A) else if j < dim_col A then ?C $$ (i - dim_row A, j)\n  else 0\\<^sub>m 0 (dim_col B) $$ (i - dim_row A, j - dim_col A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. four_block_mat A B (0\\<^sub>m 0 (dim_col A))\n     (0\\<^sub>m 0 (dim_col B)) $$\n    (i, j) =\n    (if i < dim_row A\n     then if j < dim_col A then A $$ (i, j) else B $$ (i, j - dim_col A)\n     else if j < dim_col A\n          then 0\\<^sub>m 0 (dim_col A) $$ (i - dim_row A, j)\n          else 0\\<^sub>m 0 (dim_col B) $$ (i - dim_row A, j - dim_col A))", "by (rule index_mat_four_block(1)[OF i2 j2])"], ["proof (state)\nthis:\n  four_block_mat A B (0\\<^sub>m 0 (dim_col A)) (0\\<^sub>m 0 (dim_col B)) $$\n  (i, j) =\n  (if i < dim_row A\n   then if j < dim_col A then A $$ (i, j) else B $$ (i, j - dim_col A)\n   else if j < dim_col A then 0\\<^sub>m 0 (dim_col A) $$ (i - dim_row A, j)\n        else 0\\<^sub>m 0 (dim_col B) $$ (i - dim_row A, j - dim_col A))\n\ngoal (1 subgoal):\n 1. (A @\\<^sub>c B) $$ (i, j) =\n    (if j < dim_col A then A $$ (i, j) else B $$ (i, j - a))", "also"], ["proof (state)\nthis:\n  four_block_mat A B (0\\<^sub>m 0 (dim_col A)) (0\\<^sub>m 0 (dim_col B)) $$\n  (i, j) =\n  (if i < dim_row A\n   then if j < dim_col A then A $$ (i, j) else B $$ (i, j - dim_col A)\n   else if j < dim_col A then 0\\<^sub>m 0 (dim_col A) $$ (i - dim_row A, j)\n        else 0\\<^sub>m 0 (dim_col B) $$ (i - dim_row A, j - dim_col A))\n\ngoal (1 subgoal):\n 1. (A @\\<^sub>c B) $$ (i, j) =\n    (if j < dim_col A then A $$ (i, j) else B $$ (i, j - a))", "have \"... = ?rhs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (if i < dim_row A\n     then if j < dim_col A then A $$ (i, j) else B $$ (i, j - dim_col A)\n     else if j < dim_col A\n          then 0\\<^sub>m 0 (dim_col A) $$ (i - dim_row A, j)\n          else 0\\<^sub>m 0 (dim_col B) $$ (i - dim_row A, j - dim_col A)) =\n    (if j < dim_col A then A $$ (i, j) else B $$ (i, j - a))", "using i A"], ["proof (prove)\nusing this:\n  i < n\n  A \\<in> carrier_mat n a\n\ngoal (1 subgoal):\n 1. (if i < dim_row A\n     then if j < dim_col A then A $$ (i, j) else B $$ (i, j - dim_col A)\n     else if j < dim_col A\n          then 0\\<^sub>m 0 (dim_col A) $$ (i - dim_row A, j)\n          else 0\\<^sub>m 0 (dim_col B) $$ (i - dim_row A, j - dim_col A)) =\n    (if j < dim_col A then A $$ (i, j) else B $$ (i, j - a))", "by auto"], ["proof (state)\nthis:\n  (if i < dim_row A\n   then if j < dim_col A then A $$ (i, j) else B $$ (i, j - dim_col A)\n   else if j < dim_col A then 0\\<^sub>m 0 (dim_col A) $$ (i - dim_row A, j)\n        else 0\\<^sub>m 0 (dim_col B) $$ (i - dim_row A, j - dim_col A)) =\n  (if j < dim_col A then A $$ (i, j) else B $$ (i, j - a))\n\ngoal (1 subgoal):\n 1. (A @\\<^sub>c B) $$ (i, j) =\n    (if j < dim_col A then A $$ (i, j) else B $$ (i, j - a))", "finally"], ["proof (chain)\npicking this:\n  (A @\\<^sub>c B) $$ (i, j) =\n  (if j < dim_col A then A $$ (i, j) else B $$ (i, j - a))", "show ?thesis"], ["proof (prove)\nusing this:\n  (A @\\<^sub>c B) $$ (i, j) =\n  (if j < dim_col A then A $$ (i, j) else B $$ (i, j - a))\n\ngoal (1 subgoal):\n 1. (A @\\<^sub>c B) $$ (i, j) =\n    (if j < dim_col A then A $$ (i, j) else B $$ (i, j - a))", "."], ["proof (state)\nthis:\n  (A @\\<^sub>c B) $$ (i, j) =\n  (if j < dim_col A then A $$ (i, j) else B $$ (i, j - a))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma append_cols_split:\n  assumes d: \"dim_col A > 0\"\n  shows \"A = mat_of_cols (dim_row A) [col A 0] @\\<^sub>c\n             mat_of_cols (dim_row A) (map (col A) [1..<dim_col A])\" (is \"?lhs = ?A1 @\\<^sub>c ?A2\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. A =\n    mat_of_cols (dim_row A) [col A 0] @\\<^sub>c\n    mat_of_cols (dim_row A) (map (col A) [1..<dim_col A])", "proof (rule eq_matI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (mat_of_cols (dim_row A) [col A 0] @\\<^sub>c\n                      mat_of_cols (dim_row A)\n                       (map (col A) [1..<dim_col A]));\n        j < dim_col\n             (mat_of_cols (dim_row A) [col A 0] @\\<^sub>c\n              mat_of_cols (dim_row A)\n               (map (col A) [1..<dim_col A]))\\<rbrakk>\n       \\<Longrightarrow> A $$ (i, j) =\n                         (mat_of_cols (dim_row A) [col A 0] @\\<^sub>c\n                          mat_of_cols (dim_row A)\n                           (map (col A) [1..<dim_col A])) $$\n                         (i, j)\n 2. dim_row A =\n    dim_row\n     (mat_of_cols (dim_row A) [col A 0] @\\<^sub>c\n      mat_of_cols (dim_row A) (map (col A) [1..<dim_col A]))\n 3. dim_col A =\n    dim_col\n     (mat_of_cols (dim_row A) [col A 0] @\\<^sub>c\n      mat_of_cols (dim_row A) (map (col A) [1..<dim_col A]))", "fix i j"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (mat_of_cols (dim_row A) [col A 0] @\\<^sub>c\n                      mat_of_cols (dim_row A)\n                       (map (col A) [1..<dim_col A]));\n        j < dim_col\n             (mat_of_cols (dim_row A) [col A 0] @\\<^sub>c\n              mat_of_cols (dim_row A)\n               (map (col A) [1..<dim_col A]))\\<rbrakk>\n       \\<Longrightarrow> A $$ (i, j) =\n                         (mat_of_cols (dim_row A) [col A 0] @\\<^sub>c\n                          mat_of_cols (dim_row A)\n                           (map (col A) [1..<dim_col A])) $$\n                         (i, j)\n 2. dim_row A =\n    dim_row\n     (mat_of_cols (dim_row A) [col A 0] @\\<^sub>c\n      mat_of_cols (dim_row A) (map (col A) [1..<dim_col A]))\n 3. dim_col A =\n    dim_col\n     (mat_of_cols (dim_row A) [col A 0] @\\<^sub>c\n      mat_of_cols (dim_row A) (map (col A) [1..<dim_col A]))", "assume i: \"i < dim_row (?A1 @\\<^sub>c ?A2)\" and j: \"j < dim_col (?A1 @\\<^sub>c ?A2)\""], ["proof (state)\nthis:\n  i < dim_row\n       (mat_of_cols (dim_row A) [col A 0] @\\<^sub>c\n        mat_of_cols (dim_row A) (map (col A) [1..<dim_col A]))\n  j < dim_col\n       (mat_of_cols (dim_row A) [col A 0] @\\<^sub>c\n        mat_of_cols (dim_row A) (map (col A) [1..<dim_col A]))\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (mat_of_cols (dim_row A) [col A 0] @\\<^sub>c\n                      mat_of_cols (dim_row A)\n                       (map (col A) [1..<dim_col A]));\n        j < dim_col\n             (mat_of_cols (dim_row A) [col A 0] @\\<^sub>c\n              mat_of_cols (dim_row A)\n               (map (col A) [1..<dim_col A]))\\<rbrakk>\n       \\<Longrightarrow> A $$ (i, j) =\n                         (mat_of_cols (dim_row A) [col A 0] @\\<^sub>c\n                          mat_of_cols (dim_row A)\n                           (map (col A) [1..<dim_col A])) $$\n                         (i, j)\n 2. dim_row A =\n    dim_row\n     (mat_of_cols (dim_row A) [col A 0] @\\<^sub>c\n      mat_of_cols (dim_row A) (map (col A) [1..<dim_col A]))\n 3. dim_col A =\n    dim_col\n     (mat_of_cols (dim_row A) [col A 0] @\\<^sub>c\n      mat_of_cols (dim_row A) (map (col A) [1..<dim_col A]))", "have \"(?A1 @\\<^sub>c ?A2) $$ (i, j) = (if j < dim_col ?A1 then ?A1 $$(i,j) else ?A2$$(i,j-(dim_col ?A1)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (mat_of_cols (dim_row A) [col A 0] @\\<^sub>c\n     mat_of_cols (dim_row A) (map (col A) [1..<dim_col A])) $$\n    (i, j) =\n    (if j < dim_col (mat_of_cols (dim_row A) [col A 0])\n     then mat_of_cols (dim_row A) [col A 0] $$ (i, j)\n     else mat_of_cols (dim_row A) (map (col A) [1..<dim_col A]) $$\n          (i, j - dim_col (mat_of_cols (dim_row A) [col A 0])))", "by (rule append_cols_nth, insert i j, auto simp add: append_cols_def)"], ["proof (state)\nthis:\n  (mat_of_cols (dim_row A) [col A 0] @\\<^sub>c\n   mat_of_cols (dim_row A) (map (col A) [1..<dim_col A])) $$\n  (i, j) =\n  (if j < dim_col (mat_of_cols (dim_row A) [col A 0])\n   then mat_of_cols (dim_row A) [col A 0] $$ (i, j)\n   else mat_of_cols (dim_row A) (map (col A) [1..<dim_col A]) $$\n        (i, j - dim_col (mat_of_cols (dim_row A) [col A 0])))\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (mat_of_cols (dim_row A) [col A 0] @\\<^sub>c\n                      mat_of_cols (dim_row A)\n                       (map (col A) [1..<dim_col A]));\n        j < dim_col\n             (mat_of_cols (dim_row A) [col A 0] @\\<^sub>c\n              mat_of_cols (dim_row A)\n               (map (col A) [1..<dim_col A]))\\<rbrakk>\n       \\<Longrightarrow> A $$ (i, j) =\n                         (mat_of_cols (dim_row A) [col A 0] @\\<^sub>c\n                          mat_of_cols (dim_row A)\n                           (map (col A) [1..<dim_col A])) $$\n                         (i, j)\n 2. dim_row A =\n    dim_row\n     (mat_of_cols (dim_row A) [col A 0] @\\<^sub>c\n      mat_of_cols (dim_row A) (map (col A) [1..<dim_col A]))\n 3. dim_col A =\n    dim_col\n     (mat_of_cols (dim_row A) [col A 0] @\\<^sub>c\n      mat_of_cols (dim_row A) (map (col A) [1..<dim_col A]))", "also"], ["proof (state)\nthis:\n  (mat_of_cols (dim_row A) [col A 0] @\\<^sub>c\n   mat_of_cols (dim_row A) (map (col A) [1..<dim_col A])) $$\n  (i, j) =\n  (if j < dim_col (mat_of_cols (dim_row A) [col A 0])\n   then mat_of_cols (dim_row A) [col A 0] $$ (i, j)\n   else mat_of_cols (dim_row A) (map (col A) [1..<dim_col A]) $$\n        (i, j - dim_col (mat_of_cols (dim_row A) [col A 0])))\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (mat_of_cols (dim_row A) [col A 0] @\\<^sub>c\n                      mat_of_cols (dim_row A)\n                       (map (col A) [1..<dim_col A]));\n        j < dim_col\n             (mat_of_cols (dim_row A) [col A 0] @\\<^sub>c\n              mat_of_cols (dim_row A)\n               (map (col A) [1..<dim_col A]))\\<rbrakk>\n       \\<Longrightarrow> A $$ (i, j) =\n                         (mat_of_cols (dim_row A) [col A 0] @\\<^sub>c\n                          mat_of_cols (dim_row A)\n                           (map (col A) [1..<dim_col A])) $$\n                         (i, j)\n 2. dim_row A =\n    dim_row\n     (mat_of_cols (dim_row A) [col A 0] @\\<^sub>c\n      mat_of_cols (dim_row A) (map (col A) [1..<dim_col A]))\n 3. dim_col A =\n    dim_col\n     (mat_of_cols (dim_row A) [col A 0] @\\<^sub>c\n      mat_of_cols (dim_row A) (map (col A) [1..<dim_col A]))", "have \"... = A $$ (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (if j < dim_col (mat_of_cols (dim_row A) [col A 0])\n     then mat_of_cols (dim_row A) [col A 0] $$ (i, j)\n     else mat_of_cols (dim_row A) (map (col A) [1..<dim_col A]) $$\n          (i, j - dim_col (mat_of_cols (dim_row A) [col A 0]))) =\n    A $$ (i, j)", "proof (cases \"j< dim_col ?A1\")"], ["proof (state)\ngoal (2 subgoals):\n 1. j < dim_col (mat_of_cols (dim_row A) [col A 0]) \\<Longrightarrow>\n    (if j < dim_col (mat_of_cols (dim_row A) [col A 0])\n     then mat_of_cols (dim_row A) [col A 0] $$ (i, j)\n     else mat_of_cols (dim_row A) (map (col A) [1..<dim_col A]) $$\n          (i, j - dim_col (mat_of_cols (dim_row A) [col A 0]))) =\n    A $$ (i, j)\n 2. \\<not> j < dim_col (mat_of_cols (dim_row A) [col A 0]) \\<Longrightarrow>\n    (if j < dim_col (mat_of_cols (dim_row A) [col A 0])\n     then mat_of_cols (dim_row A) [col A 0] $$ (i, j)\n     else mat_of_cols (dim_row A) (map (col A) [1..<dim_col A]) $$\n          (i, j - dim_col (mat_of_cols (dim_row A) [col A 0]))) =\n    A $$ (i, j)", "case True"], ["proof (state)\nthis:\n  j < dim_col (mat_of_cols (dim_row A) [col A 0])\n\ngoal (2 subgoals):\n 1. j < dim_col (mat_of_cols (dim_row A) [col A 0]) \\<Longrightarrow>\n    (if j < dim_col (mat_of_cols (dim_row A) [col A 0])\n     then mat_of_cols (dim_row A) [col A 0] $$ (i, j)\n     else mat_of_cols (dim_row A) (map (col A) [1..<dim_col A]) $$\n          (i, j - dim_col (mat_of_cols (dim_row A) [col A 0]))) =\n    A $$ (i, j)\n 2. \\<not> j < dim_col (mat_of_cols (dim_row A) [col A 0]) \\<Longrightarrow>\n    (if j < dim_col (mat_of_cols (dim_row A) [col A 0])\n     then mat_of_cols (dim_row A) [col A 0] $$ (i, j)\n     else mat_of_cols (dim_row A) (map (col A) [1..<dim_col A]) $$\n          (i, j - dim_col (mat_of_cols (dim_row A) [col A 0]))) =\n    A $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  j < dim_col (mat_of_cols (dim_row A) [col A 0])", "show ?thesis"], ["proof (prove)\nusing this:\n  j < dim_col (mat_of_cols (dim_row A) [col A 0])\n\ngoal (1 subgoal):\n 1. (if j < dim_col (mat_of_cols (dim_row A) [col A 0])\n     then mat_of_cols (dim_row A) [col A 0] $$ (i, j)\n     else mat_of_cols (dim_row A) (map (col A) [1..<dim_col A]) $$\n          (i, j - dim_col (mat_of_cols (dim_row A) [col A 0]))) =\n    A $$ (i, j)", "by (metis One_nat_def Suc_eq_plus1 add.right_neutral append_cols_def col_def i\n          index_mat_four_block(2) index_vec index_zero_mat(2) less_one list.size(3) list.size(4)\n          mat_of_cols_Cons_index_0 mat_of_cols_carrier(2) mat_of_cols_carrier(3))"], ["proof (state)\nthis:\n  (if j < dim_col (mat_of_cols (dim_row A) [col A 0])\n   then mat_of_cols (dim_row A) [col A 0] $$ (i, j)\n   else mat_of_cols (dim_row A) (map (col A) [1..<dim_col A]) $$\n        (i, j - dim_col (mat_of_cols (dim_row A) [col A 0]))) =\n  A $$ (i, j)\n\ngoal (1 subgoal):\n 1. \\<not> j < dim_col (mat_of_cols (dim_row A) [col A 0]) \\<Longrightarrow>\n    (if j < dim_col (mat_of_cols (dim_row A) [col A 0])\n     then mat_of_cols (dim_row A) [col A 0] $$ (i, j)\n     else mat_of_cols (dim_row A) (map (col A) [1..<dim_col A]) $$\n          (i, j - dim_col (mat_of_cols (dim_row A) [col A 0]))) =\n    A $$ (i, j)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> j < dim_col (mat_of_cols (dim_row A) [col A 0]) \\<Longrightarrow>\n    (if j < dim_col (mat_of_cols (dim_row A) [col A 0])\n     then mat_of_cols (dim_row A) [col A 0] $$ (i, j)\n     else mat_of_cols (dim_row A) (map (col A) [1..<dim_col A]) $$\n          (i, j - dim_col (mat_of_cols (dim_row A) [col A 0]))) =\n    A $$ (i, j)", "case False"], ["proof (state)\nthis:\n  \\<not> j < dim_col (mat_of_cols (dim_row A) [col A 0])\n\ngoal (1 subgoal):\n 1. \\<not> j < dim_col (mat_of_cols (dim_row A) [col A 0]) \\<Longrightarrow>\n    (if j < dim_col (mat_of_cols (dim_row A) [col A 0])\n     then mat_of_cols (dim_row A) [col A 0] $$ (i, j)\n     else mat_of_cols (dim_row A) (map (col A) [1..<dim_col A]) $$\n          (i, j - dim_col (mat_of_cols (dim_row A) [col A 0]))) =\n    A $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  \\<not> j < dim_col (mat_of_cols (dim_row A) [col A 0])", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<not> j < dim_col (mat_of_cols (dim_row A) [col A 0])\n\ngoal (1 subgoal):\n 1. (if j < dim_col (mat_of_cols (dim_row A) [col A 0])\n     then mat_of_cols (dim_row A) [col A 0] $$ (i, j)\n     else mat_of_cols (dim_row A) (map (col A) [1..<dim_col A]) $$\n          (i, j - dim_col (mat_of_cols (dim_row A) [col A 0]))) =\n    A $$ (i, j)", "by (metis (no_types, lifting) Suc_eq_plus1 Suc_less_eq Suc_pred add_diff_cancel_right' append_cols_def\n          diff_zero i index_col index_mat_four_block(2) index_mat_four_block(3) index_zero_mat(2)\n          index_zero_mat(3) j length_map length_upt linordered_semidom_class.add_diff_inverse list.size(3)\n          list.size(4) mat_of_cols_carrier(2) mat_of_cols_carrier(3) mat_of_cols_index nth_map_upt\n          plus_1_eq_Suc upt_0)"], ["proof (state)\nthis:\n  (if j < dim_col (mat_of_cols (dim_row A) [col A 0])\n   then mat_of_cols (dim_row A) [col A 0] $$ (i, j)\n   else mat_of_cols (dim_row A) (map (col A) [1..<dim_col A]) $$\n        (i, j - dim_col (mat_of_cols (dim_row A) [col A 0]))) =\n  A $$ (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (if j < dim_col (mat_of_cols (dim_row A) [col A 0])\n   then mat_of_cols (dim_row A) [col A 0] $$ (i, j)\n   else mat_of_cols (dim_row A) (map (col A) [1..<dim_col A]) $$\n        (i, j - dim_col (mat_of_cols (dim_row A) [col A 0]))) =\n  A $$ (i, j)\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (mat_of_cols (dim_row A) [col A 0] @\\<^sub>c\n                      mat_of_cols (dim_row A)\n                       (map (col A) [1..<dim_col A]));\n        j < dim_col\n             (mat_of_cols (dim_row A) [col A 0] @\\<^sub>c\n              mat_of_cols (dim_row A)\n               (map (col A) [1..<dim_col A]))\\<rbrakk>\n       \\<Longrightarrow> A $$ (i, j) =\n                         (mat_of_cols (dim_row A) [col A 0] @\\<^sub>c\n                          mat_of_cols (dim_row A)\n                           (map (col A) [1..<dim_col A])) $$\n                         (i, j)\n 2. dim_row A =\n    dim_row\n     (mat_of_cols (dim_row A) [col A 0] @\\<^sub>c\n      mat_of_cols (dim_row A) (map (col A) [1..<dim_col A]))\n 3. dim_col A =\n    dim_col\n     (mat_of_cols (dim_row A) [col A 0] @\\<^sub>c\n      mat_of_cols (dim_row A) (map (col A) [1..<dim_col A]))", "finally"], ["proof (chain)\npicking this:\n  (mat_of_cols (dim_row A) [col A 0] @\\<^sub>c\n   mat_of_cols (dim_row A) (map (col A) [1..<dim_col A])) $$\n  (i, j) =\n  A $$ (i, j)", "show \"A $$ (i, j) = (?A1 @\\<^sub>c ?A2) $$ (i, j)\""], ["proof (prove)\nusing this:\n  (mat_of_cols (dim_row A) [col A 0] @\\<^sub>c\n   mat_of_cols (dim_row A) (map (col A) [1..<dim_col A])) $$\n  (i, j) =\n  A $$ (i, j)\n\ngoal (1 subgoal):\n 1. A $$ (i, j) =\n    (mat_of_cols (dim_row A) [col A 0] @\\<^sub>c\n     mat_of_cols (dim_row A) (map (col A) [1..<dim_col A])) $$\n    (i, j)", ".."], ["proof (state)\nthis:\n  A $$ (i, j) =\n  (mat_of_cols (dim_row A) [col A 0] @\\<^sub>c\n   mat_of_cols (dim_row A) (map (col A) [1..<dim_col A])) $$\n  (i, j)\n\ngoal (2 subgoals):\n 1. dim_row A =\n    dim_row\n     (mat_of_cols (dim_row A) [col A 0] @\\<^sub>c\n      mat_of_cols (dim_row A) (map (col A) [1..<dim_col A]))\n 2. dim_col A =\n    dim_col\n     (mat_of_cols (dim_row A) [col A 0] @\\<^sub>c\n      mat_of_cols (dim_row A) (map (col A) [1..<dim_col A]))", "qed (auto simp add: append_cols_def d)"], ["", "lemma append_rows_nth:\n  assumes A: \"A \\<in> carrier_mat a n\"\n  and B: \"B \\<in> carrier_mat b n\"\n  and i: \"i<a+b\" and j: \"j < n\"\nshows \"(A @\\<^sub>r B) $$ (i, j) = (if i < dim_row A then A $$(i,j) else B$$(i-a,j))\" (is \"?lhs = ?rhs\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. (A @\\<^sub>r B) $$ (i, j) =\n    (if i < dim_row A then A $$ (i, j) else B $$ (i - a, j))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (A @\\<^sub>r B) $$ (i, j) =\n    (if i < dim_row A then A $$ (i, j) else B $$ (i - a, j))", "let ?C = \"(0\\<^sub>m (dim_row A) 0)\""], ["proof (state)\ngoal (1 subgoal):\n 1. (A @\\<^sub>r B) $$ (i, j) =\n    (if i < dim_row A then A $$ (i, j) else B $$ (i - a, j))", "let ?D = \"(0\\<^sub>m (dim_row B) 0)\""], ["proof (state)\ngoal (1 subgoal):\n 1. (A @\\<^sub>r B) $$ (i, j) =\n    (if i < dim_row A then A $$ (i, j) else B $$ (i - a, j))", "have i2: \"i < dim_row A + dim_row ?D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < dim_row A + dim_row (0\\<^sub>m (dim_row B) 0)", "using i j A B"], ["proof (prove)\nusing this:\n  i < a + b\n  j < n\n  A \\<in> carrier_mat a n\n  B \\<in> carrier_mat b n\n\ngoal (1 subgoal):\n 1. i < dim_row A + dim_row (0\\<^sub>m (dim_row B) 0)", "by auto"], ["proof (state)\nthis:\n  i < dim_row A + dim_row (0\\<^sub>m (dim_row B) 0)\n\ngoal (1 subgoal):\n 1. (A @\\<^sub>r B) $$ (i, j) =\n    (if i < dim_row A then A $$ (i, j) else B $$ (i - a, j))", "have j2: \"j < dim_col A + dim_col ?D\""], ["proof (prove)\ngoal (1 subgoal):\n 1. j < dim_col A + dim_col (0\\<^sub>m (dim_row B) 0)", "using i j A B"], ["proof (prove)\nusing this:\n  i < a + b\n  j < n\n  A \\<in> carrier_mat a n\n  B \\<in> carrier_mat b n\n\ngoal (1 subgoal):\n 1. j < dim_col A + dim_col (0\\<^sub>m (dim_row B) 0)", "by auto"], ["proof (state)\nthis:\n  j < dim_col A + dim_col (0\\<^sub>m (dim_row B) 0)\n\ngoal (1 subgoal):\n 1. (A @\\<^sub>r B) $$ (i, j) =\n    (if i < dim_row A then A $$ (i, j) else B $$ (i - a, j))", "have \"(A @\\<^sub>r B) $$ (i, j) = four_block_mat A ?C B ?D $$ (i, j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A @\\<^sub>r B) $$ (i, j) =\n    four_block_mat A (0\\<^sub>m (dim_row A) 0) B\n     (0\\<^sub>m (dim_row B) 0) $$\n    (i, j)", "unfolding append_rows_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. four_block_mat A (0\\<^sub>m (dim_row A) 0) B\n     (0\\<^sub>m (dim_row B) 0) $$\n    (i, j) =\n    four_block_mat A (0\\<^sub>m (dim_row A) 0) B\n     (0\\<^sub>m (dim_row B) 0) $$\n    (i, j)", "by auto"], ["proof (state)\nthis:\n  (A @\\<^sub>r B) $$ (i, j) =\n  four_block_mat A (0\\<^sub>m (dim_row A) 0) B (0\\<^sub>m (dim_row B) 0) $$\n  (i, j)\n\ngoal (1 subgoal):\n 1. (A @\\<^sub>r B) $$ (i, j) =\n    (if i < dim_row A then A $$ (i, j) else B $$ (i - a, j))", "also"], ["proof (state)\nthis:\n  (A @\\<^sub>r B) $$ (i, j) =\n  four_block_mat A (0\\<^sub>m (dim_row A) 0) B (0\\<^sub>m (dim_row B) 0) $$\n  (i, j)\n\ngoal (1 subgoal):\n 1. (A @\\<^sub>r B) $$ (i, j) =\n    (if i < dim_row A then A $$ (i, j) else B $$ (i - a, j))", "have \"... =  (if i < dim_row A then if j < dim_col A then A $$ (i, j) else ?C $$ (i, j - dim_col A)\n   else if j < dim_col A then B $$ (i - dim_row A, j) else ?D $$ (i - dim_row A, j - dim_col A))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. four_block_mat A (0\\<^sub>m (dim_row A) 0) B\n     (0\\<^sub>m (dim_row B) 0) $$\n    (i, j) =\n    (if i < dim_row A\n     then if j < dim_col A then A $$ (i, j)\n          else 0\\<^sub>m (dim_row A) 0 $$ (i, j - dim_col A)\n     else if j < dim_col A then B $$ (i - dim_row A, j)\n          else 0\\<^sub>m (dim_row B) 0 $$ (i - dim_row A, j - dim_col A))", "by (rule index_mat_four_block(1)[OF i2 j2])"], ["proof (state)\nthis:\n  four_block_mat A (0\\<^sub>m (dim_row A) 0) B (0\\<^sub>m (dim_row B) 0) $$\n  (i, j) =\n  (if i < dim_row A\n   then if j < dim_col A then A $$ (i, j)\n        else 0\\<^sub>m (dim_row A) 0 $$ (i, j - dim_col A)\n   else if j < dim_col A then B $$ (i - dim_row A, j)\n        else 0\\<^sub>m (dim_row B) 0 $$ (i - dim_row A, j - dim_col A))\n\ngoal (1 subgoal):\n 1. (A @\\<^sub>r B) $$ (i, j) =\n    (if i < dim_row A then A $$ (i, j) else B $$ (i - a, j))", "also"], ["proof (state)\nthis:\n  four_block_mat A (0\\<^sub>m (dim_row A) 0) B (0\\<^sub>m (dim_row B) 0) $$\n  (i, j) =\n  (if i < dim_row A\n   then if j < dim_col A then A $$ (i, j)\n        else 0\\<^sub>m (dim_row A) 0 $$ (i, j - dim_col A)\n   else if j < dim_col A then B $$ (i - dim_row A, j)\n        else 0\\<^sub>m (dim_row B) 0 $$ (i - dim_row A, j - dim_col A))\n\ngoal (1 subgoal):\n 1. (A @\\<^sub>r B) $$ (i, j) =\n    (if i < dim_row A then A $$ (i, j) else B $$ (i - a, j))", "have \"... = ?rhs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (if i < dim_row A\n     then if j < dim_col A then A $$ (i, j)\n          else 0\\<^sub>m (dim_row A) 0 $$ (i, j - dim_col A)\n     else if j < dim_col A then B $$ (i - dim_row A, j)\n          else 0\\<^sub>m (dim_row B) 0 $$ (i - dim_row A, j - dim_col A)) =\n    (if i < dim_row A then A $$ (i, j) else B $$ (i - a, j))", "using i A j B"], ["proof (prove)\nusing this:\n  i < a + b\n  A \\<in> carrier_mat a n\n  j < n\n  B \\<in> carrier_mat b n\n\ngoal (1 subgoal):\n 1. (if i < dim_row A\n     then if j < dim_col A then A $$ (i, j)\n          else 0\\<^sub>m (dim_row A) 0 $$ (i, j - dim_col A)\n     else if j < dim_col A then B $$ (i - dim_row A, j)\n          else 0\\<^sub>m (dim_row B) 0 $$ (i - dim_row A, j - dim_col A)) =\n    (if i < dim_row A then A $$ (i, j) else B $$ (i - a, j))", "by auto"], ["proof (state)\nthis:\n  (if i < dim_row A\n   then if j < dim_col A then A $$ (i, j)\n        else 0\\<^sub>m (dim_row A) 0 $$ (i, j - dim_col A)\n   else if j < dim_col A then B $$ (i - dim_row A, j)\n        else 0\\<^sub>m (dim_row B) 0 $$ (i - dim_row A, j - dim_col A)) =\n  (if i < dim_row A then A $$ (i, j) else B $$ (i - a, j))\n\ngoal (1 subgoal):\n 1. (A @\\<^sub>r B) $$ (i, j) =\n    (if i < dim_row A then A $$ (i, j) else B $$ (i - a, j))", "finally"], ["proof (chain)\npicking this:\n  (A @\\<^sub>r B) $$ (i, j) =\n  (if i < dim_row A then A $$ (i, j) else B $$ (i - a, j))", "show ?thesis"], ["proof (prove)\nusing this:\n  (A @\\<^sub>r B) $$ (i, j) =\n  (if i < dim_row A then A $$ (i, j) else B $$ (i - a, j))\n\ngoal (1 subgoal):\n 1. (A @\\<^sub>r B) $$ (i, j) =\n    (if i < dim_row A then A $$ (i, j) else B $$ (i - a, j))", "."], ["proof (state)\nthis:\n  (A @\\<^sub>r B) $$ (i, j) =\n  (if i < dim_row A then A $$ (i, j) else B $$ (i - a, j))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma append_rows_split:\n  assumes k: \"k\\<le>dim_row A\"\n  shows \"A = (mat_of_rows (dim_col A) [Matrix.row A i. i \\<leftarrow> [0..<k]]) @\\<^sub>r\n             (mat_of_rows (dim_col A) [Matrix.row A i. i \\<leftarrow> [k..<dim_row A]])\" (is \"?lhs = ?A1 @\\<^sub>r ?A2\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. A =\n    mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) @\\<^sub>r\n    mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A])", "proof (rule eq_matI)"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (mat_of_rows (dim_col A)\n                       (map (Matrix.row A) [0..<k]) @\\<^sub>r\n                      mat_of_rows (dim_col A)\n                       (map (Matrix.row A) [k..<dim_row A]));\n        j < dim_col\n             (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) @\\<^sub>r\n              mat_of_rows (dim_col A)\n               (map (Matrix.row A) [k..<dim_row A]))\\<rbrakk>\n       \\<Longrightarrow> A $$ (i, j) =\n                         (mat_of_rows (dim_col A)\n                           (map (Matrix.row A) [0..<k]) @\\<^sub>r\n                          mat_of_rows (dim_col A)\n                           (map (Matrix.row A) [k..<dim_row A])) $$\n                         (i, j)\n 2. dim_row A =\n    dim_row\n     (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) @\\<^sub>r\n      mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A]))\n 3. dim_col A =\n    dim_col\n     (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) @\\<^sub>r\n      mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A]))", "have \"(?A1 @\\<^sub>r ?A2) \\<in> carrier_mat (k + (dim_row A-k)) (dim_col A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) @\\<^sub>r\n    mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A])\n    \\<in> carrier_mat (k + (dim_row A - k)) (dim_col A)", "by (rule carrier_append_rows, insert k, auto)"], ["proof (state)\nthis:\n  mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) @\\<^sub>r\n  mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A])\n  \\<in> carrier_mat (k + (dim_row A - k)) (dim_col A)\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (mat_of_rows (dim_col A)\n                       (map (Matrix.row A) [0..<k]) @\\<^sub>r\n                      mat_of_rows (dim_col A)\n                       (map (Matrix.row A) [k..<dim_row A]));\n        j < dim_col\n             (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) @\\<^sub>r\n              mat_of_rows (dim_col A)\n               (map (Matrix.row A) [k..<dim_row A]))\\<rbrakk>\n       \\<Longrightarrow> A $$ (i, j) =\n                         (mat_of_rows (dim_col A)\n                           (map (Matrix.row A) [0..<k]) @\\<^sub>r\n                          mat_of_rows (dim_col A)\n                           (map (Matrix.row A) [k..<dim_row A])) $$\n                         (i, j)\n 2. dim_row A =\n    dim_row\n     (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) @\\<^sub>r\n      mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A]))\n 3. dim_col A =\n    dim_col\n     (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) @\\<^sub>r\n      mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A]))", "hence A1_A2: \"(?A1 @\\<^sub>r ?A2) \\<in> carrier_mat (dim_row A) (dim_col A)\""], ["proof (prove)\nusing this:\n  mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) @\\<^sub>r\n  mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A])\n  \\<in> carrier_mat (k + (dim_row A - k)) (dim_col A)\n\ngoal (1 subgoal):\n 1. mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) @\\<^sub>r\n    mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A])\n    \\<in> carrier_mat (dim_row A) (dim_col A)", "using k"], ["proof (prove)\nusing this:\n  mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) @\\<^sub>r\n  mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A])\n  \\<in> carrier_mat (k + (dim_row A - k)) (dim_col A)\n  k \\<le> dim_row A\n\ngoal (1 subgoal):\n 1. mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) @\\<^sub>r\n    mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A])\n    \\<in> carrier_mat (dim_row A) (dim_col A)", "by simp"], ["proof (state)\nthis:\n  mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) @\\<^sub>r\n  mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A])\n  \\<in> carrier_mat (dim_row A) (dim_col A)\n\ngoal (3 subgoals):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (mat_of_rows (dim_col A)\n                       (map (Matrix.row A) [0..<k]) @\\<^sub>r\n                      mat_of_rows (dim_col A)\n                       (map (Matrix.row A) [k..<dim_row A]));\n        j < dim_col\n             (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) @\\<^sub>r\n              mat_of_rows (dim_col A)\n               (map (Matrix.row A) [k..<dim_row A]))\\<rbrakk>\n       \\<Longrightarrow> A $$ (i, j) =\n                         (mat_of_rows (dim_col A)\n                           (map (Matrix.row A) [0..<k]) @\\<^sub>r\n                          mat_of_rows (dim_col A)\n                           (map (Matrix.row A) [k..<dim_row A])) $$\n                         (i, j)\n 2. dim_row A =\n    dim_row\n     (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) @\\<^sub>r\n      mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A]))\n 3. dim_col A =\n    dim_col\n     (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) @\\<^sub>r\n      mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A]))", "thus \"dim_row A = dim_row (?A1 @\\<^sub>r ?A2)\" and \"dim_col A = dim_col (?A1 @\\<^sub>r ?A2)\""], ["proof (prove)\nusing this:\n  mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) @\\<^sub>r\n  mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A])\n  \\<in> carrier_mat (dim_row A) (dim_col A)\n\ngoal (1 subgoal):\n 1. dim_row A =\n    dim_row\n     (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) @\\<^sub>r\n      mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A])) &&&\n    dim_col A =\n    dim_col\n     (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) @\\<^sub>r\n      mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A]))", "by auto"], ["proof (state)\nthis:\n  dim_row A =\n  dim_row\n   (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) @\\<^sub>r\n    mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A]))\n  dim_col A =\n  dim_col\n   (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) @\\<^sub>r\n    mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A]))\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (mat_of_rows (dim_col A)\n                       (map (Matrix.row A) [0..<k]) @\\<^sub>r\n                      mat_of_rows (dim_col A)\n                       (map (Matrix.row A) [k..<dim_row A]));\n        j < dim_col\n             (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) @\\<^sub>r\n              mat_of_rows (dim_col A)\n               (map (Matrix.row A) [k..<dim_row A]))\\<rbrakk>\n       \\<Longrightarrow> A $$ (i, j) =\n                         (mat_of_rows (dim_col A)\n                           (map (Matrix.row A) [0..<k]) @\\<^sub>r\n                          mat_of_rows (dim_col A)\n                           (map (Matrix.row A) [k..<dim_row A])) $$\n                         (i, j)", "fix i j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (mat_of_rows (dim_col A)\n                       (map (Matrix.row A) [0..<k]) @\\<^sub>r\n                      mat_of_rows (dim_col A)\n                       (map (Matrix.row A) [k..<dim_row A]));\n        j < dim_col\n             (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) @\\<^sub>r\n              mat_of_rows (dim_col A)\n               (map (Matrix.row A) [k..<dim_row A]))\\<rbrakk>\n       \\<Longrightarrow> A $$ (i, j) =\n                         (mat_of_rows (dim_col A)\n                           (map (Matrix.row A) [0..<k]) @\\<^sub>r\n                          mat_of_rows (dim_col A)\n                           (map (Matrix.row A) [k..<dim_row A])) $$\n                         (i, j)", "assume i: \"i < dim_row (?A1 @\\<^sub>r ?A2)\" and j: \"j < dim_col (?A1 @\\<^sub>r ?A2)\""], ["proof (state)\nthis:\n  i < dim_row\n       (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) @\\<^sub>r\n        mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A]))\n  j < dim_col\n       (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) @\\<^sub>r\n        mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A]))\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (mat_of_rows (dim_col A)\n                       (map (Matrix.row A) [0..<k]) @\\<^sub>r\n                      mat_of_rows (dim_col A)\n                       (map (Matrix.row A) [k..<dim_row A]));\n        j < dim_col\n             (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) @\\<^sub>r\n              mat_of_rows (dim_col A)\n               (map (Matrix.row A) [k..<dim_row A]))\\<rbrakk>\n       \\<Longrightarrow> A $$ (i, j) =\n                         (mat_of_rows (dim_col A)\n                           (map (Matrix.row A) [0..<k]) @\\<^sub>r\n                          mat_of_rows (dim_col A)\n                           (map (Matrix.row A) [k..<dim_row A])) $$\n                         (i, j)", "have \"(?A1 @\\<^sub>r ?A2) $$ (i, j) = (if i < dim_row ?A1 then ?A1 $$(i,j) else ?A2$$(i-(dim_row ?A1),j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) @\\<^sub>r\n     mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A])) $$\n    (i, j) =\n    (if i < dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]))\n     then mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) $$ (i, j)\n     else mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A]) $$\n          (i -\n           dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k])),\n           j))", "by (rule append_rows_nth, insert k i j, auto simp add: append_rows_def)"], ["proof (state)\nthis:\n  (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) @\\<^sub>r\n   mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A])) $$\n  (i, j) =\n  (if i < dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]))\n   then mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) $$ (i, j)\n   else mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A]) $$\n        (i - dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k])),\n         j))\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (mat_of_rows (dim_col A)\n                       (map (Matrix.row A) [0..<k]) @\\<^sub>r\n                      mat_of_rows (dim_col A)\n                       (map (Matrix.row A) [k..<dim_row A]));\n        j < dim_col\n             (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) @\\<^sub>r\n              mat_of_rows (dim_col A)\n               (map (Matrix.row A) [k..<dim_row A]))\\<rbrakk>\n       \\<Longrightarrow> A $$ (i, j) =\n                         (mat_of_rows (dim_col A)\n                           (map (Matrix.row A) [0..<k]) @\\<^sub>r\n                          mat_of_rows (dim_col A)\n                           (map (Matrix.row A) [k..<dim_row A])) $$\n                         (i, j)", "also"], ["proof (state)\nthis:\n  (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) @\\<^sub>r\n   mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A])) $$\n  (i, j) =\n  (if i < dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]))\n   then mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) $$ (i, j)\n   else mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A]) $$\n        (i - dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k])),\n         j))\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (mat_of_rows (dim_col A)\n                       (map (Matrix.row A) [0..<k]) @\\<^sub>r\n                      mat_of_rows (dim_col A)\n                       (map (Matrix.row A) [k..<dim_row A]));\n        j < dim_col\n             (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) @\\<^sub>r\n              mat_of_rows (dim_col A)\n               (map (Matrix.row A) [k..<dim_row A]))\\<rbrakk>\n       \\<Longrightarrow> A $$ (i, j) =\n                         (mat_of_rows (dim_col A)\n                           (map (Matrix.row A) [0..<k]) @\\<^sub>r\n                          mat_of_rows (dim_col A)\n                           (map (Matrix.row A) [k..<dim_row A])) $$\n                         (i, j)", "have \"... = A $$ (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (if i < dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]))\n     then mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) $$ (i, j)\n     else mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A]) $$\n          (i -\n           dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k])),\n           j)) =\n    A $$ (i, j)", "proof (cases \"i<dim_row ?A1\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i < dim_row\n         (mat_of_rows (dim_col A)\n           (map (Matrix.row A) [0..<k])) \\<Longrightarrow>\n    (if i < dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]))\n     then mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) $$ (i, j)\n     else mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A]) $$\n          (i -\n           dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k])),\n           j)) =\n    A $$ (i, j)\n 2. \\<not> i < dim_row\n                (mat_of_rows (dim_col A)\n                  (map (Matrix.row A) [0..<k])) \\<Longrightarrow>\n    (if i < dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]))\n     then mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) $$ (i, j)\n     else mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A]) $$\n          (i -\n           dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k])),\n           j)) =\n    A $$ (i, j)", "case True"], ["proof (state)\nthis:\n  i < dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]))\n\ngoal (2 subgoals):\n 1. i < dim_row\n         (mat_of_rows (dim_col A)\n           (map (Matrix.row A) [0..<k])) \\<Longrightarrow>\n    (if i < dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]))\n     then mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) $$ (i, j)\n     else mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A]) $$\n          (i -\n           dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k])),\n           j)) =\n    A $$ (i, j)\n 2. \\<not> i < dim_row\n                (mat_of_rows (dim_col A)\n                  (map (Matrix.row A) [0..<k])) \\<Longrightarrow>\n    (if i < dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]))\n     then mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) $$ (i, j)\n     else mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A]) $$\n          (i -\n           dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k])),\n           j)) =\n    A $$ (i, j)", "then"], ["proof (chain)\npicking this:\n  i < dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]))", "show ?thesis"], ["proof (prove)\nusing this:\n  i < dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]))\n\ngoal (1 subgoal):\n 1. (if i < dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]))\n     then mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) $$ (i, j)\n     else mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A]) $$\n          (i -\n           dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k])),\n           j)) =\n    A $$ (i, j)", "by (metis (no_types, lifting) Matrix.row_def add.left_neutral add.right_neutral append_rows_def\n          index_mat(1) index_mat_four_block(3) index_vec index_zero_mat(3) j length_map length_upt\n          mat_of_rows_carrier(2,3) mat_of_rows_def nth_map_upt prod.simps(2))"], ["proof (state)\nthis:\n  (if i < dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]))\n   then mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) $$ (i, j)\n   else mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A]) $$\n        (i - dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k])),\n         j)) =\n  A $$ (i, j)\n\ngoal (1 subgoal):\n 1. \\<not> i < dim_row\n                (mat_of_rows (dim_col A)\n                  (map (Matrix.row A) [0..<k])) \\<Longrightarrow>\n    (if i < dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]))\n     then mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) $$ (i, j)\n     else mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A]) $$\n          (i -\n           dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k])),\n           j)) =\n    A $$ (i, j)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> i < dim_row\n                (mat_of_rows (dim_col A)\n                  (map (Matrix.row A) [0..<k])) \\<Longrightarrow>\n    (if i < dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]))\n     then mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) $$ (i, j)\n     else mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A]) $$\n          (i -\n           dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k])),\n           j)) =\n    A $$ (i, j)", "case False"], ["proof (state)\nthis:\n  \\<not> i < dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]))\n\ngoal (1 subgoal):\n 1. \\<not> i < dim_row\n                (mat_of_rows (dim_col A)\n                  (map (Matrix.row A) [0..<k])) \\<Longrightarrow>\n    (if i < dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]))\n     then mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) $$ (i, j)\n     else mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A]) $$\n          (i -\n           dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k])),\n           j)) =\n    A $$ (i, j)", "let ?xs = \"(map (Matrix.row A) [k..<dim_row A])\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> i < dim_row\n                (mat_of_rows (dim_col A)\n                  (map (Matrix.row A) [0..<k])) \\<Longrightarrow>\n    (if i < dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]))\n     then mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) $$ (i, j)\n     else mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A]) $$\n          (i -\n           dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k])),\n           j)) =\n    A $$ (i, j)", "have dim_row_A1: \"dim_row ?A1 = k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k])) = k", "by auto"], ["proof (state)\nthis:\n  dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k])) = k\n\ngoal (1 subgoal):\n 1. \\<not> i < dim_row\n                (mat_of_rows (dim_col A)\n                  (map (Matrix.row A) [0..<k])) \\<Longrightarrow>\n    (if i < dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]))\n     then mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) $$ (i, j)\n     else mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A]) $$\n          (i -\n           dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k])),\n           j)) =\n    A $$ (i, j)", "have \"?A2 $$ (i-k,j) = ?xs ! (i-k) $v j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A]) $$\n    (i - k, j) =\n    map (Matrix.row A) [k..<dim_row A] ! (i - k) $v j", "by (rule mat_of_rows_index, insert i k False A1_A2 j, auto)"], ["proof (state)\nthis:\n  mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A]) $$\n  (i - k, j) =\n  map (Matrix.row A) [k..<dim_row A] ! (i - k) $v j\n\ngoal (1 subgoal):\n 1. \\<not> i < dim_row\n                (mat_of_rows (dim_col A)\n                  (map (Matrix.row A) [0..<k])) \\<Longrightarrow>\n    (if i < dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]))\n     then mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) $$ (i, j)\n     else mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A]) $$\n          (i -\n           dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k])),\n           j)) =\n    A $$ (i, j)", "also"], ["proof (state)\nthis:\n  mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A]) $$\n  (i - k, j) =\n  map (Matrix.row A) [k..<dim_row A] ! (i - k) $v j\n\ngoal (1 subgoal):\n 1. \\<not> i < dim_row\n                (mat_of_rows (dim_col A)\n                  (map (Matrix.row A) [0..<k])) \\<Longrightarrow>\n    (if i < dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]))\n     then mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) $$ (i, j)\n     else mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A]) $$\n          (i -\n           dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k])),\n           j)) =\n    A $$ (i, j)", "have \"... = A $$ (i,j)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. map (Matrix.row A) [k..<dim_row A] ! (i - k) $v j = A $$ (i, j)", "using A1_A2 False i j"], ["proof (prove)\nusing this:\n  mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) @\\<^sub>r\n  mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A])\n  \\<in> carrier_mat (dim_row A) (dim_col A)\n  \\<not> i < dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]))\n  i < dim_row\n       (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) @\\<^sub>r\n        mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A]))\n  j < dim_col\n       (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) @\\<^sub>r\n        mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A]))\n\ngoal (1 subgoal):\n 1. map (Matrix.row A) [k..<dim_row A] ! (i - k) $v j = A $$ (i, j)", "by auto"], ["proof (state)\nthis:\n  map (Matrix.row A) [k..<dim_row A] ! (i - k) $v j = A $$ (i, j)\n\ngoal (1 subgoal):\n 1. \\<not> i < dim_row\n                (mat_of_rows (dim_col A)\n                  (map (Matrix.row A) [0..<k])) \\<Longrightarrow>\n    (if i < dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]))\n     then mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) $$ (i, j)\n     else mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A]) $$\n          (i -\n           dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k])),\n           j)) =\n    A $$ (i, j)", "finally"], ["proof (chain)\npicking this:\n  mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A]) $$\n  (i - k, j) =\n  A $$ (i, j)", "show ?thesis"], ["proof (prove)\nusing this:\n  mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A]) $$\n  (i - k, j) =\n  A $$ (i, j)\n\ngoal (1 subgoal):\n 1. (if i < dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]))\n     then mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) $$ (i, j)\n     else mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A]) $$\n          (i -\n           dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k])),\n           j)) =\n    A $$ (i, j)", "using A1_A2 False i j"], ["proof (prove)\nusing this:\n  mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A]) $$\n  (i - k, j) =\n  A $$ (i, j)\n  mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) @\\<^sub>r\n  mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A])\n  \\<in> carrier_mat (dim_row A) (dim_col A)\n  \\<not> i < dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]))\n  i < dim_row\n       (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) @\\<^sub>r\n        mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A]))\n  j < dim_col\n       (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) @\\<^sub>r\n        mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A]))\n\ngoal (1 subgoal):\n 1. (if i < dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]))\n     then mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) $$ (i, j)\n     else mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A]) $$\n          (i -\n           dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k])),\n           j)) =\n    A $$ (i, j)", "by auto"], ["proof (state)\nthis:\n  (if i < dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]))\n   then mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) $$ (i, j)\n   else mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A]) $$\n        (i - dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k])),\n         j)) =\n  A $$ (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (if i < dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]))\n   then mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) $$ (i, j)\n   else mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A]) $$\n        (i - dim_row (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k])),\n         j)) =\n  A $$ (i, j)\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<lbrakk>i < dim_row\n                     (mat_of_rows (dim_col A)\n                       (map (Matrix.row A) [0..<k]) @\\<^sub>r\n                      mat_of_rows (dim_col A)\n                       (map (Matrix.row A) [k..<dim_row A]));\n        j < dim_col\n             (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) @\\<^sub>r\n              mat_of_rows (dim_col A)\n               (map (Matrix.row A) [k..<dim_row A]))\\<rbrakk>\n       \\<Longrightarrow> A $$ (i, j) =\n                         (mat_of_rows (dim_col A)\n                           (map (Matrix.row A) [0..<k]) @\\<^sub>r\n                          mat_of_rows (dim_col A)\n                           (map (Matrix.row A) [k..<dim_row A])) $$\n                         (i, j)", "finally"], ["proof (chain)\npicking this:\n  (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) @\\<^sub>r\n   mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A])) $$\n  (i, j) =\n  A $$ (i, j)", "show \" A $$ (i, j) = (?A1 @\\<^sub>r ?A2) $$ (i,j)\""], ["proof (prove)\nusing this:\n  (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) @\\<^sub>r\n   mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A])) $$\n  (i, j) =\n  A $$ (i, j)\n\ngoal (1 subgoal):\n 1. A $$ (i, j) =\n    (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) @\\<^sub>r\n     mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A])) $$\n    (i, j)", "by simp"], ["proof (state)\nthis:\n  A $$ (i, j) =\n  (mat_of_rows (dim_col A) (map (Matrix.row A) [0..<k]) @\\<^sub>r\n   mat_of_rows (dim_col A) (map (Matrix.row A) [k..<dim_row A])) $$\n  (i, j)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma transpose_mat_append_rows:\n assumes A: \"A \\<in> carrier_mat a n\" and B: \"B \\<in> carrier_mat b n\"\n shows \"(A @\\<^sub>r B)\\<^sup>T = A\\<^sup>T @\\<^sub>c B\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A @\\<^sub>r B)\\<^sup>T = A\\<^sup>T @\\<^sub>c B\\<^sup>T", "by (smt append_cols_def append_rows_def A B carrier_matD(1) index_transpose_mat(3)\n      transpose_four_block_mat zero_carrier_mat zero_transpose_mat)"], ["", "lemma transpose_mat_append_cols:\n assumes A: \"A \\<in> carrier_mat n a\" and B: \"B \\<in> carrier_mat n b\"\n shows \"(A @\\<^sub>c B)\\<^sup>T = A\\<^sup>T @\\<^sub>r B\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A @\\<^sub>c B)\\<^sup>T = A\\<^sup>T @\\<^sub>r B\\<^sup>T", "by (metis Matrix.transpose_transpose A B carrier_matD(1) carrier_mat_triv\n      index_transpose_mat(3) transpose_mat_append_rows)"], ["", "lemma append_rows_mult_right:\n  assumes A: \"(A::'a::comm_semiring_1 mat) \\<in> carrier_mat a n\" and B: \"B \\<in> carrier_mat b n\"\n    and Q: \"Q\\<in> carrier_mat n n\"\n  shows \"(A @\\<^sub>r B) * Q = (A * Q) @\\<^sub>r (B*Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A @\\<^sub>r B) * Q = A * Q @\\<^sub>r B * Q", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (A @\\<^sub>r B) * Q = A * Q @\\<^sub>r B * Q", "have \"transpose_mat ((A @\\<^sub>r B) * Q) = Q\\<^sup>T * (A @\\<^sub>r B)\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((A @\\<^sub>r B) * Q)\\<^sup>T = Q\\<^sup>T * (A @\\<^sub>r B)\\<^sup>T", "by (rule transpose_mult, insert A B Q, auto)"], ["proof (state)\nthis:\n  ((A @\\<^sub>r B) * Q)\\<^sup>T = Q\\<^sup>T * (A @\\<^sub>r B)\\<^sup>T\n\ngoal (1 subgoal):\n 1. (A @\\<^sub>r B) * Q = A * Q @\\<^sub>r B * Q", "also"], ["proof (state)\nthis:\n  ((A @\\<^sub>r B) * Q)\\<^sup>T = Q\\<^sup>T * (A @\\<^sub>r B)\\<^sup>T\n\ngoal (1 subgoal):\n 1. (A @\\<^sub>r B) * Q = A * Q @\\<^sub>r B * Q", "have \"... = Q\\<^sup>T * (A\\<^sup>T @\\<^sub>c B\\<^sup>T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q\\<^sup>T * (A @\\<^sub>r B)\\<^sup>T =\n    Q\\<^sup>T * (A\\<^sup>T @\\<^sub>c B\\<^sup>T)", "using transpose_mat_append_rows assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?A \\<in> carrier_mat ?a ?n; ?B \\<in> carrier_mat ?b ?n\\<rbrakk>\n  \\<Longrightarrow> (?A @\\<^sub>r ?B)\\<^sup>T =\n                    ?A\\<^sup>T @\\<^sub>c ?B\\<^sup>T\n  A \\<in> carrier_mat a n\n  B \\<in> carrier_mat b n\n  Q \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. Q\\<^sup>T * (A @\\<^sub>r B)\\<^sup>T =\n    Q\\<^sup>T * (A\\<^sup>T @\\<^sub>c B\\<^sup>T)", "by metis"], ["proof (state)\nthis:\n  Q\\<^sup>T * (A @\\<^sub>r B)\\<^sup>T =\n  Q\\<^sup>T * (A\\<^sup>T @\\<^sub>c B\\<^sup>T)\n\ngoal (1 subgoal):\n 1. (A @\\<^sub>r B) * Q = A * Q @\\<^sub>r B * Q", "also"], ["proof (state)\nthis:\n  Q\\<^sup>T * (A @\\<^sub>r B)\\<^sup>T =\n  Q\\<^sup>T * (A\\<^sup>T @\\<^sub>c B\\<^sup>T)\n\ngoal (1 subgoal):\n 1. (A @\\<^sub>r B) * Q = A * Q @\\<^sub>r B * Q", "have \"... = Q\\<^sup>T * A\\<^sup>T @\\<^sub>c Q\\<^sup>T * B\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Q\\<^sup>T * (A\\<^sup>T @\\<^sub>c B\\<^sup>T) =\n    Q\\<^sup>T * A\\<^sup>T @\\<^sub>c Q\\<^sup>T * B\\<^sup>T", "using append_cols_mult_left assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>?A \\<in> carrier_mat ?n ?a; ?B \\<in> carrier_mat ?n ?b;\n   ?P \\<in> carrier_mat ?n ?n\\<rbrakk>\n  \\<Longrightarrow> ?P * (?A @\\<^sub>c ?B) = ?P * ?A @\\<^sub>c ?P * ?B\n  A \\<in> carrier_mat a n\n  B \\<in> carrier_mat b n\n  Q \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. Q\\<^sup>T * (A\\<^sup>T @\\<^sub>c B\\<^sup>T) =\n    Q\\<^sup>T * A\\<^sup>T @\\<^sub>c Q\\<^sup>T * B\\<^sup>T", "by (metis transpose_carrier_mat)"], ["proof (state)\nthis:\n  Q\\<^sup>T * (A\\<^sup>T @\\<^sub>c B\\<^sup>T) =\n  Q\\<^sup>T * A\\<^sup>T @\\<^sub>c Q\\<^sup>T * B\\<^sup>T\n\ngoal (1 subgoal):\n 1. (A @\\<^sub>r B) * Q = A * Q @\\<^sub>r B * Q", "also"], ["proof (state)\nthis:\n  Q\\<^sup>T * (A\\<^sup>T @\\<^sub>c B\\<^sup>T) =\n  Q\\<^sup>T * A\\<^sup>T @\\<^sub>c Q\\<^sup>T * B\\<^sup>T\n\ngoal (1 subgoal):\n 1. (A @\\<^sub>r B) * Q = A * Q @\\<^sub>r B * Q", "have \"transpose_mat ... = (A * Q) @\\<^sub>r (B*Q)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Q\\<^sup>T * A\\<^sup>T @\\<^sub>c Q\\<^sup>T * B\\<^sup>T)\\<^sup>T =\n    A * Q @\\<^sub>r B * Q", "by (smt A B Matrix.transpose_mult Matrix.transpose_transpose append_cols_def append_rows_def Q\n        carrier_mat_triv index_mult_mat(2) index_transpose_mat(2) transpose_four_block_mat\n        zero_carrier_mat zero_transpose_mat)"], ["proof (state)\nthis:\n  (Q\\<^sup>T * A\\<^sup>T @\\<^sub>c Q\\<^sup>T * B\\<^sup>T)\\<^sup>T =\n  A * Q @\\<^sub>r B * Q\n\ngoal (1 subgoal):\n 1. (A @\\<^sub>r B) * Q = A * Q @\\<^sub>r B * Q", "finally"], ["proof (chain)\npicking this:\n  ((A @\\<^sub>r B) * Q)\\<^sup>T\\<^sup>T = A * Q @\\<^sub>r B * Q", "show ?thesis"], ["proof (prove)\nusing this:\n  ((A @\\<^sub>r B) * Q)\\<^sup>T\\<^sup>T = A * Q @\\<^sub>r B * Q\n\ngoal (1 subgoal):\n 1. (A @\\<^sub>r B) * Q = A * Q @\\<^sub>r B * Q", "by simp"], ["proof (state)\nthis:\n  (A @\\<^sub>r B) * Q = A * Q @\\<^sub>r B * Q\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma append_rows_mult_left_id:\n  assumes A: \"(A::'a::comm_semiring_1 mat) \\<in> carrier_mat 1 n\"\n  and B: \"B \\<in> carrier_mat (m-1) n\"\n  and C: \"C = four_block_mat (1\\<^sub>m 1) (0\\<^sub>m 1 (m - 1)) (0\\<^sub>m (m - 1) 1) D\"\n  and D: \"D \\<in> carrier_mat (m-1) (m-1)\"\nshows \"C * (A @\\<^sub>r B) = A @\\<^sub>r (D * B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C * (A @\\<^sub>r B) = A @\\<^sub>r D * B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. C * (A @\\<^sub>r B) = A @\\<^sub>r D * B", "have \"transpose_mat (C * (A @\\<^sub>r B)) = (A @\\<^sub>r B)\\<^sup>T * C\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (C * (A @\\<^sub>r B))\\<^sup>T = (A @\\<^sub>r B)\\<^sup>T * C\\<^sup>T", "by (metis (no_types, lifting) B C D Matrix.transpose_mult append_rows_def A carrier_matD\n        carrier_mat_triv index_mat_four_block(2,3) index_zero_mat(2) one_carrier_mat)"], ["proof (state)\nthis:\n  (C * (A @\\<^sub>r B))\\<^sup>T = (A @\\<^sub>r B)\\<^sup>T * C\\<^sup>T\n\ngoal (1 subgoal):\n 1. C * (A @\\<^sub>r B) = A @\\<^sub>r D * B", "also"], ["proof (state)\nthis:\n  (C * (A @\\<^sub>r B))\\<^sup>T = (A @\\<^sub>r B)\\<^sup>T * C\\<^sup>T\n\ngoal (1 subgoal):\n 1. C * (A @\\<^sub>r B) = A @\\<^sub>r D * B", "have \"... = (A\\<^sup>T @\\<^sub>c B\\<^sup>T) * C\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A @\\<^sub>r B)\\<^sup>T * C\\<^sup>T =\n    (A\\<^sup>T @\\<^sub>c B\\<^sup>T) * C\\<^sup>T", "using transpose_mat_append_rows[OF A B]"], ["proof (prove)\nusing this:\n  (A @\\<^sub>r B)\\<^sup>T = A\\<^sup>T @\\<^sub>c B\\<^sup>T\n\ngoal (1 subgoal):\n 1. (A @\\<^sub>r B)\\<^sup>T * C\\<^sup>T =\n    (A\\<^sup>T @\\<^sub>c B\\<^sup>T) * C\\<^sup>T", "by auto"], ["proof (state)\nthis:\n  (A @\\<^sub>r B)\\<^sup>T * C\\<^sup>T =\n  (A\\<^sup>T @\\<^sub>c B\\<^sup>T) * C\\<^sup>T\n\ngoal (1 subgoal):\n 1. C * (A @\\<^sub>r B) = A @\\<^sub>r D * B", "also"], ["proof (state)\nthis:\n  (A @\\<^sub>r B)\\<^sup>T * C\\<^sup>T =\n  (A\\<^sup>T @\\<^sub>c B\\<^sup>T) * C\\<^sup>T\n\ngoal (1 subgoal):\n 1. C * (A @\\<^sub>r B) = A @\\<^sub>r D * B", "have \"... = A\\<^sup>T @\\<^sub>c (B\\<^sup>T * D\\<^sup>T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A\\<^sup>T @\\<^sub>c B\\<^sup>T) * C\\<^sup>T =\n    A\\<^sup>T @\\<^sub>c B\\<^sup>T * D\\<^sup>T", "by (rule append_cols_mult_right_id, insert A B C D, auto)"], ["proof (state)\nthis:\n  (A\\<^sup>T @\\<^sub>c B\\<^sup>T) * C\\<^sup>T =\n  A\\<^sup>T @\\<^sub>c B\\<^sup>T * D\\<^sup>T\n\ngoal (1 subgoal):\n 1. C * (A @\\<^sub>r B) = A @\\<^sub>r D * B", "also"], ["proof (state)\nthis:\n  (A\\<^sup>T @\\<^sub>c B\\<^sup>T) * C\\<^sup>T =\n  A\\<^sup>T @\\<^sub>c B\\<^sup>T * D\\<^sup>T\n\ngoal (1 subgoal):\n 1. C * (A @\\<^sub>r B) = A @\\<^sub>r D * B", "have \"transpose_mat ... = A @\\<^sub>r (D * B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A\\<^sup>T @\\<^sub>c B\\<^sup>T * D\\<^sup>T)\\<^sup>T = A @\\<^sub>r D * B", "by (smt B D Matrix.transpose_mult Matrix.transpose_transpose append_cols_def append_rows_def A\n        carrier_matD(2) carrier_mat_triv index_mult_mat(3) index_transpose_mat(3)\n        transpose_four_block_mat zero_carrier_mat zero_transpose_mat)"], ["proof (state)\nthis:\n  (A\\<^sup>T @\\<^sub>c B\\<^sup>T * D\\<^sup>T)\\<^sup>T = A @\\<^sub>r D * B\n\ngoal (1 subgoal):\n 1. C * (A @\\<^sub>r B) = A @\\<^sub>r D * B", "finally"], ["proof (chain)\npicking this:\n  (C * (A @\\<^sub>r B))\\<^sup>T\\<^sup>T = A @\\<^sub>r D * B", "show ?thesis"], ["proof (prove)\nusing this:\n  (C * (A @\\<^sub>r B))\\<^sup>T\\<^sup>T = A @\\<^sub>r D * B\n\ngoal (1 subgoal):\n 1. C * (A @\\<^sub>r B) = A @\\<^sub>r D * B", "by auto"], ["proof (state)\nthis:\n  C * (A @\\<^sub>r B) = A @\\<^sub>r D * B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma append_rows_mult_left_id2:\n assumes A: \"(A::'a::comm_semiring_1 mat) \\<in> carrier_mat a n\"\n   and B: \"B \\<in> carrier_mat b n\"\n   and C: \"C = four_block_mat D (0\\<^sub>m a b) (0\\<^sub>m b a) (1\\<^sub>m b)\"\n   and D: \"D \\<in> carrier_mat a a\"\n shows \"C * (A @\\<^sub>r B) = (D * A) @\\<^sub>r B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. C * (A @\\<^sub>r B) = D * A @\\<^sub>r B", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. C * (A @\\<^sub>r B) = D * A @\\<^sub>r B", "have \"(C * (A @\\<^sub>r B))\\<^sup>T = (A @\\<^sub>r B)\\<^sup>T * C\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (C * (A @\\<^sub>r B))\\<^sup>T = (A @\\<^sub>r B)\\<^sup>T * C\\<^sup>T", "by (rule transpose_mult, insert assms, auto)"], ["proof (state)\nthis:\n  (C * (A @\\<^sub>r B))\\<^sup>T = (A @\\<^sub>r B)\\<^sup>T * C\\<^sup>T\n\ngoal (1 subgoal):\n 1. C * (A @\\<^sub>r B) = D * A @\\<^sub>r B", "also"], ["proof (state)\nthis:\n  (C * (A @\\<^sub>r B))\\<^sup>T = (A @\\<^sub>r B)\\<^sup>T * C\\<^sup>T\n\ngoal (1 subgoal):\n 1. C * (A @\\<^sub>r B) = D * A @\\<^sub>r B", "have \"... = (A\\<^sup>T @\\<^sub>c B\\<^sup>T) * C\\<^sup>T\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A @\\<^sub>r B)\\<^sup>T * C\\<^sup>T =\n    (A\\<^sup>T @\\<^sub>c B\\<^sup>T) * C\\<^sup>T", "by (metis A B transpose_mat_append_rows)"], ["proof (state)\nthis:\n  (A @\\<^sub>r B)\\<^sup>T * C\\<^sup>T =\n  (A\\<^sup>T @\\<^sub>c B\\<^sup>T) * C\\<^sup>T\n\ngoal (1 subgoal):\n 1. C * (A @\\<^sub>r B) = D * A @\\<^sub>r B", "also"], ["proof (state)\nthis:\n  (A @\\<^sub>r B)\\<^sup>T * C\\<^sup>T =\n  (A\\<^sup>T @\\<^sub>c B\\<^sup>T) * C\\<^sup>T\n\ngoal (1 subgoal):\n 1. C * (A @\\<^sub>r B) = D * A @\\<^sub>r B", "have \"... = (A\\<^sup>T * D\\<^sup>T @\\<^sub>c B\\<^sup>T)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A\\<^sup>T @\\<^sub>c B\\<^sup>T) * C\\<^sup>T =\n    A\\<^sup>T * D\\<^sup>T @\\<^sub>c B\\<^sup>T", "by (rule append_cols_mult_right_id2, insert assms, auto)"], ["proof (state)\nthis:\n  (A\\<^sup>T @\\<^sub>c B\\<^sup>T) * C\\<^sup>T =\n  A\\<^sup>T * D\\<^sup>T @\\<^sub>c B\\<^sup>T\n\ngoal (1 subgoal):\n 1. C * (A @\\<^sub>r B) = D * A @\\<^sub>r B", "also"], ["proof (state)\nthis:\n  (A\\<^sup>T @\\<^sub>c B\\<^sup>T) * C\\<^sup>T =\n  A\\<^sup>T * D\\<^sup>T @\\<^sub>c B\\<^sup>T\n\ngoal (1 subgoal):\n 1. C * (A @\\<^sub>r B) = D * A @\\<^sub>r B", "have \"...\\<^sup>T = (D * A) @\\<^sub>r B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A\\<^sup>T * D\\<^sup>T @\\<^sub>c B\\<^sup>T)\\<^sup>T = D * A @\\<^sub>r B", "by (metis A B D transpose_mult transpose_transpose mult_carrier_mat transpose_mat_append_rows)"], ["proof (state)\nthis:\n  (A\\<^sup>T * D\\<^sup>T @\\<^sub>c B\\<^sup>T)\\<^sup>T = D * A @\\<^sub>r B\n\ngoal (1 subgoal):\n 1. C * (A @\\<^sub>r B) = D * A @\\<^sub>r B", "finally"], ["proof (chain)\npicking this:\n  (C * (A @\\<^sub>r B))\\<^sup>T\\<^sup>T = D * A @\\<^sub>r B", "show ?thesis"], ["proof (prove)\nusing this:\n  (C * (A @\\<^sub>r B))\\<^sup>T\\<^sup>T = D * A @\\<^sub>r B\n\ngoal (1 subgoal):\n 1. C * (A @\\<^sub>r B) = D * A @\\<^sub>r B", "by simp"], ["proof (state)\nthis:\n  C * (A @\\<^sub>r B) = D * A @\\<^sub>r B\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma four_block_mat_preserves_column:\n  assumes A: \"(A::'a::semiring_1 mat) \\<in> carrier_mat n m\"\n    and B: \"B = four_block_mat (1\\<^sub>m 1) (0\\<^sub>m 1 (m - 1)) (0\\<^sub>m (m - 1) 1) C\"\n  and C: \"C \\<in> carrier_mat (m-1) (m-1)\"\n  and i: \"i<n\" and m: \"0<m\"\nshows \"(A*B) $$ (i,0) = A $$ (i,0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A * B) $$ (i, 0) = A $$ (i, 0)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (A * B) $$ (i, 0) = A $$ (i, 0)", "let ?A1 = \"mat_of_cols n [col A 0]\""], ["proof (state)\ngoal (1 subgoal):\n 1. (A * B) $$ (i, 0) = A $$ (i, 0)", "let ?A2 = \"mat_of_cols n (map (col A) [1..<dim_col A])\""], ["proof (state)\ngoal (1 subgoal):\n 1. (A * B) $$ (i, 0) = A $$ (i, 0)", "have n2: \"dim_row A = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row A = n", "using A"], ["proof (prove)\nusing this:\n  A \\<in> carrier_mat n m\n\ngoal (1 subgoal):\n 1. dim_row A = n", "by auto"], ["proof (state)\nthis:\n  dim_row A = n\n\ngoal (1 subgoal):\n 1. (A * B) $$ (i, 0) = A $$ (i, 0)", "have \"A = ?A1 @\\<^sub>c ?A2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A =\n    mat_of_cols n [col A 0] @\\<^sub>c\n    mat_of_cols n (map (col A) [1..<dim_col A])", "by (rule append_cols_split[of A, unfolded n2], insert m A, auto)"], ["proof (state)\nthis:\n  A =\n  mat_of_cols n [col A 0] @\\<^sub>c\n  mat_of_cols n (map (col A) [1..<dim_col A])\n\ngoal (1 subgoal):\n 1. (A * B) $$ (i, 0) = A $$ (i, 0)", "hence \"A * B = (?A1 @\\<^sub>c ?A2) * B\""], ["proof (prove)\nusing this:\n  A =\n  mat_of_cols n [col A 0] @\\<^sub>c\n  mat_of_cols n (map (col A) [1..<dim_col A])\n\ngoal (1 subgoal):\n 1. A * B =\n    (mat_of_cols n [col A 0] @\\<^sub>c\n     mat_of_cols n (map (col A) [1..<dim_col A])) *\n    B", "by simp"], ["proof (state)\nthis:\n  A * B =\n  (mat_of_cols n [col A 0] @\\<^sub>c\n   mat_of_cols n (map (col A) [1..<dim_col A])) *\n  B\n\ngoal (1 subgoal):\n 1. (A * B) $$ (i, 0) = A $$ (i, 0)", "also"], ["proof (state)\nthis:\n  A * B =\n  (mat_of_cols n [col A 0] @\\<^sub>c\n   mat_of_cols n (map (col A) [1..<dim_col A])) *\n  B\n\ngoal (1 subgoal):\n 1. (A * B) $$ (i, 0) = A $$ (i, 0)", "have \"... = ?A1 @\\<^sub>c (?A2 * C)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (mat_of_cols n [col A 0] @\\<^sub>c\n     mat_of_cols n (map (col A) [1..<dim_col A])) *\n    B =\n    mat_of_cols n [col A 0] @\\<^sub>c\n    mat_of_cols n (map (col A) [1..<dim_col A]) * C", "by (rule append_cols_mult_right_id[OF _ _ B C], insert A, auto)"], ["proof (state)\nthis:\n  (mat_of_cols n [col A 0] @\\<^sub>c\n   mat_of_cols n (map (col A) [1..<dim_col A])) *\n  B =\n  mat_of_cols n [col A 0] @\\<^sub>c\n  mat_of_cols n (map (col A) [1..<dim_col A]) * C\n\ngoal (1 subgoal):\n 1. (A * B) $$ (i, 0) = A $$ (i, 0)", "also"], ["proof (state)\nthis:\n  (mat_of_cols n [col A 0] @\\<^sub>c\n   mat_of_cols n (map (col A) [1..<dim_col A])) *\n  B =\n  mat_of_cols n [col A 0] @\\<^sub>c\n  mat_of_cols n (map (col A) [1..<dim_col A]) * C\n\ngoal (1 subgoal):\n 1. (A * B) $$ (i, 0) = A $$ (i, 0)", "have \"... $$ (i,0) = ?A1 $$ (i,0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (mat_of_cols n [col A 0] @\\<^sub>c\n     mat_of_cols n (map (col A) [1..<dim_col A]) * C) $$\n    (i, 0) =\n    mat_of_cols n [col A 0] $$ (i, 0)", "using append_cols_nth"], ["proof (prove)\nusing this:\n  \\<lbrakk>?A \\<in> carrier_mat ?n ?a; ?B \\<in> carrier_mat ?n ?b; ?i < ?n;\n   ?j < ?a + ?b\\<rbrakk>\n  \\<Longrightarrow> (?A @\\<^sub>c ?B) $$ (?i, ?j) =\n                    (if ?j < dim_col ?A then ?A $$ (?i, ?j)\n                     else ?B $$ (?i, ?j - ?a))\n\ngoal (1 subgoal):\n 1. (mat_of_cols n [col A 0] @\\<^sub>c\n     mat_of_cols n (map (col A) [1..<dim_col A]) * C) $$\n    (i, 0) =\n    mat_of_cols n [col A 0] $$ (i, 0)", "by (simp add: append_cols_def i)"], ["proof (state)\nthis:\n  (mat_of_cols n [col A 0] @\\<^sub>c\n   mat_of_cols n (map (col A) [1..<dim_col A]) * C) $$\n  (i, 0) =\n  mat_of_cols n [col A 0] $$ (i, 0)\n\ngoal (1 subgoal):\n 1. (A * B) $$ (i, 0) = A $$ (i, 0)", "also"], ["proof (state)\nthis:\n  (mat_of_cols n [col A 0] @\\<^sub>c\n   mat_of_cols n (map (col A) [1..<dim_col A]) * C) $$\n  (i, 0) =\n  mat_of_cols n [col A 0] $$ (i, 0)\n\ngoal (1 subgoal):\n 1. (A * B) $$ (i, 0) = A $$ (i, 0)", "have \"... = A $$ (i,0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mat_of_cols n [col A 0] $$ (i, 0) = A $$ (i, 0)", "by (metis A i carrier_matD(1) col_def index_vec mat_of_cols_Cons_index_0)"], ["proof (state)\nthis:\n  mat_of_cols n [col A 0] $$ (i, 0) = A $$ (i, 0)\n\ngoal (1 subgoal):\n 1. (A * B) $$ (i, 0) = A $$ (i, 0)", "finally"], ["proof (chain)\npicking this:\n  (A * B) $$ (i, 0) = A $$ (i, 0)", "show ?thesis"], ["proof (prove)\nusing this:\n  (A * B) $$ (i, 0) = A $$ (i, 0)\n\ngoal (1 subgoal):\n 1. (A * B) $$ (i, 0) = A $$ (i, 0)", "."], ["proof (state)\nthis:\n  (A * B) $$ (i, 0) = A $$ (i, 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "definition \"lower_triangular A = (\\<forall>i j. i < j \\<and> i < dim_row A \\<and> j < dim_col A \\<longrightarrow> A $$ (i,j) = 0)\""], ["", "lemma lower_triangular_index:\n  assumes \"lower_triangular A\" \"i<j\" \"i < dim_row A\" \"j < dim_col A\"\n  shows \"A $$ (i,j) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A $$ (i, j) = (0::'a)", "using assms"], ["proof (prove)\nusing this:\n  lower_triangular A\n  i < j\n  i < dim_row A\n  j < dim_col A\n\ngoal (1 subgoal):\n 1. A $$ (i, j) = (0::'a)", "unfolding lower_triangular_def"], ["proof (prove)\nusing this:\n  \\<forall>i j.\n     i < j \\<and> i < dim_row A \\<and> j < dim_col A \\<longrightarrow>\n     A $$ (i, j) = (0::'a)\n  i < j\n  i < dim_row A\n  j < dim_col A\n\ngoal (1 subgoal):\n 1. A $$ (i, j) = (0::'a)", "by auto"], ["", "lemma commute_multiples_identity:\n  assumes A: \"(A::'a::comm_ring_1 mat) \\<in> carrier_mat n n\"\n  shows \"A * (k \\<cdot>\\<^sub>m (1\\<^sub>m n)) = (k \\<cdot>\\<^sub>m (1\\<^sub>m n)) * A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A * (k \\<cdot>\\<^sub>m 1\\<^sub>m n) = k \\<cdot>\\<^sub>m 1\\<^sub>m n * A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. A * (k \\<cdot>\\<^sub>m 1\\<^sub>m n) = k \\<cdot>\\<^sub>m 1\\<^sub>m n * A", "have \"(\\<Sum>ia = 0..<n. A $$ (i, ia) * (k * (if ia = j then 1 else 0)))\n    = (\\<Sum>ia = 0..<n. k * (if i = ia then 1 else 0) * A $$ (ia, j))\" (is \"?lhs=?rhs\")\n    if i: \"i<n\" and j: \"j<n\" for i j"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ia = 0..<n.\n        A $$ (i, ia) * (k * (if ia = j then 1::'a else (0::'a)))) =\n    (\\<Sum>ia = 0..<n.\n        k * (if i = ia then 1::'a else (0::'a)) * A $$ (ia, j))", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>ia = 0..<n.\n        A $$ (i, ia) * (k * (if ia = j then 1::'a else (0::'a)))) =\n    (\\<Sum>ia = 0..<n.\n        k * (if i = ia then 1::'a else (0::'a)) * A $$ (ia, j))", "let ?f = \"\\<lambda>ia. A $$ (i, ia) * (k * (if ia = j then 1 else 0))\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>ia = 0..<n.\n        A $$ (i, ia) * (k * (if ia = j then 1::'a else (0::'a)))) =\n    (\\<Sum>ia = 0..<n.\n        k * (if i = ia then 1::'a else (0::'a)) * A $$ (ia, j))", "let ?g = \"\\<lambda>ia. k * (if i = ia then 1 else 0) * A $$ (ia, j)\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>ia = 0..<n.\n        A $$ (i, ia) * (k * (if ia = j then 1::'a else (0::'a)))) =\n    (\\<Sum>ia = 0..<n.\n        k * (if i = ia then 1::'a else (0::'a)) * A $$ (ia, j))", "have rw0: \"(\\<Sum>ia \\<in> ({0..<n}-{j}). ?f ia) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ia\\<in>{0..<n} - {j}.\n       A $$ (i, ia) * (k * (if ia = j then 1::'a else (0::'a)))) =\n    (0::'a)", "by (rule sum.neutral, auto)"], ["proof (state)\nthis:\n  (\\<Sum>ia\\<in>{0..<n} - {j}.\n     A $$ (i, ia) * (k * (if ia = j then 1::'a else (0::'a)))) =\n  (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>ia = 0..<n.\n        A $$ (i, ia) * (k * (if ia = j then 1::'a else (0::'a)))) =\n    (\\<Sum>ia = 0..<n.\n        k * (if i = ia then 1::'a else (0::'a)) * A $$ (ia, j))", "have rw0': \"(\\<Sum>ia \\<in> ({0..<n}-{i}). ?g ia) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ia\\<in>{0..<n} - {i}.\n       k * (if i = ia then 1::'a else (0::'a)) * A $$ (ia, j)) =\n    (0::'a)", "by (rule sum.neutral, auto)"], ["proof (state)\nthis:\n  (\\<Sum>ia\\<in>{0..<n} - {i}.\n     k * (if i = ia then 1::'a else (0::'a)) * A $$ (ia, j)) =\n  (0::'a)\n\ngoal (1 subgoal):\n 1. (\\<Sum>ia = 0..<n.\n        A $$ (i, ia) * (k * (if ia = j then 1::'a else (0::'a)))) =\n    (\\<Sum>ia = 0..<n.\n        k * (if i = ia then 1::'a else (0::'a)) * A $$ (ia, j))", "have \"?lhs = ?f j + (\\<Sum>ia \\<in> ({0..<n}-{j}). ?f ia)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>ia = 0..<n.\n        A $$ (i, ia) * (k * (if ia = j then 1::'a else (0::'a)))) =\n    A $$ (i, j) * (k * (if j = j then 1::'a else (0::'a))) +\n    (\\<Sum>ia\\<in>{0..<n} - {j}.\n       A $$ (i, ia) * (k * (if ia = j then 1::'a else (0::'a))))", "by (smt atLeast0LessThan finite_atLeastLessThan lessThan_iff sum.remove j)"], ["proof (state)\nthis:\n  (\\<Sum>ia = 0..<n.\n      A $$ (i, ia) * (k * (if ia = j then 1::'a else (0::'a)))) =\n  A $$ (i, j) * (k * (if j = j then 1::'a else (0::'a))) +\n  (\\<Sum>ia\\<in>{0..<n} - {j}.\n     A $$ (i, ia) * (k * (if ia = j then 1::'a else (0::'a))))\n\ngoal (1 subgoal):\n 1. (\\<Sum>ia = 0..<n.\n        A $$ (i, ia) * (k * (if ia = j then 1::'a else (0::'a)))) =\n    (\\<Sum>ia = 0..<n.\n        k * (if i = ia then 1::'a else (0::'a)) * A $$ (ia, j))", "also"], ["proof (state)\nthis:\n  (\\<Sum>ia = 0..<n.\n      A $$ (i, ia) * (k * (if ia = j then 1::'a else (0::'a)))) =\n  A $$ (i, j) * (k * (if j = j then 1::'a else (0::'a))) +\n  (\\<Sum>ia\\<in>{0..<n} - {j}.\n     A $$ (i, ia) * (k * (if ia = j then 1::'a else (0::'a))))\n\ngoal (1 subgoal):\n 1. (\\<Sum>ia = 0..<n.\n        A $$ (i, ia) * (k * (if ia = j then 1::'a else (0::'a)))) =\n    (\\<Sum>ia = 0..<n.\n        k * (if i = ia then 1::'a else (0::'a)) * A $$ (ia, j))", "have \"... = A $$ (i, j) * k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A $$ (i, j) * (k * (if j = j then 1::'a else (0::'a))) +\n    (\\<Sum>ia\\<in>{0..<n} - {j}.\n       A $$ (i, ia) * (k * (if ia = j then 1::'a else (0::'a)))) =\n    A $$ (i, j) * k", "using rw0"], ["proof (prove)\nusing this:\n  (\\<Sum>ia\\<in>{0..<n} - {j}.\n     A $$ (i, ia) * (k * (if ia = j then 1::'a else (0::'a)))) =\n  (0::'a)\n\ngoal (1 subgoal):\n 1. A $$ (i, j) * (k * (if j = j then 1::'a else (0::'a))) +\n    (\\<Sum>ia\\<in>{0..<n} - {j}.\n       A $$ (i, ia) * (k * (if ia = j then 1::'a else (0::'a)))) =\n    A $$ (i, j) * k", "by auto"], ["proof (state)\nthis:\n  A $$ (i, j) * (k * (if j = j then 1::'a else (0::'a))) +\n  (\\<Sum>ia\\<in>{0..<n} - {j}.\n     A $$ (i, ia) * (k * (if ia = j then 1::'a else (0::'a)))) =\n  A $$ (i, j) * k\n\ngoal (1 subgoal):\n 1. (\\<Sum>ia = 0..<n.\n        A $$ (i, ia) * (k * (if ia = j then 1::'a else (0::'a)))) =\n    (\\<Sum>ia = 0..<n.\n        k * (if i = ia then 1::'a else (0::'a)) * A $$ (ia, j))", "also"], ["proof (state)\nthis:\n  A $$ (i, j) * (k * (if j = j then 1::'a else (0::'a))) +\n  (\\<Sum>ia\\<in>{0..<n} - {j}.\n     A $$ (i, ia) * (k * (if ia = j then 1::'a else (0::'a)))) =\n  A $$ (i, j) * k\n\ngoal (1 subgoal):\n 1. (\\<Sum>ia = 0..<n.\n        A $$ (i, ia) * (k * (if ia = j then 1::'a else (0::'a)))) =\n    (\\<Sum>ia = 0..<n.\n        k * (if i = ia then 1::'a else (0::'a)) * A $$ (ia, j))", "have \"... = ?g i + (\\<Sum>ia \\<in> ({0..<n}-{i}). ?g ia)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A $$ (i, j) * k =\n    k * (if i = i then 1::'a else (0::'a)) * A $$ (i, j) +\n    (\\<Sum>ia\\<in>{0..<n} - {i}.\n       k * (if i = ia then 1::'a else (0::'a)) * A $$ (ia, j))", "using rw0'"], ["proof (prove)\nusing this:\n  (\\<Sum>ia\\<in>{0..<n} - {i}.\n     k * (if i = ia then 1::'a else (0::'a)) * A $$ (ia, j)) =\n  (0::'a)\n\ngoal (1 subgoal):\n 1. A $$ (i, j) * k =\n    k * (if i = i then 1::'a else (0::'a)) * A $$ (i, j) +\n    (\\<Sum>ia\\<in>{0..<n} - {i}.\n       k * (if i = ia then 1::'a else (0::'a)) * A $$ (ia, j))", "by auto"], ["proof (state)\nthis:\n  A $$ (i, j) * k =\n  k * (if i = i then 1::'a else (0::'a)) * A $$ (i, j) +\n  (\\<Sum>ia\\<in>{0..<n} - {i}.\n     k * (if i = ia then 1::'a else (0::'a)) * A $$ (ia, j))\n\ngoal (1 subgoal):\n 1. (\\<Sum>ia = 0..<n.\n        A $$ (i, ia) * (k * (if ia = j then 1::'a else (0::'a)))) =\n    (\\<Sum>ia = 0..<n.\n        k * (if i = ia then 1::'a else (0::'a)) * A $$ (ia, j))", "also"], ["proof (state)\nthis:\n  A $$ (i, j) * k =\n  k * (if i = i then 1::'a else (0::'a)) * A $$ (i, j) +\n  (\\<Sum>ia\\<in>{0..<n} - {i}.\n     k * (if i = ia then 1::'a else (0::'a)) * A $$ (ia, j))\n\ngoal (1 subgoal):\n 1. (\\<Sum>ia = 0..<n.\n        A $$ (i, ia) * (k * (if ia = j then 1::'a else (0::'a)))) =\n    (\\<Sum>ia = 0..<n.\n        k * (if i = ia then 1::'a else (0::'a)) * A $$ (ia, j))", "have \"... = ?rhs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k * (if i = i then 1::'a else (0::'a)) * A $$ (i, j) +\n    (\\<Sum>ia\\<in>{0..<n} - {i}.\n       k * (if i = ia then 1::'a else (0::'a)) * A $$ (ia, j)) =\n    (\\<Sum>ia = 0..<n.\n        k * (if i = ia then 1::'a else (0::'a)) * A $$ (ia, j))", "by (smt atLeast0LessThan finite_atLeastLessThan lessThan_iff sum.remove i)"], ["proof (state)\nthis:\n  k * (if i = i then 1::'a else (0::'a)) * A $$ (i, j) +\n  (\\<Sum>ia\\<in>{0..<n} - {i}.\n     k * (if i = ia then 1::'a else (0::'a)) * A $$ (ia, j)) =\n  (\\<Sum>ia = 0..<n. k * (if i = ia then 1::'a else (0::'a)) * A $$ (ia, j))\n\ngoal (1 subgoal):\n 1. (\\<Sum>ia = 0..<n.\n        A $$ (i, ia) * (k * (if ia = j then 1::'a else (0::'a)))) =\n    (\\<Sum>ia = 0..<n.\n        k * (if i = ia then 1::'a else (0::'a)) * A $$ (ia, j))", "finally"], ["proof (chain)\npicking this:\n  (\\<Sum>ia = 0..<n.\n      A $$ (i, ia) * (k * (if ia = j then 1::'a else (0::'a)))) =\n  (\\<Sum>ia = 0..<n. k * (if i = ia then 1::'a else (0::'a)) * A $$ (ia, j))", "show ?thesis"], ["proof (prove)\nusing this:\n  (\\<Sum>ia = 0..<n.\n      A $$ (i, ia) * (k * (if ia = j then 1::'a else (0::'a)))) =\n  (\\<Sum>ia = 0..<n. k * (if i = ia then 1::'a else (0::'a)) * A $$ (ia, j))\n\ngoal (1 subgoal):\n 1. (\\<Sum>ia = 0..<n.\n        A $$ (i, ia) * (k * (if ia = j then 1::'a else (0::'a)))) =\n    (\\<Sum>ia = 0..<n.\n        k * (if i = ia then 1::'a else (0::'a)) * A $$ (ia, j))", "."], ["proof (state)\nthis:\n  (\\<Sum>ia = 0..<n.\n      A $$ (i, ia) * (k * (if ia = j then 1::'a else (0::'a)))) =\n  (\\<Sum>ia = 0..<n. k * (if i = ia then 1::'a else (0::'a)) * A $$ (ia, j))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>?i < n; ?j < n\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>ia = 0..<n.\n                        A $$ (?i, ia) *\n                        (k * (if ia = ?j then 1::'a else (0::'a)))) =\n                    (\\<Sum>ia = 0..<n.\n                        k * (if ?i = ia then 1::'a else (0::'a)) *\n                        A $$ (ia, ?j))\n\ngoal (1 subgoal):\n 1. A * (k \\<cdot>\\<^sub>m 1\\<^sub>m n) = k \\<cdot>\\<^sub>m 1\\<^sub>m n * A", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i < n; ?j < n\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>ia = 0..<n.\n                        A $$ (?i, ia) *\n                        (k * (if ia = ?j then 1::'a else (0::'a)))) =\n                    (\\<Sum>ia = 0..<n.\n                        k * (if ?i = ia then 1::'a else (0::'a)) *\n                        A $$ (ia, ?j))\n\ngoal (1 subgoal):\n 1. A * (k \\<cdot>\\<^sub>m 1\\<^sub>m n) = k \\<cdot>\\<^sub>m 1\\<^sub>m n * A", "using A"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i < n; ?j < n\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>ia = 0..<n.\n                        A $$ (?i, ia) *\n                        (k * (if ia = ?j then 1::'a else (0::'a)))) =\n                    (\\<Sum>ia = 0..<n.\n                        k * (if ?i = ia then 1::'a else (0::'a)) *\n                        A $$ (ia, ?j))\n  A \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. A * (k \\<cdot>\\<^sub>m 1\\<^sub>m n) = k \\<cdot>\\<^sub>m 1\\<^sub>m n * A", "unfolding times_mat_def scalar_prod_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?i < n; ?j < n\\<rbrakk>\n  \\<Longrightarrow> (\\<Sum>ia = 0..<n.\n                        A $$ (?i, ia) *\n                        (k * (if ia = ?j then 1::'a else (0::'a)))) =\n                    (\\<Sum>ia = 0..<n.\n                        k * (if ?i = ia then 1::'a else (0::'a)) *\n                        A $$ (ia, ?j))\n  A \\<in> carrier_mat n n\n\ngoal (1 subgoal):\n 1. Matrix.mat (dim_row A) (dim_col (k \\<cdot>\\<^sub>m 1\\<^sub>m n))\n     (\\<lambda>(i, j).\n         \\<Sum>ia = 0..<dim_vec (col (k \\<cdot>\\<^sub>m 1\\<^sub>m n) j).\n            Matrix.row A i $v ia *\n            col (k \\<cdot>\\<^sub>m 1\\<^sub>m n) j $v ia) =\n    Matrix.mat (dim_row (k \\<cdot>\\<^sub>m 1\\<^sub>m n)) (dim_col A)\n     (\\<lambda>(i, j).\n         \\<Sum>ia = 0..<dim_vec (col A j).\n            Matrix.row (k \\<cdot>\\<^sub>m 1\\<^sub>m n) i $v ia *\n            col A j $v ia)", "by auto (rule eq_matI, auto, smt sum.cong)"], ["proof (state)\nthis:\n  A * (k \\<cdot>\\<^sub>m 1\\<^sub>m n) = k \\<cdot>\\<^sub>m 1\\<^sub>m n * A\n\ngoal:\nNo subgoals!", "qed"], ["", "(*This lemma is obtained using Mod_Type_Connect, otherwise we cannot prove HMA_I 0 0.\nThe lelma could also be obtained with no use of transfer rules, proving it directly.*)"], ["", "lemma det_2:\n  assumes A: \"A \\<in> carrier_mat 2 2\"\n  shows \"Determinant.det A = A$$(0,0) * A $$ (1,1) - A$$(0,1)*A$$(1,0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det A =\n    A $$ (0, 0) * A $$ (1, 1) - A $$ (0, 1) * A $$ (1, 0)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Determinant.det A =\n    A $$ (0, 0) * A $$ (1, 1) - A $$ (0, 1) * A $$ (1, 0)", "let ?A = \"(Mod_Type_Connect.to_hma\\<^sub>m A)::'a^2^2\""], ["proof (state)\ngoal (1 subgoal):\n 1. Determinant.det A =\n    A $$ (0, 0) * A $$ (1, 1) - A $$ (0, 1) * A $$ (1, 0)", "have [transfer_rule]: \"Mod_Type_Connect.HMA_M A ?A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Mod_Type_Connect.HMA_M A (Mod_Type_Connect.to_hma\\<^sub>m A)", "unfolding Mod_Type_Connect.HMA_M_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. A =\n    Mod_Type_Connect.from_hma\\<^sub>m (Mod_Type_Connect.to_hma\\<^sub>m A)", "using from_hma_to_hma\\<^sub>m A"], ["proof (prove)\nusing this:\n  ?A \\<in> carrier_mat CARD(?'nr) CARD(?'nc) \\<Longrightarrow>\n  from_hma\\<^sub>m (to_hma\\<^sub>m ?A) = ?A\n  A \\<in> carrier_mat 2 2\n\ngoal (1 subgoal):\n 1. A =\n    Mod_Type_Connect.from_hma\\<^sub>m (Mod_Type_Connect.to_hma\\<^sub>m A)", "by auto"], ["proof (state)\nthis:\n  Mod_Type_Connect.HMA_M A (Mod_Type_Connect.to_hma\\<^sub>m A)\n\ngoal (1 subgoal):\n 1. Determinant.det A =\n    A $$ (0, 0) * A $$ (1, 1) - A $$ (0, 1) * A $$ (1, 0)", "have [transfer_rule]: \"Mod_Type_Connect.HMA_I 0 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Mod_Type_Connect.HMA_I 0 (0::'b)", "unfolding Mod_Type_Connect.HMA_I_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 = mod_type_class.to_nat (0::'b)", "by (simp add: to_nat_0)"], ["proof (state)\nthis:\n  Mod_Type_Connect.HMA_I 0 (0::?'b1)\n\ngoal (1 subgoal):\n 1. Determinant.det A =\n    A $$ (0, 0) * A $$ (1, 1) - A $$ (0, 1) * A $$ (1, 0)", "have [transfer_rule]: \"Mod_Type_Connect.HMA_I 1 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Mod_Type_Connect.HMA_I 1 (1::'b)", "unfolding Mod_Type_Connect.HMA_I_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 = mod_type_class.to_nat (1::'b)", "by (simp add: to_nat_1)"], ["proof (state)\nthis:\n  Mod_Type_Connect.HMA_I 1 (1::?'b2)\n\ngoal (1 subgoal):\n 1. Determinant.det A =\n    A $$ (0, 0) * A $$ (1, 1) - A $$ (0, 1) * A $$ (1, 0)", "have \"Determinant.det A = Determinants.det ?A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det A = Determinants.det (Mod_Type_Connect.to_hma\\<^sub>m A)", "by (transfer, simp)"], ["proof (state)\nthis:\n  Determinant.det A = Determinants.det (Mod_Type_Connect.to_hma\\<^sub>m A)\n\ngoal (1 subgoal):\n 1. Determinant.det A =\n    A $$ (0, 0) * A $$ (1, 1) - A $$ (0, 1) * A $$ (1, 0)", "also"], ["proof (state)\nthis:\n  Determinant.det A = Determinants.det (Mod_Type_Connect.to_hma\\<^sub>m A)\n\ngoal (1 subgoal):\n 1. Determinant.det A =\n    A $$ (0, 0) * A $$ (1, 1) - A $$ (0, 1) * A $$ (1, 0)", "have \"... = ?A $h 1 $h 1 * ?A $h 2 $h 2 - ?A $h 1 $h 2 * ?A $h 2 $h 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinants.det (Mod_Type_Connect.to_hma\\<^sub>m A) =\n    Mod_Type_Connect.to_hma\\<^sub>m A $h 1 $h 1 *\n    Mod_Type_Connect.to_hma\\<^sub>m A $h 2 $h 2 -\n    Mod_Type_Connect.to_hma\\<^sub>m A $h 1 $h 2 *\n    Mod_Type_Connect.to_hma\\<^sub>m A $h 2 $h 1", "unfolding det_2"], ["proof (prove)\ngoal (1 subgoal):\n 1. Mod_Type_Connect.to_hma\\<^sub>m A $h 1 $h 1 *\n    Mod_Type_Connect.to_hma\\<^sub>m A $h 2 $h 2 -\n    Mod_Type_Connect.to_hma\\<^sub>m A $h 1 $h 2 *\n    Mod_Type_Connect.to_hma\\<^sub>m A $h 2 $h 1 =\n    Mod_Type_Connect.to_hma\\<^sub>m A $h 1 $h 1 *\n    Mod_Type_Connect.to_hma\\<^sub>m A $h 2 $h 2 -\n    Mod_Type_Connect.to_hma\\<^sub>m A $h 1 $h 2 *\n    Mod_Type_Connect.to_hma\\<^sub>m A $h 2 $h 1", "by simp"], ["proof (state)\nthis:\n  Determinants.det (Mod_Type_Connect.to_hma\\<^sub>m A) =\n  Mod_Type_Connect.to_hma\\<^sub>m A $h 1 $h 1 *\n  Mod_Type_Connect.to_hma\\<^sub>m A $h 2 $h 2 -\n  Mod_Type_Connect.to_hma\\<^sub>m A $h 1 $h 2 *\n  Mod_Type_Connect.to_hma\\<^sub>m A $h 2 $h 1\n\ngoal (1 subgoal):\n 1. Determinant.det A =\n    A $$ (0, 0) * A $$ (1, 1) - A $$ (0, 1) * A $$ (1, 0)", "also"], ["proof (state)\nthis:\n  Determinants.det (Mod_Type_Connect.to_hma\\<^sub>m A) =\n  Mod_Type_Connect.to_hma\\<^sub>m A $h 1 $h 1 *\n  Mod_Type_Connect.to_hma\\<^sub>m A $h 2 $h 2 -\n  Mod_Type_Connect.to_hma\\<^sub>m A $h 1 $h 2 *\n  Mod_Type_Connect.to_hma\\<^sub>m A $h 2 $h 1\n\ngoal (1 subgoal):\n 1. Determinant.det A =\n    A $$ (0, 0) * A $$ (1, 1) - A $$ (0, 1) * A $$ (1, 0)", "have \"... = ?A $h 0 $h 0 * ?A $h 1 $h 1 - ?A $h 0 $h 1 * ?A $h 1 $h 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Mod_Type_Connect.to_hma\\<^sub>m A $h 1 $h 1 *\n    Mod_Type_Connect.to_hma\\<^sub>m A $h 2 $h 2 -\n    Mod_Type_Connect.to_hma\\<^sub>m A $h 1 $h 2 *\n    Mod_Type_Connect.to_hma\\<^sub>m A $h 2 $h 1 =\n    Mod_Type_Connect.to_hma\\<^sub>m A $h 0 $h 0 *\n    Mod_Type_Connect.to_hma\\<^sub>m A $h 1 $h 1 -\n    Mod_Type_Connect.to_hma\\<^sub>m A $h 0 $h 1 *\n    Mod_Type_Connect.to_hma\\<^sub>m A $h 1 $h 0", "by (smt Groups.mult_ac(2) exhaust_2 semiring_norm(160))"], ["proof (state)\nthis:\n  Mod_Type_Connect.to_hma\\<^sub>m A $h 1 $h 1 *\n  Mod_Type_Connect.to_hma\\<^sub>m A $h 2 $h 2 -\n  Mod_Type_Connect.to_hma\\<^sub>m A $h 1 $h 2 *\n  Mod_Type_Connect.to_hma\\<^sub>m A $h 2 $h 1 =\n  Mod_Type_Connect.to_hma\\<^sub>m A $h 0 $h 0 *\n  Mod_Type_Connect.to_hma\\<^sub>m A $h 1 $h 1 -\n  Mod_Type_Connect.to_hma\\<^sub>m A $h 0 $h 1 *\n  Mod_Type_Connect.to_hma\\<^sub>m A $h 1 $h 0\n\ngoal (1 subgoal):\n 1. Determinant.det A =\n    A $$ (0, 0) * A $$ (1, 1) - A $$ (0, 1) * A $$ (1, 0)", "also"], ["proof (state)\nthis:\n  Mod_Type_Connect.to_hma\\<^sub>m A $h 1 $h 1 *\n  Mod_Type_Connect.to_hma\\<^sub>m A $h 2 $h 2 -\n  Mod_Type_Connect.to_hma\\<^sub>m A $h 1 $h 2 *\n  Mod_Type_Connect.to_hma\\<^sub>m A $h 2 $h 1 =\n  Mod_Type_Connect.to_hma\\<^sub>m A $h 0 $h 0 *\n  Mod_Type_Connect.to_hma\\<^sub>m A $h 1 $h 1 -\n  Mod_Type_Connect.to_hma\\<^sub>m A $h 0 $h 1 *\n  Mod_Type_Connect.to_hma\\<^sub>m A $h 1 $h 0\n\ngoal (1 subgoal):\n 1. Determinant.det A =\n    A $$ (0, 0) * A $$ (1, 1) - A $$ (0, 1) * A $$ (1, 0)", "have \"... = A$$(0,0) * A $$ (1,1) - A$$(0,1)*A$$(1,0)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Mod_Type_Connect.to_hma\\<^sub>m A $h 0 $h 0 *\n    Mod_Type_Connect.to_hma\\<^sub>m A $h 1 $h 1 -\n    Mod_Type_Connect.to_hma\\<^sub>m A $h 0 $h 1 *\n    Mod_Type_Connect.to_hma\\<^sub>m A $h 1 $h 0 =\n    A $$ (0, 0) * A $$ (1, 1) - A $$ (0, 1) * A $$ (1, 0)", "unfolding index_hma_def[symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. index_hma (Mod_Type_Connect.to_hma\\<^sub>m A) 0 0 *\n    index_hma (Mod_Type_Connect.to_hma\\<^sub>m A) 1 1 -\n    index_hma (Mod_Type_Connect.to_hma\\<^sub>m A) 0 1 *\n    index_hma (Mod_Type_Connect.to_hma\\<^sub>m A) 1 0 =\n    A $$ (0, 0) * A $$ (1, 1) - A $$ (0, 1) * A $$ (1, 0)", "by (transfer, auto)"], ["proof (state)\nthis:\n  Mod_Type_Connect.to_hma\\<^sub>m A $h 0 $h 0 *\n  Mod_Type_Connect.to_hma\\<^sub>m A $h 1 $h 1 -\n  Mod_Type_Connect.to_hma\\<^sub>m A $h 0 $h 1 *\n  Mod_Type_Connect.to_hma\\<^sub>m A $h 1 $h 0 =\n  A $$ (0, 0) * A $$ (1, 1) - A $$ (0, 1) * A $$ (1, 0)\n\ngoal (1 subgoal):\n 1. Determinant.det A =\n    A $$ (0, 0) * A $$ (1, 1) - A $$ (0, 1) * A $$ (1, 0)", "finally"], ["proof (chain)\npicking this:\n  Determinant.det A = A $$ (0, 0) * A $$ (1, 1) - A $$ (0, 1) * A $$ (1, 0)", "show ?thesis"], ["proof (prove)\nusing this:\n  Determinant.det A = A $$ (0, 0) * A $$ (1, 1) - A $$ (0, 1) * A $$ (1, 0)\n\ngoal (1 subgoal):\n 1. Determinant.det A =\n    A $$ (0, 0) * A $$ (1, 1) - A $$ (0, 1) * A $$ (1, 0)", "."], ["proof (state)\nthis:\n  Determinant.det A = A $$ (0, 0) * A $$ (1, 1) - A $$ (0, 1) * A $$ (1, 0)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma mat_diag_smult: \"mat_diag n (\\<lambda> x. (k::'a::comm_ring_1)) = (k \\<cdot>\\<^sub>m 1\\<^sub>m n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mat_diag n (\\<lambda>x. k) = k \\<cdot>\\<^sub>m 1\\<^sub>m n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. mat_diag n (\\<lambda>x. k) = k \\<cdot>\\<^sub>m 1\\<^sub>m n", "have \"mat_diag n (\\<lambda> x. k) = mat_diag n (\\<lambda> x. k * 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mat_diag n (\\<lambda>x. k) = mat_diag n (\\<lambda>x. k * (1::'a))", "by auto"], ["proof (state)\nthis:\n  mat_diag n (\\<lambda>x. k) = mat_diag n (\\<lambda>x. k * (1::'a))\n\ngoal (1 subgoal):\n 1. mat_diag n (\\<lambda>x. k) = k \\<cdot>\\<^sub>m 1\\<^sub>m n", "also"], ["proof (state)\nthis:\n  mat_diag n (\\<lambda>x. k) = mat_diag n (\\<lambda>x. k * (1::'a))\n\ngoal (1 subgoal):\n 1. mat_diag n (\\<lambda>x. k) = k \\<cdot>\\<^sub>m 1\\<^sub>m n", "have \"... = mat_diag n (\\<lambda> x. k) * mat_diag n (\\<lambda> x. 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mat_diag n (\\<lambda>x. k * (1::'a)) =\n    mat_diag n (\\<lambda>x. k) * mat_diag n (\\<lambda>x. 1::'a)", "using mat_diag_diag"], ["proof (prove)\nusing this:\n  mat_diag ?n ?f * mat_diag ?n ?g = mat_diag ?n (\\<lambda>i. ?f i * ?g i)\n\ngoal (1 subgoal):\n 1. mat_diag n (\\<lambda>x. k * (1::'a)) =\n    mat_diag n (\\<lambda>x. k) * mat_diag n (\\<lambda>x. 1::'a)", "by (simp add: mat_diag_def)"], ["proof (state)\nthis:\n  mat_diag n (\\<lambda>x. k * (1::'a)) =\n  mat_diag n (\\<lambda>x. k) * mat_diag n (\\<lambda>x. 1::'a)\n\ngoal (1 subgoal):\n 1. mat_diag n (\\<lambda>x. k) = k \\<cdot>\\<^sub>m 1\\<^sub>m n", "also"], ["proof (state)\nthis:\n  mat_diag n (\\<lambda>x. k * (1::'a)) =\n  mat_diag n (\\<lambda>x. k) * mat_diag n (\\<lambda>x. 1::'a)\n\ngoal (1 subgoal):\n 1. mat_diag n (\\<lambda>x. k) = k \\<cdot>\\<^sub>m 1\\<^sub>m n", "have \"... = mat_diag n (\\<lambda> x. k) * (1\\<^sub>m n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mat_diag n (\\<lambda>x. k) * mat_diag n (\\<lambda>x. 1::'a) =\n    mat_diag n (\\<lambda>x. k) * 1\\<^sub>m n", "by auto"], ["proof (state)\nthis:\n  mat_diag n (\\<lambda>x. k) * mat_diag n (\\<lambda>x. 1::'a) =\n  mat_diag n (\\<lambda>x. k) * 1\\<^sub>m n\n\ngoal (1 subgoal):\n 1. mat_diag n (\\<lambda>x. k) = k \\<cdot>\\<^sub>m 1\\<^sub>m n", "thm mat_diag_mult_left"], ["proof (state)\nthis:\n  mat_diag n (\\<lambda>x. k) * mat_diag n (\\<lambda>x. 1::'a) =\n  mat_diag n (\\<lambda>x. k) * 1\\<^sub>m n\n\ngoal (1 subgoal):\n 1. mat_diag n (\\<lambda>x. k) = k \\<cdot>\\<^sub>m 1\\<^sub>m n", "also"], ["proof (state)\nthis:\n  mat_diag n (\\<lambda>x. k) * mat_diag n (\\<lambda>x. 1::'a) =\n  mat_diag n (\\<lambda>x. k) * 1\\<^sub>m n\n\ngoal (1 subgoal):\n 1. mat_diag n (\\<lambda>x. k) = k \\<cdot>\\<^sub>m 1\\<^sub>m n", "have \"... = Matrix.mat n n (\\<lambda>(i, j). k * (1\\<^sub>m n) $$ (i, j))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. mat_diag n (\\<lambda>x. k) * 1\\<^sub>m n =\n    Matrix.mat n n (\\<lambda>(i, j). k * 1\\<^sub>m n $$ (i, j))", "by (rule mat_diag_mult_left, auto)"], ["proof (state)\nthis:\n  mat_diag n (\\<lambda>x. k) * 1\\<^sub>m n =\n  Matrix.mat n n (\\<lambda>(i, j). k * 1\\<^sub>m n $$ (i, j))\n\ngoal (1 subgoal):\n 1. mat_diag n (\\<lambda>x. k) = k \\<cdot>\\<^sub>m 1\\<^sub>m n", "also"], ["proof (state)\nthis:\n  mat_diag n (\\<lambda>x. k) * 1\\<^sub>m n =\n  Matrix.mat n n (\\<lambda>(i, j). k * 1\\<^sub>m n $$ (i, j))\n\ngoal (1 subgoal):\n 1. mat_diag n (\\<lambda>x. k) = k \\<cdot>\\<^sub>m 1\\<^sub>m n", "have \"... = (k \\<cdot>\\<^sub>m 1\\<^sub>m n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Matrix.mat n n (\\<lambda>(i, j). k * 1\\<^sub>m n $$ (i, j)) =\n    k \\<cdot>\\<^sub>m 1\\<^sub>m n", "unfolding smult_mat_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. Matrix.mat n n (\\<lambda>(i, j). k * 1\\<^sub>m n $$ (i, j)) =\n    map_mat ((*) k) (1\\<^sub>m n)", "by auto"], ["proof (state)\nthis:\n  Matrix.mat n n (\\<lambda>(i, j). k * 1\\<^sub>m n $$ (i, j)) =\n  k \\<cdot>\\<^sub>m 1\\<^sub>m n\n\ngoal (1 subgoal):\n 1. mat_diag n (\\<lambda>x. k) = k \\<cdot>\\<^sub>m 1\\<^sub>m n", "finally"], ["proof (chain)\npicking this:\n  mat_diag n (\\<lambda>x. k) = k \\<cdot>\\<^sub>m 1\\<^sub>m n", "show ?thesis"], ["proof (prove)\nusing this:\n  mat_diag n (\\<lambda>x. k) = k \\<cdot>\\<^sub>m 1\\<^sub>m n\n\ngoal (1 subgoal):\n 1. mat_diag n (\\<lambda>x. k) = k \\<cdot>\\<^sub>m 1\\<^sub>m n", "."], ["proof (state)\nthis:\n  mat_diag n (\\<lambda>x. k) = k \\<cdot>\\<^sub>m 1\\<^sub>m n\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma invertible_mat_four_block_mat_lower_right:\n  assumes A: \"(A::'a::comm_ring_1 mat) \\<in> carrier_mat n n\" and inv_A: \"invertible_mat A\"\n  shows \"invertible_mat (four_block_mat (1\\<^sub>m 1) (0\\<^sub>m 1 n) (0\\<^sub>m n 1) A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible_mat\n     (four_block_mat (1\\<^sub>m 1) (0\\<^sub>m 1 n) (0\\<^sub>m n 1) A)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. invertible_mat\n     (four_block_mat (1\\<^sub>m 1) (0\\<^sub>m 1 n) (0\\<^sub>m n 1) A)", "let ?I = \"(four_block_mat (1\\<^sub>m 1) (0\\<^sub>m 1 n) (0\\<^sub>m n 1) A)\""], ["proof (state)\ngoal (1 subgoal):\n 1. invertible_mat\n     (four_block_mat (1\\<^sub>m 1) (0\\<^sub>m 1 n) (0\\<^sub>m n 1) A)", "have \"Determinant.det ?I = Determinant.det (1\\<^sub>m 1) * Determinant.det A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det\n     (four_block_mat (1\\<^sub>m 1) (0\\<^sub>m 1 n) (0\\<^sub>m n 1) A) =\n    Determinant.det (1\\<^sub>m 1) * Determinant.det A", "by (rule det_four_block_mat_lower_left_zero_col, insert assms, auto)"], ["proof (state)\nthis:\n  Determinant.det\n   (four_block_mat (1\\<^sub>m 1) (0\\<^sub>m 1 n) (0\\<^sub>m n 1) A) =\n  Determinant.det (1\\<^sub>m 1) * Determinant.det A\n\ngoal (1 subgoal):\n 1. invertible_mat\n     (four_block_mat (1\\<^sub>m 1) (0\\<^sub>m 1 n) (0\\<^sub>m n 1) A)", "also"], ["proof (state)\nthis:\n  Determinant.det\n   (four_block_mat (1\\<^sub>m 1) (0\\<^sub>m 1 n) (0\\<^sub>m n 1) A) =\n  Determinant.det (1\\<^sub>m 1) * Determinant.det A\n\ngoal (1 subgoal):\n 1. invertible_mat\n     (four_block_mat (1\\<^sub>m 1) (0\\<^sub>m 1 n) (0\\<^sub>m n 1) A)", "have \"... = Determinant.det A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (1\\<^sub>m 1) * Determinant.det A = Determinant.det A", "by auto"], ["proof (state)\nthis:\n  Determinant.det (1\\<^sub>m 1) * Determinant.det A = Determinant.det A\n\ngoal (1 subgoal):\n 1. invertible_mat\n     (four_block_mat (1\\<^sub>m 1) (0\\<^sub>m 1 n) (0\\<^sub>m n 1) A)", "finally"], ["proof (chain)\npicking this:\n  Determinant.det\n   (four_block_mat (1\\<^sub>m 1) (0\\<^sub>m 1 n) (0\\<^sub>m n 1) A) =\n  Determinant.det A", "have \"Determinant.det ?I = Determinant.det A\""], ["proof (prove)\nusing this:\n  Determinant.det\n   (four_block_mat (1\\<^sub>m 1) (0\\<^sub>m 1 n) (0\\<^sub>m n 1) A) =\n  Determinant.det A\n\ngoal (1 subgoal):\n 1. Determinant.det\n     (four_block_mat (1\\<^sub>m 1) (0\\<^sub>m 1 n) (0\\<^sub>m n 1) A) =\n    Determinant.det A", "."], ["proof (state)\nthis:\n  Determinant.det\n   (four_block_mat (1\\<^sub>m 1) (0\\<^sub>m 1 n) (0\\<^sub>m n 1) A) =\n  Determinant.det A\n\ngoal (1 subgoal):\n 1. invertible_mat\n     (four_block_mat (1\\<^sub>m 1) (0\\<^sub>m 1 n) (0\\<^sub>m n 1) A)", "thus ?thesis"], ["proof (prove)\nusing this:\n  Determinant.det\n   (four_block_mat (1\\<^sub>m 1) (0\\<^sub>m 1 n) (0\\<^sub>m n 1) A) =\n  Determinant.det A\n\ngoal (1 subgoal):\n 1. invertible_mat\n     (four_block_mat (1\\<^sub>m 1) (0\\<^sub>m 1 n) (0\\<^sub>m n 1) A)", "by (metis (no_types, lifting) assms carrier_matD(1) carrier_matD(2) carrier_mat_triv\n        index_mat_four_block(2) index_mat_four_block(3) index_one_mat(2) index_one_mat(3)\n        invertible_iff_is_unit_JNF)"], ["proof (state)\nthis:\n  invertible_mat\n   (four_block_mat (1\\<^sub>m 1) (0\\<^sub>m 1 n) (0\\<^sub>m n 1) A)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma invertible_mat_four_block_mat_lower_right_id:\n  assumes A: \"(A::'a::comm_ring_1 mat) \\<in> carrier_mat m m\" and B: \"B = 0\\<^sub>m m (n-m)\" and C: \"C = 0\\<^sub>m (n-m) m\"\n    and D: \"D = 1\\<^sub>m (n-m)\" and \"n>m\" and inv_A: \"invertible_mat A\"\n  shows \"invertible_mat (four_block_mat A B C D)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invertible_mat (four_block_mat A B C D)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. invertible_mat (four_block_mat A B C D)", "have \"Determinant.det (four_block_mat A B C D) = Determinant.det A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Determinant.det (four_block_mat A B C D) = Determinant.det A", "by (rule det_four_block_mat_lower_right_id, insert assms, auto)"], ["proof (state)\nthis:\n  Determinant.det (four_block_mat A B C D) = Determinant.det A\n\ngoal (1 subgoal):\n 1. invertible_mat (four_block_mat A B C D)", "thus ?thesis"], ["proof (prove)\nusing this:\n  Determinant.det (four_block_mat A B C D) = Determinant.det A\n\ngoal (1 subgoal):\n 1. invertible_mat (four_block_mat A B C D)", "using inv_A"], ["proof (prove)\nusing this:\n  Determinant.det (four_block_mat A B C D) = Determinant.det A\n  invertible_mat A\n\ngoal (1 subgoal):\n 1. invertible_mat (four_block_mat A B C D)", "by (metis (no_types, lifting) assms(1) assms(4) carrier_matD(1) carrier_matD(2) carrier_mat_triv\n        index_mat_four_block(2) index_mat_four_block(3) index_one_mat(2) index_one_mat(3)\n        invertible_iff_is_unit_JNF)"], ["proof (state)\nthis:\n  invertible_mat (four_block_mat A B C D)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma split_block4_decreases_dim_row:\n  assumes E: \"(A,B,C,D) = split_block E 1 1\"\n    and E1: \"dim_row E > 1\" and E2: \"dim_col E > 1\"\n  shows \"dim_row D < dim_row E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. dim_row D < dim_row E", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. dim_row D < dim_row E", "have \"D \\<in> carrier_mat (1 + (dim_row E - 2)) (1 + (dim_col E - 2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. D \\<in> carrier_mat (1 + (dim_row E - 2)) (1 + (dim_col E - 2))", "by (rule split_block(4)[OF E[symmetric]], insert E1 E2, auto)"], ["proof (state)\nthis:\n  D \\<in> carrier_mat (1 + (dim_row E - 2)) (1 + (dim_col E - 2))\n\ngoal (1 subgoal):\n 1. dim_row D < dim_row E", "hence \"D \\<in> carrier_mat (dim_row E - 1) (dim_col E - 1)\""], ["proof (prove)\nusing this:\n  D \\<in> carrier_mat (1 + (dim_row E - 2)) (1 + (dim_col E - 2))\n\ngoal (1 subgoal):\n 1. D \\<in> carrier_mat (dim_row E - 1) (dim_col E - 1)", "using E1 E2"], ["proof (prove)\nusing this:\n  D \\<in> carrier_mat (1 + (dim_row E - 2)) (1 + (dim_col E - 2))\n  1 < dim_row E\n  1 < dim_col E\n\ngoal (1 subgoal):\n 1. D \\<in> carrier_mat (dim_row E - 1) (dim_col E - 1)", "by auto"], ["proof (state)\nthis:\n  D \\<in> carrier_mat (dim_row E - 1) (dim_col E - 1)\n\ngoal (1 subgoal):\n 1. dim_row D < dim_row E", "thus ?thesis"], ["proof (prove)\nusing this:\n  D \\<in> carrier_mat (dim_row E - 1) (dim_col E - 1)\n\ngoal (1 subgoal):\n 1. dim_row D < dim_row E", "using E1"], ["proof (prove)\nusing this:\n  D \\<in> carrier_mat (dim_row E - 1) (dim_col E - 1)\n  1 < dim_row E\n\ngoal (1 subgoal):\n 1. dim_row D < dim_row E", "by auto"], ["proof (state)\nthis:\n  dim_row D < dim_row E\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma inv_P'PAQQ':\n  assumes A: \"A \\<in> carrier_mat n n\"\n    and P: \"P \\<in> carrier_mat n n\"\n    and inv_P: \"inverts_mat P' P\"\n    and inv_Q: \"inverts_mat Q Q'\"\n    and Q: \"Q \\<in> carrier_mat n n\"\n    and P': \"P' \\<in> carrier_mat n n\"\n    and Q': \"Q' \\<in> carrier_mat n n\"\nshows  \"(P'*(P*A*Q)*Q') = A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P' * (P * A * Q) * Q' = A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P' * (P * A * Q) * Q' = A", "have \"(P'*(P*A*Q)*Q') = (P'*(P*A*Q*Q'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P' * (P * A * Q) * Q' = P' * (P * A * Q * Q')", "by (smt P P' Q Q' assoc_mult_mat carrier_matD(1) carrier_matD(2) carrier_mat_triv\n        index_mult_mat(2) index_mult_mat(3))"], ["proof (state)\nthis:\n  P' * (P * A * Q) * Q' = P' * (P * A * Q * Q')\n\ngoal (1 subgoal):\n 1. P' * (P * A * Q) * Q' = A", "also"], ["proof (state)\nthis:\n  P' * (P * A * Q) * Q' = P' * (P * A * Q * Q')\n\ngoal (1 subgoal):\n 1. P' * (P * A * Q) * Q' = A", "have \"... = ((P'*P)*A*(Q*Q'))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P' * (P * A * Q * Q') = P' * P * A * (Q * Q')", "by (smt A P P' Q Q' assoc_mult_mat carrier_matD(1) carrier_matD(2) carrier_mat_triv\n        index_mult_mat(3) inv_Q inverts_mat_def right_mult_one_mat')"], ["proof (state)\nthis:\n  P' * (P * A * Q * Q') = P' * P * A * (Q * Q')\n\ngoal (1 subgoal):\n 1. P' * (P * A * Q) * Q' = A", "finally"], ["proof (chain)\npicking this:\n  P' * (P * A * Q) * Q' = P' * P * A * (Q * Q')", "show ?thesis"], ["proof (prove)\nusing this:\n  P' * (P * A * Q) * Q' = P' * P * A * (Q * Q')\n\ngoal (1 subgoal):\n 1. P' * (P * A * Q) * Q' = A", "by (metis P' Q A inv_P inv_Q carrier_matD(1) inverts_mat_def\n        left_mult_one_mat right_mult_one_mat)"], ["proof (state)\nthis:\n  P' * (P * A * Q) * Q' = A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma\n  assumes \"U \\<in> carrier_mat 2 2\" and \"V \\<in> carrier_mat 2 2\" and \"A = U * V\"\nshows mat_mult2_00: \"A $$ (0,0) = U $$ (0,0)*V $$ (0,0) + U $$ (0,1)*V $$ (1,0)\"\n  and mat_mult2_01: \"A $$ (0,1) = U $$ (0,0)*V $$ (0,1) + U $$ (0,1)*V $$ (1,1)\"\n  and mat_mult2_10: \"A $$ (1,0) = U $$ (1,0)*V $$ (0,0) + U $$ (1,1)*V $$ (1,0)\"\n  and mat_mult2_11: \"A $$ (1,1) = U $$ (1,0)*V $$ (0,1) + U $$ (1,1)*V $$ (1,1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (A $$ (0, 0) = U $$ (0, 0) * V $$ (0, 0) + U $$ (0, 1) * V $$ (1, 0) &&&\n     A $$ (0, 1) =\n     U $$ (0, 0) * V $$ (0, 1) + U $$ (0, 1) * V $$ (1, 1)) &&&\n    A $$ (1, 0) = U $$ (1, 0) * V $$ (0, 0) + U $$ (1, 1) * V $$ (1, 0) &&&\n    A $$ (1, 1) = U $$ (1, 0) * V $$ (0, 1) + U $$ (1, 1) * V $$ (1, 1)", "using assms"], ["proof (prove)\nusing this:\n  U \\<in> carrier_mat 2 2\n  V \\<in> carrier_mat 2 2\n  A = U * V\n\ngoal (1 subgoal):\n 1. (A $$ (0, 0) = U $$ (0, 0) * V $$ (0, 0) + U $$ (0, 1) * V $$ (1, 0) &&&\n     A $$ (0, 1) =\n     U $$ (0, 0) * V $$ (0, 1) + U $$ (0, 1) * V $$ (1, 1)) &&&\n    A $$ (1, 0) = U $$ (1, 0) * V $$ (0, 0) + U $$ (1, 1) * V $$ (1, 0) &&&\n    A $$ (1, 1) = U $$ (1, 0) * V $$ (0, 1) + U $$ (1, 1) * V $$ (1, 1)", "unfolding times_mat_def Matrix.row_def col_def scalar_prod_def"], ["proof (prove)\nusing this:\n  U \\<in> carrier_mat 2 2\n  V \\<in> carrier_mat 2 2\n  A =\n  Matrix.mat (dim_row U) (dim_col V)\n   (\\<lambda>(i, j).\n       \\<Sum>ia = 0..<dim_vec\n                       (Matrix.vec (dim_row V) (\\<lambda>i. V $$ (i, j))).\n          Matrix.vec (dim_col U) (\\<lambda>j. U $$ (i, j)) $v ia *\n          Matrix.vec (dim_row V) (\\<lambda>i. V $$ (i, j)) $v ia)\n\ngoal (1 subgoal):\n 1. (A $$ (0, 0) = U $$ (0, 0) * V $$ (0, 0) + U $$ (0, 1) * V $$ (1, 0) &&&\n     A $$ (0, 1) =\n     U $$ (0, 0) * V $$ (0, 1) + U $$ (0, 1) * V $$ (1, 1)) &&&\n    A $$ (1, 0) = U $$ (1, 0) * V $$ (0, 0) + U $$ (1, 1) * V $$ (1, 0) &&&\n    A $$ (1, 1) = U $$ (1, 0) * V $$ (0, 1) + U $$ (1, 1) * V $$ (1, 1)", "using sum_two_rw"], ["proof (prove)\nusing this:\n  U \\<in> carrier_mat 2 2\n  V \\<in> carrier_mat 2 2\n  A =\n  Matrix.mat (dim_row U) (dim_col V)\n   (\\<lambda>(i, j).\n       \\<Sum>ia = 0..<dim_vec\n                       (Matrix.vec (dim_row V) (\\<lambda>i. V $$ (i, j))).\n          Matrix.vec (dim_col U) (\\<lambda>j. U $$ (i, j)) $v ia *\n          Matrix.vec (dim_row V) (\\<lambda>i. V $$ (i, j)) $v ia)\n  sum ?f {0..<2} = sum ?f {0, 1}\n\ngoal (1 subgoal):\n 1. (A $$ (0, 0) = U $$ (0, 0) * V $$ (0, 0) + U $$ (0, 1) * V $$ (1, 0) &&&\n     A $$ (0, 1) =\n     U $$ (0, 0) * V $$ (0, 1) + U $$ (0, 1) * V $$ (1, 1)) &&&\n    A $$ (1, 0) = U $$ (1, 0) * V $$ (0, 0) + U $$ (1, 1) * V $$ (1, 0) &&&\n    A $$ (1, 1) = U $$ (1, 0) * V $$ (0, 1) + U $$ (1, 1) * V $$ (1, 1)", "by auto"], ["", "subsection\\<open>Lemmas about @{text \"sorted lists\"}, @{text \"insort\"} and @{text \"pick\"}\\<close>"], ["", "lemma sorted_distinct_imp_sorted_wrt:\n  assumes \"sorted xs\" and \"distinct xs\"\n  shows \"sorted_wrt (<) xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_wrt (<) xs", "using assms"], ["proof (prove)\nusing this:\n  sorted xs\n  distinct xs\n\ngoal (1 subgoal):\n 1. sorted_wrt (<) xs", "by (induct xs, insert le_neq_trans, auto)"], ["", "lemma sorted_map_strict:\n  assumes \"strict_mono_on g {0..<n}\"\n  shows \"sorted (map g [0..<n])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted (map g [0..<n])", "using assms"], ["proof (prove)\nusing this:\n  strict_mono_on g {0..<n}\n\ngoal (1 subgoal):\n 1. sorted (map g [0..<n])", "by (induct n, auto simp add: sorted_append strict_mono_on_def less_imp_le)"], ["", "lemma sorted_list_of_set_map_strict:\n  assumes \"strict_mono_on g {0..<n}\"\n  shows \"sorted_list_of_set (g ` {0..<n}) = map g [0..<n]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_list_of_set (g ` {0..<n}) = map g [0..<n]", "using assms"], ["proof (prove)\nusing this:\n  strict_mono_on g {0..<n}\n\ngoal (1 subgoal):\n 1. sorted_list_of_set (g ` {0..<n}) = map g [0..<n]", "proof (induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. strict_mono_on g {0..<0} \\<Longrightarrow>\n    sorted_list_of_set (g ` {0..<0}) = map g [0..<0]\n 2. \\<And>n.\n       \\<lbrakk>strict_mono_on g {0..<n} \\<Longrightarrow>\n                sorted_list_of_set (g ` {0..<n}) = map g [0..<n];\n        strict_mono_on g {0..<Suc n}\\<rbrakk>\n       \\<Longrightarrow> sorted_list_of_set (g ` {0..<Suc n}) =\n                         map g [0..<Suc n]", "case 0"], ["proof (state)\nthis:\n  strict_mono_on g {0..<0}\n\ngoal (2 subgoals):\n 1. strict_mono_on g {0..<0} \\<Longrightarrow>\n    sorted_list_of_set (g ` {0..<0}) = map g [0..<0]\n 2. \\<And>n.\n       \\<lbrakk>strict_mono_on g {0..<n} \\<Longrightarrow>\n                sorted_list_of_set (g ` {0..<n}) = map g [0..<n];\n        strict_mono_on g {0..<Suc n}\\<rbrakk>\n       \\<Longrightarrow> sorted_list_of_set (g ` {0..<Suc n}) =\n                         map g [0..<Suc n]", "then"], ["proof (chain)\npicking this:\n  strict_mono_on g {0..<0}", "show ?case"], ["proof (prove)\nusing this:\n  strict_mono_on g {0..<0}\n\ngoal (1 subgoal):\n 1. sorted_list_of_set (g ` {0..<0}) = map g [0..<0]", "by auto"], ["proof (state)\nthis:\n  sorted_list_of_set (g ` {0..<0}) = map g [0..<0]\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>strict_mono_on g {0..<n} \\<Longrightarrow>\n                sorted_list_of_set (g ` {0..<n}) = map g [0..<n];\n        strict_mono_on g {0..<Suc n}\\<rbrakk>\n       \\<Longrightarrow> sorted_list_of_set (g ` {0..<Suc n}) =\n                         map g [0..<Suc n]", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>strict_mono_on g {0..<n} \\<Longrightarrow>\n                sorted_list_of_set (g ` {0..<n}) = map g [0..<n];\n        strict_mono_on g {0..<Suc n}\\<rbrakk>\n       \\<Longrightarrow> sorted_list_of_set (g ` {0..<Suc n}) =\n                         map g [0..<Suc n]", "case (Suc n)"], ["proof (state)\nthis:\n  strict_mono_on g {0..<n} \\<Longrightarrow>\n  sorted_list_of_set (g ` {0..<n}) = map g [0..<n]\n  strict_mono_on g {0..<Suc n}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>strict_mono_on g {0..<n} \\<Longrightarrow>\n                sorted_list_of_set (g ` {0..<n}) = map g [0..<n];\n        strict_mono_on g {0..<Suc n}\\<rbrakk>\n       \\<Longrightarrow> sorted_list_of_set (g ` {0..<Suc n}) =\n                         map g [0..<Suc n]", "note sg = Suc.prems"], ["proof (state)\nthis:\n  strict_mono_on g {0..<Suc n}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>strict_mono_on g {0..<n} \\<Longrightarrow>\n                sorted_list_of_set (g ` {0..<n}) = map g [0..<n];\n        strict_mono_on g {0..<Suc n}\\<rbrakk>\n       \\<Longrightarrow> sorted_list_of_set (g ` {0..<Suc n}) =\n                         map g [0..<Suc n]", "have sg_n: \"strict_mono_on g {0..<n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. strict_mono_on g {0..<n}", "using sg"], ["proof (prove)\nusing this:\n  strict_mono_on g {0..<Suc n}\n\ngoal (1 subgoal):\n 1. strict_mono_on g {0..<n}", "unfolding strict_mono_on_def"], ["proof (prove)\nusing this:\n  \\<forall>r s.\n     r \\<in> {0..<Suc n} \\<and>\n     s \\<in> {0..<Suc n} \\<and> r < s \\<longrightarrow>\n     g r < g s\n\ngoal (1 subgoal):\n 1. \\<forall>r s.\n       r \\<in> {0..<n} \\<and> s \\<in> {0..<n} \\<and> r < s \\<longrightarrow>\n       g r < g s", "by auto"], ["proof (state)\nthis:\n  strict_mono_on g {0..<n}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>strict_mono_on g {0..<n} \\<Longrightarrow>\n                sorted_list_of_set (g ` {0..<n}) = map g [0..<n];\n        strict_mono_on g {0..<Suc n}\\<rbrakk>\n       \\<Longrightarrow> sorted_list_of_set (g ` {0..<Suc n}) =\n                         map g [0..<Suc n]", "have g_image_rw: \"g ` {0..<Suc n} = insert (g n) (g ` {0..<n})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g ` {0..<Suc n} = insert (g n) (g ` {0..<n})", "by (simp add: set_upt_Suc)"], ["proof (state)\nthis:\n  g ` {0..<Suc n} = insert (g n) (g ` {0..<n})\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>strict_mono_on g {0..<n} \\<Longrightarrow>\n                sorted_list_of_set (g ` {0..<n}) = map g [0..<n];\n        strict_mono_on g {0..<Suc n}\\<rbrakk>\n       \\<Longrightarrow> sorted_list_of_set (g ` {0..<Suc n}) =\n                         map g [0..<Suc n]", "have \"sorted_list_of_set (g ` {0..<Suc n}) = sorted_list_of_set (insert (g n) (g ` {0..<n}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_list_of_set (g ` {0..<Suc n}) =\n    sorted_list_of_set (insert (g n) (g ` {0..<n}))", "using g_image_rw"], ["proof (prove)\nusing this:\n  g ` {0..<Suc n} = insert (g n) (g ` {0..<n})\n\ngoal (1 subgoal):\n 1. sorted_list_of_set (g ` {0..<Suc n}) =\n    sorted_list_of_set (insert (g n) (g ` {0..<n}))", "by simp"], ["proof (state)\nthis:\n  sorted_list_of_set (g ` {0..<Suc n}) =\n  sorted_list_of_set (insert (g n) (g ` {0..<n}))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>strict_mono_on g {0..<n} \\<Longrightarrow>\n                sorted_list_of_set (g ` {0..<n}) = map g [0..<n];\n        strict_mono_on g {0..<Suc n}\\<rbrakk>\n       \\<Longrightarrow> sorted_list_of_set (g ` {0..<Suc n}) =\n                         map g [0..<Suc n]", "also"], ["proof (state)\nthis:\n  sorted_list_of_set (g ` {0..<Suc n}) =\n  sorted_list_of_set (insert (g n) (g ` {0..<n}))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>strict_mono_on g {0..<n} \\<Longrightarrow>\n                sorted_list_of_set (g ` {0..<n}) = map g [0..<n];\n        strict_mono_on g {0..<Suc n}\\<rbrakk>\n       \\<Longrightarrow> sorted_list_of_set (g ` {0..<Suc n}) =\n                         map g [0..<Suc n]", "have \"... = insort (g n) (sorted_list_of_set (g ` {0..<n}))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_list_of_set (insert (g n) (g ` {0..<n})) =\n    insort (g n) (sorted_list_of_set (g ` {0..<n}))", "proof (rule sorted_list_of_set.insert)"], ["proof (state)\ngoal (2 subgoals):\n 1. finite (g ` {0..<n})\n 2. g n \\<notin> g ` {0..<n}", "have \"inj_on g {0..<Suc n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inj_on g {0..<Suc n}", "using sg strict_mono_on_imp_inj_on"], ["proof (prove)\nusing this:\n  strict_mono_on g {0..<Suc n}\n  strict_mono_on ?f ?A \\<Longrightarrow> inj_on ?f ?A\n\ngoal (1 subgoal):\n 1. inj_on g {0..<Suc n}", "by blast"], ["proof (state)\nthis:\n  inj_on g {0..<Suc n}\n\ngoal (2 subgoals):\n 1. finite (g ` {0..<n})\n 2. g n \\<notin> g ` {0..<n}", "thus \"g n \\<notin> g ` {0..<n}\""], ["proof (prove)\nusing this:\n  inj_on g {0..<Suc n}\n\ngoal (1 subgoal):\n 1. g n \\<notin> g ` {0..<n}", "unfolding inj_on_def"], ["proof (prove)\nusing this:\n  \\<forall>x\\<in>{0..<Suc n}.\n     \\<forall>y\\<in>{0..<Suc n}. g x = g y \\<longrightarrow> x = y\n\ngoal (1 subgoal):\n 1. g n \\<notin> g ` {0..<n}", "by fastforce"], ["proof (state)\nthis:\n  g n \\<notin> g ` {0..<n}\n\ngoal (1 subgoal):\n 1. finite (g ` {0..<n})", "qed (simp)"], ["proof (state)\nthis:\n  sorted_list_of_set (insert (g n) (g ` {0..<n})) =\n  insort (g n) (sorted_list_of_set (g ` {0..<n}))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>strict_mono_on g {0..<n} \\<Longrightarrow>\n                sorted_list_of_set (g ` {0..<n}) = map g [0..<n];\n        strict_mono_on g {0..<Suc n}\\<rbrakk>\n       \\<Longrightarrow> sorted_list_of_set (g ` {0..<Suc n}) =\n                         map g [0..<Suc n]", "also"], ["proof (state)\nthis:\n  sorted_list_of_set (insert (g n) (g ` {0..<n})) =\n  insort (g n) (sorted_list_of_set (g ` {0..<n}))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>strict_mono_on g {0..<n} \\<Longrightarrow>\n                sorted_list_of_set (g ` {0..<n}) = map g [0..<n];\n        strict_mono_on g {0..<Suc n}\\<rbrakk>\n       \\<Longrightarrow> sorted_list_of_set (g ` {0..<Suc n}) =\n                         map g [0..<Suc n]", "have \"... = insort (g n) (map g [0..<n])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insort (g n) (sorted_list_of_set (g ` {0..<n})) =\n    insort (g n) (map g [0..<n])", "using Suc.hyps sg"], ["proof (prove)\nusing this:\n  strict_mono_on g {0..<n} \\<Longrightarrow>\n  sorted_list_of_set (g ` {0..<n}) = map g [0..<n]\n  strict_mono_on g {0..<Suc n}\n\ngoal (1 subgoal):\n 1. insort (g n) (sorted_list_of_set (g ` {0..<n})) =\n    insort (g n) (map g [0..<n])", "unfolding strict_mono_on_def"], ["proof (prove)\nusing this:\n  \\<forall>r s.\n     r \\<in> {0..<n} \\<and> s \\<in> {0..<n} \\<and> r < s \\<longrightarrow>\n     g r < g s \\<Longrightarrow>\n  sorted_list_of_set (g ` {0..<n}) = map g [0..<n]\n  \\<forall>r s.\n     r \\<in> {0..<Suc n} \\<and>\n     s \\<in> {0..<Suc n} \\<and> r < s \\<longrightarrow>\n     g r < g s\n\ngoal (1 subgoal):\n 1. insort (g n) (sorted_list_of_set (g ` {0..<n})) =\n    insort (g n) (map g [0..<n])", "by auto"], ["proof (state)\nthis:\n  insort (g n) (sorted_list_of_set (g ` {0..<n})) =\n  insort (g n) (map g [0..<n])\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>strict_mono_on g {0..<n} \\<Longrightarrow>\n                sorted_list_of_set (g ` {0..<n}) = map g [0..<n];\n        strict_mono_on g {0..<Suc n}\\<rbrakk>\n       \\<Longrightarrow> sorted_list_of_set (g ` {0..<Suc n}) =\n                         map g [0..<Suc n]", "also"], ["proof (state)\nthis:\n  insort (g n) (sorted_list_of_set (g ` {0..<n})) =\n  insort (g n) (map g [0..<n])\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>strict_mono_on g {0..<n} \\<Longrightarrow>\n                sorted_list_of_set (g ` {0..<n}) = map g [0..<n];\n        strict_mono_on g {0..<Suc n}\\<rbrakk>\n       \\<Longrightarrow> sorted_list_of_set (g ` {0..<Suc n}) =\n                         map g [0..<Suc n]", "have \"... = map g [0..<Suc n]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insort (g n) (map g [0..<n]) = map g [0..<Suc n]", "proof (simp, rule sorted_insort_is_snoc)"], ["proof (state)\ngoal (2 subgoals):\n 1. sorted (map g [0..<n])\n 2. \\<forall>x\\<in>set (map g [0..<n]). x \\<le> g n", "show \"sorted (map g [0..<n])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted (map g [0..<n])", "by (rule sorted_map_strict[OF sg_n])"], ["proof (state)\nthis:\n  sorted (map g [0..<n])\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>set (map g [0..<n]). x \\<le> g n", "show \"\\<forall>x\\<in>set (map g [0..<n]). x \\<le> g n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>set (map g [0..<n]). x \\<le> g n", "using sg"], ["proof (prove)\nusing this:\n  strict_mono_on g {0..<Suc n}\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>set (map g [0..<n]). x \\<le> g n", "unfolding strict_mono_on_def"], ["proof (prove)\nusing this:\n  \\<forall>r s.\n     r \\<in> {0..<Suc n} \\<and>\n     s \\<in> {0..<Suc n} \\<and> r < s \\<longrightarrow>\n     g r < g s\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>set (map g [0..<n]). x \\<le> g n", "by (simp add: less_imp_le)"], ["proof (state)\nthis:\n  \\<forall>x\\<in>set (map g [0..<n]). x \\<le> g n\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  insort (g n) (map g [0..<n]) = map g [0..<Suc n]\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       \\<lbrakk>strict_mono_on g {0..<n} \\<Longrightarrow>\n                sorted_list_of_set (g ` {0..<n}) = map g [0..<n];\n        strict_mono_on g {0..<Suc n}\\<rbrakk>\n       \\<Longrightarrow> sorted_list_of_set (g ` {0..<Suc n}) =\n                         map g [0..<Suc n]", "finally"], ["proof (chain)\npicking this:\n  sorted_list_of_set (g ` {0..<Suc n}) = map g [0..<Suc n]", "show ?case"], ["proof (prove)\nusing this:\n  sorted_list_of_set (g ` {0..<Suc n}) = map g [0..<Suc n]\n\ngoal (1 subgoal):\n 1. sorted_list_of_set (g ` {0..<Suc n}) = map g [0..<Suc n]", "."], ["proof (state)\nthis:\n  sorted_list_of_set (g ` {0..<Suc n}) = map g [0..<Suc n]\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sorted_nth_strict_mono:\n  \"sorted xs \\<Longrightarrow> distinct xs \\<Longrightarrow>i < j \\<Longrightarrow> j < length xs \\<Longrightarrow> xs!i < xs!j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>sorted xs; distinct xs; i < j; j < length xs\\<rbrakk>\n    \\<Longrightarrow> xs ! i < xs ! j", "by (simp add: less_le nth_eq_iff_index_eq sorted_iff_nth_mono_less)"], ["", "lemma sorted_list_of_set_0_LEAST:\n  assumes finI: \"finite I\" and I: \"I \\<noteq> {}\"\n  shows \"sorted_list_of_set I ! 0 = (LEAST n. n\\<in>I)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_list_of_set I ! 0 = (LEAST n. n \\<in> I)", "proof (rule Least_equality[symmetric])"], ["proof (state)\ngoal (2 subgoals):\n 1. sorted_list_of_set I ! 0 \\<in> I\n 2. \\<And>y. y \\<in> I \\<Longrightarrow> sorted_list_of_set I ! 0 \\<le> y", "show \"sorted_list_of_set I ! 0 \\<in> I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_list_of_set I ! 0 \\<in> I", "by (metis I Max_in finI gr_zeroI in_set_conv_nth not_less_zero set_sorted_list_of_set)"], ["proof (state)\nthis:\n  sorted_list_of_set I ! 0 \\<in> I\n\ngoal (1 subgoal):\n 1. \\<And>y. y \\<in> I \\<Longrightarrow> sorted_list_of_set I ! 0 \\<le> y", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y. y \\<in> I \\<Longrightarrow> sorted_list_of_set I ! 0 \\<le> y", "assume \"y \\<in> I\""], ["proof (state)\nthis:\n  y \\<in> I\n\ngoal (1 subgoal):\n 1. \\<And>y. y \\<in> I \\<Longrightarrow> sorted_list_of_set I ! 0 \\<le> y", "thus \"sorted_list_of_set I ! 0 \\<le> y\""], ["proof (prove)\nusing this:\n  y \\<in> I\n\ngoal (1 subgoal):\n 1. sorted_list_of_set I ! 0 \\<le> y", "by (metis eq_iff finI in_set_conv_nth neq0_conv sorted_iff_nth_mono_less\n        sorted_list_of_set(1) sorted_sorted_list_of_set)"], ["proof (state)\nthis:\n  sorted_list_of_set I ! 0 \\<le> y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sorted_list_of_set_eq_pick:\n  assumes i: \"i < length (sorted_list_of_set I)\"\n  shows \"sorted_list_of_set I ! i = pick I i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_list_of_set I ! i = pick I i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sorted_list_of_set I ! i = pick I i", "have finI: \"finite I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite I", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. infinite I \\<Longrightarrow> False", "assume \"infinite I\""], ["proof (state)\nthis:\n  infinite I\n\ngoal (1 subgoal):\n 1. infinite I \\<Longrightarrow> False", "hence \"length (sorted_list_of_set I) = 0\""], ["proof (prove)\nusing this:\n  infinite I\n\ngoal (1 subgoal):\n 1. length (sorted_list_of_set I) = 0", "using sorted_list_of_set.infinite"], ["proof (prove)\nusing this:\n  infinite I\n  infinite ?A \\<Longrightarrow> sorted_list_of_set ?A = []\n\ngoal (1 subgoal):\n 1. length (sorted_list_of_set I) = 0", "by auto"], ["proof (state)\nthis:\n  length (sorted_list_of_set I) = 0\n\ngoal (1 subgoal):\n 1. infinite I \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  length (sorted_list_of_set I) = 0\n\ngoal (1 subgoal):\n 1. False", "using i"], ["proof (prove)\nusing this:\n  length (sorted_list_of_set I) = 0\n  i < length (sorted_list_of_set I)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  finite I\n\ngoal (1 subgoal):\n 1. sorted_list_of_set I ! i = pick I i", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_list_of_set I ! i = pick I i", "using i"], ["proof (prove)\nusing this:\n  i < length (sorted_list_of_set I)\n\ngoal (1 subgoal):\n 1. sorted_list_of_set I ! i = pick I i", "proof (induct i)"], ["proof (state)\ngoal (2 subgoals):\n 1. 0 < length (sorted_list_of_set I) \\<Longrightarrow>\n    sorted_list_of_set I ! 0 = pick I 0\n 2. \\<And>i.\n       \\<lbrakk>i < length (sorted_list_of_set I) \\<Longrightarrow>\n                sorted_list_of_set I ! i = pick I i;\n        Suc i < length (sorted_list_of_set I)\\<rbrakk>\n       \\<Longrightarrow> sorted_list_of_set I ! Suc i = pick I (Suc i)", "case 0"], ["proof (state)\nthis:\n  0 < length (sorted_list_of_set I)\n\ngoal (2 subgoals):\n 1. 0 < length (sorted_list_of_set I) \\<Longrightarrow>\n    sorted_list_of_set I ! 0 = pick I 0\n 2. \\<And>i.\n       \\<lbrakk>i < length (sorted_list_of_set I) \\<Longrightarrow>\n                sorted_list_of_set I ! i = pick I i;\n        Suc i < length (sorted_list_of_set I)\\<rbrakk>\n       \\<Longrightarrow> sorted_list_of_set I ! Suc i = pick I (Suc i)", "have I: \"I \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. I \\<noteq> {}", "using \"0.prems\" sorted_list_of_set_empty"], ["proof (prove)\nusing this:\n  0 < length (sorted_list_of_set I)\n  sorted_list_of_set {} = []\n\ngoal (1 subgoal):\n 1. I \\<noteq> {}", "by blast"], ["proof (state)\nthis:\n  I \\<noteq> {}\n\ngoal (2 subgoals):\n 1. 0 < length (sorted_list_of_set I) \\<Longrightarrow>\n    sorted_list_of_set I ! 0 = pick I 0\n 2. \\<And>i.\n       \\<lbrakk>i < length (sorted_list_of_set I) \\<Longrightarrow>\n                sorted_list_of_set I ! i = pick I i;\n        Suc i < length (sorted_list_of_set I)\\<rbrakk>\n       \\<Longrightarrow> sorted_list_of_set I ! Suc i = pick I (Suc i)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_list_of_set I ! 0 = pick I 0", "unfolding pick.simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_list_of_set I ! 0 = (LEAST a. a \\<in> I)", "by (rule sorted_list_of_set_0_LEAST[OF finI I])"], ["proof (state)\nthis:\n  sorted_list_of_set I ! 0 = pick I 0\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i < length (sorted_list_of_set I) \\<Longrightarrow>\n                sorted_list_of_set I ! i = pick I i;\n        Suc i < length (sorted_list_of_set I)\\<rbrakk>\n       \\<Longrightarrow> sorted_list_of_set I ! Suc i = pick I (Suc i)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i < length (sorted_list_of_set I) \\<Longrightarrow>\n                sorted_list_of_set I ! i = pick I i;\n        Suc i < length (sorted_list_of_set I)\\<rbrakk>\n       \\<Longrightarrow> sorted_list_of_set I ! Suc i = pick I (Suc i)", "case (Suc i)"], ["proof (state)\nthis:\n  i < length (sorted_list_of_set I) \\<Longrightarrow>\n  sorted_list_of_set I ! i = pick I i\n  Suc i < length (sorted_list_of_set I)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i < length (sorted_list_of_set I) \\<Longrightarrow>\n                sorted_list_of_set I ! i = pick I i;\n        Suc i < length (sorted_list_of_set I)\\<rbrakk>\n       \\<Longrightarrow> sorted_list_of_set I ! Suc i = pick I (Suc i)", "note x_less = Suc.prems"], ["proof (state)\nthis:\n  Suc i < length (sorted_list_of_set I)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i < length (sorted_list_of_set I) \\<Longrightarrow>\n                sorted_list_of_set I ! i = pick I i;\n        Suc i < length (sorted_list_of_set I)\\<rbrakk>\n       \\<Longrightarrow> sorted_list_of_set I ! Suc i = pick I (Suc i)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_list_of_set I ! Suc i = pick I (Suc i)", "proof (unfold pick.simps, rule Least_equality[symmetric], rule conjI)"], ["proof (state)\ngoal (3 subgoals):\n 1. sorted_list_of_set I ! Suc i \\<in> I\n 2. pick I i < sorted_list_of_set I ! Suc i\n 3. \\<And>y.\n       y \\<in> I \\<and> pick I i < y \\<Longrightarrow>\n       sorted_list_of_set I ! Suc i \\<le> y", "show 1: \"pick I i < sorted_list_of_set I ! Suc i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pick I i < sorted_list_of_set I ! Suc i", "by (metis Suc.hyps Suc.prems Suc_lessD distinct_sorted_list_of_set find_first_unique lessI\n          nat_less_le sorted_sorted_list_of_set sorted_sorted_wrt sorted_wrt_nth_less)"], ["proof (state)\nthis:\n  pick I i < sorted_list_of_set I ! Suc i\n\ngoal (2 subgoals):\n 1. sorted_list_of_set I ! Suc i \\<in> I\n 2. \\<And>y.\n       y \\<in> I \\<and> pick I i < y \\<Longrightarrow>\n       sorted_list_of_set I ! Suc i \\<le> y", "show \"sorted_list_of_set I ! Suc i \\<in> I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_list_of_set I ! Suc i \\<in> I", "using Suc.prems finI nth_mem set_sorted_list_of_set"], ["proof (prove)\nusing this:\n  Suc i < length (sorted_list_of_set I)\n  finite I\n  ?n < length ?xs \\<Longrightarrow> ?xs ! ?n \\<in> set ?xs\n  finite ?A \\<Longrightarrow> set (sorted_list_of_set ?A) = ?A\n\ngoal (1 subgoal):\n 1. sorted_list_of_set I ! Suc i \\<in> I", "by blast"], ["proof (state)\nthis:\n  sorted_list_of_set I ! Suc i \\<in> I\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> I \\<and> pick I i < y \\<Longrightarrow>\n       sorted_list_of_set I ! Suc i \\<le> y", "have rw: \"sorted_list_of_set I ! i = pick I i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_list_of_set I ! i = pick I i", "using Suc.hyps Suc_lessD x_less"], ["proof (prove)\nusing this:\n  i < length (sorted_list_of_set I) \\<Longrightarrow>\n  sorted_list_of_set I ! i = pick I i\n  Suc ?m < ?n \\<Longrightarrow> ?m < ?n\n  Suc i < length (sorted_list_of_set I)\n\ngoal (1 subgoal):\n 1. sorted_list_of_set I ! i = pick I i", "by blast"], ["proof (state)\nthis:\n  sorted_list_of_set I ! i = pick I i\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> I \\<and> pick I i < y \\<Longrightarrow>\n       sorted_list_of_set I ! Suc i \\<le> y", "have sorted_less: \"sorted_list_of_set I ! i < sorted_list_of_set I ! Suc i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_list_of_set I ! i < sorted_list_of_set I ! Suc i", "by (simp add: 1 rw)"], ["proof (state)\nthis:\n  sorted_list_of_set I ! i < sorted_list_of_set I ! Suc i\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> I \\<and> pick I i < y \\<Longrightarrow>\n       sorted_list_of_set I ! Suc i \\<le> y", "fix y"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> I \\<and> pick I i < y \\<Longrightarrow>\n       sorted_list_of_set I ! Suc i \\<le> y", "assume y: \"y \\<in> I \\<and> pick I i < y\""], ["proof (state)\nthis:\n  y \\<in> I \\<and> pick I i < y\n\ngoal (1 subgoal):\n 1. \\<And>y.\n       y \\<in> I \\<and> pick I i < y \\<Longrightarrow>\n       sorted_list_of_set I ! Suc i \\<le> y", "show \"sorted_list_of_set I ! Suc i \\<le> y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_list_of_set I ! Suc i \\<le> y", "by (smt antisym_conv finI in_set_conv_nth less_Suc_eq less_Suc_eq_le nat_neq_iff rw\n          sorted_iff_nth_mono_less sorted_list_of_set(1) sorted_sorted_list_of_set x_less y)"], ["proof (state)\nthis:\n  sorted_list_of_set I ! Suc i \\<le> y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sorted_list_of_set I ! Suc i = pick I (Suc i)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  sorted_list_of_set I ! i = pick I i\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>$b$ is the position where we add, $a$ the element to be added and $i$ the position\n  that is checked\\<close>"], ["", "lemma insort_nth':\n  assumes \"\\<forall>j<b. xs ! j < a\" and \"sorted xs\" and \"a \\<notin> set xs\"\n    and \"i < length xs + 1\" and \"i < b\"\n    and \"xs \\<noteq> []\" and \"b < length xs\"\n  shows \"insort a xs ! i = xs ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insort a xs ! i = xs ! i", "using assms"], ["proof (prove)\nusing this:\n  \\<forall>j<b. xs ! j < a\n  sorted xs\n  a \\<notin> set xs\n  i < length xs + 1\n  i < b\n  xs \\<noteq> []\n  b < length xs\n\ngoal (1 subgoal):\n 1. insort a xs ! i = xs ! i", "proof (induct xs arbitrary: a b i)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b i.\n       \\<lbrakk>\\<forall>j<b. [] ! j < a; sorted []; a \\<notin> set [];\n        i < length [] + 1; i < b; [] \\<noteq> []; b < length []\\<rbrakk>\n       \\<Longrightarrow> insort a [] ! i = [] ! i\n 2. \\<And>a xs aa b i.\n       \\<lbrakk>\\<And>a b i.\n                   \\<lbrakk>\\<forall>j<b. xs ! j < a; sorted xs;\n                    a \\<notin> set xs; i < length xs + 1; i < b;\n                    xs \\<noteq> []; b < length xs\\<rbrakk>\n                   \\<Longrightarrow> insort a xs ! i = xs ! i;\n        \\<forall>j<b. (a # xs) ! j < aa; sorted (a # xs);\n        aa \\<notin> set (a # xs); i < length (a # xs) + 1; i < b;\n        a # xs \\<noteq> []; b < length (a # xs)\\<rbrakk>\n       \\<Longrightarrow> insort aa (a # xs) ! i = (a # xs) ! i", "case Nil"], ["proof (state)\nthis:\n  \\<forall>j<b. [] ! j < a\n  sorted []\n  a \\<notin> set []\n  i < length [] + 1\n  i < b\n  [] \\<noteq> []\n  b < length []\n\ngoal (2 subgoals):\n 1. \\<And>a b i.\n       \\<lbrakk>\\<forall>j<b. [] ! j < a; sorted []; a \\<notin> set [];\n        i < length [] + 1; i < b; [] \\<noteq> []; b < length []\\<rbrakk>\n       \\<Longrightarrow> insort a [] ! i = [] ! i\n 2. \\<And>a xs aa b i.\n       \\<lbrakk>\\<And>a b i.\n                   \\<lbrakk>\\<forall>j<b. xs ! j < a; sorted xs;\n                    a \\<notin> set xs; i < length xs + 1; i < b;\n                    xs \\<noteq> []; b < length xs\\<rbrakk>\n                   \\<Longrightarrow> insort a xs ! i = xs ! i;\n        \\<forall>j<b. (a # xs) ! j < aa; sorted (a # xs);\n        aa \\<notin> set (a # xs); i < length (a # xs) + 1; i < b;\n        a # xs \\<noteq> []; b < length (a # xs)\\<rbrakk>\n       \\<Longrightarrow> insort aa (a # xs) ! i = (a # xs) ! i", "then"], ["proof (chain)\npicking this:\n  \\<forall>j<b. [] ! j < a\n  sorted []\n  a \\<notin> set []\n  i < length [] + 1\n  i < b\n  [] \\<noteq> []\n  b < length []", "show ?case"], ["proof (prove)\nusing this:\n  \\<forall>j<b. [] ! j < a\n  sorted []\n  a \\<notin> set []\n  i < length [] + 1\n  i < b\n  [] \\<noteq> []\n  b < length []\n\ngoal (1 subgoal):\n 1. insort a [] ! i = [] ! i", "by auto"], ["proof (state)\nthis:\n  insort a [] ! i = [] ! i\n\ngoal (1 subgoal):\n 1. \\<And>a xs aa b i.\n       \\<lbrakk>\\<And>a b i.\n                   \\<lbrakk>\\<forall>j<b. xs ! j < a; sorted xs;\n                    a \\<notin> set xs; i < length xs + 1; i < b;\n                    xs \\<noteq> []; b < length xs\\<rbrakk>\n                   \\<Longrightarrow> insort a xs ! i = xs ! i;\n        \\<forall>j<b. (a # xs) ! j < aa; sorted (a # xs);\n        aa \\<notin> set (a # xs); i < length (a # xs) + 1; i < b;\n        a # xs \\<noteq> []; b < length (a # xs)\\<rbrakk>\n       \\<Longrightarrow> insort aa (a # xs) ! i = (a # xs) ! i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs aa b i.\n       \\<lbrakk>\\<And>a b i.\n                   \\<lbrakk>\\<forall>j<b. xs ! j < a; sorted xs;\n                    a \\<notin> set xs; i < length xs + 1; i < b;\n                    xs \\<noteq> []; b < length xs\\<rbrakk>\n                   \\<Longrightarrow> insort a xs ! i = xs ! i;\n        \\<forall>j<b. (a # xs) ! j < aa; sorted (a # xs);\n        aa \\<notin> set (a # xs); i < length (a # xs) + 1; i < b;\n        a # xs \\<noteq> []; b < length (a # xs)\\<rbrakk>\n       \\<Longrightarrow> insort aa (a # xs) ! i = (a # xs) ! i", "case (Cons x xs)"], ["proof (state)\nthis:\n  \\<lbrakk>\\<forall>j<?b. xs ! j < ?a; sorted xs; ?a \\<notin> set xs;\n   ?i < length xs + 1; ?i < ?b; xs \\<noteq> []; ?b < length xs\\<rbrakk>\n  \\<Longrightarrow> insort ?a xs ! ?i = xs ! ?i\n  \\<forall>j<b. (x # xs) ! j < a\n  sorted (x # xs)\n  a \\<notin> set (x # xs)\n  i < length (x # xs) + 1\n  i < b\n  x # xs \\<noteq> []\n  b < length (x # xs)\n\ngoal (1 subgoal):\n 1. \\<And>a xs aa b i.\n       \\<lbrakk>\\<And>a b i.\n                   \\<lbrakk>\\<forall>j<b. xs ! j < a; sorted xs;\n                    a \\<notin> set xs; i < length xs + 1; i < b;\n                    xs \\<noteq> []; b < length xs\\<rbrakk>\n                   \\<Longrightarrow> insort a xs ! i = xs ! i;\n        \\<forall>j<b. (a # xs) ! j < aa; sorted (a # xs);\n        aa \\<notin> set (a # xs); i < length (a # xs) + 1; i < b;\n        a # xs \\<noteq> []; b < length (a # xs)\\<rbrakk>\n       \\<Longrightarrow> insort aa (a # xs) ! i = (a # xs) ! i", "note less = Cons.prems(1)"], ["proof (state)\nthis:\n  \\<forall>j<b. (x # xs) ! j < a\n\ngoal (1 subgoal):\n 1. \\<And>a xs aa b i.\n       \\<lbrakk>\\<And>a b i.\n                   \\<lbrakk>\\<forall>j<b. xs ! j < a; sorted xs;\n                    a \\<notin> set xs; i < length xs + 1; i < b;\n                    xs \\<noteq> []; b < length xs\\<rbrakk>\n                   \\<Longrightarrow> insort a xs ! i = xs ! i;\n        \\<forall>j<b. (a # xs) ! j < aa; sorted (a # xs);\n        aa \\<notin> set (a # xs); i < length (a # xs) + 1; i < b;\n        a # xs \\<noteq> []; b < length (a # xs)\\<rbrakk>\n       \\<Longrightarrow> insort aa (a # xs) ! i = (a # xs) ! i", "note sorted = Cons.prems(2)"], ["proof (state)\nthis:\n  sorted (x # xs)\n\ngoal (1 subgoal):\n 1. \\<And>a xs aa b i.\n       \\<lbrakk>\\<And>a b i.\n                   \\<lbrakk>\\<forall>j<b. xs ! j < a; sorted xs;\n                    a \\<notin> set xs; i < length xs + 1; i < b;\n                    xs \\<noteq> []; b < length xs\\<rbrakk>\n                   \\<Longrightarrow> insort a xs ! i = xs ! i;\n        \\<forall>j<b. (a # xs) ! j < aa; sorted (a # xs);\n        aa \\<notin> set (a # xs); i < length (a # xs) + 1; i < b;\n        a # xs \\<noteq> []; b < length (a # xs)\\<rbrakk>\n       \\<Longrightarrow> insort aa (a # xs) ! i = (a # xs) ! i", "note a_notin = Cons.prems(3)"], ["proof (state)\nthis:\n  a \\<notin> set (x # xs)\n\ngoal (1 subgoal):\n 1. \\<And>a xs aa b i.\n       \\<lbrakk>\\<And>a b i.\n                   \\<lbrakk>\\<forall>j<b. xs ! j < a; sorted xs;\n                    a \\<notin> set xs; i < length xs + 1; i < b;\n                    xs \\<noteq> []; b < length xs\\<rbrakk>\n                   \\<Longrightarrow> insort a xs ! i = xs ! i;\n        \\<forall>j<b. (a # xs) ! j < aa; sorted (a # xs);\n        aa \\<notin> set (a # xs); i < length (a # xs) + 1; i < b;\n        a # xs \\<noteq> []; b < length (a # xs)\\<rbrakk>\n       \\<Longrightarrow> insort aa (a # xs) ! i = (a # xs) ! i", "note i_length = Cons.prems(4)"], ["proof (state)\nthis:\n  i < length (x # xs) + 1\n\ngoal (1 subgoal):\n 1. \\<And>a xs aa b i.\n       \\<lbrakk>\\<And>a b i.\n                   \\<lbrakk>\\<forall>j<b. xs ! j < a; sorted xs;\n                    a \\<notin> set xs; i < length xs + 1; i < b;\n                    xs \\<noteq> []; b < length xs\\<rbrakk>\n                   \\<Longrightarrow> insort a xs ! i = xs ! i;\n        \\<forall>j<b. (a # xs) ! j < aa; sorted (a # xs);\n        aa \\<notin> set (a # xs); i < length (a # xs) + 1; i < b;\n        a # xs \\<noteq> []; b < length (a # xs)\\<rbrakk>\n       \\<Longrightarrow> insort aa (a # xs) ! i = (a # xs) ! i", "note i_b = Cons.prems(5)"], ["proof (state)\nthis:\n  i < b\n\ngoal (1 subgoal):\n 1. \\<And>a xs aa b i.\n       \\<lbrakk>\\<And>a b i.\n                   \\<lbrakk>\\<forall>j<b. xs ! j < a; sorted xs;\n                    a \\<notin> set xs; i < length xs + 1; i < b;\n                    xs \\<noteq> []; b < length xs\\<rbrakk>\n                   \\<Longrightarrow> insort a xs ! i = xs ! i;\n        \\<forall>j<b. (a # xs) ! j < aa; sorted (a # xs);\n        aa \\<notin> set (a # xs); i < length (a # xs) + 1; i < b;\n        a # xs \\<noteq> []; b < length (a # xs)\\<rbrakk>\n       \\<Longrightarrow> insort aa (a # xs) ! i = (a # xs) ! i", "note b_length = Cons.prems(7)"], ["proof (state)\nthis:\n  b < length (x # xs)\n\ngoal (1 subgoal):\n 1. \\<And>a xs aa b i.\n       \\<lbrakk>\\<And>a b i.\n                   \\<lbrakk>\\<forall>j<b. xs ! j < a; sorted xs;\n                    a \\<notin> set xs; i < length xs + 1; i < b;\n                    xs \\<noteq> []; b < length xs\\<rbrakk>\n                   \\<Longrightarrow> insort a xs ! i = xs ! i;\n        \\<forall>j<b. (a # xs) ! j < aa; sorted (a # xs);\n        aa \\<notin> set (a # xs); i < length (a # xs) + 1; i < b;\n        a # xs \\<noteq> []; b < length (a # xs)\\<rbrakk>\n       \\<Longrightarrow> insort aa (a # xs) ! i = (a # xs) ! i", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. insort a (x # xs) ! i = (x # xs) ! i", "proof (cases \"a \\<le> x\")"], ["proof (state)\ngoal (2 subgoals):\n 1. a \\<le> x \\<Longrightarrow> insort a (x # xs) ! i = (x # xs) ! i\n 2. \\<not> a \\<le> x \\<Longrightarrow> insort a (x # xs) ! i = (x # xs) ! i", "case True"], ["proof (state)\nthis:\n  a \\<le> x\n\ngoal (2 subgoals):\n 1. a \\<le> x \\<Longrightarrow> insort a (x # xs) ! i = (x # xs) ! i\n 2. \\<not> a \\<le> x \\<Longrightarrow> insort a (x # xs) ! i = (x # xs) ! i", "have \"insort a (x # xs) ! i = (a # x # xs) ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insort a (x # xs) ! i = (a # x # xs) ! i", "using True"], ["proof (prove)\nusing this:\n  a \\<le> x\n\ngoal (1 subgoal):\n 1. insort a (x # xs) ! i = (a # x # xs) ! i", "by simp"], ["proof (state)\nthis:\n  insort a (x # xs) ! i = (a # x # xs) ! i\n\ngoal (2 subgoals):\n 1. a \\<le> x \\<Longrightarrow> insort a (x # xs) ! i = (x # xs) ! i\n 2. \\<not> a \\<le> x \\<Longrightarrow> insort a (x # xs) ! i = (x # xs) ! i", "also"], ["proof (state)\nthis:\n  insort a (x # xs) ! i = (a # x # xs) ! i\n\ngoal (2 subgoals):\n 1. a \\<le> x \\<Longrightarrow> insort a (x # xs) ! i = (x # xs) ! i\n 2. \\<not> a \\<le> x \\<Longrightarrow> insort a (x # xs) ! i = (x # xs) ! i", "have \"... =  (x # xs) ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a # x # xs) ! i = (x # xs) ! i", "using Cons.prems(1) Cons.prems(5) True"], ["proof (prove)\nusing this:\n  \\<forall>j<b. (x # xs) ! j < a\n  i < b\n  a \\<le> x\n\ngoal (1 subgoal):\n 1. (a # x # xs) ! i = (x # xs) ! i", "by force"], ["proof (state)\nthis:\n  (a # x # xs) ! i = (x # xs) ! i\n\ngoal (2 subgoals):\n 1. a \\<le> x \\<Longrightarrow> insort a (x # xs) ! i = (x # xs) ! i\n 2. \\<not> a \\<le> x \\<Longrightarrow> insort a (x # xs) ! i = (x # xs) ! i", "finally"], ["proof (chain)\npicking this:\n  insort a (x # xs) ! i = (x # xs) ! i", "show ?thesis"], ["proof (prove)\nusing this:\n  insort a (x # xs) ! i = (x # xs) ! i\n\ngoal (1 subgoal):\n 1. insort a (x # xs) ! i = (x # xs) ! i", "."], ["proof (state)\nthis:\n  insort a (x # xs) ! i = (x # xs) ! i\n\ngoal (1 subgoal):\n 1. \\<not> a \\<le> x \\<Longrightarrow> insort a (x # xs) ! i = (x # xs) ! i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> a \\<le> x \\<Longrightarrow> insort a (x # xs) ! i = (x # xs) ! i", "case False"], ["proof (state)\nthis:\n  \\<not> a \\<le> x\n\ngoal (1 subgoal):\n 1. \\<not> a \\<le> x \\<Longrightarrow> insort a (x # xs) ! i = (x # xs) ! i", "note x_less_a = False"], ["proof (state)\nthis:\n  \\<not> a \\<le> x\n\ngoal (1 subgoal):\n 1. \\<not> a \\<le> x \\<Longrightarrow> insort a (x # xs) ! i = (x # xs) ! i", "have \"insort a (x # xs) ! i = (x # insort a xs) ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insort a (x # xs) ! i = (x # insort a xs) ! i", "using False"], ["proof (prove)\nusing this:\n  \\<not> a \\<le> x\n\ngoal (1 subgoal):\n 1. insort a (x # xs) ! i = (x # insort a xs) ! i", "by simp"], ["proof (state)\nthis:\n  insort a (x # xs) ! i = (x # insort a xs) ! i\n\ngoal (1 subgoal):\n 1. \\<not> a \\<le> x \\<Longrightarrow> insort a (x # xs) ! i = (x # xs) ! i", "also"], ["proof (state)\nthis:\n  insort a (x # xs) ! i = (x # insort a xs) ! i\n\ngoal (1 subgoal):\n 1. \\<not> a \\<le> x \\<Longrightarrow> insort a (x # xs) ! i = (x # xs) ! i", "have \"... = (x # xs) ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x # insort a xs) ! i = (x # xs) ! i", "proof (cases \"i = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow> (x # insort a xs) ! i = (x # xs) ! i\n 2. i \\<noteq> 0 \\<Longrightarrow> (x # insort a xs) ! i = (x # xs) ! i", "case True"], ["proof (state)\nthis:\n  i = 0\n\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow> (x # insort a xs) ! i = (x # xs) ! i\n 2. i \\<noteq> 0 \\<Longrightarrow> (x # insort a xs) ! i = (x # xs) ! i", "then"], ["proof (chain)\npicking this:\n  i = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  i = 0\n\ngoal (1 subgoal):\n 1. (x # insort a xs) ! i = (x # xs) ! i", "by auto"], ["proof (state)\nthis:\n  (x # insort a xs) ! i = (x # xs) ! i\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> (x # insort a xs) ! i = (x # xs) ! i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> (x # insort a xs) ! i = (x # xs) ! i", "case False"], ["proof (state)\nthis:\n  i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> (x # insort a xs) ! i = (x # xs) ! i", "have \"(x # insort a xs) ! i = (insort a xs) ! (i-1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x # insort a xs) ! i = insort a xs ! (i - 1)", "by (simp add: False nth_Cons')"], ["proof (state)\nthis:\n  (x # insort a xs) ! i = insort a xs ! (i - 1)\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> (x # insort a xs) ! i = (x # xs) ! i", "also"], ["proof (state)\nthis:\n  (x # insort a xs) ! i = insort a xs ! (i - 1)\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> (x # insort a xs) ! i = (x # xs) ! i", "have \"... = xs ! (i-1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insort a xs ! (i - 1) = xs ! (i - 1)", "proof (rule Cons.hyps)"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<forall>j<?b. xs ! j < a\n 2. sorted xs\n 3. a \\<notin> set xs\n 4. i - 1 < length xs + 1\n 5. i - 1 < ?b\n 6. xs \\<noteq> []\n 7. ?b < length xs", "show \"sorted xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted xs", "using sorted"], ["proof (prove)\nusing this:\n  sorted (x # xs)\n\ngoal (1 subgoal):\n 1. sorted xs", "by simp"], ["proof (state)\nthis:\n  sorted xs\n\ngoal (6 subgoals):\n 1. \\<forall>j<?b. xs ! j < a\n 2. a \\<notin> set xs\n 3. i - 1 < length xs + 1\n 4. i - 1 < ?b\n 5. xs \\<noteq> []\n 6. ?b < length xs", "show \"a \\<notin> set xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<notin> set xs", "using a_notin"], ["proof (prove)\nusing this:\n  a \\<notin> set (x # xs)\n\ngoal (1 subgoal):\n 1. a \\<notin> set xs", "by simp"], ["proof (state)\nthis:\n  a \\<notin> set xs\n\ngoal (5 subgoals):\n 1. \\<forall>j<?b. xs ! j < a\n 2. i - 1 < length xs + 1\n 3. i - 1 < ?b\n 4. xs \\<noteq> []\n 5. ?b < length xs", "show \"i - 1 < length xs + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i - 1 < length xs + 1", "using i_length False"], ["proof (prove)\nusing this:\n  i < length (x # xs) + 1\n  i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. i - 1 < length xs + 1", "by auto"], ["proof (state)\nthis:\n  i - 1 < length xs + 1\n\ngoal (4 subgoals):\n 1. \\<forall>j<?b. xs ! j < a\n 2. i - 1 < ?b\n 3. xs \\<noteq> []\n 4. ?b < length xs", "show \"xs \\<noteq> []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs \\<noteq> []", "using i_b b_length"], ["proof (prove)\nusing this:\n  i < b\n  b < length (x # xs)\n\ngoal (1 subgoal):\n 1. xs \\<noteq> []", "by force"], ["proof (state)\nthis:\n  xs \\<noteq> []\n\ngoal (3 subgoals):\n 1. \\<forall>j<?b. xs ! j < a\n 2. i - 1 < ?b\n 3. ?b < length xs", "show \"i - 1 < b - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i - 1 < b - 1", "by (simp add: False diff_less_mono i_b leI)"], ["proof (state)\nthis:\n  i - 1 < b - 1\n\ngoal (2 subgoals):\n 1. \\<forall>j<b - 1. xs ! j < a\n 2. b - 1 < length xs", "show \"b - 1 < length xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. b - 1 < length xs", "using b_length i_b"], ["proof (prove)\nusing this:\n  b < length (x # xs)\n  i < b\n\ngoal (1 subgoal):\n 1. b - 1 < length xs", "by auto"], ["proof (state)\nthis:\n  b - 1 < length xs\n\ngoal (1 subgoal):\n 1. \\<forall>j<b - 1. xs ! j < a", "show \"\\<forall>j<b - 1. xs ! j < a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>j<b - 1. xs ! j < a", "using less less_diff_conv"], ["proof (prove)\nusing this:\n  \\<forall>j<b. (x # xs) ! j < a\n  (?i < ?j - ?k) = (?i + ?k < ?j)\n\ngoal (1 subgoal):\n 1. \\<forall>j<b - 1. xs ! j < a", "by auto"], ["proof (state)\nthis:\n  \\<forall>j<b - 1. xs ! j < a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  insort a xs ! (i - 1) = xs ! (i - 1)\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> (x # insort a xs) ! i = (x # xs) ! i", "also"], ["proof (state)\nthis:\n  insort a xs ! (i - 1) = xs ! (i - 1)\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> (x # insort a xs) ! i = (x # xs) ! i", "have \"... = (x # xs) ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs ! (i - 1) = (x # xs) ! i", "by (simp add: False nth_Cons')"], ["proof (state)\nthis:\n  xs ! (i - 1) = (x # xs) ! i\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> (x # insort a xs) ! i = (x # xs) ! i", "finally"], ["proof (chain)\npicking this:\n  (x # insort a xs) ! i = (x # xs) ! i", "show ?thesis"], ["proof (prove)\nusing this:\n  (x # insort a xs) ! i = (x # xs) ! i\n\ngoal (1 subgoal):\n 1. (x # insort a xs) ! i = (x # xs) ! i", "."], ["proof (state)\nthis:\n  (x # insort a xs) ! i = (x # xs) ! i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (x # insort a xs) ! i = (x # xs) ! i\n\ngoal (1 subgoal):\n 1. \\<not> a \\<le> x \\<Longrightarrow> insort a (x # xs) ! i = (x # xs) ! i", "finally"], ["proof (chain)\npicking this:\n  insort a (x # xs) ! i = (x # xs) ! i", "show ?thesis"], ["proof (prove)\nusing this:\n  insort a (x # xs) ! i = (x # xs) ! i\n\ngoal (1 subgoal):\n 1. insort a (x # xs) ! i = (x # xs) ! i", "."], ["proof (state)\nthis:\n  insort a (x # xs) ! i = (x # xs) ! i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  insort a (x # xs) ! i = (x # xs) ! i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma insort_nth:\n  assumes  \"sorted xs\" and \"a \\<notin> set xs\"\n    and \"i < index (insort a xs) a\"\n    and \"xs \\<noteq> []\"\n  shows \"insort a xs ! i = xs ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insort a xs ! i = xs ! i", "using assms"], ["proof (prove)\nusing this:\n  sorted xs\n  a \\<notin> set xs\n  i < index (insort a xs) a\n  xs \\<noteq> []\n\ngoal (1 subgoal):\n 1. insort a xs ! i = xs ! i", "proof (induct xs arbitrary: a i)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a i.\n       \\<lbrakk>sorted []; a \\<notin> set []; i < index (insort a []) a;\n        [] \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> insort a [] ! i = [] ! i\n 2. \\<And>a xs aa i.\n       \\<lbrakk>\\<And>a i.\n                   \\<lbrakk>sorted xs; a \\<notin> set xs;\n                    i < index (insort a xs) a; xs \\<noteq> []\\<rbrakk>\n                   \\<Longrightarrow> insort a xs ! i = xs ! i;\n        sorted (a # xs); aa \\<notin> set (a # xs);\n        i < index (insort aa (a # xs)) aa; a # xs \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> insort aa (a # xs) ! i = (a # xs) ! i", "case Nil"], ["proof (state)\nthis:\n  sorted []\n  a \\<notin> set []\n  i < index (insort a []) a\n  [] \\<noteq> []\n\ngoal (2 subgoals):\n 1. \\<And>a i.\n       \\<lbrakk>sorted []; a \\<notin> set []; i < index (insort a []) a;\n        [] \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> insort a [] ! i = [] ! i\n 2. \\<And>a xs aa i.\n       \\<lbrakk>\\<And>a i.\n                   \\<lbrakk>sorted xs; a \\<notin> set xs;\n                    i < index (insort a xs) a; xs \\<noteq> []\\<rbrakk>\n                   \\<Longrightarrow> insort a xs ! i = xs ! i;\n        sorted (a # xs); aa \\<notin> set (a # xs);\n        i < index (insort aa (a # xs)) aa; a # xs \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> insort aa (a # xs) ! i = (a # xs) ! i", "then"], ["proof (chain)\npicking this:\n  sorted []\n  a \\<notin> set []\n  i < index (insort a []) a\n  [] \\<noteq> []", "show ?case"], ["proof (prove)\nusing this:\n  sorted []\n  a \\<notin> set []\n  i < index (insort a []) a\n  [] \\<noteq> []\n\ngoal (1 subgoal):\n 1. insort a [] ! i = [] ! i", "by auto"], ["proof (state)\nthis:\n  insort a [] ! i = [] ! i\n\ngoal (1 subgoal):\n 1. \\<And>a xs aa i.\n       \\<lbrakk>\\<And>a i.\n                   \\<lbrakk>sorted xs; a \\<notin> set xs;\n                    i < index (insort a xs) a; xs \\<noteq> []\\<rbrakk>\n                   \\<Longrightarrow> insort a xs ! i = xs ! i;\n        sorted (a # xs); aa \\<notin> set (a # xs);\n        i < index (insort aa (a # xs)) aa; a # xs \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> insort aa (a # xs) ! i = (a # xs) ! i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs aa i.\n       \\<lbrakk>\\<And>a i.\n                   \\<lbrakk>sorted xs; a \\<notin> set xs;\n                    i < index (insort a xs) a; xs \\<noteq> []\\<rbrakk>\n                   \\<Longrightarrow> insort a xs ! i = xs ! i;\n        sorted (a # xs); aa \\<notin> set (a # xs);\n        i < index (insort aa (a # xs)) aa; a # xs \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> insort aa (a # xs) ! i = (a # xs) ! i", "case (Cons x xs)"], ["proof (state)\nthis:\n  \\<lbrakk>sorted xs; ?a \\<notin> set xs; ?i < index (insort ?a xs) ?a;\n   xs \\<noteq> []\\<rbrakk>\n  \\<Longrightarrow> insort ?a xs ! ?i = xs ! ?i\n  sorted (x # xs)\n  a \\<notin> set (x # xs)\n  i < index (insort a (x # xs)) a\n  x # xs \\<noteq> []\n\ngoal (1 subgoal):\n 1. \\<And>a xs aa i.\n       \\<lbrakk>\\<And>a i.\n                   \\<lbrakk>sorted xs; a \\<notin> set xs;\n                    i < index (insort a xs) a; xs \\<noteq> []\\<rbrakk>\n                   \\<Longrightarrow> insort a xs ! i = xs ! i;\n        sorted (a # xs); aa \\<notin> set (a # xs);\n        i < index (insort aa (a # xs)) aa; a # xs \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> insort aa (a # xs) ! i = (a # xs) ! i", "note sorted = Cons.prems(1)"], ["proof (state)\nthis:\n  sorted (x # xs)\n\ngoal (1 subgoal):\n 1. \\<And>a xs aa i.\n       \\<lbrakk>\\<And>a i.\n                   \\<lbrakk>sorted xs; a \\<notin> set xs;\n                    i < index (insort a xs) a; xs \\<noteq> []\\<rbrakk>\n                   \\<Longrightarrow> insort a xs ! i = xs ! i;\n        sorted (a # xs); aa \\<notin> set (a # xs);\n        i < index (insort aa (a # xs)) aa; a # xs \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> insort aa (a # xs) ! i = (a # xs) ! i", "note a_notin = Cons.prems(2)"], ["proof (state)\nthis:\n  a \\<notin> set (x # xs)\n\ngoal (1 subgoal):\n 1. \\<And>a xs aa i.\n       \\<lbrakk>\\<And>a i.\n                   \\<lbrakk>sorted xs; a \\<notin> set xs;\n                    i < index (insort a xs) a; xs \\<noteq> []\\<rbrakk>\n                   \\<Longrightarrow> insort a xs ! i = xs ! i;\n        sorted (a # xs); aa \\<notin> set (a # xs);\n        i < index (insort aa (a # xs)) aa; a # xs \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> insort aa (a # xs) ! i = (a # xs) ! i", "note i_index = Cons.prems(3)"], ["proof (state)\nthis:\n  i < index (insort a (x # xs)) a\n\ngoal (1 subgoal):\n 1. \\<And>a xs aa i.\n       \\<lbrakk>\\<And>a i.\n                   \\<lbrakk>sorted xs; a \\<notin> set xs;\n                    i < index (insort a xs) a; xs \\<noteq> []\\<rbrakk>\n                   \\<Longrightarrow> insort a xs ! i = xs ! i;\n        sorted (a # xs); aa \\<notin> set (a # xs);\n        i < index (insort aa (a # xs)) aa; a # xs \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> insort aa (a # xs) ! i = (a # xs) ! i", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. insort a (x # xs) ! i = (x # xs) ! i", "proof (cases \"a \\<le> x\")"], ["proof (state)\ngoal (2 subgoals):\n 1. a \\<le> x \\<Longrightarrow> insort a (x # xs) ! i = (x # xs) ! i\n 2. \\<not> a \\<le> x \\<Longrightarrow> insort a (x # xs) ! i = (x # xs) ! i", "case True"], ["proof (state)\nthis:\n  a \\<le> x\n\ngoal (2 subgoals):\n 1. a \\<le> x \\<Longrightarrow> insort a (x # xs) ! i = (x # xs) ! i\n 2. \\<not> a \\<le> x \\<Longrightarrow> insort a (x # xs) ! i = (x # xs) ! i", "have \"insort a (x # xs) ! i = (a # x # xs) ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insort a (x # xs) ! i = (a # x # xs) ! i", "using True"], ["proof (prove)\nusing this:\n  a \\<le> x\n\ngoal (1 subgoal):\n 1. insort a (x # xs) ! i = (a # x # xs) ! i", "by simp"], ["proof (state)\nthis:\n  insort a (x # xs) ! i = (a # x # xs) ! i\n\ngoal (2 subgoals):\n 1. a \\<le> x \\<Longrightarrow> insort a (x # xs) ! i = (x # xs) ! i\n 2. \\<not> a \\<le> x \\<Longrightarrow> insort a (x # xs) ! i = (x # xs) ! i", "also"], ["proof (state)\nthis:\n  insort a (x # xs) ! i = (a # x # xs) ! i\n\ngoal (2 subgoals):\n 1. a \\<le> x \\<Longrightarrow> insort a (x # xs) ! i = (x # xs) ! i\n 2. \\<not> a \\<le> x \\<Longrightarrow> insort a (x # xs) ! i = (x # xs) ! i", "have \"... = (x # xs) ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a # x # xs) ! i = (x # xs) ! i", "using Cons.prems(1) Cons.prems(3) True"], ["proof (prove)\nusing this:\n  sorted (x # xs)\n  i < index (insort a (x # xs)) a\n  a \\<le> x\n\ngoal (1 subgoal):\n 1. (a # x # xs) ! i = (x # xs) ! i", "by force"], ["proof (state)\nthis:\n  (a # x # xs) ! i = (x # xs) ! i\n\ngoal (2 subgoals):\n 1. a \\<le> x \\<Longrightarrow> insort a (x # xs) ! i = (x # xs) ! i\n 2. \\<not> a \\<le> x \\<Longrightarrow> insort a (x # xs) ! i = (x # xs) ! i", "finally"], ["proof (chain)\npicking this:\n  insort a (x # xs) ! i = (x # xs) ! i", "show ?thesis"], ["proof (prove)\nusing this:\n  insort a (x # xs) ! i = (x # xs) ! i\n\ngoal (1 subgoal):\n 1. insort a (x # xs) ! i = (x # xs) ! i", "."], ["proof (state)\nthis:\n  insort a (x # xs) ! i = (x # xs) ! i\n\ngoal (1 subgoal):\n 1. \\<not> a \\<le> x \\<Longrightarrow> insort a (x # xs) ! i = (x # xs) ! i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> a \\<le> x \\<Longrightarrow> insort a (x # xs) ! i = (x # xs) ! i", "case False"], ["proof (state)\nthis:\n  \\<not> a \\<le> x\n\ngoal (1 subgoal):\n 1. \\<not> a \\<le> x \\<Longrightarrow> insort a (x # xs) ! i = (x # xs) ! i", "note x_less_a = False"], ["proof (state)\nthis:\n  \\<not> a \\<le> x\n\ngoal (1 subgoal):\n 1. \\<not> a \\<le> x \\<Longrightarrow> insort a (x # xs) ! i = (x # xs) ! i", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. insort a (x # xs) ! i = (x # xs) ! i", "proof (cases \"xs = []\")"], ["proof (state)\ngoal (2 subgoals):\n 1. xs = [] \\<Longrightarrow> insort a (x # xs) ! i = (x # xs) ! i\n 2. xs \\<noteq> [] \\<Longrightarrow> insort a (x # xs) ! i = (x # xs) ! i", "case True"], ["proof (state)\nthis:\n  xs = []\n\ngoal (2 subgoals):\n 1. xs = [] \\<Longrightarrow> insort a (x # xs) ! i = (x # xs) ! i\n 2. xs \\<noteq> [] \\<Longrightarrow> insort a (x # xs) ! i = (x # xs) ! i", "have \"x \\<noteq> a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<noteq> a", "using False"], ["proof (prove)\nusing this:\n  \\<not> a \\<le> x\n\ngoal (1 subgoal):\n 1. x \\<noteq> a", "by auto"], ["proof (state)\nthis:\n  x \\<noteq> a\n\ngoal (2 subgoals):\n 1. xs = [] \\<Longrightarrow> insort a (x # xs) ! i = (x # xs) ! i\n 2. xs \\<noteq> [] \\<Longrightarrow> insort a (x # xs) ! i = (x # xs) ! i", "then"], ["proof (chain)\npicking this:\n  x \\<noteq> a", "show ?thesis"], ["proof (prove)\nusing this:\n  x \\<noteq> a\n\ngoal (1 subgoal):\n 1. insort a (x # xs) ! i = (x # xs) ! i", "using True i_index False"], ["proof (prove)\nusing this:\n  x \\<noteq> a\n  xs = []\n  i < index (insort a (x # xs)) a\n  \\<not> a \\<le> x\n\ngoal (1 subgoal):\n 1. insort a (x # xs) ! i = (x # xs) ! i", "by auto"], ["proof (state)\nthis:\n  insort a (x # xs) ! i = (x # xs) ! i\n\ngoal (1 subgoal):\n 1. xs \\<noteq> [] \\<Longrightarrow> insort a (x # xs) ! i = (x # xs) ! i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. xs \\<noteq> [] \\<Longrightarrow> insort a (x # xs) ! i = (x # xs) ! i", "case False"], ["proof (state)\nthis:\n  xs \\<noteq> []\n\ngoal (1 subgoal):\n 1. xs \\<noteq> [] \\<Longrightarrow> insort a (x # xs) ! i = (x # xs) ! i", "note xs_not_empty = False"], ["proof (state)\nthis:\n  xs \\<noteq> []\n\ngoal (1 subgoal):\n 1. xs \\<noteq> [] \\<Longrightarrow> insort a (x # xs) ! i = (x # xs) ! i", "have \"insort a (x # xs) ! i = (x # insort a xs) ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insort a (x # xs) ! i = (x # insort a xs) ! i", "using x_less_a"], ["proof (prove)\nusing this:\n  \\<not> a \\<le> x\n\ngoal (1 subgoal):\n 1. insort a (x # xs) ! i = (x # insort a xs) ! i", "by simp"], ["proof (state)\nthis:\n  insort a (x # xs) ! i = (x # insort a xs) ! i\n\ngoal (1 subgoal):\n 1. xs \\<noteq> [] \\<Longrightarrow> insort a (x # xs) ! i = (x # xs) ! i", "also"], ["proof (state)\nthis:\n  insort a (x # xs) ! i = (x # insort a xs) ! i\n\ngoal (1 subgoal):\n 1. xs \\<noteq> [] \\<Longrightarrow> insort a (x # xs) ! i = (x # xs) ! i", "have \"... = (x # xs) ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x # insort a xs) ! i = (x # xs) ! i", "proof (cases \"i = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow> (x # insort a xs) ! i = (x # xs) ! i\n 2. i \\<noteq> 0 \\<Longrightarrow> (x # insort a xs) ! i = (x # xs) ! i", "case True"], ["proof (state)\nthis:\n  i = 0\n\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow> (x # insort a xs) ! i = (x # xs) ! i\n 2. i \\<noteq> 0 \\<Longrightarrow> (x # insort a xs) ! i = (x # xs) ! i", "then"], ["proof (chain)\npicking this:\n  i = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  i = 0\n\ngoal (1 subgoal):\n 1. (x # insort a xs) ! i = (x # xs) ! i", "by auto"], ["proof (state)\nthis:\n  (x # insort a xs) ! i = (x # xs) ! i\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> (x # insort a xs) ! i = (x # xs) ! i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> (x # insort a xs) ! i = (x # xs) ! i", "case False"], ["proof (state)\nthis:\n  i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> (x # insort a xs) ! i = (x # xs) ! i", "note i0 = False"], ["proof (state)\nthis:\n  i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> (x # insort a xs) ! i = (x # xs) ! i", "have \"(x # insort a xs) ! i = (insort a xs) ! (i-1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x # insort a xs) ! i = insort a xs ! (i - 1)", "by (simp add: False nth_Cons')"], ["proof (state)\nthis:\n  (x # insort a xs) ! i = insort a xs ! (i - 1)\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> (x # insort a xs) ! i = (x # xs) ! i", "also"], ["proof (state)\nthis:\n  (x # insort a xs) ! i = insort a xs ! (i - 1)\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> (x # insort a xs) ! i = (x # xs) ! i", "have \"... = xs ! (i-1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insort a xs ! (i - 1) = xs ! (i - 1)", "proof (rule Cons.hyps[OF _ _ _ xs_not_empty])"], ["proof (state)\ngoal (3 subgoals):\n 1. sorted xs\n 2. a \\<notin> set xs\n 3. i - 1 < index (insort a xs) a", "show \"sorted xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted xs", "using sorted"], ["proof (prove)\nusing this:\n  sorted (x # xs)\n\ngoal (1 subgoal):\n 1. sorted xs", "by simp"], ["proof (state)\nthis:\n  sorted xs\n\ngoal (2 subgoals):\n 1. a \\<notin> set xs\n 2. i - 1 < index (insort a xs) a", "show \"a \\<notin> set xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<notin> set xs", "using a_notin"], ["proof (prove)\nusing this:\n  a \\<notin> set (x # xs)\n\ngoal (1 subgoal):\n 1. a \\<notin> set xs", "by simp"], ["proof (state)\nthis:\n  a \\<notin> set xs\n\ngoal (1 subgoal):\n 1. i - 1 < index (insort a xs) a", "have \"index (insort a (x # xs)) a = index ((x # insort a xs)) a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. index (insort a (x # xs)) a = index (x # insort a xs) a", "using x_less_a"], ["proof (prove)\nusing this:\n  \\<not> a \\<le> x\n\ngoal (1 subgoal):\n 1. index (insort a (x # xs)) a = index (x # insort a xs) a", "by auto"], ["proof (state)\nthis:\n  index (insort a (x # xs)) a = index (x # insort a xs) a\n\ngoal (1 subgoal):\n 1. i - 1 < index (insort a xs) a", "also"], ["proof (state)\nthis:\n  index (insort a (x # xs)) a = index (x # insort a xs) a\n\ngoal (1 subgoal):\n 1. i - 1 < index (insort a xs) a", "have \"... = index (insort a xs) a + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. index (x # insort a xs) a = index (insort a xs) a + 1", "unfolding index_Cons"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if x = a then 0 else index (insort a xs) a + 1) =\n    index (insort a xs) a + 1", "using x_less_a"], ["proof (prove)\nusing this:\n  \\<not> a \\<le> x\n\ngoal (1 subgoal):\n 1. (if x = a then 0 else index (insort a xs) a + 1) =\n    index (insort a xs) a + 1", "by simp"], ["proof (state)\nthis:\n  index (x # insort a xs) a = index (insort a xs) a + 1\n\ngoal (1 subgoal):\n 1. i - 1 < index (insort a xs) a", "finally"], ["proof (chain)\npicking this:\n  index (insort a (x # xs)) a = index (insort a xs) a + 1", "show \"i - 1 < index (insort a xs) a\""], ["proof (prove)\nusing this:\n  index (insort a (x # xs)) a = index (insort a xs) a + 1\n\ngoal (1 subgoal):\n 1. i - 1 < index (insort a xs) a", "using False i_index"], ["proof (prove)\nusing this:\n  index (insort a (x # xs)) a = index (insort a xs) a + 1\n  i \\<noteq> 0\n  i < index (insort a (x # xs)) a\n\ngoal (1 subgoal):\n 1. i - 1 < index (insort a xs) a", "by linarith"], ["proof (state)\nthis:\n  i - 1 < index (insort a xs) a\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  insort a xs ! (i - 1) = xs ! (i - 1)\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> (x # insort a xs) ! i = (x # xs) ! i", "also"], ["proof (state)\nthis:\n  insort a xs ! (i - 1) = xs ! (i - 1)\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> (x # insort a xs) ! i = (x # xs) ! i", "have \"... = (x # xs) ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs ! (i - 1) = (x # xs) ! i", "by (simp add: False nth_Cons')"], ["proof (state)\nthis:\n  xs ! (i - 1) = (x # xs) ! i\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> (x # insort a xs) ! i = (x # xs) ! i", "finally"], ["proof (chain)\npicking this:\n  (x # insort a xs) ! i = (x # xs) ! i", "show ?thesis"], ["proof (prove)\nusing this:\n  (x # insort a xs) ! i = (x # xs) ! i\n\ngoal (1 subgoal):\n 1. (x # insort a xs) ! i = (x # xs) ! i", "."], ["proof (state)\nthis:\n  (x # insort a xs) ! i = (x # xs) ! i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (x # insort a xs) ! i = (x # xs) ! i\n\ngoal (1 subgoal):\n 1. xs \\<noteq> [] \\<Longrightarrow> insort a (x # xs) ! i = (x # xs) ! i", "finally"], ["proof (chain)\npicking this:\n  insort a (x # xs) ! i = (x # xs) ! i", "show ?thesis"], ["proof (prove)\nusing this:\n  insort a (x # xs) ! i = (x # xs) ! i\n\ngoal (1 subgoal):\n 1. insort a (x # xs) ! i = (x # xs) ! i", "."], ["proof (state)\nthis:\n  insort a (x # xs) ! i = (x # xs) ! i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  insort a (x # xs) ! i = (x # xs) ! i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  insort a (x # xs) ! i = (x # xs) ! i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma insort_nth2:\n  assumes \"sorted xs\" and \"a \\<notin> set xs\"\n    and \"i < length xs\" and \"i \\<ge> index (insort a xs) a\"\n    and \"xs \\<noteq> []\"\n  shows \"insort a xs ! (Suc i) = xs ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insort a xs ! Suc i = xs ! i", "using assms"], ["proof (prove)\nusing this:\n  sorted xs\n  a \\<notin> set xs\n  i < length xs\n  index (insort a xs) a \\<le> i\n  xs \\<noteq> []\n\ngoal (1 subgoal):\n 1. insort a xs ! Suc i = xs ! i", "proof (induct xs arbitrary: a i)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a i.\n       \\<lbrakk>sorted []; a \\<notin> set []; i < length [];\n        index (insort a []) a \\<le> i; [] \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> insort a [] ! Suc i = [] ! i\n 2. \\<And>a xs aa i.\n       \\<lbrakk>\\<And>a i.\n                   \\<lbrakk>sorted xs; a \\<notin> set xs; i < length xs;\n                    index (insort a xs) a \\<le> i; xs \\<noteq> []\\<rbrakk>\n                   \\<Longrightarrow> insort a xs ! Suc i = xs ! i;\n        sorted (a # xs); aa \\<notin> set (a # xs); i < length (a # xs);\n        index (insort aa (a # xs)) aa \\<le> i; a # xs \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> insort aa (a # xs) ! Suc i = (a # xs) ! i", "case Nil"], ["proof (state)\nthis:\n  sorted []\n  a \\<notin> set []\n  i < length []\n  index (insort a []) a \\<le> i\n  [] \\<noteq> []\n\ngoal (2 subgoals):\n 1. \\<And>a i.\n       \\<lbrakk>sorted []; a \\<notin> set []; i < length [];\n        index (insort a []) a \\<le> i; [] \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> insort a [] ! Suc i = [] ! i\n 2. \\<And>a xs aa i.\n       \\<lbrakk>\\<And>a i.\n                   \\<lbrakk>sorted xs; a \\<notin> set xs; i < length xs;\n                    index (insort a xs) a \\<le> i; xs \\<noteq> []\\<rbrakk>\n                   \\<Longrightarrow> insort a xs ! Suc i = xs ! i;\n        sorted (a # xs); aa \\<notin> set (a # xs); i < length (a # xs);\n        index (insort aa (a # xs)) aa \\<le> i; a # xs \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> insort aa (a # xs) ! Suc i = (a # xs) ! i", "then"], ["proof (chain)\npicking this:\n  sorted []\n  a \\<notin> set []\n  i < length []\n  index (insort a []) a \\<le> i\n  [] \\<noteq> []", "show ?case"], ["proof (prove)\nusing this:\n  sorted []\n  a \\<notin> set []\n  i < length []\n  index (insort a []) a \\<le> i\n  [] \\<noteq> []\n\ngoal (1 subgoal):\n 1. insort a [] ! Suc i = [] ! i", "by auto"], ["proof (state)\nthis:\n  insort a [] ! Suc i = [] ! i\n\ngoal (1 subgoal):\n 1. \\<And>a xs aa i.\n       \\<lbrakk>\\<And>a i.\n                   \\<lbrakk>sorted xs; a \\<notin> set xs; i < length xs;\n                    index (insort a xs) a \\<le> i; xs \\<noteq> []\\<rbrakk>\n                   \\<Longrightarrow> insort a xs ! Suc i = xs ! i;\n        sorted (a # xs); aa \\<notin> set (a # xs); i < length (a # xs);\n        index (insort aa (a # xs)) aa \\<le> i; a # xs \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> insort aa (a # xs) ! Suc i = (a # xs) ! i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a xs aa i.\n       \\<lbrakk>\\<And>a i.\n                   \\<lbrakk>sorted xs; a \\<notin> set xs; i < length xs;\n                    index (insort a xs) a \\<le> i; xs \\<noteq> []\\<rbrakk>\n                   \\<Longrightarrow> insort a xs ! Suc i = xs ! i;\n        sorted (a # xs); aa \\<notin> set (a # xs); i < length (a # xs);\n        index (insort aa (a # xs)) aa \\<le> i; a # xs \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> insort aa (a # xs) ! Suc i = (a # xs) ! i", "case (Cons x xs)"], ["proof (state)\nthis:\n  \\<lbrakk>sorted xs; ?a \\<notin> set xs; ?i < length xs;\n   index (insort ?a xs) ?a \\<le> ?i; xs \\<noteq> []\\<rbrakk>\n  \\<Longrightarrow> insort ?a xs ! Suc ?i = xs ! ?i\n  sorted (x # xs)\n  a \\<notin> set (x # xs)\n  i < length (x # xs)\n  index (insort a (x # xs)) a \\<le> i\n  x # xs \\<noteq> []\n\ngoal (1 subgoal):\n 1. \\<And>a xs aa i.\n       \\<lbrakk>\\<And>a i.\n                   \\<lbrakk>sorted xs; a \\<notin> set xs; i < length xs;\n                    index (insort a xs) a \\<le> i; xs \\<noteq> []\\<rbrakk>\n                   \\<Longrightarrow> insort a xs ! Suc i = xs ! i;\n        sorted (a # xs); aa \\<notin> set (a # xs); i < length (a # xs);\n        index (insort aa (a # xs)) aa \\<le> i; a # xs \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> insort aa (a # xs) ! Suc i = (a # xs) ! i", "note sorted = Cons.prems(1)"], ["proof (state)\nthis:\n  sorted (x # xs)\n\ngoal (1 subgoal):\n 1. \\<And>a xs aa i.\n       \\<lbrakk>\\<And>a i.\n                   \\<lbrakk>sorted xs; a \\<notin> set xs; i < length xs;\n                    index (insort a xs) a \\<le> i; xs \\<noteq> []\\<rbrakk>\n                   \\<Longrightarrow> insort a xs ! Suc i = xs ! i;\n        sorted (a # xs); aa \\<notin> set (a # xs); i < length (a # xs);\n        index (insort aa (a # xs)) aa \\<le> i; a # xs \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> insort aa (a # xs) ! Suc i = (a # xs) ! i", "note a_notin = Cons.prems(2)"], ["proof (state)\nthis:\n  a \\<notin> set (x # xs)\n\ngoal (1 subgoal):\n 1. \\<And>a xs aa i.\n       \\<lbrakk>\\<And>a i.\n                   \\<lbrakk>sorted xs; a \\<notin> set xs; i < length xs;\n                    index (insort a xs) a \\<le> i; xs \\<noteq> []\\<rbrakk>\n                   \\<Longrightarrow> insort a xs ! Suc i = xs ! i;\n        sorted (a # xs); aa \\<notin> set (a # xs); i < length (a # xs);\n        index (insort aa (a # xs)) aa \\<le> i; a # xs \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> insort aa (a # xs) ! Suc i = (a # xs) ! i", "note i_length = Cons.prems(3)"], ["proof (state)\nthis:\n  i < length (x # xs)\n\ngoal (1 subgoal):\n 1. \\<And>a xs aa i.\n       \\<lbrakk>\\<And>a i.\n                   \\<lbrakk>sorted xs; a \\<notin> set xs; i < length xs;\n                    index (insort a xs) a \\<le> i; xs \\<noteq> []\\<rbrakk>\n                   \\<Longrightarrow> insort a xs ! Suc i = xs ! i;\n        sorted (a # xs); aa \\<notin> set (a # xs); i < length (a # xs);\n        index (insort aa (a # xs)) aa \\<le> i; a # xs \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> insort aa (a # xs) ! Suc i = (a # xs) ! i", "note index_i = Cons.prems(4)"], ["proof (state)\nthis:\n  index (insort a (x # xs)) a \\<le> i\n\ngoal (1 subgoal):\n 1. \\<And>a xs aa i.\n       \\<lbrakk>\\<And>a i.\n                   \\<lbrakk>sorted xs; a \\<notin> set xs; i < length xs;\n                    index (insort a xs) a \\<le> i; xs \\<noteq> []\\<rbrakk>\n                   \\<Longrightarrow> insort a xs ! Suc i = xs ! i;\n        sorted (a # xs); aa \\<notin> set (a # xs); i < length (a # xs);\n        index (insort aa (a # xs)) aa \\<le> i; a # xs \\<noteq> []\\<rbrakk>\n       \\<Longrightarrow> insort aa (a # xs) ! Suc i = (a # xs) ! i", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. insort a (x # xs) ! Suc i = (x # xs) ! i", "proof (cases \"a \\<le> x\")"], ["proof (state)\ngoal (2 subgoals):\n 1. a \\<le> x \\<Longrightarrow> insort a (x # xs) ! Suc i = (x # xs) ! i\n 2. \\<not> a \\<le> x \\<Longrightarrow>\n    insort a (x # xs) ! Suc i = (x # xs) ! i", "case True"], ["proof (state)\nthis:\n  a \\<le> x\n\ngoal (2 subgoals):\n 1. a \\<le> x \\<Longrightarrow> insort a (x # xs) ! Suc i = (x # xs) ! i\n 2. \\<not> a \\<le> x \\<Longrightarrow>\n    insort a (x # xs) ! Suc i = (x # xs) ! i", "have \"insort a (x # xs) ! (Suc i) = (a # x # xs) ! (Suc i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insort a (x # xs) ! Suc i = (a # x # xs) ! Suc i", "using True"], ["proof (prove)\nusing this:\n  a \\<le> x\n\ngoal (1 subgoal):\n 1. insort a (x # xs) ! Suc i = (a # x # xs) ! Suc i", "by simp"], ["proof (state)\nthis:\n  insort a (x # xs) ! Suc i = (a # x # xs) ! Suc i\n\ngoal (2 subgoals):\n 1. a \\<le> x \\<Longrightarrow> insort a (x # xs) ! Suc i = (x # xs) ! i\n 2. \\<not> a \\<le> x \\<Longrightarrow>\n    insort a (x # xs) ! Suc i = (x # xs) ! i", "also"], ["proof (state)\nthis:\n  insort a (x # xs) ! Suc i = (a # x # xs) ! Suc i\n\ngoal (2 subgoals):\n 1. a \\<le> x \\<Longrightarrow> insort a (x # xs) ! Suc i = (x # xs) ! i\n 2. \\<not> a \\<le> x \\<Longrightarrow>\n    insort a (x # xs) ! Suc i = (x # xs) ! i", "have \"... =  (x # xs) ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a # x # xs) ! Suc i = (x # xs) ! i", "using Cons.prems(1) Cons.prems(5) True"], ["proof (prove)\nusing this:\n  sorted (x # xs)\n  x # xs \\<noteq> []\n  a \\<le> x\n\ngoal (1 subgoal):\n 1. (a # x # xs) ! Suc i = (x # xs) ! i", "by force"], ["proof (state)\nthis:\n  (a # x # xs) ! Suc i = (x # xs) ! i\n\ngoal (2 subgoals):\n 1. a \\<le> x \\<Longrightarrow> insort a (x # xs) ! Suc i = (x # xs) ! i\n 2. \\<not> a \\<le> x \\<Longrightarrow>\n    insort a (x # xs) ! Suc i = (x # xs) ! i", "finally"], ["proof (chain)\npicking this:\n  insort a (x # xs) ! Suc i = (x # xs) ! i", "show ?thesis"], ["proof (prove)\nusing this:\n  insort a (x # xs) ! Suc i = (x # xs) ! i\n\ngoal (1 subgoal):\n 1. insort a (x # xs) ! Suc i = (x # xs) ! i", "."], ["proof (state)\nthis:\n  insort a (x # xs) ! Suc i = (x # xs) ! i\n\ngoal (1 subgoal):\n 1. \\<not> a \\<le> x \\<Longrightarrow>\n    insort a (x # xs) ! Suc i = (x # xs) ! i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> a \\<le> x \\<Longrightarrow>\n    insort a (x # xs) ! Suc i = (x # xs) ! i", "case False"], ["proof (state)\nthis:\n  \\<not> a \\<le> x\n\ngoal (1 subgoal):\n 1. \\<not> a \\<le> x \\<Longrightarrow>\n    insort a (x # xs) ! Suc i = (x # xs) ! i", "note x_less_a = False"], ["proof (state)\nthis:\n  \\<not> a \\<le> x\n\ngoal (1 subgoal):\n 1. \\<not> a \\<le> x \\<Longrightarrow>\n    insort a (x # xs) ! Suc i = (x # xs) ! i", "have \"insort a (x # xs) ! (Suc i) = (x # insort a xs) ! (Suc i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insort a (x # xs) ! Suc i = (x # insort a xs) ! Suc i", "using False"], ["proof (prove)\nusing this:\n  \\<not> a \\<le> x\n\ngoal (1 subgoal):\n 1. insort a (x # xs) ! Suc i = (x # insort a xs) ! Suc i", "by simp"], ["proof (state)\nthis:\n  insort a (x # xs) ! Suc i = (x # insort a xs) ! Suc i\n\ngoal (1 subgoal):\n 1. \\<not> a \\<le> x \\<Longrightarrow>\n    insort a (x # xs) ! Suc i = (x # xs) ! i", "also"], ["proof (state)\nthis:\n  insort a (x # xs) ! Suc i = (x # insort a xs) ! Suc i\n\ngoal (1 subgoal):\n 1. \\<not> a \\<le> x \\<Longrightarrow>\n    insort a (x # xs) ! Suc i = (x # xs) ! i", "have \"... = (x # xs) ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x # insort a xs) ! Suc i = (x # xs) ! i", "proof (cases \"i = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow> (x # insort a xs) ! Suc i = (x # xs) ! i\n 2. i \\<noteq> 0 \\<Longrightarrow> (x # insort a xs) ! Suc i = (x # xs) ! i", "case True"], ["proof (state)\nthis:\n  i = 0\n\ngoal (2 subgoals):\n 1. i = 0 \\<Longrightarrow> (x # insort a xs) ! Suc i = (x # xs) ! i\n 2. i \\<noteq> 0 \\<Longrightarrow> (x # insort a xs) ! Suc i = (x # xs) ! i", "then"], ["proof (chain)\npicking this:\n  i = 0", "show ?thesis"], ["proof (prove)\nusing this:\n  i = 0\n\ngoal (1 subgoal):\n 1. (x # insort a xs) ! Suc i = (x # xs) ! i", "using index_i linear x_less_a"], ["proof (prove)\nusing this:\n  i = 0\n  index (insort a (x # xs)) a \\<le> i\n  ?x \\<le> ?y \\<or> ?y \\<le> ?x\n  \\<not> a \\<le> x\n\ngoal (1 subgoal):\n 1. (x # insort a xs) ! Suc i = (x # xs) ! i", "by fastforce"], ["proof (state)\nthis:\n  (x # insort a xs) ! Suc i = (x # xs) ! i\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> (x # insort a xs) ! Suc i = (x # xs) ! i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> (x # insort a xs) ! Suc i = (x # xs) ! i", "case False"], ["proof (state)\nthis:\n  i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> (x # insort a xs) ! Suc i = (x # xs) ! i", "note i0 = False"], ["proof (state)\nthis:\n  i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. i \\<noteq> 0 \\<Longrightarrow> (x # insort a xs) ! Suc i = (x # xs) ! i", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. (x # insort a xs) ! Suc i = (x # xs) ! i", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (x # insort a xs) ! Suc i = (x # xs) ! i", "have Suc_i: \"Suc (i - 1) = i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Suc (i - 1) = i", "using i0"], ["proof (prove)\nusing this:\n  i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. Suc (i - 1) = i", "by auto"], ["proof (state)\nthis:\n  Suc (i - 1) = i\n\ngoal (1 subgoal):\n 1. (x # insort a xs) ! Suc i = (x # xs) ! i", "have \"(x # insort a xs) ! (Suc i) = (insort a xs) ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x # insort a xs) ! Suc i = insort a xs ! i", "by (simp add: nth_Cons')"], ["proof (state)\nthis:\n  (x # insort a xs) ! Suc i = insort a xs ! i\n\ngoal (1 subgoal):\n 1. (x # insort a xs) ! Suc i = (x # xs) ! i", "also"], ["proof (state)\nthis:\n  (x # insort a xs) ! Suc i = insort a xs ! i\n\ngoal (1 subgoal):\n 1. (x # insort a xs) ! Suc i = (x # xs) ! i", "have \"... = (insort a xs) ! Suc (i - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insort a xs ! i = insort a xs ! Suc (i - 1)", "using Suc_i"], ["proof (prove)\nusing this:\n  Suc (i - 1) = i\n\ngoal (1 subgoal):\n 1. insort a xs ! i = insort a xs ! Suc (i - 1)", "by simp"], ["proof (state)\nthis:\n  insort a xs ! i = insort a xs ! Suc (i - 1)\n\ngoal (1 subgoal):\n 1. (x # insort a xs) ! Suc i = (x # xs) ! i", "also"], ["proof (state)\nthis:\n  insort a xs ! i = insort a xs ! Suc (i - 1)\n\ngoal (1 subgoal):\n 1. (x # insort a xs) ! Suc i = (x # xs) ! i", "have \"... = xs ! (i - 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insort a xs ! Suc (i - 1) = xs ! (i - 1)", "proof (rule Cons.hyps)"], ["proof (state)\ngoal (5 subgoals):\n 1. sorted xs\n 2. a \\<notin> set xs\n 3. i - 1 < length xs\n 4. index (insort a xs) a \\<le> i - 1\n 5. xs \\<noteq> []", "show \"sorted xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted xs", "using sorted"], ["proof (prove)\nusing this:\n  sorted (x # xs)\n\ngoal (1 subgoal):\n 1. sorted xs", "by simp"], ["proof (state)\nthis:\n  sorted xs\n\ngoal (4 subgoals):\n 1. a \\<notin> set xs\n 2. i - 1 < length xs\n 3. index (insort a xs) a \\<le> i - 1\n 4. xs \\<noteq> []", "show \"a \\<notin> set xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<notin> set xs", "using a_notin"], ["proof (prove)\nusing this:\n  a \\<notin> set (x # xs)\n\ngoal (1 subgoal):\n 1. a \\<notin> set xs", "by simp"], ["proof (state)\nthis:\n  a \\<notin> set xs\n\ngoal (3 subgoals):\n 1. i - 1 < length xs\n 2. index (insort a xs) a \\<le> i - 1\n 3. xs \\<noteq> []", "show \"i - 1 < length xs\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i - 1 < length xs", "using i_length"], ["proof (prove)\nusing this:\n  i < length (x # xs)\n\ngoal (1 subgoal):\n 1. i - 1 < length xs", "using Suc_i"], ["proof (prove)\nusing this:\n  i < length (x # xs)\n  Suc (i - 1) = i\n\ngoal (1 subgoal):\n 1. i - 1 < length xs", "by auto"], ["proof (state)\nthis:\n  i - 1 < length xs\n\ngoal (2 subgoals):\n 1. index (insort a xs) a \\<le> i - 1\n 2. xs \\<noteq> []", "thus \"xs \\<noteq> []\""], ["proof (prove)\nusing this:\n  i - 1 < length xs\n\ngoal (1 subgoal):\n 1. xs \\<noteq> []", "by auto"], ["proof (state)\nthis:\n  xs \\<noteq> []\n\ngoal (1 subgoal):\n 1. index (insort a xs) a \\<le> i - 1", "have \"index (insort a (x # xs)) a = index ((x # insort a xs)) a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. index (insort a (x # xs)) a = index (x # insort a xs) a", "using x_less_a"], ["proof (prove)\nusing this:\n  \\<not> a \\<le> x\n\ngoal (1 subgoal):\n 1. index (insort a (x # xs)) a = index (x # insort a xs) a", "by simp"], ["proof (state)\nthis:\n  index (insort a (x # xs)) a = index (x # insort a xs) a\n\ngoal (1 subgoal):\n 1. index (insort a xs) a \\<le> i - 1", "also"], ["proof (state)\nthis:\n  index (insort a (x # xs)) a = index (x # insort a xs) a\n\ngoal (1 subgoal):\n 1. index (insort a xs) a \\<le> i - 1", "have \"... = index (insort a xs) a + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. index (x # insort a xs) a = index (insort a xs) a + 1", "unfolding index_Cons"], ["proof (prove)\ngoal (1 subgoal):\n 1. (if x = a then 0 else index (insort a xs) a + 1) =\n    index (insort a xs) a + 1", "using x_less_a"], ["proof (prove)\nusing this:\n  \\<not> a \\<le> x\n\ngoal (1 subgoal):\n 1. (if x = a then 0 else index (insort a xs) a + 1) =\n    index (insort a xs) a + 1", "by simp"], ["proof (state)\nthis:\n  index (x # insort a xs) a = index (insort a xs) a + 1\n\ngoal (1 subgoal):\n 1. index (insort a xs) a \\<le> i - 1", "finally"], ["proof (chain)\npicking this:\n  index (insort a (x # xs)) a = index (insort a xs) a + 1", "show \"index (insort a xs) a \\<le> i - 1\""], ["proof (prove)\nusing this:\n  index (insort a (x # xs)) a = index (insort a xs) a + 1\n\ngoal (1 subgoal):\n 1. index (insort a xs) a \\<le> i - 1", "using index_i i0"], ["proof (prove)\nusing this:\n  index (insort a (x # xs)) a = index (insort a xs) a + 1\n  index (insort a (x # xs)) a \\<le> i\n  i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. index (insort a xs) a \\<le> i - 1", "by auto"], ["proof (state)\nthis:\n  index (insort a xs) a \\<le> i - 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  insort a xs ! Suc (i - 1) = xs ! (i - 1)\n\ngoal (1 subgoal):\n 1. (x # insort a xs) ! Suc i = (x # xs) ! i", "also"], ["proof (state)\nthis:\n  insort a xs ! Suc (i - 1) = xs ! (i - 1)\n\ngoal (1 subgoal):\n 1. (x # insort a xs) ! Suc i = (x # xs) ! i", "have \"... = (x # xs) ! i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. xs ! (i - 1) = (x # xs) ! i", "using Suc_i"], ["proof (prove)\nusing this:\n  Suc (i - 1) = i\n\ngoal (1 subgoal):\n 1. xs ! (i - 1) = (x # xs) ! i", "by auto"], ["proof (state)\nthis:\n  xs ! (i - 1) = (x # xs) ! i\n\ngoal (1 subgoal):\n 1. (x # insort a xs) ! Suc i = (x # xs) ! i", "finally"], ["proof (chain)\npicking this:\n  (x # insort a xs) ! Suc i = (x # xs) ! i", "show ?thesis"], ["proof (prove)\nusing this:\n  (x # insort a xs) ! Suc i = (x # xs) ! i\n\ngoal (1 subgoal):\n 1. (x # insort a xs) ! Suc i = (x # xs) ! i", "."], ["proof (state)\nthis:\n  (x # insort a xs) ! Suc i = (x # xs) ! i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (x # insort a xs) ! Suc i = (x # xs) ! i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (x # insort a xs) ! Suc i = (x # xs) ! i\n\ngoal (1 subgoal):\n 1. \\<not> a \\<le> x \\<Longrightarrow>\n    insort a (x # xs) ! Suc i = (x # xs) ! i", "finally"], ["proof (chain)\npicking this:\n  insort a (x # xs) ! Suc i = (x # xs) ! i", "show ?thesis"], ["proof (prove)\nusing this:\n  insort a (x # xs) ! Suc i = (x # xs) ! i\n\ngoal (1 subgoal):\n 1. insort a (x # xs) ! Suc i = (x # xs) ! i", "."], ["proof (state)\nthis:\n  insort a (x # xs) ! Suc i = (x # xs) ! i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  insort a (x # xs) ! Suc i = (x # xs) ! i\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma pick_index:\n  assumes a: \"a \\<in> I\" and a'_card: \"a' < card I\"\n  shows \"(pick I a' = a) = (index (sorted_list_of_set I) a = a')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (pick I a' = a) = (index (sorted_list_of_set I) a = a')", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (pick I a' = a) = (index (sorted_list_of_set I) a = a')", "have finI: \"finite I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. finite I", "using a'_card card.infinite"], ["proof (prove)\nusing this:\n  a' < card I\n  infinite ?A \\<Longrightarrow> card ?A = 0\n\ngoal (1 subgoal):\n 1. finite I", "by force"], ["proof (state)\nthis:\n  finite I\n\ngoal (1 subgoal):\n 1. (pick I a' = a) = (index (sorted_list_of_set I) a = a')", "have length_I: \"length (sorted_list_of_set I) = card I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length (sorted_list_of_set I) = card I", "by (metis a'_card card.infinite distinct_card distinct_sorted_list_of_set\n        not_less_zero set_sorted_list_of_set)"], ["proof (state)\nthis:\n  length (sorted_list_of_set I) = card I\n\ngoal (1 subgoal):\n 1. (pick I a' = a) = (index (sorted_list_of_set I) a = a')", "let ?i = \"index (sorted_list_of_set I) a\""], ["proof (state)\ngoal (1 subgoal):\n 1. (pick I a' = a) = (index (sorted_list_of_set I) a = a')", "have \"(sorted_list_of_set I) ! a' = pick I a'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_list_of_set I ! a' = pick I a'", "by (rule sorted_list_of_set_eq_pick, auto simp add: finI a'_card length_I)"], ["proof (state)\nthis:\n  sorted_list_of_set I ! a' = pick I a'\n\ngoal (1 subgoal):\n 1. (pick I a' = a) = (index (sorted_list_of_set I) a = a')", "moreover"], ["proof (state)\nthis:\n  sorted_list_of_set I ! a' = pick I a'\n\ngoal (1 subgoal):\n 1. (pick I a' = a) = (index (sorted_list_of_set I) a = a')", "have \"(sorted_list_of_set I) ! ?i = a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted_list_of_set I ! index (sorted_list_of_set I) a = a", "by (rule nth_index, simp add: a finI)"], ["proof (state)\nthis:\n  sorted_list_of_set I ! index (sorted_list_of_set I) a = a\n\ngoal (1 subgoal):\n 1. (pick I a' = a) = (index (sorted_list_of_set I) a = a')", "ultimately"], ["proof (chain)\npicking this:\n  sorted_list_of_set I ! a' = pick I a'\n  sorted_list_of_set I ! index (sorted_list_of_set I) a = a", "show ?thesis"], ["proof (prove)\nusing this:\n  sorted_list_of_set I ! a' = pick I a'\n  sorted_list_of_set I ! index (sorted_list_of_set I) a = a\n\ngoal (1 subgoal):\n 1. (pick I a' = a) = (index (sorted_list_of_set I) a = a')", "by (metis a'_card distinct_sorted_list_of_set index_nth_id length_I)"], ["proof (state)\nthis:\n  (pick I a' = a) = (index (sorted_list_of_set I) a = a')\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}