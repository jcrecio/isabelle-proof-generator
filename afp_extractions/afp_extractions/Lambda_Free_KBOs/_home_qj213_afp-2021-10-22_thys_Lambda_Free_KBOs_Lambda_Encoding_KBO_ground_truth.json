{"file_name": "/home/qj213/afp-2021-10-22/thys/Lambda_Free_KBOs/Lambda_Encoding_KBO.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Lambda_Free_KBOs", "problem_names": ["lemma wary_raw_db_subst: \"wary_subst (raw_db_subst i x)\"", "lemma wt_subst_db: \"wt (subst_db i x s) = wt (subst (raw_db_subst j x) s)\"", "lemma subst_db_Suc_ge: \"subst_db (Suc i) x s \\<ge>\\<^sub>t subst_db i x s\"", "lemma gt_subst_db: \"t >\\<^sub>t s \\<Longrightarrow> subst_db i x t >\\<^sub>t subst_db i x s\""], "translations": [["", "lemma wary_raw_db_subst: \"wary_subst (raw_db_subst i x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wary_subst (raw_db_subst i x)", "unfolding wary_subst_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>xa.\n       wary (raw_db_subst i x xa) \\<and>\n       \\<infinity> \\<le> arity (raw_db_subst i x xa) \\<and>\n       local.ground_heads (head (raw_db_subst i x xa)) \\<subseteq> UNIV", "by (simp add: arity_def)"], ["", "lemma wt_subst_db: \"wt (subst_db i x s) = wt (subst (raw_db_subst j x) s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wt (subst_db i x s) = wt (subst (raw_db_subst j x) s)", "by (induct s arbitrary: i j)\n    (clarsimp simp: raw_db_subst_def wt_db_db split: hd.splits,\n      metis lambda_encoding.subst_db.simps(2) subst.simps(2) wt.simps(2))"], ["", "lemma subst_db_Suc_ge: \"subst_db (Suc i) x s \\<ge>\\<^sub>t subst_db i x s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subst_db (Suc i) x s \\<ge>\\<^sub>t subst_db i x s", "proof (induct s arbitrary: i)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>xa i.\n       subst_db (Suc i) x (Hd xa) \\<ge>\\<^sub>t subst_db i x (Hd xa)\n 2. \\<And>s1 s2 i.\n       \\<lbrakk>\\<And>i.\n                   subst_db (Suc i) x s1 \\<ge>\\<^sub>t subst_db i x s1;\n        \\<And>i.\n           subst_db (Suc i) x s2 \\<ge>\\<^sub>t subst_db i x s2\\<rbrakk>\n       \\<Longrightarrow> subst_db (Suc i) x (App s1 s2) \\<ge>\\<^sub>t\n                         subst_db i x (App s1 s2)", "case (Hd x)"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>xa i.\n       subst_db (Suc i) x (Hd xa) \\<ge>\\<^sub>t subst_db i x (Hd xa)\n 2. \\<And>s1 s2 i.\n       \\<lbrakk>\\<And>i.\n                   subst_db (Suc i) x s1 \\<ge>\\<^sub>t subst_db i x s1;\n        \\<And>i.\n           subst_db (Suc i) x s2 \\<ge>\\<^sub>t subst_db i x s2\\<rbrakk>\n       \\<Longrightarrow> subst_db (Suc i) x (App s1 s2) \\<ge>\\<^sub>t\n                         subst_db i x (App s1 s2)", "then"], ["proof (chain)\npicking this:", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. subst_db (Suc i) x (Hd x) \\<ge>\\<^sub>t subst_db i x (Hd x)", "by (auto intro: gt_diff simp: wt_db_db gt_db_db gt_sym_imp_hd)"], ["proof (state)\nthis:\n  subst_db (Suc i) x (Hd x) \\<ge>\\<^sub>t subst_db i x (Hd x)\n\ngoal (1 subgoal):\n 1. \\<And>s1 s2 i.\n       \\<lbrakk>\\<And>i.\n                   subst_db (Suc i) x s1 \\<ge>\\<^sub>t subst_db i x s1;\n        \\<And>i.\n           subst_db (Suc i) x s2 \\<ge>\\<^sub>t subst_db i x s2\\<rbrakk>\n       \\<Longrightarrow> subst_db (Suc i) x (App s1 s2) \\<ge>\\<^sub>t\n                         subst_db i x (App s1 s2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s1 s2 i.\n       \\<lbrakk>\\<And>i.\n                   subst_db (Suc i) x s1 \\<ge>\\<^sub>t subst_db i x s1;\n        \\<And>i.\n           subst_db (Suc i) x s2 \\<ge>\\<^sub>t subst_db i x s2\\<rbrakk>\n       \\<Longrightarrow> subst_db (Suc i) x (App s1 s2) \\<ge>\\<^sub>t\n                         subst_db i x (App s1 s2)", "case (App s1 s2)"], ["proof (state)\nthis:\n  subst_db (Suc ?i6) x s1 \\<ge>\\<^sub>t subst_db ?i6 x s1\n  subst_db (Suc ?i6) x s2 \\<ge>\\<^sub>t subst_db ?i6 x s2\n\ngoal (1 subgoal):\n 1. \\<And>s1 s2 i.\n       \\<lbrakk>\\<And>i.\n                   subst_db (Suc i) x s1 \\<ge>\\<^sub>t subst_db i x s1;\n        \\<And>i.\n           subst_db (Suc i) x s2 \\<ge>\\<^sub>t subst_db i x s2\\<rbrakk>\n       \\<Longrightarrow> subst_db (Suc i) x (App s1 s2) \\<ge>\\<^sub>t\n                         subst_db i x (App s1 s2)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. subst_db (Suc i) x (App s1 s2) \\<ge>\\<^sub>t subst_db i x (App s1 s2)", "by (simp, safe)\n      (metis (full_types) App.hyps(1) App.hyps(2) gt_compat_arg gt_compat_fun gt_trans)+"], ["proof (state)\nthis:\n  subst_db (Suc i) x (App s1 s2) \\<ge>\\<^sub>t subst_db i x (App s1 s2)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma gt_subst_db: \"t >\\<^sub>t s \\<Longrightarrow> subst_db i x t >\\<^sub>t subst_db i x s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t >\\<^sub>t s \\<Longrightarrow> subst_db i x t >\\<^sub>t subst_db i x s", "proof (simp only: atomize_imp,\n    rule measure_induct_rule[of \"\\<lambda>(t, s, i). {#size t, size s#}\"\n        \"\\<lambda>(t, s, i). t >\\<^sub>t s \\<longrightarrow> subst_db i x t >\\<^sub>t subst_db i x s\" \"(t, s, i)\",\n      simplified prod.case],\n    simp only: split_paired_all prod.case atomize_imp[symmetric] atomize_all[symmetric])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a aa b.\n       \\<lbrakk>\\<And>ab ac b.\n                   \\<lbrakk>{#size ab, size ac#} < {#size a, size aa#};\n                    ab >\\<^sub>t ac\\<rbrakk>\n                   \\<Longrightarrow> subst_db b x ab >\\<^sub>t\n                                     subst_db b x ac;\n        a >\\<^sub>t aa\\<rbrakk>\n       \\<Longrightarrow> subst_db b x a >\\<^sub>t subst_db b x aa", "fix t s :: \"('s, 'v) tm\" and i :: nat"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a aa b.\n       \\<lbrakk>\\<And>ab ac b.\n                   \\<lbrakk>{#size ab, size ac#} < {#size a, size aa#};\n                    ab >\\<^sub>t ac\\<rbrakk>\n                   \\<Longrightarrow> subst_db b x ab >\\<^sub>t\n                                     subst_db b x ac;\n        a >\\<^sub>t aa\\<rbrakk>\n       \\<Longrightarrow> subst_db b x a >\\<^sub>t subst_db b x aa", "assume\n    ih: \"\\<And>ta sa i. {#size ta, size sa#} < {#size t, size s#} \\<Longrightarrow> ta >\\<^sub>t sa \\<Longrightarrow>\n      subst_db i x ta >\\<^sub>t subst_db i x sa\" and\n    t_gt_s: \"t >\\<^sub>t s\""], ["proof (state)\nthis:\n  \\<lbrakk>{#size ?ta6, size ?sa6#} < {#size t, size s#};\n   ?ta6 >\\<^sub>t ?sa6\\<rbrakk>\n  \\<Longrightarrow> subst_db ?i6 x ?ta6 >\\<^sub>t subst_db ?i6 x ?sa6\n  t >\\<^sub>t s\n\ngoal (1 subgoal):\n 1. \\<And>a aa b.\n       \\<lbrakk>\\<And>ab ac b.\n                   \\<lbrakk>{#size ab, size ac#} < {#size a, size aa#};\n                    ab >\\<^sub>t ac\\<rbrakk>\n                   \\<Longrightarrow> subst_db b x ab >\\<^sub>t\n                                     subst_db b x ac;\n        a >\\<^sub>t aa\\<rbrakk>\n       \\<Longrightarrow> subst_db b x a >\\<^sub>t subst_db b x aa", "let ?\\<rho> = \"subst_db i x\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a aa b.\n       \\<lbrakk>\\<And>ab ac b.\n                   \\<lbrakk>{#size ab, size ac#} < {#size a, size aa#};\n                    ab >\\<^sub>t ac\\<rbrakk>\n                   \\<Longrightarrow> subst_db b x ab >\\<^sub>t\n                                     subst_db b x ac;\n        a >\\<^sub>t aa\\<rbrakk>\n       \\<Longrightarrow> subst_db b x a >\\<^sub>t subst_db b x aa", "show \"?\\<rho> t >\\<^sub>t ?\\<rho> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subst_db i x t >\\<^sub>t subst_db i x s", "proof (cases \"wt (?\\<rho> t) = wt (?\\<rho> s)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. wt (subst_db i x t) = wt (subst_db i x s) \\<Longrightarrow>\n    subst_db i x t >\\<^sub>t subst_db i x s\n 2. wt (subst_db i x t) \\<noteq> wt (subst_db i x s) \\<Longrightarrow>\n    subst_db i x t >\\<^sub>t subst_db i x s", "case wt_\\<rho>t_ne_\\<rho>s: False"], ["proof (state)\nthis:\n  wt (subst_db i x t) \\<noteq> wt (subst_db i x s)\n\ngoal (2 subgoals):\n 1. wt (subst_db i x t) = wt (subst_db i x s) \\<Longrightarrow>\n    subst_db i x t >\\<^sub>t subst_db i x s\n 2. wt (subst_db i x t) \\<noteq> wt (subst_db i x s) \\<Longrightarrow>\n    subst_db i x t >\\<^sub>t subst_db i x s", "have vars_s: \"vars_mset t \\<supseteq># vars_mset s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars_mset s \\<subseteq># vars_mset t", "using gt.cases t_gt_s"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a1.0 >\\<^sub>t ?a2.0;\n   \\<And>t s.\n      \\<lbrakk>?a1.0 = t; ?a2.0 = s; vars_mset s \\<subseteq># vars_mset t;\n       wt s < wt t\\<rbrakk>\n      \\<Longrightarrow> ?P;\n   \\<And>t s.\n      \\<lbrakk>?a1.0 = t; ?a2.0 = s; vars_mset s \\<subseteq># vars_mset t;\n       wt t = wt s; head t >\\<^sub>h\\<^sub>d head s\\<rbrakk>\n      \\<Longrightarrow> ?P;\n   \\<And>t s.\n      \\<lbrakk>?a1.0 = t; ?a2.0 = s; vars_mset s \\<subseteq># vars_mset t;\n       wt t = wt s; head t = head s;\n       \\<forall>f\\<in>local.ground_heads (head s).\n          extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n      \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n  t >\\<^sub>t s\n\ngoal (1 subgoal):\n 1. vars_mset s \\<subseteq># vars_mset t", "by blast"], ["proof (state)\nthis:\n  vars_mset s \\<subseteq># vars_mset t\n\ngoal (2 subgoals):\n 1. wt (subst_db i x t) = wt (subst_db i x s) \\<Longrightarrow>\n    subst_db i x t >\\<^sub>t subst_db i x s\n 2. wt (subst_db i x t) \\<noteq> wt (subst_db i x s) \\<Longrightarrow>\n    subst_db i x t >\\<^sub>t subst_db i x s", "hence vars_\\<rho>s: \"vars_mset (?\\<rho> t) \\<supseteq># vars_mset (?\\<rho> s)\""], ["proof (prove)\nusing this:\n  vars_mset s \\<subseteq># vars_mset t\n\ngoal (1 subgoal):\n 1. vars_mset (subst_db i x s) \\<subseteq># vars_mset (subst_db i x t)", "by (simp add: var_mset_subst_db_subseteq)"], ["proof (state)\nthis:\n  vars_mset (subst_db i x s) \\<subseteq># vars_mset (subst_db i x t)\n\ngoal (2 subgoals):\n 1. wt (subst_db i x t) = wt (subst_db i x s) \\<Longrightarrow>\n    subst_db i x t >\\<^sub>t subst_db i x s\n 2. wt (subst_db i x t) \\<noteq> wt (subst_db i x s) \\<Longrightarrow>\n    subst_db i x t >\\<^sub>t subst_db i x s", "have wt_t_ge_s: \"wt t \\<ge> wt s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wt s \\<le> wt t", "by (metis dual_order.strict_implies_order eq_imp_le gt.cases t_gt_s)"], ["proof (state)\nthis:\n  wt s \\<le> wt t\n\ngoal (2 subgoals):\n 1. wt (subst_db i x t) = wt (subst_db i x s) \\<Longrightarrow>\n    subst_db i x t >\\<^sub>t subst_db i x s\n 2. wt (subst_db i x t) \\<noteq> wt (subst_db i x s) \\<Longrightarrow>\n    subst_db i x t >\\<^sub>t subst_db i x s", "have \"wt (?\\<rho> t) > wt (?\\<rho> s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wt (subst_db i x s) < wt (subst_db i x t)", "using wt_\\<rho>t_ne_\\<rho>s"], ["proof (prove)\nusing this:\n  wt (subst_db i x t) \\<noteq> wt (subst_db i x s)\n\ngoal (1 subgoal):\n 1. wt (subst_db i x s) < wt (subst_db i x t)", "unfolding wt_subst_db"], ["proof (prove)\nusing this:\n  wt (subst_db i x t) \\<noteq> wt (subst_db i x s)\n\ngoal (1 subgoal):\n 1. wt (subst_db i x s) < wt (subst_db i x t)", "by (metis (full_types) gt.simps gt_subst t_gt_s wary_raw_db_subst wt_subst_db)"], ["proof (state)\nthis:\n  wt (subst_db i x s) < wt (subst_db i x t)\n\ngoal (2 subgoals):\n 1. wt (subst_db i x t) = wt (subst_db i x s) \\<Longrightarrow>\n    subst_db i x t >\\<^sub>t subst_db i x s\n 2. wt (subst_db i x t) \\<noteq> wt (subst_db i x s) \\<Longrightarrow>\n    subst_db i x t >\\<^sub>t subst_db i x s", "thus ?thesis"], ["proof (prove)\nusing this:\n  wt (subst_db i x s) < wt (subst_db i x t)\n\ngoal (1 subgoal):\n 1. subst_db i x t >\\<^sub>t subst_db i x s", "by (rule gt_wt[OF vars_\\<rho>s])"], ["proof (state)\nthis:\n  subst_db i x t >\\<^sub>t subst_db i x s\n\ngoal (1 subgoal):\n 1. wt (subst_db i x t) = wt (subst_db i x s) \\<Longrightarrow>\n    subst_db i x t >\\<^sub>t subst_db i x s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. wt (subst_db i x t) = wt (subst_db i x s) \\<Longrightarrow>\n    subst_db i x t >\\<^sub>t subst_db i x s", "case wt_\\<rho>t_eq_\\<rho>s: True"], ["proof (state)\nthis:\n  wt (subst_db i x t) = wt (subst_db i x s)\n\ngoal (1 subgoal):\n 1. wt (subst_db i x t) = wt (subst_db i x s) \\<Longrightarrow>\n    subst_db i x t >\\<^sub>t subst_db i x s", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. subst_db i x t >\\<^sub>t subst_db i x s", "using t_gt_s"], ["proof (prove)\nusing this:\n  t >\\<^sub>t s\n\ngoal (1 subgoal):\n 1. subst_db i x t >\\<^sub>t subst_db i x s", "proof cases"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt s < wt t\\<rbrakk>\n    \\<Longrightarrow> subst_db i x t >\\<^sub>t subst_db i x s\n 2. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t >\\<^sub>h\\<^sub>d head s\\<rbrakk>\n    \\<Longrightarrow> subst_db i x t >\\<^sub>t subst_db i x s\n 3. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head s).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst_db i x t >\\<^sub>t subst_db i x s", "case gt_wt"], ["proof (state)\nthis:\n  vars_mset s \\<subseteq># vars_mset t\n  wt s < wt t\n\ngoal (3 subgoals):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt s < wt t\\<rbrakk>\n    \\<Longrightarrow> subst_db i x t >\\<^sub>t subst_db i x s\n 2. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t >\\<^sub>h\\<^sub>d head s\\<rbrakk>\n    \\<Longrightarrow> subst_db i x t >\\<^sub>t subst_db i x s\n 3. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head s).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst_db i x t >\\<^sub>t subst_db i x s", "hence False"], ["proof (prove)\nusing this:\n  vars_mset s \\<subseteq># vars_mset t\n  wt s < wt t\n\ngoal (1 subgoal):\n 1. False", "using wt_\\<rho>t_eq_\\<rho>s"], ["proof (prove)\nusing this:\n  vars_mset s \\<subseteq># vars_mset t\n  wt s < wt t\n  wt (subst_db i x t) = wt (subst_db i x s)\n\ngoal (1 subgoal):\n 1. False", "by (metis add_less_le_mono kbo_std.extra_wt_subseteq nat_less_le wary_raw_db_subst wt_subst\n            wt_subst_db)"], ["proof (state)\nthis:\n  False\n\ngoal (3 subgoals):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt s < wt t\\<rbrakk>\n    \\<Longrightarrow> subst_db i x t >\\<^sub>t subst_db i x s\n 2. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t >\\<^sub>h\\<^sub>d head s\\<rbrakk>\n    \\<Longrightarrow> subst_db i x t >\\<^sub>t subst_db i x s\n 3. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head s).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst_db i x t >\\<^sub>t subst_db i x s", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. subst_db i x t >\\<^sub>t subst_db i x s", "by sat"], ["proof (state)\nthis:\n  subst_db i x t >\\<^sub>t subst_db i x s\n\ngoal (2 subgoals):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t >\\<^sub>h\\<^sub>d head s\\<rbrakk>\n    \\<Longrightarrow> subst_db i x t >\\<^sub>t subst_db i x s\n 2. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head s).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst_db i x t >\\<^sub>t subst_db i x s", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t >\\<^sub>h\\<^sub>d head s\\<rbrakk>\n    \\<Longrightarrow> subst_db i x t >\\<^sub>t subst_db i x s\n 2. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head s).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst_db i x t >\\<^sub>t subst_db i x s", "case _: gt_diff"], ["proof (state)\nthis:\n  vars_mset s \\<subseteq># vars_mset t\n  wt t = wt s\n  head t >\\<^sub>h\\<^sub>d head s\n\ngoal (2 subgoals):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t >\\<^sub>h\\<^sub>d head s\\<rbrakk>\n    \\<Longrightarrow> subst_db i x t >\\<^sub>t subst_db i x s\n 2. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head s).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst_db i x t >\\<^sub>t subst_db i x s", "note vars_s = this(1) and hd_t_gt_hd_s = this(3)"], ["proof (state)\nthis:\n  vars_mset s \\<subseteq># vars_mset t\n  head t >\\<^sub>h\\<^sub>d head s\n\ngoal (2 subgoals):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t >\\<^sub>h\\<^sub>d head s\\<rbrakk>\n    \\<Longrightarrow> subst_db i x t >\\<^sub>t subst_db i x s\n 2. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head s).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst_db i x t >\\<^sub>t subst_db i x s", "have vars_\\<rho>s: \"vars_mset (?\\<rho> t) \\<supseteq># vars_mset (?\\<rho> s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars_mset (subst_db i x s) \\<subseteq># vars_mset (subst_db i x t)", "by (simp add: var_mset_subst_db_subseteq vars_s)"], ["proof (state)\nthis:\n  vars_mset (subst_db i x s) \\<subseteq># vars_mset (subst_db i x t)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t >\\<^sub>h\\<^sub>d head s\\<rbrakk>\n    \\<Longrightarrow> subst_db i x t >\\<^sub>t subst_db i x s\n 2. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head s).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst_db i x t >\\<^sub>t subst_db i x s", "term gt_hd"], ["proof (state)\nthis:\n  vars_mset (subst_db i x s) \\<subseteq># vars_mset (subst_db i x t)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t >\\<^sub>h\\<^sub>d head s\\<rbrakk>\n    \\<Longrightarrow> subst_db i x t >\\<^sub>t subst_db i x s\n 2. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head s).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst_db i x t >\\<^sub>t subst_db i x s", "have \"head (?\\<rho> t) >\\<^sub>h\\<^sub>d head (?\\<rho> s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. head (subst_db i x t) >\\<^sub>h\\<^sub>d head (subst_db i x s)", "by (smt Set.set_insert gt_hd_def hd_t_gt_hd_s head_subst_db insert_subset wary_raw_db_subst\n            wary_subst_ground_heads)"], ["proof (state)\nthis:\n  head (subst_db i x t) >\\<^sub>h\\<^sub>d head (subst_db i x s)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t >\\<^sub>h\\<^sub>d head s\\<rbrakk>\n    \\<Longrightarrow> subst_db i x t >\\<^sub>t subst_db i x s\n 2. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head s).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst_db i x t >\\<^sub>t subst_db i x s", "thus ?thesis"], ["proof (prove)\nusing this:\n  head (subst_db i x t) >\\<^sub>h\\<^sub>d head (subst_db i x s)\n\ngoal (1 subgoal):\n 1. subst_db i x t >\\<^sub>t subst_db i x s", "by (rule gt_diff[OF vars_\\<rho>s wt_\\<rho>t_eq_\\<rho>s])"], ["proof (state)\nthis:\n  subst_db i x t >\\<^sub>t subst_db i x s\n\ngoal (1 subgoal):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head s).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst_db i x t >\\<^sub>t subst_db i x s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head s).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst_db i x t >\\<^sub>t subst_db i x s", "case _: gt_same"], ["proof (state)\nthis:\n  vars_mset s \\<subseteq># vars_mset t\n  wt t = wt s\n  head t = head s\n  \\<forall>f\\<in>local.ground_heads (head s).\n     extf f (>\\<^sub>t) (args t) (args s)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head s).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst_db i x t >\\<^sub>t subst_db i x s", "note vars_s = this(1) and hd_s_eq_hd_t = this(3) and extf = this(4)"], ["proof (state)\nthis:\n  vars_mset s \\<subseteq># vars_mset t\n  head t = head s\n  \\<forall>f\\<in>local.ground_heads (head s).\n     extf f (>\\<^sub>t) (args t) (args s)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head s).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst_db i x t >\\<^sub>t subst_db i x s", "have vars_\\<rho>s: \"vars_mset (?\\<rho> t) \\<supseteq># vars_mset (?\\<rho> s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars_mset (subst_db i x s) \\<subseteq># vars_mset (subst_db i x t)", "by (simp add: var_mset_subst_db_subseteq vars_s)"], ["proof (state)\nthis:\n  vars_mset (subst_db i x s) \\<subseteq># vars_mset (subst_db i x t)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head s).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst_db i x t >\\<^sub>t subst_db i x s", "have hd_\\<rho>t: \"head (?\\<rho> t) = head (?\\<rho> s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. head (subst_db i x t) = head (subst_db i x s)", "by (simp add: hd_s_eq_hd_t head_subst_db)"], ["proof (state)\nthis:\n  head (subst_db i x t) = head (subst_db i x s)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head s).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst_db i x t >\\<^sub>t subst_db i x s", "{"], ["proof (state)\nthis:\n  head (subst_db i x t) = head (subst_db i x s)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head s).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst_db i x t >\\<^sub>t subst_db i x s", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head s).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst_db i x t >\\<^sub>t subst_db i x s", "assume f_in_grs: \"f \\<in> ground_heads (head (?\\<rho> s))\""], ["proof (state)\nthis:\n  f \\<in> local.ground_heads (head (subst_db i x s))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head s).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst_db i x t >\\<^sub>t subst_db i x s", "let ?\\<rho>a = \"subst_db (if head s = Sym lam then i + 1 else i) x\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head s).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst_db i x t >\\<^sub>t subst_db i x s", "let ?S = \"set (args t) \\<union> set (args s)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head s).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst_db i x t >\\<^sub>t subst_db i x s", "have extf_args_s_t: \"extf f (>\\<^sub>t) (args t) (args s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. extf f (>\\<^sub>t) (args t) (args s)", "using extf f_in_grs hd_s_eq_hd_t head_subst_db wary_raw_db_subst wary_subst_ground_heads"], ["proof (prove)\nusing this:\n  \\<forall>f\\<in>local.ground_heads (head s).\n     extf f (>\\<^sub>t) (args t) (args s)\n  f \\<in> local.ground_heads (head (subst_db i x s))\n  head t = head s\n  head (subst_db ?i ?x ?s) = head (subst (raw_db_subst ?i ?x) ?s)\n  wary_subst (raw_db_subst ?i ?x)\n  wary_subst ?\\<rho> \\<Longrightarrow>\n  local.ground_heads (head (subst ?\\<rho> ?s))\n  \\<subseteq> local.ground_heads (head ?s)\n\ngoal (1 subgoal):\n 1. extf f (>\\<^sub>t) (args t) (args s)", "by (metis (no_types, lifting) insert_subset mk_disjoint_insert)"], ["proof (state)\nthis:\n  extf f (>\\<^sub>t) (args t) (args s)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head s).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst_db i x t >\\<^sub>t subst_db i x s", "have \"extf f (>\\<^sub>t) (map ?\\<rho>a (args t)) (map ?\\<rho>a (args s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. extf f (>\\<^sub>t)\n     (map (subst_db (if head s = Sym lam then i + 1 else i) x) (args t))\n     (map (subst_db (if head s = Sym lam then i + 1 else i) x) (args s))", "proof (rule extf_map[of ?S, OF _ _ _ _ _ _ extf_args_s_t])"], ["proof (state)\ngoal (6 subgoals):\n 1. finite (set (args t) \\<union> set (args s))\n 2. args t \\<in> lists (set (args t) \\<union> set (args s))\n 3. args s \\<in> lists (set (args t) \\<union> set (args s))\n 4. \\<forall>xa\\<in>set (args t) \\<union> set (args s).\n       \\<not> subst_db (if head s = Sym lam then i + 1 else i) x\n               xa >\\<^sub>t\n              subst_db (if head s = Sym lam then i + 1 else i) x xa\n 5. \\<forall>z\\<in>set (args t) \\<union> set (args s).\n       \\<forall>y\\<in>set (args t) \\<union> set (args s).\n          \\<forall>xa\\<in>set (args t) \\<union> set (args s).\n             subst_db (if head s = Sym lam then i + 1 else i) x z >\\<^sub>t\n             subst_db (if head s = Sym lam then i + 1 else i) x\n              y \\<longrightarrow>\n             subst_db (if head s = Sym lam then i + 1 else i) x y >\\<^sub>t\n             subst_db (if head s = Sym lam then i + 1 else i) x\n              xa \\<longrightarrow>\n             subst_db (if head s = Sym lam then i + 1 else i) x z >\\<^sub>t\n             subst_db (if head s = Sym lam then i + 1 else i) x xa\n 6. \\<forall>y\\<in>set (args t) \\<union> set (args s).\n       \\<forall>xa\\<in>set (args t) \\<union> set (args s).\n          y >\\<^sub>t xa \\<longrightarrow>\n          subst_db (if head s = Sym lam then i + 1 else i) x y >\\<^sub>t\n          subst_db (if head s = Sym lam then i + 1 else i) x xa", "show \"\\<forall>x \\<in> ?S. \\<not> ?\\<rho>a x >\\<^sub>t ?\\<rho>a x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>xa\\<in>set (args t) \\<union> set (args s).\n       \\<not> subst_db (if head s = Sym lam then i + 1 else i) x\n               xa >\\<^sub>t\n              subst_db (if head s = Sym lam then i + 1 else i) x xa", "using gt_irrefl"], ["proof (prove)\nusing this:\n  \\<not> ?s >\\<^sub>t ?s\n\ngoal (1 subgoal):\n 1. \\<forall>xa\\<in>set (args t) \\<union> set (args s).\n       \\<not> subst_db (if head s = Sym lam then i + 1 else i) x\n               xa >\\<^sub>t\n              subst_db (if head s = Sym lam then i + 1 else i) x xa", "by blast"], ["proof (state)\nthis:\n  \\<forall>xa\\<in>set (args t) \\<union> set (args s).\n     \\<not> subst_db (if head s = Sym lam then i + 1 else i) x xa >\\<^sub>t\n            subst_db (if head s = Sym lam then i + 1 else i) x xa\n\ngoal (5 subgoals):\n 1. finite (set (args t) \\<union> set (args s))\n 2. args t \\<in> lists (set (args t) \\<union> set (args s))\n 3. args s \\<in> lists (set (args t) \\<union> set (args s))\n 4. \\<forall>z\\<in>set (args t) \\<union> set (args s).\n       \\<forall>y\\<in>set (args t) \\<union> set (args s).\n          \\<forall>xa\\<in>set (args t) \\<union> set (args s).\n             subst_db (if head s = Sym lam then i + 1 else i) x z >\\<^sub>t\n             subst_db (if head s = Sym lam then i + 1 else i) x\n              y \\<longrightarrow>\n             subst_db (if head s = Sym lam then i + 1 else i) x y >\\<^sub>t\n             subst_db (if head s = Sym lam then i + 1 else i) x\n              xa \\<longrightarrow>\n             subst_db (if head s = Sym lam then i + 1 else i) x z >\\<^sub>t\n             subst_db (if head s = Sym lam then i + 1 else i) x xa\n 5. \\<forall>y\\<in>set (args t) \\<union> set (args s).\n       \\<forall>xa\\<in>set (args t) \\<union> set (args s).\n          y >\\<^sub>t xa \\<longrightarrow>\n          subst_db (if head s = Sym lam then i + 1 else i) x y >\\<^sub>t\n          subst_db (if head s = Sym lam then i + 1 else i) x xa", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. finite (set (args t) \\<union> set (args s))\n 2. args t \\<in> lists (set (args t) \\<union> set (args s))\n 3. args s \\<in> lists (set (args t) \\<union> set (args s))\n 4. \\<forall>z\\<in>set (args t) \\<union> set (args s).\n       \\<forall>y\\<in>set (args t) \\<union> set (args s).\n          \\<forall>xa\\<in>set (args t) \\<union> set (args s).\n             subst_db (if head s = Sym lam then i + 1 else i) x z >\\<^sub>t\n             subst_db (if head s = Sym lam then i + 1 else i) x\n              y \\<longrightarrow>\n             subst_db (if head s = Sym lam then i + 1 else i) x y >\\<^sub>t\n             subst_db (if head s = Sym lam then i + 1 else i) x\n              xa \\<longrightarrow>\n             subst_db (if head s = Sym lam then i + 1 else i) x z >\\<^sub>t\n             subst_db (if head s = Sym lam then i + 1 else i) x xa\n 5. \\<forall>y\\<in>set (args t) \\<union> set (args s).\n       \\<forall>xa\\<in>set (args t) \\<union> set (args s).\n          y >\\<^sub>t xa \\<longrightarrow>\n          subst_db (if head s = Sym lam then i + 1 else i) x y >\\<^sub>t\n          subst_db (if head s = Sym lam then i + 1 else i) x xa", "show \"\\<forall>z \\<in> ?S. \\<forall>y \\<in> ?S. \\<forall>x \\<in> ?S. ?\\<rho>a z >\\<^sub>t ?\\<rho>a y \\<longrightarrow> ?\\<rho>a y >\\<^sub>t ?\\<rho>a x \\<longrightarrow> ?\\<rho>a z >\\<^sub>t ?\\<rho>a x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>z\\<in>set (args t) \\<union> set (args s).\n       \\<forall>y\\<in>set (args t) \\<union> set (args s).\n          \\<forall>xa\\<in>set (args t) \\<union> set (args s).\n             subst_db (if head s = Sym lam then i + 1 else i) x z >\\<^sub>t\n             subst_db (if head s = Sym lam then i + 1 else i) x\n              y \\<longrightarrow>\n             subst_db (if head s = Sym lam then i + 1 else i) x y >\\<^sub>t\n             subst_db (if head s = Sym lam then i + 1 else i) x\n              xa \\<longrightarrow>\n             subst_db (if head s = Sym lam then i + 1 else i) x z >\\<^sub>t\n             subst_db (if head s = Sym lam then i + 1 else i) x xa", "using gt_trans"], ["proof (prove)\nusing this:\n  \\<lbrakk>?u >\\<^sub>t ?t; ?t >\\<^sub>t ?s\\<rbrakk>\n  \\<Longrightarrow> ?u >\\<^sub>t ?s\n\ngoal (1 subgoal):\n 1. \\<forall>z\\<in>set (args t) \\<union> set (args s).\n       \\<forall>y\\<in>set (args t) \\<union> set (args s).\n          \\<forall>xa\\<in>set (args t) \\<union> set (args s).\n             subst_db (if head s = Sym lam then i + 1 else i) x z >\\<^sub>t\n             subst_db (if head s = Sym lam then i + 1 else i) x\n              y \\<longrightarrow>\n             subst_db (if head s = Sym lam then i + 1 else i) x y >\\<^sub>t\n             subst_db (if head s = Sym lam then i + 1 else i) x\n              xa \\<longrightarrow>\n             subst_db (if head s = Sym lam then i + 1 else i) x z >\\<^sub>t\n             subst_db (if head s = Sym lam then i + 1 else i) x xa", "by blast"], ["proof (state)\nthis:\n  \\<forall>z\\<in>set (args t) \\<union> set (args s).\n     \\<forall>y\\<in>set (args t) \\<union> set (args s).\n        \\<forall>xa\\<in>set (args t) \\<union> set (args s).\n           subst_db (if head s = Sym lam then i + 1 else i) x z >\\<^sub>t\n           subst_db (if head s = Sym lam then i + 1 else i) x\n            y \\<longrightarrow>\n           subst_db (if head s = Sym lam then i + 1 else i) x y >\\<^sub>t\n           subst_db (if head s = Sym lam then i + 1 else i) x\n            xa \\<longrightarrow>\n           subst_db (if head s = Sym lam then i + 1 else i) x z >\\<^sub>t\n           subst_db (if head s = Sym lam then i + 1 else i) x xa\n\ngoal (4 subgoals):\n 1. finite (set (args t) \\<union> set (args s))\n 2. args t \\<in> lists (set (args t) \\<union> set (args s))\n 3. args s \\<in> lists (set (args t) \\<union> set (args s))\n 4. \\<forall>y\\<in>set (args t) \\<union> set (args s).\n       \\<forall>xa\\<in>set (args t) \\<union> set (args s).\n          y >\\<^sub>t xa \\<longrightarrow>\n          subst_db (if head s = Sym lam then i + 1 else i) x y >\\<^sub>t\n          subst_db (if head s = Sym lam then i + 1 else i) x xa", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. finite (set (args t) \\<union> set (args s))\n 2. args t \\<in> lists (set (args t) \\<union> set (args s))\n 3. args s \\<in> lists (set (args t) \\<union> set (args s))\n 4. \\<forall>y\\<in>set (args t) \\<union> set (args s).\n       \\<forall>xa\\<in>set (args t) \\<union> set (args s).\n          y >\\<^sub>t xa \\<longrightarrow>\n          subst_db (if head s = Sym lam then i + 1 else i) x y >\\<^sub>t\n          subst_db (if head s = Sym lam then i + 1 else i) x xa", "have sz_a: \"\\<forall>ta \\<in> ?S. \\<forall>sa \\<in> ?S. {#size ta, size sa#} < {#size t, size s#}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>taa\\<in>set (args t) \\<union> set (args s).\n       \\<forall>saa\\<in>set (args t) \\<union> set (args s).\n          {#size taa, size saa#} < {#size t, size s#}", "by (fastforce intro: Max_lt_imp_lt_mset dest: size_in_args)"], ["proof (state)\nthis:\n  \\<forall>taa\\<in>set (args t) \\<union> set (args s).\n     \\<forall>saa\\<in>set (args t) \\<union> set (args s).\n        {#size taa, size saa#} < {#size t, size s#}\n\ngoal (4 subgoals):\n 1. finite (set (args t) \\<union> set (args s))\n 2. args t \\<in> lists (set (args t) \\<union> set (args s))\n 3. args s \\<in> lists (set (args t) \\<union> set (args s))\n 4. \\<forall>y\\<in>set (args t) \\<union> set (args s).\n       \\<forall>xa\\<in>set (args t) \\<union> set (args s).\n          y >\\<^sub>t xa \\<longrightarrow>\n          subst_db (if head s = Sym lam then i + 1 else i) x y >\\<^sub>t\n          subst_db (if head s = Sym lam then i + 1 else i) x xa", "show \"\\<forall>y \\<in> ?S. \\<forall>x \\<in> ?S. y >\\<^sub>t x \\<longrightarrow> ?\\<rho>a y >\\<^sub>t ?\\<rho>a x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>set (args t) \\<union> set (args s).\n       \\<forall>xa\\<in>set (args t) \\<union> set (args s).\n          y >\\<^sub>t xa \\<longrightarrow>\n          subst_db (if head s = Sym lam then i + 1 else i) x y >\\<^sub>t\n          subst_db (if head s = Sym lam then i + 1 else i) x xa", "using ih sz_a"], ["proof (prove)\nusing this:\n  \\<lbrakk>{#size ?ta6, size ?sa6#} < {#size t, size s#};\n   ?ta6 >\\<^sub>t ?sa6\\<rbrakk>\n  \\<Longrightarrow> subst_db ?i6 x ?ta6 >\\<^sub>t subst_db ?i6 x ?sa6\n  \\<forall>taa\\<in>set (args t) \\<union> set (args s).\n     \\<forall>saa\\<in>set (args t) \\<union> set (args s).\n        {#size taa, size saa#} < {#size t, size s#}\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>set (args t) \\<union> set (args s).\n       \\<forall>xa\\<in>set (args t) \\<union> set (args s).\n          y >\\<^sub>t xa \\<longrightarrow>\n          subst_db (if head s = Sym lam then i + 1 else i) x y >\\<^sub>t\n          subst_db (if head s = Sym lam then i + 1 else i) x xa", "by blast"], ["proof (state)\nthis:\n  \\<forall>y\\<in>set (args t) \\<union> set (args s).\n     \\<forall>xa\\<in>set (args t) \\<union> set (args s).\n        y >\\<^sub>t xa \\<longrightarrow>\n        subst_db (if head s = Sym lam then i + 1 else i) x y >\\<^sub>t\n        subst_db (if head s = Sym lam then i + 1 else i) x xa\n\ngoal (3 subgoals):\n 1. finite (set (args t) \\<union> set (args s))\n 2. args t \\<in> lists (set (args t) \\<union> set (args s))\n 3. args s \\<in> lists (set (args t) \\<union> set (args s))", "qed auto"], ["proof (state)\nthis:\n  extf f (>\\<^sub>t)\n   (map (subst_db (if head s = Sym lam then i + 1 else i) x) (args t))\n   (map (subst_db (if head s = Sym lam then i + 1 else i) x) (args s))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head s).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst_db i x t >\\<^sub>t subst_db i x s", "hence \"extf f (>\\<^sub>t) (args (?\\<rho> t)) (args (?\\<rho> s))\""], ["proof (prove)\nusing this:\n  extf f (>\\<^sub>t)\n   (map (subst_db (if head s = Sym lam then i + 1 else i) x) (args t))\n   (map (subst_db (if head s = Sym lam then i + 1 else i) x) (args s))\n\ngoal (1 subgoal):\n 1. extf f (>\\<^sub>t) (args (subst_db i x t)) (args (subst_db i x s))", "by (simp add: args_subst_db hd_s_eq_hd_t)"], ["proof (state)\nthis:\n  extf f (>\\<^sub>t) (args (subst_db i x t)) (args (subst_db i x s))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head s).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst_db i x t >\\<^sub>t subst_db i x s", "}"], ["proof (state)\nthis:\n  ?f8 \\<in> local.ground_heads (head (subst_db i x s)) \\<Longrightarrow>\n  extf ?f8 (>\\<^sub>t) (args (subst_db i x t)) (args (subst_db i x s))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head s).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst_db i x t >\\<^sub>t subst_db i x s", "hence \"\\<forall>f \\<in> ground_heads (head (?\\<rho> s)). extf f (>\\<^sub>t) (args (?\\<rho> t)) (args (?\\<rho> s))\""], ["proof (prove)\nusing this:\n  ?f8 \\<in> local.ground_heads (head (subst_db i x s)) \\<Longrightarrow>\n  extf ?f8 (>\\<^sub>t) (args (subst_db i x t)) (args (subst_db i x s))\n\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>local.ground_heads (head (subst_db i x s)).\n       extf f (>\\<^sub>t) (args (subst_db i x t)) (args (subst_db i x s))", "by blast"], ["proof (state)\nthis:\n  \\<forall>f\\<in>local.ground_heads (head (subst_db i x s)).\n     extf f (>\\<^sub>t) (args (subst_db i x t)) (args (subst_db i x s))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head s).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst_db i x t >\\<^sub>t subst_db i x s", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>f\\<in>local.ground_heads (head (subst_db i x s)).\n     extf f (>\\<^sub>t) (args (subst_db i x t)) (args (subst_db i x s))\n\ngoal (1 subgoal):\n 1. subst_db i x t >\\<^sub>t subst_db i x s", "by (rule gt_same[OF vars_\\<rho>s wt_\\<rho>t_eq_\\<rho>s hd_\\<rho>t])"], ["proof (state)\nthis:\n  subst_db i x t >\\<^sub>t subst_db i x s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  subst_db i x t >\\<^sub>t subst_db i x s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  subst_db i x t >\\<^sub>t subst_db i x s\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}