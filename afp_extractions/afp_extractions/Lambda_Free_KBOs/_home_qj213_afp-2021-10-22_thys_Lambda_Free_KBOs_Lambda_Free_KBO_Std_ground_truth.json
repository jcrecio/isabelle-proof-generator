{"file_name": "/home/qj213/afp-2021-10-22/thys/Lambda_Free_KBOs/Lambda_Free_KBO_Std.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Lambda_Free_KBOs", "problem_names": ["lemma wt_Hd_Sym: \"wt (Hd (Sym f)) = wt_sym f + the_enat (\\<delta> * arity_sym f)\"", "lemma exists_wt_sym: \"\\<exists>f \\<in> ground_heads \\<zeta>. wt (Hd \\<zeta>) = wt_sym f + the_enat (\\<delta> * arity_sym f)\"", "lemma wt_le_wt_sym: \"f \\<in> ground_heads \\<zeta> \\<Longrightarrow> wt (Hd \\<zeta>) \\<le> wt_sym f + the_enat (\\<delta> * arity_sym f)\"", "lemma enat_the_enat_\\<delta>_times_arity_sym[simp]: \"enat (the_enat (\\<delta> * arity_sym f)) = \\<delta> * arity_sym f\"", "lemma wt_arg_le: \"wt (arg s) \\<le> wt s\"", "lemma wt_ge_\\<epsilon>: \"wt s \\<ge> \\<epsilon>\"", "lemma wt_ge_\\<delta>: \"wt s \\<ge> \\<delta>\"", "lemma wt_gt_\\<delta>_if_superunary: \"arity_hd (head s) > 1 \\<Longrightarrow> wt s > \\<delta>\"", "lemma wt_App_\\<delta>: \"wt (App s t) = wt t \\<Longrightarrow> wt s = \\<delta>\"", "lemma wt_App_ge_fun: \"wt (App s t) \\<ge> wt s\"", "lemma wt_hd_le: \"wt (Hd (head s)) \\<le> wt s\"", "lemma wt_\\<delta>_imp_\\<delta>_eq_\\<epsilon>: \"wt s = \\<delta> \\<Longrightarrow> \\<delta> = \\<epsilon>\"", "lemma wt_ge_arity_head_if_\\<delta>_gt_0:\n  assumes \\<delta>_gt_0: \"\\<delta> > 0\"\n  shows \"wt s \\<ge> arity_hd (head s)\"", "lemma wt_ge_num_args_if_\\<delta>_eq_0:\n  assumes \\<delta>_eq_0: \"\\<delta> = 0\"\n  shows \"wt s \\<ge> num_args s\"", "lemma wt_ge_num_args: \"wary s \\<Longrightarrow> wt s \\<ge> num_args s\"", "lemma gt_iff_wt_unary_diff_same: \"t >\\<^sub>t s \\<longleftrightarrow> gt_wt t s \\<or> gt_unary t s \\<or> gt_diff t s \\<or> gt_same t s\"", "lemma gt_imp_vars_mset: \"t >\\<^sub>t s \\<Longrightarrow> vars_mset t \\<supseteq># vars_mset s\"", "lemma gt_imp_vars: \"t >\\<^sub>t s \\<Longrightarrow> vars t \\<supseteq> vars s\"", "theorem gt_irrefl: \"wary s \\<Longrightarrow> \\<not> s >\\<^sub>t s\"", "lemma gt_imp_wt_ge: \"t >\\<^sub>t s \\<Longrightarrow> wt t \\<ge> wt s\"", "lemma not_extf_gt_nil_singleton_if_\\<delta>_eq_\\<epsilon>:\n  assumes wary_s: \"wary s\" and \\<delta>_eq_\\<epsilon>: \"\\<delta> = \\<epsilon>\"\n  shows \"\\<not> extf f (>\\<^sub>t) [] [s]\"", "lemma gt_sub_arg: \"wary (App s t) \\<Longrightarrow> App s t >\\<^sub>t t\"", "lemma gt_arg: \"wary s \\<Longrightarrow> is_App s \\<Longrightarrow> s >\\<^sub>t arg s\"", "theorem gt_trans: \"wary u \\<Longrightarrow> wary t \\<Longrightarrow> wary s \\<Longrightarrow> u >\\<^sub>t t \\<Longrightarrow> t >\\<^sub>t s \\<Longrightarrow> u >\\<^sub>t s\"", "lemma gt_antisym: \"wary s \\<Longrightarrow> wary t \\<Longrightarrow> t >\\<^sub>t s \\<Longrightarrow> \\<not> s >\\<^sub>t t\"", "lemma gt_sub_fun: \"App s t >\\<^sub>t s\"", "theorem gt_proper_sub: \"wary t \\<Longrightarrow> proper_sub s t \\<Longrightarrow> t >\\<^sub>t s\"", "theorem gt_compat_fun:\n  assumes\n    wary_t: \"wary t\" and\n    t'_gt_t: \"t' >\\<^sub>t t\"\n  shows \"App s t' >\\<^sub>t App s t\"", "theorem gt_compat_arg:\n  assumes wary_s't: \"wary (App s' t)\" and s'_gt_s: \"s' >\\<^sub>t s\"\n  shows \"App s' t >\\<^sub>t App s t\"", "lemma\n  extra_wt_Var[simp]: \"extra_wt \\<rho> (Hd (Var x)) = wt (\\<rho> x) - wt (Hd (Var x))\" and\n  extra_wt_Sym[simp]: \"extra_wt \\<rho> (Hd (Sym f)) = 0\" and\n  extra_wt_App[simp]: \"extra_wt \\<rho> (App s t) = extra_wt \\<rho> s + extra_wt \\<rho> t\"", "lemma extra_wt_subseteq:\n  assumes vars_s: \"vars_mset t \\<supseteq># vars_mset s\"\n  shows \"extra_wt \\<rho> t \\<ge> extra_wt \\<rho> s\"", "lemma wt_subst:\n  assumes wary_\\<rho>: \"wary_subst \\<rho>\" and wary_s: \"wary s\"\n  shows \"wt (subst \\<rho> s) = wt s + extra_wt \\<rho> s\"", "theorem gt_subst:\n  assumes wary_\\<rho>: \"wary_subst \\<rho>\"\n  shows \"wary t \\<Longrightarrow> wary s \\<Longrightarrow> t >\\<^sub>t s \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s\"", "theorem gt_total_ground:\n  assumes extf_total: \"\\<And>f. ext_total (extf f)\"\n  shows \"ground t \\<Longrightarrow> ground s \\<Longrightarrow> t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s\"", "lemma ground_gt_unary:\n  assumes gr_t: \"ground t\"\n  shows \"\\<not> gt_unary t s\"", "theorem gt_wf: \"wfP (\\<lambda>s t. t >\\<^sub>t\\<^sub>w s)\""], "translations": [["", "lemma wt_Hd_Sym: \"wt (Hd (Sym f)) = wt_sym f + the_enat (\\<delta> * arity_sym f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wt (Hd (Sym f)) = wt_sym f + the_enat (enat \\<delta> * arity_sym f)", "by simp"], ["", "lemma exists_wt_sym: \"\\<exists>f \\<in> ground_heads \\<zeta>. wt (Hd \\<zeta>) = wt_sym f + the_enat (\\<delta> * arity_sym f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>f\\<in>local.ground_heads \\<zeta>.\n       wt (Hd \\<zeta>) = wt_sym f + the_enat (enat \\<delta> * arity_sym f)", "by (auto intro: Least_in_nonempty_set_imp_ex)"], ["", "lemma wt_le_wt_sym: \"f \\<in> ground_heads \\<zeta> \\<Longrightarrow> wt (Hd \\<zeta>) \\<le> wt_sym f + the_enat (\\<delta> * arity_sym f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f \\<in> local.ground_heads \\<zeta> \\<Longrightarrow>\n    wt (Hd \\<zeta>) \\<le> wt_sym f + the_enat (enat \\<delta> * arity_sym f)", "using not_le_imp_less not_less_Least"], ["proof (prove)\nusing this:\n  \\<not> ?y \\<le> ?x \\<Longrightarrow> ?x < ?y\n  ?k < (LEAST x. ?P x) \\<Longrightarrow> \\<not> ?P ?k\n\ngoal (1 subgoal):\n 1. f \\<in> local.ground_heads \\<zeta> \\<Longrightarrow>\n    wt (Hd \\<zeta>) \\<le> wt_sym f + the_enat (enat \\<delta> * arity_sym f)", "by fastforce"], ["", "lemma enat_the_enat_\\<delta>_times_arity_sym[simp]: \"enat (the_enat (\\<delta> * arity_sym f)) = \\<delta> * arity_sym f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. enat (the_enat (enat \\<delta> * arity_sym f)) =\n    enat \\<delta> * arity_sym f", "using arity_sym_ne_infinity_if_\\<delta>_gt_0 imult_is_infinity zero_enat_def"], ["proof (prove)\nusing this:\n  0 < \\<delta> \\<Longrightarrow> arity_sym ?f \\<noteq> \\<infinity>\n  (?a * ?b = \\<infinity>) =\n  (?a = \\<infinity> \\<and> ?b \\<noteq> 0 \\<or>\n   ?b = \\<infinity> \\<and> ?a \\<noteq> 0)\n  0 = enat 0\n\ngoal (1 subgoal):\n 1. enat (the_enat (enat \\<delta> * arity_sym f)) =\n    enat \\<delta> * arity_sym f", "by fastforce"], ["", "lemma wt_arg_le: \"wt (arg s) \\<le> wt s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wt (arg s) \\<le> wt s", "by (cases s) auto"], ["", "lemma wt_ge_\\<epsilon>: \"wt s \\<ge> \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<epsilon> \\<le> wt s", "by (induct s, metis exists_wt_sym of_nat_eq_enat le_diff_conv of_nat_id wt_sym_ge,\n    simp add: add_increasing)"], ["", "lemma wt_ge_\\<delta>: \"wt s \\<ge> \\<delta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<delta> \\<le> wt s", "by (meson \\<delta>_le_\\<epsilon> order.trans enat_ord_simps(1) wt_ge_\\<epsilon>)"], ["", "lemma wt_gt_\\<delta>_if_superunary: \"arity_hd (head s) > 1 \\<Longrightarrow> wt s > \\<delta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < arity_hd (head s) \\<Longrightarrow> \\<delta> < wt s", "proof (induct s)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       1 < arity_hd (head (Hd x)) \\<Longrightarrow> \\<delta> < wt (Hd x)\n 2. \\<And>s1 s2.\n       \\<lbrakk>1 < arity_hd (head s1) \\<Longrightarrow> \\<delta> < wt s1;\n        1 < arity_hd (head s2) \\<Longrightarrow> \\<delta> < wt s2;\n        1 < arity_hd (head (App s1 s2))\\<rbrakk>\n       \\<Longrightarrow> \\<delta> < wt (App s1 s2)", "case \\<zeta>: (Hd \\<zeta>)"], ["proof (state)\nthis:\n  1 < arity_hd (head (Hd \\<zeta>))\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       1 < arity_hd (head (Hd x)) \\<Longrightarrow> \\<delta> < wt (Hd x)\n 2. \\<And>s1 s2.\n       \\<lbrakk>1 < arity_hd (head s1) \\<Longrightarrow> \\<delta> < wt s1;\n        1 < arity_hd (head s2) \\<Longrightarrow> \\<delta> < wt s2;\n        1 < arity_hd (head (App s1 s2))\\<rbrakk>\n       \\<Longrightarrow> \\<delta> < wt (App s1 s2)", "obtain g where\n    g_in_grs: \"g \\<in> ground_heads \\<zeta>\" and\n    wt_\\<zeta>: \"wt (Hd \\<zeta>) = wt_sym g + the_enat (\\<delta> * arity_sym g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> local.ground_heads \\<zeta>;\n         wt (Hd \\<zeta>) =\n         wt_sym g + the_enat (enat \\<delta> * arity_sym g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using exists_wt_sym"], ["proof (prove)\nusing this:\n  \\<exists>f\\<in>local.ground_heads ?\\<zeta>.\n     wt (Hd ?\\<zeta>) = wt_sym f + the_enat (enat \\<delta> * arity_sym f)\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> local.ground_heads \\<zeta>;\n         wt (Hd \\<zeta>) =\n         wt_sym g + the_enat (enat \\<delta> * arity_sym g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  g \\<in> local.ground_heads \\<zeta>\n  wt (Hd \\<zeta>) = wt_sym g + the_enat (enat \\<delta> * arity_sym g)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       1 < arity_hd (head (Hd x)) \\<Longrightarrow> \\<delta> < wt (Hd x)\n 2. \\<And>s1 s2.\n       \\<lbrakk>1 < arity_hd (head s1) \\<Longrightarrow> \\<delta> < wt s1;\n        1 < arity_hd (head s2) \\<Longrightarrow> \\<delta> < wt s2;\n        1 < arity_hd (head (App s1 s2))\\<rbrakk>\n       \\<Longrightarrow> \\<delta> < wt (App s1 s2)", "have \"arity_hd \\<zeta> > 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < arity_hd \\<zeta>", "using \\<zeta>"], ["proof (prove)\nusing this:\n  1 < arity_hd (head (Hd \\<zeta>))\n\ngoal (1 subgoal):\n 1. 1 < arity_hd \\<zeta>", "by auto"], ["proof (state)\nthis:\n  1 < arity_hd \\<zeta>\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       1 < arity_hd (head (Hd x)) \\<Longrightarrow> \\<delta> < wt (Hd x)\n 2. \\<And>s1 s2.\n       \\<lbrakk>1 < arity_hd (head s1) \\<Longrightarrow> \\<delta> < wt s1;\n        1 < arity_hd (head s2) \\<Longrightarrow> \\<delta> < wt s2;\n        1 < arity_hd (head (App s1 s2))\\<rbrakk>\n       \\<Longrightarrow> \\<delta> < wt (App s1 s2)", "hence ary_g: \"arity_sym g > 1\""], ["proof (prove)\nusing this:\n  1 < arity_hd \\<zeta>\n\ngoal (1 subgoal):\n 1. 1 < arity_sym g", "using ground_heads_arity[OF g_in_grs]"], ["proof (prove)\nusing this:\n  1 < arity_hd \\<zeta>\n  arity_hd \\<zeta> \\<le> arity_sym g\n\ngoal (1 subgoal):\n 1. 1 < arity_sym g", "by simp"], ["proof (state)\nthis:\n  1 < arity_sym g\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       1 < arity_hd (head (Hd x)) \\<Longrightarrow> \\<delta> < wt (Hd x)\n 2. \\<And>s1 s2.\n       \\<lbrakk>1 < arity_hd (head s1) \\<Longrightarrow> \\<delta> < wt s1;\n        1 < arity_hd (head s2) \\<Longrightarrow> \\<delta> < wt s2;\n        1 < arity_hd (head (App s1 s2))\\<rbrakk>\n       \\<Longrightarrow> \\<delta> < wt (App s1 s2)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<delta> < wt (Hd \\<zeta>)", "proof (cases \"\\<delta> = 0\")"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<delta> = 0 \\<Longrightarrow> \\<delta> < wt (Hd \\<zeta>)\n 2. \\<delta> \\<noteq> 0 \\<Longrightarrow> \\<delta> < wt (Hd \\<zeta>)", "case True"], ["proof (state)\nthis:\n  \\<delta> = 0\n\ngoal (2 subgoals):\n 1. \\<delta> = 0 \\<Longrightarrow> \\<delta> < wt (Hd \\<zeta>)\n 2. \\<delta> \\<noteq> 0 \\<Longrightarrow> \\<delta> < wt (Hd \\<zeta>)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<delta> = 0\n\ngoal (1 subgoal):\n 1. \\<delta> < wt (Hd \\<zeta>)", "by (metis \\<epsilon>_gt_0 gr0I leD wt_ge_\\<epsilon>)"], ["proof (state)\nthis:\n  \\<delta> < wt (Hd \\<zeta>)\n\ngoal (1 subgoal):\n 1. \\<delta> \\<noteq> 0 \\<Longrightarrow> \\<delta> < wt (Hd \\<zeta>)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<delta> \\<noteq> 0 \\<Longrightarrow> \\<delta> < wt (Hd \\<zeta>)", "case \\<delta>_ne_0: False"], ["proof (state)\nthis:\n  \\<delta> \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<delta> \\<noteq> 0 \\<Longrightarrow> \\<delta> < wt (Hd \\<zeta>)", "hence ary_g_ninf: \"arity_sym g \\<noteq> \\<infinity>\""], ["proof (prove)\nusing this:\n  \\<delta> \\<noteq> 0\n\ngoal (1 subgoal):\n 1. arity_sym g \\<noteq> \\<infinity>", "using arity_sym_ne_infinity_if_\\<delta>_gt_0"], ["proof (prove)\nusing this:\n  \\<delta> \\<noteq> 0\n  0 < \\<delta> \\<Longrightarrow> arity_sym ?f \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. arity_sym g \\<noteq> \\<infinity>", "by blast"], ["proof (state)\nthis:\n  arity_sym g \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<delta> \\<noteq> 0 \\<Longrightarrow> \\<delta> < wt (Hd \\<zeta>)", "hence \"\\<delta> < the_enat (enat \\<delta> * arity_sym g)\""], ["proof (prove)\nusing this:\n  arity_sym g \\<noteq> \\<infinity>\n\ngoal (1 subgoal):\n 1. \\<delta> < the_enat (enat \\<delta> * arity_sym g)", "using \\<delta>_ne_0 ary_g"], ["proof (prove)\nusing this:\n  arity_sym g \\<noteq> \\<infinity>\n  \\<delta> \\<noteq> 0\n  1 < arity_sym g\n\ngoal (1 subgoal):\n 1. \\<delta> < the_enat (enat \\<delta> * arity_sym g)", "by (cases \"arity_sym g\") (auto simp: one_enat_def)"], ["proof (state)\nthis:\n  \\<delta> < the_enat (enat \\<delta> * arity_sym g)\n\ngoal (1 subgoal):\n 1. \\<delta> \\<noteq> 0 \\<Longrightarrow> \\<delta> < wt (Hd \\<zeta>)", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<delta> < the_enat (enat \\<delta> * arity_sym g)\n\ngoal (1 subgoal):\n 1. \\<delta> < wt (Hd \\<zeta>)", "unfolding wt_\\<zeta>"], ["proof (prove)\nusing this:\n  \\<delta> < the_enat (enat \\<delta> * arity_sym g)\n\ngoal (1 subgoal):\n 1. \\<delta> < wt_sym g + the_enat (enat \\<delta> * arity_sym g)", "by simp"], ["proof (state)\nthis:\n  \\<delta> < wt (Hd \\<zeta>)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<delta> < wt (Hd \\<zeta>)\n\ngoal (1 subgoal):\n 1. \\<And>s1 s2.\n       \\<lbrakk>1 < arity_hd (head s1) \\<Longrightarrow> \\<delta> < wt s1;\n        1 < arity_hd (head s2) \\<Longrightarrow> \\<delta> < wt s2;\n        1 < arity_hd (head (App s1 s2))\\<rbrakk>\n       \\<Longrightarrow> \\<delta> < wt (App s1 s2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s1 s2.\n       \\<lbrakk>1 < arity_hd (head s1) \\<Longrightarrow> \\<delta> < wt s1;\n        1 < arity_hd (head s2) \\<Longrightarrow> \\<delta> < wt s2;\n        1 < arity_hd (head (App s1 s2))\\<rbrakk>\n       \\<Longrightarrow> \\<delta> < wt (App s1 s2)", "case (App s t)"], ["proof (state)\nthis:\n  1 < arity_hd (head s) \\<Longrightarrow> \\<delta> < wt s\n  1 < arity_hd (head t) \\<Longrightarrow> \\<delta> < wt t\n  1 < arity_hd (head (App s t))\n\ngoal (1 subgoal):\n 1. \\<And>s1 s2.\n       \\<lbrakk>1 < arity_hd (head s1) \\<Longrightarrow> \\<delta> < wt s1;\n        1 < arity_hd (head s2) \\<Longrightarrow> \\<delta> < wt s2;\n        1 < arity_hd (head (App s1 s2))\\<rbrakk>\n       \\<Longrightarrow> \\<delta> < wt (App s1 s2)", "thus ?case"], ["proof (prove)\nusing this:\n  1 < arity_hd (head s) \\<Longrightarrow> \\<delta> < wt s\n  1 < arity_hd (head t) \\<Longrightarrow> \\<delta> < wt t\n  1 < arity_hd (head (App s t))\n\ngoal (1 subgoal):\n 1. \\<delta> < wt (App s t)", "using wt_ge_\\<delta>[of t]"], ["proof (prove)\nusing this:\n  1 < arity_hd (head s) \\<Longrightarrow> \\<delta> < wt s\n  1 < arity_hd (head t) \\<Longrightarrow> \\<delta> < wt t\n  1 < arity_hd (head (App s t))\n  \\<delta> \\<le> wt t\n\ngoal (1 subgoal):\n 1. \\<delta> < wt (App s t)", "by force"], ["proof (state)\nthis:\n  \\<delta> < wt (App s t)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wt_App_\\<delta>: \"wt (App s t) = wt t \\<Longrightarrow> wt s = \\<delta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wt (App s t) = wt t \\<Longrightarrow> wt s = \\<delta>", "by (simp add: order.antisym wt_ge_\\<delta>)"], ["", "lemma wt_App_ge_fun: \"wt (App s t) \\<ge> wt s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wt s \\<le> wt (App s t)", "by (metis diff_le_mono2 wt_ge_\\<delta> le_diff_conv wt.simps(2))"], ["", "lemma wt_hd_le: \"wt (Hd (head s)) \\<le> wt s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wt (Hd (head s)) \\<le> wt s", "by (induct s, simp) (metis head_App leD le_less_trans not_le_imp_less wt_App_ge_fun)"], ["", "lemma wt_\\<delta>_imp_\\<delta>_eq_\\<epsilon>: \"wt s = \\<delta> \\<Longrightarrow> \\<delta> = \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wt s = \\<delta> \\<Longrightarrow> \\<delta> = \\<epsilon>", "by (metis \\<delta>_le_\\<epsilon> le_antisym wt_ge_\\<epsilon>)"], ["", "lemma wt_ge_arity_head_if_\\<delta>_gt_0:\n  assumes \\<delta>_gt_0: \"\\<delta> > 0\"\n  shows \"wt s \\<ge> arity_hd (head s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arity_hd (head s) \\<le> enat (wt s)", "proof (induct s)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x. arity_hd (head (Hd x)) \\<le> enat (wt (Hd x))\n 2. \\<And>s1 s2.\n       \\<lbrakk>arity_hd (head s1) \\<le> enat (wt s1);\n        arity_hd (head s2) \\<le> enat (wt s2)\\<rbrakk>\n       \\<Longrightarrow> arity_hd (head (App s1 s2))\n                         \\<le> enat (wt (App s1 s2))", "case (Hd \\<zeta>)"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>x. arity_hd (head (Hd x)) \\<le> enat (wt (Hd x))\n 2. \\<And>s1 s2.\n       \\<lbrakk>arity_hd (head s1) \\<le> enat (wt s1);\n        arity_hd (head s2) \\<le> enat (wt s2)\\<rbrakk>\n       \\<Longrightarrow> arity_hd (head (App s1 s2))\n                         \\<le> enat (wt (App s1 s2))", "obtain f where\n    f_in_\\<zeta>: \"f \\<in> ground_heads \\<zeta>\" and\n    wt_\\<zeta>: \"wt (Hd \\<zeta>) = wt_sym f + the_enat (\\<delta> * arity_sym f)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>f \\<in> local.ground_heads \\<zeta>;\n         wt (Hd \\<zeta>) =\n         wt_sym f + the_enat (enat \\<delta> * arity_sym f)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using exists_wt_sym"], ["proof (prove)\nusing this:\n  \\<exists>f\\<in>local.ground_heads ?\\<zeta>.\n     wt (Hd ?\\<zeta>) = wt_sym f + the_enat (enat \\<delta> * arity_sym f)\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>f \\<in> local.ground_heads \\<zeta>;\n         wt (Hd \\<zeta>) =\n         wt_sym f + the_enat (enat \\<delta> * arity_sym f)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  f \\<in> local.ground_heads \\<zeta>\n  wt (Hd \\<zeta>) = wt_sym f + the_enat (enat \\<delta> * arity_sym f)\n\ngoal (2 subgoals):\n 1. \\<And>x. arity_hd (head (Hd x)) \\<le> enat (wt (Hd x))\n 2. \\<And>s1 s2.\n       \\<lbrakk>arity_hd (head s1) \\<le> enat (wt s1);\n        arity_hd (head s2) \\<le> enat (wt s2)\\<rbrakk>\n       \\<Longrightarrow> arity_hd (head (App s1 s2))\n                         \\<le> enat (wt (App s1 s2))", "have \"arity_sym f \\<ge> arity_hd \\<zeta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arity_hd \\<zeta> \\<le> arity_sym f", "by (rule ground_heads_arity[OF f_in_\\<zeta>])"], ["proof (state)\nthis:\n  arity_hd \\<zeta> \\<le> arity_sym f\n\ngoal (2 subgoals):\n 1. \\<And>x. arity_hd (head (Hd x)) \\<le> enat (wt (Hd x))\n 2. \\<And>s1 s2.\n       \\<lbrakk>arity_hd (head s1) \\<le> enat (wt s1);\n        arity_hd (head s2) \\<le> enat (wt s2)\\<rbrakk>\n       \\<Longrightarrow> arity_hd (head (App s1 s2))\n                         \\<le> enat (wt (App s1 s2))", "hence \"the_enat (\\<delta> * arity_sym f) \\<ge> arity_hd \\<zeta>\""], ["proof (prove)\nusing this:\n  arity_hd \\<zeta> \\<le> arity_sym f\n\ngoal (1 subgoal):\n 1. arity_hd \\<zeta> \\<le> enat (the_enat (enat \\<delta> * arity_sym f))", "using \\<delta>_gt_0"], ["proof (prove)\nusing this:\n  arity_hd \\<zeta> \\<le> arity_sym f\n  0 < \\<delta>\n\ngoal (1 subgoal):\n 1. arity_hd \\<zeta> \\<le> enat (the_enat (enat \\<delta> * arity_sym f))", "by (metis One_nat_def Suc_ile_eq dual_order.trans enat_ord_simps(2)\n      enat_the_enat_\\<delta>_times_arity_sym i0_lb mult.commute mult.right_neutral mult_left_mono\n      one_enat_def)"], ["proof (state)\nthis:\n  arity_hd \\<zeta> \\<le> enat (the_enat (enat \\<delta> * arity_sym f))\n\ngoal (2 subgoals):\n 1. \\<And>x. arity_hd (head (Hd x)) \\<le> enat (wt (Hd x))\n 2. \\<And>s1 s2.\n       \\<lbrakk>arity_hd (head s1) \\<le> enat (wt s1);\n        arity_hd (head s2) \\<le> enat (wt s2)\\<rbrakk>\n       \\<Longrightarrow> arity_hd (head (App s1 s2))\n                         \\<le> enat (wt (App s1 s2))", "thus ?case"], ["proof (prove)\nusing this:\n  arity_hd \\<zeta> \\<le> enat (the_enat (enat \\<delta> * arity_sym f))\n\ngoal (1 subgoal):\n 1. arity_hd (head (Hd \\<zeta>)) \\<le> enat (wt (Hd \\<zeta>))", "unfolding wt_\\<zeta>"], ["proof (prove)\nusing this:\n  arity_hd \\<zeta> \\<le> enat (the_enat (enat \\<delta> * arity_sym f))\n\ngoal (1 subgoal):\n 1. arity_hd (head (Hd \\<zeta>))\n    \\<le> enat (wt_sym f + the_enat (enat \\<delta> * arity_sym f))", "by (metis add.left_neutral add_mono le_iff_add plus_enat_simps(1) tm.sel(1))"], ["proof (state)\nthis:\n  arity_hd (head (Hd \\<zeta>)) \\<le> enat (wt (Hd \\<zeta>))\n\ngoal (1 subgoal):\n 1. \\<And>s1 s2.\n       \\<lbrakk>arity_hd (head s1) \\<le> enat (wt s1);\n        arity_hd (head s2) \\<le> enat (wt s2)\\<rbrakk>\n       \\<Longrightarrow> arity_hd (head (App s1 s2))\n                         \\<le> enat (wt (App s1 s2))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s1 s2.\n       \\<lbrakk>arity_hd (head s1) \\<le> enat (wt s1);\n        arity_hd (head s2) \\<le> enat (wt s2)\\<rbrakk>\n       \\<Longrightarrow> arity_hd (head (App s1 s2))\n                         \\<le> enat (wt (App s1 s2))", "case App"], ["proof (state)\nthis:\n  arity_hd (head s1_) \\<le> enat (wt s1_)\n  arity_hd (head s2_) \\<le> enat (wt s2_)\n\ngoal (1 subgoal):\n 1. \\<And>s1 s2.\n       \\<lbrakk>arity_hd (head s1) \\<le> enat (wt s1);\n        arity_hd (head s2) \\<le> enat (wt s2)\\<rbrakk>\n       \\<Longrightarrow> arity_hd (head (App s1 s2))\n                         \\<le> enat (wt (App s1 s2))", "thus ?case"], ["proof (prove)\nusing this:\n  arity_hd (head s1_) \\<le> enat (wt s1_)\n  arity_hd (head s2_) \\<le> enat (wt s2_)\n\ngoal (1 subgoal):\n 1. arity_hd (head (App s1_ s2_)) \\<le> enat (wt (App s1_ s2_))", "by (metis dual_order.trans enat_ord_simps(1) head_App wt_App_ge_fun)"], ["proof (state)\nthis:\n  arity_hd (head (App s1_ s2_)) \\<le> enat (wt (App s1_ s2_))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wt_ge_num_args_if_\\<delta>_eq_0:\n  assumes \\<delta>_eq_0: \"\\<delta> = 0\"\n  shows \"wt s \\<ge> num_args s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. num_args s \\<le> wt s", "by (induct s, simp_all,\n    metis (no_types) \\<delta>_eq_0 \\<epsilon>_gt_0 wt_\\<delta>_imp_\\<delta>_eq_\\<epsilon> add_le_same_cancel1 le_0_eq le_trans\n      minus_nat.diff_0 not_gr_zero not_less_eq_eq)"], ["", "lemma wt_ge_num_args: \"wary s \\<Longrightarrow> wt s \\<ge> num_args s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wary s \\<Longrightarrow> num_args s \\<le> wt s", "using wt_ge_arity_head_if_\\<delta>_gt_0 wt_ge_num_args_if_\\<delta>_eq_0"], ["proof (prove)\nusing this:\n  0 < \\<delta> \\<Longrightarrow> arity_hd (head ?s) \\<le> enat (wt ?s)\n  \\<delta> = 0 \\<Longrightarrow> num_args ?s \\<le> wt ?s\n\ngoal (1 subgoal):\n 1. wary s \\<Longrightarrow> num_args s \\<le> wt s", "by (meson order.trans enat_ord_simps(1) neq0_conv wary_num_args_le_arity_head)"], ["", "subsection \\<open>Inductive Definitions\\<close>"], ["", "inductive gt :: \"('s, 'v) tm \\<Rightarrow> ('s, 'v) tm \\<Rightarrow> bool\" (infix \">\\<^sub>t\" 50) where\n  gt_wt: \"vars_mset t \\<supseteq># vars_mset s \\<Longrightarrow> wt t > wt s \\<Longrightarrow> t >\\<^sub>t s\"\n| gt_unary: \"wt t = wt s \\<Longrightarrow> \\<not> head t \\<le>\\<ge>\\<^sub>h\\<^sub>d head s \\<Longrightarrow> num_args t = 1 \\<Longrightarrow>\n    (\\<exists>f \\<in> ground_heads (head t). arity_sym f = 1 \\<and> wt_sym f = 0) \\<Longrightarrow> arg t >\\<^sub>t s \\<or> arg t = s \\<Longrightarrow>\n    t >\\<^sub>t s\"\n| gt_diff: \"vars_mset t \\<supseteq># vars_mset s \\<Longrightarrow> wt t = wt s \\<Longrightarrow> head t >\\<^sub>h\\<^sub>d head s \\<Longrightarrow> t >\\<^sub>t s\"\n| gt_same: \"vars_mset t \\<supseteq># vars_mset s \\<Longrightarrow> wt t = wt s \\<Longrightarrow> head t = head s \\<Longrightarrow>\n    (\\<forall>f \\<in> ground_heads (head t). extf f (>\\<^sub>t) (args t) (args s)) \\<Longrightarrow> t >\\<^sub>t s\""], ["", "abbreviation ge :: \"('s, 'v) tm \\<Rightarrow> ('s, 'v) tm \\<Rightarrow> bool\" (infix \"\\<ge>\\<^sub>t\" 50) where\n  \"t \\<ge>\\<^sub>t s \\<equiv> t >\\<^sub>t s \\<or> t = s\""], ["", "inductive gt_wt :: \"('s, 'v) tm \\<Rightarrow> ('s, 'v) tm \\<Rightarrow> bool\" where\n  gt_wtI: \"vars_mset t \\<supseteq># vars_mset s \\<Longrightarrow> wt t > wt s \\<Longrightarrow> gt_wt t s\""], ["", "inductive gt_diff :: \"('s, 'v) tm \\<Rightarrow> ('s, 'v) tm \\<Rightarrow> bool\" where\n  gt_diffI: \"vars_mset t \\<supseteq># vars_mset s \\<Longrightarrow> wt t = wt s \\<Longrightarrow> head t >\\<^sub>h\\<^sub>d head s \\<Longrightarrow> gt_diff t s\""], ["", "inductive gt_unary :: \"('s, 'v) tm \\<Rightarrow> ('s, 'v) tm \\<Rightarrow> bool\" where\n  gt_unaryI: \"wt t = wt s \\<Longrightarrow> \\<not> head t \\<le>\\<ge>\\<^sub>h\\<^sub>d head s \\<Longrightarrow> num_args t = 1 \\<Longrightarrow>\n    (\\<exists>f \\<in> ground_heads (head t). arity_sym f = 1 \\<and> wt_sym f = 0) \\<Longrightarrow> arg t \\<ge>\\<^sub>t s \\<Longrightarrow> gt_unary t s\""], ["", "inductive gt_same :: \"('s, 'v) tm \\<Rightarrow> ('s, 'v) tm \\<Rightarrow> bool\" where\n  gt_sameI: \"vars_mset t \\<supseteq># vars_mset s \\<Longrightarrow> wt t = wt s \\<Longrightarrow> head t = head s \\<Longrightarrow>\n    (\\<forall>f \\<in> ground_heads (head t). extf f (>\\<^sub>t) (args t) (args s)) \\<Longrightarrow> gt_same t s\""], ["", "lemma gt_iff_wt_unary_diff_same: \"t >\\<^sub>t s \\<longleftrightarrow> gt_wt t s \\<or> gt_unary t s \\<or> gt_diff t s \\<or> gt_same t s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (t >\\<^sub>t s) =\n    (gt_wt t s \\<or> gt_unary t s \\<or> gt_diff t s \\<or> gt_same t s)", "by (subst gt.simps) (auto simp: gt_wt.simps gt_unary.simps gt_diff.simps gt_same.simps)"], ["", "lemma gt_imp_vars_mset: \"t >\\<^sub>t s \\<Longrightarrow> vars_mset t \\<supseteq># vars_mset s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t >\\<^sub>t s \\<Longrightarrow> vars_mset s \\<subseteq># vars_mset t", "by (induct rule: gt.induct) (auto intro: subset_mset.order.trans)"], ["", "lemma gt_imp_vars: \"t >\\<^sub>t s \\<Longrightarrow> vars t \\<supseteq> vars s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t >\\<^sub>t s \\<Longrightarrow> vars s \\<subseteq> vars t", "using set_mset_mono[OF gt_imp_vars_mset]"], ["proof (prove)\nusing this:\n  ?t1 >\\<^sub>t ?s1 \\<Longrightarrow>\n  set_mset (vars_mset ?s1) \\<subseteq> set_mset (vars_mset ?t1)\n\ngoal (1 subgoal):\n 1. t >\\<^sub>t s \\<Longrightarrow> vars s \\<subseteq> vars t", "by simp"], ["", "subsection \\<open>Irreflexivity\\<close>"], ["", "theorem gt_irrefl: \"wary s \\<Longrightarrow> \\<not> s >\\<^sub>t s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wary s \\<Longrightarrow> \\<not> s >\\<^sub>t s", "proof (induct \"size s\" arbitrary: s rule: less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>\\<And>sa.\n                   \\<lbrakk>size sa < size s; wary sa\\<rbrakk>\n                   \\<Longrightarrow> \\<not> sa >\\<^sub>t sa;\n        wary s\\<rbrakk>\n       \\<Longrightarrow> \\<not> s >\\<^sub>t s", "case less"], ["proof (state)\nthis:\n  \\<lbrakk>size ?s < size s; wary ?s\\<rbrakk>\n  \\<Longrightarrow> \\<not> ?s >\\<^sub>t ?s\n  wary s\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>\\<And>sa.\n                   \\<lbrakk>size sa < size s; wary sa\\<rbrakk>\n                   \\<Longrightarrow> \\<not> sa >\\<^sub>t sa;\n        wary s\\<rbrakk>\n       \\<Longrightarrow> \\<not> s >\\<^sub>t s", "note ih = this(1) and wary_s = this(2)"], ["proof (state)\nthis:\n  \\<lbrakk>size ?s < size s; wary ?s\\<rbrakk>\n  \\<Longrightarrow> \\<not> ?s >\\<^sub>t ?s\n  wary s\n\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>\\<And>sa.\n                   \\<lbrakk>size sa < size s; wary sa\\<rbrakk>\n                   \\<Longrightarrow> \\<not> sa >\\<^sub>t sa;\n        wary s\\<rbrakk>\n       \\<Longrightarrow> \\<not> s >\\<^sub>t s", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> s >\\<^sub>t s", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. s >\\<^sub>t s \\<Longrightarrow> False", "assume s_gt_s: \"s >\\<^sub>t s\""], ["proof (state)\nthis:\n  s >\\<^sub>t s\n\ngoal (1 subgoal):\n 1. s >\\<^sub>t s \\<Longrightarrow> False", "show False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "using s_gt_s"], ["proof (prove)\nusing this:\n  s >\\<^sub>t s\n\ngoal (1 subgoal):\n 1. False", "proof (cases rule: gt.cases)"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset s; wt s < wt s\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>wt s = wt s; \\<not> head s \\<le>\\<ge>\\<^sub>h\\<^sub>d head s;\n     num_args s = 1;\n     \\<exists>f\\<in>local.ground_heads (head s).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg s \\<ge>\\<^sub>t s\\<rbrakk>\n    \\<Longrightarrow> False\n 3. \\<lbrakk>vars_mset s \\<subseteq># vars_mset s; wt s = wt s;\n     head s >\\<^sub>h\\<^sub>d head s\\<rbrakk>\n    \\<Longrightarrow> False\n 4. \\<lbrakk>vars_mset s \\<subseteq># vars_mset s; wt s = wt s;\n     head s = head s;\n     \\<forall>f\\<in>local.ground_heads (head s).\n        extf f (>\\<^sub>t) (args s) (args s)\\<rbrakk>\n    \\<Longrightarrow> False", "case gt_same"], ["proof (state)\nthis:\n  vars_mset s \\<subseteq># vars_mset s\n  wt s = wt s\n  head s = head s\n  \\<forall>f\\<in>local.ground_heads (head s).\n     extf f (>\\<^sub>t) (args s) (args s)\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset s; wt s < wt s\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>wt s = wt s; \\<not> head s \\<le>\\<ge>\\<^sub>h\\<^sub>d head s;\n     num_args s = 1;\n     \\<exists>f\\<in>local.ground_heads (head s).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg s \\<ge>\\<^sub>t s\\<rbrakk>\n    \\<Longrightarrow> False\n 3. \\<lbrakk>vars_mset s \\<subseteq># vars_mset s; wt s = wt s;\n     head s >\\<^sub>h\\<^sub>d head s\\<rbrakk>\n    \\<Longrightarrow> False\n 4. \\<lbrakk>vars_mset s \\<subseteq># vars_mset s; wt s = wt s;\n     head s = head s;\n     \\<forall>f\\<in>local.ground_heads (head s).\n        extf f (>\\<^sub>t) (args s) (args s)\\<rbrakk>\n    \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  vars_mset s \\<subseteq># vars_mset s\n  wt s = wt s\n  head s = head s\n  \\<forall>f\\<in>local.ground_heads (head s).\n     extf f (>\\<^sub>t) (args s) (args s)", "obtain f where f: \"extf f (>\\<^sub>t) (args s) (args s)\""], ["proof (prove)\nusing this:\n  vars_mset s \\<subseteq># vars_mset s\n  wt s = wt s\n  head s = head s\n  \\<forall>f\\<in>local.ground_heads (head s).\n     extf f (>\\<^sub>t) (args s) (args s)\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        extf f (>\\<^sub>t) (args s) (args s) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  extf f (>\\<^sub>t) (args s) (args s)\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset s; wt s < wt s\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>wt s = wt s; \\<not> head s \\<le>\\<ge>\\<^sub>h\\<^sub>d head s;\n     num_args s = 1;\n     \\<exists>f\\<in>local.ground_heads (head s).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg s \\<ge>\\<^sub>t s\\<rbrakk>\n    \\<Longrightarrow> False\n 3. \\<lbrakk>vars_mset s \\<subseteq># vars_mset s; wt s = wt s;\n     head s >\\<^sub>h\\<^sub>d head s\\<rbrakk>\n    \\<Longrightarrow> False\n 4. \\<lbrakk>vars_mset s \\<subseteq># vars_mset s; wt s = wt s;\n     head s = head s;\n     \\<forall>f\\<in>local.ground_heads (head s).\n        extf f (>\\<^sub>t) (args s) (args s)\\<rbrakk>\n    \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  extf f (>\\<^sub>t) (args s) (args s)\n\ngoal (1 subgoal):\n 1. False", "using wary_s ih"], ["proof (prove)\nusing this:\n  extf f (>\\<^sub>t) (args s) (args s)\n  wary s\n  \\<lbrakk>size ?s < size s; wary ?s\\<rbrakk>\n  \\<Longrightarrow> \\<not> ?s >\\<^sub>t ?s\n\ngoal (1 subgoal):\n 1. False", "by (metis wary_args extf_irrefl size_in_args)"], ["proof (state)\nthis:\n  False\n\ngoal (3 subgoals):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset s; wt s < wt s\\<rbrakk>\n    \\<Longrightarrow> False\n 2. \\<lbrakk>wt s = wt s; \\<not> head s \\<le>\\<ge>\\<^sub>h\\<^sub>d head s;\n     num_args s = 1;\n     \\<exists>f\\<in>local.ground_heads (head s).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg s \\<ge>\\<^sub>t s\\<rbrakk>\n    \\<Longrightarrow> False\n 3. \\<lbrakk>vars_mset s \\<subseteq># vars_mset s; wt s = wt s;\n     head s >\\<^sub>h\\<^sub>d head s\\<rbrakk>\n    \\<Longrightarrow> False", "qed (auto simp: comp_hd_def gt_hd_irrefl)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<not> s >\\<^sub>t s\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Transitivity\\<close>"], ["", "lemma gt_imp_wt_ge: \"t >\\<^sub>t s \\<Longrightarrow> wt t \\<ge> wt s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t >\\<^sub>t s \\<Longrightarrow> wt s \\<le> wt t", "by (induct rule: gt.induct) auto"], ["", "lemma not_extf_gt_nil_singleton_if_\\<delta>_eq_\\<epsilon>:\n  assumes wary_s: \"wary s\" and \\<delta>_eq_\\<epsilon>: \"\\<delta> = \\<epsilon>\"\n  shows \"\\<not> extf f (>\\<^sub>t) [] [s]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> extf f (>\\<^sub>t) [] [s]", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. extf f (>\\<^sub>t) [] [s] \\<Longrightarrow> False", "assume nil_gt_s: \"extf f (>\\<^sub>t) [] [s]\""], ["proof (state)\nthis:\n  extf f (>\\<^sub>t) [] [s]\n\ngoal (1 subgoal):\n 1. extf f (>\\<^sub>t) [] [s] \\<Longrightarrow> False", "note s_gt_nil = extf_singleton_nil_if_\\<delta>_eq_\\<epsilon>[OF \\<delta>_eq_\\<epsilon>, of f gt s]"], ["proof (state)\nthis:\n  extf f (>\\<^sub>t) [s] []\n\ngoal (1 subgoal):\n 1. extf f (>\\<^sub>t) [] [s] \\<Longrightarrow> False", "have \"\\<not> extf f (>\\<^sub>t) [] []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> extf f (>\\<^sub>t) [] []", "by (rule extf_irrefl) simp"], ["proof (state)\nthis:\n  \\<not> extf f (>\\<^sub>t) [] []\n\ngoal (1 subgoal):\n 1. extf f (>\\<^sub>t) [] [s] \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  \\<not> extf f (>\\<^sub>t) [] []\n\ngoal (1 subgoal):\n 1. extf f (>\\<^sub>t) [] [s] \\<Longrightarrow> False", "have \"extf f (>\\<^sub>t) [] []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. extf f (>\\<^sub>t) [] []", "using extf_trans_from_irrefl[of \"{s}\", OF _ _ _ _ _ _ nil_gt_s s_gt_nil] gt_irrefl[OF wary_s]"], ["proof (prove)\nusing this:\n  \\<lbrakk>finite {s}; [] \\<in> lists {s}; [s] \\<in> lists {s};\n   [] \\<in> lists {s}; \\<forall>x\\<in>{s}. \\<not> x >\\<^sub>t x;\n   \\<forall>z\\<in>{s}.\n      \\<forall>y\\<in>{s}.\n         \\<forall>x\\<in>{s}.\n            z >\\<^sub>t y \\<longrightarrow>\n            y >\\<^sub>t x \\<longrightarrow> z >\\<^sub>t x\\<rbrakk>\n  \\<Longrightarrow> extf f (>\\<^sub>t) [] []\n  \\<not> s >\\<^sub>t s\n\ngoal (1 subgoal):\n 1. extf f (>\\<^sub>t) [] []", "by fastforce"], ["proof (state)\nthis:\n  extf f (>\\<^sub>t) [] []\n\ngoal (1 subgoal):\n 1. extf f (>\\<^sub>t) [] [s] \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  \\<not> extf f (>\\<^sub>t) [] []\n  extf f (>\\<^sub>t) [] []", "show False"], ["proof (prove)\nusing this:\n  \\<not> extf f (>\\<^sub>t) [] []\n  extf f (>\\<^sub>t) [] []\n\ngoal (1 subgoal):\n 1. False", "by sat"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma gt_sub_arg: \"wary (App s t) \\<Longrightarrow> App s t >\\<^sub>t t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wary (App s t) \\<Longrightarrow> App s t >\\<^sub>t t", "proof (induct t arbitrary: s rule: measure_induct_rule[of size])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>y s.\n                   \\<lbrakk>size y < size x; wary (App s y)\\<rbrakk>\n                   \\<Longrightarrow> App s y >\\<^sub>t y;\n        wary (App s x)\\<rbrakk>\n       \\<Longrightarrow> App s x >\\<^sub>t x", "case (less t)"], ["proof (state)\nthis:\n  \\<lbrakk>size ?y < size t; wary (App ?s ?y)\\<rbrakk>\n  \\<Longrightarrow> App ?s ?y >\\<^sub>t ?y\n  wary (App s t)\n\ngoal (1 subgoal):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>y s.\n                   \\<lbrakk>size y < size x; wary (App s y)\\<rbrakk>\n                   \\<Longrightarrow> App s y >\\<^sub>t y;\n        wary (App s x)\\<rbrakk>\n       \\<Longrightarrow> App s x >\\<^sub>t x", "note ih = this(1) and wary_st = this(2)"], ["proof (state)\nthis:\n  \\<lbrakk>size ?y < size t; wary (App ?s ?y)\\<rbrakk>\n  \\<Longrightarrow> App ?s ?y >\\<^sub>t ?y\n  wary (App s t)\n\ngoal (1 subgoal):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>y s.\n                   \\<lbrakk>size y < size x; wary (App s y)\\<rbrakk>\n                   \\<Longrightarrow> App s y >\\<^sub>t y;\n        wary (App s x)\\<rbrakk>\n       \\<Longrightarrow> App s x >\\<^sub>t x", "{"], ["proof (state)\nthis:\n  \\<lbrakk>size ?y < size t; wary (App ?s ?y)\\<rbrakk>\n  \\<Longrightarrow> App ?s ?y >\\<^sub>t ?y\n  wary (App s t)\n\ngoal (1 subgoal):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>y s.\n                   \\<lbrakk>size y < size x; wary (App s y)\\<rbrakk>\n                   \\<Longrightarrow> App s y >\\<^sub>t y;\n        wary (App s x)\\<rbrakk>\n       \\<Longrightarrow> App s x >\\<^sub>t x", "assume wt_st: \"wt (App s t) = wt t\""], ["proof (state)\nthis:\n  wt (App s t) = wt t\n\ngoal (1 subgoal):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>y s.\n                   \\<lbrakk>size y < size x; wary (App s y)\\<rbrakk>\n                   \\<Longrightarrow> App s y >\\<^sub>t y;\n        wary (App s x)\\<rbrakk>\n       \\<Longrightarrow> App s x >\\<^sub>t x", "hence \\<delta>_eq_\\<epsilon>: \"\\<delta> = \\<epsilon>\""], ["proof (prove)\nusing this:\n  wt (App s t) = wt t\n\ngoal (1 subgoal):\n 1. \\<delta> = \\<epsilon>", "using wt_App_\\<delta> wt_\\<delta>_imp_\\<delta>_eq_\\<epsilon>"], ["proof (prove)\nusing this:\n  wt (App s t) = wt t\n  wt (App ?s ?t) = wt ?t \\<Longrightarrow> wt ?s = \\<delta>\n  wt ?s = \\<delta> \\<Longrightarrow> \\<delta> = \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<delta> = \\<epsilon>", "by metis"], ["proof (state)\nthis:\n  \\<delta> = \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>y s.\n                   \\<lbrakk>size y < size x; wary (App s y)\\<rbrakk>\n                   \\<Longrightarrow> App s y >\\<^sub>t y;\n        wary (App s x)\\<rbrakk>\n       \\<Longrightarrow> App s x >\\<^sub>t x", "hence \\<delta>_gt_0: \"\\<delta> > 0\""], ["proof (prove)\nusing this:\n  \\<delta> = \\<epsilon>\n\ngoal (1 subgoal):\n 1. 0 < \\<delta>", "using \\<epsilon>_gt_0"], ["proof (prove)\nusing this:\n  \\<delta> = \\<epsilon>\n  0 < \\<epsilon>\n\ngoal (1 subgoal):\n 1. 0 < \\<delta>", "by simp"], ["proof (state)\nthis:\n  0 < \\<delta>\n\ngoal (1 subgoal):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>y s.\n                   \\<lbrakk>size y < size x; wary (App s y)\\<rbrakk>\n                   \\<Longrightarrow> App s y >\\<^sub>t y;\n        wary (App s x)\\<rbrakk>\n       \\<Longrightarrow> App s x >\\<^sub>t x", "have wt_s: \"wt s = \\<delta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wt s = \\<delta>", "by (rule wt_App_\\<delta>[OF wt_st])"], ["proof (state)\nthis:\n  wt s = \\<delta>\n\ngoal (1 subgoal):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>y s.\n                   \\<lbrakk>size y < size x; wary (App s y)\\<rbrakk>\n                   \\<Longrightarrow> App s y >\\<^sub>t y;\n        wary (App s x)\\<rbrakk>\n       \\<Longrightarrow> App s x >\\<^sub>t x", "have\n      wary_t: \"wary t\" and\n      nargs_lt: \"num_args s < arity_hd (head s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wary t &&& enat (num_args s) < arity_hd (head s)", "using wary_st wary.simps"], ["proof (prove)\nusing this:\n  wary (App s t)\n  wary ?a =\n  ((\\<exists>\\<zeta>. ?a = Hd \\<zeta>) \\<or>\n   (\\<exists>s t.\n       ?a = App s t \\<and>\n       wary s \\<and> wary t \\<and> enat (num_args s) < arity_hd (head s)))\n\ngoal (1 subgoal):\n 1. wary t &&& enat (num_args s) < arity_hd (head s)", "by blast+"], ["proof (state)\nthis:\n  wary t\n  enat (num_args s) < arity_hd (head s)\n\ngoal (1 subgoal):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>y s.\n                   \\<lbrakk>size y < size x; wary (App s y)\\<rbrakk>\n                   \\<Longrightarrow> App s y >\\<^sub>t y;\n        wary (App s x)\\<rbrakk>\n       \\<Longrightarrow> App s x >\\<^sub>t x", "have ary_hd_s: \"arity_hd (head s) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arity_hd (head s) = 1", "by (metis One_nat_def arity.wary_AppE dual_order.order_iff_strict eSuc_enat enat_defs(1)\n        enat_defs(2) ileI1 linorder_not_le not_iless0 wary_st wt_gt_\\<delta>_if_superunary wt_s)"], ["proof (state)\nthis:\n  arity_hd (head s) = 1\n\ngoal (1 subgoal):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>y s.\n                   \\<lbrakk>size y < size x; wary (App s y)\\<rbrakk>\n                   \\<Longrightarrow> App s y >\\<^sub>t y;\n        wary (App s x)\\<rbrakk>\n       \\<Longrightarrow> App s x >\\<^sub>t x", "hence nargs_s: \"num_args s = 0\""], ["proof (prove)\nusing this:\n  arity_hd (head s) = 1\n\ngoal (1 subgoal):\n 1. num_args s = 0", "by (metis enat_ord_simps(2) less_one nargs_lt one_enat_def)"], ["proof (state)\nthis:\n  num_args s = 0\n\ngoal (1 subgoal):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>y s.\n                   \\<lbrakk>size y < size x; wary (App s y)\\<rbrakk>\n                   \\<Longrightarrow> App s y >\\<^sub>t y;\n        wary (App s x)\\<rbrakk>\n       \\<Longrightarrow> App s x >\\<^sub>t x", "have \"s = Hd (head s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s = Hd (head s)", "by (simp add: Hd_head_id nargs_s)"], ["proof (state)\nthis:\n  s = Hd (head s)\n\ngoal (1 subgoal):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>y s.\n                   \\<lbrakk>size y < size x; wary (App s y)\\<rbrakk>\n                   \\<Longrightarrow> App s y >\\<^sub>t y;\n        wary (App s x)\\<rbrakk>\n       \\<Longrightarrow> App s x >\\<^sub>t x", "then"], ["proof (chain)\npicking this:\n  s = Hd (head s)", "obtain f where\n      f_in: \"f \\<in> ground_heads (head s)\" and\n      wt_f_etc: \"wt_sym f + the_enat (\\<delta> * arity_sym f) = \\<delta>\""], ["proof (prove)\nusing this:\n  s = Hd (head s)\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>f \\<in> local.ground_heads (head s);\n         wt_sym f + the_enat (enat \\<delta> * arity_sym f) =\n         \\<delta>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using exists_wt_sym wt_s"], ["proof (prove)\nusing this:\n  s = Hd (head s)\n  \\<exists>f\\<in>local.ground_heads ?\\<zeta>.\n     wt (Hd ?\\<zeta>) = wt_sym f + the_enat (enat \\<delta> * arity_sym f)\n  wt s = \\<delta>\n\ngoal (1 subgoal):\n 1. (\\<And>f.\n        \\<lbrakk>f \\<in> local.ground_heads (head s);\n         wt_sym f + the_enat (enat \\<delta> * arity_sym f) =\n         \\<delta>\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  f \\<in> local.ground_heads (head s)\n  wt_sym f + the_enat (enat \\<delta> * arity_sym f) = \\<delta>\n\ngoal (1 subgoal):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>y s.\n                   \\<lbrakk>size y < size x; wary (App s y)\\<rbrakk>\n                   \\<Longrightarrow> App s y >\\<^sub>t y;\n        wary (App s x)\\<rbrakk>\n       \\<Longrightarrow> App s x >\\<^sub>t x", "have ary_f_1: \"arity_sym f = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arity_sym f = 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. arity_sym f = 1", "have ary_f_ge_1: \"arity_sym f \\<ge> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 \\<le> arity_sym f", "using ary_hd_s f_in ground_heads_arity"], ["proof (prove)\nusing this:\n  arity_hd (head s) = 1\n  f \\<in> local.ground_heads (head s)\n  ?f \\<in> local.ground_heads ?\\<zeta> \\<Longrightarrow>\n  arity_hd ?\\<zeta> \\<le> arity_sym ?f\n\ngoal (1 subgoal):\n 1. 1 \\<le> arity_sym f", "by fastforce"], ["proof (state)\nthis:\n  1 \\<le> arity_sym f\n\ngoal (1 subgoal):\n 1. arity_sym f = 1", "hence \"enat \\<delta> * arity_sym f = \\<delta>\""], ["proof (prove)\nusing this:\n  1 \\<le> arity_sym f\n\ngoal (1 subgoal):\n 1. enat \\<delta> * arity_sym f = enat \\<delta>", "using wt_f_etc"], ["proof (prove)\nusing this:\n  1 \\<le> arity_sym f\n  wt_sym f + the_enat (enat \\<delta> * arity_sym f) = \\<delta>\n\ngoal (1 subgoal):\n 1. enat \\<delta> * arity_sym f = enat \\<delta>", "by (metis enat_ord_simps(1) enat_the_enat_\\<delta>_times_arity_sym le_add2\n          le_antisym mult.right_neutral mult_left_mono zero_le)"], ["proof (state)\nthis:\n  enat \\<delta> * arity_sym f = enat \\<delta>\n\ngoal (1 subgoal):\n 1. arity_sym f = 1", "thus ?thesis"], ["proof (prove)\nusing this:\n  enat \\<delta> * arity_sym f = enat \\<delta>\n\ngoal (1 subgoal):\n 1. arity_sym f = 1", "using \\<delta>_gt_0"], ["proof (prove)\nusing this:\n  enat \\<delta> * arity_sym f = enat \\<delta>\n  0 < \\<delta>\n\ngoal (1 subgoal):\n 1. arity_sym f = 1", "by (cases \"arity_sym f\") (auto simp: one_enat_def)"], ["proof (state)\nthis:\n  arity_sym f = 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  arity_sym f = 1\n\ngoal (1 subgoal):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>y s.\n                   \\<lbrakk>size y < size x; wary (App s y)\\<rbrakk>\n                   \\<Longrightarrow> App s y >\\<^sub>t y;\n        wary (App s x)\\<rbrakk>\n       \\<Longrightarrow> App s x >\\<^sub>t x", "hence wt_f_0: \"wt_sym f = 0\""], ["proof (prove)\nusing this:\n  arity_sym f = 1\n\ngoal (1 subgoal):\n 1. wt_sym f = 0", "using wt_f_etc"], ["proof (prove)\nusing this:\n  arity_sym f = 1\n  wt_sym f + the_enat (enat \\<delta> * arity_sym f) = \\<delta>\n\ngoal (1 subgoal):\n 1. wt_sym f = 0", "by simp"], ["proof (state)\nthis:\n  wt_sym f = 0\n\ngoal (1 subgoal):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>y s.\n                   \\<lbrakk>size y < size x; wary (App s y)\\<rbrakk>\n                   \\<Longrightarrow> App s y >\\<^sub>t y;\n        wary (App s x)\\<rbrakk>\n       \\<Longrightarrow> App s x >\\<^sub>t x", "{"], ["proof (state)\nthis:\n  wt_sym f = 0\n\ngoal (1 subgoal):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>y s.\n                   \\<lbrakk>size y < size x; wary (App s y)\\<rbrakk>\n                   \\<Longrightarrow> App s y >\\<^sub>t y;\n        wary (App s x)\\<rbrakk>\n       \\<Longrightarrow> App s x >\\<^sub>t x", "assume hd_s_ncmp_t: \"\\<not> head s \\<le>\\<ge>\\<^sub>h\\<^sub>d head t\""], ["proof (state)\nthis:\n  \\<not> head s \\<le>\\<ge>\\<^sub>h\\<^sub>d head t\n\ngoal (1 subgoal):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>y s.\n                   \\<lbrakk>size y < size x; wary (App s y)\\<rbrakk>\n                   \\<Longrightarrow> App s y >\\<^sub>t y;\n        wary (App s x)\\<rbrakk>\n       \\<Longrightarrow> App s x >\\<^sub>t x", "have ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. App s t >\\<^sub>t t", "by (rule gt_unary[OF wt_st]) (auto simp: hd_s_ncmp_t nargs_s intro: f_in ary_f_1 wt_f_0)"], ["proof (state)\nthis:\n  App s t >\\<^sub>t t\n\ngoal (1 subgoal):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>y s.\n                   \\<lbrakk>size y < size x; wary (App s y)\\<rbrakk>\n                   \\<Longrightarrow> App s y >\\<^sub>t y;\n        wary (App s x)\\<rbrakk>\n       \\<Longrightarrow> App s x >\\<^sub>t x", "}"], ["proof (state)\nthis:\n  \\<not> head s \\<le>\\<ge>\\<^sub>h\\<^sub>d head t \\<Longrightarrow>\n  App s t >\\<^sub>t t\n\ngoal (1 subgoal):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>y s.\n                   \\<lbrakk>size y < size x; wary (App s y)\\<rbrakk>\n                   \\<Longrightarrow> App s y >\\<^sub>t y;\n        wary (App s x)\\<rbrakk>\n       \\<Longrightarrow> App s x >\\<^sub>t x", "moreover"], ["proof (state)\nthis:\n  \\<not> head s \\<le>\\<ge>\\<^sub>h\\<^sub>d head t \\<Longrightarrow>\n  App s t >\\<^sub>t t\n\ngoal (1 subgoal):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>y s.\n                   \\<lbrakk>size y < size x; wary (App s y)\\<rbrakk>\n                   \\<Longrightarrow> App s y >\\<^sub>t y;\n        wary (App s x)\\<rbrakk>\n       \\<Longrightarrow> App s x >\\<^sub>t x", "{"], ["proof (state)\nthis:\n  \\<not> head s \\<le>\\<ge>\\<^sub>h\\<^sub>d head t \\<Longrightarrow>\n  App s t >\\<^sub>t t\n\ngoal (1 subgoal):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>y s.\n                   \\<lbrakk>size y < size x; wary (App s y)\\<rbrakk>\n                   \\<Longrightarrow> App s y >\\<^sub>t y;\n        wary (App s x)\\<rbrakk>\n       \\<Longrightarrow> App s x >\\<^sub>t x", "assume hd_s_gt_t: \"head s >\\<^sub>h\\<^sub>d head t\""], ["proof (state)\nthis:\n  head s >\\<^sub>h\\<^sub>d head t\n\ngoal (1 subgoal):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>y s.\n                   \\<lbrakk>size y < size x; wary (App s y)\\<rbrakk>\n                   \\<Longrightarrow> App s y >\\<^sub>t y;\n        wary (App s x)\\<rbrakk>\n       \\<Longrightarrow> App s x >\\<^sub>t x", "have ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. App s t >\\<^sub>t t", "by (rule gt_diff) (auto simp: hd_s_gt_t wt_s[folded \\<delta>_eq_\\<epsilon>])"], ["proof (state)\nthis:\n  App s t >\\<^sub>t t\n\ngoal (1 subgoal):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>y s.\n                   \\<lbrakk>size y < size x; wary (App s y)\\<rbrakk>\n                   \\<Longrightarrow> App s y >\\<^sub>t y;\n        wary (App s x)\\<rbrakk>\n       \\<Longrightarrow> App s x >\\<^sub>t x", "}"], ["proof (state)\nthis:\n  head s >\\<^sub>h\\<^sub>d head t \\<Longrightarrow> App s t >\\<^sub>t t\n\ngoal (1 subgoal):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>y s.\n                   \\<lbrakk>size y < size x; wary (App s y)\\<rbrakk>\n                   \\<Longrightarrow> App s y >\\<^sub>t y;\n        wary (App s x)\\<rbrakk>\n       \\<Longrightarrow> App s x >\\<^sub>t x", "moreover"], ["proof (state)\nthis:\n  head s >\\<^sub>h\\<^sub>d head t \\<Longrightarrow> App s t >\\<^sub>t t\n\ngoal (1 subgoal):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>y s.\n                   \\<lbrakk>size y < size x; wary (App s y)\\<rbrakk>\n                   \\<Longrightarrow> App s y >\\<^sub>t y;\n        wary (App s x)\\<rbrakk>\n       \\<Longrightarrow> App s x >\\<^sub>t x", "{"], ["proof (state)\nthis:\n  head s >\\<^sub>h\\<^sub>d head t \\<Longrightarrow> App s t >\\<^sub>t t\n\ngoal (1 subgoal):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>y s.\n                   \\<lbrakk>size y < size x; wary (App s y)\\<rbrakk>\n                   \\<Longrightarrow> App s y >\\<^sub>t y;\n        wary (App s x)\\<rbrakk>\n       \\<Longrightarrow> App s x >\\<^sub>t x", "assume \"head t >\\<^sub>h\\<^sub>d head s\""], ["proof (state)\nthis:\n  head t >\\<^sub>h\\<^sub>d head s\n\ngoal (1 subgoal):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>y s.\n                   \\<lbrakk>size y < size x; wary (App s y)\\<rbrakk>\n                   \\<Longrightarrow> App s y >\\<^sub>t y;\n        wary (App s x)\\<rbrakk>\n       \\<Longrightarrow> App s x >\\<^sub>t x", "hence False"], ["proof (prove)\nusing this:\n  head t >\\<^sub>h\\<^sub>d head s\n\ngoal (1 subgoal):\n 1. False", "using ary_f_1 exists_wt_sym f_in gt_hd_def gt_sym_antisym unary_wt_sym_0_gt wt_f_0"], ["proof (prove)\nusing this:\n  head t >\\<^sub>h\\<^sub>d head s\n  arity_sym f = 1\n  \\<exists>f\\<in>local.ground_heads ?\\<zeta>.\n     wt (Hd ?\\<zeta>) = wt_sym f + the_enat (enat \\<delta> * arity_sym f)\n  f \\<in> local.ground_heads (head s)\n  (?\\<xi> >\\<^sub>h\\<^sub>d ?\\<zeta>) =\n  (\\<forall>g\\<in>local.ground_heads ?\\<xi>.\n      \\<forall>f\\<in>local.ground_heads ?\\<zeta>. g >\\<^sub>s f)\n  ?f >\\<^sub>s ?g \\<Longrightarrow> \\<not> ?g >\\<^sub>s ?f\n  \\<lbrakk>arity_sym ?f = 1; wt_sym ?f = 0\\<rbrakk>\n  \\<Longrightarrow> ?f >\\<^sub>s ?g \\<or> ?g = ?f\n  wt_sym f = 0\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>y s.\n                   \\<lbrakk>size y < size x; wary (App s y)\\<rbrakk>\n                   \\<Longrightarrow> App s y >\\<^sub>t y;\n        wary (App s x)\\<rbrakk>\n       \\<Longrightarrow> App s x >\\<^sub>t x", "}"], ["proof (state)\nthis:\n  head t >\\<^sub>h\\<^sub>d head s \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>y s.\n                   \\<lbrakk>size y < size x; wary (App s y)\\<rbrakk>\n                   \\<Longrightarrow> App s y >\\<^sub>t y;\n        wary (App s x)\\<rbrakk>\n       \\<Longrightarrow> App s x >\\<^sub>t x", "moreover"], ["proof (state)\nthis:\n  head t >\\<^sub>h\\<^sub>d head s \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>y s.\n                   \\<lbrakk>size y < size x; wary (App s y)\\<rbrakk>\n                   \\<Longrightarrow> App s y >\\<^sub>t y;\n        wary (App s x)\\<rbrakk>\n       \\<Longrightarrow> App s x >\\<^sub>t x", "{"], ["proof (state)\nthis:\n  head t >\\<^sub>h\\<^sub>d head s \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>y s.\n                   \\<lbrakk>size y < size x; wary (App s y)\\<rbrakk>\n                   \\<Longrightarrow> App s y >\\<^sub>t y;\n        wary (App s x)\\<rbrakk>\n       \\<Longrightarrow> App s x >\\<^sub>t x", "assume hd_t_eq_s: \"head t = head s\""], ["proof (state)\nthis:\n  head t = head s\n\ngoal (1 subgoal):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>y s.\n                   \\<lbrakk>size y < size x; wary (App s y)\\<rbrakk>\n                   \\<Longrightarrow> App s y >\\<^sub>t y;\n        wary (App s x)\\<rbrakk>\n       \\<Longrightarrow> App s x >\\<^sub>t x", "hence nargs_t_le: \"num_args t \\<le> 1\""], ["proof (prove)\nusing this:\n  head t = head s\n\ngoal (1 subgoal):\n 1. num_args t \\<le> 1", "using ary_hd_s wary_num_args_le_arity_head[OF wary_t]"], ["proof (prove)\nusing this:\n  head t = head s\n  arity_hd (head s) = 1\n  enat (num_args t) \\<le> arity_hd (head t)\n\ngoal (1 subgoal):\n 1. num_args t \\<le> 1", "by (simp add: one_enat_def)"], ["proof (state)\nthis:\n  num_args t \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>y s.\n                   \\<lbrakk>size y < size x; wary (App s y)\\<rbrakk>\n                   \\<Longrightarrow> App s y >\\<^sub>t y;\n        wary (App s x)\\<rbrakk>\n       \\<Longrightarrow> App s x >\\<^sub>t x", "have extf: \"extf f (>\\<^sub>t) [t] (args t)\" for f"], ["proof (prove)\ngoal (1 subgoal):\n 1. extf f (>\\<^sub>t) [t] (args t)", "proof (cases \"args t\")"], ["proof (state)\ngoal (2 subgoals):\n 1. args t = [] \\<Longrightarrow> extf f (>\\<^sub>t) [t] (args t)\n 2. \\<And>a list.\n       args t = a # list \\<Longrightarrow> extf f (>\\<^sub>t) [t] (args t)", "case Nil"], ["proof (state)\nthis:\n  args t = []\n\ngoal (2 subgoals):\n 1. args t = [] \\<Longrightarrow> extf f (>\\<^sub>t) [t] (args t)\n 2. \\<And>a list.\n       args t = a # list \\<Longrightarrow> extf f (>\\<^sub>t) [t] (args t)", "thus ?thesis"], ["proof (prove)\nusing this:\n  args t = []\n\ngoal (1 subgoal):\n 1. extf f (>\\<^sub>t) [t] (args t)", "by (simp add: extf_singleton_nil_if_\\<delta>_eq_\\<epsilon>[OF \\<delta>_eq_\\<epsilon>])"], ["proof (state)\nthis:\n  extf f (>\\<^sub>t) [t] (args t)\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       args t = a # list \\<Longrightarrow> extf f (>\\<^sub>t) [t] (args t)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       args t = a # list \\<Longrightarrow> extf f (>\\<^sub>t) [t] (args t)", "case args_t: (Cons ta ts)"], ["proof (state)\nthis:\n  args t = ta # ts\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       args t = a # list \\<Longrightarrow> extf f (>\\<^sub>t) [t] (args t)", "hence ts: \"ts = []\""], ["proof (prove)\nusing this:\n  args t = ta # ts\n\ngoal (1 subgoal):\n 1. ts = []", "using ary_hd_s[folded hd_t_eq_s] wary_num_args_le_arity_head[OF wary_t]\n            nargs_t_le"], ["proof (prove)\nusing this:\n  args t = ta # ts\n  arity_hd (head t) = 1\n  enat (num_args t) \\<le> arity_hd (head t)\n  num_args t \\<le> 1\n\ngoal (1 subgoal):\n 1. ts = []", "by simp"], ["proof (state)\nthis:\n  ts = []\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       args t = a # list \\<Longrightarrow> extf f (>\\<^sub>t) [t] (args t)", "have ta: \"ta = arg t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ta = arg t", "by (metis apps.simps(1) apps.simps(2) args_t tm.sel(6) tm_collapse_apps ts)"], ["proof (state)\nthis:\n  ta = arg t\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       args t = a # list \\<Longrightarrow> extf f (>\\<^sub>t) [t] (args t)", "hence t: \"t = App (fun t) ta\""], ["proof (prove)\nusing this:\n  ta = arg t\n\ngoal (1 subgoal):\n 1. t = App (fun t) ta", "by (metis args.simps(1) args_t not_Cons_self2 tm.exhaust_sel ts)"], ["proof (state)\nthis:\n  t = App (fun t) ta\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       args t = a # list \\<Longrightarrow> extf f (>\\<^sub>t) [t] (args t)", "have \"t >\\<^sub>t ta\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t >\\<^sub>t ta", "by (rule ih[of ta \"fun t\", folded t, OF _ wary_t]) (metis ta size_arg_lt t tm.disc(2))"], ["proof (state)\nthis:\n  t >\\<^sub>t ta\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       args t = a # list \\<Longrightarrow> extf f (>\\<^sub>t) [t] (args t)", "thus ?thesis"], ["proof (prove)\nusing this:\n  t >\\<^sub>t ta\n\ngoal (1 subgoal):\n 1. extf f (>\\<^sub>t) [t] (args t)", "unfolding args_t ts"], ["proof (prove)\nusing this:\n  t >\\<^sub>t ta\n\ngoal (1 subgoal):\n 1. extf f (>\\<^sub>t) [t] [ta]", "by (metis extf_singleton gt_irrefl wary_t)"], ["proof (state)\nthis:\n  extf f (>\\<^sub>t) [t] (args t)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  extf ?f (>\\<^sub>t) [t] (args t)\n\ngoal (1 subgoal):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>y s.\n                   \\<lbrakk>size y < size x; wary (App s y)\\<rbrakk>\n                   \\<Longrightarrow> App s y >\\<^sub>t y;\n        wary (App s x)\\<rbrakk>\n       \\<Longrightarrow> App s x >\\<^sub>t x", "have ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. App s t >\\<^sub>t t", "by (rule gt_same)\n          (auto simp: hd_t_eq_s wt_s[folded \\<delta>_eq_\\<epsilon>] length_0_conv[THEN iffD1, OF nargs_s] extf)"], ["proof (state)\nthis:\n  App s t >\\<^sub>t t\n\ngoal (1 subgoal):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>y s.\n                   \\<lbrakk>size y < size x; wary (App s y)\\<rbrakk>\n                   \\<Longrightarrow> App s y >\\<^sub>t y;\n        wary (App s x)\\<rbrakk>\n       \\<Longrightarrow> App s x >\\<^sub>t x", "}"], ["proof (state)\nthis:\n  head t = head s \\<Longrightarrow> App s t >\\<^sub>t t\n\ngoal (1 subgoal):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>y s.\n                   \\<lbrakk>size y < size x; wary (App s y)\\<rbrakk>\n                   \\<Longrightarrow> App s y >\\<^sub>t y;\n        wary (App s x)\\<rbrakk>\n       \\<Longrightarrow> App s x >\\<^sub>t x", "ultimately"], ["proof (chain)\npicking this:\n  \\<not> head s \\<le>\\<ge>\\<^sub>h\\<^sub>d head t \\<Longrightarrow>\n  App s t >\\<^sub>t t\n  head s >\\<^sub>h\\<^sub>d head t \\<Longrightarrow> App s t >\\<^sub>t t\n  head t >\\<^sub>h\\<^sub>d head s \\<Longrightarrow> False\n  head t = head s \\<Longrightarrow> App s t >\\<^sub>t t", "have ?case"], ["proof (prove)\nusing this:\n  \\<not> head s \\<le>\\<ge>\\<^sub>h\\<^sub>d head t \\<Longrightarrow>\n  App s t >\\<^sub>t t\n  head s >\\<^sub>h\\<^sub>d head t \\<Longrightarrow> App s t >\\<^sub>t t\n  head t >\\<^sub>h\\<^sub>d head s \\<Longrightarrow> False\n  head t = head s \\<Longrightarrow> App s t >\\<^sub>t t\n\ngoal (1 subgoal):\n 1. App s t >\\<^sub>t t", "unfolding comp_hd_def"], ["proof (prove)\nusing this:\n  \\<not> (head s = head t \\<or>\n          head s >\\<^sub>h\\<^sub>d head t \\<or>\n          head t >\\<^sub>h\\<^sub>d head s) \\<Longrightarrow>\n  App s t >\\<^sub>t t\n  head s >\\<^sub>h\\<^sub>d head t \\<Longrightarrow> App s t >\\<^sub>t t\n  head t >\\<^sub>h\\<^sub>d head s \\<Longrightarrow> False\n  head t = head s \\<Longrightarrow> App s t >\\<^sub>t t\n\ngoal (1 subgoal):\n 1. App s t >\\<^sub>t t", "by metis"], ["proof (state)\nthis:\n  App s t >\\<^sub>t t\n\ngoal (1 subgoal):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>y s.\n                   \\<lbrakk>size y < size x; wary (App s y)\\<rbrakk>\n                   \\<Longrightarrow> App s y >\\<^sub>t y;\n        wary (App s x)\\<rbrakk>\n       \\<Longrightarrow> App s x >\\<^sub>t x", "}"], ["proof (state)\nthis:\n  wt (App s t) = wt t \\<Longrightarrow> App s t >\\<^sub>t t\n\ngoal (1 subgoal):\n 1. \\<And>x s.\n       \\<lbrakk>\\<And>y s.\n                   \\<lbrakk>size y < size x; wary (App s y)\\<rbrakk>\n                   \\<Longrightarrow> App s y >\\<^sub>t y;\n        wary (App s x)\\<rbrakk>\n       \\<Longrightarrow> App s x >\\<^sub>t x", "thus ?case"], ["proof (prove)\nusing this:\n  wt (App s t) = wt t \\<Longrightarrow> App s t >\\<^sub>t t\n\ngoal (1 subgoal):\n 1. App s t >\\<^sub>t t", "using gt_wt"], ["proof (prove)\nusing this:\n  wt (App s t) = wt t \\<Longrightarrow> App s t >\\<^sub>t t\n  \\<lbrakk>vars_mset ?s \\<subseteq># vars_mset ?t; wt ?s < wt ?t\\<rbrakk>\n  \\<Longrightarrow> ?t >\\<^sub>t ?s\n\ngoal (1 subgoal):\n 1. App s t >\\<^sub>t t", "by fastforce"], ["proof (state)\nthis:\n  App s t >\\<^sub>t t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma gt_arg: \"wary s \\<Longrightarrow> is_App s \\<Longrightarrow> s >\\<^sub>t arg s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wary s; is_App s\\<rbrakk> \\<Longrightarrow> s >\\<^sub>t arg s", "by (cases s) (auto intro: gt_sub_arg)"], ["", "theorem gt_trans: \"wary u \\<Longrightarrow> wary t \\<Longrightarrow> wary s \\<Longrightarrow> u >\\<^sub>t t \\<Longrightarrow> t >\\<^sub>t s \\<Longrightarrow> u >\\<^sub>t s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wary u; wary t; wary s; u >\\<^sub>t t; t >\\<^sub>t s\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "proof (simp only: atomize_imp,\n    rule measure_induct_rule[of \"\\<lambda>(u, t, s). {#size u, size t, size s#}\"\n        \"\\<lambda>(u, t, s). wary u \\<longrightarrow> wary t \\<longrightarrow> wary s \\<longrightarrow> u >\\<^sub>t t \\<longrightarrow> t >\\<^sub>t s \\<longrightarrow> u >\\<^sub>t s\" \"(u, t, s)\",\n      simplified prod.case],\n    simp only: split_paired_all prod.case atomize_imp[symmetric])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a aa b.\n       \\<lbrakk>\\<And>ab ac ba.\n                   \\<lbrakk>{#size ab, size ac, size ba#}\n                            < {#size a, size aa, size b#};\n                    wary ab; wary ac; wary ba; ab >\\<^sub>t ac;\n                    ac >\\<^sub>t ba\\<rbrakk>\n                   \\<Longrightarrow> ab >\\<^sub>t ba;\n        wary a; wary aa; wary b; a >\\<^sub>t aa; aa >\\<^sub>t b\\<rbrakk>\n       \\<Longrightarrow> a >\\<^sub>t b", "fix u t s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a aa b.\n       \\<lbrakk>\\<And>ab ac ba.\n                   \\<lbrakk>{#size ab, size ac, size ba#}\n                            < {#size a, size aa, size b#};\n                    wary ab; wary ac; wary ba; ab >\\<^sub>t ac;\n                    ac >\\<^sub>t ba\\<rbrakk>\n                   \\<Longrightarrow> ab >\\<^sub>t ba;\n        wary a; wary aa; wary b; a >\\<^sub>t aa; aa >\\<^sub>t b\\<rbrakk>\n       \\<Longrightarrow> a >\\<^sub>t b", "assume\n    ih: \"\\<And>ua ta sa. {#size ua, size ta, size sa#} < {#size u, size t, size s#} \\<Longrightarrow>\n      wary ua \\<Longrightarrow> wary ta \\<Longrightarrow> wary sa \\<Longrightarrow> ua >\\<^sub>t ta \\<Longrightarrow> ta >\\<^sub>t sa \\<Longrightarrow> ua >\\<^sub>t sa\" and\n    wary_u: \"wary u\" and wary_t: \"wary t\" and wary_s: \"wary s\" and\n    u_gt_t: \"u >\\<^sub>t t\" and t_gt_s: \"t >\\<^sub>t s\""], ["proof (state)\nthis:\n  \\<lbrakk>{#size ?ua, size ?ta, size ?sa#} < {#size u, size t, size s#};\n   wary ?ua; wary ?ta; wary ?sa; ?ua >\\<^sub>t ?ta;\n   ?ta >\\<^sub>t ?sa\\<rbrakk>\n  \\<Longrightarrow> ?ua >\\<^sub>t ?sa\n  wary u\n  wary t\n  wary s\n  u >\\<^sub>t t\n  t >\\<^sub>t s\n\ngoal (1 subgoal):\n 1. \\<And>a aa b.\n       \\<lbrakk>\\<And>ab ac ba.\n                   \\<lbrakk>{#size ab, size ac, size ba#}\n                            < {#size a, size aa, size b#};\n                    wary ab; wary ac; wary ba; ab >\\<^sub>t ac;\n                    ac >\\<^sub>t ba\\<rbrakk>\n                   \\<Longrightarrow> ab >\\<^sub>t ba;\n        wary a; wary aa; wary b; a >\\<^sub>t aa; aa >\\<^sub>t b\\<rbrakk>\n       \\<Longrightarrow> a >\\<^sub>t b", "have \"vars_mset u \\<supseteq># vars_mset t\" and \"vars_mset t \\<supseteq># vars_mset s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars_mset t \\<subseteq># vars_mset u &&&\n    vars_mset s \\<subseteq># vars_mset t", "using u_gt_t t_gt_s"], ["proof (prove)\nusing this:\n  u >\\<^sub>t t\n  t >\\<^sub>t s\n\ngoal (1 subgoal):\n 1. vars_mset t \\<subseteq># vars_mset u &&&\n    vars_mset s \\<subseteq># vars_mset t", "by (auto simp: gt_imp_vars_mset)"], ["proof (state)\nthis:\n  vars_mset t \\<subseteq># vars_mset u\n  vars_mset s \\<subseteq># vars_mset t\n\ngoal (1 subgoal):\n 1. \\<And>a aa b.\n       \\<lbrakk>\\<And>ab ac ba.\n                   \\<lbrakk>{#size ab, size ac, size ba#}\n                            < {#size a, size aa, size b#};\n                    wary ab; wary ac; wary ba; ab >\\<^sub>t ac;\n                    ac >\\<^sub>t ba\\<rbrakk>\n                   \\<Longrightarrow> ab >\\<^sub>t ba;\n        wary a; wary aa; wary b; a >\\<^sub>t aa; aa >\\<^sub>t b\\<rbrakk>\n       \\<Longrightarrow> a >\\<^sub>t b", "hence vars_u_s: \"vars_mset u \\<supseteq># vars_mset s\""], ["proof (prove)\nusing this:\n  vars_mset t \\<subseteq># vars_mset u\n  vars_mset s \\<subseteq># vars_mset t\n\ngoal (1 subgoal):\n 1. vars_mset s \\<subseteq># vars_mset u", "by auto"], ["proof (state)\nthis:\n  vars_mset s \\<subseteq># vars_mset u\n\ngoal (1 subgoal):\n 1. \\<And>a aa b.\n       \\<lbrakk>\\<And>ab ac ba.\n                   \\<lbrakk>{#size ab, size ac, size ba#}\n                            < {#size a, size aa, size b#};\n                    wary ab; wary ac; wary ba; ab >\\<^sub>t ac;\n                    ac >\\<^sub>t ba\\<rbrakk>\n                   \\<Longrightarrow> ab >\\<^sub>t ba;\n        wary a; wary aa; wary b; a >\\<^sub>t aa; aa >\\<^sub>t b\\<rbrakk>\n       \\<Longrightarrow> a >\\<^sub>t b", "have wt_u_ge_t: \"wt u \\<ge> wt t\" and wt_t_ge_s: \"wt t \\<ge> wt s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wt t \\<le> wt u &&& wt s \\<le> wt t", "using gt_imp_wt_ge u_gt_t t_gt_s"], ["proof (prove)\nusing this:\n  ?t >\\<^sub>t ?s \\<Longrightarrow> wt ?s \\<le> wt ?t\n  u >\\<^sub>t t\n  t >\\<^sub>t s\n\ngoal (1 subgoal):\n 1. wt t \\<le> wt u &&& wt s \\<le> wt t", "by auto"], ["proof (state)\nthis:\n  wt t \\<le> wt u\n  wt s \\<le> wt t\n\ngoal (1 subgoal):\n 1. \\<And>a aa b.\n       \\<lbrakk>\\<And>ab ac ba.\n                   \\<lbrakk>{#size ab, size ac, size ba#}\n                            < {#size a, size aa, size b#};\n                    wary ab; wary ac; wary ba; ab >\\<^sub>t ac;\n                    ac >\\<^sub>t ba\\<rbrakk>\n                   \\<Longrightarrow> ab >\\<^sub>t ba;\n        wary a; wary aa; wary b; a >\\<^sub>t aa; aa >\\<^sub>t b\\<rbrakk>\n       \\<Longrightarrow> a >\\<^sub>t b", "{"], ["proof (state)\nthis:\n  wt t \\<le> wt u\n  wt s \\<le> wt t\n\ngoal (1 subgoal):\n 1. \\<And>a aa b.\n       \\<lbrakk>\\<And>ab ac ba.\n                   \\<lbrakk>{#size ab, size ac, size ba#}\n                            < {#size a, size aa, size b#};\n                    wary ab; wary ac; wary ba; ab >\\<^sub>t ac;\n                    ac >\\<^sub>t ba\\<rbrakk>\n                   \\<Longrightarrow> ab >\\<^sub>t ba;\n        wary a; wary aa; wary b; a >\\<^sub>t aa; aa >\\<^sub>t b\\<rbrakk>\n       \\<Longrightarrow> a >\\<^sub>t b", "assume wt_t_s: \"wt t = wt s\" and wt_u_t: \"wt u = wt t\""], ["proof (state)\nthis:\n  wt t = wt s\n  wt u = wt t\n\ngoal (1 subgoal):\n 1. \\<And>a aa b.\n       \\<lbrakk>\\<And>ab ac ba.\n                   \\<lbrakk>{#size ab, size ac, size ba#}\n                            < {#size a, size aa, size b#};\n                    wary ab; wary ac; wary ba; ab >\\<^sub>t ac;\n                    ac >\\<^sub>t ba\\<rbrakk>\n                   \\<Longrightarrow> ab >\\<^sub>t ba;\n        wary a; wary aa; wary b; a >\\<^sub>t aa; aa >\\<^sub>t b\\<rbrakk>\n       \\<Longrightarrow> a >\\<^sub>t b", "hence wt_u_s: \"wt u = wt s\""], ["proof (prove)\nusing this:\n  wt t = wt s\n  wt u = wt t\n\ngoal (1 subgoal):\n 1. wt u = wt s", "by simp"], ["proof (state)\nthis:\n  wt u = wt s\n\ngoal (1 subgoal):\n 1. \\<And>a aa b.\n       \\<lbrakk>\\<And>ab ac ba.\n                   \\<lbrakk>{#size ab, size ac, size ba#}\n                            < {#size a, size aa, size b#};\n                    wary ab; wary ac; wary ba; ab >\\<^sub>t ac;\n                    ac >\\<^sub>t ba\\<rbrakk>\n                   \\<Longrightarrow> ab >\\<^sub>t ba;\n        wary a; wary aa; wary b; a >\\<^sub>t aa; aa >\\<^sub>t b\\<rbrakk>\n       \\<Longrightarrow> a >\\<^sub>t b", "have wary_arg_u: \"wary (arg u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wary (arg u)", "by (rule wary_arg[OF wary_u])"], ["proof (state)\nthis:\n  wary (arg u)\n\ngoal (1 subgoal):\n 1. \\<And>a aa b.\n       \\<lbrakk>\\<And>ab ac ba.\n                   \\<lbrakk>{#size ab, size ac, size ba#}\n                            < {#size a, size aa, size b#};\n                    wary ab; wary ac; wary ba; ab >\\<^sub>t ac;\n                    ac >\\<^sub>t ba\\<rbrakk>\n                   \\<Longrightarrow> ab >\\<^sub>t ba;\n        wary a; wary aa; wary b; a >\\<^sub>t aa; aa >\\<^sub>t b\\<rbrakk>\n       \\<Longrightarrow> a >\\<^sub>t b", "have wary_arg_t: \"wary (arg t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wary (arg t)", "by (rule wary_arg[OF wary_t])"], ["proof (state)\nthis:\n  wary (arg t)\n\ngoal (1 subgoal):\n 1. \\<And>a aa b.\n       \\<lbrakk>\\<And>ab ac ba.\n                   \\<lbrakk>{#size ab, size ac, size ba#}\n                            < {#size a, size aa, size b#};\n                    wary ab; wary ac; wary ba; ab >\\<^sub>t ac;\n                    ac >\\<^sub>t ba\\<rbrakk>\n                   \\<Longrightarrow> ab >\\<^sub>t ba;\n        wary a; wary aa; wary b; a >\\<^sub>t aa; aa >\\<^sub>t b\\<rbrakk>\n       \\<Longrightarrow> a >\\<^sub>t b", "have wary_arg_s: \"wary (arg s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wary (arg s)", "by (rule wary_arg[OF wary_s])"], ["proof (state)\nthis:\n  wary (arg s)\n\ngoal (1 subgoal):\n 1. \\<And>a aa b.\n       \\<lbrakk>\\<And>ab ac ba.\n                   \\<lbrakk>{#size ab, size ac, size ba#}\n                            < {#size a, size aa, size b#};\n                    wary ab; wary ac; wary ba; ab >\\<^sub>t ac;\n                    ac >\\<^sub>t ba\\<rbrakk>\n                   \\<Longrightarrow> ab >\\<^sub>t ba;\n        wary a; wary aa; wary b; a >\\<^sub>t aa; aa >\\<^sub>t b\\<rbrakk>\n       \\<Longrightarrow> a >\\<^sub>t b", "have \"u >\\<^sub>t s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u >\\<^sub>t s", "using t_gt_s"], ["proof (prove)\nusing this:\n  t >\\<^sub>t s\n\ngoal (1 subgoal):\n 1. u >\\<^sub>t s", "proof cases"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt s < wt t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt t = wt s; \\<not> head t \\<le>\\<ge>\\<^sub>h\\<^sub>d head s;\n     num_args t = 1;\n     \\<exists>f\\<in>local.ground_heads (head t).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg t \\<ge>\\<^sub>t s\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t >\\<^sub>h\\<^sub>d head s\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head t).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "case gt_unary_t_s: gt_unary"], ["proof (state)\nthis:\n  wt t = wt s\n  \\<not> head t \\<le>\\<ge>\\<^sub>h\\<^sub>d head s\n  num_args t = 1\n  \\<exists>f\\<in>local.ground_heads (head t).\n     arity_sym f = 1 \\<and> wt_sym f = 0\n  arg t \\<ge>\\<^sub>t s\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt s < wt t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt t = wt s; \\<not> head t \\<le>\\<ge>\\<^sub>h\\<^sub>d head s;\n     num_args t = 1;\n     \\<exists>f\\<in>local.ground_heads (head t).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg t \\<ge>\\<^sub>t s\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t >\\<^sub>h\\<^sub>d head s\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head t).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "have t_app: \"is_App t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_App t", "by (metis args_Nil_iff_is_Hd gt_unary_t_s(3) length_greater_0_conv less_numeral_extra(1))"], ["proof (state)\nthis:\n  is_App t\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt s < wt t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt t = wt s; \\<not> head t \\<le>\\<ge>\\<^sub>h\\<^sub>d head s;\n     num_args t = 1;\n     \\<exists>f\\<in>local.ground_heads (head t).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg t \\<ge>\\<^sub>t s\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t >\\<^sub>h\\<^sub>d head s\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head t).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "have \\<delta>_eq_\\<epsilon>: \"\\<delta> = \\<epsilon>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<delta> = \\<epsilon>", "using gt_unary_t_s(4) unary_wt_sym_0_imp_\\<delta>_eq_\\<epsilon>"], ["proof (prove)\nusing this:\n  \\<exists>f\\<in>local.ground_heads (head t).\n     arity_sym f = 1 \\<and> wt_sym f = 0\n  \\<lbrakk>arity_sym ?f = 1; wt_sym ?f = 0\\<rbrakk>\n  \\<Longrightarrow> \\<delta> = \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<delta> = \\<epsilon>", "by blast"], ["proof (state)\nthis:\n  \\<delta> = \\<epsilon>\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt s < wt t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt t = wt s; \\<not> head t \\<le>\\<ge>\\<^sub>h\\<^sub>d head s;\n     num_args t = 1;\n     \\<exists>f\\<in>local.ground_heads (head t).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg t \\<ge>\\<^sub>t s\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t >\\<^sub>h\\<^sub>d head s\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head t).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. u >\\<^sub>t s", "using u_gt_t"], ["proof (prove)\nusing this:\n  u >\\<^sub>t t\n\ngoal (1 subgoal):\n 1. u >\\<^sub>t s", "proof cases"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "case gt_unary_u_t: gt_unary"], ["proof (state)\nthis:\n  wt u = wt t\n  \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t\n  num_args u = 1\n  \\<exists>f\\<in>local.ground_heads (head u).\n     arity_sym f = 1 \\<and> wt_sym f = 0\n  arg u \\<ge>\\<^sub>t t\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "have u_app: \"is_App u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_App u", "by (metis args_Nil_iff_is_Hd gt_unary_u_t(3) length_greater_0_conv less_numeral_extra(1))"], ["proof (state)\nthis:\n  is_App u\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "hence arg_u_gt_s: \"arg u >\\<^sub>t s\""], ["proof (prove)\nusing this:\n  is_App u\n\ngoal (1 subgoal):\n 1. arg u >\\<^sub>t s", "using ih[of \"arg u\" t s] gt_unary_u_t(5) t_gt_s size_arg_lt wary_arg_u wary_s wary_t"], ["proof (prove)\nusing this:\n  is_App u\n  \\<lbrakk>{#size (arg u), size t, size s#} < {#size u, size t, size s#};\n   wary (arg u); wary t; wary s; arg u >\\<^sub>t t; t >\\<^sub>t s\\<rbrakk>\n  \\<Longrightarrow> arg u >\\<^sub>t s\n  arg u \\<ge>\\<^sub>t t\n  t >\\<^sub>t s\n  is_App ?s \\<Longrightarrow> size (arg ?s) < size ?s\n  wary (arg u)\n  wary s\n  wary t\n\ngoal (1 subgoal):\n 1. arg u >\\<^sub>t s", "by force"], ["proof (state)\nthis:\n  arg u >\\<^sub>t s\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "hence arg_u_ge_s: \"arg u \\<ge>\\<^sub>t s\""], ["proof (prove)\nusing this:\n  arg u >\\<^sub>t s\n\ngoal (1 subgoal):\n 1. arg u \\<ge>\\<^sub>t s", "by sat"], ["proof (state)\nthis:\n  arg u \\<ge>\\<^sub>t s\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "{"], ["proof (state)\nthis:\n  arg u \\<ge>\\<^sub>t s\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "assume \"size (arg u) < size t\""], ["proof (state)\nthis:\n  size (arg u) < size t\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "hence ?thesis"], ["proof (prove)\nusing this:\n  size (arg u) < size t\n\ngoal (1 subgoal):\n 1. u >\\<^sub>t s", "using ih[of u \"arg u\" s] arg_u_gt_s gt_arg"], ["proof (prove)\nusing this:\n  size (arg u) < size t\n  \\<lbrakk>{#size u, size (arg u), size s#} < {#size u, size t, size s#};\n   wary u; wary (arg u); wary s; u >\\<^sub>t arg u;\n   arg u >\\<^sub>t s\\<rbrakk>\n  \\<Longrightarrow> u >\\<^sub>t s\n  arg u >\\<^sub>t s\n  \\<lbrakk>wary ?s; is_App ?s\\<rbrakk> \\<Longrightarrow> ?s >\\<^sub>t arg ?s\n\ngoal (1 subgoal):\n 1. u >\\<^sub>t s", "by (simp add: u_app wary_arg_u wary_s wary_u)"], ["proof (state)\nthis:\n  u >\\<^sub>t s\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "}"], ["proof (state)\nthis:\n  size (arg u) < size t \\<Longrightarrow> u >\\<^sub>t s\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "moreover"], ["proof (state)\nthis:\n  size (arg u) < size t \\<Longrightarrow> u >\\<^sub>t s\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "{"], ["proof (state)\nthis:\n  size (arg u) < size t \\<Longrightarrow> u >\\<^sub>t s\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "assume \"size (arg t) < size s\""], ["proof (state)\nthis:\n  size (arg t) < size s\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "hence \"u >\\<^sub>t arg t\""], ["proof (prove)\nusing this:\n  size (arg t) < size s\n\ngoal (1 subgoal):\n 1. u >\\<^sub>t arg t", "using ih[of u t \"arg t\"] args_Nil_iff_is_Hd gt_arg gt_unary_t_s(3) u_gt_t wary_t wary_u"], ["proof (prove)\nusing this:\n  size (arg t) < size s\n  \\<lbrakk>{#size u, size t, size (arg t)#} < {#size u, size t, size s#};\n   wary u; wary t; wary (arg t); u >\\<^sub>t t; t >\\<^sub>t arg t\\<rbrakk>\n  \\<Longrightarrow> u >\\<^sub>t arg t\n  (args ?s = []) = is_Hd ?s\n  \\<lbrakk>wary ?s; is_App ?s\\<rbrakk> \\<Longrightarrow> ?s >\\<^sub>t arg ?s\n  num_args t = 1\n  u >\\<^sub>t t\n  wary t\n  wary u\n\ngoal (1 subgoal):\n 1. u >\\<^sub>t arg t", "by force"], ["proof (state)\nthis:\n  u >\\<^sub>t arg t\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "hence ?thesis"], ["proof (prove)\nusing this:\n  u >\\<^sub>t arg t\n\ngoal (1 subgoal):\n 1. u >\\<^sub>t s", "using ih[of u \"arg t\" s] args_Nil_iff_is_Hd gt_unary_t_s(3,5) size_arg_lt wary_arg_t\n              wary_s wary_u"], ["proof (prove)\nusing this:\n  u >\\<^sub>t arg t\n  \\<lbrakk>{#size u, size (arg t), size s#} < {#size u, size t, size s#};\n   wary u; wary (arg t); wary s; u >\\<^sub>t arg t;\n   arg t >\\<^sub>t s\\<rbrakk>\n  \\<Longrightarrow> u >\\<^sub>t s\n  (args ?s = []) = is_Hd ?s\n  num_args t = 1\n  arg t \\<ge>\\<^sub>t s\n  is_App ?s \\<Longrightarrow> size (arg ?s) < size ?s\n  wary (arg t)\n  wary s\n  wary u\n\ngoal (1 subgoal):\n 1. u >\\<^sub>t s", "by force"], ["proof (state)\nthis:\n  u >\\<^sub>t s\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "}"], ["proof (state)\nthis:\n  size (arg t) < size s \\<Longrightarrow> u >\\<^sub>t s\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "moreover"], ["proof (state)\nthis:\n  size (arg t) < size s \\<Longrightarrow> u >\\<^sub>t s\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "{"], ["proof (state)\nthis:\n  size (arg t) < size s \\<Longrightarrow> u >\\<^sub>t s\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "assume sz_u_gt_t: \"size u > size t\" and sz_t_gt_s: \"size t > size s\""], ["proof (state)\nthis:\n  size t < size u\n  size s < size t\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "have wt_fun_u: \"wt (fun u) = \\<delta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wt (fun u) = \\<delta>", "by (metis antisym gt_imp_wt_ge gt_unary_u_t(5) tm.collapse(2) u_app wt_App_\\<delta> wt_arg_le\n              wt_t_s wt_u_s)"], ["proof (state)\nthis:\n  wt (fun u) = \\<delta>\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "have nargs_fun_u: \"num_args (fun u) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. num_args (fun u) = 0", "by (metis args.simps(1) gt_unary_u_t(3) list.size(3) one_arg_imp_Hd tm.collapse(2)\n              u_app)"], ["proof (state)\nthis:\n  num_args (fun u) = 0\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "{"], ["proof (state)\nthis:\n  num_args (fun u) = 0\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "assume hd_u_eq_s: \"head u = head s\""], ["proof (state)\nthis:\n  head u = head s\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "hence ary_hd_s: \"arity_hd (head s) = 1\""], ["proof (prove)\nusing this:\n  head u = head s\n\ngoal (1 subgoal):\n 1. arity_hd (head s) = 1", "using ground_heads_arity gt_unary_u_t(3,4) hd_u_eq_s one_enat_def\n                wary_num_args_le_arity_head wary_u"], ["proof (prove)\nusing this:\n  head u = head s\n  ?f \\<in> local.ground_heads ?\\<zeta> \\<Longrightarrow>\n  arity_hd ?\\<zeta> \\<le> arity_sym ?f\n  num_args u = 1\n  \\<exists>f\\<in>local.ground_heads (head u).\n     arity_sym f = 1 \\<and> wt_sym f = 0\n  head u = head s\n  1 = enat 1\n  wary ?s \\<Longrightarrow> enat (num_args ?s) \\<le> arity_hd (head ?s)\n  wary u\n\ngoal (1 subgoal):\n 1. arity_hd (head s) = 1", "by fastforce"], ["proof (state)\nthis:\n  arity_hd (head s) = 1\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "have extf: \"extf f (>\\<^sub>t) (args u) (args s)\" for f"], ["proof (prove)\ngoal (1 subgoal):\n 1. extf f (>\\<^sub>t) (args u) (args s)", "proof (cases \"args s\")"], ["proof (state)\ngoal (2 subgoals):\n 1. args s = [] \\<Longrightarrow> extf f (>\\<^sub>t) (args u) (args s)\n 2. \\<And>a list.\n       args s = a # list \\<Longrightarrow>\n       extf f (>\\<^sub>t) (args u) (args s)", "case Nil"], ["proof (state)\nthis:\n  args s = []\n\ngoal (2 subgoals):\n 1. args s = [] \\<Longrightarrow> extf f (>\\<^sub>t) (args u) (args s)\n 2. \\<And>a list.\n       args s = a # list \\<Longrightarrow>\n       extf f (>\\<^sub>t) (args u) (args s)", "thus ?thesis"], ["proof (prove)\nusing this:\n  args s = []\n\ngoal (1 subgoal):\n 1. extf f (>\\<^sub>t) (args u) (args s)", "by (metis Hd_head_id \\<delta>_eq_\\<epsilon> append_Nil args.simps(2) extf_singleton_nil_if_\\<delta>_eq_\\<epsilon>\n                  gt_unary_u_t(3) head_fun length_greater_0_conv less_irrefl_nat nargs_fun_u\n                  tm.exhaust_sel zero_neq_one)"], ["proof (state)\nthis:\n  extf f (>\\<^sub>t) (args u) (args s)\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       args s = a # list \\<Longrightarrow>\n       extf f (>\\<^sub>t) (args u) (args s)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a list.\n       args s = a # list \\<Longrightarrow>\n       extf f (>\\<^sub>t) (args u) (args s)", "case args_s: (Cons sa ss)"], ["proof (state)\nthis:\n  args s = sa # ss\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       args s = a # list \\<Longrightarrow>\n       extf f (>\\<^sub>t) (args u) (args s)", "hence ss: \"ss = []\""], ["proof (prove)\nusing this:\n  args s = sa # ss\n\ngoal (1 subgoal):\n 1. ss = []", "by (cases s, simp, metis One_nat_def antisym_conv ary_hd_s diff_Suc_1\n                  enat_ord_simps(1) le_add2 length_0_conv length_Cons list.size(4) one_enat_def\n                  wary_num_args_le_arity_head wary_s)"], ["proof (state)\nthis:\n  ss = []\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       args s = a # list \\<Longrightarrow>\n       extf f (>\\<^sub>t) (args u) (args s)", "have sa: \"sa = arg s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sa = arg s", "by (metis apps.simps(1) apps.simps(2) args_s tm.sel(6) tm_collapse_apps ss)"], ["proof (state)\nthis:\n  sa = arg s\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       args s = a # list \\<Longrightarrow>\n       extf f (>\\<^sub>t) (args u) (args s)", "have s_app: \"is_App s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_App s", "using args_Nil_iff_is_Hd args_s"], ["proof (prove)\nusing this:\n  (args ?s = []) = is_Hd ?s\n  args s = sa # ss\n\ngoal (1 subgoal):\n 1. is_App s", "by force"], ["proof (state)\nthis:\n  is_App s\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       args s = a # list \\<Longrightarrow>\n       extf f (>\\<^sub>t) (args u) (args s)", "have args_u: \"args u = [arg u]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. args u = [arg u]", "by (metis append_Nil args.simps(2) args_Nil_iff_is_Hd gt_unary_u_t(3) length_0_conv\n                  nargs_fun_u tm.collapse(2) zero_neq_one)"], ["proof (state)\nthis:\n  args u = [arg u]\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       args s = a # list \\<Longrightarrow>\n       extf f (>\\<^sub>t) (args u) (args s)", "have max_sz_u_t_s: \"Max {size s, size t, size u} = size u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max {size s, size t, size u} = size u", "using sz_t_gt_s sz_u_gt_t"], ["proof (prove)\nusing this:\n  size s < size t\n  size t < size u\n\ngoal (1 subgoal):\n 1. Max {size s, size t, size u} = size u", "by auto"], ["proof (state)\nthis:\n  Max {size s, size t, size u} = size u\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       args s = a # list \\<Longrightarrow>\n       extf f (>\\<^sub>t) (args u) (args s)", "have max_sz_arg_u_t_arg_t: \"Max {size (arg t), size t, size (arg u)} < size u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max {size (arg t), size t, size (arg u)} < size u", "using size_arg_lt sz_u_gt_t t_app u_app"], ["proof (prove)\nusing this:\n  is_App ?s \\<Longrightarrow> size (arg ?s) < size ?s\n  size t < size u\n  is_App t\n  is_App u\n\ngoal (1 subgoal):\n 1. Max {size (arg t), size t, size (arg u)} < size u", "by fastforce"], ["proof (state)\nthis:\n  Max {size (arg t), size t, size (arg u)} < size u\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       args s = a # list \\<Longrightarrow>\n       extf f (>\\<^sub>t) (args u) (args s)", "have \"{#size (arg u), size t, size (arg t)#} < {#size u, size t, size s#}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {#size (arg u), size t, size (arg t)#} < {#size u, size t, size s#}", "using max_sz_arg_u_t_arg_t"], ["proof (prove)\nusing this:\n  Max {size (arg t), size t, size (arg u)} < size u\n\ngoal (1 subgoal):\n 1. {#size (arg u), size t, size (arg t)#} < {#size u, size t, size s#}", "by (simp add: Max_lt_imp_lt_mset insert_commute max_sz_u_t_s)"], ["proof (state)\nthis:\n  {#size (arg u), size t, size (arg t)#} < {#size u, size t, size s#}\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       args s = a # list \\<Longrightarrow>\n       extf f (>\\<^sub>t) (args u) (args s)", "hence arg_u_gt_arg_t: \"arg u >\\<^sub>t arg t\""], ["proof (prove)\nusing this:\n  {#size (arg u), size t, size (arg t)#} < {#size u, size t, size s#}\n\ngoal (1 subgoal):\n 1. arg u >\\<^sub>t arg t", "using ih[OF _ wary_arg_u wary_t wary_arg_t] args_Nil_iff_is_Hd gt_arg\n                  gt_unary_t_s(3) gt_unary_u_t(5) wary_t"], ["proof (prove)\nusing this:\n  {#size (arg u), size t, size (arg t)#} < {#size u, size t, size s#}\n  \\<lbrakk>{#size (arg u), size t, size (arg t)#}\n           < {#size u, size t, size s#};\n   arg u >\\<^sub>t t; t >\\<^sub>t arg t\\<rbrakk>\n  \\<Longrightarrow> arg u >\\<^sub>t arg t\n  (args ?s = []) = is_Hd ?s\n  \\<lbrakk>wary ?s; is_App ?s\\<rbrakk> \\<Longrightarrow> ?s >\\<^sub>t arg ?s\n  num_args t = 1\n  arg u \\<ge>\\<^sub>t t\n  wary t\n\ngoal (1 subgoal):\n 1. arg u >\\<^sub>t arg t", "by force"], ["proof (state)\nthis:\n  arg u >\\<^sub>t arg t\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       args s = a # list \\<Longrightarrow>\n       extf f (>\\<^sub>t) (args u) (args s)", "have max_sz_arg_s_s_arg_t: \"Max {size (arg s), size s, size (arg t)} < size u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Max {size (arg s), size s, size (arg t)} < size u", "using s_app t_app size_arg_lt sz_t_gt_s sz_u_gt_t"], ["proof (prove)\nusing this:\n  is_App s\n  is_App t\n  is_App ?s \\<Longrightarrow> size (arg ?s) < size ?s\n  size s < size t\n  size t < size u\n\ngoal (1 subgoal):\n 1. Max {size (arg s), size s, size (arg t)} < size u", "by force"], ["proof (state)\nthis:\n  Max {size (arg s), size s, size (arg t)} < size u\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       args s = a # list \\<Longrightarrow>\n       extf f (>\\<^sub>t) (args u) (args s)", "have \"{#size (arg t), size s, size (arg s)#} < {#size u, size t, size s#}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {#size (arg t), size s, size (arg s)#} < {#size u, size t, size s#}", "by (meson add_mset_lt_lt_lt less_trans mset_lt_single_iff s_app size_arg_lt\n                  sz_t_gt_s sz_u_gt_t t_app)"], ["proof (state)\nthis:\n  {#size (arg t), size s, size (arg s)#} < {#size u, size t, size s#}\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       args s = a # list \\<Longrightarrow>\n       extf f (>\\<^sub>t) (args u) (args s)", "hence arg_t_gt_arg_s: \"arg t >\\<^sub>t arg s\""], ["proof (prove)\nusing this:\n  {#size (arg t), size s, size (arg s)#} < {#size u, size t, size s#}\n\ngoal (1 subgoal):\n 1. arg t >\\<^sub>t arg s", "using ih[OF _ wary_arg_t wary_s wary_arg_s]\n                  gt_unary_t_s(5) gt_arg args_Nil_iff_is_Hd args_s wary_s"], ["proof (prove)\nusing this:\n  {#size (arg t), size s, size (arg s)#} < {#size u, size t, size s#}\n  \\<lbrakk>{#size (arg t), size s, size (arg s)#}\n           < {#size u, size t, size s#};\n   arg t >\\<^sub>t s; s >\\<^sub>t arg s\\<rbrakk>\n  \\<Longrightarrow> arg t >\\<^sub>t arg s\n  arg t \\<ge>\\<^sub>t s\n  \\<lbrakk>wary ?s; is_App ?s\\<rbrakk> \\<Longrightarrow> ?s >\\<^sub>t arg ?s\n  (args ?s = []) = is_Hd ?s\n  args s = sa # ss\n  wary s\n\ngoal (1 subgoal):\n 1. arg t >\\<^sub>t arg s", "by force"], ["proof (state)\nthis:\n  arg t >\\<^sub>t arg s\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       args s = a # list \\<Longrightarrow>\n       extf f (>\\<^sub>t) (args u) (args s)", "have \"arg u >\\<^sub>t arg s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arg u >\\<^sub>t arg s", "using ih[of \"arg u\" \"arg t\" \"arg s\"] arg_u_gt_arg_t arg_t_gt_arg_s"], ["proof (prove)\nusing this:\n  \\<lbrakk>{#size (arg u), size (arg t), size (arg s)#}\n           < {#size u, size t, size s#};\n   wary (arg u); wary (arg t); wary (arg s); arg u >\\<^sub>t arg t;\n   arg t >\\<^sub>t arg s\\<rbrakk>\n  \\<Longrightarrow> arg u >\\<^sub>t arg s\n  arg u >\\<^sub>t arg t\n  arg t >\\<^sub>t arg s\n\ngoal (1 subgoal):\n 1. arg u >\\<^sub>t arg s", "by (simp add: add_mset_lt_le_lt less_imp_le_nat s_app size_arg_lt t_app u_app\n                  wary_arg_s wary_arg_t wary_arg_u)"], ["proof (state)\nthis:\n  arg u >\\<^sub>t arg s\n\ngoal (1 subgoal):\n 1. \\<And>a list.\n       args s = a # list \\<Longrightarrow>\n       extf f (>\\<^sub>t) (args u) (args s)", "thus ?thesis"], ["proof (prove)\nusing this:\n  arg u >\\<^sub>t arg s\n\ngoal (1 subgoal):\n 1. extf f (>\\<^sub>t) (args u) (args s)", "unfolding args_u args_s ss sa"], ["proof (prove)\nusing this:\n  arg u >\\<^sub>t arg s\n\ngoal (1 subgoal):\n 1. extf f (>\\<^sub>t) [arg u] [arg s]", "by (metis extf_singleton gt_irrefl wary_arg_u)"], ["proof (state)\nthis:\n  extf f (>\\<^sub>t) (args u) (args s)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  extf ?f (>\\<^sub>t) (args u) (args s)\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "have ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. u >\\<^sub>t s", "by (rule gt_same[OF vars_u_s wt_u_s hd_u_eq_s]) (simp add: extf)"], ["proof (state)\nthis:\n  u >\\<^sub>t s\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "}"], ["proof (state)\nthis:\n  head u = head s \\<Longrightarrow> u >\\<^sub>t s\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "moreover"], ["proof (state)\nthis:\n  head u = head s \\<Longrightarrow> u >\\<^sub>t s\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "{"], ["proof (state)\nthis:\n  head u = head s \\<Longrightarrow> u >\\<^sub>t s\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "assume \"head u >\\<^sub>h\\<^sub>d head s\""], ["proof (state)\nthis:\n  head u >\\<^sub>h\\<^sub>d head s\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "hence ?thesis"], ["proof (prove)\nusing this:\n  head u >\\<^sub>h\\<^sub>d head s\n\ngoal (1 subgoal):\n 1. u >\\<^sub>t s", "by (rule gt_diff[OF vars_u_s wt_u_s])"], ["proof (state)\nthis:\n  u >\\<^sub>t s\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "}"], ["proof (state)\nthis:\n  head u >\\<^sub>h\\<^sub>d head s \\<Longrightarrow> u >\\<^sub>t s\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "moreover"], ["proof (state)\nthis:\n  head u >\\<^sub>h\\<^sub>d head s \\<Longrightarrow> u >\\<^sub>t s\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "{"], ["proof (state)\nthis:\n  head u >\\<^sub>h\\<^sub>d head s \\<Longrightarrow> u >\\<^sub>t s\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "assume \"head s >\\<^sub>h\\<^sub>d head u\""], ["proof (state)\nthis:\n  head s >\\<^sub>h\\<^sub>d head u\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "hence False"], ["proof (prove)\nusing this:\n  head s >\\<^sub>h\\<^sub>d head u\n\ngoal (1 subgoal):\n 1. False", "using gt_hd_def gt_hd_irrefl gt_sym_antisym gt_unary_u_t(4) unary_wt_sym_0_gt"], ["proof (prove)\nusing this:\n  head s >\\<^sub>h\\<^sub>d head u\n  (?\\<xi> >\\<^sub>h\\<^sub>d ?\\<zeta>) =\n  (\\<forall>g\\<in>local.ground_heads ?\\<xi>.\n      \\<forall>f\\<in>local.ground_heads ?\\<zeta>. g >\\<^sub>s f)\n  \\<not> ?\\<zeta> >\\<^sub>h\\<^sub>d ?\\<zeta>\n  ?f >\\<^sub>s ?g \\<Longrightarrow> \\<not> ?g >\\<^sub>s ?f\n  \\<exists>f\\<in>local.ground_heads (head u).\n     arity_sym f = 1 \\<and> wt_sym f = 0\n  \\<lbrakk>arity_sym ?f = 1; wt_sym ?f = 0\\<rbrakk>\n  \\<Longrightarrow> ?f >\\<^sub>s ?g \\<or> ?g = ?f\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "}"], ["proof (state)\nthis:\n  head s >\\<^sub>h\\<^sub>d head u \\<Longrightarrow> False\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "moreover"], ["proof (state)\nthis:\n  head s >\\<^sub>h\\<^sub>d head u \\<Longrightarrow> False\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "{"], ["proof (state)\nthis:\n  head s >\\<^sub>h\\<^sub>d head u \\<Longrightarrow> False\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "assume \"\\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head s\""], ["proof (state)\nthis:\n  \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head s\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "hence ?thesis"], ["proof (prove)\nusing this:\n  \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head s\n\ngoal (1 subgoal):\n 1. u >\\<^sub>t s", "by (rule gt_unary[OF wt_u_s _ gt_unary_u_t(3,4) arg_u_ge_s])"], ["proof (state)\nthis:\n  u >\\<^sub>t s\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "}"], ["proof (state)\nthis:\n  \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head s \\<Longrightarrow>\n  u >\\<^sub>t s\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "ultimately"], ["proof (chain)\npicking this:\n  head u = head s \\<Longrightarrow> u >\\<^sub>t s\n  head u >\\<^sub>h\\<^sub>d head s \\<Longrightarrow> u >\\<^sub>t s\n  head s >\\<^sub>h\\<^sub>d head u \\<Longrightarrow> False\n  \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head s \\<Longrightarrow>\n  u >\\<^sub>t s", "have ?thesis"], ["proof (prove)\nusing this:\n  head u = head s \\<Longrightarrow> u >\\<^sub>t s\n  head u >\\<^sub>h\\<^sub>d head s \\<Longrightarrow> u >\\<^sub>t s\n  head s >\\<^sub>h\\<^sub>d head u \\<Longrightarrow> False\n  \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head s \\<Longrightarrow>\n  u >\\<^sub>t s\n\ngoal (1 subgoal):\n 1. u >\\<^sub>t s", "unfolding comp_hd_def"], ["proof (prove)\nusing this:\n  head u = head s \\<Longrightarrow> u >\\<^sub>t s\n  head u >\\<^sub>h\\<^sub>d head s \\<Longrightarrow> u >\\<^sub>t s\n  head s >\\<^sub>h\\<^sub>d head u \\<Longrightarrow> False\n  \\<not> (head u = head s \\<or>\n          head u >\\<^sub>h\\<^sub>d head s \\<or>\n          head s >\\<^sub>h\\<^sub>d head u) \\<Longrightarrow>\n  u >\\<^sub>t s\n\ngoal (1 subgoal):\n 1. u >\\<^sub>t s", "by sat"], ["proof (state)\nthis:\n  u >\\<^sub>t s\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "}"], ["proof (state)\nthis:\n  \\<lbrakk>size t < size u; size s < size t\\<rbrakk>\n  \\<Longrightarrow> u >\\<^sub>t s\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "ultimately"], ["proof (chain)\npicking this:\n  size (arg u) < size t \\<Longrightarrow> u >\\<^sub>t s\n  size (arg t) < size s \\<Longrightarrow> u >\\<^sub>t s\n  \\<lbrakk>size t < size u; size s < size t\\<rbrakk>\n  \\<Longrightarrow> u >\\<^sub>t s", "show ?thesis"], ["proof (prove)\nusing this:\n  size (arg u) < size t \\<Longrightarrow> u >\\<^sub>t s\n  size (arg t) < size s \\<Longrightarrow> u >\\<^sub>t s\n  \\<lbrakk>size t < size u; size s < size t\\<rbrakk>\n  \\<Longrightarrow> u >\\<^sub>t s\n\ngoal (1 subgoal):\n 1. u >\\<^sub>t s", "by (metis args_Nil_iff_is_Hd dual_order.strict_trans2 gt_unary_t_s(3) gt_unary_u_t(3)\n            length_0_conv not_le_imp_less size_arg_lt zero_neq_one)"], ["proof (state)\nthis:\n  u >\\<^sub>t s\n\ngoal (3 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "case gt_diff_u_t: gt_diff"], ["proof (state)\nthis:\n  vars_mset t \\<subseteq># vars_mset u\n  wt u = wt t\n  head u >\\<^sub>h\\<^sub>d head t\n\ngoal (3 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "have False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "using gt_diff_u_t(3) gt_hd_def gt_hd_irrefl gt_sym_antisym gt_unary_t_s(4)\n            unary_wt_sym_0_gt"], ["proof (prove)\nusing this:\n  head u >\\<^sub>h\\<^sub>d head t\n  (?\\<xi> >\\<^sub>h\\<^sub>d ?\\<zeta>) =\n  (\\<forall>g\\<in>local.ground_heads ?\\<xi>.\n      \\<forall>f\\<in>local.ground_heads ?\\<zeta>. g >\\<^sub>s f)\n  \\<not> ?\\<zeta> >\\<^sub>h\\<^sub>d ?\\<zeta>\n  ?f >\\<^sub>s ?g \\<Longrightarrow> \\<not> ?g >\\<^sub>s ?f\n  \\<exists>f\\<in>local.ground_heads (head t).\n     arity_sym f = 1 \\<and> wt_sym f = 0\n  \\<lbrakk>arity_sym ?f = 1; wt_sym ?f = 0\\<rbrakk>\n  \\<Longrightarrow> ?f >\\<^sub>s ?g \\<or> ?g = ?f\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal (3 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. u >\\<^sub>t s", "by sat"], ["proof (state)\nthis:\n  u >\\<^sub>t s\n\ngoal (2 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "case gt_same_u_t: gt_same"], ["proof (state)\nthis:\n  vars_mset t \\<subseteq># vars_mset u\n  wt u = wt t\n  head u = head t\n  \\<forall>f\\<in>local.ground_heads (head u).\n     extf f (>\\<^sub>t) (args u) (args t)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "have hd_u_ncomp_s: \"\\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head s", "by (rule gt_unary_t_s(2)[folded gt_same_u_t(3)])"], ["proof (state)\nthis:\n  \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head s\n\ngoal (2 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "have \"num_args u \\<le> 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. num_args u \\<le> 1", "by (metis enat_ord_simps(1) ground_heads_arity gt_same_u_t(3) gt_unary_t_s(4) one_enat_def\n            order_trans wary_num_args_le_arity_head wary_u)"], ["proof (state)\nthis:\n  num_args u \\<le> 1\n\ngoal (2 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "hence nargs_u: \"num_args u = 1\""], ["proof (prove)\nusing this:\n  num_args u \\<le> 1\n\ngoal (1 subgoal):\n 1. num_args u = 1", "by (cases \"args u\",\n            metis Hd_head_id \\<delta>_eq_\\<epsilon> append_Nil args.simps(2) gt_same_u_t(3,4) gt_unary_t_s(3,4)\n              head_fun list.size(3) not_extf_gt_nil_singleton_if_\\<delta>_eq_\\<epsilon> one_arg_imp_Hd\n              tm.collapse(2)[OF t_app] wary_arg_t,\n            simp)"], ["proof (state)\nthis:\n  num_args u = 1\n\ngoal (2 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "have \"arg u >\\<^sub>t arg t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. arg u >\\<^sub>t arg t", "by (metis extf_singleton[THEN iffD1] append_Nil args.simps args_Nil_iff_is_Hd\n            comp_hd_def gt_hd_def gt_irrefl gt_same_u_t(3,4) gt_unary_t_s(2,3) head_fun\n            length_0_conv nargs_u one_arg_imp_Hd t_app tm.collapse(2) u_gt_t wary_u)"], ["proof (state)\nthis:\n  arg u >\\<^sub>t arg t\n\ngoal (2 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "hence \"arg u >\\<^sub>t s\""], ["proof (prove)\nusing this:\n  arg u >\\<^sub>t arg t\n\ngoal (1 subgoal):\n 1. arg u >\\<^sub>t s", "using ih[OF _ wary_arg_u wary_arg_t wary_s] gt_unary_t_s(5)"], ["proof (prove)\nusing this:\n  arg u >\\<^sub>t arg t\n  \\<lbrakk>{#size (arg u), size (arg t), size s#}\n           < {#size u, size t, size s#};\n   arg u >\\<^sub>t arg t; arg t >\\<^sub>t s\\<rbrakk>\n  \\<Longrightarrow> arg u >\\<^sub>t s\n  arg t \\<ge>\\<^sub>t s\n\ngoal (1 subgoal):\n 1. arg u >\\<^sub>t s", "by (metis add_mset_lt_left_lt add_mset_lt_lt_lt args_Nil_iff_is_Hd list.size(3) nargs_u\n            size_arg_lt t_app zero_neq_one)"], ["proof (state)\nthis:\n  arg u >\\<^sub>t s\n\ngoal (2 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "hence arg_u_ge_s: \"arg u \\<ge>\\<^sub>t s\""], ["proof (prove)\nusing this:\n  arg u >\\<^sub>t s\n\ngoal (1 subgoal):\n 1. arg u \\<ge>\\<^sub>t s", "by sat"], ["proof (state)\nthis:\n  arg u \\<ge>\\<^sub>t s\n\ngoal (2 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. u >\\<^sub>t s", "by (rule gt_unary[OF wt_u_s hd_u_ncomp_s nargs_u _ arg_u_ge_s])\n            (simp add: gt_same_u_t(3) gt_unary_t_s(4))"], ["proof (state)\nthis:\n  u >\\<^sub>t s\n\ngoal (1 subgoal):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "qed (simp add: wt_u_t)"], ["proof (state)\nthis:\n  u >\\<^sub>t s\n\ngoal (3 subgoals):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt s < wt t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t >\\<^sub>h\\<^sub>d head s\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head t).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt s < wt t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t >\\<^sub>h\\<^sub>d head s\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head t).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "case gt_diff_t_s: gt_diff"], ["proof (state)\nthis:\n  vars_mset s \\<subseteq># vars_mset t\n  wt t = wt s\n  head t >\\<^sub>h\\<^sub>d head s\n\ngoal (3 subgoals):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt s < wt t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t >\\<^sub>h\\<^sub>d head s\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head t).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. u >\\<^sub>t s", "using u_gt_t"], ["proof (prove)\nusing this:\n  u >\\<^sub>t t\n\ngoal (1 subgoal):\n 1. u >\\<^sub>t s", "proof cases"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "case gt_unary_u_t: gt_unary"], ["proof (state)\nthis:\n  wt u = wt t\n  \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t\n  num_args u = 1\n  \\<exists>f\\<in>local.ground_heads (head u).\n     arity_sym f = 1 \\<and> wt_sym f = 0\n  arg u \\<ge>\\<^sub>t t\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "have \"is_App u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_App u", "by (metis args_Nil_iff_is_Hd gt_unary_u_t(3) length_greater_0_conv less_numeral_extra(1))"], ["proof (state)\nthis:\n  is_App u\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "hence \"arg u >\\<^sub>t s\""], ["proof (prove)\nusing this:\n  is_App u\n\ngoal (1 subgoal):\n 1. arg u >\\<^sub>t s", "using ih[of \"arg u\" t s] gt_unary_u_t(5) t_gt_s size_arg_lt wary_arg_u wary_s wary_t"], ["proof (prove)\nusing this:\n  is_App u\n  \\<lbrakk>{#size (arg u), size t, size s#} < {#size u, size t, size s#};\n   wary (arg u); wary t; wary s; arg u >\\<^sub>t t; t >\\<^sub>t s\\<rbrakk>\n  \\<Longrightarrow> arg u >\\<^sub>t s\n  arg u \\<ge>\\<^sub>t t\n  t >\\<^sub>t s\n  is_App ?s \\<Longrightarrow> size (arg ?s) < size ?s\n  wary (arg u)\n  wary s\n  wary t\n\ngoal (1 subgoal):\n 1. arg u >\\<^sub>t s", "by force"], ["proof (state)\nthis:\n  arg u >\\<^sub>t s\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "hence arg_u_ge_s: \"arg u \\<ge>\\<^sub>t s\""], ["proof (prove)\nusing this:\n  arg u >\\<^sub>t s\n\ngoal (1 subgoal):\n 1. arg u \\<ge>\\<^sub>t s", "by sat"], ["proof (state)\nthis:\n  arg u \\<ge>\\<^sub>t s\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "{"], ["proof (state)\nthis:\n  arg u \\<ge>\\<^sub>t s\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "assume \"head u = head s\""], ["proof (state)\nthis:\n  head u = head s\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "hence False"], ["proof (prove)\nusing this:\n  head u = head s\n\ngoal (1 subgoal):\n 1. False", "using gt_diff_t_s(3) gt_unary_u_t(2)"], ["proof (prove)\nusing this:\n  head u = head s\n  head t >\\<^sub>h\\<^sub>d head s\n  \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t\n\ngoal (1 subgoal):\n 1. False", "unfolding comp_hd_def"], ["proof (prove)\nusing this:\n  head u = head s\n  head t >\\<^sub>h\\<^sub>d head s\n  \\<not> (head u = head t \\<or>\n          head u >\\<^sub>h\\<^sub>d head t \\<or>\n          head t >\\<^sub>h\\<^sub>d head u)\n\ngoal (1 subgoal):\n 1. False", "by force"], ["proof (state)\nthis:\n  False\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "}"], ["proof (state)\nthis:\n  head u = head s \\<Longrightarrow> False\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "moreover"], ["proof (state)\nthis:\n  head u = head s \\<Longrightarrow> False\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "{"], ["proof (state)\nthis:\n  head u = head s \\<Longrightarrow> False\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "assume \"head s >\\<^sub>h\\<^sub>d head u\""], ["proof (state)\nthis:\n  head s >\\<^sub>h\\<^sub>d head u\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "hence False"], ["proof (prove)\nusing this:\n  head s >\\<^sub>h\\<^sub>d head u\n\ngoal (1 subgoal):\n 1. False", "using gt_hd_def gt_hd_irrefl gt_sym_antisym gt_unary_u_t(4) unary_wt_sym_0_gt"], ["proof (prove)\nusing this:\n  head s >\\<^sub>h\\<^sub>d head u\n  (?\\<xi> >\\<^sub>h\\<^sub>d ?\\<zeta>) =\n  (\\<forall>g\\<in>local.ground_heads ?\\<xi>.\n      \\<forall>f\\<in>local.ground_heads ?\\<zeta>. g >\\<^sub>s f)\n  \\<not> ?\\<zeta> >\\<^sub>h\\<^sub>d ?\\<zeta>\n  ?f >\\<^sub>s ?g \\<Longrightarrow> \\<not> ?g >\\<^sub>s ?f\n  \\<exists>f\\<in>local.ground_heads (head u).\n     arity_sym f = 1 \\<and> wt_sym f = 0\n  \\<lbrakk>arity_sym ?f = 1; wt_sym ?f = 0\\<rbrakk>\n  \\<Longrightarrow> ?f >\\<^sub>s ?g \\<or> ?g = ?f\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "}"], ["proof (state)\nthis:\n  head s >\\<^sub>h\\<^sub>d head u \\<Longrightarrow> False\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "moreover"], ["proof (state)\nthis:\n  head s >\\<^sub>h\\<^sub>d head u \\<Longrightarrow> False\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "{"], ["proof (state)\nthis:\n  head s >\\<^sub>h\\<^sub>d head u \\<Longrightarrow> False\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "assume \"head u >\\<^sub>h\\<^sub>d head s\""], ["proof (state)\nthis:\n  head u >\\<^sub>h\\<^sub>d head s\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "hence ?thesis"], ["proof (prove)\nusing this:\n  head u >\\<^sub>h\\<^sub>d head s\n\ngoal (1 subgoal):\n 1. u >\\<^sub>t s", "by (rule gt_diff[OF vars_u_s wt_u_s])"], ["proof (state)\nthis:\n  u >\\<^sub>t s\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "}"], ["proof (state)\nthis:\n  head u >\\<^sub>h\\<^sub>d head s \\<Longrightarrow> u >\\<^sub>t s\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "moreover"], ["proof (state)\nthis:\n  head u >\\<^sub>h\\<^sub>d head s \\<Longrightarrow> u >\\<^sub>t s\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "{"], ["proof (state)\nthis:\n  head u >\\<^sub>h\\<^sub>d head s \\<Longrightarrow> u >\\<^sub>t s\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "assume \"\\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head s\""], ["proof (state)\nthis:\n  \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head s\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "hence ?thesis"], ["proof (prove)\nusing this:\n  \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head s\n\ngoal (1 subgoal):\n 1. u >\\<^sub>t s", "by (rule gt_unary[OF wt_u_s _ gt_unary_u_t(3,4) arg_u_ge_s])"], ["proof (state)\nthis:\n  u >\\<^sub>t s\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "}"], ["proof (state)\nthis:\n  \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head s \\<Longrightarrow>\n  u >\\<^sub>t s\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "ultimately"], ["proof (chain)\npicking this:\n  head u = head s \\<Longrightarrow> False\n  head s >\\<^sub>h\\<^sub>d head u \\<Longrightarrow> False\n  head u >\\<^sub>h\\<^sub>d head s \\<Longrightarrow> u >\\<^sub>t s\n  \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head s \\<Longrightarrow>\n  u >\\<^sub>t s", "show ?thesis"], ["proof (prove)\nusing this:\n  head u = head s \\<Longrightarrow> False\n  head s >\\<^sub>h\\<^sub>d head u \\<Longrightarrow> False\n  head u >\\<^sub>h\\<^sub>d head s \\<Longrightarrow> u >\\<^sub>t s\n  \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head s \\<Longrightarrow>\n  u >\\<^sub>t s\n\ngoal (1 subgoal):\n 1. u >\\<^sub>t s", "unfolding comp_hd_def"], ["proof (prove)\nusing this:\n  head u = head s \\<Longrightarrow> False\n  head s >\\<^sub>h\\<^sub>d head u \\<Longrightarrow> False\n  head u >\\<^sub>h\\<^sub>d head s \\<Longrightarrow> u >\\<^sub>t s\n  \\<not> (head u = head s \\<or>\n          head u >\\<^sub>h\\<^sub>d head s \\<or>\n          head s >\\<^sub>h\\<^sub>d head u) \\<Longrightarrow>\n  u >\\<^sub>t s\n\ngoal (1 subgoal):\n 1. u >\\<^sub>t s", "by sat"], ["proof (state)\nthis:\n  u >\\<^sub>t s\n\ngoal (3 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "case gt_diff_u_t: gt_diff"], ["proof (state)\nthis:\n  vars_mset t \\<subseteq># vars_mset u\n  wt u = wt t\n  head u >\\<^sub>h\\<^sub>d head t\n\ngoal (3 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "have \"head u >\\<^sub>h\\<^sub>d head s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. head u >\\<^sub>h\\<^sub>d head s", "using gt_diff_u_t(3) gt_diff_t_s(3) gt_hd_trans"], ["proof (prove)\nusing this:\n  head u >\\<^sub>h\\<^sub>d head t\n  head t >\\<^sub>h\\<^sub>d head s\n  \\<lbrakk>?\\<chi> >\\<^sub>h\\<^sub>d ?\\<xi>;\n   ?\\<xi> >\\<^sub>h\\<^sub>d ?\\<zeta>\\<rbrakk>\n  \\<Longrightarrow> ?\\<chi> >\\<^sub>h\\<^sub>d ?\\<zeta>\n\ngoal (1 subgoal):\n 1. head u >\\<^sub>h\\<^sub>d head s", "by blast"], ["proof (state)\nthis:\n  head u >\\<^sub>h\\<^sub>d head s\n\ngoal (3 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "thus ?thesis"], ["proof (prove)\nusing this:\n  head u >\\<^sub>h\\<^sub>d head s\n\ngoal (1 subgoal):\n 1. u >\\<^sub>t s", "by (rule gt_diff[OF vars_u_s wt_u_s])"], ["proof (state)\nthis:\n  u >\\<^sub>t s\n\ngoal (2 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "case gt_same_u_t: gt_same"], ["proof (state)\nthis:\n  vars_mset t \\<subseteq># vars_mset u\n  wt u = wt t\n  head u = head t\n  \\<forall>f\\<in>local.ground_heads (head u).\n     extf f (>\\<^sub>t) (args u) (args t)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "have \"head u >\\<^sub>h\\<^sub>d head s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. head u >\\<^sub>h\\<^sub>d head s", "using gt_diff_t_s(3) gt_same_u_t(3)"], ["proof (prove)\nusing this:\n  head t >\\<^sub>h\\<^sub>d head s\n  head u = head t\n\ngoal (1 subgoal):\n 1. head u >\\<^sub>h\\<^sub>d head s", "by simp"], ["proof (state)\nthis:\n  head u >\\<^sub>h\\<^sub>d head s\n\ngoal (2 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "thus ?thesis"], ["proof (prove)\nusing this:\n  head u >\\<^sub>h\\<^sub>d head s\n\ngoal (1 subgoal):\n 1. u >\\<^sub>t s", "by (rule gt_diff[OF vars_u_s wt_u_s])"], ["proof (state)\nthis:\n  u >\\<^sub>t s\n\ngoal (1 subgoal):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "qed (simp add: wt_u_t)"], ["proof (state)\nthis:\n  u >\\<^sub>t s\n\ngoal (2 subgoals):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt s < wt t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head t).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt s < wt t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head t).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "case gt_same_t_s: gt_same"], ["proof (state)\nthis:\n  vars_mset s \\<subseteq># vars_mset t\n  wt t = wt s\n  head t = head s\n  \\<forall>f\\<in>local.ground_heads (head t).\n     extf f (>\\<^sub>t) (args t) (args s)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt s < wt t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head t).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. u >\\<^sub>t s", "using u_gt_t"], ["proof (prove)\nusing this:\n  u >\\<^sub>t t\n\ngoal (1 subgoal):\n 1. u >\\<^sub>t s", "proof cases"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "case gt_unary_u_t: gt_unary"], ["proof (state)\nthis:\n  wt u = wt t\n  \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t\n  num_args u = 1\n  \\<exists>f\\<in>local.ground_heads (head u).\n     arity_sym f = 1 \\<and> wt_sym f = 0\n  arg u \\<ge>\\<^sub>t t\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "have \"is_App u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. is_App u", "by (metis args_Nil_iff_is_Hd gt_unary_u_t(3) length_greater_0_conv less_numeral_extra(1))"], ["proof (state)\nthis:\n  is_App u\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "hence \"arg u >\\<^sub>t s\""], ["proof (prove)\nusing this:\n  is_App u\n\ngoal (1 subgoal):\n 1. arg u >\\<^sub>t s", "using ih[of \"arg u\" t s] gt_unary_u_t(5) t_gt_s size_arg_lt wary_arg_u wary_s wary_t"], ["proof (prove)\nusing this:\n  is_App u\n  \\<lbrakk>{#size (arg u), size t, size s#} < {#size u, size t, size s#};\n   wary (arg u); wary t; wary s; arg u >\\<^sub>t t; t >\\<^sub>t s\\<rbrakk>\n  \\<Longrightarrow> arg u >\\<^sub>t s\n  arg u \\<ge>\\<^sub>t t\n  t >\\<^sub>t s\n  is_App ?s \\<Longrightarrow> size (arg ?s) < size ?s\n  wary (arg u)\n  wary s\n  wary t\n\ngoal (1 subgoal):\n 1. arg u >\\<^sub>t s", "by force"], ["proof (state)\nthis:\n  arg u >\\<^sub>t s\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "hence arg_u_ge_s: \"arg u \\<ge>\\<^sub>t s\""], ["proof (prove)\nusing this:\n  arg u >\\<^sub>t s\n\ngoal (1 subgoal):\n 1. arg u \\<ge>\\<^sub>t s", "by sat"], ["proof (state)\nthis:\n  arg u \\<ge>\\<^sub>t s\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "have \"\\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head s", "using gt_same_t_s(3) gt_unary_u_t(2)"], ["proof (prove)\nusing this:\n  head t = head s\n  \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t\n\ngoal (1 subgoal):\n 1. \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head s", "by simp"], ["proof (state)\nthis:\n  \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head s\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>wt u = wt t; \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head t;\n     num_args u = 1;\n     \\<exists>f\\<in>local.ground_heads (head u).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg u \\<ge>\\<^sub>t t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 4. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<not> head u \\<le>\\<ge>\\<^sub>h\\<^sub>d head s\n\ngoal (1 subgoal):\n 1. u >\\<^sub>t s", "by (rule gt_unary[OF wt_u_s _ gt_unary_u_t(3,4) arg_u_ge_s])"], ["proof (state)\nthis:\n  u >\\<^sub>t s\n\ngoal (3 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "case gt_diff_u_t: gt_diff"], ["proof (state)\nthis:\n  vars_mset t \\<subseteq># vars_mset u\n  wt u = wt t\n  head u >\\<^sub>h\\<^sub>d head t\n\ngoal (3 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "have \"head u >\\<^sub>h\\<^sub>d head s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. head u >\\<^sub>h\\<^sub>d head s", "using gt_diff_u_t(3) gt_same_t_s(3)"], ["proof (prove)\nusing this:\n  head u >\\<^sub>h\\<^sub>d head t\n  head t = head s\n\ngoal (1 subgoal):\n 1. head u >\\<^sub>h\\<^sub>d head s", "by simp"], ["proof (state)\nthis:\n  head u >\\<^sub>h\\<^sub>d head s\n\ngoal (3 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u >\\<^sub>h\\<^sub>d head t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 3. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "thus ?thesis"], ["proof (prove)\nusing this:\n  head u >\\<^sub>h\\<^sub>d head s\n\ngoal (1 subgoal):\n 1. u >\\<^sub>t s", "by (rule gt_diff[OF vars_u_s wt_u_s])"], ["proof (state)\nthis:\n  u >\\<^sub>t s\n\ngoal (2 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "case gt_same_u_t: gt_same"], ["proof (state)\nthis:\n  vars_mset t \\<subseteq># vars_mset u\n  wt u = wt t\n  head u = head t\n  \\<forall>f\\<in>local.ground_heads (head u).\n     extf f (>\\<^sub>t) (args u) (args t)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "have hd_u_s: \"head u = head s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. head u = head s", "by (simp only: gt_same_t_s(3) gt_same_u_t(3))"], ["proof (state)\nthis:\n  head u = head s\n\ngoal (2 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "let ?S = \"set (args u) \\<union> set (args t) \\<union> set (args s)\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "have gt_trans_args: \"\\<forall>ua \\<in> ?S. \\<forall>ta \\<in> ?S. \\<forall>sa \\<in> ?S. ua >\\<^sub>t ta \\<longrightarrow> ta >\\<^sub>t sa \\<longrightarrow> ua >\\<^sub>t sa\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>uaa\\<in>set (args u) \\<union> set (args t) \\<union>\n                     set (args s).\n       \\<forall>taa\\<in>set (args u) \\<union> set (args t) \\<union>\n                        set (args s).\n          \\<forall>sa\\<in>set (args u) \\<union> set (args t) \\<union>\n                          set (args s).\n             uaa >\\<^sub>t taa \\<longrightarrow>\n             taa >\\<^sub>t sa \\<longrightarrow> uaa >\\<^sub>t sa", "proof clarify"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>uaa taa saa.\n       \\<lbrakk>uaa\n                \\<in> set (args u) \\<union> set (args t) \\<union>\n                      set (args s);\n        taa \\<in> set (args u) \\<union> set (args t) \\<union> set (args s);\n        saa \\<in> set (args u) \\<union> set (args t) \\<union> set (args s);\n        uaa >\\<^sub>t taa; taa >\\<^sub>t saa\\<rbrakk>\n       \\<Longrightarrow> uaa >\\<^sub>t saa", "fix sa ta ua"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>uaa taa saa.\n       \\<lbrakk>uaa\n                \\<in> set (args u) \\<union> set (args t) \\<union>\n                      set (args s);\n        taa \\<in> set (args u) \\<union> set (args t) \\<union> set (args s);\n        saa \\<in> set (args u) \\<union> set (args t) \\<union> set (args s);\n        uaa >\\<^sub>t taa; taa >\\<^sub>t saa\\<rbrakk>\n       \\<Longrightarrow> uaa >\\<^sub>t saa", "assume\n            ua_in: \"ua \\<in> ?S\" and ta_in: \"ta \\<in> ?S\" and sa_in: \"sa \\<in> ?S\" and\n            ua_gt_ta: \"ua >\\<^sub>t ta\" and ta_gt_sa: \"ta >\\<^sub>t sa\""], ["proof (state)\nthis:\n  ua \\<in> set (args u) \\<union> set (args t) \\<union> set (args s)\n  ta \\<in> set (args u) \\<union> set (args t) \\<union> set (args s)\n  sa \\<in> set (args u) \\<union> set (args t) \\<union> set (args s)\n  ua >\\<^sub>t ta\n  ta >\\<^sub>t sa\n\ngoal (1 subgoal):\n 1. \\<And>uaa taa saa.\n       \\<lbrakk>uaa\n                \\<in> set (args u) \\<union> set (args t) \\<union>\n                      set (args s);\n        taa \\<in> set (args u) \\<union> set (args t) \\<union> set (args s);\n        saa \\<in> set (args u) \\<union> set (args t) \\<union> set (args s);\n        uaa >\\<^sub>t taa; taa >\\<^sub>t saa\\<rbrakk>\n       \\<Longrightarrow> uaa >\\<^sub>t saa", "have wary_sa: \"wary sa\" and wary_ta: \"wary ta\" and wary_ua: \"wary ua\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wary sa &&& wary ta &&& wary ua", "using wary_args ua_in ta_in sa_in wary_u wary_t wary_s"], ["proof (prove)\nusing this:\n  \\<lbrakk>?s \\<in> set (args ?t); wary ?t\\<rbrakk>\n  \\<Longrightarrow> wary ?s\n  ua \\<in> set (args u) \\<union> set (args t) \\<union> set (args s)\n  ta \\<in> set (args u) \\<union> set (args t) \\<union> set (args s)\n  sa \\<in> set (args u) \\<union> set (args t) \\<union> set (args s)\n  wary u\n  wary t\n  wary s\n\ngoal (1 subgoal):\n 1. wary sa &&& wary ta &&& wary ua", "by blast+"], ["proof (state)\nthis:\n  wary sa\n  wary ta\n  wary ua\n\ngoal (1 subgoal):\n 1. \\<And>uaa taa saa.\n       \\<lbrakk>uaa\n                \\<in> set (args u) \\<union> set (args t) \\<union>\n                      set (args s);\n        taa \\<in> set (args u) \\<union> set (args t) \\<union> set (args s);\n        saa \\<in> set (args u) \\<union> set (args t) \\<union> set (args s);\n        uaa >\\<^sub>t taa; taa >\\<^sub>t saa\\<rbrakk>\n       \\<Longrightarrow> uaa >\\<^sub>t saa", "show \"ua >\\<^sub>t sa\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ua >\\<^sub>t sa", "by (auto intro!: ih[OF Max_lt_imp_lt_mset wary_ua wary_ta wary_sa ua_gt_ta ta_gt_sa])\n              (meson ua_in ta_in sa_in Un_iff max.strict_coboundedI1 max.strict_coboundedI2\n                 size_in_args)+"], ["proof (state)\nthis:\n  ua >\\<^sub>t sa\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<forall>uaa\\<in>set (args u) \\<union> set (args t) \\<union> set (args s).\n     \\<forall>taa\\<in>set (args u) \\<union> set (args t) \\<union>\n                      set (args s).\n        \\<forall>sa\\<in>set (args u) \\<union> set (args t) \\<union>\n                        set (args s).\n           uaa >\\<^sub>t taa \\<longrightarrow>\n           taa >\\<^sub>t sa \\<longrightarrow> uaa >\\<^sub>t sa\n\ngoal (2 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "have \"\\<forall>f \\<in> ground_heads (head u). extf f (>\\<^sub>t) (args u) (args s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>local.ground_heads (head u).\n       extf f (>\\<^sub>t) (args u) (args s)", "by (clarify, rule extf_trans_from_irrefl[of ?S _ \"args t\", OF _ _ _ _ _ gt_trans_args])\n            (auto simp: gt_same_u_t(3,4) gt_same_t_s(4) wary_args wary_u wary_t wary_s gt_irrefl)"], ["proof (state)\nthis:\n  \\<forall>f\\<in>local.ground_heads (head u).\n     extf f (>\\<^sub>t) (args u) (args s)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s\n 2. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt u = wt t;\n     head u = head t;\n     \\<forall>f\\<in>local.ground_heads (head u).\n        extf f (>\\<^sub>t) (args u) (args t)\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>f\\<in>local.ground_heads (head u).\n     extf f (>\\<^sub>t) (args u) (args s)\n\ngoal (1 subgoal):\n 1. u >\\<^sub>t s", "by (rule gt_same[OF vars_u_s wt_u_s hd_u_s])"], ["proof (state)\nthis:\n  u >\\<^sub>t s\n\ngoal (1 subgoal):\n 1. \\<lbrakk>vars_mset t \\<subseteq># vars_mset u; wt t < wt u\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "qed (simp add: wt_u_t)"], ["proof (state)\nthis:\n  u >\\<^sub>t s\n\ngoal (1 subgoal):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt s < wt t\\<rbrakk>\n    \\<Longrightarrow> u >\\<^sub>t s", "qed (simp add: wt_t_s)"], ["proof (state)\nthis:\n  u >\\<^sub>t s\n\ngoal (1 subgoal):\n 1. \\<And>a aa b.\n       \\<lbrakk>\\<And>ab ac ba.\n                   \\<lbrakk>{#size ab, size ac, size ba#}\n                            < {#size a, size aa, size b#};\n                    wary ab; wary ac; wary ba; ab >\\<^sub>t ac;\n                    ac >\\<^sub>t ba\\<rbrakk>\n                   \\<Longrightarrow> ab >\\<^sub>t ba;\n        wary a; wary aa; wary b; a >\\<^sub>t aa; aa >\\<^sub>t b\\<rbrakk>\n       \\<Longrightarrow> a >\\<^sub>t b", "}"], ["proof (state)\nthis:\n  \\<lbrakk>wt t = wt s; wt u = wt t\\<rbrakk> \\<Longrightarrow> u >\\<^sub>t s\n\ngoal (1 subgoal):\n 1. \\<And>a aa b.\n       \\<lbrakk>\\<And>ab ac ba.\n                   \\<lbrakk>{#size ab, size ac, size ba#}\n                            < {#size a, size aa, size b#};\n                    wary ab; wary ac; wary ba; ab >\\<^sub>t ac;\n                    ac >\\<^sub>t ba\\<rbrakk>\n                   \\<Longrightarrow> ab >\\<^sub>t ba;\n        wary a; wary aa; wary b; a >\\<^sub>t aa; aa >\\<^sub>t b\\<rbrakk>\n       \\<Longrightarrow> a >\\<^sub>t b", "thus \"u >\\<^sub>t s\""], ["proof (prove)\nusing this:\n  \\<lbrakk>wt t = wt s; wt u = wt t\\<rbrakk> \\<Longrightarrow> u >\\<^sub>t s\n\ngoal (1 subgoal):\n 1. u >\\<^sub>t s", "using vars_u_s wt_t_ge_s wt_u_ge_t"], ["proof (prove)\nusing this:\n  \\<lbrakk>wt t = wt s; wt u = wt t\\<rbrakk> \\<Longrightarrow> u >\\<^sub>t s\n  vars_mset s \\<subseteq># vars_mset u\n  wt s \\<le> wt t\n  wt t \\<le> wt u\n\ngoal (1 subgoal):\n 1. u >\\<^sub>t s", "by (force intro: gt_wt)"], ["proof (state)\nthis:\n  u >\\<^sub>t s\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma gt_antisym: \"wary s \\<Longrightarrow> wary t \\<Longrightarrow> t >\\<^sub>t s \\<Longrightarrow> \\<not> s >\\<^sub>t t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wary s; wary t; t >\\<^sub>t s\\<rbrakk>\n    \\<Longrightarrow> \\<not> s >\\<^sub>t t", "using gt_irrefl gt_trans"], ["proof (prove)\nusing this:\n  wary ?s \\<Longrightarrow> \\<not> ?s >\\<^sub>t ?s\n  \\<lbrakk>wary ?u; wary ?t; wary ?s; ?u >\\<^sub>t ?t;\n   ?t >\\<^sub>t ?s\\<rbrakk>\n  \\<Longrightarrow> ?u >\\<^sub>t ?s\n\ngoal (1 subgoal):\n 1. \\<lbrakk>wary s; wary t; t >\\<^sub>t s\\<rbrakk>\n    \\<Longrightarrow> \\<not> s >\\<^sub>t t", "by blast"], ["", "subsection \\<open>Subterm Property\\<close>"], ["", "lemma gt_sub_fun: \"App s t >\\<^sub>t s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. App s t >\\<^sub>t s", "proof (cases \"wt (App s t) > wt s\")"], ["proof (state)\ngoal (2 subgoals):\n 1. wt s < wt (App s t) \\<Longrightarrow> App s t >\\<^sub>t s\n 2. \\<not> wt s < wt (App s t) \\<Longrightarrow> App s t >\\<^sub>t s", "case True"], ["proof (state)\nthis:\n  wt s < wt (App s t)\n\ngoal (2 subgoals):\n 1. wt s < wt (App s t) \\<Longrightarrow> App s t >\\<^sub>t s\n 2. \\<not> wt s < wt (App s t) \\<Longrightarrow> App s t >\\<^sub>t s", "thus ?thesis"], ["proof (prove)\nusing this:\n  wt s < wt (App s t)\n\ngoal (1 subgoal):\n 1. App s t >\\<^sub>t s", "using gt_wt"], ["proof (prove)\nusing this:\n  wt s < wt (App s t)\n  \\<lbrakk>vars_mset ?s \\<subseteq># vars_mset ?t; wt ?s < wt ?t\\<rbrakk>\n  \\<Longrightarrow> ?t >\\<^sub>t ?s\n\ngoal (1 subgoal):\n 1. App s t >\\<^sub>t s", "by simp"], ["proof (state)\nthis:\n  App s t >\\<^sub>t s\n\ngoal (1 subgoal):\n 1. \\<not> wt s < wt (App s t) \\<Longrightarrow> App s t >\\<^sub>t s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> wt s < wt (App s t) \\<Longrightarrow> App s t >\\<^sub>t s", "case False"], ["proof (state)\nthis:\n  \\<not> wt s < wt (App s t)\n\ngoal (1 subgoal):\n 1. \\<not> wt s < wt (App s t) \\<Longrightarrow> App s t >\\<^sub>t s", "hence wt_st: \"wt (App s t) = wt s\""], ["proof (prove)\nusing this:\n  \\<not> wt s < wt (App s t)\n\ngoal (1 subgoal):\n 1. wt (App s t) = wt s", "by (meson order.antisym not_le_imp_less wt_App_ge_fun)"], ["proof (state)\nthis:\n  wt (App s t) = wt s\n\ngoal (1 subgoal):\n 1. \\<not> wt s < wt (App s t) \\<Longrightarrow> App s t >\\<^sub>t s", "hence \\<delta>_eq_\\<epsilon>: \"\\<delta> = \\<epsilon>\""], ["proof (prove)\nusing this:\n  wt (App s t) = wt s\n\ngoal (1 subgoal):\n 1. \\<delta> = \\<epsilon>", "by (metis add_diff_cancel_left' diff_diff_cancel wt_\\<delta>_imp_\\<delta>_eq_\\<epsilon> wt_ge_\\<delta> wt.simps(2))"], ["proof (state)\nthis:\n  \\<delta> = \\<epsilon>\n\ngoal (1 subgoal):\n 1. \\<not> wt s < wt (App s t) \\<Longrightarrow> App s t >\\<^sub>t s", "have vars_st: \"vars_mset (App s t) \\<supseteq># vars_mset s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars_mset s \\<subseteq># vars_mset (App s t)", "by auto"], ["proof (state)\nthis:\n  vars_mset s \\<subseteq># vars_mset (App s t)\n\ngoal (1 subgoal):\n 1. \\<not> wt s < wt (App s t) \\<Longrightarrow> App s t >\\<^sub>t s", "have hd_st: \"head (App s t) = head s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. head (App s t) = head s", "by auto"], ["proof (state)\nthis:\n  head (App s t) = head s\n\ngoal (1 subgoal):\n 1. \\<not> wt s < wt (App s t) \\<Longrightarrow> App s t >\\<^sub>t s", "have extf: \"\\<forall>f \\<in> ground_heads (head (App s t)). extf f (>\\<^sub>t) (args (App s t)) (args s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>local.ground_heads (head (App s t)).\n       extf f (>\\<^sub>t) (args (App s t)) (args s)", "by (simp add: \\<delta>_eq_\\<epsilon> extf_snoc_if_\\<delta>_eq_\\<epsilon>)"], ["proof (state)\nthis:\n  \\<forall>f\\<in>local.ground_heads (head (App s t)).\n     extf f (>\\<^sub>t) (args (App s t)) (args s)\n\ngoal (1 subgoal):\n 1. \\<not> wt s < wt (App s t) \\<Longrightarrow> App s t >\\<^sub>t s", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. App s t >\\<^sub>t s", "by (rule gt_same[OF vars_st wt_st hd_st extf])"], ["proof (state)\nthis:\n  App s t >\\<^sub>t s\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem gt_proper_sub: \"wary t \\<Longrightarrow> proper_sub s t \\<Longrightarrow> t >\\<^sub>t s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wary t; proper_sub s t\\<rbrakk> \\<Longrightarrow> t >\\<^sub>t s", "by (induct t) (auto intro: gt_sub_fun gt_sub_arg gt_trans sub.intros wary_sub)"], ["", "subsection \\<open>Compatibility with Functions\\<close>"], ["", "theorem gt_compat_fun:\n  assumes\n    wary_t: \"wary t\" and\n    t'_gt_t: \"t' >\\<^sub>t t\"\n  shows \"App s t' >\\<^sub>t App s t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. App s t' >\\<^sub>t App s t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. App s t' >\\<^sub>t App s t", "have vars_st': \"vars_mset (App s t') \\<supseteq># vars_mset (App s t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars_mset (App s t) \\<subseteq># vars_mset (App s t')", "by (simp add: t'_gt_t gt_imp_vars_mset)"], ["proof (state)\nthis:\n  vars_mset (App s t) \\<subseteq># vars_mset (App s t')\n\ngoal (1 subgoal):\n 1. App s t' >\\<^sub>t App s t", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. App s t' >\\<^sub>t App s t", "proof (cases \"wt t' > wt t\")"], ["proof (state)\ngoal (2 subgoals):\n 1. wt t < wt t' \\<Longrightarrow> App s t' >\\<^sub>t App s t\n 2. \\<not> wt t < wt t' \\<Longrightarrow> App s t' >\\<^sub>t App s t", "case True"], ["proof (state)\nthis:\n  wt t < wt t'\n\ngoal (2 subgoals):\n 1. wt t < wt t' \\<Longrightarrow> App s t' >\\<^sub>t App s t\n 2. \\<not> wt t < wt t' \\<Longrightarrow> App s t' >\\<^sub>t App s t", "hence wt_st': \"wt (App s t') > wt (App s t)\""], ["proof (prove)\nusing this:\n  wt t < wt t'\n\ngoal (1 subgoal):\n 1. wt (App s t) < wt (App s t')", "by (simp only: wt.simps)"], ["proof (state)\nthis:\n  wt (App s t) < wt (App s t')\n\ngoal (2 subgoals):\n 1. wt t < wt t' \\<Longrightarrow> App s t' >\\<^sub>t App s t\n 2. \\<not> wt t < wt t' \\<Longrightarrow> App s t' >\\<^sub>t App s t", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. App s t' >\\<^sub>t App s t", "by (rule gt_wt[OF vars_st' wt_st'])"], ["proof (state)\nthis:\n  App s t' >\\<^sub>t App s t\n\ngoal (1 subgoal):\n 1. \\<not> wt t < wt t' \\<Longrightarrow> App s t' >\\<^sub>t App s t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> wt t < wt t' \\<Longrightarrow> App s t' >\\<^sub>t App s t", "case False"], ["proof (state)\nthis:\n  \\<not> wt t < wt t'\n\ngoal (1 subgoal):\n 1. \\<not> wt t < wt t' \\<Longrightarrow> App s t' >\\<^sub>t App s t", "hence \"wt t' = wt t\""], ["proof (prove)\nusing this:\n  \\<not> wt t < wt t'\n\ngoal (1 subgoal):\n 1. wt t' = wt t", "using t'_gt_t gt_imp_wt_ge order.not_eq_order_implies_strict"], ["proof (prove)\nusing this:\n  \\<not> wt t < wt t'\n  t' >\\<^sub>t t\n  ?t >\\<^sub>t ?s \\<Longrightarrow> wt ?s \\<le> wt ?t\n  \\<lbrakk>?a \\<noteq> ?b; ?a \\<le> ?b\\<rbrakk> \\<Longrightarrow> ?a < ?b\n\ngoal (1 subgoal):\n 1. wt t' = wt t", "by fastforce"], ["proof (state)\nthis:\n  wt t' = wt t\n\ngoal (1 subgoal):\n 1. \\<not> wt t < wt t' \\<Longrightarrow> App s t' >\\<^sub>t App s t", "hence wt_st': \"wt (App s t') = wt (App s t)\""], ["proof (prove)\nusing this:\n  wt t' = wt t\n\ngoal (1 subgoal):\n 1. wt (App s t') = wt (App s t)", "by (simp only: wt.simps)"], ["proof (state)\nthis:\n  wt (App s t') = wt (App s t)\n\ngoal (1 subgoal):\n 1. \\<not> wt t < wt t' \\<Longrightarrow> App s t' >\\<^sub>t App s t", "have head_st': \"head (App s t') = head (App s t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. head (App s t') = head (App s t)", "by simp"], ["proof (state)\nthis:\n  head (App s t') = head (App s t)\n\ngoal (1 subgoal):\n 1. \\<not> wt t < wt t' \\<Longrightarrow> App s t' >\\<^sub>t App s t", "have extf: \"\\<And>f. extf f (>\\<^sub>t) (args s @ [t']) (args s @ [t])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>f. extf f (>\\<^sub>t) (args s @ [t']) (args s @ [t])", "using t'_gt_t"], ["proof (prove)\nusing this:\n  t' >\\<^sub>t t\n\ngoal (1 subgoal):\n 1. \\<And>f. extf f (>\\<^sub>t) (args s @ [t']) (args s @ [t])", "by (metis extf_compat_list gt_irrefl[OF wary_t])"], ["proof (state)\nthis:\n  extf ?f (>\\<^sub>t) (args s @ [t']) (args s @ [t])\n\ngoal (1 subgoal):\n 1. \\<not> wt t < wt t' \\<Longrightarrow> App s t' >\\<^sub>t App s t", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. App s t' >\\<^sub>t App s t", "by (rule gt_same[OF vars_st' wt_st' head_st']) (simp add: extf)"], ["proof (state)\nthis:\n  App s t' >\\<^sub>t App s t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  App s t' >\\<^sub>t App s t\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Compatibility with Arguments\\<close>"], ["", "theorem gt_compat_arg:\n  assumes wary_s't: \"wary (App s' t)\" and s'_gt_s: \"s' >\\<^sub>t s\"\n  shows \"App s' t >\\<^sub>t App s t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. App s' t >\\<^sub>t App s t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. App s' t >\\<^sub>t App s t", "have vars_s't: \"vars_mset (App s' t) \\<supseteq># vars_mset (App s t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars_mset (App s t) \\<subseteq># vars_mset (App s' t)", "by (simp add: s'_gt_s gt_imp_vars_mset)"], ["proof (state)\nthis:\n  vars_mset (App s t) \\<subseteq># vars_mset (App s' t)\n\ngoal (1 subgoal):\n 1. App s' t >\\<^sub>t App s t", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. App s' t >\\<^sub>t App s t", "using s'_gt_s"], ["proof (prove)\nusing this:\n  s' >\\<^sub>t s\n\ngoal (1 subgoal):\n 1. App s' t >\\<^sub>t App s t", "proof cases"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset s'; wt s < wt s'\\<rbrakk>\n    \\<Longrightarrow> App s' t >\\<^sub>t App s t\n 2. \\<lbrakk>wt s' = wt s; \\<not> head s' \\<le>\\<ge>\\<^sub>h\\<^sub>d head s;\n     num_args s' = 1;\n     \\<exists>f\\<in>local.ground_heads (head s').\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg s' \\<ge>\\<^sub>t s\\<rbrakk>\n    \\<Longrightarrow> App s' t >\\<^sub>t App s t\n 3. \\<lbrakk>vars_mset s \\<subseteq># vars_mset s'; wt s' = wt s;\n     head s' >\\<^sub>h\\<^sub>d head s\\<rbrakk>\n    \\<Longrightarrow> App s' t >\\<^sub>t App s t\n 4. \\<lbrakk>vars_mset s \\<subseteq># vars_mset s'; wt s' = wt s;\n     head s' = head s;\n     \\<forall>f\\<in>local.ground_heads (head s').\n        extf f (>\\<^sub>t) (args s') (args s)\\<rbrakk>\n    \\<Longrightarrow> App s' t >\\<^sub>t App s t", "case gt_wt_s'_s: gt_wt"], ["proof (state)\nthis:\n  vars_mset s \\<subseteq># vars_mset s'\n  wt s < wt s'\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset s'; wt s < wt s'\\<rbrakk>\n    \\<Longrightarrow> App s' t >\\<^sub>t App s t\n 2. \\<lbrakk>wt s' = wt s; \\<not> head s' \\<le>\\<ge>\\<^sub>h\\<^sub>d head s;\n     num_args s' = 1;\n     \\<exists>f\\<in>local.ground_heads (head s').\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg s' \\<ge>\\<^sub>t s\\<rbrakk>\n    \\<Longrightarrow> App s' t >\\<^sub>t App s t\n 3. \\<lbrakk>vars_mset s \\<subseteq># vars_mset s'; wt s' = wt s;\n     head s' >\\<^sub>h\\<^sub>d head s\\<rbrakk>\n    \\<Longrightarrow> App s' t >\\<^sub>t App s t\n 4. \\<lbrakk>vars_mset s \\<subseteq># vars_mset s'; wt s' = wt s;\n     head s' = head s;\n     \\<forall>f\\<in>local.ground_heads (head s').\n        extf f (>\\<^sub>t) (args s') (args s)\\<rbrakk>\n    \\<Longrightarrow> App s' t >\\<^sub>t App s t", "have \"wt (App s' t) > wt (App s t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wt (App s t) < wt (App s' t)", "by (simp add: wt_ge_\\<delta>) (metis add_diff_assoc add_less_cancel_right gt_wt_s'_s(2) wt_ge_\\<delta>)"], ["proof (state)\nthis:\n  wt (App s t) < wt (App s' t)\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset s'; wt s < wt s'\\<rbrakk>\n    \\<Longrightarrow> App s' t >\\<^sub>t App s t\n 2. \\<lbrakk>wt s' = wt s; \\<not> head s' \\<le>\\<ge>\\<^sub>h\\<^sub>d head s;\n     num_args s' = 1;\n     \\<exists>f\\<in>local.ground_heads (head s').\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg s' \\<ge>\\<^sub>t s\\<rbrakk>\n    \\<Longrightarrow> App s' t >\\<^sub>t App s t\n 3. \\<lbrakk>vars_mset s \\<subseteq># vars_mset s'; wt s' = wt s;\n     head s' >\\<^sub>h\\<^sub>d head s\\<rbrakk>\n    \\<Longrightarrow> App s' t >\\<^sub>t App s t\n 4. \\<lbrakk>vars_mset s \\<subseteq># vars_mset s'; wt s' = wt s;\n     head s' = head s;\n     \\<forall>f\\<in>local.ground_heads (head s').\n        extf f (>\\<^sub>t) (args s') (args s)\\<rbrakk>\n    \\<Longrightarrow> App s' t >\\<^sub>t App s t", "thus ?thesis"], ["proof (prove)\nusing this:\n  wt (App s t) < wt (App s' t)\n\ngoal (1 subgoal):\n 1. App s' t >\\<^sub>t App s t", "by (rule gt_wt[OF vars_s't])"], ["proof (state)\nthis:\n  App s' t >\\<^sub>t App s t\n\ngoal (3 subgoals):\n 1. \\<lbrakk>wt s' = wt s; \\<not> head s' \\<le>\\<ge>\\<^sub>h\\<^sub>d head s;\n     num_args s' = 1;\n     \\<exists>f\\<in>local.ground_heads (head s').\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg s' \\<ge>\\<^sub>t s\\<rbrakk>\n    \\<Longrightarrow> App s' t >\\<^sub>t App s t\n 2. \\<lbrakk>vars_mset s \\<subseteq># vars_mset s'; wt s' = wt s;\n     head s' >\\<^sub>h\\<^sub>d head s\\<rbrakk>\n    \\<Longrightarrow> App s' t >\\<^sub>t App s t\n 3. \\<lbrakk>vars_mset s \\<subseteq># vars_mset s'; wt s' = wt s;\n     head s' = head s;\n     \\<forall>f\\<in>local.ground_heads (head s').\n        extf f (>\\<^sub>t) (args s') (args s)\\<rbrakk>\n    \\<Longrightarrow> App s' t >\\<^sub>t App s t", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<lbrakk>wt s' = wt s; \\<not> head s' \\<le>\\<ge>\\<^sub>h\\<^sub>d head s;\n     num_args s' = 1;\n     \\<exists>f\\<in>local.ground_heads (head s').\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg s' \\<ge>\\<^sub>t s\\<rbrakk>\n    \\<Longrightarrow> App s' t >\\<^sub>t App s t\n 2. \\<lbrakk>vars_mset s \\<subseteq># vars_mset s'; wt s' = wt s;\n     head s' >\\<^sub>h\\<^sub>d head s\\<rbrakk>\n    \\<Longrightarrow> App s' t >\\<^sub>t App s t\n 3. \\<lbrakk>vars_mset s \\<subseteq># vars_mset s'; wt s' = wt s;\n     head s' = head s;\n     \\<forall>f\\<in>local.ground_heads (head s').\n        extf f (>\\<^sub>t) (args s') (args s)\\<rbrakk>\n    \\<Longrightarrow> App s' t >\\<^sub>t App s t", "case gt_unary_s'_s: gt_unary"], ["proof (state)\nthis:\n  wt s' = wt s\n  \\<not> head s' \\<le>\\<ge>\\<^sub>h\\<^sub>d head s\n  num_args s' = 1\n  \\<exists>f\\<in>local.ground_heads (head s').\n     arity_sym f = 1 \\<and> wt_sym f = 0\n  arg s' \\<ge>\\<^sub>t s\n\ngoal (3 subgoals):\n 1. \\<lbrakk>wt s' = wt s; \\<not> head s' \\<le>\\<ge>\\<^sub>h\\<^sub>d head s;\n     num_args s' = 1;\n     \\<exists>f\\<in>local.ground_heads (head s').\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg s' \\<ge>\\<^sub>t s\\<rbrakk>\n    \\<Longrightarrow> App s' t >\\<^sub>t App s t\n 2. \\<lbrakk>vars_mset s \\<subseteq># vars_mset s'; wt s' = wt s;\n     head s' >\\<^sub>h\\<^sub>d head s\\<rbrakk>\n    \\<Longrightarrow> App s' t >\\<^sub>t App s t\n 3. \\<lbrakk>vars_mset s \\<subseteq># vars_mset s'; wt s' = wt s;\n     head s' = head s;\n     \\<forall>f\\<in>local.ground_heads (head s').\n        extf f (>\\<^sub>t) (args s') (args s)\\<rbrakk>\n    \\<Longrightarrow> App s' t >\\<^sub>t App s t", "have False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "by (metis ground_heads_arity gt_unary_s'_s(3) gt_unary_s'_s(4) leD one_enat_def wary_AppE\n        wary_s't)"], ["proof (state)\nthis:\n  False\n\ngoal (3 subgoals):\n 1. \\<lbrakk>wt s' = wt s; \\<not> head s' \\<le>\\<ge>\\<^sub>h\\<^sub>d head s;\n     num_args s' = 1;\n     \\<exists>f\\<in>local.ground_heads (head s').\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg s' \\<ge>\\<^sub>t s\\<rbrakk>\n    \\<Longrightarrow> App s' t >\\<^sub>t App s t\n 2. \\<lbrakk>vars_mset s \\<subseteq># vars_mset s'; wt s' = wt s;\n     head s' >\\<^sub>h\\<^sub>d head s\\<rbrakk>\n    \\<Longrightarrow> App s' t >\\<^sub>t App s t\n 3. \\<lbrakk>vars_mset s \\<subseteq># vars_mset s'; wt s' = wt s;\n     head s' = head s;\n     \\<forall>f\\<in>local.ground_heads (head s').\n        extf f (>\\<^sub>t) (args s') (args s)\\<rbrakk>\n    \\<Longrightarrow> App s' t >\\<^sub>t App s t", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. App s' t >\\<^sub>t App s t", "by sat"], ["proof (state)\nthis:\n  App s' t >\\<^sub>t App s t\n\ngoal (2 subgoals):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset s'; wt s' = wt s;\n     head s' >\\<^sub>h\\<^sub>d head s\\<rbrakk>\n    \\<Longrightarrow> App s' t >\\<^sub>t App s t\n 2. \\<lbrakk>vars_mset s \\<subseteq># vars_mset s'; wt s' = wt s;\n     head s' = head s;\n     \\<forall>f\\<in>local.ground_heads (head s').\n        extf f (>\\<^sub>t) (args s') (args s)\\<rbrakk>\n    \\<Longrightarrow> App s' t >\\<^sub>t App s t", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset s'; wt s' = wt s;\n     head s' >\\<^sub>h\\<^sub>d head s\\<rbrakk>\n    \\<Longrightarrow> App s' t >\\<^sub>t App s t\n 2. \\<lbrakk>vars_mset s \\<subseteq># vars_mset s'; wt s' = wt s;\n     head s' = head s;\n     \\<forall>f\\<in>local.ground_heads (head s').\n        extf f (>\\<^sub>t) (args s') (args s)\\<rbrakk>\n    \\<Longrightarrow> App s' t >\\<^sub>t App s t", "case _: gt_diff"], ["proof (state)\nthis:\n  vars_mset s \\<subseteq># vars_mset s'\n  wt s' = wt s\n  head s' >\\<^sub>h\\<^sub>d head s\n\ngoal (2 subgoals):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset s'; wt s' = wt s;\n     head s' >\\<^sub>h\\<^sub>d head s\\<rbrakk>\n    \\<Longrightarrow> App s' t >\\<^sub>t App s t\n 2. \\<lbrakk>vars_mset s \\<subseteq># vars_mset s'; wt s' = wt s;\n     head s' = head s;\n     \\<forall>f\\<in>local.ground_heads (head s').\n        extf f (>\\<^sub>t) (args s') (args s)\\<rbrakk>\n    \\<Longrightarrow> App s' t >\\<^sub>t App s t", "thus ?thesis"], ["proof (prove)\nusing this:\n  vars_mset s \\<subseteq># vars_mset s'\n  wt s' = wt s\n  head s' >\\<^sub>h\\<^sub>d head s\n\ngoal (1 subgoal):\n 1. App s' t >\\<^sub>t App s t", "by (simp add: gt_diff)"], ["proof (state)\nthis:\n  App s' t >\\<^sub>t App s t\n\ngoal (1 subgoal):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset s'; wt s' = wt s;\n     head s' = head s;\n     \\<forall>f\\<in>local.ground_heads (head s').\n        extf f (>\\<^sub>t) (args s') (args s)\\<rbrakk>\n    \\<Longrightarrow> App s' t >\\<^sub>t App s t", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset s'; wt s' = wt s;\n     head s' = head s;\n     \\<forall>f\\<in>local.ground_heads (head s').\n        extf f (>\\<^sub>t) (args s') (args s)\\<rbrakk>\n    \\<Longrightarrow> App s' t >\\<^sub>t App s t", "case gt_same_s'_s: gt_same"], ["proof (state)\nthis:\n  vars_mset s \\<subseteq># vars_mset s'\n  wt s' = wt s\n  head s' = head s\n  \\<forall>f\\<in>local.ground_heads (head s').\n     extf f (>\\<^sub>t) (args s') (args s)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset s'; wt s' = wt s;\n     head s' = head s;\n     \\<forall>f\\<in>local.ground_heads (head s').\n        extf f (>\\<^sub>t) (args s') (args s)\\<rbrakk>\n    \\<Longrightarrow> App s' t >\\<^sub>t App s t", "have wt_s't: \"wt (App s' t) = wt (App s t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wt (App s' t) = wt (App s t)", "by (simp add: gt_same_s'_s(2))"], ["proof (state)\nthis:\n  wt (App s' t) = wt (App s t)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset s'; wt s' = wt s;\n     head s' = head s;\n     \\<forall>f\\<in>local.ground_heads (head s').\n        extf f (>\\<^sub>t) (args s') (args s)\\<rbrakk>\n    \\<Longrightarrow> App s' t >\\<^sub>t App s t", "have hd_s't: \"head (App s' t) = head (App s t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. head (App s' t) = head (App s t)", "by (simp add: gt_same_s'_s(3))"], ["proof (state)\nthis:\n  head (App s' t) = head (App s t)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset s'; wt s' = wt s;\n     head s' = head s;\n     \\<forall>f\\<in>local.ground_heads (head s').\n        extf f (>\\<^sub>t) (args s') (args s)\\<rbrakk>\n    \\<Longrightarrow> App s' t >\\<^sub>t App s t", "have \"\\<forall>f \\<in> ground_heads (head (App s' t)). extf f (>\\<^sub>t) (args (App s' t)) (args (App s t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>local.ground_heads (head (App s' t)).\n       extf f (>\\<^sub>t) (args (App s' t)) (args (App s t))", "using gt_same_s'_s(4)"], ["proof (prove)\nusing this:\n  \\<forall>f\\<in>local.ground_heads (head s').\n     extf f (>\\<^sub>t) (args s') (args s)\n\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>local.ground_heads (head (App s' t)).\n       extf f (>\\<^sub>t) (args (App s' t)) (args (App s t))", "by (auto intro: extf_compat_append_right)"], ["proof (state)\nthis:\n  \\<forall>f\\<in>local.ground_heads (head (App s' t)).\n     extf f (>\\<^sub>t) (args (App s' t)) (args (App s t))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset s'; wt s' = wt s;\n     head s' = head s;\n     \\<forall>f\\<in>local.ground_heads (head s').\n        extf f (>\\<^sub>t) (args s') (args s)\\<rbrakk>\n    \\<Longrightarrow> App s' t >\\<^sub>t App s t", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>f\\<in>local.ground_heads (head (App s' t)).\n     extf f (>\\<^sub>t) (args (App s' t)) (args (App s t))\n\ngoal (1 subgoal):\n 1. App s' t >\\<^sub>t App s t", "by (rule gt_same[OF vars_s't wt_s't hd_s't])"], ["proof (state)\nthis:\n  App s' t >\\<^sub>t App s t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  App s' t >\\<^sub>t App s t\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Stability under Substitution\\<close>"], ["", "definition extra_wt :: \"('v \\<Rightarrow> ('s, 'v) tm) \\<Rightarrow> ('s, 'v) tm \\<Rightarrow> nat\" where\n  \"extra_wt \\<rho> s = (\\<Sum>x \\<in># vars_mset s. wt (\\<rho> x) - wt (Hd (Var x)))\""], ["", "lemma\n  extra_wt_Var[simp]: \"extra_wt \\<rho> (Hd (Var x)) = wt (\\<rho> x) - wt (Hd (Var x))\" and\n  extra_wt_Sym[simp]: \"extra_wt \\<rho> (Hd (Sym f)) = 0\" and\n  extra_wt_App[simp]: \"extra_wt \\<rho> (App s t) = extra_wt \\<rho> s + extra_wt \\<rho> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. extra_wt \\<rho> (Hd (Var x)) = wt (\\<rho> x) - wt (Hd (Var x)) &&&\n    extra_wt \\<rho> (Hd (Sym f)) = 0 &&&\n    extra_wt \\<rho> (App s t) = extra_wt \\<rho> s + extra_wt \\<rho> t", "unfolding extra_wt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>#vars_mset (Hd (Var x)). wt (\\<rho> x) - wt (Hd (Var x))) =\n    wt (\\<rho> x) - wt (Hd (Var x)) &&&\n    (\\<Sum>x\\<in>#vars_mset (Hd (Sym f)). wt (\\<rho> x) - wt (Hd (Var x))) =\n    0 &&&\n    (\\<Sum>x\\<in>#vars_mset (App s t). wt (\\<rho> x) - wt (Hd (Var x))) =\n    (\\<Sum>x\\<in>#vars_mset s. wt (\\<rho> x) - wt (Hd (Var x))) +\n    (\\<Sum>x\\<in>#vars_mset t. wt (\\<rho> x) - wt (Hd (Var x)))", "by simp+"], ["", "lemma extra_wt_subseteq:\n  assumes vars_s: \"vars_mset t \\<supseteq># vars_mset s\"\n  shows \"extra_wt \\<rho> t \\<ge> extra_wt \\<rho> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. extra_wt \\<rho> s \\<le> extra_wt \\<rho> t", "proof (unfold extra_wt_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>#vars_mset s. wt (\\<rho> x) - wt (Hd (Var x)))\n    \\<le> (\\<Sum>x\\<in>#vars_mset t. wt (\\<rho> x) - wt (Hd (Var x)))", "let ?diff = \"\\<lambda>v. wt (\\<rho> v) - wt (Hd (Var v))\""], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>#vars_mset s. wt (\\<rho> x) - wt (Hd (Var x)))\n    \\<le> (\\<Sum>x\\<in>#vars_mset t. wt (\\<rho> x) - wt (Hd (Var x)))", "have \"vars_mset s + (vars_mset t - vars_mset s) = vars_mset t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars_mset s + (vars_mset t - vars_mset s) = vars_mset t", "using vars_s"], ["proof (prove)\nusing this:\n  vars_mset s \\<subseteq># vars_mset t\n\ngoal (1 subgoal):\n 1. vars_mset s + (vars_mset t - vars_mset s) = vars_mset t", "by (meson subset_mset.add_diff_inverse)"], ["proof (state)\nthis:\n  vars_mset s + (vars_mset t - vars_mset s) = vars_mset t\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>#vars_mset s. wt (\\<rho> x) - wt (Hd (Var x)))\n    \\<le> (\\<Sum>x\\<in>#vars_mset t. wt (\\<rho> x) - wt (Hd (Var x)))", "hence \"{#?diff v. v \\<in># vars_mset t#} =\n    {#?diff v. v \\<in># vars_mset s#} + {#?diff v. v \\<in># vars_mset t - vars_mset s#}\""], ["proof (prove)\nusing this:\n  vars_mset s + (vars_mset t - vars_mset s) = vars_mset t\n\ngoal (1 subgoal):\n 1. {#wt (\\<rho> v) - wt (Hd (Var v)). v \\<in># vars_mset t#} =\n    {#wt (\\<rho> v) - wt (Hd (Var v)). v \\<in># vars_mset s#} +\n    {#wt (\\<rho> v) - wt (Hd (Var v)). v \\<in># vars_mset t - vars_mset s#}", "by (metis image_mset_union)"], ["proof (state)\nthis:\n  {#wt (\\<rho> v) - wt (Hd (Var v)). v \\<in># vars_mset t#} =\n  {#wt (\\<rho> v) - wt (Hd (Var v)). v \\<in># vars_mset s#} +\n  {#wt (\\<rho> v) - wt (Hd (Var v)). v \\<in># vars_mset t - vars_mset s#}\n\ngoal (1 subgoal):\n 1. (\\<Sum>x\\<in>#vars_mset s. wt (\\<rho> x) - wt (Hd (Var x)))\n    \\<le> (\\<Sum>x\\<in>#vars_mset t. wt (\\<rho> x) - wt (Hd (Var x)))", "thus \"(\\<Sum>v \\<in># vars_mset t. ?diff v) \\<ge> (\\<Sum>v \\<in># vars_mset s. ?diff v)\""], ["proof (prove)\nusing this:\n  {#wt (\\<rho> v) - wt (Hd (Var v)). v \\<in># vars_mset t#} =\n  {#wt (\\<rho> v) - wt (Hd (Var v)). v \\<in># vars_mset s#} +\n  {#wt (\\<rho> v) - wt (Hd (Var v)). v \\<in># vars_mset t - vars_mset s#}\n\ngoal (1 subgoal):\n 1. (\\<Sum>v\\<in>#vars_mset s. wt (\\<rho> v) - wt (Hd (Var v)))\n    \\<le> (\\<Sum>v\\<in>#vars_mset t. wt (\\<rho> v) - wt (Hd (Var v)))", "by simp"], ["proof (state)\nthis:\n  (\\<Sum>v\\<in>#vars_mset s. wt (\\<rho> v) - wt (Hd (Var v)))\n  \\<le> (\\<Sum>v\\<in>#vars_mset t. wt (\\<rho> v) - wt (Hd (Var v)))\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma wt_subst:\n  assumes wary_\\<rho>: \"wary_subst \\<rho>\" and wary_s: \"wary s\"\n  shows \"wt (subst \\<rho> s) = wt s + extra_wt \\<rho> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wt (subst \\<rho> s) = wt s + extra_wt \\<rho> s", "using wary_s"], ["proof (prove)\nusing this:\n  wary s\n\ngoal (1 subgoal):\n 1. wt (subst \\<rho> s) = wt s + extra_wt \\<rho> s", "proof (induct s rule: tm.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       wary (Hd x) \\<Longrightarrow>\n       wt (subst \\<rho> (Hd x)) = wt (Hd x) + extra_wt \\<rho> (Hd x)\n 2. \\<And>x1a x2.\n       \\<lbrakk>wary x1a \\<Longrightarrow>\n                wt (subst \\<rho> x1a) = wt x1a + extra_wt \\<rho> x1a;\n        wary x2 \\<Longrightarrow>\n        wt (subst \\<rho> x2) = wt x2 + extra_wt \\<rho> x2;\n        wary (App x1a x2)\\<rbrakk>\n       \\<Longrightarrow> wt (subst \\<rho> (App x1a x2)) =\n                         wt (App x1a x2) + extra_wt \\<rho> (App x1a x2)", "case \\<zeta>: (Hd \\<zeta>)"], ["proof (state)\nthis:\n  wary (Hd \\<zeta>)\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       wary (Hd x) \\<Longrightarrow>\n       wt (subst \\<rho> (Hd x)) = wt (Hd x) + extra_wt \\<rho> (Hd x)\n 2. \\<And>x1a x2.\n       \\<lbrakk>wary x1a \\<Longrightarrow>\n                wt (subst \\<rho> x1a) = wt x1a + extra_wt \\<rho> x1a;\n        wary x2 \\<Longrightarrow>\n        wt (subst \\<rho> x2) = wt x2 + extra_wt \\<rho> x2;\n        wary (App x1a x2)\\<rbrakk>\n       \\<Longrightarrow> wt (subst \\<rho> (App x1a x2)) =\n                         wt (App x1a x2) + extra_wt \\<rho> (App x1a x2)", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. wt (subst \\<rho> (Hd \\<zeta>)) =\n    wt (Hd \\<zeta>) + extra_wt \\<rho> (Hd \\<zeta>)", "proof (cases \\<zeta>)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       \\<zeta> = Var x1 \\<Longrightarrow>\n       wt (subst \\<rho> (Hd \\<zeta>)) =\n       wt (Hd \\<zeta>) + extra_wt \\<rho> (Hd \\<zeta>)\n 2. \\<And>x2.\n       \\<zeta> = Sym x2 \\<Longrightarrow>\n       wt (subst \\<rho> (Hd \\<zeta>)) =\n       wt (Hd \\<zeta>) + extra_wt \\<rho> (Hd \\<zeta>)", "case x: (Var x)"], ["proof (state)\nthis:\n  \\<zeta> = Var x\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       \\<zeta> = Var x1 \\<Longrightarrow>\n       wt (subst \\<rho> (Hd \\<zeta>)) =\n       wt (Hd \\<zeta>) + extra_wt \\<rho> (Hd \\<zeta>)\n 2. \\<And>x2.\n       \\<zeta> = Sym x2 \\<Longrightarrow>\n       wt (subst \\<rho> (Hd \\<zeta>)) =\n       wt (Hd \\<zeta>) + extra_wt \\<rho> (Hd \\<zeta>)", "let ?\\<xi> = \"head (\\<rho> x)\""], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       \\<zeta> = Var x1 \\<Longrightarrow>\n       wt (subst \\<rho> (Hd \\<zeta>)) =\n       wt (Hd \\<zeta>) + extra_wt \\<rho> (Hd \\<zeta>)\n 2. \\<And>x2.\n       \\<zeta> = Sym x2 \\<Longrightarrow>\n       wt (subst \\<rho> (Hd \\<zeta>)) =\n       wt (Hd \\<zeta>) + extra_wt \\<rho> (Hd \\<zeta>)", "obtain g where\n      g_in_grs_\\<xi>: \"g \\<in> ground_heads ?\\<xi>\" and\n      wt_\\<xi>: \"wt (Hd ?\\<xi>) = wt_sym g + the_enat (\\<delta> * arity_sym g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> local.ground_heads (head (\\<rho> x));\n         wt (Hd (head (\\<rho> x))) =\n         wt_sym g + the_enat (enat \\<delta> * arity_sym g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using exists_wt_sym"], ["proof (prove)\nusing this:\n  \\<exists>f\\<in>local.ground_heads ?\\<zeta>.\n     wt (Hd ?\\<zeta>) = wt_sym f + the_enat (enat \\<delta> * arity_sym f)\n\ngoal (1 subgoal):\n 1. (\\<And>g.\n        \\<lbrakk>g \\<in> local.ground_heads (head (\\<rho> x));\n         wt (Hd (head (\\<rho> x))) =\n         wt_sym g + the_enat (enat \\<delta> * arity_sym g)\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  g \\<in> local.ground_heads (head (\\<rho> x))\n  wt (Hd (head (\\<rho> x))) =\n  wt_sym g + the_enat (enat \\<delta> * arity_sym g)\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       \\<zeta> = Var x1 \\<Longrightarrow>\n       wt (subst \\<rho> (Hd \\<zeta>)) =\n       wt (Hd \\<zeta>) + extra_wt \\<rho> (Hd \\<zeta>)\n 2. \\<And>x2.\n       \\<zeta> = Sym x2 \\<Longrightarrow>\n       wt (subst \\<rho> (Hd \\<zeta>)) =\n       wt (Hd \\<zeta>) + extra_wt \\<rho> (Hd \\<zeta>)", "have \"g \\<in> ground_heads \\<zeta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g \\<in> local.ground_heads \\<zeta>", "using x g_in_grs_\\<xi> wary_\\<rho> wary_subst_def"], ["proof (prove)\nusing this:\n  \\<zeta> = Var x\n  g \\<in> local.ground_heads (head (\\<rho> x))\n  wary_subst \\<rho>\n  wary_subst ?\\<rho> =\n  (\\<forall>x.\n      wary (?\\<rho> x) \\<and>\n      arity_var x \\<le> arity (?\\<rho> x) \\<and>\n      local.ground_heads (head (?\\<rho> x)) \\<subseteq> ground_heads_var x)\n\ngoal (1 subgoal):\n 1. g \\<in> local.ground_heads \\<zeta>", "by auto"], ["proof (state)\nthis:\n  g \\<in> local.ground_heads \\<zeta>\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       \\<zeta> = Var x1 \\<Longrightarrow>\n       wt (subst \\<rho> (Hd \\<zeta>)) =\n       wt (Hd \\<zeta>) + extra_wt \\<rho> (Hd \\<zeta>)\n 2. \\<And>x2.\n       \\<zeta> = Sym x2 \\<Longrightarrow>\n       wt (subst \\<rho> (Hd \\<zeta>)) =\n       wt (Hd \\<zeta>) + extra_wt \\<rho> (Hd \\<zeta>)", "hence wt_\\<rho>x_ge: \"wt (\\<rho> x) \\<ge> wt (Hd \\<zeta>)\""], ["proof (prove)\nusing this:\n  g \\<in> local.ground_heads \\<zeta>\n\ngoal (1 subgoal):\n 1. wt (Hd \\<zeta>) \\<le> wt (\\<rho> x)", "by (metis (full_types) dual_order.trans wt_le_wt_sym wt_\\<xi> wt_hd_le)"], ["proof (state)\nthis:\n  wt (Hd \\<zeta>) \\<le> wt (\\<rho> x)\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       \\<zeta> = Var x1 \\<Longrightarrow>\n       wt (subst \\<rho> (Hd \\<zeta>)) =\n       wt (Hd \\<zeta>) + extra_wt \\<rho> (Hd \\<zeta>)\n 2. \\<And>x2.\n       \\<zeta> = Sym x2 \\<Longrightarrow>\n       wt (subst \\<rho> (Hd \\<zeta>)) =\n       wt (Hd \\<zeta>) + extra_wt \\<rho> (Hd \\<zeta>)", "thus ?thesis"], ["proof (prove)\nusing this:\n  wt (Hd \\<zeta>) \\<le> wt (\\<rho> x)\n\ngoal (1 subgoal):\n 1. wt (subst \\<rho> (Hd \\<zeta>)) =\n    wt (Hd \\<zeta>) + extra_wt \\<rho> (Hd \\<zeta>)", "using x"], ["proof (prove)\nusing this:\n  wt (Hd \\<zeta>) \\<le> wt (\\<rho> x)\n  \\<zeta> = Var x\n\ngoal (1 subgoal):\n 1. wt (subst \\<rho> (Hd \\<zeta>)) =\n    wt (Hd \\<zeta>) + extra_wt \\<rho> (Hd \\<zeta>)", "by (simp add: extra_wt_def)"], ["proof (state)\nthis:\n  wt (subst \\<rho> (Hd \\<zeta>)) =\n  wt (Hd \\<zeta>) + extra_wt \\<rho> (Hd \\<zeta>)\n\ngoal (1 subgoal):\n 1. \\<And>x2.\n       \\<zeta> = Sym x2 \\<Longrightarrow>\n       wt (subst \\<rho> (Hd \\<zeta>)) =\n       wt (Hd \\<zeta>) + extra_wt \\<rho> (Hd \\<zeta>)", "qed auto"], ["proof (state)\nthis:\n  wt (subst \\<rho> (Hd \\<zeta>)) =\n  wt (Hd \\<zeta>) + extra_wt \\<rho> (Hd \\<zeta>)\n\ngoal (1 subgoal):\n 1. \\<And>x1a x2.\n       \\<lbrakk>wary x1a \\<Longrightarrow>\n                wt (subst \\<rho> x1a) = wt x1a + extra_wt \\<rho> x1a;\n        wary x2 \\<Longrightarrow>\n        wt (subst \\<rho> x2) = wt x2 + extra_wt \\<rho> x2;\n        wary (App x1a x2)\\<rbrakk>\n       \\<Longrightarrow> wt (subst \\<rho> (App x1a x2)) =\n                         wt (App x1a x2) + extra_wt \\<rho> (App x1a x2)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x1a x2.\n       \\<lbrakk>wary x1a \\<Longrightarrow>\n                wt (subst \\<rho> x1a) = wt x1a + extra_wt \\<rho> x1a;\n        wary x2 \\<Longrightarrow>\n        wt (subst \\<rho> x2) = wt x2 + extra_wt \\<rho> x2;\n        wary (App x1a x2)\\<rbrakk>\n       \\<Longrightarrow> wt (subst \\<rho> (App x1a x2)) =\n                         wt (App x1a x2) + extra_wt \\<rho> (App x1a x2)", "case (App s t)"], ["proof (state)\nthis:\n  wary s \\<Longrightarrow> wt (subst \\<rho> s) = wt s + extra_wt \\<rho> s\n  wary t \\<Longrightarrow> wt (subst \\<rho> t) = wt t + extra_wt \\<rho> t\n  wary (App s t)\n\ngoal (1 subgoal):\n 1. \\<And>x1a x2.\n       \\<lbrakk>wary x1a \\<Longrightarrow>\n                wt (subst \\<rho> x1a) = wt x1a + extra_wt \\<rho> x1a;\n        wary x2 \\<Longrightarrow>\n        wt (subst \\<rho> x2) = wt x2 + extra_wt \\<rho> x2;\n        wary (App x1a x2)\\<rbrakk>\n       \\<Longrightarrow> wt (subst \\<rho> (App x1a x2)) =\n                         wt (App x1a x2) + extra_wt \\<rho> (App x1a x2)", "note ih_s = this(1) and ih_t = this(2) and wary_st = this(3)"], ["proof (state)\nthis:\n  wary s \\<Longrightarrow> wt (subst \\<rho> s) = wt s + extra_wt \\<rho> s\n  wary t \\<Longrightarrow> wt (subst \\<rho> t) = wt t + extra_wt \\<rho> t\n  wary (App s t)\n\ngoal (1 subgoal):\n 1. \\<And>x1a x2.\n       \\<lbrakk>wary x1a \\<Longrightarrow>\n                wt (subst \\<rho> x1a) = wt x1a + extra_wt \\<rho> x1a;\n        wary x2 \\<Longrightarrow>\n        wt (subst \\<rho> x2) = wt x2 + extra_wt \\<rho> x2;\n        wary (App x1a x2)\\<rbrakk>\n       \\<Longrightarrow> wt (subst \\<rho> (App x1a x2)) =\n                         wt (App x1a x2) + extra_wt \\<rho> (App x1a x2)", "have \"wary s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wary s", "using wary_st"], ["proof (prove)\nusing this:\n  wary (App s t)\n\ngoal (1 subgoal):\n 1. wary s", "by (meson wary_AppE)"], ["proof (state)\nthis:\n  wary s\n\ngoal (1 subgoal):\n 1. \\<And>x1a x2.\n       \\<lbrakk>wary x1a \\<Longrightarrow>\n                wt (subst \\<rho> x1a) = wt x1a + extra_wt \\<rho> x1a;\n        wary x2 \\<Longrightarrow>\n        wt (subst \\<rho> x2) = wt x2 + extra_wt \\<rho> x2;\n        wary (App x1a x2)\\<rbrakk>\n       \\<Longrightarrow> wt (subst \\<rho> (App x1a x2)) =\n                         wt (App x1a x2) + extra_wt \\<rho> (App x1a x2)", "hence \"\\<And>n. extra_wt \\<rho> s + (wt s - \\<delta> + n) = wt (subst \\<rho> s) - \\<delta> + n\""], ["proof (prove)\nusing this:\n  wary s\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       extra_wt \\<rho> s + (wt s - \\<delta> + n) =\n       wt (subst \\<rho> s) - \\<delta> + n", "using ih_s"], ["proof (prove)\nusing this:\n  wary s\n  wary s \\<Longrightarrow> wt (subst \\<rho> s) = wt s + extra_wt \\<rho> s\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       extra_wt \\<rho> s + (wt s - \\<delta> + n) =\n       wt (subst \\<rho> s) - \\<delta> + n", "by (metis (full_types) add_diff_assoc2 ab_semigroup_add_class.add_ac(1)\n      add.left_commute wt_ge_\\<delta>)"], ["proof (state)\nthis:\n  extra_wt \\<rho> s + (wt s - \\<delta> + ?n) =\n  wt (subst \\<rho> s) - \\<delta> + ?n\n\ngoal (1 subgoal):\n 1. \\<And>x1a x2.\n       \\<lbrakk>wary x1a \\<Longrightarrow>\n                wt (subst \\<rho> x1a) = wt x1a + extra_wt \\<rho> x1a;\n        wary x2 \\<Longrightarrow>\n        wt (subst \\<rho> x2) = wt x2 + extra_wt \\<rho> x2;\n        wary (App x1a x2)\\<rbrakk>\n       \\<Longrightarrow> wt (subst \\<rho> (App x1a x2)) =\n                         wt (App x1a x2) + extra_wt \\<rho> (App x1a x2)", "hence \"extra_wt \\<rho> s + (wt s + wt t - \\<delta> + extra_wt \\<rho> t) = wt (subst \\<rho> s) + wt (subst \\<rho> t) - \\<delta>\""], ["proof (prove)\nusing this:\n  extra_wt \\<rho> s + (wt s - \\<delta> + ?n) =\n  wt (subst \\<rho> s) - \\<delta> + ?n\n\ngoal (1 subgoal):\n 1. extra_wt \\<rho> s + (wt s + wt t - \\<delta> + extra_wt \\<rho> t) =\n    wt (subst \\<rho> s) + wt (subst \\<rho> t) - \\<delta>", "using ih_t wary_st"], ["proof (prove)\nusing this:\n  extra_wt \\<rho> s + (wt s - \\<delta> + ?n) =\n  wt (subst \\<rho> s) - \\<delta> + ?n\n  wary t \\<Longrightarrow> wt (subst \\<rho> t) = wt t + extra_wt \\<rho> t\n  wary (App s t)\n\ngoal (1 subgoal):\n 1. extra_wt \\<rho> s + (wt s + wt t - \\<delta> + extra_wt \\<rho> t) =\n    wt (subst \\<rho> s) + wt (subst \\<rho> t) - \\<delta>", "by (metis (no_types) add_diff_assoc2 ab_semigroup_add_class.add_ac(1) wary_AppE wt_ge_\\<delta>)"], ["proof (state)\nthis:\n  extra_wt \\<rho> s + (wt s + wt t - \\<delta> + extra_wt \\<rho> t) =\n  wt (subst \\<rho> s) + wt (subst \\<rho> t) - \\<delta>\n\ngoal (1 subgoal):\n 1. \\<And>x1a x2.\n       \\<lbrakk>wary x1a \\<Longrightarrow>\n                wt (subst \\<rho> x1a) = wt x1a + extra_wt \\<rho> x1a;\n        wary x2 \\<Longrightarrow>\n        wt (subst \\<rho> x2) = wt x2 + extra_wt \\<rho> x2;\n        wary (App x1a x2)\\<rbrakk>\n       \\<Longrightarrow> wt (subst \\<rho> (App x1a x2)) =\n                         wt (App x1a x2) + extra_wt \\<rho> (App x1a x2)", "thus ?case"], ["proof (prove)\nusing this:\n  extra_wt \\<rho> s + (wt s + wt t - \\<delta> + extra_wt \\<rho> t) =\n  wt (subst \\<rho> s) + wt (subst \\<rho> t) - \\<delta>\n\ngoal (1 subgoal):\n 1. wt (subst \\<rho> (App s t)) = wt (App s t) + extra_wt \\<rho> (App s t)", "by (simp add: wt_ge_\\<delta>)"], ["proof (state)\nthis:\n  wt (subst \\<rho> (App s t)) = wt (App s t) + extra_wt \\<rho> (App s t)\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem gt_subst:\n  assumes wary_\\<rho>: \"wary_subst \\<rho>\"\n  shows \"wary t \\<Longrightarrow> wary s \\<Longrightarrow> t >\\<^sub>t s \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>wary t; wary s; t >\\<^sub>t s\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s", "proof (simp only: atomize_imp,\n    rule measure_induct_rule[of \"\\<lambda>(t, s). {#size t, size s#}\"\n        \"\\<lambda>(t, s). wary t \\<longrightarrow> wary s \\<longrightarrow> t >\\<^sub>t s \\<longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s\" \"(t, s)\",\n      simplified prod.case],\n    simp only: split_paired_all prod.case atomize_imp[symmetric])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>\\<And>aa ba.\n                   \\<lbrakk>{#size aa, size ba#} < {#size a, size b#};\n                    wary aa; wary ba; aa >\\<^sub>t ba\\<rbrakk>\n                   \\<Longrightarrow> subst \\<rho> aa >\\<^sub>t\n                                     subst \\<rho> ba;\n        wary a; wary b; a >\\<^sub>t b\\<rbrakk>\n       \\<Longrightarrow> subst \\<rho> a >\\<^sub>t subst \\<rho> b", "fix t s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>\\<And>aa ba.\n                   \\<lbrakk>{#size aa, size ba#} < {#size a, size b#};\n                    wary aa; wary ba; aa >\\<^sub>t ba\\<rbrakk>\n                   \\<Longrightarrow> subst \\<rho> aa >\\<^sub>t\n                                     subst \\<rho> ba;\n        wary a; wary b; a >\\<^sub>t b\\<rbrakk>\n       \\<Longrightarrow> subst \\<rho> a >\\<^sub>t subst \\<rho> b", "assume\n    ih: \"\\<And>ta sa. {#size ta, size sa#} < {#size t, size s#} \\<Longrightarrow> wary ta \\<Longrightarrow> wary sa \\<Longrightarrow> ta >\\<^sub>t sa \\<Longrightarrow>\n      subst \\<rho> ta >\\<^sub>t subst \\<rho> sa\" and\n    wary_t: \"wary t\" and wary_s: \"wary s\" and t_gt_s: \"t >\\<^sub>t s\""], ["proof (state)\nthis:\n  \\<lbrakk>{#size ?ta, size ?sa#} < {#size t, size s#}; wary ?ta; wary ?sa;\n   ?ta >\\<^sub>t ?sa\\<rbrakk>\n  \\<Longrightarrow> subst \\<rho> ?ta >\\<^sub>t subst \\<rho> ?sa\n  wary t\n  wary s\n  t >\\<^sub>t s\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>\\<And>aa ba.\n                   \\<lbrakk>{#size aa, size ba#} < {#size a, size b#};\n                    wary aa; wary ba; aa >\\<^sub>t ba\\<rbrakk>\n                   \\<Longrightarrow> subst \\<rho> aa >\\<^sub>t\n                                     subst \\<rho> ba;\n        wary a; wary b; a >\\<^sub>t b\\<rbrakk>\n       \\<Longrightarrow> subst \\<rho> a >\\<^sub>t subst \\<rho> b", "show \"subst \\<rho> t >\\<^sub>t subst \\<rho> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subst \\<rho> t >\\<^sub>t subst \\<rho> s", "proof (cases \"wt (subst \\<rho> t) = wt (subst \\<rho> s)\")"], ["proof (state)\ngoal (2 subgoals):\n 1. wt (subst \\<rho> t) = wt (subst \\<rho> s) \\<Longrightarrow>\n    subst \\<rho> t >\\<^sub>t subst \\<rho> s\n 2. wt (subst \\<rho> t) \\<noteq> wt (subst \\<rho> s) \\<Longrightarrow>\n    subst \\<rho> t >\\<^sub>t subst \\<rho> s", "case wt_\\<rho>t_ne_\\<rho>s: False"], ["proof (state)\nthis:\n  wt (subst \\<rho> t) \\<noteq> wt (subst \\<rho> s)\n\ngoal (2 subgoals):\n 1. wt (subst \\<rho> t) = wt (subst \\<rho> s) \\<Longrightarrow>\n    subst \\<rho> t >\\<^sub>t subst \\<rho> s\n 2. wt (subst \\<rho> t) \\<noteq> wt (subst \\<rho> s) \\<Longrightarrow>\n    subst \\<rho> t >\\<^sub>t subst \\<rho> s", "have vars_s: \"vars_mset t \\<supseteq># vars_mset s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars_mset s \\<subseteq># vars_mset t", "by (simp add: t_gt_s gt_imp_vars_mset)"], ["proof (state)\nthis:\n  vars_mset s \\<subseteq># vars_mset t\n\ngoal (2 subgoals):\n 1. wt (subst \\<rho> t) = wt (subst \\<rho> s) \\<Longrightarrow>\n    subst \\<rho> t >\\<^sub>t subst \\<rho> s\n 2. wt (subst \\<rho> t) \\<noteq> wt (subst \\<rho> s) \\<Longrightarrow>\n    subst \\<rho> t >\\<^sub>t subst \\<rho> s", "hence vars_\\<rho>s: \"vars_mset (subst \\<rho> t) \\<supseteq># vars_mset (subst \\<rho> s)\""], ["proof (prove)\nusing this:\n  vars_mset s \\<subseteq># vars_mset t\n\ngoal (1 subgoal):\n 1. vars_mset (subst \\<rho> s) \\<subseteq># vars_mset (subst \\<rho> t)", "by (rule vars_mset_subst_subseteq)"], ["proof (state)\nthis:\n  vars_mset (subst \\<rho> s) \\<subseteq># vars_mset (subst \\<rho> t)\n\ngoal (2 subgoals):\n 1. wt (subst \\<rho> t) = wt (subst \\<rho> s) \\<Longrightarrow>\n    subst \\<rho> t >\\<^sub>t subst \\<rho> s\n 2. wt (subst \\<rho> t) \\<noteq> wt (subst \\<rho> s) \\<Longrightarrow>\n    subst \\<rho> t >\\<^sub>t subst \\<rho> s", "have wt_t_ge_s: \"wt t \\<ge> wt s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wt s \\<le> wt t", "by (simp add: gt_imp_wt_ge t_gt_s)"], ["proof (state)\nthis:\n  wt s \\<le> wt t\n\ngoal (2 subgoals):\n 1. wt (subst \\<rho> t) = wt (subst \\<rho> s) \\<Longrightarrow>\n    subst \\<rho> t >\\<^sub>t subst \\<rho> s\n 2. wt (subst \\<rho> t) \\<noteq> wt (subst \\<rho> s) \\<Longrightarrow>\n    subst \\<rho> t >\\<^sub>t subst \\<rho> s", "have \"wt (subst \\<rho> t) > wt (subst \\<rho> s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wt (subst \\<rho> s) < wt (subst \\<rho> t)", "using wt_\\<rho>t_ne_\\<rho>s"], ["proof (prove)\nusing this:\n  wt (subst \\<rho> t) \\<noteq> wt (subst \\<rho> s)\n\ngoal (1 subgoal):\n 1. wt (subst \\<rho> s) < wt (subst \\<rho> t)", "unfolding wt_subst[OF wary_\\<rho> wary_s] wt_subst[OF wary_\\<rho> wary_t]"], ["proof (prove)\nusing this:\n  wt t + extra_wt \\<rho> t \\<noteq> wt s + extra_wt \\<rho> s\n\ngoal (1 subgoal):\n 1. wt s + extra_wt \\<rho> s < wt t + extra_wt \\<rho> t", "by (metis add_le_cancel_left add_less_le_mono extra_wt_subseteq\n        order.not_eq_order_implies_strict vars_s wt_t_ge_s)"], ["proof (state)\nthis:\n  wt (subst \\<rho> s) < wt (subst \\<rho> t)\n\ngoal (2 subgoals):\n 1. wt (subst \\<rho> t) = wt (subst \\<rho> s) \\<Longrightarrow>\n    subst \\<rho> t >\\<^sub>t subst \\<rho> s\n 2. wt (subst \\<rho> t) \\<noteq> wt (subst \\<rho> s) \\<Longrightarrow>\n    subst \\<rho> t >\\<^sub>t subst \\<rho> s", "thus ?thesis"], ["proof (prove)\nusing this:\n  wt (subst \\<rho> s) < wt (subst \\<rho> t)\n\ngoal (1 subgoal):\n 1. subst \\<rho> t >\\<^sub>t subst \\<rho> s", "by (rule gt_wt[OF vars_\\<rho>s])"], ["proof (state)\nthis:\n  subst \\<rho> t >\\<^sub>t subst \\<rho> s\n\ngoal (1 subgoal):\n 1. wt (subst \\<rho> t) = wt (subst \\<rho> s) \\<Longrightarrow>\n    subst \\<rho> t >\\<^sub>t subst \\<rho> s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. wt (subst \\<rho> t) = wt (subst \\<rho> s) \\<Longrightarrow>\n    subst \\<rho> t >\\<^sub>t subst \\<rho> s", "case wt_\\<rho>t_eq_\\<rho>s: True"], ["proof (state)\nthis:\n  wt (subst \\<rho> t) = wt (subst \\<rho> s)\n\ngoal (1 subgoal):\n 1. wt (subst \\<rho> t) = wt (subst \\<rho> s) \\<Longrightarrow>\n    subst \\<rho> t >\\<^sub>t subst \\<rho> s", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. subst \\<rho> t >\\<^sub>t subst \\<rho> s", "using t_gt_s"], ["proof (prove)\nusing this:\n  t >\\<^sub>t s\n\ngoal (1 subgoal):\n 1. subst \\<rho> t >\\<^sub>t subst \\<rho> s", "proof cases"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt s < wt t\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s\n 2. \\<lbrakk>wt t = wt s; \\<not> head t \\<le>\\<ge>\\<^sub>h\\<^sub>d head s;\n     num_args t = 1;\n     \\<exists>f\\<in>local.ground_heads (head t).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg t \\<ge>\\<^sub>t s\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s\n 3. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t >\\<^sub>h\\<^sub>d head s\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s\n 4. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head t).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s", "case gt_wt"], ["proof (state)\nthis:\n  vars_mset s \\<subseteq># vars_mset t\n  wt s < wt t\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt s < wt t\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s\n 2. \\<lbrakk>wt t = wt s; \\<not> head t \\<le>\\<ge>\\<^sub>h\\<^sub>d head s;\n     num_args t = 1;\n     \\<exists>f\\<in>local.ground_heads (head t).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg t \\<ge>\\<^sub>t s\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s\n 3. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t >\\<^sub>h\\<^sub>d head s\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s\n 4. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head t).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s", "hence False"], ["proof (prove)\nusing this:\n  vars_mset s \\<subseteq># vars_mset t\n  wt s < wt t\n\ngoal (1 subgoal):\n 1. False", "using wt_\\<rho>t_eq_\\<rho>s wary_s wary_t"], ["proof (prove)\nusing this:\n  vars_mset s \\<subseteq># vars_mset t\n  wt s < wt t\n  wt (subst \\<rho> t) = wt (subst \\<rho> s)\n  wary s\n  wary t\n\ngoal (1 subgoal):\n 1. False", "by (metis add_diff_cancel_right' diff_le_mono2 extra_wt_subseteq wt_subst leD wary_\\<rho>)"], ["proof (state)\nthis:\n  False\n\ngoal (4 subgoals):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt s < wt t\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s\n 2. \\<lbrakk>wt t = wt s; \\<not> head t \\<le>\\<ge>\\<^sub>h\\<^sub>d head s;\n     num_args t = 1;\n     \\<exists>f\\<in>local.ground_heads (head t).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg t \\<ge>\\<^sub>t s\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s\n 3. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t >\\<^sub>h\\<^sub>d head s\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s\n 4. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head t).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. subst \\<rho> t >\\<^sub>t subst \\<rho> s", "by sat"], ["proof (state)\nthis:\n  subst \\<rho> t >\\<^sub>t subst \\<rho> s\n\ngoal (3 subgoals):\n 1. \\<lbrakk>wt t = wt s; \\<not> head t \\<le>\\<ge>\\<^sub>h\\<^sub>d head s;\n     num_args t = 1;\n     \\<exists>f\\<in>local.ground_heads (head t).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg t \\<ge>\\<^sub>t s\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s\n 2. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t >\\<^sub>h\\<^sub>d head s\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s\n 3. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head t).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<lbrakk>wt t = wt s; \\<not> head t \\<le>\\<ge>\\<^sub>h\\<^sub>d head s;\n     num_args t = 1;\n     \\<exists>f\\<in>local.ground_heads (head t).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg t \\<ge>\\<^sub>t s\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s\n 2. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t >\\<^sub>h\\<^sub>d head s\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s\n 3. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head t).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s", "case gt_unary"], ["proof (state)\nthis:\n  wt t = wt s\n  \\<not> head t \\<le>\\<ge>\\<^sub>h\\<^sub>d head s\n  num_args t = 1\n  \\<exists>f\\<in>local.ground_heads (head t).\n     arity_sym f = 1 \\<and> wt_sym f = 0\n  arg t \\<ge>\\<^sub>t s\n\ngoal (3 subgoals):\n 1. \\<lbrakk>wt t = wt s; \\<not> head t \\<le>\\<ge>\\<^sub>h\\<^sub>d head s;\n     num_args t = 1;\n     \\<exists>f\\<in>local.ground_heads (head t).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg t \\<ge>\\<^sub>t s\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s\n 2. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t >\\<^sub>h\\<^sub>d head s\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s\n 3. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head t).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s", "have wary_\\<rho>t: \"wary (subst \\<rho> t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wary (subst \\<rho> t)", "by (simp add: wary_subst_wary wary_t wary_\\<rho>)"], ["proof (state)\nthis:\n  wary (subst \\<rho> t)\n\ngoal (3 subgoals):\n 1. \\<lbrakk>wt t = wt s; \\<not> head t \\<le>\\<ge>\\<^sub>h\\<^sub>d head s;\n     num_args t = 1;\n     \\<exists>f\\<in>local.ground_heads (head t).\n        arity_sym f = 1 \\<and> wt_sym f = 0;\n     arg t \\<ge>\\<^sub>t s\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s\n 2. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t >\\<^sub>h\\<^sub>d head s\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s\n 3. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head t).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. subst \\<rho> t >\\<^sub>t subst \\<rho> s", "proof (cases t)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x1.\n       t = Hd x1 \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s\n 2. \\<And>x21 x22.\n       t = App x21 x22 \\<Longrightarrow>\n       subst \\<rho> t >\\<^sub>t subst \\<rho> s", "case Hd"], ["proof (state)\nthis:\n  t = Hd x1_\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       t = Hd x1 \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s\n 2. \\<And>x21 x22.\n       t = App x21 x22 \\<Longrightarrow>\n       subst \\<rho> t >\\<^sub>t subst \\<rho> s", "hence False"], ["proof (prove)\nusing this:\n  t = Hd x1_\n\ngoal (1 subgoal):\n 1. False", "using gt_unary(3)"], ["proof (prove)\nusing this:\n  t = Hd x1_\n  num_args t = 1\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (2 subgoals):\n 1. \\<And>x1.\n       t = Hd x1 \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s\n 2. \\<And>x21 x22.\n       t = App x21 x22 \\<Longrightarrow>\n       subst \\<rho> t >\\<^sub>t subst \\<rho> s", "thus ?thesis"], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. subst \\<rho> t >\\<^sub>t subst \\<rho> s", "by sat"], ["proof (state)\nthis:\n  subst \\<rho> t >\\<^sub>t subst \\<rho> s\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22.\n       t = App x21 x22 \\<Longrightarrow>\n       subst \\<rho> t >\\<^sub>t subst \\<rho> s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x21 x22.\n       t = App x21 x22 \\<Longrightarrow>\n       subst \\<rho> t >\\<^sub>t subst \\<rho> s", "case t: (App t1 t2)"], ["proof (state)\nthis:\n  t = App t1 t2\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22.\n       t = App x21 x22 \\<Longrightarrow>\n       subst \\<rho> t >\\<^sub>t subst \\<rho> s", "hence t2: \"t2 = arg t\""], ["proof (prove)\nusing this:\n  t = App t1 t2\n\ngoal (1 subgoal):\n 1. t2 = arg t", "by simp"], ["proof (state)\nthis:\n  t2 = arg t\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22.\n       t = App x21 x22 \\<Longrightarrow>\n       subst \\<rho> t >\\<^sub>t subst \\<rho> s", "hence wary_t2: \"wary t2\""], ["proof (prove)\nusing this:\n  t2 = arg t\n\ngoal (1 subgoal):\n 1. wary t2", "using wary_t"], ["proof (prove)\nusing this:\n  t2 = arg t\n  wary t\n\ngoal (1 subgoal):\n 1. wary t2", "by blast"], ["proof (state)\nthis:\n  wary t2\n\ngoal (1 subgoal):\n 1. \\<And>x21 x22.\n       t = App x21 x22 \\<Longrightarrow>\n       subst \\<rho> t >\\<^sub>t subst \\<rho> s", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. subst \\<rho> t >\\<^sub>t subst \\<rho> s", "proof (cases \"t2 = s\")"], ["proof (state)\ngoal (2 subgoals):\n 1. t2 = s \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s\n 2. t2 \\<noteq> s \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s", "case True"], ["proof (state)\nthis:\n  t2 = s\n\ngoal (2 subgoals):\n 1. t2 = s \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s\n 2. t2 \\<noteq> s \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s", "moreover"], ["proof (state)\nthis:\n  t2 = s\n\ngoal (2 subgoals):\n 1. t2 = s \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s\n 2. t2 \\<noteq> s \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s", "have \"subst \\<rho> t >\\<^sub>t subst \\<rho> t2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subst \\<rho> t >\\<^sub>t subst \\<rho> t2", "using gt_sub_arg wary_\\<rho>t"], ["proof (prove)\nusing this:\n  wary (App ?s ?t) \\<Longrightarrow> App ?s ?t >\\<^sub>t ?t\n  wary (subst \\<rho> t)\n\ngoal (1 subgoal):\n 1. subst \\<rho> t >\\<^sub>t subst \\<rho> t2", "unfolding t"], ["proof (prove)\nusing this:\n  wary (App ?s ?t) \\<Longrightarrow> App ?s ?t >\\<^sub>t ?t\n  wary (subst \\<rho> (App t1 t2))\n\ngoal (1 subgoal):\n 1. subst \\<rho> (App t1 t2) >\\<^sub>t subst \\<rho> t2", "by simp"], ["proof (state)\nthis:\n  subst \\<rho> t >\\<^sub>t subst \\<rho> t2\n\ngoal (2 subgoals):\n 1. t2 = s \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s\n 2. t2 \\<noteq> s \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s", "ultimately"], ["proof (chain)\npicking this:\n  t2 = s\n  subst \\<rho> t >\\<^sub>t subst \\<rho> t2", "show ?thesis"], ["proof (prove)\nusing this:\n  t2 = s\n  subst \\<rho> t >\\<^sub>t subst \\<rho> t2\n\ngoal (1 subgoal):\n 1. subst \\<rho> t >\\<^sub>t subst \\<rho> s", "by simp"], ["proof (state)\nthis:\n  subst \\<rho> t >\\<^sub>t subst \\<rho> s\n\ngoal (1 subgoal):\n 1. t2 \\<noteq> s \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. t2 \\<noteq> s \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s", "case t2_ne_s: False"], ["proof (state)\nthis:\n  t2 \\<noteq> s\n\ngoal (1 subgoal):\n 1. t2 \\<noteq> s \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s", "hence t2_gt_s: \"t2 >\\<^sub>t s\""], ["proof (prove)\nusing this:\n  t2 \\<noteq> s\n\ngoal (1 subgoal):\n 1. t2 >\\<^sub>t s", "using gt_unary(5) t2"], ["proof (prove)\nusing this:\n  t2 \\<noteq> s\n  arg t \\<ge>\\<^sub>t s\n  t2 = arg t\n\ngoal (1 subgoal):\n 1. t2 >\\<^sub>t s", "by blast"], ["proof (state)\nthis:\n  t2 >\\<^sub>t s\n\ngoal (1 subgoal):\n 1. t2 \\<noteq> s \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s", "have \"subst \\<rho> t2 >\\<^sub>t subst \\<rho> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. subst \\<rho> t2 >\\<^sub>t subst \\<rho> s", "by (rule ih[OF _ wary_t2 wary_s t2_gt_s]) (simp add: t)"], ["proof (state)\nthis:\n  subst \\<rho> t2 >\\<^sub>t subst \\<rho> s\n\ngoal (1 subgoal):\n 1. t2 \\<noteq> s \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s", "thus ?thesis"], ["proof (prove)\nusing this:\n  subst \\<rho> t2 >\\<^sub>t subst \\<rho> s\n\ngoal (1 subgoal):\n 1. subst \\<rho> t >\\<^sub>t subst \\<rho> s", "by (metis gt_sub_arg gt_trans subst.simps(2) t wary_\\<rho> wary_\\<rho>t wary_s wary_subst_wary\n              wary_t2)"], ["proof (state)\nthis:\n  subst \\<rho> t >\\<^sub>t subst \\<rho> s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  subst \\<rho> t >\\<^sub>t subst \\<rho> s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  subst \\<rho> t >\\<^sub>t subst \\<rho> s\n\ngoal (2 subgoals):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t >\\<^sub>h\\<^sub>d head s\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s\n 2. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head t).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t >\\<^sub>h\\<^sub>d head s\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s\n 2. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head t).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s", "case _: gt_diff"], ["proof (state)\nthis:\n  vars_mset s \\<subseteq># vars_mset t\n  wt t = wt s\n  head t >\\<^sub>h\\<^sub>d head s\n\ngoal (2 subgoals):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t >\\<^sub>h\\<^sub>d head s\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s\n 2. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head t).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s", "note vars_s = this(1) and hd_t_gt_hd_s = this(3)"], ["proof (state)\nthis:\n  vars_mset s \\<subseteq># vars_mset t\n  head t >\\<^sub>h\\<^sub>d head s\n\ngoal (2 subgoals):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t >\\<^sub>h\\<^sub>d head s\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s\n 2. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head t).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s", "have vars_\\<rho>s: \"vars_mset (subst \\<rho> t) \\<supseteq># vars_mset (subst \\<rho> s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars_mset (subst \\<rho> s) \\<subseteq># vars_mset (subst \\<rho> t)", "by (rule vars_mset_subst_subseteq[OF vars_s])"], ["proof (state)\nthis:\n  vars_mset (subst \\<rho> s) \\<subseteq># vars_mset (subst \\<rho> t)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t >\\<^sub>h\\<^sub>d head s\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s\n 2. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head t).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s", "have \"head (subst \\<rho> t) >\\<^sub>h\\<^sub>d head (subst \\<rho> s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. head (subst \\<rho> t) >\\<^sub>h\\<^sub>d head (subst \\<rho> s)", "by (meson hd_t_gt_hd_s wary_subst_ground_heads gt_hd_def rev_subsetD wary_\\<rho>)"], ["proof (state)\nthis:\n  head (subst \\<rho> t) >\\<^sub>h\\<^sub>d head (subst \\<rho> s)\n\ngoal (2 subgoals):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t >\\<^sub>h\\<^sub>d head s\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s\n 2. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head t).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s", "thus ?thesis"], ["proof (prove)\nusing this:\n  head (subst \\<rho> t) >\\<^sub>h\\<^sub>d head (subst \\<rho> s)\n\ngoal (1 subgoal):\n 1. subst \\<rho> t >\\<^sub>t subst \\<rho> s", "by (rule gt_diff[OF vars_\\<rho>s wt_\\<rho>t_eq_\\<rho>s])"], ["proof (state)\nthis:\n  subst \\<rho> t >\\<^sub>t subst \\<rho> s\n\ngoal (1 subgoal):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head t).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head t).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s", "case _: gt_same"], ["proof (state)\nthis:\n  vars_mset s \\<subseteq># vars_mset t\n  wt t = wt s\n  head t = head s\n  \\<forall>f\\<in>local.ground_heads (head t).\n     extf f (>\\<^sub>t) (args t) (args s)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head t).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s", "note vars_s = this(1) and hd_s_eq_hd_t = this(3) and extf = this(4)"], ["proof (state)\nthis:\n  vars_mset s \\<subseteq># vars_mset t\n  head t = head s\n  \\<forall>f\\<in>local.ground_heads (head t).\n     extf f (>\\<^sub>t) (args t) (args s)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head t).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s", "have vars_\\<rho>s: \"vars_mset (subst \\<rho> t) \\<supseteq># vars_mset (subst \\<rho> s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars_mset (subst \\<rho> s) \\<subseteq># vars_mset (subst \\<rho> t)", "by (rule vars_mset_subst_subseteq[OF vars_s])"], ["proof (state)\nthis:\n  vars_mset (subst \\<rho> s) \\<subseteq># vars_mset (subst \\<rho> t)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head t).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s", "have hd_\\<rho>t: \"head (subst \\<rho> t) = head (subst \\<rho> s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. head (subst \\<rho> t) = head (subst \\<rho> s)", "by (simp add: hd_s_eq_hd_t)"], ["proof (state)\nthis:\n  head (subst \\<rho> t) = head (subst \\<rho> s)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head t).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s", "{"], ["proof (state)\nthis:\n  head (subst \\<rho> t) = head (subst \\<rho> s)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head t).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head t).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s", "assume f_in_grs: \"f \\<in> ground_heads (head (subst \\<rho> t))\""], ["proof (state)\nthis:\n  f \\<in> local.ground_heads (head (subst \\<rho> t))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head t).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s", "let ?S = \"set (args t) \\<union> set (args s)\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head t).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s", "have extf_args_s_t: \"extf f (>\\<^sub>t) (args t) (args s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. extf f (>\\<^sub>t) (args t) (args s)", "using extf f_in_grs wary_subst_ground_heads wary_\\<rho>"], ["proof (prove)\nusing this:\n  \\<forall>f\\<in>local.ground_heads (head t).\n     extf f (>\\<^sub>t) (args t) (args s)\n  f \\<in> local.ground_heads (head (subst \\<rho> t))\n  wary_subst ?\\<rho> \\<Longrightarrow>\n  local.ground_heads (head (subst ?\\<rho> ?s))\n  \\<subseteq> local.ground_heads (head ?s)\n  wary_subst \\<rho>\n\ngoal (1 subgoal):\n 1. extf f (>\\<^sub>t) (args t) (args s)", "by blast"], ["proof (state)\nthis:\n  extf f (>\\<^sub>t) (args t) (args s)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head t).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s", "have \"extf f (>\\<^sub>t) (map (subst \\<rho>) (args t)) (map (subst \\<rho>) (args s))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. extf f (>\\<^sub>t) (map (subst \\<rho>) (args t))\n     (map (subst \\<rho>) (args s))", "proof (rule extf_map[of ?S, OF _ _ _ _ _ _ extf_args_s_t])"], ["proof (state)\ngoal (6 subgoals):\n 1. finite (set (args t) \\<union> set (args s))\n 2. args t \\<in> lists (set (args t) \\<union> set (args s))\n 3. args s \\<in> lists (set (args t) \\<union> set (args s))\n 4. \\<forall>x\\<in>set (args t) \\<union> set (args s).\n       \\<not> subst \\<rho> x >\\<^sub>t subst \\<rho> x\n 5. \\<forall>z\\<in>set (args t) \\<union> set (args s).\n       \\<forall>y\\<in>set (args t) \\<union> set (args s).\n          \\<forall>x\\<in>set (args t) \\<union> set (args s).\n             subst \\<rho> z >\\<^sub>t subst \\<rho> y \\<longrightarrow>\n             subst \\<rho> y >\\<^sub>t subst \\<rho> x \\<longrightarrow>\n             subst \\<rho> z >\\<^sub>t subst \\<rho> x\n 6. \\<forall>y\\<in>set (args t) \\<union> set (args s).\n       \\<forall>x\\<in>set (args t) \\<union> set (args s).\n          y >\\<^sub>t x \\<longrightarrow>\n          subst \\<rho> y >\\<^sub>t subst \\<rho> x", "show \"\\<forall>x \\<in> ?S. \\<not> subst \\<rho> x >\\<^sub>t subst \\<rho> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>set (args t) \\<union> set (args s).\n       \\<not> subst \\<rho> x >\\<^sub>t subst \\<rho> x", "using gt_irrefl wary_t wary_s wary_args wary_\\<rho> wary_subst_wary"], ["proof (prove)\nusing this:\n  wary ?s \\<Longrightarrow> \\<not> ?s >\\<^sub>t ?s\n  wary t\n  wary s\n  \\<lbrakk>?s \\<in> set (args ?t); wary ?t\\<rbrakk>\n  \\<Longrightarrow> wary ?s\n  wary_subst \\<rho>\n  \\<lbrakk>wary_subst ?\\<rho>; wary ?s\\<rbrakk>\n  \\<Longrightarrow> wary (subst ?\\<rho> ?s)\n\ngoal (1 subgoal):\n 1. \\<forall>x\\<in>set (args t) \\<union> set (args s).\n       \\<not> subst \\<rho> x >\\<^sub>t subst \\<rho> x", "by fastforce"], ["proof (state)\nthis:\n  \\<forall>x\\<in>set (args t) \\<union> set (args s).\n     \\<not> subst \\<rho> x >\\<^sub>t subst \\<rho> x\n\ngoal (5 subgoals):\n 1. finite (set (args t) \\<union> set (args s))\n 2. args t \\<in> lists (set (args t) \\<union> set (args s))\n 3. args s \\<in> lists (set (args t) \\<union> set (args s))\n 4. \\<forall>z\\<in>set (args t) \\<union> set (args s).\n       \\<forall>y\\<in>set (args t) \\<union> set (args s).\n          \\<forall>x\\<in>set (args t) \\<union> set (args s).\n             subst \\<rho> z >\\<^sub>t subst \\<rho> y \\<longrightarrow>\n             subst \\<rho> y >\\<^sub>t subst \\<rho> x \\<longrightarrow>\n             subst \\<rho> z >\\<^sub>t subst \\<rho> x\n 5. \\<forall>y\\<in>set (args t) \\<union> set (args s).\n       \\<forall>x\\<in>set (args t) \\<union> set (args s).\n          y >\\<^sub>t x \\<longrightarrow>\n          subst \\<rho> y >\\<^sub>t subst \\<rho> x", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. finite (set (args t) \\<union> set (args s))\n 2. args t \\<in> lists (set (args t) \\<union> set (args s))\n 3. args s \\<in> lists (set (args t) \\<union> set (args s))\n 4. \\<forall>z\\<in>set (args t) \\<union> set (args s).\n       \\<forall>y\\<in>set (args t) \\<union> set (args s).\n          \\<forall>x\\<in>set (args t) \\<union> set (args s).\n             subst \\<rho> z >\\<^sub>t subst \\<rho> y \\<longrightarrow>\n             subst \\<rho> y >\\<^sub>t subst \\<rho> x \\<longrightarrow>\n             subst \\<rho> z >\\<^sub>t subst \\<rho> x\n 5. \\<forall>y\\<in>set (args t) \\<union> set (args s).\n       \\<forall>x\\<in>set (args t) \\<union> set (args s).\n          y >\\<^sub>t x \\<longrightarrow>\n          subst \\<rho> y >\\<^sub>t subst \\<rho> x", "show \"\\<forall>z \\<in> ?S. \\<forall>y \\<in> ?S. \\<forall>x \\<in> ?S. subst \\<rho> z >\\<^sub>t subst \\<rho> y \\<longrightarrow> subst \\<rho> y >\\<^sub>t subst \\<rho> x \\<longrightarrow>\n            subst \\<rho> z >\\<^sub>t subst \\<rho> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>z\\<in>set (args t) \\<union> set (args s).\n       \\<forall>y\\<in>set (args t) \\<union> set (args s).\n          \\<forall>x\\<in>set (args t) \\<union> set (args s).\n             subst \\<rho> z >\\<^sub>t subst \\<rho> y \\<longrightarrow>\n             subst \\<rho> y >\\<^sub>t subst \\<rho> x \\<longrightarrow>\n             subst \\<rho> z >\\<^sub>t subst \\<rho> x", "using gt_trans wary_t wary_s wary_args wary_\\<rho> wary_subst_wary"], ["proof (prove)\nusing this:\n  \\<lbrakk>wary ?u; wary ?t; wary ?s; ?u >\\<^sub>t ?t;\n   ?t >\\<^sub>t ?s\\<rbrakk>\n  \\<Longrightarrow> ?u >\\<^sub>t ?s\n  wary t\n  wary s\n  \\<lbrakk>?s \\<in> set (args ?t); wary ?t\\<rbrakk>\n  \\<Longrightarrow> wary ?s\n  wary_subst \\<rho>\n  \\<lbrakk>wary_subst ?\\<rho>; wary ?s\\<rbrakk>\n  \\<Longrightarrow> wary (subst ?\\<rho> ?s)\n\ngoal (1 subgoal):\n 1. \\<forall>z\\<in>set (args t) \\<union> set (args s).\n       \\<forall>y\\<in>set (args t) \\<union> set (args s).\n          \\<forall>x\\<in>set (args t) \\<union> set (args s).\n             subst \\<rho> z >\\<^sub>t subst \\<rho> y \\<longrightarrow>\n             subst \\<rho> y >\\<^sub>t subst \\<rho> x \\<longrightarrow>\n             subst \\<rho> z >\\<^sub>t subst \\<rho> x", "by (metis Un_iff)"], ["proof (state)\nthis:\n  \\<forall>z\\<in>set (args t) \\<union> set (args s).\n     \\<forall>y\\<in>set (args t) \\<union> set (args s).\n        \\<forall>x\\<in>set (args t) \\<union> set (args s).\n           subst \\<rho> z >\\<^sub>t subst \\<rho> y \\<longrightarrow>\n           subst \\<rho> y >\\<^sub>t subst \\<rho> x \\<longrightarrow>\n           subst \\<rho> z >\\<^sub>t subst \\<rho> x\n\ngoal (4 subgoals):\n 1. finite (set (args t) \\<union> set (args s))\n 2. args t \\<in> lists (set (args t) \\<union> set (args s))\n 3. args s \\<in> lists (set (args t) \\<union> set (args s))\n 4. \\<forall>y\\<in>set (args t) \\<union> set (args s).\n       \\<forall>x\\<in>set (args t) \\<union> set (args s).\n          y >\\<^sub>t x \\<longrightarrow>\n          subst \\<rho> y >\\<^sub>t subst \\<rho> x", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. finite (set (args t) \\<union> set (args s))\n 2. args t \\<in> lists (set (args t) \\<union> set (args s))\n 3. args s \\<in> lists (set (args t) \\<union> set (args s))\n 4. \\<forall>y\\<in>set (args t) \\<union> set (args s).\n       \\<forall>x\\<in>set (args t) \\<union> set (args s).\n          y >\\<^sub>t x \\<longrightarrow>\n          subst \\<rho> y >\\<^sub>t subst \\<rho> x", "have sz_a: \"\\<forall>ta \\<in> ?S. \\<forall>sa \\<in> ?S. {#size ta, size sa#} < {#size t, size s#}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>taa\\<in>set (args t) \\<union> set (args s).\n       \\<forall>saa\\<in>set (args t) \\<union> set (args s).\n          {#size taa, size saa#} < {#size t, size s#}", "by (fastforce intro: Max_lt_imp_lt_mset dest: size_in_args)"], ["proof (state)\nthis:\n  \\<forall>taa\\<in>set (args t) \\<union> set (args s).\n     \\<forall>saa\\<in>set (args t) \\<union> set (args s).\n        {#size taa, size saa#} < {#size t, size s#}\n\ngoal (4 subgoals):\n 1. finite (set (args t) \\<union> set (args s))\n 2. args t \\<in> lists (set (args t) \\<union> set (args s))\n 3. args s \\<in> lists (set (args t) \\<union> set (args s))\n 4. \\<forall>y\\<in>set (args t) \\<union> set (args s).\n       \\<forall>x\\<in>set (args t) \\<union> set (args s).\n          y >\\<^sub>t x \\<longrightarrow>\n          subst \\<rho> y >\\<^sub>t subst \\<rho> x", "show \"\\<forall>y \\<in> ?S. \\<forall>x \\<in> ?S. y >\\<^sub>t x \\<longrightarrow> subst \\<rho> y >\\<^sub>t subst \\<rho> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>set (args t) \\<union> set (args s).\n       \\<forall>x\\<in>set (args t) \\<union> set (args s).\n          y >\\<^sub>t x \\<longrightarrow>\n          subst \\<rho> y >\\<^sub>t subst \\<rho> x", "using ih sz_a size_in_args wary_t wary_s wary_args wary_\\<rho> wary_subst_wary"], ["proof (prove)\nusing this:\n  \\<lbrakk>{#size ?ta, size ?sa#} < {#size t, size s#}; wary ?ta; wary ?sa;\n   ?ta >\\<^sub>t ?sa\\<rbrakk>\n  \\<Longrightarrow> subst \\<rho> ?ta >\\<^sub>t subst \\<rho> ?sa\n  \\<forall>taa\\<in>set (args t) \\<union> set (args s).\n     \\<forall>saa\\<in>set (args t) \\<union> set (args s).\n        {#size taa, size saa#} < {#size t, size s#}\n  ?s \\<in> set (args ?t) \\<Longrightarrow> size ?s < size ?t\n  wary t\n  wary s\n  \\<lbrakk>?s \\<in> set (args ?t); wary ?t\\<rbrakk>\n  \\<Longrightarrow> wary ?s\n  wary_subst \\<rho>\n  \\<lbrakk>wary_subst ?\\<rho>; wary ?s\\<rbrakk>\n  \\<Longrightarrow> wary (subst ?\\<rho> ?s)\n\ngoal (1 subgoal):\n 1. \\<forall>y\\<in>set (args t) \\<union> set (args s).\n       \\<forall>x\\<in>set (args t) \\<union> set (args s).\n          y >\\<^sub>t x \\<longrightarrow>\n          subst \\<rho> y >\\<^sub>t subst \\<rho> x", "by fastforce"], ["proof (state)\nthis:\n  \\<forall>y\\<in>set (args t) \\<union> set (args s).\n     \\<forall>x\\<in>set (args t) \\<union> set (args s).\n        y >\\<^sub>t x \\<longrightarrow>\n        subst \\<rho> y >\\<^sub>t subst \\<rho> x\n\ngoal (3 subgoals):\n 1. finite (set (args t) \\<union> set (args s))\n 2. args t \\<in> lists (set (args t) \\<union> set (args s))\n 3. args s \\<in> lists (set (args t) \\<union> set (args s))", "qed auto"], ["proof (state)\nthis:\n  extf f (>\\<^sub>t) (map (subst \\<rho>) (args t))\n   (map (subst \\<rho>) (args s))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head t).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s", "hence \"extf f (>\\<^sub>t) (args (subst \\<rho> t)) (args (subst \\<rho> s))\""], ["proof (prove)\nusing this:\n  extf f (>\\<^sub>t) (map (subst \\<rho>) (args t))\n   (map (subst \\<rho>) (args s))\n\ngoal (1 subgoal):\n 1. extf f (>\\<^sub>t) (args (subst \\<rho> t)) (args (subst \\<rho> s))", "by (auto simp: hd_s_eq_hd_t intro: extf_compat_append_left)"], ["proof (state)\nthis:\n  extf f (>\\<^sub>t) (args (subst \\<rho> t)) (args (subst \\<rho> s))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head t).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s", "}"], ["proof (state)\nthis:\n  ?f2 \\<in> local.ground_heads (head (subst \\<rho> t)) \\<Longrightarrow>\n  extf ?f2 (>\\<^sub>t) (args (subst \\<rho> t)) (args (subst \\<rho> s))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head t).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s", "hence \"\\<forall>f \\<in> ground_heads (head (subst \\<rho> t)).\n        extf f (>\\<^sub>t) (args (subst \\<rho> t)) (args (subst \\<rho> s))\""], ["proof (prove)\nusing this:\n  ?f2 \\<in> local.ground_heads (head (subst \\<rho> t)) \\<Longrightarrow>\n  extf ?f2 (>\\<^sub>t) (args (subst \\<rho> t)) (args (subst \\<rho> s))\n\ngoal (1 subgoal):\n 1. \\<forall>f\\<in>local.ground_heads (head (subst \\<rho> t)).\n       extf f (>\\<^sub>t) (args (subst \\<rho> t)) (args (subst \\<rho> s))", "by blast"], ["proof (state)\nthis:\n  \\<forall>f\\<in>local.ground_heads (head (subst \\<rho> t)).\n     extf f (>\\<^sub>t) (args (subst \\<rho> t)) (args (subst \\<rho> s))\n\ngoal (1 subgoal):\n 1. \\<lbrakk>vars_mset s \\<subseteq># vars_mset t; wt t = wt s;\n     head t = head s;\n     \\<forall>f\\<in>local.ground_heads (head t).\n        extf f (>\\<^sub>t) (args t) (args s)\\<rbrakk>\n    \\<Longrightarrow> subst \\<rho> t >\\<^sub>t subst \\<rho> s", "thus ?thesis"], ["proof (prove)\nusing this:\n  \\<forall>f\\<in>local.ground_heads (head (subst \\<rho> t)).\n     extf f (>\\<^sub>t) (args (subst \\<rho> t)) (args (subst \\<rho> s))\n\ngoal (1 subgoal):\n 1. subst \\<rho> t >\\<^sub>t subst \\<rho> s", "by (rule gt_same[OF vars_\\<rho>s wt_\\<rho>t_eq_\\<rho>s hd_\\<rho>t])"], ["proof (state)\nthis:\n  subst \\<rho> t >\\<^sub>t subst \\<rho> s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  subst \\<rho> t >\\<^sub>t subst \\<rho> s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  subst \\<rho> t >\\<^sub>t subst \\<rho> s\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Totality on Ground Terms\\<close>"], ["", "theorem gt_total_ground:\n  assumes extf_total: \"\\<And>f. ext_total (extf f)\"\n  shows \"ground t \\<Longrightarrow> ground s \\<Longrightarrow> t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ground t; ground s\\<rbrakk>\n    \\<Longrightarrow> t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "proof (simp only: atomize_imp,\n    rule measure_induct_rule[of \"\\<lambda>(t, s). {# size t, size s #}\"\n      \"\\<lambda>(t, s). ground t \\<longrightarrow> ground s \\<longrightarrow> t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s\" \"(t, s)\", simplified prod.case],\n    simp only: split_paired_all prod.case atomize_imp[symmetric])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>\\<And>aa ba.\n                   \\<lbrakk>{#size aa, size ba#} < {#size a, size b#};\n                    ground aa; ground ba\\<rbrakk>\n                   \\<Longrightarrow> aa >\\<^sub>t ba \\<or>\n                                     ba >\\<^sub>t aa \\<or> aa = ba;\n        ground a; ground b\\<rbrakk>\n       \\<Longrightarrow> a >\\<^sub>t b \\<or> b >\\<^sub>t a \\<or> a = b", "fix t s :: \"('s, 'v) tm\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>\\<And>aa ba.\n                   \\<lbrakk>{#size aa, size ba#} < {#size a, size b#};\n                    ground aa; ground ba\\<rbrakk>\n                   \\<Longrightarrow> aa >\\<^sub>t ba \\<or>\n                                     ba >\\<^sub>t aa \\<or> aa = ba;\n        ground a; ground b\\<rbrakk>\n       \\<Longrightarrow> a >\\<^sub>t b \\<or> b >\\<^sub>t a \\<or> a = b", "assume\n    ih: \"\\<And>ta sa. {# size ta, size sa #} < {# size t, size s #} \\<Longrightarrow> ground ta \\<Longrightarrow> ground sa \\<Longrightarrow>\n      ta >\\<^sub>t sa \\<or> sa >\\<^sub>t ta \\<or> ta = sa\" and\n    gr_t: \"ground t\" and gr_s: \"ground s\""], ["proof (state)\nthis:\n  \\<lbrakk>{#size ?ta, size ?sa#} < {#size t, size s#}; ground ?ta;\n   ground ?sa\\<rbrakk>\n  \\<Longrightarrow> ?ta >\\<^sub>t ?sa \\<or>\n                    ?sa >\\<^sub>t ?ta \\<or> ?ta = ?sa\n  ground t\n  ground s\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>\\<And>aa ba.\n                   \\<lbrakk>{#size aa, size ba#} < {#size a, size b#};\n                    ground aa; ground ba\\<rbrakk>\n                   \\<Longrightarrow> aa >\\<^sub>t ba \\<or>\n                                     ba >\\<^sub>t aa \\<or> aa = ba;\n        ground a; ground b\\<rbrakk>\n       \\<Longrightarrow> a >\\<^sub>t b \\<or> b >\\<^sub>t a \\<or> a = b", "let ?case = \"t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>\\<And>aa ba.\n                   \\<lbrakk>{#size aa, size ba#} < {#size a, size b#};\n                    ground aa; ground ba\\<rbrakk>\n                   \\<Longrightarrow> aa >\\<^sub>t ba \\<or>\n                                     ba >\\<^sub>t aa \\<or> aa = ba;\n        ground a; ground b\\<rbrakk>\n       \\<Longrightarrow> a >\\<^sub>t b \\<or> b >\\<^sub>t a \\<or> a = b", "have\n    vars_t: \"vars_mset t \\<supseteq># vars_mset s\" and\n    vars_s: \"vars_mset s \\<supseteq># vars_mset t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars_mset s \\<subseteq># vars_mset t &&&\n    vars_mset t \\<subseteq># vars_mset s", "by (simp only: vars_mset_empty_iff[THEN iffD2, OF gr_s]\n      vars_mset_empty_iff[THEN iffD2, OF gr_t])+"], ["proof (state)\nthis:\n  vars_mset s \\<subseteq># vars_mset t\n  vars_mset t \\<subseteq># vars_mset s\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>\\<And>aa ba.\n                   \\<lbrakk>{#size aa, size ba#} < {#size a, size b#};\n                    ground aa; ground ba\\<rbrakk>\n                   \\<Longrightarrow> aa >\\<^sub>t ba \\<or>\n                                     ba >\\<^sub>t aa \\<or> aa = ba;\n        ground a; ground b\\<rbrakk>\n       \\<Longrightarrow> a >\\<^sub>t b \\<or> b >\\<^sub>t a \\<or> a = b", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "proof (cases \"wt t = wt s\")"], ["proof (state)\ngoal (2 subgoals):\n 1. wt t = wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s\n 2. wt t \\<noteq> wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "case False"], ["proof (state)\nthis:\n  wt t \\<noteq> wt s\n\ngoal (2 subgoals):\n 1. wt t = wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s\n 2. wt t \\<noteq> wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "moreover"], ["proof (state)\nthis:\n  wt t \\<noteq> wt s\n\ngoal (2 subgoals):\n 1. wt t = wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s\n 2. wt t \\<noteq> wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "{"], ["proof (state)\nthis:\n  wt t \\<noteq> wt s\n\ngoal (2 subgoals):\n 1. wt t = wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s\n 2. wt t \\<noteq> wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "assume \"wt t > wt s\""], ["proof (state)\nthis:\n  wt s < wt t\n\ngoal (2 subgoals):\n 1. wt t = wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s\n 2. wt t \\<noteq> wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "hence \"t >\\<^sub>t s\""], ["proof (prove)\nusing this:\n  wt s < wt t\n\ngoal (1 subgoal):\n 1. t >\\<^sub>t s", "by (rule gt_wt[OF vars_t])"], ["proof (state)\nthis:\n  t >\\<^sub>t s\n\ngoal (2 subgoals):\n 1. wt t = wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s\n 2. wt t \\<noteq> wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "}"], ["proof (state)\nthis:\n  wt s < wt t \\<Longrightarrow> t >\\<^sub>t s\n\ngoal (2 subgoals):\n 1. wt t = wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s\n 2. wt t \\<noteq> wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "moreover"], ["proof (state)\nthis:\n  wt s < wt t \\<Longrightarrow> t >\\<^sub>t s\n\ngoal (2 subgoals):\n 1. wt t = wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s\n 2. wt t \\<noteq> wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "{"], ["proof (state)\nthis:\n  wt s < wt t \\<Longrightarrow> t >\\<^sub>t s\n\ngoal (2 subgoals):\n 1. wt t = wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s\n 2. wt t \\<noteq> wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "assume \"wt s > wt t\""], ["proof (state)\nthis:\n  wt t < wt s\n\ngoal (2 subgoals):\n 1. wt t = wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s\n 2. wt t \\<noteq> wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "hence \"s >\\<^sub>t t\""], ["proof (prove)\nusing this:\n  wt t < wt s\n\ngoal (1 subgoal):\n 1. s >\\<^sub>t t", "by (rule gt_wt[OF vars_s])"], ["proof (state)\nthis:\n  s >\\<^sub>t t\n\ngoal (2 subgoals):\n 1. wt t = wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s\n 2. wt t \\<noteq> wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "}"], ["proof (state)\nthis:\n  wt t < wt s \\<Longrightarrow> s >\\<^sub>t t\n\ngoal (2 subgoals):\n 1. wt t = wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s\n 2. wt t \\<noteq> wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "ultimately"], ["proof (chain)\npicking this:\n  wt t \\<noteq> wt s\n  wt s < wt t \\<Longrightarrow> t >\\<^sub>t s\n  wt t < wt s \\<Longrightarrow> s >\\<^sub>t t", "show ?thesis"], ["proof (prove)\nusing this:\n  wt t \\<noteq> wt s\n  wt s < wt t \\<Longrightarrow> t >\\<^sub>t s\n  wt t < wt s \\<Longrightarrow> s >\\<^sub>t t\n\ngoal (1 subgoal):\n 1. t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "by linarith"], ["proof (state)\nthis:\n  t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s\n\ngoal (1 subgoal):\n 1. wt t = wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. wt t = wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "case wt_t: True"], ["proof (state)\nthis:\n  wt t = wt s\n\ngoal (1 subgoal):\n 1. wt t = wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "note wt_s = wt_t[symmetric]"], ["proof (state)\nthis:\n  wt s = wt t\n\ngoal (1 subgoal):\n 1. wt t = wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "obtain g where \\<xi>: \"head t = Sym g\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>g. head t = Sym g \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis ground_head[OF gr_t] hd.collapse(2))"], ["proof (state)\nthis:\n  head t = Sym g\n\ngoal (1 subgoal):\n 1. wt t = wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "obtain f where \\<zeta>: \"head s = Sym f\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>f. head s = Sym f \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis ground_head[OF gr_s] hd.collapse(2))"], ["proof (state)\nthis:\n  head s = Sym f\n\ngoal (1 subgoal):\n 1. wt t = wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "{"], ["proof (state)\nthis:\n  head s = Sym f\n\ngoal (1 subgoal):\n 1. wt t = wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "assume g_gt_f: \"g >\\<^sub>s f\""], ["proof (state)\nthis:\n  g >\\<^sub>s f\n\ngoal (1 subgoal):\n 1. wt t = wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "have \"t >\\<^sub>t s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t >\\<^sub>t s", "by (rule gt_diff[OF vars_t wt_t]) (simp add: \\<xi> \\<zeta> g_gt_f gt_hd_def)"], ["proof (state)\nthis:\n  t >\\<^sub>t s\n\ngoal (1 subgoal):\n 1. wt t = wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "}"], ["proof (state)\nthis:\n  g >\\<^sub>s f \\<Longrightarrow> t >\\<^sub>t s\n\ngoal (1 subgoal):\n 1. wt t = wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "moreover"], ["proof (state)\nthis:\n  g >\\<^sub>s f \\<Longrightarrow> t >\\<^sub>t s\n\ngoal (1 subgoal):\n 1. wt t = wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "{"], ["proof (state)\nthis:\n  g >\\<^sub>s f \\<Longrightarrow> t >\\<^sub>t s\n\ngoal (1 subgoal):\n 1. wt t = wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "assume f_gt_g: \"f >\\<^sub>s g\""], ["proof (state)\nthis:\n  f >\\<^sub>s g\n\ngoal (1 subgoal):\n 1. wt t = wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "have \"s >\\<^sub>t t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s >\\<^sub>t t", "by (rule gt_diff[OF vars_s wt_s]) (simp add: \\<xi> \\<zeta> f_gt_g gt_hd_def)"], ["proof (state)\nthis:\n  s >\\<^sub>t t\n\ngoal (1 subgoal):\n 1. wt t = wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "}"], ["proof (state)\nthis:\n  f >\\<^sub>s g \\<Longrightarrow> s >\\<^sub>t t\n\ngoal (1 subgoal):\n 1. wt t = wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "moreover"], ["proof (state)\nthis:\n  f >\\<^sub>s g \\<Longrightarrow> s >\\<^sub>t t\n\ngoal (1 subgoal):\n 1. wt t = wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "{"], ["proof (state)\nthis:\n  f >\\<^sub>s g \\<Longrightarrow> s >\\<^sub>t t\n\ngoal (1 subgoal):\n 1. wt t = wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "assume g_eq_f: \"g = f\""], ["proof (state)\nthis:\n  g = f\n\ngoal (1 subgoal):\n 1. wt t = wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "hence hd_t: \"head t = head s\""], ["proof (prove)\nusing this:\n  g = f\n\ngoal (1 subgoal):\n 1. head t = head s", "using \\<xi> \\<zeta>"], ["proof (prove)\nusing this:\n  g = f\n  head t = Sym g\n  head s = Sym f\n\ngoal (1 subgoal):\n 1. head t = head s", "by force"], ["proof (state)\nthis:\n  head t = head s\n\ngoal (1 subgoal):\n 1. wt t = wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "note hd_s = hd_t[symmetric]"], ["proof (state)\nthis:\n  head s = head t\n\ngoal (1 subgoal):\n 1. wt t = wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "have gr_ts: \"\\<forall>t \\<in> set (args t). ground t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>t\\<in>set (args t). ground t", "using gr_t ground_args"], ["proof (prove)\nusing this:\n  ground t\n  \\<lbrakk>?t \\<in> set (args ?s); ground ?s\\<rbrakk>\n  \\<Longrightarrow> ground ?t\n\ngoal (1 subgoal):\n 1. \\<forall>t\\<in>set (args t). ground t", "by auto"], ["proof (state)\nthis:\n  \\<forall>t\\<in>set (args t). ground t\n\ngoal (1 subgoal):\n 1. wt t = wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "have gr_ss: \"\\<forall>s \\<in> set (args s). ground s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>s\\<in>set (args s). ground s", "using gr_s ground_args"], ["proof (prove)\nusing this:\n  ground s\n  \\<lbrakk>?t \\<in> set (args ?s); ground ?s\\<rbrakk>\n  \\<Longrightarrow> ground ?t\n\ngoal (1 subgoal):\n 1. \\<forall>s\\<in>set (args s). ground s", "by auto"], ["proof (state)\nthis:\n  \\<forall>s\\<in>set (args s). ground s\n\ngoal (1 subgoal):\n 1. wt t = wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "let ?ts = \"args t\""], ["proof (state)\ngoal (1 subgoal):\n 1. wt t = wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "let ?ss = \"args s\""], ["proof (state)\ngoal (1 subgoal):\n 1. wt t = wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "have ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "proof (cases \"?ts = ?ss\")"], ["proof (state)\ngoal (2 subgoals):\n 1. args t = args s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s\n 2. args t \\<noteq> args s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "case ts_eq_ss: True"], ["proof (state)\nthis:\n  args t = args s\n\ngoal (2 subgoals):\n 1. args t = args s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s\n 2. args t \\<noteq> args s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "using \\<xi> \\<zeta> g_eq_f ts_eq_ss"], ["proof (prove)\nusing this:\n  head t = Sym g\n  head s = Sym f\n  g = f\n  args t = args s\n\ngoal (1 subgoal):\n 1. t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "by (simp add: tm_expand_apps)"], ["proof (state)\nthis:\n  t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s\n\ngoal (1 subgoal):\n 1. args t \\<noteq> args s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. args t \\<noteq> args s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "case False"], ["proof (state)\nthis:\n  args t \\<noteq> args s\n\ngoal (1 subgoal):\n 1. args t \\<noteq> args s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "hence \"extf g (>\\<^sub>t) (args t) ?ss \\<or> extf g (>\\<^sub>t) ?ss ?ts\""], ["proof (prove)\nusing this:\n  args t \\<noteq> args s\n\ngoal (1 subgoal):\n 1. extf g (>\\<^sub>t) (args t) (args s) \\<or>\n    extf g (>\\<^sub>t) (args s) (args t)", "using ih gr_ss gr_ts\n            ext_total.total[OF extf_total, rule_format, of \"set ?ts \\<union> set ?ss\" \"(>\\<^sub>t)\" ?ts ?ss g]"], ["proof (prove)\nusing this:\n  args t \\<noteq> args s\n  \\<lbrakk>{#size ?ta, size ?sa#} < {#size t, size s#}; ground ?ta;\n   ground ?sa\\<rbrakk>\n  \\<Longrightarrow> ?ta >\\<^sub>t ?sa \\<or>\n                    ?sa >\\<^sub>t ?ta \\<or> ?ta = ?sa\n  \\<forall>s\\<in>set (args s). ground s\n  \\<forall>t\\<in>set (args t). ground t\n  \\<lbrakk>\\<And>y x.\n              \\<lbrakk>y \\<in> set (args t) \\<union> set (args s);\n               x \\<in> set (args t) \\<union> set (args s)\\<rbrakk>\n              \\<Longrightarrow> y >\\<^sub>t x \\<or>\n                                x >\\<^sub>t y \\<or> y = x;\n   args t \\<in> lists (set (args t) \\<union> set (args s));\n   args s \\<in> lists (set (args t) \\<union> set (args s))\\<rbrakk>\n  \\<Longrightarrow> extf g (>\\<^sub>t) (args t) (args s) \\<or>\n                    extf g (>\\<^sub>t) (args s) (args t) \\<or>\n                    args t = args s\n\ngoal (1 subgoal):\n 1. extf g (>\\<^sub>t) (args t) (args s) \\<or>\n    extf g (>\\<^sub>t) (args s) (args t)", "by (metis Un_commute Un_iff in_lists_iff_set less_multiset_doubletons size_in_args sup_ge2)"], ["proof (state)\nthis:\n  extf g (>\\<^sub>t) (args t) (args s) \\<or>\n  extf g (>\\<^sub>t) (args s) (args t)\n\ngoal (1 subgoal):\n 1. args t \\<noteq> args s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "moreover"], ["proof (state)\nthis:\n  extf g (>\\<^sub>t) (args t) (args s) \\<or>\n  extf g (>\\<^sub>t) (args s) (args t)\n\ngoal (1 subgoal):\n 1. args t \\<noteq> args s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "{"], ["proof (state)\nthis:\n  extf g (>\\<^sub>t) (args t) (args s) \\<or>\n  extf g (>\\<^sub>t) (args s) (args t)\n\ngoal (1 subgoal):\n 1. args t \\<noteq> args s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "assume extf: \"extf g (>\\<^sub>t) ?ts ?ss\""], ["proof (state)\nthis:\n  extf g (>\\<^sub>t) (args t) (args s)\n\ngoal (1 subgoal):\n 1. args t \\<noteq> args s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "have \"t >\\<^sub>t s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t >\\<^sub>t s", "by (rule gt_same[OF vars_t wt_t hd_t]) (simp add: extf \\<xi>)"], ["proof (state)\nthis:\n  t >\\<^sub>t s\n\ngoal (1 subgoal):\n 1. args t \\<noteq> args s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "}"], ["proof (state)\nthis:\n  extf g (>\\<^sub>t) (args t) (args s) \\<Longrightarrow> t >\\<^sub>t s\n\ngoal (1 subgoal):\n 1. args t \\<noteq> args s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "moreover"], ["proof (state)\nthis:\n  extf g (>\\<^sub>t) (args t) (args s) \\<Longrightarrow> t >\\<^sub>t s\n\ngoal (1 subgoal):\n 1. args t \\<noteq> args s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "{"], ["proof (state)\nthis:\n  extf g (>\\<^sub>t) (args t) (args s) \\<Longrightarrow> t >\\<^sub>t s\n\ngoal (1 subgoal):\n 1. args t \\<noteq> args s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "assume extf: \"extf g (>\\<^sub>t) ?ss ?ts\""], ["proof (state)\nthis:\n  extf g (>\\<^sub>t) (args s) (args t)\n\ngoal (1 subgoal):\n 1. args t \\<noteq> args s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "have \"s >\\<^sub>t t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s >\\<^sub>t t", "by (rule gt_same[OF vars_s wt_s hd_s]) (simp add: extf[unfolded g_eq_f] \\<zeta>)"], ["proof (state)\nthis:\n  s >\\<^sub>t t\n\ngoal (1 subgoal):\n 1. args t \\<noteq> args s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "}"], ["proof (state)\nthis:\n  extf g (>\\<^sub>t) (args s) (args t) \\<Longrightarrow> s >\\<^sub>t t\n\ngoal (1 subgoal):\n 1. args t \\<noteq> args s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "ultimately"], ["proof (chain)\npicking this:\n  extf g (>\\<^sub>t) (args t) (args s) \\<or>\n  extf g (>\\<^sub>t) (args s) (args t)\n  extf g (>\\<^sub>t) (args t) (args s) \\<Longrightarrow> t >\\<^sub>t s\n  extf g (>\\<^sub>t) (args s) (args t) \\<Longrightarrow> s >\\<^sub>t t", "show ?thesis"], ["proof (prove)\nusing this:\n  extf g (>\\<^sub>t) (args t) (args s) \\<or>\n  extf g (>\\<^sub>t) (args s) (args t)\n  extf g (>\\<^sub>t) (args t) (args s) \\<Longrightarrow> t >\\<^sub>t s\n  extf g (>\\<^sub>t) (args s) (args t) \\<Longrightarrow> s >\\<^sub>t t\n\ngoal (1 subgoal):\n 1. t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "by sat"], ["proof (state)\nthis:\n  t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s\n\ngoal (1 subgoal):\n 1. wt t = wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "}"], ["proof (state)\nthis:\n  g = f \\<Longrightarrow> t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s\n\ngoal (1 subgoal):\n 1. wt t = wt s \\<Longrightarrow>\n    t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "ultimately"], ["proof (chain)\npicking this:\n  g >\\<^sub>s f \\<Longrightarrow> t >\\<^sub>t s\n  f >\\<^sub>s g \\<Longrightarrow> s >\\<^sub>t t\n  g = f \\<Longrightarrow> t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "show ?thesis"], ["proof (prove)\nusing this:\n  g >\\<^sub>s f \\<Longrightarrow> t >\\<^sub>t s\n  f >\\<^sub>s g \\<Longrightarrow> s >\\<^sub>t t\n  g = f \\<Longrightarrow> t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s\n\ngoal (1 subgoal):\n 1. t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "using gt_sym_total"], ["proof (prove)\nusing this:\n  g >\\<^sub>s f \\<Longrightarrow> t >\\<^sub>t s\n  f >\\<^sub>s g \\<Longrightarrow> s >\\<^sub>t t\n  g = f \\<Longrightarrow> t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s\n  ?f >\\<^sub>s ?g \\<or> ?g >\\<^sub>s ?f \\<or> ?g = ?f\n\ngoal (1 subgoal):\n 1. t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s", "by blast"], ["proof (state)\nthis:\n  t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  t >\\<^sub>t s \\<or> s >\\<^sub>t t \\<or> t = s\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Well-foundedness\\<close>"], ["", "abbreviation gtw :: \"('s, 'v) tm \\<Rightarrow> ('s, 'v) tm \\<Rightarrow> bool\" (infix \">\\<^sub>t\\<^sub>w\" 50) where\n  \"(>\\<^sub>t\\<^sub>w) \\<equiv> \\<lambda>t s. wary t \\<and> wary s \\<and> t >\\<^sub>t s\""], ["", "abbreviation gtwg :: \"('s, 'v) tm \\<Rightarrow> ('s, 'v) tm \\<Rightarrow> bool\" (infix \">\\<^sub>t\\<^sub>w\\<^sub>g\" 50) where\n  \"(>\\<^sub>t\\<^sub>w\\<^sub>g) \\<equiv> \\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s\""], ["", "lemma ground_gt_unary:\n  assumes gr_t: \"ground t\"\n  shows \"\\<not> gt_unary t s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> gt_unary t s", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. gt_unary t s \\<Longrightarrow> False", "assume gt_unary_t_s: \"gt_unary t s\""], ["proof (state)\nthis:\n  gt_unary t s\n\ngoal (1 subgoal):\n 1. gt_unary t s \\<Longrightarrow> False", "hence \"t >\\<^sub>t s\""], ["proof (prove)\nusing this:\n  gt_unary t s\n\ngoal (1 subgoal):\n 1. t >\\<^sub>t s", "using gt_iff_wt_unary_diff_same"], ["proof (prove)\nusing this:\n  gt_unary t s\n  (?t >\\<^sub>t ?s) =\n  (gt_wt ?t ?s \\<or> gt_unary ?t ?s \\<or> gt_diff ?t ?s \\<or> gt_same ?t ?s)\n\ngoal (1 subgoal):\n 1. t >\\<^sub>t s", "by blast"], ["proof (state)\nthis:\n  t >\\<^sub>t s\n\ngoal (1 subgoal):\n 1. gt_unary t s \\<Longrightarrow> False", "hence gr_s: \"ground s\""], ["proof (prove)\nusing this:\n  t >\\<^sub>t s\n\ngoal (1 subgoal):\n 1. ground s", "using gr_t gt_imp_vars"], ["proof (prove)\nusing this:\n  t >\\<^sub>t s\n  ground t\n  ?t >\\<^sub>t ?s \\<Longrightarrow> vars ?s \\<subseteq> vars ?t\n\ngoal (1 subgoal):\n 1. ground s", "by blast"], ["proof (state)\nthis:\n  ground s\n\ngoal (1 subgoal):\n 1. gt_unary t s \\<Longrightarrow> False", "have ngr_t_or_s: \"\\<not> ground t \\<or> \\<not> ground s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. vars t \\<noteq> {} \\<or> vars s \\<noteq> {}", "using gt_unary_t_s"], ["proof (prove)\nusing this:\n  gt_unary t s\n\ngoal (1 subgoal):\n 1. vars t \\<noteq> {} \\<or> vars s \\<noteq> {}", "by cases (blast dest: ground_head not_comp_hd_imp_Var)"], ["proof (state)\nthis:\n  vars t \\<noteq> {} \\<or> vars s \\<noteq> {}\n\ngoal (1 subgoal):\n 1. gt_unary t s \\<Longrightarrow> False", "show False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "using gr_t gr_s ngr_t_or_s"], ["proof (prove)\nusing this:\n  ground t\n  ground s\n  vars t \\<noteq> {} \\<or> vars s \\<noteq> {}\n\ngoal (1 subgoal):\n 1. False", "by sat"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem gt_wf: \"wfP (\\<lambda>s t. t >\\<^sub>t\\<^sub>w s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wfP (\\<lambda>s t. t >\\<^sub>t\\<^sub>w s)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. wfP (\\<lambda>s t. t >\\<^sub>t\\<^sub>w s)", "have ground_wfP: \"wfP (\\<lambda>s t. t >\\<^sub>t\\<^sub>w\\<^sub>g s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wfP (\\<lambda>s t. ground t \\<and> t >\\<^sub>t\\<^sub>w s)", "unfolding wfP_iff_no_inf_chain"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> Ex (inf_chain\n                (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s))", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. Ex (inf_chain\n         (\\<lambda>t s.\n             ground t \\<and> t >\\<^sub>t\\<^sub>w s)) \\<Longrightarrow>\n    False", "assume \"\\<exists>f. inf_chain (>\\<^sub>t\\<^sub>w\\<^sub>g) f\""], ["proof (state)\nthis:\n  \\<exists>f.\n     inf_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s) f\n\ngoal (1 subgoal):\n 1. Ex (inf_chain\n         (\\<lambda>t s.\n             ground t \\<and> t >\\<^sub>t\\<^sub>w s)) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<exists>f.\n     inf_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s) f", "obtain t where t_bad: \"bad (>\\<^sub>t\\<^sub>w\\<^sub>g) t\""], ["proof (prove)\nusing this:\n  \\<exists>f.\n     inf_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s) f\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        bad (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n         t \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding inf_chain_def bad_def"], ["proof (prove)\nusing this:\n  \\<exists>f.\n     \\<forall>i. ground (f i) \\<and> f i >\\<^sub>t\\<^sub>w f (Suc i)\n\ngoal (1 subgoal):\n 1. (\\<And>t.\n        \\<exists>f.\n           (\\<forall>i.\n               ground (f i) \\<and> f i >\\<^sub>t\\<^sub>w f (Suc i)) \\<and>\n           f 0 = t \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  bad (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s) t\n\ngoal (1 subgoal):\n 1. Ex (inf_chain\n         (\\<lambda>t s.\n             ground t \\<and> t >\\<^sub>t\\<^sub>w s)) \\<Longrightarrow>\n    False", "let ?ff = \"worst_chain (>\\<^sub>t\\<^sub>w\\<^sub>g) (\\<lambda>t s. size t > size s)\""], ["proof (state)\ngoal (1 subgoal):\n 1. Ex (inf_chain\n         (\\<lambda>t s.\n             ground t \\<and> t >\\<^sub>t\\<^sub>w s)) \\<Longrightarrow>\n    False", "note wf_sz = wf_app[OF wellorder_class.wf, of size, simplified]"], ["proof (state)\nthis:\n  wf {(x, y). size x < size y}\n\ngoal (1 subgoal):\n 1. Ex (inf_chain\n         (\\<lambda>t s.\n             ground t \\<and> t >\\<^sub>t\\<^sub>w s)) \\<Longrightarrow>\n    False", "have ffi_ground: \"\\<And>i. ground (?ff i)\" and ffi_wary: \"\\<And>i. wary (?ff i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>i.\n        ground\n         (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n           (\\<lambda>t s. size s < size t) i)) &&&\n    (\\<And>i.\n        wary\n         (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n           (\\<lambda>t s. size s < size t) i))", "using worst_chain_bad[OF wf_sz t_bad, unfolded inf_chain_def]"], ["proof (prove)\nusing this:\n  \\<forall>i.\n     ground\n      (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n        (\\<lambda>y x. size x < size y) i) \\<and>\n     worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n      (\\<lambda>y x. size x < size y) i >\\<^sub>t\\<^sub>w\n     worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n      (\\<lambda>y x. size x < size y) (Suc i)\n\ngoal (1 subgoal):\n 1. (\\<And>i.\n        ground\n         (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n           (\\<lambda>t s. size s < size t) i)) &&&\n    (\\<And>i.\n        wary\n         (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n           (\\<lambda>t s. size s < size t) i))", "by fast+"], ["proof (state)\nthis:\n  ground\n   (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n     (\\<lambda>t s. size s < size t) ?i)\n  wary\n   (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n     (\\<lambda>t s. size s < size t) ?i)\n\ngoal (1 subgoal):\n 1. Ex (inf_chain\n         (\\<lambda>t s.\n             ground t \\<and> t >\\<^sub>t\\<^sub>w s)) \\<Longrightarrow>\n    False", "have \"inf_chain (>\\<^sub>t\\<^sub>w\\<^sub>g) ?ff\""], ["proof (prove)\ngoal (1 subgoal):\n 1. inf_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n     (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t))", "by (rule worst_chain_bad[OF wf_sz t_bad])"], ["proof (state)\nthis:\n  inf_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n   (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n     (\\<lambda>t s. size s < size t))\n\ngoal (1 subgoal):\n 1. Ex (inf_chain\n         (\\<lambda>t s.\n             ground t \\<and> t >\\<^sub>t\\<^sub>w s)) \\<Longrightarrow>\n    False", "hence bad_wt_diff_same:\n      \"inf_chain (\\<lambda>t s. ground t \\<and> (gt_wt t s \\<or> gt_diff t s \\<or> gt_same t s)) ?ff\""], ["proof (prove)\nusing this:\n  inf_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n   (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n     (\\<lambda>t s. size s < size t))\n\ngoal (1 subgoal):\n 1. inf_chain\n     (\\<lambda>t s.\n         ground t \\<and> (gt_wt t s \\<or> gt_diff t s \\<or> gt_same t s))\n     (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t))", "unfolding inf_chain_def"], ["proof (prove)\nusing this:\n  \\<forall>i.\n     ground\n      (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n        (\\<lambda>t s. size s < size t) i) \\<and>\n     worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n      (\\<lambda>t s. size s < size t) i >\\<^sub>t\\<^sub>w\n     worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n      (\\<lambda>t s. size s < size t) (Suc i)\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       ground\n        (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n          (\\<lambda>t s. size s < size t) i) \\<and>\n       (gt_wt\n         (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n           (\\<lambda>t s. size s < size t) i)\n         (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n           (\\<lambda>t s. size s < size t) (Suc i)) \\<or>\n        gt_diff\n         (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n           (\\<lambda>t s. size s < size t) i)\n         (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n           (\\<lambda>t s. size s < size t) (Suc i)) \\<or>\n        gt_same\n         (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n           (\\<lambda>t s. size s < size t) i)\n         (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n           (\\<lambda>t s. size s < size t) (Suc i)))", "using gt_iff_wt_unary_diff_same ground_gt_unary"], ["proof (prove)\nusing this:\n  \\<forall>i.\n     ground\n      (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n        (\\<lambda>t s. size s < size t) i) \\<and>\n     worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n      (\\<lambda>t s. size s < size t) i >\\<^sub>t\\<^sub>w\n     worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n      (\\<lambda>t s. size s < size t) (Suc i)\n  (?t >\\<^sub>t ?s) =\n  (gt_wt ?t ?s \\<or> gt_unary ?t ?s \\<or> gt_diff ?t ?s \\<or> gt_same ?t ?s)\n  ground ?t \\<Longrightarrow> \\<not> gt_unary ?t ?s\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       ground\n        (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n          (\\<lambda>t s. size s < size t) i) \\<and>\n       (gt_wt\n         (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n           (\\<lambda>t s. size s < size t) i)\n         (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n           (\\<lambda>t s. size s < size t) (Suc i)) \\<or>\n        gt_diff\n         (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n           (\\<lambda>t s. size s < size t) i)\n         (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n           (\\<lambda>t s. size s < size t) (Suc i)) \\<or>\n        gt_same\n         (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n           (\\<lambda>t s. size s < size t) i)\n         (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n           (\\<lambda>t s. size s < size t) (Suc i)))", "by blast"], ["proof (state)\nthis:\n  inf_chain\n   (\\<lambda>t s.\n       ground t \\<and> (gt_wt t s \\<or> gt_diff t s \\<or> gt_same t s))\n   (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n     (\\<lambda>t s. size s < size t))\n\ngoal (1 subgoal):\n 1. Ex (inf_chain\n         (\\<lambda>t s.\n             ground t \\<and> t >\\<^sub>t\\<^sub>w s)) \\<Longrightarrow>\n    False", "have wf_wt: \"wf {(s, t). ground t \\<and> gt_wt t s}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf {(s, t). ground t \\<and> gt_wt t s}", "by (rule wf_subset[OF wf_app[of _ wt, OF wf_less]]) (auto simp: gt_wt.simps)"], ["proof (state)\nthis:\n  wf {(s, t). ground t \\<and> gt_wt t s}\n\ngoal (1 subgoal):\n 1. Ex (inf_chain\n         (\\<lambda>t s.\n             ground t \\<and> t >\\<^sub>t\\<^sub>w s)) \\<Longrightarrow>\n    False", "have wt_O_diff_same: \"{(s, t). ground t \\<and> gt_wt t s}\n      O {(s, t). ground t \\<and> (gt_diff t s \\<or> gt_same t s)} \\<subseteq> {(s, t). ground t \\<and> gt_wt t s}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {(s, t). ground t \\<and> gt_wt t s} O\n    {(s, t). ground t \\<and> (gt_diff t s \\<or> gt_same t s)}\n    \\<subseteq> {(s, t). ground t \\<and> gt_wt t s}", "unfolding gt_wt.simps gt_diff.simps gt_same.simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. {(s, t).\n     ground t \\<and>\n     (\\<exists>ta sa.\n         t = ta \\<and>\n         s = sa \\<and>\n         vars_mset sa \\<subseteq># vars_mset ta \\<and> wt sa < wt ta)} O\n    {(s, t).\n     ground t \\<and>\n     ((\\<exists>ta sa.\n          t = ta \\<and>\n          s = sa \\<and>\n          vars_mset sa \\<subseteq># vars_mset ta \\<and>\n          wt ta = wt sa \\<and> head ta >\\<^sub>h\\<^sub>d head sa) \\<or>\n      (\\<exists>ta sa.\n          t = ta \\<and>\n          s = sa \\<and>\n          vars_mset sa \\<subseteq># vars_mset ta \\<and>\n          wt ta = wt sa \\<and>\n          head ta = head sa \\<and>\n          (\\<forall>f\\<in>local.ground_heads (head ta).\n              extf f (>\\<^sub>t) (args ta) (args sa))))}\n    \\<subseteq> {(s, t).\n                 ground t \\<and>\n                 (\\<exists>ta sa.\n                     t = ta \\<and>\n                     s = sa \\<and>\n                     vars_mset sa \\<subseteq># vars_mset ta \\<and>\n                     wt sa < wt ta)}", "by auto"], ["proof (state)\nthis:\n  {(s, t). ground t \\<and> gt_wt t s} O\n  {(s, t). ground t \\<and> (gt_diff t s \\<or> gt_same t s)}\n  \\<subseteq> {(s, t). ground t \\<and> gt_wt t s}\n\ngoal (1 subgoal):\n 1. Ex (inf_chain\n         (\\<lambda>t s.\n             ground t \\<and> t >\\<^sub>t\\<^sub>w s)) \\<Longrightarrow>\n    False", "have wt_diff_same_as_union: \"{(s, t). ground t \\<and> (gt_wt t s \\<or> gt_diff t s \\<or> gt_same t s)} =\n      {(s, t). ground t \\<and> gt_wt t s} \\<union> {(s, t). ground t \\<and> (gt_diff t s \\<or> gt_same t s)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {(s, t).\n     ground t \\<and> (gt_wt t s \\<or> gt_diff t s \\<or> gt_same t s)} =\n    {(s, t). ground t \\<and> gt_wt t s} \\<union>\n    {(s, t). ground t \\<and> (gt_diff t s \\<or> gt_same t s)}", "by auto"], ["proof (state)\nthis:\n  {(s, t).\n   ground t \\<and> (gt_wt t s \\<or> gt_diff t s \\<or> gt_same t s)} =\n  {(s, t). ground t \\<and> gt_wt t s} \\<union>\n  {(s, t). ground t \\<and> (gt_diff t s \\<or> gt_same t s)}\n\ngoal (1 subgoal):\n 1. Ex (inf_chain\n         (\\<lambda>t s.\n             ground t \\<and> t >\\<^sub>t\\<^sub>w s)) \\<Longrightarrow>\n    False", "obtain k1 where bad_diff_same:\n      \"inf_chain (\\<lambda>t s. ground t \\<and> (gt_diff t s \\<or> gt_same t s)) (\\<lambda>i. ?ff (i + k1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k1.\n        inf_chain\n         (\\<lambda>t s. ground t \\<and> (gt_diff t s \\<or> gt_same t s))\n         (\\<lambda>i.\n             worst_chain\n              (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n              (\\<lambda>t s. size s < size t) (i + k1)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using wf_infinite_down_chain_compatible[OF wf_wt _ wt_O_diff_same, of ?ff] bad_wt_diff_same"], ["proof (prove)\nusing this:\n  \\<forall>i.\n     (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) (Suc i),\n      worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) i)\n     \\<in> {(s, t). ground t \\<and> gt_wt t s} \\<union>\n           {(s, t).\n            ground t \\<and>\n            (gt_diff t s \\<or> gt_same t s)} \\<Longrightarrow>\n  \\<exists>k.\n     \\<forall>i.\n        (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n          (\\<lambda>t s. size s < size t) (Suc (i + k)),\n         worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n          (\\<lambda>t s. size s < size t) (i + k))\n        \\<in> {(s, t). ground t \\<and> (gt_diff t s \\<or> gt_same t s)}\n  inf_chain\n   (\\<lambda>t s.\n       ground t \\<and> (gt_wt t s \\<or> gt_diff t s \\<or> gt_same t s))\n   (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n     (\\<lambda>t s. size s < size t))\n\ngoal (1 subgoal):\n 1. (\\<And>k1.\n        inf_chain\n         (\\<lambda>t s. ground t \\<and> (gt_diff t s \\<or> gt_same t s))\n         (\\<lambda>i.\n             worst_chain\n              (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n              (\\<lambda>t s. size s < size t) (i + k1)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding inf_chain_def wt_diff_same_as_union[symmetric]"], ["proof (prove)\nusing this:\n  \\<forall>i.\n     (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) (Suc i),\n      worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) i)\n     \\<in> {(s, t).\n            ground t \\<and>\n            (gt_wt t s \\<or>\n             gt_diff t s \\<or> gt_same t s)} \\<Longrightarrow>\n  \\<exists>k.\n     \\<forall>i.\n        (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n          (\\<lambda>t s. size s < size t) (Suc (i + k)),\n         worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n          (\\<lambda>t s. size s < size t) (i + k))\n        \\<in> {(s, t). ground t \\<and> (gt_diff t s \\<or> gt_same t s)}\n  \\<forall>i.\n     ground\n      (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n        (\\<lambda>t s. size s < size t) i) \\<and>\n     (gt_wt\n       (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n         (\\<lambda>t s. size s < size t) i)\n       (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n         (\\<lambda>t s. size s < size t) (Suc i)) \\<or>\n      gt_diff\n       (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n         (\\<lambda>t s. size s < size t) i)\n       (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n         (\\<lambda>t s. size s < size t) (Suc i)) \\<or>\n      gt_same\n       (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n         (\\<lambda>t s. size s < size t) i)\n       (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n         (\\<lambda>t s. size s < size t) (Suc i)))\n\ngoal (1 subgoal):\n 1. (\\<And>k1.\n        \\<forall>i.\n           ground\n            (worst_chain\n              (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n              (\\<lambda>t s. size s < size t) (i + k1)) \\<and>\n           (gt_diff\n             (worst_chain\n               (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n               (\\<lambda>t s. size s < size t) (i + k1))\n             (worst_chain\n               (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n               (\\<lambda>t s. size s < size t) (Suc i + k1)) \\<or>\n            gt_same\n             (worst_chain\n               (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n               (\\<lambda>t s. size s < size t) (i + k1))\n             (worst_chain\n               (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n               (\\<lambda>t s. size s < size t)\n               (Suc i + k1))) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  inf_chain (\\<lambda>t s. ground t \\<and> (gt_diff t s \\<or> gt_same t s))\n   (\\<lambda>i.\n       worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n        (\\<lambda>t s. size s < size t) (i + k1))\n\ngoal (1 subgoal):\n 1. Ex (inf_chain\n         (\\<lambda>t s.\n             ground t \\<and> t >\\<^sub>t\\<^sub>w s)) \\<Longrightarrow>\n    False", "have \"wf {(s, t). ground s \\<and> ground t \\<and> sym (head t) >\\<^sub>s sym (head s)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wf {(s, t).\n        ground s \\<and>\n        ground t \\<and> hd.sym (head t) >\\<^sub>s hd.sym (head s)}", "using gt_sym_wf"], ["proof (prove)\nusing this:\n  wfP (\\<lambda>f g. g >\\<^sub>s f)\n\ngoal (1 subgoal):\n 1. wf {(s, t).\n        ground s \\<and>\n        ground t \\<and> hd.sym (head t) >\\<^sub>s hd.sym (head s)}", "unfolding wfP_def wf_iff_no_infinite_down_chain"], ["proof (prove)\nusing this:\n  \\<nexists>f. \\<forall>i. (f (Suc i), f i) \\<in> {(f, g). g >\\<^sub>s f}\n\ngoal (1 subgoal):\n 1. \\<nexists>f.\n       \\<forall>i.\n          (f (Suc i), f i)\n          \\<in> {(s, t).\n                 ground s \\<and>\n                 ground t \\<and> hd.sym (head t) >\\<^sub>s hd.sym (head s)}", "by fast"], ["proof (state)\nthis:\n  wf {(s, t).\n      ground s \\<and>\n      ground t \\<and> hd.sym (head t) >\\<^sub>s hd.sym (head s)}\n\ngoal (1 subgoal):\n 1. Ex (inf_chain\n         (\\<lambda>t s.\n             ground t \\<and> t >\\<^sub>t\\<^sub>w s)) \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  wf {(s, t).\n      ground s \\<and>\n      ground t \\<and> hd.sym (head t) >\\<^sub>s hd.sym (head s)}\n\ngoal (1 subgoal):\n 1. Ex (inf_chain\n         (\\<lambda>t s.\n             ground t \\<and> t >\\<^sub>t\\<^sub>w s)) \\<Longrightarrow>\n    False", "have \"{(s, t). ground t \\<and> gt_diff t s}\n      \\<subseteq> {(s, t). ground s \\<and> ground t \\<and> sym (head t) >\\<^sub>s sym (head s)}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {(s, t). ground t \\<and> gt_diff t s}\n    \\<subseteq> {(s, t).\n                 ground s \\<and>\n                 ground t \\<and> hd.sym (head t) >\\<^sub>s hd.sym (head s)}", "proof (clarsimp, intro conjI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>ground b; gt_diff b a\\<rbrakk> \\<Longrightarrow> ground a\n 2. \\<And>a b.\n       \\<lbrakk>ground b; gt_diff b a\\<rbrakk>\n       \\<Longrightarrow> hd.sym (head b) >\\<^sub>s hd.sym (head a)", "fix s t"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>ground b; gt_diff b a\\<rbrakk> \\<Longrightarrow> ground a\n 2. \\<And>a b.\n       \\<lbrakk>ground b; gt_diff b a\\<rbrakk>\n       \\<Longrightarrow> hd.sym (head b) >\\<^sub>s hd.sym (head a)", "assume gr_t: \"ground t\" and gt_diff_t_s: \"gt_diff t s\""], ["proof (state)\nthis:\n  ground t\n  gt_diff t s\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>ground b; gt_diff b a\\<rbrakk> \\<Longrightarrow> ground a\n 2. \\<And>a b.\n       \\<lbrakk>ground b; gt_diff b a\\<rbrakk>\n       \\<Longrightarrow> hd.sym (head b) >\\<^sub>s hd.sym (head a)", "thus gr_s: \"ground s\""], ["proof (prove)\nusing this:\n  ground t\n  gt_diff t s\n\ngoal (1 subgoal):\n 1. ground s", "using gt_iff_wt_unary_diff_same gt_imp_vars"], ["proof (prove)\nusing this:\n  ground t\n  gt_diff t s\n  (?t >\\<^sub>t ?s) =\n  (gt_wt ?t ?s \\<or> gt_unary ?t ?s \\<or> gt_diff ?t ?s \\<or> gt_same ?t ?s)\n  ?t >\\<^sub>t ?s \\<Longrightarrow> vars ?s \\<subseteq> vars ?t\n\ngoal (1 subgoal):\n 1. ground s", "by fastforce"], ["proof (state)\nthis:\n  ground s\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       \\<lbrakk>ground b; gt_diff b a\\<rbrakk>\n       \\<Longrightarrow> hd.sym (head b) >\\<^sub>s hd.sym (head a)", "show \"sym (head t) >\\<^sub>s sym (head s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. hd.sym (head t) >\\<^sub>s hd.sym (head s)", "using gt_diff_t_s"], ["proof (prove)\nusing this:\n  gt_diff t s\n\ngoal (1 subgoal):\n 1. hd.sym (head t) >\\<^sub>s hd.sym (head s)", "by cases (simp add: gt_hd_def gr_s gr_t ground_hd_in_ground_heads)"], ["proof (state)\nthis:\n  hd.sym (head t) >\\<^sub>s hd.sym (head s)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  {(s, t). ground t \\<and> gt_diff t s}\n  \\<subseteq> {(s, t).\n               ground s \\<and>\n               ground t \\<and> hd.sym (head t) >\\<^sub>s hd.sym (head s)}\n\ngoal (1 subgoal):\n 1. Ex (inf_chain\n         (\\<lambda>t s.\n             ground t \\<and> t >\\<^sub>t\\<^sub>w s)) \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  wf {(s, t).\n      ground s \\<and>\n      ground t \\<and> hd.sym (head t) >\\<^sub>s hd.sym (head s)}\n  {(s, t). ground t \\<and> gt_diff t s}\n  \\<subseteq> {(s, t).\n               ground s \\<and>\n               ground t \\<and> hd.sym (head t) >\\<^sub>s hd.sym (head s)}", "have wf_diff: \"wf {(s, t). ground t \\<and> gt_diff t s}\""], ["proof (prove)\nusing this:\n  wf {(s, t).\n      ground s \\<and>\n      ground t \\<and> hd.sym (head t) >\\<^sub>s hd.sym (head s)}\n  {(s, t). ground t \\<and> gt_diff t s}\n  \\<subseteq> {(s, t).\n               ground s \\<and>\n               ground t \\<and> hd.sym (head t) >\\<^sub>s hd.sym (head s)}\n\ngoal (1 subgoal):\n 1. wf {(s, t). ground t \\<and> gt_diff t s}", "by (rule wf_subset)"], ["proof (state)\nthis:\n  wf {(s, t). ground t \\<and> gt_diff t s}\n\ngoal (1 subgoal):\n 1. Ex (inf_chain\n         (\\<lambda>t s.\n             ground t \\<and> t >\\<^sub>t\\<^sub>w s)) \\<Longrightarrow>\n    False", "have diff_O_same: \"{(s, t). ground t \\<and> gt_diff t s} O {(s, t). ground t \\<and> gt_same t s}\n      \\<subseteq> {(s, t). ground t \\<and> gt_diff t s}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {(s, t). ground t \\<and> gt_diff t s} O\n    {(s, t). ground t \\<and> gt_same t s}\n    \\<subseteq> {(s, t). ground t \\<and> gt_diff t s}", "unfolding gt_diff.simps gt_same.simps"], ["proof (prove)\ngoal (1 subgoal):\n 1. {(s, t).\n     ground t \\<and>\n     (\\<exists>ta sa.\n         t = ta \\<and>\n         s = sa \\<and>\n         vars_mset sa \\<subseteq># vars_mset ta \\<and>\n         wt ta = wt sa \\<and> head ta >\\<^sub>h\\<^sub>d head sa)} O\n    {(s, t).\n     ground t \\<and>\n     (\\<exists>ta sa.\n         t = ta \\<and>\n         s = sa \\<and>\n         vars_mset sa \\<subseteq># vars_mset ta \\<and>\n         wt ta = wt sa \\<and>\n         head ta = head sa \\<and>\n         (\\<forall>f\\<in>local.ground_heads (head ta).\n             extf f (>\\<^sub>t) (args ta) (args sa)))}\n    \\<subseteq> {(s, t).\n                 ground t \\<and>\n                 (\\<exists>ta sa.\n                     t = ta \\<and>\n                     s = sa \\<and>\n                     vars_mset sa \\<subseteq># vars_mset ta \\<and>\n                     wt ta = wt sa \\<and>\n                     head ta >\\<^sub>h\\<^sub>d head sa)}", "by auto"], ["proof (state)\nthis:\n  {(s, t). ground t \\<and> gt_diff t s} O\n  {(s, t). ground t \\<and> gt_same t s}\n  \\<subseteq> {(s, t). ground t \\<and> gt_diff t s}\n\ngoal (1 subgoal):\n 1. Ex (inf_chain\n         (\\<lambda>t s.\n             ground t \\<and> t >\\<^sub>t\\<^sub>w s)) \\<Longrightarrow>\n    False", "have diff_same_as_union: \"{(s, t). ground t \\<and> (gt_diff t s \\<or> gt_same t s)} =\n      {(s, t). ground t \\<and> gt_diff t s} \\<union> {(s, t). ground t \\<and> gt_same t s}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {(s, t). ground t \\<and> (gt_diff t s \\<or> gt_same t s)} =\n    {(s, t). ground t \\<and> gt_diff t s} \\<union>\n    {(s, t). ground t \\<and> gt_same t s}", "by auto"], ["proof (state)\nthis:\n  {(s, t). ground t \\<and> (gt_diff t s \\<or> gt_same t s)} =\n  {(s, t). ground t \\<and> gt_diff t s} \\<union>\n  {(s, t). ground t \\<and> gt_same t s}\n\ngoal (1 subgoal):\n 1. Ex (inf_chain\n         (\\<lambda>t s.\n             ground t \\<and> t >\\<^sub>t\\<^sub>w s)) \\<Longrightarrow>\n    False", "obtain k2 where bad_same: \"inf_chain (\\<lambda>t s. ground t \\<and> gt_same t s) (\\<lambda>i. ?ff (i + k2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k2.\n        inf_chain (\\<lambda>t s. ground t \\<and> gt_same t s)\n         (\\<lambda>i.\n             worst_chain\n              (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n              (\\<lambda>t s. size s < size t) (i + k2)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using wf_infinite_down_chain_compatible[OF wf_diff _ diff_O_same, of \"\\<lambda>i. ?ff (i + k1)\"]\n        bad_diff_same"], ["proof (prove)\nusing this:\n  \\<forall>i.\n     (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) (Suc i + k1),\n      worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) (i + k1))\n     \\<in> {(s, t). ground t \\<and> gt_diff t s} \\<union>\n           {(s, t). ground t \\<and> gt_same t s} \\<Longrightarrow>\n  \\<exists>k.\n     \\<forall>i.\n        (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n          (\\<lambda>t s. size s < size t) (Suc (i + k) + k1),\n         worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n          (\\<lambda>t s. size s < size t) (i + k + k1))\n        \\<in> {(s, t). ground t \\<and> gt_same t s}\n  inf_chain (\\<lambda>t s. ground t \\<and> (gt_diff t s \\<or> gt_same t s))\n   (\\<lambda>i.\n       worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n        (\\<lambda>t s. size s < size t) (i + k1))\n\ngoal (1 subgoal):\n 1. (\\<And>k2.\n        inf_chain (\\<lambda>t s. ground t \\<and> gt_same t s)\n         (\\<lambda>i.\n             worst_chain\n              (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n              (\\<lambda>t s. size s < size t) (i + k2)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding inf_chain_def diff_same_as_union[symmetric]"], ["proof (prove)\nusing this:\n  \\<forall>i.\n     (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) (Suc i + k1),\n      worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) (i + k1))\n     \\<in> {(s, t).\n            ground t \\<and>\n            (gt_diff t s \\<or> gt_same t s)} \\<Longrightarrow>\n  \\<exists>k.\n     \\<forall>i.\n        (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n          (\\<lambda>t s. size s < size t) (Suc (i + k) + k1),\n         worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n          (\\<lambda>t s. size s < size t) (i + k + k1))\n        \\<in> {(s, t). ground t \\<and> gt_same t s}\n  \\<forall>i.\n     ground\n      (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n        (\\<lambda>t s. size s < size t) (i + k1)) \\<and>\n     (gt_diff\n       (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n         (\\<lambda>t s. size s < size t) (i + k1))\n       (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n         (\\<lambda>t s. size s < size t) (Suc i + k1)) \\<or>\n      gt_same\n       (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n         (\\<lambda>t s. size s < size t) (i + k1))\n       (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n         (\\<lambda>t s. size s < size t) (Suc i + k1)))\n\ngoal (1 subgoal):\n 1. (\\<And>k2.\n        \\<forall>i.\n           ground\n            (worst_chain\n              (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n              (\\<lambda>t s. size s < size t) (i + k2)) \\<and>\n           gt_same\n            (worst_chain\n              (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n              (\\<lambda>t s. size s < size t) (i + k2))\n            (worst_chain\n              (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n              (\\<lambda>t s. size s < size t)\n              (Suc i + k2)) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp: add.assoc)"], ["proof (state)\nthis:\n  inf_chain (\\<lambda>t s. ground t \\<and> gt_same t s)\n   (\\<lambda>i.\n       worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n        (\\<lambda>t s. size s < size t) (i + k2))\n\ngoal (1 subgoal):\n 1. Ex (inf_chain\n         (\\<lambda>t s.\n             ground t \\<and> t >\\<^sub>t\\<^sub>w s)) \\<Longrightarrow>\n    False", "hence hd_sym: \"\\<And>i. is_Sym (head (?ff (i + k2)))\""], ["proof (prove)\nusing this:\n  inf_chain (\\<lambda>t s. ground t \\<and> gt_same t s)\n   (\\<lambda>i.\n       worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n        (\\<lambda>t s. size s < size t) (i + k2))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       is_Sym\n        (head\n          (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n            (\\<lambda>t s. size s < size t) (i + k2)))", "unfolding inf_chain_def"], ["proof (prove)\nusing this:\n  \\<forall>i.\n     ground\n      (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n        (\\<lambda>t s. size s < size t) (i + k2)) \\<and>\n     gt_same\n      (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n        (\\<lambda>t s. size s < size t) (i + k2))\n      (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n        (\\<lambda>t s. size s < size t) (Suc i + k2))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       is_Sym\n        (head\n          (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n            (\\<lambda>t s. size s < size t) (i + k2)))", "by (simp add: ground_head)"], ["proof (state)\nthis:\n  is_Sym\n   (head\n     (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) (?i1 + k2)))\n\ngoal (1 subgoal):\n 1. Ex (inf_chain\n         (\\<lambda>t s.\n             ground t \\<and> t >\\<^sub>t\\<^sub>w s)) \\<Longrightarrow>\n    False", "define f where \"f = sym (head (?ff k2))\""], ["proof (state)\nthis:\n  f =\n  hd.sym\n   (head\n     (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) k2))\n\ngoal (1 subgoal):\n 1. Ex (inf_chain\n         (\\<lambda>t s.\n             ground t \\<and> t >\\<^sub>t\\<^sub>w s)) \\<Longrightarrow>\n    False", "have hd_eq_f: \"head (?ff (i + k2)) = Sym f\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. head\n     (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) (i + k2)) =\n    Sym f", "unfolding f_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. head\n     (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) (i + k2)) =\n    Sym (hd.sym\n          (head\n            (worst_chain\n              (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n              (\\<lambda>t s. size s < size t) k2)))", "proof (induct i)"], ["proof (state)\ngoal (2 subgoals):\n 1. head\n     (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) (0 + k2)) =\n    Sym (hd.sym\n          (head\n            (worst_chain\n              (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n              (\\<lambda>t s. size s < size t) k2)))\n 2. \\<And>i.\n       head\n        (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n          (\\<lambda>t s. size s < size t) (i + k2)) =\n       Sym (hd.sym\n             (head\n               (worst_chain\n                 (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n                 (\\<lambda>t s. size s < size t) k2))) \\<Longrightarrow>\n       head\n        (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n          (\\<lambda>t s. size s < size t) (Suc i + k2)) =\n       Sym (hd.sym\n             (head\n               (worst_chain\n                 (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n                 (\\<lambda>t s. size s < size t) k2)))", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. head\n     (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) (0 + k2)) =\n    Sym (hd.sym\n          (head\n            (worst_chain\n              (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n              (\\<lambda>t s. size s < size t) k2)))\n 2. \\<And>i.\n       head\n        (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n          (\\<lambda>t s. size s < size t) (i + k2)) =\n       Sym (hd.sym\n             (head\n               (worst_chain\n                 (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n                 (\\<lambda>t s. size s < size t) k2))) \\<Longrightarrow>\n       head\n        (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n          (\\<lambda>t s. size s < size t) (Suc i + k2)) =\n       Sym (hd.sym\n             (head\n               (worst_chain\n                 (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n                 (\\<lambda>t s. size s < size t) k2)))", "thus ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. head\n     (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) (0 + k2)) =\n    Sym (hd.sym\n          (head\n            (worst_chain\n              (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n              (\\<lambda>t s. size s < size t) k2)))", "by (auto simp: hd.collapse(2)[OF hd_sym, of 0, simplified])"], ["proof (state)\nthis:\n  head\n   (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n     (\\<lambda>t s. size s < size t) (0 + k2)) =\n  Sym (hd.sym\n        (head\n          (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n            (\\<lambda>t s. size s < size t) k2)))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       head\n        (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n          (\\<lambda>t s. size s < size t) (i + k2)) =\n       Sym (hd.sym\n             (head\n               (worst_chain\n                 (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n                 (\\<lambda>t s. size s < size t) k2))) \\<Longrightarrow>\n       head\n        (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n          (\\<lambda>t s. size s < size t) (Suc i + k2)) =\n       Sym (hd.sym\n             (head\n               (worst_chain\n                 (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n                 (\\<lambda>t s. size s < size t) k2)))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       head\n        (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n          (\\<lambda>t s. size s < size t) (i + k2)) =\n       Sym (hd.sym\n             (head\n               (worst_chain\n                 (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n                 (\\<lambda>t s. size s < size t) k2))) \\<Longrightarrow>\n       head\n        (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n          (\\<lambda>t s. size s < size t) (Suc i + k2)) =\n       Sym (hd.sym\n             (head\n               (worst_chain\n                 (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n                 (\\<lambda>t s. size s < size t) k2)))", "case (Suc ia)"], ["proof (state)\nthis:\n  head\n   (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n     (\\<lambda>t s. size s < size t) (ia + k2)) =\n  Sym (hd.sym\n        (head\n          (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n            (\\<lambda>t s. size s < size t) k2)))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       head\n        (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n          (\\<lambda>t s. size s < size t) (i + k2)) =\n       Sym (hd.sym\n             (head\n               (worst_chain\n                 (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n                 (\\<lambda>t s. size s < size t) k2))) \\<Longrightarrow>\n       head\n        (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n          (\\<lambda>t s. size s < size t) (Suc i + k2)) =\n       Sym (hd.sym\n             (head\n               (worst_chain\n                 (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n                 (\\<lambda>t s. size s < size t) k2)))", "thus ?case"], ["proof (prove)\nusing this:\n  head\n   (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n     (\\<lambda>t s. size s < size t) (ia + k2)) =\n  Sym (hd.sym\n        (head\n          (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n            (\\<lambda>t s. size s < size t) k2)))\n\ngoal (1 subgoal):\n 1. head\n     (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) (Suc ia + k2)) =\n    Sym (hd.sym\n          (head\n            (worst_chain\n              (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n              (\\<lambda>t s. size s < size t) k2)))", "using bad_same"], ["proof (prove)\nusing this:\n  head\n   (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n     (\\<lambda>t s. size s < size t) (ia + k2)) =\n  Sym (hd.sym\n        (head\n          (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n            (\\<lambda>t s. size s < size t) k2)))\n  inf_chain (\\<lambda>t s. ground t \\<and> gt_same t s)\n   (\\<lambda>i.\n       worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n        (\\<lambda>t s. size s < size t) (i + k2))\n\ngoal (1 subgoal):\n 1. head\n     (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) (Suc ia + k2)) =\n    Sym (hd.sym\n          (head\n            (worst_chain\n              (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n              (\\<lambda>t s. size s < size t) k2)))", "unfolding inf_chain_def gt_same.simps"], ["proof (prove)\nusing this:\n  head\n   (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n     (\\<lambda>t s. size s < size t) (ia + k2)) =\n  Sym (hd.sym\n        (head\n          (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n            (\\<lambda>t s. size s < size t) k2)))\n  \\<forall>i.\n     ground\n      (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n        (\\<lambda>t s. size s < size t) (i + k2)) \\<and>\n     (\\<exists>t s.\n         worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n          (\\<lambda>t s. size s < size t) (i + k2) =\n         t \\<and>\n         worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n          (\\<lambda>t s. size s < size t) (Suc i + k2) =\n         s \\<and>\n         vars_mset s \\<subseteq># vars_mset t \\<and>\n         wt t = wt s \\<and>\n         head t = head s \\<and>\n         (\\<forall>f\\<in>local.ground_heads (head t).\n             extf f (>\\<^sub>t) (args t) (args s)))\n\ngoal (1 subgoal):\n 1. head\n     (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) (Suc ia + k2)) =\n    Sym (hd.sym\n          (head\n            (worst_chain\n              (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n              (\\<lambda>t s. size s < size t) k2)))", "by simp"], ["proof (state)\nthis:\n  head\n   (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n     (\\<lambda>t s. size s < size t) (Suc ia + k2)) =\n  Sym (hd.sym\n        (head\n          (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n            (\\<lambda>t s. size s < size t) k2)))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  head\n   (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n     (\\<lambda>t s. size s < size t) (?i1 + k2)) =\n  Sym f\n\ngoal (1 subgoal):\n 1. Ex (inf_chain\n         (\\<lambda>t s.\n             ground t \\<and> t >\\<^sub>t\\<^sub>w s)) \\<Longrightarrow>\n    False", "define max_args where \"max_args = wt (?ff k2)\""], ["proof (state)\nthis:\n  max_args =\n  wt (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) k2)\n\ngoal (1 subgoal):\n 1. Ex (inf_chain\n         (\\<lambda>t s.\n             ground t \\<and> t >\\<^sub>t\\<^sub>w s)) \\<Longrightarrow>\n    False", "have wt_eq_max_args: \"wt (?ff (i + k2)) = max_args\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. wt (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n         (\\<lambda>t s. size s < size t) (i + k2)) =\n    max_args", "unfolding max_args_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. wt (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n         (\\<lambda>t s. size s < size t) (i + k2)) =\n    wt (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n         (\\<lambda>t s. size s < size t) k2)", "proof (induct i)"], ["proof (state)\ngoal (2 subgoals):\n 1. wt (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n         (\\<lambda>t s. size s < size t) (0 + k2)) =\n    wt (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n         (\\<lambda>t s. size s < size t) k2)\n 2. \\<And>i.\n       wt (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n            (\\<lambda>t s. size s < size t) (i + k2)) =\n       wt (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n            (\\<lambda>t s. size s < size t) k2) \\<Longrightarrow>\n       wt (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n            (\\<lambda>t s. size s < size t) (Suc i + k2)) =\n       wt (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n            (\\<lambda>t s. size s < size t) k2)", "case (Suc ia)"], ["proof (state)\nthis:\n  wt (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) (ia + k2)) =\n  wt (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) k2)\n\ngoal (2 subgoals):\n 1. wt (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n         (\\<lambda>t s. size s < size t) (0 + k2)) =\n    wt (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n         (\\<lambda>t s. size s < size t) k2)\n 2. \\<And>i.\n       wt (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n            (\\<lambda>t s. size s < size t) (i + k2)) =\n       wt (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n            (\\<lambda>t s. size s < size t) k2) \\<Longrightarrow>\n       wt (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n            (\\<lambda>t s. size s < size t) (Suc i + k2)) =\n       wt (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n            (\\<lambda>t s. size s < size t) k2)", "thus ?case"], ["proof (prove)\nusing this:\n  wt (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) (ia + k2)) =\n  wt (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) k2)\n\ngoal (1 subgoal):\n 1. wt (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n         (\\<lambda>t s. size s < size t) (Suc ia + k2)) =\n    wt (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n         (\\<lambda>t s. size s < size t) k2)", "using bad_same"], ["proof (prove)\nusing this:\n  wt (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) (ia + k2)) =\n  wt (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) k2)\n  inf_chain (\\<lambda>t s. ground t \\<and> gt_same t s)\n   (\\<lambda>i.\n       worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n        (\\<lambda>t s. size s < size t) (i + k2))\n\ngoal (1 subgoal):\n 1. wt (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n         (\\<lambda>t s. size s < size t) (Suc ia + k2)) =\n    wt (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n         (\\<lambda>t s. size s < size t) k2)", "unfolding inf_chain_def gt_same.simps"], ["proof (prove)\nusing this:\n  wt (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) (ia + k2)) =\n  wt (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) k2)\n  \\<forall>i.\n     ground\n      (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n        (\\<lambda>t s. size s < size t) (i + k2)) \\<and>\n     (\\<exists>t s.\n         worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n          (\\<lambda>t s. size s < size t) (i + k2) =\n         t \\<and>\n         worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n          (\\<lambda>t s. size s < size t) (Suc i + k2) =\n         s \\<and>\n         vars_mset s \\<subseteq># vars_mset t \\<and>\n         wt t = wt s \\<and>\n         head t = head s \\<and>\n         (\\<forall>f\\<in>local.ground_heads (head t).\n             extf f (>\\<^sub>t) (args t) (args s)))\n\ngoal (1 subgoal):\n 1. wt (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n         (\\<lambda>t s. size s < size t) (Suc ia + k2)) =\n    wt (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n         (\\<lambda>t s. size s < size t) k2)", "by simp"], ["proof (state)\nthis:\n  wt (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) (Suc ia + k2)) =\n  wt (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) k2)\n\ngoal (1 subgoal):\n 1. wt (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n         (\\<lambda>t s. size s < size t) (0 + k2)) =\n    wt (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n         (\\<lambda>t s. size s < size t) k2)", "qed auto"], ["proof (state)\nthis:\n  wt (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) (?i1 + k2)) =\n  max_args\n\ngoal (1 subgoal):\n 1. Ex (inf_chain\n         (\\<lambda>t s.\n             ground t \\<and> t >\\<^sub>t\\<^sub>w s)) \\<Longrightarrow>\n    False", "have nargs_le_max_args: \"num_args (?ff (i + k2)) \\<le> max_args\" for i"], ["proof (prove)\ngoal (1 subgoal):\n 1. num_args\n     (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) (i + k2))\n    \\<le> max_args", "unfolding wt_eq_max_args[of i, symmetric]"], ["proof (prove)\ngoal (1 subgoal):\n 1. num_args\n     (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) (i + k2))\n    \\<le> wt (worst_chain\n               (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n               (\\<lambda>t s. size s < size t) (i + k2))", "by (rule wt_ge_num_args[OF ffi_wary])"], ["proof (state)\nthis:\n  num_args\n   (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n     (\\<lambda>t s. size s < size t) (?i1 + k2))\n  \\<le> max_args\n\ngoal (1 subgoal):\n 1. Ex (inf_chain\n         (\\<lambda>t s.\n             ground t \\<and> t >\\<^sub>t\\<^sub>w s)) \\<Longrightarrow>\n    False", "let ?U_of = \"\\<lambda>i. set (args (?ff (i + k2)))\""], ["proof (state)\ngoal (1 subgoal):\n 1. Ex (inf_chain\n         (\\<lambda>t s.\n             ground t \\<and> t >\\<^sub>t\\<^sub>w s)) \\<Longrightarrow>\n    False", "define U where \"U = (\\<Union>i. ?U_of i)\""], ["proof (state)\nthis:\n  U =\n  (\\<Union>i.\n      set (args\n            (worst_chain\n              (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n              (\\<lambda>t s. size s < size t) (i + k2))))\n\ngoal (1 subgoal):\n 1. Ex (inf_chain\n         (\\<lambda>t s.\n             ground t \\<and> t >\\<^sub>t\\<^sub>w s)) \\<Longrightarrow>\n    False", "have gr_u: \"\\<And>u. u \\<in> U \\<Longrightarrow> ground u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>u. u \\<in> U \\<Longrightarrow> ground u", "unfolding U_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>u.\n       u \\<in> (\\<Union>i.\n                   set (args\n                         (worst_chain\n                           (\\<lambda>t s.\n                               ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n                           (\\<lambda>t s. size s < size t)\n                           (i + k2)))) \\<Longrightarrow>\n       ground u", "by (blast dest: ground_args[OF _ ffi_ground])"], ["proof (state)\nthis:\n  ?u1 \\<in> U \\<Longrightarrow> ground ?u1\n\ngoal (1 subgoal):\n 1. Ex (inf_chain\n         (\\<lambda>t s.\n             ground t \\<and> t >\\<^sub>t\\<^sub>w s)) \\<Longrightarrow>\n    False", "have wary_u: \"\\<And>u. u \\<in> U \\<Longrightarrow> wary u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>u. u \\<in> U \\<Longrightarrow> wary u", "unfolding U_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>u.\n       u \\<in> (\\<Union>i.\n                   set (args\n                         (worst_chain\n                           (\\<lambda>t s.\n                               ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n                           (\\<lambda>t s. size s < size t)\n                           (i + k2)))) \\<Longrightarrow>\n       wary u", "by (blast dest: wary_args[OF _ ffi_wary])"], ["proof (state)\nthis:\n  ?u1 \\<in> U \\<Longrightarrow> wary ?u1\n\ngoal (1 subgoal):\n 1. Ex (inf_chain\n         (\\<lambda>t s.\n             ground t \\<and> t >\\<^sub>t\\<^sub>w s)) \\<Longrightarrow>\n    False", "have \"\\<not> bad (>\\<^sub>t\\<^sub>w\\<^sub>g) u\" if u_in: \"u \\<in> ?U_of i\" for u i"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> bad (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s) u", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. bad (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n     u \\<Longrightarrow>\n    False", "assume u_bad: \"bad (>\\<^sub>t\\<^sub>w\\<^sub>g) u\""], ["proof (state)\nthis:\n  bad (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s) u\n\ngoal (1 subgoal):\n 1. bad (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n     u \\<Longrightarrow>\n    False", "have sz_u: \"size u < size (?ff (i + k2))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. size u\n    < size\n       (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n         (\\<lambda>t s. size s < size t) (i + k2))", "by (rule size_in_args[OF u_in])"], ["proof (state)\nthis:\n  size u\n  < size\n     (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) (i + k2))\n\ngoal (1 subgoal):\n 1. bad (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n     u \\<Longrightarrow>\n    False", "show False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof (cases \"i + k2\")"], ["proof (state)\ngoal (2 subgoals):\n 1. i + k2 = 0 \\<Longrightarrow> False\n 2. \\<And>nat. i + k2 = Suc nat \\<Longrightarrow> False", "case 0"], ["proof (state)\nthis:\n  i + k2 = 0\n\ngoal (2 subgoals):\n 1. i + k2 = 0 \\<Longrightarrow> False\n 2. \\<And>nat. i + k2 = Suc nat \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  i + k2 = 0\n\ngoal (1 subgoal):\n 1. False", "using sz_u min_worst_chain_0[OF wf_sz u_bad]"], ["proof (prove)\nusing this:\n  i + k2 = 0\n  size u\n  < size\n     (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) (i + k2))\n  \\<not> size u\n         < size\n            (worst_chain\n              (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n              (\\<lambda>y x. size x < size y) 0)\n\ngoal (1 subgoal):\n 1. False", "by simp"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>nat. i + k2 = Suc nat \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat. i + k2 = Suc nat \\<Longrightarrow> False", "case Suc"], ["proof (state)\nthis:\n  i + k2 = Suc nat_\n\ngoal (1 subgoal):\n 1. \\<And>nat. i + k2 = Suc nat \\<Longrightarrow> False", "hence gt: \"?ff (i + k2 - 1) >\\<^sub>t\\<^sub>w ?ff (i + k2)\""], ["proof (prove)\nusing this:\n  i + k2 = Suc nat_\n\ngoal (1 subgoal):\n 1. worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n     (\\<lambda>t s. size s < size t) (i + k2 - 1) >\\<^sub>t\\<^sub>w\n    worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n     (\\<lambda>t s. size s < size t) (i + k2)", "using worst_chain_pred[OF wf_sz t_bad]"], ["proof (prove)\nusing this:\n  i + k2 = Suc nat_\n  ground\n   (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n     (\\<lambda>y x. size x < size y) ?i) \\<and>\n  worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n   (\\<lambda>y x. size x < size y) ?i >\\<^sub>t\\<^sub>w\n  worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n   (\\<lambda>y x. size x < size y) (Suc ?i)\n\ngoal (1 subgoal):\n 1. worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n     (\\<lambda>t s. size s < size t) (i + k2 - 1) >\\<^sub>t\\<^sub>w\n    worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n     (\\<lambda>t s. size s < size t) (i + k2)", "by auto"], ["proof (state)\nthis:\n  worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n   (\\<lambda>t s. size s < size t) (i + k2 - 1) >\\<^sub>t\\<^sub>w\n  worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n   (\\<lambda>t s. size s < size t) (i + k2)\n\ngoal (1 subgoal):\n 1. \\<And>nat. i + k2 = Suc nat \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n   (\\<lambda>t s. size s < size t) (i + k2 - 1) >\\<^sub>t\\<^sub>w\n  worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n   (\\<lambda>t s. size s < size t) (i + k2)\n\ngoal (1 subgoal):\n 1. \\<And>nat. i + k2 = Suc nat \\<Longrightarrow> False", "have \"?ff (i + k2) >\\<^sub>t\\<^sub>w u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n     (\\<lambda>t s. size s < size t) (i + k2) >\\<^sub>t\\<^sub>w\n    u", "using gt gt_proper_sub sub_args sz_u u_in wary_args"], ["proof (prove)\nusing this:\n  worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n   (\\<lambda>t s. size s < size t) (i + k2 - 1) >\\<^sub>t\\<^sub>w\n  worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n   (\\<lambda>t s. size s < size t) (i + k2)\n  \\<lbrakk>wary ?t; proper_sub ?s ?t\\<rbrakk>\n  \\<Longrightarrow> ?t >\\<^sub>t ?s\n  ?s \\<in> set (args ?t) \\<Longrightarrow> sub ?s ?t\n  size u\n  < size\n     (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) (i + k2))\n  u \\<in> set (args\n                (worst_chain\n                  (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n                  (\\<lambda>t s. size s < size t) (i + k2)))\n  \\<lbrakk>?s \\<in> set (args ?t); wary ?t\\<rbrakk>\n  \\<Longrightarrow> wary ?s\n\ngoal (1 subgoal):\n 1. worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n     (\\<lambda>t s. size s < size t) (i + k2) >\\<^sub>t\\<^sub>w\n    u", "by auto"], ["proof (state)\nthis:\n  worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n   (\\<lambda>t s. size s < size t) (i + k2) >\\<^sub>t\\<^sub>w\n  u\n\ngoal (1 subgoal):\n 1. \\<And>nat. i + k2 = Suc nat \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n   (\\<lambda>t s. size s < size t) (i + k2 - 1) >\\<^sub>t\\<^sub>w\n  worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n   (\\<lambda>t s. size s < size t) (i + k2)\n  worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n   (\\<lambda>t s. size s < size t) (i + k2) >\\<^sub>t\\<^sub>w\n  u", "have \"?ff (i + k2 - 1) >\\<^sub>t\\<^sub>w u\""], ["proof (prove)\nusing this:\n  worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n   (\\<lambda>t s. size s < size t) (i + k2 - 1) >\\<^sub>t\\<^sub>w\n  worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n   (\\<lambda>t s. size s < size t) (i + k2)\n  worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n   (\\<lambda>t s. size s < size t) (i + k2) >\\<^sub>t\\<^sub>w\n  u\n\ngoal (1 subgoal):\n 1. worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n     (\\<lambda>t s. size s < size t) (i + k2 - 1) >\\<^sub>t\\<^sub>w\n    u", "using gt_trans"], ["proof (prove)\nusing this:\n  worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n   (\\<lambda>t s. size s < size t) (i + k2 - 1) >\\<^sub>t\\<^sub>w\n  worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n   (\\<lambda>t s. size s < size t) (i + k2)\n  worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n   (\\<lambda>t s. size s < size t) (i + k2) >\\<^sub>t\\<^sub>w\n  u\n  \\<lbrakk>wary ?u; wary ?t; wary ?s; ?u >\\<^sub>t ?t;\n   ?t >\\<^sub>t ?s\\<rbrakk>\n  \\<Longrightarrow> ?u >\\<^sub>t ?s\n\ngoal (1 subgoal):\n 1. worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n     (\\<lambda>t s. size s < size t) (i + k2 - 1) >\\<^sub>t\\<^sub>w\n    u", "by blast"], ["proof (state)\nthis:\n  worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n   (\\<lambda>t s. size s < size t) (i + k2 - 1) >\\<^sub>t\\<^sub>w\n  u\n\ngoal (1 subgoal):\n 1. \\<And>nat. i + k2 = Suc nat \\<Longrightarrow> False", "thus False"], ["proof (prove)\nusing this:\n  worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n   (\\<lambda>t s. size s < size t) (i + k2 - 1) >\\<^sub>t\\<^sub>w\n  u\n\ngoal (1 subgoal):\n 1. False", "using Suc sz_u min_worst_chain_Suc[OF wf_sz u_bad] ffi_ground"], ["proof (prove)\nusing this:\n  worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n   (\\<lambda>t s. size s < size t) (i + k2 - 1) >\\<^sub>t\\<^sub>w\n  u\n  i + k2 = Suc nat_\n  size u\n  < size\n     (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) (i + k2))\n  ground\n   (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n     (\\<lambda>y x. size x < size y) ?i) \\<and>\n  worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n   (\\<lambda>y x. size x < size y) ?i >\\<^sub>t\\<^sub>w\n  u \\<Longrightarrow>\n  \\<not> size u\n         < size\n            (worst_chain\n              (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n              (\\<lambda>y x. size x < size y) (Suc ?i))\n  ground\n   (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n     (\\<lambda>t s. size s < size t) ?i)\n\ngoal (1 subgoal):\n 1. False", "by fastforce"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?u1\n  \\<in> set (args\n              (worst_chain\n                (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n                (\\<lambda>t s. size s < size t)\n                (?i1 + k2))) \\<Longrightarrow>\n  \\<not> bad (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s) ?u1\n\ngoal (1 subgoal):\n 1. Ex (inf_chain\n         (\\<lambda>t s.\n             ground t \\<and> t >\\<^sub>t\\<^sub>w s)) \\<Longrightarrow>\n    False", "hence u_good: \"\\<And>u. u \\<in> U \\<Longrightarrow> \\<not> bad (>\\<^sub>t\\<^sub>w\\<^sub>g) u\""], ["proof (prove)\nusing this:\n  ?u1\n  \\<in> set (args\n              (worst_chain\n                (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n                (\\<lambda>t s. size s < size t)\n                (?i1 + k2))) \\<Longrightarrow>\n  \\<not> bad (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s) ?u1\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       u \\<in> U \\<Longrightarrow>\n       \\<not> bad (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s) u", "unfolding U_def"], ["proof (prove)\nusing this:\n  ?u1\n  \\<in> set (args\n              (worst_chain\n                (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n                (\\<lambda>t s. size s < size t)\n                (?i1 + k2))) \\<Longrightarrow>\n  \\<not> bad (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s) ?u1\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       u \\<in> (\\<Union>i.\n                   set (args\n                         (worst_chain\n                           (\\<lambda>t s.\n                               ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n                           (\\<lambda>t s. size s < size t)\n                           (i + k2)))) \\<Longrightarrow>\n       \\<not> bad (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s) u", "by blast"], ["proof (state)\nthis:\n  ?u1 \\<in> U \\<Longrightarrow>\n  \\<not> bad (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s) ?u1\n\ngoal (1 subgoal):\n 1. Ex (inf_chain\n         (\\<lambda>t s.\n             ground t \\<and> t >\\<^sub>t\\<^sub>w s)) \\<Longrightarrow>\n    False", "let ?gtwu = \"\\<lambda>t s. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s\""], ["proof (state)\ngoal (1 subgoal):\n 1. Ex (inf_chain\n         (\\<lambda>t s.\n             ground t \\<and> t >\\<^sub>t\\<^sub>w s)) \\<Longrightarrow>\n    False", "have gtwu_irrefl: \"\\<And>x. \\<not> ?gtwu x x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x. \\<not> (x \\<in> U \\<and> x >\\<^sub>t\\<^sub>w x)", "using gt_irrefl"], ["proof (prove)\nusing this:\n  wary ?s \\<Longrightarrow> \\<not> ?s >\\<^sub>t ?s\n\ngoal (1 subgoal):\n 1. \\<And>x. \\<not> (x \\<in> U \\<and> x >\\<^sub>t\\<^sub>w x)", "by auto"], ["proof (state)\nthis:\n  \\<not> (?x1 \\<in> U \\<and> ?x1 >\\<^sub>t\\<^sub>w ?x1)\n\ngoal (1 subgoal):\n 1. Ex (inf_chain\n         (\\<lambda>t s.\n             ground t \\<and> t >\\<^sub>t\\<^sub>w s)) \\<Longrightarrow>\n    False", "have \"\\<And>i j. \\<forall>t \\<in> set (args (?ff (i + k2))). \\<forall>s \\<in> set (args (?ff (j + k2))). t >\\<^sub>t s \\<longrightarrow>\n      t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<forall>t\\<in>set (args\n                            (worst_chain\n                              (\\<lambda>t s.\n                                  ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n                              (\\<lambda>t s. size s < size t) (i + k2))).\n          \\<forall>s\\<in>set (args\n                               (worst_chain\n                                 (\\<lambda>t s.\n                                     ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n                                 (\\<lambda>t s. size s < size t) (j + k2))).\n             t >\\<^sub>t s \\<longrightarrow>\n             t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s", "using wary_u"], ["proof (prove)\nusing this:\n  ?u1 \\<in> U \\<Longrightarrow> wary ?u1\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<forall>t\\<in>set (args\n                            (worst_chain\n                              (\\<lambda>t s.\n                                  ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n                              (\\<lambda>t s. size s < size t) (i + k2))).\n          \\<forall>s\\<in>set (args\n                               (worst_chain\n                                 (\\<lambda>t s.\n                                     ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n                                 (\\<lambda>t s. size s < size t) (j + k2))).\n             t >\\<^sub>t s \\<longrightarrow>\n             t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s", "unfolding U_def"], ["proof (prove)\nusing this:\n  ?u1\n  \\<in> (\\<Union>i.\n            set (args\n                  (worst_chain\n                    (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n                    (\\<lambda>t s. size s < size t)\n                    (i + k2)))) \\<Longrightarrow>\n  wary ?u1\n\ngoal (1 subgoal):\n 1. \\<And>i j.\n       \\<forall>t\\<in>set (args\n                            (worst_chain\n                              (\\<lambda>t s.\n                                  ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n                              (\\<lambda>t s. size s < size t) (i + k2))).\n          \\<forall>s\\<in>set (args\n                               (worst_chain\n                                 (\\<lambda>t s.\n                                     ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n                                 (\\<lambda>t s. size s < size t) (j + k2))).\n             t >\\<^sub>t s \\<longrightarrow>\n             t \\<in> (\\<Union>i.\n                         set (args\n                               (worst_chain\n                                 (\\<lambda>t s.\n                                     ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n                                 (\\<lambda>t s. size s < size t)\n                                 (i + k2)))) \\<and>\n             t >\\<^sub>t\\<^sub>w s", "by blast"], ["proof (state)\nthis:\n  \\<forall>t\\<in>set (args\n                       (worst_chain\n                         (\\<lambda>t s.\n                             ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n                         (\\<lambda>t s. size s < size t) (?i1 + k2))).\n     \\<forall>s\\<in>set (args\n                          (worst_chain\n                            (\\<lambda>t s.\n                                ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n                            (\\<lambda>t s. size s < size t) (?j1 + k2))).\n        t >\\<^sub>t s \\<longrightarrow>\n        t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s\n\ngoal (1 subgoal):\n 1. Ex (inf_chain\n         (\\<lambda>t s.\n             ground t \\<and> t >\\<^sub>t\\<^sub>w s)) \\<Longrightarrow>\n    False", "moreover"], ["proof (state)\nthis:\n  \\<forall>t\\<in>set (args\n                       (worst_chain\n                         (\\<lambda>t s.\n                             ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n                         (\\<lambda>t s. size s < size t) (?i1 + k2))).\n     \\<forall>s\\<in>set (args\n                          (worst_chain\n                            (\\<lambda>t s.\n                                ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n                            (\\<lambda>t s. size s < size t) (?j1 + k2))).\n        t >\\<^sub>t s \\<longrightarrow>\n        t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s\n\ngoal (1 subgoal):\n 1. Ex (inf_chain\n         (\\<lambda>t s.\n             ground t \\<and> t >\\<^sub>t\\<^sub>w s)) \\<Longrightarrow>\n    False", "have \"\\<And>i. extf f (>\\<^sub>t) (args (?ff (i + k2))) (args (?ff (Suc i + k2)))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>i.\n       extf f (>\\<^sub>t)\n        (args\n          (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n            (\\<lambda>t s. size s < size t) (i + k2)))\n        (args\n          (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n            (\\<lambda>t s. size s < size t) (Suc i + k2)))", "using bad_same hd_eq_f"], ["proof (prove)\nusing this:\n  inf_chain (\\<lambda>t s. ground t \\<and> gt_same t s)\n   (\\<lambda>i.\n       worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n        (\\<lambda>t s. size s < size t) (i + k2))\n  head\n   (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n     (\\<lambda>t s. size s < size t) (?i1 + k2)) =\n  Sym f\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       extf f (>\\<^sub>t)\n        (args\n          (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n            (\\<lambda>t s. size s < size t) (i + k2)))\n        (args\n          (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n            (\\<lambda>t s. size s < size t) (Suc i + k2)))", "unfolding inf_chain_def gt_same.simps"], ["proof (prove)\nusing this:\n  \\<forall>i.\n     ground\n      (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n        (\\<lambda>t s. size s < size t) (i + k2)) \\<and>\n     (\\<exists>t s.\n         worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n          (\\<lambda>t s. size s < size t) (i + k2) =\n         t \\<and>\n         worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n          (\\<lambda>t s. size s < size t) (Suc i + k2) =\n         s \\<and>\n         vars_mset s \\<subseteq># vars_mset t \\<and>\n         wt t = wt s \\<and>\n         head t = head s \\<and>\n         (\\<forall>f\\<in>local.ground_heads (head t).\n             extf f (>\\<^sub>t) (args t) (args s)))\n  head\n   (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n     (\\<lambda>t s. size s < size t) (?i1 + k2)) =\n  Sym f\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       extf f (>\\<^sub>t)\n        (args\n          (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n            (\\<lambda>t s. size s < size t) (i + k2)))\n        (args\n          (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n            (\\<lambda>t s. size s < size t) (Suc i + k2)))", "by auto"], ["proof (state)\nthis:\n  extf f (>\\<^sub>t)\n   (args\n     (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) (?i1 + k2)))\n   (args\n     (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) (Suc ?i1 + k2)))\n\ngoal (1 subgoal):\n 1. Ex (inf_chain\n         (\\<lambda>t s.\n             ground t \\<and> t >\\<^sub>t\\<^sub>w s)) \\<Longrightarrow>\n    False", "ultimately"], ["proof (chain)\npicking this:\n  \\<forall>t\\<in>set (args\n                       (worst_chain\n                         (\\<lambda>t s.\n                             ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n                         (\\<lambda>t s. size s < size t) (?i1 + k2))).\n     \\<forall>s\\<in>set (args\n                          (worst_chain\n                            (\\<lambda>t s.\n                                ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n                            (\\<lambda>t s. size s < size t) (?j1 + k2))).\n        t >\\<^sub>t s \\<longrightarrow>\n        t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s\n  extf f (>\\<^sub>t)\n   (args\n     (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) (?i1 + k2)))\n   (args\n     (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) (Suc ?i1 + k2)))", "have \"\\<And>i. extf f ?gtwu (args (?ff (i + k2))) (args (?ff (Suc i + k2)))\""], ["proof (prove)\nusing this:\n  \\<forall>t\\<in>set (args\n                       (worst_chain\n                         (\\<lambda>t s.\n                             ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n                         (\\<lambda>t s. size s < size t) (?i1 + k2))).\n     \\<forall>s\\<in>set (args\n                          (worst_chain\n                            (\\<lambda>t s.\n                                ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n                            (\\<lambda>t s. size s < size t) (?j1 + k2))).\n        t >\\<^sub>t s \\<longrightarrow>\n        t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s\n  extf f (>\\<^sub>t)\n   (args\n     (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) (?i1 + k2)))\n   (args\n     (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) (Suc ?i1 + k2)))\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       extf f (\\<lambda>t s. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s)\n        (args\n          (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n            (\\<lambda>t s. size s < size t) (i + k2)))\n        (args\n          (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n            (\\<lambda>t s. size s < size t) (Suc i + k2)))", "by (rule extf_mono_strong)"], ["proof (state)\nthis:\n  extf f (\\<lambda>t s. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s)\n   (args\n     (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) (?i1 + k2)))\n   (args\n     (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) (Suc ?i1 + k2)))\n\ngoal (1 subgoal):\n 1. Ex (inf_chain\n         (\\<lambda>t s.\n             ground t \\<and> t >\\<^sub>t\\<^sub>w s)) \\<Longrightarrow>\n    False", "hence \"inf_chain (extf f ?gtwu) (\\<lambda>i. args (?ff (i + k2)))\""], ["proof (prove)\nusing this:\n  extf f (\\<lambda>t s. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s)\n   (args\n     (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) (?i1 + k2)))\n   (args\n     (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) (Suc ?i1 + k2)))\n\ngoal (1 subgoal):\n 1. inf_chain\n     (extf f (\\<lambda>t s. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s))\n     (\\<lambda>i.\n         args\n          (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n            (\\<lambda>t s. size s < size t) (i + k2)))", "unfolding inf_chain_def"], ["proof (prove)\nusing this:\n  extf f (\\<lambda>t s. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s)\n   (args\n     (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) (?i1 + k2)))\n   (args\n     (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n       (\\<lambda>t s. size s < size t) (Suc ?i1 + k2)))\n\ngoal (1 subgoal):\n 1. \\<forall>i.\n       extf f (\\<lambda>t s. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s)\n        (args\n          (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n            (\\<lambda>t s. size s < size t) (i + k2)))\n        (args\n          (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n            (\\<lambda>t s. size s < size t) (Suc i + k2)))", "by blast"], ["proof (state)\nthis:\n  inf_chain (extf f (\\<lambda>t s. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s))\n   (\\<lambda>i.\n       args\n        (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n          (\\<lambda>t s. size s < size t) (i + k2)))\n\ngoal (1 subgoal):\n 1. Ex (inf_chain\n         (\\<lambda>t s.\n             ground t \\<and> t >\\<^sub>t\\<^sub>w s)) \\<Longrightarrow>\n    False", "hence nwf_ext:\n      \"\\<not> wfP (\\<lambda>xs ys. length ys \\<le> max_args \\<and> length xs \\<le> max_args \\<and> extf f ?gtwu ys xs)\""], ["proof (prove)\nusing this:\n  inf_chain (extf f (\\<lambda>t s. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s))\n   (\\<lambda>i.\n       args\n        (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n          (\\<lambda>t s. size s < size t) (i + k2)))\n\ngoal (1 subgoal):\n 1. \\<not> wfP (\\<lambda>xs ys.\n                   length ys \\<le> max_args \\<and>\n                   length xs \\<le> max_args \\<and>\n                   extf f\n                    (\\<lambda>t s. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s)\n                    ys xs)", "unfolding inf_chain_def wfP_def wf_iff_no_infinite_down_chain"], ["proof (prove)\nusing this:\n  \\<forall>i.\n     extf f (\\<lambda>t s. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s)\n      (args\n        (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n          (\\<lambda>t s. size s < size t) (i + k2)))\n      (args\n        (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n          (\\<lambda>t s. size s < size t) (Suc i + k2)))\n\ngoal (1 subgoal):\n 1. \\<not> (\\<nexists>fa.\n               \\<forall>i.\n                  (fa (Suc i), fa i)\n                  \\<in> {(xs, ys).\n                         length ys \\<le> max_args \\<and>\n                         length xs \\<le> max_args \\<and>\n                         extf f\n                          (\\<lambda>t s.\n                              t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s)\n                          ys xs})", "using nargs_le_max_args"], ["proof (prove)\nusing this:\n  \\<forall>i.\n     extf f (\\<lambda>t s. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s)\n      (args\n        (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n          (\\<lambda>t s. size s < size t) (i + k2)))\n      (args\n        (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n          (\\<lambda>t s. size s < size t) (Suc i + k2)))\n  num_args\n   (worst_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n     (\\<lambda>t s. size s < size t) (?i1 + k2))\n  \\<le> max_args\n\ngoal (1 subgoal):\n 1. \\<not> (\\<nexists>fa.\n               \\<forall>i.\n                  (fa (Suc i), fa i)\n                  \\<in> {(xs, ys).\n                         length ys \\<le> max_args \\<and>\n                         length xs \\<le> max_args \\<and>\n                         extf f\n                          (\\<lambda>t s.\n                              t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s)\n                          ys xs})", "by fast"], ["proof (state)\nthis:\n  \\<not> wfP (\\<lambda>xs ys.\n                 length ys \\<le> max_args \\<and>\n                 length xs \\<le> max_args \\<and>\n                 extf f\n                  (\\<lambda>t s. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s) ys\n                  xs)\n\ngoal (1 subgoal):\n 1. Ex (inf_chain\n         (\\<lambda>t s.\n             ground t \\<and> t >\\<^sub>t\\<^sub>w s)) \\<Longrightarrow>\n    False", "have gtwu_le_gtwg: \"?gtwu \\<le> (>\\<^sub>t\\<^sub>w\\<^sub>g)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lambda>t s. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s)\n    \\<le> (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)", "by (auto intro!: gr_u)"], ["proof (state)\nthis:\n  (\\<lambda>t s. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s)\n  \\<le> (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n\ngoal (1 subgoal):\n 1. Ex (inf_chain\n         (\\<lambda>t s.\n             ground t \\<and> t >\\<^sub>t\\<^sub>w s)) \\<Longrightarrow>\n    False", "have \"wfP (\\<lambda>s t. ?gtwu t s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wfP (\\<lambda>s t. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s)", "unfolding wfP_iff_no_inf_chain"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> Ex (inf_chain\n                (\\<lambda>t s. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s))", "proof (intro notI, elim exE)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       inf_chain (\\<lambda>t s. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s)\n        x \\<Longrightarrow>\n       False", "fix f"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       inf_chain (\\<lambda>t s. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s)\n        x \\<Longrightarrow>\n       False", "assume bad_f: \"inf_chain ?gtwu f\""], ["proof (state)\nthis:\n  inf_chain (\\<lambda>t s. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s) f\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       inf_chain (\\<lambda>t s. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s)\n        x \\<Longrightarrow>\n       False", "hence bad_f0: \"bad ?gtwu (f 0)\""], ["proof (prove)\nusing this:\n  inf_chain (\\<lambda>t s. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s) f\n\ngoal (1 subgoal):\n 1. bad (\\<lambda>t s. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s) (f 0)", "by (rule inf_chain_bad)"], ["proof (state)\nthis:\n  bad (\\<lambda>t s. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s) (f 0)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       inf_chain (\\<lambda>t s. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s)\n        x \\<Longrightarrow>\n       False", "hence \"f 0 \\<in> U\""], ["proof (prove)\nusing this:\n  bad (\\<lambda>t s. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s) (f 0)\n\ngoal (1 subgoal):\n 1. f 0 \\<in> U", "using bad_f"], ["proof (prove)\nusing this:\n  bad (\\<lambda>t s. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s) (f 0)\n  inf_chain (\\<lambda>t s. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s) f\n\ngoal (1 subgoal):\n 1. f 0 \\<in> U", "unfolding inf_chain_def"], ["proof (prove)\nusing this:\n  bad (\\<lambda>t s. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s) (f 0)\n  \\<forall>i. f i \\<in> U \\<and> f i >\\<^sub>t\\<^sub>w f (Suc i)\n\ngoal (1 subgoal):\n 1. f 0 \\<in> U", "by blast"], ["proof (state)\nthis:\n  f 0 \\<in> U\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       inf_chain (\\<lambda>t s. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s)\n        x \\<Longrightarrow>\n       False", "hence \"\\<not> bad (>\\<^sub>t\\<^sub>w\\<^sub>g) (f 0)\""], ["proof (prove)\nusing this:\n  f 0 \\<in> U\n\ngoal (1 subgoal):\n 1. \\<not> bad (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s) (f 0)", "using u_good"], ["proof (prove)\nusing this:\n  f 0 \\<in> U\n  ?u1 \\<in> U \\<Longrightarrow>\n  \\<not> bad (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s) ?u1\n\ngoal (1 subgoal):\n 1. \\<not> bad (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s) (f 0)", "by blast"], ["proof (state)\nthis:\n  \\<not> bad (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s) (f 0)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       inf_chain (\\<lambda>t s. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s)\n        x \\<Longrightarrow>\n       False", "hence \"\\<not> bad ?gtwu (f 0)\""], ["proof (prove)\nusing this:\n  \\<not> bad (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s) (f 0)\n\ngoal (1 subgoal):\n 1. \\<not> bad (\\<lambda>t s. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s) (f 0)", "using bad_f inf_chain_bad inf_chain_subset[OF _ gtwu_le_gtwg]"], ["proof (prove)\nusing this:\n  \\<not> bad (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s) (f 0)\n  inf_chain (\\<lambda>t s. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s) f\n  inf_chain ?p ?f \\<Longrightarrow> bad ?p (?f ?i)\n  inf_chain (\\<lambda>t s. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s)\n   ?f \\<Longrightarrow>\n  inf_chain (\\<lambda>t s. ground t \\<and> t >\\<^sub>t\\<^sub>w s) ?f\n\ngoal (1 subgoal):\n 1. \\<not> bad (\\<lambda>t s. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s) (f 0)", "by blast"], ["proof (state)\nthis:\n  \\<not> bad (\\<lambda>t s. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s) (f 0)\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       inf_chain (\\<lambda>t s. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s)\n        x \\<Longrightarrow>\n       False", "thus False"], ["proof (prove)\nusing this:\n  \\<not> bad (\\<lambda>t s. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s) (f 0)\n\ngoal (1 subgoal):\n 1. False", "using bad_f0"], ["proof (prove)\nusing this:\n  \\<not> bad (\\<lambda>t s. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s) (f 0)\n  bad (\\<lambda>t s. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s) (f 0)\n\ngoal (1 subgoal):\n 1. False", "by sat"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  wfP (\\<lambda>s t. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s)\n\ngoal (1 subgoal):\n 1. Ex (inf_chain\n         (\\<lambda>t s.\n             ground t \\<and> t >\\<^sub>t\\<^sub>w s)) \\<Longrightarrow>\n    False", "hence wf_ext: \"wfP (\\<lambda>xs ys. length ys \\<le> max_args \\<and> length xs \\<le> max_args \\<and> extf f ?gtwu ys xs)\""], ["proof (prove)\nusing this:\n  wfP (\\<lambda>s t. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s)\n\ngoal (1 subgoal):\n 1. wfP (\\<lambda>xs ys.\n            length ys \\<le> max_args \\<and>\n            length xs \\<le> max_args \\<and>\n            extf f (\\<lambda>t s. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s) ys\n             xs)", "using extf_wf_bounded[of ?gtwu] gtwu_irrefl"], ["proof (prove)\nusing this:\n  wfP (\\<lambda>s t. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s)\n  \\<lbrakk>\\<And>z. \\<not> (z \\<in> U \\<and> z >\\<^sub>t\\<^sub>w z);\n   wfP (\\<lambda>x y. y \\<in> U \\<and> y >\\<^sub>t\\<^sub>w x)\\<rbrakk>\n  \\<Longrightarrow> wfP (\\<lambda>xs ys.\n                            length ys \\<le> ?n \\<and>\n                            length xs \\<le> ?n \\<and>\n                            extf ?f\n                             (\\<lambda>t s.\n                                 t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s)\n                             ys xs)\n  \\<not> (?x1 \\<in> U \\<and> ?x1 >\\<^sub>t\\<^sub>w ?x1)\n\ngoal (1 subgoal):\n 1. wfP (\\<lambda>xs ys.\n            length ys \\<le> max_args \\<and>\n            length xs \\<le> max_args \\<and>\n            extf f (\\<lambda>t s. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s) ys\n             xs)", "by blast"], ["proof (state)\nthis:\n  wfP (\\<lambda>xs ys.\n          length ys \\<le> max_args \\<and>\n          length xs \\<le> max_args \\<and>\n          extf f (\\<lambda>t s. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s) ys\n           xs)\n\ngoal (1 subgoal):\n 1. Ex (inf_chain\n         (\\<lambda>t s.\n             ground t \\<and> t >\\<^sub>t\\<^sub>w s)) \\<Longrightarrow>\n    False", "show False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "using nwf_ext wf_ext"], ["proof (prove)\nusing this:\n  \\<not> wfP (\\<lambda>xs ys.\n                 length ys \\<le> max_args \\<and>\n                 length xs \\<le> max_args \\<and>\n                 extf f\n                  (\\<lambda>t s. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s) ys\n                  xs)\n  wfP (\\<lambda>xs ys.\n          length ys \\<le> max_args \\<and>\n          length xs \\<le> max_args \\<and>\n          extf f (\\<lambda>t s. t \\<in> U \\<and> t >\\<^sub>t\\<^sub>w s) ys\n           xs)\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  wfP (\\<lambda>s t. ground t \\<and> t >\\<^sub>t\\<^sub>w s)\n\ngoal (1 subgoal):\n 1. wfP (\\<lambda>s t. t >\\<^sub>t\\<^sub>w s)", "let ?subst = \"subst grounding_\\<rho>\""], ["proof (state)\ngoal (1 subgoal):\n 1. wfP (\\<lambda>s t. t >\\<^sub>t\\<^sub>w s)", "have \"wfP (\\<lambda>s t. ?subst t >\\<^sub>t\\<^sub>w\\<^sub>g ?subst s)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. wfP (\\<lambda>s t.\n            ground (subst grounding_\\<rho> t) \\<and>\n            subst grounding_\\<rho> t >\\<^sub>t\\<^sub>w\n            subst grounding_\\<rho> s)", "by (rule wfP_app[OF ground_wfP])"], ["proof (state)\nthis:\n  wfP (\\<lambda>s t.\n          ground (subst grounding_\\<rho> t) \\<and>\n          subst grounding_\\<rho> t >\\<^sub>t\\<^sub>w\n          subst grounding_\\<rho> s)\n\ngoal (1 subgoal):\n 1. wfP (\\<lambda>s t. t >\\<^sub>t\\<^sub>w s)", "hence \"wfP (\\<lambda>s t. ?subst t >\\<^sub>t\\<^sub>w ?subst s)\""], ["proof (prove)\nusing this:\n  wfP (\\<lambda>s t.\n          ground (subst grounding_\\<rho> t) \\<and>\n          subst grounding_\\<rho> t >\\<^sub>t\\<^sub>w\n          subst grounding_\\<rho> s)\n\ngoal (1 subgoal):\n 1. wfP (\\<lambda>s t.\n            subst grounding_\\<rho> t >\\<^sub>t\\<^sub>w\n            subst grounding_\\<rho> s)", "by (simp add: ground_grounding_\\<rho>)"], ["proof (state)\nthis:\n  wfP (\\<lambda>s t.\n          subst grounding_\\<rho> t >\\<^sub>t\\<^sub>w\n          subst grounding_\\<rho> s)\n\ngoal (1 subgoal):\n 1. wfP (\\<lambda>s t. t >\\<^sub>t\\<^sub>w s)", "thus ?thesis"], ["proof (prove)\nusing this:\n  wfP (\\<lambda>s t.\n          subst grounding_\\<rho> t >\\<^sub>t\\<^sub>w\n          subst grounding_\\<rho> s)\n\ngoal (1 subgoal):\n 1. wfP (\\<lambda>s t. t >\\<^sub>t\\<^sub>w s)", "by (auto intro: wfP_subset wary_subst_wary[OF wary_grounding_\\<rho>] gt_subst[OF wary_grounding_\\<rho>])"], ["proof (state)\nthis:\n  wfP (\\<lambda>s t. t >\\<^sub>t\\<^sub>w s)\n\ngoal:\nNo subgoals!", "qed"], ["", "end"], ["", "end"]]}