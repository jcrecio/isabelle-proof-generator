{"file_name": "/home/qj213/afp-2021-10-22/thys/FunWithFunctions/FunWithFunctions.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/FunWithFunctions", "problem_names": ["theorem identity1: fixes f :: \"nat \\<Rightarrow> nat\"\nassumes fff: \"\\<And>n. f(f(n)) < f(Suc(n))\"\nshows \"f(n) = n\"", "lemma identity2: fixes f :: \"nat \\<Rightarrow> nat\"\nassumes \"f(k) = k\" and \"k \\<ge> 2\"\nand f_times: \"\\<And>m n. f(m*n) = f(m)*f(n)\"\nand f_mono: \"\\<And>m n. m<n \\<Longrightarrow> f m < f n\"\nshows \"f(n) = n\"", "theorem plus1:\nfixes f :: \"real \\<Rightarrow> real\"\nassumes 0: \"f 0 = 1\" and f_add: \"\\<And>x y. f(x+y+1) = f x + f y\"\n\nassumes \"r : \\<rat>\" shows \"f(r) = r + 1\"", "theorem ifac_neg0: fixes ifac :: \"int \\<Rightarrow> int\"\nassumes ifac_rec: \"\\<And>i. ifac i = (if i=0 then 1 else i*ifac(i - 1))\"\nshows \"i<0 \\<Longrightarrow> ifac i = 0\""], "translations": [["", "theorem identity1: fixes f :: \"nat \\<Rightarrow> nat\"\nassumes fff: \"\\<And>n. f(f(n)) < f(Suc(n))\"\nshows \"f(n) = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f n = n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f n = n", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. f n = n", "fix m n"], ["proof (state)\ngoal (1 subgoal):\n 1. f n = n", "have key: \"n \\<le> m \\<Longrightarrow> n \\<le> f(m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<le> m \\<Longrightarrow> n \\<le> f m", "proof(induct n arbitrary: m)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>m. 0 \\<le> m \\<Longrightarrow> 0 \\<le> f m\n 2. \\<And>n m.\n       \\<lbrakk>\\<And>m. n \\<le> m \\<Longrightarrow> n \\<le> f m;\n        Suc n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> Suc n \\<le> f m", "case 0"], ["proof (state)\nthis:\n  0 \\<le> m\n\ngoal (2 subgoals):\n 1. \\<And>m. 0 \\<le> m \\<Longrightarrow> 0 \\<le> f m\n 2. \\<And>n m.\n       \\<lbrakk>\\<And>m. n \\<le> m \\<Longrightarrow> n \\<le> f m;\n        Suc n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> Suc n \\<le> f m", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. 0 \\<le> f m", "by simp"], ["proof (state)\nthis:\n  0 \\<le> f m\n\ngoal (1 subgoal):\n 1. \\<And>n m.\n       \\<lbrakk>\\<And>m. n \\<le> m \\<Longrightarrow> n \\<le> f m;\n        Suc n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> Suc n \\<le> f m", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n m.\n       \\<lbrakk>\\<And>m. n \\<le> m \\<Longrightarrow> n \\<le> f m;\n        Suc n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> Suc n \\<le> f m", "case (Suc n)"], ["proof (state)\nthis:\n  n \\<le> ?m \\<Longrightarrow> n \\<le> f ?m\n  Suc n \\<le> m\n\ngoal (1 subgoal):\n 1. \\<And>n m.\n       \\<lbrakk>\\<And>m. n \\<le> m \\<Longrightarrow> n \\<le> f m;\n        Suc n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> Suc n \\<le> f m", "hence \"m \\<noteq> 0\""], ["proof (prove)\nusing this:\n  n \\<le> ?m \\<Longrightarrow> n \\<le> f ?m\n  Suc n \\<le> m\n\ngoal (1 subgoal):\n 1. m \\<noteq> 0", "by simp"], ["proof (state)\nthis:\n  m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<And>n m.\n       \\<lbrakk>\\<And>m. n \\<le> m \\<Longrightarrow> n \\<le> f m;\n        Suc n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> Suc n \\<le> f m", "then"], ["proof (chain)\npicking this:\n  m \\<noteq> 0", "obtain k where [simp]: \"m = Suc k\""], ["proof (prove)\nusing this:\n  m \\<noteq> 0\n\ngoal (1 subgoal):\n 1. (\\<And>k. m = Suc k \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by (metis not0_implies_Suc)"], ["proof (state)\nthis:\n  m = Suc k\n\ngoal (1 subgoal):\n 1. \\<And>n m.\n       \\<lbrakk>\\<And>m. n \\<le> m \\<Longrightarrow> n \\<le> f m;\n        Suc n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> Suc n \\<le> f m", "have \"n \\<le> f(k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. n \\<le> f k", "using Suc"], ["proof (prove)\nusing this:\n  n \\<le> ?m \\<Longrightarrow> n \\<le> f ?m\n  Suc n \\<le> m\n\ngoal (1 subgoal):\n 1. n \\<le> f k", "by simp"], ["proof (state)\nthis:\n  n \\<le> f k\n\ngoal (1 subgoal):\n 1. \\<And>n m.\n       \\<lbrakk>\\<And>m. n \\<le> m \\<Longrightarrow> n \\<le> f m;\n        Suc n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> Suc n \\<le> f m", "hence \"n \\<le> f(f(k))\""], ["proof (prove)\nusing this:\n  n \\<le> f k\n\ngoal (1 subgoal):\n 1. n \\<le> f (f k)", "using Suc"], ["proof (prove)\nusing this:\n  n \\<le> f k\n  n \\<le> ?m \\<Longrightarrow> n \\<le> f ?m\n  Suc n \\<le> m\n\ngoal (1 subgoal):\n 1. n \\<le> f (f k)", "by simp"], ["proof (state)\nthis:\n  n \\<le> f (f k)\n\ngoal (1 subgoal):\n 1. \\<And>n m.\n       \\<lbrakk>\\<And>m. n \\<le> m \\<Longrightarrow> n \\<le> f m;\n        Suc n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> Suc n \\<le> f m", "also"], ["proof (state)\nthis:\n  n \\<le> f (f k)\n\ngoal (1 subgoal):\n 1. \\<And>n m.\n       \\<lbrakk>\\<And>m. n \\<le> m \\<Longrightarrow> n \\<le> f m;\n        Suc n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> Suc n \\<le> f m", "have \"\\<dots> < f(m)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (f k) < f m", "using fff"], ["proof (prove)\nusing this:\n  f (f ?n) < f (Suc ?n)\n\ngoal (1 subgoal):\n 1. f (f k) < f m", "by simp"], ["proof (state)\nthis:\n  f (f k) < f m\n\ngoal (1 subgoal):\n 1. \\<And>n m.\n       \\<lbrakk>\\<And>m. n \\<le> m \\<Longrightarrow> n \\<le> f m;\n        Suc n \\<le> m\\<rbrakk>\n       \\<Longrightarrow> Suc n \\<le> f m", "finally"], ["proof (chain)\npicking this:\n  n < f m", "show ?case"], ["proof (prove)\nusing this:\n  n < f m\n\ngoal (1 subgoal):\n 1. Suc n \\<le> f m", "by simp"], ["proof (state)\nthis:\n  Suc n \\<le> f m\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  n \\<le> m \\<Longrightarrow> n \\<le> f m\n\ngoal (1 subgoal):\n 1. f n = n", "}"], ["proof (state)\nthis:\n  ?na2 \\<le> ?m2 \\<Longrightarrow> ?na2 \\<le> f ?m2\n\ngoal (1 subgoal):\n 1. f n = n", "hence \"\\<And>n. n \\<le> f(n)\""], ["proof (prove)\nusing this:\n  ?na2 \\<le> ?m2 \\<Longrightarrow> ?na2 \\<le> f ?m2\n\ngoal (1 subgoal):\n 1. \\<And>n. n \\<le> f n", "by simp"], ["proof (state)\nthis:\n  ?n \\<le> f ?n\n\ngoal (1 subgoal):\n 1. f n = n", "hence \"\\<And>n. f(n) < f(Suc n)\""], ["proof (prove)\nusing this:\n  ?n \\<le> f ?n\n\ngoal (1 subgoal):\n 1. \\<And>n. f n < f (Suc n)", "by(metis fff order_le_less_trans)"], ["proof (state)\nthis:\n  f ?n < f (Suc ?n)\n\ngoal (1 subgoal):\n 1. f n = n", "hence \"f(n) < n+1\""], ["proof (prove)\nusing this:\n  f ?n < f (Suc ?n)\n\ngoal (1 subgoal):\n 1. f n < n + 1", "by (metis fff lift_Suc_mono_less_iff[of f] Suc_eq_plus1)"], ["proof (state)\nthis:\n  f n < n + 1\n\ngoal (1 subgoal):\n 1. f n = n", "with \\<open>n \\<le> f(n)\\<close>"], ["proof (chain)\npicking this:\n  n \\<le> f n\n  f n < n + 1", "show \"f n = n\""], ["proof (prove)\nusing this:\n  n \\<le> f n\n  f n < n + 1\n\ngoal (1 subgoal):\n 1. f n = n", "by arith"], ["proof (state)\nthis:\n  f n = n\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>See \\cite{Tao2006}. Possible extension:\nShould also hold if the range of \\<open>f\\<close> is the reals!\n\\<close>"], ["", "lemma identity2: fixes f :: \"nat \\<Rightarrow> nat\"\nassumes \"f(k) = k\" and \"k \\<ge> 2\"\nand f_times: \"\\<And>m n. f(m*n) = f(m)*f(n)\"\nand f_mono: \"\\<And>m n. m<n \\<Longrightarrow> f m < f n\"\nshows \"f(n) = n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f n = n", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f n = n", "have 0: \"f(0) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f 0 = 0", "by (metis f_mono f_times mult_1_right mult_is_0 nat_less_le nat_mult_eq_cancel_disj not_less_eq)"], ["proof (state)\nthis:\n  f 0 = 0\n\ngoal (1 subgoal):\n 1. f n = n", "have 1: \"f(1) = 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f 1 = 1", "by (metis f_mono f_times gr_implies_not0 mult_eq_self_implies_10 nat_mult_1_right zero_less_one)"], ["proof (state)\nthis:\n  f 1 = 1\n\ngoal (1 subgoal):\n 1. f n = n", "have 2: \"f 2 = 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f 2 = 2", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f 2 = 2", "have \"2 + (k - 2) = k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 + (k - 2) = k", "using \\<open>k \\<ge> 2\\<close>"], ["proof (prove)\nusing this:\n  2 \\<le> k\n\ngoal (1 subgoal):\n 1. 2 + (k - 2) = k", "by arith"], ["proof (state)\nthis:\n  2 + (k - 2) = k\n\ngoal (1 subgoal):\n 1. f 2 = 2", "hence \"f(2) \\<le> 2\""], ["proof (prove)\nusing this:\n  2 + (k - 2) = k\n\ngoal (1 subgoal):\n 1. f 2 \\<le> 2", "using mono_nat_linear_lb[of f 2 \"k - 2\",OF f_mono] \\<open>f k = k\\<close>"], ["proof (prove)\nusing this:\n  2 + (k - 2) = k\n  (\\<And>m n. m < n \\<Longrightarrow> m < n) \\<Longrightarrow>\n  f 2 + (k - 2) \\<le> f (2 + (k - 2))\n  f k = k\n\ngoal (1 subgoal):\n 1. f 2 \\<le> 2", "by simp"], ["proof (state)\nthis:\n  f 2 \\<le> 2\n\ngoal (1 subgoal):\n 1. f 2 = 2", "thus \"f 2 = 2\""], ["proof (prove)\nusing this:\n  f 2 \\<le> 2\n\ngoal (1 subgoal):\n 1. f 2 = 2", "using 1 f_mono[of 1 2]"], ["proof (prove)\nusing this:\n  f 2 \\<le> 2\n  f 1 = 1\n  1 < 2 \\<Longrightarrow> f 1 < f 2\n\ngoal (1 subgoal):\n 1. f 2 = 2", "by arith"], ["proof (state)\nthis:\n  f 2 = 2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f 2 = 2\n\ngoal (1 subgoal):\n 1. f n = n", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. f n = n", "proof(induct rule:less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<And>y. y < x \\<Longrightarrow> f y = y) \\<Longrightarrow> f x = x", "case (less i)"], ["proof (state)\nthis:\n  ?y < i \\<Longrightarrow> f ?y = ?y\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<And>y. y < x \\<Longrightarrow> f y = y) \\<Longrightarrow> f x = x", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. f i = i", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> f i = i\n 2. \\<not> ?P \\<Longrightarrow> f i = i", "assume \"i\\<le>1\""], ["proof (state)\nthis:\n  i \\<le> 1\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> f i = i\n 2. \\<not> ?P \\<Longrightarrow> f i = i", "thus ?case"], ["proof (prove)\nusing this:\n  i \\<le> 1\n\ngoal (1 subgoal):\n 1. f i = i", "using 0 1"], ["proof (prove)\nusing this:\n  i \\<le> 1\n  f 0 = 0\n  f 1 = 1\n\ngoal (1 subgoal):\n 1. f i = i", "by (auto simp add:le_Suc_eq)"], ["proof (state)\nthis:\n  f i = i\n\ngoal (1 subgoal):\n 1. \\<not> i \\<le> 1 \\<Longrightarrow> f i = i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> i \\<le> 1 \\<Longrightarrow> f i = i", "assume \"~i\\<le>1\""], ["proof (state)\nthis:\n  \\<not> i \\<le> 1\n\ngoal (1 subgoal):\n 1. \\<not> i \\<le> 1 \\<Longrightarrow> f i = i", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. f i = i", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> f i = i\n 2. \\<not> ?P \\<Longrightarrow> f i = i", "assume \"i mod 2 = 0\""], ["proof (state)\nthis:\n  i mod 2 = 0\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> f i = i\n 2. \\<not> ?P \\<Longrightarrow> f i = i", "hence \"\\<exists>k. i=2*k\""], ["proof (prove)\nusing this:\n  i mod 2 = 0\n\ngoal (1 subgoal):\n 1. \\<exists>k. i = 2 * k", "by arith"], ["proof (state)\nthis:\n  \\<exists>k. i = 2 * k\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> f i = i\n 2. \\<not> ?P \\<Longrightarrow> f i = i", "then"], ["proof (chain)\npicking this:\n  \\<exists>k. i = 2 * k", "obtain k where \"i = 2*k\""], ["proof (prove)\nusing this:\n  \\<exists>k. i = 2 * k\n\ngoal (1 subgoal):\n 1. (\\<And>k. i = 2 * k \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", ".."], ["proof (state)\nthis:\n  i = 2 * k\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> f i = i\n 2. \\<not> ?P \\<Longrightarrow> f i = i", "hence \"0 < k\" and \"k<i\""], ["proof (prove)\nusing this:\n  i = 2 * k\n\ngoal (1 subgoal):\n 1. 0 < k &&& k < i", "using \\<open>~i\\<le>1\\<close>"], ["proof (prove)\nusing this:\n  i = 2 * k\n  \\<not> i \\<le> 1\n\ngoal (1 subgoal):\n 1. 0 < k &&& k < i", "by arith+"], ["proof (state)\nthis:\n  0 < k\n  k < i\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> f i = i\n 2. \\<not> ?P \\<Longrightarrow> f i = i", "hence \"f(k) = k\""], ["proof (prove)\nusing this:\n  0 < k\n  k < i\n\ngoal (1 subgoal):\n 1. f k = k", "using less(1)"], ["proof (prove)\nusing this:\n  0 < k\n  k < i\n  ?y < i \\<Longrightarrow> f ?y = ?y\n\ngoal (1 subgoal):\n 1. f k = k", "by blast"], ["proof (state)\nthis:\n  f k = k\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> f i = i\n 2. \\<not> ?P \\<Longrightarrow> f i = i", "thus \"f(i) = i\""], ["proof (prove)\nusing this:\n  f k = k\n\ngoal (1 subgoal):\n 1. f i = i", "using \\<open>i = 2*k\\<close>"], ["proof (prove)\nusing this:\n  f k = k\n  i = 2 * k\n\ngoal (1 subgoal):\n 1. f i = i", "by(simp add:f_times 2)"], ["proof (state)\nthis:\n  f i = i\n\ngoal (1 subgoal):\n 1. i mod 2 \\<noteq> 0 \\<Longrightarrow> f i = i", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. i mod 2 \\<noteq> 0 \\<Longrightarrow> f i = i", "assume \"i mod 2 \\<noteq> 0\""], ["proof (state)\nthis:\n  i mod 2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. i mod 2 \\<noteq> 0 \\<Longrightarrow> f i = i", "hence \"\\<exists>k. i=2*k+1\""], ["proof (prove)\nusing this:\n  i mod 2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<exists>k. i = 2 * k + 1", "by arith"], ["proof (state)\nthis:\n  \\<exists>k. i = 2 * k + 1\n\ngoal (1 subgoal):\n 1. i mod 2 \\<noteq> 0 \\<Longrightarrow> f i = i", "then"], ["proof (chain)\npicking this:\n  \\<exists>k. i = 2 * k + 1", "obtain k where \"i = 2*k+1\""], ["proof (prove)\nusing this:\n  \\<exists>k. i = 2 * k + 1\n\ngoal (1 subgoal):\n 1. (\\<And>k. i = 2 * k + 1 \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  i = 2 * k + 1\n\ngoal (1 subgoal):\n 1. i mod 2 \\<noteq> 0 \\<Longrightarrow> f i = i", "hence \"0<k\" and \"k+1<i\""], ["proof (prove)\nusing this:\n  i = 2 * k + 1\n\ngoal (1 subgoal):\n 1. 0 < k &&& k + 1 < i", "using \\<open>~i\\<le>1\\<close>"], ["proof (prove)\nusing this:\n  i = 2 * k + 1\n  \\<not> i \\<le> 1\n\ngoal (1 subgoal):\n 1. 0 < k &&& k + 1 < i", "by arith+"], ["proof (state)\nthis:\n  0 < k\n  k + 1 < i\n\ngoal (1 subgoal):\n 1. i mod 2 \\<noteq> 0 \\<Longrightarrow> f i = i", "have \"2*k < f(2*k+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * k < f (2 * k + 1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. 2 * k < f (2 * k + 1)", "have \"2*k = 2*f(k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * k = 2 * f k", "using less(1) \\<open>i=2*k+1\\<close>"], ["proof (prove)\nusing this:\n  ?y < i \\<Longrightarrow> f ?y = ?y\n  i = 2 * k + 1\n\ngoal (1 subgoal):\n 1. 2 * k = 2 * f k", "by simp"], ["proof (state)\nthis:\n  2 * k = 2 * f k\n\ngoal (1 subgoal):\n 1. 2 * k < f (2 * k + 1)", "also"], ["proof (state)\nthis:\n  2 * k = 2 * f k\n\ngoal (1 subgoal):\n 1. 2 * k < f (2 * k + 1)", "have \"\\<dots> = f(2*k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 * f k = f (2 * k)", "by(simp add:f_times 2)"], ["proof (state)\nthis:\n  2 * f k = f (2 * k)\n\ngoal (1 subgoal):\n 1. 2 * k < f (2 * k + 1)", "also"], ["proof (state)\nthis:\n  2 * f k = f (2 * k)\n\ngoal (1 subgoal):\n 1. 2 * k < f (2 * k + 1)", "have \"\\<dots> < f(2*k+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (2 * k) < f (2 * k + 1)", "using f_mono[of \"2*k\" \"2*k+1\"]"], ["proof (prove)\nusing this:\n  2 * k < 2 * k + 1 \\<Longrightarrow> f (2 * k) < f (2 * k + 1)\n\ngoal (1 subgoal):\n 1. f (2 * k) < f (2 * k + 1)", "by simp"], ["proof (state)\nthis:\n  f (2 * k) < f (2 * k + 1)\n\ngoal (1 subgoal):\n 1. 2 * k < f (2 * k + 1)", "finally"], ["proof (chain)\npicking this:\n  2 * k < f (2 * k + 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  2 * k < f (2 * k + 1)\n\ngoal (1 subgoal):\n 1. 2 * k < f (2 * k + 1)", "."], ["proof (state)\nthis:\n  2 * k < f (2 * k + 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  2 * k < f (2 * k + 1)\n\ngoal (1 subgoal):\n 1. i mod 2 \\<noteq> 0 \\<Longrightarrow> f i = i", "moreover"], ["proof (state)\nthis:\n  2 * k < f (2 * k + 1)\n\ngoal (1 subgoal):\n 1. i mod 2 \\<noteq> 0 \\<Longrightarrow> f i = i", "have \"f(2*k+1) < 2*(k+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (2 * k + 1) < 2 * (k + 1)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f (2 * k + 1) < 2 * (k + 1)", "have \"f(2*k+1) < f(2*k+2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (2 * k + 1) < f (2 * k + 2)", "using f_mono[of \"2*k+1\" \"2*k+2\"]"], ["proof (prove)\nusing this:\n  2 * k + 1 < 2 * k + 2 \\<Longrightarrow> f (2 * k + 1) < f (2 * k + 2)\n\ngoal (1 subgoal):\n 1. f (2 * k + 1) < f (2 * k + 2)", "by simp"], ["proof (state)\nthis:\n  f (2 * k + 1) < f (2 * k + 2)\n\ngoal (1 subgoal):\n 1. f (2 * k + 1) < 2 * (k + 1)", "also"], ["proof (state)\nthis:\n  f (2 * k + 1) < f (2 * k + 2)\n\ngoal (1 subgoal):\n 1. f (2 * k + 1) < 2 * (k + 1)", "have \"\\<dots> = f(2*(k+1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (2 * k + 2) = f (2 * (k + 1))", "by simp"], ["proof (state)\nthis:\n  f (2 * k + 2) = f (2 * (k + 1))\n\ngoal (1 subgoal):\n 1. f (2 * k + 1) < 2 * (k + 1)", "also"], ["proof (state)\nthis:\n  f (2 * k + 2) = f (2 * (k + 1))\n\ngoal (1 subgoal):\n 1. f (2 * k + 1) < 2 * (k + 1)", "have \"\\<dots> = 2*f(k+1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (2 * (k + 1)) = 2 * f (k + 1)", "by(simp only:f_times 2)"], ["proof (state)\nthis:\n  f (2 * (k + 1)) = 2 * f (k + 1)\n\ngoal (1 subgoal):\n 1. f (2 * k + 1) < 2 * (k + 1)", "also"], ["proof (state)\nthis:\n  f (2 * (k + 1)) = 2 * f (k + 1)\n\ngoal (1 subgoal):\n 1. f (2 * k + 1) < 2 * (k + 1)", "have \"f(k+1) = k+1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (k + 1) = k + 1", "using less(1) \\<open>i=2*k+1\\<close> \\<open>~i\\<le>1\\<close>"], ["proof (prove)\nusing this:\n  ?y < i \\<Longrightarrow> f ?y = ?y\n  i = 2 * k + 1\n  \\<not> i \\<le> 1\n\ngoal (1 subgoal):\n 1. f (k + 1) = k + 1", "by simp"], ["proof (state)\nthis:\n  f (k + 1) = k + 1\n\ngoal (1 subgoal):\n 1. f (2 * k + 1) < 2 * (k + 1)", "finally"], ["proof (chain)\npicking this:\n  f (2 * k + 1) < 2 * (k + 1)", "show ?thesis"], ["proof (prove)\nusing this:\n  f (2 * k + 1) < 2 * (k + 1)\n\ngoal (1 subgoal):\n 1. f (2 * k + 1) < 2 * (k + 1)", "."], ["proof (state)\nthis:\n  f (2 * k + 1) < 2 * (k + 1)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f (2 * k + 1) < 2 * (k + 1)\n\ngoal (1 subgoal):\n 1. i mod 2 \\<noteq> 0 \\<Longrightarrow> f i = i", "ultimately"], ["proof (chain)\npicking this:\n  2 * k < f (2 * k + 1)\n  f (2 * k + 1) < 2 * (k + 1)", "show \"f(i) = i\""], ["proof (prove)\nusing this:\n  2 * k < f (2 * k + 1)\n  f (2 * k + 1) < 2 * (k + 1)\n\ngoal (1 subgoal):\n 1. f i = i", "using \\<open>i = 2*k+1\\<close>"], ["proof (prove)\nusing this:\n  2 * k < f (2 * k + 1)\n  f (2 * k + 1) < 2 * (k + 1)\n  i = 2 * k + 1\n\ngoal (1 subgoal):\n 1. f i = i", "by arith"], ["proof (state)\nthis:\n  f i = i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f i = i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f i = i\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f n = n\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>One more from Tao's booklet. If \\<open>f\\<close> is also assumed to be\ncontinuous, @{term\"f(x::real) = x+1\"} holds for all reals, not only\nrationals. Extend the proof!\\<close>"], ["", "theorem plus1:\nfixes f :: \"real \\<Rightarrow> real\"\nassumes 0: \"f 0 = 1\" and f_add: \"\\<And>x y. f(x+y+1) = f x + f y\"\n\nassumes \"r : \\<rat>\" shows \"f(r) = r + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f r = r + 1", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. f r = r + 1", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. f r = r + 1", "fix i"], ["proof (state)\ngoal (1 subgoal):\n 1. f r = r + 1", "have \"f(of_int i) = of_int i + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (real_of_int i) = real_of_int i + 1", "proof (induct i rule: int_induct [where k=0])"], ["proof (state)\ngoal (3 subgoals):\n 1. f (real_of_int 0) = real_of_int 0 + 1\n 2. \\<And>i.\n       \\<lbrakk>0 \\<le> i; f (real_of_int i) = real_of_int i + 1\\<rbrakk>\n       \\<Longrightarrow> f (real_of_int (i + 1)) = real_of_int (i + 1) + 1\n 3. \\<And>i.\n       \\<lbrakk>i \\<le> 0; f (real_of_int i) = real_of_int i + 1\\<rbrakk>\n       \\<Longrightarrow> f (real_of_int (i - 1)) = real_of_int (i - 1) + 1", "case base"], ["proof (state)\nthis:\n  \n\ngoal (3 subgoals):\n 1. f (real_of_int 0) = real_of_int 0 + 1\n 2. \\<And>i.\n       \\<lbrakk>0 \\<le> i; f (real_of_int i) = real_of_int i + 1\\<rbrakk>\n       \\<Longrightarrow> f (real_of_int (i + 1)) = real_of_int (i + 1) + 1\n 3. \\<And>i.\n       \\<lbrakk>i \\<le> 0; f (real_of_int i) = real_of_int i + 1\\<rbrakk>\n       \\<Longrightarrow> f (real_of_int (i - 1)) = real_of_int (i - 1) + 1", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. f (real_of_int 0) = real_of_int 0 + 1", "using 0"], ["proof (prove)\nusing this:\n  f 0 = 1\n\ngoal (1 subgoal):\n 1. f (real_of_int 0) = real_of_int 0 + 1", "by simp"], ["proof (state)\nthis:\n  f (real_of_int 0) = real_of_int 0 + 1\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>0 \\<le> i; f (real_of_int i) = real_of_int i + 1\\<rbrakk>\n       \\<Longrightarrow> f (real_of_int (i + 1)) = real_of_int (i + 1) + 1\n 2. \\<And>i.\n       \\<lbrakk>i \\<le> 0; f (real_of_int i) = real_of_int i + 1\\<rbrakk>\n       \\<Longrightarrow> f (real_of_int (i - 1)) = real_of_int (i - 1) + 1", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>0 \\<le> i; f (real_of_int i) = real_of_int i + 1\\<rbrakk>\n       \\<Longrightarrow> f (real_of_int (i + 1)) = real_of_int (i + 1) + 1\n 2. \\<And>i.\n       \\<lbrakk>i \\<le> 0; f (real_of_int i) = real_of_int i + 1\\<rbrakk>\n       \\<Longrightarrow> f (real_of_int (i - 1)) = real_of_int (i - 1) + 1", "case (step1 i)"], ["proof (state)\nthis:\n  0 \\<le> i\n  f (real_of_int i) = real_of_int i + 1\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>0 \\<le> i; f (real_of_int i) = real_of_int i + 1\\<rbrakk>\n       \\<Longrightarrow> f (real_of_int (i + 1)) = real_of_int (i + 1) + 1\n 2. \\<And>i.\n       \\<lbrakk>i \\<le> 0; f (real_of_int i) = real_of_int i + 1\\<rbrakk>\n       \\<Longrightarrow> f (real_of_int (i - 1)) = real_of_int (i - 1) + 1", "have \"f(of_int (i+1)) = f(of_int i + 0 + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (real_of_int (i + 1)) = f (real_of_int i + 0 + 1)", "by simp"], ["proof (state)\nthis:\n  f (real_of_int (i + 1)) = f (real_of_int i + 0 + 1)\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>0 \\<le> i; f (real_of_int i) = real_of_int i + 1\\<rbrakk>\n       \\<Longrightarrow> f (real_of_int (i + 1)) = real_of_int (i + 1) + 1\n 2. \\<And>i.\n       \\<lbrakk>i \\<le> 0; f (real_of_int i) = real_of_int i + 1\\<rbrakk>\n       \\<Longrightarrow> f (real_of_int (i - 1)) = real_of_int (i - 1) + 1", "also"], ["proof (state)\nthis:\n  f (real_of_int (i + 1)) = f (real_of_int i + 0 + 1)\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>0 \\<le> i; f (real_of_int i) = real_of_int i + 1\\<rbrakk>\n       \\<Longrightarrow> f (real_of_int (i + 1)) = real_of_int (i + 1) + 1\n 2. \\<And>i.\n       \\<lbrakk>i \\<le> 0; f (real_of_int i) = real_of_int i + 1\\<rbrakk>\n       \\<Longrightarrow> f (real_of_int (i - 1)) = real_of_int (i - 1) + 1", "have \"\\<dots> = f(of_int i) + f 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (real_of_int i + 0 + 1) = f (real_of_int i) + f 0", "by(rule f_add)"], ["proof (state)\nthis:\n  f (real_of_int i + 0 + 1) = f (real_of_int i) + f 0\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>0 \\<le> i; f (real_of_int i) = real_of_int i + 1\\<rbrakk>\n       \\<Longrightarrow> f (real_of_int (i + 1)) = real_of_int (i + 1) + 1\n 2. \\<And>i.\n       \\<lbrakk>i \\<le> 0; f (real_of_int i) = real_of_int i + 1\\<rbrakk>\n       \\<Longrightarrow> f (real_of_int (i - 1)) = real_of_int (i - 1) + 1", "also"], ["proof (state)\nthis:\n  f (real_of_int i + 0 + 1) = f (real_of_int i) + f 0\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>0 \\<le> i; f (real_of_int i) = real_of_int i + 1\\<rbrakk>\n       \\<Longrightarrow> f (real_of_int (i + 1)) = real_of_int (i + 1) + 1\n 2. \\<And>i.\n       \\<lbrakk>i \\<le> 0; f (real_of_int i) = real_of_int i + 1\\<rbrakk>\n       \\<Longrightarrow> f (real_of_int (i - 1)) = real_of_int (i - 1) + 1", "have \"\\<dots> = of_int (i+1) + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (real_of_int i) + f 0 = real_of_int (i + 1) + 1", "using step1 0"], ["proof (prove)\nusing this:\n  0 \\<le> i\n  f (real_of_int i) = real_of_int i + 1\n  f 0 = 1\n\ngoal (1 subgoal):\n 1. f (real_of_int i) + f 0 = real_of_int (i + 1) + 1", "by simp"], ["proof (state)\nthis:\n  f (real_of_int i) + f 0 = real_of_int (i + 1) + 1\n\ngoal (2 subgoals):\n 1. \\<And>i.\n       \\<lbrakk>0 \\<le> i; f (real_of_int i) = real_of_int i + 1\\<rbrakk>\n       \\<Longrightarrow> f (real_of_int (i + 1)) = real_of_int (i + 1) + 1\n 2. \\<And>i.\n       \\<lbrakk>i \\<le> 0; f (real_of_int i) = real_of_int i + 1\\<rbrakk>\n       \\<Longrightarrow> f (real_of_int (i - 1)) = real_of_int (i - 1) + 1", "finally"], ["proof (chain)\npicking this:\n  f (real_of_int (i + 1)) = real_of_int (i + 1) + 1", "show ?case"], ["proof (prove)\nusing this:\n  f (real_of_int (i + 1)) = real_of_int (i + 1) + 1\n\ngoal (1 subgoal):\n 1. f (real_of_int (i + 1)) = real_of_int (i + 1) + 1", "."], ["proof (state)\nthis:\n  f (real_of_int (i + 1)) = real_of_int (i + 1) + 1\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> 0; f (real_of_int i) = real_of_int i + 1\\<rbrakk>\n       \\<Longrightarrow> f (real_of_int (i - 1)) = real_of_int (i - 1) + 1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> 0; f (real_of_int i) = real_of_int i + 1\\<rbrakk>\n       \\<Longrightarrow> f (real_of_int (i - 1)) = real_of_int (i - 1) + 1", "case (step2 i)"], ["proof (state)\nthis:\n  i \\<le> 0\n  f (real_of_int i) = real_of_int i + 1\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> 0; f (real_of_int i) = real_of_int i + 1\\<rbrakk>\n       \\<Longrightarrow> f (real_of_int (i - 1)) = real_of_int (i - 1) + 1", "have \"f(of_int i) = f(of_int (i - 1) + 0 + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (real_of_int i) = f (real_of_int (i - 1) + 0 + 1)", "by simp"], ["proof (state)\nthis:\n  f (real_of_int i) = f (real_of_int (i - 1) + 0 + 1)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> 0; f (real_of_int i) = real_of_int i + 1\\<rbrakk>\n       \\<Longrightarrow> f (real_of_int (i - 1)) = real_of_int (i - 1) + 1", "also"], ["proof (state)\nthis:\n  f (real_of_int i) = f (real_of_int (i - 1) + 0 + 1)\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> 0; f (real_of_int i) = real_of_int i + 1\\<rbrakk>\n       \\<Longrightarrow> f (real_of_int (i - 1)) = real_of_int (i - 1) + 1", "have \"\\<dots> = f(of_int (i - 1)) + f 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (real_of_int (i - 1) + 0 + 1) = f (real_of_int (i - 1)) + f 0", "by(rule f_add)"], ["proof (state)\nthis:\n  f (real_of_int (i - 1) + 0 + 1) = f (real_of_int (i - 1)) + f 0\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> 0; f (real_of_int i) = real_of_int i + 1\\<rbrakk>\n       \\<Longrightarrow> f (real_of_int (i - 1)) = real_of_int (i - 1) + 1", "also"], ["proof (state)\nthis:\n  f (real_of_int (i - 1) + 0 + 1) = f (real_of_int (i - 1)) + f 0\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> 0; f (real_of_int i) = real_of_int i + 1\\<rbrakk>\n       \\<Longrightarrow> f (real_of_int (i - 1)) = real_of_int (i - 1) + 1", "have \"\\<dots> = f(of_int (i - 1)) + 1 \""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (real_of_int (i - 1)) + f 0 = f (real_of_int (i - 1)) + 1", "using 0"], ["proof (prove)\nusing this:\n  f 0 = 1\n\ngoal (1 subgoal):\n 1. f (real_of_int (i - 1)) + f 0 = f (real_of_int (i - 1)) + 1", "by simp"], ["proof (state)\nthis:\n  f (real_of_int (i - 1)) + f 0 = f (real_of_int (i - 1)) + 1\n\ngoal (1 subgoal):\n 1. \\<And>i.\n       \\<lbrakk>i \\<le> 0; f (real_of_int i) = real_of_int i + 1\\<rbrakk>\n       \\<Longrightarrow> f (real_of_int (i - 1)) = real_of_int (i - 1) + 1", "finally"], ["proof (chain)\npicking this:\n  f (real_of_int i) = f (real_of_int (i - 1)) + 1", "show ?case"], ["proof (prove)\nusing this:\n  f (real_of_int i) = f (real_of_int (i - 1)) + 1\n\ngoal (1 subgoal):\n 1. f (real_of_int (i - 1)) = real_of_int (i - 1) + 1", "using step2"], ["proof (prove)\nusing this:\n  f (real_of_int i) = f (real_of_int (i - 1)) + 1\n  i \\<le> 0\n  f (real_of_int i) = real_of_int i + 1\n\ngoal (1 subgoal):\n 1. f (real_of_int (i - 1)) = real_of_int (i - 1) + 1", "by simp"], ["proof (state)\nthis:\n  f (real_of_int (i - 1)) = real_of_int (i - 1) + 1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f (real_of_int i) = real_of_int i + 1\n\ngoal (1 subgoal):\n 1. f r = r + 1", "}"], ["proof (state)\nthis:\n  f (real_of_int ?i2) = real_of_int ?i2 + 1\n\ngoal (1 subgoal):\n 1. f r = r + 1", "note f_int = this"], ["proof (state)\nthis:\n  f (real_of_int ?i2) = real_of_int ?i2 + 1\n\ngoal (1 subgoal):\n 1. f r = r + 1", "{"], ["proof (state)\nthis:\n  f (real_of_int ?i2) = real_of_int ?i2 + 1\n\ngoal (1 subgoal):\n 1. f r = r + 1", "fix n r"], ["proof (state)\ngoal (1 subgoal):\n 1. f r = r + 1", "have \"f(of_int (Suc n)*r + of_int n) = of_int (Suc n) * f r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (real_of_int (int (Suc n)) * r + real_of_int (int n)) =\n    real_of_int (int (Suc n)) * f r", "proof(induct n)"], ["proof (state)\ngoal (2 subgoals):\n 1. f (real_of_int (int (Suc 0)) * r + real_of_int (int 0)) =\n    real_of_int (int (Suc 0)) * f r\n 2. \\<And>n.\n       f (real_of_int (int (Suc n)) * r + real_of_int (int n)) =\n       real_of_int (int (Suc n)) * f r \\<Longrightarrow>\n       f (real_of_int (int (Suc (Suc n))) * r + real_of_int (int (Suc n))) =\n       real_of_int (int (Suc (Suc n))) * f r", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. f (real_of_int (int (Suc 0)) * r + real_of_int (int 0)) =\n    real_of_int (int (Suc 0)) * f r\n 2. \\<And>n.\n       f (real_of_int (int (Suc n)) * r + real_of_int (int n)) =\n       real_of_int (int (Suc n)) * f r \\<Longrightarrow>\n       f (real_of_int (int (Suc (Suc n))) * r + real_of_int (int (Suc n))) =\n       real_of_int (int (Suc (Suc n))) * f r", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. f (real_of_int (int (Suc 0)) * r + real_of_int (int 0)) =\n    real_of_int (int (Suc 0)) * f r", "by simp"], ["proof (state)\nthis:\n  f (real_of_int (int (Suc 0)) * r + real_of_int (int 0)) =\n  real_of_int (int (Suc 0)) * f r\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       f (real_of_int (int (Suc n)) * r + real_of_int (int n)) =\n       real_of_int (int (Suc n)) * f r \\<Longrightarrow>\n       f (real_of_int (int (Suc (Suc n))) * r + real_of_int (int (Suc n))) =\n       real_of_int (int (Suc (Suc n))) * f r", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       f (real_of_int (int (Suc n)) * r + real_of_int (int n)) =\n       real_of_int (int (Suc n)) * f r \\<Longrightarrow>\n       f (real_of_int (int (Suc (Suc n))) * r + real_of_int (int (Suc n))) =\n       real_of_int (int (Suc (Suc n))) * f r", "case (Suc n)"], ["proof (state)\nthis:\n  f (real_of_int (int (Suc n)) * r + real_of_int (int n)) =\n  real_of_int (int (Suc n)) * f r\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       f (real_of_int (int (Suc n)) * r + real_of_int (int n)) =\n       real_of_int (int (Suc n)) * f r \\<Longrightarrow>\n       f (real_of_int (int (Suc (Suc n))) * r + real_of_int (int (Suc n))) =\n       real_of_int (int (Suc (Suc n))) * f r", "have \"of_int (Suc(Suc n))*r + of_int (Suc n) =\n            r + (of_int (Suc n)*r + of_int n) + 1\" (is \"?a = ?b\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int (int (Suc (Suc n))) * r + real_of_int (int (Suc n)) =\n    r + (real_of_int (int (Suc n)) * r + real_of_int (int n)) + 1", "by(simp add: field_simps)"], ["proof (state)\nthis:\n  real_of_int (int (Suc (Suc n))) * r + real_of_int (int (Suc n)) =\n  r + (real_of_int (int (Suc n)) * r + real_of_int (int n)) + 1\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       f (real_of_int (int (Suc n)) * r + real_of_int (int n)) =\n       real_of_int (int (Suc n)) * f r \\<Longrightarrow>\n       f (real_of_int (int (Suc (Suc n))) * r + real_of_int (int (Suc n))) =\n       real_of_int (int (Suc (Suc n))) * f r", "hence \"f ?a = f ?b\""], ["proof (prove)\nusing this:\n  real_of_int (int (Suc (Suc n))) * r + real_of_int (int (Suc n)) =\n  r + (real_of_int (int (Suc n)) * r + real_of_int (int n)) + 1\n\ngoal (1 subgoal):\n 1. f (real_of_int (int (Suc (Suc n))) * r + real_of_int (int (Suc n))) =\n    f (r + (real_of_int (int (Suc n)) * r + real_of_int (int n)) + 1)", "by presburger"], ["proof (state)\nthis:\n  f (real_of_int (int (Suc (Suc n))) * r + real_of_int (int (Suc n))) =\n  f (r + (real_of_int (int (Suc n)) * r + real_of_int (int n)) + 1)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       f (real_of_int (int (Suc n)) * r + real_of_int (int n)) =\n       real_of_int (int (Suc n)) * f r \\<Longrightarrow>\n       f (real_of_int (int (Suc (Suc n))) * r + real_of_int (int (Suc n))) =\n       real_of_int (int (Suc (Suc n))) * f r", "also"], ["proof (state)\nthis:\n  f (real_of_int (int (Suc (Suc n))) * r + real_of_int (int (Suc n))) =\n  f (r + (real_of_int (int (Suc n)) * r + real_of_int (int n)) + 1)\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       f (real_of_int (int (Suc n)) * r + real_of_int (int n)) =\n       real_of_int (int (Suc n)) * f r \\<Longrightarrow>\n       f (real_of_int (int (Suc (Suc n))) * r + real_of_int (int (Suc n))) =\n       real_of_int (int (Suc (Suc n))) * f r", "have \"\\<dots> = f r + f(of_int (Suc n)*r + of_int n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (r + (real_of_int (int (Suc n)) * r + real_of_int (int n)) + 1) =\n    f r + f (real_of_int (int (Suc n)) * r + real_of_int (int n))", "by(rule f_add)"], ["proof (state)\nthis:\n  f (r + (real_of_int (int (Suc n)) * r + real_of_int (int n)) + 1) =\n  f r + f (real_of_int (int (Suc n)) * r + real_of_int (int n))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       f (real_of_int (int (Suc n)) * r + real_of_int (int n)) =\n       real_of_int (int (Suc n)) * f r \\<Longrightarrow>\n       f (real_of_int (int (Suc (Suc n))) * r + real_of_int (int (Suc n))) =\n       real_of_int (int (Suc (Suc n))) * f r", "also"], ["proof (state)\nthis:\n  f (r + (real_of_int (int (Suc n)) * r + real_of_int (int n)) + 1) =\n  f r + f (real_of_int (int (Suc n)) * r + real_of_int (int n))\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       f (real_of_int (int (Suc n)) * r + real_of_int (int n)) =\n       real_of_int (int (Suc n)) * f r \\<Longrightarrow>\n       f (real_of_int (int (Suc (Suc n))) * r + real_of_int (int (Suc n))) =\n       real_of_int (int (Suc (Suc n))) * f r", "have \"\\<dots> = f r + of_int (Suc n) * f r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f r + f (real_of_int (int (Suc n)) * r + real_of_int (int n)) =\n    f r + real_of_int (int (Suc n)) * f r", "by(simp only:Suc)"], ["proof (state)\nthis:\n  f r + f (real_of_int (int (Suc n)) * r + real_of_int (int n)) =\n  f r + real_of_int (int (Suc n)) * f r\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       f (real_of_int (int (Suc n)) * r + real_of_int (int n)) =\n       real_of_int (int (Suc n)) * f r \\<Longrightarrow>\n       f (real_of_int (int (Suc (Suc n))) * r + real_of_int (int (Suc n))) =\n       real_of_int (int (Suc (Suc n))) * f r", "finally"], ["proof (chain)\npicking this:\n  f (real_of_int (int (Suc (Suc n))) * r + real_of_int (int (Suc n))) =\n  f r + real_of_int (int (Suc n)) * f r", "show ?case"], ["proof (prove)\nusing this:\n  f (real_of_int (int (Suc (Suc n))) * r + real_of_int (int (Suc n))) =\n  f r + real_of_int (int (Suc n)) * f r\n\ngoal (1 subgoal):\n 1. f (real_of_int (int (Suc (Suc n))) * r + real_of_int (int (Suc n))) =\n    real_of_int (int (Suc (Suc n))) * f r", "by(simp add: field_simps)"], ["proof (state)\nthis:\n  f (real_of_int (int (Suc (Suc n))) * r + real_of_int (int (Suc n))) =\n  real_of_int (int (Suc (Suc n))) * f r\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f (real_of_int (int (Suc n)) * r + real_of_int (int n)) =\n  real_of_int (int (Suc n)) * f r\n\ngoal (1 subgoal):\n 1. f r = r + 1", "}"], ["proof (state)\nthis:\n  f (real_of_int (int (Suc ?n2)) * ?ra2 + real_of_int (int ?n2)) =\n  real_of_int (int (Suc ?n2)) * f ?ra2\n\ngoal (1 subgoal):\n 1. f r = r + 1", "note 1 = this"], ["proof (state)\nthis:\n  f (real_of_int (int (Suc ?n2)) * ?ra2 + real_of_int (int ?n2)) =\n  real_of_int (int (Suc ?n2)) * f ?ra2\n\ngoal (1 subgoal):\n 1. f r = r + 1", "{"], ["proof (state)\nthis:\n  f (real_of_int (int (Suc ?n2)) * ?ra2 + real_of_int (int ?n2)) =\n  real_of_int (int (Suc ?n2)) * f ?ra2\n\ngoal (1 subgoal):\n 1. f r = r + 1", "fix n::nat and r"], ["proof (state)\ngoal (1 subgoal):\n 1. f r = r + 1", "assume \"n\\<noteq>0\""], ["proof (state)\nthis:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. f r = r + 1", "have \"f(of_int (n)*r + of_int (n - 1)) = of_int (n) * f r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (real_of_int (int n) * r + real_of_int (int (n - 1))) =\n    real_of_int (int n) * f r", "proof(cases n)"], ["proof (state)\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    f (real_of_int (int n) * r + real_of_int (int (n - 1))) =\n    real_of_int (int n) * f r\n 2. \\<And>nat.\n       n = Suc nat \\<Longrightarrow>\n       f (real_of_int (int n) * r + real_of_int (int (n - 1))) =\n       real_of_int (int n) * f r", "case 0"], ["proof (state)\nthis:\n  n = 0\n\ngoal (2 subgoals):\n 1. n = 0 \\<Longrightarrow>\n    f (real_of_int (int n) * r + real_of_int (int (n - 1))) =\n    real_of_int (int n) * f r\n 2. \\<And>nat.\n       n = Suc nat \\<Longrightarrow>\n       f (real_of_int (int n) * r + real_of_int (int (n - 1))) =\n       real_of_int (int n) * f r", "thus ?thesis"], ["proof (prove)\nusing this:\n  n = 0\n\ngoal (1 subgoal):\n 1. f (real_of_int (int n) * r + real_of_int (int (n - 1))) =\n    real_of_int (int n) * f r", "using \\<open>n\\<noteq>0\\<close>"], ["proof (prove)\nusing this:\n  n = 0\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. f (real_of_int (int n) * r + real_of_int (int (n - 1))) =\n    real_of_int (int n) * f r", "by simp"], ["proof (state)\nthis:\n  f (real_of_int (int n) * r + real_of_int (int (n - 1))) =\n  real_of_int (int n) * f r\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       n = Suc nat \\<Longrightarrow>\n       f (real_of_int (int n) * r + real_of_int (int (n - 1))) =\n       real_of_int (int n) * f r", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>nat.\n       n = Suc nat \\<Longrightarrow>\n       f (real_of_int (int n) * r + real_of_int (int (n - 1))) =\n       real_of_int (int n) * f r", "case Suc"], ["proof (state)\nthis:\n  n = Suc nat_\n\ngoal (1 subgoal):\n 1. \\<And>nat.\n       n = Suc nat \\<Longrightarrow>\n       f (real_of_int (int n) * r + real_of_int (int (n - 1))) =\n       real_of_int (int n) * f r", "thus ?thesis"], ["proof (prove)\nusing this:\n  n = Suc nat_\n\ngoal (1 subgoal):\n 1. f (real_of_int (int n) * r + real_of_int (int (n - 1))) =\n    real_of_int (int n) * f r", "using \\<open>n\\<noteq>0\\<close>"], ["proof (prove)\nusing this:\n  n = Suc nat_\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. f (real_of_int (int n) * r + real_of_int (int (n - 1))) =\n    real_of_int (int n) * f r", "using \"1\""], ["proof (prove)\nusing this:\n  n = Suc nat_\n  n \\<noteq> 0\n  f (real_of_int (int (Suc ?n2)) * ?ra2 + real_of_int (int ?n2)) =\n  real_of_int (int (Suc ?n2)) * f ?ra2\n\ngoal (1 subgoal):\n 1. f (real_of_int (int n) * r + real_of_int (int (n - 1))) =\n    real_of_int (int n) * f r", "by auto"], ["proof (state)\nthis:\n  f (real_of_int (int n) * r + real_of_int (int (n - 1))) =\n  real_of_int (int n) * f r\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  f (real_of_int (int n) * r + real_of_int (int (n - 1))) =\n  real_of_int (int n) * f r\n\ngoal (1 subgoal):\n 1. f r = r + 1", "}"], ["proof (state)\nthis:\n  ?n2 \\<noteq> 0 \\<Longrightarrow>\n  f (real_of_int (int ?n2) * ?ra2 + real_of_int (int (?n2 - 1))) =\n  real_of_int (int ?n2) * f ?ra2\n\ngoal (1 subgoal):\n 1. f r = r + 1", "note f_mult = this"], ["proof (state)\nthis:\n  ?n2 \\<noteq> 0 \\<Longrightarrow>\n  f (real_of_int (int ?n2) * ?ra2 + real_of_int (int (?n2 - 1))) =\n  real_of_int (int ?n2) * f ?ra2\n\ngoal (1 subgoal):\n 1. f r = r + 1", "from \\<open>r:\\<rat>\\<close>"], ["proof (chain)\npicking this:\n  r \\<in> \\<rat>", "obtain i::int and n::nat where r: \"r = of_int i/of_int n\" and \"n\\<noteq>0\""], ["proof (prove)\nusing this:\n  r \\<in> \\<rat>\n\ngoal (1 subgoal):\n 1. (\\<And>i n.\n        \\<lbrakk>r = real_of_int i / real_of_int (int n);\n         n \\<noteq> 0\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(fastforce simp:Rats_eq_int_div_nat)"], ["proof (state)\nthis:\n  r = real_of_int i / real_of_int (int n)\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. f r = r + 1", "have \"of_int (n) * f(of_int i / of_int n) = f(of_int i + of_int (n - 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int (int n) * f (real_of_int i / real_of_int (int n)) =\n    f (real_of_int i + real_of_int (int (n - 1)))", "using \\<open>n\\<noteq>0\\<close>"], ["proof (prove)\nusing this:\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. real_of_int (int n) * f (real_of_int i / real_of_int (int n)) =\n    f (real_of_int i + real_of_int (int (n - 1)))", "by (metis (no_types, hide_lams) f_mult mult.commute nonzero_divide_eq_eq of_int_of_nat_eq of_nat_0_eq_iff)"], ["proof (state)\nthis:\n  real_of_int (int n) * f (real_of_int i / real_of_int (int n)) =\n  f (real_of_int i + real_of_int (int (n - 1)))\n\ngoal (1 subgoal):\n 1. f r = r + 1", "also"], ["proof (state)\nthis:\n  real_of_int (int n) * f (real_of_int i / real_of_int (int n)) =\n  f (real_of_int i + real_of_int (int (n - 1)))\n\ngoal (1 subgoal):\n 1. f r = r + 1", "have \"\\<dots> = f(of_int (i + int n - 1))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (real_of_int i + real_of_int (int (n - 1))) =\n    f (real_of_int (i + int n - 1))", "using \\<open>n\\<noteq>0\\<close>[simplified]"], ["proof (prove)\nusing this:\n  0 < n\n\ngoal (1 subgoal):\n 1. f (real_of_int i + real_of_int (int (n - 1))) =\n    f (real_of_int (i + int n - 1))", "by (metis One_nat_def Suc_leI of_nat_1 add_diff_eq of_int_add of_nat_diff)"], ["proof (state)\nthis:\n  f (real_of_int i + real_of_int (int (n - 1))) =\n  f (real_of_int (i + int n - 1))\n\ngoal (1 subgoal):\n 1. f r = r + 1", "also"], ["proof (state)\nthis:\n  f (real_of_int i + real_of_int (int (n - 1))) =\n  f (real_of_int (i + int n - 1))\n\ngoal (1 subgoal):\n 1. f r = r + 1", "have \"\\<dots> = of_int (i + int n - 1) + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. f (real_of_int (i + int n - 1)) = real_of_int (i + int n - 1) + 1", "by(rule f_int)"], ["proof (state)\nthis:\n  f (real_of_int (i + int n - 1)) = real_of_int (i + int n - 1) + 1\n\ngoal (1 subgoal):\n 1. f r = r + 1", "also"], ["proof (state)\nthis:\n  f (real_of_int (i + int n - 1)) = real_of_int (i + int n - 1) + 1\n\ngoal (1 subgoal):\n 1. f r = r + 1", "have \"\\<dots> = of_int i + of_int n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. real_of_int (i + int n - 1) + 1 = real_of_int i + real_of_int (int n)", "by arith"], ["proof (state)\nthis:\n  real_of_int (i + int n - 1) + 1 = real_of_int i + real_of_int (int n)\n\ngoal (1 subgoal):\n 1. f r = r + 1", "finally"], ["proof (chain)\npicking this:\n  real_of_int (int n) * f (real_of_int i / real_of_int (int n)) =\n  real_of_int i + real_of_int (int n)", "show ?thesis"], ["proof (prove)\nusing this:\n  real_of_int (int n) * f (real_of_int i / real_of_int (int n)) =\n  real_of_int i + real_of_int (int n)\n\ngoal (1 subgoal):\n 1. f r = r + 1", "using \\<open>n\\<noteq>0\\<close>"], ["proof (prove)\nusing this:\n  real_of_int (int n) * f (real_of_int i / real_of_int (int n)) =\n  real_of_int i + real_of_int (int n)\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. f r = r + 1", "unfolding r"], ["proof (prove)\nusing this:\n  real_of_int (int n) * f (real_of_int i / real_of_int (int n)) =\n  real_of_int i + real_of_int (int n)\n  n \\<noteq> 0\n\ngoal (1 subgoal):\n 1. f (real_of_int i / real_of_int (int n)) =\n    real_of_int i / real_of_int (int n) + 1", "by (simp add:field_simps)"], ["proof (state)\nthis:\n  f r = r + 1\n\ngoal:\nNo subgoals!", "qed"], ["", "text\\<open>The only total model of a naive recursion equation of factorial on\nintegers is 0 for all negative arguments. Probably folklore.\\<close>"], ["", "theorem ifac_neg0: fixes ifac :: \"int \\<Rightarrow> int\"\nassumes ifac_rec: \"\\<And>i. ifac i = (if i=0 then 1 else i*ifac(i - 1))\"\nshows \"i<0 \\<Longrightarrow> ifac i = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i < 0 \\<Longrightarrow> ifac i = 0", "proof(rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>i < 0; ifac i \\<noteq> 0\\<rbrakk> \\<Longrightarrow> False", "assume 0: \"i<0\" \"ifac i \\<noteq> 0\""], ["proof (state)\nthis:\n  i < 0\n  ifac i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i < 0; ifac i \\<noteq> 0\\<rbrakk> \\<Longrightarrow> False", "{"], ["proof (state)\nthis:\n  i < 0\n  ifac i \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i < 0; ifac i \\<noteq> 0\\<rbrakk> \\<Longrightarrow> False", "fix j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>i < 0; ifac i \\<noteq> 0\\<rbrakk> \\<Longrightarrow> False", "assume \"j \\<le> i\""], ["proof (state)\nthis:\n  j \\<le> i\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i < 0; ifac i \\<noteq> 0\\<rbrakk> \\<Longrightarrow> False", "have \"ifac j \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ifac j \\<noteq> 0", "apply(rule int_le_induct[OF \\<open>j\\<le>i\\<close>])"], ["proof (prove)\ngoal (2 subgoals):\n 1. ifac i \\<noteq> 0\n 2. \\<And>ia.\n       \\<lbrakk>ia \\<le> i; ifac ia \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> ifac (ia - 1) \\<noteq> 0", "apply(rule \\<open>ifac i \\<noteq> 0\\<close>)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>ia.\n       \\<lbrakk>ia \\<le> i; ifac ia \\<noteq> 0\\<rbrakk>\n       \\<Longrightarrow> ifac (ia - 1) \\<noteq> 0", "apply (metis \\<open>i<0\\<close> ifac_rec linorder_not_le mult_eq_0_iff)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  ifac j \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i < 0; ifac i \\<noteq> 0\\<rbrakk> \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  ?j2 \\<le> i \\<Longrightarrow> ifac ?j2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i < 0; ifac i \\<noteq> 0\\<rbrakk> \\<Longrightarrow> False", "note below0 = this"], ["proof (state)\nthis:\n  ?j2 \\<le> i \\<Longrightarrow> ifac ?j2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i < 0; ifac i \\<noteq> 0\\<rbrakk> \\<Longrightarrow> False", "{"], ["proof (state)\nthis:\n  ?j2 \\<le> i \\<Longrightarrow> ifac ?j2 \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i < 0; ifac i \\<noteq> 0\\<rbrakk> \\<Longrightarrow> False", "fix j"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>i < 0; ifac i \\<noteq> 0\\<rbrakk> \\<Longrightarrow> False", "assume \"j<i\""], ["proof (state)\nthis:\n  j < i\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i < 0; ifac i \\<noteq> 0\\<rbrakk> \\<Longrightarrow> False", "have \"1 < -j\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 1 < - j", "using \\<open>j<i\\<close> \\<open>i<0\\<close>"], ["proof (prove)\nusing this:\n  j < i\n  i < 0\n\ngoal (1 subgoal):\n 1. 1 < - j", "by arith"], ["proof (state)\nthis:\n  1 < - j\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i < 0; ifac i \\<noteq> 0\\<rbrakk> \\<Longrightarrow> False", "have \"ifac(j - 1) \\<noteq> 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ifac (j - 1) \\<noteq> 0", "using \\<open>j<i\\<close>"], ["proof (prove)\nusing this:\n  j < i\n\ngoal (1 subgoal):\n 1. ifac (j - 1) \\<noteq> 0", "by(simp add: below0)"], ["proof (state)\nthis:\n  ifac (j - 1) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i < 0; ifac i \\<noteq> 0\\<rbrakk> \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  ifac (j - 1) \\<noteq> 0", "have \"\\<bar>ifac (j - 1)\\<bar> < (-j) * \\<bar>ifac (j - 1)\\<bar>\""], ["proof (prove)\nusing this:\n  ifac (j - 1) \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<bar>ifac (j - 1)\\<bar> < - j * \\<bar>ifac (j - 1)\\<bar>", "using \\<open>j<i\\<close>\n      mult_le_less_imp_less[OF order_refl[of \"abs(ifac(j - 1))\"] \\<open>1 < -j\\<close>]"], ["proof (prove)\nusing this:\n  ifac (j - 1) \\<noteq> 0\n  j < i\n  \\<lbrakk>0 < \\<bar>ifac (j - 1)\\<bar>; 0 \\<le> 1\\<rbrakk>\n  \\<Longrightarrow> \\<bar>ifac (j - 1)\\<bar> * 1\n                    < \\<bar>ifac (j - 1)\\<bar> * - j\n\ngoal (1 subgoal):\n 1. \\<bar>ifac (j - 1)\\<bar> < - j * \\<bar>ifac (j - 1)\\<bar>", "by(simp add:mult.commute)"], ["proof (state)\nthis:\n  \\<bar>ifac (j - 1)\\<bar> < - j * \\<bar>ifac (j - 1)\\<bar>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i < 0; ifac i \\<noteq> 0\\<rbrakk> \\<Longrightarrow> False", "hence \"abs(ifac(j - 1)) < abs(ifac j)\""], ["proof (prove)\nusing this:\n  \\<bar>ifac (j - 1)\\<bar> < - j * \\<bar>ifac (j - 1)\\<bar>\n\ngoal (1 subgoal):\n 1. \\<bar>ifac (j - 1)\\<bar> < \\<bar>ifac j\\<bar>", "using \\<open>1 < -j\\<close>"], ["proof (prove)\nusing this:\n  \\<bar>ifac (j - 1)\\<bar> < - j * \\<bar>ifac (j - 1)\\<bar>\n  1 < - j\n\ngoal (1 subgoal):\n 1. \\<bar>ifac (j - 1)\\<bar> < \\<bar>ifac j\\<bar>", "by(simp add: ifac_rec[of \"j\"] abs_mult)"], ["proof (state)\nthis:\n  \\<bar>ifac (j - 1)\\<bar> < \\<bar>ifac j\\<bar>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i < 0; ifac i \\<noteq> 0\\<rbrakk> \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  ?j2 < i \\<Longrightarrow>\n  \\<bar>ifac (?j2 - 1)\\<bar> < \\<bar>ifac ?j2\\<bar>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i < 0; ifac i \\<noteq> 0\\<rbrakk> \\<Longrightarrow> False", "note not_wf = this"], ["proof (state)\nthis:\n  ?j2 < i \\<Longrightarrow>\n  \\<bar>ifac (?j2 - 1)\\<bar> < \\<bar>ifac ?j2\\<bar>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i < 0; ifac i \\<noteq> 0\\<rbrakk> \\<Longrightarrow> False", "let ?f = \"%j. nat(abs(ifac(i - int(j+1))))\""], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>i < 0; ifac i \\<noteq> 0\\<rbrakk> \\<Longrightarrow> False", "obtain k where \"\\<not> ?f (Suc k) < ?f k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<not> nat \\<bar>ifac (i - int (Suc k + 1))\\<bar>\n               < nat \\<bar>ifac (i - int (k + 1))\\<bar> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using wf_no_infinite_down_chainE[OF wf_less, of \"?f\"]"], ["proof (prove)\nusing this:\n  (\\<And>k.\n      (nat \\<bar>ifac (i - int (Suc k + 1))\\<bar>,\n       nat \\<bar>ifac (i - int (k + 1))\\<bar>)\n      \\<notin> {(x, y). x < y} \\<Longrightarrow>\n      ?thesis) \\<Longrightarrow>\n  ?thesis\n\ngoal (1 subgoal):\n 1. (\\<And>k.\n        \\<not> nat \\<bar>ifac (i - int (Suc k + 1))\\<bar>\n               < nat \\<bar>ifac (i - int (k + 1))\\<bar> \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  \\<not> nat \\<bar>ifac (i - int (Suc k + 1))\\<bar>\n         < nat \\<bar>ifac (i - int (k + 1))\\<bar>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i < 0; ifac i \\<noteq> 0\\<rbrakk> \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  \\<not> nat \\<bar>ifac (i - int (Suc k + 1))\\<bar>\n         < nat \\<bar>ifac (i - int (k + 1))\\<bar>\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i < 0; ifac i \\<noteq> 0\\<rbrakk> \\<Longrightarrow> False", "have \"i - int (k + 1) - 1 = i - int (Suc k + 1)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. i - int (k + 1) - 1 = i - int (Suc k + 1)", "by arith"], ["proof (state)\nthis:\n  i - int (k + 1) - 1 = i - int (Suc k + 1)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>i < 0; ifac i \\<noteq> 0\\<rbrakk> \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  \\<not> nat \\<bar>ifac (i - int (Suc k + 1))\\<bar>\n         < nat \\<bar>ifac (i - int (k + 1))\\<bar>\n  i - int (k + 1) - 1 = i - int (Suc k + 1)", "show False"], ["proof (prove)\nusing this:\n  \\<not> nat \\<bar>ifac (i - int (Suc k + 1))\\<bar>\n         < nat \\<bar>ifac (i - int (k + 1))\\<bar>\n  i - int (k + 1) - 1 = i - int (Suc k + 1)\n\ngoal (1 subgoal):\n 1. False", "using not_wf[of \"i - int(k+1)\"]"], ["proof (prove)\nusing this:\n  \\<not> nat \\<bar>ifac (i - int (Suc k + 1))\\<bar>\n         < nat \\<bar>ifac (i - int (k + 1))\\<bar>\n  i - int (k + 1) - 1 = i - int (Suc k + 1)\n  i - int (k + 1) < i \\<Longrightarrow>\n  \\<bar>ifac (i - int (k + 1) - 1)\\<bar>\n  < \\<bar>ifac (i - int (k + 1))\\<bar>\n\ngoal (1 subgoal):\n 1. False", "by (simp only:) arith"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}