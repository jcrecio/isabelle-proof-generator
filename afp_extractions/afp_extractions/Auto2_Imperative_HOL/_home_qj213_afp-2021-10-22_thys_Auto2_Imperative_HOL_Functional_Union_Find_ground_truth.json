{"file_name": "/home/qj213/afp-2021-10-22/thys/Auto2_Imperative_HOL/Functional/Union_Find.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Auto2_Imperative_HOL", "problem_names": ["lemma ufa_invarD:\n  \"ufa_invar l \\<Longrightarrow> i < length l \\<Longrightarrow> rep_of_dom (l, i) \\<and> l ! i < length l\"", "lemma rep_of_id [rewrite]: \"ufa_invar l \\<Longrightarrow> i < length l \\<Longrightarrow> l ! i = i \\<Longrightarrow> rep_of l i = i\"", "lemma rep_of_iff [rewrite]:\n  \"ufa_invar l \\<Longrightarrow> i < length l \\<Longrightarrow> rep_of l i = (if l ! i = i then i else rep_of l (l ! i))\"", "lemma rep_of_min [rewrite]:\n  \"ufa_invar l \\<Longrightarrow> i < length l \\<Longrightarrow> l ! (rep_of l i) = rep_of l i\"", "lemma rep_of_induct:\n  \"ufa_invar l \\<and> i < length l \\<Longrightarrow>\n   \\<forall>i<length l. l ! i = i \\<longrightarrow> P l i \\<Longrightarrow>\n   \\<forall>i<length l. l ! i \\<noteq> i \\<longrightarrow> P l (l ! i) \\<longrightarrow> P l i \\<Longrightarrow> P l i\"", "lemma rep_of_bound [forward_arg1]:\n  \"ufa_invar l \\<Longrightarrow> i < length l \\<Longrightarrow> rep_of l i < length l\"", "lemma rep_of_idem [rewrite]:\n  \"ufa_invar l \\<Longrightarrow> i < length l \\<Longrightarrow> rep_of l (rep_of l i) = rep_of l i\"", "lemma rep_of_idx [rewrite]: \n  \"ufa_invar l \\<Longrightarrow> i < length l \\<Longrightarrow> rep_of l (l ! i) = rep_of l i\"", "lemma ufa_\\<alpha>_memI [backward, forward_arg]:\n  \"x < length l \\<Longrightarrow> y < length l \\<Longrightarrow> rep_of l x = rep_of l y \\<Longrightarrow> (x, y) \\<in> ufa_\\<alpha> l\"", "lemma ufa_\\<alpha>_memD [forward]:\n  \"(x, y) \\<in> ufa_\\<alpha> l \\<Longrightarrow> x < length l \\<and> y < length l \\<and> rep_of l x = rep_of l y\"", "lemma ufa_\\<alpha>_equiv [forward]: \"part_equiv (ufa_\\<alpha> l)\"", "lemma ufa_\\<alpha>_refl [rewrite]: \"(i, i) \\<in> ufa_\\<alpha> l \\<longleftrightarrow> i < length l\"", "lemma ufa_init_invar [resolve]: \"ufa_invar [0..<n]\"", "lemma ufa_init_correct [rewrite]:\n  \"(x, y) \\<in> uf_init_rel n \\<longleftrightarrow> (x = y \\<and> x < n)\"", "lemma ufa_union_invar [forward_arg]:\n  \"ufa_invar l \\<Longrightarrow> x < length l \\<Longrightarrow> y < length l \\<Longrightarrow> l' = ufa_union l x y \\<Longrightarrow> ufa_invar l'\"", "lemma ufa_union_aux [rewrite]:\n  \"ufa_invar l \\<Longrightarrow> x < length l \\<Longrightarrow> y < length l \\<Longrightarrow> l' = ufa_union l x y \\<Longrightarrow>\n   i < length l' \\<Longrightarrow> rep_of l' i = (if rep_of l i = rep_of l x then rep_of l y else rep_of l i)\"", "theorem ufa_union_correct [rewrite]:\n  \"ufa_invar l \\<Longrightarrow> x < length l \\<Longrightarrow> y < length l \\<Longrightarrow> l' = ufa_union l x y \\<Longrightarrow>\n   ufa_\\<alpha> l' = per_union (ufa_\\<alpha> l) x y\"", "lemma ufa_compress_invar [forward_arg]:\n  \"ufa_invar l \\<Longrightarrow> x < length l \\<Longrightarrow> l' = ufa_compress l x \\<Longrightarrow> ufa_invar l'\"", "lemma ufa_compress_aux [rewrite]:\n  \"ufa_invar l \\<Longrightarrow> x < length l \\<Longrightarrow> l' = ufa_compress l x \\<Longrightarrow> i < length l' \\<Longrightarrow>\n   rep_of l' i = rep_of l i\"", "theorem ufa_compress_correct [rewrite]:\n  \"ufa_invar l \\<Longrightarrow> x < length l \\<Longrightarrow> ufa_\\<alpha> (ufa_compress l x) = ufa_\\<alpha> l\""], "translations": [["", "lemma ufa_invarD:\n  \"ufa_invar l \\<Longrightarrow> i < length l \\<Longrightarrow> rep_of_dom (l, i) \\<and> l ! i < length l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ufa_invar l; i < length l\\<rbrakk>\n    \\<Longrightarrow> rep_of_dom (l, i) \\<and> l ! i < length l", "by auto2"], ["", "setup \\<open>add_forward_prfstep_cond @{thm ufa_invarD} [with_term \"?l ! ?i\"]\\<close>"], ["", "setup \\<open>del_prfstep_thm_eqforward @{thm ufa_invar_def}\\<close>"], ["", "lemma rep_of_id [rewrite]: \"ufa_invar l \\<Longrightarrow> i < length l \\<Longrightarrow> l ! i = i \\<Longrightarrow> rep_of l i = i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ufa_invar l; i < length l; l ! i = i\\<rbrakk>\n    \\<Longrightarrow> rep_of l i = i", "by auto2"], ["", "lemma rep_of_iff [rewrite]:\n  \"ufa_invar l \\<Longrightarrow> i < length l \\<Longrightarrow> rep_of l i = (if l ! i = i then i else rep_of l (l ! i))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ufa_invar l; i < length l\\<rbrakk>\n    \\<Longrightarrow> rep_of l i =\n                      (if l ! i = i then i else rep_of l (l ! i))", "by auto2"], ["", "setup \\<open>del_prfstep_thm @{thm rep_of.psimps}\\<close>"], ["", "lemma rep_of_min [rewrite]:\n  \"ufa_invar l \\<Longrightarrow> i < length l \\<Longrightarrow> l ! (rep_of l i) = rep_of l i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ufa_invar l; i < length l\\<rbrakk>\n    \\<Longrightarrow> l ! rep_of l i = rep_of l i", "@proof"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ufa_invar l; i < length l\\<rbrakk>\n    \\<Longrightarrow> l ! rep_of l i = rep_of l i", "@prop_induct \"rep_of_dom (l, i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ufa_invar l; i < length l\\<rbrakk>\n    \\<Longrightarrow> l ! rep_of l i = rep_of l i", "@qed"], ["", "lemma rep_of_induct:\n  \"ufa_invar l \\<and> i < length l \\<Longrightarrow>\n   \\<forall>i<length l. l ! i = i \\<longrightarrow> P l i \\<Longrightarrow>\n   \\<forall>i<length l. l ! i \\<noteq> i \\<longrightarrow> P l (l ! i) \\<longrightarrow> P l i \\<Longrightarrow> P l i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ufa_invar l \\<and> i < length l;\n     \\<forall>i<length l. l ! i = i \\<longrightarrow> P l i;\n     \\<forall>i<length l.\n        l ! i \\<noteq> i \\<longrightarrow>\n        P l (l ! i) \\<longrightarrow> P l i\\<rbrakk>\n    \\<Longrightarrow> P l i", "@proof"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ufa_invar l \\<and> i < length l;\n     \\<forall>i<length l. l ! i = i \\<longrightarrow> P l i;\n     \\<forall>i<length l.\n        l ! i \\<noteq> i \\<longrightarrow>\n        P l (l ! i) \\<longrightarrow> P l i\\<rbrakk>\n    \\<Longrightarrow> P l i", "@prop_induct \"rep_of_dom (l, i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ufa_invar l \\<and> i < length l;\n     \\<forall>i<length l. l ! i = i \\<longrightarrow> P l i;\n     \\<forall>i<length l.\n        l ! i \\<noteq> i \\<longrightarrow>\n        P l (l ! i) \\<longrightarrow> P l i\\<rbrakk>\n    \\<Longrightarrow> P l i", "@qed"], ["", "setup \\<open>add_prop_induct_rule @{thm rep_of_induct}\\<close>"], ["", "lemma rep_of_bound [forward_arg1]:\n  \"ufa_invar l \\<Longrightarrow> i < length l \\<Longrightarrow> rep_of l i < length l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ufa_invar l; i < length l\\<rbrakk>\n    \\<Longrightarrow> rep_of l i < length l", "@proof"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ufa_invar l; i < length l\\<rbrakk>\n    \\<Longrightarrow> rep_of l i < length l", "@prop_induct \"ufa_invar l \\<and> i < length l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ufa_invar l; i < length l\\<rbrakk>\n    \\<Longrightarrow> rep_of l i < length l", "@qed"], ["", "lemma rep_of_idem [rewrite]:\n  \"ufa_invar l \\<Longrightarrow> i < length l \\<Longrightarrow> rep_of l (rep_of l i) = rep_of l i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ufa_invar l; i < length l\\<rbrakk>\n    \\<Longrightarrow> rep_of l (rep_of l i) = rep_of l i", "by auto2"], ["", "lemma rep_of_idx [rewrite]: \n  \"ufa_invar l \\<Longrightarrow> i < length l \\<Longrightarrow> rep_of l (l ! i) = rep_of l i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ufa_invar l; i < length l\\<rbrakk>\n    \\<Longrightarrow> rep_of l (l ! i) = rep_of l i", "by auto2"], ["", "definition ufa_\\<alpha> :: \"nat list \\<Rightarrow> (nat \\<times> nat) set\" where [rewrite]:\n  \"ufa_\\<alpha> l = {(x, y). x < length l \\<and> y < length l \\<and> rep_of l x = rep_of l y}\""], ["", "lemma ufa_\\<alpha>_memI [backward, forward_arg]:\n  \"x < length l \\<Longrightarrow> y < length l \\<Longrightarrow> rep_of l x = rep_of l y \\<Longrightarrow> (x, y) \\<in> ufa_\\<alpha> l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x < length l; y < length l; rep_of l x = rep_of l y\\<rbrakk>\n    \\<Longrightarrow> (x, y) \\<in> ufa_\\<alpha> l", "by (simp add: ufa_\\<alpha>_def)"], ["", "lemma ufa_\\<alpha>_memD [forward]:\n  \"(x, y) \\<in> ufa_\\<alpha> l \\<Longrightarrow> x < length l \\<and> y < length l \\<and> rep_of l x = rep_of l y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x, y) \\<in> ufa_\\<alpha> l \\<Longrightarrow>\n    x < length l \\<and> y < length l \\<and> rep_of l x = rep_of l y", "by (simp add: ufa_\\<alpha>_def)"], ["", "setup \\<open>del_prfstep_thm @{thm ufa_\\<alpha>_def}\\<close>"], ["", "lemma ufa_\\<alpha>_equiv [forward]: \"part_equiv (ufa_\\<alpha> l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. part_equiv (ufa_\\<alpha> l)", "by auto2"], ["", "lemma ufa_\\<alpha>_refl [rewrite]: \"(i, i) \\<in> ufa_\\<alpha> l \\<longleftrightarrow> i < length l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((i, i) \\<in> ufa_\\<alpha> l) = (i < length l)", "by auto2"], ["", "subsection \\<open>Operations on rep\\_of array\\<close>"], ["", "definition uf_init_rel :: \"nat \\<Rightarrow> (nat \\<times> nat) set\" where [rewrite]:\n  \"uf_init_rel n = ufa_\\<alpha> [0..<n]\""], ["", "lemma ufa_init_invar [resolve]: \"ufa_invar [0..<n]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ufa_invar [0..<n]", "by auto2"], ["", "lemma ufa_init_correct [rewrite]:\n  \"(x, y) \\<in> uf_init_rel n \\<longleftrightarrow> (x = y \\<and> x < n)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((x, y) \\<in> uf_init_rel n) = (x = y \\<and> x < n)", "@proof"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((x, y) \\<in> uf_init_rel n) = (x = y \\<and> x < n)", "@have \"ufa_invar [0..<n]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((x, y) \\<in> uf_init_rel n) = (x = y \\<and> x < n)", "@qed"], ["", "abbreviation ufa_union :: \"nat list \\<Rightarrow> nat \\<Rightarrow> nat \\<Rightarrow> nat list\" where\n  \"ufa_union l x y \\<equiv> l[rep_of l x := rep_of l y]\""], ["", "lemma ufa_union_invar [forward_arg]:\n  \"ufa_invar l \\<Longrightarrow> x < length l \\<Longrightarrow> y < length l \\<Longrightarrow> l' = ufa_union l x y \\<Longrightarrow> ufa_invar l'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ufa_invar l; x < length l; y < length l;\n     l' = ufa_union l x y\\<rbrakk>\n    \\<Longrightarrow> ufa_invar l'", "@proof"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ufa_invar l; x < length l; y < length l;\n     l' = ufa_union l x y\\<rbrakk>\n    \\<Longrightarrow> ufa_invar l'", "@have \"\\<forall>i<length l'. rep_of_dom (l', i) \\<and> l' ! i < length l'\" @with"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ufa_invar l; x < length l; y < length l;\n     l' = ufa_union l x y\\<rbrakk>\n    \\<Longrightarrow> ufa_invar l'", "@prop_induct \"ufa_invar l \\<and> i < length l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ufa_invar l; x < length l; y < length l;\n     l' = ufa_union l x y\\<rbrakk>\n    \\<Longrightarrow> ufa_invar l'", "@end"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ufa_invar l; x < length l; y < length l;\n     l' = ufa_union l x y\\<rbrakk>\n    \\<Longrightarrow> ufa_invar l'", "@qed"], ["", "lemma ufa_union_aux [rewrite]:\n  \"ufa_invar l \\<Longrightarrow> x < length l \\<Longrightarrow> y < length l \\<Longrightarrow> l' = ufa_union l x y \\<Longrightarrow>\n   i < length l' \\<Longrightarrow> rep_of l' i = (if rep_of l i = rep_of l x then rep_of l y else rep_of l i)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ufa_invar l; x < length l; y < length l; l' = ufa_union l x y;\n     i < length l'\\<rbrakk>\n    \\<Longrightarrow> rep_of l' i =\n                      (if rep_of l i = rep_of l x then rep_of l y\n                       else rep_of l i)", "@proof"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ufa_invar l; x < length l; y < length l; l' = ufa_union l x y;\n     i < length l'\\<rbrakk>\n    \\<Longrightarrow> rep_of l' i =\n                      (if rep_of l i = rep_of l x then rep_of l y\n                       else rep_of l i)", "@prop_induct \"ufa_invar l \\<and> i < length l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ufa_invar l; x < length l; y < length l; l' = ufa_union l x y;\n     i < length l'\\<rbrakk>\n    \\<Longrightarrow> rep_of l' i =\n                      (if rep_of l i = rep_of l x then rep_of l y\n                       else rep_of l i)", "@qed"], ["", "text \\<open>Correctness of union operation.\\<close>"], ["", "theorem ufa_union_correct [rewrite]:\n  \"ufa_invar l \\<Longrightarrow> x < length l \\<Longrightarrow> y < length l \\<Longrightarrow> l' = ufa_union l x y \\<Longrightarrow>\n   ufa_\\<alpha> l' = per_union (ufa_\\<alpha> l) x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ufa_invar l; x < length l; y < length l;\n     l' = ufa_union l x y\\<rbrakk>\n    \\<Longrightarrow> ufa_\\<alpha> l' = per_union (ufa_\\<alpha> l) x y", "@proof"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ufa_invar l; x < length l; y < length l;\n     l' = ufa_union l x y\\<rbrakk>\n    \\<Longrightarrow> ufa_\\<alpha> l' = per_union (ufa_\\<alpha> l) x y", "@have \"\\<forall>a b. (a,b) \\<in> ufa_\\<alpha> l' \\<longleftrightarrow> (a,b) \\<in> per_union (ufa_\\<alpha> l) x y\" @with"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ufa_invar l; x < length l; y < length l;\n     l' = ufa_union l x y\\<rbrakk>\n    \\<Longrightarrow> ufa_\\<alpha> l' = per_union (ufa_\\<alpha> l) x y", "@case \"(a,b) \\<in> ufa_\\<alpha> l'\" @with"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ufa_invar l; x < length l; y < length l;\n     l' = ufa_union l x y\\<rbrakk>\n    \\<Longrightarrow> ufa_\\<alpha> l' = per_union (ufa_\\<alpha> l) x y", "@case \"rep_of l a = rep_of l x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ufa_invar l; x < length l; y < length l;\n     l' = ufa_union l x y\\<rbrakk>\n    \\<Longrightarrow> ufa_\\<alpha> l' = per_union (ufa_\\<alpha> l) x y", "@case \"rep_of l a = rep_of l y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ufa_invar l; x < length l; y < length l;\n     l' = ufa_union l x y\\<rbrakk>\n    \\<Longrightarrow> ufa_\\<alpha> l' = per_union (ufa_\\<alpha> l) x y", "@end"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ufa_invar l; x < length l; y < length l;\n     l' = ufa_union l x y\\<rbrakk>\n    \\<Longrightarrow> ufa_\\<alpha> l' = per_union (ufa_\\<alpha> l) x y", "@end"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ufa_invar l; x < length l; y < length l;\n     l' = ufa_union l x y\\<rbrakk>\n    \\<Longrightarrow> ufa_\\<alpha> l' = per_union (ufa_\\<alpha> l) x y", "@qed"], ["", "abbreviation ufa_compress :: \"nat list \\<Rightarrow> nat \\<Rightarrow> nat list\" where\n  \"ufa_compress l x \\<equiv> l[x := rep_of l x]\""], ["", "lemma ufa_compress_invar [forward_arg]:\n  \"ufa_invar l \\<Longrightarrow> x < length l \\<Longrightarrow> l' = ufa_compress l x \\<Longrightarrow> ufa_invar l'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ufa_invar l; x < length l; l' = ufa_compress l x\\<rbrakk>\n    \\<Longrightarrow> ufa_invar l'", "@proof"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ufa_invar l; x < length l; l' = ufa_compress l x\\<rbrakk>\n    \\<Longrightarrow> ufa_invar l'", "@have \"\\<forall>i<length l'. rep_of_dom (l', i) \\<and> l' ! i < length l'\" @with"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ufa_invar l; x < length l; l' = ufa_compress l x\\<rbrakk>\n    \\<Longrightarrow> ufa_invar l'", "@prop_induct \"ufa_invar l \\<and> i < length l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ufa_invar l; x < length l; l' = ufa_compress l x\\<rbrakk>\n    \\<Longrightarrow> ufa_invar l'", "@end"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ufa_invar l; x < length l; l' = ufa_compress l x\\<rbrakk>\n    \\<Longrightarrow> ufa_invar l'", "@qed"], ["", "lemma ufa_compress_aux [rewrite]:\n  \"ufa_invar l \\<Longrightarrow> x < length l \\<Longrightarrow> l' = ufa_compress l x \\<Longrightarrow> i < length l' \\<Longrightarrow>\n   rep_of l' i = rep_of l i\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ufa_invar l; x < length l; l' = ufa_compress l x;\n     i < length l'\\<rbrakk>\n    \\<Longrightarrow> rep_of l' i = rep_of l i", "@proof"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ufa_invar l; x < length l; l' = ufa_compress l x;\n     i < length l'\\<rbrakk>\n    \\<Longrightarrow> rep_of l' i = rep_of l i", "@prop_induct \"ufa_invar l \\<and> i < length l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ufa_invar l; x < length l; l' = ufa_compress l x;\n     i < length l'\\<rbrakk>\n    \\<Longrightarrow> rep_of l' i = rep_of l i", "@qed"], ["", "text \\<open>Correctness of compress operation.\\<close>"], ["", "theorem ufa_compress_correct [rewrite]:\n  \"ufa_invar l \\<Longrightarrow> x < length l \\<Longrightarrow> ufa_\\<alpha> (ufa_compress l x) = ufa_\\<alpha> l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>ufa_invar l; x < length l\\<rbrakk>\n    \\<Longrightarrow> ufa_\\<alpha> (ufa_compress l x) = ufa_\\<alpha> l", "by auto2"], ["", "setup \\<open>del_prfstep_thm @{thm rep_of_iff}\\<close>"], ["", "end"]]}