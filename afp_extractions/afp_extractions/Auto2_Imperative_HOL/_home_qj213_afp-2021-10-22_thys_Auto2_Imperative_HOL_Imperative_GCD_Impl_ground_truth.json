{"file_name": "/home/qj213/afp-2021-10-22/thys/Auto2_Imperative_HOL/Imperative/GCD_Impl.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Auto2_Imperative_HOL", "problem_names": ["lemma gcd_fun_correct:\n  \"gcd_fun a b = gcd a b\"", "theorem gcd_impl_correct:\n  \"<emp> gcd_impl a b <\\<lambda>r. \\<up>(r = gcd a b)>\""], "translations": [["", "lemma gcd_fun_correct:\n  \"gcd_fun a b = gcd a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gcd_fun a b = gcd a b", "@proof"], ["proof (prove)\ngoal (1 subgoal):\n 1. gcd_fun a b = gcd a b", "@fun_induct \"gcd_fun a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gcd_fun a b = gcd a b", "@unfold \"gcd_fun a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. gcd_fun a b = gcd a b", "@qed"], ["", "text \\<open>Imperative version of gcd.\\<close>"], ["", "partial_function (heap) gcd_impl :: \"nat \\<Rightarrow> nat \\<Rightarrow> nat Heap\" where\n  \"gcd_impl a b = (\n    if b = 0 then return a\n    else do {\n      c \\<leftarrow> return (a mod b);\n      r \\<leftarrow> gcd_impl b c;\n      return r\n    })\""], ["", "text \\<open>The program is sufficiently simple that we can prove the Hoare triple\n  directly (without going through the functional program).\\<close>"], ["", "theorem gcd_impl_correct:\n  \"<emp> gcd_impl a b <\\<lambda>r. \\<up>(r = gcd a b)>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. <emp> gcd_impl a b <\\<lambda>r. \\<up> (r = gcd a b)>", "@proof"], ["proof (prove)\ngoal (1 subgoal):\n 1. <emp> gcd_impl a b <\\<lambda>r. \\<up> (r = gcd a b)>", "@fun_induct \"gcd_fun a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. <emp> gcd_impl a b <\\<lambda>r. \\<up> (r = gcd a b)>", "@qed"], ["", "text \\<open>Turn off trace.\\<close>"], ["", "declare [[print_trace = false]]"], ["", "end"]]}