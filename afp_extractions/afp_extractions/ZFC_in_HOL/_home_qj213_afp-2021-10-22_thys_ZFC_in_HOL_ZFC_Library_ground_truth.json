{"file_name": "/home/qj213/afp-2021-10-22/thys/ZFC_in_HOL/ZFC_Library.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/ZFC_in_HOL", "problem_names": ["lemma countable_iff_lepoll: \"countable A \\<longleftrightarrow> A \\<lesssim> (UNIV :: nat set)\"", "lemma infinite_times_eqpoll_self:\n  assumes \"infinite A\" shows \"A \\<times> A \\<approx> A\"", "lemma infinite_finite_times_lepoll_self:\n  assumes \"infinite A\" \"finite B\" shows \"A \\<times> B \\<lesssim> A\"", "lemma lists_n_lepoll_self:\n  assumes \"infinite A\" shows \"{l \\<in> lists A. length l = n} \\<lesssim> A\"", "lemma infinite_eqpoll_lists:\n    assumes \"infinite A\" shows \"lists A \\<approx> A\""], "translations": [["", "lemma countable_iff_lepoll: \"countable A \\<longleftrightarrow> A \\<lesssim> (UNIV :: nat set)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. countable A = (A \\<lesssim> UNIV)", "by (auto simp: countable_def lepoll_def)"], ["", "lemma infinite_times_eqpoll_self:\n  assumes \"infinite A\" shows \"A \\<times> A \\<approx> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<times> A \\<approx> A", "by (simp add: Times_same_infinite_bij_betw assms eqpoll_def)"], ["", "lemma infinite_finite_times_lepoll_self:\n  assumes \"infinite A\" \"finite B\" shows \"A \\<times> B \\<lesssim> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<times> B \\<lesssim> A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. A \\<times> B \\<lesssim> A", "have \"B \\<lesssim> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. B \\<lesssim> A", "by (simp add: assms finite_lepoll_infinite)"], ["proof (state)\nthis:\n  B \\<lesssim> A\n\ngoal (1 subgoal):\n 1. A \\<times> B \\<lesssim> A", "then"], ["proof (chain)\npicking this:\n  B \\<lesssim> A", "have \"A \\<times> B \\<lesssim> A \\<times> A\""], ["proof (prove)\nusing this:\n  B \\<lesssim> A\n\ngoal (1 subgoal):\n 1. A \\<times> B \\<lesssim> A \\<times> A", "by (simp add: subset_imp_lepoll times_lepoll_mono)"], ["proof (state)\nthis:\n  A \\<times> B \\<lesssim> A \\<times> A\n\ngoal (1 subgoal):\n 1. A \\<times> B \\<lesssim> A", "also"], ["proof (state)\nthis:\n  A \\<times> B \\<lesssim> A \\<times> A\n\ngoal (1 subgoal):\n 1. A \\<times> B \\<lesssim> A", "have \"\\<dots> \\<approx> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<times> A \\<approx> A", "by (simp add: \\<open>infinite A\\<close> infinite_times_eqpoll_self)"], ["proof (state)\nthis:\n  A \\<times> A \\<approx> A\n\ngoal (1 subgoal):\n 1. A \\<times> B \\<lesssim> A", "finally"], ["proof (chain)\npicking this:\n  A \\<times> B \\<lesssim> A", "show ?thesis"], ["proof (prove)\nusing this:\n  A \\<times> B \\<lesssim> A\n\ngoal (1 subgoal):\n 1. A \\<times> B \\<lesssim> A", "."], ["proof (state)\nthis:\n  A \\<times> B \\<lesssim> A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma lists_n_lepoll_self:\n  assumes \"infinite A\" shows \"{l \\<in> lists A. length l = n} \\<lesssim> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {l \\<in> lists A. length l = n} \\<lesssim> A", "proof (induction n)"], ["proof (state)\ngoal (2 subgoals):\n 1. {l \\<in> lists A. length l = 0} \\<lesssim> A\n 2. \\<And>n.\n       {l \\<in> lists A. length l = n} \\<lesssim> A \\<Longrightarrow>\n       {l \\<in> lists A. length l = Suc n} \\<lesssim> A", "case 0"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. {l \\<in> lists A. length l = 0} \\<lesssim> A\n 2. \\<And>n.\n       {l \\<in> lists A. length l = n} \\<lesssim> A \\<Longrightarrow>\n       {l \\<in> lists A. length l = Suc n} \\<lesssim> A", "have \"{l \\<in> lists A. length l = 0} = {[]}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {l \\<in> lists A. length l = 0} = {[]}", "by auto"], ["proof (state)\nthis:\n  {l \\<in> lists A. length l = 0} = {[]}\n\ngoal (2 subgoals):\n 1. {l \\<in> lists A. length l = 0} \\<lesssim> A\n 2. \\<And>n.\n       {l \\<in> lists A. length l = n} \\<lesssim> A \\<Longrightarrow>\n       {l \\<in> lists A. length l = Suc n} \\<lesssim> A", "then"], ["proof (chain)\npicking this:\n  {l \\<in> lists A. length l = 0} = {[]}", "show ?case"], ["proof (prove)\nusing this:\n  {l \\<in> lists A. length l = 0} = {[]}\n\ngoal (1 subgoal):\n 1. {l \\<in> lists A. length l = 0} \\<lesssim> A", "by (metis Set.set_insert assms ex_in_conv finite.emptyI singleton_lepoll)"], ["proof (state)\nthis:\n  {l \\<in> lists A. length l = 0} \\<lesssim> A\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       {l \\<in> lists A. length l = n} \\<lesssim> A \\<Longrightarrow>\n       {l \\<in> lists A. length l = Suc n} \\<lesssim> A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>n.\n       {l \\<in> lists A. length l = n} \\<lesssim> A \\<Longrightarrow>\n       {l \\<in> lists A. length l = Suc n} \\<lesssim> A", "case (Suc n)"], ["proof (state)\nthis:\n  {l \\<in> lists A. length l = n} \\<lesssim> A\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       {l \\<in> lists A. length l = n} \\<lesssim> A \\<Longrightarrow>\n       {l \\<in> lists A. length l = Suc n} \\<lesssim> A", "have \"{l \\<in> lists A. length l = Suc n} = (\\<Union>x\\<in>A. \\<Union>l \\<in> {l \\<in> lists A. length l = n}. {x#l})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. {l \\<in> lists A. length l = Suc n} =\n    (\\<Union>x\\<in>A.\n        \\<Union>l\\<in>{l \\<in> lists A. length l = n}. {x # l})", "by (auto simp: length_Suc_conv)"], ["proof (state)\nthis:\n  {l \\<in> lists A. length l = Suc n} =\n  (\\<Union>x\\<in>A. \\<Union>l\\<in>{l \\<in> lists A. length l = n}. {x # l})\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       {l \\<in> lists A. length l = n} \\<lesssim> A \\<Longrightarrow>\n       {l \\<in> lists A. length l = Suc n} \\<lesssim> A", "also"], ["proof (state)\nthis:\n  {l \\<in> lists A. length l = Suc n} =\n  (\\<Union>x\\<in>A. \\<Union>l\\<in>{l \\<in> lists A. length l = n}. {x # l})\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       {l \\<in> lists A. length l = n} \\<lesssim> A \\<Longrightarrow>\n       {l \\<in> lists A. length l = Suc n} \\<lesssim> A", "have \"\\<dots> \\<lesssim> A \\<times> {l \\<in> lists A. length l = n}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<Union>x\\<in>A.\n        \\<Union>l\\<in>{l \\<in> lists A. length l = n}. {x # l}) \\<lesssim>\n    A \\<times> {l \\<in> lists A. length l = n}", "unfolding lepoll_iff"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>g.\n       (\\<Union>x\\<in>A.\n           \\<Union>l\\<in>{l \\<in> lists A. length l = n}. {x # l})\n       \\<subseteq> g ` (A \\<times> {l \\<in> lists A. length l = n})", "by (rule_tac x=\"\\<lambda>(x,l). Cons x l\" in exI) auto"], ["proof (state)\nthis:\n  (\\<Union>x\\<in>A.\n      \\<Union>l\\<in>{l \\<in> lists A. length l = n}. {x # l}) \\<lesssim>\n  A \\<times> {l \\<in> lists A. length l = n}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       {l \\<in> lists A. length l = n} \\<lesssim> A \\<Longrightarrow>\n       {l \\<in> lists A. length l = Suc n} \\<lesssim> A", "also"], ["proof (state)\nthis:\n  (\\<Union>x\\<in>A.\n      \\<Union>l\\<in>{l \\<in> lists A. length l = n}. {x # l}) \\<lesssim>\n  A \\<times> {l \\<in> lists A. length l = n}\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       {l \\<in> lists A. length l = n} \\<lesssim> A \\<Longrightarrow>\n       {l \\<in> lists A. length l = Suc n} \\<lesssim> A", "have \"\\<dots> \\<lesssim> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<times> {l \\<in> lists A. length l = n} \\<lesssim> A", "proof (cases \"finite {l \\<in> lists A. length l = n}\")"], ["proof (state)\ngoal (2 subgoals):\n 1. finite {l \\<in> lists A. length l = n} \\<Longrightarrow>\n    A \\<times> {l \\<in> lists A. length l = n} \\<lesssim> A\n 2. infinite {l \\<in> lists A. length l = n} \\<Longrightarrow>\n    A \\<times> {l \\<in> lists A. length l = n} \\<lesssim> A", "case True"], ["proof (state)\nthis:\n  finite {l \\<in> lists A. length l = n}\n\ngoal (2 subgoals):\n 1. finite {l \\<in> lists A. length l = n} \\<Longrightarrow>\n    A \\<times> {l \\<in> lists A. length l = n} \\<lesssim> A\n 2. infinite {l \\<in> lists A. length l = n} \\<Longrightarrow>\n    A \\<times> {l \\<in> lists A. length l = n} \\<lesssim> A", "then"], ["proof (chain)\npicking this:\n  finite {l \\<in> lists A. length l = n}", "show ?thesis"], ["proof (prove)\nusing this:\n  finite {l \\<in> lists A. length l = n}\n\ngoal (1 subgoal):\n 1. A \\<times> {l \\<in> lists A. length l = n} \\<lesssim> A", "using assms infinite_finite_times_lepoll_self"], ["proof (prove)\nusing this:\n  finite {l \\<in> lists A. length l = n}\n  infinite A\n  \\<lbrakk>infinite ?A; finite ?B\\<rbrakk>\n  \\<Longrightarrow> ?A \\<times> ?B \\<lesssim> ?A\n\ngoal (1 subgoal):\n 1. A \\<times> {l \\<in> lists A. length l = n} \\<lesssim> A", "by blast"], ["proof (state)\nthis:\n  A \\<times> {l \\<in> lists A. length l = n} \\<lesssim> A\n\ngoal (1 subgoal):\n 1. infinite {l \\<in> lists A. length l = n} \\<Longrightarrow>\n    A \\<times> {l \\<in> lists A. length l = n} \\<lesssim> A", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. infinite {l \\<in> lists A. length l = n} \\<Longrightarrow>\n    A \\<times> {l \\<in> lists A. length l = n} \\<lesssim> A", "case False"], ["proof (state)\nthis:\n  infinite {l \\<in> lists A. length l = n}\n\ngoal (1 subgoal):\n 1. infinite {l \\<in> lists A. length l = n} \\<Longrightarrow>\n    A \\<times> {l \\<in> lists A. length l = n} \\<lesssim> A", "have \"A \\<times> {l \\<in> lists A. length l = n} \\<lesssim> A \\<times> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<times> {l \\<in> lists A. length l = n} \\<lesssim> A \\<times> A", "by (simp add: Suc.IH subset_imp_lepoll times_lepoll_mono)"], ["proof (state)\nthis:\n  A \\<times> {l \\<in> lists A. length l = n} \\<lesssim> A \\<times> A\n\ngoal (1 subgoal):\n 1. infinite {l \\<in> lists A. length l = n} \\<Longrightarrow>\n    A \\<times> {l \\<in> lists A. length l = n} \\<lesssim> A", "also"], ["proof (state)\nthis:\n  A \\<times> {l \\<in> lists A. length l = n} \\<lesssim> A \\<times> A\n\ngoal (1 subgoal):\n 1. infinite {l \\<in> lists A. length l = n} \\<Longrightarrow>\n    A \\<times> {l \\<in> lists A. length l = n} \\<lesssim> A", "have \"\\<dots> \\<approx> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<times> A \\<approx> A", "by (simp add: assms infinite_times_eqpoll_self)"], ["proof (state)\nthis:\n  A \\<times> A \\<approx> A\n\ngoal (1 subgoal):\n 1. infinite {l \\<in> lists A. length l = n} \\<Longrightarrow>\n    A \\<times> {l \\<in> lists A. length l = n} \\<lesssim> A", "finally"], ["proof (chain)\npicking this:\n  A \\<times> {l \\<in> lists A. length l = n} \\<lesssim> A", "show ?thesis"], ["proof (prove)\nusing this:\n  A \\<times> {l \\<in> lists A. length l = n} \\<lesssim> A\n\ngoal (1 subgoal):\n 1. A \\<times> {l \\<in> lists A. length l = n} \\<lesssim> A", "."], ["proof (state)\nthis:\n  A \\<times> {l \\<in> lists A. length l = n} \\<lesssim> A\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  A \\<times> {l \\<in> lists A. length l = n} \\<lesssim> A\n\ngoal (1 subgoal):\n 1. \\<And>n.\n       {l \\<in> lists A. length l = n} \\<lesssim> A \\<Longrightarrow>\n       {l \\<in> lists A. length l = Suc n} \\<lesssim> A", "finally"], ["proof (chain)\npicking this:\n  {l \\<in> lists A. length l = Suc n} \\<lesssim> A", "show ?case"], ["proof (prove)\nusing this:\n  {l \\<in> lists A. length l = Suc n} \\<lesssim> A\n\ngoal (1 subgoal):\n 1. {l \\<in> lists A. length l = Suc n} \\<lesssim> A", "."], ["proof (state)\nthis:\n  {l \\<in> lists A. length l = Suc n} \\<lesssim> A\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma infinite_eqpoll_lists:\n    assumes \"infinite A\" shows \"lists A \\<approx> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lists A \\<approx> A", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. lists A \\<approx> A", "have \"lists A \\<lesssim> Sigma UNIV (\\<lambda>n. {l \\<in> lists A. length l = n})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lists A \\<lesssim> (SIGMA n:UNIV. {l \\<in> lists A. length l = n})", "unfolding lepoll_iff"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>g.\n       lists A\n       \\<subseteq> g ` (SIGMA n:UNIV. {l \\<in> lists A. length l = n})", "by (rule_tac x=snd in exI) (auto simp: in_listsI snd_image_Sigma)"], ["proof (state)\nthis:\n  lists A \\<lesssim> (SIGMA n:UNIV. {l \\<in> lists A. length l = n})\n\ngoal (1 subgoal):\n 1. lists A \\<approx> A", "also"], ["proof (state)\nthis:\n  lists A \\<lesssim> (SIGMA n:UNIV. {l \\<in> lists A. length l = n})\n\ngoal (1 subgoal):\n 1. lists A \\<approx> A", "have \"\\<dots> \\<lesssim> (UNIV::nat set) \\<times> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (SIGMA n:UNIV. {l \\<in> lists A. length l = n}) \\<lesssim>\n    UNIV \\<times> A", "by (rule Sigma_lepoll_mono) (auto simp: lists_n_lepoll_self assms)"], ["proof (state)\nthis:\n  (SIGMA n:UNIV. {l \\<in> lists A. length l = n}) \\<lesssim> UNIV \\<times> A\n\ngoal (1 subgoal):\n 1. lists A \\<approx> A", "also"], ["proof (state)\nthis:\n  (SIGMA n:UNIV. {l \\<in> lists A. length l = n}) \\<lesssim> UNIV \\<times> A\n\ngoal (1 subgoal):\n 1. lists A \\<approx> A", "have \"\\<dots> \\<lesssim> A \\<times> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. UNIV \\<times> A \\<lesssim> A \\<times> A", "by (metis assms infinite_le_lepoll order_refl subset_imp_lepoll times_lepoll_mono)"], ["proof (state)\nthis:\n  UNIV \\<times> A \\<lesssim> A \\<times> A\n\ngoal (1 subgoal):\n 1. lists A \\<approx> A", "also"], ["proof (state)\nthis:\n  UNIV \\<times> A \\<lesssim> A \\<times> A\n\ngoal (1 subgoal):\n 1. lists A \\<approx> A", "have \"\\<dots> \\<approx> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<times> A \\<approx> A", "by (simp add: assms infinite_times_eqpoll_self)"], ["proof (state)\nthis:\n  A \\<times> A \\<approx> A\n\ngoal (1 subgoal):\n 1. lists A \\<approx> A", "finally"], ["proof (chain)\npicking this:\n  lists A \\<lesssim> A", "show ?thesis"], ["proof (prove)\nusing this:\n  lists A \\<lesssim> A\n\ngoal (1 subgoal):\n 1. lists A \\<approx> A", "by (simp add: lepoll_antisym lepoll_lists)"], ["proof (state)\nthis:\n  lists A \\<approx> A\n\ngoal:\nNo subgoals!", "qed"], ["", "end"]]}