{"file_name": "/home/qj213/afp-2021-10-22/thys/Lam-ml-Normalization/Lam_ml.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Lam-ml-Normalization", "problem_names": ["lemmas name_swap_bij = pt_swap_bij''[OF pt_name_inst at_name_inst]", "lemmas ex_fresh = exists_fresh'[OF fin_supp]", "lemma alpha'' :\n  fixes x y :: name and t::trm\n  assumes a: \"x \\<sharp> t\"\n  shows \"[y].t = [x].([(y,x)] \\<bullet> t)\"", "lemma fresh_ty: \n  fixes x :: name and \\<tau>::ty\n  shows \"x \\<sharp> \\<tau>\"", "lemma fresh_context: \n  fixes  \\<Gamma> :: \"(name\\<times>ty)list\"\n  assumes a: \"x \\<sharp> \\<Gamma>\"\n  shows \"\\<not>(\\<exists> \\<tau> . (x,\\<tau>)\\<in>set \\<Gamma>)\"", "lemma lookup_eqvt[eqvt]:\n  fixes pi::\"name prm\"\n  and   \\<theta>::\"(name\\<times>trm) list\"\n  and   x::\"name\"\n  shows \"pi \\<bullet> (lookup \\<theta> x) = lookup (pi \\<bullet> \\<theta>) (pi \\<bullet> x)\"", "lemma psubst_eqvt[eqvt]:\n  fixes pi::\"name prm\"\n  shows \"pi \\<bullet> (\\<theta><t>) = (pi \\<bullet> \\<theta>)<(pi \\<bullet> t)>\"", "lemma subst[simp]:\nshows \"(Var x)[y::=v] = (if x = y then v else Var x)\"\n  and \"(App s t)[y::=v] = App (s[y::=v]) (t[y::=v])\"\n  and \"x \\<sharp> (y,v) \\<Longrightarrow> (\\<Lambda> x . t)[y::=v] = \\<Lambda> x .t[y::=v]\"\n  and \"x \\<sharp> (s,y,v) \\<Longrightarrow> (s to x in t)[y::=v] = s[y::=v] to x in t[y::=v]\"\n  and \"([s])[y::=v] = [s[y::=v]]\"", "lemma subst_rename: \n  assumes a: \"y \\<sharp> t\"\n  shows \"([(y,x)]\\<bullet>t)[y::=v] = t[x::=v]\"", "lemmas subst_rename' = subst_rename[THEN sym]", "lemma forget: \"x \\<sharp> t \\<Longrightarrow> t[x::=v] = t\"", "lemma fresh_fact: \n  fixes x::\"name\"\n  assumes x: \"x \\<sharp> v\"   \"x \\<sharp> t\"\n  shows \"x \\<sharp> t[y::=v]\"", "lemma fresh_fact': \n  fixes x::\"name\"\n  assumes x: \"x \\<sharp> v\"\n  shows \"x \\<sharp> t[x::=v]\"", "lemma subst_lemma:  \n  assumes a: \"x\\<noteq>y\"\n  and     b: \"x \\<sharp> u\"\n  shows \"s[x::=v][y::=u] = s[y::=u][x::=v[y::=u]]\"", "lemma id_subs: \n  shows \"t[x::=Var x] = t\"", "lemma lookup_fresh:\n  fixes z::\"name\"\n  assumes \"z\\<sharp>\\<theta>\"   \"z\\<sharp>x\"\n  shows \"z\\<sharp> lookup \\<theta> x\"", "lemma lookup_fresh':\n  assumes a: \"z\\<sharp>\\<theta>\"\n  shows \"lookup \\<theta> z = Var z\"", "lemma psubst_fresh_fact:\n  fixes x :: name\n  assumes a: \"x \\<sharp> t\" and b: \"x \\<sharp> \\<theta>\" \n  shows \"x \\<sharp> \\<theta><t>\"", "lemma psubst_subst:\n  assumes a: \"x \\<sharp> \\<theta>\"\n  shows \"\\<theta><t>[x::=s] = ((x,s)#\\<theta>)<t>\"", "lemma r3'[intro!]: \"App (\\<Lambda> x . t) s \\<mapsto> t[x::=s]\"", "lemma r6'[intro]:\n  fixes s :: trm \n  assumes r: \"s \\<mapsto> s'\"\n  shows \"s to x in t \\<mapsto> s' to x in t\"", "lemma r7'[intro]: \n  fixes t :: trm\n  assumes \"t \\<mapsto> t'\"\n  shows \"s to x in t \\<mapsto> s to x in t'\"", "lemma r8'[intro!]: \"[s] to x in t \\<mapsto> t[x::=s]\"", "lemma r9'[intro!]: \"s to x in [Var x] \\<mapsto> s\"", "lemma r10'[intro!]: \n  assumes xf: \"x \\<sharp> y\"   \"x \\<sharp> u\"\n  shows \"(s to x in t) to y in u \\<mapsto> s to x in (t to y in u)\"", "theorem adequacy: \"s \\<mapsto> t = s \\<leadsto> t\"", "lemma reduction_fresh: \n  fixes x::\"name\"\n  assumes r: \"t \\<mapsto> t'\"\n  shows \"x \\<sharp> t \\<Longrightarrow> x \\<sharp> t'\"", "lemma reduction_subst:\n  assumes a: \" t \\<mapsto> t' \"\n  shows \"t[x::=v] \\<mapsto> t'[x::=v]\"", "lemma SN_preserved[intro]: \n  assumes a: \"SN t\"   \"t \\<mapsto> t'\"\n  shows \"SN t'\"", "lemma normal_var: \"NORMAL (Var x)\"", "lemma normal_implies_sn : \"NORMAL s \\<Longrightarrow> SN s\"", "lemma stack_exhaust :\n  fixes c :: \"'a::fs_name\"\n  shows \"k = Id \\<or> (\\<exists> y n l  . y \\<sharp> l \\<and> y \\<sharp> c \\<and> k = [y]n\\<ggreater>l)\"", "lemma dismantle_eqvt[eqvt]:\n  fixes pi :: \"(name \\<times> name) list\"\n  shows \"pi \\<bullet> (t \\<star> K) =  (pi \\<bullet> t) \\<star> (pi \\<bullet> K)\"", "lemma dismantle_fresh[iff]:\n  fixes  x :: name\n  shows \"(x \\<sharp> (t \\<star> k)) = (x \\<sharp> t \\<and> x \\<sharp> k)\"", "lemma dismantle_simp[simp]: \"s \\<star> [y]n\\<ggreater>L = (s to y in n) \\<star> L\"", "lemma stack_reduction_fresh:\n  fixes k :: stack  and x :: name\n  assumes r : \"k \\<mapsto> k'\" and f :\"x \\<sharp> k\"\n  shows \"x \\<sharp> k'\"", "lemma dismantle_red[intro]:\n  fixes m :: trm\n  assumes r: \" m \\<mapsto> m'\"\n  shows \"m \\<star> k \\<mapsto> m' \\<star> k\"", "lemma ssubst_fresh:\n  fixes y :: name\n  assumes \" y \\<sharp> (x,v,k) \"\n  shows  \"y \\<sharp> ssubst x v k\"", "lemma ssubst_forget: \n  fixes x :: name\n  assumes \"x \\<sharp> k\"\n  shows \"ssubst x v k = k\"", "lemma subst_dismantle[simp]: \"(t \\<star> k)[x ::= v] = (t[x::=v]) \\<star> ssubst x v k\"", "lemma ty_exhaust: \"ty = TBase \\<or> (\\<exists> \\<sigma> \\<tau> . ty = \\<sigma> \\<rightarrow> \\<tau>) \\<or> (\\<exists> \\<sigma> . ty = T \\<sigma>)\"", "lemma CR3_implies_CR4[intro]: \"CR3 \\<tau> \\<Longrightarrow> CR4 \\<tau>\"", "lemma%invisible sub_induction: \n  assumes a: \"SN(u)\"\n  and     b: \"u\\<in>RED \\<tau>\"\n  and     c1: \"NEUT t\"\n  and     c2: \"CR2 \\<tau>\"\n  and     c3: \"CR3 \\<sigma>\"\n  and     c4: \"CR3_RED t (\\<tau>\\<rightarrow>\\<sigma>)\"\n  shows \"(App t u)\\<in>RED \\<sigma>\"", "lemma SN_of_FST_of_App: \n  assumes a: \"SN (App t s)\"\n  shows \"SN t\"", "lemma SN_SSN:\n  assumes a: \"SN (t \\<star> k)\"\n  shows \" SSN k\"", "lemma dismantle_cases:\n  fixes t :: trm\n  assumes r: \"t \\<star> k \\<mapsto> r\"\n  and T: \"\\<And> t' . \\<lbrakk> t \\<mapsto> t' ; r = t' \\<star> k \\<rbrakk> \\<Longrightarrow> P\"\n  and K: \"\\<And> k' . \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k' \\<rbrakk> \\<Longrightarrow> P\" \n  and B: \"\\<And> s y n l .\\<lbrakk> t = [s] ; k = [y]n\\<ggreater>l ; r = (n[y::=s]) \\<star> l \\<rbrakk> \\<Longrightarrow> P\"\n  and A: \"\\<And> u x v y n l.\\<lbrakk> x \\<sharp> y; x \\<sharp> n ; t = u to x in v ; \n             k = [y]n\\<ggreater>l ; r = (u to x in (v to y in n)) \\<star> l \\<rbrakk> \\<Longrightarrow> P \"\n  shows \"P\"", "lemma dismantle_cases'[consumes 2, case_names T K]:\n  fixes m :: trm\n  assumes r: \"t \\<star> k \\<mapsto> r\"\n  and \"NEUT t\"\n  and \"\\<And> t' . \\<lbrakk> t \\<mapsto> t' ; r = t' \\<star> k \\<rbrakk> \\<Longrightarrow> P\"\n  and \"\\<And> k' . \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k' \\<rbrakk> \\<Longrightarrow> P\" \n  shows \"P\"", "lemma red_Ret:\n  fixes t :: trm\n  assumes \"[s] \\<mapsto> t\"\n  shows \" \\<exists> s' . t = [s'] \\<and> s  \\<mapsto> s'\"", "lemma SN_Ret: \"SN u \\<Longrightarrow> SN [u]\"", "lemma RED_props: \n  shows \"CR1 \\<tau>\" and \"CR2 \\<tau>\" and \"CR3 \\<tau>\"", "lemma%invisible double_SN_aux:\n  assumes a: \"SN a\"\n  and b: \"SN b\"\n  and hyp: \"\\<And>x z.\n    \\<lbrakk>\\<And>y. x \\<mapsto> y \\<Longrightarrow> SN y; \\<And>y. x \\<mapsto> y \\<Longrightarrow> P y z;\n     \\<And>u. z \\<mapsto> u \\<Longrightarrow> SN u; \\<And>u. z \\<mapsto> u \\<Longrightarrow> P x u\\<rbrakk> \\<Longrightarrow> P x z\"\n  shows \"P a b\"", "lemma double_SN[consumes 2]:\n  assumes a: \"SN a\"\n  and     b: \"SN b\" \n  and     c: \"\\<And>(x::trm) (z::trm). \n             \\<lbrakk>\\<And>y. x \\<mapsto> y \\<Longrightarrow> P y z; \\<And>u. z \\<mapsto> u \\<Longrightarrow> P x u\\<rbrakk> \\<Longrightarrow> P x z\"\n  shows \"P a b\"", "lemma red_Lam:\n  assumes a: \"\\<Lambda> x . t \\<mapsto> r\" \n  shows \" (\\<exists>t'. r = \\<Lambda> x . t' \\<and> t \\<mapsto> t') \\<or> (t = App r (Var x) \\<and> x \\<sharp> r ) \"", "lemma abs_RED: \n  assumes asm: \"\\<forall>s\\<in>RED \\<tau>. t[x::=s]\\<in>RED \\<sigma>\"\n  shows \"\\<Lambda> x . t \\<in>RED (\\<tau>\\<rightarrow>\\<sigma>)\"", "lemma triple_induct[consumes 2]: \n  assumes a: \"SN (p)\"\n  and b: \"SN (q)\"\n  and hyp: \"\\<And> (p::trm) (q::trm) (k::stack) . \n  \\<lbrakk> \\<And> p' . p \\<mapsto> p' \\<Longrightarrow> P p' q k ; \n    \\<And> q' k . q \\<mapsto> q' \\<Longrightarrow> P p q' k; \n    \\<And> k' .  |k'| < |k| \\<Longrightarrow> P p q k' \\<rbrakk> \\<Longrightarrow> P p q k \"\n  shows \"P p q k\"", "lemma dismantle_strong_cases:\n  fixes t :: trm\n  assumes r: \"t \\<star> k \\<mapsto> r\"\n  and f: \"y \\<sharp> (t,k,r)\"   \"x \\<sharp> (z,t,k,r)\"   \"z \\<sharp> (t,k,r)\"\n  and T: \"\\<And> t' . \\<lbrakk> t \\<mapsto> t' ; r = t' \\<star> k \\<rbrakk> \\<Longrightarrow> P\"\n  and K: \"\\<And> k' . \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k' \\<rbrakk> \\<Longrightarrow> P\" \n  and B: \"\\<And> s n l . \\<lbrakk> t = [s] ; \n                       k = [y]n\\<ggreater>l ; r = (n[y::=s]) \\<star> l \\<rbrakk> \\<Longrightarrow> P \"\n  and A: \"\\<And> u v n l . \n           \\<lbrakk> x \\<sharp> (z,n); t = u to x in v ; k = [z]n\\<ggreater>l ; \n             r = (u to x in (v to z in n)) \\<star> l \\<rbrakk> \\<Longrightarrow> P \"\n  shows \"P\"", "lemma sn_forget:\n  assumes a: \"SN(t[x::=v])\"\n  shows \"SN t\"", "lemma sn_forget': \n  assumes sn: \"SN (t[x::=p] \\<star> k)\" \n  and x: \"x \\<sharp> k\"\n  shows \"SN (t \\<star> k)\"", "lemma red_trans:\n  shows r1_trans: \" s \\<mapsto>\\<^sup>* s' \\<Longrightarrow> App s t \\<mapsto>\\<^sup>* App s' t\"\n  and r2_trans: \" t \\<mapsto>\\<^sup>* t' \\<Longrightarrow> App s t \\<mapsto>\\<^sup>* App s t'\"\n  and r4_trans: \"t \\<mapsto>\\<^sup>* t' \\<Longrightarrow> \\<Lambda> x . t \\<mapsto>\\<^sup>* \\<Lambda> x . t' \"\n  and r6_trans: \" s \\<mapsto>\\<^sup>* s'  \\<Longrightarrow> s to x in t \\<mapsto>\\<^sup>* s' to x in t\"\n  and r7_trans: \"\\<lbrakk> t \\<mapsto>\\<^sup>* t'  \\<rbrakk> \\<Longrightarrow> s to x in t \\<mapsto>\\<^sup>* s  to x in t'\"\n  and r11_trans: \"s \\<mapsto>\\<^sup>* s' \\<Longrightarrow> [s] \\<mapsto>\\<^sup>* ([s'])\"", "lemma red_subst: \"p \\<mapsto> p' \\<Longrightarrow> (m[x::=p]) \\<mapsto>\\<^sup>* (m[x::=p'])\"", "lemma SN_trans : \"\\<lbrakk>  p \\<mapsto>\\<^sup>* p' ; SN p \\<rbrakk> \\<Longrightarrow> SN p' \"", "lemma to_RED_aux: \n  assumes p: \"SN p\"\n  and x: \"x \\<sharp> p\"   \"x \\<sharp> k\"\n  and npk: \" SN (n[x::=p] \\<star> k)\"\n  shows \"SN (([p] to x in n) \\<star> k)\"", "lemma to_RED:\n  assumes s: \"s \\<in> RED (T \\<sigma>)\"\n  and t : \" \\<forall> p \\<in> RED \\<sigma> . t[x::=p] \\<in> RED (T \\<tau>)\"\n  shows \"s to x in t \\<in> RED (T \\<tau>)\"", "theorem fundamental_theorem: \n  assumes a: \"\\<Gamma> \\<turnstile> t : \\<tau>\"   and   b: \"\\<theta> closes \\<Gamma>\"\n  shows \"\\<theta><t> \\<in> RED \\<tau>\"", "lemma id_maps: \n  shows \"(id \\<Gamma>) maps a to (Var a)\"", "lemma id_fresh:\n  fixes x::\"name\"\n  assumes x: \"x \\<sharp> \\<Gamma>\"\n  shows \"x \\<sharp> (id \\<Gamma>)\"", "lemma id_apply: \n  shows \"(id \\<Gamma>)<t> = t\"", "lemma id_closes:\n  shows \"(id \\<Gamma>) closes \\<Gamma>\"", "lemma typing_implies_RED:  \n  assumes a: \"\\<Gamma> \\<turnstile> t : \\<tau>\"\n  shows \"t \\<in> RED \\<tau>\"", "theorem strong_normalization: \n  assumes a: \"\\<Gamma> \\<turnstile> t : \\<tau>\"\n  shows \"SN(t)\""], "translations": [["", "lemmas name_swap_bij = pt_swap_bij''[OF pt_name_inst at_name_inst]"], ["", "lemmas ex_fresh = exists_fresh'[OF fin_supp]"], ["", "lemma alpha'' :\n  fixes x y :: name and t::trm\n  assumes a: \"x \\<sharp> t\"\n  shows \"[y].t = [x].([(y,x)] \\<bullet> t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [y].t = [x].([(y, x)] \\<bullet> t)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. [y].t = [x].([(y, x)] \\<bullet> t)", "from a"], ["proof (chain)\npicking this:\n  x \\<sharp> t", "have aux: \"y \\<sharp> [(y, x)] \\<bullet> t\""], ["proof (prove)\nusing this:\n  x \\<sharp> t\n\ngoal (1 subgoal):\n 1. y \\<sharp> [(y, x)] \\<bullet> t", "by (subst fresh_bij[THEN sym, of _ _ \"[(x,y)]\"]) \n        (auto simp add: perm_swap calc_atm)"], ["proof (state)\nthis:\n  y \\<sharp> [(y, x)] \\<bullet> t\n\ngoal (1 subgoal):\n 1. [y].t = [x].([(y, x)] \\<bullet> t)", "thus ?thesis"], ["proof (prove)\nusing this:\n  y \\<sharp> [(y, x)] \\<bullet> t\n\ngoal (1 subgoal):\n 1. [y].t = [x].([(y, x)] \\<bullet> t)", "by(auto simp add: alpha perm_swap name_swap_bij fresh_bij)"], ["proof (state)\nthis:\n  [y].t = [x].([(y, x)] \\<bullet> t)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Even though our types do not involve binders, we still need to formalize\nthem as nominal datatypes to obtain a permutation action. This is required to\nestablish equivariance of the typing relation.\\<close>"], ["", "nominal_datatype ty =\n    TBase\n  | TFun \"ty\" \"ty\" (infix \"\\<rightarrow>\" 200)\n  | T \"ty\""], ["", "text\\<open>Since we cannot use typed variables, we have to formalize typing\ncontexts. Typing contexts are formalized as lists. A context is \\textit{valid}\nif no name occurs twice.\\<close>"], ["", "inductive \n  valid :: \"(name\\<times>ty) list \\<Rightarrow> bool\"\nwhere\n  v1[intro]: \"valid []\"\n| v2[intro]: \"\\<lbrakk>valid \\<Gamma>;x\\<sharp>\\<Gamma>\\<rbrakk>\\<Longrightarrow> valid ((x,\\<sigma>)#\\<Gamma>)\""], ["", "equivariance valid"], ["", "lemma fresh_ty: \n  fixes x :: name and \\<tau>::ty\n  shows \"x \\<sharp> \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> \\<tau>", "by (induct \\<tau> rule: ty.induct) (auto)"], ["", "lemma fresh_context: \n  fixes  \\<Gamma> :: \"(name\\<times>ty)list\"\n  assumes a: \"x \\<sharp> \\<Gamma>\"\n  shows \"\\<not>(\\<exists> \\<tau> . (x,\\<tau>)\\<in>set \\<Gamma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nexists>\\<tau>. (x, \\<tau>) \\<in> set \\<Gamma>", "using a"], ["proof (prove)\nusing this:\n  x \\<sharp> \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<nexists>\\<tau>. (x, \\<tau>) \\<in> set \\<Gamma>", "by (induct \\<Gamma>) (auto simp add: fresh_prod fresh_list_cons fresh_atm)"], ["", "inductive \n  typing :: \"(name\\<times>ty) list\\<Rightarrow>trm\\<Rightarrow>ty\\<Rightarrow>bool\" (\"_ \\<turnstile> _ : _\" [60,60,60] 60)\nwhere\n  t1[intro]: \"\\<lbrakk>valid \\<Gamma>; (x,\\<tau>)\\<in>set \\<Gamma>\\<rbrakk> \\<Longrightarrow> \\<Gamma> \\<turnstile> Var x : \\<tau>\"\n| t2[intro]: \"\\<lbrakk>\\<Gamma> \\<turnstile> s : \\<tau>\\<rightarrow>\\<sigma>; \\<Gamma> \\<turnstile> t : \\<tau>\\<rbrakk> \\<Longrightarrow> \\<Gamma> \\<turnstile> App s t : \\<sigma>\"\n| t3[intro]: \"\\<lbrakk>x \\<sharp> \\<Gamma>; ((x,\\<tau>)#\\<Gamma>) \\<turnstile> t : \\<sigma>\\<rbrakk> \\<Longrightarrow> \\<Gamma> \\<turnstile> \\<Lambda> x . t : \\<tau>\\<rightarrow>\\<sigma>\" \n| t4[intro]: \"\\<lbrakk> \\<Gamma> \\<turnstile> s : \\<sigma> \\<rbrakk> \\<Longrightarrow> \\<Gamma> \\<turnstile> [s] : T \\<sigma>\" \n| t5[intro]: \"\\<lbrakk>x \\<sharp> (\\<Gamma>,s); \\<Gamma> \\<turnstile> s : T \\<sigma> ; ((x,\\<sigma>)#\\<Gamma>) \\<turnstile> t : T \\<tau> \\<rbrakk> \n                \\<Longrightarrow> \\<Gamma> \\<turnstile> s to x in t : T \\<tau>\""], ["", "equivariance typing"], ["", "nominal_inductive typing"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((\\<And>x \\<Gamma> \\<tau> t \\<sigma>.\n         \\<lbrakk>x \\<sharp> \\<Gamma>;\n          (x, \\<tau>) # \\<Gamma> \\<turnstile> t : \\<sigma>\\<rbrakk>\n         \\<Longrightarrow> x \\<sharp> \\<Gamma>) &&&\n     (\\<And>x \\<Gamma> \\<tau> t \\<sigma>.\n         \\<lbrakk>x \\<sharp> \\<Gamma>;\n          (x, \\<tau>) # \\<Gamma> \\<turnstile> t : \\<sigma>\\<rbrakk>\n         \\<Longrightarrow> x \\<sharp> \\<Lambda> x . t) &&&\n     (\\<And>x \\<Gamma> \\<tau> t \\<sigma>.\n         \\<lbrakk>x \\<sharp> \\<Gamma>;\n          (x, \\<tau>) # \\<Gamma> \\<turnstile> t : \\<sigma>\\<rbrakk>\n         \\<Longrightarrow> x \\<sharp> \\<tau> \\<rightarrow> \\<sigma>)) &&&\n    (\\<And>x \\<Gamma> s \\<sigma> t \\<tau>.\n        \\<lbrakk>x \\<sharp> (\\<Gamma>, s);\n         \\<Gamma> \\<turnstile> s : T \\<sigma>;\n         (x, \\<sigma>) # \\<Gamma> \\<turnstile> t : T \\<tau>\\<rbrakk>\n        \\<Longrightarrow> x \\<sharp> \\<Gamma>) &&&\n    (\\<And>x \\<Gamma> s \\<sigma> t \\<tau>.\n        \\<lbrakk>x \\<sharp> (\\<Gamma>, s);\n         \\<Gamma> \\<turnstile> s : T \\<sigma>;\n         (x, \\<sigma>) # \\<Gamma> \\<turnstile> t : T \\<tau>\\<rbrakk>\n        \\<Longrightarrow> x \\<sharp> s to x in t) &&&\n    (\\<And>x \\<Gamma> s \\<sigma> t \\<tau>.\n        \\<lbrakk>x \\<sharp> (\\<Gamma>, s);\n         \\<Gamma> \\<turnstile> s : T \\<sigma>;\n         (x, \\<sigma>) # \\<Gamma> \\<turnstile> t : T \\<tau>\\<rbrakk>\n        \\<Longrightarrow> x \\<sharp> T \\<tau>)", "by(simp_all add: abs_fresh fresh_ty)"], ["", "text \\<open>Except for the explicit requirement that contexts be valid in the\nvariable case and the freshness requirements in \\isa{t3} and \\isa{t5}, this\ntyping\nrelation is a direct translation of the original typing relation in\n\\cite{TT-lifting} to Curry-style typing.\\<close>"], ["", "fun\n  lookup :: \"(name\\<times>trm) list \\<Rightarrow> name \\<Rightarrow> trm\"   \nwhere\n  \"lookup [] x        = Var x\"\n| \"lookup ((y,e)#\\<theta>) x = (if x=y then e else lookup \\<theta> x)\""], ["", "lemma lookup_eqvt[eqvt]:\n  fixes pi::\"name prm\"\n  and   \\<theta>::\"(name\\<times>trm) list\"\n  and   x::\"name\"\n  shows \"pi \\<bullet> (lookup \\<theta> x) = lookup (pi \\<bullet> \\<theta>) (pi \\<bullet> x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pi \\<bullet> lookup \\<theta> x =\n    lookup (pi \\<bullet> \\<theta>) (pi \\<bullet> x)", "by (induct \\<theta>) (auto simp add: eqvts)"], ["", "nominal_primrec\n  psubst :: \"(name\\<times>trm) list \\<Rightarrow> trm \\<Rightarrow> trm\"  (\"_<_>\" [95,95] 205)\nwhere \n    \"\\<theta><Var x> = lookup \\<theta> x\"\n  | \"\\<theta><App s t> = App (\\<theta><s>) (\\<theta><t>)\"\n  | \"x \\<sharp> \\<theta> \\<Longrightarrow> \\<theta><\\<Lambda> x .s> = \\<Lambda> x . (\\<theta><s>)\"\n  | \"\\<theta><[t]> = [\\<theta><t>]\"\n  | \"\\<lbrakk> x \\<sharp> \\<theta> ; x \\<sharp> t \\<rbrakk> \\<Longrightarrow> \\<theta><t to x in s> = (\\<theta><t>) to x in (\\<theta><s>)\""], ["proof (prove)\ngoal (24 subgoals):\n 1. finite (supp (lookup \\<theta>))\n 2. finite (supp (\\<lambda>s t. App))\n 3. finite (supp (\\<lambda>x s. Lam x))\n 4. finite (supp (\\<lambda>t x s ta. To ta x))\n 5. finite (supp (\\<lambda>t. Ret))\n 6. finite (supp ())\n 7. \\<And>x1. True\n 8. \\<And>x1 x2 y1 y2. \\<lbrakk>True; True\\<rbrakk> \\<Longrightarrow> True\n 9. \\<And>x1 x2 y1. True \\<Longrightarrow> True\n 10. \\<And>x1 x2 x3 y1 y2.\n        \\<lbrakk>True; True\\<rbrakk> \\<Longrightarrow> True\nA total of 24 subgoals...", "by(finite_guess+ , (simp add: abs_fresh)+ , fresh_guess+)"], ["", "lemma psubst_eqvt[eqvt]:\n  fixes pi::\"name prm\"\n  shows \"pi \\<bullet> (\\<theta><t>) = (pi \\<bullet> \\<theta>)<(pi \\<bullet> t)>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pi \\<bullet> \\<theta><t> = (pi \\<bullet> \\<theta>)<(pi \\<bullet> t)>", "by(nominal_induct t avoiding: \\<theta> rule:trm.strong_induct)\n  (auto simp add: eqvts fresh_bij)"], ["", "abbreviation \n  subst :: \"trm \\<Rightarrow> name \\<Rightarrow> trm \\<Rightarrow> trm\" (\"_[_::=_]\" [200,100,100] 200)\nwhere \n  \"t[x::=t']  \\<equiv> ([(x,t')])<t>\""], ["", "lemma subst[simp]:\nshows \"(Var x)[y::=v] = (if x = y then v else Var x)\"\n  and \"(App s t)[y::=v] = App (s[y::=v]) (t[y::=v])\"\n  and \"x \\<sharp> (y,v) \\<Longrightarrow> (\\<Lambda> x . t)[y::=v] = \\<Lambda> x .t[y::=v]\"\n  and \"x \\<sharp> (s,y,v) \\<Longrightarrow> (s to x in t)[y::=v] = s[y::=v] to x in t[y::=v]\"\n  and \"([s])[y::=v] = [s[y::=v]]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Var x[y::=v] = (if x = y then v else Var x) &&&\n     App s t[y::=v] = App (s[y::=v]) (t[y::=v])) &&&\n    (x \\<sharp> (y, v) \\<Longrightarrow>\n     (\\<Lambda> x . t)[y::=v] = \\<Lambda> x . t[y::=v]) &&&\n    (x \\<sharp> (s, y, v) \\<Longrightarrow>\n     (s to x in t)[y::=v] = s[y::=v] to x in t[y::=v]) &&&\n    [s][y::=v] = [s[y::=v]]", "by(simp_all add: fresh_list_cons fresh_list_nil)"], ["", "lemma subst_rename: \n  assumes a: \"y \\<sharp> t\"\n  shows \"([(y,x)]\\<bullet>t)[y::=v] = t[x::=v]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([(y, x)] \\<bullet> t)[y::=v] = t[x::=v]", "using a"], ["proof (prove)\nusing this:\n  y \\<sharp> t\n\ngoal (1 subgoal):\n 1. ([(y, x)] \\<bullet> t)[y::=v] = t[x::=v]", "by(nominal_induct t avoiding: x y v rule: trm.strong_induct)\n    (auto simp add: calc_atm fresh_atm abs_fresh fresh_prod fresh_aux)"], ["", "lemmas subst_rename' = subst_rename[THEN sym]"], ["", "lemma forget: \"x \\<sharp> t \\<Longrightarrow> t[x::=v] = t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> t \\<Longrightarrow> t[x::=v] = t", "by(nominal_induct t avoiding: x v rule: trm.strong_induct)\n    (auto simp add: abs_fresh fresh_atm)"], ["", "lemma fresh_fact: \n  fixes x::\"name\"\n  assumes x: \"x \\<sharp> v\"   \"x \\<sharp> t\"\n  shows \"x \\<sharp> t[y::=v]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> t[y::=v]", "using x"], ["proof (prove)\nusing this:\n  x \\<sharp> v\n  x \\<sharp> t\n\ngoal (1 subgoal):\n 1. x \\<sharp> t[y::=v]", "by(nominal_induct t avoiding: x y v rule: trm.strong_induct)\n    (auto simp add: abs_fresh fresh_atm)"], ["", "lemma fresh_fact': \n  fixes x::\"name\"\n  assumes x: \"x \\<sharp> v\"\n  shows \"x \\<sharp> t[x::=v]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> t[x::=v]", "using x"], ["proof (prove)\nusing this:\n  x \\<sharp> v\n\ngoal (1 subgoal):\n 1. x \\<sharp> t[x::=v]", "by(nominal_induct t avoiding: x v rule: trm.strong_induct)\n    (auto simp add: abs_fresh fresh_atm)"], ["", "lemma subst_lemma:  \n  assumes a: \"x\\<noteq>y\"\n  and     b: \"x \\<sharp> u\"\n  shows \"s[x::=v][y::=u] = s[y::=u][x::=v[y::=u]]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s[x::=v][y::=u] = s[y::=u][x::=v[y::=u]]", "using a b"], ["proof (prove)\nusing this:\n  x \\<noteq> y\n  x \\<sharp> u\n\ngoal (1 subgoal):\n 1. s[x::=v][y::=u] = s[y::=u][x::=v[y::=u]]", "by(nominal_induct s avoiding: x y u v rule: trm.strong_induct)\n    (auto simp add: fresh_fact forget)"], ["", "lemma id_subs: \n  shows \"t[x::=Var x] = t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t[x::=Var x] = t", "by(nominal_induct t avoiding: x rule:trm.strong_induct) auto"], ["", "text \\<open>In addition to the facts on simple substitution we also need some facts\non parallel substitution. In particular we want to be able to extend a parallel\nsubstitution with a simple one.\\<close>"], ["", "lemma lookup_fresh:\n  fixes z::\"name\"\n  assumes \"z\\<sharp>\\<theta>\"   \"z\\<sharp>x\"\n  shows \"z\\<sharp> lookup \\<theta> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. z \\<sharp> lookup \\<theta> x", "using assms"], ["proof (prove)\nusing this:\n  z \\<sharp> \\<theta>\n  z \\<sharp> x\n\ngoal (1 subgoal):\n 1. z \\<sharp> lookup \\<theta> x", "by(induct rule: lookup.induct) \n  (auto simp add: fresh_list_cons)"], ["", "lemma lookup_fresh':\n  assumes a: \"z\\<sharp>\\<theta>\"\n  shows \"lookup \\<theta> z = Var z\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lookup \\<theta> z = Var z", "using a"], ["proof (prove)\nusing this:\n  z \\<sharp> \\<theta>\n\ngoal (1 subgoal):\n 1. lookup \\<theta> z = Var z", "by (induct rule: lookup.induct)\n   (auto simp add: fresh_list_cons fresh_prod fresh_atm)"], ["", "lemma psubst_fresh_fact:\n  fixes x :: name\n  assumes a: \"x \\<sharp> t\" and b: \"x \\<sharp> \\<theta>\" \n  shows \"x \\<sharp> \\<theta><t>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> \\<theta><t>", "using a b"], ["proof (prove)\nusing this:\n  x \\<sharp> t\n  x \\<sharp> \\<theta>\n\ngoal (1 subgoal):\n 1. x \\<sharp> \\<theta><t>", "by(nominal_induct t avoiding: \\<theta> x rule:trm.strong_induct) \n    (auto simp add: lookup_fresh abs_fresh)"], ["", "lemma psubst_subst:\n  assumes a: \"x \\<sharp> \\<theta>\"\n  shows \"\\<theta><t>[x::=s] = ((x,s)#\\<theta>)<t>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<theta><t>[x::=s] = ((x, s) # \\<theta>)<t>", "using a"], ["proof (prove)\nusing this:\n  x \\<sharp> \\<theta>\n\ngoal (1 subgoal):\n 1. \\<theta><t>[x::=s] = ((x, s) # \\<theta>)<t>", "by(nominal_induct t avoiding: \\<theta> x s rule: trm.strong_induct)\n    (auto simp add: fresh_list_cons fresh_atm forget \n      lookup_fresh lookup_fresh' fresh_prod psubst_fresh_fact)"], ["", "section \\<open>The Reduction Relation\\<close>"], ["", "text_raw \\<open>\\label{sec:reduction}\\<close>"], ["", "text \\<open>With substitution in place, we can now define the reduction relation on\n$\\lambda_{ml}$-terms. To derive strong induction and case rules, all the rules\nmust be vc-compatible (cf. \\cite{nominal-techniques}). This requires some\nadditional freshness conditions. Note that in this particular case the\nadditional freshness conditions only serve the technical purpose of\nautomatically deriving strong reasoning principles. To show that the version\nwith freshness conditions defines the same relation as the one without the\nfreshness conditions, we also state this version and prove equality of the two\nrelations. \n\nThis requires quite some effort and is something that is certainly undesirable\nin nominal reasoning. Unfortunately, handling the reduction rule \\isa{r10} which\nrearranges the binding structure, appeared to be impossible without going\nthrough this.\\<close>"], ["", "inductive std_reduction :: \"trm \\<Rightarrow> trm \\<Rightarrow> bool\" (\"_ \\<leadsto> _\" [80,80] 80)\nwhere\n  std_r1[intro!]:\"s \\<leadsto> s' \\<Longrightarrow> App s t \\<leadsto> App s' t\"\n| std_r2[intro!]:\"t \\<leadsto> t' \\<Longrightarrow> App s t \\<leadsto> App s t'\"\n| std_r3[intro!]:\"App (\\<Lambda> x . t) s \\<leadsto> t[x::=s]\"\n\n| std_r4[intro!]:\"t \\<leadsto> t' \\<Longrightarrow> \\<Lambda> x . t \\<leadsto> \\<Lambda> x . t'\"\n| std_r5[intro!]:\"x \\<sharp> t \\<Longrightarrow> \\<Lambda> x . App t (Var x) \\<leadsto> t\"\n\n| std_r6[intro!]:\"\\<lbrakk> s \\<leadsto> s' \\<rbrakk> \\<Longrightarrow> s to x in t \\<leadsto> s' to x in t\"\n| std_r7[intro!]:\"\\<lbrakk> t \\<leadsto> t' \\<rbrakk> \\<Longrightarrow> s to x in t \\<leadsto> s  to x in t'\"\n| std_r8[intro!]:\"[s] to x in t \\<leadsto> t[x::=s]\"\n| std_r9[intro!]:\"x \\<sharp> s \\<Longrightarrow> s to x in [Var x] \\<leadsto> s\"\n| std_r10[intro!]: \"\\<lbrakk> x \\<sharp> y; x \\<sharp> u\\<rbrakk> \n                     \\<Longrightarrow> (s to x in t) to y in u \\<leadsto> s to x in (t to y in u)\"\n| std_r11[intro!]: \"s \\<leadsto> s' \\<Longrightarrow> [s] \\<leadsto> [s']\""], ["", "inductive \n  reduction :: \"trm \\<Rightarrow> trm \\<Rightarrow> bool\" (\"_ \\<mapsto> _\" [80,80] 80)\nwhere\n  r1[intro!]:\"s \\<mapsto> s' \\<Longrightarrow> App s t \\<mapsto> App s' t\"\n| r2[intro!]:\"t \\<mapsto> t' \\<Longrightarrow> App s t \\<mapsto> App s t'\"\n| r3[intro!]:\"x \\<sharp> s \\<Longrightarrow> App (\\<Lambda> x . t) s \\<mapsto> t[x::=s]\"\n\n| r4[intro!]:\"t \\<mapsto> t' \\<Longrightarrow> \\<Lambda> x . t \\<mapsto> \\<Lambda> x . t'\"\n| r5[intro!]:\"x \\<sharp> t \\<Longrightarrow> \\<Lambda> x . App t (Var x) \\<mapsto> t\"\n\n| r6[intro!]:\"\\<lbrakk> x \\<sharp> (s,s') ; s \\<mapsto> s' \\<rbrakk> \\<Longrightarrow> s to x in t \\<mapsto> s' to x in t\"\n| r7[intro!]:\"\\<lbrakk> x \\<sharp> s ; t \\<mapsto> t' \\<rbrakk> \\<Longrightarrow> s to x in t \\<mapsto> s  to x in t'\"\n| r8[intro!]:\"x \\<sharp> s \\<Longrightarrow> [s] to x in t \\<mapsto> t[x::=s]\"\n| r9[intro!]:\"x \\<sharp> s \\<Longrightarrow> s to x in [Var x] \\<mapsto> s\"\n| r10[intro!]: \"\\<lbrakk> x \\<sharp> (y,s,u) ; y \\<sharp> (s,t) \\<rbrakk> \n                  \\<Longrightarrow> (s to x in t) to y in u \\<mapsto> s to x in (t to y in u)\"\n| r11[intro!]: \"s \\<mapsto> s' \\<Longrightarrow> [s] \\<mapsto> [s']\""], ["", "equivariance reduction"], ["", "nominal_inductive reduction"], ["proof (prove)\ngoal (1 subgoal):\n 1. ((((\\<And>x s t.\n           x \\<sharp> s \\<Longrightarrow>\n           x \\<sharp> App (\\<Lambda> x . t) s) &&&\n       (\\<And>x s t.\n           x \\<sharp> s \\<Longrightarrow> x \\<sharp> t[x::=s])) &&&\n      (\\<And>t t' x.\n          t \\<mapsto> t' \\<Longrightarrow> x \\<sharp> \\<Lambda> x . t) &&&\n      (\\<And>t t' x.\n          t \\<mapsto> t' \\<Longrightarrow> x \\<sharp> \\<Lambda> x . t')) &&&\n     ((\\<And>x t.\n          x \\<sharp> t \\<Longrightarrow>\n          x \\<sharp> \\<Lambda> x . App t (Var x)) &&&\n      (\\<And>x t. x \\<sharp> t \\<Longrightarrow> x \\<sharp> t)) &&&\n     (\\<And>x s s' t.\n         \\<lbrakk>x \\<sharp> (s, s'); s \\<mapsto> s'\\<rbrakk>\n         \\<Longrightarrow> x \\<sharp> s to x in t) &&&\n     (\\<And>x s s' t.\n         \\<lbrakk>x \\<sharp> (s, s'); s \\<mapsto> s'\\<rbrakk>\n         \\<Longrightarrow> x \\<sharp> s' to x in t)) &&&\n    (((\\<And>x s t t'.\n          \\<lbrakk>x \\<sharp> s; t \\<mapsto> t'\\<rbrakk>\n          \\<Longrightarrow> x \\<sharp> s to x in t) &&&\n      (\\<And>x s t t'.\n          \\<lbrakk>x \\<sharp> s; t \\<mapsto> t'\\<rbrakk>\n          \\<Longrightarrow> x \\<sharp> s to x in t')) &&&\n     (\\<And>x s t.\n         x \\<sharp> s \\<Longrightarrow> x \\<sharp> [s] to x in t) &&&\n     (\\<And>x s t. x \\<sharp> s \\<Longrightarrow> x \\<sharp> t[x::=s])) &&&\n    ((\\<And>x s.\n         x \\<sharp> s \\<Longrightarrow> x \\<sharp> s to x in [Var x]) &&&\n     (\\<And>x s. x \\<sharp> s \\<Longrightarrow> x \\<sharp> s)) &&&\n    ((\\<And>x y s u t.\n         \\<lbrakk>x \\<sharp> (y, s, u); y \\<sharp> (s, t)\\<rbrakk>\n         \\<Longrightarrow> y \\<noteq> x) &&&\n     (\\<And>x y s u t.\n         \\<lbrakk>x \\<sharp> (y, s, u); y \\<sharp> (s, t)\\<rbrakk>\n         \\<Longrightarrow> y \\<sharp> (s to x in t) to y in u)) &&&\n    (\\<And>x y s u t.\n        \\<lbrakk>x \\<sharp> (y, s, u); y \\<sharp> (s, t)\\<rbrakk>\n        \\<Longrightarrow> x \\<sharp> (s to x in t) to y in u) &&&\n    (\\<And>x y s u t.\n        \\<lbrakk>x \\<sharp> (y, s, u); y \\<sharp> (s, t)\\<rbrakk>\n        \\<Longrightarrow> y \\<sharp> s to x in t to y in u) &&&\n    (\\<And>x y s u t.\n        \\<lbrakk>x \\<sharp> (y, s, u); y \\<sharp> (s, t)\\<rbrakk>\n        \\<Longrightarrow> x \\<sharp> s to x in t to y in u)", "by(auto simp add: abs_fresh fresh_fact' fresh_prod fresh_atm)"], ["", "text \\<open>In order to show adequacy, the extra freshness conditions in the rules\n\\isa{r3}, \\isa{r6}, \\isa{r7}, \\isa{r8}, \\isa{r9}, and \\isa{r10} need to be\ndischarged.\\<close>"], ["", "text_raw \\<open>\\label{pg:alpha-begin}\\<close>"], ["", "lemma r3'[intro!]: \"App (\\<Lambda> x . t) s \\<mapsto> t[x::=s]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. App (\\<Lambda> x . t) s \\<mapsto> t[x::=s]", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. App (\\<Lambda> x . t) s \\<mapsto> t[x::=s]", "obtain x'::name where s: \"x' \\<sharp> s\" and t: \"x' \\<sharp> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>x' \\<sharp> s; x' \\<sharp> t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using ex_fresh[of \"(s,t)\"]"], ["proof (prove)\nusing this:\n  \\<exists>c. c \\<sharp> (s, t)\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>x' \\<sharp> s; x' \\<sharp> t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: fresh_prod)"], ["proof (state)\nthis:\n  x' \\<sharp> s\n  x' \\<sharp> t\n\ngoal (1 subgoal):\n 1. App (\\<Lambda> x . t) s \\<mapsto> t[x::=s]", "from t"], ["proof (chain)\npicking this:\n  x' \\<sharp> t", "have \"App (\\<Lambda> x . t) s = App (\\<Lambda> x' . ([(x,x')] \\<bullet> t)) s\""], ["proof (prove)\nusing this:\n  x' \\<sharp> t\n\ngoal (1 subgoal):\n 1. App (\\<Lambda> x . t) s = App (\\<Lambda> x' . ([(x, x')] \\<bullet> t)) s", "by (simp add: alpha'')"], ["proof (state)\nthis:\n  App (\\<Lambda> x . t) s = App (\\<Lambda> x' . ([(x, x')] \\<bullet> t)) s\n\ngoal (1 subgoal):\n 1. App (\\<Lambda> x . t) s \\<mapsto> t[x::=s]", "also"], ["proof (state)\nthis:\n  App (\\<Lambda> x . t) s = App (\\<Lambda> x' . ([(x, x')] \\<bullet> t)) s\n\ngoal (1 subgoal):\n 1. App (\\<Lambda> x . t) s \\<mapsto> t[x::=s]", "from s"], ["proof (chain)\npicking this:\n  x' \\<sharp> s", "have \"\\<dots> \\<mapsto> ([(x, x')] \\<bullet> t)[x'::=s]\""], ["proof (prove)\nusing this:\n  x' \\<sharp> s\n\ngoal (1 subgoal):\n 1. App (\\<Lambda> x' . ([(x, x')] \\<bullet> t))\n     s \\<mapsto> ([(x, x')] \\<bullet> t)[x'::=s]", ".."], ["proof (state)\nthis:\n  App (\\<Lambda> x' . ([(x, x')] \\<bullet> t))\n   s \\<mapsto> ([(x, x')] \\<bullet> t)[x'::=s]\n\ngoal (1 subgoal):\n 1. App (\\<Lambda> x . t) s \\<mapsto> t[x::=s]", "also"], ["proof (state)\nthis:\n  App (\\<Lambda> x' . ([(x, x')] \\<bullet> t))\n   s \\<mapsto> ([(x, x')] \\<bullet> t)[x'::=s]\n\ngoal (1 subgoal):\n 1. App (\\<Lambda> x . t) s \\<mapsto> t[x::=s]", "have \"\\<dots> = t[x::=s]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([(x, x')] \\<bullet> t)[x'::=s] = t[x::=s]", "using t"], ["proof (prove)\nusing this:\n  x' \\<sharp> t\n\ngoal (1 subgoal):\n 1. ([(x, x')] \\<bullet> t)[x'::=s] = t[x::=s]", "by (auto simp add: subst_rename') (metis perm_swap)"], ["proof (state)\nthis:\n  ([(x, x')] \\<bullet> t)[x'::=s] = t[x::=s]\n\ngoal (1 subgoal):\n 1. App (\\<Lambda> x . t) s \\<mapsto> t[x::=s]", "finally"], ["proof (chain)\npicking this:\n  App (\\<Lambda> x . t) s \\<mapsto> t[x::=s]", "show ?thesis"], ["proof (prove)\nusing this:\n  App (\\<Lambda> x . t) s \\<mapsto> t[x::=s]\n\ngoal (1 subgoal):\n 1. App (\\<Lambda> x . t) s \\<mapsto> t[x::=s]", "."], ["proof (state)\nthis:\n  App (\\<Lambda> x . t) s \\<mapsto> t[x::=s]\n\ngoal:\nNo subgoals!", "qed"], ["", "declare r3[rule del]"], ["", "lemma r6'[intro]:\n  fixes s :: trm \n  assumes r: \"s \\<mapsto> s'\"\n  shows \"s to x in t \\<mapsto> s' to x in t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s to x in t \\<mapsto> s' to x in t", "using assms"], ["proof (prove)\nusing this:\n  s \\<mapsto> s'\n\ngoal (1 subgoal):\n 1. s to x in t \\<mapsto> s' to x in t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. s \\<mapsto> s' \\<Longrightarrow> s to x in t \\<mapsto> s' to x in t", "obtain x'::name where s: \"x' \\<sharp> (s, s')\" and t: \"x' \\<sharp> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>x' \\<sharp> (s, s'); x' \\<sharp> t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using ex_fresh[of \"(s,s',t)\"]"], ["proof (prove)\nusing this:\n  \\<exists>c. c \\<sharp> (s, s', t)\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>x' \\<sharp> (s, s'); x' \\<sharp> t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: fresh_prod)"], ["proof (state)\nthis:\n  x' \\<sharp> (s, s')\n  x' \\<sharp> t\n\ngoal (1 subgoal):\n 1. s \\<mapsto> s' \\<Longrightarrow> s to x in t \\<mapsto> s' to x in t", "from t"], ["proof (chain)\npicking this:\n  x' \\<sharp> t", "have \"s to x in t = s to x' in ([(x,x')] \\<bullet> t)\""], ["proof (prove)\nusing this:\n  x' \\<sharp> t\n\ngoal (1 subgoal):\n 1. s to x in t = s to x' in ([(x, x')] \\<bullet> t)", "by (simp add: alpha'')"], ["proof (state)\nthis:\n  s to x in t = s to x' in ([(x, x')] \\<bullet> t)\n\ngoal (1 subgoal):\n 1. s \\<mapsto> s' \\<Longrightarrow> s to x in t \\<mapsto> s' to x in t", "also"], ["proof (state)\nthis:\n  s to x in t = s to x' in ([(x, x')] \\<bullet> t)\n\ngoal (1 subgoal):\n 1. s \\<mapsto> s' \\<Longrightarrow> s to x in t \\<mapsto> s' to x in t", "from s r"], ["proof (chain)\npicking this:\n  x' \\<sharp> (s, s')\n  s \\<mapsto> s'", "have \"\\<dots> \\<mapsto> s' to x' in ([(x, x')] \\<bullet> t)\""], ["proof (prove)\nusing this:\n  x' \\<sharp> (s, s')\n  s \\<mapsto> s'\n\ngoal (1 subgoal):\n 1. s to x' in ([(x, x')] \\<bullet>\n                t) \\<mapsto> s' to x' in ([(x, x')] \\<bullet> t)", ".."], ["proof (state)\nthis:\n  s to x' in ([(x, x')] \\<bullet>\n              t) \\<mapsto> s' to x' in ([(x, x')] \\<bullet> t)\n\ngoal (1 subgoal):\n 1. s \\<mapsto> s' \\<Longrightarrow> s to x in t \\<mapsto> s' to x in t", "also"], ["proof (state)\nthis:\n  s to x' in ([(x, x')] \\<bullet>\n              t) \\<mapsto> s' to x' in ([(x, x')] \\<bullet> t)\n\ngoal (1 subgoal):\n 1. s \\<mapsto> s' \\<Longrightarrow> s to x in t \\<mapsto> s' to x in t", "from t"], ["proof (chain)\npicking this:\n  x' \\<sharp> t", "have \"\\<dots> = s' to x in t\""], ["proof (prove)\nusing this:\n  x' \\<sharp> t\n\ngoal (1 subgoal):\n 1. s' to x' in ([(x, x')] \\<bullet> t) = s' to x in t", "by (simp add: alpha'')"], ["proof (state)\nthis:\n  s' to x' in ([(x, x')] \\<bullet> t) = s' to x in t\n\ngoal (1 subgoal):\n 1. s \\<mapsto> s' \\<Longrightarrow> s to x in t \\<mapsto> s' to x in t", "finally"], ["proof (chain)\npicking this:\n  s to x in t \\<mapsto> s' to x in t", "show ?thesis"], ["proof (prove)\nusing this:\n  s to x in t \\<mapsto> s' to x in t\n\ngoal (1 subgoal):\n 1. s to x in t \\<mapsto> s' to x in t", "."], ["proof (state)\nthis:\n  s to x in t \\<mapsto> s' to x in t\n\ngoal:\nNo subgoals!", "qed"], ["", "declare r6[rule del]"], ["", "lemma r7'[intro]: \n  fixes t :: trm\n  assumes \"t \\<mapsto> t'\"\n  shows \"s to x in t \\<mapsto> s to x in t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s to x in t \\<mapsto> s to x in t'", "using assms"], ["proof (prove)\nusing this:\n  t \\<mapsto> t'\n\ngoal (1 subgoal):\n 1. s to x in t \\<mapsto> s to x in t'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. t \\<mapsto> t' \\<Longrightarrow> s to x in t \\<mapsto> s to x in t'", "obtain x'::name where f: \"x' \\<sharp> t\"   \"x' \\<sharp> t'\"   \"x' \\<sharp> s\"   \"x' \\<sharp> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>x' \\<sharp> t; x' \\<sharp> t'; x' \\<sharp> s;\n         x' \\<sharp> x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using ex_fresh[of \"(t,t',s,x)\"]"], ["proof (prove)\nusing this:\n  \\<exists>c. c \\<sharp> (t, t', s, x)\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>x' \\<sharp> t; x' \\<sharp> t'; x' \\<sharp> s;\n         x' \\<sharp> x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto simp add:fresh_prod)"], ["proof (state)\nthis:\n  x' \\<sharp> t\n  x' \\<sharp> t'\n  x' \\<sharp> s\n  x' \\<sharp> x\n\ngoal (1 subgoal):\n 1. t \\<mapsto> t' \\<Longrightarrow> s to x in t \\<mapsto> s to x in t'", "hence a: \"s to x in t = s to x' in ([(x,x')] \\<bullet> t)\""], ["proof (prove)\nusing this:\n  x' \\<sharp> t\n  x' \\<sharp> t'\n  x' \\<sharp> s\n  x' \\<sharp> x\n\ngoal (1 subgoal):\n 1. s to x in t = s to x' in ([(x, x')] \\<bullet> t)", "by (auto simp add: alpha'')"], ["proof (state)\nthis:\n  s to x in t = s to x' in ([(x, x')] \\<bullet> t)\n\ngoal (1 subgoal):\n 1. t \\<mapsto> t' \\<Longrightarrow> s to x in t \\<mapsto> s to x in t'", "from assms"], ["proof (chain)\npicking this:\n  t \\<mapsto> t'", "have \"([(x,x')] \\<bullet> t) \\<mapsto> [(x,x')] \\<bullet> t'\""], ["proof (prove)\nusing this:\n  t \\<mapsto> t'\n\ngoal (1 subgoal):\n 1. [(x, x')] \\<bullet> t \\<mapsto> [(x, x')] \\<bullet> t'", "by (simp add: eqvts)"], ["proof (state)\nthis:\n  [(x, x')] \\<bullet> t \\<mapsto> [(x, x')] \\<bullet> t'\n\ngoal (1 subgoal):\n 1. t \\<mapsto> t' \\<Longrightarrow> s to x in t \\<mapsto> s to x in t'", "hence r: \"s to x' in ([(x,x')] \\<bullet> t) \\<mapsto> s to x' in ([(x,x')] \\<bullet> t')\""], ["proof (prove)\nusing this:\n  [(x, x')] \\<bullet> t \\<mapsto> [(x, x')] \\<bullet> t'\n\ngoal (1 subgoal):\n 1. s to x' in ([(x, x')] \\<bullet>\n                t) \\<mapsto> s to x' in ([(x, x')] \\<bullet> t')", "using f"], ["proof (prove)\nusing this:\n  [(x, x')] \\<bullet> t \\<mapsto> [(x, x')] \\<bullet> t'\n  x' \\<sharp> t\n  x' \\<sharp> t'\n  x' \\<sharp> s\n  x' \\<sharp> x\n\ngoal (1 subgoal):\n 1. s to x' in ([(x, x')] \\<bullet>\n                t) \\<mapsto> s to x' in ([(x, x')] \\<bullet> t')", "by auto"], ["proof (state)\nthis:\n  s to x' in ([(x, x')] \\<bullet>\n              t) \\<mapsto> s to x' in ([(x, x')] \\<bullet> t')\n\ngoal (1 subgoal):\n 1. t \\<mapsto> t' \\<Longrightarrow> s to x in t \\<mapsto> s to x in t'", "from f"], ["proof (chain)\npicking this:\n  x' \\<sharp> t\n  x' \\<sharp> t'\n  x' \\<sharp> s\n  x' \\<sharp> x", "have \"s to x in t' = s to x' in ([(x,x')] \\<bullet> t')\""], ["proof (prove)\nusing this:\n  x' \\<sharp> t\n  x' \\<sharp> t'\n  x' \\<sharp> s\n  x' \\<sharp> x\n\ngoal (1 subgoal):\n 1. s to x in t' = s to x' in ([(x, x')] \\<bullet> t')", "by (auto simp add: alpha'')"], ["proof (state)\nthis:\n  s to x in t' = s to x' in ([(x, x')] \\<bullet> t')\n\ngoal (1 subgoal):\n 1. t \\<mapsto> t' \\<Longrightarrow> s to x in t \\<mapsto> s to x in t'", "with a r"], ["proof (chain)\npicking this:\n  s to x in t = s to x' in ([(x, x')] \\<bullet> t)\n  s to x' in ([(x, x')] \\<bullet>\n              t) \\<mapsto> s to x' in ([(x, x')] \\<bullet> t')\n  s to x in t' = s to x' in ([(x, x')] \\<bullet> t')", "show ?thesis"], ["proof (prove)\nusing this:\n  s to x in t = s to x' in ([(x, x')] \\<bullet> t)\n  s to x' in ([(x, x')] \\<bullet>\n              t) \\<mapsto> s to x' in ([(x, x')] \\<bullet> t')\n  s to x in t' = s to x' in ([(x, x')] \\<bullet> t')\n\ngoal (1 subgoal):\n 1. s to x in t \\<mapsto> s to x in t'", "by (simp del: trm.inject)"], ["proof (state)\nthis:\n  s to x in t \\<mapsto> s to x in t'\n\ngoal:\nNo subgoals!", "qed"], ["", "declare r7[rule del]"], ["", "lemma r8'[intro!]: \"[s] to x in t \\<mapsto> t[x::=s]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [s] to x in t \\<mapsto> t[x::=s]", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. [s] to x in t \\<mapsto> t[x::=s]", "obtain x'::name where s: \"x' \\<sharp> s\" and t: \"x' \\<sharp> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>x' \\<sharp> s; x' \\<sharp> t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using ex_fresh[of \"(s,t)\"]"], ["proof (prove)\nusing this:\n  \\<exists>c. c \\<sharp> (s, t)\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>x' \\<sharp> s; x' \\<sharp> t\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: fresh_prod)"], ["proof (state)\nthis:\n  x' \\<sharp> s\n  x' \\<sharp> t\n\ngoal (1 subgoal):\n 1. [s] to x in t \\<mapsto> t[x::=s]", "from t"], ["proof (chain)\npicking this:\n  x' \\<sharp> t", "have \"[s] to x in t = [s] to x' in ([(x,x')] \\<bullet> t)\""], ["proof (prove)\nusing this:\n  x' \\<sharp> t\n\ngoal (1 subgoal):\n 1. [s] to x in t = [s] to x' in ([(x, x')] \\<bullet> t)", "by (simp add: alpha'')"], ["proof (state)\nthis:\n  [s] to x in t = [s] to x' in ([(x, x')] \\<bullet> t)\n\ngoal (1 subgoal):\n 1. [s] to x in t \\<mapsto> t[x::=s]", "also"], ["proof (state)\nthis:\n  [s] to x in t = [s] to x' in ([(x, x')] \\<bullet> t)\n\ngoal (1 subgoal):\n 1. [s] to x in t \\<mapsto> t[x::=s]", "from s"], ["proof (chain)\npicking this:\n  x' \\<sharp> s", "have \"\\<dots> \\<mapsto> ([(x, x')] \\<bullet> t)[x'::=s]\""], ["proof (prove)\nusing this:\n  x' \\<sharp> s\n\ngoal (1 subgoal):\n 1. [s] to x' in ([(x, x')] \\<bullet>\n                  t) \\<mapsto> ([(x, x')] \\<bullet> t)[x'::=s]", ".."], ["proof (state)\nthis:\n  [s] to x' in ([(x, x')] \\<bullet>\n                t) \\<mapsto> ([(x, x')] \\<bullet> t)[x'::=s]\n\ngoal (1 subgoal):\n 1. [s] to x in t \\<mapsto> t[x::=s]", "also"], ["proof (state)\nthis:\n  [s] to x' in ([(x, x')] \\<bullet>\n                t) \\<mapsto> ([(x, x')] \\<bullet> t)[x'::=s]\n\ngoal (1 subgoal):\n 1. [s] to x in t \\<mapsto> t[x::=s]", "have \"\\<dots> = t[x::=s]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([(x, x')] \\<bullet> t)[x'::=s] = t[x::=s]", "using t"], ["proof (prove)\nusing this:\n  x' \\<sharp> t\n\ngoal (1 subgoal):\n 1. ([(x, x')] \\<bullet> t)[x'::=s] = t[x::=s]", "by (auto simp add: subst_rename') (metis perm_swap)"], ["proof (state)\nthis:\n  ([(x, x')] \\<bullet> t)[x'::=s] = t[x::=s]\n\ngoal (1 subgoal):\n 1. [s] to x in t \\<mapsto> t[x::=s]", "finally"], ["proof (chain)\npicking this:\n  [s] to x in t \\<mapsto> t[x::=s]", "show ?thesis"], ["proof (prove)\nusing this:\n  [s] to x in t \\<mapsto> t[x::=s]\n\ngoal (1 subgoal):\n 1. [s] to x in t \\<mapsto> t[x::=s]", "."], ["proof (state)\nthis:\n  [s] to x in t \\<mapsto> t[x::=s]\n\ngoal:\nNo subgoals!", "qed"], ["", "declare r8[rule del]"], ["", "lemma r9'[intro!]: \"s to x in [Var x] \\<mapsto> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s to x in [Var x] \\<mapsto> s", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. s to x in [Var x] \\<mapsto> s", "obtain x'::name where f: \"x' \\<sharp> s\"   \"x' \\<sharp> x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>x' \\<sharp> s; x' \\<sharp> x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using ex_fresh[of \"(s,x)\"]"], ["proof (prove)\nusing this:\n  \\<exists>c. c \\<sharp> (s, x)\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>x' \\<sharp> s; x' \\<sharp> x\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto simp add:fresh_prod)"], ["proof (state)\nthis:\n  x' \\<sharp> s\n  x' \\<sharp> x\n\ngoal (1 subgoal):\n 1. s to x in [Var x] \\<mapsto> s", "hence \"s to x' in [Var x'] \\<mapsto> s\""], ["proof (prove)\nusing this:\n  x' \\<sharp> s\n  x' \\<sharp> x\n\ngoal (1 subgoal):\n 1. s to x' in [Var x'] \\<mapsto> s", "by auto"], ["proof (state)\nthis:\n  s to x' in [Var x'] \\<mapsto> s\n\ngoal (1 subgoal):\n 1. s to x in [Var x] \\<mapsto> s", "moreover"], ["proof (state)\nthis:\n  s to x' in [Var x'] \\<mapsto> s\n\ngoal (1 subgoal):\n 1. s to x in [Var x] \\<mapsto> s", "have \"s to x' in ([Var x']) = s to x in ([Var x])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s to x' in [Var x'] = s to x in [Var x]", "by (auto simp add: alpha fresh_atm swap_simps)"], ["proof (state)\nthis:\n  s to x' in [Var x'] = s to x in [Var x]\n\ngoal (1 subgoal):\n 1. s to x in [Var x] \\<mapsto> s", "ultimately"], ["proof (chain)\npicking this:\n  s to x' in [Var x'] \\<mapsto> s\n  s to x' in [Var x'] = s to x in [Var x]", "show ?thesis"], ["proof (prove)\nusing this:\n  s to x' in [Var x'] \\<mapsto> s\n  s to x' in [Var x'] = s to x in [Var x]\n\ngoal (1 subgoal):\n 1. s to x in [Var x] \\<mapsto> s", "by simp"], ["proof (state)\nthis:\n  s to x in [Var x] \\<mapsto> s\n\ngoal:\nNo subgoals!", "qed"], ["", "declare r9[rule del]"], ["", "text \\<open>While discharging these freshness conditions is easy for rules involving\nonly one binder it unfortunately becomes quite tedious for the assoc rule\n\\isa{r10}. This is due to the complex binding structure of this rule which\nincludes \\textit{four} binding occurrences of two different names. Furthermore,\nthe binding structure changes from the left to the right: On the left hand\nside, $x$ is only bound in $t$, whereas on the right hand side the scope of $x$\nextends over the whole term @{term \"(t to y in u)\"}.\\<close>"], ["", "lemma r10'[intro!]: \n  assumes xf: \"x \\<sharp> y\"   \"x \\<sharp> u\"\n  shows \"(s to x in t) to y in u \\<mapsto> s to x in (t to y in u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s to x in t) to y in u \\<mapsto> s to x in t to y in u", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (s to x in t) to y in u \\<mapsto> s to x in t to y in u", "obtain y'::name \\<comment> \\<open>suitably fresh\\<close>\n    where y: \"y' \\<sharp> s\"   \"y' \\<sharp> x\"   \"y' \\<sharp> t\"   \"y' \\<sharp> u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>y'.\n        \\<lbrakk>y' \\<sharp> s; y' \\<sharp> x; y' \\<sharp> t;\n         y' \\<sharp> u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using ex_fresh[of \"(s,x,t,u,[(x, x')] \\<bullet> t)\"]"], ["proof (prove)\nusing this:\n  \\<exists>c. c \\<sharp> (s, x, t, u, [(x, x')] \\<bullet> t)\n\ngoal (1 subgoal):\n 1. (\\<And>y'.\n        \\<lbrakk>y' \\<sharp> s; y' \\<sharp> x; y' \\<sharp> t;\n         y' \\<sharp> u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: fresh_prod)"], ["proof (state)\nthis:\n  y' \\<sharp> s\n  y' \\<sharp> x\n  y' \\<sharp> t\n  y' \\<sharp> u\n\ngoal (1 subgoal):\n 1. (s to x in t) to y in u \\<mapsto> s to x in t to y in u", "obtain x'::name \n    where x: \"x' \\<sharp> s\"   \"x' \\<sharp> y'\"   \"x' \\<sharp> y\"  \"x' \\<sharp> t\"   \"x' \\<sharp> u\"   \n             \"x' \\<sharp> ([(y,y')] \\<bullet> u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>x' \\<sharp> s; x' \\<sharp> y'; x' \\<sharp> y;\n         x' \\<sharp> t; x' \\<sharp> u;\n         x' \\<sharp> [(y, y')] \\<bullet> u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using ex_fresh[of \"(s,y',y,t,u,([(y,y')] \\<bullet> u))\"]"], ["proof (prove)\nusing this:\n  \\<exists>c. c \\<sharp> (s, y', y, t, u, [(y, y')] \\<bullet> u)\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        \\<lbrakk>x' \\<sharp> s; x' \\<sharp> y'; x' \\<sharp> y;\n         x' \\<sharp> t; x' \\<sharp> u;\n         x' \\<sharp> [(y, y')] \\<bullet> u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: fresh_prod)"], ["proof (state)\nthis:\n  x' \\<sharp> s\n  x' \\<sharp> y'\n  x' \\<sharp> y\n  x' \\<sharp> t\n  x' \\<sharp> u\n  x' \\<sharp> [(y, y')] \\<bullet> u\n\ngoal (1 subgoal):\n 1. (s to x in t) to y in u \\<mapsto> s to x in t to y in u", "from x y"], ["proof (chain)\npicking this:\n  x' \\<sharp> s\n  x' \\<sharp> y'\n  x' \\<sharp> y\n  x' \\<sharp> t\n  x' \\<sharp> u\n  x' \\<sharp> [(y, y')] \\<bullet> u\n  y' \\<sharp> s\n  y' \\<sharp> x\n  y' \\<sharp> t\n  y' \\<sharp> u", "have yaux: \"y' \\<sharp> [(x, x')] \\<bullet> t\""], ["proof (prove)\nusing this:\n  x' \\<sharp> s\n  x' \\<sharp> y'\n  x' \\<sharp> y\n  x' \\<sharp> t\n  x' \\<sharp> u\n  x' \\<sharp> [(y, y')] \\<bullet> u\n  y' \\<sharp> s\n  y' \\<sharp> x\n  y' \\<sharp> t\n  y' \\<sharp> u\n\ngoal (1 subgoal):\n 1. y' \\<sharp> [(x, x')] \\<bullet> t", "by(simp add: fresh_left perm_fresh_fresh fresh_atm)"], ["proof (state)\nthis:\n  y' \\<sharp> [(x, x')] \\<bullet> t\n\ngoal (1 subgoal):\n 1. (s to x in t) to y in u \\<mapsto> s to x in t to y in u", "have \"(s to x in t) to y in u = (s to x in t) to y' in ([(y,y')] \\<bullet> u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s to x in t) to y in u = (s to x in t) to y' in ([(y, y')] \\<bullet> u)", "using \\<open>y' \\<sharp> u\\<close>"], ["proof (prove)\nusing this:\n  y' \\<sharp> u\n\ngoal (1 subgoal):\n 1. (s to x in t) to y in u = (s to x in t) to y' in ([(y, y')] \\<bullet> u)", "by (simp add: alpha'')"], ["proof (state)\nthis:\n  (s to x in t) to y in u = (s to x in t) to y' in ([(y, y')] \\<bullet> u)\n\ngoal (1 subgoal):\n 1. (s to x in t) to y in u \\<mapsto> s to x in t to y in u", "also"], ["proof (state)\nthis:\n  (s to x in t) to y in u = (s to x in t) to y' in ([(y, y')] \\<bullet> u)\n\ngoal (1 subgoal):\n 1. (s to x in t) to y in u \\<mapsto> s to x in t to y in u", "have \"\\<dots> = (s to x' in ([(x,x')] \\<bullet> t)) to y' in ([(y,y')] \\<bullet> u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s to x in t) to y' in ([(y, y')] \\<bullet> u) =\n    (s to x' in ([(x, x')] \\<bullet> t)) to y' in ([(y, y')] \\<bullet> u)", "using \\<open>x' \\<sharp> t\\<close>"], ["proof (prove)\nusing this:\n  x' \\<sharp> t\n\ngoal (1 subgoal):\n 1. (s to x in t) to y' in ([(y, y')] \\<bullet> u) =\n    (s to x' in ([(x, x')] \\<bullet> t)) to y' in ([(y, y')] \\<bullet> u)", "by (simp add: alpha'')"], ["proof (state)\nthis:\n  (s to x in t) to y' in ([(y, y')] \\<bullet> u) =\n  (s to x' in ([(x, x')] \\<bullet> t)) to y' in ([(y, y')] \\<bullet> u)\n\ngoal (1 subgoal):\n 1. (s to x in t) to y in u \\<mapsto> s to x in t to y in u", "also"], ["proof (state)\nthis:\n  (s to x in t) to y' in ([(y, y')] \\<bullet> u) =\n  (s to x' in ([(x, x')] \\<bullet> t)) to y' in ([(y, y')] \\<bullet> u)\n\ngoal (1 subgoal):\n 1. (s to x in t) to y in u \\<mapsto> s to x in t to y in u", "have \"\\<dots> \\<mapsto> s to x' in (([(x,x')] \\<bullet> t) to y' in ([(y,y')] \\<bullet> u))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (s to x' in ([(x, x')] \\<bullet>\n                 t)) to y' in ([(y, y')] \\<bullet>\n                               u) \\<mapsto> s to x' in ([(x, x')] \\<bullet>\n                  t) to y' in ([(y, y')] \\<bullet> u)", "using x y yaux"], ["proof (prove)\nusing this:\n  x' \\<sharp> s\n  x' \\<sharp> y'\n  x' \\<sharp> y\n  x' \\<sharp> t\n  x' \\<sharp> u\n  x' \\<sharp> [(y, y')] \\<bullet> u\n  y' \\<sharp> s\n  y' \\<sharp> x\n  y' \\<sharp> t\n  y' \\<sharp> u\n  y' \\<sharp> [(x, x')] \\<bullet> t\n\ngoal (1 subgoal):\n 1. (s to x' in ([(x, x')] \\<bullet>\n                 t)) to y' in ([(y, y')] \\<bullet>\n                               u) \\<mapsto> s to x' in ([(x, x')] \\<bullet>\n                  t) to y' in ([(y, y')] \\<bullet> u)", "by (auto simp add: fresh_prod)"], ["proof (state)\nthis:\n  (s to x' in ([(x, x')] \\<bullet>\n               t)) to y' in ([(y, y')] \\<bullet>\n                             u) \\<mapsto> s to x' in ([(x, x')] \\<bullet>\n                t) to y' in ([(y, y')] \\<bullet> u)\n\ngoal (1 subgoal):\n 1. (s to x in t) to y in u \\<mapsto> s to x in t to y in u", "also"], ["proof (state)\nthis:\n  (s to x' in ([(x, x')] \\<bullet>\n               t)) to y' in ([(y, y')] \\<bullet>\n                             u) \\<mapsto> s to x' in ([(x, x')] \\<bullet>\n                t) to y' in ([(y, y')] \\<bullet> u)\n\ngoal (1 subgoal):\n 1. (s to x in t) to y in u \\<mapsto> s to x in t to y in u", "have \" \\<dots> = s to x' in (([(x,x')] \\<bullet> t) to y in u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s to x' in ([(x, x')] \\<bullet> t) to y' in ([(y, y')] \\<bullet> u) =\n    s to x' in ([(x, x')] \\<bullet> t) to y in u", "using \\<open>y' \\<sharp> u\\<close>"], ["proof (prove)\nusing this:\n  y' \\<sharp> u\n\ngoal (1 subgoal):\n 1. s to x' in ([(x, x')] \\<bullet> t) to y' in ([(y, y')] \\<bullet> u) =\n    s to x' in ([(x, x')] \\<bullet> t) to y in u", "by (simp add: abs_fun_eq1 alpha'')"], ["proof (state)\nthis:\n  s to x' in ([(x, x')] \\<bullet> t) to y' in ([(y, y')] \\<bullet> u) =\n  s to x' in ([(x, x')] \\<bullet> t) to y in u\n\ngoal (1 subgoal):\n 1. (s to x in t) to y in u \\<mapsto> s to x in t to y in u", "also"], ["proof (state)\nthis:\n  s to x' in ([(x, x')] \\<bullet> t) to y' in ([(y, y')] \\<bullet> u) =\n  s to x' in ([(x, x')] \\<bullet> t) to y in u\n\ngoal (1 subgoal):\n 1. (s to x in t) to y in u \\<mapsto> s to x in t to y in u", "have \"\\<dots> = s to x in (t to y in u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s to x' in ([(x, x')] \\<bullet> t) to y in u = s to x in t to y in u", "proof (subst trm.inject)"], ["proof (state)\ngoal (1 subgoal):\n 1. s = s \\<and> [x'].([(x, x')] \\<bullet> t) to y in u = [x].t to y in u", "from xf x"], ["proof (chain)\npicking this:\n  x \\<sharp> y\n  x \\<sharp> u\n  x' \\<sharp> s\n  x' \\<sharp> y'\n  x' \\<sharp> y\n  x' \\<sharp> t\n  x' \\<sharp> u\n  x' \\<sharp> [(y, y')] \\<bullet> u", "have swap: \"[(x,x')] \\<bullet> y = y\"   \"[(x,x')] \\<bullet> u = u \""], ["proof (prove)\nusing this:\n  x \\<sharp> y\n  x \\<sharp> u\n  x' \\<sharp> s\n  x' \\<sharp> y'\n  x' \\<sharp> y\n  x' \\<sharp> t\n  x' \\<sharp> u\n  x' \\<sharp> [(y, y')] \\<bullet> u\n\ngoal (1 subgoal):\n 1. [(x, x')] \\<bullet> y = y &&& [(x, x')] \\<bullet> u = u", "by(auto simp add: fresh_atm perm_fresh_fresh )"], ["proof (state)\nthis:\n  [(x, x')] \\<bullet> y = y\n  [(x, x')] \\<bullet> u = u\n\ngoal (1 subgoal):\n 1. s = s \\<and> [x'].([(x, x')] \\<bullet> t) to y in u = [x].t to y in u", "with x"], ["proof (chain)\npicking this:\n  x' \\<sharp> s\n  x' \\<sharp> y'\n  x' \\<sharp> y\n  x' \\<sharp> t\n  x' \\<sharp> u\n  x' \\<sharp> [(y, y')] \\<bullet> u\n  [(x, x')] \\<bullet> y = y\n  [(x, x')] \\<bullet> u = u", "show \"s = s \\<and> [x'].([(x, x')] \\<bullet> t) to y in u = [x].t to y in u\""], ["proof (prove)\nusing this:\n  x' \\<sharp> s\n  x' \\<sharp> y'\n  x' \\<sharp> y\n  x' \\<sharp> t\n  x' \\<sharp> u\n  x' \\<sharp> [(y, y')] \\<bullet> u\n  [(x, x')] \\<bullet> y = y\n  [(x, x')] \\<bullet> u = u\n\ngoal (1 subgoal):\n 1. s = s \\<and> [x'].([(x, x')] \\<bullet> t) to y in u = [x].t to y in u", "by (auto simp add: alpha''[of x' _ x] abs_fresh abs_fun_eq1 swap)"], ["proof (state)\nthis:\n  s = s \\<and> [x'].([(x, x')] \\<bullet> t) to y in u = [x].t to y in u\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  s to x' in ([(x, x')] \\<bullet> t) to y in u = s to x in t to y in u\n\ngoal (1 subgoal):\n 1. (s to x in t) to y in u \\<mapsto> s to x in t to y in u", "finally"], ["proof (chain)\npicking this:\n  (s to x in t) to y in u \\<mapsto> s to x in t to y in u", "show ?thesis"], ["proof (prove)\nusing this:\n  (s to x in t) to y in u \\<mapsto> s to x in t to y in u\n\ngoal (1 subgoal):\n 1. (s to x in t) to y in u \\<mapsto> s to x in t to y in u", "."], ["proof (state)\nthis:\n  (s to x in t) to y in u \\<mapsto> s to x in t to y in u\n\ngoal:\nNo subgoals!", "qed"], ["", "declare r10[rule del]"], ["", "text_raw \\<open>\\label{pg:alpha-end}\\<close>"], ["", "text \\<open>Since now all the introduction rules of the vc-compatible reduction\nrelation exactly match their standard counterparts, both directions of the\nadequacy proof are trivial inductions.\\<close>"], ["", "theorem adequacy: \"s \\<mapsto> t = s \\<leadsto> t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<mapsto> t = s \\<leadsto> t", "by (auto elim:reduction.induct std_reduction.induct)"], ["", "text \\<open>Next we show that the reduction relation preserves freshness and is in\nturn preserved under substitution.\\<close>"], ["", "lemma reduction_fresh: \n  fixes x::\"name\"\n  assumes r: \"t \\<mapsto> t'\"\n  shows \"x \\<sharp> t \\<Longrightarrow> x \\<sharp> t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> t \\<Longrightarrow> x \\<sharp> t'", "using r"], ["proof (prove)\nusing this:\n  t \\<mapsto> t'\n\ngoal (1 subgoal):\n 1. x \\<sharp> t \\<Longrightarrow> x \\<sharp> t'", "by(nominal_induct t t' avoiding: x rule: reduction.strong_induct)\n    (auto simp add: abs_fresh fresh_fact fresh_atm)"], ["", "lemma reduction_subst:\n  assumes a: \" t \\<mapsto> t' \"\n  shows \"t[x::=v] \\<mapsto> t'[x::=v]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t[x::=v] \\<mapsto> t'[x::=v]", "using a"], ["proof (prove)\nusing this:\n  t \\<mapsto> t'\n\ngoal (1 subgoal):\n 1. t[x::=v] \\<mapsto> t'[x::=v]", "by(nominal_induct t t' avoiding: x v rule: reduction.strong_induct)\n  (auto simp add: fresh_atm fresh_fact subst_lemma fresh_prod abs_fresh)"], ["", "(*section {* Strong Normalization *}\ntext_raw {* \\label{sec:SN-formal} *} *)"], ["", "text \\<open>Following \\cite{SN.thy}, we use an inductive variant of strong\nnormalization, as it allows for inductive proofs on terms being strongly\nnormalizing, without establishing that\nthe reduction relation is finitely branching.\\<close>"], ["", "inductive \n  SN :: \"trm \\<Rightarrow> bool\"\nwhere\n  SN_intro: \"(\\<And> t' . t \\<mapsto> t' \\<Longrightarrow> SN t') \\<Longrightarrow> SN t\""], ["", "(*\ntext {* It remains to be shown that this definition actually excludes infinite\nsequences of reductions. We define a term $t$ to be diverging, written @{term\n\"DIV t\"}, if there is some infinite sequence $S$ of reductions beginning at\n$t$. *}\n\ndefinition DIV :: \"trm \\<Rightarrow> bool\"\nwhere\n  \"DIV t \\<equiv> \\<exists> (S::nat \\<Rightarrow> trm) .  t = S 0 \\<and> (\\<forall> n . S n \\<mapsto> S (n + 1))\"\n\ntheorem \"SN t \\<Longrightarrow> \\<not> DIV t\"\nproof (induct rule:SN.induct)\n  case (SN_intro t)\n  have ih: \"\\<And>t'. t \\<mapsto> t' \\<Longrightarrow> \\<not> DIV t'\" by fact\n  moreover have \"DIV t \\<Longrightarrow> \\<exists> t' . t \\<mapsto> t' \\<and> DIV t'\"\n  proof -\n    assume \"DIV t\" from this obtain S::\"nat\\<Rightarrow>trm\" \n      where S: \"t = S 0 \\<and> (\\<forall> n . S n \\<mapsto> S (n + 1))\"\n      unfolding DIV_def .. \n    let ?t = \"S 1\" let ?S = \"\\<lambda> n . S (n + 1)\"\n    from S have \" t \\<mapsto> ?t\" by auto\n    moreover { \n      from S have \"?t = ?S 0 \\<and> (\\<forall> n . ?S n \\<mapsto> ?S (n + 1))\" by auto\n      hence \"DIV ?t\" unfolding DIV_def by auto}\n    ultimately show ?thesis by blast\n  qed\n  ultimately show \"\\<not> DIV t\" using ih by blast\nqed\n\n\ntheorem \"\\<not> SN t \\<Longrightarrow> DIV t\"\nproof -\n  fix t assume t: \"\\<not> SN t\"\n  let ?NSN = \"{ t . \\<not> SN t }\"\n  have \"\\<forall> t \\<in> ?NSN .  \\<exists> t' . t \\<mapsto> t' \\<and> \\<not> SN t'\"\n    by (auto intro: SN_intro)\n  hence \" \\<exists> f . \\<forall> t \\<in> ?NSN . t \\<mapsto> f t \\<and> \\<not> SN (f t)\"\n    by (rule bchoice)\n  from this obtain f where f: \"\\<forall> t \\<in> ?NSN . t \\<mapsto> f t \\<and> \\<not> SN (f t)\" ..\n  let ?S = \"\\<lambda> n . (f^^n) t\"\n  { fix n from t f have  \"?S n \\<mapsto> ?S (n + 1) \\<and> \\<not> SN (?S (n + 1))\"\n      by (induct n) auto }\n  hence \"t = ?S 0 \\<and> (\\<forall> n . ?S n \\<mapsto> ?S (n + 1))\" by auto\n  thus \"DIV t\" unfolding DIV_def  by(rule exI[where x=\"?S\"])\nqed\n\ntext{* For the normalization theorem, we merely need that strong normalization\nis preserved under reduction and some lemmas on normal terms. *}\n*)"], ["", "lemma SN_preserved[intro]: \n  assumes a: \"SN t\"   \"t \\<mapsto> t'\"\n  shows \"SN t'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN t'", "using a"], ["proof (prove)\nusing this:\n  SN t\n  t \\<mapsto> t'\n\ngoal (1 subgoal):\n 1. SN t'", "by (cases) (auto)"], ["", "definition \"NORMAL\" :: \"trm \\<Rightarrow> bool\"\nwhere\n  \"NORMAL t \\<equiv> \\<not>(\\<exists>t'. t \\<mapsto> t')\""], ["", "lemma normal_var: \"NORMAL (Var x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. NORMAL (Var x)", "unfolding NORMAL_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nexists>t'. Var x \\<mapsto> t'", "by (auto elim: reduction.cases)"], ["", "lemma normal_implies_sn : \"NORMAL s \\<Longrightarrow> SN s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. NORMAL s \\<Longrightarrow> SN s", "unfolding NORMAL_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nexists>t'. s \\<mapsto> t' \\<Longrightarrow> SN s", "by(auto intro: SN_intro)"], ["", "section \\<open>Stacks\\<close>"], ["", "text_raw \\<open>\\label{sec:stacks}\\<close>"], ["", "text\\<open>As explained in \\cite{TT-lifting}, the monadic type structure of\nthe $\\lambda_{ml}$-calculus does not lend itself to an easy definition of a\nlogical relation along the type structure of the calculus. Therefore, we need to\nintroduce stacks as an auxiliary notion to handle the monadic type constructor\n$T$. Stacks can be thought of as lists of term abstractions @{term \"[x].t\"}. The\nnotation for stacks is chosen with this resemblance in mind.\\<close>"], ["", "nominal_datatype stack = Id | St \"\\<guillemotleft>name\\<guillemotright>trm\" \"stack\" (\"[_]_\\<ggreater>_\")"], ["", "lemma stack_exhaust :\n  fixes c :: \"'a::fs_name\"\n  shows \"k = Id \\<or> (\\<exists> y n l  . y \\<sharp> l \\<and> y \\<sharp> c \\<and> k = [y]n\\<ggreater>l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. k = stack.Id \\<or>\n    (\\<exists>y n l.\n        y \\<sharp> l \\<and> y \\<sharp> c \\<and> k = [y]n\\<ggreater>l)", "by(nominal_induct k avoiding: c rule: stack.strong_induct) (auto)"], ["", "nominal_primrec \n  length :: \"stack \\<Rightarrow> nat\" ( \"|_|\")\nwhere\n  \"|Id| = 0\" \n| \"y \\<sharp> L \\<Longrightarrow> length ([y]n\\<ggreater>L) = 1 + |L|\""], ["proof (prove)\ngoal (9 subgoals):\n 1. finite (supp 0)\n 2. finite (supp (\\<lambda>y n L. (+) 1))\n 3. finite (supp ())\n 4. True\n 5. \\<And>x1 x2 x3 y1. True \\<Longrightarrow> True\n 6. \\<And>x1 x2 x3 y1.\n       \\<lbrakk>x1 \\<sharp> (\\<lambda>y n L. (+) 1); x1 \\<sharp> x3;\n        x1 \\<sharp> y1; x1 \\<sharp> (); finite (supp y1); True\\<rbrakk>\n       \\<Longrightarrow> x1 \\<sharp> (1 + y1)\n 7. \\<And>y n L. y \\<sharp> L \\<Longrightarrow> y \\<sharp> 0\n 8. \\<And>y n L.\n       y \\<sharp> L \\<Longrightarrow> y \\<sharp> (\\<lambda>y n L. (+) 1)\n 9. \\<And>y n L. y \\<sharp> L \\<Longrightarrow> y \\<sharp> L", "by(finite_guess+,auto simp add: fresh_nat,fresh_guess)"], ["", "text\\<open>Together with the stack datatype, we introduce the notion of dismantling\na term onto a stack. Unfortunately, the dismantling operation has no easy\nprimitive recursive formulation. The Nominal package, however, only provides a\nrecursion combinator for primitive recursion. This means that for dismantling\none has to prove pattern completeness, right uniqueness, and termination\nexplicitly.\\<close>"], ["", "function\n  dismantle :: \"trm \\<Rightarrow> stack \\<Rightarrow> trm\" (\"_ \\<star> _\" [160,160] 160)\nwhere\n  \"t \\<star> Id = t\" |\n  \"x \\<sharp> (K,t) \\<Longrightarrow> t \\<star> ([x]s\\<ggreater>K) = (t to x in s) \\<star> K\""], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>P x.\n       \\<lbrakk>\\<And>t. x = (t, stack.Id) \\<Longrightarrow> P;\n        \\<And>xa K t s.\n           \\<lbrakk>xa \\<sharp> (K, t); x = (t, [xa]s\\<ggreater>K)\\<rbrakk>\n           \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t ta. (t, stack.Id) = (ta, stack.Id) \\<Longrightarrow> t = ta\n 3. \\<And>t x K ta s.\n       \\<lbrakk>x \\<sharp> (K, ta);\n        (t, stack.Id) = (ta, [x]s\\<ggreater>K)\\<rbrakk>\n       \\<Longrightarrow> t = dismantle_sumC (ta to x in s, K)\n 4. \\<And>x K t s xa Ka ta sa.\n       \\<lbrakk>x \\<sharp> (K, t); xa \\<sharp> (Ka, ta);\n        (t, [x]s\\<ggreater>K) = (ta, [xa]sa\\<ggreater>Ka)\\<rbrakk>\n       \\<Longrightarrow> dismantle_sumC (t to x in s, K) =\n                         dismantle_sumC (ta to xa in sa, Ka)", "proof -    \\<comment> \\<open>pattern completeness\\<close>"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>P x.\n       \\<lbrakk>\\<And>t. x = (t, stack.Id) \\<Longrightarrow> P;\n        \\<And>xa K t s.\n           \\<lbrakk>xa \\<sharp> (K, t); x = (t, [xa]s\\<ggreater>K)\\<rbrakk>\n           \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t ta. (t, stack.Id) = (ta, stack.Id) \\<Longrightarrow> t = ta\n 3. \\<And>t x K ta s.\n       \\<lbrakk>x \\<sharp> (K, ta);\n        (t, stack.Id) = (ta, [x]s\\<ggreater>K)\\<rbrakk>\n       \\<Longrightarrow> t = dismantle_sumC (ta to x in s, K)\n 4. \\<And>x K t s xa Ka ta sa.\n       \\<lbrakk>x \\<sharp> (K, t); xa \\<sharp> (Ka, ta);\n        (t, [x]s\\<ggreater>K) = (ta, [xa]sa\\<ggreater>Ka)\\<rbrakk>\n       \\<Longrightarrow> dismantle_sumC (t to x in s, K) =\n                         dismantle_sumC (ta to xa in sa, Ka)", "fix P :: bool and arg::\"trm \\<times> stack\""], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>P x.\n       \\<lbrakk>\\<And>t. x = (t, stack.Id) \\<Longrightarrow> P;\n        \\<And>xa K t s.\n           \\<lbrakk>xa \\<sharp> (K, t); x = (t, [xa]s\\<ggreater>K)\\<rbrakk>\n           \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t ta. (t, stack.Id) = (ta, stack.Id) \\<Longrightarrow> t = ta\n 3. \\<And>t x K ta s.\n       \\<lbrakk>x \\<sharp> (K, ta);\n        (t, stack.Id) = (ta, [x]s\\<ggreater>K)\\<rbrakk>\n       \\<Longrightarrow> t = dismantle_sumC (ta to x in s, K)\n 4. \\<And>x K t s xa Ka ta sa.\n       \\<lbrakk>x \\<sharp> (K, t); xa \\<sharp> (Ka, ta);\n        (t, [x]s\\<ggreater>K) = (ta, [xa]sa\\<ggreater>Ka)\\<rbrakk>\n       \\<Longrightarrow> dismantle_sumC (t to x in s, K) =\n                         dismantle_sumC (ta to xa in sa, Ka)", "assume id: \"\\<And>t. arg = (t, stack.Id) \\<Longrightarrow> P\"\n    and st: \"\\<And>x K t s. \\<lbrakk>x \\<sharp> (K, t); arg = (t, [x]s\\<ggreater>K)\\<rbrakk> \\<Longrightarrow> P\""], ["proof (state)\nthis:\n  arg = (?t, stack.Id) \\<Longrightarrow> P\n  \\<lbrakk>?x \\<sharp> (?K, ?t); arg = (?t, [?x]?s\\<ggreater>?K)\\<rbrakk>\n  \\<Longrightarrow> P\n\ngoal (4 subgoals):\n 1. \\<And>P x.\n       \\<lbrakk>\\<And>t. x = (t, stack.Id) \\<Longrightarrow> P;\n        \\<And>xa K t s.\n           \\<lbrakk>xa \\<sharp> (K, t); x = (t, [xa]s\\<ggreater>K)\\<rbrakk>\n           \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t ta. (t, stack.Id) = (ta, stack.Id) \\<Longrightarrow> t = ta\n 3. \\<And>t x K ta s.\n       \\<lbrakk>x \\<sharp> (K, ta);\n        (t, stack.Id) = (ta, [x]s\\<ggreater>K)\\<rbrakk>\n       \\<Longrightarrow> t = dismantle_sumC (ta to x in s, K)\n 4. \\<And>x K t s xa Ka ta sa.\n       \\<lbrakk>x \\<sharp> (K, t); xa \\<sharp> (Ka, ta);\n        (t, [x]s\\<ggreater>K) = (ta, [xa]sa\\<ggreater>Ka)\\<rbrakk>\n       \\<Longrightarrow> dismantle_sumC (t to x in s, K) =\n                         dismantle_sumC (ta to xa in sa, Ka)", "{"], ["proof (state)\nthis:\n  arg = (?t, stack.Id) \\<Longrightarrow> P\n  \\<lbrakk>?x \\<sharp> (?K, ?t); arg = (?t, [?x]?s\\<ggreater>?K)\\<rbrakk>\n  \\<Longrightarrow> P\n\ngoal (4 subgoals):\n 1. \\<And>P x.\n       \\<lbrakk>\\<And>t. x = (t, stack.Id) \\<Longrightarrow> P;\n        \\<And>xa K t s.\n           \\<lbrakk>xa \\<sharp> (K, t); x = (t, [xa]s\\<ggreater>K)\\<rbrakk>\n           \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t ta. (t, stack.Id) = (ta, stack.Id) \\<Longrightarrow> t = ta\n 3. \\<And>t x K ta s.\n       \\<lbrakk>x \\<sharp> (K, ta);\n        (t, stack.Id) = (ta, [x]s\\<ggreater>K)\\<rbrakk>\n       \\<Longrightarrow> t = dismantle_sumC (ta to x in s, K)\n 4. \\<And>x K t s xa Ka ta sa.\n       \\<lbrakk>x \\<sharp> (K, t); xa \\<sharp> (Ka, ta);\n        (t, [x]s\\<ggreater>K) = (ta, [xa]sa\\<ggreater>Ka)\\<rbrakk>\n       \\<Longrightarrow> dismantle_sumC (t to x in s, K) =\n                         dismantle_sumC (ta to xa in sa, Ka)", "assume \"snd arg = Id\""], ["proof (state)\nthis:\n  snd arg = stack.Id\n\ngoal (4 subgoals):\n 1. \\<And>P x.\n       \\<lbrakk>\\<And>t. x = (t, stack.Id) \\<Longrightarrow> P;\n        \\<And>xa K t s.\n           \\<lbrakk>xa \\<sharp> (K, t); x = (t, [xa]s\\<ggreater>K)\\<rbrakk>\n           \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t ta. (t, stack.Id) = (ta, stack.Id) \\<Longrightarrow> t = ta\n 3. \\<And>t x K ta s.\n       \\<lbrakk>x \\<sharp> (K, ta);\n        (t, stack.Id) = (ta, [x]s\\<ggreater>K)\\<rbrakk>\n       \\<Longrightarrow> t = dismantle_sumC (ta to x in s, K)\n 4. \\<And>x K t s xa Ka ta sa.\n       \\<lbrakk>x \\<sharp> (K, t); xa \\<sharp> (Ka, ta);\n        (t, [x]s\\<ggreater>K) = (ta, [xa]sa\\<ggreater>Ka)\\<rbrakk>\n       \\<Longrightarrow> dismantle_sumC (t to x in s, K) =\n                         dismantle_sumC (ta to xa in sa, Ka)", "hence P"], ["proof (prove)\nusing this:\n  snd arg = stack.Id\n\ngoal (1 subgoal):\n 1. P", "by (metis id[where t=\"fst arg\"] surjective_pairing)"], ["proof (state)\nthis:\n  P\n\ngoal (4 subgoals):\n 1. \\<And>P x.\n       \\<lbrakk>\\<And>t. x = (t, stack.Id) \\<Longrightarrow> P;\n        \\<And>xa K t s.\n           \\<lbrakk>xa \\<sharp> (K, t); x = (t, [xa]s\\<ggreater>K)\\<rbrakk>\n           \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t ta. (t, stack.Id) = (ta, stack.Id) \\<Longrightarrow> t = ta\n 3. \\<And>t x K ta s.\n       \\<lbrakk>x \\<sharp> (K, ta);\n        (t, stack.Id) = (ta, [x]s\\<ggreater>K)\\<rbrakk>\n       \\<Longrightarrow> t = dismantle_sumC (ta to x in s, K)\n 4. \\<And>x K t s xa Ka ta sa.\n       \\<lbrakk>x \\<sharp> (K, t); xa \\<sharp> (Ka, ta);\n        (t, [x]s\\<ggreater>K) = (ta, [xa]sa\\<ggreater>Ka)\\<rbrakk>\n       \\<Longrightarrow> dismantle_sumC (t to x in s, K) =\n                         dismantle_sumC (ta to xa in sa, Ka)", "}"], ["proof (state)\nthis:\n  snd arg = stack.Id \\<Longrightarrow> P\n\ngoal (4 subgoals):\n 1. \\<And>P x.\n       \\<lbrakk>\\<And>t. x = (t, stack.Id) \\<Longrightarrow> P;\n        \\<And>xa K t s.\n           \\<lbrakk>xa \\<sharp> (K, t); x = (t, [xa]s\\<ggreater>K)\\<rbrakk>\n           \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t ta. (t, stack.Id) = (ta, stack.Id) \\<Longrightarrow> t = ta\n 3. \\<And>t x K ta s.\n       \\<lbrakk>x \\<sharp> (K, ta);\n        (t, stack.Id) = (ta, [x]s\\<ggreater>K)\\<rbrakk>\n       \\<Longrightarrow> t = dismantle_sumC (ta to x in s, K)\n 4. \\<And>x K t s xa Ka ta sa.\n       \\<lbrakk>x \\<sharp> (K, t); xa \\<sharp> (Ka, ta);\n        (t, [x]s\\<ggreater>K) = (ta, [xa]sa\\<ggreater>Ka)\\<rbrakk>\n       \\<Longrightarrow> dismantle_sumC (t to x in s, K) =\n                         dismantle_sumC (ta to xa in sa, Ka)", "moreover"], ["proof (state)\nthis:\n  snd arg = stack.Id \\<Longrightarrow> P\n\ngoal (4 subgoals):\n 1. \\<And>P x.\n       \\<lbrakk>\\<And>t. x = (t, stack.Id) \\<Longrightarrow> P;\n        \\<And>xa K t s.\n           \\<lbrakk>xa \\<sharp> (K, t); x = (t, [xa]s\\<ggreater>K)\\<rbrakk>\n           \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t ta. (t, stack.Id) = (ta, stack.Id) \\<Longrightarrow> t = ta\n 3. \\<And>t x K ta s.\n       \\<lbrakk>x \\<sharp> (K, ta);\n        (t, stack.Id) = (ta, [x]s\\<ggreater>K)\\<rbrakk>\n       \\<Longrightarrow> t = dismantle_sumC (ta to x in s, K)\n 4. \\<And>x K t s xa Ka ta sa.\n       \\<lbrakk>x \\<sharp> (K, t); xa \\<sharp> (Ka, ta);\n        (t, [x]s\\<ggreater>K) = (ta, [xa]sa\\<ggreater>Ka)\\<rbrakk>\n       \\<Longrightarrow> dismantle_sumC (t to x in s, K) =\n                         dismantle_sumC (ta to xa in sa, Ka)", "{"], ["proof (state)\nthis:\n  snd arg = stack.Id \\<Longrightarrow> P\n\ngoal (4 subgoals):\n 1. \\<And>P x.\n       \\<lbrakk>\\<And>t. x = (t, stack.Id) \\<Longrightarrow> P;\n        \\<And>xa K t s.\n           \\<lbrakk>xa \\<sharp> (K, t); x = (t, [xa]s\\<ggreater>K)\\<rbrakk>\n           \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t ta. (t, stack.Id) = (ta, stack.Id) \\<Longrightarrow> t = ta\n 3. \\<And>t x K ta s.\n       \\<lbrakk>x \\<sharp> (K, ta);\n        (t, stack.Id) = (ta, [x]s\\<ggreater>K)\\<rbrakk>\n       \\<Longrightarrow> t = dismantle_sumC (ta to x in s, K)\n 4. \\<And>x K t s xa Ka ta sa.\n       \\<lbrakk>x \\<sharp> (K, t); xa \\<sharp> (Ka, ta);\n        (t, [x]s\\<ggreater>K) = (ta, [xa]sa\\<ggreater>Ka)\\<rbrakk>\n       \\<Longrightarrow> dismantle_sumC (t to x in s, K) =\n                         dismantle_sumC (ta to xa in sa, Ka)", "fix y n L"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>P x.\n       \\<lbrakk>\\<And>t. x = (t, stack.Id) \\<Longrightarrow> P;\n        \\<And>xa K t s.\n           \\<lbrakk>xa \\<sharp> (K, t); x = (t, [xa]s\\<ggreater>K)\\<rbrakk>\n           \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t ta. (t, stack.Id) = (ta, stack.Id) \\<Longrightarrow> t = ta\n 3. \\<And>t x K ta s.\n       \\<lbrakk>x \\<sharp> (K, ta);\n        (t, stack.Id) = (ta, [x]s\\<ggreater>K)\\<rbrakk>\n       \\<Longrightarrow> t = dismantle_sumC (ta to x in s, K)\n 4. \\<And>x K t s xa Ka ta sa.\n       \\<lbrakk>x \\<sharp> (K, t); xa \\<sharp> (Ka, ta);\n        (t, [x]s\\<ggreater>K) = (ta, [xa]sa\\<ggreater>Ka)\\<rbrakk>\n       \\<Longrightarrow> dismantle_sumC (t to x in s, K) =\n                         dismantle_sumC (ta to xa in sa, Ka)", "assume \"snd arg = [y]n\\<ggreater>L\"   \"y \\<sharp> (L, fst arg)\""], ["proof (state)\nthis:\n  snd arg = [y]n\\<ggreater>L\n  y \\<sharp> (L, fst arg)\n\ngoal (4 subgoals):\n 1. \\<And>P x.\n       \\<lbrakk>\\<And>t. x = (t, stack.Id) \\<Longrightarrow> P;\n        \\<And>xa K t s.\n           \\<lbrakk>xa \\<sharp> (K, t); x = (t, [xa]s\\<ggreater>K)\\<rbrakk>\n           \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t ta. (t, stack.Id) = (ta, stack.Id) \\<Longrightarrow> t = ta\n 3. \\<And>t x K ta s.\n       \\<lbrakk>x \\<sharp> (K, ta);\n        (t, stack.Id) = (ta, [x]s\\<ggreater>K)\\<rbrakk>\n       \\<Longrightarrow> t = dismantle_sumC (ta to x in s, K)\n 4. \\<And>x K t s xa Ka ta sa.\n       \\<lbrakk>x \\<sharp> (K, t); xa \\<sharp> (Ka, ta);\n        (t, [x]s\\<ggreater>K) = (ta, [xa]sa\\<ggreater>Ka)\\<rbrakk>\n       \\<Longrightarrow> dismantle_sumC (t to x in s, K) =\n                         dismantle_sumC (ta to xa in sa, Ka)", "hence P"], ["proof (prove)\nusing this:\n  snd arg = [y]n\\<ggreater>L\n  y \\<sharp> (L, fst arg)\n\ngoal (1 subgoal):\n 1. P", "by (metis st[where t=\"fst arg\"] surjective_pairing)"], ["proof (state)\nthis:\n  P\n\ngoal (4 subgoals):\n 1. \\<And>P x.\n       \\<lbrakk>\\<And>t. x = (t, stack.Id) \\<Longrightarrow> P;\n        \\<And>xa K t s.\n           \\<lbrakk>xa \\<sharp> (K, t); x = (t, [xa]s\\<ggreater>K)\\<rbrakk>\n           \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t ta. (t, stack.Id) = (ta, stack.Id) \\<Longrightarrow> t = ta\n 3. \\<And>t x K ta s.\n       \\<lbrakk>x \\<sharp> (K, ta);\n        (t, stack.Id) = (ta, [x]s\\<ggreater>K)\\<rbrakk>\n       \\<Longrightarrow> t = dismantle_sumC (ta to x in s, K)\n 4. \\<And>x K t s xa Ka ta sa.\n       \\<lbrakk>x \\<sharp> (K, t); xa \\<sharp> (Ka, ta);\n        (t, [x]s\\<ggreater>K) = (ta, [xa]sa\\<ggreater>Ka)\\<rbrakk>\n       \\<Longrightarrow> dismantle_sumC (t to x in s, K) =\n                         dismantle_sumC (ta to xa in sa, Ka)", "}"], ["proof (state)\nthis:\n  \\<lbrakk>snd arg = [?y2]?n2\\<ggreater>?L2;\n   ?y2 \\<sharp> (?L2, fst arg)\\<rbrakk>\n  \\<Longrightarrow> P\n\ngoal (4 subgoals):\n 1. \\<And>P x.\n       \\<lbrakk>\\<And>t. x = (t, stack.Id) \\<Longrightarrow> P;\n        \\<And>xa K t s.\n           \\<lbrakk>xa \\<sharp> (K, t); x = (t, [xa]s\\<ggreater>K)\\<rbrakk>\n           \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t ta. (t, stack.Id) = (ta, stack.Id) \\<Longrightarrow> t = ta\n 3. \\<And>t x K ta s.\n       \\<lbrakk>x \\<sharp> (K, ta);\n        (t, stack.Id) = (ta, [x]s\\<ggreater>K)\\<rbrakk>\n       \\<Longrightarrow> t = dismantle_sumC (ta to x in s, K)\n 4. \\<And>x K t s xa Ka ta sa.\n       \\<lbrakk>x \\<sharp> (K, t); xa \\<sharp> (Ka, ta);\n        (t, [x]s\\<ggreater>K) = (ta, [xa]sa\\<ggreater>Ka)\\<rbrakk>\n       \\<Longrightarrow> dismantle_sumC (t to x in s, K) =\n                         dismantle_sumC (ta to xa in sa, Ka)", "ultimately"], ["proof (chain)\npicking this:\n  snd arg = stack.Id \\<Longrightarrow> P\n  \\<lbrakk>snd arg = [?y2]?n2\\<ggreater>?L2;\n   ?y2 \\<sharp> (?L2, fst arg)\\<rbrakk>\n  \\<Longrightarrow> P", "show P"], ["proof (prove)\nusing this:\n  snd arg = stack.Id \\<Longrightarrow> P\n  \\<lbrakk>snd arg = [?y2]?n2\\<ggreater>?L2;\n   ?y2 \\<sharp> (?L2, fst arg)\\<rbrakk>\n  \\<Longrightarrow> P\n\ngoal (1 subgoal):\n 1. P", "using stack_exhaust[of   \"snd arg\"   \"fst arg\"]"], ["proof (prove)\nusing this:\n  snd arg = stack.Id \\<Longrightarrow> P\n  \\<lbrakk>snd arg = [?y2]?n2\\<ggreater>?L2;\n   ?y2 \\<sharp> (?L2, fst arg)\\<rbrakk>\n  \\<Longrightarrow> P\n  snd arg = stack.Id \\<or>\n  (\\<exists>y n l.\n      y \\<sharp> l \\<and>\n      y \\<sharp> fst arg \\<and> snd arg = [y]n\\<ggreater>l)\n\ngoal (1 subgoal):\n 1. P", "by auto"], ["proof (state)\nthis:\n  P\n\ngoal (3 subgoals):\n 1. \\<And>t ta. (t, stack.Id) = (ta, stack.Id) \\<Longrightarrow> t = ta\n 2. \\<And>t x K ta s.\n       \\<lbrakk>x \\<sharp> (K, ta);\n        (t, stack.Id) = (ta, [x]s\\<ggreater>K)\\<rbrakk>\n       \\<Longrightarrow> t = dismantle_sumC (ta to x in s, K)\n 3. \\<And>x K t s xa Ka ta sa.\n       \\<lbrakk>x \\<sharp> (K, t); xa \\<sharp> (Ka, ta);\n        (t, [x]s\\<ggreater>K) = (ta, [xa]sa\\<ggreater>Ka)\\<rbrakk>\n       \\<Longrightarrow> dismantle_sumC (t to x in s, K) =\n                         dismantle_sumC (ta to xa in sa, Ka)", "next\n    \\<comment> \\<open>right uniqueness\\<close>\n    \\<comment> \\<open>only the case of the second equation matching both args needs to be\nshown.\\<close>"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>t ta. (t, stack.Id) = (ta, stack.Id) \\<Longrightarrow> t = ta\n 2. \\<And>t x K ta s.\n       \\<lbrakk>x \\<sharp> (K, ta);\n        (t, stack.Id) = (ta, [x]s\\<ggreater>K)\\<rbrakk>\n       \\<Longrightarrow> t = dismantle_sumC (ta to x in s, K)\n 3. \\<And>x K t s xa Ka ta sa.\n       \\<lbrakk>x \\<sharp> (K, t); xa \\<sharp> (Ka, ta);\n        (t, [x]s\\<ggreater>K) = (ta, [xa]sa\\<ggreater>Ka)\\<rbrakk>\n       \\<Longrightarrow> dismantle_sumC (t to x in s, K) =\n                         dismantle_sumC (ta to xa in sa, Ka)", "fix t t' :: trm and x x' :: name and s s' :: trm and K K' :: stack"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>t ta. (t, stack.Id) = (ta, stack.Id) \\<Longrightarrow> t = ta\n 2. \\<And>t x K ta s.\n       \\<lbrakk>x \\<sharp> (K, ta);\n        (t, stack.Id) = (ta, [x]s\\<ggreater>K)\\<rbrakk>\n       \\<Longrightarrow> t = dismantle_sumC (ta to x in s, K)\n 3. \\<And>x K t s xa Ka ta sa.\n       \\<lbrakk>x \\<sharp> (K, t); xa \\<sharp> (Ka, ta);\n        (t, [x]s\\<ggreater>K) = (ta, [xa]sa\\<ggreater>Ka)\\<rbrakk>\n       \\<Longrightarrow> dismantle_sumC (t to x in s, K) =\n                         dismantle_sumC (ta to xa in sa, Ka)", "let ?g = dismantle_sumC \\<comment> \\<open>graph of dismantle\\<close>"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>t ta. (t, stack.Id) = (ta, stack.Id) \\<Longrightarrow> t = ta\n 2. \\<And>t x K ta s.\n       \\<lbrakk>x \\<sharp> (K, ta);\n        (t, stack.Id) = (ta, [x]s\\<ggreater>K)\\<rbrakk>\n       \\<Longrightarrow> t = dismantle_sumC (ta to x in s, K)\n 3. \\<And>x K t s xa Ka ta sa.\n       \\<lbrakk>x \\<sharp> (K, t); xa \\<sharp> (Ka, ta);\n        (t, [x]s\\<ggreater>K) = (ta, [xa]sa\\<ggreater>Ka)\\<rbrakk>\n       \\<Longrightarrow> dismantle_sumC (t to x in s, K) =\n                         dismantle_sumC (ta to xa in sa, Ka)", "assume \"x \\<sharp> (K, t)\"   \"x' \\<sharp> (K', t')\" \n    and  \"(t, [x]s\\<ggreater>K) = (t', [x']s'\\<ggreater>K')\""], ["proof (state)\nthis:\n  x \\<sharp> (K, t)\n  x' \\<sharp> (K', t')\n  (t, [x]s\\<ggreater>K) = (t', [x']s'\\<ggreater>K')\n\ngoal (3 subgoals):\n 1. \\<And>t ta. (t, stack.Id) = (ta, stack.Id) \\<Longrightarrow> t = ta\n 2. \\<And>t x K ta s.\n       \\<lbrakk>x \\<sharp> (K, ta);\n        (t, stack.Id) = (ta, [x]s\\<ggreater>K)\\<rbrakk>\n       \\<Longrightarrow> t = dismantle_sumC (ta to x in s, K)\n 3. \\<And>x K t s xa Ka ta sa.\n       \\<lbrakk>x \\<sharp> (K, t); xa \\<sharp> (Ka, ta);\n        (t, [x]s\\<ggreater>K) = (ta, [xa]sa\\<ggreater>Ka)\\<rbrakk>\n       \\<Longrightarrow> dismantle_sumC (t to x in s, K) =\n                         dismantle_sumC (ta to xa in sa, Ka)", "thus \"?g (t to x in s, K) = ?g (t' to x' in s', K')\""], ["proof (prove)\nusing this:\n  x \\<sharp> (K, t)\n  x' \\<sharp> (K', t')\n  (t, [x]s\\<ggreater>K) = (t', [x']s'\\<ggreater>K')\n\ngoal (1 subgoal):\n 1. dismantle_sumC (t to x in s, K) = dismantle_sumC (t' to x' in s', K')", "by (auto intro!: arg_cong[where f=\"?g\"] simp add: stack.inject)"], ["proof (state)\nthis:\n  dismantle_sumC (t to x in s, K) = dismantle_sumC (t' to x' in s', K')\n\ngoal (2 subgoals):\n 1. \\<And>t ta. (t, stack.Id) = (ta, stack.Id) \\<Longrightarrow> t = ta\n 2. \\<And>t x K ta s.\n       \\<lbrakk>x \\<sharp> (K, ta);\n        (t, stack.Id) = (ta, [x]s\\<ggreater>K)\\<rbrakk>\n       \\<Longrightarrow> t = dismantle_sumC (ta to x in s, K)", "qed (simp_all add: stack.inject) \\<comment> \\<open>all other cases are trivial\\<close>"], ["", "termination dismantle"], ["proof (prove)\ngoal (1 subgoal):\n 1. All dismantle_dom", "by(relation \"measure (\\<lambda>(t,K). |K| )\")(auto)"], ["", "text\\<open>Like all our constructions, dismantling is equivariant. Also, freshness\ncan be pushed over dismantling, and the freshness requirement in the second\ndefining equation is not needed\\<close>"], ["", "lemma dismantle_eqvt[eqvt]:\n  fixes pi :: \"(name \\<times> name) list\"\n  shows \"pi \\<bullet> (t \\<star> K) =  (pi \\<bullet> t) \\<star> (pi \\<bullet> K)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. pi \\<bullet> t \\<star> K = (pi \\<bullet> t) \\<star> (pi \\<bullet> K)", "by(nominal_induct K avoiding: pi t rule:stack.strong_induct)\n  (auto simp add: eqvts fresh_bij)"], ["", "lemma dismantle_fresh[iff]:\n  fixes  x :: name\n  shows \"(x \\<sharp> (t \\<star> k)) = (x \\<sharp> t \\<and> x \\<sharp> k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> t \\<star> k = (x \\<sharp> t \\<and> x \\<sharp> k)", "by(nominal_induct k avoiding: t x rule: stack.strong_induct) \n  (simp_all)"], ["", "lemma dismantle_simp[simp]: \"s \\<star> [y]n\\<ggreater>L = (s to y in n) \\<star> L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<star> [y]n\\<ggreater>L = (s to y in n) \\<star> L", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. s \\<star> [y]n\\<ggreater>L = (s to y in n) \\<star> L", "obtain x::name where f: \"x \\<sharp> s\"   \"x \\<sharp> L\"   \"x \\<sharp> n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<sharp> s; x \\<sharp> L; x \\<sharp> n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using ex_fresh[of \"(s,L,n)\"]"], ["proof (prove)\nusing this:\n  \\<exists>c. c \\<sharp> (s, L, n)\n\ngoal (1 subgoal):\n 1. (\\<And>x.\n        \\<lbrakk>x \\<sharp> s; x \\<sharp> L; x \\<sharp> n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto simp add:fresh_prod)"], ["proof (state)\nthis:\n  x \\<sharp> s\n  x \\<sharp> L\n  x \\<sharp> n\n\ngoal (1 subgoal):\n 1. s \\<star> [y]n\\<ggreater>L = (s to y in n) \\<star> L", "hence t: \"s to y in n = s to x in ([(y,x)] \\<bullet> n)\""], ["proof (prove)\nusing this:\n  x \\<sharp> s\n  x \\<sharp> L\n  x \\<sharp> n\n\ngoal (1 subgoal):\n 1. s to y in n = s to x in ([(y, x)] \\<bullet> n)", "by(auto simp add: alpha'')"], ["proof (state)\nthis:\n  s to y in n = s to x in ([(y, x)] \\<bullet> n)\n\ngoal (1 subgoal):\n 1. s \\<star> [y]n\\<ggreater>L = (s to y in n) \\<star> L", "from f"], ["proof (chain)\npicking this:\n  x \\<sharp> s\n  x \\<sharp> L\n  x \\<sharp> n", "have \"[y]n\\<ggreater>L = [x]([(y,x)] \\<bullet> n)\\<ggreater>L\""], ["proof (prove)\nusing this:\n  x \\<sharp> s\n  x \\<sharp> L\n  x \\<sharp> n\n\ngoal (1 subgoal):\n 1. [y]n\\<ggreater>L = [x][(y, x)] \\<bullet> n\\<ggreater>L", "by (auto simp add: stack.inject alpha'')"], ["proof (state)\nthis:\n  [y]n\\<ggreater>L = [x][(y, x)] \\<bullet> n\\<ggreater>L\n\ngoal (1 subgoal):\n 1. s \\<star> [y]n\\<ggreater>L = (s to y in n) \\<star> L", "hence \"s \\<star> [y]n\\<ggreater>L = s \\<star> [x]([(y,x)] \\<bullet> n)\\<ggreater>L\""], ["proof (prove)\nusing this:\n  [y]n\\<ggreater>L = [x][(y, x)] \\<bullet> n\\<ggreater>L\n\ngoal (1 subgoal):\n 1. s \\<star> [y]n\\<ggreater>L =\n    s \\<star> [x][(y, x)] \\<bullet> n\\<ggreater>L", "by simp"], ["proof (state)\nthis:\n  s \\<star> [y]n\\<ggreater>L = s \\<star> [x][(y, x)] \\<bullet> n\\<ggreater>L\n\ngoal (1 subgoal):\n 1. s \\<star> [y]n\\<ggreater>L = (s to y in n) \\<star> L", "also"], ["proof (state)\nthis:\n  s \\<star> [y]n\\<ggreater>L = s \\<star> [x][(y, x)] \\<bullet> n\\<ggreater>L\n\ngoal (1 subgoal):\n 1. s \\<star> [y]n\\<ggreater>L = (s to y in n) \\<star> L", "have \" \\<dots> = (s to y in n) \\<star> L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s \\<star> [x][(y, x)] \\<bullet> n\\<ggreater>L = (s to y in n) \\<star> L", "using f t"], ["proof (prove)\nusing this:\n  x \\<sharp> s\n  x \\<sharp> L\n  x \\<sharp> n\n  s to y in n = s to x in ([(y, x)] \\<bullet> n)\n\ngoal (1 subgoal):\n 1. s \\<star> [x][(y, x)] \\<bullet> n\\<ggreater>L = (s to y in n) \\<star> L", "by(simp del:trm.inject)"], ["proof (state)\nthis:\n  s \\<star> [x][(y, x)] \\<bullet> n\\<ggreater>L = (s to y in n) \\<star> L\n\ngoal (1 subgoal):\n 1. s \\<star> [y]n\\<ggreater>L = (s to y in n) \\<star> L", "finally"], ["proof (chain)\npicking this:\n  s \\<star> [y]n\\<ggreater>L = (s to y in n) \\<star> L", "show ?thesis"], ["proof (prove)\nusing this:\n  s \\<star> [y]n\\<ggreater>L = (s to y in n) \\<star> L\n\ngoal (1 subgoal):\n 1. s \\<star> [y]n\\<ggreater>L = (s to y in n) \\<star> L", "."], ["proof (state)\nthis:\n  s \\<star> [y]n\\<ggreater>L = (s to y in n) \\<star> L\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>We also need a notion of reduction on stacks. This reduction relation\nallows us to define strong normalization not only for terms but also for stacks\nand is needed to prove the properties of the logical relation later on.\\<close>"], ["", "definition stack_reduction :: \"stack \\<Rightarrow> stack \\<Rightarrow> bool\" (\" _ \\<mapsto> _ \")\nwhere\n  \"k \\<mapsto> k' \\<equiv> \\<forall> (t::trm) . (t \\<star> k)  \\<mapsto> (t \\<star> k')\""], ["", "lemma stack_reduction_fresh:\n  fixes k :: stack  and x :: name\n  assumes r : \"k \\<mapsto> k'\" and f :\"x \\<sharp> k\"\n  shows \"x \\<sharp> k'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> k'", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. x \\<sharp> k'", "from ex_fresh[of x]"], ["proof (chain)\npicking this:\n  \\<exists>c. c \\<sharp> x", "obtain z::name where f': \"z \\<sharp> x\""], ["proof (prove)\nusing this:\n  \\<exists>c. c \\<sharp> x\n\ngoal (1 subgoal):\n 1. (\\<And>z. z \\<sharp> x \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", ".."], ["proof (state)\nthis:\n  z \\<sharp> x\n\ngoal (1 subgoal):\n 1. x \\<sharp> k'", "from r"], ["proof (chain)\npicking this:\n   k \\<mapsto> k'", "have \"Var z \\<star> k \\<mapsto> Var z \\<star> k'\""], ["proof (prove)\nusing this:\n   k \\<mapsto> k' \n\ngoal (1 subgoal):\n 1. Var z \\<star> k \\<mapsto> Var z \\<star> k'", "unfolding stack_reduction_def"], ["proof (prove)\nusing this:\n  \\<forall>t. t \\<star> k \\<mapsto> t \\<star> k'\n\ngoal (1 subgoal):\n 1. Var z \\<star> k \\<mapsto> Var z \\<star> k'", ".."], ["proof (state)\nthis:\n  Var z \\<star> k \\<mapsto> Var z \\<star> k'\n\ngoal (1 subgoal):\n 1. x \\<sharp> k'", "moreover"], ["proof (state)\nthis:\n  Var z \\<star> k \\<mapsto> Var z \\<star> k'\n\ngoal (1 subgoal):\n 1. x \\<sharp> k'", "from f f'"], ["proof (chain)\npicking this:\n  x \\<sharp> k\n  z \\<sharp> x", "have \"x \\<sharp> Var z \\<star> k\""], ["proof (prove)\nusing this:\n  x \\<sharp> k\n  z \\<sharp> x\n\ngoal (1 subgoal):\n 1. x \\<sharp> Var z \\<star> k", "by(auto simp add: fresh_atm)"], ["proof (state)\nthis:\n  x \\<sharp> Var z \\<star> k\n\ngoal (1 subgoal):\n 1. x \\<sharp> k'", "ultimately"], ["proof (chain)\npicking this:\n  Var z \\<star> k \\<mapsto> Var z \\<star> k'\n  x \\<sharp> Var z \\<star> k", "have \"x \\<sharp> Var z \\<star> k'\""], ["proof (prove)\nusing this:\n  Var z \\<star> k \\<mapsto> Var z \\<star> k'\n  x \\<sharp> Var z \\<star> k\n\ngoal (1 subgoal):\n 1. x \\<sharp> Var z \\<star> k'", "by(rule reduction_fresh)"], ["proof (state)\nthis:\n  x \\<sharp> Var z \\<star> k'\n\ngoal (1 subgoal):\n 1. x \\<sharp> k'", "thus \"x \\<sharp> k'\""], ["proof (prove)\nusing this:\n  x \\<sharp> Var z \\<star> k'\n\ngoal (1 subgoal):\n 1. x \\<sharp> k'", "by simp"], ["proof (state)\nthis:\n  x \\<sharp> k'\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma dismantle_red[intro]:\n  fixes m :: trm\n  assumes r: \" m \\<mapsto> m'\"\n  shows \"m \\<star> k \\<mapsto> m' \\<star> k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m \\<star> k \\<mapsto> m' \\<star> k", "using r"], ["proof (prove)\nusing this:\n  m \\<mapsto> m'\n\ngoal (1 subgoal):\n 1. m \\<star> k \\<mapsto> m' \\<star> k", "by (nominal_induct k avoiding: m m' rule:stack.strong_induct) auto"], ["", "text \\<open>Next we define a substitution operation for stacks. The main purpose of\nthis is to distribute substitution over dismantling.\\<close>"], ["", "nominal_primrec\n  ssubst :: \"name \\<Rightarrow> trm \\<Rightarrow> stack \\<Rightarrow> stack\" \nwhere\n    \"ssubst x v Id = Id\"\n  | \" y \\<sharp> (k,x,v)  \\<Longrightarrow> ssubst x v ([y]n\\<ggreater>k) = [y](n[x::=v])\\<ggreater>(ssubst x v k)\""], ["proof (prove)\ngoal (9 subgoals):\n 1. finite (supp stack.Id)\n 2. finite (supp (\\<lambda>y n k. St y (n[x::=v])))\n 3. finite (supp ())\n 4. True\n 5. \\<And>x1 x2 x3 y1. True \\<Longrightarrow> True\n 6. \\<And>x1 x2 x3 y1.\n       \\<lbrakk>x1 \\<sharp> (\\<lambda>y n k. St y (n[x::=v]));\n        x1 \\<sharp> x3; x1 \\<sharp> y1; x1 \\<sharp> (); finite (supp y1);\n        True\\<rbrakk>\n       \\<Longrightarrow> x1 \\<sharp> [x1]x2[x::=v]\\<ggreater>y1\n 7. \\<And>y n k. y \\<sharp> (k, x, v) \\<Longrightarrow> y \\<sharp> stack.Id\n 8. \\<And>y n k.\n       y \\<sharp> (k, x, v) \\<Longrightarrow>\n       y \\<sharp> (\\<lambda>y n k. St y (n[x::=v]))\n 9. \\<And>y n k. y \\<sharp> (k, x, v) \\<Longrightarrow> y \\<sharp> k", "by(finite_guess+ , (simp add: abs_fresh)+ , fresh_guess+)"], ["", "lemma ssubst_fresh:\n  fixes y :: name\n  assumes \" y \\<sharp> (x,v,k) \"\n  shows  \"y \\<sharp> ssubst x v k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. y \\<sharp> ssubst x v k", "using assms"], ["proof (prove)\nusing this:\n  y \\<sharp> (x, v, k)\n\ngoal (1 subgoal):\n 1. y \\<sharp> ssubst x v k", "by(nominal_induct k avoiding: y x v rule: stack.strong_induct)\n  (auto simp add: fresh_prod fresh_atm abs_fresh fresh_fact)"], ["", "lemma ssubst_forget: \n  fixes x :: name\n  assumes \"x \\<sharp> k\"\n  shows \"ssubst x v k = k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ssubst x v k = k", "using assms"], ["proof (prove)\nusing this:\n  x \\<sharp> k\n\ngoal (1 subgoal):\n 1. ssubst x v k = k", "by(nominal_induct k avoiding: x v rule: stack.strong_induct)\n  (auto simp add: abs_fresh fresh_atm forget)"], ["", "lemma subst_dismantle[simp]: \"(t \\<star> k)[x ::= v] = (t[x::=v]) \\<star> ssubst x v k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (t \\<star> k)[x::=v] = t[x::=v] \\<star> ssubst x v k", "by(nominal_induct k avoiding: t x v  rule: stack.strong_induct)\n  (auto simp add: ssubst_fresh fresh_prod fresh_fact)"], ["", "section \\<open>Reducibility for Terms and Stacks\\<close>"], ["", "text_raw \\<open>\\label{sec:reducibility-formal}\\<close>"], ["", "text \\<open>Following \\cite{SN.thy}, we formalize the logical relation as a function\n@{term \"RED\"} of type @{typ \"ty \\<Rightarrow> trm set\"} for the term part and accordingly\n@{term SRED} of type @{typ \"ty \\<Rightarrow> stack set\"} for the stack part of the logical\nrelation.\\<close>"], ["", "lemma ty_exhaust: \"ty = TBase \\<or> (\\<exists> \\<sigma> \\<tau> . ty = \\<sigma> \\<rightarrow> \\<tau>) \\<or> (\\<exists> \\<sigma> . ty = T \\<sigma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ty = TBase \\<or>\n    (\\<exists>\\<sigma> \\<tau>. ty = \\<sigma> \\<rightarrow> \\<tau>) \\<or>\n    (\\<exists>\\<sigma>. ty = T \\<sigma>)", "by(induct ty rule:ty.induct) (auto)"], ["", "function RED :: \"ty \\<Rightarrow> trm set\"\nand     SRED :: \"ty \\<Rightarrow> stack set\"\nwhere\n  \"RED (TBase) = {t. SN(t)}\"\n| \"RED (\\<tau>\\<rightarrow>\\<sigma>) = {t. \\<forall> u \\<in> RED \\<tau> . (App t u) \\<in> RED \\<sigma> }\"\n| \"RED (T \\<sigma>) = {t. \\<forall> k \\<in> SRED \\<sigma> . SN(t \\<star> k) }\" \n| \"SRED \\<tau> = {k. \\<forall> t \\<in> RED \\<tau> . SN ([t] \\<star> k) }\""], ["proof (prove)\ngoal (11 subgoals):\n 1. \\<And>P x.\n       \\<lbrakk>x = Inl TBase \\<Longrightarrow> P;\n        \\<And>\\<tau> \\<sigma>.\n           x = Inl (\\<tau> \\<rightarrow> \\<sigma>) \\<Longrightarrow> P;\n        \\<And>\\<sigma>. x = Inl (T \\<sigma>) \\<Longrightarrow> P;\n        \\<And>\\<tau>. x = Inr \\<tau> \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 2. Inl TBase = Inl TBase \\<Longrightarrow>\n    Inl (Collect SN) = Inl (Collect SN)\n 3. \\<And>\\<tau> \\<sigma>.\n       Inl TBase = Inl (\\<tau> \\<rightarrow> \\<sigma>) \\<Longrightarrow>\n       Inl (Collect SN) =\n       Inl (_Collect t\n             (\\<forall>u\\<in>projl (RED_SRED_sumC (Inl \\<tau>)).\n                 App t u \\<in> projl (RED_SRED_sumC (Inl \\<sigma>))))\n 4. \\<And>\\<sigma>.\n       Inl TBase = Inl (T \\<sigma>) \\<Longrightarrow>\n       Inl (Collect SN) =\n       Inl (_Collect t\n             (\\<forall>k\\<in>projr (RED_SRED_sumC (Inr \\<sigma>)).\n                 SN (t \\<star> k)))\n 5. \\<And>\\<tau>.\n       Inl TBase = Inr \\<tau> \\<Longrightarrow>\n       Inl (Collect SN) =\n       Inr (_Collect k\n             (\\<forall>t\\<in>projl (RED_SRED_sumC (Inl \\<tau>)).\n                 SN ([t] \\<star> k)))\n 6. \\<And>\\<tau> \\<sigma> \\<tau>' \\<sigma>'.\n       Inl (\\<tau> \\<rightarrow> \\<sigma>) =\n       Inl (\\<tau>' \\<rightarrow> \\<sigma>') \\<Longrightarrow>\n       Inl (_Collect t\n             (\\<forall>u\\<in>projl (RED_SRED_sumC (Inl \\<tau>)).\n                 App t u \\<in> projl (RED_SRED_sumC (Inl \\<sigma>)))) =\n       Inl (_Collect t\n             (\\<forall>u\\<in>projl (RED_SRED_sumC (Inl \\<tau>')).\n                 App t u \\<in> projl (RED_SRED_sumC (Inl \\<sigma>'))))\n 7. \\<And>\\<tau> \\<sigma> \\<sigma>'.\n       Inl (\\<tau> \\<rightarrow> \\<sigma>) =\n       Inl (T \\<sigma>') \\<Longrightarrow>\n       Inl (_Collect t\n             (\\<forall>u\\<in>projl (RED_SRED_sumC (Inl \\<tau>)).\n                 App t u \\<in> projl (RED_SRED_sumC (Inl \\<sigma>)))) =\n       Inl (_Collect t\n             (\\<forall>k\\<in>projr (RED_SRED_sumC (Inr \\<sigma>')).\n                 SN (t \\<star> k)))\n 8. \\<And>\\<tau> \\<sigma> \\<tau>'.\n       Inl (\\<tau> \\<rightarrow> \\<sigma>) = Inr \\<tau>' \\<Longrightarrow>\n       Inl (_Collect t\n             (\\<forall>u\\<in>projl (RED_SRED_sumC (Inl \\<tau>)).\n                 App t u \\<in> projl (RED_SRED_sumC (Inl \\<sigma>)))) =\n       Inr (_Collect k\n             (\\<forall>t\\<in>projl (RED_SRED_sumC (Inl \\<tau>')).\n                 SN ([t] \\<star> k)))\n 9. \\<And>\\<sigma> \\<sigma>'.\n       Inl (T \\<sigma>) = Inl (T \\<sigma>') \\<Longrightarrow>\n       Inl (_Collect t\n             (\\<forall>k\\<in>projr (RED_SRED_sumC (Inr \\<sigma>)).\n                 SN (t \\<star> k))) =\n       Inl (_Collect t\n             (\\<forall>k\\<in>projr (RED_SRED_sumC (Inr \\<sigma>')).\n                 SN (t \\<star> k)))\n 10. \\<And>\\<sigma> \\<tau>.\n        Inl (T \\<sigma>) = Inr \\<tau> \\<Longrightarrow>\n        Inl (_Collect t\n              (\\<forall>k\\<in>projr (RED_SRED_sumC (Inr \\<sigma>)).\n                  SN (t \\<star> k))) =\n        Inr (_Collect k\n              (\\<forall>t\\<in>projl (RED_SRED_sumC (Inl \\<tau>)).\n                  SN ([t] \\<star> k)))\nA total of 11 subgoals...", "by(auto simp add: ty.inject, case_tac x rule: sum.exhaust,insert ty_exhaust)\n  (blast)+"], ["", "text \\<open>This is the second non-primitive function in the formalization. Since\ntypes do not involve binders, pattern completeness and right uniqueness are\nmostly trivial. The termination argument is not as simple as for the dismantling\nfunction, because the definiton of @{term \"SRED \\<tau>\"} involves a recursive call to\n@{term \"RED \\<tau>\"} without reducing the size of @{term \"\\<tau>\"}.\\<close>"], ["", "nominal_primrec\n  tsize :: \"ty \\<Rightarrow> nat\"\nwhere\n    \"tsize TBase = 1\"\n  | \"tsize (\\<sigma>\\<rightarrow>\\<tau>) = 1 + tsize \\<sigma> + tsize \\<tau>\"\n  | \"tsize (T \\<tau>) = 1 + tsize \\<tau>\""], ["proof (prove)\ngoal (3 subgoals):\n 1. True\n 2. \\<And>x1 x2 y1 y2. \\<lbrakk>True; True\\<rbrakk> \\<Longrightarrow> True\n 3. \\<And>x1 y1. True \\<Longrightarrow> True", "by (rule TrueI)+"], ["", "text \\<open>In the termination argument below, @{term \"Inl \\<tau>\"} corresponds to the\ncall @{term \"RED \\<tau>\"}, whereas @{term \"Inr \\<tau>\"}  corresponds to @{term \"SRED \\<tau>\"}\n\\<close>"], ["", "termination RED"], ["proof (prove)\ngoal (1 subgoal):\n 1. All RED_SRED_dom", "by(relation \"measure \n    (\\<lambda> x . case x of Inl \\<tau> \\<Rightarrow> 2 * tsize \\<tau> \n                      | Inr \\<tau> \\<Rightarrow> 2 * tsize \\<tau> + 1)\") (auto)"], ["", "section \\<open>Properties of the Reducibility Relation\\<close>"], ["", "text \\<open>After defining the logical relations we need to prove that the relation\nimplies strong normalization, is preserved under reduction, and satisfies the\nhead expansion property.\\<close>"], ["", "definition NEUT :: \"trm \\<Rightarrow> bool\"\nwhere\n  \"NEUT t \\<equiv> (\\<exists>a. t = Var a) \\<or> (\\<exists>t1 t2. t = App t1 t2)\""], ["", "definition \"CR1\" :: \"ty \\<Rightarrow> bool\"\nwhere\n  \"CR1 \\<tau> \\<equiv> \\<forall>t. (t\\<in>RED \\<tau> \\<longrightarrow> SN t)\""], ["", "definition \"CR2\" :: \"ty \\<Rightarrow> bool\"\nwhere\n  \"CR2 \\<tau> \\<equiv> \\<forall>t t'. (t\\<in>RED \\<tau> \\<and> t \\<mapsto> t') \\<longrightarrow> t'\\<in>RED \\<tau>\""], ["", "definition \"CR3_RED\" :: \"trm \\<Rightarrow> ty \\<Rightarrow> bool\"\nwhere\n  \"CR3_RED t \\<tau> \\<equiv> \\<forall>t'. t \\<mapsto> t' \\<longrightarrow>  t'\\<in>RED \\<tau>\""], ["", "definition \"CR3\" :: \"ty \\<Rightarrow> bool\"\nwhere\n  \"CR3 \\<tau> \\<equiv> \\<forall>t. (NEUT t \\<and> CR3_RED t \\<tau>) \\<longrightarrow> t\\<in>RED \\<tau>\""], ["", "definition \"CR4\" :: \"ty \\<Rightarrow> bool\"\nwhere\n  \"CR4 \\<tau> \\<equiv> \\<forall>t. (NEUT t \\<and> NORMAL t) \\<longrightarrow>t\\<in>RED \\<tau>\""], ["", "lemma CR3_implies_CR4[intro]: \"CR3 \\<tau> \\<Longrightarrow> CR4 \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CR3 \\<tau> \\<Longrightarrow> CR4 \\<tau>", "by (auto simp add: CR3_def CR3_RED_def CR4_def NORMAL_def)"], ["", "lemma%invisible sub_induction: \n  assumes a: \"SN(u)\"\n  and     b: \"u\\<in>RED \\<tau>\"\n  and     c1: \"NEUT t\"\n  and     c2: \"CR2 \\<tau>\"\n  and     c3: \"CR3 \\<sigma>\"\n  and     c4: \"CR3_RED t (\\<tau>\\<rightarrow>\\<sigma>)\"\n  shows \"(App t u)\\<in>RED \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. App t u \\<in> RED \\<sigma>", "using a b"], ["proof (prove)\nusing this:\n  SN u\n  u \\<in> RED \\<tau>\n\ngoal (1 subgoal):\n 1. App t u \\<in> RED \\<sigma>", "proof(induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ta.\n       \\<lbrakk>\\<And>t'. ta \\<mapsto> t' \\<Longrightarrow> SN t';\n        \\<And>t'.\n           \\<lbrakk>ta \\<mapsto> t'; t' \\<in> RED \\<tau>\\<rbrakk>\n           \\<Longrightarrow> App t t' \\<in> RED \\<sigma>;\n        ta \\<in> RED \\<tau>\\<rbrakk>\n       \\<Longrightarrow> App t ta \\<in> RED \\<sigma>", "fix u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ta.\n       \\<lbrakk>\\<And>t'. ta \\<mapsto> t' \\<Longrightarrow> SN t';\n        \\<And>t'.\n           \\<lbrakk>ta \\<mapsto> t'; t' \\<in> RED \\<tau>\\<rbrakk>\n           \\<Longrightarrow> App t t' \\<in> RED \\<sigma>;\n        ta \\<in> RED \\<tau>\\<rbrakk>\n       \\<Longrightarrow> App t ta \\<in> RED \\<sigma>", "assume as: \"u\\<in>RED \\<tau>\""], ["proof (state)\nthis:\n  u \\<in> RED \\<tau>\n\ngoal (1 subgoal):\n 1. \\<And>ta.\n       \\<lbrakk>\\<And>t'. ta \\<mapsto> t' \\<Longrightarrow> SN t';\n        \\<And>t'.\n           \\<lbrakk>ta \\<mapsto> t'; t' \\<in> RED \\<tau>\\<rbrakk>\n           \\<Longrightarrow> App t t' \\<in> RED \\<sigma>;\n        ta \\<in> RED \\<tau>\\<rbrakk>\n       \\<Longrightarrow> App t ta \\<in> RED \\<sigma>", "assume ih: \" \\<And>u'. \\<lbrakk>u \\<mapsto> u'; u' \\<in> RED \\<tau>\\<rbrakk> \\<Longrightarrow> App t u' \\<in> RED \\<sigma>\""], ["proof (state)\nthis:\n  \\<lbrakk>u \\<mapsto> ?u'; ?u' \\<in> RED \\<tau>\\<rbrakk>\n  \\<Longrightarrow> App t ?u' \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>ta.\n       \\<lbrakk>\\<And>t'. ta \\<mapsto> t' \\<Longrightarrow> SN t';\n        \\<And>t'.\n           \\<lbrakk>ta \\<mapsto> t'; t' \\<in> RED \\<tau>\\<rbrakk>\n           \\<Longrightarrow> App t t' \\<in> RED \\<sigma>;\n        ta \\<in> RED \\<tau>\\<rbrakk>\n       \\<Longrightarrow> App t ta \\<in> RED \\<sigma>", "have \"NEUT (App t u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. NEUT (App t u)", "using c1"], ["proof (prove)\nusing this:\n  NEUT t\n\ngoal (1 subgoal):\n 1. NEUT (App t u)", "by (auto simp add: NEUT_def)"], ["proof (state)\nthis:\n  NEUT (App t u)\n\ngoal (1 subgoal):\n 1. \\<And>ta.\n       \\<lbrakk>\\<And>t'. ta \\<mapsto> t' \\<Longrightarrow> SN t';\n        \\<And>t'.\n           \\<lbrakk>ta \\<mapsto> t'; t' \\<in> RED \\<tau>\\<rbrakk>\n           \\<Longrightarrow> App t t' \\<in> RED \\<sigma>;\n        ta \\<in> RED \\<tau>\\<rbrakk>\n       \\<Longrightarrow> App t ta \\<in> RED \\<sigma>", "moreover"], ["proof (state)\nthis:\n  NEUT (App t u)\n\ngoal (1 subgoal):\n 1. \\<And>ta.\n       \\<lbrakk>\\<And>t'. ta \\<mapsto> t' \\<Longrightarrow> SN t';\n        \\<And>t'.\n           \\<lbrakk>ta \\<mapsto> t'; t' \\<in> RED \\<tau>\\<rbrakk>\n           \\<Longrightarrow> App t t' \\<in> RED \\<sigma>;\n        ta \\<in> RED \\<tau>\\<rbrakk>\n       \\<Longrightarrow> App t ta \\<in> RED \\<sigma>", "have \"CR3_RED (App t u) \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CR3_RED (App t u) \\<sigma>", "unfolding CR3_RED_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>t'.\n       App t u \\<mapsto> t' \\<longrightarrow> t' \\<in> RED \\<sigma>", "proof (intro strip)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t'. App t u \\<mapsto> t' \\<Longrightarrow> t' \\<in> RED \\<sigma>", "fix r"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t'. App t u \\<mapsto> t' \\<Longrightarrow> t' \\<in> RED \\<sigma>", "assume red: \"App t u \\<mapsto> r\""], ["proof (state)\nthis:\n  App t u \\<mapsto> r\n\ngoal (1 subgoal):\n 1. \\<And>t'. App t u \\<mapsto> t' \\<Longrightarrow> t' \\<in> RED \\<sigma>", "moreover"], ["proof (state)\nthis:\n  App t u \\<mapsto> r\n\ngoal (1 subgoal):\n 1. \\<And>t'. App t u \\<mapsto> t' \\<Longrightarrow> t' \\<in> RED \\<sigma>", "{"], ["proof (state)\nthis:\n  App t u \\<mapsto> r\n\ngoal (1 subgoal):\n 1. \\<And>t'. App t u \\<mapsto> t' \\<Longrightarrow> t' \\<in> RED \\<sigma>", "assume \"\\<exists>t'. t \\<mapsto> t' \\<and> r = App t' u\""], ["proof (state)\nthis:\n  \\<exists>t'. t \\<mapsto> t' \\<and> r = App t' u\n\ngoal (1 subgoal):\n 1. \\<And>t'. App t u \\<mapsto> t' \\<Longrightarrow> t' \\<in> RED \\<sigma>", "then"], ["proof (chain)\npicking this:\n  \\<exists>t'. t \\<mapsto> t' \\<and> r = App t' u", "obtain t' where a1: \"t \\<mapsto> t'\" and a2: \"r = App t' u\""], ["proof (prove)\nusing this:\n  \\<exists>t'. t \\<mapsto> t' \\<and> r = App t' u\n\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<lbrakk>t \\<mapsto> t'; r = App t' u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  t \\<mapsto> t'\n  r = App t' u\n\ngoal (1 subgoal):\n 1. \\<And>t'. App t u \\<mapsto> t' \\<Longrightarrow> t' \\<in> RED \\<sigma>", "have \"t'\\<in>RED (\\<tau>\\<rightarrow>\\<sigma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t' \\<in> RED (\\<tau> \\<rightarrow> \\<sigma>)", "using c4 a1"], ["proof (prove)\nusing this:\n  CR3_RED t (\\<tau> \\<rightarrow> \\<sigma>)\n  t \\<mapsto> t'\n\ngoal (1 subgoal):\n 1. t' \\<in> RED (\\<tau> \\<rightarrow> \\<sigma>)", "by (simp add: CR3_RED_def)"], ["proof (state)\nthis:\n  t' \\<in> RED (\\<tau> \\<rightarrow> \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<And>t'. App t u \\<mapsto> t' \\<Longrightarrow> t' \\<in> RED \\<sigma>", "then"], ["proof (chain)\npicking this:\n  t' \\<in> RED (\\<tau> \\<rightarrow> \\<sigma>)", "have \"App t' u\\<in>RED \\<sigma>\""], ["proof (prove)\nusing this:\n  t' \\<in> RED (\\<tau> \\<rightarrow> \\<sigma>)\n\ngoal (1 subgoal):\n 1. App t' u \\<in> RED \\<sigma>", "using as"], ["proof (prove)\nusing this:\n  t' \\<in> RED (\\<tau> \\<rightarrow> \\<sigma>)\n  u \\<in> RED \\<tau>\n\ngoal (1 subgoal):\n 1. App t' u \\<in> RED \\<sigma>", "by simp"], ["proof (state)\nthis:\n  App t' u \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>t'. App t u \\<mapsto> t' \\<Longrightarrow> t' \\<in> RED \\<sigma>", "then"], ["proof (chain)\npicking this:\n  App t' u \\<in> RED \\<sigma>", "have \"r\\<in>RED \\<sigma>\""], ["proof (prove)\nusing this:\n  App t' u \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. r \\<in> RED \\<sigma>", "using a2"], ["proof (prove)\nusing this:\n  App t' u \\<in> RED \\<sigma>\n  r = App t' u\n\ngoal (1 subgoal):\n 1. r \\<in> RED \\<sigma>", "by simp"], ["proof (state)\nthis:\n  r \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>t'. App t u \\<mapsto> t' \\<Longrightarrow> t' \\<in> RED \\<sigma>", "}"], ["proof (state)\nthis:\n  \\<exists>t'. t \\<mapsto> t' \\<and> r = App t' u \\<Longrightarrow>\n  r \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>t'. App t u \\<mapsto> t' \\<Longrightarrow> t' \\<in> RED \\<sigma>", "moreover"], ["proof (state)\nthis:\n  \\<exists>t'. t \\<mapsto> t' \\<and> r = App t' u \\<Longrightarrow>\n  r \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>t'. App t u \\<mapsto> t' \\<Longrightarrow> t' \\<in> RED \\<sigma>", "{"], ["proof (state)\nthis:\n  \\<exists>t'. t \\<mapsto> t' \\<and> r = App t' u \\<Longrightarrow>\n  r \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>t'. App t u \\<mapsto> t' \\<Longrightarrow> t' \\<in> RED \\<sigma>", "assume \"\\<exists>u'. u \\<mapsto> u' \\<and> r = App t u'\""], ["proof (state)\nthis:\n  \\<exists>u'. u \\<mapsto> u' \\<and> r = App t u'\n\ngoal (1 subgoal):\n 1. \\<And>t'. App t u \\<mapsto> t' \\<Longrightarrow> t' \\<in> RED \\<sigma>", "then"], ["proof (chain)\npicking this:\n  \\<exists>u'. u \\<mapsto> u' \\<and> r = App t u'", "obtain u' where b1: \"u \\<mapsto> u'\" and b2: \"r = App t u'\""], ["proof (prove)\nusing this:\n  \\<exists>u'. u \\<mapsto> u' \\<and> r = App t u'\n\ngoal (1 subgoal):\n 1. (\\<And>u'.\n        \\<lbrakk>u \\<mapsto> u'; r = App t u'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  u \\<mapsto> u'\n  r = App t u'\n\ngoal (1 subgoal):\n 1. \\<And>t'. App t u \\<mapsto> t' \\<Longrightarrow> t' \\<in> RED \\<sigma>", "have \"u'\\<in>RED \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u' \\<in> RED \\<tau>", "using as b1 c2"], ["proof (prove)\nusing this:\n  u \\<in> RED \\<tau>\n  u \\<mapsto> u'\n  CR2 \\<tau>\n\ngoal (1 subgoal):\n 1. u' \\<in> RED \\<tau>", "by (auto simp add: CR2_def)"], ["proof (state)\nthis:\n  u' \\<in> RED \\<tau>\n\ngoal (1 subgoal):\n 1. \\<And>t'. App t u \\<mapsto> t' \\<Longrightarrow> t' \\<in> RED \\<sigma>", "with ih"], ["proof (chain)\npicking this:\n  \\<lbrakk>u \\<mapsto> ?u'; ?u' \\<in> RED \\<tau>\\<rbrakk>\n  \\<Longrightarrow> App t ?u' \\<in> RED \\<sigma>\n  u' \\<in> RED \\<tau>", "have \"App t u' \\<in> RED \\<sigma>\""], ["proof (prove)\nusing this:\n  \\<lbrakk>u \\<mapsto> ?u'; ?u' \\<in> RED \\<tau>\\<rbrakk>\n  \\<Longrightarrow> App t ?u' \\<in> RED \\<sigma>\n  u' \\<in> RED \\<tau>\n\ngoal (1 subgoal):\n 1. App t u' \\<in> RED \\<sigma>", "using b1"], ["proof (prove)\nusing this:\n  \\<lbrakk>u \\<mapsto> ?u'; ?u' \\<in> RED \\<tau>\\<rbrakk>\n  \\<Longrightarrow> App t ?u' \\<in> RED \\<sigma>\n  u' \\<in> RED \\<tau>\n  u \\<mapsto> u'\n\ngoal (1 subgoal):\n 1. App t u' \\<in> RED \\<sigma>", "by simp"], ["proof (state)\nthis:\n  App t u' \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>t'. App t u \\<mapsto> t' \\<Longrightarrow> t' \\<in> RED \\<sigma>", "then"], ["proof (chain)\npicking this:\n  App t u' \\<in> RED \\<sigma>", "have \"r\\<in>RED \\<sigma>\""], ["proof (prove)\nusing this:\n  App t u' \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. r \\<in> RED \\<sigma>", "using b2"], ["proof (prove)\nusing this:\n  App t u' \\<in> RED \\<sigma>\n  r = App t u'\n\ngoal (1 subgoal):\n 1. r \\<in> RED \\<sigma>", "by simp"], ["proof (state)\nthis:\n  r \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>t'. App t u \\<mapsto> t' \\<Longrightarrow> t' \\<in> RED \\<sigma>", "}"], ["proof (state)\nthis:\n  \\<exists>u'. u \\<mapsto> u' \\<and> r = App t u' \\<Longrightarrow>\n  r \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>t'. App t u \\<mapsto> t' \\<Longrightarrow> t' \\<in> RED \\<sigma>", "moreover"], ["proof (state)\nthis:\n  \\<exists>u'. u \\<mapsto> u' \\<and> r = App t u' \\<Longrightarrow>\n  r \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>t'. App t u \\<mapsto> t' \\<Longrightarrow> t' \\<in> RED \\<sigma>", "{"], ["proof (state)\nthis:\n  \\<exists>u'. u \\<mapsto> u' \\<and> r = App t u' \\<Longrightarrow>\n  r \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>t'. App t u \\<mapsto> t' \\<Longrightarrow> t' \\<in> RED \\<sigma>", "assume \"\\<exists>x t'. t = \\<Lambda> x .t'\""], ["proof (state)\nthis:\n  \\<exists>x t'. t = \\<Lambda> x . t'\n\ngoal (1 subgoal):\n 1. \\<And>t'. App t u \\<mapsto> t' \\<Longrightarrow> t' \\<in> RED \\<sigma>", "then"], ["proof (chain)\npicking this:\n  \\<exists>x t'. t = \\<Lambda> x . t'", "obtain x t' where \"t = \\<Lambda> x .t'\""], ["proof (prove)\nusing this:\n  \\<exists>x t'. t = \\<Lambda> x . t'\n\ngoal (1 subgoal):\n 1. (\\<And>x t'.\n        t = \\<Lambda> x . t' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  t = \\<Lambda> x . t'\n\ngoal (1 subgoal):\n 1. \\<And>t'. App t u \\<mapsto> t' \\<Longrightarrow> t' \\<in> RED \\<sigma>", "then"], ["proof (chain)\npicking this:\n  t = \\<Lambda> x . t'", "have \"NEUT (\\<Lambda> x .t')\""], ["proof (prove)\nusing this:\n  t = \\<Lambda> x . t'\n\ngoal (1 subgoal):\n 1. NEUT (\\<Lambda> x . t')", "using c1"], ["proof (prove)\nusing this:\n  t = \\<Lambda> x . t'\n  NEUT t\n\ngoal (1 subgoal):\n 1. NEUT (\\<Lambda> x . t')", "by simp"], ["proof (state)\nthis:\n  NEUT (\\<Lambda> x . t')\n\ngoal (1 subgoal):\n 1. \\<And>t'. App t u \\<mapsto> t' \\<Longrightarrow> t' \\<in> RED \\<sigma>", "then"], ["proof (chain)\npicking this:\n  NEUT (\\<Lambda> x . t')", "have \"False\""], ["proof (prove)\nusing this:\n  NEUT (\\<Lambda> x . t')\n\ngoal (1 subgoal):\n 1. False", "by (simp add: NEUT_def)"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<And>t'. App t u \\<mapsto> t' \\<Longrightarrow> t' \\<in> RED \\<sigma>", "then"], ["proof (chain)\npicking this:\n  False", "have \"r\\<in>RED \\<sigma>\""], ["proof (prove)\nusing this:\n  False\n\ngoal (1 subgoal):\n 1. r \\<in> RED \\<sigma>", "by simp"], ["proof (state)\nthis:\n  r \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>t'. App t u \\<mapsto> t' \\<Longrightarrow> t' \\<in> RED \\<sigma>", "}"], ["proof (state)\nthis:\n  \\<exists>x t'. t = \\<Lambda> x . t' \\<Longrightarrow> r \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>t'. App t u \\<mapsto> t' \\<Longrightarrow> t' \\<in> RED \\<sigma>", "ultimately"], ["proof (chain)\npicking this:\n  App t u \\<mapsto> r\n  \\<exists>t'. t \\<mapsto> t' \\<and> r = App t' u \\<Longrightarrow>\n  r \\<in> RED \\<sigma>\n  \\<exists>u'. u \\<mapsto> u' \\<and> r = App t u' \\<Longrightarrow>\n  r \\<in> RED \\<sigma>\n  \\<exists>x t'. t = \\<Lambda> x . t' \\<Longrightarrow> r \\<in> RED \\<sigma>", "show \"r \\<in> RED \\<sigma>\""], ["proof (prove)\nusing this:\n  App t u \\<mapsto> r\n  \\<exists>t'. t \\<mapsto> t' \\<and> r = App t' u \\<Longrightarrow>\n  r \\<in> RED \\<sigma>\n  \\<exists>u'. u \\<mapsto> u' \\<and> r = App t u' \\<Longrightarrow>\n  r \\<in> RED \\<sigma>\n  \\<exists>x t'. t = \\<Lambda> x . t' \\<Longrightarrow> r \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. r \\<in> RED \\<sigma>", "by (cases) (auto)"], ["proof (state)\nthis:\n  r \\<in> RED \\<sigma>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  CR3_RED (App t u) \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>ta.\n       \\<lbrakk>\\<And>t'. ta \\<mapsto> t' \\<Longrightarrow> SN t';\n        \\<And>t'.\n           \\<lbrakk>ta \\<mapsto> t'; t' \\<in> RED \\<tau>\\<rbrakk>\n           \\<Longrightarrow> App t t' \\<in> RED \\<sigma>;\n        ta \\<in> RED \\<tau>\\<rbrakk>\n       \\<Longrightarrow> App t ta \\<in> RED \\<sigma>", "ultimately"], ["proof (chain)\npicking this:\n  NEUT (App t u)\n  CR3_RED (App t u) \\<sigma>", "show \"App t u \\<in> RED \\<sigma>\""], ["proof (prove)\nusing this:\n  NEUT (App t u)\n  CR3_RED (App t u) \\<sigma>\n\ngoal (1 subgoal):\n 1. App t u \\<in> RED \\<sigma>", "using c3"], ["proof (prove)\nusing this:\n  NEUT (App t u)\n  CR3_RED (App t u) \\<sigma>\n  CR3 \\<sigma>\n\ngoal (1 subgoal):\n 1. App t u \\<in> RED \\<sigma>", "by (simp add: CR3_def)"], ["proof (state)\nthis:\n  App t u \\<in> RED \\<sigma>\n\ngoal:\nNo subgoals!", "qed"], ["", "inductive \n  FST :: \"trm\\<Rightarrow>trm\\<Rightarrow>bool\" (\" _ \\<guillemotright> _\" [80,80] 80)\nwhere\n  fst[intro!]:  \"(App t s) \\<guillemotright> t\""], ["", "lemma SN_of_FST_of_App: \n  assumes a: \"SN (App t s)\"\n  shows \"SN t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. SN t", "from a"], ["proof (chain)\npicking this:\n  SN (App t s)", "have \"\\<forall>z. (App t s \\<guillemotright> z) \\<longrightarrow> SN z\""], ["proof (prove)\nusing this:\n  SN (App t s)\n\ngoal (1 subgoal):\n 1. \\<forall>z.  App t s \\<guillemotright> z \\<longrightarrow> SN z", "by (induct rule: SN.induct)\n       (blast elim: FST.cases intro: SN_intro)"], ["proof (state)\nthis:\n  \\<forall>z.  App t s \\<guillemotright> z \\<longrightarrow> SN z\n\ngoal (1 subgoal):\n 1. SN t", "then"], ["proof (chain)\npicking this:\n  \\<forall>z.  App t s \\<guillemotright> z \\<longrightarrow> SN z", "show \"SN t\""], ["proof (prove)\nusing this:\n  \\<forall>z.  App t s \\<guillemotright> z \\<longrightarrow> SN z\n\ngoal (1 subgoal):\n 1. SN t", "by blast"], ["proof (state)\nthis:\n  SN t\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The lemma above is a simplified version of the one used in\n\\cite{SN.thy}. Since we have generalized our notion of reduction from terms to\nstacks, we can also generalize the notion of strong normalization. The new\ninduction principle will be used to prove the @{term \"T\"} case of the\nproperties of the reducibility relation.\\<close>"], ["", "inductive \n  SSN :: \"stack \\<Rightarrow> bool\"\nwhere\n  SSN_intro: \"(\\<And> k' . k \\<mapsto> k' \\<Longrightarrow> SSN k') \\<Longrightarrow> SSN k\""], ["", "text \\<open>Furthermore, the approach for deriving strong normalization of\nsubterms from above can be generalized to terms of the form @{term \"t \\<star> k\"}. In\ncontrast to the case of applications, @{term \"t \\<star> k\"} does \\textit{not} uniquely\ndetermine @{term t} and @{term k}. Thus, the extraction is a proper relation in\nthis case.\\<close>"], ["", "inductive\n  SND_DIS :: \"trm \\<Rightarrow> stack \\<Rightarrow> bool\" (\"_ \\<rhd> _\")\nwhere\n  snd_dis[intro!]: \"t \\<star> k \\<rhd> k\""], ["", "lemma SN_SSN:\n  assumes a: \"SN (t \\<star> k)\"\n  shows \" SSN k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SSN k", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. SSN k", "from a"], ["proof (chain)\npicking this:\n  SN (t \\<star> k)", "have \"\\<forall>z. (t \\<star> k \\<rhd> z) \\<longrightarrow> SSN z\""], ["proof (prove)\nusing this:\n  SN (t \\<star> k)\n\ngoal (1 subgoal):\n 1. \\<forall>z. t \\<star> k \\<rhd> z \\<longrightarrow> SSN z", "by (induct rule: SN.induct)\n       (metis SND_DIS.cases SSN_intro snd_dis stack_reduction_def)"], ["proof (state)\nthis:\n  \\<forall>z. t \\<star> k \\<rhd> z \\<longrightarrow> SSN z\n\ngoal (1 subgoal):\n 1. SSN k", "thus \"SSN k\""], ["proof (prove)\nusing this:\n  \\<forall>z. t \\<star> k \\<rhd> z \\<longrightarrow> SSN z\n\ngoal (1 subgoal):\n 1. SSN k", "by blast"], ["proof (state)\nthis:\n  SSN k\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>To prove CR1-3, the authors of\n\\cite{TT-lifting} use a case distinction on the reducts of @{term \"t \\<star> k\"},\nwhere $t$ is a neutral term and therefore no interaction occurs between $t$ and\n$k$.\n\n%auto generated stuff\n\\begin{isamarkuptext}%\n\\renewcommand\\isacharquery{}\n$$\\inferrule{\n    \\isa{{\\isacharquery}t\\ {\\isasymstar}\\ {\\isacharquery}k\\ {\\isasymmapsto}\\\n{\\isacharquery}r}\\\\\n    \\isa{{\\isasymAnd}t{\\isacharprime}{\\isachardot}\\\n{\\isasymlbrakk}{\\isacharquery}t\\ {\\isasymmapsto}\\\nt{\\isacharprime}{\\isacharsemicolon}\\ {\\isacharquery}r\\ {\\isacharequal}\\\nt{\\isacharprime}\\ {\\isasymstar}\\ {\\isacharquery}k{\\isasymrbrakk}\\\n{\\isasymLongrightarrow}\\ {\\isacharquery}P}\\\\\n    \\isa{NEUT\\ {\\isacharquery}t}\\\\\n    \\isa{{\\isasymAnd}k{\\isacharprime}{\\isachardot}\\ {\\isasymlbrakk}\\\n{\\isacharquery}k\\ {\\isasymmapsto}\\ k{\\isacharprime}\\ {\\isacharsemicolon}\\\n{\\isacharquery}r\\ {\\isacharequal}\\ {\\isacharquery}t\\ {\\isasymstar}\\\nk{\\isacharprime}{\\isasymrbrakk}\\ {\\isasymLongrightarrow}\\ {\\isacharquery}P}\\\\\n    }{\n    \\isa{{\\isacharquery}P}}$$%\n\\end{isamarkuptext}%\\<close>"], ["", "text \\<open>We strive for a proof of this rule by structural induction on $k$. The\ngeneral idea of the case where @{term \"k = [y]n\\<ggreater>l\"} is to move the first stack\nframe into the term $t$ and then apply the induction hypothesis as a case\nrule. Unfortunately, this term is no longer neutral, so, for the induction to go\nthrough, we need to generalize the claim to also include the possible\ninteractions of non-neutral terms and stacks.\\<close>"], ["", "lemma dismantle_cases:\n  fixes t :: trm\n  assumes r: \"t \\<star> k \\<mapsto> r\"\n  and T: \"\\<And> t' . \\<lbrakk> t \\<mapsto> t' ; r = t' \\<star> k \\<rbrakk> \\<Longrightarrow> P\"\n  and K: \"\\<And> k' . \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k' \\<rbrakk> \\<Longrightarrow> P\" \n  and B: \"\\<And> s y n l .\\<lbrakk> t = [s] ; k = [y]n\\<ggreater>l ; r = (n[y::=s]) \\<star> l \\<rbrakk> \\<Longrightarrow> P\"\n  and A: \"\\<And> u x v y n l.\\<lbrakk> x \\<sharp> y; x \\<sharp> n ; t = u to x in v ; \n             k = [y]n\\<ggreater>l ; r = (u to x in (v to y in n)) \\<star> l \\<rbrakk> \\<Longrightarrow> P \"\n  shows \"P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P", "using assms"], ["proof (prove)\nusing this:\n  t \\<star> k \\<mapsto> r\n  \\<lbrakk>t \\<mapsto> ?t'; r = ?t' \\<star> k\\<rbrakk> \\<Longrightarrow> P\n  \\<lbrakk> k \\<mapsto> ?k' ; r = t \\<star> ?k'\\<rbrakk> \\<Longrightarrow> P\n  \\<lbrakk>t = [?s]; k = [?y]?n\\<ggreater>?l;\n   r = ?n[?y::=?s] \\<star> ?l\\<rbrakk>\n  \\<Longrightarrow> P\n  \\<lbrakk>?x \\<sharp> ?y; ?x \\<sharp> ?n; t = ?u to ?x in ?v;\n   k = [?y]?n\\<ggreater>?l;\n   r = (?u to ?x in ?v to ?y in ?n) \\<star> ?l\\<rbrakk>\n  \\<Longrightarrow> P\n\ngoal (1 subgoal):\n 1. P", "proof (nominal_induct k avoiding: t r rule:stack.strong_induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t r.\n       \\<lbrakk>t \\<star> stack.Id \\<mapsto> r;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> stack.Id\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> stack.Id \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s y n l.\n           \\<lbrakk>t = [s]; stack.Id = [y]n\\<ggreater>l;\n            r = n[y::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x y n u v l.\n           \\<lbrakk>x \\<sharp> y; x \\<sharp> n; t = u to x in v;\n            stack.Id = [y]n\\<ggreater>l;\n            r = (u to x in v to y in n) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>name trm stack t r.\n       \\<lbrakk>name \\<sharp> t; name \\<sharp> r; name \\<sharp> stack;\n        \\<And>b ba.\n           \\<lbrakk>b \\<star> stack \\<mapsto> ba;\n            \\<And>t'.\n               \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> stack\\<rbrakk>\n               \\<Longrightarrow> P;\n            \\<And>k'.\n               \\<lbrakk> stack \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n               \\<Longrightarrow> P;\n            \\<And>s y n l.\n               \\<lbrakk>b = [s]; stack = [y]n\\<ggreater>l;\n                ba = n[y::=s] \\<star> l\\<rbrakk>\n               \\<Longrightarrow> P;\n            \\<And>x y n u v l.\n               \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                stack = [y]n\\<ggreater>l;\n                ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n               \\<Longrightarrow> P\\<rbrakk>\n           \\<Longrightarrow> P;\n        t \\<star> [name]trm\\<ggreater>stack \\<mapsto> r;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t';\n            r = t' \\<star> [name]trm\\<ggreater>stack\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [name]trm\\<ggreater>stack \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s y n l.\n           \\<lbrakk>t = [s]; [name]trm\\<ggreater>stack = [y]n\\<ggreater>l;\n            r = n[y::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x y n u v l.\n           \\<lbrakk>x \\<sharp> y; x \\<sharp> n; t = u to x in v;\n            [name]trm\\<ggreater>stack = [y]n\\<ggreater>l;\n            r = (u to x in v to y in n) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P", "case (St y n L)"], ["proof (state)\nthis:\n  y \\<sharp> t\n  y \\<sharp> r\n  y \\<sharp> L\n  \\<lbrakk>?b \\<star> L \\<mapsto> ?ba;\n   \\<And>t'.\n      \\<lbrakk>?b \\<mapsto> t'; ?ba = t' \\<star> L\\<rbrakk>\n      \\<Longrightarrow> P;\n   \\<And>k'.\n      \\<lbrakk> L \\<mapsto> k' ; ?ba = ?b \\<star> k'\\<rbrakk>\n      \\<Longrightarrow> P;\n   \\<And>s y n l.\n      \\<lbrakk>?b = [s]; L = [y]n\\<ggreater>l;\n       ?ba = n[y::=s] \\<star> l\\<rbrakk>\n      \\<Longrightarrow> P;\n   \\<And>x y n u v l.\n      \\<lbrakk>x \\<sharp> y; x \\<sharp> n; ?b = u to x in v;\n       L = [y]n\\<ggreater>l;\n       ?ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n      \\<Longrightarrow> P\\<rbrakk>\n  \\<Longrightarrow> P\n  t \\<star> [y]n\\<ggreater>L \\<mapsto> r\n  \\<lbrakk>t \\<mapsto> ?t'; r = ?t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n  \\<Longrightarrow> P\n  \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> ?k' ; r = t \\<star> ?k'\\<rbrakk>\n  \\<Longrightarrow> P\n  \\<lbrakk>t = [?s]; [y]n\\<ggreater>L = [?y]?n\\<ggreater>?l;\n   r = ?n[?y::=?s] \\<star> ?l\\<rbrakk>\n  \\<Longrightarrow> P\n  \\<lbrakk>?x \\<sharp> ?y; ?x \\<sharp> ?n; t = ?u to ?x in ?v;\n   [y]n\\<ggreater>L = [?y]?n\\<ggreater>?l;\n   r = (?u to ?x in ?v to ?y in ?n) \\<star> ?l\\<rbrakk>\n  \\<Longrightarrow> P\n\ngoal (2 subgoals):\n 1. \\<And>t r.\n       \\<lbrakk>t \\<star> stack.Id \\<mapsto> r;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> stack.Id\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> stack.Id \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s y n l.\n           \\<lbrakk>t = [s]; stack.Id = [y]n\\<ggreater>l;\n            r = n[y::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x y n u v l.\n           \\<lbrakk>x \\<sharp> y; x \\<sharp> n; t = u to x in v;\n            stack.Id = [y]n\\<ggreater>l;\n            r = (u to x in v to y in n) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>name trm stack t r.\n       \\<lbrakk>name \\<sharp> t; name \\<sharp> r; name \\<sharp> stack;\n        \\<And>b ba.\n           \\<lbrakk>b \\<star> stack \\<mapsto> ba;\n            \\<And>t'.\n               \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> stack\\<rbrakk>\n               \\<Longrightarrow> P;\n            \\<And>k'.\n               \\<lbrakk> stack \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n               \\<Longrightarrow> P;\n            \\<And>s y n l.\n               \\<lbrakk>b = [s]; stack = [y]n\\<ggreater>l;\n                ba = n[y::=s] \\<star> l\\<rbrakk>\n               \\<Longrightarrow> P;\n            \\<And>x y n u v l.\n               \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                stack = [y]n\\<ggreater>l;\n                ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n               \\<Longrightarrow> P\\<rbrakk>\n           \\<Longrightarrow> P;\n        t \\<star> [name]trm\\<ggreater>stack \\<mapsto> r;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t';\n            r = t' \\<star> [name]trm\\<ggreater>stack\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [name]trm\\<ggreater>stack \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s y n l.\n           \\<lbrakk>t = [s]; [name]trm\\<ggreater>stack = [y]n\\<ggreater>l;\n            r = n[y::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x y n u v l.\n           \\<lbrakk>x \\<sharp> y; x \\<sharp> n; t = u to x in v;\n            [name]trm\\<ggreater>stack = [y]n\\<ggreater>l;\n            r = (u to x in v to y in n) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P", "note  yfresh = \\<open>y \\<sharp> t\\<close> \\<open>y \\<sharp> r\\<close> \\<open>y \\<sharp> L\\<close>"], ["proof (state)\nthis:\n  y \\<sharp> t\n  y \\<sharp> r\n  y \\<sharp> L\n\ngoal (2 subgoals):\n 1. \\<And>t r.\n       \\<lbrakk>t \\<star> stack.Id \\<mapsto> r;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> stack.Id\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> stack.Id \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s y n l.\n           \\<lbrakk>t = [s]; stack.Id = [y]n\\<ggreater>l;\n            r = n[y::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x y n u v l.\n           \\<lbrakk>x \\<sharp> y; x \\<sharp> n; t = u to x in v;\n            stack.Id = [y]n\\<ggreater>l;\n            r = (u to x in v to y in n) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>name trm stack t r.\n       \\<lbrakk>name \\<sharp> t; name \\<sharp> r; name \\<sharp> stack;\n        \\<And>b ba.\n           \\<lbrakk>b \\<star> stack \\<mapsto> ba;\n            \\<And>t'.\n               \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> stack\\<rbrakk>\n               \\<Longrightarrow> P;\n            \\<And>k'.\n               \\<lbrakk> stack \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n               \\<Longrightarrow> P;\n            \\<And>s y n l.\n               \\<lbrakk>b = [s]; stack = [y]n\\<ggreater>l;\n                ba = n[y::=s] \\<star> l\\<rbrakk>\n               \\<Longrightarrow> P;\n            \\<And>x y n u v l.\n               \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                stack = [y]n\\<ggreater>l;\n                ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n               \\<Longrightarrow> P\\<rbrakk>\n           \\<Longrightarrow> P;\n        t \\<star> [name]trm\\<ggreater>stack \\<mapsto> r;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t';\n            r = t' \\<star> [name]trm\\<ggreater>stack\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [name]trm\\<ggreater>stack \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s y n l.\n           \\<lbrakk>t = [s]; [name]trm\\<ggreater>stack = [y]n\\<ggreater>l;\n            r = n[y::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x y n u v l.\n           \\<lbrakk>x \\<sharp> y; x \\<sharp> n; t = u to x in v;\n            [name]trm\\<ggreater>stack = [y]n\\<ggreater>l;\n            r = (u to x in v to y in n) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P", "note IH = St(4) \n    and T = St(6) and K = St(7) and B = St(8) and A = St(9)"], ["proof (state)\nthis:\n  \\<lbrakk>?b \\<star> L \\<mapsto> ?ba;\n   \\<And>t'.\n      \\<lbrakk>?b \\<mapsto> t'; ?ba = t' \\<star> L\\<rbrakk>\n      \\<Longrightarrow> P;\n   \\<And>k'.\n      \\<lbrakk> L \\<mapsto> k' ; ?ba = ?b \\<star> k'\\<rbrakk>\n      \\<Longrightarrow> P;\n   \\<And>s y n l.\n      \\<lbrakk>?b = [s]; L = [y]n\\<ggreater>l;\n       ?ba = n[y::=s] \\<star> l\\<rbrakk>\n      \\<Longrightarrow> P;\n   \\<And>x y n u v l.\n      \\<lbrakk>x \\<sharp> y; x \\<sharp> n; ?b = u to x in v;\n       L = [y]n\\<ggreater>l;\n       ?ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n      \\<Longrightarrow> P\\<rbrakk>\n  \\<Longrightarrow> P\n  \\<lbrakk>t \\<mapsto> ?t'; r = ?t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n  \\<Longrightarrow> P\n  \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> ?k' ; r = t \\<star> ?k'\\<rbrakk>\n  \\<Longrightarrow> P\n  \\<lbrakk>t = [?s]; [y]n\\<ggreater>L = [?y]?n\\<ggreater>?l;\n   r = ?n[?y::=?s] \\<star> ?l\\<rbrakk>\n  \\<Longrightarrow> P\n  \\<lbrakk>?x \\<sharp> ?y; ?x \\<sharp> ?n; t = ?u to ?x in ?v;\n   [y]n\\<ggreater>L = [?y]?n\\<ggreater>?l;\n   r = (?u to ?x in ?v to ?y in ?n) \\<star> ?l\\<rbrakk>\n  \\<Longrightarrow> P\n\ngoal (2 subgoals):\n 1. \\<And>t r.\n       \\<lbrakk>t \\<star> stack.Id \\<mapsto> r;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> stack.Id\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> stack.Id \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s y n l.\n           \\<lbrakk>t = [s]; stack.Id = [y]n\\<ggreater>l;\n            r = n[y::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x y n u v l.\n           \\<lbrakk>x \\<sharp> y; x \\<sharp> n; t = u to x in v;\n            stack.Id = [y]n\\<ggreater>l;\n            r = (u to x in v to y in n) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>name trm stack t r.\n       \\<lbrakk>name \\<sharp> t; name \\<sharp> r; name \\<sharp> stack;\n        \\<And>b ba.\n           \\<lbrakk>b \\<star> stack \\<mapsto> ba;\n            \\<And>t'.\n               \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> stack\\<rbrakk>\n               \\<Longrightarrow> P;\n            \\<And>k'.\n               \\<lbrakk> stack \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n               \\<Longrightarrow> P;\n            \\<And>s y n l.\n               \\<lbrakk>b = [s]; stack = [y]n\\<ggreater>l;\n                ba = n[y::=s] \\<star> l\\<rbrakk>\n               \\<Longrightarrow> P;\n            \\<And>x y n u v l.\n               \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                stack = [y]n\\<ggreater>l;\n                ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n               \\<Longrightarrow> P\\<rbrakk>\n           \\<Longrightarrow> P;\n        t \\<star> [name]trm\\<ggreater>stack \\<mapsto> r;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t';\n            r = t' \\<star> [name]trm\\<ggreater>stack\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [name]trm\\<ggreater>stack \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s y n l.\n           \\<lbrakk>t = [s]; [name]trm\\<ggreater>stack = [y]n\\<ggreater>l;\n            r = n[y::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x y n u v l.\n           \\<lbrakk>x \\<sharp> y; x \\<sharp> n; t = u to x in v;\n            [name]trm\\<ggreater>stack = [y]n\\<ggreater>l;\n            r = (u to x in v to y in n) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P", "thus \"P\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?b \\<star> L \\<mapsto> ?ba;\n   \\<And>t'.\n      \\<lbrakk>?b \\<mapsto> t'; ?ba = t' \\<star> L\\<rbrakk>\n      \\<Longrightarrow> P;\n   \\<And>k'.\n      \\<lbrakk> L \\<mapsto> k' ; ?ba = ?b \\<star> k'\\<rbrakk>\n      \\<Longrightarrow> P;\n   \\<And>s y n l.\n      \\<lbrakk>?b = [s]; L = [y]n\\<ggreater>l;\n       ?ba = n[y::=s] \\<star> l\\<rbrakk>\n      \\<Longrightarrow> P;\n   \\<And>x y n u v l.\n      \\<lbrakk>x \\<sharp> y; x \\<sharp> n; ?b = u to x in v;\n       L = [y]n\\<ggreater>l;\n       ?ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n      \\<Longrightarrow> P\\<rbrakk>\n  \\<Longrightarrow> P\n  \\<lbrakk>t \\<mapsto> ?t'; r = ?t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n  \\<Longrightarrow> P\n  \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> ?k' ; r = t \\<star> ?k'\\<rbrakk>\n  \\<Longrightarrow> P\n  \\<lbrakk>t = [?s]; [y]n\\<ggreater>L = [?y]?n\\<ggreater>?l;\n   r = ?n[?y::=?s] \\<star> ?l\\<rbrakk>\n  \\<Longrightarrow> P\n  \\<lbrakk>?x \\<sharp> ?y; ?x \\<sharp> ?n; t = ?u to ?x in ?v;\n   [y]n\\<ggreater>L = [?y]?n\\<ggreater>?l;\n   r = (?u to ?x in ?v to ?y in ?n) \\<star> ?l\\<rbrakk>\n  \\<Longrightarrow> P\n\ngoal (1 subgoal):\n 1. P", "proof (cases rule:IH[where b=\"t to y in n\" and ba=\"r\"])"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<lbrakk>\\<And>b ba.\n                \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                 \\<And>t'.\n                    \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>k'.\n                    \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>s y n l.\n                    \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                     ba = n[y::=s] \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>x y n u v l.\n                    \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                     L = [y]n\\<ggreater>l;\n                     ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P\\<rbrakk>\n                \\<Longrightarrow> P;\n     \\<And>t'.\n        \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>k'.\n        \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>s ya na l.\n        \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = na[ya::=s] \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>x ya na u v l.\n        \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n         [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> (t to y in n) \\<star> L \\<mapsto> r\n 2. \\<And>t'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        t to y in n \\<mapsto> t'; r = t' \\<star> L\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>k'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n         L \\<mapsto> k' ; r = (t to y in n) \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>s ya na l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        t to y in n = [s]; L = [ya]na\\<ggreater>l;\n        r = na[ya::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P\n 5. \\<And>x ya na u v l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        x \\<sharp> ya; x \\<sharp> na; t to y in n = u to x in v;\n        L = [ya]na\\<ggreater>l;\n        r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "case (2 r')"], ["proof (state)\nthis:\n  t to y in n \\<mapsto> r'\n  r = r' \\<star> L\n\ngoal (5 subgoals):\n 1. \\<lbrakk>\\<And>b ba.\n                \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                 \\<And>t'.\n                    \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>k'.\n                    \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>s y n l.\n                    \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                     ba = n[y::=s] \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>x y n u v l.\n                    \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                     L = [y]n\\<ggreater>l;\n                     ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P\\<rbrakk>\n                \\<Longrightarrow> P;\n     \\<And>t'.\n        \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>k'.\n        \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>s ya na l.\n        \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = na[ya::=s] \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>x ya na u v l.\n        \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n         [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> (t to y in n) \\<star> L \\<mapsto> r\n 2. \\<And>t'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        t to y in n \\<mapsto> t'; r = t' \\<star> L\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>k'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n         L \\<mapsto> k' ; r = (t to y in n) \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>s ya na l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        t to y in n = [s]; L = [ya]na\\<ggreater>l;\n        r = na[ya::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P\n 5. \\<And>x ya na u v l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        x \\<sharp> ya; x \\<sharp> na; t to y in n = u to x in v;\n        L = [ya]na\\<ggreater>l;\n        r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "have red: \"t to y in n \\<mapsto> r'\" and r: \" r = r' \\<star> L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t to y in n \\<mapsto> r' &&& r = r' \\<star> L", "by fact+"], ["proof (state)\nthis:\n  t to y in n \\<mapsto> r'\n  r = r' \\<star> L\n\ngoal (5 subgoals):\n 1. \\<lbrakk>\\<And>b ba.\n                \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                 \\<And>t'.\n                    \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>k'.\n                    \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>s y n l.\n                    \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                     ba = n[y::=s] \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>x y n u v l.\n                    \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                     L = [y]n\\<ggreater>l;\n                     ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P\\<rbrakk>\n                \\<Longrightarrow> P;\n     \\<And>t'.\n        \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>k'.\n        \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>s ya na l.\n        \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = na[ya::=s] \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>x ya na u v l.\n        \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n         [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> (t to y in n) \\<star> L \\<mapsto> r\n 2. \\<And>t'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        t to y in n \\<mapsto> t'; r = t' \\<star> L\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>k'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n         L \\<mapsto> k' ; r = (t to y in n) \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>s ya na l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        t to y in n = [s]; L = [ya]na\\<ggreater>l;\n        r = na[ya::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P\n 5. \\<And>x ya na u v l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        x \\<sharp> ya; x \\<sharp> na; t to y in n = u to x in v;\n        L = [ya]na\\<ggreater>l;\n        r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "txt \\<open>If @{term \"m to y in n\"} makes a step we reason by case distinction      \non the successors of @{term \"m to y in n\"}. We want to use the strong inversion\nprinciple for the reduction relation. For this we need that $y$ is fresh for\n@{term \"t to y in n\"} and $r'$.\\<close>"], ["proof (state)\nthis:\n  t to y in n \\<mapsto> r'\n  r = r' \\<star> L\n\ngoal (5 subgoals):\n 1. \\<lbrakk>\\<And>b ba.\n                \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                 \\<And>t'.\n                    \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>k'.\n                    \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>s y n l.\n                    \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                     ba = n[y::=s] \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>x y n u v l.\n                    \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                     L = [y]n\\<ggreater>l;\n                     ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P\\<rbrakk>\n                \\<Longrightarrow> P;\n     \\<And>t'.\n        \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>k'.\n        \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>s ya na l.\n        \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = na[ya::=s] \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>x ya na u v l.\n        \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n         [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> (t to y in n) \\<star> L \\<mapsto> r\n 2. \\<And>t'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        t to y in n \\<mapsto> t'; r = t' \\<star> L\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>k'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n         L \\<mapsto> k' ; r = (t to y in n) \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>s ya na l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        t to y in n = [s]; L = [ya]na\\<ggreater>l;\n        r = na[ya::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P\n 5. \\<And>x ya na u v l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        x \\<sharp> ya; x \\<sharp> na; t to y in n = u to x in v;\n        L = [ya]na\\<ggreater>l;\n        r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "from yfresh r"], ["proof (chain)\npicking this:\n  y \\<sharp> t\n  y \\<sharp> r\n  y \\<sharp> L\n  r = r' \\<star> L", "have y: \"y \\<sharp>  t to y in n\"   \"y \\<sharp> r'\""], ["proof (prove)\nusing this:\n  y \\<sharp> t\n  y \\<sharp> r\n  y \\<sharp> L\n  r = r' \\<star> L\n\ngoal (1 subgoal):\n 1. y \\<sharp> t to y in n &&& y \\<sharp> r'", "by (auto simp add: abs_fresh)"], ["proof (state)\nthis:\n  y \\<sharp> t to y in n\n  y \\<sharp> r'\n\ngoal (5 subgoals):\n 1. \\<lbrakk>\\<And>b ba.\n                \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                 \\<And>t'.\n                    \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>k'.\n                    \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>s y n l.\n                    \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                     ba = n[y::=s] \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>x y n u v l.\n                    \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                     L = [y]n\\<ggreater>l;\n                     ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P\\<rbrakk>\n                \\<Longrightarrow> P;\n     \\<And>t'.\n        \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>k'.\n        \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>s ya na l.\n        \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = na[ya::=s] \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>x ya na u v l.\n        \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n         [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> (t to y in n) \\<star> L \\<mapsto> r\n 2. \\<And>t'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        t to y in n \\<mapsto> t'; r = t' \\<star> L\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>k'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n         L \\<mapsto> k' ; r = (t to y in n) \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>s ya na l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        t to y in n = [s]; L = [ya]na\\<ggreater>l;\n        r = na[ya::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P\n 5. \\<And>x ya na u v l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        x \\<sharp> ya; x \\<sharp> na; t to y in n = u to x in v;\n        L = [ya]na\\<ggreater>l;\n        r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "obtain z where z: \"z \\<noteq> y\"   \"z \\<sharp> r'\"   \"z \\<sharp> t to y in n\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z.\n        \\<lbrakk>z \\<noteq> y; z \\<sharp> r';\n         z \\<sharp> t to y in n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using ex_fresh[of \"(y,r',t to y in n)\"]"], ["proof (prove)\nusing this:\n  \\<exists>c. c \\<sharp> (y, r', t to y in n)\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        \\<lbrakk>z \\<noteq> y; z \\<sharp> r';\n         z \\<sharp> t to y in n\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by(auto simp add:fresh_prod fresh_atm)"], ["proof (state)\nthis:\n  z \\<noteq> y\n  z \\<sharp> r'\n  z \\<sharp> t to y in n\n\ngoal (5 subgoals):\n 1. \\<lbrakk>\\<And>b ba.\n                \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                 \\<And>t'.\n                    \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>k'.\n                    \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>s y n l.\n                    \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                     ba = n[y::=s] \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>x y n u v l.\n                    \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                     L = [y]n\\<ggreater>l;\n                     ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P\\<rbrakk>\n                \\<Longrightarrow> P;\n     \\<And>t'.\n        \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>k'.\n        \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>s ya na l.\n        \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = na[ya::=s] \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>x ya na u v l.\n        \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n         [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> (t to y in n) \\<star> L \\<mapsto> r\n 2. \\<And>t'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        t to y in n \\<mapsto> t'; r = t' \\<star> L\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>k'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n         L \\<mapsto> k' ; r = (t to y in n) \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>s ya na l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        t to y in n = [s]; L = [ya]na\\<ggreater>l;\n        r = na[ya::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P\n 5. \\<And>x ya na u v l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        x \\<sharp> ya; x \\<sharp> na; t to y in n = u to x in v;\n        L = [ya]na\\<ggreater>l;\n        r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "from red  r"], ["proof (chain)\npicking this:\n  t to y in n \\<mapsto> r'\n  r = r' \\<star> L", "show \"P\""], ["proof (prove)\nusing this:\n  t to y in n \\<mapsto> r'\n  r = r' \\<star> L\n\ngoal (1 subgoal):\n 1. P", "proof (cases rule:reduction.strong_cases\n        [ where x=\"y\"and xa=\"y\" and xb=\"y\" and xc=\"y\" and xd=\"y\" \n          and xe=\"y\" and xf=\"y\" and xg=\"z\" and y=\"y\"])"], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t t' s.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = App (\\<Lambda> y . t) s \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>t t'.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . t \\<and>\n                          r' = \\<Lambda> y . t' \\<and>\n                          t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 5. \\<And>t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . App t (Var y) \\<and>\n                          r' = t \\<and> y \\<sharp> t\\<rbrakk>\n       \\<Longrightarrow> P\n 6. \\<And>s s' t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = s to y in t \\<and>\n                          r' = s' to y in t \\<and>\n                          y \\<sharp> (s, s') \\<and> s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P\n 7. \\<And>s t t'.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = s to y in t \\<and>\n                          r' = s to y in t' \\<and>\n                          y \\<sharp> s \\<and> t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 8. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = [s] to y in t \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 9. \\<And>s.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = s to y in [Var y] \\<and>\n                          r' = s \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 10. \\<And>s u t.\n        \\<lbrakk>r = r' \\<star> L;\n         \\<lbrakk>z \\<noteq> y; z \\<sharp> t to y in n; z \\<sharp> r';\n          y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n         \\<Longrightarrow> t to y in n = (s to z in t) to y in u \\<and>\n                           r' = s to z in t to y in u \\<and>\n                           z \\<sharp> (y, s, u) \\<and>\n                           y \\<sharp> (s, t)\\<rbrakk>\n        \\<Longrightarrow> P\nA total of 11 subgoals...", "case (r6 s t' u) \\<comment> \\<open>if $t$ makes a step we use assumption T\\<close>"], ["proof (state)\nthis:\n  \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n  \\<Longrightarrow> t to y in n = s to y in u \\<and>\n                    r' = t' to y in u \\<and>\n                    y \\<sharp> (s, t') \\<and> s \\<mapsto> t'\n\ngoal (11 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t t' s.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = App (\\<Lambda> y . t) s \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>t t'.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . t \\<and>\n                          r' = \\<Lambda> y . t' \\<and>\n                          t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 5. \\<And>t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . App t (Var y) \\<and>\n                          r' = t \\<and> y \\<sharp> t\\<rbrakk>\n       \\<Longrightarrow> P\n 6. \\<And>s s' t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = s to y in t \\<and>\n                          r' = s' to y in t \\<and>\n                          y \\<sharp> (s, s') \\<and> s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P\n 7. \\<And>s t t'.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = s to y in t \\<and>\n                          r' = s to y in t' \\<and>\n                          y \\<sharp> s \\<and> t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 8. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = [s] to y in t \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 9. \\<And>s.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = s to y in [Var y] \\<and>\n                          r' = s \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 10. \\<And>s u t.\n        \\<lbrakk>r = r' \\<star> L;\n         \\<lbrakk>z \\<noteq> y; z \\<sharp> t to y in n; z \\<sharp> r';\n          y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n         \\<Longrightarrow> t to y in n = (s to z in t) to y in u \\<and>\n                           r' = s to z in t to y in u \\<and>\n                           z \\<sharp> (y, s, u) \\<and>\n                           y \\<sharp> (s, t)\\<rbrakk>\n        \\<Longrightarrow> P\nA total of 11 subgoals...", "with y"], ["proof (chain)\npicking this:\n  y \\<sharp> t to y in n\n  y \\<sharp> r'\n  \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n  \\<Longrightarrow> t to y in n = s to y in u \\<and>\n                    r' = t' to y in u \\<and>\n                    y \\<sharp> (s, t') \\<and> s \\<mapsto> t'", "have m: \"t \\<mapsto> t'\"   \"r' = t' to y in n\""], ["proof (prove)\nusing this:\n  y \\<sharp> t to y in n\n  y \\<sharp> r'\n  \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n  \\<Longrightarrow> t to y in n = s to y in u \\<and>\n                    r' = t' to y in u \\<and>\n                    y \\<sharp> (s, t') \\<and> s \\<mapsto> t'\n\ngoal (1 subgoal):\n 1. t \\<mapsto> t' &&& r' = t' to y in n", "by auto"], ["proof (state)\nthis:\n  t \\<mapsto> t'\n  r' = t' to y in n\n\ngoal (11 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t t' s.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = App (\\<Lambda> y . t) s \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>t t'.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . t \\<and>\n                          r' = \\<Lambda> y . t' \\<and>\n                          t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 5. \\<And>t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . App t (Var y) \\<and>\n                          r' = t \\<and> y \\<sharp> t\\<rbrakk>\n       \\<Longrightarrow> P\n 6. \\<And>s s' t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = s to y in t \\<and>\n                          r' = s' to y in t \\<and>\n                          y \\<sharp> (s, s') \\<and> s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P\n 7. \\<And>s t t'.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = s to y in t \\<and>\n                          r' = s to y in t' \\<and>\n                          y \\<sharp> s \\<and> t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 8. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = [s] to y in t \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 9. \\<And>s.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = s to y in [Var y] \\<and>\n                          r' = s \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 10. \\<And>s u t.\n        \\<lbrakk>r = r' \\<star> L;\n         \\<lbrakk>z \\<noteq> y; z \\<sharp> t to y in n; z \\<sharp> r';\n          y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n         \\<Longrightarrow> t to y in n = (s to z in t) to y in u \\<and>\n                           r' = s to z in t to y in u \\<and>\n                           z \\<sharp> (y, s, u) \\<and>\n                           y \\<sharp> (s, t)\\<rbrakk>\n        \\<Longrightarrow> P\nA total of 11 subgoals...", "thus \"P\""], ["proof (prove)\nusing this:\n  t \\<mapsto> t'\n  r' = t' to y in n\n\ngoal (1 subgoal):\n 1. P", "using T[of t'] r"], ["proof (prove)\nusing this:\n  t \\<mapsto> t'\n  r' = t' to y in n\n  \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n  \\<Longrightarrow> P\n  r = r' \\<star> L\n\ngoal (1 subgoal):\n 1. P", "by auto"], ["proof (state)\nthis:\n  P\n\ngoal (10 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t t' s.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = App (\\<Lambda> y . t) s \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>t t'.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . t \\<and>\n                          r' = \\<Lambda> y . t' \\<and>\n                          t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 5. \\<And>t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . App t (Var y) \\<and>\n                          r' = t \\<and> y \\<sharp> t\\<rbrakk>\n       \\<Longrightarrow> P\n 6. \\<And>s t t'.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = s to y in t \\<and>\n                          r' = s to y in t' \\<and>\n                          y \\<sharp> s \\<and> t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 7. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = [s] to y in t \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 8. \\<And>s.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = s to y in [Var y] \\<and>\n                          r' = s \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 9. \\<And>s u t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>z \\<noteq> y; z \\<sharp> t to y in n; z \\<sharp> r';\n         y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = (s to z in t) to y in u \\<and>\n                          r' = s to z in t to y in u \\<and>\n                          z \\<sharp> (y, s, u) \\<and>\n                          y \\<sharp> (s, t)\\<rbrakk>\n       \\<Longrightarrow> P\n 10. \\<And>s s'.\n        \\<lbrakk>r = r' \\<star> L; t to y in n = [s]; r' = [s'];\n         s \\<mapsto> s'\\<rbrakk>\n        \\<Longrightarrow> P", "next"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t t' s.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = App (\\<Lambda> y . t) s \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>t t'.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . t \\<and>\n                          r' = \\<Lambda> y . t' \\<and>\n                          t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 5. \\<And>t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . App t (Var y) \\<and>\n                          r' = t \\<and> y \\<sharp> t\\<rbrakk>\n       \\<Longrightarrow> P\n 6. \\<And>s t t'.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = s to y in t \\<and>\n                          r' = s to y in t' \\<and>\n                          y \\<sharp> s \\<and> t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 7. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = [s] to y in t \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 8. \\<And>s.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = s to y in [Var y] \\<and>\n                          r' = s \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 9. \\<And>s u t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>z \\<noteq> y; z \\<sharp> t to y in n; z \\<sharp> r';\n         y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = (s to z in t) to y in u \\<and>\n                          r' = s to z in t to y in u \\<and>\n                          z \\<sharp> (y, s, u) \\<and>\n                          y \\<sharp> (s, t)\\<rbrakk>\n       \\<Longrightarrow> P\n 10. \\<And>s s'.\n        \\<lbrakk>r = r' \\<star> L; t to y in n = [s]; r' = [s'];\n         s \\<mapsto> s'\\<rbrakk>\n        \\<Longrightarrow> P", "case (r7 _ _ n')"], ["proof (state)\nthis:\n  \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n  \\<Longrightarrow> t to y in n = s_ to y in t_ \\<and>\n                    r' = s_ to y in n' \\<and>\n                    y \\<sharp> s_ \\<and> t_ \\<mapsto> n'\n\ngoal (10 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t t' s.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = App (\\<Lambda> y . t) s \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>t t'.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . t \\<and>\n                          r' = \\<Lambda> y . t' \\<and>\n                          t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 5. \\<And>t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . App t (Var y) \\<and>\n                          r' = t \\<and> y \\<sharp> t\\<rbrakk>\n       \\<Longrightarrow> P\n 6. \\<And>s t t'.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = s to y in t \\<and>\n                          r' = s to y in t' \\<and>\n                          y \\<sharp> s \\<and> t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 7. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = [s] to y in t \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 8. \\<And>s.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = s to y in [Var y] \\<and>\n                          r' = s \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 9. \\<And>s u t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>z \\<noteq> y; z \\<sharp> t to y in n; z \\<sharp> r';\n         y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = (s to z in t) to y in u \\<and>\n                          r' = s to z in t to y in u \\<and>\n                          z \\<sharp> (y, s, u) \\<and>\n                          y \\<sharp> (s, t)\\<rbrakk>\n       \\<Longrightarrow> P\n 10. \\<And>s s'.\n        \\<lbrakk>r = r' \\<star> L; t to y in n = [s]; r' = [s'];\n         s \\<mapsto> s'\\<rbrakk>\n        \\<Longrightarrow> P", "with y"], ["proof (chain)\npicking this:\n  y \\<sharp> t to y in n\n  y \\<sharp> r'\n  \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n  \\<Longrightarrow> t to y in n = s_ to y in t_ \\<and>\n                    r' = s_ to y in n' \\<and>\n                    y \\<sharp> s_ \\<and> t_ \\<mapsto> n'", "have n: \"n \\<mapsto> n'\" and r': \"r' = t to y in n'\""], ["proof (prove)\nusing this:\n  y \\<sharp> t to y in n\n  y \\<sharp> r'\n  \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n  \\<Longrightarrow> t to y in n = s_ to y in t_ \\<and>\n                    r' = s_ to y in n' \\<and>\n                    y \\<sharp> s_ \\<and> t_ \\<mapsto> n'\n\ngoal (1 subgoal):\n 1. n \\<mapsto> n' &&& r' = t to y in n'", "by (auto simp add: alpha)"], ["proof (state)\nthis:\n  n \\<mapsto> n'\n  r' = t to y in n'\n\ngoal (10 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t t' s.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = App (\\<Lambda> y . t) s \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>t t'.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . t \\<and>\n                          r' = \\<Lambda> y . t' \\<and>\n                          t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 5. \\<And>t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . App t (Var y) \\<and>\n                          r' = t \\<and> y \\<sharp> t\\<rbrakk>\n       \\<Longrightarrow> P\n 6. \\<And>s t t'.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = s to y in t \\<and>\n                          r' = s to y in t' \\<and>\n                          y \\<sharp> s \\<and> t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 7. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = [s] to y in t \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 8. \\<And>s.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = s to y in [Var y] \\<and>\n                          r' = s \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 9. \\<And>s u t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>z \\<noteq> y; z \\<sharp> t to y in n; z \\<sharp> r';\n         y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = (s to z in t) to y in u \\<and>\n                          r' = s to z in t to y in u \\<and>\n                          z \\<sharp> (y, s, u) \\<and>\n                          y \\<sharp> (s, t)\\<rbrakk>\n       \\<Longrightarrow> P\n 10. \\<And>s s'.\n        \\<lbrakk>r = r' \\<star> L; t to y in n = [s]; r' = [s'];\n         s \\<mapsto> s'\\<rbrakk>\n        \\<Longrightarrow> P", "txt \\<open>Since @{term \"k = [y]n\\<ggreater>L\"}, the reduction @{thm n} occurs within\n        the stack $k$. Hence, we need to establish this stack reduction.\\<close>"], ["proof (state)\nthis:\n  n \\<mapsto> n'\n  r' = t to y in n'\n\ngoal (10 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t t' s.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = App (\\<Lambda> y . t) s \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>t t'.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . t \\<and>\n                          r' = \\<Lambda> y . t' \\<and>\n                          t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 5. \\<And>t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . App t (Var y) \\<and>\n                          r' = t \\<and> y \\<sharp> t\\<rbrakk>\n       \\<Longrightarrow> P\n 6. \\<And>s t t'.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = s to y in t \\<and>\n                          r' = s to y in t' \\<and>\n                          y \\<sharp> s \\<and> t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 7. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = [s] to y in t \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 8. \\<And>s.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = s to y in [Var y] \\<and>\n                          r' = s \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 9. \\<And>s u t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>z \\<noteq> y; z \\<sharp> t to y in n; z \\<sharp> r';\n         y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = (s to z in t) to y in u \\<and>\n                          r' = s to z in t to y in u \\<and>\n                          z \\<sharp> (y, s, u) \\<and>\n                          y \\<sharp> (s, t)\\<rbrakk>\n       \\<Longrightarrow> P\n 10. \\<And>s s'.\n        \\<lbrakk>r = r' \\<star> L; t to y in n = [s]; r' = [s'];\n         s \\<mapsto> s'\\<rbrakk>\n        \\<Longrightarrow> P", "have \"[y]n\\<ggreater>L \\<mapsto> [y]n'\\<ggreater>L\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  [y]n\\<ggreater>L \\<mapsto> [y]n'\\<ggreater>L", "unfolding stack_reduction_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>t.\n       t \\<star> [y]n\\<ggreater>L \\<mapsto> t \\<star> [y]n'\\<ggreater>L", "proof"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<star> [y]n\\<ggreater>L \\<mapsto> t \\<star> [y]n'\\<ggreater>L", "fix u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<star> [y]n\\<ggreater>L \\<mapsto> t \\<star> [y]n'\\<ggreater>L", "have \"u to y in n \\<mapsto> u to y in n'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u to y in n \\<mapsto> u to y in n'", "using n"], ["proof (prove)\nusing this:\n  n \\<mapsto> n'\n\ngoal (1 subgoal):\n 1. u to y in n \\<mapsto> u to y in n'", ".."], ["proof (state)\nthis:\n  u to y in n \\<mapsto> u to y in n'\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<star> [y]n\\<ggreater>L \\<mapsto> t \\<star> [y]n'\\<ggreater>L", "hence \"(u to y in n) \\<star> L \\<mapsto> (u to y in n') \\<star> L\""], ["proof (prove)\nusing this:\n  u to y in n \\<mapsto> u to y in n'\n\ngoal (1 subgoal):\n 1. (u to y in n) \\<star> L \\<mapsto> (u to y in n') \\<star> L", ".."], ["proof (state)\nthis:\n  (u to y in n) \\<star> L \\<mapsto> (u to y in n') \\<star> L\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<star> [y]n\\<ggreater>L \\<mapsto> t \\<star> [y]n'\\<ggreater>L", "thus \" u \\<star> [y]n\\<ggreater>L \\<mapsto> u \\<star> [y]n'\\<ggreater>L\""], ["proof (prove)\nusing this:\n  (u to y in n) \\<star> L \\<mapsto> (u to y in n') \\<star> L\n\ngoal (1 subgoal):\n 1. u \\<star> [y]n\\<ggreater>L \\<mapsto> u \\<star> [y]n'\\<ggreater>L", "by simp"], ["proof (state)\nthis:\n  u \\<star> [y]n\\<ggreater>L \\<mapsto> u \\<star> [y]n'\\<ggreater>L\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n   [y]n\\<ggreater>L \\<mapsto> [y]n'\\<ggreater>L \n\ngoal (10 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t t' s.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = App (\\<Lambda> y . t) s \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>t t'.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . t \\<and>\n                          r' = \\<Lambda> y . t' \\<and>\n                          t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 5. \\<And>t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . App t (Var y) \\<and>\n                          r' = t \\<and> y \\<sharp> t\\<rbrakk>\n       \\<Longrightarrow> P\n 6. \\<And>s t t'.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = s to y in t \\<and>\n                          r' = s to y in t' \\<and>\n                          y \\<sharp> s \\<and> t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 7. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = [s] to y in t \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 8. \\<And>s.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = s to y in [Var y] \\<and>\n                          r' = s \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 9. \\<And>s u t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>z \\<noteq> y; z \\<sharp> t to y in n; z \\<sharp> r';\n         y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = (s to z in t) to y in u \\<and>\n                          r' = s to z in t to y in u \\<and>\n                          z \\<sharp> (y, s, u) \\<and>\n                          y \\<sharp> (s, t)\\<rbrakk>\n       \\<Longrightarrow> P\n 10. \\<And>s s'.\n        \\<lbrakk>r = r' \\<star> L; t to y in n = [s]; r' = [s'];\n         s \\<mapsto> s'\\<rbrakk>\n        \\<Longrightarrow> P", "moreover"], ["proof (state)\nthis:\n   [y]n\\<ggreater>L \\<mapsto> [y]n'\\<ggreater>L \n\ngoal (10 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t t' s.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = App (\\<Lambda> y . t) s \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>t t'.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . t \\<and>\n                          r' = \\<Lambda> y . t' \\<and>\n                          t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 5. \\<And>t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . App t (Var y) \\<and>\n                          r' = t \\<and> y \\<sharp> t\\<rbrakk>\n       \\<Longrightarrow> P\n 6. \\<And>s t t'.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = s to y in t \\<and>\n                          r' = s to y in t' \\<and>\n                          y \\<sharp> s \\<and> t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 7. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = [s] to y in t \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 8. \\<And>s.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = s to y in [Var y] \\<and>\n                          r' = s \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 9. \\<And>s u t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>z \\<noteq> y; z \\<sharp> t to y in n; z \\<sharp> r';\n         y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = (s to z in t) to y in u \\<and>\n                          r' = s to z in t to y in u \\<and>\n                          z \\<sharp> (y, s, u) \\<and>\n                          y \\<sharp> (s, t)\\<rbrakk>\n       \\<Longrightarrow> P\n 10. \\<And>s s'.\n        \\<lbrakk>r = r' \\<star> L; t to y in n = [s]; r' = [s'];\n         s \\<mapsto> s'\\<rbrakk>\n        \\<Longrightarrow> P", "have \"r = t \\<star> [y]n'\\<ggreater>L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r = t \\<star> [y]n'\\<ggreater>L", "using r r'"], ["proof (prove)\nusing this:\n  r = r' \\<star> L\n  r' = t to y in n'\n\ngoal (1 subgoal):\n 1. r = t \\<star> [y]n'\\<ggreater>L", "by simp"], ["proof (state)\nthis:\n  r = t \\<star> [y]n'\\<ggreater>L\n\ngoal (10 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t t' s.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = App (\\<Lambda> y . t) s \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>t t'.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . t \\<and>\n                          r' = \\<Lambda> y . t' \\<and>\n                          t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 5. \\<And>t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . App t (Var y) \\<and>\n                          r' = t \\<and> y \\<sharp> t\\<rbrakk>\n       \\<Longrightarrow> P\n 6. \\<And>s t t'.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = s to y in t \\<and>\n                          r' = s to y in t' \\<and>\n                          y \\<sharp> s \\<and> t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 7. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = [s] to y in t \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 8. \\<And>s.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = s to y in [Var y] \\<and>\n                          r' = s \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 9. \\<And>s u t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>z \\<noteq> y; z \\<sharp> t to y in n; z \\<sharp> r';\n         y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = (s to z in t) to y in u \\<and>\n                          r' = s to z in t to y in u \\<and>\n                          z \\<sharp> (y, s, u) \\<and>\n                          y \\<sharp> (s, t)\\<rbrakk>\n       \\<Longrightarrow> P\n 10. \\<And>s s'.\n        \\<lbrakk>r = r' \\<star> L; t to y in n = [s]; r' = [s'];\n         s \\<mapsto> s'\\<rbrakk>\n        \\<Longrightarrow> P", "ultimately"], ["proof (chain)\npicking this:\n   [y]n\\<ggreater>L \\<mapsto> [y]n'\\<ggreater>L \n  r = t \\<star> [y]n'\\<ggreater>L", "show \"P\""], ["proof (prove)\nusing this:\n   [y]n\\<ggreater>L \\<mapsto> [y]n'\\<ggreater>L \n  r = t \\<star> [y]n'\\<ggreater>L\n\ngoal (1 subgoal):\n 1. P", "by (rule K)"], ["proof (state)\nthis:\n  P\n\ngoal (9 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t t' s.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = App (\\<Lambda> y . t) s \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>t t'.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . t \\<and>\n                          r' = \\<Lambda> y . t' \\<and>\n                          t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 5. \\<And>t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . App t (Var y) \\<and>\n                          r' = t \\<and> y \\<sharp> t\\<rbrakk>\n       \\<Longrightarrow> P\n 6. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = [s] to y in t \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 7. \\<And>s.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = s to y in [Var y] \\<and>\n                          r' = s \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 8. \\<And>s u t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>z \\<noteq> y; z \\<sharp> t to y in n; z \\<sharp> r';\n         y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = (s to z in t) to y in u \\<and>\n                          r' = s to z in t to y in u \\<and>\n                          z \\<sharp> (y, s, u) \\<and>\n                          y \\<sharp> (s, t)\\<rbrakk>\n       \\<Longrightarrow> P\n 9. \\<And>s s'.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = [s]; r' = [s'];\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t t' s.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = App (\\<Lambda> y . t) s \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>t t'.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . t \\<and>\n                          r' = \\<Lambda> y . t' \\<and>\n                          t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 5. \\<And>t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . App t (Var y) \\<and>\n                          r' = t \\<and> y \\<sharp> t\\<rbrakk>\n       \\<Longrightarrow> P\n 6. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = [s] to y in t \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 7. \\<And>s.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = s to y in [Var y] \\<and>\n                          r' = s \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 8. \\<And>s u t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>z \\<noteq> y; z \\<sharp> t to y in n; z \\<sharp> r';\n         y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = (s to z in t) to y in u \\<and>\n                          r' = s to z in t to y in u \\<and>\n                          z \\<sharp> (y, s, u) \\<and>\n                          y \\<sharp> (s, t)\\<rbrakk>\n       \\<Longrightarrow> P\n 9. \\<And>s s'.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = [s]; r' = [s'];\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P", "case (r8 s _) \\<comment> \\<open>the case of a $\\beta$-reduction is exactly B\\<close>"], ["proof (state)\nthis:\n  \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n  \\<Longrightarrow> t to y in n = [s] to y in t_ \\<and>\n                    r' = t_[y::=s] \\<and> y \\<sharp> s\n\ngoal (9 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t t' s.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = App (\\<Lambda> y . t) s \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>t t'.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . t \\<and>\n                          r' = \\<Lambda> y . t' \\<and>\n                          t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 5. \\<And>t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . App t (Var y) \\<and>\n                          r' = t \\<and> y \\<sharp> t\\<rbrakk>\n       \\<Longrightarrow> P\n 6. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = [s] to y in t \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 7. \\<And>s.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = s to y in [Var y] \\<and>\n                          r' = s \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 8. \\<And>s u t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>z \\<noteq> y; z \\<sharp> t to y in n; z \\<sharp> r';\n         y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = (s to z in t) to y in u \\<and>\n                          r' = s to z in t to y in u \\<and>\n                          z \\<sharp> (y, s, u) \\<and>\n                          y \\<sharp> (s, t)\\<rbrakk>\n       \\<Longrightarrow> P\n 9. \\<And>s s'.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = [s]; r' = [s'];\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P", "with y"], ["proof (chain)\npicking this:\n  y \\<sharp> t to y in n\n  y \\<sharp> r'\n  \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n  \\<Longrightarrow> t to y in n = [s] to y in t_ \\<and>\n                    r' = t_[y::=s] \\<and> y \\<sharp> s", "have \"t = [s]\"   \"r' = n[y::=s]\""], ["proof (prove)\nusing this:\n  y \\<sharp> t to y in n\n  y \\<sharp> r'\n  \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n  \\<Longrightarrow> t to y in n = [s] to y in t_ \\<and>\n                    r' = t_[y::=s] \\<and> y \\<sharp> s\n\ngoal (1 subgoal):\n 1. t = [s] &&& r' = n[y::=s]", "by(auto simp add: alpha)"], ["proof (state)\nthis:\n  t = [s]\n  r' = n[y::=s]\n\ngoal (9 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t t' s.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = App (\\<Lambda> y . t) s \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>t t'.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . t \\<and>\n                          r' = \\<Lambda> y . t' \\<and>\n                          t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 5. \\<And>t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . App t (Var y) \\<and>\n                          r' = t \\<and> y \\<sharp> t\\<rbrakk>\n       \\<Longrightarrow> P\n 6. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = [s] to y in t \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 7. \\<And>s.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = s to y in [Var y] \\<and>\n                          r' = s \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 8. \\<And>s u t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>z \\<noteq> y; z \\<sharp> t to y in n; z \\<sharp> r';\n         y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = (s to z in t) to y in u \\<and>\n                          r' = s to z in t to y in u \\<and>\n                          z \\<sharp> (y, s, u) \\<and>\n                          y \\<sharp> (s, t)\\<rbrakk>\n       \\<Longrightarrow> P\n 9. \\<And>s s'.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = [s]; r' = [s'];\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P", "thus \"P\""], ["proof (prove)\nusing this:\n  t = [s]\n  r' = n[y::=s]\n\ngoal (1 subgoal):\n 1. P", "using B[of \"s\" \"y\" \"n\" \"L\"] r"], ["proof (prove)\nusing this:\n  t = [s]\n  r' = n[y::=s]\n  \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [y]n\\<ggreater>L;\n   r = n[y::=s] \\<star> L\\<rbrakk>\n  \\<Longrightarrow> P\n  r = r' \\<star> L\n\ngoal (1 subgoal):\n 1. P", "by auto"], ["proof (state)\nthis:\n  P\n\ngoal (8 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t t' s.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = App (\\<Lambda> y . t) s \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>t t'.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . t \\<and>\n                          r' = \\<Lambda> y . t' \\<and>\n                          t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 5. \\<And>t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . App t (Var y) \\<and>\n                          r' = t \\<and> y \\<sharp> t\\<rbrakk>\n       \\<Longrightarrow> P\n 6. \\<And>s.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = s to y in [Var y] \\<and>\n                          r' = s \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 7. \\<And>s u t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>z \\<noteq> y; z \\<sharp> t to y in n; z \\<sharp> r';\n         y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = (s to z in t) to y in u \\<and>\n                          r' = s to z in t to y in u \\<and>\n                          z \\<sharp> (y, s, u) \\<and>\n                          y \\<sharp> (s, t)\\<rbrakk>\n       \\<Longrightarrow> P\n 8. \\<And>s s'.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = [s]; r' = [s'];\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t t' s.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = App (\\<Lambda> y . t) s \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>t t'.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . t \\<and>\n                          r' = \\<Lambda> y . t' \\<and>\n                          t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 5. \\<And>t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . App t (Var y) \\<and>\n                          r' = t \\<and> y \\<sharp> t\\<rbrakk>\n       \\<Longrightarrow> P\n 6. \\<And>s.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = s to y in [Var y] \\<and>\n                          r' = s \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 7. \\<And>s u t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>z \\<noteq> y; z \\<sharp> t to y in n; z \\<sharp> r';\n         y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = (s to z in t) to y in u \\<and>\n                          r' = s to z in t to y in u \\<and>\n                          z \\<sharp> (y, s, u) \\<and>\n                          y \\<sharp> (s, t)\\<rbrakk>\n       \\<Longrightarrow> P\n 8. \\<And>s s'.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = [s]; r' = [s'];\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P", "case (r9 _) \\<comment> \\<open>The case of an $\\eta$-reduction is a stack\nreduction as well.\\<close>"], ["proof (state)\nthis:\n  \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n  \\<Longrightarrow> t to y in n = s_ to y in [Var y] \\<and>\n                    r' = s_ \\<and> y \\<sharp> s_\n\ngoal (8 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t t' s.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = App (\\<Lambda> y . t) s \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>t t'.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . t \\<and>\n                          r' = \\<Lambda> y . t' \\<and>\n                          t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 5. \\<And>t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . App t (Var y) \\<and>\n                          r' = t \\<and> y \\<sharp> t\\<rbrakk>\n       \\<Longrightarrow> P\n 6. \\<And>s.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = s to y in [Var y] \\<and>\n                          r' = s \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 7. \\<And>s u t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>z \\<noteq> y; z \\<sharp> t to y in n; z \\<sharp> r';\n         y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = (s to z in t) to y in u \\<and>\n                          r' = s to z in t to y in u \\<and>\n                          z \\<sharp> (y, s, u) \\<and>\n                          y \\<sharp> (s, t)\\<rbrakk>\n       \\<Longrightarrow> P\n 8. \\<And>s s'.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = [s]; r' = [s'];\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P", "with y"], ["proof (chain)\npicking this:\n  y \\<sharp> t to y in n\n  y \\<sharp> r'\n  \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n  \\<Longrightarrow> t to y in n = s_ to y in [Var y] \\<and>\n                    r' = s_ \\<and> y \\<sharp> s_", "have n: \"n = [Var y]\" and r': \"r' = t\""], ["proof (prove)\nusing this:\n  y \\<sharp> t to y in n\n  y \\<sharp> r'\n  \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n  \\<Longrightarrow> t to y in n = s_ to y in [Var y] \\<and>\n                    r' = s_ \\<and> y \\<sharp> s_\n\ngoal (1 subgoal):\n 1. n = [Var y] &&& r' = t", "by(auto simp add: alpha)"], ["proof (state)\nthis:\n  n = [Var y]\n  r' = t\n\ngoal (8 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t t' s.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = App (\\<Lambda> y . t) s \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>t t'.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . t \\<and>\n                          r' = \\<Lambda> y . t' \\<and>\n                          t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 5. \\<And>t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . App t (Var y) \\<and>\n                          r' = t \\<and> y \\<sharp> t\\<rbrakk>\n       \\<Longrightarrow> P\n 6. \\<And>s.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = s to y in [Var y] \\<and>\n                          r' = s \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 7. \\<And>s u t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>z \\<noteq> y; z \\<sharp> t to y in n; z \\<sharp> r';\n         y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = (s to z in t) to y in u \\<and>\n                          r' = s to z in t to y in u \\<and>\n                          z \\<sharp> (y, s, u) \\<and>\n                          y \\<sharp> (s, t)\\<rbrakk>\n       \\<Longrightarrow> P\n 8. \\<And>s s'.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = [s]; r' = [s'];\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P", "{"], ["proof (state)\nthis:\n  n = [Var y]\n  r' = t\n\ngoal (8 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t t' s.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = App (\\<Lambda> y . t) s \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>t t'.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . t \\<and>\n                          r' = \\<Lambda> y . t' \\<and>\n                          t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 5. \\<And>t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . App t (Var y) \\<and>\n                          r' = t \\<and> y \\<sharp> t\\<rbrakk>\n       \\<Longrightarrow> P\n 6. \\<And>s.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = s to y in [Var y] \\<and>\n                          r' = s \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 7. \\<And>s u t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>z \\<noteq> y; z \\<sharp> t to y in n; z \\<sharp> r';\n         y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = (s to z in t) to y in u \\<and>\n                          r' = s to z in t to y in u \\<and>\n                          z \\<sharp> (y, s, u) \\<and>\n                          y \\<sharp> (s, t)\\<rbrakk>\n       \\<Longrightarrow> P\n 8. \\<And>s s'.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = [s]; r' = [s'];\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P", "fix u"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t t' s.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = App (\\<Lambda> y . t) s \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>t t'.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . t \\<and>\n                          r' = \\<Lambda> y . t' \\<and>\n                          t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 5. \\<And>t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . App t (Var y) \\<and>\n                          r' = t \\<and> y \\<sharp> t\\<rbrakk>\n       \\<Longrightarrow> P\n 6. \\<And>s.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = s to y in [Var y] \\<and>\n                          r' = s \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 7. \\<And>s u t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>z \\<noteq> y; z \\<sharp> t to y in n; z \\<sharp> r';\n         y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = (s to z in t) to y in u \\<and>\n                          r' = s to z in t to y in u \\<and>\n                          z \\<sharp> (y, s, u) \\<and>\n                          y \\<sharp> (s, t)\\<rbrakk>\n       \\<Longrightarrow> P\n 8. \\<And>s s'.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = [s]; r' = [s'];\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P", "have \"u to y in n \\<mapsto> u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. u to y in n \\<mapsto> u", "unfolding n"], ["proof (prove)\ngoal (1 subgoal):\n 1. u to y in [Var y] \\<mapsto> u", ".."], ["proof (state)\nthis:\n  u to y in n \\<mapsto> u\n\ngoal (8 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t t' s.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = App (\\<Lambda> y . t) s \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>t t'.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . t \\<and>\n                          r' = \\<Lambda> y . t' \\<and>\n                          t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 5. \\<And>t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . App t (Var y) \\<and>\n                          r' = t \\<and> y \\<sharp> t\\<rbrakk>\n       \\<Longrightarrow> P\n 6. \\<And>s.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = s to y in [Var y] \\<and>\n                          r' = s \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 7. \\<And>s u t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>z \\<noteq> y; z \\<sharp> t to y in n; z \\<sharp> r';\n         y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = (s to z in t) to y in u \\<and>\n                          r' = s to z in t to y in u \\<and>\n                          z \\<sharp> (y, s, u) \\<and>\n                          y \\<sharp> (s, t)\\<rbrakk>\n       \\<Longrightarrow> P\n 8. \\<And>s s'.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = [s]; r' = [s'];\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P", "hence \"(u to y in n) \\<star> L \\<mapsto> u \\<star> L \""], ["proof (prove)\nusing this:\n  u to y in n \\<mapsto> u\n\ngoal (1 subgoal):\n 1. (u to y in n) \\<star> L \\<mapsto> u \\<star> L", ".."], ["proof (state)\nthis:\n  (u to y in n) \\<star> L \\<mapsto> u \\<star> L\n\ngoal (8 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t t' s.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = App (\\<Lambda> y . t) s \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>t t'.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . t \\<and>\n                          r' = \\<Lambda> y . t' \\<and>\n                          t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 5. \\<And>t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . App t (Var y) \\<and>\n                          r' = t \\<and> y \\<sharp> t\\<rbrakk>\n       \\<Longrightarrow> P\n 6. \\<And>s.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = s to y in [Var y] \\<and>\n                          r' = s \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 7. \\<And>s u t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>z \\<noteq> y; z \\<sharp> t to y in n; z \\<sharp> r';\n         y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = (s to z in t) to y in u \\<and>\n                          r' = s to z in t to y in u \\<and>\n                          z \\<sharp> (y, s, u) \\<and>\n                          y \\<sharp> (s, t)\\<rbrakk>\n       \\<Longrightarrow> P\n 8. \\<And>s s'.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = [s]; r' = [s'];\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P", "hence \"u \\<star> [y]n\\<ggreater>L \\<mapsto> u \\<star> L\""], ["proof (prove)\nusing this:\n  (u to y in n) \\<star> L \\<mapsto> u \\<star> L\n\ngoal (1 subgoal):\n 1. u \\<star> [y]n\\<ggreater>L \\<mapsto> u \\<star> L", "by simp"], ["proof (state)\nthis:\n  u \\<star> [y]n\\<ggreater>L \\<mapsto> u \\<star> L\n\ngoal (8 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t t' s.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = App (\\<Lambda> y . t) s \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>t t'.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . t \\<and>\n                          r' = \\<Lambda> y . t' \\<and>\n                          t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 5. \\<And>t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . App t (Var y) \\<and>\n                          r' = t \\<and> y \\<sharp> t\\<rbrakk>\n       \\<Longrightarrow> P\n 6. \\<And>s.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = s to y in [Var y] \\<and>\n                          r' = s \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 7. \\<And>s u t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>z \\<noteq> y; z \\<sharp> t to y in n; z \\<sharp> r';\n         y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = (s to z in t) to y in u \\<and>\n                          r' = s to z in t to y in u \\<and>\n                          z \\<sharp> (y, s, u) \\<and>\n                          y \\<sharp> (s, t)\\<rbrakk>\n       \\<Longrightarrow> P\n 8. \\<And>s s'.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = [s]; r' = [s'];\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P", "}"], ["proof (state)\nthis:\n  ?u2 \\<star> [y]n\\<ggreater>L \\<mapsto> ?u2 \\<star> L\n\ngoal (8 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t t' s.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = App (\\<Lambda> y . t) s \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>t t'.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . t \\<and>\n                          r' = \\<Lambda> y . t' \\<and>\n                          t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 5. \\<And>t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . App t (Var y) \\<and>\n                          r' = t \\<and> y \\<sharp> t\\<rbrakk>\n       \\<Longrightarrow> P\n 6. \\<And>s.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = s to y in [Var y] \\<and>\n                          r' = s \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 7. \\<And>s u t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>z \\<noteq> y; z \\<sharp> t to y in n; z \\<sharp> r';\n         y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = (s to z in t) to y in u \\<and>\n                          r' = s to z in t to y in u \\<and>\n                          z \\<sharp> (y, s, u) \\<and>\n                          y \\<sharp> (s, t)\\<rbrakk>\n       \\<Longrightarrow> P\n 8. \\<And>s s'.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = [s]; r' = [s'];\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P", "hence \"[y]n\\<ggreater>L \\<mapsto> L\""], ["proof (prove)\nusing this:\n  ?u2 \\<star> [y]n\\<ggreater>L \\<mapsto> ?u2 \\<star> L\n\ngoal (1 subgoal):\n 1.  [y]n\\<ggreater>L \\<mapsto> L", "unfolding stack_reduction_def"], ["proof (prove)\nusing this:\n  ?u2 \\<star> [y]n\\<ggreater>L \\<mapsto> ?u2 \\<star> L\n\ngoal (1 subgoal):\n 1. \\<forall>t. t \\<star> [y]n\\<ggreater>L \\<mapsto> t \\<star> L", ".."], ["proof (state)\nthis:\n   [y]n\\<ggreater>L \\<mapsto> L \n\ngoal (8 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t t' s.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = App (\\<Lambda> y . t) s \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>t t'.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . t \\<and>\n                          r' = \\<Lambda> y . t' \\<and>\n                          t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 5. \\<And>t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . App t (Var y) \\<and>\n                          r' = t \\<and> y \\<sharp> t\\<rbrakk>\n       \\<Longrightarrow> P\n 6. \\<And>s.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = s to y in [Var y] \\<and>\n                          r' = s \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 7. \\<And>s u t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>z \\<noteq> y; z \\<sharp> t to y in n; z \\<sharp> r';\n         y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = (s to z in t) to y in u \\<and>\n                          r' = s to z in t to y in u \\<and>\n                          z \\<sharp> (y, s, u) \\<and>\n                          y \\<sharp> (s, t)\\<rbrakk>\n       \\<Longrightarrow> P\n 8. \\<And>s s'.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = [s]; r' = [s'];\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P", "moreover"], ["proof (state)\nthis:\n   [y]n\\<ggreater>L \\<mapsto> L \n\ngoal (8 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t t' s.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = App (\\<Lambda> y . t) s \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>t t'.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . t \\<and>\n                          r' = \\<Lambda> y . t' \\<and>\n                          t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 5. \\<And>t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . App t (Var y) \\<and>\n                          r' = t \\<and> y \\<sharp> t\\<rbrakk>\n       \\<Longrightarrow> P\n 6. \\<And>s.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = s to y in [Var y] \\<and>\n                          r' = s \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 7. \\<And>s u t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>z \\<noteq> y; z \\<sharp> t to y in n; z \\<sharp> r';\n         y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = (s to z in t) to y in u \\<and>\n                          r' = s to z in t to y in u \\<and>\n                          z \\<sharp> (y, s, u) \\<and>\n                          y \\<sharp> (s, t)\\<rbrakk>\n       \\<Longrightarrow> P\n 8. \\<And>s s'.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = [s]; r' = [s'];\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P", "have \"r = t \\<star> L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r = t \\<star> L", "using r r'"], ["proof (prove)\nusing this:\n  r = r' \\<star> L\n  r' = t\n\ngoal (1 subgoal):\n 1. r = t \\<star> L", "by simp"], ["proof (state)\nthis:\n  r = t \\<star> L\n\ngoal (8 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t t' s.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = App (\\<Lambda> y . t) s \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>t t'.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . t \\<and>\n                          r' = \\<Lambda> y . t' \\<and>\n                          t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 5. \\<And>t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . App t (Var y) \\<and>\n                          r' = t \\<and> y \\<sharp> t\\<rbrakk>\n       \\<Longrightarrow> P\n 6. \\<And>s.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = s to y in [Var y] \\<and>\n                          r' = s \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 7. \\<And>s u t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>z \\<noteq> y; z \\<sharp> t to y in n; z \\<sharp> r';\n         y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = (s to z in t) to y in u \\<and>\n                          r' = s to z in t to y in u \\<and>\n                          z \\<sharp> (y, s, u) \\<and>\n                          y \\<sharp> (s, t)\\<rbrakk>\n       \\<Longrightarrow> P\n 8. \\<And>s s'.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = [s]; r' = [s'];\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P", "ultimately"], ["proof (chain)\npicking this:\n   [y]n\\<ggreater>L \\<mapsto> L \n  r = t \\<star> L", "show \"P\""], ["proof (prove)\nusing this:\n   [y]n\\<ggreater>L \\<mapsto> L \n  r = t \\<star> L\n\ngoal (1 subgoal):\n 1. P", "by (rule K)"], ["proof (state)\nthis:\n  P\n\ngoal (7 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t t' s.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = App (\\<Lambda> y . t) s \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>t t'.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . t \\<and>\n                          r' = \\<Lambda> y . t' \\<and>\n                          t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 5. \\<And>t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . App t (Var y) \\<and>\n                          r' = t \\<and> y \\<sharp> t\\<rbrakk>\n       \\<Longrightarrow> P\n 6. \\<And>s u t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>z \\<noteq> y; z \\<sharp> t to y in n; z \\<sharp> r';\n         y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = (s to z in t) to y in u \\<and>\n                          r' = s to z in t to y in u \\<and>\n                          z \\<sharp> (y, s, u) \\<and>\n                          y \\<sharp> (s, t)\\<rbrakk>\n       \\<Longrightarrow> P\n 7. \\<And>s s'.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = [s]; r' = [s'];\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t t' s.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = App (\\<Lambda> y . t) s \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>t t'.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . t \\<and>\n                          r' = \\<Lambda> y . t' \\<and>\n                          t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 5. \\<And>t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . App t (Var y) \\<and>\n                          r' = t \\<and> y \\<sharp> t\\<rbrakk>\n       \\<Longrightarrow> P\n 6. \\<And>s u t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>z \\<noteq> y; z \\<sharp> t to y in n; z \\<sharp> r';\n         y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = (s to z in t) to y in u \\<and>\n                          r' = s to z in t to y in u \\<and>\n                          z \\<sharp> (y, s, u) \\<and>\n                          y \\<sharp> (s, t)\\<rbrakk>\n       \\<Longrightarrow> P\n 7. \\<And>s s'.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = [s]; r' = [s'];\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P", "case (r10 u _ v) \\<comment> \\<open>The assoc case holds by A.\\<close>"], ["proof (state)\nthis:\n  \\<lbrakk>z \\<noteq> y; z \\<sharp> t to y in n; z \\<sharp> r';\n   y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n  \\<Longrightarrow> t to y in n = (u to z in v) to y in u_ \\<and>\n                    r' = u to z in v to y in u_ \\<and>\n                    z \\<sharp> (y, u, u_) \\<and> y \\<sharp> (u, v)\n\ngoal (7 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t t' s.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = App (\\<Lambda> y . t) s \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>t t'.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . t \\<and>\n                          r' = \\<Lambda> y . t' \\<and>\n                          t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 5. \\<And>t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . App t (Var y) \\<and>\n                          r' = t \\<and> y \\<sharp> t\\<rbrakk>\n       \\<Longrightarrow> P\n 6. \\<And>s u t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>z \\<noteq> y; z \\<sharp> t to y in n; z \\<sharp> r';\n         y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = (s to z in t) to y in u \\<and>\n                          r' = s to z in t to y in u \\<and>\n                          z \\<sharp> (y, s, u) \\<and>\n                          y \\<sharp> (s, t)\\<rbrakk>\n       \\<Longrightarrow> P\n 7. \\<And>s s'.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = [s]; r' = [s'];\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P", "with y z"], ["proof (chain)\npicking this:\n  y \\<sharp> t to y in n\n  y \\<sharp> r'\n  z \\<noteq> y\n  z \\<sharp> r'\n  z \\<sharp> t to y in n\n  \\<lbrakk>z \\<noteq> y; z \\<sharp> t to y in n; z \\<sharp> r';\n   y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n  \\<Longrightarrow> t to y in n = (u to z in v) to y in u_ \\<and>\n                    r' = u to z in v to y in u_ \\<and>\n                    z \\<sharp> (y, u, u_) \\<and> y \\<sharp> (u, v)", "have \n        \"t = (u to z in v)\" \n        \"r' = u to z in (v to y in n)\" \n        \"z \\<sharp> (y,n)\""], ["proof (prove)\nusing this:\n  y \\<sharp> t to y in n\n  y \\<sharp> r'\n  z \\<noteq> y\n  z \\<sharp> r'\n  z \\<sharp> t to y in n\n  \\<lbrakk>z \\<noteq> y; z \\<sharp> t to y in n; z \\<sharp> r';\n   y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n  \\<Longrightarrow> t to y in n = (u to z in v) to y in u_ \\<and>\n                    r' = u to z in v to y in u_ \\<and>\n                    z \\<sharp> (y, u, u_) \\<and> y \\<sharp> (u, v)\n\ngoal (1 subgoal):\n 1. t = u to z in v &&& r' = u to z in v to y in n &&& z \\<sharp> (y, n)", "by (auto simp add: fresh_prod alpha)"], ["proof (state)\nthis:\n  t = u to z in v\n  r' = u to z in v to y in n\n  z \\<sharp> (y, n)\n\ngoal (7 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t t' s.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = App (\\<Lambda> y . t) s \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>t t'.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . t \\<and>\n                          r' = \\<Lambda> y . t' \\<and>\n                          t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 5. \\<And>t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . App t (Var y) \\<and>\n                          r' = t \\<and> y \\<sharp> t\\<rbrakk>\n       \\<Longrightarrow> P\n 6. \\<And>s u t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>z \\<noteq> y; z \\<sharp> t to y in n; z \\<sharp> r';\n         y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = (s to z in t) to y in u \\<and>\n                          r' = s to z in t to y in u \\<and>\n                          z \\<sharp> (y, s, u) \\<and>\n                          y \\<sharp> (s, t)\\<rbrakk>\n       \\<Longrightarrow> P\n 7. \\<And>s s'.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = [s]; r' = [s'];\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P", "thus \"P\""], ["proof (prove)\nusing this:\n  t = u to z in v\n  r' = u to z in v to y in n\n  z \\<sharp> (y, n)\n\ngoal (1 subgoal):\n 1. P", "using A[of z y n] r"], ["proof (prove)\nusing this:\n  t = u to z in v\n  r' = u to z in v to y in n\n  z \\<sharp> (y, n)\n  \\<lbrakk>z \\<sharp> y; z \\<sharp> n; t = ?u to z in ?v;\n   [y]n\\<ggreater>L = [y]n\\<ggreater>?l;\n   r = (?u to z in ?v to y in n) \\<star> ?l\\<rbrakk>\n  \\<Longrightarrow> P\n  r = r' \\<star> L\n\ngoal (1 subgoal):\n 1. P", "by auto"], ["proof (state)\nthis:\n  P\n\ngoal (6 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P\n 2. \\<And>t t' s.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>s t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = App (\\<Lambda> y . t) s \\<and>\n                          r' = t[y::=s] \\<and> y \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>t t'.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . t \\<and>\n                          r' = \\<Lambda> y . t' \\<and>\n                          t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> P\n 5. \\<And>t.\n       \\<lbrakk>r = r' \\<star> L;\n        \\<lbrakk>y \\<sharp> t to y in n; y \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> t to y in n = \\<Lambda> y . App t (Var y) \\<and>\n                          r' = t \\<and> y \\<sharp> t\\<rbrakk>\n       \\<Longrightarrow> P\n 6. \\<And>s s'.\n       \\<lbrakk>r = r' \\<star> L; t to y in n = [s]; r' = [s'];\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> P", "qed (insert y, auto)  \\<comment> \\<open>No other reductions are possible.\\<close>"], ["proof (state)\nthis:\n  P\n\ngoal (4 subgoals):\n 1. \\<lbrakk>\\<And>b ba.\n                \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                 \\<And>t'.\n                    \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>k'.\n                    \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>s y n l.\n                    \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                     ba = n[y::=s] \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>x y n u v l.\n                    \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                     L = [y]n\\<ggreater>l;\n                     ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P\\<rbrakk>\n                \\<Longrightarrow> P;\n     \\<And>t'.\n        \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>k'.\n        \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>s ya na l.\n        \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = na[ya::=s] \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>x ya na u v l.\n        \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n         [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> (t to y in n) \\<star> L \\<mapsto> r\n 2. \\<And>k'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n         L \\<mapsto> k' ; r = (t to y in n) \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>s ya na l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        t to y in n = [s]; L = [ya]na\\<ggreater>l;\n        r = na[ya::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>x ya na u v l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        x \\<sharp> ya; x \\<sharp> na; t to y in n = u to x in v;\n        L = [ya]na\\<ggreater>l;\n        r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<lbrakk>\\<And>b ba.\n                \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                 \\<And>t'.\n                    \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>k'.\n                    \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>s y n l.\n                    \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                     ba = n[y::=s] \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>x y n u v l.\n                    \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                     L = [y]n\\<ggreater>l;\n                     ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P\\<rbrakk>\n                \\<Longrightarrow> P;\n     \\<And>t'.\n        \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>k'.\n        \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>s ya na l.\n        \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = na[ya::=s] \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>x ya na u v l.\n        \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n         [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> (t to y in n) \\<star> L \\<mapsto> r\n 2. \\<And>k'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n         L \\<mapsto> k' ; r = (t to y in n) \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>s ya na l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        t to y in n = [s]; L = [ya]na\\<ggreater>l;\n        r = na[ya::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>x ya na u v l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        x \\<sharp> ya; x \\<sharp> na; t to y in n = u to x in v;\n        L = [ya]na\\<ggreater>l;\n        r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "txt \\<open>Next we have to solve the case where a reduction occurs deep within\n$L$. We get a reduction of the stack $k$ by moving the first stack frame\n``[y]n'' back to the right hand side of the dismantling operator.\\<close>"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<lbrakk>\\<And>b ba.\n                \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                 \\<And>t'.\n                    \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>k'.\n                    \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>s y n l.\n                    \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                     ba = n[y::=s] \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>x y n u v l.\n                    \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                     L = [y]n\\<ggreater>l;\n                     ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P\\<rbrakk>\n                \\<Longrightarrow> P;\n     \\<And>t'.\n        \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>k'.\n        \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>s ya na l.\n        \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = na[ya::=s] \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>x ya na u v l.\n        \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n         [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> (t to y in n) \\<star> L \\<mapsto> r\n 2. \\<And>k'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n         L \\<mapsto> k' ; r = (t to y in n) \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>s ya na l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        t to y in n = [s]; L = [ya]na\\<ggreater>l;\n        r = na[ya::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>x ya na u v l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        x \\<sharp> ya; x \\<sharp> na; t to y in n = u to x in v;\n        L = [ya]na\\<ggreater>l;\n        r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "case (3 L')"], ["proof (state)\nthis:\n   L \\<mapsto> L' \n  r = (t to y in n) \\<star> L'\n\ngoal (4 subgoals):\n 1. \\<lbrakk>\\<And>b ba.\n                \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                 \\<And>t'.\n                    \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>k'.\n                    \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>s y n l.\n                    \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                     ba = n[y::=s] \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>x y n u v l.\n                    \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                     L = [y]n\\<ggreater>l;\n                     ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P\\<rbrakk>\n                \\<Longrightarrow> P;\n     \\<And>t'.\n        \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>k'.\n        \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>s ya na l.\n        \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = na[ya::=s] \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>x ya na u v l.\n        \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n         [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> (t to y in n) \\<star> L \\<mapsto> r\n 2. \\<And>k'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n         L \\<mapsto> k' ; r = (t to y in n) \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>s ya na l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        t to y in n = [s]; L = [ya]na\\<ggreater>l;\n        r = na[ya::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>x ya na u v l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        x \\<sharp> ya; x \\<sharp> na; t to y in n = u to x in v;\n        L = [ya]na\\<ggreater>l;\n        r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "hence L: \"L \\<mapsto> L'\" and  r: \"r = (t to y in n) \\<star> L'\""], ["proof (prove)\nusing this:\n   L \\<mapsto> L' \n  r = (t to y in n) \\<star> L'\n\ngoal (1 subgoal):\n 1.  L \\<mapsto> L'  &&& r = (t to y in n) \\<star> L'", "by auto"], ["proof (state)\nthis:\n   L \\<mapsto> L' \n  r = (t to y in n) \\<star> L'\n\ngoal (4 subgoals):\n 1. \\<lbrakk>\\<And>b ba.\n                \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                 \\<And>t'.\n                    \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>k'.\n                    \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>s y n l.\n                    \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                     ba = n[y::=s] \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>x y n u v l.\n                    \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                     L = [y]n\\<ggreater>l;\n                     ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P\\<rbrakk>\n                \\<Longrightarrow> P;\n     \\<And>t'.\n        \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>k'.\n        \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>s ya na l.\n        \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = na[ya::=s] \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>x ya na u v l.\n        \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n         [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> (t to y in n) \\<star> L \\<mapsto> r\n 2. \\<And>k'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n         L \\<mapsto> k' ; r = (t to y in n) \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>s ya na l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        t to y in n = [s]; L = [ya]na\\<ggreater>l;\n        r = na[ya::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>x ya na u v l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        x \\<sharp> ya; x \\<sharp> na; t to y in n = u to x in v;\n        L = [ya]na\\<ggreater>l;\n        r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "{"], ["proof (state)\nthis:\n   L \\<mapsto> L' \n  r = (t to y in n) \\<star> L'\n\ngoal (4 subgoals):\n 1. \\<lbrakk>\\<And>b ba.\n                \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                 \\<And>t'.\n                    \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>k'.\n                    \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>s y n l.\n                    \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                     ba = n[y::=s] \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>x y n u v l.\n                    \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                     L = [y]n\\<ggreater>l;\n                     ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P\\<rbrakk>\n                \\<Longrightarrow> P;\n     \\<And>t'.\n        \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>k'.\n        \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>s ya na l.\n        \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = na[ya::=s] \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>x ya na u v l.\n        \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n         [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> (t to y in n) \\<star> L \\<mapsto> r\n 2. \\<And>k'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n         L \\<mapsto> k' ; r = (t to y in n) \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>s ya na l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        t to y in n = [s]; L = [ya]na\\<ggreater>l;\n        r = na[ya::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>x ya na u v l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        x \\<sharp> ya; x \\<sharp> na; t to y in n = u to x in v;\n        L = [ya]na\\<ggreater>l;\n        r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "fix s"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<lbrakk>\\<And>b ba.\n                \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                 \\<And>t'.\n                    \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>k'.\n                    \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>s y n l.\n                    \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                     ba = n[y::=s] \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>x y n u v l.\n                    \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                     L = [y]n\\<ggreater>l;\n                     ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P\\<rbrakk>\n                \\<Longrightarrow> P;\n     \\<And>t'.\n        \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>k'.\n        \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>s ya na l.\n        \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = na[ya::=s] \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>x ya na u v l.\n        \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n         [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> (t to y in n) \\<star> L \\<mapsto> r\n 2. \\<And>k'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n         L \\<mapsto> k' ; r = (t to y in n) \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>s ya na l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        t to y in n = [s]; L = [ya]na\\<ggreater>l;\n        r = na[ya::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>x ya na u v l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        x \\<sharp> ya; x \\<sharp> na; t to y in n = u to x in v;\n        L = [ya]na\\<ggreater>l;\n        r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "from L"], ["proof (chain)\npicking this:\n   L \\<mapsto> L'", "have  \"(s to y in n) \\<star> L \\<mapsto> (s to y in n) \\<star> L'\""], ["proof (prove)\nusing this:\n   L \\<mapsto> L' \n\ngoal (1 subgoal):\n 1. (s to y in n) \\<star> L \\<mapsto> (s to y in n) \\<star> L'", "unfolding stack_reduction_def"], ["proof (prove)\nusing this:\n  \\<forall>t. t \\<star> L \\<mapsto> t \\<star> L'\n\ngoal (1 subgoal):\n 1. (s to y in n) \\<star> L \\<mapsto> (s to y in n) \\<star> L'", ".."], ["proof (state)\nthis:\n  (s to y in n) \\<star> L \\<mapsto> (s to y in n) \\<star> L'\n\ngoal (4 subgoals):\n 1. \\<lbrakk>\\<And>b ba.\n                \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                 \\<And>t'.\n                    \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>k'.\n                    \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>s y n l.\n                    \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                     ba = n[y::=s] \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>x y n u v l.\n                    \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                     L = [y]n\\<ggreater>l;\n                     ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P\\<rbrakk>\n                \\<Longrightarrow> P;\n     \\<And>t'.\n        \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>k'.\n        \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>s ya na l.\n        \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = na[ya::=s] \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>x ya na u v l.\n        \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n         [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> (t to y in n) \\<star> L \\<mapsto> r\n 2. \\<And>k'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n         L \\<mapsto> k' ; r = (t to y in n) \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>s ya na l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        t to y in n = [s]; L = [ya]na\\<ggreater>l;\n        r = na[ya::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>x ya na u v l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        x \\<sharp> ya; x \\<sharp> na; t to y in n = u to x in v;\n        L = [ya]na\\<ggreater>l;\n        r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "hence \"s \\<star> [y]n\\<ggreater>L \\<mapsto> s \\<star> [y]n\\<ggreater>L'\""], ["proof (prove)\nusing this:\n  (s to y in n) \\<star> L \\<mapsto> (s to y in n) \\<star> L'\n\ngoal (1 subgoal):\n 1. s \\<star> [y]n\\<ggreater>L \\<mapsto> s \\<star> [y]n\\<ggreater>L'", "by simp"], ["proof (state)\nthis:\n  s \\<star> [y]n\\<ggreater>L \\<mapsto> s \\<star> [y]n\\<ggreater>L'\n\ngoal (4 subgoals):\n 1. \\<lbrakk>\\<And>b ba.\n                \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                 \\<And>t'.\n                    \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>k'.\n                    \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>s y n l.\n                    \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                     ba = n[y::=s] \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>x y n u v l.\n                    \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                     L = [y]n\\<ggreater>l;\n                     ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P\\<rbrakk>\n                \\<Longrightarrow> P;\n     \\<And>t'.\n        \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>k'.\n        \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>s ya na l.\n        \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = na[ya::=s] \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>x ya na u v l.\n        \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n         [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> (t to y in n) \\<star> L \\<mapsto> r\n 2. \\<And>k'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n         L \\<mapsto> k' ; r = (t to y in n) \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>s ya na l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        t to y in n = [s]; L = [ya]na\\<ggreater>l;\n        r = na[ya::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>x ya na u v l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        x \\<sharp> ya; x \\<sharp> na; t to y in n = u to x in v;\n        L = [ya]na\\<ggreater>l;\n        r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "}"], ["proof (state)\nthis:\n  ?s2 \\<star> [y]n\\<ggreater>L \\<mapsto> ?s2 \\<star> [y]n\\<ggreater>L'\n\ngoal (4 subgoals):\n 1. \\<lbrakk>\\<And>b ba.\n                \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                 \\<And>t'.\n                    \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>k'.\n                    \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>s y n l.\n                    \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                     ba = n[y::=s] \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>x y n u v l.\n                    \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                     L = [y]n\\<ggreater>l;\n                     ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P\\<rbrakk>\n                \\<Longrightarrow> P;\n     \\<And>t'.\n        \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>k'.\n        \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>s ya na l.\n        \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = na[ya::=s] \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>x ya na u v l.\n        \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n         [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> (t to y in n) \\<star> L \\<mapsto> r\n 2. \\<And>k'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n         L \\<mapsto> k' ; r = (t to y in n) \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>s ya na l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        t to y in n = [s]; L = [ya]na\\<ggreater>l;\n        r = na[ya::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>x ya na u v l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        x \\<sharp> ya; x \\<sharp> na; t to y in n = u to x in v;\n        L = [ya]na\\<ggreater>l;\n        r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "hence \"[y]n\\<ggreater>L \\<mapsto> [y]n\\<ggreater>L'\""], ["proof (prove)\nusing this:\n  ?s2 \\<star> [y]n\\<ggreater>L \\<mapsto> ?s2 \\<star> [y]n\\<ggreater>L'\n\ngoal (1 subgoal):\n 1.  [y]n\\<ggreater>L \\<mapsto> [y]n\\<ggreater>L'", "unfolding stack_reduction_def"], ["proof (prove)\nusing this:\n  ?s2 \\<star> [y]n\\<ggreater>L \\<mapsto> ?s2 \\<star> [y]n\\<ggreater>L'\n\ngoal (1 subgoal):\n 1. \\<forall>t.\n       t \\<star> [y]n\\<ggreater>L \\<mapsto> t \\<star> [y]n\\<ggreater>L'", "by auto"], ["proof (state)\nthis:\n   [y]n\\<ggreater>L \\<mapsto> [y]n\\<ggreater>L' \n\ngoal (4 subgoals):\n 1. \\<lbrakk>\\<And>b ba.\n                \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                 \\<And>t'.\n                    \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>k'.\n                    \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>s y n l.\n                    \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                     ba = n[y::=s] \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>x y n u v l.\n                    \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                     L = [y]n\\<ggreater>l;\n                     ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P\\<rbrakk>\n                \\<Longrightarrow> P;\n     \\<And>t'.\n        \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>k'.\n        \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>s ya na l.\n        \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = na[ya::=s] \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>x ya na u v l.\n        \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n         [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> (t to y in n) \\<star> L \\<mapsto> r\n 2. \\<And>k'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n         L \\<mapsto> k' ; r = (t to y in n) \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>s ya na l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        t to y in n = [s]; L = [ya]na\\<ggreater>l;\n        r = na[ya::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>x ya na u v l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        x \\<sharp> ya; x \\<sharp> na; t to y in n = u to x in v;\n        L = [ya]na\\<ggreater>l;\n        r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "moreover"], ["proof (state)\nthis:\n   [y]n\\<ggreater>L \\<mapsto> [y]n\\<ggreater>L' \n\ngoal (4 subgoals):\n 1. \\<lbrakk>\\<And>b ba.\n                \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                 \\<And>t'.\n                    \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>k'.\n                    \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>s y n l.\n                    \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                     ba = n[y::=s] \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>x y n u v l.\n                    \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                     L = [y]n\\<ggreater>l;\n                     ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P\\<rbrakk>\n                \\<Longrightarrow> P;\n     \\<And>t'.\n        \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>k'.\n        \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>s ya na l.\n        \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = na[ya::=s] \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>x ya na u v l.\n        \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n         [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> (t to y in n) \\<star> L \\<mapsto> r\n 2. \\<And>k'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n         L \\<mapsto> k' ; r = (t to y in n) \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>s ya na l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        t to y in n = [s]; L = [ya]na\\<ggreater>l;\n        r = na[ya::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>x ya na u v l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        x \\<sharp> ya; x \\<sharp> na; t to y in n = u to x in v;\n        L = [ya]na\\<ggreater>l;\n        r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "from r"], ["proof (chain)\npicking this:\n  r = (t to y in n) \\<star> L'", "have \"r = t \\<star> [y]n\\<ggreater>L'\""], ["proof (prove)\nusing this:\n  r = (t to y in n) \\<star> L'\n\ngoal (1 subgoal):\n 1. r = t \\<star> [y]n\\<ggreater>L'", "by simp"], ["proof (state)\nthis:\n  r = t \\<star> [y]n\\<ggreater>L'\n\ngoal (4 subgoals):\n 1. \\<lbrakk>\\<And>b ba.\n                \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                 \\<And>t'.\n                    \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>k'.\n                    \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>s y n l.\n                    \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                     ba = n[y::=s] \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>x y n u v l.\n                    \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                     L = [y]n\\<ggreater>l;\n                     ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P\\<rbrakk>\n                \\<Longrightarrow> P;\n     \\<And>t'.\n        \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>k'.\n        \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>s ya na l.\n        \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = na[ya::=s] \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>x ya na u v l.\n        \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n         [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> (t to y in n) \\<star> L \\<mapsto> r\n 2. \\<And>k'.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n         L \\<mapsto> k' ; r = (t to y in n) \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>s ya na l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        t to y in n = [s]; L = [ya]na\\<ggreater>l;\n        r = na[ya::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>x ya na u v l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        x \\<sharp> ya; x \\<sharp> na; t to y in n = u to x in v;\n        L = [ya]na\\<ggreater>l;\n        r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "ultimately"], ["proof (chain)\npicking this:\n   [y]n\\<ggreater>L \\<mapsto> [y]n\\<ggreater>L' \n  r = t \\<star> [y]n\\<ggreater>L'", "show \"P\""], ["proof (prove)\nusing this:\n   [y]n\\<ggreater>L \\<mapsto> [y]n\\<ggreater>L' \n  r = t \\<star> [y]n\\<ggreater>L'\n\ngoal (1 subgoal):\n 1. P", "by (rule K)"], ["proof (state)\nthis:\n  P\n\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<And>b ba.\n                \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                 \\<And>t'.\n                    \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>k'.\n                    \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>s y n l.\n                    \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                     ba = n[y::=s] \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>x y n u v l.\n                    \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                     L = [y]n\\<ggreater>l;\n                     ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P\\<rbrakk>\n                \\<Longrightarrow> P;\n     \\<And>t'.\n        \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>k'.\n        \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>s ya na l.\n        \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = na[ya::=s] \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>x ya na u v l.\n        \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n         [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> (t to y in n) \\<star> L \\<mapsto> r\n 2. \\<And>s ya na l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        t to y in n = [s]; L = [ya]na\\<ggreater>l;\n        r = na[ya::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>x ya na u v l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        x \\<sharp> ya; x \\<sharp> na; t to y in n = u to x in v;\n        L = [ya]na\\<ggreater>l;\n        r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<And>b ba.\n                \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                 \\<And>t'.\n                    \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>k'.\n                    \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>s y n l.\n                    \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                     ba = n[y::=s] \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>x y n u v l.\n                    \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                     L = [y]n\\<ggreater>l;\n                     ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P\\<rbrakk>\n                \\<Longrightarrow> P;\n     \\<And>t'.\n        \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>k'.\n        \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>s ya na l.\n        \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = na[ya::=s] \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>x ya na u v l.\n        \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n         [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> (t to y in n) \\<star> L \\<mapsto> r\n 2. \\<And>s ya na l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        t to y in n = [s]; L = [ya]na\\<ggreater>l;\n        r = na[ya::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>x ya na u v l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        x \\<sharp> ya; x \\<sharp> na; t to y in n = u to x in v;\n        L = [ya]na\\<ggreater>l;\n        r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "case (5 x z n' s v K) \\<comment> \\<open>The ``assoc'' case is again a stack reduction\\<close>"], ["proof (state)\nthis:\n  x \\<sharp> z\n  x \\<sharp> n'\n  t to y in n = s to x in v\n  L = [z]n'\\<ggreater>K\n  r = (s to x in v to z in n') \\<star> K\n\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<And>b ba.\n                \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                 \\<And>t'.\n                    \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>k'.\n                    \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>s y n l.\n                    \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                     ba = n[y::=s] \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>x y n u v l.\n                    \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                     L = [y]n\\<ggreater>l;\n                     ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P\\<rbrakk>\n                \\<Longrightarrow> P;\n     \\<And>t'.\n        \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>k'.\n        \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>s ya na l.\n        \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = na[ya::=s] \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>x ya na u v l.\n        \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n         [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> (t to y in n) \\<star> L \\<mapsto> r\n 2. \\<And>s ya na l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        t to y in n = [s]; L = [ya]na\\<ggreater>l;\n        r = na[ya::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>x ya na u v l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        x \\<sharp> ya; x \\<sharp> na; t to y in n = u to x in v;\n        L = [ya]na\\<ggreater>l;\n        r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "have xf: \"x \\<sharp> z\"   \"x \\<sharp> n'\" \n      \\<comment> \\<open>We get the following equalities\\<close>\n    and red: \"t to y in n = s to x in v\"\n             \"L = [z]n'\\<ggreater>K\"\n             \"r = (s to x in v to z in n') \\<star> K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x \\<sharp> z &&& x \\<sharp> n') &&&\n    t to y in n = s to x in v &&&\n    L = [z]n'\\<ggreater>K &&& r = (s to x in v to z in n') \\<star> K", "by fact+"], ["proof (state)\nthis:\n  x \\<sharp> z\n  x \\<sharp> n'\n  t to y in n = s to x in v\n  L = [z]n'\\<ggreater>K\n  r = (s to x in v to z in n') \\<star> K\n\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<And>b ba.\n                \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                 \\<And>t'.\n                    \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>k'.\n                    \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>s y n l.\n                    \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                     ba = n[y::=s] \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>x y n u v l.\n                    \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                     L = [y]n\\<ggreater>l;\n                     ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P\\<rbrakk>\n                \\<Longrightarrow> P;\n     \\<And>t'.\n        \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>k'.\n        \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>s ya na l.\n        \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = na[ya::=s] \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>x ya na u v l.\n        \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n         [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> (t to y in n) \\<star> L \\<mapsto> r\n 2. \\<And>s ya na l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        t to y in n = [s]; L = [ya]na\\<ggreater>l;\n        r = na[ya::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>x ya na u v l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        x \\<sharp> ya; x \\<sharp> na; t to y in n = u to x in v;\n        L = [ya]na\\<ggreater>l;\n        r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "{"], ["proof (state)\nthis:\n  x \\<sharp> z\n  x \\<sharp> n'\n  t to y in n = s to x in v\n  L = [z]n'\\<ggreater>K\n  r = (s to x in v to z in n') \\<star> K\n\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<And>b ba.\n                \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                 \\<And>t'.\n                    \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>k'.\n                    \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>s y n l.\n                    \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                     ba = n[y::=s] \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>x y n u v l.\n                    \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                     L = [y]n\\<ggreater>l;\n                     ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P\\<rbrakk>\n                \\<Longrightarrow> P;\n     \\<And>t'.\n        \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>k'.\n        \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>s ya na l.\n        \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = na[ya::=s] \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>x ya na u v l.\n        \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n         [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> (t to y in n) \\<star> L \\<mapsto> r\n 2. \\<And>s ya na l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        t to y in n = [s]; L = [ya]na\\<ggreater>l;\n        r = na[ya::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>x ya na u v l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        x \\<sharp> ya; x \\<sharp> na; t to y in n = u to x in v;\n        L = [ya]na\\<ggreater>l;\n        r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "fix u"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<And>b ba.\n                \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                 \\<And>t'.\n                    \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>k'.\n                    \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>s y n l.\n                    \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                     ba = n[y::=s] \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>x y n u v l.\n                    \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                     L = [y]n\\<ggreater>l;\n                     ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P\\<rbrakk>\n                \\<Longrightarrow> P;\n     \\<And>t'.\n        \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>k'.\n        \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>s ya na l.\n        \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = na[ya::=s] \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>x ya na u v l.\n        \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n         [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> (t to y in n) \\<star> L \\<mapsto> r\n 2. \\<And>s ya na l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        t to y in n = [s]; L = [ya]na\\<ggreater>l;\n        r = na[ya::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>x ya na u v l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        x \\<sharp> ya; x \\<sharp> na; t to y in n = u to x in v;\n        L = [ya]na\\<ggreater>l;\n        r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "from red"], ["proof (chain)\npicking this:\n  t to y in n = s to x in v\n  L = [z]n'\\<ggreater>K\n  r = (s to x in v to z in n') \\<star> K", "have \"u \\<star> [y]n\\<ggreater>L = ((u to x in v) to z in n') \\<star> K \""], ["proof (prove)\nusing this:\n  t to y in n = s to x in v\n  L = [z]n'\\<ggreater>K\n  r = (s to x in v to z in n') \\<star> K\n\ngoal (1 subgoal):\n 1. u \\<star> [y]n\\<ggreater>L = ((u to x in v) to z in n') \\<star> K", "by(auto intro: arg_cong[where f=\"\\<lambda> x . x \\<star> K\"])"], ["proof (state)\nthis:\n  u \\<star> [y]n\\<ggreater>L = ((u to x in v) to z in n') \\<star> K\n\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<And>b ba.\n                \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                 \\<And>t'.\n                    \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>k'.\n                    \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>s y n l.\n                    \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                     ba = n[y::=s] \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>x y n u v l.\n                    \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                     L = [y]n\\<ggreater>l;\n                     ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P\\<rbrakk>\n                \\<Longrightarrow> P;\n     \\<And>t'.\n        \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>k'.\n        \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>s ya na l.\n        \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = na[ya::=s] \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>x ya na u v l.\n        \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n         [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> (t to y in n) \\<star> L \\<mapsto> r\n 2. \\<And>s ya na l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        t to y in n = [s]; L = [ya]na\\<ggreater>l;\n        r = na[ya::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>x ya na u v l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        x \\<sharp> ya; x \\<sharp> na; t to y in n = u to x in v;\n        L = [ya]na\\<ggreater>l;\n        r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "moreover"], ["proof (state)\nthis:\n  u \\<star> [y]n\\<ggreater>L = ((u to x in v) to z in n') \\<star> K\n\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<And>b ba.\n                \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                 \\<And>t'.\n                    \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>k'.\n                    \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>s y n l.\n                    \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                     ba = n[y::=s] \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>x y n u v l.\n                    \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                     L = [y]n\\<ggreater>l;\n                     ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P\\<rbrakk>\n                \\<Longrightarrow> P;\n     \\<And>t'.\n        \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>k'.\n        \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>s ya na l.\n        \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = na[ya::=s] \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>x ya na u v l.\n        \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n         [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> (t to y in n) \\<star> L \\<mapsto> r\n 2. \\<And>s ya na l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        t to y in n = [s]; L = [ya]na\\<ggreater>l;\n        r = na[ya::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>x ya na u v l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        x \\<sharp> ya; x \\<sharp> na; t to y in n = u to x in v;\n        L = [ya]na\\<ggreater>l;\n        r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "{"], ["proof (state)\nthis:\n  u \\<star> [y]n\\<ggreater>L = ((u to x in v) to z in n') \\<star> K\n\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<And>b ba.\n                \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                 \\<And>t'.\n                    \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>k'.\n                    \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>s y n l.\n                    \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                     ba = n[y::=s] \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>x y n u v l.\n                    \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                     L = [y]n\\<ggreater>l;\n                     ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P\\<rbrakk>\n                \\<Longrightarrow> P;\n     \\<And>t'.\n        \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>k'.\n        \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>s ya na l.\n        \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = na[ya::=s] \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>x ya na u v l.\n        \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n         [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> (t to y in n) \\<star> L \\<mapsto> r\n 2. \\<And>s ya na l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        t to y in n = [s]; L = [ya]na\\<ggreater>l;\n        r = na[ya::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>x ya na u v l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        x \\<sharp> ya; x \\<sharp> na; t to y in n = u to x in v;\n        L = [ya]na\\<ggreater>l;\n        r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "from xf"], ["proof (chain)\npicking this:\n  x \\<sharp> z\n  x \\<sharp> n'", "have \"(u to x in v) to z in n' \\<mapsto> u to x in (v to z in n')\""], ["proof (prove)\nusing this:\n  x \\<sharp> z\n  x \\<sharp> n'\n\ngoal (1 subgoal):\n 1. (u to x in v) to z in n' \\<mapsto> u to x in v to z in n'", ".."], ["proof (state)\nthis:\n  (u to x in v) to z in n' \\<mapsto> u to x in v to z in n'\n\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<And>b ba.\n                \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                 \\<And>t'.\n                    \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>k'.\n                    \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>s y n l.\n                    \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                     ba = n[y::=s] \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>x y n u v l.\n                    \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                     L = [y]n\\<ggreater>l;\n                     ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P\\<rbrakk>\n                \\<Longrightarrow> P;\n     \\<And>t'.\n        \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>k'.\n        \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>s ya na l.\n        \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = na[ya::=s] \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>x ya na u v l.\n        \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n         [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> (t to y in n) \\<star> L \\<mapsto> r\n 2. \\<And>s ya na l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        t to y in n = [s]; L = [ya]na\\<ggreater>l;\n        r = na[ya::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>x ya na u v l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        x \\<sharp> ya; x \\<sharp> na; t to y in n = u to x in v;\n        L = [ya]na\\<ggreater>l;\n        r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "hence \"((u to x in v) to z in n') \\<star> K \\<mapsto> (u to x in (v to z in n')) \\<star> K\""], ["proof (prove)\nusing this:\n  (u to x in v) to z in n' \\<mapsto> u to x in v to z in n'\n\ngoal (1 subgoal):\n 1. ((u to x in v) to z in n') \\<star> K \\<mapsto> (u to x in v to z in n') \\<star> K", "by rule"], ["proof (state)\nthis:\n  ((u to x in v) to z in n') \\<star> K \\<mapsto> (u to x in v to z in n') \\<star> K\n\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<And>b ba.\n                \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                 \\<And>t'.\n                    \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>k'.\n                    \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>s y n l.\n                    \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                     ba = n[y::=s] \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>x y n u v l.\n                    \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                     L = [y]n\\<ggreater>l;\n                     ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P\\<rbrakk>\n                \\<Longrightarrow> P;\n     \\<And>t'.\n        \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>k'.\n        \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>s ya na l.\n        \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = na[ya::=s] \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>x ya na u v l.\n        \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n         [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> (t to y in n) \\<star> L \\<mapsto> r\n 2. \\<And>s ya na l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        t to y in n = [s]; L = [ya]na\\<ggreater>l;\n        r = na[ya::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>x ya na u v l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        x \\<sharp> ya; x \\<sharp> na; t to y in n = u to x in v;\n        L = [ya]na\\<ggreater>l;\n        r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "}"], ["proof (state)\nthis:\n  ((u to x in v) to z in n') \\<star> K \\<mapsto> (u to x in v to z in n') \\<star> K\n\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<And>b ba.\n                \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                 \\<And>t'.\n                    \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>k'.\n                    \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>s y n l.\n                    \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                     ba = n[y::=s] \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>x y n u v l.\n                    \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                     L = [y]n\\<ggreater>l;\n                     ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P\\<rbrakk>\n                \\<Longrightarrow> P;\n     \\<And>t'.\n        \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>k'.\n        \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>s ya na l.\n        \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = na[ya::=s] \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>x ya na u v l.\n        \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n         [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> (t to y in n) \\<star> L \\<mapsto> r\n 2. \\<And>s ya na l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        t to y in n = [s]; L = [ya]na\\<ggreater>l;\n        r = na[ya::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>x ya na u v l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        x \\<sharp> ya; x \\<sharp> na; t to y in n = u to x in v;\n        L = [ya]na\\<ggreater>l;\n        r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "ultimately"], ["proof (chain)\npicking this:\n  u \\<star> [y]n\\<ggreater>L = ((u to x in v) to z in n') \\<star> K\n  ((u to x in v) to z in n') \\<star> K \\<mapsto> (u to x in v to z in n') \\<star> K", "have \"u \\<star> [y]n\\<ggreater>L \\<mapsto> (u to x in (v to z in n')) \\<star> K\""], ["proof (prove)\nusing this:\n  u \\<star> [y]n\\<ggreater>L = ((u to x in v) to z in n') \\<star> K\n  ((u to x in v) to z in n') \\<star> K \\<mapsto> (u to x in v to z in n') \\<star> K\n\ngoal (1 subgoal):\n 1. u \\<star> [y]n\\<ggreater>L \\<mapsto> (u to x in v to z in n') \\<star> K", "by (simp (no_asm_simp) del:dismantle_simp)"], ["proof (state)\nthis:\n  u \\<star> [y]n\\<ggreater>L \\<mapsto> (u to x in v to z in n') \\<star> K\n\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<And>b ba.\n                \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                 \\<And>t'.\n                    \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>k'.\n                    \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>s y n l.\n                    \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                     ba = n[y::=s] \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>x y n u v l.\n                    \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                     L = [y]n\\<ggreater>l;\n                     ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P\\<rbrakk>\n                \\<Longrightarrow> P;\n     \\<And>t'.\n        \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>k'.\n        \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>s ya na l.\n        \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = na[ya::=s] \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>x ya na u v l.\n        \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n         [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> (t to y in n) \\<star> L \\<mapsto> r\n 2. \\<And>s ya na l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        t to y in n = [s]; L = [ya]na\\<ggreater>l;\n        r = na[ya::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>x ya na u v l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        x \\<sharp> ya; x \\<sharp> na; t to y in n = u to x in v;\n        L = [ya]na\\<ggreater>l;\n        r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "hence \"u \\<star> [y]n\\<ggreater>L \\<mapsto> u \\<star> [x](v to z in n')\\<ggreater>K\""], ["proof (prove)\nusing this:\n  u \\<star> [y]n\\<ggreater>L \\<mapsto> (u to x in v to z in n') \\<star> K\n\ngoal (1 subgoal):\n 1. u \\<star> [y]n\\<ggreater>L \\<mapsto> u \\<star> [x]v to z in n'\\<ggreater>K", "by simp"], ["proof (state)\nthis:\n  u \\<star> [y]n\\<ggreater>L \\<mapsto> u \\<star> [x]v to z in n'\\<ggreater>K\n\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<And>b ba.\n                \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                 \\<And>t'.\n                    \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>k'.\n                    \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>s y n l.\n                    \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                     ba = n[y::=s] \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>x y n u v l.\n                    \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                     L = [y]n\\<ggreater>l;\n                     ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P\\<rbrakk>\n                \\<Longrightarrow> P;\n     \\<And>t'.\n        \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>k'.\n        \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>s ya na l.\n        \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = na[ya::=s] \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>x ya na u v l.\n        \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n         [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> (t to y in n) \\<star> L \\<mapsto> r\n 2. \\<And>s ya na l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        t to y in n = [s]; L = [ya]na\\<ggreater>l;\n        r = na[ya::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>x ya na u v l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        x \\<sharp> ya; x \\<sharp> na; t to y in n = u to x in v;\n        L = [ya]na\\<ggreater>l;\n        r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "}"], ["proof (state)\nthis:\n  ?u2 \\<star> [y]n\\<ggreater>L \\<mapsto> ?u2 \\<star> [x]v to z in n'\\<ggreater>K\n\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<And>b ba.\n                \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                 \\<And>t'.\n                    \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>k'.\n                    \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>s y n l.\n                    \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                     ba = n[y::=s] \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>x y n u v l.\n                    \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                     L = [y]n\\<ggreater>l;\n                     ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P\\<rbrakk>\n                \\<Longrightarrow> P;\n     \\<And>t'.\n        \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>k'.\n        \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>s ya na l.\n        \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = na[ya::=s] \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>x ya na u v l.\n        \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n         [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> (t to y in n) \\<star> L \\<mapsto> r\n 2. \\<And>s ya na l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        t to y in n = [s]; L = [ya]na\\<ggreater>l;\n        r = na[ya::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>x ya na u v l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        x \\<sharp> ya; x \\<sharp> na; t to y in n = u to x in v;\n        L = [ya]na\\<ggreater>l;\n        r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "hence \"[y]n\\<ggreater>L \\<mapsto>  [x](v to z in n')\\<ggreater> K\""], ["proof (prove)\nusing this:\n  ?u2 \\<star> [y]n\\<ggreater>L \\<mapsto> ?u2 \\<star> [x]v to z in n'\\<ggreater>K\n\ngoal (1 subgoal):\n 1.  [y]n\\<ggreater>L \\<mapsto> [x]v to z in n'\\<ggreater>K", "unfolding stack_reduction_def"], ["proof (prove)\nusing this:\n  ?u2 \\<star> [y]n\\<ggreater>L \\<mapsto> ?u2 \\<star> [x]v to z in n'\\<ggreater>K\n\ngoal (1 subgoal):\n 1. \\<forall>t.\n       t \\<star> [y]n\\<ggreater>L \\<mapsto> t \\<star> [x]v to z in n'\\<ggreater>K", "by simp"], ["proof (state)\nthis:\n   [y]n\\<ggreater>L \\<mapsto> [x]v to z in n'\\<ggreater>K \n\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<And>b ba.\n                \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                 \\<And>t'.\n                    \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>k'.\n                    \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>s y n l.\n                    \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                     ba = n[y::=s] \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>x y n u v l.\n                    \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                     L = [y]n\\<ggreater>l;\n                     ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P\\<rbrakk>\n                \\<Longrightarrow> P;\n     \\<And>t'.\n        \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>k'.\n        \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>s ya na l.\n        \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = na[ya::=s] \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>x ya na u v l.\n        \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n         [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> (t to y in n) \\<star> L \\<mapsto> r\n 2. \\<And>s ya na l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        t to y in n = [s]; L = [ya]na\\<ggreater>l;\n        r = na[ya::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>x ya na u v l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        x \\<sharp> ya; x \\<sharp> na; t to y in n = u to x in v;\n        L = [ya]na\\<ggreater>l;\n        r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "moreover"], ["proof (state)\nthis:\n   [y]n\\<ggreater>L \\<mapsto> [x]v to z in n'\\<ggreater>K \n\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<And>b ba.\n                \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                 \\<And>t'.\n                    \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>k'.\n                    \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>s y n l.\n                    \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                     ba = n[y::=s] \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>x y n u v l.\n                    \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                     L = [y]n\\<ggreater>l;\n                     ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P\\<rbrakk>\n                \\<Longrightarrow> P;\n     \\<And>t'.\n        \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>k'.\n        \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>s ya na l.\n        \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = na[ya::=s] \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>x ya na u v l.\n        \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n         [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> (t to y in n) \\<star> L \\<mapsto> r\n 2. \\<And>s ya na l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        t to y in n = [s]; L = [ya]na\\<ggreater>l;\n        r = na[ya::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>x ya na u v l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        x \\<sharp> ya; x \\<sharp> na; t to y in n = u to x in v;\n        L = [ya]na\\<ggreater>l;\n        r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "have \"r = t \\<star> ([x](v to z in n')\\<ggreater>K)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r = t \\<star> [x]v to z in n'\\<ggreater>K", "using red"], ["proof (prove)\nusing this:\n  t to y in n = s to x in v\n  L = [z]n'\\<ggreater>K\n  r = (s to x in v to z in n') \\<star> K\n\ngoal (1 subgoal):\n 1. r = t \\<star> [x]v to z in n'\\<ggreater>K", "by (auto)"], ["proof (state)\nthis:\n  r = t \\<star> [x]v to z in n'\\<ggreater>K\n\ngoal (3 subgoals):\n 1. \\<lbrakk>\\<And>b ba.\n                \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                 \\<And>t'.\n                    \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>k'.\n                    \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>s y n l.\n                    \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                     ba = n[y::=s] \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>x y n u v l.\n                    \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                     L = [y]n\\<ggreater>l;\n                     ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P\\<rbrakk>\n                \\<Longrightarrow> P;\n     \\<And>t'.\n        \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>k'.\n        \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>s ya na l.\n        \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = na[ya::=s] \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>x ya na u v l.\n        \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n         [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> (t to y in n) \\<star> L \\<mapsto> r\n 2. \\<And>s ya na l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        t to y in n = [s]; L = [ya]na\\<ggreater>l;\n        r = na[ya::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>x ya na u v l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        x \\<sharp> ya; x \\<sharp> na; t to y in n = u to x in v;\n        L = [ya]na\\<ggreater>l;\n        r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "ultimately"], ["proof (chain)\npicking this:\n   [y]n\\<ggreater>L \\<mapsto> [x]v to z in n'\\<ggreater>K \n  r = t \\<star> [x]v to z in n'\\<ggreater>K", "show \"P\""], ["proof (prove)\nusing this:\n   [y]n\\<ggreater>L \\<mapsto> [x]v to z in n'\\<ggreater>K \n  r = t \\<star> [x]v to z in n'\\<ggreater>K\n\ngoal (1 subgoal):\n 1. P", "by (rule K)"], ["proof (state)\nthis:\n  P\n\ngoal (2 subgoals):\n 1. \\<lbrakk>\\<And>b ba.\n                \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                 \\<And>t'.\n                    \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>k'.\n                    \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>s y n l.\n                    \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                     ba = n[y::=s] \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P;\n                 \\<And>x y n u v l.\n                    \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                     L = [y]n\\<ggreater>l;\n                     ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                    \\<Longrightarrow> P\\<rbrakk>\n                \\<Longrightarrow> P;\n     \\<And>t'.\n        \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>k'.\n        \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>s ya na l.\n        \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = na[ya::=s] \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P;\n     \\<And>x ya na u v l.\n        \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n         [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n         r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n        \\<Longrightarrow> P\\<rbrakk>\n    \\<Longrightarrow> (t to y in n) \\<star> L \\<mapsto> r\n 2. \\<And>s ya na l.\n       \\<lbrakk>\\<And>b ba.\n                   \\<lbrakk>b \\<star> L \\<mapsto> ba;\n                    \\<And>t'.\n                       \\<lbrakk>b \\<mapsto> t'; ba = t' \\<star> L\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>k'.\n                       \\<lbrakk> L \\<mapsto> k' ; ba = b \\<star> k'\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>s y n l.\n                       \\<lbrakk>b = [s]; L = [y]n\\<ggreater>l;\n                        ba = n[y::=s] \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P;\n                    \\<And>x y n u v l.\n                       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; b = u to x in v;\n                        L = [y]n\\<ggreater>l;\n                        ba = (u to x in v to y in n) \\<star> l\\<rbrakk>\n                       \\<Longrightarrow> P\\<rbrakk>\n                   \\<Longrightarrow> P;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> [y]n\\<ggreater>L\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> [y]n\\<ggreater>L \\<mapsto> k' ;\n            r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s ya na l.\n           \\<lbrakk>t = [s]; [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = na[ya::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x ya na u v l.\n           \\<lbrakk>x \\<sharp> ya; x \\<sharp> na; t = u to x in v;\n            [y]n\\<ggreater>L = [ya]na\\<ggreater>l;\n            r = (u to x in v to ya in na) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        t to y in n = [s]; L = [ya]na\\<ggreater>l;\n        r = na[ya::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "qed (insert St, auto )"], ["proof (state)\nthis:\n  P\n\ngoal (1 subgoal):\n 1. \\<And>t r.\n       \\<lbrakk>t \\<star> stack.Id \\<mapsto> r;\n        \\<And>t'.\n           \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> stack.Id\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>k'.\n           \\<lbrakk> stack.Id \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>s y n l.\n           \\<lbrakk>t = [s]; stack.Id = [y]n\\<ggreater>l;\n            r = n[y::=s] \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P;\n        \\<And>x y n u v l.\n           \\<lbrakk>x \\<sharp> y; x \\<sharp> n; t = u to x in v;\n            stack.Id = [y]n\\<ggreater>l;\n            r = (u to x in v to y in n) \\<star> l\\<rbrakk>\n           \\<Longrightarrow> P\\<rbrakk>\n       \\<Longrightarrow> P", "qed auto"], ["", "text \\<open>Now that we have established the general claim, we can restrict $t$ to\nneutral terms only and drop the cases dealing with possible interactions.\\<close>"], ["", "lemma dismantle_cases'[consumes 2, case_names T K]:\n  fixes m :: trm\n  assumes r: \"t \\<star> k \\<mapsto> r\"\n  and \"NEUT t\"\n  and \"\\<And> t' . \\<lbrakk> t \\<mapsto> t' ; r = t' \\<star> k \\<rbrakk> \\<Longrightarrow> P\"\n  and \"\\<And> k' . \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k' \\<rbrakk> \\<Longrightarrow> P\" \n  shows \"P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P", "using assms"], ["proof (prove)\nusing this:\n  t \\<star> k \\<mapsto> r\n  NEUT t\n  \\<lbrakk>t \\<mapsto> ?t'; r = ?t' \\<star> k\\<rbrakk> \\<Longrightarrow> P\n  \\<lbrakk> k \\<mapsto> ?k' ; r = t \\<star> ?k'\\<rbrakk> \\<Longrightarrow> P\n\ngoal (1 subgoal):\n 1. P", "unfolding NEUT_def"], ["proof (prove)\nusing this:\n  t \\<star> k \\<mapsto> r\n  (\\<exists>a. t = Var a) \\<or> (\\<exists>t1 t2. t = App t1 t2)\n  \\<lbrakk>t \\<mapsto> ?t'; r = ?t' \\<star> k\\<rbrakk> \\<Longrightarrow> P\n  \\<lbrakk> k \\<mapsto> ?k' ; r = t \\<star> ?k'\\<rbrakk> \\<Longrightarrow> P\n\ngoal (1 subgoal):\n 1. P", "by (cases rule: dismantle_cases[of t k r]) (auto)"], ["", "lemma red_Ret:\n  fixes t :: trm\n  assumes \"[s] \\<mapsto> t\"\n  shows \" \\<exists> s' . t = [s'] \\<and> s  \\<mapsto> s'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>s'. t = [s'] \\<and> s \\<mapsto> s'", "using assms"], ["proof (prove)\nusing this:\n  [s] \\<mapsto> t\n\ngoal (1 subgoal):\n 1. \\<exists>s'. t = [s'] \\<and> s \\<mapsto> s'", "by cases (auto)"], ["", "lemma SN_Ret: \"SN u \\<Longrightarrow> SN [u]\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN u \\<Longrightarrow> SN [u]", "by(induct rule:SN.induct) (metis SN.intros red_Ret)"], ["", "text \\<open>All the properties of reducibility are shown simultaneously by induction\non the type. Lindley and Stark \\cite{TT-lifting} only spell out the cases\ndealing with the monadic type constructor $T$. We do the same by reusing the\nproofs from \\cite{SN.thy} for the other cases. To shorten the presentation,\nthese proofs are omitted\\<close>"], ["", "lemma RED_props: \n  shows \"CR1 \\<tau>\" and \"CR2 \\<tau>\" and \"CR3 \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CR1 \\<tau> &&& CR2 \\<tau> &&& CR3 \\<tau>", "proof (nominal_induct \\<tau> rule: ty.strong_induct)"], ["proof (state)\ngoal (9 subgoals):\n 1. CR1 TBase\n 2. CR2 TBase\n 3. CR3 TBase\n 4. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR1 (ty1 \\<rightarrow> ty2)\n 5. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR2 (ty1 \\<rightarrow> ty2)\n 6. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR3 (ty1 \\<rightarrow> ty2)\n 7. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 8. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 9. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "case TBase"], ["proof (state)\nthis:\n  \n\ngoal (9 subgoals):\n 1. CR1 TBase\n 2. CR2 TBase\n 3. CR3 TBase\n 4. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR1 (ty1 \\<rightarrow> ty2)\n 5. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR2 (ty1 \\<rightarrow> ty2)\n 6. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR3 (ty1 \\<rightarrow> ty2)\n 7. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 8. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 9. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "{%invisible"], ["proof (state)\nthis:\n  \n\ngoal (9 subgoals):\n 1. CR1 TBase\n 2. CR2 TBase\n 3. CR3 TBase\n 4. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR1 (ty1 \\<rightarrow> ty2)\n 5. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR2 (ty1 \\<rightarrow> ty2)\n 6. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR3 (ty1 \\<rightarrow> ty2)\n 7. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 8. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 9. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "case 1"], ["proof (state)\nthis:\n  \n\ngoal (9 subgoals):\n 1. CR1 TBase\n 2. CR2 TBase\n 3. CR3 TBase\n 4. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR1 (ty1 \\<rightarrow> ty2)\n 5. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR2 (ty1 \\<rightarrow> ty2)\n 6. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR3 (ty1 \\<rightarrow> ty2)\n 7. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 8. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 9. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "show \"CR1 TBase\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CR1 TBase", "by (simp add: CR1_def)"], ["proof (state)\nthis:\n  CR1 TBase\n\ngoal (8 subgoals):\n 1. CR2 TBase\n 2. CR3 TBase\n 3. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR1 (ty1 \\<rightarrow> ty2)\n 4. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR2 (ty1 \\<rightarrow> ty2)\n 5. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR3 (ty1 \\<rightarrow> ty2)\n 6. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 7. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 8. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. CR2 TBase\n 2. CR3 TBase\n 3. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR1 (ty1 \\<rightarrow> ty2)\n 4. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR2 (ty1 \\<rightarrow> ty2)\n 5. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR3 (ty1 \\<rightarrow> ty2)\n 6. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 7. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 8. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "case 2"], ["proof (state)\nthis:\n  \n\ngoal (8 subgoals):\n 1. CR2 TBase\n 2. CR3 TBase\n 3. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR1 (ty1 \\<rightarrow> ty2)\n 4. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR2 (ty1 \\<rightarrow> ty2)\n 5. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR3 (ty1 \\<rightarrow> ty2)\n 6. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 7. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 8. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "show \"CR2 TBase\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CR2 TBase", "by (auto intro: SN_preserved simp add: CR2_def)"], ["proof (state)\nthis:\n  CR2 TBase\n\ngoal (7 subgoals):\n 1. CR3 TBase\n 2. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR1 (ty1 \\<rightarrow> ty2)\n 3. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR2 (ty1 \\<rightarrow> ty2)\n 4. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR3 (ty1 \\<rightarrow> ty2)\n 5. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 6. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 7. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. CR3 TBase\n 2. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR1 (ty1 \\<rightarrow> ty2)\n 3. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR2 (ty1 \\<rightarrow> ty2)\n 4. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR3 (ty1 \\<rightarrow> ty2)\n 5. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 6. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 7. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "case 3"], ["proof (state)\nthis:\n  \n\ngoal (7 subgoals):\n 1. CR3 TBase\n 2. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR1 (ty1 \\<rightarrow> ty2)\n 3. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR2 (ty1 \\<rightarrow> ty2)\n 4. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR3 (ty1 \\<rightarrow> ty2)\n 5. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 6. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 7. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "show \"CR3 TBase\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CR3 TBase", "by (auto intro: SN_intro simp add: CR3_def CR3_RED_def)"], ["proof (state)\nthis:\n  CR3 TBase\n\ngoal (6 subgoals):\n 1. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR1 (ty1 \\<rightarrow> ty2)\n 2. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR2 (ty1 \\<rightarrow> ty2)\n 3. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR3 (ty1 \\<rightarrow> ty2)\n 4. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 5. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 6. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "}"], ["proof (state)\nthis:\n  CR3 TBase\n\ngoal (6 subgoals):\n 1. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR1 (ty1 \\<rightarrow> ty2)\n 2. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR2 (ty1 \\<rightarrow> ty2)\n 3. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR3 (ty1 \\<rightarrow> ty2)\n 4. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 5. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 6. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR1 (ty1 \\<rightarrow> ty2)\n 2. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR2 (ty1 \\<rightarrow> ty2)\n 3. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR3 (ty1 \\<rightarrow> ty2)\n 4. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 5. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 6. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "case (TFun \\<tau>1 \\<tau>2)"], ["proof (state)\nthis:\n  CR1 \\<tau>1\n  CR2 \\<tau>1\n  CR3 \\<tau>1\n  CR1 \\<tau>2\n  CR2 \\<tau>2\n  CR3 \\<tau>2\n\ngoal (6 subgoals):\n 1. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR1 (ty1 \\<rightarrow> ty2)\n 2. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR2 (ty1 \\<rightarrow> ty2)\n 3. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR3 (ty1 \\<rightarrow> ty2)\n 4. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 5. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 6. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "{%invisible"], ["proof (state)\nthis:\n  CR1 \\<tau>1\n  CR2 \\<tau>1\n  CR3 \\<tau>1\n  CR1 \\<tau>2\n  CR2 \\<tau>2\n  CR3 \\<tau>2\n\ngoal (6 subgoals):\n 1. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR1 (ty1 \\<rightarrow> ty2)\n 2. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR2 (ty1 \\<rightarrow> ty2)\n 3. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR3 (ty1 \\<rightarrow> ty2)\n 4. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 5. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 6. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "case 1"], ["proof (state)\nthis:\n  \n\ngoal (6 subgoals):\n 1. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR1 (ty1 \\<rightarrow> ty2)\n 2. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR2 (ty1 \\<rightarrow> ty2)\n 3. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR3 (ty1 \\<rightarrow> ty2)\n 4. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 5. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 6. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "have ih_CR3_\\<tau>1: \"CR3 \\<tau>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CR3 \\<tau>1", "by fact"], ["proof (state)\nthis:\n  CR3 \\<tau>1\n\ngoal (6 subgoals):\n 1. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR1 (ty1 \\<rightarrow> ty2)\n 2. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR2 (ty1 \\<rightarrow> ty2)\n 3. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR3 (ty1 \\<rightarrow> ty2)\n 4. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 5. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 6. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "have ih_CR1_\\<tau>2: \"CR1 \\<tau>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CR1 \\<tau>2", "by fact"], ["proof (state)\nthis:\n  CR1 \\<tau>2\n\ngoal (6 subgoals):\n 1. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR1 (ty1 \\<rightarrow> ty2)\n 2. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR2 (ty1 \\<rightarrow> ty2)\n 3. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR3 (ty1 \\<rightarrow> ty2)\n 4. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 5. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 6. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "have \"\\<And>t. t \\<in> RED (\\<tau>1 \\<rightarrow> \\<tau>2) \\<Longrightarrow> SN t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<in> RED (\\<tau>1 \\<rightarrow> \\<tau>2) \\<Longrightarrow> SN t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<in> RED (\\<tau>1 \\<rightarrow> \\<tau>2) \\<Longrightarrow> SN t", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<in> RED (\\<tau>1 \\<rightarrow> \\<tau>2) \\<Longrightarrow> SN t", "assume \"t \\<in> RED (\\<tau>1 \\<rightarrow> \\<tau>2)\""], ["proof (state)\nthis:\n  t \\<in> RED (\\<tau>1 \\<rightarrow> \\<tau>2)\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<in> RED (\\<tau>1 \\<rightarrow> \\<tau>2) \\<Longrightarrow> SN t", "then"], ["proof (chain)\npicking this:\n  t \\<in> RED (\\<tau>1 \\<rightarrow> \\<tau>2)", "have a: \"\\<forall>u. u \\<in> RED \\<tau>1 \\<longrightarrow> App t u \\<in> RED \\<tau>2\""], ["proof (prove)\nusing this:\n  t \\<in> RED (\\<tau>1 \\<rightarrow> \\<tau>2)\n\ngoal (1 subgoal):\n 1. \\<forall>u.\n       u \\<in> RED \\<tau>1 \\<longrightarrow> App t u \\<in> RED \\<tau>2", "by simp"], ["proof (state)\nthis:\n  \\<forall>u.\n     u \\<in> RED \\<tau>1 \\<longrightarrow> App t u \\<in> RED \\<tau>2\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<in> RED (\\<tau>1 \\<rightarrow> \\<tau>2) \\<Longrightarrow> SN t", "from ih_CR3_\\<tau>1"], ["proof (chain)\npicking this:\n  CR3 \\<tau>1", "have \"CR4 \\<tau>1\""], ["proof (prove)\nusing this:\n  CR3 \\<tau>1\n\ngoal (1 subgoal):\n 1. CR4 \\<tau>1", "by (simp add: CR3_implies_CR4)"], ["proof (state)\nthis:\n  CR4 \\<tau>1\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<in> RED (\\<tau>1 \\<rightarrow> \\<tau>2) \\<Longrightarrow> SN t", "moreover"], ["proof (state)\nthis:\n  CR4 \\<tau>1\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<in> RED (\\<tau>1 \\<rightarrow> \\<tau>2) \\<Longrightarrow> SN t", "fix a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<in> RED (\\<tau>1 \\<rightarrow> \\<tau>2) \\<Longrightarrow> SN t", "have \"NEUT (Var a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. NEUT (Var a)", "by (force simp add: NEUT_def)"], ["proof (state)\nthis:\n  NEUT (Var a)\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<in> RED (\\<tau>1 \\<rightarrow> \\<tau>2) \\<Longrightarrow> SN t", "moreover"], ["proof (state)\nthis:\n  NEUT (Var a)\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<in> RED (\\<tau>1 \\<rightarrow> \\<tau>2) \\<Longrightarrow> SN t", "have \"NORMAL (Var a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. NORMAL (Var a)", "by (rule normal_var)"], ["proof (state)\nthis:\n  NORMAL (Var a)\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<in> RED (\\<tau>1 \\<rightarrow> \\<tau>2) \\<Longrightarrow> SN t", "ultimately"], ["proof (chain)\npicking this:\n  CR4 \\<tau>1\n  NEUT (Var a)\n  NORMAL (Var a)", "have \"(Var a)\\<in> RED \\<tau>1\""], ["proof (prove)\nusing this:\n  CR4 \\<tau>1\n  NEUT (Var a)\n  NORMAL (Var a)\n\ngoal (1 subgoal):\n 1. Var a \\<in> RED \\<tau>1", "by (simp add: CR4_def)"], ["proof (state)\nthis:\n  Var a \\<in> RED \\<tau>1\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<in> RED (\\<tau>1 \\<rightarrow> \\<tau>2) \\<Longrightarrow> SN t", "with a"], ["proof (chain)\npicking this:\n  \\<forall>u.\n     u \\<in> RED \\<tau>1 \\<longrightarrow> App t u \\<in> RED \\<tau>2\n  Var a \\<in> RED \\<tau>1", "have \"App t (Var a) \\<in> RED \\<tau>2\""], ["proof (prove)\nusing this:\n  \\<forall>u.\n     u \\<in> RED \\<tau>1 \\<longrightarrow> App t u \\<in> RED \\<tau>2\n  Var a \\<in> RED \\<tau>1\n\ngoal (1 subgoal):\n 1. App t (Var a) \\<in> RED \\<tau>2", "by simp"], ["proof (state)\nthis:\n  App t (Var a) \\<in> RED \\<tau>2\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<in> RED (\\<tau>1 \\<rightarrow> \\<tau>2) \\<Longrightarrow> SN t", "hence \"SN (App t (Var a))\""], ["proof (prove)\nusing this:\n  App t (Var a) \\<in> RED \\<tau>2\n\ngoal (1 subgoal):\n 1. SN (App t (Var a))", "using ih_CR1_\\<tau>2"], ["proof (prove)\nusing this:\n  App t (Var a) \\<in> RED \\<tau>2\n  CR1 \\<tau>2\n\ngoal (1 subgoal):\n 1. SN (App t (Var a))", "by (simp add: CR1_def)"], ["proof (state)\nthis:\n  SN (App t (Var a))\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       t \\<in> RED (\\<tau>1 \\<rightarrow> \\<tau>2) \\<Longrightarrow> SN t", "thus \"SN t\""], ["proof (prove)\nusing this:\n  SN (App t (Var a))\n\ngoal (1 subgoal):\n 1. SN t", "by (auto dest: SN_of_FST_of_App)"], ["proof (state)\nthis:\n  SN t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  ?t \\<in> RED (\\<tau>1 \\<rightarrow> \\<tau>2) \\<Longrightarrow> SN ?t\n\ngoal (6 subgoals):\n 1. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR1 (ty1 \\<rightarrow> ty2)\n 2. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR2 (ty1 \\<rightarrow> ty2)\n 3. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR3 (ty1 \\<rightarrow> ty2)\n 4. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 5. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 6. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "then"], ["proof (chain)\npicking this:\n  ?t \\<in> RED (\\<tau>1 \\<rightarrow> \\<tau>2) \\<Longrightarrow> SN ?t", "show \"CR1 (\\<tau>1 \\<rightarrow> \\<tau>2)\""], ["proof (prove)\nusing this:\n  ?t \\<in> RED (\\<tau>1 \\<rightarrow> \\<tau>2) \\<Longrightarrow> SN ?t\n\ngoal (1 subgoal):\n 1. CR1 (\\<tau>1 \\<rightarrow> \\<tau>2)", "unfolding CR1_def"], ["proof (prove)\nusing this:\n  ?t \\<in> RED (\\<tau>1 \\<rightarrow> \\<tau>2) \\<Longrightarrow> SN ?t\n\ngoal (1 subgoal):\n 1. \\<forall>t.\n       t \\<in> RED (\\<tau>1 \\<rightarrow> \\<tau>2) \\<longrightarrow> SN t", "by simp"], ["proof (state)\nthis:\n  CR1 (\\<tau>1 \\<rightarrow> \\<tau>2)\n\ngoal (5 subgoals):\n 1. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR2 (ty1 \\<rightarrow> ty2)\n 2. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR3 (ty1 \\<rightarrow> ty2)\n 3. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 4. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 5. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR2 (ty1 \\<rightarrow> ty2)\n 2. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR3 (ty1 \\<rightarrow> ty2)\n 3. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 4. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 5. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "case 2"], ["proof (state)\nthis:\n  \n\ngoal (5 subgoals):\n 1. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR2 (ty1 \\<rightarrow> ty2)\n 2. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR3 (ty1 \\<rightarrow> ty2)\n 3. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 4. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 5. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "have ih_CR2_\\<tau>2: \"CR2 \\<tau>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CR2 \\<tau>2", "by fact"], ["proof (state)\nthis:\n  CR2 \\<tau>2\n\ngoal (5 subgoals):\n 1. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR2 (ty1 \\<rightarrow> ty2)\n 2. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR3 (ty1 \\<rightarrow> ty2)\n 3. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 4. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 5. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "then"], ["proof (chain)\npicking this:\n  CR2 \\<tau>2", "show \"CR2 (\\<tau>1 \\<rightarrow> \\<tau>2)\""], ["proof (prove)\nusing this:\n  CR2 \\<tau>2\n\ngoal (1 subgoal):\n 1. CR2 (\\<tau>1 \\<rightarrow> \\<tau>2)", "unfolding CR2_def"], ["proof (prove)\nusing this:\n  \\<forall>t t'.\n     t \\<in> RED \\<tau>2 \\<and> t \\<mapsto> t' \\<longrightarrow>\n     t' \\<in> RED \\<tau>2\n\ngoal (1 subgoal):\n 1. \\<forall>t t'.\n       t \\<in> RED (\\<tau>1 \\<rightarrow> \\<tau>2) \\<and>\n       t \\<mapsto> t' \\<longrightarrow>\n       t' \\<in> RED (\\<tau>1 \\<rightarrow> \\<tau>2)", "by auto"], ["proof (state)\nthis:\n  CR2 (\\<tau>1 \\<rightarrow> \\<tau>2)\n\ngoal (4 subgoals):\n 1. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR3 (ty1 \\<rightarrow> ty2)\n 2. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 3. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 4. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR3 (ty1 \\<rightarrow> ty2)\n 2. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 3. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 4. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "case 3"], ["proof (state)\nthis:\n  \n\ngoal (4 subgoals):\n 1. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR3 (ty1 \\<rightarrow> ty2)\n 2. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 3. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 4. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "have ih_CR1_\\<tau>1: \"CR1 \\<tau>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CR1 \\<tau>1", "by fact"], ["proof (state)\nthis:\n  CR1 \\<tau>1\n\ngoal (4 subgoals):\n 1. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR3 (ty1 \\<rightarrow> ty2)\n 2. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 3. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 4. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "have ih_CR2_\\<tau>1: \"CR2 \\<tau>1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CR2 \\<tau>1", "by fact"], ["proof (state)\nthis:\n  CR2 \\<tau>1\n\ngoal (4 subgoals):\n 1. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR3 (ty1 \\<rightarrow> ty2)\n 2. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 3. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 4. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "have ih_CR3_\\<tau>2: \"CR3 \\<tau>2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CR3 \\<tau>2", "by fact"], ["proof (state)\nthis:\n  CR3 \\<tau>2\n\ngoal (4 subgoals):\n 1. \\<And>ty1 ty2.\n       \\<lbrakk>CR1 ty1; CR2 ty1; CR3 ty1; CR1 ty2; CR2 ty2;\n        CR3 ty2\\<rbrakk>\n       \\<Longrightarrow> CR3 (ty1 \\<rightarrow> ty2)\n 2. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 3. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 4. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "show \"CR3 (\\<tau>1 \\<rightarrow> \\<tau>2)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CR3 (\\<tau>1 \\<rightarrow> \\<tau>2)", "unfolding CR3_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>t.\n       NEUT t \\<and>\n       CR3_RED t (\\<tau>1 \\<rightarrow> \\<tau>2) \\<longrightarrow>\n       t \\<in> RED (\\<tau>1 \\<rightarrow> \\<tau>2)", "proof (simp, intro strip)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t u.\n       \\<lbrakk>NEUT t \\<and> CR3_RED t (\\<tau>1 \\<rightarrow> \\<tau>2);\n        u \\<in> RED \\<tau>1\\<rbrakk>\n       \\<Longrightarrow> App t u \\<in> RED \\<tau>2", "fix t u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t u.\n       \\<lbrakk>NEUT t \\<and> CR3_RED t (\\<tau>1 \\<rightarrow> \\<tau>2);\n        u \\<in> RED \\<tau>1\\<rbrakk>\n       \\<Longrightarrow> App t u \\<in> RED \\<tau>2", "assume a1: \"u \\<in> RED \\<tau>1\""], ["proof (state)\nthis:\n  u \\<in> RED \\<tau>1\n\ngoal (1 subgoal):\n 1. \\<And>t u.\n       \\<lbrakk>NEUT t \\<and> CR3_RED t (\\<tau>1 \\<rightarrow> \\<tau>2);\n        u \\<in> RED \\<tau>1\\<rbrakk>\n       \\<Longrightarrow> App t u \\<in> RED \\<tau>2", "assume a2: \"NEUT t \\<and> CR3_RED t (\\<tau>1 \\<rightarrow> \\<tau>2)\""], ["proof (state)\nthis:\n  NEUT t \\<and> CR3_RED t (\\<tau>1 \\<rightarrow> \\<tau>2)\n\ngoal (1 subgoal):\n 1. \\<And>t u.\n       \\<lbrakk>NEUT t \\<and> CR3_RED t (\\<tau>1 \\<rightarrow> \\<tau>2);\n        u \\<in> RED \\<tau>1\\<rbrakk>\n       \\<Longrightarrow> App t u \\<in> RED \\<tau>2", "have \"SN(u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN u", "using a1 ih_CR1_\\<tau>1"], ["proof (prove)\nusing this:\n  u \\<in> RED \\<tau>1\n  CR1 \\<tau>1\n\ngoal (1 subgoal):\n 1. SN u", "by (simp add: CR1_def)"], ["proof (state)\nthis:\n  SN u\n\ngoal (1 subgoal):\n 1. \\<And>t u.\n       \\<lbrakk>NEUT t \\<and> CR3_RED t (\\<tau>1 \\<rightarrow> \\<tau>2);\n        u \\<in> RED \\<tau>1\\<rbrakk>\n       \\<Longrightarrow> App t u \\<in> RED \\<tau>2", "then"], ["proof (chain)\npicking this:\n  SN u", "show \"(App t u)\\<in>RED \\<tau>2\""], ["proof (prove)\nusing this:\n  SN u\n\ngoal (1 subgoal):\n 1. App t u \\<in> RED \\<tau>2", "using ih_CR2_\\<tau>1 ih_CR3_\\<tau>2 a1 a2"], ["proof (prove)\nusing this:\n  SN u\n  CR2 \\<tau>1\n  CR3 \\<tau>2\n  u \\<in> RED \\<tau>1\n  NEUT t \\<and> CR3_RED t (\\<tau>1 \\<rightarrow> \\<tau>2)\n\ngoal (1 subgoal):\n 1. App t u \\<in> RED \\<tau>2", "by (blast intro: sub_induction)"], ["proof (state)\nthis:\n  App t u \\<in> RED \\<tau>2\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  CR3 (\\<tau>1 \\<rightarrow> \\<tau>2)\n\ngoal (3 subgoals):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 2. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 3. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "}"], ["proof (state)\nthis:\n  CR3 (\\<tau>1 \\<rightarrow> \\<tau>2)\n\ngoal (3 subgoals):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 2. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 3. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 2. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 3. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "case (T \\<sigma>)"], ["proof (state)\nthis:\n  CR1 \\<sigma>\n  CR2 \\<sigma>\n  CR3 \\<sigma>\n\ngoal (3 subgoals):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 2. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 3. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "{"], ["proof (state)\nthis:\n  CR1 \\<sigma>\n  CR2 \\<sigma>\n  CR3 \\<sigma>\n\ngoal (3 subgoals):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 2. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 3. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "case 1 \\<comment> \\<open>follows from the fact that @{term \"Id \\<in> SRED \\<sigma>\"}\\<close>"], ["proof (state)\nthis:\n  \n\ngoal (3 subgoals):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 2. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 3. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "have ih_CR1_\\<sigma>: \"CR1 \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CR1 \\<sigma>", "by fact"], ["proof (state)\nthis:\n  CR1 \\<sigma>\n\ngoal (3 subgoals):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 2. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 3. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "{"], ["proof (state)\nthis:\n  CR1 \\<sigma>\n\ngoal (3 subgoals):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 2. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 3. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "fix t"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 2. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 3. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "assume t_red: \"t \\<in> RED (T \\<sigma>)\""], ["proof (state)\nthis:\n  t \\<in> RED (T \\<sigma>)\n\ngoal (3 subgoals):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 2. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 3. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "{"], ["proof (state)\nthis:\n  t \\<in> RED (T \\<sigma>)\n\ngoal (3 subgoals):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 2. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 3. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "fix s"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 2. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 3. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "assume \"s \\<in> RED \\<sigma>\""], ["proof (state)\nthis:\n  s \\<in> RED \\<sigma>\n\ngoal (3 subgoals):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 2. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 3. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "hence \"SN s\""], ["proof (prove)\nusing this:\n  s \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. SN s", "using ih_CR1_\\<sigma>"], ["proof (prove)\nusing this:\n  s \\<in> RED \\<sigma>\n  CR1 \\<sigma>\n\ngoal (1 subgoal):\n 1. SN s", "by (auto simp add: CR1_def)"], ["proof (state)\nthis:\n  SN s\n\ngoal (3 subgoals):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 2. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 3. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "hence \"SN ([s])\""], ["proof (prove)\nusing this:\n  SN s\n\ngoal (1 subgoal):\n 1. SN [s]", "by (rule SN_Ret)"], ["proof (state)\nthis:\n  SN [s]\n\ngoal (3 subgoals):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 2. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 3. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "hence \"SN ([s] \\<star> Id)\""], ["proof (prove)\nusing this:\n  SN [s]\n\ngoal (1 subgoal):\n 1. SN ([s] \\<star> stack.Id)", "by simp"], ["proof (state)\nthis:\n  SN ([s] \\<star> stack.Id)\n\ngoal (3 subgoals):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 2. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 3. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "}"], ["proof (state)\nthis:\n  ?s2 \\<in> RED \\<sigma> \\<Longrightarrow> SN ([?s2] \\<star> stack.Id)\n\ngoal (3 subgoals):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 2. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 3. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "hence \"Id \\<in> SRED \\<sigma>\""], ["proof (prove)\nusing this:\n  ?s2 \\<in> RED \\<sigma> \\<Longrightarrow> SN ([?s2] \\<star> stack.Id)\n\ngoal (1 subgoal):\n 1. stack.Id \\<in> SRED \\<sigma>", "by simp"], ["proof (state)\nthis:\n  stack.Id \\<in> SRED \\<sigma>\n\ngoal (3 subgoals):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 2. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 3. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "with t_red"], ["proof (chain)\npicking this:\n  t \\<in> RED (T \\<sigma>)\n  stack.Id \\<in> SRED \\<sigma>", "have \"SN (t)\""], ["proof (prove)\nusing this:\n  t \\<in> RED (T \\<sigma>)\n  stack.Id \\<in> SRED \\<sigma>\n\ngoal (1 subgoal):\n 1. SN t", "by (auto simp del: SRED.simps)"], ["proof (state)\nthis:\n  SN t\n\ngoal (3 subgoals):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 2. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 3. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "}"], ["proof (state)\nthis:\n  ?t2 \\<in> RED (T \\<sigma>) \\<Longrightarrow> SN ?t2\n\ngoal (3 subgoals):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR1 (T ty)\n 2. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 3. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "thus \"CR1 (T \\<sigma>)\""], ["proof (prove)\nusing this:\n  ?t2 \\<in> RED (T \\<sigma>) \\<Longrightarrow> SN ?t2\n\ngoal (1 subgoal):\n 1. CR1 (T \\<sigma>)", "unfolding CR1_def"], ["proof (prove)\nusing this:\n  ?t2 \\<in> RED (T \\<sigma>) \\<Longrightarrow> SN ?t2\n\ngoal (1 subgoal):\n 1. \\<forall>t. t \\<in> RED (T \\<sigma>) \\<longrightarrow> SN t", "by blast"], ["proof (state)\nthis:\n  CR1 (T \\<sigma>)\n\ngoal (2 subgoals):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 2. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 2. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "case 2 \\<comment> \\<open>follows since \\isa{SN} is preserved under redcution\\<close>"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 2. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "{"], ["proof (state)\nthis:\n  \n\ngoal (2 subgoals):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 2. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "fix t t'::trm"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 2. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "assume t_red: \"t \\<in> RED (T \\<sigma>)\" and t_t': \"t \\<mapsto> t'\""], ["proof (state)\nthis:\n  t \\<in> RED (T \\<sigma>)\n  t \\<mapsto> t'\n\ngoal (2 subgoals):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 2. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "{"], ["proof (state)\nthis:\n  t \\<in> RED (T \\<sigma>)\n  t \\<mapsto> t'\n\ngoal (2 subgoals):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 2. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "fix k"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 2. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "assume k: \"k \\<in> SRED \\<sigma>\""], ["proof (state)\nthis:\n  k \\<in> SRED \\<sigma>\n\ngoal (2 subgoals):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 2. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "with t_red"], ["proof (chain)\npicking this:\n  t \\<in> RED (T \\<sigma>)\n  k \\<in> SRED \\<sigma>", "have \"SN(t \\<star> k)\""], ["proof (prove)\nusing this:\n  t \\<in> RED (T \\<sigma>)\n  k \\<in> SRED \\<sigma>\n\ngoal (1 subgoal):\n 1. SN (t \\<star> k)", "by simp"], ["proof (state)\nthis:\n  SN (t \\<star> k)\n\ngoal (2 subgoals):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 2. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "moreover"], ["proof (state)\nthis:\n  SN (t \\<star> k)\n\ngoal (2 subgoals):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 2. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "from t_t'"], ["proof (chain)\npicking this:\n  t \\<mapsto> t'", "have \"t \\<star> k \\<mapsto> t' \\<star> k\""], ["proof (prove)\nusing this:\n  t \\<mapsto> t'\n\ngoal (1 subgoal):\n 1. t \\<star> k \\<mapsto> t' \\<star> k", ".."], ["proof (state)\nthis:\n  t \\<star> k \\<mapsto> t' \\<star> k\n\ngoal (2 subgoals):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 2. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "ultimately"], ["proof (chain)\npicking this:\n  SN (t \\<star> k)\n  t \\<star> k \\<mapsto> t' \\<star> k", "have \"SN(t' \\<star> k)\""], ["proof (prove)\nusing this:\n  SN (t \\<star> k)\n  t \\<star> k \\<mapsto> t' \\<star> k\n\ngoal (1 subgoal):\n 1. SN (t' \\<star> k)", "by (rule SN_preserved)"], ["proof (state)\nthis:\n  SN (t' \\<star> k)\n\ngoal (2 subgoals):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 2. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "}"], ["proof (state)\nthis:\n  ?k2 \\<in> SRED \\<sigma> \\<Longrightarrow> SN (t' \\<star> ?k2)\n\ngoal (2 subgoals):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 2. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "hence \"t' \\<in> RED (T \\<sigma>)\""], ["proof (prove)\nusing this:\n  ?k2 \\<in> SRED \\<sigma> \\<Longrightarrow> SN (t' \\<star> ?k2)\n\ngoal (1 subgoal):\n 1. t' \\<in> RED (T \\<sigma>)", "by (simp del: SRED.simps)"], ["proof (state)\nthis:\n  t' \\<in> RED (T \\<sigma>)\n\ngoal (2 subgoals):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 2. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "}"], ["proof (state)\nthis:\n  \\<lbrakk>?t2 \\<in> RED (T \\<sigma>); ?t2 \\<mapsto> ?t'2\\<rbrakk>\n  \\<Longrightarrow> ?t'2 \\<in> RED (T \\<sigma>)\n\ngoal (2 subgoals):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR2 (T ty)\n 2. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "thus \"CR2 (T \\<sigma>)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>?t2 \\<in> RED (T \\<sigma>); ?t2 \\<mapsto> ?t'2\\<rbrakk>\n  \\<Longrightarrow> ?t'2 \\<in> RED (T \\<sigma>)\n\ngoal (1 subgoal):\n 1. CR2 (T \\<sigma>)", "unfolding CR2_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>?t2 \\<in> RED (T \\<sigma>); ?t2 \\<mapsto> ?t'2\\<rbrakk>\n  \\<Longrightarrow> ?t'2 \\<in> RED (T \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<forall>t t'.\n       t \\<in> RED (T \\<sigma>) \\<and> t \\<mapsto> t' \\<longrightarrow>\n       t' \\<in> RED (T \\<sigma>)", "by blast"], ["proof (state)\nthis:\n  CR2 (T \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "case 3"], ["proof (state)\nthis:\n  \n\ngoal (1 subgoal):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "from \\<open>CR3 \\<sigma>\\<close>"], ["proof (chain)\npicking this:\n  CR3 \\<sigma>", "have ih_CR4_\\<sigma> : \"CR4 \\<sigma>\""], ["proof (prove)\nusing this:\n  CR3 \\<sigma>\n\ngoal (1 subgoal):\n 1. CR4 \\<sigma>", ".."], ["proof (state)\nthis:\n  CR4 \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "{"], ["proof (state)\nthis:\n  CR4 \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "fix t"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "assume t'_red: \"\\<And> t' . t \\<mapsto> t' \\<Longrightarrow> t' \\<in> RED (T \\<sigma>)\" \n      and neut_t: \"NEUT t\""], ["proof (state)\nthis:\n  t \\<mapsto> ?t' \\<Longrightarrow> ?t' \\<in> RED (T \\<sigma>)\n  NEUT t\n\ngoal (1 subgoal):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "{"], ["proof (state)\nthis:\n  t \\<mapsto> ?t' \\<Longrightarrow> ?t' \\<in> RED (T \\<sigma>)\n  NEUT t\n\ngoal (1 subgoal):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "fix k"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "assume k_red: \"k \\<in> SRED \\<sigma>\""], ["proof (state)\nthis:\n  k \\<in> SRED \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "fix x"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "have \"NEUT (Var x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. NEUT (Var x)", "unfolding NEUT_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>a. Var x = Var a) \\<or> (\\<exists>t1 t2. Var x = App t1 t2)", "by simp"], ["proof (state)\nthis:\n  NEUT (Var x)\n\ngoal (1 subgoal):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "hence \"Var x \\<in> RED \\<sigma>\""], ["proof (prove)\nusing this:\n  NEUT (Var x)\n\ngoal (1 subgoal):\n 1. Var x \\<in> RED \\<sigma>", "using normal_var ih_CR4_\\<sigma>"], ["proof (prove)\nusing this:\n  NEUT (Var x)\n  NORMAL (Var ?x)\n  CR4 \\<sigma>\n\ngoal (1 subgoal):\n 1. Var x \\<in> RED \\<sigma>", "by (simp add: CR4_def)"], ["proof (state)\nthis:\n  Var x \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "hence \"SN ([Var x] \\<star> k)\""], ["proof (prove)\nusing this:\n  Var x \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. SN ([Var x] \\<star> k)", "using k_red"], ["proof (prove)\nusing this:\n  Var x \\<in> RED \\<sigma>\n  k \\<in> SRED \\<sigma>\n\ngoal (1 subgoal):\n 1. SN ([Var x] \\<star> k)", "by simp"], ["proof (state)\nthis:\n  SN ([Var x] \\<star> k)\n\ngoal (1 subgoal):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "hence \"SSN k\""], ["proof (prove)\nusing this:\n  SN ([Var x] \\<star> k)\n\ngoal (1 subgoal):\n 1. SSN k", "by (rule SN_SSN)"], ["proof (state)\nthis:\n  SSN k\n\ngoal (1 subgoal):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "then"], ["proof (chain)\npicking this:\n  SSN k", "have \"SN (t \\<star> k)\""], ["proof (prove)\nusing this:\n  SSN k\n\ngoal (1 subgoal):\n 1. SN (t \\<star> k)", "using k_red"], ["proof (prove)\nusing this:\n  SSN k\n  k \\<in> SRED \\<sigma>\n\ngoal (1 subgoal):\n 1. SN (t \\<star> k)", "proof (induct k rule:SSN.induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>\\<And>k'.  k \\<mapsto> k'  \\<Longrightarrow> SSN k';\n        \\<And>k'.\n           \\<lbrakk> k \\<mapsto> k' ; k' \\<in> SRED \\<sigma>\\<rbrakk>\n           \\<Longrightarrow> SN (t \\<star> k');\n        k \\<in> SRED \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> SN (t \\<star> k)", "case (SSN_intro k)"], ["proof (state)\nthis:\n   k \\<mapsto> ?k'  \\<Longrightarrow> SSN ?k'\n  \\<lbrakk> k \\<mapsto> ?k' ; ?k' \\<in> SRED \\<sigma>\\<rbrakk>\n  \\<Longrightarrow> SN (t \\<star> ?k')\n  k \\<in> SRED \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>\\<And>k'.  k \\<mapsto> k'  \\<Longrightarrow> SSN k';\n        \\<And>k'.\n           \\<lbrakk> k \\<mapsto> k' ; k' \\<in> SRED \\<sigma>\\<rbrakk>\n           \\<Longrightarrow> SN (t \\<star> k');\n        k \\<in> SRED \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> SN (t \\<star> k)", "have ih : \"\\<And>k'. \\<lbrakk> k \\<mapsto> k' ; k' \\<in> SRED \\<sigma> \\<rbrakk>  \\<Longrightarrow> SN (t \\<star> k')\"\n            and k_red: \"k \\<in> SRED \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>k'.\n        \\<lbrakk> k \\<mapsto> k' ; k' \\<in> SRED \\<sigma>\\<rbrakk>\n        \\<Longrightarrow> SN (t \\<star> k')) &&&\n    k \\<in> SRED \\<sigma>", "by fact+"], ["proof (state)\nthis:\n  \\<lbrakk> k \\<mapsto> ?k' ; ?k' \\<in> SRED \\<sigma>\\<rbrakk>\n  \\<Longrightarrow> SN (t \\<star> ?k')\n  k \\<in> SRED \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>\\<And>k'.  k \\<mapsto> k'  \\<Longrightarrow> SSN k';\n        \\<And>k'.\n           \\<lbrakk> k \\<mapsto> k' ; k' \\<in> SRED \\<sigma>\\<rbrakk>\n           \\<Longrightarrow> SN (t \\<star> k');\n        k \\<in> SRED \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> SN (t \\<star> k)", "{"], ["proof (state)\nthis:\n  \\<lbrakk> k \\<mapsto> ?k' ; ?k' \\<in> SRED \\<sigma>\\<rbrakk>\n  \\<Longrightarrow> SN (t \\<star> ?k')\n  k \\<in> SRED \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>\\<And>k'.  k \\<mapsto> k'  \\<Longrightarrow> SSN k';\n        \\<And>k'.\n           \\<lbrakk> k \\<mapsto> k' ; k' \\<in> SRED \\<sigma>\\<rbrakk>\n           \\<Longrightarrow> SN (t \\<star> k');\n        k \\<in> SRED \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> SN (t \\<star> k)", "fix r"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>\\<And>k'.  k \\<mapsto> k'  \\<Longrightarrow> SSN k';\n        \\<And>k'.\n           \\<lbrakk> k \\<mapsto> k' ; k' \\<in> SRED \\<sigma>\\<rbrakk>\n           \\<Longrightarrow> SN (t \\<star> k');\n        k \\<in> SRED \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> SN (t \\<star> k)", "assume r: \"t \\<star> k \\<mapsto> r\""], ["proof (state)\nthis:\n  t \\<star> k \\<mapsto> r\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>\\<And>k'.  k \\<mapsto> k'  \\<Longrightarrow> SSN k';\n        \\<And>k'.\n           \\<lbrakk> k \\<mapsto> k' ; k' \\<in> SRED \\<sigma>\\<rbrakk>\n           \\<Longrightarrow> SN (t \\<star> k');\n        k \\<in> SRED \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> SN (t \\<star> k)", "hence \"SN r\""], ["proof (prove)\nusing this:\n  t \\<star> k \\<mapsto> r\n\ngoal (1 subgoal):\n 1. SN r", "using neut_t"], ["proof (prove)\nusing this:\n  t \\<star> k \\<mapsto> r\n  NEUT t\n\ngoal (1 subgoal):\n 1. SN r", "proof (cases rule:dismantle_cases')"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>t'.\n       \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> k\\<rbrakk>\n       \\<Longrightarrow> SN r\n 2. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> SN r", "case (T t')"], ["proof (state)\nthis:\n  t \\<mapsto> t'\n  r = t' \\<star> k\n\ngoal (2 subgoals):\n 1. \\<And>t'.\n       \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> k\\<rbrakk>\n       \\<Longrightarrow> SN r\n 2. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> SN r", "hence t_t': \"t \\<mapsto> t'\" and r_def: \"r = t' \\<star> k\""], ["proof (prove)\nusing this:\n  t \\<mapsto> t'\n  r = t' \\<star> k\n\ngoal (1 subgoal):\n 1. t \\<mapsto> t' &&& r = t' \\<star> k", "."], ["proof (state)\nthis:\n  t \\<mapsto> t'\n  r = t' \\<star> k\n\ngoal (2 subgoals):\n 1. \\<And>t'.\n       \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> k\\<rbrakk>\n       \\<Longrightarrow> SN r\n 2. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> SN r", "from t_t'"], ["proof (chain)\npicking this:\n  t \\<mapsto> t'", "have \"t' \\<in> RED (T \\<sigma>)\""], ["proof (prove)\nusing this:\n  t \\<mapsto> t'\n\ngoal (1 subgoal):\n 1. t' \\<in> RED (T \\<sigma>)", "by (rule t'_red)"], ["proof (state)\nthis:\n  t' \\<in> RED (T \\<sigma>)\n\ngoal (2 subgoals):\n 1. \\<And>t'.\n       \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> k\\<rbrakk>\n       \\<Longrightarrow> SN r\n 2. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> SN r", "thus \"SN r\""], ["proof (prove)\nusing this:\n  t' \\<in> RED (T \\<sigma>)\n\ngoal (1 subgoal):\n 1. SN r", "using k_red r_def"], ["proof (prove)\nusing this:\n  t' \\<in> RED (T \\<sigma>)\n  k \\<in> SRED \\<sigma>\n  r = t' \\<star> k\n\ngoal (1 subgoal):\n 1. SN r", "by simp"], ["proof (state)\nthis:\n  SN r\n\ngoal (1 subgoal):\n 1. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> SN r", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> SN r", "case (K k')"], ["proof (state)\nthis:\n   k \\<mapsto> k' \n  r = t \\<star> k'\n\ngoal (1 subgoal):\n 1. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> SN r", "hence k_k': \"k \\<mapsto> k'\" and r_def: \"r = t \\<star> k'\""], ["proof (prove)\nusing this:\n   k \\<mapsto> k' \n  r = t \\<star> k'\n\ngoal (1 subgoal):\n 1.  k \\<mapsto> k'  &&& r = t \\<star> k'", "."], ["proof (state)\nthis:\n   k \\<mapsto> k' \n  r = t \\<star> k'\n\ngoal (1 subgoal):\n 1. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> SN r", "{"], ["proof (state)\nthis:\n   k \\<mapsto> k' \n  r = t \\<star> k'\n\ngoal (1 subgoal):\n 1. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> SN r", "fix s"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> SN r", "assume \"s \\<in> RED \\<sigma>\""], ["proof (state)\nthis:\n  s \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> SN r", "hence \"SN ([s] \\<star> k)\""], ["proof (prove)\nusing this:\n  s \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. SN ([s] \\<star> k)", "using k_red"], ["proof (prove)\nusing this:\n  s \\<in> RED \\<sigma>\n  k \\<in> SRED \\<sigma>\n\ngoal (1 subgoal):\n 1. SN ([s] \\<star> k)", "by simp"], ["proof (state)\nthis:\n  SN ([s] \\<star> k)\n\ngoal (1 subgoal):\n 1. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> SN r", "moreover"], ["proof (state)\nthis:\n  SN ([s] \\<star> k)\n\ngoal (1 subgoal):\n 1. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> SN r", "have \"[s] \\<star> k \\<mapsto> [s] \\<star> k'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. [s] \\<star> k \\<mapsto> [s] \\<star> k'", "using k_k'"], ["proof (prove)\nusing this:\n   k \\<mapsto> k' \n\ngoal (1 subgoal):\n 1. [s] \\<star> k \\<mapsto> [s] \\<star> k'", "unfolding stack_reduction_def"], ["proof (prove)\nusing this:\n  \\<forall>t. t \\<star> k \\<mapsto> t \\<star> k'\n\ngoal (1 subgoal):\n 1. [s] \\<star> k \\<mapsto> [s] \\<star> k'", ".."], ["proof (state)\nthis:\n  [s] \\<star> k \\<mapsto> [s] \\<star> k'\n\ngoal (1 subgoal):\n 1. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> SN r", "ultimately"], ["proof (chain)\npicking this:\n  SN ([s] \\<star> k)\n  [s] \\<star> k \\<mapsto> [s] \\<star> k'", "have \"SN ([s] \\<star> k')\""], ["proof (prove)\nusing this:\n  SN ([s] \\<star> k)\n  [s] \\<star> k \\<mapsto> [s] \\<star> k'\n\ngoal (1 subgoal):\n 1. SN ([s] \\<star> k')", ".."], ["proof (state)\nthis:\n  SN ([s] \\<star> k')\n\ngoal (1 subgoal):\n 1. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> SN r", "}"], ["proof (state)\nthis:\n  ?s2 \\<in> RED \\<sigma> \\<Longrightarrow> SN ([?s2] \\<star> k')\n\ngoal (1 subgoal):\n 1. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> SN r", "hence \"k' \\<in> SRED \\<sigma>\""], ["proof (prove)\nusing this:\n  ?s2 \\<in> RED \\<sigma> \\<Longrightarrow> SN ([?s2] \\<star> k')\n\ngoal (1 subgoal):\n 1. k' \\<in> SRED \\<sigma>", "by simp"], ["proof (state)\nthis:\n  k' \\<in> SRED \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> SN r", "with k_k'"], ["proof (chain)\npicking this:\n   k \\<mapsto> k' \n  k' \\<in> SRED \\<sigma>", "show \"SN r\""], ["proof (prove)\nusing this:\n   k \\<mapsto> k' \n  k' \\<in> SRED \\<sigma>\n\ngoal (1 subgoal):\n 1. SN r", "unfolding r_def"], ["proof (prove)\nusing this:\n   k \\<mapsto> k' \n  k' \\<in> SRED \\<sigma>\n\ngoal (1 subgoal):\n 1. SN (t \\<star> k')", "by (rule ih)"], ["proof (state)\nthis:\n  SN r\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  SN r\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>\\<And>k'.  k \\<mapsto> k'  \\<Longrightarrow> SSN k';\n        \\<And>k'.\n           \\<lbrakk> k \\<mapsto> k' ; k' \\<in> SRED \\<sigma>\\<rbrakk>\n           \\<Longrightarrow> SN (t \\<star> k');\n        k \\<in> SRED \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> SN (t \\<star> k)", "}"], ["proof (state)\nthis:\n  t \\<star> k \\<mapsto> ?r2 \\<Longrightarrow> SN ?r2\n\ngoal (1 subgoal):\n 1. \\<And>k.\n       \\<lbrakk>\\<And>k'.  k \\<mapsto> k'  \\<Longrightarrow> SSN k';\n        \\<And>k'.\n           \\<lbrakk> k \\<mapsto> k' ; k' \\<in> SRED \\<sigma>\\<rbrakk>\n           \\<Longrightarrow> SN (t \\<star> k');\n        k \\<in> SRED \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> SN (t \\<star> k)", "thus \"SN (t \\<star> k)\""], ["proof (prove)\nusing this:\n  t \\<star> k \\<mapsto> ?r2 \\<Longrightarrow> SN ?r2\n\ngoal (1 subgoal):\n 1. SN (t \\<star> k)", ".."], ["proof (state)\nthis:\n  SN (t \\<star> k)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  SN (t \\<star> k)\n\ngoal (1 subgoal):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "}"], ["proof (state)\nthis:\n  ?k2 \\<in> SRED \\<sigma> \\<Longrightarrow> SN (t \\<star> ?k2)\n\ngoal (1 subgoal):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "hence \"t \\<in> RED (T \\<sigma>)\""], ["proof (prove)\nusing this:\n  ?k2 \\<in> SRED \\<sigma> \\<Longrightarrow> SN (t \\<star> ?k2)\n\ngoal (1 subgoal):\n 1. t \\<in> RED (T \\<sigma>)", "by simp"], ["proof (state)\nthis:\n  t \\<in> RED (T \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "}"], ["proof (state)\nthis:\n  \\<lbrakk>\\<And>t'.\n              ?t2 \\<mapsto> t' \\<Longrightarrow> t' \\<in> RED (T \\<sigma>);\n   NEUT ?t2\\<rbrakk>\n  \\<Longrightarrow> ?t2 \\<in> RED (T \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<And>ty.\n       \\<lbrakk>CR1 ty; CR2 ty; CR3 ty\\<rbrakk> \\<Longrightarrow> CR3 (T ty)", "thus \"CR3 (T \\<sigma>)\""], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>t'.\n              ?t2 \\<mapsto> t' \\<Longrightarrow> t' \\<in> RED (T \\<sigma>);\n   NEUT ?t2\\<rbrakk>\n  \\<Longrightarrow> ?t2 \\<in> RED (T \\<sigma>)\n\ngoal (1 subgoal):\n 1. CR3 (T \\<sigma>)", "unfolding CR3_def CR3_RED_def"], ["proof (prove)\nusing this:\n  \\<lbrakk>\\<And>t'.\n              ?t2 \\<mapsto> t' \\<Longrightarrow> t' \\<in> RED (T \\<sigma>);\n   NEUT ?t2\\<rbrakk>\n  \\<Longrightarrow> ?t2 \\<in> RED (T \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<forall>t.\n       NEUT t \\<and>\n       (\\<forall>t'.\n           t \\<mapsto> t' \\<longrightarrow>\n           t' \\<in> RED (T \\<sigma>)) \\<longrightarrow>\n       t \\<in> RED (T \\<sigma>)", "by blast"], ["proof (state)\nthis:\n  CR3 (T \\<sigma>)\n\ngoal:\nNo subgoals!", "}"], ["proof (state)\nthis:\n  CR3 (T \\<sigma>)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>The last case above shows that, once all the reasoning principles have\nbeen established, some proofs have a formalization which is amazingly close to\nthe informal version. For a direct comparison, the informal proof is presented\nin Figure~\\ref{fig:cr3}.\\<close>"], ["", "text_raw \\<open>\\input{figureCR3}\\<close>"], ["", "text \\<open>Now that we have established the properties of the reducibility\nrelation, we need to show that reducibility is preserved by the various term\nconstructors. The only nontrivial cases are abstraction and sequencing.\\<close>"], ["", "section \\<open>Abstraction Preserves Reducibility\\<close>"], ["", "text \\<open>Once again we could reuse the proofs from \\cite{SN.thy}. The proof uses\nthe \\isa{double-SN} rule and the lemma \\isa{red-Lam} below. Unfortunately, this\ntime the proofs are not fully identical to the proofs in \\cite{SN.thy} because\nwe consider $\\beta\\eta$-reduction rather than $\\beta$-reduction only. However,\nthe differences are only minor.\\<close>"], ["", "lemma%invisible double_SN_aux:\n  assumes a: \"SN a\"\n  and b: \"SN b\"\n  and hyp: \"\\<And>x z.\n    \\<lbrakk>\\<And>y. x \\<mapsto> y \\<Longrightarrow> SN y; \\<And>y. x \\<mapsto> y \\<Longrightarrow> P y z;\n     \\<And>u. z \\<mapsto> u \\<Longrightarrow> SN u; \\<And>u. z \\<mapsto> u \\<Longrightarrow> P x u\\<rbrakk> \\<Longrightarrow> P x z\"\n  shows \"P a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P a b", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P a b", "from a"], ["proof (chain)\npicking this:\n  SN a", "have r: \"\\<And>b. SN b \\<Longrightarrow> P a b\""], ["proof (prove)\nusing this:\n  SN a\n\ngoal (1 subgoal):\n 1. \\<And>b. SN b \\<Longrightarrow> P a b", "proof (induct a rule: SN.induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t b.\n       \\<lbrakk>\\<And>t'. t \\<mapsto> t' \\<Longrightarrow> SN t';\n        \\<And>t' b.\n           \\<lbrakk>t \\<mapsto> t'; SN b\\<rbrakk> \\<Longrightarrow> P t' b;\n        SN b\\<rbrakk>\n       \\<Longrightarrow> P t b", "case (SN_intro x)"], ["proof (state)\nthis:\n  x \\<mapsto> ?t' \\<Longrightarrow> SN ?t'\n  \\<lbrakk>x \\<mapsto> ?t'; SN ?b\\<rbrakk> \\<Longrightarrow> P ?t' ?b\n  SN b\n\ngoal (1 subgoal):\n 1. \\<And>t b.\n       \\<lbrakk>\\<And>t'. t \\<mapsto> t' \\<Longrightarrow> SN t';\n        \\<And>t' b.\n           \\<lbrakk>t \\<mapsto> t'; SN b\\<rbrakk> \\<Longrightarrow> P t' b;\n        SN b\\<rbrakk>\n       \\<Longrightarrow> P t b", "note SNI' = SN_intro"], ["proof (state)\nthis:\n  x \\<mapsto> ?t' \\<Longrightarrow> SN ?t'\n  \\<lbrakk>x \\<mapsto> ?t'; SN ?b\\<rbrakk> \\<Longrightarrow> P ?t' ?b\n  SN b\n\ngoal (1 subgoal):\n 1. \\<And>t b.\n       \\<lbrakk>\\<And>t'. t \\<mapsto> t' \\<Longrightarrow> SN t';\n        \\<And>t' b.\n           \\<lbrakk>t \\<mapsto> t'; SN b\\<rbrakk> \\<Longrightarrow> P t' b;\n        SN b\\<rbrakk>\n       \\<Longrightarrow> P t b", "have \"SN b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN b", "by fact"], ["proof (state)\nthis:\n  SN b\n\ngoal (1 subgoal):\n 1. \\<And>t b.\n       \\<lbrakk>\\<And>t'. t \\<mapsto> t' \\<Longrightarrow> SN t';\n        \\<And>t' b.\n           \\<lbrakk>t \\<mapsto> t'; SN b\\<rbrakk> \\<Longrightarrow> P t' b;\n        SN b\\<rbrakk>\n       \\<Longrightarrow> P t b", "thus ?case"], ["proof (prove)\nusing this:\n  SN b\n\ngoal (1 subgoal):\n 1. P x b", "proof (induct b rule: SN.induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>\\<And>t'. t \\<mapsto> t' \\<Longrightarrow> SN t';\n        \\<And>t'. t \\<mapsto> t' \\<Longrightarrow> P x t'\\<rbrakk>\n       \\<Longrightarrow> P x t", "case (SN_intro y)"], ["proof (state)\nthis:\n  y \\<mapsto> ?t' \\<Longrightarrow> SN ?t'\n  y \\<mapsto> ?t' \\<Longrightarrow> P x ?t'\n\ngoal (1 subgoal):\n 1. \\<And>t.\n       \\<lbrakk>\\<And>t'. t \\<mapsto> t' \\<Longrightarrow> SN t';\n        \\<And>t'. t \\<mapsto> t' \\<Longrightarrow> P x t'\\<rbrakk>\n       \\<Longrightarrow> P x t", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. P x y", "apply (rule hyp)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>y. x \\<mapsto> y \\<Longrightarrow> SN y\n 2. \\<And>ya. x \\<mapsto> ya \\<Longrightarrow> P ya y\n 3. \\<And>u. y \\<mapsto> u \\<Longrightarrow> SN u\n 4. \\<And>u. y \\<mapsto> u \\<Longrightarrow> P x u", "apply (erule SNI')"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>ya. x \\<mapsto> ya \\<Longrightarrow> P ya y\n 2. \\<And>u. y \\<mapsto> u \\<Longrightarrow> SN u\n 3. \\<And>u. y \\<mapsto> u \\<Longrightarrow> P x u", "apply (erule SNI')"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>ya. SN y\n 2. \\<And>u. y \\<mapsto> u \\<Longrightarrow> SN u\n 3. \\<And>u. y \\<mapsto> u \\<Longrightarrow> P x u", "apply (rule SN.SN_intro)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>ya t'. y \\<mapsto> t' \\<Longrightarrow> SN t'\n 2. \\<And>u. y \\<mapsto> u \\<Longrightarrow> SN u\n 3. \\<And>u. y \\<mapsto> u \\<Longrightarrow> P x u", "apply (erule SN_intro)+"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  P x y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P x b\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  SN ?b \\<Longrightarrow> P a ?b\n\ngoal (1 subgoal):\n 1. P a b", "from b"], ["proof (chain)\npicking this:\n  SN b", "show ?thesis"], ["proof (prove)\nusing this:\n  SN b\n\ngoal (1 subgoal):\n 1. P a b", "by (rule r)"], ["proof (state)\nthis:\n  P a b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma double_SN[consumes 2]:\n  assumes a: \"SN a\"\n  and     b: \"SN b\" \n  and     c: \"\\<And>(x::trm) (z::trm). \n             \\<lbrakk>\\<And>y. x \\<mapsto> y \\<Longrightarrow> P y z; \\<And>u. z \\<mapsto> u \\<Longrightarrow> P x u\\<rbrakk> \\<Longrightarrow> P x z\"\n  shows \"P a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P a b", "using a b c"], ["proof (prove)\nusing this:\n  SN a\n  SN b\n  \\<lbrakk>\\<And>y. ?x \\<mapsto> y \\<Longrightarrow> P y ?z;\n   \\<And>u. ?z \\<mapsto> u \\<Longrightarrow> P ?x u\\<rbrakk>\n  \\<Longrightarrow> P ?x ?z\n\ngoal (1 subgoal):\n 1. P a b", "by%invisible (blast intro: double_SN_aux)"], ["", "lemma red_Lam:\n  assumes a: \"\\<Lambda> x . t \\<mapsto> r\" \n  shows \" (\\<exists>t'. r = \\<Lambda> x . t' \\<and> t \\<mapsto> t') \\<or> (t = App r (Var x) \\<and> x \\<sharp> r ) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>t'. r = \\<Lambda> x . t' \\<and> t \\<mapsto> t') \\<or>\n    t = App r (Var x) \\<and> x \\<sharp> r", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. (\\<exists>t'. r = \\<Lambda> x . t' \\<and> t \\<mapsto> t') \\<or>\n    t = App r (Var x) \\<and> x \\<sharp> r", "obtain z::name where z: \"z \\<sharp> x\"   \"z \\<sharp> t\"   \"z \\<sharp> r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z.\n        \\<lbrakk>z \\<sharp> x; z \\<sharp> t; z \\<sharp> r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using ex_fresh[of \"(x,t,r)\"]"], ["proof (prove)\nusing this:\n  \\<exists>c. c \\<sharp> (x, t, r)\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        \\<lbrakk>z \\<sharp> x; z \\<sharp> t; z \\<sharp> r\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: fresh_prod)"], ["proof (state)\nthis:\n  z \\<sharp> x\n  z \\<sharp> t\n  z \\<sharp> r\n\ngoal (1 subgoal):\n 1. (\\<exists>t'. r = \\<Lambda> x . t' \\<and> t \\<mapsto> t') \\<or>\n    t = App r (Var x) \\<and> x \\<sharp> r", "have \"x \\<sharp> \\<Lambda> x . t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> \\<Lambda> x . t", "by (simp add: abs_fresh)"], ["proof (state)\nthis:\n  x \\<sharp> \\<Lambda> x . t\n\ngoal (1 subgoal):\n 1. (\\<exists>t'. r = \\<Lambda> x . t' \\<and> t \\<mapsto> t') \\<or>\n    t = App r (Var x) \\<and> x \\<sharp> r", "with a"], ["proof (chain)\npicking this:\n  \\<Lambda> x . t \\<mapsto> r\n  x \\<sharp> \\<Lambda> x . t", "have \"x \\<sharp> r\""], ["proof (prove)\nusing this:\n  \\<Lambda> x . t \\<mapsto> r\n  x \\<sharp> \\<Lambda> x . t\n\ngoal (1 subgoal):\n 1. x \\<sharp> r", "by (simp add: reduction_fresh)"], ["proof (state)\nthis:\n  x \\<sharp> r\n\ngoal (1 subgoal):\n 1. (\\<exists>t'. r = \\<Lambda> x . t' \\<and> t \\<mapsto> t') \\<or>\n    t = App r (Var x) \\<and> x \\<sharp> r", "with a"], ["proof (chain)\npicking this:\n  \\<Lambda> x . t \\<mapsto> r\n  x \\<sharp> r", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Lambda> x . t \\<mapsto> r\n  x \\<sharp> r\n\ngoal (1 subgoal):\n 1. (\\<exists>t'. r = \\<Lambda> x . t' \\<and> t \\<mapsto> t') \\<or>\n    t = App r (Var x) \\<and> x \\<sharp> r", "using z"], ["proof (prove)\nusing this:\n  \\<Lambda> x . t \\<mapsto> r\n  x \\<sharp> r\n  z \\<sharp> x\n  z \\<sharp> t\n  z \\<sharp> r\n\ngoal (1 subgoal):\n 1. (\\<exists>t'. r = \\<Lambda> x . t' \\<and> t \\<mapsto> t') \\<or>\n    t = App r (Var x) \\<and> x \\<sharp> r", "by(cases rule: reduction.strong_cases\n       [where x =\"x\" and xa=\"x\" and xb=\"x\" and xc=\"x\" and \n              xd=\"x\" and xe=\"x\" and xf=\"x\" and xg=\"x\" and y=\"z\"])\n        (auto simp add: abs_fresh alpha fresh_atm)"], ["proof (state)\nthis:\n  (\\<exists>t'. r = \\<Lambda> x . t' \\<and> t \\<mapsto> t') \\<or>\n  t = App r (Var x) \\<and> x \\<sharp> r\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma abs_RED: \n  assumes asm: \"\\<forall>s\\<in>RED \\<tau>. t[x::=s]\\<in>RED \\<sigma>\"\n  shows \"\\<Lambda> x . t \\<in>RED (\\<tau>\\<rightarrow>\\<sigma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Lambda> x . t \\<in> RED (\\<tau> \\<rightarrow> \\<sigma>)", "proof %invisible -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<Lambda> x . t \\<in> RED (\\<tau> \\<rightarrow> \\<sigma>)", "have b1: \"SN t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. SN t", "have \"Var x\\<in>RED \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Var x \\<in> RED \\<tau>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Var x \\<in> RED \\<tau>", "have \"CR4 \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CR4 \\<tau>", "by (simp add: RED_props CR3_implies_CR4)"], ["proof (state)\nthis:\n  CR4 \\<tau>\n\ngoal (1 subgoal):\n 1. Var x \\<in> RED \\<tau>", "moreover"], ["proof (state)\nthis:\n  CR4 \\<tau>\n\ngoal (1 subgoal):\n 1. Var x \\<in> RED \\<tau>", "have \"NEUT (Var x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. NEUT (Var x)", "by (auto simp add: NEUT_def)"], ["proof (state)\nthis:\n  NEUT (Var x)\n\ngoal (1 subgoal):\n 1. Var x \\<in> RED \\<tau>", "moreover"], ["proof (state)\nthis:\n  NEUT (Var x)\n\ngoal (1 subgoal):\n 1. Var x \\<in> RED \\<tau>", "have \"NORMAL (Var x)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. NORMAL (Var x)", "by (rule normal_var)"], ["proof (state)\nthis:\n  NORMAL (Var x)\n\ngoal (1 subgoal):\n 1. Var x \\<in> RED \\<tau>", "ultimately"], ["proof (chain)\npicking this:\n  CR4 \\<tau>\n  NEUT (Var x)\n  NORMAL (Var x)", "show \"Var x\\<in>RED \\<tau>\""], ["proof (prove)\nusing this:\n  CR4 \\<tau>\n  NEUT (Var x)\n  NORMAL (Var x)\n\ngoal (1 subgoal):\n 1. Var x \\<in> RED \\<tau>", "by (simp add: CR4_def)"], ["proof (state)\nthis:\n  Var x \\<in> RED \\<tau>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Var x \\<in> RED \\<tau>\n\ngoal (1 subgoal):\n 1. SN t", "then"], ["proof (chain)\npicking this:\n  Var x \\<in> RED \\<tau>", "have \"t[x::=Var x]\\<in>RED \\<sigma>\""], ["proof (prove)\nusing this:\n  Var x \\<in> RED \\<tau>\n\ngoal (1 subgoal):\n 1. t[x::=Var x] \\<in> RED \\<sigma>", "using asm"], ["proof (prove)\nusing this:\n  Var x \\<in> RED \\<tau>\n  \\<forall>s\\<in>RED \\<tau>. t[x::=s] \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. t[x::=Var x] \\<in> RED \\<sigma>", "by simp"], ["proof (state)\nthis:\n  t[x::=Var x] \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. SN t", "then"], ["proof (chain)\npicking this:\n  t[x::=Var x] \\<in> RED \\<sigma>", "have \"t\\<in>RED \\<sigma>\""], ["proof (prove)\nusing this:\n  t[x::=Var x] \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. t \\<in> RED \\<sigma>", "by (simp add: id_subs)"], ["proof (state)\nthis:\n  t \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. SN t", "moreover"], ["proof (state)\nthis:\n  t \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. SN t", "have \"CR1 \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CR1 \\<sigma>", "by (simp add: RED_props)"], ["proof (state)\nthis:\n  CR1 \\<sigma>\n\ngoal (1 subgoal):\n 1. SN t", "ultimately"], ["proof (chain)\npicking this:\n  t \\<in> RED \\<sigma>\n  CR1 \\<sigma>", "show \"SN t\""], ["proof (prove)\nusing this:\n  t \\<in> RED \\<sigma>\n  CR1 \\<sigma>\n\ngoal (1 subgoal):\n 1. SN t", "by (simp add: CR1_def)"], ["proof (state)\nthis:\n  SN t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  SN t\n\ngoal (1 subgoal):\n 1. \\<Lambda> x . t \\<in> RED (\\<tau> \\<rightarrow> \\<sigma>)", "show \"\\<Lambda> x .t\\<in>RED (\\<tau>\\<rightarrow>\\<sigma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<Lambda> x . t \\<in> RED (\\<tau> \\<rightarrow> \\<sigma>)", "proof (simp, intro strip)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       u \\<in> RED \\<tau> \\<Longrightarrow>\n       App (\\<Lambda> x . t) u \\<in> RED \\<sigma>", "fix u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>u.\n       u \\<in> RED \\<tau> \\<Longrightarrow>\n       App (\\<Lambda> x . t) u \\<in> RED \\<sigma>", "assume b2: \"u\\<in>RED \\<tau>\""], ["proof (state)\nthis:\n  u \\<in> RED \\<tau>\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       u \\<in> RED \\<tau> \\<Longrightarrow>\n       App (\\<Lambda> x . t) u \\<in> RED \\<sigma>", "then"], ["proof (chain)\npicking this:\n  u \\<in> RED \\<tau>", "have b3: \"SN u\""], ["proof (prove)\nusing this:\n  u \\<in> RED \\<tau>\n\ngoal (1 subgoal):\n 1. SN u", "using RED_props"], ["proof (prove)\nusing this:\n  u \\<in> RED \\<tau>\n  CR1 ?\\<tau>\n  CR2 ?\\<tau>\n  CR3 ?\\<tau>\n\ngoal (1 subgoal):\n 1. SN u", "by (auto simp add: CR1_def)"], ["proof (state)\nthis:\n  SN u\n\ngoal (1 subgoal):\n 1. \\<And>u.\n       u \\<in> RED \\<tau> \\<Longrightarrow>\n       App (\\<Lambda> x . t) u \\<in> RED \\<sigma>", "show \"App (\\<Lambda> x .t) u \\<in> RED \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. App (\\<Lambda> x . t) u \\<in> RED \\<sigma>", "using b1 b3 b2 asm"], ["proof (prove)\nusing this:\n  SN t\n  SN u\n  u \\<in> RED \\<tau>\n  \\<forall>s\\<in>RED \\<tau>. t[x::=s] \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. App (\\<Lambda> x . t) u \\<in> RED \\<sigma>", "proof(induct t u rule: double_SN)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa z.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>xa \\<mapsto> y; z \\<in> RED \\<tau>;\n                    \\<forall>s\\<in>RED \\<tau>.\n                       y[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n                   \\<Longrightarrow> App (\\<Lambda> x . y) z\n                                     \\<in> RED \\<sigma>;\n        \\<And>u.\n           \\<lbrakk>z \\<mapsto> u; u \\<in> RED \\<tau>;\n            \\<forall>s\\<in>RED \\<tau>. xa[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n           \\<Longrightarrow> App (\\<Lambda> x . xa) u \\<in> RED \\<sigma>;\n        z \\<in> RED \\<tau>;\n        \\<forall>s\\<in>RED \\<tau>. xa[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> App (\\<Lambda> x . xa) z \\<in> RED \\<sigma>", "fix t u"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xa z.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>xa \\<mapsto> y; z \\<in> RED \\<tau>;\n                    \\<forall>s\\<in>RED \\<tau>.\n                       y[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n                   \\<Longrightarrow> App (\\<Lambda> x . y) z\n                                     \\<in> RED \\<sigma>;\n        \\<And>u.\n           \\<lbrakk>z \\<mapsto> u; u \\<in> RED \\<tau>;\n            \\<forall>s\\<in>RED \\<tau>. xa[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n           \\<Longrightarrow> App (\\<Lambda> x . xa) u \\<in> RED \\<sigma>;\n        z \\<in> RED \\<tau>;\n        \\<forall>s\\<in>RED \\<tau>. xa[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> App (\\<Lambda> x . xa) z \\<in> RED \\<sigma>", "assume ih1: \"\\<And>t'.  \\<lbrakk>t \\<mapsto> t'; u\\<in>RED \\<tau>; \\<forall>s\\<in>RED \\<tau>. t'[x::=s]\\<in>RED \\<sigma>\\<rbrakk> \\<Longrightarrow> App (\\<Lambda> x\n.t') u \\<in>\nRED \\<sigma>\""], ["proof (state)\nthis:\n  \\<lbrakk>t \\<mapsto> ?t'; u \\<in> RED \\<tau>;\n   \\<forall>s\\<in>RED \\<tau>. ?t'[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n  \\<Longrightarrow> App (\\<Lambda> x . ?t') u \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>xa z.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>xa \\<mapsto> y; z \\<in> RED \\<tau>;\n                    \\<forall>s\\<in>RED \\<tau>.\n                       y[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n                   \\<Longrightarrow> App (\\<Lambda> x . y) z\n                                     \\<in> RED \\<sigma>;\n        \\<And>u.\n           \\<lbrakk>z \\<mapsto> u; u \\<in> RED \\<tau>;\n            \\<forall>s\\<in>RED \\<tau>. xa[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n           \\<Longrightarrow> App (\\<Lambda> x . xa) u \\<in> RED \\<sigma>;\n        z \\<in> RED \\<tau>;\n        \\<forall>s\\<in>RED \\<tau>. xa[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> App (\\<Lambda> x . xa) z \\<in> RED \\<sigma>", "assume ih2: \"\\<And>u'.  \\<lbrakk>u \\<mapsto> u'; u'\\<in>RED \\<tau>; \\<forall>s\\<in>RED \\<tau>. t[x::=s]\\<in>RED \\<sigma>\\<rbrakk> \\<Longrightarrow> App (\\<Lambda> x\n.t) u' \\<in>\nRED \\<sigma>\""], ["proof (state)\nthis:\n  \\<lbrakk>u \\<mapsto> ?u'; ?u' \\<in> RED \\<tau>;\n   \\<forall>s\\<in>RED \\<tau>. t[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n  \\<Longrightarrow> App (\\<Lambda> x . t) ?u' \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>xa z.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>xa \\<mapsto> y; z \\<in> RED \\<tau>;\n                    \\<forall>s\\<in>RED \\<tau>.\n                       y[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n                   \\<Longrightarrow> App (\\<Lambda> x . y) z\n                                     \\<in> RED \\<sigma>;\n        \\<And>u.\n           \\<lbrakk>z \\<mapsto> u; u \\<in> RED \\<tau>;\n            \\<forall>s\\<in>RED \\<tau>. xa[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n           \\<Longrightarrow> App (\\<Lambda> x . xa) u \\<in> RED \\<sigma>;\n        z \\<in> RED \\<tau>;\n        \\<forall>s\\<in>RED \\<tau>. xa[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> App (\\<Lambda> x . xa) z \\<in> RED \\<sigma>", "assume as1: \"u \\<in> RED \\<tau>\""], ["proof (state)\nthis:\n  u \\<in> RED \\<tau>\n\ngoal (1 subgoal):\n 1. \\<And>xa z.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>xa \\<mapsto> y; z \\<in> RED \\<tau>;\n                    \\<forall>s\\<in>RED \\<tau>.\n                       y[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n                   \\<Longrightarrow> App (\\<Lambda> x . y) z\n                                     \\<in> RED \\<sigma>;\n        \\<And>u.\n           \\<lbrakk>z \\<mapsto> u; u \\<in> RED \\<tau>;\n            \\<forall>s\\<in>RED \\<tau>. xa[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n           \\<Longrightarrow> App (\\<Lambda> x . xa) u \\<in> RED \\<sigma>;\n        z \\<in> RED \\<tau>;\n        \\<forall>s\\<in>RED \\<tau>. xa[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> App (\\<Lambda> x . xa) z \\<in> RED \\<sigma>", "assume as2: \"\\<forall>s\\<in>RED \\<tau>. t[x::=s]\\<in>RED \\<sigma>\""], ["proof (state)\nthis:\n  \\<forall>s\\<in>RED \\<tau>. t[x::=s] \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>xa z.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>xa \\<mapsto> y; z \\<in> RED \\<tau>;\n                    \\<forall>s\\<in>RED \\<tau>.\n                       y[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n                   \\<Longrightarrow> App (\\<Lambda> x . y) z\n                                     \\<in> RED \\<sigma>;\n        \\<And>u.\n           \\<lbrakk>z \\<mapsto> u; u \\<in> RED \\<tau>;\n            \\<forall>s\\<in>RED \\<tau>. xa[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n           \\<Longrightarrow> App (\\<Lambda> x . xa) u \\<in> RED \\<sigma>;\n        z \\<in> RED \\<tau>;\n        \\<forall>s\\<in>RED \\<tau>. xa[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> App (\\<Lambda> x . xa) z \\<in> RED \\<sigma>", "have \"CR3_RED (App (\\<Lambda> x. t) u) \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CR3_RED (App (\\<Lambda> x . t) u) \\<sigma>", "unfolding CR3_RED_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<forall>t'.\n       App (\\<Lambda> x . t) u \\<mapsto> t' \\<longrightarrow>\n       t' \\<in> RED \\<sigma>", "proof(intro strip)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t'.\n       App (\\<Lambda> x . t) u \\<mapsto> t' \\<Longrightarrow>\n       t' \\<in> RED \\<sigma>", "fix r"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t'.\n       App (\\<Lambda> x . t) u \\<mapsto> t' \\<Longrightarrow>\n       t' \\<in> RED \\<sigma>", "assume red: \"App (\\<Lambda> x .t) u \\<mapsto> r\""], ["proof (state)\nthis:\n  App (\\<Lambda> x . t) u \\<mapsto> r\n\ngoal (1 subgoal):\n 1. \\<And>t'.\n       App (\\<Lambda> x . t) u \\<mapsto> t' \\<Longrightarrow>\n       t' \\<in> RED \\<sigma>", "moreover"], ["proof (state)\nthis:\n  App (\\<Lambda> x . t) u \\<mapsto> r\n\ngoal (1 subgoal):\n 1. \\<And>t'.\n       App (\\<Lambda> x . t) u \\<mapsto> t' \\<Longrightarrow>\n       t' \\<in> RED \\<sigma>", "{"], ["proof (state)\nthis:\n  App (\\<Lambda> x . t) u \\<mapsto> r\n\ngoal (1 subgoal):\n 1. \\<And>t'.\n       App (\\<Lambda> x . t) u \\<mapsto> t' \\<Longrightarrow>\n       t' \\<in> RED \\<sigma>", "assume \"\\<exists>t'. t \\<mapsto> t' \\<and> r = App (\\<Lambda> x . t') u\""], ["proof (state)\nthis:\n  \\<exists>t'. t \\<mapsto> t' \\<and> r = App (\\<Lambda> x . t') u\n\ngoal (1 subgoal):\n 1. \\<And>t'.\n       App (\\<Lambda> x . t) u \\<mapsto> t' \\<Longrightarrow>\n       t' \\<in> RED \\<sigma>", "then"], ["proof (chain)\npicking this:\n  \\<exists>t'. t \\<mapsto> t' \\<and> r = App (\\<Lambda> x . t') u", "obtain t' where a1: \"t \\<mapsto> t'\" and a2: \"r = App (\\<Lambda> x .t') u\""], ["proof (prove)\nusing this:\n  \\<exists>t'. t \\<mapsto> t' \\<and> r = App (\\<Lambda> x . t') u\n\ngoal (1 subgoal):\n 1. (\\<And>t'.\n        \\<lbrakk>t \\<mapsto> t'; r = App (\\<Lambda> x . t') u\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by\nblast"], ["proof (state)\nthis:\n  t \\<mapsto> t'\n  r = App (\\<Lambda> x . t') u\n\ngoal (1 subgoal):\n 1. \\<And>t'.\n       App (\\<Lambda> x . t) u \\<mapsto> t' \\<Longrightarrow>\n       t' \\<in> RED \\<sigma>", "have \"App (\\<Lambda> x .t') u\\<in>RED \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. App (\\<Lambda> x . t') u \\<in> RED \\<sigma>", "using ih1 a1 as1 as2"], ["proof (prove)\nusing this:\n  \\<lbrakk>t \\<mapsto> ?t'; u \\<in> RED \\<tau>;\n   \\<forall>s\\<in>RED \\<tau>. ?t'[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n  \\<Longrightarrow> App (\\<Lambda> x . ?t') u \\<in> RED \\<sigma>\n  t \\<mapsto> t'\n  u \\<in> RED \\<tau>\n  \\<forall>s\\<in>RED \\<tau>. t[x::=s] \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. App (\\<Lambda> x . t') u \\<in> RED \\<sigma>", "apply(auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>t'.\n                \\<lbrakk>t \\<mapsto> t';\n                 \\<forall>s\\<in>RED \\<tau>.\n                    t'[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n                \\<Longrightarrow> App (\\<Lambda> x . t') u\n                                  \\<in> RED \\<sigma>;\n     t \\<mapsto> t'; u \\<in> RED \\<tau>;\n     \\<forall>s\\<in>RED \\<tau>. t[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n    \\<Longrightarrow> App (\\<Lambda> x . t') u \\<in> RED \\<sigma>", "apply(drule_tac x=\"t'\" in meta_spec)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t \\<mapsto> t'; u \\<in> RED \\<tau>;\n     \\<forall>s\\<in>RED \\<tau>. t[x::=s] \\<in> RED \\<sigma>;\n     \\<lbrakk>t \\<mapsto> t';\n      \\<forall>s\\<in>RED \\<tau>. t'[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n     \\<Longrightarrow> App (\\<Lambda> x . t') u \\<in> RED \\<sigma>\\<rbrakk>\n    \\<Longrightarrow> App (\\<Lambda> x . t') u \\<in> RED \\<sigma>", "apply(simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t \\<mapsto> t'; u \\<in> RED \\<tau>;\n     \\<forall>s\\<in>RED \\<tau>. t[x::=s] \\<in> RED \\<sigma>;\n     \\<forall>s\\<in>RED \\<tau>.\n        t'[x::=s] \\<in> RED \\<sigma> \\<Longrightarrow>\n     App (\\<Lambda> x . t') u \\<in> RED \\<sigma>\\<rbrakk>\n    \\<Longrightarrow> App (\\<Lambda> x . t') u \\<in> RED \\<sigma>", "apply(drule meta_mp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>t \\<mapsto> t'; u \\<in> RED \\<tau>;\n     \\<forall>s\\<in>RED \\<tau>. t[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s\\<in>RED \\<tau>.\n                         t'[x::=s] \\<in> RED \\<sigma>\n 2. \\<lbrakk>t \\<mapsto> t'; u \\<in> RED \\<tau>;\n     \\<forall>s\\<in>RED \\<tau>. t[x::=s] \\<in> RED \\<sigma>;\n     App (\\<Lambda> x . t') u \\<in> RED \\<sigma>\\<rbrakk>\n    \\<Longrightarrow> App (\\<Lambda> x . t') u \\<in> RED \\<sigma>", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>t \\<mapsto> t'; u \\<in> RED \\<tau>;\n     \\<forall>s\\<in>RED \\<tau>. t[x::=s] \\<in> RED \\<sigma>;\n     App (\\<Lambda> x . t') u \\<in> RED \\<sigma>\\<rbrakk>\n    \\<Longrightarrow> App (\\<Lambda> x . t') u \\<in> RED \\<sigma>\n 2. \\<lbrakk>t \\<mapsto> t'; u \\<in> RED \\<tau>;\n     \\<forall>s\\<in>RED \\<tau>. t[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s\\<in>RED \\<tau>.\n                         t'[x::=s] \\<in> RED \\<sigma>", "apply(auto)[1]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>t \\<mapsto> t'; u \\<in> RED \\<tau>;\n     \\<forall>s\\<in>RED \\<tau>. t[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n    \\<Longrightarrow> \\<forall>s\\<in>RED \\<tau>.\n                         t'[x::=s] \\<in> RED \\<sigma>", "apply(rule ballI)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>t \\<mapsto> t'; u \\<in> RED \\<tau>;\n        \\<forall>s\\<in>RED \\<tau>. t[x::=s] \\<in> RED \\<sigma>;\n        s \\<in> RED \\<tau>\\<rbrakk>\n       \\<Longrightarrow> t'[x::=s] \\<in> RED \\<sigma>", "apply(drule_tac x=\"s\" in bspec)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>t \\<mapsto> t'; u \\<in> RED \\<tau>;\n        s \\<in> RED \\<tau>\\<rbrakk>\n       \\<Longrightarrow> s \\<in> RED \\<tau>\n 2. \\<And>s.\n       \\<lbrakk>t \\<mapsto> t'; u \\<in> RED \\<tau>; s \\<in> RED \\<tau>;\n        t[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> t'[x::=s] \\<in> RED \\<sigma>", "apply(simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>t \\<mapsto> t'; u \\<in> RED \\<tau>; s \\<in> RED \\<tau>;\n        t[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> t'[x::=s] \\<in> RED \\<sigma>", "apply(subgoal_tac \"CR2 \\<sigma>\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>t \\<mapsto> t'; u \\<in> RED \\<tau>; s \\<in> RED \\<tau>;\n        t[x::=s] \\<in> RED \\<sigma>; CR2 \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> t'[x::=s] \\<in> RED \\<sigma>\n 2. \\<And>s.\n       \\<lbrakk>t \\<mapsto> t'; u \\<in> RED \\<tau>; s \\<in> RED \\<tau>;\n        t[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> CR2 \\<sigma>", "(*A*)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>t \\<mapsto> t'; u \\<in> RED \\<tau>; s \\<in> RED \\<tau>;\n        t[x::=s] \\<in> RED \\<sigma>; CR2 \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> t'[x::=s] \\<in> RED \\<sigma>\n 2. \\<And>s.\n       \\<lbrakk>t \\<mapsto> t'; u \\<in> RED \\<tau>; s \\<in> RED \\<tau>;\n        t[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> CR2 \\<sigma>", "apply(unfold CR2_def)[1]"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>t \\<mapsto> t'; u \\<in> RED \\<tau>; s \\<in> RED \\<tau>;\n        t[x::=s] \\<in> RED \\<sigma>;\n        \\<forall>t t'.\n           t \\<in> RED \\<sigma> \\<and> t \\<mapsto> t' \\<longrightarrow>\n           t' \\<in> RED \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> t'[x::=s] \\<in> RED \\<sigma>\n 2. \\<And>s.\n       \\<lbrakk>t \\<mapsto> t'; u \\<in> RED \\<tau>; s \\<in> RED \\<tau>;\n        t[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> CR2 \\<sigma>", "apply(drule_tac x=\"t[x::=s]\" in spec)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>t \\<mapsto> t'; u \\<in> RED \\<tau>; s \\<in> RED \\<tau>;\n        t[x::=s] \\<in> RED \\<sigma>;\n        \\<forall>t'.\n           t[x::=s] \\<in> RED \\<sigma> \\<and>\n           t[x::=s] \\<mapsto> t' \\<longrightarrow>\n           t' \\<in> RED \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> t'[x::=s] \\<in> RED \\<sigma>\n 2. \\<And>s.\n       \\<lbrakk>t \\<mapsto> t'; u \\<in> RED \\<tau>; s \\<in> RED \\<tau>;\n        t[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> CR2 \\<sigma>", "apply(drule_tac x=\"t'[x::=s]\" in spec)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s.\n       \\<lbrakk>t \\<mapsto> t'; u \\<in> RED \\<tau>; s \\<in> RED \\<tau>;\n        t[x::=s] \\<in> RED \\<sigma>;\n        t[x::=s] \\<in> RED \\<sigma> \\<and>\n        t[x::=s] \\<mapsto> t'[x::=s] \\<longrightarrow>\n        t'[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> t'[x::=s] \\<in> RED \\<sigma>\n 2. \\<And>s.\n       \\<lbrakk>t \\<mapsto> t'; u \\<in> RED \\<tau>; s \\<in> RED \\<tau>;\n        t[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> CR2 \\<sigma>", "apply(simp add: reduction_subst)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>t \\<mapsto> t'; u \\<in> RED \\<tau>; s \\<in> RED \\<tau>;\n        t[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> CR2 \\<sigma>", "(*A*)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s.\n       \\<lbrakk>t \\<mapsto> t'; u \\<in> RED \\<tau>; s \\<in> RED \\<tau>;\n        t[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> CR2 \\<sigma>", "apply(simp add: RED_props)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  App (\\<Lambda> x . t') u \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>t'.\n       App (\\<Lambda> x . t) u \\<mapsto> t' \\<Longrightarrow>\n       t' \\<in> RED \\<sigma>", "then"], ["proof (chain)\npicking this:\n  App (\\<Lambda> x . t') u \\<in> RED \\<sigma>", "have \"r\\<in>RED \\<sigma>\""], ["proof (prove)\nusing this:\n  App (\\<Lambda> x . t') u \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. r \\<in> RED \\<sigma>", "using a2"], ["proof (prove)\nusing this:\n  App (\\<Lambda> x . t') u \\<in> RED \\<sigma>\n  r = App (\\<Lambda> x . t') u\n\ngoal (1 subgoal):\n 1. r \\<in> RED \\<sigma>", "by simp"], ["proof (state)\nthis:\n  r \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>t'.\n       App (\\<Lambda> x . t) u \\<mapsto> t' \\<Longrightarrow>\n       t' \\<in> RED \\<sigma>", "}"], ["proof (state)\nthis:\n  \\<exists>t'.\n     t \\<mapsto> t' \\<and> r = App (\\<Lambda> x . t') u \\<Longrightarrow>\n  r \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>t'.\n       App (\\<Lambda> x . t) u \\<mapsto> t' \\<Longrightarrow>\n       t' \\<in> RED \\<sigma>", "note rt = this"], ["proof (state)\nthis:\n  \\<exists>t'.\n     t \\<mapsto> t' \\<and> r = App (\\<Lambda> x . t') u \\<Longrightarrow>\n  r \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>t'.\n       App (\\<Lambda> x . t) u \\<mapsto> t' \\<Longrightarrow>\n       t' \\<in> RED \\<sigma>", "moreover"], ["proof (state)\nthis:\n  \\<exists>t'.\n     t \\<mapsto> t' \\<and> r = App (\\<Lambda> x . t') u \\<Longrightarrow>\n  r \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>t'.\n       App (\\<Lambda> x . t) u \\<mapsto> t' \\<Longrightarrow>\n       t' \\<in> RED \\<sigma>", "{"], ["proof (state)\nthis:\n  \\<exists>t'.\n     t \\<mapsto> t' \\<and> r = App (\\<Lambda> x . t') u \\<Longrightarrow>\n  r \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>t'.\n       App (\\<Lambda> x . t) u \\<mapsto> t' \\<Longrightarrow>\n       t' \\<in> RED \\<sigma>", "assume \"\\<exists>u'. u \\<mapsto> u' \\<and> r = App (\\<Lambda> x . t) u'\""], ["proof (state)\nthis:\n  \\<exists>u'. u \\<mapsto> u' \\<and> r = App (\\<Lambda> x . t) u'\n\ngoal (1 subgoal):\n 1. \\<And>t'.\n       App (\\<Lambda> x . t) u \\<mapsto> t' \\<Longrightarrow>\n       t' \\<in> RED \\<sigma>", "then"], ["proof (chain)\npicking this:\n  \\<exists>u'. u \\<mapsto> u' \\<and> r = App (\\<Lambda> x . t) u'", "obtain u' where b1: \"u \\<mapsto> u'\" and b2: \"r = App (\\<Lambda> x .t) u'\""], ["proof (prove)\nusing this:\n  \\<exists>u'. u \\<mapsto> u' \\<and> r = App (\\<Lambda> x . t) u'\n\ngoal (1 subgoal):\n 1. (\\<And>u'.\n        \\<lbrakk>u \\<mapsto> u'; r = App (\\<Lambda> x . t) u'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by\nblast"], ["proof (state)\nthis:\n  u \\<mapsto> u'\n  r = App (\\<Lambda> x . t) u'\n\ngoal (1 subgoal):\n 1. \\<And>t'.\n       App (\\<Lambda> x . t) u \\<mapsto> t' \\<Longrightarrow>\n       t' \\<in> RED \\<sigma>", "have \"App (\\<Lambda> x .t) u'\\<in>RED \\<sigma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. App (\\<Lambda> x . t) u' \\<in> RED \\<sigma>", "using ih2 b1 as1 as2"], ["proof (prove)\nusing this:\n  \\<lbrakk>u \\<mapsto> ?u'; ?u' \\<in> RED \\<tau>;\n   \\<forall>s\\<in>RED \\<tau>. t[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n  \\<Longrightarrow> App (\\<Lambda> x . t) ?u' \\<in> RED \\<sigma>\n  u \\<mapsto> u'\n  u \\<in> RED \\<tau>\n  \\<forall>s\\<in>RED \\<tau>. t[x::=s] \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. App (\\<Lambda> x . t) u' \\<in> RED \\<sigma>", "apply(auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>\\<And>u'.\n                \\<lbrakk>u \\<mapsto> u'; u' \\<in> RED \\<tau>\\<rbrakk>\n                \\<Longrightarrow> App (\\<Lambda> x . t) u'\n                                  \\<in> RED \\<sigma>;\n     u \\<mapsto> u'; u \\<in> RED \\<tau>;\n     \\<forall>s\\<in>RED \\<tau>. t[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n    \\<Longrightarrow> App (\\<Lambda> x . t) u' \\<in> RED \\<sigma>", "apply(drule_tac x=\"u'\" in meta_spec)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<mapsto> u'; u \\<in> RED \\<tau>;\n     \\<forall>s\\<in>RED \\<tau>. t[x::=s] \\<in> RED \\<sigma>;\n     \\<lbrakk>u \\<mapsto> u'; u' \\<in> RED \\<tau>\\<rbrakk>\n     \\<Longrightarrow> App (\\<Lambda> x . t) u' \\<in> RED \\<sigma>\\<rbrakk>\n    \\<Longrightarrow> App (\\<Lambda> x . t) u' \\<in> RED \\<sigma>", "apply(simp)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<mapsto> u'; u \\<in> RED \\<tau>;\n     \\<forall>s\\<in>RED \\<tau>. t[x::=s] \\<in> RED \\<sigma>;\n     u' \\<in> RED \\<tau> \\<Longrightarrow>\n     App (\\<Lambda> x . t) u' \\<in> RED \\<sigma>\\<rbrakk>\n    \\<Longrightarrow> App (\\<Lambda> x . t) u' \\<in> RED \\<sigma>", "apply(drule meta_mp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>u \\<mapsto> u'; u \\<in> RED \\<tau>;\n     \\<forall>s\\<in>RED \\<tau>. t[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n    \\<Longrightarrow> u' \\<in> RED \\<tau>\n 2. \\<lbrakk>u \\<mapsto> u'; u \\<in> RED \\<tau>;\n     \\<forall>s\\<in>RED \\<tau>. t[x::=s] \\<in> RED \\<sigma>;\n     App (\\<Lambda> x . t) u' \\<in> RED \\<sigma>\\<rbrakk>\n    \\<Longrightarrow> App (\\<Lambda> x . t) u' \\<in> RED \\<sigma>", "apply(subgoal_tac \"CR2 \\<tau>\")"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>u \\<mapsto> u'; u \\<in> RED \\<tau>;\n     \\<forall>s\\<in>RED \\<tau>. t[x::=s] \\<in> RED \\<sigma>;\n     CR2 \\<tau>\\<rbrakk>\n    \\<Longrightarrow> u' \\<in> RED \\<tau>\n 2. \\<lbrakk>u \\<mapsto> u'; u \\<in> RED \\<tau>;\n     \\<forall>s\\<in>RED \\<tau>. t[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n    \\<Longrightarrow> CR2 \\<tau>\n 3. \\<lbrakk>u \\<mapsto> u'; u \\<in> RED \\<tau>;\n     \\<forall>s\\<in>RED \\<tau>. t[x::=s] \\<in> RED \\<sigma>;\n     App (\\<Lambda> x . t) u' \\<in> RED \\<sigma>\\<rbrakk>\n    \\<Longrightarrow> App (\\<Lambda> x . t) u' \\<in> RED \\<sigma>", "apply(unfold CR2_def)[1]"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>u \\<mapsto> u'; u \\<in> RED \\<tau>;\n     \\<forall>s\\<in>RED \\<tau>. t[x::=s] \\<in> RED \\<sigma>;\n     \\<forall>t t'.\n        t \\<in> RED \\<tau> \\<and> t \\<mapsto> t' \\<longrightarrow>\n        t' \\<in> RED \\<tau>\\<rbrakk>\n    \\<Longrightarrow> u' \\<in> RED \\<tau>\n 2. \\<lbrakk>u \\<mapsto> u'; u \\<in> RED \\<tau>;\n     \\<forall>s\\<in>RED \\<tau>. t[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n    \\<Longrightarrow> CR2 \\<tau>\n 3. \\<lbrakk>u \\<mapsto> u'; u \\<in> RED \\<tau>;\n     \\<forall>s\\<in>RED \\<tau>. t[x::=s] \\<in> RED \\<sigma>;\n     App (\\<Lambda> x . t) u' \\<in> RED \\<sigma>\\<rbrakk>\n    \\<Longrightarrow> App (\\<Lambda> x . t) u' \\<in> RED \\<sigma>", "apply(drule_tac x=\"u\" in spec)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>u \\<mapsto> u'; u \\<in> RED \\<tau>;\n     \\<forall>s\\<in>RED \\<tau>. t[x::=s] \\<in> RED \\<sigma>;\n     \\<forall>t'.\n        u \\<in> RED \\<tau> \\<and> u \\<mapsto> t' \\<longrightarrow>\n        t' \\<in> RED \\<tau>\\<rbrakk>\n    \\<Longrightarrow> u' \\<in> RED \\<tau>\n 2. \\<lbrakk>u \\<mapsto> u'; u \\<in> RED \\<tau>;\n     \\<forall>s\\<in>RED \\<tau>. t[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n    \\<Longrightarrow> CR2 \\<tau>\n 3. \\<lbrakk>u \\<mapsto> u'; u \\<in> RED \\<tau>;\n     \\<forall>s\\<in>RED \\<tau>. t[x::=s] \\<in> RED \\<sigma>;\n     App (\\<Lambda> x . t) u' \\<in> RED \\<sigma>\\<rbrakk>\n    \\<Longrightarrow> App (\\<Lambda> x . t) u' \\<in> RED \\<sigma>", "apply(drule_tac x=\"u'\" in spec)"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<lbrakk>u \\<mapsto> u'; u \\<in> RED \\<tau>;\n     \\<forall>s\\<in>RED \\<tau>. t[x::=s] \\<in> RED \\<sigma>;\n     u \\<in> RED \\<tau> \\<and> u \\<mapsto> u' \\<longrightarrow>\n     u' \\<in> RED \\<tau>\\<rbrakk>\n    \\<Longrightarrow> u' \\<in> RED \\<tau>\n 2. \\<lbrakk>u \\<mapsto> u'; u \\<in> RED \\<tau>;\n     \\<forall>s\\<in>RED \\<tau>. t[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n    \\<Longrightarrow> CR2 \\<tau>\n 3. \\<lbrakk>u \\<mapsto> u'; u \\<in> RED \\<tau>;\n     \\<forall>s\\<in>RED \\<tau>. t[x::=s] \\<in> RED \\<sigma>;\n     App (\\<Lambda> x . t) u' \\<in> RED \\<sigma>\\<rbrakk>\n    \\<Longrightarrow> App (\\<Lambda> x . t) u' \\<in> RED \\<sigma>", "apply(simp)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>u \\<mapsto> u'; u \\<in> RED \\<tau>;\n     \\<forall>s\\<in>RED \\<tau>. t[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n    \\<Longrightarrow> CR2 \\<tau>\n 2. \\<lbrakk>u \\<mapsto> u'; u \\<in> RED \\<tau>;\n     \\<forall>s\\<in>RED \\<tau>. t[x::=s] \\<in> RED \\<sigma>;\n     App (\\<Lambda> x . t) u' \\<in> RED \\<sigma>\\<rbrakk>\n    \\<Longrightarrow> App (\\<Lambda> x . t) u' \\<in> RED \\<sigma>", "apply(simp add: RED_props)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<mapsto> u'; u \\<in> RED \\<tau>;\n     \\<forall>s\\<in>RED \\<tau>. t[x::=s] \\<in> RED \\<sigma>;\n     App (\\<Lambda> x . t) u' \\<in> RED \\<sigma>\\<rbrakk>\n    \\<Longrightarrow> App (\\<Lambda> x . t) u' \\<in> RED \\<sigma>", "apply(simp)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  App (\\<Lambda> x . t) u' \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>t'.\n       App (\\<Lambda> x . t) u \\<mapsto> t' \\<Longrightarrow>\n       t' \\<in> RED \\<sigma>", "then"], ["proof (chain)\npicking this:\n  App (\\<Lambda> x . t) u' \\<in> RED \\<sigma>", "have \"r\\<in>RED \\<sigma>\""], ["proof (prove)\nusing this:\n  App (\\<Lambda> x . t) u' \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. r \\<in> RED \\<sigma>", "using b2"], ["proof (prove)\nusing this:\n  App (\\<Lambda> x . t) u' \\<in> RED \\<sigma>\n  r = App (\\<Lambda> x . t) u'\n\ngoal (1 subgoal):\n 1. r \\<in> RED \\<sigma>", "by simp"], ["proof (state)\nthis:\n  r \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>t'.\n       App (\\<Lambda> x . t) u \\<mapsto> t' \\<Longrightarrow>\n       t' \\<in> RED \\<sigma>", "}"], ["proof (state)\nthis:\n  \\<exists>u'.\n     u \\<mapsto> u' \\<and> r = App (\\<Lambda> x . t) u' \\<Longrightarrow>\n  r \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>t'.\n       App (\\<Lambda> x . t) u \\<mapsto> t' \\<Longrightarrow>\n       t' \\<in> RED \\<sigma>", "note ru= this"], ["proof (state)\nthis:\n  \\<exists>u'.\n     u \\<mapsto> u' \\<and> r = App (\\<Lambda> x . t) u' \\<Longrightarrow>\n  r \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>t'.\n       App (\\<Lambda> x . t) u \\<mapsto> t' \\<Longrightarrow>\n       t' \\<in> RED \\<sigma>", "moreover"], ["proof (state)\nthis:\n  \\<exists>u'.\n     u \\<mapsto> u' \\<and> r = App (\\<Lambda> x . t) u' \\<Longrightarrow>\n  r \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>t'.\n       App (\\<Lambda> x . t) u \\<mapsto> t' \\<Longrightarrow>\n       t' \\<in> RED \\<sigma>", "{"], ["proof (state)\nthis:\n  \\<exists>u'.\n     u \\<mapsto> u' \\<and> r = App (\\<Lambda> x . t) u' \\<Longrightarrow>\n  r \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>t'.\n       App (\\<Lambda> x . t) u \\<mapsto> t' \\<Longrightarrow>\n       t' \\<in> RED \\<sigma>", "assume \"r = t[x::=u]\""], ["proof (state)\nthis:\n  r = t[x::=u]\n\ngoal (1 subgoal):\n 1. \\<And>t'.\n       App (\\<Lambda> x . t) u \\<mapsto> t' \\<Longrightarrow>\n       t' \\<in> RED \\<sigma>", "then"], ["proof (chain)\npicking this:\n  r = t[x::=u]", "have \"r\\<in>RED \\<sigma>\""], ["proof (prove)\nusing this:\n  r = t[x::=u]\n\ngoal (1 subgoal):\n 1. r \\<in> RED \\<sigma>", "using as1 as2"], ["proof (prove)\nusing this:\n  r = t[x::=u]\n  u \\<in> RED \\<tau>\n  \\<forall>s\\<in>RED \\<tau>. t[x::=s] \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. r \\<in> RED \\<sigma>", "by auto"], ["proof (state)\nthis:\n  r \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>t'.\n       App (\\<Lambda> x . t) u \\<mapsto> t' \\<Longrightarrow>\n       t' \\<in> RED \\<sigma>", "}"], ["proof (state)\nthis:\n  r = t[x::=u] \\<Longrightarrow> r \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>t'.\n       App (\\<Lambda> x . t) u \\<mapsto> t' \\<Longrightarrow>\n       t' \\<in> RED \\<sigma>", "note r = this"], ["proof (state)\nthis:\n  r = t[x::=u] \\<Longrightarrow> r \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>t'.\n       App (\\<Lambda> x . t) u \\<mapsto> t' \\<Longrightarrow>\n       t' \\<in> RED \\<sigma>", "ultimately"], ["proof (chain)\npicking this:\n  App (\\<Lambda> x . t) u \\<mapsto> r\n  \\<exists>t'.\n     t \\<mapsto> t' \\<and> r = App (\\<Lambda> x . t') u \\<Longrightarrow>\n  r \\<in> RED \\<sigma>\n  \\<exists>u'.\n     u \\<mapsto> u' \\<and> r = App (\\<Lambda> x . t) u' \\<Longrightarrow>\n  r \\<in> RED \\<sigma>\n  r = t[x::=u] \\<Longrightarrow> r \\<in> RED \\<sigma>", "show \"r \\<in> RED \\<sigma>\""], ["proof (prove)\nusing this:\n  App (\\<Lambda> x . t) u \\<mapsto> r\n  \\<exists>t'.\n     t \\<mapsto> t' \\<and> r = App (\\<Lambda> x . t') u \\<Longrightarrow>\n  r \\<in> RED \\<sigma>\n  \\<exists>u'.\n     u \\<mapsto> u' \\<and> r = App (\\<Lambda> x . t) u' \\<Longrightarrow>\n  r \\<in> RED \\<sigma>\n  r = t[x::=u] \\<Longrightarrow> r \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. r \\<in> RED \\<sigma>", "(* one wants to use the strong elimination principle; for this one \n             has to know that x\\<sharp>u *)"], ["proof (prove)\nusing this:\n  App (\\<Lambda> x . t) u \\<mapsto> r\n  \\<exists>t'.\n     t \\<mapsto> t' \\<and> r = App (\\<Lambda> x . t') u \\<Longrightarrow>\n  r \\<in> RED \\<sigma>\n  \\<exists>u'.\n     u \\<mapsto> u' \\<and> r = App (\\<Lambda> x . t) u' \\<Longrightarrow>\n  r \\<in> RED \\<sigma>\n  r = t[x::=u] \\<Longrightarrow> r \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. r \\<in> RED \\<sigma>", "apply(cases)"], ["proof (prove)\ngoal (11 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>\\<exists>t'.\n                   t \\<mapsto> t' \\<and>\n                   r = App (\\<Lambda> x . t') u \\<Longrightarrow>\n                r \\<in> RED \\<sigma>;\n        \\<exists>u'.\n           u \\<mapsto> u' \\<and>\n           r = App (\\<Lambda> x . t) u' \\<Longrightarrow>\n        r \\<in> RED \\<sigma>;\n        r = t[x::=u] \\<Longrightarrow> r \\<in> RED \\<sigma>;\n        App (\\<Lambda> x . t) u = App s t; r = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> r \\<in> RED \\<sigma>\n 2. \\<And>t t' s.\n       \\<lbrakk>\\<exists>t'.\n                   t \\<mapsto> t' \\<and>\n                   r = App (\\<Lambda> x . t') u \\<Longrightarrow>\n                r \\<in> RED \\<sigma>;\n        \\<exists>u'.\n           u \\<mapsto> u' \\<and>\n           r = App (\\<Lambda> x . t) u' \\<Longrightarrow>\n        r \\<in> RED \\<sigma>;\n        r = t[x::=u] \\<Longrightarrow> r \\<in> RED \\<sigma>;\n        App (\\<Lambda> x . t) u = App s t; r = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> r \\<in> RED \\<sigma>\n 3. \\<And>xa s t.\n       \\<lbrakk>\\<exists>t'.\n                   t \\<mapsto> t' \\<and>\n                   r = App (\\<Lambda> x . t') u \\<Longrightarrow>\n                r \\<in> RED \\<sigma>;\n        \\<exists>u'.\n           u \\<mapsto> u' \\<and>\n           r = App (\\<Lambda> x . t) u' \\<Longrightarrow>\n        r \\<in> RED \\<sigma>;\n        r = t[x::=u] \\<Longrightarrow> r \\<in> RED \\<sigma>;\n        App (\\<Lambda> x . t) u = App (\\<Lambda> xa . t) s; r = t[xa::=s];\n        xa \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> r \\<in> RED \\<sigma>\n 4. \\<And>t t' xa.\n       \\<lbrakk>\\<exists>t'.\n                   t \\<mapsto> t' \\<and>\n                   r = App (\\<Lambda> x . t') u \\<Longrightarrow>\n                r \\<in> RED \\<sigma>;\n        \\<exists>u'.\n           u \\<mapsto> u' \\<and>\n           r = App (\\<Lambda> x . t) u' \\<Longrightarrow>\n        r \\<in> RED \\<sigma>;\n        r = t[x::=u] \\<Longrightarrow> r \\<in> RED \\<sigma>;\n        App (\\<Lambda> x . t) u = \\<Lambda> xa . t; r = \\<Lambda> xa . t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> r \\<in> RED \\<sigma>\n 5. \\<And>xa.\n       \\<lbrakk>\\<exists>t'.\n                   t \\<mapsto> t' \\<and>\n                   r = App (\\<Lambda> x . t') u \\<Longrightarrow>\n                r \\<in> RED \\<sigma>;\n        \\<exists>u'.\n           u \\<mapsto> u' \\<and>\n           r = App (\\<Lambda> x . t) u' \\<Longrightarrow>\n        r \\<in> RED \\<sigma>;\n        r = t[x::=u] \\<Longrightarrow> r \\<in> RED \\<sigma>;\n        App (\\<Lambda> x . t) u = \\<Lambda> xa . App r (Var xa);\n        xa \\<sharp> r\\<rbrakk>\n       \\<Longrightarrow> r \\<in> RED \\<sigma>\n 6. \\<And>xa s s' t.\n       \\<lbrakk>\\<exists>t'.\n                   t \\<mapsto> t' \\<and>\n                   r = App (\\<Lambda> x . t') u \\<Longrightarrow>\n                r \\<in> RED \\<sigma>;\n        \\<exists>u'.\n           u \\<mapsto> u' \\<and>\n           r = App (\\<Lambda> x . t) u' \\<Longrightarrow>\n        r \\<in> RED \\<sigma>;\n        r = t[x::=u] \\<Longrightarrow> r \\<in> RED \\<sigma>;\n        App (\\<Lambda> x . t) u = s to xa in t; r = s' to xa in t;\n        xa \\<sharp> (s, s'); s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> r \\<in> RED \\<sigma>\n 7. \\<And>xa s t t'.\n       \\<lbrakk>\\<exists>t'.\n                   t \\<mapsto> t' \\<and>\n                   r = App (\\<Lambda> x . t') u \\<Longrightarrow>\n                r \\<in> RED \\<sigma>;\n        \\<exists>u'.\n           u \\<mapsto> u' \\<and>\n           r = App (\\<Lambda> x . t) u' \\<Longrightarrow>\n        r \\<in> RED \\<sigma>;\n        r = t[x::=u] \\<Longrightarrow> r \\<in> RED \\<sigma>;\n        App (\\<Lambda> x . t) u = s to xa in t; r = s to xa in t';\n        xa \\<sharp> s; t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> r \\<in> RED \\<sigma>\n 8. \\<And>xa s t.\n       \\<lbrakk>\\<exists>t'.\n                   t \\<mapsto> t' \\<and>\n                   r = App (\\<Lambda> x . t') u \\<Longrightarrow>\n                r \\<in> RED \\<sigma>;\n        \\<exists>u'.\n           u \\<mapsto> u' \\<and>\n           r = App (\\<Lambda> x . t) u' \\<Longrightarrow>\n        r \\<in> RED \\<sigma>;\n        r = t[x::=u] \\<Longrightarrow> r \\<in> RED \\<sigma>;\n        App (\\<Lambda> x . t) u = [s] to xa in t; r = t[xa::=s];\n        xa \\<sharp> s\\<rbrakk>\n       \\<Longrightarrow> r \\<in> RED \\<sigma>\n 9. \\<And>xa.\n       \\<lbrakk>\\<exists>t'.\n                   t \\<mapsto> t' \\<and>\n                   r = App (\\<Lambda> x . t') u \\<Longrightarrow>\n                r \\<in> RED \\<sigma>;\n        \\<exists>u'.\n           u \\<mapsto> u' \\<and>\n           r = App (\\<Lambda> x . t) u' \\<Longrightarrow>\n        r \\<in> RED \\<sigma>;\n        r = t[x::=u] \\<Longrightarrow> r \\<in> RED \\<sigma>;\n        App (\\<Lambda> x . t) u = r to xa in [Var xa];\n        xa \\<sharp> r\\<rbrakk>\n       \\<Longrightarrow> r \\<in> RED \\<sigma>\n 10. \\<And>xa y s u t.\n        \\<lbrakk>\\<exists>t'.\n                    t \\<mapsto> t' \\<and>\n                    r = App (\\<Lambda> x . t') u \\<Longrightarrow>\n                 r \\<in> RED \\<sigma>;\n         \\<exists>u'.\n            u \\<mapsto> u' \\<and>\n            r = App (\\<Lambda> x . t) u' \\<Longrightarrow>\n         r \\<in> RED \\<sigma>;\n         r = t[x::=u] \\<Longrightarrow> r \\<in> RED \\<sigma>;\n         App (\\<Lambda> x . t) u = (s to xa in t) to y in u;\n         r = s to xa in t to y in u; xa \\<sharp> (y, s, u);\n         y \\<sharp> (s, t)\\<rbrakk>\n        \\<Longrightarrow> r \\<in> RED \\<sigma>\nA total of 11 subgoals...", "apply(auto)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s'.\n       \\<lbrakk>\\<exists>t'.\n                   t \\<mapsto> t' \\<and>\n                   s' = \\<Lambda> x . t' \\<Longrightarrow>\n                App s' u \\<in> RED \\<sigma>;\n        u \\<mapsto> u \\<and> s' = \\<Lambda> x . t \\<Longrightarrow>\n        App (\\<Lambda> x . t) u \\<in> RED \\<sigma>;\n        App s' u = t[x::=u] \\<Longrightarrow> t[x::=u] \\<in> RED \\<sigma>;\n        r = App s' u; \\<Lambda> x . t \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> App s' u \\<in> RED \\<sigma>\n 2. \\<And>xa t.\n       \\<lbrakk>\\<exists>t'.\n                   t \\<mapsto> t' \\<and>\n                   t[xa::=u] = App (\\<Lambda> x . t') u \\<Longrightarrow>\n                t[xa::=u] \\<in> RED \\<sigma>;\n        \\<exists>u'.\n           u \\<mapsto> u' \\<and>\n           t[xa::=u] = App (\\<Lambda> x . t) u' \\<Longrightarrow>\n        t[xa::=u] \\<in> RED \\<sigma>;\n        t[xa::=u] = t[x::=u] \\<Longrightarrow> t[x::=u] \\<in> RED \\<sigma>;\n        [x].t = [xa].t; r = t[xa::=u]; xa \\<sharp> u\\<rbrakk>\n       \\<Longrightarrow> t[xa::=u] \\<in> RED \\<sigma>", "apply(drule red_Lam)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s'.\n       \\<lbrakk>\\<exists>t'.\n                   t \\<mapsto> t' \\<and>\n                   s' = \\<Lambda> x . t' \\<Longrightarrow>\n                App s' u \\<in> RED \\<sigma>;\n        u \\<mapsto> u \\<and> s' = \\<Lambda> x . t \\<Longrightarrow>\n        App (\\<Lambda> x . t) u \\<in> RED \\<sigma>;\n        App s' u = t[x::=u] \\<Longrightarrow> t[x::=u] \\<in> RED \\<sigma>;\n        r = App s' u;\n        (\\<exists>t'. s' = \\<Lambda> x . t' \\<and> t \\<mapsto> t') \\<or>\n        t = App s' (Var x) \\<and> x \\<sharp> s'\\<rbrakk>\n       \\<Longrightarrow> App s' u \\<in> RED \\<sigma>\n 2. \\<And>xa t.\n       \\<lbrakk>\\<exists>t'.\n                   t \\<mapsto> t' \\<and>\n                   t[xa::=u] = App (\\<Lambda> x . t') u \\<Longrightarrow>\n                t[xa::=u] \\<in> RED \\<sigma>;\n        \\<exists>u'.\n           u \\<mapsto> u' \\<and>\n           t[xa::=u] = App (\\<Lambda> x . t) u' \\<Longrightarrow>\n        t[xa::=u] \\<in> RED \\<sigma>;\n        t[xa::=u] = t[x::=u] \\<Longrightarrow> t[x::=u] \\<in> RED \\<sigma>;\n        [x].t = [xa].t; r = t[xa::=u]; xa \\<sharp> u\\<rbrakk>\n       \\<Longrightarrow> t[xa::=u] \\<in> RED \\<sigma>", "apply(drule disjE)"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s'.\n       \\<lbrakk>\\<exists>t'.\n                   t \\<mapsto> t' \\<and>\n                   s' = \\<Lambda> x . t' \\<Longrightarrow>\n                App s' u \\<in> RED \\<sigma>;\n        u \\<mapsto> u \\<and> s' = \\<Lambda> x . t \\<Longrightarrow>\n        App (\\<Lambda> x . t) u \\<in> RED \\<sigma>;\n        App s' u = t[x::=u] \\<Longrightarrow> t[x::=u] \\<in> RED \\<sigma>;\n        r = App s' u;\n        \\<exists>t'. s' = \\<Lambda> x . t' \\<and> t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> ?R7 s'\n 2. \\<And>s'.\n       \\<lbrakk>\\<exists>t'.\n                   t \\<mapsto> t' \\<and>\n                   s' = \\<Lambda> x . t' \\<Longrightarrow>\n                App s' u \\<in> RED \\<sigma>;\n        u \\<mapsto> u \\<and> s' = \\<Lambda> x . t \\<Longrightarrow>\n        App (\\<Lambda> x . t) u \\<in> RED \\<sigma>;\n        App s' u = t[x::=u] \\<Longrightarrow> t[x::=u] \\<in> RED \\<sigma>;\n        r = App s' u; t = App s' (Var x) \\<and> x \\<sharp> s'\\<rbrakk>\n       \\<Longrightarrow> ?R7 s'\n 3. \\<And>s'.\n       \\<lbrakk>\\<exists>t'.\n                   t \\<mapsto> t' \\<and>\n                   s' = \\<Lambda> x . t' \\<Longrightarrow>\n                App s' u \\<in> RED \\<sigma>;\n        u \\<mapsto> u \\<and> s' = \\<Lambda> x . t \\<Longrightarrow>\n        App (\\<Lambda> x . t) u \\<in> RED \\<sigma>;\n        App s' u = t[x::=u] \\<Longrightarrow> t[x::=u] \\<in> RED \\<sigma>;\n        r = App s' u; ?R7 s'\\<rbrakk>\n       \\<Longrightarrow> App s' u \\<in> RED \\<sigma>\n 4. \\<And>xa t.\n       \\<lbrakk>\\<exists>t'.\n                   t \\<mapsto> t' \\<and>\n                   t[xa::=u] = App (\\<Lambda> x . t') u \\<Longrightarrow>\n                t[xa::=u] \\<in> RED \\<sigma>;\n        \\<exists>u'.\n           u \\<mapsto> u' \\<and>\n           t[xa::=u] = App (\\<Lambda> x . t) u' \\<Longrightarrow>\n        t[xa::=u] \\<in> RED \\<sigma>;\n        t[xa::=u] = t[x::=u] \\<Longrightarrow> t[x::=u] \\<in> RED \\<sigma>;\n        [x].t = [xa].t; r = t[xa::=u]; xa \\<sharp> u\\<rbrakk>\n       \\<Longrightarrow> t[xa::=u] \\<in> RED \\<sigma>", "prefer 3"], ["proof (prove)\ngoal (4 subgoals):\n 1. \\<And>s'.\n       \\<lbrakk>\\<exists>t'.\n                   t \\<mapsto> t' \\<and>\n                   s' = \\<Lambda> x . t' \\<Longrightarrow>\n                App s' u \\<in> RED \\<sigma>;\n        u \\<mapsto> u \\<and> s' = \\<Lambda> x . t \\<Longrightarrow>\n        App (\\<Lambda> x . t) u \\<in> RED \\<sigma>;\n        App s' u = t[x::=u] \\<Longrightarrow> t[x::=u] \\<in> RED \\<sigma>;\n        r = App s' u; ?R7 s'\\<rbrakk>\n       \\<Longrightarrow> App s' u \\<in> RED \\<sigma>\n 2. \\<And>s'.\n       \\<lbrakk>\\<exists>t'.\n                   t \\<mapsto> t' \\<and>\n                   s' = \\<Lambda> x . t' \\<Longrightarrow>\n                App s' u \\<in> RED \\<sigma>;\n        u \\<mapsto> u \\<and> s' = \\<Lambda> x . t \\<Longrightarrow>\n        App (\\<Lambda> x . t) u \\<in> RED \\<sigma>;\n        App s' u = t[x::=u] \\<Longrightarrow> t[x::=u] \\<in> RED \\<sigma>;\n        r = App s' u;\n        \\<exists>t'. s' = \\<Lambda> x . t' \\<and> t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> ?R7 s'\n 3. \\<And>s'.\n       \\<lbrakk>\\<exists>t'.\n                   t \\<mapsto> t' \\<and>\n                   s' = \\<Lambda> x . t' \\<Longrightarrow>\n                App s' u \\<in> RED \\<sigma>;\n        u \\<mapsto> u \\<and> s' = \\<Lambda> x . t \\<Longrightarrow>\n        App (\\<Lambda> x . t) u \\<in> RED \\<sigma>;\n        App s' u = t[x::=u] \\<Longrightarrow> t[x::=u] \\<in> RED \\<sigma>;\n        r = App s' u; t = App s' (Var x) \\<and> x \\<sharp> s'\\<rbrakk>\n       \\<Longrightarrow> ?R7 s'\n 4. \\<And>xa t.\n       \\<lbrakk>\\<exists>t'.\n                   t \\<mapsto> t' \\<and>\n                   t[xa::=u] = App (\\<Lambda> x . t') u \\<Longrightarrow>\n                t[xa::=u] \\<in> RED \\<sigma>;\n        \\<exists>u'.\n           u \\<mapsto> u' \\<and>\n           t[xa::=u] = App (\\<Lambda> x . t) u' \\<Longrightarrow>\n        t[xa::=u] \\<in> RED \\<sigma>;\n        t[xa::=u] = t[x::=u] \\<Longrightarrow> t[x::=u] \\<in> RED \\<sigma>;\n        [x].t = [xa].t; r = t[xa::=u]; xa \\<sharp> u\\<rbrakk>\n       \\<Longrightarrow> t[xa::=u] \\<in> RED \\<sigma>", "apply simp"], ["proof (prove)\ngoal (3 subgoals):\n 1. \\<And>s'.\n       \\<lbrakk>\\<exists>t'.\n                   t \\<mapsto> t' \\<and>\n                   s' = \\<Lambda> x . t' \\<Longrightarrow>\n                App s' u \\<in> RED \\<sigma>;\n        u \\<mapsto> u \\<and> s' = \\<Lambda> x . t \\<Longrightarrow>\n        App (\\<Lambda> x . t) u \\<in> RED \\<sigma>;\n        App s' u = t[x::=u] \\<Longrightarrow> t[x::=u] \\<in> RED \\<sigma>;\n        r = App s' u;\n        \\<exists>t'. s' = \\<Lambda> x . t' \\<and> t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> App s' u \\<in> RED \\<sigma>\n 2. \\<And>s'.\n       \\<lbrakk>\\<exists>t'.\n                   t \\<mapsto> t' \\<and>\n                   s' = \\<Lambda> x . t' \\<Longrightarrow>\n                App s' u \\<in> RED \\<sigma>;\n        u \\<mapsto> u \\<and> s' = \\<Lambda> x . t \\<Longrightarrow>\n        App (\\<Lambda> x . t) u \\<in> RED \\<sigma>;\n        App s' u = t[x::=u] \\<Longrightarrow> t[x::=u] \\<in> RED \\<sigma>;\n        r = App s' u; t = App s' (Var x) \\<and> x \\<sharp> s'\\<rbrakk>\n       \\<Longrightarrow> App s' u \\<in> RED \\<sigma>\n 3. \\<And>xa t.\n       \\<lbrakk>\\<exists>t'.\n                   t \\<mapsto> t' \\<and>\n                   t[xa::=u] = App (\\<Lambda> x . t') u \\<Longrightarrow>\n                t[xa::=u] \\<in> RED \\<sigma>;\n        \\<exists>u'.\n           u \\<mapsto> u' \\<and>\n           t[xa::=u] = App (\\<Lambda> x . t) u' \\<Longrightarrow>\n        t[xa::=u] \\<in> RED \\<sigma>;\n        t[xa::=u] = t[x::=u] \\<Longrightarrow> t[x::=u] \\<in> RED \\<sigma>;\n        [x].t = [xa].t; r = t[xa::=u]; xa \\<sharp> u\\<rbrakk>\n       \\<Longrightarrow> t[xa::=u] \\<in> RED \\<sigma>", "apply(auto)[1]"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s'.\n       \\<lbrakk>\\<exists>t'.\n                   t \\<mapsto> t' \\<and>\n                   s' = \\<Lambda> x . t' \\<Longrightarrow>\n                App s' u \\<in> RED \\<sigma>;\n        u \\<mapsto> u \\<and> s' = \\<Lambda> x . t \\<Longrightarrow>\n        App (\\<Lambda> x . t) u \\<in> RED \\<sigma>;\n        App s' u = t[x::=u] \\<Longrightarrow> t[x::=u] \\<in> RED \\<sigma>;\n        r = App s' u; t = App s' (Var x) \\<and> x \\<sharp> s'\\<rbrakk>\n       \\<Longrightarrow> App s' u \\<in> RED \\<sigma>\n 2. \\<And>xa t.\n       \\<lbrakk>\\<exists>t'.\n                   t \\<mapsto> t' \\<and>\n                   t[xa::=u] = App (\\<Lambda> x . t') u \\<Longrightarrow>\n                t[xa::=u] \\<in> RED \\<sigma>;\n        \\<exists>u'.\n           u \\<mapsto> u' \\<and>\n           t[xa::=u] = App (\\<Lambda> x . t) u' \\<Longrightarrow>\n        t[xa::=u] \\<in> RED \\<sigma>;\n        t[xa::=u] = t[x::=u] \\<Longrightarrow> t[x::=u] \\<in> RED \\<sigma>;\n        [x].t = [xa].t; r = t[xa::=u]; xa \\<sharp> u\\<rbrakk>\n       \\<Longrightarrow> t[xa::=u] \\<in> RED \\<sigma>", "prefer 2"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>xa t.\n       \\<lbrakk>\\<exists>t'.\n                   t \\<mapsto> t' \\<and>\n                   t[xa::=u] = App (\\<Lambda> x . t') u \\<Longrightarrow>\n                t[xa::=u] \\<in> RED \\<sigma>;\n        \\<exists>u'.\n           u \\<mapsto> u' \\<and>\n           t[xa::=u] = App (\\<Lambda> x . t) u' \\<Longrightarrow>\n        t[xa::=u] \\<in> RED \\<sigma>;\n        t[xa::=u] = t[x::=u] \\<Longrightarrow> t[x::=u] \\<in> RED \\<sigma>;\n        [x].t = [xa].t; r = t[xa::=u]; xa \\<sharp> u\\<rbrakk>\n       \\<Longrightarrow> t[xa::=u] \\<in> RED \\<sigma>\n 2. \\<And>s'.\n       \\<lbrakk>\\<exists>t'.\n                   t \\<mapsto> t' \\<and>\n                   s' = \\<Lambda> x . t' \\<Longrightarrow>\n                App s' u \\<in> RED \\<sigma>;\n        u \\<mapsto> u \\<and> s' = \\<Lambda> x . t \\<Longrightarrow>\n        App (\\<Lambda> x . t) u \\<in> RED \\<sigma>;\n        App s' u = t[x::=u] \\<Longrightarrow> t[x::=u] \\<in> RED \\<sigma>;\n        r = App s' u; t = App s' (Var x) \\<and> x \\<sharp> s'\\<rbrakk>\n       \\<Longrightarrow> App s' u \\<in> RED \\<sigma>", "apply(auto simp add: alpha subst_rename')[1]"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s'.\n       \\<lbrakk>\\<exists>t'.\n                   t \\<mapsto> t' \\<and>\n                   s' = \\<Lambda> x . t' \\<Longrightarrow>\n                App s' u \\<in> RED \\<sigma>;\n        u \\<mapsto> u \\<and> s' = \\<Lambda> x . t \\<Longrightarrow>\n        App (\\<Lambda> x . t) u \\<in> RED \\<sigma>;\n        App s' u = t[x::=u] \\<Longrightarrow> t[x::=u] \\<in> RED \\<sigma>;\n        r = App s' u; t = App s' (Var x) \\<and> x \\<sharp> s'\\<rbrakk>\n       \\<Longrightarrow> App s' u \\<in> RED \\<sigma>", "apply(subgoal_tac \"App s' u = t[x::=u]\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>s'.\n       \\<lbrakk>\\<exists>t'.\n                   t \\<mapsto> t' \\<and>\n                   s' = \\<Lambda> x . t' \\<Longrightarrow>\n                App s' u \\<in> RED \\<sigma>;\n        u \\<mapsto> u \\<and> s' = \\<Lambda> x . t \\<Longrightarrow>\n        App (\\<Lambda> x . t) u \\<in> RED \\<sigma>;\n        App s' u = t[x::=u] \\<Longrightarrow> t[x::=u] \\<in> RED \\<sigma>;\n        r = App s' u; t = App s' (Var x) \\<and> x \\<sharp> s';\n        App s' u = t[x::=u]\\<rbrakk>\n       \\<Longrightarrow> App s' u \\<in> RED \\<sigma>\n 2. \\<And>s'.\n       \\<lbrakk>\\<exists>t'.\n                   t \\<mapsto> t' \\<and>\n                   s' = \\<Lambda> x . t' \\<Longrightarrow>\n                App s' u \\<in> RED \\<sigma>;\n        u \\<mapsto> u \\<and> s' = \\<Lambda> x . t \\<Longrightarrow>\n        App (\\<Lambda> x . t) u \\<in> RED \\<sigma>;\n        App s' u = t[x::=u] \\<Longrightarrow> t[x::=u] \\<in> RED \\<sigma>;\n        r = App s' u; t = App s' (Var x) \\<and> x \\<sharp> s'\\<rbrakk>\n       \\<Longrightarrow> App s' u = t[x::=u]", "apply(auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>s'.\n       \\<lbrakk>\\<exists>t'.\n                   App s' (Var x) \\<mapsto> t' \\<and>\n                   s' = \\<Lambda> x . t' \\<Longrightarrow>\n                App s' u \\<in> RED \\<sigma>;\n        u \\<mapsto> u \\<and>\n        s' = \\<Lambda> x . App s' (Var x) \\<Longrightarrow>\n        App s' u \\<in> RED \\<sigma>;\n        s' = s'[x::=u] \\<Longrightarrow> App s' u \\<in> RED \\<sigma>;\n        r = App s' u; t = App s' (Var x); x \\<sharp> s'\\<rbrakk>\n       \\<Longrightarrow> s' = s'[x::=u]", "apply(auto simp add: forget)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (state)\nthis:\n  r \\<in> RED \\<sigma>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  CR3_RED (App (\\<Lambda> x . t) u) \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>xa z.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>xa \\<mapsto> y; z \\<in> RED \\<tau>;\n                    \\<forall>s\\<in>RED \\<tau>.\n                       y[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n                   \\<Longrightarrow> App (\\<Lambda> x . y) z\n                                     \\<in> RED \\<sigma>;\n        \\<And>u.\n           \\<lbrakk>z \\<mapsto> u; u \\<in> RED \\<tau>;\n            \\<forall>s\\<in>RED \\<tau>. xa[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n           \\<Longrightarrow> App (\\<Lambda> x . xa) u \\<in> RED \\<sigma>;\n        z \\<in> RED \\<tau>;\n        \\<forall>s\\<in>RED \\<tau>. xa[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> App (\\<Lambda> x . xa) z \\<in> RED \\<sigma>", "moreover"], ["proof (state)\nthis:\n  CR3_RED (App (\\<Lambda> x . t) u) \\<sigma>\n\ngoal (1 subgoal):\n 1. \\<And>xa z.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>xa \\<mapsto> y; z \\<in> RED \\<tau>;\n                    \\<forall>s\\<in>RED \\<tau>.\n                       y[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n                   \\<Longrightarrow> App (\\<Lambda> x . y) z\n                                     \\<in> RED \\<sigma>;\n        \\<And>u.\n           \\<lbrakk>z \\<mapsto> u; u \\<in> RED \\<tau>;\n            \\<forall>s\\<in>RED \\<tau>. xa[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n           \\<Longrightarrow> App (\\<Lambda> x . xa) u \\<in> RED \\<sigma>;\n        z \\<in> RED \\<tau>;\n        \\<forall>s\\<in>RED \\<tau>. xa[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> App (\\<Lambda> x . xa) z \\<in> RED \\<sigma>", "have \"NEUT (App (\\<Lambda> x . t) u)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. NEUT (App (\\<Lambda> x . t) u)", "unfolding NEUT_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<exists>a. App (\\<Lambda> x . t) u = Var a) \\<or>\n    (\\<exists>t1 t2. App (\\<Lambda> x . t) u = App t1 t2)", "by (auto)"], ["proof (state)\nthis:\n  NEUT (App (\\<Lambda> x . t) u)\n\ngoal (1 subgoal):\n 1. \\<And>xa z.\n       \\<lbrakk>\\<And>y.\n                   \\<lbrakk>xa \\<mapsto> y; z \\<in> RED \\<tau>;\n                    \\<forall>s\\<in>RED \\<tau>.\n                       y[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n                   \\<Longrightarrow> App (\\<Lambda> x . y) z\n                                     \\<in> RED \\<sigma>;\n        \\<And>u.\n           \\<lbrakk>z \\<mapsto> u; u \\<in> RED \\<tau>;\n            \\<forall>s\\<in>RED \\<tau>. xa[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n           \\<Longrightarrow> App (\\<Lambda> x . xa) u \\<in> RED \\<sigma>;\n        z \\<in> RED \\<tau>;\n        \\<forall>s\\<in>RED \\<tau>. xa[x::=s] \\<in> RED \\<sigma>\\<rbrakk>\n       \\<Longrightarrow> App (\\<Lambda> x . xa) z \\<in> RED \\<sigma>", "ultimately"], ["proof (chain)\npicking this:\n  CR3_RED (App (\\<Lambda> x . t) u) \\<sigma>\n  NEUT (App (\\<Lambda> x . t) u)", "show \"App (\\<Lambda> x . t) u \\<in> RED \\<sigma>\""], ["proof (prove)\nusing this:\n  CR3_RED (App (\\<Lambda> x . t) u) \\<sigma>\n  NEUT (App (\\<Lambda> x . t) u)\n\ngoal (1 subgoal):\n 1. App (\\<Lambda> x . t) u \\<in> RED \\<sigma>", "using RED_props"], ["proof (prove)\nusing this:\n  CR3_RED (App (\\<Lambda> x . t) u) \\<sigma>\n  NEUT (App (\\<Lambda> x . t) u)\n  CR1 ?\\<tau>\n  CR2 ?\\<tau>\n  CR3 ?\\<tau>\n\ngoal (1 subgoal):\n 1. App (\\<Lambda> x . t) u \\<in> RED \\<sigma>", "by (simp add:\nCR3_def)"], ["proof (state)\nthis:\n  App (\\<Lambda> x . t) u \\<in> RED \\<sigma>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  App (\\<Lambda> x . t) u \\<in> RED \\<sigma>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<Lambda> x . t \\<in> RED (\\<tau> \\<rightarrow> \\<sigma>)\n\ngoal:\nNo subgoals!", "qed"], ["", "section \\<open>Sequencing Preserves Reducibility\\<close>"], ["", "text \\<open>This section corresponds to the main part of the paper being formalized\nand as such deserves special attention. In the lambda case one has to formalize\ndoing induction on $\\max(s) + max(t)$ for two strongly normalizing terms $s$ and\n$t$ (cf. \\cite[Section 6.3]{proofs+types}). Above, this was done through a\n\\isa{double-SN}\nrule. The central Lemma 7 of Lindley and Stark's paper uses an even more\ncomplicated induction scheme. They assume terms $p$ and $n$ as well as a stack\n$K$ such that @{term \"SN(p)\"} and @{term \"SN(n[x::=p] \\<star> K)\"}. The induction is\nthen done on $|K| + max(n \\star K) + max(p)$. See Figure~\\ref{fig:lemma7} in\nfor details.\\<close>"], ["", "text_raw \\<open>\\input{figureLemma7}\\<close>"], ["", "text \\<open>Since we have settled for a different characterization of strong\nnormalization, we have to derive an induction principle similar in spirit to the\n\\isa{double-SN} rule. \n\nFurthermore, it turns out that it is not necessary to formalize the fact that\nstack reductions do not increase the length of the stack.\\footnote{This\npossibility was only discovered \\textit{after} having formalized $ K \\mapsto K'\n\\Rightarrow |K| \\geq |K'|$. The proof of this seemingly simple fact\nwas about 90 lines of Isar code.} Doing induction on the sum above, this is\nnecessary to handle the case of a reduction occurring in $K$. We differ\nfrom \\cite{TT-lifting} and establish an induction principle which to some extent\nresembles the lexicographic order on $$(\\SN,\\mapsto) \\times (\\SN,\\mapsto) \\times\n(\\N,>)\\,.$$\\<close>"], ["", "lemma triple_induct[consumes 2]: \n  assumes a: \"SN (p)\"\n  and b: \"SN (q)\"\n  and hyp: \"\\<And> (p::trm) (q::trm) (k::stack) . \n  \\<lbrakk> \\<And> p' . p \\<mapsto> p' \\<Longrightarrow> P p' q k ; \n    \\<And> q' k . q \\<mapsto> q' \\<Longrightarrow> P p q' k; \n    \\<And> k' .  |k'| < |k| \\<Longrightarrow> P p q k' \\<rbrakk> \\<Longrightarrow> P p q k \"\n  shows \"P p q k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P p q k", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. P p q k", "from a"], ["proof (chain)\npicking this:\n  SN p", "have \"\\<And>q K . SN q \\<Longrightarrow> P p q K\""], ["proof (prove)\nusing this:\n  SN p\n\ngoal (1 subgoal):\n 1. \\<And>q K. SN q \\<Longrightarrow> P p q K", "proof (induct p)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t q K.\n       \\<lbrakk>\\<And>t'. t \\<mapsto> t' \\<Longrightarrow> SN t';\n        \\<And>t' q K.\n           \\<lbrakk>t \\<mapsto> t'; SN q\\<rbrakk>\n           \\<Longrightarrow> P t' q K;\n        SN q\\<rbrakk>\n       \\<Longrightarrow> P t q K", "case (SN_intro p)"], ["proof (state)\nthis:\n  p \\<mapsto> ?t' \\<Longrightarrow> SN ?t'\n  \\<lbrakk>p \\<mapsto> ?t'; SN ?q\\<rbrakk> \\<Longrightarrow> P ?t' ?q ?K\n  SN q\n\ngoal (1 subgoal):\n 1. \\<And>t q K.\n       \\<lbrakk>\\<And>t'. t \\<mapsto> t' \\<Longrightarrow> SN t';\n        \\<And>t' q K.\n           \\<lbrakk>t \\<mapsto> t'; SN q\\<rbrakk>\n           \\<Longrightarrow> P t' q K;\n        SN q\\<rbrakk>\n       \\<Longrightarrow> P t q K", "have sn1: \"\\<And> p' q K . \\<lbrakk>p \\<mapsto> p'; SN q\\<rbrakk> \\<Longrightarrow> P p' q K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p' q K.\n       \\<lbrakk>p \\<mapsto> p'; SN q\\<rbrakk> \\<Longrightarrow> P p' q K", "by fact"], ["proof (state)\nthis:\n  \\<lbrakk>p \\<mapsto> ?p'; SN ?q\\<rbrakk> \\<Longrightarrow> P ?p' ?q ?K\n\ngoal (1 subgoal):\n 1. \\<And>t q K.\n       \\<lbrakk>\\<And>t'. t \\<mapsto> t' \\<Longrightarrow> SN t';\n        \\<And>t' q K.\n           \\<lbrakk>t \\<mapsto> t'; SN q\\<rbrakk>\n           \\<Longrightarrow> P t' q K;\n        SN q\\<rbrakk>\n       \\<Longrightarrow> P t q K", "have sn_q: \"SN q\"   \"SN q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN q &&& SN q", "by fact+"], ["proof (state)\nthis:\n  SN q\n  SN q\n\ngoal (1 subgoal):\n 1. \\<And>t q K.\n       \\<lbrakk>\\<And>t'. t \\<mapsto> t' \\<Longrightarrow> SN t';\n        \\<And>t' q K.\n           \\<lbrakk>t \\<mapsto> t'; SN q\\<rbrakk>\n           \\<Longrightarrow> P t' q K;\n        SN q\\<rbrakk>\n       \\<Longrightarrow> P t q K", "thus \"P p q K\""], ["proof (prove)\nusing this:\n  SN q\n  SN q\n\ngoal (1 subgoal):\n 1. P p q K", "proof (induct q arbitrary: K)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t x.\n       \\<lbrakk>\\<And>t'. t \\<mapsto> t' \\<Longrightarrow> SN t';\n        \\<And>t' x.\n           \\<lbrakk>t \\<mapsto> t'; SN t'\\<rbrakk>\n           \\<Longrightarrow> P p t' x;\n        SN t\\<rbrakk>\n       \\<Longrightarrow> P p t x", "case (SN_intro q K)"], ["proof (state)\nthis:\n  q \\<mapsto> ?t' \\<Longrightarrow> SN ?t'\n  \\<lbrakk>q \\<mapsto> ?t'; SN ?t'\\<rbrakk> \\<Longrightarrow> P p ?t' ?x\n  SN q\n\ngoal (1 subgoal):\n 1. \\<And>t x.\n       \\<lbrakk>\\<And>t'. t \\<mapsto> t' \\<Longrightarrow> SN t';\n        \\<And>t' x.\n           \\<lbrakk>t \\<mapsto> t'; SN t'\\<rbrakk>\n           \\<Longrightarrow> P p t' x;\n        SN t\\<rbrakk>\n       \\<Longrightarrow> P p t x", "have sn2: \"\\<And> q' K . \\<lbrakk>q \\<mapsto> q'; SN q'\\<rbrakk> \\<Longrightarrow> P p q' K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>q' K.\n       \\<lbrakk>q \\<mapsto> q'; SN q'\\<rbrakk> \\<Longrightarrow> P p q' K", "by fact"], ["proof (state)\nthis:\n  \\<lbrakk>q \\<mapsto> ?q'; SN ?q'\\<rbrakk> \\<Longrightarrow> P p ?q' ?K\n\ngoal (1 subgoal):\n 1. \\<And>t x.\n       \\<lbrakk>\\<And>t'. t \\<mapsto> t' \\<Longrightarrow> SN t';\n        \\<And>t' x.\n           \\<lbrakk>t \\<mapsto> t'; SN t'\\<rbrakk>\n           \\<Longrightarrow> P p t' x;\n        SN t\\<rbrakk>\n       \\<Longrightarrow> P p t x", "show \"P p q K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P p q K", "proof (induct K rule: measure_induct_rule[where f=\"length\"])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<And>y. |y| < |x| \\<Longrightarrow> P p q y) \\<Longrightarrow>\n       P p q x", "case (less k)"], ["proof (state)\nthis:\n  |?y| < |k| \\<Longrightarrow> P p q ?y\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<And>y. |y| < |x| \\<Longrightarrow> P p q y) \\<Longrightarrow>\n       P p q x", "have le: \"\\<And> k' . |k'| < |k| \\<Longrightarrow> P p q k'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k'. |k'| < |k| \\<Longrightarrow> P p q k'", "by fact"], ["proof (state)\nthis:\n  |?k'| < |k| \\<Longrightarrow> P p q ?k'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<And>y. |y| < |x| \\<Longrightarrow> P p q y) \\<Longrightarrow>\n       P p q x", "{"], ["proof (state)\nthis:\n  |?k'| < |k| \\<Longrightarrow> P p q ?k'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<And>y. |y| < |x| \\<Longrightarrow> P p q y) \\<Longrightarrow>\n       P p q x", "fix p'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<And>y. |y| < |x| \\<Longrightarrow> P p q y) \\<Longrightarrow>\n       P p q x", "assume \"p \\<mapsto> p'\""], ["proof (state)\nthis:\n  p \\<mapsto> p'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<And>y. |y| < |x| \\<Longrightarrow> P p q y) \\<Longrightarrow>\n       P p q x", "moreover"], ["proof (state)\nthis:\n  p \\<mapsto> p'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<And>y. |y| < |x| \\<Longrightarrow> P p q y) \\<Longrightarrow>\n       P p q x", "have \"SN q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN q", "by fact"], ["proof (state)\nthis:\n  SN q\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<And>y. |y| < |x| \\<Longrightarrow> P p q y) \\<Longrightarrow>\n       P p q x", "ultimately"], ["proof (chain)\npicking this:\n  p \\<mapsto> p'\n  SN q", "have \"P p' q k\""], ["proof (prove)\nusing this:\n  p \\<mapsto> p'\n  SN q\n\ngoal (1 subgoal):\n 1. P p' q k", "using sn1"], ["proof (prove)\nusing this:\n  p \\<mapsto> p'\n  SN q\n  \\<lbrakk>p \\<mapsto> ?p'; SN ?q\\<rbrakk> \\<Longrightarrow> P ?p' ?q ?K\n\ngoal (1 subgoal):\n 1. P p' q k", "by auto"], ["proof (state)\nthis:\n  P p' q k\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<And>y. |y| < |x| \\<Longrightarrow> P p q y) \\<Longrightarrow>\n       P p q x", "}"], ["proof (state)\nthis:\n  p \\<mapsto> ?p'2 \\<Longrightarrow> P ?p'2 q k\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<And>y. |y| < |x| \\<Longrightarrow> P p q y) \\<Longrightarrow>\n       P p q x", "moreover"], ["proof (state)\nthis:\n  p \\<mapsto> ?p'2 \\<Longrightarrow> P ?p'2 q k\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<And>y. |y| < |x| \\<Longrightarrow> P p q y) \\<Longrightarrow>\n       P p q x", "{"], ["proof (state)\nthis:\n  p \\<mapsto> ?p'2 \\<Longrightarrow> P ?p'2 q k\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<And>y. |y| < |x| \\<Longrightarrow> P p q y) \\<Longrightarrow>\n       P p q x", "fix q' K"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<And>y. |y| < |x| \\<Longrightarrow> P p q y) \\<Longrightarrow>\n       P p q x", "assume r: \"q \\<mapsto> q'\""], ["proof (state)\nthis:\n  q \\<mapsto> q'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<And>y. |y| < |x| \\<Longrightarrow> P p q y) \\<Longrightarrow>\n       P p q x", "have \"SN q\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN q", "by fact"], ["proof (state)\nthis:\n  SN q\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<And>y. |y| < |x| \\<Longrightarrow> P p q y) \\<Longrightarrow>\n       P p q x", "hence \"SN q'\""], ["proof (prove)\nusing this:\n  SN q\n\ngoal (1 subgoal):\n 1. SN q'", "using r"], ["proof (prove)\nusing this:\n  SN q\n  q \\<mapsto> q'\n\ngoal (1 subgoal):\n 1. SN q'", "by (rule SN_preserved)"], ["proof (state)\nthis:\n  SN q'\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<And>y. |y| < |x| \\<Longrightarrow> P p q y) \\<Longrightarrow>\n       P p q x", "with r"], ["proof (chain)\npicking this:\n  q \\<mapsto> q'\n  SN q'", "have \"P p q' K\""], ["proof (prove)\nusing this:\n  q \\<mapsto> q'\n  SN q'\n\ngoal (1 subgoal):\n 1. P p q' K", "using sn2"], ["proof (prove)\nusing this:\n  q \\<mapsto> q'\n  SN q'\n  \\<lbrakk>q \\<mapsto> ?q'; SN ?q'\\<rbrakk> \\<Longrightarrow> P p ?q' ?K\n\ngoal (1 subgoal):\n 1. P p q' K", "by auto"], ["proof (state)\nthis:\n  P p q' K\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<And>y. |y| < |x| \\<Longrightarrow> P p q y) \\<Longrightarrow>\n       P p q x", "}"], ["proof (state)\nthis:\n  q \\<mapsto> ?q'2 \\<Longrightarrow> P p ?q'2 ?Kb2\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       (\\<And>y. |y| < |x| \\<Longrightarrow> P p q y) \\<Longrightarrow>\n       P p q x", "ultimately"], ["proof (chain)\npicking this:\n  p \\<mapsto> ?p'2 \\<Longrightarrow> P ?p'2 q k\n  q \\<mapsto> ?q'2 \\<Longrightarrow> P p ?q'2 ?Kb2", "show ?case"], ["proof (prove)\nusing this:\n  p \\<mapsto> ?p'2 \\<Longrightarrow> P ?p'2 q k\n  q \\<mapsto> ?q'2 \\<Longrightarrow> P p ?q'2 ?Kb2\n\ngoal (1 subgoal):\n 1. P p q k", "using le"], ["proof (prove)\nusing this:\n  p \\<mapsto> ?p'2 \\<Longrightarrow> P ?p'2 q k\n  q \\<mapsto> ?q'2 \\<Longrightarrow> P p ?q'2 ?Kb2\n  |?k'| < |k| \\<Longrightarrow> P p q ?k'\n\ngoal (1 subgoal):\n 1. P p q k", "by (auto intro:hyp)"], ["proof (state)\nthis:\n  P p q k\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P p q K\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  P p q K\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  SN ?q \\<Longrightarrow> P p ?q ?K\n\ngoal (1 subgoal):\n 1. P p q k", "with b"], ["proof (chain)\npicking this:\n  SN q\n  SN ?q \\<Longrightarrow> P p ?q ?K", "show ?thesis"], ["proof (prove)\nusing this:\n  SN q\n  SN ?q \\<Longrightarrow> P p ?q ?K\n\ngoal (1 subgoal):\n 1. P p q k", "by blast"], ["proof (state)\nthis:\n  P p q k\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Here we strengthen the case rule for terms of the form @{term \"t \\<star> k \\<mapsto>\nr\"}. The freshness requirements on $x$,$y$, and $z$\ncorrespond to those for the rule \\isa{reduction.strong-cases}, the strong\ninversion principle for the reduction relation.\\<close>"], ["", "lemma dismantle_strong_cases:\n  fixes t :: trm\n  assumes r: \"t \\<star> k \\<mapsto> r\"\n  and f: \"y \\<sharp> (t,k,r)\"   \"x \\<sharp> (z,t,k,r)\"   \"z \\<sharp> (t,k,r)\"\n  and T: \"\\<And> t' . \\<lbrakk> t \\<mapsto> t' ; r = t' \\<star> k \\<rbrakk> \\<Longrightarrow> P\"\n  and K: \"\\<And> k' . \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k' \\<rbrakk> \\<Longrightarrow> P\" \n  and B: \"\\<And> s n l . \\<lbrakk> t = [s] ; \n                       k = [y]n\\<ggreater>l ; r = (n[y::=s]) \\<star> l \\<rbrakk> \\<Longrightarrow> P \"\n  and A: \"\\<And> u v n l . \n           \\<lbrakk> x \\<sharp> (z,n); t = u to x in v ; k = [z]n\\<ggreater>l ; \n             r = (u to x in (v to z in n)) \\<star> l \\<rbrakk> \\<Longrightarrow> P \"\n  shows \"P\""], ["proof (prove)\ngoal (1 subgoal):\n 1. P", "proof (cases rule:dismantle_cases[of t k r P])"], ["proof (state)\ngoal (5 subgoals):\n 1. t \\<star> k \\<mapsto> r\n 2. \\<And>t'.\n       \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> k\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>s y n l.\n       \\<lbrakk>t = [s]; k = [y]n\\<ggreater>l;\n        r = n[y::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P\n 5. \\<And>u x v y n l.\n       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; t = u to x in v;\n        k = [y]n\\<ggreater>l; r = (u to x in v to y in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "case (4 s y' n L)"], ["proof (state)\nthis:\n  t = [s]\n  k = [y']n\\<ggreater>L\n  r = n[y'::=s] \\<star> L\n\ngoal (5 subgoals):\n 1. t \\<star> k \\<mapsto> r\n 2. \\<And>t'.\n       \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> k\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>s y n l.\n       \\<lbrakk>t = [s]; k = [y]n\\<ggreater>l;\n        r = n[y::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P\n 5. \\<And>u x v y n l.\n       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; t = u to x in v;\n        k = [y]n\\<ggreater>l; r = (u to x in v to y in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "have ch:\n    \"t = [s]\"\n    \"k = [y']n\\<ggreater>L\"\n    \"r = n[y'::=s] \\<star> L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t = [s] &&& k = [y']n\\<ggreater>L &&& r = n[y'::=s] \\<star> L", "by fact+"], ["proof (state)\nthis:\n  t = [s]\n  k = [y']n\\<ggreater>L\n  r = n[y'::=s] \\<star> L\n\ngoal (5 subgoals):\n 1. t \\<star> k \\<mapsto> r\n 2. \\<And>t'.\n       \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> k\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>s y n l.\n       \\<lbrakk>t = [s]; k = [y]n\\<ggreater>l;\n        r = n[y::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P\n 5. \\<And>u x v y n l.\n       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; t = u to x in v;\n        k = [y]n\\<ggreater>l; r = (u to x in v to y in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "txt \\<open>The equations we get look almost like those we need to instantiate the\nhypothesis \\isa{B}. The only difference is that \\isa{B} only applies to $y$, and\nsince we want $y$ to become an instantiation variable of the strengthened rule,\nwe only know that $y$ satisfies \\isa{f} and nothing else. But the condition\n\\isa{f} is just strong enough to rename $y'$ to $y$ and apply \\isa{B}.\\<close>"], ["proof (state)\nthis:\n  t = [s]\n  k = [y']n\\<ggreater>L\n  r = n[y'::=s] \\<star> L\n\ngoal (5 subgoals):\n 1. t \\<star> k \\<mapsto> r\n 2. \\<And>t'.\n       \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> k\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>s y n l.\n       \\<lbrakk>t = [s]; k = [y]n\\<ggreater>l;\n        r = n[y::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P\n 5. \\<And>u x v y n l.\n       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; t = u to x in v;\n        k = [y]n\\<ggreater>l; r = (u to x in v to y in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "with f"], ["proof (chain)\npicking this:\n  y \\<sharp> (t, k, r)\n  x \\<sharp> (z, t, k, r)\n  z \\<sharp> (t, k, r)\n  t = [s]\n  k = [y']n\\<ggreater>L\n  r = n[y'::=s] \\<star> L", "have \"y = y' \\<or> y \\<sharp> n\""], ["proof (prove)\nusing this:\n  y \\<sharp> (t, k, r)\n  x \\<sharp> (z, t, k, r)\n  z \\<sharp> (t, k, r)\n  t = [s]\n  k = [y']n\\<ggreater>L\n  r = n[y'::=s] \\<star> L\n\ngoal (1 subgoal):\n 1. y = y' \\<or> y \\<sharp> n", "by (auto simp add: fresh_prod abs_fresh)"], ["proof (state)\nthis:\n  y = y' \\<or> y \\<sharp> n\n\ngoal (5 subgoals):\n 1. t \\<star> k \\<mapsto> r\n 2. \\<And>t'.\n       \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> k\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>s y n l.\n       \\<lbrakk>t = [s]; k = [y]n\\<ggreater>l;\n        r = n[y::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P\n 5. \\<And>u x v y n l.\n       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; t = u to x in v;\n        k = [y]n\\<ggreater>l; r = (u to x in v to y in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "hence \"n[y'::=s] = ([(y,y')] \\<bullet> n)[y::=s]\" \n    and \"[y']n\\<ggreater>L = [y]([(y,y')] \\<bullet> n)\\<ggreater>L\""], ["proof (prove)\nusing this:\n  y = y' \\<or> y \\<sharp> n\n\ngoal (1 subgoal):\n 1. n[y'::=s] = ([(y, y')] \\<bullet> n)[y::=s] &&&\n    [y']n\\<ggreater>L = [y][(y, y')] \\<bullet> n\\<ggreater>L", "by(auto simp add: name_swap_bij subst_rename' stack.inject alpha' )"], ["proof (state)\nthis:\n  n[y'::=s] = ([(y, y')] \\<bullet> n)[y::=s]\n  [y']n\\<ggreater>L = [y][(y, y')] \\<bullet> n\\<ggreater>L\n\ngoal (5 subgoals):\n 1. t \\<star> k \\<mapsto> r\n 2. \\<And>t'.\n       \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> k\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>s y n l.\n       \\<lbrakk>t = [s]; k = [y]n\\<ggreater>l;\n        r = n[y::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P\n 5. \\<And>u x v y n l.\n       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; t = u to x in v;\n        k = [y]n\\<ggreater>l; r = (u to x in v to y in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "with ch"], ["proof (chain)\npicking this:\n  t = [s]\n  k = [y']n\\<ggreater>L\n  r = n[y'::=s] \\<star> L\n  n[y'::=s] = ([(y, y')] \\<bullet> n)[y::=s]\n  [y']n\\<ggreater>L = [y][(y, y')] \\<bullet> n\\<ggreater>L", "have \"t = [s]\" \n    \"k = [y]([(y,y')] \\<bullet> n)\\<ggreater>L\" \n    \"r = ([(y,y')] \\<bullet> n)[y::=s] \\<star> L\""], ["proof (prove)\nusing this:\n  t = [s]\n  k = [y']n\\<ggreater>L\n  r = n[y'::=s] \\<star> L\n  n[y'::=s] = ([(y, y')] \\<bullet> n)[y::=s]\n  [y']n\\<ggreater>L = [y][(y, y')] \\<bullet> n\\<ggreater>L\n\ngoal (1 subgoal):\n 1. t = [s] &&&\n    k = [y][(y, y')] \\<bullet> n\\<ggreater>L &&&\n    r = ([(y, y')] \\<bullet> n)[y::=s] \\<star> L", "by (auto)"], ["proof (state)\nthis:\n  t = [s]\n  k = [y][(y, y')] \\<bullet> n\\<ggreater>L\n  r = ([(y, y')] \\<bullet> n)[y::=s] \\<star> L\n\ngoal (5 subgoals):\n 1. t \\<star> k \\<mapsto> r\n 2. \\<And>t'.\n       \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> k\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>s y n l.\n       \\<lbrakk>t = [s]; k = [y]n\\<ggreater>l;\n        r = n[y::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P\n 5. \\<And>u x v y n l.\n       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; t = u to x in v;\n        k = [y]n\\<ggreater>l; r = (u to x in v to y in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "thus \"P\""], ["proof (prove)\nusing this:\n  t = [s]\n  k = [y][(y, y')] \\<bullet> n\\<ggreater>L\n  r = ([(y, y')] \\<bullet> n)[y::=s] \\<star> L\n\ngoal (1 subgoal):\n 1. P", "by (rule B)"], ["proof (state)\nthis:\n  P\n\ngoal (4 subgoals):\n 1. t \\<star> k \\<mapsto> r\n 2. \\<And>t'.\n       \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> k\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>u x v y n l.\n       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; t = u to x in v;\n        k = [y]n\\<ggreater>l; r = (u to x in v to y in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. t \\<star> k \\<mapsto> r\n 2. \\<And>t'.\n       \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> k\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>u x v y n l.\n       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; t = u to x in v;\n        k = [y]n\\<ggreater>l; r = (u to x in v to y in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "case (5 u x' v z' n L)"], ["proof (state)\nthis:\n  x' \\<sharp> z'\n  x' \\<sharp> n\n  t = u to x' in v\n  k = [z']n\\<ggreater>L\n  r = (u to x' in v to z' in n) \\<star> L\n\ngoal (4 subgoals):\n 1. t \\<star> k \\<mapsto> r\n 2. \\<And>t'.\n       \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> k\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>u x v y n l.\n       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; t = u to x in v;\n        k = [y]n\\<ggreater>l; r = (u to x in v to y in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "have ch:\n    \"x' \\<sharp> z'\"   \"x' \\<sharp> n\"\n    \"t = u to x' in v\"\n    \"k = [z']n\\<ggreater>L\"\n    \"r = (u to x' in v to z' in n) \\<star> L\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (x' \\<sharp> z' &&& x' \\<sharp> n) &&&\n    t = u to x' in v &&&\n    k = [z']n\\<ggreater>L &&& r = (u to x' in v to z' in n) \\<star> L", "by fact+"], ["proof (state)\nthis:\n  x' \\<sharp> z'\n  x' \\<sharp> n\n  t = u to x' in v\n  k = [z']n\\<ggreater>L\n  r = (u to x' in v to z' in n) \\<star> L\n\ngoal (4 subgoals):\n 1. t \\<star> k \\<mapsto> r\n 2. \\<And>t'.\n       \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> k\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>u x v y n l.\n       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; t = u to x in v;\n        k = [y]n\\<ggreater>l; r = (u to x in v to y in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "txt \\<open>We want to do the same trick as above but at this point we have to take\ncare of the possibility that $x$ might coincide with $x'$ or $z'$. Similarly,\n$z$\nmight coincide with $z'$.\\<close>"], ["proof (state)\nthis:\n  x' \\<sharp> z'\n  x' \\<sharp> n\n  t = u to x' in v\n  k = [z']n\\<ggreater>L\n  r = (u to x' in v to z' in n) \\<star> L\n\ngoal (4 subgoals):\n 1. t \\<star> k \\<mapsto> r\n 2. \\<And>t'.\n       \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> k\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>u x v y n l.\n       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; t = u to x in v;\n        k = [y]n\\<ggreater>l; r = (u to x in v to y in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "with f"], ["proof (chain)\npicking this:\n  y \\<sharp> (t, k, r)\n  x \\<sharp> (z, t, k, r)\n  z \\<sharp> (t, k, r)\n  x' \\<sharp> z'\n  x' \\<sharp> n\n  t = u to x' in v\n  k = [z']n\\<ggreater>L\n  r = (u to x' in v to z' in n) \\<star> L", "have x: \"x = x' \\<or> x \\<sharp> v to z' in n\" \n    and z: \"z = z' \\<or> z \\<sharp> n\""], ["proof (prove)\nusing this:\n  y \\<sharp> (t, k, r)\n  x \\<sharp> (z, t, k, r)\n  z \\<sharp> (t, k, r)\n  x' \\<sharp> z'\n  x' \\<sharp> n\n  t = u to x' in v\n  k = [z']n\\<ggreater>L\n  r = (u to x' in v to z' in n) \\<star> L\n\ngoal (1 subgoal):\n 1. x = x' \\<or> x \\<sharp> v to z' in n &&& z = z' \\<or> z \\<sharp> n", "by (auto simp add: fresh_prod abs_fresh)"], ["proof (state)\nthis:\n  x = x' \\<or> x \\<sharp> v to z' in n\n  z = z' \\<or> z \\<sharp> n\n\ngoal (4 subgoals):\n 1. t \\<star> k \\<mapsto> r\n 2. \\<And>t'.\n       \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> k\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>u x v y n l.\n       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; t = u to x in v;\n        k = [y]n\\<ggreater>l; r = (u to x in v to y in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "from f ch"], ["proof (chain)\npicking this:\n  y \\<sharp> (t, k, r)\n  x \\<sharp> (z, t, k, r)\n  z \\<sharp> (t, k, r)\n  x' \\<sharp> z'\n  x' \\<sharp> n\n  t = u to x' in v\n  k = [z']n\\<ggreater>L\n  r = (u to x' in v to z' in n) \\<star> L", "have x': \"x' \\<sharp> n\"   \" x' \\<sharp> z'\" \n    and xz': \"x = z' \\<or> x \\<sharp> n\""], ["proof (prove)\nusing this:\n  y \\<sharp> (t, k, r)\n  x \\<sharp> (z, t, k, r)\n  z \\<sharp> (t, k, r)\n  x' \\<sharp> z'\n  x' \\<sharp> n\n  t = u to x' in v\n  k = [z']n\\<ggreater>L\n  r = (u to x' in v to z' in n) \\<star> L\n\ngoal (1 subgoal):\n 1. (x' \\<sharp> n &&& x' \\<sharp> z') &&& x = z' \\<or> x \\<sharp> n", "by (auto simp add:name_swap_bij alpha fresh_prod fresh_atm abs_fresh)"], ["proof (state)\nthis:\n  x' \\<sharp> n\n  x' \\<sharp> z'\n  x = z' \\<or> x \\<sharp> n\n\ngoal (4 subgoals):\n 1. t \\<star> k \\<mapsto> r\n 2. \\<And>t'.\n       \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> k\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>u x v y n l.\n       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; t = u to x in v;\n        k = [y]n\\<ggreater>l; r = (u to x in v to y in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "from f ch"], ["proof (chain)\npicking this:\n  y \\<sharp> (t, k, r)\n  x \\<sharp> (z, t, k, r)\n  z \\<sharp> (t, k, r)\n  x' \\<sharp> z'\n  x' \\<sharp> n\n  t = u to x' in v\n  k = [z']n\\<ggreater>L\n  r = (u to x' in v to z' in n) \\<star> L", "have \"x \\<sharp> z\" \"x \\<sharp> [z'].n\""], ["proof (prove)\nusing this:\n  y \\<sharp> (t, k, r)\n  x \\<sharp> (z, t, k, r)\n  z \\<sharp> (t, k, r)\n  x' \\<sharp> z'\n  x' \\<sharp> n\n  t = u to x' in v\n  k = [z']n\\<ggreater>L\n  r = (u to x' in v to z' in n) \\<star> L\n\ngoal (1 subgoal):\n 1. x \\<sharp> z &&& x \\<sharp> [z'].n", "by (auto simp add:  fresh_prod)"], ["proof (state)\nthis:\n  x \\<sharp> z\n  x \\<sharp> [z'].n\n\ngoal (4 subgoals):\n 1. t \\<star> k \\<mapsto> r\n 2. \\<And>t'.\n       \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> k\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>u x v y n l.\n       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; t = u to x in v;\n        k = [y]n\\<ggreater>l; r = (u to x in v to y in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "with xz' z"], ["proof (chain)\npicking this:\n  x = z' \\<or> x \\<sharp> n\n  z = z' \\<or> z \\<sharp> n\n  x \\<sharp> z\n  x \\<sharp> [z'].n", "have  \" x \\<sharp> (z , ([(z, z')] \\<bullet> n))\""], ["proof (prove)\nusing this:\n  x = z' \\<or> x \\<sharp> n\n  z = z' \\<or> z \\<sharp> n\n  x \\<sharp> z\n  x \\<sharp> [z'].n\n\ngoal (1 subgoal):\n 1. x \\<sharp> (z, [(z, z')] \\<bullet> n)", "by (auto simp add: fresh_atm fresh_bij name_swap_bij \n          fresh_prod abs_fresh calc_atm fresh_aux fresh_left)"], ["proof (state)\nthis:\n  x \\<sharp> (z, [(z, z')] \\<bullet> n)\n\ngoal (4 subgoals):\n 1. t \\<star> k \\<mapsto> r\n 2. \\<And>t'.\n       \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> k\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>u x v y n l.\n       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; t = u to x in v;\n        k = [y]n\\<ggreater>l; r = (u to x in v to y in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "moreover"], ["proof (state)\nthis:\n  x \\<sharp> (z, [(z, z')] \\<bullet> n)\n\ngoal (4 subgoals):\n 1. t \\<star> k \\<mapsto> r\n 2. \\<And>t'.\n       \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> k\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>u x v y n l.\n       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; t = u to x in v;\n        k = [y]n\\<ggreater>l; r = (u to x in v to y in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "from x ch"], ["proof (chain)\npicking this:\n  x = x' \\<or> x \\<sharp> v to z' in n\n  x' \\<sharp> z'\n  x' \\<sharp> n\n  t = u to x' in v\n  k = [z']n\\<ggreater>L\n  r = (u to x' in v to z' in n) \\<star> L", "have \"t = u to x in ([(x,x')] \\<bullet> v)\""], ["proof (prove)\nusing this:\n  x = x' \\<or> x \\<sharp> v to z' in n\n  x' \\<sharp> z'\n  x' \\<sharp> n\n  t = u to x' in v\n  k = [z']n\\<ggreater>L\n  r = (u to x' in v to z' in n) \\<star> L\n\ngoal (1 subgoal):\n 1. t = u to x in ([(x, x')] \\<bullet> v)", "by (auto simp add:name_swap_bij alpha')"], ["proof (state)\nthis:\n  t = u to x in ([(x, x')] \\<bullet> v)\n\ngoal (4 subgoals):\n 1. t \\<star> k \\<mapsto> r\n 2. \\<And>t'.\n       \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> k\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>u x v y n l.\n       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; t = u to x in v;\n        k = [y]n\\<ggreater>l; r = (u to x in v to y in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "moreover"], ["proof (state)\nthis:\n  t = u to x in ([(x, x')] \\<bullet> v)\n\ngoal (4 subgoals):\n 1. t \\<star> k \\<mapsto> r\n 2. \\<And>t'.\n       \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> k\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>u x v y n l.\n       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; t = u to x in v;\n        k = [y]n\\<ggreater>l; r = (u to x in v to y in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "from z ch"], ["proof (chain)\npicking this:\n  z = z' \\<or> z \\<sharp> n\n  x' \\<sharp> z'\n  x' \\<sharp> n\n  t = u to x' in v\n  k = [z']n\\<ggreater>L\n  r = (u to x' in v to z' in n) \\<star> L", "have \"k = [z]([(z,z')] \\<bullet> n)\\<ggreater>L\""], ["proof (prove)\nusing this:\n  z = z' \\<or> z \\<sharp> n\n  x' \\<sharp> z'\n  x' \\<sharp> n\n  t = u to x' in v\n  k = [z']n\\<ggreater>L\n  r = (u to x' in v to z' in n) \\<star> L\n\ngoal (1 subgoal):\n 1. k = [z][(z, z')] \\<bullet> n\\<ggreater>L", "by (auto simp add:name_swap_bij stack.inject alpha')"], ["proof (state)\nthis:\n  k = [z][(z, z')] \\<bullet> n\\<ggreater>L\n\ngoal (4 subgoals):\n 1. t \\<star> k \\<mapsto> r\n 2. \\<And>t'.\n       \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> k\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>u x v y n l.\n       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; t = u to x in v;\n        k = [y]n\\<ggreater>l; r = (u to x in v to y in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "txt \\<open>The first two $\\alpha$-renamings are simple, but here we have to handle\nthe nested binding structure of the assoc rule. Since $x$ scopes over the whole\nterm @{term \"(v to z' in n)\" }, we have to push the swapping over $z'$\\<close>"], ["proof (state)\nthis:\n  k = [z][(z, z')] \\<bullet> n\\<ggreater>L\n\ngoal (4 subgoals):\n 1. t \\<star> k \\<mapsto> r\n 2. \\<And>t'.\n       \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> k\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>u x v y n l.\n       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; t = u to x in v;\n        k = [y]n\\<ggreater>l; r = (u to x in v to y in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "moreover"], ["proof (state)\nthis:\n  k = [z][(z, z')] \\<bullet> n\\<ggreater>L\n\ngoal (4 subgoals):\n 1. t \\<star> k \\<mapsto> r\n 2. \\<And>t'.\n       \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> k\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>u x v y n l.\n       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; t = u to x in v;\n        k = [y]n\\<ggreater>l; r = (u to x in v to y in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "{"], ["proof (state)\nthis:\n  k = [z][(z, z')] \\<bullet> n\\<ggreater>L\n\ngoal (4 subgoals):\n 1. t \\<star> k \\<mapsto> r\n 2. \\<And>t'.\n       \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> k\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>u x v y n l.\n       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; t = u to x in v;\n        k = [y]n\\<ggreater>l; r = (u to x in v to y in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "from x"], ["proof (chain)\npicking this:\n  x = x' \\<or> x \\<sharp> v to z' in n", "have \n    \"u to x' in (v to z' in n) = u to x in ([(x,x')] \\<bullet> (v to z' in n))\""], ["proof (prove)\nusing this:\n  x = x' \\<or> x \\<sharp> v to z' in n\n\ngoal (1 subgoal):\n 1. u to x' in v to z' in n = u to x in ([(x, x')] \\<bullet> v to z' in n)", "by (auto simp add:name_swap_bij alpha' simp del: trm.perm)"], ["proof (state)\nthis:\n  u to x' in v to z' in n = u to x in ([(x, x')] \\<bullet> v to z' in n)\n\ngoal (4 subgoals):\n 1. t \\<star> k \\<mapsto> r\n 2. \\<And>t'.\n       \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> k\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>u x v y n l.\n       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; t = u to x in v;\n        k = [y]n\\<ggreater>l; r = (u to x in v to y in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "also"], ["proof (state)\nthis:\n  u to x' in v to z' in n = u to x in ([(x, x')] \\<bullet> v to z' in n)\n\ngoal (4 subgoals):\n 1. t \\<star> k \\<mapsto> r\n 2. \\<And>t'.\n       \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> k\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>u x v y n l.\n       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; t = u to x in v;\n        k = [y]n\\<ggreater>l; r = (u to x in v to y in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "from xz' x'"], ["proof (chain)\npicking this:\n  x = z' \\<or> x \\<sharp> n\n  x' \\<sharp> n\n  x' \\<sharp> z'", "have \"\\<dots> = u to x in (([(x,x')] \\<bullet> v) to z' in n)\""], ["proof (prove)\nusing this:\n  x = z' \\<or> x \\<sharp> n\n  x' \\<sharp> n\n  x' \\<sharp> z'\n\ngoal (1 subgoal):\n 1. u to x in ([(x, x')] \\<bullet> v to z' in n) =\n    u to x in ([(x, x')] \\<bullet> v) to z' in n", "by (auto simp add: abs_fun_eq1 swap_simps alpha'') \n           (metis alpha'' fresh_atm perm_fresh_fresh swap_simps(1) x')"], ["proof (state)\nthis:\n  u to x in ([(x, x')] \\<bullet> v to z' in n) =\n  u to x in ([(x, x')] \\<bullet> v) to z' in n\n\ngoal (4 subgoals):\n 1. t \\<star> k \\<mapsto> r\n 2. \\<And>t'.\n       \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> k\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>u x v y n l.\n       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; t = u to x in v;\n        k = [y]n\\<ggreater>l; r = (u to x in v to y in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "also"], ["proof (state)\nthis:\n  u to x in ([(x, x')] \\<bullet> v to z' in n) =\n  u to x in ([(x, x')] \\<bullet> v) to z' in n\n\ngoal (4 subgoals):\n 1. t \\<star> k \\<mapsto> r\n 2. \\<And>t'.\n       \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> k\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>u x v y n l.\n       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; t = u to x in v;\n        k = [y]n\\<ggreater>l; r = (u to x in v to y in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "from z"], ["proof (chain)\npicking this:\n  z = z' \\<or> z \\<sharp> n", "have \" \\<dots> = u to x in (([(x,x')] \\<bullet> v) to z in ([(z,z')] \\<bullet> n))\""], ["proof (prove)\nusing this:\n  z = z' \\<or> z \\<sharp> n\n\ngoal (1 subgoal):\n 1. u to x in ([(x, x')] \\<bullet> v) to z' in n =\n    u to x in ([(x, x')] \\<bullet> v) to z in ([(z, z')] \\<bullet> n)", "by (auto simp add: abs_fun_eq1 alpha' name_swap_bij )"], ["proof (state)\nthis:\n  u to x in ([(x, x')] \\<bullet> v) to z' in n =\n  u to x in ([(x, x')] \\<bullet> v) to z in ([(z, z')] \\<bullet> n)\n\ngoal (4 subgoals):\n 1. t \\<star> k \\<mapsto> r\n 2. \\<And>t'.\n       \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> k\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>u x v y n l.\n       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; t = u to x in v;\n        k = [y]n\\<ggreater>l; r = (u to x in v to y in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "finally"], ["proof (chain)\npicking this:\n  u to x' in v to z' in n =\n  u to x in ([(x, x')] \\<bullet> v) to z in ([(z, z')] \\<bullet> n)", "have \"r =  (u to x in (([(x, x')] \\<bullet> v) to z in ([(z, z')] \\<bullet> n))) \\<star> L\""], ["proof (prove)\nusing this:\n  u to x' in v to z' in n =\n  u to x in ([(x, x')] \\<bullet> v) to z in ([(z, z')] \\<bullet> n)\n\ngoal (1 subgoal):\n 1. r =\n    (u to x in ([(x, x')] \\<bullet>\n                v) to z in ([(z, z')] \\<bullet> n)) \\<star> L", "using ch"], ["proof (prove)\nusing this:\n  u to x' in v to z' in n =\n  u to x in ([(x, x')] \\<bullet> v) to z in ([(z, z')] \\<bullet> n)\n  x' \\<sharp> z'\n  x' \\<sharp> n\n  t = u to x' in v\n  k = [z']n\\<ggreater>L\n  r = (u to x' in v to z' in n) \\<star> L\n\ngoal (1 subgoal):\n 1. r =\n    (u to x in ([(x, x')] \\<bullet>\n                v) to z in ([(z, z')] \\<bullet> n)) \\<star> L", "by (simp del: trm.inject)"], ["proof (state)\nthis:\n  r =\n  (u to x in ([(x, x')] \\<bullet>\n              v) to z in ([(z, z')] \\<bullet> n)) \\<star> L\n\ngoal (4 subgoals):\n 1. t \\<star> k \\<mapsto> r\n 2. \\<And>t'.\n       \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> k\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>u x v y n l.\n       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; t = u to x in v;\n        k = [y]n\\<ggreater>l; r = (u to x in v to y in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "}"], ["proof (state)\nthis:\n  r =\n  (u to x in ([(x, x')] \\<bullet>\n              v) to z in ([(z, z')] \\<bullet> n)) \\<star> L\n\ngoal (4 subgoals):\n 1. t \\<star> k \\<mapsto> r\n 2. \\<And>t'.\n       \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> k\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P\n 4. \\<And>u x v y n l.\n       \\<lbrakk>x \\<sharp> y; x \\<sharp> n; t = u to x in v;\n        k = [y]n\\<ggreater>l; r = (u to x in v to y in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> P", "ultimately"], ["proof (chain)\npicking this:\n  x \\<sharp> (z, [(z, z')] \\<bullet> n)\n  t = u to x in ([(x, x')] \\<bullet> v)\n  k = [z][(z, z')] \\<bullet> n\\<ggreater>L\n  r =\n  (u to x in ([(x, x')] \\<bullet>\n              v) to z in ([(z, z')] \\<bullet> n)) \\<star> L", "show \"P\""], ["proof (prove)\nusing this:\n  x \\<sharp> (z, [(z, z')] \\<bullet> n)\n  t = u to x in ([(x, x')] \\<bullet> v)\n  k = [z][(z, z')] \\<bullet> n\\<ggreater>L\n  r =\n  (u to x in ([(x, x')] \\<bullet>\n              v) to z in ([(z, z')] \\<bullet> n)) \\<star> L\n\ngoal (1 subgoal):\n 1. P", "by (rule A[where n=\"[(z, z')] \\<bullet> n\" and v=\"([(x, x')] \\<bullet> v)\"])"], ["proof (state)\nthis:\n  P\n\ngoal (3 subgoals):\n 1. t \\<star> k \\<mapsto> r\n 2. \\<And>t'.\n       \\<lbrakk>t \\<mapsto> t'; r = t' \\<star> k\\<rbrakk>\n       \\<Longrightarrow> P\n 3. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = t \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> P", "qed (insert r T K, auto)"], ["", "text \\<open>The lemma in Figure~\\ref{fig:lemma7} assumes @{term \"SN(n[x::=p] \\<star> K)\"}\nbut the actual induction in done on @{term \"SN(n \\<star> K)\"}. The stronger\nassumption @{term \"SN (n[x::=p] \\<star> K)\"} is needed to handle the $\\beta$ and\n$\\eta$ cases.\\<close>"], ["", "lemma sn_forget:\n  assumes a: \"SN(t[x::=v])\"\n  shows \"SN t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. SN t", "define q where \"q = t[x::=v]\""], ["proof (state)\nthis:\n  q = t[x::=v]\n\ngoal (1 subgoal):\n 1. SN t", "from a"], ["proof (chain)\npicking this:\n  SN (t[x::=v])", "have \"SN q\""], ["proof (prove)\nusing this:\n  SN (t[x::=v])\n\ngoal (1 subgoal):\n 1. SN q", "unfolding q_def"], ["proof (prove)\nusing this:\n  SN (t[x::=v])\n\ngoal (1 subgoal):\n 1. SN (t[x::=v])", "."], ["proof (state)\nthis:\n  SN q\n\ngoal (1 subgoal):\n 1. SN t", "thus \"SN t\""], ["proof (prove)\nusing this:\n  SN q\n\ngoal (1 subgoal):\n 1. SN t", "using q_def"], ["proof (prove)\nusing this:\n  SN q\n  q = t[x::=v]\n\ngoal (1 subgoal):\n 1. SN t", "proof (induct q arbitrary: t)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t ta.\n       \\<lbrakk>\\<And>t'. t \\<mapsto> t' \\<Longrightarrow> SN t';\n        \\<And>t' ta.\n           \\<lbrakk>t \\<mapsto> t'; t' = ta[x::=v]\\<rbrakk>\n           \\<Longrightarrow> SN ta;\n        t = ta[x::=v]\\<rbrakk>\n       \\<Longrightarrow> SN ta", "case (SN_intro t)"], ["proof (state)\nthis:\n  ta__ \\<mapsto> ?t' \\<Longrightarrow> SN ?t'\n  \\<lbrakk>ta__ \\<mapsto> ?t'; ?t' = ?t[x::=v]\\<rbrakk>\n  \\<Longrightarrow> SN ?t\n  ta__ = t[x::=v]\n\ngoal (1 subgoal):\n 1. \\<And>t ta.\n       \\<lbrakk>\\<And>t'. t \\<mapsto> t' \\<Longrightarrow> SN t';\n        \\<And>t' ta.\n           \\<lbrakk>t \\<mapsto> t'; t' = ta[x::=v]\\<rbrakk>\n           \\<Longrightarrow> SN ta;\n        t = ta[x::=v]\\<rbrakk>\n       \\<Longrightarrow> SN ta", "hence ih: \"\\<And> t'. \\<lbrakk>t[x::=v] \\<mapsto> t'[x::=v]\\<rbrakk> \\<Longrightarrow> SN t'\""], ["proof (prove)\nusing this:\n  ta__ \\<mapsto> ?t' \\<Longrightarrow> SN ?t'\n  \\<lbrakk>ta__ \\<mapsto> ?t'; ?t' = ?t[x::=v]\\<rbrakk>\n  \\<Longrightarrow> SN ?t\n  ta__ = t[x::=v]\n\ngoal (1 subgoal):\n 1. \\<And>t'. t[x::=v] \\<mapsto> t'[x::=v] \\<Longrightarrow> SN t'", "by auto"], ["proof (state)\nthis:\n  t[x::=v] \\<mapsto> ?t'[x::=v] \\<Longrightarrow> SN ?t'\n\ngoal (1 subgoal):\n 1. \\<And>t ta.\n       \\<lbrakk>\\<And>t'. t \\<mapsto> t' \\<Longrightarrow> SN t';\n        \\<And>t' ta.\n           \\<lbrakk>t \\<mapsto> t'; t' = ta[x::=v]\\<rbrakk>\n           \\<Longrightarrow> SN ta;\n        t = ta[x::=v]\\<rbrakk>\n       \\<Longrightarrow> SN ta", "{"], ["proof (state)\nthis:\n  t[x::=v] \\<mapsto> ?t'[x::=v] \\<Longrightarrow> SN ?t'\n\ngoal (1 subgoal):\n 1. \\<And>t ta.\n       \\<lbrakk>\\<And>t'. t \\<mapsto> t' \\<Longrightarrow> SN t';\n        \\<And>t' ta.\n           \\<lbrakk>t \\<mapsto> t'; t' = ta[x::=v]\\<rbrakk>\n           \\<Longrightarrow> SN ta;\n        t = ta[x::=v]\\<rbrakk>\n       \\<Longrightarrow> SN ta", "fix t'"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>t ta.\n       \\<lbrakk>\\<And>t'. t \\<mapsto> t' \\<Longrightarrow> SN t';\n        \\<And>t' ta.\n           \\<lbrakk>t \\<mapsto> t'; t' = ta[x::=v]\\<rbrakk>\n           \\<Longrightarrow> SN ta;\n        t = ta[x::=v]\\<rbrakk>\n       \\<Longrightarrow> SN ta", "assume \"t \\<mapsto> t'\""], ["proof (state)\nthis:\n  t \\<mapsto> t'\n\ngoal (1 subgoal):\n 1. \\<And>t ta.\n       \\<lbrakk>\\<And>t'. t \\<mapsto> t' \\<Longrightarrow> SN t';\n        \\<And>t' ta.\n           \\<lbrakk>t \\<mapsto> t'; t' = ta[x::=v]\\<rbrakk>\n           \\<Longrightarrow> SN ta;\n        t = ta[x::=v]\\<rbrakk>\n       \\<Longrightarrow> SN ta", "hence \"t[x::=v] \\<mapsto> t'[x::=v]\""], ["proof (prove)\nusing this:\n  t \\<mapsto> t'\n\ngoal (1 subgoal):\n 1. t[x::=v] \\<mapsto> t'[x::=v]", "by (rule reduction_subst)"], ["proof (state)\nthis:\n  t[x::=v] \\<mapsto> t'[x::=v]\n\ngoal (1 subgoal):\n 1. \\<And>t ta.\n       \\<lbrakk>\\<And>t'. t \\<mapsto> t' \\<Longrightarrow> SN t';\n        \\<And>t' ta.\n           \\<lbrakk>t \\<mapsto> t'; t' = ta[x::=v]\\<rbrakk>\n           \\<Longrightarrow> SN ta;\n        t = ta[x::=v]\\<rbrakk>\n       \\<Longrightarrow> SN ta", "hence \"SN t'\""], ["proof (prove)\nusing this:\n  t[x::=v] \\<mapsto> t'[x::=v]\n\ngoal (1 subgoal):\n 1. SN t'", "by (rule ih)"], ["proof (state)\nthis:\n  SN t'\n\ngoal (1 subgoal):\n 1. \\<And>t ta.\n       \\<lbrakk>\\<And>t'. t \\<mapsto> t' \\<Longrightarrow> SN t';\n        \\<And>t' ta.\n           \\<lbrakk>t \\<mapsto> t'; t' = ta[x::=v]\\<rbrakk>\n           \\<Longrightarrow> SN ta;\n        t = ta[x::=v]\\<rbrakk>\n       \\<Longrightarrow> SN ta", "}"], ["proof (state)\nthis:\n  t \\<mapsto> ?t'2 \\<Longrightarrow> SN ?t'2\n\ngoal (1 subgoal):\n 1. \\<And>t ta.\n       \\<lbrakk>\\<And>t'. t \\<mapsto> t' \\<Longrightarrow> SN t';\n        \\<And>t' ta.\n           \\<lbrakk>t \\<mapsto> t'; t' = ta[x::=v]\\<rbrakk>\n           \\<Longrightarrow> SN ta;\n        t = ta[x::=v]\\<rbrakk>\n       \\<Longrightarrow> SN ta", "thus \"SN t\""], ["proof (prove)\nusing this:\n  t \\<mapsto> ?t'2 \\<Longrightarrow> SN ?t'2\n\ngoal (1 subgoal):\n 1. SN t", ".."], ["proof (state)\nthis:\n  SN t\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  SN t\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma sn_forget': \n  assumes sn: \"SN (t[x::=p] \\<star> k)\" \n  and x: \"x \\<sharp> k\"\n  shows \"SN (t \\<star> k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN (t \\<star> k)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. SN (t \\<star> k)", "from x"], ["proof (chain)\npicking this:\n  x \\<sharp> k", "have \"t[x::=p] \\<star> k = (t \\<star> k)[x::=p]\""], ["proof (prove)\nusing this:\n  x \\<sharp> k\n\ngoal (1 subgoal):\n 1. t[x::=p] \\<star> k = (t \\<star> k)[x::=p]", "by (simp add: ssubst_forget)"], ["proof (state)\nthis:\n  t[x::=p] \\<star> k = (t \\<star> k)[x::=p]\n\ngoal (1 subgoal):\n 1. SN (t \\<star> k)", "with sn"], ["proof (chain)\npicking this:\n  SN (t[x::=p] \\<star> k)\n  t[x::=p] \\<star> k = (t \\<star> k)[x::=p]", "have \"SN( (t \\<star> k)[x::=p] )\""], ["proof (prove)\nusing this:\n  SN (t[x::=p] \\<star> k)\n  t[x::=p] \\<star> k = (t \\<star> k)[x::=p]\n\ngoal (1 subgoal):\n 1. SN ((t \\<star> k)[x::=p])", "by simp"], ["proof (state)\nthis:\n  SN ((t \\<star> k)[x::=p])\n\ngoal (1 subgoal):\n 1. SN (t \\<star> k)", "thus ?thesis"], ["proof (prove)\nusing this:\n  SN ((t \\<star> k)[x::=p])\n\ngoal (1 subgoal):\n 1. SN (t \\<star> k)", "by (rule sn_forget)"], ["proof (state)\nthis:\n  SN (t \\<star> k)\n\ngoal:\nNo subgoals!", "qed"], ["", "abbreviation\nredrtrans :: \"trm \\<Rightarrow> trm \\<Rightarrow> bool\" (\" _ \\<mapsto>\\<^sup>* _ \" )\nwhere \"redrtrans \\<equiv> reduction^**\""], ["", "text \\<open>To be able to handle the case where $p$ makes a step, we need to\nestablish @{term \"p \\<mapsto> p' \\<Longrightarrow> (m[x::=p]) \\<mapsto>\\<^sup>* (m[x::=p'])\"} as well as the\nfact that strong normalization is preserved for an arbitrary number of reduction\nsteps. The first claim involves a number of simple transitivity lemmas. Here we\ncan benefit from having removed the freshness conditions from the reduction\nrelation as this allows all the cases to be proven automatically. Similarly, in\nthe \\isa{red-subst} lemma, only those cases where substitution is pushed to two\nsubterms needs to be proven explicitly.\\<close>"], ["", "lemma red_trans:\n  shows r1_trans: \" s \\<mapsto>\\<^sup>* s' \\<Longrightarrow> App s t \\<mapsto>\\<^sup>* App s' t\"\n  and r2_trans: \" t \\<mapsto>\\<^sup>* t' \\<Longrightarrow> App s t \\<mapsto>\\<^sup>* App s t'\"\n  and r4_trans: \"t \\<mapsto>\\<^sup>* t' \\<Longrightarrow> \\<Lambda> x . t \\<mapsto>\\<^sup>* \\<Lambda> x . t' \"\n  and r6_trans: \" s \\<mapsto>\\<^sup>* s'  \\<Longrightarrow> s to x in t \\<mapsto>\\<^sup>* s' to x in t\"\n  and r7_trans: \"\\<lbrakk> t \\<mapsto>\\<^sup>* t'  \\<rbrakk> \\<Longrightarrow> s to x in t \\<mapsto>\\<^sup>* s  to x in t'\"\n  and r11_trans: \"s \\<mapsto>\\<^sup>* s' \\<Longrightarrow> [s] \\<mapsto>\\<^sup>* ([s'])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (( s \\<mapsto>\\<^sup>* s'  \\<Longrightarrow>\n       App s t \\<mapsto>\\<^sup>* App s' t ) &&&\n     ( t \\<mapsto>\\<^sup>* t'  \\<Longrightarrow>\n       App s t \\<mapsto>\\<^sup>* App s t' ) &&&\n     ( t \\<mapsto>\\<^sup>* t'  \\<Longrightarrow>\n       \\<Lambda> x . t \\<mapsto>\\<^sup>* \\<Lambda> x . t' )) &&&\n    ( s \\<mapsto>\\<^sup>* s'  \\<Longrightarrow>\n      s to x in t \\<mapsto>\\<^sup>* s' to x in t ) &&&\n    ( t \\<mapsto>\\<^sup>* t'  \\<Longrightarrow>\n      s to x in t \\<mapsto>\\<^sup>* s to x in t' ) &&&\n    ( s \\<mapsto>\\<^sup>* s'  \\<Longrightarrow>\n      [s] \\<mapsto>\\<^sup>* [s'] )", "by - (induct rule: rtranclp_induct , (auto intro:\ntransitive_closurep_trans')[2])+"], ["", "lemma red_subst: \"p \\<mapsto> p' \\<Longrightarrow> (m[x::=p]) \\<mapsto>\\<^sup>* (m[x::=p'])\""], ["proof (prove)\ngoal (1 subgoal):\n 1. p \\<mapsto> p' \\<Longrightarrow>  m[x::=p] \\<mapsto>\\<^sup>* m[x::=p']", "proof(nominal_induct m avoiding: x p p' rule:trm.strong_induct)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>name x p p'.\n       p \\<mapsto> p' \\<Longrightarrow>\n        Var name[x::=p] \\<mapsto>\\<^sup>* Var name[x::=p'] \n 2. \\<And>trm1 trm2 x p p'.\n       \\<lbrakk>\\<And>b ba bb.\n                   ba \\<mapsto> bb \\<Longrightarrow>\n                    trm1[b::=ba] \\<mapsto>\\<^sup>* trm1[b::=bb] ;\n        \\<And>b ba bb.\n           ba \\<mapsto> bb \\<Longrightarrow>\n            trm2[b::=ba] \\<mapsto>\\<^sup>* trm2[b::=bb] ;\n        p \\<mapsto> p'\\<rbrakk>\n       \\<Longrightarrow>  App trm1\n                           trm2[x::=p] \\<mapsto>\\<^sup>* App trm1\n                    trm2[x::=p'] \n 3. \\<And>name trm x p p'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> p; name \\<sharp> p';\n        \\<And>b ba bb.\n           ba \\<mapsto> bb \\<Longrightarrow>\n            trm[b::=ba] \\<mapsto>\\<^sup>* trm[b::=bb] ;\n        p \\<mapsto> p'\\<rbrakk>\n       \\<Longrightarrow>  (\\<Lambda> name . trm)[x::=p] \\<mapsto>\\<^sup>* (\\<Lambda> name . trm)[x::=p'] \n 4. \\<And>trm1 name trm2 x p p'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> p; name \\<sharp> p';\n        name \\<sharp> trm1;\n        \\<And>b ba bb.\n           ba \\<mapsto> bb \\<Longrightarrow>\n            trm1[b::=ba] \\<mapsto>\\<^sup>* trm1[b::=bb] ;\n        \\<And>b ba bb.\n           ba \\<mapsto> bb \\<Longrightarrow>\n            trm2[b::=ba] \\<mapsto>\\<^sup>* trm2[b::=bb] ;\n        p \\<mapsto> p'\\<rbrakk>\n       \\<Longrightarrow>  (trm1 to name in trm2)[x::=p] \\<mapsto>\\<^sup>* (trm1 to name in trm2)[x::=p'] \n 5. \\<And>trm x p p'.\n       \\<lbrakk>\\<And>b ba bb.\n                   ba \\<mapsto> bb \\<Longrightarrow>\n                    trm[b::=ba] \\<mapsto>\\<^sup>* trm[b::=bb] ;\n        p \\<mapsto> p'\\<rbrakk>\n       \\<Longrightarrow>  [trm][x::=p] \\<mapsto>\\<^sup>* [trm][x::=p']", "case (App s t)"], ["proof (state)\nthis:\n  ?ba \\<mapsto> ?bb \\<Longrightarrow>\n   s[?b::=?ba] \\<mapsto>\\<^sup>* s[?b::=?bb] \n  ?ba \\<mapsto> ?bb \\<Longrightarrow>\n   t[?b::=?ba] \\<mapsto>\\<^sup>* t[?b::=?bb] \n  p \\<mapsto> p'\n\ngoal (5 subgoals):\n 1. \\<And>name x p p'.\n       p \\<mapsto> p' \\<Longrightarrow>\n        Var name[x::=p] \\<mapsto>\\<^sup>* Var name[x::=p'] \n 2. \\<And>trm1 trm2 x p p'.\n       \\<lbrakk>\\<And>b ba bb.\n                   ba \\<mapsto> bb \\<Longrightarrow>\n                    trm1[b::=ba] \\<mapsto>\\<^sup>* trm1[b::=bb] ;\n        \\<And>b ba bb.\n           ba \\<mapsto> bb \\<Longrightarrow>\n            trm2[b::=ba] \\<mapsto>\\<^sup>* trm2[b::=bb] ;\n        p \\<mapsto> p'\\<rbrakk>\n       \\<Longrightarrow>  App trm1\n                           trm2[x::=p] \\<mapsto>\\<^sup>* App trm1\n                    trm2[x::=p'] \n 3. \\<And>name trm x p p'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> p; name \\<sharp> p';\n        \\<And>b ba bb.\n           ba \\<mapsto> bb \\<Longrightarrow>\n            trm[b::=ba] \\<mapsto>\\<^sup>* trm[b::=bb] ;\n        p \\<mapsto> p'\\<rbrakk>\n       \\<Longrightarrow>  (\\<Lambda> name . trm)[x::=p] \\<mapsto>\\<^sup>* (\\<Lambda> name . trm)[x::=p'] \n 4. \\<And>trm1 name trm2 x p p'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> p; name \\<sharp> p';\n        name \\<sharp> trm1;\n        \\<And>b ba bb.\n           ba \\<mapsto> bb \\<Longrightarrow>\n            trm1[b::=ba] \\<mapsto>\\<^sup>* trm1[b::=bb] ;\n        \\<And>b ba bb.\n           ba \\<mapsto> bb \\<Longrightarrow>\n            trm2[b::=ba] \\<mapsto>\\<^sup>* trm2[b::=bb] ;\n        p \\<mapsto> p'\\<rbrakk>\n       \\<Longrightarrow>  (trm1 to name in trm2)[x::=p] \\<mapsto>\\<^sup>* (trm1 to name in trm2)[x::=p'] \n 5. \\<And>trm x p p'.\n       \\<lbrakk>\\<And>b ba bb.\n                   ba \\<mapsto> bb \\<Longrightarrow>\n                    trm[b::=ba] \\<mapsto>\\<^sup>* trm[b::=bb] ;\n        p \\<mapsto> p'\\<rbrakk>\n       \\<Longrightarrow>  [trm][x::=p] \\<mapsto>\\<^sup>* [trm][x::=p']", "hence \"App (s[x::=p]) (t[x::=p]) \\<mapsto>\\<^sup>* App (s[x::=p']) (t[x::=p])\""], ["proof (prove)\nusing this:\n  ?ba \\<mapsto> ?bb \\<Longrightarrow>\n   s[?b::=?ba] \\<mapsto>\\<^sup>* s[?b::=?bb] \n  ?ba \\<mapsto> ?bb \\<Longrightarrow>\n   t[?b::=?ba] \\<mapsto>\\<^sup>* t[?b::=?bb] \n  p \\<mapsto> p'\n\ngoal (1 subgoal):\n 1.  App (s[x::=p]) (t[x::=p]) \\<mapsto>\\<^sup>* App (s[x::=p']) (t[x::=p])", "by (auto intro: r1_trans)"], ["proof (state)\nthis:\n   App (s[x::=p]) (t[x::=p]) \\<mapsto>\\<^sup>* App (s[x::=p']) (t[x::=p]) \n\ngoal (5 subgoals):\n 1. \\<And>name x p p'.\n       p \\<mapsto> p' \\<Longrightarrow>\n        Var name[x::=p] \\<mapsto>\\<^sup>* Var name[x::=p'] \n 2. \\<And>trm1 trm2 x p p'.\n       \\<lbrakk>\\<And>b ba bb.\n                   ba \\<mapsto> bb \\<Longrightarrow>\n                    trm1[b::=ba] \\<mapsto>\\<^sup>* trm1[b::=bb] ;\n        \\<And>b ba bb.\n           ba \\<mapsto> bb \\<Longrightarrow>\n            trm2[b::=ba] \\<mapsto>\\<^sup>* trm2[b::=bb] ;\n        p \\<mapsto> p'\\<rbrakk>\n       \\<Longrightarrow>  App trm1\n                           trm2[x::=p] \\<mapsto>\\<^sup>* App trm1\n                    trm2[x::=p'] \n 3. \\<And>name trm x p p'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> p; name \\<sharp> p';\n        \\<And>b ba bb.\n           ba \\<mapsto> bb \\<Longrightarrow>\n            trm[b::=ba] \\<mapsto>\\<^sup>* trm[b::=bb] ;\n        p \\<mapsto> p'\\<rbrakk>\n       \\<Longrightarrow>  (\\<Lambda> name . trm)[x::=p] \\<mapsto>\\<^sup>* (\\<Lambda> name . trm)[x::=p'] \n 4. \\<And>trm1 name trm2 x p p'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> p; name \\<sharp> p';\n        name \\<sharp> trm1;\n        \\<And>b ba bb.\n           ba \\<mapsto> bb \\<Longrightarrow>\n            trm1[b::=ba] \\<mapsto>\\<^sup>* trm1[b::=bb] ;\n        \\<And>b ba bb.\n           ba \\<mapsto> bb \\<Longrightarrow>\n            trm2[b::=ba] \\<mapsto>\\<^sup>* trm2[b::=bb] ;\n        p \\<mapsto> p'\\<rbrakk>\n       \\<Longrightarrow>  (trm1 to name in trm2)[x::=p] \\<mapsto>\\<^sup>* (trm1 to name in trm2)[x::=p'] \n 5. \\<And>trm x p p'.\n       \\<lbrakk>\\<And>b ba bb.\n                   ba \\<mapsto> bb \\<Longrightarrow>\n                    trm[b::=ba] \\<mapsto>\\<^sup>* trm[b::=bb] ;\n        p \\<mapsto> p'\\<rbrakk>\n       \\<Longrightarrow>  [trm][x::=p] \\<mapsto>\\<^sup>* [trm][x::=p']", "also"], ["proof (state)\nthis:\n   App (s[x::=p]) (t[x::=p]) \\<mapsto>\\<^sup>* App (s[x::=p']) (t[x::=p]) \n\ngoal (5 subgoals):\n 1. \\<And>name x p p'.\n       p \\<mapsto> p' \\<Longrightarrow>\n        Var name[x::=p] \\<mapsto>\\<^sup>* Var name[x::=p'] \n 2. \\<And>trm1 trm2 x p p'.\n       \\<lbrakk>\\<And>b ba bb.\n                   ba \\<mapsto> bb \\<Longrightarrow>\n                    trm1[b::=ba] \\<mapsto>\\<^sup>* trm1[b::=bb] ;\n        \\<And>b ba bb.\n           ba \\<mapsto> bb \\<Longrightarrow>\n            trm2[b::=ba] \\<mapsto>\\<^sup>* trm2[b::=bb] ;\n        p \\<mapsto> p'\\<rbrakk>\n       \\<Longrightarrow>  App trm1\n                           trm2[x::=p] \\<mapsto>\\<^sup>* App trm1\n                    trm2[x::=p'] \n 3. \\<And>name trm x p p'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> p; name \\<sharp> p';\n        \\<And>b ba bb.\n           ba \\<mapsto> bb \\<Longrightarrow>\n            trm[b::=ba] \\<mapsto>\\<^sup>* trm[b::=bb] ;\n        p \\<mapsto> p'\\<rbrakk>\n       \\<Longrightarrow>  (\\<Lambda> name . trm)[x::=p] \\<mapsto>\\<^sup>* (\\<Lambda> name . trm)[x::=p'] \n 4. \\<And>trm1 name trm2 x p p'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> p; name \\<sharp> p';\n        name \\<sharp> trm1;\n        \\<And>b ba bb.\n           ba \\<mapsto> bb \\<Longrightarrow>\n            trm1[b::=ba] \\<mapsto>\\<^sup>* trm1[b::=bb] ;\n        \\<And>b ba bb.\n           ba \\<mapsto> bb \\<Longrightarrow>\n            trm2[b::=ba] \\<mapsto>\\<^sup>* trm2[b::=bb] ;\n        p \\<mapsto> p'\\<rbrakk>\n       \\<Longrightarrow>  (trm1 to name in trm2)[x::=p] \\<mapsto>\\<^sup>* (trm1 to name in trm2)[x::=p'] \n 5. \\<And>trm x p p'.\n       \\<lbrakk>\\<And>b ba bb.\n                   ba \\<mapsto> bb \\<Longrightarrow>\n                    trm[b::=ba] \\<mapsto>\\<^sup>* trm[b::=bb] ;\n        p \\<mapsto> p'\\<rbrakk>\n       \\<Longrightarrow>  [trm][x::=p] \\<mapsto>\\<^sup>* [trm][x::=p']", "from App"], ["proof (chain)\npicking this:\n  ?ba \\<mapsto> ?bb \\<Longrightarrow>\n   s[?b::=?ba] \\<mapsto>\\<^sup>* s[?b::=?bb] \n  ?ba \\<mapsto> ?bb \\<Longrightarrow>\n   t[?b::=?ba] \\<mapsto>\\<^sup>* t[?b::=?bb] \n  p \\<mapsto> p'", "have \"\\<dots> \\<mapsto>\\<^sup>* App (s[x::=p']) ( t[x::=p'])\""], ["proof (prove)\nusing this:\n  ?ba \\<mapsto> ?bb \\<Longrightarrow>\n   s[?b::=?ba] \\<mapsto>\\<^sup>* s[?b::=?bb] \n  ?ba \\<mapsto> ?bb \\<Longrightarrow>\n   t[?b::=?ba] \\<mapsto>\\<^sup>* t[?b::=?bb] \n  p \\<mapsto> p'\n\ngoal (1 subgoal):\n 1.  App (s[x::=p'])\n      (t[x::=p]) \\<mapsto>\\<^sup>* App (s[x::=p']) (t[x::=p'])", "by (auto intro: r2_trans)"], ["proof (state)\nthis:\n   App (s[x::=p']) (t[x::=p]) \\<mapsto>\\<^sup>* App (s[x::=p']) (t[x::=p']) \n\ngoal (5 subgoals):\n 1. \\<And>name x p p'.\n       p \\<mapsto> p' \\<Longrightarrow>\n        Var name[x::=p] \\<mapsto>\\<^sup>* Var name[x::=p'] \n 2. \\<And>trm1 trm2 x p p'.\n       \\<lbrakk>\\<And>b ba bb.\n                   ba \\<mapsto> bb \\<Longrightarrow>\n                    trm1[b::=ba] \\<mapsto>\\<^sup>* trm1[b::=bb] ;\n        \\<And>b ba bb.\n           ba \\<mapsto> bb \\<Longrightarrow>\n            trm2[b::=ba] \\<mapsto>\\<^sup>* trm2[b::=bb] ;\n        p \\<mapsto> p'\\<rbrakk>\n       \\<Longrightarrow>  App trm1\n                           trm2[x::=p] \\<mapsto>\\<^sup>* App trm1\n                    trm2[x::=p'] \n 3. \\<And>name trm x p p'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> p; name \\<sharp> p';\n        \\<And>b ba bb.\n           ba \\<mapsto> bb \\<Longrightarrow>\n            trm[b::=ba] \\<mapsto>\\<^sup>* trm[b::=bb] ;\n        p \\<mapsto> p'\\<rbrakk>\n       \\<Longrightarrow>  (\\<Lambda> name . trm)[x::=p] \\<mapsto>\\<^sup>* (\\<Lambda> name . trm)[x::=p'] \n 4. \\<And>trm1 name trm2 x p p'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> p; name \\<sharp> p';\n        name \\<sharp> trm1;\n        \\<And>b ba bb.\n           ba \\<mapsto> bb \\<Longrightarrow>\n            trm1[b::=ba] \\<mapsto>\\<^sup>* trm1[b::=bb] ;\n        \\<And>b ba bb.\n           ba \\<mapsto> bb \\<Longrightarrow>\n            trm2[b::=ba] \\<mapsto>\\<^sup>* trm2[b::=bb] ;\n        p \\<mapsto> p'\\<rbrakk>\n       \\<Longrightarrow>  (trm1 to name in trm2)[x::=p] \\<mapsto>\\<^sup>* (trm1 to name in trm2)[x::=p'] \n 5. \\<And>trm x p p'.\n       \\<lbrakk>\\<And>b ba bb.\n                   ba \\<mapsto> bb \\<Longrightarrow>\n                    trm[b::=ba] \\<mapsto>\\<^sup>* trm[b::=bb] ;\n        p \\<mapsto> p'\\<rbrakk>\n       \\<Longrightarrow>  [trm][x::=p] \\<mapsto>\\<^sup>* [trm][x::=p']", "finally"], ["proof (chain)\npicking this:\n   App (s[x::=p]) (t[x::=p]) \\<mapsto>\\<^sup>* App (s[x::=p']) (t[x::=p'])", "show ?case"], ["proof (prove)\nusing this:\n   App (s[x::=p]) (t[x::=p]) \\<mapsto>\\<^sup>* App (s[x::=p']) (t[x::=p']) \n\ngoal (1 subgoal):\n 1.  App s t[x::=p] \\<mapsto>\\<^sup>* App s t[x::=p']", "by auto"], ["proof (state)\nthis:\n   App s t[x::=p] \\<mapsto>\\<^sup>* App s t[x::=p'] \n\ngoal (4 subgoals):\n 1. \\<And>name x p p'.\n       p \\<mapsto> p' \\<Longrightarrow>\n        Var name[x::=p] \\<mapsto>\\<^sup>* Var name[x::=p'] \n 2. \\<And>name trm x p p'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> p; name \\<sharp> p';\n        \\<And>b ba bb.\n           ba \\<mapsto> bb \\<Longrightarrow>\n            trm[b::=ba] \\<mapsto>\\<^sup>* trm[b::=bb] ;\n        p \\<mapsto> p'\\<rbrakk>\n       \\<Longrightarrow>  (\\<Lambda> name . trm)[x::=p] \\<mapsto>\\<^sup>* (\\<Lambda> name . trm)[x::=p'] \n 3. \\<And>trm1 name trm2 x p p'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> p; name \\<sharp> p';\n        name \\<sharp> trm1;\n        \\<And>b ba bb.\n           ba \\<mapsto> bb \\<Longrightarrow>\n            trm1[b::=ba] \\<mapsto>\\<^sup>* trm1[b::=bb] ;\n        \\<And>b ba bb.\n           ba \\<mapsto> bb \\<Longrightarrow>\n            trm2[b::=ba] \\<mapsto>\\<^sup>* trm2[b::=bb] ;\n        p \\<mapsto> p'\\<rbrakk>\n       \\<Longrightarrow>  (trm1 to name in trm2)[x::=p] \\<mapsto>\\<^sup>* (trm1 to name in trm2)[x::=p'] \n 4. \\<And>trm x p p'.\n       \\<lbrakk>\\<And>b ba bb.\n                   ba \\<mapsto> bb \\<Longrightarrow>\n                    trm[b::=ba] \\<mapsto>\\<^sup>* trm[b::=bb] ;\n        p \\<mapsto> p'\\<rbrakk>\n       \\<Longrightarrow>  [trm][x::=p] \\<mapsto>\\<^sup>* [trm][x::=p']", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>name x p p'.\n       p \\<mapsto> p' \\<Longrightarrow>\n        Var name[x::=p] \\<mapsto>\\<^sup>* Var name[x::=p'] \n 2. \\<And>name trm x p p'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> p; name \\<sharp> p';\n        \\<And>b ba bb.\n           ba \\<mapsto> bb \\<Longrightarrow>\n            trm[b::=ba] \\<mapsto>\\<^sup>* trm[b::=bb] ;\n        p \\<mapsto> p'\\<rbrakk>\n       \\<Longrightarrow>  (\\<Lambda> name . trm)[x::=p] \\<mapsto>\\<^sup>* (\\<Lambda> name . trm)[x::=p'] \n 3. \\<And>trm1 name trm2 x p p'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> p; name \\<sharp> p';\n        name \\<sharp> trm1;\n        \\<And>b ba bb.\n           ba \\<mapsto> bb \\<Longrightarrow>\n            trm1[b::=ba] \\<mapsto>\\<^sup>* trm1[b::=bb] ;\n        \\<And>b ba bb.\n           ba \\<mapsto> bb \\<Longrightarrow>\n            trm2[b::=ba] \\<mapsto>\\<^sup>* trm2[b::=bb] ;\n        p \\<mapsto> p'\\<rbrakk>\n       \\<Longrightarrow>  (trm1 to name in trm2)[x::=p] \\<mapsto>\\<^sup>* (trm1 to name in trm2)[x::=p'] \n 4. \\<And>trm x p p'.\n       \\<lbrakk>\\<And>b ba bb.\n                   ba \\<mapsto> bb \\<Longrightarrow>\n                    trm[b::=ba] \\<mapsto>\\<^sup>* trm[b::=bb] ;\n        p \\<mapsto> p'\\<rbrakk>\n       \\<Longrightarrow>  [trm][x::=p] \\<mapsto>\\<^sup>* [trm][x::=p']", "case (To s y n)"], ["proof (state)\nthis:\n  y \\<sharp> x\n  y \\<sharp> p\n  y \\<sharp> p'\n  y \\<sharp> s\n  ?ba \\<mapsto> ?bb \\<Longrightarrow>\n   s[?b::=?ba] \\<mapsto>\\<^sup>* s[?b::=?bb] \n  ?ba \\<mapsto> ?bb \\<Longrightarrow>\n   n[?b::=?ba] \\<mapsto>\\<^sup>* n[?b::=?bb] \n  p \\<mapsto> p'\n\ngoal (4 subgoals):\n 1. \\<And>name x p p'.\n       p \\<mapsto> p' \\<Longrightarrow>\n        Var name[x::=p] \\<mapsto>\\<^sup>* Var name[x::=p'] \n 2. \\<And>name trm x p p'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> p; name \\<sharp> p';\n        \\<And>b ba bb.\n           ba \\<mapsto> bb \\<Longrightarrow>\n            trm[b::=ba] \\<mapsto>\\<^sup>* trm[b::=bb] ;\n        p \\<mapsto> p'\\<rbrakk>\n       \\<Longrightarrow>  (\\<Lambda> name . trm)[x::=p] \\<mapsto>\\<^sup>* (\\<Lambda> name . trm)[x::=p'] \n 3. \\<And>trm1 name trm2 x p p'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> p; name \\<sharp> p';\n        name \\<sharp> trm1;\n        \\<And>b ba bb.\n           ba \\<mapsto> bb \\<Longrightarrow>\n            trm1[b::=ba] \\<mapsto>\\<^sup>* trm1[b::=bb] ;\n        \\<And>b ba bb.\n           ba \\<mapsto> bb \\<Longrightarrow>\n            trm2[b::=ba] \\<mapsto>\\<^sup>* trm2[b::=bb] ;\n        p \\<mapsto> p'\\<rbrakk>\n       \\<Longrightarrow>  (trm1 to name in trm2)[x::=p] \\<mapsto>\\<^sup>* (trm1 to name in trm2)[x::=p'] \n 4. \\<And>trm x p p'.\n       \\<lbrakk>\\<And>b ba bb.\n                   ba \\<mapsto> bb \\<Longrightarrow>\n                    trm[b::=ba] \\<mapsto>\\<^sup>* trm[b::=bb] ;\n        p \\<mapsto> p'\\<rbrakk>\n       \\<Longrightarrow>  [trm][x::=p] \\<mapsto>\\<^sup>* [trm][x::=p']", "hence \n    \"(s[x::=p]) to y in (n[x::=p]) \\<mapsto>\\<^sup>* (s[x::=p']) to y in (n[x::=p])\""], ["proof (prove)\nusing this:\n  y \\<sharp> x\n  y \\<sharp> p\n  y \\<sharp> p'\n  y \\<sharp> s\n  ?ba \\<mapsto> ?bb \\<Longrightarrow>\n   s[?b::=?ba] \\<mapsto>\\<^sup>* s[?b::=?bb] \n  ?ba \\<mapsto> ?bb \\<Longrightarrow>\n   n[?b::=?ba] \\<mapsto>\\<^sup>* n[?b::=?bb] \n  p \\<mapsto> p'\n\ngoal (1 subgoal):\n 1.  s[x::=p] to y in n[x::=p] \\<mapsto>\\<^sup>* s[x::=p'] to y in n[x::=p]", "by (auto intro: r6_trans)"], ["proof (state)\nthis:\n   s[x::=p] to y in n[x::=p] \\<mapsto>\\<^sup>* s[x::=p'] to y in n[x::=p] \n\ngoal (4 subgoals):\n 1. \\<And>name x p p'.\n       p \\<mapsto> p' \\<Longrightarrow>\n        Var name[x::=p] \\<mapsto>\\<^sup>* Var name[x::=p'] \n 2. \\<And>name trm x p p'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> p; name \\<sharp> p';\n        \\<And>b ba bb.\n           ba \\<mapsto> bb \\<Longrightarrow>\n            trm[b::=ba] \\<mapsto>\\<^sup>* trm[b::=bb] ;\n        p \\<mapsto> p'\\<rbrakk>\n       \\<Longrightarrow>  (\\<Lambda> name . trm)[x::=p] \\<mapsto>\\<^sup>* (\\<Lambda> name . trm)[x::=p'] \n 3. \\<And>trm1 name trm2 x p p'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> p; name \\<sharp> p';\n        name \\<sharp> trm1;\n        \\<And>b ba bb.\n           ba \\<mapsto> bb \\<Longrightarrow>\n            trm1[b::=ba] \\<mapsto>\\<^sup>* trm1[b::=bb] ;\n        \\<And>b ba bb.\n           ba \\<mapsto> bb \\<Longrightarrow>\n            trm2[b::=ba] \\<mapsto>\\<^sup>* trm2[b::=bb] ;\n        p \\<mapsto> p'\\<rbrakk>\n       \\<Longrightarrow>  (trm1 to name in trm2)[x::=p] \\<mapsto>\\<^sup>* (trm1 to name in trm2)[x::=p'] \n 4. \\<And>trm x p p'.\n       \\<lbrakk>\\<And>b ba bb.\n                   ba \\<mapsto> bb \\<Longrightarrow>\n                    trm[b::=ba] \\<mapsto>\\<^sup>* trm[b::=bb] ;\n        p \\<mapsto> p'\\<rbrakk>\n       \\<Longrightarrow>  [trm][x::=p] \\<mapsto>\\<^sup>* [trm][x::=p']", "also"], ["proof (state)\nthis:\n   s[x::=p] to y in n[x::=p] \\<mapsto>\\<^sup>* s[x::=p'] to y in n[x::=p] \n\ngoal (4 subgoals):\n 1. \\<And>name x p p'.\n       p \\<mapsto> p' \\<Longrightarrow>\n        Var name[x::=p] \\<mapsto>\\<^sup>* Var name[x::=p'] \n 2. \\<And>name trm x p p'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> p; name \\<sharp> p';\n        \\<And>b ba bb.\n           ba \\<mapsto> bb \\<Longrightarrow>\n            trm[b::=ba] \\<mapsto>\\<^sup>* trm[b::=bb] ;\n        p \\<mapsto> p'\\<rbrakk>\n       \\<Longrightarrow>  (\\<Lambda> name . trm)[x::=p] \\<mapsto>\\<^sup>* (\\<Lambda> name . trm)[x::=p'] \n 3. \\<And>trm1 name trm2 x p p'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> p; name \\<sharp> p';\n        name \\<sharp> trm1;\n        \\<And>b ba bb.\n           ba \\<mapsto> bb \\<Longrightarrow>\n            trm1[b::=ba] \\<mapsto>\\<^sup>* trm1[b::=bb] ;\n        \\<And>b ba bb.\n           ba \\<mapsto> bb \\<Longrightarrow>\n            trm2[b::=ba] \\<mapsto>\\<^sup>* trm2[b::=bb] ;\n        p \\<mapsto> p'\\<rbrakk>\n       \\<Longrightarrow>  (trm1 to name in trm2)[x::=p] \\<mapsto>\\<^sup>* (trm1 to name in trm2)[x::=p'] \n 4. \\<And>trm x p p'.\n       \\<lbrakk>\\<And>b ba bb.\n                   ba \\<mapsto> bb \\<Longrightarrow>\n                    trm[b::=ba] \\<mapsto>\\<^sup>* trm[b::=bb] ;\n        p \\<mapsto> p'\\<rbrakk>\n       \\<Longrightarrow>  [trm][x::=p] \\<mapsto>\\<^sup>* [trm][x::=p']", "from To"], ["proof (chain)\npicking this:\n  y \\<sharp> x\n  y \\<sharp> p\n  y \\<sharp> p'\n  y \\<sharp> s\n  ?ba \\<mapsto> ?bb \\<Longrightarrow>\n   s[?b::=?ba] \\<mapsto>\\<^sup>* s[?b::=?bb] \n  ?ba \\<mapsto> ?bb \\<Longrightarrow>\n   n[?b::=?ba] \\<mapsto>\\<^sup>* n[?b::=?bb] \n  p \\<mapsto> p'", "have \" \\<dots> \\<mapsto>\\<^sup>* (s[x::=p']) to y in (n[x::=p']) \""], ["proof (prove)\nusing this:\n  y \\<sharp> x\n  y \\<sharp> p\n  y \\<sharp> p'\n  y \\<sharp> s\n  ?ba \\<mapsto> ?bb \\<Longrightarrow>\n   s[?b::=?ba] \\<mapsto>\\<^sup>* s[?b::=?bb] \n  ?ba \\<mapsto> ?bb \\<Longrightarrow>\n   n[?b::=?ba] \\<mapsto>\\<^sup>* n[?b::=?bb] \n  p \\<mapsto> p'\n\ngoal (1 subgoal):\n 1.  s[x::=p'] to y in n[x::=p] \\<mapsto>\\<^sup>* s[x::=p'] to y in n[x::=p']", "by (auto intro: r7_trans)"], ["proof (state)\nthis:\n   s[x::=p'] to y in n[x::=p] \\<mapsto>\\<^sup>* s[x::=p'] to y in n[x::=p'] \n\ngoal (4 subgoals):\n 1. \\<And>name x p p'.\n       p \\<mapsto> p' \\<Longrightarrow>\n        Var name[x::=p] \\<mapsto>\\<^sup>* Var name[x::=p'] \n 2. \\<And>name trm x p p'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> p; name \\<sharp> p';\n        \\<And>b ba bb.\n           ba \\<mapsto> bb \\<Longrightarrow>\n            trm[b::=ba] \\<mapsto>\\<^sup>* trm[b::=bb] ;\n        p \\<mapsto> p'\\<rbrakk>\n       \\<Longrightarrow>  (\\<Lambda> name . trm)[x::=p] \\<mapsto>\\<^sup>* (\\<Lambda> name . trm)[x::=p'] \n 3. \\<And>trm1 name trm2 x p p'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> p; name \\<sharp> p';\n        name \\<sharp> trm1;\n        \\<And>b ba bb.\n           ba \\<mapsto> bb \\<Longrightarrow>\n            trm1[b::=ba] \\<mapsto>\\<^sup>* trm1[b::=bb] ;\n        \\<And>b ba bb.\n           ba \\<mapsto> bb \\<Longrightarrow>\n            trm2[b::=ba] \\<mapsto>\\<^sup>* trm2[b::=bb] ;\n        p \\<mapsto> p'\\<rbrakk>\n       \\<Longrightarrow>  (trm1 to name in trm2)[x::=p] \\<mapsto>\\<^sup>* (trm1 to name in trm2)[x::=p'] \n 4. \\<And>trm x p p'.\n       \\<lbrakk>\\<And>b ba bb.\n                   ba \\<mapsto> bb \\<Longrightarrow>\n                    trm[b::=ba] \\<mapsto>\\<^sup>* trm[b::=bb] ;\n        p \\<mapsto> p'\\<rbrakk>\n       \\<Longrightarrow>  [trm][x::=p] \\<mapsto>\\<^sup>* [trm][x::=p']", "finally"], ["proof (chain)\npicking this:\n   s[x::=p] to y in n[x::=p] \\<mapsto>\\<^sup>* s[x::=p'] to y in n[x::=p']", "show ?case"], ["proof (prove)\nusing this:\n   s[x::=p] to y in n[x::=p] \\<mapsto>\\<^sup>* s[x::=p'] to y in n[x::=p'] \n\ngoal (1 subgoal):\n 1.  (s to y in n)[x::=p] \\<mapsto>\\<^sup>* (s to y in n)[x::=p']", "using To"], ["proof (prove)\nusing this:\n   s[x::=p] to y in n[x::=p] \\<mapsto>\\<^sup>* s[x::=p'] to y in n[x::=p'] \n  y \\<sharp> x\n  y \\<sharp> p\n  y \\<sharp> p'\n  y \\<sharp> s\n  ?ba \\<mapsto> ?bb \\<Longrightarrow>\n   s[?b::=?ba] \\<mapsto>\\<^sup>* s[?b::=?bb] \n  ?ba \\<mapsto> ?bb \\<Longrightarrow>\n   n[?b::=?ba] \\<mapsto>\\<^sup>* n[?b::=?bb] \n  p \\<mapsto> p'\n\ngoal (1 subgoal):\n 1.  (s to y in n)[x::=p] \\<mapsto>\\<^sup>* (s to y in n)[x::=p']", "by auto"], ["proof (state)\nthis:\n   (s to y in n)[x::=p] \\<mapsto>\\<^sup>* (s to y in n)[x::=p'] \n\ngoal (3 subgoals):\n 1. \\<And>name x p p'.\n       p \\<mapsto> p' \\<Longrightarrow>\n        Var name[x::=p] \\<mapsto>\\<^sup>* Var name[x::=p'] \n 2. \\<And>name trm x p p'.\n       \\<lbrakk>name \\<sharp> x; name \\<sharp> p; name \\<sharp> p';\n        \\<And>b ba bb.\n           ba \\<mapsto> bb \\<Longrightarrow>\n            trm[b::=ba] \\<mapsto>\\<^sup>* trm[b::=bb] ;\n        p \\<mapsto> p'\\<rbrakk>\n       \\<Longrightarrow>  (\\<Lambda> name . trm)[x::=p] \\<mapsto>\\<^sup>* (\\<Lambda> name . trm)[x::=p'] \n 3. \\<And>trm x p p'.\n       \\<lbrakk>\\<And>b ba bb.\n                   ba \\<mapsto> bb \\<Longrightarrow>\n                    trm[b::=ba] \\<mapsto>\\<^sup>* trm[b::=bb] ;\n        p \\<mapsto> p'\\<rbrakk>\n       \\<Longrightarrow>  [trm][x::=p] \\<mapsto>\\<^sup>* [trm][x::=p']", "qed (auto intro:red_trans)"], ["", "lemma SN_trans : \"\\<lbrakk>  p \\<mapsto>\\<^sup>* p' ; SN p \\<rbrakk> \\<Longrightarrow> SN p' \""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk> p \\<mapsto>\\<^sup>* p' ; SN p\\<rbrakk> \\<Longrightarrow> SN p'", "by (induct rule: rtranclp_induct) (auto intro: SN_preserved)"], ["", "subsection \\<open>Central lemma\\<close>"], ["", "text_raw \\<open>\\label{sec:central}\\<close>"], ["", "text \\<open>Now we have everything in place we need to tackle the central ``Lemma\n7'' of \\cite{TT-lifting} (cf. Figure~\\ref{fig:lemma7}). The proof is quite long,\nbut for the most part, the reasoning is that of \\cite{TT-lifting}.\\<close>"], ["", "lemma to_RED_aux: \n  assumes p: \"SN p\"\n  and x: \"x \\<sharp> p\"   \"x \\<sharp> k\"\n  and npk: \" SN (n[x::=p] \\<star> k)\"\n  shows \"SN (([p] to x in n) \\<star> k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN (([p] to x in n) \\<star> k)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. SN (([p] to x in n) \\<star> k)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. SN (([p] to x in n) \\<star> k)", "fix q"], ["proof (state)\ngoal (1 subgoal):\n 1. SN (([p] to x in n) \\<star> k)", "assume \"SN q\""], ["proof (state)\nthis:\n  SN q\n\ngoal (1 subgoal):\n 1. SN (([p] to x in n) \\<star> k)", "with p"], ["proof (chain)\npicking this:\n  SN p\n  SN q", "have  \"\\<And> m . \\<lbrakk> q = m \\<star> k ; SN(m[x::=p] \\<star> k) \\<rbrakk> \n               \\<Longrightarrow> SN (([p] to x in m) \\<star> k)\""], ["proof (prove)\nusing this:\n  SN p\n  SN q\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>q = m \\<star> k; SN (m[x::=p] \\<star> k)\\<rbrakk>\n       \\<Longrightarrow> SN (([p] to x in m) \\<star> k)", "using x"], ["proof (prove)\nusing this:\n  SN p\n  SN q\n  x \\<sharp> p\n  x \\<sharp> k\n\ngoal (1 subgoal):\n 1. \\<And>m.\n       \\<lbrakk>q = m \\<star> k; SN (m[x::=p] \\<star> k)\\<rbrakk>\n       \\<Longrightarrow> SN (([p] to x in m) \\<star> k)", "proof (induct p q rule:triple_induct[where k=\"k\"])"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p q k m.\n       \\<lbrakk>\\<And>p' m.\n                   \\<lbrakk>p \\<mapsto> p'; q = m \\<star> k;\n                    SN (m[x::=p'] \\<star> k); x \\<sharp> p';\n                    x \\<sharp> k\\<rbrakk>\n                   \\<Longrightarrow> SN (([p'] to x in m) \\<star> k);\n        \\<And>q' k m.\n           \\<lbrakk>q \\<mapsto> q'; q' = m \\<star> k;\n            SN (m[x::=p] \\<star> k); x \\<sharp> p; x \\<sharp> k\\<rbrakk>\n           \\<Longrightarrow> SN (([p] to x in m) \\<star> k);\n        \\<And>k' m.\n           \\<lbrakk>|k'| < |k|; q = m \\<star> k'; SN (m[x::=p] \\<star> k');\n            x \\<sharp> p; x \\<sharp> k'\\<rbrakk>\n           \\<Longrightarrow> SN (([p] to x in m) \\<star> k');\n        q = m \\<star> k; SN (m[x::=p] \\<star> k); x \\<sharp> p;\n        x \\<sharp> k\\<rbrakk>\n       \\<Longrightarrow> SN (([p] to x in m) \\<star> k)", "case (1 p q k) \\<comment> \\<open>We obtain an induction hypothesis for $p$, $q$, and\n$k$.\\<close>"], ["proof (state)\nthis:\n  \\<lbrakk>p \\<mapsto> ?p'; q = ?m \\<star> k; SN (?m[x::=?p'] \\<star> k);\n   x \\<sharp> ?p'; x \\<sharp> k\\<rbrakk>\n  \\<Longrightarrow> SN (([?p'] to x in ?m) \\<star> k)\n  \\<lbrakk>q \\<mapsto> ?q'; ?q' = ?m \\<star> ?k; SN (?m[x::=p] \\<star> ?k);\n   x \\<sharp> p; x \\<sharp> ?k\\<rbrakk>\n  \\<Longrightarrow> SN (([p] to x in ?m) \\<star> ?k)\n  \\<lbrakk>|?k'| < |k|; q = ?m \\<star> ?k'; SN (?m[x::=p] \\<star> ?k');\n   x \\<sharp> p; x \\<sharp> ?k'\\<rbrakk>\n  \\<Longrightarrow> SN (([p] to x in ?m) \\<star> ?k')\n  q = m \\<star> k\n  SN (m[x::=p] \\<star> k)\n  x \\<sharp> p\n  x \\<sharp> k\n\ngoal (1 subgoal):\n 1. \\<And>p q k m.\n       \\<lbrakk>\\<And>p' m.\n                   \\<lbrakk>p \\<mapsto> p'; q = m \\<star> k;\n                    SN (m[x::=p'] \\<star> k); x \\<sharp> p';\n                    x \\<sharp> k\\<rbrakk>\n                   \\<Longrightarrow> SN (([p'] to x in m) \\<star> k);\n        \\<And>q' k m.\n           \\<lbrakk>q \\<mapsto> q'; q' = m \\<star> k;\n            SN (m[x::=p] \\<star> k); x \\<sharp> p; x \\<sharp> k\\<rbrakk>\n           \\<Longrightarrow> SN (([p] to x in m) \\<star> k);\n        \\<And>k' m.\n           \\<lbrakk>|k'| < |k|; q = m \\<star> k'; SN (m[x::=p] \\<star> k');\n            x \\<sharp> p; x \\<sharp> k'\\<rbrakk>\n           \\<Longrightarrow> SN (([p] to x in m) \\<star> k');\n        q = m \\<star> k; SN (m[x::=p] \\<star> k); x \\<sharp> p;\n        x \\<sharp> k\\<rbrakk>\n       \\<Longrightarrow> SN (([p] to x in m) \\<star> k)", "have ih_p: \n        \"\\<And> p' m . \\<lbrakk>p \\<mapsto> p'; q = m \\<star> k; SN (m[x::=p'] \\<star> k); x \\<sharp> p'; x \\<sharp> k\\<rbrakk>\n            \\<Longrightarrow> SN (([p'] to x in m) \\<star> k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p' m.\n       \\<lbrakk>p \\<mapsto> p'; q = m \\<star> k; SN (m[x::=p'] \\<star> k);\n        x \\<sharp> p'; x \\<sharp> k\\<rbrakk>\n       \\<Longrightarrow> SN (([p'] to x in m) \\<star> k)", "by fact"], ["proof (state)\nthis:\n  \\<lbrakk>p \\<mapsto> ?p'; q = ?m \\<star> k; SN (?m[x::=?p'] \\<star> k);\n   x \\<sharp> ?p'; x \\<sharp> k\\<rbrakk>\n  \\<Longrightarrow> SN (([?p'] to x in ?m) \\<star> k)\n\ngoal (1 subgoal):\n 1. \\<And>p q k m.\n       \\<lbrakk>\\<And>p' m.\n                   \\<lbrakk>p \\<mapsto> p'; q = m \\<star> k;\n                    SN (m[x::=p'] \\<star> k); x \\<sharp> p';\n                    x \\<sharp> k\\<rbrakk>\n                   \\<Longrightarrow> SN (([p'] to x in m) \\<star> k);\n        \\<And>q' k m.\n           \\<lbrakk>q \\<mapsto> q'; q' = m \\<star> k;\n            SN (m[x::=p] \\<star> k); x \\<sharp> p; x \\<sharp> k\\<rbrakk>\n           \\<Longrightarrow> SN (([p] to x in m) \\<star> k);\n        \\<And>k' m.\n           \\<lbrakk>|k'| < |k|; q = m \\<star> k'; SN (m[x::=p] \\<star> k');\n            x \\<sharp> p; x \\<sharp> k'\\<rbrakk>\n           \\<Longrightarrow> SN (([p] to x in m) \\<star> k');\n        q = m \\<star> k; SN (m[x::=p] \\<star> k); x \\<sharp> p;\n        x \\<sharp> k\\<rbrakk>\n       \\<Longrightarrow> SN (([p] to x in m) \\<star> k)", "have ih_q: \n        \"\\<And> q' m k . \\<lbrakk>q \\<mapsto> q'; q' = m \\<star> k; SN (m[x::=p] \\<star> k); x \\<sharp> p; x \\<sharp> k\\<rbrakk>\n            \\<Longrightarrow> SN (([p] to x in m) \\<star> k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>q' m k.\n       \\<lbrakk>q \\<mapsto> q'; q' = m \\<star> k; SN (m[x::=p] \\<star> k);\n        x \\<sharp> p; x \\<sharp> k\\<rbrakk>\n       \\<Longrightarrow> SN (([p] to x in m) \\<star> k)", "by fact"], ["proof (state)\nthis:\n  \\<lbrakk>q \\<mapsto> ?q'; ?q' = ?m \\<star> ?k; SN (?m[x::=p] \\<star> ?k);\n   x \\<sharp> p; x \\<sharp> ?k\\<rbrakk>\n  \\<Longrightarrow> SN (([p] to x in ?m) \\<star> ?k)\n\ngoal (1 subgoal):\n 1. \\<And>p q k m.\n       \\<lbrakk>\\<And>p' m.\n                   \\<lbrakk>p \\<mapsto> p'; q = m \\<star> k;\n                    SN (m[x::=p'] \\<star> k); x \\<sharp> p';\n                    x \\<sharp> k\\<rbrakk>\n                   \\<Longrightarrow> SN (([p'] to x in m) \\<star> k);\n        \\<And>q' k m.\n           \\<lbrakk>q \\<mapsto> q'; q' = m \\<star> k;\n            SN (m[x::=p] \\<star> k); x \\<sharp> p; x \\<sharp> k\\<rbrakk>\n           \\<Longrightarrow> SN (([p] to x in m) \\<star> k);\n        \\<And>k' m.\n           \\<lbrakk>|k'| < |k|; q = m \\<star> k'; SN (m[x::=p] \\<star> k');\n            x \\<sharp> p; x \\<sharp> k'\\<rbrakk>\n           \\<Longrightarrow> SN (([p] to x in m) \\<star> k');\n        q = m \\<star> k; SN (m[x::=p] \\<star> k); x \\<sharp> p;\n        x \\<sharp> k\\<rbrakk>\n       \\<Longrightarrow> SN (([p] to x in m) \\<star> k)", "have ih_k: \n        \"\\<And> k' m . \\<lbrakk> |k'| < |k|; q = m \\<star> k'; SN (m[x::=p] \\<star> k'); x \\<sharp> p; x \\<sharp> k'\\<rbrakk>\n            \\<Longrightarrow> SN (([p] to x in m) \\<star> k')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>k' m.\n       \\<lbrakk>|k'| < |k|; q = m \\<star> k'; SN (m[x::=p] \\<star> k');\n        x \\<sharp> p; x \\<sharp> k'\\<rbrakk>\n       \\<Longrightarrow> SN (([p] to x in m) \\<star> k')", "by fact"], ["proof (state)\nthis:\n  \\<lbrakk>|?k'| < |k|; q = ?m \\<star> ?k'; SN (?m[x::=p] \\<star> ?k');\n   x \\<sharp> p; x \\<sharp> ?k'\\<rbrakk>\n  \\<Longrightarrow> SN (([p] to x in ?m) \\<star> ?k')\n\ngoal (1 subgoal):\n 1. \\<And>p q k m.\n       \\<lbrakk>\\<And>p' m.\n                   \\<lbrakk>p \\<mapsto> p'; q = m \\<star> k;\n                    SN (m[x::=p'] \\<star> k); x \\<sharp> p';\n                    x \\<sharp> k\\<rbrakk>\n                   \\<Longrightarrow> SN (([p'] to x in m) \\<star> k);\n        \\<And>q' k m.\n           \\<lbrakk>q \\<mapsto> q'; q' = m \\<star> k;\n            SN (m[x::=p] \\<star> k); x \\<sharp> p; x \\<sharp> k\\<rbrakk>\n           \\<Longrightarrow> SN (([p] to x in m) \\<star> k);\n        \\<And>k' m.\n           \\<lbrakk>|k'| < |k|; q = m \\<star> k'; SN (m[x::=p] \\<star> k');\n            x \\<sharp> p; x \\<sharp> k'\\<rbrakk>\n           \\<Longrightarrow> SN (([p] to x in m) \\<star> k');\n        q = m \\<star> k; SN (m[x::=p] \\<star> k); x \\<sharp> p;\n        x \\<sharp> k\\<rbrakk>\n       \\<Longrightarrow> SN (([p] to x in m) \\<star> k)", "have q: \"q = m \\<star> k\" and sn: \"SN (m[x::=p] \\<star> k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q = m \\<star> k &&& SN (m[x::=p] \\<star> k)", "by fact+"], ["proof (state)\nthis:\n  q = m \\<star> k\n  SN (m[x::=p] \\<star> k)\n\ngoal (1 subgoal):\n 1. \\<And>p q k m.\n       \\<lbrakk>\\<And>p' m.\n                   \\<lbrakk>p \\<mapsto> p'; q = m \\<star> k;\n                    SN (m[x::=p'] \\<star> k); x \\<sharp> p';\n                    x \\<sharp> k\\<rbrakk>\n                   \\<Longrightarrow> SN (([p'] to x in m) \\<star> k);\n        \\<And>q' k m.\n           \\<lbrakk>q \\<mapsto> q'; q' = m \\<star> k;\n            SN (m[x::=p] \\<star> k); x \\<sharp> p; x \\<sharp> k\\<rbrakk>\n           \\<Longrightarrow> SN (([p] to x in m) \\<star> k);\n        \\<And>k' m.\n           \\<lbrakk>|k'| < |k|; q = m \\<star> k'; SN (m[x::=p] \\<star> k');\n            x \\<sharp> p; x \\<sharp> k'\\<rbrakk>\n           \\<Longrightarrow> SN (([p] to x in m) \\<star> k');\n        q = m \\<star> k; SN (m[x::=p] \\<star> k); x \\<sharp> p;\n        x \\<sharp> k\\<rbrakk>\n       \\<Longrightarrow> SN (([p] to x in m) \\<star> k)", "have xp: \"x \\<sharp> p\" and xk: \"x \\<sharp> k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> p &&& x \\<sharp> k", "by fact+"], ["proof (state)\nthis:\n  x \\<sharp> p\n  x \\<sharp> k\n\ngoal (1 subgoal):\n 1. \\<And>p q k m.\n       \\<lbrakk>\\<And>p' m.\n                   \\<lbrakk>p \\<mapsto> p'; q = m \\<star> k;\n                    SN (m[x::=p'] \\<star> k); x \\<sharp> p';\n                    x \\<sharp> k\\<rbrakk>\n                   \\<Longrightarrow> SN (([p'] to x in m) \\<star> k);\n        \\<And>q' k m.\n           \\<lbrakk>q \\<mapsto> q'; q' = m \\<star> k;\n            SN (m[x::=p] \\<star> k); x \\<sharp> p; x \\<sharp> k\\<rbrakk>\n           \\<Longrightarrow> SN (([p] to x in m) \\<star> k);\n        \\<And>k' m.\n           \\<lbrakk>|k'| < |k|; q = m \\<star> k'; SN (m[x::=p] \\<star> k');\n            x \\<sharp> p; x \\<sharp> k'\\<rbrakk>\n           \\<Longrightarrow> SN (([p] to x in m) \\<star> k');\n        q = m \\<star> k; SN (m[x::=p] \\<star> k); x \\<sharp> p;\n        x \\<sharp> k\\<rbrakk>\n       \\<Longrightarrow> SN (([p] to x in m) \\<star> k)", "txt \\<open>Once again we want to reason via case distinction on the successors of a\nterm including a dismantling operator. Since this time we also need to handle\nthe cases where interactions occur, we want to use the strengthened case\nrule. We already require $x$ to be suitably fresh. To instantiate the rule, we\nneed another fresh name.\\<close>"], ["proof (state)\nthis:\n  x \\<sharp> p\n  x \\<sharp> k\n\ngoal (1 subgoal):\n 1. \\<And>p q k m.\n       \\<lbrakk>\\<And>p' m.\n                   \\<lbrakk>p \\<mapsto> p'; q = m \\<star> k;\n                    SN (m[x::=p'] \\<star> k); x \\<sharp> p';\n                    x \\<sharp> k\\<rbrakk>\n                   \\<Longrightarrow> SN (([p'] to x in m) \\<star> k);\n        \\<And>q' k m.\n           \\<lbrakk>q \\<mapsto> q'; q' = m \\<star> k;\n            SN (m[x::=p] \\<star> k); x \\<sharp> p; x \\<sharp> k\\<rbrakk>\n           \\<Longrightarrow> SN (([p] to x in m) \\<star> k);\n        \\<And>k' m.\n           \\<lbrakk>|k'| < |k|; q = m \\<star> k'; SN (m[x::=p] \\<star> k');\n            x \\<sharp> p; x \\<sharp> k'\\<rbrakk>\n           \\<Longrightarrow> SN (([p] to x in m) \\<star> k');\n        q = m \\<star> k; SN (m[x::=p] \\<star> k); x \\<sharp> p;\n        x \\<sharp> k\\<rbrakk>\n       \\<Longrightarrow> SN (([p] to x in m) \\<star> k)", "{"], ["proof (state)\nthis:\n  x \\<sharp> p\n  x \\<sharp> k\n\ngoal (1 subgoal):\n 1. \\<And>p q k m.\n       \\<lbrakk>\\<And>p' m.\n                   \\<lbrakk>p \\<mapsto> p'; q = m \\<star> k;\n                    SN (m[x::=p'] \\<star> k); x \\<sharp> p';\n                    x \\<sharp> k\\<rbrakk>\n                   \\<Longrightarrow> SN (([p'] to x in m) \\<star> k);\n        \\<And>q' k m.\n           \\<lbrakk>q \\<mapsto> q'; q' = m \\<star> k;\n            SN (m[x::=p] \\<star> k); x \\<sharp> p; x \\<sharp> k\\<rbrakk>\n           \\<Longrightarrow> SN (([p] to x in m) \\<star> k);\n        \\<And>k' m.\n           \\<lbrakk>|k'| < |k|; q = m \\<star> k'; SN (m[x::=p] \\<star> k');\n            x \\<sharp> p; x \\<sharp> k'\\<rbrakk>\n           \\<Longrightarrow> SN (([p] to x in m) \\<star> k');\n        q = m \\<star> k; SN (m[x::=p] \\<star> k); x \\<sharp> p;\n        x \\<sharp> k\\<rbrakk>\n       \\<Longrightarrow> SN (([p] to x in m) \\<star> k)", "fix r"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p q k m.\n       \\<lbrakk>\\<And>p' m.\n                   \\<lbrakk>p \\<mapsto> p'; q = m \\<star> k;\n                    SN (m[x::=p'] \\<star> k); x \\<sharp> p';\n                    x \\<sharp> k\\<rbrakk>\n                   \\<Longrightarrow> SN (([p'] to x in m) \\<star> k);\n        \\<And>q' k m.\n           \\<lbrakk>q \\<mapsto> q'; q' = m \\<star> k;\n            SN (m[x::=p] \\<star> k); x \\<sharp> p; x \\<sharp> k\\<rbrakk>\n           \\<Longrightarrow> SN (([p] to x in m) \\<star> k);\n        \\<And>k' m.\n           \\<lbrakk>|k'| < |k|; q = m \\<star> k'; SN (m[x::=p] \\<star> k');\n            x \\<sharp> p; x \\<sharp> k'\\<rbrakk>\n           \\<Longrightarrow> SN (([p] to x in m) \\<star> k');\n        q = m \\<star> k; SN (m[x::=p] \\<star> k); x \\<sharp> p;\n        x \\<sharp> k\\<rbrakk>\n       \\<Longrightarrow> SN (([p] to x in m) \\<star> k)", "assume red: \"([p] to x in m) \\<star> k \\<mapsto> r\""], ["proof (state)\nthis:\n  ([p] to x in m) \\<star> k \\<mapsto> r\n\ngoal (1 subgoal):\n 1. \\<And>p q k m.\n       \\<lbrakk>\\<And>p' m.\n                   \\<lbrakk>p \\<mapsto> p'; q = m \\<star> k;\n                    SN (m[x::=p'] \\<star> k); x \\<sharp> p';\n                    x \\<sharp> k\\<rbrakk>\n                   \\<Longrightarrow> SN (([p'] to x in m) \\<star> k);\n        \\<And>q' k m.\n           \\<lbrakk>q \\<mapsto> q'; q' = m \\<star> k;\n            SN (m[x::=p] \\<star> k); x \\<sharp> p; x \\<sharp> k\\<rbrakk>\n           \\<Longrightarrow> SN (([p] to x in m) \\<star> k);\n        \\<And>k' m.\n           \\<lbrakk>|k'| < |k|; q = m \\<star> k'; SN (m[x::=p] \\<star> k');\n            x \\<sharp> p; x \\<sharp> k'\\<rbrakk>\n           \\<Longrightarrow> SN (([p] to x in m) \\<star> k');\n        q = m \\<star> k; SN (m[x::=p] \\<star> k); x \\<sharp> p;\n        x \\<sharp> k\\<rbrakk>\n       \\<Longrightarrow> SN (([p] to x in m) \\<star> k)", "from xp xk"], ["proof (chain)\npicking this:\n  x \\<sharp> p\n  x \\<sharp> k", "have x1 : \"x \\<sharp> ([p] to x in m) \\<star> k \""], ["proof (prove)\nusing this:\n  x \\<sharp> p\n  x \\<sharp> k\n\ngoal (1 subgoal):\n 1. x \\<sharp> ([p] to x in m) \\<star> k", "by (simp add: abs_fresh)"], ["proof (state)\nthis:\n  x \\<sharp> ([p] to x in m) \\<star> k\n\ngoal (1 subgoal):\n 1. \\<And>p q k m.\n       \\<lbrakk>\\<And>p' m.\n                   \\<lbrakk>p \\<mapsto> p'; q = m \\<star> k;\n                    SN (m[x::=p'] \\<star> k); x \\<sharp> p';\n                    x \\<sharp> k\\<rbrakk>\n                   \\<Longrightarrow> SN (([p'] to x in m) \\<star> k);\n        \\<And>q' k m.\n           \\<lbrakk>q \\<mapsto> q'; q' = m \\<star> k;\n            SN (m[x::=p] \\<star> k); x \\<sharp> p; x \\<sharp> k\\<rbrakk>\n           \\<Longrightarrow> SN (([p] to x in m) \\<star> k);\n        \\<And>k' m.\n           \\<lbrakk>|k'| < |k|; q = m \\<star> k'; SN (m[x::=p] \\<star> k');\n            x \\<sharp> p; x \\<sharp> k'\\<rbrakk>\n           \\<Longrightarrow> SN (([p] to x in m) \\<star> k');\n        q = m \\<star> k; SN (m[x::=p] \\<star> k); x \\<sharp> p;\n        x \\<sharp> k\\<rbrakk>\n       \\<Longrightarrow> SN (([p] to x in m) \\<star> k)", "with red"], ["proof (chain)\npicking this:\n  ([p] to x in m) \\<star> k \\<mapsto> r\n  x \\<sharp> ([p] to x in m) \\<star> k", "have x2: \"x \\<sharp> r\""], ["proof (prove)\nusing this:\n  ([p] to x in m) \\<star> k \\<mapsto> r\n  x \\<sharp> ([p] to x in m) \\<star> k\n\ngoal (1 subgoal):\n 1. x \\<sharp> r", "by (rule reduction_fresh)"], ["proof (state)\nthis:\n  x \\<sharp> r\n\ngoal (1 subgoal):\n 1. \\<And>p q k m.\n       \\<lbrakk>\\<And>p' m.\n                   \\<lbrakk>p \\<mapsto> p'; q = m \\<star> k;\n                    SN (m[x::=p'] \\<star> k); x \\<sharp> p';\n                    x \\<sharp> k\\<rbrakk>\n                   \\<Longrightarrow> SN (([p'] to x in m) \\<star> k);\n        \\<And>q' k m.\n           \\<lbrakk>q \\<mapsto> q'; q' = m \\<star> k;\n            SN (m[x::=p] \\<star> k); x \\<sharp> p; x \\<sharp> k\\<rbrakk>\n           \\<Longrightarrow> SN (([p] to x in m) \\<star> k);\n        \\<And>k' m.\n           \\<lbrakk>|k'| < |k|; q = m \\<star> k'; SN (m[x::=p] \\<star> k');\n            x \\<sharp> p; x \\<sharp> k'\\<rbrakk>\n           \\<Longrightarrow> SN (([p] to x in m) \\<star> k');\n        q = m \\<star> k; SN (m[x::=p] \\<star> k); x \\<sharp> p;\n        x \\<sharp> k\\<rbrakk>\n       \\<Longrightarrow> SN (([p] to x in m) \\<star> k)", "obtain z::name where z: \"z \\<sharp> (x,p,m,k,r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>z.\n        z \\<sharp> (x, p, m, k, r) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using ex_fresh[of \"(x,p,m,k,r)\"]"], ["proof (prove)\nusing this:\n  \\<exists>c. c \\<sharp> (x, p, m, k, r)\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        z \\<sharp> (x, p, m, k, r) \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto simp add: fresh_prod)"], ["proof (state)\nthis:\n  z \\<sharp> (x, p, m, k, r)\n\ngoal (1 subgoal):\n 1. \\<And>p q k m.\n       \\<lbrakk>\\<And>p' m.\n                   \\<lbrakk>p \\<mapsto> p'; q = m \\<star> k;\n                    SN (m[x::=p'] \\<star> k); x \\<sharp> p';\n                    x \\<sharp> k\\<rbrakk>\n                   \\<Longrightarrow> SN (([p'] to x in m) \\<star> k);\n        \\<And>q' k m.\n           \\<lbrakk>q \\<mapsto> q'; q' = m \\<star> k;\n            SN (m[x::=p] \\<star> k); x \\<sharp> p; x \\<sharp> k\\<rbrakk>\n           \\<Longrightarrow> SN (([p] to x in m) \\<star> k);\n        \\<And>k' m.\n           \\<lbrakk>|k'| < |k|; q = m \\<star> k'; SN (m[x::=p] \\<star> k');\n            x \\<sharp> p; x \\<sharp> k'\\<rbrakk>\n           \\<Longrightarrow> SN (([p] to x in m) \\<star> k');\n        q = m \\<star> k; SN (m[x::=p] \\<star> k); x \\<sharp> p;\n        x \\<sharp> k\\<rbrakk>\n       \\<Longrightarrow> SN (([p] to x in m) \\<star> k)", "have \"SN r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN r", "proof (cases rule:dismantle_strong_cases\n            [of   \"[p] to x in m\"   k r x x z ])"], ["proof (state)\ngoal (8 subgoals):\n 1. ([p] to x in m) \\<star> k \\<mapsto> r\n 2. x \\<sharp> ([p] to x in m, k, r)\n 3. x \\<sharp> (z, [p] to x in m, k, r)\n 4. z \\<sharp> ([p] to x in m, k, r)\n 5. \\<And>t'.\n       \\<lbrakk>[p] to x in m \\<mapsto> t'; r = t' \\<star> k\\<rbrakk>\n       \\<Longrightarrow> SN r\n 6. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = ([p] to x in m) \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 7. \\<And>s n l.\n       \\<lbrakk>[p] to x in m = [s]; k = [x]n\\<ggreater>l;\n        r = n[x::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r\n 8. \\<And>u v n l.\n       \\<lbrakk>x \\<sharp> (z, n); [p] to x in m = u to x in v;\n        k = [z]n\\<ggreater>l; r = (u to x in v to z in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r", "case (5 r')"], ["proof (state)\nthis:\n  [p] to x in m \\<mapsto> r'\n  r = r' \\<star> k\n\ngoal (8 subgoals):\n 1. ([p] to x in m) \\<star> k \\<mapsto> r\n 2. x \\<sharp> ([p] to x in m, k, r)\n 3. x \\<sharp> (z, [p] to x in m, k, r)\n 4. z \\<sharp> ([p] to x in m, k, r)\n 5. \\<And>t'.\n       \\<lbrakk>[p] to x in m \\<mapsto> t'; r = t' \\<star> k\\<rbrakk>\n       \\<Longrightarrow> SN r\n 6. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = ([p] to x in m) \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 7. \\<And>s n l.\n       \\<lbrakk>[p] to x in m = [s]; k = [x]n\\<ggreater>l;\n        r = n[x::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r\n 8. \\<And>u v n l.\n       \\<lbrakk>x \\<sharp> (z, n); [p] to x in m = u to x in v;\n        k = [z]n\\<ggreater>l; r = (u to x in v to z in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r", "have r: \"r = r' \\<star> k\" and r': \"[p] to x in m \\<mapsto> r'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. r = r' \\<star> k &&& [p] to x in m \\<mapsto> r'", "by fact+"], ["proof (state)\nthis:\n  r = r' \\<star> k\n  [p] to x in m \\<mapsto> r'\n\ngoal (8 subgoals):\n 1. ([p] to x in m) \\<star> k \\<mapsto> r\n 2. x \\<sharp> ([p] to x in m, k, r)\n 3. x \\<sharp> (z, [p] to x in m, k, r)\n 4. z \\<sharp> ([p] to x in m, k, r)\n 5. \\<And>t'.\n       \\<lbrakk>[p] to x in m \\<mapsto> t'; r = t' \\<star> k\\<rbrakk>\n       \\<Longrightarrow> SN r\n 6. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = ([p] to x in m) \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 7. \\<And>s n l.\n       \\<lbrakk>[p] to x in m = [s]; k = [x]n\\<ggreater>l;\n        r = n[x::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r\n 8. \\<And>u v n l.\n       \\<lbrakk>x \\<sharp> (z, n); [p] to x in m = u to x in v;\n        k = [z]n\\<ggreater>l; r = (u to x in v to z in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r", "txt \\<open>To handle the case of a reduction occurring somewhere in @{term\n\"[p] to x in m\" }, we need to contract the freshness conditions to this subterm.\nThis allows the use of the strong inversion rule for the reduction relation.\\<close>"], ["proof (state)\nthis:\n  r = r' \\<star> k\n  [p] to x in m \\<mapsto> r'\n\ngoal (8 subgoals):\n 1. ([p] to x in m) \\<star> k \\<mapsto> r\n 2. x \\<sharp> ([p] to x in m, k, r)\n 3. x \\<sharp> (z, [p] to x in m, k, r)\n 4. z \\<sharp> ([p] to x in m, k, r)\n 5. \\<And>t'.\n       \\<lbrakk>[p] to x in m \\<mapsto> t'; r = t' \\<star> k\\<rbrakk>\n       \\<Longrightarrow> SN r\n 6. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = ([p] to x in m) \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 7. \\<And>s n l.\n       \\<lbrakk>[p] to x in m = [s]; k = [x]n\\<ggreater>l;\n        r = n[x::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r\n 8. \\<And>u v n l.\n       \\<lbrakk>x \\<sharp> (z, n); [p] to x in m = u to x in v;\n        k = [z]n\\<ggreater>l; r = (u to x in v to z in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r", "from x1 x2 r"], ["proof (chain)\npicking this:\n  x \\<sharp> ([p] to x in m) \\<star> k\n  x \\<sharp> r\n  r = r' \\<star> k", "have xl:\"(x \\<sharp> [p] to x in m)\" and xr:\"x \\<sharp> r'\""], ["proof (prove)\nusing this:\n  x \\<sharp> ([p] to x in m) \\<star> k\n  x \\<sharp> r\n  r = r' \\<star> k\n\ngoal (1 subgoal):\n 1. x \\<sharp> [p] to x in m &&& x \\<sharp> r'", "by auto"], ["proof (state)\nthis:\n  x \\<sharp> [p] to x in m\n  x \\<sharp> r'\n\ngoal (8 subgoals):\n 1. ([p] to x in m) \\<star> k \\<mapsto> r\n 2. x \\<sharp> ([p] to x in m, k, r)\n 3. x \\<sharp> (z, [p] to x in m, k, r)\n 4. z \\<sharp> ([p] to x in m, k, r)\n 5. \\<And>t'.\n       \\<lbrakk>[p] to x in m \\<mapsto> t'; r = t' \\<star> k\\<rbrakk>\n       \\<Longrightarrow> SN r\n 6. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = ([p] to x in m) \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 7. \\<And>s n l.\n       \\<lbrakk>[p] to x in m = [s]; k = [x]n\\<ggreater>l;\n        r = n[x::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r\n 8. \\<And>u v n l.\n       \\<lbrakk>x \\<sharp> (z, n); [p] to x in m = u to x in v;\n        k = [z]n\\<ggreater>l; r = (u to x in v to z in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r", "from z"], ["proof (chain)\npicking this:\n  z \\<sharp> (x, p, m, k, r)", "have zl: \"z \\<sharp> ([p] to x in m)\"   \"x \\<noteq> z\""], ["proof (prove)\nusing this:\n  z \\<sharp> (x, p, m, k, r)\n\ngoal (1 subgoal):\n 1. z \\<sharp> [p] to x in m &&& x \\<noteq> z", "by (auto simp add: abs_fresh fresh_prod fresh_atm)"], ["proof (state)\nthis:\n  z \\<sharp> [p] to x in m\n  x \\<noteq> z\n\ngoal (8 subgoals):\n 1. ([p] to x in m) \\<star> k \\<mapsto> r\n 2. x \\<sharp> ([p] to x in m, k, r)\n 3. x \\<sharp> (z, [p] to x in m, k, r)\n 4. z \\<sharp> ([p] to x in m, k, r)\n 5. \\<And>t'.\n       \\<lbrakk>[p] to x in m \\<mapsto> t'; r = t' \\<star> k\\<rbrakk>\n       \\<Longrightarrow> SN r\n 6. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = ([p] to x in m) \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 7. \\<And>s n l.\n       \\<lbrakk>[p] to x in m = [s]; k = [x]n\\<ggreater>l;\n        r = n[x::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r\n 8. \\<And>u v n l.\n       \\<lbrakk>x \\<sharp> (z, n); [p] to x in m = u to x in v;\n        k = [z]n\\<ggreater>l; r = (u to x in v to z in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r", "with r'"], ["proof (chain)\npicking this:\n  [p] to x in m \\<mapsto> r'\n  z \\<sharp> [p] to x in m\n  x \\<noteq> z", "have zr: \"z \\<sharp> r'\""], ["proof (prove)\nusing this:\n  [p] to x in m \\<mapsto> r'\n  z \\<sharp> [p] to x in m\n  x \\<noteq> z\n\ngoal (1 subgoal):\n 1. z \\<sharp> r'", "by (blast intro:reduction_fresh)\n          \\<comment> \\<open>handle all reductions of @{term \"[p] to x in m\"}\\<close>"], ["proof (state)\nthis:\n  z \\<sharp> r'\n\ngoal (8 subgoals):\n 1. ([p] to x in m) \\<star> k \\<mapsto> r\n 2. x \\<sharp> ([p] to x in m, k, r)\n 3. x \\<sharp> (z, [p] to x in m, k, r)\n 4. z \\<sharp> ([p] to x in m, k, r)\n 5. \\<And>t'.\n       \\<lbrakk>[p] to x in m \\<mapsto> t'; r = t' \\<star> k\\<rbrakk>\n       \\<Longrightarrow> SN r\n 6. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = ([p] to x in m) \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 7. \\<And>s n l.\n       \\<lbrakk>[p] to x in m = [s]; k = [x]n\\<ggreater>l;\n        r = n[x::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r\n 8. \\<And>u v n l.\n       \\<lbrakk>x \\<sharp> (z, n); [p] to x in m = u to x in v;\n        k = [z]n\\<ggreater>l; r = (u to x in v to z in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r", "from r'"], ["proof (chain)\npicking this:\n  [p] to x in m \\<mapsto> r'", "show \"SN r\""], ["proof (prove)\nusing this:\n  [p] to x in m \\<mapsto> r'\n\ngoal (1 subgoal):\n 1. SN r", "proof (cases rule:reduction.strong_cases\n              [where x=\"x\" and xa=\"x\" and xb=\"x\" and xc=\"x\" and xd=\"x\" \n                and xe=\"x\" and xf=\"x\"and xg=\"x\" and y=\"z\"])"], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 2. \\<And>t t' s.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 3. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = App (\\<Lambda> x . t) s \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 4. \\<And>t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . t \\<and>\n                          r' = \\<Lambda> x . t' \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 5. \\<And>t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . App t (Var x) \\<and>\n                          r' = t \\<and> x \\<sharp> t) \\<Longrightarrow>\n       SN r\n 6. \\<And>s s' t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in t \\<and>\n                          r' = s' to x in t \\<and>\n                          x \\<sharp> (s, s') \\<and>\n                          s \\<mapsto> s') \\<Longrightarrow>\n       SN r\n 7. \\<And>s t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in t \\<and>\n                          r' = s to x in t' \\<and>\n                          x \\<sharp> s \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 8. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = [s] to x in t \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 9. \\<And>s.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in [Var x] \\<and>\n                          r' = s \\<and> x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 10. \\<And>s u t.\n        (\\<lbrakk>x \\<noteq> z; x \\<sharp> [p] to x in m; x \\<sharp> r';\n          z \\<sharp> [p] to x in m; z \\<sharp> r'\\<rbrakk>\n         \\<Longrightarrow> [p] to x in m = (s to x in t) to z in u \\<and>\n                           r' = s to x in t to z in u \\<and>\n                           x \\<sharp> (z, s, u) \\<and>\n                           z \\<sharp> (s, t)) \\<Longrightarrow>\n        SN r\nA total of 11 subgoals...", "txt \\<open>The case where @{term \"p \\<mapsto> p'\"} is interesting, because it requires\nreasioning about the reflexive transitive closure of the reduction relation.\\<close>"], ["proof (state)\ngoal (11 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 2. \\<And>t t' s.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 3. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = App (\\<Lambda> x . t) s \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 4. \\<And>t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . t \\<and>\n                          r' = \\<Lambda> x . t' \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 5. \\<And>t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . App t (Var x) \\<and>\n                          r' = t \\<and> x \\<sharp> t) \\<Longrightarrow>\n       SN r\n 6. \\<And>s s' t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in t \\<and>\n                          r' = s' to x in t \\<and>\n                          x \\<sharp> (s, s') \\<and>\n                          s \\<mapsto> s') \\<Longrightarrow>\n       SN r\n 7. \\<And>s t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in t \\<and>\n                          r' = s to x in t' \\<and>\n                          x \\<sharp> s \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 8. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = [s] to x in t \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 9. \\<And>s.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in [Var x] \\<and>\n                          r' = s \\<and> x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 10. \\<And>s u t.\n        (\\<lbrakk>x \\<noteq> z; x \\<sharp> [p] to x in m; x \\<sharp> r';\n          z \\<sharp> [p] to x in m; z \\<sharp> r'\\<rbrakk>\n         \\<Longrightarrow> [p] to x in m = (s to x in t) to z in u \\<and>\n                           r' = s to x in t to z in u \\<and>\n                           x \\<sharp> (z, s, u) \\<and>\n                           z \\<sharp> (s, t)) \\<Longrightarrow>\n        SN r\nA total of 11 subgoals...", "case (r6 s s' t)"], ["proof (state)\nthis:\n  \\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n  \\<Longrightarrow> [p] to x in m = s to x in t \\<and>\n                    r' = s' to x in t \\<and>\n                    x \\<sharp> (s, s') \\<and> s \\<mapsto> s'\n\ngoal (11 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 2. \\<And>t t' s.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 3. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = App (\\<Lambda> x . t) s \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 4. \\<And>t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . t \\<and>\n                          r' = \\<Lambda> x . t' \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 5. \\<And>t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . App t (Var x) \\<and>\n                          r' = t \\<and> x \\<sharp> t) \\<Longrightarrow>\n       SN r\n 6. \\<And>s s' t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in t \\<and>\n                          r' = s' to x in t \\<and>\n                          x \\<sharp> (s, s') \\<and>\n                          s \\<mapsto> s') \\<Longrightarrow>\n       SN r\n 7. \\<And>s t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in t \\<and>\n                          r' = s to x in t' \\<and>\n                          x \\<sharp> s \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 8. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = [s] to x in t \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 9. \\<And>s.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in [Var x] \\<and>\n                          r' = s \\<and> x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 10. \\<And>s u t.\n        (\\<lbrakk>x \\<noteq> z; x \\<sharp> [p] to x in m; x \\<sharp> r';\n          z \\<sharp> [p] to x in m; z \\<sharp> r'\\<rbrakk>\n         \\<Longrightarrow> [p] to x in m = (s to x in t) to z in u \\<and>\n                           r' = s to x in t to z in u \\<and>\n                           x \\<sharp> (z, s, u) \\<and>\n                           z \\<sharp> (s, t)) \\<Longrightarrow>\n        SN r\nA total of 11 subgoals...", "hence ch: \"[p] \\<mapsto> s'\"   \"r' = s' to x in m\""], ["proof (prove)\nusing this:\n  \\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n  \\<Longrightarrow> [p] to x in m = s to x in t \\<and>\n                    r' = s' to x in t \\<and>\n                    x \\<sharp> (s, s') \\<and> s \\<mapsto> s'\n\ngoal (1 subgoal):\n 1. [p] \\<mapsto> s' &&& r' = s' to x in m", "using xl xr"], ["proof (prove)\nusing this:\n  \\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n  \\<Longrightarrow> [p] to x in m = s to x in t \\<and>\n                    r' = s' to x in t \\<and>\n                    x \\<sharp> (s, s') \\<and> s \\<mapsto> s'\n  x \\<sharp> [p] to x in m\n  x \\<sharp> r'\n\ngoal (1 subgoal):\n 1. [p] \\<mapsto> s' &&& r' = s' to x in m", "by (auto)"], ["proof (state)\nthis:\n  [p] \\<mapsto> s'\n  r' = s' to x in m\n\ngoal (11 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 2. \\<And>t t' s.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 3. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = App (\\<Lambda> x . t) s \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 4. \\<And>t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . t \\<and>\n                          r' = \\<Lambda> x . t' \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 5. \\<And>t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . App t (Var x) \\<and>\n                          r' = t \\<and> x \\<sharp> t) \\<Longrightarrow>\n       SN r\n 6. \\<And>s s' t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in t \\<and>\n                          r' = s' to x in t \\<and>\n                          x \\<sharp> (s, s') \\<and>\n                          s \\<mapsto> s') \\<Longrightarrow>\n       SN r\n 7. \\<And>s t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in t \\<and>\n                          r' = s to x in t' \\<and>\n                          x \\<sharp> s \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 8. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = [s] to x in t \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 9. \\<And>s.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in [Var x] \\<and>\n                          r' = s \\<and> x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 10. \\<And>s u t.\n        (\\<lbrakk>x \\<noteq> z; x \\<sharp> [p] to x in m; x \\<sharp> r';\n          z \\<sharp> [p] to x in m; z \\<sharp> r'\\<rbrakk>\n         \\<Longrightarrow> [p] to x in m = (s to x in t) to z in u \\<and>\n                           r' = s to x in t to z in u \\<and>\n                           x \\<sharp> (z, s, u) \\<and>\n                           z \\<sharp> (s, t)) \\<Longrightarrow>\n        SN r\nA total of 11 subgoals...", "from this"], ["proof (chain)\npicking this:\n  [p] \\<mapsto> s'\n  r' = s' to x in m", "obtain p' where s: \"s' = [p']\" and  p : \"p \\<mapsto> p'\""], ["proof (prove)\nusing this:\n  [p] \\<mapsto> s'\n  r' = s' to x in m\n\ngoal (1 subgoal):\n 1. (\\<And>p'.\n        \\<lbrakk>s' = [p']; p \\<mapsto> p'\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (blast dest:red_Ret)"], ["proof (state)\nthis:\n  s' = [p']\n  p \\<mapsto> p'\n\ngoal (11 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 2. \\<And>t t' s.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 3. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = App (\\<Lambda> x . t) s \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 4. \\<And>t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . t \\<and>\n                          r' = \\<Lambda> x . t' \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 5. \\<And>t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . App t (Var x) \\<and>\n                          r' = t \\<and> x \\<sharp> t) \\<Longrightarrow>\n       SN r\n 6. \\<And>s s' t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in t \\<and>\n                          r' = s' to x in t \\<and>\n                          x \\<sharp> (s, s') \\<and>\n                          s \\<mapsto> s') \\<Longrightarrow>\n       SN r\n 7. \\<And>s t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in t \\<and>\n                          r' = s to x in t' \\<and>\n                          x \\<sharp> s \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 8. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = [s] to x in t \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 9. \\<And>s.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in [Var x] \\<and>\n                          r' = s \\<and> x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 10. \\<And>s u t.\n        (\\<lbrakk>x \\<noteq> z; x \\<sharp> [p] to x in m; x \\<sharp> r';\n          z \\<sharp> [p] to x in m; z \\<sharp> r'\\<rbrakk>\n         \\<Longrightarrow> [p] to x in m = (s to x in t) to z in u \\<and>\n                           r' = s to x in t to z in u \\<and>\n                           x \\<sharp> (z, s, u) \\<and>\n                           z \\<sharp> (s, t)) \\<Longrightarrow>\n        SN r\nA total of 11 subgoals...", "from p"], ["proof (chain)\npicking this:\n  p \\<mapsto> p'", "have \"((m\\<star>k)[x::=p]) \\<mapsto>\\<^sup>* ((m\\<star>k)[x::=p'])\""], ["proof (prove)\nusing this:\n  p \\<mapsto> p'\n\ngoal (1 subgoal):\n 1.  (m \\<star> k)[x::=p] \\<mapsto>\\<^sup>* (m \\<star> k)[x::=p']", "by (rule red_subst)"], ["proof (state)\nthis:\n   (m \\<star> k)[x::=p] \\<mapsto>\\<^sup>* (m \\<star> k)[x::=p'] \n\ngoal (11 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 2. \\<And>t t' s.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 3. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = App (\\<Lambda> x . t) s \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 4. \\<And>t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . t \\<and>\n                          r' = \\<Lambda> x . t' \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 5. \\<And>t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . App t (Var x) \\<and>\n                          r' = t \\<and> x \\<sharp> t) \\<Longrightarrow>\n       SN r\n 6. \\<And>s s' t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in t \\<and>\n                          r' = s' to x in t \\<and>\n                          x \\<sharp> (s, s') \\<and>\n                          s \\<mapsto> s') \\<Longrightarrow>\n       SN r\n 7. \\<And>s t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in t \\<and>\n                          r' = s to x in t' \\<and>\n                          x \\<sharp> s \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 8. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = [s] to x in t \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 9. \\<And>s.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in [Var x] \\<and>\n                          r' = s \\<and> x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 10. \\<And>s u t.\n        (\\<lbrakk>x \\<noteq> z; x \\<sharp> [p] to x in m; x \\<sharp> r';\n          z \\<sharp> [p] to x in m; z \\<sharp> r'\\<rbrakk>\n         \\<Longrightarrow> [p] to x in m = (s to x in t) to z in u \\<and>\n                           r' = s to x in t to z in u \\<and>\n                           x \\<sharp> (z, s, u) \\<and>\n                           z \\<sharp> (s, t)) \\<Longrightarrow>\n        SN r\nA total of 11 subgoals...", "with xk"], ["proof (chain)\npicking this:\n  x \\<sharp> k\n   (m \\<star> k)[x::=p] \\<mapsto>\\<^sup>* (m \\<star> k)[x::=p']", "have \"((m[x::=p]) \\<star> k) \\<mapsto>\\<^sup>* ((m[x::=p']) \\<star> k)\""], ["proof (prove)\nusing this:\n  x \\<sharp> k\n   (m \\<star> k)[x::=p] \\<mapsto>\\<^sup>* (m \\<star> k)[x::=p'] \n\ngoal (1 subgoal):\n 1.  m[x::=p] \\<star> k \\<mapsto>\\<^sup>* m[x::=p'] \\<star> k", "by (simp add: ssubst_forget)"], ["proof (state)\nthis:\n   m[x::=p] \\<star> k \\<mapsto>\\<^sup>* m[x::=p'] \\<star> k \n\ngoal (11 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 2. \\<And>t t' s.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 3. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = App (\\<Lambda> x . t) s \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 4. \\<And>t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . t \\<and>\n                          r' = \\<Lambda> x . t' \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 5. \\<And>t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . App t (Var x) \\<and>\n                          r' = t \\<and> x \\<sharp> t) \\<Longrightarrow>\n       SN r\n 6. \\<And>s s' t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in t \\<and>\n                          r' = s' to x in t \\<and>\n                          x \\<sharp> (s, s') \\<and>\n                          s \\<mapsto> s') \\<Longrightarrow>\n       SN r\n 7. \\<And>s t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in t \\<and>\n                          r' = s to x in t' \\<and>\n                          x \\<sharp> s \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 8. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = [s] to x in t \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 9. \\<And>s.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in [Var x] \\<and>\n                          r' = s \\<and> x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 10. \\<And>s u t.\n        (\\<lbrakk>x \\<noteq> z; x \\<sharp> [p] to x in m; x \\<sharp> r';\n          z \\<sharp> [p] to x in m; z \\<sharp> r'\\<rbrakk>\n         \\<Longrightarrow> [p] to x in m = (s to x in t) to z in u \\<and>\n                           r' = s to x in t to z in u \\<and>\n                           x \\<sharp> (z, s, u) \\<and>\n                           z \\<sharp> (s, t)) \\<Longrightarrow>\n        SN r\nA total of 11 subgoals...", "hence sn: \"SN ((m[x::=p']) \\<star> k)\""], ["proof (prove)\nusing this:\n   m[x::=p] \\<star> k \\<mapsto>\\<^sup>* m[x::=p'] \\<star> k \n\ngoal (1 subgoal):\n 1. SN (m[x::=p'] \\<star> k)", "using sn"], ["proof (prove)\nusing this:\n   m[x::=p] \\<star> k \\<mapsto>\\<^sup>* m[x::=p'] \\<star> k \n  SN (m[x::=p] \\<star> k)\n\ngoal (1 subgoal):\n 1. SN (m[x::=p'] \\<star> k)", "by (rule SN_trans)"], ["proof (state)\nthis:\n  SN (m[x::=p'] \\<star> k)\n\ngoal (11 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 2. \\<And>t t' s.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 3. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = App (\\<Lambda> x . t) s \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 4. \\<And>t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . t \\<and>\n                          r' = \\<Lambda> x . t' \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 5. \\<And>t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . App t (Var x) \\<and>\n                          r' = t \\<and> x \\<sharp> t) \\<Longrightarrow>\n       SN r\n 6. \\<And>s s' t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in t \\<and>\n                          r' = s' to x in t \\<and>\n                          x \\<sharp> (s, s') \\<and>\n                          s \\<mapsto> s') \\<Longrightarrow>\n       SN r\n 7. \\<And>s t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in t \\<and>\n                          r' = s to x in t' \\<and>\n                          x \\<sharp> s \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 8. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = [s] to x in t \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 9. \\<And>s.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in [Var x] \\<and>\n                          r' = s \\<and> x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 10. \\<And>s u t.\n        (\\<lbrakk>x \\<noteq> z; x \\<sharp> [p] to x in m; x \\<sharp> r';\n          z \\<sharp> [p] to x in m; z \\<sharp> r'\\<rbrakk>\n         \\<Longrightarrow> [p] to x in m = (s to x in t) to z in u \\<and>\n                           r' = s to x in t to z in u \\<and>\n                           x \\<sharp> (z, s, u) \\<and>\n                           z \\<sharp> (s, t)) \\<Longrightarrow>\n        SN r\nA total of 11 subgoals...", "from p xp"], ["proof (chain)\npicking this:\n  p \\<mapsto> p'\n  x \\<sharp> p", "have xp' : \"x \\<sharp> p'\""], ["proof (prove)\nusing this:\n  p \\<mapsto> p'\n  x \\<sharp> p\n\ngoal (1 subgoal):\n 1. x \\<sharp> p'", "by (rule reduction_fresh)"], ["proof (state)\nthis:\n  x \\<sharp> p'\n\ngoal (11 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 2. \\<And>t t' s.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 3. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = App (\\<Lambda> x . t) s \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 4. \\<And>t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . t \\<and>\n                          r' = \\<Lambda> x . t' \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 5. \\<And>t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . App t (Var x) \\<and>\n                          r' = t \\<and> x \\<sharp> t) \\<Longrightarrow>\n       SN r\n 6. \\<And>s s' t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in t \\<and>\n                          r' = s' to x in t \\<and>\n                          x \\<sharp> (s, s') \\<and>\n                          s \\<mapsto> s') \\<Longrightarrow>\n       SN r\n 7. \\<And>s t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in t \\<and>\n                          r' = s to x in t' \\<and>\n                          x \\<sharp> s \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 8. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = [s] to x in t \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 9. \\<And>s.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in [Var x] \\<and>\n                          r' = s \\<and> x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 10. \\<And>s u t.\n        (\\<lbrakk>x \\<noteq> z; x \\<sharp> [p] to x in m; x \\<sharp> r';\n          z \\<sharp> [p] to x in m; z \\<sharp> r'\\<rbrakk>\n         \\<Longrightarrow> [p] to x in m = (s to x in t) to z in u \\<and>\n                           r' = s to x in t to z in u \\<and>\n                           x \\<sharp> (z, s, u) \\<and>\n                           z \\<sharp> (s, t)) \\<Longrightarrow>\n        SN r\nA total of 11 subgoals...", "from ch s"], ["proof (chain)\npicking this:\n  [p] \\<mapsto> s'\n  r' = s' to x in m\n  s' = [p']", "have rr: \"r' = [p'] to x in m\""], ["proof (prove)\nusing this:\n  [p] \\<mapsto> s'\n  r' = s' to x in m\n  s' = [p']\n\ngoal (1 subgoal):\n 1. r' = [p'] to x in m", "by simp"], ["proof (state)\nthis:\n  r' = [p'] to x in m\n\ngoal (11 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 2. \\<And>t t' s.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 3. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = App (\\<Lambda> x . t) s \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 4. \\<And>t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . t \\<and>\n                          r' = \\<Lambda> x . t' \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 5. \\<And>t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . App t (Var x) \\<and>\n                          r' = t \\<and> x \\<sharp> t) \\<Longrightarrow>\n       SN r\n 6. \\<And>s s' t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in t \\<and>\n                          r' = s' to x in t \\<and>\n                          x \\<sharp> (s, s') \\<and>\n                          s \\<mapsto> s') \\<Longrightarrow>\n       SN r\n 7. \\<And>s t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in t \\<and>\n                          r' = s to x in t' \\<and>\n                          x \\<sharp> s \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 8. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = [s] to x in t \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 9. \\<And>s.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in [Var x] \\<and>\n                          r' = s \\<and> x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 10. \\<And>s u t.\n        (\\<lbrakk>x \\<noteq> z; x \\<sharp> [p] to x in m; x \\<sharp> r';\n          z \\<sharp> [p] to x in m; z \\<sharp> r'\\<rbrakk>\n         \\<Longrightarrow> [p] to x in m = (s to x in t) to z in u \\<and>\n                           r' = s to x in t to z in u \\<and>\n                           x \\<sharp> (z, s, u) \\<and>\n                           z \\<sharp> (s, t)) \\<Longrightarrow>\n        SN r\nA total of 11 subgoals...", "from p q  sn xp' xk"], ["proof (chain)\npicking this:\n  p \\<mapsto> p'\n  q = m \\<star> k\n  SN (m[x::=p'] \\<star> k)\n  x \\<sharp> p'\n  x \\<sharp> k", "show \"SN r\""], ["proof (prove)\nusing this:\n  p \\<mapsto> p'\n  q = m \\<star> k\n  SN (m[x::=p'] \\<star> k)\n  x \\<sharp> p'\n  x \\<sharp> k\n\ngoal (1 subgoal):\n 1. SN r", "unfolding r rr"], ["proof (prove)\nusing this:\n  p \\<mapsto> p'\n  q = m \\<star> k\n  SN (m[x::=p'] \\<star> k)\n  x \\<sharp> p'\n  x \\<sharp> k\n\ngoal (1 subgoal):\n 1. SN (([p'] to x in m) \\<star> k)", "by (rule ih_p)"], ["proof (state)\nthis:\n  SN r\n\ngoal (10 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 2. \\<And>t t' s.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 3. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = App (\\<Lambda> x . t) s \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 4. \\<And>t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . t \\<and>\n                          r' = \\<Lambda> x . t' \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 5. \\<And>t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . App t (Var x) \\<and>\n                          r' = t \\<and> x \\<sharp> t) \\<Longrightarrow>\n       SN r\n 6. \\<And>s t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in t \\<and>\n                          r' = s to x in t' \\<and>\n                          x \\<sharp> s \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 7. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = [s] to x in t \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 8. \\<And>s.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in [Var x] \\<and>\n                          r' = s \\<and> x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 9. \\<And>s u t.\n       (\\<lbrakk>x \\<noteq> z; x \\<sharp> [p] to x in m; x \\<sharp> r';\n         z \\<sharp> [p] to x in m; z \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = (s to x in t) to z in u \\<and>\n                          r' = s to x in t to z in u \\<and>\n                          x \\<sharp> (z, s, u) \\<and>\n                          z \\<sharp> (s, t)) \\<Longrightarrow>\n       SN r\n 10. \\<And>s s'.\n        \\<lbrakk>[p] to x in m = [s]; r' = [s']; s \\<mapsto> s'\\<rbrakk>\n        \\<Longrightarrow> SN r", "next"], ["proof (state)\ngoal (10 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 2. \\<And>t t' s.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 3. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = App (\\<Lambda> x . t) s \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 4. \\<And>t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . t \\<and>\n                          r' = \\<Lambda> x . t' \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 5. \\<And>t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . App t (Var x) \\<and>\n                          r' = t \\<and> x \\<sharp> t) \\<Longrightarrow>\n       SN r\n 6. \\<And>s t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in t \\<and>\n                          r' = s to x in t' \\<and>\n                          x \\<sharp> s \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 7. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = [s] to x in t \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 8. \\<And>s.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in [Var x] \\<and>\n                          r' = s \\<and> x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 9. \\<And>s u t.\n       (\\<lbrakk>x \\<noteq> z; x \\<sharp> [p] to x in m; x \\<sharp> r';\n         z \\<sharp> [p] to x in m; z \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = (s to x in t) to z in u \\<and>\n                          r' = s to x in t to z in u \\<and>\n                          x \\<sharp> (z, s, u) \\<and>\n                          z \\<sharp> (s, t)) \\<Longrightarrow>\n       SN r\n 10. \\<And>s s'.\n        \\<lbrakk>[p] to x in m = [s]; r' = [s']; s \\<mapsto> s'\\<rbrakk>\n        \\<Longrightarrow> SN r", "case(r7 s t m')"], ["proof (state)\nthis:\n  \\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n  \\<Longrightarrow> [p] to x in m = s to x in t \\<and>\n                    r' = s to x in m' \\<and>\n                    x \\<sharp> s \\<and> t \\<mapsto> m'\n\ngoal (10 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 2. \\<And>t t' s.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 3. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = App (\\<Lambda> x . t) s \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 4. \\<And>t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . t \\<and>\n                          r' = \\<Lambda> x . t' \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 5. \\<And>t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . App t (Var x) \\<and>\n                          r' = t \\<and> x \\<sharp> t) \\<Longrightarrow>\n       SN r\n 6. \\<And>s t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in t \\<and>\n                          r' = s to x in t' \\<and>\n                          x \\<sharp> s \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 7. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = [s] to x in t \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 8. \\<And>s.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in [Var x] \\<and>\n                          r' = s \\<and> x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 9. \\<And>s u t.\n       (\\<lbrakk>x \\<noteq> z; x \\<sharp> [p] to x in m; x \\<sharp> r';\n         z \\<sharp> [p] to x in m; z \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = (s to x in t) to z in u \\<and>\n                          r' = s to x in t to z in u \\<and>\n                          x \\<sharp> (z, s, u) \\<and>\n                          z \\<sharp> (s, t)) \\<Longrightarrow>\n       SN r\n 10. \\<And>s s'.\n        \\<lbrakk>[p] to x in m = [s]; r' = [s']; s \\<mapsto> s'\\<rbrakk>\n        \\<Longrightarrow> SN r", "hence \"r' = [p] to x in m'\" and \"m \\<mapsto> m'\""], ["proof (prove)\nusing this:\n  \\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n  \\<Longrightarrow> [p] to x in m = s to x in t \\<and>\n                    r' = s to x in m' \\<and>\n                    x \\<sharp> s \\<and> t \\<mapsto> m'\n\ngoal (1 subgoal):\n 1. r' = [p] to x in m' &&& m \\<mapsto> m'", "using xl xr"], ["proof (prove)\nusing this:\n  \\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n  \\<Longrightarrow> [p] to x in m = s to x in t \\<and>\n                    r' = s to x in m' \\<and>\n                    x \\<sharp> s \\<and> t \\<mapsto> m'\n  x \\<sharp> [p] to x in m\n  x \\<sharp> r'\n\ngoal (1 subgoal):\n 1. r' = [p] to x in m' &&& m \\<mapsto> m'", "by (auto simp add: alpha)"], ["proof (state)\nthis:\n  r' = [p] to x in m'\n  m \\<mapsto> m'\n\ngoal (10 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 2. \\<And>t t' s.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 3. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = App (\\<Lambda> x . t) s \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 4. \\<And>t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . t \\<and>\n                          r' = \\<Lambda> x . t' \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 5. \\<And>t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . App t (Var x) \\<and>\n                          r' = t \\<and> x \\<sharp> t) \\<Longrightarrow>\n       SN r\n 6. \\<And>s t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in t \\<and>\n                          r' = s to x in t' \\<and>\n                          x \\<sharp> s \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 7. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = [s] to x in t \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 8. \\<And>s.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in [Var x] \\<and>\n                          r' = s \\<and> x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 9. \\<And>s u t.\n       (\\<lbrakk>x \\<noteq> z; x \\<sharp> [p] to x in m; x \\<sharp> r';\n         z \\<sharp> [p] to x in m; z \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = (s to x in t) to z in u \\<and>\n                          r' = s to x in t to z in u \\<and>\n                          x \\<sharp> (z, s, u) \\<and>\n                          z \\<sharp> (s, t)) \\<Longrightarrow>\n       SN r\n 10. \\<And>s s'.\n        \\<lbrakk>[p] to x in m = [s]; r' = [s']; s \\<mapsto> s'\\<rbrakk>\n        \\<Longrightarrow> SN r", "hence rr: \"r' = [p] to x in m'\""], ["proof (prove)\nusing this:\n  r' = [p] to x in m'\n  m \\<mapsto> m'\n\ngoal (1 subgoal):\n 1. r' = [p] to x in m'", "by simp"], ["proof (state)\nthis:\n  r' = [p] to x in m'\n\ngoal (10 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 2. \\<And>t t' s.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 3. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = App (\\<Lambda> x . t) s \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 4. \\<And>t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . t \\<and>\n                          r' = \\<Lambda> x . t' \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 5. \\<And>t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . App t (Var x) \\<and>\n                          r' = t \\<and> x \\<sharp> t) \\<Longrightarrow>\n       SN r\n 6. \\<And>s t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in t \\<and>\n                          r' = s to x in t' \\<and>\n                          x \\<sharp> s \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 7. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = [s] to x in t \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 8. \\<And>s.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in [Var x] \\<and>\n                          r' = s \\<and> x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 9. \\<And>s u t.\n       (\\<lbrakk>x \\<noteq> z; x \\<sharp> [p] to x in m; x \\<sharp> r';\n         z \\<sharp> [p] to x in m; z \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = (s to x in t) to z in u \\<and>\n                          r' = s to x in t to z in u \\<and>\n                          x \\<sharp> (z, s, u) \\<and>\n                          z \\<sharp> (s, t)) \\<Longrightarrow>\n       SN r\n 10. \\<And>s s'.\n        \\<lbrakk>[p] to x in m = [s]; r' = [s']; s \\<mapsto> s'\\<rbrakk>\n        \\<Longrightarrow> SN r", "from q \\<open>m \\<mapsto> m'\\<close>"], ["proof (chain)\npicking this:\n  q = m \\<star> k\n  m \\<mapsto> m'", "have  \"q \\<mapsto> m' \\<star> k\""], ["proof (prove)\nusing this:\n  q = m \\<star> k\n  m \\<mapsto> m'\n\ngoal (1 subgoal):\n 1. q \\<mapsto> m' \\<star> k", "by(simp add: dismantle_red)"], ["proof (state)\nthis:\n  q \\<mapsto> m' \\<star> k\n\ngoal (10 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 2. \\<And>t t' s.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 3. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = App (\\<Lambda> x . t) s \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 4. \\<And>t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . t \\<and>\n                          r' = \\<Lambda> x . t' \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 5. \\<And>t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . App t (Var x) \\<and>\n                          r' = t \\<and> x \\<sharp> t) \\<Longrightarrow>\n       SN r\n 6. \\<And>s t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in t \\<and>\n                          r' = s to x in t' \\<and>\n                          x \\<sharp> s \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 7. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = [s] to x in t \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 8. \\<And>s.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in [Var x] \\<and>\n                          r' = s \\<and> x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 9. \\<And>s u t.\n       (\\<lbrakk>x \\<noteq> z; x \\<sharp> [p] to x in m; x \\<sharp> r';\n         z \\<sharp> [p] to x in m; z \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = (s to x in t) to z in u \\<and>\n                          r' = s to x in t to z in u \\<and>\n                          x \\<sharp> (z, s, u) \\<and>\n                          z \\<sharp> (s, t)) \\<Longrightarrow>\n       SN r\n 10. \\<And>s s'.\n        \\<lbrakk>[p] to x in m = [s]; r' = [s']; s \\<mapsto> s'\\<rbrakk>\n        \\<Longrightarrow> SN r", "moreover"], ["proof (state)\nthis:\n  q \\<mapsto> m' \\<star> k\n\ngoal (10 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 2. \\<And>t t' s.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 3. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = App (\\<Lambda> x . t) s \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 4. \\<And>t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . t \\<and>\n                          r' = \\<Lambda> x . t' \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 5. \\<And>t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . App t (Var x) \\<and>\n                          r' = t \\<and> x \\<sharp> t) \\<Longrightarrow>\n       SN r\n 6. \\<And>s t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in t \\<and>\n                          r' = s to x in t' \\<and>\n                          x \\<sharp> s \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 7. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = [s] to x in t \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 8. \\<And>s.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in [Var x] \\<and>\n                          r' = s \\<and> x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 9. \\<And>s u t.\n       (\\<lbrakk>x \\<noteq> z; x \\<sharp> [p] to x in m; x \\<sharp> r';\n         z \\<sharp> [p] to x in m; z \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = (s to x in t) to z in u \\<and>\n                          r' = s to x in t to z in u \\<and>\n                          x \\<sharp> (z, s, u) \\<and>\n                          z \\<sharp> (s, t)) \\<Longrightarrow>\n       SN r\n 10. \\<And>s s'.\n        \\<lbrakk>[p] to x in m = [s]; r' = [s']; s \\<mapsto> s'\\<rbrakk>\n        \\<Longrightarrow> SN r", "have \"m' \\<star> k = m' \\<star> k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m' \\<star> k = m' \\<star> k", ".. \\<comment> \\<open>a triviality\\<close>"], ["proof (state)\nthis:\n  m' \\<star> k = m' \\<star> k\n\ngoal (10 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 2. \\<And>t t' s.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 3. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = App (\\<Lambda> x . t) s \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 4. \\<And>t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . t \\<and>\n                          r' = \\<Lambda> x . t' \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 5. \\<And>t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . App t (Var x) \\<and>\n                          r' = t \\<and> x \\<sharp> t) \\<Longrightarrow>\n       SN r\n 6. \\<And>s t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in t \\<and>\n                          r' = s to x in t' \\<and>\n                          x \\<sharp> s \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 7. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = [s] to x in t \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 8. \\<And>s.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in [Var x] \\<and>\n                          r' = s \\<and> x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 9. \\<And>s u t.\n       (\\<lbrakk>x \\<noteq> z; x \\<sharp> [p] to x in m; x \\<sharp> r';\n         z \\<sharp> [p] to x in m; z \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = (s to x in t) to z in u \\<and>\n                          r' = s to x in t to z in u \\<and>\n                          x \\<sharp> (z, s, u) \\<and>\n                          z \\<sharp> (s, t)) \\<Longrightarrow>\n       SN r\n 10. \\<And>s s'.\n        \\<lbrakk>[p] to x in m = [s]; r' = [s']; s \\<mapsto> s'\\<rbrakk>\n        \\<Longrightarrow> SN r", "moreover"], ["proof (state)\nthis:\n  m' \\<star> k = m' \\<star> k\n\ngoal (10 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 2. \\<And>t t' s.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 3. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = App (\\<Lambda> x . t) s \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 4. \\<And>t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . t \\<and>\n                          r' = \\<Lambda> x . t' \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 5. \\<And>t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . App t (Var x) \\<and>\n                          r' = t \\<and> x \\<sharp> t) \\<Longrightarrow>\n       SN r\n 6. \\<And>s t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in t \\<and>\n                          r' = s to x in t' \\<and>\n                          x \\<sharp> s \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 7. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = [s] to x in t \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 8. \\<And>s.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in [Var x] \\<and>\n                          r' = s \\<and> x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 9. \\<And>s u t.\n       (\\<lbrakk>x \\<noteq> z; x \\<sharp> [p] to x in m; x \\<sharp> r';\n         z \\<sharp> [p] to x in m; z \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = (s to x in t) to z in u \\<and>\n                          r' = s to x in t to z in u \\<and>\n                          x \\<sharp> (z, s, u) \\<and>\n                          z \\<sharp> (s, t)) \\<Longrightarrow>\n       SN r\n 10. \\<And>s s'.\n        \\<lbrakk>[p] to x in m = [s]; r' = [s']; s \\<mapsto> s'\\<rbrakk>\n        \\<Longrightarrow> SN r", "{"], ["proof (state)\nthis:\n  m' \\<star> k = m' \\<star> k\n\ngoal (10 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 2. \\<And>t t' s.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 3. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = App (\\<Lambda> x . t) s \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 4. \\<And>t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . t \\<and>\n                          r' = \\<Lambda> x . t' \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 5. \\<And>t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . App t (Var x) \\<and>\n                          r' = t \\<and> x \\<sharp> t) \\<Longrightarrow>\n       SN r\n 6. \\<And>s t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in t \\<and>\n                          r' = s to x in t' \\<and>\n                          x \\<sharp> s \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 7. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = [s] to x in t \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 8. \\<And>s.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in [Var x] \\<and>\n                          r' = s \\<and> x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 9. \\<And>s u t.\n       (\\<lbrakk>x \\<noteq> z; x \\<sharp> [p] to x in m; x \\<sharp> r';\n         z \\<sharp> [p] to x in m; z \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = (s to x in t) to z in u \\<and>\n                          r' = s to x in t to z in u \\<and>\n                          x \\<sharp> (z, s, u) \\<and>\n                          z \\<sharp> (s, t)) \\<Longrightarrow>\n       SN r\n 10. \\<And>s s'.\n        \\<lbrakk>[p] to x in m = [s]; r' = [s']; s \\<mapsto> s'\\<rbrakk>\n        \\<Longrightarrow> SN r", "from \\<open>m \\<mapsto> m'\\<close>"], ["proof (chain)\npicking this:\n  m \\<mapsto> m'", "have \"(m[x::=p]) \\<star> k \\<mapsto> (m'[x::=p]) \\<star> k\""], ["proof (prove)\nusing this:\n  m \\<mapsto> m'\n\ngoal (1 subgoal):\n 1. m[x::=p] \\<star> k \\<mapsto> m'[x::=p] \\<star> k", "by (simp add: dismantle_red reduction_subst)"], ["proof (state)\nthis:\n  m[x::=p] \\<star> k \\<mapsto> m'[x::=p] \\<star> k\n\ngoal (10 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 2. \\<And>t t' s.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 3. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = App (\\<Lambda> x . t) s \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 4. \\<And>t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . t \\<and>\n                          r' = \\<Lambda> x . t' \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 5. \\<And>t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . App t (Var x) \\<and>\n                          r' = t \\<and> x \\<sharp> t) \\<Longrightarrow>\n       SN r\n 6. \\<And>s t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in t \\<and>\n                          r' = s to x in t' \\<and>\n                          x \\<sharp> s \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 7. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = [s] to x in t \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 8. \\<And>s.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in [Var x] \\<and>\n                          r' = s \\<and> x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 9. \\<And>s u t.\n       (\\<lbrakk>x \\<noteq> z; x \\<sharp> [p] to x in m; x \\<sharp> r';\n         z \\<sharp> [p] to x in m; z \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = (s to x in t) to z in u \\<and>\n                          r' = s to x in t to z in u \\<and>\n                          x \\<sharp> (z, s, u) \\<and>\n                          z \\<sharp> (s, t)) \\<Longrightarrow>\n       SN r\n 10. \\<And>s s'.\n        \\<lbrakk>[p] to x in m = [s]; r' = [s']; s \\<mapsto> s'\\<rbrakk>\n        \\<Longrightarrow> SN r", "with sn"], ["proof (chain)\npicking this:\n  SN (m[x::=p] \\<star> k)\n  m[x::=p] \\<star> k \\<mapsto> m'[x::=p] \\<star> k", "have \"SN(m'[x::=p] \\<star> k)\""], ["proof (prove)\nusing this:\n  SN (m[x::=p] \\<star> k)\n  m[x::=p] \\<star> k \\<mapsto> m'[x::=p] \\<star> k\n\ngoal (1 subgoal):\n 1. SN (m'[x::=p] \\<star> k)", ".."], ["proof (state)\nthis:\n  SN (m'[x::=p] \\<star> k)\n\ngoal (10 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 2. \\<And>t t' s.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 3. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = App (\\<Lambda> x . t) s \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 4. \\<And>t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . t \\<and>\n                          r' = \\<Lambda> x . t' \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 5. \\<And>t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . App t (Var x) \\<and>\n                          r' = t \\<and> x \\<sharp> t) \\<Longrightarrow>\n       SN r\n 6. \\<And>s t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in t \\<and>\n                          r' = s to x in t' \\<and>\n                          x \\<sharp> s \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 7. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = [s] to x in t \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 8. \\<And>s.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in [Var x] \\<and>\n                          r' = s \\<and> x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 9. \\<And>s u t.\n       (\\<lbrakk>x \\<noteq> z; x \\<sharp> [p] to x in m; x \\<sharp> r';\n         z \\<sharp> [p] to x in m; z \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = (s to x in t) to z in u \\<and>\n                          r' = s to x in t to z in u \\<and>\n                          x \\<sharp> (z, s, u) \\<and>\n                          z \\<sharp> (s, t)) \\<Longrightarrow>\n       SN r\n 10. \\<And>s s'.\n        \\<lbrakk>[p] to x in m = [s]; r' = [s']; s \\<mapsto> s'\\<rbrakk>\n        \\<Longrightarrow> SN r", "}"], ["proof (state)\nthis:\n  SN (m'[x::=p] \\<star> k)\n\ngoal (10 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 2. \\<And>t t' s.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 3. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = App (\\<Lambda> x . t) s \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 4. \\<And>t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . t \\<and>\n                          r' = \\<Lambda> x . t' \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 5. \\<And>t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . App t (Var x) \\<and>\n                          r' = t \\<and> x \\<sharp> t) \\<Longrightarrow>\n       SN r\n 6. \\<And>s t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in t \\<and>\n                          r' = s to x in t' \\<and>\n                          x \\<sharp> s \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 7. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = [s] to x in t \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 8. \\<And>s.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in [Var x] \\<and>\n                          r' = s \\<and> x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 9. \\<And>s u t.\n       (\\<lbrakk>x \\<noteq> z; x \\<sharp> [p] to x in m; x \\<sharp> r';\n         z \\<sharp> [p] to x in m; z \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = (s to x in t) to z in u \\<and>\n                          r' = s to x in t to z in u \\<and>\n                          x \\<sharp> (z, s, u) \\<and>\n                          z \\<sharp> (s, t)) \\<Longrightarrow>\n       SN r\n 10. \\<And>s s'.\n        \\<lbrakk>[p] to x in m = [s]; r' = [s']; s \\<mapsto> s'\\<rbrakk>\n        \\<Longrightarrow> SN r", "ultimately"], ["proof (chain)\npicking this:\n  q \\<mapsto> m' \\<star> k\n  m' \\<star> k = m' \\<star> k\n  SN (m'[x::=p] \\<star> k)", "show \"SN r\""], ["proof (prove)\nusing this:\n  q \\<mapsto> m' \\<star> k\n  m' \\<star> k = m' \\<star> k\n  SN (m'[x::=p] \\<star> k)\n\ngoal (1 subgoal):\n 1. SN r", "using xp xk"], ["proof (prove)\nusing this:\n  q \\<mapsto> m' \\<star> k\n  m' \\<star> k = m' \\<star> k\n  SN (m'[x::=p] \\<star> k)\n  x \\<sharp> p\n  x \\<sharp> k\n\ngoal (1 subgoal):\n 1. SN r", "unfolding r rr"], ["proof (prove)\nusing this:\n  q \\<mapsto> m' \\<star> k\n  m' \\<star> k = m' \\<star> k\n  SN (m'[x::=p] \\<star> k)\n  x \\<sharp> p\n  x \\<sharp> k\n\ngoal (1 subgoal):\n 1. SN (([p] to x in m') \\<star> k)", "by (rule ih_q)"], ["proof (state)\nthis:\n  SN r\n\ngoal (9 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 2. \\<And>t t' s.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 3. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = App (\\<Lambda> x . t) s \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 4. \\<And>t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . t \\<and>\n                          r' = \\<Lambda> x . t' \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 5. \\<And>t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . App t (Var x) \\<and>\n                          r' = t \\<and> x \\<sharp> t) \\<Longrightarrow>\n       SN r\n 6. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = [s] to x in t \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 7. \\<And>s.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in [Var x] \\<and>\n                          r' = s \\<and> x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 8. \\<And>s u t.\n       (\\<lbrakk>x \\<noteq> z; x \\<sharp> [p] to x in m; x \\<sharp> r';\n         z \\<sharp> [p] to x in m; z \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = (s to x in t) to z in u \\<and>\n                          r' = s to x in t to z in u \\<and>\n                          x \\<sharp> (z, s, u) \\<and>\n                          z \\<sharp> (s, t)) \\<Longrightarrow>\n       SN r\n 9. \\<And>s s'.\n       \\<lbrakk>[p] to x in m = [s]; r' = [s']; s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> SN r", "next"], ["proof (state)\ngoal (9 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 2. \\<And>t t' s.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 3. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = App (\\<Lambda> x . t) s \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 4. \\<And>t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . t \\<and>\n                          r' = \\<Lambda> x . t' \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 5. \\<And>t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . App t (Var x) \\<and>\n                          r' = t \\<and> x \\<sharp> t) \\<Longrightarrow>\n       SN r\n 6. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = [s] to x in t \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 7. \\<And>s.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in [Var x] \\<and>\n                          r' = s \\<and> x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 8. \\<And>s u t.\n       (\\<lbrakk>x \\<noteq> z; x \\<sharp> [p] to x in m; x \\<sharp> r';\n         z \\<sharp> [p] to x in m; z \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = (s to x in t) to z in u \\<and>\n                          r' = s to x in t to z in u \\<and>\n                          x \\<sharp> (z, s, u) \\<and>\n                          z \\<sharp> (s, t)) \\<Longrightarrow>\n       SN r\n 9. \\<And>s s'.\n       \\<lbrakk>[p] to x in m = [s]; r' = [s']; s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> SN r", "case (r8 s t) \\<comment> \\<open>the $\\beta$-case is handled by assumption\\<close>"], ["proof (state)\nthis:\n  \\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n  \\<Longrightarrow> [p] to x in m = [s] to x in t \\<and>\n                    r' = t[x::=s] \\<and> x \\<sharp> s\n\ngoal (9 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 2. \\<And>t t' s.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 3. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = App (\\<Lambda> x . t) s \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 4. \\<And>t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . t \\<and>\n                          r' = \\<Lambda> x . t' \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 5. \\<And>t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . App t (Var x) \\<and>\n                          r' = t \\<and> x \\<sharp> t) \\<Longrightarrow>\n       SN r\n 6. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = [s] to x in t \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 7. \\<And>s.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in [Var x] \\<and>\n                          r' = s \\<and> x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 8. \\<And>s u t.\n       (\\<lbrakk>x \\<noteq> z; x \\<sharp> [p] to x in m; x \\<sharp> r';\n         z \\<sharp> [p] to x in m; z \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = (s to x in t) to z in u \\<and>\n                          r' = s to x in t to z in u \\<and>\n                          x \\<sharp> (z, s, u) \\<and>\n                          z \\<sharp> (s, t)) \\<Longrightarrow>\n       SN r\n 9. \\<And>s s'.\n       \\<lbrakk>[p] to x in m = [s]; r' = [s']; s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> SN r", "hence \"r' = m[x::=p]\""], ["proof (prove)\nusing this:\n  \\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n  \\<Longrightarrow> [p] to x in m = [s] to x in t \\<and>\n                    r' = t[x::=s] \\<and> x \\<sharp> s\n\ngoal (1 subgoal):\n 1. r' = m[x::=p]", "using xl xr"], ["proof (prove)\nusing this:\n  \\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n  \\<Longrightarrow> [p] to x in m = [s] to x in t \\<and>\n                    r' = t[x::=s] \\<and> x \\<sharp> s\n  x \\<sharp> [p] to x in m\n  x \\<sharp> r'\n\ngoal (1 subgoal):\n 1. r' = m[x::=p]", "by(auto simp add: alpha)"], ["proof (state)\nthis:\n  r' = m[x::=p]\n\ngoal (9 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 2. \\<And>t t' s.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 3. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = App (\\<Lambda> x . t) s \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 4. \\<And>t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . t \\<and>\n                          r' = \\<Lambda> x . t' \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 5. \\<And>t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . App t (Var x) \\<and>\n                          r' = t \\<and> x \\<sharp> t) \\<Longrightarrow>\n       SN r\n 6. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = [s] to x in t \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 7. \\<And>s.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in [Var x] \\<and>\n                          r' = s \\<and> x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 8. \\<And>s u t.\n       (\\<lbrakk>x \\<noteq> z; x \\<sharp> [p] to x in m; x \\<sharp> r';\n         z \\<sharp> [p] to x in m; z \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = (s to x in t) to z in u \\<and>\n                          r' = s to x in t to z in u \\<and>\n                          x \\<sharp> (z, s, u) \\<and>\n                          z \\<sharp> (s, t)) \\<Longrightarrow>\n       SN r\n 9. \\<And>s s'.\n       \\<lbrakk>[p] to x in m = [s]; r' = [s']; s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> SN r", "thus \"SN r\""], ["proof (prove)\nusing this:\n  r' = m[x::=p]\n\ngoal (1 subgoal):\n 1. SN r", "unfolding r"], ["proof (prove)\nusing this:\n  r' = m[x::=p]\n\ngoal (1 subgoal):\n 1. SN (r' \\<star> k)", "using sn"], ["proof (prove)\nusing this:\n  r' = m[x::=p]\n  SN (m[x::=p] \\<star> k)\n\ngoal (1 subgoal):\n 1. SN (r' \\<star> k)", "by simp"], ["proof (state)\nthis:\n  SN r\n\ngoal (8 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 2. \\<And>t t' s.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 3. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = App (\\<Lambda> x . t) s \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 4. \\<And>t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . t \\<and>\n                          r' = \\<Lambda> x . t' \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 5. \\<And>t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . App t (Var x) \\<and>\n                          r' = t \\<and> x \\<sharp> t) \\<Longrightarrow>\n       SN r\n 6. \\<And>s.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in [Var x] \\<and>\n                          r' = s \\<and> x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 7. \\<And>s u t.\n       (\\<lbrakk>x \\<noteq> z; x \\<sharp> [p] to x in m; x \\<sharp> r';\n         z \\<sharp> [p] to x in m; z \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = (s to x in t) to z in u \\<and>\n                          r' = s to x in t to z in u \\<and>\n                          x \\<sharp> (z, s, u) \\<and>\n                          z \\<sharp> (s, t)) \\<Longrightarrow>\n       SN r\n 8. \\<And>s s'.\n       \\<lbrakk>[p] to x in m = [s]; r' = [s']; s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> SN r", "next"], ["proof (state)\ngoal (8 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 2. \\<And>t t' s.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 3. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = App (\\<Lambda> x . t) s \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 4. \\<And>t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . t \\<and>\n                          r' = \\<Lambda> x . t' \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 5. \\<And>t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . App t (Var x) \\<and>\n                          r' = t \\<and> x \\<sharp> t) \\<Longrightarrow>\n       SN r\n 6. \\<And>s.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in [Var x] \\<and>\n                          r' = s \\<and> x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 7. \\<And>s u t.\n       (\\<lbrakk>x \\<noteq> z; x \\<sharp> [p] to x in m; x \\<sharp> r';\n         z \\<sharp> [p] to x in m; z \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = (s to x in t) to z in u \\<and>\n                          r' = s to x in t to z in u \\<and>\n                          x \\<sharp> (z, s, u) \\<and>\n                          z \\<sharp> (s, t)) \\<Longrightarrow>\n       SN r\n 8. \\<And>s s'.\n       \\<lbrakk>[p] to x in m = [s]; r' = [s']; s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> SN r", "case (r9 s) \\<comment> \\<open>the $\\eta$-case is handled by assumption as well\\<close>"], ["proof (state)\nthis:\n  \\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n  \\<Longrightarrow> [p] to x in m = s to x in [Var x] \\<and>\n                    r' = s \\<and> x \\<sharp> s\n\ngoal (8 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 2. \\<And>t t' s.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 3. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = App (\\<Lambda> x . t) s \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 4. \\<And>t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . t \\<and>\n                          r' = \\<Lambda> x . t' \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 5. \\<And>t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . App t (Var x) \\<and>\n                          r' = t \\<and> x \\<sharp> t) \\<Longrightarrow>\n       SN r\n 6. \\<And>s.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in [Var x] \\<and>\n                          r' = s \\<and> x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 7. \\<And>s u t.\n       (\\<lbrakk>x \\<noteq> z; x \\<sharp> [p] to x in m; x \\<sharp> r';\n         z \\<sharp> [p] to x in m; z \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = (s to x in t) to z in u \\<and>\n                          r' = s to x in t to z in u \\<and>\n                          x \\<sharp> (z, s, u) \\<and>\n                          z \\<sharp> (s, t)) \\<Longrightarrow>\n       SN r\n 8. \\<And>s s'.\n       \\<lbrakk>[p] to x in m = [s]; r' = [s']; s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> SN r", "hence \"m = [Var x]\" and \"r' = [p]\""], ["proof (prove)\nusing this:\n  \\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n  \\<Longrightarrow> [p] to x in m = s to x in [Var x] \\<and>\n                    r' = s \\<and> x \\<sharp> s\n\ngoal (1 subgoal):\n 1. m = [Var x] &&& r' = [p]", "using xl xr"], ["proof (prove)\nusing this:\n  \\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n  \\<Longrightarrow> [p] to x in m = s to x in [Var x] \\<and>\n                    r' = s \\<and> x \\<sharp> s\n  x \\<sharp> [p] to x in m\n  x \\<sharp> r'\n\ngoal (1 subgoal):\n 1. m = [Var x] &&& r' = [p]", "by(auto simp add: alpha)"], ["proof (state)\nthis:\n  m = [Var x]\n  r' = [p]\n\ngoal (8 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 2. \\<And>t t' s.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 3. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = App (\\<Lambda> x . t) s \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 4. \\<And>t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . t \\<and>\n                          r' = \\<Lambda> x . t' \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 5. \\<And>t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . App t (Var x) \\<and>\n                          r' = t \\<and> x \\<sharp> t) \\<Longrightarrow>\n       SN r\n 6. \\<And>s.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in [Var x] \\<and>\n                          r' = s \\<and> x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 7. \\<And>s u t.\n       (\\<lbrakk>x \\<noteq> z; x \\<sharp> [p] to x in m; x \\<sharp> r';\n         z \\<sharp> [p] to x in m; z \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = (s to x in t) to z in u \\<and>\n                          r' = s to x in t to z in u \\<and>\n                          x \\<sharp> (z, s, u) \\<and>\n                          z \\<sharp> (s, t)) \\<Longrightarrow>\n       SN r\n 8. \\<And>s s'.\n       \\<lbrakk>[p] to x in m = [s]; r' = [s']; s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> SN r", "hence \"r' = m[x::=p]\""], ["proof (prove)\nusing this:\n  m = [Var x]\n  r' = [p]\n\ngoal (1 subgoal):\n 1. r' = m[x::=p]", "by simp"], ["proof (state)\nthis:\n  r' = m[x::=p]\n\ngoal (8 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 2. \\<And>t t' s.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 3. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = App (\\<Lambda> x . t) s \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 4. \\<And>t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . t \\<and>\n                          r' = \\<Lambda> x . t' \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 5. \\<And>t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . App t (Var x) \\<and>\n                          r' = t \\<and> x \\<sharp> t) \\<Longrightarrow>\n       SN r\n 6. \\<And>s.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = s to x in [Var x] \\<and>\n                          r' = s \\<and> x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 7. \\<And>s u t.\n       (\\<lbrakk>x \\<noteq> z; x \\<sharp> [p] to x in m; x \\<sharp> r';\n         z \\<sharp> [p] to x in m; z \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = (s to x in t) to z in u \\<and>\n                          r' = s to x in t to z in u \\<and>\n                          x \\<sharp> (z, s, u) \\<and>\n                          z \\<sharp> (s, t)) \\<Longrightarrow>\n       SN r\n 8. \\<And>s s'.\n       \\<lbrakk>[p] to x in m = [s]; r' = [s']; s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> SN r", "thus \"SN r\""], ["proof (prove)\nusing this:\n  r' = m[x::=p]\n\ngoal (1 subgoal):\n 1. SN r", "unfolding r"], ["proof (prove)\nusing this:\n  r' = m[x::=p]\n\ngoal (1 subgoal):\n 1. SN (r' \\<star> k)", "using sn"], ["proof (prove)\nusing this:\n  r' = m[x::=p]\n  SN (m[x::=p] \\<star> k)\n\ngoal (1 subgoal):\n 1. SN (r' \\<star> k)", "by simp"], ["proof (state)\nthis:\n  SN r\n\ngoal (7 subgoals):\n 1. \\<And>s s' t.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s' t;\n        s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 2. \\<And>t t' s.\n       \\<lbrakk>[p] to x in m = App s t; r' = App s t';\n        t \\<mapsto> t'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 3. \\<And>s t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = App (\\<Lambda> x . t) s \\<and>\n                          r' = t[x::=s] \\<and>\n                          x \\<sharp> s) \\<Longrightarrow>\n       SN r\n 4. \\<And>t t'.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . t \\<and>\n                          r' = \\<Lambda> x . t' \\<and>\n                          t \\<mapsto> t') \\<Longrightarrow>\n       SN r\n 5. \\<And>t.\n       (\\<lbrakk>x \\<sharp> [p] to x in m; x \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = \\<Lambda> x . App t (Var x) \\<and>\n                          r' = t \\<and> x \\<sharp> t) \\<Longrightarrow>\n       SN r\n 6. \\<And>s u t.\n       (\\<lbrakk>x \\<noteq> z; x \\<sharp> [p] to x in m; x \\<sharp> r';\n         z \\<sharp> [p] to x in m; z \\<sharp> r'\\<rbrakk>\n        \\<Longrightarrow> [p] to x in m = (s to x in t) to z in u \\<and>\n                          r' = s to x in t to z in u \\<and>\n                          x \\<sharp> (z, s, u) \\<and>\n                          z \\<sharp> (s, t)) \\<Longrightarrow>\n       SN r\n 7. \\<And>s s'.\n       \\<lbrakk>[p] to x in m = [s]; r' = [s']; s \\<mapsto> s'\\<rbrakk>\n       \\<Longrightarrow> SN r", "qed (simp_all only: xr xl zl zr abs_fresh , auto)\n          \\<comment> \\<open>There are no other possible reductions of @{term \"[p] to x in\nm\"}.\\<close>"], ["proof (state)\nthis:\n  SN r\n\ngoal (7 subgoals):\n 1. ([p] to x in m) \\<star> k \\<mapsto> r\n 2. x \\<sharp> ([p] to x in m, k, r)\n 3. x \\<sharp> (z, [p] to x in m, k, r)\n 4. z \\<sharp> ([p] to x in m, k, r)\n 5. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = ([p] to x in m) \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 6. \\<And>s n l.\n       \\<lbrakk>[p] to x in m = [s]; k = [x]n\\<ggreater>l;\n        r = n[x::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r\n 7. \\<And>u v n l.\n       \\<lbrakk>x \\<sharp> (z, n); [p] to x in m = u to x in v;\n        k = [z]n\\<ggreater>l; r = (u to x in v to z in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r", "next"], ["proof (state)\ngoal (7 subgoals):\n 1. ([p] to x in m) \\<star> k \\<mapsto> r\n 2. x \\<sharp> ([p] to x in m, k, r)\n 3. x \\<sharp> (z, [p] to x in m, k, r)\n 4. z \\<sharp> ([p] to x in m, k, r)\n 5. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = ([p] to x in m) \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 6. \\<And>s n l.\n       \\<lbrakk>[p] to x in m = [s]; k = [x]n\\<ggreater>l;\n        r = n[x::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r\n 7. \\<And>u v n l.\n       \\<lbrakk>x \\<sharp> (z, n); [p] to x in m = u to x in v;\n        k = [z]n\\<ggreater>l; r = (u to x in v to z in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r", "case (6 k')"], ["proof (state)\nthis:\n   k \\<mapsto> k' \n  r = ([p] to x in m) \\<star> k'\n\ngoal (7 subgoals):\n 1. ([p] to x in m) \\<star> k \\<mapsto> r\n 2. x \\<sharp> ([p] to x in m, k, r)\n 3. x \\<sharp> (z, [p] to x in m, k, r)\n 4. z \\<sharp> ([p] to x in m, k, r)\n 5. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = ([p] to x in m) \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 6. \\<And>s n l.\n       \\<lbrakk>[p] to x in m = [s]; k = [x]n\\<ggreater>l;\n        r = n[x::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r\n 7. \\<And>u v n l.\n       \\<lbrakk>x \\<sharp> (z, n); [p] to x in m = u to x in v;\n        k = [z]n\\<ggreater>l; r = (u to x in v to z in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r", "have k: \"k \\<mapsto> k'\" and r: \"r = ([p] to x in m) \\<star> k'\""], ["proof (prove)\ngoal (1 subgoal):\n 1.  k \\<mapsto> k'  &&& r = ([p] to x in m) \\<star> k'", "by fact+"], ["proof (state)\nthis:\n   k \\<mapsto> k' \n  r = ([p] to x in m) \\<star> k'\n\ngoal (7 subgoals):\n 1. ([p] to x in m) \\<star> k \\<mapsto> r\n 2. x \\<sharp> ([p] to x in m, k, r)\n 3. x \\<sharp> (z, [p] to x in m, k, r)\n 4. z \\<sharp> ([p] to x in m, k, r)\n 5. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = ([p] to x in m) \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 6. \\<And>s n l.\n       \\<lbrakk>[p] to x in m = [s]; k = [x]n\\<ggreater>l;\n        r = n[x::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r\n 7. \\<And>u v n l.\n       \\<lbrakk>x \\<sharp> (z, n); [p] to x in m = u to x in v;\n        k = [z]n\\<ggreater>l; r = (u to x in v to z in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r", "from q k"], ["proof (chain)\npicking this:\n  q = m \\<star> k\n   k \\<mapsto> k'", "have \"q \\<mapsto> m \\<star> k'\""], ["proof (prove)\nusing this:\n  q = m \\<star> k\n   k \\<mapsto> k' \n\ngoal (1 subgoal):\n 1. q \\<mapsto> m \\<star> k'", "unfolding stack_reduction_def"], ["proof (prove)\nusing this:\n  q = m \\<star> k\n  \\<forall>t. t \\<star> k \\<mapsto> t \\<star> k'\n\ngoal (1 subgoal):\n 1. q \\<mapsto> m \\<star> k'", "by blast"], ["proof (state)\nthis:\n  q \\<mapsto> m \\<star> k'\n\ngoal (7 subgoals):\n 1. ([p] to x in m) \\<star> k \\<mapsto> r\n 2. x \\<sharp> ([p] to x in m, k, r)\n 3. x \\<sharp> (z, [p] to x in m, k, r)\n 4. z \\<sharp> ([p] to x in m, k, r)\n 5. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = ([p] to x in m) \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 6. \\<And>s n l.\n       \\<lbrakk>[p] to x in m = [s]; k = [x]n\\<ggreater>l;\n        r = n[x::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r\n 7. \\<And>u v n l.\n       \\<lbrakk>x \\<sharp> (z, n); [p] to x in m = u to x in v;\n        k = [z]n\\<ggreater>l; r = (u to x in v to z in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r", "moreover"], ["proof (state)\nthis:\n  q \\<mapsto> m \\<star> k'\n\ngoal (7 subgoals):\n 1. ([p] to x in m) \\<star> k \\<mapsto> r\n 2. x \\<sharp> ([p] to x in m, k, r)\n 3. x \\<sharp> (z, [p] to x in m, k, r)\n 4. z \\<sharp> ([p] to x in m, k, r)\n 5. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = ([p] to x in m) \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 6. \\<And>s n l.\n       \\<lbrakk>[p] to x in m = [s]; k = [x]n\\<ggreater>l;\n        r = n[x::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r\n 7. \\<And>u v n l.\n       \\<lbrakk>x \\<sharp> (z, n); [p] to x in m = u to x in v;\n        k = [z]n\\<ggreater>l; r = (u to x in v to z in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r", "have \"m \\<star> k' = m \\<star> k'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m \\<star> k' = m \\<star> k'", ".."], ["proof (state)\nthis:\n  m \\<star> k' = m \\<star> k'\n\ngoal (7 subgoals):\n 1. ([p] to x in m) \\<star> k \\<mapsto> r\n 2. x \\<sharp> ([p] to x in m, k, r)\n 3. x \\<sharp> (z, [p] to x in m, k, r)\n 4. z \\<sharp> ([p] to x in m, k, r)\n 5. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = ([p] to x in m) \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 6. \\<And>s n l.\n       \\<lbrakk>[p] to x in m = [s]; k = [x]n\\<ggreater>l;\n        r = n[x::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r\n 7. \\<And>u v n l.\n       \\<lbrakk>x \\<sharp> (z, n); [p] to x in m = u to x in v;\n        k = [z]n\\<ggreater>l; r = (u to x in v to z in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r", "moreover"], ["proof (state)\nthis:\n  m \\<star> k' = m \\<star> k'\n\ngoal (7 subgoals):\n 1. ([p] to x in m) \\<star> k \\<mapsto> r\n 2. x \\<sharp> ([p] to x in m, k, r)\n 3. x \\<sharp> (z, [p] to x in m, k, r)\n 4. z \\<sharp> ([p] to x in m, k, r)\n 5. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = ([p] to x in m) \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 6. \\<And>s n l.\n       \\<lbrakk>[p] to x in m = [s]; k = [x]n\\<ggreater>l;\n        r = n[x::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r\n 7. \\<And>u v n l.\n       \\<lbrakk>x \\<sharp> (z, n); [p] to x in m = u to x in v;\n        k = [z]n\\<ggreater>l; r = (u to x in v to z in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r", "{"], ["proof (state)\nthis:\n  m \\<star> k' = m \\<star> k'\n\ngoal (7 subgoals):\n 1. ([p] to x in m) \\<star> k \\<mapsto> r\n 2. x \\<sharp> ([p] to x in m, k, r)\n 3. x \\<sharp> (z, [p] to x in m, k, r)\n 4. z \\<sharp> ([p] to x in m, k, r)\n 5. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = ([p] to x in m) \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 6. \\<And>s n l.\n       \\<lbrakk>[p] to x in m = [s]; k = [x]n\\<ggreater>l;\n        r = n[x::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r\n 7. \\<And>u v n l.\n       \\<lbrakk>x \\<sharp> (z, n); [p] to x in m = u to x in v;\n        k = [z]n\\<ggreater>l; r = (u to x in v to z in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r", "have \"SN (m[x::=p] \\<star> k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN (m[x::=p] \\<star> k)", "by fact"], ["proof (state)\nthis:\n  SN (m[x::=p] \\<star> k)\n\ngoal (7 subgoals):\n 1. ([p] to x in m) \\<star> k \\<mapsto> r\n 2. x \\<sharp> ([p] to x in m, k, r)\n 3. x \\<sharp> (z, [p] to x in m, k, r)\n 4. z \\<sharp> ([p] to x in m, k, r)\n 5. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = ([p] to x in m) \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 6. \\<And>s n l.\n       \\<lbrakk>[p] to x in m = [s]; k = [x]n\\<ggreater>l;\n        r = n[x::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r\n 7. \\<And>u v n l.\n       \\<lbrakk>x \\<sharp> (z, n); [p] to x in m = u to x in v;\n        k = [z]n\\<ggreater>l; r = (u to x in v to z in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r", "moreover"], ["proof (state)\nthis:\n  SN (m[x::=p] \\<star> k)\n\ngoal (7 subgoals):\n 1. ([p] to x in m) \\<star> k \\<mapsto> r\n 2. x \\<sharp> ([p] to x in m, k, r)\n 3. x \\<sharp> (z, [p] to x in m, k, r)\n 4. z \\<sharp> ([p] to x in m, k, r)\n 5. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = ([p] to x in m) \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 6. \\<And>s n l.\n       \\<lbrakk>[p] to x in m = [s]; k = [x]n\\<ggreater>l;\n        r = n[x::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r\n 7. \\<And>u v n l.\n       \\<lbrakk>x \\<sharp> (z, n); [p] to x in m = u to x in v;\n        k = [z]n\\<ggreater>l; r = (u to x in v to z in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r", "have \"(m[x::=p]) \\<star> k \\<mapsto> (m[x::=p]) \\<star> k'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. m[x::=p] \\<star> k \\<mapsto> m[x::=p] \\<star> k'", "using k"], ["proof (prove)\nusing this:\n   k \\<mapsto> k' \n\ngoal (1 subgoal):\n 1. m[x::=p] \\<star> k \\<mapsto> m[x::=p] \\<star> k'", "unfolding stack_reduction_def"], ["proof (prove)\nusing this:\n  \\<forall>t. t \\<star> k \\<mapsto> t \\<star> k'\n\ngoal (1 subgoal):\n 1. m[x::=p] \\<star> k \\<mapsto> m[x::=p] \\<star> k'", ".."], ["proof (state)\nthis:\n  m[x::=p] \\<star> k \\<mapsto> m[x::=p] \\<star> k'\n\ngoal (7 subgoals):\n 1. ([p] to x in m) \\<star> k \\<mapsto> r\n 2. x \\<sharp> ([p] to x in m, k, r)\n 3. x \\<sharp> (z, [p] to x in m, k, r)\n 4. z \\<sharp> ([p] to x in m, k, r)\n 5. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = ([p] to x in m) \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 6. \\<And>s n l.\n       \\<lbrakk>[p] to x in m = [s]; k = [x]n\\<ggreater>l;\n        r = n[x::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r\n 7. \\<And>u v n l.\n       \\<lbrakk>x \\<sharp> (z, n); [p] to x in m = u to x in v;\n        k = [z]n\\<ggreater>l; r = (u to x in v to z in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r", "ultimately"], ["proof (chain)\npicking this:\n  SN (m[x::=p] \\<star> k)\n  m[x::=p] \\<star> k \\<mapsto> m[x::=p] \\<star> k'", "have \"SN (m[x::=p] \\<star> k')\""], ["proof (prove)\nusing this:\n  SN (m[x::=p] \\<star> k)\n  m[x::=p] \\<star> k \\<mapsto> m[x::=p] \\<star> k'\n\ngoal (1 subgoal):\n 1. SN (m[x::=p] \\<star> k')", ".."], ["proof (state)\nthis:\n  SN (m[x::=p] \\<star> k')\n\ngoal (7 subgoals):\n 1. ([p] to x in m) \\<star> k \\<mapsto> r\n 2. x \\<sharp> ([p] to x in m, k, r)\n 3. x \\<sharp> (z, [p] to x in m, k, r)\n 4. z \\<sharp> ([p] to x in m, k, r)\n 5. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = ([p] to x in m) \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 6. \\<And>s n l.\n       \\<lbrakk>[p] to x in m = [s]; k = [x]n\\<ggreater>l;\n        r = n[x::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r\n 7. \\<And>u v n l.\n       \\<lbrakk>x \\<sharp> (z, n); [p] to x in m = u to x in v;\n        k = [z]n\\<ggreater>l; r = (u to x in v to z in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r", "}"], ["proof (state)\nthis:\n  SN (m[x::=p] \\<star> k')\n\ngoal (7 subgoals):\n 1. ([p] to x in m) \\<star> k \\<mapsto> r\n 2. x \\<sharp> ([p] to x in m, k, r)\n 3. x \\<sharp> (z, [p] to x in m, k, r)\n 4. z \\<sharp> ([p] to x in m, k, r)\n 5. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = ([p] to x in m) \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 6. \\<And>s n l.\n       \\<lbrakk>[p] to x in m = [s]; k = [x]n\\<ggreater>l;\n        r = n[x::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r\n 7. \\<And>u v n l.\n       \\<lbrakk>x \\<sharp> (z, n); [p] to x in m = u to x in v;\n        k = [z]n\\<ggreater>l; r = (u to x in v to z in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r", "moreover"], ["proof (state)\nthis:\n  SN (m[x::=p] \\<star> k')\n\ngoal (7 subgoals):\n 1. ([p] to x in m) \\<star> k \\<mapsto> r\n 2. x \\<sharp> ([p] to x in m, k, r)\n 3. x \\<sharp> (z, [p] to x in m, k, r)\n 4. z \\<sharp> ([p] to x in m, k, r)\n 5. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = ([p] to x in m) \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 6. \\<And>s n l.\n       \\<lbrakk>[p] to x in m = [s]; k = [x]n\\<ggreater>l;\n        r = n[x::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r\n 7. \\<And>u v n l.\n       \\<lbrakk>x \\<sharp> (z, n); [p] to x in m = u to x in v;\n        k = [z]n\\<ggreater>l; r = (u to x in v to z in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r", "note xp"], ["proof (state)\nthis:\n  x \\<sharp> p\n\ngoal (7 subgoals):\n 1. ([p] to x in m) \\<star> k \\<mapsto> r\n 2. x \\<sharp> ([p] to x in m, k, r)\n 3. x \\<sharp> (z, [p] to x in m, k, r)\n 4. z \\<sharp> ([p] to x in m, k, r)\n 5. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = ([p] to x in m) \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 6. \\<And>s n l.\n       \\<lbrakk>[p] to x in m = [s]; k = [x]n\\<ggreater>l;\n        r = n[x::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r\n 7. \\<And>u v n l.\n       \\<lbrakk>x \\<sharp> (z, n); [p] to x in m = u to x in v;\n        k = [z]n\\<ggreater>l; r = (u to x in v to z in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r", "moreover"], ["proof (state)\nthis:\n  x \\<sharp> p\n\ngoal (7 subgoals):\n 1. ([p] to x in m) \\<star> k \\<mapsto> r\n 2. x \\<sharp> ([p] to x in m, k, r)\n 3. x \\<sharp> (z, [p] to x in m, k, r)\n 4. z \\<sharp> ([p] to x in m, k, r)\n 5. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = ([p] to x in m) \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 6. \\<And>s n l.\n       \\<lbrakk>[p] to x in m = [s]; k = [x]n\\<ggreater>l;\n        r = n[x::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r\n 7. \\<And>u v n l.\n       \\<lbrakk>x \\<sharp> (z, n); [p] to x in m = u to x in v;\n        k = [z]n\\<ggreater>l; r = (u to x in v to z in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r", "from k xk"], ["proof (chain)\npicking this:\n   k \\<mapsto> k' \n  x \\<sharp> k", "have \"x \\<sharp> k'\""], ["proof (prove)\nusing this:\n   k \\<mapsto> k' \n  x \\<sharp> k\n\ngoal (1 subgoal):\n 1. x \\<sharp> k'", "by (rule stack_reduction_fresh)"], ["proof (state)\nthis:\n  x \\<sharp> k'\n\ngoal (7 subgoals):\n 1. ([p] to x in m) \\<star> k \\<mapsto> r\n 2. x \\<sharp> ([p] to x in m, k, r)\n 3. x \\<sharp> (z, [p] to x in m, k, r)\n 4. z \\<sharp> ([p] to x in m, k, r)\n 5. \\<And>k'.\n       \\<lbrakk> k \\<mapsto> k' ; r = ([p] to x in m) \\<star> k'\\<rbrakk>\n       \\<Longrightarrow> SN r\n 6. \\<And>s n l.\n       \\<lbrakk>[p] to x in m = [s]; k = [x]n\\<ggreater>l;\n        r = n[x::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r\n 7. \\<And>u v n l.\n       \\<lbrakk>x \\<sharp> (z, n); [p] to x in m = u to x in v;\n        k = [z]n\\<ggreater>l; r = (u to x in v to z in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r", "ultimately"], ["proof (chain)\npicking this:\n  q \\<mapsto> m \\<star> k'\n  m \\<star> k' = m \\<star> k'\n  SN (m[x::=p] \\<star> k')\n  x \\<sharp> p\n  x \\<sharp> k'", "show \"SN r\""], ["proof (prove)\nusing this:\n  q \\<mapsto> m \\<star> k'\n  m \\<star> k' = m \\<star> k'\n  SN (m[x::=p] \\<star> k')\n  x \\<sharp> p\n  x \\<sharp> k'\n\ngoal (1 subgoal):\n 1. SN r", "unfolding r"], ["proof (prove)\nusing this:\n  q \\<mapsto> m \\<star> k'\n  m \\<star> k' = m \\<star> k'\n  SN (m[x::=p] \\<star> k')\n  x \\<sharp> p\n  x \\<sharp> k'\n\ngoal (1 subgoal):\n 1. SN (([p] to x in m) \\<star> k')", "by (rule ih_q)"], ["proof (state)\nthis:\n  SN r\n\ngoal (6 subgoals):\n 1. ([p] to x in m) \\<star> k \\<mapsto> r\n 2. x \\<sharp> ([p] to x in m, k, r)\n 3. x \\<sharp> (z, [p] to x in m, k, r)\n 4. z \\<sharp> ([p] to x in m, k, r)\n 5. \\<And>s n l.\n       \\<lbrakk>[p] to x in m = [s]; k = [x]n\\<ggreater>l;\n        r = n[x::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r\n 6. \\<And>u v n l.\n       \\<lbrakk>x \\<sharp> (z, n); [p] to x in m = u to x in v;\n        k = [z]n\\<ggreater>l; r = (u to x in v to z in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r", "next"], ["proof (state)\ngoal (6 subgoals):\n 1. ([p] to x in m) \\<star> k \\<mapsto> r\n 2. x \\<sharp> ([p] to x in m, k, r)\n 3. x \\<sharp> (z, [p] to x in m, k, r)\n 4. z \\<sharp> ([p] to x in m, k, r)\n 5. \\<And>s n l.\n       \\<lbrakk>[p] to x in m = [s]; k = [x]n\\<ggreater>l;\n        r = n[x::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r\n 6. \\<And>u v n l.\n       \\<lbrakk>x \\<sharp> (z, n); [p] to x in m = u to x in v;\n        k = [z]n\\<ggreater>l; r = (u to x in v to z in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r", "txt \\<open>The case of an assoc interaction between @{term \"[p] to x in m\" } and\n@{term \"k\"} is easily handled by the induction hypothesis, since @{term\n\"(m[x::=p]) \\<star> k\"} remains fixed under assoc.\\<close>"], ["proof (state)\ngoal (6 subgoals):\n 1. ([p] to x in m) \\<star> k \\<mapsto> r\n 2. x \\<sharp> ([p] to x in m, k, r)\n 3. x \\<sharp> (z, [p] to x in m, k, r)\n 4. z \\<sharp> ([p] to x in m, k, r)\n 5. \\<And>s n l.\n       \\<lbrakk>[p] to x in m = [s]; k = [x]n\\<ggreater>l;\n        r = n[x::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r\n 6. \\<And>u v n l.\n       \\<lbrakk>x \\<sharp> (z, n); [p] to x in m = u to x in v;\n        k = [z]n\\<ggreater>l; r = (u to x in v to z in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r", "case (8 s t u L)"], ["proof (state)\nthis:\n  x \\<sharp> (z, u)\n  [p] to x in m = s to x in t\n  k = [z]u\\<ggreater>L\n  r = (s to x in t to z in u) \\<star> L\n\ngoal (6 subgoals):\n 1. ([p] to x in m) \\<star> k \\<mapsto> r\n 2. x \\<sharp> ([p] to x in m, k, r)\n 3. x \\<sharp> (z, [p] to x in m, k, r)\n 4. z \\<sharp> ([p] to x in m, k, r)\n 5. \\<And>s n l.\n       \\<lbrakk>[p] to x in m = [s]; k = [x]n\\<ggreater>l;\n        r = n[x::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r\n 6. \\<And>u v n l.\n       \\<lbrakk>x \\<sharp> (z, n); [p] to x in m = u to x in v;\n        k = [z]n\\<ggreater>l; r = (u to x in v to z in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r", "hence k: \"k = [z]u\\<ggreater>L\"\n            and r: \"r = ([p] to x in (m to z in u)) \\<star> L\" \n            and u: \"x \\<sharp> u\""], ["proof (prove)\nusing this:\n  x \\<sharp> (z, u)\n  [p] to x in m = s to x in t\n  k = [z]u\\<ggreater>L\n  r = (s to x in t to z in u) \\<star> L\n\ngoal (1 subgoal):\n 1. k = [z]u\\<ggreater>L &&&\n    r = ([p] to x in m to z in u) \\<star> L &&& x \\<sharp> u", "by(auto simp add: alpha fresh_prod)"], ["proof (state)\nthis:\n  k = [z]u\\<ggreater>L\n  r = ([p] to x in m to z in u) \\<star> L\n  x \\<sharp> u\n\ngoal (6 subgoals):\n 1. ([p] to x in m) \\<star> k \\<mapsto> r\n 2. x \\<sharp> ([p] to x in m, k, r)\n 3. x \\<sharp> (z, [p] to x in m, k, r)\n 4. z \\<sharp> ([p] to x in m, k, r)\n 5. \\<And>s n l.\n       \\<lbrakk>[p] to x in m = [s]; k = [x]n\\<ggreater>l;\n        r = n[x::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r\n 6. \\<And>u v n l.\n       \\<lbrakk>x \\<sharp> (z, n); [p] to x in m = u to x in v;\n        k = [z]n\\<ggreater>l; r = (u to x in v to z in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r", "let ?k = L and ?m = \"m to z in u\""], ["proof (state)\ngoal (6 subgoals):\n 1. ([p] to x in m) \\<star> k \\<mapsto> r\n 2. x \\<sharp> ([p] to x in m, k, r)\n 3. x \\<sharp> (z, [p] to x in m, k, r)\n 4. z \\<sharp> ([p] to x in m, k, r)\n 5. \\<And>s n l.\n       \\<lbrakk>[p] to x in m = [s]; k = [x]n\\<ggreater>l;\n        r = n[x::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r\n 6. \\<And>u v n l.\n       \\<lbrakk>x \\<sharp> (z, n); [p] to x in m = u to x in v;\n        k = [z]n\\<ggreater>l; r = (u to x in v to z in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r", "from k z"], ["proof (chain)\npicking this:\n  k = [z]u\\<ggreater>L\n  z \\<sharp> (x, p, m, k, r)", "have \"|?k| < |k|\""], ["proof (prove)\nusing this:\n  k = [z]u\\<ggreater>L\n  z \\<sharp> (x, p, m, k, r)\n\ngoal (1 subgoal):\n 1. |L| < |k|", "by (simp add: fresh_prod)"], ["proof (state)\nthis:\n  |L| < |k|\n\ngoal (6 subgoals):\n 1. ([p] to x in m) \\<star> k \\<mapsto> r\n 2. x \\<sharp> ([p] to x in m, k, r)\n 3. x \\<sharp> (z, [p] to x in m, k, r)\n 4. z \\<sharp> ([p] to x in m, k, r)\n 5. \\<And>s n l.\n       \\<lbrakk>[p] to x in m = [s]; k = [x]n\\<ggreater>l;\n        r = n[x::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r\n 6. \\<And>u v n l.\n       \\<lbrakk>x \\<sharp> (z, n); [p] to x in m = u to x in v;\n        k = [z]n\\<ggreater>l; r = (u to x in v to z in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r", "moreover"], ["proof (state)\nthis:\n  |L| < |k|\n\ngoal (6 subgoals):\n 1. ([p] to x in m) \\<star> k \\<mapsto> r\n 2. x \\<sharp> ([p] to x in m, k, r)\n 3. x \\<sharp> (z, [p] to x in m, k, r)\n 4. z \\<sharp> ([p] to x in m, k, r)\n 5. \\<And>s n l.\n       \\<lbrakk>[p] to x in m = [s]; k = [x]n\\<ggreater>l;\n        r = n[x::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r\n 6. \\<And>u v n l.\n       \\<lbrakk>x \\<sharp> (z, n); [p] to x in m = u to x in v;\n        k = [z]n\\<ggreater>l; r = (u to x in v to z in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r", "have \"q =  ?m \\<star> ?k\""], ["proof (prove)\ngoal (1 subgoal):\n 1. q = (m to z in u) \\<star> L", "using k q"], ["proof (prove)\nusing this:\n  k = [z]u\\<ggreater>L\n  q = m \\<star> k\n\ngoal (1 subgoal):\n 1. q = (m to z in u) \\<star> L", "by simp"], ["proof (state)\nthis:\n  q = (m to z in u) \\<star> L\n\ngoal (6 subgoals):\n 1. ([p] to x in m) \\<star> k \\<mapsto> r\n 2. x \\<sharp> ([p] to x in m, k, r)\n 3. x \\<sharp> (z, [p] to x in m, k, r)\n 4. z \\<sharp> ([p] to x in m, k, r)\n 5. \\<And>s n l.\n       \\<lbrakk>[p] to x in m = [s]; k = [x]n\\<ggreater>l;\n        r = n[x::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r\n 6. \\<And>u v n l.\n       \\<lbrakk>x \\<sharp> (z, n); [p] to x in m = u to x in v;\n        k = [z]n\\<ggreater>l; r = (u to x in v to z in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r", "moreover"], ["proof (state)\nthis:\n  q = (m to z in u) \\<star> L\n\ngoal (6 subgoals):\n 1. ([p] to x in m) \\<star> k \\<mapsto> r\n 2. x \\<sharp> ([p] to x in m, k, r)\n 3. x \\<sharp> (z, [p] to x in m, k, r)\n 4. z \\<sharp> ([p] to x in m, k, r)\n 5. \\<And>s n l.\n       \\<lbrakk>[p] to x in m = [s]; k = [x]n\\<ggreater>l;\n        r = n[x::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r\n 6. \\<And>u v n l.\n       \\<lbrakk>x \\<sharp> (z, n); [p] to x in m = u to x in v;\n        k = [z]n\\<ggreater>l; r = (u to x in v to z in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r", "{"], ["proof (state)\nthis:\n  q = (m to z in u) \\<star> L\n\ngoal (6 subgoals):\n 1. ([p] to x in m) \\<star> k \\<mapsto> r\n 2. x \\<sharp> ([p] to x in m, k, r)\n 3. x \\<sharp> (z, [p] to x in m, k, r)\n 4. z \\<sharp> ([p] to x in m, k, r)\n 5. \\<And>s n l.\n       \\<lbrakk>[p] to x in m = [s]; k = [x]n\\<ggreater>l;\n        r = n[x::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r\n 6. \\<And>u v n l.\n       \\<lbrakk>x \\<sharp> (z, n); [p] to x in m = u to x in v;\n        k = [z]n\\<ggreater>l; r = (u to x in v to z in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r", "from k u z xp"], ["proof (chain)\npicking this:\n  k = [z]u\\<ggreater>L\n  x \\<sharp> u\n  z \\<sharp> (x, p, m, k, r)\n  x \\<sharp> p", "have \"(?m[x::=p] \\<star> ?k) = (m[x::=p]) \\<star> k\""], ["proof (prove)\nusing this:\n  k = [z]u\\<ggreater>L\n  x \\<sharp> u\n  z \\<sharp> (x, p, m, k, r)\n  x \\<sharp> p\n\ngoal (1 subgoal):\n 1. (m to z in u)[x::=p] \\<star> L = m[x::=p] \\<star> k", "by(simp add: fresh_prod forget)"], ["proof (state)\nthis:\n  (m to z in u)[x::=p] \\<star> L = m[x::=p] \\<star> k\n\ngoal (6 subgoals):\n 1. ([p] to x in m) \\<star> k \\<mapsto> r\n 2. x \\<sharp> ([p] to x in m, k, r)\n 3. x \\<sharp> (z, [p] to x in m, k, r)\n 4. z \\<sharp> ([p] to x in m, k, r)\n 5. \\<And>s n l.\n       \\<lbrakk>[p] to x in m = [s]; k = [x]n\\<ggreater>l;\n        r = n[x::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r\n 6. \\<And>u v n l.\n       \\<lbrakk>x \\<sharp> (z, n); [p] to x in m = u to x in v;\n        k = [z]n\\<ggreater>l; r = (u to x in v to z in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r", "hence \"SN (?m[x::=p] \\<star> ?k)\""], ["proof (prove)\nusing this:\n  (m to z in u)[x::=p] \\<star> L = m[x::=p] \\<star> k\n\ngoal (1 subgoal):\n 1. SN ((m to z in u)[x::=p] \\<star> L)", "using sn"], ["proof (prove)\nusing this:\n  (m to z in u)[x::=p] \\<star> L = m[x::=p] \\<star> k\n  SN (m[x::=p] \\<star> k)\n\ngoal (1 subgoal):\n 1. SN ((m to z in u)[x::=p] \\<star> L)", "by simp"], ["proof (state)\nthis:\n  SN ((m to z in u)[x::=p] \\<star> L)\n\ngoal (6 subgoals):\n 1. ([p] to x in m) \\<star> k \\<mapsto> r\n 2. x \\<sharp> ([p] to x in m, k, r)\n 3. x \\<sharp> (z, [p] to x in m, k, r)\n 4. z \\<sharp> ([p] to x in m, k, r)\n 5. \\<And>s n l.\n       \\<lbrakk>[p] to x in m = [s]; k = [x]n\\<ggreater>l;\n        r = n[x::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r\n 6. \\<And>u v n l.\n       \\<lbrakk>x \\<sharp> (z, n); [p] to x in m = u to x in v;\n        k = [z]n\\<ggreater>l; r = (u to x in v to z in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r", "}"], ["proof (state)\nthis:\n  SN ((m to z in u)[x::=p] \\<star> L)\n\ngoal (6 subgoals):\n 1. ([p] to x in m) \\<star> k \\<mapsto> r\n 2. x \\<sharp> ([p] to x in m, k, r)\n 3. x \\<sharp> (z, [p] to x in m, k, r)\n 4. z \\<sharp> ([p] to x in m, k, r)\n 5. \\<And>s n l.\n       \\<lbrakk>[p] to x in m = [s]; k = [x]n\\<ggreater>l;\n        r = n[x::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r\n 6. \\<And>u v n l.\n       \\<lbrakk>x \\<sharp> (z, n); [p] to x in m = u to x in v;\n        k = [z]n\\<ggreater>l; r = (u to x in v to z in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r", "moreover"], ["proof (state)\nthis:\n  SN ((m to z in u)[x::=p] \\<star> L)\n\ngoal (6 subgoals):\n 1. ([p] to x in m) \\<star> k \\<mapsto> r\n 2. x \\<sharp> ([p] to x in m, k, r)\n 3. x \\<sharp> (z, [p] to x in m, k, r)\n 4. z \\<sharp> ([p] to x in m, k, r)\n 5. \\<And>s n l.\n       \\<lbrakk>[p] to x in m = [s]; k = [x]n\\<ggreater>l;\n        r = n[x::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r\n 6. \\<And>u v n l.\n       \\<lbrakk>x \\<sharp> (z, n); [p] to x in m = u to x in v;\n        k = [z]n\\<ggreater>l; r = (u to x in v to z in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r", "from xp xk k"], ["proof (chain)\npicking this:\n  x \\<sharp> p\n  x \\<sharp> k\n  k = [z]u\\<ggreater>L", "have \"x \\<sharp> p\" and \"x \\<sharp> ?k\""], ["proof (prove)\nusing this:\n  x \\<sharp> p\n  x \\<sharp> k\n  k = [z]u\\<ggreater>L\n\ngoal (1 subgoal):\n 1. x \\<sharp> p &&& x \\<sharp> L", "by auto"], ["proof (state)\nthis:\n  x \\<sharp> p\n  x \\<sharp> L\n\ngoal (6 subgoals):\n 1. ([p] to x in m) \\<star> k \\<mapsto> r\n 2. x \\<sharp> ([p] to x in m, k, r)\n 3. x \\<sharp> (z, [p] to x in m, k, r)\n 4. z \\<sharp> ([p] to x in m, k, r)\n 5. \\<And>s n l.\n       \\<lbrakk>[p] to x in m = [s]; k = [x]n\\<ggreater>l;\n        r = n[x::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r\n 6. \\<And>u v n l.\n       \\<lbrakk>x \\<sharp> (z, n); [p] to x in m = u to x in v;\n        k = [z]n\\<ggreater>l; r = (u to x in v to z in n) \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r", "ultimately"], ["proof (chain)\npicking this:\n  |L| < |k|\n  q = (m to z in u) \\<star> L\n  SN ((m to z in u)[x::=p] \\<star> L)\n  x \\<sharp> p\n  x \\<sharp> L", "show \"SN r\""], ["proof (prove)\nusing this:\n  |L| < |k|\n  q = (m to z in u) \\<star> L\n  SN ((m to z in u)[x::=p] \\<star> L)\n  x \\<sharp> p\n  x \\<sharp> L\n\ngoal (1 subgoal):\n 1. SN r", "unfolding r"], ["proof (prove)\nusing this:\n  |L| < |k|\n  q = (m to z in u) \\<star> L\n  SN ((m to z in u)[x::=p] \\<star> L)\n  x \\<sharp> p\n  x \\<sharp> L\n\ngoal (1 subgoal):\n 1. SN (([p] to x in m to z in u) \\<star> L)", "by (rule ih_k)"], ["proof (state)\nthis:\n  SN r\n\ngoal (5 subgoals):\n 1. ([p] to x in m) \\<star> k \\<mapsto> r\n 2. x \\<sharp> ([p] to x in m, k, r)\n 3. x \\<sharp> (z, [p] to x in m, k, r)\n 4. z \\<sharp> ([p] to x in m, k, r)\n 5. \\<And>s n l.\n       \\<lbrakk>[p] to x in m = [s]; k = [x]n\\<ggreater>l;\n        r = n[x::=s] \\<star> l\\<rbrakk>\n       \\<Longrightarrow> SN r", "qed (insert red z x1 x2 xp xk ,\n            auto simp add: fresh_prod fresh_atm abs_fresh)"], ["proof (state)\nthis:\n  SN r\n\ngoal (1 subgoal):\n 1. \\<And>p q k m.\n       \\<lbrakk>\\<And>p' m.\n                   \\<lbrakk>p \\<mapsto> p'; q = m \\<star> k;\n                    SN (m[x::=p'] \\<star> k); x \\<sharp> p';\n                    x \\<sharp> k\\<rbrakk>\n                   \\<Longrightarrow> SN (([p'] to x in m) \\<star> k);\n        \\<And>q' k m.\n           \\<lbrakk>q \\<mapsto> q'; q' = m \\<star> k;\n            SN (m[x::=p] \\<star> k); x \\<sharp> p; x \\<sharp> k\\<rbrakk>\n           \\<Longrightarrow> SN (([p] to x in m) \\<star> k);\n        \\<And>k' m.\n           \\<lbrakk>|k'| < |k|; q = m \\<star> k'; SN (m[x::=p] \\<star> k');\n            x \\<sharp> p; x \\<sharp> k'\\<rbrakk>\n           \\<Longrightarrow> SN (([p] to x in m) \\<star> k');\n        q = m \\<star> k; SN (m[x::=p] \\<star> k); x \\<sharp> p;\n        x \\<sharp> k\\<rbrakk>\n       \\<Longrightarrow> SN (([p] to x in m) \\<star> k)", "}"], ["proof (state)\nthis:\n  ([p] to x in m) \\<star> k \\<mapsto> ?r2 \\<Longrightarrow> SN ?r2\n\ngoal (1 subgoal):\n 1. \\<And>p q k m.\n       \\<lbrakk>\\<And>p' m.\n                   \\<lbrakk>p \\<mapsto> p'; q = m \\<star> k;\n                    SN (m[x::=p'] \\<star> k); x \\<sharp> p';\n                    x \\<sharp> k\\<rbrakk>\n                   \\<Longrightarrow> SN (([p'] to x in m) \\<star> k);\n        \\<And>q' k m.\n           \\<lbrakk>q \\<mapsto> q'; q' = m \\<star> k;\n            SN (m[x::=p] \\<star> k); x \\<sharp> p; x \\<sharp> k\\<rbrakk>\n           \\<Longrightarrow> SN (([p] to x in m) \\<star> k);\n        \\<And>k' m.\n           \\<lbrakk>|k'| < |k|; q = m \\<star> k'; SN (m[x::=p] \\<star> k');\n            x \\<sharp> p; x \\<sharp> k'\\<rbrakk>\n           \\<Longrightarrow> SN (([p] to x in m) \\<star> k');\n        q = m \\<star> k; SN (m[x::=p] \\<star> k); x \\<sharp> p;\n        x \\<sharp> k\\<rbrakk>\n       \\<Longrightarrow> SN (([p] to x in m) \\<star> k)", "thus \"SN (([p] to x in m) \\<star> k)\""], ["proof (prove)\nusing this:\n  ([p] to x in m) \\<star> k \\<mapsto> ?r2 \\<Longrightarrow> SN ?r2\n\ngoal (1 subgoal):\n 1. SN (([p] to x in m) \\<star> k)", ".."], ["proof (state)\nthis:\n  SN (([p] to x in m) \\<star> k)\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<lbrakk>q = ?m \\<star> k; SN (?m[x::=p] \\<star> k)\\<rbrakk>\n  \\<Longrightarrow> SN (([p] to x in ?m) \\<star> k)\n\ngoal (1 subgoal):\n 1. SN (([p] to x in n) \\<star> k)", "}"], ["proof (state)\nthis:\n  \\<lbrakk>SN ?q3; ?q3 = ?m \\<star> k; SN (?m[x::=p] \\<star> k)\\<rbrakk>\n  \\<Longrightarrow> SN (([p] to x in ?m) \\<star> k)\n\ngoal (1 subgoal):\n 1. SN (([p] to x in n) \\<star> k)", "moreover"], ["proof (state)\nthis:\n  \\<lbrakk>SN ?q3; ?q3 = ?m \\<star> k; SN (?m[x::=p] \\<star> k)\\<rbrakk>\n  \\<Longrightarrow> SN (([p] to x in ?m) \\<star> k)\n\ngoal (1 subgoal):\n 1. SN (([p] to x in n) \\<star> k)", "have \"SN ((n[x::=p]) \\<star> k)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN (n[x::=p] \\<star> k)", "by fact"], ["proof (state)\nthis:\n  SN (n[x::=p] \\<star> k)\n\ngoal (1 subgoal):\n 1. SN (([p] to x in n) \\<star> k)", "moreover"], ["proof (state)\nthis:\n  SN (n[x::=p] \\<star> k)\n\ngoal (1 subgoal):\n 1. SN (([p] to x in n) \\<star> k)", "hence \"SN (n \\<star> k)\""], ["proof (prove)\nusing this:\n  SN (n[x::=p] \\<star> k)\n\ngoal (1 subgoal):\n 1. SN (n \\<star> k)", "using \\<open>x \\<sharp> k\\<close>"], ["proof (prove)\nusing this:\n  SN (n[x::=p] \\<star> k)\n  x \\<sharp> k\n\ngoal (1 subgoal):\n 1. SN (n \\<star> k)", "by (rule sn_forget')"], ["proof (state)\nthis:\n  SN (n \\<star> k)\n\ngoal (1 subgoal):\n 1. SN (([p] to x in n) \\<star> k)", "ultimately"], ["proof (chain)\npicking this:\n  \\<lbrakk>SN ?q3; ?q3 = ?m \\<star> k; SN (?m[x::=p] \\<star> k)\\<rbrakk>\n  \\<Longrightarrow> SN (([p] to x in ?m) \\<star> k)\n  SN (n[x::=p] \\<star> k)\n  SN (n \\<star> k)", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>SN ?q3; ?q3 = ?m \\<star> k; SN (?m[x::=p] \\<star> k)\\<rbrakk>\n  \\<Longrightarrow> SN (([p] to x in ?m) \\<star> k)\n  SN (n[x::=p] \\<star> k)\n  SN (n \\<star> k)\n\ngoal (1 subgoal):\n 1. SN (([p] to x in n) \\<star> k)", "by blast"], ["proof (state)\nthis:\n  SN (([p] to x in n) \\<star> k)\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>Having established the claim above, we use it show that\n\\textsf{to}-bindings preserve reducibility.\\<close>"], ["", "lemma to_RED:\n  assumes s: \"s \\<in> RED (T \\<sigma>)\"\n  and t : \" \\<forall> p \\<in> RED \\<sigma> . t[x::=p] \\<in> RED (T \\<tau>)\"\n  shows \"s to x in t \\<in> RED (T \\<tau>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. s to x in t \\<in> RED (T \\<tau>)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. s to x in t \\<in> RED (T \\<tau>)", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. s to x in t \\<in> RED (T \\<tau>)", "fix K"], ["proof (state)\ngoal (1 subgoal):\n 1. s to x in t \\<in> RED (T \\<tau>)", "assume k: \"K \\<in> SRED \\<tau>\""], ["proof (state)\nthis:\n  K \\<in> SRED \\<tau>\n\ngoal (1 subgoal):\n 1. s to x in t \\<in> RED (T \\<tau>)", "{"], ["proof (state)\nthis:\n  K \\<in> SRED \\<tau>\n\ngoal (1 subgoal):\n 1. s to x in t \\<in> RED (T \\<tau>)", "fix p"], ["proof (state)\ngoal (1 subgoal):\n 1. s to x in t \\<in> RED (T \\<tau>)", "assume p: \"p \\<in> RED \\<sigma>\""], ["proof (state)\nthis:\n  p \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. s to x in t \\<in> RED (T \\<tau>)", "hence snp: \"SN p\""], ["proof (prove)\nusing this:\n  p \\<in> RED \\<sigma>\n\ngoal (1 subgoal):\n 1. SN p", "using RED_props"], ["proof (prove)\nusing this:\n  p \\<in> RED \\<sigma>\n  CR1 ?\\<tau>\n  CR2 ?\\<tau>\n  CR3 ?\\<tau>\n\ngoal (1 subgoal):\n 1. SN p", "by(simp add: CR1_def)"], ["proof (state)\nthis:\n  SN p\n\ngoal (1 subgoal):\n 1. s to x in t \\<in> RED (T \\<tau>)", "obtain x'::name where x: \"x' \\<sharp> (t, p, K)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        x' \\<sharp> (t, p, K) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using ex_fresh[of \"(t,p,K)\"]"], ["proof (prove)\nusing this:\n  \\<exists>c. c \\<sharp> (t, p, K)\n\ngoal (1 subgoal):\n 1. (\\<And>x'.\n        x' \\<sharp> (t, p, K) \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (auto)"], ["proof (state)\nthis:\n  x' \\<sharp> (t, p, K)\n\ngoal (1 subgoal):\n 1. s to x in t \\<in> RED (T \\<tau>)", "from p t k"], ["proof (chain)\npicking this:\n  p \\<in> RED \\<sigma>\n  \\<forall>p\\<in>RED \\<sigma>. t[x::=p] \\<in> RED (T \\<tau>)\n  K \\<in> SRED \\<tau>", "have \"SN((t[x::=p]) \\<star> K)\""], ["proof (prove)\nusing this:\n  p \\<in> RED \\<sigma>\n  \\<forall>p\\<in>RED \\<sigma>. t[x::=p] \\<in> RED (T \\<tau>)\n  K \\<in> SRED \\<tau>\n\ngoal (1 subgoal):\n 1. SN (t[x::=p] \\<star> K)", "by auto"], ["proof (state)\nthis:\n  SN (t[x::=p] \\<star> K)\n\ngoal (1 subgoal):\n 1. s to x in t \\<in> RED (T \\<tau>)", "with x"], ["proof (chain)\npicking this:\n  x' \\<sharp> (t, p, K)\n  SN (t[x::=p] \\<star> K)", "have \"SN ((([(x',x)] \\<bullet> t )[x'::=p]) \\<star> K)\""], ["proof (prove)\nusing this:\n  x' \\<sharp> (t, p, K)\n  SN (t[x::=p] \\<star> K)\n\ngoal (1 subgoal):\n 1. SN (([(x', x)] \\<bullet> t)[x'::=p] \\<star> K)", "by (simp add: fresh_prod subst_rename)"], ["proof (state)\nthis:\n  SN (([(x', x)] \\<bullet> t)[x'::=p] \\<star> K)\n\ngoal (1 subgoal):\n 1. s to x in t \\<in> RED (T \\<tau>)", "with snp x"], ["proof (chain)\npicking this:\n  SN p\n  x' \\<sharp> (t, p, K)\n  SN (([(x', x)] \\<bullet> t)[x'::=p] \\<star> K)", "have snx': \"SN (([p] to x' in ([(x',x)] \\<bullet> t )) \\<star> K)\""], ["proof (prove)\nusing this:\n  SN p\n  x' \\<sharp> (t, p, K)\n  SN (([(x', x)] \\<bullet> t)[x'::=p] \\<star> K)\n\ngoal (1 subgoal):\n 1. SN (([p] to x' in ([(x', x)] \\<bullet> t)) \\<star> K)", "by (auto intro: to_RED_aux)"], ["proof (state)\nthis:\n  SN (([p] to x' in ([(x', x)] \\<bullet> t)) \\<star> K)\n\ngoal (1 subgoal):\n 1. s to x in t \\<in> RED (T \\<tau>)", "from x"], ["proof (chain)\npicking this:\n  x' \\<sharp> (t, p, K)", "have \"[p] to x' in ([(x',x)] \\<bullet> t ) = [p] to x in t\""], ["proof (prove)\nusing this:\n  x' \\<sharp> (t, p, K)\n\ngoal (1 subgoal):\n 1. [p] to x' in ([(x', x)] \\<bullet> t) = [p] to x in t", "by simp (metis alpha' fresh_prod name_swap_bij x)"], ["proof (state)\nthis:\n  [p] to x' in ([(x', x)] \\<bullet> t) = [p] to x in t\n\ngoal (1 subgoal):\n 1. s to x in t \\<in> RED (T \\<tau>)", "moreover"], ["proof (state)\nthis:\n  [p] to x' in ([(x', x)] \\<bullet> t) = [p] to x in t\n\ngoal (1 subgoal):\n 1. s to x in t \\<in> RED (T \\<tau>)", "have \"([p] to x in t) \\<star> K  = [p] \\<star> [x]t\\<ggreater>K\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ([p] to x in t) \\<star> K = [p] \\<star> [x]t\\<ggreater>K", "by simp"], ["proof (state)\nthis:\n  ([p] to x in t) \\<star> K = [p] \\<star> [x]t\\<ggreater>K\n\ngoal (1 subgoal):\n 1. s to x in t \\<in> RED (T \\<tau>)", "ultimately"], ["proof (chain)\npicking this:\n  [p] to x' in ([(x', x)] \\<bullet> t) = [p] to x in t\n  ([p] to x in t) \\<star> K = [p] \\<star> [x]t\\<ggreater>K", "have snx: \"SN([p] \\<star> [x]t\\<ggreater>K)\""], ["proof (prove)\nusing this:\n  [p] to x' in ([(x', x)] \\<bullet> t) = [p] to x in t\n  ([p] to x in t) \\<star> K = [p] \\<star> [x]t\\<ggreater>K\n\ngoal (1 subgoal):\n 1. SN ([p] \\<star> [x]t\\<ggreater>K)", "using snx'"], ["proof (prove)\nusing this:\n  [p] to x' in ([(x', x)] \\<bullet> t) = [p] to x in t\n  ([p] to x in t) \\<star> K = [p] \\<star> [x]t\\<ggreater>K\n  SN (([p] to x' in ([(x', x)] \\<bullet> t)) \\<star> K)\n\ngoal (1 subgoal):\n 1. SN ([p] \\<star> [x]t\\<ggreater>K)", "by (simp del: trm.inject)"], ["proof (state)\nthis:\n  SN ([p] \\<star> [x]t\\<ggreater>K)\n\ngoal (1 subgoal):\n 1. s to x in t \\<in> RED (T \\<tau>)", "}"], ["proof (state)\nthis:\n  ?p2 \\<in> RED \\<sigma> \\<Longrightarrow>\n  SN ([?p2] \\<star> [x]t\\<ggreater>K)\n\ngoal (1 subgoal):\n 1. s to x in t \\<in> RED (T \\<tau>)", "hence \"[x]t\\<ggreater>K \\<in> SRED \\<sigma>\""], ["proof (prove)\nusing this:\n  ?p2 \\<in> RED \\<sigma> \\<Longrightarrow>\n  SN ([?p2] \\<star> [x]t\\<ggreater>K)\n\ngoal (1 subgoal):\n 1. [x]t\\<ggreater>K \\<in> SRED \\<sigma>", "by simp"], ["proof (state)\nthis:\n  [x]t\\<ggreater>K \\<in> SRED \\<sigma>\n\ngoal (1 subgoal):\n 1. s to x in t \\<in> RED (T \\<tau>)", "with s"], ["proof (chain)\npicking this:\n  s \\<in> RED (T \\<sigma>)\n  [x]t\\<ggreater>K \\<in> SRED \\<sigma>", "have \"SN((s to x in t) \\<star> K)\""], ["proof (prove)\nusing this:\n  s \\<in> RED (T \\<sigma>)\n  [x]t\\<ggreater>K \\<in> SRED \\<sigma>\n\ngoal (1 subgoal):\n 1. SN ((s to x in t) \\<star> K)", "by(auto simp del: SRED.simps)"], ["proof (state)\nthis:\n  SN ((s to x in t) \\<star> K)\n\ngoal (1 subgoal):\n 1. s to x in t \\<in> RED (T \\<tau>)", "}"], ["proof (state)\nthis:\n  ?K2 \\<in> SRED \\<tau> \\<Longrightarrow> SN ((s to x in t) \\<star> ?K2)\n\ngoal (1 subgoal):\n 1. s to x in t \\<in> RED (T \\<tau>)", "thus \"s to x in t \\<in> RED (T \\<tau>)\""], ["proof (prove)\nusing this:\n  ?K2 \\<in> SRED \\<tau> \\<Longrightarrow> SN ((s to x in t) \\<star> ?K2)\n\ngoal (1 subgoal):\n 1. s to x in t \\<in> RED (T \\<tau>)", "by simp"], ["proof (state)\nthis:\n  s to x in t \\<in> RED (T \\<tau>)\n\ngoal:\nNo subgoals!", "qed"], ["", "section \\<open>Fundamental Theorem\\<close>"], ["", "text_raw \\<open>\\label{sec:FTLR}\\<close>"], ["", "text \\<open>The remainder of this section follows \\cite{SN.thy} very closely.  We\nfirst establish that all well typed terms are reducible if we substitute\nreducible terms for the free variables.\\<close>"], ["", "abbreviation \n mapsto :: \"(name\\<times>trm) list \\<Rightarrow> name \\<Rightarrow> trm \\<Rightarrow> bool\" (\"_ maps _ to _\" [55,55,55] 55)\nwhere\n \"\\<theta> maps x to e \\<equiv> (lookup \\<theta> x) = e\""], ["", "abbreviation \n  closes :: \"(name\\<times>trm) list \\<Rightarrow> (name\\<times>ty) list \\<Rightarrow> bool\" (\"_ closes _\" [55,55] 55) \nwhere\n  \"\\<theta> closes \\<Gamma> \\<equiv> \\<forall>x \\<tau>. ((x,\\<tau>) \\<in> set \\<Gamma> \\<longrightarrow> (\\<exists>t. \\<theta> maps x to t \\<and> t \\<in> RED \\<tau>))\""], ["", "theorem fundamental_theorem: \n  assumes a: \"\\<Gamma> \\<turnstile> t : \\<tau>\"   and   b: \"\\<theta> closes \\<Gamma>\"\n  shows \"\\<theta><t> \\<in> RED \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<theta><t> \\<in> RED \\<tau>", "using a b"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> t : \\<tau>\n  \\<theta> closes \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<theta><t> \\<in> RED \\<tau>", "proof(nominal_induct  avoiding: \\<theta> rule: typing.strong_induct)"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau> \\<theta>.\n       \\<lbrakk>valid \\<Gamma>; (x, \\<tau>) \\<in> set \\<Gamma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><Var x> \\<in> RED \\<tau>\n 2. \\<And>\\<Gamma> s \\<tau> \\<sigma> t \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<tau> \\<rightarrow> \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow>\n           b<s> \\<in> RED (\\<tau> \\<rightarrow> \\<sigma>);\n        \\<Gamma> \\<turnstile> t : \\<tau>;\n        \\<And>b. b closes \\<Gamma> \\<Longrightarrow> b<t> \\<in> RED \\<tau>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><App s t> \\<in> RED \\<sigma>\n 3. \\<And>x \\<Gamma> \\<tau> t \\<sigma> \\<theta>.\n       \\<lbrakk>x \\<sharp> \\<theta>; x \\<sharp> \\<Gamma>;\n        (x, \\<tau>) # \\<Gamma> \\<turnstile> t : \\<sigma>;\n        \\<And>b.\n           b closes (x, \\<tau>) # \\<Gamma> \\<Longrightarrow>\n           b<t> \\<in> RED \\<sigma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><\\<Lambda> x . t>\n                         \\<in> RED (\\<tau> \\<rightarrow> \\<sigma>)\n 4. \\<And>\\<Gamma> s \\<sigma> \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED \\<sigma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><[s]> \\<in> RED (T \\<sigma>)\n 5. \\<And>x \\<Gamma> s \\<sigma> t \\<tau> \\<theta>.\n       \\<lbrakk>x \\<sharp> \\<theta>; x \\<sharp> \\<Gamma>; x \\<sharp> s;\n        \\<Gamma> \\<turnstile> s : T \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED (T \\<sigma>);\n        (x, \\<sigma>) # \\<Gamma> \\<turnstile> t : T \\<tau>;\n        \\<And>b.\n           b closes (x, \\<sigma>) # \\<Gamma> \\<Longrightarrow>\n           b<t> \\<in> RED (T \\<tau>);\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><s to x in t> \\<in> RED (T \\<tau>)", "case (t3 a \\<Gamma> \\<sigma> t \\<tau> \\<theta>) \\<comment> \\<open>lambda case\\<close>"], ["proof (state)\nthis:\n  a \\<sharp> \\<theta>\n  a \\<sharp> \\<Gamma>\n  (a, \\<sigma>) # \\<Gamma> \\<turnstile> t : \\<tau>\n  ?b closes (a, \\<sigma>) # \\<Gamma> \\<Longrightarrow>\n  ?b<t> \\<in> RED \\<tau>\n  \\<theta> closes \\<Gamma>\n\ngoal (5 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau> \\<theta>.\n       \\<lbrakk>valid \\<Gamma>; (x, \\<tau>) \\<in> set \\<Gamma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><Var x> \\<in> RED \\<tau>\n 2. \\<And>\\<Gamma> s \\<tau> \\<sigma> t \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<tau> \\<rightarrow> \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow>\n           b<s> \\<in> RED (\\<tau> \\<rightarrow> \\<sigma>);\n        \\<Gamma> \\<turnstile> t : \\<tau>;\n        \\<And>b. b closes \\<Gamma> \\<Longrightarrow> b<t> \\<in> RED \\<tau>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><App s t> \\<in> RED \\<sigma>\n 3. \\<And>x \\<Gamma> \\<tau> t \\<sigma> \\<theta>.\n       \\<lbrakk>x \\<sharp> \\<theta>; x \\<sharp> \\<Gamma>;\n        (x, \\<tau>) # \\<Gamma> \\<turnstile> t : \\<sigma>;\n        \\<And>b.\n           b closes (x, \\<tau>) # \\<Gamma> \\<Longrightarrow>\n           b<t> \\<in> RED \\<sigma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><\\<Lambda> x . t>\n                         \\<in> RED (\\<tau> \\<rightarrow> \\<sigma>)\n 4. \\<And>\\<Gamma> s \\<sigma> \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED \\<sigma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><[s]> \\<in> RED (T \\<sigma>)\n 5. \\<And>x \\<Gamma> s \\<sigma> t \\<tau> \\<theta>.\n       \\<lbrakk>x \\<sharp> \\<theta>; x \\<sharp> \\<Gamma>; x \\<sharp> s;\n        \\<Gamma> \\<turnstile> s : T \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED (T \\<sigma>);\n        (x, \\<sigma>) # \\<Gamma> \\<turnstile> t : T \\<tau>;\n        \\<And>b.\n           b closes (x, \\<sigma>) # \\<Gamma> \\<Longrightarrow>\n           b<t> \\<in> RED (T \\<tau>);\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><s to x in t> \\<in> RED (T \\<tau>)", "{%invisible"], ["proof (state)\nthis:\n  a \\<sharp> \\<theta>\n  a \\<sharp> \\<Gamma>\n  (a, \\<sigma>) # \\<Gamma> \\<turnstile> t : \\<tau>\n  ?b closes (a, \\<sigma>) # \\<Gamma> \\<Longrightarrow>\n  ?b<t> \\<in> RED \\<tau>\n  \\<theta> closes \\<Gamma>\n\ngoal (5 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau> \\<theta>.\n       \\<lbrakk>valid \\<Gamma>; (x, \\<tau>) \\<in> set \\<Gamma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><Var x> \\<in> RED \\<tau>\n 2. \\<And>\\<Gamma> s \\<tau> \\<sigma> t \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<tau> \\<rightarrow> \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow>\n           b<s> \\<in> RED (\\<tau> \\<rightarrow> \\<sigma>);\n        \\<Gamma> \\<turnstile> t : \\<tau>;\n        \\<And>b. b closes \\<Gamma> \\<Longrightarrow> b<t> \\<in> RED \\<tau>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><App s t> \\<in> RED \\<sigma>\n 3. \\<And>x \\<Gamma> \\<tau> t \\<sigma> \\<theta>.\n       \\<lbrakk>x \\<sharp> \\<theta>; x \\<sharp> \\<Gamma>;\n        (x, \\<tau>) # \\<Gamma> \\<turnstile> t : \\<sigma>;\n        \\<And>b.\n           b closes (x, \\<tau>) # \\<Gamma> \\<Longrightarrow>\n           b<t> \\<in> RED \\<sigma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><\\<Lambda> x . t>\n                         \\<in> RED (\\<tau> \\<rightarrow> \\<sigma>)\n 4. \\<And>\\<Gamma> s \\<sigma> \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED \\<sigma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><[s]> \\<in> RED (T \\<sigma>)\n 5. \\<And>x \\<Gamma> s \\<sigma> t \\<tau> \\<theta>.\n       \\<lbrakk>x \\<sharp> \\<theta>; x \\<sharp> \\<Gamma>; x \\<sharp> s;\n        \\<Gamma> \\<turnstile> s : T \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED (T \\<sigma>);\n        (x, \\<sigma>) # \\<Gamma> \\<turnstile> t : T \\<tau>;\n        \\<And>b.\n           b closes (x, \\<sigma>) # \\<Gamma> \\<Longrightarrow>\n           b<t> \\<in> RED (T \\<tau>);\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><s to x in t> \\<in> RED (T \\<tau>)", "have ih: \"\\<And>\\<theta>. \\<theta> closes ((a,\\<sigma>)#\\<Gamma>) \\<Longrightarrow> \\<theta><t> \\<in> RED \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<theta>.\n       \\<theta> closes (a, \\<sigma>) # \\<Gamma> \\<Longrightarrow>\n       \\<theta><t> \\<in> RED \\<tau>", "by fact"], ["proof (state)\nthis:\n  ?\\<theta> closes (a, \\<sigma>) # \\<Gamma> \\<Longrightarrow>\n  ?\\<theta><t> \\<in> RED \\<tau>\n\ngoal (5 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau> \\<theta>.\n       \\<lbrakk>valid \\<Gamma>; (x, \\<tau>) \\<in> set \\<Gamma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><Var x> \\<in> RED \\<tau>\n 2. \\<And>\\<Gamma> s \\<tau> \\<sigma> t \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<tau> \\<rightarrow> \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow>\n           b<s> \\<in> RED (\\<tau> \\<rightarrow> \\<sigma>);\n        \\<Gamma> \\<turnstile> t : \\<tau>;\n        \\<And>b. b closes \\<Gamma> \\<Longrightarrow> b<t> \\<in> RED \\<tau>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><App s t> \\<in> RED \\<sigma>\n 3. \\<And>x \\<Gamma> \\<tau> t \\<sigma> \\<theta>.\n       \\<lbrakk>x \\<sharp> \\<theta>; x \\<sharp> \\<Gamma>;\n        (x, \\<tau>) # \\<Gamma> \\<turnstile> t : \\<sigma>;\n        \\<And>b.\n           b closes (x, \\<tau>) # \\<Gamma> \\<Longrightarrow>\n           b<t> \\<in> RED \\<sigma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><\\<Lambda> x . t>\n                         \\<in> RED (\\<tau> \\<rightarrow> \\<sigma>)\n 4. \\<And>\\<Gamma> s \\<sigma> \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED \\<sigma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><[s]> \\<in> RED (T \\<sigma>)\n 5. \\<And>x \\<Gamma> s \\<sigma> t \\<tau> \\<theta>.\n       \\<lbrakk>x \\<sharp> \\<theta>; x \\<sharp> \\<Gamma>; x \\<sharp> s;\n        \\<Gamma> \\<turnstile> s : T \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED (T \\<sigma>);\n        (x, \\<sigma>) # \\<Gamma> \\<turnstile> t : T \\<tau>;\n        \\<And>b.\n           b closes (x, \\<sigma>) # \\<Gamma> \\<Longrightarrow>\n           b<t> \\<in> RED (T \\<tau>);\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><s to x in t> \\<in> RED (T \\<tau>)", "have \\<theta>_cond: \"\\<theta> closes \\<Gamma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<theta> closes \\<Gamma>", "by fact"], ["proof (state)\nthis:\n  \\<theta> closes \\<Gamma>\n\ngoal (5 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau> \\<theta>.\n       \\<lbrakk>valid \\<Gamma>; (x, \\<tau>) \\<in> set \\<Gamma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><Var x> \\<in> RED \\<tau>\n 2. \\<And>\\<Gamma> s \\<tau> \\<sigma> t \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<tau> \\<rightarrow> \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow>\n           b<s> \\<in> RED (\\<tau> \\<rightarrow> \\<sigma>);\n        \\<Gamma> \\<turnstile> t : \\<tau>;\n        \\<And>b. b closes \\<Gamma> \\<Longrightarrow> b<t> \\<in> RED \\<tau>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><App s t> \\<in> RED \\<sigma>\n 3. \\<And>x \\<Gamma> \\<tau> t \\<sigma> \\<theta>.\n       \\<lbrakk>x \\<sharp> \\<theta>; x \\<sharp> \\<Gamma>;\n        (x, \\<tau>) # \\<Gamma> \\<turnstile> t : \\<sigma>;\n        \\<And>b.\n           b closes (x, \\<tau>) # \\<Gamma> \\<Longrightarrow>\n           b<t> \\<in> RED \\<sigma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><\\<Lambda> x . t>\n                         \\<in> RED (\\<tau> \\<rightarrow> \\<sigma>)\n 4. \\<And>\\<Gamma> s \\<sigma> \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED \\<sigma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><[s]> \\<in> RED (T \\<sigma>)\n 5. \\<And>x \\<Gamma> s \\<sigma> t \\<tau> \\<theta>.\n       \\<lbrakk>x \\<sharp> \\<theta>; x \\<sharp> \\<Gamma>; x \\<sharp> s;\n        \\<Gamma> \\<turnstile> s : T \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED (T \\<sigma>);\n        (x, \\<sigma>) # \\<Gamma> \\<turnstile> t : T \\<tau>;\n        \\<And>b.\n           b closes (x, \\<sigma>) # \\<Gamma> \\<Longrightarrow>\n           b<t> \\<in> RED (T \\<tau>);\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><s to x in t> \\<in> RED (T \\<tau>)", "have fresh: \"a\\<sharp>\\<Gamma>\"   \"a\\<sharp>\\<theta>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. a \\<sharp> \\<Gamma> &&& a \\<sharp> \\<theta>", "by fact+"], ["proof (state)\nthis:\n  a \\<sharp> \\<Gamma>\n  a \\<sharp> \\<theta>\n\ngoal (5 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau> \\<theta>.\n       \\<lbrakk>valid \\<Gamma>; (x, \\<tau>) \\<in> set \\<Gamma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><Var x> \\<in> RED \\<tau>\n 2. \\<And>\\<Gamma> s \\<tau> \\<sigma> t \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<tau> \\<rightarrow> \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow>\n           b<s> \\<in> RED (\\<tau> \\<rightarrow> \\<sigma>);\n        \\<Gamma> \\<turnstile> t : \\<tau>;\n        \\<And>b. b closes \\<Gamma> \\<Longrightarrow> b<t> \\<in> RED \\<tau>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><App s t> \\<in> RED \\<sigma>\n 3. \\<And>x \\<Gamma> \\<tau> t \\<sigma> \\<theta>.\n       \\<lbrakk>x \\<sharp> \\<theta>; x \\<sharp> \\<Gamma>;\n        (x, \\<tau>) # \\<Gamma> \\<turnstile> t : \\<sigma>;\n        \\<And>b.\n           b closes (x, \\<tau>) # \\<Gamma> \\<Longrightarrow>\n           b<t> \\<in> RED \\<sigma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><\\<Lambda> x . t>\n                         \\<in> RED (\\<tau> \\<rightarrow> \\<sigma>)\n 4. \\<And>\\<Gamma> s \\<sigma> \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED \\<sigma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><[s]> \\<in> RED (T \\<sigma>)\n 5. \\<And>x \\<Gamma> s \\<sigma> t \\<tau> \\<theta>.\n       \\<lbrakk>x \\<sharp> \\<theta>; x \\<sharp> \\<Gamma>; x \\<sharp> s;\n        \\<Gamma> \\<turnstile> s : T \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED (T \\<sigma>);\n        (x, \\<sigma>) # \\<Gamma> \\<turnstile> t : T \\<tau>;\n        \\<And>b.\n           b closes (x, \\<sigma>) # \\<Gamma> \\<Longrightarrow>\n           b<t> \\<in> RED (T \\<tau>);\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><s to x in t> \\<in> RED (T \\<tau>)", "from ih"], ["proof (chain)\npicking this:\n  ?\\<theta> closes (a, \\<sigma>) # \\<Gamma> \\<Longrightarrow>\n  ?\\<theta><t> \\<in> RED \\<tau>", "have \"\\<forall>s\\<in>RED \\<sigma>. ((a,s)#\\<theta>)<t> \\<in> RED \\<tau>\""], ["proof (prove)\nusing this:\n  ?\\<theta> closes (a, \\<sigma>) # \\<Gamma> \\<Longrightarrow>\n  ?\\<theta><t> \\<in> RED \\<tau>\n\ngoal (1 subgoal):\n 1. \\<forall>s\\<in>RED \\<sigma>. ((a, s) # \\<theta>)<t> \\<in> RED \\<tau>", "using fresh \\<theta>_cond fresh_context"], ["proof (prove)\nusing this:\n  ?\\<theta> closes (a, \\<sigma>) # \\<Gamma> \\<Longrightarrow>\n  ?\\<theta><t> \\<in> RED \\<tau>\n  a \\<sharp> \\<Gamma>\n  a \\<sharp> \\<theta>\n  \\<theta> closes \\<Gamma>\n  ?x \\<sharp> ?\\<Gamma> \\<Longrightarrow>\n  \\<nexists>\\<tau>. (?x, \\<tau>) \\<in> set ?\\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<forall>s\\<in>RED \\<sigma>. ((a, s) # \\<theta>)<t> \\<in> RED \\<tau>", "by simp"], ["proof (state)\nthis:\n  \\<forall>s\\<in>RED \\<sigma>. ((a, s) # \\<theta>)<t> \\<in> RED \\<tau>\n\ngoal (5 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau> \\<theta>.\n       \\<lbrakk>valid \\<Gamma>; (x, \\<tau>) \\<in> set \\<Gamma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><Var x> \\<in> RED \\<tau>\n 2. \\<And>\\<Gamma> s \\<tau> \\<sigma> t \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<tau> \\<rightarrow> \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow>\n           b<s> \\<in> RED (\\<tau> \\<rightarrow> \\<sigma>);\n        \\<Gamma> \\<turnstile> t : \\<tau>;\n        \\<And>b. b closes \\<Gamma> \\<Longrightarrow> b<t> \\<in> RED \\<tau>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><App s t> \\<in> RED \\<sigma>\n 3. \\<And>x \\<Gamma> \\<tau> t \\<sigma> \\<theta>.\n       \\<lbrakk>x \\<sharp> \\<theta>; x \\<sharp> \\<Gamma>;\n        (x, \\<tau>) # \\<Gamma> \\<turnstile> t : \\<sigma>;\n        \\<And>b.\n           b closes (x, \\<tau>) # \\<Gamma> \\<Longrightarrow>\n           b<t> \\<in> RED \\<sigma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><\\<Lambda> x . t>\n                         \\<in> RED (\\<tau> \\<rightarrow> \\<sigma>)\n 4. \\<And>\\<Gamma> s \\<sigma> \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED \\<sigma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><[s]> \\<in> RED (T \\<sigma>)\n 5. \\<And>x \\<Gamma> s \\<sigma> t \\<tau> \\<theta>.\n       \\<lbrakk>x \\<sharp> \\<theta>; x \\<sharp> \\<Gamma>; x \\<sharp> s;\n        \\<Gamma> \\<turnstile> s : T \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED (T \\<sigma>);\n        (x, \\<sigma>) # \\<Gamma> \\<turnstile> t : T \\<tau>;\n        \\<And>b.\n           b closes (x, \\<sigma>) # \\<Gamma> \\<Longrightarrow>\n           b<t> \\<in> RED (T \\<tau>);\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><s to x in t> \\<in> RED (T \\<tau>)", "then"], ["proof (chain)\npicking this:\n  \\<forall>s\\<in>RED \\<sigma>. ((a, s) # \\<theta>)<t> \\<in> RED \\<tau>", "have \"\\<forall>s\\<in>RED \\<sigma>. \\<theta><t>[a::=s] \\<in> RED \\<tau>\""], ["proof (prove)\nusing this:\n  \\<forall>s\\<in>RED \\<sigma>. ((a, s) # \\<theta>)<t> \\<in> RED \\<tau>\n\ngoal (1 subgoal):\n 1. \\<forall>s\\<in>RED \\<sigma>. \\<theta><t>[a::=s] \\<in> RED \\<tau>", "using fresh"], ["proof (prove)\nusing this:\n  \\<forall>s\\<in>RED \\<sigma>. ((a, s) # \\<theta>)<t> \\<in> RED \\<tau>\n  a \\<sharp> \\<Gamma>\n  a \\<sharp> \\<theta>\n\ngoal (1 subgoal):\n 1. \\<forall>s\\<in>RED \\<sigma>. \\<theta><t>[a::=s] \\<in> RED \\<tau>", "by (simp add: psubst_subst)"], ["proof (state)\nthis:\n  \\<forall>s\\<in>RED \\<sigma>. \\<theta><t>[a::=s] \\<in> RED \\<tau>\n\ngoal (5 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau> \\<theta>.\n       \\<lbrakk>valid \\<Gamma>; (x, \\<tau>) \\<in> set \\<Gamma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><Var x> \\<in> RED \\<tau>\n 2. \\<And>\\<Gamma> s \\<tau> \\<sigma> t \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<tau> \\<rightarrow> \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow>\n           b<s> \\<in> RED (\\<tau> \\<rightarrow> \\<sigma>);\n        \\<Gamma> \\<turnstile> t : \\<tau>;\n        \\<And>b. b closes \\<Gamma> \\<Longrightarrow> b<t> \\<in> RED \\<tau>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><App s t> \\<in> RED \\<sigma>\n 3. \\<And>x \\<Gamma> \\<tau> t \\<sigma> \\<theta>.\n       \\<lbrakk>x \\<sharp> \\<theta>; x \\<sharp> \\<Gamma>;\n        (x, \\<tau>) # \\<Gamma> \\<turnstile> t : \\<sigma>;\n        \\<And>b.\n           b closes (x, \\<tau>) # \\<Gamma> \\<Longrightarrow>\n           b<t> \\<in> RED \\<sigma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><\\<Lambda> x . t>\n                         \\<in> RED (\\<tau> \\<rightarrow> \\<sigma>)\n 4. \\<And>\\<Gamma> s \\<sigma> \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED \\<sigma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><[s]> \\<in> RED (T \\<sigma>)\n 5. \\<And>x \\<Gamma> s \\<sigma> t \\<tau> \\<theta>.\n       \\<lbrakk>x \\<sharp> \\<theta>; x \\<sharp> \\<Gamma>; x \\<sharp> s;\n        \\<Gamma> \\<turnstile> s : T \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED (T \\<sigma>);\n        (x, \\<sigma>) # \\<Gamma> \\<turnstile> t : T \\<tau>;\n        \\<And>b.\n           b closes (x, \\<sigma>) # \\<Gamma> \\<Longrightarrow>\n           b<t> \\<in> RED (T \\<tau>);\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><s to x in t> \\<in> RED (T \\<tau>)", "then"], ["proof (chain)\npicking this:\n  \\<forall>s\\<in>RED \\<sigma>. \\<theta><t>[a::=s] \\<in> RED \\<tau>", "have \"\\<Lambda> a . (\\<theta><t>) \\<in> RED (\\<sigma> \\<rightarrow> \\<tau>)\""], ["proof (prove)\nusing this:\n  \\<forall>s\\<in>RED \\<sigma>. \\<theta><t>[a::=s] \\<in> RED \\<tau>\n\ngoal (1 subgoal):\n 1. \\<Lambda> a . \\<theta><t> \\<in> RED (\\<sigma> \\<rightarrow> \\<tau>)", "by (simp only: abs_RED)"], ["proof (state)\nthis:\n  \\<Lambda> a . \\<theta><t> \\<in> RED (\\<sigma> \\<rightarrow> \\<tau>)\n\ngoal (5 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau> \\<theta>.\n       \\<lbrakk>valid \\<Gamma>; (x, \\<tau>) \\<in> set \\<Gamma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><Var x> \\<in> RED \\<tau>\n 2. \\<And>\\<Gamma> s \\<tau> \\<sigma> t \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<tau> \\<rightarrow> \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow>\n           b<s> \\<in> RED (\\<tau> \\<rightarrow> \\<sigma>);\n        \\<Gamma> \\<turnstile> t : \\<tau>;\n        \\<And>b. b closes \\<Gamma> \\<Longrightarrow> b<t> \\<in> RED \\<tau>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><App s t> \\<in> RED \\<sigma>\n 3. \\<And>x \\<Gamma> \\<tau> t \\<sigma> \\<theta>.\n       \\<lbrakk>x \\<sharp> \\<theta>; x \\<sharp> \\<Gamma>;\n        (x, \\<tau>) # \\<Gamma> \\<turnstile> t : \\<sigma>;\n        \\<And>b.\n           b closes (x, \\<tau>) # \\<Gamma> \\<Longrightarrow>\n           b<t> \\<in> RED \\<sigma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><\\<Lambda> x . t>\n                         \\<in> RED (\\<tau> \\<rightarrow> \\<sigma>)\n 4. \\<And>\\<Gamma> s \\<sigma> \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED \\<sigma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><[s]> \\<in> RED (T \\<sigma>)\n 5. \\<And>x \\<Gamma> s \\<sigma> t \\<tau> \\<theta>.\n       \\<lbrakk>x \\<sharp> \\<theta>; x \\<sharp> \\<Gamma>; x \\<sharp> s;\n        \\<Gamma> \\<turnstile> s : T \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED (T \\<sigma>);\n        (x, \\<sigma>) # \\<Gamma> \\<turnstile> t : T \\<tau>;\n        \\<And>b.\n           b closes (x, \\<sigma>) # \\<Gamma> \\<Longrightarrow>\n           b<t> \\<in> RED (T \\<tau>);\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><s to x in t> \\<in> RED (T \\<tau>)", "then"], ["proof (chain)\npicking this:\n  \\<Lambda> a . \\<theta><t> \\<in> RED (\\<sigma> \\<rightarrow> \\<tau>)", "show \"\\<theta><(\\<Lambda> a . t)> \\<in> RED (\\<sigma> \\<rightarrow> \\<tau>)\""], ["proof (prove)\nusing this:\n  \\<Lambda> a . \\<theta><t> \\<in> RED (\\<sigma> \\<rightarrow> \\<tau>)\n\ngoal (1 subgoal):\n 1. \\<theta><\\<Lambda> a . t> \\<in> RED (\\<sigma> \\<rightarrow> \\<tau>)", "using fresh"], ["proof (prove)\nusing this:\n  \\<Lambda> a . \\<theta><t> \\<in> RED (\\<sigma> \\<rightarrow> \\<tau>)\n  a \\<sharp> \\<Gamma>\n  a \\<sharp> \\<theta>\n\ngoal (1 subgoal):\n 1. \\<theta><\\<Lambda> a . t> \\<in> RED (\\<sigma> \\<rightarrow> \\<tau>)", "by simp"], ["proof (state)\nthis:\n  \\<theta><\\<Lambda> a . t> \\<in> RED (\\<sigma> \\<rightarrow> \\<tau>)\n\ngoal (4 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau> \\<theta>.\n       \\<lbrakk>valid \\<Gamma>; (x, \\<tau>) \\<in> set \\<Gamma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><Var x> \\<in> RED \\<tau>\n 2. \\<And>\\<Gamma> s \\<tau> \\<sigma> t \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<tau> \\<rightarrow> \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow>\n           b<s> \\<in> RED (\\<tau> \\<rightarrow> \\<sigma>);\n        \\<Gamma> \\<turnstile> t : \\<tau>;\n        \\<And>b. b closes \\<Gamma> \\<Longrightarrow> b<t> \\<in> RED \\<tau>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><App s t> \\<in> RED \\<sigma>\n 3. \\<And>\\<Gamma> s \\<sigma> \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED \\<sigma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><[s]> \\<in> RED (T \\<sigma>)\n 4. \\<And>x \\<Gamma> s \\<sigma> t \\<tau> \\<theta>.\n       \\<lbrakk>x \\<sharp> \\<theta>; x \\<sharp> \\<Gamma>; x \\<sharp> s;\n        \\<Gamma> \\<turnstile> s : T \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED (T \\<sigma>);\n        (x, \\<sigma>) # \\<Gamma> \\<turnstile> t : T \\<tau>;\n        \\<And>b.\n           b closes (x, \\<sigma>) # \\<Gamma> \\<Longrightarrow>\n           b<t> \\<in> RED (T \\<tau>);\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><s to x in t> \\<in> RED (T \\<tau>)", "}"], ["proof (state)\nthis:\n  \\<theta><\\<Lambda> a . t> \\<in> RED (\\<sigma> \\<rightarrow> \\<tau>)\n\ngoal (4 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau> \\<theta>.\n       \\<lbrakk>valid \\<Gamma>; (x, \\<tau>) \\<in> set \\<Gamma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><Var x> \\<in> RED \\<tau>\n 2. \\<And>\\<Gamma> s \\<tau> \\<sigma> t \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<tau> \\<rightarrow> \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow>\n           b<s> \\<in> RED (\\<tau> \\<rightarrow> \\<sigma>);\n        \\<Gamma> \\<turnstile> t : \\<tau>;\n        \\<And>b. b closes \\<Gamma> \\<Longrightarrow> b<t> \\<in> RED \\<tau>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><App s t> \\<in> RED \\<sigma>\n 3. \\<And>\\<Gamma> s \\<sigma> \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED \\<sigma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><[s]> \\<in> RED (T \\<sigma>)\n 4. \\<And>x \\<Gamma> s \\<sigma> t \\<tau> \\<theta>.\n       \\<lbrakk>x \\<sharp> \\<theta>; x \\<sharp> \\<Gamma>; x \\<sharp> s;\n        \\<Gamma> \\<turnstile> s : T \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED (T \\<sigma>);\n        (x, \\<sigma>) # \\<Gamma> \\<turnstile> t : T \\<tau>;\n        \\<And>b.\n           b closes (x, \\<sigma>) # \\<Gamma> \\<Longrightarrow>\n           b<t> \\<in> RED (T \\<tau>);\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><s to x in t> \\<in> RED (T \\<tau>)", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau> \\<theta>.\n       \\<lbrakk>valid \\<Gamma>; (x, \\<tau>) \\<in> set \\<Gamma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><Var x> \\<in> RED \\<tau>\n 2. \\<And>\\<Gamma> s \\<tau> \\<sigma> t \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<tau> \\<rightarrow> \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow>\n           b<s> \\<in> RED (\\<tau> \\<rightarrow> \\<sigma>);\n        \\<Gamma> \\<turnstile> t : \\<tau>;\n        \\<And>b. b closes \\<Gamma> \\<Longrightarrow> b<t> \\<in> RED \\<tau>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><App s t> \\<in> RED \\<sigma>\n 3. \\<And>\\<Gamma> s \\<sigma> \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED \\<sigma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><[s]> \\<in> RED (T \\<sigma>)\n 4. \\<And>x \\<Gamma> s \\<sigma> t \\<tau> \\<theta>.\n       \\<lbrakk>x \\<sharp> \\<theta>; x \\<sharp> \\<Gamma>; x \\<sharp> s;\n        \\<Gamma> \\<turnstile> s : T \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED (T \\<sigma>);\n        (x, \\<sigma>) # \\<Gamma> \\<turnstile> t : T \\<tau>;\n        \\<And>b.\n           b closes (x, \\<sigma>) # \\<Gamma> \\<Longrightarrow>\n           b<t> \\<in> RED (T \\<tau>);\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><s to x in t> \\<in> RED (T \\<tau>)", "case (t5 x \\<Gamma> s \\<sigma> t \\<tau> \\<theta>) \\<comment> \\<open>to case\\<close>"], ["proof (state)\nthis:\n  x \\<sharp> \\<theta>\n  x \\<sharp> \\<Gamma>\n  x \\<sharp> s\n  \\<Gamma> \\<turnstile> s : T \\<sigma>\n  ?b closes \\<Gamma> \\<Longrightarrow> ?b<s> \\<in> RED (T \\<sigma>)\n  (x, \\<sigma>) # \\<Gamma> \\<turnstile> t : T \\<tau>\n  ?b closes (x, \\<sigma>) # \\<Gamma> \\<Longrightarrow>\n  ?b<t> \\<in> RED (T \\<tau>)\n  \\<theta> closes \\<Gamma>\n\ngoal (4 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau> \\<theta>.\n       \\<lbrakk>valid \\<Gamma>; (x, \\<tau>) \\<in> set \\<Gamma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><Var x> \\<in> RED \\<tau>\n 2. \\<And>\\<Gamma> s \\<tau> \\<sigma> t \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<tau> \\<rightarrow> \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow>\n           b<s> \\<in> RED (\\<tau> \\<rightarrow> \\<sigma>);\n        \\<Gamma> \\<turnstile> t : \\<tau>;\n        \\<And>b. b closes \\<Gamma> \\<Longrightarrow> b<t> \\<in> RED \\<tau>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><App s t> \\<in> RED \\<sigma>\n 3. \\<And>\\<Gamma> s \\<sigma> \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED \\<sigma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><[s]> \\<in> RED (T \\<sigma>)\n 4. \\<And>x \\<Gamma> s \\<sigma> t \\<tau> \\<theta>.\n       \\<lbrakk>x \\<sharp> \\<theta>; x \\<sharp> \\<Gamma>; x \\<sharp> s;\n        \\<Gamma> \\<turnstile> s : T \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED (T \\<sigma>);\n        (x, \\<sigma>) # \\<Gamma> \\<turnstile> t : T \\<tau>;\n        \\<And>b.\n           b closes (x, \\<sigma>) # \\<Gamma> \\<Longrightarrow>\n           b<t> \\<in> RED (T \\<tau>);\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><s to x in t> \\<in> RED (T \\<tau>)", "have ihs : \"\\<And> \\<theta> . \\<theta> closes \\<Gamma> \\<Longrightarrow> \\<theta><s> \\<in> RED (T \\<sigma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<theta>.\n       \\<theta> closes \\<Gamma> \\<Longrightarrow>\n       \\<theta><s> \\<in> RED (T \\<sigma>)", "by fact"], ["proof (state)\nthis:\n  ?\\<theta> closes \\<Gamma> \\<Longrightarrow>\n  ?\\<theta><s> \\<in> RED (T \\<sigma>)\n\ngoal (4 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau> \\<theta>.\n       \\<lbrakk>valid \\<Gamma>; (x, \\<tau>) \\<in> set \\<Gamma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><Var x> \\<in> RED \\<tau>\n 2. \\<And>\\<Gamma> s \\<tau> \\<sigma> t \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<tau> \\<rightarrow> \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow>\n           b<s> \\<in> RED (\\<tau> \\<rightarrow> \\<sigma>);\n        \\<Gamma> \\<turnstile> t : \\<tau>;\n        \\<And>b. b closes \\<Gamma> \\<Longrightarrow> b<t> \\<in> RED \\<tau>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><App s t> \\<in> RED \\<sigma>\n 3. \\<And>\\<Gamma> s \\<sigma> \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED \\<sigma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><[s]> \\<in> RED (T \\<sigma>)\n 4. \\<And>x \\<Gamma> s \\<sigma> t \\<tau> \\<theta>.\n       \\<lbrakk>x \\<sharp> \\<theta>; x \\<sharp> \\<Gamma>; x \\<sharp> s;\n        \\<Gamma> \\<turnstile> s : T \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED (T \\<sigma>);\n        (x, \\<sigma>) # \\<Gamma> \\<turnstile> t : T \\<tau>;\n        \\<And>b.\n           b closes (x, \\<sigma>) # \\<Gamma> \\<Longrightarrow>\n           b<t> \\<in> RED (T \\<tau>);\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><s to x in t> \\<in> RED (T \\<tau>)", "have iht : \"\\<And> \\<theta> . \\<theta> closes ((x, \\<sigma>) # \\<Gamma>) \\<Longrightarrow> \\<theta><t> \\<in> RED (T \\<tau>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>\\<theta>.\n       \\<theta> closes (x, \\<sigma>) # \\<Gamma> \\<Longrightarrow>\n       \\<theta><t> \\<in> RED (T \\<tau>)", "by fact"], ["proof (state)\nthis:\n  ?\\<theta> closes (x, \\<sigma>) # \\<Gamma> \\<Longrightarrow>\n  ?\\<theta><t> \\<in> RED (T \\<tau>)\n\ngoal (4 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau> \\<theta>.\n       \\<lbrakk>valid \\<Gamma>; (x, \\<tau>) \\<in> set \\<Gamma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><Var x> \\<in> RED \\<tau>\n 2. \\<And>\\<Gamma> s \\<tau> \\<sigma> t \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<tau> \\<rightarrow> \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow>\n           b<s> \\<in> RED (\\<tau> \\<rightarrow> \\<sigma>);\n        \\<Gamma> \\<turnstile> t : \\<tau>;\n        \\<And>b. b closes \\<Gamma> \\<Longrightarrow> b<t> \\<in> RED \\<tau>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><App s t> \\<in> RED \\<sigma>\n 3. \\<And>\\<Gamma> s \\<sigma> \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED \\<sigma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><[s]> \\<in> RED (T \\<sigma>)\n 4. \\<And>x \\<Gamma> s \\<sigma> t \\<tau> \\<theta>.\n       \\<lbrakk>x \\<sharp> \\<theta>; x \\<sharp> \\<Gamma>; x \\<sharp> s;\n        \\<Gamma> \\<turnstile> s : T \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED (T \\<sigma>);\n        (x, \\<sigma>) # \\<Gamma> \\<turnstile> t : T \\<tau>;\n        \\<And>b.\n           b closes (x, \\<sigma>) # \\<Gamma> \\<Longrightarrow>\n           b<t> \\<in> RED (T \\<tau>);\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><s to x in t> \\<in> RED (T \\<tau>)", "have \\<theta>_cond: \"\\<theta> closes \\<Gamma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<theta> closes \\<Gamma>", "by fact"], ["proof (state)\nthis:\n  \\<theta> closes \\<Gamma>\n\ngoal (4 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau> \\<theta>.\n       \\<lbrakk>valid \\<Gamma>; (x, \\<tau>) \\<in> set \\<Gamma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><Var x> \\<in> RED \\<tau>\n 2. \\<And>\\<Gamma> s \\<tau> \\<sigma> t \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<tau> \\<rightarrow> \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow>\n           b<s> \\<in> RED (\\<tau> \\<rightarrow> \\<sigma>);\n        \\<Gamma> \\<turnstile> t : \\<tau>;\n        \\<And>b. b closes \\<Gamma> \\<Longrightarrow> b<t> \\<in> RED \\<tau>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><App s t> \\<in> RED \\<sigma>\n 3. \\<And>\\<Gamma> s \\<sigma> \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED \\<sigma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><[s]> \\<in> RED (T \\<sigma>)\n 4. \\<And>x \\<Gamma> s \\<sigma> t \\<tau> \\<theta>.\n       \\<lbrakk>x \\<sharp> \\<theta>; x \\<sharp> \\<Gamma>; x \\<sharp> s;\n        \\<Gamma> \\<turnstile> s : T \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED (T \\<sigma>);\n        (x, \\<sigma>) # \\<Gamma> \\<turnstile> t : T \\<tau>;\n        \\<And>b.\n           b closes (x, \\<sigma>) # \\<Gamma> \\<Longrightarrow>\n           b<t> \\<in> RED (T \\<tau>);\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><s to x in t> \\<in> RED (T \\<tau>)", "have fresh: \"x \\<sharp> \\<theta>\"  \"x \\<sharp> \\<Gamma>\"   \"x \\<sharp> s\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> \\<theta> &&& x \\<sharp> \\<Gamma> &&& x \\<sharp> s", "by fact+"], ["proof (state)\nthis:\n  x \\<sharp> \\<theta>\n  x \\<sharp> \\<Gamma>\n  x \\<sharp> s\n\ngoal (4 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau> \\<theta>.\n       \\<lbrakk>valid \\<Gamma>; (x, \\<tau>) \\<in> set \\<Gamma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><Var x> \\<in> RED \\<tau>\n 2. \\<And>\\<Gamma> s \\<tau> \\<sigma> t \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<tau> \\<rightarrow> \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow>\n           b<s> \\<in> RED (\\<tau> \\<rightarrow> \\<sigma>);\n        \\<Gamma> \\<turnstile> t : \\<tau>;\n        \\<And>b. b closes \\<Gamma> \\<Longrightarrow> b<t> \\<in> RED \\<tau>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><App s t> \\<in> RED \\<sigma>\n 3. \\<And>\\<Gamma> s \\<sigma> \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED \\<sigma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><[s]> \\<in> RED (T \\<sigma>)\n 4. \\<And>x \\<Gamma> s \\<sigma> t \\<tau> \\<theta>.\n       \\<lbrakk>x \\<sharp> \\<theta>; x \\<sharp> \\<Gamma>; x \\<sharp> s;\n        \\<Gamma> \\<turnstile> s : T \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED (T \\<sigma>);\n        (x, \\<sigma>) # \\<Gamma> \\<turnstile> t : T \\<tau>;\n        \\<And>b.\n           b closes (x, \\<sigma>) # \\<Gamma> \\<Longrightarrow>\n           b<t> \\<in> RED (T \\<tau>);\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><s to x in t> \\<in> RED (T \\<tau>)", "from ihs"], ["proof (chain)\npicking this:\n  ?\\<theta> closes \\<Gamma> \\<Longrightarrow>\n  ?\\<theta><s> \\<in> RED (T \\<sigma>)", "have \"\\<theta><s> \\<in> RED (T \\<sigma>)\""], ["proof (prove)\nusing this:\n  ?\\<theta> closes \\<Gamma> \\<Longrightarrow>\n  ?\\<theta><s> \\<in> RED (T \\<sigma>)\n\ngoal (1 subgoal):\n 1. \\<theta><s> \\<in> RED (T \\<sigma>)", "using \\<theta>_cond"], ["proof (prove)\nusing this:\n  ?\\<theta> closes \\<Gamma> \\<Longrightarrow>\n  ?\\<theta><s> \\<in> RED (T \\<sigma>)\n  \\<theta> closes \\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<theta><s> \\<in> RED (T \\<sigma>)", "by simp"], ["proof (state)\nthis:\n  \\<theta><s> \\<in> RED (T \\<sigma>)\n\ngoal (4 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau> \\<theta>.\n       \\<lbrakk>valid \\<Gamma>; (x, \\<tau>) \\<in> set \\<Gamma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><Var x> \\<in> RED \\<tau>\n 2. \\<And>\\<Gamma> s \\<tau> \\<sigma> t \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<tau> \\<rightarrow> \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow>\n           b<s> \\<in> RED (\\<tau> \\<rightarrow> \\<sigma>);\n        \\<Gamma> \\<turnstile> t : \\<tau>;\n        \\<And>b. b closes \\<Gamma> \\<Longrightarrow> b<t> \\<in> RED \\<tau>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><App s t> \\<in> RED \\<sigma>\n 3. \\<And>\\<Gamma> s \\<sigma> \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED \\<sigma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><[s]> \\<in> RED (T \\<sigma>)\n 4. \\<And>x \\<Gamma> s \\<sigma> t \\<tau> \\<theta>.\n       \\<lbrakk>x \\<sharp> \\<theta>; x \\<sharp> \\<Gamma>; x \\<sharp> s;\n        \\<Gamma> \\<turnstile> s : T \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED (T \\<sigma>);\n        (x, \\<sigma>) # \\<Gamma> \\<turnstile> t : T \\<tau>;\n        \\<And>b.\n           b closes (x, \\<sigma>) # \\<Gamma> \\<Longrightarrow>\n           b<t> \\<in> RED (T \\<tau>);\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><s to x in t> \\<in> RED (T \\<tau>)", "moreover"], ["proof (state)\nthis:\n  \\<theta><s> \\<in> RED (T \\<sigma>)\n\ngoal (4 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau> \\<theta>.\n       \\<lbrakk>valid \\<Gamma>; (x, \\<tau>) \\<in> set \\<Gamma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><Var x> \\<in> RED \\<tau>\n 2. \\<And>\\<Gamma> s \\<tau> \\<sigma> t \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<tau> \\<rightarrow> \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow>\n           b<s> \\<in> RED (\\<tau> \\<rightarrow> \\<sigma>);\n        \\<Gamma> \\<turnstile> t : \\<tau>;\n        \\<And>b. b closes \\<Gamma> \\<Longrightarrow> b<t> \\<in> RED \\<tau>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><App s t> \\<in> RED \\<sigma>\n 3. \\<And>\\<Gamma> s \\<sigma> \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED \\<sigma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><[s]> \\<in> RED (T \\<sigma>)\n 4. \\<And>x \\<Gamma> s \\<sigma> t \\<tau> \\<theta>.\n       \\<lbrakk>x \\<sharp> \\<theta>; x \\<sharp> \\<Gamma>; x \\<sharp> s;\n        \\<Gamma> \\<turnstile> s : T \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED (T \\<sigma>);\n        (x, \\<sigma>) # \\<Gamma> \\<turnstile> t : T \\<tau>;\n        \\<And>b.\n           b closes (x, \\<sigma>) # \\<Gamma> \\<Longrightarrow>\n           b<t> \\<in> RED (T \\<tau>);\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><s to x in t> \\<in> RED (T \\<tau>)", "{"], ["proof (state)\nthis:\n  \\<theta><s> \\<in> RED (T \\<sigma>)\n\ngoal (4 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau> \\<theta>.\n       \\<lbrakk>valid \\<Gamma>; (x, \\<tau>) \\<in> set \\<Gamma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><Var x> \\<in> RED \\<tau>\n 2. \\<And>\\<Gamma> s \\<tau> \\<sigma> t \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<tau> \\<rightarrow> \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow>\n           b<s> \\<in> RED (\\<tau> \\<rightarrow> \\<sigma>);\n        \\<Gamma> \\<turnstile> t : \\<tau>;\n        \\<And>b. b closes \\<Gamma> \\<Longrightarrow> b<t> \\<in> RED \\<tau>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><App s t> \\<in> RED \\<sigma>\n 3. \\<And>\\<Gamma> s \\<sigma> \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED \\<sigma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><[s]> \\<in> RED (T \\<sigma>)\n 4. \\<And>x \\<Gamma> s \\<sigma> t \\<tau> \\<theta>.\n       \\<lbrakk>x \\<sharp> \\<theta>; x \\<sharp> \\<Gamma>; x \\<sharp> s;\n        \\<Gamma> \\<turnstile> s : T \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED (T \\<sigma>);\n        (x, \\<sigma>) # \\<Gamma> \\<turnstile> t : T \\<tau>;\n        \\<And>b.\n           b closes (x, \\<sigma>) # \\<Gamma> \\<Longrightarrow>\n           b<t> \\<in> RED (T \\<tau>);\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><s to x in t> \\<in> RED (T \\<tau>)", "from iht"], ["proof (chain)\npicking this:\n  ?\\<theta> closes (x, \\<sigma>) # \\<Gamma> \\<Longrightarrow>\n  ?\\<theta><t> \\<in> RED (T \\<tau>)", "have \"\\<forall>s\\<in>RED \\<sigma>. ((x,s)#\\<theta>)<t> \\<in> RED (T \\<tau>)\""], ["proof (prove)\nusing this:\n  ?\\<theta> closes (x, \\<sigma>) # \\<Gamma> \\<Longrightarrow>\n  ?\\<theta><t> \\<in> RED (T \\<tau>)\n\ngoal (1 subgoal):\n 1. \\<forall>s\\<in>RED \\<sigma>. ((x, s) # \\<theta>)<t> \\<in> RED (T \\<tau>)", "using fresh \\<theta>_cond fresh_context"], ["proof (prove)\nusing this:\n  ?\\<theta> closes (x, \\<sigma>) # \\<Gamma> \\<Longrightarrow>\n  ?\\<theta><t> \\<in> RED (T \\<tau>)\n  x \\<sharp> \\<theta>\n  x \\<sharp> \\<Gamma>\n  x \\<sharp> s\n  \\<theta> closes \\<Gamma>\n  ?x \\<sharp> ?\\<Gamma> \\<Longrightarrow>\n  \\<nexists>\\<tau>. (?x, \\<tau>) \\<in> set ?\\<Gamma>\n\ngoal (1 subgoal):\n 1. \\<forall>s\\<in>RED \\<sigma>. ((x, s) # \\<theta>)<t> \\<in> RED (T \\<tau>)", "by simp"], ["proof (state)\nthis:\n  \\<forall>s\\<in>RED \\<sigma>. ((x, s) # \\<theta>)<t> \\<in> RED (T \\<tau>)\n\ngoal (4 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau> \\<theta>.\n       \\<lbrakk>valid \\<Gamma>; (x, \\<tau>) \\<in> set \\<Gamma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><Var x> \\<in> RED \\<tau>\n 2. \\<And>\\<Gamma> s \\<tau> \\<sigma> t \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<tau> \\<rightarrow> \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow>\n           b<s> \\<in> RED (\\<tau> \\<rightarrow> \\<sigma>);\n        \\<Gamma> \\<turnstile> t : \\<tau>;\n        \\<And>b. b closes \\<Gamma> \\<Longrightarrow> b<t> \\<in> RED \\<tau>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><App s t> \\<in> RED \\<sigma>\n 3. \\<And>\\<Gamma> s \\<sigma> \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED \\<sigma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><[s]> \\<in> RED (T \\<sigma>)\n 4. \\<And>x \\<Gamma> s \\<sigma> t \\<tau> \\<theta>.\n       \\<lbrakk>x \\<sharp> \\<theta>; x \\<sharp> \\<Gamma>; x \\<sharp> s;\n        \\<Gamma> \\<turnstile> s : T \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED (T \\<sigma>);\n        (x, \\<sigma>) # \\<Gamma> \\<turnstile> t : T \\<tau>;\n        \\<And>b.\n           b closes (x, \\<sigma>) # \\<Gamma> \\<Longrightarrow>\n           b<t> \\<in> RED (T \\<tau>);\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><s to x in t> \\<in> RED (T \\<tau>)", "hence \"\\<forall>s\\<in>RED \\<sigma>. \\<theta><t>[x::=s] \\<in> RED (T \\<tau>)\""], ["proof (prove)\nusing this:\n  \\<forall>s\\<in>RED \\<sigma>. ((x, s) # \\<theta>)<t> \\<in> RED (T \\<tau>)\n\ngoal (1 subgoal):\n 1. \\<forall>s\\<in>RED \\<sigma>. \\<theta><t>[x::=s] \\<in> RED (T \\<tau>)", "using fresh"], ["proof (prove)\nusing this:\n  \\<forall>s\\<in>RED \\<sigma>. ((x, s) # \\<theta>)<t> \\<in> RED (T \\<tau>)\n  x \\<sharp> \\<theta>\n  x \\<sharp> \\<Gamma>\n  x \\<sharp> s\n\ngoal (1 subgoal):\n 1. \\<forall>s\\<in>RED \\<sigma>. \\<theta><t>[x::=s] \\<in> RED (T \\<tau>)", "by (simp add: psubst_subst)"], ["proof (state)\nthis:\n  \\<forall>s\\<in>RED \\<sigma>. \\<theta><t>[x::=s] \\<in> RED (T \\<tau>)\n\ngoal (4 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau> \\<theta>.\n       \\<lbrakk>valid \\<Gamma>; (x, \\<tau>) \\<in> set \\<Gamma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><Var x> \\<in> RED \\<tau>\n 2. \\<And>\\<Gamma> s \\<tau> \\<sigma> t \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<tau> \\<rightarrow> \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow>\n           b<s> \\<in> RED (\\<tau> \\<rightarrow> \\<sigma>);\n        \\<Gamma> \\<turnstile> t : \\<tau>;\n        \\<And>b. b closes \\<Gamma> \\<Longrightarrow> b<t> \\<in> RED \\<tau>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><App s t> \\<in> RED \\<sigma>\n 3. \\<And>\\<Gamma> s \\<sigma> \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED \\<sigma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><[s]> \\<in> RED (T \\<sigma>)\n 4. \\<And>x \\<Gamma> s \\<sigma> t \\<tau> \\<theta>.\n       \\<lbrakk>x \\<sharp> \\<theta>; x \\<sharp> \\<Gamma>; x \\<sharp> s;\n        \\<Gamma> \\<turnstile> s : T \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED (T \\<sigma>);\n        (x, \\<sigma>) # \\<Gamma> \\<turnstile> t : T \\<tau>;\n        \\<And>b.\n           b closes (x, \\<sigma>) # \\<Gamma> \\<Longrightarrow>\n           b<t> \\<in> RED (T \\<tau>);\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><s to x in t> \\<in> RED (T \\<tau>)", "}"], ["proof (state)\nthis:\n  \\<forall>s\\<in>RED \\<sigma>. \\<theta><t>[x::=s] \\<in> RED (T \\<tau>)\n\ngoal (4 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau> \\<theta>.\n       \\<lbrakk>valid \\<Gamma>; (x, \\<tau>) \\<in> set \\<Gamma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><Var x> \\<in> RED \\<tau>\n 2. \\<And>\\<Gamma> s \\<tau> \\<sigma> t \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<tau> \\<rightarrow> \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow>\n           b<s> \\<in> RED (\\<tau> \\<rightarrow> \\<sigma>);\n        \\<Gamma> \\<turnstile> t : \\<tau>;\n        \\<And>b. b closes \\<Gamma> \\<Longrightarrow> b<t> \\<in> RED \\<tau>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><App s t> \\<in> RED \\<sigma>\n 3. \\<And>\\<Gamma> s \\<sigma> \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED \\<sigma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><[s]> \\<in> RED (T \\<sigma>)\n 4. \\<And>x \\<Gamma> s \\<sigma> t \\<tau> \\<theta>.\n       \\<lbrakk>x \\<sharp> \\<theta>; x \\<sharp> \\<Gamma>; x \\<sharp> s;\n        \\<Gamma> \\<turnstile> s : T \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED (T \\<sigma>);\n        (x, \\<sigma>) # \\<Gamma> \\<turnstile> t : T \\<tau>;\n        \\<And>b.\n           b closes (x, \\<sigma>) # \\<Gamma> \\<Longrightarrow>\n           b<t> \\<in> RED (T \\<tau>);\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><s to x in t> \\<in> RED (T \\<tau>)", "ultimately"], ["proof (chain)\npicking this:\n  \\<theta><s> \\<in> RED (T \\<sigma>)\n  \\<forall>s\\<in>RED \\<sigma>. \\<theta><t>[x::=s] \\<in> RED (T \\<tau>)", "have \"(\\<theta><s>) to x in (\\<theta><t>) \\<in> RED (T \\<tau>)\""], ["proof (prove)\nusing this:\n  \\<theta><s> \\<in> RED (T \\<sigma>)\n  \\<forall>s\\<in>RED \\<sigma>. \\<theta><t>[x::=s] \\<in> RED (T \\<tau>)\n\ngoal (1 subgoal):\n 1. \\<theta><s> to x in \\<theta><t> \\<in> RED (T \\<tau>)", "by (simp only: to_RED)"], ["proof (state)\nthis:\n  \\<theta><s> to x in \\<theta><t> \\<in> RED (T \\<tau>)\n\ngoal (4 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau> \\<theta>.\n       \\<lbrakk>valid \\<Gamma>; (x, \\<tau>) \\<in> set \\<Gamma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><Var x> \\<in> RED \\<tau>\n 2. \\<And>\\<Gamma> s \\<tau> \\<sigma> t \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<tau> \\<rightarrow> \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow>\n           b<s> \\<in> RED (\\<tau> \\<rightarrow> \\<sigma>);\n        \\<Gamma> \\<turnstile> t : \\<tau>;\n        \\<And>b. b closes \\<Gamma> \\<Longrightarrow> b<t> \\<in> RED \\<tau>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><App s t> \\<in> RED \\<sigma>\n 3. \\<And>\\<Gamma> s \\<sigma> \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED \\<sigma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><[s]> \\<in> RED (T \\<sigma>)\n 4. \\<And>x \\<Gamma> s \\<sigma> t \\<tau> \\<theta>.\n       \\<lbrakk>x \\<sharp> \\<theta>; x \\<sharp> \\<Gamma>; x \\<sharp> s;\n        \\<Gamma> \\<turnstile> s : T \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED (T \\<sigma>);\n        (x, \\<sigma>) # \\<Gamma> \\<turnstile> t : T \\<tau>;\n        \\<And>b.\n           b closes (x, \\<sigma>) # \\<Gamma> \\<Longrightarrow>\n           b<t> \\<in> RED (T \\<tau>);\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><s to x in t> \\<in> RED (T \\<tau>)", "thus \"\\<theta><s to x in t> \\<in> RED (T \\<tau>)\""], ["proof (prove)\nusing this:\n  \\<theta><s> to x in \\<theta><t> \\<in> RED (T \\<tau>)\n\ngoal (1 subgoal):\n 1. \\<theta><s to x in t> \\<in> RED (T \\<tau>)", "using fresh"], ["proof (prove)\nusing this:\n  \\<theta><s> to x in \\<theta><t> \\<in> RED (T \\<tau>)\n  x \\<sharp> \\<theta>\n  x \\<sharp> \\<Gamma>\n  x \\<sharp> s\n\ngoal (1 subgoal):\n 1. \\<theta><s to x in t> \\<in> RED (T \\<tau>)", "by simp"], ["proof (state)\nthis:\n  \\<theta><s to x in t> \\<in> RED (T \\<tau>)\n\ngoal (3 subgoals):\n 1. \\<And>\\<Gamma> x \\<tau> \\<theta>.\n       \\<lbrakk>valid \\<Gamma>; (x, \\<tau>) \\<in> set \\<Gamma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><Var x> \\<in> RED \\<tau>\n 2. \\<And>\\<Gamma> s \\<tau> \\<sigma> t \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<tau> \\<rightarrow> \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow>\n           b<s> \\<in> RED (\\<tau> \\<rightarrow> \\<sigma>);\n        \\<Gamma> \\<turnstile> t : \\<tau>;\n        \\<And>b. b closes \\<Gamma> \\<Longrightarrow> b<t> \\<in> RED \\<tau>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><App s t> \\<in> RED \\<sigma>\n 3. \\<And>\\<Gamma> s \\<sigma> \\<theta>.\n       \\<lbrakk>\\<Gamma> \\<turnstile> s : \\<sigma>;\n        \\<And>b.\n           b closes \\<Gamma> \\<Longrightarrow> b<s> \\<in> RED \\<sigma>;\n        \\<theta> closes \\<Gamma>\\<rbrakk>\n       \\<Longrightarrow> \\<theta><[s]> \\<in> RED (T \\<sigma>)", "qed auto \\<comment> \\<open>all other cases are trivial\\<close>"], ["", "text \\<open>The final result then follows using the identity substitution, which is\n$\\Gamma$-closing since all variables are reducible at any type.\\<close>"], ["", "fun\n  \"id\" :: \"(name\\<times>ty) list \\<Rightarrow> (name\\<times>trm) list\"\nwhere\n  \"id []    = []\"\n| \"id ((x,\\<tau>)#\\<Gamma>) = (x,Var x)#(id \\<Gamma>)\""], ["", "lemma id_maps: \n  shows \"(id \\<Gamma>) maps a to (Var a)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Lam_ml.id \\<Gamma> maps a to Var a", "by (induct \\<Gamma>) (auto)"], ["", "lemma id_fresh:\n  fixes x::\"name\"\n  assumes x: \"x \\<sharp> \\<Gamma>\"\n  shows \"x \\<sharp> (id \\<Gamma>)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<sharp> Lam_ml.id \\<Gamma>", "using x"], ["proof (prove)\nusing this:\n  x \\<sharp> \\<Gamma>\n\ngoal (1 subgoal):\n 1. x \\<sharp> Lam_ml.id \\<Gamma>", "by (induct \\<Gamma>) (auto simp add: fresh_list_nil fresh_list_cons)"], ["", "lemma id_apply: \n  shows \"(id \\<Gamma>)<t> = t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Lam_ml.id \\<Gamma><t> = t", "by (nominal_induct t avoiding: \\<Gamma> rule: trm.strong_induct)\n   (auto simp add: id_maps id_fresh)"], ["", "lemma id_closes:\n  shows \"(id \\<Gamma>) closes \\<Gamma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Lam_ml.id \\<Gamma> closes \\<Gamma>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Lam_ml.id \\<Gamma> closes \\<Gamma>", "{"], ["proof (state)\ngoal (1 subgoal):\n 1. Lam_ml.id \\<Gamma> closes \\<Gamma>", "fix x \\<tau>"], ["proof (state)\ngoal (1 subgoal):\n 1. Lam_ml.id \\<Gamma> closes \\<Gamma>", "assume \"(x,\\<tau>) \\<in> set \\<Gamma>\""], ["proof (state)\nthis:\n  (x, \\<tau>) \\<in> set \\<Gamma>\n\ngoal (1 subgoal):\n 1. Lam_ml.id \\<Gamma> closes \\<Gamma>", "have \"CR4 \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CR4 \\<tau>", "by(simp add: RED_props CR3_implies_CR4)"], ["proof (state)\nthis:\n  CR4 \\<tau>\n\ngoal (1 subgoal):\n 1. Lam_ml.id \\<Gamma> closes \\<Gamma>", "hence \"Var x \\<in> RED \\<tau>\""], ["proof (prove)\nusing this:\n  CR4 \\<tau>\n\ngoal (1 subgoal):\n 1. Var x \\<in> RED \\<tau>", "by(auto simp add: NEUT_def normal_var CR4_def)"], ["proof (state)\nthis:\n  Var x \\<in> RED \\<tau>\n\ngoal (1 subgoal):\n 1. Lam_ml.id \\<Gamma> closes \\<Gamma>", "hence \"(id \\<Gamma>) maps x to Var x \\<and> Var x \\<in> RED \\<tau>\""], ["proof (prove)\nusing this:\n  Var x \\<in> RED \\<tau>\n\ngoal (1 subgoal):\n 1. Lam_ml.id \\<Gamma> maps x to Var x \\<and> Var x \\<in> RED \\<tau>", "by (simp add: id_maps)"], ["proof (state)\nthis:\n  Lam_ml.id \\<Gamma> maps x to Var x \\<and> Var x \\<in> RED \\<tau>\n\ngoal (1 subgoal):\n 1. Lam_ml.id \\<Gamma> closes \\<Gamma>", "}"], ["proof (state)\nthis:\n  (?x2, ?\\<tau>2) \\<in> set \\<Gamma> \\<Longrightarrow>\n  Lam_ml.id \\<Gamma> maps ?x2 to Var ?x2 \\<and> Var ?x2 \\<in> RED ?\\<tau>2\n\ngoal (1 subgoal):\n 1. Lam_ml.id \\<Gamma> closes \\<Gamma>", "thus ?thesis"], ["proof (prove)\nusing this:\n  (?x2, ?\\<tau>2) \\<in> set \\<Gamma> \\<Longrightarrow>\n  Lam_ml.id \\<Gamma> maps ?x2 to Var ?x2 \\<and> Var ?x2 \\<in> RED ?\\<tau>2\n\ngoal (1 subgoal):\n 1. Lam_ml.id \\<Gamma> closes \\<Gamma>", "by blast"], ["proof (state)\nthis:\n  Lam_ml.id \\<Gamma> closes \\<Gamma>\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \\<open>Strong normalization theorem\\<close>"], ["", "lemma typing_implies_RED:  \n  assumes a: \"\\<Gamma> \\<turnstile> t : \\<tau>\"\n  shows \"t \\<in> RED \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<in> RED \\<tau>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. t \\<in> RED \\<tau>", "have \"(id \\<Gamma>)<t>\\<in>RED \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Lam_ml.id \\<Gamma><t> \\<in> RED \\<tau>", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Lam_ml.id \\<Gamma><t> \\<in> RED \\<tau>", "have \"(id \\<Gamma>) closes \\<Gamma>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Lam_ml.id \\<Gamma> closes \\<Gamma>", "by (rule id_closes)"], ["proof (state)\nthis:\n  Lam_ml.id \\<Gamma> closes \\<Gamma>\n\ngoal (1 subgoal):\n 1. Lam_ml.id \\<Gamma><t> \\<in> RED \\<tau>", "with a"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<turnstile> t : \\<tau>\n  Lam_ml.id \\<Gamma> closes \\<Gamma>", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> t : \\<tau>\n  Lam_ml.id \\<Gamma> closes \\<Gamma>\n\ngoal (1 subgoal):\n 1. Lam_ml.id \\<Gamma><t> \\<in> RED \\<tau>", "by (rule fundamental_theorem)"], ["proof (state)\nthis:\n  Lam_ml.id \\<Gamma><t> \\<in> RED \\<tau>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Lam_ml.id \\<Gamma><t> \\<in> RED \\<tau>\n\ngoal (1 subgoal):\n 1. t \\<in> RED \\<tau>", "thus\"t \\<in> RED \\<tau>\""], ["proof (prove)\nusing this:\n  Lam_ml.id \\<Gamma><t> \\<in> RED \\<tau>\n\ngoal (1 subgoal):\n 1. t \\<in> RED \\<tau>", "by (simp add: id_apply)"], ["proof (state)\nthis:\n  t \\<in> RED \\<tau>\n\ngoal:\nNo subgoals!", "qed"], ["", "theorem strong_normalization: \n  assumes a: \"\\<Gamma> \\<turnstile> t : \\<tau>\"\n  shows \"SN(t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. SN t", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. SN t", "from a"], ["proof (chain)\npicking this:\n  \\<Gamma> \\<turnstile> t : \\<tau>", "have \"t \\<in> RED \\<tau>\""], ["proof (prove)\nusing this:\n  \\<Gamma> \\<turnstile> t : \\<tau>\n\ngoal (1 subgoal):\n 1. t \\<in> RED \\<tau>", "by (rule typing_implies_RED)"], ["proof (state)\nthis:\n  t \\<in> RED \\<tau>\n\ngoal (1 subgoal):\n 1. SN t", "moreover"], ["proof (state)\nthis:\n  t \\<in> RED \\<tau>\n\ngoal (1 subgoal):\n 1. SN t", "have \"CR1 \\<tau>\""], ["proof (prove)\ngoal (1 subgoal):\n 1. CR1 \\<tau>", "by (rule RED_props)"], ["proof (state)\nthis:\n  CR1 \\<tau>\n\ngoal (1 subgoal):\n 1. SN t", "ultimately"], ["proof (chain)\npicking this:\n  t \\<in> RED \\<tau>\n  CR1 \\<tau>", "show \"SN(t)\""], ["proof (prove)\nusing this:\n  t \\<in> RED \\<tau>\n  CR1 \\<tau>\n\ngoal (1 subgoal):\n 1. SN t", "by (simp add: CR1_def)"], ["proof (state)\nthis:\n  SN t\n\ngoal:\nNo subgoals!", "qed"], ["", "text \\<open>This finishes our formalization effort. This article is generated\nfrom the Isabelle theory file, which consists of roughly 1500 lines of proof\ncode. The reader is invited to replay some of the more technical proofs using\nthe theory file provided.\\<close>"], ["", "(*<*)"], ["", "end"], ["", "(*>*)"]]}