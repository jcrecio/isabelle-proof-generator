{"file_name": "/home/qj213/afp-2021-10-22/thys/Priority_Search_Trees/PST_RBT.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Priority_Search_Trees", "problem_names": ["lemma inorder_paint[simp]: \"inorder(paint c t) = inorder t\"", "lemma inorder_mkNode[simp]:\n  \"inorder (mkNode c l a r) = inorder l @ a # inorder r\"", "lemma inorder_baliL[simp]:\n  \"inorder(baliL l a r) = inorder l @ a # inorder r\"", "lemma inorder_baliR[simp]:\n  \"inorder(baliR l a r) = inorder l @ a # inorder r\"", "lemma inorder_baldL[simp]:\n  \"inorder(baldL l a r) = inorder l @ a # inorder r\"", "lemma inorder_baldR[simp]:\n  \"inorder(baldR l a r) = inorder l @ a # inorder r\"", "lemma inorder_combine[simp]:\n  \"inorder(combine l r) = inorder l @ inorder r\"", "lemma inorder_upd:\n  \"sorted1(inorder t) \\<Longrightarrow> inorder(upd x y t) = upd_list x y (inorder t)\"", "lemma inorder_update:\n  \"sorted1(inorder t) \\<Longrightarrow> inorder(update x y t) = upd_list x y (inorder t)\"", "lemma inorder_del:\n \"sorted1(inorder t) \\<Longrightarrow>  inorder(del x t) = del_list x (inorder t)\"", "lemma inorder_delete:\n  \"sorted1(inorder t) \\<Longrightarrow> inorder(delete x t) = del_list x (inorder t)\"", "lemma color_paint_Black: \"color (paint Black t) = Black\"", "theorem rbt_Leaf: \"rbt Leaf\"", "lemma invc2I: \"invc t \\<Longrightarrow> invc2 t\"", "lemma paint_invc2: \"invc2 t \\<Longrightarrow> invc2 (paint c t)\"", "lemma invc_paint_Black: \"invc2 t \\<Longrightarrow> invc (paint Black t)\"", "lemma invh_paint: \"invh t \\<Longrightarrow> invh (paint c t)\"", "lemma invc_mkRB[simp]:\n  \"invc (mkR l a r) \\<longleftrightarrow> invc l \\<and> invc r \\<and> color l = Black \\<and> color r = Black\"\n  \"invc (mkB l a r) \\<longleftrightarrow> invc l \\<and> invc r\"", "lemma color_mkNode[simp]: \"color (mkNode c l a r) = c\"", "lemma invc_baliL:\n  \"\\<lbrakk>invc2 l; invc r\\<rbrakk> \\<Longrightarrow> invc (baliL l a r)\"", "lemma invc_baliR:\n  \"\\<lbrakk>invc l; invc2 r\\<rbrakk> \\<Longrightarrow> invc (baliR l a r)\"", "lemma bheight_mkRB[simp]:\n  \"bheight (mkR l a r) = bheight l\"\n  \"bheight (mkB l a r) = Suc (bheight l)\"", "lemma bheight_baliL:\n  \"bheight l = bheight r \\<Longrightarrow> bheight (baliL l a r) = Suc (bheight l)\"", "lemma bheight_baliR:\n  \"bheight l = bheight r \\<Longrightarrow> bheight (baliR l a r) = Suc (bheight l)\"", "lemma invh_mkNode[simp]:\n  \"invh (mkNode c l a r) \\<longleftrightarrow> invh l \\<and> invh r \\<and> bheight l = bheight r\"", "lemma invh_baliL:\n  \"\\<lbrakk> invh l; invh r; bheight l = bheight r \\<rbrakk> \\<Longrightarrow> invh (baliL l a r)\"", "lemma invh_baliR:\n  \"\\<lbrakk> invh l; invh r; bheight l = bheight r \\<rbrakk> \\<Longrightarrow> invh (baliR l a r)\"", "lemma invc_upd: assumes \"invc t\"\n  shows \"color t = Black \\<Longrightarrow> invc (upd x y t)\" \"invc2 (upd x y t)\"", "lemma invh_upd: assumes \"invh t\"\n  shows \"invh (upd x y t)\" \"bheight (upd x y t) = bheight t\"", "lemma invpst_paint[simp]: \"invpst (paint c t) = invpst t\"", "lemma invpst_baliR: \"invpst l \\<Longrightarrow> invpst r \\<Longrightarrow> invpst (baliR l a r)\"", "lemma invpst_baliL: \"invpst l \\<Longrightarrow> invpst r \\<Longrightarrow> invpst (baliL l a r)\"", "lemma invpst_upd: \"invpst t \\<Longrightarrow> invpst (upd x y t)\"", "theorem rbt_update: \"rbt t \\<Longrightarrow> rbt (update x y t)\"", "lemma bheight_paint_Red:\n  \"color t = Black \\<Longrightarrow> bheight (paint Red t) = bheight t - 1\"", "lemma invh_baldL_invc:\n  \"\\<lbrakk> invh l;  invh r;  bheight l + 1 = bheight r;  invc r \\<rbrakk>\n   \\<Longrightarrow> invh (baldL l a r) \\<and> bheight (baldL l a r) = bheight l + 1\"", "lemma invh_baldL_Black:\n  \"\\<lbrakk> invh l;  invh r;  bheight l + 1 = bheight r;  color r = Black \\<rbrakk>\n   \\<Longrightarrow> invh (baldL l a r) \\<and> bheight (baldL l a r) = bheight r\"", "lemma invc_baldL: \"\\<lbrakk>invc2 l; invc r; color r = Black\\<rbrakk> \\<Longrightarrow> invc (baldL l a r)\"", "lemma invc2_baldL: \"\\<lbrakk> invc2 l; invc r \\<rbrakk> \\<Longrightarrow> invc2 (baldL l a r)\"", "lemma invh_baldR_invc:\n  \"\\<lbrakk> invh l;  invh r;  bheight l = bheight r + 1;  invc l \\<rbrakk>\n  \\<Longrightarrow> invh (baldR l a r) \\<and> bheight (baldR l a r) = bheight l\"", "lemma invc_baldR: \"\\<lbrakk>invc a; invc2 b; color a = Black\\<rbrakk> \\<Longrightarrow> invc (baldR a x b)\"", "lemma invc2_baldR: \"\\<lbrakk> invc l; invc2 r \\<rbrakk> \\<Longrightarrow>invc2 (baldR l x r)\"", "lemma invh_combine:\n  \"\\<lbrakk> invh l; invh r; bheight l = bheight r \\<rbrakk>\n  \\<Longrightarrow> invh (combine l r) \\<and> bheight (combine l r) = bheight l\"", "lemma invc_combine:\n  assumes \"invc l\" \"invc r\"\n  shows \"color l = Black \\<Longrightarrow> color r = Black \\<Longrightarrow> invc (combine l r)\"\n         \"invc2 (combine l r)\"", "lemma neq_LeafD: \"t \\<noteq> Leaf \\<Longrightarrow> \\<exists>l x c r. t = Node l (x,c) r\"", "lemma del_invc_invh: \"invh t \\<Longrightarrow> invc t \\<Longrightarrow> invh (del x t) \\<and>\n   (color t = Red \\<and> bheight (del x t) = bheight t \\<and> invc (del x t) \\<or>\n    color t = Black \\<and> bheight (del x t) = bheight t - 1 \\<and> invc2 (del x t))\"", "lemma invpst_baldR: \"invpst l \\<Longrightarrow> invpst r \\<Longrightarrow> invpst (baldR l a r)\"", "lemma invpst_baldL: \"invpst l \\<Longrightarrow> invpst r \\<Longrightarrow> invpst (baldL l a r)\"", "lemma invpst_combine: \"invpst l \\<Longrightarrow> invpst r \\<Longrightarrow> invpst (combine l r)\"", "lemma invpst_del: \"invpst t \\<Longrightarrow> invpst (del x t)\"", "theorem rbt_delete: \"rbt t \\<Longrightarrow> rbt (delete k t)\"", "lemma rbt_getmin_ismin: \n  \"rbt t \\<Longrightarrow> t\\<noteq>Leaf \\<Longrightarrow> is_min2 (pst_getmin t) (set_tree t)\"", "lemma rbt_is_empty: \"rbt_is_empty t \\<longleftrightarrow> inorder t = []\""], "translations": [["", "lemma inorder_paint[simp]: \"inorder(paint c t) = inorder t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Tree2.inorder (paint c t) = Tree2.inorder t", "by(cases t) (auto)"], ["", "lemma inorder_mkNode[simp]:\n  \"inorder (mkNode c l a r) = inorder l @ a # inorder r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Tree2.inorder (mkNode c l a r) = Tree2.inorder l @ a # Tree2.inorder r", "by (auto simp: mkNode_def)"], ["", "lemma inorder_baliL[simp]:\n  \"inorder(baliL l a r) = inorder l @ a # inorder r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Tree2.inorder (baliL l a r) = Tree2.inorder l @ a # Tree2.inorder r", "by(cases \"(l,a,r)\" rule: baliL.cases) (auto)"], ["", "lemma inorder_baliR[simp]:\n  \"inorder(baliR l a r) = inorder l @ a # inorder r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Tree2.inorder (baliR l a r) = Tree2.inorder l @ a # Tree2.inorder r", "by(cases \"(l,a,r)\" rule: baliR.cases) (auto)"], ["", "lemma inorder_baldL[simp]:\n  \"inorder(baldL l a r) = inorder l @ a # inorder r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Tree2.inorder (baldL l a r) = Tree2.inorder l @ a # Tree2.inorder r", "by (cases \"(l,a,r)\" rule: baldL.cases) auto"], ["", "lemma inorder_baldR[simp]:\n  \"inorder(baldR l a r) = inorder l @ a # inorder r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Tree2.inorder (baldR l a r) = Tree2.inorder l @ a # Tree2.inorder r", "by(cases \"(l,a,r)\" rule: baldR.cases) auto"], ["", "lemma inorder_combine[simp]:\n  \"inorder(combine l r) = inorder l @ inorder r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Tree2.inorder (combine l r) = Tree2.inorder l @ Tree2.inorder r", "by (induction l r rule: combine.induct) (auto split: tree.split tcolor.split)"], ["", "lemma inorder_upd:\n  \"sorted1(inorder t) \\<Longrightarrow> inorder(upd x y t) = upd_list x y (inorder t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted1 (Tree2.inorder t) \\<Longrightarrow>\n    Tree2.inorder (upd x y t) = upd_list x y (Tree2.inorder t)", "by(induction x y t rule: upd.induct)\n  (auto simp: upd_list_simps)"], ["", "lemma inorder_update:\n  \"sorted1(inorder t) \\<Longrightarrow> inorder(update x y t) = upd_list x y (inorder t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted1 (Tree2.inorder t) \\<Longrightarrow>\n    Tree2.inorder (update x y t) = upd_list x y (Tree2.inorder t)", "by(simp add: update_def inorder_upd)"], ["", "lemma inorder_del:\n \"sorted1(inorder t) \\<Longrightarrow>  inorder(del x t) = del_list x (inorder t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted1 (Tree2.inorder t) \\<Longrightarrow>\n    Tree2.inorder (del x t) = AList_Upd_Del.del_list x (Tree2.inorder t)", "by(induction x t rule: del.induct)\n  (auto simp: del_list_simps)"], ["", "lemma inorder_delete:\n  \"sorted1(inorder t) \\<Longrightarrow> inorder(delete x t) = del_list x (inorder t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sorted1 (Tree2.inorder t) \\<Longrightarrow>\n    Tree2.inorder (delete x t) = AList_Upd_Del.del_list x (Tree2.inorder t)", "by(simp add: delete_def inorder_del)"], ["", "subsection \\<open>Invariant Preservation\\<close>"], ["", "lemma color_paint_Black: \"color (paint Black t) = Black\""], ["proof (prove)\ngoal (1 subgoal):\n 1. color (paint Black t) = Black", "by (cases t) auto"], ["", "theorem rbt_Leaf: \"rbt Leaf\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rbt \\<langle>\\<rangle>", "by (simp add: rbt_def)"], ["", "lemma invc2I: \"invc t \\<Longrightarrow> invc2 t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invc t \\<Longrightarrow> invc2 t", "by (cases t rule: invc.cases) simp+"], ["", "lemma paint_invc2: \"invc2 t \\<Longrightarrow> invc2 (paint c t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invc2 t \\<Longrightarrow> invc2 (paint c t)", "by (cases t) auto"], ["", "lemma invc_paint_Black: \"invc2 t \\<Longrightarrow> invc (paint Black t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invc2 t \\<Longrightarrow> invc (paint Black t)", "by (cases t) auto"], ["", "lemma invh_paint: \"invh t \\<Longrightarrow> invh (paint c t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invh t \\<Longrightarrow> invh (paint c t)", "by (cases t) auto"], ["", "lemma invc_mkRB[simp]:\n  \"invc (mkR l a r) \\<longleftrightarrow> invc l \\<and> invc r \\<and> color l = Black \\<and> color r = Black\"\n  \"invc (mkB l a r) \\<longleftrightarrow> invc l \\<and> invc r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invc (mkR l a r) =\n    (invc l \\<and> invc r \\<and> color l = Black \\<and> color r = Black) &&&\n    invc (mkB l a r) = (invc l \\<and> invc r)", "by (simp_all add: mkNode_def)"], ["", "lemma color_mkNode[simp]: \"color (mkNode c l a r) = c\""], ["proof (prove)\ngoal (1 subgoal):\n 1. color (mkNode c l a r) = c", "by (simp_all add: mkNode_def)"], ["", "subsubsection \\<open>Update\\<close>"], ["", "lemma invc_baliL:\n  \"\\<lbrakk>invc2 l; invc r\\<rbrakk> \\<Longrightarrow> invc (baliL l a r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>invc2 l; invc r\\<rbrakk> \\<Longrightarrow> invc (baliL l a r)", "by (induct l a r rule: baliL.induct) auto"], ["", "lemma invc_baliR:\n  \"\\<lbrakk>invc l; invc2 r\\<rbrakk> \\<Longrightarrow> invc (baliR l a r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>invc l; invc2 r\\<rbrakk> \\<Longrightarrow> invc (baliR l a r)", "by (induct l a r rule: baliR.induct) auto"], ["", "lemma bheight_mkRB[simp]:\n  \"bheight (mkR l a r) = bheight l\"\n  \"bheight (mkB l a r) = Suc (bheight l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bheight (mkR l a r) = bheight l &&&\n    bheight (mkB l a r) = Suc (bheight l)", "by (simp_all add: mkNode_def)"], ["", "lemma bheight_baliL:\n  \"bheight l = bheight r \\<Longrightarrow> bheight (baliL l a r) = Suc (bheight l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bheight l = bheight r \\<Longrightarrow>\n    bheight (baliL l a r) = Suc (bheight l)", "by (induct l a r rule: baliL.induct) auto"], ["", "lemma bheight_baliR:\n  \"bheight l = bheight r \\<Longrightarrow> bheight (baliR l a r) = Suc (bheight l)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bheight l = bheight r \\<Longrightarrow>\n    bheight (baliR l a r) = Suc (bheight l)", "by (induct l a r rule: baliR.induct) auto"], ["", "lemma invh_mkNode[simp]:\n  \"invh (mkNode c l a r) \\<longleftrightarrow> invh l \\<and> invh r \\<and> bheight l = bheight r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invh (mkNode c l a r) =\n    (invh l \\<and> invh r \\<and> bheight l = bheight r)", "by (simp add: mkNode_def)"], ["", "lemma invh_baliL:\n  \"\\<lbrakk> invh l; invh r; bheight l = bheight r \\<rbrakk> \\<Longrightarrow> invh (baliL l a r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>invh l; invh r; bheight l = bheight r\\<rbrakk>\n    \\<Longrightarrow> invh (baliL l a r)", "by (induct l a r rule: baliL.induct) auto"], ["", "lemma invh_baliR:\n  \"\\<lbrakk> invh l; invh r; bheight l = bheight r \\<rbrakk> \\<Longrightarrow> invh (baliR l a r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>invh l; invh r; bheight l = bheight r\\<rbrakk>\n    \\<Longrightarrow> invh (baliR l a r)", "by (induct l a r rule: baliR.induct) auto"], ["", "lemma invc_upd: assumes \"invc t\"\n  shows \"color t = Black \\<Longrightarrow> invc (upd x y t)\" \"invc2 (upd x y t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (color t = Black \\<Longrightarrow> invc (upd x y t)) &&&\n    invc2 (upd x y t)", "using assms"], ["proof (prove)\nusing this:\n  invc t\n\ngoal (1 subgoal):\n 1. (color t = Black \\<Longrightarrow> invc (upd x y t)) &&&\n    invc2 (upd x y t)", "by (induct x y t rule: upd.induct) \n   (auto simp: invc_baliL invc_baliR invc2I mkNode_def)"], ["", "lemma invh_upd: assumes \"invh t\"\n  shows \"invh (upd x y t)\" \"bheight (upd x y t) = bheight t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invh (upd x y t) &&& bheight (upd x y t) = bheight t", "using assms"], ["proof (prove)\nusing this:\n  invh t\n\ngoal (1 subgoal):\n 1. invh (upd x y t) &&& bheight (upd x y t) = bheight t", "by(induct x y t rule: upd.induct)\n  (auto simp: invh_baliL invh_baliR bheight_baliL bheight_baliR)"], ["", "lemma invpst_paint[simp]: \"invpst (paint c t) = invpst t\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invpst (paint c t) = invpst t", "by (cases \"(c,t)\" rule: paint.cases) auto"], ["", "lemma invpst_baliR: \"invpst l \\<Longrightarrow> invpst r \\<Longrightarrow> invpst (baliR l a r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>invpst l; invpst r\\<rbrakk>\n    \\<Longrightarrow> invpst (baliR l a r)", "by (cases \"(l,a,r)\" rule: baliR.cases) auto"], ["", "lemma invpst_baliL: \"invpst l \\<Longrightarrow> invpst r \\<Longrightarrow> invpst (baliL l a r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>invpst l; invpst r\\<rbrakk>\n    \\<Longrightarrow> invpst (baliL l a r)", "by (cases \"(l,a,r)\" rule: baliL.cases) auto"], ["", "lemma invpst_upd: \"invpst t \\<Longrightarrow> invpst (upd x y t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invpst t \\<Longrightarrow> invpst (upd x y t)", "by (induct x y t rule: upd.induct) (auto simp: invpst_baliR invpst_baliL)"], ["", "theorem rbt_update: \"rbt t \\<Longrightarrow> rbt (update x y t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rbt t \\<Longrightarrow> rbt (update x y t)", "by (simp add: invc_upd(2) invh_upd(1) color_paint_Black invc_paint_Black \n  invh_paint rbt_def update_def invpst_upd)"], ["", "subsubsection \\<open>Delete\\<close>"], ["", "lemma bheight_paint_Red:\n  \"color t = Black \\<Longrightarrow> bheight (paint Red t) = bheight t - 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. color t = Black \\<Longrightarrow> bheight (paint Red t) = bheight t - 1", "by (cases t) auto"], ["", "lemma invh_baldL_invc:\n  \"\\<lbrakk> invh l;  invh r;  bheight l + 1 = bheight r;  invc r \\<rbrakk>\n   \\<Longrightarrow> invh (baldL l a r) \\<and> bheight (baldL l a r) = bheight l + 1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>invh l; invh r; bheight l + 1 = bheight r; invc r\\<rbrakk>\n    \\<Longrightarrow> invh (baldL l a r) \\<and>\n                      bheight (baldL l a r) = bheight l + 1", "by (induct l a r rule: baldL.induct)\n   (auto simp: invh_baliR invh_paint bheight_baliR bheight_paint_Red)"], ["", "lemma invh_baldL_Black:\n  \"\\<lbrakk> invh l;  invh r;  bheight l + 1 = bheight r;  color r = Black \\<rbrakk>\n   \\<Longrightarrow> invh (baldL l a r) \\<and> bheight (baldL l a r) = bheight r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>invh l; invh r; bheight l + 1 = bheight r;\n     color r = Black\\<rbrakk>\n    \\<Longrightarrow> invh (baldL l a r) \\<and>\n                      bheight (baldL l a r) = bheight r", "by (induct l a r rule: baldL.induct) (auto simp add: invh_baliR bheight_baliR)"], ["", "lemma invc_baldL: \"\\<lbrakk>invc2 l; invc r; color r = Black\\<rbrakk> \\<Longrightarrow> invc (baldL l a r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>invc2 l; invc r; color r = Black\\<rbrakk>\n    \\<Longrightarrow> invc (baldL l a r)", "by (induct l a r rule: baldL.induct) (auto simp: invc_baliR invc2I mkNode_def)"], ["", "lemma invc2_baldL: \"\\<lbrakk> invc2 l; invc r \\<rbrakk> \\<Longrightarrow> invc2 (baldL l a r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>invc2 l; invc r\\<rbrakk> \\<Longrightarrow> invc2 (baldL l a r)", "by (induct l a r rule: baldL.induct) \n   (auto simp: invc_baliR paint_invc2 invc2I mkNode_def)"], ["", "lemma invh_baldR_invc:\n  \"\\<lbrakk> invh l;  invh r;  bheight l = bheight r + 1;  invc l \\<rbrakk>\n  \\<Longrightarrow> invh (baldR l a r) \\<and> bheight (baldR l a r) = bheight l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>invh l; invh r; bheight l = bheight r + 1; invc l\\<rbrakk>\n    \\<Longrightarrow> invh (baldR l a r) \\<and>\n                      bheight (baldR l a r) = bheight l", "by(induct l a r rule: baldR.induct)\n  (auto simp: invh_baliL bheight_baliL invh_paint bheight_paint_Red)"], ["", "lemma invc_baldR: \"\\<lbrakk>invc a; invc2 b; color a = Black\\<rbrakk> \\<Longrightarrow> invc (baldR a x b)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>invc a; invc2 b; color a = Black\\<rbrakk>\n    \\<Longrightarrow> invc (baldR a x b)", "by (induct a x b rule: baldR.induct) (simp_all add: invc_baliL mkNode_def)"], ["", "lemma invc2_baldR: \"\\<lbrakk> invc l; invc2 r \\<rbrakk> \\<Longrightarrow>invc2 (baldR l x r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>invc l; invc2 r\\<rbrakk> \\<Longrightarrow> invc2 (baldR l x r)", "by (induct l x r rule: baldR.induct) \n   (auto simp: invc_baliL paint_invc2 invc2I mkNode_def)"], ["", "lemma invh_combine:\n  \"\\<lbrakk> invh l; invh r; bheight l = bheight r \\<rbrakk>\n  \\<Longrightarrow> invh (combine l r) \\<and> bheight (combine l r) = bheight l\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>invh l; invh r; bheight l = bheight r\\<rbrakk>\n    \\<Longrightarrow> invh (combine l r) \\<and>\n                      bheight (combine l r) = bheight l", "by (induct l r rule: combine.induct)\n   (auto simp: invh_baldL_Black split: tree.splits tcolor.splits)"], ["", "lemma invc_combine:\n  assumes \"invc l\" \"invc r\"\n  shows \"color l = Black \\<Longrightarrow> color r = Black \\<Longrightarrow> invc (combine l r)\"\n         \"invc2 (combine l r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<lbrakk>color l = Black; color r = Black\\<rbrakk>\n     \\<Longrightarrow> invc (combine l r)) &&&\n    invc2 (combine l r)", "using assms"], ["proof (prove)\nusing this:\n  invc l\n  invc r\n\ngoal (1 subgoal):\n 1. (\\<lbrakk>color l = Black; color r = Black\\<rbrakk>\n     \\<Longrightarrow> invc (combine l r)) &&&\n    invc2 (combine l r)", "by (induct l r rule: combine.induct)\n   (auto simp: invc_baldL invc2I mkNode_def split: tree.splits tcolor.splits)"], ["", "lemma neq_LeafD: \"t \\<noteq> Leaf \\<Longrightarrow> \\<exists>l x c r. t = Node l (x,c) r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. t \\<noteq> \\<langle>\\<rangle> \\<Longrightarrow>\n    \\<exists>l x c r. t = \\<langle>l, (x, c), r\\<rangle>", "by(cases t) auto"], ["", "lemma del_invc_invh: \"invh t \\<Longrightarrow> invc t \\<Longrightarrow> invh (del x t) \\<and>\n   (color t = Red \\<and> bheight (del x t) = bheight t \\<and> invc (del x t) \\<or>\n    color t = Black \\<and> bheight (del x t) = bheight t - 1 \\<and> invc2 (del x t))\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>invh t; invc t\\<rbrakk>\n    \\<Longrightarrow> invh (del x t) \\<and>\n                      (color t = Red \\<and>\n                       bheight (del x t) = bheight t \\<and>\n                       invc (del x t) \\<or>\n                       color t = Black \\<and>\n                       bheight (del x t) = bheight t - 1 \\<and>\n                       invc2 (del x t))", "proof (induct x t rule: del.induct)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>invh \\<langle>\\<rangle>; invc \\<langle>\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> invh (del x \\<langle>\\<rangle>) \\<and>\n                         (color \\<langle>\\<rangle> = Red \\<and>\n                          bheight (del x \\<langle>\\<rangle>) =\n                          bheight \\<langle>\\<rangle> \\<and>\n                          invc (del x \\<langle>\\<rangle>) \\<or>\n                          color \\<langle>\\<rangle> = Black \\<and>\n                          bheight (del x \\<langle>\\<rangle>) =\n                          bheight \\<langle>\\<rangle> - 1 \\<and>\n                          invc2 (del x \\<langle>\\<rangle>))\n 2. \\<And>x l a b c uu_ r.\n       \\<lbrakk>\\<lbrakk>cmp x a = LT;\n                 l \\<noteq> \\<langle>\\<rangle> \\<and> color l = Black;\n                 invh l; invc l\\<rbrakk>\n                \\<Longrightarrow> invh (del x l) \\<and>\n                                  (color l = Red \\<and>\n                                   bheight (del x l) = bheight l \\<and>\n                                   invc (del x l) \\<or>\n                                   color l = Black \\<and>\n                                   bheight (del x l) = bheight l - 1 \\<and>\n                                   invc2 (del x l));\n        \\<lbrakk>cmp x a = LT;\n         \\<not> (l \\<noteq> \\<langle>\\<rangle> \\<and> color l = Black);\n         invh l; invc l\\<rbrakk>\n        \\<Longrightarrow> invh (del x l) \\<and>\n                          (color l = Red \\<and>\n                           bheight (del x l) = bheight l \\<and>\n                           invc (del x l) \\<or>\n                           color l = Black \\<and>\n                           bheight (del x l) = bheight l - 1 \\<and>\n                           invc2 (del x l));\n        \\<lbrakk>cmp x a = GT;\n         r \\<noteq> \\<langle>\\<rangle> \\<and> color r = Black; invh r;\n         invc r\\<rbrakk>\n        \\<Longrightarrow> invh (del x r) \\<and>\n                          (color r = Red \\<and>\n                           bheight (del x r) = bheight r \\<and>\n                           invc (del x r) \\<or>\n                           color r = Black \\<and>\n                           bheight (del x r) = bheight r - 1 \\<and>\n                           invc2 (del x r));\n        \\<lbrakk>cmp x a = GT;\n         \\<not> (r \\<noteq> \\<langle>\\<rangle> \\<and> color r = Black);\n         invh r; invc r\\<rbrakk>\n        \\<Longrightarrow> invh (del x r) \\<and>\n                          (color r = Red \\<and>\n                           bheight (del x r) = bheight r \\<and>\n                           invc (del x r) \\<or>\n                           color r = Black \\<and>\n                           bheight (del x r) = bheight r - 1 \\<and>\n                           invc2 (del x r));\n        invh \\<langle>l, ((a, b), c, uu_), r\\<rangle>;\n        invc \\<langle>l, ((a, b), c, uu_), r\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> invh\n                          (del x\n                            \\<langle>l, ((a, b), c, uu_), r\\<rangle>) \\<and>\n                         (color \\<langle>l, ((a, b), c, uu_), r\\<rangle> =\n                          Red \\<and>\n                          bheight\n                           (del x\n                             \\<langle>l, ((a, b), c, uu_), r\\<rangle>) =\n                          bheight\n                           \\<langle>l, ((a, b), c, uu_), r\\<rangle> \\<and>\n                          invc\n                           (del x\n                             \\<langle>l, ((a, b), c, uu_), r\\<rangle>) \\<or>\n                          color \\<langle>l, ((a, b), c, uu_), r\\<rangle> =\n                          Black \\<and>\n                          bheight\n                           (del x\n                             \\<langle>l, ((a, b), c, uu_), r\\<rangle>) =\n                          bheight \\<langle>l, ((a, b), c, uu_), r\\<rangle> -\n                          1 \\<and>\n                          invc2\n                           (del x \\<langle>l, ((a, b), c, uu_), r\\<rangle>))", "case (2 x _ y _ c)"], ["proof (state)\nthis:\n  \\<lbrakk>cmp x y = LT;\n   l_ \\<noteq> \\<langle>\\<rangle> \\<and> color l_ = Black; invh l_;\n   invc l_\\<rbrakk>\n  \\<Longrightarrow> invh (del x l_) \\<and>\n                    (color l_ = Red \\<and>\n                     bheight (del x l_) = bheight l_ \\<and>\n                     invc (del x l_) \\<or>\n                     color l_ = Black \\<and>\n                     bheight (del x l_) = bheight l_ - 1 \\<and>\n                     invc2 (del x l_))\n  \\<lbrakk>cmp x y = LT;\n   \\<not> (l_ \\<noteq> \\<langle>\\<rangle> \\<and> color l_ = Black); invh l_;\n   invc l_\\<rbrakk>\n  \\<Longrightarrow> invh (del x l_) \\<and>\n                    (color l_ = Red \\<and>\n                     bheight (del x l_) = bheight l_ \\<and>\n                     invc (del x l_) \\<or>\n                     color l_ = Black \\<and>\n                     bheight (del x l_) = bheight l_ - 1 \\<and>\n                     invc2 (del x l_))\n  \\<lbrakk>cmp x y = GT;\n   r_ \\<noteq> \\<langle>\\<rangle> \\<and> color r_ = Black; invh r_;\n   invc r_\\<rbrakk>\n  \\<Longrightarrow> invh (del x r_) \\<and>\n                    (color r_ = Red \\<and>\n                     bheight (del x r_) = bheight r_ \\<and>\n                     invc (del x r_) \\<or>\n                     color r_ = Black \\<and>\n                     bheight (del x r_) = bheight r_ - 1 \\<and>\n                     invc2 (del x r_))\n  \\<lbrakk>cmp x y = GT;\n   \\<not> (r_ \\<noteq> \\<langle>\\<rangle> \\<and> color r_ = Black); invh r_;\n   invc r_\\<rbrakk>\n  \\<Longrightarrow> invh (del x r_) \\<and>\n                    (color r_ = Red \\<and>\n                     bheight (del x r_) = bheight r_ \\<and>\n                     invc (del x r_) \\<or>\n                     color r_ = Black \\<and>\n                     bheight (del x r_) = bheight r_ - 1 \\<and>\n                     invc2 (del x r_))\n  invh \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>\n  invc \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>invh \\<langle>\\<rangle>; invc \\<langle>\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> invh (del x \\<langle>\\<rangle>) \\<and>\n                         (color \\<langle>\\<rangle> = Red \\<and>\n                          bheight (del x \\<langle>\\<rangle>) =\n                          bheight \\<langle>\\<rangle> \\<and>\n                          invc (del x \\<langle>\\<rangle>) \\<or>\n                          color \\<langle>\\<rangle> = Black \\<and>\n                          bheight (del x \\<langle>\\<rangle>) =\n                          bheight \\<langle>\\<rangle> - 1 \\<and>\n                          invc2 (del x \\<langle>\\<rangle>))\n 2. \\<And>x l a b c uu_ r.\n       \\<lbrakk>\\<lbrakk>cmp x a = LT;\n                 l \\<noteq> \\<langle>\\<rangle> \\<and> color l = Black;\n                 invh l; invc l\\<rbrakk>\n                \\<Longrightarrow> invh (del x l) \\<and>\n                                  (color l = Red \\<and>\n                                   bheight (del x l) = bheight l \\<and>\n                                   invc (del x l) \\<or>\n                                   color l = Black \\<and>\n                                   bheight (del x l) = bheight l - 1 \\<and>\n                                   invc2 (del x l));\n        \\<lbrakk>cmp x a = LT;\n         \\<not> (l \\<noteq> \\<langle>\\<rangle> \\<and> color l = Black);\n         invh l; invc l\\<rbrakk>\n        \\<Longrightarrow> invh (del x l) \\<and>\n                          (color l = Red \\<and>\n                           bheight (del x l) = bheight l \\<and>\n                           invc (del x l) \\<or>\n                           color l = Black \\<and>\n                           bheight (del x l) = bheight l - 1 \\<and>\n                           invc2 (del x l));\n        \\<lbrakk>cmp x a = GT;\n         r \\<noteq> \\<langle>\\<rangle> \\<and> color r = Black; invh r;\n         invc r\\<rbrakk>\n        \\<Longrightarrow> invh (del x r) \\<and>\n                          (color r = Red \\<and>\n                           bheight (del x r) = bheight r \\<and>\n                           invc (del x r) \\<or>\n                           color r = Black \\<and>\n                           bheight (del x r) = bheight r - 1 \\<and>\n                           invc2 (del x r));\n        \\<lbrakk>cmp x a = GT;\n         \\<not> (r \\<noteq> \\<langle>\\<rangle> \\<and> color r = Black);\n         invh r; invc r\\<rbrakk>\n        \\<Longrightarrow> invh (del x r) \\<and>\n                          (color r = Red \\<and>\n                           bheight (del x r) = bheight r \\<and>\n                           invc (del x r) \\<or>\n                           color r = Black \\<and>\n                           bheight (del x r) = bheight r - 1 \\<and>\n                           invc2 (del x r));\n        invh \\<langle>l, ((a, b), c, uu_), r\\<rangle>;\n        invc \\<langle>l, ((a, b), c, uu_), r\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> invh\n                          (del x\n                            \\<langle>l, ((a, b), c, uu_), r\\<rangle>) \\<and>\n                         (color \\<langle>l, ((a, b), c, uu_), r\\<rangle> =\n                          Red \\<and>\n                          bheight\n                           (del x\n                             \\<langle>l, ((a, b), c, uu_), r\\<rangle>) =\n                          bheight\n                           \\<langle>l, ((a, b), c, uu_), r\\<rangle> \\<and>\n                          invc\n                           (del x\n                             \\<langle>l, ((a, b), c, uu_), r\\<rangle>) \\<or>\n                          color \\<langle>l, ((a, b), c, uu_), r\\<rangle> =\n                          Black \\<and>\n                          bheight\n                           (del x\n                             \\<langle>l, ((a, b), c, uu_), r\\<rangle>) =\n                          bheight \\<langle>l, ((a, b), c, uu_), r\\<rangle> -\n                          1 \\<and>\n                          invc2\n                           (del x \\<langle>l, ((a, b), c, uu_), r\\<rangle>))", "have \"x = y \\<or> x < y \\<or> x > y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x = y \\<or> x < y \\<or> y < x", "by auto"], ["proof (state)\nthis:\n  x = y \\<or> x < y \\<or> y < x\n\ngoal (2 subgoals):\n 1. \\<And>x.\n       \\<lbrakk>invh \\<langle>\\<rangle>; invc \\<langle>\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> invh (del x \\<langle>\\<rangle>) \\<and>\n                         (color \\<langle>\\<rangle> = Red \\<and>\n                          bheight (del x \\<langle>\\<rangle>) =\n                          bheight \\<langle>\\<rangle> \\<and>\n                          invc (del x \\<langle>\\<rangle>) \\<or>\n                          color \\<langle>\\<rangle> = Black \\<and>\n                          bheight (del x \\<langle>\\<rangle>) =\n                          bheight \\<langle>\\<rangle> - 1 \\<and>\n                          invc2 (del x \\<langle>\\<rangle>))\n 2. \\<And>x l a b c uu_ r.\n       \\<lbrakk>\\<lbrakk>cmp x a = LT;\n                 l \\<noteq> \\<langle>\\<rangle> \\<and> color l = Black;\n                 invh l; invc l\\<rbrakk>\n                \\<Longrightarrow> invh (del x l) \\<and>\n                                  (color l = Red \\<and>\n                                   bheight (del x l) = bheight l \\<and>\n                                   invc (del x l) \\<or>\n                                   color l = Black \\<and>\n                                   bheight (del x l) = bheight l - 1 \\<and>\n                                   invc2 (del x l));\n        \\<lbrakk>cmp x a = LT;\n         \\<not> (l \\<noteq> \\<langle>\\<rangle> \\<and> color l = Black);\n         invh l; invc l\\<rbrakk>\n        \\<Longrightarrow> invh (del x l) \\<and>\n                          (color l = Red \\<and>\n                           bheight (del x l) = bheight l \\<and>\n                           invc (del x l) \\<or>\n                           color l = Black \\<and>\n                           bheight (del x l) = bheight l - 1 \\<and>\n                           invc2 (del x l));\n        \\<lbrakk>cmp x a = GT;\n         r \\<noteq> \\<langle>\\<rangle> \\<and> color r = Black; invh r;\n         invc r\\<rbrakk>\n        \\<Longrightarrow> invh (del x r) \\<and>\n                          (color r = Red \\<and>\n                           bheight (del x r) = bheight r \\<and>\n                           invc (del x r) \\<or>\n                           color r = Black \\<and>\n                           bheight (del x r) = bheight r - 1 \\<and>\n                           invc2 (del x r));\n        \\<lbrakk>cmp x a = GT;\n         \\<not> (r \\<noteq> \\<langle>\\<rangle> \\<and> color r = Black);\n         invh r; invc r\\<rbrakk>\n        \\<Longrightarrow> invh (del x r) \\<and>\n                          (color r = Red \\<and>\n                           bheight (del x r) = bheight r \\<and>\n                           invc (del x r) \\<or>\n                           color r = Black \\<and>\n                           bheight (del x r) = bheight r - 1 \\<and>\n                           invc2 (del x r));\n        invh \\<langle>l, ((a, b), c, uu_), r\\<rangle>;\n        invc \\<langle>l, ((a, b), c, uu_), r\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> invh\n                          (del x\n                            \\<langle>l, ((a, b), c, uu_), r\\<rangle>) \\<and>\n                         (color \\<langle>l, ((a, b), c, uu_), r\\<rangle> =\n                          Red \\<and>\n                          bheight\n                           (del x\n                             \\<langle>l, ((a, b), c, uu_), r\\<rangle>) =\n                          bheight\n                           \\<langle>l, ((a, b), c, uu_), r\\<rangle> \\<and>\n                          invc\n                           (del x\n                             \\<langle>l, ((a, b), c, uu_), r\\<rangle>) \\<or>\n                          color \\<langle>l, ((a, b), c, uu_), r\\<rangle> =\n                          Black \\<and>\n                          bheight\n                           (del x\n                             \\<langle>l, ((a, b), c, uu_), r\\<rangle>) =\n                          bheight \\<langle>l, ((a, b), c, uu_), r\\<rangle> -\n                          1 \\<and>\n                          invc2\n                           (del x \\<langle>l, ((a, b), c, uu_), r\\<rangle>))", "thus ?case"], ["proof (prove)\nusing this:\n  x = y \\<or> x < y \\<or> y < x\n\ngoal (1 subgoal):\n 1. invh (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) \\<and>\n    (color \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> = Red \\<and>\n     bheight (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) =\n     bheight \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> \\<and>\n     invc (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) \\<or>\n     color \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> = Black \\<and>\n     bheight (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) =\n     bheight \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> - 1 \\<and>\n     invc2 (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>))", "proof (elim disjE)"], ["proof (state)\ngoal (3 subgoals):\n 1. x = y \\<Longrightarrow>\n    invh (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) \\<and>\n    (color \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> = Red \\<and>\n     bheight (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) =\n     bheight \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> \\<and>\n     invc (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) \\<or>\n     color \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> = Black \\<and>\n     bheight (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) =\n     bheight \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> - 1 \\<and>\n     invc2 (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>))\n 2. x < y \\<Longrightarrow>\n    invh (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) \\<and>\n    (color \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> = Red \\<and>\n     bheight (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) =\n     bheight \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> \\<and>\n     invc (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) \\<or>\n     color \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> = Black \\<and>\n     bheight (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) =\n     bheight \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> - 1 \\<and>\n     invc2 (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>))\n 3. y < x \\<Longrightarrow>\n    invh (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) \\<and>\n    (color \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> = Red \\<and>\n     bheight (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) =\n     bheight \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> \\<and>\n     invc (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) \\<or>\n     color \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> = Black \\<and>\n     bheight (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) =\n     bheight \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> - 1 \\<and>\n     invc2 (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>))", "assume \"x = y\""], ["proof (state)\nthis:\n  x = y\n\ngoal (3 subgoals):\n 1. x = y \\<Longrightarrow>\n    invh (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) \\<and>\n    (color \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> = Red \\<and>\n     bheight (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) =\n     bheight \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> \\<and>\n     invc (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) \\<or>\n     color \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> = Black \\<and>\n     bheight (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) =\n     bheight \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> - 1 \\<and>\n     invc2 (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>))\n 2. x < y \\<Longrightarrow>\n    invh (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) \\<and>\n    (color \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> = Red \\<and>\n     bheight (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) =\n     bheight \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> \\<and>\n     invc (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) \\<or>\n     color \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> = Black \\<and>\n     bheight (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) =\n     bheight \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> - 1 \\<and>\n     invc2 (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>))\n 3. y < x \\<Longrightarrow>\n    invh (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) \\<and>\n    (color \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> = Red \\<and>\n     bheight (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) =\n     bheight \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> \\<and>\n     invc (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) \\<or>\n     color \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> = Black \\<and>\n     bheight (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) =\n     bheight \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> - 1 \\<and>\n     invc2 (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>))", "with 2"], ["proof (chain)\npicking this:\n  \\<lbrakk>cmp x y = LT;\n   l_ \\<noteq> \\<langle>\\<rangle> \\<and> color l_ = Black; invh l_;\n   invc l_\\<rbrakk>\n  \\<Longrightarrow> invh (del x l_) \\<and>\n                    (color l_ = Red \\<and>\n                     bheight (del x l_) = bheight l_ \\<and>\n                     invc (del x l_) \\<or>\n                     color l_ = Black \\<and>\n                     bheight (del x l_) = bheight l_ - 1 \\<and>\n                     invc2 (del x l_))\n  \\<lbrakk>cmp x y = LT;\n   \\<not> (l_ \\<noteq> \\<langle>\\<rangle> \\<and> color l_ = Black); invh l_;\n   invc l_\\<rbrakk>\n  \\<Longrightarrow> invh (del x l_) \\<and>\n                    (color l_ = Red \\<and>\n                     bheight (del x l_) = bheight l_ \\<and>\n                     invc (del x l_) \\<or>\n                     color l_ = Black \\<and>\n                     bheight (del x l_) = bheight l_ - 1 \\<and>\n                     invc2 (del x l_))\n  \\<lbrakk>cmp x y = GT;\n   r_ \\<noteq> \\<langle>\\<rangle> \\<and> color r_ = Black; invh r_;\n   invc r_\\<rbrakk>\n  \\<Longrightarrow> invh (del x r_) \\<and>\n                    (color r_ = Red \\<and>\n                     bheight (del x r_) = bheight r_ \\<and>\n                     invc (del x r_) \\<or>\n                     color r_ = Black \\<and>\n                     bheight (del x r_) = bheight r_ - 1 \\<and>\n                     invc2 (del x r_))\n  \\<lbrakk>cmp x y = GT;\n   \\<not> (r_ \\<noteq> \\<langle>\\<rangle> \\<and> color r_ = Black); invh r_;\n   invc r_\\<rbrakk>\n  \\<Longrightarrow> invh (del x r_) \\<and>\n                    (color r_ = Red \\<and>\n                     bheight (del x r_) = bheight r_ \\<and>\n                     invc (del x r_) \\<or>\n                     color r_ = Black \\<and>\n                     bheight (del x r_) = bheight r_ - 1 \\<and>\n                     invc2 (del x r_))\n  invh \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>\n  invc \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>\n  x = y", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>cmp x y = LT;\n   l_ \\<noteq> \\<langle>\\<rangle> \\<and> color l_ = Black; invh l_;\n   invc l_\\<rbrakk>\n  \\<Longrightarrow> invh (del x l_) \\<and>\n                    (color l_ = Red \\<and>\n                     bheight (del x l_) = bheight l_ \\<and>\n                     invc (del x l_) \\<or>\n                     color l_ = Black \\<and>\n                     bheight (del x l_) = bheight l_ - 1 \\<and>\n                     invc2 (del x l_))\n  \\<lbrakk>cmp x y = LT;\n   \\<not> (l_ \\<noteq> \\<langle>\\<rangle> \\<and> color l_ = Black); invh l_;\n   invc l_\\<rbrakk>\n  \\<Longrightarrow> invh (del x l_) \\<and>\n                    (color l_ = Red \\<and>\n                     bheight (del x l_) = bheight l_ \\<and>\n                     invc (del x l_) \\<or>\n                     color l_ = Black \\<and>\n                     bheight (del x l_) = bheight l_ - 1 \\<and>\n                     invc2 (del x l_))\n  \\<lbrakk>cmp x y = GT;\n   r_ \\<noteq> \\<langle>\\<rangle> \\<and> color r_ = Black; invh r_;\n   invc r_\\<rbrakk>\n  \\<Longrightarrow> invh (del x r_) \\<and>\n                    (color r_ = Red \\<and>\n                     bheight (del x r_) = bheight r_ \\<and>\n                     invc (del x r_) \\<or>\n                     color r_ = Black \\<and>\n                     bheight (del x r_) = bheight r_ - 1 \\<and>\n                     invc2 (del x r_))\n  \\<lbrakk>cmp x y = GT;\n   \\<not> (r_ \\<noteq> \\<langle>\\<rangle> \\<and> color r_ = Black); invh r_;\n   invc r_\\<rbrakk>\n  \\<Longrightarrow> invh (del x r_) \\<and>\n                    (color r_ = Red \\<and>\n                     bheight (del x r_) = bheight r_ \\<and>\n                     invc (del x r_) \\<or>\n                     color r_ = Black \\<and>\n                     bheight (del x r_) = bheight r_ - 1 \\<and>\n                     invc2 (del x r_))\n  invh \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>\n  invc \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>\n  x = y\n\ngoal (1 subgoal):\n 1. invh (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) \\<and>\n    (color \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> = Red \\<and>\n     bheight (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) =\n     bheight \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> \\<and>\n     invc (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) \\<or>\n     color \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> = Black \\<and>\n     bheight (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) =\n     bheight \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> - 1 \\<and>\n     invc2 (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>))", "by (cases c) (simp_all add: invh_combine invc_combine)"], ["proof (state)\nthis:\n  invh (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) \\<and>\n  (color \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> = Red \\<and>\n   bheight (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) =\n   bheight \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> \\<and>\n   invc (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) \\<or>\n   color \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> = Black \\<and>\n   bheight (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) =\n   bheight \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> - 1 \\<and>\n   invc2 (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>))\n\ngoal (2 subgoals):\n 1. x < y \\<Longrightarrow>\n    invh (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) \\<and>\n    (color \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> = Red \\<and>\n     bheight (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) =\n     bheight \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> \\<and>\n     invc (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) \\<or>\n     color \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> = Black \\<and>\n     bheight (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) =\n     bheight \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> - 1 \\<and>\n     invc2 (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>))\n 2. y < x \\<Longrightarrow>\n    invh (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) \\<and>\n    (color \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> = Red \\<and>\n     bheight (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) =\n     bheight \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> \\<and>\n     invc (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) \\<or>\n     color \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> = Black \\<and>\n     bheight (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) =\n     bheight \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> - 1 \\<and>\n     invc2 (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>))", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. x < y \\<Longrightarrow>\n    invh (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) \\<and>\n    (color \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> = Red \\<and>\n     bheight (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) =\n     bheight \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> \\<and>\n     invc (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) \\<or>\n     color \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> = Black \\<and>\n     bheight (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) =\n     bheight \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> - 1 \\<and>\n     invc2 (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>))\n 2. y < x \\<Longrightarrow>\n    invh (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) \\<and>\n    (color \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> = Red \\<and>\n     bheight (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) =\n     bheight \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> \\<and>\n     invc (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) \\<or>\n     color \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> = Black \\<and>\n     bheight (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) =\n     bheight \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> - 1 \\<and>\n     invc2 (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>))", "assume \"x < y\""], ["proof (state)\nthis:\n  x < y\n\ngoal (2 subgoals):\n 1. x < y \\<Longrightarrow>\n    invh (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) \\<and>\n    (color \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> = Red \\<and>\n     bheight (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) =\n     bheight \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> \\<and>\n     invc (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) \\<or>\n     color \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> = Black \\<and>\n     bheight (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) =\n     bheight \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> - 1 \\<and>\n     invc2 (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>))\n 2. y < x \\<Longrightarrow>\n    invh (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) \\<and>\n    (color \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> = Red \\<and>\n     bheight (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) =\n     bheight \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> \\<and>\n     invc (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) \\<or>\n     color \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> = Black \\<and>\n     bheight (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) =\n     bheight \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> - 1 \\<and>\n     invc2 (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>))", "with 2"], ["proof (chain)\npicking this:\n  \\<lbrakk>cmp x y = LT;\n   l_ \\<noteq> \\<langle>\\<rangle> \\<and> color l_ = Black; invh l_;\n   invc l_\\<rbrakk>\n  \\<Longrightarrow> invh (del x l_) \\<and>\n                    (color l_ = Red \\<and>\n                     bheight (del x l_) = bheight l_ \\<and>\n                     invc (del x l_) \\<or>\n                     color l_ = Black \\<and>\n                     bheight (del x l_) = bheight l_ - 1 \\<and>\n                     invc2 (del x l_))\n  \\<lbrakk>cmp x y = LT;\n   \\<not> (l_ \\<noteq> \\<langle>\\<rangle> \\<and> color l_ = Black); invh l_;\n   invc l_\\<rbrakk>\n  \\<Longrightarrow> invh (del x l_) \\<and>\n                    (color l_ = Red \\<and>\n                     bheight (del x l_) = bheight l_ \\<and>\n                     invc (del x l_) \\<or>\n                     color l_ = Black \\<and>\n                     bheight (del x l_) = bheight l_ - 1 \\<and>\n                     invc2 (del x l_))\n  \\<lbrakk>cmp x y = GT;\n   r_ \\<noteq> \\<langle>\\<rangle> \\<and> color r_ = Black; invh r_;\n   invc r_\\<rbrakk>\n  \\<Longrightarrow> invh (del x r_) \\<and>\n                    (color r_ = Red \\<and>\n                     bheight (del x r_) = bheight r_ \\<and>\n                     invc (del x r_) \\<or>\n                     color r_ = Black \\<and>\n                     bheight (del x r_) = bheight r_ - 1 \\<and>\n                     invc2 (del x r_))\n  \\<lbrakk>cmp x y = GT;\n   \\<not> (r_ \\<noteq> \\<langle>\\<rangle> \\<and> color r_ = Black); invh r_;\n   invc r_\\<rbrakk>\n  \\<Longrightarrow> invh (del x r_) \\<and>\n                    (color r_ = Red \\<and>\n                     bheight (del x r_) = bheight r_ \\<and>\n                     invc (del x r_) \\<or>\n                     color r_ = Black \\<and>\n                     bheight (del x r_) = bheight r_ - 1 \\<and>\n                     invc2 (del x r_))\n  invh \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>\n  invc \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>\n  x < y", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>cmp x y = LT;\n   l_ \\<noteq> \\<langle>\\<rangle> \\<and> color l_ = Black; invh l_;\n   invc l_\\<rbrakk>\n  \\<Longrightarrow> invh (del x l_) \\<and>\n                    (color l_ = Red \\<and>\n                     bheight (del x l_) = bheight l_ \\<and>\n                     invc (del x l_) \\<or>\n                     color l_ = Black \\<and>\n                     bheight (del x l_) = bheight l_ - 1 \\<and>\n                     invc2 (del x l_))\n  \\<lbrakk>cmp x y = LT;\n   \\<not> (l_ \\<noteq> \\<langle>\\<rangle> \\<and> color l_ = Black); invh l_;\n   invc l_\\<rbrakk>\n  \\<Longrightarrow> invh (del x l_) \\<and>\n                    (color l_ = Red \\<and>\n                     bheight (del x l_) = bheight l_ \\<and>\n                     invc (del x l_) \\<or>\n                     color l_ = Black \\<and>\n                     bheight (del x l_) = bheight l_ - 1 \\<and>\n                     invc2 (del x l_))\n  \\<lbrakk>cmp x y = GT;\n   r_ \\<noteq> \\<langle>\\<rangle> \\<and> color r_ = Black; invh r_;\n   invc r_\\<rbrakk>\n  \\<Longrightarrow> invh (del x r_) \\<and>\n                    (color r_ = Red \\<and>\n                     bheight (del x r_) = bheight r_ \\<and>\n                     invc (del x r_) \\<or>\n                     color r_ = Black \\<and>\n                     bheight (del x r_) = bheight r_ - 1 \\<and>\n                     invc2 (del x r_))\n  \\<lbrakk>cmp x y = GT;\n   \\<not> (r_ \\<noteq> \\<langle>\\<rangle> \\<and> color r_ = Black); invh r_;\n   invc r_\\<rbrakk>\n  \\<Longrightarrow> invh (del x r_) \\<and>\n                    (color r_ = Red \\<and>\n                     bheight (del x r_) = bheight r_ \\<and>\n                     invc (del x r_) \\<or>\n                     color r_ = Black \\<and>\n                     bheight (del x r_) = bheight r_ - 1 \\<and>\n                     invc2 (del x r_))\n  invh \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>\n  invc \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>\n  x < y\n\ngoal (1 subgoal):\n 1. invh (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) \\<and>\n    (color \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> = Red \\<and>\n     bheight (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) =\n     bheight \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> \\<and>\n     invc (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) \\<or>\n     color \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> = Black \\<and>\n     bheight (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) =\n     bheight \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> - 1 \\<and>\n     invc2 (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>))", "by(cases c)\n        (auto \n          simp: invh_baldL_invc invc_baldL invc2_baldL mkNode_def \n          dest: neq_LeafD)"], ["proof (state)\nthis:\n  invh (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) \\<and>\n  (color \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> = Red \\<and>\n   bheight (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) =\n   bheight \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> \\<and>\n   invc (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) \\<or>\n   color \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> = Black \\<and>\n   bheight (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) =\n   bheight \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> - 1 \\<and>\n   invc2 (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>))\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow>\n    invh (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) \\<and>\n    (color \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> = Red \\<and>\n     bheight (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) =\n     bheight \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> \\<and>\n     invc (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) \\<or>\n     color \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> = Black \\<and>\n     bheight (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) =\n     bheight \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> - 1 \\<and>\n     invc2 (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>))", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow>\n    invh (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) \\<and>\n    (color \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> = Red \\<and>\n     bheight (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) =\n     bheight \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> \\<and>\n     invc (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) \\<or>\n     color \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> = Black \\<and>\n     bheight (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) =\n     bheight \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> - 1 \\<and>\n     invc2 (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>))", "assume \"y < x\""], ["proof (state)\nthis:\n  y < x\n\ngoal (1 subgoal):\n 1. y < x \\<Longrightarrow>\n    invh (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) \\<and>\n    (color \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> = Red \\<and>\n     bheight (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) =\n     bheight \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> \\<and>\n     invc (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) \\<or>\n     color \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> = Black \\<and>\n     bheight (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) =\n     bheight \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> - 1 \\<and>\n     invc2 (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>))", "with 2"], ["proof (chain)\npicking this:\n  \\<lbrakk>cmp x y = LT;\n   l_ \\<noteq> \\<langle>\\<rangle> \\<and> color l_ = Black; invh l_;\n   invc l_\\<rbrakk>\n  \\<Longrightarrow> invh (del x l_) \\<and>\n                    (color l_ = Red \\<and>\n                     bheight (del x l_) = bheight l_ \\<and>\n                     invc (del x l_) \\<or>\n                     color l_ = Black \\<and>\n                     bheight (del x l_) = bheight l_ - 1 \\<and>\n                     invc2 (del x l_))\n  \\<lbrakk>cmp x y = LT;\n   \\<not> (l_ \\<noteq> \\<langle>\\<rangle> \\<and> color l_ = Black); invh l_;\n   invc l_\\<rbrakk>\n  \\<Longrightarrow> invh (del x l_) \\<and>\n                    (color l_ = Red \\<and>\n                     bheight (del x l_) = bheight l_ \\<and>\n                     invc (del x l_) \\<or>\n                     color l_ = Black \\<and>\n                     bheight (del x l_) = bheight l_ - 1 \\<and>\n                     invc2 (del x l_))\n  \\<lbrakk>cmp x y = GT;\n   r_ \\<noteq> \\<langle>\\<rangle> \\<and> color r_ = Black; invh r_;\n   invc r_\\<rbrakk>\n  \\<Longrightarrow> invh (del x r_) \\<and>\n                    (color r_ = Red \\<and>\n                     bheight (del x r_) = bheight r_ \\<and>\n                     invc (del x r_) \\<or>\n                     color r_ = Black \\<and>\n                     bheight (del x r_) = bheight r_ - 1 \\<and>\n                     invc2 (del x r_))\n  \\<lbrakk>cmp x y = GT;\n   \\<not> (r_ \\<noteq> \\<langle>\\<rangle> \\<and> color r_ = Black); invh r_;\n   invc r_\\<rbrakk>\n  \\<Longrightarrow> invh (del x r_) \\<and>\n                    (color r_ = Red \\<and>\n                     bheight (del x r_) = bheight r_ \\<and>\n                     invc (del x r_) \\<or>\n                     color r_ = Black \\<and>\n                     bheight (del x r_) = bheight r_ - 1 \\<and>\n                     invc2 (del x r_))\n  invh \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>\n  invc \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>\n  y < x", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<lbrakk>cmp x y = LT;\n   l_ \\<noteq> \\<langle>\\<rangle> \\<and> color l_ = Black; invh l_;\n   invc l_\\<rbrakk>\n  \\<Longrightarrow> invh (del x l_) \\<and>\n                    (color l_ = Red \\<and>\n                     bheight (del x l_) = bheight l_ \\<and>\n                     invc (del x l_) \\<or>\n                     color l_ = Black \\<and>\n                     bheight (del x l_) = bheight l_ - 1 \\<and>\n                     invc2 (del x l_))\n  \\<lbrakk>cmp x y = LT;\n   \\<not> (l_ \\<noteq> \\<langle>\\<rangle> \\<and> color l_ = Black); invh l_;\n   invc l_\\<rbrakk>\n  \\<Longrightarrow> invh (del x l_) \\<and>\n                    (color l_ = Red \\<and>\n                     bheight (del x l_) = bheight l_ \\<and>\n                     invc (del x l_) \\<or>\n                     color l_ = Black \\<and>\n                     bheight (del x l_) = bheight l_ - 1 \\<and>\n                     invc2 (del x l_))\n  \\<lbrakk>cmp x y = GT;\n   r_ \\<noteq> \\<langle>\\<rangle> \\<and> color r_ = Black; invh r_;\n   invc r_\\<rbrakk>\n  \\<Longrightarrow> invh (del x r_) \\<and>\n                    (color r_ = Red \\<and>\n                     bheight (del x r_) = bheight r_ \\<and>\n                     invc (del x r_) \\<or>\n                     color r_ = Black \\<and>\n                     bheight (del x r_) = bheight r_ - 1 \\<and>\n                     invc2 (del x r_))\n  \\<lbrakk>cmp x y = GT;\n   \\<not> (r_ \\<noteq> \\<langle>\\<rangle> \\<and> color r_ = Black); invh r_;\n   invc r_\\<rbrakk>\n  \\<Longrightarrow> invh (del x r_) \\<and>\n                    (color r_ = Red \\<and>\n                     bheight (del x r_) = bheight r_ \\<and>\n                     invc (del x r_) \\<or>\n                     color r_ = Black \\<and>\n                     bheight (del x r_) = bheight r_ - 1 \\<and>\n                     invc2 (del x r_))\n  invh \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>\n  invc \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>\n  y < x\n\ngoal (1 subgoal):\n 1. invh (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) \\<and>\n    (color \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> = Red \\<and>\n     bheight (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) =\n     bheight \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> \\<and>\n     invc (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) \\<or>\n     color \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> = Black \\<and>\n     bheight (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) =\n     bheight \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> - 1 \\<and>\n     invc2 (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>))", "by(cases c)\n        (auto \n          simp: invh_baldR_invc invc_baldR invc2_baldR mkNode_def \n          dest: neq_LeafD)"], ["proof (state)\nthis:\n  invh (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) \\<and>\n  (color \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> = Red \\<and>\n   bheight (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) =\n   bheight \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> \\<and>\n   invc (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) \\<or>\n   color \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> = Black \\<and>\n   bheight (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) =\n   bheight \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> - 1 \\<and>\n   invc2 (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>))\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  invh (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) \\<and>\n  (color \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> = Red \\<and>\n   bheight (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) =\n   bheight \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> \\<and>\n   invc (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) \\<or>\n   color \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> = Black \\<and>\n   bheight (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>) =\n   bheight \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle> - 1 \\<and>\n   invc2 (del x \\<langle>l_, ((y, b_), c, uu_), r_\\<rangle>))\n\ngoal (1 subgoal):\n 1. \\<And>x.\n       \\<lbrakk>invh \\<langle>\\<rangle>; invc \\<langle>\\<rangle>\\<rbrakk>\n       \\<Longrightarrow> invh (del x \\<langle>\\<rangle>) \\<and>\n                         (color \\<langle>\\<rangle> = Red \\<and>\n                          bheight (del x \\<langle>\\<rangle>) =\n                          bheight \\<langle>\\<rangle> \\<and>\n                          invc (del x \\<langle>\\<rangle>) \\<or>\n                          color \\<langle>\\<rangle> = Black \\<and>\n                          bheight (del x \\<langle>\\<rangle>) =\n                          bheight \\<langle>\\<rangle> - 1 \\<and>\n                          invc2 (del x \\<langle>\\<rangle>))", "qed auto"], ["", "lemma invpst_baldR: \"invpst l \\<Longrightarrow> invpst r \\<Longrightarrow> invpst (baldR l a r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>invpst l; invpst r\\<rbrakk>\n    \\<Longrightarrow> invpst (baldR l a r)", "by (cases \"(l,a,r)\" rule: baldR.cases) (auto simp: invpst_baliL)"], ["", "lemma invpst_baldL: \"invpst l \\<Longrightarrow> invpst r \\<Longrightarrow> invpst (baldL l a r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>invpst l; invpst r\\<rbrakk>\n    \\<Longrightarrow> invpst (baldL l a r)", "by (cases \"(l,a,r)\" rule: baldL.cases) (auto simp: invpst_baliR)"], ["", "lemma invpst_combine: \"invpst l \\<Longrightarrow> invpst r \\<Longrightarrow> invpst (combine l r)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>invpst l; invpst r\\<rbrakk>\n    \\<Longrightarrow> invpst (combine l r)", "by(induction l r rule: combine.induct)\n  (auto split: tree.splits tcolor.splits simp: invpst_baldR invpst_baldL)"], ["", "lemma invpst_del: \"invpst t \\<Longrightarrow> invpst (del x t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. invpst t \\<Longrightarrow> invpst (del x t)", "by(induct x t rule: del.induct)\n  (auto simp: invpst_baldR invpst_baldL invpst_combine)"], ["", "theorem rbt_delete: \"rbt t \\<Longrightarrow> rbt (delete k t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rbt t \\<Longrightarrow> rbt (delete k t)", "apply (clarsimp simp: delete_def rbt_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>invc t; invh t; invpst t; color t = Black\\<rbrakk>\n    \\<Longrightarrow> invc (paint Black (del k t)) \\<and>\n                      invh (paint Black (del k t)) \\<and>\n                      invpst (del k t) \\<and>\n                      color (paint Black (del k t)) = Black", "apply (frule (1) del_invc_invh[where x=k])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>invc t; invh t; invpst t; color t = Black;\n     invh (del k t) \\<and>\n     (color t = Red \\<and>\n      bheight (del k t) = bheight t \\<and> invc (del k t) \\<or>\n      color t = Black \\<and>\n      bheight (del k t) = bheight t - 1 \\<and> invc2 (del k t))\\<rbrakk>\n    \\<Longrightarrow> invc (paint Black (del k t)) \\<and>\n                      invh (paint Black (del k t)) \\<and>\n                      invpst (del k t) \\<and>\n                      color (paint Black (del k t)) = Black", "apply (auto simp: invc_paint_Black invh_paint color_paint_Black invpst_del)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma rbt_getmin_ismin: \n  \"rbt t \\<Longrightarrow> t\\<noteq>Leaf \\<Longrightarrow> is_min2 (pst_getmin t) (set_tree t)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>rbt t; t \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> is_min2 (pst_getmin t) (Tree2.set_tree t)", "unfolding rbt_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>invc t \\<and> invh t \\<and> invpst t \\<and> color t = Black;\n     t \\<noteq> \\<langle>\\<rangle>\\<rbrakk>\n    \\<Longrightarrow> is_min2 (pst_getmin t) (Tree2.set_tree t)", "by (simp add: pst_getmin_ismin)"], ["", "definition \"rbt_is_empty t \\<equiv> t = Leaf\""], ["", "lemma rbt_is_empty: \"rbt_is_empty t \\<longleftrightarrow> inorder t = []\""], ["proof (prove)\ngoal (1 subgoal):\n 1. rbt_is_empty t = (Tree2.inorder t = [])", "by (cases t) (auto simp: rbt_is_empty_def)"], ["", "definition empty where \"empty = Leaf\""], ["", "subsection \\<open>Overall Correctness\\<close>"], ["", "interpretation PM: PrioMap_by_Ordered\nwhere empty = empty and lookup = lookup and update = update and delete = delete\nand inorder = inorder and inv = \"rbt\" and is_empty = rbt_is_empty \nand getmin = pst_getmin"], ["proof (prove)\ngoal (1 subgoal):\n 1. PrioMap_by_Ordered PST_RBT.empty update delete Tree2.inorder rbt lookup\n     rbt_is_empty pst_getmin", "apply standard"], ["proof (prove)\ngoal (9 subgoals):\n 1. Tree2.inorder PST_RBT.empty = []\n 2. \\<And>t a.\n       rbt t \\<and> sorted1 (Tree2.inorder t) \\<Longrightarrow>\n       lookup t a = AList_Upd_Del.map_of (Tree2.inorder t) a\n 3. \\<And>t a b.\n       rbt t \\<and> sorted1 (Tree2.inorder t) \\<Longrightarrow>\n       Tree2.inorder (update a b t) = upd_list a b (Tree2.inorder t)\n 4. \\<And>t a.\n       rbt t \\<and> sorted1 (Tree2.inorder t) \\<Longrightarrow>\n       Tree2.inorder (delete a t) =\n       AList_Upd_Del.del_list a (Tree2.inorder t)\n 5. rbt PST_RBT.empty\n 6. \\<And>t a b.\n       rbt t \\<and> sorted1 (Tree2.inorder t) \\<Longrightarrow>\n       rbt (update a b t)\n 7. \\<And>t a.\n       rbt t \\<and> sorted1 (Tree2.inorder t) \\<Longrightarrow>\n       rbt (delete a t)\n 8. \\<And>t.\n       \\<lbrakk>rbt t; sorted1 (Tree2.inorder t)\\<rbrakk>\n       \\<Longrightarrow> rbt_is_empty t = (Tree2.inorder t = [])\n 9. \\<And>t a b.\n       \\<lbrakk>rbt t; sorted1 (Tree2.inorder t);\n        Tree2.inorder t \\<noteq> []; pst_getmin t = (a, b)\\<rbrakk>\n       \\<Longrightarrow> is_min2 (a, b) (set (Tree2.inorder t))", "apply (auto simp: lookup_map_of inorder_update inorder_delete rbt_update \n                  rbt_delete rbt_Leaf rbt_is_empty empty_def \n            dest: rbt_getmin_ismin)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "end"]]}