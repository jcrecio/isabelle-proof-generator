{"file_name": "/home/qj213/afp-2021-10-22/thys/Consensus_Refined/Two_Steps.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Consensus_Refined", "problem_names": ["lemma two_phase_zero [simp]: \"two_phase 0 = 0\"", "lemma two_step_zero [simp]: \"two_step 0 = 0\"", "lemma two_phase_step: \"(two_phase r * 2) + two_step r = r\"", "lemma two_step_phase_Suc:\n  \"two_step r = 0 \\<Longrightarrow> two_phase (Suc r) = two_phase r\"\n  \"two_step r = 0 \\<Longrightarrow> two_step (Suc r) = 1\"\n  \"two_step r = 0 \\<Longrightarrow> two_phase (Suc (Suc r)) = Suc (two_phase r)\"\n  \"two_step r = (Suc 0) \\<Longrightarrow> two_phase (Suc r) = Suc (two_phase r)\"\n  \"two_step r = (Suc 0) \\<Longrightarrow> two_step (Suc r) = 0\""], "translations": [["", "lemma two_phase_zero [simp]: \"two_phase 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. two_phase 0 = 0", "by (simp add: two_phase_def)"], ["", "lemma two_step_zero [simp]: \"two_step 0 = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. two_step 0 = 0", "by (simp add: two_step_def)"], ["", "lemma two_phase_step: \"(two_phase r * 2) + two_step r = r\""], ["proof (prove)\ngoal (1 subgoal):\n 1. two_phase r * 2 + two_step r = r", "by (auto simp add: two_phase_def two_step_def)"], ["", "lemma two_step_phase_Suc:\n  \"two_step r = 0 \\<Longrightarrow> two_phase (Suc r) = two_phase r\"\n  \"two_step r = 0 \\<Longrightarrow> two_step (Suc r) = 1\"\n  \"two_step r = 0 \\<Longrightarrow> two_phase (Suc (Suc r)) = Suc (two_phase r)\"\n  \"two_step r = (Suc 0) \\<Longrightarrow> two_phase (Suc r) = Suc (two_phase r)\"\n  \"two_step r = (Suc 0) \\<Longrightarrow> two_step (Suc r) = 0\""], ["proof (prove)\ngoal (1 subgoal):\n 1. ((two_step r = 0 \\<Longrightarrow> two_phase (Suc r) = two_phase r) &&&\n     (two_step r = 0 \\<Longrightarrow> two_step (Suc r) = 1)) &&&\n    (two_step r = 0 \\<Longrightarrow>\n     two_phase (Suc (Suc r)) = Suc (two_phase r)) &&&\n    (two_step r = Suc 0 \\<Longrightarrow>\n     two_phase (Suc r) = Suc (two_phase r)) &&&\n    (two_step r = Suc 0 \\<Longrightarrow> two_step (Suc r) = 0)", "by(simp_all add: two_step_def two_phase_def mod_Suc div_Suc)"], ["", "end"]]}