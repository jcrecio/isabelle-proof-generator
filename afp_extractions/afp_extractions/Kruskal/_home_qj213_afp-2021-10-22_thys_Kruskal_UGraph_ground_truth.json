{"file_name": "/home/qj213/afp-2021-10-22/thys/Kruskal/UGraph.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/Kruskal", "problem_names": ["lemma [simp,intro!]: \"epath E u [] u\"", "lemma epath_subset_E: \"epath E u p v \\<Longrightarrow> set p \\<subseteq> E\"", "lemma path_append_conv[simp]: \"epath E u (p@q) v \\<longleftrightarrow> (\\<exists>w. epath E u p w \\<and> epath E w q v)\"", "lemma epath_rev[simp]: \"epath E y (rev p) x = epath E x p y\"", "lemma \"epath E x p y \\<Longrightarrow> \\<exists>p. epath E y p x\"", "lemma epath_mono: \"E \\<subseteq> E' \\<Longrightarrow> epath E u p v \\<Longrightarrow> epath E' u p v\"", "lemma epath_restrict: \"set p \\<subseteq> I \\<Longrightarrow> epath E u p v \\<Longrightarrow> epath (E\\<inter>I) u p v\"", "lemma assumes \"A\\<subseteq>A'\" \"~ epath A u p v\" \"epath A' u p v\"\n  shows epath_diff_edge: \"(\\<exists>e. e\\<in>set p - A)\"", "lemma epath_restrict': \"epath (insert e E) u p v \\<Longrightarrow>  e\\<notin>set p \\<Longrightarrow> epath E u p v\"", "lemma epath_not_direct:\n  assumes ep: \"epath E u p v\" and unv: \"u \\<noteq> v\"\n    and edge_notin: \"Upair u v \\<notin> E\" \n  shows \"length p \\<ge> 2\"", "lemma epath_decompose:\n  assumes e: \"epath G v p v'\"\n    and elem :\"Upair a b \\<in> set p\"\n  shows  \"\\<exists> u u' p' p'' . u \\<in> {a, b} \\<and> u' \\<in> {a, b} \\<and> epath G v p' u \\<and> epath G u' p'' v' \\<and>\n          length p' < length p \\<and> length p'' < length p\"", "lemma epath_decompose':\n  assumes e: \"epath G v p v'\"\n    and elem :\"Upair a b \\<in> set p\"\n  shows  \"\\<exists> u u' p' p'' . Upair a b = Upair u u' \\<and> epath G v p' u \\<and> epath G u' p'' v' \\<and>\n          length p' < length p \\<and> length p'' < length p\"", "lemma epath_split_distinct:\n  assumes \"epath G v p v'\"\n  assumes \"Upair a b \\<in> set p\"\n  shows \"(\\<exists>p' p'' u u'.\n            epath G v p' u \\<and> epath G u' p'' v' \\<and>\n            length p' < length p \\<and> length p'' < length p \\<and>\n            (u \\<in> {a, b} \\<and> u' \\<in> {a, b}) \\<and>\n            Upair a b \\<notin> set p' \\<and> Upair a b \\<notin> set p'')\"", "lemma epath_to_depath: \"set p \\<subseteq> I \\<Longrightarrow> epath E u p v \\<Longrightarrow> \\<exists>dp. depath E u dp v \\<and> set dp \\<subseteq> I\"", "lemma epath_to_depath': \"epath E u p v \\<Longrightarrow> \\<exists>dp. depath E u dp v\"", "lemma uconnectedempty: \"uconnected {} = {(a,a)|a. True}\"", "lemma uconnected_refl: \"refl (uconnected E)\"", "lemma uconnected_sym: \"sym (uconnected E)\"", "lemma uconnected_trans: \"trans (uconnected E)\"", "lemma uconnected_symI: \"(u,v) \\<in> uconnected E \\<Longrightarrow> (v,u) \\<in> uconnected E\"", "lemma \"equiv UNIV (uconnected E)\"", "lemma uconnected_refcl: \"(uconnected E)\\<^sup>* = (uconnected E)\\<^sup>=\"", "lemma uconnected_transcl: \"(uconnected E)\\<^sup>* = uconnected E\"", "lemma uconnected_mono: \"A\\<subseteq>A' \\<Longrightarrow> uconnected A \\<subseteq> uconnected A'\"", "lemma findaugmenting_edge: assumes \"epath E1 u p v\"\n  and \"\\<not>(\\<exists>p. epath E2 u p v)\"\nshows \"\\<exists>a b. (a,b) \\<notin> uconnected E2 \\<and> Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1\"", "lemma forest_mono: \"Y \\<subseteq> X \\<Longrightarrow> forest X \\<Longrightarrow> forest Y\"", "lemma forrest2_E: assumes \"(u,v) \\<in> uconnected E\"\n  and \"Upair u v \\<notin> E\"                    \n  and \"u \\<noteq> v\" \nshows \"~ forest (insert (Upair u v) E)\"", "lemma insert_stays_forest_means_not_connected: assumes \"forest (insert (Upair u v) E)\"\n  and \"(Upair u v) \\<notin> E\"\n  and \"u \\<noteq> v\"\nshows \"~ (u,v) \\<in> uconnected E\"", "lemma epath_singleton: \"epath F a [e] b \\<Longrightarrow> e = Upair a b\"", "lemma forest_alt1: \n  assumes \" Upair a b \\<in> F\" \"forest F\" \"\\<And>e. e\\<in>F \\<Longrightarrow> proper_uprod e\"\n  shows \"(a,b) \\<notin>  uconnected (F - {Upair a b})\"", "lemma forest_alt2: \n  assumes \"\\<And>e. e\\<in>F \\<Longrightarrow> proper_uprod e\"\n    and \"\\<And>a b. Upair a b \\<in> F \\<Longrightarrow> (a,b) \\<notin>  uconnected (F - {Upair a b})\"\n  shows \"forest F\"", "lemma forest_alt:\n  assumes \"\\<And>e. e\\<in>F \\<Longrightarrow> proper_uprod e\"\n  shows \"forest F \\<longleftrightarrow> (\\<forall>a b. Upair a b \\<in> F \\<longrightarrow> (a,b) \\<notin>  uconnected (F - {Upair a b})) \"", "lemma augment_forest_overedges: \n  assumes \"F\\<subseteq>E\" \"forest F\" \"(Upair u v) \\<in> E\" \"(u,v) \\<notin> uconnected F\"\n    and notsame: \"u\\<noteq>v\"\n  shows \"forest (insert (Upair u v) F)\"", "lemma set_uprod_nonemptyY[simp]: \"set_uprod x  \\<noteq> {}\"", "lemma equiv_unconnected_on: \"equiv V (uconnected_on E' V)\"", "lemma uconnectedV_refl: \"E'\\<subseteq>E \\<Longrightarrow> refl_on verts (uconnectedV E')\"", "lemma uconnectedV_trans: \"trans (uconnectedV E')\"", "lemma uconnectedV_sym: \"sym (uconnectedV E')\"", "lemma equiv_vert_uconnected: \"equiv verts (uconnectedV E')\"", "lemma uconnectedV_tracl: \"(uconnectedV F)\\<^sup>* = (uconnectedV F)\\<^sup>=\"", "lemma uconnectedV_cl: \"(uconnectedV F)\\<^sup>+ = (uconnectedV F)\"", "lemma uconnectedV_Restrcl: \"Restr ((uconnectedV F)\\<^sup>*) verts = (uconnectedV F)\"", "lemma restr_ucon: \"F \\<subseteq> E \\<Longrightarrow> uconnected F = uconnectedV F \\<union> Id\"", "lemma relI:\n  assumes \"\\<And>a b. (a,b) \\<in> F \\<Longrightarrow> (a,b) \\<in> G\"\n    and \"\\<And>a b. (a,b) \\<in> G \\<Longrightarrow> (a,b) \\<in> F\" shows \"F=G\"", "lemma in_per_union: \"u \\<in> {x, y} \\<Longrightarrow>  u' \\<in> {x, y} \\<Longrightarrow>  x\\<in>V \\<Longrightarrow> y\\<in>V \\<Longrightarrow>\n    refl_on V R \\<Longrightarrow> part_equiv R  \\<Longrightarrow> (u, u') \\<in> per_union R x y\"", "lemma uconnectedV_mono: \" (a,b)\\<in>uconnectedV F \\<Longrightarrow> F\\<subseteq>F' \\<Longrightarrow> (a,b)\\<in>uconnectedV F'\"", "lemma per_union_subs: \"x \\<in> S \\<Longrightarrow> y\\<in>S \\<Longrightarrow> R\\<subseteq>S \\<times> S \\<Longrightarrow> per_union R x y \\<subseteq> S \\<times> S\"", "lemma insert_uconnectedV_per: \n  assumes  \"x\\<noteq>y\" and inV: \"x\\<in>verts\" \"y\\<in>verts\" and subE: \"F\\<subseteq>E\"\n  shows \"uconnectedV (insert (Upair x y) F) = per_union (uconnectedV F) x y\"\n    (is \"uconnectedV ?F' = per_union ?uf x y\")", "lemma epath_filter_selfloop: \"epath (insert (Upair x x) F) a p b \\<Longrightarrow> \\<exists>p. epath F a p b\"", "lemma uconnectedV_insert_selfloop: \"x\\<in>verts \\<Longrightarrow> uconnectedV (insert (Upair x x) F) = uconnectedV F\"", "lemma equiv_selfloop_per_union_id: \"equiv S F \\<Longrightarrow> x\\<in>S \\<Longrightarrow> per_union F x x = F\"", "lemma insert_uconnectedV_per_eq: \n  assumes    inV: \"x\\<in>verts\"   and subE: \"F\\<subseteq>E\"\n  shows \"uconnectedV (insert (Upair x x) F) = per_union (uconnectedV F) x x\"", "lemma insert_uconnectedV_per': \n  assumes  inV: \"x\\<in>verts\" \"y\\<in>verts\" and subE: \"F\\<subseteq>E\"\n  shows \"uconnectedV (insert (Upair x y) F) = per_union (uconnectedV F) x y\""], "translations": [["", "lemma [simp,intro!]: \"epath E u [] u\""], ["proof (prove)\ngoal (1 subgoal):\n 1. epath E u [] u", "by simp"], ["", "lemma epath_subset_E: \"epath E u p v \\<Longrightarrow> set p \\<subseteq> E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. epath E u p v \\<Longrightarrow> set p \\<subseteq> E", "apply(induct p arbitrary: u)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>u. epath E u [] v \\<Longrightarrow> set [] \\<subseteq> E\n 2. \\<And>a p u.\n       \\<lbrakk>\\<And>u.\n                   epath E u p v \\<Longrightarrow> set p \\<subseteq> E;\n        epath E u (a # p) v\\<rbrakk>\n       \\<Longrightarrow> set (a # p) \\<subseteq> E", "by auto"], ["", "lemma path_append_conv[simp]: \"epath E u (p@q) v \\<longleftrightarrow> (\\<exists>w. epath E u p w \\<and> epath E w q v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. epath E u (p @ q) v = (\\<exists>w. epath E u p w \\<and> epath E w q v)", "apply(induct p arbitrary: u)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>u.\n       epath E u ([] @ q) v =\n       (\\<exists>w. epath E u [] w \\<and> epath E w q v)\n 2. \\<And>a p u.\n       (\\<And>u.\n           epath E u (p @ q) v =\n           (\\<exists>w.\n               epath E u p w \\<and> epath E w q v)) \\<Longrightarrow>\n       epath E u ((a # p) @ q) v =\n       (\\<exists>w. epath E u (a # p) w \\<and> epath E w q v)", "by auto"], ["", "lemma epath_rev[simp]: \"epath E y (rev p) x = epath E x p y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. epath E y (rev p) x = epath E x p y", "apply(induct p arbitrary: x)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x. epath E y (rev []) x = epath E x [] y\n 2. \\<And>a p x.\n       (\\<And>x. epath E y (rev p) x = epath E x p y) \\<Longrightarrow>\n       epath E y (rev (a # p)) x = epath E x (a # p) y", "by auto"], ["", "lemma \"epath E x p y \\<Longrightarrow> \\<exists>p. epath E y p x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. epath E x p y \\<Longrightarrow> \\<exists>p. epath E y p x", "apply(rule exI[where x=\"rev p\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. epath E x p y \\<Longrightarrow> epath E y (rev p) x", "by simp"], ["", "lemma epath_mono: \"E \\<subseteq> E' \\<Longrightarrow> epath E u p v \\<Longrightarrow> epath E' u p v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>E \\<subseteq> E'; epath E u p v\\<rbrakk>\n    \\<Longrightarrow> epath E' u p v", "apply(induct p arbitrary: u)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>u.\n       \\<lbrakk>E \\<subseteq> E'; epath E u [] v\\<rbrakk>\n       \\<Longrightarrow> epath E' u [] v\n 2. \\<And>a p u.\n       \\<lbrakk>\\<And>u.\n                   \\<lbrakk>E \\<subseteq> E'; epath E u p v\\<rbrakk>\n                   \\<Longrightarrow> epath E' u p v;\n        E \\<subseteq> E'; epath E u (a # p) v\\<rbrakk>\n       \\<Longrightarrow> epath E' u (a # p) v", "by auto"], ["", "lemma epath_restrict: \"set p \\<subseteq> I \\<Longrightarrow> epath E u p v \\<Longrightarrow> epath (E\\<inter>I) u p v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>set p \\<subseteq> I; epath E u p v\\<rbrakk>\n    \\<Longrightarrow> epath (E \\<inter> I) u p v", "apply(induct p arbitrary: u)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>u.\n       \\<lbrakk>set [] \\<subseteq> I; epath E u [] v\\<rbrakk>\n       \\<Longrightarrow> epath (E \\<inter> I) u [] v\n 2. \\<And>a p u.\n       \\<lbrakk>\\<And>u.\n                   \\<lbrakk>set p \\<subseteq> I; epath E u p v\\<rbrakk>\n                   \\<Longrightarrow> epath (E \\<inter> I) u p v;\n        set (a # p) \\<subseteq> I; epath E u (a # p) v\\<rbrakk>\n       \\<Longrightarrow> epath (E \\<inter> I) u (a # p) v", "by auto"], ["", "lemma assumes \"A\\<subseteq>A'\" \"~ epath A u p v\" \"epath A' u p v\"\n  shows epath_diff_edge: \"(\\<exists>e. e\\<in>set p - A)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>e. e \\<in> set p - A", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<nexists>e. e \\<in> set p - A \\<Longrightarrow> False", "assume \"\\<not>(\\<exists>e. e \\<in> set p - A)\""], ["proof (state)\nthis:\n  \\<nexists>e. e \\<in> set p - A\n\ngoal (1 subgoal):\n 1. \\<nexists>e. e \\<in> set p - A \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<nexists>e. e \\<in> set p - A", "have i: \"set p \\<subseteq> A\""], ["proof (prove)\nusing this:\n  \\<nexists>e. e \\<in> set p - A\n\ngoal (1 subgoal):\n 1. set p \\<subseteq> A", "by auto"], ["proof (state)\nthis:\n  set p \\<subseteq> A\n\ngoal (1 subgoal):\n 1. \\<nexists>e. e \\<in> set p - A \\<Longrightarrow> False", "have ii: \"A = A' \\<inter> A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A = A' \\<inter> A", "using assms(1)"], ["proof (prove)\nusing this:\n  A \\<subseteq> A'\n\ngoal (1 subgoal):\n 1. A = A' \\<inter> A", "by auto"], ["proof (state)\nthis:\n  A = A' \\<inter> A\n\ngoal (1 subgoal):\n 1. \\<nexists>e. e \\<in> set p - A \\<Longrightarrow> False", "have \"epath A u p v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. epath A u p v", "apply(subst ii)"], ["proof (prove)\ngoal (1 subgoal):\n 1. epath (A' \\<inter> A) u p v", "apply(rule epath_restrict  )"], ["proof (prove)\ngoal (2 subgoals):\n 1. set p \\<subseteq> A\n 2. epath A' u p v", "by fact+"], ["proof (state)\nthis:\n  epath A u p v\n\ngoal (1 subgoal):\n 1. \\<nexists>e. e \\<in> set p - A \\<Longrightarrow> False", "with assms(2)"], ["proof (chain)\npicking this:\n  \\<not> epath A u p v\n  epath A u p v", "show \"False\""], ["proof (prove)\nusing this:\n  \\<not> epath A u p v\n  epath A u p v\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma epath_restrict': \"epath (insert e E) u p v \\<Longrightarrow>  e\\<notin>set p \\<Longrightarrow> epath E u p v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>epath (insert e E) u p v; e \\<notin> set p\\<rbrakk>\n    \\<Longrightarrow> epath E u p v", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<lbrakk>epath (insert e E) u p v; e \\<notin> set p\\<rbrakk>\n    \\<Longrightarrow> epath E u p v", "assume a: \"epath (insert e E) u p v\" and \"e\\<notin>set p\""], ["proof (state)\nthis:\n  epath (insert e E) u p v\n  e \\<notin> set p\n\ngoal (1 subgoal):\n 1. \\<lbrakk>epath (insert e E) u p v; e \\<notin> set p\\<rbrakk>\n    \\<Longrightarrow> epath E u p v", "then"], ["proof (chain)\npicking this:\n  epath (insert e E) u p v\n  e \\<notin> set p", "have b: \"set p \\<subseteq> E\""], ["proof (prove)\nusing this:\n  epath (insert e E) u p v\n  e \\<notin> set p\n\ngoal (1 subgoal):\n 1. set p \\<subseteq> E", "by(auto dest: epath_subset_E)"], ["proof (state)\nthis:\n  set p \\<subseteq> E\n\ngoal (1 subgoal):\n 1. \\<lbrakk>epath (insert e E) u p v; e \\<notin> set p\\<rbrakk>\n    \\<Longrightarrow> epath E u p v", "have e: \"insert e E \\<inter> E = E \""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert e E \\<inter> E = E", "by auto"], ["proof (state)\nthis:\n  insert e E \\<inter> E = E\n\ngoal (1 subgoal):\n 1. \\<lbrakk>epath (insert e E) u p v; e \\<notin> set p\\<rbrakk>\n    \\<Longrightarrow> epath E u p v", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. epath E u p v", "apply(rule epath_restrict[where I=E and E=\"insert e E\", simplified e] )"], ["proof (prove)\ngoal (2 subgoals):\n 1. set p \\<subseteq> E\n 2. epath (insert e E) u p v", "using a b"], ["proof (prove)\nusing this:\n  epath (insert e E) u p v\n  set p \\<subseteq> E\n\ngoal (2 subgoals):\n 1. set p \\<subseteq> E\n 2. epath (insert e E) u p v", "by auto"], ["proof (state)\nthis:\n  epath E u p v\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma epath_not_direct:\n  assumes ep: \"epath E u p v\" and unv: \"u \\<noteq> v\"\n    and edge_notin: \"Upair u v \\<notin> E\" \n  shows \"length p \\<ge> 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 \\<le> length p", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> 2 \\<le> length p \\<Longrightarrow> False", "from ep"], ["proof (chain)\npicking this:\n  epath E u p v", "have setp: \"set p \\<subseteq> E\""], ["proof (prove)\nusing this:\n  epath E u p v\n\ngoal (1 subgoal):\n 1. set p \\<subseteq> E", "using epath_subset_E"], ["proof (prove)\nusing this:\n  epath E u p v\n  epath ?E ?u ?p ?v \\<Longrightarrow> set ?p \\<subseteq> ?E\n\ngoal (1 subgoal):\n 1. set p \\<subseteq> E", "by fast"], ["proof (state)\nthis:\n  set p \\<subseteq> E\n\ngoal (1 subgoal):\n 1. \\<not> 2 \\<le> length p \\<Longrightarrow> False", "assume \"\\<not>length p \\<ge> 2\""], ["proof (state)\nthis:\n  \\<not> 2 \\<le> length p\n\ngoal (1 subgoal):\n 1. \\<not> 2 \\<le> length p \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> 2 \\<le> length p", "have \"length p <2\""], ["proof (prove)\nusing this:\n  \\<not> 2 \\<le> length p\n\ngoal (1 subgoal):\n 1. length p < 2", "by auto"], ["proof (state)\nthis:\n  length p < 2\n\ngoal (1 subgoal):\n 1. \\<not> 2 \\<le> length p \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  length p < 2\n\ngoal (1 subgoal):\n 1. \\<not> 2 \\<le> length p \\<Longrightarrow> False", "{"], ["proof (state)\nthis:\n  length p < 2\n\ngoal (1 subgoal):\n 1. \\<not> 2 \\<le> length p \\<Longrightarrow> False", "assume \"length p = 0\""], ["proof (state)\nthis:\n  length p = 0\n\ngoal (1 subgoal):\n 1. \\<not> 2 \\<le> length p \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  length p = 0", "have \"p=[]\""], ["proof (prove)\nusing this:\n  length p = 0\n\ngoal (1 subgoal):\n 1. p = []", "by auto"], ["proof (state)\nthis:\n  p = []\n\ngoal (1 subgoal):\n 1. \\<not> 2 \\<le> length p \\<Longrightarrow> False", "with ep unv"], ["proof (chain)\npicking this:\n  epath E u p v\n  u \\<noteq> v\n  p = []", "have \"False\""], ["proof (prove)\nusing this:\n  epath E u p v\n  u \\<noteq> v\n  p = []\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> 2 \\<le> length p \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  length p = 0 \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<not> 2 \\<le> length p \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  length p = 0 \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<not> 2 \\<le> length p \\<Longrightarrow> False", "{"], ["proof (state)\nthis:\n  length p = 0 \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<not> 2 \\<le> length p \\<Longrightarrow> False", "assume \"length p = 1\""], ["proof (state)\nthis:\n  length p = 1\n\ngoal (1 subgoal):\n 1. \\<not> 2 \\<le> length p \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  length p = 1", "obtain e where p: \"p = [e]\""], ["proof (prove)\nusing this:\n  length p = 1\n\ngoal (1 subgoal):\n 1. (\\<And>e. p = [e] \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "using list_decomp_1"], ["proof (prove)\nusing this:\n  length p = 1\n  length ?l = 1 \\<Longrightarrow> \\<exists>a. ?l = [a]\n\ngoal (1 subgoal):\n 1. (\\<And>e. p = [e] \\<Longrightarrow> thesis) \\<Longrightarrow> thesis", "by blast"], ["proof (state)\nthis:\n  p = [e]\n\ngoal (1 subgoal):\n 1. \\<not> 2 \\<le> length p \\<Longrightarrow> False", "with ep"], ["proof (chain)\npicking this:\n  epath E u p v\n  p = [e]", "have i: \"e=Upair u v\""], ["proof (prove)\nusing this:\n  epath E u p v\n  p = [e]\n\ngoal (1 subgoal):\n 1. e = Upair u v", "by auto"], ["proof (state)\nthis:\n  e = Upair u v\n\ngoal (1 subgoal):\n 1. \\<not> 2 \\<le> length p \\<Longrightarrow> False", "from p i setp and edge_notin"], ["proof (chain)\npicking this:\n  p = [e]\n  e = Upair u v\n  set p \\<subseteq> E\n  Upair u v \\<notin> E", "have \"False\""], ["proof (prove)\nusing this:\n  p = [e]\n  e = Upair u v\n  set p \\<subseteq> E\n  Upair u v \\<notin> E\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. \\<not> 2 \\<le> length p \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  length p = 1 \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. \\<not> 2 \\<le> length p \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  length p < 2\n  length p = 0 \\<Longrightarrow> False\n  length p = 1 \\<Longrightarrow> False", "show \"False\""], ["proof (prove)\nusing this:\n  length p < 2\n  length p = 0 \\<Longrightarrow> False\n  length p = 1 \\<Longrightarrow> False\n\ngoal (1 subgoal):\n 1. False", "by linarith"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma epath_decompose:\n  assumes e: \"epath G v p v'\"\n    and elem :\"Upair a b \\<in> set p\"\n  shows  \"\\<exists> u u' p' p'' . u \\<in> {a, b} \\<and> u' \\<in> {a, b} \\<and> epath G v p' u \\<and> epath G u' p'' v' \\<and>\n          length p' < length p \\<and> length p'' < length p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>u u' p' p''.\n       u \\<in> {a, b} \\<and>\n       u' \\<in> {a, b} \\<and>\n       epath G v p' u \\<and>\n       epath G u' p'' v' \\<and>\n       length p' < length p \\<and> length p'' < length p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>u u' p' p''.\n       u \\<in> {a, b} \\<and>\n       u' \\<in> {a, b} \\<and>\n       epath G v p' u \\<and>\n       epath G u' p'' v' \\<and>\n       length p' < length p \\<and> length p'' < length p", "from elem"], ["proof (chain)\npicking this:\n  Upair a b \\<in> set p", "obtain p' p'' where p: \"p = p' @ (Upair a b) # p''\""], ["proof (prove)\nusing this:\n  Upair a b \\<in> set p\n\ngoal (1 subgoal):\n 1. (\\<And>p' p''.\n        p = p' @ Upair a b # p'' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using in_set_conv_decomp"], ["proof (prove)\nusing this:\n  Upair a b \\<in> set p\n  (?x \\<in> set ?xs) = (\\<exists>ys zs. ?xs = ys @ ?x # zs)\n\ngoal (1 subgoal):\n 1. (\\<And>p' p''.\n        p = p' @ Upair a b # p'' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  p = p' @ Upair a b # p''\n\ngoal (1 subgoal):\n 1. \\<exists>u u' p' p''.\n       u \\<in> {a, b} \\<and>\n       u' \\<in> {a, b} \\<and>\n       epath G v p' u \\<and>\n       epath G u' p'' v' \\<and>\n       length p' < length p \\<and> length p'' < length p", "from p"], ["proof (chain)\npicking this:\n  p = p' @ Upair a b # p''", "have \"epath G v (p' @ (Upair a b) # p'') v'\""], ["proof (prove)\nusing this:\n  p = p' @ Upair a b # p''\n\ngoal (1 subgoal):\n 1. epath G v (p' @ Upair a b # p'') v'", "using e"], ["proof (prove)\nusing this:\n  p = p' @ Upair a b # p''\n  epath G v p v'\n\ngoal (1 subgoal):\n 1. epath G v (p' @ Upair a b # p'') v'", "by auto"], ["proof (state)\nthis:\n  epath G v (p' @ Upair a b # p'') v'\n\ngoal (1 subgoal):\n 1. \\<exists>u u' p' p''.\n       u \\<in> {a, b} \\<and>\n       u' \\<in> {a, b} \\<and>\n       epath G v p' u \\<and>\n       epath G u' p'' v' \\<and>\n       length p' < length p \\<and> length p'' < length p", "then"], ["proof (chain)\npicking this:\n  epath G v (p' @ Upair a b # p'') v'", "obtain z z' where pr: \"epath G v p' z\"  \"epath G z' p'' v'\" and u: \"Upair z z'=Upair a b\""], ["proof (prove)\nusing this:\n  epath G v (p' @ Upair a b # p'') v'\n\ngoal (1 subgoal):\n 1. (\\<And>z z'.\n        \\<lbrakk>epath G v p' z; epath G z' p'' v';\n         Upair z z' = Upair a b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  epath G v p' z\n  epath G z' p'' v'\n  Upair z z' = Upair a b\n\ngoal (1 subgoal):\n 1. \\<exists>u u' p' p''.\n       u \\<in> {a, b} \\<and>\n       u' \\<in> {a, b} \\<and>\n       epath G v p' u \\<and>\n       epath G u' p'' v' \\<and>\n       length p' < length p \\<and> length p'' < length p", "from u"], ["proof (chain)\npicking this:\n  Upair z z' = Upair a b", "have u': \"z \\<in> {a, b} \\<and> z' \\<in> {a, b}\""], ["proof (prove)\nusing this:\n  Upair z z' = Upair a b\n\ngoal (1 subgoal):\n 1. z \\<in> {a, b} \\<and> z' \\<in> {a, b}", "by auto"], ["proof (state)\nthis:\n  z \\<in> {a, b} \\<and> z' \\<in> {a, b}\n\ngoal (1 subgoal):\n 1. \\<exists>u u' p' p''.\n       u \\<in> {a, b} \\<and>\n       u' \\<in> {a, b} \\<and>\n       epath G v p' u \\<and>\n       epath G u' p'' v' \\<and>\n       length p' < length p \\<and> length p'' < length p", "have len: \"length p' < length p\"  \"length p'' < length p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length p' < length p &&& length p'' < length p", "using p"], ["proof (prove)\nusing this:\n  p = p' @ Upair a b # p''\n\ngoal (1 subgoal):\n 1. length p' < length p &&& length p'' < length p", "by auto"], ["proof (state)\nthis:\n  length p' < length p\n  length p'' < length p\n\ngoal (1 subgoal):\n 1. \\<exists>u u' p' p''.\n       u \\<in> {a, b} \\<and>\n       u' \\<in> {a, b} \\<and>\n       epath G v p' u \\<and>\n       epath G u' p'' v' \\<and>\n       length p' < length p \\<and> length p'' < length p", "from len pr u'"], ["proof (chain)\npicking this:\n  length p' < length p\n  length p'' < length p\n  epath G v p' z\n  epath G z' p'' v'\n  z \\<in> {a, b} \\<and> z' \\<in> {a, b}", "show ?thesis"], ["proof (prove)\nusing this:\n  length p' < length p\n  length p'' < length p\n  epath G v p' z\n  epath G z' p'' v'\n  z \\<in> {a, b} \\<and> z' \\<in> {a, b}\n\ngoal (1 subgoal):\n 1. \\<exists>u u' p' p''.\n       u \\<in> {a, b} \\<and>\n       u' \\<in> {a, b} \\<and>\n       epath G v p' u \\<and>\n       epath G u' p'' v' \\<and>\n       length p' < length p \\<and> length p'' < length p", "by auto"], ["proof (state)\nthis:\n  \\<exists>u u' p' p''.\n     u \\<in> {a, b} \\<and>\n     u' \\<in> {a, b} \\<and>\n     epath G v p' u \\<and>\n     epath G u' p'' v' \\<and>\n     length p' < length p \\<and> length p'' < length p\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma epath_decompose':\n  assumes e: \"epath G v p v'\"\n    and elem :\"Upair a b \\<in> set p\"\n  shows  \"\\<exists> u u' p' p'' . Upair a b = Upair u u' \\<and> epath G v p' u \\<and> epath G u' p'' v' \\<and>\n          length p' < length p \\<and> length p'' < length p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>u u' p' p''.\n       Upair a b = Upair u u' \\<and>\n       epath G v p' u \\<and>\n       epath G u' p'' v' \\<and>\n       length p' < length p \\<and> length p'' < length p", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<exists>u u' p' p''.\n       Upair a b = Upair u u' \\<and>\n       epath G v p' u \\<and>\n       epath G u' p'' v' \\<and>\n       length p' < length p \\<and> length p'' < length p", "from elem"], ["proof (chain)\npicking this:\n  Upair a b \\<in> set p", "obtain p' p'' where p: \"p = p' @ (Upair a b) # p''\""], ["proof (prove)\nusing this:\n  Upair a b \\<in> set p\n\ngoal (1 subgoal):\n 1. (\\<And>p' p''.\n        p = p' @ Upair a b # p'' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using in_set_conv_decomp"], ["proof (prove)\nusing this:\n  Upair a b \\<in> set p\n  (?x \\<in> set ?xs) = (\\<exists>ys zs. ?xs = ys @ ?x # zs)\n\ngoal (1 subgoal):\n 1. (\\<And>p' p''.\n        p = p' @ Upair a b # p'' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  p = p' @ Upair a b # p''\n\ngoal (1 subgoal):\n 1. \\<exists>u u' p' p''.\n       Upair a b = Upair u u' \\<and>\n       epath G v p' u \\<and>\n       epath G u' p'' v' \\<and>\n       length p' < length p \\<and> length p'' < length p", "from p"], ["proof (chain)\npicking this:\n  p = p' @ Upair a b # p''", "have \"epath G v (p' @ (Upair a b) # p'') v'\""], ["proof (prove)\nusing this:\n  p = p' @ Upair a b # p''\n\ngoal (1 subgoal):\n 1. epath G v (p' @ Upair a b # p'') v'", "using e"], ["proof (prove)\nusing this:\n  p = p' @ Upair a b # p''\n  epath G v p v'\n\ngoal (1 subgoal):\n 1. epath G v (p' @ Upair a b # p'') v'", "by auto"], ["proof (state)\nthis:\n  epath G v (p' @ Upair a b # p'') v'\n\ngoal (1 subgoal):\n 1. \\<exists>u u' p' p''.\n       Upair a b = Upair u u' \\<and>\n       epath G v p' u \\<and>\n       epath G u' p'' v' \\<and>\n       length p' < length p \\<and> length p'' < length p", "then"], ["proof (chain)\npicking this:\n  epath G v (p' @ Upair a b # p'') v'", "obtain z z' where pr: \"epath G v p' z\"  \"epath G z' p'' v'\" and u: \"Upair z z'=Upair a b\""], ["proof (prove)\nusing this:\n  epath G v (p' @ Upair a b # p'') v'\n\ngoal (1 subgoal):\n 1. (\\<And>z z'.\n        \\<lbrakk>epath G v p' z; epath G z' p'' v';\n         Upair z z' = Upair a b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  epath G v p' z\n  epath G z' p'' v'\n  Upair z z' = Upair a b\n\ngoal (1 subgoal):\n 1. \\<exists>u u' p' p''.\n       Upair a b = Upair u u' \\<and>\n       epath G v p' u \\<and>\n       epath G u' p'' v' \\<and>\n       length p' < length p \\<and> length p'' < length p", "have len: \"length p' < length p\"  \"length p'' < length p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. length p' < length p &&& length p'' < length p", "using p"], ["proof (prove)\nusing this:\n  p = p' @ Upair a b # p''\n\ngoal (1 subgoal):\n 1. length p' < length p &&& length p'' < length p", "by auto"], ["proof (state)\nthis:\n  length p' < length p\n  length p'' < length p\n\ngoal (1 subgoal):\n 1. \\<exists>u u' p' p''.\n       Upair a b = Upair u u' \\<and>\n       epath G v p' u \\<and>\n       epath G u' p'' v' \\<and>\n       length p' < length p \\<and> length p'' < length p", "from len pr u"], ["proof (chain)\npicking this:\n  length p' < length p\n  length p'' < length p\n  epath G v p' z\n  epath G z' p'' v'\n  Upair z z' = Upair a b", "show ?thesis"], ["proof (prove)\nusing this:\n  length p' < length p\n  length p'' < length p\n  epath G v p' z\n  epath G z' p'' v'\n  Upair z z' = Upair a b\n\ngoal (1 subgoal):\n 1. \\<exists>u u' p' p''.\n       Upair a b = Upair u u' \\<and>\n       epath G v p' u \\<and>\n       epath G u' p'' v' \\<and>\n       length p' < length p \\<and> length p'' < length p", "by auto"], ["proof (state)\nthis:\n  \\<exists>u u' p' p''.\n     Upair a b = Upair u u' \\<and>\n     epath G v p' u \\<and>\n     epath G u' p'' v' \\<and>\n     length p' < length p \\<and> length p'' < length p\n\ngoal:\nNo subgoals!", "qed"], ["", "(* adapted from Julian's is_path_undir_split_distinct *)"], ["", "lemma epath_split_distinct:\n  assumes \"epath G v p v'\"\n  assumes \"Upair a b \\<in> set p\"\n  shows \"(\\<exists>p' p'' u u'.\n            epath G v p' u \\<and> epath G u' p'' v' \\<and>\n            length p' < length p \\<and> length p'' < length p \\<and>\n            (u \\<in> {a, b} \\<and> u' \\<in> {a, b}) \\<and>\n            Upair a b \\<notin> set p' \\<and> Upair a b \\<notin> set p'')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p' p'' u u'.\n       epath G v p' u \\<and>\n       epath G u' p'' v' \\<and>\n       length p' < length p \\<and>\n       length p'' < length p \\<and>\n       (u \\<in> {a, b} \\<and> u' \\<in> {a, b}) \\<and>\n       Upair a b \\<notin> set p' \\<and> Upair a b \\<notin> set p''", "using assms"], ["proof (prove)\nusing this:\n  epath G v p v'\n  Upair a b \\<in> set p\n\ngoal (1 subgoal):\n 1. \\<exists>p' p'' u u'.\n       epath G v p' u \\<and>\n       epath G u' p'' v' \\<and>\n       length p' < length p \\<and>\n       length p'' < length p \\<and>\n       (u \\<in> {a, b} \\<and> u' \\<in> {a, b}) \\<and>\n       Upair a b \\<notin> set p' \\<and> Upair a b \\<notin> set p''", "proof (induction n == \"length p\" arbitrary: p v v' rule: nat_less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p v v'.\n       \\<lbrakk>\\<forall>m<length p.\n                   \\<forall>x.\n                      m = length x \\<longrightarrow>\n                      (\\<forall>xa xb.\n                          epath G xa x xb \\<longrightarrow>\n                          Upair a b \\<in> set x \\<longrightarrow>\n                          (\\<exists>p' p'' u u'.\n                              epath G xa p' u \\<and>\n                              epath G u' p'' xb \\<and>\n                              length p' < length x \\<and>\n                              length p'' < length x \\<and>\n                              (u \\<in> {a, b} \\<and> u' \\<in> {a, b}) \\<and>\n                              Upair a b \\<notin> set p' \\<and>\n                              Upair a b \\<notin> set p''));\n        epath G v p v'; Upair a b \\<in> set p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p' p'' u u'.\n                            epath G v p' u \\<and>\n                            epath G u' p'' v' \\<and>\n                            length p' < length p \\<and>\n                            length p'' < length p \\<and>\n                            (u \\<in> {a, b} \\<and> u' \\<in> {a, b}) \\<and>\n                            Upair a b \\<notin> set p' \\<and>\n                            Upair a b \\<notin> set p''", "case 1"], ["proof (state)\nthis:\n  \\<forall>m<length p.\n     \\<forall>x.\n        m = length x \\<longrightarrow>\n        (\\<forall>xa xb.\n            epath G xa x xb \\<longrightarrow>\n            Upair a b \\<in> set x \\<longrightarrow>\n            (\\<exists>p' p'' u u'.\n                epath G xa p' u \\<and>\n                epath G u' p'' xb \\<and>\n                length p' < length x \\<and>\n                length p'' < length x \\<and>\n                (u \\<in> {a, b} \\<and> u' \\<in> {a, b}) \\<and>\n                Upair a b \\<notin> set p' \\<and>\n                Upair a b \\<notin> set p''))\n  epath G v p v'\n  Upair a b \\<in> set p\n\ngoal (1 subgoal):\n 1. \\<And>p v v'.\n       \\<lbrakk>\\<forall>m<length p.\n                   \\<forall>x.\n                      m = length x \\<longrightarrow>\n                      (\\<forall>xa xb.\n                          epath G xa x xb \\<longrightarrow>\n                          Upair a b \\<in> set x \\<longrightarrow>\n                          (\\<exists>p' p'' u u'.\n                              epath G xa p' u \\<and>\n                              epath G u' p'' xb \\<and>\n                              length p' < length x \\<and>\n                              length p'' < length x \\<and>\n                              (u \\<in> {a, b} \\<and> u' \\<in> {a, b}) \\<and>\n                              Upair a b \\<notin> set p' \\<and>\n                              Upair a b \\<notin> set p''));\n        epath G v p v'; Upair a b \\<in> set p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p' p'' u u'.\n                            epath G v p' u \\<and>\n                            epath G u' p'' v' \\<and>\n                            length p' < length p \\<and>\n                            length p'' < length p \\<and>\n                            (u \\<in> {a, b} \\<and> u' \\<in> {a, b}) \\<and>\n                            Upair a b \\<notin> set p' \\<and>\n                            Upair a b \\<notin> set p''", "obtain u u' p' p'' where u: \"u \\<in> {a, b} \\<and> u' \\<in> {a, b}\"\n    and p': \"epath G v p' u\" and p'': \"epath G u' p'' v'\"\n    and len_p': \"length p' < length p\" and len_p'': \"length p'' < length p\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>u u' p' p''.\n        \\<lbrakk>u \\<in> {a, b} \\<and> u' \\<in> {a, b}; epath G v p' u;\n         epath G u' p'' v'; length p' < length p;\n         length p'' < length p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using epath_decompose[OF 1(2,3)]"], ["proof (prove)\nusing this:\n  \\<exists>u u' p' p''.\n     u \\<in> {a, b} \\<and>\n     u' \\<in> {a, b} \\<and>\n     epath G v p' u \\<and>\n     epath G u' p'' v' \\<and>\n     length p' < length p \\<and> length p'' < length p\n\ngoal (1 subgoal):\n 1. (\\<And>u u' p' p''.\n        \\<lbrakk>u \\<in> {a, b} \\<and> u' \\<in> {a, b}; epath G v p' u;\n         epath G u' p'' v'; length p' < length p;\n         length p'' < length p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  u \\<in> {a, b} \\<and> u' \\<in> {a, b}\n  epath G v p' u\n  epath G u' p'' v'\n  length p' < length p\n  length p'' < length p\n\ngoal (1 subgoal):\n 1. \\<And>p v v'.\n       \\<lbrakk>\\<forall>m<length p.\n                   \\<forall>x.\n                      m = length x \\<longrightarrow>\n                      (\\<forall>xa xb.\n                          epath G xa x xb \\<longrightarrow>\n                          Upair a b \\<in> set x \\<longrightarrow>\n                          (\\<exists>p' p'' u u'.\n                              epath G xa p' u \\<and>\n                              epath G u' p'' xb \\<and>\n                              length p' < length x \\<and>\n                              length p'' < length x \\<and>\n                              (u \\<in> {a, b} \\<and> u' \\<in> {a, b}) \\<and>\n                              Upair a b \\<notin> set p' \\<and>\n                              Upair a b \\<notin> set p''));\n        epath G v p v'; Upair a b \\<in> set p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p' p'' u u'.\n                            epath G v p' u \\<and>\n                            epath G u' p'' v' \\<and>\n                            length p' < length p \\<and>\n                            length p'' < length p \\<and>\n                            (u \\<in> {a, b} \\<and> u' \\<in> {a, b}) \\<and>\n                            Upair a b \\<notin> set p' \\<and>\n                            Upair a b \\<notin> set p''", "from 1 len_p' p'"], ["proof (chain)\npicking this:\n  \\<forall>m<length p.\n     \\<forall>x.\n        m = length x \\<longrightarrow>\n        (\\<forall>xa xb.\n            epath G xa x xb \\<longrightarrow>\n            Upair a b \\<in> set x \\<longrightarrow>\n            (\\<exists>p' p'' u u'.\n                epath G xa p' u \\<and>\n                epath G u' p'' xb \\<and>\n                length p' < length x \\<and>\n                length p'' < length x \\<and>\n                (u \\<in> {a, b} \\<and> u' \\<in> {a, b}) \\<and>\n                Upair a b \\<notin> set p' \\<and>\n                Upair a b \\<notin> set p''))\n  epath G v p v'\n  Upair a b \\<in> set p\n  length p' < length p\n  epath G v p' u", "have \"Upair a b \\<in> set p' \\<longrightarrow> (\\<exists>p'2 u2.\n            epath G v p'2 u2 \\<and>\n            length p'2 < length p' \\<and>\n            u2 \\<in> {a, b} \\<and>\n            Upair a b \\<notin> set p'2)\""], ["proof (prove)\nusing this:\n  \\<forall>m<length p.\n     \\<forall>x.\n        m = length x \\<longrightarrow>\n        (\\<forall>xa xb.\n            epath G xa x xb \\<longrightarrow>\n            Upair a b \\<in> set x \\<longrightarrow>\n            (\\<exists>p' p'' u u'.\n                epath G xa p' u \\<and>\n                epath G u' p'' xb \\<and>\n                length p' < length x \\<and>\n                length p'' < length x \\<and>\n                (u \\<in> {a, b} \\<and> u' \\<in> {a, b}) \\<and>\n                Upair a b \\<notin> set p' \\<and>\n                Upair a b \\<notin> set p''))\n  epath G v p v'\n  Upair a b \\<in> set p\n  length p' < length p\n  epath G v p' u\n\ngoal (1 subgoal):\n 1. Upair a b \\<in> set p' \\<longrightarrow>\n    (\\<exists>p'2 u2.\n        epath G v p'2 u2 \\<and>\n        length p'2 < length p' \\<and>\n        u2 \\<in> {a, b} \\<and> Upair a b \\<notin> set p'2)", "by metis"], ["proof (state)\nthis:\n  Upair a b \\<in> set p' \\<longrightarrow>\n  (\\<exists>p'2 u2.\n      epath G v p'2 u2 \\<and>\n      length p'2 < length p' \\<and>\n      u2 \\<in> {a, b} \\<and> Upair a b \\<notin> set p'2)\n\ngoal (1 subgoal):\n 1. \\<And>p v v'.\n       \\<lbrakk>\\<forall>m<length p.\n                   \\<forall>x.\n                      m = length x \\<longrightarrow>\n                      (\\<forall>xa xb.\n                          epath G xa x xb \\<longrightarrow>\n                          Upair a b \\<in> set x \\<longrightarrow>\n                          (\\<exists>p' p'' u u'.\n                              epath G xa p' u \\<and>\n                              epath G u' p'' xb \\<and>\n                              length p' < length x \\<and>\n                              length p'' < length x \\<and>\n                              (u \\<in> {a, b} \\<and> u' \\<in> {a, b}) \\<and>\n                              Upair a b \\<notin> set p' \\<and>\n                              Upair a b \\<notin> set p''));\n        epath G v p v'; Upair a b \\<in> set p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p' p'' u u'.\n                            epath G v p' u \\<and>\n                            epath G u' p'' v' \\<and>\n                            length p' < length p \\<and>\n                            length p'' < length p \\<and>\n                            (u \\<in> {a, b} \\<and> u' \\<in> {a, b}) \\<and>\n                            Upair a b \\<notin> set p' \\<and>\n                            Upair a b \\<notin> set p''", "with len_p' p' u"], ["proof (chain)\npicking this:\n  length p' < length p\n  epath G v p' u\n  u \\<in> {a, b} \\<and> u' \\<in> {a, b}\n  Upair a b \\<in> set p' \\<longrightarrow>\n  (\\<exists>p'2 u2.\n      epath G v p'2 u2 \\<and>\n      length p'2 < length p' \\<and>\n      u2 \\<in> {a, b} \\<and> Upair a b \\<notin> set p'2)", "have p': \"\\<exists>p' u. epath G v p' u \\<and> length p' < length p \\<and>\n      u \\<in> {a,b} \\<and> Upair a b \\<notin> set p' \\<and> Upair a b \\<notin> set p'\""], ["proof (prove)\nusing this:\n  length p' < length p\n  epath G v p' u\n  u \\<in> {a, b} \\<and> u' \\<in> {a, b}\n  Upair a b \\<in> set p' \\<longrightarrow>\n  (\\<exists>p'2 u2.\n      epath G v p'2 u2 \\<and>\n      length p'2 < length p' \\<and>\n      u2 \\<in> {a, b} \\<and> Upair a b \\<notin> set p'2)\n\ngoal (1 subgoal):\n 1. \\<exists>p' u.\n       epath G v p' u \\<and>\n       length p' < length p \\<and>\n       u \\<in> {a, b} \\<and>\n       Upair a b \\<notin> set p' \\<and> Upair a b \\<notin> set p'", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>p' u.\n     epath G v p' u \\<and>\n     length p' < length p \\<and>\n     u \\<in> {a, b} \\<and>\n     Upair a b \\<notin> set p' \\<and> Upair a b \\<notin> set p'\n\ngoal (1 subgoal):\n 1. \\<And>p v v'.\n       \\<lbrakk>\\<forall>m<length p.\n                   \\<forall>x.\n                      m = length x \\<longrightarrow>\n                      (\\<forall>xa xb.\n                          epath G xa x xb \\<longrightarrow>\n                          Upair a b \\<in> set x \\<longrightarrow>\n                          (\\<exists>p' p'' u u'.\n                              epath G xa p' u \\<and>\n                              epath G u' p'' xb \\<and>\n                              length p' < length x \\<and>\n                              length p'' < length x \\<and>\n                              (u \\<in> {a, b} \\<and> u' \\<in> {a, b}) \\<and>\n                              Upair a b \\<notin> set p' \\<and>\n                              Upair a b \\<notin> set p''));\n        epath G v p v'; Upair a b \\<in> set p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p' p'' u u'.\n                            epath G v p' u \\<and>\n                            epath G u' p'' v' \\<and>\n                            length p' < length p \\<and>\n                            length p'' < length p \\<and>\n                            (u \\<in> {a, b} \\<and> u' \\<in> {a, b}) \\<and>\n                            Upair a b \\<notin> set p' \\<and>\n                            Upair a b \\<notin> set p''", "from 1 len_p'' p''"], ["proof (chain)\npicking this:\n  \\<forall>m<length p.\n     \\<forall>x.\n        m = length x \\<longrightarrow>\n        (\\<forall>xa xb.\n            epath G xa x xb \\<longrightarrow>\n            Upair a b \\<in> set x \\<longrightarrow>\n            (\\<exists>p' p'' u u'.\n                epath G xa p' u \\<and>\n                epath G u' p'' xb \\<and>\n                length p' < length x \\<and>\n                length p'' < length x \\<and>\n                (u \\<in> {a, b} \\<and> u' \\<in> {a, b}) \\<and>\n                Upair a b \\<notin> set p' \\<and>\n                Upair a b \\<notin> set p''))\n  epath G v p v'\n  Upair a b \\<in> set p\n  length p'' < length p\n  epath G u' p'' v'", "have \"Upair a b \\<in> set p'' \\<longrightarrow> (\\<exists>p''2 u'2.\n            epath G u'2 p''2 v' \\<and>\n            length p''2 < length p'' \\<and>\n            u'2 \\<in> {a, b} \\<and>\n            Upair a b \\<notin> set p''2 \\<and> Upair a b \\<notin> set p''2)\""], ["proof (prove)\nusing this:\n  \\<forall>m<length p.\n     \\<forall>x.\n        m = length x \\<longrightarrow>\n        (\\<forall>xa xb.\n            epath G xa x xb \\<longrightarrow>\n            Upair a b \\<in> set x \\<longrightarrow>\n            (\\<exists>p' p'' u u'.\n                epath G xa p' u \\<and>\n                epath G u' p'' xb \\<and>\n                length p' < length x \\<and>\n                length p'' < length x \\<and>\n                (u \\<in> {a, b} \\<and> u' \\<in> {a, b}) \\<and>\n                Upair a b \\<notin> set p' \\<and>\n                Upair a b \\<notin> set p''))\n  epath G v p v'\n  Upair a b \\<in> set p\n  length p'' < length p\n  epath G u' p'' v'\n\ngoal (1 subgoal):\n 1. Upair a b \\<in> set p'' \\<longrightarrow>\n    (\\<exists>p''2 u'2.\n        epath G u'2 p''2 v' \\<and>\n        length p''2 < length p'' \\<and>\n        u'2 \\<in> {a, b} \\<and>\n        Upair a b \\<notin> set p''2 \\<and> Upair a b \\<notin> set p''2)", "by metis"], ["proof (state)\nthis:\n  Upair a b \\<in> set p'' \\<longrightarrow>\n  (\\<exists>p''2 u'2.\n      epath G u'2 p''2 v' \\<and>\n      length p''2 < length p'' \\<and>\n      u'2 \\<in> {a, b} \\<and>\n      Upair a b \\<notin> set p''2 \\<and> Upair a b \\<notin> set p''2)\n\ngoal (1 subgoal):\n 1. \\<And>p v v'.\n       \\<lbrakk>\\<forall>m<length p.\n                   \\<forall>x.\n                      m = length x \\<longrightarrow>\n                      (\\<forall>xa xb.\n                          epath G xa x xb \\<longrightarrow>\n                          Upair a b \\<in> set x \\<longrightarrow>\n                          (\\<exists>p' p'' u u'.\n                              epath G xa p' u \\<and>\n                              epath G u' p'' xb \\<and>\n                              length p' < length x \\<and>\n                              length p'' < length x \\<and>\n                              (u \\<in> {a, b} \\<and> u' \\<in> {a, b}) \\<and>\n                              Upair a b \\<notin> set p' \\<and>\n                              Upair a b \\<notin> set p''));\n        epath G v p v'; Upair a b \\<in> set p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p' p'' u u'.\n                            epath G v p' u \\<and>\n                            epath G u' p'' v' \\<and>\n                            length p' < length p \\<and>\n                            length p'' < length p \\<and>\n                            (u \\<in> {a, b} \\<and> u' \\<in> {a, b}) \\<and>\n                            Upair a b \\<notin> set p' \\<and>\n                            Upair a b \\<notin> set p''", "with len_p'' p'' u"], ["proof (chain)\npicking this:\n  length p'' < length p\n  epath G u' p'' v'\n  u \\<in> {a, b} \\<and> u' \\<in> {a, b}\n  Upair a b \\<in> set p'' \\<longrightarrow>\n  (\\<exists>p''2 u'2.\n      epath G u'2 p''2 v' \\<and>\n      length p''2 < length p'' \\<and>\n      u'2 \\<in> {a, b} \\<and>\n      Upair a b \\<notin> set p''2 \\<and> Upair a b \\<notin> set p''2)", "have \"\\<exists>p'' u'. epath G u' p'' v'\\<and> length p'' < length p \\<and>\n      u' \\<in> {a,b} \\<and> Upair a b \\<notin> set p'' \\<and> Upair a b \\<notin> set p''\""], ["proof (prove)\nusing this:\n  length p'' < length p\n  epath G u' p'' v'\n  u \\<in> {a, b} \\<and> u' \\<in> {a, b}\n  Upair a b \\<in> set p'' \\<longrightarrow>\n  (\\<exists>p''2 u'2.\n      epath G u'2 p''2 v' \\<and>\n      length p''2 < length p'' \\<and>\n      u'2 \\<in> {a, b} \\<and>\n      Upair a b \\<notin> set p''2 \\<and> Upair a b \\<notin> set p''2)\n\ngoal (1 subgoal):\n 1. \\<exists>p'' u'.\n       epath G u' p'' v' \\<and>\n       length p'' < length p \\<and>\n       u' \\<in> {a, b} \\<and>\n       Upair a b \\<notin> set p'' \\<and> Upair a b \\<notin> set p''", "by fastforce"], ["proof (state)\nthis:\n  \\<exists>p'' u'.\n     epath G u' p'' v' \\<and>\n     length p'' < length p \\<and>\n     u' \\<in> {a, b} \\<and>\n     Upair a b \\<notin> set p'' \\<and> Upair a b \\<notin> set p''\n\ngoal (1 subgoal):\n 1. \\<And>p v v'.\n       \\<lbrakk>\\<forall>m<length p.\n                   \\<forall>x.\n                      m = length x \\<longrightarrow>\n                      (\\<forall>xa xb.\n                          epath G xa x xb \\<longrightarrow>\n                          Upair a b \\<in> set x \\<longrightarrow>\n                          (\\<exists>p' p'' u u'.\n                              epath G xa p' u \\<and>\n                              epath G u' p'' xb \\<and>\n                              length p' < length x \\<and>\n                              length p'' < length x \\<and>\n                              (u \\<in> {a, b} \\<and> u' \\<in> {a, b}) \\<and>\n                              Upair a b \\<notin> set p' \\<and>\n                              Upair a b \\<notin> set p''));\n        epath G v p v'; Upair a b \\<in> set p\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p' p'' u u'.\n                            epath G v p' u \\<and>\n                            epath G u' p'' v' \\<and>\n                            length p' < length p \\<and>\n                            length p'' < length p \\<and>\n                            (u \\<in> {a, b} \\<and> u' \\<in> {a, b}) \\<and>\n                            Upair a b \\<notin> set p' \\<and>\n                            Upair a b \\<notin> set p''", "with p'"], ["proof (chain)\npicking this:\n  \\<exists>p' u.\n     epath G v p' u \\<and>\n     length p' < length p \\<and>\n     u \\<in> {a, b} \\<and>\n     Upair a b \\<notin> set p' \\<and> Upair a b \\<notin> set p'\n  \\<exists>p'' u'.\n     epath G u' p'' v' \\<and>\n     length p'' < length p \\<and>\n     u' \\<in> {a, b} \\<and>\n     Upair a b \\<notin> set p'' \\<and> Upair a b \\<notin> set p''", "show ?case"], ["proof (prove)\nusing this:\n  \\<exists>p' u.\n     epath G v p' u \\<and>\n     length p' < length p \\<and>\n     u \\<in> {a, b} \\<and>\n     Upair a b \\<notin> set p' \\<and> Upair a b \\<notin> set p'\n  \\<exists>p'' u'.\n     epath G u' p'' v' \\<and>\n     length p'' < length p \\<and>\n     u' \\<in> {a, b} \\<and>\n     Upair a b \\<notin> set p'' \\<and> Upair a b \\<notin> set p''\n\ngoal (1 subgoal):\n 1. \\<exists>p' p'' u u'.\n       epath G v p' u \\<and>\n       epath G u' p'' v' \\<and>\n       length p' < length p \\<and>\n       length p'' < length p \\<and>\n       (u \\<in> {a, b} \\<and> u' \\<in> {a, b}) \\<and>\n       Upair a b \\<notin> set p' \\<and> Upair a b \\<notin> set p''", "by auto"], ["proof (state)\nthis:\n  \\<exists>p' p'' u u'.\n     epath G v p' u \\<and>\n     epath G u' p'' v' \\<and>\n     length p' < length p \\<and>\n     length p'' < length p \\<and>\n     (u \\<in> {a, b} \\<and> u' \\<in> {a, b}) \\<and>\n     Upair a b \\<notin> set p' \\<and> Upair a b \\<notin> set p''\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \"Distinct edge path\""], ["", "definition \"depath E u dp v \\<equiv> epath E u dp v \\<and> distinct dp\""], ["", "lemma epath_to_depath: \"set p \\<subseteq> I \\<Longrightarrow> epath E u p v \\<Longrightarrow> \\<exists>dp. depath E u dp v \\<and> set dp \\<subseteq> I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>set p \\<subseteq> I; epath E u p v\\<rbrakk>\n    \\<Longrightarrow> \\<exists>dp.\n                         depath E u dp v \\<and> set dp \\<subseteq> I", "proof (induction p rule: length_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>xs.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   set ys \\<subseteq> I \\<longrightarrow>\n                   epath E u ys v \\<longrightarrow>\n                   (\\<exists>dp.\n                       depath E u dp v \\<and> set dp \\<subseteq> I);\n        set xs \\<subseteq> I; epath E u xs v\\<rbrakk>\n       \\<Longrightarrow> \\<exists>dp.\n                            depath E u dp v \\<and> set dp \\<subseteq> I", "case (1 p)"], ["proof (state)\nthis:\n  \\<forall>ys.\n     length ys < length p \\<longrightarrow>\n     set ys \\<subseteq> I \\<longrightarrow>\n     epath E u ys v \\<longrightarrow>\n     (\\<exists>dp. depath E u dp v \\<and> set dp \\<subseteq> I)\n  set p \\<subseteq> I\n  epath E u p v\n\ngoal (1 subgoal):\n 1. \\<And>xs.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   set ys \\<subseteq> I \\<longrightarrow>\n                   epath E u ys v \\<longrightarrow>\n                   (\\<exists>dp.\n                       depath E u dp v \\<and> set dp \\<subseteq> I);\n        set xs \\<subseteq> I; epath E u xs v\\<rbrakk>\n       \\<Longrightarrow> \\<exists>dp.\n                            depath E u dp v \\<and> set dp \\<subseteq> I", "hence IH: \"\\<And>p'. \\<lbrakk>length p' < length p; set p' \\<subseteq> I; epath E u p' v\\<rbrakk> \n    \\<Longrightarrow> \\<exists>p'. depath E u p' v \\<and> set p' \\<subseteq> I\"\n    and PATH: \"epath E u p v\"\n    and set: \"set p \\<subseteq> I\""], ["proof (prove)\nusing this:\n  \\<forall>ys.\n     length ys < length p \\<longrightarrow>\n     set ys \\<subseteq> I \\<longrightarrow>\n     epath E u ys v \\<longrightarrow>\n     (\\<exists>dp. depath E u dp v \\<and> set dp \\<subseteq> I)\n  set p \\<subseteq> I\n  epath E u p v\n\ngoal (1 subgoal):\n 1. (\\<And>p'.\n        \\<lbrakk>length p' < length p; set p' \\<subseteq> I;\n         epath E u p' v\\<rbrakk>\n        \\<Longrightarrow> \\<exists>p'.\n                             depath E u p' v \\<and>\n                             set p' \\<subseteq> I) &&&\n    epath E u p v &&& set p \\<subseteq> I", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>length ?p' < length p; set ?p' \\<subseteq> I;\n   epath E u ?p' v\\<rbrakk>\n  \\<Longrightarrow> \\<exists>p'. depath E u p' v \\<and> set p' \\<subseteq> I\n  epath E u p v\n  set p \\<subseteq> I\n\ngoal (1 subgoal):\n 1. \\<And>xs.\n       \\<lbrakk>\\<forall>ys.\n                   length ys < length xs \\<longrightarrow>\n                   set ys \\<subseteq> I \\<longrightarrow>\n                   epath E u ys v \\<longrightarrow>\n                   (\\<exists>dp.\n                       depath E u dp v \\<and> set dp \\<subseteq> I);\n        set xs \\<subseteq> I; epath E u xs v\\<rbrakk>\n       \\<Longrightarrow> \\<exists>dp.\n                            depath E u dp v \\<and> set dp \\<subseteq> I", "show \"\\<exists>p. depath E u p v \\<and> set p \\<subseteq> I\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>p. depath E u p v \\<and> set p \\<subseteq> I", "proof cases"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>p. depath E u p v \\<and> set p \\<subseteq> I\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>p. depath E u p v \\<and> set p \\<subseteq> I", "assume \"distinct p\""], ["proof (state)\nthis:\n  distinct p\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow>\n    \\<exists>p. depath E u p v \\<and> set p \\<subseteq> I\n 2. \\<not> ?P \\<Longrightarrow>\n    \\<exists>p. depath E u p v \\<and> set p \\<subseteq> I", "thus ?thesis"], ["proof (prove)\nusing this:\n  distinct p\n\ngoal (1 subgoal):\n 1. \\<exists>p. depath E u p v \\<and> set p \\<subseteq> I", "using PATH set"], ["proof (prove)\nusing this:\n  distinct p\n  epath E u p v\n  set p \\<subseteq> I\n\ngoal (1 subgoal):\n 1. \\<exists>p. depath E u p v \\<and> set p \\<subseteq> I", "by (auto simp: depath_def)"], ["proof (state)\nthis:\n  \\<exists>p. depath E u p v \\<and> set p \\<subseteq> I\n\ngoal (1 subgoal):\n 1. \\<not> distinct p \\<Longrightarrow>\n    \\<exists>p. depath E u p v \\<and> set p \\<subseteq> I", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> distinct p \\<Longrightarrow>\n    \\<exists>p. depath E u p v \\<and> set p \\<subseteq> I", "assume \"\\<not>(distinct p)\""], ["proof (state)\nthis:\n  \\<not> distinct p\n\ngoal (1 subgoal):\n 1. \\<not> distinct p \\<Longrightarrow>\n    \\<exists>p. depath E u p v \\<and> set p \\<subseteq> I", "then"], ["proof (chain)\npicking this:\n  \\<not> distinct p", "obtain pv1 pv2 pv3 w where p: \"p = pv1@w#pv2@w#pv3\""], ["proof (prove)\nusing this:\n  \\<not> distinct p\n\ngoal (1 subgoal):\n 1. (\\<And>pv1 w pv2 pv3.\n        p = pv1 @ w # pv2 @ w # pv3 \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by (auto dest: not_distinct_decomp)"], ["proof (state)\nthis:\n  p = pv1 @ w # pv2 @ w # pv3\n\ngoal (1 subgoal):\n 1. \\<not> distinct p \\<Longrightarrow>\n    \\<exists>p. depath E u p v \\<and> set p \\<subseteq> I", "with PATH"], ["proof (chain)\npicking this:\n  epath E u p v\n  p = pv1 @ w # pv2 @ w # pv3", "obtain a where 1: \"epath E u pv1 a\" and 2:\"epath E a (w#pv2@w#pv3) v\""], ["proof (prove)\nusing this:\n  epath E u p v\n  p = pv1 @ w # pv2 @ w # pv3\n\ngoal (1 subgoal):\n 1. (\\<And>a.\n        \\<lbrakk>epath E u pv1 a; epath E a (w # pv2 @ w # pv3) v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  epath E u pv1 a\n  epath E a (w # pv2 @ w # pv3) v\n\ngoal (1 subgoal):\n 1. \\<not> distinct p \\<Longrightarrow>\n    \\<exists>p. depath E u p v \\<and> set p \\<subseteq> I", "then"], ["proof (chain)\npicking this:\n  epath E u pv1 a\n  epath E a (w # pv2 @ w # pv3) v", "obtain b where ab: \"w=Upair a b\" \"a\\<noteq>b\""], ["proof (prove)\nusing this:\n  epath E u pv1 a\n  epath E a (w # pv2 @ w # pv3) v\n\ngoal (1 subgoal):\n 1. (\\<And>b.\n        \\<lbrakk>w = Upair a b; a \\<noteq> b\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  w = Upair a b\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. \\<not> distinct p \\<Longrightarrow>\n    \\<exists>p. depath E u p v \\<and> set p \\<subseteq> I", "with 2"], ["proof (chain)\npicking this:\n  epath E a (w # pv2 @ w # pv3) v\n  w = Upair a b\n  a \\<noteq> b", "have \"epath E b (pv2@w#pv3) v\""], ["proof (prove)\nusing this:\n  epath E a (w # pv2 @ w # pv3) v\n  w = Upair a b\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. epath E b (pv2 @ w # pv3) v", "by auto"], ["proof (state)\nthis:\n  epath E b (pv2 @ w # pv3) v\n\ngoal (1 subgoal):\n 1. \\<not> distinct p \\<Longrightarrow>\n    \\<exists>p. depath E u p v \\<and> set p \\<subseteq> I", "then"], ["proof (chain)\npicking this:\n  epath E b (pv2 @ w # pv3) v", "obtain c where 3: \"epath E b pv2 c\" and 4: \"epath E c (w#pv3) v\""], ["proof (prove)\nusing this:\n  epath E b (pv2 @ w # pv3) v\n\ngoal (1 subgoal):\n 1. (\\<And>c.\n        \\<lbrakk>epath E b pv2 c; epath E c (w # pv3) v\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  epath E b pv2 c\n  epath E c (w # pv3) v\n\ngoal (1 subgoal):\n 1. \\<not> distinct p \\<Longrightarrow>\n    \\<exists>p. depath E u p v \\<and> set p \\<subseteq> I", "then"], ["proof (chain)\npicking this:\n  epath E b pv2 c\n  epath E c (w # pv3) v", "have cw: \"c\\<in>set_uprod w\""], ["proof (prove)\nusing this:\n  epath E b pv2 c\n  epath E c (w # pv3) v\n\ngoal (1 subgoal):\n 1. c \\<in> set_uprod w", "by auto"], ["proof (state)\nthis:\n  c \\<in> set_uprod w\n\ngoal (1 subgoal):\n 1. \\<not> distinct p \\<Longrightarrow>\n    \\<exists>p. depath E u p v \\<and> set p \\<subseteq> I", "{"], ["proof (state)\nthis:\n  c \\<in> set_uprod w\n\ngoal (1 subgoal):\n 1. \\<not> distinct p \\<Longrightarrow>\n    \\<exists>p. depath E u p v \\<and> set p \\<subseteq> I", "assume \"c=a\""], ["proof (state)\nthis:\n  c = a\n\ngoal (1 subgoal):\n 1. \\<not> distinct p \\<Longrightarrow>\n    \\<exists>p. depath E u p v \\<and> set p \\<subseteq> I", "then"], ["proof (chain)\npicking this:\n  c = a", "have \"length (pv1@w#pv3) < length p\" \"set (pv1@w#pv3) \\<subseteq> I\" \"epath E u (pv1@w#pv3) v\""], ["proof (prove)\nusing this:\n  c = a\n\ngoal (1 subgoal):\n 1. length (pv1 @ w # pv3) < length p &&&\n    set (pv1 @ w # pv3) \\<subseteq> I &&& epath E u (pv1 @ w # pv3) v", "using 1 4 p set"], ["proof (prove)\nusing this:\n  c = a\n  epath E u pv1 a\n  epath E c (w # pv3) v\n  p = pv1 @ w # pv2 @ w # pv3\n  set p \\<subseteq> I\n\ngoal (1 subgoal):\n 1. length (pv1 @ w # pv3) < length p &&&\n    set (pv1 @ w # pv3) \\<subseteq> I &&& epath E u (pv1 @ w # pv3) v", "by auto"], ["proof (state)\nthis:\n  length (pv1 @ w # pv3) < length p\n  set (pv1 @ w # pv3) \\<subseteq> I\n  epath E u (pv1 @ w # pv3) v\n\ngoal (1 subgoal):\n 1. \\<not> distinct p \\<Longrightarrow>\n    \\<exists>p. depath E u p v \\<and> set p \\<subseteq> I", "hence \"\\<exists>p'. depath E u p' v \\<and> set p' \\<subseteq> I\""], ["proof (prove)\nusing this:\n  length (pv1 @ w # pv3) < length p\n  set (pv1 @ w # pv3) \\<subseteq> I\n  epath E u (pv1 @ w # pv3) v\n\ngoal (1 subgoal):\n 1. \\<exists>p'. depath E u p' v \\<and> set p' \\<subseteq> I", "by (rule IH)"], ["proof (state)\nthis:\n  \\<exists>p'. depath E u p' v \\<and> set p' \\<subseteq> I\n\ngoal (1 subgoal):\n 1. \\<not> distinct p \\<Longrightarrow>\n    \\<exists>p. depath E u p v \\<and> set p \\<subseteq> I", "}"], ["proof (state)\nthis:\n  c = a \\<Longrightarrow>\n  \\<exists>p'. depath E u p' v \\<and> set p' \\<subseteq> I\n\ngoal (1 subgoal):\n 1. \\<not> distinct p \\<Longrightarrow>\n    \\<exists>p. depath E u p v \\<and> set p \\<subseteq> I", "moreover"], ["proof (state)\nthis:\n  c = a \\<Longrightarrow>\n  \\<exists>p'. depath E u p' v \\<and> set p' \\<subseteq> I\n\ngoal (1 subgoal):\n 1. \\<not> distinct p \\<Longrightarrow>\n    \\<exists>p. depath E u p v \\<and> set p \\<subseteq> I", "{"], ["proof (state)\nthis:\n  c = a \\<Longrightarrow>\n  \\<exists>p'. depath E u p' v \\<and> set p' \\<subseteq> I\n\ngoal (1 subgoal):\n 1. \\<not> distinct p \\<Longrightarrow>\n    \\<exists>p. depath E u p v \\<and> set p \\<subseteq> I", "assume \"c\\<noteq>a\""], ["proof (state)\nthis:\n  c \\<noteq> a\n\ngoal (1 subgoal):\n 1. \\<not> distinct p \\<Longrightarrow>\n    \\<exists>p. depath E u p v \\<and> set p \\<subseteq> I", "with ab cw"], ["proof (chain)\npicking this:\n  w = Upair a b\n  a \\<noteq> b\n  c \\<in> set_uprod w\n  c \\<noteq> a", "have \"c=b\""], ["proof (prove)\nusing this:\n  w = Upair a b\n  a \\<noteq> b\n  c \\<in> set_uprod w\n  c \\<noteq> a\n\ngoal (1 subgoal):\n 1. c = b", "by auto"], ["proof (state)\nthis:\n  c = b\n\ngoal (1 subgoal):\n 1. \\<not> distinct p \\<Longrightarrow>\n    \\<exists>p. depath E u p v \\<and> set p \\<subseteq> I", "with 4 ab"], ["proof (chain)\npicking this:\n  epath E c (w # pv3) v\n  w = Upair a b\n  a \\<noteq> b\n  c = b", "have \"epath E a pv3 v\""], ["proof (prove)\nusing this:\n  epath E c (w # pv3) v\n  w = Upair a b\n  a \\<noteq> b\n  c = b\n\ngoal (1 subgoal):\n 1. epath E a pv3 v", "by auto"], ["proof (state)\nthis:\n  epath E a pv3 v\n\ngoal (1 subgoal):\n 1. \\<not> distinct p \\<Longrightarrow>\n    \\<exists>p. depath E u p v \\<and> set p \\<subseteq> I", "then"], ["proof (chain)\npicking this:\n  epath E a pv3 v", "have \"length (pv1@pv3) < length p\" \"set (pv1@pv3) \\<subseteq> I\" \"epath E u (pv1@pv3) v\""], ["proof (prove)\nusing this:\n  epath E a pv3 v\n\ngoal (1 subgoal):\n 1. length (pv1 @ pv3) < length p &&&\n    set (pv1 @ pv3) \\<subseteq> I &&& epath E u (pv1 @ pv3) v", "using p 1 set"], ["proof (prove)\nusing this:\n  epath E a pv3 v\n  p = pv1 @ w # pv2 @ w # pv3\n  epath E u pv1 a\n  set p \\<subseteq> I\n\ngoal (1 subgoal):\n 1. length (pv1 @ pv3) < length p &&&\n    set (pv1 @ pv3) \\<subseteq> I &&& epath E u (pv1 @ pv3) v", "by auto"], ["proof (state)\nthis:\n  length (pv1 @ pv3) < length p\n  set (pv1 @ pv3) \\<subseteq> I\n  epath E u (pv1 @ pv3) v\n\ngoal (1 subgoal):\n 1. \\<not> distinct p \\<Longrightarrow>\n    \\<exists>p. depath E u p v \\<and> set p \\<subseteq> I", "hence \"\\<exists>p'. depath E u p' v \\<and> set p' \\<subseteq> I\""], ["proof (prove)\nusing this:\n  length (pv1 @ pv3) < length p\n  set (pv1 @ pv3) \\<subseteq> I\n  epath E u (pv1 @ pv3) v\n\ngoal (1 subgoal):\n 1. \\<exists>p'. depath E u p' v \\<and> set p' \\<subseteq> I", "by (rule IH)"], ["proof (state)\nthis:\n  \\<exists>p'. depath E u p' v \\<and> set p' \\<subseteq> I\n\ngoal (1 subgoal):\n 1. \\<not> distinct p \\<Longrightarrow>\n    \\<exists>p. depath E u p v \\<and> set p \\<subseteq> I", "}"], ["proof (state)\nthis:\n  c \\<noteq> a \\<Longrightarrow>\n  \\<exists>p'. depath E u p' v \\<and> set p' \\<subseteq> I\n\ngoal (1 subgoal):\n 1. \\<not> distinct p \\<Longrightarrow>\n    \\<exists>p. depath E u p v \\<and> set p \\<subseteq> I", "ultimately"], ["proof (chain)\npicking this:\n  c = a \\<Longrightarrow>\n  \\<exists>p'. depath E u p' v \\<and> set p' \\<subseteq> I\n  c \\<noteq> a \\<Longrightarrow>\n  \\<exists>p'. depath E u p' v \\<and> set p' \\<subseteq> I", "show ?case"], ["proof (prove)\nusing this:\n  c = a \\<Longrightarrow>\n  \\<exists>p'. depath E u p' v \\<and> set p' \\<subseteq> I\n  c \\<noteq> a \\<Longrightarrow>\n  \\<exists>p'. depath E u p' v \\<and> set p' \\<subseteq> I\n\ngoal (1 subgoal):\n 1. \\<exists>dp. depath E u dp v \\<and> set dp \\<subseteq> I", "by auto"], ["proof (state)\nthis:\n  \\<exists>dp. depath E u dp v \\<and> set dp \\<subseteq> I\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>p. depath E u p v \\<and> set p \\<subseteq> I\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma epath_to_depath': \"epath E u p v \\<Longrightarrow> \\<exists>dp. depath E u dp v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. epath E u p v \\<Longrightarrow> \\<exists>dp. depath E u dp v", "using epath_to_depath[where I=\"set p\"]"], ["proof (prove)\nusing this:\n  \\<lbrakk>set ?p \\<subseteq> set p; epath ?E ?u ?p ?v\\<rbrakk>\n  \\<Longrightarrow> \\<exists>dp.\n                       depath ?E ?u dp ?v \\<and> set dp \\<subseteq> set p\n\ngoal (1 subgoal):\n 1. epath E u p v \\<Longrightarrow> \\<exists>dp. depath E u dp v", "by blast"], ["", "definition \"decycle E u p == epath E u p u \\<and> length p > 2 \\<and> distinct p\""], ["", "subsection \"Connectivity in undirected Graphs\""], ["", "definition \"uconnected E \\<equiv> {(u,v). \\<exists>p. epath E u p v}\""], ["", "lemma uconnectedempty: \"uconnected {} = {(a,a)|a. True}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. uconnected {} = {(a, a) |a. True}", "unfolding uconnected_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. {(u, v). \\<exists>p. epath {} u p v} = {(a, a) |a. True}", "using epath.elims(2)"], ["proof (prove)\nusing this:\n  \\<lbrakk>epath ?x ?xa ?xb ?xc;\n   \\<And>E u v.\n      \\<lbrakk>?x = E; ?xa = u; ?xb = []; ?xc = v; u = v\\<rbrakk>\n      \\<Longrightarrow> ?P;\n   \\<And>E u x xs v.\n      \\<lbrakk>?x = E; ?xa = u; ?xb = x # xs; ?xc = v;\n       (\\<exists>w.\n           u \\<noteq> w \\<and> Upair u w = x \\<and> epath E w xs v) \\<and>\n       x \\<in> E\\<rbrakk>\n      \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. {(u, v). \\<exists>p. epath {} u p v} = {(a, a) |a. True}", "by fastforce"], ["", "lemma uconnected_refl: \"refl (uconnected E)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. refl (uconnected E)", "by(auto simp: refl_on_def uconnected_def)"], ["", "lemma uconnected_sym: \"sym (uconnected E)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sym (uconnected E)", "apply(clarsimp simp: sym_def uconnected_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y p. epath E x p y \\<Longrightarrow> \\<exists>p. epath E y p x", "subgoal for x y p"], ["proof (prove)\ngoal (1 subgoal):\n 1. epath E x p y \\<Longrightarrow> \\<exists>p. epath E y p x", "apply (rule exI[where x=\"rev p\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. epath E x p y \\<Longrightarrow> epath E y (rev p) x", "by (auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma uconnected_trans: \"trans (uconnected E)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trans (uconnected E)", "apply(clarsimp simp: trans_def uconnected_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y p z pa.\n       \\<lbrakk>epath E x p y; epath E y pa z\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p. epath E x p z", "subgoal for x y p z q"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>epath E x p y; epath E y q z\\<rbrakk>\n    \\<Longrightarrow> \\<exists>p. epath E x p z", "by (rule exI[where x=\"p@q\"], auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma uconnected_symI: \"(u,v) \\<in> uconnected E \\<Longrightarrow> (v,u) \\<in> uconnected E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u, v) \\<in> uconnected E \\<Longrightarrow> (v, u) \\<in> uconnected E", "using uconnected_sym sym_def"], ["proof (prove)\nusing this:\n  sym (uconnected ?E)\n  sym ?r = (\\<forall>x y. (x, y) \\<in> ?r \\<longrightarrow> (y, x) \\<in> ?r)\n\ngoal (1 subgoal):\n 1. (u, v) \\<in> uconnected E \\<Longrightarrow> (v, u) \\<in> uconnected E", "by fast"], ["", "lemma \"equiv UNIV (uconnected E)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. equiv UNIV (uconnected E)", "apply (rule equivI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. refl (uconnected E)\n 2. sym (uconnected E)\n 3. trans (uconnected E)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. refl (uconnected E)", "by (auto simp: refl_on_def uconnected_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. sym (uconnected E)\n 2. trans (uconnected E)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. sym (uconnected E)", "apply(clarsimp simp: sym_def uconnected_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y p. epath E x p y \\<Longrightarrow> \\<exists>p. epath E y p x", "subgoal for x y p"], ["proof (prove)\ngoal (1 subgoal):\n 1. epath E x p y \\<Longrightarrow> \\<exists>p. epath E y p x", "apply (rule exI[where x=\"rev p\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. epath E x p y \\<Longrightarrow> epath E y (rev p) x", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (1 subgoal):\n 1. trans (uconnected E)", "by (fact uconnected_trans)"], ["", "lemma uconnected_refcl: \"(uconnected E)\\<^sup>* = (uconnected E)\\<^sup>=\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (uconnected E)\\<^sup>* = (uconnected E)\\<^sup>=", "apply(rule trans_rtrancl_eq_reflcl)"], ["proof (prove)\ngoal (1 subgoal):\n 1. trans (uconnected E)", "by (fact uconnected_trans)"], ["", "lemma uconnected_transcl: \"(uconnected E)\\<^sup>* = uconnected E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (uconnected E)\\<^sup>* = uconnected E", "apply (simp only: uconnected_refcl)"], ["proof (prove)\ngoal (1 subgoal):\n 1. (uconnected E)\\<^sup>= = uconnected E", "by (auto simp: uconnected_def)"], ["", "lemma uconnected_mono: \"A\\<subseteq>A' \\<Longrightarrow> uconnected A \\<subseteq> uconnected A'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> A' \\<Longrightarrow>\n    uconnected A \\<subseteq> uconnected A'", "unfolding uconnected_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. A \\<subseteq> A' \\<Longrightarrow>\n    {(u, v). \\<exists>p. epath A u p v}\n    \\<subseteq> {(u, v). \\<exists>p. epath A' u p v}", "apply(auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b p.\n       \\<lbrakk>A \\<subseteq> A'; epath A a p b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p. epath A' a p b", "using epath_mono"], ["proof (prove)\nusing this:\n  \\<lbrakk>?E \\<subseteq> ?E'; epath ?E ?u ?p ?v\\<rbrakk>\n  \\<Longrightarrow> epath ?E' ?u ?p ?v\n\ngoal (1 subgoal):\n 1. \\<And>a b p.\n       \\<lbrakk>A \\<subseteq> A'; epath A a p b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p. epath A' a p b", "by metis"], ["", "lemma findaugmenting_edge: assumes \"epath E1 u p v\"\n  and \"\\<not>(\\<exists>p. epath E2 u p v)\"\nshows \"\\<exists>a b. (a,b) \\<notin> uconnected E2 \\<and> Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a b.\n       (a, b) \\<notin> uconnected E2 \\<and>\n       Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1", "using assms"], ["proof (prove)\nusing this:\n  epath E1 u p v\n  \\<nexists>p. epath E2 u p v\n\ngoal (1 subgoal):\n 1. \\<exists>a b.\n       (a, b) \\<notin> uconnected E2 \\<and>\n       Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1", "proof (induct p arbitrary: u)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>u.\n       \\<lbrakk>epath E1 u [] v; \\<nexists>p. epath E2 u p v\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a b.\n                            (a, b) \\<notin> uconnected E2 \\<and>\n                            Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1\n 2. \\<And>a p u.\n       \\<lbrakk>\\<And>u.\n                   \\<lbrakk>epath E1 u p v;\n                    \\<nexists>p. epath E2 u p v\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>a b.\n  (a, b) \\<notin> uconnected E2 \\<and>\n  Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1;\n        epath E1 u (a # p) v; \\<nexists>p. epath E2 u p v\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a b.\n                            (a, b) \\<notin> uconnected E2 \\<and>\n                            Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1", "case Nil"], ["proof (state)\nthis:\n  epath E1 u [] v\n  \\<nexists>p. epath E2 u p v\n\ngoal (2 subgoals):\n 1. \\<And>u.\n       \\<lbrakk>epath E1 u [] v; \\<nexists>p. epath E2 u p v\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a b.\n                            (a, b) \\<notin> uconnected E2 \\<and>\n                            Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1\n 2. \\<And>a p u.\n       \\<lbrakk>\\<And>u.\n                   \\<lbrakk>epath E1 u p v;\n                    \\<nexists>p. epath E2 u p v\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>a b.\n  (a, b) \\<notin> uconnected E2 \\<and>\n  Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1;\n        epath E1 u (a # p) v; \\<nexists>p. epath E2 u p v\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a b.\n                            (a, b) \\<notin> uconnected E2 \\<and>\n                            Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1", "then"], ["proof (chain)\npicking this:\n  epath E1 u [] v\n  \\<nexists>p. epath E2 u p v", "show ?case"], ["proof (prove)\nusing this:\n  epath E1 u [] v\n  \\<nexists>p. epath E2 u p v\n\ngoal (1 subgoal):\n 1. \\<exists>a b.\n       (a, b) \\<notin> uconnected E2 \\<and>\n       Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1", "by auto"], ["proof (state)\nthis:\n  \\<exists>a b.\n     (a, b) \\<notin> uconnected E2 \\<and>\n     Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1\n\ngoal (1 subgoal):\n 1. \\<And>a p u.\n       \\<lbrakk>\\<And>u.\n                   \\<lbrakk>epath E1 u p v;\n                    \\<nexists>p. epath E2 u p v\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>a b.\n  (a, b) \\<notin> uconnected E2 \\<and>\n  Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1;\n        epath E1 u (a # p) v; \\<nexists>p. epath E2 u p v\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a b.\n                            (a, b) \\<notin> uconnected E2 \\<and>\n                            Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a p u.\n       \\<lbrakk>\\<And>u.\n                   \\<lbrakk>epath E1 u p v;\n                    \\<nexists>p. epath E2 u p v\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>a b.\n  (a, b) \\<notin> uconnected E2 \\<and>\n  Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1;\n        epath E1 u (a # p) v; \\<nexists>p. epath E2 u p v\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a b.\n                            (a, b) \\<notin> uconnected E2 \\<and>\n                            Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1", "case (Cons a p)"], ["proof (state)\nthis:\n  \\<lbrakk>epath E1 ?u p v; \\<nexists>p. epath E2 ?u p v\\<rbrakk>\n  \\<Longrightarrow> \\<exists>a b.\n                       (a, b) \\<notin> uconnected E2 \\<and>\n                       Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1\n  epath E1 u (a # p) v\n  \\<nexists>p. epath E2 u p v\n\ngoal (1 subgoal):\n 1. \\<And>a p u.\n       \\<lbrakk>\\<And>u.\n                   \\<lbrakk>epath E1 u p v;\n                    \\<nexists>p. epath E2 u p v\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>a b.\n  (a, b) \\<notin> uconnected E2 \\<and>\n  Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1;\n        epath E1 u (a # p) v; \\<nexists>p. epath E2 u p v\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a b.\n                            (a, b) \\<notin> uconnected E2 \\<and>\n                            Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1", "then"], ["proof (chain)\npicking this:\n  \\<lbrakk>epath E1 ?u p v; \\<nexists>p. epath E2 ?u p v\\<rbrakk>\n  \\<Longrightarrow> \\<exists>a b.\n                       (a, b) \\<notin> uconnected E2 \\<and>\n                       Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1\n  epath E1 u (a # p) v\n  \\<nexists>p. epath E2 u p v", "obtain w where axy: \"a=Upair u w\" \"u\\<noteq>w\" and e': \"epath E1 w p v\"\n      and uwE1: \"Upair u w \\<in> E1\""], ["proof (prove)\nusing this:\n  \\<lbrakk>epath E1 ?u p v; \\<nexists>p. epath E2 ?u p v\\<rbrakk>\n  \\<Longrightarrow> \\<exists>a b.\n                       (a, b) \\<notin> uconnected E2 \\<and>\n                       Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1\n  epath E1 u (a # p) v\n  \\<nexists>p. epath E2 u p v\n\ngoal (1 subgoal):\n 1. (\\<And>w.\n        \\<lbrakk>a = Upair u w; u \\<noteq> w; epath E1 w p v;\n         Upair u w \\<in> E1\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  a = Upair u w\n  u \\<noteq> w\n  epath E1 w p v\n  Upair u w \\<in> E1\n\ngoal (1 subgoal):\n 1. \\<And>a p u.\n       \\<lbrakk>\\<And>u.\n                   \\<lbrakk>epath E1 u p v;\n                    \\<nexists>p. epath E2 u p v\\<rbrakk>\n                   \\<Longrightarrow> \\<exists>a b.\n  (a, b) \\<notin> uconnected E2 \\<and>\n  Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1;\n        epath E1 u (a # p) v; \\<nexists>p. epath E2 u p v\\<rbrakk>\n       \\<Longrightarrow> \\<exists>a b.\n                            (a, b) \\<notin> uconnected E2 \\<and>\n                            Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1", "show ?case"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<exists>a b.\n       (a, b) \\<notin> uconnected E2 \\<and>\n       Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1", "proof (cases \"a\\<in>E2\")"], ["proof (state)\ngoal (2 subgoals):\n 1. a \\<in> E2 \\<Longrightarrow>\n    \\<exists>a b.\n       (a, b) \\<notin> uconnected E2 \\<and>\n       Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1\n 2. a \\<notin> E2 \\<Longrightarrow>\n    \\<exists>a b.\n       (a, b) \\<notin> uconnected E2 \\<and>\n       Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1", "case True"], ["proof (state)\nthis:\n  a \\<in> E2\n\ngoal (2 subgoals):\n 1. a \\<in> E2 \\<Longrightarrow>\n    \\<exists>a b.\n       (a, b) \\<notin> uconnected E2 \\<and>\n       Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1\n 2. a \\<notin> E2 \\<Longrightarrow>\n    \\<exists>a b.\n       (a, b) \\<notin> uconnected E2 \\<and>\n       Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1", "have e2': \"\\<not>(\\<exists>p. epath E2 w p v)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nexists>p. epath E2 w p v", "proof (rule ccontr, clarsimp)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p. epath E2 w p v \\<Longrightarrow> False", "fix p2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p. epath E2 w p v \\<Longrightarrow> False", "assume \"epath E2 w p2 v\""], ["proof (state)\nthis:\n  epath E2 w p2 v\n\ngoal (1 subgoal):\n 1. \\<And>p. epath E2 w p v \\<Longrightarrow> False", "with True axy"], ["proof (chain)\npicking this:\n  a \\<in> E2\n  a = Upair u w\n  u \\<noteq> w\n  epath E2 w p2 v", "have \"epath E2 u (a#p2) v\""], ["proof (prove)\nusing this:\n  a \\<in> E2\n  a = Upair u w\n  u \\<noteq> w\n  epath E2 w p2 v\n\ngoal (1 subgoal):\n 1. epath E2 u (a # p2) v", "by auto"], ["proof (state)\nthis:\n  epath E2 u (a # p2) v\n\ngoal (1 subgoal):\n 1. \\<And>p. epath E2 w p v \\<Longrightarrow> False", "with Cons(3)"], ["proof (chain)\npicking this:\n  \\<nexists>p. epath E2 u p v\n  epath E2 u (a # p2) v", "show False"], ["proof (prove)\nusing this:\n  \\<nexists>p. epath E2 u p v\n  epath E2 u (a # p2) v\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<nexists>p. epath E2 w p v\n\ngoal (2 subgoals):\n 1. a \\<in> E2 \\<Longrightarrow>\n    \\<exists>a b.\n       (a, b) \\<notin> uconnected E2 \\<and>\n       Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1\n 2. a \\<notin> E2 \\<Longrightarrow>\n    \\<exists>a b.\n       (a, b) \\<notin> uconnected E2 \\<and>\n       Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1", "from Cons(1)[OF e' e2']"], ["proof (chain)\npicking this:\n  \\<exists>a b.\n     (a, b) \\<notin> uconnected E2 \\<and>\n     Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>a b.\n     (a, b) \\<notin> uconnected E2 \\<and>\n     Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1\n\ngoal (1 subgoal):\n 1. \\<exists>a b.\n       (a, b) \\<notin> uconnected E2 \\<and>\n       Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1", "."], ["proof (state)\nthis:\n  \\<exists>a b.\n     (a, b) \\<notin> uconnected E2 \\<and>\n     Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1\n\ngoal (1 subgoal):\n 1. a \\<notin> E2 \\<Longrightarrow>\n    \\<exists>a b.\n       (a, b) \\<notin> uconnected E2 \\<and>\n       Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. a \\<notin> E2 \\<Longrightarrow>\n    \\<exists>a b.\n       (a, b) \\<notin> uconnected E2 \\<and>\n       Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1", "case False"], ["proof (state)\nthis:\n  a \\<notin> E2\n\ngoal (1 subgoal):\n 1. a \\<notin> E2 \\<Longrightarrow>\n    \\<exists>a b.\n       (a, b) \\<notin> uconnected E2 \\<and>\n       Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1", "{"], ["proof (state)\nthis:\n  a \\<notin> E2\n\ngoal (1 subgoal):\n 1. a \\<notin> E2 \\<Longrightarrow>\n    \\<exists>a b.\n       (a, b) \\<notin> uconnected E2 \\<and>\n       Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1", "assume e2': \"\\<not>(\\<exists>p. epath E2 w p v)\""], ["proof (state)\nthis:\n  \\<nexists>p. epath E2 w p v\n\ngoal (1 subgoal):\n 1. a \\<notin> E2 \\<Longrightarrow>\n    \\<exists>a b.\n       (a, b) \\<notin> uconnected E2 \\<and>\n       Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1", "from Cons(1)[OF e' e2']"], ["proof (chain)\npicking this:\n  \\<exists>a b.\n     (a, b) \\<notin> uconnected E2 \\<and>\n     Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1", "have ?thesis"], ["proof (prove)\nusing this:\n  \\<exists>a b.\n     (a, b) \\<notin> uconnected E2 \\<and>\n     Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1\n\ngoal (1 subgoal):\n 1. \\<exists>a b.\n       (a, b) \\<notin> uconnected E2 \\<and>\n       Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1", "."], ["proof (state)\nthis:\n  \\<exists>a b.\n     (a, b) \\<notin> uconnected E2 \\<and>\n     Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1\n\ngoal (1 subgoal):\n 1. a \\<notin> E2 \\<Longrightarrow>\n    \\<exists>a b.\n       (a, b) \\<notin> uconnected E2 \\<and>\n       Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1", "}"], ["proof (state)\nthis:\n  \\<nexists>p. epath E2 w p v \\<Longrightarrow>\n  \\<exists>a b.\n     (a, b) \\<notin> uconnected E2 \\<and>\n     Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1\n\ngoal (1 subgoal):\n 1. a \\<notin> E2 \\<Longrightarrow>\n    \\<exists>a b.\n       (a, b) \\<notin> uconnected E2 \\<and>\n       Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1", "moreover"], ["proof (state)\nthis:\n  \\<nexists>p. epath E2 w p v \\<Longrightarrow>\n  \\<exists>a b.\n     (a, b) \\<notin> uconnected E2 \\<and>\n     Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1\n\ngoal (1 subgoal):\n 1. a \\<notin> E2 \\<Longrightarrow>\n    \\<exists>a b.\n       (a, b) \\<notin> uconnected E2 \\<and>\n       Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1", "{"], ["proof (state)\nthis:\n  \\<nexists>p. epath E2 w p v \\<Longrightarrow>\n  \\<exists>a b.\n     (a, b) \\<notin> uconnected E2 \\<and>\n     Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1\n\ngoal (1 subgoal):\n 1. a \\<notin> E2 \\<Longrightarrow>\n    \\<exists>a b.\n       (a, b) \\<notin> uconnected E2 \\<and>\n       Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1", "assume e2': \"\\<exists>p. epath E2 w p v\""], ["proof (state)\nthis:\n  \\<exists>p. epath E2 w p v\n\ngoal (1 subgoal):\n 1. a \\<notin> E2 \\<Longrightarrow>\n    \\<exists>a b.\n       (a, b) \\<notin> uconnected E2 \\<and>\n       Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1", "then"], ["proof (chain)\npicking this:\n  \\<exists>p. epath E2 w p v", "obtain p1 where p1: \"epath E2 w p1 v\""], ["proof (prove)\nusing this:\n  \\<exists>p. epath E2 w p v\n\ngoal (1 subgoal):\n 1. (\\<And>p1. epath E2 w p1 v \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  epath E2 w p1 v\n\ngoal (1 subgoal):\n 1. a \\<notin> E2 \\<Longrightarrow>\n    \\<exists>a b.\n       (a, b) \\<notin> uconnected E2 \\<and>\n       Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1", "from False axy"], ["proof (chain)\npicking this:\n  a \\<notin> E2\n  a = Upair u w\n  u \\<noteq> w", "have \"Upair u w\\<notin>E2\""], ["proof (prove)\nusing this:\n  a \\<notin> E2\n  a = Upair u w\n  u \\<noteq> w\n\ngoal (1 subgoal):\n 1. Upair u w \\<notin> E2", "by auto"], ["proof (state)\nthis:\n  Upair u w \\<notin> E2\n\ngoal (1 subgoal):\n 1. a \\<notin> E2 \\<Longrightarrow>\n    \\<exists>a b.\n       (a, b) \\<notin> uconnected E2 \\<and>\n       Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1", "moreover"], ["proof (state)\nthis:\n  Upair u w \\<notin> E2\n\ngoal (1 subgoal):\n 1. a \\<notin> E2 \\<Longrightarrow>\n    \\<exists>a b.\n       (a, b) \\<notin> uconnected E2 \\<and>\n       Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1", "have \"(u,w) \\<notin> uconnected E2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u, w) \\<notin> uconnected E2", "proof(rule ccontr, auto simp add: uconnected_def)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p. epath E2 u p w \\<Longrightarrow> False", "fix p2"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p. epath E2 u p w \\<Longrightarrow> False", "assume \"epath E2 u p2 w\""], ["proof (state)\nthis:\n  epath E2 u p2 w\n\ngoal (1 subgoal):\n 1. \\<And>p. epath E2 u p w \\<Longrightarrow> False", "with p1"], ["proof (chain)\npicking this:\n  epath E2 w p1 v\n  epath E2 u p2 w", "have \"epath E2 u (p2@p1) v\""], ["proof (prove)\nusing this:\n  epath E2 w p1 v\n  epath E2 u p2 w\n\ngoal (1 subgoal):\n 1. epath E2 u (p2 @ p1) v", "by auto"], ["proof (state)\nthis:\n  epath E2 u (p2 @ p1) v\n\ngoal (1 subgoal):\n 1. \\<And>p. epath E2 u p w \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  epath E2 u (p2 @ p1) v", "show \"False\""], ["proof (prove)\nusing this:\n  epath E2 u (p2 @ p1) v\n\ngoal (1 subgoal):\n 1. False", "using Cons(3)"], ["proof (prove)\nusing this:\n  epath E2 u (p2 @ p1) v\n  \\<nexists>p. epath E2 u p v\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (u, w) \\<notin> uconnected E2\n\ngoal (1 subgoal):\n 1. a \\<notin> E2 \\<Longrightarrow>\n    \\<exists>a b.\n       (a, b) \\<notin> uconnected E2 \\<and>\n       Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1", "moreover"], ["proof (state)\nthis:\n  (u, w) \\<notin> uconnected E2\n\ngoal (1 subgoal):\n 1. a \\<notin> E2 \\<Longrightarrow>\n    \\<exists>a b.\n       (a, b) \\<notin> uconnected E2 \\<and>\n       Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1", "note uwE1"], ["proof (state)\nthis:\n  Upair u w \\<in> E1\n\ngoal (1 subgoal):\n 1. a \\<notin> E2 \\<Longrightarrow>\n    \\<exists>a b.\n       (a, b) \\<notin> uconnected E2 \\<and>\n       Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1", "ultimately"], ["proof (chain)\npicking this:\n  Upair u w \\<notin> E2\n  (u, w) \\<notin> uconnected E2\n  Upair u w \\<in> E1", "have ?thesis"], ["proof (prove)\nusing this:\n  Upair u w \\<notin> E2\n  (u, w) \\<notin> uconnected E2\n  Upair u w \\<in> E1\n\ngoal (1 subgoal):\n 1. \\<exists>a b.\n       (a, b) \\<notin> uconnected E2 \\<and>\n       Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1", "by auto"], ["proof (state)\nthis:\n  \\<exists>a b.\n     (a, b) \\<notin> uconnected E2 \\<and>\n     Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1\n\ngoal (1 subgoal):\n 1. a \\<notin> E2 \\<Longrightarrow>\n    \\<exists>a b.\n       (a, b) \\<notin> uconnected E2 \\<and>\n       Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1", "}"], ["proof (state)\nthis:\n  \\<exists>p. epath E2 w p v \\<Longrightarrow>\n  \\<exists>a b.\n     (a, b) \\<notin> uconnected E2 \\<and>\n     Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1\n\ngoal (1 subgoal):\n 1. a \\<notin> E2 \\<Longrightarrow>\n    \\<exists>a b.\n       (a, b) \\<notin> uconnected E2 \\<and>\n       Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1", "ultimately"], ["proof (chain)\npicking this:\n  \\<nexists>p. epath E2 w p v \\<Longrightarrow>\n  \\<exists>a b.\n     (a, b) \\<notin> uconnected E2 \\<and>\n     Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1\n  \\<exists>p. epath E2 w p v \\<Longrightarrow>\n  \\<exists>a b.\n     (a, b) \\<notin> uconnected E2 \\<and>\n     Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1", "show ?thesis"], ["proof (prove)\nusing this:\n  \\<nexists>p. epath E2 w p v \\<Longrightarrow>\n  \\<exists>a b.\n     (a, b) \\<notin> uconnected E2 \\<and>\n     Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1\n  \\<exists>p. epath E2 w p v \\<Longrightarrow>\n  \\<exists>a b.\n     (a, b) \\<notin> uconnected E2 \\<and>\n     Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1\n\ngoal (1 subgoal):\n 1. \\<exists>a b.\n       (a, b) \\<notin> uconnected E2 \\<and>\n       Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1", "by auto"], ["proof (state)\nthis:\n  \\<exists>a b.\n     (a, b) \\<notin> uconnected E2 \\<and>\n     Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  \\<exists>a b.\n     (a, b) \\<notin> uconnected E2 \\<and>\n     Upair a b \\<notin> E2 \\<and> Upair a b \\<in> E1\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \"Forest\""], ["", "definition \"forest E \\<equiv> ~(\\<exists>u p. decycle E u p)\""], ["", "lemma forest_mono: \"Y \\<subseteq> X \\<Longrightarrow> forest X \\<Longrightarrow> forest Y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Y \\<subseteq> X; forest X\\<rbrakk> \\<Longrightarrow> forest Y", "unfolding forest_def decycle_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>Y \\<subseteq> X;\n     \\<nexists>u p.\n        epath X u p u \\<and> 2 < length p \\<and> distinct p\\<rbrakk>\n    \\<Longrightarrow> \\<nexists>u p.\n                         epath Y u p u \\<and> 2 < length p \\<and> distinct p", "apply (auto)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>u p.\n       \\<lbrakk>Y \\<subseteq> X;\n        \\<forall>u p.\n           2 < length p \\<longrightarrow>\n           epath X u p u \\<longrightarrow> \\<not> distinct p;\n        2 < length p; epath Y u p u; distinct p\\<rbrakk>\n       \\<Longrightarrow> False", "using epath_mono"], ["proof (prove)\nusing this:\n  \\<lbrakk>?E \\<subseteq> ?E'; epath ?E ?u ?p ?v\\<rbrakk>\n  \\<Longrightarrow> epath ?E' ?u ?p ?v\n\ngoal (1 subgoal):\n 1. \\<And>u p.\n       \\<lbrakk>Y \\<subseteq> X;\n        \\<forall>u p.\n           2 < length p \\<longrightarrow>\n           epath X u p u \\<longrightarrow> \\<not> distinct p;\n        2 < length p; epath Y u p u; distinct p\\<rbrakk>\n       \\<Longrightarrow> False", "by metis"], ["", "lemma forrest2_E: assumes \"(u,v) \\<in> uconnected E\"\n  and \"Upair u v \\<notin> E\"                    \n  and \"u \\<noteq> v\" \nshows \"~ forest (insert (Upair u v) E)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<not> forest (insert (Upair u v) E)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> forest (insert (Upair u v) E)", "from assms[unfolded uconnected_def]"], ["proof (chain)\npicking this:\n  (u, v) \\<in> {(u, v). \\<exists>p. epath E u p v}\n  Upair u v \\<notin> E\n  u \\<noteq> v", "obtain p' where \"epath E u p' v\""], ["proof (prove)\nusing this:\n  (u, v) \\<in> {(u, v). \\<exists>p. epath E u p v}\n  Upair u v \\<notin> E\n  u \\<noteq> v\n\ngoal (1 subgoal):\n 1. (\\<And>p'. epath E u p' v \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  epath E u p' v\n\ngoal (1 subgoal):\n 1. \\<not> forest (insert (Upair u v) E)", "then"], ["proof (chain)\npicking this:\n  epath E u p' v", "obtain p where ep: \"epath E u p v\" and dep: \"distinct p\""], ["proof (prove)\nusing this:\n  epath E u p' v\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>epath E u p v; distinct p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using epath_to_depath'"], ["proof (prove)\nusing this:\n  epath E u p' v\n  epath ?E ?u ?p ?v \\<Longrightarrow> \\<exists>dp. depath ?E ?u dp ?v\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>epath E u p v; distinct p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding depath_def"], ["proof (prove)\nusing this:\n  epath E u p' v\n  epath ?E ?u ?p ?v \\<Longrightarrow>\n  \\<exists>dp. epath ?E ?u dp ?v \\<and> distinct dp\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>epath E u p v; distinct p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by fast"], ["proof (state)\nthis:\n  epath E u p v\n  distinct p\n\ngoal (1 subgoal):\n 1. \\<not> forest (insert (Upair u v) E)", "from ep"], ["proof (chain)\npicking this:\n  epath E u p v", "have setp: \"set p \\<subseteq> E\""], ["proof (prove)\nusing this:\n  epath E u p v\n\ngoal (1 subgoal):\n 1. set p \\<subseteq> E", "using epath_subset_E"], ["proof (prove)\nusing this:\n  epath E u p v\n  epath ?E ?u ?p ?v \\<Longrightarrow> set ?p \\<subseteq> ?E\n\ngoal (1 subgoal):\n 1. set p \\<subseteq> E", "by fast"], ["proof (state)\nthis:\n  set p \\<subseteq> E\n\ngoal (1 subgoal):\n 1. \\<not> forest (insert (Upair u v) E)", "have lengthp: \"length p \\<ge> 2\""], ["proof (prove)\ngoal (1 subgoal):\n 1. 2 \\<le> length p", "apply(rule epath_not_direct)"], ["proof (prove)\ngoal (3 subgoals):\n 1. epath ?E ?u p ?v\n 2. ?u \\<noteq> ?v\n 3. Upair ?u ?v \\<notin> ?E", "by fact+"], ["proof (state)\nthis:\n  2 \\<le> length p\n\ngoal (1 subgoal):\n 1. \\<not> forest (insert (Upair u v) E)", "from epath_mono[OF _ ep]"], ["proof (chain)\npicking this:\n  E \\<subseteq> ?E' \\<Longrightarrow> epath ?E' u p v", "have ep': \"epath (insert (Upair u v) E) u p v\""], ["proof (prove)\nusing this:\n  E \\<subseteq> ?E' \\<Longrightarrow> epath ?E' u p v\n\ngoal (1 subgoal):\n 1. epath (insert (Upair u v) E) u p v", "by auto"], ["proof (state)\nthis:\n  epath (insert (Upair u v) E) u p v\n\ngoal (1 subgoal):\n 1. \\<not> forest (insert (Upair u v) E)", "have \"epath (insert (Upair u v) E) v ((Upair u v)#p) v\" \"length ((Upair u v)#p) > 2\"  \"distinct ((Upair u v)#p)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. epath (insert (Upair u v) E) v (Upair u v # p) v &&&\n    2 < length (Upair u v # p) &&& distinct (Upair u v # p)", "using ep' assms(3) lengthp dep setp assms(2)"], ["proof (prove)\nusing this:\n  epath (insert (Upair u v) E) u p v\n  u \\<noteq> v\n  2 \\<le> length p\n  distinct p\n  set p \\<subseteq> E\n  Upair u v \\<notin> E\n\ngoal (1 subgoal):\n 1. epath (insert (Upair u v) E) v (Upair u v # p) v &&&\n    2 < length (Upair u v # p) &&& distinct (Upair u v # p)", "by auto"], ["proof (state)\nthis:\n  epath (insert (Upair u v) E) v (Upair u v # p) v\n  2 < length (Upair u v # p)\n  distinct (Upair u v # p)\n\ngoal (1 subgoal):\n 1. \\<not> forest (insert (Upair u v) E)", "then"], ["proof (chain)\npicking this:\n  epath (insert (Upair u v) E) v (Upair u v # p) v\n  2 < length (Upair u v # p)\n  distinct (Upair u v # p)", "have \"decycle (insert (Upair u v) E) v ((Upair u v)#p)\""], ["proof (prove)\nusing this:\n  epath (insert (Upair u v) E) v (Upair u v # p) v\n  2 < length (Upair u v # p)\n  distinct (Upair u v # p)\n\ngoal (1 subgoal):\n 1. decycle (insert (Upair u v) E) v (Upair u v # p)", "unfolding decycle_def"], ["proof (prove)\nusing this:\n  epath (insert (Upair u v) E) v (Upair u v # p) v\n  2 < length (Upair u v # p)\n  distinct (Upair u v # p)\n\ngoal (1 subgoal):\n 1. epath (insert (Upair u v) E) v (Upair u v # p) v \\<and>\n    2 < length (Upair u v # p) \\<and> distinct (Upair u v # p)", "by auto"], ["proof (state)\nthis:\n  decycle (insert (Upair u v) E) v (Upair u v # p)\n\ngoal (1 subgoal):\n 1. \\<not> forest (insert (Upair u v) E)", "then"], ["proof (chain)\npicking this:\n  decycle (insert (Upair u v) E) v (Upair u v # p)", "show ?thesis"], ["proof (prove)\nusing this:\n  decycle (insert (Upair u v) E) v (Upair u v # p)\n\ngoal (1 subgoal):\n 1. \\<not> forest (insert (Upair u v) E)", "unfolding forest_def"], ["proof (prove)\nusing this:\n  decycle (insert (Upair u v) E) v (Upair u v # p)\n\ngoal (1 subgoal):\n 1. \\<not> (\\<nexists>ua p. decycle (insert (Upair u v) E) ua p)", "by auto"], ["proof (state)\nthis:\n  \\<not> forest (insert (Upair u v) E)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma insert_stays_forest_means_not_connected: assumes \"forest (insert (Upair u v) E)\"\n  and \"(Upair u v) \\<notin> E\"\n  and \"u \\<noteq> v\"\nshows \"~ (u,v) \\<in> uconnected E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u, v) \\<notin> uconnected E", "using forrest2_E assms"], ["proof (prove)\nusing this:\n  \\<lbrakk>(?u, ?v) \\<in> uconnected ?E; Upair ?u ?v \\<notin> ?E;\n   ?u \\<noteq> ?v\\<rbrakk>\n  \\<Longrightarrow> \\<not> forest (insert (Upair ?u ?v) ?E)\n  forest (insert (Upair u v) E)\n  Upair u v \\<notin> E\n  u \\<noteq> v\n\ngoal (1 subgoal):\n 1. (u, v) \\<notin> uconnected E", "by metis"], ["", "lemma epath_singleton: \"epath F a [e] b \\<Longrightarrow> e = Upair a b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. epath F a [e] b \\<Longrightarrow> e = Upair a b", "by auto"], ["", "lemma forest_alt1: \n  assumes \" Upair a b \\<in> F\" \"forest F\" \"\\<And>e. e\\<in>F \\<Longrightarrow> proper_uprod e\"\n  shows \"(a,b) \\<notin>  uconnected (F - {Upair a b})\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a, b) \\<notin> uconnected (F - {Upair a b})", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> (a, b) \\<notin> uconnected (F - {Upair a b}) \\<Longrightarrow>\n    False", "from assms(1,3)"], ["proof (chain)\npicking this:\n  Upair a b \\<in> F\n  ?e \\<in> F \\<Longrightarrow> proper_uprod ?e", "have anb: \"a\\<noteq>b\""], ["proof (prove)\nusing this:\n  Upair a b \\<in> F\n  ?e \\<in> F \\<Longrightarrow> proper_uprod ?e\n\ngoal (1 subgoal):\n 1. a \\<noteq> b", "by force"], ["proof (state)\nthis:\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. \\<not> (a, b) \\<notin> uconnected (F - {Upair a b}) \\<Longrightarrow>\n    False", "assume \"\\<not> (a, b) \\<notin> uconnected (F - {Upair a b})\""], ["proof (state)\nthis:\n  \\<not> (a, b) \\<notin> uconnected (F - {Upair a b})\n\ngoal (1 subgoal):\n 1. \\<not> (a, b) \\<notin> uconnected (F - {Upair a b}) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  \\<not> (a, b) \\<notin> uconnected (F - {Upair a b})", "obtain p where \"epath (F - {Upair a b}) a p b\""], ["proof (prove)\nusing this:\n  \\<not> (a, b) \\<notin> uconnected (F - {Upair a b})\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        epath (F - {Upair a b}) a p b \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding uconnected_def"], ["proof (prove)\nusing this:\n  \\<not> (a, b) \\<notin> {(u, v). \\<exists>p. epath (F - {Upair a b}) u p v}\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        epath (F - {Upair a b}) a p b \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  epath (F - {Upair a b}) a p b\n\ngoal (1 subgoal):\n 1. \\<not> (a, b) \\<notin> uconnected (F - {Upair a b}) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  epath (F - {Upair a b}) a p b", "obtain p' where dp: \"depath (F - {Upair a b}) a p' b\""], ["proof (prove)\nusing this:\n  epath (F - {Upair a b}) a p b\n\ngoal (1 subgoal):\n 1. (\\<And>p'.\n        depath (F - {Upair a b}) a p' b \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "using epath_to_depath'"], ["proof (prove)\nusing this:\n  epath (F - {Upair a b}) a p b\n  epath ?E ?u ?p ?v \\<Longrightarrow> \\<exists>dp. depath ?E ?u dp ?v\n\ngoal (1 subgoal):\n 1. (\\<And>p'.\n        depath (F - {Upair a b}) a p' b \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by force"], ["proof (state)\nthis:\n  depath (F - {Upair a b}) a p' b\n\ngoal (1 subgoal):\n 1. \\<not> (a, b) \\<notin> uconnected (F - {Upair a b}) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  depath (F - {Upair a b}) a p' b", "have ab: \"Upair a b \\<notin> set p'\""], ["proof (prove)\nusing this:\n  depath (F - {Upair a b}) a p' b\n\ngoal (1 subgoal):\n 1. Upair a b \\<notin> set p'", "by(auto simp: depath_def dest: epath_subset_E)"], ["proof (state)\nthis:\n  Upair a b \\<notin> set p'\n\ngoal (1 subgoal):\n 1. \\<not> (a, b) \\<notin> uconnected (F - {Upair a b}) \\<Longrightarrow>\n    False", "from anb dp"], ["proof (chain)\npicking this:\n  a \\<noteq> b\n  depath (F - {Upair a b}) a p' b", "have n0: \"length p' \\<noteq> 0\""], ["proof (prove)\nusing this:\n  a \\<noteq> b\n  depath (F - {Upair a b}) a p' b\n\ngoal (1 subgoal):\n 1. length p' \\<noteq> 0", "by (auto simp: depath_def)"], ["proof (state)\nthis:\n  length p' \\<noteq> 0\n\ngoal (1 subgoal):\n 1. \\<not> (a, b) \\<notin> uconnected (F - {Upair a b}) \\<Longrightarrow>\n    False", "from ab dp"], ["proof (chain)\npicking this:\n  Upair a b \\<notin> set p'\n  depath (F - {Upair a b}) a p' b", "have n1: \"length p' \\<noteq> 1\""], ["proof (prove)\nusing this:\n  Upair a b \\<notin> set p'\n  depath (F - {Upair a b}) a p' b\n\ngoal (1 subgoal):\n 1. length p' \\<noteq> 1", "by (auto simp: depath_def simp del: One_nat_def dest!: list_decomp_1)"], ["proof (state)\nthis:\n  length p' \\<noteq> 1\n\ngoal (1 subgoal):\n 1. \\<not> (a, b) \\<notin> uconnected (F - {Upair a b}) \\<Longrightarrow>\n    False", "from n0 n1"], ["proof (chain)\npicking this:\n  length p' \\<noteq> 0\n  length p' \\<noteq> 1", "have l: \"length p' \\<ge> 2\""], ["proof (prove)\nusing this:\n  length p' \\<noteq> 0\n  length p' \\<noteq> 1\n\ngoal (1 subgoal):\n 1. 2 \\<le> length p'", "by linarith"], ["proof (state)\nthis:\n  2 \\<le> length p'\n\ngoal (1 subgoal):\n 1. \\<not> (a, b) \\<notin> uconnected (F - {Upair a b}) \\<Longrightarrow>\n    False", "from dp"], ["proof (chain)\npicking this:\n  depath (F - {Upair a b}) a p' b", "have \"epath F a p' b\""], ["proof (prove)\nusing this:\n  depath (F - {Upair a b}) a p' b\n\ngoal (1 subgoal):\n 1. epath F a p' b", "by (auto intro: epath_mono simp: depath_def)"], ["proof (state)\nthis:\n  epath F a p' b\n\ngoal (1 subgoal):\n 1. \\<not> (a, b) \\<notin> uconnected (F - {Upair a b}) \\<Longrightarrow>\n    False", "then"], ["proof (chain)\npicking this:\n  epath F a p' b", "have e: \"epath F b (Upair a b#p') b\""], ["proof (prove)\nusing this:\n  epath F a p' b\n\ngoal (1 subgoal):\n 1. epath F b (Upair a b # p') b", "using assms(1) anb"], ["proof (prove)\nusing this:\n  epath F a p' b\n  Upair a b \\<in> F\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. epath F b (Upair a b # p') b", "by auto"], ["proof (state)\nthis:\n  epath F b (Upair a b # p') b\n\ngoal (1 subgoal):\n 1. \\<not> (a, b) \\<notin> uconnected (F - {Upair a b}) \\<Longrightarrow>\n    False", "from dp ab"], ["proof (chain)\npicking this:\n  depath (F - {Upair a b}) a p' b\n  Upair a b \\<notin> set p'", "have d: \"distinct (Upair a b#p')\""], ["proof (prove)\nusing this:\n  depath (F - {Upair a b}) a p' b\n  Upair a b \\<notin> set p'\n\ngoal (1 subgoal):\n 1. distinct (Upair a b # p')", "by (auto simp: depath_def)"], ["proof (state)\nthis:\n  distinct (Upair a b # p')\n\ngoal (1 subgoal):\n 1. \\<not> (a, b) \\<notin> uconnected (F - {Upair a b}) \\<Longrightarrow>\n    False", "from d e l"], ["proof (chain)\npicking this:\n  distinct (Upair a b # p')\n  epath F b (Upair a b # p') b\n  2 \\<le> length p'", "have \"decycle F b (Upair a b#p')\""], ["proof (prove)\nusing this:\n  distinct (Upair a b # p')\n  epath F b (Upair a b # p') b\n  2 \\<le> length p'\n\ngoal (1 subgoal):\n 1. decycle F b (Upair a b # p')", "by (auto simp: decycle_def)"], ["proof (state)\nthis:\n  decycle F b (Upair a b # p')\n\ngoal (1 subgoal):\n 1. \\<not> (a, b) \\<notin> uconnected (F - {Upair a b}) \\<Longrightarrow>\n    False", "with assms(2)"], ["proof (chain)\npicking this:\n  forest F\n  decycle F b (Upair a b # p')", "show \"False\""], ["proof (prove)\nusing this:\n  forest F\n  decycle F b (Upair a b # p')\n\ngoal (1 subgoal):\n 1. False", "by (simp add: forest_def)"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma forest_alt2: \n  assumes \"\\<And>e. e\\<in>F \\<Longrightarrow> proper_uprod e\"\n    and \"\\<And>a b. Upair a b \\<in> F \\<Longrightarrow> (a,b) \\<notin>  uconnected (F - {Upair a b})\"\n  shows \"forest F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. forest F", "proof (rule ccontr)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<not> forest F \\<Longrightarrow> False", "assume \"\\<not> forest F\""], ["proof (state)\nthis:\n  \\<not> forest F\n\ngoal (1 subgoal):\n 1. \\<not> forest F \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  \\<not> forest F", "obtain a p where e: \"epath F a p a\" \"length p > 2\" \"distinct p\""], ["proof (prove)\nusing this:\n  \\<not> forest F\n\ngoal (1 subgoal):\n 1. (\\<And>a p.\n        \\<lbrakk>epath F a p a; 2 < length p; distinct p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding decycle_def forest_def"], ["proof (prove)\nusing this:\n  \\<not> (\\<nexists>u p.\n             epath F u p u \\<and> 2 < length p \\<and> distinct p)\n\ngoal (1 subgoal):\n 1. (\\<And>a p.\n        \\<lbrakk>epath F a p a; 2 < length p; distinct p\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  epath F a p a\n  2 < length p\n  distinct p\n\ngoal (1 subgoal):\n 1. \\<not> forest F \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  epath F a p a\n  2 < length p\n  distinct p", "obtain b p' where p': \"p = Upair a b # p'\""], ["proof (prove)\nusing this:\n  epath F a p a\n  2 < length p\n  distinct p\n\ngoal (1 subgoal):\n 1. (\\<And>b p'.\n        p = Upair a b # p' \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (metis Suc_1 epath.simps(2) less_imp_not_less list.size(3) neq_NilE zero_less_Suc)"], ["proof (state)\nthis:\n  p = Upair a b # p'\n\ngoal (1 subgoal):\n 1. \\<not> forest F \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  p = Upair a b # p'", "have u: \"Upair a b\\<in>F\""], ["proof (prove)\nusing this:\n  p = Upair a b # p'\n\ngoal (1 subgoal):\n 1. Upair a b \\<in> F", "using e(1)"], ["proof (prove)\nusing this:\n  p = Upair a b # p'\n  epath F a p a\n\ngoal (1 subgoal):\n 1. Upair a b \\<in> F", "by auto"], ["proof (state)\nthis:\n  Upair a b \\<in> F\n\ngoal (1 subgoal):\n 1. \\<not> forest F \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  Upair a b \\<in> F", "have F: \"(insert (Upair a b) F) = F\""], ["proof (prove)\nusing this:\n  Upair a b \\<in> F\n\ngoal (1 subgoal):\n 1. insert (Upair a b) F = F", "by auto"], ["proof (state)\nthis:\n  insert (Upair a b) F = F\n\ngoal (1 subgoal):\n 1. \\<not> forest F \\<Longrightarrow> False", "have \"epath (F - {Upair a b}) b p' a\""], ["proof (prove)\ngoal (1 subgoal):\n 1. epath (F - {Upair a b}) b p' a", "apply(rule epath_restrict'[where e=\"Upair a b\"])"], ["proof (prove)\ngoal (2 subgoals):\n 1. epath (insert (Upair a b) (F - {Upair a b})) b p' a\n 2. Upair a b \\<notin> set p'", "using e  p'"], ["proof (prove)\nusing this:\n  epath F a p a\n  2 < length p\n  distinct p\n  p = Upair a b # p'\n\ngoal (2 subgoals):\n 1. epath (insert (Upair a b) (F - {Upair a b})) b p' a\n 2. Upair a b \\<notin> set p'", "by (auto simp: F)"], ["proof (state)\nthis:\n  epath (F - {Upair a b}) b p' a\n\ngoal (1 subgoal):\n 1. \\<not> forest F \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  epath (F - {Upair a b}) b p' a", "have \"epath (F - {Upair a b}) a (rev p') b\""], ["proof (prove)\nusing this:\n  epath (F - {Upair a b}) b p' a\n\ngoal (1 subgoal):\n 1. epath (F - {Upair a b}) a (rev p') b", "by auto"], ["proof (state)\nthis:\n  epath (F - {Upair a b}) a (rev p') b\n\ngoal (1 subgoal):\n 1. \\<not> forest F \\<Longrightarrow> False", "with   assms(2)[OF u]"], ["proof (chain)\npicking this:\n  (a, b) \\<notin> uconnected (F - {Upair a b})\n  epath (F - {Upair a b}) a (rev p') b", "show \"False\""], ["proof (prove)\nusing this:\n  (a, b) \\<notin> uconnected (F - {Upair a b})\n  epath (F - {Upair a b}) a (rev p') b\n\ngoal (1 subgoal):\n 1. False", "unfolding uconnected_def"], ["proof (prove)\nusing this:\n  (a, b) \\<notin> {(u, v). \\<exists>p. epath (F - {Upair a b}) u p v}\n  epath (F - {Upair a b}) a (rev p') b\n\ngoal (1 subgoal):\n 1. False", "by blast"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma forest_alt:\n  assumes \"\\<And>e. e\\<in>F \\<Longrightarrow> proper_uprod e\"\n  shows \"forest F \\<longleftrightarrow> (\\<forall>a b. Upair a b \\<in> F \\<longrightarrow> (a,b) \\<notin>  uconnected (F - {Upair a b})) \""], ["proof (prove)\ngoal (1 subgoal):\n 1. forest F =\n    (\\<forall>a b.\n        Upair a b \\<in> F \\<longrightarrow>\n        (a, b) \\<notin> uconnected (F - {Upair a b}))", "using assms forest_alt1 forest_alt2"], ["proof (prove)\nusing this:\n  ?e \\<in> F \\<Longrightarrow> proper_uprod ?e\n  \\<lbrakk>Upair ?a ?b \\<in> ?F; forest ?F;\n   \\<And>e. e \\<in> ?F \\<Longrightarrow> proper_uprod e\\<rbrakk>\n  \\<Longrightarrow> (?a, ?b) \\<notin> uconnected (?F - {Upair ?a ?b})\n  \\<lbrakk>\\<And>e. e \\<in> ?F \\<Longrightarrow> proper_uprod e;\n   \\<And>a b.\n      Upair a b \\<in> ?F \\<Longrightarrow>\n      (a, b) \\<notin> uconnected (?F - {Upair a b})\\<rbrakk>\n  \\<Longrightarrow> forest ?F\n\ngoal (1 subgoal):\n 1. forest F =\n    (\\<forall>a b.\n        Upair a b \\<in> F \\<longrightarrow>\n        (a, b) \\<notin> uconnected (F - {Upair a b}))", "by metis"], ["", "lemma augment_forest_overedges: \n  assumes \"F\\<subseteq>E\" \"forest F\" \"(Upair u v) \\<in> E\" \"(u,v) \\<notin> uconnected F\"\n    and notsame: \"u\\<noteq>v\"\n  shows \"forest (insert (Upair u v) F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. forest (insert (Upair u v) F)", "unfolding forest_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<nexists>ua p. decycle (insert (Upair u v) F) ua p", "proof (rule ccontr, clarsimp simp: decycle_def )"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ua p.\n       \\<lbrakk>2 < length p; epath (insert (Upair u v) F) ua p ua;\n        distinct p\\<rbrakk>\n       \\<Longrightarrow> False", "fix w p"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>ua p.\n       \\<lbrakk>2 < length p; epath (insert (Upair u v) F) ua p ua;\n        distinct p\\<rbrakk>\n       \\<Longrightarrow> False", "assume d: \"distinct p\" and v: \"epath (insert (Upair u v) F) w p w\" and p: \"2 < length p\""], ["proof (state)\nthis:\n  distinct p\n  epath (insert (Upair u v) F) w p w\n  2 < length p\n\ngoal (1 subgoal):\n 1. \\<And>ua p.\n       \\<lbrakk>2 < length p; epath (insert (Upair u v) F) ua p ua;\n        distinct p\\<rbrakk>\n       \\<Longrightarrow> False", "have setep: \"set p \\<subseteq> insert (Upair u v) F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set p \\<subseteq> insert (Upair u v) F", "using epath_subset_E v"], ["proof (prove)\nusing this:\n  epath ?E ?u ?p ?v \\<Longrightarrow> set ?p \\<subseteq> ?E\n  epath (insert (Upair u v) F) w p w\n\ngoal (1 subgoal):\n 1. set p \\<subseteq> insert (Upair u v) F", "by metis"], ["proof (state)\nthis:\n  set p \\<subseteq> insert (Upair u v) F\n\ngoal (1 subgoal):\n 1. \\<And>ua p.\n       \\<lbrakk>2 < length p; epath (insert (Upair u v) F) ua p ua;\n        distinct p\\<rbrakk>\n       \\<Longrightarrow> False", "have uvF: \"(Upair u v)\\<notin>F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Upair u v \\<notin> F", "proof(rule ccontr, clarsimp)"], ["proof (state)\ngoal (1 subgoal):\n 1. Upair u v \\<in> F \\<Longrightarrow> False", "assume \"(Upair u v) \\<in> F\""], ["proof (state)\nthis:\n  Upair u v \\<in> F\n\ngoal (1 subgoal):\n 1. Upair u v \\<in> F \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  Upair u v \\<in> F", "have \"epath F u [(Upair u v)] v\""], ["proof (prove)\nusing this:\n  Upair u v \\<in> F\n\ngoal (1 subgoal):\n 1. epath F u [Upair u v] v", "using notsame"], ["proof (prove)\nusing this:\n  Upair u v \\<in> F\n  u \\<noteq> v\n\ngoal (1 subgoal):\n 1. epath F u [Upair u v] v", "by auto"], ["proof (state)\nthis:\n  epath F u [Upair u v] v\n\ngoal (1 subgoal):\n 1. Upair u v \\<in> F \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  epath F u [Upair u v] v", "have \"(u,v) \\<in> uconnected F\""], ["proof (prove)\nusing this:\n  epath F u [Upair u v] v\n\ngoal (1 subgoal):\n 1. (u, v) \\<in> uconnected F", "unfolding  uconnected_def"], ["proof (prove)\nusing this:\n  epath F u [Upair u v] v\n\ngoal (1 subgoal):\n 1. (u, v) \\<in> {(u, v). \\<exists>p. epath F u p v}", "by blast"], ["proof (state)\nthis:\n  (u, v) \\<in> uconnected F\n\ngoal (1 subgoal):\n 1. Upair u v \\<in> F \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  (u, v) \\<in> uconnected F", "show \"False\""], ["proof (prove)\nusing this:\n  (u, v) \\<in> uconnected F\n\ngoal (1 subgoal):\n 1. False", "using assms(4)"], ["proof (prove)\nusing this:\n  (u, v) \\<in> uconnected F\n  (u, v) \\<notin> uconnected F\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Upair u v \\<notin> F\n\ngoal (1 subgoal):\n 1. \\<And>ua p.\n       \\<lbrakk>2 < length p; epath (insert (Upair u v) F) ua p ua;\n        distinct p\\<rbrakk>\n       \\<Longrightarrow> False", "have k: \"insert (Upair u v) F \\<inter> F = F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (Upair u v) F \\<inter> F = F", "by auto"], ["proof (state)\nthis:\n  insert (Upair u v) F \\<inter> F = F\n\ngoal (1 subgoal):\n 1. \\<And>ua p.\n       \\<lbrakk>2 < length p; epath (insert (Upair u v) F) ua p ua;\n        distinct p\\<rbrakk>\n       \\<Longrightarrow> False", "show False"], ["proof (prove)\ngoal (1 subgoal):\n 1. False", "proof (cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "assume \"(Upair u v) \\<in> set p\""], ["proof (state)\nthis:\n  Upair u v \\<in> set p\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  Upair u v \\<in> set p", "obtain as bs where ep: \"p = as @ (Upair u v) # bs\""], ["proof (prove)\nusing this:\n  Upair u v \\<in> set p\n\ngoal (1 subgoal):\n 1. (\\<And>as bs.\n        p = as @ Upair u v # bs \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using in_set_conv_decomp"], ["proof (prove)\nusing this:\n  Upair u v \\<in> set p\n  (?x \\<in> set ?xs) = (\\<exists>ys zs. ?xs = ys @ ?x # zs)\n\ngoal (1 subgoal):\n 1. (\\<And>as bs.\n        p = as @ Upair u v # bs \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  p = as @ Upair u v # bs\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  p = as @ Upair u v # bs", "have \"epath (insert (Upair u v) F) w (as @ (Upair u v) # bs) w\""], ["proof (prove)\nusing this:\n  p = as @ Upair u v # bs\n\ngoal (1 subgoal):\n 1. epath (insert (Upair u v) F) w (as @ Upair u v # bs) w", "using v"], ["proof (prove)\nusing this:\n  p = as @ Upair u v # bs\n  epath (insert (Upair u v) F) w p w\n\ngoal (1 subgoal):\n 1. epath (insert (Upair u v) F) w (as @ Upair u v # bs) w", "by auto"], ["proof (state)\nthis:\n  epath (insert (Upair u v) F) w (as @ Upair u v # bs) w\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  epath (insert (Upair u v) F) w (as @ Upair u v # bs) w", "obtain z where pr: \"epath (insert (Upair u v) F) w as z\"   \"epath (insert (Upair u v) F) z ((Upair u v) # bs) w\""], ["proof (prove)\nusing this:\n  epath (insert (Upair u v) F) w (as @ Upair u v # bs) w\n\ngoal (1 subgoal):\n 1. (\\<And>z.\n        \\<lbrakk>epath (insert (Upair u v) F) w as z;\n         epath (insert (Upair u v) F) z (Upair u v # bs) w\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by auto"], ["proof (state)\nthis:\n  epath (insert (Upair u v) F) w as z\n  epath (insert (Upair u v) F) z (Upair u v # bs) w\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "from d ep"], ["proof (chain)\npicking this:\n  distinct p\n  p = as @ Upair u v # bs", "have uvas: \"(Upair u v) \\<notin> set (as@bs)\""], ["proof (prove)\nusing this:\n  distinct p\n  p = as @ Upair u v # bs\n\ngoal (1 subgoal):\n 1. Upair u v \\<notin> set (as @ bs)", "by auto"], ["proof (state)\nthis:\n  Upair u v \\<notin> set (as @ bs)\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  Upair u v \\<notin> set (as @ bs)", "have setasbs: \"set (bs@as) \\<subseteq> F\""], ["proof (prove)\nusing this:\n  Upair u v \\<notin> set (as @ bs)\n\ngoal (1 subgoal):\n 1. set (bs @ as) \\<subseteq> F", "using ep setep"], ["proof (prove)\nusing this:\n  Upair u v \\<notin> set (as @ bs)\n  p = as @ Upair u v # bs\n  set p \\<subseteq> insert (Upair u v) F\n\ngoal (1 subgoal):\n 1. set (bs @ as) \\<subseteq> F", "by auto"], ["proof (state)\nthis:\n  set (bs @ as) \\<subseteq> F\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "{"], ["proof (state)\nthis:\n  set (bs @ as) \\<subseteq> F\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "assume \"z=u\""], ["proof (state)\nthis:\n  z = u\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "with pr"], ["proof (chain)\npicking this:\n  epath (insert (Upair u v) F) w as z\n  epath (insert (Upair u v) F) z (Upair u v # bs) w\n  z = u", "have \"epath (insert (Upair u v) F) w as u\"   \"epath (insert(Upair u v) F) v bs w\""], ["proof (prove)\nusing this:\n  epath (insert (Upair u v) F) w as z\n  epath (insert (Upair u v) F) z (Upair u v # bs) w\n  z = u\n\ngoal (1 subgoal):\n 1. epath (insert (Upair u v) F) w as u &&&\n    epath (insert (Upair u v) F) v bs w", "by auto"], ["proof (state)\nthis:\n  epath (insert (Upair u v) F) w as u\n  epath (insert (Upair u v) F) v bs w\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  epath (insert (Upair u v) F) w as u\n  epath (insert (Upair u v) F) v bs w", "have \"epath (insert (Upair u v) F) v (bs@as) u\""], ["proof (prove)\nusing this:\n  epath (insert (Upair u v) F) w as u\n  epath (insert (Upair u v) F) v bs w\n\ngoal (1 subgoal):\n 1. epath (insert (Upair u v) F) v (bs @ as) u", "by auto"], ["proof (state)\nthis:\n  epath (insert (Upair u v) F) v (bs @ as) u\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "from epath_restrict[where I=F, OF setasbs this]"], ["proof (chain)\npicking this:\n  epath (insert (Upair u v) F \\<inter> F) v (bs @ as) u", "have \"epath F v (bs@as) u\""], ["proof (prove)\nusing this:\n  epath (insert (Upair u v) F \\<inter> F) v (bs @ as) u\n\ngoal (1 subgoal):\n 1. epath F v (bs @ as) u", "using uvF"], ["proof (prove)\nusing this:\n  epath (insert (Upair u v) F \\<inter> F) v (bs @ as) u\n  Upair u v \\<notin> F\n\ngoal (1 subgoal):\n 1. epath F v (bs @ as) u", "by auto"], ["proof (state)\nthis:\n  epath F v (bs @ as) u\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  epath F v (bs @ as) u", "have \"(v,u) \\<in> uconnected F\""], ["proof (prove)\nusing this:\n  epath F v (bs @ as) u\n\ngoal (1 subgoal):\n 1. (v, u) \\<in> uconnected F", "using uconnected_def"], ["proof (prove)\nusing this:\n  epath F v (bs @ as) u\n  uconnected ?E \\<equiv> {(u, v). \\<exists>p. epath ?E u p v}\n\ngoal (1 subgoal):\n 1. (v, u) \\<in> uconnected F", "by blast"], ["proof (state)\nthis:\n  (v, u) \\<in> uconnected F\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  (v, u) \\<in> uconnected F", "have \"(u,v) \\<in> uconnected F\""], ["proof (prove)\nusing this:\n  (v, u) \\<in> uconnected F\n\ngoal (1 subgoal):\n 1. (u, v) \\<in> uconnected F", "by (rule uconnected_symI)"], ["proof (state)\nthis:\n  (u, v) \\<in> uconnected F\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  z = u \\<Longrightarrow> (u, v) \\<in> uconnected F\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "moreover"], ["proof (state)\nthis:\n  z = u \\<Longrightarrow> (u, v) \\<in> uconnected F\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "{"], ["proof (state)\nthis:\n  z = u \\<Longrightarrow> (u, v) \\<in> uconnected F\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "assume \"z\\<noteq>u\""], ["proof (state)\nthis:\n  z \\<noteq> u\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  z \\<noteq> u", "have \"z=v\""], ["proof (prove)\nusing this:\n  z \\<noteq> u\n\ngoal (1 subgoal):\n 1. z = v", "using pr(2)"], ["proof (prove)\nusing this:\n  z \\<noteq> u\n  epath (insert (Upair u v) F) z (Upair u v # bs) w\n\ngoal (1 subgoal):\n 1. z = v", "by auto"], ["proof (state)\nthis:\n  z = v\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "with pr"], ["proof (chain)\npicking this:\n  epath (insert (Upair u v) F) w as z\n  epath (insert (Upair u v) F) z (Upair u v # bs) w\n  z = v", "have \"epath (insert (Upair u v) F) w as v\"   \"epath (insert (Upair u v) F) u bs w\""], ["proof (prove)\nusing this:\n  epath (insert (Upair u v) F) w as z\n  epath (insert (Upair u v) F) z (Upair u v # bs) w\n  z = v\n\ngoal (1 subgoal):\n 1. epath (insert (Upair u v) F) w as v &&&\n    epath (insert (Upair u v) F) u bs w", "by auto"], ["proof (state)\nthis:\n  epath (insert (Upair u v) F) w as v\n  epath (insert (Upair u v) F) u bs w\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  epath (insert (Upair u v) F) w as v\n  epath (insert (Upair u v) F) u bs w", "have \"epath (insert (Upair u v) F) u (bs@as) v\""], ["proof (prove)\nusing this:\n  epath (insert (Upair u v) F) w as v\n  epath (insert (Upair u v) F) u bs w\n\ngoal (1 subgoal):\n 1. epath (insert (Upair u v) F) u (bs @ as) v", "by auto"], ["proof (state)\nthis:\n  epath (insert (Upair u v) F) u (bs @ as) v\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "from epath_restrict[where I=F, OF setasbs this]"], ["proof (chain)\npicking this:\n  epath (insert (Upair u v) F \\<inter> F) u (bs @ as) v", "have \"epath F u (bs@as) v\""], ["proof (prove)\nusing this:\n  epath (insert (Upair u v) F \\<inter> F) u (bs @ as) v\n\ngoal (1 subgoal):\n 1. epath F u (bs @ as) v", "using uvF"], ["proof (prove)\nusing this:\n  epath (insert (Upair u v) F \\<inter> F) u (bs @ as) v\n  Upair u v \\<notin> F\n\ngoal (1 subgoal):\n 1. epath F u (bs @ as) v", "by auto"], ["proof (state)\nthis:\n  epath F u (bs @ as) v\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  epath F u (bs @ as) v", "have \"(u,v) \\<in> uconnected F\""], ["proof (prove)\nusing this:\n  epath F u (bs @ as) v\n\ngoal (1 subgoal):\n 1. (u, v) \\<in> uconnected F", "using uconnected_def"], ["proof (prove)\nusing this:\n  epath F u (bs @ as) v\n  uconnected ?E \\<equiv> {(u, v). \\<exists>p. epath ?E u p v}\n\ngoal (1 subgoal):\n 1. (u, v) \\<in> uconnected F", "by fast"], ["proof (state)\nthis:\n  (u, v) \\<in> uconnected F\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "}"], ["proof (state)\nthis:\n  z \\<noteq> u \\<Longrightarrow> (u, v) \\<in> uconnected F\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "ultimately"], ["proof (chain)\npicking this:\n  z = u \\<Longrightarrow> (u, v) \\<in> uconnected F\n  z \\<noteq> u \\<Longrightarrow> (u, v) \\<in> uconnected F", "have \"(u,v) \\<in> uconnected F\""], ["proof (prove)\nusing this:\n  z = u \\<Longrightarrow> (u, v) \\<in> uconnected F\n  z \\<noteq> u \\<Longrightarrow> (u, v) \\<in> uconnected F\n\ngoal (1 subgoal):\n 1. (u, v) \\<in> uconnected F", "by auto"], ["proof (state)\nthis:\n  (u, v) \\<in> uconnected F\n\ngoal (2 subgoals):\n 1. ?P \\<Longrightarrow> False\n 2. \\<not> ?P \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  (u, v) \\<in> uconnected F", "show \"False\""], ["proof (prove)\nusing this:\n  (u, v) \\<in> uconnected F\n\ngoal (1 subgoal):\n 1. False", "using assms"], ["proof (prove)\nusing this:\n  (u, v) \\<in> uconnected F\n  F \\<subseteq> E\n  forest F\n  Upair u v \\<in> E\n  (u, v) \\<notin> uconnected F\n  u \\<noteq> v\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal (1 subgoal):\n 1. Upair u v \\<notin> set p \\<Longrightarrow> False", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Upair u v \\<notin> set p \\<Longrightarrow> False", "assume \"(Upair u v) \\<notin> set p\""], ["proof (state)\nthis:\n  Upair u v \\<notin> set p\n\ngoal (1 subgoal):\n 1. Upair u v \\<notin> set p \\<Longrightarrow> False", "with setep"], ["proof (chain)\npicking this:\n  set p \\<subseteq> insert (Upair u v) F\n  Upair u v \\<notin> set p", "have \"set p \\<subseteq> F\""], ["proof (prove)\nusing this:\n  set p \\<subseteq> insert (Upair u v) F\n  Upair u v \\<notin> set p\n\ngoal (1 subgoal):\n 1. set p \\<subseteq> F", "by auto"], ["proof (state)\nthis:\n  set p \\<subseteq> F\n\ngoal (1 subgoal):\n 1. Upair u v \\<notin> set p \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  set p \\<subseteq> F", "have \"epath (insert (Upair u v) F \\<inter> F) w p w\""], ["proof (prove)\nusing this:\n  set p \\<subseteq> F\n\ngoal (1 subgoal):\n 1. epath (insert (Upair u v) F \\<inter> F) w p w", "using epath_restrict[OF _ v, where I=\"F\"]"], ["proof (prove)\nusing this:\n  set p \\<subseteq> F\n  set p \\<subseteq> F \\<Longrightarrow>\n  epath (insert (Upair u v) F \\<inter> F) w p w\n\ngoal (1 subgoal):\n 1. epath (insert (Upair u v) F \\<inter> F) w p w", "by auto"], ["proof (state)\nthis:\n  epath (insert (Upair u v) F \\<inter> F) w p w\n\ngoal (1 subgoal):\n 1. Upair u v \\<notin> set p \\<Longrightarrow> False", "then"], ["proof (chain)\npicking this:\n  epath (insert (Upair u v) F \\<inter> F) w p w", "have \"epath F w p w\""], ["proof (prove)\nusing this:\n  epath (insert (Upair u v) F \\<inter> F) w p w\n\ngoal (1 subgoal):\n 1. epath F w p w", "using k"], ["proof (prove)\nusing this:\n  epath (insert (Upair u v) F \\<inter> F) w p w\n  insert (Upair u v) F \\<inter> F = F\n\ngoal (1 subgoal):\n 1. epath F w p w", "by auto"], ["proof (state)\nthis:\n  epath F w p w\n\ngoal (1 subgoal):\n 1. Upair u v \\<notin> set p \\<Longrightarrow> False", "with \\<open>forest F\\<close>"], ["proof (chain)\npicking this:\n  forest F\n  epath F w p w", "show \"False\""], ["proof (prove)\nusing this:\n  forest F\n  epath F w p w\n\ngoal (1 subgoal):\n 1. False", "unfolding forest_def decycle_def"], ["proof (prove)\nusing this:\n  \\<nexists>u p. epath F u p u \\<and> 2 < length p \\<and> distinct p\n  epath F w p w\n\ngoal (1 subgoal):\n 1. False", "using p d"], ["proof (prove)\nusing this:\n  \\<nexists>u p. epath F u p u \\<and> 2 < length p \\<and> distinct p\n  epath F w p w\n  2 < length p\n  distinct p\n\ngoal (1 subgoal):\n 1. False", "by auto"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  False\n\ngoal:\nNo subgoals!", "qed"], ["", "subsection \"uGraph locale\""], ["", "locale uGraph =\n  fixes E :: \"'a uprod set\"   \n    and w :: \"'a uprod \\<Rightarrow> 'c::{linorder, ordered_comm_monoid_add}\"\n  assumes ecard2: \"\\<And>e. e\\<in>E \\<Longrightarrow> proper_uprod e\" \n    and finiteE[simp]: \"finite E\"\nbegin"], ["", "abbreviation \"uconnected_on E' V \\<equiv> uconnected E' \\<inter> (V\\<times>V)\""], ["", "abbreviation \"verts \\<equiv> \\<Union>(set_uprod ` E)\""], ["", "lemma set_uprod_nonemptyY[simp]: \"set_uprod x  \\<noteq> {}\""], ["proof (prove)\ngoal (1 subgoal):\n 1. set_uprod x \\<noteq> {}", "apply(cases x)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b. x = Upair a b \\<Longrightarrow> set_uprod x \\<noteq> {}", "by auto"], ["", "abbreviation \"uconnectedV E' \\<equiv> Restr (uconnected E') verts\""], ["", "lemma equiv_unconnected_on: \"equiv V (uconnected_on E' V)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. equiv V (Restr (uconnected E') V)", "apply (rule equivI)"], ["proof (prove)\ngoal (3 subgoals):\n 1. refl_on V (Restr (uconnected E') V)\n 2. sym (Restr (uconnected E') V)\n 3. trans (Restr (uconnected E') V)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. refl_on V (Restr (uconnected E') V)", "by (auto simp: refl_on_def uconnected_def)"], ["proof (prove)\ngoal (2 subgoals):\n 1. sym (Restr (uconnected E') V)\n 2. trans (Restr (uconnected E') V)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. sym (Restr (uconnected E') V)", "apply(clarsimp simp: sym_def uconnected_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y p.\n       \\<lbrakk>epath E' x p y; x \\<in> V; y \\<in> V\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p. epath E' y p x", "subgoal for x y p"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>epath E' x p y; x \\<in> V; y \\<in> V\\<rbrakk>\n    \\<Longrightarrow> \\<exists>p. epath E' y p x", "apply (rule exI[where x=\"rev p\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>epath E' x p y; x \\<in> V; y \\<in> V\\<rbrakk>\n    \\<Longrightarrow> epath E' y (rev p) x", "by (auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal (1 subgoal):\n 1. trans (Restr (uconnected E') V)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. trans (Restr (uconnected E') V)", "apply(clarsimp simp: trans_def uconnected_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y z p pa.\n       \\<lbrakk>epath E' x p y; x \\<in> V; y \\<in> V; z \\<in> V;\n        epath E' y pa z\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p. epath E' x p z", "subgoal for x y z p q"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>epath E' x p y; x \\<in> V; y \\<in> V; z \\<in> V;\n     epath E' y q z\\<rbrakk>\n    \\<Longrightarrow> \\<exists>p. epath E' x p z", "apply (rule exI[where x=\"p@q\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>epath E' x p y; x \\<in> V; y \\<in> V; z \\<in> V;\n     epath E' y q z\\<rbrakk>\n    \\<Longrightarrow> epath E' x (p @ q) z", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma uconnectedV_refl: \"E'\\<subseteq>E \\<Longrightarrow> refl_on verts (uconnectedV E')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. E' \\<subseteq> E \\<Longrightarrow>\n    refl_on verts (Restr (uconnected E') verts)", "by(auto simp: refl_on_def uconnected_def)"], ["", "lemma uconnectedV_trans: \"trans (uconnectedV E')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. trans (Restr (uconnected E') verts)", "apply(clarsimp simp: trans_def uconnected_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y z p xa xb xc pa.\n       \\<lbrakk>epath E' x p y; xa \\<in> E; x \\<in> set_uprod xa;\n        xb \\<in> E; y \\<in> set_uprod xb; xc \\<in> E; z \\<in> set_uprod xc;\n        epath E' y pa z\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p. epath E' x p z", "subgoal for x y z p a b c q"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>epath E' x p y; a \\<in> E; x \\<in> set_uprod a; b \\<in> E;\n     y \\<in> set_uprod b; c \\<in> E; z \\<in> set_uprod c;\n     epath E' y q z\\<rbrakk>\n    \\<Longrightarrow> \\<exists>p. epath E' x p z", "apply (rule exI[where x=\"p@q\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>epath E' x p y; a \\<in> E; x \\<in> set_uprod a; b \\<in> E;\n     y \\<in> set_uprod b; c \\<in> E; z \\<in> set_uprod c;\n     epath E' y q z\\<rbrakk>\n    \\<Longrightarrow> epath E' x (p @ q) z", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma uconnectedV_sym: \"sym (uconnectedV E')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sym (Restr (uconnected E') verts)", "apply(clarsimp simp: sym_def uconnected_def)"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x y p xa xb.\n       \\<lbrakk>epath E' x p y; xa \\<in> E; x \\<in> set_uprod xa;\n        xb \\<in> E; y \\<in> set_uprod xb\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p. epath E' y p x", "subgoal for x y p"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>epath E' x p y; xa_ \\<in> E; x \\<in> set_uprod xa_;\n     xb_ \\<in> E; y \\<in> set_uprod xb_\\<rbrakk>\n    \\<Longrightarrow> \\<exists>p. epath E' y p x", "apply (rule exI[where x=\"rev p\"])"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>epath E' x p y; xa_ \\<in> E; x \\<in> set_uprod xa_;\n     xb_ \\<in> E; y \\<in> set_uprod xb_\\<rbrakk>\n    \\<Longrightarrow> epath E' y (rev p) x", "by (auto)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma equiv_vert_uconnected: \"equiv verts (uconnectedV E')\""], ["proof (prove)\ngoal (1 subgoal):\n 1. equiv verts (Restr (uconnected E') verts)", "using equiv_unconnected_on"], ["proof (prove)\nusing this:\n  equiv ?V (Restr (uconnected ?E') ?V)\n\ngoal (1 subgoal):\n 1. equiv verts (Restr (uconnected E') verts)", "by auto"], ["", "lemma uconnectedV_tracl: \"(uconnectedV F)\\<^sup>* = (uconnectedV F)\\<^sup>=\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Restr (uconnected F) verts)\\<^sup>* =\n    (Restr (uconnected F) verts)\\<^sup>=", "apply(rule trans_rtrancl_eq_reflcl)"], ["proof (prove)\ngoal (1 subgoal):\n 1. trans (Restr (uconnected F) verts)", "by (fact uconnectedV_trans)"], ["", "lemma uconnectedV_cl: \"(uconnectedV F)\\<^sup>+ = (uconnectedV F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Restr (uconnected F) verts)\\<^sup>+ = Restr (uconnected F) verts", "apply(rule trancl_id)"], ["proof (prove)\ngoal (1 subgoal):\n 1. trans (Restr (uconnected F) verts)", "by (fact uconnectedV_trans)"], ["", "lemma uconnectedV_Restrcl: \"Restr ((uconnectedV F)\\<^sup>*) verts = (uconnectedV F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Restr ((Restr (uconnected F) verts)\\<^sup>*) verts =\n    Restr (uconnected F) verts", "apply(simp only: uconnectedV_tracl)"], ["proof (prove)\ngoal (1 subgoal):\n 1. Restr ((Restr (uconnected F) verts)\\<^sup>=) verts =\n    Restr (uconnected F) verts", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b x xa.\n       \\<lbrakk>x \\<in> E; b \\<in> set_uprod x; xa \\<in> E;\n        b \\<in> set_uprod xa\\<rbrakk>\n       \\<Longrightarrow> (b, b) \\<in> uconnected F", "unfolding uconnected_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>b x xa.\n       \\<lbrakk>x \\<in> E; b \\<in> set_uprod x; xa \\<in> E;\n        b \\<in> set_uprod xa\\<rbrakk>\n       \\<Longrightarrow> (b, b) \\<in> {(u, v). \\<exists>p. epath F u p v}", "by auto"], ["", "lemma restr_ucon: \"F \\<subseteq> E \\<Longrightarrow> uconnected F = uconnectedV F \\<union> Id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<subseteq> E \\<Longrightarrow>\n    uconnected F = (Restr (uconnected F) verts)\\<^sup>=", "unfolding uconnected_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. F \\<subseteq> E \\<Longrightarrow>\n    {(u, v). \\<exists>p. epath F u p v} =\n    (Restr {(u, v). \\<exists>p. epath F u p v} verts)\\<^sup>=", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b p.\n       \\<lbrakk>F \\<subseteq> E; epath F a p b; a \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>E. a \\<in> set_uprod x\n 2. \\<And>a b p.\n       \\<lbrakk>F \\<subseteq> E; epath F a p b; a \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>E. b \\<in> set_uprod x", "proof (goal_cases)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b p.\n       \\<lbrakk>F \\<subseteq> E; epath F a p b; a \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>E. a \\<in> set_uprod x\n 2. \\<And>a b p.\n       \\<lbrakk>F \\<subseteq> E; epath F a p b; a \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>E. b \\<in> set_uprod x", "case (1 a b p)"], ["proof (state)\nthis:\n  F \\<subseteq> E\n  epath F a p b\n  a \\<noteq> b\n\ngoal (2 subgoals):\n 1. \\<And>a b p.\n       \\<lbrakk>F \\<subseteq> E; epath F a p b; a \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>E. a \\<in> set_uprod x\n 2. \\<And>a b p.\n       \\<lbrakk>F \\<subseteq> E; epath F a p b; a \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>E. b \\<in> set_uprod x", "then"], ["proof (chain)\npicking this:\n  F \\<subseteq> E\n  epath F a p b\n  a \\<noteq> b", "have \"p\\<noteq>[]\""], ["proof (prove)\nusing this:\n  F \\<subseteq> E\n  epath F a p b\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. p \\<noteq> []", "by auto"], ["proof (state)\nthis:\n  p \\<noteq> []\n\ngoal (2 subgoals):\n 1. \\<And>a b p.\n       \\<lbrakk>F \\<subseteq> E; epath F a p b; a \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>E. a \\<in> set_uprod x\n 2. \\<And>a b p.\n       \\<lbrakk>F \\<subseteq> E; epath F a p b; a \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>E. b \\<in> set_uprod x", "then"], ["proof (chain)\npicking this:\n  p \\<noteq> []", "obtain e es where \"p=e#es\""], ["proof (prove)\nusing this:\n  p \\<noteq> []\n\ngoal (1 subgoal):\n 1. (\\<And>e es. p = e # es \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using list.exhaust"], ["proof (prove)\nusing this:\n  p \\<noteq> []\n  \\<lbrakk>?y = [] \\<Longrightarrow> ?P;\n   \\<And>x21 x22. ?y = x21 # x22 \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. (\\<And>e es. p = e # es \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  p = e # es\n\ngoal (2 subgoals):\n 1. \\<And>a b p.\n       \\<lbrakk>F \\<subseteq> E; epath F a p b; a \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>E. a \\<in> set_uprod x\n 2. \\<And>a b p.\n       \\<lbrakk>F \\<subseteq> E; epath F a p b; a \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>E. b \\<in> set_uprod x", "with 1(2)"], ["proof (chain)\npicking this:\n  epath F a p b\n  p = e # es", "have \"a\\<in> set_uprod e\" \"e\\<in>F\""], ["proof (prove)\nusing this:\n  epath F a p b\n  p = e # es\n\ngoal (1 subgoal):\n 1. a \\<in> set_uprod e &&& e \\<in> F", "by auto"], ["proof (state)\nthis:\n  a \\<in> set_uprod e\n  e \\<in> F\n\ngoal (2 subgoals):\n 1. \\<And>a b p.\n       \\<lbrakk>F \\<subseteq> E; epath F a p b; a \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>E. a \\<in> set_uprod x\n 2. \\<And>a b p.\n       \\<lbrakk>F \\<subseteq> E; epath F a p b; a \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>E. b \\<in> set_uprod x", "then"], ["proof (chain)\npicking this:\n  a \\<in> set_uprod e\n  e \\<in> F", "show ?case"], ["proof (prove)\nusing this:\n  a \\<in> set_uprod e\n  e \\<in> F\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>E. a \\<in> set_uprod x", "using 1(1)"], ["proof (prove)\nusing this:\n  a \\<in> set_uprod e\n  e \\<in> F\n  F \\<subseteq> E\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>E. a \\<in> set_uprod x", "by blast"], ["proof (state)\nthis:\n  \\<exists>x\\<in>E. a \\<in> set_uprod x\n\ngoal (1 subgoal):\n 1. \\<And>a b p.\n       \\<lbrakk>F \\<subseteq> E; epath F a p b; a \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>E. b \\<in> set_uprod x", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b p.\n       \\<lbrakk>F \\<subseteq> E; epath F a p b; a \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>E. b \\<in> set_uprod x", "case (2 a b p)"], ["proof (state)\nthis:\n  F \\<subseteq> E\n  epath F a p b\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. \\<And>a b p.\n       \\<lbrakk>F \\<subseteq> E; epath F a p b; a \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>E. b \\<in> set_uprod x", "then"], ["proof (chain)\npicking this:\n  F \\<subseteq> E\n  epath F a p b\n  a \\<noteq> b", "have \"rev p\\<noteq>[]\" \"epath F b (rev p) a\""], ["proof (prove)\nusing this:\n  F \\<subseteq> E\n  epath F a p b\n  a \\<noteq> b\n\ngoal (1 subgoal):\n 1. rev p \\<noteq> [] &&& epath F b (rev p) a", "by auto"], ["proof (state)\nthis:\n  rev p \\<noteq> []\n  epath F b (rev p) a\n\ngoal (1 subgoal):\n 1. \\<And>a b p.\n       \\<lbrakk>F \\<subseteq> E; epath F a p b; a \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>E. b \\<in> set_uprod x", "then"], ["proof (chain)\npicking this:\n  rev p \\<noteq> []\n  epath F b (rev p) a", "obtain e es where \"rev p=e#es\""], ["proof (prove)\nusing this:\n  rev p \\<noteq> []\n  epath F b (rev p) a\n\ngoal (1 subgoal):\n 1. (\\<And>e es. rev p = e # es \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using list.exhaust"], ["proof (prove)\nusing this:\n  rev p \\<noteq> []\n  epath F b (rev p) a\n  \\<lbrakk>?y = [] \\<Longrightarrow> ?P;\n   \\<And>x21 x22. ?y = x21 # x22 \\<Longrightarrow> ?P\\<rbrakk>\n  \\<Longrightarrow> ?P\n\ngoal (1 subgoal):\n 1. (\\<And>e es. rev p = e # es \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by metis"], ["proof (state)\nthis:\n  rev p = e # es\n\ngoal (1 subgoal):\n 1. \\<And>a b p.\n       \\<lbrakk>F \\<subseteq> E; epath F a p b; a \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>E. b \\<in> set_uprod x", "with 2(2)"], ["proof (chain)\npicking this:\n  epath F a p b\n  rev p = e # es", "have \"b\\<in> set_uprod e\" \"e\\<in>F\""], ["proof (prove)\nusing this:\n  epath F a p b\n  rev p = e # es\n\ngoal (1 subgoal):\n 1. b \\<in> set_uprod e &&& e \\<in> F", "by auto"], ["proof (state)\nthis:\n  b \\<in> set_uprod e\n  e \\<in> F\n\ngoal (1 subgoal):\n 1. \\<And>a b p.\n       \\<lbrakk>F \\<subseteq> E; epath F a p b; a \\<noteq> b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>x\\<in>E. b \\<in> set_uprod x", "then"], ["proof (chain)\npicking this:\n  b \\<in> set_uprod e\n  e \\<in> F", "show ?case"], ["proof (prove)\nusing this:\n  b \\<in> set_uprod e\n  e \\<in> F\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>E. b \\<in> set_uprod x", "using 2(1)"], ["proof (prove)\nusing this:\n  b \\<in> set_uprod e\n  e \\<in> F\n  F \\<subseteq> E\n\ngoal (1 subgoal):\n 1. \\<exists>x\\<in>E. b \\<in> set_uprod x", "by blast"], ["proof (state)\nthis:\n  \\<exists>x\\<in>E. b \\<in> set_uprod x\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma relI:\n  assumes \"\\<And>a b. (a,b) \\<in> F \\<Longrightarrow> (a,b) \\<in> G\"\n    and \"\\<And>a b. (a,b) \\<in> G \\<Longrightarrow> (a,b) \\<in> F\" shows \"F=G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. F = G", "using assms"], ["proof (prove)\nusing this:\n  (?a, ?b) \\<in> F \\<Longrightarrow> (?a, ?b) \\<in> G\n  (?a, ?b) \\<in> G \\<Longrightarrow> (?a, ?b) \\<in> F\n\ngoal (1 subgoal):\n 1. F = G", "by auto"], ["", "lemma in_per_union: \"u \\<in> {x, y} \\<Longrightarrow>  u' \\<in> {x, y} \\<Longrightarrow>  x\\<in>V \\<Longrightarrow> y\\<in>V \\<Longrightarrow>\n    refl_on V R \\<Longrightarrow> part_equiv R  \\<Longrightarrow> (u, u') \\<in> per_union R x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>u \\<in> {x, y}; u' \\<in> {x, y}; x \\<in> V; y \\<in> V;\n     refl_on V R; part_equiv R\\<rbrakk>\n    \\<Longrightarrow> (u, u') \\<in> per_union R x y", "by (auto simp: per_union_def dest: refl_onD)"], ["", "lemma uconnectedV_mono: \" (a,b)\\<in>uconnectedV F \\<Longrightarrow> F\\<subseteq>F' \\<Longrightarrow> (a,b)\\<in>uconnectedV F'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(a, b) \\<in> Restr (uconnected F) verts;\n     F \\<subseteq> F'\\<rbrakk>\n    \\<Longrightarrow> (a, b) \\<in> Restr (uconnected F') verts", "unfolding uconnected_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(a, b) \\<in> Restr {(u, v). \\<exists>p. epath F u p v} verts;\n     F \\<subseteq> F'\\<rbrakk>\n    \\<Longrightarrow> (a, b)\n                      \\<in> Restr {(u, v). \\<exists>p. epath F' u p v} verts", "by (auto intro: epath_mono)"], ["", "lemma per_union_subs: \"x \\<in> S \\<Longrightarrow> y\\<in>S \\<Longrightarrow> R\\<subseteq>S \\<times> S \\<Longrightarrow> per_union R x y \\<subseteq> S \\<times> S\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> S; y \\<in> S; R \\<subseteq> S \\<times> S\\<rbrakk>\n    \\<Longrightarrow> per_union R x y \\<subseteq> S \\<times> S", "unfolding per_union_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>x \\<in> S; y \\<in> S; R \\<subseteq> S \\<times> S\\<rbrakk>\n    \\<Longrightarrow> R \\<union>\n                      {(xa, ya).\n                       (xa, x) \\<in> R \\<and> (ya, y) \\<in> R} \\<union>\n                      {(ya, xa). (xa, x) \\<in> R \\<and> (ya, y) \\<in> R}\n                      \\<subseteq> S \\<times> S", "by auto"], ["", "(* adapted preserve_corresponding_union_find_add by Julian Biendarra *)"], ["", "lemma insert_uconnectedV_per: \n  assumes  \"x\\<noteq>y\" and inV: \"x\\<in>verts\" \"y\\<in>verts\" and subE: \"F\\<subseteq>E\"\n  shows \"uconnectedV (insert (Upair x y) F) = per_union (uconnectedV F) x y\"\n    (is \"uconnectedV ?F' = per_union ?uf x y\")"], ["proof (prove)\ngoal (1 subgoal):\n 1. Restr (uconnected (insert (Upair x y) F)) verts =\n    per_union (Restr (uconnected F) verts) x y", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. Restr (uconnected (insert (Upair x y) F)) verts =\n    per_union (Restr (uconnected F) verts) x y", "have PER: \"part_equiv (uconnectedV F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. part_equiv (Restr (uconnected F) verts)", "unfolding part_equiv_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sym (Restr (uconnected F) verts) \\<and>\n    trans (Restr (uconnected F) verts)", "using uconnectedV_sym uconnectedV_trans"], ["proof (prove)\nusing this:\n  sym (Restr (uconnected ?E') verts)\n  trans (Restr (uconnected ?E') verts)\n\ngoal (1 subgoal):\n 1. sym (Restr (uconnected F) verts) \\<and>\n    trans (Restr (uconnected F) verts)", "by auto"], ["proof (state)\nthis:\n  part_equiv (Restr (uconnected F) verts)\n\ngoal (1 subgoal):\n 1. Restr (uconnected (insert (Upair x y) F)) verts =\n    per_union (Restr (uconnected F) verts) x y", "from PER"], ["proof (chain)\npicking this:\n  part_equiv (Restr (uconnected F) verts)", "have PER': \"part_equiv (per_union (uconnectedV F) x y)\""], ["proof (prove)\nusing this:\n  part_equiv (Restr (uconnected F) verts)\n\ngoal (1 subgoal):\n 1. part_equiv (per_union (Restr (uconnected F) verts) x y)", "by (auto simp: union_part_equivp)"], ["proof (state)\nthis:\n  part_equiv (per_union (Restr (uconnected F) verts) x y)\n\ngoal (1 subgoal):\n 1. Restr (uconnected (insert (Upair x y) F)) verts =\n    per_union (Restr (uconnected F) verts) x y", "have ref: \"refl_on verts (uconnectedV F)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. refl_on verts (Restr (uconnected F) verts)", "using uconnectedV_refl assms(4)"], ["proof (prove)\nusing this:\n  ?E' \\<subseteq> E \\<Longrightarrow>\n  refl_on verts (Restr (uconnected ?E') verts)\n  F \\<subseteq> E\n\ngoal (1 subgoal):\n 1. refl_on verts (Restr (uconnected F) verts)", "by auto"], ["proof (state)\nthis:\n  refl_on verts (Restr (uconnected F) verts)\n\ngoal (1 subgoal):\n 1. Restr (uconnected (insert (Upair x y) F)) verts =\n    per_union (Restr (uconnected F) verts) x y", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. Restr (uconnected (insert (Upair x y) F)) verts =\n    per_union (Restr (uconnected F) verts) x y", "proof (rule relI)"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b)\n       \\<in> Restr (uconnected (insert (Upair x y) F))\n              verts \\<Longrightarrow>\n       (a, b) \\<in> per_union (Restr (uconnected F) verts) x y\n 2. \\<And>a b.\n       (a, b)\n       \\<in> per_union (Restr (uconnected F) verts) x y \\<Longrightarrow>\n       (a, b) \\<in> Restr (uconnected (insert (Upair x y) F)) verts", "fix a b"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b)\n       \\<in> Restr (uconnected (insert (Upair x y) F))\n              verts \\<Longrightarrow>\n       (a, b) \\<in> per_union (Restr (uconnected F) verts) x y\n 2. \\<And>a b.\n       (a, b)\n       \\<in> per_union (Restr (uconnected F) verts) x y \\<Longrightarrow>\n       (a, b) \\<in> Restr (uconnected (insert (Upair x y) F)) verts", "assume \"(a,b) \\<in> uconnectedV ?F'\""], ["proof (state)\nthis:\n  (a, b) \\<in> Restr (uconnected (insert (Upair x y) F)) verts\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b)\n       \\<in> Restr (uconnected (insert (Upair x y) F))\n              verts \\<Longrightarrow>\n       (a, b) \\<in> per_union (Restr (uconnected F) verts) x y\n 2. \\<And>a b.\n       (a, b)\n       \\<in> per_union (Restr (uconnected F) verts) x y \\<Longrightarrow>\n       (a, b) \\<in> Restr (uconnected (insert (Upair x y) F)) verts", "then"], ["proof (chain)\npicking this:\n  (a, b) \\<in> Restr (uconnected (insert (Upair x y) F)) verts", "obtain p where p: \"epath ?F' a p b\" and ab: \"a\\<in>verts\" \"b\\<in>verts\""], ["proof (prove)\nusing this:\n  (a, b) \\<in> Restr (uconnected (insert (Upair x y) F)) verts\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>epath (insert (Upair x y) F) a p b; a \\<in> verts;\n         b \\<in> verts\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "unfolding uconnected_def"], ["proof (prove)\nusing this:\n  (a, b)\n  \\<in> Restr {(u, v). \\<exists>p. epath (insert (Upair x y) F) u p v} verts\n\ngoal (1 subgoal):\n 1. (\\<And>p.\n        \\<lbrakk>epath (insert (Upair x y) F) a p b; a \\<in> verts;\n         b \\<in> verts\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  epath (insert (Upair x y) F) a p b\n  a \\<in> verts\n  b \\<in> verts\n\ngoal (2 subgoals):\n 1. \\<And>a b.\n       (a, b)\n       \\<in> Restr (uconnected (insert (Upair x y) F))\n              verts \\<Longrightarrow>\n       (a, b) \\<in> per_union (Restr (uconnected F) verts) x y\n 2. \\<And>a b.\n       (a, b)\n       \\<in> per_union (Restr (uconnected F) verts) x y \\<Longrightarrow>\n       (a, b) \\<in> Restr (uconnected (insert (Upair x y) F)) verts", "show \"(a,b)\\<in>per_union (uconnectedV F) x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a, b) \\<in> per_union (Restr (uconnected F) verts) x y", "proof (cases \"Upair x y\\<in>set p\")"], ["proof (state)\ngoal (2 subgoals):\n 1. Upair x y \\<in> set p \\<Longrightarrow>\n    (a, b) \\<in> per_union (Restr (uconnected F) verts) x y\n 2. Upair x y \\<notin> set p \\<Longrightarrow>\n    (a, b) \\<in> per_union (Restr (uconnected F) verts) x y", "case True"], ["proof (state)\nthis:\n  Upair x y \\<in> set p\n\ngoal (2 subgoals):\n 1. Upair x y \\<in> set p \\<Longrightarrow>\n    (a, b) \\<in> per_union (Restr (uconnected F) verts) x y\n 2. Upair x y \\<notin> set p \\<Longrightarrow>\n    (a, b) \\<in> per_union (Restr (uconnected F) verts) x y", "obtain p' p'' u u' where\n        \"epath ?F' a p' u\" \"epath ?F' u' p'' b\"and\n        u: \"u\\<in>{x,y} \\<and> u'\\<in>{x,y}\" and\n        \"Upair x y \\<notin> set p'\" \"Upair x y \\<notin> set p''\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (\\<And>p' u u' p''.\n        \\<lbrakk>epath (insert (Upair x y) F) a p' u;\n         epath (insert (Upair x y) F) u' p'' b;\n         u \\<in> {x, y} \\<and> u' \\<in> {x, y}; Upair x y \\<notin> set p';\n         Upair x y \\<notin> set p''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "using epath_split_distinct[OF p True]"], ["proof (prove)\nusing this:\n  \\<exists>p' p'' u u'.\n     epath (insert (Upair x y) F) a p' u \\<and>\n     epath (insert (Upair x y) F) u' p'' b \\<and>\n     length p' < length p \\<and>\n     length p'' < length p \\<and>\n     (u \\<in> {x, y} \\<and> u' \\<in> {x, y}) \\<and>\n     Upair x y \\<notin> set p' \\<and> Upair x y \\<notin> set p''\n\ngoal (1 subgoal):\n 1. (\\<And>p' u u' p''.\n        \\<lbrakk>epath (insert (Upair x y) F) a p' u;\n         epath (insert (Upair x y) F) u' p'' b;\n         u \\<in> {x, y} \\<and> u' \\<in> {x, y}; Upair x y \\<notin> set p';\n         Upair x y \\<notin> set p''\\<rbrakk>\n        \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by blast"], ["proof (state)\nthis:\n  epath (insert (Upair x y) F) a p' u\n  epath (insert (Upair x y) F) u' p'' b\n  u \\<in> {x, y} \\<and> u' \\<in> {x, y}\n  Upair x y \\<notin> set p'\n  Upair x y \\<notin> set p''\n\ngoal (2 subgoals):\n 1. Upair x y \\<in> set p \\<Longrightarrow>\n    (a, b) \\<in> per_union (Restr (uconnected F) verts) x y\n 2. Upair x y \\<notin> set p \\<Longrightarrow>\n    (a, b) \\<in> per_union (Restr (uconnected F) verts) x y", "then"], ["proof (chain)\npicking this:\n  epath (insert (Upair x y) F) a p' u\n  epath (insert (Upair x y) F) u' p'' b\n  u \\<in> {x, y} \\<and> u' \\<in> {x, y}\n  Upair x y \\<notin> set p'\n  Upair x y \\<notin> set p''", "have \"epath F a p' u\" \"epath F u' p'' b\""], ["proof (prove)\nusing this:\n  epath (insert (Upair x y) F) a p' u\n  epath (insert (Upair x y) F) u' p'' b\n  u \\<in> {x, y} \\<and> u' \\<in> {x, y}\n  Upair x y \\<notin> set p'\n  Upair x y \\<notin> set p''\n\ngoal (1 subgoal):\n 1. epath F a p' u &&& epath F u' p'' b", "by(auto intro: epath_restrict')"], ["proof (state)\nthis:\n  epath F a p' u\n  epath F u' p'' b\n\ngoal (2 subgoals):\n 1. Upair x y \\<in> set p \\<Longrightarrow>\n    (a, b) \\<in> per_union (Restr (uconnected F) verts) x y\n 2. Upair x y \\<notin> set p \\<Longrightarrow>\n    (a, b) \\<in> per_union (Restr (uconnected F) verts) x y", "then"], ["proof (chain)\npicking this:\n  epath F a p' u\n  epath F u' p'' b", "have a: \"(a,u)\\<in>(uconnectedV F)\" and b: \"(u',b)\\<in>(uconnectedV F)\""], ["proof (prove)\nusing this:\n  epath F a p' u\n  epath F u' p'' b\n\ngoal (1 subgoal):\n 1. (a, u) \\<in> Restr (uconnected F) verts &&&\n    (u', b) \\<in> Restr (uconnected F) verts", "unfolding uconnected_def"], ["proof (prove)\nusing this:\n  epath F a p' u\n  epath F u' p'' b\n\ngoal (1 subgoal):\n 1. (a, u) \\<in> Restr {(u, v). \\<exists>p. epath F u p v} verts &&&\n    (u', b) \\<in> Restr {(u, v). \\<exists>p. epath F u p v} verts", "using u ab assms"], ["proof (prove)\nusing this:\n  epath F a p' u\n  epath F u' p'' b\n  u \\<in> {x, y} \\<and> u' \\<in> {x, y}\n  a \\<in> verts\n  b \\<in> verts\n  x \\<noteq> y\n  x \\<in> verts\n  y \\<in> verts\n  F \\<subseteq> E\n\ngoal (1 subgoal):\n 1. (a, u) \\<in> Restr {(u, v). \\<exists>p. epath F u p v} verts &&&\n    (u', b) \\<in> Restr {(u, v). \\<exists>p. epath F u p v} verts", "by auto"], ["proof (state)\nthis:\n  (a, u) \\<in> Restr (uconnected F) verts\n  (u', b) \\<in> Restr (uconnected F) verts\n\ngoal (2 subgoals):\n 1. Upair x y \\<in> set p \\<Longrightarrow>\n    (a, b) \\<in> per_union (Restr (uconnected F) verts) x y\n 2. Upair x y \\<notin> set p \\<Longrightarrow>\n    (a, b) \\<in> per_union (Restr (uconnected F) verts) x y", "from a"], ["proof (chain)\npicking this:\n  (a, u) \\<in> Restr (uconnected F) verts", "have \"(a,u)\\<in>per_union ?uf x y\""], ["proof (prove)\nusing this:\n  (a, u) \\<in> Restr (uconnected F) verts\n\ngoal (1 subgoal):\n 1. (a, u) \\<in> per_union (Restr (uconnected F) verts) x y", "by (auto simp: per_union_def)"], ["proof (state)\nthis:\n  (a, u) \\<in> per_union (Restr (uconnected F) verts) x y\n\ngoal (2 subgoals):\n 1. Upair x y \\<in> set p \\<Longrightarrow>\n    (a, b) \\<in> per_union (Restr (uconnected F) verts) x y\n 2. Upair x y \\<notin> set p \\<Longrightarrow>\n    (a, b) \\<in> per_union (Restr (uconnected F) verts) x y", "also"], ["proof (state)\nthis:\n  (a, u) \\<in> per_union (Restr (uconnected F) verts) x y\n\ngoal (2 subgoals):\n 1. Upair x y \\<in> set p \\<Longrightarrow>\n    (a, b) \\<in> per_union (Restr (uconnected F) verts) x y\n 2. Upair x y \\<notin> set p \\<Longrightarrow>\n    (a, b) \\<in> per_union (Restr (uconnected F) verts) x y", "have \"(u,u')\\<in>per_union ?uf x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u, u') \\<in> per_union (Restr (uconnected F) verts) x y", "apply (rule in_per_union)"], ["proof (prove)\ngoal (6 subgoals):\n 1. u \\<in> {x, y}\n 2. u' \\<in> {x, y}\n 3. x \\<in> ?V\n 4. y \\<in> ?V\n 5. refl_on ?V (Restr (uconnected F) verts)\n 6. part_equiv (Restr (uconnected F) verts)", "using u inV ref PER"], ["proof (prove)\nusing this:\n  u \\<in> {x, y} \\<and> u' \\<in> {x, y}\n  x \\<in> verts\n  y \\<in> verts\n  refl_on verts (Restr (uconnected F) verts)\n  part_equiv (Restr (uconnected F) verts)\n\ngoal (6 subgoals):\n 1. u \\<in> {x, y}\n 2. u' \\<in> {x, y}\n 3. x \\<in> ?V\n 4. y \\<in> ?V\n 5. refl_on ?V (Restr (uconnected F) verts)\n 6. part_equiv (Restr (uconnected F) verts)", "by auto"], ["proof (state)\nthis:\n  (u, u') \\<in> per_union (Restr (uconnected F) verts) x y\n\ngoal (2 subgoals):\n 1. Upair x y \\<in> set p \\<Longrightarrow>\n    (a, b) \\<in> per_union (Restr (uconnected F) verts) x y\n 2. Upair x y \\<notin> set p \\<Longrightarrow>\n    (a, b) \\<in> per_union (Restr (uconnected F) verts) x y", "also (part_equiv_trans[OF PER'])"], ["proof (state)\nthis:\n  (u, u') \\<in> per_union (Restr (uconnected F) verts) x y\n\ngoal (2 subgoals):\n 1. Upair x y \\<in> set p \\<Longrightarrow>\n    (a, b) \\<in> per_union (Restr (uconnected F) verts) x y\n 2. Upair x y \\<notin> set p \\<Longrightarrow>\n    (a, b) \\<in> per_union (Restr (uconnected F) verts) x y", "have \"(u',b)\\<in>per_union ?uf x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u', b) \\<in> per_union (Restr (uconnected F) verts) x y", "using b"], ["proof (prove)\nusing this:\n  (u', b) \\<in> Restr (uconnected F) verts\n\ngoal (1 subgoal):\n 1. (u', b) \\<in> per_union (Restr (uconnected F) verts) x y", "by (auto simp: per_union_def)"], ["proof (state)\nthis:\n  (u', b) \\<in> per_union (Restr (uconnected F) verts) x y\n\ngoal (2 subgoals):\n 1. Upair x y \\<in> set p \\<Longrightarrow>\n    (a, b) \\<in> per_union (Restr (uconnected F) verts) x y\n 2. Upair x y \\<notin> set p \\<Longrightarrow>\n    (a, b) \\<in> per_union (Restr (uconnected F) verts) x y", "finally (part_equiv_trans[OF PER'])"], ["proof (chain)\npicking this:\n  (a, b) \\<in> per_union (Restr (uconnected F) verts) x y", "show \"(a,b)\\<in>per_union ?uf x y\""], ["proof (prove)\nusing this:\n  (a, b) \\<in> per_union (Restr (uconnected F) verts) x y\n\ngoal (1 subgoal):\n 1. (a, b) \\<in> per_union (Restr (uconnected F) verts) x y", "."], ["proof (state)\nthis:\n  (a, b) \\<in> per_union (Restr (uconnected F) verts) x y\n\ngoal (1 subgoal):\n 1. Upair x y \\<notin> set p \\<Longrightarrow>\n    (a, b) \\<in> per_union (Restr (uconnected F) verts) x y", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. Upair x y \\<notin> set p \\<Longrightarrow>\n    (a, b) \\<in> per_union (Restr (uconnected F) verts) x y", "case False"], ["proof (state)\nthis:\n  Upair x y \\<notin> set p\n\ngoal (1 subgoal):\n 1. Upair x y \\<notin> set p \\<Longrightarrow>\n    (a, b) \\<in> per_union (Restr (uconnected F) verts) x y", "with p"], ["proof (chain)\npicking this:\n  epath (insert (Upair x y) F) a p b\n  Upair x y \\<notin> set p", "have \"epath F a p b\""], ["proof (prove)\nusing this:\n  epath (insert (Upair x y) F) a p b\n  Upair x y \\<notin> set p\n\ngoal (1 subgoal):\n 1. epath F a p b", "by(auto intro: epath_restrict')"], ["proof (state)\nthis:\n  epath F a p b\n\ngoal (1 subgoal):\n 1. Upair x y \\<notin> set p \\<Longrightarrow>\n    (a, b) \\<in> per_union (Restr (uconnected F) verts) x y", "then"], ["proof (chain)\npicking this:\n  epath F a p b", "have \"(a,b)\\<in>uconnectedV F\""], ["proof (prove)\nusing this:\n  epath F a p b\n\ngoal (1 subgoal):\n 1. (a, b) \\<in> Restr (uconnected F) verts", "using ab"], ["proof (prove)\nusing this:\n  epath F a p b\n  a \\<in> verts\n  b \\<in> verts\n\ngoal (1 subgoal):\n 1. (a, b) \\<in> Restr (uconnected F) verts", "by (auto simp: uconnected_def)"], ["proof (state)\nthis:\n  (a, b) \\<in> Restr (uconnected F) verts\n\ngoal (1 subgoal):\n 1. Upair x y \\<notin> set p \\<Longrightarrow>\n    (a, b) \\<in> per_union (Restr (uconnected F) verts) x y", "then"], ["proof (chain)\npicking this:\n  (a, b) \\<in> Restr (uconnected F) verts", "show ?thesis"], ["proof (prove)\nusing this:\n  (a, b) \\<in> Restr (uconnected F) verts\n\ngoal (1 subgoal):\n 1. (a, b) \\<in> per_union (Restr (uconnected F) verts) x y", "unfolding per_union_def"], ["proof (prove)\nusing this:\n  (a, b) \\<in> Restr (uconnected F) verts\n\ngoal (1 subgoal):\n 1. (a, b)\n    \\<in> Restr (uconnected F) verts \\<union>\n          {(xa, ya).\n           (xa, x) \\<in> Restr (uconnected F) verts \\<and>\n           (ya, y) \\<in> Restr (uconnected F) verts} \\<union>\n          {(ya, xa).\n           (xa, x) \\<in> Restr (uconnected F) verts \\<and>\n           (ya, y) \\<in> Restr (uconnected F) verts}", "by auto"], ["proof (state)\nthis:\n  (a, b) \\<in> per_union (Restr (uconnected F) verts) x y\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (a, b) \\<in> per_union (Restr (uconnected F) verts) x y\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (a, b)\n       \\<in> per_union (Restr (uconnected F) verts) x y \\<Longrightarrow>\n       (a, b) \\<in> Restr (uconnected (insert (Upair x y) F)) verts", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (a, b)\n       \\<in> per_union (Restr (uconnected F) verts) x y \\<Longrightarrow>\n       (a, b) \\<in> Restr (uconnected (insert (Upair x y) F)) verts", "fix a b"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (a, b)\n       \\<in> per_union (Restr (uconnected F) verts) x y \\<Longrightarrow>\n       (a, b) \\<in> Restr (uconnected (insert (Upair x y) F)) verts", "assume asm: \"(a,b)\\<in>per_union ?uf x y\""], ["proof (state)\nthis:\n  (a, b) \\<in> per_union (Restr (uconnected F) verts) x y\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (a, b)\n       \\<in> per_union (Restr (uconnected F) verts) x y \\<Longrightarrow>\n       (a, b) \\<in> Restr (uconnected (insert (Upair x y) F)) verts", "have \"per_union ?uf x y \\<subseteq> verts \\<times> verts\""], ["proof (prove)\ngoal (1 subgoal):\n 1. per_union (Restr (uconnected F) verts) x y\n    \\<subseteq> verts \\<times> verts", "apply(rule per_union_subs)"], ["proof (prove)\ngoal (3 subgoals):\n 1. x \\<in> verts\n 2. y \\<in> verts\n 3. Restr (uconnected F) verts \\<subseteq> verts \\<times> verts", "using inV"], ["proof (prove)\nusing this:\n  x \\<in> verts\n  y \\<in> verts\n\ngoal (3 subgoals):\n 1. x \\<in> verts\n 2. y \\<in> verts\n 3. Restr (uconnected F) verts \\<subseteq> verts \\<times> verts", "by auto"], ["proof (state)\nthis:\n  per_union (Restr (uconnected F) verts) x y\n  \\<subseteq> verts \\<times> verts\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (a, b)\n       \\<in> per_union (Restr (uconnected F) verts) x y \\<Longrightarrow>\n       (a, b) \\<in> Restr (uconnected (insert (Upair x y) F)) verts", "with asm"], ["proof (chain)\npicking this:\n  (a, b) \\<in> per_union (Restr (uconnected F) verts) x y\n  per_union (Restr (uconnected F) verts) x y\n  \\<subseteq> verts \\<times> verts", "have ab: \"a\\<in>verts\" \"b\\<in>verts\""], ["proof (prove)\nusing this:\n  (a, b) \\<in> per_union (Restr (uconnected F) verts) x y\n  per_union (Restr (uconnected F) verts) x y\n  \\<subseteq> verts \\<times> verts\n\ngoal (1 subgoal):\n 1. a \\<in> verts &&& b \\<in> verts", "by auto"], ["proof (state)\nthis:\n  a \\<in> verts\n  b \\<in> verts\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (a, b)\n       \\<in> per_union (Restr (uconnected F) verts) x y \\<Longrightarrow>\n       (a, b) \\<in> Restr (uconnected (insert (Upair x y) F)) verts", "have \"Upair x y \\<in> ?F'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Upair x y \\<in> insert (Upair x y) F", "by simp"], ["proof (state)\nthis:\n  Upair x y \\<in> insert (Upair x y) F\n\ngoal (1 subgoal):\n 1. \\<And>a b.\n       (a, b)\n       \\<in> per_union (Restr (uconnected F) verts) x y \\<Longrightarrow>\n       (a, b) \\<in> Restr (uconnected (insert (Upair x y) F)) verts", "show \"(a,b) \\<in> uconnectedV ?F'\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (a, b) \\<in> Restr (uconnected (insert (Upair x y) F)) verts", "proof (cases \"(a, b) \\<in> ?uf\")"], ["proof (state)\ngoal (2 subgoals):\n 1. (a, b) \\<in> Restr (uconnected F) verts \\<Longrightarrow>\n    (a, b) \\<in> Restr (uconnected (insert (Upair x y) F)) verts\n 2. (a, b) \\<notin> Restr (uconnected F) verts \\<Longrightarrow>\n    (a, b) \\<in> Restr (uconnected (insert (Upair x y) F)) verts", "case True"], ["proof (state)\nthis:\n  (a, b) \\<in> Restr (uconnected F) verts\n\ngoal (2 subgoals):\n 1. (a, b) \\<in> Restr (uconnected F) verts \\<Longrightarrow>\n    (a, b) \\<in> Restr (uconnected (insert (Upair x y) F)) verts\n 2. (a, b) \\<notin> Restr (uconnected F) verts \\<Longrightarrow>\n    (a, b) \\<in> Restr (uconnected (insert (Upair x y) F)) verts", "then"], ["proof (chain)\npicking this:\n  (a, b) \\<in> Restr (uconnected F) verts", "show ?thesis"], ["proof (prove)\nusing this:\n  (a, b) \\<in> Restr (uconnected F) verts\n\ngoal (1 subgoal):\n 1. (a, b) \\<in> Restr (uconnected (insert (Upair x y) F)) verts", "using uconnectedV_mono"], ["proof (prove)\nusing this:\n  (a, b) \\<in> Restr (uconnected F) verts\n  \\<lbrakk>(?a, ?b) \\<in> Restr (uconnected ?F) verts;\n   ?F \\<subseteq> ?F'\\<rbrakk>\n  \\<Longrightarrow> (?a, ?b) \\<in> Restr (uconnected ?F') verts\n\ngoal (1 subgoal):\n 1. (a, b) \\<in> Restr (uconnected (insert (Upair x y) F)) verts", "by blast"], ["proof (state)\nthis:\n  (a, b) \\<in> Restr (uconnected (insert (Upair x y) F)) verts\n\ngoal (1 subgoal):\n 1. (a, b) \\<notin> Restr (uconnected F) verts \\<Longrightarrow>\n    (a, b) \\<in> Restr (uconnected (insert (Upair x y) F)) verts", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. (a, b) \\<notin> Restr (uconnected F) verts \\<Longrightarrow>\n    (a, b) \\<in> Restr (uconnected (insert (Upair x y) F)) verts", "case False"], ["proof (state)\nthis:\n  (a, b) \\<notin> Restr (uconnected F) verts\n\ngoal (1 subgoal):\n 1. (a, b) \\<notin> Restr (uconnected F) verts \\<Longrightarrow>\n    (a, b) \\<in> Restr (uconnected (insert (Upair x y) F)) verts", "with asm part_equiv_sym[OF PER]"], ["proof (chain)\npicking this:\n  (a, b) \\<in> per_union (Restr (uconnected F) verts) x y\n  (?x, ?y) \\<in> Restr (uconnected F) verts \\<Longrightarrow>\n  (?y, ?x) \\<in> Restr (uconnected F) verts\n  (a, b) \\<notin> Restr (uconnected F) verts", "have \"(a,x) \\<in> ?uf \\<and> (y,b) \\<in> ?uf  \\<or>  (a,y) \\<in> ?uf \\<and> (x,b) \\<in> ?uf\""], ["proof (prove)\nusing this:\n  (a, b) \\<in> per_union (Restr (uconnected F) verts) x y\n  (?x, ?y) \\<in> Restr (uconnected F) verts \\<Longrightarrow>\n  (?y, ?x) \\<in> Restr (uconnected F) verts\n  (a, b) \\<notin> Restr (uconnected F) verts\n\ngoal (1 subgoal):\n 1. (a, x) \\<in> Restr (uconnected F) verts \\<and>\n    (y, b) \\<in> Restr (uconnected F) verts \\<or>\n    (a, y) \\<in> Restr (uconnected F) verts \\<and>\n    (x, b) \\<in> Restr (uconnected F) verts", "by (auto simp: per_union_def)"], ["proof (state)\nthis:\n  (a, x) \\<in> Restr (uconnected F) verts \\<and>\n  (y, b) \\<in> Restr (uconnected F) verts \\<or>\n  (a, y) \\<in> Restr (uconnected F) verts \\<and>\n  (x, b) \\<in> Restr (uconnected F) verts\n\ngoal (1 subgoal):\n 1. (a, b) \\<notin> Restr (uconnected F) verts \\<Longrightarrow>\n    (a, b) \\<in> Restr (uconnected (insert (Upair x y) F)) verts", "with assms(1) \\<open>x\\<in>verts\\<close> \\<open>y\\<in>verts\\<close> inV"], ["proof (chain)\npicking this:\n  x \\<noteq> y\n  x \\<in> verts\n  y \\<in> verts\n  x \\<in> verts\n  y \\<in> verts\n  (a, x) \\<in> Restr (uconnected F) verts \\<and>\n  (y, b) \\<in> Restr (uconnected F) verts \\<or>\n  (a, y) \\<in> Restr (uconnected F) verts \\<and>\n  (x, b) \\<in> Restr (uconnected F) verts", "obtain p q p' q'\n        where \"epath F a p x \\<and> epath F y q b  \\<or>  epath F a p' y \\<and> epath F x q' b\""], ["proof (prove)\nusing this:\n  x \\<noteq> y\n  x \\<in> verts\n  y \\<in> verts\n  x \\<in> verts\n  y \\<in> verts\n  (a, x) \\<in> Restr (uconnected F) verts \\<and>\n  (y, b) \\<in> Restr (uconnected F) verts \\<or>\n  (a, y) \\<in> Restr (uconnected F) verts \\<and>\n  (x, b) \\<in> Restr (uconnected F) verts\n\ngoal (1 subgoal):\n 1. (\\<And>p q p' q'.\n        epath F a p x \\<and> epath F y q b \\<or>\n        epath F a p' y \\<and> epath F x q' b \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "unfolding uconnected_def"], ["proof (prove)\nusing this:\n  x \\<noteq> y\n  x \\<in> verts\n  y \\<in> verts\n  x \\<in> verts\n  y \\<in> verts\n  (a, x) \\<in> Restr {(u, v). \\<exists>p. epath F u p v} verts \\<and>\n  (y, b) \\<in> Restr {(u, v). \\<exists>p. epath F u p v} verts \\<or>\n  (a, y) \\<in> Restr {(u, v). \\<exists>p. epath F u p v} verts \\<and>\n  (x, b) \\<in> Restr {(u, v). \\<exists>p. epath F u p v} verts\n\ngoal (1 subgoal):\n 1. (\\<And>p q p' q'.\n        epath F a p x \\<and> epath F y q b \\<or>\n        epath F a p' y \\<and> epath F x q' b \\<Longrightarrow>\n        thesis) \\<Longrightarrow>\n    thesis", "by fastforce"], ["proof (state)\nthis:\n  epath F a p x \\<and> epath F y q b \\<or>\n  epath F a p' y \\<and> epath F x q' b\n\ngoal (1 subgoal):\n 1. (a, b) \\<notin> Restr (uconnected F) verts \\<Longrightarrow>\n    (a, b) \\<in> Restr (uconnected (insert (Upair x y) F)) verts", "then"], ["proof (chain)\npicking this:\n  epath F a p x \\<and> epath F y q b \\<or>\n  epath F a p' y \\<and> epath F x q' b", "have \"epath ?F' a p x \\<and> epath ?F' y q b  \\<or>  epath ?F' a p' y \\<and> epath ?F' x q' b\""], ["proof (prove)\nusing this:\n  epath F a p x \\<and> epath F y q b \\<or>\n  epath F a p' y \\<and> epath F x q' b\n\ngoal (1 subgoal):\n 1. epath (insert (Upair x y) F) a p x \\<and>\n    epath (insert (Upair x y) F) y q b \\<or>\n    epath (insert (Upair x y) F) a p' y \\<and>\n    epath (insert (Upair x y) F) x q' b", "by (auto intro: epath_mono)"], ["proof (state)\nthis:\n  epath (insert (Upair x y) F) a p x \\<and>\n  epath (insert (Upair x y) F) y q b \\<or>\n  epath (insert (Upair x y) F) a p' y \\<and>\n  epath (insert (Upair x y) F) x q' b\n\ngoal (1 subgoal):\n 1. (a, b) \\<notin> Restr (uconnected F) verts \\<Longrightarrow>\n    (a, b) \\<in> Restr (uconnected (insert (Upair x y) F)) verts", "then"], ["proof (chain)\npicking this:\n  epath (insert (Upair x y) F) a p x \\<and>\n  epath (insert (Upair x y) F) y q b \\<or>\n  epath (insert (Upair x y) F) a p' y \\<and>\n  epath (insert (Upair x y) F) x q' b", "have 2: \"epath ?F' a (p @ Upair x y # q) b \\<or>  epath ?F' a (p' @ Upair x y # q') b\""], ["proof (prove)\nusing this:\n  epath (insert (Upair x y) F) a p x \\<and>\n  epath (insert (Upair x y) F) y q b \\<or>\n  epath (insert (Upair x y) F) a p' y \\<and>\n  epath (insert (Upair x y) F) x q' b\n\ngoal (1 subgoal):\n 1. epath (insert (Upair x y) F) a (p @ Upair x y # q) b \\<or>\n    epath (insert (Upair x y) F) a (p' @ Upair x y # q') b", "using assms(1)"], ["proof (prove)\nusing this:\n  epath (insert (Upair x y) F) a p x \\<and>\n  epath (insert (Upair x y) F) y q b \\<or>\n  epath (insert (Upair x y) F) a p' y \\<and>\n  epath (insert (Upair x y) F) x q' b\n  x \\<noteq> y\n\ngoal (1 subgoal):\n 1. epath (insert (Upair x y) F) a (p @ Upair x y # q) b \\<or>\n    epath (insert (Upair x y) F) a (p' @ Upair x y # q') b", "by auto"], ["proof (state)\nthis:\n  epath (insert (Upair x y) F) a (p @ Upair x y # q) b \\<or>\n  epath (insert (Upair x y) F) a (p' @ Upair x y # q') b\n\ngoal (1 subgoal):\n 1. (a, b) \\<notin> Restr (uconnected F) verts \\<Longrightarrow>\n    (a, b) \\<in> Restr (uconnected (insert (Upair x y) F)) verts", "then"], ["proof (chain)\npicking this:\n  epath (insert (Upair x y) F) a (p @ Upair x y # q) b \\<or>\n  epath (insert (Upair x y) F) a (p' @ Upair x y # q') b", "show ?thesis"], ["proof (prove)\nusing this:\n  epath (insert (Upair x y) F) a (p @ Upair x y # q) b \\<or>\n  epath (insert (Upair x y) F) a (p' @ Upair x y # q') b\n\ngoal (1 subgoal):\n 1. (a, b) \\<in> Restr (uconnected (insert (Upair x y) F)) verts", "unfolding uconnected_def"], ["proof (prove)\nusing this:\n  epath (insert (Upair x y) F) a (p @ Upair x y # q) b \\<or>\n  epath (insert (Upair x y) F) a (p' @ Upair x y # q') b\n\ngoal (1 subgoal):\n 1. (a, b)\n    \\<in> Restr {(u, v). \\<exists>p. epath (insert (Upair x y) F) u p v}\n           verts", "using ab"], ["proof (prove)\nusing this:\n  epath (insert (Upair x y) F) a (p @ Upair x y # q) b \\<or>\n  epath (insert (Upair x y) F) a (p' @ Upair x y # q') b\n  a \\<in> verts\n  b \\<in> verts\n\ngoal (1 subgoal):\n 1. (a, b)\n    \\<in> Restr {(u, v). \\<exists>p. epath (insert (Upair x y) F) u p v}\n           verts", "by blast"], ["proof (state)\nthis:\n  (a, b) \\<in> Restr (uconnected (insert (Upair x y) F)) verts\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  (a, b) \\<in> Restr (uconnected (insert (Upair x y) F)) verts\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  Restr (uconnected (insert (Upair x y) F)) verts =\n  per_union (Restr (uconnected F) verts) x y\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma epath_filter_selfloop: \"epath (insert (Upair x x) F) a p b \\<Longrightarrow> \\<exists>p. epath F a p b\""], ["proof (prove)\ngoal (1 subgoal):\n 1. epath (insert (Upair x x) F) a p b \\<Longrightarrow>\n    \\<exists>p. epath F a p b", "proof (induction n == \"length p\" arbitrary: p  rule: nat_less_induct)"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>\\<forall>m<length p.\n                   \\<forall>xa.\n                      m = length xa \\<longrightarrow>\n                      epath (insert (Upair x x) F) a xa b \\<longrightarrow>\n                      (\\<exists>p. epath F a p b);\n        epath (insert (Upair x x) F) a p b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p. epath F a p b", "case 1"], ["proof (state)\nthis:\n  \\<forall>m<length p.\n     \\<forall>xa.\n        m = length xa \\<longrightarrow>\n        epath (insert (Upair x x) F) a xa b \\<longrightarrow>\n        (\\<exists>p. epath F a p b)\n  epath (insert (Upair x x) F) a p b\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>\\<forall>m<length p.\n                   \\<forall>xa.\n                      m = length xa \\<longrightarrow>\n                      epath (insert (Upair x x) F) a xa b \\<longrightarrow>\n                      (\\<exists>p. epath F a p b);\n        epath (insert (Upair x x) F) a p b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p. epath F a p b", "from 1(1)"], ["proof (chain)\npicking this:\n  \\<forall>m<length p.\n     \\<forall>xa.\n        m = length xa \\<longrightarrow>\n        epath (insert (Upair x x) F) a xa b \\<longrightarrow>\n        (\\<exists>p. epath F a p b)", "have indhyp:\n      \"\\<And>xa. length xa < length p \\<Longrightarrow> epath (insert (Upair x x) F) a xa b \\<Longrightarrow> (\\<exists>p. epath F a p b)\""], ["proof (prove)\nusing this:\n  \\<forall>m<length p.\n     \\<forall>xa.\n        m = length xa \\<longrightarrow>\n        epath (insert (Upair x x) F) a xa b \\<longrightarrow>\n        (\\<exists>p. epath F a p b)\n\ngoal (1 subgoal):\n 1. \\<And>xa.\n       \\<lbrakk>length xa < length p;\n        epath (insert (Upair x x) F) a xa b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p. epath F a p b", "by auto"], ["proof (state)\nthis:\n  \\<lbrakk>length ?xa < length p;\n   epath (insert (Upair x x) F) a ?xa b\\<rbrakk>\n  \\<Longrightarrow> \\<exists>p. epath F a p b\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>\\<forall>m<length p.\n                   \\<forall>xa.\n                      m = length xa \\<longrightarrow>\n                      epath (insert (Upair x x) F) a xa b \\<longrightarrow>\n                      (\\<exists>p. epath F a p b);\n        epath (insert (Upair x x) F) a p b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p. epath F a p b", "from 1(2)"], ["proof (chain)\npicking this:\n  epath (insert (Upair x x) F) a p b", "have k: \"set p \\<subseteq> (insert (Upair x x) F)\""], ["proof (prove)\nusing this:\n  epath (insert (Upair x x) F) a p b\n\ngoal (1 subgoal):\n 1. set p \\<subseteq> insert (Upair x x) F", "using epath_subset_E"], ["proof (prove)\nusing this:\n  epath (insert (Upair x x) F) a p b\n  epath ?E ?u ?p ?v \\<Longrightarrow> set ?p \\<subseteq> ?E\n\ngoal (1 subgoal):\n 1. set p \\<subseteq> insert (Upair x x) F", "by fast"], ["proof (state)\nthis:\n  set p \\<subseteq> insert (Upair x x) F\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>\\<forall>m<length p.\n                   \\<forall>xa.\n                      m = length xa \\<longrightarrow>\n                      epath (insert (Upair x x) F) a xa b \\<longrightarrow>\n                      (\\<exists>p. epath F a p b);\n        epath (insert (Upair x x) F) a p b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p. epath F a p b", "{"], ["proof (state)\nthis:\n  set p \\<subseteq> insert (Upair x x) F\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>\\<forall>m<length p.\n                   \\<forall>xa.\n                      m = length xa \\<longrightarrow>\n                      epath (insert (Upair x x) F) a xa b \\<longrightarrow>\n                      (\\<exists>p. epath F a p b);\n        epath (insert (Upair x x) F) a p b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p. epath F a p b", "assume a: \"set p \\<subseteq> F\""], ["proof (state)\nthis:\n  set p \\<subseteq> F\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>\\<forall>m<length p.\n                   \\<forall>xa.\n                      m = length xa \\<longrightarrow>\n                      epath (insert (Upair x x) F) a xa b \\<longrightarrow>\n                      (\\<exists>p. epath F a p b);\n        epath (insert (Upair x x) F) a p b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p. epath F a p b", "have F: \"(insert (Upair x x) F \\<inter> F) = F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. insert (Upair x x) F \\<inter> F = F", "by auto"], ["proof (state)\nthis:\n  insert (Upair x x) F \\<inter> F = F\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>\\<forall>m<length p.\n                   \\<forall>xa.\n                      m = length xa \\<longrightarrow>\n                      epath (insert (Upair x x) F) a xa b \\<longrightarrow>\n                      (\\<exists>p. epath F a p b);\n        epath (insert (Upair x x) F) a p b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p. epath F a p b", "from epath_restrict[OF a 1(2)] F"], ["proof (chain)\npicking this:\n  epath (insert (Upair x x) F \\<inter> F) a p b\n  insert (Upair x x) F \\<inter> F = F", "have \"epath F a p b\""], ["proof (prove)\nusing this:\n  epath (insert (Upair x x) F \\<inter> F) a p b\n  insert (Upair x x) F \\<inter> F = F\n\ngoal (1 subgoal):\n 1. epath F a p b", "by simp"], ["proof (state)\nthis:\n  epath F a p b\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>\\<forall>m<length p.\n                   \\<forall>xa.\n                      m = length xa \\<longrightarrow>\n                      epath (insert (Upair x x) F) a xa b \\<longrightarrow>\n                      (\\<exists>p. epath F a p b);\n        epath (insert (Upair x x) F) a p b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p. epath F a p b", "then"], ["proof (chain)\npicking this:\n  epath F a p b", "have \"(\\<exists>p. epath F a p b)\""], ["proof (prove)\nusing this:\n  epath F a p b\n\ngoal (1 subgoal):\n 1. \\<exists>p. epath F a p b", "by auto"], ["proof (state)\nthis:\n  \\<exists>p. epath F a p b\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>\\<forall>m<length p.\n                   \\<forall>xa.\n                      m = length xa \\<longrightarrow>\n                      epath (insert (Upair x x) F) a xa b \\<longrightarrow>\n                      (\\<exists>p. epath F a p b);\n        epath (insert (Upair x x) F) a p b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p. epath F a p b", "}"], ["proof (state)\nthis:\n  set p \\<subseteq> F \\<Longrightarrow> \\<exists>p. epath F a p b\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>\\<forall>m<length p.\n                   \\<forall>xa.\n                      m = length xa \\<longrightarrow>\n                      epath (insert (Upair x x) F) a xa b \\<longrightarrow>\n                      (\\<exists>p. epath F a p b);\n        epath (insert (Upair x x) F) a p b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p. epath F a p b", "moreover"], ["proof (state)\nthis:\n  set p \\<subseteq> F \\<Longrightarrow> \\<exists>p. epath F a p b\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>\\<forall>m<length p.\n                   \\<forall>xa.\n                      m = length xa \\<longrightarrow>\n                      epath (insert (Upair x x) F) a xa b \\<longrightarrow>\n                      (\\<exists>p. epath F a p b);\n        epath (insert (Upair x x) F) a p b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p. epath F a p b", "{"], ["proof (state)\nthis:\n  set p \\<subseteq> F \\<Longrightarrow> \\<exists>p. epath F a p b\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>\\<forall>m<length p.\n                   \\<forall>xa.\n                      m = length xa \\<longrightarrow>\n                      epath (insert (Upair x x) F) a xa b \\<longrightarrow>\n                      (\\<exists>p. epath F a p b);\n        epath (insert (Upair x x) F) a p b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p. epath F a p b", "assume \"\\<not> set p \\<subseteq> F\""], ["proof (state)\nthis:\n  \\<not> set p \\<subseteq> F\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>\\<forall>m<length p.\n                   \\<forall>xa.\n                      m = length xa \\<longrightarrow>\n                      epath (insert (Upair x x) F) a xa b \\<longrightarrow>\n                      (\\<exists>p. epath F a p b);\n        epath (insert (Upair x x) F) a p b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p. epath F a p b", "with k"], ["proof (chain)\npicking this:\n  set p \\<subseteq> insert (Upair x x) F\n  \\<not> set p \\<subseteq> F", "have \"Upair x x \\<in> set p\""], ["proof (prove)\nusing this:\n  set p \\<subseteq> insert (Upair x x) F\n  \\<not> set p \\<subseteq> F\n\ngoal (1 subgoal):\n 1. Upair x x \\<in> set p", "by auto"], ["proof (state)\nthis:\n  Upair x x \\<in> set p\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>\\<forall>m<length p.\n                   \\<forall>xa.\n                      m = length xa \\<longrightarrow>\n                      epath (insert (Upair x x) F) a xa b \\<longrightarrow>\n                      (\\<exists>p. epath F a p b);\n        epath (insert (Upair x x) F) a p b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p. epath F a p b", "then"], ["proof (chain)\npicking this:\n  Upair x x \\<in> set p", "obtain xs ys where p: \"p = xs @ Upair x x # ys\""], ["proof (prove)\nusing this:\n  Upair x x \\<in> set p\n\ngoal (1 subgoal):\n 1. (\\<And>xs ys.\n        p = xs @ Upair x x # ys \\<Longrightarrow> thesis) \\<Longrightarrow>\n    thesis", "by (meson split_list_last)"], ["proof (state)\nthis:\n  p = xs @ Upair x x # ys\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>\\<forall>m<length p.\n                   \\<forall>xa.\n                      m = length xa \\<longrightarrow>\n                      epath (insert (Upair x x) F) a xa b \\<longrightarrow>\n                      (\\<exists>p. epath F a p b);\n        epath (insert (Upair x x) F) a p b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p. epath F a p b", "then"], ["proof (chain)\npicking this:\n  p = xs @ Upair x x # ys", "have \"epath (insert (Upair x x) F) a xs x\"  \"epath (insert (Upair x x) F) x ys b\""], ["proof (prove)\nusing this:\n  p = xs @ Upair x x # ys\n\ngoal (1 subgoal):\n 1. epath (insert (Upair x x) F) a xs x &&&\n    epath (insert (Upair x x) F) x ys b", "using \"1.prems\""], ["proof (prove)\nusing this:\n  p = xs @ Upair x x # ys\n  epath (insert (Upair x x) F) a p b\n\ngoal (1 subgoal):\n 1. epath (insert (Upair x x) F) a xs x &&&\n    epath (insert (Upair x x) F) x ys b", "by auto"], ["proof (state)\nthis:\n  epath (insert (Upair x x) F) a xs x\n  epath (insert (Upair x x) F) x ys b\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>\\<forall>m<length p.\n                   \\<forall>xa.\n                      m = length xa \\<longrightarrow>\n                      epath (insert (Upair x x) F) a xa b \\<longrightarrow>\n                      (\\<exists>p. epath F a p b);\n        epath (insert (Upair x x) F) a p b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p. epath F a p b", "then"], ["proof (chain)\npicking this:\n  epath (insert (Upair x x) F) a xs x\n  epath (insert (Upair x x) F) x ys b", "have \"epath (insert (Upair x x) F) a (xs@ys) b\""], ["proof (prove)\nusing this:\n  epath (insert (Upair x x) F) a xs x\n  epath (insert (Upair x x) F) x ys b\n\ngoal (1 subgoal):\n 1. epath (insert (Upair x x) F) a (xs @ ys) b", "by auto"], ["proof (state)\nthis:\n  epath (insert (Upair x x) F) a (xs @ ys) b\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>\\<forall>m<length p.\n                   \\<forall>xa.\n                      m = length xa \\<longrightarrow>\n                      epath (insert (Upair x x) F) a xa b \\<longrightarrow>\n                      (\\<exists>p. epath F a p b);\n        epath (insert (Upair x x) F) a p b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p. epath F a p b", "from indhyp[OF _ this] p"], ["proof (chain)\npicking this:\n  length (xs @ ys) < length p \\<Longrightarrow> \\<exists>p. epath F a p b\n  p = xs @ Upair x x # ys", "have \"(\\<exists>p. epath F a p b)\""], ["proof (prove)\nusing this:\n  length (xs @ ys) < length p \\<Longrightarrow> \\<exists>p. epath F a p b\n  p = xs @ Upair x x # ys\n\ngoal (1 subgoal):\n 1. \\<exists>p. epath F a p b", "by simp"], ["proof (state)\nthis:\n  \\<exists>p. epath F a p b\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>\\<forall>m<length p.\n                   \\<forall>xa.\n                      m = length xa \\<longrightarrow>\n                      epath (insert (Upair x x) F) a xa b \\<longrightarrow>\n                      (\\<exists>p. epath F a p b);\n        epath (insert (Upair x x) F) a p b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p. epath F a p b", "}"], ["proof (state)\nthis:\n  \\<not> set p \\<subseteq> F \\<Longrightarrow> \\<exists>p. epath F a p b\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>\\<forall>m<length p.\n                   \\<forall>xa.\n                      m = length xa \\<longrightarrow>\n                      epath (insert (Upair x x) F) a xa b \\<longrightarrow>\n                      (\\<exists>p. epath F a p b);\n        epath (insert (Upair x x) F) a p b\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p. epath F a p b", "ultimately"], ["proof (chain)\npicking this:\n  set p \\<subseteq> F \\<Longrightarrow> \\<exists>p. epath F a p b\n  \\<not> set p \\<subseteq> F \\<Longrightarrow> \\<exists>p. epath F a p b", "show ?thesis"], ["proof (prove)\nusing this:\n  set p \\<subseteq> F \\<Longrightarrow> \\<exists>p. epath F a p b\n  \\<not> set p \\<subseteq> F \\<Longrightarrow> \\<exists>p. epath F a p b\n\ngoal (1 subgoal):\n 1. \\<exists>p. epath F a p b", "by auto"], ["proof (state)\nthis:\n  \\<exists>p. epath F a p b\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma uconnectedV_insert_selfloop: \"x\\<in>verts \\<Longrightarrow> uconnectedV (insert (Upair x x) F) = uconnectedV F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<in> verts \\<Longrightarrow>\n    Restr (uconnected (insert (Upair x x) F)) verts =\n    Restr (uconnected F) verts", "apply(rule)"], ["proof (prove)\ngoal (2 subgoals):\n 1. x \\<in> verts \\<Longrightarrow>\n    Restr (uconnected (insert (Upair x x) F)) verts\n    \\<subseteq> Restr (uconnected F) verts\n 2. x \\<in> verts \\<Longrightarrow>\n    Restr (uconnected F) verts\n    \\<subseteq> Restr (uconnected (insert (Upair x x) F)) verts", "apply auto"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>a b xa xaa xb.\n       \\<lbrakk>(a, b) \\<in> uconnected (insert (Upair x x) F); xa \\<in> E;\n        x \\<in> set_uprod xa; xaa \\<in> E; a \\<in> set_uprod xaa;\n        xb \\<in> E; b \\<in> set_uprod xb\\<rbrakk>\n       \\<Longrightarrow> (a, b) \\<in> uconnected F\n 2. \\<And>a b xa xaa xb.\n       \\<lbrakk>(a, b) \\<in> uconnected F; xa \\<in> E; x \\<in> set_uprod xa;\n        xaa \\<in> E; a \\<in> set_uprod xaa; xb \\<in> E;\n        b \\<in> set_uprod xb\\<rbrakk>\n       \\<Longrightarrow> (a, b) \\<in> uconnected (insert (Upair x x) F)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(a_, b_) \\<in> uconnected (insert (Upair x x) F); xa_ \\<in> E;\n     x \\<in> set_uprod xa_; xaa_ \\<in> E; a_ \\<in> set_uprod xaa_;\n     xb_ \\<in> E; b_ \\<in> set_uprod xb_\\<rbrakk>\n    \\<Longrightarrow> (a_, b_) \\<in> uconnected F", "unfolding uconnected_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(a_, b_)\n             \\<in> {(u, v). \\<exists>p. epath (insert (Upair x x) F) u p v};\n     xa_ \\<in> E; x \\<in> set_uprod xa_; xaa_ \\<in> E;\n     a_ \\<in> set_uprod xaa_; xb_ \\<in> E; b_ \\<in> set_uprod xb_\\<rbrakk>\n    \\<Longrightarrow> (a_, b_) \\<in> {(u, v). \\<exists>p. epath F u p v}", "apply auto"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>xa_ \\<in> E; x \\<in> set_uprod xa_; xaa_ \\<in> E;\n        a_ \\<in> set_uprod xaa_; xb_ \\<in> E; b_ \\<in> set_uprod xb_;\n        epath (insert (Upair x x) F) a_ p b_\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p. epath F a_ p b_", "using epath_filter_selfloop"], ["proof (prove)\nusing this:\n  epath (insert (Upair ?x ?x) ?F) ?a ?p ?b \\<Longrightarrow>\n  \\<exists>p. epath ?F ?a p ?b\n\ngoal (1 subgoal):\n 1. \\<And>p.\n       \\<lbrakk>xa_ \\<in> E; x \\<in> set_uprod xa_; xaa_ \\<in> E;\n        a_ \\<in> set_uprod xaa_; xb_ \\<in> E; b_ \\<in> set_uprod xb_;\n        epath (insert (Upair x x) F) a_ p b_\\<rbrakk>\n       \\<Longrightarrow> \\<exists>p. epath F a_ p b_", "by metis"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>a b xa xaa xb.\n       \\<lbrakk>(a, b) \\<in> uconnected F; xa \\<in> E; x \\<in> set_uprod xa;\n        xaa \\<in> E; a \\<in> set_uprod xaa; xb \\<in> E;\n        b \\<in> set_uprod xb\\<rbrakk>\n       \\<Longrightarrow> (a, b) \\<in> uconnected (insert (Upair x x) F)", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(a_, b_) \\<in> uconnected F; xa_ \\<in> E;\n     x \\<in> set_uprod xa_; xaa_ \\<in> E; a_ \\<in> set_uprod xaa_;\n     xb_ \\<in> E; b_ \\<in> set_uprod xb_\\<rbrakk>\n    \\<Longrightarrow> (a_, b_) \\<in> uconnected (insert (Upair x x) F)", "by (meson subsetCE subset_insertI uconnected_mono)"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma equiv_selfloop_per_union_id: \"equiv S F \\<Longrightarrow> x\\<in>S \\<Longrightarrow> per_union F x x = F\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>equiv S F; x \\<in> S\\<rbrakk>\n    \\<Longrightarrow> per_union F x x = F", "apply rule"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<lbrakk>equiv S F; x \\<in> S\\<rbrakk>\n    \\<Longrightarrow> per_union F x x \\<subseteq> F\n 2. \\<lbrakk>equiv S F; x \\<in> S\\<rbrakk>\n    \\<Longrightarrow> F \\<subseteq> per_union F x x", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>equiv S F; x \\<in> S\\<rbrakk>\n    \\<Longrightarrow> per_union F x x \\<subseteq> F", "unfolding per_union_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>equiv S F; x \\<in> S\\<rbrakk>\n    \\<Longrightarrow> F \\<union>\n                      {(xa, y).\n                       (xa, x) \\<in> F \\<and> (y, x) \\<in> F} \\<union>\n                      {(y, xa). (xa, x) \\<in> F \\<and> (y, x) \\<in> F}\n                      \\<subseteq> F", "using equiv_class_eq_iff"], ["proof (prove)\nusing this:\n  equiv ?A ?r \\<Longrightarrow>\n  ((?x, ?y) \\<in> ?r) =\n  (?r `` {?x} = ?r `` {?y} \\<and> ?x \\<in> ?A \\<and> ?y \\<in> ?A)\n\ngoal (1 subgoal):\n 1. \\<lbrakk>equiv S F; x \\<in> S\\<rbrakk>\n    \\<Longrightarrow> F \\<union>\n                      {(xa, y).\n                       (xa, x) \\<in> F \\<and> (y, x) \\<in> F} \\<union>\n                      {(y, xa). (xa, x) \\<in> F \\<and> (y, x) \\<in> F}\n                      \\<subseteq> F", "by fastforce"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>equiv S F; x \\<in> S\\<rbrakk>\n    \\<Longrightarrow> F \\<subseteq> per_union F x x", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>equiv S F; x \\<in> S\\<rbrakk>\n    \\<Longrightarrow> F \\<subseteq> per_union F x x", "unfolding per_union_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>equiv S F; x \\<in> S\\<rbrakk>\n    \\<Longrightarrow> F \\<subseteq> F \\<union>\n                                    {(xa, y).\n                                     (xa, x) \\<in> F \\<and>\n                                     (y, x) \\<in> F} \\<union>\n                                    {(y, xa).\n                                     (xa, x) \\<in> F \\<and> (y, x) \\<in> F}", "by auto"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma insert_uconnectedV_per_eq: \n  assumes    inV: \"x\\<in>verts\"   and subE: \"F\\<subseteq>E\"\n  shows \"uconnectedV (insert (Upair x x) F) = per_union (uconnectedV F) x x\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Restr (uconnected (insert (Upair x x) F)) verts =\n    per_union (Restr (uconnected F) verts) x x", "using assms"], ["proof (prove)\nusing this:\n  x \\<in> verts\n  F \\<subseteq> E\n\ngoal (1 subgoal):\n 1. Restr (uconnected (insert (Upair x x) F)) verts =\n    per_union (Restr (uconnected F) verts) x x", "by(simp add: uconnectedV_insert_selfloop equiv_selfloop_per_union_id[OF equiv_vert_uconnected])"], ["", "lemma insert_uconnectedV_per': \n  assumes  inV: \"x\\<in>verts\" \"y\\<in>verts\" and subE: \"F\\<subseteq>E\"\n  shows \"uconnectedV (insert (Upair x y) F) = per_union (uconnectedV F) x y\""], ["proof (prove)\ngoal (1 subgoal):\n 1. Restr (uconnected (insert (Upair x y) F)) verts =\n    per_union (Restr (uconnected F) verts) x y", "apply(cases \"x=y\")"], ["proof (prove)\ngoal (2 subgoals):\n 1. x = y \\<Longrightarrow>\n    Restr (uconnected (insert (Upair x y) F)) verts =\n    per_union (Restr (uconnected F) verts) x y\n 2. x \\<noteq> y \\<Longrightarrow>\n    Restr (uconnected (insert (Upair x y) F)) verts =\n    per_union (Restr (uconnected F) verts) x y", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. x = y \\<Longrightarrow>\n    Restr (uconnected (insert (Upair x y) F)) verts =\n    per_union (Restr (uconnected F) verts) x y", "using assms insert_uconnectedV_per_eq"], ["proof (prove)\nusing this:\n  x \\<in> verts\n  y \\<in> verts\n  F \\<subseteq> E\n  \\<lbrakk>?x \\<in> verts; ?F \\<subseteq> E\\<rbrakk>\n  \\<Longrightarrow> Restr (uconnected (insert (Upair ?x ?x) ?F)) verts =\n                    per_union (Restr (uconnected ?F) verts) ?x ?x\n\ngoal (1 subgoal):\n 1. x = y \\<Longrightarrow>\n    Restr (uconnected (insert (Upair x y) F)) verts =\n    per_union (Restr (uconnected F) verts) x y", "by simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow>\n    Restr (uconnected (insert (Upair x y) F)) verts =\n    per_union (Restr (uconnected F) verts) x y", "subgoal"], ["proof (prove)\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow>\n    Restr (uconnected (insert (Upair x y) F)) verts =\n    per_union (Restr (uconnected F) verts) x y", "using assms insert_uconnectedV_per"], ["proof (prove)\nusing this:\n  x \\<in> verts\n  y \\<in> verts\n  F \\<subseteq> E\n  \\<lbrakk>?x \\<noteq> ?y; ?x \\<in> verts; ?y \\<in> verts;\n   ?F \\<subseteq> E\\<rbrakk>\n  \\<Longrightarrow> Restr (uconnected (insert (Upair ?x ?y) ?F)) verts =\n                    per_union (Restr (uconnected ?F) verts) ?x ?y\n\ngoal (1 subgoal):\n 1. x \\<noteq> y \\<Longrightarrow>\n    Restr (uconnected (insert (Upair x y) F)) verts =\n    per_union (Restr (uconnected F) verts) x y", "by simp"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "definition \"subforest F \\<equiv> forest F \\<and> F \\<subseteq> E\""], ["", "definition spanningForest where \"spanningForest X \\<longleftrightarrow> subforest X \\<and> (\\<forall>x \\<in> E - X. \\<not> subforest (insert x X))\""], ["", "definition \"minSpanningForest F \\<equiv> spanningForest F \\<and> (\\<forall>F'. spanningForest F' \\<longrightarrow> sum w F \\<le> sum w F')\""], ["", "end"], ["", "end"]]}