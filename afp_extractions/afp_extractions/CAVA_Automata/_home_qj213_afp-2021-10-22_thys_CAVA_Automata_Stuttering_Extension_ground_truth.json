{"file_name": "/home/qj213/afp-2021-10-22/thys/CAVA_Automata/Stuttering_Extension.thy", "working_directory": "/home/qj213/afp-2021-10-22/thys/CAVA_Automata", "problem_names": ["lemma stutter_extend_edgesI_edge:\n    assumes \"(u, v) \\<in> E\"\n    shows \"(u, v) \\<in> stutter_extend_edges V E\"", "lemma stutter_extend_edgesI_stutter:\n    assumes \"v \\<in> V\" \"v \\<notin> Domain E\"\n    shows \"(v, v) \\<in> stutter_extend_edges V E\"", "lemma stutter_extend_edgesE:\n    assumes \"(u, v) \\<in> stutter_extend_edges V E\"\n    obtains (edge) \"(u, v) \\<in> E\" | (stutter) \"u \\<in> V\" \"u \\<notin> Domain E\" \"u = v\"", "lemma stutter_extend_wf: \"E \\<subseteq> V \\<times> V \\<Longrightarrow> stutter_extend_edges V E \\<subseteq> V \\<times> V\"", "lemma stutter_extend_edges_rtrancl[simp]: \"(stutter_extend_edges V E)\\<^sup>* = E\\<^sup>*\"", "lemma stutter_extend_domain: \"V \\<subseteq> Domain (stutter_extend_edges V E)\"", "lemma stutter_extend_simps[simp]:\n    \"g_V (stutter_extend G) = g_V G\"\n    \"g_E (stutter_extend G) = stutter_extend_edges (g_V G) (g_E G)\"\n    \"g_V0 (stutter_extend G) = g_V0 G\"", "lemma stutter_extend_simps_sa[simp]:\n    \"sa_L (stutter_extend G) = sa_L G\"", "lemma (in graph) stutter_extend_graph: \"graph (stutter_extend G)\"", "lemma (in sa) stutter_extend_sa: \"sa (stutter_extend G)\"", "lemma (in bisimulation) stutter_extend: \"bisimulation R (stutter_extend A) (stutter_extend B)\"", "lemma (in lbisimulation) lstutter_extend: \"lbisimulation R (stutter_extend A) (stutter_extend B)\"", "lemma stutter_extend_pred_of_enex_conv:\n    \"stutter_extend_edges UNIV (rel_of_enex enex) = rel_of_enex (stutter_extend_enex enex)\"", "lemma stutter_extend_en_Some_eq[simp]:\n    \"Some a \\<in> stutter_extend_en en gc \\<longleftrightarrow> a \\<in> en gc\"\n    \"stutter_extend_ex ex (Some a) gc = ex a gc\"", "lemma stutter_extend_ex_None_eq[simp]:\n    \"stutter_extend_ex ex None = id\""], "translations": [["", "lemma stutter_extend_edgesI_edge:\n    assumes \"(u, v) \\<in> E\"\n    shows \"(u, v) \\<in> stutter_extend_edges V E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (u, v) \\<in> stutter_extend_edges V E", "using assms"], ["proof (prove)\nusing this:\n  (u, v) \\<in> E\n\ngoal (1 subgoal):\n 1. (u, v) \\<in> stutter_extend_edges V E", "unfolding stutter_extend_edges_def"], ["proof (prove)\nusing this:\n  (u, v) \\<in> E\n\ngoal (1 subgoal):\n 1. (u, v)\n    \\<in> E \\<union> {(v, v) |v. v \\<in> V \\<and> v \\<notin> Domain E}", "by auto"], ["", "lemma stutter_extend_edgesI_stutter:\n    assumes \"v \\<in> V\" \"v \\<notin> Domain E\"\n    shows \"(v, v) \\<in> stutter_extend_edges V E\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (v, v) \\<in> stutter_extend_edges V E", "using assms"], ["proof (prove)\nusing this:\n  v \\<in> V\n  v \\<notin> Domain E\n\ngoal (1 subgoal):\n 1. (v, v) \\<in> stutter_extend_edges V E", "unfolding stutter_extend_edges_def"], ["proof (prove)\nusing this:\n  v \\<in> V\n  v \\<notin> Domain E\n\ngoal (1 subgoal):\n 1. (v, v)\n    \\<in> E \\<union> {(v, v) |v. v \\<in> V \\<and> v \\<notin> Domain E}", "by auto"], ["", "lemma stutter_extend_edgesE:\n    assumes \"(u, v) \\<in> stutter_extend_edges V E\"\n    obtains (edge) \"(u, v) \\<in> E\" | (stutter) \"u \\<in> V\" \"u \\<notin> Domain E\" \"u = v\""], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(u, v) \\<in> E \\<Longrightarrow> thesis;\n     \\<lbrakk>u \\<in> V; u \\<notin> Domain E; u = v\\<rbrakk>\n     \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "using assms"], ["proof (prove)\nusing this:\n  (u, v) \\<in> stutter_extend_edges V E\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(u, v) \\<in> E \\<Longrightarrow> thesis;\n     \\<lbrakk>u \\<in> V; u \\<notin> Domain E; u = v\\<rbrakk>\n     \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "unfolding stutter_extend_edges_def"], ["proof (prove)\nusing this:\n  (u, v) \\<in> E \\<union> {(v, v) |v. v \\<in> V \\<and> v \\<notin> Domain E}\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(u, v) \\<in> E \\<Longrightarrow> thesis;\n     \\<lbrakk>u \\<in> V; u \\<notin> Domain E; u = v\\<rbrakk>\n     \\<Longrightarrow> thesis\\<rbrakk>\n    \\<Longrightarrow> thesis", "by auto"], ["", "lemma stutter_extend_wf: \"E \\<subseteq> V \\<times> V \\<Longrightarrow> stutter_extend_edges V E \\<subseteq> V \\<times> V\""], ["proof (prove)\ngoal (1 subgoal):\n 1. E \\<subseteq> V \\<times> V \\<Longrightarrow>\n    stutter_extend_edges V E \\<subseteq> V \\<times> V", "unfolding stutter_extend_edges_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. E \\<subseteq> V \\<times> V \\<Longrightarrow>\n    E \\<union> {(v, v) |v. v \\<in> V \\<and> v \\<notin> Domain E}\n    \\<subseteq> V \\<times> V", "by auto"], ["", "lemma stutter_extend_edges_rtrancl[simp]: \"(stutter_extend_edges V E)\\<^sup>* = E\\<^sup>*\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (stutter_extend_edges V E)\\<^sup>* = E\\<^sup>*", "unfolding stutter_extend_edges_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (E \\<union> {(v, v) |v. v \\<in> V \\<and> v \\<notin> Domain E})\\<^sup>* =\n    E\\<^sup>*", "by (auto intro: in_rtrancl_UnI elim: rtrancl_induct)"], ["", "lemma stutter_extend_domain: \"V \\<subseteq> Domain (stutter_extend_edges V E)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. V \\<subseteq> Domain (stutter_extend_edges V E)", "unfolding stutter_extend_edges_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. V \\<subseteq> Domain\n                   (E \\<union>\n                    {(v, v) |v. v \\<in> V \\<and> v \\<notin> Domain E})", "by auto"], ["", "definition stutter_extend :: \"('v, _) graph_rec_scheme \\<Rightarrow> ('v, _) graph_rec_scheme\"\n    where \"stutter_extend G \\<equiv>\n    \\<lparr>\n      g_V = g_V G,\n      g_E = stutter_extend_edges (g_V G) (g_E G),\n      g_V0 = g_V0 G,\n      \\<dots> = graph_rec.more G\n    \\<rparr>\""], ["", "lemma stutter_extend_simps[simp]:\n    \"g_V (stutter_extend G) = g_V G\"\n    \"g_E (stutter_extend G) = stutter_extend_edges (g_V G) (g_E G)\"\n    \"g_V0 (stutter_extend G) = g_V0 G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. g_V (stutter_extend G) = g_V G &&&\n    g_E (stutter_extend G) = stutter_extend_edges (g_V G) (g_E G) &&&\n    g_V0 (stutter_extend G) = g_V0 G", "unfolding stutter_extend_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. g_V \\<lparr>g_V = g_V G, g_E = stutter_extend_edges (g_V G) (g_E G),\n           g_V0 = g_V0 G, \\<dots> = graph_rec.more G\\<rparr> =\n    g_V G &&&\n    g_E \\<lparr>g_V = g_V G, g_E = stutter_extend_edges (g_V G) (g_E G),\n           g_V0 = g_V0 G, \\<dots> = graph_rec.more G\\<rparr> =\n    stutter_extend_edges (g_V G) (g_E G) &&&\n    g_V0\n     \\<lparr>g_V = g_V G, g_E = stutter_extend_edges (g_V G) (g_E G),\n        g_V0 = g_V0 G, \\<dots> = graph_rec.more G\\<rparr> =\n    g_V0 G", "by auto"], ["", "lemma stutter_extend_simps_sa[simp]:\n    \"sa_L (stutter_extend G) = sa_L G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sa_L (stutter_extend G) = sa_L G", "unfolding stutter_extend_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. sa_L\n     \\<lparr>g_V = g_V G, g_E = stutter_extend_edges (g_V G) (g_E G),\n        g_V0 = g_V0 G, \\<dots> = graph_rec.more G\\<rparr> =\n    sa_L G", "by (metis graph_rec.select_convs(4) sa_rec.select_convs(1) sa_rec.surjective)"], ["", "lemma (in graph) stutter_extend_graph: \"graph (stutter_extend G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. graph (stutter_extend G)", "using V0_ss E_ss"], ["proof (prove)\nusing this:\n  V0 \\<subseteq> V\n  E \\<subseteq> V \\<times> V\n\ngoal (1 subgoal):\n 1. graph (stutter_extend G)", "by (unfold_locales, auto intro!: stutter_extend_wf)"], ["", "lemma (in sa) stutter_extend_sa: \"sa (stutter_extend G)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. sa (stutter_extend G)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. sa (stutter_extend G)", "interpret graph \"stutter_extend G\""], ["proof (prove)\ngoal (1 subgoal):\n 1. graph (stutter_extend G)", "using stutter_extend_graph"], ["proof (prove)\nusing this:\n  graph (stutter_extend G)\n\ngoal (1 subgoal):\n 1. graph (stutter_extend G)", "by this"], ["proof (state)\ngoal (1 subgoal):\n 1. sa (stutter_extend G)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. sa (stutter_extend G)", "by unfold_locales"], ["proof (state)\nthis:\n  sa (stutter_extend G)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in bisimulation) stutter_extend: \"bisimulation R (stutter_extend A) (stutter_extend B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bisimulation R (stutter_extend A) (stutter_extend B)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. bisimulation R (stutter_extend A) (stutter_extend B)", "interpret ea: graph \"stutter_extend A\""], ["proof (prove)\ngoal (1 subgoal):\n 1. graph (stutter_extend A)", "by (rule a.stutter_extend_graph)"], ["proof (state)\ngoal (1 subgoal):\n 1. bisimulation R (stutter_extend A) (stutter_extend B)", "interpret eb: graph \"stutter_extend B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. graph (stutter_extend B)", "by (rule b.stutter_extend_graph)"], ["proof (state)\ngoal (1 subgoal):\n 1. bisimulation R (stutter_extend A) (stutter_extend B)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. bisimulation R (stutter_extend A) (stutter_extend B)", "proof"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> ea.V; (a, b) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> b \\<in> eb.V\n 2. \\<And>a0.\n       a0 \\<in> ea.V0 \\<Longrightarrow>\n       \\<exists>b0. b0 \\<in> eb.V0 \\<and> (a0, b0) \\<in> R\n 3. \\<And>a a' b.\n       \\<lbrakk>(a, a') \\<in> ea.E; (a, b) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b'.\n                            (b, b') \\<in> eb.E \\<and> (a', b') \\<in> R\n 4. \\<And>a b.\n       \\<lbrakk>a \\<in> eb.V; (a, b) \\<in> R\\<inverse>\\<rbrakk>\n       \\<Longrightarrow> b \\<in> ea.V\n 5. \\<And>a0.\n       a0 \\<in> eb.V0 \\<Longrightarrow>\n       \\<exists>b0. b0 \\<in> ea.V0 \\<and> (a0, b0) \\<in> R\\<inverse>\n 6. \\<And>a a' b.\n       \\<lbrakk>(a, a') \\<in> eb.E; (a, b) \\<in> R\\<inverse>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b'.\n                            (b, b') \\<in> ea.E \\<and>\n                            (a', b') \\<in> R\\<inverse>", "fix a b"], ["proof (state)\ngoal (6 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> ea.V; (a, b) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> b \\<in> eb.V\n 2. \\<And>a0.\n       a0 \\<in> ea.V0 \\<Longrightarrow>\n       \\<exists>b0. b0 \\<in> eb.V0 \\<and> (a0, b0) \\<in> R\n 3. \\<And>a a' b.\n       \\<lbrakk>(a, a') \\<in> ea.E; (a, b) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b'.\n                            (b, b') \\<in> eb.E \\<and> (a', b') \\<in> R\n 4. \\<And>a b.\n       \\<lbrakk>a \\<in> eb.V; (a, b) \\<in> R\\<inverse>\\<rbrakk>\n       \\<Longrightarrow> b \\<in> ea.V\n 5. \\<And>a0.\n       a0 \\<in> eb.V0 \\<Longrightarrow>\n       \\<exists>b0. b0 \\<in> ea.V0 \\<and> (a0, b0) \\<in> R\\<inverse>\n 6. \\<And>a a' b.\n       \\<lbrakk>(a, a') \\<in> eb.E; (a, b) \\<in> R\\<inverse>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b'.\n                            (b, b') \\<in> ea.E \\<and>\n                            (a', b') \\<in> R\\<inverse>", "assume \"a \\<in> g_V (stutter_extend A)\" \"(a, b) \\<in> R\""], ["proof (state)\nthis:\n  a \\<in> ea.V\n  (a, b) \\<in> R\n\ngoal (6 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> ea.V; (a, b) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> b \\<in> eb.V\n 2. \\<And>a0.\n       a0 \\<in> ea.V0 \\<Longrightarrow>\n       \\<exists>b0. b0 \\<in> eb.V0 \\<and> (a0, b0) \\<in> R\n 3. \\<And>a a' b.\n       \\<lbrakk>(a, a') \\<in> ea.E; (a, b) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b'.\n                            (b, b') \\<in> eb.E \\<and> (a', b') \\<in> R\n 4. \\<And>a b.\n       \\<lbrakk>a \\<in> eb.V; (a, b) \\<in> R\\<inverse>\\<rbrakk>\n       \\<Longrightarrow> b \\<in> ea.V\n 5. \\<And>a0.\n       a0 \\<in> eb.V0 \\<Longrightarrow>\n       \\<exists>b0. b0 \\<in> ea.V0 \\<and> (a0, b0) \\<in> R\\<inverse>\n 6. \\<And>a a' b.\n       \\<lbrakk>(a, a') \\<in> eb.E; (a, b) \\<in> R\\<inverse>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b'.\n                            (b, b') \\<in> ea.E \\<and>\n                            (a', b') \\<in> R\\<inverse>", "thus \"b \\<in> g_V (stutter_extend B)\""], ["proof (prove)\nusing this:\n  a \\<in> ea.V\n  (a, b) \\<in> R\n\ngoal (1 subgoal):\n 1. b \\<in> eb.V", "using s1.nodes_sim"], ["proof (prove)\nusing this:\n  a \\<in> ea.V\n  (a, b) \\<in> R\n  \\<lbrakk>?a \\<in> a.V; (?a, ?b) \\<in> R\\<rbrakk>\n  \\<Longrightarrow> ?b \\<in> b.V\n\ngoal (1 subgoal):\n 1. b \\<in> eb.V", "by simp"], ["proof (state)\nthis:\n  b \\<in> eb.V\n\ngoal (5 subgoals):\n 1. \\<And>a0.\n       a0 \\<in> ea.V0 \\<Longrightarrow>\n       \\<exists>b0. b0 \\<in> eb.V0 \\<and> (a0, b0) \\<in> R\n 2. \\<And>a a' b.\n       \\<lbrakk>(a, a') \\<in> ea.E; (a, b) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b'.\n                            (b, b') \\<in> eb.E \\<and> (a', b') \\<in> R\n 3. \\<And>a b.\n       \\<lbrakk>a \\<in> eb.V; (a, b) \\<in> R\\<inverse>\\<rbrakk>\n       \\<Longrightarrow> b \\<in> ea.V\n 4. \\<And>a0.\n       a0 \\<in> eb.V0 \\<Longrightarrow>\n       \\<exists>b0. b0 \\<in> ea.V0 \\<and> (a0, b0) \\<in> R\\<inverse>\n 5. \\<And>a a' b.\n       \\<lbrakk>(a, a') \\<in> eb.E; (a, b) \\<in> R\\<inverse>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b'.\n                            (b, b') \\<in> ea.E \\<and>\n                            (a', b') \\<in> R\\<inverse>", "next"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>a0.\n       a0 \\<in> ea.V0 \\<Longrightarrow>\n       \\<exists>b0. b0 \\<in> eb.V0 \\<and> (a0, b0) \\<in> R\n 2. \\<And>a a' b.\n       \\<lbrakk>(a, a') \\<in> ea.E; (a, b) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b'.\n                            (b, b') \\<in> eb.E \\<and> (a', b') \\<in> R\n 3. \\<And>a b.\n       \\<lbrakk>a \\<in> eb.V; (a, b) \\<in> R\\<inverse>\\<rbrakk>\n       \\<Longrightarrow> b \\<in> ea.V\n 4. \\<And>a0.\n       a0 \\<in> eb.V0 \\<Longrightarrow>\n       \\<exists>b0. b0 \\<in> ea.V0 \\<and> (a0, b0) \\<in> R\\<inverse>\n 5. \\<And>a a' b.\n       \\<lbrakk>(a, a') \\<in> eb.E; (a, b) \\<in> R\\<inverse>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b'.\n                            (b, b') \\<in> ea.E \\<and>\n                            (a', b') \\<in> R\\<inverse>", "fix a"], ["proof (state)\ngoal (5 subgoals):\n 1. \\<And>a0.\n       a0 \\<in> ea.V0 \\<Longrightarrow>\n       \\<exists>b0. b0 \\<in> eb.V0 \\<and> (a0, b0) \\<in> R\n 2. \\<And>a a' b.\n       \\<lbrakk>(a, a') \\<in> ea.E; (a, b) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b'.\n                            (b, b') \\<in> eb.E \\<and> (a', b') \\<in> R\n 3. \\<And>a b.\n       \\<lbrakk>a \\<in> eb.V; (a, b) \\<in> R\\<inverse>\\<rbrakk>\n       \\<Longrightarrow> b \\<in> ea.V\n 4. \\<And>a0.\n       a0 \\<in> eb.V0 \\<Longrightarrow>\n       \\<exists>b0. b0 \\<in> ea.V0 \\<and> (a0, b0) \\<in> R\\<inverse>\n 5. \\<And>a a' b.\n       \\<lbrakk>(a, a') \\<in> eb.E; (a, b) \\<in> R\\<inverse>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b'.\n                            (b, b') \\<in> ea.E \\<and>\n                            (a', b') \\<in> R\\<inverse>", "assume \"a \\<in> g_V0 (stutter_extend A)\""], ["proof (state)\nthis:\n  a \\<in> ea.V0\n\ngoal (5 subgoals):\n 1. \\<And>a0.\n       a0 \\<in> ea.V0 \\<Longrightarrow>\n       \\<exists>b0. b0 \\<in> eb.V0 \\<and> (a0, b0) \\<in> R\n 2. \\<And>a a' b.\n       \\<lbrakk>(a, a') \\<in> ea.E; (a, b) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b'.\n                            (b, b') \\<in> eb.E \\<and> (a', b') \\<in> R\n 3. \\<And>a b.\n       \\<lbrakk>a \\<in> eb.V; (a, b) \\<in> R\\<inverse>\\<rbrakk>\n       \\<Longrightarrow> b \\<in> ea.V\n 4. \\<And>a0.\n       a0 \\<in> eb.V0 \\<Longrightarrow>\n       \\<exists>b0. b0 \\<in> ea.V0 \\<and> (a0, b0) \\<in> R\\<inverse>\n 5. \\<And>a a' b.\n       \\<lbrakk>(a, a') \\<in> eb.E; (a, b) \\<in> R\\<inverse>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b'.\n                            (b, b') \\<in> ea.E \\<and>\n                            (a', b') \\<in> R\\<inverse>", "thus \"\\<exists> b. b \\<in> g_V0 (stutter_extend B) \\<and> (a, b) \\<in> R\""], ["proof (prove)\nusing this:\n  a \\<in> ea.V0\n\ngoal (1 subgoal):\n 1. \\<exists>b. b \\<in> eb.V0 \\<and> (a, b) \\<in> R", "using s1.init_sim"], ["proof (prove)\nusing this:\n  a \\<in> ea.V0\n  ?a0.0 \\<in> a.V0 \\<Longrightarrow>\n  \\<exists>b0. b0 \\<in> b.V0 \\<and> (?a0.0, b0) \\<in> R\n\ngoal (1 subgoal):\n 1. \\<exists>b. b \\<in> eb.V0 \\<and> (a, b) \\<in> R", "by simp"], ["proof (state)\nthis:\n  \\<exists>b. b \\<in> eb.V0 \\<and> (a, b) \\<in> R\n\ngoal (4 subgoals):\n 1. \\<And>a a' b.\n       \\<lbrakk>(a, a') \\<in> ea.E; (a, b) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b'.\n                            (b, b') \\<in> eb.E \\<and> (a', b') \\<in> R\n 2. \\<And>a b.\n       \\<lbrakk>a \\<in> eb.V; (a, b) \\<in> R\\<inverse>\\<rbrakk>\n       \\<Longrightarrow> b \\<in> ea.V\n 3. \\<And>a0.\n       a0 \\<in> eb.V0 \\<Longrightarrow>\n       \\<exists>b0. b0 \\<in> ea.V0 \\<and> (a0, b0) \\<in> R\\<inverse>\n 4. \\<And>a a' b.\n       \\<lbrakk>(a, a') \\<in> eb.E; (a, b) \\<in> R\\<inverse>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b'.\n                            (b, b') \\<in> ea.E \\<and>\n                            (a', b') \\<in> R\\<inverse>", "next"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>a a' b.\n       \\<lbrakk>(a, a') \\<in> ea.E; (a, b) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b'.\n                            (b, b') \\<in> eb.E \\<and> (a', b') \\<in> R\n 2. \\<And>a b.\n       \\<lbrakk>a \\<in> eb.V; (a, b) \\<in> R\\<inverse>\\<rbrakk>\n       \\<Longrightarrow> b \\<in> ea.V\n 3. \\<And>a0.\n       a0 \\<in> eb.V0 \\<Longrightarrow>\n       \\<exists>b0. b0 \\<in> ea.V0 \\<and> (a0, b0) \\<in> R\\<inverse>\n 4. \\<And>a a' b.\n       \\<lbrakk>(a, a') \\<in> eb.E; (a, b) \\<in> R\\<inverse>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b'.\n                            (b, b') \\<in> ea.E \\<and>\n                            (a', b') \\<in> R\\<inverse>", "fix a a' b"], ["proof (state)\ngoal (4 subgoals):\n 1. \\<And>a a' b.\n       \\<lbrakk>(a, a') \\<in> ea.E; (a, b) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b'.\n                            (b, b') \\<in> eb.E \\<and> (a', b') \\<in> R\n 2. \\<And>a b.\n       \\<lbrakk>a \\<in> eb.V; (a, b) \\<in> R\\<inverse>\\<rbrakk>\n       \\<Longrightarrow> b \\<in> ea.V\n 3. \\<And>a0.\n       a0 \\<in> eb.V0 \\<Longrightarrow>\n       \\<exists>b0. b0 \\<in> ea.V0 \\<and> (a0, b0) \\<in> R\\<inverse>\n 4. \\<And>a a' b.\n       \\<lbrakk>(a, a') \\<in> eb.E; (a, b) \\<in> R\\<inverse>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b'.\n                            (b, b') \\<in> ea.E \\<and>\n                            (a', b') \\<in> R\\<inverse>", "assume \"(a, a') \\<in> g_E (stutter_extend A)\" \"(a, b) \\<in> R\""], ["proof (state)\nthis:\n  (a, a') \\<in> ea.E\n  (a, b) \\<in> R\n\ngoal (4 subgoals):\n 1. \\<And>a a' b.\n       \\<lbrakk>(a, a') \\<in> ea.E; (a, b) \\<in> R\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b'.\n                            (b, b') \\<in> eb.E \\<and> (a', b') \\<in> R\n 2. \\<And>a b.\n       \\<lbrakk>a \\<in> eb.V; (a, b) \\<in> R\\<inverse>\\<rbrakk>\n       \\<Longrightarrow> b \\<in> ea.V\n 3. \\<And>a0.\n       a0 \\<in> eb.V0 \\<Longrightarrow>\n       \\<exists>b0. b0 \\<in> ea.V0 \\<and> (a0, b0) \\<in> R\\<inverse>\n 4. \\<And>a a' b.\n       \\<lbrakk>(a, a') \\<in> eb.E; (a, b) \\<in> R\\<inverse>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b'.\n                            (b, b') \\<in> ea.E \\<and>\n                            (a', b') \\<in> R\\<inverse>", "thus \"\\<exists> b'. (b, b') \\<in> g_E (stutter_extend B) \\<and> (a', b') \\<in> R\""], ["proof (prove)\nusing this:\n  (a, a') \\<in> ea.E\n  (a, b) \\<in> R\n\ngoal (1 subgoal):\n 1. \\<exists>b'. (b, b') \\<in> eb.E \\<and> (a', b') \\<in> R", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(a, a') \\<in> stutter_extend_edges a.V a.E;\n     (a, b) \\<in> R\\<rbrakk>\n    \\<Longrightarrow> \\<exists>b'.\n                         (b, b') \\<in> stutter_extend_edges b.V b.E \\<and>\n                         (a', b') \\<in> R", "using s1.nodes_sim s1.step_sim s2.stuck_sim"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<in> a.V; (?a, ?b) \\<in> R\\<rbrakk>\n  \\<Longrightarrow> ?b \\<in> b.V\n  \\<lbrakk>(?a, ?a') \\<in> a.E; (?a, ?b) \\<in> R\\<rbrakk>\n  \\<Longrightarrow> \\<exists>b'. (?b, b') \\<in> b.E \\<and> (?a', b') \\<in> R\n  \\<lbrakk>(?a, ?b) \\<in> R\\<inverse>; ?b \\<notin> Domain a.E\\<rbrakk>\n  \\<Longrightarrow> ?a \\<notin> Domain b.E\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(a, a') \\<in> stutter_extend_edges a.V a.E;\n     (a, b) \\<in> R\\<rbrakk>\n    \\<Longrightarrow> \\<exists>b'.\n                         (b, b') \\<in> stutter_extend_edges b.V b.E \\<and>\n                         (a', b') \\<in> R", "by (blast\n          intro: stutter_extend_edgesI_edge stutter_extend_edgesI_stutter\n          elim: stutter_extend_edgesE)"], ["proof (state)\nthis:\n  \\<exists>b'. (b, b') \\<in> eb.E \\<and> (a', b') \\<in> R\n\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> eb.V; (a, b) \\<in> R\\<inverse>\\<rbrakk>\n       \\<Longrightarrow> b \\<in> ea.V\n 2. \\<And>a0.\n       a0 \\<in> eb.V0 \\<Longrightarrow>\n       \\<exists>b0. b0 \\<in> ea.V0 \\<and> (a0, b0) \\<in> R\\<inverse>\n 3. \\<And>a a' b.\n       \\<lbrakk>(a, a') \\<in> eb.E; (a, b) \\<in> R\\<inverse>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b'.\n                            (b, b') \\<in> ea.E \\<and>\n                            (a', b') \\<in> R\\<inverse>", "next"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> eb.V; (a, b) \\<in> R\\<inverse>\\<rbrakk>\n       \\<Longrightarrow> b \\<in> ea.V\n 2. \\<And>a0.\n       a0 \\<in> eb.V0 \\<Longrightarrow>\n       \\<exists>b0. b0 \\<in> ea.V0 \\<and> (a0, b0) \\<in> R\\<inverse>\n 3. \\<And>a a' b.\n       \\<lbrakk>(a, a') \\<in> eb.E; (a, b) \\<in> R\\<inverse>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b'.\n                            (b, b') \\<in> ea.E \\<and>\n                            (a', b') \\<in> R\\<inverse>", "fix b a"], ["proof (state)\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> eb.V; (a, b) \\<in> R\\<inverse>\\<rbrakk>\n       \\<Longrightarrow> b \\<in> ea.V\n 2. \\<And>a0.\n       a0 \\<in> eb.V0 \\<Longrightarrow>\n       \\<exists>b0. b0 \\<in> ea.V0 \\<and> (a0, b0) \\<in> R\\<inverse>\n 3. \\<And>a a' b.\n       \\<lbrakk>(a, a') \\<in> eb.E; (a, b) \\<in> R\\<inverse>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b'.\n                            (b, b') \\<in> ea.E \\<and>\n                            (a', b') \\<in> R\\<inverse>", "assume \"b \\<in> g_V (stutter_extend B)\" \"(b, a) \\<in> R\\<inverse>\""], ["proof (state)\nthis:\n  b \\<in> eb.V\n  (b, a) \\<in> R\\<inverse>\n\ngoal (3 subgoals):\n 1. \\<And>a b.\n       \\<lbrakk>a \\<in> eb.V; (a, b) \\<in> R\\<inverse>\\<rbrakk>\n       \\<Longrightarrow> b \\<in> ea.V\n 2. \\<And>a0.\n       a0 \\<in> eb.V0 \\<Longrightarrow>\n       \\<exists>b0. b0 \\<in> ea.V0 \\<and> (a0, b0) \\<in> R\\<inverse>\n 3. \\<And>a a' b.\n       \\<lbrakk>(a, a') \\<in> eb.E; (a, b) \\<in> R\\<inverse>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b'.\n                            (b, b') \\<in> ea.E \\<and>\n                            (a', b') \\<in> R\\<inverse>", "thus \"a \\<in> g_V (stutter_extend A)\""], ["proof (prove)\nusing this:\n  b \\<in> eb.V\n  (b, a) \\<in> R\\<inverse>\n\ngoal (1 subgoal):\n 1. a \\<in> ea.V", "using s2.nodes_sim"], ["proof (prove)\nusing this:\n  b \\<in> eb.V\n  (b, a) \\<in> R\\<inverse>\n  \\<lbrakk>?a \\<in> b.V; (?a, ?b) \\<in> R\\<inverse>\\<rbrakk>\n  \\<Longrightarrow> ?b \\<in> a.V\n\ngoal (1 subgoal):\n 1. a \\<in> ea.V", "by simp"], ["proof (state)\nthis:\n  a \\<in> ea.V\n\ngoal (2 subgoals):\n 1. \\<And>a0.\n       a0 \\<in> eb.V0 \\<Longrightarrow>\n       \\<exists>b0. b0 \\<in> ea.V0 \\<and> (a0, b0) \\<in> R\\<inverse>\n 2. \\<And>a a' b.\n       \\<lbrakk>(a, a') \\<in> eb.E; (a, b) \\<in> R\\<inverse>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b'.\n                            (b, b') \\<in> ea.E \\<and>\n                            (a', b') \\<in> R\\<inverse>", "next"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a0.\n       a0 \\<in> eb.V0 \\<Longrightarrow>\n       \\<exists>b0. b0 \\<in> ea.V0 \\<and> (a0, b0) \\<in> R\\<inverse>\n 2. \\<And>a a' b.\n       \\<lbrakk>(a, a') \\<in> eb.E; (a, b) \\<in> R\\<inverse>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b'.\n                            (b, b') \\<in> ea.E \\<and>\n                            (a', b') \\<in> R\\<inverse>", "fix b"], ["proof (state)\ngoal (2 subgoals):\n 1. \\<And>a0.\n       a0 \\<in> eb.V0 \\<Longrightarrow>\n       \\<exists>b0. b0 \\<in> ea.V0 \\<and> (a0, b0) \\<in> R\\<inverse>\n 2. \\<And>a a' b.\n       \\<lbrakk>(a, a') \\<in> eb.E; (a, b) \\<in> R\\<inverse>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b'.\n                            (b, b') \\<in> ea.E \\<and>\n                            (a', b') \\<in> R\\<inverse>", "assume \"b \\<in> g_V0 (stutter_extend B)\""], ["proof (state)\nthis:\n  b \\<in> eb.V0\n\ngoal (2 subgoals):\n 1. \\<And>a0.\n       a0 \\<in> eb.V0 \\<Longrightarrow>\n       \\<exists>b0. b0 \\<in> ea.V0 \\<and> (a0, b0) \\<in> R\\<inverse>\n 2. \\<And>a a' b.\n       \\<lbrakk>(a, a') \\<in> eb.E; (a, b) \\<in> R\\<inverse>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b'.\n                            (b, b') \\<in> ea.E \\<and>\n                            (a', b') \\<in> R\\<inverse>", "thus \"\\<exists> a. a \\<in> g_V0 (stutter_extend A) \\<and> (b, a) \\<in> R\\<inverse>\""], ["proof (prove)\nusing this:\n  b \\<in> eb.V0\n\ngoal (1 subgoal):\n 1. \\<exists>a. a \\<in> ea.V0 \\<and> (b, a) \\<in> R\\<inverse>", "using s2.init_sim"], ["proof (prove)\nusing this:\n  b \\<in> eb.V0\n  ?a0.0 \\<in> b.V0 \\<Longrightarrow>\n  \\<exists>b0. b0 \\<in> a.V0 \\<and> (?a0.0, b0) \\<in> R\\<inverse>\n\ngoal (1 subgoal):\n 1. \\<exists>a. a \\<in> ea.V0 \\<and> (b, a) \\<in> R\\<inverse>", "by simp"], ["proof (state)\nthis:\n  \\<exists>a. a \\<in> ea.V0 \\<and> (b, a) \\<in> R\\<inverse>\n\ngoal (1 subgoal):\n 1. \\<And>a a' b.\n       \\<lbrakk>(a, a') \\<in> eb.E; (a, b) \\<in> R\\<inverse>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b'.\n                            (b, b') \\<in> ea.E \\<and>\n                            (a', b') \\<in> R\\<inverse>", "next"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a a' b.\n       \\<lbrakk>(a, a') \\<in> eb.E; (a, b) \\<in> R\\<inverse>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b'.\n                            (b, b') \\<in> ea.E \\<and>\n                            (a', b') \\<in> R\\<inverse>", "fix b b' a"], ["proof (state)\ngoal (1 subgoal):\n 1. \\<And>a a' b.\n       \\<lbrakk>(a, a') \\<in> eb.E; (a, b) \\<in> R\\<inverse>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b'.\n                            (b, b') \\<in> ea.E \\<and>\n                            (a', b') \\<in> R\\<inverse>", "assume \"(b, b') \\<in> g_E (stutter_extend B)\" \"(b, a) \\<in> R\\<inverse>\""], ["proof (state)\nthis:\n  (b, b') \\<in> eb.E\n  (b, a) \\<in> R\\<inverse>\n\ngoal (1 subgoal):\n 1. \\<And>a a' b.\n       \\<lbrakk>(a, a') \\<in> eb.E; (a, b) \\<in> R\\<inverse>\\<rbrakk>\n       \\<Longrightarrow> \\<exists>b'.\n                            (b, b') \\<in> ea.E \\<and>\n                            (a', b') \\<in> R\\<inverse>", "thus \"\\<exists> a'. (a, a') \\<in> g_E (stutter_extend A) \\<and> (b', a') \\<in> R\\<inverse>\""], ["proof (prove)\nusing this:\n  (b, b') \\<in> eb.E\n  (b, a) \\<in> R\\<inverse>\n\ngoal (1 subgoal):\n 1. \\<exists>a'. (a, a') \\<in> ea.E \\<and> (b', a') \\<in> R\\<inverse>", "apply simp"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<lbrakk>(b, b') \\<in> stutter_extend_edges b.V b.E;\n     (a, b) \\<in> R\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a'.\n                         (a, a') \\<in> stutter_extend_edges a.V a.E \\<and>\n                         (a', b') \\<in> R", "using s2.nodes_sim s2.step_sim s1.stuck_sim"], ["proof (prove)\nusing this:\n  \\<lbrakk>?a \\<in> b.V; (?a, ?b) \\<in> R\\<inverse>\\<rbrakk>\n  \\<Longrightarrow> ?b \\<in> a.V\n  \\<lbrakk>(?a, ?a') \\<in> b.E; (?a, ?b) \\<in> R\\<inverse>\\<rbrakk>\n  \\<Longrightarrow> \\<exists>b'.\n                       (?b, b') \\<in> a.E \\<and> (?a', b') \\<in> R\\<inverse>\n  \\<lbrakk>(?a, ?b) \\<in> R; ?b \\<notin> Domain b.E\\<rbrakk>\n  \\<Longrightarrow> ?a \\<notin> Domain a.E\n\ngoal (1 subgoal):\n 1. \\<lbrakk>(b, b') \\<in> stutter_extend_edges b.V b.E;\n     (a, b) \\<in> R\\<rbrakk>\n    \\<Longrightarrow> \\<exists>a'.\n                         (a, a') \\<in> stutter_extend_edges a.V a.E \\<and>\n                         (a', b') \\<in> R", "by (blast\n          intro: stutter_extend_edgesI_edge stutter_extend_edgesI_stutter\n          elim: stutter_extend_edgesE)"], ["proof (state)\nthis:\n  \\<exists>a'. (a, a') \\<in> ea.E \\<and> (b', a') \\<in> R\\<inverse>\n\ngoal:\nNo subgoals!", "qed"], ["proof (state)\nthis:\n  bisimulation R (stutter_extend A) (stutter_extend B)\n\ngoal:\nNo subgoals!", "qed"], ["", "lemma (in lbisimulation) lstutter_extend: \"lbisimulation R (stutter_extend A) (stutter_extend B)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. lbisimulation R (stutter_extend A) (stutter_extend B)", "proof -"], ["proof (state)\ngoal (1 subgoal):\n 1. lbisimulation R (stutter_extend A) (stutter_extend B)", "interpret se: bisimulation R \"stutter_extend A\" \"stutter_extend B\""], ["proof (prove)\ngoal (1 subgoal):\n 1. bisimulation R (stutter_extend A) (stutter_extend B)", "by (rule stutter_extend)"], ["proof (state)\ngoal (1 subgoal):\n 1. lbisimulation R (stutter_extend A) (stutter_extend B)", "show ?thesis"], ["proof (prove)\ngoal (1 subgoal):\n 1. lbisimulation R (stutter_extend A) (stutter_extend B)", "by (unfold_locales, auto simp: s1.labeling_consistent)"], ["proof (state)\nthis:\n  lbisimulation R (stutter_extend A) (stutter_extend B)\n\ngoal:\nNo subgoals!", "qed"], ["", "definition stutter_extend_en :: \"('s\\<Rightarrow>'a set) \\<Rightarrow> ('s \\<Rightarrow> 'a option set)\" where\n    \"stutter_extend_en en \\<equiv> \\<lambda>s. let as = en s in if as={} then {None} else Some`as\""], ["", "definition stutter_extend_ex :: \"('a \\<Rightarrow> 's \\<Rightarrow> 's) \\<Rightarrow> ('a option \\<Rightarrow> 's \\<Rightarrow> 's)\" where\n    \"stutter_extend_ex ex \\<equiv> \\<lambda>None \\<Rightarrow> id | Some a \\<Rightarrow> ex a\""], ["", "abbreviation stutter_extend_enex \n    :: \"('s\\<Rightarrow>'a set) \\<times> ('a \\<Rightarrow> 's \\<Rightarrow> 's) \\<Rightarrow> ('s \\<Rightarrow> 'a option set) \\<times> ('a option \\<Rightarrow> 's \\<Rightarrow> 's)\"\n  where\n   \"stutter_extend_enex \\<equiv> map_prod stutter_extend_en stutter_extend_ex\""], ["", "lemma stutter_extend_pred_of_enex_conv:\n    \"stutter_extend_edges UNIV (rel_of_enex enex) = rel_of_enex (stutter_extend_enex enex)\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stutter_extend_edges UNIV (rel_of_enex enex) =\n    rel_of_enex (stutter_extend_enex enex)", "unfolding rel_of_enex_def stutter_extend_edges_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (let (en, ex) = enex in {(s, ex a s) |s a. a \\<in> en s}) \\<union>\n    {(v, v) |v.\n     v \\<in> UNIV \\<and>\n     v \\<notin> Domain\n                 (let (en, ex) = enex\n                  in {(s, ex a s) |s a. a \\<in> en s})} =\n    (let (en, ex) = stutter_extend_enex enex\n     in {(s, ex a s) |s a. a \\<in> en s})", "apply (auto simp: stutter_extend_en_def stutter_extend_ex_def split: prod.splits)"], ["proof (prove)\ngoal (2 subgoals):\n 1. \\<And>x1 x2 s aa.\n       \\<lbrakk>enex = (x1, x2); aa \\<in> x1 s\\<rbrakk>\n       \\<Longrightarrow> \\<exists>sa.\n                            (x1 sa = {} \\<longrightarrow>\n                             s = sa \\<and> x2 aa s = sa) \\<and>\n                            (x1 sa \\<noteq> {} \\<longrightarrow>\n                             s = sa \\<and>\n                             (\\<exists>a.\n                                 x2 aa s =\n                                 (case a of None \\<Rightarrow> id\n                                  | Some x \\<Rightarrow> x2 x)\n                                  sa \\<and>\n                                 a \\<in> Some ` x1 sa))\n 2. \\<And>x1 x2 v.\n       \\<lbrakk>enex = (x1, x2);\n        v \\<notin> Domain {(s, x2 a s) |s a. a \\<in> x1 s}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s.\n                            (x1 s = {} \\<longrightarrow> v = s) \\<and>\n                            (x1 s \\<noteq> {} \\<longrightarrow>\n                             v = s \\<and>\n                             (\\<exists>a.\n                                 v =\n                                 (case a of None \\<Rightarrow> id\n                                  | Some x \\<Rightarrow> x2 x)\n                                  s \\<and>\n                                 a \\<in> Some ` x1 s))", "apply force"], ["proof (prove)\ngoal (1 subgoal):\n 1. \\<And>x1 x2 v.\n       \\<lbrakk>enex = (x1, x2);\n        v \\<notin> Domain {(s, x2 a s) |s a. a \\<in> x1 s}\\<rbrakk>\n       \\<Longrightarrow> \\<exists>s.\n                            (x1 s = {} \\<longrightarrow> v = s) \\<and>\n                            (x1 s \\<noteq> {} \\<longrightarrow>\n                             v = s \\<and>\n                             (\\<exists>a.\n                                 v =\n                                 (case a of None \\<Rightarrow> id\n                                  | Some x \\<Rightarrow> x2 x)\n                                  s \\<and>\n                                 a \\<in> Some ` x1 s))", "apply blast"], ["proof (prove)\ngoal:\nNo subgoals!", "done"], ["", "lemma stutter_extend_en_Some_eq[simp]:\n    \"Some a \\<in> stutter_extend_en en gc \\<longleftrightarrow> a \\<in> en gc\"\n    \"stutter_extend_ex ex (Some a) gc = ex a gc\""], ["proof (prove)\ngoal (1 subgoal):\n 1. (Some a \\<in> stutter_extend_en en gc) = (a \\<in> en gc) &&&\n    stutter_extend_ex ex (Some a) gc = ex a gc", "unfolding stutter_extend_en_def stutter_extend_ex_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (Some a\n     \\<in> (let as = en gc in if as = {} then {None} else Some ` as)) =\n    (a \\<in> en gc) &&&\n    (case Some a of None \\<Rightarrow> id | Some a \\<Rightarrow> ex a) gc =\n    ex a gc", "by auto"], ["", "lemma stutter_extend_ex_None_eq[simp]:\n    \"stutter_extend_ex ex None = id\""], ["proof (prove)\ngoal (1 subgoal):\n 1. stutter_extend_ex ex None = id", "unfolding stutter_extend_ex_def"], ["proof (prove)\ngoal (1 subgoal):\n 1. (case None of None \\<Rightarrow> id | Some a \\<Rightarrow> ex a) = id", "by auto"], ["", "end"]]}